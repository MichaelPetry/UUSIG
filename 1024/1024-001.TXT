@CAT,P    1024-001-001.,///10000
@ASG,T    TEMP.,///10000
@ELT,OI TEMP.1024-001-001,,,130203053241,000
)@@G@@**PF**@@@^&!@@@@@@@@@@@[@TO@@@]FE^?5@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@]O@@@@@@@@@@@@@@@@@@@@@@@@AB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@@@@@@@@@@@@@@@@@@@@@@A@@@@@@@@@@@@@@&@@@AC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@U@@@@@@@@@@@@@@@@@@@@6@@@@@@@@@@@3@@@@@S@@@AD
)@@G@@@@'@@@@@@@@@@@@@@\@@@@@@@@?@@@@@+@@R@@@@@@@]O@@@@@@@@@@@H@@@@@@@@@@@@@@@AE
)@@G@@@@@@@@@@@@@%@@@@@@@@;@@@@@@@@Y@@@@@@@@@@@(@@@@@@@@@@@@@@T@@@@@@@@@@@@@@@AF
)@@G@@@@@@@@@@L@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@J@@@@@@@]A@@!@@"@@@@@5@@]@@I@@@AG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@]B@@@@@@@@@@@C@@@@@@@[+@@@@@@@@Q@@@@@@@@@AH
)@@G@@@@@@@@@@@@@@@@@@]H@@^@@@@@@@@@@@$@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AI
)@@G@@@@@@@7@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@P@@*@@@@@@@@@@@@@@@AJ
)@@G@@@@@@@.@@@@]F@@@@@@@]J@@@@@@@@_@@@@@8@[<@@@@@@@@@@@@@@@@@@@@@@@@@@Z@@M@@@AK
)@@G@@@@V@@@@]@@@@@@@@@O@@K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-@@@@@@@@@@@@@@@@@@AL
)@@G@@@@@@@1@@@@@@@@@@@@@@E@@@@@@@@<@@@@@@@@@@@@@[@@@@@@@@@F@@N@@:@@@@@@@@@@@@AM
)@@G@@@@@@@X@@@@@@@@2@@@@@@@@@@@@@@@@@/@@@@@@@@9@@>@@@@@@@@D@@#@@@@@@@@@@@E@]OAN
)@@G@@DEBUG       @@@@@@@@[@[H            @ @@@[]@@@^T@@@@W@G2@^YFPF$AM       AO
)@@G@@@@@@@,@@[@[*            @ @@@[[@@@]5@@@@)TDF$ AFBLDT$F      @@@@@@@@[@[]AP
)@@G@@            @ @@@[[@@@@J@@@@<IH3Y DFGETVAR      @@@@@@@@[@[R            AQ
)@@G@@@ @[@][@@@[[@@@@<XHI<BPFINTRP       @@@@@@@@[@[W            @ @[@][@@@@SAR
)@@G@@@@@@=YH]IBTFED          @@@@@@@@[@@BPROC        @ @@@[]@@@Y6@@@@=6C3IFAFAS
)@@G@@ED          @@@@@@@@ @]LPROC        @@@[CV@@C@^\@@@[#?C4&FAFPROC        AT
)@@G@@@@@@@@@@[@[!            @ @@@[[@@@@%@@@[C<FQ!FAFPINIT       @@@@@@@@[@[(AU
)@@G@@            @ @@@[[@@@@$@@@[DHK58FFFPINPUT      @@@@@@@@[@[%            AV
)@@G@@@ @^@ [@@@[H@@@[D4GYUFGFIFWKR       @@@@@@@@[@[S            @ @[@][@@@[#AW
)@@G@@@@@[F[HWUFNFCALL$WK     @@@@@@@@[@[#            @ @@@[[@@@@=@@@[G^KYWC FAX
)@@G@@LD$TBL      @@@@@@@@[@[X            @ @@@[[@@@@#@@@[G*E (GAFPRINTV      AY
)@@G@@@@@@@@@@[@[?            @ @^@ [@@@]X@@@[G:HJ6]EGTF$IB       @@@@@W@@[@[/AZ
)@@G@@            @ @[@][@@@@E@@@[JCGQF[NGTF$DLT      @@@@]M@@[@['            BA
)@@G@@@ @[@][@@@@?@@@[JMG?,[NGPRINTL      @@@@@@@@[@[:            @ @[@][@@@]HBB
)@@G@@@@@[J"DXJ]]GPERFORM     @@@@@)@@[@[$            @ @[@][@@@#+@@@[MFD7@]]GBC
)@@G@@TF$IA       @@@@@@@@[@[;            @ @#@^[@@@]D@@@[P!B37#EGTF$RMR      BD
)@@G@@@@@@@@@@[@["            @ @[@][@@@B*@@@[R6BQL#LGTF$C        @@@@@4@@[@[7BE
)@@G@@            @ @#@^[@@@@!@@@[ZYBS;#LGTF$MVE      @@@@@@@@[@[.            BF
)@@G@@@ @B@ [@@@@3@@@[)FCGZ#LGTF$CPY      @@@@@@@@[@[8            @ @^@ [@@@@%BG
)@@G@@@@@[)"CHL#LGTF$DBP      @@@@@@@@[@[9            @ @H@ [@@@[B@@@[-*D![^DGBH
)@@G@@PARSE       @@@@]D@@[@[>            @ @#@^]@@@@W@@@[+\CO!DBEDUMMY       BI
)@@G@@@@@@@@@@[@[L            @ @@@[[@@@@[@@@[<FD6/GOEPACKPG      @@@@@=@@[@[=BJ
)@@G@@            @ @@@[[@@@@$@@@[<GDL6GSESF$AM       @@@@@@@@[@[4            BK
)@@G@@@ @@@[]@@@#A@@@[<3B5A[LFDB$AM       @@@@@@@@[@[F            @ @@@[[@@@[#BL
)@@G@@@@@[&9G@7]GFF$ASG       @@@@@@@@[@[O            @ @@@[[@@@@C@@@[$/CT"##FBM
)@@G@@CALC        @@@@@@@@ @@@            @@@[*Y@@B@@U@@@[*^FP D FCONF-1      BN
)@@G@@@@@@][@@[@[D            @ @ @ [@@@#=@@@[*>JIT[NGUNLOAD      @@@@@@@@[@[_BO
)@@G@@            @ @[@][@@@@8@@@[?DDOG]]GCF$AM       @@@@@@@@[@[^            BP
)@@G@@@ @[@]]@@@[K@@@[![DH_]NGCHKPT       @@@@@@@@[@[A            @ @]@#[@@@@!BQ
)@@G@@@@@[,LC?"]OGCONF-2      @@@@@@@@[@[E            @ @B@ [@@@]@@@@[,"CT_]TGBR
)@@G@@SORT        @@@@@@@@[@[5            @ @@@[[@@@@4@@@[0"C2*#FGPATCH       BS
)@@G@@@@@@@@@@[@[&            @ @B@ [@@@]2@@@[12F8J#NGRELERR      @@@@@@@@[@[\BT
)@@G@@            @ @[@][@@@^*@@@[4=B_,#RGSCAN        @@@@@@@@[@[3            BU
)@@G@@@ @ @ [@@@A?@@@[9GG#N#SGRELOAD      @@@@@0@@[@[0            @ @@@[]@@@L;BV
)@@G@@@@@[_8HO!#YGCOMPACT     @@@@@@@@[@[C            @ @@@[[@@@@R@@@]L3C9Y[IGBW
)@@G@@DECALC      @@@@@@@@[@[I            @ @@@[[@@@@_@@@]MEC94[IGDLTPGE      BX
)@@G@@@@@@@@@@[@[K            @ @@@[[@@@[<@@@]NDC'#[IGREORDLT     @@@@@@@@[@[1BY
)@@G@@            @ @@@[[@@@@3@@@]O?C'([IGDBP$APS     @@@@@@@@[@[G            BZ
)@@G@@@ @@@[[@@@@X@@@]PZCX:[QGINPUT       @@@@@@@@[@[V            @ @@@[[@@@@8CA
)@@G@@@@@]P/C"(#JGRESTORE     @@@@@@@@[@[2            @ @@@[[@@@] @@@]Q4C[&#LGCB
)@@G@@ART         @@@@@@@@[@[[            @ @@@[[@@@  @@@]S9CT5#ZGIIKREORG    CC
)@@G@@@@@@@@@@[@[U            @ @@@[[@@@@?@@@]X"H_Y^DGMAINREORG   @@@@@@@@[@[-CD
)@@G@@            @ @@@[[@@@A/@@@]Y%I[C^DGDF$AMR      @@@@@@@@[@[J            CE
)@@G@@@ @@@[[@@@[Q@@@]>&I]&^DGSYM$AM      @@@@@@@@[@[6            @ @@@[[@@@[TCF
)@@G@@@@@]&/I#8^DGEDIT$WK     @@@@@@@@[@[M            @ @@@[[@@@[,@@@]*PG/L[JGCG
)@@G@@ERROR       @@@@@@@@[@[N            @ @@@[[@@@@N@@@]%#HY"[NGCHANGE      CH
)@@G@@@@@@@@@@[@[             @ @@@[[@@@[>@@@]%QE"W]FGGETSET      @@@@@@@@[@[QCI
)@@G@@            @ @@@[[@@@[S@@@]:;H8S]FGLOCATE      @@@@@@@@[@[Z            CJ
)@@G@@@ @@@[[@@@#Q@@@]!ND#6#]GLET         @@@@@@@@[@[Y            @ @@@[[@@@ XCK
)@@G@@@@@]0(F%(#KGGETRSV      @@@@@@@@[@[P            @ @@@[[@@@[G@@@]6AJ[C#MGCL
)@@G@@MAINED      @@@@@@@@[@[)            @ @@@[[@@@[O@@@]7MIA&^DGRDCTBL      CM
)@@G@@@@@@@@@@[@[,            @ @@@[[@@@@3@@@]8&GYD^JGIIKED       @@@@@@@@[@[TCN
)@@G@@            @ @@@[[@@@@\@@@]9TC/^^KGCOMMON      @@@@@@@@[@[B            CO
)@@G@@@ @@@[]@@@@>@@@]'CG_*BTFART         @@@@@@@@ @@@            @@@];S@@#@@:CP
)@@G@@@@@]'!CY-^NGBLDT$F      @@@@@@@@ @@@            @@@];Y@@[@@#@@@];VCY&^NGCQ
)@@G@@CALL$WK     @@@@@@@@ @@@            @@@];>@@[@@A@@@];ZCY%^NGCF$AM       CR
)@@G@@@@@@@@@@ @@@            @@@];7@@^@@L@@@];&CY\^NGCHANGE      @@@@@@@@ @@@CS
)@@G@@            @@@]/D@@#@@I@@@];;CY4^NGCHKPT       @@@@@@@@ @@@            CT
)@@G@@@@@]/S@@#@@G@@@]/GCY'^NGCOMMON      @@@@@@@@ @@@            @@@]/+@@#@@BCU
)@@G@@@@@]/VCZ]^NGCOMPACT     @@@@@@@@ @@@            @@@]/(@@]@@^@@@]/>CZA^NGCV
)@@G@@CONF-1      @@@@@@@@ @@@            @@@].M@@A@@$@@@]/:CZR^NGCONF-2      CW
)@@G@@@@@@@@@@ @@@            @@@].:@@#@@N@@@].SCZZ^NGDB$AM       @@@@@@@@ @@@CX
)@@G@@            @@@].8@@#@@E@@@].,CZ1^NGDBP$APS     @@@@@@@@ @@@            CY
)@@G@@@@@]._@@[@@^@@@].;CZ4^NGDEBUG       @@@@@@@@ @@@            @@@]_ @@#@[ CZ
)@@G@@@@@]"@C)[^NGDECALC      @@@@@@@@ @@@            @@@]_N@@#@@F@@@]_CC)B^NGDA
)@@G@@DF$AMR      @@@@@@@@ @@@            @@@]_%@@^@@O@@@]_QC)K^NGDLTPGE      DB
)@@G@@@@@@@@@@ @@@            @@@#@@@@A@@M@@@]_,C)*^NGDUMMY       @@@@@@@@ @@@DC
)@@G@@            @@@#@B@@[@@[@@@#@AC):^NGEDIT$WK     @@@@@@@@ @@@            DD
)@@G@@@@@#@U@@ @@M@@@#@CC)6^NGERROR       @@@@@@@@ @@@            @@@#@Z@@[@@@DE
)@@G@@@@@#@ZC-[^NGF$ASG       @@@@@@@@ @@@            @@@#@<@@]@@#@@@#@)C-B^NGDF
)@@G@@GETRSV      @@@@@@@@ @@@            @@@#@1@@]@@G@@@#@>C-H^NGGETSET      DG
)@@G@@@@@@@@@@ @@@            @@@#@_@@]@@G@@@#@3C-M^NGGETVAR      @@@@@@@@ @@@DH
)@@G@@            @@@#[D@@[@@C@@@#[[C-R^NGIFWKR       @@@@@@@@ @@@            DI
)@@G@@@@@#[N@@[@@D@@@#[EC-Z^NGIIKED       @@@@@@@@ @@@            @@@#[<@@^@@JDJ
)@@G@@@@@#[OC-(^NGIIKREORG    @@@@@@@@ @@@            @@@#['@@^@@N@@@#[$C-6^NGDK
)@@G@@INPUT       @@@@@@@@ @@@            @@@#]A@@[@@C@@@#["C-;^NGINTRP       DL
)@@G@@@@@@@@@@ @@@            @@@#]G@@#@@ @@@#]BC+-^NGLD$TBL      @@@@@@@@ @@@DM
)@@G@@            @@@#]K@@[@@[@@@#]JC+6^NGLET         @@@@@@@@ @@@            DN
)@@G@@@@@##H@@#@@/@@@#]LC<C^NGLOCATE      @@@@@@@@ @@@            @@@##4@@^@@=DO
)@@G@@@@@##KC<K^NGMAINED      @@@@@@@@ @@@            @@@#^I@@I@@Q@@@##8C<T^NGDP
)@@G@@MAINREORG   @@@@@@@@ @@@            @@@# 5@@H@[T@@@#^WC<0^NGMAPED       DQ
)@@G@@@@@@@@@[ @]             @@@#A @@]@@#@@@#A]C<2^NGMAPREORG    @@@@@@@[ @]^DR
)@@G@@            @@@#AE@@]@@#@@@#ABC<5^NGPACKPG      @@@@@@@@ @@@            DS
)@@G@@@@@#AK@@[@@^@@@#AGC<.^NGPARSE       @@@@@@@@ @@@            @@@#AO@@[@@#DT
)@@G@@@@@#ALC=@^NGPATCH       @@@@@@@@ @@@            @@@#A,@@^@@T@@@#APC=B^NGDU
)@@G@@PERFORM     @@@@@@@@ @@@            @@@#B-@@ @@\@@@#A2C=N^NGPF$AM       DV
)@@G@@@@@@@@@@ @@@            @@@#B"@@^@@S@@@#B&C=V^NGPINIT       @@@@@@@@ @@@DW
)@@G@@            @@@#CH@@#@@F@@@#C]C=-^NGPINPUT      @@@@@@@@ @@@            DX
)@@G@@@@@#CS@@[@@C@@@#CKC==^NGPRINTL      @@@@@@@@ @@@            @@@#C2@@#@@TDY
)@@G@@@@@#CTC=?^NGPRINTV      @@@@@@@@ @@@            @@@#DL@@#@@W@@@#C5C=5^NGDZ
)@@G@@PROC        @@@@@@@@ @@@            @@@#DV@@]@@B@@@#DOC=9^NGRDCTBL      EA
)@@G@@@@@@@@@@ @@@            @@@#D$@@#@@E@@@#DXC=.^NGRELERR      @@@@@@@@ @@@EB
)@@G@@            @@@#E]@@I@@S@@@#D%C>D^NGRELOAD      @@@@@@@@ @@@            EC
)@@G@@@@@#GT@@K@]D@@@#EKC>%^NGREORDLT     @@@@@@@@ @@@            @@@#G3@@ @@EED
)@@G@@@@@#G(C>,^NGRESTORE     @@@@@@@@ @@@            @@@#HL@@#@@T@@@#G8C>6^NGEE
)@@G@@SCAN        @@@@@@@@ @@@            @@@#IF@@#@@7@@@#HOC&]^NGSF$AM       EF
)@@G@@@@@@@@@@ @@@            @@@#I%@@ @@W@@@#IIC&H^NGSORT        @@@@@@@@ @@@EG
)@@G@@            @@@#I'@@#@@F@@@#I\C&O^NGSYM$AM      @@@@@@@@ @@@            EH
)@@G@@@@@#JK@@#@@N@@@#I.C&U^NGTF$C        @@@@@@@@ @@@            @@@#JT@@#@@AEI
)@@G@@@@@#JNC&X^NGTF$CPY      @@@@@@@@ @@@            @@@#J)@@[@@^@@@#JWC&)^NGEJ
)@@G@@TF$DBP      @@@@@@@@ @@@            @@@#J%@@]@@D@@@#J-C&>^NGTF$DLT      EK
)@@G@@@@@@@@@@ @@@            @@@#J1@@]@@ @@@#J?C&*^NGTF$IA       @@@@@@@@ @@@EL
)@@G@@            @@@#K@@@^@@H@@@#J3C&?^NGTF$IB       @@@@@@@@ @@@            EM
)@@G@@@@@#KA@@[@@]@@@#K^C&\^NGTF$MVE      @@@@@@@@ @@@            @@@#KH@@]@@AEN
)@@G@@@@@#KBC&2^NGTF$RMR      @@@@@@@@ @@@            @@@#LG@@K@@.@@@#KJC$ ^NGEO
)@@G@@UNLOAD      @@@@@@@@ @@@            @@@#L>@@#@@D@@@#LWC$E^NGCONF-3      EP
)@@G@@@@@@@@@@[@]]            @ @^@ [@@@^$@@@#L*D4D^NGCLSEG       @@@@@@@@[@]#EQ
)@@G@@            @ @[@][@@@@S@@@#QJD4*^NGCONF-3      @@@@@@@@ @@@            ER
)@@G@@@@@#RI@@^@@$@@@#Q$D5N^NGCLSEG       @@@@@@@@ @@@            @@@#RU@@^@@CES
)@@G@@@@@#RMD5Y^NGMAPREORG    @@@@@@@@[@@@            @ @@@[[@@@@E@@@#RYFQ@^OGET
)@@G@@MAPED       @@@@@@@@[@@@            @ @@@[[@@@@G@@@#R*FQ*^OGEQUATE      EU
)@@G@@@@@@@@@@ @]C            @@@#R4@@D@@@@@@#R4F%>^OGSNO         @@@@@@@@ @@@EV
)@@G@@            @@@#(F@@]@LI@@@#R.G$5^QGEQUATE      @@@@@@@@[@@@            EW
)@@G@@@ @[@][@@@]E@@@#(HJAV^RGMERGE       @@@@@@@@[@]E            @ @#@^]@@@[REX
)@@G@@@@@#:RDA=^UGMERGE       @@@@@@@@ @@@            @@@#?9@@]@@F@@@#?,DBF^UGEY
)@@G@@DF$AMW      @@@@@@@@[@]G            @ @@@[[@@@]S@@@#?;BY# ^GDF$AMW      EZ
)@@G@@@@@@@@@@ @@@            @@@#\?@@^@@T@@@#\NB+W ^GBLDD$F      @@@@@@@@[@]IFA
)@@G@@            @ @[@][@@@@K@@@#\0C!5 ^GBLDD$F      @@@@@@@@ @@@            FB
)@@G@@@@@#0#@@[@@#@@@#0@C,O ^GINSERT      @@@@@@@@[@]K            @ @C@ [@@@DFFC
)@@G@@@@@#0^G!5  GINSERT      @@@@@@@@ @@@            @@@#'I@@^@@_@@@#9JG,7  GFD
)@@G@@ED          @@@@@@@@A@@@            )@@]@@@@@@S$@@@#'MG7C  GKF$AM       FE
)@@G@@@@@@@@@@[@]N            @ @[@][@@@^;@@@^M9B?Y CGKF$AM       @@@@@@@@ @@@FF
)@@G@@            @@@^S+@@^@@,@@@^R4B?5 CGREORG       @@@@@@@@A@@@            FG
)@@G@@)@@]@@@@@@IB@@@^S&B8H CGKF$AM       @@@@@@@@[@@@            @ @[@][@@@^;FH
)@@G@@@@@^&2B?Y CGKF$AM       @@@@@@@@ @@@            @@@^?V@@^@@,@@@^:!B?5 CGFI
)@@G@@REORG       @@@@@@@@A@@@            )@@]@@@@@@IB@@@^?ZB8H CG@@@@@@@@@@@@FJ
)@@G@@@]V@@@)@ @@@            @@@^(V@@[@@#@@@^(SB<D ^GED          @]W@@@)@A@@@FK
)@@G@@            )@@]@@@@@@S&@@@^(WB=, ^GBLDD$F      @@@@@@@@[@@@            FL
)@@G@@@ @[@][@@@@K@@@ ]]C!5 ^GBLDD$F      @@@@@@@@ @@@            @@@ ]P@@[@@#FM
)@@G@@@@@ ]MC,O ^GED          @@@@@@@@A@@@            )@@]@@@@@@S&@@@ ]QC\' ^GFN
)@@G@@CONF-1      @@@@@@@@ @@@            @@@^*:@@A@@$@@@^*^CZR^NGCONF-2      FO
)@@G@@@@@@@@@@ @@@            @@@^(^@@#@@N@@@^*1CZZ^NGCONF-3      @@@@@@@[ @@@FP
)@@G@@            @@@^(,@@^@@$@@@^(BCZ%^NGDB$AM       @@@@@@@@ @@@            FQ
)@@G@@@@@^(/@@#@@E@@@^(2CZ1^NGDBP$APS     @@@@@@@@ @@@            @@@^%#@@[@@^FR
)@@G@@@@@^(_CZ4^NGDEBUG       @@@@@@@@ @@@            @@@^:D@@#@[ @@@^%^C)[^NGFS
)@@G@@DECALC      @@@@@@@@ @@@SITIVE IF FATAL ERRORS OCCURRED, NEGATIVE @C@@@@FT
)@@G@@C            IF END OF CELL, ZERO OTHERWISE     @G@@@@C     IEOC   FLAG,FU
)@@G@@ IF ZERO IGNORE END OF CELL, IF NON-ZERO RETURN WHEN  @ @@@@C           FV
)@@G@@ END OF CELL FOUND@D@@[@C     INDEX  INDICES OF VARIABLES TO BE INCLUDEDFW
)@@G@@.     @[@@@@C     @ @@@@C 3.0 NOTES/RELATIONSHIPS     @B@@@@C     REFEREFX
)@@G@@NCES TO TAGGED STORAGE - NONE.@D@@@@C     ROUTINES CALLED - S1INOB TO GEFY
)@@G@@T ONE INPUT RECORD@E@@@@C                       SAVSUB TO SAVE ONE RECORFZ
)@@G@@D OF DATA   @G@@@@C                       S1VFWC,S1VFWT TO TEST FOR ARITGA
)@@G@@HMETIC OVERFLOW   @[@@@@C     @]@@@@C     ENDSJM@E@@@@      DIMENSION S(GB
)@@G@@1), SS(1), VMIN(1), VMAX(1), PROD(1),X(1) @^@@[@      DIMENSION INDEX(1)GC
)@@G@@@[@@@@C     @^@@@@C             INITIALIZE@[@@@@C     @#@@@@      ISAVE=GD
)@@G@@JSAVE @#@@@@      IDS=JDS     @#@@@@      NV=NVARS    @]@@@@      NOBS=0GE
)@@G@@@#@@@@      DO 50 I=1,NV@]@@@@      S(I)=0@#@@@@      SS(I)=0     @^@@@@GF
)@@G@@      VMIN(I)=1.0E+38   @^@@@@ 50   VMAX(I)=-1.0E+38  @A@@@@      IF (IDGG
)@@G@@S .NE. 0 )  GO TO 80    @^@@@@      KEMP=(NV*(NV+1))/2@^@@@@      DO 70 GH
)@@G@@K=1,KEMP    @#@@@@ 70   PROD(K)=0   @A@@@@80    IF (ISAVE .EQ. 0)  GO TOGI
)@@G@@ 100  @#@@[@ 90   KEMP=ISAVE  @A[@@@      CALL  SAVSUB(DUM,-1,KEMP)     GJ
)@@G@@@[@@@@C     @A@@@@C             GET NEXT OBSERVATION  @[@@@@C     @ @@@@GK
)@@G@@ 100  CALL   S1INOB(X,IFLAG)  @ @@@@      IF(IFLAG+1)160,150,200  @]@@@@GL
)@@G@@ 150  IERR=1@#@@@@      GO TO 350   @A@@@@160   IF (IFLAG.EQ.-2) GO TO 3GM
)@@G@@00    @^@@@@      IF (IEOC)305,100  @[@@@@C     @B@@@@C             PROCGN
)@@G@@ESS NEXT OBSERVATION    @[@@@@C     @#@@@@ 200  NOBS=NOBS+1 @]@@@@      GO
)@@G@@K=1   @A@@[@      IF(ISAVE .EQ. 0) GO TO 202    @ @@[@      CALL SAVSUB(GP
)@@G@@X,0,KEMP)   @A@@[@      IF(KEMP .NE. 0) GO TO 150     @#@@[@ 202  CONTINGQ
)@@G@@UE    @ @@@@      IF (NV .LT.1)  GO TO 265@G@@@@C  RESET OVERFLOW INDICAGR
)@@G@@TOR---------------------------------------------@A@@[@      IF(INDEX(1) GS
)@@G@@.EQ. 0) GO TO 208 @^@@[@      DO 205 I=1,NV     @#@@[@      III=INDEX(I)GT
)@@G@@@#@@[@ 205  X(I)=X(III) @#@@[@ 208  CONTINUE    @#@@@@      CALL S1VFWC GU
)@@G@@@^@@@@      DO 260 I=1,NV     @]@@@@      T=X(I)@#@@@@      S(I)=S(I)+T GV
)@@G@@@A@@@@      IF(T .GE. VMIN(I))  GO TO 220 @#@@@@ 210  VMIN(I)=T   @A@@@@GW
)@@G@@ 220  IF(T .LE. VMAX(I))  GO TO 240 @#@@@@ 230  VMAX(I)=T   @A@@@@240   GX
)@@G@@IF (IDS .NE. 0)  GO TO 255    @#@@@@      DO 250 J=1,I@ @@@@      PROD(KGY
)@@G@@)=PROD(K)+T*X(J)  @]@@@@250   K=K+1 @^@@@@255   SS(I)=SS(I)+T*T   @#@@@@GZ
)@@G@@260   CONTINUE    @G@@@@C  TEST OVERFLOW INDICATOR++++++++++++++++++++++HA
)@@G@@++++++++++++++++++++++++@A@@@@      CALL S1VFWT(6HRDIN 1,$150)    @#@@[@HB
)@@G@@ 265  CONTINUE    @ #@@@280   IF (IFLAG-1)100,300,295 @A@@@@295   IF (IEHC
)@@G@@OC .NE. 0 )  GO TO 305  @#@@@@      GO TO 100   @[@@@@C     @A@@@@C     HD
)@@G@@        ALL DONE - CLEAN UP   @[@@@@C     @]@@@@300   IERR=0@#@@@@      HE
)@@G@@GO TO 310   @#@@@@305   IERR=-1     @A@@@@310   IF (ISAVE .EQ. 0)  GO TOHF
)@@G@@ 350  @ @@@@ 330  CALL  SAVSUB(DUM,1,KEMP)@A@@@@      IF (KEMP  .NE. 0) HG
)@@G@@ GO TO 150  @#@@@@350   DF=NOBS     @ @@@@      IF (NOBS.GE.2) GO TO 400HH
)@@G@@@]@@@@      IERR=1@#@@@@      PRINT 375   @G@@@@375   FORMAT('0***** CALHI
)@@G@@CULATIONS OMITTED BECAUSE LESS THAN TWO OBSERVAT@^@@@@     *IONS WERE FOHJ
)@@G@@UND.')@#@@@@400   CONTINUE    @]@@@@      RETURN@]@@@@      END   ___   HK
)@@G@@SAVSUB TO SAVE ONE RECORD OF DATA   @G@@@@C     )@@[N#]A[#@--#@-)@C@:K@[HL
)@@G@@[@@@@@C@FK@][@)@@,[@@@@!G/)__"C@)@@?G/@__"C@@@@(R@K@@$AA@@@A)@E[F#@--#@-HM
)@@G@@-#]A^G@@@@@@Q@0@@%R@0@@WQ@)@@*R@)@@WG.@__" @@@@#[[@@@]C[FK@@[@)@@[AB@@@AHN
)@@G@@)@N[N#]A^GCS@K0@@@]@])@@[@#)@@C@@@@X @^)@@ @ )@@[[@@[^Q[K@@&R[K@@WQ[@@@:HO
)@@G@@R[@@@WAC@@@A)@X[N@K0)]A^G]A[#@R@)@@WG/)__"[@)@@ ;K)@@[T@)@@]G@)@@]C/)@@[HP
)@@G@@/K@@@:*@@@@[8L@@@SAD@@@A)@$[N#@C]A^[#]A[#@@@@@@B/,0@@@[@@@@ C@@@@@/K@@@4HQ
)@@G@@(@@@@@8L@@@( @])@@[@)@[^Q@)@@(AE@@@A)@1[F#]A^GCK^GCS^G@@@@@@G@@@@CC/@@@[HR
)@@G@@@[W@@<@@@@@C@@@@@@/,0@@@@[V@@<@@@@@ @@@@@YAF@@@A)@'[N@K^@^@K0C@@@@/K@@]\HS
)@@G@@(@@@@GH@@@@CC/@__./K@@]/[@@@@@C/@@@[/K@@[B/G@@[@/@@@@.AG@@@A)[^[MK^@K0-)HT
)@@G@@K0--@@/K@@[P(@@@@@[@)@@AC/)@@[[@@@@#G@@@@#C/@@@[/G@@]1/@@@@4C@@@@@AH@@@AHU
)@@G@@)[I[M^GCSK0--@K0C@/C@@[UG/@__"C@@@@]/K@@@.*@@@@ @[:@@<@@@@@ @@@@@Z@@@@@@HV
)@@G@@/,0@@@AI@@@A)[S[MK[#@)CSK0--#@Q[@@@$R[@@@WQ@0@@?R@0@@W/K@@[%(@[@@@G@@@@]HW
)@@G@@C/@__"/K@@]**@@@@GAJ@@@A)[+[M^GCSK0]@- #@@@['@@</,0@@@8L@@[<[@<)@@C@>@@@HX
)@@G@@O[K@@,R[K@@D[@@@@DC@^)@@[@@@[^AK@@@A)[?[EK0CSK0--#]A^G@@@@@@Q[)@@:R[)@@WHY
)@@G@@R[@@@?R@0@@&R[K@@%R@)@@*C_)@@[G@@@@]C/@__"AL@@@A)[5[MK0CS[#@@@@@@@1@@@@IHZ
)@@G@@*@@@@I"^>@@@C@)@@E[@#@@@"@#@@@[@@@@EC@^@@@[#)@@^[@@@[^AM@@@A)[_[N@K0]A@KIA
)@@G@@^G@@@@[@]@@@C@@@@E/K@@]D1@@@@G*@@@@G"^@@@EC@]@@@[@>@@@C@)@@E/K@@]]AN@@@AIB
)@@G@@)]D[F#]@CSK0-)K0-)@@@@@@O]@@@!R]@@@A[@@@[ Q[0@@?R[0@@WG@@@@^C/@__"/K@@]UIC
)@@G@@*@@@@[AO@@@A)]M[MK0@--#]@--#@@"C@@@EC@@@@E8LK@]K[@)@@AG@)@@AC/)@@[[@C@@@ID
)@@G@@"@C@@@"C@@@EC@B)@@AP@@@A)]W@'@@@@@@@)@G@K@@@@@@@______RDIN 1G_)@@[O.@@@[IE
)@@G@@O/0@@[O.K@@[O/)@@[[@A)@@"@A@@@AQ@@@A)]<[F@K=--@K0CSK^@@@@@@@/C@@@4/@@@]\IF
)@@G@@H@@@@CC/@@@[@]L@@</K@@@.@@@@@G/,0@@@8L@@[6AR@@@A)]?[MK^@K@K0)@@@@@/,0@@@IG
)@@G@@/K@@]/(@@@@@[@@@@@C/@__"/K@@]3 @@@@@/K@@@4/K@@]1*@@@@@AS@@@A)]6[F#]A^GCSIH
)@@G@@K0)]A@@@@@@@[@K@@@"O@@@#C/@@]V/K@@@.*@@@@ @]Y@@<@@@@@ @@@@@)@@@@@BAT@@@AII
)@@G@@)]_[N#@]@]^4GCS@@@@]>@@<@@[@@I/,0@@@[@)@@@C/)@@[/K@@#E1@@@@I*@@@@IG/)__.IJ
)@@G@@C@)@@#AU@@@A)#D@F])@@@@@)@I[@@@@@@@@ESS THAUSE LED BEC OMITTATIONSCALCULIK
)@@G@@***** (074H0'^@@@@AV@@@A)@Q@0@@@@@@@)#E@V@K^G@@@@](@@</K@@#HN@0@#G.)    IL
)@@G@@ FOUNDS WEREVATION OBSERAN TWOAW@@@A)#H[F#]A^GCSK0--#]A^G@@@R[0@@7R[)@@6IM
)@@G@@R[K@@5R[@@@4R@0@@3R@)@@2R@K@@19\)@@\R]0@@=AX@@@A)#Q@<#]A^GCS@@@@@@)@-@C@IN
)@@G@@)#U@N#] K@@@/K@@@@/K@K@-@@F@@J*4@K@-N[K@@'N[@@@9R]@@@8AY@@@A)@<@K@)#W@;#IO
)@@G@@]A^GCSK0--#@A[K@@5A[@@@4A@0@@3A@)@@2A@K@@19:)@@\AA0@@=@](@@]S1RDI2AZ@@@AIP
)@@G@@)#<[F#]A^GCSK0C]@)@@@@@@[^@@[I[^@@]5[^@@@\C8FK@#^[K@@'^[@@@9A]@@@8A[0@@7IQ
)@@G@@A[)@@6BA@@@A)#?[MK[#@-)K0CS@@@[@@@@*C8FK@C[@@@@%C8FK@B[@@@@:C8FK@A[@@@@&IR
)@@G@@C8FK@ [^@@]"C8FK@^BB@@@A)#6[MK0CSK^@K^[@@@[^@@]2[^@@# [^@@]\C8FK@F[^@@@5IS
)@@G@@[^@@[J[@@@@?C8FK@E[@@@@(C8FK@DBC@@@A)^@@;@^[@^GC@@@@@@)@W@K@Z/?;NF@@[@@@IT
)@@G@@/K@@@@[@@@@$C8FK@H[^@@[^[^@@]?C8FK@G[^@@@"BD@@@A)@Y@S@@@@@@@@@@@@@@@@@@@IU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@@@@@_____"BE@@@A@@@@@@;A@@@=IV
)@@G@@D]@@@C#[@@@[ @@@@C1@@@@C0@@@@C/E@@@#/I@@@#/K@@@D*@@@@E(@@@@E)^@@@@=]@B/6IW
)@@G@@@@^@@]@@A@@A@@M@@[@@Q@@@@@#@@;@C@@^BS1INOB      S1VFWC      S1VFWT      IX
)@@G@@NPRT$       NIO2$       NERR3$      S1RDI2      @@[@@@@@@@#W@@@@@@@@@@@@IY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@*[S@@@*SDFF*@I@@@@C                             IZ
)@@G@@                                          90225001    @I@@@@C     ------JA
)@@G@@------------------------------------------------------------90225002    JB
)@@G@@@I@@@@C                                                                 JC
)@@G@@      90225003    @B@@[@      SUBROUTINE S1TQL2(NM,N,D,E,Z,IERR)  @I[@@@JD
)@@G@@C                                                                       JE
)@@G@@90225005    @ @@@@      DIMENSION D(1),E(1),Z(1)@I@@@@      REAL B,C,F,GJF
)@@G@@,H,P,R,S,MACHEP                                       90225008    @I@@@@JG
)@@G@@C     REAL SQRT,ABS,SIGN                                                JH
)@@G@@90225009    @I@@@@C                                                     JI
)@@G@@                  90225010    @I@@@@C     THIS SUBROUTINE IS A TRANSLATIJJ
)@@G@@ON OF THE ALGOL PROCEDURE TQL2,     90225011    @I@@@@C     NUM. MATH. 1JK
)@@G@@1, 293-306(1968) BY BOWDLER, MARTIN, REINSCH, AND     90225012    @I@@@@JL
)@@G@@C     WILKINSON.                                                        JM
)@@G@@90225013    @I@@@@C     HANDBOOK FOR AUTO. COMP., VOL.II-LINEAR ALGEBRA,JN
)@@G@@ 227-240(1971).   90225014    @I@@@@C                                   JO
)@@G@@                                    90225015    @I@@@@C     THIS SUBROUTJP
)@@G@@INE FINDS THE EIGENVALUES AND EIGENVECTORS            90225016    @I@@@@JQ
)@@G@@C     OF A SYMMETRIC TRIDIAGONAL MATRIX BY THE QL METHOD.               JR
)@@G@@90225017    @I@@@@C     THE EIGENVECTORS OF A FULL SYMMETRIC MATRIX CAN JS
)@@G@@ALSO              90225018    @I@@@@C     BE FOUND IF  TRED2  HAS BEEN UJT
)@@G@@SED TO REDUCE THIS                  90225019    @I@@@@C     FULL MATRIX JU
)@@G@@TO TRIDIAGONAL FORM.                                  90225020    @I@@@@JV
)@@G@@C                                                                       JW
)@@G@@90225021    @I@@@@C     ON INPUT-                                       JX
)@@G@@                  90225022    @I@@@@C                                   JY
)@@G@@                                    90225027    @I@@@@C        N IS THE JZ
)@@G@@ORDER OF THE MATRIX,                                  90225028    @I@@@@KA
)@@G@@C                                                                       KB
)@@G@@90225029    @I@@@@C        D CONTAINS THE DIAGONAL ELEMENTS OF THE INPUTKC
)@@G@@ MATRIX,          90225030    @I@@@@C                                   KD
)@@G@@                                    90225031    @I@@@@C        E CONTAINKE
)@@G@@S THE SUBDIAGONAL ELEMENTS OF THE INPUT MATRIX        90225032    @I@@@@KF
)@@G@@C          IN ITS LAST N-1 POSITIONS.  E(1) IS ARBITRARY,               KG
)@@G@@90225033    @I@@@@C                                                     KH
)@@G@@                  90225034    @I@@@@C        Z CONTAINS THE TRANSFORMATIKI
)@@G@@ON MATRIX PRODUCED IN THE           90225035    @I@@@@C          REDUCTIKJ
)@@G@@ON BY  TRED2, IF PERFORMED.  IF THE EIGENVECTORS      90225036    @I@@@@KK
)@@G@@C          OF THE TRIDIAGONAL MATRIX ARE DESIRED, Z MUST CONTAIN        KL
)@@G@@90225037    @I@@@@C          THE IDENTITY MATRIX.                       KM
)@@G@@                  90225038    @I@@@@C                                   KN
)@@G@@                                    90225039    @I@@@@C      ON OUTPUT- KO
)@@G@@                                                      90225040    @I@@@@KP
)@@G@@C                                                                       KQ
)@@G@@90225041    @I@@@@C        D CONTAINS THE EIGENVALUES IN ASCENDING ORDERKR
)@@G@@.  IF AN          90225042    @I@@@@C          ERROR EXIT IS MADE, THE EKS
)@@G@@IGENVALUES ARE CORRECT BUT          90225043    @I@@@@C          UNORDERKT
)@@G@@ED FOR INDICES 1,2,...,IERR-1,                        90225044    @I@@@@KU
)@@G@@C                                                                       KV
)@@G@@90225045    @I@@@@C        E HAS BEEN DESTROYED,                        KW
)@@G@@                  90225046    @I@@@@C                                   KX
)@@G@@                                    90225047    @I@@@@C        Z CONTAINKY
)@@G@@S ORTHONORMAL EIGENVECTORS OF THE SYMMETRIC           90225048    @I@@@@KZ
)@@G@@C          TRIDIAGONAL (OR FULL) MATRIX.  IF AN ERROR EXIT IS MADE,     LA
)@@G@@90225049    @I@@@@C          Z CONTAINS THE EIGENVECTORS ASSOCIATED WITHLB
)@@G@@ THE STORED       90225050    @I@@@@C          EIGENVALUES,             LC
)@@G@@                                    90225051    @I@@@@C                 LD
)@@G@@                                                      90225052    @I@@@@LE
)@@G@@C        IERR IS SET TO                                                 LF
)@@G@@90225053    @I@@@@C          ZERO       FOR NORMAL RETURN,              LG
)@@G@@                  90225054    @I@@@@C          J          IF THE J-TH EILH
)@@G@@GENVALUE HAS NOT BEEN               90225055    @I@@@@C                 LI
)@@G@@    DETERMINED AFTER 30 ITERATIONS.                   90225056    @I@@@@LJ
)@@G@@C                                                                       LK
)@@G@@90225057    @I@@@@C     QUESTIONS AND COMMENTS SHOULD BE DIRECTED TO B. LL
)@@G@@S. GARBOW,        90225058    @I@@@@C     APPLIED MATHEMATICS DIVISION, LM
)@@G@@ARGONNE NATIONAL LABORATORY         90225059    @I@@@@C                 LN
)@@G@@                                                      90225060    @I@@@@LO
)@@G@@C     ------------------------------------------------------------------LP
)@@G@@90225061    @I@@@@C                                                     LQ
)@@G@@                  90225062    @I@@@@C     ********** MACHEP IS A MACHINELR
)@@G@@ DEPENDENT PARAMETER SPECIFYING     90225063    @I@@@@C                TLS
)@@G@@HE RELATIVE PRECISION OF FLOATING POINT ARITHMETIC.   90225064    @I@@@@LT
)@@G@@C                                                                       LU
)@@G@@90225065    @I@@@@C                **********                           LV
)@@G@@                  90225066    @I@@@@      MACHEP = 2.**(-26)            LW
)@@G@@                                    90225067    @I@@@@C                 LX
)@@G@@                                                      90225068    @I@@@@LY
)@@G@@      IERR = 0                                                          LZ
)@@G@@90225069    @I@@@@      IF (N .EQ. 1) GO TO 1001                        MA
)@@G@@                  90225070    @I@@@@C                                   MB
)@@G@@                                    90225071    @I@@@@      DO 100 I = 2MC
)@@G@@, N                                                   90225072    @I@@@@MD
)@@G@@  100 E(I-1) = E(I)                                                     ME
)@@G@@90225073    @I@@@@C                                                     MF
)@@G@@                  90225074    @]@@@@      F=0.0 @]@@@@      B=0.0 @#@@@@MG
)@@G@@      E(N)=0.0    @I@@@@C                                               MH
)@@G@@                        90225078    @I@@@@      DO 240 L = 1, N         MI
)@@G@@                                          90225079    @I@@@@         J =MJ
)@@G@@ 0                                                          90225080    MK
)@@G@@@I@@@@         H = MACHEP * (ABS(D(L)) + ABS(E(L)))                     ML
)@@G@@      90225081    @I@@@@         IF (B .LT. H) B = H                    MM
)@@G@@                        90225082    @I@@@@C     ********** LOOK FOR SMALMN
)@@G@@L SUB-DIAGONAL ELEMENT **********         90225083    @I@@@@         DO MO
)@@G@@110 M = L, N                                                90225084    MP
)@@G@@@I@@@@            IF (ABS(E(M)) .LE. B) GO TO 120                       MQ
)@@G@@      90225085    @I@@@@C     ********** E(N) IS ALWAYS ZERO, SO THERE IMR
)@@G@@S NO EXIT               90225086    @I@@@@C                THROUGH THE BMS
)@@G@@OTTOM OF THE LOOP **********              90225087    @I@@@@  110    CONMT
)@@G@@TINUE                                                       90225088    MU
)@@G@@@I@@@@C                                                                 MV
)@@G@@      90225089    @I@@@@  120    IF (M .EQ. L) GO TO 220                MW
)@@G@@                        90225090    @I@@@@  130    IF (J .EQ. 30) GO TO MX
)@@G@@1000                                      90225091    @I@@@@         J =MY
)@@G@@ J + 1                                                      90225092    MZ
)@@G@@@I@@@@C     ********** FORM SHIFT **********                            NA
)@@G@@      90225093    @I@@@@         L1 = L + 1                             NB
)@@G@@                        90225094    @I@@@@         G = D(L)             NC
)@@G@@                                          90225095    @I@@@@         P =ND
)@@G@@ (D(L1) - G) / (2.0 * E(L))                                 90225096    NE
)@@G@@@I@@@@         R = SQRT(P*P+1.0)                                        NF
)@@G@@      90225097    @I@@@@         D(L) = E(L) / (P + SIGN(R,P))          NG
)@@G@@                        90225098    @I@@@@         H = G - D(L)         NH
)@@G@@                                          90225099    @I@@@@C           NI
)@@G@@                                                            90225100    NJ
)@@G@@@I@@@@         DO 140 I = L1, N                                         NK
)@@G@@      90225101    @I@@@@  140    D(I) = D(I) - H                        NL
)@@G@@                        90225102    @I@@@@C                             NM
)@@G@@                                          90225103    @I@@@@         F =NN
)@@G@@ F + H                                                      90225104    NO
)@@G@@@I@@@@C     ********** QL TRANSFORMATION **********                     NP
)@@G@@      90225105    @I@@@@         P = D(M)                               NQ
)@@G@@                        90225106    @I@@@@         C = 1.0              NR
)@@G@@                                          90225107    @I@@@@         S =NS
)@@G@@ 0.0                                                        90225108    NT
)@@G@@@I@@@@         MML = M - L                                              NU
)@@G@@      90225109    @I@@@@C     ********** FOR I=M-1 STEP -1 UNTIL L DO --NV
)@@G@@ **********             90225110    @I@@@@         DO 200 II = 1, MML   NW
)@@G@@                                          90225111    @I@@@@            NX
)@@G@@I = M - II                                                  90225112    NY
)@@G@@@I@@@@            G = C * E(I)                                          NZ
)@@G@@      90225113    @I@@@@            H = C * P                           OA
)@@G@@                        90225114    @I@@@@            IF (ABS(P) .LT. ABOB
)@@G@@S(E(I))) GO TO 150                        90225115    @I@@@@            OC
)@@G@@C = E(I) / P                                                90225116    OD
)@@G@@@I@@@@            R = SQRT(C*C+1.0)                                     OE
)@@G@@      90225117    @I@@@@            E(I+1) = S * P * R                  OF
)@@G@@                        90225118    @I@@@@            S = C / R         OG
)@@G@@                                          90225119    @I@@@@            OH
)@@G@@C = 1.0 / R                                                 90225120    OI
)@@G@@@I@@@@            GO TO 160                                             OJ
)@@G@@      90225121    @I@@@@  150       C = P / E(I)                        OK
)@@G@@                        90225122    @I@@@@            R = SQRT(C*C+1.0) OL
)@@G@@                                          90225123    @I@@@@            OM
)@@G@@E(I+1) = S * E(I) * R                                       90225124    ON
)@@G@@@I@@@@            S = 1.0 / R                                           OO
)@@G@@      90225125    @I@@@@            C = C * S                           OP
)@@G@@                        90225126    @I@@@@  160       P = C * D(I) - S *OQ
)@@G@@ G                                        90225127    @I@@@@            OR
)@@G@@D(I+1) = H + S * (C * G + S * D(I))                         90225128    OS
)@@G@@@I@@@@C     ********** FORM VECTOR **********                           OT
)@@G@@      90225129    @I@@@@            DO 180 K = 1, N                     OU
)@@G@@                        90225130    @#@@[@      IL1=I*NM+K  @^@@[@      OV
)@@G@@IL2=(I-1)*NM+K    @#]@@@      H=Z(IL1)    @ @@@@      Z(IL1)=S*Z(IL2)+C*OW
)@@G@@H     @ @@@@      Z(IL2)=C*Z(IL2)-S*H     @I@@@@  180       CONTINUE    OX
)@@G@@                                                90225134    @I@@@@C     OY
)@@G@@                                                                  902251OZ
)@@G@@35    @I@@@@  200    CONTINUE                                           PA
)@@G@@            90225136    @I@@@@C                                         PB
)@@G@@                              90225137    @I@@@@         E(L) = S * P   PC
)@@G@@                                                90225138    @I@@@@      PD
)@@G@@   D(L) = C * P                                                   902251PE
)@@G@@39    @I@@@@         IF (ABS(E(L)) .GT. B) GO TO 130                    PF
)@@G@@            90225140    @I@@@@  220    D(L) = D(L) + F                  PG
)@@G@@                              90225141    @I@@@@  240 CONTINUE          PH
)@@G@@                                                90225142    @I@@@@C     PI
)@@G@@********** ORDER EIGENVALUES AND EIGENVECTORS **********          902251PJ
)@@G@@43    @I@@@@      DO 300 II = 2, N                                      PK
)@@G@@            90225144    @I@@@@         I = II - 1                       PL
)@@G@@                              90225145    @I@@@@         K = I          PM
)@@G@@                                                90225146    @I@@@@      PN
)@@G@@   P = D(I)                                                       902251PO
)@@G@@47    @I@@@@C                                                           PP
)@@G@@            90225148    @I@@@@         DO 260 J = II, N                 PQ
)@@G@@                              90225149    @I@@@@            IF (D(J) .GEPR
)@@G@@. P) GO TO 260                                  90225150    @I@@@@      PS
)@@G@@      K = J                                                       902251PT
)@@G@@51    @I@@@@            P = D(J)                                        PU
)@@G@@            90225152    @I@@@@  260    CONTINUE                         PV
)@@G@@                              90225153    @I@@@@C                       PW
)@@G@@                                                90225154    @I@@@@      PX
)@@G@@   IF (K .EQ. I) GO TO 300                                        902251PY
)@@G@@55    @I@@@@         D(K) = D(I)                                        PZ
)@@G@@            90225156    @I@@@@         D(I) = P                         QA
)@@G@@                              90225157    @I@@@@C                       QB
)@@G@@                                                90225158    @I@@@@      QC
)@@G@@   DO 280 J = 1, N                                                902251QD
)@@G@@59    @^@@[@      IP1=(I-1)*NM+J    @^@@[@      IP2=(K-1)*NM+J    @#]@@@QE
)@@G@@      P=Z(IP1)    @^@@@@      Z(IP1)=Z(IP2)     @#@@@@      Z(IP2)=P    QF
)@@G@@@I@@@@  280    CONTINUE                                                 QG
)@@G@@      90225163    @I@@@@C                                               QH
)@@G@@                        90225164    @I@@@@  300 CONTINUE                QI
)@@G@@                                          90225165    @I@@@@C           QJ
)@@G@@                                                            90225166    QK
)@@G@@@I@@@@      GO TO 1001                                                  QL
)@@G@@      90225167    @I@@@@C     ********** SET ERROR -- NO CONVERGENCE TO QM
)@@G@@AN                      90225168    @I@@@@C                EIGENVALUE AFQN
)@@G@@TER 30 ITERATIONS **********              90225169    @I@@@@ 1000 IERR =QO
)@@G@@ L                                                          90225170    QP
)@@G@@@I@@@@ 1001 RETURN                                                      QQ
)@@G@@      90225171    @I@@@@C     ********** LAST CARD OF TQL2 **********   QR
)@@G@@                        90225172    @I@@@@      END                     QS
)@@G@@                                          90225173    ___               QT
)@@G@@90225142    @I@@@@C     )@@[N#[#[#[#@@@@@@G"@__.C'FK@^G.)__.C[)@@ZG.@__.QU
)@@G@@C[@@@YG/)__"C@)@@ZG/@__"C@@@@YAA@@@A)@E[N#^GK1#^GK1#@@H@)@@@C/)@@[ @@@@@QV
)@@G@@[@@@@CC@@@@P[]@@@=[[)@@<[[@@@+[@)@@-[@@@@)AB@@@A)@O[MK@@K1#^G@@@@@Q@)@@YQW
)@@G@@R@)@@QO@K@@+R@K@@@G[@@@@C.@__"G@)@@@C/)__./K@@ =(@@@@IAC@@@A)@Y[MK1#@K^GQX
)@@G@@K0@@@@C_@@@[ @[@@[ @@@@@ @@@@]8L@@@-[@])@@C@]@@[[[@@@&[@)@@>[@)@[^AD@@@AQY
)@@G@@)@*[F#^GK1#^G^GK1#@@@@@@G@)@@EC@)@@+H@@@@EC@@@@@[#@@@EN[@@@&Q@K@@-R@K@@QQZ
)@@G@@R@)@@)AE@@@A)@1[N#^GK0[#^GK1#@"^@@@^C@@@@@[@@@@^"C@@@C"@@@@IE@-@@[E@]@@[RA
)@@G@@ @@@@F[@)@@*[@@@@$AF@@@A)@;[M^[#^GK1#^GK0@E@#@@[[#)@@GN[K@@$R@0@@*C#)@@ERB
)@@G@@[@@@@@C@@@@^/K@@[@1@@@@G*@@@@GAG@@@A)[ [N#@K@K^GK0@@@@(@@@@GH@@@@EC@@@@GRC
)@@G@@8LK@[#G_)@@[O/0@@[/K@@[G0@@@@G*@@@@G"^@@@@AH@@@A)[J[N@^G^@K1#[#@@@G@)@@ERD
)@@G@@C/)@@[[@@@@FG@@@@FC/@@@[/K@@ +(@@@@GH@@@@FC/@@@Y/K@@^KAI@@@A)[T[N#[#^GK0RE
)@@G@@K0^G@@][@@@ "H@@@M" #@@["D)@@RC[+@@[O@0@@<R@0@@H[[@@@#C[[@@[[@)@@HAJ@@@ARF
)@@G@@)[<[F#^GK1]^GK1#[#@@@@@@0@@@@ E@@@@G[@@@@A@[&@@V@@@@@(/,0@@@][@@@(" @@@SRG
)@@G@@"D@@@ AK@@@A)[?[MK0[#^GK0K0@@@C[@@@<G@@@@@D@@@@H]@)@@^"^)@@#[@-@@["G)@@GRH
)@@G@@C@+@@["@@@@ D@@@@GAL@@@A)[6[N#^GK1#@^G^@@@8LK@[/[@^)@["^@@@^C@^@@[[@@@[ RI
)@@G@@Q[@@@KR[@@@QO@0@@<R@0@@GG[@@@HAM@@@A)]@[F#^GK0K1#^GK1#@@@@@@C]@@@G @@@@BRJ
)@@G@@[[)@@[C[)@@S[[@@@ C[#@@[[@)@@]"@)@@]C@)@@^AN@@@A)]D[N#^G@K1#^GK1#@R[@@@DRK
)@@G@@[@@@@DH@@@@JC@@@@G[#0@@J[]@@[ C_0@@[G"@__"[]@@@IH]@@@EAO@@@A)]N[N#[#^GK1RL
)@@G@@#^G^G@" )@@OE]@@@ E[=@@[[[@@@^"D@@@[C[@@@ [@)@@#"C)@@[C@=@@[O[@@@+AP@@@ARM
)@@G@@)]X[F@^@K1#^GK1#@@@@@@@@[[)@@%"[)@@S"D)@@[[[)@@["H)@@ C[=@@[/K@@]7*@@@@MRN
)@@G@@/H)@])AQ@@@A)]&[F]^GK1#^GK1#^G@@@@@@"C@@@I"C)@@ C@)@@BO@0@@YR@0@@D[@@@@ARO
)@@G@@@[/@@V@@@@@%/,0@@@AR@@@A)]\[EK1#^GK1#^GK^G@@@@@@R[@@@D/K@@#I[[@@@["H@@@ARP
)@@G@@C[@@@S[@)@@B"G)@@AC@)@@[[@#@@@AS@@@A)]8[F#^G^GK1#^GK-#@@@@@@@@@@@%/,0@@@RQ
)@@G@@[@@@@%"@@@@S"C@@@[[@@@@["G^@@[C@@@@ O[@@@+AT@@@A)#[[N#^GK1#[#@K1#@"G)@@ARR
)@@G@@C@)@@S[@#@@@"C@@@I"C)@@BC@=@@[O@0@@YR@0@@D[@@@@A@]]@@VAU@@@A)#F[F#^GK1#^RS
)@@G@@GK1#[#@@@@@@"C)@@[C@=@@["C@@@#C@@@@BO[@@@<R[@@@D[@)@@["C)@@[[@)@@BAV@@@ART
)@@G@@)#O[MK1#^GK1#[#[#@"C)@@B"@)@@K"D@@@BC[^@@["C)@@[C@)@@#O@0@@ZR@0@@D]@@@@ RU
)@@G@@"^@@@IAW@@@A)#Y[N#[#^G^GK0K1#@[[@@@%N[)@@&C_)@@[T[)@@:H[)@@DC.)@@[T[@@@:RV
)@@G@@C[@@@D[@<@@@"@)@@^AX@@@A)#*[F#^GK1#^GK1#^GK0@@@@R[@@@L]@)@@MH@)@@KC@)@@?RW
)@@G@@[@@@@LG@@@@KC@@@@%[#)@@K[[)@@?AY@@@A)#1[N#[#^GK1#[#@@@[[^@@["[@@@M"D)@@BRX
)@@G@@C[<@@["D@@@[O@0@@=R@0@@M[[@@@^C[^@@[O[@@@=AZ@@@A)#;[N#^G^G@K[@@@@@8LK@]IRY
)@@G@@G_0@@[8L)@#(G_)@@[][<@@[" )@@O"E@@@[C]#@@["D)@@^C[)@@BBA@@@A)^ [N#^G^GK0RZ
)@@G@@^GK@@@*@@@@K/H@@^K" @@@@E[]@@[[[-@@["D)@@[C[)@@ [[]@@["D@@@ C[@@@BBB@@@ASA
)@@G@@)^J[N@^G@K[#^G@@@@[#0@@JN[@@@>C_0@@]8L@@@?G_@@@[O/)@@[[@[)@["@@@@]C@[@@[SB
)@@G@@/K@@[KBC@@@A)^T[EK1#^GK1#[#^G@@@@@@@]@@@@DH@@@@JC/@@@[[@)@@$[@@@@>G@)@@JSC
)@@G@@C@)@@<H@@@@JC@@@@@BD@@@A)^+[F#^GK0K1#^GK1#@@@@@@[#)@@FN[K@@>R@0@@$C#)@@JSD
)@@G@@[@)@@ C@=@@[O[@@@<R[@@@D]@@@@KBE@@@A)^:[MK0^[#^G^G@@@@O/0@@[[@)@@ C@<@@[SE
)@@G@@[@@@@KC@@@@F/K@@^41@@@@G*@@@@G"^@@@ C@#@@[BF@@@A)^5[EK^GK0K^GK1#@@@@@@@@SF
)@@G@@R@)@@DO@K@@<R@K@@K/K@@ Z(@@@@GH@@@@DC@@@@K8LK@^%G_)@@[BG@@@A)^"[N#@K0^G^SG
)@@G@@GK0@@@T[@@@:H[@@@DC.@@@[H@@@@KC/@@@[[@+@@[C@)@@ [@[@@[C@]@@[O@)@@<BH@@@ASH
)@@G@@) C[F#[#^GK1#^GK1#@@@@@@]@@@@NH@@@@FC@@@@![#)@@F[[@@@![@@@@*N[K@@&C_)@@[SI
)@@G@@T@@@@:BI@@@A) L[F#^GK1#^GK1#[#@@@@@@[[@@@ C[^@@[O@0@@=R@0@@OO[@@@=R[@@@NSJ
)@@G@@]@)@@OH@)@@FC@)@@*BJ@@@A) U[M@K[@K^G@@@@@@[@@@@@C@@@@E/K@@ =8L@@^SG_0@@[SK
)@@G@@8LK@ HG_)@@[[[#@@[[[=@@[C[<@@[BK@@@A) =[F@K^GK1#^GK1#^G@@@@@R@K@@69\)@@4SL
)@@G@@9\@@@29,@@@09!)@@,R]0@@W@]/@@V/K@@ $N@0@ &BL@@@A) !@;#^GK1#^GK1#@@)@T@C@SM
)@@G@@@@@@@@@@F@@B*4@K@TN[)@@/N[K@@;N[@@@'R[@@@9R@0@@8R@)@@7BM@@@A) 4@N#^D@@@@SN
)@@G@@)@V@K@) 6@<#^GK1#@9:@@@29%@@@09()@@,AA0@@W@]/@@]S1TQL2/K@@@@/K@K@TBN@@@ASO
)@@G@@) '[F#^GK1#^GK1#^G@@@@@@C@VK@@^[)@@/^[K@@;^[@@@'A[@@@9A@0@@8A@)@@7A@K@@6SP
)@@G@@9:)@@4BO@@@A)A#[N#[@K^[@K^[@@@C8FK@][^@@@N[^@@@T[^@@@U[^@@@![^@@[4[^@@^TSQ
)@@G@@[^@@@RC8FK@[[@K@@:BP@@@A)AH@;#[#[@K^@@@@@@)@P@K@@@[@@@G/@@@@/K@@@@[^@@ <SR
)@@G@@[^@@@LC8FK@ [@@@@YC8FK@#[@@@@ZBQ@@@A)@R@K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KG@@@@KO@@@@BR@@@A@@^@@]@@A@@]@@E@@[@@I@@@ST
)@@G@@@@]@@.@C@@AOSQRT        NERR3$      S1TQL2      @@[@@@@@@@ 6@@@@@@@@@@@@SU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SV
)@@G@@*[S@@@*SDFF*@I@@@@C                                                     SW
)@@G@@                  78215001    @I@@@@C     ------------------------------SX
)@@G@@------------------------------------78215002    @I@@@@C                 SY
)@@G@@                                                      78215003    @I@@[@SZ
)@@G@@      SUBROUTINE S1TRD2( NM,N,A,D,E,Z)                                  TA
)@@G@@  78215004  @I[@@@C                                                     TB
)@@G@@                  78215005    @I@@@@      INTEGER I,J,K,L,N,II   ,JP1   TC
)@@G@@                                    78215006    @A@@[@      REAL A(NM,N)TD
)@@G@@,D(N),E(N),Z(NM,N)@I[@@@      REAL F,G,H,HH,SCALE                       TE
)@@G@@                        78215008    @I@@@@C     REAL SQRT,ABS,SIGN      TF
)@@G@@                                          78215009    @I@@@@C           TG
)@@G@@                                                            78215010    TH
)@@G@@@I@@@@C     THIS SUBROUTINE IS A TRANSLATION OF THE ALGOL PROCEDURE TREDTI
)@@G@@2,    78215011    @I@@@@C     NUM. MATH. 11, 181-195(1968) BY MARTIN, RETJ
)@@G@@INSCH, AND WILKINSON.   78215012    @I@@@@C     HANDBOOK FOR AUTO. COMP.TK
)@@G@@, VOL.II-LINEAR ALGEBRA, 212-226(1971).   78215013    @I@@@@C           TL
)@@G@@                                                            78215014    TM
)@@G@@@I@@@@C     THIS SUBROUTINE REDUCES A REAL SYMMETRIC MATRIX TO A        TN
)@@G@@      78215015    @I@@@@C     SYMMETRIC TRIDIAGONAL MATRIX USING AND ACCTO
)@@G@@UMULATING               78215016    @I@@@@C     ORTHOGONAL SIMILARITY TRTP
)@@G@@ANSFORMATIONS.                            78215017    @I@@@@C           TQ
)@@G@@                                                            78215018    TR
)@@G@@@I@@@@C     ON INPUT-                                                   TS
)@@G@@      78215019    @I@@@@C                                               TT
)@@G@@                        78215020    @I@@@@C        NM MUST BE SET TO THETU
)@@G@@ ROW DIMENSION OF TWO-DIMENSIONAL         78215021    @I@@@@C          ATV
)@@G@@RRAY PARAMETERS AS DECLARED IN THE CALLING PROGRAM          78215022    TW
)@@G@@@I@@@@C          DIMENSION STATEMENT,                                   TX
)@@G@@      78215023    @I@@@@C                                               TY
)@@G@@                        78215024    @I@@@@C        N IS THE ORDER OF THETZ
)@@G@@ MATRIX,                                  78215025    @I@@@@C           UA
)@@G@@                                                            78215026    UB
)@@G@@@I@@@@C        A CONTAINS THE REAL SYMMETRIC INPUT MATRIX.  ONLY THE    UC
)@@G@@      78215027    @I@@@@C          LOWER TRIANGLE OF THE MATRIX NEED BE UD
)@@G@@SUPPLIED.               78215028    @I@@@@C                             UE
)@@G@@                                          78215029    @I@@@@C     ON OUTUF
)@@G@@PUT-                                                        78215030    UG
)@@G@@@I@@@@C                                                                 UH
)@@G@@      78215031    @I@@@@C        D CONTAINS THE DIAGONAL ELEMENTS OF THEUI
)@@G@@ TRIDIAGONAL MATRIX,    78215032    @I@@@@C                             UJ
)@@G@@                                          78215033    @I@@@@C        E CUK
)@@G@@ONTAINS THE SUBDIAGONAL ELEMENTS OF THE TRIDIAGONAL         78215034    UL
)@@G@@@I@@@@C          MATRIX IN ITS LAST N-1 POSITIONS.  E(1) IS SET TO ZERO,UM
)@@G@@      78215035    @I@@@@C                                               UN
)@@G@@                        78215036    @I@@@@C        Z CONTAINS THE ORTHOGUO
)@@G@@ONAL TRANSFORMATION MATRIX                78215037    @I@@@@C          PUP
)@@G@@RODUCED IN THE REDUCTION,                                   78215038    UQ
)@@G@@@I@@@@C                                                                 UR
)@@G@@      78215039    @I@@@@C        A AND Z MAY COINCIDE.  IF DISTINCT, A IUS
)@@G@@S UNALTERED.            78215040    @I@@@@C                             UT
)@@G@@                                          78215041    @I@@@@C     QUESTIUU
)@@G@@ONS AND COMMENTS SHOULD BE DIRECTED TO B. S. GARBOW,        78215042    UV
)@@G@@@I@@@@C     APPLIED MATHEMATICS DIVISION, ARGONNE NATIONAL LABORATORY   UW
)@@G@@      78215043    @I@@@@C                                               UX
)@@G@@                        78215044    @I@@@@C     ------------------------UY
)@@G@@------------------------------------------78215045    @I@@@@C           UZ
)@@G@@                                                            78215046    VA
)@@G@@@I@@@@      DO 100 I = 1, N                                             VB
)@@G@@      78215047    @I@@@@C                                               VC
)@@G@@                        78215048    @I@@@@         DO 100 J = 1, I      VD
)@@G@@                                          78215049    @I@@@@            VE
)@@G@@Z(I,J) = A(I,J)                                             78215050    VF
)@@G@@@I@@@@  100 CONTINUE                                                    VG
)@@G@@      78215051    @I@@@@C                                               VH
)@@G@@                        78215052    @I@@@@      IF (N .EQ. 1) GO TO 320 VI
)@@G@@                                          78215053    @I@@@@C     ******VJ
)@@G@@**** FOR I=N STEP -1 UNTIL 2 DO -- **********               78215054    VK
)@@G@@@I@@@@      DO 300 II = 2, N                                            VL
)@@G@@      78215055    @I@@@@         I = N + 2 - II                         VM
)@@G@@                        78215056    @I@@@@         L = I - 1            VN
)@@G@@                                          78215057    @I@@@@         H =VO
)@@G@@ 0.0                                                        78215058    VP
)@@G@@@I@@@@         SCALE = 0.0                                              VQ
)@@G@@      78215059    @I@@@@         IF (L .LT. 2) GO TO 130                VR
)@@G@@                        78215060    @I@@@@C     ********** SCALE ROW (ALVS
)@@G@@GOL TOL THEN NOT NEEDED) **********       78215061    @I@@@@         DO VT
)@@G@@120 K = 1, L                                                78215062    VU
)@@G@@@I@@@@  120    SCALE = SCALE + ABS(Z(I,K))                              VV
)@@G@@      78215063    @I@@@@C                                               VW
)@@G@@                        78215064    @I@@@@         IF (SCALE .NE. 0.0) GVX
)@@G@@O TO 140                                  78215065    @I@@@@  130    E(IVY
)@@G@@) = Z(I,L)                                                  78215066    VZ
)@@G@@@I@@@@         GO TO 290                                                WA
)@@G@@      78215067    @I@@@@C                                               WB
)@@G@@                        78215068    @I@@@@  140    DO 150 K = 1, L      WC
)@@G@@                                          78215069    @I@@@@            WD
)@@G@@Z(I,K) = Z(I,K) / SCALE                                     78215070    WE
)@@G@@@I@@@@            H = H + Z(I,K) * Z(I,K)                               WF
)@@G@@      78215071    @I@@@@  150    CONTINUE                               WG
)@@G@@                        78215072    @I@@@@C                             WH
)@@G@@                                          78215073    @I@@@@         F =WI
)@@G@@ Z(I,L)                                                     78215074    WJ
)@@G@@@I@@@@         G = -SIGN(SQRT(H),F)                                     WK
)@@G@@      78215075    @I@@@@         E(I) = SCALE * G                       WL
)@@G@@                        78215076    @I@@@@         H = H - F * G        WM
)@@G@@                                          78215077    @I@@@@         Z(IWN
)@@G@@,L) = F - G                                                 78215078    WO
)@@G@@@I@@@@         F = 0.0                                                  WP
)@@G@@      78215079    @I@@@@C                                               WQ
)@@G@@                        78215080    @I@@@@         DO 240 J = 1, L      WR
)@@G@@                                          78215081    @I@@@@            WS
)@@G@@Z(J,I) = Z(I,J) / (SCALE * H)                               78215082    WT
)@@G@@@I@@@@            G = 0.0                                               WU
)@@G@@      78215083    @I@@@@C     ********** FORM ELEMENT OF A*U ********** WV
)@@G@@                        78215084    @I@@@@            DO 180 K = 1, J   WW
)@@G@@                                          78215085    @I@@@@  180       WX
)@@G@@G = G + Z(J,K) * Z(I,K)                                     78215086    WY
)@@G@@@I@@@@C                                                                 WZ
)@@G@@      78215087    @I@@@@            JP1 = J + 1                         XA
)@@G@@                        78215088    @I@@@@            IF (L .LT. JP1) GOXB
)@@G@@ TO 220                                   78215089    @I@@@@C           XC
)@@G@@                                                            78215090    XD
)@@G@@@I@@@@            DO 200 K = JP1, L                                     XE
)@@G@@      78215091    @I@@@@  200       G = G + Z(K,J) * Z(I,K)             XF
)@@G@@                        78215092    @I@@@@C     ********** FORM ELEMENT XG
)@@G@@OF P **********                           78215093    @I@@@@  220       XH
)@@G@@E(J) = G / H                                                78215094    XI
)@@G@@@I@@@@            F = F + E(J) * Z(I,J)                                 XJ
)@@G@@      78215095    @I@@@@  240    CONTINUE                               XK
)@@G@@                        78215096    @I@@@@C                             XL
)@@G@@                                          78215097    @I@@@@         HH XM
)@@G@@= F / (H + H)                                               78215098    XN
)@@G@@@I@@@@C     ********** FORM REDUCED A **********                        XO
)@@G@@      78215099    @I@@@@         DO 260 J = 1, L                        XP
)@@G@@                        78215100    @I@@@@            F = Z(I,J)        XQ
)@@G@@                                          78215101    @I@@@@            XR
)@@G@@G = E(J) - HH * F                                           78215102    XS
)@@G@@@I@@@@            E(J) = G                                              XT
)@@G@@      78215103    @I@@@@C                                               XU
)@@G@@                        78215104    @I@@@@            DO 260 K = 1, J   XV
)@@G@@                                          78215105    @I@@@@            XW
)@@G@@   Z(J,K) = Z(J,K) - F * E(K) - G * Z(I,K)                  78215106    XX
)@@G@@@I@@@@  260    CONTINUE                                                 XY
)@@G@@      78215107    @I@@@@C                                               XZ
)@@G@@                        78215108    @I@@@@         DO 280 K = 1, L      YA
)@@G@@                                          78215109    @I@@@@  280    Z(IYB
)@@G@@,K) = SCALE * Z(I,K)                                        78215110    YC
)@@G@@@I@@@@C                                                                 YD
)@@G@@      78215111    @I@@@@  290    D(I) = H                               YE
)@@G@@                        78215112    @I@@@@  300 CONTINUE                YF
)@@G@@                                          78215113    @I@@@@C           YG
)@@G@@                                                            78215114    YH
)@@G@@@I@@@@  320 D(1) = 0.0                                                  YI
)@@G@@      78215115    @I@@@@      E(1) = 0.0                                YJ
)@@G@@                        78215116    @I@@@@C     ********** ACCUMULATION YK
)@@G@@OF TRANSFORMATION MATRICES **********     78215117    @I@@@@      DO 500YL
)@@G@@ I = 1, N                                                   78215118    YM
)@@G@@@I@@@@         L = I - 1                                                YN
)@@G@@      78215119    @I@@@@         IF (D(I) .EQ. 0.0) GO TO 380           YO
)@@G@@                        78215120    @I@@@@C                             YP
)@@G@@                                          78215121    @I@@@@         DO YQ
)@@G@@360 J = 1, L                                                78215122    YR
)@@G@@@I@@@@            G = 0.0                                               YS
)@@G@@      78215123    @I@@@@C                                               YT
)@@G@@                        78215124    @I@@@@            DO 340 K = 1, L   YU
)@@G@@                                          78215125    @I@@@@  340       YV
)@@G@@G = G + Z(I,K) * Z(K,J)                                     78215126    YW
)@@G@@@I@@@@C                                                                 YX
)@@G@@      78215127    @I@@@@            DO 360 K = 1, L                     YY
)@@G@@                        78215128    @I@@@@               Z(K,J) = Z(K,J)YZ
)@@G@@ - G * Z(K,I)                             78215129    @I@@@@  360    CONZA
)@@G@@TINUE                                                       78215130    ZB
)@@G@@@I@@@@C                                                                 ZC
)@@G@@      78215131    @I@@@@  380    D(I) = Z(I,I)                          ZD
)@@G@@                        78215132    @I@@@@         Z(I,I) = 1.0         ZE
)@@G@@                                          78215133    @I@@@@         IF ZF
)@@G@@(L .LT. 1) GO TO 500                                        78215134    ZG
)@@G@@@I@@@@C                                                                 ZH
)@@G@@      78215135    @I@@@@         DO 400 J = 1, L                        ZI
)@@G@@                        78215136    @I@@@@            Z(I,J) = 0.0      ZJ
)@@G@@                                          78215137    @I@@@@            ZK
)@@G@@Z(J,I) = 0.0                                                78215138    ZL
)@@G@@@I@@@@  400    CONTINUE                                                 ZM
)@@G@@      78215139    @I@@@@C                                               ZN
)@@G@@                        78215140    @I@@@@  500 CONTINUE                ZO
)@@G@@                                          78215141    @I@@@@C           ZP
)@@G@@                                                            78215142    ZQ
)@@G@@@I@@@@      RETURN                                                      ZR
)@@G@@      78215143    @I@@@@C     ********** LAST CARD OF TRED2 **********  ZS
)@@G@@                        78215144    @I@@@@      END                     ZT
)@@G@@                                          78215145    ___) = 0.0        ZU
)@@G@@                                                78215116    @I@@@@C     ZV
)@@G@@)@@[M^G^G[#^G@@@@@G.)__"C[)@@NR@)@@MG.@__"C9FK@]R@K@@NG/)__"C@)@@MG@FK@@ZW
)@@G@@C/@@@[AA@@@A)@E[M^G^G@^G@@@@@@G@@@@PH@FK@@G@FK@@C/@@@[G]@@@G[]@@@PH@FK@@ZX
)@@G@@[@@@@OG"@__"C'FK@ AB@@@A)@O[N#^GK1#^G@^G@@[#)@@@[@@@[^C_)@@[G@@@@@C/@__"ZY
)@@G@@[]@@@U[[)@@T[[@@@S[@)@@R[@@@@QAC@@@A)@Y[EK1#^GK1#^GK1#@@@@@@G[@@@SC[@@@WZZ
)@@G@@G@)@@P[@)@@WH@)@@VG@)@@@C@)@@VG@@@@@C/@__"AD@@@A)@$[N#^GK1#[#[#[#@'K@@@XAA
)@@G@@;@@@@MC@@@@V[@@@@#'K@@@Y;@@@@MC@@@@V[[@@@Y[@)@@X[@@@@WAE@@@A)@1[MK0^@K@@AB
)@@G@@@@@@@@(@@@@IH@)@@@C/)@@[8L@@@XG_)@@[8LK@@3[@^)@@C@#)@@N[K@@W[@@@@^AF@@@AAC
)@@G@@)@;[N@@@K1#^G@@@@@C@@@@W[#@@@^[@)@@W[[@@[^C_@@@]G[@@@@C.@__.G@)@@@C/)@@]AD
)@@G@@/K@@^:AG@@@A)[ [F#^GK0K1#^GK0@@@@@@@H/)__. @@@@E @@@@C]@)@@#H@)@@@C/)@@[AE
)@@G@@G@@@@P[@@@@@H@@@@^AH@@@A)[I[N@^@K1#@@@@@@@[@)@[ [[@@@#'L@@@G;[@@@MC[@@@VAF
)@@G@@G@)@@#C/)__"/K@@[Y*@@@@I/G)@[LAI@@@A)[S[EK1#^[#^[#^G@@@@@@@@C/@__"O[@@@RAG
)@@G@@R[@@@@/K@@[**@@@@E8LK@[S[@@@@E"@@@@EE@#)@@AJ@@@A)[-[N#^GK1#@K[#@@@C/)__"AH
)@@G@@G@@@@#C/@__"/K@@^>[@=@@@C@?@@@G@@@@PG@@@@@T@@@@VG@@@@#AK@@@A)[:[F#^GK1#^AI
)@@G@@GK0K0@@@@@@@C.)__"G@)@@PG/)@@[O@0@@RR@0@@@G[@@@@C[@@@PT@)@@VG@)@@@AL@@@AAJ
)@@G@@)[4[N#^GK1#^G@^G@@[@@@@X[@@@[ []@@@^'M@@@K;]@@@MC]@@@VG[)@@PG[)@@@T[)@@VAK
)@@G@@G[)@@#AM@@@A)["[N#^GK0K0^GK1@@8LK@][[@@@@C"@@@@C"C^)@@[@^@@@"G@@@EC@^@@@AL
)@@G@@[[)@@)[[@@@Z[@)@@YAN@@@A)]C[N#[#^CK1#[#[#@]@@@@BD@@@@G0@@@@AE@@@@G@[:@@JAM
)@@G@@@@@@@C/,0@@@[@)@@AC@=@@@R[@@@)AO@@@A)]M[F#[#^GK1#^GK1#@@@@@@" @@@AC[@@@BAN
)@@G@@"C)@@E]@)@@C"^)@@C"C)@@AC@)@@B]@#@@@"C@@@EAP@@@A)]V[MK0K1#[#[#^G@@Q[K@@MAO
)@@G@@R[K@@F[@@@@^'K@@@Z;@@@@MC@@@@VR@0@@YC_)@@[ @@@@A][^@@@AQ@@@A)]>[F#^GK0K1AP
)@@G@@#^GK1#@@@@@@G@)@@PH@)@@VG@)@@[C@)@@VG@@@@[C/@__"[#)@@[]@)@@-N[K@@XAR@@@AAQ
)@@G@@)],[N#^G^G^GK0K0@@[@)@@A'K)@@Z;@)@@MC@)@@V @@@@B[@#@@@"G@@@-C@^@@@[@)@@<AR
)@@G@@[@@@@+AS@@@A)]8[N#[#[#@K1#^@@@8L)@].[@@@@B"@@@@B"CA)@@C@B)@@N[)@@+[@)@@BAS
)@@G@@'K)@@<;@)@@MC@)@@VAT@@@A)#][EK1#^GK[@K1#@@@@@@@@G@)@@#D@)@@ /K@@#-*@@@@IAT
)@@G@@/G)@#DH@)@@#[@)@@ G@)@@[C/)@@[AU@@@A)#F[F#^GK1#^GK1#^GK0@@@@G[)@@@H[)@@VAU
)@@G@@T[)@@VC[)@@ G[@@@PH[@@@VG[@@@ T[@@@[C[@@@VAV@@@A)#O[N#^G@K0@@@@@@@"CA)@@AV
)@@G@@C@B)@@[@)@[AQ[0@@KR[0@@F[]@@@A'M@@@M;]@@@MC]@@@VG[)@@PAW@@@A)#Y[N#^GK^GKAW
)@@G@@0[#^G@[@)@@A"@)@@A"C>)@@C@=)@@[@ @@@"G@@@CC@@@@B8L)@#W[@@@@B"@@@@BAX@@@AAX
)@@G@@)#*[M^[#^G^G^G@@@@C_0@@[G[@@@#C.@__"[@)@@D"G)@@K"[@@@CC[@@@C8LK@]$G_)@@[AY
)@@G@@O/0@@[AY@@@A)#2[F#^G^GK0K1#^G@@@@@@@G@)@@[C@)@@VG@@@@[C/@__"[#0@@[[[@@@=AZ
)@@G@@[[@@[ R[0@@ZR[)@@MAZ@@@A)#;[N#^GK1#[#^G^G@]@A@@@]@@@@B"^A@@@"C@@@D[@@@@ABA
)@@G@@C@B@@@[@)@@&[@@@@>G@)@@PH@)@@VBA@@@A)^ [N#[#[#^GK0K0@@[@)@@ 'K)@@&;@)@@MBB
)@@G@@C@)@@VQ[@@@MR[@@@F[@)@@#'K)@@Z;@)@@MC@)@@VBB@@@A)^J[N#[#@K0^@@@@@@O.)@@[BC
)@@G@@8L)@^K]@>)@@"@)@@G"C)@@BC@<)@@"^ @@@"C@@@AC@^)@@N[)@@>BC@@@A)^T[N#[@K0K0BD
)@@G@@K0K0@@"C@@@EC@#@@@N[K@@=[@@@@#'K@@@Z;@@@@MC@@@@V8LK@#6G_0@@[O[0@@VBD@@@ABE
)@@G@@)^<[MK^GK1#@K@@@@@ @]@@@ @[@@@8L@@[#G_@@@[[@^@@@C@@@@CO[@@@TR[@@@@8LK@^-BF
)@@G@@[@#)@@BE@@@A)^![M[#^G^GK1#^G@@H@@@@VG@@@@@C@@@@V[#)@@@[@@@[^R[)@@NR[K@@UBG
)@@G@@C_)@@[G@@@@@C/@__"BF@@@A)^7[F#^GK0K1#^GK0@@@@@@@C/@@@[[@)@@$[@@@@WG@)@@PBH
)@@G@@H@)@@VG/)@@[T@)@@@C@)@@VG@@@@PBG@@@A) @[F#^GK1#^G^G^@@@@@@@@/K@@ 1(@A@@@BI
)@@G@@G[@@@#C.@__"G@)@@VD@)@@#T@@@@V]@@@@#H@@@@@BH@@@A) D[F#^GK1#^GK1#[#@@@@@@BJ
)@@G@@'L)@@W;[)@@MC[)@@VQ[@@@QR[@@@FQ@0@@QR@0@@FQ[0@@$R[0@@FBI@@@A) M[M^GK1#^GBK
)@@G@@K0^G@@"@@@@B"C^)@@C@C)@@N[)@@% @@@@B[[@@@%[@)@@(]@@@@*[[@@[ [[)@@CBJ@@@ABL
)@@G@@) W[N#^[#[#@K^G@@@'O)@@BC^)@@#8L)@ Z]@#)@@"^#@@@"C@@@BC@B)@@N[)@@%8L)@ TBM
)@@G@@[@@@@BBK@@@A) &[MK0^G[#@@@@@@@]@)@@C'O)@@CC^)@@*[@)@@^'K)@@^C^)@@([@)@@#BN
)@@G@@'K)@@#C^)@@(]@)@@BBL@@@A) 0[N@[#^GK1#^GK0@G.@@@[T[@@@@C[@@@VG@)@@PH@)@@VBO
)@@G@@G@)@@@C@)@@V[@A@@@C@ @@@8LK@ RBM@@@A) '[N#^GK0K0K[@@@@C/@__"/K@@AJ*@@@@GBP
)@@G@@/C@@A#G/@__"C@@@@#[[>@@@C[)@@GG[@@@PH[@@@VBN@@@A)A^[N#^G^G@@@@@@@@ @#)@@BQ
)@@G@@ @^)@@[@@@[ [[@@@^'L@@@I;[@@@MC[@@@VQ@0@@KR@0@@FG@@@@#BO@@@A)AI[N@K0^[@KBR
)@@G@@^GK1#@9!)@@:R]0@@K@#[@@J/K@@AQN@0@AP8L@@^3G_)@@[O.)@@[O[K@@O8LK@AGBP@@@ABS
)@@G@@)AS[F#^GK1#^GK1#^GK0@@@@R[)@@8R[K@@7R[@@@6R@0@@5R@)@@4R@K@@39\)@@19\@@@\BT
)@@G@@9,@@@!BQ@@@A)A-@3#^GK1#^GK0@@@)@H@C@@@@@@@@@@@@@@@F@@B*4@K@HN[)@@.N[K@@/BU
)@@G@@N[@@@;R]@@@'R[0@@9BR@@@A)A$@N#^D@@@@)@J@K@)A(@<#^GK1#@9:@@@\9%@@@!9()@@:BV
)@@G@@AA0@@K@#[@@]S1TRD2/K@@@@/K@K@HBS@@@A)A![F#^GK1#^GK1#^GK0@@@@A]@@@'A[0@@9BW
)@@G@@A[)@@8A[K@@7A[@@@6A@0@@5A@)@@4A@K@@39:)@@1BT@@@A)A6[N#^GK0K0K^[@K@[^@@@_BX
)@@G@@[^@@@9[^@@@.[^@@^,C8FK@[[@K@@VC@VK@@^[)@@.^[K@@/^[@@@;BU@@@A)B@@3@^G^GK@BY
)@@G@@)@F@K@@@@@@@@@@@@@KG@@@@@@[@@@/K@@@@[@@@@MC8FK@^[@@@@NC8FK@#[^@@@UBV@@@ABZ
)@@G@@@@^@@]@@A@@]@@E@@[@@I@@@@@]@@"@C@@BASQRT        NERR3$      S1TRD2      CA
)@@G@@@@[@@@@@@@A(@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@*[S@@@*SDFF*@A@@@@      SUBROUTINE S1VLSD(VN,N,$CC
)@@G@@)     @ @@@@      IMPLICIT INTEGER(A-Z)   @^@@@@      DIMENSION VN(1)   CD
)@@G@@@[@@@@C     @F@@@@C             SUBROUTINE CALLED AT THE BEGINNING OF ANCE
)@@G@@ALYSIS PHASE@F@@@@C        TO DETERMINE INDICES OF VARIABLES TO BE PROCECF
)@@G@@SSED BY THE @G@@@@C        PROGRAM.  VARIABLE NUMBERS ARE OBTAINED BY TECG
)@@G@@STING THE BIT     @C@@@@C        FLAGS PUT UNDER TAG 'VARUSE' BY S1VLST.CH
)@@G@@@[@@@@C     @#@@@@      COMMON X(2) @[@@@@C     @C@@@@      CALL S1GTAG(CI
)@@G@@'VARUSE',FW,NWE,NEL,$999)     @B@@@@      CALL S1GVAL('NVARS',NV,$999,$9CJ
)@@G@@99)   @]@@@@      N=0   @^@@@@      DO 100 I=1,NV     @#@@@@      IW=(I-CK
)@@G@@1)/36 @^@@@@      IBIT=I-36*IW-1    @ @@@@      TST=FLD(IBIT,1,X(FW+IW))CL
)@@G@@@ @@@@      IF(TST .EQ. 0) GO TO 100@]@@@@      N=N+1 @#@@@@      VN(N)=CM
)@@G@@I     @#@@@@ 100  CONTINUE    @]@@@@      RETURN@#@@@@ 999  RETURN 3    CN
)@@G@@@]@@@@      END   ___@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@)@@@M@)@C@K@)@]@<#]^^GCS@@@@@@@@@@@@@@@@@C/,0@@@CQ
)@@G@@[@@@@L______VARUSEG/@__"C8FK@@AA@@@A)@A@V#]A^@@@)@E@K@)@D@V#]^OG@@@@@@@ECR
)@@G@@/,0@@@@[ @@I______NVARS /K@@@3@@@@@]@@@@@[AB@@@A)@G[N#]@)CS[#@CS@@[#)@@^CS
)@@G@@[@@@[^C_)@@[G@@@@#C/@__" @@@@@@[A@@I/K@@@3/K@@@3@@@@@#AC@@@A)@Q[MK0]A^GCCT
)@@G@@S^G@@@H/@@@[G@@@@^T/@@@=O@K@@ R@K@@@]@@@@ W/@@@=;O@@@=H@@@@^C/@@@[AD@@@ACU
)@@G@@)@)[N##2-)K0--@@@@[[@@@@G[@@@@C.@@@[/K@@@,(@@@@B[@)@@B;C)@@<;))K@AC@-J_"CV
)@@G@@[@@@@AAE@@@A)@%[MK0-)^[@K^G@@@C8)@@#@[O@@I/K@@@;N@0@@28L@@@PG_)@@[[[-@@@CW
)@@G@@C[)@@^O@K@@LR@K@@@AF@@@A)@4[F@K^GCSK=CSK0-)@@@@@9!)@@MR]0@@J[^)@@GH8)@@[CX
)@@G@@/K@@@@!^)@@G@[P@@I/K@@@7N@0@@6AG@@@A)@.@<#]A^GCS@@@@@@)@G@C@)[[@N#]^0@@@CY
)@@G@@/K@@@@/K@K@G@@F@@@*4@K@GN[@@@RR@K@@Q9\)@@OAH@@@A)@I@K@)[#@'K0--#]A^GCS@@CZ
)@@G@@^[@@@RA@K@@Q9:)@@O9()@@M[^@@@GAA0@@JC8@@@^@[P@@#S1VLSDAI@@@A)[E@2K^[@K^@DA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/K@@@@[^@@@K[^@@@*[^@@@([^@@@%C8FK@[AJ@@@ADB
)@@G@@@@^@@#@@B@@^@@J@@[@@N@@[@@#@@S@C@@[K@@@@@]S1GTAG      S1GVAL      NERR4$DC
)@@G@@      NERR3$      S1VLSD      @@[@@@@@@@[#BLANK$      ^@@@C@@]@@@@@@@@@@DD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@*[S@@@*SDFF*@D@@@@        SUBROUTINE S1STDZ(DATADE
)@@G@@,STANDV,LENSTD,MDATA)   @[@@@@C     @B@@@@        DIMENSION DATA(1),STANDF
)@@G@@DV(6,1)     @ @@@@        LOGICAL MDATA,MLE     @#@@@@        INTEGER VNDG
)@@G@@@[@@@@C     @B@@@@C      STANDV(1,I) IS VARIABLE NUMBER     @A@@@@C     DH
)@@G@@ STANDV(2,I) IS DESIRED MEAN  @C@@@@C      STANDV(3,I) IS DESIRED STANDADI
)@@G@@RD DEVIATION@C@@@@C      STANDV(4,I) IS COUNT OF NON-MISSING DATA @E@@@@DJ
)@@G@@C      STANDV(5,I) IS SUM OIF DATA OR MEAN DURING S1STDI    @G@@@@C     DK
)@@G@@ STANDV(6,I) IS SUM OF SQUARES OR STANDARD DEVIATION DURING S1STDI@^@@@@DL
)@@G@@        DO 10 I=1,LENSTD@ @@@@        VN=BOOL(STANDV(1,I) ) @G@@@@      DM
)@@G@@  IF(MDATA.AND.(DATA(VN).EQ.0.AND.FLD(1,1,DATA(VN)).EQ.1)) GO TO  @B@@@@DN
)@@G@@     1                               10   @B@@@@        STANDV(5,I)=DATADO
)@@G@@(VN)+STANDV(5,I)  @D@@@@        STANDV(6,I)=DATA(VN)*DATA(VN)+STANDV(6,IDP
)@@G@@)     @A@@@@        STANDV(4,I)=STANDV(4,I)+1   @#@@@@10      CONTINUE  DQ
)@@G@@@#@@@@        RETURN    @[@@@@C     @[@@@@C     @^@@@@        ENTRY S1STDR
)@@G@@DC    @^@@@@        MLE=.FALSE.     @B@@@@        CALL S1GTAG('MLE',FW,NDS
)@@G@@EL,NWE,$20) @#@@@@        MLE=.TRUE.@#@@@@20      CONTINUE  @^@@@@      DT
)@@G@@  DO 30 I=1,LENSTD@^@@@@        NP=STANDV(4,I)-1@^@@@@        IF(MLE)NP=DU
)@@G@@NP+1  @C@@@@        IF(NP.EQ.0.OR.STANDV(4,I).EQ.0) GO TO 30@^@@@@      DV
)@@G@@  SUM=STANDV(5,I) @C@@@@        STANDV(5,I)=STANDV(5,I)/STANDV(4,I)     DW
)@@G@@@E@@@@        STANDV(6,I)=SQRT((STANDV(6,I)-(STANDV(5,I)*SUM)     @#@@@@DX
)@@G@@     1   )/NP)    @#@@@@30      CONTINUE  @#@@@@        RETURN    @[@@@@DY
)@@G@@C     @[@@@@C     @B@@@@        ENTRY S1STDI(DATA,STANDV,LENSTD)  @^@@@@DZ
)@@G@@        DO 40 I=1,LENSTD@ @@@@        VN=BOOL(STANDV(1,I) ) @F@@@@      EA
)@@G@@  IF(MDATA.AND.(DATA(VN).EQ.0.AND.FLD(1,1,DATA(VN)).EQ.1))  @#@@@@     1EB
)@@G@@   GO TO 40 @F@@@@        DATA(VN)=((DATA(VN)-STANDV(5,I))/STANDV(6,I))*EC
)@@G@@STANDV(3,I)+@^@@@@     1    STANDV(2,I)   @#@@@@40      CONTINUE  @#@@@@ED
)@@G@@        RETURN    @A@@[@        ENTRY S1STDS(STANDV,LENSTD) @^@@[@      EE
)@@G@@  DO 50 I=1,LENSTD@^@@[@        STANDV(4,I)=0   @^@@[@        STANDV(5,IEF
)@@G@@)=0   @^@@[@        STANDV(6,I)=0   @#@@[@50      CONTINUE  @#@@[@      EG
)@@G@@  RETURN    @]@@@@        END ___@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[MK0^G^G^GK0@@@R@)@@[EI
)@@G@@[@@@@[C@[@@@[@)@@O[@@@[^R@K@@MG/)__9C8:K@@G@@@@NC/@__"AA@@@A)@E[V#@@@@@@EJ
)@@G@@ @@@@I*@]@@ C/)@@[ @@@@K*@@@@IG/)__"C.@@@[;C)@@<;))@@[C@+@@ O@)@@OAB@@@AEK
)@@G@@)@P[U[@@@@@@[[[@@ "[[@@ "D]@@ C[]@@ [@-@@^"@-@@^C@+@@ /=0@@<+@)@@LC@)@@@EL
)@@G@@+[@@@IAC@@@A)@)[]K0^[@K^G@@@@@)@C@C@MLE   @[K@@J/K@@]GN@0@@$8L@@@BO/K@@AEM
)@@G@@[@-@@#"@)@@EC@-@@#AD@@@A)@D@C@)@*[##^CK1#^GK1@K0@[N@@J/K@@@2@@@@@ @@@@@^EN
)@@G@@@@@@@#@@@@@C/,0@@@ @@@@@______AE@@@A)@0[MK0K1#@K1#@@@@"K@@@G"@@@@F"^@@@EEO
)@@G@@C@]@@#[@@@[^R@)@@MG@@@@NC/@__"[@@@@@C/@@@[AF@@@A)@'[MK1#^@K1#[#@@@ @@@@GEP
)@@G@@*@@@@AC/@@@[[@@@@AG@@@@AC/@@@[/)@@[[C@@@@@[@K@@A;)W@@DAG@@@A)[^[M@K[#@K0EQ
)@@G@@@@@@@@"C@@@B[@]@@^"G]@@#[@@@@BC@]@@^/=K@[R)@@@@I @@@@I*@]@@#C/)@@[AH@@@AER
)@@G@@)[I[M^G^GK>#^G@@@@O/)@@A[@]@@ @[)@@J@@@@@O/,0@@@]@@@@O"G@@@J"O)@@AC/)@]VES
)@@G@@"^]@@ AI@@@A)[S[N@K^[#[#^G^G@@[@@@[^R@K@@MG/)__9C@)@@PG@@@@NC/@__"@[<@@JET
)@@G@@/K@@]GN@0@[V8L@@@6AJ@@@A)[+[N#[#^GK0@@@@@@G/)__"C.@@@[;C)@@<;))@@[C@+@@ EU
)@@G@@O@)@@OR@)@@[[@@@@[C@[@@@[@)@@OAK@@@A)[?[U@@^@@@@"^-@@^C@+@@ /=0@[;+@)@@LEV
)@@G@@C@)@@@+[@@@I @@@@I*@]@@ C/)@@[ @@@@K*@@@@IAL@@@A)[7[M@^[@K^G@@@@@@C/@__"EW
)@@G@@@[\@@J/K@@]GN@0@[_8L@@[<O/K@@A[@+@@ "@-@@["C-@@]"G-@@ AM@@@A)][[N#^GK0@KEX
)@@G@@^[@@@@/K@@]GN@0@]F8L@@]  @])@  @]@@^ @]@@#[@@@[^Q@)@@MR@)@@GG@@@@NAN@@@AEY
)@@G@@)]F@;#^GK1#^GK1#@@)@H@C@@@@@@@@@F@@@*4@K@HN[@@@UR@)@@TR@K@@S9!)@@QR]0@@KEZ
)@@G@@@['@@JAO@@@A)]M@N#^E@@@@)@J@K@)]O@<#^GK1#@A@K@@S9()@@Q[^@@@HAA0@@K@['@@#FA
)@@G@@S1STDZ/K@@@@/K@K@HAP@@@A)]S[N#^G[@^G^G@@@@C@VK@][@@@@MC8FK@[[@@@@PC8FK@@FB
)@@G@@/\K@]OC8@@@ /KH@@@^[@@@UA@)@@TAQ@@@A)]+[N#[@K^@K^@K@@@/\K@]OC8@@@^/K@@@*FC
)@@G@@/\K@]OC8@@@[/K@@@@[^@@[2[^@@@QC8FK@#[@K@@NAR@@@A)]?[MK0K0K1@^@@@@@C8FK@@FD
)@@G@@/\K@]OC8@@@#/K@@[W[@K@@NC@VK@][@@@@MC8FK@[[@@@@PC8FK@@AS@@@A)]6@<#[#^@@@FE
)@@G@@)@E@S@@@@@@@@@@@@@@@@@@@@@A@@@NS@@@@KG@@@@/K@@]@[@K@@NC@VK@[[@@@@MAT@@@AFF
)@@G@@@@^@@]@@A@@#@@G@@^@@W@@@@@]@@V@C@@]'S1GTAG      SQRT        NERR3$      FG
)@@G@@S1STDZ      @@[@@@@@@@]VS1STDC      @@[@@@@@@@]$S1STDI      @@[@@@@@@@]%FH
)@@G@@S1STDS      @@[@@@@@@@]3*[S@@@*SDFF*@C@@@@      SUBROUTINE S2LOAD(OUTS,SFI
)@@G@@ETID,MSET,MSETPT, @C@@@@     -   IVARS,ROWN,ROWPT,COLN,COLPT,BDATA,     FJ
)@@G@@@ @@@@     -   IDXT,IDSQ,ITSA,ITSB) @ @@@@      IMPLICIT INTEGER (A-Z)  FK
)@@G@@@D@@@@      DIMENSION OUTS(20,1),SETID(1),MSET(1),MSETPT(1) @G@@@@      FL
)@@G@@DIMENSION IVARS(1),ROWN(1),ROWPT(1),COLN(1),COLPT(1),BDATA(1)     @[@@@@FM
)@@G@@C     @F@@@@C        DSTAT2 SUBROUTINE TO LOAD PROCESSING AND OUTPUT SPEFN
)@@G@@CS    @C@@@@C                FROM DISK AND TAGGED STORAGE.  @[@@@@C     FO
)@@G@@@[@@@@C     @G@@@@      COMMON /S2ABLK/ NV,NVIN,MDATA,REPM,CODES,COPIN,MFP
)@@G@@LE,NSET,PLAN,     @A@@@@     -   LSUBHD,MLEHED(7),MDDHED(7) @[@@@@C     FQ
)@@G@@@[@@@@C     @^@@@@      COMMON BLCOM(2)   @[@@@@C     @[@@@@C     @ @@@@FR
)@@G@@      DIMENSION LABELS(7,4)   @F@@@@      DATA LABELS /'MAXIMUM LIKELIHOFS
)@@G@@OD ESTIMATES              ',  @F@@@@     -             'UNBIASED ESTIMATFT
)@@G@@ES                        ',  @F@@@@     -             'BIVARIATE SUBSAMFU
)@@G@@PLE METHOD FOR MISS. DATA ',  @F@@@@     -             'MISSING DATA REPFV
)@@G@@LACED WITH MEANS ALGORITHM'/  @[@@@@C     @[@@@@C     @F@@@@C           FW
)@@G@@  RETRIEVE PROBLEM PARAMETERS FROM TAGGED STORAGE     @[@@@@C     @C@@@@FX
)@@G@@      CALL S1GTAG('DSTATV',FW,NWE,NEL,$950)     @A@@@@      IF(NWE*NEL .FY
)@@G@@NE. 13) GO TO 950 @#@@@@      NV=BLCOM(FW)@^@@@@      NVIN=BLCOM(FW+1)  FZ
)@@G@@@^@@@@      MDATA=BLCOM(FW+2) @^@@@@      REPM=BLCOM(FW+3)  @^@@@@      GA
)@@G@@CODES=BLCOM(FW+4) @^@@@@      COPIN=BLCOM(FW+5) @^@@@@      MLE=BLCOM(FWGB
)@@G@@+6)   @^@@@@      NSET=BLCOM(FW+7)  @^@@@@      PLAN=BLCOM(FW+8)  @^@@@@GC
)@@G@@      IDXT=BLCOM(FW+9)  @^@@@@      IDSQ=BLCOM(FW+11) @^@@@@      ITSA=BGD
)@@G@@LCOM(FW+10) @^@@@@      ITSB=BLCOM(FW+12) @C@@@@      CALL S1GTAG('IDMATGE
)@@G@@',LSUBHD,NWE,NEL,$950)  @^@@@@      LSUBHD=LSUBHD+2   @[@@@@C     @A@@@@GF
)@@G@@C             SET MLEHED AND MDDHED @[@@@@C     @]@@@@      IM=1  @ @@@@GG
)@@G@@      IF(MLE .EQ. 0) IM=2     @#@@@@      DO 60 K=1,7 @ @@@@ 60   MLEHEDGH
)@@G@@(K)=LABELS(K,IM)  @#@@@@      MDDHED(1)=0 @A@@@@      IF(MDATA .EQ. 0) GGI
)@@G@@O TO 100    @]@@@@      IM=3  @ @@@@      IF(REPM .NE. 0) IM=4    @#@@@@GJ
)@@G@@      DO 70 K=1,7 @ @@@@ 70   MDDHED(K)=LABELS(K,IM)  @[@@@@C     @F@@@@GK
)@@G@@C             SET SPECS IF NSET = 0  IE NO OUTPUT OR SUBSET CARDS @[@@@@GL
)@@G@@C     @#@@@@ 100  SUBSET=0    @A@@@@      IF(NSET .NE. 0) GO TO 200     GM
)@@G@@@]@@@@      NSET=1@^@@@@      DO 110 J=1,20     @#@@@@ 110  OUTS(J,1)=0 GN
)@@G@@@#@@@@      SETID(1)=0  @^@@@@      DO 120 I=1,NV     @#@@@@ 120  MSET(IGO
)@@G@@)=I   @#@@@@      ROWN(1)=NV  @#@@@@      COLN(1)=0   @#@@@@      BDATA(GP
)@@G@@1)=0  @]@@@@      RETURN@[@@@@C     @C@@@@C             BEGIN LOOP TO LOGQ
)@@G@@AD SPECS FROM DISK@[@@@@C     @B@@@@ 200  CALL S1IODR(1,'REWIND',0,0,DUMGR
)@@G@@)     @]@@@@      JIV=1 @]@@@@      NS=0  @]@@@@      JBD=1 @]@@@@      GS
)@@G@@JSQ=1 @#@@@@ 205  NS=NS+1     @A@@@@      IF(NS .GT. NSET) GO TO 300    GT
)@@G@@@[@@@@C     @C@@@@C             GET SUBSET NUMBER -  SET SETID    @[@@@@GU
)@@G@@C     @ @@@@      CALL VREAD(1,ID,$970)   @ @@@@      IF(ID .LT. 0) GO TGV
)@@G@@O 220 @#@@@@      SUBSET=1    @^@@@@      ENCODE(TEMP,210)ID@#@@@@ 210  GW
)@@G@@FORMAT(I6)  @^@@@@      SETID(NS)='      '@]@@@@      JS=2  @#@@@@      GX
)@@G@@DO 215 J=1,6@ @@@@      CALL S1PRFT(TEMP,J,CH)  @A@@@@      IF(CH .EQ.  GY
)@@G@@' ')GO TO 215     @A@@@@      CALL S1PRST(SETID(NS),JS,CH)  @#@@@@      GZ
)@@G@@JS=JS+1     @#@@@@ 215  CONTINUE    @#@@@@      GO TO 225   @#@@@@ 220  HA
)@@G@@SETID(NS)=0 @[@@@@C     @ @@@@C             GET OUTPUT SPECS@[@@@@C     HB
)@@G@@@A@@@@ 225  CALL VREAD(20,OUTS(1,NS),$970)@[@@@@C     @A@@@@C           HC
)@@G@@  GET LTYPE AND BRANCH  @[@@@@C     @ @@@@      CALL VREAD(1,LTYPE,$970)HD
)@@G@@@A@@[@      IF(LTYPE .EQ. 0) GO TO 230    @A@@[@      IF(SETID(NS) .NE. HE
)@@G@@0) GO TO 230@#@@[@      SUBSET=1    @^@@[@      SETID(NS)='      '@#@@[@HF
)@@G@@ 230  CONTINUE    @A@@@@      IF(LTYPE .NE. 0) GO TO 250    @A@@@@      HG
)@@G@@IF(PLAN .NE. 2) GO TO 205     @#@@@@      ROWN(NS)=NV @^@@@@      ROWPT(HH
)@@G@@NS)=JIV     @^@@@@      DO 240 J=1,NV     @#@@@@      IVARS(JIV)=J@#@@@@HI
)@@G@@ 240  JIV=JIV+1   @#@@@@      COLN(NS)=0  @^@@@@      SIZ=NV*(NV+1)/2   HJ
)@@G@@@#@@@@      SQSIZ=NV*NV @#@@@@      GO TO 270   @[@@@@C     @ @@@@C     HK
)@@G@@        GET ROWVAR SPECS@[@@@@C     @ @@@@ 250  CALL VREAD(1,NA,$970)   HL
)@@G@@@#@@@@      ROWN(NS)=NA @^@@@@      ROWPT(NS)=JIV     @A@@@@      CALL VHM
)@@G@@READ(NA,IVARS(JIV),$970)@#@@@@      JIV=JIV+NA  @A@@@@      IF(LTYPE .EQHN
)@@G@@. 2) GO TO 260    @#@@@@      COLN(NS)=0  @^@@@@      SIZ=NA*(NA+1)/2   HO
)@@G@@@#@@@@      SQSIZ=NA*NA @#@@@@      GO TO 270   @[@@@@C     @ @@@@C     HP
)@@G@@        GET COLVAR SPECS@[@@@@C     @ @@@@ 260  CALL VREAD(1,NB,$970)   HQ
)@@G@@@#@@@@      COLN(NS)=NB @^@@@@      COLPT(NS)=JIV     @A@@@@      CALL VHR
)@@G@@READ(NB,IVARS(JIV),$970)@#@@@@      JIV=JIV+NB  @#@@@@      SIZ=NA*NB   HS
)@@G@@@#@@@@      SQSIZ=2*SIZ @[@@@@C     @ @@@@C             UPDATE BDATA    HT
)@@G@@@[@@@@C     @#@@@@ 270  BDATA(NS)=0 @B@@@@      IF(OUTS(20,NS) .NE. 0) GHU
)@@G@@O TO 205    @^@@@@      BDATA(NS)=JBD     @D@@@@      IF(MDATA .NE. 0) BHV
)@@G@@DATA(NS)=BDATA(NS)+262144*JSQ @#@@@@      JBD=JBD+SIZ @^@@@@      JSQ=JSHW
)@@G@@Q+SQSIZ     @#@@@@      GO TO 205   @[@@@@C     @A@@@@C             SET HX
)@@G@@MSET AND MSETPT   @[@@@@C     @A@@@@ 300  IF(NVIN .NE. NV) GO TO 320    HY
)@@G@@@^@@@@      DO 310 I=1,NV     @#@@@@      MSET(I)=I   @A@@@@      IF(SUBHZ
)@@G@@SET .NE. 0) MSETPT(I)=I @#@@@@ 310  CONTINUE    @]@@@@      RETURN@#@@@@IA
)@@G@@ 320  LST=JIV-1   @ @@@@      IF(LST .EQ. 0) GO TO 980@^@@@@      DO 330IB
)@@G@@ I=1,NV     @#@@@@ 330  MSETPT(I)=0 @^@@@@      DO 340 J=1,LST    @#@@@@IC
)@@G@@      II=IVARS(J) @C@@@@      IF(II .LE. 0  .OR.  II .GT. NV) GO TO 980 ID
)@@G@@@#@@@@ 340  MSETPT(II)=1@]@@@@      JF=0  @^@@@@      DO 350 I=1,NV     IE
)@@G@@@A@@@@      IF(MSETPT(I) .EQ. 0) GO TO 350@#@@@@      JF=JF+1     @#@@@@IF
)@@G@@      MSET(JF)=I  @#@@@@      MSETPT(I)=JF@#@@@@ 350  CONTINUE    @A@@@@IG
)@@G@@      IF(JF .NE. NVIN) GO TO 980    @]@@@@      RETURN@[@@@@C     @ @@@@IH
)@@G@@C             ERROR STOPS     @[@@@@C     @#@@@@ 950  PRINT 9950  @D@@@@II
)@@G@@ 9950 FORMAT('0***** TAGGED STORAGE ERROR IN S2LOAD') @]@@@@      STOP  IJ
)@@G@@@#@@@@ 970  PRINT 9970  @D@@@@ 9970 FORMAT('0*****  DRUM LOADING ERROR IIK
)@@G@@N S2LOAD')  @]@@@@      STOP  @#@@@@ 980  PRINT 9980  @D@@@@ 9980 FORMATIL
)@@G@@('0*****  LOADING TROUBLE IN S2LOAD')     @]@@@@      STOP  @[@@@@C     IM
)@@G@@@[@@@@C     @F@@@@C        LOCAL SUBROUTINE TO READ A VECTOR AND TEST ERIN
)@@G@@ROR FLAG    @[@@@@C     @ @@@@      SUBROUTINE VREAD(LV,V,$)@ @@@@      IO
)@@G@@IMPLICIT INTEGER (A-Z)  @^@@@@      DIMENSION V(1)    @B@@@@      CALL SIP
)@@G@@1IODR(1,'READ',LV,V,LEND)     @ @@@@      IF(LEND .GE. 0) RETURN  @#@@@@IQ
)@@G@@      RETURN 3    @]@@@@      END   ___   @A@@@@      IF(LTYPE .NE. 0) GIR
)@@G@@O TO 250    @A@@@@      IF(PLAN .NE. 2) GO TO 205     @#@@@@      ROWN(NIS
)@@G@@)@@[V#@@@@@@C9:K@AR9FK@BG.@__:C9FK@ R8;K@DR8:K@ R8VK@[G/)__:C8:K@[G/@__?IT
)@@G@@C@@@[=AA@@@A)@F[MK0@@^G@@@@@@@[#)@[*G_)__:C;:K@DG_@__:C;FK@CG")__:C':K@BIU
)@@G@@G"@__:C]@@[=G.)__:AB@@@A)@P[F#@K0K0^G^G[#@@@@@@@[#)@[:G_)__?C#)@[&[#)@[%IV
)@@G@@G_)__?C#)@[$[#)@[(G_)__?C#)@[>AC@@@A)@Y[F#@K0K0^G^G[#@@@@@@@[@@@[,G_)__:IW
)@@G@@C#)@[>[#)@[!G_)__:C#)@[&[#)@[?G_)__:C#)@[$AD@@@A)@$@3#[#[#[#[#[#@@)@@@S@IX
)@@G@@LIHOODM LIKEMAXIMU[#@@[4[])@[3[]@@[2[[)@[1[[@@[0[@)@[\AE@@@A)@#[S@@@@@@@IY
)@@G@@                        IMATESED ESTUNBIAS            ATES   ESTIMAF@@@AIZ
)@@G@@)@I[S@@@@@@@CED WI REPLAG DATAMISSIN DATA  MISS.OD FORE METHBSAMPLATE SUJA
)@@G@@BIVARIAG@@@A)@T@S@)@6@K@)@!@V#[][#@@@@@@@@@@@@@6/,0@@@[#)@[5______DSTATVJB
)@@G@@ORITHMNS ALGTH MEAAH@@@A)@0[F#[#[#[@K0K0K0K0@@@@G/@__2T@@@@XC@@@@YR[K@@WJC
)@@G@@@[E@[X/K@@B$@@@@@Y@@@@@X@@@@@WAI@@@A)@9[EKB>#H[K3KOG4^@@@@@@C[>@@][[@@@]JD
)@@G@@C[ @@[[@)@@[C@>@@@[@@@@@C@ J_"/K@@B$*@@@@GAJ@@@A)[][F#H[K3KOG4 #H[K3@@@@JE
)@@G@@[#)@@BC#>@@A[#@@@AC# @@ [])@@ C]>@@^[]@@@^C] @@#[[)@@#AK@@@A)[F[F[K3KL[^JF
)@@G@@^KK@@@@@@@@@C] @@F[[)@@@C[>@@D[[@@@@C[ @@E[@)@@@C@>@@C[@@@@CC@ @@BAL@@@AJG
)@@G@@)@8@K@)[O@'K)K0K3K0K0K@@/K@@B$@@@@@Y@@@@@X@@@@@D@@@@@8/,0@@@[]@@@@______JH
)@@G@@IDMAT AM@@@A)[V[F#@K3K3^G^G4@@@@@@@@C/@@@]/K@@[>*@@@@A[@)@@ZC/)@@[[@@@@DJI
)@@G@@G@@@@DC/@@@]@[U@[XAN@@@A)[=[F#[#@^G^G@Y0@@@@@@@@C@A\_7N.@@@AQ[)@@GR[)@[QJJ
)@@G@@R[K@[PG/@@@[T/@@@BC@@@@Z[@@@@ZAO@@@A)[![F#H@K3K3K[#[#H@@@@@@/K@@[8(@@@@#JK
)@@G@@[@)@@ZC/)@@#/K@@]](@@@@] @@@@L8L@@[?[@ )@DAP@@@A)[6[MK0K0[#[#@B?@@C@A\_7JL
)@@G@@N.@@@AQ[)@@GR[)@[QR[K@[PG/@@@[T/@@@BC@@@@Z[@@@@ZC/@@@^AQ@@@A)]@[F#H@K0K3JM
)@@G@@K[#GK3@@@@@@G@)@@@C/)__"[@@@@BC/@@@[/K@@])*@@@@B @@@@-8L@@[_[@ )@KAR@@@AJN
)@@G@@)]D[N#[#@K0^@^G^G@Q[)@[(R[)@[QC_)@@[ @[@@@8L@@]H @ )@N[@)@[6N.@@@NQ[K@[,JO
)@@G@@R[K@[QAS@@@A)]N[N#[#[#@^[#G@@@ @#@@@ @^@@@[@+@@@C@)@@@8L@@]OG_)@@[[@A)@NJP
)@@G@@C@@@@<[#)@@<N[@@[6AT@@@A)]X@V@K^G@@@)@'@K@)])@V] #[#@@@@@@@'@@@@[R/,0@@@JQ
)@@G@@______REWIND@][@[X/K@@B_N@0@]ZAU@@@A)]<[F#[#[#[#@K0K0K0K0@@@[@@@@*[@@@@$JR
)@@G@@ @@@@&[@@@@>C/@@@[@]]@[X@@@@@=@@@@[S@@@@[SAV@@@A)]?[EK0K0K3K[@K^G@@@@@@@JS
)@@G@@@@@@[R/,0@C9/K@@AD*@@@@G/G@@]3H@@@@B[@@@@&G@@@@&C/@@@[AW@@@A)]5[F#[@K0K0JT
)@@G@@K[@^G@@@@@@@[@@@@-C/@@@[/K@@#>*@@@@G/G@@]/D@@@@(@]E@[X/K@@B,@@@@@(AX@@@AJU
)@@G@@)]"@:]D#[#[#[#@@@@)@/@C@)##@F]O@@@@@'^@@@@(I6)  @@K@@(@]I@[X@@@@@/@@[@@%JV
)@@G@@/,0@@@AY@@@A)#^[F#[#[#@^G@K0@@@@@@@@[#)@@+N.@@@ C_)@@[[@)@@:C/)@@][@ @@NJW
)@@G@@C@@@[TO[K@[\R[K@@&AZ@@@A)#H[F]H#[#[#[#[#[#[#[#@@H@@@[TC@@@@?O[)@[\R[)@@&JX
)@@G@@@]R@[X@@@@@?@@@@@+@@@@@%/,0@@@BA@@@A)#Q[MK[@K=K^G^G^G@C/@@@[@]U@[X@@@@@?JY
)@@G@@@@@@@:@@@@#V/,0@@@^^K@#VN8Q@@N/K@@#+(@@@@GBB@@@A)#)[F#[#@K^[#[#@K0@@@@@@JZ
)@@G@@C@@@@& @ @@NO[K@[\R[K@@&/K@@#*8L@@#GG_)@@[[@@@@:G@@@@:BC@@@A)#([EK0^[@K0KA
)@@G@@K^[#@@@@@@@@@])@[X/K@@B,@@@@#\@@@@[U/,0@C9^^K@#\N8W@@@G@@@[2T/@@@OBD@@@AKB
)@@G@@)#2[F@K0K0K^G^G^[#[#@@@@O[)@[\R[)@@&/K@@^[(@@@@!@]-@[X/K@@B,@@@@@!@@@@[RKC
)@@G@@/,0@C9BE@@@A)#;[MK[#[#@K0K[#G@G@@@@@C/@__"/K@@^(*@@@@![@&@@NC@)@[T[@@@@-KD
)@@G@@C/@@@[/K@@^[*@A@@NBF@@@A)^ [F#[#[#[#[#[#@K3@@@@@*@@@@IH@)@@CC/)@@]O[0@[0KE
)@@G@@R[0@@&O[)@[3R[)@@&O[K@[1R[K@@&BG@@@A)^I[N@K3^G@^G^G^G@O[0@[?R[0@@>[#)@@+KF
)@@G@@[@@@[^C_)@@[[[ @@NC[@@@>[@$@@NC@)@@@/K@@]?BH@@@A)^S[N#@^G^G[@[#G@@G[@@@@KG
)@@G@@C.@@@[ @A@@N8L@@^PG_)@@[[@)@@>G@)@@>C/)@@[[@B@@NC@@@@+BI@@@A)^+[F#GK0K3KKH
)@@G@@3K0K^[#@@@@@@@@@[R/,0@C9/K@@ 0[[)@@\T[)@@@C[)@@@[[@@@,;L@@@[T[@@@@BJ@@@AKI
)@@G@@)^:[F#[@K0K0K0K0^G^G@@@@O[0@[1R[0@@&[@ @@NC@@@@0O[K@[0R[K@@&@]9@[X/K@@B,KJ
)@@G@@@@@@@0BK@@@A)^4[F#@K0K0^[@K0K@@@@@@@@@@@^/@@@@@0/,0@C9^^K@^/N8Q@@NO[)@[?KK
)@@G@@R[)@@>[@$@@NC@)@@>BL@@@A)^.[F@K0K0K0K0^G[@@@@@@@/K@@ M(@@@@IH@)@@!C/)@@]KL
)@@G@@[@@@@>G@@@@>C@@@@0@]/@[X/K@@B,BM@@@A) A[F#[#@^G^G[#[#@@@@@@@C[@@@0[@)@@,KM
)@@G@@;K)@@[T@)@@0G@)@@0C/)@@[ @ @@NO[K@[3R[K@@&BN@@@A) J[F#[#[@K^G^G^[#[#@@@@KN
)@@G@@R[0@@&@#^@[X/K@@B,@@@@@1@@@@[R/,0@C9/K@@ 0[[@@@\T[@@@0BO@@@A) S[F#[#@K0KKO
)@@G@@0K0^G^G@@@@@O[K@[?R[K@@>[@&@@NC@)@@>O[)@[4R[)@@&[@B@@NC@@@@1O[0@[3BP@@@AKP
)@@G@@) -[EK^[#[@K^G^G^G@@@@@@G@@@@>C@@@@1@#B@[X/K@@B,@@@@ >@@@@@1/,0@C9^^K@ >KQ
)@@G@@N8P@@NBQ@@@A) %[F#[#[#[#@K0K0K0@@@@@ @B@@NO[0@[*R[0@@&[@)@@\;@)@@<[@)@@,KR
)@@G@@T@)@@0C@)@@1[@@@@>BR@@@A) 3[F#@K0^[#@K0K3@@@@@@@(@@@@]A[0@[6[@B@@NC@@@@$KS
)@@G@@/K@@]?*@G@@NG@@@[2T/@@@OC@@@@&BS@@@A) /[F@K0^G@K0K0K0@@@@@@@[@@@@$G@@@@$KT
)@@G@@C@@@@,[@A@@NG@A@@NR[)@[6;@@@@MC@@@@*/K@@A]BT@@@A)A [F#[#[#[@K3K3^@@@@@@@KU
)@@G@@C/@__"/K@@A>*@@@@GH@@@@@C@@@@[/K@@]?[@)@@*G@)@@*C@)@@\BU@@@A)AI[F#GK0[#[KV
)@@G@@#@K0@@@@@@@@[@)@[6[@@@[^R[0@[(R[K@[:C_)@@[ @@@@I(@@@@-C/)@@[G@@@@@BV@@@AKW
)@@G@@)AR[N#[#@K0K^G@@@@G_)@@[O.0@@[O.K@@[[@ @@NC@@@@</)@@AYC@@@[6[@B@@NC@@@@<KX
)@@G@@[#)@@<BW@@@A)A-[F@K^[#@K0K0^G0@@@@@@G@)@@@C/)__"]@@@@2H@@@@>C/@@@[@#Y@[XKY
)@@G@@/K@@B_N@0@A=8L@@ARBX@@@A)A%[N#[@^G^G[#@K@@C_)@@[8L@@A1 @A)@N]@@@[6[@)@[^KZ
)@@G@@Q[)@[:R[)@[QH/@__"/K@@B5(@@@@2BY@@@A)A4[N#[#[#@K0^@@@@C/@@@[ @@@@I*@@@@GLA
)@@G@@/G@@A.C/)@@[[@@@@3C@ @@N[#)@@+N[@@[6R[K@[%BZ@@@A)A"[N#H#@@K^G^G@@@C/@@@[LB
)@@G@@O[0@[!R[0@@3/=0@B5)@)@@G @@@@G1@@@@K*@@@@KH[@@@3C[@@@@CA@@@A)BC[M[@K0^G1LC
)@@G@@#@@@@@[@)@[^R[)@[:C_)@@[G@)@@@C/)__" @@@@48L@@A6G_)@@[O.K@@[[@B@@NCB@@@ALD
)@@G@@)BM[F#@K[#[#[#[#[#@@@@@@C@)@@<O[0@[5R[0@@4[@@@@4G@@@@4C/@@@[/K@@BX(@A@@NLE
)@@G@@[#)@@<CC@@@A)BV[M@K^G^G1@K@@@@N@0@B&/K@@B5*@@@@GH@@@@[C@@@@48L@@BMG_)@@[LF
)@@G@@O.)@@[[@A@@N[@$@@NCD@@@A)B>@:@K0K&K0K0@@@@)@.@S@@@@@@@TAGGED***** (037H0LG
)@@G@@@#.@[X@@[@@./,0@@@@#/@[X/K@@B_CE@@@A)[@@*@@@@@@@)B%@V]P]X#@@@@@@@@@@@@[TLH
)@@G@@/,0@@@'^@@@@)     S2LOADOR IN GE ERR STORACF@@@A)B!@<#[]T#[#@@@@@@)[ @)@LI
)@@G@@@@@@@@LOADIN DRUM ***** (036H0@^[@[X@@[@[ /,0@@@@^@@[XCG@@@A)[D@S@)B1@3]LJ
)@@G@@P]X#[#[]T#@@@@[@[G/,0@@@@^^@[X@@@@[T/,0@@@'^@@@@2LOAD)R IN SG ERROCH@@@ALK
)@@G@@)B7@F#@@@@@@)[G@8@@@@@@@@@@@@@AD)   N S2LOUBLE ING TRO LOADI***** (033H0LL
)@@G@@@^ @[XCI@@@A)B8[F]P]X#[#[@K^G^G^G@@@9!)@[7R]0@[Y@^C@[X/K@@B_N@0@B"@^C@[XLM
)@@G@@@@@@[T/,0@@@'^@@@@CJ@@@A)C[[F#[#[#[#[#[#[#[#[#@@R[K@] R[@@]^R@0@]#R@)@]]LN
)@@G@@R@K@][9\)@[_9\@@[.9,)@[;9,@@[9CK@@@A)CE@<#[#[#[#@@@@@@)[V@C@)CI@N#[])@@@LO
)@@G@@/K@@@@/K@K[V@@F@@J*4@K[VN[@@]CR[0@]BR[)@]ACL@@@A)[X@K@)CK@3#[#[#[#[#[#@@LP
)@@G@@@@@@@@9:)@[_9:@@[.9%)@[;9%@@[99()@[7AA0@[Y@^C@@]S2LOADCM@@@A)CQ[##[#[#[#LQ
)@@G@@[#[#[#[#@@@@@@@@@@^[@@]CA[0@]BA[)@]AA[K@] A[@@]^A@0@]#A@)@]]A@K@][CN@@@ALR
)@@G@@)[N@K@)CY@;@K-K0K0[#@@@@@@@@@5@@@@@@@@@@@@@@@@[N@@@@[R/,0@@@/K@@D[______LS
)@@G@@READ  CO@@@A)C>[F#[#[@^[@K^G@@@@@@@@C8)@@#@^K@[-/K@@C5N@0@C?/K@@C!*@@@@GLT
)@@G@@/G@@C%D@@@@5@^I@[-CP@@@A)C,[F@K^G^G^EL#[#[#@@@@@*4@K[ZR]0@[+[^)@[ZH8)@@[LU
)@@G@@/K@@@@!^)@[Z@^L@[-/K@@C1N@0@C0CQ@@@A)[Z@C@)C7@N#[])@@@)[-@K@)C9@MK0@@@@@LV
)@@G@@AA0@[+C8@@@^@^L@@]VREAD /K@@@@/K@K[Z@@F@@@CR@@@A)C;[N#@K[@K[#@K0@@[@@@[>LW
)@@G@@C8FK@][@@@[=C8FK@@/K@@CZ[^@@C<C8FK@[[^@@C+C8FK@@[^@@[ZCS@@@A)D [MK0^G[@^LX
)@@G@@@K@@@@[^@@[MC8FK@G[^@@[KC8FK@F[^@@[IC8FK@E[@@@[$C8FK@^[@@@[&C8FK@#CT@@@ALY
)@@G@@)DJ@UK^@@@@@)[P@0@@@@@@@@@@@@O      @@@@@@@@@@@[@@[@@@@@[@@[/K@@@@[^@@[OLZ
)@@G@@C8FK@HCU@@@A@@@@@@[#@K0K0K0^G^G@@@@@O[K@[?R[K@@>[@&@@NC@)@@>O[)@[4R[)@@&MA
)@@G@@[@B@@NC@@@@1O[0@[3BP@@@A@@^@@^@@C@@E@@W@@[@@)@@]@@^@]E@C@@DM@@@@@]@@@@@SMB
)@@G@@S1GTAG      S1IODR      NCOD$       S1PRFT      S1PRST      NIO2$       MC
)@@G@@NPRT$       NSTOP$      NERR3$      NERR4$      S2LOAD      @@[@@@@@@@CKMD
)@@G@@BLANK$      ^@@@C@@]@@@@S2ABLK      ]@@@C@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@ME
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MF
)@@G@@*[S@@@*SDFF*@D@@@@      SUBROUTINE S6COEF (A,Q,B,P,X,Z,SD,NMS,MV,MVV,XM)MG
)@@G@@@[@@@@C     @D@@@@C  COMPUTE AND OUTPUT COEFFICIENTS FOR FACTOR SCORES  MH
)@@G@@@[@@@@C     @D@@@@C              REVISED FEBRUARY, 1969  (FOR 1108)     MI
)@@G@@@[@@@@C     @G@@@@      COMMON/ S6BLK  /INP,NX ,NC,VECT, RAW, RES,TCOP,TMJ
)@@G@@PAK,TRAW,TROT,    @G@@@@     1PCOP,PPAK,PRAW,PROT,    MAX,QMAX,MLE,FPCA,MK
)@@G@@NF,DET  ,NRF,ITER,EPS,  @G@@@@     2DELTA,CRIT,PROC,IO(4),ITERS   ,IORTHML
)@@G@@,SCORES,DF,NOBS,INCOM,H(200), @^@@@@     3ICALC,E(4),F(4)   @E@@@@      MM
)@@G@@COMMON/S6FMTS/NAMPRO(7),SUBNAM(7),DATFMT(5),VECFMT(2),@F@@@@     *NAMCOVMN
)@@G@@(7),GATFMT(6),GECFMT(3),FUMFMT(6),GUMFMT(3),LUMFMT(6),@E@@@@     *MUMFMTMO
)@@G@@(6),NUMFMT(4),NAMFMT(6),OFORM(5),QFORM(5),IBLANK@ @@@@      COMMON /S63BMP
)@@G@@LC/ C(200)  @D@@@@      DIMENSION A(MV,2),Q(MVV,2),B(2),P(2),X(2),Z(2)  MQ
)@@G@@@^@@@@      DIMENSION SD(2)   @^@@@@      DIMENSION XM(2)   @ @@@@      MR
)@@G@@EQUIVALENCE (KEMP,TEMP) @B@@@@      INTEGER Z,QMAX,PROC,SUBNAM,SCORES   MS
)@@G@@@^@@@@      INTEGER EPS,DELTA @]@@@@      NV=MV @^@@@@      SUBNAM(1)=6HMT
)@@G@@F A C @^@@@@      SUBNAM(2)=6HT O R @^@@@@      SUBNAM(3)=6H  S C @^@@@@MU
)@@G@@      SUBNAM(4)=6HO R E @^@@@@      SUBNAM(5)=6HS   (R@^@@@@      SUBNAMMV
)@@G@@(6)=6HAW)   @^@@@@      SUBNAM(7)=IBLANK  @G@@@@C  RESET OVERFLOW INDICAMW
)@@G@@TOR---------------------------------------------@#@@@@      CALL S1VFWC MX
)@@G@@@B@@@@C         BRANCH ON RAW OR ROTATED FACTORS@ @@@@      IF (MAX.NE.0MY
)@@G@@) GO TO 6830@A@@@@      IF (QMAX.NE.0) GO TO 6830     @A[@@@      IF (PRMZ
)@@G@@OC .EQ. 1) GO TO 6820   @C@@[@C        RESCALE OR IMAGE - RESCALE EIGENVNA
)@@G@@ECTORS@^[@@@      DO 6815 J=1,NV    @^@@@@      TEMP=1.0/P(J)     @^@@@@NB
)@@G@@      DO 6815 K=1,NRF   @^@@@@6815  Q(J,K)=Q(J,K)*TEMP@A@@[@      IF (PRNC
)@@G@@OC .NE. 3) GO TO 6820   @^@@[@      DO 6817 K=1,NRF   @ @@[@ 6817 B(K)=BND
)@@G@@(K)*B(K)/(B(K)-1) @C@@@@C         RAW FACTORS - COMPUTE COEFFICIENTS    NE
)@@G@@@^@@@@6820  DO 6825 K=1,NRF   @ @@@@      TEMP=1.0/SQRT (B(K))    @^@@@@NF
)@@G@@      DO 6825 J=1,NV    @^@@@@6825  A(J,K)=Q(J,K)*TEMP@G@@@@C  TEST OVERNG
)@@G@@FLOW INDICATOR++++++++++++++++++++++++++++++++++++++++++++++@A@@@@      NH
)@@G@@CALL S1VFWT(6HCOEF 1,$6900)   @#@@@@      GO TO 6850  @D@@@@C         SENI
)@@G@@T OUTPUT LABEL FOR ROTATED FACTOR SCORES  @^@@@@6830  SUBNAM(6)=6HOTATEDNJ
)@@G@@@^@@@@      SUBNAM(7)=6H)     @C@@@@C         ROTATED FACTORS - COMPUTE NK
)@@G@@COEFFICIENTS@ @@@@      IF (PROC.EQ.1)GO TO 6835@D@@@@C         RESCALE NL
)@@G@@Q AND SUBTRACT ONE FROM B FOR IMAGE @^@@@@      DO 6832 J=1,NV    @^@@@@NM
)@@G@@      TEMP=1.0/P(J)     @A@@[@      IF (PROC .EQ. 3) GO TO 6831   @^@@@@NN
)@@G@@      B(J)=B(J)-1.0     @#@@[@ 6831 CONTINUE    @^@@@@      DO 6832 K=1,NO
)@@G@@NRF   @^@@@@6832  Q(J,K)=Q(J,K)*TEMP@B@@@@C         FORM F PRIME Q ON TONP
)@@G@@P OF A=F    @^@@@@6835  DO 6840 I=1,NRF   @^@@@@      DO 6838 K=1,NRF   NQ
)@@G@@@#@@@@      TEMP=0.0    @^@@@@      DO 6836 J=1,NV    @ @@@@      TEMP=TNR
)@@G@@EMP+ A(J,I)*Q(J,K)@#@@@@6836  CONTINUE    @#@@@@6838  X(K)=TEMP   @^@@@@NS
)@@G@@      DO 6840 K=1,NRF   @#@@@@6840  A(K,I)=X(K) @E@@@@C         FORM TRANT
)@@G@@NSFORMATION MATRIX ON TOP OF ITSELF IN A  @^@@@@      DO 6846 I=1,NRF   NU
)@@G@@@^@@@@      DO 6844 J=1,NV    @#@@@@      TEMP=0.0    @^@@@@      DO 684NV
)@@G@@2 K=1,NRF   @A@@@@      TEMP=TEMP+Q(J,K)*A(K,I)/B(K)  @#@@@@6842  CONTINNW
)@@G@@UE    @#@@@@6844  X(J)=TEMP   @^@@@@      DO 6846 J=1,NV    @#@@@@6846  NX
)@@G@@A(J,I)=X(J) @G@@@@C  TEST OVERFLOW INDICATOR++++++++++++++++++++++++++++NY
)@@G@@++++++++++++++++++@A@@@@      CALL S1VFWT(6HCOEF 2,$6900)   @C@@@@C     NZ
)@@G@@    OUTPUT COEFFICIENTS FOR FACTOR SCORES @A@@@@6850  IF (ICALC .EQ. 2) OA
)@@G@@GO TO 6855  @^@@@@      DO 6853 J=1,NV    @#@@@@      JJ=Z(J)     @#@@@@OB
)@@G@@      DIV=SD(JJ)  @^@@@@      DO 6853 K=1,NRF   @^@@@@ 6853 A(J,K)=A(J,KOC
)@@G@@)*DIV @#@@@@6855  CONTINUE    @ @@@@      CALL S1HED3(NV,NRF,10,0)@G@@@@OD
)@@G@@      CALL   S1PRCM (A,NMS,0,Z,C,40HC O E F F I C I E N T S  - FACTOR SCOE
)@@G@@@D@@@@     *ORES,NAMPRO,NAMCOV,GATFMT,0,FUMFMT,10,NV,NRF,NV)@D@@@@      OF
)@@G@@IF(EPS .EQ. 0  .AND.  DELTA .EQ. 0) GO TO 6900  @#@@@@      NR2=NRF     OG
)@@G@@@A@@@@      IF(INP .GT. 2) GO TO 68575    @^@@@@      DO 6857 J=1,NV    OH
)@@G@@@#@@@@      JJ=Z(J)     @^@@@@      A(J,NRF+1)=XM(JJ) @^@@@@      A(J,NROI
)@@G@@F+2)=SD(JJ) @#@@@@ 6857 CONTINUE    @#@@@@      NR2=NRF+2   @#@@@@68575 OJ
)@@G@@CONTINUE    @ @@@@      IF (EPS.EQ.0) GO TO 6860@^@@@@      CALL S1HEDC(OK
)@@G@@20)   @G@@@@      CALL S1TRCM(A,NV,NR2,QFORM,6,13HSCORE COEFFS ,2HSC,7HSOL
)@@G@@COEFFS,1)   @A@@@@      IF(INP .LE. 2) PRINT 6858,NRF @G@@@@ 6858 FORMATOM
)@@G@@(  /10X,'THE MEAN AND STANDARD DEVIATION OF THE JTH VARIABLE@G@@@@     -ON
)@@G@@ ARE OUTPUT AFTER THE',I3,' COEFFICIENT VALUES'/12X,'IN RECORD J. @G@@@@OO
)@@G@@     - USE THE MEANS AND STANDARD DEVIATIONS TO STANDARDIZE DATA BEFORE OP
)@@G@@@B@@@@     -APPLYING THE'/12X,'COEFFICIENTS.')  @A@@@@ 6860 IF(DELTA .EQOQ
)@@G@@. 0) GO TO 6900   @#@@@@      NT=DELTA    @^@@@@      CALL S1HEDC(20)   OR
)@@G@@@G@@@@6870  CALL S1TRCM(A,NV,NR2,QFORM,6,13HSCORE COEFFS ,2HSC,7HSCOEFFSOS
)@@G@@,NT)  @A@@@@      IF(INP .LE. 2) PRINT 6858,NRF @]@@@@ 6900 RETURN@]@@@@OT
)@@G@@      END   ___       SET OUTPUT LABEL FOR ROTATED FACTOR SCORES  @^@@@@OU
)@@G@@6830  SUBNAM(6)=6HOTATED@^@@@@      SUBNAM(7)=6H)@@[U@@@@@@@H]FK@DG]FK@DOV
)@@G@@C"@@@[G.)__"C9:K@AG.@__"C9FK@@G/)__"C8:K@EG/@__"C8FK@[AA@@@A)@F[M@K0^G^GOW
)@@G@@^G^G@@[]@@[%[[)@[([[@@[*[@)@[$G[@@@G[[@@[&H@FK@CG@FK@CC/@@@[G]@@@GAB@@@AOX
)@@G@@)@P[EK0K0K3K0K3K0K3K0@@@C]@@[L[[)@@DC[)@[K[[@@@CC[@@[J[@)@@BC@)@[I[@@@@@OY
)@@G@@C@FK@CAC@@@A)@Y[F#H#[#H#[#H#H#H][#@@@[N@[Z/,0@@@[#)@@HC#)@[I[#@@@GC#@@[NOZ
)@@G@@[])@@FC])@[M[]@@@EAD@@@A)@$[N[K[#@KO #@KK@*@@@@JH.@@@[T[@@[:C[@@@OG@)@@OPA
)@@G@@C/)__"G@@@@@C/@__"/K@@]^*@@@@IAE@@@A)@1[N@^^K^G^G[#@@@[[)@@]'L)@[%;[)@@MPB
)@@G@@C[)@[:R@K@[+/K@@[T(@@@@MH[)@@TC.)@@[/K@@]^AF@@@A)@;[EK0K0K0^G^G[#@@@@@@@PC
)@@G@@"C@@[HC@]@@@N[K@[?[@@@[H"G[@@@C@@@[O][@@[![@)@[?[@@@[^AG@@@A)[^[MK^G@^@KPD
)@@G@@K@@@@@*@@@@IH@)@@TC/)@@#8L@@@"O/K@@[[@)@@]'K)@@]C^)@[!8LK@[][@])@@AH@@@APE
)@@G@@)[I[N@K0K0K0@K0@@@[@[)@@"G@@@I"^)@[OC@-@@@"C[@@@C@[@@@N[@@[?Q@K@[<R@K@[PPF
)@@G@@/K@@[TAI@@@A)[S[F@^ #[#[#[#@K0@@@@@@G[)@@@C.)__"G[@@[,D[@@@@G@)@[:D@)@@@PG
)@@G@@G@@@@OC/@__"8L@@[MAJ@@@A)[-[F#[#[#[#[#@K0K0K0@@@[[)@[\[[@@[![@)@[?[@@@[^PH
)@@G@@Q@0@[*R@0@[PQ@K@[%R@K@[PR@)@[<AK@@@A)[%[EK^D=[#[#@K0K0@@@@@@N[K@[\[@)@[HPI
)@@G@@"G)@@GC@)@[O@[,@[Z@@@@[!/,0@@@^^K@[!N8M@@@AL@@@A)[3[MK0^[#@^G@@@@@[@)@@#PJ
)@@G@@'K)@@#C^)@[![@)@@['K)@@[C^)@[?8LK@[3[@#)@@"C@@[HC@[)@@AM@@@A)[.@E@)@C@K@PK
)@@G@@)["@:@K-K0K^G@@@@@@[5@[Z/K@@A7@@@@@C/,0@@@8L@@[%______COEF 1O/)@@[AN@@@APL
)@@G@@)]#[F@K0K3K0K3^G[[@@@@@@G[)@@OC.)__"G[@@@@C.@__"[@)@@HC@)@[R[@@@@GC@@@[QPM
)@@G@@/K@@^TAO@@@A)]G[N[K0[[^[#[#[#@C])@[:R@)@[<R@K@[+/K@@]1(@@@@QH])@@TC")@@[PN
)@@G@@H"@@@[T]@@[:C]@@@OAP@@@A)]Q[MK0[#[#[#@K0@@C/)@@#[@@@[H"G[@@@C@@@[O]]@@[!PO
)@@G@@[[)@[\[[@@[^[])@@#'M)@[%;])@@MAQ@@@A)])[N[^@K0^G[#@@@@[@#)@@"C@@[HC@#@@@PP
)@@G@@N[K@[\[@+@@@"^)@[OC@+@@@/K@@]&(@@@@IH@)@@TAR@@@A)]%[N@K0@^@KO^@@@@D@)@@OPQ
)@@G@@G@@@@OC/@__"8L@@]WO/)@@[O/K@@[[@)@@#'K)@@#C^)@[!8LK@]$AS@@@A)]4[F#[#[#[#PR
)@@G@@[#@K0KOG@@@@T])@[:C])@@OG]@@@@C"@__"G[)@[,D[)@@@G[@@[:D[@@@@G@)@[,AT@@@APS
)@@G@@)].[EK0K0K0K0^G^G^G@@@@@[[@@[?[@)@[![@@@[\[@@@[^Q@)@[*R@)@[PQ@K@[*R@K@[PPT
)@@G@@H")@@[AU@@@A)#A[F#[#[#[#[#[#[#[#[#@@ @@@[HN[K@[\Q[@@[%R[@@[PQ@0@[=R@0@[PPU
)@@G@@]])@[2[]@@[1[[)@[0AV@@@A)#J[N#@^G^G^@K0@@@[@)@@^'K)@@^C^)@[?[@#)@@8L)@#KPV
)@@G@@[@@@[H"@@@[H"C^)@@C@])@@N[)@[1AW@@@A)#T[N#@^[#[#[#@^@@8LK@#)[@[)@@C@#)@@PW
)@@G@@N[K@[\Q@0@[=R@0@[P8LK@#I]@)@@]'O)@@]C^)@@@AX@@@A)#<[N#@^G@K^G^G^G@R@0@[PPX
)@@G@@Q[@@[*R[@@[P8L@@#D[@)@@]'K)@@]C^)@[,[@)@@['K)@@[C^)@[!AY@@@A)#![F#[#[#[#PY
)@@G@@[#@K0^G@@@@@N[K@[1[@@@@]'K@@[%;@@@@MC@@@[:Q@K@[=R@K@[PN[@@[\Q@0@[*AZ@@@APZ
)@@G@@)#6[F#[#[#[#@[#[#@@@@@@@[@@@[H"@@@[H"G )@@"C#)@@C@])@@N[)@[\Q[K@[<R[K@[PQA
)@@G@@ @@@[HBA@@@A)#_[N@^^^G@K^G@@@@R[K@[P8LK@#6[@)@@]'K)@@]C^)@[2]@)@@#'O)@@#QB
)@@G@@C^)@@O[@[)@@8L)@#'BB@@@A)^D[N#[#@^[#@^G@@@'K)@@#C^)@[,[@)@@^'K)@@^C^)@[0QC
)@@G@@8LK@^F[@^)@@C@ )@@N[K@[1Q[K@[=BC@@@A)^N@E@)@E@K@)^O@:@K-K0K^G@@@@@@]3@[ZQD
)@@G@@/K@@A7@@@@@E/,0@@@8L@@#\______COEF 2[@)@@#BD@@@A)^T[MKL@^G[[KOG@@@T[@@[,QE
)@@G@@C[@@@OG@)@@OC/)__"G@@@@@C/@__"/K@@^/(@@@@GH@@@#?C/@@@]BE@@@A)^<[MK0K0^G@QF
)@@G@@K0K0@@C@[@@@][@@[1[@)@[\[@@@[^[[)@@]'L)@[*;[)@@MC[)@[,R@K@[>H.@@@[BF@@@AQG
)@@G@@)^![F#[#[#@K0K0^G@@@@@@@[@])@@"C@@@ C@]@@@N[K@[\[@)@@ C@>@@@O[K@[(R[K@@^QH
)@@G@@[@@@@^BG@@@A)^6[N@K0@K^C=G^ #@@@@@[S@@@@@O@@@@@@/,0@@@8L@@^?O/K@@[[@)@@]QI
)@@G@@'K)@@]C^)@[18LK@^3BH@@@A) @@F#@@@@@@)@G[@@@@@@@@______ORES  TOR SC - FACQJ
)@@G@@N T S C I E F F I C O E @@@@[TBI@@@A) [[F#[]G^G[#L#[#G@@@@@@@@@@@@@@@@@GQK
)@@G@@@@@@@@@@@@@@@@@@[T@@@@@@@@@@@@/,0@@@@#]@[ZBJ@@@A) E[F#H#H#[#H#[#[[K0K0@@QL
)@@G@@@##@[Z@@@@@@@@@@@O@@@@@@@@@@[S@@@@@>@@@@[T@@@@@W@@@@@PBK@@@A) N[MKKKKK^ QM
)@@G@@#@@@@@[@@@@AC@@@@O/=K@A7+@@@@I @@@@I*@@@@RC/)@@[ @@@@G*@@@@QC/@@@[BL@@@AQN
)@@G@@) X[N#@K0^ #@K0^G@G[@@[&G.@@@[G@@@[&G/@@@[T[@@[,G[@@@OC.@@@[G@)@@@C/)__"QO
)@@G@@T@@@[,BM@@@A) $[MKO@K^G[#@K0@@R[K@[PQ[@@@GR[@@[PQ@0@@KR@0@[P/K@@A[*@@@@MQP
)@@G@@/D)@ ?H[)@@@C.)@@]BN@@@A) 1[F#@^G^G^G@K0@@@@@@@@R@)@@^[@=)@@C@-@@@O@K@[$QQ
)@@G@@R@K@@^[@@@@^C@ )@@[@)@[^Q[K@[>BO@@@A) '[N#@^@KOG^ @K=@/,0@@@/K@@AV(@@@@QQR
)@@G@@[@)@@AG@)@@OC/)@@]8L@@ 3[[#)@@C[]@@@O@)@[(BP@@@A)A^@F#@@@@@@)@O[@@@@@@@@QS
)@@G@@S     SCOEFF______SC    ______      COEFFSSCORE @@@@[UBQ@@@A)@W@C@)A @;#QT
)@@G@@[]OK0K0K3K0@@@@@@@@@@@[V@@@@[D@@@@@A@@@@@@@@@@@@/,0@@@@#P@[Z______BR@@@AQU
)@@G@@)AG[F#[#[#[#[#@KO@@@@@@@*@@@@G/C@@AQH@@@@@C/@@@]@#Q@[Z@@@@[W@@@@@U@@@@@SQV
)@@G@@@@@@@OBS@@@A)AP@3@K$K0K0KOE@@@)@X@S@E MEAN072HTH(/10X,'^@@@@@@K@@O@#S@[ZQW
)@@G@@@@[@@X/,0@@@/K@@AVBT@@@A)@)[S@@@@@@@ THE,I AFTEROUTPUTE ARE ARIABL JTH VQX
)@@G@@OF THEATION D DEVITANDAR AND SBU@@@A)@:[S@@@@@@@S AND E MEANUSE THD J.  QY
)@@G@@ RECOR091HINS/12X, VALUEICIENT COEFF3,019HBV@@@A)@6[S@@@@@@@12X,01G THE/QZ
)@@G@@PPLYINFORE AATA BEDIZE DTANDARS TO SIATIONRD DEVSTANDABW@@@A)[[@S@)AV@3[RA
)@@G@@K^ #[]L#@@@@@@@@[U/,0@@@[@@@@BC@@@@R/K@@A7(@@@@RTS.)  FICIEN3HCOEFBX@@@ARB
)@@G@@)[^[C@@@@@@@@@@[C@@@@@@@______S     SCOEFF______SC    ______      COEFFSRC
)@@G@@SCORE BY@@@A)A-[F#[]OK0K0K3K0K0K0@@@@@@@[C@@@@[^@@@@[V@@@@[D@@@@@A@@@@@@RD
)@@G@@@@@@@@/,0@@@@#Z@[ZBZ@@@A)A%[F#[#[#@KO@K^D0@@@@@@/,0@@@/K@@A7*@@@@G/C@@A2RE
)@@G@@H@@@@@C/@@@]@#)@[Z@@@@@B@@@@[ECA@@@A)A3[F#[#[[K*K^[#[#[#@@@@9!)@[3R]0@[)RF
)@@G@@@#>@[Z/K@@A'N@0@A9'^@@@@@@K@@O@#+@[Z@@[@@XCB@@@A)A/[F#[#[#[#[#[#[#[#[#@@RG
)@@G@@R[K@][R[@@]@R@0@[_R@)@["R@K@[.9\)@[;9\@@[99,)@[79,@@[5CC@@@A)B @<#[#[#[#RH
)@@G@@@@@@@@)[X@C@)BD@N#[]=@@@/K@@@@/K@K[X@@F@@G*4@K[XN[)@]^N[K@]#N[@@]]CD@@@ARI
)@@G@@)[Z@K@)BF@3#[#[#[#[#[#@@@@@@@@9:)@[;9:@@[99%)@[79%@@[59()@[3AA0@[)@#>@@]RJ
)@@G@@S6COEFCE@@@A)BL[F#[#[#[#[#[#[#[#@@@@C8FK@@^[)@]^^[K@]#^[@@]]A[K@][A[@@]@RK
)@@G@@A@0@[_A@)@["A@K@[.CF@@@A)BU[N@K^@K0^G[#@@@C8FK@ [@@@[=C8FK@^[@@@[+C8FK@#RL
)@@G@@[@@@[<C8FK@][^@@ #[^@@AB[^@@A<CG@@@A)B=[F@K0^@K0^G^@@@@@@@@@/K@@@@[@K@[:RM
)@@G@@C@VK@D[@K@[,C@VK@C[^@@ ^C8FK@B[@@@[>[^@@ ACH@@@A)[I[S@@@@@@@@@@@@E)     RN
)@@G@@OTATED@@[@@@KG@@@@AW)   S   (RO R E   S C T O R F A C CI@@@A)[T@)@@@@@@@RO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@@@@A@@@@@O@@@@@@CJ@@@ARP
)@@G@@@@^@@ @@D@@E@@X@@[@@-@@#@@^@] @C@@B!@@@@#5@@@@[J@@@@#CS1VFWC      S1VFWTRQ
)@@G@@      S1HED3      S1PRCM      S1HEDC      S1TRCM      SQRT        NPRT$ RR
)@@G@@      NIO2$       NERR3$      S6COEF      @@[@@@@@@@BFS6BLK       ]@@@C@RS
)@@G@@@]@@@@S6FMTS      ]@@@C@@#@@@@S63BLC      ]@@@C@@^@@@@^@1A)8AS7^@5A))^@3RT
)@@G@@^@1AS)^@1^@)^@,A@)^@)^@)^@)^@3AS)AC9^@)B@4^@)^@)*[S@@@*SDFF*@G@@@@      RU
)@@G@@SUBROUTINE S63AMD(MV,MVV,B,A,Q,P,R,S,T,U,V,W,X,Y,Z,XM,SD,NMS,     @B@@[@RV
)@@G@@     -   BABUF,BAVBUF,BAVAR,TEST,IPRNT,ZZ)@[[@@@C     @[@@@@C     @D@@@@RW
)@@G@@C        MAIN FACTOR ANALYSIS ROUTINE FOR FACTOR3.    @D@@@@C          PRX
)@@G@@ERFORMS COMPLETE ANALYSIS FOR 1 MODEL.    @[@@@@C     @#@@@@      COMMONRY
)@@G@@ IX(2)@G@@@@      COMMON/ S6BLK  /INP,NX ,NC,VECT, RAW, RES,TCOP,TPAK,TRRZ
)@@G@@AW,TROT,    @G@@@@     1PCOP,PPAK,PRAW,PROT,    MAX,QMAX,MLE,FPCA,NF,DETSA
)@@G@@  ,NRF,ITER,EPS,  @G@@@@     2DELTA,CRIT,PROC,IO(4),ITERS   ,IORTH,SCORESB
)@@G@@S,DF,NOBS,INCOM,H(200), @^@@@@     3ICALC,E(4),F(4)   @[@@@@C     @E@@@@SC
)@@G@@      COMMON/S6FMTS/NAMPRO(7),SUBNAM(7),DATFMT(5),VECFMT(2),@F@@@@     *SD
)@@G@@NAMCOV(7),GATFMT(6),GECFMT(3),FUMFMT(6),GUMFMT(3),LUMFMT(6),@E@@@@     *SE
)@@G@@MUMFMT(6),NUMFMT(4),NAMFMT(6),OFORM(5),QFORM(5),IBLANK@D@@@@      COMMONSF
)@@G@@ /S63FMT/EATFMT(5),MAMFMT(6),BUMFMT(6)    @[@@@@C     @E@@@@      COMMONSG
)@@G@@ /S63NBK/IPCOEF,IRPCOR,MAXCOR,NRMLZE,BWEPS,BWDEL@B@@@@      COMMON /S63SSH
)@@G@@BH/NEWHED(7),CUTOFF     @ @@@@      DIMENSION IBUFSV(7)     @[@@[@C     SI
)@@G@@@D@@[@      COMMON /S63BSV/ NADD,BANKSC(2),BANCHR,BANEXT    @[@@@@C     SJ
)@@G@@@G@@@@      DIMENSION R(2),A(MV,MV),Q(MVV,2),B(2),NMS(2),S(2),T(2),U(2),SK
)@@G@@V(2), @D@@@@     *W(2),X(2),Y(2),Z(2),P(2),       XM(2),SD(2)     @C@@[@SL
)@@G@@      DIMENSION BABUF(2),BAVBUF(2),BAVAR(2)     @^@@@@      DIMENSION ZZSM
)@@G@@(1)   @[@@@@C     @C@@@@      INTEGER PROC,QMAX,RAW,SUBNAM,Z,SCORES,FPCASN
)@@G@@@#@@@@      INTEGER RES @A@@@@      EQUIVALENCE (BLANK,IBLANK)    @[@@@@SO
)@@G@@C     @F@@@@C   R   LOWER TRIANGULAR ARRAY TO HOLD AND SAVE CORRELATION SP
)@@G@@MATRIX@G@@@@C   A   SQUARE ARRAY TO FUNCTION AS WORK SPACE FOR BUMP AND SQ
)@@G@@FACTOR1     @F@@@@C   Q   SQUARE ARRAY TO HOLD EIGENVECTORS AND RAW FACTSR
)@@G@@OR MATRIX   @ @@@@C   B   VECTOR OF EIGENVALUES @B@@@@C   H   VECTOR OF SS
)@@G@@CURRENT COMMUNALITIY    @A@@@@C   V   VECTOR OF CURRENT UNIQUENESS@E@@@@ST
)@@G@@C   S, T, V, W, X, Y, AND ZZ  ARE USED AS TEMPORARY ARRAYS  @F@@@@C   T SU
)@@G@@INITIALLY CONTAINS RATIOS FOR USE IN CHECKING INVERSION     @B@@@@C   Z SV
)@@G@@ IS THE VECTOR OF VARIABLE NUMBERS  @B@@@@C   NMS IS VECTOR OF NAMES OF SW
)@@G@@VARIABLES   @G@@@@C   P IS VECTOR OF SCALE FACTORS FOR RESCALING PROCEDUSX
)@@G@@RES - RESERVED    @E@@@@C         PROC  IS FLAG FOR TYPE OF FACTORING PRSY
)@@G@@OCEDURE     @C@@@@C                   1   PRINCIPAL COMPONENTS    @B@@@@SZ
)@@G@@C                   2   PRINCIPAL FACTOR  @C@@@@C                   3   TA
)@@G@@UNIQUENESS RESCALING    @ @@@@C                   4   ALPHA @ @@@@C     TB
)@@G@@              5   IMAGE @E@@@@C         INCOM IS FLAG FOR TYPE OF COMMUNTC
)@@G@@ALITY ESTIMATES   @C@@@@C                   1   ONE MINUS S SQUARED     TD
)@@G@@@ @@@@C                   2   INPUT @E@@@@C         ICALC IS FLAG FOR TYTE
)@@G@@PE OF PRINCIPAL COMPONENTS    @B@@@@C                   1   COVARIANCE MTF
)@@G@@ATRIX @B@@@@C                   2   CORRELATION MATRIX@C@@@@C         NFTG
)@@G@@ IS THE NUMBER OF FACTORS REQUESTED @C@@@@C         NX IS THE NUMBER OF TH
)@@G@@FACTORS EXTRACTED @[@@@@C     @ @@@@      EQUIVALENCE (BUF,SUBNAM)@D@@@@TI
)@@G@@        DIMENSION GAMFMT(3)/18H(16X,10(A6,A2,3X))/    @[@@@@C     @ @@@@TJ
)@@G@@      DIMENSION MLEMAT(7)     @E@@@@      DIMENSION NAMFM2(5)/'(10X,4HNATK
)@@G@@ME,3X,12(1X,A6,A2))'/   @G@@@@      DIMENSION COMEST(7)/'C O M M U N A LTL
)@@G@@ I T Y  E S T I M A T E S -'/ @[@@@@C     @B@@@@      DIMENSION FNAM2(2)TM
)@@G@@/'FT3$$2      '/  @[@@@@C     @[@@@@C     @C@@@@      CALL S1GTAG('OVERFTN
)@@G@@L',LVFW,DUM,DUM,$6999)  @]@@@@      NV=MV @^@@@@      ASSIGN 6006 TO ISWTO
)@@G@@@^@@@@      CALL S1HEDC(100)  @[@@@@C     @A@@@@C             SET PROCEDTP
)@@G@@URE NAME    @[@@@@C     @C@@@@      GO TO (6001,6002,6003,6004,6005),PROTQ
)@@G@@C     @^@@@@6001  NAMPRO(1)=6HPRINCI@^@@@@      NAMPRO(2)=6HPAL CO@^@@@@TR
)@@G@@      NAMPRO(3)=6HMPONEN@^@@@@      NAMPRO(4)=6HTS PRO@^@@@@      NAMPROTS
)@@G@@(5)=6HCEDURE@ @@@@      GO TO ISW,(6006,6100)   @^@@@@6002  NAMPRO(1)=6HTT
)@@G@@PRINCI@^@@@@      NAMPRO(2)=6HPAL FA@^@@@@      NAMPRO(3)=6HCTOR P@^@@@@TU
)@@G@@      NAMPRO(4)=6HROCEDU@^@@@@      NAMPRO(5)=6HRE    @#@@@@      GO TO TV
)@@G@@6006  @^@@@@6003  NAMPRO(1)=6HUNIQUE@^@@@@      NAMPRO(2)=6HNESS R@^@@@@TW
)@@G@@      NAMPRO(3)=6HESCALI@^@@@@      NAMPRO(4)=6HNG PRO@^@@@@      NAMPROTX
)@@G@@(5)=6HCEDURE@#@@@@      GO TO 6006  @^@@@@6004  NAMPRO(1)=6HALPHA @^@@@@TY
)@@G@@      NAMPRO(2)=6HFACTOR@^@@@@      NAMPRO(3)=6HING PR@^@@@@      NAMPROTZ
)@@G@@(4)=6HOCEDUR@^@@@@      NAMPRO(5)=6HE     @#@@@@      GO TO 6006  @^@@@@UA
)@@G@@6005  NAMPRO(1)=6HIMAGE @^@@@@      NAMPRO(2)=6HFACTOR@^@@@@      NAMPROUB
)@@G@@(3)=6HING PR@^@@@@      NAMPRO(4)=6HOCEDUR@^@@@@      NAMPRO(5)=6HE     UC
)@@G@@@^@@@@6006  NAMPRO(6)=IBLANK  @^@@@@      NAMPRO(7)=IBLANK  @#@@@@6008  UD
)@@G@@CONTINUE    @]@@@@      NI=1  @^@@@@      DO 6015 J=1,7     @^@@@@6015  UE
)@@G@@NAMCOV(J)=IBLANK  @A@@@@      IF (ICALC .EQ. 2) GO TO 6020  @^@@@@      UF
)@@G@@NAMCOV(1)=6HBASED @^@@@@      NAMCOV(2)=6HON COV@^@@@@      NAMCOV(3)=6HUG
)@@G@@ARIANC@^@@@@      NAMCOV(4)=6HE MATR@^@@@@      NAMCOV(5)=6HIX    @#@@@@UH
)@@G@@6020  CONTINUE    @[@@@@C     @C@@@@C             PRINT MATRIX IF NOT SUUI
)@@G@@PPRESSED    @[@@@@C     @A@@@@      IF(IPRNT .EQ. 0) GO TO 6100   @A@@@@UJ
)@@G@@      IF(ICALC .EQ. 2) GO TO 6080   @^@@@@      DO 6040 J=4,7     @^@@@@UK
)@@G@@ 6040 MLEMAT(J)=IBLANK  @A@@@@      IF(MLE .EQ. 0) GO TO 6050     @^@@@@UL
)@@G@@      MLEMAT(1)='MAXIMU'@^@@@@      MLEMAT(2)='M LIKE'@^@@@@      MLEMATUM
)@@G@@(3)='LIHOOD'@^@@@@      MLEMAT(4)=' ESTIM'@^@@@@      MLEMAT(5)='ATES'  UN
)@@G@@@#@@@@      GO TO 6060  @^@@@@ 6050 MLEMAT(1)='UNBIAS'@^@@@@      MLEMATUO
)@@G@@(2)='ED EST'@^@@@@      MLEMAT(3)='IMATES'@ @@@@ 6060 CALL S1HED2(NV,9,0UP
)@@G@@)     @G@@@@      CALL S1PLTM(R,NMS,Z,42HCOVARIANCE MATRIX FOR THE MODELUQ
)@@G@@           ,@C@@@@     -   0,MLEMAT,EATFMT,MAMFMT,BUMFMT,9,NV)    @#@@@@UR
)@@G@@      GO TO 6100  @ @@@@ 6080 CALL S1HED2(NV,12,0)    @G@@@@      CALL SUS
)@@G@@1PLTM(R,NMS,Z,42HCORRELATION MATRIX FOR THE MODEL          ,@B@@@@     -UT
)@@G@@   0,0,DATFMT,NAMFMT,MUMFMT,12,NV)  @[@@@@C     @ @@@@C             EXPAUU
)@@G@@ND R TO A   @[@@@@C     @]@@@@6100  M=1   @^@@@@      DO 6115 J=1,NV    UV
)@@G@@@]@@@@      JJ=J-1@ @@@@      IF (JJ.EQ.0) GO TO 6112 @^@@@@      DO 611UW
)@@G@@0 K=1,JJ    @#@@@@      A(J,K)=R(M) @#@@@@      A(K,J)=R(M) @]@@@@6110  UX
)@@G@@M=M+1 @#@@@@6112  A(J,J)=R(M) @]@@@@6115  M=M+1 @^@@@@      DO 6120 J=1,UY
)@@G@@7     @ @@@@ 6120 NEWHED(J)=NAMPRO(J)     @[@@@@C     @B@@@@C           UZ
)@@G@@        COMMUNALITY SECTION   @[@@@@C     @B@@@@C         BRANCH ON TYPEVA
)@@G@@ OF PROCEDURE     @A@@@@ 6150 IF(PROC .EQ. 1) GO TO 6300    @C@@@@C     VB
)@@G@@    BRANCH ON TYPE OF COMMUNALITY ESTIMATE@G@@@@      IF(INCOM .NE. 0  .VC
)@@G@@OR.  MAXCOR .NE. 0) CALL S1HED4(NV,12,NMS,0)    @A@@@@      IF(INCOM .NEVD
)@@G@@. 0) GO TO 6165   @A@@@@      IF(MAXCOR .EQ. 0) GO TO 6170  @ @@@@C     VE
)@@G@@    MAXIMAL CORRELATIONS@^@@@@      DO 6160 J=1,NV    @]@@@@      CMAX=0VF
)@@G@@@^@@@@      DO 6155 K=1,NV    @ @@@@      IF(K .EQ. J) GO TO 6155 @^@@@@VG
)@@G@@      CC=ABS(A(J,K))    @ @@@@      IF(CC .GT. CMAX) CMAX=CC@#@@@@ 6155 VH
)@@G@@CONTINUE    @#@@@@      H(J)=CMAX   @^@@@@ 6160 U(J)=1.0-H(J)     @A@@@@VI
)@@G@@      CALL S1PRVC(H,NMS,Z,COMEST,   @B@@@@     -   42HEQUAL TO MAXIMAL CVJ
)@@G@@ORRELATIONS @C@@@@     -   ,NAMPRO,VECFMT,MUMFMT,NAMFM2,12,NV)    @]@@@@VK
)@@G@@      IERR=0@#@@@@      GO TO 6200  @ @@@@C         COMMUNALITY INPUT   VL
)@@G@@@A@@@@ 6165 CALL S1PRVC(H,NMS,Z,COMEST,   @C@@@@     -   42HINPUT FROM TVM
)@@G@@HE MODEL CONTROL CARD   @C@@@@     -   ,NAMPRO,VECFMT,MUMFMT,NAMFM2,12,NVN
)@@G@@V)    @]@@@@      IERR=0@^@@@@      DO 6168 J=1,NV    @^@@@@6168  U(J)=1VO
)@@G@@.0-H(J)     @#@@@@      GO TO 6250  @C@@@@C         S SQUARED ESTIMATES VP
)@@G@@OF UNIQUENESS     @^@@@@6170  MVFW=IX(LVFW)     @B@@@@      CALL S1INV (VQ
)@@G@@A,T,DET,IERR,TEST,NV,NV)@B@@@@C  TEST IF OVERFLOW OCCURRED IN S1INV...  VR
)@@G@@@B@@@@      IF (IX(LVFW).NE.MVFW) GO TO 6999    @A@@@@      IF (IERR.NE.VS
)@@G@@0) GO TO 6230     @^@@@@      DO 6175 J=1,NV    @^@@@@      U(J)=1.0/T(JVT
)@@G@@)     @^@@@@6175  H(J)=1.0-U(J)     @ @@@@      CALL S1HED4(NV,12,NMS,3)VU
)@@G@@@G@@@@      CALL S1PRVC   (U,NMS,Z,40HS   S Q U A R E D   UNIQUENESS ESTVV
)@@G@@IMATES@]@@@@     *,0,   @C@@@@     -   NAMPRO,VECFMT,MUMFMT,NAMFM2,12,NVVW
)@@G@@)     @^@@@@      PRINT 6180,DET    @G@@@@6180  FORMAT (/46H0D E T E R MVX
)@@G@@ I N A N T   OF CORRELATION MATRIX,E12.5) @B@@@@C         TEST COMMUNALIVY
)@@G@@TY AND UNIQUENESS @^@@@@6200  DO 6210 J=1,NV    @E@@@@      IF (U(J) .LTVZ
)@@G@@. 0.00 .OR. U(J) .GT. 1.00) GO TO 6240    @C@@@@      GO TO (6998,6210,6WA
)@@G@@206,6202,6206) ,PROC    @B@@@@6202  IF (U(J) .GT. .9995)  GO TO 6240    WB
)@@G@@@#@@@@      GO TO 6210  @A@@@@6206  IF (U(J) .LT..0005) GO TO 6240@#@@@@WC
)@@G@@6210  CONTINUE    @#@@@@      GO TO 6250  @D@@@@C         ERROR DETECTEDWD
)@@G@@ AT IERR-TH SWEEP IN  S1INV   @^@@@@6230  DO 6235 J=1,NV    @#@@@@6235  WE
)@@G@@X(J)=A(J,J) @ @@@@      CALL S1HED4(NV,10,NMS,4)@G@@@@      CALL S1PRVC WF
)@@G@@    (X,NMS,Z,37HP I V O T S   OF CORRELATION MATRIX  ,@E@@@@     *37HFOLWG
)@@G@@LOWING PARTIAL INVERSION            ,0,GECFMT,  @ @@@@     *GUMFMT,GAMFMWH
)@@G@@T,10,NV)    @^@@@@      PRINT 6237,E,IERR @#@@@@      GO TO 6245  @D@@@@WI
)@@G@@6237  FORMAT (4A6, 5H 21. ,I3,19H-TH PIVOT TOO SMALL) @C@@@@C         ERWJ
)@@G@@ROR IN COMMUNALITY OR UNIQUENESS    @^@@@@ 6240 CALL S1HEDC(4)    @^@@@@WK
)@@G@@      PRINT 6242,E,J    @G@@@@6242  FORMAT (4A6, 5H 22. ,I3,35H-TH UNIQUWL
)@@G@@ENESS TOO NEAR ZERO OR ONE)   @A@@@@6245  IF (FPCA .EQ. 0) GO TO 6999   WM
)@@G@@@D@@@@C         FORCE PRINCIPAL COMPONENTS WHEN ALLOWED     @^@@@@      WN
)@@G@@ASSIGN 6100 TO ISW@]@@@@      ITER=0@#@@@@      PRINT 6248,F@G@@@@6248  WO
)@@G@@FORMAT (4A6,47H 30. PROCEDURE CHANGED TO PRINCIPAL COMPONENTS   ) @#@@@@WP
)@@G@@      PROC = 1    @#@@@@      GO TO 6001  @E@@@@C                   SET WQ
)@@G@@UP MATRIX TO BE DECOMPOSED SECTION  @A@@@@6250  CALL S1TIMT(2,11HCOMMUNAWR
)@@G@@LITY) @C@@@@      GO TO (6998,6260,6270,6290,6270),PROC     @A@@@@C     WS
)@@G@@    PRINCIPAL FACTOR PROCEDURE@C@@@@C         EXPAND R TO A AND REDUCE DWT
)@@G@@IAGONAL     @]@@@@6260  M=1   @^@@@@      DO 6265 J=1,NV    @]@@@@      WU
)@@G@@JJ=J-1@ @@@@      IF (JJ.EQ.0) GO TO 6264 @^@@@@      DO 6263 K=1,JJ    WV
)@@G@@@#@@@@      A(J,K)=R(M) @#@@@@      A(K,J)=R(M) @]@@@@6263  M=M+1 @^@@@@WW
)@@G@@6264  A(J,J)=R(M)-U(J)  @]@@@@6265  M=M+1 @#@@@@      GO TO 6300  @B@@@@WX
)@@G@@C         UNIQUENESS RESCALING PROCEDURE  @]@@@@6270  M=1   @B@@@@C     WY
)@@G@@    FORM SCALE FACTORS AND RESCALE  @G@@@@C  RESET OVERFLOW INDICATOR---WZ
)@@G@@------------------------------------------@#@@@@      CALL S1VFWC @^@@@@XA
)@@G@@      DO 6275 J=1,NV    @ @@@@      P(J)=1.0/SQRT  (U(J))   @^@@@@      XB
)@@G@@DO 6275 K=1,J     @ @@@@      A(J,K)=P(J)*P(K)*R(M)   @^@@@@      A(K,J)XC
)@@G@@=A(J,K)     @]@@@@6275  M=M+1 @G@@@@C  TEST OVERFLOW INDICATOR++++++++++XD
)@@G@@++++++++++++++++++++++++++++++++++++@A@@@@      CALL S1VFWT(6HANAL 2,$69XE
)@@G@@99)   @#@@@@      GO TO 6300  @ @@@@C         ALPHA PROCEDURE     @]@@@@XF
)@@G@@6290  M=1   @G@@@@C  RESET OVERFLOW INDICATOR---------------------------XG
)@@G@@------------------@#@@@@      CALL S1VFWC @^@@@@      DO 6298 J=1,NV    XH
)@@G@@@ @@@@      P(J)=1.0/SQRT  (H(J))   @]@@@@      JJ=J-1@ @@@@      IF (JJXI
)@@G@@.EQ.0) GO TO 6296 @^@@@@      DO 6295 K=1,JJ    @ @@@@      A(J,K)=P(J)*XJ
)@@G@@P(K)*R(M)   @^@@@@      A(K,J)=A(J,K)     @]@@@@6295  M=M+1 @#@@@@6296  XK
)@@G@@A(J,J)=1.0  @]@@@@6298  M=M+1 @G@@@@C  TEST OVERFLOW INDICATOR++++++++++XL
)@@G@@++++++++++++++++++++++++++++++++++++@A@@@@      CALL S1VFWT(6HANAL 3,$69XM
)@@G@@99)   @[@@@@C     @B@@@@C                   DECOMPOSITION SECTION @[@@@@XN
)@@G@@C     @D@@@@C         SET MAX NUMBER OF FACTORS TO BE EXTRACTED   @]@@@@XO
)@@G@@6300  NX=NV @C@@@@      IF (NF .GT. 0 .AND. NF .LT. NV) NX=NF     @B@@@@XP
)@@G@@C         SET TOLERANCE FOR EIGENVALUES   @#@@@@      TEMP = 0.0  @A@@@@XQ
)@@G@@      IF (ICALC .EQ. 1) GO TO 6325  @C@@@@      GO TO (6315,6325,6320,63XR
)@@G@@15,6315), PROC    @A@@@@6315  IF (NF .NE.  0) GO TO 6325    @#@@@@6320  XS
)@@G@@TEMP=1.0    @#@@@@6325  CONTINUE    @^@@@@      MVFW=IX(LVFW)     @E@@@@XT
)@@G@@      CALL S1EIG (A,Q,B,NV,MVV,1,NX,TEMP,S,T,V,W,X,Y,ZZ)    @B@@@@C  TESXU
)@@G@@T IF OVERFLOW OCCURRED IN S1EIG...  @B@@@@      IF (IX(LVFW).NE.MVFW) GOXV
)@@G@@ TO 6999    @[@@@@C     @F@@@@C             REFLECT EIGENVECTORS IF 'SIGXW
)@@G@@NED SSQ' IS NEGATIVE    @[@@@@C     @^@@@@      DO 6330 K=1,NX    @]@@@@XX
)@@G@@      TEMP=0@^@@@@      DO 6326 J=1,NV    @A@@@@ 6326 TEMP=TEMP+Q(J,K)*AXY
)@@G@@BS(Q(J,K))  @A@@@@      IF(TEMP .GE. 0) GO TO 6330    @^@@@@      DO 632XZ
)@@G@@8 J=1,NV    @^@@@@ 6328 Q(J,K)=-Q(J,K)    @#@@@@ 6330 CONTINUE    @[@@@@YA
)@@G@@C     @C@@@@      CALL S1TIMT (4,19HEIGEN DECOMPOSITION)    @G@@@@C     YB
)@@G@@    TEST IF NUMBER OF FACTORS  EXTRACTED EQUALS NUMBER REQUESTED  @A@@@@YC
)@@G@@      IF(NF .LE. NX) GO TO 6340     @^@@@@      CALL S1HEDC(2)    @#@@@@YD
)@@G@@      PRINT 6335,F@G@@@@6335  FORMAT (4A6,49H 23. NOT ALL FACTORS REQUESYE
)@@G@@TED COULD BE EXTRACTED) @[@@@@C     @B@@@@C                   ITERATION YF
)@@G@@SECTION     @[@@@@C     @A@@@@6340  IF (ITER.EQ.0)  GO TO 6400    @]@@@@YG
)@@G@@6345  NF=NX @C@@@@      GO TO (6998,6350,6360,6370,6998), PROC    @F@@@@YH
)@@G@@C         PRINCIPAL FACTOR PROCEDURE - COMPUTE NEW COMMUNALITY    @]@@@@YI
)@@G@@6350  IERR=0@G@@@@C  RESET OVERFLOW INDICATOR---------------------------YJ
)@@G@@------------------@#@@@@      CALL S1VFWC @^@@@@      DO 6358 J=1,NV    YK
)@@G@@@#@@@@      TEMP=0.0    @^@@@@      DO 6352 K=1,NF    @A@@@@6352  TEMP=TYL
)@@G@@EMP+Q(J,K)*Q(J,K)*B(K)  @C@@@@      IF (ABS (TEMP-H(J)).LT.CRIT)  GO TO YM
)@@G@@6356  @]@@@@6354  IERR=1@#@@@@6356  H(J)=TEMP   @^@@@@6358  U(J)=1.0-TEMYN
)@@G@@P     @G@@@@C  TEST OVERFLOW INDICATOR++++++++++++++++++++++++++++++++++YO
)@@G@@++++++++++++@A@@@@      CALL S1VFWT(6HANAL 4,$6999)   @#@@@@      GO TO YP
)@@G@@6380  @F@@@@C         UNIQUENESS RESCALING PROCEDURE - COMPUTE NEW UNIQUYQ
)@@G@@ENESS @]@@@@6360  IERR=0@#@@@@      SEMP=0.0    @^@@@@      DO 6361 J=1,YR
)@@G@@NV    @^@@@@6361  SEMP=SEMP+1.0/U(J)@#@@@@      TEMP=0.0    @^@@@@      YS
)@@G@@DO 6362 K=1,NF    @^@@@@6362  TEMP=TEMP+B(K)    @G@@@@C  RESET OVERFLOW YT
)@@G@@INDICATOR---------------------------------------------@#@@@@      CALL SYU
)@@G@@1VFWC @ @@@@      SEMP=(NV-NF)/(SEMP-TEMP)@]@@@@      IERR=0@^@@@@      YV
)@@G@@DO 6368 J=1,NV    @#@@@@      TEMP=0.0    @^@@@@      DO 6364 K=1,NF    YW
)@@G@@@C@@@@6364  TEMP=TEMP+Q(J,K)*Q(J,K)*(SEMP*B(K)-1.0)   @ @@@@      TEMP=1YX
)@@G@@.0/(1.0+TEMP)     @C@@@@      IF (ABS (TEMP-U(J)).LT.CRIT) GO TO 6366   YY
)@@G@@@]@@@@6365  IERR=1@#@@@@6366  U(J)=TEMP   @^@@@@6368  H(J)=1.0-TEMP     YZ
)@@G@@@G@@@@C  TEST OVERFLOW INDICATOR++++++++++++++++++++++++++++++++++++++++ZA
)@@G@@++++++@A@@@@      CALL S1VFWT(6HANAL 5,$6999)   @#@@@@      GO TO 6380  ZB
)@@G@@@D@@@@C         ALPHA PROCEDURE - COMPUTE NEW COMMUNALITY   @]@@@@6370  ZC
)@@G@@IERR=0@G@@@@C  RESET OVERFLOW INDICATOR---------------------------------ZD
)@@G@@------------@#@@@@      CALL S1VFWC @^@@@@      DO 6378 J=1,NV    @#@@@@ZE
)@@G@@      TEMP=0.0    @^@@@@      DO 6372 K=1,NF    @A@@@@6372  TEMP=TEMP+Q(ZF
)@@G@@J,K)*Q(J,K)*B(K)  @^@@@@      TEMP=TEMP*H(J)    @C@@@@      IF (ABS (TEMZG
)@@G@@P-H(J)).LT.CRIT)  GO TO 6376  @]@@@@6374  IERR=1@#@@@@6376  H(J)=TEMP   ZH
)@@G@@@^@@@@6378  U(J)=1.0-TEMP     @G@@@@C  TEST OVERFLOW INDICATOR++++++++++ZI
)@@G@@++++++++++++++++++++++++++++++++++++@A@@@@      CALL S1VFWT(6HANAL 6,$69ZJ
)@@G@@99)   @F@@@@C         PRINT ITERATIVE ESTIMATES OF COMMUNALITIES - OPTIOZK
)@@G@@NALLY @A@@@@6380  IF (ITERS.EQ.0) GO TO 6382    @]@@@@      ILST=1@^@@@@ZL
)@@G@@6381  SUBNAM(1)=6HITERAT@^@@@@      SUBNAM(2)=6HION NU@^@@@@      SUBNAMZM
)@@G@@(3)=6HMBER  @^@@@@      SUBNAM(4)=IBLANK  @^@@@@      SUBNAM(5)=IBLANK  ZN
)@@G@@@^@@@@      SUBNAM(6)=IBLANK  @^@@@@      SUBNAM(7)=IBLANK  @]@@@@      ZO
)@@G@@ILN=1 @ @@@@      IF(NI .GT. 9) ILN=2     @ @@@@      IF(NI .GT. 99) ILNZP
)@@G@@=4    @B@@@@      CALL S1ENCI(NI,SUBNAM(4),ILN,ILN,1) @ @@@@      CALL SZQ
)@@G@@1HED4(NV,12,NMS,0)@G@@@@      CALL   S1PRVC (H,NMS,Z,37HITERATIVE ESTIMAZR
)@@G@@TES OF COMMUNALITIES  , @D@@@@     -   NAMPRO,SUBNAM,VECFMT,MUMFMT,NAMFMZS
)@@G@@2,12,NV)    @B@@@@      GO TO (6382,63901,63921,63941),ILST @B@@@@C     ZT
)@@G@@    CHECK FOR PROPER COMMUNALITY    @^@@@@6382  DO 6383 J=1,NV    @C@@@@ZU
)@@G@@      IF (H(J).GT.1.0.OR.H(J).LT.0.0) GO TO 6390@C@@@@      GO TO (6998,ZV
)@@G@@6383,63824,63826,6998),PROC   @A@@@@63824 IF (H(J).GT.0.9995) GO TO 6390ZW
)@@G@@@#@@@@      GO TO 6383  @A@@@@63826 IF (H(J).LT..0005) GO TO 6390 @#@@@@ZX
)@@G@@6383  CONTINUE    @A@@@@C         CHECK FOR CONVERGENCE     @A@@@@      ZY
)@@G@@IF (IERR.EQ.0)  GO TO 6392    @D@@@@C         CHECK NUMBER OF ITERATIONSZZ
)@@G@@ LESS THAN MAX    @A@@@@6384  IF (NI.GE.ITER) GO TO 6394    @A@@@@C     AA
)@@G@@    PERFORM ANOTHER ITERATION @#@@@@6386  NI=NI+1     @C@@@@      GO TO AB
)@@G@@(6998,6260,6270,6290,6998), PROC    @C@@@@C         DIAGNOSTIC FOR IMPROAC
)@@G@@PER COMMUALITY    @]@@@@ 6390 ILST=2@A@@@@      IF(ITERS .EQ. 0) GO TO 6AD
)@@G@@381   @^@@@@63901 PRINT 6242,F,J    @^@@@@      CALL S1HEDC(4)    @#@@@@AE
)@@G@@      GO TO 6396  @A@@@@C         MESSAGE FOR CONVERGENCE   @]@@@@ 6392 AF
)@@G@@ILST=3@A@@@@      IF(ITERS .EQ. 0) GO TO 6381   @^@@@@63921 PRINT 6393,FAG
)@@G@@,CRIT @^@@@@      CALL S1HEDC(4)    @#@@@@      GO TO 6396  @G@@@@6393  AH
)@@G@@FORMAT (4A6,40H 24. CONVERGENCE ACHIEVED WITH CRITERION,F8.5)     @C@@@@AI
)@@G@@C         DIAGNOSTIC FOR TOO MANY ITERATIONS    @]@@@@ 6394 ILST=4@A@@@@AJ
)@@G@@      IF(ITERS .EQ. 0) GO TO 6381   @#@@@@63941 PRINT 6395,F@^@@@@      AK
)@@G@@CALL S1HEDC(4)    @F@@@@6395  FORMAT (4A6,43H 25. BOUND ON NUMBER OF ITEAL
)@@G@@RATIONS ACHIEVED) @^@@@@6396  PRINT 6397,F,NI   @G@@@@6397  FORMAT (4A6,AM
)@@G@@31H 26. ITERATION TERMINATED AFTER,I4,11H ITERATIONS) @[@@@@C     @C@@@@AN
)@@G@@C                             OUTPUT SECTION    @[@@@@C     @#@@@@6400  AO
)@@G@@CONTINUE    @^@@@@      MVFW=IX(LVFW)     @D@@@@      CALL S6OUT (A,Q,R,AP
)@@G@@B,NMS,P,T,U,X,Y,Z,SD,MV,MVV)  @B@@@@C  TEST IF OVERFLOW OCCURRED IN S6OUAQ
)@@G@@T...  @B@@@@      IF(IX(LVFW).NE.MVFW) GO TO 6999     @C@@@@      CALL SAR
)@@G@@1TIMT(4,19HROTATION AND OUTPUT)     @^@@@@C          UNNORMALIZE A@D@@@@AS
)@@G@@      IF(ICALC .EQ. 2  .OR.  NRMLZE .EQ. 0) GO TO 6505@^@@@@      DO 650AT
)@@G@@0 J=1,NV    @#@@@@      JJ=Z(J)     @#@@@@      DIV=SD(JJ)  @^@@@@      AU
)@@G@@DO 6500 K=1,NRF   @^@@@@ 6500 A(J,K)=A(J,K)*DIV @#@@@@6505  CONTINUE    AV
)@@G@@@[@@@@C     @B@@@@C                   FACTOR SCORES SECTION @[@@@@C     AW
)@@G@@@G@@[@      IF(SCORES .EQ. 0  .AND.  IPCOEF .EQ. 0  .AND.  NADD .EQ. 0) AX
)@@G@@GO TO @#@@[@     -   6740     @#[@@@      NOUT=NV*NRF @C@@@@      CALL SAY
)@@G@@1VCSR('WRITE',FNAM2,A,NOUT,$6998)   @^@@@@      DO 6510 J=1,7     @ @@@@AZ
)@@G@@ 6510 IBUFSV(J)=SUBNAM(J)     @D@@@@      CALL S6COEF  (A,Q,B,P,X,Z,SD,NBA
)@@G@@MS,MV,MVV,XM)     @B@@@@C  TEST IF OVERFLOW OCCURRED IN S6COEF... @B@@@@BB
)@@G@@      IF(IX(LVFW).NE.MVFW) GO TO 6999     @D@@[@      IF(SCORES .EQ. 0  BC
)@@G@@.AND.  NADD .EQ. 0) GO TO 6520@F@@[@      CALL S63SCR(A,XM,SD,X,Y,Z,NMS,BD
)@@G@@MV,NADD,BABUF,BAVBUF,BAVAR)   @B]@@@C  TEST IF OVERFLOW OCCURRED IN S6SCBE
)@@G@@OR... @B@@@@      IF(IX(LVFW).NE.MVFW) GO TO 6999     @^@@@@      IPCH=ABF
)@@G@@ND(SCORES,2)@^@@@@      ITAP=AND(SCORES,4)@D@@@@      IF(IPCH .EQ. 0  .OBG
)@@G@@R. ITAP .EQ. 0) GO TO 6520    @^@@@@      KEMP=SCORES/4     @^@@@@      BH
)@@G@@SCORES=KEMP*4     @F@@[@      CALL S63SCR(A,XM,SD,X,Y,Z,NMS,MV,0   ,BABUBI
)@@G@@F,BAVBUF,BAVAR)   @B[@@@      IF(IX(LVFW) .NE. MVFW) GO TO 6999   @B@@@@BJ
)@@G@@ 6520 CALL S1TIMT(3,13HFACTOR SCORES)     @C@@@@      CALL S1VCSR('READ'BK
)@@G@@,FNAM2,A,NOUT,$6998)    @^@@@@      DO 6530 J=1,7     @ @@@@ 6530 SUBNAMBL
)@@G@@(J)=IBUFSV(J)     @D@@@@ 6740 IF(RES .EQ. 0  .AND.  IRPCOR .EQ. 0) GO TOBM
)@@G@@ 6818 @^@@@@C         SWAP A AND Q  @^@@@@      DO 6746 J=1,NV    @^@@@@BN
)@@G@@      DO 6745 K=1,NRF   @^@@@@6745  Q(J,K)=A(J,K)     @#@@@@6746  CONTINBO
)@@G@@UE    @]@@@@6750  M=1   @G@@@@C  RESET OVERFLOW INDICATOR---------------BP
)@@G@@------------------------------@#@@@@      CALL S1VFWC @^@@@@      DO 677BQ
)@@G@@5 I=1,NV    @^@@@@      DO 6775 J=1,I     @]@@@@      TEMP=0@^@@@@      BR
)@@G@@DO 6770 K=1,NRF   @ @@@@6770  TEMP=TEMP+Q(I,K)*Q(J,K) @#@@@@      A(M)=TBS
)@@G@@EMP   @]@@@@6775  M=M+1 @G@@@@C  TEST OVERFLOW INDICATOR++++++++++++++++BT
)@@G@@++++++++++++++++++++++++++++++@A@@@@      CALL S1VFWT(6HANAL 7,$6999)   BU
)@@G@@@A@@@@      IF(IRPCOR .EQ. 0) GO TO 6778  @A@@@@      IF(ICALC .EQ. 2) GBV
)@@G@@O TO 6777   @ @@@@      CALL S1HED2(NV,9,0)     @G@@@@      CALL S1PLTM(BW
)@@G@@A,NMS,Z,42HR E P R O D U C E D  COVARIANCE MATRIX FOR @C@@@@     -   ,BUBX
)@@G@@F,NAMPRO,EATFMT,MAMFMT,BUMFMT,9,NV) @#@@@@      GO TO 6778  @#@@@@ 6777 BY
)@@G@@CONTINUE    @ @@@@      CALL S1HED2(NV,12,0)    @G@@@@      CALL S1PLTM(BZ
)@@G@@A,NMS,Z,42HR E P R O D U C E D CORRELATION MATRIX FOR @C@@@@     -   ,BUCA
)@@G@@F,NAMPRO,DATFMT,NAMFMT,MUMFMT,12,NV)@A@@@@ 6778 IF(RES .EQ. 0) GO TO 680CB
)@@G@@0     @]@@@@      M=M-1 @^@@@@      DO 6779 I=1,M     @^@@@@ 6779 A(I)=RCC
)@@G@@(I)-A(I)    @A@@@@      IF(ICALC .EQ. 2) GO TO 67795  @ @@@@      CALL SCD
)@@G@@1HED2(NV,9,2)     @G@@@@      CALL S1PLTM(A,NMS,Z,39HR E S I D U A L   CCE
)@@G@@OVARIANCE MATRIX FOR    @C@@@@     -   ,BUF,NAMPRO,EATFMT,MAMFMT,BUMFMT,CF
)@@G@@9,NV) @#@@@@      GO TO 67798 @#@@@@67795 CONTINUE    @ @@@@      CALL SCG
)@@G@@1HED2(NV,12,2)    @G@@@@      CALL  S1PLTM(A,NMS,Z,39HR E S I D U A L   CH
)@@G@@COVARIANCE MATRIX FOR,  @C@@@@     *BUF,NAMPRO,DATFMT,NAMFMT,MUMFMT,12,NCI
)@@G@@V)    @G@@@@C         COMPUTE SUM OF SQUARES OF OFF-DIAGONAL ELEMENTS OFCJ
)@@G@@ RESIDUAL M @#@@@@67798 CONTINUE    @#@@@@      TEMP=0.0    @]@@@@      CK
)@@G@@M=2   @G@@@@C  RESET OVERFLOW INDICATOR---------------------------------CL
)@@G@@------------@#@@@@      CALL S1VFWC @^@@@@      DO 6785 J=2,NV    @]@@@@CM
)@@G@@      JJ=J-1@^@@@@      DO 6780 K=1,JJ    @ @@@@      TEMP=TEMP+A(M)*A(MCN
)@@G@@)     @]@@@@6780  M=M+1 @]@@@@6785  M=M+1 @G@@@@C  TEST OVERFLOW INDICATCO
)@@G@@OR++++++++++++++++++++++++++++++++++++++++++++++@A@@@@      CALL S1VFWT(CP
)@@G@@6HANAL 8,$6999)   @A@@@@C         COMPUTE DEGREES OF FREEDOM@^@@@@      CQ
)@@G@@M=NV*(NV-1)/2     @^@@@@      PRINT 6790 ,M,TEMP@G@@@@6790  FORMAT (19H0CR
)@@G@@SUM OF SQUARES OF ,I5,58H OFF-DIAGONAL ELEMENTS OF THE@B@@@@     * RESIDCS
)@@G@@UAL COVARIANCE MATRIX  ,G11.5)@D@@@@C         COMPUTE AND OUTPUT RANKINGCT
)@@G@@S OF FACTOR MATRIX@^@@@@6800  DO 6815 J=1,NV    @^@@@@      DO 6810 K=1,CU
)@@G@@NRF   @^@@@@6810  A(J,K)=Q(J,K)     @#@@@@6815  CONTINUE    @#@@@@ 6818 CV
)@@G@@CONTINUE    @^@@@@C         NORMALIZE A   @D@@@@      IF(ICALC .EQ. 2  .CW
)@@G@@OR.  NRMLZE .EQ. 0) GO TO 6825@^@@@@      DO 6820 J=1,NV    @#@@@@      CX
)@@G@@JJ=Z(J)     @#@@@@      DIV=SD(JJ)  @^@@@@      DO 6820 K=1,NRF   @^@@@@CY
)@@G@@ 6820 A(J,K)=A(J,K)/DIV @#@@@@ 6825 CUTOFF=.3   @D@@@@      IF(ICALC .EQCZ
)@@G@@. 2  .OR.  NRMLZE .NE. 0) GO TO 6850@#@@@@      CUTOFF=0    @^@@@@      DA
)@@G@@DO 6840 J=1,NV    @^@@@@      DO 6830 K=1,NRF   @A@@@@ 6830 CUTOFF=CUTOFDB
)@@G@@F+ABS(A(J,K))     @#@@@@ 6840 CONTINUE    @ @@@@      CUTOFF=CUTOFF/(NV*DC
)@@G@@NRF)  @#@@@@ 6850 CONTINUE    @D@@@@      CALL  S6RANK  (A,Q,NV,NRF,Z,NMDD
)@@G@@S, W,X,Y,BUF)     @#@@@@6900  CONTINUE    @^@@@@C         NORMAL RETURN DE
)@@G@@@]@@@@      RETURN@A@@@@C         ERROR RETURN -CODING FLAW @C@@@@6997  DF
)@@G@@FORMAT (4A6,21H 99. SEE A CONSULTANT)     @#@@@@6998  PRINT 6997,E@ @@@@DG
)@@G@@C         NORMAL ERROR RETURN @#@@@@6999  PRINT 7000,F@]@@@@      RETURNDH
)@@G@@@G@@@@7000  FORMAT (4A6,51H 27. ANALYSIS TERMINATED BECAUSE OF PREVIOUS DI
)@@G@@ERRORS@]@@@@     *)     @]@@@@      END   ___T,B)@@[N#@@]A@K0CS@@@[@)@ &DJ
)@@G@@[@@@ >G.)__"C[)@ <G.@__"C9FK@^G/)__"C8:K@KG/@__"C@@@ =AA@@@A)@E@F#@@@@@@DK
)@@G@@)@B@S@)@L@)@@@@@@@1X,A6,3X,12(HNAME,(10X,42,3X))0(A6,A(16X,1[[@@ $AB@@@ADL
)@@G@@)@P[K@@@@@@@@@@@@@      FT3$$2 E S - M A T S T IT Y  EA L I M U N C O M DM
)@@G@@A2))  AC@@@A)@6@K@)@F@3#@-@K0CS^G]A@@@@@@@@@@@@)@@@@@)@@@@@Z@@@@@6/,0@@@DN
)@@G@@[[)@ *______OVERFLAD@@@A)@L[F@K0]A[@K0CKOG]A@@@@@[X@ U@@@@^>/,0@@@^@K@@+DO
)@@G@@N8K@[U[@@@@-C@@@@@@[U@ U/K@@X:AE@@@A)@U[F#AC]  #@)C]@)@@@@@@/K@@[ /K@@@'DP
)@@G@@/K@@@\/K@@@=@[Y@ U'^@@@@8];@@Y$'0@@ARA0@@TAF@@@A)@<[F@K0CT^G]AL#@-=K0CT@DQ
)@@G@@[@)@@#C@)@^([@@@@]C@@@^*[@)@@[C@)@^$[@@@@@C@@@^&/K@@[KAG@@@A)@?[##@-=K0CDR
)@@G@@S^G+A[#C-)@@@@@@@@C@@@^?[@)@@[C@)@^:[@@@@@C@@@^&/K@K@+[@@@@^C@@@^%AH@@@ADS
)@@G@@)@4[F#C-)K2CS^G+@-)K2CS@C@)@^0[@@@@@C@@@^\/K@@[U[@@@@^C@@@^,[@)@@#C@)@^!DT
)@@G@@[@@@@]AI@@@A)@.[F#C-)K2CS^G+A[#C)CS@C@@@^3/K@@[U[@@@@^C@@@^%[@)@@#C@)@^2DU
)@@G@@[@@@@]C@@@^1[@)@@[AJ@@@A)[A[##C-)K2CS^G+A[#C-)@@@@@@@@C@@@^7[@)@@#C@)@^6DV
)@@G@@[@@@@]C@@@^5[@)@@[C@)@^4[@@@@@AK@@@A)[I[F#C)CS^G+A[#C-)K2CS@C@)@^6[@@@@]DW
)@@G@@C@@@^5[@)@@[C@)@^4[@@@@@C@@@^8/K@@[U[@@@@^AL@@@A)[R[F#C-)K2CT^G+AL#CCS@@DX
)@@G@@[@@@@<C/@@@[[@)@@AC@)@[I[@@@@ C@@@[I[@@@@^C@@@^7[@)@@#AM@@@A)[)[F#@CT^G+DY
)@@G@@@CS1@@@@@@@@/K@@[3(@@@@IH@)@#?C/)@@]8L@@[+[@[)@OC@@@[IN.@@@AR@K@^9AN@@@ADZ
)@@G@@)[([##@-=K0CT^G]AL#@-=@@@@@@@@[@@@@SC@@@^.[@)@@RC@)@^/[@@@@QC@@@^;[@)@@PEA
)@@G@@C@)@^'AO@@@A)[1[N#@-=^@K1+@-)@N.@@@#R@K@^_/K@@]=(@@@@GH@@@#?C/@@@]/K@@]6EB
)@@G@@(@@@@@[@)@@TC@)@^"AP@@@A)[;[F#C-)K^GU@-)K0CS^G@@[[@@@FC[@@ [[@)@@EC@)@ @EC
)@@G@@/K@@]F(@@@@K8L@@[;[@[)@DC@@@[IAQ@@@A)]^[F#@-)K0CS^G]A[@K0CS@[@@@@EC@@@  ED
)@@G@@/K@@]L[])@@IC])@ ^[]@@@HC]@@ #[[)@@GC[)@ ]AR@@@A)]H[##@-)K0CS^CMA[#@-)@@EE
)@@G@@@@@@@@@@@@ D@@@@ C@@@@@-/,0@@@[[@@@GC[@@ B[@)@@FC@)@ AAS@@@A)@8[@@@@@@@@EF
)@@G@@)]P@F#@@@@@@@]-@ U______      L     E MODEFOR THATRIX ANCE MCOVARIAT@@@AEG
)@@G@@)]Q[F]A@-)K0CS^G%AO@@@@@@@@@@ @@@@@@@@@@@E@@@@ D@@@@@8@@@@@@@@@@@@@@@@@@EH
)@@G@@/,0@@@AU@@@A)]Z[F#E-)K0CS^[]^-)K0CS@@@@@ D@@@@ E@@@@@-/,0@@@/K@@]6@]+@ UEI
)@@G@@@@@@@-@@@@ C@@@@@FAV@@@A)[@[@@@@@@@@)]*@F#@@@@@@@]=@ U______      EL    EJ
)@@G@@HE MOD FOR TMATRIXATION CORRELAW@@@A)]([F]A@-)K0CS^G+AK@@@@@@@@@@"@@@@@IEK
)@@G@@@@@@ D@@@@ D@@@@[@@@@@@@@@@@@@@@@@@@/,0@@@AX@@@A)]2[F#C-)K0CS[#@CS@@@@@@EL
)@@G@@G@@@@@G@)@@-C/)__"[@@@@>C/@@@[@]>@ U@@@@@-@@@@ E@@@@@4AY@@@A)];[N#@CS@^GEM
)@@G@@@-)@@@;[)@@MC[)@ (C_)@@[G[@@ *H[@@@@G[@@@@C.@@@[G@@@ *H@@@@@[@@@ (AZ@@@AEN
)@@G@@)# [M[#@-)^G@-)@@@C@)@@@G@@@ *H@@@@@G@@@@=C@@@@@[#)@@=[[@@ ([@)@[^[[)@@[EO
)@@G@@'L)@@GBA@@@A)#J[F#@]A[#@-)^G]A@@@@@@]@@@@&H@@@@=C/@@@[[@)@ :[@@@ %G@)@ *EP
)@@G@@H@)@@@G/)@@[T@)@@=BB@@@A)#S[N#@)]A[#@]A@@@]@@@[ [@)@@#'K)@ %;@)@@MC@)@@@EQ
)@@G@@Q@)@ :R@)@ FH/@__"/K@@#?(@@@@&BC@@@A)#+[N#@-)@[#@-)K@@8LK@#+[@@@@>G@@@@>ER
)@@G@@C/@@@[[@+)@@C@=@@@[@#)@@C@^@@@O[@@ >R[@@@>BD@@@A)#?[F#@-)@K0CS[@@@@@@@@@ES
)@@G@@8L@@#DG_)@@[[@)@@>G@)@@>C/)@@[[@[)@@C@^@@@O[@@ >R[@@@>BE@@@A)#5[N#@JTB?'ET
)@@G@@@CS1@@C/@@@[/K@@F0(@@@@IH@)@@TC/)@@[8L@@#7[@]\_"C@]J_"N.@@@AR@)@^9BF@@@AEU
)@@G@@)#_[F#G]AG^[]C-)@@@@@@@@@@@@@-/,0@@@/)K@^G)@@@@I @@@@I(@@@@<C/)@@[ @@@@GEV
)@@G@@(@@@@]BG@@@A)^C[F#@CS^G@-)K0@@@@@@@@H/)@@[T@)@@@C@)@@-G@@@@-C/@__"@]_@ UEW
)@@G@@@@@@ D@@@@@@@@@@ EBH@@@A)^L[F#A)CT=[#@CS^G@@@@@@[@@@[^Q@K@ -R@K@ FR.@@@[EX
)@@G@@R@0@ (/K@@ )(@@@@]/K@@ B*@@@@<BI@@@A)^U[F#@-)K0CS[#@-)K0CS@@H@@@@=C@@@@$EY
)@@G@@[#)@@$N[K@ (C_)@@[ @@@@*A[@@@=]@)@ %[@@@ (BJ@@@A)^<[MK[#@-)K0@)CS@C@@@@(EZ
)@@G@@/K@@^,1@@@@G*@@@@G"^@@@(C@@@@*[@@@@(E@#@@@/K@@^,(@@@@GBK@@@A)^![F#@]@-)KFA
)@@G@@1*S[#@@@@@@@O@0@ %]@[)@@"^@@ G[@^@@<C@@@@*8LK@^)G_)@@[O@0@@@[@@@@*BL@@@AFB
)@@G@@)^6@E@)[C[@@@@@@@@@@@@@@______            TIONS ORRELAIMAL CTO MAXEQUAL FC
)@@G@@O.@@@[BM@@@A)^7[F@K+*S0K0CS^G+AK@@@@@@@@@N@@@@@@@@@@[C@@@@@Q@@@@@@@@@@@@FD
)@@G@@@@@@@=/,0@@@8L@@^WBN@@@A) @@;#C-)K0CS^G]A[@@@@@@)[K@C@INPUT /K@@AT @@@@%FE
)@@G@@@#P@ U@@@@@-@@@@ E@@@@@L@@@@@4BO@@@A)[L@8@@@@@@@) B@N]E-<@@@@@@@@=/,0@@@FF
)@@G@@______      ARD   TROL CEL CONHE MODFROM TBP@@@A) D[E^G]A[#C-=K2CS^G@@@@FG
)@@G@@@@@@ E@@@@@L@@@@@4@@@@@N@@@@@@@@@@[K@@@@@Q@@@@@@@@@@@@BQ@@@A) M[F#@-)K0]FH
)@@G@@A[#@-)K0@@@@[@@@[^Q@K@ -R@K@ FR@)@^9G@@@@-C/@__" @@@@%@#S@ U@@@@@-BR@@@AFI
)@@G@@) V[F#A-)^[@K0JEA[]G@@@@/,0@@@[@@@@:C@#J_"R@0@@Z/K@@CO8L@@ V]@[)@@"^@@ GFJ
)@@G@@C@])@<BS@@@A) =[E^GUA@K0CS^G#2@@@@@@C@#J_"@#-@ U@@@@@-@@@@@-@@@@@@@@@@@%FK
)@@G@@@@@@@N@@@@@@@@@@@@BT@@@A) ![F#@C@-)K0C]A[#@@@@@@R@K@ FR[@@^9/K@@B *@@@@%FL
)@@G@@G@@@@-C/@__"/K@@X:*@@@@GH@@@@:BU@@@A) 6[F#@-)K0]A@[#@@@@@@@@"^)@ GC@-)@@FM
)@@G@@[@[@@@"G])@@C@@@ G[@@@[^Q@)@ XR@)@ FQ@K@ -BV@@@A) _@;#A)CL^G]A@K0@)[S@K@FN
)@@G@@Q U A S   S @@@@ H@@@@@@@@@@ E@@@@@-/,0@@@8L@@ ']@=)@<BW@@@A)[U@0@@@@@@@FO
)@@G@@)AA@V#@- @@@@@@@@@/,0@@@@#?@ U______ATES   ESTIMUENESS  UNIQR E D BX@@@AFP
)@@G@@)AD[E^G]A[#C-=K2CS^G@@@@@@@@ E@@@@@L@@@@@4@@@@@N@@@@@@@@@@ D@@@@[S@@@@@@FQ
)@@G@@@@@@@@BY@@@A)AM@;#@-)K(CS^G]AH]&@@@@)[)@C@(/46H0'^@@@@@@)@@N@#,@ U@@[@[)FR
)@@G@@/,0@@@@#!@ U@@@@@-BZ@@@A)[-[C@@@@@@@)AT@E@C/@__"2.5)  RIX,E1ON MATRELATIFS
)@@G@@OF CORN T   I N A E R M D E T CA@@@A)AU[N#@CS[#@CS@@@@1@@@@I*@@@@I"^<@@@FT
)@@G@@C@)@ GC/@@@[[#)@@=[@@@[^R@0@ -C_)@@[G@@@@-CB@@@A)A=[M@@K^GS@@@@@@@$'0@@AFU
)@@G@@RA0@@T/=K@B5)@@@@I @@@@I0@@@@K*@@@@KD[#@@@C/)@@[ @@@@GCC@@@A)A,[F@K**S^[FV
)@@G@@@K^[@K0@@@@@C@@@ I/K@@A//K@@A6/K@@A//K@@B[/K@@X+@#7@ U'^@@@@8];@A0CD@@@AFW
)@@G@@)A7[MK[@K[#@)]@@@@/K@@B5*@@@@G/C@@B["^@@ JC@#@@@/K@@B[/K@@B5*@@@@G/C@@A;FX
)@@G@@"^#@@@CE@@@A)B[[M^[@@K0CS@@@@@H@@@@@[@@@ (G@)@@-C/)__"G@@@@@C/@@@[/K@@COFY
)@@G@@8L@@AYG_)@@[O/0@@[CF@@@A)BF[N#@-)@K0CS@@@@[@])@@C@[)@@[@)@[^Q@)@ YR@)@ FFZ
)@@G@@[[@@@['L@@@G;[@@@MC[@@ (G@@@ *CG@@@A)BP@3@K+CS^G@-)@@@)[%@S@  OF CO T S GA
)@@G@@P I V @@@@ L@@@@@@@@@@ K@@@@@-/,0@@@8L@@BNCH@@@A)[![S@@@@@@@      ION   GB
)@@G@@INVERSRTIAL ING PAFOLLOW______      ATRIX TION MORRELACI@@@A)[8@K@)BV@;#GC
)@@G@@@- @K0CS@@@@@@@@[2@@@@[%@@@@@@@@@@@@@@@@@@/,0@@@@^ @ U______      CJ@@@AGD
)@@G@@)B+[##@-=K2CS^G]A[#@-M@@@@@@@@/,0@@@@^A@ U@@@@@-@@@@ K@@@@@B@@@@@:@@@@@+GE
)@@G@@@@@@ DCK@@@A)B%[F#@-)K0]AH]*)CS^E)@@'^K@@@C8@@@%8L@@B,'^)@@@C8^)#?N.@@@#GF
)@@G@@R[@@^9@^B@ U@@[@['CL@@@A)B3@N]&)@@@@)['@8@@@@@@@LL)   OO SMAIVOT TH-TH PGG
)@@G@@,I3,19H 21. (4A6,5/K@@C#'^@@@@CM@@@A)B5[F]]-)K0CO=G]A[#@CS0@C8#)#?N.@@@#GH
)@@G@@R@0@^9@^L@ U@@[@][/,0@@@@^K@ U@@@@ L/,0@@@CN@@@A)B"@:]*)CS^E+ G@@@)][@S@GI
)@@G@@@@@@@@,I3,35H 22. (4A6,5'^@@@@'^K@@@C8@@@=8L@@B.'^)@@@CO@@@A)]^@8@@@@@@@GJ
)@@G@@)C#@N#A)@@@@/K@@X:(@@@@L)     OR ONE ZERO O NEARESS TONIQUENH-TH UCP@@@AGK
)@@G@@)C [F@K0CS4EMA[#@-)^GS@@C8[)#0N.@@@#R@K@^9@^X@ U@@[@]F/,0@@@ @@@@P^@K@@+GL
)@@G@@N8K@]6CQ@@@A)CI@N]*)@@@@)]F@8@@@@@@@INCIPA TO PRHANGEDDURE C PROCE7H 30.GM
)@@G@@(4A6,48L@@CH'^)@@@CR@@@A)]M@S@)CK@<]&CS4@@)]P@K@ALITY COMMUN/K@@@=[@@@@TGN
)@@G@@C/@@@['^@@@@ )    ONENTSL COMPCS@@@A)]R@C@)CO@;]I-)K0CS^GS)@@@@@@@8];@CWGO
)@@G@@$'0@@ARA0@@T@^&@ U@@@@]P@@@@ M/,0@@@______CT@@@A)CV[F]+-)K^[@K^@K0@@@@@@GP
)@@G@@[@@@@>C/@@@[/K@@D)/K@@E-/K@@D)/K@@C+/K@@X+@^$@ U'^@@@@CU@@@A)C=[EK0]A@K0GQ
)@@G@@]A[#@@@@@@@@Q@)@ -R@)@ FC_)@@[G@@@ *H@@@@@[@@@ (G@@@@@G@)@@-C/)__"CV@@@AGR
)@@G@@)C![N#@@CS[#@CS@@@G@@@ *H@@@@@G@@@@=C@@@@@[#)@@=[@)@[^[[@@@^'L@@@G;[@@@MGS
)@@G@@C[@@ (CW@@@A)C7[EK0@-)K0CS[#@@@@@@@@H@@@@=C/@@@[[@)@ :[@@@ (G@)@ *H@)@@@GT
)@@G@@G/)@@[T@)@@=C@)@@@CX@@@A)D@[F#@-)K[#@-)[#@@@@@@@'K)@ (;@)@@MC@)@@@Q@0@ :GU
)@@G@@R@0@ FH/@__"/K@@DP(@@@@&]@@@@&CY@@@A)DD[M^G]A@@^G@@@@@G@@@@>C/@@@[[@<)@@GV
)@@G@@C@>@@@[@[)@@C@ @@@O[K@ >R[K@@>]@@@[ [@)@@[CZ@@@A)DN[F#@)CS^G@@-)@@@@@@@@GW
)@@G@@G@)@@>C/)@@[]@^)@@"^ @@@C@])@@O[K@ >R[K@@>8LK@DF[@@@@>DA@@@A)DW[F#@C]@CSGX
)@@G@@^D]A@@@@@@@@C/@__"@^;@ U/,0@@@[@@@@>C/@@@[/K@@F08L@@C2G_)@@[[@)@@>DB@@@AGY
)@@G@@)D>[F#@CS^G]A@K0]A@@@@@@G@@@@=C/@__"[#)@@=[@@@[^R[K@ ZR@0@ ZR@K@ -C_)@@[GZ
)@@G@@G@@@@-DC@@@A)D,[MK0]A@K0@-)K0@[@@@ (G[@@ *H[@@@@G.@@@[T[@@@=C[@@@@G@)@ *HA
)@@G@@H@)@@@G@)@@=C@)@@@DD@@@A)D8[F#@-)^[]%)CS^G@@@@@@"G)@@GC@)@ G@^_@ U@@@@D.HB
)@@G@@/,0@@@^^K@D.N8L@@@[[@@ ?[@)@ :DE@@@A)E[[E[#@CS^G]A[#@@@@@@@@Q[)@ ZR[)@ FHC
)@@G@@Q[@@ ?R[@@ F[@@@@]'K@@ :;@@@@MC@@@@@[@>@@@DF@@@A)EE[N#@-)K0@@@@@@@C/@@@[HD
)@@G@@[@=)@@C@+)@@[@]@@@"CB@@@"CA)@@C@#@@@O[0@ >R[0@@>N[K@ (DG@@@A)EO@;#@-)K@@HE
)@@G@@)]S@K@@@@@@@______ANAL 2G_)@@[O.K@@[O/0@@[O/K@@[8LK@EF[@@@@>G@@@@>DH@@@AHF
)@@G@@)EV[F@K=*S^[#@)]A[]K@@@@/,0@@@[@@@@>C/@@@[/K@@F0@ C@ U/K@@X:@@@@]S/,0@@@HG
)@@G@@8L@@D:DI@@@A)E=[N#@CS@K0]A[#@@R/)@@[R[0@ ZG@)@ *H@)@@@[@)@ (G@)@@@C/)@@[HH
)@@G@@G@@@@-C/@__"@ F@ UDJ@@@A)E,[N#@-)@^G@-)@@@H@@@@@G@@@@=C@@@@@A@)@@=[@@@[^HI
)@@G@@[[@@@A'L@@@I;[@@@MC[@@ (R[@@ ZDK@@@A)E8[F#@CS@K0CS^G]AG@@@@@N8M@@<[@)@ :HJ
)@@G@@[@@@ (G@)@ *H@)@@@G/)@@[T@)@@=C@)@@@G@@@ *DL@@@A)F[[F@K%*]A[#@@-)@@@@@@@HK
)@@G@@H@@@@=C/@@@[[@$@@@"G)@@GC@)@ G@ J@ U@@@@F#/,0@@@^^K@F#DM@@@A)FE[F#@-)K[#HL
)@@G@@@-)[#@@@@@@@'L@@ (;[@@@MC[@@@@Q@K@ :R@K@ FH/@__"/K@@F<(@@@@&]@@@@&DN@@@AHM
)@@G@@)FN[MK0CS[#@-)@@@@[@#@@@"CC@@@"C )@@C@^@@@O]@@ >R]@@@>]@@@[ Q[K@ ZR[K@ FHN
)@@G@@[[@@@#DO@@@A)FX[M[#@-)K^G@CS@@G@)@@>C/)@@[[@A)@@C@@@ G8LK@FR[@@@@>G@@@@>HO
)@@G@@C/@@@[[@-)@@C@<)@@DP@@@A)F$@<#@@@@@@)]U@K@)F:@N@K=)@@@/,0@@@8L@@E4______HP
)@@G@@ANAL 3O.@@@[O/)@@[O.0@@[[@)@@>DQ@@@A)F![F#@)CS^G]AGK1*S@@@@@*@@@@IH@)@@-HQ
)@@G@@C@)@@MC/@@@[[@@@@[C@@@@-@ X@ U/K@@X:@@@@]UDR@@@A)F6[M[#A@C]AG@@@@@C@@@@MHR
)@@G@@/)K@G[+@@@@I @@@@I1@@@@K*@@@@KD[@@@MC/)@@[ @@@@G1@@@@IDS@@@A)G@[F#A-)^GSHS
)@@G@@)CS1@@@@@@@@8];@GE$'0@@ARA0@@T/K@@GO(@@@@GH@@@#?C/@@@[ @@@@?[@@@@[DT@@@AHT
)@@G@@)GD[F]+-)K^[@K^[#A)@@@@@/K@@GO*@@@@M/K@@GK/K@@GK/K@@GM/K@@GO/K@@GK@ =@ UHU
)@@G@@'^@@@@DU@@@A)GM[F#@-)K0JEA[]O@@@@@@@@@@@@@@@@@@@@@@@@@/,0@@@[@@@@:C@CJ_"HV
)@@G@@R]@@@Z[@@@@?C@@@ GDV@@@A)GV[N#@CS^GUA@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HW
)@@G@@@@@@@?@@@@@[@@@@ N@@@@@@@@@@@-DW@@@A)G>[M^G@-<K0@-)@@@C.)@@[G[@@@-C.@__"HX
)@@G@@G@)@@@D@)@@-G@@@@[C/@__"@ %@ U@@@@@@@@@@@@DX@@@A)G\[M^G#2-)^@K0@@@Q@K@@MHY
)@@G@@R@K@ FC_)@@[/K@@X:*@@@@OH]@@@:C]CJ_"G[)@ $H[)@@@G[)@@@DY@@@A)G9[EK0CS^G@HZ
)@@G@@-)[#@@@@@@@@G@@@ $H@@@@@G/@@@[T@@@@$C@@@@@[#)@@$[[@@ :[@)@ ([@@@[^DZ@@@AIA
)@@G@@)H][F#@-)K0@-)K0C@@@@@@@*@@@@G8LK@H [@@@@?"@@@@?"C[)@@E@[@@@N[K@ : @@@@?IB
)@@G@@[@@@ ?EA@@@A)HF[MK^G]A[#@]@-)@'K@@@[C^@@ (8LK@HK[@#)@@D@#@@@N[K@ :Q@0@ ?IC
)@@G@@R@0@ F/K@@HN1@@@@GEB@@@A)HP@M@)]W@*@@@@@@@)HR@F@@@@@@@8L@@G/______N     ID
)@@G@@OSITIODECOMPEIGEN G_)@@[[@@@@[EC@@@A)HS[F]I-)K0CS^GUAG^@@@@@/K@@H!1@@@@GIE
)@@G@@*@@@@GH@@@@MC@@@@[@ _@ U@@@@]W@@@@ L/,0@@@ED@@@A)H-[F]]-)K0CO=G]A[#@CS0@IF
)@@G@@C8 )#0N.@@@#R[K@^9@A#@ U@@[@]-/,0@@@@A]@ U@@@@ M/,0@@@EE@@@A)H%@V]*)CO0@IG
)@@G@@)]-@0@@@@@@@EQUESTTORS RLL FAC NOT A9H 23.(4A6,4'^@@@@8L@@H('^)@@@EF@@@AIH
)@@G@@)]$@)@@@@@@@)H!@<#A)CS4GS@@@@@[@@@@MC@@@@[/K@@OH(@@@@PTED)  EXTRACLD BE II
)@@G@@ED COUEG@@@A)H1[F#AC]  #@)C]@)@@@@@@/K@@KL/K@@I3/K@@H;/K@@X+@AH@ U'^@@@@IJ
)@@G@@8];@H5$'0@@ARA0@@TEH@@@A)H'[F@K0CM^G@-)@@@@@@@@@H@)@@@G@)@@@C/)@@[G@@@@-IK
)@@G@@C/@__"@AJ@ U/,0@@@ @@@@%/K@@X+EI@@@A)I#[F#@CS4GSCS^G]A@@@@@@Q[@@ -R[@@ FIL
)@@G@@R@)@^9H.)@@[T[)@@@C[)@@MG[@@@MC.@__"G@)@ $EJ@@@A)IG[M@^G]A[#@-)K0@Q[0@ )IM
)@@G@@R[0@ F @@@@?][)@ ?[[@@ :[@@@[^[]@@@A'M@@@I;]@@@MC]@@@@EK@@@A)IQ[F#@@-)K0IN
)@@G@@C]AG@@@@@@@@E@@@@G"^]@@<8LK@IR[@@@@?"@@@@?"CB)@@"CA)@@C@A@@@N[K@ :EL@@@AIO
)@@G@@)IZ[F#A)]@CS^G]AH#@@@@@@C@)@ G[@])@<C@@@@?[@@@@%C/@@@[/K@@I>*@@@@G/C@@I<IP
)@@G@@"^@@@SEM@@@A)I*@:#@CS@@@)]:@K@)I!@F@@@@@@@8L@@IN______ANAL 4[[@@@A'L@@@AIQ
)@@G@@C @@ ?[@=)@@"^)@@?EN@@@A)I,[F]M-)K^G]@-)K0]AG@@@G@@@@MC/@__" @@@@! @@@@%IR
)@@G@@/K@@LE@AZ@ U/K@@X:@@@@]:/,0@@@EO@@@A)I7[MK0@CS^G]A@K0@[@@@ :[@)@[^Q]@@ -IS
)@@G@@R]@@ FG[@@ $H[@@@@G[@@@@C.@@@[G@)@@-C/)__"EP@@@A)J[[F#@-)K0]A[#@)CS^G@@@IT
)@@G@@R@0@ F @@@@?8L@@J#[@@@@!"@@@@!"GC)@@C@@@ G[[@@ ![@)@ ?EQ@@@A)JE[F#@-)^G]IU
)@@G@@A[@K=CS^G@@@C@@@@!@A,@ U/,0@@@8L@@JG[@@@@?"@@@@?C@#)@@N[@@ :Q@0@ )ER@@@AIV
)@@G@@)JN[N#@-)K1)]A[#@@C/@__" @@@@%[[@@@!"H@@@GC[@@@L"P@@@IC.@@]VH@)@@MC@)@@-IW
)@@G@@"^@@@?ES@@@A)JX[F#A-<[#@-)K0@@@@@@@@;[)@@MC[)@@@Q[K@ -R[K@ FR@K@^9H/)@@[IX
)@@G@@T@)@@@C@)@@MG@@@@MET@@@A)J&[F#@CS^G]A[#@-)K0CS@@N[K@ ?Q@)@ )R@)@ F @@@@?IY
)@@G@@]@)@ ![@@@ ?N[@@ ?[[)@@B'L)@ !EU@@@A)J\[E[#@-)^G]A[@@@@@@@@@8LK@J\[@)@@?IZ
)@@G@@"@)@@?"C)@@G"^)@ G"C)@@!C@+)@@"CB)@@C@B@@@EV@@@A)J8[N#@-)^G@CS4@K@/K@@K^JA
)@@G@@*@@@@G/C@@K]"^@@@SE@@@@G"^ @@@[@@@@?"G@@@IC@@@ G"@)@ GEW@@@A)K][EK0CS[#@JB
)@@G@@-<K0@@@@@@@@[@)@@B'K)@@BC^)@ !]@[)@<"^@@ G[@ )@@C@@@@?[@@@@%C/@@@[EX@@@AJC
)@@G@@)]!@K@)KF@;@K=*S^[#@)CS@ @@@@%/K@@LE@B[@ U/K@@X:@@@@]!/,0@@@8L@@J:______JD
)@@G@@ANAL 5EY@@@A)KM[N]K-)^G@]A@K1)G[@@@MC.@__"G@)@ $H@)@@@G@)@@@C/)@@[G@@@@-JE
)@@G@@C/@__"@B^@ U/,0@@@EZ@@@A)KW[N#A]A[#@-)@@@@[]@@@C'M@@@I;]@@@MC]@@@@Q[)@ -JF
)@@G@@R[)@ FR[@@^9H.)@@[T[)@@@C[)@@MFA@@@A)K&[EK0CS^G]A[#@-)@@@@@@"CC)@@C@C@@@JG
)@@G@@N[K@ ?Q@0@ )R@0@ F @@@@?][)@ ![[@@ ?[@@@[^FB@@@A)K\[EK0CS^[#A-)K1+AG@@@@JH
)@@G@@"^@@@SE@@@@G"^^@@<[@@@@?"C^@@<8LK@K![@@@@?"@@@@?"C#)@@FC@@@A)K8[F@^@K0CSJI
)@@G@@^GUA[#@@@@@@"^)@@?C@)@ G[@^)@<C@@@@?[@@@@%C/@@@[/K@@K.*@@@@G/C@@K;FD@@@AJJ
)@@G@@)L[@+K0@@@@@)]\@K@)L @N@K=)@@@/,0@@@8L@@K(______ANAL 6[[@@@C'L@@@CC @@ !JK
)@@G@@[@&)@@FE@@@A)LB[F#@)CS^GU@CS^G]AK@@@[@@@@BC@@@ O[@@@@,C/@@@[/K@@MJ(@@@@YJL
)@@G@@@BP@ U/K@@X:@@@@]\FF@@@A)LK[##@-=K0CT^G+AL#C-=@@@@@@@@[@@@@FC@@@[I[@)@@EJM
)@@G@@C@)@[I[@@@@DC@@@ Q[@)@@CC@)@ PFG@@@A)LS[F#C-=K2CT[#@CS@@@@@@*@@@@GH@@@@<JN
)@@G@@C/@@@D[@)@@\C/)@@[[@@@@HC@@@[I[@)@@GC@)@[IFH@@@A)L-[MK[#@CS@K@@@@@C/@@@^JO
)@@G@@/K@@L?1@@@@G*@@@@GH@@@@<C/@@[<[@@@@\C/@@@]/K@@L>1@@@@GFI@@@A)L:[##@-FK0CJP
)@@G@@T^G]A[#@-)@@@@@@@@@B>@ U@@@@ N@@@@@\@@@@@\@@@@@E@@@@@</,0@@@[@@@@\FJ@@@AJQ
)@@G@@)L3@:]C-)K0]A@@@@@)]1@S@@@@@@@TIMATEIVE ESITERAT@@@@ D@@@@@@@@@@ E@@@@@-JR
)@@G@@/,0@@@FK@@@A)]4@*@@@@@@@)L8@<#@- K1)@@@@@@@@@@@=/,0@@@@B&@ U______      JS
)@@G@@LITIESOMMUNAS OF CFL@@@A)L/[EK0CT^G+AL#C-)K0CS@@@@@@@-@@@@ E@@@@@L@@@@@4JT
)@@G@@@@@@@N@@@@@B@@@@@@@@@@]1@@@@@@FM@@@A)M [F#@-)^[]+-)K^[@@@@@@/K@@N</K@@NKJU
)@@G@@/K@@MJ@B*@ U'^@@@@8];@ME$'0@@ RA0@@,@B$@ UFN@@@A)MI[N@^G@CS[#A@@@@0@@@@IJV
)@@G@@*@@@@ID@+@@<C/@@@[A@)@@=[@@@[^R/)@@[G@@@@-C/@__"/K@@N6FO@@@A)MS[M^G]AG@KJW
)@@G@@^GS@@@RA0@@T/=K@NG)@@@@I @@@@I1@@@@K*@@@@K" ]@@<C[@@ GC/)@@[ @@@@GFP@@@AJX
)@@G@@)M+[EK^EEA[@K^[@K@@@@@@@/K@@X+/K@@M1/K@@M:/K@@M6/K@@X+@B,@ U'^@@@@8];@M>JY
)@@G@@$'0@@AFQ@@@A)M:[F#@-<K[@K^GUA[@@@@@@/C@@M6"^@@ JC@]@@</K@@M6/K@@NG*@@@@GJZ
)@@G@@/C@@M0"^]@@<C@@@ IFR@@@A)M4[MK[@K0C]A[#A@@1@@@@G*@@@@GH@@@@PC@@@@</K@@NZKA
)@@G@@(@@@@%8L@@MNO/)@@[/K@@NG*@@@@GFS@@@A)M"[F@^G]A[#AC]  #@@@@@@@B;@ U'^@@@@KB
)@@G@@8];@NA$'0@@ARA0@@T[@@@@<G@@@@<C/@@@[/K@@N2FT@@@A)NB[F@K^[@K[#@-<K@@@@@@@KC
)@@G@@/K@@LI(@@@@Y[@@@@,C/@@@]/K@@X+/K@@E-/K@@D)/K@@C+/K@@X+FU@@@A)NK[F]=-)K0CKD
)@@G@@S[#A-OK^G@@@C8@@@=8L@@NP'^)@@@C8[)#0N.@@@#R@K@^9@B_@ U@@[@][/,0@@@FV@@@AKE
)@@G@@)NT[F]*-NK)*S^G]@CS^GS@@(@@@@Y[@@@@,C/@@@#/K@@O]@CA@ U@@@@ L/,0@@@'^@@@@KF
)@@G@@'^K@@@FW@@@A)N+[F@K(CS^G]A@K1*P^@@@@8L@@N*'^)@@@C8 )#0N.@@@#R[K@^9@CF@ UKG
)@@G@@@@[@]9/,0@@@/K@@LIFX@@@A)N:@;#A-OK(*KOG]A[@@@@@@)]9@C@(4A6,4/K@@O]@CM@ UKH
)@@G@@@@@@ L/,0@@@'^@@@@'^)@@@C8@@@SFY@@@A)]'[@@@@@@@@)N2@E@@@@@@@C/@@@^,F8.5)KI
)@@G@@TERIONTH CRIVED WI ACHIERGENCE CONVE0H 24.FZ@@@A)N3[F#@-<K^EMA[#@-)^GS@@KJ
)@@G@@C8B)#0N.@@@#R[0@^9@CS@ U@@[@#]/,0@@@/K@@LI(@@@@Y[@@@@,GA@@@A)N/@3]*)CO4CKK
)@@G@@EA[#@@)#]@S@ BOUND3H 25.(4A6,4@CY@ U@@@@ L/,0@@@'^@@@@8L@@N;'^)@@@GB@@@AKL
)@@G@@)# @0@@@@@@@)O]@V]=-)K0@@C)@ U@@[@#F/,0@@@VED)   ACHIEATIONSF ITERMBER OKM
)@@G@@ ON NUGC@@@A)O [##@CS4E+@-)K%CO0@@@@@@@@@@'^@@@@'^K@@@C8@@@<8L@@OB'^)@@@KN
)@@G@@C8#)#0N.@@@#R@0@^9GD@@@A)#F[K@@@@@@@@@@@@@ONS)  TERATI,11H ITER,I4TED AFKO
)@@G@@ERMINATION T ITERA1H 26.(4A6,3GE@@@A)OH[N#@/*S^D)@@@@@@@@@@@@@@@@@@@@@@@KP
)@@G@@@@@@@@@@@@@@@@@@@@/,0@@@[@@@@:C@^J_"R[@@@ZGF@@@A)OR[M@@^G#2@@@@@@@C@^J_"KQ
)@@G@@@C%@ U@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GG@@@A)O-@N#@@@@@@KR
)@@G@@)#P@*@@@@@@@@@@@*@@@@@@@______T      OUTPUON ANDROTATI*@@@@GH@@@@:GH@@@AKS
)@@G@@)O<[F@K<*S^G]A@K1+A@@@@@G@)@@-C/)__"G@@@@OC/@__"@C!@ U@@@@#P@@@@ L/,0@@@KT
)@@G@@/K@@X:GI@@@A)O?[N#A@]A@K3@@@@@ @@@@O*@@@@#C"@@@[G[)@ *H[)@@@G[)@@@C.)@@[KU
)@@G@@H.@@@[T[@@@@C[@@@OGJ@@@A)O6[M^GS]@-)@@@@@@;]@@@MC]@@@@R[)@ +/&K@PP)]@@@QKV
)@@G@@ @@@@Q*@@@@SH#@@#?C_@@@]C")@@[GK@@@A)P@[M[#@-)^G]A[#@@C@+@@@O@)@ &R@)@@&KW
)@@G@@[@@@@&C@A@@@][@@ ![@@@ ?[@)@[^[]@@@C'M@@@MGL@@@A)PE[N#@-)^G@)]A@@@[@)@@CKX
)@@G@@'K)@@CC^)@ !O.)@@[8LK@PG[@C)@@"C@@@0C@C@@@N[K@ ?[@)@@0GM@@@A)PO[N@^G0CS0KY
)@@G@@^H@@@@*@@@@@C/)@@[+@@@@I @@@@I*@@@@)C/)@@[ @@@@G*@@@@@C/@@@[8L@@P GN@@@AKZ
)@@G@@)PY@2^[#@-<K0@@@@@)#U@K@@@@@@@______WRITE [@@@@1T@@@@OC@@@@-/=0@RL+@)@@HLA
)@@G@@ @@@@IGO@@@A)P=[F#@-HK0CS[#@)CS^G@@@R[K@^9@C_@ U/K@@X+@@@@@1@@@@@@@@@@@XLB
)@@G@@@@@@#U/,0@@@R@K@@ZGP@@@A)P![MK2JS^[]W@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LC
)@@G@@/,0@@@8L@@P,[@ \_"C@ @@AN.@@@AGQ@@@A)P7[M@[#@/*S@@@@@@*@@@@GH@@@@:C@[J_"LD
)@@G@@@D @ U@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GR@@@A)Q[[N@^H@CS0K^D8@@/,0@@@LE
)@@G@@/=K@R[+@@@@I @@@@I*@@@@)C/)@@[ @@@@G*@@@@@C/@@@[/K@@X:GS@@@A)QF[U@@^H@@@LF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GT@@@ALG
)@@G@@)QQ[MK0JEA@K[#A-)@C/)@@^[@K@@2+@@@@)C/@@@]/K@@X:*@@@@GH@@@@:C@[J_"@DE@ ULH
)@@G@@@@@@@@GU@@@A)Q)[N#A-)^G@CS@K@@/>K@R[)[@@@M @@@@M*@@@@2C.)@@[ @@@@K*@@@@3LI
)@@G@@C.@@@[[@0@@3+@)@@)GV@@@A)Q%[N#ACS[#A-J@@@@@@@@@@@@@@@@@@@@@@@@@@@@/,0@@@LJ
)@@G@@[[@@@);[@@@+[[@@@4;L@@@]C[@@@)GW@@@A)Q4[M@K0@CSB=@@@@@C@[J_"@DN@ U@@@@@@LK
)@@G@@@@@@@@@@@@@@@@@@ D@@@@@@@@@@@@@@@@@@@@@@@@GX@@@A)Q"@V#@C@@@@)#W@)@@@@@@@LL
)@@G@@@@@@)@@@@@@@______S      SCOREFACTOR/K@@X:*@@@@GH@@@@:GY@@@A)R[@V]I-)K0@LM
)@@G@@)#)@K@)R^@V#@-HK0@@@@@#)/,0@@@@DQ@ U______READ  @@@@#W@@@@ H/,0@@@GZ@@@ALN
)@@G@@)RB[F#@CS^[#@-)B?]AK@@@@[@B)@AC@BJ_"N.@@@AR[0@^9@DR@ U/K@@X+@@@@@1@@@@@@LO
)@@G@@@@@@@XHA@@@A)RK[N@^G0CS0K@@@@@C/@__"/=K@V8+@@@@I @@@@I*@@@@ C/)@@[ @@@@GLP
)@@G@@*@@@@[C/@@@[8L@@RIHB@@@A)RU[N#ACS^GSCS0@@@C"@@@[H.)@@[T[)@@@C[)@@OH.@@@[LQ
)@@G@@T[@@@@C[@@@OG@)@@-C/)__"G@@@@OHC@@@A)R=[M^G@]A@@@@@@@@'N@@@O;#@@@MC#@@@@LR
)@@G@@G])@ $H])@@@G])@@@C")@@[G]@@ *H]@@@@G]@@@@HD@@@A)R,[M@[#@-)K0CS@@@][)@ ,LS
)@@G@@][@@ :[@)@ ![@@@ ?[@)@[^[]@@@^'M@@@Q;]@@@MC]@@@@[#@@@#HE@@@A)R8[N#@-)[@KLT
)@@G@@0@-)@@'K)@@^C^)@ :[@)@@#'K)@@#C^)@ ,8LK@R'[@^)@@C@#)@@N[K@ ?[])@ \HF@@@ALU
)@@G@@)S][EK[#@-CK0CS0@@@@@@@@C/)__"T@@@@@C@@@@O@D%@ U/,0@@@[@)@@>C/)@@[8L@@R9LV
)@@G@@[@)@@^HG@@@A)SF[F#A-)[#@-)K0CS@@@@@@C/@__"[#)@@5[@)@ :]@@@ !N[@@ !C_)@@[LW
)@@G@@H/@@@[[@@@ ?G@)@@OHH@@@A)SO[F#@CS[#@-)K0@@@@@@@@;@@@@MC@@@@@[@)@ 0[@@@ ,LX
)@@G@@G@)@ $H@)@@@G@)@@5C@)@@@G@@@@5HI@@@A)SX[F#@@-)^G]A[#@@@@@@@@G@@@@>C@@@ *LY
)@@G@@N[K@ ,[@@@@A'K@@ 0;@@@@MC@@@@@[@@@@]'K@@ \HJ@@@A)S&[F#@-)K0@-)K0C]A@@@@@LZ
)@@G@@R]@@ 18L)@S([@@@@?"@@@@?"C])@@C@A)@@N[)@ : @@@@?[@@@ 1HK@@@A)S\[M^G]A[#@MA
)@@G@@]A@@@@][@@@A'P@@@AC @@ ?[[@@@]'L@@@]C @@ ![@)@@>G@)@@>C/)@@[[@C@@@HL@@@AMB
)@@G@@)S9@N@@@@@@@)#+@K@)S;@<@K=*S^@/K@@X:@@@@#+/,0@@@8L@@SM______ANAL 7G_)@@[MC
)@@G@@8LK@S=HM@@@A)S_[F#@-&K[#AC]^D#@@@@@@@@@@@-/,0@@@/K@@TT(@@@@GH@@@#?C/@@@]MD
)@@G@@/K@@T:(@@@@[@D;@ UHN@@@A)TC@N#@-)@@@)#=@8@@@@@@@IX FORE MATRARIANCD  COVME
)@@G@@U C E R O D R E P @@@@ D@@@@ CHO@@@A)#:@C@)TE[##@-#@K0CT^G)@@@@@@@@@@@@BMF
)@@G@@@@@@#=@@@@@@@@@@@@@@@@@@/,0@@@@E@@ U______HP@@@A)TM[F#E->K2*S^G]A[@K-CS@MG
)@@G@@@@@@@-/,0@@@/K@@T:@E[@ U@@@@@-@@@@ C@@@@@F@@@@@ @@@@@@HQ@@@A)TV@N#@-)@@@MH
)@@G@@)#?@8@@@@@@@IX FORN MATRELATIOD CORRU C E R O D R E P @@@@ D@@@@ EHR@@@AMI
)@@G@@)#3@C@)TX[##@-#@K0CT^G)@@@@@@@@@@@@B@@@@#?@@@@@@@@@@@@@@@@@@/,0@@@@E^@ UMJ
)@@G@@______HS@@@A)T>[F#C-=K2CS^G]A[#A)@@@C/@@@[/K@@VJ(@@@@ @E @ U@@@@@-@@@@ EMK
)@@G@@@@@@@4@@@@@"@@@@@IHT@@@A)T,[F#@-)^G]A[#@-)@@@@@@C@[@@@]@@@[^Q@K@ <R@K@ FML
)@@G@@Q[K@ =R[K@ FH/@__"]@@@@>H@@@@>HU@@@A)T7[M^@K1+@-]K0CS@@@@@ C@@@@@-/,0@@@MM
)@@G@@/K@@UL(@@@@IH@)@#?C/)@@]8L@@T6]@[)@@"^ )@@HV@@@A)U[@F#@@@@@@)#4[@@@@@@@@MN
)@@G@@______FOR   ATRIX ANCE MCOVARIA L   I D U R E S @@@@ MHW@@@A)U][F#@-#@K0MO
)@@G@@CT^G+AO@@@@@@@@@@@@@@@@@@@@@@B@@@@#4@@@@@@@@@@@@@@@@@@/,0@@@@EK@ UHX@@@AMP
)@@G@@)UF[F#E->K0CS^G]@-]K0CS@@@@@ E@@@@@-/,0@@@/K@@U<@EL@ U@@@@@-@@@@ C@@@@@FMQ
)@@G@@@@@@@ HY@@@A)UO@F#@@@@@@)#/[@@@@@@@@______FOR   ATRIX ANCE MCOVARIA L   MR
)@@G@@I D U R E S @@@@ MHZ@@@A)UP[F#@-#@K0CT^G+AK@@@@@@@@@@I@@@@@@@@@@@B@@@@#/MS
)@@G@@@@@@@@@@@@@@@@@@@@/,0@@@@EO@ UIA@@@A)UY[F#C-=K0CS^G]A@K0CM@@/,0@@@[@@@@>MT
)@@G@@C/@@@] @@@@?@EP@ U@@@@@-@@@@ E@@@@@4@@@@@"IB@@@A)U$[N#@CS@K0]A[#@@H/@__"MU
)@@G@@]@@@@&H@@@@=C/@@@[[#)@@=[@@@[^C_)@@]G@@@@-C/@__.@ET@ UIC@@@A)U1[EK0CS@K0MV
)@@G@@CS[#@@@@@@@@G@)@@>C/)@@[[@@@@?"@@@@?"CB@@@C@B@@@O[0@ *R[0@@>]@@@[ ID@@@AMW
)@@G@@)U'@:#@)]A@@)^^@K@)U_@F@@@@@@@8L@@U?______ANAL 8G_)@@[[@)@@>G/)@@[8LK@U2MX
)@@G@@[@)@@>IE@@@A)V@[F]M-)K^G@-)K0]A@@@@@]@@@@>;K@@@[T@@@@-H@@@@-C/@@@[@E&@ UMY
)@@G@@/K@@X:@@@@^^/,0@@@IF@@@A)VD@3]=-)K0CS^G] G)^A@S@SQUAREUM OF (19H0S'^@@@@MZ
)@@G@@@@)@@?@@K@@>@E*@ U@@[@^A/,0@@@IG@@@A)^D[S@@@@@@@E MATRARIANCAL COVRESIDUNA
)@@G@@F THE ENTS OL ELEMIAGONA OFF-DI5,58HS OF ,IH@@@A)^O@K@)VJ@'K0]AH#A@@@@@@NB
)@@G@@H.@@@[T[@@@@C[@@@OG@)@@OC/)__"G@@@@-C/@__"11.5) IX  ,GII@@@A)VQ[N#A@]A@@NC
)@@G@@@@@@@@H])@@@G])@@@C")@@[G]@@ $H]@@@@G]@@@@C"@@@[H.)@@[T[)@@@C[)@@OIJ@@@AND
)@@G@@)V)[N#@@@@@@@@@@@@[@@@[^[]@@@^'M@@@Q;]@@@MC]@@@@[#@@@#'N@@@O;#@@@MC#@@@@NE
)@@G@@G])@ *IK@@@A)V%[F#@-)K0CS@K^G@@@@@@@'K)@@#C^)@ !8LK@V,[@^)@@C@#)@@N[K@ \NF
)@@G@@][)@ !][@@ ?[@)@ \IL@@@A)V3[MK0@)]A@K1*S0@C[@@@OG@)@@OC/)__"G@@@@-C/@__"NG
)@@G@@8L@@V![@)@@^'K)@@^C^)@ ?[@)@@#IM@@@A)V.[M@^G@-&@@@@@@@C")@@[ @@@@O*@@@@#NH
)@@G@@C"@@@[G[)@ *H[)@@@G[)@@@C.)@@[H.@@@[T[@@@@IN@@@A)WB[MK1)C]A@@@@@@@'M@@@MNI
)@@G@@;]@@@MC]@@@@R]@@ +/&K@W>)]@@@Q @@@@Q*@@@@SH#@@#?C_@@@]IO@@@A)WL[E^G]A@K0NJ
)@@G@@CS^G@@@@@@@@C@&@@@O[)@ &R[)@@&[@@@@&C@C@@@][@@ ?[@)@ \[@@@[^[]@@@]IP@@@ANK
)@@G@@)WU[N#@-)^G@)CS@@@O"@@@[[@)@@]'K)@@]C^)@ ?8LK@WW[@])@@"G@@@0C@]@@@N[K@ \NL
)@@G@@[@)@@0IQ@@@A)W=[N@K0CT1#G@-<@@*@@@@MH[)@#?C.)@@]C.@@@[ @@@@I(@@@@#C/)@@[NM
)@@G@@[@@@@BC@@@ R8L@@WPIR@@@A)W,[M^[#ICS[#A-<@@T[@@@@C[@@@OG@)@@OC/)__"G@@@@-NN
)@@G@@C/@__" @@@@B/=0@XN)@)@@K @@@@KIS@@@A)W8[M@K0@@@@@@@@@@[@@@[^[]@@@['M@@@MNO
)@@G@@;]@@@MC]@@@@G[)@ *H[)@@@G[)@@@C.)@@[H.@@@[IT@@@A)X][F#@-)K0]AX#I)CS@@@@@NP
)@@G@@'K)@@[C^)@ ?8LK@X [@@@@B"@@@@BE@[)@@N[K@ \][@@ ?[@)@ \IU@@@A)XF[MK^G]AG[NQ
)@@G@@#I-K@@@@@@@@/,0@@@[@@@@B"G@@@L"P@@@IC.@@]VT@)@@OC@)@@-8L@@X^[@)@@[IV@@@ANR
)@@G@@)XP[MK0CS0@K2CS@@@@FP@ U@@@@@B@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O@@@@@-NS
)@@G@@@@@@@@IW@@@A)XZ@V@K^G@@@)^Q@*@@@@@@@@@@@@@LTANT) CONSU SEE A1H 99.(4A6,2NT
)@@G@@@FR@ U/K@@X7N@0@X-IX@@@A)X+[F]=-)K0CS[#A-OK^ES@@'^@@@@8L@@X$'^)@@@C8 )#?NU
)@@G@@N.@@@#R[K@^9@FT@ U@@[@^Q/,0@@@IY@@@A)X:[F]=-)K0CS[#A-OK^ES@@'^@@@@8L@@X0NV
)@@G@@'^)@@@C8B)#0N.@@@#R[0@^9@FZ@ U@@[@^V/,0@@@IZ@@@A)X4[F@K^G]A[#@-)K0CS^G@@NW
)@@G@@9\)@ '9\@@ 89,)@ 69,@@ 49!)@ 2R]0@ V@F>@ U/K@@X7N@0@X6JA@@@A)X.[##@-)K0CNX
)@@G@@S^G]A[#@-)@@@@@@@@R]@@A#R[0@A]R[)@A[R[K@A@R[@@ _R@0@ "R@)@ .R@K@ /JB@@@ANY
)@@G@@)Y @<#@-)K0CS@@@@@) S@C@)YD@N#@-Q@@@/K@@@@/K@K S@@F@@T*4@K SN[)@AAN[K@A NZ
)@@G@@N[@@A^JC@@@A) U@K@)YF@3#@-)K0CS^G]A@@@@@@@9:)@ '9:@@ 89%)@ 69%@@ 49()@ 2OA
)@@G@@AA0@ V@F>@@]S63AMDJD@@@A)YL[##@-)K0CS^G]A[#@-)@@@@@@@@A]@@A#A[0@A]A[)@A[OB
)@@G@@A[K@A@A[@@ _A@0@ "A@)@ .A@K@ /JE@@@A)YT[F#@-)K0]@)C]@)@@@@@@[^@@VZ[^@@Q7OC
)@@G@@[^@@C*[^@@C3[^@@C5C8FK@@^[)@AA^[K@A ^[@@A^JF@@@A)Y+[F@K^[@K^[@K^@@@@@@@@OD
)@@G@@[^@@W@[^@@W[[^@@WI[^@@W7[^@@W'[^@@W;[^@@W.[^@@]'[^@@VYJG@@@A)Y:[F@K^[@K^OE
)@@G@@[@K^@@@@@@@@[^@@VO[^@@^,[^@@R-[^@@R=[^@@]/[^@@]_[^@@#@[^@@V>[^@@V.JH@@@AOF
)@@G@@)Y4[F@K^[@K^[@K^@@@@@@@@[^@@R>[^@@D2[^@@D5[^@@#E[^@@#G[^@@#I[^@@#L[^@@P'OG
)@@G@@[^@@O0JI@@@A)Y.[F@K^[@K^[@K^@@@@@@@@[^@@E*[^@@OX[^@@E5[^@@O![^@@E%[^@@O1OH
)@@G@@[^@@O"[^@@E9[^@@BAJJ@@@A)ZA[F@K^[@K^[@K^@@@@@@@@[^@@@N[^@@C7[^@@C'[^@@#XOI
)@@G@@[^@@^J[^@@BE[^@@DA[^@@D,[^@@R:JK@@@A)ZJ[N@K^[@K^[@^[@@[^@@V-[^@@VUC8FK@[OJ
)@@G@@[^@@FK[^@@E/[^@@D0[^@@E7[^@@C&[^@@E][^@@QMJL@@@A)ZT[F@K^[@K^[@K^@@@@@@@@OK
)@@G@@[^@@H@[^@@J=[^@@I][^@@IB[^@@KX[^@@I'[^@@I;[^@@I[[^@@P;JM@@@A)Z+[F@K^[@K^OL
)@@G@@[@K^@@@@@@@@[^@@RY[^@@SV[^@@SP[^@@GW[^@@SD[^@@K+[^@@VR[^@@G0[^@@G.JN@@@AOM
)@@G@@)Z:[F@K^[@K^[@K^@@@@@@@@[^@@IG[^@@R\[^@@OY[^@@SR[^@@KR[^@@KS[^@@R*[^@@R(ON
)@@G@@[^@@VVJO@@@A)Z4[N@K^[@^[#@)C@@C8FK@#[^@@P4[^@@GU[@@@ )[^@@OOC8FK@][^@@G\OO
)@@G@@[^@@SZ[^@@G:[^@@JZJP@@@A)Z"[F#@)C]@)C]@)C@@@@@@@[^@@QF[^@@Q0[^@@U^[^@@P*OP
)@@G@@[^@@OL[^@@UR[^@@ =[^@@GS[@@@ <JQ@@@A))B[N@K^[@K[@K^[@@[^@@XP[^@@OM[^@@GTOQ
)@@G@@[^@@P3C8FK@^[^@@P2[^@@XO[^@@TG[^@@RC[^@@TZJR@@@A))L[MK^[#@C]@-)K@@C8FK@BOR
)@@G@@[^@@]%[@@@ =[^@@]R[^@@ONC8FK@A[@@@ Z[^@@OQ[^@@P5C8FK@ JS@@@A))V[N@^G]@)COS
)@@G@@@)CS^@[^@@AC[@@@ -[^@@OSC8FK@D[^@@OR[^@@G-[^@@ >[@@@ XC8FK@C[^@@G)JT@@@AOT
)@@G@@))>[MK[@K[@K^G]@@@[^@@Q3[@@@ Y[^@@XV[^@@OTC8FK@G[^@@G<[^@@XUC8FK@F[^@@G+OU
)@@G@@C8FK@EJU@@@A))\[N@K^[@^[@K^[@@[^@@Q4[^@@G>[^@@OU[^@@XW[^@@QJC8FK@H[^@@BXOV
)@@G@@[^@@G=[^@@P6[^@@QIJV@@@A))9[MK^[@K^[@K^[@@[^@@AE[^@@BZ[^@@XS[^@@^;[^@@QKOW
)@@G@@[^@@]?[^@@UA[^@@OV[^@@UTC8FK@IJW@@@A)-#[N@K^[@K^[#@)]@[^@@P/C8FK@J[^@@TIOX
)@@G@@[@@@ +[^@@L/[^@@Q5[^@@ E[^@@]T[^@@T-[^@@P7JX@@@A)-H[N@K[@K^[@^[@@@[^@@Q6OY
)@@G@@[^@@^DC8FK@L[^@@QH[^@@Q2[^@@OW[^@@P8C8FK@K[^@@QG[^@@Q1JY@@@A)-R[F@K^[@K^OZ
)@@G@@[@K^@@@@@@@@[^@@L;[^@@A^[^@@L6[^@@]:[^@@^'[^@@US[^@@U [^@@BT[^@@ADJZ@@@APA
)@@G@@)-)[N@K^[@K^[@K^@@C8FK@M[^@@XT[^@@TH[^@@BY[^@@T)[^@@QL[^@@ D[^@@OP[^@@P9PB
)@@G@@[^@@]SKA@@@A)-%[N@K[@K[@K[@@@@[^@@ *C8FK@P[^@@QQ[^@@Q;C8FK@O[^@@Q'[^@@QPPC
)@@G@@C8FK@N[^@@Q9[^@@QOKB@@@A)-4@+K[@@@@@)^V@*@@@@@@@RMINATSIS TE ANALY1H 27.PD
)@@G@@(4A6,5[^@@G&C8FK@R[^@@[3C8FK@QKC@@@A)^)@*@@@@@@@)-8@F@@@@@@@)^>@K@PRINCIPE
)@@G@@@@@@[=/K@@@@RRORS)IOUS EF PREVAUSE OED BECKD@@@A)^$[S@@@@@@@ESCALINESS RPF
)@@G@@UNIQUERE    ROCEDUCTOR PPAL FACEDURETS PROMPONENPAL COKE@@@A)^2[S@@@@@@@PG
)@@G@@ARIANCON COVBASED @@[@@[IMAGE E     OCEDURING PRFACTORALPHA NG PROKF@@@APH
)@@G@@)^.[S@@@@@@@IMATESED ESTUNBIASATES   ESTIMLIHOODM LIKEMAXIMU@@[@@^IX    PI
)@@G@@E MATRKG@@@A) C[S@@@@@@@@@@@@]@@@@@^@@@@@EI4ADH5KB_\$V@@@@@#KG@@@@@@[@@@PJ
)@@G@@@@@@@G@@@@@@@@@@@DKH@@@A) N@*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@PK
)@@G@@J/3G3HMBER  ION NUITERAT@@@@@[KI@@@A@@@@@@)YF@3#@-)K0CS^G]A@@@@@@@9:)@ 'PL
)@@G@@9:@@ 89%)@ 69%@@ 49()@ 2AA0@ V@F>@@]S63AMDJD@@@A@@^@@D@@H@@R@@;@@[@@_@@BPM
)@@G@@@@ @AB@C@@-9@@@@@]@@@@#5@@@@[J@@@@@L@@@@@A@@@@@C@@@@@ S1GTAG      S1HEDCPN
)@@G@@      S1HED2      S1PLTM      S1HED4      S1PRVC      S1INV       S1TIMTPO
)@@G@@      S1VFWC      S1VFWT      S1EIG       S1ENCI      S6OUT       S1VCSRPP
)@@G@@      S6COEF      S63SCR      S6RANK      NERR2$      NPRT$       NIO2$ PQ
)@@G@@      NIO1$       SQRT        NERR3$      S63AMD      @@[@@@@@@@YFBLANK$PR
)@@G@@      ^@@@C@@]@@@@S6BLK       ]@@@C@@#@@@@S6FMTS      ]@@@C@@^@@@@S63FMTPS
)@@G@@      ]@@@C@@ @@@@S63NBK      ]@@@C@@A@@@@S63SBH      ]@@@C@@B@@@@S63BSVPT
)@@G@@      ]@@@C@@C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@PU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@PV
)@@G@@)@ @K@)@@@;]]A^GCSK0)CS@@[ @@*/K@@@B@@@@@]@@@@@[@@@@@@@@@@@ /,0@@@______PW
)@@G@@SYSERRAA@@@A)@B[N##2JC-)K0C@@@/@@@@OC@[@@@[#)@@#N.@@@IR@K@@:C_)@@[[@[J_"PX
)@@G@@G/@@@[C@[J_"R@K@@@AB@@@A)@L[M^@K0--]MA^G@@C.)__"@[L@@*@@[@@B/,0@@@]@@@@#PY
)@@G@@H@@@@#C/@@@[8L@@@IG_)@@[O/K@@[AC@@@A)@V@;#]A^G@-H@@@@@)@B@K@*****S(030H PZ
)@@G@@8L@@@Z'^K@@@C8[)@@[[)@[^Q@K@@:R@K@@<G[)@@#AD@@@A)@D@*@@@@@@@)@+@V]+^=G@@QA
)@@G@@@@@@@@@@[@@I/,0@@@'^@@@@15A6) R IN ,M ERRO SYSTETATJOBAE@@@A)@>@F#@@@@@@QB
)@@G@@)@I[@@@@@@@@UTPUT WITH OLTANT  CONSU SEE APLEASE***** (052H @[S@@*AF@@@AQC
)@@G@@)@Q[S@@@@@@@GES MA MESSAONEOUSG: ERRWARNIN *****./045HT DECK1HINPUUR ,01QD
)@@G@@AND YOAG@@@A)@-@K@)@&@;]+^OGCS^GC@@@N@0@@,@[V@@*@@@@@@@@@@@>@@@@@=/,0@@@QE
)@@G@@'^@@@@OW.)  Y FOLLAH@@@A)@![#@K0--#]A^GCSK0@@@@@@@@@@@*4@K@&N[@@@1R@K@@0QF
)@@G@@9\)@@,9!)@@?R]0@@(@[W@@*/K@@@\AI@@@A)@&@C@)@5@N#] K@@@)@*@K@)@7@N#]A@@@@QG
)@@G@@9()@@?AA0@@(@[W@@#S1SERR/K@@@@/K@K@&@@F@@]AJ@@@A)@9@;#]A^G]@--@@@@)@<@K@QH
)@@G@@@@@@@]@@[@@@/K@@@@[@@@@:[^@@@%C8FK@@^[@@@1A@K@@09:)@@,AK@@@A)@>@C@@@@@@@QI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@_AL@@@AQJ
)@@G@@@@^@@#@@B@@A@@N@@[@@R@@[@@#@@2@C@@[@@@@@@[S1GTAG      S1LOGP      NPRT$ QK
)@@G@@      NIO1$       NIO2$       NERR3$      S1SERR      @@[@@@@@@@@7BLANK$QL
)@@G@@      ^@@@C@@]@@@@@@@@@@*[@@@@*SDFF*@ @@@@      SUBROUTINE S1AUSP( SIG) QM
)@@G@@@]@@@@C     SJM   @D@@@@C     TITLE     -PRINT OUTPUT MEDIUM MESSAGES(S1QN
)@@G@@AUSP) @B@@@@C     AUTHOR    -ROGER VOYTECKI,NOV.1970  @B@@@@C     PROGRAQO
)@@G@@MMER-ROGER VOYTECKI,NOV.1970  @[@@@@C     @#@@@@C 1.0 PURPOSE     @G@@@@QP
)@@G@@C     S1AUSP PRINTS MESSAGES DESCRIBING MEDIUM-DEPENDENT ASPECTS OF     QQ
)@@G@@@A@@@@C     OUTPUT PERFORMED BY S1AUS.    @[@@@@C     @^@@@@C 2.0 CALLINQR
)@@G@@G SEQUENCE  @G@@@@C     S1AUSP IS CALLED WITH ONE PARAMETER WITH ONE OF QS
)@@G@@TWO VALUES---     @^@@@@C     A) CALLS1AUSP(K)  @#@@@@C        WHERE    QT
)@@G@@@C@@@@C        K  HAS THE INTEGER VALUE 1 OR 'BEGIN'  @B@@@@C        THIQU
)@@G@@S CALL PRODUCES TWO LINES.    @^@@@@C        1) (BLANK)     @G@@@@C     QV
)@@G@@   2)-----------------BEGIN CONTROL WORD OUTPUT TO MEDIUM---------@F@@@@QW
)@@G@@C     B) CALL S1AUSP(K) WHERE K HAS THE INTEGER VALUE 2 OR 'END'  @A@@@@QX
)@@G@@C        THIS CALL PRODUCES 5 LINES @^@@@@C        1) (BLANK)     @G@@@@QY
)@@G@@C        2)--------------------END CONTROL WORD OUTPUT------------------QZ
)@@G@@@G@@@@C        3)TOTAL OF N CARDS(OR CARD IMAGES) HAVE BEEN PUNCHED(OR WRA
)@@G@@RITTEN@^@@@@C          SOMEWHERE)   @ @@@@C        4)MEDIUM DEPENDENT   RB
)@@G@@@#@@@@C        5)MESSAGE@[@@@@C     @ @@@@C 3.0 NOTES/RELATIONSHIPS     RC
)@@G@@@B@@@@C     REFERENCES TO TAGGED STORAGE-NONE.  @ @@@@C     ROUTINES CALRD
)@@G@@LED-NONE.   @G@@@@C     THE CALL S1AUSP('BEGIN') MAY BE MADE ANYTIME AFTRE
)@@G@@ER THE CALL TO    @C@@@@C     S1AUSI,AN ENTRY POINT IN ELEMENT S1AUS.   RF
)@@G@@@F@@@@C     THE CALL S1AUSP('END') MAY BE MADE ANYTIME AFTER THE CALL TORG
)@@G@@@C@@@@C     S1AUST,AN ENTRY POINT IN ELEMENT S1AUS.   @[@@@@C     @]@@@@RH
)@@G@@C     ENDSJM@ @@@@      IMPLICIT INTEGER( A-Z)  @G@@@@      COMMON / AUSRI
)@@G@@PBK / FNAM(2), CW(2), MODEL, DEVICE, ERRFLG, STATUS,  @G@@@@     2      RJ
)@@G@@                                                     NCARDS @^@@@@      RK
)@@G@@DATA MODEL/'USER'/@[@@@@C     @B@@@@C        S1AUSP--PRINT MESSAGES FOR RL
)@@G@@S1AUS @F@@@@C          SIG=1 OR 'BEGIN', PRINTS ----BEGIN OUTPUT---- MESRM
)@@G@@SAGE. @E@@@@C            MAY BE CALLED ANY TIME AFTER S1AUSI IS CALLED  RN
)@@G@@@E@@@@C          SIG=2 OR 'END', PRINTS ----END OUTPUT--- MESSAGE @G@@@@RO
)@@G@@C            MAY BE CALLED ANY TIME AFTER CALL TO S1AUST (AND AFTER     RP
)@@G@@@B@@@@C              CALL TO S1AUSP('BEGIN')  ) @[@@@@C     @[@@@@C     RQ
)@@G@@@A@@@@      DATA  PUNCH/1/ TAPE/2/ DRUM/3/@ @@@@      DATA  DASH/'------RR
)@@G@@'/    @D@@@@      DIMENSION  DNAME(3)/'CARDS', 'TAPE', 'DRUM'/    @[@@@@RS
)@@G@@C     @A@@@@      IF( MODEL .EQ. 'USER') RETURN @D@@@@      IF( SIG .NE.RT
)@@G@@ 1  .AND. SIG .NE. 'BEGIN') GO TO 40@ @@@@C        PRINT BEGIN MESSAGE  RU
)@@G@@@A@@@@      IF( MODEL .LE. 0) GO TO 30    @G@@@@      PRINT 2000, (DASH,RV
)@@G@@I=1,7), CW, MODEL, DNAME(DEVICE), (DASH ,J=1,5) @G@@@@2000  FORMAT('0', RW
)@@G@@7A6, 'BEGIN ', 2A6, ' MODEL', I6,' OUTPUT TO ',A5,5A6)@]@@@@      RETURNRX
)@@G@@@F@@@@30    PRINT 3000, (DASH,I=1,7), CW, DNAME(DEVICE),(DASH,J=1,7)    RY
)@@G@@@E@@@@3000  FORMAT('0', 7A6, 'BEGIN ', 2A6, ' OUTPUT TO ', A5,7A6)@]@@@@RZ
)@@G@@      RETURN@[@@@@C     @ @@@@C        PRINT END MESSAGE    @A@@@@40    SA
)@@G@@IF( ERRFLG .NE. 0) GO TO 80   @C@@@@      PRINT 4000, (DASH,I=1,7), CW, SB
)@@G@@(DASH,J=1,9)@E@@@@4000  FORMAT('0', 7A6, 'END ', 2A6, ' OUTPUT', 8A6, A5SC
)@@G@@)     @B@@@@      IF( DEVICE .NE. PUNCH) GO TO 50     @ @@@@      PRINT SD
)@@G@@4001, NCARDS, CW  @G@@@@4001  FORMAT( 30X,'TOTAL OF', I7, ' CARDS HAVE BSE
)@@G@@EEN PUNCHED FOR ', 2A6, @^@@@@     2   ' OUTPUT',//)  @]@@@@      RETURNSF
)@@G@@@C@@@@50    PRINT 5000,NCARDS, DNAME(DEVICE), FNAM, CW@F@@[@5000  FORMATSG
)@@G@@( 30X,  I7, ' CARD IMAGES HAVE BEEN WRITTEN TO ',     @D[@@@     2 A4, 'SH
)@@G@@ FILE ', 2A6, ' FOR ', 2A6, ' OUTPUT')    @A@@@@      IF( DEVICE .EQ. TASI
)@@G@@PE) GO TO 70@^@@@@C        -- DRUM --     @^@@@@      PRINT 6000,  FNAM SJ
)@@G@@@E@@@@6000  FORMAT( 30X, 'DRUM FILE ', 2A6, ' HAS BEEN REWOUND'/) @]@@@@SK
)@@G@@      RETURN@^@@@@C        -- TAPE --     @^@@@@70    PRINT 7000,  FNAM SL
)@@G@@@G@@@@7000  FORMAT( 30X, 'TAPE FILE ', 2A6, ' HAS BEEN DOUBLY HARDWARE ESM
)@@G@@NDFILE@F@@@@     2D AND BACKSPACED OVER', /, 53X, 'SECOND END-OF-FILE MASN
)@@G@@RK')  @]@@@@      RETURN@^@@@@C        -- ERRORS --   @ @@@@80    IF( STSO
)@@G@@ATUS) 81, 82, 83  @^@@@@81    PRINT 8100,  FNAM @G@@@@8100  FORMAT('0***SP
)@@G@@**UNRECOVERABLE OUTPUT ERROR--OUTPUT OPERATIONS ON FIL@A@@@@     2E ', 2SQ
)@@G@@A6, ' DISCONTINUED')    @]@@@@      RETURN@#@@@@82    PRINT 8200  @F@@@@SR
)@@G@@8200  FORMAT('0STATJOB SYSTEM ERROR IN S1AUS--SEE CONSULTANT')    @]@@@@SS
)@@G@@      RETURN@A@@@@83    GO TO( 81, 84, 85, 81), STATUS@#@@@@84    PRINT ST
)@@G@@8400  @G@@@@8400  FORMAT('0*****FILE OUTPUT ERROR--OUTPUT DISCONTINUED DSU
)@@G@@UE TO')     @C@@@@      PRINT 8401, DNAME(DEVICE),NCARDS, FNAM    @G@@@@SV
)@@G@@8401  FORMAT( 11X, 'END-OF-', A4, ' ENCOUNTERED AT CARD ', I7, ' OF FILESW
)@@G@@@#@@@@     2 ', 2A6)    @]@@@@      RETURN@#@@@@85    PRINT 8400  @ @@@@SX
)@@G@@      PRINT 8500, NCARDS, FNAM@G@@@@8500  FORMAT( 11X, 'HARDWARE, PARITYSY
)@@G@@, OR CHARACTER COUNT ERRORS ENCOUNTE@B@@@@     2RED AT CARD ', I7, ' OF SZ
)@@G@@FILE ', 2A6)@]@@@@      RETURN@]@@@@      END   ___ANY TIME AFTER CALL TTA
)@@G@@O S1AUST (AND AFTER     @B@@@@C              CALL TO S1AUSP('BEGIN')  ) TB
)@@G@@)@^@G@)@@@8@@@@@@@@@@@8@@@@@@@DRUM  TAPE  CARDS ------@@@@@#@@@@@]@@@@@[TC
)@@G@@USER  AA@@@A)@@[N[K0)*S^[@K^G@C/@@@[@[J@]-/K@@#XN@0@@C/K@@@D*@@@@GH@@@]WTD
)@@G@@C@@@@^A@K@]=R@K@@ AB@@@A)@E[UK0@@]@@/=K@[D+@@@@I @@@@I(@@@@KH[@@@@C.@@@[TE
)@@G@@C/)@@[ @@@@G(@@@@IH@)@]XC@)@@@AC@@@A)@P[N[[@K)--#@--]C'^K@@@C8@@@#N.@@@ATF
)@@G@@@[O@]-@@[@@D/,0@@@/K@@@21@@@@G*@@@@GD@@@@^AD@@@A)@Z[F@K0CE^O[[K+-)@@@@@@TG
)@@G@@R@K@]='^K@@@C8@@@^8L@@@+'^K@@@C8[)@[N.@@@[R@K@]Y8L@@@XAE@@@A)@*@3#]^L#]^TH
)@@G@@O@@@@@)@D@S@06HBEG,7A6,0(001H08L@@@:'^K@@@C8@@@#N.@@@^'^K@@@C8[@@#AF@@@ATI
)@@G@@)@G[@@@@@@@@)@,@F]K@@@@@'^@@@@A6)    ,A5,5PUT TO1H OUT,I6,01 MODEL6,006HTJ
)@@G@@IN ,2AAG@@@A)@\[F@K^GCKK0--[^G@@@@@@C8@@@#N.@@@AR@K@@ @[&@]-@@[@@O/,0@@@TK
)@@G@@@[>@]-/K@@#XN@0@@1AH@@@A)@8[F]E@-)KOC*]A^C)@@@@@'^K@@@C8[@@#8L@@@/'^K@@@TL
)@@G@@C8])@[N.@@@[R@)@]Y8L@@@7'^K@@@AI@@@A)[[@+K0- @@@)@O@*@@@@@@@6,011HIN ,2ATM
)@@G@@06HBEG,7A6,0(001H08L@@[]'^K@@@C8@@@#N.@@@AAJ@@@A)@T@)@@@@@@@)[ @<]M@)CS@TN
)@@G@@@@@@@@@[6@]-/K@@#XN@0@[C'^@@@@)     A5,7A6T TO , OUTPUAK@@@A)[D[F[K^CCSKTO
)@@G@@0CSK+)@@@@@@8L@@[J'^K@@@C8@@@#N.@@@A@[9@]-@@[@@X/,0@@@/K@@]U*@@@@AAL@@@ATP
)@@G@@)[M[F#@)*LK[#]^O@@@@@@@@8L@@[S'^K@@@C8@@@#N.@@@C8L@@[O'^K@@@C8])@[N.@@@[TQ
)@@G@@R@)@]YAM@@@A)@X[@@@@@@@@)[V@F]K@@@@@'^@@@@)     8A6,A5UTPUT,007H O ,2A6,TR
)@@G@@04HEND,7A6,0(001H0AN@@@A)[W[F#]]C]^^GCSKOG@@@@@@R@K@]Y@@K@@C@]E@]-@@[@@>TS
)@@G@@/,0@@@/K@@[!*@@@@GH@@@@ C@@@@@AO@@@A)[>@+KOC*@@@)@>@*@@@@@@@H CARDI7,029TT
)@@G@@AL OF,08HTOT(30X,08L@@[&'^K@@@C8[)@[N.@@@[AP@@@A)@%[@@@@@@@@)[(@F]K@@@@@TU
)@@G@@'^@@@@/)    TPUT,/07H OU,2A6,0D FOR PUNCHE BEEN S HAVEAQ@@@A)[%[F@K^GCE^TV
)@@G@@^GCSKOG@@@@@@@M@@#@@K@@C@]N@]-@@[@@2/,0@@@R@)@@ @]M@]-/K@@#XN@0@[?AR@@@ATW
)@@G@@)[3[F#@/*LK^G]]-^@@@@@@@'^K@@@C8])@[N.@@@[R@)@]Y8L@@[5'^K@@@C8[\_"N.@@@[TX
)@@G@@R@K@]YAS@@@A)[/@F@@@@@@@)@2[@@@@@@@@ TO ,ARITTENBEEN W HAVE IMAGES CARD TY
)@@G@@7,034H(30X,I8L@@['AT@@@A)@'[@@@@@@@@)[.@F]K@@@@@'^@@@@)     OUTPUT,007H TZ
)@@G@@R ,2A605H FO,2A6,0 FILE 4,006HAU@@@A)["[F#]]C]^^GCSK0@@@@@@@N.@@@[R@K@]YUA
)@@G@@@]+@]-@@[@[]/,0@@@/K@@]I(@@@@GH@@@@ C@@@@[AV@@@A)]B@V9K+)@@@)[]@0@@@@@@@UB
)@@G@@AS BEE017H H ,2A6,M FILE10HDRU(30X,08L@@]B'^K@@@C8[\_"AW@@@A)[C@K@)]E@;]UC
)@@G@@M@)CSK)--#@@@]%@]-@@[@[E/,0@@@@](@]-/K@@#XN@0@]H'^@@@@UND/) N REWOAX@@@AUD
)@@G@@)]L@:#@/*LK@)[E@)@@@@@@@ ,2A6,E FILE10HTAP(30X,08L@@]N'^K@@@C8]\_"N.@@@[UE
)@@G@@R@)@]YAY@@@A)[I[S@@@@@@@,53X,0OVER,/PACED  BACKSED ANDENDFILDWARE LY HARUF
)@@G@@N DOUBAS BEE054H HAZ@@@A)[T@*@@@@@@@)]Q@<]M@)CS@@]1@]-/K@@#XN@0@]T'^@@@@UG
)@@G@@RK)   ILE MAD-OF-FOND EN23HSECBA@@@A)]U[F[K^[]]A^GCSB=@@@@@@C8[\_"N.@@@[UH
)@@G@@R@K@]Y@]5@]-@@[@[Y/,0@@@/C@@]0/@@@](C@@@@BBB@@@A)]<@N]E@@@@@)[Y@8@@@@@@@UI
)@@G@@R--OUTT ERRO OUTPUERABLENRECOV*****U(060H08L@@]+'^K@@@BC@@@A)[>[@@@@@@@@UJ
)@@G@@)]>@F]K@@@@@'^@@@@UED)  CONTIN3H DIS2A6,01FILE ,NS ON ERATIOPUT OPBD@@@AUK
)@@G@@)]&@3@K^GCKK0-)@@@)[!@S@B SYSTSTATJO(046H0@].@]-@@[@[!/,0@@@@]/@]-/K@@#XUL
)@@G@@N@0@]*BE@@@A)[0@0@@@@@@@)]?@V]M@)@@@/K@@#XN@0@]\'^@@@@ANT)  ONSULT-SEE CUM
)@@G@@S1AUS-OR IN EM ERRBF@@@A)]\[F#]]C]^4GC]@)@@@@@@@/K@@#G/K@@]9/K@@]X@#[@]-UN
)@@G@@'^@@@@8];@]4$'0@@ RA0@@B@#@@]-BG@@@A)]8@<@K)--#@)[6@*@@@@@@@RROR--TPUT EUO
)@@G@@ILE OU*****F(051H0@#]@]-@@[@[6/,0@@@/K@@]XBH@@@A)[;@*@@@@@@@)]/@<]M]-[#@UP
)@@G@@@@[@]@/,0@@@R@)@@ '^@@@@TO)   D DUE NTINUE DISCOOUTPUTBI@@@A)#@[##]A^ #@UQ
)@@G@@/*LK@@)]@@C@(11X,08L@@# '^K@@@C8[\_"N.@@@[R@K@]Y@@K@@C@@M@@#@# @]-BJ@@@AUR
)@@G@@)][[S@@@@@@@)     E ,2A6OF FIL,009H RD ,I7 AT CANTERED ENCOU4,021H-OF-,AUS
)@@G@@07HENDBK@@@A)#C[F]M@)CSK)--#]^=C@@@@/,0@@@'^@@@@@#J@]-@@[@[6/,0@@@@#I@]-UT
)@@G@@/K@@#XN@0@#F'^@@@@BL@@@A)#L[##]A^ #@/*LK@@)]G@C@(11X,08L@@#Q'^K@@@C8]\_"UU
)@@G@@N.@@@[R@)@]Y@@K@@C@#L@]-@@[@]GBM@@@A)]H[S@@@@@@@T CARDERED ANCOUNTRORS EUV
)@@G@@UNT ERTER COCHARACY, OR  PARITDWARE,64HHARBN@@@A)]S@)@@@@@@@)#T@<]M@)CS@UW
)@@G@@@@@@@@@#T@]-/K@@#XN@0@#W'^@@@@,2A6)  FILE 09H OF ,I7,0BO@@@A)#X@:#]A^GCSUX
)@@G@@K0@@@@)]Z@C@)#+@F#@@@@@@/K@K]Z@@F@@]*4@K]ZN[@@]$R@)@]&R@K@]>R]0@]+BP@@@AUY
)@@G@@)#<@F])@@@@@)]-@K@)#=@<#]A^GCS@@@@@@^[@@]$A@)@]&A@K@]>AA0@]+@#T@@]S1AUSPUZ
)@@G@@/K@@@@BQ@@@A)#*@+K^[@@@@)]W@S@@@@@@@@@@@@@@@@@@@@@[@@[BEGIN USER  /K@@@@VA
)@@G@@[^@@@E[^@@@KC8FK@@BR@@@A@@^@@#@@B@@ @@L@@[@@P@@[@@#@]*@C@@#?@@@@@DNPRT$ VB
)@@G@@      NIO1$       NIO2$       NERR2$      NERR3$      S1AUSP      @@[@@@VC
)@@G@@@@@@#=AUSPBK      ]@@@C@@]@@@@@@@@@@@@@@@@@@@@@@*[@@@@*SDFF*@G@@@@      VD
)@@G@@SUBROUTINE S1RCOP( SUM, XMIN, XMAX, PROD, DF, NV, PREC, IERR)     @]@@@@VE
)@@G@@C     SJM   @D@@@@C     TITLE      - READ CARRY-OVER PACKAGE(S1RCOP)    VF
)@@G@@@C@@@@C     AUTHOR     - JANA VRABEC, JANUARY, 1971   @B@@@@C     PROGRAVG
)@@G@@MMER - ROGER VOYTECKI, 1969   @[@@@@C     @#@@@@C 1.0 PURPOSE     @G@@@@VH
)@@G@@C     S1RCOP READS A SINGLE- OR DOUBLE-PRECISION STATJOB CARRY-OVER     VI
)@@G@@@G@@@@C     PACKAGE AND STORES RESULTS IN EITHER PRECISION, CONNECTING IVJ
)@@G@@F     @G@@@@C     NECESSARY.  HAS BUILT IN THE CAPABILITY TO ACCUMULATE VK
)@@G@@TWO OR MORE @G@@@@C     CARRY-OVER PACKAGES INTO ONE CARRY-OVER PACKAGE,VL
)@@G@@ WHEN THE COP'S   @B@@@@C     ARE SEPARATED BY COPCOMBIN CARDS    @[@@@@VM
)@@G@@C     @^@@@@C 2.0 CALLING SEQUENCE  @D@@@@C 2.1 S1RCOP IS CALLED BY A STVN
)@@G@@ATEMENT OF THE FORM     @E@@@@C        CALL S1RCOP(SUM,XMIN,XMAX,PROD,DFVO
)@@G@@,NV,PREC,IERR)    @]@@@@C     WHERE @E@@@@C     SUM   IS VECTOR WHERE THVP
)@@G@@E NV SUMS ARE TO BE STORED    @F@@@@C     XMIN  VECTOR WHERE THE NV MINIVQ
)@@G@@MUM VALUES ARE TO BE STORED   @F@@@@C     XMAX  VECTOR WHERE THE NV MAXIVR
)@@G@@MUM VALUES ARE TO BE STORED   @F@@@@C     PROD  VECTOR WHERE THE NV(NV+1VS
)@@G@@)/2 PRODUCTS ARE TO BE STORED @G@@@@C     DF    VARIABLE WHERE NUMBER OFVT
)@@G@@ OBSERVATIONS IS STORED AS A REAL   @#@@@@C           VALUE @A@@@@C     VU
)@@G@@NV    NUMBER OF VARIABLES     @G@@@@C     PREC  HAS TWO POSSIBLE VALUES.VV
)@@G@@  'SINGLE' DENOTES OUTPUT SHOULD BE @G@@@@C           OF TYPE SINGLE, 'DVW
)@@G@@OUBLE' DENOTES OUTPUT OF TYPE DOUBLE.     @B@@@@C     IERR  NUMBER OF ERVX
)@@G@@RORS ENCOUNTERED  @G@@@@C 2.2 INITIALIZATION ENTRY POINT S1RCPI IS CALLEVY
)@@G@@D BY A STATEMENT OF THE @#@@@@C           FORM  @A@@@@C           CALL SVZ
)@@G@@1RCPI(GO,IERR)    @]@@@@C     WHERE @F@@@@C     GO IS A FLAG, RETURNED AWA
)@@G@@S 1 IF NO ERRORS OCCURRED DURING    @C@@@@C           INITIALIZATION ANDWB
)@@G@@ AS 0 OTHERWISE.  @G@@@@C     IERR IS A FLAG RETURNED AS 0 IF NO ERRORS WC
)@@G@@DURING INITIALIZATION   @A@@@@C     AND READING,    1  OTHERWISE  @F@@@@WD
)@@G@@C     2.3  INITIALIZATION ENTRY POINT S1RCPJ,  CALLED WHEN SEVERAL@G@@@@WE
)@@G@@C     CARRY-OVER PACKAGES ARE TO BE READ BEFORE END OF ANALYSIS, BUT AREWF
)@@G@@@G@@@@C     NOT TO BE COMBINED (SOME MAY BE COMBINED). THIS ENTRY IS CALWG
)@@G@@LED BY@G@@@@C     THE PROGRAM BEFORE ALL BUT THE FIRST CALL TO S1RCOP. SWH
)@@G@@1RCPI IS    @G@@@@C     CALLED BY S1GDST AS PART OF STANDARD INITIALIZATWI
)@@G@@ION DONE ONCE PER @F@@@@C     DATA SET. S1RCPJ HAS THE SAME CALLING SEQUWJ
)@@G@@ENCE AS S1RCPI.   @[@@@@C     @ @@@@C 3.0 NOTES/RELATIONSHIPS     @G@@@@WK
)@@G@@C     REFERENCES TO TAGGED STORAGE - TAG 'ERVEC' IS USED TO GET LOCATIONWL
)@@G@@@G@@@@C                         OF VECTOR WHERE ERROR CODES FROM S1INDC WM
)@@G@@ARE TO@A@@@@C                         BE STORED,@G@@@@C                 WN
)@@G@@        UNDER TAG 'INROUT' A FLAG IS STORED WHICH     @D@@@@C           WO
)@@G@@              TELLS THE TYPE OF INPUT     @G@@@@C     ROUTINES CALLED - WP
)@@G@@S1COPI AND S1COPS, FIRST ONE TO INITIALIZE,     @G@@@@C                 WQ
)@@G@@        SECOND ONE TO STORE 5 DOUBLE OR 10 SINGLE     @D@@@@C           WR
)@@G@@              PRECISION VALUES EACH CALL. @G@@@@C                       WS
)@@G@@S1GTAG AND S1GVAL TO RETRIEVE INFORMATION FROM  @B@@@@C                 WT
)@@G@@        TAGGED STORAGE  @C@@@@C                       S1GTFN TO GET FILEWU
)@@G@@ NAME @F@@@@C                       S1INDC TO DECODE VALUES OF INPUT VARWV
)@@G@@IABLES@G@@@@C                       S1INHC AND S1INHS TO PROVIDE HEADINGWW
)@@G@@ OR SKIPPING@D@@@@C                         LINES WHEN PRINTING MESSAGESWX
)@@G@@@F@@@@C                       S1INEP TO PRINT STANDARD MESSAGE HEADINGS WY
)@@G@@@E@@@@C                         WHEN ERRORS FOUND IN INPUT RECORD @F@@@@WZ
)@@G@@C                       S1INR1 TO GET NEXT RECORD FROM INPUT FILE @F@@@@XA
)@@G@@C                       S1INP1 TO PRINT ONE CARD FROM INPUT RECORD@G@@@@XB
)@@G@@C                       S1PRFT AND S1PRST TO CORRECT DATA SET LABEL IF  XC
)@@G@@@A@@@@C                         NECESSARY @F@@@@C                       XD
)@@G@@S1RED TO GET ONE CARD FROM INPUT FILE     @G@@@@C                       XE
)@@G@@ERPROC INTERNAL SUBROUTINE TO PROCESS ERRORS    @B@@@@C                 XF
)@@G@@        FROM S1INDC     @[@@@@C     @G@@@@C     THE STATJOB CARRY-OVER PXG
)@@G@@ACKAGE CONSISTS OF CARD-IMAGE RECORDS AS  @#@@@@C     FOLLOWS:    @[@@@@XH
)@@G@@C     @G@@@@C        A) BEGINDATA CARD CONTAINING DATA SET LABEL OF INPUXI
)@@G@@T DATA SET  @B@@@@C           FROM WHICH COP WAS GENERATED. @B@@@@C     XJ
)@@G@@   B) COP HEADER CARD CONTAINING ---@A@@@@C                  1 -  4  4HCXK
)@@G@@OP    @F@@@@C                  5 - 10  FIRST FIVE CHARACTERS OF DATA SETXL
)@@G@@ LABEL@C@@@@C                          FOLLOWED BY BLANK.   @E@@@@C     XM
)@@G@@            11 - 14  FOUR ZEROES (SEQUENCE NUMBER)    @C@@@@C           XN
)@@G@@      15 - 18  NUMBER OF VARIABLES  @B@@@@C                 19 - 28  10HXO
)@@G@@ VARIABLES  @D@@@@C                 29 - 35  NUMBER OF OBSERVATIONS     XP
)@@G@@@C@@@@C                 36 - 54  19H OBSERVATIONS  RUN@A@@@@C           XQ
)@@G@@      55 - 56  RUN I.D. @A@@@@C                 57 - 58  BLANK    @C@@@@XR
)@@G@@C                 59 - 66  MM/DD/YY   (DATE)    @A@@@@C                 XS
)@@G@@67 - 68  BLANK    @D@@@@C                 69 - 74  6HSINGLE  OR  6HDOUBLXT
)@@G@@E     @A@@@@C                 75 - 80  6H PREC. @[@@@@C     @B@@@@C     XU
)@@G@@   C) DATA CARDS CONTAINING ---     @A@@@@C                  1 -  4  4HCXV
)@@G@@OP    @F@@@@C                  5 -  9  FIRST FIVE CHARACTERS OF DATA SETXW
)@@G@@ LABEL@A@@@@C                    10    BLANK    @E@@@@C                 XX
)@@G@@11 - 14  CARD SEQUENCE NUMBER (ZERO FILE) @A@@@@C                 15 - 2XY
)@@G@@0  BLANK    @G@@@@C                 21 - 80  TEN A6 FIELDS CONTAINING DAXZ
)@@G@@TA, 10 SINGLE     @F@@@@C                          PRECISION OR 5 DOUBLEYA
)@@G@@ PRECISION VALUES.@G@@@@C          DATA CARDS CONTAIN SUMS, MINIMUMS, MAYB
)@@G@@XIMUMS, AND THE LOWER   @G@@@@C          TRIANGULAR PORTION (BY ROW) OF YC
)@@G@@THE RAW PRODUCTS MATRIX, IN   @G@@@@C          THAT ORDER.  EACH OF THESYD
)@@G@@E FOUR TYPES OF OUTPUT BEGINS ON A  @ @@@@C          NEW CARD IMAGE.    YE
)@@G@@@[@@@@C     @ @@@@C        D) AN ENDOFDATA CARD @[@@@@C     @]@@@@C     YF
)@@G@@ENDSJM@ @@@@      IMPLICIT INTEGER (A - Z)@^@@@@      INCLUDE INBK, LISTYG
)@@G@@@#@@@@      COMMON C(1) @#@@@@      LOGICAL RERR@#@@@@      REAL DF     YH
)@@G@@@[@@@@C     @E@@@@      DIMENSION HEDFMT(18), DATFMT(26), DATA(13), BUF(YI
)@@G@@10)   @ @@@@      DIMENSION COPCOM(14)    @D@@[@      DIMENSION SAVDSL(1YJ
)@@G@@4)/'BEGINDATA*******',11*1H / @[@@@@C     @A@@@@      DATA  MSK1 / O7777YK
)@@G@@77777700 /  @#@@@@      DATA CL/0/  @[@@@@C     @A@@@@      DATA (HEDFMTYL
)@@G@@(I), I=1,18) /    @ @@@@     1 O1000001,O004 06 00 00,@ @@@@     2 O1000YM
)@@G@@005,O011 06 00 00,@ @@@@     3 O1000013,O016 05 00 00,@ @@@@     4 O1000YN
)@@G@@020,O022 05 00 00,@ @@@@     5 O1000035,O043 05 00 00,@ @@@@     6 O1000YO
)@@G@@067,O070 06 00 00,@ @@@@     7 O1000073,O100 06 00 00,@ @@@@     8 O1000YP
)@@G@@101,O102 06 00 00,@ @@@@     9 O1000105,O112 06 00 00/@[@@@@C     @A@@@@YQ
)@@G@@      DATA  ( DATFMT(I), I=1,26) /  @ @@@@     1 O1000001,O003 06 00 00,YR
)@@G@@@ @@@@     2 O1000005,O011 06 00 00,@ @@@@     3 O1000013,O016 05 00 00,YS
)@@G@@@ @@@@     4 O1000025,O032 06 00 00,@ @@@@     5 O1000033,O040 06 00 00,YT
)@@G@@@ @@@@     6 O1000041,O046 06 00 00,@ @@@@     7 O1000047,O054 06 00 00,YU
)@@G@@@ @@@@     8 O1000055,O062 06 00 00,@ @@@@     9 O1000063,O070 06 00 00,YV
)@@G@@@ @@@@     * O1000071,O076 06 00 00,@ @@@@     1 O1000077,O104 06 00 00,YW
)@@G@@@ @@@@     2 O1000105,O112 06 00 00,@ @@@@     3 O1000113,O120 06 00 00/YX
)@@G@@@[@@@@C     @#@@@@      GO TO 20    @[@@@@C     @G@@@@C*****************YY
)@@G@@******************************************************@G@@@@C***********YZ
)@@G@@                                               *************@G@@@@C*****ZA
)@@G@@*****      INITIALIZATION ENTRIES                *****************@G@@@@ZB
)@@G@@C**********                                          *******************ZC
)@@G@@@[@@@@C     @ @@@@      ENTRY S1RCPI(GO,IERR)   @B@@@@      CALL S1GTAG(ZD
)@@G@@'DSL',CL,DUM,DUM,$999)  @#@@@@      CH=CL+10    @C@@@@      CALL S1GTAG(ZE
)@@G@@'BEGDAT',FWBEG,DUM,DUM,$999)  @B@@[@      CALL S1TCHS(C(FWBEG),1,SAVDSL,ZF
)@@G@@17,64)@][@@@      INIT=1@#@@@@      GO TO 910   @[@@[@C     @ @@@@      ZG
)@@G@@ENTRY S1RCPJ(GO,IERR)   @ @@@@      IF(CL.EQ.0) GO TO 999   @]@@@@      ZH
)@@G@@INIT=2@A@@@@      IF(TYPE.EQ.3)   GO TO 905     @#@@@@      PRINT 9013  ZI
)@@G@@@#@@@@      GO TO 123   @C@@[@  905 CALL S1TCHS(C(LCARDS),17,C(FWBEG),1,ZJ
)@@G@@64)   @#[@@@  910 CONTINUE    @[@@@@C     @C@@@@      CALL S1GTAG( 'ERVEZK
)@@G@@C', ERVEC, X, X, $999)  @C@@@@      CALL S1GVAL('INROUT', INROUT, $999, ZL
)@@G@@$999) @#@@@@      IERR =0     @]@@@@      GO = 1@#@@@@      BEGIND = 1  ZM
)@@G@@@#@@@@      IFIRST = 1  @#@@@@      COUNT = 0   @A@@@@      IF(INIT.EQ.1ZN
)@@G@@)   CALL S1INHC(0)@^@@@@      CALL S1INEP(1)    @B@@[@1000  CALL S1TCHS(ZO
)@@G@@C(FWBEG),1,C(CL),1,66)  @ @@[@      IF(INROUT.EQ.1) GO TO 10@^@@[@      ZP
)@@G@@FWBEG2=FWBEG+10   @^@@[@      CALL S1INHC(1)    @B@@[@      PRINT 1001,(ZQ
)@@G@@C(I),I=FWBEG,FWBEG2)    @B@@[@1001  FORMAT(' BEGINDATA*******',11A6)    ZR
)@@G@@@ @@[@      CALL S1GTFN(FILENM,$123)@[[@@@C     @[@@@@C     @C@@@@C     ZS
)@@G@@     READ FIRST CARD--HEADER CARD FOR COP @G@@@@C         OR POSSIBLY  BZT
)@@G@@EGINDATA  CARD IN WHICH CASE OLD  DSL  REPLACED @[@@@@C     @B@@@@10    ZU
)@@G@@CALL S1RED( C(LCARDS), TYPE, RERR)  @ @@@@      IF( .NOT. RERR) GO TO 11ZV
)@@G@@@^@@@@101   CALL S1INEP( 3)   @#@@@@      GO TO 123   @^@@@@11    JUMP =ZW
)@@G@@ TYPE + 1   @E@@@@      IF( INROUT .NE. 1  .AND.  BEGIND .EQ. 1) GO TO 1ZX
)@@G@@11    @G@@@@      GO TO ( 120, 121, 120, 129, 124, 125, 125, 120, 120, 1ZY
)@@G@@4, 120),JUMP@G@@@@111   GO TO ( 120, 126, 127, 128, 127, 127, 127, 127, ZZ
)@@G@@127, 127,127),JUMP@^@@@@120   CALL S1INEP(3)    @#@@@@      PRINT 9000  AA
)@@G@@@#@@@@      GO TO 123   @#@@@@121   PRINT 9001  @#@@@@122   PRINT 9002  AB
)@@G@@@D@@[@C  READ AHEAD ONE CARD TO GET IN SINC WITH S1GDST     @B@@[@123   AC
)@@G@@CALL S1REDC(C(LCARDS),TYPE,RERR)    @#@@[@      PRINT 9003  @][@@@      AD
)@@G@@GO = 0@#@@@@      IERR = 1    @]@@@@      RETURN@^@@@@124   CALL S1INHS(AE
)@@G@@3)    @#@@@@      CALL S1INP1 @#@@@@      GO TO 122   @^@@@@125   CALL SAF
)@@G@@1INHS(3)    @#@@@@      CALL S1INP1 @#@@@@      GO TO 121   @#@@@@126   AG
)@@G@@PRINT 9013  @#@@@@      GO TO 121   @#@@@@127   PRINT 9013  @#@@@@      AH
)@@G@@GO TO 123   @A@@@@128   IF( BEGIND .GT. 1) GO TO 120  @ @@@@C  CHECK IF AI
)@@G@@NEW DSL IS BLANK  @E@@@@      IF(FLD(24,12,C(LCARDS+2)).NE.'@@@@  ') GO AJ
)@@G@@TO 1283     @#@@@@      JJ=LCARDS+3 @#@@@@      JK=LCARDS+12@^@@@@      AK
)@@G@@DO 1282 J=JJ,JK   @A@@@@ 1282 IF(C(J).NE.1H ) GO TO 1283    @E@@@@      AL
)@@G@@IF(FLD(0,12,C(LCARDS+13)).NE.'@@@@  ') GO TO 1283     @#@@@@        GO TAM
)@@G@@O 1284@#@@@@1283    CONTINUE  @[@@@@C     @[@@@@C     @G@@@@C  NOW CHECKAN
)@@G@@ IF D.S.L. AFTER FILE NAME  ON CTL STREAM WAS BLANK.  IF SO,@G@@@@C  REPAO
)@@G@@LACE TAG 'DSL' STORAGE WITH NO-BLANK D.S.L. FOUN ON INPUT FILE.   @[@@@@AP
)@@G@@C     @G@@@@C  S1GTFN MAY HAVE ALTERED 'DSL' TAGGED STORAGE, SO CHECK 'BAQ
)@@G@@EGDAT' AREA.@[@@@@C     @#@@[@      NNBLK=0     @^@@[@      DO 12832 J=1AR
)@@G@@,63   @A@@[@      CALL S1PRFT(C(FWBEG),J,CHAR)  @A@@[@      IF(CHAR.NE.1AS
)@@G@@H ) GO TO 12831   @A@@[@      IF(NNBLK.EQ.0) GO TO 12832    @#@@[@      AT
)@@G@@GO TO 12833 @^@@[@12831 NNBLK=NNBLK+1     @#[@@@12832 CONTINUE    @#@@@@AU
)@@G@@      GO TO 1284  @ @@[@12833 IF(J.EQ.1) GO TO 999    @^@@[@      DO 128AV
)@@G@@34 JJ=J,64  @A@@[@      CALL S1PRFT(C(FWBEG),JJ,CHAR) @A#@@@      IF(CHAAW
)@@G@@R.NE.1H ) GO TO 1284    @#@@@@12834 CONTINUE    @G@@@@C  'BEGDAT' WAS BLAX
)@@G@@ANK EXCEPT FOR FILE NAME --- TRANSFER C(LCARDS) TO    @ @@@@C  'DSL' TAGAY
)@@G@@GED STORAGE AREA. @#@@@@ 1281 C(CL+10)=6H @B@@@@      CALL S1TCHS(C(LCARAZ
)@@G@@DS),17,C(CL),1,64)@#@@@@1284    CONTINUE  @^@@[@      DO 1286 I=1,14    BA
)@@G@@@ @@[@ 1286 SAVDSL(I)=C(LCARDS+I-1) @#@@@@      BEGIND = 2  @#@@@@      BB
)@@G@@GO TO 10    @[@@@@C     @^@@@@  129 CALL S1INHS(2)    @#@@@@      PRINT BC
)@@G@@1291  @G@@[@ 1291 FORMAT('0***** EXTRA BEGINDATA CARD FOUND IN COP.     BD
)@@G@@  LAST ONE U@][@@@     *SED.')@#@@@@      GO TO 1281  @#@@@@132   GO TO BE
)@@G@@123   @#@@@@14      CONTINUE  @GG@@@      CALL S1INDC( C(LCARDS), WORDS,BF
)@@G@@ HEDFMT,9, DATA, ERFLAG, C(ERVEC))  @A@@@@      IF( ERFLAG .EQ. 0) GO TOBG
)@@G@@ 15   @B@@@@      CALL ERPROC( C(ERVEC), HEDFMT, 9)   @#@@@@      GO TO BH
)@@G@@132   @[@@@@C     @[@@@@C     @[@@@@C     @^@@[@   15 F5DSL=DATA(2)     BI
)@@G@@@^@@[@      PRINT 5,SAVDSL    @ @@[@    5 FORMAT('0    ',13A6,A2) @AF@@@BJ
)@@G@@151   IF( DATA(3) .EQ. 0) GO TO 152 @]@@@@      GO = 0@^@@@@      CALL SBK
)@@G@@1INEP(3)    @#@@@@      PRINT 9005  @#@@@@152   SGLDBL = 0  @C@@@@      BL
)@@G@@IF( DATA(9) .EQ. 'SINGLE') SGLDBL = 1     @C@@@@      IF( DATA(9) .EQ. 'BM
)@@G@@DOUBLE') SGLDBL = 2     @A@@@@      IF( SGLDBL .NE. 0) GO TO 153  @]@@@@BN
)@@G@@      GO = 0@^@@@@      CALL S1INEP(3)    @#@@@@      PRINT 9006  @ @@@@BO
)@@G@@153   IF( GO .EQ. 0) GO TO 132@G@@@@      PRINT 160, DATA(9), DATA(5), DBP
)@@G@@ATA(4), DATA(6), DATA(7), DATA(8)   @C@@@@160   FORMAT('0CARRY-OVER PACKBQ
)@@G@@AGE INPUT',/,     @G@@@@     2       '   OF ', A6, ' PRECISION DATA FOR BR
)@@G@@', I7, ' OBSERVATIONS OF@F@@@@     2 ',I3,' VARIABLES, PRODUCED DURING RBS
)@@G@@UN ',A2,' ON ',A6,A2)   @A@@@@      IF( IFIRST .EQ. 0) GO TO 20   @]@@@@BT
)@@G@@      RETURN@G@@@@C************************END OF INITIALIZATION *******BU
)@@G@@******************@G@@@@C***********************************************BV
)@@G@@************************@[@@@@C     @[@@@@C     @A@@@@20    IF( NV .EQ. BW
)@@G@@DATA(4) ) GO TO 21@^@@@@      CALL S1INHC(1)    @ @@@@      PRINT 9007, BX
)@@G@@DATA(4), NV @#@@@@      GO TO 132   @#@@@@21    CONTINUE    @[@@@@C     BY
)@@G@@@ @@@@      KDIV = 5*(3-SGLDBL)     @A@@@@      IF(IFIRST.EQ.1) DF=DATA(BZ
)@@G@@5)    @A@@@@      IF (IFIRST.EQ.0) DF=DF+DATA(5)@[@@@@C     @C@@@@C     CA
)@@G@@INITIALIZATION CALL TO STORE ROUTINE...   @G@@@@C      IF IFIRST = 1,  ICB
)@@G@@T WILL RESET VALUES OF VECTORS TO BE ACCUMULATED@G@@@@C     OTHERWISE NOCC
)@@G@@T, AND NEXT COP WILL BE STORED ATOP PREVIOUS COP...   @[@@@@C     @D@@@@CD
)@@G@@      CALL S1COPI( NV, SUM, XMIN, XMAX, PROD, BUF,    @G@@@@     2      CE
)@@G@@           SUM, XMIN, XMAX, PROD, BUF,  PREC,DATA(9),IFIRST)@[@@@@C     CF
)@@G@@@F@@@@      NREC = 3*(1+(NV-1)/KDIV) + 1 + ((NV*(NV+1))/2 - 1)/KDIV     CG
)@@G@@@]@@@@C BEGINLOOP @D@@@@C          LOOP ON NO. OF DATA RECORDS IN THE COCH
)@@G@@P     @^@@@@      DO 40 I = 1, NREC @#@@@@      COUNT = I   @B@@@@      CI
)@@G@@CALL S1INR1( C(LCARDS), TYPE, RERR) @ @@@@      IF( RERR) GO TO 101     CJ
)@@G@@@C@@@@      GO TO( 310, 311, 311, 32, 310, 311),TYPE  @^@@@@310   CALL SCK
)@@G@@1INEP(3)    @#@@@@      PRINT 9008  @#@@@@      GO TO 132   @^@@@@311   CL
)@@G@@CALL S1INHS(3)    @#@@@@      CALL S1INP1 @^@@@@      M = NREC - I + 1  CM
)@@G@@@^@@@@      PRINT 9010, M     @A@@@@      IF( TYPE .EQ. 2) GO TO 132    CN
)@@G@@@#@@@@      PRINT 9001  @#@@@@      GO TO 132   @[@@@@C     @G@@@@32    CO
)@@G@@CALL S1INDC( C(LCARDS), WORDS, DATFMT, 13, DATA, ERFLAG, C(ERVEC))@A@@@@CP
)@@G@@      IF( ERFLAG .EQ. 0) GO TO 33   @B@@@@      CALL ERPROC( C(ERVEC), DCQ
)@@G@@ATFMT, 13)  @#@@@@      GO TO 132   @[@@@@C     @B@@@@33    IF( DATA(2) CR
)@@G@@.EQ. F5DSL) GO TO 335   @^@@@@      CALL S1INEP(3)    @#@@@@      PRINT CS
)@@G@@9012  @#@@@@      GO TO 132   @A@@@@335   IF( DATA(3) .EQ. I) GO TO 34  CT
)@@G@@@^@@@@      CALL S1INEP(3)    @#@@@@      PRINT 9009  @#@@@@      GO TO CU
)@@G@@132   @^@@@@34    DO 341 J = 1, 10  @^@@@@341   BUF(J) = DATA(J+3)@[@@@@CV
)@@G@@C     @E@@@@C                           S1COPS WILL PROCESS ONE RECORD  CW
)@@G@@@[@@@@C     @^@@@@      CALL S1COPS( IERR)@A@@@@      IF( IERR .NE. 0) GCX
)@@G@@O TO 132    @#@@@@40    CONTINUE    @[@@@@C     @D@@@@C***** ENDOFLOOP -CY
)@@G@@-- ALL DATA FOR THIS COP NOW STORED.@[@@@@C     @ @@@@C***** GET ENDOFDACZ
)@@G@@TA CARD     @#@@@@      EXTRA=0     @B@@@@41    CALL S1INR1( C(LCARDS), DA
)@@G@@TYPE, RERR) @ @@@@      IF( RERR) GO TO 101     @A@@@@      GO TO (42,50DB
)@@G@@,42,43,42,44),TYPE@B@@@@42    IF( EXTRA .NE. 0) PRINT 9011, EXTRA @^@@@@DC
)@@G@@      CALL S1INHS(3)    @#@@@@      CALL S1INP1 @#@@@@      PRINT 9001  DD
)@@G@@@#@@@@      GO TO 132   @^@@@@43    EXTRA = EXTRA + 1 @#@@@@      GO TO DE
)@@G@@41    @B@@@@   44 IF(EXTRA.NE.0) PRINT 9011,EXTRA     @^@@@@      CALL SDF
)@@G@@1INHS(2)    @#@@@@      PRINT 9001  @#@@@@      GO TO 132   @[@@@@C     DG
)@@G@@@^@@@@C***** ENDOFDATA FOUND. @B@@@@50    IF( EXTRA .NE. 0) PRINT 9011, DH
)@@G@@EXTRA @^@@@@      CALL S1INHS(1)    @#@@@@      CALL S1INP1 @#@@@@C*****DI
)@@G@@ CLOSE FILE @ @@@@      IF(INROUT.EQ.1) GO TO 52@B@@@@      CALL S1INR1(DJ
)@@G@@C(LCARDS),TYPE,RERR)    @^@@@@      IF(RERR) GO TO 101@ @@@@      IF(TYPDK
)@@G@@E.EQ.6) GO TO 52  @#@@@@      PRINT 51    @G@@@@   51 FORMAT('0***** ENDDL
)@@G@@-OF-FILE NOT FOUND AFTER ENDOFDATA CARD OF THE C@ @@@@     *ARRY-OVER PADM
)@@G@@CKAGE.')    @#@@@@      GO TO 132   @#@@@@   52 CONTINUE    @A@@@@      DN
)@@G@@IF( EXTRA .NE. 0) GO TO 132   @[@@@@C     @A@@@@C***** CHECK FOR COPCOMBDO
)@@G@@IN CARD.    @B@@@@      CALL S1REDC(C(LCARDS),TYPE,RERR)    @F@@[@C  DONDP
)@@G@@'T HANDLE ERROR NOW...S1GDST WILL GET SAME ERROR ON REREAD. @^@@[@      DQ
)@@G@@IF(RERR) GO TO 500@A[@@@      IF (TYPE .NE.11) GO TO 500    @^@@@@      DR
)@@G@@CALL S1INHS(2)    @#@@@@      CALL S1INP1 @[@@@@C     @C@@@@C***** INITIDS
)@@G@@ALIZE FOR ACCUMULATION OF NEXT COP. @[@@@@C     @F@@@@C***** SAVE COPCOMDT
)@@G@@BIN CARD FOR DATA SET LABEL, REPLACED LATER.    @#@@@@      DO 55 J=1,14DU
)@@G@@@ @@@@   55 COPCOM(J)=C(LCARDS+J-1) @[@@@@C     @G@@@@C***** GET BEGINDADV
)@@G@@TA CARD OF CARD COP OR BEGINDATA POINTER CARD FOR     @#@@@@C      FILE DW
)@@G@@COP.  @B@@@@      CALL S1REDC(C(LCARDS),TYPE,RERR)    @#@@[@      COUNT=DX
)@@G@@0     @ @@@@      IF( RERR) GO TO 101     @A@@@@      IF( TYPE .NE. 3) GDY
)@@G@@O TO 127    @[@@@@C     @ @@@@C***** REPLACE DATA SET LABEL.@^@@[@      DZ
)@@G@@C(FWBEG+10)=6H    @C@@[@      CALL S1TCHS(C(LCARDS),17,C(FWBEG),1,64)   EA
)@@G@@@# @@@      BEGIND = 1  @#[@@@      PRINT 7     @#@@@@      IFIRST=0    EB
)@@G@@@#@@@@      GO TO 1000  @[@@@@C     @D@@@@C***** ALL DONE READING COP(S)EC
)@@G@@ FOR THIS DATA SET.     @[@@@@C     @A@@@@  500 IF (IFIRST.EQ.1) GO TO 5ED
)@@G@@50    @[@@@@C     @F@@@@C***** REPLACE DATA SET LABEL WITH 17-80 OF LASTEE
)@@G@@ COPCOMBIN CARD.  @^@@@@      DO 510 J=1,64     @A@@@@      CALL S1PRFT(EF
)@@G@@COPCOM,J+16,CHAR) @A@@@@  510 CALL S1PRST(C(CL),J,CHAR)     @A@@@@      EG
)@@G@@CALL S1PRST(C(CL),65,1H )     @A@@@@      CALL S1PRST(C(CL),66,1H )     EH
)@@G@@@]@@@@  550 RETURN@G@@@@7     FORMAT( 1H0,/,'0THE FOLLOWING ACCUMULATED EI
)@@G@@WITH THE ABOVE CARRY-OVE@A@@[@     2R PACKAGE(S) FOR THIS RUN:'/) @G[@@@EJ
)@@G@@9000  FORMAT(' ***** FIRST CARD OF CARRY-OVER PACKAGE INPUT IS NOT A COPEK
)@@G@@@^@@@@     2 HEADER CARD')    @F@@@@9001  FORMAT(' ***** ENDOFDATA CARD EL
)@@G@@IS MISSING OR OUT OF ORDER')  @D@@@@9002  FORMAT(' ***** NO INPUT RECORDEM
)@@G@@S IN DATA SET')   @G@@@@9003  FORMAT('0***** ANALYSIS ABANDONED BECAUSE EN
)@@G@@OF ERRORS IN INPUT')    @G@@@@9004  FORMAT(' ***** CARRY-OVER PACKAGE HEEO
)@@G@@ADER ERROR.  COLUMNS 5 - 9 ON @F@@@@     2COP HEADER DO NOT MATCH COLUMNEP
)@@G@@S 17-21 OF BEGINDATA CARD')   @G@@@@9005  FORMAT(' ***** CARRY-OVER PACKEQ
)@@G@@AGE HEADER ERROR.  SEQUENCE NUMBER (@E@@@@     2COLS 11-14) FOR COP HEADER
)@@G@@ER MUST BE ZERO (0000) ')     @G@@@@9006  FORMAT(' ***** CARRY-OVER PACKES
)@@G@@AGE HEADER ERROR.  PRECISION TYPE (S@F@@@@     2INGLE OR DOUBLE) NOT PROET
)@@G@@PERLY SPECIFIED IN COLUMNS 69-74')  @G@@@@9007  FORMAT(' ***** CARRY-OVEEU
)@@G@@R PACKAGE HEADER ERROR.  NO. OF VARIABLES @G@@@@     2(', I3, ')  DOES NEV
)@@G@@OT EQUAL NVARS(', I3, ')  AS PUNCHED ON THE INPU@#@@@@     3T CARD')    EW
)@@G@@@F@@@@9008  FORMAT(' ***** ABOVE CARD IS NOT A CARRY-OVER PACKAGE CARD')EX
)@@G@@@G@@@@9009  FORMAT(' ***** ABOVE CARD HAS IMPROPER SEQUENCE NUMBER IN COEY
)@@G@@LUMNS @#@@@@     211-14')     @F@@@@9010  FORMAT(' ***** CARRY-OVER PACKEZ
)@@G@@AGE MISSING', I4, ' CARDS')   @F@@@@9011  FORMAT(' ***** CARRY-OVER PACKFA
)@@G@@AGE HAS', I4, ' EXTRA CARDS') @G@@@@9012  FORMAT(' ***** ABOVE CARD HAS FB
)@@G@@DATA SET ID (COLS 5 - 9) DIFFERENT F@ @@@@     2ROM THAT ON COP HEADER')FC
)@@G@@@G@@@@9013  FORMAT(' ***** BEGINDATA CARD IS MISSING OR OUT OF SEQUENCE'FD
)@@G@@)     @#@@@@999   PRINT 998   @A@@@@998   FORMAT('0ERROR IN S1RCOP')    FE
)@@G@@@]@@[@      STOP  @[#@@@C     @[@@@@C     @[@@@@C     @[@@@@C     @B@@@@FF
)@@G@@      SUBROUTINE ERPROC( ERRVEC, FMT, N)  @C@@@@      DIMENSION ERRVEC(1FG
)@@G@@), FMT(6,N), MSG(5)     @[@@@@C     @G@@@@C                  INTERNAL SUFH
)@@G@@BROUTINE TO PROCESS ERRORS FROM S1INDC    @[@@@@C     @^@@@@      CALL SFI
)@@G@@1INEP(3)    @^@@@@      DO 2  I = 1, N    @A@@@@      IF( ERRVEC(I) .EQ.FJ
)@@G@@ 0) GO TO 2 @C@@@@      CALL S1INER( MSG, FLD(24,6,ERRVEC(I)))    @^@@@@FK
)@@G@@      CALL S1INHC(1)    @A@@@@      ICOLM1=FLD(18,18,FMT(1,I))    @A@@@@FL
)@@G@@      ICOLM2=FLD(0,18,FMT(2,I))     @A@@@@      PRINT 1,ICOLM1,ICOLM2,MSFM
)@@G@@G     @F@@@@1     FORMAT(' ***** ERROR IN COLUMNS', I4, 1H-, I3, 3H --, FN
)@@G@@5A6)  @#@@@@2     CONTINUE    @]@@@@      RETURN@]@@@@      END   ___00 FO
)@@G@@IF (IFIRST.EQ.1) GO TO 550    @[@@@@C     @F@@@@C***** REPLACE DATA SET FP
)@@G@@LABEL WITH 17-80 OF LAST COPCOMBIN CARD.  @^@@@@)[M[S@@@@@@@            FQ
)@@G@@                                    ****  ATA***BEGINDAA@@@A)[X@*@@@@@@@FR
)@@G@@)@[@)@@@@@@@@@DA@@@@[@@ @@^A@@@@[@@[@@@@@@_____@                  AB@@@AFS
)@@G@@)@ [S@@@@@@@@@[@[[@[@A@@@@[@@;@@8A@@@@[@@7@@< @@@@[@@X@@M @@@@[@@K@@I @@FT
)@@G@@@@[@@FAC@@@A)@K[S@@@@@@@@@UA@@@@[@@P@@I @@@@[@@F@@DA@@@@[@@ @@#A@@@@[@@[FU
)@@G@@@[EA@@@@[@[ @[]A@@AD@@@A)@V[S@@@@@@@@@[@@9@@8A@@@@[@@3@@2A@@@@[@@!@@?A@@FV
)@@G@@@@[@@$@@&A@@@@[@@-@@)A@@@@[@@VAE@@@A)@&@8@@@@@@@)]]@K@@@@@@@______DSL   FW
)@@G@@@[KA@@@@[@[F@[EA@@@@[@[ @[^A@@@@[@@_@@"A@@AF@@@A)@@[F@K)CS^G]A[#@)CS@@@@FX
)@@G@@C/@@@E@[S@A3/K@@HC@@@@[<@@@@[<@@@@[-@@@@]]/,0@@@/K@@B[AG@@@A)@D@F#@@@@@@FY
)@@G@@)]^@K@)@E@<#@-@K0CS@@@@@@@@@[>@@@@]^/,0@@@[@@@[=______BEGDATG@@@[-AH@@@AFZ
)@@G@@)@I[F#@-)K^G]A[9K^CE@@@@@@@@@Q/,0@@@^^K@@QN8LJ_"R@K@[>@[U@A3/K@@HC@@@@[<GA
)@@G@@@@@@[<AI@@@A)@R[F#@-)K0CS^G@-)K^G@@@(@@@[-/K@@@9[@@@[&C/@@@[@[V@A3@@@@A=GB
)@@G@@@@@@A<@@@@[M@@@@A+AJ@@@A)@)[F@^G@-)^[]+-)@@@@@@@@@[@AF/,0@@@/K@@@?(@@@@IGC
)@@G@@H@)@[$C/)@@#[@@@[&C/@@@]/K@@HCAK@@@A)@([F#@-MK^GUA[9KB>@@@@@^^K@@3N8LJ_"GD
)@@G@@^^K@@5N8MJ_"R@)@[>R@K@@G/K@@#E'^@@@@@[>@A3AL@@@A)@2@;]])CS^[#@-)K0@@@@@@GE
)@@G@@)]A@C@ERVEC @[*@A3@@@@A=@@@@A+@@@@@5@@@@A<@@@@@3/,0@@@AM@@@A)]B@C@)@9@3]GF
)@@G@@@-)K0CS^G]@@)]C@C@INROUT/K@@HC@@@@[(@@@@[(@@@@[*@@@@]A/,0@@@______AN@@@AGG
)@@G@@)]D@C@)@_@;#@-]K0CS4[@K0@@@@@@@[:@A3/K@@HC/K@@HC@@@@@^@@@@]C/,0@@@@[%@A3GH
)@@G@@______AO@@@A)[A[M[#@-)K1+A@K@@/K@@[N*@@@@GH@@@[&C/@@@[ @@@@S[@@@[:[@@@[%GI
)@@G@@[@@@@@C/@@@[ @@@@@AP@@@A)[K[F]A-)K0CL^G]A[#@-)YKN8LJ_"R@K@[-R@)@[>@[3@A3GJ
)@@G@@@@@@A+/,0@@@@[2@A3@@@@A>/,0@@@AQ@@@A)[T[F@YO[]])CS^[#@-)@@@@@@@@A&@@@@A+GK
)@@G@@@@@@[Z@@@@A+@@@@[X/,0@@@^^K@[XN8MJ_"^^K@[ZAR@@@A)[+[F#@CS1@^G]A[]A@@@@@@GL
)@@G@@/,0@@@[@@@[?G@@@[>C/@@@E/K@@[.(@@@@GH@@@@^C/@@@[@[4@A3AS@@@A)[:[##@-)K**GM
)@@G@@S^G]A[#@-)@@@@@@@@R@K@A$H[)@[>C[)@[?@[9@A3@@[@]E/,0@@@@[8@A3@@@@A+AT@@@AGN
)@@G@@)[3@:#@JE H@@@@@@@)]E@S@@@@@@@ATA***BEGIND(017H 8L@@[5'^K@@@C8[\_"[[)@[^GO
)@@G@@Q@K@[>AU@@@A)]H@K@)[8@3]=- K0C]A[#A@@@@@@@R@)@@G@]@@A3/K@@#E@@@@[!/,0@@@GP
)@@G@@'^@@@@1A6)  ****,1AV@@@A)["[F9K^C2@-)K0CS^G]@@@@/=@@]FD@@@@@@][@A3@@@@@@GQ
)@@G@@@@@@[$@@@@][/,0@@@^^K@][N8MJ_"AW@@@A)]B[F]C-)K0C@-)K0@@@@@@@C.@@@[C/)@@[GR
)@@G@@[@@@[,G@@@[$C/@@@[/K@@#E@]^@A3@@@@A*/,0@@@AX@@@A)]K[N#A@CS@^@@@@@@/=0@]%GS
)@@G@@+@)@@K @@@@K*@@@@MH[)@[%C.)@@[C.@@@[ @@@@I(@@@@KH[@@@^AY@@@A)]U[F#@C] L#GT
)@@G@@@)C]@)@@@@@@/K@@ -/K@@]'/K@@#]/K@@]'@]D@A3'^@@@@8];@]Y$'0@@GRA0@[,AZ@@@AGU
)@@G@@)]<[N@K^[@K^[@K0]@8];@],$'0@@GRA0@[,/K@@]'/K@@ %/K@@]'/K@@]'/K@@#+/K@@#+GV
)@@G@@/K@@#WBA@@@A)]![F]*-)K^[@K^[@K@@@@@@/K@@#!/K@@#!/K@@#!/K@@#2/K@@#!/K@@#*GW
)@@G@@/K@@]'@]E@A3'^@@@@BB@@@A)]6[F@K^[@K+CS^G]  #@@@@@@[@#U/,0@@@@]F@A3@@@@A*GX
)@@G@@/,0@@@/K@@#!/K@@#!/K@@#!/K@@#!BC@@@A)]_[F#@-MK^EEA[#@-MK**S@@@[@#0/,0@@@GY
)@@G@@'^@@@@@]J@A3@@[@#$/,0@@@/K@@#E'^@@@@@]G@A3BD@@@A)#C[F#@-MK1\E@-BK^G]A@@@GZ
)@@G@@@@@@@@@@@@[$@@@@#I/,0@@@^^K@#IN8LJ_"R@K@@G'^@@@@@]L@A3BE@@@A)#L[F#@-LK0CHA
)@@G@@S^EK]@@@@@@@N@0@#V[@@@@@C/@@@[ @@@@@'^@@@@@]O@A3@@[@#7/,0@@@@]N@A3BF@@@AHB
)@@G@@)#U[F@K0CM^G]A[]M-)K^D@@/,0@@@/K@@#A@]U@A3/,0@@@@]T@A3@@@@A*/,0@@@@]S@A3HC
)@@G@@/K@@HMBG@@@A)#<[F#@-)K=*S^[]+-)K0CO)'^@@@@@]Z@A3@@[@AF/,0@@@/K@@#]@]X@A3HD
)@@G@@/,0@@@@]W@A3@@@@A*BH@@@A)#?[F@K**S^G] D@^G]@@@@@/C@@#7H@@@[%C/@@@[/K@@#EHE
)@@G@@'^@@@@@]+@A3@@[@AF/,0@@@/K@@#]BI@@@A)#5[MK^GU]@C@@@@@@C/@@@#/K@@^O*@@@@GHF
)@@G@@G/@_'';C@@@S;)@@@SC@]@@[R@)@@G/K@@]'*@@@@GBJ@@@A)#_[F#A-)^GUA[#@-)^G@@@@HG
)@@G@@A@K@[1]@@@[^R@K@[\H@@@[0[@)@[0G@)@@GC/)@@G[@@@[\G@@@@GBK@@@A)^C[N9K0]@C]HH
)@@G@@]@@@@@*@@@@GG/@_'';C@@@SC@]@@G8L@@^BO/K@@[/K@@^O*@@@@GH@@@A(C@[J_"BL@@@AHI
)@@G@@)^M[F@K^G@CS^G]A[#@@@@@@R@)@A'A@K@A'R@K@[>[#)@[1N.@@@"C_)@@[ @@@[2/K@@ PHJ
)@@G@@/K@@^OBM@@@A)^V[F9K^DM@-)K0CS^G]A@@@H@@@A(C@@@[3@]9@A3@@@@[3@@@@[1@@@@^YHK
)@@G@@/,0@@@^^K@^YN8MJ_"BN@@@A)^=[MK^G]@)]A[#@C@8L@@^RG_)@@[[@@@[2G@@@[2C/@@@[HL
)@@G@@/K@@^\/K@@^?(@@@[2/K@@^(*@@@@GBO@@@A)^,[N@^G@)]A[#@CS@[#)@[\[@@@[^C#)@[1HM
)@@G@@H@@@[1C/@@[@/K@@HC(@@@@GH@@@[1C/@@@[/K@@ PBP@@@A)^8[F#@/*]^(@K0CS^G]A@@@HN
)@@G@@C@@@[3@#C@A3@@@@[3@@@@[\@@@@^//,0@@@^^K@^/N8LJ_"R@K@[>BQ@@@A) [[F#@C@)CSHO
)@@G@@^G]]-<@@@@@@R@K@@G[@]@@DC@@@A(R@)@[-8L@@^7G_)@@[/K@@ P*@@@@GH@@@A(BR@@@AHP
)@@G@@) E[F9KB>@K)*]A[@K0@@@@@@@@@A+@@@@ L@@@@A<@@@@ J/,0@@@^^K@ JN8LJ_"^^K@ LHQ
)@@G@@N8MJ_"BS@@@A) N[F#@-)^GUA[#@#2@@@@@@C@[\_.N.@@@HQ@K@@GR@K@A$R@)@A%G@@@@GHR
)@@G@@C/@@@[@#I@A3@@@@A=BT@@@A) W[F#@)]A[@K=CS^G] ^@@@/,0@@@@#R@A3@@@@A:/,0@@@HS
)@@G@@/K@@[.[@)@[%C/)@@]8L@@ V[@])[LBU@@@A) >@N#@-)@@@)]J@8@@@@@@@ND IN RD FOUHT
)@@G@@ATA CABEGINDEXTRA ***** (062H0@#S@A3@@[@]JBV@@@A)]Q@*@@@@@@@) $@<]=)C]A@HU
)@@G@@R@K@[*/K@@#E/K@@ A'^@@@@.)    E USEDAST ON     LCOP.  BW@@@A) :[F#A/*#2)HV
)@@G@@CM4[#A-)@@@@@@@@@[@@@@@J@@@@ 1/,0@@@^^K@ 1N8MJ_"^^K@ 7N8LJ_"R@)@@GBX@@@AHW
)@@G@@) 4[F#@-)K0C]A[#@-)KB=@@N8LJ_"/K@@A^(@@@[4R@K@[*@#Y@A3@@@@ 7@@@@[4@@@@@!HX
)@@G@@@@@@A?BY@@@A) .[F@K^[#@-)K0C]A[#@@@@[@@@[5C@@@@,/K@@ (@#-@A3@@@@A?@@@@@[HY
)@@G@@@@@@ _/,0@I<^^K@ _BZ@@@A)AA[#]+-)K0CS[#@-NK@@@@@@@@@@@8L@@AF'^K@@@C8])[LHZ
)@@G@@N.@@@HR@)@A%@#=@A3@@[@]V/,0@@@CA@@@A)]V@)@@@@@@@)AI@<]=-)K@@@@@@@@ @@@@@IA
)@@G@@/K@@AT(@@@@\'^@@@@)     3A6,A2    ,1(005H0CB@@@A)AM[#]C-)K0COOG]A[]=-)@@IB
)@@G@@@@@@@@ @@@[6'^@@@@@#\@A3@@[@^P/,0@@@@#,@A3@@@@A*/,0@@@CC@@@A)AU[F#@-)^@KIC
)@@G@@0CS^G@@@@@@@*@@@@GH@@@A,C@@@@5[@@@[6C/@@@[/K@@A)*@@@@GH@@@A!C@@@@5CD@@@AID
)@@G@@)A<[F@^G]A[@^C+A[#@@@@@@@#9@A3@@@@A*/,0@@@ @@@@@/K@@A0*@@@[6[@@@[6C/@@@]IE
)@@G@@/K@@A&CE@@@A)A?[F]+-)K0CO-@K**S^G@@@@#"@A3@@[@]Z/,0@@@/K@@ ((@@@@@'^@@@@IF
)@@G@@@#'@A3@@[@^*/,0@@@CF@@@A)A5@3#@-)K0CS^G]A@)]Z@S@OVER PCARRY-(025H0@@K@@4IG
)@@G@@@@K@@3@@K@@2@@K@@0@@K@@1@@K@@5CG@@@A)]+[S@@@@@@@H OBSEI7,017 FOR ,N DATAIH
)@@G@@ECISIO20H PR ,A6,0H   OF,/,006 INPUTACKAGECH@@@A)]![S@@@@@@@ ON ,A2,004HII
)@@G@@RUN ,AURING UCED D, PRODIABLES2H VAR,I3,03NS OF RVATIOCI@@@A)]8@C@)A;[#]IJ
)@@G@@=-)K^[@K0CS@H@@@@@C@@@@0@^D@A3/K@@HMN@0@B@/K@@B[(@@@[:'^@@@@6,A2) CJ@@@AIK
)@@G@@)B#[EK^CUA[#@-LK0CS^G@@@@@K@@0@^H@A3@@[@^//,0@@@@^G@A3@@@@A+/,0@@@/K@@BJIL
)@@G@@(@@@@GCK@@@A)BG[MK(C@-)^G@-)@@*@@@@GH@@@[:C/@@@[[@@@[7T/@@@ H@@@[6C/@@@#IM
)@@G@@/K@@ ('^@@@@@@K@@@CL@@@A)BQ[N@^G@-)K[#@@@@"@@@@@C@@@@H"O@@@1C/@@]V/K@@B-IN
)@@G@@*@@@[:[@K@@@"O@@@1C/@@]V/K@@BUCM@@@A)B)[MK&@@-)@@@@@@@@@@@@@@@@@@@@@@@@'IO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/,0@@@[@@@@@CN@@@A)B%[M^G@-)K0CS@@@@T@@@@@IP
)@@G@@G@@@@@C/@@@[@^S@A3@@@@[:@@@@@5@@@@@@@@@@@'@@@@@@@@@@@@CO@@@A)B4[M[#@@-)@IQ
)@@G@@@@@@@@T/)@@#G/)__"W@)@[7;O)@@=H@)@@@C/)@@[W@@@[7;O@@@=G/@__";K@@@[CP@@@AIR
)@@G@@)B"[M^G@]A[#A-)K0@C@@@[+A@K@A'R@K@@G[#)@[+[@@@[^C_)@@[G/@__"[@@@[8H@@@@IIS
)@@G@@G/)__"CQ@@@A)CC[F#A-)YO[]U)CS^G]A@@@@^Y@A3@@@@@@@@@@[$@@@@CH/,0@@@^^K@CHIT
)@@G@@N8MJ_"R@)@A'[@@@@SCR@@@A)CL[F#@)CS[@K%CS^[@@@@@@/K@@C&/K@@CY@^-@A3'^@@@@IU
)@@G@@8];@CR$'0@@BRA0@[$/=@@]BC@@@@@CS@@@A)CU[F@K^[@K+CS^G]  #@@@@@@[@ N/,0@@@IV
)@@G@@@^+@A3@@@@A*/,0@@@/K@@C&/K@@CY/K@@C./K@@C&CT@@@A)C<[F#@-MK^D]A[#@-DK0CS@IW
)@@G@@C@@@[8@^$@A3/,0@@@@^&@A3@@@@A*/,0@@@/K@@ ('^@@@@@^<@A3CU@@@A)C?[F#@CS^EEIX
)@@G@@A[#@-)K(@@@@C/@@@]'^@@@@@@K@[9@^(@A3@@[@ (/,0@@@[@@@[9G/@@@[H@@@[+CV@@@AIY
)@@G@@)C5[F#@C]  #@-)K(C]AG@@@R@K@@G/K@@ ('^@@@@@^,@A3@@[@#$/,0@@@/K@@ ((@@@@GIZ
)@@G@@H@@@[$CW@@@A)C"[F#@/*#2)CM4[#A-)@@@@@@@@@N@@@@@J@@@@D^/,0@@@^^K@D^N8LJ_"JA
)@@G@@^^K@DEN8MJ_"R@)@[*CX@@@A)DB[F#@-)K0C]A[#@-)KB=@@N8MJ_"/K@@DR(@@@[4R@)@[*JB
)@@G@@@^1@A3@@@@DE@@@@[4@@@@@!@@@@A\CY@@@A)DK[F@K^[#@-)K0C]A[#@@@@H@@@[5C@@@@,JC
)@@G@@/K@@ (@^4@A3@@@@A\@@@@@N@@@@DM/,0@I<^^K@DMCZ@@@A)DT[EK^C+A[#@-LK0CS^EK@@JD
)@@G@@'^@@@@@^9@A3@@[@ //,0@@@@^8@A3@@@@A*/,0@@@/K@@D<(@@@@GDA@@@A)D+[F@K0CS[@JE
)@@G@@K+CS^G] ^@@@/,0@@@@^"@A3@@@@A*/,0@@@/K@@D\(@@@@GH@@@[+C@@@@\/K@@ (DB@@@AJF
)@@G@@)D:[F#@-)K(C]A@K0CS^@@@@8LK@D1[@[)@9C@[@@\N.K@@DR@K@A%/K@@ ('^@@@@@^_@A3JG
)@@G@@@@[@ XDC@@@A)D4[F]WCS[@^[#@-<@@@@@@@R@)@@G @@@['8L@@C^G_)@@[/K@@ (*@@@@@JH
)@@G@@@ B@A3@@@@@@/,0@@@DD@@@A)D.[F9K^D%@-)K0CS^G]@@@@/=@@]BC@@@@@@ H@A3@@@@@@JI
)@@G@@@@@@[$@@@@E@/,0@@@^^K@E@N8MJ_"DE@@@A)EA[F#@C] L#@)C]@)@@@@@@/K@@E+/K@@ELJJ
)@@G@@/K@@E5/K@@EL@ K@A3'^@@@@8];@EE$'0@@BRA0@[$DF@@@A)EJ[F@K^G]@-LK0CS^G] C@@JK
)@@G@@'^@@@@@@K@['@ M@A3@@[@ 2/,0@@@/K@@ES(@@@['/K@@E&/K@@ELDG@@@A)ES[#]K-)K0CJL
)@@G@@MOG]  #@-)@@@@@@@@@ R@A3@@[@#$/,0@@@@ Q@A3/,0@@@@ P@A3@@@@A*/,0@@@DH@@@AJM
)@@G@@)E)[F]=)]A[#@)CS^[]+@@@@/,0@@@/K@@E!(@@@['/K@@D/[@@@['G@@@['C/@@@[/K@@ (JN
)@@G@@'^@@@@DI@@@A)E([##@-)K0CO=D]A[#@-L@@@@@@@@/,0@@@@ )@A3@@@@A:/,0@@@'^@@@@JO
)@@G@@@@K@['@ X@A3@@[@ 2DJ@@@A)E1[F#@-)K(C]A[@K**S^G@@@ >@A3@@[@ 2/,0@@@/K@@E/JP
)@@G@@(@@@['/K@@ ('^@@@@@ -@A3@@[@#$DK@@@A)E'[F#@-MK=CS^G]^>#@-<@@C/@@@[R@K@@GJQ
)@@G@@@ (@A3/,0@@@@ *@A3@@@@A+/,0@@@'^@@@@@@K@['DL@@@A)F#[F#AC#2)CNO[#@-)@@@@@JR
)@@G@@@@@@@@@@@@[$@@@@FD/,0@@@^^K@FDN8LJ_"/K@@FS(@@@@GH@@@@^DM@@@A)FG[F#@-)K[#JS
)@@G@@@C]  #@@@@@@@@[@]9/,0@@@/K@@FS(@@@@IH@)@[$C/)@@A/=@@]BC@@@@@@ ?@A3DN@@@AJT
)@@G@@)FP@F#@@@@@@)]9[@@@@@@@@DOFDATTER ENUND AFNOT FO-FILE END-OF***** (076H0JU
)@@G@@@ 1@A3DO@@@A)#[@0@@@@@@@)FQ@V]=)CS0@R@)@@G/K@@ ('^@@@@GE.)   PACKAY-OVERJV
)@@G@@E CARR OF THA CARDDP@@@A)FT[F#@)JE@-BK^G]A[#@@@@@ 8@A3@@@@@@@@@@[$@@@@FYJW
)@@G@@/,0@@@^^K@FYN8MJ_"/K@@ (*@@@['DQ@@@A)F+[F#@)]A@K^D]A[#@@@@@@@ .@A3@@@@A:JX
)@@G@@/,0@@@/K@@GW*@@@@IH@)@[$C/)@@F/=@@GWC@@@@@DR@@@A)F:[F]M-)^GUAH#@-)@@@@@@JY
)@@G@@N.@@@HQ@0@@GR@0@A$R@)@A%R@K@@GG@@@@GC/@@@[@ "@A3/,0@@@DS@@@A)F4[F9K0C#2)JZ
)@@G@@CL4[#@-)@@@@@@@@@@@@@@[$@@@@F'/,0@@@^^K@F'N8LJ_"8L@@F4[@])[#C@#\_.DT@@@AKA
)@@G@@)F.[F#@-<K0CS4G]@CS@@@@@*@@@@IH@)@[$C/)@@#/=@@]BC@@@@@ @@@@SR@0@[>R@)@@GKB
)@@G@@@A^@A3DU@@@A)GA[F@K0CF2)JE@-[K@@@@@@@@@@GI/,0@@@^^K@GIN8MJ_"^^K@GKN8NJ_"KC
)@@G@@[@<@@DC@)@A(/K@@#!DV@@@A)GJ[F#@)CS^G]A@K0COOG@@@@@[@#F/,0@@@[@@@[%C/@@@[KD
)@@G@@@AF@A3@@@@A=@@@@A+@@@@GK@@@@A<DW@@@A)GS[N#@-MK0C@-)^@@N.@@@_C_)@@[/K@@H KE
)@@G@@(@@@@GH@@@[:C/@@@[/K@@[Q @@@[:'^@@@@@AH@A3DX@@@A)G+[F#@CS^G]^(#@-)K0CS@@KF
)@@G@@@AQ@A3@@@@[3@@@@A'@@@@[^/,0@@@[@@@A'G@@@[1C/@@@K[#)@[1DY@@@A)G:[F#@/*]^.KG
)@@G@@@K0CS^G@@@@@G_)@@[@AR@A3@@@@[3@@@@[1@@@@G\/,0@@@^^K@G\N8LJ_"R@K@[-DZ@@@AKH
)@@G@@)#B@K@)G4@;@K0JE@-JK^G@@@@@@A0@@@@G9/,0@@@^^K@G9N8NJ_"R@0@[-8L@@G+______KI
)@@G@@      EA@@@A)G;@F#@@@@@@)#D@K@)G/@<#@-)YO@@@@@@@^^K@H[N8MJ_"R@)@[-@AT@A3KJ
)@@G@@______      @@@@#BEB@@@A)H@[#]Y)CS^G]A[@K^G@@@@@@@@@@@@AV@A3/K@@HMN@0@HBKK
)@@G@@@AU@A3@@@@#D@@@@A&@@@@H[/,0@@@EC@@@A)#F[S@@@@@@@VER PAARRY-OBOVE C THE AKL
)@@G@@D WITHMULATEG ACCULLOWINTHE FO,077H0(1H0,/ED@@@A)#Q[S@@@@@@@ PACKAY-OVERKM
)@@G@@F CARRCARD OFIRST ***** (070H RUN:/) THIS S) FORCKAGE(EE@@@A)#-[S@@@@@@@KN
)@@G@@RD IS ATA CAENDOFD***** (048H ARD)  ADER CCOP HENOT A UT IS GE INPEF@@@AKO
)@@G@@)#?[S@@@@@@@ SET) N DATAORDS IUT RECNO INP***** (035H ORDER)UT OF G OR OKP
)@@G@@MISSINEG@@@A)#7[S@@@@@@@(113H PUT)   IN INERRORSSE OF  BECAUNDONEDIS ABAKQ
)@@G@@ANALYS***** (052H0EH@@@A)^][S@@@@@@@ HEADEON COP5 - 9 LUMNS R.  COR ERROKR
)@@G@@ HEADEACKAGEOVER PCARRY-***** EI@@@A)^H[S@@@@@@@CARRY-***** (105H CARD) KS
)@@G@@NDATA F BEGI7-21 OUMNS 1CH COLOT MATR DO NEJ@@@A)^S[S@@@@@@@ COP H4) FORKT
)@@G@@S 11-1R (COL NUMBEQUENCER.  SER ERRO HEADEACKAGEOVER PEK@@@A)^<[S@@@@@@@KU
)@@G@@ HEADEACKAGEOVER PCARRY-***** (114H ) )    (0000E ZEROMUST BEADER EL@@@AKV
)@@G@@)^,[S@@@@@@@CIFIEDLY SPEPROPER) NOT DOUBLELE OR  (SINGN TYPEECISIOR.  PRKW
)@@G@@R ERROEM@@@A)^9[S@@@@@@@R.  NOR ERRO HEADEACKAGEOVER PCARRY-***** (059H KX
)@@G@@69-74)LUMNS  IN COEN@@@A) ^[S@@@@@@@S PUNC1H)  A,I3,03NVARS(EQUAL S NOT KY
)@@G@@)  DOE3,024HES (,IARIABL. OF VEO@@@A) J[S@@@@@@@Y-OVERA CARRS NOT CARD IKZ
)@@G@@ABOVE ***** (050H ARD)  NPUT C THE IHED ONEP@@@A) U[S@@@@@@@CE NUMSEQUENLA
)@@G@@ROPER AS IMPCARD HABOVE ***** (063H D)    GE CAR PACKAEQ@@@A) >[S@@@@@@@LB
)@@G@@NG,I4, MISSIACKAGEOVER PCARRY-***** (033H 14)   NS 11- COLUMBER INER@@@ALC
)@@G@@) 0[S@@@@@@@ CARDS EXTRA4,012H HAS,IACKAGEOVER PCARRY-***** (029H ARDS) LD
)@@G@@006H CES@@@A) ;[S@@@@@@@FFEREN 9) DILS 5 -ID (COA SET AS DATCARD HABOVE LE
)@@G@@***** (080H )     ET@@@A)AA[S@@@@@@@MISSINRD IS ATA CABEGIND***** (051H LF
)@@G@@R)     HEADEON COP THAT T FROMEU@@@A)AL@)@@@@@@@)HC@V]+-)K0@)AP@C@(016H0LG
)@@G@@@A:@A3@@[@AP/,0@@@CE)   SEQUENUT OF G OR OEV@@@A)AQ@S@)HF@3]=-PK0CS^[@@@LH
)@@G@@/K@@HMN@0@HL@A,@A3@@@@A(/,0@@@'^@@@@COP)  IN S1RERROR EW@@@A)HL[##@-)K0CLI
)@@G@@S^G]A[#@-)@@@@@@@@N[@@B]R@0@B[R@)@B@R@K@A_9\)@A.9!)@A;R]0@A4@A,@A3EX@@@ALJ
)@@G@@)HT@N#@-)@@@)A1@C@)HV@N#@-Q@@@)A3@K@@A,@@]S1RCOP/K@@@@/K@KA1@@F@@@*4@KA1LK
)@@G@@N[K@B#EY@@@A)HX[##@-)K0CS^G]A[#@-)@@@@@@@@^[@@B]A@0@B[A@)@B@A@K@A_9:)@A.LL
)@@G@@9()@A;[^@@A1AA0@A4EZ@@@A)H>[N#@]@)]@)]@@@@/\K@HXC8@@@#/K@@JJ/\K@HXC8@@@#LM
)@@G@@/K@@I0/\K@HXC8@@@D/KH@@@^[K@B#FA@@@A)H\[F@K+CS^G@-)K0]A@@@@@R@K@BAG/)__'LN
)@@G@@C@)@B G@@@BBC/@__"@A3@A7@@@@A*/,0@@@/K@@JVFB@@@A)H8[E[@^G] [#@-)@@@@@@@@LO
)@@G@@@@@@BC@@@@[;/,0@@@[@@@BCC=]@@ /K@@IO(@]@@ [@@@[^R@)@@IFC@@@A)I[[F#@-#K0CLP
)@@G@@S[#@CS^EC@@@/,0@@@[@)@][CC-@@[[@@@]@C^[@@@@A'@A7@@@@A+/,0@@@@A9@A7FD@@@ALQ
)@@G@@)IE[F#@-)K0CS^G@-)K(*@@@8LK@IK'^K@@@C8#)['N.K@@^R@0@A%@@K@][@@K@]@@A.@A7LR
)@@G@@@@[@ATFE@@@A)IN@V]=@@@@@)AT@0@@@@@@@4,1H-,UMNS,IIN COLERROR ***** (023H LS
)@@G@@O/)@@[O/K@@A'^@@@@FF@@@A)AZ@S@)IQ@3@K^[#@-)K0@@@R@K@BDR]0@A8@BC@A7/K@@IULT
)@@G@@N@0@IT8L@@H')     --,5A6I3,3H FG@@@A)IW@:#@-)K0CS^G@@@)A5@C@)I-@F#@@@@@@LU
)@@G@@/K@KA5@@F@@^*4@KA5N[K@BHN[@@BGR@0@BFR@)@BEFH@@@A)I+@F]?@@@@@)A7@K@)I<@<#LV
)@@G@@@-)K0CS@@@@@A@0@BFA@)@BEA@K@BDAA0@A8@BC@@]ERPROC/K@@@@FI@@@A)I$[F#@-)^G@LW
)@@G@@-)^G]@@@@@@@/K@@H0[@K@BBC@VK@][@@@BAC8FK@[[@@@B C8FK@@^[K@BH^[@@BGFJ@@@ALX
)@@G@@)I0[MK^@K^@K^@@@@@C8FK@#[^@@B%[^@@B>C8FK@][^@@B=[^@@B(C8FK@[[^@@B*[^@@B<LY
)@@G@@C8FK@@FK@@@A)I'[N@K[@K^@K^[@@@[^@@B3[^@@BG[^@@B+C8FK@ [^@@BZ[^@@B)[^@@BTLZ
)@@G@@C8FK@^[^@@B:[^@@B&FL@@@A)J^[N@K^@K[@K^[@@@[^@@[A[^@@#S[^@@D7[^@@D5C8FK@BMA
)@@G@@[^@@B!C8FK@A[^@@B][^@@B9[^@@B2FM@@@A)JI[N@^[@K^[@^[@@@[^@@D7[^@@D5C8FK@[MB
)@@G@@[^@@A0[^@@[C[^@@#Q[^@@AL[^@@A*C8FK@@/K@@@@FN@@@A)JS[N@K^@K^[@K^@@@C8FK@[MC
)@@G@@[^@@A0[^@@[C[^@@#Q[^@@AL[^@@A*C8FK@@/K@@@[[^@@[A[^@@#SFO@@@A)J+@:@K^[@K@MD
)@@G@@)A+@)@@@@@@@@@@@@@@@@@[@@@@@@L@@@@@[/K@@@Z[^@@[A[^@@#S[^@@D7[^@@D5FP@@@AME
)@@G@@)A&[S@@@@@@@@@@@[[@@@@@HDOUBLESINGLE@@@@@D@@@@@]@@[@@[      @@@@@#@@[@@@MF
)@@G@@@@@@[]FQ@@@A@@@@@@@@@@@@ HEADEACKAGEOVER PCARRY-***** (114H ) )    (0000MG
)@@G@@E ZEROMUST BEADER EL@@@A@@^@@^@@C@@R@@6@@#@[]@@]@@ @BI@C@@J$@@@@@[@@@@@XMH
)@@G@@S1GTAG      S1TCHS      S1GVAL      S1INHC      S1INEP      S1GTFN      MI
)@@G@@S1RED       S1REDC      S1INHS      S1INP1      S1PRFT      S1INDC      MJ
)@@G@@S1COPI      S1INR1      S1COPS      S1PRST      S1INER      NPRT$       MK
)@@G@@NIO2$       NIO1$       NERR2$      NSTOP$      NERR3$      S1RCOP      ML
)@@G@@@@[@@@@@@@H$S1RCPI      @@[@@@@@@@H%S1RCPJ      @@[@@@@@@@H!BLANK$      MM
)@@G@@^@@@C@@]@@@@S1INBK      ]@@@C@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@*[S@@@*SDFF*@C@@@@          SUBROUTINE S13INT(OFMO
)@@G@@MTLT,OPREC,OVNAME)@^@@@@          COMMON X(1)   @D@@@@          DIMENSIOMP
)@@G@@N OFMTLT(6,1),OPREC(1),XLIST(2)     @D@@@@          DIMENSION OFNAME(2),MQ
)@@G@@DATE(2),OVNAME(2,1)     @ @@@@        IMPLICIT INTEGER (A-Z)@A@@@@      MR
)@@G@@  DEFINE LIST(X,Y)=OFMTLT(X,Y)@[@@@@C     @B@@@@C         INITIALIZATIONMS
)@@G@@ FOR FIRST PASS?  @A@@@@          IF(FIRST.NE.0) GO TO 50   @[@@@@C     MT
)@@G@@@#@@@@          FIRST=1 @[@@@@C     @[@@@@C     @C@@@@C         THIS IS MU
)@@G@@THE FIRST PASS INITIALIZATION @[@@@@C     @[@@@@C     @C@@@@        CALLMV
)@@G@@ S1GVAL('ODROUT',OTYPE,$999,$999)   @C@@@@          CALL S1GVAL('ONCR',OMW
)@@G@@NLR,$999,$999)    @C@@@@          CALL S1GTAG('DATE',FW,NEL,NEL,$999)   MX
)@@G@@@^@@@@          DATE(1)=X(FW) @ @@@@          DATE(2)=X(FW+1)     @C@@@@MY
)@@G@@          CALL S1GVAL('NVARS',ONVARS,$999,$999) @#@@@@          OCNTL=0 MZ
)@@G@@@C@@@@          CALL S1GVAL('CONCAR',OCNTL,$11,$11)   @#@@@@11        CONA
)@@G@@NTINUE@A@@@@        IF(OTYPE.EQ.4) GO TO 13     @D@@@@          CALL S1GNB
)@@G@@TAG('O/FORM',OFMTP,NEL,LOFMT,$999)  @[@@@@C     @A@@@@C TRIM O/FORM OF TNC
)@@G@@RAILING BLANKS    @[@@@@C     @^@@@@        LLOFMT=LOFMT    @ @@@@      ND
)@@G@@  DO 111 I=LLOFMT,1,-1  @C@@@@        IF(X(OFMTP+I-1).EQ.1H )LOFMT=LOFMTNE
)@@G@@-1    @#@@@@111     CONTINUE  @C@@@@        CALL S1GVAL('ODROUT',OTYPE,$NF
)@@G@@999,$999)   @A@@@@        IF(OTYPE.EQ.3) GO TO 12     @D@@@@          CANG
)@@G@@LL S1GTAG('OLCARD',OLCRDP,NEL,NEL,$999)   @#@@@@12      CONTINUE  @D@@@@NH
)@@G@@          CALL S1GTAG('ERRARR',ERRPTR,NEL,NEL,$999)   @#@@@@          OENI
)@@G@@MAX=0 @C@@@@          CALL S1GVAL('OEMAX',OEMAX,$13,$13)    @#@@@@13    NJ
)@@G@@    CONTINUE@C@@@@          CALL S1GVAL('RUNID',RUNID,$999,$999)  @#@@@@NK
)@@G@@          OPAD=0  @#@@@@          OBLOCK=1@C@@@@          CALL S1GTAG('BNL
)@@G@@LOCKO',FW,NWE,NEL,$20)  @^@@@@          OBLOCK=X(FW)  @A@@@@          IFNM
)@@G@@(NWE.EQ.2) OPAD=X(FW+1) @#@@@@20        CONTINUE@C@@[@      CALL S1GVAL(NN
)@@G@@'VISBUF',FWVIS,$999,$999)     @#[@@@        MDATA=0   @B@@@@        CALLNO
)@@G@@ S1GVAL('MDATA',MDATA,$21,$21)@#@@@@21      CONTINUE  @^@@@@        CALLNP
)@@G@@ URRNID(RUN)@A@@@@        IF(OTYPE.EQ.4) GO TO 31     @C@@@@          CANQ
)@@G@@LL S1GTAG('ODFNAM',FW,NWE,NEL,$999) @ @@@@          OFNAME(1)=X(FW)     NR
)@@G@@@ @@@@          OFNAME(2)=X(FW+1)   @C@@@@          CALL S1GVAL('OCHARS'NS
)@@G@@,OCHARS,$999,$999)@#@@@@          OSEQ=0  @B@@@@          CALL S1GVAL('SNT
)@@G@@EQ',OSEQ,$30,$30) @#@@@@30        CONTINUE@B@@@@        CALL S1GVAL('NOSNU
)@@G@@EQ',NOSEQ,$31,$31)@#@@@@        SEQ=0     @#@@@@31      CONTINUE  @[@@@@NV
)@@G@@C     @D@@@@C         DEVELOP FORMAT, AND SCAN VARIABLES FOR TYPE @A@@[@NW
)@@G@@      IF(OTYPE .EQ. 4) GO TO 50     @^@@@@          K=ONVARS+1    @ @@@@NX
)@@G@@          DO 10 J=1,ONVARS    @B@@@@          CALL S1IODR(3,'REA',2,XLISNY
)@@G@@T,NEL)@B@@@@          LIST(1,J)=FLD(0,18,XLIST(1))    @B@@@@          LINZ
)@@G@@ST(2,J)=FLD(18,18,XLIST(1))   @B@@@@          LIST(3,J)=FLD(0,18,XLIST(2OA
)@@G@@))    @B@@@@          LIST(4,J)=FLD(18,6,XLIST(2))    @B@@@@          LIOB
)@@G@@ST(5,J)=FLD(24,6,XLIST(2))    @B@@@@          LIST(6,J)=FLD(30,6,XLIST(2OC
)@@G@@))    @[@@@@C     @ @@@@C       SET UP NATYPE ARRAY   @[@@@@C     @#@@@@OD
)@@G@@          NATYPE=1@A@@@@          IF(LIST(4,J).EQ.6)NATYPE=0@ @@@@      OE
)@@G@@    LIST(J,K)=NATYPE    @[@@@@C     @B@@@@C       CHANGE I FORMAT ITEMS OF
)@@G@@TO F FORMAT @[@@@@C     @B@@@@          IF(LIST(4,J).NE.5) GO TO 41     OG
)@@G@@@^@@@@          LIST(4,J)=3   @^@@@@          LIST(5,J)=0   @^@@@@      OH
)@@G@@    LIST(6,J)=0   @#@@@@41        CONTINUE@#@@@@10        CONTINUE@[@@@@OI
)@@G@@C     @D@@@@C         END OF FIRST DATA SET ONLY INITIALIZATION   @[@@@@OJ
)@@G@@C     @[@@@@C     @#@@@@50        CONTINUE@[@@@@C     @C@@@@C       INITOK
)@@G@@IALIZE ACCUMULATION OF SUM AND SUMSQ@A@@@@        IF(OTYPE.EQ.4) GO TO 6OL
)@@G@@0     @F@@@@        CALL S1BAAI(X(FWVIS),X(FWVIS),1,ONVARS,MDATA,RUN,$99OM
)@@G@@8)    @#@@@@60      CONTINUE  @#@@@@          K=ONVARS@A@@[@      IF(OTYON
)@@G@@PE .EQ. 4) GO TO 70     @C@@@@          CALL TRINT(K,LIST(7,ONVARS),OVNAOO
)@@G@@ME)   @#@@[@ 65   USERO=0     @A[@@@          IF(K.EQ.ONVARS) USERO=1   OP
)@@G@@@A@@@@          IF(USERO.EQ.1) RETURN     @#@@[@      GO TO 80    @A@@[@OQ
)@@G@@ 70   CALL TRINT(K,OFMTLT,OVNAME)   @A@@[@      IF(K .NE. ONVARS) GO TO OR
)@@G@@65    @G@@[@      CALL S1SERR('S13OUT -  USER-SUPPLIED OUTPUT ROUTINE NOOS
)@@G@@T ALLOWED WI@ @@[@     -TH STJBANK OUTPUT.')    @#@@[@      RETURN 1    OT
)@@G@@@#@@[@ 80   CONTINUE    @[@@@@C     @[@@@@C     @C@@@@C         INITIALIOU
)@@G@@ZE S1OTOB BY CALL TO S1OTIN   @[@@@@C     @[@@@@C     @F@@@@          CAOV
)@@G@@LL S1OTIN(OTYPE,OFNAME,OSEQ,OBLOCK,OPAD,OCNTL,OCHARS, @G@@@@     1  OVNAOW
)@@G@@ME,ONVARS,LOFMT,X(OFMTP),OFMTLT,X(OLCRDP),OPREC,ONLR,RUNID, @ @@@@     2OX
)@@G@@  X(ERRPTR),OEMAX,DATE) @#@@@@          RETURN  @[@@@@C     @[@@@@C     OY
)@@G@@@ @@@@C         WRITE DATA ENTRY    @[@@@@C     @[@@@@C     @ @@@@      OZ
)@@G@@  ENTRY S13OUT(TVARR,$) @ @@@@        DIMENSION TVARR(1)    @#@@@@      PA
)@@G@@  REAL TVARR@A@@@@        IF(OTYPE.EQ.4) GO TO 90     @ @@@@        CALLPB
)@@G@@ S1BAAO(TVARR)    @#@@@@90      CONTINUE  @A@@@@          IF(USERO.NE.0)PC
)@@G@@ GO TO 100  @E@@@@C       USER HAS NOT SUPPLIED HIS OWN OUTPUT SUBROUTINPD
)@@G@@E.    @F@@@@C       AS A FAVOR TO HIM, WE SUPPLIED SOME STANDARD ROUTINEPE
)@@G@@S!!!! @B@@@@          CALL S1OTOB(TVARR,ERRFLG,$99)   @#@@@@          REPF
)@@G@@TURN  @[@@@@C     @#@@@@99        RETURN 2@[@@@@C     @[@@@@C     @#@@@@PG
)@@G@@100       CONTINUE@ @@@@          CALL TROUT(TVARR)   @#@@@@          REPH
)@@G@@TURN  @[@@@@C     @[@@@@C     @A@@@@C         ENTRY TO CLOSE OUTPUT     PI
)@@G@@@[@@@@C     @[@@@@C     @A@@@@        ENTRY S13CLS($,FWSRTI,LSORT)@[@@@@PJ
)@@G@@C     @A@@@@        IF(OTYPE.EQ.4) GO TO 110    @^@@@@        CALL S1BAAPK
)@@G@@C     @#@@@@110     CONTINUE  @A@@@@          IF(USERO.NE.0) GO TO 150  PL
)@@G@@@[@@@@C     @[@@@@C     @B@@@@          CALL S1OTCL(ERRFLG,FWSRTI,LSORT)PM
)@@G@@@A@@@@          IF(ERRFLG.EQ.0) RETURN    @#@@@@          RETURN 1@[@@@@PN
)@@G@@C     @#@@@@150       CONTINUE@^@@@@          CALL TREND    @#@@@@      PO
)@@G@@    RETURN  @[@@@@C     @#@@@@998     CONTINUE  @C@@@@        CALL S1SERPP
)@@G@@R('S13OUT ON CALL TO S1BAAI.')@#@@@@        RETURN 1  @E@@@@999       CAPQ
)@@G@@LL S1SERR('S13OUT. ON CALL TO TAGGED STORAGE.') @#@@@@          END     PR
)@@G@@___).NE.5) GO TO 41     @^@@@@          LIST(4,J)=3   @^@@@@          LIPS
)@@G@@ST(5,J)=0   @^@@@@          LIST(6,J)=0   @#@@@@41        CONTINUE@#@@@@PT
)@@G@@10        CONTINUE@[@@@@)@@@V#@)@@@@)@=@K@)@#@V#@-@K0@@@@@@=/,0@@@[@@@@APU
)@@G@@______ODROUTC/@@@[/K@@#5*@@@@AAA@@@A)@A@V#@)C@@@)@&@K@)@D@V#@-@K0@@@@@@&PV
)@@G@@/,0@@@@[E@[%______ONCR  /K@@AN/K@@AN@@@@@BAB@@@A)@G@V#@)C@@@)@*@K@)@J@V#PW
)@@G@@@-[K0@@@@@@*/,0@@@@[F@[%______DATE  /K@@AN/K@@AN@@@@@CAC@@@A)@M[F#@-)K0CPX
)@@G@@]A[#@/*S^^@@C@-@@@[@@@@^C@[J_"R@K@@D@[G@[%/K@@AN@@@@@E@@@@@E@@@@@DAD@@@APY
)@@G@@)@%@K@)@V@3#@-@K0CS^[@@@@@@@@@/K@@AN/K@@AN@@@@@F@@@@@%/,0@@@[@)@@ ______PZ
)@@G@@NVARS AE@@@A)@-@F#@@@@@@)@?@K@)@+@<#@-@K0CS@@@@@@@@@@G@@@@@?/,0@@@ @@@@GQA
)@@G@@______CONCAR@[J@[%AF@@@A)@&@3@K^G@-)@@@@@@)@,@K@@@@@@@______O/FORM(@@@@GQB
)@@G@@H@@@@BC/@@@^@[L@[%/K@@@(/K@@@(AG@@@A)@?[F@K)*S^G]A[#@)CS^G@@C@@@@I@[P@[%QC
)@@G@@/K@@AN@@@@@I@@@@@E@@@@@H@@@@@,/,0@@@/K@@[<AH@@@A)@5[N#@-)^G@JEA@K@/K@@[]QD
)@@G@@*@@@@GH@@@[=C@[J_.]@)@[^R@K@@GH@)@@JC/)@@[G@@@@H[@@@@JAI@@@A)@_@+K0CS@@@QE
)@@G@@)@0@K@)[#@N@K)@@@@/,0@@@8L@@@;______ODROUTP/K@@[]@@@@IH@@@@IC/@@@[AJ@@@AQF
)@@G@@)[ [##@-)K^[#@CS@@)@2@C@OLCARD(@@@@GH@@@@BC/@@@#@[Y@[%/K@@AN/K@@AN@@@@@BQG
)@@G@@@@@@@0AK@@@A)@3@C@)[H@;@K)*S^G]A[#@)@@@@@@/K@@AN@@@@@E@@@@@E@@@@@L@@@@@2QH
)@@G@@/,0@@@/K@@[P______AL@@@A)[O@F#@@@@@@)@4@K@)[P@<]]-)K0CS@@@@@@@@@@E@@@@@MQI
)@@G@@@@@@@4/,0@@@______ERRARR@[-@[%AM@@@A)[T@V#@)CS@@)@6@K@)[W@V#@-@K0@@@@@@6QJ
)@@G@@/,0@@@ @@@@N______OEMAX @[<@[%/K@@AN@@@@@EAN@@@A)[Z@<#@)C]A@)@8@K@)[<@N]QK
)@@G@@@-)@@@@@@@@8/,0@@@______RUNID @[>@[%/K@@[</K@@[<@@@@@NAO@@@A)[>@3#@)C]A[QL
)@@G@@#@@@@@)@'@K@@@@@@@______BLOCKOC/@@@[ @@@@P@[$@[%/K@@AN/K@@AN@@@@@OAP@@@AQM
)@@G@@)[:[F#@-[K0CS^G]A[@K0CS@R@K@@D@[%@[%/K@@["@@@@@E@@@@@R@@@@@D@@@@@'/,0@@@QN
)@@G@@[@@@@QAQ@@@A)[4[F9K0CS[#@C]A[[@@@@@@C@[@@@R@K@[!/K@@["*@@@@GH@@@@RC/@@@]QO
)@@G@@A@K@[![@@@@QC@[J_"AR@@@A)[.@F#@@@@@@)@/@K@)["@<]@-)K0C@@@@@@/K@@AN@@@@@SQP
)@@G@@@@@@@//,0@@@______VISBUF[@@@@PAS@@@A)]]@N@K0@@@@)@"@K@)]^@V#@-@K0@@@@@@@QQ
)@@G@@@@@@@"/,0@@@ @@@@T______MDATA @[\@[%/K@@ANAT@@@A)]B[F#@)C]A[]^-)K0]A@@@@QR
)@@G@@H@@@@BC/@@@^@[3@[%@@@@@U/,0@@@@[1@[%/K@@]F/K@@]F@@@@@TAU@@@A)]K@E@)[@@K@QS
)@@G@@)]L@:@K)*S^G]A@@@@@@@@@R@@@@@D@@@@[@/,0@@@/K@@]2______ODFNAM(@@@@GAV@@@AQT
)@@G@@)]Q@;#@)CS^G#2-)KK)[]@K@______OCHARSC@-@@@[@@@@]C@[J_"R@K@@D@[6@[%/K@@ANQU
)@@G@@@@@@@EAW@@@A)]X@;#@-@K0CS^[@K0@@@@@@)[^@C@SEQ   @[9@[%/K@@AN/K@@AN@@@@@VQV
)@@G@@@@@@[]/,0@@@[@)@@#AX@@@A)[ @C@)]=@;#@-@K0CS^[@K0@@@@@@@[;@[%/K@@]:/K@@]:QW
)@@G@@@@@@@W@@@@[^/,0@@@ @@@@W______AY@@@A)[A@K@)]:@3]@-)K0C]@-)@@@@@@@@@[.@[%QX
)@@G@@/K@@]2/K@@]2@@@@@X@@@@[A/,0@@@______NOSEQ AZ@@@A)]1[F#@CS[@^G]A@@@@@@@@@QY
)@@G@@C/)__"[@@@@ZG@@@@FC/@@@[/K@@#5(@@@@GH@@@@BC/@@@^ @@@@YBA@@@A)]'[F#@-)@^GQZ
)@@G@@]A[#@@@@@@@@[#)@@)[[@@[\[@@@[![@)@[^C_)@@[T/@@@AG.@__8C[@@[,G@)@@FBB@@@ARA
)@@G@@)##@;#@CS^G]A[#@-)@@@@@@)[C@C@REA   [@@@[0O@K@[\O@K@[!R@K@@)G@@@[\T/@@@ARB
)@@G@@C@@@@)BC@@@A)[D@C@)#E@;#@-#K0CS^G]A[#@@@@@@@@@@E@@@@@@@@@@[&@@@@[C@@@@[>RC
)@@G@@/,0@@@A@K@[1______BD@@@A)#L[F#@-)K0]A@K0]A@@@@@@C*)@@[[@[@@#CC@@@[[@-@@]RD
)@@G@@C^)@@@[@[@@[R@K@[0CC@@@@@]A@[%BE@@@A)#U[MK0]A@^G]A@@@@G/@__9C@[@@^R@K@[0RE
)@@G@@[@@@@-C/@@@[[@-@@AC))@@[[@[@@ C=@@@[[@-@@^BF@@@A)#=[MK^G]A[#@CS@@@*@@@@IRF
)@@G@@G/)__'C@-@@^R@K@[0[@[@@@R@K@[1C@@@@- @@@@-/K@@#$*@@@@GBG@@@A)#,[N@@[@K0]RG
)@@G@@A@@@@@H@@@@BC/@@@^R@K@@S8L@@#]G_)@@[ @[@@A @[@@ [@-@@^C/)@@#/K@@#3BH@@@ARH
)@@G@@)#8[EKB>@YO[]C)C@@@@@@@@@@@@^@@@@@#_/,0@@@^^K@#_N8LJ_"^^K@^@N8LJ_"/K@@^BRI
)@@G@@(@@@@GBI@@@A)^[[F#@-)K0CS^[#@-)K0@@@C/)@@^[@@@@ZC@@@@F@]W@[%/K@@AG@@@@@URJ
)@@G@@@@@@@T@@@@@F@@@@[$BJ@@@A)^E[F#@C@-)^[]E-)@@@@@@@@@@@@Z/,0@@@^^K@^NN8W@@@RK
)@@G@@G@@@[,T/@@@A/K@@^>(@@@@IH@)@@BBK@@@A)^N[F@^G]A[#@-)^@@@@@@@@C/@@@[/K@@^XRL
)@@G@@*@@@@GH@@@@FC@@@@Z @@@@+@]-@[%@@@@@@@@@@^NBL@@@A)^W[F#@CS[@K^[#@)@@@@@@@RM
)@@G@@/K@@^5@]&@[%/K@@AXN@0@^</K@@^=*@@@@GH@@@@+C/@@@[[@@@@+BM@@@A)^>[#]E-)[#@RN
)@@G@@-)K0@@)[E@C@S13OUT*@@@@GH@@@@FC@@@@Z@]*@[%@@@@@@@@@@@@@@@@@Z/,0@@@BN@@@ARO
)@@G@@)[F[S@@@@@@@TPUT. ANK OUH STJBED WIT ALLOWNE NOT ROUTIOUTPUTPLIED ER-SUPRP
)@@G@@ -  USBO@@@A)[Q@C@)^![#@K<CS^G@)C]A@@]?@[%/K@@ATN@0@^4C8)@@[@]:@[%@@@@[ERQ
)@@G@@/,0@@@/K@@^Q______BP@@@A)^5[F#@-)K0JE@/*#2)@@@@@^^K@ JN8MJ_"^^K@ FN8LJ_"RR
)@@G@@^^K@ DN8NJ_"R@0@@HR@)@@MR@K@@LBQ@@@A)^"[F]I-)K0CS^G]A[#@-)@@@@@@@@@@@@@VRS
)@@G@@@@@@@G@@@@@P@@@@@Q@@@@@W@@@@@]@@@@@B/,0@@@BR@@@A) B[F#@-)K[@^G]A[@@@@@@@RT
)@@G@@@@@@ J@@@@@O@@@@@C@@@@@@@@@@ F@@@@@@@@@@ D@@@@@I@@@@@FBS@@@A) K[F#@-)K0CRU
)@@G@@]@-)^G@@@@@@(@@@@GH@@@@BC/@@@^@]\@[%/K@@AXN@0@ P@],@[%@@@@@^@@@@@NBT@@@ARV
)@@G@@) T[F@K=]A[#@)CML#@@@@@@@@@@@<@@@@@@/,0@@@/K@@ :*@@@@+@]6@[%@@@@@@/,0@@@RW
)@@G@@/K@@ XBU@@@A) +[F@K0C]@-)^[@K0@@@@@@@]/@[%/K@@ATN@0@ %C8)@@]@];@[%/K@@AXRX
)@@G@@N@0@ &@]'@[%/K@@ $BV@@@A) :[F]OCS^[@K0]A@@@@@@@@(@@@@GH@@@@BC/@@@^@]_@[%RY
)@@G@@/K@@AXN@0@ 0@]"@[%@@@@@@/,0@@@BW@@@A) 4[F@K>*S^G]@-GK0@@@@@@@@@@@@@@@@@@RZ
)@@G@@@@@@@</,0@@@/K@@AB*@@@@+@#^@[%/,0@@@/K@@ 7BX@@@A) .[F#@-)K^[@K0]@)@@@@@@SA
)@@G@@/K@@ATN@0@AAC8)@@[@#E@[%/K@@AXN@0@A]/K@@A#*@@@@<@#C@[%BY@@@A)AA@3#@-HK0CSB
)@@G@@]@-)@@)[R@S@LL TO  ON CAS13OUT@#I@[%/K@@AXN@0@AF@#H@[%/,0@@@@#F@[%BZ@@@ASC
)@@G@@)[U@S@)AG@3]G-)K0]@)@@@@/K@@ATN@0@AMC8)@@[@#K@[%@@@@[R/,0@@@______.     SD
)@@G@@S1BAAICA@@@A)AM@F#@@@@@@)[X@8@@@@@@@@@@@@@______AGE.  D STOR TAGGEALL TOSE
)@@G@@. ON CS13OUT@#L@[%CB@@@A)AN[F]G-)K0C]@-)K0CN)@@@H8)@@[/K@@@@!^)@[*@#M@[%SF
)@@G@@/K@@AXN@0@AS@#M@[%@@@@[X/,0@@@CC@@@A)AW[##@-)K0CS^G]A[#@-)@@@@@@@@*4@K[*SG
)@@G@@N[@@[7R@0@[6R@)@[5R@K@[49\)@[2R]0@[:[^)@[*CD@@@A)[*@C@)A=@N#@-J@@@)[%@K@SH
)@@G@@)A&@N#@-)@@@[^@@[*AA0@[:@#M@@]S13INT/K@@@@/K@K[*@@F@@@CE@@@A)A*[F#@-)K0CSI
)@@G@@S^G@C@@@@@@@C8FK@@/\K@A&C8@@@^/KH@@@^[@@[7A@0@[6A@)@[5A@K@[49:)@[2CF@@@ASJ
)@@G@@)A1[N@K0C@)]@)C]@@/K@@@@[^@@^O[^@@^*[^@@ AC8FK@][^@@ GC8FK@[[^@@^$[@@@[,SK
)@@G@@[^@@ ECG@@@A)A;[MK[@K^[@^@@@@@C8FK@[/\K@A&C8@@@^/K@@ Q[^@@ ?[^@@ V[^@@ )SL
)@@G@@C8FK@@/\K@A&C8@@@#CH@@@A)B @<@^[@@@@)[=@)@@@@@@@@@@@@@@@@@@[@@@@@]@@@@@#SM
)@@G@@      /K@@ 1[^@@ /C8FK@][^@@ ;CI@@@A@@@@@@)#E@;#@-#K0CS^G]A[#@@@@@@@@@@ESN
)@@G@@@@@@@@@@@@[&@@@@[C@@@@[>/,0@@@A@K@[1______BD@@@A@@^@@#@@B@@K@@$@@#@@3@@[SO
)@@G@@@@ @[8@C@@BD@@@@@[S1GVAL      S1GTAG      URRNID      S1IODR      S1BAAISP
)@@G@@      TRINT       S1SERR      S1OTIN      S1BAAO      S1OTOB      TROUT SQ
)@@G@@      S1BAAC      S1OTCL      TREND       NERR4$      NERR3$      S13INTSR
)@@G@@      @@[@@@@@@@A,S13OUT      @@[@@@@@@@A;S13CLS      @@[@@@@@@@B]BLANK$SS
)@@G@@      ^@@@C@@]@@@@@@@@@@*[@@@@*SDFF*@G@@@@      SUBROUTINE S17ANO(NVARS,ST
)@@G@@OBS,FLGARR,R,DR,ROUT,STOR,IAVAIL,H,IH,    @F@@@@     *MAXH,MDATA,HIST,ALSU
)@@G@@PHMD,CODE,NAM,NAMES,CIALPH,BASE,SCR,NWSCR,@B@@@@     *NHIST, VALUE,NMOBSSV
)@@G@@,NVALUE,IHA,IPAR) @[@@@@C     @A@@@@C        SUBROUTINE FOR OTF OPTION  SW
)@@G@@@B@@@@C        NVARS  IS NUMBER OF VARIABLES    @D@@@@C        OBS    VESX
)@@G@@CTOR TO CONTAIN ONE OBSERVATION     @F@@@@C        FLGARR VECTOR CONTAINSY
)@@G@@ING FLAGS TELLING VARIABLE TYPE     @B@@@@C        R,DR   ARRAYS DESCRIBSZ
)@@G@@ED IN S17CPT@G@@@@C        NVALUE VECTOR CONTAINING NUMBERS OF LEVELS FOTA
)@@G@@R ALPHN. VARIABLES@G@@@@C        VALUE  ARRAY CONTAINING LEVELS FOUND FOTB
)@@G@@R ALPHANUMERIC VARS     @[@@@@C     @#@@@@      COMMON X(2) @G@@@@      TC
)@@G@@DIMENSION OBS(2),FLGARR(2),R(10,2),DR(4,2),ROUT(2),STOR(2),H(2),  @G@@@@TD
)@@G@@     *IH(2),NAMES(2,2),BASE(2),NHIST(2),NVALUE(2),SCR(2),VALUE(50,2)    TE
)@@G@@@D@@@@      DIMENSION IPAR(2),NMOBS(2),IHA(2),IOVER(100)    @B@@@@      TF
)@@G@@DOUBLE PRECISION DR,DXBAR,DD,DS2,DS3@ @@@@      INTEGER FLGARR,BASE     TG
)@@G@@@E@@@@      LOGICAL MDATA,ALPHMD,HIST,NAM,FIRST,IPAR    ,FRST1    @^@@@@TH
)@@G@@      DATA NALHST/50/   @ @@@@      EQUIVALENCE (OBSM,NMS)  @[@@@@C     TI
)@@G@@@^@@@@C        INITIALIZATION @[@@@@C     @#@@@@      FRST1=.TRUE.@]@@@@TJ
)@@G@@      NOBS=0@^@@@@      MNOB=99999999     @C@@[@      CALL S1GTAG('NOBS'TK
)@@G@@, IFW, NWE, NEL, $318)  @ [@@@      MNOB = BOOL(X(IFW))     @D@@@@      TL
)@@G@@IF( NWE .EQ. 2) MNOB = BOOL(X(IFW+1)) - MNOB + 1@#@@[@      GO TO 320   TM
)@@G@@@C@@[@ 318  CALL S1GTAG('STJBIN',IFW,DUM,DUM,$320)    @^@@[@      MNOB=BTN
)@@G@@OOL(X(IFW)) @#@@@@320   CONTINUE    @^@@@@      DO 30 J=1,NVARS   @#@@@@TO
)@@G@@      IOVER(I)=0  @^@@@@      R(8,J)=1.0E38     @^@@@@      R(9,J)=-1.0ETP
)@@G@@38    @^@@@@      IPAR(J)=.FALSE.   @ @@@@        IF(MDATA)R(7,J)=0     TQ
)@@G@@@#@@@@      DO 25 I=1,4 @#@@@@      DR(I,J)=0   @#@@@@   25 CONTINUE    TR
)@@G@@@#@@@@   30 CONTINUE    @B@@@@      IF(FLD(0,6,ROUT(1)).EQ.63) GO TO 32 TS
)@@G@@@^@@@@      DO 31 J=1,NVARS   @C@@@@      IF(FLD(24,6,ROUT(J)).EQ.1) IPATT
)@@G@@R(J)=.TRUE. @#@@@@   31 CONTINUE    @#@@@@32    CONTINUE    @[@@@@C     TU
)@@G@@@F@@@@C        DETERMINE HOW MANY OBSERVATIONS CAN BE KEPT IN BUFFER    TV
)@@G@@@ @@@@C        BEFORE CALLING S17CPT@[@@@@C     @ @@@@      MAXNOB=IAVAITW
)@@G@@L/NVARS     @G@@@@      CALL S17PRN(XBAR,S2,S3,S4,DUM,NMOBS,NIOBS,NAMES,TX
)@@G@@NAM,ROUT,DUM,     @A@@@@     *CIALPH,MDATA,.TRUE.,TALPHA)   @#@@@@      TY
)@@G@@FIRST=.TRUE.@]@@@@      IBUF=1@[@@@@C     @E@@@@C        IF HISTOGRAMS STZ
)@@G@@PECIFIED, RETRIEVE INFO ABOUT THEM  @[@@@@C     @ @@@@      IF(.NOT.HISTUA
)@@G@@) GO TO 321 @E@@@@      CALL S17RHI(SCR,NWSCR,MAXH,H,BASE,BASE,NVARS,$99UB
)@@G@@7)    @]@@@@      IBEG=1@#@@@@  321 IBEG1=1     @#@@@@      IALPN=0     UC
)@@G@@@^@@@@      DO 35 I=1,NVARS   @A@@@@      IF(FLGARR(I).EQ.0) GO TO 33   UD
)@@G@@@^@@@@      IALPN=IALPN+1     @^@@@@      NVALUE(IALPN)=0   @#@@@@      UE
)@@G@@NHIST(I)=0  @A@@@@      IF(BASE(I).NE.0) NHIST(I)=1   @^@@@@      BASE(IUF
)@@G@@)=IBEG1     @^@@@@      IBEG1=IBEG1+NALHST@#@@@@      GO TO 35    @ @@@@UG
)@@G@@   33 IF(.NOT.HIST) GO TO 35  @F@@@@      CALL S17RHT(I,H(IBEG),H(IBEG),UH
)@@G@@NHIST(I),DUM,DUM,IDIM,FRST1)  @^@@@@      FRST1=.FALSE.     @#@@@@      UI
)@@G@@BASE(I)=IBEG@^@@@@      IBEG=IBEG+IDIM    @#@@@@   35 CONTINUE    @ @@@@UJ
)@@G@@   40 CALL S1INOB(OBS,IEOF)   @^@@@@      IF(IEOF+1) 70,,50 @]@@@@      UK
)@@G@@RETURN@#@@@@   50 NOBS=NOBS+1 @#@@@@      NSTOR=IBUF  @^@@@@      DO 60 UL
)@@G@@I=1,NVARS   @^@@@@      STOR(NSTOR)=OBS(I)@^@@@@      NSTOR=NSTOR+MAXNOBUM
)@@G@@@#@@@@   60 CONTINUE    @A@@@@      IF(NOBS.LT.MNOB) GO TO 65     @^@@@@UN
)@@G@@      PRINT 61,NOBS     @G@@@@   61 FORMAT('0FIRST',I6,' OBSERVATIONS WEUO
)@@G@@RE READ IN, READING OF DATA HA@ @@@@     *S BEEN TERMINATED.')    @]@@@@UP
)@@G@@      IEOF=1@#@@@@      GO TO 70    @#@@@@   65 IBUF=IBUF+1 @D@@@@      UQ
)@@G@@IF(IBUF.LE.MAXNOB .AND. IEOF.EQ.0) GO TO 40     @#@@@@      IBUF=IBUF-1 UR
)@@G@@@#@@@@   70 IALPN=0     @^@@@@      DO 80II=1,NVARS   @]@@@@      I=II  US
)@@G@@@^@@@@      IND=(I-1)*MAXNOB+1@#@@@@      IND1=BASE(I)@A@@@@      IF(FLGUT
)@@G@@ARR(I).EQ.0) GO TO 75   @]@@@@      NM=0  @^@@@@      IALPN=IALPN+1     UU
)@@G@@@ @@@@      IF(.NOT.ALPHMD) GO TO 79@^@@@@      IFIN=IND+IBUF     @]@@@@UV
)@@G@@      JJ=IND@^@@@@      DO 78 J=IND,IFIN  @A@@@@      IF(STOR(J).NE.CODEUW
)@@G@@) GO TO 77  @#@@@@      NM=NM+1     @#@@@@      GO TO 78    @^@@@@   77 UX
)@@G@@STOR(JJ)=STOR(J)  @#@@@@      JJ=JJ+1     @#@@@@   78 CONTINUE    @ @@@@UY
)@@G@@      NMOBS(I)=NMOBS(I)+NM    @#@@@@   79 NM=IBUF-NM  @G@@@@      CALL SUZ
)@@G@@17ACP(STOR(IND),NM,IHA(IND1),VALUE(1,IALPN),NVALUE(IALPN),  @]@@@@     *VA
)@@G@@NN)   @ @@@@      IOVER(I)=IOVER(I)+NN    @#@@@@      GO TO 80    @G@@@@VB
)@@G@@   75 CALL S17CPT(STOR(IND),IBUF,R(1,I),R(1,I),DR(1,I),H(IND1),H(IND1), VC
)@@G@@@G@@@@     *H(IND1),IPAR(I),HIST,.TRUE.,MDATA,NHIST(I),DUM,DUM,FIRST,IOVVD
)@@G@@ER(I))@#@@@@   80 CONTINUE    @^@@@@      FIRST=.FALSE.     @ @@@@      VE
)@@G@@IF(IEOF.GT.0) GO TO 90  @]@@@@      IBUF=1@#@@@@      GO TO 40    @#@@@@VF
)@@G@@   90 IALPN=0     @^@@@@      DO 120 I=1,NVARS  @A@@@@      IF(FLGARR(I)VG
)@@G@@.EQ.0) GO TO 105  @^@@@@      IALPN=IALPN+1     @#@@@@      IND=BASE(I) VH
)@@G@@@ @@@@      NIOBS=NOBS-NMOBS(I)     @F@@@@      CALL S17ALP(I,NAMES(1,I)VI
)@@G@@,NAM,NHIST(I),IHA(IND),DUMMY,NIOBS, @E@@@@     *NMOBS(I),VALUE(1,IALPN),VJ
)@@G@@NVALUE(IALPN),.TRUE.,IOVER(I))@#@@@@      GO TO 120   @#@@@@  105 OBSM=RVK
)@@G@@(7,I) @^@@@@      NIOBS=NOBS-NMS    @#@@@@      NMOBS(I)=NMS@ @@@@      VL
)@@G@@IF(NIOBS.GT.1) GO TO 110@#@@@@      CALL ERR1   @#@@@@      GO TO 120   VM
)@@G@@@ @@@@  110 DXBAR=DR(1,I) /NIOBS    @#@@@@      DS2=DR(2,I) @#@@@@      VN
)@@G@@DS3=DR(3,I) @#@@@@      XBAR=DXBAR  @^@@@@      DD=DXBAR*DXBAR    @^@@@@VO
)@@G@@      S2=DS2-DD*NIOBS   @B@@@@      S3=DS3-3*DXBAR*DS2+2*NIOBS*DD*DXBAR VP
)@@G@@@D@@@@      S4=DR(4,I)-4*DXBAR*DS3+6*DD*DS2-3*NIOBS*DD*DD   @F@@@@      VQ
)@@G@@CALL S17PRT(I,R(8,I),R(9,I),DUM,R(1,I),DUM,DUM,DUM,DUM,DUM, @#@@@@     *VR
)@@G@@NHIST(I))   @A@@@@      IF(NHIST(I).EQ.0) GO TO 120   @#@@@@      IND=BAVS
)@@G@@SE(I) @G@@@@      CALL S17HDR(I,NHIST(I),H(IND),H(IND),NIOBS,H(IND),NAM,VT
)@@G@@NAMES(1,I), @#@@@@     *IOVER(I))   @#@@@@  120 CONTINUE    @]@@@@      VU
)@@G@@RETURN@#@@@@  997 PRINT 998   @E@@@@  998 FORMAT('0*****ERROR IN S17ANO.VV
)@@G@@ REPORT TO CONSULTANT.')@]@@@@      RETURN@^@@@@      SUBROUTINE ERR1   VW
)@@G@@@^@@@@      CALL S1HEDC(2)    @#@@@@      CALL S1PHED @ @@@@      PRINT VX
)@@G@@1005, I,DR(1,I)   @G@@@@ 1005 FORMAT('0*****UNISTAT1 ERROR.ONLY ONE OBSEVY
)@@G@@RVATION WAS FOUND FOR VA@G@@@@     *RIABLE',I4,' ITS VALUE IS ',G10.5,'.VZ
)@@G@@',/21X,'ANALYSIS FOR THIS VARI@ @@@@     *ABLE WAS DISCONTINUED.')@]@@@@WA
)@@G@@      RETURN@]@@@@      END   ___F=1@#@@@@      )@@[N#@CS^G@-)@K0@C]@@#>WB
)@@G@@G.)__HC9:K@AG.@__IC[@@#XG/)__IC@)@#YR@K@#XG/@__RC@@@#ZAA@@@A)@E[M[#@@-)KWC
)@@G@@0@@@@@G_)__JC#)@#&[#)@#$G_)__HC;:K@QG_@__HC#@@#YG")__HC':K@TG"@__IAB@@@AWD
)@@G@@)@O[F#@-)^G]A@K0@@@@@@@@G_)__HC;:K@S[#)@#%G_)__IC#)@#)[#)@#(G_)__HC#)@#ZWE
)@@G@@[#)@#*AC@@@A)@X[F#@-)^G]A@K0CS@@@@@@G_)__RC#)@#+[#)@#!G_)__HC#)@#+[#)@#?WF
)@@G@@G_)__HC#)@#)[#)@#:AD@@@A)@&[F#@-)^G]A@K0CS@@@@@@G_)__PC#)@#Z[#)@#0G_)__IWG
)@@G@@C#)@#-[#)@#\G_)__HC#)@#<[#)@#,AE@@@A)@\[F#@]A[#@CS^G@@@@@@@@G_)__HC#)@#=WH
)@@G@@[#)@#3G_)__HC#)@#-[#)@#2G_)__HC;:K@C[#)@#1AF@@@A)@8[F#@-)^G]A@K0CS^G@@@@WI
)@@G@@[[@@#8[@)@#7[@@@#6G_)__IC#)@#=[#)@#5G_)__IC#)@#<[#)@#4AG@@@A)[[@<#@-)K0CWJ
)@@G@@S@@@@@)[\@C@)[ @N#@@@@@@C/@@@[[#)@#.@@@@@2[#@@#/[])@#;[]@@#'[[)@#9AH@@@AWK
)@@G@@)[B@V#@-)K0@)]H@K@)[E@V#@-@K0@@@@@]H/,0@@@[@)@[1______NOBS  C@)@#^ @@@[0WL
)@@G@@[@@@[,AI@@@A)[H[F#@-)K0C]A[#@/*S^G@@A@)@#"[@@@[1C@]J_"R@)@[2@[I@#P/K@@[)WM
)@@G@@@@@@[4@@@@[3@@@@[2AJ@@@A)[Q[EK0]@-)KOG@-)@@@@@@@[@@@[1G/@@@[H@@@[1C@]@@@WN
)@@G@@R@)@#"/K@@[Z*@@@@GH@@@[3C/@@@]AK@@@A)[Z@F@@@@@@@)]J@K@)[)@<]@-)K0CS@@@@@WO
)@@G@@@@@@[5@@@@[2@@@@]J/,0@@@______STJBIN/K@@[%AL@@@A)[=[F#@)CS^G#2-)[#@@@@@@WP
)@@G@@R@)@#7G@@@@@C/@__"[@@@[1C@]J_"R@)@[2@[N@#P/K@@[%@@@@[5AM@@@A)[![F#@-)K0]WQ
)@@G@@A[#@-)K0CS@@ @ @@@R[K@#_A[K@#_R[K@[7[@@@#"[@@@[^Q[@@#6R[@@# R@0@#,AN@@@AWR
)@@G@@)[6[N#@@C@CS@@@@@@9*^)@*9?@@#BN.K@@# @#@@,/)@@[.C@@@@@ @]@@1]@#@@0[@#@@\WS
)@@G@@C@@@#AAO@@@A)]@[N@[@@K^G]A@@@@R@)@#8R[K@#7/K@@]O(@@@@IG/)__@C4-@@@8L@@[2WT
)@@G@@O/0@@EO/)@@[8LK@["AP@@@A)]E[N#@@)@]@@@@@@@8L@@]FO/)@@[O.K@@[[@ @@1C/@@@[WU
)@@G@@/K@@]L*@@@@GG/@__"C=]@@1N[@@#"AQ@@@A)]O[F#@]A[]]-)K0CS^G@@@@@@@@[/@@@@[;WV
)@@G@@@@@@['@@@@[9/,0@@@[@@@[8W@@@@@;O@@@=C@@@^@AR@@@A)]X[N#@CS@^G@CS@@@@@@@#DWW
)@@G@@@@@@@@@@@@@@@@@@[5@@@@@@@@@@@@@@@@@@@@@@[.@@@@@@@@@@[5AS@@@A)]$[F#@-)^G]WX
)@@G@@A@K^CK@@@@@@@@@@@@/,0@@@/=)@]'D@)@@@[@@@[_[@@@[!C/@@@[@[2@#P@@@@["AT@@@AWY
)@@G@@)]0[M@[@K0]A@@@@@@[@@@]@C/@@@[@[7@#P/K@@EK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WZ
)@@G@@@@@@@@AU@@@A)]'[MK0CS@^G]A[#@@[@)@[^R@)@#%R[@@#.R@0@#5C_)@@[G@)@@@C/)__"XA
)@@G@@ @@@]][@@@][C/@@@[AV@@@A)#^[F#@C@-)K0CS^G@@@@@@@ @ @@1O[K@#:R[K@]][@@@]]XB
)@@G@@G@@@]]C/@@@[/K@@#R(@]@@1[#)@[7AW@@@A)#H[M^@^G@-)K0C@@@/K@@#0[@@@][G@@@[\XC
)@@G@@[@^@@1C@@@][[@#@@1C/@@@[/K@@#M(@^@@1 @#@@1AX@@@A)#R[N#@-)^@K[@^@@@^^K@#>XD
)@@G@@N8N@@1^^K@#<N8P@@1^^K@#=N8P@@1/=@@#0D@@@@@O[K@#2R[K@]@AY@@@A)#-[F]A-)K^[XE
)@@G@@@K0CS^G]A@@@@@@@[,@@@@@@@@@@[5@@@@[5@@@@#>@@@@#=@@@@#<@@@@[7/,0@@@AZ@@@AXF
)@@G@@)#%[N#@-)K0]A[#@@@G_)@@[O/)@@[O.@@@[O/0@@[[@@@]@G@@@@@[@^@@1C@@@]@ @@@[,XG
)@@G@@@]E@#PBA@@@A)#4[F@K+]A[#@CS^[@@@@@@@/G@@^0/@@@#"G@@@]#C/@@@[@]K@#P@@@@]#XH
)@@G@@@@@@@@/,0@@@8L@@#^BB@@@A)#.[F@K^[#@CS^G]A[#@@@@@[@)@]^C@)@[_[@@@[0G@@@[0XI
)@@G@@C/@@@[@]O@#P/K@@ERN@0@^@/K@@^[BC@@@A)^A[M^G]A@K0CS@K0@C@)@]^[@]@@1C@ )@1XJ
)@@G@@O@)@#9R@)@]^[[@@[^Q[K@#'R[K@#EG[@@@@C.@__"BD@@@A)^K[F#@-)K^G]A[@^[]S@@@@XK
)@@G@@/,0@@@/K@@^)*@@@@K/D@@^SH[@@[1C[@@[08L@@^F[@)@]^G@)@[8BE@@@A)^T@V#@-)K0@XL
)@@G@@)]L@0@@@@@@@NS WERRVATIOH OBSEI6,064FIRST,(006H0@@K@[0@])@#P@@[@]LBF@@@AXM
)@@G@@)]R[@@@@@@@@)^W@F]U@@@@@'^@@@@ATED.)TERMIN BEEN TA HAS OF DAEADING IN, RXN
)@@G@@E READBG@@@A)^X[MK0C@-)K0]A@@@C.@@@[ @@@@I*@@@]#C/)@@[[@@@[_G@@@[_C/@@@[XO
)@@G@@/K@@^0[@@@]#C/@@@[BH@@@A)^$[N#@)@C@-)K0CS@ @@@]]]@@@[_H@@@[_C/@@@[/=0@#5XP
)@@G@@+@)@@K @@@@K*@@@@G/G@@^:H@@@[8BI@@@A)^1[E@K0CS^G]A[#@@@@@@@@O@0@#3R@0@[7XQ
)@@G@@[@@@[7C@@@] [#)@] [@@@[^C_)@@[G@@@@@C/@__"BJ@@@A)^'[F#@-)K0CS[#@CS^G@@@@XR
)@@G@@G@@@#9[@@@]AH/@__"T@@@[8H/@@@[O@)@#4R@)@[7O[@@#?R[@@[7BK@@@A) #[MK0]@-)^XS
)@@G@@G]A@K@/>)@ (D[)@@@[[@@]]G[@@]]C.@@@[ @@@]C/K@@AE(@^@@1[@)@]BC@+@@1BL@@@AXT
)@@G@@) H[F#@-)K0CS^G]A@@@@@@@C@ @@1[]@@[ R[K@@G[])@]EC])@]AH]@@]A[]@@]DG]@@[_XU
)@@G@@C]@@]ABM@@@A) Q[M^@K0CS^[#@-)@C@ @@1O@)@#9R@)@]E/K@@ =[@@@]CG@@@]CC/@@@[XV
)@@G@@/K@@ X*@@@@G"^@@@@BN@@@A) )[M^G]A@K[#@CS@@C@@@]C[@#@@1G@@@]CC@#@@18LK@ PXW
)@@G@@O.K@@[[@)@]EG@)@]EC/)@@[[@]@@1BO@@@A) %[##@-)K0CS^G]A[#@-)@@@@@@@@O[K@#;XX
)@@G@@R[K@]BO@)@#:R@)@]]O[@@#9R[@@]A]@@@]CH@@@[_BP@@@A) 2[N#@CS[@^@K@@@@N8M@@1XY
)@@G@@^^K@A[N8Y@@@^^K@ "N8O@@1^^K@A@N8P@@1G@)@#$T/)@@2C@)@]]BQ@@@A) /[F@K+*]A[XZ
)@@G@@@K^[#@-)@@@@@#A@#P@@@@]F@@@@A]@@@@A[@@@@A@@@@@]C@@@@ "/,0@@@^^K@A]BR@@@AYA
)@@G@@)A [F#@-)K0CS^[#@-)K0CS@R@)@]BO[@@#9R[@@]AR[K@[7/K@@B@[@#@@@G@@@]FC@#@@@YB
)@@G@@R@0@[7BS@@@A)AI[F#@-)K0CS^G]A@K0CS@@C@)@[7G@@@#!T/@@@EC@@@[7O[)@#\R[)@[7YC
)@@G@@O@0@#/R@0@[7O@)@#2BT@@@A)AR[MK0]@C@)]@@@@@^^K@A2N8Y@@%^^K@A1N8W@@*^^K@A,YD
)@@G@@N8O@@1^^K@A0N8W@@*G@)@#(;@)@@-BU@@@A)A-[MK[@^@K[@@@@@@^^K@A'N8Q@@1^^K@A6YE
)@@G@@N8N@@1^^K@A5N8M@@1^^K@A4N8M@@1^^K@A3N8M@@1BV@@@A)A:[F#@)CL=[#@)C]@)@@@@@YF
)@@G@@@@@@A3@@@@A2@@@@A1@@@@A0@@@@[_@@@@A,/,0@@@^^K@A"N8P@@@BW@@@A)A4[F@K^@K0]YG
)@@G@@@-)K0@@@@@@@@@@@[5@@@@[5@@@@A'@@@@@@@@@@#D@@@@@@@@@@A6@@@@A5@@@@A4BX@@@AYH
)@@G@@)A.[F#@)CS[@K0CS^@@@@@@@*@@@@G/C@@BBD@@@]# @@@[!8L@@^5G_)@@[@#D@#P@@@@A"YI
)@@G@@@@@@[!BY@@@A)BA[N@^G]@-)@K0CS@R@0@#.R@)@#*R.@@@[G@@@@@C/@__" @@@]]/K@@#5YJ
)@@G@@[@@@[_C/@@@[/K@@BEBZ@@@A)BK[F#@-)K0CS^G@-)^@@@@@/K@@CA(@D@@1A[@@[7[@@@[^YK
)@@G@@R]K@#%R]@@#1R[0@#0R[K@#,R[)@#5CA@@@A)BT[EK0CS^G]A@K0]A@@@@@@[@)@]AC@<@@1YL
)@@G@@G@@@#$T/@@@2O])@#:R])@]][@@@]]G@@@]]C/@@@[CB@@@A)B+[F#@-)K0]A[#@C@@@@@@@YM
)@@G@@N8M@@0^^K@B;N8Q@@1][@@[.H[@@[0C[B@@1O])@#;R])@]AA])@#"CC@@@A)B:[N@^@K[@KYN
)@@G@@0]@@@@^^K@C[N8U@@1R])@#"^^K@C@N8W@@@^^K@B_N8R@@1^^K@B/N8U@@1^^K@B9CD@@@AYO
)@@G@@)B5[F#@)CL4G]@C]@-)@@@@@@@@@]G@@@@B/@@@@B;@@@@@@@@@@B9@@@@[7/,0@@@^^K@C#YP
)@@G@@N8O@@@CE@@@A)B"[F#@)C]@-)K^G]@@@@@@@C@ @@,/K@@E^@#U@#P@@@@C#@@@@#D@@@@C[YQ
)@@G@@@@@@C@@@@@B_@@@@[.CF@@@A)CB[F#@-)K0CS^G@C@@@@@@@*@@@@I/G)@CLG/)__"[[B@@1YR
)@@G@@C[@@##[@)@[.H@)@##C@)@[0[@@@##CG@@@A)CK[F@K^G]@-)K0@-)@@@@@@")@@#FD@@@@GYS
)@@G@@0@@@@HC@K@[.C@@@#F/K@@E^@#-@#P/,0@FV/K@@COCH@@@A)CT[M^G@-)^G@-)K0@9!)@[>YT
)@@G@@[@)@[9"/)@@I9(@@[:9!C@@,9*@@[(9?C@@?9*)@[>"?)@@G9?*@@%CI@@@A)C<[N#@-)K0CYU
)@@G@@S@K0@@"/@@@G"=@@@M"()@@O"+@@#FD]@@@O0@@@@PC]K@[.C]@@#F9()@[$"()@[>CJ@@@AYV
)@@G@@)C![F#@-)[#@]A[#@@@@@@@@"()@[$"-)@#FD[)@@M0@@@@NC[)@#F; )@@=;[)@@<C[)@[.YW
)@@G@@[@@@['CK@@@A)C6[F#@-)K0CS@^G]A@@@@@@9!@@[>[[)@[;".)@@M"-)@@K">@@@O"%@@[(YX
)@@G@@"%@@#H9,@@[>"()@[>CL@@@A)C_[F#@-)^G]A[#@CS@@@@@@T.@@@#C[@@[."&@@@K"%@@[(YY
)@@G@@"%@@#L9,@@[$">C@@0"(@@[:"(@@#JCM@@@A)DC[MK0@-)K0CS@K0@][@@[/".@@@K">@@@OYZ
)@@G@@"(@@[$"(@@[$"-@@#FD[@@@K0@@@@LC[@@#F; @@@=CN@@@A)DM[MK[@^@K^D]A@@@@@@@[7ZA
)@@G@@/,0@@@^^K@D>N8Q@@1^^K@DZN8P@@*^^K@DWN8P@@\^^K@DXN8P@@0CO@@@A)DW[F@K^G]@-ZB
)@@G@@)K0CS^G]A@@@@@@@[5@@@@[5@@@@[5@@@@[5@@@@[5@@@@DZ@@@@[5@@@@DX@@@@DWCP@@@AZC
)@@G@@)D>[F@K0]@CS^G]A@@@@@@@@N8U@@1O])@#2R])@]A[@@@]AC@#@@1/K@@E^(@A@@1@#:@#PZD
)@@G@@@@@@D>CQ@@@A)D,[N@^@K[@^[#@@@@N8O@@@^^K@E[N8M@@0^^K@D_N8U@@1^^K@D.N8U@@1ZE
)@@G@@^^K@D;N8Q@@1^^K@D/CR@@@A)D8[F@K=*S^[@K^G]@@@@@@@@@@@@@@@@@D_@@@@[.@@@@D.ZF
)@@G@@@@@@D/@@@@D;@@@@[7/,0@@@^^K@E]CS@@@A)E[[N@K^G@@@@@@@@@O"@@@CO.0@@[O.K@@EZG
)@@G@@O.)@@[O/0@@[O/)@@]O.@@@[@#\@#P@@@@E]@@@@E[CT@@@A)EF[]K^[@K0CN^G]A@)]Z@C@ZH
)@@G@@(044H0@#3@#P@@[@]Z/,0@@@@#2@#P/K@@ERN@0@EJ8L@@BQO"K@@[CU@@@A)])[@@@@@@@@ZI
)@@G@@)EN@F]U@@@@@'^@@@@.)    ULTANTO CONSPORT TNO. REN S17ARROR I*****ECV@@@AZJ
)@@G@@)EO[F@K^G]A[#@-)K0CS^G@@9\)@^D9\@@^B9,)@^ 9,@@^#9!)@^[R]0@#Q@#6@#P/K@@ERZK
)@@G@@N@0@EQCW@@@A)EX[##@-)K0CS^G]A[#@-)@@@@@@@@R]@@^MR[0@^LR[)@^KR[K@^JR[@@^IZL
)@@G@@R@0@^HR@)@^GR@K@^FCX@@@A)E>@:#@-)K0CS^G@@@)#N@C@)E%@F#@@@@@@/K@K#N@@F@@WZM
)@@G@@*4@K#NN[K@^QN[@@^PR])@^OR]K@^NCY@@@A)E:@F]W@@@@@)#P@K@)E?@<#@-)K0CS@@@@@ZN
)@@G@@9%)@^ 9%@@^#9()@^[AA0@#Q@#6@@]S17ANO/K@@@@CZ@@@A)E0[##@-)K0CS^G]A[#@-)@@ZO
)@@G@@@@@@@@A[)@^KA[K@^JA[@@^IA@0@^HA@)@^GA@K@^F9:)@^D9:@@^BDA@@@A)E8[F#@-)K0CZP
)@@G@@S^G]A[@K0@@@G/@__HC@@@#Z/K@@FZ^[K@^Q^[@@^PA])@^OA]K@^NA]@@^MA[0@^LDB@@@AZQ
)@@G@@)F[[##@-EK0CS^DUA[]S-)@@@@@@@@@@[@]*/,0@@@@#;@#U/,0@@@@#'@#U@@@@#R/,0@@@ZR
)@@G@@[@@@^SDC@@@A)FD[##@-)K0]A@^D8@)]*@C@(064H0'^0@@@C8[@@%[[)@@[G[)@^S;[)@@-ZS
)@@G@@C[)@[7@@K@[7@#/@#UDD@@@A)]([S@@@@@@@BLE,I4 VARIAND FORAS FOUTION WBSERVAZT
)@@G@@ ONE OR.ONLY1 ERRONISTAT*****UDE@@@A)]4[S@@@@@@@ARIABLTHIS VS FOR NALYSIZU
)@@G@@,044HA.,/21X5,001H ,G10.LUE ISITS VA,014H DF@@@A)]_@)@@@@@@@)FL@<]U)C]A@ZV
)@@G@@@@@@@@@^[@#U/K@@FPN@0@FO'^@@@@.)    TINUEDDISCONE WAS DG@@@A)FP@<#@-)K0CZW
)@@G@@S@@@@@)#S@C@)FT@N#@-I@@@/K@@@@/K@K#S@@F@@[*4@K#SR@K@^V9!)@^TR]0@#VDH@@@AZX
)@@G@@)#U@K@)FV@;#@-)K0C@)C@@@[^@@]5[^@@]"C8FK@@/K@@E_A@K@^V9()@^TAA0@#V@^[@@]ZY
)@@G@@ERR1  DI@@@A)F+[N@K^[@K[@K0]A@[@@@#)C8FK@][@@@#>[^@@#6C8FK@[[^@@^2[^@@[:ZZ
)@@G@@[^@@]Q[^@@^B[^@@BGDJ@@@A)F?[MK0]A@K^G@-)@@C8FK@C[@K@^@C@VK@B[@@@#X[^@@]+AA
)@@G@@C8FK@ [@@@#ZC8FK@^[@@@#+C8FK@#DK@@@A)F6[N@^@K^[@^[@@@@[^@@A7[^@@]?C8FK@GAB
)@@G@@[^@@]>[^@@['[^@@A9C8FK@F[^@@]1C8FK@E[^@@]2DL@@@A)G@[N@^@K[@K^@@@@@C8FK@KAC
)@@G@@[^@@E@[^@@]-[^@@B'C8FK@J[^@@ QC8FK@I[^@@ FC8FK@H[^@@#TDM@@@A)GE[N#@)]@C]AD
)@@G@@@-)^@@[^@@]\C8FK@N[@@@#=[^@@]4[^@@]3C8FK@M[^@@]=C8FK@L[^@@])[@@@#&DN@@@AAE
)@@G@@)GO[MK[#@CS^@K0C@@/K@@@@[@@@#YC8FK@U[^@@]Y[@@@#-C8FK@R[@@@#<C8FK@P[^@@]0AF
)@@G@@C8FK@ODO@@@A)#^[S@@@@@@@@@@@@@K]0@@@@@@@@@K/@@@@@@[@@@@@@@@[@@@@@@@@@@@@AG
)@@G@@Z/?;NF@@]@@@@ .Y#_DP@@@A)#J@)@@@@@@@)#R@C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AH
)@@G@@@@@@@]@@@@@@K#0@@@@@@@@@K#)@@@DQ@@@A@@@@@@@-)K0CS@^G]A@@@@@@9!@@[>[[)@[;AI
)@@G@@".)@@M"-)@@K">@@@O"%@@[("%@@#H9,@@[>"()@[>CL@@@A@@^@@#@@B@@K@@$@@[@@:@@[AJ
)@@G@@@@ @^W@C@@GY@@@@@]S1GTAG      S17PRN      S17RHI      S17RHT      S1INOBAK
)@@G@@      S17ACP      S17CPT      S17ALP      S17PRT      S17HDR      S1HEDCAL
)@@G@@      S1PHED      NPRT$       NIO2$       NERR3$      NIO1$       S17ANOAM
)@@G@@      @@[@@@@@@@E?BLANK$      ^@@@C@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@*[S@@@*SDFF*@G@@@@      SUBROUTINE S63ANL(B,A,Q,AO
)@@G@@P,R,S,T,U,V,W,X,Y,Z,XM,SD,TSTRAT,SDSV,    @B@@@@     -   ZZ,NAM,BABUF,BAAP
)@@G@@VBUF,BAVAR,NMS)   @ @@@@      IMPLICIT INTEGER (A-Z)  @F@@@@      DIMENSAQ
)@@G@@ION B(1),A(1),Q(1),P(1),R(1),S(1),T(1),U(1),V(1),W(1) @B@@@@      DIMENSAR
)@@G@@ION X(1),Y(1),Z(1),XM(1),SD(1)@^@@@@      REAL XM,T,X,Y,V,SD@]@@@@      AS
)@@G@@REAL R@A@@@@      DIMENSION TSTRAT(1),SDSV(1)   @^@@@@      REAL TSTRAT,AT
)@@G@@SDSV  @B@@@@      DIMENSION NAM(2,1),NMS(2,1),ZZ(1)   @#@@@@      REAL ZAU
)@@G@@Z     @C@@@@      DIMENSION BABUF(1),BAVBUF(1),BAVAR(1)     @[@@@@C     AV
)@@G@@@[@@@@C     @D@@@@C            ANALYSIS CONTROL ROUTINE FOR FACTOR3.    AW
)@@G@@@[@@@@C     @[@@@@C     @A@@@@      REAL DF,TEMP,SUM,SSQ,DFBETA   @ @@@@AX
)@@G@@      EQUIVALENCE (TEMP,KEMP) @^@@@@      REAL TEST,TSTVAL  @[@@@@C     AY
)@@G@@@#@@@@      COMMON IX(2)@[@@@@C     @G@@@@      COMMON/ S6BLK  /INP,NX ,AZ
)@@G@@NC,VECT, RAW, RES,TCOP,TPAK,TRAW,TROT,    @G@@@@     1PCOP,PPAK,PRAW,PROBA
)@@G@@T,    MAX,QMAX,MLE,FPCA,NF,DET  ,NRF,ITER,EPS,  @G@@@@     2DELTA,CRIT,PBB
)@@G@@ROC,IO(4),ITERS   ,IORTH,SCORES,DF,NOBS,INCOM,H(200), @^@@@@     3ICALC,BC
)@@G@@E(4),F(4)   @B@@@@      DATA E /'0***** FACTOR3 ERROR NO.'/ @B@@@@      BD
)@@G@@DATA F /'0***** FACTOR3 NOTE NO.'/  @[@@@@C     @E@@@@      COMMON/S6FMTBE
)@@G@@S/NAMPRO(7),SUBNAM(7),DATFMT(5),VECFMT(2),@F@@@@     *NAMCOV(7),GATFMT(6BF
)@@G@@),GECFMT(3),FUMFMT(6),GUMFMT(3),LUMFMT(6),@E@@@@     *MUMFMT(6),NUMFMT(4BG
)@@G@@),NAMFMT(6),OFORM(5),QFORM(5),IBLANK@ @@@@      DATA IBLANK/6H      /   BH
)@@G@@@F@@@@      DATA ( DATFMT(I),I=1,5)/30H(1X,I3,1X,A6,A2,1X,12F9.3)    /  BI
)@@G@@@C@@@@      DATA ( VECFMT(I),I=1,2)/12H(14X,12F9.3)/  @D@@@@      DATA (BJ
)@@G@@ NUMFMT(I),I=1,3)/18H(14X,12(4X,I3,2X))/  @G@@@@      DATA ( MUMFMT(I),IBK
)@@G@@=1,6)/36H(14H VARIABLE NO. ,12(4X,I3,2X))    /  @G@@@@      DATA (NAMFMTBL
)@@G@@(I),I=1,6) /36H(14H NO.   NAME   ,3X,12(1X,A6,A2)) /  @F@@@@      DATA (BM
)@@G@@ GATFMT(I),I=1,6)/31H(1X,I3,1X,A6,A2,1X,10G11.5)/     @C@@@@      DATA (BN
)@@G@@ GECFMT(I),I=1,3)/13H(14X,10G11.5)/ @F@@@@      DATA ( LUMFMT(I),I=1,6)/BO
)@@G@@32H(14H VAR. / FACTOR,12(4X,I3,2X))/@F@@@@      DATA ( FUMFMT(I),I=1,6)/BP
)@@G@@32H(14H VAR. / FACTOR,10(5X,I3,3X))/@D@@@@        DATA(GUMFMT(I),I=1,3)/BQ
)@@G@@18H(11X,10(5X,I3,3X))/  @E@@@@      DATA ( OFORM(I),I=1,5)/25H8F8.5)    BR
)@@G@@                 /@B@@@@      DATA ( QFORM(I),I=1,5)/25H6E10.5)   @[@@@@BS
)@@G@@C     @D@@@@      COMMON /S63FMT/EATFMT(5),MAMFMT(6),BUMFMT(6)    @C@@@@BT
)@@G@@      DATA EATFMT/'(1X,I3,1X,A6,A2,2X,9G12.5)'/ @E@@@@      DATA MAMFMT/BU
)@@G@@'(14H NO.   NAME   ,5X,9(A6,A2,4X))'/     @E@@@@      DATA BUMFMT/'(14H BV
)@@G@@VARIABLE NO. ,9(6X,I3,3X))   '/     @[@@@@C     @ @@[@      COMMON /S63BBW
)@@G@@LC/ C(300)  @E[@@@      COMMON /S63NBK/IPCOEF,IRPCOR,MAXCOR,NRMLZE,BWEPSBX
)@@G@@,BWDEL@^@@@@      REAL BWEPS,BWDEL  @[@@@@C     @D@@@@      COMMON /S63BBY
)@@G@@SV/ NADD,BANKSC(2),BANCHR,BANEXT    @[@@@@C     @^@@@@      DIMENSION ETBZ
)@@G@@MES(6)@E@@@@      DATA ETMES /36HEND OF COMPUTATIONS FOR MODEL         /CA
)@@G@@@[@@@@C     @B@@@@      DIMENSION FNAM(2)/'FT3$$1      '/   @[@@@@C     CB
)@@G@@@^@@@@      EXTERNAL S1SVOB   @[@@@@C     @[@@@@C     @^@@@@C           CC
)@@G@@  INITIALIZE@[@@@@C     @^@@@@      CALL S1HEDC(0)    @B@@@@      CALL SCD
)@@G@@1GVAL('INTYPE',INP,$99,$99)   @B@@@@      CALL S1GVAL('CPTYPE',CPTYPE,$9CE
)@@G@@9,$99)@B@@@@      CALL S1GVAL('NVARS',NV,$99,$99)     @B@@@@      CALL SCF
)@@G@@1GVAL('NMODEL',NMODEL,$99,$99)@E@@@@      IF(NMODEL .NE. 0) CALL S1IODR(CG
)@@G@@1,'REWIND',0,0,DUM)     @B@@@@      CALL S1GVAL('SCORES',SAVFLG,$99,$99)CH
)@@G@@@B@@@@      CALL S1GVAL('BANEXT',BANEXT,$99,$99)@]@@@@      MLE=0 @A@@@@CI
)@@G@@      CALL S1GVAL('MLE',MLE,$99,$40)@#@@@@ 40   CALL S1TIMI @^@@@@      CJ
)@@G@@CALL S1INHC(2)    @C@@@@      CALL S1GTAG('OVERFL',LVFW,DUM,DUM,$999)   CK
)@@G@@@C@@@@      CALL S1GTAG('IDMAT',LSUBHD,DUM,DUM,$999)  @^@@@@      LSUBHDCL
)@@G@@=LSUBHD+2   @ @@@@      IX(LSUBHD)='      '     @ @@@@      IX(LSUBHD+1)CM
)@@G@@='      '   @#@@@@      LOCFNM=0    @C@@@@      CALL S1GTAG('FOTNMS',LOCCN
)@@G@@FNM,DUM,DUM,$50)  @^@@@@ 50   NAMES=NMS(1,1)    @^@@[@      DO 60 J=1,30CO
)@@G@@0     @][@@@ 60   C(J)=J@ @@@@      CALL S1VLSD(Z,NUSED,$99)@#@@@@      CP
)@@G@@NVTOT=NV    @#@@@@      NV=NUSED    @A@@@@      IF(SAVFLG .NE. 0) SAVFLGCQ
)@@G@@=NVTOT@#@@@@      DO 65 J=1,NV@]@@@@      K=Z(J)@^@@@@      NAM(1,J)=NMSCR
)@@G@@(1,K) @^@@@@      NAM(2,J)=NMS(2,K) @#@@@@ 65   Z(J+NV)=Z(J)@^@@@@      CS
)@@G@@NW=NV*(NV+1)/2    @#@@@@      GO TO 100   @ @@@@ 99   CALL S1SERR('FACTOCT
)@@G@@R3.') @#@@@@      GO TO 999   @[@@@@C     @^@@@@C             INPUT DATACU
)@@G@@@[@@@@C     @]@@@@ 100  IERR=0@A@@@@      GO TO (102,120,150,160),INP   CV
)@@G@@@#@@@@ 102  KEMP=Z(1)   @ @@@@      IF(NV .EQ. NVTOT) Z(1)=0@F@@@@      CW
)@@G@@CALL S1RDI2(NV,0,SAVFLG,S1SVOB,DF,XM,T,X,Y,R,B,IERR,0,Z)    @#@@@@      CX
)@@G@@Z(1)=KEMP   @A@@@@      IF(IERR .EQ. 0) GO TO 190     @#@@@@ 105  PRINT CY
)@@G@@9100,E@B@@@@ 9100 FORMAT(4A6,' 15. ERRORS IN INPUT')  @#@@@@      GO TO CZ
)@@G@@999   @C@@@@ 120  CALL S1RCOP(XM,X,Y,R,DF,NV,'SINGLE',IERR) @A@@@@      DA
)@@G@@IF(IERR .NE. 0) GO TO 105     @]@@@@      M=0   @^@@@@      DO 130 J=1,NDB
)@@G@@V     @]@@@@      M=M+J @#@@@@ 130  T(J)=R(M)   @#@@@@      GO TO 190   DC
)@@G@@@A@@@@ 150  CALL S1RLTM(NV,R,T,E,IERR,NVJ)@]@@@@      DF=0  @ @@@@      DD
)@@G@@IF(NVJ .EQ. 0) GO TO 105@#@@@@      GO TO 190   @B@@@@ 160  CALL S1RLT2(DE
)@@G@@NV,R,T,E,IERR,NVJ,SD)   @]@@@@      DF=0  @ @@@@      IF(NVJ .EQ. 0) GO DF
)@@G@@TO 105@^@@@@      DO 170 J=1,NVJ    @ @@@@      SDSV(J)=SQRT(ABS(SD(J)))DG
)@@G@@@^@@@@ 170  SD(J)=SDSV(J)     @A@@@@ 190  CALL S1TIMA(2,'END OF INPUT') DH
)@@G@@@[@@@@C     @G@@@@C             OUTPUT FOR ALL VARIABLES / SET UP TEST ADI
)@@G@@ND SDV VECTORS    @[@@@@C     @]@@@@ 200  TCOP=0@]@@@@      PCOP=0@]@@@@DJ
)@@G@@      RAW=0 @#@@@@      NOCOR=0     @#@@@@      COVAR=0     @B@@@@      DK
)@@G@@CALL S1GVAL('FILECO',TCOP,$205,$205)@B@@@@ 205  CALL S1GVAL('CARDCO',PCODL
)@@G@@P,$210,$210)@B@@@@ 210  CALL S1GVAL('PRODUC',RAW,$215,$215) @B@@@@ 215  DM
)@@G@@CALL S1GVAL('NOCOR',NOCOR,$220,$220)@C@@@@ 220  CALL S1GVAL('COVARM',COVDN
)@@G@@AR,$225,$225)     @#@@@@ 225  CONTINUE    @#@@@@      ICALC=2     @ @@@@DO
)@@G@@      IF(INP .EQ. 3) GO TO 250@ @@@@      IF(INP .EQ. 4) GO TO 280@A@@@@DP
)@@G@@      IF(CPTYPE .EQ. 2) ICALC=1     @#@@@@      NCORP=1     @ @@@@      DQ
)@@G@@IF(NOCOR .NE. 0) NCORP=0@G@@@@      CALL S1MOP(NV,DF,XM,T,R,X,Y,XM,V,U,SDR
)@@G@@D,R,NAM,Z,1,RAW,COVAR,NCORP,  @B@@@@     -   PCOP,TCOP,DUMMY,ICALC,MLE,IDS
)@@G@@ERR)  @A@@@@      IF(IX(LVFW) .NE. 0) GO TO 999 @A@@@@      IF(NMODEL .EDT
)@@G@@Q. 0) GO TO 300   @E@@@@      IF(NMODEL .GT. 1) CALL S1VCSR('WRITE',FNAMDU
)@@G@@,R,NW,$999) @F@@@@      IF(NMODEL .EQ. 1  .AND.  ICALC .EQ. 1  .AND.  NODV
)@@G@@COR .EQ. 0) @C@@@@     -   CALL S1VCSR('WRITE',FNAM,R,NW,$999)    @#@@@@DW
)@@G@@      CALL S1VFWC @^@@@@      DFBETA=DF*2**-26  @^@@@@      DO 230 J=1,NDX
)@@G@@V     @#@@@@      SSQ=T(J)    @ @@@@      TSTRAT(J)=SSQ/(DF*V(J)) @^@@@@DY
)@@G@@      SDSV(J)=SD(J)     @#@@@@      SUM=XM(J)   @ @@@@      TEMP=(DF*SSQDZ
)@@G@@-SUM*SUM)/DF@A@@@@      IF(X(J) .EQ. Y(J)) TEMP=0     @C@@@@      IF(TEMEA
)@@G@@P/SSQ .GE. 2.*DFBETA) GO TO 230     @^@@@@      SDSV(J)=1.0E+38   @#@@@@EB
)@@G@@ 230  CONTINUE    @A@@@@      CALL S1VFWT(6HANL  1,$999)    @#@@@@      EC
)@@G@@TEST=1.E7   @ @@@@      IF(INP .NE. 1) GO TO 245@^@@@@      DO 235 J=1,NED
)@@G@@V     @#@@@@      ZZ(J)=SD(J) @^@@@@ 235  ZZ(J+NV)=XM(J)    @^@@@@      EE
)@@G@@DO 240 J=1,NV     @]@@@@      K=Z(J)@#@@@@      SD(K)=ZZ(J) @^@@@@ 240  EF
)@@G@@XM(K)=ZZ(J+NV)    @#@@@@ 245  CONTINUE    @D@@@@      IF(ICALC .NE. 1  .EG
)@@G@@OR.  NOCOR .NE. 0) GO TO 300  @^@@@@      CALL COMCOR(R)    @G@@@@      EH
)@@G@@CALL S1PLTM(R,NAM,Z,37HC O R R E L A T I O N  M A T R I X        ,@B@@@@EI
)@@G@@     -   0,0,DATFMT,NAMFMT,MUMFMT,12,NV)  @B@@@@      CALL S1VCSR('READ'EJ
)@@G@@,FNAM,R,NW,$999)  @#@@@@      GO TO 300   @[@@@@C     @D@@@@ 250  IF(NOCEK
)@@G@@OR .NE. 0  .AND.  IERR .EQ. 0) GO TO 260  @G@@@@      CALL S1PLTM(R,NMS,EL
)@@G@@Z,37HC O R R E L A T I O N  M A T R I X     ,0, @F@@@@     - 'COMPUTED EEM
)@@G@@LSEWHERE AND INPUT TO FACTOR3 ',DATFMT,NAMFMT,  @^@@@@     -   MUMFMT,12EN
)@@G@@,NVJ) @A@@@@      IF(IERR .NE. 0) GO TO 105     @E@@@@ 260  IF(NMODEL .GEO
)@@G@@T. 1) CALL S1VCSR('WRITE',FNAM,R,NW,$999) @A@@@@ 265  IF(NMODEL .EQ. 0) EP
)@@G@@GO TO 300   @#@@@@      TEST=1.E5   @^@@@@      DO 270 J=1,NV     @#@@@@EQ
)@@G@@ 270  TSTRAT(J)=1.@#@@@@      GO TO 300   @[@@@@C     @G@@@@ 280  IF(NOCER
)@@G@@OR .NE. 0 .AND. IERR .EQ. 0 .AND. COVAR .EQ. 0) GO TO 285   @ @@@@      ES
)@@G@@CALL S1HED2(NVJ,9,0)    @G@@@@      CALL S1PLTM(R,NMS,Z,37HC O V A R I AET
)@@G@@ N C E  M A T R I X        ,0,@D@@@@     -   'COMPUTED ELSEWHERE AND INPEU
)@@G@@UT TO FACTOR3 ',  @A@@@@     -   EATFMT,MAMFMT,BUMFMT,9,NVJ)@#@@@@      EV
)@@G@@COVAR=1     @A@@@@      IF(IERR .NE. 0) GO TO 105     @A@@@@ 285  IF(CPTEW
)@@G@@YPE .NE. 2) GO TO 290   @G@@@@      IF(NMODEL .GT. 1  .OR.  NOCOR .EQ. 0EX
)@@G@@) CALL S1VCSR('WRITE',FNAM,   @^@@@@     -   R,NW,$999)     @A@@@@ 290  EY
)@@G@@IF(NOCOR .NE. 0) GO TO 295    @^@@@@      CALL COMCOR(R)    @ @@@@      EZ
)@@G@@CALL S1HED2(NV,12,0)    @G@@@@      CALL S1PLTM(R,NMS,Z,37HC O R R E L AFA
)@@G@@ T I O N  M A T R I X      ,  @B@@@@     -   0,0,DATFMT,NAMFMT,MUMFMT,12FB
)@@G@@,NV)  @E@@@@      IF(CPTYPE .EQ. 2) CALL S1VCSR('READ',FNAM,R,NW,$999)  FC
)@@G@@@A@@@@ 295  IF(CPTYPE .EQ. 2) GO TO 265   @B@@@@      IF(NOCOR .NE. 0) CFD
)@@G@@ALL COMCOR(R)     @E@@@@      IF(NMODEL .GT. 1) CALL S1VCSR('WRITE',FNAMFE
)@@G@@,R,NW,$999) @#@@@@      GO TO 265   @[@@@@C     @B@@@@C             BEGIFF
)@@G@@N LOOP TO PROCESS MODELS@[@@@@C     @]@@@@ 300  NM=0  @A@@@@      IF(NMOFG
)@@G@@DEL .NE. 0) GO TO 310   @#@@@@      PRINT 305   @E@@@@ 305  FORMAT('1THEFH
)@@G@@RE IS NO FACTOR ANALYSIS TO BE PERFORMED')@]@@@@      RETURN@#@@@@ 310  FI
)@@G@@NM=NM+1     @A@@@@      IF(NM .GT. NMODEL) RETURN     @D@@@@      IF(NM FJ
)@@G@@.NE. 1) CALL S1VCSR('READ',FNAM,R,NW,$999)@[@@@@C     @C@@@@C           FK
)@@G@@  LOAD SPECS AND SET COMMON BLOCK   @[@@@@C     @B@@@@      CALL S1IODR(FL
)@@G@@1,'READ',63,A,LEND)     @A@@@@      IF(LEND .GE. 0) GO TO 330     @#@@@@FM
)@@G@@ 325  PRINT 9325  @D@@@@ 9325 FORMAT('0*****  DRUM LOADING ERROR IN S63AFN
)@@G@@NL')  @#@@@@      GO TO 99    @]@@@@ 330  NX=0  @]@@@@      NC=1  @#@@@@FO
)@@G@@      VECT=A(52)  @]@@@@      RAW=0 @#@@@@      RES=A(45)   @#@@@@      FP
)@@G@@IRPCOR=A(23)@]@@@@      TCOP=0@#@@@@      TPAK=A(54)  @C@@@@      IF(TPAFQ
)@@G@@K .NE. 0) TPAK=LOCFNM+2*(TPAK-1)    @#@@@@      TRAW=A(28)  @C@@@@      FR
)@@G@@IF(TRAW .NE. 0) TRAW=LOCFNM+2*(TRAW-1)    @#@@@@      TROT=A(33)  @C@@@@FS
)@@G@@      IF(TROT .NE. 0) TROT=LOCFNM+2*(TROT-1)    @]@@@@      PCOP=0@#@@@@FT
)@@G@@      PPAK=A(53)  @#@@@@      PRAW=A(27)  @#@@@@      PROT=A(32)  @#@@@@FU
)@@G@@      MAX=A(1)    @ @@@@      IF(A(2) .NE. 0) MAX=A(3)@#@@@@      QMAX=AFV
)@@G@@(4)   @A@@@@      IF(A(5) .NE. 0) QMAX=A(6)     @#@@@@      FPCA=A(8)   FW
)@@G@@@#@@@@      NF=A(15)    @]@@@@      DET=0 @#@@@@      NRF=MAX+QMAX@]@@@@FX
)@@G@@      ITER=0@D@@@@      IF(A(12) .NE. 0  .OR.  A(16) .NE. 0) ITER=50    FY
)@@G@@@A@@@@      IF(A(17) .NE. 0) ITER=A(18)   @#@@@@      IPCOEF=0    @G@@@@FZ
)@@G@@      IF(A(41) .NE. 0  .OR.  A(42) .NE. 0  .OR.  A(43) .NE. 0) IPCOEF=1 GA
)@@G@@@#@@@@      EPS=A(42)   @#@@@@      DELTA=A(43) @C@@@@      IF(DELTA .NEGB
)@@G@@. 0) DELTA=LOCFNM+2*(DELTA-1) @#@@@@      TEMP=.005   @#@@@@      CRIT=KGC
)@@G@@EMP   @A@@@@      IF(A(19) .NE. 0) CRIT=A(19)   @#@@@@      PROC=A(46)  GD
)@@G@@@#@@@@      ICALC=2     @A@@@@      IF(PROC .LT. 6) GO TO 340     @#@@@@GE
)@@G@@      ICALC=1     @]@@@@      PROC=1@#@@@@ 340  IO(1)=0     @#@@@@      GF
)@@G@@IO(2)=0     @#@@@@      IO(3)=0     @#@@@@      IO(4)=0     @#@@@@      GG
)@@G@@ITERS=A(21) @#@@@@      IORTH=0     @#@@@@      SCORES=0    @A@@@@      GH
)@@G@@IF(A(36) .NE. 0) SCORES=1     @B@@@@      IF(A(37) .NE. 0) SCORES=SCORESGI
)@@G@@+2    @B@@@@      IF(A(38) .NE. 0) SCORES=SCORES+4    @#@@@@      KEMP=AGJ
)@@G@@(38)  @C@@@@      IF(KEMP .NE. 0) KEMP=LOCFNM+2*(KEMP-1)    @ @@@@      GK
)@@G@@SCORES=SCORES+8*KEMP    @#@@@@      NOBS=DF     @#@@@@      INCOM=A(48) GL
)@@G@@@#@@@@      MAXCOR=A(49)@#@@@@      NRMLZE=A(56)@#@@@@      BWEPS=.00116GM
)@@G@@@#@@@@      KEMP=A(58)  @A@@@@      IF(A(57) .NE. 0) BWEPS=TEMP   @#@@@@GN
)@@G@@      BWDEL=0.0   @#@@@@      KEMP=A(60)  @A@@@@      IF(A(59) .NE. 0) BGO
)@@G@@WDEL=TEMP   @#@@@@      NVSPEC=A(47)@#@@@@      MVAR=A(47)  @ @@@@      GP
)@@G@@IF(MVAR .EQ. 0) MVAR=NV @#@@@@      MODNUM=A(50)@A@@@@      IF(NVSPEC .EGQ
)@@G@@Q. 0) GO TO 350   @B@@@@      CALL S1IODR(1,'READ',MVAR,ZZ,LEND)  @A@@@@GR
)@@G@@      IF(LEND .LT. 0) GO TO 325     @^@@@@      DO 346 J=1,MVAR   @#@@@@GS
)@@G@@      TEMP=ZZ(J)  @^@@@@      DO 344 I=1,NV     @B@@@@      IF(KEMP .NE.GT
)@@G@@ Z(I+NV)) GO TO 344     @]@@@@      Z(J)=I@#@@@@      GO TO 346   @#@@@@GU
)@@G@@ 344  CONTINUE    @#@@@@ 346  CONTINUE    @A@@@@ 350  IF(INCOM .EQ. 0) GGV
)@@G@@O TO 360    @B@@@@      CALL S1IODR(1,'READ',MVAR,H,LEND)   @A@@@@      GW
)@@G@@IF(LEND .LT. 0) GO TO 325     @#@@@@ 360  NADD=A(61)  @A@@@@      IF(NADGX
)@@G@@D .EQ. 0) GO TO 370     @^@@@@      BANKSC(1)=A(62)   @^@@@@      BANKSCGY
)@@G@@(2)=A(63)   @#@@@@      DO 364 K=1,9@ @@@@      CALL S1PRFT(BANKSC,K,CH)GZ
)@@G@@@A@@@@      IF(CH .NE. ' ') GO TO 364     @#@@@@      BANCHR=K-1  @#@@@@HA
)@@G@@      GO TO 365   @#@@@@ 364  CONTINUE    @C@@@@ 365  CALL S1IODR(1,'REAHB
)@@G@@D',NADD,BAVAR,LEND)     @A@@@@      IF(LEND .LT. 0) GO TO 325     @#@@@@HC
)@@G@@ 370  CONTINUE    @[@@@@C     @E@@@@C             PREPARE MATRIX AND VECHD
)@@G@@TOR T OF TEST RATIOS    @[@@@@C     @E@@@@ 400  IF(CPTYPE .EQ. 2  .AND. HE
)@@G@@ ICALC .EQ. 2) CALL COMCOR(R) @A@@@@      IF(NAMES .EQ. 0) NAM(1,1)=0   HF
)@@G@@@]@@@@      QUIT=0@A@@@@      IF(NVSPEC .EQ. 0) GO TO 420   @A@@@@      HG
)@@G@@CALL S1SELT(R,NV,MVAR,Z,ZZ)   @^@@@@      DO 410 J=1,MVAR   @]@@@@      HH
)@@G@@K=Z(J)@^@@@@      T(J)=TSTRAT(K)    @F@@@@      IF(IERR .NE. 0  .AND.  SHI
)@@G@@DSV(K) .GT. 1.0E+37) QUIT=QUIT+1    @#@@@@      K=Z(NV+K)   @]@@@@      HJ
)@@G@@Z(J)=K@A@@@@      IF(NAMES .EQ. 0) GO TO 410    @^@@@@      NAM(1,J)=NMSHK
)@@G@@(1,K) @^@@@@      NAM(2,J)=NMS(2,K) @#@@@@ 410  CONTINUE    @#@@@@      HL
)@@G@@GO TO 450   @^@@@@ 420  DO 425 J=1,NV     @]@@@@      Z(J)=J@A@@@@      HM
)@@G@@IF(NAMES .EQ. 0) GO TO 425    @^@@@@      NAM(1,J)=NMS(1,J) @^@@@@      HN
)@@G@@NAM(2,J)=NMS(2,J) @^@@@@ 425  T(J)=TSTRAT(J)    @#@@@@      QUIT=IERR   HO
)@@G@@@[@@@@C     @E@@@@C             SET PRINT FLAG AND MODEL NO.  -  CALL S6HP
)@@G@@3AMD  @[@@@@C     @]@@@@ 450  PRNT=0@A@@@@      IF(A(22) .NE. 0) GO TO 4HQ
)@@G@@70    @]@@@@      PRNT=1@A@@@@      IF(MVAR .NE. NV) GO TO 470    @^@@@@HR
)@@G@@      DO 455 J=2,NV     @A@@@@      IF(Z(J-1) .GT. Z(J)) GO TO 470@#@@@@HS
)@@G@@ 455  CONTINUE    @A@@@@      IF(ICALC .EQ. 1) GO TO 460    @ @@@@      HT
)@@G@@IF(NOCOR .EQ. 0) PRNT=0 @ @@@@      IF(PRNT .NE. 0) NOCOR=0 @#@@@@      HU
)@@G@@GO TO 470   @ @@@@ 460  IF(COVAR .NE. 0) PRNT=0 @ @@@@      IF(PRNT .NE.HV
)@@G@@ 0) COVAR=1 @#@@@@ 470  TSTVAL=TEST @^@@@@      IX(LSUBHD)='MODEL'@#@@@@HW
)@@G@@      AN='      ' @]@@@@      ICH=5 @A@@@@      IF(MODNUM .LE. 9999) ICHHX
)@@G@@=4    @A@@@@      IF(MODNUM .LE. 999) ICH=3     @ @@@@      IF(MODNUM .LHY
)@@G@@E. 99) ICH=2@ @@@@      IF(MODNUM .LE. 9) ICH=1 @B@@@@      CALL S1ENCI(HZ
)@@G@@MODNUM,AN,ICH,ICH,1)    @^@@@@      IX(LSUBHD+1)=AN   @A@@@@      IF(QUIIA
)@@G@@T .EQ. 0) GO TO 480     @#@@@@      CALL S1PHED @^@@@@      PRINT 9475,QIB
)@@G@@UIT   @G@@@@ 9475 FORMAT('0***** FOR',I4,' VARIABLE(S) THE VARIANCE IS ZIC
)@@G@@ERO OR CANNO@A@@@@     -T BE COMPUTED ACCURATELY')    @#@@@@      PRINT ID
)@@G@@9476  @G@@@@ 9476 FORMAT(10X,' THUS THE CORRELATION MATRIX IS SINGULAR OIE
)@@G@@R CANNOT BE @ @@@@     -COMPUTED ACCURATELY')   @^@@@@      PRINT 9477,AIF
)@@G@@N     @F@@@@ 9477 FORMAT('0***** FACTOR ANALYSIS NOT PERFORMED FOR MODELIG
)@@G@@ ',A5)@#@@@@      GO TO 310   @#@@@@ 480  CONTINUE    @ @@@@      CALL SIH
)@@G@@63AMD(MVAR,MVAR+1,@B@@@@     -   B,A,Q,P,R,S,T,U,V,W,X,Y,Z,XM,SD, @#@@@@II
)@@G@@     -   NAM,     @ @@@@     -   BABUF,BAVBUF,BAVAR,  @^@@@@     -   TSTIJ
)@@G@@VAL,PRNT,ZZ)@#@@@@      ETMES(6)=AN @ @@@@      CALL S1TIMA(6,ETMES)    IK
)@@G@@@#@@@@      GO TO 310   @[@@@@C     @ @@@@C             ERROR RETURNS   IL
)@@G@@@[@@@@C     @#@@@@ 999  PRINT 9999,F@G@@@@ 9999 FORMAT(4A6,' 27. ANALYSIIM
)@@G@@S TERMINATED BECAUSE OF PREVIOUS ERRORS') @]@@@@      RETURN@[@@@@C     IN
)@@G@@@[@@@@C     @F@@@@C        LOCAL SUBROUTINE TO COMPUTE CORR. MATRIX FROMIO
)@@G@@ COVARIANCE @[@@@@C     @ @@@@      SUBROUTINE COMCOR(R)    @#@@@@      IP
)@@G@@REAL R(1),TT@]@@@@      M=1   @^@@@@      DO 1010 I=1,NV    @^@@@@      IQ
)@@G@@DO 1000 J=1,I     @ @@@@      TT=R(M)/SDSV(I)/SDSV(J) @ @@@@      IF(TT IR
)@@G@@.GT. 1.) TT=1.    @ @@@@      IF(TT .LT. -1.) TT=-1.  @#@@@@      R(M)=TIS
)@@G@@T     @]@@@@ 1000 M=M+1 @#@@@@ 1010 CONTINUE    @]@@@@      RETURN@]@@@@IT
)@@G@@      END   ___ .AND.  SDSV(K) .GT. 1.0E+37) QUIT=QUIT+1    @#@@@@      IU
)@@G@@)@@[N#@CS[#@CS[#@@G"@__"C]@@^HG.)__"C[)@^DG.@__.C[@@^DG/)__.C@)@^BG/@__"IV
)@@G@@C@@@^EAA@@@A)@E[N#@CS[#@CS@K0@R@K@^MG_)__.C;:K@^[#)@^NG_)__"C#)@^FG_@__"IW
)@@G@@C#@@^CG")__"C])@^BAB@@@A)@O[F#@-)K0]A[#@CS^G@@@@[#)@^QR@0@^IG_)__"C#)@^GIX
)@@G@@[#)@^PG_)__.C#)@^H[#)@^OR@)@^LAC@@@A)@X[F#@CS^G@-)K0]A@@@@@@[#)@^TG_)__"IY
)@@G@@C#)@^M[#)@^SG_)__.C#)@^G[#)@^RG_)__"C#)@^JAD@@@A)@&[F#@CS^G@-)K0]A@@@@@@IZ
)@@G@@[#)@^WG_)__.C#)@^J[#)@^VG_)__"C#)@^K[#)@^UG_)__.C#)@^LAE@@@A)@\[F#@]A[#@JA
)@@G@@-)K0CS^G@@@@[])@^+[]@@^-[[)@^)[[@@^Z[@)@^Y[@@@^XR9FK@[G_)__.C#)@^MAF@@@AJB
)@@G@@)@8@V#@-)K0@)#!@6G@@@@@@ FACTO0*****OR NO.R3 ERR FACTO0*****A@K@^>[#)@^=JC
)@@G@@[#@@^<AG@@@A)#3@QG@@@@@@)[I@IK)@I@,K@@@@@@3)    ,12F9.,A2,1X,1X,A6(1X,I3JD
)@@G@@      E NO. R3 NOTAH@@@A)@N@QK@@@@@@)@'@YK@@@@@@)@4@QK@@@@@@ARIABL(14H VJE
)@@G@@3,2X))2(4X,I(14X,12F9.3)(14X,1AI@@@A)@6@&K@@@@@@)@"@,K@@@@@@(1X,A6,3X,12JF
)@@G@@AME   O.   N(14H N))    ,I3,2X,12(4XE NO. AJ@@@A)[#@IK)@W[IK@@@@@@)     JG
)@@G@@0G11.5(14X,1      .5)/  ,10G11,A2,1X,1X,A6(1X,I3,A2)) AK@@@A)@,@6K@@@@@@JH
)@@G@@)@>@YK@@@@@@FACTORAR. / (14H V))    ,I3,2X,12(4XFACTORAR. / (14H VAL@@@AJI
)@@G@@)@*@6K@@@@@@)[^@YK@@@@@@            8F8.5)3,3X))0(5X,I(11X,1))    ,I3,3XJJ
)@@G@@,10(5XAM@@@A)[B@"K@@@@@@)@@@QO@@@@@@,1X,A6(1X,I3                  )     JK
)@@G@@6E10.5            AN@@@A)@][YO@@@@@@ARIABL(14H V4X))  A6,A2,,5X,9(AME   JL
)@@G@@O.   N(14H N5)    ,9G12.,A2,2XAO@@@A)@H@&O@@@@@@)@A@*@@@@@@@MODEL S FOR JM
)@@G@@TATION COMPUEND OF)     I3,3X),9(6X,E NO. AP@@@A)@F@S@)@;@V#@-[K0@)@,@K@JN
)@@G@@@@@@@@______INTYPE@@@@#*/,0@@@A[@@^&      FT3$$1      AQ@@@A)@"@3#@-]K0CJO
)@@G@@S4[@@@)@0@K@@@@@@@______CPTYPE/K@@#D/K@@#D@@@@@@@@@@@,/,0@@@@][@^@AR@@@AJP
)@@G@@)[^@3#@-]K0CS^[@@@)@2@K@@@@@@@______NVARS /K@@#D/K@@#D@@@@@I@@@@@0/,0@@@JQ
)@@G@@@]]@^@AS@@@A)[E@3#@-]K0CS^[@@@)@4@K@@@@@@@______NMODEL/K@@#D/K@@#D@@@@@JJR
)@@G@@@@@@@2/,0@@@@]#@^@AT@@@A)[K@3#@-]K0CS^[@@@)@6@K@@@@@@@______REWIND/K@@#DJS
)@@G@@/K@@#D@@@@@K@@@@@4/,0@@@@]^@^@AU@@@A)[Q[F#@-)K^CUA[#@-)K0CS@@@@@@L@@@@#*JT
)@@G@@@@@@#*@@@@@6@@@@#(/,0@@@/K@@[)(@@@@K@] @^@AV@@@A)@8@K@)[Z@3#@-]K0CS^[@@@JU
)@@G@@@@@@@@/K@@#D/K@@#D@@@@@M@@@@@8/,0@@@@]B@^@______SCORESAW@@@A)@'@K@)[>@3#JV
)@@G@@@-]K0CU^[@@@@@@@@@/K@@#D/K@@#D@@@@@^@@@@@'/,0@@@@]C@^@______BANEXTAX@@@AJW
)@@G@@)[:@F#@@@@@@)@/@K@)[?@<#A-]K0CS0@@@@@@@@@K@@@@@//,0@@@ @@@@K______MLE   JX
)@@G@@@]D@^@AY@@@A)[0@;@K^G]^L#@- K0@@@@@@)@"@C@OVERFL@@@@#%/,0@@@@]G@^@/,0@@@JY
)@@G@@@]F@^@/K@@[3/K@@#DAZ@@@A)@_@C@)[7@;#@-AK0CS^G]A[@@@@@@/K@@PW@@@@@L@@@@@LJZ
)@@G@@@@@@@N@@@@@"/,0@@@@]H@^@______BA@@@A)[@@K@)["@3#@-AK0CS^G]A@@@@@@@@@@@@LKA
)@@G@@@@@@@L@@@@@O@@@@[@/,0@@@@]I@^@______IDMAT BB@@@A)]^[F@K0]A[#@-)K0JE]@@@@KB
)@@G@@[@-@@@[@-J_"C@)@#:R@K@@O[@@@@OG@@@@OC/@@@]@]J@^@/K@@PWBC@@@A)[]@K@)]H@3#KC
)@@G@@@-AK0CS^G]A@@@@@@@@@@@@L@@@@@L@@@@@P@@@@[]/,0@@@ @@@@P______FOTNMSBD@@@AKD
)@@G@@)]N[F@K0]A@^G]A[;G@@@@@@[@^J_"C@@@@RA[@@@RN.@@^:R.@@@[[@@@@QC@]@@@@]O@^@KE
)@@G@@/K@@]PBE@@@A)]W[EK^C8-)K^G]A[#@@@@@@[@@@@TC@@@@J@]V@^@/K@@#D@@@@@S@@@@@@KF
)@@G@@/,0@@@8L@@]TO.@@@[BF@@@A)]>[F#@-)[#@-)K0CS^G@@@@(@@@@M[[@@^*[@)@^$G[@@^=KG
)@@G@@G[@@@JC.@@@[G/)__"[@)@@JC@)@@SBG@@@A)],[F@K0CS^G]A[#@-)K0CS@Q[K@^IR[K@#!KH
)@@G@@Q[@@^TR[@@#?Q@K@^*R@K@#?[@@@@MC@@@@T/K@@]1BH@@@A)]7[N#@CS[#@@@@@@@C@^)@[KI
)@@G@@[[ )@[C[G@@[[@>@@@C@?@@@G@@@^U;@@@@<[@@@@UC@^@@[N[@@^$BI@@@A)#[[]K[#@-)^KJ
)@@G@@G]@@@@)[^@C@FACTOR/K@@#H[@)@@V;K)@@[T@)@@JG@)@@JC/)@@[8L@@]8[@[)@[BJ@@@AKK
)@@G@@)[ @K@)#D@;]K-)K0C]A[#A@$'0@@ RA0@@@ @@@@W/K@@PW@]%@^@@@@@[^/,0@@@______KL
)@@G@@3.    BK@@@A)#K[F@K?*S^[@K^[#@@@@@@@C@[@@@R@K@^>/K@@^(/K@@^X/K@@#_/K@@#RKM
)@@G@@@]!@^@'^@@@@8];@#MBL@@@A)#T[F#@-)K0]@-)^DEA@@@@@@@@@@J/,0@@@ @^@@@R[@@^>KN
)@@G@@/K@@#)*@@@@GH@@@@JC@@@@T[@@@#$BM@@@A)#+[N#@-)K)CS0@@@@@@@@@@@@@@@@@@@@@@KO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@-@@@@@@@@@@@M@@@@#*BN@@@A)#?[F#@-)^G]A[#@CS^@@@@@KP
)@@G@@/K@@  (@@@@W[@ @@@R[K@^>C@@@#$@]1@^@@@@@@@@@@@#*@@@@@WBO@@@A)#5[#]4-)K0CKQ
)@@G@@S[#A-VK@@@@@@@@@@@8L@@#''^K@@@C8[)#?N.@@@#R@K@#,@]5@^@@@[@[B/,0@@@BP@@@AKR
)@@G@@)[B@*@@@@@@@)#.@N]8)@@@@)[G@C@SINGLE/K@@PW'^@@@@INPUT)RS IN . ERRO20H 15KS
)@@G@@(4A6,0BQ@@@A)[H@C@)#_[#]O@CS4G]A@@@@@@@@[G@@@@@J@@@@@-@@@@@@@@@@@@@@@@@@KT
)@@G@@@@@@@@/,0@@@______BR@@@A)^B[F#@-)K0C]A@K0]A@@@@@R[@@#?C_)@@[G@@@@JC/@__"KU
)@@G@@ @@@@X/K@@#5*@@@@W@].@^@@@@@@WBS@@@A)^K[F#@CS^G]A[#@-)K0@@@@C@>@@[O[K@^OKV
)@@G@@R[K@@X[@@@@XG@@@@RC@@@@X[#)@@R[@@@[^Q[@@^VBT@@@A)^T[M^[@K>*S@K1*S@@@@@@WKW
)@@G@@@@@@#!@@@@@@@@@@@@@@@@@J/,0@@@/K@@  8L@@^MG_)@@[[@=)@[BU@@@A)^<[F#@-)K1*KX
)@@G@@S^[@K&CS@@@@@@@@@@@@@@@J/,0@@@/K@@  /K@@#5(@@@@Y @@@@-@#C@^@@@@@@YBV@@@AKY
)@@G@@)^?[EK1*S^G@-)K1*S^@@@@@/K@@#5(@@@@Y @@@@-@#H@^@@@@@@@@@@@@Y@@@@@W@@@@#!KZ
)@@G@@@@@@@@BW@@@A)^5[EK0CS^G]A[#@]A@@@@@@[@@@^$E@ @@[[@@@[^Q[K@^)R[K@#?Q@K@^-LA
)@@G@@R@K@#?G@@@@YC/@__"BX@@@A)^"@;]'-)K0@C@@@@@)[I@K@ INPUTEND OF8L@@^/[@>)@[LB
)@@G@@C@-)@[[@[@@[@#O@^@@@@@^$/,0@@@BY@@@A)[K@C@)  @;]U-)K0CS^GUAH#A@@@@ @@@@^LC
)@@G@@ @@@@E @@@@A@#R@^@@@@@[I@@@@#%/,0@@@______BZ@@@A) G@F#@@@@@@)[L@K@) H@<#LD
)@@G@@@-]K0CS0@@@@@@@@@A@@@@[L/,0@@@ @@@@)______FILECO @@@@ZCA@@@A) L@V@K^G@@@LE
)@@G@@)[N@K@) O@V]^-)K1)@@@@@E@@@@[N/,0@@@______CARDCO@#X@^@/K@@ O/K@@ OCB@@@ALF
)@@G@@) R@V@K^G@@@)[P@K@) U@V]^-)K1)@@@@@^@@@@[P/,0@@@______PRODUC@#Y@^@/K@@ ULG
)@@G@@/K@@ UCC@@@A) X@V@K^G@@@)[R@K@) )@V]^-)K0@@@@@@Z@@@@[R/,0@@@______NOCOR LH
)@@G@@@#Z@^@/K@@ )/K@@ )CD@@@A) <@V@K^G@@@)[T@K@) &@V]^-)K0@@@@@@)@@@@[T/,0@@@LI
)@@G@@______COVARM@#)@^@/K@@ &/K@@ &CE@@@A) ([N@K^G@-<^GS)@@C/)@@^/K@@DJ(@@@@ILJ
)@@G@@H@)@@@C/)@@#[@@@#?C/@@@]@#-@^@/K@@ ?/K@@ ?CF@@@A) 3[N#AC@-)^@K1)@@C/@@@[LK
)@@G@@[@@@#?C/@@@[/K@@ /*@@@@GH@@@@IC/@@@]/K@@D_(@@@@IH@)@@@CG@@@A) .[F#@-)K^GLL
)@@G@@]^9#@-<@@@@@@@@@@@@@@@@@@@@@@-@@@@@J/,0@@@ @@@@-/K@@A[(@@@@Z[@@@@-CH@@@ALM
)@@G@@)AA[U@@@K0@@@@@@#(@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LN
)@@G@@@@@@@@CI@@@A)AL[##A-)K0CS4GUA[#A-<@@@@@@@@@@@@@K@@@@#?@@@@@+@@@@@A@@@@@ELO
)@@G@@@@@@@-@@@@@)@@@@@^CJ@@@A)AT@3#@-)K0JE@-)@@)[V@K@@@@@@@______WRITE (@@@@KLP
)@@G@@/K@@PW*@^J_"R[@@@N@#!@^@@@@@@WCK@@@A)AZ[N@^G@C]^.#@-)@@@@@@@@@@@@G@@@@[VLQ
)@@G@@/,0@@@/K@@A?1@@@@G*@@@@GH@@@@KC/@@@[/K@@F\CL@@@A)A(@N#@)@@@@)[X@K@)A:@<#LR
)@@G@@@]A@@@H@)@@KC/)@@[C/@@@[@#3@^@______WRITE /K@@PW@@@@@VCM@@@A)A\[M@K1)]A@LS
)@@G@@@@@@@@*@@@@ZC/)@@[+@@@@I @@@@I*@@@@KH[@@#?C.@@@[C/)@@[ @@@@G*@@@@ICN@@@ALT
)@@G@@)A9[M[@K$*S^G@-)K@/K@@PW@@@@@V@@@@@@@@@@@G@@@@[X/,0@@@/)K@B^+@@@@I;^@@@=LU
)@@G@@ @@@@ICO@@@A)B#[F#@-KK0CS4G]A@K0CS@@R@K@^RG@)@@JC/)__"[@@@@]"G@@#\C@@@@-LV
)@@G@@@#6@^@/,0@@@@#5@^@CP@@@A)BG[F#@-)K0CS^G]A[#@@@@@C@ @@[[@)@[^R])@^-R]K@^<LW
)@@G@@R]@@^+R[0@^XR[)@^)R[@@^NR[K@^VCQ@@@A)BP[N#@CS0@K0CS@@@C[@@@[[@@@@@C@C@@[LX
)@@G@@[@%@@[C@&@@[[@[@@["G@@@I"C)@@-C@=@@[[@@@@[CR@@@A)BZ[F#A-)^GUA@[@@@@@@@@@LY
)@@G@@/K@@B(*@@@@G"^D@@[C@B@@[[[@@#$"H@@@-" @@@G"C@@@@"D@@@-CS@@@A)B*[F#@-)K0CLZ
)@@G@@S^G@]@@@@@@@/K@@B30@@@@I*@@@@I"^)@@G"C)@#0C@)@@]"G@@@[C@@@#$ @@@#$CT@@@AMA
)@@G@@)B1[N#@@@@@@@@@@@@O")@@[O"K@@[O"@@@[O.0@@[O.)@@[O.@@@[O.K@@[O/K@@[[@E@@[MB
)@@G@@C@@@#1CU@@@A)[Z@K@)B;@;@K**S^[#@CS@@G@@@@JC/@__"@^B@^@/K@@PW@@@@[Z/,0@@@MC
)@@G@@8L@@BO______ANL  1CV@@@A)C][EK0CS^G]A@K1+@@@@@@@/K@@C!*@@@@MH[)@@@C.)@@[MD
)@@G@@[[@@@#C[@@#2G@)@^SG@)@@JC/)@@[CW@@@A)CF[F#@-)K0CS^G@-)K0@@@@[@@@[^Q[)@^+ME
)@@G@@R[)@#?Q[K@@IR[K@#?Q[@@^QR[@@#?Q@K@^)R@K@#?CX@@@A)CO[F#@-)@^[#@-)@@@@@@@@MF
)@@G@@Q[0@^TR[0@#?8L@@CQ[@>)@[C@&)@[[@^)@[C@[)@[[@)@^*[@@@^$CY@@@A)CX[F#@-)K0CMG
)@@G@@S^G@-)K0CS@@O])@^YR])@@U[@@@@UC@B)@[N[@@^$Q]K@^*R]K@#?Q]@@^QR]@@#?CZ@@@AMH
)@@G@@)C&[N#@-)@^@K0@@@@ @@@@G(@@@@ZC/@@@[8L@@C+[[E@@[C[D)@[[@-@@[C@*)@[O@K@^ZMI
)@@G@@R@K@@UDA@@@A)C0[E^GS]@)@)[-@C@C O R @@@@@@/,0@RL/=K@F\)@@@@I @@@@I(@@@@KMJ
)@@G@@H[@@#?C.@@@[C/)@@[DB@@@A)[+@8@@@@@@@)C9@N#@-M@@@/,0@@@@^V@^@______      MK
)@@G@@ I X   A T RO N  MA T I R E L DC@@@A)C;[E[#@-)K0CT^G+AK@@@@@@@@@@4@@@@@"ML
)@@G@@@@@@@I@@@@#*@@@@#*@@@@[-@@@@@@@@@@@@@@@@@@DD@@@A)D^@N#@-)@@@)[(@K@)DA@V#MM
)@@G@@@-JK0@@@@@@@@@@@[(/,0@@@@^W@^@______READ  @@@@@J@@@@#3DE@@@A)DD[N#@CS^[#MN
)@@G@@@)]A@@C/)@@[ @@@@G*@@@@WC/@@@[/K@@F\@^X@^@/K@@PW@@@@@V@@@@@@@@@@@GDF@@@AMO
)@@G@@)DN@V#@@@@@@)[:@0@@@@@@@ I X   A T RO N  MA T I R E L C O R +@@@@I @@@@IMP
)@@G@@(@@@@ZDG@@@A)[1[K@@@@@@@@@@@@@______OR3   O FACTNPUT T AND IEWHEREED ELSMQ
)@@G@@COMPUT______      DH@@@A)DQ[F@K(@CS^G]A[#C@@@@@@@@@@@I@@@@[3@@@@#*@@@@[:MR
)@@G@@@@@@@@@@@@@@@@@@@@/,0@@@/=K@D&DI@@@A)DZ@;#C-=K0CS^G]A[@@@@@@)[;@C@WRITE MS
)@@G@@/K@@#5*@@@@W@^-@^@@@@@@Y@@@@#3@@@@@4@@@@@"DJ@@@A)[/@C@)D&[]K0@)CN4G]A@@@MT
)@@G@@@@@@@G@@@@[;/,0@@@/K@@D21@@@@G*@@@@GH@@@@KC/@@@[______DK@@@A)D,[EK0C]A[#MU
)@@G@@@)CS^G@@@@@@C/)__"[@@@@#C@@@#4/K@@F\(@@@@K@^>@^@/K@@PW@@@@@V@@@@@@DL@@@AMV
)@@G@@)D7[F#@-)K0]A@K^@@@@@@@@C/@@@[/K@@F\8L@@D;[@^)@[C@@@#5[@)@[^Q[@@^RR[@@#?MW
)@@G@@G@)@@JDM@@@A)E@[N#@]A@[#@@@@@@+@)@@H @@@@I*@@@@)C/)@@[+@@@@I @@@@I(@@@@ZMX
)@@G@@C/)@@[ @@@@G*@@@@WDN@@@A)EE@:@K(*S^G]A@@@@)[.@S@@@@@@@A N C A R I C O V MY
)@@G@@@@@@#*@@@@#6@@@@@Y/,0@@@/=0@E-DO@@@A)]@[S@@@@@@@O FACTNPUT T AND IEWHEREMZ
)@@G@@ED ELSCOMPUT______       X     T R IE  M ADP@@@A)]F@K@)EJ@;#@-M@K0CS@@@@NA
)@@G@@@@@@#*@@@@[.@@@@@@@@@@@@@@@@@@/,0@@@@^1@^@______OR3   DQ@@@A)EQ[F#@->K2*NB
)@@G@@TOG]A[#@CS@@[@@@@)C/@@@[@^2@^@@@@@@Y@@@@#6@@@@@F@@@@@ @@@@@@@@@@] DR@@@ANC
)@@G@@)EZ@:#@)]A@@)]H@K@)E=@F@@@@@@@/K@@E7______WRITE *@@@@GH@@@@IC/@@@]/K@@#5ND
)@@G@@*@@@@WDS@@@A)E>[MK0@CS@@@@@@@@)@@@@I @@@@I1@@@@K*@@@@KH[@@@KC.@@@[C/)@@[NE
)@@G@@ @@@@G*@@@@ZC/@@@[DT@@@A)E\[F@K$*S^G@-)K^G]A@@@@*@@@@Z@^9@^@/K@@PW@@@@@VNF
)@@G@@@@@@@@@@@@@G@@@@]H/,0@@@/)K@E7DU@@@A)E8[#@K[#@-NK0CS^G@@@@@@@@@@@@@@@@#*NG
)@@G@@@@@@#3@@@@@J/,0@@@@^/@^@@@@@@@/,0@RL/K@@FTDV@@@A)]J[@@@@@@@@)F@@F#@@@@@@NH
)@@G@@@^.@^@______       I X   A T RO N  MA T I R E L C O R DW@@@A)F[[F]=@-)K0NI
)@@G@@CS^G+AK@@@@@@@@@@"@@@@@I@@@@#*@@@@#*@@@@]J@@@@@@@@@@@@@@@@@@/,0@@@DX@@@ANJ
)@@G@@)FE@V#C-)K0@)]R@K@)FH@V#@CS@@@H@@@@IC/@@@]@^"@^@______READ  @@@@@J@@@@#3NK
)@@G@@@@@@@4DY@@@A)FK[EK^D'A[#@CS^[#@@@@@@@ @@^@/K@@PW@@@@@V@@@@@@@@@@@G@@@@]RNL
)@@G@@/,0@@@/K@@FT*@@@@GDZ@@@A)FT[]K0]@-)K^@@@@@)]T@C@WRITE @@@@@@/,0@RL/K@@F+NM
)@@G@@(@@@@Z/K@@D2(@@@@GH@@@@IC/@@@]EA@@@A)]U@C@)F-[##@CS@K^D'A@@@@@@@]T/,0@@@NN
)@@G@@/K@@F,1@@@@G*@@@@GH@@@@KC/@@@[@ ^@^@______EB@@@A)F([F#@CS^[#@)CS^G]@@@@@NO
)@@G@@/K@@F9*@@@@K @@@@</K@@D2@ A@^@/K@@PW@@@@@V@@@@@@@@@@@GEC@@@A)F2@V]4-)K0@NP
)@@G@@)]V@0@@@@@@@SIS TO ANALYFACTORIS NO THERE (044H1@ F@^@@@[@]V/,0@@@ED@@@ANQ
)@@G@@)]-@S@)F5@3]8)C]A@K0@@@@G@@@@<C/@@@[@ I@^@/K@@P*N@0@F8'^@@@@D)    RFORMENR
)@@G@@ BE PEEE@@@A)F;[##@-)K0@)C]@@@)]=@C@READ  /K@@P*N@0@G#/K@@G^1@@@@G*@@@@GNS
)@@G@@H@@@@<C@@@@K[@@@@<EF@@@A)]>@C@)G#[##@CS[@K$*S^G@@@@@@G@@@@]=/,0@@@/K@@GJNT
)@@G@@(@@@@GH@@@@<C/@@@[@ L@^@______EG@@@A)GF@UK0C@@@@)]&@K@)GI@V#@-#K0@@@@@#(NU
)@@G@@/,0@@@@ N@^@______READ  /K@@PW@@@@@V@@@@@@EH@@@A)GL[F#@-)^G]A[#@]@@@@@@@NV
)@@G@@/K@@GZ0@@@@G*@@@@GD@@@@=@ O@^@@@@@@=@@@@@@@@@@#7@@@@]&EI@@@A)GU@V]4-)K0@NW
)@@G@@)]*@0@@@@@@@R IN SG ERROLOADIN DRUM ***** (036H0@ R@^@@@[@]*/,0@@@EJ@@@ANX
)@@G@@)],@C@)GX[#]8)CS1#A-)^GS[@)@@#C@>@@3R[K@^&[@@@@]C/@@@[ @@@@[/K@@#D'^@@@@NY
)@@G@@63ANL)EK@@@A)G>[F#ACS1#I-<^GUAG@@@@@(@@@@B[]@@@BC] @@5 @@@@A[[)@@[C[>@@QNZ
)@@G@@[[@@@ C[ @@? @@@@^EL@@@A)G,[F@^GS-)K1*S[#A@@@@@@[@@@@CC@A@@VR[)@^&]@@@@BOA
)@@G@@H@@@@P;@@@@<H@@@@BC/@@@[/K@@G4EM@@@A)G7[F#A)]AGK0CS4G@@@@@@@C@[@@)R@K@^&OB
)@@G@@]@@@@CH@@@@P;@@@@<H@@@@CC/@@@[/K@@G"(@@@@CEN@@@A)H@[F#A-<K[#ACS^GUAG@@@@OC
)@@G@@ @@@@E]@@@@DH@@@@P;@@@@<H@@@@DC/@@@[/K@@HC(@@@@D[@@@@DEO@@@A)HD[F#@CS1#AOD
)@@G@@CS1#A@@@@@@@[[)@@IC[%@@@[[@@@HC[E@@Z[@)@@GC@%@@U[@@@@FC@E@@4R])@^&EP@@@AOE
)@@G@@)HM[F#@C@-<K0]AH#@@@@@@@R]K@^&[@@@@JC@C@@#R]@@^&[@@@@IC@B@@]/K@@HR(@B@@[OF
)@@G@@R[0@^&EQ@@@A)HV[EK[#A-)^GS-<@@@@@@@@[@)@@MC@=@@I[@@@@LC@^@@BR[@@^&[@@@@JOG
)@@G@@C@D@@ /K@@HZ(@D@@^ER@@@A)H=[F#A-<K1*S4GS-)@@@@@@ @@@@G(@ @@FR[K@^&C/@@@[OH
)@@G@@ @@@@P[[@@@OG[@@@IC[@@@J @@@@NES@@@A)H![M@K[#A-)^@@@@@/K@@H9(@A@@KR[)@^&OI
)@@G@@[@@@@PC/@@@2/)K@H4)@@@@I @@@@I(@ @@JC/)@@[ET@@@A)H7[MK1*T1#@@@@@@@ @@@@IOJ
)@@G@@(@[@@(C/)@@[ @@@@G(@[@@*R@K@^&C/@@@[ @@@@@[@@@@PC@A@@LEU@@@A)I[[M@[@^G'AOK
)@@G@@@@@@@@R])@^&[@@@@@C/@@@[/)K@IE)@@@@I;^@@@= @@@@I(@[@@%C/)@@[)@@@@IEV@@@AOL
)@@G@@)IF[EK1+AH#A)]AG@@@@@@@@;@@@@<H@@@@RC/@@@[/K@@IQ(@@@@R[@)@@RC@%@@%[@@@@QOM
)@@G@@C@E@@(EW@@@A)IO[F#@-<K0CS^G]AH#@C@@@/K@@IZ(@B@@MR[0@^&[@)@@SC@)@#$[@@@#$ON
)@@G@@C@@@#8]@@@@RH@@@@PEX@@@A)IX[MK1*S[#ACS1@@@*@@@@G/C@@I*G/@__9[@)@#?C/)@@]OO
)@@G@@[@@@@TC@C@@!R]@@^&[@@@@SC@B@@MEY@@@A)I$[F@^GUAH#A-<K1*S4G@@@R]K@^& @@@@XOP
)@@G@@ @@@@W @@@@V @@@@U[@@@@T[@@@#?C/@@@[/K@@I:EZ@@@A)I0[EK1*S4GUA@K[#A@@@@@@OQ
)@@G@@[@@@@)C/@@@[/K@@I9(@^@@<R[@@^& @@@@) @@@@Z[@@@@YC@D@@OFA@@@A)I9[N#@C@-<KOR
)@@G@@1*S[@@C/@@@^/K@@J (@A@@>R[)@^&[@@@@)G@@@@)C/@@@]/K@@I_(@ @@=R[K@^&FB@@@AOS
)@@G@@)J#[F#A-<K0]A[#@)]A@@@@@H@@@#$C/@@@[/K@@JJ(@@@#$[@@@#$C@[@@>R@K@^&[@@@@)OT
)@@G@@G@@@@)FC@@@A)JG[EK0CS^G@-<K1*S4G@@@@"@)@#9C@)@@-[@@@@)G@@@@);@@@@-C@@@#$OU
)@@G@@]@@@#$H@@@@P;@@@@<FD@@@A)JP[M^GUA@K1+AWK3)[]@@@#C]E@@7[[)@@]C[%@@0[[@@@<OV
)@@G@@C[E@@\R])@^&[@0@@+;)"@@D"K)@@IFE@@@A)JZ[F#@-$^G]A@K^G]AW@@@@[@@@@^C@@@#$OW
)@@G@@/K@@J*(@B@@8R[0@^&[#@@#$C#E@@9[])@@^C])@#'FF@@@A)J*[F#I-)^G]A@K^G]AW@@@@OX
)@@G@@[@@@@ C@@@#$/K@@J1(@D@@'R]K@^&[@@@#$C@C@@;R]@@^& @@@@ FG@@@A)J1[F#@CS^G]OY
)@@G@@A[@K0CS^G@@@R[K@^&[@@@@&C@@@@J/K@@J9*@@@@&[@@@@&[@@@@>C@^@@,R[@@^&FH@@@AOZ
)@@G@@)J'@UK0CS@@@)]\@K@)J.@V@K-*S@@@@@@#(/,0@@@/K@@K:______READ  (@@@@>[@@@@$PA
)@@G@@C@ @@1FI@@@A)K@[F#@-)^G]A@K0]A@@@@@@G@)@@JC/)__"G@@@@&C/@__"@A3@^@@@@@@=PB
)@@G@@@@@@@@@@@@@&@@@@]\FJ@@@A)KD[EK0CS^G]@C@-)@@@@@@@R[)@^TC_0@@[/K@@GU*@@@@MPC
)@@G@@/H)@KKD[)@@=G[@@^=G[@@@JC.@@@[FK@@@A)KM[F#@CS^G]A@K0]A@@@@@@R])@^*C_)@@[PD
)@@G@@[@@@#$C@[@@[[#0@@R[[@@^*[@)@^$[@@@[^R@K@^QFL@@@A)KV[N#@-)^G@)CS[@@O")@@[PE
)@@G@@/K@@K$[@A@@[C@@@@ /K@@K=*@@@@GH@@@#$C@E@@[[#)@@ N[K@^$FM@@@A)K>@'K@^[#A@PF
)@@G@@)]1@K@@@@@@@______READ  (@@@@<8L@@KQG_0@@[O/K@@[O.)@@[8LK@KWG_)@@[FN@@@APG
)@@G@@)K?[F@K-*S^G]A[#A-)K0CS@D@@@@=@BB@^@@@@@@=@@@@@=@@@@@&@@@@]1@@@@#(/,0@@@PH
)@@G@@/K@@K8FO@@@A)K5[F@^[#@CU^H]@@@@@@@@@C@$@@./K@@LY(@@@@@[@@@@@C@B@@/R[0@^&PI
)@@G@@/K@@GU*@@@@G/G@@K8FP@@@A)K"[F#KCU@K0CP^H]A@@@@@@@@@@@U@@@@@[/,0@@@[#)@@UPJ
)@@G@@N.@@@CC_)@@[[[@@@]C[B@@"[@)@@[FQ@@@A)LB[F#@-)K0CS[@^G]A)@@@@]@@@@#H@@@@UPK
)@@G@@C/@@@[/K@@LL*@@@@GH@@@#:C@@@@*@BM@^@@@@@@*FR@@@A)LK@V@^@@@@@)]3@K@)LN@V]PL
)@@G@@A-)K0@@@@@]3@@@@#(/,0@@@______READ  8L@@L#G_)@@[/K@@LNFS@@@A)LQ[N#KCS^G]PM
)@@G@@A[@^@@C/)@@]C/@@@[/K@@GU*@@@@G/G@@LYD@@@@=@BT@^@@@@@@=@@@@@@@@@@@@FT@@@APN
)@@G@@)L)[N#A@CS@^@@@@@@/)K@L!+@@@@I @@@@I*@@@@KH[@@@IC.@@@]C/)@@[ @@@@G*@@@@IPO
)@@G@@H@)@#?FU@@@A)L%[F@^G]A[@^G]A[@@@@@@@/K@@M\(@@@@> @@@@( @#@@@/K@@L0*@@@@QPP
)@@G@@@BY@^@@@@@@@/,0@RLFV@@@A)L3[N]%CS^G@CS[#@@ @@@@G(@@@@WC/@@@[@B=@^@@@@@@@PQ
)@@G@@@@@@@@@@@@@&@@@@@J@@@@@@/,0@@@FW@@@A)L.[EK0CS^G]A@K0]A@@@@@@[@@@@UC@D@@[PR
)@@G@@[@@@^$[@)@[^R[@@^VR]K@^TR]@@^IG@)@@&C/)__"FX@@@A)MA[F#@-)K0CS^G]A[#@@@@@PS
)@@G@@[@=@@[C@%@@[O[)@^=O[)@@UR[)@@JO@K@^PR@K@@UO])@^WR])@@UFY@@@A)MJ[N#@-)^G]PT
)@@G@@A@@K0@+@@@^$ @@@@G1@@@@I*@@@@I"^>@@[R[K@^*C@)@#;C/@@@[A[)@^(A@K@^*FZ@@@APU
)@@G@@)MT[F@^G]A[#@CS[#@@@@@@@G@@@^U;@@@@<[@@@@UC@B@@[R[0@^([@@@@(G@@@@(C/@@@[PV
)@@G@@/)K@MXGA@@@A)M+[N#@CS^@@@@@@@@O"K@@[O"@@@][[*@@[C[?@@[[[C@@@C[G@@@/K@@M%PW
)@@G@@(@@@@Q[@(@@[C@)@@UGB@@@A)M?[EK^@K0]A[#@-)@@@@@@@R[)@^IR@K@^TR])@^LC_)@@[PX
)@@G@@G@@@@JC/@__"/K@@NG8L@@M^O.@@@[GC@@@A)M5[F#@-)K0CS[#@-)^G@@@@(@@@@Q[@[@@[PY
)@@G@@C@@@@R[#)@@R[@@@[^Q[0@^VR[0@#?Q[K@^RR[K@#?GD@@@A)M"[V@@@@@@@G_)@@[O.)@@]PZ
)@@G@@O/K@@[O")@@][@B)@[C@ )@[[[A@@[C[E@@[[@&@@@C@%@@@/K@@N#GE@@@A)ND[F@K0CS^GQA
)@@G@@]A@K[#@@@@@@[@@@@%C/@@@[/K@@N6*@^@@PR[@@^& @@@@%[@)@@(C@)@@W8L@@M'GF@@@AQB
)@@G@@)NM[F#@-)^@K0]A@@@@@@@@@[@)@[^R]@@^MC_)@@]G@)@@JC/)__./K@@N6*@@@@IH@)@@JQC
)@@G@@C@)@@&GG@@@A)NV[N#@]@C@C@@@@@@C/@@@[8L@@NVG_)@@[O"@@@[/K@@N6*@@@@G/C@@N-QD
)@@G@@H@C@@@C@C@@[[#)@@RGH@@@A)N>[F#AC]A[@K0CS^[#@@@@@ @@@@Z/K@@N,(@@@@% @@@@%QE
)@@G@@/K@@N:*@@@@Z/K@@N\(@@@@GH@@@#?GI@@@A)N,[F@K0C]A[#@)]A[#@@@@@C@@@@#[@@@@)QF
)@@G@@C/@@@[/K@@N6(@@@@% @@@@%/K@@N2(@@@@)/K@@N6GJ@@@A)N7[F#@-)K0JEA[#@CS@@@@@QG
)@@G@@C/@]WJ[[)@@?C.)@@ [[@@@:C[@@#:[@(J_"C@)@#/R]K@@O[@@@@^GK@@@A)O@[N#@)]@CSQH
)@@G@@[#@)@@*@@@@G/C@@OFH@@@@$C/@@J$[@@@@?C/@@@^/K@@OA*@@@@G/C@@O^H@@@@$GL@@@AQI
)@@G@@)OE[N@^G@-)K[@^G@@[@@@@?C/@@@]/K@@OO*@@@@G/C@@OMH@@@@$C/@@[<[@@@@?C/@@@#QJ
)@@G@@/K@@OHGM@@@A)OO[EK0C@)]A[]?-)@@@@@@@@@@@@$/,0@@@[@@@@?C/@@@[/K@@OV*@@@@GQK
)@@G@@/C@@OTH@@@@$C/@@@DGN@@@A)OX[F#@-)K0CS^G]A[#@)*S@(@@@@([@[@@@C@@@@:R@K@@OQL
)@@G@@@C=@^@@@@@#(@@@@@?@@@@@?@@@@@:GO@@@A)O&@;@K:*S^FMA[#@-)@@@@@)]5@C@(010H0QM
)@@G@@@@K@@(@C(@^@@@[@]5/,0@@@@C*@^@/,0@@@/K@@O8GP@@@A)]6[S@@@@@@@ BE COCANNOTQN
)@@G@@RO OR  IS ZERIANCETHE VALE(S) VARIAB,066H FOR,I4***** GQ@@@A)#[@S@)O!@<]QO
)@@G@@8-UK0CS@@@@@)#^@C@(10X,0@C!@^@@@[@#^/,0@@@'^@@@@ATELY) ACCURMPUTEDGR@@@AQP
)@@G@@)# [S@@@@@@@PUTED BE COMANNOT R OR CINGULAX IS S MATRILATION CORREUS THEQQ
)@@G@@73H THGS@@@A)#K@K@)O1@:]8-UK0CS^G@@@)#M@C@(047H0@@K@@:@C0@^@@@[@#M/,0@@@QR
)@@G@@'^@@@@TELY) ACCURAGT@@@A)#N[C@@@@@@@@@@[C@@@@@@@5)    DEL ,AFOR MOORMED QS
)@@G@@T PERFSIS NO ANALYFACTOR***** GU@@@A)O6[F]8)]A[#@-SK0CS@@@@@@@@@@@@@@@^$QT
)@@G@@@@@@@&/,0@@@[@@@^$G@@@@&C/@@@[/K@@F9'^@@@@GV@@@A)O_[U@@@@@@@@@@@@@@@@@@@QU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GW@@@A)PE[M@@K0CS@QV
)@@G@@@@@@@@@@@@@@@@@@@%@@@@@^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GX@@@AQW
)@@G@@)PO[F#@-)K0CNOG]A[#@)CQ)/,0@@@/K@@F9@C8@^@@@@@@A@@@@#./,0@@@[@@@@FC@@@@:QX
)@@G@@@C6@^@GY@@@A)PX@;#@-)K0]AH]6)@)#W@K@51H 27(4A6,08L@@P-'^K@@@C8 )#0N.@@@#QY
)@@G@@R[K@#,@C'@^@@@[@#WGZ@@@A)#Y[C@@@@@@@@@@[C@@@@@@@)     ERRORSVIOUS OF PREQZ
)@@G@@CAUSE TED BEERMINAYSIS T. ANALHA@@@A)P=[F]8)C]A[#@-)K0CS^G@@9\@@^09,)@^,RA
)@@G@@9,@@^?9!)@^%R]0@^[@D[@^@/K@@P*N@0@P$'^@@@@HB@@@A)P![##@-)K0CS^G]A[#@-)@@RB
)@@G@@@@@@@@R[0@^'R[)@^9R[K@^8R[@@^7R@0@^6R@)@^5R@K@^49\)@^2HC@@@A)P5@3#@-)K0CRC
)@@G@@S^G]A@)#"@C@@@@@@@@@@@@@@@F@@S*4@K#"N[K@^_N[@@^"R])@^.R]K@^/R]@@^;HD@@@ARD
)@@G@@)P;@N#@-Y@@@)^@@K@)P.@V#@-)K0@@@@@@@9%@@^?9()@^%AA0@^[@D[@@]S63ANL/K@@@@RE
)@@G@@/K@K#"HE@@@A)Q@[##@-)K0CS^G]A[#@-)@@@@@@@@A[K@^8A[@@^7A@0@^6A@)@^5A@K@^4RF
)@@G@@9:)@^29:@@^09%)@^,HF@@@A)QC[F#@-)K0CS^G]A[#@)@@@C/@__"/K@@RV^[K@^_^[@@^"RG
)@@G@@A])@^.A]K@^/A]@@^;A[0@^'A[)@^9HG@@@A)QL[F#@-)^G]A@K0CS@@@@@@G/)__.C@)@ #RH
)@@G@@[@@@@XC/@@@[[@)@ ][@@@ [G/)__"C@)@^HG@@@@JHH@@@A)QU[EK0CS^G]A@K0CS^G@@@@RI
)@@G@@R@)@ ][@@@  G@@@@ C/@__"[#)@@ [@)@ ^N[@@ [R@K@ ]C_)@@[HI@@@A)Q<[F#@-)K0@RJ
)@@G@@CS^G]A@@@@@@C@@@#5A@0@ A[@@@@!"G]@@["G[@@[C@#@@[O@0@ ^R@0@@XN[K@  HJ@@@ARK
)@@G@@)Q?[F#@]@-)K0CS^G@@@@@@@*@@@@G"@@@#5C@@@@![@@@@!C@@@#5/K@@Q21@@@@G*@@@@GRL
)@@G@@"^@@@!HK@@@A)Q5[EK^G]A[#@-)[#@@@@@@@G@)@@XC/)@@[[@#@@[R@0@ AC@@@@![@@@@!RM
)@@G@@D@@@#5/K@@Q91@@@@GHL@@@A)Q"[N#@C@C]@)CS^G@R]0@^ @DR@^^/K@@RBN@0@RA8L@@QYRN
)@@G@@G_)@@[O/K@@[8LK@Q=O/)@@[[@)@@XHM@@@A)RC@;#@-)K0CS^G]A[#@@@@@)^]@C@@@F@@]RO
)@@G@@*4@K^]N[K@ HN[@@ GR@0@ FR@)@ ER@K@ D9\)@ BHN@@@A)RJ@N#@-Y@@@)^^@K@)RL@V#RP
)@@G@@@-)K0@@@@@@@A@K@ D9:)@ BAA0@^ @DR@@]COMCOR/K@@@@/K@K^]HO@@@A)RO[F#@-)K0CRQ
)@@G@@S[#@)]@@@@@@[^@@#:C8FK@@/K@@QK[@@@ #C8FK@@^[K@ H^[@@ GA@0@ FA@)@ EHP@@@ARR
)@@G@@)RX[N@^[@^@K[@@@@@[^@@C8C8FK@^[^@@P[C8FK@#[^@@P@C8FK@][^@@O_[^@@GNC8FK@[RS
)@@G@@[^@@O"HQ@@@A)R$[F@K^[@K^[@K^@@@@@@@@[^@@GF[^@@^:[^@@AA[^@@E3[^@@E'[^@@F]RT
)@@G@@[^@@DE[^@@L:[^@@B@HR@@@A)R0[F@K^[@K^[@K^@@@@@@@@[^@@A*[^@@C;[^@@L4[^@@^#RU
)@@G@@[^@@DS[^@@AH[^@@FP[^@@F)[^@@F%HS@@@A)R9[N@K^[@K[@^[#@@[@@@^K[^@@P^C8FK@ARV
)@@G@@[^@@P#C8FK@ [^@@EL[^@@^Z[^@@#%[^@@P][^@@D,HT@@@A)S#[N@K^[@^[@^[@@@[^@@AERW
)@@G@@[^@@PAC8FK@C[^@@P [^@@AFC8FK@B[^@@^)[^@@^?[^@@A [^@@#$HU@@@A)SH[N#@C@)CSRX
)@@G@@^[@K@@C8FK@F[^@@#*[^@@PC[^@@AB[@@@^C[^@@^[C8FK@E[^@@PBC8FK@D[@@@^FHV@@@ARY
)@@G@@)SR[F@K^[@K0]@-)K@@@@@@@[^@@#,[@@@^M[^@@AJC8FK@G[@@@^E[^@@#([^@@PD[^@@ACRZ
)@@G@@[^@@^]HW@@@A)S)[N@K^[@K^[@^[@@[^@@A^[^@@ADC8FK@H[^@@DU[^@@PE[^@@F^[^@@ENSA
)@@G@@[^@@L7[^@@C.[^@@]ZHX@@@A)S%[N@K^[#@CS^[@K@C8FK@J[^@@^0[^@@PG[^@@AG[@@@^DSB
)@@G@@C8FK@I[@@@^B[^@@#&[^@@PF[^@@^@HY@@@A)S4[N#@CS[#@)C]@C@[^@@PHC8FK@M[^@@PNSC
)@@G@@[^@@L8[^@@K][@@@^GC8FK@L[@@@^HC8FK@K[@@@^JHZ@@@A)S"[N@K0C@)]@C]@@@[^@@LRSD
)@@G@@[^@@PKC8FK@P[^@@PJC8FK@O[^@@PIC8FK@N[^@@C/[@@@^I[^@@AIIA@@@A)TC@2K^[@K0CSE
)@@G@@@@@@@@)#*@S@@@@@@]@@@@@[@@@@@@/K@@@@[@@@^L[^@@F#[^@@EM[^@@DTC8FK@QIB@@@ASF
)@@G@@)#:[S@@@@@@@KG@@@@MIA*@@@@@@@GN^1FK@Z/?;NFKO@@@@NW@@@@@@[@@[@@]@@@@@[@@@SG
)@@G@@      IC@@@A)#6[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AMODEL ZZ-Y8LI/0 =-NS@@@@SH
)@@G@@JHB:-M@@@@@_@@@@@DID@@@A@@^@@D@@H@@Z@[F@@[@[J@@B@@ @ I@C@@TI@@@@@]@@@@#5SI
)@@G@@@@@@[J@@@@@L@@@@^?@@@@@A@@@@@ S1SVOB      S1HEDC      S1GVAL      S1IODRSJ
)@@G@@      S1TIMI      S1INHC      S1GTAG      S1VLSD      S1SERR      S1RDI2SK
)@@G@@      S1RCOP      S1RLTM      S1RLT2      S1TIMA      S1MOP       S1VCSRSL
)@@G@@      S1VFWC      S1VFWT      S1PLTM      S1HED2      S1PRFT      S1SELTSM
)@@G@@      S1ENCI      S1PHED      S63AMD      NERR2$      NPRT$       NIO1$ SN
)@@G@@      NIO2$       SQRT        NERR3$      S63ANL      @@[@@@@@@@P.BLANK$SO
)@@G@@      ^@@@C@@]@@@@S6BLK       ]@@@C@@#@@@@S6FMTS      ]@@@C@@^@@@@S63FMTSP
)@@G@@      ]@@@C@@ @@@@S63BLC      ]@@@C@@A@@@@S63NBK      ]@@@C@@B@@@@S63BSVSQ
)@@G@@      ]@@@C@@C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*[S@@@*SDFF*@ @@@@      SR
)@@G@@SUBROUTINE S2ANAL(FIRST,@B@@@@     -   DINP,OUTS,SETID,MSET,MSETPT,     SS
)@@G@@@C@@@@     -   IVARS,ROWN,ROWPT,COLN,COLPT,BDATA,     @A@@@@     -   VSUST
)@@G@@M,VSSQ,VMIN,VMAX,XBAR)  @ @@@@      IMPLICIT INTEGER (A-Z)  @E@@@@      SU
)@@G@@DIMENSION DINP(1),OUTS(1),SETID(1),MSET(1),MSETPT(1)  @G@@@@      DIMENSSV
)@@G@@ION IVARS(1),ROWN(1),ROWPT(1),COLN(1),COLPT(1),BDATA(1)     @E@@@@      SW
)@@G@@DIMENSION VSUM(1),VSSQ(1),VMIN(1),VMAX(1),XBAR(1)     @B@@@@      DIMENSSX
)@@G@@ION SDV(1),VAR(1),DELTA(1)    @C@@@@      DIMENSION TSUM(1),TSSQ(1),TMINSY
)@@G@@(1),TMAX(1) @D@@@@      DIMENSION TBAR(1),TSDV(1),TVAR(1),TDELTA(1)     SZ
)@@G@@@A@@@@      DIMENSION TNAM(1),TNUMB(1)    @A@@@@      DIMENSION XPROD(1)TA
)@@G@@,XSA(1)     @A@@@@      DIMENSION VCONT(1),TCONT(1)   @^@@@@      DIMENSTB
)@@G@@ION KFLAG(1)@ @@@@      DIMENSION XSQ(1),XSB(1) @^@@@@      DIMENSION NATC
)@@G@@MES(1)@[@@@@C     @E@@@@C        MAIN DSTAT2 SUBROUTINE.  (TWO ENTRY POITD
)@@G@@NTS ARE USED@E@@@@C              BECAUSE OF THE LARGE NUMBER OF PARAMETETE
)@@G@@RS.)  @[@@@@C     @[@@@@C     @G@@@@      COMMON /S2ABLK/ NV,NVIN,MDATA,TF
)@@G@@REPM,CODES,COPIN,MLE,NSET,PLAN,     @A@@@@     -   LSUBHD,MLEHED(7),MDDHTG
)@@G@@ED(7) @[@@@@C     @[@@@@C     @]@@@@      RETURN@A@@@@      ENTRY S2ANL2TH
)@@G@@(SDV,VAR,DELTA,   @ @@@@     -   TSUM,TSSQ,TMIN,TMAX, @A@@@@     -   TBATI
)@@G@@R,TSDV,TVAR,TDELTA,     @^@@@@     -   TNAM,TNUMB,    @^@@@@     -   XPRTJ
)@@G@@OD,XSA,     @^@@@@     -   VCONT,TCONT,   @#@@@@     -   KFLAG,   @#@@@@TK
)@@G@@     -   XSQ,XSB, @#@@@@     -   NAMES)   @[@@@@C     @[@@@@C     @B@@@@TL
)@@G@@C             INITIALIZE IF FIRST CALL    @[@@@@C     @A@@@@      IF(FIRTM
)@@G@@ST .EQ. 0) GO TO 100    @B@@@@      CALL S2LOAD(OUTS,SETID,MSET,MSETPT, TN
)@@G@@@C@@@@     -   IVARS,ROWN,ROWPT,COLN,COLPT,BDATA,     @ @@@@     -   IDXTO
)@@G@@T,IDSQ,ITSA,ITSB) @[@@@@C     @ @@@@C             COMPLETE DATA   @[@@@@TP
)@@G@@C     @A@@@@ 100  IF(MDATA .NE. 0) GO TO 200    @A@@[@      CALL S2COMP(TQ
)@@G@@DINP,DINP(NV+1),  @A[@@@     -   OUTS,SETID,MSET,MSETPT,    @C@@@@     -TR
)@@G@@   IVARS,ROWN,ROWPT,COLN,COLPT,BDATA,     @ @@@@     -   VSUM,VSSQ,VMIN,TS
)@@G@@VMAX, @ @@@@     -   XBAR,SDV,VAR,DELTA,  @ @@@@     -   TSUM,TSSQ,TMIN,TT
)@@G@@TMAX, @A@@@@     -   TBAR,TSDV,TVAR,TDELTA,     @^@@@@     -   TNAM,TNUMTU
)@@G@@B,    @^@@@@     -   XPROD,XSA,     @#@@@@     -   NAMES)   @]@@@@      TV
)@@G@@RETURN@[@@@@C     @D@@@@C             MDATA  -  BIVARIATE SUBSAMPLE METHTW
)@@G@@OD    @[@@@@C     @A@@@@ 200  IF(REPM .NE. 0) GO TO 300     @C@@[@      TX
)@@G@@CALL S2BVSS(DINP,DINP(NV+1),DINP(2*NV+1), @A[@@@     -   OUTS,SETID,MSETTY
)@@G@@,MSETPT,    @C@@@@     -   IVARS,ROWN,ROWPT,COLN,COLPT,BDATA,     @A@@@@TZ
)@@G@@     -   VCONT,VSUM,VSSQ,VMIN,VMAX, @ @@@@     -   XBAR,SDV,VAR,DELTA,  UA
)@@G@@@A@@@@     -   TSUM,TSSQ,TMIN,TMAX,TCONT, @A@@@@     -   TBAR,TSDV,TVAR,UB
)@@G@@TDELTA,     @^@@@@     -   TNAM,TNUMB,    @ @@@@     -   XPROD,IDXT,XSQ,UC
)@@G@@IDSQ, @ @@@@     -   XSA,ITSA,XSB,ITSB,   @#@@@@     -   KFLAG,   @#@@@@UD
)@@G@@     -   NAMES)   @]@@@@      RETURN@[@@@@C     @B@@@@C             MDATUE
)@@G@@A  -  REPMEANS METHOD   @[@@@@C     @C@@[@ 300  CALL S2REPM(DINP,DINP(NVUF
)@@G@@+1),DINP(2*NV+1), @A[@@@     -   OUTS,SETID,MSET,MSETPT,    @C@@@@     -UG
)@@G@@   IVARS,ROWN,ROWPT,COLN,COLPT,BDATA,     @A@@@@     -   VCONT,VSUM,VSSQUH
)@@G@@,VMIN,VMAX, @ @@@@     -   XBAR,SDV,VAR,DELTA,  @A@@@@     -   TSUM,TSSQUI
)@@G@@,TMIN,TMAX,TCONT, @A@@@@     -   TBAR,TSDV,TVAR,TDELTA,     @^@@@@     -UJ
)@@G@@   TNAM,TNUMB,    @ @@@@     -   XPROD,IDXT,XSQ,IDSQ, @ @@@@     -   XSAUK
)@@G@@,ITSA,XSB,ITSB,   @#@@@@     -   KFLAG,   @#@@@@     -   NAMES)   @]@@@@UL
)@@G@@      RETURN@]@@@@      END   ___   @A@@@@      DIMENSION VCONT(1),TCONTUM
)@@G@@(1)   @^@@@@      DIMENSION KFLAG(1)@ @@@@      DIMENSION XSQ(1),XSB(1) UN
)@@G@@@^@@@@      DIMENSION NAMES(1)@[@@@@C     @E@@@@)@@[N@K^G]@-@@@@@@@@@@@@UO
)@@G@@@@@@@@@@@@@@@@@@@@/,0@@@/K@@@P(@@@@@@[K@@A/K@@]5N@0@@]AA@@@A)@E[M@[#]A^GUP
)@@G@@CS@@@@@@@@@#@@@@@]@@@@@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AB@@@AUQ
)@@G@@)@O[N#]])CEA[@K+C@@@@@@X@@@@@@/,0@@@^^K@@XN8L@@@O@K@@DR@K@@@/K@@[[*@@@@]UR
)@@G@@@[P@@AAC@@@A)@Y[U@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@US
)@@G@@@@@@@@@@@@@@@@@@@@AD@@@A)@([U@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AE@@@A)@4[U@@[#]@@N@0@[@@[S@@A@@@@@@@@@@@@UU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AF@@@A)@_[N@K0)*]]--[^G@N8W@@@UV
)@@G@@G@@@@D;@@@@<C@@@@@O@K@@DR@K@@@/K@@[/*@@@@#@[T@@A/K@@]5AG@@@A)[D[N@^[]K)CUW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[J@@@@[I@@@@@@/,0@@@^^K@[IN8L@@@^^K@[JAH@@@AUX
)@@G@@)[N[U@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UY
)@@G@@@@@@@@AI@@@A)[Y[U@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UZ
)@@G@@@@@@@@@@@@@@@@@@@@AJ@@@A)[([M@[#@-)@@@@@@@@@@@@@@@@@@[@@@@@@@@@@@@@@@@@@VA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AK@@@A)[3[N#@-)^GC]@--[@R@K@@@@[X@@A/K@@]5VB
)@@G@@N@0@[;@[W@@A@@@@@@@@@@@@@@@@@#@@@@@@@@@@@]AL@@@A)[.[N#]]CS^@K^D)@@@@@@@@VC
)@@G@@/,0@@@^^K@]BN8L@@@^^K@]CN8W@@@G@@@@D;@@@@<C@@@@@O@K@@DAM@@@A)]B[V@K@@@@@VD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@]C@@@@]BAN@@@AVE
)@@G@@)]M[U@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@VF
)@@G@@@@@@@@AO@@@A)]X[U@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@VG
)@@G@@@@@@@@@@@@@@@@@@@@AP@@@A)]*[N#@-)K0CS[#@@@@[Y@@A@@@@@@@@@@@@@@@@@#@@@@@@VH
)@@G@@@@@@@]@@@@@@@@@@@[@@@@@@@@@@@@AQ@@@A)]2@3@K^GCSK0-)@@@)@^@C@@@@@@@@@@@@@VI
)@@G@@@@F@@@*4@K@^R@K@@ER]0@@B@[Z@@A/K@@]5N@0@]4AR@@@A)]8@N#] @@@@)@A@K@)]'@<#VJ
)@@G@@]A^G@@/KH@@@A@K@@E[^@@@^AA0@@B@[Z@@#S2ANAL/K@@@@/K@K@^AS@@@A)]"[MK[@^[@KVK
)@@G@@0)@@@@C8FK@][^@@]A[@@@@D[^@@@W[^@@[HC8FK@[[^@@@#C8FK@@/\K@]'C8@@@MAT@@@AVL
)@@G@@)#C[N@K^[@^[@K^@@@C8FK@^[^@@@B[^@@]E[^@@[L[^@@@ZC8FK@#[^@@[K[^@@]D[^@@@AVM
)@@G@@[^@@@YAU@@@A)#M[N@K^[@^[@K^@@@C8FK@A[^@@]G[^@@@D[^@@[N[^@@@-C8FK@ [^@@@)VN
)@@G@@[^@@[M[^@@@C[^@@]FAV@@@A)#W[N@K^[@^[@K^@@@C8FK@C[^@@[P[^@@@<[^@@]I[^@@@FVO
)@@G@@C8FK@B[^@@@+[^@@]H[^@@@E[^@@[OAW@@@A)#&[N@K^[@^[@K^@@@C8FK@E[^@@@H[^@@[RVP
)@@G@@[^@@]K[^@@@>C8FK@D[^@@@=[^@@]J[^@@@G[^@@[QAX@@@A)#0[N@K^[@^[@K^@@@C8FK@GVQ
)@@G@@[^@@@$[^@@@J[^@@]M[^@@[TC8FK@F[^@@[S[^@@]L[^@@@I[^@@@&AY@@@A)#'[N@K^@K^[VR
)@@G@@@^[@@@[^@@[X[^@@@%C8FK@I[^@@]P[^@@@([^@@[WC8FK@H[^@@@*[^@@]O[^@@[VAZ@@@AVS
)@@G@@)^^[N@^[@K[@K^[@@@/K@@@@[^@@]S[^@@[Z[^@@@?C8FK@K[^@@[Y[^@@@:[^@@]RC8FK@JVT
)@@G@@[^@@]QBA@@@A)^I[MK[@K^@K^[@@@@[^@@]U[^@@@,[^@@[-C8FK@[[^@@[)[^@@@![^@@]TVU
)@@G@@C8FK@@/\K@]'C8@@@QBB@@@A)^S[MK^[@^[@K[@@@@[^@@]XC8FK@^[^@@@0[^@@[<[^@@]WVV
)@@G@@C8FK@#[^@@[+[^@@]V[^@@@\C8FK@]BC@@@A)^+[N@K[@K^@K^[@@@[^@@]Z[^@@@3[^@@[&VW
)@@G@@C8FK@A[^@@[>[^@@@2[^@@]YC8FK@ [^@@@1[^@@[=BD@@@A)^?[MK^[@^[@K[@@@@[^@@[%VX
)@@G@@C8FK@D[^@@[([^@@@5[^@@]+C8FK@C[^@@]-[^@@@4[^@@[*C8FK@BBE@@@A)^6[N@K[@K^@VY
)@@G@@K^[@@@[^@@]>[^@@[?[^@@@8C8FK@F[^@@[:[^@@@7[^@@]=C8FK@E[^@@@6[^@@]<BF@@@AVZ
)@@G@@) @[MK^[@^[@K[@@@@[^@@@;C8FK@I[^@@]$[^@@[,[^@@@'C8FK@H[^@@[![^@@@9[^@@]&WA
)@@G@@C8FK@GBG@@@A) E[N@K[@K[@K[@@@@[^@@[6C8FK@L[^@@])[^@@[$C8FK@K[^@@[U[^@@]NWB
)@@G@@C8FK@J[^@@]:[^@@[2BH@@@A) O[N@^[@^[@^[@@@@[^@@]0[^@@@/C8FK@O[^@@[4[^@@]!WC
)@@G@@C8FK@N[^@@[0[^@@](C8FK@M[^@@]\BI@@@A) Y@N@K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/K@@@#[^@@[7BJ@@@A@@^@@#@@B@@ @@L@@]@@T@@[WE
)@@G@@@@#@@F@C@@ )@@@@@SS2LOAD      S2COMP      S2BVSS      S2REPM      NERR3$WF
)@@G@@      S2ANAL      @@[@@@@@@@]"S2ANL2      @@[@@@@@@@^IS2ABLK      ]@@@C@WG
)@@G@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@*[S@@@*SDFF*@B@@[@      SUBROUTINE S2BVSS(DINP,DWJ
)@@G@@INP2,CODVEC,@^[@@@     -   OUTS,SETID,    @^@@@@     -   MSET,MSETPT,   WK
)@@G@@@C@@@@     -   IVARS,ROWN,ROWPT,COLN,COLPT,BDATA,     @A@@@@     -   VCOWL
)@@G@@NT,VSUM,VSSQ,VMIN,VMAX, @^@@@@     -   XBAR,SDV,VAR,  @#@@@@     -   DELWM
)@@G@@TA,   @A@@@@     -   TSUM,TSSQ,TMIN,TMAX,TCONT, @^@@@@     -   TBAR,TSDVWN
)@@G@@,TVAR,@#@@@@     -   TDELTA,  @^@@@@     -   TNAM,TNUMB,    @ @@@@     -WO
)@@G@@   XTRI,IDXT,XSQ,IDSQ,  @ @@@@     -   XTSV,ITSV,XSSV,ISSV, @#@@@@     -WP
)@@G@@   KFLAG,   @#@@@@     -   NAMES)   @ @@@@      IMPLICIT INTEGER (A-Z)  WQ
)@@G@@@B@@[@      DIMENSION DINP(1),DINP2(1),CODVEC(1)@A[@@@      DIMENSION OUWR
)@@G@@TS(20,1),SETID(1) @A@@@@      DIMENSION MSET(1),MSETPT(1)   @G@@@@      WS
)@@G@@DIMENSION IVARS(1),ROWN(1),ROWPT(1),COLN(1),COLPT(1),BDATA(1)     @D@@@@WT
)@@G@@      REAL VCONT(1),VSUM(1),VSSQ(1),VMIN(1),VMAX(1)   @A@@@@      REAL XWU
)@@G@@BAR(1),SDV(1),VAR(1)    @^@@@@      REAL DELTA(1)     @D@@@@      REAL TWV
)@@G@@SUM(1),TSSQ(1),TMIN(1),TMAX(1),TCONT(1)   @A@@@@      REAL TBAR(1),TSDV(WW
)@@G@@1),TVAR(1)  @^@@@@      REAL TDELTA(1)    @A@@@@      DIMENSION TNAM(2,1WX
)@@G@@),TNUMB(1)  @A@@@@      REAL XTRI(IDXT,1),XSQ(IDSQ,1) @A@@@@      REAL XWY
)@@G@@TSV(ITSV,1),XSSV(ISSV,1)@^@@@@      DIMENSION KFLAG(1)@ @@@@      DIMENSWZ
)@@G@@ION NAMES(2,1)    @[@@@@C     @[@@@@C     @G@@@@C        DSTAT2 SUBROUTIXA
)@@G@@NE FOR MISSING DATA - BIVAR. SUBSAMPLE METHOD.  @[@@@@C     @[@@@@C     XB
)@@G@@@G@@@@      COMMON /S2ABLK/ NV,NVIN,MDATA,REPM,CODES,COPIN,MLE,NSET,PLANXC
)@@G@@,     @A@@@@     -   LSUBHD,MLEHED(7),MDDHED(7) @F@@@@      COMMON /S2FMXD
)@@G@@TS/ NAMFMT(6),NUMFMT(6),DATFMT(6),MAMFMT(6),    @B@@@@     -   MUMFMT(6)XE
)@@G@@,EATFMT(6),BATFMT(6)    @G@@@@      COMMON /S2HEDS/PRDHED(7),COVHED(7),CXF
)@@G@@ORHED(7),SUMHED(7),CNTHED(7), @G@@@@     -   BARHED(7),SDVHED(7),ZTNHED(XG
)@@G@@7),ZSGHED(7),TTNHED(7),TSGHED(7)    @[@@@@C     @^@@@@      COMMON BLCOMXH
)@@G@@(2)   @[@@@@C     @ @@@@      REAL DF,DFF,TEMP,SEMP   @#@@@@      REAL DXI
)@@G@@FBETA @#@@@@      REAL CC     @[@@@@C     @[@@@@C     @^@@@@C           XJ
)@@G@@  INITIALIZE@[@@@@C     @]@@@@      IERR=0@^@@@@      NY=NAMES(1,1)     XK
)@@G@@@^@@@@      CALL S1HEDC(0)    @[@@@@C     @A@@@@ 90   IF(PLAN .EQ. 2) GOXL
)@@G@@ TO 200     @@@@@@@@@@@@@[@@@@C     @G@@@@C             PLAN=0 OR 1  -  XM
)@@G@@COMPUTE PRODUCTS FOR VARIABLES IN MSET    @[@@@@C     @E@@@@ 100  CALL SXN
)@@G@@2MDIN(NVIN,MSET,PLAN,MSET,NVIN,1,0,0,262145,DFF,@E@@@@     -   VCONT,VSUXO
)@@G@@M,VSSQ,VMIN,VMAX,KFLAG,XTRI,IDXT,XSQ,IDSQ,@B@@[@     -   0,DINP,DINP2,COXP
)@@G@@DVEC,CODES,IERR)  @#[@@@      GO TO 250   @[@@@@C     @D@@@@C           XQ
)@@G@@  PLAN = 2  -  COMPUTE PRODUCTS BY BLOCKS @[@@@@C     @G@@@@ 200  CALL SXR
)@@G@@2MDIN(NVIN,MSET,NSET,IVARS,ROWN,ROWPT,COLN,COLPT,BDATA,     @F@@@@     -XS
)@@G@@   DFF,VCONT,VSUM,VSSQ,VMIN,VMAX,KFLAG,XTRI,IDXT,XSQ,IDSQ,  @B@@[@     -XT
)@@G@@   0,DINP,DINP2,CODVEC,CODES,IERR)  @ [@@@ 250  IF(IERR .NE. 0) RETURN  XU
)@@G@@@[@@@@C     @C@@@@C             COMPUTE DESCRIPTIVE STATISTICS    @[@@@@XV
)@@G@@C     @]@@@@      CC=0  @ @@@@      IF(MLE .EQ. 0) CC=1.    @#@@@@      XW
)@@G@@CALL S1VFWC @^@@@@      DO 290 J=1,NVIN   @#@@@@      DF=VCONT(J) @A@@@@XX
)@@G@@      IF(DF .GT. 1.5) GO TO 260     @#@@@@      VAR(J)=0    @#@@@@      XY
)@@G@@DELTA(J)=0  @^@@@@      XBAR(J)=VSUM(J)   @#@@@@      GO TO 290   @#@@@@XZ
)@@G@@ 260  CONTINUE    @^@@@@      XBAR(J)=VSUM(J)/DF@B@@@@      TEMP=(DF*VSSYA
)@@G@@Q(J)-VSUM(J)*VSUM(J))/DF@B@@@@      IF(VMIN(J) .EQ. VMAX(J)) TEMP=0     YB
)@@G@@@#@@@@      SEMP=TEMP   @^@@@@      DFBETA=DF*2.0**-26@C@@@@      IF(TEMYC
)@@G@@P/VSSQ(J) .GE.  2*DFBETA) GO TO 280 @ @@@@      IF(TEMP .LT. 0) TEMP=0  YD
)@@G@@@A@@@@      IF(SEMP .LE. 0) SEMP=1.0E-20  @ @@@@ 280  VAR(J)=TEMP/(DF-CCYE
)@@G@@)     @A@@@@      DELTA(J)=DFBETA*VSSQ(J)/SEMP  @ @@@@ 290  SDV(J)=SQRT(YF
)@@G@@VAR(J))     @]@@@@      DF=DFF@A@@@@      CALL S1VFWT(6H2BVSS1,$999)    YG
)@@G@@@[@@@@C     @C@@@@C             BEGIN OUTPUT LOOP - SET SUBHEADING@[@@@@YH
)@@G@@C     @]@@@@ 300  NT=0  @#@@@@ 310  NT=NT+1     @ @@@@      IF(NT .GT. NYI
)@@G@@SET) RETURN @^@@@@      CALL S1HEDC(100)  @#@@@@      ID=SETID(NT)@ @@@@YJ
)@@G@@      IF(ID .EQ. 0) GO TO 320 @A@@@@      IF(ID .EQ. '      ') GO TO 320YK
)@@G@@@ @@@@      BLCOM(LSUBHD)='SUBSET'  @^@@@@      BLCOM(LSUBHD+1)=ID@#@@@@YL
)@@G@@      GO TO 350   @ @@@@ 320  BLCOM(LSUBHD)='      '  @ @@@@      BLCOM(YM
)@@G@@LSUBHD+1)='      '@[@@@@C     @D@@@@C             SELECT AND OUTPUT DESCYN
)@@G@@RIPTIVE STATISTICS@[@@@@C     @^@@@@ 350  NOPROD=OUTS(20,NT)@ @@@@      YO
)@@G@@IF(ID .NE. 0) GO TO 360 @^@@@@      CALL S1HEDC(10+NV)@G@@@@      CALL SYP
)@@G@@1DSP(XBAR,SDV,VAR,DELTA,NAMES,MSET,VCONT,VMIN,VMAX,NV,DF,   @^@@@@     -YQ
)@@G@@   MLEHED,MDDHED) @A@@@@      IF(NOPROD .NE. 0) GO TO 310   @#@@@@      YR
)@@G@@GO TO 400   @#@@@@ 360  NA=ROWN(NT) @^@@@@      JRR=ROWPT(NT)     @B@@@@YS
)@@G@@      CALL SELECT(NA,IVARS(JRR),0,0,NLAST)@#@@@@      NB=COLN(NT) @ @@@@YT
)@@G@@      IF(NB .EQ. 0) GO TO 370 @^@@@@      JCC=COLPT(NT)     @C@@@@      YU
)@@G@@CALL SELECT(NB,IVARS(JCC),1,NA,NLAST)     @ @@@@ 370  CALL S1HEDC(10+NLAYV
)@@G@@ST)   @G@@@@      CALL S1DSP(TBAR,TSDV,TVAR,TDELTA,TNAM,TNUMB,TCONT,TMINYW
)@@G@@,TMAX,NLAST,@ @@@@     -   DF,MLEHED,MDDHED)    @A@@@@      IF(NOPROD .NYX
)@@G@@E. 0) GO TO 310   @B@@@@      IF(NLAST .EQ.  NA+NB) GO TO 400     @C@@@@YY
)@@G@@      CALL SELECT(NB,IVARS(JCC),0,NA,NLAST)     @[@@@@C     @C@@@@C     YZ
)@@G@@        SELECT SUM,SSQ AND PRODUCTS DATA  @[@@@@C     @ @@@@ 400  IF(ID ZA
)@@G@@.NE. 0) GO TO 450 @#@@@@      CTYPE=1     @]@@@@      NA=NV @]@@@@      ZB
)@@G@@NB=0  @]@@@@      LDAT=1@]@@@@      LSSQ=1@D@@@@      IF(PLAN .EQ. 2  .OZC
)@@G@@R.  NSET .EQ. 1) GO TO 420    @#@@@@      CTYPE=2     @^@@@@      NELT=NZD
)@@G@@A*(NA+1)/2  @^@@@@      DO 405 I=1,NELT   @ @@@@      XTSV(I,1)=XTRI(I,1ZE
)@@G@@)     @ @@@@ 405  XTSV(I,2)=XTRI(I,2)     @#@@@@      NELT=NA*NA  @^@@@@ZF
)@@G@@      DO 410 I=1,NELT   @^@@@@      XSSV(I,1)=XSQ(I,1)@^@@@@      XSSV(IZG
)@@G@@,2)=XSQ(I,2)@#@@@@ 410  CONTINUE    @#@@@@ 420  TNAM(1,1)=0 @^@@@@      ZH
)@@G@@DO 430 I=1,NV     @^@@@@      TNUMB(I)=MSET(I)  @^@@@@      TCONT(I)=VCOZI
)@@G@@NT(I) @^@@@@      TSUM(I)=VSUM(I)   @^@@@@      TSSQ(I)=VSSQ(I)   @ @@@@ZJ
)@@G@@      IF(NY .EQ. 0) GO TO 430 @ @@@@      TNAM(1,I)=NAMES(1,I)    @ @@@@ZK
)@@G@@      TNAM(2,I)=NAMES(2,I)    @#@@@@ 430  CONTINUE    @#@@@@      GO TO ZL
)@@G@@500   @[@@@@C     @^@@@@ 450  DO 460 I=1,NLAST  @#@@@@      J=TNUMB(I)  ZM
)@@G@@@#@@@@      J=MSETPT(J) @^@@@@      TSUM(I)=VSUM(J)   @^@@@@ 460  TSSQ(IZN
)@@G@@)=VSSQ(J)   @^@@@@      LDAT=BDATA(NT)    @^@@@@      LSSQ=LDAT/262144  ZO
)@@G@@@ @@@@      LDAT=AND(LDAT,262143)   @#@@@@      CTYPE=1     @A@@@@      ZP
)@@G@@IF(PLAN .EQ. 2) GO TO 500     @#@@@@      CTYPE=2     @ @@@@      IF(NB ZQ
)@@G@@.NE. 0) GO TO 480 @^@@@@      CALL SELTRI(TNUMB,@D@@@@     -   XTRI(1,1)ZR
)@@G@@,XTRI(1,2),XTSV(1,1),XTSV(1,2),     @E@@@@     -   XSQ(1,1),XSQ(1,2),NVIZS
)@@G@@N, XSSV(1,1),XSSV(1,2),NA)    @#@@@@      GO TO 500   @#@@@@ 480  LU=NA*ZT
)@@G@@NB+1  @A@@@@      CALL SELREC(TNUMB,TNUMB(NA+1),@E@@@@     -   XTRI(1,1)ZU
)@@G@@,XTRI(1,2),XTSV(1,1),XTSV(1,2),NA,NB,     @A@@@@     -   XSQ(1,1),XSQ(1,ZV
)@@G@@2),NVIN,    @D@@@@     -   XSSV(1,1),XSSV(LU,1),XSSV(1,2),XSSV(LU,2) )  ZW
)@@G@@@[@@@@C     @A@@@@C             OUTPUT COUNTS MATRIX  @[@@@@C     @F@@@@ZX
)@@G@@ 500  CALL S2PMAT(XTRI(LDAT,1),XTSV(1,1),CTYPE,TNAM,TNUMB,CNTHED, @G@@@@ZY
)@@G@@     -   MDDHED,0,'(2X,I3,1X,A6,A2,12F9.0)',NAMFMT,NUMFMT,12,NA,NB,DF)  ZZ
)@@G@@@[@@@@C     @C@@@@C             OUTPUT PRODUCTS MATRIX IF SELECTED@[@@@@AA
)@@G@@C     @B@@@@ 600  IF(OUTS(1,NT) .EQ. 0) GO TO 620     @F@@@@      CALL SAB
)@@G@@2PMAT(XTRI(LDAT,2),XTSV(1,2),CTYPE,TNAM,TNUMB,PRDHED, @D@@@@     -   MDDAC
)@@G@@HED,0,EATFMT,MAMFMT,MUMFMT,9,NA,NB,DF)    @[@@@@C     @E@@@@C           AD
)@@G@@  DETERMINE IF ADDITIONAL COMPUTATIONS NEEDED   @[@@@@C     @#@@@@ 620  AE
)@@G@@NEDCOR=0    @A@@@@      IF(OUTS(3,NT) .EQ. 0) NEDCOR=1@F@@@@      IF(OUTAF
)@@G@@S(7,NT) .NE. 0  .OR.  OUTS(8,NT) .NE. 0) NEDCOR=1     @F@@@@      IF(OUTAG
)@@G@@S(9,NT) .NE. 0  .OR.  OUTS(10,NT) .NE. 0) NEDCOR=1    @F@@@@      IF(OUTAH
)@@G@@S(11,NT) .NE. 0  .OR.  OUTS(12,NT) .NE. 0) NEDCOR=1   @F@@@@      IF(OUTAI
)@@G@@S(17,NT) .NE. 0  .OR.  OUTS(18,NT) .NE. 0) NEDCOR=1   @^@@@@      COVAR=AJ
)@@G@@OUTS(2,NT)  @D@@@@      IF(COVAR .EQ. 0  .AND.  NEDCOR .EQ. 0) GO TO 930AK
)@@G@@@[@@@@C     @A@@@@C             FORM COVARIANCE MATRIX@[@@@@C     @#@@@@AL
)@@G@@ 650  CALL S1VFWC @ @@@@      IF(NB .NE. 0) GO TO 670 @A@@@@      IF(CTYAM
)@@G@@PE .EQ. 2) GO TO 660    @G@@@@      CALL COVTRI(XTRI(LDAT,1),XTRI(LDAT,2AN
)@@G@@),XSQ(LSSQ,1),XSQ(LSSQ,2),NA) @#@@@@      GO TO 690   @F@@@@ 660  CALL CAO
)@@G@@OVTRI(XTSV(1,1),XTSV(1,2),XSSV(1,1),XSSV(1,2),NA)     @#@@@@      GO TO AP
)@@G@@690   @A@@@@ 670  IF(CTYPE .EQ. 2) GO TO 680    @^@@@@      LU=LSSQ+NA*NAQ
)@@G@@B     @F@@@@      CALL COVREC(XTRI(LDAT,1),XTRI(LDAT,2),XSQ(LSSQ,1),XSQ(AR
)@@G@@LU,1),@B@@@@     -   XSQ(LSSQ,2),XSQ(LU,2),NA,NB)     @#@@@@      GO TO AS
)@@G@@690   @#@@@@ 680  LU=NA*NB+1  @E@@@@      CALL COVREC(XTSV(1,1),XTSV(1,2AT
)@@G@@),XSSV(1,1),XSSV(LU,1), @A@@@@     -   XSSV(1,2),XSSV(LU,2),NA,NB)@A@@@@AU
)@@G@@ 690  CALL S1VFWT(6H2BVSS2,$999)    @[@@@@C     @D@@@@C             PRINAV
)@@G@@T COVARIANCE MATRIX IF SELECTED     @[@@@@C     @A@@@@ 700  IF(COVAR .EQAW
)@@G@@. 0) GO TO 750    @E@@@@      CALL S2PMAT(XTRI(LDAT,2),XTSV(1,2),CTYPE,TAX
)@@G@@NAM,TNUMB,  @F@@@@     -   COVHED,MDDHED,MLEHED,EATFMT,MAMFMT,MUMFMT,9,NAY
)@@G@@A,NB,DF)    @[@@@@C     @E@@@@C             COMPUTE CORRELATION MATRIX AAZ
)@@G@@ND SDV MATRIX     @[@@@@C     @A@@@@ 750  IF(NEDCOR .EQ. 0) GO TO 310   BA
)@@G@@@#@@@@      CALL S1VFWC @#@@@@      NZERO=0     @ @@@@      IF(NB .NE. 0BB
)@@G@@) GO TO 770 @A@@@@      IF(CTYPE .EQ. 2) GO TO 760    @E@@@@      CALL CBC
)@@G@@ORTRI(XTRI(LDAT,1),XTRI(LDAT,2),XSQ(LSSQ,2),NA) @#@@@@      GO TO 790   BD
)@@G@@@D@@@@ 760  CALL CORTRI(XTSV(1,1),XTSV(1,2),XSSV(1,2),NA)   @#@@@@      BE
)@@G@@GO TO 790   @A@@@@ 770  IF(CTYPE .EQ. 2) GO TO 780    @^@@@@      LU=LSSBF
)@@G@@Q+NA*NB     @G@@@@      CALL CORREC(XTRI(LDAT,1),XTRI(LDAT,2),XSQ(LSSQ,2BG
)@@G@@),XSQ(LU,2),NA,NB)@#@@@@      GO TO 790   @#@@@@ 780  LU=NA*NB+1  @F@@@@BH
)@@G@@      CALL CORREC(XTSV(1,1),XTSV(1,2),XSSV(1,2),XSSV(LU,2),NA,NB) @A@@@@BI
)@@G@@ 790  CALL S1VFWT(6H2BVSS3,$999)    @[@@@@C     @D@@@@C             PRINBJ
)@@G@@T CORRELATIONS IF NOT SUPPRESSED    @[@@@@C     @B@@@@ 800  IF(OUTS(3,NTBK
)@@G@@) .NE. 0) GO TO 850     @E@@@@      CALL S2PMAT(XTRI(LDAT,2),XTSV(1,2),CBL
)@@G@@TYPE,TNAM,TNUMB,  @E@@@@     -   CORHED,MDDHED,0,DATFMT,NAMFMT,NUMFMT,12BM
)@@G@@,NA,NB,DF)  @A@@@@      IF(NZERO .EQ. 0) GO TO 850    @^@@@@      PRINT BN
)@@G@@9810,NZERO  @G@@@@ 9810 FORMAT('0***** DSTAT2 ERROR.',I4,' ENTRIES IN COBO
)@@G@@RRELATION MATRIX A@F@@@@     -RE ZERO BECAUSE STANDARD DEVIATIONS ARE ZEBP
)@@G@@RO OR COUNTS'/25X,@ @@@@     -   'ARE INSUFFICIENT')  @[@@@@C     @B@@@@BQ
)@@G@@C             PUNCH AND FILE CORRELATIONS @[@@@@C     @G@@@@ 850  CALL SBR
)@@G@@2WCOR(XTRI(LDAT,2),XTSV(1,2),CTYPE,DINP,NA,NB,OUTS(17,NT),  @^@@@@     -BS
)@@G@@   OUTS(18,NT))   @[@@@@C     @F@@@@C             T AND Z TRANSFORMATIONBT
)@@G@@S AND SIGNIFICANCE LEVELS     @[@@@@C     @A@@@@ 900  IF(CTYPE .EQ. 2) GBU
)@@G@@O TO 920    @F@@@@      CALL S2CTRN(XTRI(LDAT,2),NA,NB,TNAM,TNUMB,OUTS(9BV
)@@G@@,NT),DF,    @A@@@@     -   MDDHED,XTRI(LDAT,1),$999)  @#@@@@      GO TO BW
)@@G@@930   @E@@@@ 920  CALL S2CTRN(XTSV(1,2),NA,NB,TNAM,TNUMB,OUTS(9,NT),DF, BX
)@@G@@@A@@@@     -   MDDHED,XTSV(1,1),$999)     @[@@@@C     @C@@@@C           BY
)@@G@@  PRINT SUMS MATRIX IF SELECTED     @[@@@@C     @B@@@@ 930  IF(OUTS(6,NTBZ
)@@G@@) .EQ. 0) GO TO 950     @ @@@@      IF(NB .NE. 0) GO TO 940 @E@@@@      CA
)@@G@@CALL S2PMAT(XSQ(LSSQ,1),XSSV(1,1),CTYPE,TNAM,TNUMB,   @E@@@@     -   SUMCB
)@@G@@HED,MDDHED,0,EATFMT,MAMFMT,MUMFMT,9,NA,-1,DF)   @#@@@@      GO TO 950   CC
)@@G@@@^@@@@ 940  SUMHED(5)='PART 1'@E@@@@      CALL S2PMAT(XSQ(LSSQ,1),XSSV(1CD
)@@G@@,1),CTYPE,TNAM,TNUMB,   @E@@@@     -   SUMHED,MDDHED,0,EATFMT,MAMFMT,MUMCE
)@@G@@FMT,9,NA,NB,DF)   @^@@@@      SUMHED(5)='PART 2'@^@@@@      LU=LSSQ+NA*NCF
)@@G@@B     @#@@@@      LUU=NA*NB+1 @E@@@@      CALL S2PMAT(XSQ(LU,1),XSSV(LUUCG
)@@G@@,1),CTYPE,TNAM,TNUMB,   @E@@@@     -   SUMHED,MDDHED,0,EATFMT,MAMFMT,MUMCH
)@@G@@FMT,9,-NA,NB,DF)  @^@@@@      SUMHED(5)='      '@[@@@@C     @C@@@@C     CI
)@@G@@        PRINT MEANS MATRIX IF SELECTED    @[@@@@C     @B@@@@ 950  IF(OUTCJ
)@@G@@S(7,NT) .EQ. 0) GO TO 970     @ @@@@      IF(NB .NE. 0) GO TO 960 @A@@@@CK
)@@G@@      IF(CTYPE .EQ. 2) GO TO 952    @C@@@@      CALL MEANTR(XTRI(LDAT,1)CL
)@@G@@,XSQ(LSSQ,1),NA)  @#@@@@      GO TO 955   @B@@@@ 952  CALL MEANTR(XTSV(1CM
)@@G@@,1),XSSV(1,1),NA) @#@@@@ 955  CONTINUE    @E@@@@      CALL S2PMAT(XSQ(LSCN
)@@G@@SQ,1),XSSV(1,1),CTYPE,TNAM,TNUMB,   @E@@@@     -   BARHED,MDDHED,0,EATFMCO
)@@G@@T,MAMFMT,MUMFMT,9,NA,-1,DF)   @#@@@@      GO TO 970   @A@@@@ 960  IF(CTYCP
)@@G@@PE .EQ. 2) GO TO 962    @^@@@@      LU=LSSQ+NA*NB     @E@@@@      CALL MCQ
)@@G@@EANRC(XTRI(LDAT,1),XSQ(LSSQ,1),XSQ(LU,1),NA,NB) @#@@@@      GO TO 965   CR
)@@G@@@#@@@@ 962  LU=NA*NB+1  @E@@@@      CALL MEANRC(XTSV(1,1),XSSV(1,1),XSSVCS
)@@G@@(LU,1),NA,NB)     @^@@@@ 965  BARHED(5)='PART 1'@E@@@@      CALL S2PMAT(CT
)@@G@@XSQ(LSSQ,1),XSSV(1,1),CTYPE,TNAM,TNUMB,   @E@@@@     -   BARHED,MDDHED,0CU
)@@G@@,EATFMT,MAMFMT,MUMFMT,9,NA,NB,DF)   @^@@@@      BARHED(5)='PART 2'@^@@@@CV
)@@G@@      LU=LSSQ+NA*NB     @#@@@@      LUU=NA*NB+1 @E@@@@      CALL S2PMAT(CW
)@@G@@XSQ(LU,1),XSSV(LUU,1),CTYPE,TNAM,TNUMB,   @E@@@@     -   BARHED,MDDHED,0CX
)@@G@@,EATFMT,MAMFMT,MUMFMT,9,-NA,NB,DF)  @^@@@@      BARHED(5)='      '@[@@@@CY
)@@G@@C     @E@@@@C             PRINT STANDARD DEVIATION MATRIX IF SELECTED   CZ
)@@G@@@[@@@@C     @B@@@@ 970  IF(OUTS(8,NT) .EQ. 0) GO TO 310     @ @@@@      DA
)@@G@@IF(NB .NE. 0) GO TO 980 @E@@@@      CALL S2PMAT(XSQ(LSSQ,2),XSSV(1,2),CTDB
)@@G@@YPE,TNAM,TNUMB,   @F@@@@     -   SDVHED,MDDHED,MLEHED,EATFMT,MAMFMT,MUMFDC
)@@G@@MT,9,NA,-1,DF)    @#@@@@      GO TO 310   @^@@@@ 980  SDVHED(7)='PART 1'DD
)@@G@@@E@@@@      CALL S2PMAT(XSQ(LSSQ,2),XSSV(1,2),CTYPE,TNAM,TNUMB,   @F@@@@DE
)@@G@@     -   SDVHED,MDDHED,MLEHED,EATFMT,MAMFMT,MUMFMT,9,NA,NB,DF)    @^@@@@DF
)@@G@@      SDVHED(7)='PART 2'@^@@@@      LU=LSSQ+NA*NB     @#@@@@      LUU=NADG
)@@G@@*NB+1 @E@@@@      CALL S2PMAT(XSQ(LU,2),XSSV(LUU,2),CTYPE,TNAM,TNUMB,   DH
)@@G@@@F@@@@     -   SDVHED,MDDHED,MLEHED,EATFMT,MAMFMT,MUMFMT,9,-NA,NB,DF)   DI
)@@G@@@^@@@@      SDVHED(7)='      '@#@@@@      GO TO 310   @[@@@@C     @^@@@@DJ
)@@G@@C             ERROR EXIT@[@@@@C     @]@@@@ 999  RETURN@[@@@@C     @[@@@@DK
)@@G@@C     @F@@@@C        LOCAL SUBROUTINE TO SELECT FROM DESCRIPTIVE STAT VEDL
)@@G@@CTORS @[@@@@C     @B@@@@      SUBROUTINE SELECT(NN,IV,NEQ,NF,NL)  @^@@@@DM
)@@G@@      DIMENSION IV(1)   @ @@@@      IMPLICIT INTEGER (A-Z)  @]@@@@      DN
)@@G@@K=NF  @^@@@@      TNAM(1,NF+1)=0    @^@@@@      DO 1100 I=1,NN    @#@@@@DO
)@@G@@      J=IV(I)     @#@@@@      J=MSETPT(J) @#@@@@      L=MSET(J)   @A@@@@DP
)@@G@@      IF(NEQ .EQ. 0) GO TO 1040     @^@@@@      DO 1020 Q=1,K     @A@@@@DQ
)@@G@@      IF(TNUMB(Q) .EQ. L) GO TO 1100@#@@@@ 1020 CONTINUE    @]@@@@ 1040 DR
)@@G@@K=K+1 @#@@@@      TNUMB(K)=L  @ @@@@      IF(NY .EQ. 0) GO TO 1050@ @@@@DS
)@@G@@      TNAM(1,K)=NAMES(1,L)    @ @@@@      TNAM(2,K)=NAMES(2,L)    @^@@@@DT
)@@G@@ 1050 TBAR(K)=XBAR(J)   @^@@@@      TSDV(K)=SDV(J)    @^@@@@      TVAR(KDU
)@@G@@)=VAR(J)    @^@@@@      TMIN(K)=VMIN(J)   @^@@@@      TMAX(K)=VMAX(J)   DV
)@@G@@@^@@@@      TCONT(K)=VCONT(J) @^@@@@      TDELTA(K)=DELTA(J)@#@@@@ 1100 DW
)@@G@@CONTINUE    @]@@@@      NL=K  @]@@@@      RETURN@[@@@@C     @[@@@@C     DX
)@@G@@@D@@@@C        LOCAL SUBROUTINE TO FORM COVARIANCE MATRIX - @D@@@@C     DY
)@@G@@                                 TRIANGULAR CASE@[@@@@C     @B@@@@      DZ
)@@G@@SUBROUTINE COVTRI(TC,TP,S,SS,N)     @ @@@@      IMPLICIT INTEGER (A-Z)  EA
)@@G@@@^@@@@      REAL TP(1),TC(1)  @ @@@@      REAL S(N,N),SS(N,N)     @^@@@@EB
)@@G@@      REAL TI,TJ,CNT    @]@@@@      K=1   @^@@@@      DO 2200 I=1,N     EC
)@@G@@@^@@@@      DO 2100 J=1,I     @#@@@@      SETZER=0    @#@@@@      CNT=TCED
)@@G@@(K)   @A@@@@      IF(CNT .GT. 0) GO TO 2020     @]@@@@      TI=0  @#@@@@EE
)@@G@@      GO TO 2030  @^@@@@ 2020 TI=S(I,J)/CNT     @A@@@@      SS(I,J)=SS(IEF
)@@G@@,J)-S(I,J)*TI     @B@@@@      IF(SS(I,J) .GT. 1.0E-20) GO TO 2030 @#@@@@EG
)@@G@@      SS(I,J)=0   @#@@@@      SETZER=1    @ @@@@ 2030 IF(J .NE. I) GO TOEH
)@@G@@ 2060 @]@@@@      TJ=TI @#@@@@      GO TO 2070  @A@@@@ 2060 IF(CNT .GT. EI
)@@G@@0) GO TO 2065     @]@@@@      TJ=0  @#@@@@      GO TO 2070  @^@@@@ 2065 EJ
)@@G@@TJ=S(J,I)/CNT     @A@@@@      SS(J,I)=SS(J,I)-S(J,I)*TJ     @B@@@@      EK
)@@G@@IF(SS(J,I) .GT. 1.0E-20) GO TO 2070 @#@@@@      SS(J,I)=0   @#@@@@      EL
)@@G@@SETZER=1    @ @@@@ 2070 TP(K)=TP(K)-S(I,J)*TJ   @ @@@@      IF(MLE .EQ. EM
)@@G@@0) CNT=CNT-1@D@@@@      IF(CNT .GT. 0  .AND.  SETZER .EQ. 0) GO TO 2090 EN
)@@G@@@#@@@@      TP(K)=0     @#@@@@      GO TO 2100  @^@@@@ 2090 TP(K)=TP(K)/EO
)@@G@@CNT   @]@@@@ 2100 K=K+1 @#@@@@ 2200 CONTINUE    @]@@@@      RETURN@[@@@@EP
)@@G@@C     @[@@@@C     @D@@@@C        LOCAL SUBROUTINE TO FORM COVARIANCE MATEQ
)@@G@@RIX - @E@@@@C                                       RECTANGULAR CASE    ER
)@@G@@@[@@@@C     @D@@@@      SUBROUTINE COVREC(TC,TP,ST,STT,SST,SSTT,N,M)    ES
)@@G@@@ @@@@      IMPLICIT INTEGER (A-Z)  @ @@@@      REAL TP(N,M),TC(N,M)    ET
)@@G@@@ @@@@      REAL ST(N,M),STT(M,N)   @ @@@@      REAL SST(N,M),SSTT(M,N) EU
)@@G@@@^@@@@      REAL TI,TJ,CNT    @^@@@@      DO 2700 I=1,N     @^@@@@      EV
)@@G@@DO 2600 J=1,M     @#@@@@      SETZER=0    @#@@@@      CNT=TC(I,J) @A@@@@EW
)@@G@@      IF(CNT .GT. 0) GO TO 2520     @]@@@@      TI=0  @]@@@@      TJ=0  EX
)@@G@@@#@@@@      GO TO 2550  @^@@@@ 2520 TI=ST(I,J)/CNT    @^@@@@      TJ=STTEY
)@@G@@(J,I)/CNT   @A@@@@      SST(I,J)=SST(I,J)-ST(I,J)*TI  @B@@@@      IF(SSTEZ
)@@G@@(I,J) .GT. 1.0E-20) GO TO 2530@#@@@@      SST(I,J)=0  @#@@@@      SETZERFA
)@@G@@=1    @B@@@@ 2530 SSTT(J,I)=SSTT(J,I)-STT(J,I)*TJ     @C@@@@      IF(SSTFB
)@@G@@T(J,I) .GT. 1.0E-20) GO TO 2550     @#@@@@      SSTT(J,I)=0 @#@@@@      FC
)@@G@@SETZER=1    @A@@@@ 2550 TP(I,J)=TP(I,J)-ST(I,J)*TJ    @ @@@@      IF(MLEFD
)@@G@@ .EQ. 0) CNT=CNT-1@D@@@@      IF(CNT .GT. 0  .AND.  SETZER .EQ. 0) GO TOFE
)@@G@@ 2590 @#@@@@      TP(I,J)=0   @#@@@@      GO TO 2600  @ @@@@ 2590 TP(I,JFF
)@@G@@)=TP(I,J)/CNT     @#@@@@ 2600 CONTINUE    @#@@@@ 2700 CONTINUE    @]@@@@FG
)@@G@@      RETURN@[@@@@C     @[@@@@C     @F@@@@C        LOCAL SUBROUTINE TO FFH
)@@G@@ORM CORRELATION AND SDV MATRICES -  @D@@@@C                             FI
)@@G@@         TRIANGULAR CASE@[@@@@C     @A@@@@      SUBROUTINE CORTRI(TC,TP,FJ
)@@G@@SS,N) @ @@@@      IMPLICIT INTEGER (A-Z)  @^@@@@      REAL TP(1),TC(1)  FK
)@@G@@@#@@@@      REAL SS(N,N)@#@@@@      REAL CNT,CC @]@@@@      K=1   @^@@@@FL
)@@G@@      DO 3200 I=1,N     @^@@@@      DO 3100 J=1,I     @#@@@@      ZERSETFM
)@@G@@=0    @#@@@@      CNT=TC(K)   @ @@@@      IF(MLE .EQ. 0) CNT=CNT-1@A@@@@FN
)@@G@@      IF(CNT .LE. 0) GO TO 3020     @ @@@@      SS(I,J)=SS(I,J)/CNT     FO
)@@G@@@B@@@@      IF(SS(I,J) .GT. 1.E-20) GO TO 3040  @#@@@@ 3020 ZERSET=1    FP
)@@G@@@#@@@@      SS(I,J)=0   @#@@@@      GO TO 3045  @ @@@@ 3040 SS(I,J)=SQRTFQ
)@@G@@(SS(I,J))   @ @@@@ 3045 IF(J .EQ. I) GO TO 3060 @A@@@@      IF(CNT .LE. FR
)@@G@@0) GO TO 3050     @ @@@@      SS(J,I)=SS(J,I)/CNT     @B@@@@      IF(SS(FS
)@@G@@J,I) .GT. 1.E-20) GO TO 3055  @#@@@@ 3050 ZERSET=1    @#@@@@      SS(J,IFT
)@@G@@)=0   @#@@@@      GO TO 3090  @ @@@@ 3055 SS(J,I)=SQRT(SS(J,I))   @ @@@@FU
)@@G@@ 3060 CC=TP(K)/SS(I,J)/SS(J,I)@^@@@@      IF(CC .GT. 1) CC=1@ @@@@      FV
)@@G@@IF(CC .LT. -1) CC=-1    @ @@@@      IF(J .EQ. I) CC=1.0     @#@@@@      FW
)@@G@@TP(K)=CC    @A@@@@ 3090 IF(ZERSET .EQ. 0) GO TO 3100  @#@@@@      TP(K)=FX
)@@G@@0     @^@@@@      NZERO=NZERO+1     @]@@@@ 3100 K=K+1 @#@@@@ 3200 CONTINFY
)@@G@@UE    @]@@@@      RETURN@[@@@@C     @[@@@@C     @F@@@@C        LOCAL SUBFZ
)@@G@@ROUTINE TO FORM CORRELATION AND SDV MATRICES    @E@@@@C                 GA
)@@G@@                     RECTANGULAR CASE     @[@@@@C     @C@@@@      SUBROUGB
)@@G@@TINE CORREC(TC,TP,SST,SSTT,N,M)     @ @@@@      IMPLICIT INTEGER (A-Z)  GC
)@@G@@@ @@@@      REAL TP(N,M),TC(N,M)    @ @@@@      REAL SST(N,M),SSTT(M,N) GD
)@@G@@@#@@@@      REAL CNT,CC @^@@@@      DO 3700 I=1,N     @^@@@@      DO 360GE
)@@G@@0 J=1,M     @#@@@@      ZERSET=0    @#@@@@      CNT=TC(I,J) @ @@@@      GF
)@@G@@IF(MLE .EQ. 0) CNT=CNT-1@A@@@@      IF(CNT .LE. 0) GO TO 3520     @ @@@@GG
)@@G@@      SST(I,J)=SST(I,J)/CNT   @B@@@@      IF(SST(I,J) .GT. 1.E-20) GO TOGH
)@@G@@ 3540 @#@@@@ 3520 ZERSET=1    @#@@@@      SST(I,J)=0  @#@@@@      GO TO GI
)@@G@@3545  @ @@@@ 3540 SST(I,J)=SQRT(SST(I,J)) @A@@@@ 3545 IF(CNT .LE. 0) GO GJ
)@@G@@TO 3550     @ @@@@      SSTT(J,I)=SSTT(J,I)/CNT @B@@@@      IF(SSTT(J,I)GK
)@@G@@ .GT. 1.E-20) GO TO 3555@#@@@@ 3550 ZERSET=1    @#@@@@      SSTT(J,I)=0 GL
)@@G@@@#@@@@      GO TO 3590  @A@@@@ 3555 SSTT(J,I)=SQRT(SSTT(J,I))     @A@@@@GM
)@@G@@ 3560 CC=TP(I,J)/SST(I,J)/SSTT(J,I) @^@@@@      IF(CC .GT. 1) CC=1@ @@@@GN
)@@G@@      IF(CC .LT. -1) CC=-1    @#@@@@      TP(I,J)=CC  @A@@@@ 3590 IF(ZERGO
)@@G@@SET .EQ. 0) GO TO 3600  @#@@@@      TP(I,J)=0   @^@@@@      NZERO=NZERO+GP
)@@G@@1     @#@@@@ 3600 CONTINUE    @#@@@@ 3700 CONTINUE    @]@@@@      RETURNGQ
)@@G@@@[@@@@C     @[@@@@C     @G@@@@C        LOCAL SUBROUTINE TO EXTRACT MATRIGR
)@@G@@X DATA FOR TRIANGULAR CASE    @[@@@@C     @E@@@@      SUBROUTINE SELTRI(GS
)@@G@@IVS,TC,TP,SC,SP,SUM,SSQ,NS,SU,SS,N) @ @@@@      IMPLICIT INTEGER (A-Z)  GT
)@@G@@@^@@@@      DIMENSION IVS(1)  @B@@@@      DIMENSION TC(1),TP(1),SC(1),SPGU
)@@G@@(1)   @D@@@@      DIMENSION SUM(NS,NS),SSQ(NS,NS),SU(N,N),SS(N,N) @]@@@@GV
)@@G@@      LS=1  @^@@@@      DO 5200 I=1,N     @#@@@@      III=IVS(I)  @^@@@@GW
)@@G@@      III=MSETPT(III)   @^@@@@      DO 5100 J=1,I     @]@@@@      II=IIIGX
)@@G@@@#@@@@      JJ=IVS(J)   @^@@@@      JJ=MSETPT(JJ)     @ @@@@      LOC=IIGY
)@@G@@*(II-1)/2 + JJ    @B@@@@      IF(II .LT. JJ) LOC=JJ*(JJ-1)/2 + II @^@@@@GZ
)@@G@@      SC(LS)=TC(LOC)    @^@@@@      SP(LS)=TP(LOC)    @#@@@@      LS=LS+HA
)@@G@@1     @^@@@@      SU(I,J)=SUM(II,JJ)@^@@@@      SS(I,J)=SSQ(II,JJ)@ @@@@HB
)@@G@@      IF(J .EQ. I) GO TO 5100 @^@@@@      SU(J,I)=SUM(JJ,II)@^@@@@      HC
)@@G@@SS(J,I)=SSQ(JJ,II)@#@@@@ 5100 CONTINUE    @#@@@@ 5200 CONTINUE    @]@@@@HD
)@@G@@      RETURN@[@@@@C     @[@@@@C     @G@@@@C        LOCAL SUBROUTINE TO EHE
)@@G@@XTRACT MATRIX DATA FOR RECTANGULAR CASE   @[@@@@C     @C@@@@      SUBROUHF
)@@G@@TINE SELREC(IVS,JVS,TC,TP,SC,SP,N,M,@B@@@@     -   SUM,SSQ,NS,SUMT,SUMTTHG
)@@G@@,SSQT,SSQTT)@ @@@@      IMPLICIT INTEGER (A-Z)  @ @@@@      DIMENSION IVHH
)@@G@@S(1),JVS(1) @C@@@@      DIMENSION TC(1),TP(1),SC(N,M),SP(N,M)     @B@@@@HI
)@@G@@      DIMENSION SUM(NS,NS),SSQ(NS,NS)     @E@@@@      DIMENSION SUMT(N,MHJ
)@@G@@),SUMTT(M,N),SSQT(N,M),SSQTT(M,N)   @^@@@@      DO 6200 I=1,N     @#@@@@HK
)@@G@@      III=IVS(I)  @^@@@@      III=MSETPT(III)   @^@@@@      DO 6100 J=1,HL
)@@G@@M     @]@@@@      II=III@#@@@@      JJ=JVS(J)   @^@@@@      JJ=MSETPT(JJHM
)@@G@@)     @ @@@@      LOC=II*(II-1)/2 + JJ    @B@@@@      IF(II .LT. JJ) LOCHN
)@@G@@=JJ*(JJ-1)/2 + II @^@@@@      SC(I,J)=TC(LOC)   @^@@@@      SP(I,J)=TP(LHO
)@@G@@OC)   @ @@@@      SUMT(I,J)=SUM(II,JJ)    @ @@@@      SUMTT(J,I)=SUM(JJ,HP
)@@G@@II)   @ @@@@      SSQT(I,J)=SSQ(II,JJ)    @ @@@@      SSQTT(J,I)=SSQ(JJ,HQ
)@@G@@II)   @#@@@@ 6100 CONTINUE    @#@@@@ 6200 CONTINUE    @]@@@@      RETURNHR
)@@G@@@[@@@@C     @[@@@@C     @E@@@@C        LOCAL SUBROUTINE TO COMPUTE MEANSHS
)@@G@@ - TRIANGULAR CASE@[@@@@C     @A@@@@      SUBROUTINE MEANTR(TC,S,N)     HT
)@@G@@@ @@@@      IMPLICIT INTEGER (A-Z)  @#@@@@      REAL TC(1)  @#@@@@      HU
)@@G@@REAL S(N,N) @#@@@@      REAL CNT    @]@@@@      K=1   @^@@@@      DO 720HV
)@@G@@0 I=1,N     @^@@@@      DO 7100 J=1,I     @#@@@@      CNT=TC(K)   @A@@@@HW
)@@G@@      IF(CNT .EQ. 0) GO TO 7100     @^@@@@      S(I,J)=S(I,J)/CNT @ @@@@HX
)@@G@@      IF(J .EQ. I) GO TO 7100 @^@@@@      S(J,I)=S(J,I)/CNT @]@@@@ 7100 HY
)@@G@@K=K+1 @#@@@@ 7200 CONTINUE    @]@@@@      RETURN@[@@@@C     @[@@@@C     HZ
)@@G@@@F@@@@C        LOCAL SUBROUTINE TO COMPUTE MEANS  -  RECTANGULAR CASE   IA
)@@G@@@[@@@@C     @B@@@@      SUBROUTINE MEANRC(TC,ST,STT,N,M)    @ @@@@      IB
)@@G@@IMPLICIT INTEGER (A-Z)  @#@@@@      REAL TC(N,M)@ @@@@      REAL ST(N,M)IC
)@@G@@,STT(M,N)   @#@@@@      REAL CNT    @^@@@@      DO 7700 I=1,N     @^@@@@ID
)@@G@@      DO 7600 J=1,M     @#@@@@      CNT=TC(I,J) @A@@@@      IF(CNT .EQ. IE
)@@G@@0) GO TO 7600     @ @@@@      ST(I,J)=ST(I,J)/CNT     @ @@@@      STT(J,IF
)@@G@@I)=STT(J,I)/CNT   @#@@@@ 7600 CONTINUE    @#@@@@ 7700 CONTINUE    @]@@@@IG
)@@G@@      RETURN@]@@@@      END   ___1  @^@@@@      )@@[N#[#@K0^G[#@@@C'FK@FIH
)@@G@@G.)__?C[)@]&G.@__?C[@@]VG/)__?C@)@]UG/@__?C@@@]TR@K@]*AA@@@A)@E[M@@K0K0@II
)@@G@@@@@@@@G_)__?C#)@]X[#)@]!G_)__:C;:K@BG_@__:C;FK@EG")__:C':K@DG"@__:AB@@@AIJ
)@@G@@)@O[F#[#@K0[#[#@@@@@@@@@G_)__?C#)@]-[#)@]0G_)__:C;:K@C[#)@]\G_)__?C#)@](IK
)@@G@@[#)@],AC@@@A)@X[F#[#@K0K0^G@@@@@@@@@G_)__:C;:K@A[#)@]3G_)__!C#)@]*[#)@]2IL
)@@G@@G_)__?C#)@]+[#)@]1AD@@@A)@&[F#[#@K0K0^G^G@@@@@@@G_)__:C#)@]-[#)@]6G_)__?IM
)@@G@@C#)@]>[#)@]5G_)__!C#)@]Y[#)@]4AE@@@A)@\[F#[#@K0K0K0^G^G@@@@@C#)@]Z[#)@]9IN
)@@G@@G_)__?C#)@])[#)@]8R@)@]YG_)__?C#)@]<[#)@]7AF@@@A)@8[MK0K0^G@K0K0@@G_)__?IO
)@@G@@C#)@]?[#)@]/G_)__:C;:K@G[#)@];G_)__:C#)@]<[#)@]'G_)__?AG@@@A)[][F#[#[#@KIP
)@@G@@0K0K0^G@@@@@[#)@]_G_)__:C#)@]([#)@]"R[@@]%G_)__?C#)@]W[#)@].R@0@]?AH@@@AIQ
)@@G@@)[F[F#@K0[#[#@K0@@@@@@@@[#)@#]G_)__?C#)@]:[#)@#[G_)__:C;:K@^[#)@#@G_)__?IR
)@@G@@C#)@]%AI@@@A)[O[F#@K0K0^G^G@@@@@@@@@G_)__:C;:K@#[#)@#^R[K@]:G_)__?C#)@]=IS
)@@G@@[#)@##G_)__?C#)@]$AJ@@@A)[X[F#[#@K0K0^G^G^G@@@@@C#)@]%[#)@#BR[)@](G_)__:IT
)@@G@@C#)@]?[#)@#AG_)__:C#)@]:[#)@# AK@@@A)[&[EK0K0K0K0K0K0K0K0@@@[#)@#J[#@@#IIU
)@@G@@[])@#H[]@@#G[[)@#F[[@@#E[@)@#D[@@@#CG_)__:AL@@@A)[\[F#[#[#[#[#[#[#@K0@@@IV
)@@G@@[@@@@BC@[@@@R@K@#K @@@@AA[)@#OA[K@#NA[@@#MA@0@#LA@K@#KAM@@@A)[8[F][#[#@KIW
)@@G@@3^[] #G@@@@@@@@@@[/,0@@@/K@@]W(@@@@GH@@@@CC/@@@]@[V@[2@@@@[Y/,0@@@AN@@@AIX
)@@G@@)][[EK3^G4G^G^G^G^G@@@@@@@@@@[@@@@[)@@@@[Y@@@@[Y@@@@[Z@@@@@[@@@@@@@@@@@CIY
)@@G@@@@@@@@AO@@@A)]E[U@@@K0@@@@@@[Y@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IZ
)@@G@@@@@@@@@@@@@@@@@@@@AP@@@A)]P[M[#H#[#[@K-K3@@@@@@@@@@@@[/,0@@@/K@@]8@[Y@[2JA
)@@G@@@@@@@A@@@@@^@@@@@@@@@@@@@@@@@@AQ@@@A)]Z[V#G@[#@@@@@@@@@@@@@@@@@@@@@@@@@[JB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BAR@@@A)]%[U@@K0@@@@@@@@@@@@@@@JC
)@@G@@@@@@@@@@@@[Y@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AS@@@A)]5[F#H#[#[#JD
)@@G@@[@K^[#[#@@@@ @@@@ @[+@[2/K@@TBN@0@]//K@@].(@@@@A@[)@[2@@@@@A@@@@@^AT@@@AJE
)@@G@@)]"[F#H@K0K0K+K0^G4G@@@@R@0@]8G@@@@[C/@__"@[&@[2/,0@@@[@@@@ C@@@[-/K@@#]JF
)@@G@@*@@@@AAU@@@A)#B[F#[#[#[#[#[#[#[#[#@@R])@[+Q]K@],R]K@[+R]@@#CR[0@]'R@K@#DJG
)@@G@@R[)@]1R[K@#ER[@@#FAV@@@A)#K[N#@^G^G^@K@@@@ @ @@N @D@@N/K@@#X*@@@@G/G@@#SJH
)@@G@@"^@@[<[@@@@@C@B@@N[@@@[^Q])@]"AW@@@A)#U[M^@K0@^G@@@@@@"D@@@@C[#@@N"C&@@NJI
)@@G@@C@&@@N[@C@@N"G@@@@C@A@@N/K@@^F[@C@@NC@A@@NAX@@@A)#=[MK0K0@K^G^G^G@[@@@@#JJ
)@@G@@C@@@@] @@@@]/K@@#?*@@@@G"^^@@NC@[@@N]@)@@]"G)@@@"^)@@KAY@@@A)#,[N#[#[#[#JK
)@@G@@@@K^G@D@@@@]/K@@^]0@@@@I*@@@@I"^)@@G"G#@@N"C)@[>[@)@@^"C)@[=C@)@@@AZ@@@AJL
)@@G@@)#8[M^[#[#[@^[#[#@[@@@@#C@@@[&/K@@^]*@@@@G/C@@^@D@@@@# @@@@]/K@@#/0@@@@GJM
)@@G@@*@@@@GBA@@@A)^][N#[#[#@[#[#@@@N8T)@N[@ @@N"G@@@#"C@@@^C@#@@N]@(@@N"G)@@GJN
)@@G@@C@)@@]"^@@@@C@@@@ BB@@@A)^G[N@K*K^G@@@@@@@O/K@@[O.)@@[O.K@@[O.@@@[O/0@@[JO
)@@G@@[@E)@N@]@@[2@@@@^I/,0@@@^^K@^IBC@@@A)^Q@+^[#@@@@)@'@K@)^U@N#[]G@@@/,0@@@JP
)@@G@@[@)@@@______2BVSS1C@)@@[8L@@#MO"@@@[O.0@@[BD@@@A)^W[F#[@K0K0^G^G^G4G@@@@JQ
)@@G@@H@@@@DC@@@@B[@@@@DG@@@@DC/@@@[ @@@@D@]#@[2/K@@T^@@@@@'BE@@@A)^>[E^[@K^G^JR
)@@G@@C^G^G@@@@@@@@]C@[2@@@@[$/,0@@@@]B@[2/K@@TBN@0@^%/K@@^:1@@@@G*@@@@GBF@@@AJS
)@@G@@)^,[F#[#@K0K3K0K^G@@@@@@(@@@@GH@@@[*/K@@^.(@@@@ER@0@@D[@@@@EC@[@@NO@K@#[JT
)@@G@@R@K@@DBG@@@A)^7[F@K0YOG^ @K3K0YK@@@@[@^J_"C@@@[*R[@@@D/K@@ [[@<@@@C@)@@EJU
)@@G@@[@#J_"C@@@[(/K@@^.BH@@@A) @[F[K0^G[#[#[@@@@@@@@@C/@@@E/K@@ )*@@@@E[@)@@FJV
)@@G@@C@?@@NG@@@# T/@@@OC@@@@D[@^@@@BI@@@A) D[F#H#[][#[#[]K@@@@@@@@@@@@@@@@@@@JW
)@@G@@@@@@@@/,0@@@@]Q@[2@@@@#P/,0@@@[@@@#PG@@@@@BJ@@@A) M[M@[#H#[#H#G@@@@@@@@LJX
)@@G@@@@@@@E@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BK@@@A) W[F#[#[@K^JY
)@@G@@G^G[#[#@@@@@R[)@@D[@@@@GC@ @@NO[K@]0R[K@@D/K@@A\/K@@^)*@@@@F@]R@[2BL@@@AJZ
)@@G@@) >[F#@K0K0K0^[@K0@@@@@@@@@@@G/,0@W3^^K@ ,N8R@@NO[0@]!R[0@@H[@)@@HC@&@@NKA
)@@G@@O[)@#HBM@@@A) ,[F@K0K0K0K0K0K0^G@@@@[@@@@JC@C@@NO]@@#IR]@@@D@]X@[2@@@@@IKB
)@@G@@@@@@[Y@@@@[Y@@@@ ,BN@@@A) 7[F#[@K0K0^G^G^G@@@@@@N8U@@NO])@]!R])@@K[@)@@KKC
)@@G@@C@(@@NO]K@#GR]K@@D/K@@AC(@@@@JBO@@@A)A@[F@K^G^[#[#[#[#@@@@@@C/@@@E@]+@[2KD
)@@G@@@@@@@I@@@@@G@@@@[Z@@@@A#@@@@@J/,0@W3^^K@A#BP@@@A)AD[F#[#[][#[#[]K@@@@@@@KE
)@@G@@@@@@@@@@@@@@@@@@@@/,0@@@@]<@[2@@@@#P/,0@@@[@@@#PG@@@@IBQ@@@A)AM[M@[#[#[#KF
)@@G@@H#G@@@@@@@@L@@@@@E@@@@@@@@@@@I@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BR@@@AKG
)@@G@@)AW[F#[#[@K0K0K0K0K0@@@@(@@@@GH@@@@IG@@@@GC@@@@JO@K@]!R@K@@K/K@@^)*@@@@FKH
)@@G@@@]=@[2BS@@@A)A>[F@^[@K0K^G^G^G@@@@@@@@@@@I@@@@@G@@@@[Y@@@@A%@@@@@J/,0@W3KI
)@@G@@^^K@A%N8L@@N/K@@A\BT@@@A)A,[F#[#[@^G^G4G^G^G@@@@[@@@@M @@@@J[@)@@GC@)@@@KJ
)@@G@@[@@@@LC/@@@[/K@@C>*@@@@E@](@[2BU@@@A)A7[F#@K0^G^G[#[#@@@@@@@G[)@#AG[)@#RKK
)@@G@@C.)@@[G[@@]_G[@@#QC.@@@[G@@@#JG@@@@@[@@@@NBV@@@A)B@[M^G@K3@@@@@@@@C_)@@]KL
)@@G@@C_@@@[ @@@@Q*@@@@SH#@@@BC_@@@[C")@@[G]@@#BG]@@@@C"@@@[BW@@@A)BE[N#G[@^G[KM
)@@G@@#@@@@@;K)@@[T@)@@GG/)@@[[])@@LC")@@]/&0@B8)])@@S @@@@S*@@@@UH#)@@CBX@@@AKN
)@@G@@)BO[F#@K0^G[#[#[#@@@@@@@R[)@[+Q[K@#@R[K@[+Q[@@@KR[@@[+Q@0@@GR@0@[+G/)__"KO
)@@G@@[@)@@OBY@@@A)BX[N#@K0K0@^[#@@@C@@@@G8L@@B-[@=)@NC@<)@N[@A)@NC@ )@N[]@@#SKP
)@@G@@[[)@#P[@)@[^Q[)@]\BZ@@@A)B$[F#[#@K0K0K0K0K0K0@@@Q]K@].R]K@[+Q]@@#]R]@@[+KQ
)@@G@@Q[0@#PR[0@[+G/@__"[@@@@OT@@@@GCA@@@A)B0[N#[#@@^@@@@@@@C/@__" @]@@@8L@@B3KR
)@@G@@[@$)@NC@%)@N[@C)@NC@D)@N[@@@[^Q])@#SR])@[+CB@@@A)B'[F#H#[#[#[#[#[#[#[#@@KS
)@@G@@R]K@]2R]@@]1R[0@]8R[)@]'R[K@]9R[@@]6R@0@##R@K@#^G@@@@@CC@@@A)C#[N#[#[#@@KT
)@@G@@@@@@@@[@ @@NC@C@@N[@<@@NC@&@@N[@^@@NC@[@@N[@@@[^[@)@#SC@)@]3R])@]5CD@@@AKU
)@@G@@)CH[M^G^[#@^G@@@@@[@%@@NC@:@@NR]0@#S[@E@@MC@F@@MR]0@#S/K@@CR(@@@@B[@(@@NKV
)@@G@@C@$@@NCE@@@A)CR[U@@[#@@@O"0@@]R]0@#SO")@@]O"K@@[O"@@@[O.0@@[O.)@@[O.K@@[KW
)@@G@@O.@@@[O/0@@[O/K@@[CF@@@A)C+[F#[@K[#[#@K0K0@@@@@@O@K@]:R@K@#RG@)@@@C@)@]%KX
)@@G@@G@@@@IC/@__"/K@@E'8L@@CBA]0@#SCG@@@A)C:[F#[#@K0K0K0K0K0K0@@@R[0@[+Q[)@]2KY
)@@G@@R[)@[+O[K@]/R[K@@DO[@@]?R[@@@@O@0@](R@0@#QCH@@@A)C4[F#[#[#@K0^G^G^G@@@@@KZ
)@@G@@O]K@]4R]K@@C[@@@@CC@C)@N[@)@#S[@@@[^Q]@@]6R]@@[+Q[0@]9CI@@@A)C.[MK0K0K0[LA
)@@G@@#[#@@@[@A)@NC@D@@NO]K@];R]K@@C[[B)@NC[E@@NO])@]7R])@@C[@)@@CC@(@@NCJ@@@ALB
)@@G@@)DB[F@^G[#[#[#[#@@@@@@@@C"@@@[[[0@@M+[)@@MC[)@[%[[@@@N;L@@@M[[@@@MC[ @@NLC
)@@G@@8L@@C9CK@@@A)DK[F#@K3^@K0K0K@@@@@@@@/K@@D/*@@@@J[])@@LC")@@]/K@@E'(@@@@QLD
)@@G@@H])@@CC")@@][]@@@LCL@@@A)DT[N#@K^G[@K0^@@@N8N@@@^^K@D2N8Q@@@R[)@#O^^K@D0LE
)@@G@@N8T@@@R]K@#M^^K@D1N8U@@@R])@#SCM@@@A)D<[N@K0^@K^G[@@@@N8L@@@^^K@D7N8S@@@LF
)@@G@@R]@@#N^^K@D5N8O@@@^^K@D4N8R@@@R[0@#L^^K@D3CN@@@A)D![N@K[@K^[@K^[#G@@@@@[LG
)@@G@@@@@@D5@@@@D4@@@@D3@@@@D2@@@@D1@@@@D0@@@@@@/,0@%7^^K@D8CO@@@A)D7[F@K^G^G^LH
)@@G@@[#[#@K0@@@@@[@@@@QG/@@@[T@@@@GC@@@@J/K@@E'@#<@[2@@@@@G@@@@D8@@@@D7CP@@@ALI
)@@G@@)E@[F#[#@K0K0K0K0K0@@@@@R@K@@@O[@@]:R[@@#RO@0@]>R@0@@GO])@]?R])@@@O[K@](LJ
)@@G@@R[K@#QCQ@@@A)ED[F#[#[#[#[#[#[#@K@@@@^^K@E?N8S@@@R]@@#MO[0@#AO[0@@QR[0@#RLK
)@@G@@O[)@#AR[)@@QO@K@]%CR@@@A)EM[MK[@K0^@K^G@@@R]@@#L^^K@E\N8P@@@^^K@E,N8T@@@LL
)@@G@@R]K@#O^^K@E!N8L@@@^^K@E:N8N@@@CS@@@A)EW[MK[@K0^@K@@@@@N8O@@@^^K@E6N8Q@@NLM
)@@G@@^^K@E5N8N@@@R@0@#N^^K@E3N8U@@@^^K@E2N8S@@@CT@@@A)E&[N@^[@^[@K^[@@@@@@@E\LN
)@@G@@@@@@E,@@@@E!@@@@E?@@@@E:@@@@@@/,0@,=^^K@E8N8R@@N^^K@E7CU@@@A)E0[F#[#[@K^LO
)@@G@@G4[@K^@@@@@@@@@@E8@@@@E7@@@@E6@@@@E5@@@@@[@@@@E3@@@@E2@@@@@J@@@@@GCV@@@ALP
)@@G@@)E9@F#@@@@@@)@/@*@@@@@@@)E'@F#@@@@@@R@K@@M______F9.0) ,A2,12,1X,A6(2X,I3LQ
)@@G@@@#&@[2CW@@@A)E;[F#[#@K[@K>K^@@@@@@@@@@@@F#@@@@F]/,0@@@^^K@F]N8L@@N^^K@F#LR
)@@G@@N8P@@@R[K@#OO@K@#JCX@@@A)F^[F#@^HOG4G^G^H^H@@@@@@@@@@A@@@@@@@@@@@/@@@@[YLS
)@@G@@@@@@@L@@@@@W@@@@@@@@@@@@@@@@@LCY@@@A)FH[F#[#[#[#[#[#@K0@@@@@(@G@@@G@@@# LT
)@@G@@T/@@@OC@@@@D@#$@[2@@@@@@@@@@@J@@@@@G@@@@[:CZ@@@A)FQ[N@K0K0^G^G[@^@^^K@F-LU
)@@G@@N8U@@N^^K@F+N8S@@@O])@#JO])@@MR])@@@O]@@](R]@@#Q/K@@F1DA@@@A)F)[F]P@K^G@LV
)@@G@@K5K3K0@@@@@@@@@@[Y@@@@@L@@@@@@@@@@@@@@@@@@@@@@@L@@@@F+@@@@F-/,0@@@DB@@@ALW
)@@G@@)F([F#L#L#L#[#[#[#[#[#@@ @@@@R@#%@[2@@@@@@@@@@@J@@@@@G@@@@[?@@@@@S@@@@@MLX
)@@G@@@@@@@YDC@@@A)F2[N#@K0K0K0^@K0@C/@@@[[@@@@RC/@@@[/K@@F;*@A@@]R[)@#S[@@@#SLY
)@@G@@G@@@# T/@@@OC@@@@DDD@@@A)F/[N#@^G[#@@@@@@@(@B@@AC/)@@[ @@@@G(@B@@BR[0@#SLZ
)@@G@@C/@@@[[@@@#P @@@@G(@^@@KR[@@#SDE@@@A)GA[M^@K0^G@@@@@@@C/)@@[ @@@@G(@#@@DMA
)@@G@@R@0@#SC/@@@[[@@@@RC/@@@[/)K@GF)@@@@I @@@@IDF@@@A)GK[M[@^G[#@@@@@@@ @@@@GMB
)@@G@@(@D@@ER]K@#SC/@@@[[@@@@RC/@@@[/)K@GQ)@@@@I @@@@I(@#@@CDG@@@A)GU[M@K[#@K0MC
)@@G@@@@@@@@(@[@@LR@K@#SC/@@@[[@@@@RC/@@@[/)K@G-)@@@@I @@@@I(@D@@FC/)@@[DH@@@AMD
)@@G@@)G=[MK0K[#[#@K0^G@*@@@@SC/)@@[[@@@@SC@C@@[R]@@#S[@@@@RC/@@@[/)K@G()@@@#PME
)@@G@@ @@@@GDI@@@A)G,[M^G@K^C=G^G^@@/K@@H?*@@@@J@#9@[2/,0@@@/=0@NG+@)@@K @@@@KMF
)@@G@@*@@@@RC.@@@[ @@@@IDJ@@@A)G8[F#[#[#[#@K0K0^G@@@@@O[@@@MR[@@@@O[)@#BO[)@@NMG
)@@G@@R[)@@@O[K@#BR[K@@NO])@#JR])@@MDK@@@A)H[[N#@K0^@K[@@@@@N8P@@N^^K@HJN8U@@NMH
)@@G@@^^K@HKN8O@@N/K@@HQ(@@@@GH@@@@LC/@@@]O[@@#JDL@@@A)HF[F@^[@K^[@K^G@@@@@@@@MI
)@@G@@@@@@@G@@@@HM@@@@HL@@@@HK@@@@HJ/,0@Z1^^K@HMN8Q@@N^^K@HLDM@@@A)HO[F#[@K0K0MJ
)@@G@@K0K0^[#@@@@@R]K@#O^^K@H&N8N@@@O@0@](R@0@#QO[0@]:R[0@#R/K@@I_@#"@[2DN@@@AMK
)@@G@@)HX[MK^G[@^[@K^@@@@@@@H&@@@@H>/,0@Z1^^K@H*N8R@@@^^K@H$N8L@@@R@K@#N^^K@H>ML
)@@G@@N8T@@@DO@@@A)H$[F@K^G^G^@K0^@@@@@@@@/K@@IU(@@@@GH@@@@LC/@@@]/K@@I_@^@@[2MM
)@@G@@@@@@@G@@@@H*@@@@H$DP@@@A)H0[F#[#[#[#[#[#[#[#[#@@R])@@MO[@@#BR[@@@NO]@@#BMN
)@@G@@R]@@@Q[@@@@QG@@@@NT@@@@GC@@@@JDQ@@@A)H9[F#@K0K0^G^G[#@@@@@@@O@0@@NR@0@@@MO
)@@G@@O[)@#JO[)@@MR[)@@@O[K@#BO[K@@QR[K@@@O])@#JDR@@@A)I][N#@K[@^@K@@@@@N8N@@NMP
)@@G@@^^K@INN8S@@N^^K@IMN8O@@N^^K@IKN8U@@N^^K@ILN8Q@@NO@0@#BDS@@@A)IG[N@^[@K^[MQ
)@@G@@@K^[@@@@@@IP@@@@IO@@@@IN@@@@IM@@@@IL@@@@IK/,0@+M^^K@IPN8P@@N^^K@IODT@@@AMR
)@@G@@)IQ[F#[#[#[@K0K0^G^G@@@@R[0@#Q[@@@@QG/@@@[T@@@@GC@@@@J/K@@I_@^ @[2@@@@@JMS
)@@G@@@@@@@GDU@@@A)IZ[F#[#[#[#[#[#[#[#@@@@N8R@@@O[)@#AO[)@@QR[)@#RO]K@#AR]K@@QMT
)@@G@@O@K@]:R@K@#RO[0@](DV@@@A)I*[N@K0^[#@K[@@@@N8L@@@^^K@I9N8T@@N^^K@I8N8O@@@MU
)@@G@@R[@@#N^^K@I6N8U@@@R])@#O^^K@I7DW@@@A)I2[N@^[@K^[@K^[@@@@@@I;@@@@I'@@@@I9MV
)@@G@@@@@@I8@@@@I7@@@@I6/,0@+M^^K@I;N8Q@@N^^K@I'DX@@@A)I/@V#[#[#@@)[[@K@)I_@V]MW
)@@G@@H#[@@@/K@@T^@@@@[[/,0@@@______2BVSS2@^C@[2@@@@@J@@@@@GDY@@@A)J][F#[#[@K0MX
)@@G@@K0^G^G@@@@@@N8S@@@O@0@#JO@0@@MR@0@@@O]@@](R]@@#Q/K@@JZ(@@@@S@^D@[2DZ@@@AMY
)@@G@@)JF[N@^[]P@K^G@K5@@@@@@B@@@@@@@@@@@@@@@@@L@@@@JK@@@@JJ/,0@@@^^K@JJN8N@@NMZ
)@@G@@^^K@JKEA@@@A)JP[F#H#H#L#L#L#[#[#[#@@@@@@@@@@@@@J@@@@@G@@@@[?@@@@@S@@@@@MNA
)@@G@@@@@@@Y@@@@@E@@@@@LEB@@@A)JY[F#[#[@K+K0K0K0K^G@@@R[K@@M/K@@KL*@@@@J @@@@TNB
)@@G@@@^J@[2/,0@@@/K@@^)(@@@@R@^G@[2EC@@@A)J$[F#@K0K0^G^G[#@@@@@@@H@@@@LC/@@@]NC
)@@G@@O]K@#JO]K@@MR]K@@@O[0@#BO[0@@NR[0@@@O[K@#JED@@@A)J0[MK[@^@K^[@@@@@@@@@J9ND
)@@G@@/,0@>I^^K@J;N8R@@N^^K@J9N8P@@N^^K@J'N8T@@N/K@@J_(@@@@GEE@@@A)J'[F@K^G^G^NE
)@@G@@[#[#[#[#@@@@O[)@]:R[)@#RO@K@](R@K@#Q/K@@LL@^P@[2@@@@@G@@@@J;@@@@J'EF@@@ANF
)@@G@@)K#[MK^G[@^[@K^@@@@@@@KG@@@@KF/,0@>I^^K@KHN8Q@@@^^K@KFN8O@@@R[@@#O^^K@KGNG
)@@G@@N8L@@@EG@@@A)KH[F@K0K0K[#@K^G@@@@@@@C@@@@J/K@@K5(@@@@GH@@@@LC/@@@]/K@@LLNH
)@@G@@@^R@[2@@@@@G@@@@KHEH@@@A)KQ[F#[#[#[#[#@K0K0@@@@@R@0@@@O]@@#BO]@@@QR]@@@@NI
)@@G@@O])@#JR])@@M[@@@@QG@@@@NT@@@@GEI@@@A)KZ[N#[#@K0K0^@K@@N8T@@N^^K@K!N8U@@NNJ
)@@G@@^^K@K,N8N@@NO]K@#BO]K@@NR]K@@@O@0@#JO@0@@MEJ@@@A)K([F@^[@K^[@K^G@@@@@@@@NK
)@@G@@@@@@@G@@@@K0@@@@K\@@@@K,@@@@K!/,0@$:^^K@K0N8S@@N^^K@K\EK@@@A)K2[F#[#[@K0NL
)@@G@@K0^G^G^G@@@@O[K@](R[K@#Q[@@@@QG/@@@[T@@@@GC@@@@J/K@@LL@^W@[2@@@@@JEL@@@ANM
)@@G@@)K;[F#[#[#[#[#@K^G@@@@@@N8Q@@@R[)@#O^^K@LFN8P@@@O@K@#AO@K@@QR@K@#RO[0@]:NN
)@@G@@R[0@#REM@@@A)L^[N@^@K^[@K^[@@@@@@@LH@@@@LG@@@@LF@@@@LE/,0@$:^^K@LHN8L@@NNO
)@@G@@^^K@LGN8R@@@^^K@LEEN@@@A)LI@V#[#[#@@)[#@K@)LL@V]H#[@@@/K@@T^@@@@[#/,0@@@NP
)@@G@@______2BVSS3@^Z@[2@@@@@J@@@@@GEO@@@A)LO[F#[#@K0^[#[#@@@@@@@@R@0@@@O[@@](NQ
)@@G@@R[@@#Q/K@@L;*@G@@]G@@@# T/@@@OC@@@@D@^)@[2EP@@@A)LX[F#[#@K[@K>K^@@@@@@@@NR
)@@G@@@@@@L>@@@@L=/,0@@@^^K@L=N8N@@N^^K@L>N8O@@@O@0@#JO@0@@MEQ@@@A)L&[F#@^HOG4NS
)@@G@@G^H^H^H@@@@@@@@@@A@@@@@@@@@@@G@@@@[Y@@@@@L@@@@@I@@@@@@@@@@@@@@@@@LER@@@ANT
)@@G@@)L\[F#[#[#[#[#[#[@K(K0@@@@[@[ /,0@@@/K@@L;(@@@@T@^<@[2@@@@@@@@@@@J@@@@@GNU
)@@G@@@@@@[:ES@@@A)L8@V#[#[]*@)[ @0@@@@@@@86H EN.,I4,0 ERRORDSTAT2***** (020H0NV
)@@G@@'^@@@@@@K@@T@^&@[2ET@@@A)[F[S@@@@@@@IONS ADEVIATNDARD SE STA BECAUE ZERONW
)@@G@@RIX ARON MATRELATIIN CORTRIES EU@@@A)[Q[@@@@@@@@)L;@F#@@@@@@R])@#Q)     NX
)@@G@@ICIENTINSUFF6HARE 25X,01OUNTS/O OR CRE ZEREV@@@A)L/[N#@K0K0K0^G[@@N8T@@NNY
)@@G@@^^K@MHN8U@@@G@@@# T/@@@OC@@@@DO]K@#JO]K@@MR]K@@@O])@](EW@@@A)MA[N@^@K^D=NZ
)@@G@@[@K0@@@@@@@@@@@@@L@@@@MH@@@@MG/,0@@@^^K@MNN8W@@L^^K@MMN8W@@K^^K@MGEX@@@AOA
)@@G@@)MK[F#[#[@K^G[#@K@@@@@@@/K@@M4(@@@@GH@@@@LC/@@@]@^%@[2@@@@MN@@@@MM@@@@@JOB
)@@G@@@@@@@GEY@@@A)MT[F#[#[#@K0^G^G@@@@@@@N8W@@CO[K@#JO[K@@MR[K@@@G@@@# T/@@@OOC
)@@G@@C@@@@DO]@@#JR]@@@MEZ@@@A)M+[N@^@K^D4[#[#@@@@@@@@@@@@@J@@@@@G@@@@M*/,0@@@OD
)@@G@@^^K@M0N8S@@N^^K@M*N8P@@N^^K@M!FA@@@A)M?[EK^G^G4[@K0K^G@@@@@@R[0@#Q/K@@NGOE
)@@G@@@^!@[2/K@@T^@@@@M0@@@@@L@@@@@@@@@@M!@@@@@@FB@@@A)M5[N#[#@K0^@K^G@@N8L@@@OF
)@@G@@R@K@#O^^K@N[N8R@@@^^K@NAN8W@@CG@@@# T/@@@OC@@@@DO[0@](FC@@@A)M_[F@K$K^G^OG
)@@G@@G@K^G@@@@@@@@@@@@@@@@@NA@@@@@@@@@@@@@@@@@J@@@@@G@@@@N[/,0@@@^^K@NDFD@@@AOH
)@@G@@)NC[F#H@K^G^G[#@K@@@@@@@/K@@O!(@G@@ G@@@# T/@@@OC@@@@D@^\@[2/K@@T^@@@@NDOI
)@@G@@@@@@@LFE@@@A)NL[F#[#[#[@K0^@K@@@@@@@^^K@NVN8Q@@N^^K@NWN8O@@@R[@@#N/K@@N?OJ
)@@G@@*@@@@JO[)@#BR[)@@NFF@@@A)NU[F]P@K^G@K5K3K0@@@@@@@@@@[Y@@@@@L@@@@@P@@@@@@OK
)@@G@@@@@@@@@@@@@L@@@@NW@@@@NV/,0@@@FG@@@A)N<[F#L#L#L#[#[#[#[#[@@@/K@@O!@^4@[2OL
)@@G@@@@@@@@@@@@[!@@@@@G@@@@[?@@@@@S@@@@@M@@@@@YFH@@@A)N?[F#[#P#[#[#@K[@@@@@@@OM
)@@G@@^^K@N6N8N@@N^^K@N7N8U@@@R])@#NO@0@#BR@0@@N[@@@@TC@@@[,FI@@@A)N5[F]P@K^G@ON
)@@G@@K5K3K0@@@@@@@@@@[Y@@@@@L@@@@@P@@@@@@@@@@@@@@@@@L@@@@N7@@@@N6/,0@@@FJ@@@AOO
)@@G@@)N"[F#L#L#L#[#[#[#[#[#@@C@@@[\@^7@[2@@@@@@@@@@@J@@@@@G@@@@[?@@@@@S@@@@@MOP
)@@G@@@@@@@YFK@@@A)OB[F#P#[#[#[#[#[#@K0@@@[[@@@UG.@@@[C[@@#S[@)@@QG@)@@N[@)@#SOQ
)@@G@@T@)@@GC@)@@J[@@@@TFL@@@A)OK[F#[#[#[#@K[@K0@@@@@@D[)@@G^^K@OVN8T@@N^^K@OWOR
)@@G@@N8P@@NO[K@#AR[K@@UO]K@#BR]K@@QFM@@@A)OT[F#[]P@K^G@K5K3@@@@@@@@@@@L@@@@@POS
)@@G@@@@@@@@@@@@@@@@@@@L@@@@OW@@@@OV/,0@@@[[)@#SFN@@@A)O+[F#[#L#L#L#[#[#[#[#@@OT
)@@G@@@^;@[2@@@@@@@@@@@J@@@@#S@@@@[?@@@@@S@@@@@M@@@@@Y@@@@[YFO@@@A)O:[F#[#P#@KOU
)@@G@@0^[#[#@@@@@@O]@@#BR]@@@N/K@@RW(@G@@AG@@@# T/@@@OC@@@@D[@@@@TC@@@[*FP@@@AOV
)@@G@@)O4[N#[#[#[@^G[@^@^^K@P]N8S@@N/K@@PA(@@@@GH@@@@LC/@@@]/K@@P%*@@@@JO[0@#JOW
)@@G@@R[0@@MFQ@@@A)O"[EK^[@K^G^G^[#@@@@@@@R@K@#N/K@@PL@ #@[2@@@@@G@@@@P]@@@@P[OX
)@@G@@/,0@0Y^^K@P[N8R@@NFR@@@A)PB[EK^G[@K^[@K0@@@@@@@@@@@@@G@@@@PI@@@@PH/,0@0YOY
)@@G@@^^K@PHN8Q@@@R[)@#O^^K@PIN8L@@@FS@@@A)PK[F#[#[#[#@K[@K>@@@@@@/,0@@@^^K@PTOZ
)@@G@@N8O@@N^^K@PUN8N@@@R@0@#NO[@@#BR[@@@N@  @[2FT@@@A)PT[F@K^G@K5K3K0K4@@@@@@PA
)@@G@@@@@@@Y@@@@[Y@@@@@L@@@@@<@@@@@@@@@@@@@@@@@L@@@@PU@@@@PTFU@@@A)P+[F#L#L#[#PB
)@@G@@[#[#[#[@@@@@C/@@@]/K@@RW@ B@[2@@@@@@@@@@[!@@@@@G@@@@[?@@@@@S@@@@@MFV@@@APC
)@@G@@)P:[F#@K^G^G^G^G^G^G@@@@O[K@#BR[K@@Q[@@@@QG@@@@NT@@@@GC@@@@J/K@@QA(@@@@GPD
)@@G@@H@@@@LFW@@@A)P4[N#[#[#[#@K[@^@^^K@Q[N8P@@N^^K@P_N8T@@N^^K@Q@N8U@@NO])@#BPE
)@@G@@R])@@NO]K@#JR]K@@MFX@@@A)P"[F@K^[@K0K0K0K^G@@@@@C@@@@J/K@@QV@ G@[2@@@@@JPF
)@@G@@@@@@@G@@@@Q[@@@@Q@@@@@P_/,0@1:FY@@@A)QB[F#@K0K0K0K0^[#@@@@@@R@K@#O^^K@QQPG
)@@G@@N8R@@@R[0@#NO]@@#AR]@@@Q[@@@@QG/@@@[T@@@@GFZ@@@A)QK[MK[@K^[@K^G^G@@@@@@JPH
)@@G@@@@@@@G@@@@QR@@@@QQ@@@@QP/,0@1:^^K@QRN8S@@N^^K@QPN8L@@@GA@@@A)QU[F#[#[#P#PI
)@@G@@[#[#@K@@@@@@N8Q@@N^^K@Q&N8O@@@R[@@#NO[)@#BR[)@@N[@@@@$C@@@[,@ J@[2GB@@@APJ
)@@G@@)Q<[F@K>K^[#@^HOG0@@@@@@@@@@@L@@@@@<@@@@@@@@@@@@@@@@@L@@@@Q&@@@@Q>/,0@@@PK
)@@G@@^^K@Q>GC@@@A)Q?[F#[#L#L#L#[#[#[#[#@@@ L@[2@@@@@@@@@@@J@@@@@G@@@@[?@@@@@SPL
)@@G@@@@@@@M@@@@@Y@@@@[YGD@@@A)Q5[F#[#P#[#[#[#[#[#@@@@G.@@@[C[@@#S[@)@@QG@)@@NPM
)@@G@@[@)@#ST@)@@GC@)@@J[@@@@$C@@@[\GE@@@A)Q"[F#[#[#[#[#@K[@@@@@@@^^K@REN8N@@NPN
)@@G@@^^K@RFN8U@@NO])@#AR])@@UO@0@#BR@0@@Q[[@@@UGF@@@A)RB[F#[#[]P@K^G@K5@@@@@@PO
)@@G@@@@@@@<@@@@@@@@@@@@@@@@@L@@@@RF@@@@RE/,0@@@[[)@#SD[)@@GGG@@@A)RK[F#H#[#L#PP
)@@G@@L#L#[#[#[#@@@@@@@@@@@@@J@@@@#S@@@@[?@@@@@S@@@@@M@@@@@Y@@@@[Y@@@@@LGH@@@APQ
)@@G@@)RT[F#[#[#P#@K0^[#@@@@@@R]K@#R/K@@^)(@G@@BG@@@# T/@@@OC@@@@D[@@@@$C@@@[*PR
)@@G@@@ P@[2GI@@@A)R+[N#@K0K0K0K[@^@^^K@R!N8P@@N^^K@R,N8T@@@/K@@R"*@@@@JO[K@#BPS
)@@G@@O[K@@NR[K@@@O]K@]:GJ@@@A)R?[F]P@K^G@K5K3K3@@@@@@@@@@@E@@@@@L@@@@@%@@@@@@PT
)@@G@@@@@@@@@@@@@L@@@@R,@@@@R!/,0@@@GK@@@A)R5[F#L#L#L#[#[#[#[#[@@@/K@@^)@ V@[2PU
)@@G@@@@@@@@@@@@[!@@@@@G@@@@[?@@@@@S@@@@@M@@@@@YGL@@@A)R"[F#[#P#[#@K0K0^@@@@@@PV
)@@G@@^^K@SFN8L@@@O]@@#BO]@@@NR]@@@@O@K@]:R@K@#R[@@@@0C@@@[,GM@@@A)SB[MK^DO[@KPW
)@@G@@0[#P#G@@@@@L@@@@@%@@@@@@@@@@@@@@@@@L@@@@SF@@@@SE/,0@@@^^K@SEN8S@@NGN@@@APX
)@@G@@)SL[F#H#L#L#L#[#[#[#[#@@@ Y@[2@@@@@@@@@@@J@@@@@G@@@@[?@@@@@S@@@@@M@@@@@YPY
)@@G@@@@@@@EGO@@@A)SU[F#[#P#[#[#[#[#[#@@@@G.@@@[C[@@#S[@)@@QG@)@@N[@)@#ST@)@@GPZ
)@@G@@C@)@@J[@@@@0C@@@[\GP@@@A)S<[F#[#[#[#@K0K0^@@@@@@^^K@S2N8R@@NO[@@#BO[@@@QQA
)@@G@@R[@@@@O[0@#AO[0@@UR[0@#R[[@@@UGQ@@@A)S?[MK^G^G^DO[@K0@@@@@@@@@@@@@@@@@@LQB
)@@G@@@@@@S2@@@@S1/,0@@@[[)@#SD[)@@G^^K@S1N8O@@NGR@@@A)S6[F#P#H#H#L#L#L#[#[#@@QC
)@@G@@@@@@@J@@@@#S@@@@[?@@@@@S@@@@@M@@@@@Y@@@@@E@@@@@L@@@@@%GS@@@A)S_[F#[#[#[#QD
)@@G@@P@K^[#[#@@@@R]0@[3@ >@[2/K@@TBN@0@TA/K@@^)[@@@@0C@@@[*@ +@[2@@@@@@GT@@@AQE
)@@G@@)TC[F#[#[#[#[#[#[#[#[#@@R[@@#&R@0@#>R@)@#=R@K@#<9\)@#-9\@@#Z9,)@#X9,@@#VQF
)@@G@@9!)@#TGU@@@A)TL[##[#[#[#[#[#[#[#@@@@@@@@@@*4@K[0N[@@#!R])@#?R]K@#:R]@@#%QG
)@@G@@R[0@#(R[)@#*R[K@#$GV@@@A)[0@C@)TT@N#[]?@@@)[2@K@)TV@N#[#@@@@9()@#TAA0@[3QH
)@@G@@@ >@@]S2BVSS/K@@@@/K@K[0@@F@@?GW@@@A)TX[F#[#[#[#[#[#[#[#[#@@A[K@#$A[@@#&QI
)@@G@@A@0@#>A@)@#=A@K@#<9:)@#-9:@@#Z9%)@#X9%@@#VGX@@@A)T&[F#[#[#[#[#[#[@^G@@@@QJ
)@@G@@G@@@#\C/@__"/K@@1"^[@@#!A])@#?A]K@#:A]@@#%A[0@#(A[)@#*GY@@@A)T\[N#@K0^G[QK
)@@G@@#@K0@@G")__:C])@#1G"@__:C]@@]>G.)__:C[)@]*G.@__?C[@@]>G/)__:C@)@#0GZ@@@AQL
)@@G@@)T9[F#@K0^G^G[#[#@@@@@@@C#)@]Y[#)@#4G_)__:C#)@]W[#)@#3G_)__:C#)@#2G_@__:QM
)@@G@@C#@@]THA@@@A)U][EK0K0^G^G[#[#@@@@@@@C#)@#9[#)@#8G_)__:C#)@]X[#)@#7G_)__:QN
)@@G@@C#)@#6[#)@#5G_)__:HB@@@A)UF[EK0K0^G^G[#[#@@@@@@@C#)@]&[#)@#/G_)__:C#)@]$QO
)@@G@@[#)@#;G_)__:C#)@]U[#)@#'G_)__:HC@@@A)UO[EK0K0^G^G[#[#@@@@@@@C#)@^@[#)@#_QP
)@@G@@G_)__:C#)@]Z[#)@#"G_)__:C#)@]=[#)@#.G_)__:HD@@@A)UX[EK0K0^G^G[#[#@@@@@@@QQ
)@@G@@C#)@^ [#)@^^G_)__:C#)@^#[#)@^]G_)__:C#)@]V[#)@^[G_)__:HE@@@A)U&[EK0K0K0KQR
)@@G@@0K0K0K0K0@@@[#@@^G[])@^F[]@@^E[[)@^D[[@@^C[@)@^B[@@@^AG#)@]Y;#)@@<HF@@@AQS
)@@G@@)U\[F#[#[#[#@K0@@@@@@@@@R@K@@IC_0@@[G/)__?C@)@^I @[@@@R@K@^H[@@@@VC@@@^ QT
)@@G@@[#)@^HHG@@@A)U8[F#[#@K0K0^G^G^G@@@@@O@)@^[R@)@@C[@@@@CC@[@@N[@@@^JG@@@@VQU
)@@G@@C/@__"[#0@@PN[@@^AHH@@@A)V[[MK0K0K0^G[@^G@R@)@^CC_)@@[/K@@VO(@@@@@[[@@@WQV
)@@G@@C[]@@NO@)@#"R@)@@C[@)@@CC@+@@NHI@@@A)VF[N#[#@K0^@^@@@@C/@@@[8LK@VGG_)@@[QW
)@@G@@O/)@@[/K@@WQ(@@@@GH@@@@WC@]@@N[#)@@XN[K@^JHJ@@@A)VP[F#[#[#[#[#@K0^G@@@@@QX
)@@G@@G@@@#5;@@@@<G@)@^D;@)@@<C@)@@WO@)@^ER@)@@V[@@@@VG@@@@VHK@@@A)VY[N#@K0K@[QY
)@@G@@#[#@@@O@)@^BR@)@@V[]G@@NC]I@@N[[?@@MC[,@@M/K@@V&(@@@@B[[]@@NC[@@@WHL@@@AQZ
)@@G@@)V*[F#[#@^G^G^G^G^G@@@@@R[@@@VO@)@#4R@)@@CO@0@^FR@0@@V[@]@@NC@#@@NO@0@^GRA
)@@G@@R@0@@CHM@@@A)V1[F#[#[#[#[#[#[#[#[#@@O]@@#'R]@@@VO[0@#;R[0@@CO[)@#7R[)@@VRB
)@@G@@O[K@#8R[K@@CO[@@#3HN@@@A)V'[F#[#[#[#[#[#[#[#[#@@R])@@VA])@^LO])@#_R])@@CRC
)@@G@@A])@^KO])@#/R])@@VO]K@#.R]K@@CHO@@@A)W#[N#[#[#[#@@@@@@[@&@@NC@$@@N[@^@@NRD
)@@G@@C@ @@N[@<@@NC@+@@NO])@^]R])@@CA])@^MO])@^^HP@@@A)WH[M^G[#@^G@@@@@@O/K@@[RE
)@@G@@[@ @@NR[K@^MC@E@@N[@<@@NR@0@^KC@+@@NR@)@^L[@C@@NC@D@@NHQ@@@A)WR[EK^G[@K^RF
)@@G@@G^G^G@@@@@@@9!)@^NR]0@[7@AG@[6/K@@WYN@0@WX[@@@@@C@@@@V8L@@U9G_0@@[HR@@@ARG
)@@G@@)W)[F#[#[#[#[#[#[#[#[#@@R[K@^-R[@@^)R@0@^ZR@)@^YR@K@^X9\)@^V9\@@^T9,)@^RRH
)@@G@@9,@@^PHS@@@A)W([##[#[#[#[#[#[#[#@@@@@@@@@@*4@K[4N[K@^*N[@@^$R])@^&R]K@^>RI
)@@G@@R]@@^=R[0@^<R[)@^+HT@@@A)[4@C@)W1@N#[]?@@@)[6@K@)W3@N#[#@@@@9()@^NAA0@[7RJ
)@@G@@@AG@@]SELECT/K@@@@/K@K[4@@F@@AHU@@@A)W5[F#[#[#[#[#[#[#[#[#@@A[K@^-A[@@^)RK
)@@G@@A@0@^ZA@)@^YA@K@^X9:)@^V9:@@^T9%)@^R9%@@^PHV@@@A)W"[F#[#[#[#[#[#[#@K0@@@RL
)@@G@@[@K@#\C@VK@@^[K@^*^[@@^$A])@^&A]K@^>A]@@^=A[0@^<A[)@^+HW@@@A)XB[MK0^@K0^RM
)@@G@@[@@@@@C/@__"/K@@T![^@@WUC8FK@^[@K@^ C@VK@#[^@@VBC8FK@][@@@^IC8FK@[HX@@@ARN
)@@G@@)XL[F#[#@K0K3^G[#@@@@@@@C[@@^!G/)__:C@)@^? @@@@G*@@@@A[@@@@-C/@@@[[@@@^%RO
)@@G@@G@@@^:HY@@@A)XU[EK0^G@K0K0K0@@@@@@@@[@)@^1[@@@^0N[@@^%C_0@@[G"@__:C]@@^\RP
)@@G@@G.)__:C[)@^,G.@__:HZ@@@A)X<[F#[#[#[#@K0K0K0K0@@@H@)@^:G@)@@PC@)@^:G@@@@PRQ
)@@G@@C/@__"[#0@@P[]@@^4[[)@^3[[@@^2IA@@@A)X?[F#[#@K0K0K0K0K0K0@@@[[@@^5G[)@^2RR
)@@G@@C[)@^5G@)@^4[@)@^5H[@@^:G.@@@[T[@@@PC[@@^:IB@@@A)X5[F#[#[#[#[#[#[#[#@@@@RS
)@@G@@C_)@@[[]@@^9[[)@^8[[@@^7[@)@^6[@@@^5G]@@^4C]@@^5G[@@^2IC@@@A)X"[F#[#[#[#RT
)@@G@@[#[#[#[#[#@@A[K@^'O[K@^1R[K@@-[#)@@CN[K@^5R[@@^8R@0@^9R@)@^7R@K@^6ID@@@ARU
)@@G@@)YB[N#[#@K0K[@K0K@C@[@@N/K@@YX @@@@Y/K@@YK*@@@@G/G@@YI[@@@@)C@ @@NR[K@^'RV
)@@G@@ @@@@+IE@@@A)YL[N#[#@[#[@^@@@@ @^@@N/K@@YX*@@@@G/C@@YU"@@@[&]@^@@N"^^@@NRW
)@@G@@"C[@@N[@@@@Y"G@@@)IF@@@A)YV[EK0K0K0^[#[#[@@@@@@@/K@@Y7[@@@@ZC@@@@Y/K@@Y=RX
)@@G@@*@@@@GH@@@@PC@@@@C[@@@@+C/@@@[IG@@@A)Y=[N#[@^[#[@^G^G@"C#@@N[@@@@Z"G@@@)RY
)@@G@@C@#@@N/K@@Y7 @@@@Z/K@@Y%*@@@@G/C@@Y*D@@@@)IH@@@A)Y,[M^G^@K@K0K0@@@R[K@@-RZ
)@@G@@[@@@@+C/@@@[ @]@@N/K@@Y7*@@@@G/C@@Y4"@@@[&]@]@@N"^]@@NII@@@A)Y8[F#@K0[#[SA
)@@G@@#[@K0@@@@@@@C@@@[-/)@@Z#C@@@^0A[K@^;]@ @@N"^ @@N"C@@@ZC@[@@NO[K@^3IJ@@@ASB
)@@G@@)Z[[N#[#@K0[#@@@@@ @@@@I1@@@@K*@@@@KD[@@@)C/)@@[ @@@@G*@@@@+C/@@@[]@@@@)SC
)@@G@@"^@@@)IK@@@A)ZF[MK^G[@K0K0^G@@[@ @@N"G@@@)C@ @@NO[K@^3R[K@@-/K@@ZP @ @@NSD
)@@G@@R[K@^;/=K@ZK+@@@@IIL@@@A)ZP[MK0K0K0[#@K@@@G_0@@[8LK@Y#G_)@@[O[@@^:O/0@@[SE
)@@G@@O/)@@[O@K@^:[@@@@-G@@@@-C/@@@[IM@@@A)ZZ[F@K^[#[#[#[#[#[#@@@@R@K@ ]9\)@ @SF
)@@G@@9,@@^"9!)@^/R]0@[;@B[@['/K@@Z<N@0@Z+8L@@X&IN@@@A)Z*@;#[#[#[#[#[#[#@@@@@@SG
)@@G@@)[8@C@@@F@@A*4@K[8N[K@ CN[@@ BR[K@ AR[@@  R@0@ ^R@)@ #IO@@@A)Z\@N#[]?@@@SH
)@@G@@)['@K@)Z1@V#[#[#@@@@@@@@9%@@^"9()@^/AA0@[;@B[@@]COVTRI/K@@@@/K@K[8IP@@@ASI
)@@G@@)Z4[F#[#[#[#[#[#[#[#@@@@C8FK@@^[K@ C^[@@ BA[K@ AA[@@  A@0@ ^A@)@ #A@K@ ]SJ
)@@G@@9:)@ @IQ@@@A)Z.[N#@K0^G[#@K0K@/K@@XK[@K@^:C@VK@^[@@@^!C8FK@#[@@@^\C8FK@]SK
)@@G@@[@@@^,C8FK@[[@@@^?IR@@@A))B[EK0^G[#[#@K0@@@@@@@@G[)@ EC.)@@[H[@@ FG[@@ FSL
)@@G@@C.@@@[G@)@ FC/)__"G@@@ EC/@__"IS@@@A))K[F#[#[#@K0K0K0K0K0@@@]]@@ K[[)@ JSM
)@@G@@[[@@ I[@)@ H[@@@ GH"@@@[T]@@ EC]@@ FH[)@ EIT@@@A))T[MK3^G[#@K0^G@@C]@@ OSN
)@@G@@G.)__:C[)@ NG.@__:C[@@ MG/)__:C@)@ L @@@@G*@@@@AC/@@@[IU@@@A))<[EK0^G[#[SO
)@@G@@#[#[#@@@@@@@G[@@ JG@)@ JG#@@ JG]@@ IG_@__:C#@@ QG")__:C])@ PG"@__:IV@@@ASP
)@@G@@))?[N#[#@@[#[#@@@@[@@@ RN[@@ GR[)@@IR[K@@KR[@@@MR@0@@OR@)@@QR@K@@SG])@ JSQ
)@@G@@G[)@ IIW@@@A))6[F#[#@K0K[@K0K0@@@@@@ @@@@= @@@@</K@@-@*@@@@G/G@@).[@@@@>SR
)@@G@@C@A@@N @@@@&N[K@ HIX@@@A))_[N@^G^G[#[#@@@@]@ @@N"^ @@N"C[@@N[@)@@="G)@@>SS
)@@G@@C@=@@N[@@@@<"G@@@>C@[@@N/K@@-VIY@@@A)-D[N#[@^@^G[#@@@@"^#@@N"C@@@=C@^@@NST
)@@G@@[@@@@&C/@@@[ @ @@N/K@@-K*@@@@G/C@@-H"@@@[&IZ@@@A)-N[MK0K[@[#@K0@@@"C@@@=SU
)@@G@@C@[@@N[@@@@&C/@@@[ @#@@N/K@@-V*@@@@G/C@@-S"@@@[&]@#@@NJA@@@A)-X[M^G^[#[#SV
)@@G@@[#@K0@ @@@@G*@@@@&C/@@@[]@@@@>"^@@@>C@@@[-/)@@-=C@@@ R]@]@@N"^]@@NJB@@@ASW
)@@G@@)-$[MK0@^@K@@@@@@@C@]@@N/K@@-3 @]@@N/=K@-0+@@@@I @@@@I1@@@@K*@@@@KD[@@@>SX
)@@G@@C/)@@[JC@@@A)-1[F#@K0K0[#[#[@@@@@@@@8LK@)7O[)@ EO[K@ EO.@@@[O/0@@[O@)@ ESY
)@@G@@O@K@ E[@]@@N"G@@@>JD@@@A)-'[F#[#[#[#[@K^[#[#@@@@R]0@[_@B\@["/K@@+]N@0@+[SZ
)@@G@@8L@@)6O[)@ KO[K@ KO@)@ KO@K@ KJE@@@A)+#[F#[#[#[#[#[#[#[#[#@@R[K@ =R[@@ <TA
)@@G@@R@0@ +R@)@ -R@K@ )9\@@ Y9,)@ W9,@@ U9!)@ SJF@@@A)+G@<#[#[#[#@@@@@@)[/@C@TB
)@@G@@)+K@N#[]?@@@/K@@@@/K@K[/@@F@@D*4@K[/N[K@ $N[@@ &R[)@ >JG@@@A)["@K@)+M@3#TC
)@@G@@[#[#[#[#[#@@@@@@@@A@K@ )9:@@ Y9%)@ W9%@@ U9()@ SAA0@[_@B\@@]COVRECJH@@@ATD
)@@G@@)+S[F#[#[#[#[#[#[#@K0@@@[@@@ LC8FK@@^[K@ $^[@@ &A[)@ >A[K@ =A[@@ <A@0@ +TE
)@@G@@A@)@ -JI@@@A)+-[MK0^G[#@K0^G@@[@@@ OC8FK@ [@@@ MC8FK@^[@@@ NC8FK@#[@@@ QTF
)@@G@@C8FK@][@@@ PC8FK@[JJ@@@A)+:[MK0^G^@K0K0^G@[@@@@(C/@@@[[@@@ (G@@@ %C/@__"TG
)@@G@@/K@@)B[@K@ FC@VK@B[@K@ EC@VK@AJK@@@A)+5[N#GK0^G[#@^G@@N[@@ (C_0@@[G.)__:TH
)@@G@@C[)@ !G.@__:C[@@ ?G/)__:C@)@ : @@@@G*@@@@AJL@@@A)+_[F#[#[#[#[#@K0K0K0@@@TI
)@@G@@G@)@@PC@)@ %G@@@@PC/@__"[#0@@P[[)@ 1[[@@ 0[@)@ \[@@@ ,JM@@@A)<C[F#[#[#[#TJ
)@@G@@@K0K0K0K0@@@[@)@ 3[@@@ 2G[@@ 1H[@@ %G.@@@[T[@@@PC[@@ %G@)@ 1H@)@ %JN@@@ATK
)@@G@@)<L[F#@K0K0K0K0K0K0K0@@@A@0@ 5O@0@ \R@0@@([#)@@CN[K@ 2R@)@ 3R@K@ 4C_)@@[TL
)@@G@@[[@@ 4JO@@@A)<U[F#[#@K0K0K^G^G^G@@@@]@@@@$"^@@@$C@@@[-/)@@<<C@@@ ,[@@@@$TM
)@@G@@C@#@@NR@0@ 5 @@@@%JP@@@A)<<[N#@^@K0^G^@@@@*@@@@G/G@@<,"^@@[&[@]@@N"G@@@$TN
)@@G@@C@]@@N/K@@<,1@@@@G*@@@@GD@@@@$JQ@@@A)<![N@^G[@^[]-@K0@@CE@]]@@@@<5/,0@@@TO
)@@G@@^^K@<5N8M@@N/K@@<8 @]@@N[@@@@%C/@@@[/K@@<2JR@@@A)<7[MK0K0^[#@^@@@@C@[@@NTP
)@@G@@/K@@=B1@@@@G*@@@@GD@@@@$/K@@=L(@@@@GH@@@@PC@@@@C[@]@@NJS@@@A)=[[N#@K0K[@TQ
)@@G@@^G[@@@/K@@=\ @[@@N[@@@@%C/@@@[/K@@=F*@@@@G/G@@=B"^@@[&[@[@@N"G@@@$JT@@@ATR
)@@G@@)=F[MK^E^[#@K0K0@@"G]@@NC@#@@NO@0@ 0R@0@@([@[@@N@CP@]]@@@@=I/,0@@@^^K@=ITS
)@@G@@N8L@@NJU@@@A)=P[EK0K0K0K0[@K0@@@@@@@C@@@[-/K@@=Z1@@@@G*@@@@G"^@@@*C@@@[-TT
)@@G@@A@0@ 6[@@@@*"G[@@NJV@@@A)=Y[F#[#[#@^[#[#[#@@@@@@C@@@@C[@@@@*D@@@[-/K@@=&TU
)@@G@@1@@@@G*@@@@G"@@@[-C@@@@*[@@@@*JW@@@A)=$[F#@K^G^G^G^G[#@@@@@@R@0@@([@#@@NTV
)@@G@@R@0@ 6C@@@@*[@@@@*C@@@[-/K@@=?*@@@@GH@@@@PJX@@@A)=0[F#[#[@[#[#@K0@@@@@@@TW
)@@G@@G@@@@(C/@@@[[@@@@TG@@@@TC/@@@[ @#@@N/K@@=7(@@@@%O@0@ 0JY@@@A)=9[N#@K0^@KTX
)@@G@@^[@K0@@C&@]]/K@@>#N@0@>]8L@@<#G_0@@[8LK@<QG_)@@[O@)@ %O/K@@[[@@@@(JZ@@@ATY
)@@G@@)>#[F#[#[#[#[#[#[#[#[#@@*4@K]@N[K@ _N[@@ "R@0@ .R@)@ /R@K@ ;9\)@ 99!)@ 7TZ
)@@G@@R]0@]#KA@@@A)]@@C@)>G@N#[]?@@@)]]@K@)>I@N#[#@@@@9()@ 7AA0@]#@C&@@]CORTRIUA
)@@G@@/K@@@@/K@K]@@@F@@ KB@@@A)>K[F#[#[#[#[#[#@K0@@@@@C8FK@[[@@@ :C8FK@@^[K@ _UB
)@@G@@^[@@ "A@0@ .A@)@ /A@K@ ;9:)@ 9KC@@@A)>T[N#@K0^G^@K0^G@G@)@A]C/)__"G@@@A[UC
)@@G@@C/@__"/K@@+0[@K@ %C@VK@#[@@@ !C8FK@][@@@ ?KD@@@A)><[EK0K0K0K0[#[#@@@@@@@UD
)@@G@@H]@@A[G]@@A[C"@@@[H.)@@[T[)@A[C[)@A]H[@@A]G[@@A]C.@@@[KE@@@A)>?[F#[#[#[#UE
)@@G@@[#@K3^G@@@@@C@)@AC @@@@G*@@@@AC/@@@[[]@@AB][)@AA[[@@A [@)@A^[@@@A#KF@@@AUF
)@@G@@)>5[EK0^G[#@K0K0@@@@@@@@G[)@ABG]@@A G"@__:C]@@AFG.)__:C[)@AEG.@__:C[@@ADUG
)@@G@@G/)__:KG@@@A)>"[F#[#@@K0K0K0@@@@@@@@N[K@A^[@@@AGN[@@A#R[@@@MR@0@@IR@)@@KUH
)@@G@@R@K@@OG[@@ABG@)@ABKH@@@A)&B[F#@K0K0K^G^G^G^G@@@@D@@@@:]@@@@:"^@@@:C@@@[-UI
)@@G@@/)@@&JC@@@AG[@@@@:C@^@@N @@@@!KI@@@A)&K[M^@K0^G^@K@@@@/K@@&Y*@@@@G/G@@&UUJ
)@@G@@"^@@[&[@#@@N"G@@@:C@#@@N/K@@&U1@@@@G*@@@@GKJ@@@A)&U[MK0^@K^E^[#@@@[@#@@NUK
)@@G@@@D@@]A@@@@&-/,0@@@^^K@&-N8N@@N/K@@&= @#@@N[@@@@!C/@@@[KK@@@A)&=[N#@^@K0^UL
)@@G@@G^@@@@*@@@@G/G@@&\"^@@[&[@[@@N"G@@@:C@[@@N/K@@&\1@@@@G*@@@@GD@@@@:KL@@@AUM
)@@G@@)&,[N@^G[@^[]-@K0@@DD@]A@@@@&6/,0@@@^^K@&6N8L@@N/K@@$H @[@@N[@@@@!C/@@@[UN
)@@G@@/K@@&3KM@@@A)&8[M@K0K0K0[@@@@@/K@@$^1@@@@G*@@@@G"^@@@?C@@@[-[@)@@?"G-@@NUO
)@@G@@"G<@@NC@+@@N[@[@@NKN@@@A)$][F#[#[#[#@^[#[#@@@@@@[@@@@?D@@@[-/K@@$F1@@@@GUP
)@@G@@*@@@@G"@@@[-C@@@@?[@@@@?C@@@[-KO@@@A)$F[N#@K0K@K0K0^G@O@)@A[O/K@@[[@@@@TUQ
)@@G@@G@@@@TC/@@@[ @]@@N/K@@$N(@@@@![@]@@NC@@@@?KP@@@A)$P[F#[#[@K0K0K0K^[@@@@@UR
)@@G@@/K@@$ZN@0@$Y8L@@&AO[@@AAO@0@AAO@)@AA8LK@&BO[@@A[O@0@A[KQ@@@A)$Y[F#[#[#[#US
)@@G@@[#[#[#[#[#@@N[@@APR[@@AOR@0@ANR@)@AMR@K@AL9,@@AJ9!)@AHR]0@]B@DS@]AKR@@@AUT
)@@G@@)$$@N#[#@@@@)]^@C@)$(@N#[]?@@@)]A@K@@DS@@]CORREC/K@@@@/K@K]^@@F@@B*4@K]^UU
)@@G@@N[K@AQKS@@@A)$:[F#[#[#[#[#[#[#[#[#@@^[K@AQ^[@@APA[@@AOA@0@ANA@)@AMA@K@ALUV
)@@G@@9%@@AJ9()@AHAA0@]BKT@@@A)$4[MK0^G[#@K0^G@@[@K@A[C@VK@^[@@@AFC8FK@#[@@@ACUW
)@@G@@C8FK@][@@@ADC8FK@[[@@@AEC8FK@@KU@@@A)$"[MK0K[#[#@K0K0@C/@@@[[@)@AU[@@@ATUX
)@@G@@G/)__:C@)@^@G@@@ASC/@__"/K@@>Z[@K@A]C@VK@ KV@@@A)*C[F#[#@K0^G[#@@@@@@@@@UY
)@@G@@G"@__?C]@@AVG.)__:C[)@AYG.@__:C[@@AXG/)__:C@)@AW[@@@@,KW@@@A)*L[F#@K0^G[UZ
)@@G@@#@K0@@@@@@@@[@@@A<G/@__:C@@@A+G_)__:C#)@A-G_@__:C#@@A)G")__:C])@AZKX@@@AVA
)@@G@@)*U[F#@K0[#[#[#[#@@@@@@@[[@@A*[@)@A$[@@@A&N[@@ATR@K@@OC_0@@[[#)@A>G/@__:VB
)@@G@@C@@@A=KY@@@A)*<[F#[#[#[#[#@K0K0K0@@@G@)@@PC@)@ASG@@@@PC/@__"[#0@@P[#@@A?VC
)@@G@@[])@A:[]@@A%[[)@A(KZ@@@A)*?[F#[#[#@K0K0K0K0K0@@@G[)@A!C[)@A?G@)@A<[@)@A!VD
)@@G@@H[@@ASG.@@@[T[@@@PC[@@ASH@)@ASLA@@@A)*5[F#[#[#[#[#[#[#[#[#@@[]@@A1[[)@A0VE
)@@G@@[[@@A\[@)@A,[@@@A!G]@@A<C]@@A!G[@@A?[[@@A!LB@@@A)*"[EK0K0K0^G[#[#@@@@@@@VF
)@@G@@R@0@A%R@)@A1C_)@@[[@)@@\C@+@@NO@)@AUR@)@@\[@@@@\C@[@@NLC@@@A)(B[F#[#[#[#VG
)@@G@@[#[#[#[#[#@@O]@@A*R]@@@,O[0@A$R[0@@,[#)@@CN[K@A!R[)@A0R[K@A,R[@@A\LD@@@AVH
)@@G@@)(K[F#[#[#[#@K0K0K0@@@@@C[B@@NO[0@AUR[0@@1[@)@@1C@<@@N[@@@@0C@@@@\A]@@A3VI
)@@G@@A[0@A2LE@@@A)(T[N#@K0[#[#[#@@@1@@@@G*@@@@GH@@@@1C@@@@0[[@@@2G[@@@G;K@@@[VJ
)@@G@@T@@@@0H/@@@[[[@@@1LF@@@A)(<[F@^G^G[#[#[#[#@@@@@@O]@@A(R]@@@2]@@@@2H@@@@0VK
)@@G@@;K@@@[T@@@@1H@@@@1C/@@@[/K@@(%LG@@@A)(?[EK0[#[#[#@K0@@@@@@@@G[@@@0C.@__"VL
)@@G@@G@)@@0T@)@A4G@)@@1C/)__"[@B@@NR[0@A2C@C@@NLH@@@A)(5[F#[#[#[#[#@K0@@@@@@@VM
)@@G@@R])@@KO]K@@IR]K@A&O[0@@IR[0@A>O]@@A:R]@@@2G[@@@1T[@@A4LI@@@A)("[F#[#[#@^VN
)@@G@@G@K0@@@@@@@@G@@@@,C/@@@[[@*@@NR]@@A3C@*@@NO])@@KR])@A&A])@A5O])@A>LJ@@@AVO
)@@G@@)%B[N#@@K0K0^[#@@@R]@@A5/K@@%P(@@@@KH[@@@PC[@@@C[@>@@NC@(@@N[[A@@NC[B@@NVP
)@@G@@[@@@@,LK@@@A)%L[M@@K0K0@@@@@@@G_)@@[O[)@ASO[K@ASO.@@@[O/0@@[O/)@@[[@+@@NVQ
)@@G@@C@%@@N[[^@@NC[C@@NLL@@@A)%V[F@[@K^[#[#[#@@@@@@@@9!)@A6R]0@]F@D/@]E/K@@%+VR
)@@G@@N@0@%-8L@@*$G_0@@[O/K@@[8LK@(FLM@@@A)%=[F#[#[#[#[#[#[#[#[#@@R[K@B^R[@@B#VS
)@@G@@R@0@B]R@)@B[R@K@B@9\)@A"9\@@A/9,)@A'9,@@A8LN@@@A)%![##[#[#[#[#[#[#[#@@@@VT
)@@G@@@@@@@@*4@K]CN[K@BFN[@@BER])@BDR]K@BCR]@@BBR[0@BAR[)@B LO@@@A)]C@C@)%5@N#VU
)@@G@@[]?@@@)]E@K@)%7@N#[#@@@@9()@A6AA0@]F@D/@@]SELTRI/K@@@@/K@K]C@@F@@GLP@@@AVV
)@@G@@)%9[F#[#[#[#[#[#[#[#[#@@A[K@B^A[@@B#A@0@B]A@)@B[A@K@B@9:)@A"9:@@A/9%)@A'VW
)@@G@@9%@@A8LQ@@@A):][F#[#[#[#[#[#[#@K0@@@[@@@AVC8FK@@^[K@BF^[@@BEA])@BDA]K@BCVX
)@@G@@A]@@BBA[0@BAA[)@B LR@@@A):F[MK0^G[#@K0^G@@[@@@A-C8FK@ [@@@AXC8FK@^[@@@AWVY
)@@G@@C8FK@#[@@@AZC8FK@][@@@AYC8FK@[LS@@@A):P[MK0^G[#@K0^G@@[@K@ASC@VK@E[@@@A+VZ
)@@G@@C8FK@D[@@@A)C8FK@C[@K@A4C@VK@B[@@@A=C8FK@ALT@@@A):Z[N@^G[#@K0K0K0@G.)__:WA
)@@G@@C[)@^@H[@@BIG[@@BIC.@@@[G@)@BIC/)__"G@@@BHC/@__"/K@@*[LU@@@A):([F#[#@^G^WB
)@@G@@G^G^G^G@@@@@[[@@BL[@)@BK[@@@BJH])@BHG])@BHC")@@[H"@@@[T]@@BHC]@@BILV@@@AWC
)@@G@@):2[F#[#[#[#@K0^G@@@@@@@G.@__?C[@@BQG/)__:C@)@BRG/@__?C@@@BP[])@BO]]@@BNWD
)@@G@@[[)@BMLW@@@A):;[N#@K0^G[#@K0@@G_)__:C#)@BWG_@__:C#@@BVG")__:C])@BUG"@__:WE
)@@G@@C]@@BTG.)__:C[)@BSLX@@@A)? [F#[#@K0K0^G^G@@@@@@@G_)__:C#)@B+[#)@B-G_)__:WF
)@@G@@C#)@B)[#)@BZG_)__:C#)@BY[#)@BXLY@@@A)?I[F#[#@K0K0K0K0K0K0@@@G])@BOG[)@BOWG
)@@G@@G@)@BOG#)@B<C#)@BL[#)@B>G_)__:C#)@B=[#)@B<LZ@@@A)?R[F#[#[#[#[#[#@K0@@@@@WH
)@@G@@Q@)@@UR@)@[+R@K@@GG])@BOC])@BZ[])@BXG])@BXC])@BL[])@B<MA@@@A)?)[N#@[#[#[WI
)@@G@@#@K0@@[@@@@ 'K@@B<;@@@@MC@@@BHQ[@@BXR[@@[+[@@@@#'K@@@Q;@@@@MC@@@BHMB@@@AWJ
)@@G@@)?%[N#@[#@[#[#@@@@[[@@B<N[@@BJ[@@@@B'K@@@I;@@@@MC@@@BH[@@@@A'K@@@M;@@@@MWK
)@@G@@C@@@BHMC@@@A)?4[F#[#@K0K0K0^G^G@@@@@R]@@B<[@)@@3C@*@@NO]@@BMR]@@@3[@@@@3WL
)@@G@@C@[@@N[#@@BZ[]@@BXMD@@@A)?.[F#[#[#@K0K0K0^G@@@@@[[@@@5C[D@@NO]K@BMR]K@@5WM
)@@G@@[@)@@5C@*@@N[@@@@4C@@@@3N[K@BKME@@@A)!A[MK0[#[#[#@^@@@/K@@!Q1@@@@G*@@@@GWN
)@@G@@H@@@@5C@@@@4[[@@@6G[@@@G;K@@@[T@@@@4H/@@@[MF@@@A)!K[EK0K0^G^G^G^G@@@@@@@WO
)@@G@@C@D@@NO]K@BXR]K@@6]@@@@6H@@@@4;K@@@[T@@@@5H@@@@5C/@@@[MG@@@A)!T[E^G^G^G[WP
)@@G@@#[#[#@@@@@@@G[@@@5T[@@B&G[@@@4C.@__"G@)@@4T@)@B&G@)@@5C/)__"[@B)@NMH@@@AWQ
)@@G@@)!+[F#[#@K0K0^G^G^G@@@@@R])@B>A])@B*O])@B-R])@@KA])@B$O])@B-R])@@IO]K@BZWR
)@@G@@R]K@@6MI@@@A)!:[MK0^G@K0[#@@@@R]K@B*[@ )@NC@D@@NR]K@B$[@&)@NC@(@@NO])@B>WS
)@@G@@R])@@KA])@B(O])@@IMJ@@@A)!5[M^G@@K^G@@@@@@C^@@BN8LK@?"O"@@@[[@+)@NC@%@@NWT
)@@G@@[@#)@NC@D@@NR]K@B([@=)@NC@(@@NMK@@@A)!_[M^G@K0[#@@@@@@'K@@@BC^@@BN[@@@@AWU
)@@G@@'K@@@AC^@@BN[@@@@ 'K@@@ C^@@BN[@@@@#'K@@@#ML@@@A),D[E^[@K^G^G^G^G@@@@@@@WV
)@@G@@9,@@B?9!)@B%R]0@]J@EX@]I/K@@,JN@0@,I8L@@?6O/K@@[[@@@@BMM@@@A),M[F#[#[#[#WW
)@@G@@[#[#[#[#[#@@R[)@B9R[K@B8R[@@B7R@0@B6R@)@B5R@K@B49\)@B29\@@B09,)@B,MN@@@AWX
)@@G@@),V@;#[#[#[#[#[#[#@@@@@@)]G@C@@@F@@K*4@K]GN[K@B_N[@@B"R])@B.R]K@B/R]@@B;WY
)@@G@@R[0@B'MO@@@A),+@N#[]?@@@)]I@K@),=@V#[#[#@@@@@@@@9%@@B?9()@B%AA0@]J@EX@@]WZ
)@@G@@SELREC/K@@@@/K@K]GMP@@@A),$[F#[#[#[#[#[#[#[#[#@@A[)@B9A[K@B8A[@@B7A@0@B6XA
)@@G@@A@)@B5A@K@B49:)@B29:@@B09%)@B,MQ@@@A),0[F#[#[#[#[#[#@K0@@@@@C8FK@[[@@@BPXB
)@@G@@C8FK@@^[K@B_^[@@B"A])@B.A]K@B/A]@@B;A[0@B'MR@@@A),9[N#@K0^G[#@K0@@C@VK@AXC
)@@G@@[@@@BSC8FK@ [@@@BRC8FK@^[@@@BVC8FK@#[@@@BTC8FK@][@@@BQMS@@@A)\#[N#@K0^G[XD
)@@G@@#@K0@@C8FK@F[@K@B&C@VK@E[@@@B=C8FK@D[@@@B)C8FK@C[@K@BIC@VK@B[@K@BHMT@@@AXE
)@@G@@)\H[N#@K0^G[#[@^G@G@@@C]C/@__"/K@@:)[@@@B+C8FK@I[@@@BYC8FK@H[@@@BWC8FK@GXF
)@@G@@[@@@BUMU@@@A)\R[F#@K0K0^G@K0@@@@@@@@N[@@C[C_0@@[G.@__:C[@@C^G/)__:C@)@C#XG
)@@G@@[@@@@8C/@@@[[@@@C[MV@@@A)\)[F#[#[#@K0K0K0K0K0@@@G@)@CAH@)@C]G@)@@PC@)@C]XH
)@@G@@G@@@@PC/@__"[#0@@P[[@@CA[@)@C MW@@@A)\([F#[#@K0K0K0K0K0@@@@@C_)@@[[[@@CDXI
)@@G@@[@)@CC[@@@CBG[@@CAH[@@C]G.@@@[T[@@@PC[@@C]MX@@@A)\2[F#[#[#[#[#[#[#[#@@@@XJ
)@@G@@C@#@@NR@0@CEA@0@CEO@0@C R@0@@8[#)@@CN[K@CBR@)@CCR@K@CDMY@@@A)\;[F#[#[@^GXK
)@@G@@[#[#@@@@@@@@(@@@@KH[@@@PC[@@@C[@+@@N"G)@@7C@+@@N/K@@0C(@@@@7[@@@@7MZ@@@AXL
)@@G@@)0^[N@^G@K0K0^G@@@G_)@@[O@)@C]O/K@@[[@@@@8G@@@@8C/@@@[[[[@@N"H@@@7C[[@@NXM
)@@G@@/K@@0CNA@@@A)0I[F@^[@K^G^G^G^G@@@@@@R@K@CH9\)@CFR]0@]N@E7@]M/K@@0ON@0@0NXN
)@@G@@8L@@\+G_0@@[8LK@\5NB@@@A)0R@:#[#[#[#[#@@@@)]K@C@)0W@F#@@@@@@/K@K]K@@F@@^XO
)@@G@@*4@K]KN[K@CLN[@@CKR@0@CJR@)@CINC@@@A)0X@F]?@@@@@)]M@K@)0Y@<#[#[#[#@@@@@@XP
)@@G@@A@)@CIA@K@CH9:)@CFAA0@]N@E7@@]MEANTR/K@@@@ND@@@A)0+[F#[#[#@K0^G[#@@@@@@@XQ
)@@G@@[@K@C]C@VK@][@@@C^C8FK@[[@@@C#C8FK@@^[K@CL^[@@CKA@0@CJNE@@@A)0:[F@^G[#@KXR
)@@G@@0K0K0@@@@@@@C[)@COH[@@COG[@@COC.@@@[G@)@COC/)__"G@@@CNC/@__"/K@@\PNF@@@AXS
)@@G@@)04[F#@^G^G^G^G^G^G@@@@@][)@CS[[@@CR[@)@CQ[@@@CPH]@@CNG]@@CNC"@@@[H.)@@[XT
)@@G@@T[)@CNNG@@@A)0.[F#[#@K0^G[#[#@@@@@@@G@@@CTG[@@CRG.@__:C[@@CWG/)__:C@)@CVXU
)@@G@@G/@__:C@@@CU[]@@CTNH@@@A)1A[N#@[#[#@K0K0K@/K@@1Q(@@@@9[@@@@9C@#@@NN[K@CQXV
)@@G@@N[@@CPR@0@@GR@)@@IR@K@@KG@)@CTNI@@@A)1K[MK0[#@^G^G^@@@8LK@1GO@0@CNO@)@CNXW
)@@G@@O/K@@[[[[@@N"H@@@9C[[@@N[@+@@N"G)@@9C@+@@NNJ@@@A)1U[F#[#[@K^[#[#[#[#@@@@XX
)@@G@@9,@@CZ9!)@CXR]0@]R@FI@]Q/K@@1)N@0@1Z8L@@1FO@0@CSO@)@CSNK@@@A)1<@3#[#[#[#XY
)@@G@@[#[#@@)]O@C@@@@@@@@@@@@@@@F@@A*4@K]ON[K@C>N[@@C=R@0@C<R@)@C+R@K@C-NL@@@AXZ
)@@G@@)1(@N#[]?@@@)]Q@K@)1:@V#[#[#@@@@@@@@9%@@CZ9()@CXAA0@]R@FI@@]MEANRC/K@@@@YA
)@@G@@/K@K]ONM@@@A)1,[F#[#[#[#[#@K0^G@@@@@[@@@CVC8FK@[[@@@CUC8FK@@^[K@C>^[@@C=YB
)@@G@@A@0@C<A@)@C+A@K@C-NN@@@A)17[MK0^G[#[@^[@@@[^@@]P[^@@MJC8FK@@/K@@0?[@K@COYC
)@@G@@C@VK@^[@K@CNC@VK@#[@@@CWC8FK@]NO@@@A)2[[N@^[@^[@^[@@@@[^@@][[^@@]#C8FK@ YD
)@@G@@[^@@]R[^@@]4C8FK@][^@@]3[^@@]QC8FK@[[^@@]2NP@@@A)2F[N@K0K[#@K[@@@@C8FK@DYE
)@@G@@[^@@]-C8FK@C[^@@])C8FK@B[@@@^@C8FK@A[^@@ O[@@@]=[^@@]YNQ@@@A)2P[N@^@K[@^YF
)@@G@@[@@@@@[^@@]$[^@@]EC8FK@H[^@@]>C8FK@G[^@@]=C8FK@F[^@@]<C8FK@E[^@@]+NR@@@AYG
)@@G@@)2Z[F#[@^[#[@^[@@@@@@@@@[^@@]G[^@@](C8FK@J[^@@]*[@@@]-[^@@]FC8FK@I[^@@ PYH
)@@G@@[@@@]ZNS@@@A)2*[F#@K0K^[@^G^@@@@@@@@[^@@]:[@@@]&C8FK@L[^@@]%[^@@ Q[^@@]HYI
)@@G@@[@@@]UC8FK@K[@@@]<NT@@@A)21[N@K[#[@^[#@K@@[^@@ LC8FK@O[@@@]W[^@@ KC8FK@NYJ
)@@G@@[^@@ J[@@@]TC8FK@M[^@@ R[^@@]INU@@@A)2;[N#@K^G[#@K0^G@[@@@#6C8FK@S[@@@]+YK
)@@G@@C8FK@R[@@@])C8FK@Q[@@@]V[^@@ MC8FK@P[@@@]XNV@@@A)3 [N@^[#@K0K[@K0@[@@@#0YL
)@@G@@[^@@AJC8FK@V[^@@AP[@@@]$C8FK@U[@@@#9[^@@ARC8FK@T[^@@AQNW@@@A)3J[MK^G[#[@YM
)@@G@@^[#@@@C8FK@Z[@@@^#[^@@AMC8FK@Y[^@@AL[@@@#2C8FK@X[@@@#1[^@@AKC8FK@WNX@@@AYN
)@@G@@)3T[F@K0K^[@K^[@K@@@@@@@[^@@NY[^@@N9[^@@JM[^@@F=[^@@Q*[^@@F [^@@SH[@@@]YYO
)@@G@@[^@@RHNY@@@A)3+[N@K^[@K^[@K[@@[^@@SIC8FK@)[^@@L$[^@@OY[^@@AN[^@@PW[^@@M:YP
)@@G@@[^@@N^[^@@R0[^@@S4NZ@@@A)3?[F@K^[#[@K^[@K@@@@@@@[^@@NZ[^@@F>[^@@N'[^@@E%YQ
)@@G@@[^@@FA[@@@]>[^@@Q([^@@S5[^@@RIOA@@@A)35[N@K^[@K^[@K^@@C8FK@-[^@@L*[^@@JNYR
)@@G@@[^@@D\[^@@R1[^@@OZ[^@@M?[^@@PX[^@@N [^@@AOOB@@@A)3_[N#[@K[@K^[@K^@[^@@MYYS
)@@G@@[^@@L.[^@@J:[^@@JB[^@@H.[^@@LWC8FK@+[^@@]K[^@@]![@@@]%OC@@@A)4D[N@K^[@K^YT
)@@G@@[@K[#@[@@@]?C8FK@<[^@@C*[^@@EC[^@@],[^@@G_[^@@]L[^@@A8[^@@FT[^@@KYOD@@@AYU
)@@G@@)4N[N@K[@K^[@K^[@@[^@@KV[^@@K-[^@@J*[^@@]0[^@@B[[^@@G/[^@@]NC8FK@=[^@@]\YV
)@@G@@[^@@]MOE@@@A)4X[N@K^[@K^[@^G@@C@VK@&[@@@](C8FK@>[^@@C![^@@E][^@@H'[^@@R<YW
)@@G@@[^@@S][^@@I@[^@@S$OF@@@A)4$[N#@K0^G[@K[#@@[@@@]*C8FK@%[^@@]J[^@@]?C8FK@(YX
)@@G@@[@K@#RC@VK@*[@@@]:C8FK@$[@K@#QOG@@@A)41@N@K@@@@@)[Y@8@@@@@@@G/@@@@KI@@@@YY
)@@G@@@@[@@@KG@@@@@@[@@[@@@@@[@@@@@@/K@@@@[^@@ NOH@@@A)[>[S@@@@@@@PART 2PART 1YZ
)@@G@@_____"@@@@@D@@@@@G@@@___SUBSET      @@@@[=B592-#KO@@@@OI@@@A@@@@@@?@@@@@ZA
)@@G@@)]M@K@)0Y@<#[#[#[#@@@@@@A@)@CIA@K@CH9:)@CFAA0@]N@E7@@]MEANTR/K@@@@ND@@@AZB
)@@G@@@@^@@A@@E@@G@@+@@[@@&@@^@@^@C&@C@@43@@@@@]@@@@@S@@@@@%@@@@[HS1HEDC      ZC
)@@G@@S2MDIN      S1VFWC      S1VFWT      S1DSP       S2PMAT      S2WCOR      ZD
)@@G@@S2CTRN      SQRT        NPRT$       NIO2$       NERR3$      S2BVSS      ZE
)@@G@@@@[@@@@@@@TVBLANK$      ^@@@C@@]@@@@S2ABLK      ]@@@C@@#@@@@S2FMTS      ZF
)@@G@@]@@@C@@^@@@@S2HEDS      ]@@@C@@ @@@@@@@@@@@@@@@@*[S@@@*SDFF*@A@@@@      ZG
)@@G@@SUBROUTINE S2CDIN(NV,MSET,    @D@@@@     -   NBLOK,IVARS,IROWN,IROWPT,ICZH
)@@G@@OLN,ICOLPT,IBDATA,@A@@@@     -   DF,VSUM,VSSQ,VMIN,VMAX,    @#@@@@     -ZI
)@@G@@   XPROD,   @^@@[@     -   DINP,DINP2,    @#[@@@     -   IERR)    @^@@@@ZJ
)@@G@@      DIMENSION MSET(1) @F@@@@      DIMENSION IVARS(1),IROWN(1),IROWPT(1ZK
)@@G@@),ICOLN(1),ICOLPT(1),   @#@@@@     -   IBDATA(1)@C@@@@      DIMENSION VSZL
)@@G@@UM(1),VSSQ(1),VMIN(1),VMAX(1) @^@@@@      DIMENSION XPROD(1)@A@@[@      ZM
)@@G@@DIMENSION DINP(1),DINP2(1)    @[[@@@C     @[@@@@C     @E@@@@C           ZN
)@@G@@  COMPLETE DATA INPUT SUBROUTINE FOR DSTAT2.    @[@@@@C     @F@@@@C     ZO
)@@G@@        DESCRIPTIVE STATISTICS ARE ACCUMULATED FOR THE NV   @C@@@@C     ZP
)@@G@@             VARIABLES SPECIFIED BY MSET. @F@@@@C             CROSS PRODZQ
)@@G@@UCTS ARE ACCUMULATED FOR THE NBLOK BLOCKS @D@@@@C                  SPECIZR
)@@G@@FIED BY IROWN ... IBDATA.     @[@@@@C     @[@@@@C     @^@@@@C           ZS
)@@G@@  INITIALIZE@[@@@@C     @^@@[@      TIMP=URTIMF(DUM)  @]@@@@      NOBS=0ZT
)@@G@@@#@@@@      DO 50 I=1,NV@#@@@@      VSUM(I)=0   @#@@@@      VSSQ(I)=0   ZU
)@@G@@@^@@@@      VMIN(I)=1.0E+38   @^@@@@ 50   VMAX(I)=-1.0E+38  @A@@@@      ZV
)@@G@@IF(NBLOK .EQ. 0) GO TO 100    @^@@@@      DO 80 K=1,NBLOK   @#@@@@      ZW
)@@G@@J=IBDATA(K) @ @@@@      IF(J .EQ. 0) GO TO 80   @#@@@@      NA=IROWN(K) ZX
)@@G@@@#@@@@      NB=ICOLN(K) @#@@@@      LEN=NA*NB   @A@@@@      IF(LEN .EQ. ZY
)@@G@@0) LEN=NA*(NA+1)/2@^@@@@      DO 70 I=1,LEN     @#@@@@      XPROD(J)=0  ZZ
)@@G@@@]@@@@ 70   J=J+1 @#@@@@ 80   CONTINUE    @[@@@@C     @A@@@@C           AA
)@@G@@  GET NEXT OBSERVATION  @[@@@@C     @ @@@@ 100  CALL S1INOB(DINP,IFLAG) AB
)@@G@@@ @@@@      IF(IFLAG+1)160,150,200  @]@@@@ 150  IERR=1@#@@@@      GO TO AC
)@@G@@350   @A@@@@ 160  IF(IFLAG .EQ. -2) GO TO 300   @#@@@@      GO TO 100   AD
)@@G@@@[@@@@C     @B@@@@C             PROCESS NEXT OBSERVATION    @[@@@@C     AE
)@@G@@@[@@@@C     @#@@@@ 200  NOBS=NOBS+1 @#@@@@      CALL S1VFWC @^@@@@      AF
)@@G@@DO 220 J=1,NV     @#@@@@      I=MSET(J)   @#@@@@      T=DINP(I)   @^@@@@AG
)@@G@@      VSUM(J)=VSUM(J)+T @ @@@@      VSSQ(J)=VSSQ(J)+T*T     @A@@@@      AH
)@@G@@IF(T .LT. VMIN(J)) VMIN(J)=T  @A@@@@      IF(T .GT. VMAX(J)) VMAX(J)=T  AI
)@@G@@@#@@@@ 220  CONTINUE    @[@@@@C     @A@@@@      IF(NBLOK .EQ. 0) GO TO 2AJ
)@@G@@75    @^@@@@      DO 260 K=1,NBLOK  @#@@@@      J=IBDATA(K) @ @@@@      AK
)@@G@@IF(J .EQ. 0) GO TO 260  @#@@@@      NA=IROWN(K) @#@@@@      LA=IROWPT(K)AL
)@@G@@@#@@@@      NB=ICOLN(K) @]@@@@      LB=LA @ @@@@      IF(NB .EQ. 0) GO TAM
)@@G@@O 240 @#@@@@      LB=ICOLPT(K)@]@@@@      JB=J  @^@@[@      DO 222 JI=1,AN
)@@G@@NB    @#@@[@      JJ=IVARS(LB)@#@@[@      LB=LB+1     @^@@[@ 222  DINP2(AO
)@@G@@JI)=DINP(JJ)@^@@@@      DO 230 I=1,NA     @#@@@@      II=IVARS(LA)@#@@@@AP
)@@G@@      T=DINP(II)  @#@@@@      LA=LA+1     @][@@@      J=JB  @^@@@@      AQ
)@@G@@DO 225 JI=1,NB    @A@@[@      XPROD(J)=XPROD(J)+T*DINP2(JI) @]#@@@ 225  AR
)@@G@@J=J+NA@#@@@@      JB=JB+1     @#@@@@ 230  CONTINUE    @#@@@@      GO TO AS
)@@G@@260   @[@@@@C     @^@@[@ 240  DO 242 I=1,NA     @#[@@@      II=IVARS(LA)AT
)@@G@@@#[@@@      LA=LA+1     @^@@[@ 242  DINP2(I)=DINP(II) @^@@[@      DO 250AU
)@@G@@ I=1,NA     @#@@[@      T=DINP2(I)  @^[@@@      DO 245 JI=1,I     @A@@[@AV
)@@G@@      XPROD(J)=XPROD(J)+T*DINP2(JI) @]#@@@ 245  J=J+1 @#@@@@ 250  CONTINAW
)@@G@@UE    @[@@@@C     @#@@@@ 260  CONTINUE    @A@@@@ 275  CALL S1VFWT(6HCDINAX
)@@G@@ 1,$150)    @ @@@@ 280  IF(IFLAG-1)100,300,100  @[@@@@C     @A@@@@C     AY
)@@G@@        ALL DONE - CLEAN UP   @[@@@@C     @]@@@@ 300  IERR=0@#@@@@ 350  AZ
)@@G@@DF=NOBS     @A@@[@      TIMP=(URTIMF(DUM)-TIMP)/1000. @^@@[@      PRINT BA
)@@G@@380,TIMP    @F@@[@ 380  FORMAT('0DATA INPUT AND ACCUMULATION TIME',F8.1,BB
)@@G@@' SECONDS') @ @@@@      IF(NOBS .GE. 2) RETURN  @]@@@@      IERR=1@#@@@@BC
)@@G@@      PRINT 9350  @G@@@@ 9350 FORMAT('0***** CALCULATIONS OMITTED BECAUSBD
)@@G@@E LESS THAN TWO OBSERVAT@^@@@@     -IONS WERE FOUND') @]@@@@      RETURNBE
)@@G@@@]@@@@      END   ___S=0@#@@@@      DO 50 I=1,NV@#@@@@      VSUM(I)=0   BF
)@@G@@)@@[M@@^GCS@@@@@@@[@)@@_[@@@@"G.)__"C9:K@JG.@__"C9FK@IG/)__"C8:K@#G@FK@@BG
)@@G@@C/@__"AA@@@A)@E[F#]A^CCSK0--#]A^G@@@Q@K@@7R@K@@: @@@@][@@@@@@[B@@0@@@@@[BH
)@@G@@/,0@@@[[)@[[[[@@[@AB@@@A)@N[F#]A^GCSK0--#@@@@@@@ @#)@@ @^)@@N[@@@"Q[@@@5BI
)@@G@@R[@@@:Q@0@@4R@0@@:Q@)@@6R@)@@:AC@@@A)@W[N#@C@)@--#@@@@R@)@@9R@K@@'G@)@@@BJ
)@@G@@C/)__"/K@@[B(@@@@@8L@@@U]@[)@@[@])@@C@@@@?AD@@@A)@&[N#@CSK0)]A[#@@[[@@@BBK
)@@G@@C[[@@@[@)@@AC@+@@@/K@@[#(@@@@ [@@@@ C@#@@@[@)@[^R@0@@8AE@@@A)@0[F#]A^GC@BL
)@@G@@--#@-)@@@@@@[@@@@C;K@@@[T@@@@AG@@@@AC/@@@[/K@@@9*@@@@C[@)@@CT@)@@BAF@@@ABM
)@@G@@)@9[MK0CSK0]A^GC@@8LK@@/[@@@@ G@@@@ C/@@@[ @^@@@O[@@[@R[@@@ [@@@[ G@@@@CBN
)@@G@@C/@__"AG@@@A)[#[M[@K+CSK0CS@@@G@@@@DC/@@@[@[&@@0@@@@@D@@@@@@/,0@@@8L@@@*BO
)@@G@@O/0@@[O/)@@[O/K@@[AH@@@A)[H[N@K^@^@K0C@@@@/K@@^E(@@@@GH@@@@DC/@__./K@@^FBP
)@@G@@[@@@@@C/@@@[/K@@[S/G@@[N/@@@[KAI@@@A)[R[F@^GCSK=--#]A^G@@@@@R@)@@4R@K@@6BQ
)@@G@@R[@@@7@[0@@0/,0@@@[@@@@]G@@@@]C/@@@[/K@@[BAJ@@@A)[)[F#]A^G]A^GCS^G@@@@@@BR
)@@G@@[@)@@EC@&@@@O[)@[[R[)@@#[@@@@#C@ @@@N[@@@"R[K@@3R@0@@5AK@@@A)[([M^GCS[#@BS
)@@G@@@@@@@@1@@@@G*@@@@G"^[@@@C@@@@E[[]@@@"[]@@@"D@@@EC[@@@E[@<@@@"@<@@@AL@@@ABT
)@@G@@)[3[N@K0]A@K^G@@@@[@^@@@C@@@@E/K@@[.1@@@@G*@@@@G"^@@@EC@^@@@[@[@@@C@@@@EBU
)@@G@@/K@@[6AM@@@A)[.[U@^@K@K0R[)@@'G@@@@@C/@__"/K@@^#(@@@@@8L@@[<O.K@@[O/0@@[BV
)@@G@@O/)@@[O/K@@[O.@@@[AN@@@A)]C[F#]A^GCS[#]A^@@@@@@@/K@@#.(@@@@ [@@@@ C@^@@@BW
)@@G@@[@@@[^R[@@@8R@0@@9R@)@@;R@K@@/AO@@@A)]L[MK0]A[#]A^GC@@/K@@#M(@@@@B[[@@@GBX
)@@G@@[[)@@BC[&@@@[[@@@FC[[@@@G/)__"[@)@@AC@<@@@AP@@@A)]V[EK0CSK0-)K0-)@@@@@@@BY
)@@G@@[[)@[#[@)@[][[)@[ Q[K@@.R[K@@:[@@@@HG.)__"[]@@@GC]]@@@AQ@@@A)]=[F#]A[#@-BZ
)@@G@@-#]A^G@@@@@@O[0@[[R[0@@J[@)@@GG@)@@GC/)@@[[@@@@JC@B@@@O[0@@_R[0@@GAR@@@ACA
)@@G@@)]![E^[#]A^GCSK0@@@@@@@@C@ @@@R[K@[^A[0@[^O[0@@_R[0@@FN[K@[]8LK@]=[[ )@@CB
)@@G@@C[B@@@AS@@@A)]6[F#]A^G]A[#]A^G@@@@@@C[)@@H[[@@@FG[@@@FC.@@@[[@)@@EC@$@@@CC
)@@G@@O[0@[[R[0@@K[@@@@KAT@@@A)]_[F#]A^GCSK0-)K0@@@@@@"@B@@@"C@@@EC@ )@@O[0@[@CD
)@@G@@R[0@@ N[)@[#Q[K@@.R[K@@:[[)@@ AU@@@A)#C[EK0--#]@CSK0)@@@@@@@8LK@]1[[@@@HCE
)@@G@@G[@@@HC.@@@[8L)@##[@)@@ G@)@@ C@)@@A[@B@@@AV@@@A)#L[F@^GCSK0CSK0-)@@@@@@CF
)@@G@@O[K@@_R[K@@F[@@@[ [@@@[ Q[0@@.R[0@@:G@@@@AC/@__"/K@@#.AW@@@A)#U[MK0CSK0-CG
)@@G@@-#@C@@8LK@#S[[B)@@C[ @@@O[K@[[R[K@@K[@)@@FG@)@@FC/)@@[[@@@@KC@ @@@AX@@@ACH
)@@G@@)#=[EK0--#@--#@-)@@@@@@@[@@@@EC@ @@@[@@@[AG@@@@#C/@__"[#)@@#N[K@[ R[K@@.CI
)@@G@@C_)@@[AY@@@A)#![N#]A^GCSK0CS@@C/)@@[[@C@@@"@C@@@"C@@@EC@B)@@O]@@[@R]@@@ CJ
)@@G@@N[)@[AQ[0@@.R[0@@:AZ@@@A)#7[N#]A^@^@@@@@@@O/0@@[O/)@@[O/K@@[O.)@@[8LK@#$CK
)@@G@@G_)@@[O.K@@[8L)@#0[@)@@ G@)@@ BA@@@A)^[@MK@@@@@@)@L@K@)^#@<]UA^[#@@];@@0CL
)@@G@@/K@@[K@@@@@L/,0@@@______CDIN 18L@@]HO.@@@[BB@@@A)^B[MK0)@-)K)--#@@@#[@@0CM
)@@G@@@@@@@[/,0@@@[@K@@@"O@@@]C/@@]V @@@@@/^@@[BH@@@@DC/@@@[BC@@@A)^L@;#]A^GCOCN
)@@G@@K0--#@)@N@K@DATA I(033H0@@)@@@@#]@@0@@[@@N/,0@@@[@@@@@"C@@@!"^@@@@BD@@@ACO
)@@G@@)@P[@@@@@@@@)^S@F]*@@@@@'^@@@@DS)    SECON1,008HME,F8.ION TIUMULATND ACCCP
)@@G@@NPUT ABE@@@A)^T[N#@)]@)C]A@@@@[@@@@@C/@@@[@#B@@0/K@@^%N@0@^)/K@@^-*@@@@GCQ
)@@G@@/C@@^YG/@__.C@@@@]BF@@@A)^<@V]+A^G@@)@X@0@@@@@@@ED BEC OMITTATIONSCALCULCR
)@@G@@***** (073H0@#D@@0@@[@@X/,0@@@BG@@@A)@<[@@@@@@@@)^&@F]*@@@@@'^@@@@)     CS
)@@G@@ FOUNDS WEREVATION OBSERAN TWOESS THAUSE LBH@@@A)^$[F@K^GCSK0--#]A^G@@@@CT
)@@G@@R@)@[IR@K@[H9\)@[F9,@@[D9!)@[BR]0@@1@#G@@0/K@@^%N@0@^(BI@@@A)^0[F#]A^GCSCU
)@@G@@K0--#]A^G@@@N[)@[RN[K@[QN[@@[PR]@@[OR[0@[NR[)@[MR[K@[LR[@@[KR@0@[JBJ@@@ACV
)@@G@@)^9@F#@@@@@@)@,@C@)^'@N#] )@@@)@0@K@@@@@@@@#G@@]S2CDIN/K@@@@/K@K@,@@F@@NCW
)@@G@@*4@K@,BK@@@A)^/[F#]A^GCSK0--#]A^G@@@A[K@[LA[@@[KA@0@[JA@)@[IA@K@[H9:)@[FCX
)@@G@@9%@@[D9()@[BAA0@@1BL@@@A)  [F#]A^GCSK0-)K0@@@@@@C8FK@][@@@@3C8FK@[^[)@[RCY
)@@G@@^[K@[Q^[@@[PA]@@[OA[0@[NA[)@[MBM@@@A) I[N@K^[@^G]A[#@@[@@@@'C8FK@A[@@@@/CZ
)@@G@@C8FK@ [@@@@9C8FK@^[^@@]A[^@@@)[^@@@<[^@@]#BN@@@A) S[MK0CS^@K0CS@@@[@@@@4DA
)@@G@@C8FK@F[@@@@5C8FK@E[^@@^HC8FK@D[@@@@8C8FK@C[@@@@;C8FK@BBO@@@A) +[MK0CS^@KDB
)@@G@@0C@@@@[^@@^+C8FK@L[@@@@.C8FK@K[^@@[CC8FK@J[@@@@7C8FK@H[@@@@6C8FK@GBP@@@ADC
)@@G@@) ?@V@K^@@@@)@:@S@@@@@@@@@@@@@@@@@@@@@@@@@I/ADH5Z/?;NF@@[@@@/K@@@@[^@@[LDD
)@@G@@[^@@^EBQ@@@A@@@@@@GCS[#@@@@@@@1@@@@G*@@@@G"^[@@@C@@@@E[[]@@@"[]@@@"D@@@EDE
)@@G@@C[@@@E[@<@@@"@<@@@AL@@@A@@^@@]@@A@@B@@O@@[@@S@@@@@#@[S@C@@ \URTIMF      DF
)@@G@@S1INOB      S1VFWC      S1VFWT      NPRT$       NIO2$       NERR3$      DG
)@@G@@S2CDIN      @@[@@@@@@@^/@@@@@@@@@@@@@@@@@@@@@@@@*[S@@@*SDFF*@A@@[@      DH
)@@G@@SUBROUTINE S2COMP(DINP,DINP2, @^[@@@     -   OUTS,SETID,    @^@@@@     -DI
)@@G@@   MSET,MSETPT,   @C@@@@     -   IVARS,ROWN,ROWPT,COLN,COLPT,BDATA,     DJ
)@@G@@@ @@@@     -   VSUM,VSSQ,VMIN,VMAX, @^@@@@     -   XBAR,SDV,VAR,  @#@@@@DK
)@@G@@     -   DELTA,   @ @@@@     -   TSUM,TSSQ,TMIN,TMAX, @^@@@@     -   TBADL
)@@G@@R,TSDV,TVAR,@#@@@@     -   TDELTA,  @^@@@@     -   TNAM,TNUMB,    @^@@@@DM
)@@G@@     -   XPROD,XSA,     @#@@@@     -   NAMES)   @ @@@@      IMPLICIT INTDN
)@@G@@EGER (A-Z)  @A@@[@      DIMENSION DINP(1),DINP2(1)    @A[@@@      DIMENSDO
)@@G@@ION OUTS(20,1),SETID(1) @A@@@@      DIMENSION MSET(1),MSETPT(1)   @G@@@@DP
)@@G@@      DIMENSION IVARS(1),ROWN(1),ROWPT(1),COLN(1),COLPT(1),BDATA(1)     DQ
)@@G@@@B@@@@      REAL VSUM(1),VSSQ(1),VMIN(1),VMAX(1)@A@@@@      REAL XBAR(1)DR
)@@G@@,SDV(1),VAR(1)    @^@@@@      REAL DELTA(1)     @B@@@@      REAL TSUM(1)DS
)@@G@@,TSSQ(1),TMIN(1),TMAX(1)@A@@@@      REAL TBAR(1),TSDV(1),TVAR(1)  @^@@@@DT
)@@G@@      REAL TDELTA(1)    @A@@@@      DIMENSION TNAM(2,1),TNUMB(1)  @ @@@@DU
)@@G@@      REAL XPROD(1),XSA(1)    @ @@@@      DIMENSION NAMES(2,1)    @#@@@@DV
)@@G@@      REAL BLANK  @ @@@@      DATA BLANK/'      '/    @[@@@@C     @[@@@@DW
)@@G@@C     @C@@@@C        DSTAT2 SUBROUTINE FOR COMPLETE DATA.   @[@@@@C     DX
)@@G@@@[@@@@C     @G@@@@      COMMON /S2ABLK/ NV,NVIN,MDATA,REPM,CODES,COPIN,MDY
)@@G@@LE,NSET,PLAN,     @A@@@@     -   LSUBHD,MLEHED(7),MDDHED(7) @F@@@@      DZ
)@@G@@COMMON /S2FMTS/ NAMFMT(6),NUMFMT(6),DATFMT(6),MAMFMT(6),    @B@@@@     -EA
)@@G@@   MUMFMT(6),EATFMT(6),BATFMT(6)    @G@@@@      COMMON /S2HEDS/PRDHED(7)EB
)@@G@@,COVHED(7),CORHED(7),SUMHED(7),CNTHED(7), @G@@@@     -   BARHED(7),SDVHEEC
)@@G@@D(7),ZTNHED(7),ZSGHED(7),TTNHED(7),TSGHED(7)    @[@@@@C     @^@@@@      ED
)@@G@@COMMON BLCOM(2)   @[@@@@C     @ @@@@      REAL DF,DFF,TEMP,SEMP   @#@@@@EE
)@@G@@      REAL DFBETA @^@@[@      REAL TIMP,URTIMF  @[@@@@C     @[@@@@C     EF
)@@G@@@^@@@@C             INITIALIZE@[@@@@C     @]@@@@      IERR=0@^@@@@      EG
)@@G@@NY=NAMES(1,1)     @^@@@@      CALL S1HEDC(0)    @[@@@@C     @B@@@@C     EH
)@@G@@        CARRY-OVER PACKAGE INPUT    @[@@@@C     @A@@@@      IF(COPIN .EQEI
)@@G@@. 0) GO TO 90     @^@@[@      TIMP=URTIMF(DUM)  @E@@@@      CALL S1RCOP(EJ
)@@G@@VSUM,VMIN,VMAX,XPROD,DF,NV,6HSINGLE,IERR) @]@@@@      K=0   @#@@@@      EK
)@@G@@DO 70 J=1,NV@]@@@@      K=K+J @^@@@@ 70   VSSQ(J)=XPROD(K)  @A@@[@      EL
)@@G@@TIMP=(URTIMF(DUM)-TIMP)/1000. @^@@[@      PRINT 80,TIMP     @C@@[@ 80   EM
)@@G@@FORMAT('0DATA INPUT TIME',F6.1,' SECONDS')@#@@@@      GO TO 250   @[@@@@EN
)@@G@@C     @A@@@@ 90   IF(PLAN .EQ. 2) GO TO 200     @[@@@@C     @G@@@@C     EO
)@@G@@        PLAN=0 OR 1  -  COMPUTE PRODUCTS FOR VARIABLES IN MSET    @[@@@@EP
)@@G@@C     @G@@@@ 100  CALL S2CDIN(NVIN,MSET,PLAN,MSET,NVIN,1,0,0,1,DF,VSUM,VEQ
)@@G@@SSQ,VMIN,   @A@@[@     -   VMAX,XPROD,DINP,DINP2,IERR)@#[@@@      GO TO ER
)@@G@@250   @[@@@@C     @D@@@@C             PLAN = 2  -  COMPUTE PRODUCTS BY BES
)@@G@@LOCKS @[@@@@C     @G@@@@ 200  CALL S2CDIN(NVIN,MSET,NSET,IVARS,ROWN,ROWPET
)@@G@@T,COLN,COLPT,BDATA,     @D@@[@     -   DF,VSUM,VSSQ,VMIN,VMAX,XPROD,DINPEU
)@@G@@,DINP2,IERR)@ [@@@ 250  *[@@@@*SDFF*@[@@@@ .    @ @@@@ .             ** EV
)@@G@@DEBUG **    @[@@@@ .    @E@@@@ .    THIS PROGRAM IS USED TO ASSIST IN THEW
)@@G@@E DEBUGGING       @E@@@@ .        OF PROGRAMS SMALL ENOUGH TO BE RUN FROEX
)@@G@@M DEMAND    @^@@@@ .        TERMINALS.    @[@@@@ .    @C@@@@ .        ITEY
)@@G@@ CONTAINS  1 ENTRY POINT FOR USERS, @E@@@@ .                AN ENTRY POIEZ
)@@G@@NT FOR PROGRAM REGISTRATION   @[@@@@ .    @C@@@@ .        ALL SUBSEQUENTFA
)@@G@@ CALLS TO DEBUG ARE MADE@E@@@@ .             AUTOMATICALLY DURING PROGRAFB
)@@G@@M CONTINGENCIES   @[@@@@ .    @^@@@@ .    USER INTERFACE:   @G@@@@ .    FC
)@@G@@              THE 1ST INSTRUCTION  OF THE MAIN SEGMENT OF THE     @C@@@@FD
)@@G@@ .                       USERS PROGRAM MUST BE :@G@@@@ .                FE
)@@G@@            SLJ  DEBUG$ - FOR ASSEMBLY LANGUAGE       @ @@@@ .          FF
)@@G@@             OR   @F@@@@ .                            CALL DEBUGS - FOR FG
)@@G@@COBOL OR FORTRAN  @[@@@@ .    @C@@@@ .        IN ADDITION, THE RELOCATABFH
)@@G@@LE ELEMENT '@F@@@@ .                                 9153SYSANLISAGOODIEFI
)@@G@@S.DEBUG     @E@@@@ .                                 MUST BE MAPPED IN TFJ
)@@G@@HE    @F@@@@ .                                      USERS PROGRAM COLLECFK
)@@G@@TION  @F@@@@ .        WHEN THE DEBUG MODULE IS ENTERED(EITHER MANUALLY OFL
)@@G@@R     @E@@@@ .             AUTOMATICALLY) THE DEBUG SYSTEM RESPONDS WITHFM
)@@G@@@ @@@@ .            'DEBUG READY'   @[@@@@ .    @G@@@@ .        INFORMATFN
)@@G@@ION ON SYSTEM USE MAY BE OBTAINED AFTER ANY READY     @B@@@@ .          FO
)@@G@@   BY THE  COMMAND 'HELP'.    @[@@@@ .    @G@@@@ .        FOR FURTHER DEFP
)@@G@@TAILS ON SYSTEM USE SEE MEMO CONCERNING SAME    @[@@@@ .    @E@@@@ .    FQ
)@@G@@                        DESIGNED AND IMPLEMENTED BY   @[@@@@ .    @C@@@@FR
)@@G@@ .                                 EARL E JONES @C@@@@ .                FS
)@@G@@                 DEPT 9153    @C@@@@ .                                 1FT
)@@G@@0/11/73     @[@@@@ .    @ @@@@ .             ** DEBUG **    @[@@@@ .    FU
)@@G@@@#@@@@         AXR$.    @^@@@@ED        FORM 6,6,6,18 @^@@@@PF       FORFV
)@@G@@M  12,6,18  @[@@@@ .    @#@@@@$(4)     LIT.     @]@@@@$(1).       @C@@@@FW
)@@G@@DEBUG$*.                          . $H DEBUG$   @A@@@@         +     0  FX
)@@G@@          .       @C@@@@         SLJ   SAVREG         . $W SAVE REGS    FY
)@@G@@@D@@@@         L,H2  A0,DEBUG$      . $P GET RETURN ADDR    @D@@@@      FZ
)@@G@@   S     A0,CONRTN      . $P SAVE FOR RETURN    @C@@@@         J     DBPGA
)@@G@@ROC         . $J DBPROC       @D@@@@DEBUGS*  SLJ   SAVREG         . $W SGB
)@@G@@AVE USER REGS     @E@@@@         A,T1  X11,0,X11      . $P SET UP RETURNGC
)@@G@@ ADDR       @D@@@@         S,H2  X11,CONRTN     . $P SAVE FOR RETURN    GD
)@@G@@@[@@@@ .    @C@@@@DBPROC.                       . $H DBPROC       @A@@@@GE
)@@G@@         L     A0,CONPKT      .     @E@@@@         ER    IALL$          GF
)@@G@@. $W REGISTER CONTINGENCY     @D@@@@         P$RINT (PF 1,3,RDYM1) . $W GG
)@@G@@PRINT READY MSG   @C@@@@         J     DBENTR         . $J DBENTR       GH
)@@G@@@C@@@@CONRTN*.                      . $H CONRTN       @A@@@@         +  GI
)@@G@@   0D             .     @E@@@@         ER    CEND$          . $W RELEASEGJ
)@@G@@ CONTINGENCY MODE @D@@@@         SLJ   SAVREG         . $W SAVE USERS REGK
)@@G@@GS    @A@@@@         E$DIT EDPKT          .     @C@@@@         L,S3  A0,GL
)@@G@@CONRTN      . $P GET CONT TYPE@E@@@@         L,H2  A0,CONTBL,A0   . $P PGM
)@@G@@ICK UP LITERAR ADDR     @E@@@@         LMJ   X11,EMSG$      . $W PUT LITGN
)@@G@@ERAL IN MSG       @A@@@@         E$SKIP 1             .     @C@@@@      GO
)@@G@@   E$COPY 26,RDYCN1     . $W FORM   MSG   @C@@@@         L,H2  A0,CONRTNGP
)@@G@@      . $P GET CONT ADDR@A@@@@         L,U   A1,12          .     @D@@@@GQ
)@@G@@         LMJ   X11,EOCTF$     . $W SET ADDR IN MSG    @A@@@@         E$DGR
)@@G@@ITX               .     @D@@@@         P$RINT (PF 1,14,LINE) . $W PRINT GS
)@@G@@CONT MSG    @D@@@@         P$RINT (PF 1,2,RDYM2) . $W PRINT READY MSG   GT
)@@G@@@[@@@@ .    @C@@@@DBENTR.                       . $H  DBENTR      @A@@@@GU
)@@G@@         E$DIT  EDPKT         .     @A@@@@         E$DITX               GV
)@@G@@.     @D@@@@         R$EAD (EXIT,LINE)    . $W READ A COMMAND     @D@@@@GW
)@@G@@         LMJ   X11,DBPRSE     . $W PARSE THE COMMAND  @A@@@@         +  GX
)@@G@@   1,LINE         .     @A@@@@         +     1,COMANS       .     @C@@@@GY
)@@G@@         L     A0,COMANS      . $P GET COMMAND  @F@@@@         L     R1,GZ
)@@G@@CMDLGT      . $W SET TO FIND COMMAND PROCESSOR  @A@@@@         L     X1,HA
)@@G@@(2,CMDLST)  .     @E@@@@         SE    A0,1,*X1        . $W LOOK UP THE HB
)@@G@@COMMAND     @D@@@@         J     DOWHAT         . $P IF NOT FOUND EXIT  HC
)@@G@@@ @@@@         L     A0,X1      .   @ @@@@         LSSL  A0,18       .  HD
)@@G@@@^@@@@         SSL   A0,18    @D@@@@         AN,U   A0,2       . $P BACKHE
)@@G@@ UP TO ADDRESS    @D@@@@         L      A0,0,A0    . $P GET ROUTINE ADDRHF
)@@G@@ESS   @B@@@@         J     0,A0          . $E EXIT    @[@@@@ .    @C@@@@HG
)@@G@@ .    THIS ROUTINE PROCESSES THE HELP COMMAND   @[@@@@ .    @C@@@@DOHELPHH
)@@G@@.                       . $H DO HELP      @A@@@@         L,U   X1,HMSG1 HI
)@@G@@      .     @A@@@@         L,U   R1,45          .     @A@@@@DHL      L  HJ
)@@G@@   A0,(PF 2,10,0) .     @A@@@@         A     A0,X1          .     @D@@@@HK
)@@G@@         ER    PRINT$         . $W PRINT DIRECTIONS   @A@@@@         A,UHL
)@@G@@   X1,10         .      @A@@@@         JGD   R1,DHL         .     @D@@@@HM
)@@G@@         SLJ   PREADY         . $W PRINT READY MSG    @C@@@@         J  HN
)@@G@@   DBENTR         . $J DBENTR       @[@@@@ .    @C@@@@ .    THIS ROUTINEHO
)@@G@@ PROCESSES THE PRINTA COMMAND @[@@@@ .    @C@@@@DOPRINTA.               HP
)@@G@@      . $H DOPRINTA     @E@@@@         L     X5,(2,COMANS+2) . $P POINT HQ
)@@G@@TO ADDR LIST      @A@@@@DOPA1.                        .     @C@@@@      HR
)@@G@@   L     A3,0,*X5       . $P GET 1ST ADDR @D@@@@         SLJ   XCON8    HS
)@@G@@      . $W CONVERT TO BINARY  @D@@@@         JZ    A4,DOPAEX      . $P EHT
)@@G@@XIT IF NO ADDR    @C@@@@         S     A4,ADDR1       . $P SAVE ADDR    HU
)@@G@@@C@@@@         L     A3,0,*X5       . $P GET 2ND ADDR @D@@@@         SLJHV
)@@G@@   XCON8          . $W CONVERT TO BINARY  @D@@@@         JZ    A4,DOPAEXHW
)@@G@@      . $P EXIT IF NO ADDR    @C@@@@         S     A4,ADDR2       . $P SHX
)@@G@@AVE ADDR    @E@@@@         SLJ   PRTNUM         . $W GO PRINT THIS GROUPHY
)@@G@@      @B@@@@         J     DOPA1          . $J DOPA1  @C@@@@DOPAEX   SLJHZ
)@@G@@   PREADY         . $H DOPAEX       @C@@@@         J     DBENTR         IA
)@@G@@. $J DBENTR       @[@@@@.     @A@@@@. THIS PROCESSES THE TRAP COMMAND   IB
)@@G@@@[@@@@.     @]@@@@DOTRAP.     @C@@@@          L         A3,COMANS+2     IC
)@@G@@  .ADDRESS  @E@@@@          SLJ       XCON8             . CONVERT FD TO ID
)@@G@@BINARY@C@@@@          L         A0,A4             . ADDRESS @D@@@@      IE
)@@G@@    LXI,U     A0,017700           . CONTROL     @B@@@@          ER      IF
)@@G@@  SETBP$            .   @B@@@@          SLJ       PREADY            .   IG
)@@G@@@B@@@@          J         DBENTR            .   @[@@@@.     @C@@@@. THISIH
)@@G@@ ROUTINE PROCESSES THE SNOOPY COMMAND     @[@@@@.     @]@@@@DOSNOOPY.   II
)@@G@@@ @@@@          L,U       A0,1.     @A@@@@          S,S4      A0,SNFLG$ IJ
)@@G@@      @B@@@@          SLJ       SNOOPY            .   @ @@@@          + IK
)@@G@@        DOSNOOPY  @ @@@@          SLJ       PREADY    @ @@@@          J IL
)@@G@@        DBENTR    @[@@@@ .    @C@@@@ .    THIS ROUTINE PROCESSES THE PRIIM
)@@G@@NTN COMMAND @[@@@@ .    @C@@@@DOPRINTN.                     . $H DOPRINTIN
)@@G@@N     @E@@@@         L     X5,(2,COMANS+2)  . $P POINT TO ADDRESS       IO
)@@G@@@C@@@@DOPN1.                        . $H  DOPN1       @C@@@@         L  IP
)@@G@@   A3,0,*X5       . $P GET ADDR     @D@@@@         SLJ   XCON8          IQ
)@@G@@. $W CONVERT TO OCTAL   @C@@@@         JZ    A4,DOPNEX      . $P EXIT IFIR
)@@G@@ NONE @C@@@@         S     A4,ADDR1       . $P SAVE ADDR    @C@@@@      IS
)@@G@@   L     A3,0,*X5       . $P GET CNT      @E@@@@         SLJ   XCON10   IT
)@@G@@      . $P CONVERT TO DECIMAL       @C@@@@         JZ    A4,DOPNEX      IU
)@@G@@. $P EXIT IF NONE @E@@@@         A     A4,ADDR1       . $P FORM TERMINALIV
)@@G@@ ADDR       @B@@@@         S     A4,ADDR2       . $P SAVE   @C@@@@      IW
)@@G@@   SLJ   PRTNUM         . $W GO PRINT DATA@B@@@@         J     DOPN1    IX
)@@G@@      . $J DOPN1  @C@@@@DOPNEX   SLJ   PREADY         . $H DOPNEX       IY
)@@G@@@C@@@@         J     DBENTR         . $J DBENTR       @[@@@@ .    @[@@@@IZ
)@@G@@ .    @C@@@@ .    THIS ROUTINE PROCESSES THE DUMPA COMMAND  @[@@@@ .    JA
)@@G@@@C@@@@DODUMPA.                      . $H DODUMPA      @D@@@@         L  JB
)@@G@@   X5,(2,COMANS+2) . $P POINT TO ADDRS    @B@@@@DODA1.                  JC
)@@G@@      . $H DODA1  @C@@@@         L     A3,0,*X5       . $P GET ADDR1    JD
)@@G@@@D@@@@         SLJ   XCON8          . $W CONVERT TO OCTAL   @D@@@@      JE
)@@G@@   JZ    A4,DODAEX      . $P EXIT IF NO ADDR    @C@@@@         SA    A4,JF
)@@G@@ADDR1       . $P SAVE ADDR    @C@@@@         L     A3,0,*X5       . $P GJG
)@@G@@ET ADDR2    @D@@@@         SLJ   XCON8          . $W CONVERT TO OCTAL   JH
)@@G@@@D@@@@         TNZ    A4           . $P EXIT IF NO ADDR     @ @@@@      JI
)@@G@@    L         A4,ADDR1  @C@@@@         S     A4,ADDR2       . $P SAVE ADJJ
)@@G@@DR2   @D@@@@         SLJ   DMPNUM         . $W GO DUMP THE DATA   @B@@@@JK
)@@G@@         J     DODA1          . $J DODA1  @C@@@@DODAEX   SLJ   PREADY   JL
)@@G@@      . $H DODAEX       @C@@@@         J     DBENTR         . $J DBENTR JM
)@@G@@      @[@@@@ .    @C@@@@ .    THIS ROUTINE PROCESSES THE DUMPN COMMAND  JN
)@@G@@@[@@@@ .    @C@@@@DODUMPN.                      . $H DODUMPN      @D@@@@JO
)@@G@@         L     X5,(2,COMANS+2) . $P POINT TO ADDRS    @B@@@@DODN1.      JP
)@@G@@                  . $H DODN1  @C@@@@         L     A3,0,*X5       . $P GJQ
)@@G@@ET ADDR1    @D@@@@         SLJ   XCON8          . $W CONVERT TO OCTAL   JR
)@@G@@@D@@@@         JZ    A4,DODNEX      . $P EXIT IF NO ADDR    @C@@@@      JS
)@@G@@   S     A4,ADDR1       . $P SAVE ADDR    @C@@@@         L     A3,0,*X5 JT
)@@G@@      . $P GET COUNT    @E@@@@         SLJ   XCON10         . $W CONVERTJU
)@@G@@ TO DECIMAL       @D@@@@         TNZ    A4            . $P EXIT IF NO COJV
)@@G@@UNT   @^@@@@          A,U       A4,1@C@@@@         A     A4,ADDR1       JW
)@@G@@. $P COMPUTE ADDR2@A@@@@         AN,U  A4,1         .       @B@@@@      JX
)@@G@@   S     A4,ADDR2       . $P SAVE   @C@@@@         SLJ   DMPNUM         JY
)@@G@@. $W GO DUMP DATA @B@@@@         J     DODN1          . $J DODN1  @C@@@@JZ
)@@G@@DODNEX   SLJ   PREADY         . $H DODNEX       @C@@@@         J     DBEKA
)@@G@@NTR         . $J DBENTR       @[@@@@ .    @C@@@@ .    THIS ROUTINE PROCEKB
)@@G@@SSES THE BREAK COMMAND  @[@@@@ .    @C@@@@DOBREAK.                      KC
)@@G@@. $H DO BREAK     @D@@@@         L     X5,(2,COMANS+2) . $P POINT TO ADDKD
)@@G@@RS    @B@@@@DOBR1.                        . $H DOBR1  @C@@@@         L  KE
)@@G@@   A3,0,*X5       . $P GET ADDR     @E@@@@         SLJ   XCON8          KF
)@@G@@. $W GO CONVERT TO OCTAL      @D@@@@         JZ    A4,DOBREX      . $P EKG
)@@G@@XIT IF NO ADDR    @C@@@@         S     A4,ADDR1       . $P SAVE ADDR    KH
)@@G@@@D@@@@         SLJ   SETBRK         . $W GO SET BREAK PT    @B@@@@      KI
)@@G@@   J     DOBR1          . $J DOBR1  @C@@@@DOBREX   SLJ   PREADY         KJ
)@@G@@. $H DOBREX       @C@@@@         J     DBENTR         . $J DBENTR       KK
)@@G@@@[@@@@ .    @C@@@@ .    THIS ROUTINE PROCESSES THE CBREAK COMMAND @[@@@@KL
)@@G@@ .    @C@@@@DOCBREAK.                     . $H DOCBREAK     @E@@@@      KM
)@@G@@   L     X5,(2,COMANS+2)  . $P POINT TO ADDR LIST     @B@@@@DOCB1.      KN
)@@G@@                  . $H DOCB1  @C@@@@         L     A3,0,*X5       . $P GKO
)@@G@@ET ADDR1    @D@@@@         TNE   A3,('ALL   ')  . $T IS IT 'ALL   ' ?   KP
)@@G@@@E@@@@         J     DOCBA          . $A YES,DOCBA NO,DOCB2       @E@@@@KQ
)@@G@@DOCB2    SLJ   XCON8          . $W CONVERT ADDR TO OCTAL    @D@@@@      KR
)@@G@@   JZ    A4,DOCBEX      . $P EXIT IF NO ADDR    @C@@@@         S     A4,KS
)@@G@@ADDR1       . $P SAVE ADDR1   @C@@@@         SZ    ADDR2          . $P CKT
)@@G@@LEAR ADDR2  @E@@@@         SLJ   CLRBRK         . $W GO CLEAR A BREAKPT KU
)@@G@@      @B@@@@         J     DOCB1          . $J DOCB1  @E@@@@DOCBA    SZ KV
)@@G@@   ADDR1          . $P SET FLAG TO CLEAR ALL    @A@@@@         SZ    ADDKW
)@@G@@R2          .     @C@@@@         SLJ   CLRBRK         . $W GO CLEAR ALL KX
)@@G@@@E@@@@DOCBEX   SLJ   PREADY         . $W GO PRINT READY MSG       @C@@@@KY
)@@G@@         J     DBENTR         . $J DBENTR       @[@@@@ .    @[@@@@ .    KZ
)@@G@@@C@@@@ .    THIS ROUTINE PROCESSES THE CREGS COMMAND  @[@@@@ .    @C@@@@LA
)@@G@@DOCREGS.                      . $H DOCREGS      @E@@@@         L     X5,LB
)@@G@@(2,COMANS+2) . $P POINT TO REG NAMES      @B@@@@DOCR1.                  LC
)@@G@@      . $H DOCR1  @C@@@@         L     A6,0,X5       . $P GET REG VALUE LD
)@@G@@@A@@@@         SSL   A6,18        .       @C@@@@         TNE   A6,('@@@ALE
)@@G@@LL')  . $T PRINT ALL ?  @E@@@@         J     DOCRALL        . $A YES,DOCLF
)@@G@@RALL NO,DOCRTE    @C@@@@DOCRTE   TNE   A6,('@@@   ')  . $T END OF LIST ?LG
)@@G@@@E@@@@         J     DOCREX         . $A YES,DOCREX NO,DOCRTE1    @D@@@@LH
)@@G@@DOCRTE1  SLJ   FNDREG         . $W GO FIND REG VALUE  @D@@@@         J  LI
)@@G@@   DOCR100        . $P EXIT IF NOT FOUND  @D@@@@         E$DIT  EDPKT   LJ
)@@G@@      . $W CLEAR PRT BUFFER   @C@@@@         L     A0,A6          . $P GLK
)@@G@@ET REG NAME @C@@@@         LMJ   X11,EFD1$      . $W PUT IN LINE  @A@@@@LL
)@@G@@         E$SKIP 1             .     @A@@@@         L     A0,('VALUE:')  LM
)@@G@@. '   @A@@@@         LMJ   X11,EFD1$      .     @A@@@@         L,U   A1,LN
)@@G@@12          .     @C@@@@         L     A0,A7          . $P GET REG VALUELO
)@@G@@@C@@@@         LMJ   X11,EOCTF$     . $W PUT IN LINE  @#@@@@         E$DLP
)@@G@@ITX   @E@@@@         P$RINT (PF 1,4,LINE) . $W PRINT REGISTER VALUE     LQ
)@@G@@@E@@@@DOCR100  A,U   X5,2           . $P POINT TO NXT ENTRY       @B@@@@LR
)@@G@@         J     DOCR1          . $J DOCR1  @C@@@@DOCRALL.                LS
)@@G@@      . $H DOCRALL      @C@@@@         L     A6,0,*X5       . $P GET INDLT
)@@G@@ICATOR@G@@@@         TNE   A6,('ALLA  ')         . $T PRINT ALL A REGISTLU
)@@G@@ERS ?       @E@@@@         J     DOCRA          . $A YES,DOCRA NO,DOCRTXLV
)@@G@@      @G@@@@DOCRTX   TNE   A6,('ALLX  ')         . $T PRINT ALL X REGISTLW
)@@G@@ERS ?       @E@@@@         J     DOCRX          . $A YES,DOCRX NO,DOCRTRLX
)@@G@@      @G@@@@DOCRTR   TNE   A6,('ALLR  ')         . $T PRINT ALL R REGISTLY
)@@G@@ERS ?       @E@@@@         J     DOCRR          . $A YES,DOCRR NO,DOCRAXLZ
)@@G@@R     @C@@@@DOCRAXR.                      . $H DOCRAXR      @E@@@@      MA
)@@G@@   L     X6,(1,REGBUF)  . $P POINT TO REGS BUFFER     @E@@@@         L,UMB
)@@G@@   R3,41          . $P SET TO PRINT ALL REGS    @D@@@@         SLJ   DOPMC
)@@G@@RTR         . $W GO PRINT ALL REGS  @B@@@@         J     DOCR1          MD
)@@G@@. $J DOCR1  @B@@@@DOCRA.                        . $H DOCRA  @E@@@@      ME
)@@G@@   L     X6,(1,REGBUF)  . $P POINT TO A-REG BUFR      @E@@@@         L,UMF
)@@G@@   R3,15          . $P SET TO PRINT A-REGS      @D@@@@         SLJ   DOPMG
)@@G@@RTR         . $W GO PRINT A-REGS    @B@@@@         J     DOCR1          MH
)@@G@@. $J DOCR1  @[@@@@ .    @B@@@@DOCRX.                        . $H DOCRX  MI
)@@G@@@E@@@@         L     X6,(1,REGBUF+16) . $P POINT TO X-REG BUFR    @E@@@@MJ
)@@G@@         L,U   R3,10          . $P SET TO PRINT X-REGS      @D@@@@      MK
)@@G@@   SLJ   DOPRTR         . $W GO PRINT X-REGS    @B@@@@         J     DOCML
)@@G@@R1          . $J DOCR1  @[@@@@ .    @B@@@@DOCRR.                        MM
)@@G@@. $H DOCRR  @E@@@@         L     X6,(1,REGBUF+27)  . $P POINT TO R-REG BMN
)@@G@@UFR   @E@@@@         L,U   R3,14          . $P SET TO PRINT R-REGS      MO
)@@G@@@D@@@@         SLJ   DOPRTR         . $W GO PRINT R-REGS    @B@@@@      MP
)@@G@@   J     DOCR1          . $J DOCR1  @C@@@@DOCREX.                       MQ
)@@G@@. $H DOCREX       @D@@@@         SLJ   PREADY         . $W GO PRT READY MR
)@@G@@MSG   @C@@@@         J     DBENTR         . $J DBENTR       @[@@@@ .    MS
)@@G@@@C@@@@ .    THIS ROUTINE PROCESSES THE PATCH COMMAND  @[@@@@ .    @C@@@@MT
)@@G@@DOPATCH.                      . $H DOPATCH      @D@@@@         L     X5,MU
)@@G@@(2,COMANS+2) . $P POINT TO ADDRS    @C@@@@DOPAT1.                       MV
)@@G@@. $H DOPAT1       @C@@@@         L     A3,0,*X5       . $P GET ADDR     MW
)@@G@@@D@@@@         SLJ   XCON8          . $W CONVERT TO OCTAL   @D@@@@      MX
)@@G@@   JZ    A4,DOPATEX     . $P EXIT IF NO ADDR    @E@@@@         S     A4,MY
)@@G@@ADDR1       . $P SAVE FOR PATCH WORK      @E@@@@         L     A3,0,X5  MZ
)@@G@@      . $P GET 1ST WORD OF CONTENTS @E@@@@         L     A4,1,*X5       NA
)@@G@@. $P GET 2ND WORD OF CONTENTS @E@@@@         SLJ   CONCTS         . $W GNB
)@@G@@O CONVERT TO OCTAL      @B@@@@         S     A4,CONTENT     . $P SAVE   NC
)@@G@@@C@@@@         L     A0,ADDR1       . $P SET UP ADDR  @C@@@@         L  ND
)@@G@@   A1,CONTENT     . $P GET CONTENTS @E@@@@         S     A1,0,A0        NE
)@@G@@. $P SET CONTENTS IN ADDR     @B@@@@         J     DOPAT1         . $E ENF
)@@G@@XIT   @C@@@@DOPATEX.                      . $H DOPATEX      @D@@@@      NG
)@@G@@   SLJ   PREADY         . $W GO PRT READY MSG   @C@@@@         J     DBENH
)@@G@@NTR         . $J DBENTR       @[@@@@ .    @C@@@@ .     THIS ROUTINE PROCNI
)@@G@@ESSEC THE PATCHR COMMAND@[@@@@ .    @C@@@@DOPATCHR.                    .NJ
)@@G@@ $H DOPATCHR      @E@@@@         L     X5,(2,COMANS+2) . $P POINT TO OPENK
)@@G@@RANDS       @C@@@@DOPATR1.                      . $H DOPATR1      @C@@@@NL
)@@G@@         L     A6,0,*X5      9 $P GET REG NAME  @A@@@@         TNE   A6,NM
)@@G@@('      ')  .     @E@@@@         J     DOPATRX        . $P EXIT IF END ONN
)@@G@@F LIST      @ @@@@          SSL       A6,18     @D@@@@         SLJ   FNDNO
)@@G@@REG         . $W GO GET REG VALUE   @E@@@@         J     DOPATR2        NP
)@@G@@. $P EXIT IF BAD REG VALUE    @D@@@@         L     A3,0,X5        9 $P GNQ
)@@G@@ET NEW CONTENTS   @A@@@@         L     A4,1,*X5       9     @E@@@@      NR
)@@G@@   SLJ   CONCTS         . $W GO CONVERT TO BINARY     @D@@@@         S  NS
)@@G@@   A4,CONTENT     . $P SAVE NEW CONTENTS  @D@@@@         E$DIT EDPKT    NT
)@@G@@      . $W CLEAR PRT LINE     @C@@@@         L     A0,A6          . $P GNU
)@@G@@ET REG NAMR @E@@@@         LMJ   X11,EFD1$      . $W PUT REG NAME IN LINNV
)@@G@@E     @A@@@@         E$SKIP  2           .      @E@@@@         DL    A0,NW
)@@G@@('OLD/NEW     ')  . $P FORMAT THE LINE    @A@@@@         LMJ   X11,EFD2$NX
)@@G@@       .    @A@@@@         E$SKIP 1            .      @A@@@@         L  NY
)@@G@@   A0,('VALUES')   .    @A@@@@         LMJ   X11,EFD1$      .     @A@@@@NZ
)@@G@@         E$SKIP 1            .      @A@@@@         L     A0,('ARE:  ')  OA
)@@G@@.     @A@@@@         LMJ   X11,EFD1$      .     @A@@@@         E$SKIP 1 OB
)@@G@@           .      @E@@@@         L     A0,A7          . $P GET OLD REG COC
)@@G@@ONTENTS     @A@@@@         L,U   A1,12          .     @E@@@@         LMJOD
)@@G@@   X11,EOCTF$     . $W PUT OLD VALUE IN MSG     @C@@@@         E$CHAR '/OE
)@@G@@'           . $W FORMAT       @D@@@@         L     A0,CONTENT     . $P GOF
)@@G@@ET NEW CONTENTS   @F@@@@         S     A0,0,X6        9 $P SET REG CONTEOG
)@@G@@NTS TO NEW VALUE  @A@@@@         L,U   A1,12          9     @E@@@@      OH
)@@G@@   LMJ   X11,EOCTF$     . $W PUT NEW VALUE IN MSG     @A@@@@         E$DOI
)@@G@@ITX               .     @C@@@@         P$RINT (PF 1,8,LINE) . $W PRINT MOJ
)@@G@@ESSAGE@C@@@@DOPATR2.                      . $H DOPATR2      @E@@@@      OK
)@@G@@   A,U   X5,2           . $P POINT PAST INSERT VALUE  @C@@@@         J  OL
)@@G@@   DOPATR1        . $J DOPATR1      @]@@@@DOPATRX.    @E@@@@         SLJOM
)@@G@@   PREADY         . $W GO PRINT READY MSG       @C@@@@         J     DBEON
)@@G@@NTR         . $J DBENTR       @[@@@@ .    @C@@@@ .    THIS ROUTINE PROCEOO
)@@G@@SSES THE EXIT COMMAND   @[@@@@ .    @C@@@@DOEXIT.                       OP
)@@G@@. $H DOEXIT       @D@@@@         P$RINT (PF 1,3,EXTMSG) . $W PRINT EXIT OQ
)@@G@@MSG   @C@@@@         SLJ   RESREG         . $W RESTORE REGS @E@@@@      OR
)@@G@@    SZ,S4     SNFLG$            . TURN SNOOPY PRINT ON@C@@@@         J  OS
)@@G@@   *CONRTN             . $E EXIT    @[@@@@ .    @C@@@@ .    THIS ROUTINEOT
)@@G@@ PROCESSES THE GOTO COMMAND   @[@@@@ .    @C@@@@DOGOTO.                 OU
)@@G@@      . $H DOGOTO       @C@@@@         L,U   X5,COMANS+2    . $P POINT TOV
)@@G@@O ADDR@C@@@@         L     A3,0,X5        . $P GET ADDR     @D@@@@      OW
)@@G@@   SLJ   XCON8          . $W CONVERT TO OCTAL   @D@@@@         JZ    A4,OX
)@@G@@DOGOEX      . $P EXIT IF NO ADDR    @C@@@@         S     A4,ADDR1       OY
)@@G@@. $P SAVE ADDR    @C@@@@         SLJ   RESREG         . $W RESTORE REGS OZ
)@@G@@@B@@@@         J     *ADDR1         . $E EXIT   @C@@@@DOGOEX.           PA
)@@G@@            . $H DOGOEX       @D@@@@         SLJ   PREADY         . $W GPB
)@@G@@O PRINT READY     @C@@@@         J     DBENTR         . $J DBENTR       PC
)@@G@@@[@@@@ .    @C@@@@PREADY.                       . $H PREADY       @#@@@@PD
)@@G@@         +     0  @D@@@@         P$RINT (PF 1,2,RDYM2) . $W PRINT READY PE
)@@G@@MSG   @B@@@@         J     *PREADY        . $E EXIT   @B@@@@XCONALL.    PF
)@@G@@                  . $H XCON8  @A@@@@         +     0              .     PG
)@@G@@@A@@@@         L,U   R1,5           .     @A@@@@XCON0    SZ    A4       PH
)@@G@@      .     @A@@@@         DSL   A3,6           .     @A@@@@         SSLPI
)@@G@@   A4,30          .     @A@@@@         TE,U  A4,' '         .     @A@@@@PJ
)@@G@@         J     XCON2          .     @F@@@@         JGD   R1,XCON0       PK
)@@G@@. $W GET RID OF TRAILING BLANKS     @A@@@@XCON1    SZ    A4             PL
)@@G@@.     @E@@@@         J     *XCONALL         . $P EXIT IF NO DIGITS      PM
)@@G@@@A@@@@XCON2    L,U   A0,1           .     @A@@@@         SZ    A1       PN
)@@G@@      .     @A@@@@         LSSL  A4,30          .     @A@@@@         LDSPO
)@@G@@L  A3,6           .     @A@@@@XCON3    AND,U A3,017         .     @E@@@@PP
)@@G@@         MSI   A4,A0          . $W CONVERT NO TO NEW UNITS  @A@@@@      PQ
)@@G@@   A     A1,A4          .     @E@@@@         MSI   A0,XCON        . $P UPR
)@@G@@P-DATE SCALE FACTOR     @A@@@@         SSL   A3,6           .     @A@@@@PS
)@@G@@         SZ    A4             .     @A@@@@         JGD   R1,XCON3       PT
)@@G@@.     @A@@@@         L     A4,A1          .     @C@@@@         J     *XCPU
)@@G@@ONALL         . $E EXIT       @C@@@@PRNTIT.                       . $H PPV
)@@G@@RTNUM       @A@@@@         +     0              .     @A@@@@         L  PW
)@@G@@   A0,ADDR2       .     @F@@@@         AN    A0,ADDR1       . $P COMPUTEPX
)@@G@@ NO OF WORDS TO PRINT   @A@@@@         A,U   A0,1           .     @C@@@@PY
)@@G@@         L     A15,A0         . $P SAVE LENGTH  @A@@@@         SZ    A14PZ
)@@G@@            .     @E@@@@         DI,U  A14,10         . $P COMPUTE NO OFQA
)@@G@@ LINES      @A@@@@         L     X6,ADDR1       .     @C@@@@PRTN1    TNZQB
)@@G@@   A14            . $T A FULL LINE ?@E@@@@         J     PRTNED         QC
)@@G@@. $A YES,PRTN2 NO,PRTNED      @C@@@@PRTN2    E$DIT EDPKT          . $W CQD
)@@G@@LEAR BUFFER @C@@@@         E$OCTF 6,ADDR1       . $W SET UP ADDR  @A@@@@QE
)@@G@@         E$SKIP 6             .     @A@@@@         L     A0,X6          QF
)@@G@@.     @A@@@@         L,U   A1,60          .     @E@@@@         LMJ   X11QG
)@@G@@,ECOPY$     . $W MOVE IN 60 CHARACTERS    @A@@@@         E$DITX         QH
)@@G@@      .     @C@@@@         P$RINT (PF 1,12,LINE) . $W PRINT A LINE@D@@@@QI
)@@G@@         A,U   X6,10          . $P POINT TO NXT LINE  @C@@@@         S  QJ
)@@G@@   X6,ADDR1       . $P SAVE NEW ADDR@D@@@@         AN,U  A14,1          QK
)@@G@@. $P DECR LINE COUNT    @B@@@@         J     PRTN1          . $J PRTN1  QL
)@@G@@@C@@@@PRTNED.                       . $H PRTNED       @D@@@@         TNZQM
)@@G@@   A15            . $P IF ALL DONE EXIT   @A@@@@         J     *PRNTIT  QN
)@@G@@      .     @E@@@@         MSI,U A15,6          . $P COMPUTE REMNANT CHAQO
)@@G@@R CNT @C@@@@         E$DIT EDPKT          . $W CLEAR BUFFER @C@@@@      QP
)@@G@@   E$OCTF 6,ADDR1       . $W SET UP ADDR  @A@@@@         E$SKIP 6       QQ
)@@G@@      .     @A@@@@         L     A1,A15         .     @A@@@@         L  QR
)@@G@@   A0,X6          .     @E@@@@         LMJ   X11,ECOPY$     . $W MOVE INQS
)@@G@@ REMAINING CHARS  @A@@@@         E$DITX               .     @D@@@@      QT
)@@G@@   P$RINT (PF 1,10,LINE) . $W PRINT LAST LINE   @B@@@@         J     *PRQU
)@@G@@NTIT        . $E EXIT   @[@@@@ .    @]@@@@DUMPIT.     @C@@@@         +  QV
)@@G@@   0              . $H DMPNUM       @A@@@@         L     A0,ADDR2       QW
)@@G@@.     @A@@@@         AN    A0,ADDR1       .     @F@@@@         A,U   A0,QX
)@@G@@1           . $P COMPUTE NO OF WORDS TO DUMP    @A@@@@         L     A15QY
)@@G@@,A0         .     @C@@@@         SZ    A14            . $P SAVE LENGTH  QZ
)@@G@@@A@@@@         DI,U  A14,4          .     @E@@@@         LX    X6,ADDR1 RA
)@@G@@      . $P SET TO INDEX WORDS       @ @@@@         LXI,U X6,1        .  RB
)@@G@@@]@@@@DMPN1.      @C@@@@         TNZ   A14            . $T 1 LINE ONLY ?RC
)@@G@@@E@@@@         J     DMPNED         . $A YES,DMPNED NO,DMPN2      @C@@@@RD
)@@G@@DMPN2    E$DIT EDPKT          . $W CLEAR BUF    @C@@@@         E$OCTF 6,RE
)@@G@@ADDR1       . $W PUT IN ADDR  @A@@@@         E$SKIP 6             .     RF
)@@G@@@A@@@@         L,U     A13,3          .   @C@@@@DMPN3    L     A0,0,*X6 RG
)@@G@@      . $P GET A WORD   @A@@@@         L,U   A1,12          .     @C@@@@RH
)@@G@@         LMJ   X11,EOCTF$     . $W PUT IN LINE  @A@@@@         E$SKIP 4 RI
)@@G@@            .     @A@@@@         JGD   A13,DMPN3      .     @A@@@@      RJ
)@@G@@   E$DITX               .     @C@@@@         P$RINT (PF 1,12,LINE) . $W RK
)@@G@@PRINT LINE  @A@@@@         S,H2  X6,ADDR1       .     @D@@@@         AN,RL
)@@G@@U  A14,1          . $P DECR LINE COUNT    @B@@@@         J     DMPN1    RM
)@@G@@      . $J DMPN1  @C@@@@DMPNED.                       . $H DMPNED       RN
)@@G@@@A@@@@         TNZ   A15            .     @C@@@@         J     *DUMPIT  RO
)@@G@@      . $P EXIT IF DONE @A@@@@         E$DIT EDPKT          .     @C@@@@RP
)@@G@@         E$OCTF 6,ADDR1       . $W PUT IN ADDR  @A@@@@         E$SKIP 6 RQ
)@@G@@            .     @A@@@@DMPN4    L     A0,0,*X6       .     @A@@@@      RR
)@@G@@   L,U   A1,12          .     @C@@@@         LMJ   X11,EOCTF$     . $W PRS
)@@G@@UT IN DATA  @A@@@@         E$SKIP 4             .     @D@@@@         AN,RT
)@@G@@U  A15,1        . $P DECREMENT WORD CNT   @E@@@@         JNZ   A15,DMPN4RU
)@@G@@    . $P KEEP GOING IF NOT DONE     @A@@@@         E$DITX             . RV
)@@G@@      @E@@@@         P$RINT (PF 1,12,LINE)  . $W PRINT THE LAST LINE    RW
)@@G@@@B@@@@         J     *DUMPIT        . $E EXIT   @[@@@@ .    @B@@@@XCON8.RX
)@@G@@                        . $H XCON8  @A@@@@         +     0              RY
)@@G@@.     @A@@@@         L,U   A0,8           .     @E@@@@         S     A0,RZ
)@@G@@XCON        . $P SET CONSTANT FOR OCTAL   @D@@@@         SLJ   XCONALL  SA
)@@G@@      . $W CONVERT TO OCTAL   @B@@@@         J     *XCON8         . $E ESB
)@@G@@XIT   @[@@@@ .    @C@@@@XCON10.                       . $H XCON10       SC
)@@G@@@A@@@@         +     0              .     @A@@@@         L,U   A0,10    SD
)@@G@@      .     @E@@@@         S     A0,XCON        . $P SET CONSTANT FOR DESE
)@@G@@CIMAL @D@@@@         SLJ   XCONALL        . $W CONVERT TO OCTAL   @B@@@@SF
)@@G@@         J     *XCON10        . $E EXIT   @C@@@@FIXNUM   +     0        SG
)@@G@@      . $H FIXNUM       @B@@@@         J     *FIXNUM         . $E EXIT  SH
)@@G@@@C@@@@PRTNUM.                       . $H PRTNUM       @A@@@@         +  SI
)@@G@@   0              .     @C@@@@         SLJ   PRNTIT         . $W GO PRINSJ
)@@G@@T DATA@B@@@@         J     *PRTNUM        . $E EXIT   @[@@@@ .    @C@@@@SK
)@@G@@DMPNUM.                       . $H DMPNUM       @A@@@@         +     0  SL
)@@G@@            .     @C@@@@         SLJ   DUMPIT         . $W GO DUMP DATA SM
)@@G@@@B@@@@         J     *DMPNUM        . $E EXIT   @[@@@@ .    @C@@@@SETBRKSN
)@@G@@.                       . $H SETBRK       @A@@@@         +     0        SO
)@@G@@      .     @A@@@@         L     X6,ADDR1       .     @E@@@@         L  SP
)@@G@@   X7,BRKTBL      . $P GET PTR IN BREAK PT TABLE@A@@@@         LXI,U X7,SQ
)@@G@@1          .      @F@@@@         S     X6,0,*X7       . $P SAVE ADDR IN SR
)@@G@@BREAK PT TABLE    @E@@@@         L     X6,ADDR1          . $P GET LOAD TSS
)@@G@@IME ADDR    @D@@@@         L     A0,0,X6        . $P GET INSTR AT ADDR  ST
)@@G@@@C@@@@         S     A0,0,*X7       . $P SAVE IN TABLE@C@@@@         A,USU
)@@G@@   X6,1           . $P SET NXT INSTR@E@@@@         S,H2  X6,JINST       SV
)@@G@@. $P SET RETURN TO USER INSTR @A@@@@         L     A0,JINST       .     SW
)@@G@@@D@@@@         S     A0,0,*X7       . $P SAVE RETUR INSTR   @E@@@@      SX
)@@G@@   A,U   A0,1      . STORE A RETURN TO INST + 2       @^@@@@         S  SY
)@@G@@   A0,0,*X7 @D@@@@         L     A0,BRKIST      . $P GET BRKPT INSTR    SZ
)@@G@@@C@@@@         L     A1,ADDR1     . $P GET ADDRESS    @E@@@@         S  TA
)@@G@@   A0,0,A1       . $P SET TO EXEC BREAK PT      @A@@@@         E$DIT EDPTB
)@@G@@KT        .       @C@@@@         E$COPY  21,BRKMG2   . $W SETUP USER MSGTC
)@@G@@@A@@@@         L     A0,ADDR1           . @A@@@@         L,U   A1,6     TD
)@@G@@      .     @D@@@@         LMJ   X11,EOCTF$     . $W PUT LOCATUON IN    TE
)@@G@@@A@@@@         E$DITX                .    @E@@@@         S     X7,BRKTBLTF
)@@G@@       . $P SAVE BRKPT TBL PTR      @D@@@@         P$RINT (PF 1,10,LINE)TG
)@@G@@  . $W PRINT USER MSG   @B@@@@         J     *SETBRK        . $E EXIT   TH
)@@G@@@C@@@@CLRBRK.                       . $H CLRBRK       @A@@@@         +  TI
)@@G@@   0              .     @C@@@@         TNZ   ADDR1          . $T CLEAR ATJ
)@@G@@LL ?  @E@@@@         J     CLRALL         . $A YES,CLRALL NO,CLRB1      TK
)@@G@@@]@@@@CLRB1.      @E@@@@         L     A0,BRKTBL      . $P GET PTR IN BKTL
)@@G@@K TBL       @A@@@@         LSSL  A0,18          .     @A@@@@         SSLTM
)@@G@@   A0,18          .     @A@@@@         AN,U  A0,BRKTBL+1    .     @A@@@@TN
)@@G@@         DSL   A0,36          .     @E@@@@         DI,U  A0,4           TO
)@@G@@. $P COMPUTE LGTH OF TABLE    @A@@@@         L     R1,A0          .     TP
)@@G@@@E@@@@         L     X1,(4,BRKTBL+1) . $P POINT TO TOP OF TABLE   @A@@@@TQ
)@@G@@         L     A0,ADDR1       .     @D@@@@         SE    A0,0,*X1       TR
)@@G@@. $W LOOK UP BREAK PT   @F@@@@         J     NOBRKM         . $P IF NOT TS
)@@G@@THERE GO PRT ERR MSG    @C@@@@         AN    X1,(4,4)       . $P POINT TTT
)@@G@@O FIND@C@@@@         L     A0,ADDR1       . $P GET LOAD ADDR@D@@@@      TU
)@@G@@   L     A1,1,X1        . $P GET USER INSTR     @D@@@@         S     A1,TV
)@@G@@0,A0        . $P SET IN USER CODE   @E@@@@         SZ    0,X1           TW
)@@G@@. $W CLEAR BRK-PT TABL ENTRY  @A@@@@         SZ    1,X1           .     TX
)@@G@@@A@@@@         SZ    2,X1           .     @^@@@@         SZ    3,X1     TY
)@@G@@@B@@@@         J     *CLRBRK        . $E EXIT   @D@@@@NOBRKM   E$DIT EDPTZ
)@@G@@KT          . $W CLEAR PRINT BUF    @D@@@@         E$COPY 36,BRKMSG     UA
)@@G@@. $W MOVE IN HDR MSG    @D@@@@         E$OCTF 6,ADDR1       . $W PUT ADDUB
)@@G@@R IN MSG    @A@@@@         E$SKIP 1             .     @A@@@@         E$CUC
)@@G@@HAR '*'           .     @A@@@@         E$DITX               .     @C@@@@UD
)@@G@@         P$RINT (PF 1,14,LINE) . $W PRINT MSG   @B@@@@         J     *CLUE
)@@G@@RBRK        . $E EXIT   @C@@@@CLRALL.                       . $H CLRALL UF
)@@G@@      @E@@@@         L     X4,BRKTBL      . $P POINT TO BRKPT TABL      UG
)@@G@@@A@@@@         LXI,U X4,-4          .     @A@@@@CLRA1    TLEM,U X4,BRKTBUH
)@@G@@L+1   .     @A@@@@         J     CLRA2        .       @A@@@@         L  UI
)@@G@@   A0,0,X4        .     @C@@@@         S     A0,ADDR1       . $P SAVE ADUJ
)@@G@@DR    @D@@@@         L     A0,ADDR1       . $P GET LOADABLE ADDR  @D@@@@UK
)@@G@@         L     A1,1,X4        . $W CLEAR ALL ENTRIES  @A@@@@         S  UL
)@@G@@   A1,0,A0        .     @B@@@@         J     CLRA1          . $E EXIT   UM
)@@G@@@]@@@@CLRA2.      @B@@@@         L     X4,(1,BRKTBL+1)        .   @B@@@@UN
)@@G@@         S     X4,BRKTBL              .   @C@@@@         J     *CLRBRK  UO
)@@G@@              . $E EXIT @[@@@@ .    @[@@@@ .    @C@@@@UFXNUM.           UP
)@@G@@            . $H UFXNUM       @A@@@@         +     0              .     UQ
)@@G@@@C@@@@         J     *UFXNUM          . $E EXIT       @[@@@@ .    @]@@@@UR
)@@G@@SAVBRK.     @ @@@@         +     0          .   @A@@@@         SZ    CONUS
)@@G@@RTN         .     @E@@@@         SLJ   SAVREG         . $W GO SAVE USERSUT
)@@G@@ REGS       @E@@@@         L,H2  A0,SAVBRK      . $P GET USERS RETURN ADUU
)@@G@@DR    @^@@@@         AN,U  A0,1     @D@@@@         S,H2  A0,ADDR1      .UV
)@@G@@ $P SET UP RETURN ADDR  @D@@@@         L,H2  A1,BRKTBL      . $P GET BREUW
)@@G@@AK PT PTR   @E@@@@         AN,U  A1,BRKTBL+1       . $P COMPUTE LGTH OF UX
)@@G@@TBL   @A@@@@         A,U   A1,1                .@A@@@@         DSL   A1,UY
)@@G@@36               .@G@@@@         DI,U  A1,3                . $P COMPUTE UZ
)@@G@@NUMBER OF BREAKPTS      @E@@@@         L     R1,A1               . $P SEVA
)@@G@@T SEARCH CNT      @E@@@@         L     X3,(3,BRKTBL+1)     . $P SET PTR VB
)@@G@@TO TABLE    @E@@@@         SE,H2 A0,0,*X3            . $P LOOK FOR ADDR VC
)@@G@@IN TBL@D@@@@         J     $+1                . $P MUST FIND IT   @C@@@@VD
)@@G@@         AN    X3,(3,2)                  .      @G@@@@         S,H2  X3,VE
)@@G@@CONRTN             . $P SET BREAKPT RETURN ADDR       @C@@@@         E$DVF
)@@G@@IT EDPKT          . $W CLR PRINT BUF@A@@@@         E$COPY 17,BRKMG1     VG
)@@G@@.     @A@@@@         E$OCTF 6,ADDR1      .      @A@@@@         E$DITX   VH
)@@G@@            .     @E@@@@         P$RINT (PF 1,5,LINE) . $W PRINT BREAK PVI
)@@G@@T MSG       @C@@@@         SLJ   PREADY         . $W PRINT READY  @B@@@@VJ
)@@G@@         J     DBENTR         . J DBENTR  @[@@@@ .    @C@@@@FNDREG.     VK
)@@G@@                  . $H FNDREG       @A@@@@         +     0              VL
)@@G@@.     @E@@@@         L     X6,(1,REGBUF)  . $P POINT TO REG SAVE LIST   VM
)@@G@@@D@@@@         L,U   R1,42          . $P SET SEARCH CNT     @C@@@@      VN
)@@G@@   SE,H1 A6,0,*X6       . $W LOOK FOR REG @F@@@@         J     NFNREG   VO
)@@G@@      . $P IF NOT FOUND GO PRINT ERR MSG  @D@@@@         AN    X6,(1,1) VP
)@@G@@      . $P POINT BACK TO REG  @E@@@@         L,H2  X6,0,X6        . $P GVQ
)@@G@@ET SAVE ADDR FOR REG    @C@@@@         L     A7,0,X6        . $P GET CONVR
)@@G@@TENTS @C@@@@         J     FNREXT         . $J FNREXT       @C@@@@NFNREGVS
)@@G@@   E$DIT EDPKT          . $W CLEAR PRT BUF@D@@@@         E$MSG  REGEM1  VT
)@@G@@      . $W FORMAT ERR MSG     @A@@@@         L     A0,A6          .     VU
)@@G@@@E@@@@         LMJ   X11,EFD1$      . $W PUT IN UNDEFINED NAME    @A@@@@VV
)@@G@@         E$MSGR               .     @A@@@@         E$DITX               VW
)@@G@@.     @D@@@@         P$RINT (PF 1,10,LINE) . $W PRINT ERR MSG     @B@@@@VX
)@@G@@         J     *FNDREG        . $E EXIT   @E@@@@FNREXT   L     A0,FNDREGVY
)@@G@@      . $P SET UP NORMAL RETURN     @A@@@@         A,U   A0,1           VZ
)@@G@@.     @B@@@@         J     0,A0           . $E EXIT   @[@@@@ .    @C@@@@WA
)@@G@@SAVREG.                       . $H SAVREG       @A@@@@         +     0  WB
)@@G@@            .     @C@@@@         DS    A0,AXBUFR      . $P SAVE A0 & A1 WC
)@@G@@@C@@@@          L,U       A0,1              . NON ZERO@F@@@@          S,WD
)@@G@@S4      A0,SNFLG$         . SURPRESS SNOOPY PRINT     @C@@@@         S  WE
)@@G@@   R1,RRBUFR      . $P SAVE R1      @A@@@@         LXI,U A0,1          .WF
)@@G@@      @A@@@@        LXM,U A0,AXBUFR+2          .@A@@@@        LXI,U A1,1WG
)@@G@@          .       @A@@@@        LXM,U A1,A2         .       @^@@@@      WH
)@@G@@   L,U   R1,14    @C@@@@         BT    A0,,*A1        . $W SAVE A2 - X11WI
)@@G@@@A@@@@         L     A1,(1,X1)          . @A@@@@          L,U   R1,11   WJ
)@@G@@        .   @C@@@@         BT    A0,,*A1         . $W SAVE X REGS @A@@@@WK
)@@G@@         A,U   A0,1           .     @A@@@@         LXI,U A1,1        .  WL
)@@G@@      @^@@@@         LXM,U A1,R2    @A@@@@         L,U   R1,14          WM
)@@G@@.     @C@@@@         BT    A0,,*A1        . $W SAVE R2- R15 @C@@@@      WN
)@@G@@   J     *SAVREG        . $E EXIT         @]@@@@ .          @C@@@@RESREGWO
)@@G@@.                       . $H RESREG       @A@@@@         +     0        WP
)@@G@@      .     @A@@@@        LXI,U A0,1          .       @C@@@@        LXM,WQ
)@@G@@U A0,AXBUFR+2           .           @A@@@@        LXI,U A1,1          . WR
)@@G@@      @A@@@@        LXM,U A1,A2         .       @A@@@@         L,U   R1,WS
)@@G@@14          .     @E@@@@         BT    A1,,*A0        . $W RESTORE A-REGWT
)@@G@@S & R-REGS  @A@@@@         L     A1,(1,X1)         .  @A@@@@         L,UWU
)@@G@@   R1,11              . @E@@@@         BT    A1,,*A0           . $W RESTWV
)@@G@@ORE XREGS         @A@@@@         A,U   A0,1           .     @A@@@@      WW
)@@G@@  LXI,U A1,1          .       @A@@@@        LXM,U A1,R2         .       WX
)@@G@@@A@@@@         L,U   R1,14          .     @E@@@@         BT    A1,,*A0  WY
)@@G@@      . $W RESTORE R-REGS           @E@@@@         DL    A0,AXBUFR      WZ
)@@G@@. $P RESTORE A0 & A1          @C@@@@         L     R1,RRBUFR      . $P RXA
)@@G@@ESTORE R1   @C@@@@         J     *RESREG        . $E EXIT         @]@@@@XB
)@@G@@ .          @]@@@@ .          @]@@@@ .          @]@@@@ .          @C@@@@XC
)@@G@@DOPRTR.                       . $H DOPRTR       @A@@@@         +     0  XD
)@@G@@            .     @C@@@@DOPRT1   L,H2  X7,0,X6        . $H DOPRT1       XE
)@@G@@@E@@@@         E$DIT EDPKT          . $W CLEAR PRT BUFFER         @A@@@@XF
)@@G@@         L,H1  A0,0,*X6       .     @E@@@@         LMJ   X11,EFD1$      XG
)@@G@@. $W PUT REG NAME IN BUFR     @A@@@@         E$SKIP 1             .     XH
)@@G@@@A@@@@         L     A0,('VALUE:')  .     @G@@@@         LMJ   X11,EFD1$XI
)@@G@@      . $W PUT FORMATTING VALUE IN LINE         @A@@@@         E$SKIP 1 XJ
)@@G@@            .     @A@@@@         L     A0,0,X7        .     @A@@@@      XK
)@@G@@   L,U   A1,12          .     @G@@@@         LMJ   X11,EOCTF$     . $W PXL
)@@G@@UT REGISTER VALUE IN LINE           @A@@@@         E$DITX               XM
)@@G@@.     @E@@@@         P$RINT (PF 1,4,LINE) . $W PRINT REG LINE           XN
)@@G@@@A@@@@         JGD   R3,DOPRT1      .     @C@@@@         J     *DOPRTR  XO
)@@G@@      . $E EXIT         @]@@@@ .          @C@@@@CONCTS.                 XP
)@@G@@      . $H CONCTS       @A@@@@         +     0              .     @A@@@@XQ
)@@G@@         L     A0,A3          .     @E@@@@         AND   A0,('JJJJJJ')  XR
)@@G@@. $P STRIP OF FIELDATA        @A@@@@         L     A3,A1          .     XS
)@@G@@@A@@@@         L     A0,A4          .     @A@@@@         AND   A0,('JJJJXT
)@@G@@JJ')  .     @A@@@@         L     A4,A1          .     @E@@@@         L,UXU
)@@G@@   R4,1           . $P SET TO PROCESS 2 WORDS   @E@@@@         L,U   A15XV
)@@G@@,1          . $P SET MULTIPLIER           @E@@@@         SZ    A14      XW
)@@G@@      . $P CLEAR ACCUMULATOR        @A@@@@CTSLP0   L,U   A13,5          XX
)@@G@@.     @A@@@@CTSLP1   DSL   A4,3           .     @A@@@@         SSL   A4,XY
)@@G@@3          .      @A@@@@         JGD   A13,CTSLP1     .     @A@@@@      XZ
)@@G@@   DSL   A3,36          .     @A@@@@         JGD   R4,CTSLP0      .     YA
)@@G@@@C@@@@         L     A4,A5          . $P RECOVER VALUE@C@@@@         J  YB
)@@G@@   *CONCTS        . $E EXIT         @]@@@@ .          @C@@@@DOWHAT.     YC
)@@G@@                  . $H DOWHAT       @C@@@@         P$RINT (PF 1,2,WHATMGYD
)@@G@@) . $W PRINT MSG  @C@@@@         J     DBENTR         . $E EXIT         YE
)@@G@@@]@@@@ .          @C@@@@EXIT.                         . $H EXIT         YF
)@@G@@@C@@@@         ER    EXIT$          . $E EXIT         @C@@@@DBPRSE.     YG
)@@G@@                  . $H DBPRSE       @A@@@@         L     A0,1,X11       YH
)@@G@@.     @A@@@@         L,U   A1,BLANKS      .     @A@@@@         L,U   R1,YI
)@@G@@100         .     @E@@@@         BT    A0,,*A1        . $W CLEAR STACK TYJ
)@@G@@O BLANKS    @E@@@@         L,U   R7,71          . $P SET TO COUNT COLS  YK
)@@G@@      @E@@@@         L     X1,0,X11       . $P POINT TO STRING          YL
)@@G@@@E@@@@         L     X2,1,X11       . $P POINT TO STACK           @E@@@@YM
)@@G@@         L     X3,(1,0)       . $P SET TO INDEX SOURCE CHARS@C@@@@DBPARLYN
)@@G@@1.                      . $H DBPARL1      @E@@@@         L     X4,(1,0) YO
)@@G@@      . $P SET TO INDEX DEST CHARS  @E@@@@         L     X5,X2          YP
)@@G@@. $P SET CHAR STORE REG       @E@@@@         SZ    A15            . $P CYQ
)@@G@@LEAR CHAR CNT ACCUM     @A@@@@         LXI,U X5,1           .     @C@@@@YR
)@@G@@PARLOP   EX    LDDW,X3        . $W GET A CHAR   @A@@@@         TLEM,U X3YS
)@@G@@,5          .     @A@@@@         J     $+2            .     @A@@@@      YT
)@@G@@   L     X3,(1,0)       .     @E@@@@         TNE,U A2,5           . $T CYU
)@@G@@HAR A BLANK ?           @E@@@@         J     CHKBLK         . $A YES,CHKYV
)@@G@@BLK NO,PARL2      @C@@@@PARL2    A,U   A15,1          . $P INCR CHAR CNTYW
)@@G@@@E@@@@         EX    STRW,X4        . $W STORE THE CHAR           @A@@@@YX
)@@G@@         TLEM,U X4,5          .     @A@@@@         J     $+2            YY
)@@G@@.     @C@@@@         L     X4,(1,0)       . $T ALL DONE ?   @E@@@@      YZ
)@@G@@   JGD   R7,PARLOP      . $A YES,ENDPAR NO,PARLOP     @A@@@@         J  ZA
)@@G@@   ENDPAR         .     @C@@@@CHKBLK   TZ    A15            . $T ANY CHAZB
)@@G@@RS ?  @E@@@@         J     FX1            . $A YES,FX1 NO,PARLOP        ZC
)@@G@@@A@@@@         JGD   R7,PARLOP      .     @A@@@@         J     ENDPAR   ZD
)@@G@@      .     @E@@@@FX1      A,U   X2,2           . $P POINT TO NXT STACK ZE
)@@G@@ENTRY @E@@@@         JGD   R7,DBPARL1     . $P IF ALL DONE EXIT         ZF
)@@G@@@C@@@@ENDPAR   J     2,X11          . $E EXIT         @]@@@@ .          ZG
)@@G@@@E@@@@LDDW     L,S1  A2,,X1         . CHAR FETCH VECTOR           @A@@@@ZH
)@@G@@         L,S2  A2,,X1         .     @A@@@@         L,S3  A2,,X1         ZI
)@@G@@.     @A@@@@         L,S4  A2,,X1         .     @A@@@@         L,S5  A2,ZJ
)@@G@@,X1         .     @A@@@@         L,S6  A2,,*X1        .     @E@@@@STRW  ZK
)@@G@@   S,S1  A2,,X5         . CHAR STORE VECTOR           @A@@@@         S,SZL
)@@G@@2  A2,,X5         .     @A@@@@         S,S3  A2,,X5         .     @A@@@@ZM
)@@G@@         S,S4  A2,,X5         .     @A@@@@         S,S5  A2,,X5         ZN
)@@G@@.     @A@@@@         S,S6  A2,,*X5        .     @]@@@@$(4).       @A@@@@ZO
)@@G@@CONPKT   PF    05337,0,CONRTN       @A@@@@RDYM1    '* DEBUG READY * '   ZP
)@@G@@      @^@@@@RDYM2    '* READY *   ' @C@@@@RDYCN1   'CONTINGENCY AT LOCATZQ
)@@G@@ION : '           @A@@@@RDYCN2   'ILLEGAL OPERATION*'       @^@@@@RDYCN3ZR
)@@G@@   'GUARD MODE*'  @A@@@@RDYCN4   'FLOAT PT OVERFLOW*'       @A@@@@RDYCN5ZS
)@@G@@   'FLOAT PT UNDERFLOW*'      @A@@@@RDYCN6   'DIVIDE OVERFLOW*'         ZT
)@@G@@@A@@@@RDYCN7   'ABORT$ OR EABT$*'         @A@@@@RDYCN8   'II OR RBK KEYIZU
)@@G@@N*'         @^@@@@RDYCN9   'ERR$ MODE*'   @^@@@@RDYCN10   'TRAP*'       ZV
)@@G@@@^@@@@LINE     RES   100      @A@@@@EDPKT    ED    0,050,14,LINE        ZW
)@@G@@@^@@@@         RES   6        @^@@@@CONTBL   +     0        @^@@@@      ZX
)@@G@@   +     RDYCN2   @^@@@@         +     RDYCN3   @^@@@@         +     RDYZY
)@@G@@CN4   @^@@@@         +     RDYCN5   @^@@@@         +     RDYCN6   @^@@@@ZZ
)@@G@@         +     0        @^@@@@         +     RDYCN7   @^@@@@         +  AA
)@@G@@   RDYCN8   @^@@@@         +     0        @^@@@@         +     RDYCN9   AB
)@@G@@@^@@@@          +         0   @A@@@@          +         RDYCN10         AC
)@@G@@@^@@@@COMANS   RES   100      @^@@@@CMDLST   +     DOHELP   @^@@@@      AD
)@@G@@   'HELP  '       @^@@@@         +     DOPRINTA @^@@@@         'PRINTA' AE
)@@G@@      @^@@@@         +     DOPRINTN @^@@@@         'PRINTN'       @^@@@@AF
)@@G@@         +     DODUMPA  @^@@@@         'DUMPA '       @^@@@@         +  AG
)@@G@@   DODUMPN  @^@@@@         'DUMPN '       @^@@@@         +     DOBREAK  AH
)@@G@@@^@@@@         'BREAK '       @^@@@@         +     DOCBREAK @^@@@@      AI
)@@G@@   'CBREAK'       @^@@@@         +     DOCREGS  @^@@@@         'CREGS ' AJ
)@@G@@      @^@@@@         +     DOPATCH  @^@@@@         'PATCH '       @^@@@@AK
)@@G@@         +     DOEXIT   @^@@@@         'EXIT  '       @^@@@@         +  AL
)@@G@@   DOPATCHR @^@@@@         'PATCHR'       @^@@@@         +     DOGOTO   AM
)@@G@@@^@@@@         'GOTO  '       @^@@@@         +     DOSNOOPY @^@@@@      AN
)@@G@@   'SNOOPY'       @A@@@@          +         DOTRAP          @^@@@@      AO
)@@G@@    'TRAP  '      @A@@@@CMDLGT   +     (CMDLGT-CMDLST)/2    @]@@@@ .    AP
)@@G@@      @G@@@@HMSG1    '  THIS DEBUGGER SUPPORTS THE FOLLOWING COMMANDS:  AQ
)@@G@@     '      @G@@@@         '     1) HELP - DESCRIBES THE AVAILABLE      AR
)@@G@@           '      @G@@@@         '               COMMANDS, AND THEIR FORAS
)@@G@@MAT.             '      @G@@@@         '     2) PRINTA ADDR1 ADDR2 -----AT
)@@G@@-- ADDRN               '      @G@@@@         '              - PRINTS THEAU
)@@G@@ DATA BETWEEN A PAIR         '      @G@@@@         '                    AV
)@@G@@OF ADDRESSES IN FIELD DATA         '      @G@@@@         '     3) PRINTNAW
)@@G@@ ADDR N                                  '      @G@@@@         '        AX
)@@G@@      - PRINTS N WORDS STARTING AT ADDR        '      @G@@@@         '  AY
)@@G@@                  IN FIELD DATA                      '      @G@@@@      AZ
)@@G@@   '     4) DUMPA  ADDR1 ADDR2 ADDR3 ------ ADDRN          '      @G@@@@BA
)@@G@@         '              - DUMPS THE DATA BETWEEN A PAIR          '      BB
)@@G@@@G@@@@         '                OF ADDRESSES IN OCTAL, 4 WORDS         'BC
)@@G@@      @G@@@@         '                TO A LINE                         BD
)@@G@@     '      @G@@@@         '     5) DUMPN  ADDR N                       BE
)@@G@@           '      @G@@@@         '              - DUMPS N WORDS OF DATA BF
)@@G@@STARTING         '      @G@@@@         '                    AT ADDR IN OBG
)@@G@@CTAL  4 WORDS          '      @G@@@@         '                    TO A LBH
)@@G@@INE                          '      @G@@@@         '     6) BREAK  ADDR1BI
)@@G@@ ADDR2 ADDR3 ------ ADDRN          '      @G@@@@         '              BJ
)@@G@@- SETS BREAK POINTS A ADDR1 THRU ADDR N  '      @G@@@@         '     7) BK
)@@G@@CBREAK ADDR1 ADDR2 ----  ADDRN                 '      @G@@@@         '  BL
)@@G@@            - CLEARS BREAK PTS AT ADDR1 THRU N       '      @G@@@@      BM
)@@G@@   '                    IF NO ADDRS ARE SPECIFIED, ALL BRK '      @G@@@@BN
)@@G@@         '                    POINTS ARE CLEARED                 '      BO
)@@G@@@G@@@@         '     8) CREGS  RN1 RN2 ---- RN2 OR ALLA OR ALLX OR ALLR'BP
)@@G@@      @G@@@@         '              - DUMPS THE REGISTERS SPECIFIED     BQ
)@@G@@     '      @G@@@@         '                    BY RNI OR ALL A REGS IF BR
)@@G@@ALLA       '      @G@@@@         '                           OR ALL X REBS
)@@G@@GS IF ALLX       '      @G@@@@         '                           OR ALBT
)@@G@@L R REGS IF ALLR       '      @G@@@@         '     9) PATCH  ADDR1 CONT1BU
)@@G@@ ADDR2 CONT2 ---- ADDRN CONTN'      @G@@@@         '                REPLBV
)@@G@@ACES THE CONTENTS OF ADDR1         '      @G@@@@         '              BW
)@@G@@      THRU ADDRN WITH THE DATA           '      @G@@@@         '        BX
)@@G@@            CONT1 THRU CONTN RESPECTIVELY      '      @G@@@@         '  BY
)@@G@@   10) EXIT - RETURN CONTROL TO NEXT INSTRUCTION     '      @G@@@@      BZ
)@@G@@   '                                                       '      @G@@@@CA
)@@G@@          '    11)  GOTO  ADDR                                   '      CB
)@@G@@@G@@@@         '              - PASS CONTROL TO THE LOCATION           'CC
)@@G@@      @G@@@@         '                    SPECIFIED BY ADDR             CD
)@@G@@     '      @G@@@@         '      OBTAINED FROM THE @MAP LISTING        CE
)@@G@@           '      @G@@@@         '      ALL ADDRESSES MUST BE 6 DIGIT OCCF
)@@G@@TAL NUMBERS- LJSF'      @G@@@@         '     ALL ADDRESSES MUST BE 12 DICG
)@@G@@GIT OCTAL NUMBERS      '      @G@@@@         ' ** NOTE **               CH
)@@G@@                             '      @G@@@@         '                    CI
)@@G@@                                   '      @G@@@@         '     ALL COUNTCJ
)@@G@@S MUST BE DECIMAL INTEGERS LESS THAN     '      @G@@@@         '        CK
)@@G@@  999999                                       '      @G@@@@         '  CL
)@@G@@   AT LEAST ONE BLANK MUST SEPARATE EACH ELEMENT     '      @G@@@@      CM
)@@G@@   '          ON A COMMAND LINE                            '      @]@@@@CN
)@@G@@ .          @A@@@@JINST    J     $-$       .          @A@@@@BRKIST   SLJCO
)@@G@@   SAVBRK        .      @^@@@@BLANKS    '            '@C@@@@BRKMSG   '* CP
)@@G@@NO BREAK POINT SET AT LOCATION: '   @A@@@@BRKMG1   'BREAK POINT AT : '  CQ
)@@G@@      @C@@@@BRKMG2   'BREAK POINT SET AT :        '         @A@@@@REGEM1CR
)@@G@@   'REGISTER * NOT DEFINED*'  @]@@@@ .          @E@@@@AXBUFR   RES   27 CS
)@@G@@       . A & X REGISTER SAVE BUFFER       @E@@@@RRBUFR   RES   15       CT
)@@G@@ . R REGISTER SAVE BUFFER           @]@@@@ .          @]@@@@REGBUF.     CU
)@@G@@@A@@@@         +     066005,AXBUFR        @A@@@@         +     066105,AXCV
)@@G@@BUFR+1      @A@@@@         +     066205,AXBUFR+2      @A@@@@         +  CW
)@@G@@   066305,AXBUFR+3      @A@@@@         +     066405,AXBUFR+4      @A@@@@CX
)@@G@@         +     066505,AXBUFR+5      @A@@@@         +     066605,AXBUFR+6CY
)@@G@@      @A@@@@         +     066705,AXBUFR+7      @A@@@@         +     067CZ
)@@G@@005,AXBUFR+8      @A@@@@         +     067105,AXBUFR+9      @A@@@@      DA
)@@G@@   +     066160,AXBUFR+10     @A@@@@         +     066161,AXBUFR+11     DB
)@@G@@@A@@@@         +     066162,AXBUFR+12     @A@@@@         +     066163,AXDC
)@@G@@BUFR+13     @A@@@@         +     066164,AXBUFR+14     @A@@@@         +  DD
)@@G@@   066165,AXBUFR+15     @A@@@@         +     0356105,AXBUFR+16    @A@@@@DE
)@@G@@         +     0356205,AXBUFR+17    @A@@@@         +     0356305,AXBUFR+DF
)@@G@@18    @A@@@@         +     0356405,AXBUFR+19    @A@@@@         +     035DG
)@@G@@6505,AXBUFR+20    @A@@@@         +     0356605,AXBUFR+21    @A@@@@      DH
)@@G@@   +     0356705,AXBUFR+22    @A@@@@         +     0357005,AXBUFR+23    DI
)@@G@@@A@@@@         +     0357105,AXBUFR+24    @A@@@@         +     0356160,ADJ
)@@G@@XBUFR+25    @A@@@@         +     0356161,AXBUFR+26    @A@@@@         +  DK
)@@G@@   0276105,RRBUFR       @A@@@@         +     0276205,RRBUFR+1     @A@@@@DL
)@@G@@         +     0276305,RRBUFR+2     @A@@@@         +     0276405,RRBUFR+DM
)@@G@@3     @A@@@@         +     0276505,RRBUFR+4     @A@@@@         +     027DN
)@@G@@6605,RRBUFR+5     @A@@@@         +     0276705,RRBUFR+6     @A@@@@      DO
)@@G@@   +     0277005,RRBUFR+7     @A@@@@         +     0277105,RRBUFR+8     DP
)@@G@@@A@@@@         +     0276160,RRBUFR+9     @A@@@@         +     0276161,RDQ
)@@G@@RBUFR+10    @A@@@@         +     0276162,RRBUFR+11    @A@@@@         +  DR
)@@G@@   0276163,RRBUFR+12    @A@@@@         +     0276164,RRBUFR+13    @A@@@@DS
)@@G@@         +     0276165,RRBUFR+14    @]@@@@ .          @A@@@@EXTMSG   '* DT
)@@G@@DEBUG EXIT *    '       @^@@@@WHATMG   ' ?? WHAT ?? ' @A@@@@ADDR1    +  DU
)@@G@@   0         .          @A@@@@ADDR2    +     0         .          @^@@@@DV
)@@G@@CONTENT  +     0        @C@@@@IBASE    +     0         . I-BANK BASE VALDW
)@@G@@UE    @C@@@@DBASE    +     0         . D-BANK BASE VALUE    @C@@@@SBASE DX
)@@G@@   +     0         . S-BANK BASE VALUE    @^@@@@XCON     +     0        DY
)@@G@@@C@@@@BRKTBL   +     1,$+1     . BREAK POINT TABLE    @^@@@@         RESDZ
)@@G@@   600      @]@@@@         END___                    '      ET ADDR     EA
)@@G@@*[@@@@*SDFF*@]@@@@ .          @A@@@@ .                  ** PF$AM **     EB
)@@G@@@]@@@@ .          @E@@@@ .        THE ACCESS METHOD CONTAINS 8 ENTRY POIEC
)@@G@@NTS:        @E@@@@ .             PF$AMI - INITIALIZE FOR A GIVEN PROC   ED
)@@G@@      @E@@@@ .             PF$AMF - FLUSH BUFFERS FOR A GIVEN PROC      EE
)@@G@@@E@@@@ .             PF$AMR - READ GIVEN LINE FROM PROC FILE      @E@@@@EF
)@@G@@ .             PF$AMN - READ NEXT LINE AFTER GIVEN LINE     @C@@@@ .    EG
)@@G@@         PF$AMW - WRITE LINE TO PROC FILE @C@@@@ .             PF$AMD - EH
)@@G@@DELETE GIVEN LINE       @E@@@@ .             PF$AMDN - DELETE LINE NEXT EI
)@@G@@AFTER GIVEN LINE  @E@@@@ .             PF$AMQ - UPDATE LINE INCREMENT VAEJ
)@@G@@LUE FOR PROC@]@@@@ .          @C@@@@ .        PNAME IS 5 WORD CURRENT PREK
)@@G@@OC HEADER   @]@@@@ .          @C@@@@ .        PROC DIRECTORY IS 127 WORDEL
)@@G@@S LONG,     @C@@@@ .             LAST 125 WORDS CONTAIN 25 5-WORD @A@@@@EM
)@@G@@ .             PROC HEADERS         @]@@@@ .          @E@@@@ .          EN
)@@G@@        AVSTK IS UNUSED SPACE STACK -           @C@@@@ .                EO
)@@G@@  WORD 0 GIVES # STACK ENTRIES@C@@@@ .                  OTHER WORDS HAVEEP
)@@G@@ FORMAT     @C@@@@ .             -------------------------------  @C@@@@EQ
)@@G@@ .             :# WORDS  : REL  WORD  ADDR   :  @C@@@@ .             ---ER
)@@G@@----------------------------  @]@@@@ .          @C@@@@ .                ES
)@@G@@  INDEX ENTRY WORD FORMAT -   @C@@@@ .             ---------------------ET
)@@G@@----------  @C@@@@ .             : LINE #  : REL  WORD  ADDR   :  @C@@@@EU
)@@G@@ .             -------------------------------  @C@@@@ .                EV
)@@G@@  LINE #'S ARE SORTED         @]@@@@ .          @C@@@@ .                EW
)@@G@@  LINE IMAGE STORAGE:         @A@@@@ .                  THE 1ST WORD    EX
)@@G@@@C@@@@ .                  OF IMAGE GIVES LINE # IN H1,@C@@@@ .          EY
)@@G@@        LINE CHAR LENGTH IN H2.     @]@@@@ .          @^@@@@         AXREZ
)@@G@@$.          @^@@@@$(4)     LIT.           @]@@@@$(3).       @]@@@@ .    FA
)@@G@@      @A@@@@PF       FORM  12,6,18        .     @]@@@@ .          @]@@@@FB
)@@G@@ .          @A@@@@ .                  ** PF$AMI **    @]@@@@ .          FC
)@@G@@@E@@@@ .        ROUTINE TO INITIALIZE THE ACCESS METHOD           @A@@@@FD
)@@G@@ .             FOR A PARTICULAR PROC@]@@@@ .          @^@@@@ .        CAFE
)@@G@@LL IS       @A@@@@ .                  LX,U X10,PARAM  @E@@@@ .          FF
)@@G@@        LMJ  X11,PF$AMI - FOR PROC MODE         @E@@@@ .                FG
)@@G@@  (LMJ  X11,PF$AMS - FOR PERFORM MODE)    @C@@@@ .             WHERE PARFH
)@@G@@AM IS FOLLOWING -       @E@@@@ .                  PARAM    +    PROC-NAMFI
)@@G@@E (2 WORDS)       @G@@@@ .                           +   [LINE-CNT,NEXT-FJ
)@@G@@LN-#]  (RETURNED)       @G@@@@ .                              (PF$AMS WIFK
)@@G@@LL RETURN 0 IF NO FIND,       @E@@@@ .                                 -FL
)@@G@@1 IF PARSED FLAG IS SET)@]@@@@ .          @C@@@@PF$AMS*.                FM
)@@G@@      . $H PF$AMS       @A@@@@         L,U   A5,1           .     @A@@@@FN
)@@G@@         J     $+2            .     @C@@@@PF$AMI*.                      FO
)@@G@@. $H PF$AMI       @A@@@@         SZ    A5             .     @E@@@@      FP
)@@G@@   S,H2  X11,RETURN     . $P SAVE RETURN ADDR         @E@@@@         L  FQ
)@@G@@   X8,X10         . $P SAVE PARAM ADDR          @G@@@@         DL    A0,FR
)@@G@@0,X8        . $P GET PROC NAME FROM PARAM LIST        @G@@@@         DTEFS
)@@G@@   A0,PNAME       . $T IS PROC ALREADY INITIALIZED          @A@@@@      FT
)@@G@@   J     $+2            .     @C@@@@         J     I6             . $A NFU
)@@G@@O YES,I6    @G@@@@         L     X9,(5,PNMLST)  . $P SET PTRS TO SEARCH FV
)@@G@@PROC NAME LIST    @A@@@@         L     R1,PCNT        .     @E@@@@I3    FW
)@@G@@   SE    A0,0,*X9       . $T IS PROC NAME IN LIST ?   @C@@@@         J  FX
)@@G@@   I4             . $A YES NO,I4    @A@@@@         AN,U  X9,5           FY
)@@G@@.     @E@@@@         TE    A1,1,*X9       . CHECK SECOND WORD OF NAME   FZ
)@@G@@@A@@@@         J     I3             .     @A@@@@         AN,U  X9,5     GA
)@@G@@      .     @C@@@@         J     I5             . $J I5           @E@@@@GB
)@@G@@I4       JNZ   A5,SI1         . $T IS THIS PERFORM MODE     @C@@@@      GC
)@@G@@                        . $A NO YES,SI1   @E@@@@         L     A2,PCNT  GD
)@@G@@      . $P GET ACTIVE PROC CNT      @C@@@@         TG,U  A2,25          GE
)@@G@@. $T IS IT 25 ?   @E@@@@         J     MAXPROC        . $A NO YES,MAXPROGF
)@@G@@C           @G@@@@         A,U   A2,1           . $P INCREMENT NUMBER ACGG
)@@G@@TIVE PROCS        @A@@@@         S     A2,PCNT        .     @G@@@@      GH
)@@G@@   DS    A0,0,X9        . $P STORE PROC ENTRY INTO PROC NAME LIST @E@@@@GI
)@@G@@         SZ    2,X9           . $P ZERO OUT OTHER PROC INFO @A@@@@      GJ
)@@G@@   SZ    3,X9           .     @A@@@@         SZ    4,X9           .     GK
)@@G@@@E@@@@         S,S1  A2,2,X9        . $P SAVE PROC NUMBER         @E@@@@GL
)@@G@@         L     A0,LAST$D      . $P GET INDEX BUFFER         @A@@@@      GM
)@@G@@   A,U   A0,1           .     @A@@@@         S,H2  A0,3,X9        .     GN
)@@G@@@A@@@@         A,U   A0,PRMXLN      .     @A@@@@         S     A0,LAST$DGO
)@@G@@      .     @A@@@@         ER    MCORE$         .     @E@@@@         L,UGP
)@@G@@   A2,10          . $P INITIALIZE LINE INC TO 10@A@@@@         S,H1  A2,GQ
)@@G@@4,X9        .     @A@@@@I5       SZ    MAXLN          .     @A@@@@      GR
)@@G@@   L,U   R1,5           .     @A@@@@         L     A0,(1,PNAME)   .     GS
)@@G@@@A@@@@         LXI,U X9,1           .     @A@@@@         S     X9,PNAD  GT
)@@G@@      .     @G@@@@         BT    A0,0,*X9       . $P GET PROC HEADER FROGU
)@@G@@M PROC STORAGE    @G@@@@I6       L     A0,LNCNT       . $P PUT LINE-CNT GV
)@@G@@INTO CALLING PARAM LIST @A@@@@         S,H1  A0,2,X8        .     @G@@@@GW
)@@G@@         L     A0,LNNUM       . $P PUT NXT-LN-# INTO CALLING PARAM LIST GX
)@@G@@@A@@@@         A     A0,LNINC       .     @E@@@@         TG,U  A0,2001  GY
)@@G@@      . $T IS NEXT # < 2001         @E@@@@         L,U   A0,2000        GZ
)@@G@@. $P SET NEXT # TO 2000       @A@@@@         S,H2  A0,2,X8        .     HA
)@@G@@@G@@@@         L,U   A0,1           . $P SET PROC-HEADER-IN-CORE FLAG   HB
)@@G@@      @A@@@@         S     A0,PROCIN      .     @E@@@@         JZ    A5,HC
)@@G@@I7          . $T IS THIS PROC MODE        @C@@@@                        HD
)@@G@@      . $A NO YES,I7    @E@@@@         TZ    PFLAG          . $T IS PARSHE
)@@G@@ED FLAG SET       @C@@@@         J     SI2            . $A NO YES,SI2   HF
)@@G@@@E@@@@I7       S     A5,PFLAG       . $P SET OR RESET PFLAG       @C@@@@HG
)@@G@@         J     *RETURN        . $E RETURN       @G@@@@SI1      SZ    2,XHH
)@@G@@8           . $P SET NO-FIND STATUS (PERFORM)         @C@@@@         J  HI
)@@G@@   *RETURN        . $E RETURN       @G@@@@SI2      L     A0,(-1)        HJ
)@@G@@. $P SET PROC-NOW-PARSED STATUS (PERFORM) @A@@@@         S     A0,2,X8  HK
)@@G@@      .     @C@@@@         J     *RETURN        . $E RETURN       @]@@@@HL
)@@G@@ .          @A@@@@ .                  ** PF$AMF **    @]@@@@ .          HM
)@@G@@@E@@@@ .        ROUTINE TO FLUSH THE ACCESS METHOD BUFFERS        @A@@@@HN
)@@G@@ .             FOR A PARTICULAR PROC@]@@@@ .          @^@@@@ .        CAHO
)@@G@@LL IS       @A@@@@ .                  LX,U X10,PARAM  @A@@@@ .          HP
)@@G@@        LMJ  X11,PF$AMF @C@@@@ .             WHERE PARAM IS FOLLOWING - HQ
)@@G@@      @E@@@@ .                  PARAM    +    PROC-NAME (2 WORDS)       HR
)@@G@@@E@@@@ .                           +   [LINE-CNT],0  (RETURNED)   @]@@@@HS
)@@G@@ .          @C@@@@PF$AMF*.                      . $H PF$AMF       @E@@@@HT
)@@G@@         S,H2  X11,RETURN     . $P SAVE RETURN ADDR         @E@@@@      HU
)@@G@@   L     X8,X10         . $P SAVE PARAM ADDR          @G@@@@         TNZHV
)@@G@@   PROCIN         . $T IS PROC-IN-CORE FLAG SET ?           @C@@@@      HW
)@@G@@   J     F3             . $A YES NO,F3    @A@@@@         L,U   R1,5     HX
)@@G@@      .     @A@@@@         L     A0,(1,PNAME)   .     @A@@@@         L  HY
)@@G@@   X9,PNAD        .     @G@@@@         BT    X9,0,*A0       . $P MOVE PRHZ
)@@G@@OC HEADER TO PROC STORAGE     @G@@@@         L     A0,LNCNT       . $P PIA
)@@G@@UT LINE-CNT INTO CALLING PARAM LIST @A@@@@         S,H1  A0,2,X8        IB
)@@G@@.     @E@@@@         SZ    PROCIN         . $P CLEAR PROC-IN-CORE FLAG  IC
)@@G@@@A@@@@         J     *RETURN        .     @A@@@@F3       SZ    2,X8     ID
)@@G@@      .     @C@@@@         J     *RETURN        . $E RETURN       @]@@@@IE
)@@G@@ .          @A@@@@ .                  ** PF$AMR **    @]@@@@ .          IF
)@@G@@@C@@@@ .        ROUTINE TO READ A LINE FROM PS$FILE   @]@@@@ .          IG
)@@G@@@E@@@@ .        CALL IS EITHER FOR SPECIFIC LINE, (PF$AMR)        @C@@@@IH
)@@G@@ .             OR NEXT SEQUENTIAL LINE AFTER    @E@@@@ .                II
)@@G@@  A SPECIFIC LINE         (PF$AMN)        @]@@@@ .          @^@@@@ .    IJ
)@@G@@    CALL IS       @A@@@@ .                  LX,U X10,PARAM  @C@@@@ .    IK
)@@G@@              LMJ  X11,(PF$AMR,PF$AMN)    @C@@@@ .             WHERE PARIL
)@@G@@AM IS FOLLOWING -       @E@@@@ .                  PARAM    +    PROC-NAMIM
)@@G@@E (2 WORDS)       @C@@@@ .                           +    LINE-#,0      IN
)@@G@@@E@@@@ .                           +    [LENGTH],BUF-ADDR         @G@@@@IO
)@@G@@ .                       WHERE LINE-# AND LENGTH (CHAR) ARE RETURNED    IP
)@@G@@@]@@@@ .          @C@@@@PF$AMR*.                      . $H PF$AMR       IQ
)@@G@@@A@@@@         SZ    A4             .     @A@@@@         J     $+2      IR
)@@G@@      .     @C@@@@PF$AMN*.                      . $H PF$AMN       @A@@@@IS
)@@G@@         L,U   A4,1           .     @E@@@@RNWS     S,H2  X11,RETURN     IT
)@@G@@. $P SAVE RETURN ADDR         @E@@@@         L     X8,X10         . $P SIU
)@@G@@AVE PARAM ADDR          @G@@@@         TNZ   PROCIN         . $T IS THERIV
)@@G@@E PROC HEADER IN CORE ?       @C@@@@         J     NOPROC         . $A YIW
)@@G@@ES NO,NOPROC@E@@@@         DL    A0,0,X8        . $P GET PROC NAME FROM IX
)@@G@@PARAM @G@@@@         DTE   A0,PNAME       . $T IS PROPER PROC HEADER IN IY
)@@G@@CORE ?      @C@@@@         J     NOPROC         . $A YES NO,NOPROC@E@@@@IZ
)@@G@@         L,H1  A1,2,X8        . $P GET LINE-# FROM PARAM    @G@@@@      JA
)@@G@@   TP    A1             . $T IS LINE-# BETWEEN 0 AND 2000?        @A@@@@JB
)@@G@@         J     NR10           .     @C@@@@         TG,U  A1,2001        JC
)@@G@@. $A YES NO,NR10  @E@@@@         J     NR10           . $T IS LINE-# = 0JD
)@@G@@ ?          @C@@@@         JZ    A1,NR5         . $A NO YES,NR5   @E@@@@JE
)@@G@@         L     R1,LNCNT       . $P GET # LINES AS INDEX CNT @E@@@@      JF
)@@G@@   L     A0,INDXAD      . $P GET ADDR OF INDEX BLOCK  @A@@@@         LXIJG
)@@G@@,U A0,1           .     @E@@@@         L,H1  A1,2,X8        . $P GET LINJH
)@@G@@E-# FROM PARAM    @G@@@@         SE,T1 A1,0,*A0       . $P SEARCH INDEX JI
)@@G@@BLOCK FOR LINE-# ENTRY  @E@@@@         J     NR9            . $T WAS IT JJ
)@@G@@FOUND ?           @C@@@@                              . $A YES NO,NR9   JK
)@@G@@@E@@@@         JN    A4,W1          . $T IS THIS WRITE FNC ?      @C@@@@JL
)@@G@@                              . $A NO YES,W1    @E@@@@NR2      TG,U  A4,JM
)@@G@@2           . $T IS THIS DELETE FNC ?     @C@@@@         J     D1       JN
)@@G@@      . $A NO YES,D1    @E@@@@         JZ    A4,NR3         . $T IS THISJO
)@@G@@ READ NEXT FNC ?  @C@@@@                              . $A YES NO,NR3   JP
)@@G@@@E@@@@         JGD   R1,NR4         . $T IS THERE ANOTHER INDEX   @C@@@@JQ
)@@G@@         J     NR11           . $A YES NO,NR11  @G@@@@NR3      AN,U  A0,JR
)@@G@@1           . $P RESET PTR TO THIS LINE-# KEY         @E@@@@NR4      L  JS
)@@G@@   A0,0,A0        . $P GET ADDR OF LINE         @A@@@@         LSSL  A0,JT
)@@G@@12          .     @A@@@@         SSL   A0,12          .     @A@@@@      JU
)@@G@@   LXI,U A0,1           .     @E@@@@         L,H1  A1,0,A0        . $P PJV
)@@G@@UT LINE-# INTO PARAM    @A@@@@         S,H1  A1,2,X8        .     @E@@@@JW
)@@G@@         A     A1,LNINC       . $P CALCULATE NEXT-LINE-#    @E@@@@      JX
)@@G@@   TG,U  A1,2001        . $T IS NEXT # < 2001         @E@@@@         L,UJY
)@@G@@   A1,2000        . $P SET NEXT # TO 2000       @E@@@@         S,H2  A1,JZ
)@@G@@2,X8        . $P PUT IT INTO PARAM        @E@@@@         L,H2  A2,0,*A0 KA
)@@G@@      . $P PUT LENGTH INTO PARAM    @A@@@@         S,H1  A2,3,X8        KB
)@@G@@.     @G@@@@         AN,U  A2,1           . $P CONVERT CHAR LENGTH TO WOKC
)@@G@@RD LENGTH   @A@@@@         SZ    A1             .     @A@@@@         DI,KD
)@@G@@U  A1,6           .     @A@@@@         A,U   A1,1           .     @A@@@@KE
)@@G@@         L     R1,A1          .     @E@@@@         L,H2  A1,3,X8        KF
)@@G@@. $P GET BUF-ADDR FROM PARAM  @A@@@@         LXI,U A1,1           .     KG
)@@G@@@C@@@@         BT    A1,0,*A0       . $P TRANSFER LINE@C@@@@         J  KH
)@@G@@   *RETURN        . $E RETURN       @E@@@@NR5      JNB   A4,NR11        KI
)@@G@@. $T IS THIS NEXT-LN FNC      @C@@@@                              . $A YKJ
)@@G@@ES NO,NR11  @G@@@@         TNZ   LNCNT          . $T ARE THERE ANY LINESKK
)@@G@@ IN PROC          @C@@@@         J     NR11           . $A YES NO,NR11  KL
)@@G@@@E@@@@         L     A0,INDXAD      . $P GET FIRST LINE INDEX     @E@@@@KM
)@@G@@         TE,U  A4,1           . $T IS FNC READ OR DELETE    @A@@@@      KN
)@@G@@   J     D3             .     @E@@@@         J     NR4            . $A RKO
)@@G@@EAD,NR4 DELETE,D3       @E@@@@NR9      JN    A4,W40         . $T IS THISKP
)@@G@@ WRITE FNC ?      @C@@@@                              . $A NO YES,W40   KQ
)@@G@@@E@@@@         L     R1,LNCNT       . $P GET # LINES AS INDEX CNT @E@@@@KR
)@@G@@         L     A0,INDXAD      . $P GET ADDR OF INDEX BLOCK  @A@@@@      KS
)@@G@@   LXI,U A0,1           .     @E@@@@         L,H1  A1,2,X8        . $P GKT
)@@G@@ET LINE-# FROM PARAM    @G@@@@         SG,T1 A1,0,*A0       . $P SEARCH KU
)@@G@@INDEX BLOCK FOR LINE-# > ENTRY@E@@@@         J     NR11           . $T WKV
)@@G@@AS IT FOUND ?           @E@@@@         J     NR2            . $A YES,NR2KW
)@@G@@ NO,NR11          @A@@@@NR10     L     A0,(-1)        .     @G@@@@      KX
)@@G@@   S,H1  A0,3,X8        . $P SET BAD LN # FLAG IN LENGTH IN PARAM @E@@@@KY
)@@G@@         JNB   A4,NR12        . $T IS THIS NEXT-LN FNC      @C@@@@      KZ
)@@G@@                        . $A YES NO,NR12  @G@@@@NR11     SZ,H1 3,X8     LA
)@@G@@      . $P PUT ZERO IN LENGTH OF PARAM          @E@@@@         L     A0,LB
)@@G@@LNNUM       . $P GET LAST LINE IN PROC    @E@@@@         A     A0,LNINC LC
)@@G@@      . $P INC TO NEXT LINE         @A@@@@         TG,U  A0,2001        LD
)@@G@@.     @A@@@@         L,U   A0,2000        .     @A@@@@         S,H2  A0,LE
)@@G@@2,X8        .     @C@@@@NR12     SZ,H1 2,X8           . $P ZERO LINE-#  LF
)@@G@@@C@@@@         J     *RETURN        . $E RETURN       @]@@@@ .          LG
)@@G@@@A@@@@ .                  ** PF$AMW **    @]@@@@ .          @C@@@@ .    LH
)@@G@@    ROUTINE TO WRITE A LINE TO THE FILE   @A@@@@ .             FOR A PARLI
)@@G@@TICULAR PROC@]@@@@ .          @^@@@@ .        CALL IS       @A@@@@ .    LJ
)@@G@@              LX,U X10,PARAM  @A@@@@ .                  LMJ  X11,PF$AMW LK
)@@G@@@C@@@@ .             WHERE PARAM IS FOLLOWING         @E@@@@ .          LL
)@@G@@        PARAM    +    PROC-NAME (2 WORDS)       @G@@@@ .                LM
)@@G@@           +    LINE-#,[NEXT-LINE-#]  (N-L-# RETURNED)@E@@@@ .          LN
)@@G@@                 +    LENGTH,BUF-ADDR           @]@@@@ .          @G@@@@LO
)@@G@@ .        THE ROUTINE CHECKS TO SEE IF LINE-# HAS BEEN PREVIOUSLY       LP
)@@G@@@G@@@@ .             ENTERED, AND IF SO REPLACES IT WITH THE NEW LINE   LQ
)@@G@@      @]@@@@ .          @C@@@@PF$AMW*.                      . $H PF$AMW LR
)@@G@@      @A@@@@         L     A4,(-1)        .     @C@@@@         J     RNWLS
)@@G@@S           . $J RNWS         @]@@@@ .          @E@@@@ .        THIS PARLT
)@@G@@T OF LOGIC HANDLES STORE OF LINE          @C@@@@ .             WHERE LINLU
)@@G@@E # ALREADY EXISTS      @]@@@@ .          @E@@@@W1       L     A2,LNCNT LV
)@@G@@      . $P DECREMENT LINE COUNT     @A@@@@         AN,U  A2,1           LW
)@@G@@.     @A@@@@         S     A2,LNCNT       .     @E@@@@         TG,U  A1,LX
)@@G@@1900        . $T IS LINE # < 1900 ?       @G@@@@         SLJ   LNWARN   LY
)@@G@@      . $W LNWARN - PRINT MAX LINE WARNING      @A@@@@         AN,U  A0,LZ
)@@G@@1           .     @E@@@@         L     R3,A0          . $P SAVE INDEX ADMA
)@@G@@DR FOR LINE @E@@@@         L     A0,0,A0        . $P GET ADDR OF OLD LINMB
)@@G@@E     @A@@@@         LSSL  A0,12          .     @A@@@@         SSL   A0,MC
)@@G@@12          .     @A@@@@         L     A5,A0          .     @E@@@@      MD
)@@G@@   L,H1  A2,3,X8        . $P GET NEW LINE LENGTH      @E@@@@         A,UME
)@@G@@   A2,5           . $P ADD WORD FOR HEADER      @A@@@@         SZ    A1 MF
)@@G@@            .     @G@@@@         DI,U  A1,6           . $P CONVERT LENGTMG
)@@G@@H TO WORD LENGTH        @A@@@@         A,U   A1,1           .     @E@@@@MH
)@@G@@         L,H2  A3,0,A0        . $P GET OLD LINE LENGTH      @E@@@@      MI
)@@G@@   A,U   A3,5           . $P ADD WORD FOR HEADER      @A@@@@         SZ MJ
)@@G@@   A2             .     @G@@@@         DI,U  A2,6           . $P CONVERTMK
)@@G@@ LENGTH TO WORD LENGTH        @A@@@@         A,U   A2,1           .     ML
)@@G@@@G@@@@         TNE   A1,A2          . $T ARE OLD & NEW WORD LENGTHS EQUAMM
)@@G@@L ?   @C@@@@         J     W54            . $A NO YES,W54   @G@@@@      MN
)@@G@@   TG    A1,A2          . $T WILL NEW LINE FIT IN OLD SPACE ?     @C@@@@MO
)@@G@@         J     W3             . $A YES NO,W3    @G@@@@         AN    A2,MP
)@@G@@A1          . $P CALCULATE EXTRA SPACE SIZE AND LOC   @A@@@@         AU MQ
)@@G@@   A2,A5          .     @G@@@@         SLJ   ADDSTK         . $W ADDSTK MR
)@@G@@- PUT EXTRA SPACE ON AVAIL STK@C@@@@         J     W54            . $J WMS
)@@G@@54          @G@@@@W3       L     A3,A5          . $P GET SIZE AND LOC OFMT
)@@G@@ OLD LINE         @G@@@@         SLJ   ADDSTK         . $W ADDSTK - PUT MU
)@@G@@SPACE ON AVAIL STACK    @C@@@@         J     W50            . $J W50    MV
)@@G@@      @]@@@@ .          @C@@@@ADDSTK   +     0              . $H ADDSTK MW
)@@G@@      @A@@@@         SZ    A4             .     @A@@@@         L     R1,MX
)@@G@@AVCNT       .     @E@@@@         L     X10,(1,AVSTK)  . $P SET PTR TO AVMY
)@@G@@AIL STACK   @E@@@@         SE,T1 A4,0,*X10      . $P FIND EMPTY SLOT ON MZ
)@@G@@STACK @A@@@@         J     ADD2           .     @A@@@@         AN,U  X10NA
)@@G@@,1          .     @A@@@@         J     ADD3           .     @A@@@@ADD2  NB
)@@G@@   L     A4,AVCNT       .     @A@@@@         TG,U  A4,500         .     NC
)@@G@@@A@@@@         J     *ADDSTK        .     @A@@@@         A,U   A4,1     ND
)@@G@@      .     @A@@@@         S     A4,AVCNT       .     @E@@@@ADD3     S  NE
)@@G@@   A3,0,X10       . $P PUT ENTRY INTO STACK     @A@@@@         S,T1  A2,NF
)@@G@@0,X10       .     @C@@@@         J     *ADDSTK        . $E RETURN       NG
)@@G@@@]@@@@ .          @E@@@@ .        THIS SECTION OF LOGIC HANDLES WRITE FNNH
)@@G@@C           @C@@@@ .             FOR THE CASE OF A NEW LINE-#     @]@@@@NI
)@@G@@ .          @E@@@@W40      TG,U  A1,1900        . $T IS LINE-# < 1900 ? NJ
)@@G@@      @G@@@@         SLJ   LNWARN         . $W LNWARN - PRINT MAX LN WARNK
)@@G@@NING        @E@@@@         L     A0,LNCNT       . $P GET # LINES AS INDENL
)@@G@@X CNT @A@@@@         SZ    A4             .     @G@@@@         TG,U  A0,NM
)@@G@@PRMXLN      . $T HAVE MAX # LINES BEEN INPUT          @C@@@@         J  NN
)@@G@@   NR10           . $A NO YES,NR10  @A@@@@         L     R1,A0          NO
)@@G@@.     @E@@@@         L     A0,INDXAD      . $P GET START OF INDEX BLOCK NP
)@@G@@@G@@@@         LXI,U A0,1           . $P SEARCH INDEX BLOCK FOR INSERT PNQ
)@@G@@OINT  @E@@@@         SG,T1 A1,0,*A0       . $T IS IT AT END OF BLOCK ?  NR
)@@G@@@C@@@@         J     W41            . $A NO YES,W41   @E@@@@         A  NS
)@@G@@   A0,R1          . $P GET END OF INDEX BLOCK   @G@@@@         LXI,U A0,NT
)@@G@@-1          . $P SET INDICES TO SHIFT INDEX BLOCK     @A@@@@         L  NU
)@@G@@   X9,A0          .     @A@@@@         AN,U  X9,1           .     @E@@@@NV
)@@G@@         L     A2,R1          . $P GET SHIFT COUNT          @A@@@@      NW
)@@G@@   A,U   A2,1           .     @A@@@@         L     R1,A2          .     NX
)@@G@@@G@@@@         BT    A0,0,*X9       . $P SHIFT INDEX BLOCK TO ALLOW NEW NY
)@@G@@ENTRY @A@@@@W41      L     R3,A0          .     @G@@@@W50      L,H1  A1,NZ
)@@G@@3,X8        . $P GET LINE LENGTH FROM PARAM           @E@@@@         A,UOA
)@@G@@   A1,5           . $P ALLOW FOR HEADER WORD    @A@@@@         SZ    A0 OB
)@@G@@            .     @G@@@@         DI,U  A0,6           . $P CONVERT LENGTOC
)@@G@@H TO WORD LENGTH        @A@@@@         A,U   A0,1           .     @G@@@@OD
)@@G@@         TNZ   AVCNT          . $T IS THERE VACANT ALLOCATED SPACE ?    OE
)@@G@@@C@@@@         J     W52            . $A YES NO,W52   @A@@@@         L  OF
)@@G@@   R1,AVCNT       .     @G@@@@         L     A1,(1,AVSTK)   . $P SET PTROG
)@@G@@ TO AVAIL SPACE STACK         @G@@@@         SE,T1 A0,0,*A1       . $T IOH
)@@G@@S THERE VACANT SPACE OF NEEDED SIZE?@C@@@@         J     W51            OI
)@@G@@. $A YES NO,W51   @A@@@@         AN,U  A1,1           .     @G@@@@      OJ
)@@G@@   L     A2,0,A1        . $P GET VACANT SPACE ENTRY FROM STACK    @E@@@@OK
)@@G@@         SZ    0,A1           . $P CLEAR STACK ENTRY        @G@@@@      OL
)@@G@@   LSSL  A2,12          . $P GET RELATIVE WORD ADDR OF SPACE      @A@@@@OM
)@@G@@         SSL   A2,12          .     @C@@@@         J     W53            ON
)@@G@@. $J W53          @A@@@@W51      L     R1,AVCNT       .     @G@@@@      OO
)@@G@@   L     A1,(1,AVSTK)   . $P SET PTR TO AVAIL SPACE STACK         @G@@@@OP
)@@G@@         SG,T1 A0,0,*A1       . $T IS THERE ENTRY WITH ENOUGH SPACE ?   OQ
)@@G@@@C@@@@         J     W52            . $A YES NO,W52   @A@@@@         AN,OR
)@@G@@U  A1,1           .     @E@@@@         L,T1  A4,0,A1        . $P GET # WOS
)@@G@@ORDS VACANT       @A@@@@         AN    A4,A0          .     @G@@@@      OT
)@@G@@   L     A2,0,A1        . $P GET REL WORD ADDR OF VACANT SPACE    @A@@@@OU
)@@G@@         LSSL  A2,12          .     @A@@@@         SSL   A2,12          OV
)@@G@@.     @A@@@@         AU    A2,A0          .     @G@@@@         S     A3,OW
)@@G@@0,A1        . $P UPDATE AVAIL STK ENTRY TO GIVE LEFT  @E@@@@         S,TOX
)@@G@@1  A4,0,A1        . $  OVER VACANT SPACE        @C@@@@         J     W53OY
)@@G@@            . $J W53          @G@@@@W52      L     A2,NXTADR      . $P GOZ
)@@G@@ET NEXT UNALLOCATED SPACE FOR PROC  @G@@@@         TNZ   NXTADR         PA
)@@G@@. $T HAS NEW SPACE BUFFER BEEN GOTTEN     @C@@@@         J     W521     PB
)@@G@@      . $A YES NO,W521  @G@@@@         AU    A2,A0          . $P GET ENDPC
)@@G@@ OF NEW LINE IN THIS BUFFER   @E@@@@         TG    A3,LSTADR      . $T WPD
)@@G@@ILL LINE FIT IN BUFFER  @C@@@@         J     W521           . $A YES NO,PE
)@@G@@W521  @E@@@@         S     A3,NXTADR      . $P SAVE NEXT NEW ADDR       PF
)@@G@@@C@@@@         J     W53            . $J W53          @E@@@@W521     L  PG
)@@G@@   A3,A0          . $P SAVE NEW LINE LENGTH     @E@@@@         L     A0,PH
)@@G@@LAST$D      . $P MCORE NEW SPACE BUFFER   @A@@@@         A,U   A0,1     PI
)@@G@@      .     @A@@@@         L     A2,A0          .     @A@@@@         A,UPJ
)@@G@@   A0,512         .     @G@@@@         S     A0,LSTADR      . $P SAVE ENPK
)@@G@@D ADDR OF NEW BUFFER          @A@@@@         AN,U  A0,1           .     PL
)@@G@@@A@@@@         S     A0,LAST$D      .     @A@@@@         ER    MCORE$   PM
)@@G@@      .     @E@@@@         L     A0,A3          . $P RESTORE NEW LINE LEPN
)@@G@@NGTH  @G@@@@         AU    A2,A0          . $P GET END OF NEW LINE IN THPO
)@@G@@IS BUFFER   @E@@@@         S     A3,NXTADR      . $P SAVE NEXT NEW ADDR PP
)@@G@@      @G@@@@W53      L     X9,R3          . $P GET INDEX ENTRY ADDR FOR PQ
)@@G@@LINE        @E@@@@         S     A2,0,X9        . $P SAVE ADDR IN INDEX PR
)@@G@@      @E@@@@         L,H1  A1,2,X8        . $P GET LINE-# FROM PARAM    PS
)@@G@@@E@@@@         S,T1  A1,0,X9        . $P SAVE LINE # IN INDEX     @A@@@@PT
)@@G@@         L     A0,A2          .     @A@@@@W54      LXI,U A0,1           PU
)@@G@@.     @E@@@@         L,H1  A1,2,X8        . $P GET LINE-# FROM PARAM    PV
)@@G@@@E@@@@         S,H1  A1,0,A0        . $P SAVE IT IN LINE HEADER   @G@@@@PW
)@@G@@         TG    A1,LNNUM       . $T IS IT LESS THAN LAST-LINE-# ?        PX
)@@G@@@E@@@@         S     A1,LNNUM       . $P SAVE IT AS LAST-LINE-#   @E@@@@PY
)@@G@@         A     A1,LNINC       . $P INCREMENT LINE #         @E@@@@      PZ
)@@G@@   TG,U  A1,2001        . $T IS NEXT # < 2001         @E@@@@         L,UQA
)@@G@@   A1,2000        . $P SET NEXT # TO 2000       @G@@@@         S,H2  A1,QB
)@@G@@2,X8        . $P PUT IT IN NEXT-LINE-# OF PARAM       @E@@@@         L,HQC
)@@G@@1  A2,3,X8        . $P GET LENGTH FROM PARAM    @E@@@@         S,H2  A2,QD
)@@G@@0,*A0       . $P SAVE IT IN LINE HEADER   @G@@@@         AN,U  A2,1     QE
)@@G@@      . $P CONVERT CHAR LENGTH TO WORD LENGTH   @A@@@@         SZ    A1 QF
)@@G@@            .     @A@@@@         DI,U  A1,6           .     @A@@@@      QG
)@@G@@   A,U   A1,1           .     @G@@@@         L     R1,A1          . $P SQH
)@@G@@AVE IT FOR TRANSFER COUNT           @E@@@@         L,H2  X9,3,X8        QI
)@@G@@. $P GET BUF-ADDR FROM PARAM  @A@@@@         LXI,U X9,1           .     QJ
)@@G@@@G@@@@         BT    A0,0,*X9       . $P TRANSFER LINE TO BLOCK BUFFER  QK
)@@G@@      @A@@@@         L     A1,LNCNT       .     @E@@@@         A,U   A1,QL
)@@G@@1           . $P INCREMENT LINE COUNT     @A@@@@         S     A1,LNCNT QM
)@@G@@      .     @C@@@@         J     *RETURN        . $E RETURN       @]@@@@QN
)@@G@@ .          @A@@@@ .                  ** PF$AMD **    @]@@@@ .          QO
)@@G@@@C@@@@ .        ROUTINE TO DELETE A LINE FROM PS$FILE @]@@@@ .          QP
)@@G@@@^@@@@ .        CALL IS       @A@@@@ .                  LX,U X10,PARAM  QQ
)@@G@@@C@@@@ .                  LMJ  X11,PF$AMD  (PF$AMDN)  @C@@@@ .          QR
)@@G@@   WHERE PARAM IS FOLLOWING -       @E@@@@ .                  PARAM     QS
)@@G@@+    PROC-NAME (2WORDS)       @E@@@@ .                            +    LQT
)@@G@@INE-#,[NEXT-LINE-#]     @]@@@@ .          @C@@@@PF$AMD*.                QU
)@@G@@      . $H PF$AMD       @C@@@@         L,U   A4,2           . $P SET FLAQV
)@@G@@G     @C@@@@         J     RNWS           . $J RNWS         @C@@@@PF$AMDQW
)@@G@@N*.                     . $H PF$AMDN      @C@@@@         L,U   A4,3     QX
)@@G@@      . $P SET FLAG     @C@@@@         J     RNWS           . $J RNWS   QY
)@@G@@      @E@@@@D1       TE,U  A4,2           . $T IS THIS DEL NEXT FNC ?   QZ
)@@G@@@C@@@@         J     D2             . $A NO YES,D2    @G@@@@         AN,RA
)@@G@@U  A0,1           . $P RESET TO INDEX ENTRY FOR THIS LINE   @A@@@@      RB
)@@G@@   ANU,U A0,1           .     @A@@@@         SZ    A5             .     RC
)@@G@@@A@@@@         TG    A1,INDXAD      .     @E@@@@         L,T1  A5,0,A1  RD
)@@G@@      . $P GET PRIOR LINE #         @A@@@@         LSSL  A5,18          RE
)@@G@@.     @E@@@@         A,H1  A5,2,X8        . $P SAVE THIS LINE #         RF
)@@G@@@C@@@@         J     D10            . $J D10          @E@@@@D2       JGDRG
)@@G@@   R1,D10         . $T IS THERE ANOTHER INDEX   @C@@@@         J     NR1RH
)@@G@@1           . $A YES NO,NR11  @E@@@@D3       L     A5,2,X8        . $P SRI
)@@G@@AVE LINE # AND NEXT #   @E@@@@D10      L     A2,LNCNT       . $P DECREMERJ
)@@G@@NT INDEX KEY CNT  @A@@@@         AN,U  A2,1           .     @A@@@@      RK
)@@G@@   S     A2,LNCNT       .     @E@@@@         L     A3,0,A0        . $P SRL
)@@G@@AVE INDEX KEY           @A@@@@         L     A1,R1          .     @E@@@@RM
)@@G@@         SZ    R2             . $P GET ACTUAL NEXT LINE #   @A@@@@      RN
)@@G@@   TZ    A1             .     @A@@@@         L,T1  R2,1,A0        .     RO
)@@G@@@G@@@@         L     X9,A0          . $P SET INDICES FOR KEY TRANSFER   RP
)@@G@@      @A@@@@         A,U   X9,1           .     @E@@@@         BT    A0,RQ
)@@G@@0,*X9       . $P PACK INDEX KEY BLOCK     @C@@@@         LSSL  A3,12    RR
)@@G@@      . $P GET WORD ADDR@A@@@@         SSL   A3,12          .     @A@@@@RS
)@@G@@         L     A0,A3          .     @E@@@@         L,H2  A2,0,A0        RT
)@@G@@. $P GET LINE CHAR LENGTH     @E@@@@         A,U   A2,5           . $P ARU
)@@G@@DD HEADER WORD          @A@@@@         SZ    A1             .     @G@@@@RV
)@@G@@         DI,U  A1,6           . $P CONVERT LENGTH TO WORD LENGTH        RW
)@@G@@@A@@@@         A,U   A1,1           .     @A@@@@         L     A2,A1    RX
)@@G@@      .     @G@@@@         SLJ   ADDSTK         . $W ADDSTK - PUT ENTRY RY
)@@G@@ON AVAIL STACK    @E@@@@         S     A5,2,X8        . $P SET LINE #, NRZ
)@@G@@EXT #       @G@@@@         S,H1  R2,3,X8        . $P STORE ACTUAL NEXT LSA
)@@G@@N # IN PARAM      @C@@@@         J     *RETURN        . $E RETURN       SB
)@@G@@@]@@@@ .          @A@@@@ .                  ** PF$AMQ **    @]@@@@ .    SC
)@@G@@      @C@@@@ .        ROUTINE TO RESET LINE INCREMENT       @]@@@@ .    SD
)@@G@@      @^@@@@ .        CALL IS       @C@@@@ .                  L    A0,NESE
)@@G@@W-INCREMENT       @A@@@@ .                  LMJ  X11,PF$AMQ @]@@@@ .    SF
)@@G@@      @C@@@@PF$AMQ*.                      . $H PF$AMQ       @E@@@@      SG
)@@G@@   S     A0,LNINC       . $P RESET INCREMENT          @C@@@@         J  SH
)@@G@@   0,X11          . $E RETURN       @]@@@@ .          @E@@@@ .        THSI
)@@G@@E FOLLOWING ROUTINES PRODUCE MESSAGES ON        @C@@@@ .             DETSJ
)@@G@@ECTION OF CERTAIN CONDITIONS  @]@@@@ .          @E@@@@ .        1.   PROSK
)@@G@@C NOT INITIALIZED BEFORE R/W ATTEMPTED    @]@@@@ .          @C@@@@NOPROCSL
)@@G@@.                       . $H NOPROC       @E@@@@         E$DIT PREPKT   SM
)@@G@@      . $P SET UP ERROR MESSAGE     @A@@@@         E$COPY 5,NPM1        SN
)@@G@@.     @A@@@@         DL    A0,0,X8        .     @A@@@@         LMJ   X11SO
)@@G@@,EFD2$      .     @A@@@@         E$COPY 42,NPM2       .     @A@@@@      SP
)@@G@@   E$DITX               .     @E@@@@         P$RINT (PF 1,10,PREBUF) . $SQ
)@@G@@P PRINT MESSAGE         @C@@@@         ER    EXIT$          . $E TERMINASR
)@@G@@TE    @]@@@@ .          @E@@@@ .        2.   PROC LINE # > 1900 ENCOUNTESS
)@@G@@RED, PRINT WARNING@]@@@@ .          @C@@@@LNWARN   +     0              ST
)@@G@@. $H LNWARN       @E@@@@         TZ    MAXLN          . $T IS THIS FIRSTSU
)@@G@@ VIOLATION ?@E@@@@         J     *LNWARN        . $E RETURN WITH NO MESSSV
)@@G@@AGE   @A@@@@         L     R1,A0          .     @E@@@@         L,U   A0,SW
)@@G@@1           . $P SET MESSAGE-PRINTED FLAG @A@@@@         S     A0,MAXLN SX
)@@G@@      .     @E@@@@         P$RINT (PF 1,10,LWM1) . $P PRINT WARNING MESSSY
)@@G@@AGE   @A@@@@         L     A0,R1          .     @C@@@@         J     *LNSZ
)@@G@@WARN        . $E RETURN       @]@@@@ .          @E@@@@ .        3.   MORTA
)@@G@@E THAN 25 PROCS HAVE BEEN INPUT           @]@@@@ .          @C@@@@MAXPROTB
)@@G@@C.                      . $H MAXPROC      @E@@@@         SZ    0,X8     TC
)@@G@@      . $P ZERO OUT PROC NAME       @C@@@@         P$RINT (PF 1,8,MPM1) TD
)@@G@@. $P PRINT MESSAGE@A@@@@         L     X9,(3,PNMLST)  .     @A@@@@      TE
)@@G@@   L,U   A5,4           .     @G@@@@MP1      E$DIT PREPKT         . $P PTF
)@@G@@RINT OUT ALL PROC NAMES, 5 PER LINE @A@@@@         L,U   A4,4           TG
)@@G@@.     @A@@@@MP2      L     A0,A4          .     @A@@@@         MSI,U A0,TH
)@@G@@15          .     @A@@@@         LMJ   X11,ECOL$      .     @A@@@@      TI
)@@G@@   DL    A0,0,*X9       .     @A@@@@         LMJ   X11,EFD2$      .     TJ
)@@G@@@A@@@@         JGD   A4,MP2         .     @A@@@@         E$DITX         TK
)@@G@@      .     @A@@@@         P$RINT (PF 1,12,PREBUF) .  @A@@@@         JGDTL
)@@G@@   A5,MP1         .     @E@@@@         J     *RETURN        . $E RETURN TM
)@@G@@CONTROL TO USER   @]@@@@$(4).       @A@@@@ .        GENERAL STORAGE     TN
)@@G@@      @A@@@@RETURN   +     0              .     @^@@@@ .        FLAGS   TO
)@@G@@      @A@@@@PROCIN   +     0              .     @A@@@@MAXLN    +     0  TP
)@@G@@            .     @A@@@@PNAD     +     0              .     @A@@@@ALLWRDTQ
)@@G@@   +     0              .     @A@@@@NXTADR   EQUF  ALLWRD,,H1     .     TR
)@@G@@@A@@@@LSTADR   EQUF  ALLWRD,,H2     .     @A@@@@PCNT     +     0        TS
)@@G@@      .     @A@@@@PNMLST   RES   125            .     @A@@@@PRCPKT*  RESTT
)@@G@@   5              .     @A@@@@PNAME    EQUF  PRCPKT         .     @A@@@@TU
)@@G@@PNUM     EQUF  PRCPKT+2,,S1    .    @A@@@@PFLAG    EQUF  PRCPKT+2,,S3   TV
)@@G@@ .    @A@@@@TBLAD    EQUF  PRCPKT+2,,H2    .    @A@@@@LNCNT    EQUF  PRCTW
)@@G@@PKT+3,,H1    .    @A@@@@INDXAD   EQUF  PRCPKT+3,,H2    .    @A@@@@LNINC TX
)@@G@@   EQUF  PRCPKT+4,,H1    .    @A@@@@LNNUM    EQUF  PRCPKT+4,,H2    .    TY
)@@G@@@A@@@@AVCNT    +     0              .     @A@@@@AVSTK    RES   500      TZ
)@@G@@      .     @C@@@@ .        EDIT PACKET FOR PROC MESSAGES         @A@@@@UA
)@@G@@PREPKT*  E$PKT 22,PREBUF      .     @A@@@@PREBUF*  RES   22             UB
)@@G@@.     @A@@@@ .        ERROR AND WARNING MESSAGES@A@@@@NPM1     'PROC '  UC
)@@G@@            .     @E@@@@NPM2     ' WAS NOT INITIALIZED PRIOR TO READ/WRIUD
)@@G@@TE' .       @G@@@@LWM1     'WARNING: LINE NUMBERS GREATER THAN 2000 ARE UE
)@@G@@NOT ALLOWED. ' .  @E@@@@MPM1     'MAXIMUM OF 25 PROCS HAVE ALREADY BEEN UF
)@@G@@INPUT: ' .  @A@@@@         END                  .     ___KEY CNT  @A@@@@UG
)@@G@@         AN,U  A2,1     *[@@@@*SDFF*@^@@@@          AXR$          @^@@@@UH
)@@G@@$(4)      LIT.          @]@@@@$(1).       @]@@@@.           @E@@@@.     UI
)@@G@@    THIS ROUTINE WILL READ RECORDS FROM D$FILE        @C@@@@.           UJ
)@@G@@   AND WRITE THEM TO T$FILE         @]@@@@.           @C@@@@BLDT$F*     UK
)@@G@@                          . $H      @E@@@@          SX        X11,SAVEX1UL
)@@G@@1       . $P SAVE RETURN ADDR @E@@@@          DL        A0,USENME       UM
)@@G@@  . $P GET FILE NAME    @E@@@@          DS        A0,NAMED2         . $PUN
)@@G@@ GIVE IT TO DF$AMR@E@@@@RDLOOP                                . $H READ UO
)@@G@@LOOP        @E@@@@          LX,U      X10,RDA           . $P GET RDA    UP
)@@G@@ADDR  @E@@@@          LMJ       X11,DF$AMR        . $P READ A RECORD    UQ
)@@G@@@C@@@@          LA        A0,(+0777777777777) .       @G@@@@          TNUR
)@@G@@E       A0,RDA            . $T SEE IF END OF D$FILE         @E@@@@      US
)@@G@@    J         ENDIT             . $A YES,ENDIT NO     @G@@@@          TZUT
)@@G@@        FIRST             . $T IS IT A FIRST RECORD         @E@@@@      UU
)@@G@@    SLJ       FIRSTLN           . $W PERFORM SPEC CHK @E@@@@          LAUV
)@@G@@        A0,R3             . $P GET RECORD LENGTH@G@@@@          SA      UW
)@@G@@  A0,TFPKT          . $P BUILD TF$AM PACKET           @E@@@@          LXUX
)@@G@@,U      X10,TFPKT         . $P GET PKT ADDR     @E@@@@          LMJ     UY
)@@G@@  X11,TF$SQW        . $P WRITE TO T$FILE  @E@@@@          J         RDLOUZ
)@@G@@OP            . $J NXT ONE          @C@@@@ENDIT                         VA
)@@G@@        . $H      @E@@@@          LX        X11,SAVEX11       . $P GET RVB
)@@G@@ETURN ADDR  @E@@@@          J         0,X11             . $J RETURN     VC
)@@G@@      @G@@@@FIRSTLN   +0                          . $H ROUTINE TO CHK FOVD
)@@G@@R ART KEY   @E@@@@          SZ        FIRST             . $P RESET SW   VE
)@@G@@      @F@@@@          TZ        RDA               . $T IS IT A SPEC RECOVF
)@@G@@RD    @E@@@@          J         *FIRSTLN           . $A YES NO,*RETURN  VG
)@@G@@@F@@@@          LA        A0,RDA+1          . $P GET THE RECORD HDR     VH
)@@G@@@E@@@@          TE        A0,(+077,0,2)     . $T AN ART KEY       @E@@@@VI
)@@G@@          J         *FIRSTLN          . $A YES NO,RETURN    @E@@@@      VJ
)@@G@@    LA        A0,RDA+2          . $P GET THE ART KEY  @E@@@@          SAVK
)@@G@@        A0,ARTKEY         . $P SET IT           @E@@@@          J       VL
)@@G@@  RDLOOP            . $J NXT RECORD       @]@@@@$(4).       @]@@@@FIRST VM
)@@G@@    +1@A@@@@TFPKT     +0        . T$FILE PACKET @^@@@@          +RDA    VN
)@@G@@      @]@@@@          +0@]@@@@SAVEX11   +0@^@@@@          END           VO
)@@G@@___CS)  A0,RDA+2          . $P GET THE ART KEY  @E@@@@          SA      VP
)@@G@@  A0,ARTKEY         . $P*[@@@@*SDFF*@]@@@@ .          @A@@@@ .          VQ
)@@G@@        ** GETVAR **    @]@@@@ .          @E@@@@ .        COMMON ROUTINEVR
)@@G@@ FOR EDITOR WORKER ROUTINES         @E@@@@ .        IT IS PASSED THE ADDVS
)@@G@@R OF A SYMBOL TABLE ENTRY     @A@@@@ .             AND AN INDEX VALUE   VT
)@@G@@@E@@@@ .        AND RETURNS THE ABSOLUTE CORE LOCATION OF         @A@@@@VU
)@@G@@ .             THE VARIABLE         @]@@@@ .          @^@@@@ .        CAVV
)@@G@@LL IS:      @A@@@@ .                  SLJ  GETVAR     @^@@@@ .          VW
)@@G@@   WITH     @E@@@@ .                  X10 - SYMBOL TABLE ENTRY ADDR     VX
)@@G@@      @C@@@@ .                  A0  - BINARY INDEX VALUE    @C@@@@ .    VY
)@@G@@                    OR 0 IF NO INDEX      @^@@@@ .             ON RETURNVZ
)@@G@@@E@@@@ .                  A0 - CHARACTER LENGTH OF ITEM           @E@@@@WA
)@@G@@ .                  A1 - ABSOLUTE WORD ADDR OF ITEM         @C@@@@ .    WB
)@@G@@                   OR ERROR CODE          @E@@@@ .                  A2 -WC
)@@G@@ CHARACTER OFFSET (1 - 6)           @C@@@@ .                  A3 - TYPE WD
)@@G@@-  1 - PIC X      @C@@@@ .                               2 - PIC 9      WE
)@@G@@@C@@@@ .                               3 - PIC 9 COMP @E@@@@ .          WF
)@@G@@        X10 - SYMBOL TABLE ENTRY ADDR           @]@@@@ .          @E@@@@WG
)@@G@@ .        IF ERROR CODE, BIT 35 OF A1 WILL BE SET,          @C@@@@ .    WH
)@@G@@         BITS 34 - 0 WILL CONTAIN:        @E@@@@ .                  0 - WI
)@@G@@VALUE NOT DEFINED IN CORE           @E@@@@ .                  1 - INVALIWJ
)@@G@@D ITEM (I.E. SET NAME)        @C@@@@ .                  2 - INVALID INDEWK
)@@G@@X VALUE     @]@@@@ .          @A@@@@ .                  ** GETVAR **    WL
)@@G@@@]@@@@ .          @^@@@@         AXR$.          @^@@@@$(2)     LIT.     WM
)@@G@@      @]@@@@$(1).       @]@@@@ .          @C@@@@GETVAR*  +     0        WN
)@@G@@      . $H GETVAR       @E@@@@         TNZ   X10            . $T IS SYM WO
)@@G@@TBL ADDR ZERO ?   @C@@@@         J     SYMERR         . $A NO YES,SYMERRWP
)@@G@@@E@@@@         TP    A0             . $T IS INDEX POSITIVE ?      @C@@@@WQ
)@@G@@         J     INDERR         . $A YES NO,INDERR@C@@@@         L,S4  A3,WR
)@@G@@0,X10       . $P GET TYPE     @E@@@@         TNZ   TYPE,A3        . $T IWS
)@@G@@S TYPE UNDEFINED PIC ?  @C@@@@         J     UNDEF          . $A NO YES,WT
)@@G@@UNDEF @E@@@@         TG,U  A3,021         . $T IS THIS OCCURS SUBITEM ? WU
)@@G@@@C@@@@         J     SUBOCC         . $A NO YES,SUBOCC@E@@@@         TG,WV
)@@G@@U  A3,016         . $T IS THIS DEFINED ITEM ?   @C@@@@         J     ITEWW
)@@G@@M           . $A NO YES,ITEM  @G@@@@         TG,U  A3,7           . $T IWX
)@@G@@S THIS OCCURS OR ARRAY ITEM ?       @C@@@@         J     OCCURS         WY
)@@G@@. $A NO YES,OCCURS@E@@@@         TNE,U A3,1           . $T IS THIS SET NWZ
)@@G@@AME ?       @C@@@@         J     SYMERR         . $A NO YES,SYMERR@G@@@@XA
)@@G@@ITEM     TG,U  A0,2           . $T IS INDEX OTHER THAN 0 OR 1 ?         XB
)@@G@@@C@@@@         J     INDERR         . $A NO YES,INDERR@E@@@@         L,UXC
)@@G@@   A0,1           . $P SET INDEX TO 1           @C@@@@         J     FORXD
)@@G@@M1          . $J FORM1        @C@@@@OCCURS   TNZ   A0             . $T IXE
)@@G@@S INDEX 0 ? @C@@@@         J     INDERR         . $A NO YES,INDERR@E@@@@XF
)@@G@@         L,T3  A1,2,X10       . $P GET HIGH # OCCURS VALUE  @A@@@@      XG
)@@G@@   AND,U A1,07777       .     @E@@@@         TLE   A2,A0          . $T IXH
)@@G@@S INDEX WITHIN RANGE ?  @C@@@@         J     INDERR         . $A YES NO,XI
)@@G@@INDERR@C@@@@FORM1    SLJ   HEADER         . $W HEADER       @E@@@@      XJ
)@@G@@   TG    A1,SA1         . $T IS ADDR WITHIN RECORD ?  @C@@@@         J  XK
)@@G@@   SIZERR         . $A YES NO,SIZERR@E@@@@         L     A2,A3          XL
)@@G@@. $P PUT CHAR OFFSET IN A2    @C@@@@         L,S4  A3,0,X10       . $P GXM
)@@G@@ET ITEM TYPE@E@@@@         L     A3,TYPE,A3     . $P CONVERT IT TO RETURXN
)@@G@@N TYPE@A@@@@         J     *GETVAR        . $E  @]@@@@ .          @C@@@@XO
)@@G@@SUBOCC   TNZ   A0             . $T IS INDEX 0 ? @C@@@@         J     INDXP
)@@G@@ERR         . $A NO YES,INDERR@E@@@@         L,H2  A2,C14         . $P GXQ
)@@G@@ET C14 BASE ADDR        @G@@@@         L     A1,1,X10       . $P GET OCCXR
)@@G@@-LINK TO OCCURS ITEM          @E@@@@         TN    A1             . $T IXS
)@@G@@S OCCURS ITEM IN C14 ?  @E@@@@         L,H2  A2,C15         . $P GET C15XT
)@@G@@ BASE ADDR        @A@@@@         LSSL  A1,1           .     @A@@@@      XU
)@@G@@   SSL   A1,19          .     @G@@@@         A     A2,A1          . $P GXV
)@@G@@ET ABS ADDR OF OCCURS ITEM ENTRY    @E@@@@         S     X10,SX10       XW
)@@G@@. $P SAVE SUB ITEM ENTRY ADDR @E@@@@         L     X10,A2         . $P SXX
)@@G@@ET PTR TO OCCURS ITEM   @E@@@@         L,T3  A1,2,X10       . $P GET HIGXY
)@@G@@H # OCCURS VALUE  @A@@@@         AND,U A1,07777       .     @E@@@@      XZ
)@@G@@   TLE   A2,A0          . $T IS INDEX WITHIN RANGE ?  @C@@@@         J  YA
)@@G@@   INDERR         . $A YES NO,INDERR@G@@@@         SLJ   HEADER         YB
)@@G@@. $W HEADER - GET LOCATION OF OCCURS IN CR@G@@@@         L     X10,SX10 YC
)@@G@@      . $P RESET PTR TO SUB OCCURS ITEM ENTRY   @D@[@@         L     A2,YD
)@@G@@A0          . $P SAVE CHAR LENGTH   @G@@@@         L,T1  A0,0,X10       YE
)@@G@@. $P GET CHAR DISP OF SUB IN OCCURS       @A@@@@         LSSL  A0,24    YF
)@@G@@      .     @A@@@@         SSL   A0,24          .     @G@@@@         A  YG
)@@G@@   A3,A0          . $P ADD IT TO OFF SET, START OF OCCURS   @E@[@@      YH
)@@G@@   L     A0,A2          . $P RESTORE CHAR LENGTH      @D@@@[         L,TYI
)@@G@@3  A0,0,X10       . $P GET CHAR LENGTH    @A@@@[         LSSL  A0,24    YJ
)@@G@@      .     @A@@@[         SSL   A0,24          .     @G@@@@         AN,YK
)@@G@@U  A3,2           . $P CONVERT OFF SET TO WORDS + OFF SET   @A@@@@      YL
)@@G@@   SZ    A2             .     @A@@@@         DI,U  A2,6           .     YM
)@@G@@@E@@@@         A     A1,A2          . $P ADJUST ABS WORD ADDR     @E@@@@YN
)@@G@@         TG    A1,SA1         . $T IS ADDR WITHIN RECORD ?  @C@@@@      YO
)@@G@@   J     SIZERR         . $A YES NO,SIZERR@E@@@@         A,U   A3,1     YP
)@@G@@      . $P SET CHAR OFFSET          @A@@@@         L     A2,A3          YQ
)@@G@@.     @C@@@@         L,S4  A3,0,X10       . $P GET ITEM TYPE@E@@@@      YR
)@@G@@   L     A3,TYPE,A3     . $P CONVERT IT TO RETURN TYPE@A@@@@         J  YS
)@@G@@   *GETVAR        . $E  @]@@@@ .          @]@@@@ .          @E@@@@UNDEF YT
)@@G@@   SZ    A1             . $P SET ERROR CODE = 0       @C@@@@         J  YU
)@@G@@   ERROR          . $J ERROR        @E@@@@SYMERR   L,U   A1,1           YV
)@@G@@. $P SET ERROR CODE = 1       @C@@@@         J     ERROR          . $J EYW
)@@G@@RROR        @E@@@@INDERR   L,U   A1,2           . $P SET ERROR CODE = 2 YX
)@@G@@      @C@@@@         J     ERROR          . $J ERROR        @A@@@@SIZERRYY
)@@G@@   LSSL  A1,18          .     @E@@@@         A,U   A1,3           . $P SYZ
)@@G@@ET ERROR CODE = 3       @E@@@@ERROR    SSC   A1,17          . $P SET BITZA
)@@G@@ 35 OF A1         @A@@@@         A,U   A1,1           .     @A@@@@      ZB
)@@G@@   SSC   A1,1           .     @A@@@@         J     *GETVAR        . $E  ZC
)@@G@@@]@@@@ .          @]@@@@ .          @C@@@@HEADER   +     0              ZD
)@@G@@. $H HEADER       @E@@@@         L,T1  A1,1,X10       . $P GET SEQUENCE ZE
)@@G@@NUMBER      @E@@@@         L,H1  A2,TT1         . $P GET # SEQ NO ASSIGNZF
)@@G@@ED    @E@@@@         TLE   A2,A1          . $T IS SEQ NO WITHIN RANGE ? ZG
)@@G@@@C@@@@         J     SYMERR         . $A YES NO,SYMERR@A@@@@         AN,ZH
)@@G@@U  A1,1           .     @E@@@@         A,H2  A1,TT1         . $P SET PTRZI
)@@G@@ TO SEQ LIST ENTRY@G@@@@         L,T1  A3,0,A1        . $P GET RECORD COZJ
)@@G@@DE FOR SEQ NO           @E@@@@         L,H2  A1,0,A1        . $P GET CORZK
)@@G@@E BUFFER ADDR     @G@@@@         TNZ   A1             . $T HAS BUFFER BEZL
)@@G@@EN ALLOCATED ?          @C@@@@         J     UNDEF          . $A YES NO,ZM
)@@G@@UNDEF @G@@@@         A,U   A1,2           . $P GET ADDR OF NEW RECORD HEZN
)@@G@@ADER        @E@@@@         L,S3  A2,0,X10       . $P GET MODE OF ITEM   ZO
)@@G@@      @E@@@@         TE,U  A2,1           . $T IS MODE = OLD ?          ZP
)@@G@@@C@@@@         J     HEAD3          . $A YES NO,HEAD3 @G@@@@         TNZZQ
)@@G@@,H1 C17           . $T ARE THERE ANY ART RULES (C17 ENTRIES)@C@@@@      ZR
)@@G@@   J     HEAD3          . $A YES NO,HEAD3 @E@@@@         L,H2  A2,C17   ZS
)@@G@@      . $P SET PTR TO C17           @G@@@@HEAD1    TNE,T1 A3,0,A2       ZT
)@@G@@. $T IS ENTRY FOR THIS RECORD CODE ?      @C@@@@         J     HEAD2    ZU
)@@G@@      . $A NO YES,HEAD2 @E@@@@         TNZ,T3 0,A2          . $T MORE C1ZV
)@@G@@7 ENTRIES ?       @C@@@@         J     HEAD3          . $A YES NO,HEAD3 ZW
)@@G@@@E@@@@         A,T3  A2,0,A2        . $P SET PTR TO NEXT C17 ENTRY@C@@@@ZX
)@@G@@         J     HEAD1          . $J HEAD1        @G@@@@HEAD2    A,H2  A1,ZY
)@@G@@0,A1        . $P GET ADDR OF OLD RECORD HEADER        @G@@@@HEAD3    L  ZZ
)@@G@@   A2,(0777777777) . $P SET END OF ITEM TO LARGE VALUE      @E@@@@      AA
)@@G@@   L,S3  A3,0,X10       . $P GET MODE OF ITEM         @E@@@@         TE,AB
)@@G@@U  A3,3           . $T IS ITEM DEFINED OR ARRAY @E@@@@         AU,H2 A1,AC
)@@G@@0,A1        . $P CALC END ADDR OF RECORD  @E@@@@         S     A2,SA1   AD
)@@G@@      . $P SAVE END ADDR OF ITEM    @E@@@@         L,T1  A2,0,X10       AE
)@@G@@. $P GET REL WORD OF ITEM     @A@@@@         AND,U A2,07777       .     AF
)@@G@@@G@@@@         A     A1,A3          . $P GET ABS WORD ADDR OF 1ST OCCURRAG
)@@G@@ENCE  @A@@@@         AN,U  A0,1           .     @E@@@@         L,T3  A2,AH
)@@G@@0,X10       . $P GET CHAR LENGTH OF ITEM  @A@@@@         AND,U A2,07777 AI
)@@G@@      .     @A@@@@         L     A2,A3          .     @G@@@@         MSIAJ
)@@G@@   A3,A0          . $P MULTIPLY BY INDEX-1 TO GET OCCUR     @E@@@@      AK
)@@G@@   L     A0,A2          . $P SAVE LENGTH OF ITEM      @G@@@@         A,SAL
)@@G@@3  A3,1,X10       . $P ADD OCC DISP TO CHAR OFFSET          @G@@@@      AM
)@@G@@   AN,U  A3,1           . $P CONVERT OFFSET TO WORDS + OFFSET     @A@@@@AN
)@@G@@         SZ    A2             .     @A@@@@         DI,U  A2,6           AO
)@@G@@.     @E@@@@         A     A1,A2          . $P ADD WORD DISP TO ABS ADDRAP
)@@G@@@E@@@@         A,U   A3,1           . $P SET CHAR OFFSET          @A@@@@AQ
)@@G@@         J     *HEADER        . $E  @]@@@@ .          @]@@@@ .          AR
)@@G@@@]@@@@$(2).       @A@@@@SA1      +     0              .     @A@@@@SX10  AS
)@@G@@   +     0              .     @A@@@@ .        TYPE CONVERSION BLOCK     AT
)@@G@@@E@@@@ .        OUTPUT TYPES: 1-PIC X, 2-PIC 9, 3-PIC 9 COMP      @A@@@@AU
)@@G@@TYPE     +     0              .     @A@@@@         +     1              AV
)@@G@@. SET @C@@@@         +     1              . RECORD          @C@@@@      AW
)@@G@@   +     1              . ITEM PIC X      @C@@@@         +     2        AX
)@@G@@      .  ''  PIC 9      @C@@@@         +     3              .  ''  PIC 9AY
)@@G@@ COMP @C@@@@         +     1              .  ''  PIC A      @C@@@@      AZ
)@@G@@   +     3              . ARRAY PIC 9 COMP@C@@@@         +     1        BA
)@@G@@      .  ''   PIC X     @E@@@@         +     0              .  ''   UNDEBB
)@@G@@FINED PIC         @C@@@@         +     1              . OCCURS PIC X    BC
)@@G@@@C@@@@         +     2              .   ''   PIC 9    @E@@@@         +  BD
)@@G@@   3              .   ''   PIC 9 COMP           @C@@@@         +     1  BE
)@@G@@            .   ''   PIC A    @E@@@@         +     3              . DEFIBF
)@@G@@NED PIC 9 COMP          @C@@@@         +     1              .   ''    PIBG
)@@G@@C X   @E@@@@         +     0              .   ''    UNDEFINED PIC       BH
)@@G@@@C@@@@         +     1              . SUBOCCURS PIC X @C@@@@         +  BI
)@@G@@   2              .    ''     PIC 9 @E@@@@         +     3              BJ
)@@G@@.    ''     PIC 9 COMP        @C@@@@         +     1              .    'BK
)@@G@@'     PIC A @]@@@@ .          @^@@@@         END.           ___         BL
)@@G@@*[@@@@*SDFF*@]@@@@ .          @A@@@@ .                  ** INTRP **     BM
)@@G@@@[@@@@ .    @C@@@@ .        REORG EDITOR WORKER ROUTINE           @A@@@@BN
)@@G@@ .             TO INTERPRET DBP'S   @]@@@@ .          @^@@@@ .        CABO
)@@G@@LL IS       @A@@@@ .                  LX,U X10,PARAM  @A@@@@ .          BP
)@@G@@        LMJ  X11,INTRP  @^@@@@ .        WHERE         @C@@@@ .          BQ
)@@G@@   -------------------------------  @C@@@@ .        PARAM: LENGTH  :  0 BR
)@@G@@:   +(INTRP)   :  @C@@@@ .             :-----------------------------:  BS
)@@G@@@C@@@@ .             : 13 :    :    :              :  @C@@@@ .          BT
)@@G@@   :-----------------------------:  @C@@@@ .             :              BU
)@@G@@               :  @C@@@@ .             =       OPERAND PTR           =  BV
)@@G@@@C@@@@ .             :                             :  @C@@@@ .          BW
)@@G@@   -------------------------------  @]@@@@ .          @C@@@@ .        THBX
)@@G@@E RESULTS OF THE INTERPRET ARE      @C@@@@ .             STORED IN RESERBY
)@@G@@VED WORDS         @C@@@@ .             AREACODE, PAGENUM, SLOTNUM       BZ
)@@G@@@]@@@@ .          @^@@@@         AXR$.          @^@@@@$(4)     LIT.     CA
)@@G@@      @A@@@@PF       FORM  12,6,18        .     @]@@@@$(3).       @]@@@@CB
)@@G@@ .          @C@@@@INTRP*.                       . $H INTRP        @D@@@@CC
)@@G@@         S,H2  X11,RETURN     . $P SAVE RETURN ADDR   @D@@@[         SZ CD
)@@G@@   STATUS         . $P RESET STATUS TO 0  @E@@@@         L     X7,X10   CE
)@@G@@      . $P SET PTR TO OPERAND PTR   @A@@@@         A,U   X7,2           CF
)@@G@@.     @A@@@@         L,U   A13,1          .     @E@@@@         SLJ   GETCG
)@@G@@SYM         . $W GETSYM - GET OPERAND ADDR@E@@@@         JN    A1,SYMERRCH
)@@G@@      . $T WAS GET SUCCESSFUL ?     @C@@@@                              CI
)@@G@@. $A YES NO,SYMERR@E@@@@         TNE,U A3,1           . $T IS OP TYPE PICJ
)@@G@@C X ?       @C@@@@         J     TYPERR         . $A NO YES,TYPERR@E@@@@CK
)@@G@@         TNE,U A3,4           . $T IS OP TYPE NOT SET PTR ? @E@@@@      CL
)@@G@@   L,U   A3,3           . $P SET TYPE TO PIC 9 COMP   @E@@@@         SLJCM
)@@G@@   GETNUM         . $W GETNUM - GET OP VALUE    @E@@@@         SLJ   DBPCN
)@@G@@$APS        . $W DBP$APS - INTERPRET VALUE@E@@@@         JZ    A1,ARERR CO
)@@G@@      . $T WAS AREA CODE VALID ?    @C@@@@                              CP
)@@G@@. $A YES NO,ARERR @E@@@@         S     A1,AREACODE    . $P SET INTRPED VCQ
)@@G@@ALUES       @A@@@@         S     A2,PAGENUM     .     @A@@@@         S  CR
)@@G@@   A3,SLOTNUM     .     @A@@@@         L     A0,A4          .     @A@@@@CS
)@@G@@         DL    A0,1,A0        .     @A@@@@         DS    A0,AREANAME    CT
)@@G@@.     @A@@@@         J     *RETURN        . $E  @]@@@@ .          @E@@@@CU
)@@G@@ARERR    TZ    PERFSW         . $T IS THIS PERFORM MODE     @C@@@@      CV
)@@G@@   J     ARER2          . $A NO YES,ARER2 @A@@@@         L     A4,A0    CW
)@@G@@      .     @E@@@@         E$DIT INTPKT         . $P PRINT ERROR MESSAGECX
)@@G@@      @A@@@@         E$COPY 29,AM         .     @A@@@@         L     A0,CY
)@@G@@A4          .     @A@@@@         L,U   A1,13          .     @A@@@@      CZ
)@@G@@   LMJ   X11,EOCTF$     .     @A@@@@         E$DITX               .     DA
)@@G@@@A@@@@         P$RINT (PF 1,8,INTBUF) .   @E@@@@ARER2    SZ    AREACODE DB
)@@G@@      . $P SET ALL VALUES NULL      @A@@@@         SZ    PAGENUM        DC
)@@G@@.     @A@@@@         SZ    SLOTNUM        .     @A@@@@         DL    A0,DD
)@@G@@BLNKS       .     @A@@@@         DS    A0,AREANAME    .     @E@@@@      DE
)@@G@@   L,U   A0,51          . $P SET STATUS VALUE         @A@@@@         S  DF
)@@G@@   A0,STATUS      .     @A@@@@         J     *RETURN        . $E  @E@@@@DG
)@@G@@TYPERR   P$RINT (PF 1,6,TM)   . $P PRINT ERROR MESSAGE      @E@@@@SYMERRDH
)@@G@@   L,U   A0,1           . $P SET FATAL ERROR FLAG     @A@@@@         S  DI
)@@G@@   A0,FATAL       .     @A@@@@         J     *RETURN        . $E  @]@@@@DJ
)@@G@@ .          @]@@@@$(4).       @A@@@@RETURN   +     0              .     DK
)@@G@@@A@@@@BLNKS    '            '       .     @C@@@@AM       'ERROR - CANNOTDL
)@@G@@ INTERPRET DBP ' .      @E@@@@TM       'ERROR - CANNOT INTERPRET PIC X FDM
)@@G@@IELD' .           @A@@@@INTPKT   E$PKT 8,INTBUF       .     @A@@@@INTBUFDN
)@@G@@   RES   8              .     @^@@@@         END   .        ___ -[D*)^@)DO
)@@G@@^@)^@)^@) 0)^@)^@)@D@@@@^@)^@)^@)^@)^[G^@)^@)^[[A@?CC4^@)^@)^@)^@)^@) 0)DP
)@@G@@*[@@@@*SDFF*@G@@@@ .  **************************************************DQ
)@@G@@****************  @G@@@@ .  *          ED   LEVEL   12                  DR
)@@G@@                     *  @G@@@@ .  *                                     DS
)@@G@@                           *  @G@@@@ .  *   TO BE COMPATIBLE WITH PREVIODT
)@@G@@US VERSIONS OF THE EDITOR        *  @G@@@@ .  *    THE FOLLOWING PARAMETDU
)@@G@@ERS MUST BE SET:                       *  @G@@@@ .  *                   DV
)@@G@@                                             *  @G@@@@ .  *    EDMODE   DW
)@@G@@ EQU   1                                           *  @G@@@@ .  *    REGDX
)@@G@@BRIEF  EQU   0                                           *  @G@@@@ .  * DY
)@@G@@   SUPBRIEF  EQU   1                                           *  @G@@@@DZ
)@@G@@ .  *    SPLITDLI  EQU   1                                           *  EA
)@@G@@@G@@@@ .  *    EOFMODE   EQU   0                                        EB
)@@G@@   *  @G@@@@ .  *                                                       EC
)@@G@@         *  @G@@@@ .  *                                                 ED
)@@G@@      TEM      *  @G@@@@ .  *                                           EE
)@@G@@                     *  @G@@@@ .  **************************************EF
)@@G@@****************************  @I@@@@ .                                  EG
)@@G@@                                    ED010020    @I@@@@ . ***************EH
)@@G@@****************************************************  ED010030    @I@@@@EI
)@@G@@ . *    12.01 CHANGES                                                *  EJ
)@@G@@ED010040    @I@@@@ . *                                                  EK
)@@G@@               *  ED010050    @I@@@@ . *    DEFAULT 077'S CHANGED TO 077EL
)@@G@@7'S                              *  ED010060    @I@@@@ . *    CORRECTIONEM
)@@G@@ FOR RE-ENTRANT PROBLEM                            *  ED010070    @I@@@@EN
)@@G@@ . *    SYMBOLIC TYPE ON SPLIT OUTPUT                                *  EO
)@@G@@ED010080    @I@@@@ . *    A6 CONFLICT                                   EP
)@@G@@               *  ED010090    @I@@@@ . *    CORRECTIONS FOR CYCLING AROUEQ
)@@G@@ND 62                            *  ED010100    @I@@@@ . *    CORRECTIONER
)@@G@@ FOR SPLIT OF WHOLE FILE                           *  ED010110    @I@@@@ES
)@@G@@ . *    CORRECTION OF LINE COUNT FOR ADD                             *  ET
)@@G@@ED010120    @I@@@@ . *    CHANGE TO TRY LINK$ BEFORE DOING RLIST, AND INEU
)@@G@@DICATOR        *  ED010130    @I@@@@ . *    ASSIGN TEMPORARY ED$TB IF CAEV
)@@G@@N'T ASSIGN CATALOGED             *  ED010140    @I@@@@ . *    R TO OVERIEW
)@@G@@DE ASSUMED U ON DATA FILE UPDATE                   *  ED010150    @I@@@@EX
)@@G@@ . *    A.B,.C TO MEAN PRODUCE A.C                                   *  EY
)@@G@@ED010160    @I@@@@ . *    PRINT DISABLED MSG FOR INTERNAL FILE.         EZ
)@@G@@               *  ED010170    @I@@@@ . *    U OPTION ASSUMED FOR DATAFILFA
)@@G@@E IF NO OPTION & 1 FIELD         *_ ED010180    @I@@@@ . *    T OPTION TFB
)@@G@@O TRANSFER ALL CYCLES TO OUTPUT ELEMENT            *  ED010190    @I@@@@FC
)@@G@@ . *    CORRECTION TO SEND BLANKS TO UNISCOPE FOR BLANK LINE         *_-FD
)@@G@@ED010200    @I@@@@ . *    CORRECTION TO GET RID OF LINES ADDED & THEN DEFE
)@@G@@LETED IN       *  ED010210    @I@@@@ . *           SAME CYCLE.          FF
)@@G@@                                 *  ED010220    @I@@@@ . *    CORRECT CYFG
)@@G@@CLE NUMBERS ON SPLIT OUTPUT                        *  ED010230    @I@@@@FH
)@@G@@ . *    END-OF-FILE MSG FOR I-O ERROR 5                              *  FI
)@@G@@ED010240    @I@@@@ . *    ERROR MSG FOR 044012,044212, AND 012212 ERRORSFJ
)@@G@@               *  ED010250    @I@@@@ . *    OUTPUT FILE OVERFLOW RECOVERFK
)@@G@@Y                                *  ED010260    @I@@@@ . *              FL
)@@G@@                                                   *  ED010270    @I@@@@FM
)@@G@@ . *******************************************************************  FN
)@@G@@ED010280    @G@@@@ . ***************************************************FO
)@@G@@****************  @G@@@@ . *   ED 12.02 CHANGES:                        FP
)@@G@@                     *  @G@@@@ . *   MINIMIZE AUTO FILE CONFLICTS       FQ
)@@G@@                           *  @G@@@@ . *   RELEASE INTERNAL USE NAMES   FR
)@@G@@                                 *  @G@@@@ . *   MINIMIZE MAIL FILE CONFFS
)@@G@@LICTS                                  *  @G@@@@ . *   DELETE 1,1 BUG   FT
)@@G@@                                             *  @G@@@@ . *   BUG IN HEADFU
)@@G@@ COMMAND                                           *  @G@@@@ . *   INDICFV
)@@G@@ATE ATTEMPTS TO CHANGE FILE IN READ-ONLY MODE            *  @G@@@@ . *  FW
)@@G@@ IDENTIFY ELEMENT SITED OR LNSITED                             *  @G@@@@FX
)@@G@@ . *******************************************************************  FY
)@@G@@@G@@@@ . ***************************************************************FZ
)@@G@@****  @G@@@@ . *   ED 12.03 CHANGES:                                    GA
)@@G@@         *  @G@@@@ . *   IDENTIFY ELEMENT WHEN TIME COMMAND USED        GB
)@@G@@               *  @G@@@@ . *   FIX BAD LINE RETURN AFTER MOVE DELETE SEQGC
)@@G@@UENCE                *  @G@@@@ . *   ACCEPT OCTAL SYMBOLIC TYPE IN TYPE GD
)@@G@@COMMAND                    *  @G@@@@ . *   IMPLEMENT DELETE+            GE
)@@G@@                                 *  @G@@@@ . *   MAKE UP WORK ON DATAFILGF
)@@G@@ES                                     *  @G@@@@ . *   FIX - TO LINE 1  GG
)@@G@@                                             *  @G@@@@ . *   DYNAMICALLYGH
)@@G@@ ASSIGN FILES FOR SPLIT & ADD                      *  @G@@@@ . *   FIX IGI
)@@G@@GDM ON LNQ OF 0 LENGTH LINE                              *  @G@@@@ . *  GJ
)@@G@@ FIX OUTPUT WITH NO OPERAND FAILURE                            *  @G@@@@GK
)@@G@@ . *   FIX INSERT+ WITH NO OPERAND FAILURE                           *  GL
)@@G@@@G@@@@ . *   FIX OVERPRINT BATCH FILE NOT ASSIGNED                      GM
)@@G@@   *  @G@@@@ . *   FIX P+                                               GN
)@@G@@         *  @G@@@@ . ***************************************************GO
)@@G@@****************  @I@@@@ . *********************************************GP
)@@G@@***************         817TM003    @I@@@@ . *                          GQ
)@@G@@                                *         817TM004    @I@@@@ . *   ENHANGR
)@@G@@CEMENTS AND FIXES IN LEVEL 13.00                  *         817TM005    GS
)@@G@@@I@@@@ . *                                                          *   GT
)@@G@@      817TM006    @I@@@@ . *   FIX ERR$ ON X-OPTION                     GU
)@@G@@              *         817TM007    @I@@@@ . *   CHECK FOR POSSIBLE MAXTGV
)@@G@@IME                             *         817TM008    @I@@@@ . *   CHECKGW
)@@G@@ FOR MATCHING I AND D BANKS                       *         817TM009    GX
)@@G@@@I@@@@ . *   REVISE INTERNAL AUTO FILE TO DO ASG,ADX                *   GY
)@@G@@      817TM010    @I@@@@ . *   ENHANCE THE STATUS COMMAND               GZ
)@@G@@              *         817TM011    @I@@@@ . *   FIX CHANGE AT LINE 0   HA
)@@G@@                                *         817TM012    @I@@@@ . *   MAX EHB
)@@G@@STIMATED CPU TIME CHECK                           *         817TM013    HC
)@@G@@@I@@@@ . *   FIX MAIL FILE PROBLEMS                                 *   HD
)@@G@@      817TM014    @I@@@@ . *   FIX CHANGE OF TRAILING BLANKS            HE
)@@G@@              *         817TM015    @I@@@@ . *   FIX LOCATE OF TRAILING HF
)@@G@@BLANKS                          *         817TM016    @I@@@@ . *   FIX IHG
)@@G@@NLINE FAILURE WITH AUTO SAVE                      *         817TM017    HH
)@@G@@@I@@@@ . *   FIX GARBAGE AFTER SEQ COMMAND                          *   HI
)@@G@@      817TM018    @I@@@@ . *   FIX VERSION NAME ON ADD COMMAND          HJ
)@@G@@              *         817TM019    @I@@@@ . *   FIX LINE NUMBER RETURN HK
)@@G@@AFTER MOVE DELETE               *         817TM020    @I@@@@ . *   PREVEHL
)@@G@@NT PRINTOUT OF NOTEQUAL ON SITE                   *         817TM021    HM
)@@G@@@I@@@@ . *   FIX READ OF FORTRAN I-O FILES                          *   HN
)@@G@@      817TM022    @I@@@@ . *   CHECK FOR ATTEMPT TO EDIT PROGRAM FILE ASHO
)@@G@@ DATA FILE    *         817TM023    @I@@@@ . ***************************HP
)@@G@@*********************************         817TM024    @G@@@@ . *********HQ
)@@G@@**********************************************************  @G@@@@ . *  HR
)@@G@@ ED 14.0 CHANGES                                               *  @G@@@@HS
)@@G@@ . *   INPUT FILES MAY BE ASCII, FIELDATA, OR MIXED A-F              *  HT
)@@G@@@G@@@@ . *   INTERNAL FILES ARE ASCII                                   HU
)@@G@@   *  @G@@@@ . *   ALL CHAR MANIPULATION IN ASCII (ER ATREAD$ USED)     HV
)@@G@@         *  @G@@@@ . *   OUTPUT FILES MAY BE ASCII OR FIELDATA          HW
)@@G@@               *  @G@@@@ . *   TWO NEW OPTIONS: Q & P (FOR OUTPUT FILES)HX
)@@G@@                     *  @G@@@@ . *   MESSAGE PRINTED AFTER EXIT GIVING CHY
)@@G@@ODE OF OUTPUT FILE         *  @G@@@@ . *   NEW COMMAND: CASE (UPPER OR NHZ
)@@G@@ORMAL)                           *  @G@@@@ . *   PLIMIT COMMAND ENHANCEDIA
)@@G@@: EITHER 1 OR 2 LIMITS                 *  @G@@@@ . *   STATUS COMMAND ENIB
)@@G@@HANCED: PRINTS PLIMITS AND CASE              *  @G@@@@ . *   UNIMOD INITIC
)@@G@@IALLY ON                                           *  @G@@@@ . *   ADD FID
)@@G@@ILES MAY BE ASCII, FIELDATA, OR MIXED A-F                *  @G@@@@ . *  IE
)@@G@@ SPLIT FILES MAY BE ASCII OR FIELDATA (SAME AS OUTPUT FILE)    *  @G@@@@IF
)@@G@@ . *   MORE CORE OBTAINED FOR LARGE FILES (ER MCORE$)                *  IG
)@@G@@@G@@@@ . *   DOC COMMAND AT LINE 0 BUG FIXED ('ILLEGAL' MESSAGE)        IH
)@@G@@   *  @G@@@@ . *********************************************************II
)@@G@@**********  @^@@@@          AXR$          @E@@@@$(1),ILIT LIT           IJ
)@@G@@               . IBANK LITERALS     @^@@@@$(0),BGND$          .   @^@@@@IK
)@@G@@          FIELDATA      @I@@@@BASE      EQU       '14'              . SYIL
)@@G@@MBOLIC BASE LEVEL             817TM027    @I@@@@UPDATE     EQU     '2A' IM
)@@G@@           . UPDATE NUMBER   -LOCAL-               LOCAL    @G@@@@EDMODEIN
)@@G@@    EQU       1                 . ED COMPATIBILITY MODE           @C@@@@IO
)@@G@@  DO EDMODE ,EDIBNK   EQU   'EDR$  '  .         @E@@@@  DO 1-EDMODE ,EDIIP
)@@G@@BNK EQU   'EDITR$'  . EDIT IBANK          @^@@@@          ASCII         IQ
)@@G@@@^@@@@ . SYSTEM DEFAULT VALUES@I@@@@REGBRIEF  EQU       0               IR
)@@G@@  . PLAIN BRIEF INDICATOR INITIALIZATION        @G@@@@SUPBRIEF  EQU     IS
)@@G@@  1                 . BRIEF FOR SPLIT ADD INDICATOR   @G@@@@LNLINES   EQIT
)@@G@@U       0                 . PRINT OUT LINE NUMS WITH LINES  @I@@@@SEQSOUIU
)@@G@@    EQU       1                 . SOLICIT INPUT WITH SEQ NUMBERS  ED0103IV
)@@G@@20    @G@@@@MEMSTD     EQU       0                 . REMEMBER MODES BETWIW
)@@G@@EEN USES=1  @C@@@@EOFMODE   EQU       0                 . EOF MODE@I@@@@IX
)@@G@@MINAUT    EQU       5                 . MIN NUMBER OF AUTO LINES        IY
)@@G@@ED010340    @G@@@@SPLITDLI  EQU       1                 . DELETE LINES WIZ
)@@G@@HEN SPLITTING=1   @E@@@@ . THIS MUST BE SET TO 1 TO BE COMPATIBLE TO ED JA
)@@G@@11          @G@@@@LN132     EQU       0                  . =1 MEANS 132 JB
)@@G@@CHAR OUTPUT LINE  @G@@@@SAVESTD   EQU       132                . SAVE STJC
)@@G@@ANDARD FOR CHANGE       @G@@@@SAVECLS   EQU       80                 . MJD
)@@G@@AXIMUM LINE LENGTH IN CHARS   @G@@@@ . IF YOU NEVER MESS WITH LINES OVERJE
)@@G@@ 80 COLUMNS THEN SET TO 80          @I@@@@CONTSTD   EQU       0777      JF
)@@G@@        . STANDARD INPUT CONTINUATION CHARED010360    @G@@@@TRANSCHARF EJG
)@@G@@QU       040              . DEFAULT TRANSPARENT CHARACTER   @E@@@@TABSTDJH
)@@G@@    EQU       ';'               . STANDARD TAB        @E@@@@PLIMSTD   EQJI
)@@G@@U       33                . STANDARD PRINT LIMIT@I@@@@STDMSP    EQU     JJ
)@@G@@  0777               . STANDARD MASTERSPACE LINE 1    ED010380    @G@@@@JK
)@@G@@STDLCHR   EQU       047                . STANDARD LOCATE QUOTE CHAR     JL
)@@G@@@E@@@@DCT5      EQU       0                 . NO STOP CODE FLAG   @G@@@@JM
)@@G@@ . UNISCOPES, DCT500'S NOT IN TTY MODE MUST HAVE THIS SET TO 1          JN
)@@G@@@E@@@@CYLIM     EQU       5                 . CYCLE SAVE LIMIT    @G@@@@JO
)@@G@@ . IF YOU DON'T USE CYCLES, SET THIS TO ONE-- THE SMALLER THIS          JP
)@@G@@@C@@@@ . NUMBER THE FASTER THE EDITOR WILL RUN        @C@@@@ . THIS PROCJQ
)@@G@@ GENERATES INITIAL TAB SETTINGS     @C@@@@SET$*     PROC                JR
)@@G@@         .        @E@@@@K   DO    SET$(1) ,TAB$*(K)    EQU     SET$(1,K)JS
)@@G@@-1          @A@@@@TABLNT*   EQU       SET$(1)         @^@@@@          ENJT
)@@G@@D           @G@@@@          SET$      11,21,39,73        . THESE ARE THEJU
)@@G@@ INITIAL TABS     @]@@@@ .          @G@@@@ . THE FOLLOWING ARE FOR DEBUGJV
)@@G@@GIN PURPOSES AND SHOULD BE SET TO         @^@@@@ . ZERO FOR PRODUCTION. JW
)@@G@@@E@@@@TIMIT     EQU       0                 . TIME TEST           @I@@@@JX
)@@G@@DEBUG     EQU       0                 . DEBUGGINF STUFF ON=1            JY
)@@G@@ED010400    @I@@@@DUMP      EQU       0                 . DUMP D BANK   JZ
)@@G@@                  ED010420    @E@@@@DUMMSG    EQU       0               KA
)@@G@@  . SEND DUMP MESSAGE   @E@@@@P$        PROC      1                 . STKB
)@@G@@ORE NON ZERO      @^@@@@SNZ*      NAME      .   @G@@@@          S       KC
)@@G@@  R10,P$(1,1),P$(1,2),P$(1,3) . R3 CONTAINS 1         @^@@@@          ENKD
)@@G@@D           @A@@@@P$        PROC      1             . @E@@@@FTYPE*    NAKE
)@@G@@ME      0                 . FIELDATA PRINT      @G@@@@TYP*      NAME    KF
)@@G@@  1                 . ASCII PRINT - P$(1,1)=MSG ADDR  @G@@@@FF        FOKG
)@@G@@RM      12,6,18          . P$(1,2)= LENGTH OF MSG           @C@@@@      KH
)@@G@@    LA        A0,( FF 1,P$(1,2),P$(1,1))  @C@@@@  DO 1-P$(0,0) ,        KI
)@@G@@  ER        PRINT$      @E@@@@  DO P$(0,0) ,          ER        APRINT$ KJ
)@@G@@   . ASCII PRINT  @^@@@@          END           @C@@@@          ON      KK
)@@G@@  DUMP              .         @^@@@@$(10)     . DUMP DBANK  @C@@@@DUMPINKL
)@@G@@G   +         0                 .         @E@@@@          DO 8 , + 07777KM
)@@G@@77777777  . MARK REGISTERS AREA     @E@@@@DBFF      RES       3*16      KN
)@@G@@        . REGISTERS GO HERE   @A@@@@ENDD$     . DON'T DUMP BEYOND HERE  KO
)@@G@@@^@@@@          FIELDATA      @A@@@@DIOPK     'ED$DF       ' .          KP
)@@G@@@^@@@@          ASCII         @C@@@@          +         0               KQ
)@@G@@  .         @C@@@@          +         0,W$,0,0,0,0      .         @C@@@@KR
)@@G@@          +         0,BGND$           .         @C@@@@          +       KS
)@@G@@  0                 .         @E@@@@EETAB     A$EPKT    33,IMBUF        KT
)@@G@@  . AEDIT$ PACKET       @C@@@@DTKN      'DUMP OF & WORDS TAKEN &' .     KU
)@@G@@      @^@@@@          FIELDATA      @A@@@@ASGDF     '@ASG,T ED$DF,F2' . KV
)@@G@@      @^@@@@          ASCII         @A@@@@SORMS     ' SORRY-NO DUMP!' . KW
)@@G@@      @C@@@@          ON        DUMMSG            .         @G@@@@DMSG1 KX
)@@G@@    'IF YOU WISH THIS ERROR TO BE DIAGNOSED, EXIT FROM THE EDITOR'@E@@@@KY
)@@G@@DMSG2     'IMMEDIATELY AND ENTER THE FOLLOWING TWO LINES:'  @C@@@@DMSG3 KZ
)@@G@@    '@TDP,DSM  ED$DF,,<NUMBER>'           @E@@@@DMSG4     '<YOUR NAME ANLA
)@@G@@D LOCATION FOR RETURN OF PRINTOUT>' @G@@@@DMSG5     '  WHERE <NUMBER> ISLB
)@@G@@ THE NUMBER OF WORDS INDICATED DUMPED'    @C@@@@          OFF       DUMMLC
)@@G@@SG            .         @G@@@@SITEDUMP  +         0                 . ENLD
)@@G@@TER DBANK DUMP HERE           @E@@@@          TZ        DUMPING         LE
)@@G@@  . ALREADY DUMPING?    @E@@@@          J         SORRY             . MULF
)@@G@@ST BE A MESS      @A@@@@          SNZ       DUMPING        .@E@@@@      LG
)@@G@@    L         A0,IBF+1          . GET ORIGINAAL A0    @C@@@@          DSLH
)@@G@@       A0,DBFF           . SAVE IT  @E@@@@K  DO 7 , DS        A0+K*2,DBFLI
)@@G@@F+2*K    . SAVE REST OF A REGS@C@@@@          S         R1,DBFF+16      LJ
)@@G@@   . SAVE R1@G@@@@          L         A0,(1,R2)         . PREPARE TO SAVLK
)@@G@@E R REGS          @C@@@@          L         A1,(1,DBFF+17)    .         LL
)@@G@@@C@@@@          L,U       R1,15             .         @C@@@@          BTLM
)@@G@@        A1,0,*A0          .         @C@@@@          L         A0,(1,X1) LN
)@@G@@        .         @C@@@@          L,U       R1,15             .         LO
)@@G@@@C@@@@          BT        A1,0,*A0          .         @C@@@@          L,LP
)@@G@@U       A2,ENDD$          .         @C@@@@          AN,U      A2,BGND$  LQ
)@@G@@         .        @G@@@@          S,H1      A2,DIOPK+4        . NUMBER OLR
)@@G@@F WORDS TO BE DUMPED    @C@@@@          L         A0,(3,ASGDF)       .  LS
)@@G@@      @C@@@@          ER        CSF$              .         @C@@@@      LT
)@@G@@    JNZ       A0,SORRY          .         @C@@@@          L,U       A0,DLU
)@@G@@IOPK          .         @C@@@@          ER        IOW$              .   LV
)@@G@@      @E@@@@          A$EDIT     EETAB              . MESSAGE           LW
)@@G@@@C@@@@          A$EMSG     DTKN              .        @E@@@@          A$LX
)@@G@@EDECV    DIOPK+4,,H1       . NUM WORDS          @^@@@@          A$EMSGR LY
)@@G@@   .  @^@@@@          A$EDITX    .  @C@@@@          TYP       IMBUF,21  LZ
)@@G@@        .         @E@@@@          ON        DUMMSG            . PRINT OUMA
)@@G@@T MESSAGE   @C@@@@          TYP       DMSG1,DMSG2-DMSG1 .         @C@@@@MB
)@@G@@          TYP       DMSG2,DMSG3-DMSG2 .         @C@@@@          TYP     MC
)@@G@@  DMSG3,DMSG4-DMSG3 .         @C@@@@          TYP       DMSG4,DMSG5-DMSGMD
)@@G@@4 .         @C@@@@          TYP       DMSG5,15          .         @C@@@@ME
)@@G@@          OFF       DUMMSG            .         @C@@@@          J       MF
)@@G@@  *SITEDUMP         . RETURN  @C@@@@SORRY     TYP       SORMS,5         MG
)@@G@@  .         @C@@@@          J         *SITEDUMP         . RETURN  @C@@@@MH
)@@G@@          OFF       DUMP              .         @]@@@@$(0) .      @C@@@@MI
)@@G@@SNOOP$*    PROC      0                 .        @E@@@@          TZ      MJ
)@@G@@  TRACE             . TRACE ON?           @^@@@@          END       .   MK
)@@G@@@E@@@@INSTAT    EQU       0                  . INTERNAL STATISTICS@C@@@@ML
)@@G@@          ON        INSTAT             .        @C@@@@STATIO    'STATFILMM
)@@G@@E    '               .        @^@@@@  DO 2 ,    +   0       @C@@@@      MN
)@@G@@    +         28,STATBUF         .        @^@@@@  DO 3 ,    +   0       MO
)@@G@@@C@@@@STATBUF   RES       28                 .        @^@@@@ . FORMAT OFMP
)@@G@@ BUFFER     @^@@@@ .    0   RUNID         @^@@@@ .    1   OPTION WORD   MQ
)@@G@@@A@@@@ .    2   FILE LENGTH IN IMAGES     @A@@@@ .    3   FILE LENGTH INMR
)@@G@@ WORDS      @^@@@@ .    4   TIME USED     @A@@@@ .    5   TRANACTION COUMS
)@@G@@NT,TOP COUNT@G@@@@ .    6   S1-EXIT TYPE,S2-LINE NUM,S3-QON,S4-NOSEQ,S5-MT
)@@G@@INLINE,S6-DITTO   @^@@@@ .    7   MSPCHR,LOCHR  @A@@@@ .    8   THETAB,CMU
)@@G@@ONTCHAR           @^@@@@ .  9     BREAK,IGDM    @^@@@@ .  10    IOPR,ERRMV
)@@G@@$     @^@@@@          FIELDATA      @A@@@@ASGSTATA  '@ASG,A STATFILE' . MW
)@@G@@      @A@@@@ASGSTATC  '@ASG,CP STATFILE,F2' .   @C@@@@USESTAT   '@USE STMX
)@@G@@ATFILE,STAT*STATFILE$'  .     @A@@@@FRESTAT   '@FREE,R STATFILE' .      MY
)@@G@@@I@@@@RFRESTAT  '@FREE STATFILE'                                        MZ
)@@G@@      817TM033    @^@@@@          ASCII         @A@@@@STATAD    +       NA
)@@G@@  0              .@A@@@@          OFF       INSTAT          @E@@@@P$    NB
)@@G@@    PROC      1                 . TEST FOR OPTION     @^@@@@TOPTN*    NANC
)@@G@@ME      0   @^@@@@TNOPTN*   NAME      1   @E@@@@          L         A0,OND
)@@G@@PTN            . GET OPTION WORD    @G@@@@    DO    P$(0,0)   ,   TEP   NE
)@@G@@A0,BITS('Z'-P$(1,1)) . SKIP IF NOT ON     @G@@@@    DO    1-P$(0,0) ,   NF
)@@G@@TOP   A0,BITS('Z'-P$(1,1)) . SKIP IF ON         @^@@@@          END     NG
)@@G@@      @^@@@@OPT**     FUNC          @A@@@@Z         EQU       OPT(1)    NH
)@@G@@      @G@@@@          DO        (Z<-1*/17+1)++(Z>1*/18-2)++(Z=-0) ,   ENNI
)@@G@@D  (Z)      @E@@@@          END       +(I$ 0,U+(Z<0),,,3**Z*/-16,0177777NJ
)@@G@@**Z)  @^@@@@BITS**    FUNC          @A@@@@Z         EQU       1*/BITS(1)NK
)@@G@@      @E@@@@I         DO        BITS-1 ,Z  EQU  Z++1*/BITS(I+1)         NL
)@@G@@@C@@@@          DO        BITS(*1) ,  END  OPT(-Z)    @A@@@@          ENNM
)@@G@@D       OPT(Z)          @C@@@@P$        PROC      1                 .   NN
)@@G@@      @E@@@@CONVFA*   NAME      0                 . CONVERT FD TO ASCII NO
)@@G@@@E@@@@CONVAF*   NAME      1                 . CONVERT ASCII TO FD @E@@@@NP
)@@G@@          L,U       A1,P$(1,1)        . INPUT BUFFER ADDRESS@G@@@@      NQ
)@@G@@    L,U       A2,P$(1,2)        . OUTPUT BUFFER ADDRESS           @C@@@@NR
)@@G@@     DO P$(0,0) , LMJ X11,ASCFD       .         @C@@@@     DO 1-P$(0,0) NS
)@@G@@, LMJ X11,FDASC     .         @^@@@@          END       .   @C@@@@P$    NT
)@@G@@    PROC      1                  .        @E@@@@TNOASG* NAME         . TNU
)@@G@@EST TO SEE IF FILE ASSIGNED         @G@@@@       DO P$(1,1)>0 , DL      NV
)@@G@@  A0,(P$(1,1))       .   SKIP IF NOT      @G@@@@          DS        A0,FNW
)@@G@@RMIMG          . PUT IN FACIL$ PACKET           @E@@@@          L,U     NX
)@@G@@  A0,FRMIMG          . PACKET ADD         @C@@@@          ER        FACINY
)@@G@@L$             .        @E@@@@          TZ,S1     FRMIMG+6           . INZ
)@@G@@F ZERO, NOT ASGED @^@@@@          END           @E@@@@P$        PROC    OA
)@@G@@  1                   . GO TO LINE        @C@@@@GOLINE*   NAME      1   OB
)@@G@@               .        @E@@@@GOPLUS*   NAME      2                  . GOC
)@@G@@O PLUS N          @E@@@@          SNZ       GORET           . SET RETURNOD
)@@G@@ FLAG       @E@@@@          DO P$(0,0)=1 ,               LMJ  X6,LINENUMOE
)@@G@@+1    @E@@@@          DO P$(0,0)=2 ,               LMJ  X6,GOPL+2       OF
)@@G@@@G@@@@          LMJ       X10,P$(1,1)            . END OF FILE RETURN   OG
)@@G@@      @^@@@@          END           @E@@@@P$        PROC      1         OH
)@@G@@        . CHANGE IMAGE LENGTH @A@@@@IL23*     NAME      . IL*2/3 => IL  OI
)@@G@@@C@@@@          L         A0,P$(1,1)        .         @E@@@@          LSOJ
)@@G@@SL      A0,1              . MULT BY 2           @E@@@@          A,U     OK
)@@G@@  A0,2              . FOR ROUNDING UP     @E@@@@          DSL       A0,3OL
)@@G@@6             . GET READY FOR DIVIDE@E@@@@          DI,U      A0,3      OM
)@@G@@        . DIVIDE BY 3         @C@@@@          S         A0,P$(1,1)      ON
)@@G@@  .         @^@@@@          END       .   @E@@@@P$        PROC      1   OO
)@@G@@              . CHANGE IMAGE LENGTH @A@@@@IL32*     NAME      . IL*3/2 =OP
)@@G@@> IL  @C@@@@          L         A0,P$(1,1)        .         @E@@@@      OQ
)@@G@@    MSI,U     A0,3              . MULT BY 3           @E@@@@          A,OR
)@@G@@U       A0,1              . FOR ROUNDING UP     @E@@@@          SSL     OS
)@@G@@  A0,1              . DIVIDE BY 2         @C@@@@          S         A0,POT
)@@G@@$(1,1)        .         @^@@@@          END       .   @^@@@@P$        PROU
)@@G@@OC      1   @E@@@@INCR*     NAME      1                  . INCREMENT LOCOV
)@@G@@ATION @E@@@@DECR*     NAME      0                  . DECREMENT LOCATION OW
)@@G@@@C@@@@          L         A0,P$(1,1),P$(1,2),P$(1,3) .@E@@@@  DO P$(0,0)OX
)@@G@@=1 ,          A,U       A0,1               .    @A@@@@  DO P$(0,0)=0 ,  OY
)@@G@@AN,U  A0,1 .      @C@@@@          S         A0,P$(1,1),P$(1,2),P$(1,3) .OZ
)@@G@@@^@@@@          END           @A@@@@P         FORM      12,6,18         PA
)@@G@@@A@@@@F         FORM      6,6,6,18        @E@@@@LCT       EQU       A12 PB
)@@G@@                .  LINE COUNT       @^@@@@IC        EQU       A14 @^@@@@PC
)@@G@@RC        EQU       A15 @^@@@@$(1)     . IBANK TABLES @^@@@@          FIPD
)@@G@@ELDATA  .   @E@@@@LEVEL     +   'ED& @@'++BASE                  . ID LINPE
)@@G@@E     @C@@@@          +   '.@@-&-'++UPDATE*/18  .           @^@@@@      PF
)@@G@@    '(&&&&&'  .   @^@@@@          ASCII     .   @^@@@@EDITS     'EDIT'  PG
)@@G@@      @C@@@@INPUT     'INPUT   '                  .         @E@@@@PROGNAPH
)@@G@@M   'PROG NAME?  '    . USED IF NO FIELDS SPEC FOR @ED@^@@@@          FIPI
)@@G@@ELDATA  .   @A@@@@          'SYM '    . UNTYPED       @^@@@@ELT    +'ELTPJ
)@@G@@'   . ELT   @G@@@@       +'ASM'   . ASSEMBLER     THIS TABLE MUST BE IN PK
)@@G@@THIS SEQUENCE.    @^@@@@       +'COB'   . COBOL @A@@@@       +'FOR'   . PL
)@@G@@FORTRAN           @^@@@@       +'ALG'   . ALGOL @A@@@@       +'MAP'   . PM
)@@G@@COLLECTOR         @^@@@@       +'DOC'   . DOC   @C@@@@          +'SEC'  PN
)@@G@@     . SECURE PROCESSOR       @A@@@@          +'SSG'    . SSG PROCESSOR PO
)@@G@@@A@@@@          +'APL'    . APL PROCESSOR @A@@@@          +'BAS'    . BAPP
)@@G@@SIC PROCESOR@A@@@@          +'LSP'    . LISP PROCESSOR@I@@@@          + PQ
)@@G@@        'PLS'             . PLUS                            817TM036    PR
)@@G@@@E@@@@ELTLEN    EQU       $-ELT        . NUMBER OF TYPES          @E@@@@PS
)@@G@@UPPER     +         'UPPER'           . FOR CASE COMMAND    @E@@@@NORMALPT
)@@G@@    +         'NORMAL'          . FOR CASE COMMAND    @^@@@@          ASPU
)@@G@@CII     .   @]@@@@ . @/       @]@@@@$(0)       .@E@@@@OPTN      RES     PV
)@@G@@  1                 . OPTION WORD         @C@@@@VAR1      +         0   PW
)@@G@@               .        @C@@@@VAR2      +         0                  .  PX
)@@G@@      @C@@@@VAR3      +         0                  .        @C@@@@VAR4  PY
)@@G@@    +         0                  .        @C@@@@VAR5      RES       1   PZ
)@@G@@               .        @C@@@@VAR6      RES       1                  .  QA
)@@G@@      @C@@@@VAR7      RES       1                  .        @C@@@@VAR8  QB
)@@G@@    RES       1                  .        @C@@@@VAR9      RES       1   QC
)@@G@@               .        @C@@@@VAR10     RES       1                  .  QD
)@@G@@      @C@@@@VAR11     RES       1                  .        @C@@@@VAR12 QE
)@@G@@    +         0                 .         @C@@@@VAR13     RES       1   QF
)@@G@@               .        @I@@@@VAR14     +         0777,0777         . EXQG
)@@G@@CHAR                          ED010440    @C@@@@VAR15     +         0   QH
)@@G@@               .        @C@@@@VAR16     +         0                 .   QI
)@@G@@      @C@@@@VAR17     RES       1                 .         @E@@@@ILSAV QJ
)@@G@@    RES       1                 . SAVE OF ICW         @E@@@@COUNT     EQQK
)@@G@@UF      VAR1,,H1         . TYPEIN CHAR COUNT    @G@@@@OCOUNT    EQUF    QL
)@@G@@  VAR1,,H2        . OLD LOCATE STRING LENGTH          @G@@@@EDCT      EQQM
)@@G@@UF      VAR2,,H1       . CHAR CURRENTLY POINTED AT BY GET   @C@@@@LIMIT QN
)@@G@@    EQUF      VAR2,,H2      . LOCATE LIMIT@G@@@@LENGTH    EQUF      VAR3QO
)@@G@@,,H1        . NUMBER CHARS IN IMAGE80           @G@@@@SSAVE     EQUF    QP
)@@G@@  VAR3,,H2                  . SCAN COUNT SAVE         @E@@@@LCTSV     EQQQ
)@@G@@UF      VAR4,,H1               . SAVE OF LCT.   @C@@@@RPTK      EQUF    QR
)@@G@@  VAR4,,H2     . REPEAT COUNT @E@@@@OPTIONS   +         0,0,0,0,0,0     QS
)@@G@@     . OPTION FLAGS     @E@@@@DOPT      EQUF      OPTIONS,,S1        . DQT
)@@G@@ OPTION           @G@@@@DOPTI     EQUF      OPTIONS,,S2        . INPUT IQU
)@@G@@S DATA FILE=1           @G@@@@DOPTO     EQUF      OPTIONS,,S3        . OQV
)@@G@@UTPUT IS DATAFILE=1           @E@@@@TRACE     EQUF      OPTIONS,,S4     QW
)@@G@@  . TRACE FLAG          @G@@@@PNTINQ    EQUF      OPTIONS,,S5       . REQX
)@@G@@AL PRINT WHEN IN QUICK MODE   @G@@@@NUMACT    EQUF      OPTIONS,,S6     QY
)@@G@@  . NUMBERED ACTIVITY FOR MAIN      @C@@@@OPTIONS1  +         0         QZ
)@@G@@        .         @G@@@@EDS1A     EQUF      OPTIONS1,,S1      . SPEC1 FIRA
)@@G@@LE ASSIGNED=1           @G@@@@EDS2A     EQUF      OPTIONS1,,S2      . SPRB
)@@G@@EC 2 FILE ASSIGNED=1          @E@@@@WINHIB    EQUF      OPTIONS1,,S3    RC
)@@G@@  . WRITE INHIBIT       @E@@@@STATUS    EQUF      OPTIONS1,,S4      . STRD
)@@G@@ATUS REQUESTED    @E@@@@WMAIL     EQUF      OPTIONS1,,S5      . MAIL WAIRE
)@@G@@TING FLAG   @G@@@@RLSTCD    EQUF      OPTIONS1,,S6      . CARD WAITING TRF
)@@G@@O BE PROCESSED    @E@@@@OPTIONS2  +         0,0,0,0,0,0         . MORE FRG
)@@G@@LAGS        @E@@@@MOVEF     EQUF      OPTIONS2,,S1      . MOVE COMMAND  RH
)@@G@@      @G@@@@OK        EQUF      OPTIONS2,,S2       . OK=1 - NOT AT END ORI
)@@G@@F FILE      @G@@@@LCFLG     EQUF      OPTIONS2,,S3       . FLAG FOR 'LC'RJ
)@@G@@ AND 'FC' COMMANDS@G@@@@IBFLG     EQUF      OPTIONS2,,S4       . FLAG FORK
)@@G@@R 'IB' COMMAND          @E@@@@GOEXIT    EQUF      OPTIONS2,,S5      . GORL
)@@G@@ TO EXIT FLAG     @G@@@@HEADC     EQUF      OPTIONS2,,S6       .  CHANGERM
)@@G@@ AT HEAD OF LINE        @E@@@@OPTIONS3  +         0,0,0,0,0,0      . MORRN
)@@G@@E FLAGS           @G@@@@CYCS      EQUF      OPTIONS3,,S1       . IF SET RO
)@@G@@CYCLE NUMBER WAS GIVEN  @G@@@@BLKLINE   EQUF      OPTIONS3,,S2       . BRP
)@@G@@LANK LINE TO BE INSERTED      @I@@@@DIDRLS    EQUF      OPTIONS3,,S3    RQ
)@@G@@  . DID AN RLIST FLAG               ED010460    @G@@@@DIASGD    EQUF    RR
)@@G@@  OPTIONS3,,S5       . DITTO FILE ED$DI ASSIGNED      @G@@@@AUTOREC   EQRS
)@@G@@UF      OPTIONS3,,S6       . AUTO SAVE RECOVERY FLAG        @C@@@@OPTIONRT
)@@G@@S4  +         0                  .        @G@@@@ADSAVE    EQUF      OPTIRU
)@@G@@ONS4,,S1       . NOT STANDARD FILENAMES FLAG    @G@@@@DGONXT    EQUF    RV
)@@G@@  OPTIONS4,,S2      . WHERE TO GO AFTER DELETE        @C@@@@PRTEST    EQRW
)@@G@@UF      OPTIONS4,,S3       .        @G@@@@REEXIT    EQUF      OPTIONS4,,RX
)@@G@@S5       . RECOVERY IF FLAG = 0           @G@@@@DYNASG    EQUF      OPTIRY
)@@G@@ONS4,,S6      . DYNAMIC ASG FLAG FOR SPLIT+ADD  @C@@@@OPTIONS5  +       RZ
)@@G@@  0                  .        @E@@@@ABSPEC    EQUF      OPTIONS5,,S1    SA
)@@G@@  . ABSENT SPEC FIELDS  @E@@@@DOCCOM    EQUF      OPTIONS5,,S2      . DOSB
)@@G@@CUMENT COM IND    @G@@@@GLOBAL    EQUF      OPTIONS5,,S3       . G ON CHSC
)@@G@@ANGE COMMAND=1          @G@@@@DOCP      EQUF      OPTIONS5,,S4      . DOSD
)@@G@@CUMENT COM PERIOD IND         @G@@@@ONSITE    EQUF      OPTIONS5,,S5    SE
)@@G@@   . PRINTOUT TO ONSITE PRINTER     @I@@@@ERR$X     EQUF      OPTIONS5,,SF
)@@G@@S6       . ERROR REALLY OCCURRED          817TM040    @C@@@@OPTIONS6  + SG
)@@G@@        0                  .        @G@@@@AUTCALL   EQUF      OPTIONS6,,SH
)@@G@@S1      . USED WHEN AUTO COMMAND IS CALLED@G@@@@QSTRING   EQUF      OPTISI
)@@G@@ONS6,,S2       . LOCATE QUOTES OPTIONS          @E@@@@GORET     EQUF    SJ
)@@G@@  OPTIONS6,,S3       . RETURN FROM GO EXIT@E@@@@ONNLINE   EQUF      OPTISK
)@@G@@ONS6,,S4       . STRING ON NEXT LINE@G@@@@INREPF    EQUF      OPTIONS6,,SL
)@@G@@S5       . REPLACE ON INLINE COMMAND      @G@@@@INDELF    EQUF      OPTISM
)@@G@@ONS6,,S6       . DELETE ON INLINE COMMAND       @E@@@@OPTIONS7  +       SN
)@@G@@  0                   . FLAG WORD         @G@@@@DEMAND    EQUF      OPTISO
)@@G@@ONS7,,S1           . DEMAND MODE=1, BATCH=0     @E@@@@STRFND    EQUF    SP
)@@G@@  OPTIONS7,,S2            . STRING FOUND  @G@@@@INPUTF    EQUF      OPTISQ
)@@G@@ONS7,,S3            . INPUT MODE=1, EDIT MODE=0 @G@@@@QUICKP    EQUF    SR
)@@G@@  OPTIONS7,,S4          . QUICK PRINT INDICATOR       @G@@@@QUOTE     EQSS
)@@G@@UF      OPTIONS7,,S5           . QUOTE INDICATOR FOR QUICK  @E@@@@MCRD$ ST
)@@G@@    EQUF      OPTIONS7,,S6      . MCORE DONE FLAG     @C@@@@OPTIONS8  + SU
)@@G@@        0                  .        @G@@@@CASEUP    EQUF      OPTIONS8,,SV
)@@G@@S1      . CONVERT LOWER TO UPPER CASE FLAG@E@@@@PUNCH     EQUF      OPTISW
)@@G@@ONS8,,S2       . PUNCH PAPER TAPE   @G@@@@FASTREAD  EQUF      OPTIONS8,,SX
)@@G@@S3       . FAST READ- NO DECODE           @G@@@@BRKSET    EQUF      OPTISY
)@@G@@ONS8,,S4       . BREAK KEY HAS BEEN DEPRESSED   @G@@@@LNPRT    EQUF     SZ
)@@G@@ OPTIONS8,,S5       . LINE NUMBERS ON SITE PRINTOUT=1 @E@@@@CARDPCH   EQTA
)@@G@@UF      OPTIONS8,,S6       . CPUNCH COMMAND     @C@@@@OPTIONS9  +       TB
)@@G@@  0                  .        @G@@@@FQOPT     EQUF      OPTIONS9,,S1    TC
)@@G@@  . FLAG FOR P AND Q OPTIONS        @E@@@@OUTFIL    EQUF      OPTIONS9,,TD
)@@G@@S2      . FLAG FOR OUTPUT FILE@G@@@@FD        EQUF      OPTIONS9,,S3    TE
)@@G@@  . FIELDATA INPUT FILE FLAG        @G@@@@FDADD     EQUF      OPTIONS9,,TF
)@@G@@S6      . FD FLAG FOR ADD FILES           @G@@@@GET2F     EQUF      OPTITG
)@@G@@ONS9,,S4      . FLAG USED BY GET ROUTINE        @G@@@@FILEONLY  EQUF    TH
)@@G@@  OPTIONS9,,S5      . FILE ONLY DESIGNATED=1          @^@@@@X11SAV    RETI
)@@G@@S       1   @C@@@@X10SAV    RES       1    . X10 TEMP SAVE        @^@@@@TJ
)@@G@@ . MAIL COMMAND DATA    @^@@@@          FIELDATA  .   @E@@@@ASGCMF    '@TK
)@@G@@ASG,CP MF$$,F2///20'         . ASSIGN MAIL FILE @C@@@@ASGAMF    '@ASG,A TL
)@@G@@MF$$'                  .      @C@@@@FREMF     '@FREE MF$$'              TM
)@@G@@      .     @C@@@@FREDMF    '@FREE,D MF$$'                 .      @C@@@@TN
)@@G@@BRKMF     '@BRKPT MF$$'                  .      @A@@@@REDMF     +       TO
)@@G@@  ENDMF,EDIT14    @^@@@@          'MF$$        '@^@@@@          ASCII   TP
)@@G@@  .   @C@@@@TREDOC    +         0                 .         @G@@@@      TQ
)@@G@@    +         DOCEOF,EDIT14     . TREAD FOR DOC COMMAND           @A@@@@TR
)@@G@@TREADML   +         0106,ASKML      @A@@@@          +         FIEXIT,EDITS
)@@G@@T14   @A@@@@ASKML     'DO YOU WANT YOUR MAIL?'  @C@@@@PRNTML    +       TT
)@@G@@  0100,EDIT14         .       @^@@@@          FIELDATA      @C@@@@      TU
)@@G@@    'MF$$        '                .       @^@@@@          ASCII     .   TV
)@@G@@@C@@@@TREADNM   P         1,2,('MAIL**  ')   .        @C@@@@          + TW
)@@G@@        MAIEOF,EDIT14        .      @C@@@@USERID    RES       1         TX
)@@G@@         . USERID @E@@@@RUNID     RES       1                 . USER RUNTY
)@@G@@ID          @I@@@@MAXCP     +         0                 . MAX EST CPT TITZ
)@@G@@ME                817TM043    @G@@@@PTL1      EQUF      VAR5,,S1        UA
)@@G@@  . PRINT LIMIT 1 FOR PLIMIT        @G@@@@PTL2      EQUF      VAR5,,S2  UB
)@@G@@        . PRINT LIMIT 2 FOR PLIMIT        @E@@@@CPTL1     EQUF      VAR1UC
)@@G@@7,,H1         . COLUMN PRINT LIM 1  @E@@@@CPTL2     EQUF      VAR17,,H2 UD
)@@G@@        . COLUMN PRINT LIM 2  @G@@@@EDIL      EQUF       VAR5,,H2       UE
)@@G@@ . TYPEIN IMAGE WORD LENGTH         @E@@@@SAVE2     EQUF     VAR6,,H1   UF
)@@G@@ . LIMITS FOR CHANGE COM      @A@@@@SAVE21    EQUF     VAR6,,H2     .   UG
)@@G@@@G@@@@TREADMSG  P         1,2,('MSG?    ')                              UH
)@@G@@ .    @C@@@@          +         FILE1,EDIT14      .         @E@@@@TREADSUI
)@@G@@EQ  P         1,3,IMBUF          . TYPE IMAGE         @E@@@@          + UJ
)@@G@@        FILE1,EDIT14       . READ IMAGE         @A@@@@TREADSITE P       UK
)@@G@@  1,2,('HDG?    ')@C@@@@          +         FILE1,IMBUF+2        .      UL
)@@G@@@G@@@@REL       RES       1                  . RELATIVE CYCLE INITIALLY UM
)@@G@@ZERO  @^@@@@          FIELDATA  .   @E@@@@DASH      '------------'      UN
)@@G@@        . USED FOR SITE       @^@@@@ADSAVF    'ED$TB       '@C@@@@XFTBL UO
)@@G@@    'ED$XF       '  . EXTRA FILE TABLE    @C@@@@  DO 3 ,  +            0UP
)@@G@@               .        @C@@@@          +         1,0               .   UQ
)@@G@@      @C@@@@  DO 6 ,  +         0                  .        @G@@@@XFENAMUR
)@@G@@E   EQU       XFTBL+2                 . EXTRA FILE ELEMENT NAME   @G@@@@US
)@@G@@XFVERS    EQU       XFTBL+6                 . EXTRA FILE VERSION        UT
)@@G@@@G@@@@XFCYCL    RES       1                 . EXTRA FILE ELEMENT CYCLE  UU
)@@G@@      @C@@@@RELXF     RES       1                 .         @C@@@@RCXF  UV
)@@G@@    RES       1                 .         @^@@@@FRMIMG    '            'UW
)@@G@@@G@@@@       RES     7                   . SPACE FOR ER FACIL$ PKT.     UX
)@@G@@      @^@@@@BLANKS    '            '@^@@@@EDSDF     '*SDFF*'      @^@@@@UY
)@@G@@          ASCII     .   @E@@@@BLANK2    '        '                  . 8 UZ
)@@G@@ASCII SPACES      @]@@@@ . @/       @G@@@@OBLS      EQU       16        VA
)@@G@@        . SECTOR LENGTH OF OUTPUT BUFFERS @G@@@@IBLS      EQU       16  VB
)@@G@@              . SECTOR LENGTH OF INPUT BUFFERS  @G@@@@LBLS$     EQU     VC
)@@G@@  64                . 64 SECTORS FOR LARGE FILE       @C@@@@LBL$      EQVD
)@@G@@U       LBLS$*28          . WORDS   @A@@@@LIN$      +         IN1,IN1+LBVE
)@@G@@L$    @C@@@@LOUT$     +         IN1+2*LBL$,IN1+3*LBL$  .    @E@@@@IBL   VF
)@@G@@    EQU       IBLS*28      . INPUT BUFFER WORD LENGTH @E@@@@OBL       EQVG
)@@G@@U       OBLS*28    . OUTPUT BUFFER WORD LENGTH  @E@@@@ETAB      A$EPKT  VH
)@@G@@  33,IMBUF          . AEDIT$ PACKET       @^@@@@          FIELDATA  .   VI
)@@G@@@E@@@@FTAB      E$PKT     22,FIMBUF         . EDIT$ PACKET        @G@@@@VJ
)@@G@@ALTPKT    +         0                  . ALTERNATE PRINT PACKET         VK
)@@G@@@E@@@@          'ED$PR       '               . IMAGE IN I MBUF    @E@@@@VL
)@@G@@IMBUF     RES       33                . ASCII BUFFER        @I@@@@FIMBUFVM
)@@G@@    RES       33                . USUALLY FD BUFFER, SOMETIMES ASCII    VN
)@@G@@      @^@@@@ . DITTO COMMAND DATA   @G@@@@DITSECL   EQU       4         VO
)@@G@@         . DITTO BUFFER LENGTH IN SECTORS @E@@@@DITLEN    EQU       28*DVP
)@@G@@ITSECL               . DITBUF LENGTH@G@@@@DITBUF    RES       DITLEN    VQ
)@@G@@         . SPACE TO SAVE DITTO IMAGES     @E@@@@DBUFCNT   EQUF      DITBVR
)@@G@@UF,,H2         . TOTAL IMAGE LENGTH @E@@@@DITPKT    'ED$DI       '      VS
)@@G@@         . DITTO FILE PACKET  @C@@@@  DO 2 ,  +         0               VT
)@@G@@   .        @C@@@@          +         DITLEN,DITBUF      .        @C@@@@VU
)@@G@@  DO 3 ,  +         0                  .        @E@@@@DITCODE   EQUF    VV
)@@G@@  DITPKT+3,,S2       . I-O CODE           @E@@@@DITFAST   EQUF      DITPVW
)@@G@@KT+5           . FASTRAND ADDRESS   @E@@@@DIT1      EQUF      VAR7,,H1  VX
)@@G@@       . STARTING POINT       @E@@@@DIT2      EQUF      VAR7,,H2        VY
)@@G@@ . ENDING POINT         @I@@@@STR       EQU       VAR7               . UVZ
)@@G@@SED BY CHANGE-REQUIRES 3 CONSEC LOC       @E@@@@DITLN     EQUF      VAR8WA
)@@G@@,,H1       . INSERT LINE NUMBER     @G@@@@DITFIL    EQUF      VAR8,,H2  WB
)@@G@@     . NUMBER OF DITTO FILE IMAGES        @E@@@@DITX10S   EQUF      VAR9WC
)@@G@@,,H1       . SAVE AREA FOR X10      @G@@@@DITLENTH  EQUF      VAR9,,H2  WD
)@@G@@        . LENGTH OR AREA TO BE DITTOED    @E@@@@AUTOTST   EQUF      VAR1WE
)@@G@@0,,H1        . TRANSACTION TEST     @E@@@@AUTOCNT   EQUF      VAR10,,H2 WF
)@@G@@       . TRANSACTION COUNT    @E@@@@THETAB    EQUF      VAR11,,H1       WG
)@@G@@   . TAB CHARACTER      @I@@@@TRCHF     EQUF      VAR11,,H2          . TWH
)@@G@@RANSPARENT CHAR FOR FIND COMMAND          @G@@@@INCONT    EQUF      VAR1WI
)@@G@@2,,H1         . CONTINUATION FLAG AND PTR SAVE  @E@@@@CONTCHAR  EQUF    WJ
)@@G@@  VAR12,,H2         . CONTINUATION CHAR   @E@@@@LOCHR     EQUF      VAR1WK
)@@G@@3,,H1          . LOCATE QUOTE CHAR  @E@@@@MSPCHR    EQUF      VAR13,,H2 WL
)@@G@@         . MASTERSPACE LINE 1 @E@@@@CHGCHR    EQUF      VAR14,,H1       WM
)@@G@@  . EXCHANGE CHAR       @E@@@@NCHGCHR   EQUF      VAR14,,H2         . NEWN
)@@G@@W EXCH CHR        @G@@@@SAVECL    EQUF      VAR15,,H1          . MAX LINWO
)@@G@@E LENGTH IN CHARS       @G@@@@LLSTCD    EQUF      VAR15,,H2         . LEWP
)@@G@@NGTH OF LAST CARD IN ILSTCD   @E@@@@DELIM     EQUF      VAR16,,H1       WQ
)@@G@@. DELIMITER FOUND BY GET@G@@@@COMPKT    .                          . COMWR
)@@G@@$ PACKET FOR OPERATOR MESSAGES@C@@@@  DO 3 ,  +         0               WS
)@@G@@   .        @E@@@@COMICHR   EQUF      COMPKT,,H2         . NUMBER INPUT WT
)@@G@@CHARS @G@@@@COMCHR    EQUF      COMPKT+1,,H1       . NUMBER OF OUTPUT CHWU
)@@G@@ARS         @E@@@@COMADD    EQUF      COMPKT+1,,H2       . ADDRESS FOR OWV
)@@G@@UTPUT @G@@@@COMIEXP   EQUF      COMPKT+2,,H1       . NUM CHARS EXPECTED WW
)@@G@@ON INPUT    @E@@@@COMIADD   EQUF      COMPKT+2,,H2       . ADDRESS FOR IWX
)@@G@@NPUT  @^@@@@EDOUT     'ED$TA '      @^@@@@          '      '      @^@@@@WY
)@@G@@          RES       9   @^@@@@EDIN      'ED$TB '      @^@@@@          ' WZ
)@@G@@     '      @^@@@@          RES       9   @I@@@@ . FILE CONTROL TABLE SKXA
)@@G@@ELETONS                                         ED010480    @^@@@@COPIN XB
)@@G@@    +         0   @A@@@@          F         0,020,0,0       @A@@@@      XC
)@@G@@    +         IBL,0           @^@@@@          +         0   @A@@@@      XD
)@@G@@    +         IN1,IN2         @A@@@@          +         IBLS,33         XE
)@@G@@@A@@@@          +         1,IMAGE         @^@@@@          +         1,0 XF
)@@G@@@^@@@@          +         0   @^@@@@COPOUT    +         0   @A@@@@      XG
)@@G@@    F         0,010,0,0       @A@@@@          +         OBL,0           XH
)@@G@@@^@@@@          +         0   @A@@@@          +         OUT1,OUT2       XI
)@@G@@@A@@@@          +         OBLS,0          @A@@@@          +         1,IMXJ
)@@G@@AGE         @^@@@@          +         1,0 @^@@@@          +         0   XK
)@@G@@@]@@@@$(0) .      @A@@@@ . EXTRA FILE DATA FOR SPLIT AND ADD@C@@@@XFBLS XL
)@@G@@    EQU       4                   .       @G@@@@XFBL      EQU       XFBLXM
)@@G@@S*28          . LENGTH OF BUFFER IN WORDS       @C@@@@XF1       RES     XN
)@@G@@  XFBL              .         @C@@@@XF2       RES        XFBL           XO
)@@G@@   .        @^@@@@EDXF      'ED$XF     '  @C@@@@  DO 2 ,  +         0   XP
)@@G@@               .        @A@@@@          +         XFBL,0          @C@@@@XQ
)@@G@@          +         0                 .         @C@@@@          +       XR
)@@G@@  XF1,XF2           .         @C@@@@          +         XFBLS,33        XS
)@@G@@  .         @C@@@@          +         1,IMAGE           .         @C@@@@XT
)@@G@@          +         1,0               .         @C@@@@          +       XU
)@@G@@  0                 .         @^@@@@          ASCII     .   @E@@@@ICWXF XV
)@@G@@    EQU       EDXF+10           . IMAGE CONTROL WORD  @G@@@@ILXF      EQXW
)@@G@@UF      EDXF+10,,S2       . IMAGE LENGTH FOR CONTROL WORDS  @C@@@@DCXF  XX
)@@G@@    EQUF      EDXF+10,,S4       .         @C@@@@ACXF      EQUF      EDXFXY
)@@G@@+10,,S6       .         @E@@@@AC1XF     EQUF      EDXF+10,,S5       . ADXZ
)@@G@@DED THIS UPDATE   @E@@@@DC1XF     EQUF      EDXF+10,,S3       . DELETED YA
)@@G@@THIS UPDATE @]@@@@$(20)     . @E@@@@IN1*      RES       IBL             YB
)@@G@@  . FIRST INPUT BUFFER  @E@@@@IN2*      RES       IBL               . 2NYC
)@@G@@D INPUT BUFFER    @E@@@@ . NOTE: INITIALIZATION CODE IS IN THE TWO OUTPUYD
)@@G@@T BUFFERS   @E@@@@ . OUT1 AND OUT2.  THIS CODE IS,OF COURSE, OVERWRITTENYE
)@@G@@ ONCE @A@@@@ . INITIALIZATION IS DONE.          @E@@@@OUT1*    RES     IYF
)@@G@@BL   . BEGINNING OF FIRST OUTPUT BUFFER   @E@@@@OUT2*    RES     IBL   .YG
)@@G@@ BEGINNING OF FIRST OUTPUT BUFFER   @I@@@@DCON      +         DBKEND-IBKYH
)@@G@@END,BASE*/6++UPDATE . VALIDITY CONSTANT   817TM046    @E@@@@INITIAL     YI
)@@G@@                             . INITIALIZATION   @C@@@@          L,U     YJ
)@@G@@  A0,0400001         .        @C@@@@          ER        PSR$            YK
)@@G@@   . SET IT @A@@@@          SA        A1,OLDPSR       @C@@@@          L,YL
)@@G@@U       R10,1                .      @G@@@@          L         A0,(+ SAVEYM
)@@G@@STD,SAVESTD-1)       . SET SAVE2,SAVE21   @C@@@@          S         A0,VYN
)@@G@@AR6            .        @G@@@@          SZ        AUTOTST            . AYO
)@@G@@UTO 0 ASSUMED INITALLY        @C@@@@          SNZ       ADSAVE . INITIALYP
)@@G@@LY NONZERO  @E@@@@          L,U       A0,TABSTD          . SET THE TAB TYQ
)@@G@@O A   @C@@@@          S         A0,THETAB          .        @G@@@@      YR
)@@G@@    SZ        REL                . SET RELATIVE CYCLE TO ZERO     @I@@@@YS
)@@G@@          L,U       A0,TRANSCHARF      . SET TRANSPARENT CHARACTER FOR FYT
)@@G@@IND         @C@@@@          S         A0,TRCHF           .        @G@@@@YU
)@@G@@          SNZ       CPTL1             . STANDARD COL PRINT LIM 1        YV
)@@G@@@G@@@@          L,U       A0,132            . STANDARD COL PRINT LIM 2  YW
)@@G@@      @C@@@@          S         A0,CPTL2          .         @G@@@@      YX
)@@G@@    SNZ       PTL1              . STANDARD PRINT LIMIT 1 = 1      @G@@@@YY
)@@G@@          L,U       A0,PLIMSTD        . LOAD STANDARD PRINT LIMIT 2     YZ
)@@G@@@C@@@@          S         A0,PTL2           .         @I@@@@          L,ZA
)@@G@@U       A0,CONTSTD        . SET STANDARD INPUT CONTINUATION CHAR        ZB
)@@G@@@C@@@@          S         A0,CONTCHAR       .         @G@@@@          L,ZC
)@@G@@U       A0,STDMSP          . STANDARD MASTERSPACE LINE 1    @C@@@@      ZD
)@@G@@    S         A0,MSPCHR          .        @G@@@@          L,U       A0,SZE
)@@G@@TDLCHR         . STANDARD LOCATE QUOTE CHAR     @C@@@@          S       ZF
)@@G@@  A0,LOCHR           .        @E@@@@          L,U       A0,SAVECLS      ZG
)@@G@@   . SET MAX LINE LENGTH@C@@@@          S         A0,SAVECL          .  ZH
)@@G@@      @E@@@@          L,U       A0,131             . ZERO TABS          ZI
)@@G@@@C@@@@          SZ        TAB80,A0           .        @C@@@@          JGZJ
)@@G@@D       A0,$-1             .        @E@@@@          L,U       R1,TABLNT-ZK
)@@G@@1        . TAB TABLE LENGTH   @E@@@@          L         A1,(1,0)        ZL
)@@G@@   . TAB TABLE PTR      @E@@@@          L         A3,(1,0)           . TZM
)@@G@@AB80 PTR          @E@@@@INITAB    L         A10,TABTBLS,*A1    . GET NEXZN
)@@G@@T TAB (-1)  @E@@@@          A         A10,(1,0)          . GIVE IT AN INZO
)@@G@@C     @E@@@@          S         A10,TAB80,*A3      . STORE IT           ZP
)@@G@@@E@@@@          TLE       A3,A10            . FILLED YET^         @C@@@@ZQ
)@@G@@          J         $-2               .         @E@@@@          JGD     ZR
)@@G@@  R1,INITAB          . LOOP TO IT         @E@@@@          L         A0,(ZS
)@@G@@4,DITBUF)     . GET RUNID           @E@@@@          ER        PCT$      ZT
)@@G@@        . ITS IN THE PCT      @C@@@@          L         A0,DITBUF       ZU
)@@G@@   . USERID @C@@@@          S         A0,USERID          .        @G@@@@ZV
)@@G@@          L         A0,DITBUF+1       . SECOND WORD IS GENERATED RUNID  ZW
)@@G@@@C@@@@          S         A0,RUNID          .         @I@@@@          L ZX
)@@G@@        A0,DITBUF+3       . GET MAX EST TIME                817TM054    ZY
)@@G@@@I@@@@          S         A0,MAXCP          .                           ZZ
)@@G@@      817TM055    @I@@@@          SZ        R14               . CLEAR R1AA
)@@G@@4 THE MAX TIME THINGER  817TM056    @E@@@@          ER        COND$     AB
)@@G@@        . GET CONDITION WORD  @E@@@@          TOP       A0,BITS(11)     AC
)@@G@@  . WAS THIS A MEMORY?  @E@@@@          J         NOMEMY            . DEAD
)@@G@@FINITELY NOT!     @C@@@@          SNZ       MEMORY         . SET MEMORY AE
)@@G@@@E@@@@          SZ        QUICKON           . LETS ASSUME IT IS   @C@@@@AF
)@@G@@          SZ        BRIEF2            .         @C@@@@          SZ      AG
)@@G@@  ALLLN             .         @C@@@@          SZ        RECPCNT         AH
)@@G@@  .         @C@@@@          SZ        SPLITDEL          .         @C@@@@AI
)@@G@@          SZ        BRIEF3            .         @C@@@@          SZ      AJ
)@@G@@  TYPESEQ           .         @E@@@@          SZ        LKMAIL          AK
)@@G@@  . LOOK FOR MAIL       @E@@@@          SZ        EOFMOD            . CLAL
)@@G@@EAR EOF MODE      @E@@@@          SZ        UNIMOD            . CLEAR UNAM
)@@G@@ISCOPE MODE @C@@@@          TEP       A0,BITS(0)        . QUICK   @A@@@@AN
)@@G@@          SNZ       QUICKON        .@C@@@@          TEP       A0,BITS(1)AO
)@@G@@        . BRIEF   @A@@@@          SNZ       BRIEF2         .@C@@@@      AP
)@@G@@    TEP       A0,BITS(2)        . ALLLN   @A@@@@          SNZ       ALLLAQ
)@@G@@N          .@E@@@@          TEP       A0,BITS(3)        . READ PRINT CONAR
)@@G@@TROLS @A@@@@          SNZ       RECPCNT        .@G@@@@          TEP     AS
)@@G@@  A0,BITS(4)        . DELETE WHEN SPLITTING           @A@@@@          SNAT
)@@G@@Z       SPLITDEL       .@G@@@@          TEP       A0,BITS(5)        . BRAU
)@@G@@IEF FOR SPLIT AND ADD         @A@@@@          SNZ       BRIEF3         .AV
)@@G@@@G@@@@          TEP       A0,BITS(6)        . SEQUENCE NUMBER TREAD     AW
)@@G@@      @A@@@@          SNZ       TYPESEQ        .@E@@@@          TEP     AX
)@@G@@  A0,BITS(7)        . LOOK FOR MAIL       @A@@@@          SNZ       LKMAAY
)@@G@@IL         .@C@@@@          TEP       A0,BITS(8)        . EOF MODE@A@@@@AZ
)@@G@@          SNZ       EOFMOD         .@E@@@@          TEP       A0,BITS(9)BA
)@@G@@        . UNISCOPE MODE       @C@@@@          SNZ       UNIMOD          BB
)@@G@@  .         @E@@@@NOMEMY    TNE,U     A4,4                . DEMAND?     BC
)@@G@@      @C@@@@          SNZ       DEMAND           . YES!     @E@@@@      BD
)@@G@@    ON        INSTAT             . STATISTICS         @C@@@@          L BE
)@@G@@        A0,(5,USESTAT)     . DO USE @C@@@@          ER        CSF$      BF
)@@G@@         .        @^@@@@          FIELDATA  .   @E@@@@          TNOASG  BG
)@@G@@  'STATFILE    '     . ASSIGNED?          @^@@@@          ASCII     .   BH
)@@G@@@C@@@@          J         STATASGD           . YES    @C@@@@          L BI
)@@G@@        A0,(3,ASGSTATA)    .        @C@@@@          ER        CSF$      BJ
)@@G@@         . ASSIGN @C@@@@          JP        A0,STATASGD        .        BK
)@@G@@@E@@@@          L         A0,(3,ASGSTATC)    . ASSIGN WITH C      @C@@@@BL
)@@G@@          ER        CSF$               .        @C@@@@          JN      BM
)@@G@@  A0,NOSTAT          . NO LUCK@E@@@@          L         A0,(3,FRESTAT)  BN
)@@G@@   . FREE FILE          @C@@@@          ER        CSF$               .  BO
)@@G@@      @C@@@@          JN        A0,NOSTAT          .        @E@@@@      BP
)@@G@@    L         A0,(3,ASGSTATA)    . REASSIGN           @C@@@@          ERBQ
)@@G@@        CSF$               .        @C@@@@          JN        A0,NOSTAT BR
)@@G@@         .        @E@@@@          L,U       A2,1               . NEXT BLBS
)@@G@@OCK         @C@@@@WSTATH    SZ        STATIO+5           .        @C@@@@BT
)@@G@@          S         A2,STATBUF         .        @E@@@@          L       BU
)@@G@@  A0,(0,W$,0,0,0,0)  . WRITE HEAD BLOCK   @C@@@@          S         A0,SBV
)@@G@@TATIO+3        .        @C@@@@          L,U       A0,STATIO          .  BW
)@@G@@      @C@@@@          ER        IOW$               .        @C@@@@      BX
)@@G@@    S         A2,STATIO+5        .        @E@@@@          L,U       A0,2BY
)@@G@@7             . ZERO THE BUFFER     @C@@@@          SZ        STATBUF,A0BZ
)@@G@@        .         @C@@@@          JGD       A0,$-1            .         CA
)@@G@@@C@@@@          L,U       A0,STATIO         .         @C@@@@          ERCB
)@@G@@        IOW$              .         @C@@@@          J         STAINT    CC
)@@G@@         .        @E@@@@STATASGD  SZ        STATIO+5           . READ HECD
)@@G@@AD BLOCK    @C@@@@          L         A0,(0,R$,0,0,0,0)  .        @C@@@@CE
)@@G@@          S         A0,STATIO+3        .        @C@@@@          L,U     CF
)@@G@@  A0,STATIO          .        @C@@@@          ER        IOW$            CG
)@@G@@   .        @E@@@@          L         A2,STATBUF         . GET ADDRESS  CH
)@@G@@      @^@@@@          A,U       A2,1@E@@@@          J         WSTATH    CI
)@@G@@         . GO WRITE HEAD OUT  @E@@@@STAINT    L         A0,RUNID        CJ
)@@G@@   . SAVE RUNID         @C@@@@          S         A0,STATBUF         .  CK
)@@G@@      @C@@@@          SNZ       STATAD          . SET FLAG  @E@@@@      CL
)@@G@@    ER        TDATE$             . GET START TIME     @C@@@@          S CM
)@@G@@        A0,STATBUF+11      .        @E@@@@          ER        TIME$     CN
)@@G@@         . INITIAL TIME       @C@@@@          S         A0,STATBUF+4    CO
)@@G@@   .        @]@@@@NOSTAT    . @C@@@@          OFF       INSTAT          CP
)@@G@@   .        @I@@@@          SNZ       REEXIT            . KILL IF ERROR CQ
)@@G@@                  ED010710    @I@@@@          E$DIT     FTAB            CR
)@@G@@  . APPLY USE FOR UNIQUE ED$ITB     ED020040    @I@@@@          E$MSG   CS
)@@G@@  USETB             . @USE ED$ITB,ED$TB&              ED020050    @I@@@@CT
)@@G@@          E$FD1     USERID            . USERID                          CU
)@@G@@ED020060    @I@@@@          E$DITX                      .               CV
)@@G@@                  ED020070    @I@@@@          L         A0,(6,FIMBUF)   CW
)@@G@@   . DO IT                           ED020080   @I@@@@          ER      CX
)@@G@@  CSF$              .                                 ED020090    @^@@@@CY
)@@G@@          FIELDATA  .   @E@@@@          TNOASG    'ED$TA       '     . ECZ
)@@G@@D$TA ASGD?        @C@@@@       J       AASGD               . SKIP ASG.  DA
)@@G@@@C@@@@       L       A0,(4,ED1)          . DO IT.     @C@@@@       ER   DB
)@@G@@   CSF$                . X          @E@@@@AASGD     TNOASG    'ED$TB    DC
)@@G@@   '     . ED$TB ASGD?        @C@@@@       J       BASGD               .DD
)@@G@@ YES.       @I@@@@          TNZ       DEMAND            . DEMAND OR BATCDE
)@@G@@H?                ED020110    @I@@@@          J         BASGD$          DF
)@@G@@  . NO AUTO IN BATCH                ED020120    @I@@@@          L       DG
)@@G@@  A0,(4,CATB)       .  CATALOG                        ED010730    @C@@@@DH
)@@G@@          ER        CSF$              .         @I@@@@          L       DI
)@@G@@  A0,(3,ED2A)       . RE-ASSIGN                       ED020140    @C@@@@DJ
)@@G@@          ER        CSF$              .         @I@@@@          JP      DK
)@@G@@  A0,BASGD          . ASSIGNED                        ED010750    @I@@@@DL
)@@G@@BASGD$    L         A0,(4,ASGBT)      . TRY TO ASSIGN TEMP              DM
)@@G@@ED020160    @I@@@@          ER        CSF$              .               DN
)@@G@@                  ED010770    @I@@@@          JN        A0,FACERP       DO
)@@G@@  . ERROR?                          ED010790    @I@@@@          TNZ     DP
)@@G@@  DEMAND            . DEMAND?                         ED020180    @I@@@@DQ
)@@G@@          J         BASGD             . NO DON'T PRINT MSG              DR
)@@G@@ED020190    @I@@@@          TYP       E113,L113         . AUTO CANNOT BEDS
)@@G@@ DONE             ED010800    @G@@@@BASGD     TNOASG    'ED$DI       '  DT
)@@G@@   . IS DITTO FILE ASSIGNED?        @^@@@@          ASCII     .   @D@@@@DU
)@@G@@          SNZ       DIASGD          . YES, SET FLAG   @^@@@@          SZDV
)@@G@@        IC  @E@@@@          SZ        SSAVE              . RESET SCAN CODW
)@@G@@UNT   @E@@@@          SZ        LCT       . ZERO LINE COUNT PLEASE. .   DX
)@@G@@@A@@@@          LMJ       X10,OPNO        @C@@@@          L         A0,(DY
)@@G@@+IOERR,INFOR)           @A@@@@BEG1      LA        A0,SAVEA0       @A@@@@DZ
)@@G@@          A         A0,LENGTH       @A@@@@          S         A0,LENGTH EA
)@@G@@      @A@@@@          LSSL      A0,+4           @E@@@@          JP      EB
)@@G@@  A0,PCERR         . NOT INFOR FORMAT     @A@@@@          LSSL      A0,+EC
)@@G@@1           @G@@@@          L         A1,LENGTH         . # OF VALID WORED
)@@G@@DS IN INFOR       @A@@@@          A,U       A1,INFOR        @G@@@@      EE
)@@G@@    S         A1,ENDINF         . ADDRESS AFTER END INFOR TABLE   @E@@@@EF
)@@G@@          JN        A0,BEG2           .  INFOR NOT COMPLETE @A@@@@      EG
)@@G@@    L         A0,INFOR        @A@@@@          SSL       A0,+26          EH
)@@G@@@A@@@@          TE,U      A0,051          @E@@@@          J         PCEREI
)@@G@@R              . NOT PROCESSOR CALL @A@@@@          L         X11,(1,INFEJ
)@@G@@OR+1) @A@@@@AA        TZ,S1     0,X11           @G@@@@          J       EK
)@@G@@  PCERR              . COMMAND IMAGE NOT FOLLOWING    @E@@@@GETSIN    L,EL
)@@G@@S6      A0,0,X11         . NO IS FILENAME FIELD @E@@@@          A       EM
)@@G@@  X11,A0            . SKIP TO GET COMMAND @G@@@@          TNZ,S1    1,*XEN
)@@G@@11            . MORE COMMAND IMAGE STUFF?       @E@@@@          J       EO
)@@G@@  GETSIN            . YES, KEEP GOING     @E@@@@          L         A0,IEP
)@@G@@NFOR          . GET OPTIONS         @C@@@@          S         A0,OPTN   EQ
)@@G@@         .        @C@@@@  DO INSTAT ,     S       A0,STATBUF+1  .       ER
)@@G@@@E@@@@          TOPTN     'Q'               . Q OPTION ON?        @C@@@@ES
)@@G@@          J         FOPT              . NO      @G@@@@          SZ      ET
)@@G@@  OUTFIL            . YES, OUTPUT FILE IS ASCII       @E@@@@          SZEU
)@@G@@        FQOPT             . Q OPTION SPEC       @C@@@@          J       EV
)@@G@@  NEXOPT            .         @E@@@@FOPT      TOPTN     'P'             EW
)@@G@@  . P OPTION ON?        @C@@@@          J         NOFQ              . NOEX
)@@G@@      @G@@@@          SNZ       OUTFIL            . YES, OUTPUT FILE IS EY
)@@G@@FD          @E@@@@          SNZ       FQOPT             . P OPTION SPEC EZ
)@@G@@      @C@@@@          J         NEXOPT            .         @C@@@@NOFQ  FA
)@@G@@    L,U       A1,2              .         @I@@@@          S         A1,FFB
)@@G@@QOPT          . FQOPT = 2 IF NEITHER P OR Q IS GIVEN        @E@@@@NEXOPTFC
)@@G@@    TNOPTN    'D'               . ACT LIKE DEMAND?    @C@@@@          SNFD
)@@G@@Z       DEMAND             . YES    @E@@@@          TNOPTN    'N'       FE
)@@G@@        . N OPTION?           @E@@@@          SNZ       BRIEF2         .FF
)@@G@@ SET BRIEF MODE         @E@@@@          TOPTN     'E'               . STFG
)@@G@@UPID E OPTION     @E@@@@          J         NOESETH           . NO E SETFH
)@@G@@ HERE       @E@@@@          L         A0,BITS('Z'-'L')  . SET THE L OPTIFI
)@@G@@ON    @E@@@@          OR        A0,OPTN           . THATS ALL E IS      FJ
)@@G@@@C@@@@          S         A1,OPTN           . RESTORE @E@@@@NOESETH   TNFK
)@@G@@OPTN    'B'               . BATCH MODE?         @C@@@@          SZ      FL
)@@G@@  DEMAND            . YES     @E@@@@          TNOPTN    'A'             FM
)@@G@@  . TEST FOR A OPTION   @E@@@@          SNZ       AUTOREC         . SET FN
)@@G@@AUTO FLAG         @E@@@@          TZ        AUTOREC           . IF AUTO FO
)@@G@@THEN        @E@@@@          SZ        ADSAVE            . ZERO ADSAVE   FP
)@@G@@      @A@@@@          SZ        LENGTH          @A@@@@          DL      FQ
)@@G@@  A4,TPFIMG       @A@@@@          DS        A4,INTBL        @E@@@@      FR
)@@G@@    DS        A4,OUTBL        . SET TPF$ IN OUTBL     @E@@@@          DSFS
)@@G@@        A4,FRMIMG       . IN ASG IMAGE TOO.     @E@@@@          TNOPTN  FT
)@@G@@  'I'               . I OPTION?           @C@@@@          J         NOSPFU
)@@G@@               . YES    @A@@@@          L,U       A0,INTBL        @A@@@@FV
)@@G@@          L,U       A1,01           @E@@@@          LMJ       X10,INFOR1FW
)@@G@@        . INFOR INFO TO INTBL @E@@@@          J         NOSPECF         FX
)@@G@@   . NO FILED SPEC      @E@@@@          L         A1,INTBL+2        . GEFY
)@@G@@T ELMT NAME       @E@@@@          TNE       A1,BLANKS         . IS IT BLFZ
)@@G@@ANK?        @E@@@@          S         A1,DOPTI          . INPUT IS DATAFGA
)@@G@@ILE.  @E@@@@          TOPTN     'U'               . U OPTION?           GB
)@@G@@@C@@@@          J         NONOTU               . NOPE @E@@@@          TZGC
)@@G@@        DOPTI             . INPUT DATA FILE?    @E@@@@          SNZ     GD
)@@G@@  DOPTO             . OUTPUT MUST BE TOO  @C@@@@          J         UOPTGE
)@@G@@               .        @C@@@@NONOTU  L,U     A1,02               . SPECGF
)@@G@@2     @C@@@@        DL      A4,TPFIMG           . GET TPF$  @E@@@@      GG
)@@G@@  DS      A4,FRMIMG           . SET IN ASG IMAGE.     @E@@@@        L,U GH
)@@G@@    A0,OUTBL            . GET OUTTABLE          @C@@@@        LMJ     X1GI
)@@G@@0,INFOR1          . SCAN      @C@@@@        J       NOSP2               GJ
)@@G@@ . NOSPEC   @E@@@@          L      A1,OUTBL+2          . GET OUT ELMT NAGK
)@@G@@ME    @E@@@@          TNE    A1,BLANKS           . IS IT BLANK?         GL
)@@G@@@E@@@@          SNZ    DOPTO               . OUT IS DATAFILE      @A@@@@GM
)@@G@@UOPT      L,U       A0,INTBL        @C@@@@          TNZ       DOPTI     GN
)@@G@@       . IS INPT  @E@@@@          TZ        DOPTO            . OR OUT DAGO
)@@G@@TA?         @E@@@@          SNZ       DOPT            . SET D OPTION    GP
)@@G@@      @E@@@@          LMJ       X10,PFS           . PROG FILE SEARCH    GQ
)@@G@@@E@@@@       L,S1    A0,INTBL+9          . GET SYMB SUBTYPE       @C@@@@GR
)@@G@@       S,S1    A0,OUTBL+9          . SET        @C@@@@       L       A0,GS
)@@G@@INTBL+11         . GET DATE   @C@@@@       S       A0,OUTBL+11         .GT
)@@G@@ SET IT.    @A@@@@          DL        A0,INTBL        @E@@@@          TZGU
)@@G@@        AUTOREC           . AUTORECOVERY?       @^@@@@          FIELDATAGV
)@@G@@  .   @I@@@@AUTOI     DL        A0,('ED$TB       ')                     GW
)@@G@@            . GET ED    @^@@@@          ASCII     .   @A@@@@          DSGX
)@@G@@        A0,EDIN         @A@@@@          LA        A0,INTBL+10     @A@@@@GY
)@@G@@          SA        A0,COPIN+3      @E@@@@          TZ        AUTOREC   GZ
)@@G@@        . AUTORECOVERY?       @E@@@@          SZ        COPIN+3         HA
)@@G@@  . TREAT AS DATA FILE  @C@@@@          L,U       A0,33       . SET TO 2HB
)@@G@@2 WRDS@C@@@@          TZ        DOPT        . IF DATAFILE   @C@@@@      HC
)@@G@@    S,H2      A0,COPIN+5  . STORE IT      @A@@@@          LX,U      X9,IHD
)@@G@@NTBL        @C@@@@          LMJ       X10,CYLSET          .       @E@@@@HE
)@@G@@          TOPTN     'X'                . X OPTION?          @A@@@@      HF
)@@G@@    SZ        REEXIT          @G@@@@          LMJ       X10,OPNI        HG
)@@G@@   . OPEN INPUT ON GIVEN FILE       @E@@@@          SNZ       OK        HH
)@@G@@      . NOT AT END OF FILE    @E@@@@       LMJ     X10,IDMSG           .HI
)@@G@@ PRINT ID LINE.         @E@@@@          LMJ       X10,MAILQ          . AHJ
)@@G@@NY MAIL?          @E@@@@          SZ        WMAIL             . NO MAIL HK
)@@G@@WAITING     @E@@@@          TNZ       AUTOREC           . AUTORECOVERY? HL
)@@G@@      @A@@@@          J         EDIT1           @E@@@@          SZ      HM
)@@G@@  AUTOREC           . CLEAR FLAG          @G@@@@          TYP       E110HN
)@@G@@,L110           . TYPE 'AUTO RECOVERY'          @C@@@@          J       HO
)@@G@@  EDIT1             . GO EDIT @]@@@@NOSP      . @E@@@@          L       HP
)@@G@@  A0,FQOPT          . P-Q OPTION FLAG     @G@@@@          TE,U      A0,2HQ
)@@G@@              . WAS EITHER P OR Q SPEC?         @E@@@@          J       HR
)@@G@@  $+3               . YES, ONE WAS        @I@@@@          SNZ       OUTFHS
)@@G@@IL            . OUTPUT FIELDATA IF I BUT NO P OR Q          @G@@@@      HT
)@@G@@    SNZ       FQOPT             . AS IF P OPTION WERE SPEC        @C@@@@HU
)@@G@@        L,U     A1,01               . SET INDEX @C@@@@        L,U     A0HV
)@@G@@,OUTBL            . SET OUTBL @C@@@@        LMJ     X10,INFOR1          HW
)@@G@@. SCAN      @C@@@@          J         PCERR              . NONE   @E@@@@HX
)@@G@@          J         IONCARD           . I OPTION ON CARD    @I@@@@NELR  HY
)@@G@@ .                           .RETURN HERE IF NOT X OPT AND ELMT NOT FOUNHZ
)@@G@@D.    @C@@@@       LR,U        R1,014      . COPY 12 WRDS   @C@@@@      IA
)@@G@@ LA          A1,(1,INTBL)  . INTBL        @C@@@@       LA          A0,(1IB
)@@G@@,OUTBL)  . TO OUTBL     @C@@@@       BT          A0,0,*A1      . DO IT  IC
)@@G@@      @E@@@@          TYP       E35,L35           . INPUT MODE ASSUMED  ID
)@@G@@@E@@@@          L         A0,OPTN           . GET OPTION WORD     @E@@@@IE
)@@G@@          OR        A0,BITS('Z'-'I')  . OR IN I OPTION      @E@@@@      IF
)@@G@@    S         A1,OPTN           . RESTORE OPTION WORD @E@@@@IONCARD L   IG
)@@G@@    A1,OUTBL+2          . IS OUT DATA?          @C@@@@        TE      A1IH
)@@G@@,BLANKS           . ?         @C@@@@        J       $+3                 II
)@@G@@. NO        @E@@@@          SNZ       DOPTO           . SET OUTPUT D OPTIJ
)@@G@@ION   @E@@@@          SNZ       DOPT            .   AND D OPTION        IK
)@@G@@@E@@@@       SZ      RC                  . SET TO CYCLE 0.        @E@@@@IL
)@@G@@          TZ        AUTOREC           . AUTO OPTION?        @E@@@@      IM
)@@G@@    J         AUTOI             . DO AN AUTO          @G@@@@          SZIN
)@@G@@        OK                 . SIGNIFIES AT END OF FILE       @E@@@@      IO
)@@G@@    TOPTN     'X'                . X OPTION?          @A@@@@          SZIP
)@@G@@        REEXIT          @A@@@@          LMJ       X10,LABEL       @E@@@@IQ
)@@G@@       LMJ     X10,IDMSG           . PRINT ID LINE.         @E@@@@      IR
)@@G@@    S         R10,WMAIL          . MAIL MAYBE WAITING @A@@@@          J IS
)@@G@@        INPUT2          @C@@@@ . COME HERE IF ONE SPEC FIELD AND NO OPTIIT
)@@G@@ON U  @I@@@@NOSP2     L         A1,DOPTI          . DATA FILE INPUT?    IU
)@@G@@            ED010830    @I@@@@          TOPTN     'R'               . ANIV
)@@G@@D NOT READ-ONLY MODE?         ED010840    @I@@@@          JNZ       A1,UIW
)@@G@@PDATA         . U IT                            ED010850    @E@@@@      IX
)@@G@@    TNOPTN    'C'               . C OPTION SET?       @E@@@@          J IY
)@@G@@        UPOPT              . DON'T SET R OPTION @I@@@@          L       IZ
)@@G@@  A0,OPTN           . GET OPTION WORD                 ED010870    @E@@@@JA
)@@G@@          OR        A0,BITS('Z'-'R')  . OR IN R OPTION      @E@@@@      JB
)@@G@@    S         A1,OPTN           . RESTORE OPTION WORD @G@@@@          TYJC
)@@G@@P       E41,L41           . TELL HIM NO CORRECTIONS         @C@@@@      JD
)@@G@@     J        UOPT          . TREAT AS U  @E@@@@UPDATA    SNZ       DOPTJE
)@@G@@O             . SET DATA OUT OPTION @G@@@@          TYP       E112,L112 JF
)@@G@@        . U OPTION ASSUMED FOR DATAFILE   @I@@@@UPOPT     L         A0,OJG
)@@G@@PTN           . GET OPTIONS                     ED010890    @I@@@@      JH
)@@G@@    OR        A0,BITS('Z'-'U')  . OR IN U OPTION                  ED0109JI
)@@G@@00    @I@@@@          S         A1,OPTN           . RESTORE OPTIONS     JJ
)@@G@@            ED010910    @I@@@@          J         UOPT              . GOJK
)@@G@@ DO U STUFF                   ED010940    @C@@@@BEG2      L         A0,(JL
)@@G@@+IOERR,ENDINF)          @A@@@@          TG,U      A1,46           @A@@@@JM
)@@G@@          J         IOERR           @^@@@@          J         BEG1@G@@@@JN
)@@G@@ . NO SPEC FIELD. ASSUME HE WANTS AN ELEMENT IN TPF$. ASK FOR THE NAME. JO
)@@G@@@E@@@@SKDUMY    L         X10,X8            . PRESERVE X10        @]@@@@JP
)@@G@@NOSPECF   . @E@@@@          DL        A0,PROGNAM        . ASK FOR ELTNAMJQ
)@@G@@E     @C@@@@          DS        A0,IMBUF          .         @C@@@@      JR
)@@G@@    L         A0,PROGNAM+2      .         @C@@@@          S         A0,IJS
)@@G@@MBUF+2        .         @E@@@@          SZ        COUNT             . CLJT
)@@G@@EAR COUNT         @C@@@@          S         X10,X8            . SAVE X10JU
)@@G@@@E@@@@          L,H1      A7,TREADSEQ+1     . GET EOF ADDRESS     @E@@@@JV
)@@G@@          L,U       A0,OEND           . REPLACE WITH END    @E@@@@      JW
)@@G@@    S,H1      A0,TREADSEQ+1     . PUT EOF ADDRESS     @E@@@@          LMJX
)@@G@@J       X10,LTYPEIN        . READ FILENAME      @E@@@@          S,H1    JY
)@@G@@  A7,TREADSEQ+1     . PUT EOF ADDRESS     @E@@@@          LMJ       X10,JZ
)@@G@@GET2          . GET AN ELEMENT NAME @E@@@@          DL        A0,FIMBUF KA
)@@G@@         . GET ELEMENT NAME   @E@@@@          TNE       A0,BLANKS       KB
)@@G@@  . BLANK NAME?         @E@@@@          J         SKDUMY            . YEKC
)@@G@@S ASK AGAIN       @E@@@@          DS        A0,INTBL+2        . PUT IN PKD
)@@G@@F PACKET    @I@@@@          DL        A0,TPFIMG                         KE
)@@G@@                  . ASSUME    @E@@@@          DS        A0,INTBL        KF
)@@G@@  . PUT IN PF PACKET    @G@@@@          S,H1     R10,INTBL+5        . SEKG
)@@G@@T TO SYMBOLIC ELEMNT          @E@@@@          S,S1      R10,INTBL+9     KH
)@@G@@   . SET TO ELT         @E@@@@          L         A0,BITS('Z'-'U')      KI
)@@G@@ . SET U FLAG     @G@@@@           OR        A0,OPTN           .  OR  INKJ
)@@G@@ PRESENT OPTIONS        @C@@@@          S         A1,OPTN           .   KK
)@@G@@      @E@@@@          SNZ       ABSPEC         . SET ABSENT SPEC FLAG   KL
)@@G@@@C@@@@          J         1,X8              .         @^@@@@          FIKM
)@@G@@ELDATA  .   @A@@@@TPFIMG    'TPF$        '   . TPF$   @A@@@@ED1      '@AKN
)@@G@@SG,T  ED$TA,F///800'    @I@@@@CATB     '@CAT,VG ED$TB,F///800'          KO
)@@G@@                              ED010960    @I@@@@USETB     '@USE ED$TB,EDKP
)@@G@@$TB&' .        2                                ED020210    @I@@@@ASGBT KQ
)@@G@@    '@ASG,T ED$TB,F///800' .                                     ED01097KR
)@@G@@0     @I@@@@ED2A      '@ASG,ADX ED$TB .'                                KS
)@@G@@            817TM068    @^@@@@          ASCII     .   @]@@@@ELMERR    . KT
)@@G@@@C@@@@          E$DIT     FTAB              .         @E@@@@          E$KU
)@@G@@MSG     E1                . ELEMENT ...         @E@@@@          E$FD2   KV
)@@G@@  INTBL+2           . ELEMENT NAME        @A@@@@          E$MSGR    . NOKW
)@@G@@T FOUND ... @^@@@@          E$DITX    .   @C@@@@          FTYPE     FIMBKX
)@@G@@UF,9          .         @E@@@@          TZ        ABSPEC            . ABKY
)@@G@@SENT SPEC FIELDS? @E@@@@          J         NELR              . ENTER INKZ
)@@G@@PUT MODE    @I@@@@          TNOPTN    'C'               . C OPTION MEANSLA
)@@G@@ ENTER INPUT MODE IF NO EL    @E@@@@       J       NELR                .LB
)@@G@@ YES, ENTER INPUT MODE. @C@@@@       J       OEND                . NO, ELC
)@@G@@XIT.  @]@@@@PFERR     . @E@@@@          TYP       E101,L101    . NOT A PLD
)@@G@@ROGRAM FILE       @A@@@@          J         RECTST          @A@@@@ . AUTLE
)@@G@@O FILE NOT ASSIGNED ERROR     @G@@@@AUTOERR   TYP       E102,L102       LF
)@@G@@    . TYPE 'NO AUTO FILE'           @C@@@@          J         ERXT      LG
)@@G@@        .         @G@@@@PCERR     TYP       E103,L103            . PROCELH
)@@G@@SSOR CALL SYNTAX ERROR  @E@@@@          J         OEND               . ELI
)@@G@@RROR EXIT         @C@@@@E101        'FILE NOT PROGRAM FILE FORMAT '     LJ
)@@G@@@A@@@@L101        EQU       $-E101        @E@@@@E103       'ERROR READINLK
)@@G@@G PROCESSOR CALL STATEMENT' .       @C@@@@L103       EQU       $-E103   LL
)@@G@@           .      @I@@@@E102      'AUTO FILE BAD OR NONEXISTANT' .      LM
)@@G@@                        817TM070    @C@@@@L102       EQU       $-E102   LN
)@@G@@          .       @]@@@@PFS       . @C@@@@          ER        PFS$      LO
)@@G@@         .        @E@@@@          JZ        A2,0,X10           . A2=0:FILP
)@@G@@ND MADE     @^@@@@          TNE,U     A2,2@E@@@@          J         IOERLQ
)@@G@@R             . A2=2:IOERR          @A@@@@          TZ        DOPTI     LR
)@@G@@      @A@@@@          J        0,X10    . RETURN@C@@@@          TNE,U   LS
)@@G@@  A2,1               .        @G@@@@          J         ELMERR          LT
)@@G@@   . A2=1:NO ELEMENT FOUND          @I@@@@          J         PFERR     LU
)@@G@@         . OTHERWISE:PROGRAM FILE UNDEFINED           @C@@@@CYLSET    . LV
)@@G@@        .                   .       @G@@@@          L,S4      RC,8,X9   LW
)@@G@@        . GET MOST CURRENT CYCLE          @E@@@@          TNZ       CYCSLX
)@@G@@                 . CYCLE SPECIFIED? @E@@@@          J         0,X10     LY
)@@G@@          . NO,RETURN         @G@@@@          TNZ,H1    REL             LZ
)@@G@@    . RELATIVE CYCLE GIVEN?         @C@@@@          LA,H2     RC,REL    MA
)@@G@@          . NO    @G@@@@          TP        REL                 . RELATIMB
)@@G@@VE CYCLE NEGATIVE?      @C@@@@          ANA,XH2   RC,REL              . MC
)@@G@@YES   @A@@@@          L,S4      A0,8,X9         @A@@@@          ANU,S6  MD
)@@G@@  A0,8,X9         @I@@@@          TG        A0,RC               . IS REQME
)@@G@@UESTED CYCLE> MOST RECENT CYCLE?    @I@@@@          TG        A1,RC     MF
)@@G@@          . IS REQUESTED CYCLE< OLDEST CYCLE?         @E@@@@          J MG
)@@G@@        CYLERR              . YES,ERROR         @E@@@@          J       MH
)@@G@@  0,X10               . NO,RETURN         @]@@@@CYLERR    . @A@@@@      MI
)@@G@@    TYP       E104,L104       @A@@@@          J         RECTST          MJ
)@@G@@@C@@@@E104        'CYCLE NUMBER OUT OF RANGE.'        @A@@@@L104        MK
)@@G@@EQU       $-E104        @]@@@@ . @/       @E@@@@. INFOR*    RES       46ML
)@@G@@                . INFOR TABLE       @E@@@@ENDINF    RES       1         MM
)@@G@@         . END OF INFOR TABLE @E@@@@INFOR1    S         X11,X11SAV      MN
)@@G@@  . INDEX IN INFOR TABLE@C@@@@          S         A1,R5             .   MO
)@@G@@      @A@@@@          L,U       A2,0,X11        @E@@@@          TNG     MP
)@@G@@   A2,ENDINF        . END OF INFOR?       @G@@@@          TE,S2     A1,0MQ
)@@G@@,X11          . FOLLOWING FROM WANTED FIELD?    @C@@@@          J       MR
)@@G@@  0,X10             . NO      @A@@@@          L         A2,(1,0)        MS
)@@G@@@C@@@@          S         A2,5,A0           . TYPE    @^@@@@          SZMT
)@@G@@        4,A0@^@@@@          SZ        8,A0@^@@@@          SZ        9,A0MU
)@@G@@@A@@@@          SZ        10,A0           @A@@@@          SZ        11,AMV
)@@G@@0           @E@@@@          SZ        QUAL              . ZERO QUALIFIERMW
)@@G@@      @A@@@@          DL        A4,BLANKS       @E@@@@          DS      MX
)@@G@@  A4,2,A0           . BLANK ELEMENT NAME  @E@@@@          DS        A4,6MY
)@@G@@,A0           . BLANK VERSION       @E@@@@          S         A4,FCY    MZ
)@@G@@        . CLEAR F CYCLE       @E@@@@          S         A4,KEY1         NA
)@@G@@  . CLEAR KEYS          @E@@@@          S         A4,KEY2           . CLNB
)@@G@@EAR KEYS          @^@@@@          FIELDATA  .   @G@@@@          DL      NC
)@@G@@  A6,('ED$S1       ')      . USE WILL BE DONE         @E@@@@          TEND
)@@G@@,U      A1,1              . IS IT SPEC 1        @G@@@@          DL      NE
)@@G@@  A6,('ED$S2       ')  . NO USE SPEC2 USE NAME        @E@@@@          DSNF
)@@G@@        A6,0,A0           . PUT IN TABLE        @E@@@@INFOR2    L,S3    NG
)@@G@@  A1,0,X11          . SUB FIELD #         @I@@@@          L,S4      A3,0NH
)@@G@@,X11          . TO DETECT .ELEMENT              ED011000    @G@@@@      NI
)@@G@@    L,S6      A2,0,*X11         . # OF WORDS IN SUBFIELD          @C@@@@NJ
)@@G@@          TNE,U     A2,1              . 1 WORD  @C@@@@          J       NK
)@@G@@  INFOR3            . YES     @C@@@@          TE,U      A2,2            NL
)@@G@@  . 2 WORDS @C@@@@          J         SYNERR            . NO      @A@@@@NM
)@@G@@          DL        A4,0,*X11       @^@@@@          J         $+3 @A@@@@NN
)@@G@@INFOR3    L         A4,0,X11        @A@@@@          L         A5,BLANKS NO
)@@G@@      @^@@@@          J         $,A1@E@@@@          JMGI      X11,INFR31NP
)@@G@@        . QUALIFIER           @C@@@@          JMGI      X11,INFR32      NQ
)@@G@@  . FILENAME@C@@@@          JMGI      X11,INFR33        . F-CYCLE @C@@@@NR
)@@G@@          JMGI      X11,INFR34        . KEY1    @C@@@@          JMGI    NS
)@@G@@  X11,INFR35        . KEY2    @E@@@@          JMGI      X11,INFOR4      NT
)@@G@@  . ELEMENT NAME        @E@@@@          JMGI      X11,INFR41      . VERSNU
)@@G@@ION NAME          @C@@@@          JMGI      X11,FRP0          . CYCLE   NV
)@@G@@@A@@@@          JMGI      X11,INFOR5      @E@@@@INFR31    DS        A4,QNW
)@@G@@UAL       . STORE QUALIFIER         @C@@@@          J         INFOR5    NX
)@@G@@    . CONTINUE    @E@@@@INFR32  DS        A4,FRMIMG     . AND IN ASG TABNY
)@@G@@LE          @C@@@@          J         INFOR5        . CONT        @C@@@@NZ
)@@G@@INFR33    S         A4,FCY       . STORE FCY    @C@@@@          J       OA
)@@G@@  INFOR5        . CONT        @C@@@@INFR34    S         A4,KEY1       . OB
)@@G@@KEY1        @C@@@@          J         INFOR5        . CONT        @C@@@@OC
)@@G@@INFR35    S         A4,KEY2       . KEY2        @C@@@@          J       OD
)@@G@@  INFOR5        . CONT        @A@@@@INFOR4    DS        A4,2,A0         OE
)@@G@@@E@@@@       TE,U    A3,'.'              . CHECK FOR .ELMENT      @C@@@@OF
)@@G@@       J       INFOR5              . NO         @E@@@@       DL      A4,OG
)@@G@@INTBL            . GET PREVIOUS.          @C@@@@       DS      A4,OUTBL OH
)@@G@@           . STORE.     @^@@@@          J         $+2 @A@@@@INFR41    DSOI
)@@G@@        A4,6,A0         @A@@@@INFOR5    L         A1,R5           @A@@@@OJ
)@@G@@          L,U       A2,0,X11        @E@@@@          TNG        A2,ENDINFOK
)@@G@@        . END OF TABLE?       @E@@@@           TE,S2    A1,0,X11        OL
)@@G@@  . END OF FIELD?       @^@@@@          J         $+2 @E@@@@          J OM
)@@G@@        INFOR2            . GET NEXT SUBFIELD   @A@@@@          S       ON
)@@G@@  X11,X11SAV      @E@@@@          E$DIT     FTAB               . ENTER EOO
)@@G@@DIT MODE    @C@@@@          E$MSG     USEIMG             .        @E@@@@OP
)@@G@@          E$FD2     A6                . INSERT USE NAME     @C@@@@      OQ
)@@G@@    E$CHAR    ','               . INSERT ,@E@@@@          TNZ       QUALOR
)@@G@@              . QUAILIFIER          @E@@@@       J       NOQUAL         OS
)@@G@@      . SKIP OVER *           @E@@@@          DL        A0,QUAL         OT
)@@G@@  . GET QUALIFIER       @E@@@@       LMJ     X11,EFD2$           . PACK OU
)@@G@@12 CHARACTERS     @C@@@@          E$CHAR    '*'                . GET *  OV
)@@G@@@E@@@@NOQUAL    E$FD2     FRMIMG            . GET FILENAME        @C@@@@OW
)@@G@@       L       A0,FCY              . F CYCLE    @C@@@@       TNE     A0,OX
)@@G@@BLANKS           . NONE?      @E@@@@       J       AKEY1               .OY
)@@G@@ GO TO FIRST KEY.       @E@@@@          E$CHAR    '('               . BUOZ
)@@G@@ILD F-CYCLE       @C@@@@          E$FD1     FCY               . F CYCLE PA
)@@G@@@E@@@@          E$CHAR    ')'               . END IT HERE         @C@@@@PB
)@@G@@AKEY1  L       A0,KEY1             . GET KEY1   @E@@@@       TNE     A0,PC
)@@G@@BLANKS           . IS IT BLANK?           @E@@@@       J       AKEY2    PD
)@@G@@           . YES, GO TO KEY2        @C@@@@          E$CHAR    '/'       PE
)@@G@@        . FOR KEY @E@@@@          E$FD1     KEY1              . INSERT KPF
)@@G@@EY(READ)    @C@@@@AKEY2  L       A0,KEY2             . KEY2 ?     @C@@@@PG
)@@G@@       TNE     A0,BLANKS           . BLANK ?    @C@@@@       J       APEPH
)@@G@@R                . GO TO END. @E@@@@       L       A0,KEY1             .PI
)@@G@@ WAS THERE A RKEY?      @C@@@@       TE      A0,BLANKS           . ?    PJ
)@@G@@      @C@@@@       J       $+3                 . YES        @E@@@@      PK
)@@G@@    E$CHAR    '/'               . GET ANOTHER /       @E@@@@          E$PL
)@@G@@CHAR    '/'               . AND YET ANOTHER     @E@@@@          E$FD1   PM
)@@G@@  KEY2              . GET WRITE KEY       @E@@@@APER      E$SKIP    2   PN
)@@G@@              . SPACE TWO COLS      @G@@@@          E$CHAR    '.'       PO
)@@G@@        . PERIOD TO TERMINATE CSF$ SCAN   @E@@@@          E$SKIP    2   PP
)@@G@@              . 2 MORE SPACES       @G@@@@       E$FD2      (' . REJECTEPQ
)@@G@@D')     . GET REJECTED MESS IN CASE       @^@@@@          E$DITX    .   PR
)@@G@@@^@@@@          ASCII     .   @I@@@@          L         A0,(14,FIMBUF)  PS
)@@G@@    . APPLY USE TO QUAL*FILENAME/RKEY/WKEY      @^@@@@          ER      PT
)@@G@@  CSF$@C@@@@          L         A2,A0             .         @E@@@@      PU
)@@G@@    DL        A0,A6          . TEST FOR ASSIGN        @^@@@@          TNPV
)@@G@@OASG    .   @I@@@@          J        BDKYS           . LOCAL            PW
)@@G@@                     LOCAL    @G@@@@          L         A1,R5           PX
)@@G@@  . GET SPEC FILED NUMBER           @G@@@@          TNE,U     A1,1      PY
)@@G@@        . GOINT TO TRY TO ASSIGN          @E@@@@          SNZ       EDS1PZ
)@@G@@A          . TRIED TO ASSIGN SPEC 1 @C@@@@          TNE,U     A1,2      QA
)@@G@@        .         @E@@@@          SNZ       EDS2A          . TRIED TO ASQB
)@@G@@SIGN SPEC 2 @^@@@@          E$DIT     FTAB@E@@@@          E$MSG     ASGIQC
)@@G@@MG            . ASSIGN IMAGE        @E@@@@          TOPTN     'O'       QD
)@@G@@        . EXCLUSIVE USE?      @C@@@@          J         NEXUSE          QE
)@@G@@  . NO      @C@@@@          E$CHAR    035               .         @E@@@@QF
)@@G@@NEXUSE    E$SKIP    2                . INSERT 2 BLANKS      @E@@@@      QG
)@@G@@    E$FD2     A6                . INSERT USE NAME     @^@@@@          E$QH
)@@G@@DITX    .   @E@@@@          L         A0,(4,FIMBUF)     . ASSIGN IT     QI
)@@G@@      @C@@@@          ER        CSF$              .         @E@@@@      QJ
)@@G@@    JZ        A0,OKASG          . SUCCESSFUL ASSIGN?  @E@@@@          L QK
)@@G@@        A5,A0             . SAVE FAC BITS       @I@@@@          AND     QL
)@@G@@  A0,(044300100200)   . CHECK TO SEE IF FATAL           ED0110    @G@@@@QM
)@@G@@          JZ        A1,ASGERR         . READ OR WRITE KEYS MAY NOT BE   QN
)@@G@@@E@@@@          DL        A0,A6            . WAS IT ONLY A WARNING@^@@@@QO
)@@G@@          TNOASG    .   @E@@@@          J         ISASG             . ASQP
)@@G@@SIGNED OK         @E@@@@          J         ASGERR            . ERROR NOQQ
)@@G@@T ASSIGNED  @I@@@@ISASG     TEP,U     A5,0200           . DISABLED FILE QR
)@@G@@TEST              ED011040    @I@@@@          J         DISABF          QS
)@@G@@  . YES                             ED011050    @E@@@@ANUSE     TEP,U   QT
)@@G@@  A5,0100000        . FILE IN USE BIT     @C@@@@          J         FINUQU
)@@G@@SE            . YES     @]@@@@BDKYS     . @I@@@@          L,S2      A7,FQV
)@@G@@RMIMG+6       . GET READ-WRITE KEY INDICATOR    ED011070    @G@@@@      QW
)@@G@@    L         A1,R5             . GET SPEC FIELD NUMBER           @C@@@@QX
)@@G@@          TNE,U     A1,2              . SPEC 2? @C@@@@          J       QY
)@@G@@  PASGO             . YES     @I@@@@          TOP,U      A7,2           QZ
)@@G@@   . INPUT FILE READ LOCK?          ED011090    @C@@@@          J       RA
)@@G@@  PASUOP             . NOPE   @E@@@@          TYP       E108,L108       RB
)@@G@@    . SEND MSG          @E@@@@          J         FREOEND           . FRRC
)@@G@@EE FILE AND END   @G@@@@PASUOP    TNOPTN    'U'                . U OPTIORD
)@@G@@N INPUT IS ALSO OUTPUT  @I@@@@PASGO     TOP,U A7,4                   . ORE
)@@G@@UTPUT FILE WRITE LOCK?        ED011110    @C@@@@          J         OKASRF
)@@G@@G2            . NOPE    @E@@@@          TYP       E109,L109           . RG
)@@G@@TELL HIM SO       @C@@@@FREOEND   E$DIT     FTAB              .         RH
)@@G@@@G@@@@          E$MSG     FREIMG            . FREE OF ASSIGNED FILE     RI
)@@G@@      @E@@@@          E$FD2     A6                . INSERT USE NAME     RJ
)@@G@@@^@@@@          E$DITX    .   @E@@@@          L         A0,(2,FIMBUF)   RK
)@@G@@  . FREE FILE           @C@@@@          ER        CSF$              .   RL
)@@G@@      @E@@@@          J         OEND              . MIGHT AS WELL END   RM
)@@G@@@E@@@@OKASG     DS        A6,FRMIMG         . SOTE FILENAME       @C@@@@RN
)@@G@@          L,U       A0,FRMIMG         . DO FACIL@C@@@@          ER      RO
)@@G@@  FACIL$            .         @C@@@@OKASG2 DL      A0,BLANKS           .RP
)@@G@@ GET BLANKS @C@@@@       DS      A0,QUAL             . TO QUAL    @E@@@@RQ
)@@G@@       S       A0,KEY1             . GET THE KEYS           @C@@@@      RR
)@@G@@ S       A0,KEY2             . NOW TOO.   @E@@@@       S       A0,FCY   RS
)@@G@@           . AND THE F-CYCLE        @E@@@@          L,S1      A0,FRMIMG+RT
)@@G@@6       . GET EQUIPMENT CODE  @E@@@@          JZ        A0,NOEQUI       RU
)@@G@@  . NO EQUIPMENT?       @G@@@@          SSL       A0,3              . SHRV
)@@G@@IFT OFF LOWER DIGIT           @E@@@@          TE,U      A0,3            RW
)@@G@@  . FASTRAND FORMAT?    @E@@@@          J         NOTFAS            . NORX
)@@G@@PE-CAN'T HANDLE IT@C@@@@       L       X11,X11SAV          . RESTORE X11RY
)@@G@@@G@@@@          J         1,X10             . RETURN SPEC FIELD IN INTBLRZ
)@@G@@      @E@@@@ASGERR    A$EDIT     ETAB      . REOPEN EDIT$ PACKET        SA
)@@G@@@G@@@@          A$EMSG     E107                . 'FILE IN FIELD ...'    SB
)@@G@@      @E@@@@          A$EDECV    R5                . SPEC FIELD NUMBER  SC
)@@G@@@C@@@@          A$EMSGR    . CANNOT BE ASSIGNED       @E@@@@          A$SD
)@@G@@EOCTF   12,A5             . GIVE BITS           @^@@@@          A$EDITX SE
)@@G@@   .  @G@@@@          L         A0,(0116,IMBUF)     . GET ERROR MSG PACKSF
)@@G@@ET          @E@@@@          ER        APRINT$           . ASCII PRINT   SG
)@@G@@      @C@@@@          J         OEND              . EXIT    @C@@@@NOTFASSH
)@@G@@    A$EDIT     ETAB              .        @E@@@@          A$EMSG     E10SI
)@@G@@7               . FILE IN SPEC FIELD@C@@@@          A$EDECV    R5       SJ
)@@G@@         . NUMBER @G@@@@          A$EMSG     E105               . NOT ONSK
)@@G@@ FASTRAND FORMAT DEVICE @^@@@@          A$EDITX    .  @C@@@@          TYSL
)@@G@@P       IMBUF,15          .         @C@@@@          J         OEND      SM
)@@G@@        .         @C@@@@E105      ' NOT ON FASTRAND FORMAT DEVICE&' .   SN
)@@G@@@C@@@@NOEQUI    A$EDIT     ETAB              .        @E@@@@          A$SO
)@@G@@EMSG     E107               . FILE IN SPEC FIELD@C@@@@          A$EDECV SP
)@@G@@   R5                . NUMBER @G@@@@          A$EMSG     E106           SQ
)@@G@@    . NOT ON FASTRAND FORMAT DEVICE @^@@@@          A$EDITX    .  @C@@@@SR
)@@G@@          TYP       IMBUF,15          .         @C@@@@          J       SS
)@@G@@  OEND              .         @C@@@@E106      ' HAS NO EQUIPMENT ASSIGNEST
)@@G@@D TO IT.&' .@I@@@@DISABF    A$EDIT     ETAB              .              SU
)@@G@@                   ED011130   @I@@@@          A$EMSG     E107           SV
)@@G@@    . FILE IN SPEC FIELD             ED011140   @I@@@@          A$EDECV SW
)@@G@@   R5                . NUMBER                          ED011150   @I@@@@SX
)@@G@@          A$EMSG     E111               .  IS DISABLED                  SY
)@@G@@ ED011160   @I@@@@          A$EDITX    .                                SZ
)@@G@@                   ED011170   @C@@@@          TYP       IMBUF,15        TA
)@@G@@  .         @E@@@@          J         ANUSE             . CHECK OTHER BITB
)@@G@@TS    @C@@@@FINUSE    A$EDIT     ETAB              .        @E@@@@      TC
)@@G@@    A$EMSG     E107              . FILE IN FIELD ?    @E@@@@          A$TD
)@@G@@EDECV    R5                . FIELD NUMBER       @G@@@@          A$EMSG  TE
)@@G@@   E114              . IN USE BY ANOTHER RUN          @^@@@@          A$TF
)@@G@@EDITX    .  @C@@@@          TYP       IMBUF,10          . TYPE MSG@E@@@@TG
)@@G@@          J         BDKYS             . CHECK OTHER BITS    @I@@@@E111  TH
)@@G@@    ' DISABLED--ACCEPTED&' .                                      817TM0TI
)@@G@@72    @]@@@@ . @/       @C@@@@FRP0     SZ        A2                  .  TJ
)@@G@@      @C@@@@         SZ        A3                  .        @I@@@@      TK
)@@G@@    L         A1,R5             . GET NUMBER                      817TM0TL
)@@G@@74    @E@@@@          TE,U      A1,1              . IS IT FIELD 1       TM
)@@G@@@G@@@@          J         INFOR5            . NO-DON'T READ CYCLE WORD  TN
)@@G@@      @E@@@@       S       X11,CYCS            . SET CYCLE SPECIFIED.   TO
)@@G@@@^@@@@          FIELDATA  .   @C@@@@         LDSL      A3,6             TP
)@@G@@   .        @E@@@@          TLE,U     A3,'9'+1          . IS IT NUMERIC TQ
)@@G@@      @C@@@@          TLE,U     A3,'0'            .         @C@@@@      TR
)@@G@@    J         $+2               .         @C@@@@         J         FRP2 TS
)@@G@@               .  YES   @C@@@@         TNE,U     A3,'-'              .  TT
)@@G@@MINUS @C@@@@         LNA       A3,A3               .  YES   @C@@@@      TU
)@@G@@   TE,U      A3,'+'              .        @G@@@@          JP        A3,NTV
)@@G@@UMERR          . SHOULD HAVE BEEN A NUMBER      @C@@@@         SA,H1    TW
)@@G@@ A3,REL              .        @C@@@@FRP1                                TX
)@@G@@   .        @^@@@@          SZ        A3  @E@@@@         LDSL      A3,6 TY
)@@G@@               .  GET CHARACTER     @C@@@@         TNE,U     A3,' '     TZ
)@@G@@         .  SPACE?@A@@@@          J         INFOR5          @E@@@@      UA
)@@G@@    TLE,U     A3,'9'+1          . IS IT NUMERIC       @C@@@@          TLUB
)@@G@@E,U     A3,'0'            .         @C@@@@          J         NUMERR    UC
)@@G@@         . NO     @C@@@@FRP2     .                             .        UD
)@@G@@@G@@@@         MSI,U     A2,10               .  CONVERT FD TO BINARY    UE
)@@G@@      @C@@@@         ANA,U     A3,060              .        @C@@@@      UF
)@@G@@   AA        A2,A3               .        @A@@@@          S,H2      A2,RUG
)@@G@@EL          @C@@@@         J         FRP1                .        @A@@@@UH
)@@G@@ASGIMG    '@ASG,A&' . ASSIGN IMAGE  @A@@@@USEIMG    '@USE &'   . USE IMAUI
)@@G@@GE    @E@@@@FREIMG    '@FREE &     '              . FREE FILE           UJ
)@@G@@@C@@@@QUAL      '            '    . QUALIFIER         @A@@@@KEY1      ' UK
)@@G@@           '    . KEY1  @A@@@@KEY2      '            '    . KEY2  @A@@@@UL
)@@G@@FCY     '      '      . F-CYCLE     @^@@@@          ASCII     .   @]@@@@UM
)@@G@@LABEL     . @E@@@@          L         A1,(0500100,1)    . IMAGE CONTROL UN
)@@G@@WORD  @C@@@@          S         A1,EDOUT+10       .         @C@@@@      UO
)@@G@@    LA        A1,EDSDF           .        @C@@@@          SA        A1,IUP
)@@G@@MAGE           .        @A@@@@          LA,U      A0,EDOUT        @C@@@@UQ
)@@G@@          LMJ       X11,SDFO           .        @A@@@@          J       UR
)@@G@@  IOERRA          @E@@@@          SNZ       WINHIB            . INHIBIT US
)@@G@@WRITE       @C@@@@          SZ        ICW               .         @A@@@@UT
)@@G@@          J         0,X10           @E@@@@E107       'FILE IN FIELD & CAUU
)@@G@@NNOT BE ASSIGNED: &'          @A@@@@E108       'INPUT FILE READ LOCK'   UV
)@@G@@@C@@@@L108       EQU       $-E108             .       @C@@@@E109       'UW
)@@G@@OUTPUT FILE WRITE LOCK' .           @C@@@@L109       EQU       $-E109   UX
)@@G@@          .       @C@@@@E110       'AUTO RECOVERY'              .       UY
)@@G@@@C@@@@L110       EQU       $-E110              .      @I@@@@E112      'UUZ
)@@G@@ OPTION ASSUMED FOR DATAFILE.'                              ED011220    VA
)@@G@@@I@@@@L112      EQU       $-E112            .                           VB
)@@G@@      ED011230    @I@@@@E113      'AUTO COMMAND CANNOT BE USED. AUTO FILVC
)@@G@@E IN USE.' .            ED011240    @I@@@@L113      EQU       $-E113    VD
)@@G@@        .                                 ED011250    @C@@@@E114      ' VE
)@@G@@IN USE BY ANOTHER RUN &' .          @C@@@@TABTBLS   . INITIAL TAB TABLE VF
)@@G@@SEE SET$ PROC     @C@@@@I   DO  TABLNT ,  +    TAB$(I)         .        VG
)@@G@@@]@@@@SAVEX11   +0@]@@@@$(0)      . @G@@@@AREA      RES       132       VH
)@@G@@        . AREA TABLE FOR EDIT80,          @G@@@@                        VI
)@@G@@              . IMAG80,CHAN80, AND TAB80        @E@@@@          +       VJ
)@@G@@  0777777777777     .  BUFFER WORD        @E@@@@EDIT80    EQUF      AREAVK
)@@G@@,,Q1  . TYPEIN IMAGE EXPANDED       @E@@@@IMAG80    EQUF      AREA,,Q2  VL
)@@G@@. IMAGE FROM FILE EXPANDED    @E@@@@CHAN80    EQUF      AREA,,Q3  . CHANVM
)@@G@@GE IMAGE EXPANDED       @C@@@@TAB80     EQUF      AREA,,Q4   . TABULATIOVN
)@@G@@N     @C@@@@          +         0                 .         @^@@@@INTBL VO
)@@G@@    RES       12  @A@@@@OUTBL     .    OUTPUT PFI TABLE     @A@@@@  DO  VP
)@@G@@12 ,  + 0   . 12 WORDS OF ZERO@^@@@@          FIELDATA  .   @A@@@@FEDS1AVQ
)@@G@@    '@FREE,RA ED$S1.'         @A@@@@FEDS2A    '@FREE,RA ED$S2.'         VR
)@@G@@@A@@@@UNUSE1    '@FREE,A ED$S1.' .        @A@@@@UNUSE2    '@FREE,A ED$S2VS
)@@G@@.' .        @A@@@@FRSAVT    '@FREE ED$TB. '           @I@@@@FRSAVA    '@VT
)@@G@@FREE ED$TA. '             .                                  * LOCAL    VU
)@@G@@@E@@@@ASGDI     '@ASG,T ED$DI,F///600'   . ASSIGN DITTO FILE      @I@@@@VV
)@@G@@$(1)      . THIS CAN BE IN I BANK                                       VW
)@@G@@ED011270    @A@@@@FREPR     '@FREE &'                .@I@@@@ASGPR     '@VX
)@@G@@ASG,CG &,F2///2000&' . SYM PRINTFILE                        817TM079    VY
)@@G@@@E@@@@BRKPR     '@BRKPT &'               . BREAKPOINT PRINTFILE   @^@@@@VZ
)@@G@@SYMPR     '@SYM &,,PR&' @E@@@@SYMCP     '@SYM &,,CP&'             . PUNCWA
)@@G@@H ALT PUNCH FILE  @^@@@@          ASCII     .   @C@@@@HEADPA    'H,,1,  WB
)@@G@@ '   . APRTCA$ CONTROL WORD   @I@@@@$(0)      . BACK TO D BANK          WC
)@@G@@                                    ED011290    @G@@@@ECHOIN    '****'  WD
)@@G@@                  . MUST PRECEDE EDIT14 FOR E OPTION  @C@@@@EDIT14*    RWE
)@@G@@ES    33  . SPACE FOR PRINT FILES   @C@@@@IMAGE*    RES       33 . SPACEWF
)@@G@@ FOR PRINT FILES  @C@@@@IMSAV  RES     33        . SAVE AREA FOR IMAGE. WG
)@@G@@@A@@@@ILSTCD    RES       33  .           @A@@@@ICW       EQU       EDINWH
)@@G@@+10         @A@@@@OCW       EQU       EDOUT+10        @E@@@@CL        EQWI
)@@G@@UF      OUTBL+8,,S2       . CYCLE LIMIT         @E@@@@LC        EQUF    WJ
)@@G@@  OUTBL+8,,S4       . LATEST CYCLE        @E@@@@CC        EQUF      OUTBWK
)@@G@@L+8,,S6         . CYCLE COUNT       @E@@@@DC1       EQUF      EDIN+10,,SWL
)@@G@@3       . DELETED THIS UPDATE @E@@@@DC        EQUF      EDIN+10,,S4     WM
)@@G@@  . CYCLE DELETED       @E@@@@AC1       EQUF      EDIN+10,,S5       . ADWN
)@@G@@DED THIS UPDATE   @E@@@@AC        EQUF      EDIN+10,,S6       . ACTUAL CWO
)@@G@@YCLE        @A@@@@IL        EQUF      EDIN+10,,S2     @G@@@@CONCODE   EQWP
)@@G@@UF      EDIN+10,,S1       . CONTROL CODE FOR LABEL IMAGES   @]@@@@ . @/ WQ
)@@G@@      @C@@@@$(0),DLIT LIT       . SPECIAL LITERALS TO DBANK @E@@@@$(1)  WR
)@@G@@    LIT                           . LITERALS TO I-BANK@]@@@@ . @/       WS
)@@G@@@I@@@@ICON      +         DBKEND-IBKEND,BASE*/6++UPDATE . VALIDITY CONSTWT
)@@G@@ANT   817TM082    @I@@@@BEGIN*    . I-BANK ENTRY POINT *****************WU
)@@G@@***                     817TM083    @G@@@@          SX        X11,SAVEX1WV
)@@G@@1       . $P SAVE X11 FOR RETURN          @I@@@@          J         INITWW
)@@G@@IAL           . YES, GO INITIALIZE              817TM086    @I@@@@      WX
)@@G@@    TYP       E55,L55           . PRINT BANKS DON'T MATCH         817TM0WY
)@@G@@87    @I@@@@          ER        ERR$              . GO TO ERROR$        WZ
)@@G@@            817TM088    @E@@@@EDIT1     SZ        INPUTF                XA
)@@G@@. EDIT MODE       @E@@@@          TZ        WMAIL             . HAVE WE XB
)@@G@@DONE A MAIL?@E@@@@          LMJ       X10,MAILQ         . LOOK AND SEE  XC
)@@G@@      @E@@@@          SZ        WMAIL             . WELL, WE TRIED      XD
)@@G@@@E@@@@          TZ        BRIEF2                . BRIEF PRINT?    @^@@@@XE
)@@G@@          J         NXRQ@A@@@@          TYP       EDITS,1         @]@@@@XF
)@@G@@NXRQ      . @E@@@@          ON        INSTAT             . STATISTICS   XG
)@@G@@      @G@@@@          L,H1      A0,STATBUF+5       . INCR TRANSACTION COXH
)@@G@@UNT         @C@@@@          A,U       A0,1               .        @C@@@@XI
)@@G@@          S,H1      A0,STATBUF+5        .       @A@@@@          OFF     XJ
)@@G@@  INSTAT          @C@@@@          ON        TIMIT             .         XK
)@@G@@@C@@@@          A$EDIT     ETAB              .        @C@@@@          A$XL
)@@G@@EMSG     ('T=&MS&')        .        @C@@@@          ER        TIME$     XM
)@@G@@        .         @C@@@@          AN        A0,A15+1          .         XN
)@@G@@@C@@@@          A$EDECV    . CONVERT TO DECIMAL       @^@@@@          A$XO
)@@G@@EMSGR    .  @^@@@@          A$EDITX    .  @C@@@@          TYP       IMBUXP
)@@G@@F,5           .         @C@@@@          OFF       TIMIT             .   XQ
)@@G@@      @G@@@@          SZ        BRKSET             . CLEAR BREAK KEY INDXR
)@@G@@ICATOR      @G@@@@          SZ        QUICKP             . RESET QUICK IXS
)@@G@@NDICATOR          @G@@@@          SZ        LNPRT              . ZERO LIXT
)@@G@@NE NUMBER PRINTING      @G@@@@          TZ        ONSITE             . OXU
)@@G@@NSITE PRINTOUT LAST REQUEST?  @E@@@@          J         ONSREC          XV
)@@G@@   . YES- FINISH IT     @E@@@@          TZ        LKMAIL            . LOXW
)@@G@@K FOR MAIL?       @C@@@@          LMJ       X10,MAILQ         . YES     XX
)@@G@@@I@@@@          JGD       R14,TIMNEX        . DON'T TEST EXCEPT EVERY SOXY
)@@G@@ MANY 817TM091    @I@@@@          L,U       R14,5             . TRY 10  XZ
)@@G@@                        817TM092    @I@@@@          L,U       A0,DITBUF YA
)@@G@@        .                                 817TM093    @I@@@@          L YB
)@@G@@        A1,(1,026)        . WORD 026                        817TM094    YC
)@@G@@@I@@@@          ER        PCT$              . GET CURRENT ACCUMULATED TIYD
)@@G@@ME    817TM095    @I@@@@          L         A0,DITBUF         . GET IT  YE
)@@G@@                        817TM096    @I@@@@          MSI,U     A0,10     YF
)@@G@@        . GET 10 9THS OF IT               817TM097    @I@@@@          DSYG
)@@G@@A       A0,36             .                                 817TM098    YH
)@@G@@@I@@@@          DI,U      A0,9              . DIVIDE                    YI
)@@G@@      817TM099    @I@@@@          TNG       A0,MAXCP          . STILL LEYJ
)@@G@@SS THAN MAXCP           817TM100    @I@@@@          J         TIMNEX    YK
)@@G@@        . TIME NOT EXCEEDED               817TM101    @I@@@@          L YL
)@@G@@        A4,MAXCP          . GET MAX TIME                    817TM102    YM
)@@G@@@I@@@@          AN        A4,DITBUF         . SUBTRACT CURRENT          YN
)@@G@@      817TM103    @I@@@@          TYP       E56,L56           . CPU TIMEYO
)@@G@@ REMAINING:             817TM104    @I@@@@          J         PRNTTIM   YP
)@@G@@        . GO PRINT WITH CPT COMMAND       817TM105    @I@@@@TIMNEX    . YQ
)@@G@@                                                            817TM106    YR
)@@G@@@A@@@@          LMJ       X10,TYPEIN      @C@@@@          ON        TIMIYS
)@@G@@T             .         @C@@@@          ER        TIME$             .   YT
)@@G@@      @E@@@@          S         A0,A15+1          . SAVE IN A16         YU
)@@G@@@C@@@@          OFF       TIMIT             .         @I@@@@          SZYV
)@@G@@        EDCT               . EDCT=NUMBER OF CHARACTERS LOOKED AT        YW
)@@G@@@G@@@@          LMJ       X10,GET            . RETURNS COMMAND WORD IN AYX
)@@G@@1     @E@@@@          TZ        COUNT              . NO COMMAND?        YY
)@@G@@@C@@@@          J         COMFND            .         @E@@@@          TZYZ
)@@G@@        EOFMOD            . EOF MODE?           @G@@@@          J       ZA
)@@G@@  COMERR            . IF IN EOF MODE ILLEGAL COM      @G@@@@          J ZB
)@@G@@        INPUT2            . OTHERWISE CHANGE MODE TO INPUT  @G@@@@COMFNDZC
)@@G@@    L         A0,EDIT80          . GET FIRST CHARACTER IN LINE    @E@@@@ZD
)@@G@@          TLE,U     A0,'9'+1          . IS IT NUMERIC       @C@@@@      ZE
)@@G@@    TLE,U     A0,'0'            .         @C@@@@          J         $+2 ZF
)@@G@@              . NOPE    @E@@@@          J         LINENUM            . YZG
)@@G@@ES, TREAT AS GO TO@E@@@@          L,Q1      A2,EDIT14          . GET FIRZH
)@@G@@ST CHAR     @G@@@@          TNE,U     A2,'+'             . SKIP N LINES ZI
)@@G@@FORWARD           @C@@@@          J         GOPL               . YES    ZJ
)@@G@@@E@@@@          TNE,U     A2,'-'             . SKIP N LINES BACK? @C@@@@ZK
)@@G@@          J         GOMIN              . YES    @G@@@@$(3),COMLST1      ZL
)@@G@@                     . 1 AND 2 LETTER COMMANDS        @^@@@@          FIZM
)@@G@@ELDATA  .   @C@@@@          +         '@@L',LOC1         . LOCATE @E@@@@ZN
)@@G@@          +         '@@Q',QUICK1       . QUICK PRINT        @C@@@@      ZO
)@@G@@    +         '@@P',PRINT1        . PRINT @C@@@@          +         '@@FZP
)@@G@@',FIND1        . FIND   @E@@@@          +         '@RP',RPSET        . SZQ
)@@G@@ET REPEAT         @E@@@@          +         '@LC',LC1          . LOCATE ZR
)@@G@@AND COUNT   @E@@@@          +         '@LN',TLIN         . LINE NUMBER  ZS
)@@G@@      @E@@@@          +         '@FC',FC1          . FIND AND COUNT     ZT
)@@G@@@E@@@@          +         '@UP',UPOPS        . U OPTION SET       @C@@@@ZU
)@@G@@          +         '@PL',PRLIM       . PLIMIT  @C@@@@          +       ZV
)@@G@@  '@ON',ON1         . ON      @G@@@@          ON        EDMODE          ZW
)@@G@@  . THESE COMMANDS FOR ED COMPAT    @C@@@@          +         '@@V',VER1ZX
)@@G@@         . VERIFY @C@@@@          +         '@BR',BRIEF1       . BRIEF  ZY
)@@G@@@C@@@@          +         '@@T',TOP1        . TOP     @C@@@@          + ZZ
)@@G@@        '@@H',HEAD1       . HEAD    @E@@@@          +         '@@O',OUTPAA
)@@G@@T1      . LIKE P+ IN EDIT     @G@@@@          +         '@GO',GT1       AB
)@@G@@  . JUST THE NUM DOES THIS IN EDIT  @E@@@@          +         '@@N',NEX1AC
)@@G@@        . LIKE + OR - NUM     @C@@@@          OFF       EDMODE          AD
)@@G@@  .         @E@@@@ALTRS1    . THE COMMANDS WHICH ALTER THE FILE FOLLOW: AE
)@@G@@      @C@@@@          ON        EDMODE            .         @C@@@@      AF
)@@G@@    +         '@@B',APP1        . BOTTOM  @C@@@@          OFF       EDMOAG
)@@G@@DE            .         @C@@@@          +         '@@C',CHANG1       . CAH
)@@G@@HANGE @C@@@@          +         '@@D',DEL1         . DELETE @C@@@@      AI
)@@G@@    +         '@@I',INPUT1       . INSERT @E@@@@          +         '@IBAJ
)@@G@@',IBIN         . INSERT BEFORE      @C@@@@          +         '@IN',INLIAK
)@@G@@NE1      . INLINE @C@@@@          +         '@@R',RETYP1       . RETYPE AL
)@@G@@@C@@@@          +         '@@A',APP1         . APPEND @C@@@@LST1LEN   EQAM
)@@G@@U       $-COMLST1          .        @G@@@@$(1)      L,U       R1,LST1LENAN
)@@G@@         . GET COMMAND LIST LENGTH        @E@@@@          L         A2,(AO
)@@G@@1,0)           . GET INDEX          @E@@@@          SE,H1     A1,COMLST1AP
)@@G@@,*A2     . SEARCH PRINT       @E@@@@          J         NOFNDC          AQ
)@@G@@    . NO FIND           @G@@@@          L,U       A0,ALTRS1         . GEAR
)@@G@@T ALTER COMMAND ADDR          @G@@@@          TNG,U     A0,COMLST1,A2   AS
)@@G@@  . DOES IT ALTER THE FILE?         @E@@@@          LMJ       X11,ALTRSFAT
)@@G@@        . YES-CHECK IT        @E@@@@          L,H2      A2,COMLST1-1,A2 AU
)@@G@@   . GET JUMP ADDRESS   @E@@@@          J         0,A2               . GAV
)@@G@@O TO IT           @C@@@@$(3),COMLST2        . 3 OR MORE CHARS           AW
)@@G@@@C@@@@          +         'LOC',LOC1         . LOCATE @C@@@@          + AX
)@@G@@        'LNQ',LNQ1         . LNQUICK@E@@@@          +         'QUI',QUICAY
)@@G@@K1       . QUICK PRINT        @C@@@@          +         'PRI',PRINT1    AZ
)@@G@@    . PRINT @C@@@@          +         'LNP',LNP1         . LNPRINT@C@@@@BA
)@@G@@          +         'FIN',FIND1        . FIND   @C@@@@          +       BB
)@@G@@  'LAS',LAST1       . LAST    @G@@@@          +         'EXI',FIEXIT    BC
)@@G@@     . EXIT - APPLY CORRECTION      @G@@@@          +         'OMI',OENDBD
)@@G@@         . OMIT-END NO CORRECTIONS        @E@@@@          +         'TABBE
)@@G@@',TAB1         . TAB CHAR           @E@@@@          +         'SET',SET1BF
)@@G@@         . SET TABS           @G@@@@          +         'CLI',CLIMIT1   BG
)@@G@@     . CLIMIT (FOR CHANGE COMMAND)  @G@@@@          +         'PLI',PRLIBH
)@@G@@M        . PLIMIT (FOR PRINT COMMAND)     @C@@@@          +         'CSFBI
)@@G@@',CSFIT1       . CSF    @C@@@@          +         'LCH',LCHAR1       . LBJ
)@@G@@CHAR  @C@@@@          +         'MSC',MSCHAR1      . MSCHAR @C@@@@      BK
)@@G@@    +         'PUN',PUNCH1       . PUNCH  @C@@@@          +         'AUTBL
)@@G@@',AUTO1        . AUTO   @C@@@@          +         'TYP',SETTP        . TBM
)@@G@@YPE   @C@@@@          +         'TCH',SETTCF       . TCHAR  @C@@@@      BN
)@@G@@    +         'SPL',SPLIT1       . SPLIT  @C@@@@          +         'SITBO
)@@G@@',SITE1        . SITE   @C@@@@          +         'LNS',LNSITE1      . LBP
)@@G@@NSITE @C@@@@          +         'CPU',CPUNCH       . CPUNCH @E@@@@      BQ
)@@G@@    +         'OPR',OPR1         . OPR MESSAGE        @C@@@@          + BR
)@@G@@        'OFF',OFF1       . OFF      @C@@@@          +         'TIM',TIMEBS
)@@G@@1        . TIME   @C@@@@          +         'CPT',CPT1         . CPT    BT
)@@G@@@C@@@@          +         'SCA',SCALE1      . SCALE   @C@@@@          + BU
)@@G@@        'CCH',CCHAR1      . CCHAR   @C@@@@          +         'EXC',EXC1BV
)@@G@@        . EXCHAR  @C@@@@          +         'MAI',MAIL1         . MAIL  BW
)@@G@@@C@@@@          +         'MAX',MAXLN1       . MAXLINE@C@@@@          + BX
)@@G@@        'STA',STATUS1     . STATUS  @C@@@@          +         'CAS',CASEBY
)@@G@@1       . CASE    @E@@@@ DO DEBUG ,          +         'WZZ',WAIT1      BZ
)@@G@@ . WAITE    @A@@@@ DO DEBUG**DUMP ,  +  'DUM',DUMP1 . @C@@@@  DO  DEBUG CA
)@@G@@, + 'TRA',TRACE1          .         @C@@@@          ON        EDMODE    CB
)@@G@@        .         @C@@@@          +         'VER',VER1         . VERIFY CC
)@@G@@@C@@@@          +         'BRI',BRIEF1       . BRIEF  @C@@@@          + CD
)@@G@@        'TOP',TOP1        . TOP     @E@@@@          +         'END',OENDCE
)@@G@@        . LIKE OMIT EXIT      @C@@@@          +         'HEA',HEAD1     CF
)@@G@@  . HEAD    @C@@@@          +         'GOT',GT1         . GOTO    @C@@@@CG
)@@G@@          +         'NEX',NEX1        . NEXT    @C@@@@          +       CH
)@@G@@  'OUT',OUTPT1      . OUTPUT  @C@@@@          +         'SAV',CLIMIT1   CI
)@@G@@  . SAVE    @C@@@@          OFF       EDMODE            .         @E@@@@CJ
)@@G@@ALTRS2    . THE FOLLOWING COMMANDS ALTER THE FILE:          @A@@@@      CK
)@@G@@    ON        EDMODE          @C@@@@          +         'BOT',APP1      CL
)@@G@@  . BOTTOM  @^@@@@          OFF EDMODE    @I@@@@          +         'DOCCM
)@@G@@',DOCUMENT1   .                                 817TM110    @C@@@@      CN
)@@G@@    +         'CHA',CHANG1       . CHANGE @C@@@@          +         'DELCO
)@@G@@',DEL1         . DELETE @C@@@@          +         'INS',INPUT1       . ICP
)@@G@@NSERT @C@@@@          +         'INL',INLINE1      . INLINE @C@@@@      CQ
)@@G@@    +         'RET',RETYP1       . RETYPE @C@@@@          +         'APPCR
)@@G@@',APP1         . APPEND @E@@@@          +         'INP',INPUT2       . ICS
)@@G@@NPUT MODE         @C@@@@          +         'DIT',DITTO1       . DITTO  CT
)@@G@@@C@@@@          +         'SEQ',SEQ1         . SEQ.ID @C@@@@          + CU
)@@G@@        'ADD',ADD1         . ADD    @C@@@@          +         'MOV',MOVECV
)@@G@@F1      . MOVE    @C@@@@LST2LEN   EQU       $-COMLST2          .        CW
)@@G@@@^@@@@          ASCII     .   @E@@@@$(1),NOFNDC L,U       R1,LST2LEN    CX
)@@G@@     . GET LIST LENGTH  @C@@@@          L,U       A0,1              .   CY
)@@G@@      @E@@@@          CONVAF    EDIT14,IMBUF      . ASCII TO FD         CZ
)@@G@@@C@@@@          L         A2,(1,0)           .        @G@@@@          L,DA
)@@G@@H1      A3,IMBUF          . GET FIRST THREE CHARS           @E@@@@      DB
)@@G@@    SE,H1     A3,COMLST2,*A2     . SEARCH PRINT       @E@@@@          J DC
)@@G@@        COMERR              . NO FIND           @G@@@@          L,U     DD
)@@G@@  A0,ALTRS2         . ADDRESS FOR ALTER COMMALDS      @E@@@@          TNDE
)@@G@@G,U     A0,COMLST2,A2     . IS IT ONE OF THEM   @E@@@@          LMJ     DF
)@@G@@  X11,ALTRSF        . YES-GO CHECK        @E@@@@          L,H2      A2,CDG
)@@G@@OMLST2-1,A2    . GET ADDRESS        @E@@@@          J         0,A2      DH
)@@G@@         . JUMP TO IT         @]@@@@COMERR    . @A@@@@          TYP     DI
)@@G@@  E8,L8           @^@@@@          J         NXRQ@E@@@@ALTRSF    TOPTN   DJ
)@@G@@  'R'               . IS IT READ ONLY     @E@@@@          J         0,X1DK
)@@G@@1             . NOPE RETURN         @E@@@@          TYP       E41,L41   DL
)@@G@@        . TELL HIM SO         @G@@@@          J         0,X11           DM
)@@G@@  . NOW RETURN AND DO IT ANYWAY     @C@@@@          ON        DEBUG     DN
)@@G@@        .         @E@@@@WAIT1     LMJ       X10,GET           . GET NUMBDO
)@@G@@ER          @E@@@@          LMJ       X10,BIN0          . CONVERT TO BINDP
)@@G@@ARY   @E@@@@          TG,U      A10,30000         . GREATER THAN 30 SECSDQ
)@@G@@@C@@@@          L,U       A10,30000         . LOAD 30 @C@@@@          L DR
)@@G@@        A1,A10            .         @C@@@@          ER        TWAIT$    DS
)@@G@@        .         @C@@@@          J         NXRQ              .         DT
)@@G@@@C@@@@          OFF       DEBUG             .         @C@@@@          ONDU
)@@G@@        DUMP              .         @E@@@@DUMP1     SLJ       SITEDUMP  DV
)@@G@@        . DUMP D BANK         @C@@@@          J         NXRQ            DW
)@@G@@ .          @C@@@@          OFF       DUMP              .         @A@@@@DX
)@@G@@ . @/ ID LINE PRINT ROUTINE.        @^@@@@          FIELDATA  .   @E@@@@DY
)@@G@@IDMSG     E$DIT     FTAB               . START EDIT MODE    @G@@@@      DZ
)@@G@@    E$MSG     LEVEL              . START MESSAGE   ED X.Y-        @E@@@@EA
)@@G@@ DO 1-EDMODE ,   E$FD1   ('IT@@@@')  . CHANGE TO EDIT       @I@@@@      EB
)@@G@@    TNZ       DIDRLS            . DID WE HAVE TO DO AN RLIST$     ED0114EC
)@@G@@20    @I@@@@          J         IDREP             . NO                  ED
)@@G@@            ED011430    @I@@@@          E$CHAR    05                . INEE
)@@G@@SERT A BLANK TO TELL HIM SO   ED011440    @I@@@@IDREP     E$MSGR        EF
)@@G@@              . REST OF MSG                     ED011460    @E@@@@TIMMSGEG
)@@G@@ ER      TDATE$              . GET DATE AND TIME.     @E@@@@       S    EH
)@@G@@   A0,A4               . SAVE RESULT.           @C@@@@          LMJ     EI
)@@G@@  X11,EDAY1$          . DATE  @E@@@@          E$SKIP    -3              EJ
)@@G@@    . NO YEAR           @E@@@@          E$CHAR    '-'                 . EK
)@@G@@INSERT DASH       @C@@@@          E$TIME    A4                  . TIME  EL
)@@G@@@E@@@@          E$SKIP    -3                  . NO SECONDS        @E@@@@EM
)@@G@@          E$MSGR                       .  ...-(...          @E@@@@      EN
)@@G@@    TOPTN     'I'                . I OPTION?          @E@@@@          J EO
)@@G@@        OLDCYC             . NO, PRINT OLD CYCLE@E@@@@          E$CHAR  EP
)@@G@@  ','                . NEW ONE- INSERT ,  @E@@@@OLDCYC    E$DECV    RC  EQ
)@@G@@                . REQUESTED CYCLE   @E@@@@          TNOPTN    'I'       ER
)@@G@@         . I OPTION?          @E@@@@          J         FIDCYC          ES
)@@G@@   . YES, DONE          @E@@@@          E$CHAR    ','                . IET
)@@G@@NSERT A ,         @E@@@@          TOPTN     'U'                . U OPTIOEU
)@@G@@N?          @E@@@@          J         FIDCYC             . NO, NO NEW CYEV
)@@G@@CLE   @E@@@@          L         A0,RC              . PRESENT CYCLE      EW
)@@G@@@C@@@@          A,U       A0,1               . +1= NEW@I@@@@          TNEX
)@@G@@E,U     A0,63             . CYCLE 63?                       ED011480    EY
)@@G@@@I@@@@          L,S2      A0,INTBL+8        . GET CYCLE LIMIT           EZ
)@@G@@      ED011490    @E@@@@          E$DECV    . CONVERT TO DECIMAL FIELDATFA
)@@G@@A AND INSERT@C@@@@FIDCYC    E$CHAR    ')'                 .       @C@@@@FB
)@@G@@       LMJ     X11,EDITX$          . TERM       @^@@@@          ASCII   FC
)@@G@@  .   @E@@@@          FTYPE     FIMBUF,5          . PRINT ID LINE       FD
)@@G@@@C@@@@       J       0,X10               . RETURN     @A@@@@  .    LINE FE
)@@G@@COUNT ROUTINE           @E@@@@CLIN      A$EDIT     ETAB             . STFF
)@@G@@ART EDIT          @C@@@@        LA     A0,LCT      . GET LINE COUNT     FG
)@@G@@@C@@@@        LMJ    X11,AEDECV$  . CONVERT           @C@@@@          A$FH
)@@G@@ECHAR    ':'                .       @C@@@@        LMJ    X11,AEDITX$   .FI
)@@G@@ TERM EDIT        @E@@@@          TYP       IMBUF,3           . LINE :  FJ
)@@G@@...         @A@@@@        J      0,X10       . RETURN @C@@@@TLIN    LMJ FK
)@@G@@   X10,CLIN    . GET CONV LCT       @C@@@@        J      NXRQ         . FL
)@@G@@ON TO NEXT        @^@@@@ . STATUS OF MODES      @I@@@@CHARST    'TAB:& CFM
)@@G@@CHAR:& LCHAR:& MSCHAR:& CLIMIT:& AUTO:& MAXLINE:&'    817TM113    @E@@@@FN
)@@G@@CHARST2   'TABS:&   TCHAR:&  EXCHAR:&   PLIMITS:&   CASE:&' @I@@@@GENNSTFO
)@@G@@    'STA QUICK BRIEF NUMBER PCNTRL DSPLIT '                       817TM1FP
)@@G@@15    @I@@@@          'XBRIEF SEQ LOOK EOF UNIMOD MEMORY '              FQ
)@@G@@            817TM116    @I@@@@LGENNST   EQU       $-GENNST          .   FR
)@@G@@                              817TM117    @E@@@@STATUS1   SNZ       STATFS
)@@G@@US            . SET STATUS          @E@@@@          LMJ       X10,GET   FT
)@@G@@        . GET FIRST THING     @E@@@@          TNZ       A1              FU
)@@G@@  . ANY MODES SPEC?     @C@@@@          J         STCH              . NOFV
)@@G@@      @E@@@@          E$DIT     FTAB              . FOR MODES PRINTOUT  FW
)@@G@@@C@@@@          J         TURN1+1           .         @G@@@@STCH      A$FX
)@@G@@EDIT    ETAB              . FOR SPECIAL CHAR PRINT          @I@@@@      FY
)@@G@@    A$EMSG     CHARST            . START STATUS STUFF              817TMFZ
)@@G@@121   @I@@@@          L         A0,THETAB         . GET THE TAB CHAR    GA
)@@G@@            817TM122    @I@@@@          TNE,U     A0,0777           . IFGB
)@@G@@ 077 THEN                     817TM123    @I@@@@          LMJ       X11,GC
)@@G@@NNO           . ENNTER NNO                      817TM124    @I@@@@      GD
)@@G@@    A$ECHAR    . ENTER CHAR                                        817TMGE
)@@G@@125   @I@@@@          A$EMSGR    . CONTINUE MSG                         GF
)@@G@@             817TM126   @I@@@@          L         A0,CONTCHAR       . COGG
)@@G@@NTINUTATION CHAR              817TM127    @I@@@@          TNE,U     A0,0GH
)@@G@@777           . IF 077 THEN                     817TM128    @I@@@@      GI
)@@G@@    LMJ       X11,NNO           . ENNTER NNO                      817TM1GJ
)@@G@@29    @I@@@@          A$ECHAR    . ENTER CHAR                           GK
)@@G@@             817TM130   @I@@@@          A$EMSGR    . CONTINUE MSG       GL
)@@G@@                               817TM131   @I@@@@          L         A0,LGM
)@@G@@OCHR          . LOCATE CHAR                     817TM132    @I@@@@      GN
)@@G@@    TNE,U     A0,0777           . IF 077 THEN                     817TM1GO
)@@G@@33    @I@@@@          LMJ       X11,NNO           . ENNTER NNO          GP
)@@G@@            817TM134    @I@@@@          A$ECHAR    . ENTER CHAR         GQ
)@@G@@                               817TM135   @I@@@@          A$EMSGR    . CGR
)@@G@@ONTINUE MSG                                      817TM136   @I@@@@      GS
)@@G@@    L         A0,MSPCHR         . MASTER SPACE CHAR               817TM1GT
)@@G@@37    @I@@@@          TNE,U     A0,0777           . IF 077 THEN         GU
)@@G@@            817TM138    @I@@@@          LMJ       X11,NNO           . ENGV
)@@G@@NTER NNO                      817TM139    @I@@@@          A$ECHAR    . EGW
)@@G@@NTER CHAR                                        817TM140   @I@@@@      GX
)@@G@@    A$EMSGR    . CONTINUE MSG                                      817TMGY
)@@G@@141   @I@@@@          L         A0,SAVE2           . CHANGE LIMIT       GZ
)@@G@@            817TM142    @I@@@@          A$EDECV    . TO DECIMAL         HA
)@@G@@                               817TM143   @I@@@@          A$EMSGR    . CHB
)@@G@@ONTINUE MSG                                      817TM144   @I@@@@      HC
)@@G@@    L         A0,AUTOTST        . AUTO                            817TM1HD
)@@G@@45    @I@@@@          A$EDECV    . TO DECIMAL                           HE
)@@G@@             817TM146   @I@@@@          A$EMSGR    . MAXLINE-           HF
)@@G@@                               817TM147   @I@@@@          L         A0,SHG
)@@G@@AVECL         . MAXLINE                         817TM148    @I@@@@      HH
)@@G@@    A$EDECV    .                                                   817TMHI
)@@G@@149   @I@@@@          A$EDITX    .                                      HJ
)@@G@@             817TM150   @C@@@@          TYP       IMBUF,33          .   HK
)@@G@@      @I@@@@          A$EDIT     ETAB              . START ANOTHER EDIT HL
)@@G@@             817TM152   @I@@@@          A$EMSG     CHARST2           . THM
)@@G@@ABS:                           817TM153   @I@@@@          L,U       X5,0HN
)@@G@@              . 0 TO X5                         817TM154    @I@@@@      HO
)@@G@@    SZ        R5                . ZERO R5                         817TM1HP
)@@G@@55    @I@@@@GNXTBX    L         X5,TAB80,X5                             HQ
)@@G@@            817TM156    @I@@@@          L,U       A0,1              . +1HR
)@@G@@                              817TM157    @I@@@@          A         A0,XHS
)@@G@@5             . TAB                             817TM158    @I@@@@      HT
)@@G@@    TZ        TAB80,X5          . ZERO TAB                        817TM1HU
)@@G@@59    @I@@@@          TG,U A0,134                 . OR GREATER THAN 132 HV
)@@G@@            817TM160    @I@@@@          L,U       R5,-1              . SHW
)@@G@@ET R5 TO -1                   817TM161    @I@@@@          L         A6,AHX
)@@G@@0             . SAVE TAB                        817TM162    @I@@@@      HY
)@@G@@    TNZ       R5                . FIRST TIME?                     817TM1HZ
)@@G@@63    @I@@@@          J         F1STTM            . YES                 IA
)@@G@@            817TM164    @I@@@@          A$ECHAR    ','               . IIB
)@@G@@NSERT ,                        817TM165   @I@@@@          J         $+2 IC
)@@G@@              . SKIP THE NEXT INST              817TM166    @I@@@@F1STTMID
)@@G@@    L,U       R5,1              . SET TO 1                        817TM1IE
)@@G@@67    @I@@@@          A$EDECV    A6    . TO DECIMAL FIELDATA            IF
)@@G@@             817TM168   @I@@@@          L         A0,R5             . GEIG
)@@G@@T IND                         817TM169    @I@@@@          JB        A0,GIH
)@@G@@NXTBX            . GET NEXT TAB                 817TM170    @I@@@@LSTTABII
)@@G@@X   A$EMSGR    . TRANS CHAR                                        817TMIJ
)@@G@@171   @I@@@@          L         A0,TRCHF          . GET RANSPARENT CHAR IK
)@@G@@            817TM172    @I@@@@          TNE,U     A0,0777           . TUIL
)@@G@@RNED OFF?                     817TM173    @I@@@@          LMJ       X11,IM
)@@G@@NNO           . PRINT NONE                      817TM174    @I@@@@      IN
)@@G@@    A$ECHAR    . INSERT THE CHAR                                   817TMIO
)@@G@@175   @I@@@@          A$EMSGR    . EXC CHAR                             IP
)@@G@@             817TM176   @I@@@@          L         A0,CHGCHR         .   IQ
)@@G@@                              817TM177    @I@@@@          L         A6,AIR
)@@G@@0             . SAVE IN A6                      817TM178    @I@@@@      IS
)@@G@@    TNE,U     A0,0777           . IF 077 THEN                     817TM1IT
)@@G@@79    @I@@@@          LMJ       X11,NNO           . INSERT NONE         IU
)@@G@@            817TM180    @I@@@@          A$ECHAR    .                    IV
)@@G@@                               817TM181   @I@@@@          TNE,U     A6,0IW
)@@G@@777           . IF 077 THEN                     817TM182    @I@@@@      IX
)@@G@@    J         PNONE             . PRINT NONE                      817TM1IY
)@@G@@83    @C@@@@          A$ECHAR   '='               . INSERT =@I@@@@      IZ
)@@G@@    A$EOCTV    NCHGCHR           . IS REALLY THIS CHAR             817TMJA
)@@G@@185   @I@@@@          A$ECHAR    '('               . CHAR IN PAREN      JB
)@@G@@             817TM186   @I@@@@          L         A0,NCHGCHR        . GEJC
)@@G@@T NEW CHAR                    817TM187    @I@@@@          A$ECHAR       JD
)@@G@@               . IN ALPHA                        817TM188   @I@@@@      JE
)@@G@@    A$ECHAR    ')'               . CHAR IN PAREN                   817TMJF
)@@G@@189   @I@@@@PNONE     .                                                 JG
)@@G@@            817TM190    @A@@@@          A$EMSGR   . PLIMITS       @E@@@@JH
)@@G@@          A$EDECV   CPTL1             . FIRST COL LIM       @G@@@@      JI
)@@G@@    A$ECHAR   ','               . SEPARATE PLIMITS WITH COMMA     @E@@@@JJ
)@@G@@          A$EDECV   CPTL2             . SECOND COL LIM      @A@@@@      JK
)@@G@@    A$EMSGR   . CASE          @E@@@@          TNZ       CASEUP          JL
)@@G@@  . UPPER CASE FLAG SET?@E@@@@          J         NORM              . NOJM
)@@G@@, NORMAL CASE     @E@@@@          A$EFD2    ('UPPER   ')      . INSERT 'JN
)@@G@@UPPER'      @C@@@@          J         $+3               .         @E@@@@JO
)@@G@@NORM      A$EFD2    ('NORMAL  ')      . INSERT 'NORMAL'     @I@@@@      JP
)@@G@@    A$EDITX                                                        817TMJQ
)@@G@@191   @E@@@@          TYP       IMBUF,33          . TYPE IT OUT         JR
)@@G@@@I@@@@          L         A0,(1,ILSTCD)     . LAST CARD IMAGE           JS
)@@G@@      817TM193    @I@@@@          L         A1,(1,GENNST)     . STATUS CJT
)@@G@@OMMAND                  817TM194    @I@@@@          L,U       R1,LGENNSTJU
)@@G@@        . LENNGTH                         817TM195    @I@@@@          BTJV
)@@G@@        A0,,*A1           . TRANSFER                        817TM196    JW
)@@G@@@E@@@@          L,U       A0,LGENNST        . 4 WORD IMAGE        @C@@@@JX
)@@G@@          S         A0,LLSTCD         .         @E@@@@          SNZ     JY
)@@G@@  RLSTCD            . SET INDICATOR       @E@@@@          J         NXRQJZ
)@@G@@              . GO READ IT          @I@@@@NNO       L         A0,('NONE'KA
)@@G@@)     . NONE                            817TM200      @I@@@@          A,KB
)@@G@@U       X11,1             . SKIP PAST RETURN                817TM201    KC
)@@G@@@I@@@@          J         AEFD1$             . INSERT IT                KD
)@@G@@       817TM202   @A@@@@ . TURNS MODES ON AND OFF           @E@@@@ON1   KE
)@@G@@    L         A8,R10             . TURN FLAG ON       @C@@@@          J KF
)@@G@@        TURN0             .         @E@@@@OFF1      SZ        A8        KG
)@@G@@        . TURNN FLAG OFF      @C@@@@TURN0     SZ        STATUS          KH
)@@G@@  .         @E@@@@TURN1      LMJ       X10,GET           . GET NEXT WORDKI
)@@G@@      @C@@@@          S         A1,A6             . SAVE    @E@@@@TURN2 KJ
)@@G@@    AND       A1,(0777777777700)    . ISOLATE 1ST CHAR@E@@@@          JZKK
)@@G@@        A2,TURN3          . NONE IN UPPER       @E@@@@           SSL    KL
)@@G@@   A1,6              . SHIFT OFF CHAR     @E@@@@           J         TURKM
)@@G@@N2             . LOOK AGAIN         @E@@@@TURN3      L,U       R1,TURNTLKN
)@@G@@         . TABLE LENGTH       @C@@@@           L         X6,(1,0)       KO
)@@G@@   . PTR    @E@@@@           SE,S1     A1,TURNT,*X6      . LOOK FOR KEY KP
)@@G@@WORD  @C@@@@           J         TURNER            . NO FIND@G@@@@      KQ
)@@G@@     AN,U      X6,1              . DECR TO CORRECT ADDRESS        @E@@@@KR
)@@G@@          TZ        STATUS            . STAUS COMMAND?      @C@@@@      KS
)@@G@@    J         STATPR            . YES     @G@@@@          S,S6      A8,TKT
)@@G@@URNT,X6       . SET FLAG APPROPRIATELY          @E@@@@TURN4     LMJ     KU
)@@G@@  X10,GET           . ANY MORE MODES?     @E@@@@          TNZ       STATKV
)@@G@@US            . STATUS COMMAND?     @C@@@@          J         TURN5     KW
)@@G@@        . NO      @G@@@@          DL        A2,IMBUF          . RESTORE KX
)@@G@@FIRST 3 WORDS OF FIMBUF @C@@@@          DS        A2,FIMBUF         .   KY
)@@G@@      @C@@@@          L         A2,IMBUF+2        .         @C@@@@      KZ
)@@G@@    S         A2,FIMBUF+2       .         @E@@@@TURN5     S         A1,ALA
)@@G@@6             . SAVE MODE WORD      @G@@@@           JZ        A1,TURDUNLB
)@@G@@            . IGNORE ANYTHING ELSE        @E@@@@          J         TURNLC
)@@G@@2             . INSPECT IT          @E@@@@TURNER     TYP       E47,L47  LD
)@@G@@         . INCORRECT MODE NAME@C@@@@           J         RECTST         LE
)@@G@@   .        @I@@@@STATPR    .                                           LF
)@@G@@                  817TM206    @E@@@@          E$FD1     A6              LG
)@@G@@  . MODE NAME           @C@@@@          E$SKIP    1                 . SKLH
)@@G@@IP 1  @C@@@@          TNZ,S6    TURNT,X6          . SET?    @C@@@@      LI
)@@G@@    J         STOFF             . OFF     @^@@@@          FIELDATA  .   LJ
)@@G@@@C@@@@          E$MSG     ('ON&&&&')        . ON      @C@@@@          J LK
)@@G@@        STON              .         @C@@@@STOFF     E$MSG     ('OFF&&&')LL
)@@G@@        . OFF     @^@@@@          ASCII     .   @I@@@@STON      E$SKIP  LM
)@@G@@  2                 . SKIP TWO SPACES                 817TM208    @G@@@@LN
)@@G@@          DL        A0,FIMBUF         . SAVE FIRST 3 WORDS OF FIMBUF    LO
)@@G@@@C@@@@          DS        A0,IMBUF          .         @C@@@@          L LP
)@@G@@        A0,FIMBUF+2       .         @C@@@@          S         A0,IMBUF+2LQ
)@@G@@        .         @E@@@@          J         TURN4             . ANY MORELR
)@@G@@?           @I@@@@TURDUN    TNZ       STATUS            . STATUS COMMANDLS
)@@G@@?                 817TM210    @I@@@@          J         NXRQ            LT
)@@G@@  . EXIT                            817TM211    @I@@@@          E$DITX  LU
)@@G@@  . EXIT EDIT MODE                                    817TM212    @E@@@@LV
)@@G@@          FTYPE     FIMBUF,22         . TYPE OUT LINE       @I@@@@      LW
)@@G@@    J         NXRQ              . EXIT                            817TM2LX
)@@G@@14    @^@@@@$(0) . MODE TABLE       @C@@@@F630      FORM      6,30      LY
)@@G@@        .         @]@@@@TURNT      .@^@@@@          FIELDATA  .   @E@@@@LZ
)@@G@@QUICKON    EQUF      $,,S6             . QUICK PRINT MODE   @C@@@@      MA
)@@G@@     F630      'Q',0           .          @E@@@@BRIEF2     EQUF      $,,MB
)@@G@@S6             . BRIEF MODE         @C@@@@           F630      'B',REGBRMC
)@@G@@IEF    .          @G@@@@ALLLN      EQUF      $,,S6             . PRINT LMD
)@@G@@INE NUMBERS MODE        @I@@@@           F630      'N',LNLINES     . NUMME
)@@G@@BER                           ED011510    @G@@@@RECPCNT    EQUF      $,,MF
)@@G@@S6             . RECOGNIZE PRINT CONTROL IMAGES @C@@@@           F630   MG
)@@G@@   'P',0           . PCNTRL   @G@@@@SPLITDEL   EQUF      $,,S6          MH
)@@G@@   . DELETE LINES WHEN SPLITTING    @C@@@@           F630      'D',SPLITMI
)@@G@@DLI    .  DSPLIT  @G@@@@BRIEF3    EQUF      $,,S6             . BRIEF FOMJ
)@@G@@R SPLIT AND ADD         @C@@@@          F630      'X',SUPBRIEF    . XBRIMK
)@@G@@EF    @C@@@@TYPESEQ    EQUF      $,,S6             . SEQ    @I@@@@      ML
)@@G@@     F630      'S',SEQSOU      .                                  ED0115MM
)@@G@@30    @E@@@@LKMAIL    EQUF      $,,S6             . LOOK FOR MAIL       MN
)@@G@@@C@@@@          F630      'L',0           .           @E@@@@MEMORY     EMO
)@@G@@QUF      $,,S6             . REMEMBER MODES?    @C@@@@           F630   MP
)@@G@@   'M',MEMSTD      . MEMORY   @E@@@@EOFMOD    EQUF      $,,S6           MQ
)@@G@@  . EOF MODE FLAG       @C@@@@          F630      'E',EOFMODE       .   MR
)@@G@@      @E@@@@UNIMOD    EQUF      $,,S6             . UNISCOPE MODE       MS
)@@G@@@E@@@@          F630      'U',1             . NORMALLY ON FOR RSI @C@@@@MT
)@@G@@TURNTL     EQU       $-TURNT           .        @^@@@@          ASCII   MU
)@@G@@  .   @^@@@@$(1) . RETURN TO I-BANK @^@@@@ . CSF$ THE IMAGE       @E@@@@MV
)@@G@@CSFIT1    L         A0,EDIL           . IMAGE LENGTH        @E@@@@      MW
)@@G@@    AN,U      A0,1              . MINUS ONE WORD      @E@@@@          COMX
)@@G@@NVAF    EDIT14+1,EDIT14   . CONVERT ASCII TO FD @E@@@@          L       MY
)@@G@@  A3,EDIL           . EDIL*2/3 => EDIL    @C@@@@          LSSL      A3,1MZ
)@@G@@              .         @C@@@@          DSF,U     A3,3              .   NA
)@@G@@      @C@@@@          S         A4,EDIL           .         @C@@@@      NB
)@@G@@    L,U       A0,EDIT14         .         @E@@@@          LXI       A0,ENC
)@@G@@DIL           . SET UP CSF$ CALL    @C@@@@          ER        CSF$      ND
)@@G@@         . CSF IT @C@@@@CSFRET    S         A0,EDIT14         . SAVE AO NE
)@@G@@@C@@@@          A$EDIT     ETAB              . SAVE AO@C@@@@          A$NF
)@@G@@EMSG     E3S               . STATUS:@E@@@@          A$EOCTV    EDIT14   NG
)@@G@@         . VALUE OF A0        @^@@@@          A$EDITX    .  @C@@@@      NH
)@@G@@    TYP       IMBUF,6           .         @C@@@@          J         NXRQNI
)@@G@@               .        @^@@@@ . SET LOCATE CHARACTER @E@@@@LCHAR1    LMNJ
)@@G@@J       X10,GET3            . GET CHAR          @E@@@@          LMJ     NK
)@@G@@  X11,FIXCHR        . SEE IF @ OR BLANK   @C@@@@          S         A1,LNL
)@@G@@OCHR           .        @C@@@@          J         NXRQ               .  NM
)@@G@@      @A@@@@FIXCHR    . FIX CHAR TO @ OR BLANK  @E@@@@          TZ      NN
)@@G@@  A1                . FIND ANY CHARS      @E@@@@          J         0,X1NO
)@@G@@1             . YES -NOTHING TO DO  @I@@@@          L,U       A1,0777   NP
)@@G@@        . LOAD ILLEGAL CHAR OR END INDICATOR          @G@@@@          TNNQ
)@@G@@E       A1,DELIM          . IS THE DELIMITER 0777           @G@@@@      NR
)@@G@@    J         0,X11             . YES-LEAVE ILLEGAL CHAR          @E@@@@NS
)@@G@@          SZ        A1                . CLEAR A1 TO @       @C@@@@      NT
)@@G@@    J         0,X11             . RETURN  @C@@@@ . SET MASTERSPACE IN CONU
)@@G@@LUMN 1 CHARACTER        @E@@@@MSCHAR1   LMJ       X10,GET3            . NV
)@@G@@GET CHAR          @E@@@@          TNZ       A1                 . NO CHARNW
)@@G@@?           @I@@@@          L,U       A1,0777            . USE NONEXISTANX
)@@G@@NT CODE           ED011570    @C@@@@          S         A1,MSPCHR       NY
)@@G@@   .        @C@@@@          J         NXRQ               .        @E@@@@NZ
)@@G@@EXC1      LMJ       X10,GET3           . GET FIRST ITEM     @I@@@@      OA
)@@G@@    TNE       A1,NCHGCHR        . IS IT THE PRESENT NEW CHANGE CHAR     OB
)@@G@@      @G@@@@          L         A1,CHGCHR         . MUST HAVE MEANT REDEOC
)@@G@@FINITION    @E@@@@          LMJ       X11,FIXCHR        . SEE IF @ OR BLOD
)@@G@@ANK   @G@@@@          S         A1,CHGCHR         . THIS IS CHAR TO LOOKOE
)@@G@@ FOR        @E@@@@          LMJ       X10,GET           . GET NEXT FIELDOF
)@@G@@      @C@@@@          TNZ       A1                .         @I@@@@      OG
)@@G@@    L,U       A1,0676767        . NONEXISTANT CODE AGAIN          ED0116OH
)@@G@@10    @I@@@@          AND,U     A1,070707         . QUICK AND DIRTY FD TOI
)@@G@@O OCTAL     ED011630    @C@@@@          DSL       A2,3              .   OJ
)@@G@@      @C@@@@          SSL       A2,3              .         @C@@@@      OK
)@@G@@    DSL       A2,3              .         @C@@@@          SSL       A2,3OL
)@@G@@              .         @C@@@@          LDSL      A2,6              .   OM
)@@G@@      @C@@@@          S         A2,NCHGCHR        . VOILA!  @C@@@@      ON
)@@G@@    J         NXRQ              .         @C@@@@ . CASE COMMAND: SET OR OO
)@@G@@CLEAR FLAG (CASEUP)     @E@@@@CASE1     . SET LOWER-TO-UPPER-CASE ASCII OP
)@@G@@CONVERSION FLAG,  @E@@@@          . OR RESET NORMAL CASE FLAG (NO CONVEROQ
)@@G@@SION)       @E@@@@          LMJ       X10,GET           . GET UPPER OR NOR
)@@G@@ORMAL @C@@@@          TNE,U     A1,032            . FD 'U'? @C@@@@      OS
)@@G@@    J         UPCASE            . YES     @E@@@@          TNE       A1,UOT
)@@G@@PPER           . FD 'UPPER'?        @C@@@@          J         UPCASE    OU
)@@G@@        . YES     @C@@@@          TNE,U     A1,023            . FD 'N'? OV
)@@G@@@C@@@@          J         NORCASE           . YES     @E@@@@          TNOW
)@@G@@E       A1,NORMAL         . FD 'NORMAL'?        @C@@@@          J       OX
)@@G@@  NORCASE           . YES     @E@@@@          TYP       E4,L4           OY
)@@G@@  . TYPE ERROR MESSAGE  @C@@@@          J         NXRQ              . COOZ
)@@G@@NTINUE@E@@@@UPCASE    SNZ       CASEUP            . SET UPPER CASE FLAG PA
)@@G@@@C@@@@          J         NXRQ              . CONTINUE@G@@@@NORCASE   SZPB
)@@G@@        CASEUP            . CLEAR UPPER CASE FLAG           @C@@@@      PC
)@@G@@    J         NXRQ              . CONTINUE@^@@@@ . TRACE WITH SNOOPY    PD
)@@G@@@C@@@@          ON        DEBUG             .         @G@@@@TRACE1    L PE
)@@G@@        A0,TRACE           . INVERT RECOGNIZE TRACE FLAG    @C@@@@      PF
)@@G@@    SZ        TRACE              .        @C@@@@          JNZ       A0,NPG
)@@G@@XRQ            .        @C@@@@          SNZ       TRACE           .     PH
)@@G@@      @C@@@@          J         NXRQ               .        @C@@@@      PI
)@@G@@    OFF       DEBUG             .         @A@@@@ . THIS ROUTINE SENDS MAPJ
)@@G@@IL          @^@@@@          FIELDATA  .   @E@@@@USEMF     '@USE   MF$$,&PK
)@@G@@*ED$M&'           . EDIT*USERID     @^@@@@          ASCII     .   @E@@@@PL
)@@G@@MAIL1     SZ        A5                . ZERO COUNT          @E@@@@      PM
)@@G@@    LMJ       X10,GET           . GET USERID          @C@@@@          L PN
)@@G@@        R5,A1             . SAVE IT @C@@@@TRYSM     E$DIT     FTAB      PO
)@@G@@         .        @G@@@@          L         A0,(2,FREMF)      . FREE ANYPP
)@@G@@ SCRAP LEFT AROUND      @C@@@@          ER        CSF$              .   PQ
)@@G@@      @E@@@@          E$MSG     USEMF              . @USE MF$$,EDIT*... PR
)@@G@@@C@@@@          E$FD1     R5                 .        @C@@@@          E$PS
)@@G@@MSGR                       .        @C@@@@          E$DECV    A5        PT
)@@G@@        . COUNT   @C@@@@          E$DITX                       .        PU
)@@G@@@C@@@@          L         A0,(4,FIMBUF)       .       @E@@@@          ERPV
)@@G@@        CSF$               . APPLY USE          @E@@@@          L       PW
)@@G@@  A0,(4,ASGCMF)      . ASG FILE           @^@@@@          ER        CSF$PX
)@@G@@@E@@@@          JP        A0,OKSML          . IF ZERO OK          @E@@@@PY
)@@G@@          TG,U      A5,10             . 10 MESSAGE MAX      @C@@@@      PZ
)@@G@@    J         CANTML            .         @E@@@@          A,U       A5,1QA
)@@G@@              . TRY ANOTHER NUMBER  @C@@@@          J         TRYSM     QB
)@@G@@        .         @E@@@@OKSML     L,U       R2,9               . MAX 10 QC
)@@G@@LINES       @E@@@@PMAIL     L,U       A0,TREADNM         . TYPE 'MAIL**'QD
)@@G@@      @C@@@@          ER        ATREAD$             . + READ@E@@@@      QE
)@@G@@    S,S3      A0,PRNTML           . WORD COUNT        @C@@@@          L QF
)@@G@@        A2,A0             .         @C@@@@          TOPTN    'L'        QG
)@@G@@       . L OPTION @E@@@@          J         NOECOM            . NO-DON'TQH
)@@G@@ ECHO       @E@@@@          LSSL      A2,18             . GET READY TO EQI
)@@G@@CHO   @E@@@@          A         A2,(0101,EDIT14-1) . ADD IN ADDRESS     QJ
)@@G@@@C@@@@          L         A0,A2             .         @E@@@@          ERQK
)@@G@@        APRINT$            . PRINT IF IT IS     @C@@@@NOECOM    L,U     QL
)@@G@@  A0,PRNTML          .        @G@@@@          ER        APRNTA$         QM
)@@G@@    . PRINT TO EDIT*USERID          @C@@@@          JGD       R2,PMAIL  QN
)@@G@@         .        @^@@@@          FIELDATA  .   @G@@@@ENDPM     L       QO
)@@G@@  A0,('FROM: ')     . INDICATE WHO ITS FROM           @^@@@@          ASQP
)@@G@@CII     .   @C@@@@          L         A1,USERID         . USERID  @C@@@@QQ
)@@G@@          DS        A0,EDIT14         .         @G@@@@          ER      QR
)@@G@@  DATE$             . GET TIME AND DAY IN FIELDATA    @E@@@@          L QS
)@@G@@        A2,BLANKS         . GET BLANKS          @C@@@@          S       QT
)@@G@@  A2,EDIT14+2       . BLANKS  @C@@@@          S         A0,EDIT14+3     QU
)@@G@@  . DATE    @C@@@@          S         A2,EDIT14+4       . BLANKS  @C@@@@QV
)@@G@@          S         A1,EDIT14+5       . TIME    @C@@@@          L,U     QW
)@@G@@  A0,6              . 6 WORDS @C@@@@          S,S3      A0,PRNTML       QX
)@@G@@  .         @C@@@@          L,U       A0,PRNTML         .         @C@@@@QY
)@@G@@          ER        PRNTA$            .         @G@@@@          L       QZ
)@@G@@  A0,(2,BRKMF)       . BREAKPOINT EDIT*USERID         @^@@@@          ERRA
)@@G@@        CSF$@C@@@@          L         A0,(2,FREMF)       . FREE IT@^@@@@RB
)@@G@@          ER        CSF$@E@@@@          TNZ       GOEXIT            . GORC
)@@G@@ TO EXIT?         @^@@@@          J         NXRQ@E@@@@          J       RD
)@@G@@  FIEXIT            . IT'S ALL OVER BABY  @E@@@@CANTML    TYP       E50,RE
)@@G@@L50           . TYPE MAIL FILE FULL @^@@@@          J         NXRQ@E@@@@RF
)@@G@@MAIEOF    JP        A0,ENDPM          . WAS IT AN @EOF      @E@@@@      RG
)@@G@@    SNZ        GOEXIT    . NO, LEAVE WHEN DONE        @C@@@@          J RH
)@@G@@        ENDPM             .         @C@@@@ . THIS ROUTINE DOES THE LOOKIRI
)@@G@@NG FOR MAIL       @C@@@@MAILQ     SZ        A5                .         RJ
)@@G@@@G@@@@          L         A0,(2,FREMF)      . FREE ANY SCRAP LEFT AROUNDRK
)@@G@@      @C@@@@          ER        CSF$              .         @E@@@@RCMML RL
)@@G@@    E$DIT     FTAB               . APPLY USE          @A@@@@          E$RM
)@@G@@MSG     USEMF           @E@@@@          E$FD1     USERID             . ERN
)@@G@@DIT*USERID        @C@@@@          E$MSGR                       .        RO
)@@G@@@C@@@@          E$DECV    A5                .         @^@@@@          E$RP
)@@G@@DITX        @A@@@@          L         A0,(4,FIMBUF)   @^@@@@          ERRQ
)@@G@@        CSF$@^@@@@          FIELDATA  .   @E@@@@          TNOASG    'MF$RR
)@@G@@$        '     . ASSIGNED           @^@@@@          ASCII     .   @E@@@@RS
)@@G@@          J         FNDML              . YES-THERES MAIL    @E@@@@      RT
)@@G@@    L         A0,(2,ASGAMF)      . TRY TO ASSIGN IT   @C@@@@          ERRU
)@@G@@        CSF$               .        @E@@@@          JN        A0,0,X10  RV
)@@G@@         . NO FILE,NO MAIL    @G@@@@FNDML     L,U       A0,TREADML      RW
)@@G@@   . ASK IF HE WANTS MAIL           @E@@@@          JNZ       A5,NEMOR  RX
)@@G@@       . DON'T ASK AFTER FIRST@C@@@@          TNZ       DEMAND        . RY
)@@G@@DEMAND?     @G@@@@          J         NEMOR             . NAW JUST GIVE RZ
)@@G@@IT TO HIM         @C@@@@          ER        ATREAD$             .       SA
)@@G@@@I@@@@          LXI,U     A0,0              . CLEAR OUT UPPER A0        SB
)@@G@@      817TM221    @E@@@@          JZ        A0,0,X10           . CR-IGNOSC
)@@G@@RE          @E@@@@          L,Q1      A1,EDIT14          . GET FIRST CHASD
)@@G@@R     @E@@@@          TNE,U     A1,0131           . UPPER CASE 'Y'?     SE
)@@G@@@C@@@@          J         NEMOR             . YES     @E@@@@          TESF
)@@G@@,U      A1,0171           . LOWER CASE 'Y'?     @C@@@@          J       SG
)@@G@@  SAVINGQ           . NO      @E@@@@NEMOR     L,U       R2,10           SH
)@@G@@   . MAX 11 LINES       @E@@@@RENXTM    L,U       A0,REDMF           . RSI
)@@G@@EAD FROM MAIL FILE@A@@@@          ER        AREADA$         @E@@@@      SJ
)@@G@@    LSSL      A0,18              . WORD COUNT         @G@@@@          A SK
)@@G@@        A0,(0100,EDIT14)   . 1 SPACE FROM EDIT 14           @E@@@@      SL
)@@G@@    ER        APRINT$             . PRINT IT          @E@@@@          TNSM
)@@G@@Z       BRKSET             . WAS BREAK KEY HIT? @C@@@@          JGD     SN
)@@G@@  R2,RENXTM          . LOOP   @E@@@@ENDMF     L         A0,(2,BRKMF)    SO
)@@G@@  . BREAKPOINT FILE     @C@@@@          ER        CSF$              .   SP
)@@G@@      @E@@@@          L         A0,(2,FREDMF)      . DELETE FILE        SQ
)@@G@@@C@@@@          ER        CSF$               .        @C@@@@          A,SR
)@@G@@U       A5,1              .         @E@@@@          J         RCMML     SS
)@@G@@        . LOOK FOR ANOTHER    @E@@@@SAVINGQ   S         A0,LLSTCD       ST
)@@G@@  . SAVE WORD COUNT     @E@@@@SCLOOP    JGD       A0,MVE14         . MOVSU
)@@G@@E FROM E14        @C@@@@          SNZ       RLSTCD            . SET FLAGSV
)@@G@@@C@@@@          J         0,X10             . RETURN  @C@@@@MVE14     L SW
)@@G@@        A1,EDIT14,A0      . GET WORD@E@@@@          S         A1,ILSTCD,SX
)@@G@@A0       . STORE IT           @C@@@@          J         SCLOOP          SY
)@@G@@  .         @C@@@@. ROUTINE TO SET REPEAT COUNTER FOR I COMMAND   @]@@@@SZ
)@@G@@.           @C@@@@RPSET   LMJ    X10,GET     . GET COUNT          @A@@@@TA
)@@G@@        LMJ    X10,BIN     . CONVERT@A@@@@        S      A10,RPTK    . STB
)@@G@@ET IT.@C@@@@        J      NXRQ        . TO NEXT COMMAND    @C@@@@. ROUTTC
)@@G@@INE TO SET TYPE - ELT, ASM, ETC.          @]@@@@.           @]@@@@SETTP TD
)@@G@@  .   @E@@@@       LMJ     X10,GET             . GET NEXT FIELD         TE
)@@G@@@E@@@@       L       A2,(1,0)            . LOAD POINTER           @E@@@@TF
)@@G@@       TNE     A1,ELT,*A2         . COMP WITH TABLE.        @C@@@@      TG
)@@G@@ J       SETTP2              . FIND       @E@@@@          TLE       A2,(TH
)@@G@@1,ELTLEN)      . END OF TABLE?      @C@@@@       J       $-3            TI
)@@G@@     . NEXT ENTRY @E@@@@          AND,U     A1,07070          . GET FIELTJ
)@@G@@D BITS      @G@@@@          TE,U      A2,06060          . 06X6X OR 06X ATK
)@@G@@CCEPTABLE         @G@@@@          TNE,U     A2,060            . 06X6X ORTL
)@@G@@ 06X ACCEPTABLE         @C@@@@          J         OCTYP             . OKTM
)@@G@@      @E@@@@          TYP       E20,L20            . NO FIND ON TYPE    TN
)@@G@@@C@@@@          J         NXRQ              .         @G@@@@OCTYP     ANTO
)@@G@@D,U     A1,0707           . GET SIGNIFICANCE BITS           @E@@@@      TP
)@@G@@    DSL       A2,3              . SAVE LOWER          @E@@@@          SSTQ
)@@G@@L       A2,3              . SHIFT OFF ZERO      @E@@@@          LDSL    TR
)@@G@@  A2,3              . BRING EM TOGETHER   @E@@@@SETTP2 S,S1    A2,OUTBL+TS
)@@G@@9           . SUB FIELD FOR SYMB.   @G@@@@          S,S1      A2,INTBL+9TT
)@@G@@         . PUT IN INPUT TABLE ALSO        @C@@@@       J       NXRQ     TU
)@@G@@           . GO ON.     @]@@@@.           @E@@@@. ROUTINE TO SET PRINT LTV
)@@G@@IMIT. THE FIRST N COLUMNS WILL BE   @G@@@@. PRINTED IF THE COMMAND PL N TW
)@@G@@IS USED. PL 0 RESETS TO FULL LINE.        @^@@@@. MAX N IS 132.         TX
)@@G@@@E@@@@. IF PL N1 N2 IS USED, COLUMNS N1 THRU N2 WILL BE PRINTED.  @]@@@@TY
)@@G@@.           @C@@@@PRLIM  LMJ     X10,GET             . GET COUNT. @C@@@@TZ
)@@G@@       LMJ     X10,BIN0            . CONVERT IT.@G@@@@          LUF     UA
)@@G@@  A0,A10            . GET COUNT + ADJUST FOR DIVIDE   @C@@@@       TNZ  UB
)@@G@@   A1                  . IS IT 0?   @E@@@@          J         COLERR+2  UC
)@@G@@        . SET STANDARD LIMITS @C@@@@       DI,U    A0,4                .UD
)@@G@@ GET WORDS  @E@@@@          TZ        A1                 . TEST FOR REMAUE
)@@G@@INDER @C@@@@       A,U     A0,1                . ROUND UP.  @E@@@@      UF
)@@G@@ TG,U    A0,33               . IS A0 TOO BIG?         @G@@@@       L,U  UG
)@@G@@   A0,PLIMSTD          . RESET TO STANDARD (VARIABLE).      @E@@@@      UH
)@@G@@    S         A0,PTL1           .  SET FIRST LIMIT    @G@@@@          TGUI
)@@G@@,U      A10,132           . GREATER THAN MAX 132?           @E@@@@      UJ
)@@G@@    L,U       A10,132           . YES, LOAD MAX       @E@@@@          S UK
)@@G@@        A10,CPTL1         . STORE COL LIM 1     @E@@@@          LMJ     UL
)@@G@@  X10,GET           . GET SECOND LIMIT    @E@@@@          TZ        A1  UM
)@@G@@              . WAS THERE ONE?      @C@@@@          J         LIM2      UN
)@@G@@        . YES     @E@@@@          L         A0,PTL1           . NO, LOADUO
)@@G@@ THE LIMIT  @G@@@@          S         A0,PTL2           . STORE AS THE SUP
)@@G@@ECOND LIMIT       @E@@@@          SNZ       PTL1              . STANDARDUQ
)@@G@@ FIRST LIMIT@E@@@@          L         A0,CPTL1          . LOAD THE COL LUR
)@@G@@IM    @G@@@@          S         A0,CPTL2          . STORE AS THE SECOND US
)@@G@@COL LIM     @G@@@@          SNZ       CPTL1             . STANDARD FIRSTUT
)@@G@@ COL LIM          @C@@@@          J         NXRQ              . CONTINUEUU
)@@G@@@E@@@@LIM2      LMJ       X10,BIN0          . CONVERT SECOND LIMIT@E@@@@UV
)@@G@@          SZ        A0                . SET FOR DIVIDE      @C@@@@      UW
)@@G@@    L         A1,A10            .         @E@@@@          DI,U      A0,4UX
)@@G@@              . GET NUMBER OF WORDS @E@@@@          TZ        A1        UY
)@@G@@        . REMAINDER?          @E@@@@          A,U       A0,1            UZ
)@@G@@  . YES, ROUND UP       @E@@@@          TLE       A0,PTL1           . SEVA
)@@G@@COND LIMIT BIGGER?@G@@@@          J         COLERR            . NO, FIRSVB
)@@G@@T IS BIGGER - ERROR     @E@@@@          TG,U      A0,33             . GRVC
)@@G@@EATER THAN MAX?   @E@@@@          L,U       A0,PLIMSTD        . YES, LOAVD
)@@G@@D MAX       @E@@@@          S         A0,PTL2           . STORE SECOND LVE
)@@G@@IMIT  @E@@@@          TG,U      A10,132           . GREATER THAN MAX?   VF
)@@G@@@E@@@@          L,U       A10,132           . YES, LOAD MAX       @E@@@@VG
)@@G@@          S         A10,CPTL2         . STORE COL LIM 2     @C@@@@      VH
)@@G@@    J         NXRQ              . CONTINUE@E@@@@COLERR    TYP       E211VI
)@@G@@,L211         . TYPE ERROR MESSAGE  @E@@@@          SNZ       PTL1      VJ
)@@G@@        . STANDARD FIRST LIMIT@G@@@@          L,U       A0,PLIMSTD      VK
)@@G@@  . STANDARD SECOND LIMIT           @C@@@@          S         A0,PTL2   VL
)@@G@@        .         @E@@@@          SNZ       CPTL1             . STANDARDVM
)@@G@@ COL LIM 1  @E@@@@          L,U       A0,132            . STANDARD COL LVN
)@@G@@IM 2  @C@@@@          S         A0,CPTL2          . STORE IT@C@@@@      VO
)@@G@@    J         NXRQ              . CONTINUE@A@@@@ . SET TRANSPARENT CHAR VP
)@@G@@FOR FIND    @E@@@@SETTCF LMJ     X10,GET3             . GET NEW CHAR.   VQ
)@@G@@      @E@@@@          LMJ       X11,FIXCHR        . SEE IF @ OR BLANK   VR
)@@G@@@C@@@@       TNE,U   A1,'BL'             . BLANK?     @C@@@@       L,U  VS
)@@G@@   A1,' '              . SET BLANK. @C@@@@       S       A1,TRCHF       VT
)@@G@@     . SET IT.    @C@@@@       J       NXRQ                . NEXT.      VU
)@@G@@@^@@@@ . SET CONTINUATION CHAR@E@@@@CCHAR1    LMJ       X10,GET3        VV
)@@G@@   . GET CHAR           @E@@@@          LMJ       X11,FIXCHR        . SEVW
)@@G@@E IF @ OR BLANK   @C@@@@          S         A1,CONTCHAR       . SET CHARVX
)@@G@@@E@@@@          J         NXRQ              . NEXT COMMAND        @]@@@@VY
)@@G@@ .          @^@@@@ . SET U OPTION         @E@@@@UPOPS     L         A0,BVZ
)@@G@@ITS('Z'-'U')      . SET U FLAG      @G@@@@           OR        A0,OPTN  WA
)@@G@@         .  OR  IN PRESENT OPTIONS        @C@@@@          S         A1,OWB
)@@G@@PTN           .         @E@@@@          TZ        DOPTI             . INWC
)@@G@@PUT DATA?         @E@@@@          SNZ       DOPTO             . SO MAKE WD
)@@G@@OUT DATA TOO@E@@@@          TOPTN     'R'               . R OPTION ON?  WE
)@@G@@      @C@@@@       J       NXRQ                . NEXT       @E@@@@      WF
)@@G@@    XOR       A1,BITS('Z'-'R')  . CLEAR R OPTION      @C@@@@          S WG
)@@G@@        A2,OPTN           .         @C@@@@          J         NXRQ      WH
)@@G@@        .         @]@@@@ .          @]@@@@ . @/       @E@@@@          . WI
)@@G@@THIS ROUTINE INPUTS LINES FROM EDIT STREAM      @G@@@@          .       WJ
)@@G@@  POINTER  IS LEFT AT THE LAST LINE INSERTED          @G@@@@INPUT1    LAWK
)@@G@@        A0,EDCT            . IS LINE-TO-BE-INSERTED IN THE  @I@@@@      WL
)@@G@@    TNG       A0,COUNT           . COMMAND-LINE OR IN THE LINES AFTER ITWM
)@@G@@?     @C@@@@          J         RETYP2       . IMAGE IN LINE@E@@@@      WN
)@@G@@    L         A1,DELIM          . GET DELIMITER       @C@@@@          TNWO
)@@G@@E,U     A1,'+'            . IS IT + @E@@@@          J         RETYP2    WP
)@@G@@        . ALSO TO INSET AFTER @E@@@@          TNZ        EOFMOD         WQ
)@@G@@   . EOF MODE?          @G@@@@          J         INPUT2            . IFWR
)@@G@@ NOT, ENTER INPUT MODE        @G@@@@          SNZ       BLKLINE        .WS
)@@G@@ BLANK LINE TO BE INSERTED          @E@@@@          J         RETYP2    WT
)@@G@@        . GO INSERT IT        @E@@@@INPUT2    SNZ       INPUTF         .WU
)@@G@@ SET INPUT MODE         @E@@@@          TZ        BRIEF2                WV
)@@G@@   . BRIEF PRINT? @A@@@@          J         INPUT3          @E@@@@      WW
)@@G@@    TYP       INPUT,2           . TYPE OUT MESSAGE    @]@@@@INPUT3    . WX
)@@G@@@I@@@@          ON        INSTAT             . STATISTICS               WY
)@@G@@      817TM223    @I@@@@          L,H1      A0,STATBUF+5       . INCR TRWZ
)@@G@@ANSACTION COUNT         817TM224    @I@@@@          A,U       A0,1      XA
)@@G@@         .                                817TM225    @I@@@@          S,XB
)@@G@@H1      A0,STATBUF+5        .                               817TM226    XC
)@@G@@@I@@@@          OFF       INSTAT                                        XD
)@@G@@      817TM227    @A@@@@          LMJ       X10,TYPEIN      @C@@@@      XE
)@@G@@    TZ        EOFMOD           . EOF MODE?@E@@@@          J         DONCXF
)@@G@@HG            . DONT EVER CHANGE    @E@@@@          TNZ       COUNT     XG
)@@G@@        . CHANGE MODES?       @C@@@@          J         EDIT1           XH
)@@G@@  . YES     @A@@@@DONCHG    LMJ       X10,WRB         @E@@@@          SZXI
)@@G@@        WINHIB            . CLEAR WRITE INHIBIT @C@@@@          AA,U    XJ
)@@G@@  LCT,1     . INCR LINE COUNT @E@@@@          SNA       RC,AC1          XK
)@@G@@  . IMAGE ADDED BY ED   @C@@@@          LA        A0,(1,1)           .  XL
)@@G@@      @E@@@@          SZ        A1                . INITIALIZE A1       XM
)@@G@@@E@@@@          L         A5,EDIT80-1,A0     . GET COLUMN 1 CHAR  @C@@@@XN
)@@G@@          L,U       A6,'@'             .        @E@@@@          TNE     XO
)@@G@@  A5,MSPCHR          . MASTERSPACE CHAR?  @G@@@@          S         A6,EXP
)@@G@@DIT80-1,A0     . STORE MASTERSPACE IN LINE      @E@@@@          TZ      XQ
)@@G@@  COUNT              . BLANK LINE?        @C@@@@          J         FILLXR
)@@G@@IN             . NOPE   @E@@@@          L         A5,BLANK2          . GXS
)@@G@@ET A BLANK        @E@@@@          J         INSBLK             . GO STICXT
)@@G@@K IT IN     @E@@@@FILLIN    LA        A5,EDIT80-1,A0     . GET EDIT CHARXU
)@@G@@ACTER @E@@@@          TNE       A5,THETAB          . IS IT A TAB?       XV
)@@G@@@A@@@@          LMJ       X10,ADJUST      @A@@@@INSBLK    SA        A5,IXW
)@@G@@MAG80,A1    @E@@@@          A,U       A1,1               . INCREMENT    XX
)@@G@@      @E@@@@          TG        A1,SAVECL        . LINE LIMIT MAX?      XY
)@@G@@@A@@@@          J         INPUT4          @I@@@@          TLEM      A0,CXZ
)@@G@@OUNT           . HAVE ALL EDIT CHARACTERS BEEN SEEN?        @C@@@@      YA
)@@G@@    J         FILLIN             . NO     @]@@@@INPUT4    . @A@@@@      YB
)@@G@@    S         A1,LENGTH       @A@@@@          LMJ       X10,PACK        YC
)@@G@@@G@@@@          J         INPUT3             . YES, GO GET NEXT LINE    YD
)@@G@@      @G@@@@ADJUST    LA        A2,TAB80,A1        . LOAD MODIFIER FOR CYE
)@@G@@ORRECT TAB  @A@@@@          LA,U      A5,040          @E@@@@ADJUSB    SAYF
)@@G@@        A5,IMAG80,A1      . STORE BLANK         @C@@@@          A,U     YG
)@@G@@  A1,1              . INCR A1 @E@@@@          TG        A1,SAVECL       YH
)@@G@@   . LINE LIMIT MAX?    @C@@@@          J         2,X10              . YYI
)@@G@@ES    @G@@@@          TLE       A1,A2              . IS TAB COUNT SATISFYJ
)@@G@@IED ?       @G@@@@          J         ADJUSB             . NO,STORE ANOTYK
)@@G@@HER BLANK         @A@@@@          J         2,X10           @]@@@@ . @/ YL
)@@G@@      @A@@@@ . FIND, FIND AND COUNT COMMANDS    @E@@@@FC1       S       YM
)@@G@@  A1,LCFLG        . SET FIND AND COUNT    @G@@@@          SNZ       LNPRYN
)@@G@@T             . SET LINE NUMBER PRINT           @C@@@@          J       YO
)@@G@@  $+2             . ENTER     @E@@@@FIND1       SZ         LCFLG       .YP
)@@G@@ ZERO COUNT FLAG        @I@@@@          LA        A0,COUNT           . TYQ
)@@G@@EST TO SEE IF PREVIOUS COMMAND'S          @I@@@@          TNE       A0,EYR
)@@G@@DCT            . STRING SHOULD BE USED- SKIP IF NOT         @A@@@@      YS
)@@G@@    LA        A0,OCOUNT       @A@@@@          SA        A0,OCOUNT       YT
)@@G@@@^@@@@          TNZ       OK  @A@@@@          LMJ       X3,TOPS         YU
)@@G@@@]@@@@FIND2     . @A@@@@          LMJ       X10,WRB         @A@@@@      YV
)@@G@@    LMJ       X10,READ        @^@@@@          J         EOF @E@@@@      YW
)@@G@@    TZ        BRKSET            . SET BREAK KEY?      @C@@@@          J YX
)@@G@@        NXRQ              . YES     @A@@@@          LA        A2,(1,2)  YY
)@@G@@      @A@@@@          AA        A2,EDCT         @A@@@@          LA      YZ
)@@G@@  A3,(1,0)        @A@@@@COMP      LA        A5,EDIT80-1,A2  @A@@@@      ZA
)@@G@@    TNE       A5,IMAG80,*A3   @A@@@@          J         MATCH1          ZB
)@@G@@@E@@@@          TE        A5,TRCHF        . TEST TRANS CHAR.      @A@@@@ZC
)@@G@@          J         FIND2           @A@@@@MATCH1    TLEM      A2,OCOUNT ZD
)@@G@@      @^@@@@          J         COMP@E@@@@          TNZ       LCFLG     ZE
)@@G@@   . IS THIS FC ENTRY?        @C@@@@          J         MATCH2       . NZF
)@@G@@O.          @E@@@@          TZ        BRIEF2            . BRIEF MODE?   ZG
)@@G@@      @C@@@@          LMJ       X10,CLIN     . GET LINE NO. @A@@@@MATCH2ZH
)@@G@@     TNZ       BRIEF2         @A@@@@          LMJ       X10,TYPOUT      ZI
)@@G@@@C@@@@          TZ        LCFLG        . IS IT FC?    @E@@@@          J ZJ
)@@G@@        FIND2        . YES, LOOK FOR MORE       @^@@@@          J       ZK
)@@G@@  NXRQ@]@@@@ . @/       @A@@@@ . LOCATE, LOCATE AND COUNT COMMANDS@E@@@@ZL
)@@G@@LC1       S       A1,LCFLG        . SET LC ENTRY FLAG       @G@@@@      ZM
)@@G@@    SNZ       LNPRT          . PINT NUMBER ON SAME LINE           @]@@@@ZN
)@@G@@  .         @C@@@@          J       $+2             . ENTER       @I@@@@ZO
)@@G@@          .         THIS               ROUTINE LOCATES A LINE CONTAININGZP
)@@G@@ A          @E@@@@          .         GIVEN              CHARACTER STRINZQ
)@@G@@G     @C@@@@LOC1      SZ      LCFLG      . SET 'L' ENTRY    @G@@@@      ZR
)@@G@@    SZ        QSTRING            . CLEAR QUOTE TYPE INDICATOR     @I@@@@ZS
)@@G@@          LA        A0,COUNT           . TEST TO SEE IF PREVIOUS COMMANDZT
)@@G@@'S          @I@@@@          TNE       A0,EDCT            . STRING SHOULDZU
)@@G@@ BE USED- SKIP IF NOT         @A@@@@          LA        A0,OCOUNT       ZV
)@@G@@@A@@@@          SA        A0,OCOUNT       @^@@@@          TNZ       OK  ZW
)@@G@@@A@@@@          LMJ       X3,TOPS         @A@@@@          LA,U      A10,ZX
)@@G@@' '         @E@@@@          L         A2,EDCT            . SAVE CHAR POSZY
)@@G@@      @G@@@@          L         A6,LOCHR           . INITIALIZE WITH QUOZZ
)@@G@@TE CHAR     @E@@@@LOC11     TG        A2,COUNT           . COUNT EXCEEDEAA
)@@G@@D?    @E@@@@          J         LOC2               . CAN'T BE QUOTE TYPEAB
)@@G@@@E@@@@          A,U       A2,1               . INCR POINTER       @E@@@@AC
)@@G@@          TNE       A10,EDIT80-1,A2    . IS CHAR BLANK?     @G@@@@      AD
)@@G@@    J         LOC11              . YES, GET THE NEXT ONE          @E@@@@AE
)@@G@@          TE        A6,EDIT80-1,A2     . IS IT A QUOTE?     @G@@@@      AF
)@@G@@    J         LOC2               . NO - MUST BE NORMAL LOCATE     @E@@@@AG
)@@G@@          S         A10,EDIT80-1,A2    . CHANGE TO BLANK    @I@@@@      AH
)@@G@@    AN,U      A2,1               . ADJUST TO LOOK AT NEXT CHAR AFTER QUOAI
)@@G@@TE    @C@@@@          S         A2,EDCT            .        @G@@@@      AJ
)@@G@@    SNZ       QSTRING         . SET QUOTE STRIN INDICATOR         @]@@@@AK
)@@G@@LOC2      . @A@@@@          LMJ       X10,WRB         @A@@@@          LMAL
)@@G@@J       X10,READ        @^@@@@          J         EOF @E@@@@          TZAM
)@@G@@        BRKSET             . WAS BREAK KEY HIT? @G@@@@          J       AN
)@@G@@  NXRQ               . YES, GET NEXT COMMAND          @G@@@@          L AO
)@@G@@        A0,LENGTH          . GET LENGTH OF IMAGE READ       @I@@@@      AP
)@@G@@    L,U       A2,3              . 6 TRAILING BLANKS               817TM2AQ
)@@G@@30    @I@@@@          L,U       A1,' '            .                     AR
)@@G@@            817TM231    @I@@@@          LXI,U     A0,1              .   AS
)@@G@@                              817TM232    @I@@@@          S         A1,IAT
)@@G@@MAG80,*A0     .                                 817TM233    @I@@@@      AU
)@@G@@    JGD       A2,$-1            . LOOP                            817TM2AV
)@@G@@34    @I@@@@          LXI,U     A0,0              . CLEAR INCR          AW
)@@G@@            817TM235    @G@@@@          A         A0,EDCT            . AAX
)@@G@@DD COMMAND PART OF LOCATE     @G@@@@          ANA       A0,OCOUNT   . SUAY
)@@G@@BTRACT TOTAL LOCATE LENGTH          @C@@@@          AA,U      A0,1      AZ
)@@G@@. ADJUST FOR TEST @E@@@@          TZ        QSTRING            . QUOTE SBA
)@@G@@TRING?      @I@@@@          A,U       A0,2               . ADJUST ONE MOBB
)@@G@@RE BECAUSE OF TRAILING '      @C@@@@          JN        A0,LOC2   . LINEBC
)@@G@@ TOO SHORT  @C@@@@          SA        A0,LIMIT  . SET LIMIT       @A@@@@BD
)@@G@@          LA        A1,(1,0)        @]@@@@LOC3.       @A@@@@          LABE
)@@G@@        A2,(1,2)        @A@@@@          AA        A2,EDCT         @A@@@@BF
)@@G@@          LA        A3,A1           @A@@@@COMPAR    LA        A5,EDIT80-BG
)@@G@@1,A2  @G@@@@          TG        A3,(1,132)         . AT THE END OF THE IBH
)@@G@@MAGE        @E@@@@          J         LOC2              . GO GET ANOTHERBI
)@@G@@ LINE @A@@@@          TNE       A5,IMAG80,*A3   @A@@@@          J       BJ
)@@G@@  MATCH           @E@@@@          TZ        QSTRING            . QUOTE TBK
)@@G@@YPE?        @C@@@@          J         INQOTE             . YES    @C@@@@BL
)@@G@@LIMTST    TLEM      A1,LIMIT       . TEST HERE  @C@@@@          J       BM
)@@G@@  $+2            . CONTINUE   @E@@@@          J         LOC2          . BN
)@@G@@TIME FOR NEXT           @E@@@@          TZ        QSTRING            . IBO
)@@G@@N QUOTE?          @E@@@@          J         LOC3               . YES, NOBP
)@@G@@ LUCK       @A@@@@          TNE       A10,IMAG80-1,A3 @E@@@@          TEBQ
)@@G@@        A10,IMAG80-2,A3    . WAS LAST A BLANK   @C@@@@          J       BR
)@@G@@  LOC3      . FAILURE         @G@@@@          AN,U      A1,1            BS
)@@G@@   . DIDN'T WANT TO INCREMENT       @G@@@@          J         COMPAR+1  BT
)@@G@@         . OK COMPARE SOME MORE           @E@@@@INQOTE    TE        A6,EBU
)@@G@@DIT80-1,A2     . QUOTE IN LOCATE?   @E@@@@          J         LIMTST    BV
)@@G@@           . NO MISMATCH      @E@@@@          J         FOUND           BW
)@@G@@   . YES, FOUND A MATCH @A@@@@MATCH     TLEM      A2,OCOUNT       @A@@@@BX
)@@G@@          J         COMPAR          @E@@@@FOUND     TNZ       LCFLG     BY
)@@G@@   . IS IT LC ENTRY?          @C@@@@          J         FOUND1       . NBZ
)@@G@@O.          @E@@@@          TZ        BRIEF2            . BRIEF MODE?   CA
)@@G@@      @I@@@@          LMJ       X10,CLIN     . BRIEF MODE OR NOT LINE NUCB
)@@G@@M MODE- GET NUM         @E@@@@FOUND1    TNZ       BRIEF2       . TEST OFCC
)@@G@@ BRIEF MODE       @A@@@@          LMJ       X10,TYPOUT      @E@@@@      CD
)@@G@@    TZ        LCFLG        . IS IT LC ENTRY?          @E@@@@          J CE
)@@G@@        LOC2         . YES, LOOK FOR MORE       @^@@@@          J       CF
)@@G@@  NXRQ@]@@@@ . @/       @G@@@@ . THIS ROUTINE CHANGES A GIVEN CHAR STRINCG
)@@G@@G INTO A SECOND GIVEN STRING  @G@@@@ . EITHER THROUGHOUT THE ENTIRE LINECH
)@@G@@ OR JUST THE FIRST OCCURANCE FOR    @E@@@@          .         ANY       CI
)@@G@@         GIVEN NO. OF LINES   @G@@@@CHANG1    SZ        STRFND          CJ
)@@G@@ . ZERO STRING FOUND INDICATOR      @C@@@@          L         X1,(1,0)  CK
)@@G@@       . STR PTR  @C@@@@          L         X2,(1,0)         . CHAR PTR CL
)@@G@@@A@@@@          AX        X2,EDCT         @G@@@@          LA        A0,ECM
)@@G@@DIT80,*X2      . STRINGS. THE B-WORD ARRAY STR  @E@@@@          TNE,U   CN
)@@G@@  A0,' '               . BLANK?           @G@@@@          TE        A0,ECO
)@@G@@DIT80,X2     . CONTAINS THE RELATIVE ADDRESS    @G@@@@          J       CP
)@@G@@  DEFINE             . OF THE 3 QUOTE CHARACTERS      @C@@@@          TLCQ
)@@G@@EM      X2,COUNT           .        @C@@@@          J         $-3       CR
)@@G@@         .        @E@@@@          L         A0,EDCT           . IF NO DECS
)@@G@@LIMITER THAN@E@@@@          S         A0,STR           . USE FIRST CHAR CT
)@@G@@      @G@@@@ILLSTR    A$EDIT     ETAB             . INCOMPLETE STRING MECU
)@@G@@SSAGE START @^@@@@          A$EMSG     E15@G@@@@          L         A0,SCV
)@@G@@TR           . PRINT STRING DELIMITER           @A@@@@          L       CW
)@@G@@  A0,EDIT80,A0    @A@@@@          LMJ       X11,AECHAR$     @^@@@@      CX
)@@G@@    A$EDITX       @E@@@@          TYP       IMBUF,17          . TYPE MESCY
)@@G@@SAGE        @C@@@@          J         NXRQ               . LEAVE  @G@@@@CZ
)@@G@@DEFINE    S        X2,STR,X1             . SAVE DELIM POINTER           DA
)@@G@@@E@@@@          SZ,H1        STR,X1          . ZERO LEFT HALF     @E@@@@DB
)@@G@@          TLEM,U    X1,2             . THREE DELIMS?        @E@@@@      DC
)@@G@@    J         $+2               . NOT ENOUGH DELIMS   @C@@@@          J DD
)@@G@@        DEFFND           . YES      @G@@@@          L         A0,EDIT80,DE
)@@G@@*X2         . GET DELIM AND INC X2        @E@@@@          TNE       A0,EDF
)@@G@@DIT80,X2     . COMPARE NEXT CHAR    @E@@@@          J         DEFINE    DG
)@@G@@       . ANOTHER DELIMITER    @E@@@@          TLEM      X2,COUNT        DH
)@@G@@ . CHAR COUNT EXCEEDED  @C@@@@          J         $-3              . NOPDI
)@@G@@E     @C@@@@          J         ILLSTR           . YES ERROR@]@@@@DEFFNDDJ
)@@G@@      @^@@@@          AX,U      X2,1@C@@@@          S         X2,EDCT   DK
)@@G@@         .        @G@@@@          SZ        GLOBAL             . DECIDE DL
)@@G@@FOR HOW MANY LINES      @E@@@@          SZ        HEADC              . CDM
)@@G@@LEAR HEAD FLAG    @^@@@@          SZ        A10 @C@@@@          LMJ     DN
)@@G@@  X10,GET            .        @A@@@@          JZ        A1,GFOUND+1     DO
)@@G@@@^@@@@          FIELDATA  .   @A@@@@          TNE,U     A1,'G'          DP
)@@G@@@C@@@@          J         GFOUND             .        @E@@@@          TEDQ
)@@G@@,U      A1,'A'            . CHANGE ALL?         @C@@@@          TNE,U   DR
)@@G@@  A1,'ALL'          .         @C@@@@          J         CHALL           DS
)@@G@@  . YES     @C@@@@          LMJ       X10,BIN            .        @E@@@@DT
)@@G@@RECHAL    S         A10,SSAVE          . RESET SCAN COUNT   @A@@@@      DU
)@@G@@    LMJ       X10,GET         @E@@@@          TNE,U     A1,'G'          DV
)@@G@@   . TEST FOR GLOBAL    @^@@@@          ASCII     .   @E@@@@GFOUND    SNDW
)@@G@@Z       GLOBAL          . SET GLOBAL FLAG       @G@@@@          LA      DX
)@@G@@  A0,STR             . TEST FOR REPLACING HEAD OF LINE@G@@@@          AADY
)@@G@@,U      A0,1               . IF SO 'G' HAS NO EFFECT        @C@@@@      DZ
)@@G@@    TG        A0,STR+1           .        @E@@@@          SNZ       HEADEA
)@@G@@C           . SET HEA?D FLAG        @I@@@@STARTS    TZ        LCT       EB
)@@G@@        . AT LINE 0?                      817TM238    @I@@@@          J EC
)@@G@@        NOTLNZ            . NOPE                            817TM239    ED
)@@G@@@E@@@@          JNZ       A10,ATLN0          . YES-GO TO 1        @I@@@@EE
)@@G@@          J         IBERR             . 1 LINE CHANGE AT LINE 0 ILLEGAL EF
)@@G@@817TM241    @I@@@@NOTLNZ    .                                           EG
)@@G@@                  817TM242    @G@@@@          TZ        HEADC           EH
)@@G@@   . CHANGE AT HEAD OF LINE         @C@@@@          J         HEAD      EI
)@@G@@         . YES    @G@@@@          LA        A0,LENGTH    . GET LENGTH OFEJ
)@@G@@ IMAGE READ IN          @I@@@@          L,U       A2,3              . 6 EK
)@@G@@TRAILING BLANKS               817TM245    @I@@@@          L,U       A1,'EL
)@@G@@ '            .                                 817TM246    @I@@@@      EM
)@@G@@    LXI,U     A0,1              .                                 817TM2EN
)@@G@@47    @I@@@@          S         A1,IMAG80,*A0     .                     EO
)@@G@@            817TM248    @I@@@@          JGD       A2,$-1            . LOEP
)@@G@@OP                            817TM249    @I@@@@          LXI,U     A0,0EQ
)@@G@@              . CLEAR INCR                      817TM250    @A@@@@      ER
)@@G@@    JZ        A0,NOCHAN       @A@@@@          TG        A0,SAVE2        ES
)@@G@@@C@@@@          LA        A0,SAVE2           .        @E@@@@          AAET
)@@G@@        A0,STR             . CALCULATE LIMIT    @C@@@@          ANA     EU
)@@G@@  A0,STR+1           .        @^@@@@          AA,U      A0,1@A@@@@      EV
)@@G@@    JN        A0,NOCHAN       @A@@@@          SA        A0,LIMIT        EW
)@@G@@@E@@@@          LA        A1,(1,0)           . IMAGE COUNTER      @E@@@@EX
)@@G@@          LA        A2,(1,0)           . CHANGE COUNTER     @G@@@@      EY
)@@G@@    LA        A3,(1,0)           . IMAGE INTO CHANGE COUNTER      @G@@@@EZ
)@@G@@          SZ        PRTEST             . ZERO IN PRTEST MEANS LINE IS NTFA
)@@G@@@C@@@@SLINE     LX        X1,(1,2)           .        @C@@@@          AXFB
)@@G@@        X1,STR             .        @C@@@@          LX        X2,A1     FC
)@@G@@         .        @C@@@@          LA        A5,EDIT80-1,X1     .        FD
)@@G@@@G@@@@          TE        A5,IMAG80,*X2      . ARE CHARACTERS EQUAL?    FE
)@@G@@      @C@@@@          J         RESTAR             . NO     @G@@@@      FF
)@@G@@    TLEM      X1,STR+1           . YES,IS ENTIRE STRING FOUND?    @C@@@@FG
)@@G@@          J         $-4                . NO     @I@@@@          J       FH
)@@G@@  SFOUND             . YES,GO REPLACE IT WITH NEW STRING          @]@@@@FI
)@@G@@RESTAR    . @A@@@@          TLEM      A1,LIMIT        @E@@@@          J FJ
)@@G@@        SLINE              . YES,CONTINUE SEARCH@G@@@@          TZ      FK
)@@G@@  PRTEST             . NON-ZERO MEANS LINE WAS CHANGED@A@@@@          J FL
)@@G@@        CHDONE          @]@@@@NOCHAN    . @C@@@@          JZ        A10,FM
)@@G@@EXNXRQ        . NO      @A@@@@          LMJ       X10,WRB         @^@@@@FN
)@@G@@          TZ        OK  @A@@@@          LMJ       X10,READ        @^@@@@FO
)@@G@@          J         EOFC@A@@@@          JGD       A10,STARTS      @C@@@@FP
)@@G@@SFOUND    SNZ       STRFND         . SET FLAG   @G@@@@          TNE     FQ
)@@G@@  A1,A2             .MOVE BEGINNING OF LINE TO        @E@@@@          J FR
)@@G@@        REPLAC             . ALTERNATE BUFFER   @C@@@@          LA      FS
)@@G@@  A5,IMAG80,*A2      .        @A@@@@          SA        A5,CHAN80,A3    FT
)@@G@@@A@@@@          TLEM      A3,SAVE21     . @A@@@@          J         SFOUFU
)@@G@@ND          @^@@@@          J         TT  @G@@@@HEAD      SNZ       STRFFV
)@@G@@ND          . STRING ALWAYS FOUND ON HEAD       @I@@@@          LX      FW
)@@G@@  A3,(1,0)           . ENTRY HERE TO REPLACE      OF LINE         @A@@@@FX
)@@G@@          LX        X2,(1,0)        @G@@@@REPLAC    LX        A0,STR+1  FY
)@@G@@         . CHECK TO SEE IF STRING IS      @E@@@@          AX,U      A0,1FZ
)@@G@@               . ALREADY REPLACED ? @C@@@@          TNE       A0,STR+2  GA
)@@G@@         .        @C@@@@          J         REDONE             . YES    GB
)@@G@@@I@@@@          LA        A5,EDIT80,A0       . NO,MOVE NEXT CHAR OF SECOGC
)@@G@@ND STRING         @A@@@@          SA        A5,CHAN80,A3    @A@@@@      GD
)@@G@@    TLEM      A3,SAVE21     . @C@@@@          J         REPLAC+1        GE
)@@G@@   .        @^@@@@          J         TT  @G@@@@REDONE    SNZ       PRTEGF
)@@G@@ST          . NON-ZERO MEANS LINE IS CHANGED    @C@@@@          LA      GG
)@@G@@  A0,X2              .        @C@@@@          LA        A1,X2           GH
)@@G@@   .        @C@@@@          ANA,U     A1,1               .        @C@@@@GI
)@@G@@          LA        A2,X2              .        @G@@@@          TZ      GJ
)@@G@@  GLOBAL             . IS REST OF LINE TO BE CHANGED ?@C@@@@          J GK
)@@G@@        RESTAR             .        @]@@@@CHDONE    . @A@@@@          LAGL
)@@G@@        A1,LENGTH       @^@@@@          ANA,U     A1,1@A@@@@          TGGM
)@@G@@        A1,SAVE21       @A@@@@          LA        A1,SAVE21       @A@@@@GN
)@@G@@          AA        A1,(1,0)        @C@@@@MOVE1     TLE       A1,A0     GO
)@@G@@         .        @C@@@@          J         TT                 .        GP
)@@G@@@C@@@@          LA        A5,IMAG80,*A0      .        @A@@@@          SAGQ
)@@G@@        A5,CHAN80,A3    @A@@@@          TLEM      A3,SAVE21     . @C@@@@GR
)@@G@@          J         MOVE1              .        @A@@@@TT        LA      GS
)@@G@@  A1,LENGTH       @G@@@@          TG        A1,SAVE21      .  CHANGED TOGT
)@@G@@ SAVE2-1   *****        @A@@@@          J         MOVE2-1         @A@@@@GU
)@@G@@          S         A3,LENGTH       @A@@@@          ANA       A3,(1,1)  GV
)@@G@@      @A@@@@          J         MOVE3           @A@@@@          LA,U    GW
)@@G@@  A5,040          @A@@@@MOVE2     SA        A5,CHAN80,A3    @A@@@@      GX
)@@G@@    TLEM      A3,SAVE21     . @A@@@@          J         MOVE2           GY
)@@G@@@A@@@@          LA        A3,SAVE21   .   @A@@@@MOVE3     LA        A5,CGZ
)@@G@@HAN80,A3    @A@@@@          SA        A5,IMAG80,A3    @A@@@@          JGHA
)@@G@@D       A3,MOVE3        @E@@@@          SNA       RC,DC1            . IMHB
)@@G@@AGE DELETED BY ED @A@@@@          LMJ       X10,WRB         @E@@@@      HC
)@@G@@    SNA       RC,AC1            . IMAGE ADDED BY ED   @E@@@@          L HD
)@@G@@        A0,LENGTH         . GET IMAGE LENGTH    @G@@@@          TG      HE
)@@G@@  A0,SAVECL         . MAX LINE LENGTH GREATER?        @E@@@@          L HF
)@@G@@        A0,SAVECL         . USE SAVECL          @C@@@@          S       HG
)@@G@@  A0,LENGTH         .         @A@@@@          LMJ       X10,PACK        HH
)@@G@@@A@@@@FF        TNZ       BRIEF2          @A@@@@          LMJ       X10,HI
)@@G@@TYPOUT      @A@@@@          JZ        A10,EXNXRQ      @A@@@@ATLN0     LMHJ
)@@G@@J       X10,WRB         @A@@@@          LMJ       X10,READ        @^@@@@HK
)@@G@@          J         EOFC@E@@@@          TZ        BRKSET             . WHL
)@@G@@AS BREAK KEY HIT? @C@@@@          J         EXNXRQ             . YES    HM
)@@G@@@A@@@@          JGD       A10,STARTS      @E@@@@EOFC      SZ        FASTHN
)@@G@@READ           . GET RID OF FASTREAD@E@@@@          SZ        MOVEF     HO
)@@G@@        . CLEAR FLAGS         @C@@@@          SZ        DGONXT          HP
)@@G@@  .         @E@@@@          SNZ       WINHIB         . WRITE INHIBIT    HQ
)@@G@@      @E@@@@          TNZ       GORET              . RETURN EXIT        HR
)@@G@@@C@@@@          J         NOGOJ              . NO     @E@@@@          SZHS
)@@G@@        GORET              . CLEAR FLAG         @C@@@@          J       HT
)@@G@@  0,X6               . YES    @E@@@@NOGOJ     TNZ       PUNCH           HU
)@@G@@   . PUNCH MODE?        @C@@@@          J         NOPUNW             . NHV
)@@G@@OPE   @E@@@@          L,U       A1,10000           . 3SECONDS           HW
)@@G@@@E@@@@          ER        TWAIT$             . WAIT 1 SECOND      @E@@@@HX
)@@G@@          SZ        PUNCH              . CLEAR PUNCH        @G@@@@NOPUNWHY
)@@G@@    AN        A10,SSAVE          . SUBTRACT OLD SCAN COUNT        @E@@@@HZ
)@@G@@          SM        A10,A10            . MAKE IT POSITIVE   @E@@@@      IA
)@@G@@    A$EDIT     ETAB               . START EDIT        @E@@@@          A$IB
)@@G@@EMSG     E11                . SCAN COUNT:...    @G@@@@          A$EDECV IC
)@@G@@   A10                . INSERT ACTUAL COUNT           @E@@@@          A$ID
)@@G@@EDITX                       . END EDIT          @G@@@@          TNZ     IE
)@@G@@  ONSITE            . NO SCAN COUNT ON ONSITE         @E@@@@          TYIF
)@@G@@P       IMBUF,6           . TYPE IT OUT         @E@@@@          SZ      IG
)@@G@@  PNTINQ            . CLEAR PRINT FLAG    @^@@@@          J         EOF IH
)@@G@@@E@@@@EXNXRQ    TZ        STRFND            . STRING FOUND?       @C@@@@II
)@@G@@          J         NXRQ              . YES     @E@@@@          TYP     IJ
)@@G@@  E17,L17           . NO, TELL HIM SO     @E@@@@          J          NXRIK
)@@G@@Q           . NOW GO BACK           @E@@@@CHALL     L,U       A10,077777IL
)@@G@@6       . BIG NUMBER          @E@@@@          SNZ       GLOBAL         .IM
)@@G@@ REALLY GET EM ALL      @E@@@@          J         RECHAL            . GOIN
)@@G@@ CHANGE EM ALL    @]@@@@ . @/       @E@@@@INLINE1   .         . PERFORM IO
)@@G@@INLINE MODIFICATION           @C@@@@  DO INSTAT ,     S,S5    R10,STATBUIP
)@@G@@F+6  .      @G@@@@          L,U       A10,'!'            . ! IS NORMAL TIQ
)@@G@@ERMINATION CHAR   @E@@@@          LMJ       X10,GET            . GET FIRIR
)@@G@@ST ARG      @G@@@@          JZ        A1,TERMSUB+1       . NO ARGS MEANSIS
)@@G@@ THIS LINE        @E@@@@INLINE2   LMJ       X10,BIN0           . CONVERTIT
)@@G@@ TO BINARY  @E@@@@          GOLINE    LINERR             . GO TO LINE   IU
)@@G@@      @E@@@@          TZ        BRKSET             . WAS BREAK KEY HIT? IV
)@@G@@@C@@@@          J         NXRQ               . EXIT   @E@@@@          L,IW
)@@G@@U       A10,'!'           . RESTORE EXCLAMATION @G@@@@          LMJ     IX
)@@G@@  X10,GET3            . SEE IF ONE SUPPLIED           @E@@@@          TZIY
)@@G@@        A1                 . IF SO, USE IT      @C@@@@TERMSUB   S       IZ
)@@G@@  A1,A10             .        @E@@@@          LMJ       X9,IMAGESAV     JA
)@@G@@   . SAVE IMAGE         @E@@@@          SNA       RC,DC1            . DEJB
)@@G@@LETE OLD IMAGE    @G@@@@          LMJ       X10,WRB           . WRITE OUJC
)@@G@@T DELETED IMAGE         @E@@@@          SNA       RC,AC1            . MAJD
)@@G@@RK NEW ONE ADDED  @G@@@@          L         A1,LENGTH              . MOVJE
)@@G@@E IMAGE FOR PRINTOUT    @E@@@@          L         A0,A1              . AJF
)@@G@@LSO TO A0         @C@@@@MVPLZZ    L         A2,IMAG80-1,A1     .        JG
)@@G@@@C@@@@          S         A2,IMAG80+1,A1     .        @E@@@@          TZJH
)@@G@@        UNIMOD            . UNISCOPE MODE?      @E@@@@          S       JI
)@@G@@  A2,IMAG80+2,A1    . UP ONE MORE         @G@@@@          JGD       A1,MJJ
)@@G@@VPLZZ          . MOVE OVER TO MAKE ROOM         @G@@@@          L,U     JK
)@@G@@  A2,'+'             . HEAD LINE WITH TWO PLUSES      @C@@@@          S JL
)@@G@@        A2,IMAG80+1        .        @C@@@@          S         A2,IMAG80 JM
)@@G@@         .        @E@@@@          TNZ       UNIMOD             UNISCOPE JN
)@@G@@MODE?       @C@@@@          J         NOTUNI            . NOPE    @E@@@@JO
)@@G@@          S         A2,IMAG80+2       . ANOTHER PLUS        @E@@@@      JP
)@@G@@    A,U       A0,1              . ADD ANOTHER TO A0   @E@@@@NOTUNI    A,JQ
)@@G@@U       A0,2               . ADJUST FOR PLUSES  @C@@@@          S       JR
)@@G@@  A0,LENGTH          .        @G@@@@          LMJ       X10,PACK+1      JS
)@@G@@     . PACK IMAG80 INTO IMAGE       @E@@@@          L         R6,ALLLN  JT
)@@G@@        . SAVE LINE NUMBERS   @E@@@@          L         R7,QUICKON      JU
)@@G@@  . AND QUICK FLAGS     @C@@@@          SZ        ALLLN             . CLJV
)@@G@@EAR   @C@@@@          SZ        QUICKON           .         @E@@@@      JW
)@@G@@    LMJ       X10,TYPOUT         . PRINT OUT IMAGE    @C@@@@          S JX
)@@G@@        R6,ALLLN          .         @C@@@@          S         R7,QUICKONJY
)@@G@@        .         @I@@@@          S         A10,DIT1          .         JZ
)@@G@@                        817TM253    @E@@@@          SNZ       ONNLINE   KA
)@@G@@      . SET TO SOLICIT WITH + @E@@@@          LMJ       X10,TYPEIN      KB
)@@G@@   . READ LINE          @E@@@@          SZ        ONNLINE            . CKC
)@@G@@LEAR FLAG         @I@@@@          L         A10,DIT1          .         KD
)@@G@@                        817TM255    @E@@@@          L,U       A0,IMAGE  KE
)@@G@@         . CHANGE EDIT$ BUFFER@C@@@@          S,H2      A0,ETAB         KF
)@@G@@   .        @I@@@@          L         A11,COUNT          . GET CHAR COUNKG
)@@G@@T OF INPUT EDIT STRING        @G@@@@          A         A11,(1,0)       KH
)@@G@@   . ADD IN INCR FOR TEST           @C@@@@          A$EDIT     ETAB     KI
)@@G@@          .       @E@@@@          L         X4,(1,0)           . EDIT80 KJ
)@@G@@POINTER     @E@@@@          L         X5,(1,0)           . IMAG80 POINTEKK
)@@G@@R     @E@@@@          TZ        UNIMOD            . UNISCOPE?           KL
)@@G@@@E@@@@          A,U       X5,1              . ANOTHER PLUS        @E@@@@KM
)@@G@@          L         X7,LENGTH          . INITIAL LENGTH     @E@@@@      KN
)@@G@@    AN,U      X7,2               . ADJUST FOR PLUSES  @E@@@@          TZKO
)@@G@@        UNIMOD            . UNISCOPE MODE?      @E@@@@          AN,U    KP
)@@G@@  X7,1              . ADJUST SOME MORE    @E@@@@          L         A13,KQ
)@@G@@(1,1)          . USED FOR TEST      @G@@@@SCANED    SZ        INREPF    KR
)@@G@@         . ZERO REPLACE INDICATOR         @G@@@@          SZ        INDEKS
)@@G@@LF             . ZERO DELETE INDICATOR          @E@@@@          L       KT
)@@G@@  A4,EDIT80,*X4      . GET EDIT CHAR      @E@@@@          TNG       A11,KU
)@@G@@X4             . END OF EDIT STRING?@E@@@@          J         INEND     KV
)@@G@@         . YES, EXIT          @G@@@@          TNE       A13,X4          KW
)@@G@@   . IS THIS THE FIRST EDIT CHAR?   @C@@@@          J         TESTEDC   KX
)@@G@@         . YES    @I@@@@          L         A0,IMAG80+2,*X5       . TRANKY
)@@G@@SFER CHAR FROM PRESENT SNG          @C@@@@          LMJ       X11,AECHARKZ
)@@G@@$         .       @I@@@@                                       . +2 IS TLA
)@@G@@O IGNORE ++ INSERTED FOR PRINTOU    @E@@@@TESTEDC   TNE,U     A4,' '    LB
)@@G@@         . BLANK EDIT CHAR?   @E@@@@          J         SCANED+2        LC
)@@G@@   . YES, CONTINUE SCAN @C@@@@          TNE,U     A4,'I'             . ILD
)@@G@@NSERT?@C@@@@          J         ININSE             . YES    @C@@@@      LE
)@@G@@    TNE,U     A4,'D'             . DELETE?@C@@@@          J         INDELF
)@@G@@LE             . YES    @E@@@@          TNE,U     A4,'R'             . RLG
)@@G@@EPLACE?           @C@@@@          J         INREPL             . YES    LH
)@@G@@@C@@@@          TNE,U     A4,0151           . INSERT? @C@@@@          J LI
)@@G@@        ININSE            . YES     @C@@@@          TNE,U     A4,0144   LJ
)@@G@@        . DELETE? @C@@@@          J         INDELE            . YES     LK
)@@G@@@C@@@@          TNE,U     A4,0162           . REPLACE?@C@@@@          J LL
)@@G@@        INREPL            . YES     @G@@@@          L,U       A5,E27    LM
)@@G@@         . INVALID EDIT CHAR ERROR        @E@@@@INERRX    LMJ       X9,ILN
)@@G@@MAGEREC        . RECOVER IMAGE      @^@@@@          A$EDITX    .  @G@@@@LO
)@@G@@          L,U       A0,IMBUF           . REPLACE EDIT$ BUFFER           LP
)@@G@@@C@@@@          S,H2      A0,ETAB            .        @E@@@@          A$LQ
)@@G@@EDIT     ETAB               . START EDIT        @E@@@@          L       LR
)@@G@@  A0,A5              . GET MESSAGE ADDRESS@E@@@@          LMJ       X11,LS
)@@G@@AEMSG$          . INSERT IT         @E@@@@          L         A0,A4     LT
)@@G@@         . GET OFFENSIVE CHAR @E@@@@          LMJ       X11,AECHAR$     LU
)@@G@@    . INSERT IT         @^@@@@          A$EDITX    .  @C@@@@          TYLV
)@@G@@P       IMBUF,8           . TYPE IT @E@@@@          J         RECTST    LW
)@@G@@         . NEXT COMMAND       @G@@@@TERMERR   L         A4,A10          LX
)@@G@@   . MISSING TERMINATION CHAR       @E@@@@          L,U       A5,E28    LY
)@@G@@         . MESSAGE E28        @E@@@@          J         INERRX          LZ
)@@G@@   . PRINT AND EXIT     @E@@@@INDELE    SNZ       INDELF          . SET MA
)@@G@@DELETE FLAG       @E@@@@          J         ININSE             . GO DO IMB
)@@G@@T           @E@@@@INREPL    SNZ       INREPF          . SET REPLACE FLAGMC
)@@G@@      @E@@@@ININSE    L         A4,EDIT80,*X4      . GET NEXT EDIT CHAR MD
)@@G@@@G@@@@          TNG       A11,X4              . HAVE LOOKED AT ALL EDIT ME
)@@G@@CHAR? @G@@@@          J         TERMERR            . YES,  MISSING TERMIMF
)@@G@@NATOR       @G@@@@          TNE       A4,A10             . IS THIS A TERMG
)@@G@@MINATOR           @G@@@@          J         SCANED             . YES GO MH
)@@G@@BACK FOR MORE EDIT STUFF@C@@@@          TZ        INDELF             . DMI
)@@G@@ELETE?@C@@@@          J         INDELE1            . YES    @G@@@@      MJ
)@@G@@    L         A0,A4              . GET CHAR FROM EDIT STREAM      @E@@@@MK
)@@G@@          LMJ       X11,AECHAR$         . INSERT IT         @E@@@@      ML
)@@G@@    TZ        INREPF             . REPLACE?           @C@@@@          J MM
)@@G@@        INDELE1            . YES    @G@@@@          A,U       X7,1      MN
)@@G@@         . NO - INSERT - ADD TO LENGTH    @E@@@@          J         ININMO
)@@G@@SE             . YES- NEXT CHAR     @G@@@@INDELE1   A,U       X5,1      MP
)@@G@@         . SPACE OVER IMAG80 CHARS        @E@@@@          J         ININMQ
)@@G@@SE             . GET NEXT EDIT CHAR @E@@@@INEND     SZ        A1        MR
)@@G@@         . CLEAR A1           @E@@@@          TZ        UNIMOD          MS
)@@G@@  . UNISCOPE MODE?      @E@@@@          A,U       X7,1              . ADMT
)@@G@@D 1 TO COUNT      @]@@@@INENDU    . @E@@@@          LXM       A1,X5     MU
)@@G@@         . GET X5 IN A REG    @I@@@@          A,U       A1,2            MV
)@@G@@  .                                 817TM258    @I@@@@          TG      MW
)@@G@@  A1,LENGTH         .                                 817TM259    @C@@@@MX
)@@G@@          J         INEND2             . YES    @E@@@@          L       MY
)@@G@@  A0,IMAG80+2,*X5        . TRANSFER       @C@@@@          LMJ       X11,MZ
)@@G@@AECHAR$         .       @E@@@@          J         INENDU               .NA
)@@G@@ NEXT CHAR        @I@@@@INEND2    .                                     NB
)@@G@@                        817TM261    @I@@@@          A$ECOLN    . GET LINNC
)@@G@@E LENGTH                                   817TM263   @E@@@@          TGND
)@@G@@        A0,SAVECL          . LINE LIMIT MAX?    @E@@@@          L       NE
)@@G@@  A0,SAVECL          . LOAD MAX           @I@@@@          DSL       A0,3NF
)@@G@@6             . SHIFT TO A1                     817TM265    @E@@@@      NG
)@@G@@    DI,U      A0,4               . WORD LENGTH WANTED @E@@@@          TZNH
)@@G@@        A1                 . REMAINDER ZERO?    @G@@@@          A,U     NI
)@@G@@  A0,1               . NO, ADD ONE TO WORD COUNT      @E@@@@          S NJ
)@@G@@        A0,IL               PUT IN IMAGE LENGTH @I@@@@          A$EDITX NK
)@@G@@   .                                                   817TM267   @I@@@@NL
)@@G@@          L,U       A0,IMBUF          . RESTORE IMBUF AS ETAB ADDRES    NM
)@@G@@817TM268    @I@@@@          S,H2      A0,ETAB          .                NN
)@@G@@                  817TM269    @E@@@@          LMJ       X10,TYPOUT      NO
)@@G@@   . TYPE IT OUT        @E@@@@          LMJ       X10,DECODE         . DNP
)@@G@@ECODE TO IMAG80   @E@@@@          J         NXRQ               . EOF IMPNQ
)@@G@@OSSIBLE     @E@@@@          AN,U      LCT,1             . ADJUST BACK   NR
)@@G@@      @E@@@@          J         NXRQ               . NEXT COMMAND       NS
)@@G@@@]@@@@ .          @]@@@@ . @/       @E@@@@ . THIS ROUTINE REPLACES THE PNT
)@@G@@OINTER LINE WITH THE EDIT LINE@E@@@@          . THE   POINTER LOCATIION NU
)@@G@@IS NOT CHANGED          @]@@@@RETYP1    . @G@@@@          TNZ       LCT NV
)@@G@@               . RETYPE ON LINE ZERO?           @E@@@@          J       NW
)@@G@@  IBERR              . IT'S A NO-NO       @E@@@@          SNA       RC,DNX
)@@G@@C1            . IMAGE DELETED BY ED @G@@@@          AN,U      LCT,1     NY
)@@G@@         . RETYPE DOESN'T INCREASE LCT    @]@@@@RETYP2    . @E@@@@      NZ
)@@G@@     L        A9,RPTK     . LOAD REPEAT COUNTER       @A@@@@          LMOA
)@@G@@J       X10,WRB         @C@@@@          AA,U      LCT,1     . INCR LINE OB
)@@G@@COUNT @E@@@@ALENT2    SNA       RC,AC1            . IMAGE ADDED BY ED   OC
)@@G@@@E@@@@          L         A1,DELIM           . GET DELIMITER      @E@@@@OD
)@@G@@          TE,U      A1,'+'             . IS IT + ?          @C@@@@      OE
)@@G@@    J         THISLINE           . NO     @E@@@@          SNZ       ONNLOF
)@@G@@INE         . SET FLAG FOR NEXT LINE@E@@@@          LMJ       X10,TYPEINOG
)@@G@@         . READ A FULL LINE   @E@@@@          SZ        ONNLINE         OH
)@@G@@   . CLEAR FLAG NOW     @E@@@@          SZ        BLKLINE            . ZOI
)@@G@@ERO BLANK LINE    @C@@@@          SNZ       EDCT            . COLUMN 1  OJ
)@@G@@@C@@@@          L         A0,(1,1)           .        @C@@@@          J OK
)@@G@@        THISLINE+2         . GO     @C@@@@THISLINE  LA        A0,(1,2)  OL
)@@G@@         .        @C@@@@          AA        A0,EDCT            .        OM
)@@G@@@E@@@@          SZ        A1                 . IMAG80 PTR         @E@@@@ON
)@@G@@          TNZ       BLKLINE            . BLANK LINE?        @C@@@@      OO
)@@G@@    J         $+3                . NO     @E@@@@          L         A5,BOP
)@@G@@LANK2          . LOAD A BLANK CHAR  @E@@@@          J         INSTYP    OQ
)@@G@@         . GO INSERT IT       @E@@@@LOAD      LA        A5,EDIT80-1,A0  OR
)@@G@@   . GET EDIT CHARACTER @E@@@@          TNE       A5,THETAB          . IOS
)@@G@@S IT A TAB?       @A@@@@          LMJ       X10,ADJUST      @E@@@@INSTYPOT
)@@G@@    S         A5,IMAG80,A1       . STORE CHAR IN IMAGE@E@@@@          A,OU
)@@G@@U       A1,1        . INCR A1 ANYHOW.           @E@@@@          TG      OV
)@@G@@  A1,SAVECL        . LINE LIMIT MAX?      @A@@@@          J         RETYOW
)@@G@@P3          @I@@@@          TLEM      A0,COUNT           . HAVE ALL EDITOX
)@@G@@ CHARACTERS BEEN SEEN?        @G@@@@          J         LOAD            OY
)@@G@@   . NO ,JUMP AND GET NEXT CHARACTER@]@@@@RETYP3    . @A@@@@          S OZ
)@@G@@        A1,LENGTH       @A@@@@          LMJ       X10,PACK        @I@@@@PA
)@@G@@          TNZ       BRKSET             . IF BREAK KEY WAS HIT, DON'T REPPB
)@@G@@EAT         @E@@@@         JGD        A9,RETYP2+1    . REPEAT ON COUNT. PC
)@@G@@      @E@@@@       TZ      IBFLG               . IS IT 'IB' COMMAND?    PD
)@@G@@@C@@@@       J       IBRET               . YES        @G@@@@          SZPE
)@@G@@        BLKLINE            . ZERO BLANK LINE INDICATOR      @^@@@@      PF
)@@G@@    J         NXRQ@C@@@@.      THIS IS 'IB' - INSERT BEFORE - CODE.     PG
)@@G@@@E@@@@IBIN      TNZ       LCT                . IS THIS LINE 0?    @E@@@@PH
)@@G@@          J         IBERR              . YES JUMP TO ERROR  @E@@@@      PI
)@@G@@    LMJ       X9,IMAGESAV        . SAVE IMAGE         @E@@@@          L PJ
)@@G@@        A9,RPTK            . SET REPEAT         @E@@@@          SNZ     PK
)@@G@@  IBFLG           . SET 'IB' FLAG         @E@@@@          J         ALENPL
)@@G@@T2             . TREAT LIKE RETYPE  @C@@@@IMAGESAV LA      A1,(1,IMAGE) PM
)@@G@@       . DO       @E@@@@       LA      A0,(1,IMSAV)        . COPY OF IMAPN
)@@G@@GE          @C@@@@       L       R1,IL              . TO IMSAV    @C@@@@PO
)@@G@@       BT      A0,0,*A1            . DO IT.     @G@@@@       L       A0,PP
)@@G@@ICW               . GET LENGTH OF EDIN REC.           @C@@@@       S    PQ
)@@G@@   A0,ILSAV            . SAVE IT.   @C@@@@          J         0,X9      PR
)@@G@@         . RETURN @G@@@@IBERR     TYP       E21,L21            . TYPE ILPS
)@@G@@LEGAL AT LINE 0         @G@@@@          J         NXRQ               . RPT
)@@G@@EAD ANOTHER COMMAND           @E@@@@IBRET  LMJ     X10,WRB             .PU
)@@G@@ WRITE OUT INSERT.      @E@@@@       AA,U    LCT,1               . INCR PV
)@@G@@LINE COUNT.       @E@@@@       SZ      IBFLG               . TURN OFF IBPW
)@@G@@FLG.        @E@@@@          LMJ       X9,IMAGEREC        . RECOVER IMAGEPX
)@@G@@      @E@@@@          J         NXRQ               . NEXT COMMAND       PY
)@@G@@@C@@@@IMAGEREC LA      A1,(1,IMSAV)        . RESTORE  @C@@@@       LA   PZ
)@@G@@   A0,(1,IMAGE)        . IMAGE      @G@@@@          L         A2,ILSAV  QA
)@@G@@        . GET IMAGE LENGTH IN R1          @C@@@@          SSL       A2,2QB
)@@G@@4             .         @C@@@@          L         R1,A2             .   QC
)@@G@@      @C@@@@       BT      A0,0,*A1            . DO IT.     @C@@@@      QD
)@@G@@ L       A0,ILSAV            . GET OLD    @C@@@@       S       A0,ICW   QE
)@@G@@            . SET.      @E@@@@       LMJ     X10,DECODE          . CONVEQF
)@@G@@RT INTO IMAG80.   @E@@@@       J       LINERR                . EOF - IMPQG
)@@G@@OSSIBLE     @E@@@@          AN,U      LCT,1             . ADJUST LINE COQH
)@@G@@UNT   @C@@@@       J       0,X9                . RETURN     @A@@@@/ . DIQI
)@@G@@TTO FUNCTION AND MOVE         @E@@@@MOVEF1    SNZ       MOVEF           QJ
)@@G@@  . SET MOVE COM FLAG   @E@@@@          J         $+2               . SKQK
)@@G@@IP FLAG CLEAR     @E@@@@DITTO1    SZ        MOVEF             . CLEAR MOQL
)@@G@@VE FLAG     @G@@@@          S         LCT,R8            . SAVE FOR MOVE QM
)@@G@@RECOVERY          @E@@@@          LMJ       X8,CHKEOF        . AT THE ENQN
)@@G@@D OF FILE   @E@@@@          SZ        DITFIL             . SET FILE COUNQO
)@@G@@T ZERO@C@@@@  DO INSTAT ,     S,S6    R10,STATBUF+6  .      @C@@@@      QP
)@@G@@    SNZ       DBUFCNT         . DBUFCNT=1 @E@@@@          SZ        DITFQQ
)@@G@@AST        . FASTRAND ADDRESS=0     @E@@@@          LMJ       X10,GET   QR
)@@G@@         . GET FIRST FIELD    @E@@@@          JZ        A1,NUMERR       QS
)@@G@@  . NO FIELDS?          @E@@@@          LMJ       X10,BIN0            . QT
)@@G@@CONV TO BINARY    @C@@@@          S         A10,DIT1           . SAVE   QU
)@@G@@@E@@@@          LMJ       X10,GET            . GET 2ND FIELD      @G@@@@QV
)@@G@@          JZ        A1,DITTO3          . 0= DITTO ONLY ONE LINE         QW
)@@G@@@C@@@@          LMJ       X10,BIN0            . CONV  @C@@@@          S QX
)@@G@@        A10,DIT2           . SAVE   @G@@@@          TLE       A10,DIT1  QY
)@@G@@         . FIRST FIELD >SECOND?           @C@@@@          J         LINEQZ
)@@G@@RR           . YES      @E@@@@DITANAL   L         A10,LCT             . RA
)@@G@@GET LINE COUNT    @C@@@@          S        A10,DITLN          . SAVE    RB
)@@G@@@E@@@@          L         A10,DIT1           . GET LINE TO GO TO  @G@@@@RC
)@@G@@          GOLINE    LINERR           . GO, ON EOF GO TO LINERR          RD
)@@G@@@G@@@@    L       A10,DIT2          . THIS IS THE LINE TO BE DITTOED    RE
)@@G@@      @E@@@@          AN          A10,DIT1          . FORM LENGTH       RF
)@@G@@@E@@@@          S         A10,DITLENTH      . SAVE LENGTH         @G@@@@RG
)@@G@@DITRD     LMJ        X10,WRDIT          . WRITE TO DITTO FILE           RH
)@@G@@@E@@@@          LMJ          X10,WRB          . WRITE TO EDIT FILE@E@@@@RI
)@@G@@          LMJ          X10,READ          . READ NEXT IMAGE  @E@@@@      RJ
)@@G@@    LMJ        X10,DITERR2          . EOF IS AN ERROR @E@@@@          JGRK
)@@G@@D          A10,DITRD          . READ 'EM ALL    @G@@@@          L       RL
)@@G@@  A10,DITLN           . GET LINE ORIGINALLY AT        @E@@@@          GORM
)@@G@@LINE    DITERR2            . GO TO IT           @E@@@@          TZ      RN
)@@G@@  BRKSET             . WAS BREAK KEY HIT? @G@@@@          J         NXRQRO
)@@G@@                  . YES, ESCAPE FROM DITTO HERE @G@@@@ . THIS SECTION ADRP
)@@G@@DS IN IMAGES FROM SAVE AREA AND FILE (IF NECESSARY)   @]@@@@ . FOR DITTORQ
)@@G@@@E@@@@          TNZ       DITFIL             . WAS FILE USED?     @E@@@@RR
)@@G@@          J         NOFIL              . NO FILE NEEDED     @I@@@@      RS
)@@G@@    LMJ       X9,TOOLONG         . FILE USED WRITE OUT PRESENT IMAGE ARERT
)@@G@@A     @G@@@@          SZ        DITFAST            . MOVE FASTRAND ADD TRU
)@@G@@O ZERO      @E@@@@READNXT   L,U       A0,DITPKT          . GET DITTO I-ORV
)@@G@@ PKT  @E@@@@          L,U       A1,R$              . READ CODE          RW
)@@G@@@C@@@@          S         A1,DITCODE         .        @E@@@@          ERRX
)@@G@@        IOW$               . READ FIRST SECTION @I@@@@          L,U     RY
)@@G@@  A0,DITSECL         . GET DITTO BUFFER LENGTH IN SECTORS         @G@@@@RZ
)@@G@@          A         A0,DITFAST         . ADD TO PRESENT FASTRAND ADDRESSSA
)@@G@@@C@@@@          S         A0,DITFAST         .REPLACE @E@@@@          DESB
)@@G@@CR      DITFIL             . DECREMENT DITFIL   @C@@@@NOFIL     L       SC
)@@G@@  X8,(1,1)           .        @G@@@@NEXTIM    LMJ       X10,WRB         SD
)@@G@@   . WRITE OUT CURRENT LINE         @G@@@@          A,U       LCT,1     SE
)@@G@@         . INCREMENT LINE COUNT           @C@@@@          L         A2,DSF
)@@G@@ITBUF,X8       . GET ICW@C@@@@          S         A2,ICW             .  SG
)@@G@@      @I@@@@          SNA       RC,AC1            . MARK IT ADDED       SH
)@@G@@            ED011650    @G@@@@          L,S2      R1,DITBUF,*X8      . GSI
)@@G@@ET WORD COUNT OF IMAGE        @G@@@@          L         A2,(1,IMAGE-DITBSJ
)@@G@@UF)       . GET DESTINATION         @E@@@@          BT        A2,DITBUF,SK
)@@G@@*X8           . TRANSFER IMAGE@E@@@@          TNZ       BRIEF2          SL
)@@G@@   . BRIEF MODE?        @E@@@@          LMJ       X10,TYPOUT         . TSM
)@@G@@YPE OUT LINE      @E@@@@          TZ        BRKSET             . WAS BRESN
)@@G@@AK KEY HIT? @C@@@@          J         DITBRK             . YES    @G@@@@SO
)@@G@@          L,U       A2,0,X8            . GET RID OF INCREMENT           SP
)@@G@@@E@@@@          TLE       A2,DBUFCNT          . END OF BUFFER?    @E@@@@SQ
)@@G@@          J         NEXTIM             . NO, GET NEXT IMAGE @E@@@@      SR
)@@G@@    TZ        DITFIL             . ANY MORE IN FILE?  @G@@@@          J SS
)@@G@@        READNXT            . READ NEXT FILE SECTION         @E@@@@DITBRKST
)@@G@@    LMJ       X10,DECODE        . RECOVER LAST IMAGE  @E@@@@          ERSU
)@@G@@        ERR$               . EOF IMPOSSIBLE     @I@@@@          AN,U    SV
)@@G@@  LCT,1              . DECREMENT LINE COUNT FOR CORRECT VALUE     @E@@@@SW
)@@G@@          TNZ       MOVEF             . MOVE COM?           @C@@@@      SX
)@@G@@    J         NXRQ              . NOT MOVE@E@@@@          L         A10,SY
)@@G@@DIT2          . GET LAST LINE       @G@@@@          TNG       A10,DITLN SZ
)@@G@@        . LESS THAN INSERT SPOT?          @G@@@@          J         DORGTA
)@@G@@LN            . YES, USE ORIGINAL LN NUM FOR DEL@C@@@@          L       TB
)@@G@@  A10,DITLN         .         @E@@@@          TG        A10,DIT1        TC
)@@G@@  . DIT1 >INSERT SPOT?  @C@@@@          J         MVERR             . NOTD
)@@G@@-ERROR@C@@@@          L         A0,DIT1           .         @C@@@@      TE
)@@G@@    L         A10,DIT2          .         @G@@@@          S         A10,TF
)@@G@@DIT1          . DIT1=DIT2+1(-1 FOR DELETE)      @C@@@@          A       TG
)@@G@@  A10,DIT2          .         @C@@@@          AN        A10,A0          TH
)@@G@@  .         @I@@@@          S         A10,DIT2          . DIT2=DIT2+DIT2TI
)@@G@@-DIT1+1(-1 FOR DEL)           @C@@@@          J         MVDEL           TJ
)@@G@@  .         @E@@@@DORGLN    DECR      DIT1              . (-1 FOR DELETETK
)@@G@@)     @E@@@@          DECR      DIT2              . (-1 FOR DELETE)     TL
)@@G@@@E@@@@          L         A10,DIT2          . DIT2 MUST BE IN A10 @E@@@@TM
)@@G@@          J         MVDEL             . GO DELETE LINES     @G@@@@MVERR TN
)@@G@@    TYP       E52,L52           . MOVE WITHIN MOVE ILLEGAL        @E@@@@TO
)@@G@@          J         NXRQ              . NEXT COMMAND        @E@@@@DITTO3TP
)@@G@@    L         A0,DIT1            . GET FIRST SPEC     @E@@@@          S TQ
)@@G@@        A0,DIT2            . PUT IN SECOND      @E@@@@          J       TR
)@@G@@  DITANAL            . PROCEED NORMALLY   @G@@@@ . THIS ROUTINE WRITES LTS
)@@G@@INES TO DITTO FILE.  THE FILE IS USED ONLY      @G@@@@ . IF THERE IS NOTTT
)@@G@@ ENOUGH ROOM TO SAVE THE DITTO INFORMATION IN THE     @^@@@@ . DITTO BUFTU
)@@G@@FER         @G@@@@WRDIT     L         A3,DBUFCNT         . GET BUFFER WOTV
)@@G@@RD COUNT          @E@@@@          AU        A3,IL              . ADD IMATW
)@@G@@GE LENGTH + @E@@@@          A,U       A4,1               . 1 FOR ICW    TX
)@@G@@      @G@@@@          TG,U      A4,DITLEN          . EXCEEDS BUFFER LENGTY
)@@G@@TH          @E@@@@          LMJ       X9,TOOLONG         . THEN WRITE TOTZ
)@@G@@ FILE @E@@@@          LXI,U     A3,1               . LOAD INCREMENT     UA
)@@G@@@E@@@@          L         A0,ICW             . TRANSFER ICW       @C@@@@UB
)@@G@@          S         A0,DITBUF,*A3    .          @E@@@@          L       UC
)@@G@@  A2,(1,IMAGE-DITBUF)       . SOURCE LOC  @E@@@@          L         R1,IUD
)@@G@@L              . IMAGE LENGTH       @E@@@@          BT        A3,DITBUF,UE
)@@G@@*A2           . TRANSFER IMAGE@E@@@@          S         A3,DBUFCNT      UF
)@@G@@   . SAVE COUNT         @C@@@@          J         0,X10              . RUG
)@@G@@ETURN @C@@@@ . IF TOO MUCH OPEN DITTO FILE AND WRITE        @E@@@@TOOLONUH
)@@G@@G   TZ        DIASGD             . DITTO FILE ASGED?  @C@@@@          J UI
)@@G@@        WRITEDIT           . YES    @E@@@@          L         A0,(4,ASGDUJ
)@@G@@I)       . ASSIGN IT          @C@@@@          ER        CSF$            UK
)@@G@@   .        @E@@@@          JNZ       A0,FILERR            . ASSIGN ERROUL
)@@G@@R     @E@@@@          SNZ       DIASGD          . SET ASSIGNED FLAG     UM
)@@G@@@E@@@@WRITEDIT  L,U       A0,DITPKT          . LOAD I-OPKT        @E@@@@UN
)@@G@@          L,U       A1,W$              . WRITE CODE         @C@@@@      UO
)@@G@@    S         A1,DITCODE         .        @E@@@@          ER        IOW$UP
)@@G@@               . PERFORM I-O        @I@@@@          L,U       A0,DITSECLUQ
)@@G@@         . GET DITTO BUFFER LENGTH IN SECTORS         @G@@@@          A UR
)@@G@@        A0,DITFAST         . ADD TO PRESENT FASTRAND ADDRESS@C@@@@      US
)@@G@@    S         A0,DITFAST         .REPLACE @E@@@@          INCR      DITFUT
)@@G@@IL             . INCREMENT DITFIL   @G@@@@          L,U       A3,1      UU
)@@G@@         . RESET POINTER FOR BUFFER       @C@@@@          J         0,X9UV
)@@G@@               . RETURN @C@@@@          J         0,X10              .  UW
)@@G@@      @^@@@@ . DITTO ERRORS         @A@@@@DITERR2   JNZ       A10,LINERRUX
)@@G@@      @C@@@@          L         R9,X10            . SAVE X10@C@@@@      UY
)@@G@@    SZ        OK                 .        @C@@@@          SZ        ICW UZ
)@@G@@               .        @E@@@@          SNZ       WINHIB         . INHIBVA
)@@G@@IT WRITING        @C@@@@          LMJ       X3,TOPS2         . GO TO TOPVB
)@@G@@@C@@@@          L         X10,R9            .         @E@@@@          SZVC
)@@G@@        A10               . RESET A10           @C@@@@          J       VD
)@@G@@  0,X10               .       @E@@@@LINERR   TYP       E22,L22          VE
)@@G@@  . EOF ERROR           @C@@@@          J         RECTST             .  VF
)@@G@@      @G@@@@CHKEOF    . THIS ROUTINE CHECKS TO SEE IF PAST THE END OF FIVG
)@@G@@LE          @E@@@@          TZ        OK                . PAST END OF FIVH
)@@G@@LE?   @E@@@@          J         0,X8             . NOPE RETURN          VI
)@@G@@@G@@@@          L         A10,LCT           . GET CURRENT LINE COUNT    VJ
)@@G@@      @I@@@@          A,U       LCT,1             . INCREMENT LINE COUNTVK
)@@G@@ TO FORCE A TOP         @G@@@@          GOLINE    LINERR            . SHVL
)@@G@@OULD ALWAYS FIND LINE         @C@@@@          J         0,X8            VM
)@@G@@ . RETURN   @G@@@@ . @/ AUTO SAVE ROUTINES. AUTO SAVE IS PERFORMED BY COVN
)@@G@@PYING THE CURRENT @G@@@@ . SCRATCH FILE INTO THE CATALOGED FILE ED$TB.  VO
)@@G@@THIS CAN BE RECOVERED   @A@@@@ . BY DOING AN @ED WITH AN R OPTION.@]@@@@VP
)@@G@@ .          @A@@@@ . THIS ROUTINE SETS AUTO NUMBER    @I@@@@AUTO1     TNVQ
)@@G@@Z       DEMAND            . DEMAND?                         ED020270    VR
)@@G@@@I@@@@          J         BAUTO             . NO, CAN'T DO AN AUTO      VS
)@@G@@      ED020280    @I@@@@          TNOPTN    'D'               . IS THIS VT
)@@G@@REALLY DEMAND?          ED020290    @I@@@@          J         BAUTO     VU
)@@G@@        . NO, DON'T LET HIM DO IT         ED020300    @G@@@@          SNVV
)@@G@@Z       AUTCALL           . FLAG: AUTO COMMAND WAS CALLED   @E@@@@      VW
)@@G@@    LMJ       X10,GET            . GET NUMBER         @G@@@@          JZVX
)@@G@@        A1,DOAUTO         . NO NUMBER, DIRECT AUTO          @E@@@@      VY
)@@G@@    LMJ       X10,BIN0            . CONVER TO BINARY  @G@@@@          TNVZ
)@@G@@G,U     A10,MINAUT        . GREATER THAN MINIMUM?           @C@@@@      WA
)@@G@@    JNZ       A10,MAUTER        .         @C@@@@          S         A10,WB
)@@G@@AUTOTST        .        @G@@@@          SZ        AUTOCNT            . ZWC
)@@G@@ERO TRANSACTION COUNT         @E@@@@          J         NXRQ            WD
)@@G@@  . NEXT COMMAND        @I@@@@BAUTO     TYP       E53,L53           . NOWE
)@@G@@ AUTO ALLOWED IN BATCH        ED020320    @I@@@@          J         NXRQWF
)@@G@@              .                                 ED020330    @E@@@@MAUTERWG
)@@G@@    A$EDIT     ETAB              . TOO SMALL          @G@@@@          A$WH
)@@G@@EMSG     E51               . TELL HIM WHAT MIN IS           @C@@@@      WI
)@@G@@    A$EDECV    MINAUT,,U        .         @^@@@@          A$EDITX    .  WJ
)@@G@@@C@@@@          TYP       IMBUF,6           .         @C@@@@          J WK
)@@G@@        NXRQ              .         @A@@@@ . THIS ROUTINE DOES THE AUTO WL
)@@G@@SAVE  @E@@@@DOAUTO    SZ        X10               . THIS IS DIRECT AUTO WM
)@@G@@@I@@@@          L,U       A0,0377776        . BIG NUMBER                WN
)@@G@@      ED011670    @E@@@@          TNZ       AUTOTST           . AUTO TESWO
)@@G@@T SET?      @G@@@@          S         A0,AUTOTST        . SET TO REDICULWP
)@@G@@OUSLY BIG NUMBER  @E@@@@AUTOSAV   S         X10,DITX10S        . SAVE X1WQ
)@@G@@0           @G@@@@          S         LCT,DITLN          . SAVE LINE AT WR
)@@G@@WHICH AUTO DONE   @E@@@@          TYP       E24,L24            . TYPE  'WS
)@@G@@AUTO'       @G@@@@          LMJ       X3,TOPS           . GET ALL CORRECWT
)@@G@@TIONS INTO ED$TB  @G@@@@          TNZ       AUTCALL           . WAS AUTOWU
)@@G@@ COMMAND CALLED?        @G@@@@          J         AUTOGO            . NOWV
)@@G@@, DON'T SET BIT AGAIN         @E@@@@          TNZ       OUTFIL          WW
)@@G@@  . OUTPUT FILE FD?     @E@@@@          J         AUTOGO-1          . NOWX
)@@G@@, ASCII           @G@@@@          L         A0,ICW            . SET BIT WY
)@@G@@IN ICW (HEADER)         @G@@@@          OR,U      A0,010            . SAWZ
)@@G@@YING OUTPUT FILE IS FD        @G@@@@          S         A1,ICW          XA
)@@G@@  . STORE RESULT BACK IN ICW        @G@@@@          LMJ       X3,TOPS   XB
)@@G@@        . GET BIT CORRECTION INTO FILE    @E@@@@          SZ        AUTCXC
)@@G@@ALL           . CLEAR FLAG          @]@@@@AUTOGO    . @E@@@@          SZXD
)@@G@@        AUTOCNT            . CLEAR COUNT        @G@@@@          L       XE
)@@G@@  A10,DITLN          . GET ORIGINAL LINE NUMBER       @E@@@@          GOXF
)@@G@@LINE    EOFC               . GO TO LINE A10     @E@@@@          L       XG
)@@G@@  X10,DITX10S        . RECOVER X10        @E@@@@          TZ        X10 XH
)@@G@@              . DIRECT SAVE?        @E@@@@          J         NOTAUTO   XI
)@@G@@          . RETURN TO TYPEIN  @C@@@@          J         NXRQ            XJ
)@@G@@  .         @]@@@@ . @/       @C@@@@  . THIS ROUTINE DELETES THE NEXT N XK
)@@G@@LINES       @E@@@@          .         POINTER IS LEFT AT THE LAST LINE DXL
)@@G@@ELETED@^@@@@DEL1      . DELETE      @E@@@@          L         A1,DELIM  XM
)@@G@@        . GET DELIMITER       @E@@@@          TNE,U     A1,'+'          XN
)@@G@@  . WAS IT A PLUS       @E@@@@          SNZ       DGONXT            . YEXO
)@@G@@S- SET FLAG       @A@@@@          LMJ       X10,GET         @A@@@@      XP
)@@G@@    LMJ       X10,BIN         @C@@@@          S         A10,DIT1     . SXQ
)@@G@@AVE ARG ONE @C@@@@        LMJ       X10,GET      . GET ARG 2      @G@@@@XR
)@@G@@          JZ        A1,DELNXT         . MEANS DELETE NEXT DIT1 LINES    XS
)@@G@@@C@@@@        LMJ       X10,BIN      . CONVERT        @C@@@@MVDEL   TG  XT
)@@G@@      A10,DIT1     . IS DIT1 BIGGER?@C@@@@        J         DEL3        XU
)@@G@@ . NO, NEW FMT    @E@@@@          JNZ       A10,LINERR         . INVALIDXV
)@@G@@ LINE       @C@@@@DELNXT    TNZ       LCT               . LINE 0? @C@@@@XW
)@@G@@          J         IBERR             . ILLEGAL @C@@@@        L         XX
)@@G@@A10,DIT1     . RELOAD ARG ONE.@E@@@@          S         A10,SSAVE       XY
)@@G@@   . RESET LINE COUNT   @]@@@@DEL2      . @A@@@@          SZ        LENGXZ
)@@G@@TH          @E@@@@          TZ        BRKSET             . WAS BREAK KEYYA
)@@G@@ HIT? @E@@@@          J         NXRQ               . YES, DELETE NO MOREYB
)@@G@@@E@@@@          SNA       RC,DC1            . IMAGE DELETED BY ED @A@@@@YC
)@@G@@          LMJ       X10,WRB         @E@@@@          AN,U      LCT,1     YD
)@@G@@  . DCREMENT LINE COUNT       @A@@@@          JZ        A10,DONDEL      YE
)@@G@@@A@@@@          LMJ       X10,READ        @^@@@@          J         EOFCYF
)@@G@@@A@@@@          JGD       A10,DEL2        @C@@@@DEL3      AN        A10,YG
)@@G@@DIT1     . NET LENGTH   @E@@@@          S         A10,SSAVE          . SYH
)@@G@@AVE FOR SCAN COUNT@E@@@@          S         A10,DIT2           . SAVE DIYI
)@@G@@FF IN DIT2  @E@@@@          L         A10,DIT1           . GET START    YJ
)@@G@@      @C@@@@          A,U       A10,1              . ADJUST @E@@@@      YK
)@@G@@    GOLINE    EOFC               . GO TO LINE         @C@@@@        L   YL
)@@G@@      A10,DIT2     . NET TO DEL     @E@@@@          S         A10,SSAVE YM
)@@G@@        . SAVE FOR SCAN COUNT @C@@@@        J         DEL2         . DO YN
)@@G@@IT.         @E@@@@DONDEL    L         A10,LCT           . GET LINE COUNTYO
)@@G@@      @E@@@@          TZ        DGONXT            . GO TO NEXT LINE?    YP
)@@G@@@E@@@@          A,U       A10,1             . GO TO NEXT LINE     @I@@@@YQ
)@@G@@          TNZ       MOVEF             . DELETE FOR MOVE COMMAND         YR
)@@G@@817TM274    @I@@@@          J         NOMOVV            . NOPE          YS
)@@G@@                  817TM275    @G@@@@          L         A10,R8          YT
)@@G@@  . GET LINE COQNT FROM R8          @I@@@@          J         GOMVV     YU
)@@G@@        . GO TO LINE                      817TM277    @I@@@@NOMOVV    TNYV
)@@G@@Z       DGONXT            . GO TO NEXT LINE                 817TM279    YW
)@@G@@@E@@@@          A,U       LCT,1             . NO-FORCE A TOP      @I@@@@YX
)@@G@@GOMVV     GOLINE    EOFC              . GO TO THIS LINE                 YY
)@@G@@817TM281    @E@@@@          SZ        MOVEF             . CLEAR FLAGS   YZ
)@@G@@      @C@@@@          SZ        DGONXT            .         @E@@@@      ZA
)@@G@@    J         NXRQ              . NEXT COMMAND        @A@@@@ . @/ MOVE TZB
)@@G@@O SPECIFIED LINE        @C@@@@          ON        EDMODE            .   ZC
)@@G@@      @E@@@@GT1       LMJ       X10,GET           . GET NUMBER          ZD
)@@G@@@C@@@@          J         LINENUM           . GO TO IT@E@@@@NEX1      LMZE
)@@G@@J       X10,GET           . GET +,-, OR NUMBER  @^@@@@          FIELDATAZF
)@@G@@  .   @C@@@@          TNE,U     A1,'-'            . GO BACK?@C@@@@      ZG
)@@G@@    J         GOMIN+1           . YES     @E@@@@          TNE,U     A1,'ZH
)@@G@@+'            . GO FORWARD?         @^@@@@          ASCII     .   @C@@@@ZI
)@@G@@          J         GOPL+1            . YES     @G@@@@          J       ZJ
)@@G@@  GOPL+2            . YES BUT HAVE THE NUM ALREADY    @G@@@@HEAD1     L,ZK
)@@G@@U       A10,1             . GO TO HEAD,I.E. LINE 1          @C@@@@      ZL
)@@G@@    J         LINENUM+1           .       @C@@@@          OFF       EDMOZM
)@@G@@DE            .         @]@@@@          . @E@@@@GOPL      SNZ       EDCTZN
)@@G@@            . SET TO GET AT COL 2   @C@@@@          LMJ       X10,GET   ZO
)@@G@@   . GET REL COUNT@C@@@@          LMJ       X10,BIN   . CONVERT         ZP
)@@G@@@C@@@@          J         GOTO4        . DO IT   ***  @E@@@@GOMIN     SNZQ
)@@G@@Z       EDCT            . SET TO GET A COL 2    @C@@@@          LMJ     ZR
)@@G@@  X10,GET      . GET REL COUNT@C@@@@          LMJ       X10,BIN0    . COZS
)@@G@@NVERT       @C@@@@          TNZ       A10               .  -0     @E@@@@ZT
)@@G@@          L,U       A10,1             . ACTS LIKE -1        @E@@@@      ZU
)@@G@@    LN        A10,A10           . MAKE NEGATIVE       @E@@@@          A ZV
)@@G@@        A10,LCT           . ADD IN CURRENT COUNT@E@@@@          GOLINE  ZW
)@@G@@  EOFC              . GO TO CORRECT LINE  @C@@@@          J         GOTOZX
)@@G@@9             . LEAVE   @]@@@@GOTO3     . @E@@@@          LMJ       X3,TZY
)@@G@@OPS        . GO TO TOP OF FILE      @]@@@@NEXT2     . @A@@@@          LMZZ
)@@G@@J       X10,WRB         @E@@@@          LMJ       X10,FREAD         . FAAA
)@@G@@ST READ           @^@@@@          J         EOFC@]@@@@GOTO4     . @G@@@@AB
)@@G@@          TNZ       BRKSET             . EXIT IF BREAK KEY HIT          AC
)@@G@@@A@@@@          JGD       A10,NEXT2       @E@@@@          SZ        FASTAD
)@@G@@READ           . CLEAR FASTREAD     @C@@@@GOTO5     LMJ       X10,WRB   AE
)@@G@@         . WRITE  @G@@@@          LMJ       X10,READ           . REGULARAF
)@@G@@ READ OF LINE WANTED    @E@@@@          J         EOFC               . EAG
)@@G@@ND OF FILE        @C@@@@GOTO7     TNZ       GORET              . RETURN?AH
)@@G@@@C@@@@          J         $+3                . NO     @E@@@@          SZAI
)@@G@@        GORET              . CLEAR FLAG         @C@@@@          J       AJ
)@@G@@  1,X6               . YES    @E@@@@GOTO9     TZ        BRIEF2          AK
)@@G@@  . BRIEF MODE?         @C@@@@          J         NXRQ              . YEAL
)@@G@@S     @E@@@@          TZ        A10               . NO, LINE 0?         AM
)@@G@@@A@@@@          LMJ       X10,TYPOUT      @^@@@@          J         NXRQAN
)@@G@@@]@@@@          . @G@@@@LINENUM   LMJ       X10,BIN0             . CONVEAO
)@@G@@RT  SPEC FIELD TO BINARY@E@@@@          S         A10,SSAVE         . SAAP
)@@G@@VE FOR SCAN       @G@@@@          TNE       A10,LCT           . ARE WE TAQ
)@@G@@HERE ALREADY?           @C@@@@          J         GOTO7             . YEAR
)@@G@@S!    @E@@@@GOTOIT    JZ        A10,GOTO0            . 'GO TO 0'='TOP'  AS
)@@G@@@G@@@@          AN,U      A10,1            . DECREMENT FOR CORRECT LOOP AT
)@@G@@VALUE @I@@@@          AN        A10,LCT             . IS  REQUESTED LINEAU
)@@G@@  ABOVE POINTER?        @C@@@@          JP        A10,GOTO4           . AV
)@@G@@NO    @C@@@@          AA        A10,LCT             .       @E@@@@      AW
)@@G@@    JGD       A10,GOTO3           . DO A TOP AND SCAN @E@@@@          LMAX
)@@G@@J       X3,TOPS            . DO A TOP           @G@@@@          J       AY
)@@G@@  GOTO5              . WANTS TO GO TO LINE 1          @E@@@@GOTO0     LMAZ
)@@G@@J       X3,TOPS           . GO TO TOP           @C@@@@          J       BA
)@@G@@  GOTO7             . EXIT    @^@@@@ . MOVE TO LAST LINE    @G@@@@LAST1 BB
)@@G@@    TNZ       OK                . AT THE END OF THE FILE ALREADY  @I@@@@BC
)@@G@@          LMJ       X3,TOPS           . HAVE TO GO ROUND TO GET IT TO WOBD
)@@G@@RK          @E@@@@          L,U       X3,NXRQ           . REGULAR ENTRY BE
)@@G@@      @E@@@@LAST3     LMJ       X9,IMAGESAV        . SAVE IMAGE         BF
)@@G@@@E@@@@          LMJ       X10,WRB            . WRITE OUT IMAGE    @E@@@@BG
)@@G@@          LMJ       X10,FREAD          . READ FAST          @E@@@@      BH
)@@G@@    J         LAST2              . END OF FILE        @E@@@@          TNBI
)@@G@@Z       BRKSET            . BREAK KEY?          @E@@@@          J       BJ
)@@G@@  LAST3              . READ ANOTHER       @C@@@@LAST2     SZ        FASTBK
)@@G@@READ           .        @E@@@@          LMJ       X9,IMAGEREC        . RBL
)@@G@@ECOVER IMAGE      @E@@@@          TNZ       BRIEF2             . BRIEF MBM
)@@G@@ODE?        @C@@@@          LMJ       X10,TYPOUT         . TYPE IT@C@@@@BN
)@@G@@          SZ        ICW               .         @E@@@@          SNZ     BO
)@@G@@  WINHIB         . WRITE INHIBIT          @C@@@@          SZ        LENGBP
)@@G@@TH            .         @C@@@@          J         0,X3                . BQ
)@@G@@NEXT  @G@@@@ . @/ THIS COMMAND SENDS A MESSAGE TO THE OPERATOR AND MAY SBR
)@@G@@OLICIT      @^@@@@ . A RESPONSE           @E@@@@OPR1      L         A0,BBS
)@@G@@LANK2         . BLANK OUT COMMAND   @C@@@@          S         A0,EDIT14 BT
)@@G@@        .         @G@@@@OPR2      SZ        COMPKT             . CLEAR 1BU
)@@G@@ST AND 3RD WORDS        @C@@@@          SZ        COMPKT+2           .  BV
)@@G@@      @E@@@@          SZ        A0                . SET FOR DIVIDE      BW
)@@G@@@E@@@@          L         A1,COUNT          . GET NO. _CHAR       @E@@@@BX
)@@G@@          DI,U      A0,4              . GET NO. WORDS       @E@@@@      BY
)@@G@@    TZ        A1                . REMAINDER?          @E@@@@          A,BZ
)@@G@@U       A0,1              . YES, ROUND UP       @E@@@@          CONVAF  CA
)@@G@@  EDIT14,EDIT14     . ASCII TO FD         @E@@@@          L,U       A0,FCB
)@@G@@IMBUF          . GET MESSAGE ADDRESS@E@@@@          S         A0,COMADD CC
)@@G@@         . PUT IN PACKET      @E@@@@          E$DIT     FTAB            CD
)@@G@@  . START EDIT          @G@@@@          E$FD1     RUNID             . INCE
)@@G@@SERT RUNID AT HEAD OF MSG     @C@@@@          E$CHAR    053             CF
)@@G@@  . INSET : @I@@@@          TZ        CARDPCH           . CARD PUNCH MSGCG
)@@G@@?                 ED011690    @I@@@@          J         ALL1WD          CH
)@@G@@  . YES, COPY ALL OF 1ST WORD       ED011700    @C@@@@          E$CHAR  CI
)@@G@@  EDIT14,,S5        . 1ST CHAR@E@@@@          E$CHAR    EDIT14,,S6      CJ
)@@G@@  . SECOND CHARACTER    @I@@@@          J         COPRES           . COPCK
)@@G@@Y THE REST                    ED011720    @I@@@@ALL1WD     E$COPY   6,EDCL
)@@G@@IT14          . COPY ALL OF 1ST WORD            ED011730    @I@@@@      CM
)@@G@@    SZ        CARDPCH           . CLEAR FLAGC                     ED0117CN
)@@G@@40    @I@@@@COPRES    L,U       A0,EDIT14+1       . COPY STARTING WITH SCO
)@@G@@ECOND WORD  ED011760    @E@@@@          L         A1,COUNT          . CHCP
)@@G@@AR COUNT          @E@@@@          AN,U      A1,6              . MINUS FICQ
)@@G@@RST WORD    @C@@@@          E$COPY           . STICK IN THE REST  @C@@@@CR
)@@G@@          E$COLN    . GET COLUMN NUMBER         @E@@@@          TG,U    CS
)@@G@@  A0,51              . COUNT >50?         @C@@@@          L,U       A0,5CT
)@@G@@0              .        @C@@@@          S         A0,COMCHR          .  CU
)@@G@@      @^@@@@          E$DITX    .   @E@@@@          L         A1,DELIM  CV
)@@G@@         . GET DELIMITER      @E@@@@          TE,U      A1,'*'          CW
)@@G@@   . * MEANS SOLICITED  @E@@@@          J         OPROUT             . NCX
)@@G@@O ANSWER WANTED   @E@@@@          L,U       A0,50              . MAX ANSCY
)@@G@@WER=50      @C@@@@          S         A0,COMIEXP         .        @E@@@@CZ
)@@G@@          L,U       A0,FIMBUF           . ANSWER TO IMBUF   @A@@@@      DA
)@@G@@    S         A0,COMIADD      @E@@@@OPROUT    L,U       A0,COMPKT       DB
)@@G@@   . PACKET ADDRESS     @G@@@@          ER        COM$               . SDC
)@@G@@END MESSAGE TO CONSOLE        @E@@@@          TE,U      A1,'*'          DD
)@@G@@   . ANSWER REQUIRED?   @C@@@@          J         NXRQ               . NDE
)@@G@@O     @E@@@@          L         A0,COMICHR         . INPUT CHAR COUNT   DF
)@@G@@@E@@@@          DSA       A0,36             . SHIFT FOR DIVIDE    @C@@@@DG
)@@G@@          DI,U      A0,6               .        @C@@@@          TZ      DH
)@@G@@  A1                 .        @C@@@@          A,U       A0,1            DI
)@@G@@   .        @C@@@@          LSSL      A0,18              .        @E@@@@DJ
)@@G@@          A         A0,(0100,FIMBUF)    . FORM PRINT PACKET @E@@@@      DK
)@@G@@    ER        PRINT$             . PRINT IT           @E@@@@          J DL
)@@G@@        NXRQ               . NEXT COMMAND       @A@@@@ . @/ THIS ROUTINEDM
)@@G@@ PRINT LINES      @G@@@@LNP1      SNZ       LNPRT           . SET LINE NDN
)@@G@@UMBER PRINTER           @E@@@@PRINT1    SNZ       PNTINQ         . REAL DO
)@@G@@PRINT ENTRANCE    @E@@@@PRINT1Q   L         A1,DELIM           . GET DELDP
)@@G@@IMITER      @E@@@@          TNE,U     A1,'+'             . WAS IT PLUS? DQ
)@@G@@      @G@@@@          J         OUTPT1             . YES, DON'T PRINT THDR
)@@G@@IS LINE     @E@@@@          TNE,U A1,'!'                 . PRINT ALL    DS
)@@G@@      @C@@@@          J         PRINTALL           . YES    @E@@@@      DT
)@@G@@    LMJ       X10,GET            . GET FIRST ARG      @G@@@@          TZDU
)@@G@@        ONSITE                   . ONSITE PRINTOUT?         @E@@@@      DV
)@@G@@    JZ        A1,PRINTALL       . ASSUME A ! IF NO ARG@A@@@@          LMDW
)@@G@@J       X10,BIN         @E@@@@          S         A10,DIT1     . SAVE FIDX
)@@G@@RST ARG           @C@@@@          LMJ       X10,GET      . LOOK FOR NEXTDY
)@@G@@@C@@@@          LMJ       X10,BIN      . CONVERT      @C@@@@          TGDZ
)@@G@@        A10,DIT1     . FIRST BIGGER?@E@@@@          JNZ       A10,PRINT3EA
)@@G@@       . NO, NEW FORMAT       @E@@@@          JNZ       A10,LINERR      EB
)@@G@@   . LINE REF ERROR     @E@@@@         L          A10,DIT1     . YES, REEC
)@@G@@LOAD ARG ONE.     @E@@@@          S         A10,SSAVE          . SAVE FOED
)@@G@@R SCAN COUNT@E@@@@          TNZ       LCT                . ADD 1 IF LINEEE
)@@G@@ 0    @G@@@@          A,U       A10,1           . ADJUST TO PRINT OUT COEF
)@@G@@RRECT NUMB  @]@@@@PRINT2    . @G@@@@          TZ        LCT             EG
)@@G@@  . SKIP TYPOUT IF LINE COUNT IS 0  @A@@@@          LMJ       X10,TYPOUTEH
)@@G@@      @A@@@@          JZ        A10,LIEXIT      @E@@@@          TZ      EI
)@@G@@  BRKSET             . WAS BREAK KEY HIT? @E@@@@          J         LIEXEJ
)@@G@@IT             . YES, STOP PRINTING @A@@@@          LMJ       X10,WRB   EK
)@@G@@      @A@@@@          LMJ       X10,READ        @^@@@@          J       EL
)@@G@@  EOFC@A@@@@          JGD       A10,PRINT2      @C@@@@PRINT3    AN      EM
)@@G@@  A10,DIT1       . NET LENGTH @E@@@@          S         A10,DIT2        EN
)@@G@@   . SAVE DIFF          @E@@@@          S         A10,SSAVE          . SEO
)@@G@@AVE FOR SCAN COUNT@E@@@@          L         A10,DIT1           . GET STREP
)@@G@@T           @C@@@@          A,U       A10,1              . ADJUST @E@@@@EQ
)@@G@@          GOLINE    EOFC               . GO TO LINE         @C@@@@      ER
)@@G@@    L         A10,DIT2   . RELOAD A10     @C@@@@          J         PRINES
)@@G@@T2       . PRINT LINES  @I@@@@PRINTALL   LMJ       X3,TOPS            . ET
)@@G@@COMMAND TO PRINT ALL LINES IN FILE        @G@@@@          L,U      A10,0EU
)@@G@@777776             . BIG NUMBER IN A10          @E@@@@          S       EV
)@@G@@  A10,SSAVE          . SAVE FOR SCAN COUNT@E@@@@          SNZ       FASTEW
)@@G@@READ       . FAST READ WILL DO      @E@@@@          J         PRINT2+3  EX
)@@G@@    . DON'T PRINT 1ST LINE    @E@@@@LIEXIT    SZ        PNTINQ          EY
)@@G@@  . CLEAR REAL PRINT    @E@@@@          TNZ       PUNCH              . PEZ
)@@G@@UNCH COMMAND?     @C@@@@          J         NXRQ               . NOPE   FA
)@@G@@@E@@@@          L,U       A1,10000           . 3SECONDS           @E@@@@FB
)@@G@@          ER        TWAIT$             . WAIT 1 SECOND      @C@@@@      FC
)@@G@@    SZ        PUNCH              .        @C@@@@          J         NXRQFD
)@@G@@               . EXIT   @A@@@@ . OUTPUT  AFTER PRESENT LINE       @]@@@@FE
)@@G@@ .          @G@@@@OUTPT1    LMJ       X10,GET            . PICK UP NUMBEFF
)@@G@@R OF LINES        @E@@@@          TNZ       A1                . NOHING FFG
)@@G@@OUND ?      @C@@@@          L,U       A1,061            . ASSUME 1@E@@@@FH
)@@G@@          LMJ       X10,BIN            . CONVERT TO BINARY  @E@@@@      FI
)@@G@@    TNZ       OK                 . END OF FILE?       @C@@@@          J FJ
)@@G@@        EOFC               . YES    @G@@@@          LMJ       X10,WRB   FK
)@@G@@         . CURRENT IMAGE TO OUTPUT FILE   @G@@@@          LMJ       X10,FL
)@@G@@READ           . IMAGE FROM INPUT FILE          @E@@@@          J       FM
)@@G@@  EOFC               . END OF FILE RETURN @I@@@@          J         PRINFN
)@@G@@T2             . NORMAL RETURN- USE PRINT ROUTIN  E NOW     @C@@@@ . THIFO
)@@G@@S COMMAND PUNCH USED TO PUNCH PAPER TAPE  @C@@@@PUNCH1    TYP       E30,FP
)@@G@@L30            .        @C@@@@          L,U       A1,3000           . 3SFQ
)@@G@@ECONDS@E@@@@          ER        TWAIT$             . WAIT 1 SECOND      FR
)@@G@@@C@@@@          SNZ       PUNCH           . PROCEED   @C@@@@          J FS
)@@G@@        PRINT1              .       @C@@@@ . SEND PRINTOUT TO ONSITE PRIFT
)@@G@@NTER(OR PUNCH)    @E@@@@LNSITE1   SNZ       LNPRT          . PRINT LINE FU
)@@G@@NUMBERS     @C@@@@          J         SITE1              .        @G@@@@FV
)@@G@@CPUNCH    SNZ       CARDPCH         . SET PUNCH FLAG AND ACT LIKE SITE  FW
)@@G@@@C@@@@SITE1     E$DIT     FTAB              .         @^@@@@          FIFX
)@@G@@ELDATA  .   @G@@@@          E$MSG     ('PR$&&&')              . START USFY
)@@G@@E IMAGE           @^@@@@          ASCII     .   @E@@@@          ER      FZ
)@@G@@  DATE$              . GET TIME OF DAY    @C@@@@          E$FD1     A1  GA
)@@G@@               . USE IT @C@@@@          E$DITX                       .  GB
)@@G@@      @A@@@@          DL        A0,FIMBUF       @E@@@@          DS      GC
)@@G@@  A0,ALTPKT+1          . PUT IN PACKET    @C@@@@          E$DIT     FTABGD
)@@G@@              .         @E@@@@          E$MSG     ASGPR             . STGE
)@@G@@ART ASG IMAGE     @E@@@@          E$FD2     ALTPKT+1          . PUT IN FGF
)@@G@@ILENAME     @A@@@@          E$MSGR    . FINISH MESSAGE@^@@@@          E$GG
)@@G@@DITX    .   @C@@@@          L         A0,(5,FIMBUF)       . CSF IT@C@@@@GH
)@@G@@          ER        CSF$               .        @C@@@@          JNZ     GI
)@@G@@  A0,FILERR          . ERROR  @C@@@@          SNZ       ONSITE          GJ
)@@G@@. SET FLAG  @C@@@@          TZ        CARDPCH            . PUNCH? @C@@@@GK
)@@G@@          J         PRINT1             . YES    @E@@@@          L,U     GL
)@@G@@  A0,TREADSITE       . HEADING?           @C@@@@          ER        ATREGM
)@@G@@AD$           .         @G@@@@          L,U       A1,'.'             . IGN
)@@G@@NSERT . TO STOP PRTCA$ SCAN   @C@@@@          S,Q1      A1,IMBUF+2,A0   GO
)@@G@@  .         @I@@@@          DL        A1,HEADPA          . GET START OF GP
)@@G@@HEADING CONTROL IMAGE         @C@@@@          DS        A1,IMBUF        GQ
)@@G@@   . PUT IN @E@@@@          LSSL      A0,18              . SHIFT WORD COGR
)@@G@@UNT   @E@@@@          A         A0,(5,ALTPKT+1)    . FORM PRTCA$ PACKET GS
)@@G@@@C@@@@          ER        APRTCA$           .         @E@@@@          TZGT
)@@G@@        BRKSET             . BREAK KEY HIT?     @C@@@@          J       GU
)@@G@@  SITEBRK            . ESCAPE @G@@@@          TZ        NUMACT          GV
)@@G@@  . IS THIS A NUMBERED ACTIVITY?    @C@@@@          J         FORKTR    GW
)@@G@@        . YES     @E@@@@          L         A0,(0201,FORKTR)  . LET'S BEGX
)@@G@@ CLEVER     @G@@@@          ER        FORK$             . GET AN ACTIVITGY
)@@G@@Y NUMBER          @G@@@@          SNZ       NUMACT         . SET FLAG SAGZ
)@@G@@YING WE NUMED IT        @G@@@@          ER        EXIT$             . FOHA
)@@G@@RGET THE UNNUMBERED ONE       @G@@@@FORKTR    L         A0,(0100,TRAILM)HB
)@@G@@  . START ANOTHER ACTIVITY          @E@@@@          ER        FORK$     HC
)@@G@@        .. TO ASK FOR MSG     @E@@@@          J         PRINT1          HD
)@@G@@   . GO TO PRINT ROUTINE@E@@@@SITEBRK   SZ        ONSITE             . CHE
)@@G@@LEAR FLAG         @E@@@@          J         NXRQ               . NEXT COHF
)@@G@@MMAND       @]@@@@PNTALT    . @E@@@@          S         A0,ALTPKT       HG
)@@G@@  . PUT A0 IN PACKET    @E@@@@          L,U       A0,ALTPKT         . GEHH
)@@G@@T PACKET ADDRESS  @C@@@@          TZ        CARDPCH           . CPUNCH? HI
)@@G@@@C@@@@          J         PNCHALT           . YES     @E@@@@          ERHJ
)@@G@@        PRNTA$            . ALT PRINT           @C@@@@          J       HK
)@@G@@  0,X10             . EXIT    @E@@@@PNCHALT   SZ,S2     ALTPKT          HL
)@@G@@  . REMOVE LINE SKIP    @C@@@@          ER        PNCHA$            . PUHM
)@@G@@NCH IT@C@@@@          J         0,X10             . EXIT    @^@@@@ . FINHN
)@@G@@ISH HERE          @E@@@@ONSREC    SZ        ONSITE             . CLEAR PHO
)@@G@@OINTER      @G@@@@          SZ        LNPRT             . CLEAR LINE NUMHP
)@@G@@BER INDICATOR     @E@@@@          TZ        CARDPCH            . CARD PUHQ
)@@G@@NCH COMMAND?@C@@@@          J         ONSBRK             . YES    @G@@@@HR
)@@G@@          E$DIT     FTAB               . TIME AND DATE SIGN OFF         HS
)@@G@@@E@@@@          E$MSG     E33                . END PRINT ...      @E@@@@HT
)@@G@@          ER        TDATE$             . GET TIME AND DATE  @C@@@@      HU
)@@G@@    S         A0,A5              . SAVE   @C@@@@          E$DAY3    . MOHV
)@@G@@NTH DAY, YEAR           @A@@@@          E$MSGR    . AT ...        @E@@@@HW
)@@G@@          E$TIME    A5                 . TIME OF DAY        @^@@@@      HX
)@@G@@    E$DITX    .   @G@@@@          L         A0,(0212,FIMBUF)    . PRINT HY
)@@G@@IT ALTERNATELY          @G@@@@          LMJ       X10,PNTALT        . PUHZ
)@@G@@T IN ALTERNATE FILE           @G@@@@          LMJ       X10,FILELT      IA
)@@G@@  . PRINT FILE.ELEMENT NAME         @E@@@@          L         A0,(0114,FIB
)@@G@@IMBUF)   .  PRINT IT ALTERNATE@C@@@@          LMJ       X10,PNTALT      IC
)@@G@@ .          @E@@@@          L         A0,(06601,BLANKS)  . SKIP A PAGE  ID
)@@G@@      @G@@@@          LMJ       X10,PNTALT        . PRINT TO ALTERNATE FIE
)@@G@@ILE         @E@@@@          E$DIT     FTAB              . START EDIT    IF
)@@G@@      @C@@@@          L,U       R2,10             . 10 WORDS@A@@@@ASKLPSIG
)@@G@@    E$FD2     DASH .          @C@@@@          JGD       R2,ASKLPS       IH
)@@G@@  . LOOP    @^@@@@          E$DITX    .   @C@@@@          L         A0,(II
)@@G@@0326,FIMBUF)   .        @C@@@@          LMJ       X10,PNTALT       . PRIIJ
)@@G@@NT IT @C@@@@          L         A0,(0326,FIMBUF)   .        @C@@@@      IK
)@@G@@    LMJ       X10,PNTALT       . PRINT IT @G@@@@          L         A0,(IL
)@@G@@P 1,L42,E42)   . **NO CARD DECK** PLEASE RETURN @C@@@@          LMJ     IM
)@@G@@  X10,PNTALT        .         @E@@@@          L         A0,BITS(1)      IN
)@@G@@  . WAIT FOR ACTIVITY 1 @C@@@@          ER        AWAIT$            .   IO
)@@G@@      @E@@@@          L         A0,IMSAV          . GET CONTROL WORD    IP
)@@G@@@G@@@@          LMJ       X10,PRNTALT        . PRINT TO ALTERNATE FILE  IQ
)@@G@@      @E@@@@ONSBRK    E$DIT     FTAB              . BREAKPOINT FILE     IR
)@@G@@@C@@@@          E$MSG     BRKPR             .         @C@@@@          E$IS
)@@G@@FD2     ALTPKT+1          .         @^@@@@          E$DITX    .   @C@@@@IT
)@@G@@          L         A0,(3,FIMBUF)      .        @C@@@@          ER      IU
)@@G@@  CSF$               .        @E@@@@          E$DIT     FTAB            IV
)@@G@@  . FREE FILE           @C@@@@          E$MSG     FREPR             .   IW
)@@G@@      @C@@@@          E$FD2     ALTPKT+1          .         @A@@@@      IX
)@@G@@    E$DITX         .          @E@@@@          L         A0,(4,FIMBUF)   IY
)@@G@@    . FREE FILE         @C@@@@          ER        CSF$               .  IZ
)@@G@@      @C@@@@          E$DIT     FTAB              .         @E@@@@      JA
)@@G@@    TZ        CARDPCH           . PUNCH FILE?         @C@@@@          J JB
)@@G@@        SIPCH             . YES     @C@@@@          E$MSG     SYMPR     JC
)@@G@@        .         @C@@@@          J         SIPRT             .         JD
)@@G@@@E@@@@SIPCH     E$MSG     SYMCP             . SYM PUNCH           @C@@@@JE
)@@G@@SIPRT     E$FD2     ALTPKT+1          .         @^@@@@          E$MSGR  JF
)@@G@@  .   @^@@@@          E$DITX    .   @E@@@@          L         A0,(4,FIMBJG
)@@G@@UF)       . SYM FILE          @C@@@@          ER        CSF$            JH
)@@G@@   .        @E@@@@          JNZ       A0,CSFRET         . GO PRINT A0   JI
)@@G@@      @E@@@@          TNZ       CARDPCH            . CPUNCH COMMAND?    JJ
)@@G@@@E@@@@          J         NXRQ               . GET NEXT COMMAND   @I@@@@JK
)@@G@@          DL        A0,('MSG?    ')                                 . TYJL
)@@G@@PE A        @C@@@@          DS        A0,IMBUF          .         @E@@@@JM
)@@G@@          L,U       A0,TREADSEQ        . HEADING?           @C@@@@      JN
)@@G@@    ER        ATREAD$           .         @E@@@@          JZ        A0,NJO
)@@G@@XRQ           . EXIT NO MSG         @C@@@@          MSI,U     A0,4      JP
)@@G@@. CHANGE TO CHARS @E@@@@          S         A0,COUNT          . SAVE COUJQ
)@@G@@NT          @E@@@@          J         OPR2              . BEHAVE LIKE OPJR
)@@G@@R MSG @C@@@@TRAILM    L,U       A0,TREADMSG        .        @C@@@@      JS
)@@G@@    ER        ATREAD$           .         @E@@@@          LSSL      A0,1JT
)@@G@@8              . GET WORD COUNT     @C@@@@          A         A0,(0100,EJU
)@@G@@DIT14)   .        @C@@@@          S         A0,IMSAV          .         JV
)@@G@@@G@@@@          ER        EXIT$             . SAVE CONTRRL AND EXIT     JW
)@@G@@      @E@@@@FILELT    L,U       X7,OUTBL          . GET ADDRESS OF OUTBLJX
)@@G@@@E@@@@          TNOPTN    'R'               . R OPTION USES INTBL @C@@@@JY
)@@G@@          L,U       X7,INTBL          .         @E@@@@          TNOPTN  JZ
)@@G@@  'U'               . SO DOES U OPTION    @C@@@@          L,U       X7,IKA
)@@G@@NTBL          .         @E@@@@          DL        A0,0,X7           . INKB
)@@G@@TERNAL FILENAME   @E@@@@          DS        A0,FRMIMG         . FACIL$ PKC
)@@G@@KT          @C@@@@          L,U       A0,FRMIMG         .         @C@@@@KD
)@@G@@          ER        FACIL$            .         @E@@@@          E$DIT   KE
)@@G@@  FTAB              . START EDIT          @E@@@@          E$FD2     FRMIKF
)@@G@@MG+4          . QUALIFIER           @^@@@@          FIELDATA  .   @C@@@@KG
)@@G@@          E$CHAR    '*'               . *       @C@@@@          E$FD2   KH
)@@G@@  FRMIMG+2          . FILENAME@C@@@@          E$CHAR    '('             KI
)@@G@@  . (       @A@@@@          E$DECV    FRMIMG+6,,S6    @C@@@@          E$KJ
)@@G@@CHAR    ')'               . )       @C@@@@          E$CHAR    '.'       KK
)@@G@@        .  .      @G@@@@          L         A0,2,X7        . GET ELEMENTKL
)@@G@@ NAME 1ST WORD          @C@@@@          TZ        2,X7           . ZERO KM
)@@G@@      @C@@@@          TNE       A0,BLANKS         . OR BLANK@E@@@@      KN
)@@G@@    J         SNOELM            . IF CO NO ELEMENT    @C@@@@          E$KO
)@@G@@FD2     2,X7          . ELEMENT     @G@@@@          L         A0,6,X7   KP
)@@G@@     . 1ST WORD OF VERSION NAME           @C@@@@          TZ        6,X7KQ
)@@G@@           . ZERO       @C@@@@          TNE       A0,BLANKS         . ORKR
)@@G@@ BLANK@C@@@@          J         SNOVER            .         @C@@@@      KS
)@@G@@    E$CHAR    '/'               . /       @C@@@@          E$FD2     6,X7KT
)@@G@@           . VERSION    @C@@@@SNOVER    E$CHAR    '('               . ( KU
)@@G@@      @^@@@@          ASCII     .   @E@@@@          L         A1,RC     KV
)@@G@@        . GET REQUESTED CYCLE @C@@@@          A,U       A1,1            KW
)@@G@@  . ADD 1   @E@@@@          TOPTN     'U'               . IF ITS NOT A UKX
)@@G@@      @G@@@@          SZ        A1                . SET TO ZERO UNLESS IKY
)@@G@@TS...?      @C@@@@          TNOPTN    'R'               . R OPTION@G@@@@KZ
)@@G@@          L         A1,RC             . JUST RC ALONE WILL DO           LA
)@@G@@@E@@@@          L         A0,A1             . GET IT TO A1        @C@@@@LB
)@@G@@          E$DECV    . REQUESTED CYCLE           @C@@@@          E$CHAR  LC
)@@G@@  040               . )       @^@@@@SNOELM    E$DITX    .   @C@@@@      LD
)@@G@@    J         0,X10             .         @C@@@@ . THIS COMMAND PRINTS OLE
)@@G@@UT TIME AND CYCLES      @E@@@@TIME1     E$DIT     FTAB               . SLF
)@@G@@TART EDIT         @E@@@@          L,S1      X6,INTBL+9        . GET SYMBLG
)@@G@@OLIC TYPE   @E@@@@          TNOPTN    'I'               . NOT I OPTION  LH
)@@G@@      @E@@@@          L,S1      X6,OUTBL+9        . GET SYMBOLIC TYPE   LI
)@@G@@@I@@@@          L         A0,X6             . GET TYPE NUM              LJ
)@@G@@      817TM283    @I@@@@          TLE,U     A0,ELTLEN+1       . OUT OF RLK
)@@G@@ANGE?                   817TM284    @I@@@@          J         NOCTY     LL
)@@G@@        . NOPE                            817TM285    @I@@@@          E$LM
)@@G@@OCTV    .                                                   817TM286    LN
)@@G@@@I@@@@          J         YOCTY             .  FINISH                   LO
)@@G@@      817TM287    @I@@@@NOCTY     .                                     LP
)@@G@@                        817TM288    @E@@@@          E$FD1     ELT-1,X6  LQ
)@@G@@        . INSERT TYPE NAME    @I@@@@YOCTY     .                         LR
)@@G@@                                    817TM290    @E@@@@          E$SKIP  LS
)@@G@@  2                 . SKIP TWO SPACES     @^@@@@          FIELDATA  .   LT
)@@G@@@E@@@@          E$MSG     ('&-(&&&')         . FOR CYCLE          @^@@@@LU
)@@G@@          ASCII     .   @E@@@@          LMJ       X10,TIMMSG         . GLV
)@@G@@O TO ID ROUTINE   @G@@@@          LMJ       X10,FILELT        . PRINT FILW
)@@G@@LE.ELEMENT NAME         @C@@@@          FTYPE     FIMBUF,14         .   LX
)@@G@@      @C@@@@          J         NXRQ               .        @E@@@@ . THILY
)@@G@@S COMMAND ALLOWS INSERTION OF COMMENTS INTO CODE      @]@@@@DOCUMENT1 . LZ
)@@G@@@E@@@@          TZ        LCT               . IS LINE COUNT 0?    @C@@@@MA
)@@G@@          J         DOC2              . NO      @G@@@@          TYP     MB
)@@G@@  E21,L21           . TYPE ILLEGAL AT LINE 0          @C@@@@          J MC
)@@G@@        NXRQ              . RETURN  @]@@@@DOC2      . @G@@@@          SZMD
)@@G@@        DOCP              . CLEAR PERIOD SPACE INDICATOR    @E@@@@      ME
)@@G@@    LMJ       X10,GET           . GET LINE RANGE      @G@@@@          JZMF
)@@G@@        A1,NUMERR         . HAVE TO HAVE SOMETHING          @E@@@@      MG
)@@G@@    LMJ       X10,BIN           . GET VALUE LESS 1    @E@@@@          S MH
)@@G@@        A10,R9            . USE R9 FOR JGD      @E@@@@          LMJ     MI
)@@G@@  X10,GET           . COLUMN NUMBER       @E@@@@          TNZ       A1  MJ
)@@G@@              . ANY COLUMN GIVEN    @E@@@@          L,U       A1,06461  MK
)@@G@@        . ASSUME COLUMN 41    @E@@@@          LMJ       X10,BIN         ML
)@@G@@  . 1 LESS THEN VALUE   @C@@@@          S         A10,DIT2          . SAMM
)@@G@@VE    @E@@@@          LMJ       X10,GET           . GET PERIOD INDICATORMN
)@@G@@@C@@@@          JZ        A1,NOPER          . NONE    @C@@@@          TNMO
)@@G@@E,U     A1,025            . YES     @E@@@@          SNZ       DOCP      MP
)@@G@@        . SET PERIOD INDICATOR@G@@@@NOPER     SNZ       DOCCOM          MQ
)@@G@@  . SET INDICATOR FOR TYPOUT        @E@@@@          LMJ       X9,IMAGESAMR
)@@G@@V       . SAVE IMAGE          @E@@@@          SN        RC,DC1          MS
)@@G@@  . SET DELETED FLAG    @G@@@@          LMJ       X10,WRB           . WRMT
)@@G@@ITE OUT DELETED IMAGE         @E@@@@          L         X1,DIT2         MU
)@@G@@  . GET COLUMN NUMBER   @E@@@@REDOC     LXI,U     X1,1              . LOMV
)@@G@@AD INCREMENT      @C@@@@          TNZ       DOCP              . PERIOD? MW
)@@G@@@C@@@@          J         SKIPPER           . NOPE    @E@@@@          L,MX
)@@G@@U       A0,'.'            . GET PERIOD          @C@@@@          S       MY
)@@G@@  A0,IMAG80,*X1     . STORE   @C@@@@          L,U       A0,' '          MZ
)@@G@@  . BLANK   @C@@@@          S         A0,IMAG80,*X1     . STORE   @E@@@@NA
)@@G@@SKIPPER   L,U       A0,004            . INSERT STOPCODE     @C@@@@      NB
)@@G@@    S         A0,IMAG80,X1     . STORE    @C@@@@          SZ        IMAGNC
)@@G@@80+1,X1       . ZERO OUT@C@@@@          SZ        IMAG80+2,X1       . ZEND
)@@G@@RO OUT@C@@@@          SZ        IMAG80+3,X1       . ZERO OUT@C@@@@      NE
)@@G@@    SZ        IMAG80+4,X1       . ZERO OUT@C@@@@          SZ        IMAGNF
)@@G@@80+5,X1       . ZERO OUT@C@@@@          SZ        IMAG80+6,X1       . ZENG
)@@G@@RO OUT@E@@@@          L,U       A0,0,X1           . GET LENGTH          NH
)@@G@@@E@@@@          TG        A0,LENGTH         . INCREASE LENGTH     @E@@@@NI
)@@G@@          S         X1,LENGTH         . ONLY IF NECESSARY   @C@@@@      NJ
)@@G@@    LMJ       X10,PACK          . PACK IT @E@@@@          SN        RC,ANK
)@@G@@C1            . ADDED THIS CYCLE    @C@@@@          LMJ       X10,TYPOUTNL
)@@G@@        . TREAD IT@E@@@@          L         A1,BLANK2         . PAD OUT NM
)@@G@@WITH BLANKS @E@@@@          S         A1,EDIT14,A0      . AT THE END    NN
)@@G@@      @E@@@@          A,U       A0,1              . 1 MORE WORD         NO
)@@G@@@G@@@@          LMJ       X10,READIT        . DECODE EDIT14 INTO EDIT80 NP
)@@G@@      @E@@@@          L         X2,(1,0)          . INCREMENTOR         NQ
)@@G@@@E@@@@          L         R1,COUNT          . COMMENT LENGTH      @E@@@@NR
)@@G@@          L         A0,EDIT80,*X2     . GET COMMENT CHAR    @E@@@@      NS
)@@G@@    S         A0,IMAG80,X1     . PUTIINTO IMAGE       @E@@@@          TLNT
)@@G@@EM,U    X1,132            . NO MORE THAN 132    @E@@@@          JGD     NU
)@@G@@  R1,$-3            . LOOP TIL END        @C@@@@          S         X1,LNV
)@@G@@ENGTH         .         @C@@@@          LMJ       X10,PACK          .   NW
)@@G@@      @E@@@@DOCNOC    LMJ       X10,WRB           . WRITE IT OUT        NX
)@@G@@@E@@@@          SZ        DOCCOM            . CLEAR FLAG          @E@@@@NY
)@@G@@          LMJ       X10,READ          . READ NEXT           @E@@@@      NZ
)@@G@@    J         EOFC              . END OF FILE         @E@@@@          JGOA
)@@G@@D       R9,NOPER          . LOOP TIL DONE       @E@@@@          J       OB
)@@G@@  NXRQ              . NEXT COMMAND        @E@@@@DOCEOF    JN        A0,FOC
)@@G@@IEXIT         . NOT AN EOF CARD     @C@@@@          L         A5,A0     OD
)@@G@@        . SAVE A0 @E@@@@          LMJ       X9,IMAGEREC       . RECOVER OE
)@@G@@IMAGE       @E@@@@          AND,U     A5,0777            . MASK OUT SENTOF
)@@G@@INEL  @G@@@@          TNE,U     A6,'X'            . ONLY AN X WILL IGNOROG
)@@G@@E           @E@@@@          SZ        R9                . CLEAR LOOP COUOH
)@@G@@NT    @C@@@@          TLE,U     A6,'9'+1          . NUMBER? @C@@@@      OI
)@@G@@    TLE,U     A6,'1'            . NUMBER? @E@@@@          J         DOCNOJ
)@@G@@OC            . RETURN TO WRITE OUT @C@@@@          AND,U     A6,017    OK
)@@G@@        . TO OCTAL@E@@@@          L         X1,DIT2           . GET COLUOL
)@@G@@MN  #       @C@@@@          A         X1,A7             . ADD BIAS@E@@@@OM
)@@G@@          J         REDOC             . RE DOCUMENT IT      @^@@@@ . PRION
)@@G@@NT CPU TIME       @I@@@@CPT1      L         A0,(28,DITBUF)     . USE DITOO
)@@G@@TO BUFFER TO GET PCT INFO           @C@@@@          ER        PCT$      OP
)@@G@@         .        @E@@@@          L         A4,DITBUF+026     . GET QUANOQ
)@@G@@TUM COUNT   @I@@@@PRNTTIM   . ENTRY FROM TIME CHECK                     OR
)@@G@@                  817TM292    @E@@@@          DSA       A4,36           OS
)@@G@@   . SHIFT FOR DIVIDE   @E@@@@          DI,U      A4,5000               OT
)@@G@@. TO SECONDS      @E@@@@          DSA       A4,36             . SHIFT FOOU
)@@G@@R DIVIDE    @E@@@@          DI,U      A4,60             . MINS AND SECS.OV
)@@G@@      @E@@@@          A$EDIT     ETAB               . PRINT IT OUT      OW
)@@G@@@E@@@@          A$EDECV    A4                 . DECIMAL FIELDATA  @C@@@@OX
)@@G@@          A$EMSG    ('M &S&&&&')   . MESSAGE    @C@@@@          A$EDECV OY
)@@G@@   A5                . SECONDS@C@@@@          A$EMSGR    . CONTINUE MESSOZ
)@@G@@AGE         @^@@@@          A$EDITX    .  @C@@@@          TYP       IMBUPA
)@@G@@F,5           .         @C@@@@          J         NXRQ               .  PB
)@@G@@      @C@@@@SCALE1    L,U       R2,12              .        @C@@@@      PC
)@@G@@    A$EDIT     ETAB              .        @E@@@@          LMJ       X10,PD
)@@G@@GET           . GET PARAMETER       @G@@@@          JZ        A1,SCALE2 PE
)@@G@@        . IF NONE, START IN COL 1         @E@@@@          LMJ       X10,PF
)@@G@@BIN           . CONVERT TO BINARY-1 @E@@@@          L         A0,A10    PG
)@@G@@        . GET RESULT          @A@@@@          A$ESKIP    . SKIP N-1 COLSPH
)@@G@@@E@@@@          DSA       A10,36            . SHIFT FOR DIVIDE    @C@@@@PI
)@@G@@          DI,U      A10,4             . TO WORDS@E@@@@          AN      PJ
)@@G@@  A10,R2            . DECREASE BY R2      @E@@@@          SM        A10,PK
)@@G@@R2            . MAGNITUDE BACK TO R2@C@@@@SCALE2    A$EFD2    ('12345678PL
)@@G@@')      .         @G@@@@          A$EFD1    ('90  ')          . INSERT CPM
)@@G@@HARACTERS IN BUFFER     @C@@@@          JGD       R2,SCALE2         .   PN
)@@G@@      @^@@@@          A$EDITX    .  @C@@@@   DO LN132 , TYP    IMBUF,33 PO
)@@G@@       .TYPE IT   @C@@@@   DO 1-LN132 , TYP  IMBUF,18        .          PP
)@@G@@@C@@@@          J         NXRQ              .         @A@@@@           .PQ
)@@G@@ QUICK PRINT COMMAND    @E@@@@LNQ1      SNZ       LNPRT           . PRINPR
)@@G@@T LINE NUMBERS    @G@@@@QUICK1    SNZ       QUICKP          . SET QUICK PS
)@@G@@PRINT INDICATOR         @E@@@@          J         PRINT1Q            . NPT
)@@G@@OW ACT LIKE PRINT @G@@@@ . THESE COMMANDS TURN QUICK MODE ON AND OFF FORPU
)@@G@@ ALL PRINTOUT           @]@@@@ . @/       @E@@@@SEQ1      . INSERT SEQUEPV
)@@G@@NCE NUMBER AND ID IN 73:80          @E@@@@          LMJ       X3,TOPS   PW
)@@G@@          . GO TO TOP OF FILE @E@@@@          LMJ       X10,WRB         PX
)@@G@@  . WRITE OUT *SDFF*    @C@@@@          LA,U      A6,100              . PY
)@@G@@      @E@@@@          SA        A6,LIMIT            . SET INGREMENT=100 PZ
)@@G@@@E@@@@          LA,U      A8,20               . SET IMAGE=14      @E@@@@QA
)@@G@@          TNZ       DELIM               . WAS AN ID GIVEN?  @C@@@@      QB
)@@G@@    J         SEQ3                . NO    @C@@@@          LMJ       X10,QC
)@@G@@GET             . GET ID@E@@@@          JZ        A1,SYNERR           . QD
)@@G@@ERROR IF VOID     @^@@@@          FIELDATA  .   @E@@@@          L       QE
)@@G@@  A6,('000000')     . SET ID TO ZEROES    @C@@@@          L         A7,(QF
)@@G@@'00    ')     .         @^@@@@          ASCII     .   @G@@@@          LAQG
)@@G@@        A5,A1               . LEFT JUSTIFY  ID  IN FIELD    @G@@@@      QH
)@@G@@    DSL       A5,6                . OF  FIELD-DATA  ZEROS         @C@@@@QI
)@@G@@          JNZ       A5,$-1              .       @G@@@@          DS      QJ
)@@G@@  A6,IMBUF          . GET READY FOR CONVERSION        @G@@@@          L,QK
)@@G@@U       A0,2              . CONVERT 8 FD CHAR. IN IMBUF     @G@@@@      QL
)@@G@@    CONVFA    IMBUF,IMBUF       . TO 8 ASCII CHAR. IN IMBUF       @C@@@@QM
)@@G@@SEQ3      .                             .       @E@@@@          L,U     QN
)@@G@@  A10,1             . INITALIZE START     @E@@@@          LMJ       X10,QO
)@@G@@GET             . GET INCREMENT     @E@@@@          JZ        A1,SEQ4   QP
)@@G@@          . JUMP IF NONE GIVEN@G@@@@          LMJ       X10,BIN0        QQ
)@@G@@    . CONVERT  INCREMENT  TO  BINARY@I@@@@          JZ        A10,$+2   QR
)@@G@@          . IF INCREMENT=0,THEN INCREMENT=100         @E@@@@          SAQS
)@@G@@        A10,LIMIT           . STORE    INCREMENT@G@@@@          LMJ     QT
)@@G@@  X10,GET             . GET GIVEN START POINT,IF ANY  @C@@@@          LMQU
)@@G@@J       X10,BIN0            .       @C@@@@SEQ4      .                   QV
)@@G@@          .       @E@@@@          LMJ       X10,READ            . READ NQW
)@@G@@EXT IMAGE   @G@@@@          J         EOF                 . AT EOF, GO BQX
)@@G@@ACK TO TOP OF F   @I@@@@          L         A0,BLANK2         .         QY
)@@G@@                        817TM296    @I@@@@          L         A1,IL     QZ
)@@G@@       .                                  817TM297    @I@@@@          L,RA
)@@G@@U       A2,19             . 14 WORD IMAGE                   817TM298    RB
)@@G@@@I@@@@          AN        A2,A1             . MINUS ACTUAL SIZE         RC
)@@G@@      817TM299    @I@@@@          JN        A2,BLKDOU                ALRRD
)@@G@@EADY THERE              817TM300    @I@@@@          LXI,U     A1,1      RE
)@@G@@        .                                 817TM301    @I@@@@          S RF
)@@G@@        A0,IMAGE,*A1      . BLANK OUT                       817TM302    RG
)@@G@@@I@@@@          JGD       A2,$-1            .                           RH
)@@G@@      817TM303    @I@@@@BLKDOU    .                                     RI
)@@G@@                        817TM304    @E@@@@          SA        A8,IL     RJ
)@@G@@          . STORE NEW LENGTH  @C@@@@SEQ41     DL        A6,IMBUF        RK
)@@G@@  . GET ID  @E@@@@          DS        A6,IMAGE+18       . STORE IN COL 7RL
)@@G@@3-80  @G@@@@          LA        A0,(1,0)            . INITIALIZE STORE IRM
)@@G@@NDEX        @G@@@@          LA        A1,A10              . CONVERT  SEQRN
)@@G@@UENCE NUMBER      @C@@@@SEQ5      .                             .       RO
)@@G@@@G@@@@          DSL       A1,36               . TO  FIELD  DATA, AT  ENDRP
)@@G@@      @C@@@@          DI,U      A1,10               .       @C@@@@      RQ
)@@G@@    AA,U      A2,060              .       @C@@@@          EX        SEQSRR
)@@G@@,*A0            .       @A@@@@          JNZ       A1,SEQ5         @E@@@@RS
)@@G@@          LMJ       X10,WRB             . WRITE  IMAGE      @I@@@@      RT
)@@G@@    AA        A10,LIMIT           . ADD INCREMENT TO SEQUENCE NUMBER    RU
)@@G@@      @E@@@@          J         SEQ4                . GET NEXT IMAGE    RV
)@@G@@@C@@@@SEQS      .                             .       @C@@@@          S,RW
)@@G@@Q4      A2,IMAGE+19       .         @C@@@@          S,Q3      A2,IMAGE+1RX
)@@G@@9       .         @C@@@@          S,Q2      A2,IMAGE+19       .         RY
)@@G@@@C@@@@          S,Q1      A2,IMAGE+19       .         @C@@@@          S,RZ
)@@G@@Q4      A2,IMAGE+18       .         @C@@@@          S,Q3      A2,IMAGE+1SA
)@@G@@8       .         @C@@@@          S,Q2      A2,IMAGE+18       .         SB
)@@G@@@C@@@@          S,Q1      A2,IMAGE+18       .         @I@@@@          J SC
)@@G@@        $+1                 . IF THIS POINT REACHED SEQUENCE NUMBER     SD
)@@G@@@G@@@@          SZ        A10                 . IS TOO LARGE. RESET TO ZSE
)@@G@@ERO,  @A@@@@          J         SEQ41           @]@@@@ . @/       @C@@@@SF
)@@G@@          ON        EDMODE            .         @G@@@@VER1      SZ      SG
)@@G@@  BRIEF2             . ZERO BRIEF INDICATOR           @C@@@@          J SH
)@@G@@        NXRQ              .         @]@@@@ .          @E@@@@BRIEF1    SNSI
)@@G@@Z       BRIEF2          . SET BRIEF INDICATOR   @C@@@@          J       SJ
)@@G@@  NXRQ              .         @C@@@@          OFF       EDMODE          SK
)@@G@@  .         @^@@@@ . SET SAVE FOR CHANGE  @C@@@@CLIMIT1     LMJ       X1SL
)@@G@@0,GET            .      @A@@@@          LMJ       X10,BIN0        @E@@@@SM
)@@G@@        TG,U      A10,133     . TEST DATAFILE LIMIT         @C@@@@      SN
)@@G@@  J         SYNERR      . TOO BIG         @E@@@@          TNZ       A10 SO
)@@G@@               . ANY LIMIT GIVEN?   @E@@@@          LA,U      A10,SAVESTSP
)@@G@@D          . NO, USE STANDARD @C@@@@          SA        A10,SAVE2       SQ
)@@G@@   .        @E@@@@          ANA,U     A10,1        . SUB 1 FOR     *****SR
)@@G@@      @E@@@@          SA        A10,SAVE21   . SAVE2-1       *****      SS
)@@G@@@C@@@@          J         NXRQ               .        @A@@@@ . SET MAXIMST
)@@G@@UM LINE LENGTH          @E@@@@MAXLN1    LMJ       X10,GET            . GSU
)@@G@@ET NUMBER         @C@@@@          LMJ       X10,BIN0           .        SV
)@@G@@@E@@@@          TG,U      A10,132            . MORE THAN 132?     @C@@@@SW
)@@G@@          L,U       A10,132            . SORRY  @E@@@@          S       SX
)@@G@@  A10,SAVECL         . STORE IT           @C@@@@          J         NXRQSY
)@@G@@               .        @]@@@@ . SET TABS @A@@@@SET1      LA,U      A0,1SZ
)@@G@@31          @C@@@@          SZ        TAB80,A0           .        @C@@@@TA
)@@G@@          JGD       A0,$-1             .        @A@@@@          LA      TB
)@@G@@  A3,(1,0)        @C@@@@TABS      L         A8,A3             . SAVE A3 TC
)@@G@@@E@@@@          LMJ       X10,GET           . GET THE NUMBER      @G@@@@TD
)@@G@@          JZ        A1,NXRQ            . RETURN IF NO MORE NUMBERS      TE
)@@G@@@I@@@@          LMJ       X10,BIN            . CONVERT NUMBER TO BINARY TF
)@@G@@LESS ONE          @E@@@@          L         A3,A8             . RESTORE TG
)@@G@@A3          @A@@@@          TG,U      A10,132         @A@@@@          J TH
)@@G@@        BADTAB          @C@@@@          AA        A10,(1,0)          .  TI
)@@G@@      @A@@@@          SA        A10,TAB80,*A3   @A@@@@          TLE     TJ
)@@G@@  A3,A10          @C@@@@          J         $-2                .        TK
)@@G@@@E@@@@          J         TABS               . GET NEXT NUMBER    @C@@@@TL
)@@G@@BADTAB    L         A5,A3              . SAVE A3@E@@@@          A$EDIT  TM
)@@G@@   ETAB               . EDIT MODE         @E@@@@          A$EMSG     E29TN
)@@G@@                . BAD TAB:          @G@@@@          A,U       A10,1     TO
)@@G@@         . CORRECT VALUE FOR PRINTOUT     @C@@@@          A$EDECV    A10TP
)@@G@@                . NUMBER@A@@@@          A$EDITX    . END MODE     @E@@@@TQ
)@@G@@          L         A3,A5              . RESTORE A3         @E@@@@      TR
)@@G@@    TYP       IMBUF,5           . TYPE OUT MESSAGE    @E@@@@          J TS
)@@G@@        TABS               . CHECK NEXT TAB     @]@@@@  .         @^@@@@TT
)@@G@@ . SET TAB CHAR         @I@@@@TAB1      LMJ       X10,GET3              TU
)@@G@@                               ED011790   @E@@@@          LMJ       X11,TV
)@@G@@FIXCHR        . SEE IF @ OR BLANK   @C@@@@          SA        A1,THETAB TW
)@@G@@         .        @C@@@@          J         NXRQ               .        TX
)@@G@@@]@@@@SPLIT1    . @E@@@@          SZ        FILEONLY          . CLEAR FLTY
)@@G@@AG          @E@@@@          L         A8,DELIM          . SAVE DELIMITERTZ
)@@G@@ IN A9@G@@@@          LMJ       X9,RFNFIN         . READ FILE AND ELEMENUA
)@@G@@T NAME      @G@@@@          J         NOPFD             . NO ELEMENT FOUUB
)@@G@@ND ON PFS$        @G@@@@          TZ        EDXF+5            . WAS THISUC
)@@G@@ A DATA FILE?           @C@@@@          J         NOTDATA           . NOUD
)@@G@@      @C@@@@          SNZ       FILEONLY       . YES IT WAS @G@@@@      UE
)@@G@@    J         NOPFWL            . DON'T MESS AROUND WITH PFP      @G@@@@UF
)@@G@@NOTDATA   L,U       A0,XFTBL          . DELETE THE OLD ELEMENT          UG
)@@G@@@C@@@@          ER        PFD$              . DO IT!  @E@@@@PFDERR    L,UH
)@@G@@U       X9,ELMNF1         . PREPARE FOR ERROR   @C@@@@          JNZ     UI
)@@G@@  A2,ELMNF          . ERROR?  @E@@@@NOPFD     L,U       A0,XFTBL        UJ
)@@G@@  . GET NEXT WRITE LOC  @C@@@@          ER        PFWL$             .   UK
)@@G@@      @E@@@@          JNZ       A2,PFDERR         . AN ERROR IS AN ERRORUL
)@@G@@@E@@@@          S         A1,EDXF+5         . SAVE IT IN I-O PKT  @E@@@@UM
)@@G@@          S         A1,XFTBL+10       . SAVE FOR PFI        @E@@@@NOPFWLUN
)@@G@@    L         A0,(+0,W$,0,0,0,0) . LETS WRITE IT      @C@@@@          S UO
)@@G@@        A0,EDXF+3         .         @E@@@@          LMJ       X10,OPNOXFUP
)@@G@@        . OPEN THE FILE       @E@@@@          LMJ       X10,LABELX      UQ
)@@G@@  . INSERT LABEL IMAGE  @E@@@@          LMJ       X10,GET           . PIUR
)@@G@@CK ANY NUMBER     @G@@@@          JZ        A1,SPLITALL       . YOU CAN US
)@@G@@HAVE THEM ALL           @G@@@@          LMJ       X10,BIN0          . SOUT
)@@G@@ME ARE FUSSY-CONVERT          @E@@@@          S         A10,DIT1        UU
)@@G@@  . FROM DIT1 TO DIT2   @E@@@@          LMJ       X10,GET           . GEUV
)@@G@@T ANOTHER         @E@@@@          LMJ       X10,BIN0          . WE DEMANUW
)@@G@@D ANOTHER   @C@@@@          S         A10,DIT2          .         @E@@@@UX
)@@G@@          TLE       A10,DIT1          . DIT1<DIT2?          @I@@@@      UY
)@@G@@    J         LINERR            . WE NEVER LEARNED TO READ BACKWARDS    UZ
)@@G@@      @E@@@@EDSPLIT   L         A10,DIT1          . GET FIRST PLACE     VA
)@@G@@@C@@@@          GOLINE    LINERR            . GO THERE@G@@@@          L VB
)@@G@@        A10,DIT2          . WHAT'S THE DIFFERENCE?          @E@@@@      VC
)@@G@@    AN        A10,DIT1          . ITS IN A1 DIFFE     @E@@@@SPLITOUT  TNVD
)@@G@@Z       BRIEF3            . BRIEF MODE          @C@@@@          LMJ     VE
)@@G@@  X10,TYPOUT        . TYPE IT @G@@@@          TZ        SPLITDEL        VF
)@@G@@   . DELETE SPLITTED LINES?         @I@@@@          SN        RC,DC1    VG
)@@G@@        . DELETE LINES TO BE REMOVED      .           @G@@@@          TZVH
)@@G@@        SPLITDEL           . DELETE SPLITTED LINES?         @G@@@@      VI
)@@G@@    AN,U      LCT,1             . DECREMENT IMAGE COUNT           @C@@@@VJ
)@@G@@          L         A0,ICW            . SAVE ICW@C@@@@          S       VK
)@@G@@  A0,ILSAV          .         @G@@@@          LMJ       X10,WRB         VL
)@@G@@  . NOW WRITE TO THIS ONE           @E@@@@          L         A0,ILSAV  VM
)@@G@@        . RESTORE ICW         @C@@@@          S         A0,ICW          VN
)@@G@@  .         @C@@@@          SZ        DC1               .         @G@@@@VO
)@@G@@          LMJ       X10,WRBX          . WRITE TO EXTERNAL FILE          VP
)@@G@@@E@@@@          LMJ       X10,FREAD         . WE CAN SPEED READ   @E@@@@VQ
)@@G@@          J         SPLITEOF          . THAT'S ALL FOLKS    @E@@@@      VR
)@@G@@    TNZ       BRKSET            . BREAK KEY?          @E@@@@          JGVS
)@@G@@D       A10,SPLITOUT      . GO TO THE NEXT ONE  @E@@@@          SZ      VT
)@@G@@  FASTREAD          . CLEAR FASTREAD DLAG @G@@@@          LMJ       X10,VU
)@@G@@DECODE        . DECODE LAST THING READ          @E@@@@          ER      VV
)@@G@@  ERR$              . IMPOSSIBLE-I HOPE!  @G@@@@          AN,U      LCT,VW
)@@G@@1             . UNFORTUNATELY DECODE INCR LCT   @E@@@@SPLITDUN  LMJ     VX
)@@G@@  X10,CLOSOXF       . CLOSE THE FILE      @G@@@@          TZ        FILEVY
)@@G@@ONLY          . WE'RE DONE IF ONLY FILE         @C@@@@          J       VZ
)@@G@@  NXRQ              .         @G@@@@          L         A1,EDXF+5       WA
)@@G@@  . GET THE SECTOR COUNT FOR UPDATE @G@@@@          LN        A6,XFTBL+1WB
)@@G@@0          . GET SECTOR COUNT FOR UPDATE  @E@@@@          A         A6,AWC
)@@G@@1             . LENGTH OFFELEMENT   @C@@@@          S,H2      A6,XFTBL+9WD
)@@G@@           .      @E@@@@          SZ        XFTBL+8             . CLEAR WE
)@@G@@CYCLE WORD  @G@@@@          L,U       A0,CYLIM          . EXCEPT FOR CYCWF
)@@G@@LE LIMIT          @C@@@@          S,S2      A0,XFTBL+8        .         WG
)@@G@@@E@@@@          S,S6      R10,XFTBL+8        . SET 1 CYCLE SAVED  @I@@@@WH
)@@G@@          L,S1      A0,INTBL+9             . GET SYM                    WI
)@@G@@ED011830    @I@@@@          S,S1      A0,XFTBL+9        . SET ELT TYPE  WJ
)@@G@@                  ED011850    @E@@@@          ER        TDATE$          WK
)@@G@@  . GET TIME AND DATE   @G@@@@          SSC       A0,18             . DUWL
)@@G@@M FORMAT REVERSE OF TDATE$    @E@@@@          S         A0,XFTBL+11     WM
)@@G@@  . INTO PFI PACKET     @E@@@@          TZ        OUTFIL            . ASWN
)@@G@@CII OUTPUT FILE?  @E@@@@          J         UPDINS            . NO, FD OWO
)@@G@@UTPUT FILE  @E@@@@          L,S2      A0,XFTBL+5        . SET ASCII SYM WP
)@@G@@BIT   @C@@@@          OR        A0,020            .         @C@@@@      WQ
)@@G@@    S,S2      A1,XFTBL+5        .         @I@@@@          L        A1,EDWR
)@@G@@XF+5       . LOCAL                                 LOCAL    @E@@@@UPDINSWS
)@@G@@    LN,U      A0,XFTBL          . UPDATE AND INSERT   @C@@@@          ERWT
)@@G@@        PFI$              .         @C@@@@          JNZ       A2,PFDERR WU
)@@G@@        . ERROR?  @G@@@@          LMJ       X11,RELDYN        . RELEASE WV
)@@G@@DYNAMIC ASSIGN          @C@@@@          J         NXRQ              .   WW
)@@G@@      @C@@@@SPLITALL                 . BIG NUMBER           @G@@@@      WX
)@@G@@    TE,U      A8,'!'                . WAS DELIM  ON COM A !       @G@@@@WY
)@@G@@          J         SPLITREG          . NO DO A REGULAR SPLIT           WZ
)@@G@@@E@@@@          SNZ       A10            . GO TO LINE 1           @C@@@@XA
)@@G@@          GOLINE    LINERR            .         @C@@@@          L,U     XB
)@@G@@  A10,0777776       .         @E@@@@          J         SPLITOUT        XC
)@@G@@  . LET'S SPLIT HONEY!  @C@@@@SPLITREG  SNZ       DIT1           . LINE XD
)@@G@@1     @E@@@@          L         A10,LCT            . TO,BUT NOT         XE
)@@G@@@E@@@@          AN,U      A10,1              . INCLUDING          @E@@@@XF
)@@G@@          S         A10,DIT2           . CURRENT LINE       @C@@@@      XG
)@@G@@    J         EDSPLIT           . GO DO IT@^@@@@          FIELDATA  .   XH
)@@G@@@G@@@@SPLITEOF  FTYPE     DLIT('EOF FOUND   '),2                        XI
)@@G@@     .@^@@@@          ASCII     .   @I@@@@          SZ        OK        XJ
)@@G@@        . AT END OF FILE                  ED011870    @I@@@@          LMXK
)@@G@@J       X3,TOPS           . GO TO TOP                       ED011880    XL
)@@G@@@C@@@@          J         SPLITDUN          .         @E@@@@ADD1      L XM
)@@G@@        A8,DELIM          . SAVE DELIMITER IN A9@E@@@@          LMJ     XN
)@@G@@  X8,CHKEOF        . AT THE END OF FILE   @G@@@@           LMJ       X9,XO
)@@G@@RFNFIN         . READ FILE AND ELEMENT NAME     @C@@@@          J       XP
)@@G@@  ELMNF1            .         @E@@@@          L         A0,(+0,R$,0,0,0,XQ
)@@G@@0) . READ CODE TO PACKER@C@@@@          S         A0,EDXF+3         .   XR
)@@G@@      @E@@@@          L,U       A0,XFBL           . RESTORE ADDRESS     XS
)@@G@@@C@@@@          S,H1      A0,EDXF+4         .         @G@@@@          ONXT
)@@G@@        EDMODE            . ED ADDS TO END OF FILE          @G@@@@      XU
)@@G@@    TNE,U     A8,'+'            . WAS DELIMITER AFT COM A +?      @E@@@@XV
)@@G@@          J         ADHERE            . YES-ADD HERE        @G@@@@      XW
)@@G@@    INCR      BRIEF2            . DON'T PRINT LAST LINE           @E@@@@XX
)@@G@@          LMJ       X3,LAST3          . GO TO LAST LINE     @C@@@@      XY
)@@G@@    DECR      BRIEF2            . RESET   @C@@@@          OFF       EDMOXZ
)@@G@@DE            .         @G@@@@ADHERE    LMJ       X10,OPNIXF        . OPYA
)@@G@@EN FILE OR ELEMENT SDFI       @G@@@@          LMJ       X10,GET         YB
)@@G@@  . LOOK FOR LINE NUMBERS           @G@@@@          JZ        A1,ADDWHOLYC
)@@G@@        . NONE-ADD THE WHOLE THING        @E@@@@          LMJ       X10,YD
)@@G@@BIN           . CONVERT TO BINARY   @C@@@@          S         A10,DIT1  YE
)@@G@@        .         @E@@@@          LMJ       X10,GET           . GET NEXTYF
)@@G@@ NUMBER     @E@@@@          LMJ       X10,BIN           . TWO MUST BE GIYG
)@@G@@VEN   @C@@@@          S         A10,DIT2          .         @E@@@@      YH
)@@G@@    TLE       A10,DIT1          . SECOND > FIRST?     @C@@@@          J YI
)@@G@@        LINERR            . NO ERROR@G@@@@          LMJ       X10,WRB   YJ
)@@G@@        . WRITE OUT CURRENT LINE          @E@@@@          L         A10,YK
)@@G@@DIT1          . GET STARTING POINT  @E@@@@          JZ        A10,ADLN1 YL
)@@G@@         . FUDGE FOR LINE 1   @I@@@@          AN,U      A10,1           YM
)@@G@@  . MINUS 1                         ED011900    @E@@@@ADRDX     LMJ     YN
)@@G@@  X10,READXF        . READ A LINE         @E@@@@          J         FILEYO
)@@G@@OF            . END OF FILE         @G@@@@          JGD       A10,ADRDX YP
)@@G@@        . READ TILL WE GET TO START       @]@@@@ADLN1     . @E@@@@      YQ
)@@G@@    L         A10,DIT2          . GET SECOND PARAM    @E@@@@          ANYR
)@@G@@        A10,DIT1          . GET NUMBER TO COPY  @E@@@@ADDINS    LMJ     YS
)@@G@@  X10,READXF        . READ FROM FILE ADDED@E@@@@          J         FILEYT
)@@G@@OF            . END OF FILE         @I@@@@          A,U       LCT,1     YU
)@@G@@        . INCREMENT LINE COUNT            ED011920    @G@@@@          L YV
)@@G@@        A0,ICWXF          . GET IMAGE CONTROL WORD          @G@@@@      YW
)@@G@@    S         A0,ICW            . TRANSFER FOR WRB WRITE          @E@@@@YX
)@@G@@          TNZ       BRIEF3            . BRIEF MODE?         @G@@@@      YY
)@@G@@    LMJ       X10,TYPOUT        . TYPE OUT LINES AS THEY COME IN  @E@@@@YZ
)@@G@@          LMJ       X10,WRB           . WRITE OUT LINE      @E@@@@      ZA
)@@G@@    TNZ       BRKSET            . WAS BREAK KEY HIT?  @C@@@@          JGZB
)@@G@@D       A10,ADDINS        .         @E@@@@ADDUN     LMJ       X10,CLOSIXZC
)@@G@@F       . CLOSE FILE          @G@@@@          LMJ       X11,RELDYN      ZD
)@@G@@  . RELEASE DYNAMIC ASSIGN          @C@@@@          SZ        ICW       ZE
)@@G@@        .         @E@@@@          SNZ       WINHIB         . WRITE INHIBZF
)@@G@@IT          @C@@@@          SZ        LENGTH            .         @E@@@@ZG
)@@G@@          J         NXRQ              . NEXT COMMAND        @E@@@@ADDWHOZH
)@@G@@L   L,U       A10,0777776       . GET A LARGE NUMBER  @E@@@@          LMZI
)@@G@@J       X10,WRB           . WRITE OUT LINE      @E@@@@          J       ZJ
)@@G@@  ADDINS            . USE FOR COUNTING    @^@@@@          FIELDATA  .   ZK
)@@G@@@G@@@@FILEOF    FTYPE     DLIT('EOF FOUND   '),2                        ZL
)@@G@@     .@^@@@@          ASCII     .   @A@@@@          J         ADDUN     ZM
)@@G@@      @G@@@@ . THIS ROUTINE IS USED TO SEARCH FOR AN EXEC 8 FILE OR ELEMZN
)@@G@@ENT         @E@@@@ . DESIGNATION.  IF THE DESIGNATED FILE IS NOT ASSIGNEZO
)@@G@@D, AN @G@@@@ . ATTEMPT WILL BE MADE TO ASSIGN IT. THE ELEMENT NAME, VERSZP
)@@G@@ION         @E@@@@ . NAME, AND REQUESTED CYCLE ARE ISOLATED FOR USE.    ZQ
)@@G@@      @^@@@@          FIELDATA  .   @A@@@@USETPF$   '@USE ED$XF,TPF$' . ZR
)@@G@@      @^@@@@          ASCII     .   @E@@@@RFNFIN    SZ        EDXF+5    ZS
)@@G@@       . SET FAST ADD TO ZERO @G@@@@          SZ        DYNASG          ZT
)@@G@@  . CLEAR DYNAMIC ASSIGN FLAG       @E@@@@          SZ        A10       ZU
)@@G@@        . INITIATE FLAG       @G@@@@          L         A0,(3,USETPF$)  ZV
)@@G@@. RELEASE PREVIOUS USES AND USE TPF$@C@@@@          ER        CSF$      ZW
)@@G@@        .         @E@@@@          E$DIT     FTAB              . START EDZX
)@@G@@IT FOR USE  @E@@@@          E$MSG     USEIMGF           . @USE ED$XF,...ZY
)@@G@@      @E@@@@          L         A6,COUNT          . GET CHAR COUNT      ZZ
)@@G@@@G@@@@          AN,U      A6,1              . CORRECT COUNT FOR TESTING AA
)@@G@@      @G@@@@          L         X4,EDCT           . PRESENT POINTER IN EAB
)@@G@@DIT14       @G@@@@RFNLOOP   TNG       A6,X4             . IS PTR GTR THEAC
)@@G@@N TOTAL COUNT?    @I@@@@          J         RFNASGD           . YES ASSUAD
)@@G@@ME AN ELEMENT DESIGNATION           @E@@@@          L         A0,EDIT80,AE
)@@G@@X4     . GET NEXT CHAR        @E@@@@          A,U       X4,1            AF
)@@G@@  . INCREMENT           @E@@@@          TNE,U     A0,040            . ISAG
)@@G@@ IT A BLANK?      @E@@@@          J         RFNLOOP           . YES, DONAH
)@@G@@'T INSERT   @E@@@@          TE,U      A0,'.'            . IS IT A PERIODAI
)@@G@@?     @C@@@@          J         $+3               . NO      @G@@@@      AJ
)@@G@@    JZ        A10,RFNDUN+2      . TPF$ ELT WITH A PERIOD          @G@@@@AK
)@@G@@          J         RFNDUN            . YES-MUST BE END OF FILENAME     AL
)@@G@@@C@@@@          L         A1,BLANK2         .         @G@@@@          S AM
)@@G@@        A1,IMBUF          . STORE BLANKS IN IMBUF           @G@@@@      AN
)@@G@@    S,Q1      A0,IMBUF          . Q4 OF A0 => Q1 OF IMBUF         @C@@@@AO
)@@G@@          L,U       A0,1              . ONE WORD@E@@@@          CONVAF  AP
)@@G@@  IMBUF,IMBUF       . CONVERT ASCII TO FD @G@@@@          SNZ       A10 AQ
)@@G@@              . FLAG TO DENOTE INSERTED CHAR    @E@@@@          E$CHAR  AR
)@@G@@  IMBUF,,S1         . INSERT CHAR         @E@@@@          J         RFNLAS
)@@G@@OOP           . GET NEXT CHAR       @E@@@@RFNDUN    L         A0,(14,FIMAT
)@@G@@BUF)     . APPLY USE          @C@@@@          ER        CSF$            AU
)@@G@@  .         @E@@@@          S         X4,EDCT           . SAVE POINTER  AV
)@@G@@      @^@@@@          FIELDATA  .   @E@@@@          TNOASG    'ED$XF    AW
)@@G@@   '    . IS IT ASSIGNED?     @^@@@@          ASCII     .   @C@@@@      AX
)@@G@@    J         SEEIFF           . YES      @E@@@@          L         A0,(AY
)@@G@@2,ASGIMGF)     . ASSIGN IT          @C@@@@          ER        CSF$      AZ
)@@G@@        .         @C@@@@          JN        A0,FILERF            . ERRORBA
)@@G@@@C@@@@          SNZ       DYNASG            . SET FLAG@E@@@@SEEIFF    L,BB
)@@G@@U       A0,' '            . GET A BLANK         @G@@@@          TNE     BC
)@@G@@  A0,EDIT80,X4      . IS THE NEXT CHAR BLANK?         @G@@@@          J BD
)@@G@@        1,X9              . MUST HAVE MEANT FILEONLY        @A@@@@RFNASGBE
)@@G@@D   E$DITX    . END EDIT      @G@@@@          DL        A0,BLANKS       BF
)@@G@@  . BLANKS TO VERSION,CYCLE         @C@@@@          DS        A0,XFVERS BG
)@@G@@        .         @C@@@@          DS        A0,XFCYCL         .         BH
)@@G@@@E@@@@          LMJ       X10,GET2          . GET NEXT THING      @G@@@@BI
)@@G@@          JZ        A1,1,X9           . MUST HAVE MEANT FILE ONLY       BJ
)@@G@@@E@@@@          DL        A0,FIMBUF          . GET THING READ     @G@@@@BK
)@@G@@          DS        A0,XFENAME        . CALL IT THE ELEMENT NAME        BL
)@@G@@@E@@@@          L         A1,DELIM          . GET THE DELIMITER   @G@@@@BM
)@@G@@          JZ        A1,NOVERSXF       . IF ZERO NO VERSION OR CYCLE     BN
)@@G@@@C@@@@          TNE,U     A1,'('            . IS IT ( @E@@@@          J BO
)@@G@@        RFNCYC            . MUST BE CYCLE       @E@@@@          TE,U    BP
)@@G@@  A1,'/'           . START OF VERSION?    @E@@@@          J         NOVEBQ
)@@G@@RSXF          .  NO VERSION OR CYCLE@E@@@@          LMJ       X10,GET2  BR
)@@G@@        . GET NEXT THING      @C@@@@          JZ        A1,RFNEXF       BS
)@@G@@  . ERROR   @G@@@@          DL        A0,FIMBUF          . ASSUME ITS THBT
)@@G@@E VERSION         @C@@@@          DS        A0,XFVERS         . SAVE IT BU
)@@G@@@E@@@@          L         A1,DELIM          . GET THE DELIM       @C@@@@BV
)@@G@@          JZ        A1,NOCYCXF        . NO CYCLE@I@@@@          TNE,U   BW
)@@G@@  A1,' '            . BLANK?                          817TM307    @I@@@@BX
)@@G@@          J         NOCYCXF           .                                 BY
)@@G@@817TM308    @E@@@@          TE,U      A1,'('            . BEGINING OF CYBZ
)@@G@@CLE?  @E@@@@          J         RFNEXF            . NO -- ERROR         CA
)@@G@@@E@@@@RFNCYC    SZ        RELXF             . ZERO RELATIVE CYCLE @E@@@@CB
)@@G@@          L         A0,EDCT           . GET POINTER         @C@@@@      CC
)@@G@@    L         A6,EDIT80,A0      . GET CHAR@E@@@@          TNE,U     A6,'CD
)@@G@@+'            . IS IT PLUS          @C@@@@          S         A6,RELXF  CE
)@@G@@        . SET IT  @E@@@@          TNE,U     A6,'-'            . IS IT MICF
)@@G@@NUS         @C@@@@          S         A6,RELXF          . SET IT  @E@@@@CG
)@@G@@          TZ        RELXF             . WAS IT SET          @E@@@@      CH
)@@G@@    A,U       A0,1              . ADD 1 TO POINTER    @E@@@@          S CI
)@@G@@        A0,EDCT           . RESTORE POINTER     @C@@@@          LMJ     CJ
)@@G@@  X10,GET           . GET IT  @C@@@@          JZ        A1,RFNEXF       CK
)@@G@@  . ERROR   @E@@@@          LMJ       X10,BIN0          . CONVERT TO BINCL
)@@G@@ARY   @C@@@@          S         A10,XFCYCL        . SAVE    @C@@@@NOVERSCM
)@@G@@XF  . NO VERSION GIVEN OR CYCLE           @A@@@@NOCYCXF   . NO CYCLE GIECN
)@@G@@N           @E@@@@          L,U       A0,XFTBL          . GET TABLE ADD CO
)@@G@@      @C@@@@          ER        PFS$              .         @G@@@@      CP
)@@G@@    JNZ       A2,ELMNF          . IF NONZERO ELEMENT NOT FOUND    @E@@@@CQ
)@@G@@          L         A0,XFTBL+10       . GET ADDRESS         @C@@@@      CR
)@@G@@    S         A0,EDXF+5         .         @E@@@@          L,S4      A2,XCS
)@@G@@FTBL+8        . GET CYCLE           @G@@@@          S         A2,RCXF   CT
)@@G@@        . PUT IN REQUESTED CYCLE          @E@@@@          L         A1,XCU
)@@G@@FCYCL         . GET CYCLE SPECIFIED @E@@@@          TNE       A1,BLANKS CV
)@@G@@        . NONE SPECIFIED?     @C@@@@          J         1,X9            CW
)@@G@@  . RETURN  @E@@@@          TZ        RELXF             . RELATIVE CYCLECX
)@@G@@?     @C@@@@          J         RELCYX            . YES     @G@@@@      CY
)@@G@@    S         A1,RCXF           . USE THIS FOR REQUESTED CYCLE    @C@@@@CZ
)@@G@@          J         1,X9              . RETURN  @E@@@@RELCYX    L       DA
)@@G@@  A0,RELXF          . GET REL CHAR        @E@@@@          TNE,U     A0,'DB
)@@G@@+'            . IS IT PLUS?         @E@@@@          A         A2,XFCYCL DC
)@@G@@        . ADD VALUE           @E@@@@          TNE,U     A0,'-'          DD
)@@G@@  . IS IT MINUS?        @C@@@@          AN        A2,XFCYCL. SUBTRACT VADE
)@@G@@LUE   @E@@@@          L         A0,RCXF           . GET CYCLE VALUE     DF
)@@G@@@E@@@@          ANU,S6    A0,XFTBL+8        . SEE IF INVALID CYLE @C@@@@DG
)@@G@@          TG        A0,A2             .         @A@@@@          TG      DH
)@@G@@  A2,RCXF         @A@@@@          J         RCYCERR         @C@@@@      DI
)@@G@@    S         A2,RCXF           . OK      @^@@@@          J         1,X9DJ
)@@G@@@A@@@@RFNEXF    . ERROR ROUTINE           @E@@@@          TYP       E38,DK
)@@G@@L38           . ELEMENT ERROR       @C@@@@          J         RECTST    DL
)@@G@@        .         @A@@@@FILERF    . FILE DESIGNATION ERROR  @E@@@@      DM
)@@G@@    TYP       E39,L39           . FILE ERROR          @C@@@@          J DN
)@@G@@        RECTST            .         @C@@@@ELMNF     . ELEMENT NOT FOUND DO
)@@G@@BY PFS$           @C@@@@          TNE,U     A2,1              .         DP
)@@G@@@E@@@@          J         0,X9              . NOT FOUND RETURN    @C@@@@DQ
)@@G@@          TNE,U     A2,2              .         @C@@@@          J       DR
)@@G@@  ELMNF2            .         @C@@@@          TYP       E40,L40         DS
)@@G@@  .         @C@@@@          J         RECTST            .         @C@@@@DT
)@@G@@RIOERR    .  I-O ERROR ON READ OF ADD FILE      @C@@@@          TYP     DU
)@@G@@  E44,L44           .         @C@@@@          J         RECTST          DV
)@@G@@  .         @]@@@@RCYCERR   . @A@@@@          TYP       E45,L45         DW
)@@G@@@E@@@@          J         RECTST            . &&&&&&&&&           @E@@@@DX
)@@G@@ELMNF1    E$DIT     FTAB              . START EDIT          @C@@@@      DY
)@@G@@    E$MSG     E1                .         @C@@@@          E$FD2     XFENDZ
)@@G@@AME           .         @^@@@@          E$MSGR    .   @^@@@@          E$EA
)@@G@@DITX    .   @C@@@@          FTYPE     FIMBUF,10         .         @C@@@@EB
)@@G@@          J         RECTST            .         @C@@@@ELMNF2    TYP     EC
)@@G@@  E3,L3             .         @C@@@@          J         RECTST          ED
)@@G@@  .         @^@@@@          FIELDATA  .   @C@@@@ASGIMGF   '@ASG,A ED$XF'EE
)@@G@@              .         @^@@@@USEIMGF   '@USE ED$XF,&'@A@@@@FREEIMGF  '@EF
)@@G@@FREE,RA ED$XF '         @^@@@@          ASCII     .   @G@@@@RELDYN    L EG
)@@G@@        A0,(3,FREEIMGF) . FRE FILE IF DYNAMICALLY ASSIGNED  @E@@@@      EH
)@@G@@    TZ        DYNASG            . WELL, WAS IT?       @C@@@@          EREI
)@@G@@        CSF$              .         @C@@@@          SZ        DYNASG    EJ
)@@G@@        .         @C@@@@          J         0,X11             .         EK
)@@G@@@]@@@@ . @/       @A@@@@ . THIS CODE WRITES OUT UPDATED FILE@^@@@@FILE1 EL
)@@G@@    . ?           @E@@@@          TNZ       EOFMOD            . EOF MODEEM
)@@G@@?           @E@@@@          J         FIEXIT            . EOF MEANS EOF EN
)@@G@@      @G@@@@          TZ        INPUTF            . EOF'S IN EDIT TERMINEO
)@@G@@ATES        @G@@@@          JP        A0,EDIT1           . WAS IT AN @EOEP
)@@G@@F CARD?           @G@@@@FIEXIT S       R10,REEXIT           . SET REEXITEQ
)@@G@@ NONZERO-NO RECOVERY    @E@@@@          TNOPTN    'R'               . REER
)@@G@@AD ONLY OPTION?   @C@@@@          J         OEND              . YES     ES
)@@G@@@A@@@@          LMJ       X3,TOPS         @E@@@@          TZ        BRKSET
)@@G@@ET            . WAS BREAK KEY SET?  @G@@@@          J         EDIT1     EU
)@@G@@        . YES RETURN TO EDIT MODE         @E@@@@          TNOPTN    'I' EV
)@@G@@              . I OPTION?           @C@@@@          J         FIL       EW
)@@G@@        . YES     @E@@@@          TNOPTN    'U'               . U OPTIONEX
)@@G@@?           @C@@@@          J         UPE                .YES     @I@@@@EY
)@@G@@          TNOPTN    'T'               . NEW ELEMENT WITH TRANSFER CYCLE EZ
)@@G@@ED011940    @I@@@@          J         LSVCLS            . YES           FA
)@@G@@                  ED011950    @C@@@@FIL       LX,U      X1,ADE         .FB
)@@G@@ ADD        @]@@@@FILE2     . @A@@@@          LA,U      A0,OUTBL        FC
)@@G@@@G@@@@          LMJ       X10,PFWL           . GET NEXT WRITE ADDRESS OFFD
)@@G@@ PF   @A@@@@          SA        A1,OUTBL+10     @A@@@@          SA      FE
)@@G@@  A1,COPOUT+3     @A@@@@          DL        A0,OUTBL        @A@@@@      FF
)@@G@@    DS        A0,EDOUT        @E@@@@          LMJ       X10,OPNO        FG
)@@G@@   . OPEN OUTPUT        @G@@@@          AA,U      RC,1               . IFH
)@@G@@NCREMENT REQUESTED CYCLE      @G@@@@          LA        A6,LC           FI
)@@G@@   . CALACULATE OLDEST CYCLE NUMBER @E@@@@          AA,U      A6,1      FJ
)@@G@@         . (OC=LC+1-CC)       @C@@@@          AN        A6,CC           FK
)@@G@@   .        @E@@@@          TZ        OUTFIL            . OUTPUT FILE FDFL
)@@G@@?     @G@@@@          SZ        AC                . S6 OF ICW = 0 FOR FDFM
)@@G@@ FILE       @C@@@@PUT       .                            .        @E@@@@FN
)@@G@@          L         A0,CONCODE        . GET S1 OF ICW       @G@@@@      FO
)@@G@@    TE,U      A0,060            . PRINT CONTROL CODE 60?          @C@@@@FP
)@@G@@          J         PUT2              . NO      @G@@@@          TNZ     FQ
)@@G@@  OUTFIL            . OUTPUT FILE FIELDATA?           @E@@@@          J FR
)@@G@@        PUT2              . NO, ASCII           @G@@@@          SZ      FS
)@@G@@  AC                . S6 OF ICW => 0 FOR FD           @E@@@@          L FT
)@@G@@        A0,IL             . GET IMAGE LENGTH    @E@@@@          CONVAF  FU
)@@G@@  IMAGE,IMAGE       . ASCII TO FD         @G@@@@          IL23      IL  FV
)@@G@@              . CHANGE IMAGE LENGTH FOR FD      @]@@@@PUT2      . @E@@@@FW
)@@G@@          LMJ       X10,WRB            . WRITE IMAGE        @]@@@@GETIM FX
)@@G@@    . @E@@@@          SZ        WINHIB            . CLEAR WRITE INHIBIT FY
)@@G@@@A@@@@          LA,U      A0,EDIN         @A@@@@          LMJ       X11,FZ
)@@G@@SDFI        @A@@@@          J         IOERRA          @E@@@@          J GA
)@@G@@        0,X1               . END-OF-FILE RETURN @E@@@@          TP      GB
)@@G@@  ICW                . LABEL IMAGE?       @E@@@@          J         PUT GC
)@@G@@               . YES, PUT IMAGE OUT @E@@@@          TNZ       OUTFIL    GD
)@@G@@        . OUTPUT FILE FD?     @E@@@@          J         1,X1            GE
)@@G@@  . NO, ASCII - RETURN  @E@@@@          L         A0,IL             . IMGF
)@@G@@AGE LENGTH        @E@@@@          CONVAF    IMAGE,IMAGE       . CONVERT GG
)@@G@@ASCII TO FD @G@@@@          IL23      IL                . CHANGE IMAGE LGH
)@@G@@ENGTH FOR FD      @C@@@@          J         1,X1               . RETURN GI
)@@G@@@]@@@@ADE       . @A@@@@          J         ADEOF           @G@@@@      GJ
)@@G@@    TNZ       DC1               . WAS IMAGE DELETED BY ED         @E@@@@GK
)@@G@@          TZ        DC                 . OR PREVIOUSLY ?    @A@@@@      GL
)@@G@@    J         GETIM           @C@@@@          SZ        AC              GM
)@@G@@   .        @^@@@@          SZ        AC1 @^@@@@          SZ        DC1 GN
)@@G@@@C@@@@          J         PUT                .        @]@@@@ADEOF     . GO
)@@G@@@G@@@@          LMJ       X10,PFI            . INSERT ELEMENT IN PF     GP
)@@G@@      @C@@@@          J         END0               .        @]@@@@UPE   GQ
)@@G@@    . @C@@@@       LR,U        R1,014      . COPY 12 WRDS   @C@@@@      GR
)@@G@@ LA          A1,(1,INTBL)  . INTBL        @C@@@@       LA          A0,(1GS
)@@G@@,OUTBL)  . TO OUTBL     @C@@@@       BT          A0,0,*A1      . DO IT  GT
)@@G@@      @I@@@@ACTLIKU         TZ        DOPT               . D OPTION ON? GU
)@@G@@            ED011970    @E@@@@          J         FIL                . YGV
)@@G@@ES, DON'T DO A U  @E@@@@          SZ        R5                . CLEAR FLGW
)@@G@@AG          @G@@@@          TE,U      RC,62             . IS THE GUY CYCGX
)@@G@@LE CRAZY?         @G@@@@          J         NOT63             . NO HE DOGY
)@@G@@ESN'T WANT 63TH         @G@@@@. NOTE THAT THE COMMENTS IN THE FOLLOWING GZ
)@@G@@CODE ASSUME A CYCLE LIMIT     @E@@@@. OF 5.  THE CODE WILL HANDLE ANY CYHA
)@@G@@CLE LIMIT HOWEVER.      @E@@@@          SNZ       R5             . SAY HHB
)@@G@@E WANTS 63        @E@@@@          L         A2,CL             . GET THE HC
)@@G@@CYCLE LIMIT @I@@@@          AN,U      A2,2              . DEC BECAUSE RCHD
)@@G@@ GETS INCRED      ED011990    @G@@@@          L         RC,A2           HE
)@@G@@  . USE CYCLE LIM AS REQUEST CYCLE  @C@@@@          S         A2,LC     HF
)@@G@@        .         @C@@@@ . WE'RE EVEN GOING TO SAVE THE EARLIER ONES    HG
)@@G@@@A@@@@NOT63     LMJ       X1,FILE2        @A@@@@          J         UPEOHH
)@@G@@F           @E@@@@          TNZ       R5                . IS THIS THE 63HI
)@@G@@ GUY  @C@@@@          J         TISNOT            . TIS NOT!@I@@@@      HJ
)@@G@@    L         A2,AC             . MAKE ACTUAL CYCLE LOOK LIKE 58 LESS   HK
)@@G@@      @I@@@@          AN,U      A2,64             . 62=4,61=3,60=2,59=1,HL
)@@G@@58=0 MOD 58 ED012010    @C@@@@          A         A2,CL             .   HM
)@@G@@      @I@@@@          TNE,XU    A2,-1             . CYCLE -1            HN
)@@G@@            ED012030    @I@@@@          SZ        A2                . SEHO
)@@G@@T TO CYCLE 0                  ED012040    @E@@@@          S         A2,AHP
)@@G@@C             . NEW MATH!           @G@@@@          L         A2,DC     HQ
)@@G@@        . DUMMY UP DELETED CYCLE TOO      @G@@@@          JZ        A2,THR
)@@G@@ISNOT         . DON'T MESS IF NOT DELETED       @I@@@@          AN,U    HS
)@@G@@  A2,64             . 62=4,61=3,60=2,59=1,58=0 MOD 58 ED012060    @I@@@@HT
)@@G@@          A         A2,CL             .                                 HU
)@@G@@ED012070    @I@@@@          TZ        A2                . DELETED IN CYCHV
)@@G@@LE 0              ED012080    @I@@@@          TNE,XU    A2,-1           HW
)@@G@@  . CYCLE -1                        ED012090    @I@@@@          J       HX
)@@G@@  GETIM             . THROW AWAY                      ED012100    @C@@@@HY
)@@G@@          S         A2,DC             .         @G@@@@TISNOT    TZ      HZ
)@@G@@  AC1               . IMAGE ADDED THIS CYCLE?         @E@@@@          SAIA
)@@G@@        RC,AC              . YES,SET AC         @G@@@@          TZ      IB
)@@G@@  DC1               . WAS IMAGE DELETED BY ED         @A@@@@          SAIC
)@@G@@        RC,DC           @E@@@@          L         A0,AC             . GEID
)@@G@@T THE ADDED CYCLE @E@@@@          TNE       A0,DC             . DELETED IE
)@@G@@=ADDED?     @G@@@@          JNZ       A0,GETIM          . THROWAWAY IF NIF
)@@G@@OT ZERO           @E@@@@          SZ        AC1               . CLEAR THIG
)@@G@@ESE THINGS  @C@@@@          SZ        DC1               .         @A@@@@IH
)@@G@@          LA        A0,CL           @A@@@@          TE        A0,CC     II
)@@G@@      @E@@@@          J         PUT                . NO, PUT OUT IMAGE  IJ
)@@G@@@I@@@@          TLE       A6,AC              . WAS IMAGE ADDED AT OLDESTIK
)@@G@@ CYCLEED012120    @E@@@@          J         PUT                . NO, PUTIL
)@@G@@ OUT IMAGE  @G@@@@          AU,U      A6,1               . WAS IMAGE DELIM
)@@G@@ETED AT           @E@@@@          TNE       A7,DC              . NEXT OLIN
)@@G@@DEST CYCLE? @A@@@@          J         GETIM           @E@@@@          SAIO
)@@G@@        A7,AC              . SET AC=AC+1        @C@@@@          J       IP
)@@G@@  PUT                .        @I@@@@LSVCLS    DL        A0,INTBL+8      IQ
)@@G@@  . TRANS CYCLE STUFF               ED012140    @I@@@@          DS      IR
)@@G@@  A0,OUTBL+8        .                                 ED012150    @I@@@@IS
)@@G@@          J         ACTLIKU           .                                 IT
)@@G@@ED012160    @]@@@@UPEOF     . @G@@@@          SA        RC,LC           IU
)@@G@@   . SET LATEST CYLE=RC+1           @C@@@@          LA        A0,CC     IV
)@@G@@         .        @G@@@@          TE        A0,CL              . DOES CYIW
)@@G@@CLE LIMIT= CYCLE COUNT  @^@@@@          AA,U      A0,1@C@@@@          SAIX
)@@G@@        A0,CC              .        @A@@@@          LMJ       X10,PFUP  IY
)@@G@@      @]@@@@END0   .    @E@@@@          A$EDIT     ETAB         . START IZ
)@@G@@EDIT MODE         @E@@@@          A$EMSG     E12           . LINES FILEDJA
)@@G@@: ...       @E@@@@          A$EDECV   LCTSV             . NUMBER OF LINEJB
)@@G@@S     @C@@@@          A$ECHAR   ' '               .         @E@@@@      JC
)@@G@@    TZ        OUTFIL            . OUTPUT FILE ASCII?  @E@@@@          J JD
)@@G@@        ENDFD             . NO, FIELDATA        @C@@@@          A$EFD2  JE
)@@G@@  ('ASCII   ')      .         @C@@@@          J         ENDTYP          JF
)@@G@@  .         @C@@@@ENDFD     A$EFD2    ('FIELDATA')      .         @]@@@@JG
)@@G@@ENDTYP    . @^@@@@          A$EDITX       @E@@@@          TYP       IMBUJH
)@@G@@F,12          . TYPE MESSAGE        @E@@@@          ON        INSTAT    JI
)@@G@@         . INTERNAL STATISTICS@E@@@@          L,U       A0,1            JJ
)@@G@@   . NORMAL EXIT        @C@@@@          LMJ       X9,STATOUT         .  JK
)@@G@@      @C@@@@          OFF       INSTAT             .        @I@@@@ENDFREJL
)@@G@@    .                                                             817TM3JM
)@@G@@10    @E@@@@          L         A0,(3,FEDS1A)     . FREE 1ST ASSIGN     JN
)@@G@@@G@@@@          TZ        EDS1A             . ONLY IF ED ASSIGNED IT    JO
)@@G@@      @C@@@@          ER        CSF$              .         @E@@@@      JP
)@@G@@    L         A0,(3,FEDS2A)     . DITTO WITH SECOND   @G@@@@          TZJQ
)@@G@@        EDS2A             . ONLY IF ED ASSIGNED IT          @C@@@@      JR
)@@G@@    ER        CSF$              .         @G@@@@          L         A0,(JS
)@@G@@3,UNUSE1)     . RELEASE USE NAME AT LEAST       @C@@@@          ER      JT
)@@G@@  CSF$              .         @G@@@@          L         A0,(3,UNUSE2)   JU
)@@G@@  . RELEASE USE NAME AT LEAST       @C@@@@          ER        CSF$      JV
)@@G@@        .         @C@@@@          SZ        A0                .         JW
)@@G@@@E@@@@          TNZ       MEMORY            . REMEMBER MODES?     @G@@@@JX
)@@G@@          J         CLRSE$            . CLEAR SETC$ CONDITION WORD      JY
)@@G@@@G@@@@          L         A0,BITS(11)       . THIS BIT USED AS A CHECK  JZ
)@@G@@      @C@@@@          TZ        QUICKON           . QUICK=0 @C@@@@      KA
)@@G@@    A         A0,BITS(0)        .         @C@@@@          TZ        BRIEKB
)@@G@@F2            . BIREF=1 @C@@@@          A         A0,BITS(1)        .   KC
)@@G@@      @C@@@@          TZ        ALLLN             . ALLLN=2 @C@@@@      KD
)@@G@@    A         A0,BITS(2)        .         @E@@@@          TZ        RECPKE
)@@G@@CNT           . RECPCNT=3           @C@@@@          A         A0,BITS(3)KF
)@@G@@        .         @C@@@@          TZ        SPLITDEL          . 4       KG
)@@G@@@C@@@@          A         A0,BITS(4)        .         @C@@@@          TZKH
)@@G@@        BRIEF3            . 5       @C@@@@          A         A0,BITS(5)KI
)@@G@@        .         @C@@@@          TZ        TYPESEQ           . 6       KJ
)@@G@@@C@@@@          A         A0,BITS(6)        .         @E@@@@          TZKK
)@@G@@        LKMAIL            . LOOK FOR MAIL       @C@@@@          A       KL
)@@G@@  A0,BITS(7)        .         @E@@@@          TZ        EOFMOD          KM
)@@G@@  . EOF MODE?           @C@@@@          A         A0,BITS(8)        .   KN
)@@G@@      @E@@@@          TZ        UNIMOD            . UNISCOPE MODE       KO
)@@G@@@C@@@@          A         A0,BITS(9)        . SET IT  @E@@@@CLRSE$    ERKP
)@@G@@        SETC$             . SET CONDITION WORD  @E@@@@          SZ      KQ
)@@G@@  A0                . CLEAR CONTINGENCYS  @I@@@@          L         A0,(KR
)@@G@@2,FREMF)      . FEE MF$$ USE NAME               817TM313    @I@@@@      KS
)@@G@@    ER        CSF$              .                                 817TM3KT
)@@G@@14    @I@@@@          ON                          .                     KU
)@@G@@               LOCAL    @I@@@@          TNZ       ERR$X             . TEKV
)@@G@@ST ERROR INDICATOR            817TM317    @I@@@@          OFF           KW
)@@G@@              .                                    LOCAL    @I@@@@      KX
)@@G@@    TZ        ERR$X             .                                    LOCKY
)@@G@@AL    @I@@@@          J         ERREXT            .                     KZ
)@@G@@               LOCAL    @I@@@@          L         A0,(3,FRSAVT)     .   LA
)@@G@@                                 LOCAL    @I@@@@          ER        CSF$LB
)@@G@@              . FREE ED$TB FILE IF NORMAL EXIT     LOCAL    @I@@@@      LC
)@@G@@    L         A0,(3,FRSAVA)     . FREE  ED$TA                        LOCLD
)@@G@@AL    @I@@@@          ER        CSF$              .                     LE
)@@G@@               LOCAL    @^@@@@          SZ        A0  @A@@@@          J LF
)@@G@@        RETURN          @I@@@@          ON                          .   LG
)@@G@@                                 LOCAL    @G@@@@          TNOPTN    'X' LH
)@@G@@              . X OPTION MEANS ERR$ IF ERROR    @I@@@@          OFF     LI
)@@G@@                    .                                    LOCAL    @I@@@@LJ
)@@G@@ERREXT    TNOPTN    'X'               .                                 LK
)@@G@@   LOCAL    @E@@@@          ER        ERR$                . TAKE ERROR ELL
)@@G@@XIT   @^@@@@          LA,U      A0,1@ @@@@          J         RETURN    LM
)@@G@@@]@@@@RETURN.     @^@@@@          LA,U      A0,1@^@@@@          ER      LN
)@@G@@  PSR$@A@@@@          LX        X11,SAVEX11     @ @@@@          J       LO
)@@G@@  0,X11     @]@@@@ . @/       @^@@@@ . GO TO TOP OF FILE    @G@@@@TOP1  LP
)@@G@@    LX,U      X3,NXRQ            . ENTRY POINT FROM 'TOP' COMMAND @C@@@@LQ
)@@G@@TOPS      .         .                   .       @E@@@@          LMJ     LR
)@@G@@  X1,BOT2             . GO TO BOTTOM      @G@@@@TOPS2     S    LCT,LCTSVLS
)@@G@@           . SAVE LCT FOR POSSIBLE EXIT.        @E@@@@          LMJ     LT
)@@G@@  X10,CLOSO          . CLOSE OUTPUT FILE  @E@@@@          LMJ       X10,LU
)@@G@@CLOSI          . CLOSE INPUT FILE   @C@@@@          DL        A0,EDIN   LV
)@@G@@         .        @E@@@@          TZ        ADSAVE             . WAS NAMLW
)@@G@@E SAVED?    @E@@@@          DL        A0,ADSAVF          . YES LOAD SAVELX
)@@G@@D FILE@E@@@@          DL        A2,EDOUT            . LOAD OUTPUT FILE  LY
)@@G@@@E@@@@           DS        A2,EDIN             . SWITCH  INPUT AND@E@@@@LZ
)@@G@@          DS        A0,EDOUT            . OUTPUT  NAMES     @E@@@@      MA
)@@G@@    SNZ       OK              . NOT AT END OF FILE    @E@@@@          ONMB
)@@G@@        INSTAT             . STATISTICS         @E@@@@          L,H2    MC
)@@G@@  A0,STATBUF+5       . INCR TOP COUNT     @C@@@@          A,U       A0,1MD
)@@G@@               .        @C@@@@          S,H2      A0,STATBUF+5       .  ME
)@@G@@      @E@@@@          S         LCT,STATBUF+2      . LENGTH IN IMAGES   MF
)@@G@@@E@@@@          L         A0,EDOUT+5         . LENGTH IN SECTORS  @C@@@@MG
)@@G@@          A,U       A0,1               .        @E@@@@          MSI,U   MH
)@@G@@  A0,28              . TO WORDS           @C@@@@          S         A0,SMI
)@@G@@TATBUF+3       . LENGTH @C@@@@          OFF       INSTAT             .  MJ
)@@G@@      @I@@@@          SZ        LCT               . ZERO LINE COUNT     MK
)@@G@@            817TM320    @G@@@@PINGPONG  SZ        LCT                 . ML
)@@G@@INITIALIZE LINE COUNT         @^@@@@          SZ        IC  @C@@@@      MM
)@@G@@    SZ        LENGTH              .       @E@@@@          SZ        ADSAMN
)@@G@@VE              . TURN OFF SWITCH   @G@@@@          SZ        COPOUT+3  MO
)@@G@@          . SET OUTPUT FILE TO WRITE AT 0 @G@@@@          SZ        COPIMP
)@@G@@N+3             . SET INPUT  FILE TO READ  AT 0 @E@@@@          TZ      MQ
)@@G@@  MCRD$             . MCORE DONE YET?     @G@@@@          J         NOMCMR
)@@G@@R             . YES-CAN'T DO ANY MORE           @E@@@@          L,U     MS
)@@G@@  A0,1750           . MCORE IF 1750 LINES @B@@@@          TG        A0,LMT
)@@G@@CTSV          .   @F@@@@          J         NOMCR             . YES-CAN'MU
)@@G@@T DO ANY MORE     @^@@@@          FIELDATA .    @B@@@@          P$RINT  MV
)@@G@@  (PFFF 1,7,TOOBIG)     @^@@@@          LA,U      A0,2@ @@@@          J MW
)@@G@@        RETURN    @ @@@@PFFF      FORM      12,6,18   @D@@@@TOOBIG    'PMX
)@@G@@ROC ELEMENT CANNOT BE OVER 1750 LINES'    @^@@@@          ASCII .       MY
)@@G@@@]@@@@NOMCR     . @C@@@@          LMJ       X10,OPNI            .       MZ
)@@G@@@C@@@@          LMJ       X10,OPNO            .       @E@@@@          SZNA
)@@G@@        WINHIB            . CLEAR WRITE INHIBIT @E@@@@          TNZ     NB
)@@G@@  AUTOTST           . AUTO SAVE MODE?     @C@@@@          J         0,X3NC
)@@G@@                .       @E@@@@          DL        A0,EDOUT          . GEND
)@@G@@T OUTPUT FILENAME @^@@@@          FIELDATA  .   @E@@@@          DTE     NE
)@@G@@  A0,('ED$TB       ') . IS IT SAVE FILE   @^@@@@          ASCII     .   NF
)@@G@@@C@@@@          J         0,X3              . NOPE    @C@@@@          J NG
)@@G@@        TOPS              . YES     @G@@@@ . THIS COMMAND GOES TO THE ENNH
)@@G@@D OF TEXT AND ENTERS INPUT MODE           @A@@@@APP1      LX,U      X1,INI
)@@G@@NPUT2       @]@@@@BOT2      . @A@@@@          LMJ       X10,PACK        NJ
)@@G@@@A@@@@          LMJ       X10,WRB         @C@@@@          SZ        LENGNK
)@@G@@TH             .        @C@@@@          TNZ       OK                 .  NL
)@@G@@      @^@@@@          J         0,X1@A@@@@          LMJ       X10,FREAD NM
)@@G@@      @^@@@@          J         $+3 @A@@@@          LMJ       X10,WRB   NN
)@@G@@      @^@@@@          J         $-3 @E@@@@          SZ        FASTREAD  NO
)@@G@@        . NO MORE READ FASTS  @^@@@@          SZ        ICW @E@@@@      NP
)@@G@@    SNZ       WINHIB         . WRITE INHIBIT          @E@@@@          SZNQ
)@@G@@        OK                . AT THE END          @^@@@@          J       NR
)@@G@@  0,X1@]@@@@ . @/       @G@@@@TYPEIN    .                            . TNS
)@@G@@HIS ROUTINE UNPACKS THE EDIT  @I@@@@                                    NT
)@@G@@   . IMAGE AND STRIPS OFF TRAILING BLANKS.      @C@@@@          SZ      NU
)@@G@@  INCONT            .         @E@@@@          TNZ       AUTOTST         NV
)@@G@@   . AUTOSAVE?          @C@@@@          J         NOTAUTO            . NNW
)@@G@@O     @E@@@@          INCR      AUTOCNT            . INCREMENT AUTOCOUNTNX
)@@G@@@G@@@@          TG        A0,AUTOTST         . COMPARE AUTOCNT, AUTOTST NY
)@@G@@      @E@@@@          J         AUTOSAV            . AUTOCNT=>AUTOTST   NZ
)@@G@@@G@@@@NOTAUTO   SZ        COUNT              . THIS ONE WORKS FOR CARDS OA
)@@G@@ONLY  @E@@@@          TZ        DEMAND              . DEMAND MODE?      OB
)@@G@@@E@@@@          J         TREADIT             . YES, USE TREAD$   @A@@@@OC
)@@G@@          LA        A0,TREADSEQ+1   @E@@@@          TZ        RLSTCD    OD
)@@G@@        . READ LAST CARD?     @E@@@@          LMJ       X11,GLCRD       OE
)@@G@@  . GO GET IT           @C@@@@          ER        AREAD$            . REOF
)@@G@@AD IT @A@@@@          J          READIT         @E@@@@TREADIT   A$EDIT  OG
)@@G@@   ETAB               . START EDIT MODE   @E@@@@          TNZ       INCOOH
)@@G@@NT            . CONTINUATION?       @C@@@@          J         TNOCONT   OI
)@@G@@        . NO      @E@@@@          A$ECHAR    '+'               . YES INSOJ
)@@G@@ERT +       @G@@@@TNOCONT   TZ        ONNLINE            . NEXT LINE INPOK
)@@G@@UT TYPE?          @C@@@@          J         PLUSMODE           . YES    OL
)@@G@@@G@@@@          TNZ       TYPESEQ            . TYPE OUT SEQUENCE NUMS?  OM
)@@G@@      @C@@@@          J         NOSEQ              . NO     @E@@@@      ON
)@@G@@    L         A0,LCT             . GET LINE COUNT     @E@@@@          TZOO
)@@G@@        INPUTF             . INPUT MODE?        @I@@@@          A,U     OP
)@@G@@  A0,1               . ADJUST TO SHOW WHERE WILL BE INSERTED      @C@@@@OQ
)@@G@@          A$EDECV   . CONVERT TO DECIMAL ASCII  @E@@@@NOSEQ     TNZ     OR
)@@G@@  INPUTF             . INPUT MODE?        @C@@@@          J         INSROS
)@@G@@TAS             . YES   @E@@@@          A$ECHAR    'I'                . OT
)@@G@@INPUT MODE        @E@@@@INSRTAS   TNZ       TYPESEQ            . SEQUENCOU
)@@G@@E NUMBER?   @C@@@@          J         INSRST             . NO     @E@@@@OV
)@@G@@          A$ECHAR    ':'                . USE COLON         @E@@@@      OW
)@@G@@    J         STOPQ              . GO PUT IN STOP CHAR@E@@@@INSRST    A$OX
)@@G@@ECHAR    '*'                . USE ASTERISK      @]@@@@STOPQ     . @E@@@@OY
)@@G@@   DO DCT5=0 , A$ECHAR  004           . INSERT STOP CODE    @E@@@@      OZ
)@@G@@    A$EDITX                     . TERMINATE EDIT      @E@@@@LTYPEIN   L,PA
)@@G@@U       A0,TREADSEQ        . LOAD PACKET ADDRESS@E@@@@          TZ      PB
)@@G@@  RLSTCD            . CARD WAITING?       @C@@@@          LMJ       X11,PC
)@@G@@GLCRD         . GET IT  @E@@@@          ER        ATREAD$           . ASPD
)@@G@@CII TREAD         @A@@@@READIT         .  INPUT READ        @E@@@@      PE
)@@G@@    L         A4,A0             . GET THIS WORD COUNT @E@@@@          TZPF
)@@G@@        INCONT            . CONTINUATION?       @G@@@@          A       PG
)@@G@@  A0,EDIL           . ADD PREVIOUS IMAGE LENGTH       @A@@@@          S PH
)@@G@@        A0,EDIL         @E@@@@          TOPTN     'L'                . EPI
)@@G@@ OPTION           @C@@@@          J         NOEOPT             . NOPE   PJ
)@@G@@@C@@@@          L         A0,(ECHOIN,0101)  .         @E@@@@          A PK
)@@G@@        A0,EDIL           . ADD WORD COUNT      @G@@@@          SSC     PL
)@@G@@  A0,18             . SHIFT FOR PROPER PRINT$ PACKET  @G@@@@          ERPM
)@@G@@        APRINT$           . ECHO INPUT IF E OPTION ON       @^@@@@NOEOPTPN
)@@G@@    TNZ       EDIL@A@@@@          J         0,X10           @A@@@@      PO
)@@G@@    LA        A0,(1,0)        @A@@@@          LA        A1,(1,0)        PP
)@@G@@@E@@@@          TZ        INCONT            . CONTINUATION        @G@@@@PQ
)@@G@@          LXM       A1,INCONT         . USE VALUE SAVED IN FLAG         PR
)@@G@@@A@@@@          LA        A2,(1,1)        @A@@@@CARD1     EX        CLOAPS
)@@G@@D,*A0       @G@@@@          TNZ       CASEUP            . UPPER CASE ASCPT
)@@G@@II CONVERSION?    @C@@@@          J         NOUPPER           . NO      PU
)@@G@@@G@@@@          TLE,U     A3,0173           . YES, IS CHAR LOWER CASE ASPV
)@@G@@CII?  @C@@@@          TLE,U     A3,0141           .         @C@@@@      PW
)@@G@@    J         NOUPPER           . NO      @G@@@@          AN,U      A3,0PX
)@@G@@40            . YES, MAKE UPPER CASE ASCII      @G@@@@          EX      PY
)@@G@@  CSTORE-1,A0       . RESTORE AS UPPER CASE IN EDIT14 @E@@@@NOUPPER   TNPZ
)@@G@@E       A3,CONTCHAR       . CONTINUATION CHAR?  @C@@@@          J       QA
)@@G@@  CONTIN            . YES     @E@@@@          TNE      A3,CHGCHR        QB
)@@G@@ . IS IT EXCHANGE CHAR  @E@@@@          L         A3,NCHGCHR        . YEQC
)@@G@@S-REPLACE IT      @A@@@@          SA        A3,EDIT80,*A1   @A@@@@      QD
)@@G@@    TE,U      A3,040          @A@@@@          S         A1,COUNT        QE
)@@G@@@A@@@@          J         CARD1           @G@@@@CONTIN    TZ        INCOQF
)@@G@@NT            . ONLY ONE CONTINUATION ALLOWED   @C@@@@          J       QG
)@@G@@  0,X10             .         @E@@@@          S         A1,INCONT       QH
)@@G@@  . SAVE A1 AND SET FLAG@E@@@@          J         NOTAUTO           . REQI
)@@G@@AD NEXT LINE      @]@@@@CLOAD     . @C@@@@          L,Q1      A3,EDIT14-QJ
)@@G@@1,A2    .         @C@@@@          L,Q2      A3,EDIT14-1,A2    .         QK
)@@G@@@C@@@@          L,Q3      A3,EDIT14-1,A2    .         @C@@@@          L,QL
)@@G@@Q4      A3,EDIT14-1,A2    .         @^@@@@          J         $+1 @A@@@@QM
)@@G@@          LA        A0,(1,0)        @A@@@@          TLEM      A2,A4     QN
)@@G@@      @A@@@@          J         CARD1           @A@@@@          J       QO
)@@G@@  0,X10           @]@@@@CSTORE    . @C@@@@          S,Q1      A3,EDIT14-QP
)@@G@@1,A2    .         @C@@@@          S,Q2      A3,EDIT14-1,A2    .         QQ
)@@G@@@C@@@@          S,Q3      A3,EDIT14-1,A2    .         @C@@@@          S,QR
)@@G@@Q4      A3,EDIT14-1,A2    .         @E@@@@PLUSMODE  A$ECHAR    '+'      QS
)@@G@@          . USE A PLUS        @E@@@@          J         STOPQ           QT
)@@G@@   . GO USE STOP CODE   @E@@@@GLCRD     L         A0,LLSTCD         . GEQU
)@@G@@T LENGTH          @C@@@@GCLOOP    JGD       A0,MVLCD          . MOVE EM QV
)@@G@@@E@@@@          L         A0,LLSTCD         . LENGTH TO A0        @E@@@@QW
)@@G@@          SZ        RLSTCD            . CLEAR FLAG          @E@@@@      QX
)@@G@@    J         1,X11             . RETURN PAST READ    @C@@@@MVLCD     L QY
)@@G@@        A1,ILSTCD,A0      .         @C@@@@          S         A1,EDIT14,QZ
)@@G@@A0      .         @C@@@@          J         GCLOOP            .         RA
)@@G@@@A@@@@ . ROUTINE TO TYPE OUT IMAGES       @]@@@@TYPOUT    . @A@@@@      RB
)@@G@@    L         A0,IL           @A@@@@          TNE,U     A0,077          RC
)@@G@@@^@@@@          J         EOF @C@@@@          TG        A0,PTL1         RD
)@@G@@  . PTL1>IL?@C@@@@          J         $+3               . NO      @G@@@@RE
)@@G@@          SZ        A0                . YES - NO PRINTING (LENGTH 0)    RF
)@@G@@@C@@@@          J         SHIFTL            .         @C@@@@          TGRG
)@@G@@        A0,PTL2           . PTL2>IL?@G@@@@          J         ILGRT     RH
)@@G@@        . NO - IL GREATER OR EQUAL        @G@@@@          AN        A0,PRI
)@@G@@TL1           . YES - NUMBER WORDS PRINTED      @E@@@@          A,U     RJ
)@@G@@  A0,1              . IS IL-PTL1+1        @G@@@@          J         SHIFRK
)@@G@@TL            . SHIFT LENGTH INTO PLACE         @E@@@@ILGRT     L       RL
)@@G@@  A0,PTL2           . NUMBER WORDS PRINTED@E@@@@          AN        A0,PRM
)@@G@@TL1           . IS PTL2-PTL1+1      @C@@@@          A,U       A0,1      RN
)@@G@@        .         @G@@@@SHIFTL    LSSL      A0,18             . SHIFT LERO
)@@G@@NGTH INTO PLACE         @E@@@@          S         A0,R5             . SARP
)@@G@@VE WORD COUNT     @E@@@@          TZ        ONSITE             . ONSITE RQ
)@@G@@PRINTOUT    @I@@@@          J         TYPOUT2                . LINE NUMBRR
)@@G@@ERING MUST BE SPECIFIED BY    @E@@@@          TZ        QUICKON         RS
)@@G@@   . QON MODE?          @E@@@@          SNZ       QUICKP          . SET RT
)@@G@@LIKE LOCAL        @G@@@@          TZ        ALLLN              . UBIQUITRU
)@@G@@OUS LINE NUMBERING?     @E@@@@          SNZ       LNPRT           . BEHARV
)@@G@@VE LIKE LOCAL     @E@@@@TYPOUT2    TNZ       LNPRT              . LINE NRW
)@@G@@UMBERING?   @C@@@@          J         TYPOUT5            . NOPE   @C@@@@RX
)@@G@@          A$EDIT     ETAB               .       @E@@@@          TZ      RY
)@@G@@  QUICKP             . QUICK MODE?        @G@@@@          J         TYPORZ
)@@G@@UT3            . YES- VARIABLE LINE NUMBER      @G@@@@          A$EDECF SA
)@@G@@  7,LCT             . LINE NUMBER TO ASCII DECIMAL    @E@@@@          J SB
)@@G@@        TYPOUT4            . GO PUT IN COLON    @G@@@@TYPOUT3   A$EDECV SC
)@@G@@   LCT                . VARIABLE SPACE LINE COUNT     @E@@@@TYPOUT4   A$SD
)@@G@@ECHAR    ':'                . INSERT :          @^@@@@          A$EDITX SE
)@@G@@   .  @E@@@@TYPOUT5   TZ        ONSITE             . ONSITE PRINTER?    SF
)@@G@@@C@@@@          J         NOQUK              . YES    @E@@@@          TNSG
)@@G@@Z       PNTINQ            . REAL PRINT?         @E@@@@          TNZ     SH
)@@G@@  QUICKP             . QUICK PRINT        @C@@@@          J         NOQUSI
)@@G@@K              . NO     @E@@@@          L         A4,R5               . SJ
)@@G@@GET WORD COUNT    @I@@@@          JZ        A4,NOQUK          . PROTECT SK
)@@G@@AGAINST ZERO LENGTH LINES           @E@@@@          SSL       A4,18     SL
)@@G@@          .RIGHT JUSTIFY      @E@@@@          AN,U      A4,1            SM
)@@G@@  . GET CORRECTED COUNT @G@@@@          TZ        LNPRT              . LSN
)@@G@@INE NUMBER PRINTOUT?          @C@@@@          J         TYPOUTR         SO
)@@G@@   . YES    @G@@@@          A$EDIT     ETAB               . INITIALIZE ESP
)@@G@@DIT MODE          @C@@@@          J         TYPOUTI            .        SQ
)@@G@@@E@@@@TYPOUTR   A$EDITR    ETAB               . REOPEN EDIT MODE  @E@@@@SR
)@@G@@TYPOUTI   L         X7,(1,0)           . INITIALIZE POINTERS@C@@@@      SS
)@@G@@    L         X6,PTL1           .         @C@@@@          AN,U      X6,1ST
)@@G@@              .         @I@@@@          L,U       A5,'*'             . ISU
)@@G@@NITIALIZE TEST CHAR TO NONBLANK           @E@@@@LAGN      EX        LOADSV
)@@G@@Q,*X7          . GET CHAR FROM IMAGE@C@@@@          TNE,U     A5,' '    SW
)@@G@@         .        @E@@@@          TE,U      A6,' '             . BOTH BLSX
)@@G@@ANKS TEST   @C@@@@          J         NOBLK              . NO     @G@@@@SY
)@@G@@          TNZ       QUOTE              . ARE WE WITHIN QUOTES           SZ
)@@G@@@E@@@@          J         LAGN               . NO, DON'T INSERT   @G@@@@TA
)@@G@@NOBLK     S         A6,A5              . SAVE FOR COMPARISON THIS CHAR  TB
)@@G@@@E@@@@          TE,U      A6,047             . IS THIS A QUOTE    @E@@@@TC
)@@G@@          J         OKIN               . NOT A QUOTE        @G@@@@      TD
)@@G@@    TNZ       QUOTE              . ARE WE NOW WITHIN A QUOTE      @C@@@@TE
)@@G@@          J         NOQTE              . NO     @E@@@@          SZ      TF
)@@G@@  QUOTE              . END QUOTE MODE     @E@@@@          J         OKINTG
)@@G@@               . PRINT IT           @E@@@@NOQTE     SNZ       QUOTE     TH
)@@G@@      . SET QUOTE MODE        @E@@@@OKIN      L         A0,A6           TI
)@@G@@   . STORE CHAR IN IMBUF@^@@@@          A$ECHAR    .  @E@@@@          J TJ
)@@G@@        LAGN               . GET NXT CHAR       @^@@@@LOADQ     . LOAD TTK
)@@G@@ABLE  @C@@@@          L,Q1      A6,IMAGE,X6       .         @C@@@@      TL
)@@G@@    L,Q2      A6,IMAGE,X6       .         @C@@@@          L,Q3      A6,ITM
)@@G@@MAGE,X6       .         @C@@@@          L,Q4      A6,IMAGE,X6       .   TN
)@@G@@      @G@@@@          J         $+1                . NEED TO ESCAPE EXECTO
)@@G@@UTE         @E@@@@          L         X7,(1,0)           . RESET CHAR PTTP
)@@G@@R     @G@@@@          L         A2,X6             . GET READY FOR COMPARTQ
)@@G@@E           @E@@@@          A,U       X6,1              . INCREMENT X6  TR
)@@G@@      @G@@@@          A,U       A2,1              . A2 = TOTAL WORDS LOOTS
)@@G@@KED AT - 1  @C@@@@          AN        A2,PTL1           .         @G@@@@TT
)@@G@@          TLE       A2,A4             . COMPARE AGAINST TOTAL WORD COUNTTU
)@@G@@@E@@@@          J         LAGN               . CONTINYUH          @G@@@@TV
)@@G@@OKFIN     SZ        QUOTE              . ZERO QUOTE INDICATOR           TW
)@@G@@@^@@@@          A$EDITX    .  @G@@@@          L         A0,(0141,IMBUF) TX
)@@G@@   . LET PRINT$ FIGURE WORD COUNT   @E@@@@          TZ        DOCCOM    TY
)@@G@@        . DOCUMENT COMMAND    @E@@@@          J         TRDOC           TZ
)@@G@@  . GO DO TREAD         @C@@@@          J         PRTPOUT1    . GO PRINTUA
)@@G@@      @^@@@@NOQUK     . @$          @E@@@@          L         A0,R5     UB
)@@G@@         . RECOVER WORD COUNT @E@@@@          TZ        LNPRT           UC
)@@G@@   . LINE NUMBER PRINT  @C@@@@          J         PRTPOUT            . YUD
)@@G@@ES    @C@@@@          J         NOTBLNK           .         @E@@@@PRTPOUUE
)@@G@@T   DL        A1,IMBUF          . GET LINE NUMBER     @G@@@@          DSUF
)@@G@@        A1,FIMBUF-2       . PUT BEHIND PRINTED LINE IMAGE   @G@@@@      UG
)@@G@@    AH        A0,(2,-2)         . 2 MORE WORDS, 2 LESS ON ADDRESS @E@@@@UH
)@@G@@NOTBLNK   AH        A0,(0100,FIMBUF)  . REST OF APRINT$ WORD@E@@@@      UI
)@@G@@    L         A3,R5             . BT REPEAT COUNT     @C@@@@          SSUJ
)@@G@@L       A3,18             .         @C@@@@          L         R1,A3     UK
)@@G@@        .         @G@@@@          L         X5,(1,FIMBUF)     . BT DESTIUL
)@@G@@NATION ADDRESS          @E@@@@          L         X4,(1,IMAGE)      . BTUM
)@@G@@ SOURCE ADDRESS   @C@@@@          A         X4,PTL1           .         UN
)@@G@@@E@@@@          AN,U      X4,1              . IMAGE+(PTL1)-1      @G@@@@UO
)@@G@@          BT        X5,,*X4           . TRANSFER WORDS TO APRINT$ BUFFERUP
)@@G@@@E@@@@          TZ        ONSITE            . ONSITE PRINTOUT     @C@@@@UQ
)@@G@@          J         PRNTALT           . YES     @E@@@@          TZ      UR
)@@G@@  DOCCOM            . DOC COMMAND?        @G@@@@          J         TRDOUS
)@@G@@C             . YES-GOT TO DO A TREAD           @C@@@@PRTPOUT1  ER      UT
)@@G@@  APRINT$           . PRINT IT@A@@@@          J         0,X10           UU
)@@G@@@E@@@@PRNTALT   S         A0,ALTPKT          . PUT A0 IN PACKET   @E@@@@UV
)@@G@@PRNTALT1  L,U       A0,ALTPKT          . GET PACKET ADDRESS @C@@@@      UW
)@@G@@    TZ        CARDPCH            . CPUNCH?@C@@@@          J         PCHAUX
)@@G@@LT1            . YES    @E@@@@          ER        APRNTA$           . ALUY
)@@G@@T PRINT IT        @C@@@@          J         0,X10              . RETURN UZ
)@@G@@@E@@@@PCHALT1   SZ,S2     ALTPKT             . REMOVE LINE SKIP   @E@@@@VA
)@@G@@          ER        APNCHA$           . ALT PUNCH IT        @C@@@@      VB
)@@G@@    J         0,X10              . EXIT   @E@@@@TRDOC     S         A0,TVC
)@@G@@REDOC         . STORE IN PACKET     @E@@@@          L,U       A0,TREDOC VD
)@@G@@        . GET ADDRESS OF PKT  @C@@@@          ER        ATREAD$         VE
)@@G@@   .        @C@@@@          J         0,X10             . RETURN  @E@@@@VF
)@@G@@CONWORD             . TEST CONTROL WORD (LABEL IMAGE)       @E@@@@      VG
)@@G@@    SZ        FD                . SET ASCII INPUT FLAG@G@@@@          TNVH
)@@G@@Z       AC                . IS INPUT FD? (CHECK S6 OF ICW)  @G@@@@      VI
)@@G@@    SNZ       FD                . YES, SET FIELDATA INPUT FLAG    @]@@@@VJ
)@@G@@CONWORD2  . @E@@@@          L         A0,FQOPT          . LOAD P-Q OPT FVK
)@@G@@LAG   @E@@@@          L         A1,CONCODE        . S1 OF CONTROL WORD  VL
)@@G@@@E@@@@          TLE,U     A0,2              . NO P OR Q SPEC?     @E@@@@VM
)@@G@@          J         CON42             . ONE WAS SPEC        @E@@@@      VN
)@@G@@    TE,U      A1,050            . 50 CONTROL CODE?    @C@@@@          J VO
)@@G@@        CON42             . NO      @C@@@@          TE,U      A0,2      VP
)@@G@@        . FQOPT=2?@C@@@@          J         RCNTRL            . NO      VQ
)@@G@@@E@@@@          TZ        AC                . FD OR ASCII CODE?   @C@@@@VR
)@@G@@          J         RCN3              . ASCII   @E@@@@          SNZ     VS
)@@G@@  OUTFIL            . OUTPUT FILE IS FD   @E@@@@          L,U       A0,3VT
)@@G@@              . SET FQOPT=3         @C@@@@          S         A0,FQOPT  VU
)@@G@@        .         @C@@@@          J         RCNTRL            .         VV
)@@G@@@E@@@@RCN3      SZ        OUTFIL            . OUTPUT FILE IS ASCII@E@@@@VW
)@@G@@          SZ        FQOPT             . ASSUME ASCII OUTPUT @C@@@@      VX
)@@G@@    J         0,X11             . RETURN  @G@@@@CON42     TE,U      A1,0VY
)@@G@@42            . 42 CODE(MIXED INPUT FILE)?      @C@@@@          J       VZ
)@@G@@  RCNTRL            . NO      @G@@@@          SZ        OUTFIL          WA
)@@G@@  . YES, OUTPUT FILE IS ASCII       @E@@@@          SZ        FQOPT     WB
)@@G@@        . ASSUME ASCII        @E@@@@          SZ        FD              WC
)@@G@@  . SET ASCII INPUT FLAG@G@@@@          TNZ       AC                . ISWD
)@@G@@ INPUT FD? (CHECK S6 OF ICW)  @G@@@@          SNZ       FD              WE
)@@G@@  . YES, SET FIELDATA INPUT FLAG    @G@@@@          J         READ      WF
)@@G@@        . DON'T WRITE 42 CONTROL IMAGE    @G@@@@RCNTRL    TZ        FD  WG
)@@G@@              . IS FD INPUT FLAG SET?           @G@@@@          SNZ     WH
)@@G@@  AC                . YES, THEN CHANGE S6 OF ICW TO 1 @G@@@@            WI
)@@G@@                          . SINCE ED INTERNAL FILE IS ASCII @C@@@@      WJ
)@@G@@    J         0,X11             . RETURN  @]@@@@ . @/       @E@@@@FREAD WK
)@@G@@    SNZ       FASTREAD        . SET FASTREAD FLAG     @C@@@@          J WL
)@@G@@        READ               . GO READ@G@@@@RCN       LMJ       X11,CONWORWM
)@@G@@D2      . TEST LABEL CONTROL WORD         @E@@@@          L         A0,CWN
)@@G@@ONCODE        . GET S1 OF ICW       @G@@@@          TNE,U     A0,060    WO
)@@G@@        . PRINT CONTROL CODE 60?          @C@@@@          J         PC  WP
)@@G@@               .        @]@@@@GETSP     . @A@@@@          SX        X10,WQ
)@@G@@X10SAV      @A@@@@          LMJ       X10,WRB         @C@@@@            WR
)@@G@@ LX     X10,X10SAV    . RELOAD X10  @C@@@@READ      .                   WS
)@@G@@         .        @E@@@@          SZ        WINHIB            . CLEAR WRWT
)@@G@@ITE INHIBIT @E@@@@          TNZ       OK                 . AT END OF FILWU
)@@G@@E?    @E@@@@          J         EOF                . YES, GO TO TOP     WV
)@@G@@@A@@@@          SZ        LENGTH          @G@@@@          L         A0,BWW
)@@G@@LANK2     . IN CASE INPUT IS ALL BLANKS         @C@@@@          S       WX
)@@G@@  A0,IMAGE          .         @C@@@@          LA,U      A0,EDIN         WY
)@@G@@   .        @E@@@@          LMJ       X11,SDFI           . GET IMAGE    WZ
)@@G@@      @A@@@@          J         IOERRA          @E@@@@          J       XA
)@@G@@  0,X10              . EOF RETURN         @G@@@@          TP        EDINXB
)@@G@@+10            . IS IT A DATA IMAGE ?           @E@@@@          J       XC
)@@G@@  RCN               . NO, GET NEXT IMAGE  @E@@@@          TNZ       FD  XD
)@@G@@              . IS FD FLAG SET?     @C@@@@          J         READ2     XE
)@@G@@        . NO      @E@@@@          L         A0,IL             . IMAGE LEXF
)@@G@@NGTH        @E@@@@          CONVFA    IMAGE,IMAGE       . CONVERT FD TO XG
)@@G@@ASCII @G@@@@          IL32      IL                . CHANGE TO ASCII LENGXH
)@@G@@TH          @E@@@@READ2     TNZ       ADSAVE            . FIRST PASS THRXI
)@@G@@U?    @I@@@@          J         DONCL             . NOPE                XJ
)@@G@@            817TM333    @I@@@@          TNZ       DOPTI             . ISXK
)@@G@@ INPUT DATA FILE?             817TM334    @I@@@@          J         DONCXL
)@@G@@L             . NOPE                            817TM335    @I@@@@      XM
)@@G@@    SZ,H2     ICW               . CLEAR AC,AC1,DC,DC1             817TM3XN
)@@G@@36    @I@@@@          SZ,S3     ICW               .                     XO
)@@G@@            817TM337    @I@@@@DONCL     .                               XP
)@@G@@                              817TM338    @G@@@@          TLE       RC,AXQ
)@@G@@C              . IS AC GREATER THAN RC?         @E@@@@          J       XR
)@@G@@  READ               . YES GET NEXT IMAGE @G@@@@          TNZ       ADSAXS
)@@G@@VE            . CLEAR ONLY NEW IMAGES           @E@@@@          J       XT
)@@G@@  FRSTPA    . NO FIRST PASS THRU          @^@@@@          SZ        DC1 XU
)@@G@@@^@@@@          SZ        AC1 @I@@@@FRSTPA    TNZ       DC1             XV
)@@G@@  . WAS IMAGE DELETED BY ED         ED012330    @I@@@@          J       XW
)@@G@@  NOTDBE            . NO                              ED012340    @I@@@@XX
)@@G@@          TZ        AC1               . WAS IT ALSO ADDED BY ED         XY
)@@G@@ED012350    @I@@@@          J         READ              . YES THROW IT AXZ
)@@G@@WAY               ED012360    @C@@@@       J       GETSP               .YA
)@@G@@ COPY.      @I@@@@NOTDBE    TNZ       DC                 . NO, WAS IMAGEYB
)@@G@@ DELETED ?        ED012380    @E@@@@          J         DECODE          YC
)@@G@@   . NO, ACCEPT IT      @G@@@@          TG        RC,DC              . YYD
)@@G@@ES,IS DC GREATER THAN RC?     @E@@@@          J         GETSP           YE
)@@G@@   . NO,GET NEXT IMAGE  @^@@@@          SZ        DC  @]@@@@DECODE    . YF
)@@G@@@G@@@@          A,U       LCT,1              . INCREMENT LINE COUNT     YG
)@@G@@      @G@@@@          TZ        FASTREAD           . IS THIS A FAST READYH
)@@G@@?           @E@@@@          J         1,X10              . YES, DON'T DEYI
)@@G@@CODE  @G@@@@          LA        A0,(1,0)           . OFF THE INPUT IMAGEYJ
)@@G@@ AND UNPACKS@I@@@@          LA        A1,(1,0)           . 14 WORDS INTOYK
)@@G@@ 80,RETURN THE NUMBER OF      @E@@@@          LA        A2,(1,1)        YL
)@@G@@   . CHARACTER IN LENGTH@A@@@@DEC1      EX        DEC2,*A0        @E@@@@YM
)@@G@@          SA        A3,IMAG80,*A1      . STORE CHARACTER    @A@@@@      YN
)@@G@@    TE,U      A3,040          @E@@@@          S         A1,LENGTH       YO
)@@G@@   . NO, STORE LENGTH   @I@@@@          J         DEC1               . RYP
)@@G@@E-INITILIZE AND GET NEXT CHARACTER        @]@@@@DEC2      . @C@@@@      YQ
)@@G@@    L,Q1      A3,IMAGE-1,A2     .         @C@@@@          L,Q2      A3,IYR
)@@G@@MAGE-1,A2     .         @C@@@@          L,Q3      A3,IMAGE-1,A2     .   YS
)@@G@@      @C@@@@          L,Q4      A3,IMAGE-1,A2     .         @C@@@@      YT
)@@G@@    J         $+1                .        @C@@@@          LA        A0,(YU
)@@G@@1,0)           .        @G@@@@          TLEM      A2,IL              . DYV
)@@G@@OES WORD COUNT=IMAGE LENGTH?  @C@@@@          J         DEC1            YW
)@@G@@   . NOT YET@E@@@@          L,U       A0,' '            . GET A BLANK   YX
)@@G@@      @G@@@@          L         A1,LENGTH         . GET LENGTH OF IAMAGEYY
)@@G@@ IN CHARS   @E@@@@          L         A2,SAVE2          . GET CHANGE MAXYZ
)@@G@@      @E@@@@          AN        A2,A1             . SUBTRACT LENGTH     ZA
)@@G@@@E@@@@          LXI,U     A1,1              . NEED AN INCR        @C@@@@ZB
)@@G@@          S         A0,IMAG80,*A1     .         @G@@@@          JGD     ZC
)@@G@@  A2,$-1            . BLANK OUT REST OF IMAG80        @A@@@@          LAZD
)@@G@@        A0,LENGTH       @A@@@@          DSA       A0,36           @^@@@@ZE
)@@G@@          DI,U      A0,4@^@@@@          TZ        A1  @^@@@@          AAZF
)@@G@@,U      A0,1@A@@@@          SA        A0,IL           @G@@@@          TZZG
)@@G@@        LENGTH            . WAS INPUT A BLANK LINE?         @A@@@@      ZH
)@@G@@    J         1,X10           @C@@@@          L,U       A0,1            ZI
)@@G@@  .         @C@@@@          S         A0,IL             .         @C@@@@ZJ
)@@G@@          S         A0,LENGTH         .         @I@@@@          J       ZK
)@@G@@  1,X10              . EXIT FROM READ ROUTINE FOR BLANK KINE      @G@@@@ZL
)@@G@@PC        TNZ       FD                . FD PRINT CONTROL IMAGE?         ZM
)@@G@@@E@@@@          J         RDPCNT            . NO, ASCII           @E@@@@ZN
)@@G@@          L         A0,IL             . GET IMAGE LENGTH    @E@@@@      ZO
)@@G@@    CONVFA    IMAGE,IMAGE       . FD TO ASCII         @E@@@@          ILZP
)@@G@@32      IL                . CHANGE IMAGE LENGTH @G@@@@RDPCNT    TNZ     ZQ
)@@G@@  RECPCNT            . RECOGNIZE PRINT CONTROL?       @C@@@@          J ZR
)@@G@@        GETSP              . NO     @E@@@@          TZ,S4     ICW       ZS
)@@G@@         . DELETED?           @C@@@@          J         READ            ZT
)@@G@@   . YES    @G@@@@          AN,U      LCT,1              . YES,BUT DON'TZU
)@@G@@ INC LINE COUNT   @E@@@@          J         DECODE             . GO DECOZV
)@@G@@DE IT       @]@@@@ . @/       @]@@@@WRB       . @A@@@@          LA      ZW
)@@G@@  A0,IL           @E@@@@          TZ        WINHIB            . WRITE INZX
)@@G@@HIBIT ON?   @G@@@@          JZ        A0,0,X10            . RETURN IF ZEZY
)@@G@@RO LENGTH         @E@@@@          TNE,U     A0,077              . EOF IMZZ
)@@G@@AGE ?       @E@@@@          J         0,X10               . YES, RETURN AA
)@@G@@      @G@@@@          LA        A1,ICW             . TRANSFER IMAGE CONTAB
)@@G@@ROL WORD    @C@@@@          SA        A1,OCW             .        @^@@@@AC
)@@G@@          AA,U      IC,1@C@@@@          LA,U      A0,EDOUT           .  AD
)@@G@@      @E@@@@          LMJ       X11,SDFO           . WRITE IMAGE        AE
)@@G@@@A@@@@          J         IOERRA          @^@@@@          SZ        ICW AF
)@@G@@@E@@@@          SNZ       WINHIB         . WRITE INHIBIT          @A@@@@AG
)@@G@@          J         0,X10           @]@@@@PACK      . @C@@@@          L AH
)@@G@@        A0,LENGTH          .        @G@@@@          JZ        A0,0,X10  AI
)@@G@@         . RETURN ON ZERO LENGTH          @I@@@@          DSA       A0,3AJ
)@@G@@6              . CALCULATE LENGTH OF IMAGE IN WORDS         @C@@@@      AK
)@@G@@    DI,U      A0,4               .        @C@@@@          TZ        A1  AL
)@@G@@               .        @^@@@@          AA,U      A0,1@E@@@@          SAAM
)@@G@@        A0,IL              . AND STORE IN ICW   @A@@@@          LA      AN
)@@G@@  A1,BLANK2       @A@@@@          SA        A1,IMAGE-1,A0   @E@@@@      AO
)@@G@@    LA        A3,(1,0)           . PACK IMAG80        @C@@@@          LAAP
)@@G@@        A1,(1,1)           .        @C@@@@          L         X4,(1,IMAGAQ
)@@G@@E)       .        @C@@@@PAC1      LA        A0,IMAG80-1,A1     .        AR
)@@G@@@C@@@@          EX        STORE,*A3          .        @C@@@@          TLAS
)@@G@@EM      A1,LENGTH          .        @C@@@@          J         PAC1      AT
)@@G@@         .        @A@@@@          J         0,X10           @]@@@@STORE AU
)@@G@@    . @C@@@@          S,Q1      A0,0,X4           .         @C@@@@      AV
)@@G@@    S,Q2      A0,0,X4           .         @C@@@@          S,Q3      A0,0AW
)@@G@@,X4           .         @A@@@@          LMJ       X5,$+1          @A@@@@AX
)@@G@@          S,Q4     A0,0,*X4         @A@@@@          LA        A3,(1,0)  AY
)@@G@@      @^@@@@          J         0,X5@]@@@@ . @/       @G@@@@ . THIS ROUTAZ
)@@G@@INE IS USED TO SEARCH THE TYPED INPUT LINE EDIT80           @A@@@@ . THEBA
)@@G@@RE ARE TWO ENTRY POINTS:      @G@@@@ . GET- SEARCH TILL FIND DELIMITER OBB
)@@G@@R BLANK-RETURN THING FOUND          @C@@@@ .     IN A1, IN FD, RT JUST.,BC
)@@G@@ ZERO FILLED.     @E@@@@ . GET2- SEARCH TILL FIND DELIMITER OR BLANK.  OBD
)@@G@@BJECT MAY BE@E@@@@.     TWO FD WORDS - RESULT LEFT IN FIMBUF,FIMBUF+1   BE
)@@G@@      @A@@@@.     LEFT JUSTIFIED, BLANK FILLED. @C@@@@GET2      SNZ     BF
)@@G@@  GET2F          . SET FLAG   @G@@@@GET       DL        A0,BLANK2       BG
)@@G@@  . ASCII BLANKS => FIMBUF(3 WORDS) @C@@@@          DS        A0,FIMBUF BH
)@@G@@        .         @C@@@@          S         A0,FIMBUF+2       .         BI
)@@G@@@E@@@@          SZ        A9                . COUNTS NO. OF CHAR  @G@@@@BJ
)@@G@@          L         X4,(1,FIMBUF)     . INITIALIAZE FOR STORES          BK
)@@G@@@C@@@@          L         A3,(1,0)          .         @A@@@@          SZBL
)@@G@@        DELIM           @G@@@@          SZ        A1                 . IBM
)@@G@@NITIALIZE ARGUMENT (A1)       @G@@@@          LA        A2,EDCT         BN
)@@G@@   . COMPARE COUNT AND EDCT         @]@@@@GET1      . @I@@@@          TGBO
)@@G@@        A2,COUNT            . ARE THERE ANY MORE CHAR NOT YET SEEN?     BP
)@@G@@@E@@@@          J         EOLF               . NO, RETURN         @C@@@@BQ
)@@G@@          AA,U      A2,1               . YES    @E@@@@          LA      BR
)@@G@@  A0,EDIT80-1,A2     . LOAD NEXT CHAR     @A@@@@          TNE,U      A0,BS
)@@G@@040         @E@@@@          J         GET1              . LOOK AT ANOTHEBT
)@@G@@R CHAR@E@@@@          TNZ       GET2F             . GET 2 FLAG?         BU
)@@G@@@A@@@@          J         FILL1           @E@@@@FILL      LA        A0,EBV
)@@G@@DIT80-1,A2     . LOAD NEXT CHAR     @E@@@@          TNZ       GET2F     BW
)@@G@@        . FIENAME OPTION      @C@@@@          J         FILLX           BX
)@@G@@  . NOPE    @C@@@@          TLE,U     A0,'Z'+1          . ALPHA?  @C@@@@BY
)@@G@@          TLE,U     A0,'A'            .         @E@@@@          J       BZ
)@@G@@  $+2               . NOPE TEST SOME MORE @C@@@@          J         FILLCA
)@@G@@1             . ALPHA OK@G@@@@          TLE,U     A0,0173           . TECB
)@@G@@ST LOWER-CASE ALPHA RANGE     @C@@@@          TLE,U     A0,0141         CC
)@@G@@  .         @E@@@@          J         DMTST             . NOT ALPHA     CD
)@@G@@      @C@@@@          J         FILL1             . ALPHA   @C@@@@DMTST CE
)@@G@@    TLE,U     A0,'9'+1          . NUMERIC?@C@@@@          TLE,U     A0,'CF
)@@G@@0'            .         @E@@@@          J         DMTST2            . NOCG
)@@G@@PE TRY $ OR -     @E@@@@          J         FILL1             . NUMERIC CH
)@@G@@OK          @C@@@@DMTST2    TE,U      A0,'-'            . -?      @C@@@@CI
)@@G@@          TNE,U     A0,'$'            . $?      @C@@@@          J       CJ
)@@G@@  FILL1             . NO      @C@@@@          J         GET2D           CK
)@@G@@  . YES     @]@@@@FILLX       @A@@@@          TNE,U     A0,040          CL
)@@G@@@G@@@@          J         GO-1               . YES, CORRECT BLANK AND RECM
)@@G@@TURN  @C@@@@          TNE,U     A0,','            .         @E@@@@      CN
)@@G@@    J         GET2D             . THIS IS A DELIMITER @C@@@@          TNCO
)@@G@@E,U     A0,' '            .         @E@@@@          J         GET2D     CP
)@@G@@        . THIS IS A DELIMITER @C@@@@          TNE,U     A0,'!'          CQ
)@@G@@  .         @E@@@@          J         GET2D             . THIS IS A DELICR
)@@G@@MITER @C@@@@          TNE,U     A0,'+'            .         @E@@@@      CS
)@@G@@    J         GET2D             . THIS IS A DELIMITER @C@@@@          TNCT
)@@G@@E,U     A0,'/'            .         @E@@@@          J         GET2D     CU
)@@G@@        . THIS IS A DELIMITER @C@@@@          TNE,U     A0,'('          CV
)@@G@@  .         @E@@@@          J         GET2D             . THIS IS A DELICW
)@@G@@MITER @C@@@@          TNE,U     A0,')'            .         @E@@@@      CX
)@@G@@    J         GET2D             . THIS IS A DELIMITER @C@@@@          TNCY
)@@G@@E,U     A0,''''            .        @E@@@@          J         GET2D     CZ
)@@G@@        . THIS IS A DELIMITER @C@@@@          TNE,U     A0,'*'          DA
)@@G@@  .         @E@@@@          J         GET2D             . THIS IS A DELIDB
)@@G@@MITER @C@@@@          TNE,U     A0,'.'            .         @E@@@@      DC
)@@G@@    J         GET2D             . THIS IS A DELIMITER @E@@@@          J DD
)@@G@@        FILL1              . NO,JUMP OVER       @A@@@@GET2D     S       DE
)@@G@@  A0,DELIM        @E@@@@          J         GO                 . JUMP TODF
)@@G@@ RETURN     @E@@@@FILL1     EX        STORE,*A3         . SAVE IN FIMBUFDG
)@@G@@      @E@@@@          A,U       A9,1              . ONE MORE CHAR       DH
)@@G@@@G@@@@GO5       TNE       A2,COUNT          . ARE THERE ANY CHAR NOT YETDI
)@@G@@ SEEN?@E@@@@          J         GO                 . NO,RETURN          DJ
)@@G@@@C@@@@          AA,U      A2,1               . YES,   @E@@@@          J DK
)@@G@@        FILL               . GO LOOK AT NEXT ONE@I@@@@          ANA,U   DL
)@@G@@  A2,1               . LAST CHAR SEEN WAS BLANK-IGNORE IT         @C@@@@DM
)@@G@@GO        S         A2,EDCT            .        @G@@@@          TNZ     DN
)@@G@@  A9                . WERE ANY CHAR STORED?           @C@@@@          J DO
)@@G@@        GO2               . NO      @G@@@@          TNZ       GET2F     DP
)@@G@@        . WAS GET OR GET2 CALLED?         @C@@@@          J         GO1 DQ
)@@G@@              . GET WAS @E@@@@          L,U       A0,3              . CODR
)@@G@@NVERT 3 WORDS     @E@@@@          CONVAF    FIMBUF,FIMBUF     . CONVERT DS
)@@G@@ASCII TO FD @E@@@@          SNZ       A1                . USE AS FLAG   DT
)@@G@@      @E@@@@          L         A5,BLANKS         . FD BLANKS           DU
)@@G@@@E@@@@          TNE       A5,FIMBUF         . FIMBUF=BLANKS?      @E@@@@DV
)@@G@@          SZ        A1                . YES, CLEAR FLAG     @C@@@@      DW
)@@G@@    J         GO2               .         @E@@@@GO1       L,U       A7,6DX
)@@G@@              . 6 CHAR AT MOST      @E@@@@          AN        A7,A9     DY
)@@G@@        . MAY BE LESS THAN 6  @C@@@@          DL        A1,FIMBUF       DZ
)@@G@@  .         @C@@@@GO3       TNZ       A7                . A7=0?   @G@@@@EA
)@@G@@          J         CONV              . WE HAVE 6 CHAR - GO CONVERT     EB
)@@G@@@E@@@@          TP        A7                . IS A7 NEGATIVE?     @G@@@@EC
)@@G@@          J         CONV              . YES,GO CONVERT(MORE THAN 6 CHAR)ED
)@@G@@@G@@@@          A,U       A2,040            . CHANGE BLANK TO MASTER-SPAEE
)@@G@@CE    @E@@@@          DSC       A1,9              . SHIFT ONE ASCII CHAREF
)@@G@@@G@@@@          AN,U      A7,1              . LESS ONE MASTER-SPACE     EG
)@@G@@      @G@@@@          J         GO3               . GO AND CHANGE ANOTHEEH
)@@G@@R BLANK     @G@@@@CONV      DS        A1,FIMBUF         . GET READY FOR EI
)@@G@@CONVERSION        @E@@@@          L,U       A0,2              . CONVERT EJ
)@@G@@2 WORDS     @E@@@@          CONVAF    FIMBUF,FIMBUF     . CONVERT ASCII EK
)@@G@@TO FD @G@@@@          L         A1,FIMBUF         . A1 HAS DESIRED RESULEL
)@@G@@T IN FD     @E@@@@GO2       SZ        GET2F             . CLEAR FLAG    EM
)@@G@@      @C@@@@          J         0,X10              .        @E@@@@EOLF  EN
)@@G@@    L,U       A0,0777           . GET INDICATOR       @E@@@@          S EO
)@@G@@        A0,DELIM          . PUT IN DELIM        @E@@@@          S       EP
)@@G@@  A2,EDCT           . SAVE COUNT          @E@@@@          SZ        GET2EQ
)@@G@@F             . CLEAR FLAG          @C@@@@          J         0,X10     ER
)@@G@@        . RETURN  @C@@@@. THIS ROUTINE RETURNS 1 OR 2 ASCII CHAR        ES
)@@G@@@A@@@@. RT.JUST., ZERO FILLED, IN A1.     @]@@@@GET3      . @C@@@@      ET
)@@G@@    SZ        A1                .         @G@@@@          L         A2,EEU
)@@G@@DCT           . COMPARE COUNT AND EDCT          @I@@@@          TG      EV
)@@G@@  A2,COUNT          . ARE THERE ANY MORE CHAR NOT YET SEEN?       @C@@@@EW
)@@G@@          J         GO4               . NO      @G@@@@INC       A,U     EX
)@@G@@  A2,1              . ONE MORE CHAR LOOKED AT         @E@@@@          L EY
)@@G@@        A3,EDIT80-1,A2    . LOAD NEXT CHAR      @C@@@@          TNE,U   EZ
)@@G@@  A3,040            . BLANK?  @C@@@@          J         TBLANK          FA
)@@G@@  . YES     @E@@@@          LSSL      A1,9              . SHIFT ONE ASCIFB
)@@G@@I CHAR@E@@@@          A         A1,A3             . ADD IN CHAR TO A1   FC
)@@G@@@G@@@@          TNE       A2,COUNT          . ANY CHAR NOT YET SEEN?    FD
)@@G@@      @C@@@@          J         LEAVE             . NO      @E@@@@      FE
)@@G@@    J         INC               . YES, LOOK AT ANOTHER@G@@@@TBLANK    TZFF
)@@G@@        A1                . ARE ANY CHAR STORED IN A1?      @G@@@@      FG
)@@G@@    J         LEAVE             . YES, RETURN WITH CHAR           @G@@@@FH
)@@G@@          J         INC               . NO, LOOK AT ANOTHER CHAR        FI
)@@G@@@E@@@@LEAVE     S         A2,EDCT           . CHAR COUNT          @C@@@@FJ
)@@G@@          J         0,X10             . RETURN  @E@@@@GO4       L,U     FK
)@@G@@  A0,0777           . GET INDICATOR       @E@@@@          S         A0,DFL
)@@G@@ELIM          . PUT IN DELIM        @C@@@@          J         0,X10     FM
)@@G@@        . RETURN  @]@@@@          . @I@@@@BIN       .         .         FN
)@@G@@          . ROUTINE CONVERTS DECIMAL NUMBER (RJZF     @I@@@@          . FO
)@@G@@        .                   . IN A1)   TO BINARY NUMBER (IN A10)        FP
)@@G@@@I@@@@          LMJ       A2,BIN1             . ENTRY HERE TO RETURN BINFQ
)@@G@@ARY LESS ONE      @G@@@@          JZ        A10,0,X10           . DO NOTFR
)@@G@@ SUBTRACT IF ZERO       @G@@@@          JGD       A10,0,X10           . FS
)@@G@@SUBTRACT ONE AND RETURN       @I@@@@BIN0      LA        A2,X10          FT
)@@G@@    . ENTRY HERE FOR CONVERSION ALONE           @G@@@@BIN1      SZ      FU
)@@G@@  A10                 . INITIALIZE NUMBER  REGISTER   @G@@@@BIN2      SZFV
)@@G@@        A0                  . INITIALIZE DIGIT  REGISTER    @G@@@@      FW
)@@G@@    LDSL      A0,6                . SHIFT CHARACTER INTO A0       @E@@@@FX
)@@G@@          JZ        A0,BIN3             . IF VOID,JUMP      @^@@@@      FY
)@@G@@    FIELDATA  .   @E@@@@          TLE,U     A0,'9'+1          . IS IT NUFZ
)@@G@@MERIC       @C@@@@          TLE,U     A0,'0'            .         @^@@@@GA
)@@G@@          ASCII     .   @E@@@@          J         NUMERR             . NGB
)@@G@@O, SYNTAX ERROR   @E@@@@          ANA,U     A0,060              . REMOVEGC
)@@G@@ ZONE       @G@@@@          MSI,U     A10,10              . MULTIPLY NUMGD
)@@G@@BER BY 10         @G@@@@          AA        A10,A0              . ADD DIGE
)@@G@@GIT TO NUMBER           @I@@@@BIN3      JNZ       A1,BIN2             . GF
)@@G@@IF MORE CHAR REMAIN,PROCESS NEXT DIGIT    @E@@@@          S         A10,GG
)@@G@@SSAVE          . RESET SCAN COUNT   @C@@@@          J         0,A2      GH
)@@G@@          . RETURN@]@@@@ . @/       @]@@@@OPNO      . @C@@@@          LRGI
)@@G@@,U      R1,9              .         @C@@@@          LA        A0,(1,COPOGJ
)@@G@@UT)      .        @A@@@@          LA        A1,(1,EDOUT+2)  @C@@@@      GK
)@@G@@    BT        A1,0,*A0           .        @C@@@@          LA,U      A0,EGL
)@@G@@DOUT           .        @C@@@@          LMJ       X11,SDFOO          .  GM
)@@G@@      @A@@@@          J         0,X10           @]@@@@ .          @E@@@@GN
)@@G@@CLOSO    L,U       A0,EDOUT           . CLOSE OUTPUT FILE   @C@@@@      GO
)@@G@@    LMJ       X11,SDFOC          .        @C@@@@          J         IOERGP
)@@G@@RA             .        @C@@@@          J         0,X10              . RGQ
)@@G@@ETURN @]@@@@OPNI      . @G@@@@          LR,U      R1,9              . TRGR
)@@G@@ANSFER FILE CONTROL TABLE     @G@@@@          LA        A0,(1,COPIN)    GS
)@@G@@   . FROM COPY TO EDIT-INOUT        @A@@@@          LA        A1,(1,EDINGT
)@@G@@+2)   @C@@@@          BT        A1,0,*A0           .        @E@@@@      GU
)@@G@@    LA,U      A0,EDIN            . OPEN SOURCE INPUT  @C@@@@          LMGV
)@@G@@J       X11,SDFIO          .        @A@@@@          J         IOERRA    GW
)@@G@@      @E@@@@GETSDFC   L,U       A0,EDIN            . READ FIRST IMAGE   GX
)@@G@@@C@@@@          LMJ       X11,SDFI           .        @C@@@@          J GY
)@@G@@        IOERRA             .        @E@@@@          J         SDFHERR   GZ
)@@G@@           . EOF RETURN       @G@@@@          TN        EDIN+10         HA
)@@G@@   . DATA IMAGE OR CONTROL          @]@@@@ .          @G@@@@          J HB
)@@G@@        GETSDFC            . DATA IMAGE- GET NEXT           @I@@@@      HC
)@@G@@    L         A0,ICW            . GET IMAGE CONTROL WORD          817TM3HD
)@@G@@41    @I@@@@          L         A1,DOPTI          . GET DATA FILE INDICAHE
)@@G@@TOR         817TM342    @I@@@@          TNE       A0,('**PF**')     . ISHF
)@@G@@ IT A PROGRAM FILE HDR        817TM343    @I@@@@          JNZ       A1,DHG
)@@G@@ATAPF         . ATTEMPT TO EDIT PF AS DATA      817TM344    @E@@@@      HH
)@@G@@    TNZ       AUTOREC           . AUTO RECOVERY?      @C@@@@          J HI
)@@G@@        NOREC             . NO      @G@@@@          AND,U     A0,010    HJ
)@@G@@        . CHECK RECOVERY TEST BIT         @G@@@@          TNZ       A1  HK
)@@G@@              . SHOULD OUTPUT FILE BE FD?       @E@@@@          J       HL
)@@G@@  ASCREC            . NO, ASCII           @E@@@@          SNZ       OUTFHM
)@@G@@IL            . OUTPUT FILE IS FD   @G@@@@          SNZ       FQOPT     HN
)@@G@@        . AS IF P OPTION WERE SPEC        @C@@@@          J         NOREHO
)@@G@@C             .         @E@@@@ASCREC    SZ        OUTFIL            . OUHP
)@@G@@TPUT FILE IS ASCII@G@@@@          SZ        FQOPT             . AS IF Q HQ
)@@G@@OPTION WERE SPEC        @]@@@@NOREC     . @G@@@@          LMJ       X11,HR
)@@G@@CONWORD       . TEST LABEL CONTROL WORD         @E@@@@          SZ,S3   HS
)@@G@@  ICW               . GET RID OF PROBLEMS @G@@@@          J         0,X1HT
)@@G@@0              . ASSUME SDF HEADER WORD-RETURN  @I@@@@DATAPF    TYP     HU
)@@G@@  E54,L54           . DATA ATTEMPT ON PF              817TM346    @I@@@@HV
)@@G@@          J         OEND              . ERROR OFF                       HW
)@@G@@817TM347    @G@@@@SDFHERR   TYP       E26,L26            . NO SDF HEADERHX
)@@G@@ WORD IN FILE     @C@@@@          J         0,X10              . RETURN HY
)@@G@@@]@@@@ .          @E@@@@CLOSI     L,U       A0,EDIN            . CLOSE IHZ
)@@G@@NPUT FILE   @C@@@@          LMJ       X11,SDFIC          .        @C@@@@IA
)@@G@@          J         0,X10              .        @]@@@@ . @/       @E@@@@IB
)@@G@@ . THESE ROUTINES ARE USED FOR READING AND WRITING EXTERNAL @C@@@@ . FILIC
)@@G@@ES BY THE SPLIT AND ADD COMMANDS.         @E@@@@OPNOXF    L,U       A0,EID
)@@G@@DXF           . OPEN OUTPUT SDFO    @C@@@@          LMJ       X11,SDFOO IE
)@@G@@        .         @C@@@@          J         0,X10             .         IF
)@@G@@@E@@@@CLOSOXF   L,U       A0,EDXF           . CLOSE OUTPUT SCFO   @C@@@@IG
)@@G@@          LMJ       X11,SDFOC         .         @C@@@@          J       IH
)@@G@@  IOERRA            .         @C@@@@          J         0,X10           II
)@@G@@  .         @E@@@@WRBX      L         A0,IL             . GET IMAGE LENGIJ
)@@G@@TH    @E@@@@          TNE,U     A0,077            . END OF FILE?        IK
)@@G@@@E@@@@          J         0,X10             . RETURN ALSO         @G@@@@IL
)@@G@@          TNZ       OUTFIL            . FD OR ASCII OUTPUT FILE?        IM
)@@G@@@G@@@@          J         WRBX1             . ASCII, NO CONVERSION NECESIN
)@@G@@SARY  @E@@@@          CONVAF    IMAGE,IMAGE       . CONVERT ASCII TO FD IO
)@@G@@@G@@@@          IL23      IL                . CHANGE IMAGE LENGTH TO FD IP
)@@G@@      @E@@@@WRBX1     L         A0,ICW            . GET CONTROL WORD    IQ
)@@G@@@C@@@@          S         A0,ICWXF          .         @C@@@@          SZIR
)@@G@@,S6     ICWXF             .         @I@@@@          SZ        ACXF      IS
)@@G@@        . CYCLE 0 ADDED                   ED012400    @I@@@@          SZIT
)@@G@@        AC1XF             . GER RID OF JUNQUE               ED012410    IU
)@@G@@@E@@@@          L,U       A0,EDXF           . OUTPUT IT           @C@@@@IV
)@@G@@          LMJ       X11,SDFO          .         @C@@@@          J       IW
)@@G@@  IOERRA            .         @C@@@@          J         0,X10           IX
)@@G@@  .         @A@@@@LABELX    . PUT A LABEL IN THE FILE @E@@@@          L IY
)@@G@@        A1,(0500100,0)    . IMAGE CONTROL WORD  @G@@@@          TNZ     IZ
)@@G@@  OUTFIL            . ASCII OR FD OUTPUT FILE?        @G@@@@          A,JA
)@@G@@U       A1,1              . ASCII - CHANGE S6 TO 01         @C@@@@      JB
)@@G@@    S         A1,ICWXF          .         @E@@@@          L         R5,IJC
)@@G@@MAGE          . SAVE IMAGE WORD     @E@@@@          L         A1,EDSDF  JD
)@@G@@        . GET *SDFF*          @C@@@@          S         A1,IMAGE        JE
)@@G@@  .         @E@@@@          L,U       A0,EDXF           . PACKET ADD    JF
)@@G@@      @E@@@@          LMJ       X11,SDFO          . OUTPUT IT           JG
)@@G@@@E@@@@          J         IOERRA            . I-O ERROR           @E@@@@JH
)@@G@@          S         R5,IMAGE          . RESTORE IMAGE WORD  @C@@@@      JI
)@@G@@    J         0,X10             .         @E@@@@OPNIXF    L,U       A0,3JJ
)@@G@@3             . RESET THIS WORD     @C@@@@          S,H2      A0,EDXF+7 JK
)@@G@@        .         @C@@@@          L,U       A0,EDXF           . GET ADD JL
)@@G@@@E@@@@          LMJ       X11,SDFIO         . OPEN SDFI           @C@@@@JM
)@@G@@          J         RIOERR            .         @C@@@@          J       JN
)@@G@@  0,X10             .         @C@@@@CLOSIXF   L,U       A0,EDXF         JO
)@@G@@  .         @C@@@@          LMJ       X11,SDFIC         .         @C@@@@JP
)@@G@@          J         0,X10             .         @E@@@@CONTROL   L,S1    JQ
)@@G@@  A0,ICWXF          . GET CONTROL CODE    @E@@@@          TNE,U     A0,0JR
)@@G@@50            . 50 CONTROL CODE?    @C@@@@          J         CONTROL2  JS
)@@G@@        . YES     @G@@@@          TE,U      A0,042            . 42 CONTRJT
)@@G@@OL CODE (SWITCH CODE)?  @E@@@@          J         READXF            . COJU
)@@G@@DE ISN'T 42 OR 50 @G@@@@CONTROL2  SZ        FDADD             . SET ASCIJV
)@@G@@I FLAG FOR ADD FILE     @G@@@@          TNZ       ACXF              . ISJW
)@@G@@ ADD FILE FD? (CHECK S6)      @G@@@@          SNZ       FDADD           JX
)@@G@@  . YES, SET FD FLAG FOR ADD FILE   @A@@@@READXF    L         A0,BLANK2 JY
)@@G@@      @C@@@@          S         A0,IMAGE          .         @I@@@@      JZ
)@@G@@    SZ        WINHIB            .                                 817TM3KA
)@@G@@49    @C@@@@          L,U       A0,EDXF           . GET ADD @E@@@@      KB
)@@G@@    LMJ       X11,SDFI          . GET IMAGE           @E@@@@          J KC
)@@G@@        RIOERR            . I-O ERROR           @C@@@@          J       KD
)@@G@@  0,X10             . EOF     @E@@@@          TP        EDXF+10         KE
)@@G@@  . CONTROL WORD?       @E@@@@          J         CONTROL            . YKF
)@@G@@ES, GET NEXT      @E@@@@          L         A0,RCXF           . GET REQUKG
)@@G@@ESTED CYCLE @G@@@@          TLE       A0,ACXF           . COMPARE WITH AKH
)@@G@@CTUAL CYCLE       @E@@@@          J         READXF            . DISCARD KI
)@@G@@IT          @G@@@@          TNZ       AC1XF             . WASS IT ADDED KJ
)@@G@@THEN DELETED      @C@@@@          SZ        DC1XF             .         KK
)@@G@@@C@@@@          SZ        AC1XF             .         @G@@@@          TNKL
)@@G@@Z       FDADD             . ADD INPUT FLAG FD OR ASCII?     @C@@@@      KM
)@@G@@    J         READXF1           . ASCII   @G@@@@          L         A0,IKN
)@@G@@LXF           . IMAGE LENGTH TO BE CONVERTED    @G@@@@          CONVFA  KO
)@@G@@  IMAGE,IMAGE       . CONVERT FD TO ASCII FOR ED      @G@@@@          ILKP
)@@G@@32      ILXF              . CHANGE IMAGE LENGTH FOR ASCII   @C@@@@READXFKQ
)@@G@@1   TNZ       DCXF              . DELETED?@E@@@@          J         READKR
)@@G@@XF2           . SKIP NOT DELETED    @I@@@@          L        A0,RCXF    KS
)@@G@@     . LOCAL                                 LOCAL    @G@@@@          TGKT
)@@G@@        A0,DCXF           . REQUESTED LE DELETED?           @C@@@@      KU
)@@G@@    J         READXF            . GET NEXR@E@@@@          SZ        DCXFKV
)@@G@@              . CLEAR DELETE        @I@@@@READXF2                       KW
)@@G@@. INCREMENT LINE COUNT                    ED012430    @G@@@@          SZKX
)@@G@@        ACXF              . CLEAR CYCLE INDICATOR           @G@@@@      KY
)@@G@@    SNA       RC,AC1XF          . INDICATE ADDED THIS CYCLE       @C@@@@KZ
)@@G@@          J         1,X10             .         @A@@@@PFI       TZ      LA
)@@G@@  DOPTO           @A@@@@          J         PFUP-1          @C@@@@      LB
)@@G@@    L,U       A0,CYLIM            .       @E@@@@          SA        A0,CLC
)@@G@@L               . SET CYCLE LIMIT   @C@@@@          LA,U      A0,1      LD
)@@G@@          .       @G@@@@          SA        A0,CC               . SET NULE
)@@G@@MBER OF CYCLES=1        @E@@@@          SZ        LC                  . LF
)@@G@@SET LATEST CYCLE=0@]@@@@PFUP      . @C@@@@          LA,U      A0,EDOUT  LG
)@@G@@          .       @E@@@@          LMJ       X11,SDFOC           . CLOSE LH
)@@G@@ OUTPUT     @A@@@@          J         IOERRA          @E@@@@          ERLI
)@@G@@        TDATE$            . GET TIME AND DATE   @E@@@@          SSC     LJ
)@@G@@  A0,18             . SHIFT FOR DUM FORMAT@E@@@@          S         A0,OLK
)@@G@@UTBL+11       . INTO PFI PACKET     @E@@@@          L,S2      A0,OUTBL+5LL
)@@G@@        . FLAG BITS IN TABLE  @G@@@@          TZ        OUTFIL          LM
)@@G@@  . OUTPUT FILE FD OR ASCII?        @C@@@@          J         FDBIT     LN
)@@G@@        . FD      @G@@@@          OR,U      A0,020            . SET ASCILO
)@@G@@I FLAG BIT 28           @E@@@@          S,S2      A1,OUTBL+5        . STLP
)@@G@@ORE IN ELT TABLE  @C@@@@          J         $+3               .         LQ
)@@G@@@G@@@@FDBIT     AND,U     A0,057            . CLEAR ASCII FLAG BIT 28   LR
)@@G@@      @E@@@@          S,S2      A1,OUTBL+5        . STORE IN ELT TABLE  LS
)@@G@@@G@@@@          LN,U      A0,OUTBL            . LOAD PACKET ADDRESS     LT
)@@G@@      @I@@@@          LA        A1,EDOUT+5          . LOAD STARTING ADDRLU
)@@G@@ESS OF ELEMENT          @G@@@@          ANU       A1,OUTBL+10         . LV
)@@G@@CALCULATE LENGTH OF ELEMENT   @E@@@@          SA,H2     A2,OUTBL+9      LW
)@@G@@    . AND STORE         @A@@@@          TZ        DOPTO           @A@@@@LX
)@@G@@          J         PFUP1   . PFI IT@^@@@@          ER        PFI$@A@@@@LY
)@@G@@          JZ        A2,0,X10        @^@@@@          TNE,U     A2,2@A@@@@LZ
)@@G@@          J         IOERR           @^@@@@          TNE,U     A2,3@A@@@@MA
)@@G@@          J         PFERR           @^@@@@          TNE,U     A3,4@A@@@@MB
)@@G@@          J         0,X10           @A@@@@          J         PFOFLO    MC
)@@G@@      @A@@@@PFUP1     SZ        OUTBL+10        @A@@@@          J       MD
)@@G@@  0,X10           @]@@@@PFWL      . @A@@@@          L         A2,DOPTO  ME
)@@G@@      @E@@@@          SZ        A1        . SET ADDRESS TO 0.           MF
)@@G@@@C@@@@          JNZ       A2,0,X10     . RETURN       @C@@@@          ERMG
)@@G@@        PFWL$              .        @E@@@@          TNZ,S1    OUTBL+9   MH
)@@G@@       . IS SYMBOLIC TYPE SET?@E@@@@          S,S1      R10,OUTBL+9     MI
)@@G@@    . SET TO ELT TYPE   @E@@@@          JZ        A2,0,X10           . NMJ
)@@G@@ORMAL RETURN      @C@@@@          TNE,U     A2,3               .        MK
)@@G@@@C@@@@          J         PFERR              .        @C@@@@          J ML
)@@G@@        IOERR              .        @C@@@@                              MM
)@@G@@         .        @]@@@@ . @/       @]@@@@EOF       . @E@@@@          TZMN
)@@G@@        ONSITE            . ONSITE PRINT?       @E@@@@          J       MO
)@@G@@  EOFONS            . DON'T PRINT MSG     @E@@@@          A$EDIT     ETAMP
)@@G@@B          . START EDIT MODE        @E@@@@          A$EMSG     E7       MQ
)@@G@@     . EOF AT LINE: ...       @^@@@@          A$EDECV    LCT@^@@@@      MR
)@@G@@    A$EDITX       @C@@@@          TYP       IMBUF,6           .         MS
)@@G@@@^@@@@EOFONS    SZ        OK  @^@@@@          SZ        ICW @E@@@@      MT
)@@G@@    SNZ       WINHIB         . SET WRITE INHIBIT      @A@@@@          SZMU
)@@G@@        LENGTH          @G@@@@          J         TOP1       . DO A 'TOPMV
)@@G@@' FOR CONVENIENCE AND         @C@@@@                    . TO AVOID READ MW
)@@G@@AFTER EOF...@E@@@@FILERR    TEP,U     A0,0400000        . PRINTFILE IN UMX
)@@G@@SE?   @E@@@@          J         FILNOTA            . TELL HIM SO        MY
)@@G@@@I@@@@FACERP    L         A5,A0              . SAVE ERROR CODE          MZ
)@@G@@      ED012450    @C@@@@          A$EDIT     ETAB               .       NA
)@@G@@@E@@@@          A$EMSG     E31                . FILE FAC REJECT   @C@@@@NB
)@@G@@          A$EOCTV    A5                 . CODE  @^@@@@          A$EDITX NC
)@@G@@   .  @E@@@@          TYP       IMBUF,8           . TYPE MESSAGE        ND
)@@G@@@G@@@@          J         RECTST              . NON FATAL- GO TO NEXT CONE
)@@G@@MMAND @E@@@@FILNOTA   TYP       E32,L32            . PRINTFILE IN USE   NF
)@@G@@@E@@@@          J         RECTST             . NON FATAL- RETURN  @]@@@@NG
)@@G@@IOERR     . @A@@@@          TYP       E3,L3           @C@@@@       J    NH
)@@G@@   OEND                . ERROR EXIT @E@@@@IOERRA    TZ        AUTOREC   NI
)@@G@@        . AUTO RECOVERY?      @C@@@@          J         AUTOERR         NJ
)@@G@@  . YES     @E@@@@          A$EDIT     ETAB               . START EDIT  NK
)@@G@@      @E@@@@          A$EMSG     E3                 . STATUS...         NL
)@@G@@@G@@@@          A$EOCTV    A5                 . INSERT OCTAL STATUS     NM
)@@G@@      @C@@@@          A$EDITX                       .       @E@@@@      NN
)@@G@@    TYP       IMBUF,9           . TYPE OUT MESSAGE    @I@@@@          TENO
)@@G@@,U      A5,5              . I-O ERROR 5                     ED012470    NP
)@@G@@@C@@@@       J       OEND                . ERROR EXIT @C@@@@          FTNQ
)@@G@@YPE     C103,LC103        . NO EOF  @I@@@@          J         OEND      NR
)@@G@@        .                                 ED012500    @]@@@@SYNERR    . NS
)@@G@@@A@@@@          TYP       E4,L4           @A@@@@          J         RECTNT
)@@G@@ST          @G@@@@NUMERR    TYP       E18,L18            . NUMBER EXPECTNU
)@@G@@ED SYNTAX ERROR   @C@@@@RECTST TNZ     REEXIT                . RECOVERY?NV
)@@G@@@C@@@@       J       NXRQ                . YES.       @I@@@@          SNNW
)@@G@@Z       ERR$X             . SET BOMB OFF BLAG               817TM353    NX
)@@G@@@C@@@@       J       OEND                . ERROR EXIT @A@@@@OEND      TYNY
)@@G@@P       E16,L16         @E@@@@          ON        INSTAT             . INZ
)@@G@@NTERNAL STATISTICS@E@@@@          L,U       A0,2               .   OMIT OA
)@@G@@EXIT        @C@@@@          LMJ       X9,STATOUT         .        @C@@@@OB
)@@G@@          J         $+3                .        @C@@@@          OFF     OC
)@@G@@  INSTAT             .        @C@@@@ERXT                                OD
)@@G@@   .        @C@@@@          ON        INSTAT             .        @E@@@@OE
)@@G@@          L,U       A0,3               .   ERROR EXIT       @C@@@@      OF
)@@G@@    LMJ       X9,STATOUT         .        @C@@@@          OFF       INSTOG
)@@G@@AT             .        @G@@@@          J         ENDFRE           . ENDOH
)@@G@@ EXIT, NO CORRECTIONS         @C@@@@          ON        INSTAT          OI
)@@G@@   .        @E@@@@STATOUT   TNZ       STATAD             . FILE ASGD?   OJ
)@@G@@      @C@@@@          J         NOSTATO            . NO     @G@@@@      OK
)@@G@@    S,S1      A0,STATBUF+6       . EXIT=1  OMIT=2  ERROR=3        @G@@@@OL
)@@G@@          ER        TIME$              . TIME IN MILLISECONDS           OM
)@@G@@@C@@@@          AN        A0,STATBUF+4       .        @E@@@@          S ON
)@@G@@        A0,STATBUF+4       . ELAPSED TIME       @E@@@@          L       OO
)@@G@@  A0,MSPCHR           . SPECIAL CHARS     @C@@@@          S,H1      A0,SOP
)@@G@@TATBUF+7        .       @C@@@@          L         A0,LOCHR            . OQ
)@@G@@      @C@@@@          S,H2      A0,STATBUF+7        .       @C@@@@      OR
)@@G@@    L         A0,THETAB           .       @C@@@@          S,H1      A0,SOS
)@@G@@TATBUF+8        .       @C@@@@          L         A0,CONTCHAR         . OT
)@@G@@      @C@@@@          S,H2      A0,STATBUF+8        .       @I@@@@      OU
)@@G@@    TZ        ALLLN             . LINES                           817TM3OV
)@@G@@55    @I@@@@          SNZ       STATBUF+6,,S2         .                 OW
)@@G@@            817TM356    @I@@@@          TZ        QUICKON             . OX
)@@G@@LINES                         817TM357    @I@@@@          SNZ       STATOY
)@@G@@BUF+6,,S3         .                             817TM358    @I@@@@      OZ
)@@G@@    TZ        TYPESEQ             . LINES                         817TM3PA
)@@G@@59    @I@@@@          SNZ       STATBUF+6,,S4         .                 PB
)@@G@@            817TM360    @C@@@@          L,U       A0,STATIO          .  PC
)@@G@@      @E@@@@          ER        IOW$                . WRITE OUT BLOCK   PD
)@@G@@@I@@@@          L         A0,(3,RFRESTAT)                               PE
)@@G@@      817TM364    @I@@@@          ER        CSF$              .         PF
)@@G@@                        817TM365    @C@@@@NOSTATO   J         0,X9      PG
)@@G@@         .        @C@@@@          OFF       INSTAT             .        PH
)@@G@@@]@@@@ . @/       @A@@@@$(0)   . SET LOC COUNTER 0          @C@@@@IBF   PI
)@@G@@ +       0                   . XX         @C@@@@       +       0        PJ
)@@G@@            . XX        @I@@@@          J         IBF1              . GOPK
)@@G@@ TO I-BANK                    817TM368    @I@@@@$(1),IBF1 .             PL
)@@G@@                                                817TM369    @G@@@@      PM
)@@G@@    TZ        BRKSET             . IS BREAK ALREADY SET?          @E@@@@PN
)@@G@@          J         BRKRECOV           . YES, ABNORMAL BREAK@C@@@@      PO
)@@G@@    S         A0,IBF+1           . SAVE A0@E@@@@          L,S3      A0,IPP
)@@G@@BF            . GET CONTINGENCY TYPE@E@@@@          TNE,U     A0,1      PQ
)@@G@@        . ILLEGAL OPERATION   @C@@@@          J         BRKIOPR         PR
)@@G@@  . YES     @E@@@@          TNE,U     A0,2              . GUARD MODE    PS
)@@G@@      @C@@@@          J         BRKIGDM           . YES     @C@@@@      PT
)@@G@@    TNE,U     A0,012            . ERR MODE@C@@@@          J         BRKEPU
)@@G@@RR            .         @E@@@@          ON        INSTAT             . SPV
)@@G@@TATISTICS         @E@@@@          L,H1      A0,STATBUF+9       . INCR BRPW
)@@G@@EAK CNTR    @C@@@@          A,U       A0,1               .        @C@@@@PX
)@@G@@          S,H1      A0,STATBUF+9       .        @C@@@@          OFF     PY
)@@G@@  INSTAT             .        @E@@@@          L,H2      A0,IBF          PZ
)@@G@@   . GET BREAK ADDRESS  @E@@@@          A,U       A0,1               . AQA
)@@G@@DJUST FOR RE-ENTRY@E@@@@          S,H2      A0,IBF             . PUT IN QB
)@@G@@IBF         @G@@@@          SZ,S3     IBF                . CLEAR X REGISQC
)@@G@@TER AREA          @I@@@@BRKRECOV  L         A0,TREADSEQ+1      . READ BLQD
)@@G@@ANK LINE AND DISCARD    ED012520    @A@@@@         ER        READ$      QE
)@@G@@     .@E@@@@          TZ        BRKSET             . BREAK ALREADY SET? QF
)@@G@@@C@@@@       J       OEND               . ENTER EDIT. @E@@@@          L,QG
)@@G@@S1      A0,IBF             . GET ERROR TYPE     @E@@@@          TE,U    QH
)@@G@@  A0,1               . II KEYIN?          @C@@@@          SNZ       BRKSQI
)@@G@@ET          . BREAK KEY @I@@@@          TG,U      A0,3              . IFQJ
)@@G@@ TIMOUT GO TO OEND            817TM371    @G@@@@          J         OENDQK
)@@G@@              . SOME UNKNOWN CONTINGENCY        @E@@@@          L       QL
)@@G@@  A0,IBF+1           . RELOAD A0          @E@@@@          J         *IBFQM
)@@G@@               . RE-ENTER           @^@@@@BRKIOPR   . ILLOP       @C@@@@QN
)@@G@@ DO DUMP ,  SLJ  SITEDUMP             .         @E@@@@          A$EDIT  QO
)@@G@@  ETAB              . START EDIT          @C@@@@          A$EMSG    ('IOQP
)@@G@@PR &  ')      .         @C@@@@          ON        INSTAT         . STATIQQ
)@@G@@STICS @E@@@@          L,H1      A0,STATBUF+10      . INCR IOPR          QR
)@@G@@@C@@@@          A,U       A0,1               .        @C@@@@          S,QS
)@@G@@H1      A0,STATBUF+10      .        @C@@@@          OFF       INSTAT    QT
)@@G@@     . STATISTICS @C@@@@          J         BRKPRT            .         QU
)@@G@@@^@@@@BRKERR    . EMODE       @C@@@@ DO DUMP ,  SLJ SITEDUMP            QV
)@@G@@  .         @C@@@@          A$EDIT     ETAB               .       @E@@@@QW
)@@G@@          A$EMSG    E311              . START MESSAGE       @C@@@@      QX
)@@G@@    A$EOCTV    IBF,,S1            . TYPE  @C@@@@          A$ECHAR    '-'QY
)@@G@@               .        @E@@@@          A$EOCTV    IBF,,S2           . EQZ
)@@G@@RROR CODE         @E@@@@          A$EMSGR                       . CONTINRA
)@@G@@UE MSG      @E@@@@          ON        INSTRT             . STATISTICS   RB
)@@G@@      @E@@@@          L,H2      A0,STATBUF+10      . INCR ERR$          RC
)@@G@@@C@@@@          A,U       A0,1               .        @C@@@@          S,RD
)@@G@@H2      A0,STATBUF+10      .        @C@@@@          OFF       INSTRT    RE
)@@G@@         .        @C@@@@          J         BRKPRT             . FINISH RF
)@@G@@@^@@@@BRKIGDM   . IGDM        @C@@@@ DO DUMP ,  SLJ SITEDUMP            RG
)@@G@@  .         @C@@@@          A$EDIT     ETAB              .        @C@@@@RH
)@@G@@          A$EMSG     ('IGDM &')        .        @E@@@@          ON      RI
)@@G@@  INSTAT             . STATISTICS         @E@@@@          L,H2      A0,SRJ
)@@G@@TATBUF+9       . INCR IGDM CNTR     @C@@@@          A,U       A0,1      RK
)@@G@@         .        @C@@@@          S,H2      A0,STATBUF+9       .        RL
)@@G@@@C@@@@          OFF       INSTAT             .        @C@@@@BRKPRT    A$RM
)@@G@@EOCTV    IBF,,H2           .        @^@@@@          A$EDITX    .  @C@@@@RN
)@@G@@          TYP       IMBUF,6           . MESSAGE @I@@@@          L,H1    RO
)@@G@@  A0,IBF            . IS THIS 2ND RETURN ABNORM FROM READ$        @I@@@@RP
)@@G@@          L,U       R1,ERTLN          . GET ERROR TABLE LENGTH          RQ
)@@G@@ED012540    @I@@@@          L         A1,(1,0)          . INDEX         RR
)@@G@@                  ED012550    @I@@@@          SE,H1     A0,ERTABZ,*A1   RS
)@@G@@   . SEE IF THERES A MESSAGE        ED012560    @I@@@@          J       RT
)@@G@@  NOERMS            . NO MESSAGE                      ED012570    @I@@@@RU
)@@G@@          L,U       A0,ERBAS          . BASE OF ERROR MESSAGES          RV
)@@G@@ED012580    @I@@@@          L,H2      A1,ERTABZ-1,A1    . GET  PTR TO MSRW
)@@G@@G                 ED012590    @I@@@@          AND,U     A1,07777        RX
)@@G@@  . ADD OUT BIAS                    ED012600    @I@@@@          LSSL    RY
)@@G@@  A1,6              . SHIFT COUNT TO POSITION         ED012610    @I@@@@RZ
)@@G@@          LXM,U     A1,0              . ZERO IN LOWER                   SA
)@@G@@ED012620    @I@@@@          AH        A1,(0100,0)          . ADD IN SPACSB
)@@G@@E                 ED012630    @I@@@@          A         A0,A2     . ADD SC
)@@G@@IN BIAS TO ADDRESS                  ED012640    @I@@@@          A       SD
)@@G@@  A0,A1             . ADD IN COUNT AND SPACE          ED012650    @I@@@@SE
)@@G@@          ER        PRINT$            . PRINT MSG                       SF
)@@G@@ED012660    @I@@@@NOERMS    TNE,U      A0,020212         .              SG
)@@G@@                  ED012680    @C@@@@          J         BRKABT          SH
)@@G@@  .         @I@@@@          TNE,U     A0,022512        . BAD MAIL FILE ESI
)@@G@@MODE?             817TM374    @I@@@@          J         ZAPMF$          SJ
)@@G@@  . ZAP THE MAIL FILE               817TM375    @I@@@@          TNE,U   SK
)@@G@@  A0,022212        . BAD MAIL FILE EMODE?             817TM376    @I@@@@SL
)@@G@@          J         ZAPMF$            . ZAP THE MAIL FILE               SM
)@@G@@817TM377    @C@@@@          TNE,U      A0,020612         .        @C@@@@SN
)@@G@@          J         BRKABT            .         @E@@@@          J       SO
)@@G@@  EDIT1             . ENTER EDIT MODE     @C@@@@BRKABT    TYP       ('ABSP
)@@G@@ORT!  '),2    .         @C@@@@          ER        EXIT$             .   SQ
)@@G@@      @I@@@@ . ERROR MESSAGE TABLE FORMAT IS:                           SR
)@@G@@            ED012700    @I@@@@ . HAVE TO GET RID OF AN UNREADABLE MAIL FSS
)@@G@@ILE                           817TM379    @^@@@@          FIELDATA  .   ST
)@@G@@@I@@@@FRRMF$    '@FREE,R MF$$' .                                        SU
)@@G@@      817TM380    @I@@@@ASQYMF    '@ASG,AYQZ MF$$' .                    SV
)@@G@@                        817TM381    @I@@@@ZAPMF$    L         A0,(2,FRRMSW
)@@G@@F$)     . FREE MF$$                       817TM382    @I@@@@          ERSX
)@@G@@        CSF$              .                                 817TM383    SY
)@@G@@@I@@@@          L         A0,(3,ASQYMF)     .                           SZ
)@@G@@      817TM384    @I@@@@          ER        CSF$              .         TA
)@@G@@                        817TM385    @I@@@@          L         A0,(02,FRETB
)@@G@@DMF)    . DELETE MF$$                     817TM386    @I@@@@          ERTC
)@@G@@        CSF$              .                                 817TM387    TD
)@@G@@@I@@@@          J         EDIT1             . SHOULD BE OK NOW          TE
)@@G@@      817TM388    @I@@@@ .  ............................................TF
)@@G@@........................ED012710    @I@@@@ .  : H1 OF CONTINGENCY PACKETTG
)@@G@@ : MSG COUNT: BIAS FROM ERBAS             ED012720    @I@@@@ .  ........TH
)@@G@@............................................................ED012730    TI
)@@G@@@I@@@@P$        PROC      1                 . PROC TO GENERATE ER TABLE TJ
)@@G@@ENTRY ED012740    @I@@@@ERCON*    NAME      .                           TK
)@@G@@                        ED012750    @I@@@@F18612    FORM      18,6,12   TL
)@@G@@        . FORM FOR TABLE GENERATION       ED012760    @I@@@@          F1TM
)@@G@@8612    P$(1,1),P$(1,2),P$(1,3)-ERBAS .                     ED012770    TN
)@@G@@@I@@@@          END       .                                             TO
)@@G@@      ED012780    @I@@@@ERTABZ     . ERROR MESSAGE TABLE                TP
)@@G@@                        ED012790    @I@@@@          ERCON     044012,LC1TQ
)@@G@@01,C101 .                                 ED012800    @I@@@@          ERTR
)@@G@@CON     044212,LC102,C102 .                                 ED012810    TS
)@@G@@@I@@@@          ERCON     012212,LC104,C103 . I-0 22                    TT
)@@G@@      ED012820    @I@@@@ERTLN     EQU       $-ERTABZ          .         TU
)@@G@@                        ED012830    @I@@@@ERBAS     . BASE OF ERROR MSGSTV
)@@G@@. ALL SHOULD FOLLOW DIRECTLY              ED012840    @I@@@@C101      'CTW
)@@G@@SF$ IMAGE SYNTAX ERROR' .                                   ED012850    TX
)@@G@@@I@@@@LC101     EQU       $-C101            .                           TY
)@@G@@      ED012860    @I@@@@C102      'ILLEGAL COMMAND FOR CSF$'            TZ
)@@G@@                        ED012870    @I@@@@LC102     EQU       $-C102    UA
)@@G@@        .                                 ED012880    @I@@@@C103      'IUB
)@@G@@NPUT FILE HAS NO SDF END-OF-FILE' .                         ED012890    UC
)@@G@@@I@@@@LC103     EQU       $-C103            .                           UD
)@@G@@      ED012900    @I@@@@C104      'OR EXCEEDS 800 TRACKS' .             UE
)@@G@@                        ED012910    @I@@@@LC104     EQU       $-C103    UF
)@@G@@        .                                 ED012920    @^@@@@          ASUG
)@@G@@CII     .   @G@@@@$(0),IORECOV RES    2                 . SPACE FOR CONTUH
)@@G@@INGENCY INFO      @E@@@@          J         IORIB             . GO TO IBUI
)@@G@@ANK         @I@@@@$(1),IORIB          L,S1              A0,IORECOV      UJ
)@@G@@                  . GET ER    @E@@@@          TE,U      A0,1            UK
)@@G@@  . IS IT I-O?          @C@@@@          ER        ERR$              . NOUL
)@@G@@PE    @E@@@@          L,S2      A5,IORECOV        . GET ERROR CODE      UM
)@@G@@@E@@@@          TNE,U     A5,022            . IS IT FILE OVERFLOW?@C@@@@UN
)@@G@@          J         PFOFLO            . YES     @E@@@@          J       UO
)@@G@@  IOERRA            . NO USE USUAL MSG    @E@@@@PFOFLO    TYP       E6,LUP
)@@G@@6             . OUTPUT FILE OVERFLOW@I@@@@          L,U       A0,EDOUT  UQ
)@@G@@        . CLOSE OUTPUT FILE               ED012940    @I@@@@          LMUR
)@@G@@J       X11,SDFOC         . CLOSE OUTPUT FILE               ED012950    US
)@@G@@@I@@@@          J         $+1               . YES WE KNOW THAT          UT
)@@G@@      ED012960    @I@@@@          LMJ       X10,CLOSI         . CLOSE THUU
)@@G@@E INPUT FILE            ED012970    @^@@@@          FIELDATA  .   @I@@@@UV
)@@G@@          DL        A2,('ED$TA       ')                                 UW
)@@G@@ED012980    @I@@@@          DL        A0,EDIN           . SEE WHICH FILEUX
)@@G@@ IS THE INPUT     ED012990    @I@@@@          TNE       A0,('ED$TA ')   UY
)@@G@@  .                                 ED013000    @I@@@@          DL      UZ
)@@G@@  A2,('ED$TB       ') .                               ED013010    @^@@@@VA
)@@G@@          ASCII     .   @I@@@@          DS        A2,EDOUT          . SEVB
)@@G@@T THE OUTPUT FILE OPPOSITE    ED013020    @I@@@@          SNZ       OK  VC
)@@G@@              . NOT AT FILE BOTTOM              ED013030    @I@@@@      VD
)@@G@@    TOPTN     'U'               . U OR T MEANS WE INCRED RC       ED0130VE
)@@G@@40    @I@@@@          TNOPTN    'T'               .                     VF
)@@G@@            ED013050    @I@@@@          AN,U      RC,1              . MUVG
)@@G@@ST HAVE INC RC                ED013060    @C@@@@          DL        A0,(VH
)@@G@@'OUTPUT F')   .         @I@@@@          DS        A0,IMBUF          .   VI
)@@G@@                              ED013080    @C@@@@          L         A0,(VJ
)@@G@@'ILE?')       .         @C@@@@          S         A0,IMBUF+2        .   VK
)@@G@@      @I@@@@          L,U       A0,TREADSEQ       . TREAD IT            VL
)@@G@@            ED013090    @I@@@@          ER        ATREAD$            .  VM
)@@G@@                               ED013100   @I@@@@          MSI,U     A0,4VN
)@@G@@              . MULTIPLY BY 6 TO GET CHARS      ED013110    @I@@@@      VO
)@@G@@    L         A5,A0             . SAVE                            ED0131VP
)@@G@@20    @C@@@@          E$DIT     FTAB              .         @^@@@@      VQ
)@@G@@    FIELDATA  .   @I@@@@          E$MSG     ('@USE &')        . USE     VR
)@@G@@                        ED013140    @I@@@@          E$FD2     OUTBL     VS
)@@G@@        . USE NAME FOR FILE               ED013150    @I@@@@          E$VT
)@@G@@CHAR    ','               .                                 ED013160    VU
)@@G@@@^@@@@          ASCII     .   @I@@@@          L         A1,A5           VV
)@@G@@  . GET CHAR COUNT                  ED013170    @I@@@@          L,U     VW
)@@G@@  A0,EDIT14         . GET NEW FILENAME                ED013180    @I@@@@VX
)@@G@@          E$COPY    . COPY                                              VY
)@@G@@ED013190    @I@@@@          E$DITX    .                                 VZ
)@@G@@                  ED013200    @I@@@@          L         A0,(14,FIMBUF)  WA
)@@G@@   .                                 ED013210   @I@@@@          ER      WB
)@@G@@  CSF$              . APPLY USE                       ED013220    @I@@@@WC
)@@G@@          L         A0,('EXIT')     .                                 EDWD
)@@G@@013230      @I@@@@          S         A0,ILSTCD         . DO AN EXIT    WE
)@@G@@                  ED013240    @I@@@@          SNZ       LLSTCD          WF
)@@G@@  . 1 WORD LONG                     ED013250    @I@@@@          SNZ     WG
)@@G@@  RLSTCD            . SET FLAG                        ED013260    @I@@@@WH
)@@G@@          L,U       X3,NXRQ           . GET NEXT COMMAND AFTER FINISHINGWI
)@@G@@ED013270    @E@@@@          TNOPTN    'U'               . U OPTION SET? WJ
)@@G@@      @G@@@@          SZ        FEDS1A            . CLEAR FIRSTS IF IT IWK
)@@G@@S           @G@@@@          SZ        FEDS2A            . CLEAR AUTO ASSWL
)@@G@@IGN FLAG          @I@@@@          J         PINGPONG          . LET HIM WM
)@@G@@GO                      ED013280    @]@@@@$(1)        @^@@@@          FIWN
)@@G@@ELDATA  .   @C@@@@E1        'ELEMENT & NOT IN SPECIFIED FILE &&'  @^@@@@WO
)@@G@@          ASCII     .   @^@@@@E3        'I/O ERROR'   @^@@@@L3        EQWP
)@@G@@U       $-E3@^@@@@E311      'EMODE & AT &'@^@@@@E3S       'STATUS &'    WQ
)@@G@@@A@@@@E4        'SYNTAX ERROR.'           @^@@@@L4        EQU       $-E4WR
)@@G@@@A@@@@E6        'OUTPUT FILE OVERFLOW.'   @^@@@@L6        EQU       $-E6WS
)@@G@@@^@@@@E7        'EOF:& '      @A@@@@E8        'ILLEGAL COMMAND.'        WT
)@@G@@@^@@@@L8        EQU       $-E8@A@@@@E11       'SCAN:&'               .  WU
)@@G@@@^@@@@E12       'LINES:&'     @A@@@@E15          'MISSING DELIMITER:&'  WV
)@@G@@@C@@@@E16          'NO CORRECTIONS APPLIED.'          @^@@@@L16         WW
)@@G@@EQU   $-E16 @E@@@@E17        'NO FIND'                   . STRING NOT FOWX
)@@G@@UND   @^@@@@L17        EQU   $-E17  @C@@@@E18       'MISSING NUMERIC'   WY
)@@G@@         .        @C@@@@L18       EQU       $-E18              .        WZ
)@@G@@@C@@@@E20       'INVALID TYPE'               .        @C@@@@L20       EQXA
)@@G@@U       $-E20              .        @E@@@@E21       'ILLEGAL COMMAND WHEXB
)@@G@@N USED AT LINE 0' .           @C@@@@L21       EQU       $-E21           XC
)@@G@@   .        @A@@@@E211      'COLUMN REFERENCE ERROR'  @A@@@@L211      EQXD
)@@G@@U       $-E211          @A@@@@E22       'LINE REFERENCE ERROR' .  @C@@@@XE
)@@G@@L22       EQU       $-E22              .        @A@@@@E24       'AUTO'  XF
)@@G@@. AUTO SAVE       @C@@@@L24       EQU       $-E24              .        XG
)@@G@@@C@@@@E26       'NO SDF HEADER WORD IN FILE' .        @A@@@@L26       EQXH
)@@G@@U       $-E26           @C@@@@E27       'INVALID EDIT CHAR:&'        .  XI
)@@G@@      @C@@@@E28       'MISSING TERMINATION CHAR:&' .        @C@@@@E29   XJ
)@@G@@    'BAD TAB:&'                  .        @C@@@@E30       'DEPRESS PUNCHXK
)@@G@@ ON'           .        @C@@@@L30       EQU       $-E30              .  XL
)@@G@@      @A@@@@E31       'FILE FAC REJECT:&'       @A@@@@E32       'PRINTFIXM
)@@G@@LE IN USE'        @C@@@@L32       EQU       $-E32              .        XN
)@@G@@@^@@@@          FIELDATA  .   @C@@@@E33       'END ONSITE PRINTOUT ON & XO
)@@G@@AT &'  .    @^@@@@          ASCII     .   @A@@@@E35       'INPUT MODE ASXP
)@@G@@SUMED.'     @C@@@@L35       EQU       $-E35             .         @C@@@@XQ
)@@G@@E38       'ELEMENT DESIGNATION ERROR'           @C@@@@L38       EQU     XR
)@@G@@  $-E38             .         @A@@@@E39       'FILE DESIGNATION ERROR'  XS
)@@G@@@C@@@@L39       EQU       $-E39             .         @A@@@@E40       'PXT
)@@G@@ROGRAM FILE UNDEFINED'  @C@@@@L40       EQU       $-E40              .  XU
)@@G@@      @A@@@@E41       'READ-ONLY MODE'          @C@@@@L41       EQU     XV
)@@G@@  $-E41             .         @^@@@@          FIELDATA  .   @G@@@@E42   XW
)@@G@@    '****NO CARD DECK****  PLEASE RETURN THIS LISTING TO:'        @^@@@@XX
)@@G@@          ASCII     .   @A@@@@L42       EQU       $-E42           @A@@@@XY
)@@G@@E44       'READ I-O ERROR' .        @C@@@@L44       EQU       $-E44     XZ
)@@G@@        .         @A@@@@E45       'NONEXISTANT CYCLE' .     @C@@@@L45   YA
)@@G@@    EQU       $-E45             .         @C@@@@E47       'INCORRECT MODYB
)@@G@@E SPECIFIED.' .         @C@@@@L47       EQU       $-E47             .   YC
)@@G@@      @A@@@@E50       'MAIL FILE FULL'          @C@@@@L50       EQU     YD
)@@G@@  $-E50             .         @A@@@@E51       'MINIMUM LINES ALLOWED:&' YE
)@@G@@@C@@@@E52       'ILLEGAL MOVE - DITTO ASSUMED.' .     @C@@@@L52       EQYF
)@@G@@U       $-E52             .         @I@@@@E53       'AUTO NOT ALLOWED INYG
)@@G@@ BATCH'  2                                ED020350    @I@@@@L53       EQYH
)@@G@@U       $-E53             .                                 ED020360    YI
)@@G@@@I@@@@E54       'ATTEMPT TO EDIT PROGRAM FILE AS A DATA FILE' .         YJ
)@@G@@      817TM391    @I@@@@L54       EQU       $-E54             .         YK
)@@G@@                        817TM392    @I@@@@E55   'IBANK & DBANK NOT THE SYL
)@@G@@AME EDITOR LEVEL OR BUILT INCORRECTLY' .  817TM394    @I@@@@L55       EQYM
)@@G@@U       $-E55             .                                 817TM395    YN
)@@G@@@I@@@@E56       'TIME REMAINING TILL MAX TIME:'                         YO
)@@G@@      817TM397    @I@@@@L56       EQU       $-E56             .         YP
)@@G@@                        817TM398    @I@@@@$(20),DBKEND        . D-BANK EYQ
)@@G@@ND MARKER                                 817TM400    @I@@@@$(21),IBKENDYR
)@@G@@        . I-BANK END MARKER                                 817TM401    YS
)@@G@@@^@@@@          END  .        ___ RETURN  @]@@@@IOERR     . @A@@@@      YT
)@@G@@)@@[U@@@@@@@@@@ELTSYM   C*_^@)^[ICDHE[MD9BE))^@)DDIE[PC(^DDO(&&&&&.2A-&-YU
)@@G@@ED& 14AA@@@@)@F[U@@@@@@@@@@LSP@@@BAS@@@APL@@@SSG@@@SEC@@@DOC@@@MAP@@@ALGYV
)@@G@@@@@FOR@@@COB@@@ASMAB@@@@)@Q@U@)@[@)@@@@@@@)@G@C@@@@@@@@@@@@@@@@@@@@@@@@@YW
)@@G@@@@@@@@@@@@@@NORMAL@UPPER@@@PLSAC@@@@)@I@S@)@N@8@@@@@@@@@@@@@@@@@@@@@@@@@YX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B_@B_AD@@@@)@U@S@)@Z@8@@@@@@@@FREE YY
)@@G@@ MF$$ @ASG,A20    ,F2///P MF$$@ASG,C@@@@@@@@@@@@@@@@@@AE@@@@)@&[K@#A@G*@YZ
)@@G@@AG@TK@@Z4@F_@@@@@@      MF$$  @DE@F_ MF$$ @BRKPTD MF$$@FREE,MF$$  AF@@@@ZA
)@@G@@)@0[K*AG@TK@@E@@@@MF$$  @[@@F_D)_^@)^[HCDDFDJE(MCDIE))D9P^[RC-J^[T@$=@F_ZB
)@@G@@@[A@@2AG@@@@)@'@SE[<@AO@)@_@*E[<@AO])S0[>@@$)@F_@[#@['@$)@F_@[]@IQ@@@@@@ZC
)@@G@@@CV@F_@[]@IO      AH@@@@)[^@K*AG@TK@)[B@8@@@@@@@@@@@@@      ED$XF       ZD
)@@G@@ED$TB ------------@$)@[/@[]@ISAI@@@@)[I[C@@@@@@@)[U@C@      @@@@@@@@@@@@ZE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@@@@@@@@@@@@@@AJ@@@@)[V@C@)[<@8@#A]=()*S0O>GZF
)@@G@@ @@@@@@8@[O@@@@@W@^@)^@)^@)^@)*SDFF*                  AK@@@@)[%[S*@@ @@@ZG
)@@G@@@@@@@@[[@@@@@@@@@@@&Q@]V^0@@@@@@@@@@@@@@@@@@@@@@[[@@@@@@@@@@@[-@['AL@@@@ZH
)@@G@@)[5@*@@@@@@@)^?@)@@@@@@@@@@@@@@@@@@@      ED$DI       ED$PR @@@@@@@@@@@@ZI
)@@G@@@@@@@@AM@@@@)^0[C*@@@@@@) ]@C@ED$TB       ED$TA @@@@@@@@@@@@@@@@@@@@@@@@ZJ
)@@G@@@@@@@@@@@@@@@[0@]/AN@@@@) #@C@) H[@@GSEM&])O@@@@@@[@@@@@[@G)@@K@@-@@@@B@ZK
)@@G@@@@@@@@@B@@@@@K@@@@@@@@@@      AO@@@@) P[K@#A]=()* @@@@@@@@@@@@[@@@@@[@G)ZL
)@@G@@@@K@@@@I@@P@@@@@@@@B@@@@@C@@@@@@@@@@@@@@@@AP@@@@)C_[K@@0M) @@@@@@@@@[@@@ZM
)@@G@@@@[@G)@@^@@-@ Z@BJ@@@@@@@[0@@@@@@@@@@@@@@@      ED$XF AQ@@@@)DD@C@)W@@"]ZN
)@@G@@<[/ L]]T]]WK0@K0@@A#@@@AR#@@IUN')@@[[@K@@@'=@@@@R;@)@[@(E16A@@@@@@AR@@@@ZO
)@@G@@)WB[A]=G@^G@[#@[#@@K0@K0@@@@@@^E)@@LAB@@@FR;@@@) @@@[AAF@@@FR;@@@;^6)@@RZP
)@@G@@ C@@@EAS@@@@)WJ[I]-#@[#@@K0@^G@[#@@@AB@@@HR;@@B_AB@@@GR;@@B_A3@@@ R;@@@-ZQ
)@@G@@^6)@@ AB@@@LR;@@]^AT@@@@)WS[I]-#@@K0@^G@^@K0@@@@R#K@IVN8K@@#8#@@WX OG@DEZR
)@@G@@R;@@]#AF@@@JR;@@[KAF@@@HR;@@@$AU@@@@)W-[A]=G@^[#@[#@@K^[#@@@@@@@@@R#@@IWZS
)@@G@@8KK@W+/K@@W=?@0@@Q[Q\)DEG])@IVC]!)( R#0@IVAV@@@@)W([A]=CE^G@^G@^G@^G@^G@ZT
)@@G@@^G@@@@ @@@[IA#@@@_R#@@]_A#@@@"R#@@].A#@@@.R#@@]/'=@@@@AW@@@@)W1[A]=CEL@KZU
)@@G@@0@K0@K0@K0@K0@@@@@ )@@IA )@@I  )@@I^ )@@I#^+)@IF/K@@XN>8@@)@'=@@@@AX@@@@ZV
)@@G@@)W9[A]=G@^G@^G@^G@^G@^G@[#@@@@^+)@I#=8@@@[ )@@IH )@@IG )@@IE )@@ID )@@ICZW
)@@G@@ )@@IBAY@@@@)X[[I]-#@@K0@^G@[#@@@@@@=8@@@)^+)@IB=8@@@K^+)@IA=8@@@C^+)@I ZX
)@@G@@=8@@@^^+)@I^=8@@@]AZ@@@@)XE[I]=G@[#@@K0@^G@[#@@@^+)@IH=8@@C@^+)@IG=8@@^@ZY
)@@G@@^+)@IE=8@@]@^+)@ID=8@@[@^+)@ICBA@@@@)XN[A]-#@[#@@()@-@@)CK#CS@@@@@C@@@@.ZZ
)@@G@@/,0@@@C8@@-)/,0@@@C/@@[1^&)@@R^6)@@U:9@@@^BB@@@@)XV@"]=C]OC]=G@^CE=G@^G@AA
)@@G@@]&@@@@@@@@@@R;@@[U9*@@[U9?@@IY'=@@@@R#@@IX/,0@@@/,0@@@BC@@@@)X+[A]=CE4G@AB
)@@G@@^[#@[]](#@[#@@()@@R;@@[U9*@@[U9?@@I-'=@@@@R#@@I)/K@@X$*4@@[)'=@@@@BD@@@@AC
)@@G@@)X%[A]=CE4G@^[#@[@K0@K)%K0@@@@R#@@I='=@@@@R#@@I</K@@X4(4@@@U/K@@X;*4@@[)AD
)@@G@@'=@@@@BE@@@@)X2[A]=CE=[#@[]](#@ #@[@K0@@@@C@@@I&/K@@X;(4@@@U/G@@74'=@@@@AE
)@@G@@R#@@I>/C@@X;'=@@@@BF@@@@)X'[A]=CF^G@^G@]&@]^ UA@]A@@@@ @@@@U^&)@@Q*4@@[)AF
)@@G@@'=@@@@R;@@[U9*@@[U9?@@I$'=@@@@BG@@@@)Y][A]=G@[#@ #@[]]9#@[#@@@@@@@;*@@@^AG
)@@G@@AF@@@#OF@@@#C@@@@@R#@@I(/,)@4+ @@@@S ^@@@#BH@@@@)YE[I]=@K0@EKQ*]@-[U@@@@AH
)@@G@@%8@@@(;C@@@UR#@@@@/G@@)8A#K@+/O;K@@@RFK@@#;*@@@[/C@@+@BI@@@@)YN[I]=[#@@KAI
)@@G@@@^[]]4@@@@@@R#@@@@/K@@YR(4F)@[O]0@@GR<F@@@/K@@+@*4F@@@R]0@I%/K@@+@BJ@@@@AJ
)@@G@@)YW[A]=G@^G@[@K0@K0@K^G@@@@@@@R#@@@@/K@@Y: 4@@@W 0@@@W/K@@Y<>8@@C@R#@@@@AK
)@@G@@A#@@@@BK@@@@)Y=[A]-@K0@K0@K[#@[#@@@@@@@@@@R#@@@@A7K@@WR;K@@]/K@@Y:^6)@@WAL
)@@G@@^2)@@W/K@@Y(>8@@K@BL@@@@)Y?[A]=G@^G@^G@[#@[#@[#@[@@@@@/K@@Y7>@@@I?R#@@@@AM
)@@G@@^+)@I^=8@[@@R#@@@@^6)@@U=@@@I:BM@@@@)Y4[A]-#@[#@[#@[#@[#@[#@[#@@@@=@@@I,AN
)@@G@@R#@@@@ 4@@@U=@@@I!R#@@@@A#K@@@)@@@@@R;@^@@BN@@@@)Y/[A]=G@^G@^G@^G@^[#@[#AO
)@@G@@@[#@@@9(@@[U9(@@FW9(@@FK9!@@-Q C@@@# 4@@@R*)@@@Q^+)@@QBO@@@@)Z^[I]=G@[@EAP
)@@G@@S@]@)CS@CS@@:@K@[<R#K@FM/K@@)./,)@+.R;K@@[R;@@FK/K@@)[=8@)@@R#@@@@BP@@@@AQ
)@@G@@)ZH[I]=G@^G@[@K0@K0@K[@@9!@@-QR;K@@]/K@@ZX^,)@@N*0@@@N/K@@ZO>8@@@)R#@@@@AR
)@@G@@A3K@@NBQ@@@@)ZQ[A]=G@]&@]@)CS@CS@CS@ G@@@@R;@@FK^,)@@N:@K@[<R#K@FY/K@@)=AS
)@@G@@/,)@+.R;@@FW9(@@[UBR@@@@)ZY[A]=G@^G@^G@^[#@[#@[#@[#@@@A#@@F$R#@@FVA7@@F>AT
)@@G@@R7@@FT/,)@+W^6)@@N*?@@@N(0@@@NBS@@@@)Z&@"]=G@^G@^G@^G@^G@^G@^G@@@@@@@@@@AU
)@@G@@*)@@@Q[@@@ KC@@@FU9*@@ ]9?@@I-*)@@@Q9?@@FKBT@@@@)Z![A]=G@[#@[#@@()@)CS@@AV
)@@G@@@@@@@@>8@@@^R#@@@@/,)@+>R'K@FKAB@@ M*4@@@NR;@@@- @@@ KBU@@@@)Z5@"]=G@^G@AW
)@@G@@OG@^G@OG@OG@^G@@@@@@@@@@()@@@Q =@@@O/,)@CY/,)@["^2)@@P/,)@4! =@@@RBV@@@@AX
)@@G@@)Z/[A]=G@OG@^G@^CF^G@OG@[@@@@@/K@@)A%8@@@]R7@@@W/K@@@!'=@@@@C@@@I\ )@@@QAY
)@@G@@/K@@@!BW@@@@))^[I]=G@^G@@()@)C]@CS@@C@K@I0N8K@@G/K@@)O/K@@+@/,)@+.R;@@FWAZ
)@@G@@R;K@@[^6)@@W^2)@@WBX@@@@))H[A]=G@[#@[]]1#@@K0@K0@@@@@@R#K@FYA#K@@@)8@)@@BA
)@@G@@R#@@@@'=@@@@C@@@I2M#H)@@C@@@I1BY@@@@))P[A]=G@^[#@[#@@K0@K^G@@@@@@@ 0@@@PBB
)@@G@@/K@@Z**)@@@Q @@@@V^6)@@N^,)@@N/K@@)T%@K@[<BZ@@@@))X[A]=G@[#@[@K0[K0@K0[KBC
)@@G@@0@@@@@R3K@@N/K@@E"^&)@@O/,)@["/,)@*C =@@@R>8@@@^R#@@@@CA@@@@))>[A]=G@[@KBD
)@@G@@0@K0@K^G@@@@@@@@@@)8@@^@R#@@@@/K@@)4=@@@I3R#@@@@/^K@)1>8@@^@R#@@@@CB@@@@BE
)@@G@@))![A]=G@^G@^CF^[#@[#@[]]1#@@@R#@@@@'=@@@@C@@@I5^,)@@N/K@@ZX'=@@@@C@@@I4BF
)@@G@@A#K@@@CC@@@@))5[I]-#@[@K0@^G@O@K0[@@9?@@@AR])@@C/K@@YA/K@@8]!8K@@,R#@@I6BG
)@@G@@/K@@ZXA#K@@@)8@@@)CD@@@@))"[A]=G@^G@OG@^G@[#@@()]-)@@@AF@@[#R;@@8YCD0@[#BH
)@@G@@A])@@C C@@@[A#@@[/R#@@@C9*@@['CE@@@@)-A[A]=G@OG@^G@OG@^G@^[#@[@@@@9?@@-QBI
)@@G@@9*@@FM/K@@)/:@@@[<9?@@]V/,)@2L[D0@[#/,)@?XCF@@@@)-I[A]=G@^G@^G@[#@[#@[#@BJ
)@@G@@@@@@@@/KC@@[^6)@@SA#K@@@)@@@@@R;@@@)^6)@FT^E)@FP9*@@FKCG@@@@)-Q[Y])@@@@@BK
)@@G@@@USE E800   B,F///G ED$T@CAT,V800   A,F///  ED$T@ASG,T      TPF$  CH@@@@BL
)@@G@@)--[Q])@@]&@@@@@@@C/@@[1TB .  DX ED$@ASG,A00    ,F///8 ED$TB@ASG,TD$TB& BM
)@@G@@D$TB,ECI@@@@)-:@"]=C@^G@OC[=G@^C#OC#^C])@@@@@@@@/,0@@@/,0@@@/,0@@@9?@@FMBN
)@@G@@/,0@@@C8@@;B/,0@@@CJ@@@@)-2[A]=G@^CF4G@^[#@[#@[@K0[@@@/K@@8Y/K@@)F=@@@I3BO
)@@G@@R#@@@@/K@@)F*4@@@S'=@@@@C@@@I7CK@@@@)-'@"]=G@^CF^G@OG@^CF^G@OG@@@@@@@@@@BP
)@@G@@C@@@I'/K@@8)'=@@@@C@@@I9/K@@8U'=@@@@C@@@I8CL@@@@)+[[Q]=CF^G@K@@@@@^@)^@)BQ
)@@G@@ELHCDOC*)C1J^[ADDGC9MCDH^[KELJ^[ID9OC1DD- /K@@8Y'=@@@@CM@@@@)+F[Y])@@@@@BR
)@@G@@CDPE-JD1O^@)E- D( ^[NE-[CT[D-GETJEK)D9#C(NC8)E[MCD^DDIEK)EL C(MELJCN@@@@BS
)@@G@@)+Q[Q])@^CG@K0[@@@/K@@8]:8)@@]/@%@@@'=@@@@E-[D1OC(SDDN^[ID9IC))D9MC*)CL[BT
)@@G@@^[ADDGCO@@@@)+)[I]=G@@K^@K0@^G@@@@@@(C@@[A/KE@@@(4@@@QC:9@@C/K@@-'/K@@-%BU
)@@G@@:8)@@[/KE@@@*0@@@NCP@@@@)+([I]=G@^G@^G@@[@@@@@@@/KE@@@/K@@+2!@K@@V!@@@@VBV
)@@G@@L)D@@CR:D@@CHJ0@[A0@@@[ACB0@[ACQ@@@@)+2[Q]=G@^CF^G@K@@C*,^@)EL[D1B^[JC0)BW
)@@G@@^[JE(OD(]C(MC*)D1PCTTCTG/K@@8U'=@@@@C@@@I;CR@@@@)+.[Q]=G@@K@K0@@@@ @G@@CBX
)@@G@@ @G@@^A#?@@ R#)@IV/KE@@@%0V@@@?@)@+/R;:@@@A#K@[ A]0@@XCS@@@@)<B[Q])^[#@@BY
)@@G@@^[@K@@[[@@* [[@@*#[[@@*B9(G@@A9(G@@]9!@@[< @@@*[ @G@@F @G@@E @G@@DCT@@@@BZ
)@@G@@)<L[Q]=G@[#@@@^@@@%8)@@]/K@@<Y:8)@@[R<:)@@R:;@@@R\V@@@9(?@@@9!)@I"%8K@@[CA
)@@G@@9!)@I/CU@@@@)<V[I]=G@L@^G@^[@K^@@@@@/%0@<,/%0@<?/%0@<%/KH@<)C[K@[<C[F@@@CB
)@@G@@/K@@<)9!F)@@/K@@8PCV@@@@)<=[I]=[@K^[@K^[@K0@@@@@9(@@[U/K@@<;9(@@*[/%0@<;CC
)@@G@@/%0@$)/%0@<'/%0@<4/%0@<2/%0@<0CW@@@@)<![Q]=[@K^[@K^@^@/K@@<;%80@@.9(G@@]CD
)@@G@@/K@@<;[[@@* /K@@<;[[@@*#/K@@<;[[@@*B/K@@<;CX@@@@)<7[I]=G@^G@^@[@^@@@@@@@CE
)@@G@@/K@@=[%0V@@@?@)@+/R;:@@@R#K@[ 9(G@@A/K@@<;9(@@FW9!@@FKCY@@@@)=@[A]=[#@@(CF
)@@G@@)@-@@)CK#]^[*@@@@@/,0@@@9?@@@M/,0@@@C8@@$"/,0@@@C/@@[1A]0@@X/K@@<PCZ@@@@CG
)@@G@@)=C[I]-]@D@K^[]@4K)]K0@@9?@@[U/,0@@@C/@@@*/,0@@@9?@@*[/K@@=K(@@@*[/,0@@@CH
)@@G@@C/@@@,DA@@@@)=L[I]=C#O[#@[@^C@=[]@=@C/@@@)/,0@@@C@@@*B/,0@@@C/@@@(/K@@=VCI
)@@G@@:@@@[<R#@@*B/,0@@@DB@@@@)=U[A]=C@=[#@[@^C@=[]@=@@@@@@@/,0@@@C@@@*#/,0@@@CJ
)@@G@@C/@@@//K@@=+:@@@[<R#@@*#/,0@@@DC@@@@)=+[I]=[#@[@K^G@^@K)]@@@C/@@@//,0@@@CK
)@@G@@C/@@@//K@@=%%@@@[<R#@@*#/K@@=,:@@@[<R#@@* DD@@@@)=:[I]=C@=[]@=K)^^C@-]@KCL
)@@G@@/,0@@@C/@@@]/,0@@@C/@@@./,0@@@C/@@@]/,0@@@C@@@* /,0@@@DE@@@@)=4[A]=G@^C#CM
)@@G@@OC]=G@^CE)K0@@@@@@9*@@[U9?@@@MR#)@@G'=@@@@R#@@J]/,0@@@/,0@@@9?@@J@DF@@@@CN
)@@G@@)=/[I]+&@]^ UA@]@]A@@-)@^2)@@O:8K@@]^6)@@O:8K@@[R#K@[ /K@@>=*4@@[)'=@@@@CO
)@@G@@R;@@[UDG@@@@)> [A]+&@]^@]@-@G-)@C@@@@@@@@@C/@@@X/K@@>I>8@@)@R#@@@@/,0@@@CP
)@@G@@C8@@$//,0@@@C/@@[1DH@@@@)>H[A]=C@-]@KK)HK)EK0@K)%@@@@@'=@@@@R#@@J#/,0@@@CQ
)@@G@@/,0@@@9?@@@M/,0@@@C/@@@]/,0@@@DI@@@@)>P[A]=@K0@K[#@@()@-[Q@@@@@@@@'=@@@@CR
)@@G@@R;@@[U9*@@[U9?@@@M/@K@&G+@@@J^C[K@@G/@@@>.DJ@@@@)>X[I]=G@^[@^@K^G@@@@@@@CS
)@@G@@R#K@[ C10@[)/K@@$J=9KC@@/K@@$#=9K@]@/K@@&G/K@@>)*4@@[)DK@@@@)>&[I]-@^[#@CT
)@@G@@[]]1@K0@@@@@=8@@@)R#@@@@/K@@>3'=@@@@C@@@J /K@@>!>90@@]/K@@>\:8K@@]DL@@@@CU
)@@G@@)>\[A]-@K0@K)?ES@CK@C]^@0@@@@@/,0@@@C8@@$_/,0@@@C/@@[1'=@@@@C@@@JA/K@@&@CV
)@@G@@>90@@^DM@@@@)>7[A]-]@5]@(#@[]](#@ #@@()@@@R;@@[U9()@[U/K@@8Y'=@@@@R#@@JBCW
)@@G@@/,0@@@/,0@@@9?@@@MDN@@@@)>_[I]=CE4G@^[@K^[#@[@@@;C@@@#/@@@&,R7@@[)A#@@*BCX
)@@G@@A#@@* A#@@*#9*@@*[9?@@[<'=@@@@DO@@@@)&C[I]-@K0@]&@]^[2@-@*@@C@@@[ /,0@@@CY
)@@G@@C8@@*M/,0@@@C/@@[%/KE@@[R]0@@X/K@@&U%8@@@#DP@@@@)&L[A]=C =CA)K)VK)SK0@K)CZ
)@@G@@?@@@@@'=@@@@R#@@JC/,0@@@/,0@@@C8K@@GC@@@@L/,0@@@/,0@@@DQ@@@@)&T[A]=G@M&@DA
)@@G@@]^[2@-@*CKFC@@@@@@C8@@&&/,0@@@C@@@[ /,0@@@C8@@*M/,0@@@C/@@[%/K@@8YDR@@@@DB
)@@G@@)&-[I]=C ^CA^G@^CF^G@K@@EL[D1^C1[ETO^[JD0)^[ID9O/K@@8Y'=@@@@C@@@JD/,0@@@DC
)@@G@@/,0@@@DS@@@@)&%[I])@()@-@W)CKE@@@@@@C@@@[ /,0@@@C8@@*M/,0@@@C/@@[%CT ^0)DD
)@@G@@C- E1DD([E))^[AD9MDT@@@@)&3[A]=C =[][L][-#@[]]1#@^@@@@^[CCDN/K@@8Y'=@@@@DE
)@@G@@C@@@JD/,0@@@/,0@@@C8@@&'/,0@@@DU@@@@)&;[Q])@@ES@CKB@@@/,0@@@C/@@[% 0&^@)DF
)@@G@@D8)DDOC(^^[OETDC9IE))CDNE[HC(IC(LE(D^[ID8)DV@@@@)$ [A]=[][KK)QK^C ^CA^G@DG
)@@G@@@@@@@@C@@@JD/,0@@@/,0@@@C8@@$V/,0@@@C@@@[ /,0@@@C8@@*MDW@@@@)$H[A]=CF^@(DH
)@@G@@)@-@W)CKE]^]0@@@@@/,0@@@C@@@[ /,0@@@C8@@*M/,0@@@C/@@[%/K@@>+'=@@@@DX@@@@DI
)@@G@@)$P[I]=[][L][-#@[]]1@@@@C)! ([CD]D- ^[^DDN/K@@>='=@@@@C@@@JE/,0@@@/,0@@@DJ
)@@G@@C8@@*_DY@@@@)$Y[Q])@^[#@@@@@@@?80@@';?0@@AA60@@Q/K@@<;%8K@@[R#K@[  @@@@JDK
)@@G@@ @@@@IE- C)&CT#C(KDZ@@@@)$*[Q]-@K@^G@OG@@@;?0@@A @@@@J[C0@[A/C0@8S%80@@+DL
)@@G@@D@0@@J:80@@-/K@@$7/K@@$:?80@@0EA@@@@)$2[Q]-@[#@^[#@[@@/K@@$0AB)@[AG@)@@JDM
)@@G@@H80@@0T8)@@E/K@@8S?80@@0?80@@'/K@@<;:80@@ EB@@@@)$/[Y])@@@@@            DN
)@@G@@                        &     @FREE @USE &&     @ASG,AEC@@@@)*B[A]-#@[#@DO
)@@G@@[#@[#@@()@-[+-)]@@/K@@8 /,0@@@C8@@^7[@K@G)C@K@[>A#K@ [R#K@JF      ED@@@@DP
)@@G@@)*J[Q]=G@^G@@@@@@@C*)CDND9O^[]CT[D1IC))^0)C1DC(G^[DD0)C1DD- /KE@@@ @@@ GDQ
)@@G@@^,)@@OEE@@@@)*T[Y])@@@@@DDGC*)E(O^[AD9PE-KD-JCTFC([C))D- ^[ME))C1DDDIE[PDR
)@@G@@^0)^@)C(^BK)ETDC9IEF@@@@)*=[Y])@@@@@E(HC(^^[[ETNE-DD9IE*)D9KFC)^@)D9QC(MDS
)@@G@@^[MC(#CDPE-JCTF^@)C*)D-JE9MDDOEG@@@@)*\[Y])@@@@@ET C),CL ^[PD1JE))^[#CDIDT
)@@G@@D([D1^^[#D9HCDPE-JC*,^@)CDADDG^[^CDO^[AD9MEH@@@@)*'[Y])@@@@@E(I^@&C(M^[MDU
)@@G@@D1JE-CCLT^[[E(NC*)^[DD0)C*,^@)D0)E(ND- ^[DD8)C1D^[[E(OEI@@@@)( @,])@@@@@DV
)@@G@@)FI@K@)FW@K@@@@@@@@@@@@@@@@@@@______@@@@@@@@@@[C@@@@@&@@@@@O@@@@@EEJ@@@@DW
)@@G@@)FY[S@@@@@@@@FREE,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DX
)@@G@@@@@@@@EK@@@@)F([S@@@@@@@2.    A ED$S@FREE,1.    A ED$S@FREE,S2.   RA ED$DY
)@@G@@@FREE,S1.   RA ED$EL@@@@)F4[K@@@@@@@@@@@@@00    ,F///6 ED$DI@ASG,T      DZ
)@@G@@ED$TA.@FREE       ED$TB.@FREE EM@@@@)@T[U@@@@@@@@SYM &,,PR& @SYM & &    EA
)@@G@@@BRKPT0&    ///200G &,F2@ASG,C&     @FREE EN@@@@)@=@U@)F"@C@)@$@+1)(/ OGEB
)@@G@@ ^G ^@C@@@"%/K@@W[A]0@(D@(E16A K% K% ))^@)D@? )1,,CP& EO@@@@)@:[#]]1]#D#EC
)@@G@@@[#@[@K0@K0@K@@@@@/K@@@5*)@@I^ =@@@O/,)@CY*=@@@O ?@@@U'=@@@@'=@@@@EP@@@@ED
)@@G@@)@3[#@K)?K0@K0@K0@K0@K^G@@@@@@*)@@IE/K@@WH*=@@@S =@@@V *@@@U *@@@V'=@@@@EE
)@@G@@C@@@":EQ@@@@)@;[F@K@()@)CKOCS@@@@@@@;O@@@=T8@@@ER#@@]/'=@@@@R#K@"?R;@@]/EF
)@@G@@N;)@@ 8N)@[G/,)@CYER@@@@)[^[EK0@K^G@^G@^[]]1@K@@/,)@:1/K@@)^'=@@@@C@@@"!EG
)@@G@@H[@@]/C[@@@_/K@@[G?@@@@_W8@@@DES@@@@)[H[F#@[@K0@K^G@^[@K0@@@?8@@@'RZ@@DEEH
)@@G@@/K@@E"/K@@[5*)@@IG/K@@[O*C@@@[/,)@2M C@@@]ET@@@@)[Q[]K^[#@@K[@@@@@@@@[@@EI
)@@G@@@@@@@@/K@@SQ:8)@@!/K@@SM:8)@@:RZ)@F_/K@@S4/K@@[T?8@@@0EU@@@@)@@@"@U&@DN@EJ
)@@G@@^()]O0[ES@>G@M&@C@@@@@@@@LN@]7@LC@GH@RP@DR@@F@F,@@P@UK@@Q@):@@L@GKEV@@@@EK
)@@G@@)@B@"@U&@DN@^()]O0[ES@>G@M&@C@@@@@@@@@T@%6@BR@-?@@V@-%@ON@ V@PL@D\@UP@E(EL
)@@G@@@FC@F:EW@@@@)@I@"@U&@DN@^()]O0[ES@>G@M&@C@@@@@@@@@D@RO@@C@HW@@B@:+@@N@SEEM
)@@G@@@GO@SC@@O@V#@@H@SKEX@@@@)@P@,@U&@DN@^()]O0[ES@)@)[Y@MK@@@@@@R#)@",N8K@@UEN
)@@G@@@@A@:+@@R@M9@IN@K$@IB@N<@@I@E4EY@@@@)[)@;#@H@ES[*S[*#6@S@@@@@@@@8@@@@@@@EO
)@@G@@/KI@@@RB,J_"/,0@[8?8I@@@R;@@@M/K@@[$2CY)@@EZ@@@@)@U@"@U&@DN@^()]O0[ES@>GEP
)@@G@@@M&@C@@@@@@@LAS@T]FIN@F,LNP@UJPRI@UKQUI@):LNQ@)%LOC@GKFA@@@@)@-@"@U&@DN@EQ
)@@G@@^()]O0[ES@>G@M&@C@@@@@@@CSF@AMPLI@D\CLI@-,SET@-"TAB@+VOMI@8YEXI@$=FB@@@@ER
)@@G@@)@*@"@U&@DN@^()]O0[ES@>G@M&@C@@@@@@@SPL@+ZTCH@EZTYP@DVAUT@QYPUN@VHMSC@A4ES
)@@G@@LCH@A(FC@@@@)@\@"@U&@DN@^()]O0[ES@>G@M&@C@@@@@@@CPT@)[TIM@YZOFF@ XOPR@TNET
)@@G@@CPU@VPLNS@VNSIT@VQFD@@@@)@6@"@U&@DN@^()]O0[ES@>G@M&@C@@@@@@@CAS@BDSTA@#&EU
)@@G@@MAX@-8MAI@BXEXC@A9CCH@E>SCA@)PFE@@@@)@.@"@U&@DN@^()]O0[ES@>G@M&@C@@@@@@@EV
)@@G@@NEX@SEGOT@SCHEA@SKEND@8YTOP@%6BRI@-?VER@-%FF@@@@)[^@"@U&@DN@^()]O0[ES@>GEW
)@@G@@@M&@C@@@@@@@INS@E4DEL@ROCHA@HWDOC@Y5BOT@:+SAV@-,OUT@V#FG@@@@)[F@"@U&@DN@EX
)@@G@@^()]O0[ES@>G@M&@C@@@@@@@ADD@= SEQ@)!DIT@OAINP@E"APP@:+RET@M9INL@K$FH@@@@EY
)@@G@@)[M@I@U&@C@@)[$@2]&@[N@[]#H@@@@@@@@@R#)@",/,0@@@R;)@['R;K@F_R;@@@[N8K@@9EZ
)@@G@@MOV@O^FI@@@@)[![##@[#@H@ES[*S[*]A@S@@@@@@@/KI@@@RB,@@T/,0@[8?8I@@UR;@@[AFA
)@@G@@/K@@[52C")@URF0@['FJ@@@@)[5[F@K)?K^G@@K^CF@@@@@@/KF@@@'=@@@@C@@@"0/KF@@@FB
)@@G@@>8@@^@R#@@@@/K@@@5'=@@@@C@@@"\FK@@@@)["[]()@-@@)CK#CS@C@-@^@@@@@@@/,0@@@FC
)@@G@@C/@@@ /K@@]A(?@@@Q/,0@@@C8@@@@/,0@@@C/@@[1FL@@@@)]A[F]@1]#KK)Z^C[[]@C@@@FD
)@@G@@C@@@@K/,0@@@C/@@@-/,0@@@C/@__//,0@@@A#@@@K'=@@@@/,0@@@FM@@@@)]J[F][8K)^KFE
)@@G@@)GK0@^@K)]@@/,0@@@C/@@@,/K@@]S>8@)@@R#@@@@/,0@@@/,0@@@C/@__//,0@@@FN@@@@FF
)@@G@@)]S[EK)CK0@^@K)]K0@@@@@@>8@@@)R#@@@@/,0@@@C/@@@,/K@@]$=8@)@@R#@@@@/,0@@@FG
)@@G@@C@@@@VFO@@@@)]-[F@@K0@K)C^C@=C])@@@@/,0@@@/,0@@@C/@@@)/,0@@@R3@@FS:8@@@_FH
)@@G@@O;@@@[R#@@@V/K@@]$FP@@@@)]%[F@K)\]&@]^[0-@?CKC@@/,0@@@C/@@@'/,0@@@C@@@@SFI
)@@G@@/,0@@@C/@@[%/KE@@@'=@@@@C@@@"1FQ@@@@)]3[N][-@K)?^[@@@@^0)D-#D[[EK'^0)CT#FJ
)@@G@@E-[CK'/K@@@5/,)@]!/KE@@@'=@@@@C@@@"2/,0@@@FR@@@@)].[U@@@@@@@E-[CLND1 BK&FK
)@@G@@CDSD-DBK&^[HCDPE-JE)'^0)D-DD(DBK&^[#CTCCDM^0)D(ND[[EK'FS@@@@)#C[U@@@@@@@FL
)@@G@@C*'^0)^[#CDNBK&^@)D(DE-N^[KD-DBK&^@)CTCCDM^@)C(SCDMBK&^[OCTCBK&^@)FT@@@@FM
)@@G@@)#N[U@@@@@@@F[]ELD^@)^@)E[GDDOD))C-NCTIE-MC(M^[KD1PD(]DD C0)DS)CLMEDPDD#FN
)@@G@@ETOCC)FU@@@@)#Y[M@@^G@^@@@@@@@/,)@2M^%)@@OFC)^@)C(HD9MD9^^[HE(IDDHC(JC0)FO
)@@G@@D9JDS)C(L^[GC(A^[NFV@@@@)#*[]K]&@]^@]@O0@K)IK@@@@@@@@@C8@@]9/,0@@@C/@@[%FP
)@@G@@/K@@ )/,0@@@C/@@[1/K@@#!(@@@@HFW@@@@)#0[F][L#@@K^C^^CA=G@[@@/,0@ S:8@@B_FQ
)@@G@@RB@@@G/,0@@@/,0@@@/,0@ S:8@@B_RF@@@F/,0@@@FX@@@@)#9[#][[][(#@@K^C^^CA=G@FR
)@@G@@@@@@@@RB@@@H/,0@@@/,0@@@/,0@ S:8@@B_RF@@@H/,0@@@/,0@@@FY@@@@)^[[]K^C^^CAFS
)@@G@@=G@^C =CA=G@@@@@@@RF@@@E/,0@@@/,0@@@RF@@@A/,0@@@/,0@@@/,0@ S:8@@B_FZ@@@@FT
)@@G@@)^D[#][T][(#@[][T][-@K)?ES@@@@C/@@[%'=@@@@C@@@"3/,0@@@/,0@@@RF@@@J/,0@@@FU
)@@G@@/,0@@@GA@@@@)^L[F]@9@K)O[#@@^G@@@@@@*O @DEO#@@@ R;@@@[RPP@DE @@@[ R9K@@@FV
)@@G@@/,0@@@C8@@#B/,0@@@GB@@@@)^U[M@K[][[@@@@@@@C@@@@MN9K@@[/K@@^</,0@@@C/@@@?FW
)@@G@@/K@@^+(@@@[ C[)@@GN9K__"!8@@]AGC@@@@)^=[F][SK^CA=G@[@K)KK)U@/,0@@@/,0@@@FX
)@@G@@/,0@ S:8@@B_RB@@@F/,0@@@/=@@^QR#@@[ /,0@@@GD@@@@)^![F#@@^[][@K[][@@@@@@@FY
)@@G@@/,0@@@C/@@@./K@@^":9)@B_/,0@@@/,0@ S:8@@B_C[)@@GRF@@@IGE@@@@)^6[##@[][OKFZ
)@@G@@)KK0@K)K^C^@@@@@@@/,0@@@C/@@@(/,0@@@RB@@@I/,0@@@C/@@@*/,0@@@C^@@@IGF@@@@GA
)@@G@@)^"[#][(#@[][SK)KK0@K)QK)U@@@@/,0@@@/,0@@@C^@@@L/,0@@@C/@@@?/,0@@@CC@@@LGB
)@@G@@/,0@@@GG@@@@) A[F#@[@K^CC=[@K)+K)SK@C@@@"3/,0@@@/,0@@@9?@@"6/K@@ H/,0@@@GC
)@@G@@9?@@"4/K@@ F(4@@@VGH@@@@) J[F]]1@K@^G@^G@^@@@@@@/K@@@5^+)@@OAB@@@JR;@@@NGD
)@@G@@M#H)@@N8K@@NR#K@"9R#@@"8'=@@@@GI@@@@) S[N@^C 1@^G@^@K@+@K@";A#K@@M/,)@2MGE
)@@G@@ *@@@O @@@@O/K@@ YC]@@[E/K@@@@O'0@@[R#@@"'GJ@@@@) +[F@^@K^G@^@K0@@@@@@@@GF
)@@G@@**@@@OP9)@@[/K@@ 724Q)I#R[)@",N8K@@F/K@@ -;CK@@A/@)@ >GK@@@@) :[#@K0@K^GGG
)@@G@@@^[#@[#@[#@@@@@@@@R#)@[/9*)@]V9?)@['/K@@ 4(*@@@O/,)@2M[+A@I#/K@@ 'GL@@@@GH
)@@G@@) 3[F#@@K^[@K)?K[]@=@@@@/,0@@@C@@@@M/K@@8U'=@@@@C@@@"//K@@ -/@K@AGA#K@@MGI
)@@G@@A#)@]XGM@@@@) /[EK)^K0@K^[]@T@K^C[)@/,0@@@C8@@""/K@@A /,0@@@C8@@"./K@@A#GJ
)@@G@@()A@I#/,0@@@C/@@@[GN@@@@)A []K)^K0@K0@K0@K0@K^G@@@@@@@(*@@@O/K@@ !A#@@[/GK
)@@G@@R#@@]X9*@@['9?@@]V/,0@@@C/@@@]GO@@@@)AH@:@K)EK^CF4@@@@)I#@S@@@@@@@N@@@@@GL
)@@G@@B@@@@@Q@@@@@/K@@@5'=@@@@C@@@"_/,0@@@/K@@@5GP@@@@)IA[@@@@@@@@)AM@F#@@@@@@GM
)@@G@@RB@@@ U@@@@[E@@@@@M@@@@@L@@@@@S@@@@[X@@@@[D@@@@[P@@@@@GQ@@@@)AN[]ES@ G@^GN
)@@G@@CG4G@@K0@@@@@@@@@@[ @@@ X80@@#;*0@@[RB0@@ /,0@@@R;)@F_R;K@G@P;@@@[GR@@@@GO
)@@G@@)AV[]()@-)@-[O-)@O0@K)IK^C @@@/,0@@@C8@@;N/,0@@@C/@@[%A#@@F_'=@@@@&B@@@ GP
)@@G@@R;@@F_GS@@@@)A<[##@[][P][-@K)?K^[@@@@@@@@@/,0@A!/,)@3//K@@@5'=@@@@C@@@_@GQ
)@@G@@/,0@@@/,0@@@C@@@F_GT@@@@)A:[N#@[@@K0@@K@@@/,)@3//KF@@@ @@@@H/KF@@@:CK@@KGR
)@@G@@R;K@B_/KF@@@*@@@@H/K@@@5AFK@@HGU@@@@)A5[E^G@^[@K0@K0@K^G@@@@AFK@@I/,0@A!GS
)@@G@@RFK@@I:^K@@I/,)@3//K@@@5ABK@@HR;K@B_(@@@@HGV@@@@)A"[N@@@[#@@@@@@@@AB)@@IGT
)@@G@@;?)@@A;C)@@#;G)@@#;C)@@#;G)@@#+8KBBBR;K777(@@@@H/,)@2MGW@@@@)BC[N@K[@K^@GU
)@@G@@K^[@@@/K@@BR:@K@@S/K@@BR:8K@@N/K@@BP:@K@@R/K@@BP:8K@@U/,)@2M/K@@@5GX@@@@GV
)@@G@@)BM[F@K)?K^G@^[#@[@@@@@@ MF$$,@USE  /K@@@5 4@@@V/K@@@5^6)@@V/K@@@5'=@@@@GW
)@@G@@C@@@_[GY@@@@)BV[E[@]&@]^@]@-[O@@@@@@'=@@@@R#@@_]/,0@@@C/@@[1N[K@@H/,)@2MGX
)@@G@@ @@@@L&     &*ED$MGZ@@@@)B=[F@K)A^C]OC#[]@-]@(@@R#@@_#/,0@@@/,0@@@C@@@@LGY
)@@G@@/,0@@@/,0@@@C@@@[ /,0@@@C8@@BTHA@@@@)B![F]](@K)%K[@^@@@@@@@@N8)@@D/K@@B)GZ
)@@G@@G9K@@[/K@@CS!9K@@E/C@@B5'=@@@@R#@@_^'=@@@@HB@@@@)B6[E()@-[%-)@CS@]@C@@@@HA
)@@G@@O#)@_ ;*)@@M/K@@C[>8@^@@R#@@@@R#)@@GA\@@@8'=@@@@R;@@@;HC@@@@)B_[]K)?ES@CHB
)@@G@@KVC]@-)@-)@@@@@@@@9*@@F_R#K@@.R#@@_A8K)@B6'=@@@@R;@@@8'=@@@@R#@@@IHD@@@@HC
)@@G@@)CB[#]#X#@[#@[#@[#@[#@@K0@@@@@A\@@@8R;@@@AA#K@G^A#)@G#A#@@G]A#)@G[R#)@[<HD
)@@G@@'=@@@@HE@@@@)CJ[]()@-[0)CKPC]^ MA@]@@@@@@@/K@@@5(=@@@P'=@@@@R#@@_]'=@@@@HE
)@@G@@R#@@_B'=@@@@R;@@@8HF@@@@)CR[F@K^CF^[@K0@K[@@@@@@R#@@_] @@@@L/K@@C^^&)@@PHF
)@@G@@/C@@C^/K@@@5'=@@@@C@@@_C/K@@$=HG@@@@)C)[#]]*()@-@@)CK#CS@CK^*KA@@@/,0@@@HG
)@@G@@/,0@@@C@@@@./,0@@@C8@@BT/,0@@@C/@@[1'=@@@@HH@@@@)C*[]K)CK)EK^CE=[#@@()@@HH
)@@G@@@@@@@@R;@@[U9*@@[U9?@@_D'=@@@@R#@@_#/,0@@@/,0@@@C@@@@LHI@@@@)C0[#]]!#@[@HI
)@@G@@K^CE)()@)@@@@@@@@@/ K@D]R;@@@0/GE@@@'=@@@@R#@@_F/K@@C6*4@@[)'=@@@@HJ@@@@HJ
)@@G@@)C8[F#@[@K)5[#@@K@@@@@@@%8K@[9/K@@D]:8K@[TRZK@F_/@E@@@&;@@@@'=@@@@/K@@D]HK
)@@G@@(4@@@UHK@@@@)D[[F@]&@]^BC)CKQCS@C@@@8K)@D#(*@@@V'=@@@@O#@@_G;*@@@M'=@@@@HL
)@@G@@R;@@@:N8)@@E/K@@DKHL@@@@)DE[F@K)%K^CE-@K0@K^G@@@^+)@@O8#@@DOAB@@@J/K@@C-HM
)@@G@@G9K@@['=@@@@R#@@_H'=@@@@R#@@_BHM@@@@)DN[EK0@K0@K^[@K0@K^@@@@/,)@2M/K@@@5HN
)@@G@@[A)@@^/,)@4L/,)@2M/K@@DLA#W@H+R#W@F_/KE@@@HN@@@@)DW[N@K^[@K@^[@@@@C@@@_JHO
)@@G@@/K@@D*:8)@@0%8)@00+8K@88/K@@DX?@)@_I/K@@D?:@Y)@ER#)@",HO@@@@)D&[F]]1@@^GHP
)@@G@@@^G@^@@@@@@@/K@@@5A7)@FTA7)@F>;?)@@#;C)@@#;G)@@#+8K@BB/K@@@5'=@@@@HP@@@@HQ
)@@G@@)D\[N@K@K@@@@@@@@@R;@@@-!8@@@-O;@@@[*@@@@HW8@@@^/K@@ES(@@@@H"K@@@Q/,)@4OHR
)@@G@@/,)@2MHQ@@@@)D9[F#@@^G@^@K^G@^G@@@@@A3@@@ R7@@@ /K@@EB*@@@@H/,)@2M[E)@@LHS
)@@G@@C')@]^!')@]^A7@@@ HR@@@@)E][F#@[#@[#@[#@[@K@@@@@W8@@@^R#K@@Q @@@@G/,)@4OHT
)@@G@@/K@@@5^E)@@LAB@@@LRF@@@L^6)@@ HS@@@@)EF[M^G@^@^G@@K0@@[A)@@LC')@]^!')@]^HU
)@@G@@A3@@@ R;@@@-!8@@@-/K@@EQ?4@@@ O;@@@[*@@@@HHT@@@@)EP[F@K^CF^G@[#@[#@@K0@@HV
)@@G@@AB@@@LR;@@]^^E)@@LA3@@@ R;@@@-^6)@@ '=@@@@C@@@_K/K@@@5HU@@@@)EY[F@K^@^G@HW
)@@G@@^[@K@@@@@@@@/,0@A!/,)@3//K@@@5ABK@@FR;K@@):8KCLG/,0@A!/,)@3//K@@@5HV@@@@HX
)@@G@@)E$[##@[@^G@^G@^G@^G@^G@@@@@@@R#@@@@^,)@@N*0@@@NA#K@@@)@@@@@R;@@@)/K@@@5HY
)@@G@@ABK@@GHW@@@@)E\[EK[#@[@K0@K0@K^G@@@@RFK@@K/K@@M.?C@@@[CC@@@]/K@@@5A#)@@@HZ
)@@G@@-8K@^@/K@@@5>8@@^@HX@@@@)E8[EK^G@^[#@[@K0@K0@K@@/K@@F#*)@@I^^,)@@U/K@@M.IA
)@@G@@^2)@@Q/K@@E"()@@IG/K@@M.:8K@@:HY@@@@)F[[F@K)?K^G@^[#@[@K^G@@ ?@@@O/,)@1:IB
)@@G@@/K@@@!(C@@@[/K@@FC*)@@IG/,)@:1'=@@@@C@@@_LHZ@@@@)FE[EK0@K[#@@K0@K0@K0@@@IC
)@@G@@*C@@@[[X?@DD: K@@HC9)@[@CXW@DD @@@@HC@@@_M]$0@ GG;@@@[IA@@@@)FN[#@K0@K^GID
)@@G@@@^G@^[#@@@@@@@@@@@O;K@@[[LX@DE/,)@F+:DK@@FCXW@DD/K@@FTC[K@[&/K@@FQIB@@@@IE
)@@G@@)FV[F#@[@K0@K^G@^[@K0@@@C9K@@)CO!@DE/K@@F#/,)@19AFK@@#/K@@FQ$F@@@[/K@@FZIF
)@@G@@!CK@@JIC@@@@)F=[F#@@K0@[@^G@^G@@@@@@^&)@@VA\K@@P/KE@@]/K@@F=?@K@@I/KE@@]IG
)@@G@@!CK@@JO;K@@[[LX@DEID@@@@)F![#@K0@K0@K0@K0@K0@K0@K@@@@@/?0@%7(0@@@P[^@@@[IH
)@@G@@C^@@@[:C@@@]CC@@@[ ?@@@P/K@@F\IE@@@@)F5[F@K^[#@[@K^G@^[#@@@@CXY@DDC@0@",II
)@@G@@GC)@@]C@)@_N/K@@@5**@@@V/K@@7+/,)@0B/,)@1:IF@@@@)F"[##@[@K0@K^G@^[#@[@@@IJ
)@@G@@@@@@@@/K@@GC(?@@@P/K@@F.$B)@@[/K@@F5% K@@F/K@@G]:LZ)DEIG@@@@)GA[##@[@K0@IK
)@@G@@K^G@^[@K0@@@@@@@@@A\K@@P/K@@@5/K@@F5*?@@@P/,)@!Z()@@I^/,)@]!*)@@I^IH@@@@IL
)@@G@@)GI[##@[@K0@K0@K0@K0@K0@K0@@@@[^@@@[C^@@@[:C@@@]CC@@@[ 0@@@T ?@@@P/K@@GLIM
)@@G@@^&)@@VII@@@@)GQ[F#@[@^G@^G@^G@^@K0@@:Y,@DDO;)@@[/K@@G&!C)@@[CD)@@HRF)@@]IN
)@@G@@C')@@)/?0@%7(0@@@PIJ@@@@)GZ[F@K0@K^G@[#@[#@[@K@@/,)@0B/,)@1:^2)@@TAF)@@]IO
)@@G@@P;)@@[[Y,@DD/K@@G&%X,@DD/K@@GVIK@@@@)G*[F@K0@K^G@@^G@^@@@@@@8#)@G\ANW)DEIP
)@@G@@&;@@@[R;K@@)R;)@@#RF@@@#/K@@@5**@@@V/K@@7+IL@@@@)G1[EK0@K0@^G@[@K0@K@@@@IQ
)@@G@@C@K@",[^@@@]/G@@G&O;@@@]*0@@@TG8@@@[H^@@@[OF@@@]&;@@@@IM@@@@)G'[F@K0@^G@IR
)@@G@@^[@K0@K^G@@@*0@@@T/K@@HL:LZ)DE/K@@G&!@0@_OCXY@DDC@0@@HGC)@@]C@)@_NIN@@@@IS
)@@G@@)H#[F@K0@K^[#@[@K0@K0@K@/K@@G'%M\@DC:M\@DD/K@@G'*0@@@T/K@@G&/K@@HB$BK@@]IT
)@@G@@/K@@HIIO@@@@)HG[EK^G@^[@K0@K^G@^@@@@/K@@HR(?@@@P/K@@G.$B)@@[/K@@HN/K@@H^IU
)@@G@@%X,@DD/K@@G"P;K@@[IP@@@@)HP[F#@[@K0@K^G@^[@K0@K@R@K@", 0@@@U/K@@@5/K@@G&IV
)@@G@@*?@@@P/,)@!Z()@@I^/,)@]!*)@@I^IQ@@@@)HY[#@K0@K0@^G@^[#@[@@@@@@@@@@/K@@H+IW
)@@G@@$C)@@[/K@@H3%W]@DE:8@@@)CW])DEOC)@@]R@)@",IR@@@@)H&[##@[#@@()@-@W)CKECS@IX
)@@G@@CS@@@@RZG@DER#@@@B/,0@@@C8@@;(/,0@@@C/@@[%A#@@@BRF@@@]IS@@@@)H,[#][[][-@IY
)@@G@@K)?K^G@^G@@@@@@@@@$8K@@] C[@@BA@-@@B/K@@@5'=@@@@C@@@_P/,0@@@/,0@@@IT@@@@IZ
)@@G@@)H6[F@K^G@^G@^[#@[@K@@@@O8)@@[/K@@H*/K@@H9$C)@@[/K@@H3:W]@DERZ])DE/K@@H"JA
)@@G@@/K@@H8IU@@@@)H_[F#@[#@[#@@K^@K@@@@@@%8K@@A/K@@II:8K@@G/@K@IJ/,)@2M @@@@QJB
)@@G@@ )@@@P ?@@@SAC)@@]IV@@@@)IC[EK^[#@[@^G@^G@@@@@@@G8@@@[C@@@@B^,)@@S:8K@@GJC
)@@G@@/,)@2M[A)@@#/,)@4L/K@@K=:8KALLIW@@@@)IL[F#@[#@@K^[@K0@K^G@@@CC@@@#/K@@JBJD
)@@G@@*)@@@P/K@@N0/A)@J"/K@@IR*@@@@S^+)@@P!@@@@CIX@@@@)IU[E[#@[@^[#@[#@@@@@@@@JE
)@@G@@CC@@@A!C@@@A/@@@I9&;@@@@8#)@IXANW)DE&;@@@[R;K@@)R;)@@#IY@@@@)I<[F#@[#@@KJF
)@@G@@^G@^[@K^G@@@ ?@@@RC@0@",C@)@",C@K@",[^@@@]/G@@I9G8@@@[H@@@@CG@@@@BIZ@@@@JG
)@@G@@)I?[F@K0@^G@^G@^[#@[@K@@/K@@I_/K@@I\$@K@@C/K@@I5%LM)DECXL@DDR@)@@HO@K@@BJH
)@@G@@R@K@_NJA@@@@)I5[F#@[@K0@K^[@K0@K^@@@/K@@K^/,)@0B*0@@@P/,)@1:/])@KZ/K@@JUJI
)@@G@@*?@@@R/K@@I?$BK@@]JB@@@@)I"[F@K0@^[#@[#@[#@[@K@@/K@@J>/K@@I_$B0@@A[TZ@DEJJ
)@@G@@CLY)DE/K@@JE:@K@@I^2)@@U8 )@INJC@@@@)JB[##@[@K^G@[#@[@K0@@@@@@@@@@CXW@DEJK
)@@G@@/K@@JN:@@@@DO;@@@[R#@@@CR@)@",R#0@",^2)@@UJD@@@@)JJ[F#@[#@[@K^G@@@@@@@@@JL
)@@G@@C@)@@]H8K@@[C@K@@]C@@@@]^,)@@R/K@@J>/K@@JF$B0@@A[TZ@DEJE@@@@)JS[F#@[@K0@JM
)@@G@@^G@^G@^@K@@@/K@@J>?@K@@GG@K@",C^K@@A!^K@@AH8K@@[CCK@@#/K@@I5*?@@@SJF@@@@JN
)@@G@@)J-[##@[#@[#@[@K0@K0@K^G@@@@@@AF0@@#/K@@J:!^K@@ACCK@@#/K@@JZ$B0@@A[TZ@DEJO
)@@G@@CLW)DEJG@@@@)J([#@K[#@[#@[@K0@K0@@@@@@@@@@CTZ@DEC^0@@A/K@@J?$B0@@A[TZ@DEJP
)@@G@@C9K@@)/K@@J0H@0@_MJH@@@@)J1[##@[@K0@K^G@^G@^G@^G@@@@@@RF@@@J!C@@@JRF@@@#JQ
)@@G@@]$0@ G/,)@1:]\0@ G8#0@J0[LZ@DEJI@@@@)J9[F#@[@K0@K^[@K^[#@@@@**@@@V/K@@K^JR
)@@G@@/,)@0B/,)@1:/])@KZ/,)@!Z()@@I^/,)@19AF@@@#JJ@@@@)K][#@K^G@^G@^G@^G@^G@^@JS
)@@G@@@@@@@@/K@@KG(?@@@T^,)@@O 0@@@R 4@@@P ?@@@V8 )@IN/K@@KZJK@@@@)KE[F#@@K0@KJT
)@@G@@[]#(#@[#@@@@#])@@QHA)@@# 0@@@V'=@@@@R;K]WK/K@@KL(0@@@V/KA@@@ ?@@@TJL@@@@JU
)@@G@@)KN[]()@-@W)CKE]^]2^#]A@@@@@@@(=@@@S/,0@@@/,0@@@C@@@@Q/,0@@@C8@@;>/,0@@@JV
)@@G@@C/@@[%JM@@@@)KV[F@K)?K0@K^G@^[@K)?K@/K@@@5'=@@@@C@@@_Q/K@@@5*0@@@U/K@@7+JW
)@@G@@ =@@@N'=@@@@C@@@_@JN@@@@)K=[EK0@K[@K^[#@[@@@@@@@/!)@S5^,)@@T/,)@4O/@K@K4JX
)@@G@@/,)@2MC')@@-/K@@IF^,)@@SC')__"JO@@@@)K![F@K0@K[@[@K0@@@@@@@@]\0@ G/,K@N(JY
)@@G@@A#K@@Q*@@@@H/,)@3/C')@@-/K@@@5**@@@V/,)@QNJP@@@@)K6[#@K0@K0@^G@^G@^G@^G@JZ
)@@G@@@@@@@@AN!@DG*)@@IHAN!@DFRN!@DDR#@@@HRFK@@#]$0@ G/,)@1:JQ@@@@)K"[F@^G@^G@KA
)@@G@@^G@^[#@@@@@@O;@@@]O;@@@[AN)@DG/K@@LA()@@IHAN)@DEAN)@DFR;)@@:8#K@K'JR@@@@KB
)@@G@@)LB[##@[@K0@K0@K0@K0@K^G@@@@@@^-)@I /,)@!Z )@@I# )@@I N-0@I#N-)@I /,)@1'KC
)@@G@@AF@@@#JS@@@@)LJ[##@[#@[#@[@K0@K0@ES@CS@@@@AB@@[%R;@@G)CE)@@B *@@@T/,)@:1KD
)@@G@@^%)@@T[E)@@B^-0@I#JT@@@@)LR[##@[@ES@CKBC]@-)@@@@@@@@@@O9K@@[*)@@IHR[K@",KE
)@@G@@R[@@",/,0@@@C/@@[%G]0@",CE0@@[JU@@@@)LZ[F#@@K0@^[#@[#@[#@@@@?]0@@^CX^)DEKF
)@@G@@ )@@@T =@@@TC#K@_MP90@@[*)@@IHP90@@]RD0@@#JV@@@@)L*[N@^[#@[][@K[@@:9@@[^KG
)@@G@@/K@@MK:9@@[D/K@@L&:9@@@)/,0@@@RN )DG/K@@L!:#K@@^/K@@MZJW@@@@)L2[N@^@K[@^KH
)@@G@@@*@@@@C9K@/T/K@@MJ:9@@[2/K@@MH:9@@[=/K@@MK:9@@[(/K@@MJ:9@@[M/K@@MHJX@@@@KI
)@@G@@)L/[#@K)SES@CS@ G@^C#-][K@@@@@/,0@@@R#@@@L/,0@@@C/@@[%AB@@[%R;@@['/,0@@@KJ
)@@G@@/,K@N8JY@@@@)M^[EK)KK)SK^CF^@E]@@@@@/K@@L/C9K@/YC[@@@Q/K@@8U'=@@@@C@@@_RKK
)@@G@@/,0@@@/,0@@@R#@@@KJZ@@@@)MH[F#@[@K0@K0@^@K^G@@@@*)@@@T/K@@L=:[@@@Q/K@@MEKL
)@@G@@?]0@@^CX^)DE^&)@@T/K@@MK^+)@@TKA@@@@)MQ[N@^C^^G@^@K[@@ @@@@H/K@@MKO9K@@[KM
)@@G@@/K@@MKO90@@[/K@@MX*=@@@T/,0@@@R#@@@K/K@@MXKB@@@@)M)[F#@@[#@[@K0@K)KK@@@@KN
)@@G@@/K@@M+/,0@@@RN )DG/K@@M(!CK@@#O;K@@]Q#K@@ O90@@[*)@@IHKC@@@@)M([F][>#@[#KO
)@@G@@@@@K0@K)S@@@/,0@@@A3@@ GO;@@@[*@@@@HW8@@@^;G@@@=RF@@@J!C@@@J/,0@@@KD@@@@KP
)@@G@@)M2[E()@-)@)C]@C@)@@@@@@/K@@N0(@@@@S/K@@@5H;@@@[/K@@@5/,)@04/,)@!ZAB@@[%KQ
)@@G@@R;@@['KE@@@@)M;[F#@@K0@K[#@[#@@K@@@@/K@@NF%8K@@:RFK@@K]$0@ GG;@@@[/,)@1:KR
)@@G@@CAK@@^H;@@@[]\0@ GKF@@@@)N^[##@[@K0@K0@K0@K^[@@@@@@@@@C@@@_N/K@@NHR#@@_MKS
)@@G@@^E)@@] 0@@@Q *@@@T/,)@:1^%)@@TKG@@@@)NG[##@@K0@K^G@^[#@[#@@@@@@@@@:DK@@FKT
)@@G@@CXW@DD/K@@NPC[K@[&/K@@NM(0@@@Q @@@@HGC@@@]KH@@@@)NO[F@K0@^G@^[#@[@K0@K@@KU
)@@G@@/,)@19AFK@@#/K@@NM$F@@@[/K@@NV!CK@@JO;K@@[[LX@DE/,)@F+KI@@@@)NX[F#@[@K0@KV
)@@G@@K^G@^@K^@@@@/,K@N(/K@@N0(@@@@S/K@@@5 0@@@Q/K@@N3**@@@P8 K@M"(*@@@VKJ@@@@KW
)@@G@@)N&[##@[#@[@K^[#@@K0@@@@@@@@@@R#@@ GM#H)@@N0K@ GC@@@_TC@K@_S/K@@N@^%)@@PKX
)@@G@@CAK@@^KK@@@@)N,[F#@@K^CF^[@^G@^@@@@@/,K@N8 *@@@PG;@@@[/,)@1:/K@@@5'=@@@@KY
)@@G@@C@@@_U/KD@@@A#@@@MKL@@@@)N7[F@K^[#@@[#@[#@@@@@@@A#@@ GR#@@@MM#H)@@N@K@@IKZ
)@@G@@;C)@@SR#)@@MC@@@_SC@K@_T/K@@@5KM@@@@)O@[F@K@K0@K^G@[@@@@@@@@/,@@QQ[#@@[CLA
)@@G@@ 4@@@P/K@@OB^6)@@P/KD@@@H;@@@[/K@@QN/,)@04KN@@@@)OD[F#@[#@[#@[@K^[#@[@K@LB
)@@G@@/@K@P$/,)@2M[E)@@B/,)@4O/@K@8S/,)@2M @@@^1^A)@]/ ^@@@CKO@@@@)OM[#@K0@K0@LC
)@@G@@K[#@[#@[#@@@@@@@@@^,)@@TCE)@@B[E)@@CC])@@S/K@@QN?E)@@B[A)@@B/,)@4OKP@@@@LD
)@@G@@)OU[F@K^G@^G@^G@^[@K^@@@/,)@QE/,)@0B/,)@1:/,)@P%[A)@@DHE)@@BCA)@@B/,)@QNLE
)@@G@@/!)@S5KQ@@@@)O<[F@K0@K0@K^[#@[@K0@K@/K@@O8(^@@@C/K@@@5**@@@V/,)@QE/!)@S5LF
)@@G@@^,)@@TCE)@@C8 )@OZKR@@@@)O?[#@K0@ES@ CI4G@^CJ[#@@@@@@@O#@@^1R;@@@^'=@@@@LG
)@@G@@A3K@^\R;K@@@R;@@^? @@@^1/,K@P7KS@@@@)O4[F#@[#@@K0@K^@K0@K0@@A#)@ GR#*@]/LH
)@@G@@G;@@@[/,)@1:R]@@_MAB@@@CP;@@@[RB@@@CA#@@^1KT@@@@)O.[##@[#@[@K0@K0@K^G@^@LI
)@@G@@@@@@@@/K@@PE**@@@V/,)@!Z()@@I^M#*)]/R#)@_VN0S)]/]$0@ GKU@@@@)P [EK0@K^G@LJ
)@@G@@^[@K)2^G@@@@(4@@@PH;@@@['=@@@@/,)@04/K@@O,*^@@@C/K@@O9?^)@]/R;*@@@KV@@@@LK
)@@G@@)PI[#@K0@K0@K^G@^G@^[#@@@@@@@@RF@@@B/K@@P=!E)@@BCE)@@C/K@@PW?E)@@CCA)@@BLL
)@@G@@/K@@@5KW@@@@)PQ[##@[#@[#@@K0@K^G@@@@@@@@@@P;@@@[RF@@@B/K@@RX[A)@@BH])@@GLM
)@@G@@GA)@@B[E)@@BCA)@@BKX@@@@)PY[##@[#@@K0@K0@K^[]]0@@@@@@@'=@@@@C@@@_W/K@@RXLN
)@@G@@CA)@@BAB@@@BP;@@@[RB@@@BAF@@@BKY@@@@)P&[F@K0@K0@K^G@^G@@K@@@/,K@P7!9@@[0LO
)@@G@@G9@@@[K00@ GRB0@]//K@@OQAB@@@BRF@@@B/K@@@5KZ@@@@)P\[]K0@K0@K^G@^G@^G@@@@LP
)@@G@@@@@@@@/KE@@@AB0@]/M#")]/N0K@ GR#)@_VA#J)]/R#@@ G&;0@@[LA@@@@)P7[##@[@K^CLQ
)@@G@@E=[#@@()@O).@@@@@@R;K@@@R;@@^?^&)@@Q/^@@72'=@@@@R#@@_X/K@@P.*=@@@QLB@@@@LR
)@@G@@)P_[F#@[]#0K0@K0@K0@^G@@R;0@@[AB@@@CO;@@@[RB@@@CA#@@^1O#@@^1R;@@@^'=@@@@LS
)@@G@@A3K@^\LC@@@@)QC[E^@K0@K0@K0@K@@@@@@@R])@[D/?0@%8^,)@@O @@@ G 0@@@PN]K@@ELT
)@@G@@/A)@QN/KE@@@/KD@@@LD@@@@)QL[E^[]]1@K0@@@@@@@@@@@G;@@@[C])@@S/KC@@@*0@@@PLU
)@@G@@/K@@8U'=@@@@C@@@_Y/KE@@@ @@@@QLE@@@@)QU[F#@[@K[#@[@K0@K^@@@@/K@@Q?=@@@_ZLV
)@@G@@R#@@@@/K@@Q?(4@@@U/KC@@@/,)@QN/!)@S5^,)@@TLF@@@@)Q<[F#@[@K^@K^G@^G@^@@@@LW
)@@G@@/K@@@5 ^@@@E[E)@@E/A)@Q\?')@@ /,)@4O/@K@Q9/,)@2M^6)@@TLG@@@@)Q?[#@K)?K]&LX
)@@G@@@]^[2@-@*@@@@@@@@@C8@@@ /,0@@@C8@@.3/,0@@@C/@@[%/K@@@5'=@@@@C@@@_)LH@@@@LY
)@@G@@)Q4[F][T][-@K)?K@K0@K0@@AF@@@E(C@@@ER;@Z_" @@@@E/K@@@5'=@@@@C@@@_@/,0@@@LZ
)@@G@@/,0@@@LI@@@@)Q.[##@[#@[@K)?K^G@^[#@@@@@@@@(0@@@W/K@@RF(4@@@T/?0@%7'=@@@@MA
)@@G@@C@@@_-[F@@@CAE)@@DLJ@@@@)R [#@K0@^G@^[#@[#@[#@@@@@@@@@CE)@@C ^@@@E 4@@@TMB
)@@G@@/?0@%7A#K@ G)8@@@CR#@@ G/K@@RELK@@@@)RH[F#@[@K^G@[@K^G@@@@@@:8K@@:RFK@@KMC
)@@G@@/K@@@5/K@@:9*@@@@ERE)@@D/,)@K^/!)@S5^,)@@TLL@@@@)RQ[F#@[@K^G@^[@K^G@^@@@MD
)@@G@@/K@@R,!E)@@B/,)@4L/@K@R)/,)@2M[E)@@B/,)@4L/,)@2M^2)@@RLM@@@@)RZ[#@^[#@[#ME
)@@G@@@[#@[#@[@@@@@@@@@@/K@@@5**@@@V C@@@#[A)@@#CE)@@B/K@@N0(@@@@S/A)@QNLN@@@@MF
)@@G@@)R$[F#@[@^[@K^[#@[#@@@@@[A)@@#HE)@@B8 )@R=/K@@K^/,)@0B/])@R9H;@@@[/,)@1:MG
)@@G@@]\0@ GLO@@@@)R0[##@[#@@K0@K^[#@[#@@@@@@@@@[A)@@#CA)@@B/,)@K^/!)@S5^,)@@TMH
)@@G@@G')@@[CE)@@B[A)@@BLP@@@@)R8[F@^G@[#@[@^[#@@@@@@@(0@@@R/K@@S]C])@[C/K@@S@MI
)@@G@@(4@@@PG')@@[*0@@@RC])@@S/K@@R=LQ@@@@)S[[EK0@K^[#@[#@[@K^@@@@/K@@S4/,)@2MMJ
)@@G@@/K@@@5 0@@@R 4@@@P/,)@K^/!)@S5^,)@@TG;@@@[LR@@@@)SE[N@^@K^@K^G@^@@/,)@2MMK
)@@G@@^E)@@]/K@@S5C')@@[/K@@SO/K@@SN:8K@@+/K@@SR:8K@@-/,)@2MLS@@@@)SO[N@K^G@^[ML
)@@G@@@@^G@@^,)@@TG])@@SD])@@QC')@@[(@@@@Q/,)@4O/,)@2M^E)@@]/K@@S>/,)@4LLT@@@@MM
)@@G@@)SY[F@K^[@K^[@K0@K@@@@@@8 )@S+(*@@@V/K@@K^/,)@\"/,)@1:/?0@%7/K@@S\/,)@K^MN
)@@G@@/!)@S5LU@@@@)S$[F#@[@K^[#@[@K0@^G@@@*)@@I^/KA@@[ ?@@@T/K@@S\(?@@@T/K@@K^MO
)@@G@@/,)@0B/,)@1: ?@@@VLV@@@@)S0[N@^[@K^G@[@K@@H')@@[/])@T@/K@@S::])@@S[A)@@#MP
)@@G@@/,)@4O/K@@@5/,)@!Z*@@@@Q/K@@@5LW@@@@)S'[MK[@K^[@K^G@^@/?0@%7(0@@@P/K@@S:MQ
)@@G@@/?0@%7/K@@S*/?0@%78 )@S-G])@@S/E)@S>H])@@SLX@@@@)T^[E*C]@)C]A@]@-)@)@@@@MR
)@@G@@/,K@N8 ?@@@V/K@@T (*@@@V/K@@TF/,)@\"/,)@1:/,K@N(R80@@5LY@@@@)TH[##@[@K0@MS
)@@G@@K0@K0@^G@^G@@@@@@@A#@@F_R#@@[&/K#@@@ C@@@#^,)@@O @@@ G/,)@!Z()@@I^LZ@@@@MT
)@@G@@)TP[F#@[#@@K0@@ES@ G@@@@R;)@F_R;K@F_O;@@@[*@@@@HW8@@@^RFK@@[ @@@@G @@@^6MU
)@@G@@ @@@^4MA@@@@)TY[#]#G()@-)@O0@K)@K0@K)D@@@@C/@@@:/,0@@@C@@@@"/,0@@@C/@@[1MV
)@@G@@AB@@^5R;@@]V/,0@@@MB@@@@)T&[#]@D#@[@K0@K)]K0@K)]K@@@@@/K@@T2/,0@@@C)@@F_MW
)@@G@@/,0@@@C=@@F_/K@@T,*)@@@V/,0@@@MC@@@@)T,[##@@K)<K0@ES@CS@]^^S@@@@@@/,0@@@MX
)@@G@@P;K@@ARFK@@[R;@@G@ )@@@V/,0@@@C8K@@AC8@@F_MD@@@@)T6[F]@?^G@^C]=G@[@@@@@@MY
)@@G@@R;@@@2/K@@U]%8K@@%RFK@@K/,0@@@AF@@^5R;@@@2!8@@@3/,0@@@ME@@@@)T_[##@@()@-MZ
)@@G@@)@O0@K)"^[#@@@@@@@RB@@^4/K@@@5%8K@@%'=@@@@R;@@^4AB@@^6R;@@]VAF@@^6MF@@@@NA
)@@G@@)UB[E@^[]].@K0@@@@@@@@@@^&)@@V/K@@@5'=@@@@O#@@_+;*@@@MO;@@@[*@@@@HW8@@@ANB
)@@G@@;O@@@=MG@@@@)UK[F#@[#@@K[@K^G@^@@@@@/@K@U7*=@@@S/,)@2M/K@@U7:8K@@-/K@@V#NC
)@@G@@:8K@@:RFK@@K^&)@@NMH@@@@)UT[F@K0@K^[#@[@K^G@^G@@[A)@@#CE)@@B/A)@QN/A)@U!ND
)@@G@@!E)@@B/,)@4L/,)@2M[E)@@B/,)@4LMI@@@@)U+[M[@K^G@^[@K^@@/K@@K^/,)@0B/,)@1:NE
)@@G@@/K@@U/**@@@V/])@U//,)@!Z*@@@@SG')@@[(@@@@SMJ@@@@)U?[#@K0@K0@K0@K0@^G@^@@NF
)@@G@@@@@@@@/!)@S5^,)@@TG')@@[CE)@@B[A)@@#[A)@@BHE)@@B8 )@U=MK@@@@)U4[F@K0@K^@NG
)@@G@@K0@K0@K^G@@@ =@@@N/K@@U$^,)@@V[A)@@#C')__"/?0@%7/K@@U=CA)@@B/,)@K^ML@@@@NH
)@@G@@)U.[F#@[@^CI=G@^[@@@@@@@R;K@@1(@@@@H/,)@2M/K@@@5 0@@@V'=@@@@R;K]WK/K@@@5NI
)@@G@@(0@@@VMM@@@@)VA[F@K0@K^[@K^[@K)?@@@@'=@@@@C@@@_</K@@U=/K@@K^/,)@0B/,)@1:NJ
)@@G@@/K@@K^(0@@@P/,)@4LMN@@@@)VJ[]K)'K0@K^G@^[#@@()@@@@@@@@C/@@[1^+)@@V/K@@VQNK
)@@G@@^&)@@V/K@@UK^2)@@V'=@@@@R;K@,8MO@@@@)VR[#]@[@K)AK)7^C]OC]=G@@@@@@@9?@@]VNL
)@@G@@/,0@@@/,0@@@C@@@@H'=@@@@/,0@@@C8@@_=/,0@@@MP@@@@)VZ[##@@()@-@@)CK#CS@CKANM
)@@G@@*KA@@@/,0@@@/,0@@@9?@@[8/,0@@@C8@@@V/,0@@@C/@@[19*@@[8MQ@@@@)V$[#]@(@K)%NN
)@@G@@K^G@^G@^@()@@@@@@@R;@@[^/K@@UK*)@@@V^&)@@S/^@@72'=@@@@R#@@_>/,0@@@MR@@@@NO
)@@G@@)V\[F]#OK0@K^G@[@K)_K0@@**@@@V'=@@@@O#@@_&;*@@@M9*K@['9?K@@>AZW@[/R;K@@,NP
)@@G@@'=@@@@MS@@@@)V8[#@K0@K^[]^[#@[]^ @@@@@@@@@R#@@_*'=@@@@^+)@@N'=@@@@R#@@_$NQ
)@@G@@/K@@V_*)@@@N/K@@W]MT@@@@)W@[#]^[@K0@K^G@]&@]A@]@@@@@@@/K@@WE*)@@@VR;@@[7NR
)@@G@@A#@@[7/K@@@5 =@@@S/K@@UK'=@@@@MU@@@@)WC[#]#)K0@K-]^G@^G@^G@@@@@@@@*)@@@VNS
)@@G@@ =@@@V =@@@S/KE@@@'=@@@@ 0@@[7/KE@@@'=@@@@MV@@@@)WK[#@ES@CK@C]^@2^A)-[]@NT
)@@G@@@@@@@@/,0@@@A#@@@L'=@@@@/,0@@@C8@@/5/,0@@@C/@@[1/K@@W4MW@@@@)WS[F]@0K)YKNU
)@@G@@)EK^[@K^@@@@/,)@W^R#@@_%/,)@X&/,)@W^R#@@_(/,0@@@/,0@@@C@@@@L/,0@@@MX@@@@NV
)@@G@@)W-[#@K]&@]^@@-)@-@U)@@@@@@@@@8K)@W&/,0@@@9?@@[BN8)@@E/,0@@@C/@@[1/,)@W^NW
)@@G@@R#@@_:MY@@@@)W([F]@(@K^[@K^@K-#@@@@@'=@@@@R;@@@]/,)@W^R#@@_!/,)@W^R#@@_?NX
)@@G@@/,)@W^R#@@_?/,0@@@MZ@@@@)W2[##@[@ES@CK@C]^@2A@]^[*@@@@/,0@@@9?@@[8/,0@@@NY
)@@G@@C8@@@Z/,0@@@C/@@[1/,)@\MR#@@H[NA@@@@)W'[#]@(@K)%ES@CK@C]^@2A@@@@@@9?@@[8NZ
)@@G@@/,0@@@C8@@@T/,0@@@C/@@[1'=@@@@R#@@_,/,0@@@NB@@@@)X][#]@5]@(@K)%ES@CK@CS@OA
)@@G@@C@@@@@/K@@XH*)@@@V/,0@@@C/@@[1'=@@@@R#@@_#/,0@@@/,0@@@NC@@@@)XE[#@K)AK^[OB
)@@G@@]@T#@[]@5]@0@@@@@@/,0@@@/,0@@@9?@@[8/,0@@@C8@@@</K@@XJ/,0@@@C8@@@-ND@@@@OC
)@@G@@)XM[#]@(@K)%K^G@^[@K0@@@@@@@@@9*@@['9?@@_\/K@@@5()@@@V/^@@AY'=@@@@R#@@_#OD
)@@G@@/,0@@@NE@@@@)XU[E()@-[%)]A@]@O0@K)5@;*@@@M'=@@@@R;@@[@/K@@TPAF@@@[T8@@@^OE
)@@G@@/@@@@5'=@@@@R;@@[]NF@@@@)X<[#@K0@K-[ES@CS@[N@[#@@@@@@@R#@@@@R90@FK=8@@^@OF
)@@G@@R#@@@@R90@FW'=@@@@A#@@H[O#@@_GNG@@@@)X:[]ES@]A@[N@[]]?()@-@@@@@@@@/,0@@@OG
)@@G@@C/@@[1'=@@@@R;@@[U9*@@[U9?B@@@R90@FK=8@@@)NH@@@@)X3[##@[]@4K)]K0@K)H^C@)OH
)@@G@@@@@@@@/,0@@@C/@@@(/,0@@@9?@@[W/,0@@@C/@@@*/,0@@@9?@@[YNI@@@@)X;[F#@[]@)KOI
)@@G@@)]^C@)K0@@@@:@@@[<*@B@@]R#B@@]/,0@@@C/@@@./,0@@@C/@@@)/,0@@@C)@@[)NJ@@@@OJ
)@@G@@)Y^[F@^C#KK0@K[]@C@@@@@@/,0@@@C/@@@//K@@YJ:@@@[<*@B@@AR#B@@A/,0@@@9?B@@]OK
)@@G@@/K@@YXNK@@@@)YH[EK)H^C@)K0@@@@@@@@@@ @@@@H>8@@@)R#@@@@O;K@@[R#K@@V/,0@@@OL
)@@G@@C/@@@(/,0@@@9?B@@ANL@@@@)YQ[F#@@[]@)K)]K)E@@@@@@/KE@@@/,0@@@/,0@@@C/@@@)OM
)@@G@@/,0@@@R#@@@HR#K@@V=8@@^@R#@@@@NM@@@@)YZ[E()@-@@-)@-)@CS@@)@@/K@@Y%?8@@@ION
)@@G@@R#@@@AR5)@F>=8@)@@R#@@@@R5)@FT/,0@@@C/@@[1NN@@@@)Y*[F]@X@K^C]L]@L@K)AK@@OO
)@@G@@/,)@]B/,0@@@C8@@_1/,0@@@C/@@@]/,0@@@C@A@@D/K@@Y?/,0@@@NO@@@@)Y1[F@K^CF4@OP
)@@G@@K^[]]1@@@@@@/K@@@5'=@@@@C@@@_U/K@@Y'*@@@@S/K@@@5'=@@@@C@@@_2/,)@X&NP@@@@OQ
)@@G@@)Y'[F#@[@K^@K@K@@@@@@@@@/,)@4LR;K@41(@@@@H/,)@2M[])@[D/,)@4L/@K@8S/,)@2MOR
)@@G@@ *@@@SNQ@@@@)Z#[F#@[@K[#@[#@[@K0@K@@/,)@1:]\0@ G/,K@N(^2)@@S^%)@@S:8K@@POS
)@@G@@/@K@ZC/,)@2M[A)@@BNR@@@@)ZG[F#@@K0@K[#@@K0@@@@@@R;@@@^AN[)DER;@@@)AN[)DEOT
)@@G@@R;@@@,/K@@ZO(*@@@S&8K@@[R^K@@BNS@@@@)ZP[##@[#@[#@[#@[#@[#@[#@@@@@@R;[@@@OU
)@@G@@ K[@DK K[@DJ K[@DI K[@DH K[@DG K[@DFAN[@DENT@@@@)ZX[##@[#@[@K0@K^G@^G@@@OV
)@@G@@@@@@@@O;@@@[A#W@F_R#K@[&/,)@!Z]$0@ G/,)@19ACK@@#!C@@@#NU@@@@)Z>[F@K^G@^GOW
)@@G@@@^G@[@K0@K@@/,)@19ACK@@#8KK@Z*$8K@]^AN[@DERZ])DENCK@@[R@)@",/,)@?-NV@@@@OX
)@@G@@)Z,[N@K0@K^[@K^@K@+9K@B_/,K@N8C[K@@G/G@@$=/K@@@58MK@ZC/K@@K^/,)@0B 0@@@SOY
)@@G@@/,)@1:NW@@@@)Z8[M@K[#@@K^@@@@@R#@@_3/K@@ZHO@K@@NR^K@@B+9)@@J/K@@Z,?9)@@1OZ
)@@G@@?9)@@' @@@[D:9)@[SNX@@@@))][F]]-#@@@ES@CKB@@@@@@C@@@@K/,0@@@C/@@[%W9@@@/PA
)@@G@@;P@@@=W9@[IC;P@@@=C[@@#M'=@@@@NY@@@@))F[#][T@K)O^C =CA=CA^@@@@@@@@C@@@_6PB
)@@G@@/,0@@@/,0@@@/,0@@@C@@@@L/,0@@@C8@@_4/,0@@@NZ@@@@))N[F]]1@]&@]^[2@)C@@@@@PC
)@@G@@R#@@@Q/,)@4L/@K@)-/,)@2M/,0@@@C/@@[%N8)@@G/K@@@5'=@@@@OA@@@@))W[F][C@K^CPD
)@@G@@C=[][W@@@@@@/,0@@@C@@@_9/,0@@@9?@@_7#])@[]H])@[]W')@@^;Q)@@=/,0@@@OB@@@@PE
)@@G@@))>[F@K)SK^CF^[#@[#@[@K@/?0@%7/K@@UL^%)@@U^&)@@V/K@@@5'=@@@@C@@@_'/,0@@@PF
)@@G@@8K)@)-OC@@@@)),[F@^G@[#@[@K^[@@@@@@@C[)@_;/@K@8P/,)@2M/K@@-@(C@@@KC'@@@OPG
)@@G@@[ )@@]C9)@[=/,)@1:OD@@@@))7[F@[@K0@]&@[N@[]^K@@@/,0@@@R;)@['R;K@['R;@@@]PH
)@@G@@9()@['/ K@)9;HK@@AC[K@@HC[0@_/OE@@@@)-@[EK^[@K^G@^[@K@@@@@@@/,)@0B/,)@4OPI
)@@G@@/,)@2M[A)@@]/])@-A/,)@4O/@K@-C/,)@2MC')@@[OF@@@@)-D[F@K0@K0@[@^G@^@@@@@@PJ
)@@G@@8#)@-KA#H)G)&;K@@[/G)@-MP#)@@HR;)@@NR3K@ GR#@@[&/K@@7+OG@@@@)-M[F#@[#@[#PK
)@@G@@@[@@^@@@@@@@')G)-ZG8)@@0W8K@@E;GK@@=C@K@@QC@@@",9()@G29!)@['[2@@ GOH@@@@PL
)@@G@@)-V[#@K^G@^[#@[#@[#@[#@@@@@@@@AZ)@G3AN)@G3AV)@G3AR)@G3/K@@-CGA)@@]/,)@1:PM
)@@G@@/^K@-ROI@@@@)-<[##@[#@[#@[#@[@^[#@@@@@@@@@ )@@I^/K@@-N @@@@Q/K@@-*AZ)@G2PN
)@@G@@AN)@G2AV)@G2AR)@G2OJ@@@@)-:[F@K0@K^[@^@@@@@@@@@@C')@]^(@@@@Q/K@@8P!')@] PO
)@@G@@/,)@4O/,)@2M/K@@@5^+)@I^/K@@@5OK@@@@)-4[F#@@K0@K^[@[#@@@@@@@[E)@@JC')@]^PP
)@@G@@!')@]^/,)@4O/,)@2M/K@@@5[A)@@AH')@@[[E)@@AOL@@@@)-.[N@^G@^[@^[@K@@R#0@@OPQ
)@@G@@/,)@4L/@K@@5/,)@2MC]@@@JC@0@",8#@@-_ OG@DEC8@@]#/K@@@5OM@@@@)+B[EK^[#@@KPR
)@@G@@^@ES@@@@@@@@C/@@[%C[K@@J/K@@+]/K@@+E?@0@@Q[Q\)DEG])@",/K@@+I!')@]^ON@@@@PS
)@@G@@)+K[F]@9@K)O[][T][)K@@@@C@@@_6R#0@@L/,0@@@/,0@@@C@@@@QG')@@[/,0@@@C8@@/>PT
)@@G@@/,0@@@OO@@@@)+T[F]]1@K^[#@[@K0@K0@K@/,K@>]CE@@@K =@@@W/K@@@5[CK@@F/,0@A!PU
)@@G@@/,)@3//K@@+]'=@@@@OP@@@@)++[F@K0@K^G@^@()@-]EO^@/^)@&9R'K@$A'=@@@@R;@@[FPV
)@@G@@/K@@+0^&)@@W/K@@+$*@@@D^/K@@+:OQ@@@@)+:[]()@-]G)CS@CS@C]A@]@@@@@@@/,)@5OPW
)@@G@@A#@@D]R#@@_.A#K@[PA#K@D^/^)@+('=@@@@R;@@[FOR@@@@)+3[F@K^[@K0@K^[#@[#@@@@PX
)@@G@@?E)@@B[A)@@B/,)@4O/,)@2M[E)@@B/,)@4O/@K@<3/,)@2M/,)@52OS@@@@)+/[#@K0@K0@PY
)@@G@@K^[#@[#@[#@@@@@@@@()@@ICHE)@@BCA)@@B/,)@QN/!)@S5^,)@@TCE)@@B/K@@QNOT@@@@PZ
)@@G@@)<^[#@K0@K0@K0@^G@^G@^@@@@@@@@/,)@1:A#@@@MR#@@ GH;@@@[*)@@IB]\0@ G*)@@IBQA
)@@G@@/,)@!ZOU@@@@)<G[##@[#@[#@[@K^[#@[@@@@@@@@@8 )@<#(*@@@V/K@@=@/,)@\"/,)@5VQB
)@@G@@ ?@@ GA#@@ GR#@@@MOV@@@@)<O[##@[@K)2^[#@[@K0@@@@@@@@@@R#K@D^/K@@@5*=@@@WQC
)@@G@@/,)@5RH;@@@['=@@@@/,)@04 ?@@@VOW@@@@)<W[##@@K0@K0@^G@^G@^G@@@@@@@@R7@@FTQD
)@@G@@^+)@[NA3@@[NR;@@@  @@@[N[ )@[OG[)@@HD[)@[POX@@@@)<=[##@[]#KK0@K0@K^G@@@@QE
)@@G@@@@@@@@)@@@@KR3@@[K/K@@<,*0@@@WA#@@[Q;@@@@M'=@@@@A7@@[OOY@@@@)<?[F#@[#@@(QF
)@@G@@)@-]I)C]@C@@/K@@<;%'@@@-/K@@@5/,0@$V/^)@+('=@@@@D8@@[FR#K@D^A3K@[KOZ@@@@QG
)@@G@@)<5[EK0@K^@K^G@@@@@@@@@@H')@@[C])@@S^E)@@B/K@@<#C')__"/,)@QN/!)@S5^,)@@TQH
)@@G@@^])@@QPA@@@@)<"[F#@[@K^CF4G@^[@K0@K@/,@@QQCE@@@K/K@@<S/?0@%7 0@@@P'=@@@@QI
)@@G@@C@@@_"/K@@+.[A)@@BPB@@@@)=B[F@K^[#@@K0@^[#@@@@@@R<@@I^/K@@=Q:'@@@:AF@@D#QJ
)@@G@@R;@@[0A#@@D]R#@@__/K@@$A/,K@>]PC@@@@)=K[EK0@K^G@[#@[@K^@@@@@/@K@=9/,)@2MQK
)@@G@@/,)@5"A<@@I^P;@@@[R<@@I^/?0@T A<@@I^O;@@@[PD@@@@)=T[F@K0@K^[#@[#@[@K^G@@QL
)@@G@@CE)@@B/,)@1:/K@@QN?E)@@B[A)@@B/,)@4L/,)@2M[E)@@B/,)@4LPE@@@@)=+[F@^[@K^GQM
)@@G@@@^G@^[@@@@@@/K@@=//,)@6JHE)@@BCA)@@B8 )@==/K@@=//,)@6JH')@@[/])@=$PF@@@@QN
)@@G@@)=:[EK0@K0@K0@K^[#@[@K@@/,)@6^8 )@=((*@@@V/,)@1:/,)@!Z()@@ICA#@@ GR#@@DDQO
)@@G@@G;@@@[PG@@@@)=4[F@K0@K0@K0@K[@K^@@@@C@@@_"/K@@=(/,)@1:C')__"/K@@@5 C@@@#QP
)@@G@@^,)@@O @@@ G/,0@$VPH@@@@)=.[F]].@@K0@K0@^@@@@@@@R#@[@@ @@@@Q )@@@R @@@D^QQ
)@@G@@PF$   D$XF,T@USE E/K@@=3'=@@@@PI@@@@)>A[#]]*()@-@@)CK#CS@]A@@@@@@@RD@@@]QR
)@@G@@H9)@@[CD)@@[/,0@@@C8@@$Q/,0@@@C/@@[1'=@@@@PJ@@@@)>I[MK^G@@K[@K^@@@/K@@><QS
)@@G@@/])@>>/K@@>S%8@@@,/K@@>I:8@@@)O9@@@[RZ^@DE/K@@>3?[)@@^PK@@@@)>S[##@[#@[#QT
)@@G@@@@ES@ G@^CG0@@@@@@^])@@Q/,0@@@R;)@['R;K@['R;@@@[AZ@@['A#K@['R#K@[&PL@@@@QU
)@@G@@)>)[##@[]@D@K^CE=G@^[#@@@@@@@@9*@@[U9?@[@]AD@@@]'=@@@@R#@[@[/K@@>I/,0@@@QV
)@@G@@C4@@['PM@@@@)>*[]()@-[Q-)@)C]^ M@-)@@@@@@@^+)@@R/G@@&6'=@@@@R#@[@^/K@@>0QW
)@@G@@*4@@[)'=@@@@R;@@[UPN@@@@)>0[EK0@^C]=G@^G@^G@^@@@/@T@@[/,)@2L9*@@[R9*@@[LQX
)@@G@@9?@@[</,0@@@/KD@@[:W^@DER;@@@)PO@@@@)>9[F#@[#@[#@[@^@K^@@@@@/,)@2L/K@@&TQY
)@@G@@%8K@@\/K@@&F:8K@@*/@K@&TRFK@@K9*@@[H9?@@]VPP@@@@)&][F@K0@K0@K0@K[@^@@@@@QZ
)@@G@@/K@@&3%8K@@*/K@@&T:8K@@)/@K@&TRFK@@K9*@@[L9?@@]V/@K@&3PQ@@@@)&F[F#@[#@[#RA
)@@G@@@@K0@^G@^G@@O;@@@[*@@@[S[[)@[S:9)@@![[)@[S:9)@@:CX?@DERF@@@] @@@[SPR@@@@RB
)@@G@@)&O[##@[@K^[#@@()@-[))@@@@@@@@/^)@&9'=@@@@R;@@[F[])@[R/,)@4O/@K@&3/,)@2MRC
)@@G@@AF@@@]PS@@@@)&W[##@[#@[#@[#@[#@[#@@K0@@@@@*@@@[S/KD@@[:@K@[<R#K@[RA#)@[TRD
)@@G@@R:)@[NA#@@D^R#@@[PPT@@@@)&=[F@K0@^G@[#@@K0@K0@@@R#@@[TP#)@[R:8@@@!O#)@[RRE
)@@G@@:8@@@:R#@@[S/KD@@[A#K@[T/K@@&$PU@@@@)&![F#@@K0@K^G@[@K)?K@@@/K@@8U'=@@@@RF
)@@G@@C@@[@ /KD@@[A#)@[T/K@@$#!@)@[T!@@@@IL)@@[NPV@@@@)&6[F@K)?K@^[@K)?@@@@@@@RG
)@@G@@'=@@@@C@@[@B/K@@$L:8)@@]/KD@@@:8)@@[/K@@8U'=@@@@C@@[@APW@@@@)&_[F@K^CF^[RH
)@@G@@@K)?K]&@]^@@/,0@@@C/@@[1/K@@8U'=@@@@C@@[@D/K@@8U'=@@@@C@@[@C/K@@8UPX@@@@RI
)@@G@@)$C[#@K)AK0@K)HK)GK)EK^CF0@@@@'=@@@@C@@[@E/,0@@@/,0@@@/,0@@@9?@@[H/,0@@@RJ
)@@G@@C8@@;BPY@@@@)$K[N@K^CF^@@@@@@@RA ED$@FREE,D$XF,&@USE E ED$XF@ASG,A/K@@8URK
)@@G@@'=@@@@C@@[@F/K@@8UPZ@@@@)$U[EK^G@^CE=G@[#@[@K0@@*?@@@U/K@@$=()@@IG/KF@@@RL
)@@G@@ )@@@R'=@@@@*)@@@RR#@[@GXF    QA@@@@)$<[F@K0@K0@^[@K0@K^G@@@R#@@@@/K@@@!RM
)@@G@@**@@@V/?0@%7/K@@8Y=8@@^@R#@@@@^&)@@R/C@@@!QB@@@@)$?[EK^G@[@K0@^@*@@@@@@@RN
)@@G@@R8K@*$/K@@(==8@@[@R#@@@@/K@@*1=8@@@)R#@@@@/K@@$4=8@)@@QC@@@@)$5[]()@)CS@RO
)@@G@@CS@CS@CS@C@@@@@@@@G;0@@[/,)@4+9*@@^79?@@FW[@K@ T[@K@F&/,)@7SC8@@FWQD@@@@RP
)@@G@@)$.[##@@K0@K0@K0@K0@^@@@@@@@@@/K@@*M%8@@@0R7@@ G )@@ G*0@@@WH-)@F=G9)@@[RQ
)@@G@@C()@F=QE@@@@)* [##@[@K0@K0@ES@ G@^CG4G@@@@R3@@ G/,0@@@R;)@G)R;K@G)R3@@ GRR
)@@G@@ )@@ G/K@@*M(0@@@WQF@@@@)*H[E@K0@K^G@]&@]^D@@@@@/,0@@@C8@@ ] ?@@@O/,)@1:RS
)@@G@@A3@@ GW8@@@#;G@@@=O;@@@];*@@@[QG@@@@)*Q[F@^G@^[#@@K0@ES@ G@@R;)@G)R;K@G)RT
)@@G@@R3@@ G/K[@@[(0@@@W/K@@*]0@@@ G/K[@@@/K@@8 QH@@@@)*Z[F]#H#@@@K0@^@@@@@@@@RU
)@@G@@/K@@*\/K[@@[A3@@ GW8@@@#;G@@@=O;@@@];*@@@[R3@@ G/,0@@@QI@@@@)**[##@[#@[@RV
)@@G@@K0@K0@K0@K^@@@@@@@/,)@62/K@@*] ?@@ G =@@ G )@@ G/K@@*N**@@ G(?@@ GQJ@@@@RW
)@@G@@)*0[N@^[@^G@^@^@@@/K@@*_%;0@@" @@@[ /K@@$4*4@@@NM#H)@@C@@[@IC@K[@HN8K@@GRX
)@@G@@/K@@(!QK@@@@)*'[EK0@[#@[@K[@@@@@@@@@/K@@(L(@@@[ /K@@($/?K@$5A:)@F=C#0@@IRY
)@@G@@P;)@@]R3)@F=^])@[ QL@@@@)(#[F#@@K0@[#@[#@[@@@@@@P;)@[@/@)@(LR:)@ GA<)@ GRZ
)@@G@@ @@@@I:/)__"O3)@F=P;)@[@R<)@ GQM@@@@)(G[##@@^[#@[#@[#@[#@@@@@@@@@@*?@@ GSA
)@@G@@[<0@ G*=@@ GA:)@ G/K@@*N:/)__"*@@@@IO3)@F=QN@@@@)(O[##@[#@[#@[@K0@K0@K0@SB
)@@G@@K0@@@@%)@@F=C0@@F= ?@@ G =@@ G/^@@*N:*@@ GR<@@ G[:0@ GQO@@@@)(W[F@K0@K[#SC
)@@G@@@[@K0@K^G@@@9?@@FS/K@@*][-0@ G/K@@*N:(0@ GK9)@@[/K@@*]?-)@ G/K@@*]QP@@@@SD
)@@G@@)(>[##@[@K0@K0@K0@^G@^@@@@@@@@/,)@69[)@@F=G8@@@[%0@@F=C)@@F=[:0@F=/K@@*5SE
)@@G@@9*@@F=QQ@@@@)(![]()@-@W)CKECS@CKF]^]@@@@@@/,0@@@C/@@@)/,0@@@CC@@@^/,0@@@SF
)@@G@@C8@@;$/,0@@@C/@@[%QR@@@@)(5[F#@[@K^CC=[@K)+K)SK@C@@[@N/,0@@@/,0@@@9?@[@LSG
)@@G@@/K@@(//,0@@@9?@[@J/K@@('*0@@@WQS@@@@)("[#]]1@K0@K)%K^G@^CE=@@@@@@@R#@[@QSH
)@@G@@'=@@@@*0@@@OR#@[@P'=@@@@*4@@@OR#@[@O'=@@@@QT@@@@)%A[F]](@K)%^G@^@K0@@@@@SI
)@@G@@O;@@@[*)@@I#R;@@)@/K@@%-()@@IF @@@@G'=@@@@R#@[@R'=@@@@QU@@@@)%J[F#@@K0@^SJ
)@@G@@G@[#@@K0@@@@*)@@ICO;@@@K*)@@IBO;@@@C*)@@IAO;@@@^*)@@I O;@@@]*)@@I^QV@@@@SK
)@@G@@)%S[EK0@^G@[#@@K0@@@@@@@O;@@C@*)@@IHO;@@^@*)@@IGO;@@]@*)@@IEO;@@[@*)@@IDSL
)@@G@@O;@@@)QW@@@@)%-[F]^=K^CE=G@^[@K)%K@@R#@[@T'=@@@@R#@[@S/K@@%!*)@@@S'=@@@@SM
)@@G@@R#@@_] @@@@G'=@@@@QX@@@@)%%[F]]*K^G@[]#CK@@@@@@@C8@@@[/K@@%2C8@@@['=@@@@SN
)@@G@@=8@@@^R#@@@@/K@@%2 @@@@G'=@@@@QY@@@@)%3[F]]T#[KE]@-)@)C]A@@@9?@@ ]/,)@5LSO
)@@G@@/,)@4([F@@@^/?K@:<R80@@5/KF@@@R]0@(D'=@@@@QZ@@@@)%/[F#@[#@[#@[#@[#@[#@@@SP
)@@G@@ @@@@U @@@@S @@@@S^2)@@P9*@@^79*)@ ]9?)@^79?@@[D*4@@@RRA@@@@): [##@[#@[#SQ
)@@G@@@[#@[#@[@^G@@@@@@@!C@@@^R;@@VQ/K@@:T*)@@@U @@@ K @@@ T 4@@@R C@@@#RB@@@@SR
)@@G@@):H[N@K^CF1@@@@@@@VER 17T BE O CANNOLEMENTPROC E/K@@%2C8@@@]'=@@@@R#@[@USS
)@@G@@/K@@:TRC@@@@):R[E^[@K0@K0@^G@^@@@@@@9/@[@V9?@@^7/K#@@@(C@@@E ?@@@O/,)@4+ST
)@@G@@/,)@4!ES    50 LINRD@@@@):)[EK]))C]A@]A@@)@@@@@@/,)@\"/K[@@@(0@@@P C@@@#SU
)@@G@@/,)@1:/,)@19R8K@E"/K@@%7/K#@@@RE@@@@):([#@K^[#@[#@[#@[#@@@@@@@@@@@/K[@@@SV
)@@G@@ 0@@@P^,)@@O @@@ G ?@@@V/K@@:*/,)@1:/K@@:?RF@@@@):1[##@[#@[@K0@^G@^G@^@@SW
)@@G@@@@@@@@/K@@Q.!C@@@EAB@@@EO;@@@[RB@@@E/K@@:9(C@@@E C@@@GRG@@@@):9[##@[#@[@SX
)@@G@@K0@K0@K^CM=@@@@@@@/K@@?-'=@@@@/,0@!R*)@@@OC@@@[#/K@@?[*4@@@U C@@@[RH@@@@SY
)@@G@@)?[[]()@-@W-)@)]^]]A@]@@@@@@@@/K@@!O**@@@T/,0@@@C/@@@:/K@@?B(C@@@G/,0@@@SZ
)@@G@@C/@@[%RI@@@@)?D[F#@[@^G@[][T#@[@@@@@C/@@[D/K@@?N(?@@@U/,0@@@O;@@@[*?@@@UTA
)@@G@@R#@@@S/K@@?J()@@IDRJ@@@@)?M[F][[#@[@^C^^@K)K@@@@C/@@@^/,0@@@C/@@@%/K@@?UTB
)@@G@@/,0@@@C/@@@'/K@@?S()@@ID/,0@@@RK@@@@)?V[#][[][)()@-)@)CKU+A@@@@@@@*C@@@GTC
)@@G@@C[@@@G'=@@@@/,0@!R*)@@@OR;@@[]/,0@@@/,0@@@RL@@@@)?<[F#@[#@[#@@K^[#@@K)?@TD
)@@G@@'=@@@@;@@@@MOB@@@ R#@[@X/K@@??>8@^@@R#@@@@AB@@@ OB@@@ RM@@@@)??[F#@@K^[#TE
)@@G@@@[#@[@K^G@@@(4@@@V')G)!BC@)@_MQFK@@G*C@@@GC@K@",C@@@",/KE@@@(^@@@ RN@@@@TF
)@@G@@)?5[F@[@^[#@[@K0@@@@@@@@:C0@@I/K@@!#:^0@@G')G@!JP;0@@)/K@@?;?80@[-?80@[;TG
)@@G@@/K@@?;RO@@@@)?"[F#@[#@@K0@K^G@[#@[@@/K@@:9AFK@@G/KE@@@*C@@@G/K@@?3AFK@@[TH
)@@G@@%80@@)[W.)DERB0@@IRP@@@@)!B[F#@[#@[#@[#@[@K[@@@@/KE@@@/K@@?3$#)@@KC@@@",TI
)@@G@@/K@@!GRR"@F"RV"@F"RN"@F"RZ"@F"RQ@@@@)!K[##@[#@[#@[#@@K)KK^G@@@@@@@RB@@@JTJ
)@@G@@/K@@?U/,0@@@C/@@@:AR"@F"AV"@F"AN"@F"AZ"@F"RR@@@@)!S[F@K0@K0@^G@^G@^[#@@@TK
)@@G@@:8@@@_R3@@ G/K@@!SA#W@F_R#W@H+/KF@@[ )@@@ORB@@@J8#@@!WRS@@@@)!-[F@K0@K[@TL
)@@G@@K0@K^G@@@@@@O;@@@[P7@@@ /K@@!:!0@@@ /K@@!, @@@@G/K@@!&!4@@@ /K@@7+RT@@@@TM
)@@G@@)!%[F@K0@K0@@K0@K^G@@@@@*)@@I#/K@@!6*=@@@SA#@@[ ;*@@@MO;@@@[P7@@@ R3@@@ TN
)@@G@@/K@@!,RU@@@@)!3[##@[#@[#@[#@[@ES@CKBCS@@@@**@@@U/,0@@@C/@@[%/K@@, (=@@@VTO
)@@G@@^&)@@V*)@@I ^%)@@URV@@@@)!;[F@[][1@^C -][@@@@@@@/,0@@@C/@@@'/,0@@@C@@@@STP
)@@G@@/K@@,]/,0@@@C8K@@BC@@@@S/K@@,@RW@@@@),^[F][-#@[@K0@K0@K[@@@@;D@@@M/[@@,/TQ
)@@G@@C[@@[ /K@@,/(*@@@U(=@@@N/K@@,/*=@@@S/,0@@@RX@@@@),H[]K0@K]&@]^[2@O0@K)J@TR
)@@G@@@@@@@@/,0@@@C/@@[%/K@@,P/,0@@@C/@@[%/K@@,N*=@@@VH9@@@[RY@@@@),P[N@K0@[@[TS
)@@G@@@K0@K@/K@@,T(=@@@U/K@@,Z%9)@@):9K@@)')B),%C9K@@%P9)@@[R5)@@ R[0@",RZ@@@@TT
)@@G@@),Z[E^[#@[@K0@K^G@@@@@@@R#@@@M^&)@@U/K@@,$ =@@@U/K@@,&(=@@@U/K@@,$%9)@@$TU
)@@G@@[[)@@LSA@@@@),*[#][[@K0@K0@K0@K0@K^@@@@@@@R[0@",/K@@,\CP&@G)CT&@G)CL&@G)TV
)@@G@@CX&@G)/K@@,T/,0@@@SB@@@@),0[E[#@@K^G@^CA^@@@@@@@R#@@"3/,0@@@ =@@@U/K@@,TTW
)@@G@@?@)@@KP7)@@ O;)@@[O9)@@[R#)@@ASC@@@@),9[F#@[@K[#@[@K^G@^G@@@9*K@]T9?K@['TX
)@@G@@/K@@\#/K@@\@*=@@@VR#@@[ /K@@\K/K@@\V*0@@@SSD@@@@)\][N@K@^[@K0@@@@@M[O)@@TY
)@@G@@P9@@@[O5@@@ R[@@_SR[K[@ZN@K@@J;C0@@MR#0@[ 'K@@_+'K@[@YSE@@@@)\G[##@[@K0@TZ
)@@G@@K^CF[#@@()@@@@@@@@R;@@[7A#@@[7/KE@@@'=@@@@/K@@\V*0@@@S/K@@\M*=@@@SSF@@@@UA
)@@G@@)\O[##@[@K)6^G@^CM1#@@@@@@@@@@A#@@@,/KE@@@'=@@@@ 0@@[7/KE@@@'=@@@@/K@@\SUB
)@@G@@*)@@@VSG@@@@)\W[]()@-[%CS@CS@CS@CS@CS@@@@@R7K@ GR7@@@W^,)@@W()@@ G ?@@@WUC
)@@G@@/KE@@@'=@@@@R;@@@,SH@@@@)\=[MK[@^[#@[@K0@@R;@@@#^2)@@W/K@@\0*)@@ G/K@@\;UD
)@@G@@%8@@@]/K@@\3%8K@@*/K@@\3?8@@@]SI@@@@)\,[F#@[@K0@K0@[@K0@K0@@ 4@@@W 0@@@WUE
)@@G@@/K@@\;%8K@@+/KF@@@ 4@@@W 0@@@W/K@@\;A7@@@WSJ@@@@)\7[##@[#@[#@[@K0@K0@^G@UF
)@@G@@@@@@@@^,)@@V/KF@@@^+)@ G*?@@@W/K@@0B^,)@@W()@@ G ?@@@WSK@@@@)\_[F@K^G@[@UG
)@@G@@K0@K^G@^G@@@ ?@@@OR])@@Y/,)@1:A])@@Y/K@@1U:8@@@0R7@@ G/,0@\+/K@@0BSL@@@@UH
)@@G@@)0C[##@[@K0@K0@K0@ES@CK=C@@@@@/K@@8 /,0@@@C8@@ ]A#@@G)R#@@[& C@@@#/K@@7+UI
)@@G@@(0@@@PSM@@@@)0K[]K0@K^G@^[#@@()@O0@@@@@@@@R;)@G)R;K@G)R3@@ G/K@@0Y(?@@@WUJ
)@@G@@/K@@0@0@@@ G/KE@@@SN@@@@)0S[F]^L#@@[#@[#@[@K0@@@(0@@@N/K@@0=(4@@@RA3@@ GUK
)@@G@@;C@@@[O;@@@[T8@@@#R3@@ G/,0@@@SO@@@@)0-[#@K0@K0@K0@K^G@^[#@@@@@@@@ ?@@ GUL
)@@G@@/K@@0%(4@@@R/K@@0B?<0@ G ?@@ G ^@@ G/K@@0=SP@@@@)0([##@[#@[@K0@K^[#@[@@@UM
)@@G@@@@@@@@/K@@04(*@@ G/K@@0^/K@@0B*=@@ G/K@@0\(?@@ G =@@ GSQ@@@@)01[F#@[@K0@UN
)@@G@@^G@[@K^@@@@@C@)@_MC@K@",C@@@",/KE@@[*?@@@VG;@@@[ *@@ G/K@@0^!:0@ GSR@@@@UO
)@@G@@)0'[#@K0@^G@^[#@[#@[#@@@@@@@@@RV"@GZRN"@GZRZ"@GZ/K@@0'AFK@@#%80@@)[K.)DEUP
)@@G@@')G)0_SS@@@@)1][F#@[@K^G@^@K0@K0@@@@P#)@@HRF)@@ARFK@@#R;@@@)/K@@0'$3)@ GUQ
)@@G@@C@@@",/K@@1^RR"@GZST@@@@)1F[EK0@K^G@@[#@@@@@@@@@[0@@ GG8@@@[*@@@@HW8@@@^UR
)@@G@@;O@@@=CC@@@#8#)@1GANH)DE&;K@@[SU@@@@)1O[F#@@^G@^G@[#@[@K0@@@R3@@ G/K@@1>US
)@@G@@(?@@@W/KE@@[AF@@@#A3@@ GR;@@@[/KE@@[*C@@@#SV@@@@)1X[]()@O0@K-^K0@@K0@@@@UT
)@@G@@@@@@@@A3@@ G;C@@@[O;@@@[T8@@@#R3@@ G/,0@@@R;)@G)R;K@G)SW@@@@)1>[F#@[@K0@UU
)@@G@@K[@K0@K0@@@@/@E@@@*?@@@OC0@@ G/K@@04H;@@@[/K@@0B**@@ G/K@@0^()@@IASX@@@@UV
)@@G@@)1,[E^G@^G@@()@-[+)CS@@@ @@@ G/K@@8 /,0@@@C8@@^7G;)@@[[@K@ [C@K@ G/KE@@@UW
)@@G@@:8@@@_SY@@@@)17[F#@@K0@@[#@@@@@@@@@@[0@@ GG8@@@[*@@@@HW8@@@^;O@@@=/@E@@@UX
)@@G@@RF@@@#/KE@@@^,)@@OSZ@@@@)2@[F#@[#@[@K^[#@[@K0@K@/K@@2 $FK@@#')J)2ECKH@DDUY
)@@G@@R[@@_SC@K@_MC@0@",[@W@GZC@K@[&TA@@@@)2D[M@K[@^G@^G@@@@9?@@[&^%)@@W/K @@@UZ
)@@G@@C@0@",AR^)@@/!K@2IAV^@@@AN^@@@AZ^@@@/KE@@@TB@@@@)2N[F#@[#@@K^[#@@K0@K0@@VA
)@@G@@!C)@@[CC)@@] @@@@H C@@@KR#0@",R[@[@Z @@@@PA#@@]X9*@@]VTC@@@@)2W[F@^G@[@KVB
)@@G@@0@K^G@^G@@@@(*@@@WCWI@DD/K@@3J(*@@@W/K@@2V:8@@@)CWI@DDG8)@@[/K@@37TD@@@@VC
)@@G@@)2>[N@[@K@K^@@@@@@?8@@@'/K@@3J/K@@2,?8@@[-?8@@[;/K@@3J/K@@2%?8@@[[?8@@[VVD
)@@G@@/K@@26TE@@@@)2\[MK^@^[@^@@@@@@:8@@@?/K@@3P:8@@@)/K@@3H/K@@3J:8@@@=%8@@@!VE
)@@G@@/K@@3J/K@@22?8@@@0TF@@@@)29[N@^@K[@^@@@@@@:8@@@*/K@@3H:8@@@\/K@@3H:8@@@:VF
)@@G@@/K@@3H:8@@@-/K@@3H:8@@@)/K@@3HTG@@@@)3#[N@^@K[@^[@@@@@/K@@3J/K@@3H:8@@@,VG
)@@G@@/K@@3H:8@@@%/K@@3H:8@@@$/K@@3H:8@@@(/K@@3HTH@@@@)3H[F#@[@K[#@[@^@@@@@@@@VH
)@@G@@H8)@@[/K@@2<G8)@@[/K@@3Q:C)@@[G'K@@[')J)2E/K@@3QAF@@@KTI@@@@)3Q[F#@@K^G@VI
)@@G@@^@ES@ G@^CG0/,0@@@R;)@]VR;K@]VR;@@@#/K@@3=(*@@@W/K@@35(@@@@PAF)@@]TJ@@@@VJ
)@@G@@)3Z[EK0@K0@^@^G@@@@@@@@@(@@@@N9?K@]VH[0@@PC90@@A/K@@35 @@@@H:[K@]VC[K@[<VK
)@@G@@^])@@HTK@@@@)3*[N@^@[@K0@]&@@@R;K@]VR;@@@]9*K@]V/K@@3$H90@@[;^K@@DO;)@@)VL
)@@G@@/K@@3\0@@@@N/K@@3\TL@@@@)32[]()@-[&-)@-)@]A@]A@@@@@@@@AF)@@]AF@@@KR;@@B_VM
)@@G@@/KE@@@ *@@@WR#K@]V/,0@@@R;)@]VTM@@@@)3'[F#@@^G@^G@^@K0@@@@@@:80@@)RZ"@DDVN
)@@G@@O;)@@[/K@@4I!C)@@[RF)@@] @@@@H/KE@@@ *@@@WTN@@@@)4#[F@[#@[@K[@K@@@@@@@@@VO
)@@G@@/K@@4@/K@@4G*@@@@H/K@@4@/K@@4G:C)@@[O#K@@J;*K@@D/K@@4DTO@@@@)4G[N#@@^G@[VP
)@@G@@@@@@@@ @@@@QC@)@@E8 %@@@/]%@@@/\)@4P/KE@@@AF@@@KR;@@B_/KE@@@AF)@@]TP@@@@VQ
)@@G@@)4Q[M^@^@[@@@@@@@@/^K@4QG])@@GT')@@EH8@@@0/K@@8S?8@@@0?8@@@'/@@@4Z;?@@@AVR
)@@G@@ @@@@GTQ@@@@)4)[F#@@^[@]&@]^D)@@@@@@/KE@@@/,0@@@C8@@^7M#W)@@C@K[@-C@@[@)VS
)@@G@@N8K@@D/KI@@@[A)@@#TR@@@@)4([E()@-]U)@)C@O0@@@@@@C8@@ ]M#W)@@C@K[@<C@@[@+VT
)@@G@@N8K@@D/KE@@@/K@@8 /,0@@@R;@@^7TS@@@@)42[#]^9@ES@CK=C]@-)@)@@@@@@@@/K@@44VU
)@@G@@1@@@ G/K@@5I/K@@8 /,0@@@R;@@ ]/K@@8 /,0@@@TT@@@@)4'[F#@[#@[@K^G@^@^@@@@@VV
)@@G@@/K@@5A(@@@@H+8@@@C/K@@5C()@@@Q/^K@5F:@@[@=R3K@@NR#@@ GTU@@@@)5#[##@[#@[@VW
)@@G@@K0@K0@K^G@@@@@@@@@/KE@@@ ?@@ G/,0@\Z 4@@@W 0@@@W/K@@5C^6)@@W^2)@@WTV@@@@VX
)@@G@@)5F[F@K)?K^[]]0ES@CK$)@@/KE@@@/,0@@@R;@@ ]/KE@@@'=@@@@C@@[@$/K@@8Y'=@@@@VY
)@@G@@C@@[@&TW@@@@)5O[E()@-]S G@^CNO@K0@@@:8@@@_R3@@ G/KE@@@/K@@8 /,0@@@R;@@C_VZ
)@@G@@/KE@@@/,0@@@R;@@C_TX@@@@)5X[EK0@K]&@[N@[]#H#@@@@O;@@@];*@@@[R3@@ G/,0@@@WA
)@@G@@R;)@G)R;K@G)/K@@5((0@@@W/KE@@@TY@@@@)5&[]^G@^G@^G@^G@^G@^G@@@@@@@@ =@@DDWB
)@@G@@ )@@DD )@@DDA#@@DDR#@@ GA3@@ GW8@@@#;G@@@=TZ@@@@)5,[E()@-[+)]@-)@CS@CS@@WC
)@@G@@N[K@G)A#K@DDO;K@@[(0@@@WR#K[@*/KE@@@/K@@8 /,0@@@R;@@C_UA@@@@)57[##@[#@@(WD
)@@G@@)@-[+)CS@@@@@@@@@@R;@@@-/KE@@@^[K@G)/K@@8 /,0@@@R;@@C_A#K@G)R#K@[>UB@@@@WE
)@@G@@)5_[##@@()@-]W)[N@[]^/@@@@@@@@/KE@@@/,0@@@R;@@C_/KE@@@/K@@$@/,0@@@R;@@C_WF
)@@G@@AB@@DAUC@@@@)6B[F#@@K[@K0@K0@K0@K0@@R#@@[&^+)@@W()@@DD )@@@W/K@@6J%8@@@+WG
)@@G@@/K@@6G:8@@@*R7@@DDUD@@@@)6K[##@[#@@()@-]K)]A@]@@@@@@@@/K@@6B0@@@DD/KE@@@WH
)@@G@@/K@@$@/,0@@@R;@@C_ ?@@@OA#@@G)UE@@@@)6S[##@[#@[@K0@K0@K0@K0@K@@@@@/K@@6(WI
)@@G@@()@@@W =@@DD ?@@DD(=@@DD/K@@6J?)@@DDR#@@[TUF@@@@)6)[##@@()@O0@K-^K0@@@@@WJ
)@@G@@@@@@@@;C@@@[O;@@@[T8@@@#R3@@DD/,0@@@R;)@G)R;K@G)R3@@DDUG@@@@)6*[##@[#@[@WK
)@@G@@K0@K0@K^G@^G@@@@@@ )@@DD *@@DD/K@@6J!*@@DDR#@@[T/K@@6\(*@@DDA3@@DDUH@@@@WL
)@@G@@)60[F#@@K0@K[#@@K0@K0@@@ *@@F=[)@@F=C8@@@[[0@@F=R;@@@ /K@@68*?@@@N/KE@@[WM
)@@G@@]$0@DDUI@@@@)69[]()@-]U)CKU]A@]A@]A@@@@@@@*0@@@WR3@@F-A#@@F$;@@@@M'=@@@@WN
)@@G@@/K@@8 /,0@@@C8@@^7UJ@@@@)7[[F@^G@^@K0@ES@CS@CS@@L@K@F&C@K@^/D8@@FWA3K@F-WO
)@@G@@+8@@@\/K@@7BA3K@F-)8@@@K/K@@7 UK@@@@)7E[F#@[#@[@K-B[@^G @@@@/K@@-':8)@@#WP
)@@G@@/K@@8]:8)@@]/@%@@@'=@@@@/K@@7Q*?@@@N[^)@F>UL@@@@)7N[E^[#@@K0@[]^S@@@@@@@WQ
)@@G@@'=@@@@/^%@@@ @@@@HR\)@@N/KE@@@ @@@F&/K@@'Q/KE@@@:80@@^UM@@@@)7W[F#@[#@@^WR
)@@G@@G ^[#@[@ES@@C/@@[%/K@@7!*=@@@S/K@@8]/K@@-':8)@@#/@%@@@^6)@F>(4@@F>UN@@@@WS
)@@G@@)7>[#]@9@K)O^C =CA^[]]0@@@@@@@'=@@@@C@@@_@/,0@@@/,0@@@C@@@@S/,0@@@C8@@;ZWT
)@@G@@/,0@@@UO@@@@)7![F#@[#@[#@[#@[@^@ES@@C/@@[%C[K@@G/K@@7_=8@)@@/K@@%6 C@@@#WU
)@@G@@^,)@@O @@@ G 0@@@PUP@@@@)76[#]@9@K)O^C OCA^[]]0@@@@@@@'=@@@@C@@@_R/,0@@@WV
)@@G@@/,0@@@C@@@@L/,0@@@C8@@/?/,0@@@UQ@@@@)7"[F@K^CF^[@K)?K^G@^G @/K@@-.*)@@@QWW
)@@G@@/K@@8Y'=@@@@C@@[@F/K@@8U'=@@@@C@@[@(/K@@8UUR@@@@)8B[]()@-@W)CKE]^]%^#]@@WX
)@@G@@@@@@@@C@@[@%/,0@@@/,0@@@C@@@@L/,0@@@C8@@;H/,0@@@C/@@[%US@@@@)8J[F]]0K^[]WY
)@@G@@].@K^CF^@@@@/K@@8U'=@@@@C@@@_[/K@@8Y'=@@@@C@@[@:/K@@8Y%9K@@ '=@@@@UT@@@@WZ
)@@G@@)8S[F@K)?K0@K^G@^[@K)?K@/K@@(_'=@@@@C@@[@!/K@@8Y^+)@@S/K@@@5(=@@@R'=@@@@XA
)@@G@@C@@[@?UU@@@@)II@S^G@K@@@)8-@:#@[@K0@K0@@@@:8@@@[R\@@IIA#@@IJ/K@@8\**@@@VXB
)@@G@@/K@@8-@@@@@@@@@@@@UV@@@@)8&[F@^@K^G@[#@[#@@@@@@@ ?@@IIAB@@IIO;@@@[RB@@IIXC
)@@G@@/K@@8_:8@@@E/K@@9F:8@@@]/K@@8'UW@@@@)8\[F#@[] [#@[@K0@^G@[@@/K@@8Y!8@@@#XD
)@@G@@^%)@@V%8@@@[R7@@II/K@@8Y**@@@V'=@@@@R#@@[#UX@@@@)88[##@[#@@()@-@W)CKEC[NXE
)@@G@@@@@@@@C/@@[%/K@@9J/,0@@@C8@[@,/,0@@@C/@@[%/K@KIIR#@@IJUY@@@@)9@[#]@9@K)OXF
)@@G@@K0@K)P^C^^G@@@@@@@C0@@II/,0@@@C/@@@!/,0@@@C4@@II/,0@@@C8@@;K/,0@@@UZ@@@@XG
)@@G@@)9C[#][P][(@ES@CKBC]^]+A@@@@@@C^@@II/,0@@@C8@[@0/,0@@@C/@@[%/K@@9J/,0@@@XH
)@@G@@/,0@@@VA@@@@)9K[F][P][-@K)?K0@^[@K@@/K@@9+2CH)9'R#K@",N8K@@#RF@@II'=@@@@XI
)@@G@@C@@@_@/,0@@@/,0@@@VB@@@@)9T[M*C@]@]^ 8@@@@:8@]]E'=@@@@O#@@@HO#@@@I'KK[@2XJ
)@@G@@Q;K@@@;*K@@A+8K@__RBX@99R;@@9.VC@@@@)9<[N@^@K[@K^[]]0@'=@@@@C@@[@5/K@@@!XK
)@@G@@/K@@9::8@]AE/K@@93:8@]ME/K@@93:8@]PE/K@@9:VD@@@@)9![F]^^@^[]](@@@@@@@@@@XL
)@@G@@R#@[@7'=@@@@R#@[@6$$    YQZ MF@ASG,AR MF$$@FREE,'=@@@@VE@@@@)96[N]](@K)%XM
)@@G@@K@@@@@YNTAX MAGE SCSF$ I[MEE@C^+E^@^^)E^@@/K@@@!'=@@@@R#@@_H'=@@@@VF@@@@XN
)@@G@@)'@[U@@@@@@@ILE   D-OF-FSDF ENAS NO FILE HINPUT R CSF$AND FOL COMMILLEGAXO
)@@G@@ERROR VG@@@@)'F@+@@@@@@@)IN@D#@^@@@@)'J@N#@@@@@@%8@@@[R7@@IL/K@@'JCKS   XP
)@@G@@00 TRAEEDS 8OR EXCVH@@@@)'L[#]#D#@@K^[@K)?ES@@@@@@@@@@R;@@^7'=@@@@C@@[@8XQ
)@@G@@/K@@8 /K@@'Q:9K@@MC1K@IL'=@@@@VI@@@@)'T[F]^5@K^[#@[@K^G@^G@@^2)@@P9*)@^7XR
)@@G@@9?)[@V:@@[@;9?@@ ]9?)[@9/,)@5L/K@@'V/,0@@@VJ@@@@)'+[F#@@K0@[@K0@K^G@@@@@XS
)@@G@@A#@@[/R#@[@"9*@@['9?@[@/H;0@@[=8@@[@R#@@@@>8@@@)R#@@@@VK@@@@)':[]()@-[%[XT
)@@G@@N@[]@[@K)A@@@@@@@@/,0@@@C8@[@_/,0@@@C/@@[1C[K@@GT8@@@^'=@@@@R;@@[]VL@@@@XU
)@@G@@)'3[##@[]@4K)]]&@]^^U^[K@@@@@@/,0@@@/,0@@@R;@@F_R#K@@L/,0@@@C/@@@,/,0@@@XV
)@@G@@9?@@FWVM@@@@)';[#@K)%K^G@^G@^G@])-)@@@@@@@R#@@@@R80@@5^+)@@O^A)@@JA#@@H+XW
)@@G@@R#@[[@'=@@@@R#@[@[VN@@@@);#[MK0@K0@K@@@@@@E &&  ED FILPECIFIT IN ST & NOXX
)@@G@@ELEMEN/K@@:# @@@F: @@@F*=8@@@)VO@@@@);H[U@@@@@@@ELMD9MCDS^[ ETTD1OE(N^@&XY
)@@G@@ETOCDOCDO^@&C*)^0)C(HD9^EK)^@)C(MELJDC\D8)VP@@@@);S[U@@@@@@@C9[D))DDGD- XZ
)@@G@@^0)^@)C(JC0' 0)^@)C1GD9RD9QC(MDDGC*)E(O^[AD9PE-K 0)^@)VQ@@@@);<[U@@@@@@@YA
)@@G@@EK'^0)D(DE- C- D-DDDIC8)D(DETNES'^0)D-DD1 BK&^@)ET#CDICDIC),CTJD(HVR@@@@YB
)@@G@@);,[U@@@@@@@D1PD( DDIC8)D(DETNDDIC))D1J^[AC(^ 0)E[KD-DD1N^[[CTODDJD9MEL YC
)@@G@@D1J^[#VS@@@@);9[U@@@@@@@C))CDO^[PET E9CC(ICDIC))CTJD(HC9[D))DDGD- E-TE[ YD
)@@G@@D-DC))DDIE1[ELDCS)VT@@@@)/^[U@@@@@@@C(MC(I^[MC(AD-DD1 D9M^@)^[ ELMC(ICT YE
)@@G@@C(AC(MD(I^[MCTJD-PC*)A@)^[GDDIVU@@@@)/J[U@@@@@@@DDIE1[D- ^@)D0)C1DEL^^[DYF
)@@G@@EK)E9JC([C- C-A^[CD1J^[NCDPE-JELMD9MCT ^[ VV@@@@)/U[U@@@@@@@BK&^@)CTCCDMYG
)@@G@@DDJD0)DDICDOE- ELHDDIC8)D(DETNEK'^0)^[#D[[C(^DDOD-DC))VW@@@@)/>[U@@@@@@@YH
)@@G@@C(#E)'^[MC(E^[ACD#C1DD- D@)D9IE[PD1#C(NES)C- E[M^0)^@)E-[CK'CL[C))VX@@@@YI
)@@G@@)/0[U@@@@@@@DDIE[P AT & T ON &RINTOUSITE PEND ON^[PET C*)DDIE-ADDGE[MDDIYJ
)@@G@@^0)^@)VY@@@@)/;[U@@@@@@@EK)^@)C(MELJDDJD0)C9ICDOC- ETDC(IE))C(GC(HC(^ 0)YK
)@@G@@ETNE(HC- ^[[E))D(JVZ@@@@).A[U@@@@@@@C(ADDI^[PD1^C1DD- EL[D*)E[MD9BD9M^@)YL
)@@G@@^[ ELME-DD9IDDBD1[^[^C(NC1DD- WA@@@@).L[U@@@@@@@ETURN EASE R**  PLDECK**YM
)@@G@@ CARD ****NOC- ^@)FC)D(J (JD1GEL CD^C(^^@)WB@@@@).W[U@@@@@@@CTTCTGCDIE))YN
)@@G@@F[DETOD1JD1 D9M^@)^[ ELM^[D (JEL CD^ TO:  ISTINGTHIS LWC@@@@).$[U@@@@@@@YO
)@@G@@C*)C1P^[ADDGD([DDG 0)^@)C1DC(^E[ CTDC- ^[NE))D(JELMC(#DDICTJC*)^@)WD@@@@YP
)@@G@@).2[U@@@@@@@^@!^[^D(JE1 C9[D))DDGD- C)'^0)D-JE9 ES)CDGD-DD1 D(PD*)D(DD1DYQ
)@@G@@D-G^@)WE@@@@)..[U@@@@@@@D@)^@)CL[E-#^[DD0)D9RC(^^[[D-G^[ID9OCDPE-J 0)^@)YR
)@@G@@E(HC(^^[[ETNDDOE-JWF@@@@)"C[U@@@@@@@DDGC*)E-[^[ACC)C-[^[[ES)C1DD- EL[D*)YS
)@@G@@E[MD9BC-DE))E-J^[ D(KE))CDOE- WG@@@@)"N[U@@@@@@@D9M^[]E1 D))EK)D- C-DE-JYT
)@@G@@D( ^[ C*)ET[E))E-CDS)D1JC-]CDIDS)^0)DD]CDIWH@@@@)"Y[U@@@@@@@E-DD( D([F@)YU
)@@G@@DDGD))D1B^[OCDDD1D^[MC(HE-DD( CTOD-TD9MEL ^[DD1#E(DD-OWI@@@@)"(@E@)IO[C@YV
)@@G@@@])@@@@@^@]/@@[@@@@]^@]#^@)^@)D[^C8_^@)^@)D(NC8_ K%^@)D([DDGBK)^@)WJ@@@@YW
)@@G@@)IX[C*@O0O@()*O0OESE@@@@@@^@-<@@#@-$@@^@-W      ED$TB @@^@-S      ED$TA YX
)@@G@@@@A@]VWK@@@@)I&[C()*[<@AO)!EKQ)@@@@@@]@@@@@[@@@@@@C@@@@@K@@@@@[@@[@8]@@@YY
)@@G@@      ED$DI @[G@*3WL@@@@)I\[@()*O])O0[]&@DN[K1)#ESE@@@@8]@+/@[C@*:@[^@.MYZ
)@@G@@@@)@@@@[ @/'@@[@FW@@[@FK@[^@*$WM@@@@)I7[C* G ]&]-N[K()*@@@@@      ED$S2 ZA
)@@G@@      ED$S1 @[B@+5@[E@+F@[B@+P@[C@+#@[D@]VWN@@@@)J@[C])O@()*O0OE[K@@@@@@ZB
)@@G@@@[I@['@@]@]V@[A@*-@[ @*W^<@C]@@@^@]V@@I@]VJECTED@ . REWO@@@@)JD@** @@@@@ZC
)@@G@@)"%@+* @E@@@@[C@"+@@[@@Q@[[@@#@[J@"NUND   EOF FO*[@@@[@[E@['@[J@['WP@@@@ZD
)@@G@@)",[EE[KES@ G@]&@@@@@@@@D1JELHEK)^@)E(KE[ @[-@['@[#@['@[ @]V@[^@.M@[^@;-ZE
)@@G@@@@[@@@WQ@@@@)"7[EES@ @])[N@@@@@@@@@@@[Q@]VOFF&&&ON&&&&@[B@.*_____@D1JD1 ZF
)@@G@@@@[@#N@@[@H+CDG^@)WR@@@@)_@[]()@O]&@[N@@()@O0@]&@@@@@@@@]@@(FROM: @[[@F"ZG
)@@G@@@@^@@Z@@^@]V@@]@@>@[^@;P@[A@['WS@@@@)_C[E*@O0@ES@ G@@* @@@@@@[A@/A@[#@;'ZH
)@@G@@@@[@@H@@]@@$@[@@F_@@]@@<      MF$$  @[^@.\WT@@@@)_L[E*@ G@])O0@ES@ G@@@@ZI
)@@G@@@@[@H[@@[@G)@[C@['@[]@;4@[L@['@@[@]^@@[@@]@@[@@[@[]@@^WU@@@@)_U[E*[KES@ ZJ
)@@G@@@E[KES@@@@@@@[@@]V@[[@/L@[B@"[@@K@@@@[ @/G@@^@F'@[C@.9@@[@D=@[D@;.WV@@@@ZK
)@@G@@)_<[]*[N@@()@O])O0@ES@@@@@@@@@@[G@]V@]E@]V@[@@X)@][@V_@@ @[8@@ @]VPR$&&&ZL
)@@G@@@[^@/*WW@@@@)_:[E()@O0@E[N@@@()@O0@@@@W@]/@[I@]V&-(&&&^@)^@)D(NC8_@@#@]VZM
)@@G@@@[D@.Q@#Q@]V@6[@[<WX@@@@)_4[E]&@@[N@@@@@@@@@@@@@00    000000@[M@['BC0^@)ZN
)@@G@@A*6A88AC2AS4@[ @['^0&^0&D*)^1NWY@@@@)_.[];:]#4()@X5-[6O]&@@ @@@@@@@@]@$OZO
)@@G@@      ED$XF @@I@]V@@#@=_@@@@@@@[]@JG@@@@@@WZ@@@@-@ [E* @* @* G@])O]&@@@@ZP
)@@G@@@@[@FK@@#@$S@[#@;H@[E@]V@[ @.<@[^@.Z@[A@.G@[A@.A@[B@/_XA@@@@-@I[E()@@ G@ZQ
)@@G@@]&@[N@@()@@@@@#@F,@@#@F:@@#@F*@[G@['C-[E-[C1DC(GDC)^@)CDNCTD@@[@FWXB@@@@ZR
)@@G@@-@R[E()@O0@ES@ @#A@@O0@@@@[@]V@@]__.@F"@[[      ED$TB @[B@:M@@#@F7@@#@F4ZS
)@@G@@@@#@F1XC@@@@-@)[E()@O0@ES@ G@@E[K@@@*[@@@@@[B@/M@[F@"CE[A K%@@@ K%@@[@ ^ZT
)@@G@@@@[@ H@@[@^9@@[@ QXD@@@@-@([M* G@])O])@@@@@[@@@@C-H^@&@@@DDB^@&^@)DDJE[MZU
)@@G@@@[A@;,@[^@;6@[A@' @[D@['@[^@/1XE@@@@-@3[M])O])O@@@@@@@D9PE-KED$TA       ZV
)@@G@@ED$TA @[A@;T@@#@90@@]@9,@[][@3E)-^@)CD]D9MXF@@@@-@.@+@@@@@@@@@@@@@@@@@@@ZW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@C(SDDO@USE &DDGC*_E(O^[AXG@@@@@@@@@@@@@@@@ZX
)@@G@@ETURN EASE R**  PLDECK** CARD ****NOC- ^@)FC)D(J (JD1GEL CD^C(^^@)WB@@@@ZY
)@@G@@@@^@@Q@@U@[L@]/@@B@#S@@@@@@@JI@@@[[[)@@@@@@@@@[N)@@@@@)@@@@@)@@@@@)@@@@@ZZ
)@@G@@)@@@@@)@@@@@)@@@@@)@@@@@)@@@@@)@@@@@)@@@@@)@@@@@)@@@@@)@@@@@)@@@@@)@@@@@AA
)@@G@@@@@@(E@@@@@@EDIT$       EDITR$      ECHAR$      ECOL$       ESKIP$      AB
)@@G@@ECLR$       EMSG$       EOCTV$      EDECV$      EFD1$       EDITX$      AC
)@@G@@ECOLN$      EMSGR$      EFD2$       AEDIT$      AEDITR$     AECHAR$     AD
)@@G@@AECOL$      AESKIP$     AECLR$      AEMSG$      AEOCTV$     AEDECV$     AE
)@@G@@AEFD1$      AEDITX$     AECOLN$     AEMSGR$     AEOCTF$     AEDECF$     AF
)@@G@@AEDCFZ$     ETIME$      EDAY1$      EDAY2$      EDAY3$      AEFD2$      AG
)@@G@@ECOPY$      EPACK$      INSTRT      PSR$        OLDPSR      PCT$        AH
)@@G@@COND$       CSF$        FACIL$      APRINT$     INFOR       SAVEA0      AI
)@@G@@PRINT$      PFS$        SDFO        ERR$        ASCFD       TDATE$      AJ
)@@G@@ATREAD$     APRNTA$     DATE$       PRNTA$      AREADA$     TWAIT$      AK
)@@G@@R$          IOW$        W$          COM$        APRTCA$     FORK$       AL
)@@G@@EXIT$       PNCHA$      AWAIT$      FDASC       PFD$        PFWL$       AM
)@@G@@PFI$        SDFI        SETC$       AREAD$      APNCHA$     SDFOO       AN
)@@G@@SDFOC       SDFIO       SDFIC       READ$       IN1         @@O@@@@@@@@@AO
)@@G@@OUT1        @@O@@@@@@@I@IN2         @@O@@@@@@@B@OUT2        @@O@@@@@@@P@AP
)@@G@@EDIT14      @@@@@@@@@@F_IMAGE       @@@@@@@@@@G)BEGIN       @@[@@@@@@@@*AQ
)@@G@@@@C@[Y@@B@#'@@A@[A@@ @@'@@^@#+@@#@@+@@]@@Q@@[@@E*[@@@@*SDFF*@^@@@@      AR
)@@G@@    AXR$          @]@@@@.           @C@@@@.         DB REORG EDITOR PROCAS
)@@G@@ PROCESSOR        @C@@@@.         FRONT END TO CALL SFD EDITOR(UNIVAC)  AT
)@@G@@@]@@@@.           @]@@@@$(1).       @]@@@@PROCMC*.    @E@@@@          SXAU
)@@G@@        X11,SAVEX11       . $P SAVE RETURN ADDR @G@@@@          LMJ     AV
)@@G@@  X11,DUMMY         . $J CLEAR CORE FOR EDITOR        @G@@@@          LMAW
)@@G@@J       X11,PINITIAL      . $W GO TO PROC INIT ROUTINE      @G@@@@      AX
)@@G@@    JZ        A0,BADRTN         . $J ERROR RETURN(A0=0)           @E@@@@AY
)@@G@@          DS        A0,PFPKT          . $P SAVE USE NAME    @E@@@@      AZ
)@@G@@    DL        A0,6,X10          . $P GET ELEMENT NAME @C@@@@          DSBA
)@@G@@        A0,PFPKT+2        .         @E@@@@          DL        A0,8,X10  BB
)@@G@@        . $P GET VERSION NAME @C@@@@          DS        A0,PFPKT+6      BC
)@@G@@  .         @C@@@@          LA,U      A0,PFPKT          .         @E@@@@BD
)@@G@@          ER        PFS$              . $W SEARCH PF FOR ELT@E@@@@      BE
)@@G@@    JZ        A2,UPDATE         . $J FOUND IT @ED,U   @E@@@@          TNBF
)@@G@@E,U     A2,1              . $T ELT NOT FOUND    @G@@@@          J       BG
)@@G@@  INPUT             . $J INPUT MODE (@ED,I )          @C@@@@          L$BH
)@@G@@SNAP    '*PF*  ',2,10,PFPKT         @E@@@@          ER        EABT$     BI
)@@G@@        . $E PFS$ ERROR       @]@@@@$(4).       @^@@@@PFPKT     RES     BJ
)@@G@@  4   @]@@@@          +0@^@@@@          +1,0          @^@@@@          REBK
)@@G@@S       8   @]@@@@$(1).       @]@@@@INPUT.      @]@@@@.           @C@@@@BL
)@@G@@.         CALL EDITOR WITH INPUT MODE           @]@@@@.           @E@@@@BM
)@@G@@          LA        A0,OPTI           . $P GET I BIT        @C@@@@      BN
)@@G@@    J         UPDATE+1          .         @]@@@@UPDATE.     @]@@@@.     BO
)@@G@@      @C@@@@.         CALL EDITOR WITH UPDATE MODE          @]@@@@.     BP
)@@G@@      @E@@@@          LA        A0,OPTU           . $P GET U BIT        BQ
)@@G@@@G@@@@          OR        A0,WD1            . $P OR WITH WORD 1 OF INFORBR
)@@G@@      @E@@@@          SA        A1,INFOR          . $P SAVE IT          BS
)@@G@@@G@@@@          LX        X1,INFORLC        . $P GET LOCAL INFOR TBL ADDBT
)@@G@@R     @E@@@@          AX,U      X1,3              . $P SKIP 3 WRDS      BU
)@@G@@@E@@@@          DL        A0,PFPKT          . $P GET FILE NAME    @E@@@@BV
)@@G@@          DS        A0,1,X1           . $P SAVE IT IN INFOR @G@@@@      BW
)@@G@@    SLJ       COUNTIT           . $P COUNT WRDS AND CHAR          @G@@@@BX
)@@G@@          LA        A0,FILE           . $P GET FILE ENTRY SKELTON       BY
)@@G@@@E@@@@          LSSL      A1,6              . $P CHAR BITS        @C@@@@BZ
)@@G@@          OR        A0,A1             .         @C@@@@          LA      CA
)@@G@@  A0,A1             .         @E@@@@          OR        A0,A2           CB
)@@G@@  . $P WRDS BITS        @E@@@@          SA        A1,0,X1           . $PCC
)@@G@@ SAVE IT IN INFOR @E@@@@          AX        X1,A2             . $P UP INCD
)@@G@@FOR  ADDR   @C@@@@          AX,U      X1,1              .         @E@@@@CE
)@@G@@          DL        A0,PFPKT+2        . $P GET ELT NAME     @E@@@@      CF
)@@G@@    DS        A0,1,X1           . $P (REPEAT FOE ELT) @G@@@@          SLCG
)@@G@@J       COUNTIT           . $P COUNT WRDS AND CHAR          @G@@@@      CH
)@@G@@    LA        A0,ELT            . $P GET ELT  ENTRY SKELTON       @E@@@@CI
)@@G@@          LSSL      A1,6              . $P CHAR BITS        @C@@@@      CJ
)@@G@@    OR        A0,A1             .         @C@@@@          LA        A0,ACK
)@@G@@1             .         @E@@@@          OR        A0,A2             . $PCL
)@@G@@ WRDS BITS        @E@@@@          SA        A1,0,X1           . $P SAVE CM
)@@G@@IT IN INFOR @E@@@@          AX        X1,A2             . $P UP INFOR  ACN
)@@G@@DDR   @C@@@@          AX,U      X1,1              .         @E@@@@      CO
)@@G@@    DL        A0,PFPKT+6        . $P GET VERSION NAME @E@@@@          DSCP
)@@G@@        A0,1,X1           . $P SAVE IT IN INFOR @E@@@@          TNE     CQ
)@@G@@  A0,('      ')     . $T NAME MISSING     @C@@@@          J         GOTACR
)@@G@@LL            .         @G@@@@          SLJ       COUNTIT           . $PCS
)@@G@@ COUNT WRDS AND CHAR          @G@@@@          LA        A0,VERS         CT
)@@G@@  . $P GET VERS ENTRY SKELTON       @E@@@@          LSSL      A1,6      CU
)@@G@@        . $P CHAR BITS        @C@@@@          OR        A0,A1           CV
)@@G@@  .         @C@@@@          LA        A0,A1             .         @E@@@@CW
)@@G@@          OR        A0,A2             . $P WRDS BITS        @E@@@@      CX
)@@G@@    SA        A1,0,X1           . $P SAVE IT IN INFOR @E@@@@          AXCY
)@@G@@        X1,A2             . $P UP INFOR  ADDR   @C@@@@          AX,U    CZ
)@@G@@  X1,1              .         @]@@@@.           @]@@@@GOTALL.     @G@@@@DA
)@@G@@          ANX       X1,INFORLC        . $P COMPUTE INFOR TBL LNGTH      DB
)@@G@@@E@@@@          SX        X1,INFORLN        . $P SAVE IT          @A@@@@DC
)@@G@@          LA        A0,(+0200,0,0)  @A@@@@          A         A0,INFORLNDD
)@@G@@      @C@@@@          SA        A0,SAVEA0         .         @G@@@@      DE
)@@G@@    LA,U      A4,4              . $P SET IT DEMAND MODE           @E@@@@DF
)@@G@@          LMJ       X11,BEGIN         . $W CALL EDITOR      @A@@@@      DG
)@@G@@    J         GDRTN           @]@@@@BADRTN.     @]@@@@GDRTN.      @C@@@@DH
)@@G@@          LX        X11,SAVEX11       .         @A@@@@          J       DI
)@@G@@  0,X11           @]@@@@.           @C@@@@COUNTIT   +0                  DJ
)@@G@@        . $H      @E@@@@          SZ        SW                . $P SET FDK
)@@G@@IRST TIME SW@E@@@@          LR,U      R1,12             . $P MAX 12 CHARDL
)@@G@@S     @]@@@@LOOP2.      @C@@@@          LR,U      R2,6              .   DM
)@@G@@      @]@@@@LOOP1.      @E@@@@          JGD       R2,$+2            . $TDN
)@@G@@ EXHAUST          @E@@@@          J         TRYA0             . $J TEST DO
)@@G@@A0          @E@@@@          DSL       A1,6              . $P SHIFT 1 CHADP
)@@G@@R     @C@@@@          SSL       A2,30             .         @E@@@@      DQ
)@@G@@    TE,U      A2,' '            . $T A BLANK          @C@@@@          J DR
)@@G@@        NONBLK            . $J NO   @C@@@@          JGD       R1,LOOP1  DS
)@@G@@        . $P -1   @E@@@@          ER        ERR$              . $E ALL BDT
)@@G@@LANK        @]@@@@.           @]@@@@TRYA0.      @C@@@@          TZ      DU
)@@G@@  SW                . $E      @^@@@@          ER        ERR$@^@@@@      DV
)@@G@@    LA,U      A1,1@A@@@@          SA        A1,SW           @C@@@@      DW
)@@G@@    DSL       A0,36             . $P A1=A0@A@@@@          J         LOOPDX
)@@G@@2           @]@@@@.           @]@@@@NONBLK.     @E@@@@          LA      DY
)@@G@@  A0,R1             . $P GET NUM OF CHAR  @C@@@@          DSL       A0,3DZ
)@@G@@6             .         @E@@@@          DI,U      A0,6              . $PEA
)@@G@@ COMPUTE WRD COUNT@^@@@@          TZ        A1  @C@@@@          A,U     EB
)@@G@@  A0,1              .         @A@@@@          LA        A2,A0           EC
)@@G@@@^@@@@          TNZ       A1  @^@@@@          LA,U      A1,6@E@@@@      ED
)@@G@@    J         *COUNTIT          . $J RETURN           @]@@@@$(4).       EE
)@@G@@@]@@@@SAVEA0*   +0@]@@@@OLDPSR*   +0@]@@@@SW        +0@]@@@@INFORLN   +0EF
)@@G@@@]@@@@SAVEX11   +0@^@@@@WD1       +0244,0,0     @^@@@@OPTI      +0,040,0EG
)@@G@@      @^@@@@OPTU      +0,0,040      @^@@@@INFORLC   +INFOR        @]@@@@EH
)@@G@@INFOR*    +0@A@@@@          +0001,0600,0201           @^@@@@          'EEI
)@@G@@D'          @^@@@@          RES       15  @^@@@@FILE      +0101,0200,0  EJ
)@@G@@@^@@@@ELT       +0101,0600,0  @^@@@@VERS      +0101,0700,0  @^@@@@      EK
)@@G@@    END           ___         @^@@@@          RE*[@@@@*SDFF*@#@@@@      EL
)@@G@@    AXR$    @[@@@@.     @C@@@@.         PROC & PERFORM INITIALIZE ROUTINEM
)@@G@@E     @[@@@@.     @#@@@@$(4)      LIT.    @]@@@@$(1).       @]@@@@PINITIEN
)@@G@@AL*.  @E@@@@          SX        X11,SAVEX11       . $P SAVE REGISTERS   EO
)@@G@@@A@@@@          SX        X1,SAVEX1       @A@@@@          SX        X2,SEP
)@@G@@AVEX2       @F@@@@          SLJ       ASGIT             . $W TRY TO ASG,EQ
)@@G@@A THE FILE  @F@@@@          DL        A0,('ED$000      ')    . $P GET  UER
)@@G@@SE NAME     @F@@@@          DS        A0,FPKT           . $P SAVE IN FILES
)@@G@@E ITEM PKT  @B@@@@          LA        A0,(10,FPKT)      .   @ @@@@      ET
)@@G@@    ER        FITEM$    @E@@@@          SSL       A0,30             . $PEU
)@@G@@ CHK STATUS       @B@@@@          JNZ       A0,FITMERR        .   @E@@@@EV
)@@G@@          LA        A0,FPKT+2         . $P GET FILE NAME    @E@@@@      EW
)@@G@@    JZ        A0,FITMERR        . $J FITEM$ ERROR     @E@@@@          DLEX
)@@G@@        A0,FPKT+2         . $P GET FILE NAME    @F@@@@          DS      EY
)@@G@@  A0,4,X10          . $P SAVE IT IN PARSE PKT   @E@@@@          DL      EZ
)@@G@@  A0,FPKT+4         . $P GET QUALIFIER    @B@@@@          DS        A0,2FA
)@@G@@,X10          .   @E@@@@          LX        X1,(4,USETBL-4)   . $P CHK UFB
)@@G@@SE TBL ENTRY@E@@@@          LR        R1,USECNT         . $P GET ENTRY CFC
)@@G@@OUNT  @]@@@@CHKLOOP.    @B@@@@          JGD       R1,$+2            .   FD
)@@G@@@D@@@@          J         NOUSE             . $J NOT FOUND  @E@@@@      FE
)@@G@@    DL        A0,2,X10          . $P GET QUAL ENTERED @E@@@@          DTFF
)@@G@@E       A0,4,*X1          . $T QUAL MATCHED     @C@@@@          J       FG
)@@G@@  CHKLOOP           . $J NO   @E@@@@          DL        A0,4,X10        FH
)@@G@@  . $P GET FILE NAME    @E@@@@          DTE       A0,2,X1           . $TFI
)@@G@@ FILE NAME MATCHED@C@@@@          J         CHKLOOP           . $J NO   FJ
)@@G@@@E@@@@          LA        A0,USECNT         . $P COMPUTE USE NAME @B@@@@FK
)@@G@@          ANA       A0,R1             .   @A@@@@          AA        A0,(FL
)@@G@@'ED$00 ')   @A@@@@          LA        A1,('      ')   @A@@@@          DSFM
)@@G@@        A0,USENAME      @B@@@@          J         GDRTN             .   FN
)@@G@@@]@@@@NOUSE.      @F@@@@          LA        A0,USECNT         . $P GET NFO
)@@G@@XT ENTRY IN TBL   @B@@@@          A,U       A0,1              .   @E@@@@FP
)@@G@@          TG,U      A0,26             . $E 25 FILES MAX     @E@@@@      FQ
)@@G@@    ER        ERR$              . $E TBL OVF (25 MAX) @B@@@@          SAFR
)@@G@@        A0,USECNT         .   @^@@@@          ANA,U     A0,1@^@@@@      FS
)@@G@@    MSI,U     A0,4@ @@@@          LX        X1,A0     @D@@@@          DLFT
)@@G@@        A0,2,X10          . $P SAVE QUAL  @A@@@@          DS        A0,UFU
)@@G@@SETBL,X1    @E@@@@          DL        A0,4,X10          . $P SAVE FILE NFV
)@@G@@AME   @C@@@@          DS        A0,USETBL+2,X1           .  @A@@@@      FW
)@@G@@    LA        A0,USECNT       @A@@@@          AA        A0,('ED$00 ')   FX
)@@G@@@A@@@@          LA        A1,('      ')   @A@@@@          DS        A0,UFY
)@@G@@SENAME      @B@@@@          DS        A0,FREEA1         .   @B@@@@      FZ
)@@G@@    LA,U      A0,FREEA0         .   @B@@@@          ER        CSF$      GA
)@@G@@        .   @ @@@@          E$DIT     EDPKT     @^@@@@          E$CHAR  GB
)@@G@@  '@' @ @@@@          E$FD1     ('USE')   @^@@@@          E$SKIP    1   GC
)@@G@@@ @@@@          E$FD2     USENAME   @^@@@@          E$CHAR    ',' @ @@@@GD
)@@G@@          E$FD2     2,X10     @^@@@@          E$CHAR    '*' @ @@@@      GE
)@@G@@    E$FD2     4,X10     @^@@@@          E$CHAR    '.' @^@@@@          E$GF
)@@G@@SKIP    3   @^@@@@          E$CHAR    '.' @#@@@@          E$DITX  @ @@@@GG
)@@G@@          LA,U      A0,PRINT  @^@@@@          ER        CSF$@ @@@@      GH
)@@G@@    J         GDRTN     @[@@@@.     @[@@@@.     @^@@@@.         GOOD RETGI
)@@G@@URN   @[@@@@.     @]@@@@GDRTN.      @B@@@@          LX        X11,SAVEX1GJ
)@@G@@1       .   @A@@@@          LX        X1,SAVEX1       @A@@@@          LXGK
)@@G@@        X2,SAVEX2       @B@@@@          DL        A0,USENAME        .   GL
)@@G@@@ @@@@          J         0,X11     @[@@@@.     @^@@@@.         BAD RETUGM
)@@G@@RN    @[@@@@.     @]@@@@BADRTN.     @A@@@@          LX        X11,SAVEX1GN
)@@G@@1     @^@@@@          SZ        A0  @ @@@@          J         0,X11     GO
)@@G@@@[@@@@.     @^@@@@.         ASG,A FILE    @[@@@@.     @B@@@@ASGIT     +0GP
)@@G@@                          .   @ @@@@          E$DIT     EDPKT     @D@@@@GQ
)@@G@@          LA        A0,2,X10          . $P GET QUAL   @A@@@@          TNGR
)@@G@@E       A0,('      ')   @ @@@@          J         NOQUAL2   @A@@@@      GS
)@@G@@    TNE       A0,('*     ')   @ @@@@          J         STAR2     @ @@@@GT
)@@G@@          E$FD2     2,X10     @]@@@@STAR2.      @^@@@@          E$CHAR  GU
)@@G@@  '*' @]@@@@NOQUAL2.    @ @@@@          E$FD2     4,X10     @^@@@@      GV
)@@G@@    E$CHAR    '.' @^@@@@          E$CHAR    ' ' @^@@@@          E$CHAR  GW
)@@G@@  '.' @#@@@@          E$DITX  @D@@@@          DL        A0,ASGA         GX
)@@G@@  . $P GET ASG,A  @B@@@@          DS        A0,FUNC           .   @B@@@@GY
)@@G@@          LA,U      A0,FUNC           .   @^@@@@          ER        CSF$GZ
)@@G@@@E@@@@          JN        A0,ASGERR         . $J ASG,A ERROR      @B@@@@HA
)@@G@@          LA,U      A0,FREEA          .   @B@@@@          ER        CSF$HB
)@@G@@              .   @E@@@@          DL        A0,USEA           . $P SET THC
)@@G@@O USE       @B@@@@          DS        A0,FUNC           .   @B@@@@      HD
)@@G@@    LA,U      A0,FUNC           .   @B@@@@          ER        CSF$      HE
)@@G@@        .   @ @@@@          J         *ASGIT    @]@@@@ASGERR.     @A@@@@HF
)@@G@@          SA        A0,A0STAT       @A@@@@          P$RINT    (PF 1,13,AHG
)@@G@@SGMSG)@ @@@@          E$DIT     EDPKT     @ @@@@          E$FD1     ('FAHH
)@@G@@C')   @^@@@@          E$CHAR    ' ' @A@@@@          E$FD2     ('REJECTEDHI
)@@G@@:')   @^@@@@          E$CHAR    ' ' @A@@@@          E$OCTF    12,A0STAT HJ
)@@G@@      @#@@@@          E$DITX  @A@@@@          P$RINT    (PF 1,12,PRINT) HK
)@@G@@@^@@@@          LA,U      A0,1@ @@@@          SA        A0,FATAL  @ @@@@HL
)@@G@@          LA,U      A0,101    @A@@@@          SA        A0,STATUS       HM
)@@G@@@ @@@@          J         BADRTN    @^@@@@FITMERR   ER        ERR$@]@@@@HN
)@@G@@$(4).       @]@@@@PRCCNT*   +0@ @@@@PRCTBL*   RES       50*10     @^@@@@HO
)@@G@@FPKT      RES       10  @ @@@@EDPKT     E$PKT     12,PRINT  @ @@@@PF    HP
)@@G@@    FORM      12,6,18   @^@@@@ASGMSG    'ERROR:'      @^@@@@FUNC      REHQ
)@@G@@S       2   @^@@@@PRINT     RES       12  @A@@@@FREEA     '@FREE,A ED$00HR
)@@G@@0.  . '     @^@@@@FREEA0    '@FREE,A '    @^@@@@FREEA1    RES       2   HS
)@@G@@@#@@@@          ' . '   @^@@@@USEA      '@USE ED$000,'@^@@@@ASGA      '@HT
)@@G@@ASG,A      '@]@@@@A0STAT    +0@]@@@@SAVEX11   +0@]@@@@SAVEX1    +0@]@@@@HU
)@@G@@SAVEX2    +0@^@@@@USENAME   RES       2   @]@@@@USECNT    +0@^@@@@USETBLHV
)@@G@@    RES       100 @^@@@@          END           ___0,FPKT+4         . $PHW
)@@G@@ GET QUALIFIER    @B@@@@          DS        A0,2,X10          .   @E@@@@HX
)@@G@@          LX        X1,(4,USETBL-4)   . $P CHK U*[@@@@*SDFF*@^@@@@      HY
)@@G@@    AXR$          @^@@@@$(4)      LIT.          @]@@@@$(1).       @]@@@@HZ
)@@G@@.           @^@@@@.         INPUT ROUTINE @^@@@@.         INTERFACE:    IA
)@@G@@@C@@@@.                   LX,U              X10,INPKT @C@[@@.           IB
)@@G@@        LMJ               X11,INPUT @C@@@[.                   LMJ       IC
)@@G@@        X11,PINPUT@]@@@@.           @G@[@@.                   INPKT     ID
)@@G@@        +LINE-SPACE,WRD-CNT,OUT-MESG      @G@@@[.                   INPKIE
)@@G@@T             +LINE-INCREMENT,SDFPKT-ADDR       @E@^@@.                 IF
)@@G@@                    +EOF-ADDR,INPUT-BUFFER@E@@@^.                       IG
)@@G@@              +EOF-ADDR,EOF-FLAG    @[@@@@.     @E@[@@.         IF WRD-CIH
)@@G@@NT IS NOT 0, TREAD$ WILL BE PERFORMED     @I@[@@.         IF LAST NON-BLII
)@@G@@ANK CHARACTER IS '                              '           @C@@@[.     IJ
)@@G@@    IF LAST NON-BLANK CHARACTER IS ';'    @A@[@@.           LINE IS CINTIK
)@@G@@INUED.      @A@@@[.           LINE IS CONTINUED.      @[@@@@.     @C@[@@IL
)@@G@@INPUT*                                . $H      @C@@@[PINPUT*           IM
)@@G@@                    . $H      @E@@@[          S,H2      X11,RETRN       IN
)@@G@@  . $P SAVE RETURN ADDR @G@@@[          SZ        LINE              . $PIO
)@@G@@ ZERO OUT LINE INCREMENT      @E@@@@          LA,H1     A0,1,X10        IP
)@@G@@  . $P GET EOF JUMP ADDR@D@@@@          TZ        EOFSW             . $TIQ
)@@G@@ IS IT EOF  @E@@@@          J         0,A0              . $A YES,0,A0 NOIR
)@@G@@      @B@@@[          S         A0,EOFRTN         .   @D@@@@          DLIS
)@@G@@        A0,,X10           . $P GET INPKT  @D@@@@          DS        A0,TIT
)@@G@@RDPKT         . $P SOTORE     @G@@@#          L         A0,SDFPKT . $P PIU
)@@G@@UT BUF-ADDR IN SDFPKT INTO INBUF    @A@@@#          L,H2      A0,8,A0   IV
)@@G@@.     @A@@@#          AN,U      A0,1      .     @A@^@#          S       IW
)@@G@@  A0,INBUF  .     @F@^@@          LX        X8,INBUF          . $P GET IIX
)@@G@@NPUT BUFFER ADDR  @F@@@^          LX        X8,A0             . $P GET IIY
)@@G@@NPUT BUFFER ADDR  @G@@@@          SZ        0,X8              . $P SET CIZ
)@@G@@HARACTER COUNT TO 0     @F@^@@          LA        A0,X8             . $PJA
)@@G@@ UPDATE IN BUF ADDR     @B@^@@          AA,U      A0,1              .   JB
)@@G@@@B@^@@          SA        A0,INBUF          .   @E@@@@          LA,U    JC
)@@G@@  A0,1              . $P PRESET EOF SW    @B@@@@          SA        A0,EJD
)@@G@@OFSW          .   @E@@@[          L         A0,SDFPKT         . $P GET SJE
)@@G@@DFPKT ADDR  @G@@@[          DL        A1,7,A0           . $P SAVE BUFFERJF
)@@G@@ PTRS OF SDFPKT   @B@@@[          DS        A1,SAVPTR         .   @G@@@[JG
)@@G@@DOREAD    LMJ       X11,SDFI          . $P READ NEXT LINE FROM ELEMENT  JH
)@@G@@@E@@@[          J         SDFERR            . $T END OF FILE      @E@@@[JI
)@@G@@          J         *EOFRTN           . $A NO YES,*EOFRTN   @B@@@[      JJ
)@@G@@    L         A0,SDFPKT         .   @G@@@[          TZ,S4     10,A0     JK
)@@G@@        . $T IS THIS A DELETED IMAGE      @E@@@[          J         DOREJL
)@@G@@AD            . $A NO YES,DOREAD    @G@@@[          L         A1,LINE   JM
)@@G@@        . $P INCREMENT LINE-INCREMENT     @B@@@[          A,U       A1,1JN
)@@G@@              .   @B@@@[          S         A1,LINE           .   @E@[@@JO
)@@G@@          TNZ       WRDCNT            . $T IS WORD COUNT 0  @E@[@@      JP
)@@G@@    J         DOREAD            . $A YES,PRINT NO     @E@[@@          LAJQ
)@@G@@,U      A0,TRDPKT         . $P GET TREAD$ PKT   @C@[@@          ER      JR
)@@G@@  TREAD$            .         @E@[@@          J         CHK1STLN        JS
)@@G@@  . $J CHECK FIRST LINE @]@[@@.           @^@[@@.         DO READ$ ONLY JT
)@@G@@@]@[@@.           @C@[@@DOREAD                                . $H      JU
)@@G@@@E@[@@          LA        A0,TRDPKT+1       . $P GET READ$ PKT    @C@[@@JV
)@@G@@          ER        READ$             .         @B@@@@          J       JW
)@@G@@  CHK1STLN          .   @]@@@@$(4).       @^@@@@TRDPKT    RES       2   JX
)@@G@@@C@]@[LINE      EQUF      TRDPKT,,H1        .         @B@@@]LINE      EQJY
)@@G@@UF      0,X10,H1        .     @A@[@@WRDCNT    EQUF      TRDPKT,,S3      JZ
)@@G@@@A@]@[SDFPKT    EQUF      TRDPKT,,H2      @ @@@]SDFPKT    EQUF      0,X1KA
)@@G@@0,H2  @A@]@@INBUF     EQUF      TRDPKT+1,,H2    @ @^@]INBUF     EQUF    KB
)@@G@@  1,X10,H2  @ @@@^EOFSW     EQUF      1,X10,H2  @]@@@@$(1).       @[@@@@KC
)@@G@@.     @A@@@@.         CHECK FIRST LINE INPUT    @[@@@@.     @C@@@@CHK1STKD
)@@G@@LN                              . $H      @E@@@@          SZ        EOFSKE
)@@G@@W             . $P RESET EOF SW     @E@[@@          LSSL      A0,18     KF
)@@G@@        . $P GET WORD IN COUNT@E@@@[          L         A0,10,A0        KG
)@@G@@  . $P GET WORD IN COUNT@C@[@@          SSL       A0,18             .   KH
)@@G@@      @B@@@[          SSL       A0,24             .   @G@[@@          JZKI
)@@G@@        A0,RETRN          . $J RETURN IF NO INPUT           @F@@@[      KJ
)@@G@@    JZ        A0,*RETRN         . $J RETURN IF NO INPUT     @G@@@@      KK
)@@G@@    LA        A1,A0             . $P CHECK IF LAST WORD IS ALL BLK@F@@@@KL
)@@G@@          AA        A1,X8             . $P GET LAST WORD ADDR     @E@@@@KM
)@@G@@          LA        A1,0,A1           . $P GET THE LAST WORD@D@@@@      KN
)@@G@@    TNE       A1,('      ')     . $T ALL BLANK  @C@@@@          ANA,U   KO
)@@G@@  A0,1              . $A A0 -1@C@[@@          JZ        A0,RETRN        KP
)@@G@@  .         @B@@@[          JZ        A0,*RETRN         .   @E@@@@      KQ
)@@G@@    LR        R3,A0             . $P SAVE IT IN R3    @G@@@@          AAKR
)@@G@@        A0,X8             . $P COMPUTE LAST WORD ADDR       @E@@@@      KS
)@@G@@    LA        A0,0,A0           . $P GET THE LAST WORD@F@@@@          SLKT
)@@G@@J       SCAN              . $W EXAMINE THE LAST WORD  @H@@@@          LAKU
)@@G@@        A0,R3             . $P COMPUTE TOTAL NUM OF CHARACTER IN  @B@@@@KV
)@@G@@          ANA,U     A0,1              .   @B@@@@          MSI,U     A0,6KW
)@@G@@              .   @B@@@@          AA        A0,R1             .   @D@@@@KX
)@@G@@          SA,H2     A0,,X8            . $P SAVE IT    @E@@@@          TZKY
)@@G@@        CNTNUSW           . $T CONTINUE SW SET  @E@@@@          J       KZ
)@@G@@  GETNXTLN          . $A YES NO,GETNXTLN  @E@[@@          J         RETRLA
)@@G@@N             . $J RETURN           @D@@@[          J         *RETRN    LB
)@@G@@        . $J RETURN     @[@@@@.     @A@@@@.         GET NXT CONTINUED LILC
)@@G@@NE    @[@@@@.     @C@@@@GETNXTLN                              . $H      LD
)@@G@@@B@@@[          L         A0,SDFPKT         .   @G@@@[          DL      LE
)@@G@@  A1,7,A0           . $P SAVE BUFFER PTR FROM SDFPKT  @B@@@[          DSLF
)@@G@@        A1,SAVPTR         .   @G@@@[          L,U       A1,14           LG
)@@G@@  . $P SET PTR TO PINPUT'S BUFFER   @B@@@[          S,H2      A1,7,A0   LH
)@@G@@        .   @B@@@[          L,U       A1,BUFFER         .   @B@@@[      LI
)@@G@@    S,H2      A1,8,A0           .   @G@@@[READ2     LMJ       X11,SDFI  LJ
)@@G@@        . $P READ NEXT LINE FROM ELEMENT  @E@@@[          J         SDFELK
)@@G@@RR            . $T END OF FILE      @E@@@[          J         SETEOF    LL
)@@G@@        . $A NO YES,SETEOF    @B@@@[          L         A0,SDFPKT       LM
)@@G@@  .   @G@@@[          TZ,S4     10,A0             . $T IS THIS A DELETEDLN
)@@G@@ IMAGE      @E@@@[          J         READ2             . $A NO YES,READLO
)@@G@@2     @G@@@[          L         A1,LINE           . $P INCREMENT LINE-INLP
)@@G@@CREMENT     @B@@@[          A,U       A1,1              .   @B@@@[      LQ
)@@G@@    S         A1,LINE           .   @F@@@[          DL        A1,SAVPTR LR
)@@G@@        . $P RESTORE PTR TO SDFPKT  @B@@@[          DS        A1,7,A0   LS
)@@G@@        .   @F@@@[          L         A0,10,A0          . $P GET NUM. OFLT
)@@G@@ WORDS IN   @A@[@@          R$EAD     (SETEOF,BUFFER) @G@[@@          LSLU
)@@G@@SL      A0,18             . $P GET NUM. OF WORDS IN         @C@[@@      LV
)@@G@@    SSL       A0,18             .         @B@@@[          SSL       A0,2LW
)@@G@@4             .   @G@[@@          JZ        A0,RETRN          . $J RETURLX
)@@G@@N IF NO INPUT           @F@@@[          JZ        A0,*RETRN         . $JLY
)@@G@@ RETURN IF NO INPUT     @G@@@@          LA        A1,A0             . $PLZ
)@@G@@ CHECK IF LAST WORD IS ALL BLK@F@@@@          ANA,U     A1,1            MA
)@@G@@  . $P GET LAST WORD ADDR     @E@@@@          LA        A1,BUFFER,A1    MB
)@@G@@  . $P GET THE LAST WORD@D@@@@          TNE       A1,('      ')     . $TMC
)@@G@@ ALL BLANK  @C@@@@          ANA,U     A0,1              . $A A0 -1@C@[@@MD
)@@G@@          JZ        A0,RETRN          .         @B@@@[          JZ      ME
)@@G@@  A0,*RETRN         .   @E@@@@          LR        R3,A0             . SAMF
)@@G@@VE IT IN R3       @B@@@@          ANA,U     A0,1              .   @E@@@@MG
)@@G@@          LA        A0,BUFFER,A0      . $P GET LASR WORD IN @F@@@@      MH
)@@G@@    SLJ       SCAN              . $W EXAMINE THE LAST WORD  @G@@@@      MI
)@@G@@    LA        A0,R3             . $P COMPUTE NUM OF CHARACTER IN  @B@@@@MJ
)@@G@@          ANA,U     A0,1              .   @^@@@@          MSI,U     A0,6MK
)@@G@@@B@@@@          AA        A0,R1             .   @E@@@@          LR      ML
)@@G@@  R3,A0             . SAVE IT IN R3       @H@@@@          SLJ       MOVEMM
)@@G@@IT            . $P MOVE LAST LINE TO INPUT BUFFER     @D@@@@          TZMN
)@@G@@        CNTNUSW           . $P CONTINUED  @B@@@@          J         GETNMO
)@@G@@XTLN          .   @C@[@@          J         RETRN             .         MP
)@@G@@@B@@@[          J         *RETRN            .   @[@@@@.     @B@@@@.     MQ
)@@G@@    EXAMINE THE LAST INPUT WORD     @H@@@@          .   SKIP BLANKS, CHEMR
)@@G@@CK FOR '                                  '     @[@@@@.     @C@@@@SCAN  MS
)@@G@@    +0                          . $H      @E@@@@          LR,U      R1,6MT
)@@G@@              . $P SET CHAR COUNT   @C@@@@BLKLOP                        MU
)@@G@@        . $H      @E@@@@          DSL       A0,6              . $P GET 1MV
)@@G@@ CHAR       @B@@@@          SSL       A1,30             .   @E@@@@      MW
)@@G@@    TE,U      A1,5               $T IS IT A BLANK     @E@@@@          J MX
)@@G@@        NONBLK            . $A YES NO,NONBLK    @D@@@@          JGD     MY
)@@G@@  R1,BLKLOP         . $J TRY NXT    @B@@@@          ER        ERR$      MZ
)@@G@@        .   @[@@@@.     @C@@@@NONBLK                                . $HNA
)@@G@@      @E@@@@          SZ        CNTNUSW           . $P RESET CONTINUE SWNB
)@@G@@@E@@@@          TE,U      A1,073            . $T A CONTINUED CHAR @E@@@@NC
)@@G@@          J         *SCAN             . $A YES NO,*SCAN     @F@@@@      ND
)@@G@@    SA        A1,CNTNUSW        . $P SET THE CONTINUED SW   @C@@@@      NE
)@@G@@    JGD       R1,$+2            . -1      @B@@@@          ER        ERR$NF
)@@G@@              .   @D@@@@          J         *SCAN             . $J RETURNG
)@@G@@N     @[@@@@.     @E@@@@.         MOVE THE 2ND LINE AND UP TO THE INPUT NH
)@@G@@BUFFER      @[@@@@.     @A@@@@.         R3=NUM. OF CHAR TO MOVE   @B@@@@NI
)@@G@@.         FROM BUFFER TO X8+(0,X8,H2)/6   @[@@@@.     @C@@@@MOVEIT    +0NJ
)@@G@@                          . $H      @F@@@@          LA,H2     A4,0,X8   NK
)@@G@@        . $P GET CHAR POS IN INPUT  @E@@@@          AU        A4,R3     NL
)@@G@@        . $P + CURRENT LENGTH @D@@@@          SA,H2     A5,,X8          NM
)@@G@@  . $P SAVE IT    @H@@@@          LA,U      A5,1              . $P STARTNN
)@@G@@ FROM 1ST CHAR FROM BUFFER    @G@@@@          SZ        A3              NO
)@@G@@  . $P COMPUTE INPUT BUFFER ADDR    @B@@@@          DI,U      A3,6      NP
)@@G@@        .   @B@@@@          AA        A3,X8             .   @B@@@@      NQ
)@@G@@    AA,U      A3,1              .   @B@@@@          LX        X9,A3     NR
)@@G@@        .   @F@@@@          LXI,U     X9,1              . $P SET UP X9 FNS
)@@G@@OR MOVE     @B@@@@          AA,U      A4,1              .   @]@@@@MVELOPNT
)@@G@@.     @E@@@@          JGD       R3,$+2            . $P LOOP FOR ALL CHARNU
)@@G@@@D@@@@          J         *MOVEIT           . $J RETURN     @G@@@@      NV
)@@G@@    LA        A0,A5             . $P COMPUTE CHAR FROM BUFFER     @B@@@@NW
)@@G@@          AA,U      A5,1              .   @B@@@@          ANA,U     A0,1NX
)@@G@@              .   @B@@@@          DSL       A0,36             .   @B@@@@NY
)@@G@@          DI,U      A0,6              .   @E@@@@          EX        GETONZ
)@@G@@NE,A1         . $P GET A CHAR       @G@@@@          LA        A0,A4     OA
)@@G@@        . $P COMPUTE INPUT CHAR POS       @^@@@@          AA,U      A4,1OB
)@@G@@@B@@@@          ANA,U     A0,1              .   @B@@@@          DSL     OC
)@@G@@  A0,36             .   @B@@@@          DI,U      A0,6              .   OD
)@@G@@@F@@@@          EX        PUTONE,A1         . $P SAVE IN INPUT BUFFER   OE
)@@G@@@B@@@@          J         MVELOP            .   @[@@@@.     @B@@@@GETONEOF
)@@G@@    LA,S1     A3,BUFFER,A0      .   @A@@@@          LA,S2     A3,BUFFER,OG
)@@G@@A0    @A@@@@          LA,S3     A3,BUFFER,A0    @A@@@@          LA,S4   OH
)@@G@@  A3,BUFFER,A0    @A@@@@          LA,S5     A3,BUFFER,A0    @A@@@@      OI
)@@G@@    LA,S6     A3,BUFFER,A0    @ @@@@PUTONE    SA,S1     A3,,X9    @ @@@@OJ
)@@G@@          SA,S2     A3,,X9    @ @@@@          SA,S3     A3,,X9    @ @@@@OK
)@@G@@          SA,S4     A3,,X9    @ @@@@          SA,S5     A3,,X9    @ @@@@OL
)@@G@@          SA,S6     A3,,*X9   @[@@@@.     @A@[@@RETRN     EQUF      0,X1OM
)@@G@@1           @^@@@[RETRN     +         0   @^@@@[EOFRTN    +         0   ON
)@@G@@@C@@@@SETEOF                                . $H      @B@@@@          LAOO
)@@G@@,U      A0,1              .   @B@@@@          SA        A0,EOFSW        OP
)@@G@@  .   @A@[@@          J         RETRN           @ @@@[          J       OQ
)@@G@@  *RETRN    @C@@@[SDFERR                                . $H      @F@@@[OR
)@@G@@          SZ        LINE              . $P ZERO TO IND. ERROR     @B@@@[OS
)@@G@@          J         *RETRN            .   @]@@@@$(4).       @]@^@@EOFSW OT
)@@G@@    +0@^@@@@BUFFER    RES       14  @]@@@@CNTNUSW   +0@^@@@[SAVPTR    REOU
)@@G@@S       2   @#@@@@          END     ___     . $J RETURN IF NO INPUT     OV
)@@G@@@G@@@@          LA      *[@@@@*SDFF*@]@@@@ .          @A@@@@ .          OW
)@@G@@        ** IFWKR **     @]@@@@ .          @C@@@@ .        REORG EDITOR WOX
)@@G@@ORKER ROUTINE           @C@@@@ .             TO PROCESS IF STATEMENTS   OY
)@@G@@      @A@@@@ .             IF CONDITION IS TRUE,@C@@@@ .                OZ
)@@G@@  WORKER ROUTINE IS CALLED    @]@@@@ .          @^@@@@ .        CALL IS PA
)@@G@@      @A@@@@ .                  LX,U X10,PARAM  @A@@@@ .                PB
)@@G@@  LMJ  X11,IFWKR  @^@@@@ .        WHERE         @C@@@@ .             ---PC
)@@G@@----------------------------  @C@@@@ .        PARAM:    N    :TYPE:   +(PD
)@@G@@IFWKR)   :  @C@@@@ .             :-----------------------------:  @C@@@@PE
)@@G@@ .             : 8  :                        :  @C@@@@ .             :--PF
)@@G@@---------------------------:  @C@@@@ .             :                    PG
)@@G@@         :  @C@@@@ .             =     OPERAND 1 PTR           =  @C@@@@PH
)@@G@@ .             :                             :  @C@@@@ .             :--PI
)@@G@@---------------------------:  @C@@@@ .             :                    PJ
)@@G@@         :  @C@@@@ .             =     OPERAND 2 PTR           =  @C@@@@PK
)@@G@@ .             :                             :  @C@@@@ .             :--PL
)@@G@@---------------------------:  @C@@@@ .             :                    PM
)@@G@@         :  @C@@@@ .             =  CONDITION TRUE WORKER PKET =  @C@@@@PN
)@@G@@ .             :                             :  @C@@@@ .             ---PO
)@@G@@----------------------------  @A@@@@ .        PARAM+N IS NEXT LOCATION  PP
)@@G@@@]@@@@ .          @C@[@@ .             TYPE:  1 - =, 2 - >, 3 - <       PQ
)@@G@@@E@@@[ .             TYPE:  1 - =, 2 - >, 3 - <, 4 - NOT = (!)    @]@@@@PR
)@@G@@ .          @^@@@@         AXR$.          @^@@@@$(4)     LIT.           PS
)@@G@@@]@@@@$(3).       @]@@@@ .          @A@@@@PF       FORM  12,6,18        PT
)@@G@@.     @]@@@@ .          @C@@@@IFWKR*.                       . $H IFWKR  PU
)@@G@@      @E@@@@         S,H2  X11,RETURN     . $P SAVE RETURN ADDR         PV
)@@G@@@C@@@@         L,S3  A12,0,X10      . $P SAVE IF TYPE @E@@@@         L  PW
)@@G@@   X7,X10         . $P SET PTR TO OPERAND 1     @A@@@@         A,U   X7,PX
)@@G@@2           .     @E@@@@         L,U   A13,1          . $P SET DN IND TOPY
)@@G@@ 1          @G@@@@         SLJ   GETSYM         . $W GETSYM - GET VALUE PZ
)@@G@@OF OP 1           @E@@@@         TP    A1             . $T WAS VALUE FOUQA
)@@G@@ND ?        @C@@@@         J     SYMERR         . $A YES NO,SYMERR@E@@@@QB
)@@G@@         L     X6,A1          . $P SAVE OP 1 PARAMETERS     @E@@@@      QC
)@@G@@   L     A6,A0          . X6 - ADDR , A6 - LENGTH     @C@@@@         L  QD
)@@G@@   A7,A2          . A7 - OFFSET     @C@@@@         L     A8,A3          QE
)@@G@@. A8 - TYPE       @E@@@@         TNE,U A8,4           . $T IS OP 1 NOT AQF
)@@G@@ SET PTR ?  @G@@@@         L,U   A8,3           . $P SET OP 1 TYPE TO PIQG
)@@G@@C 9 COMP          @E@@@@         A     X7,A14         . $P SET PTR TO OPQH
)@@G@@ERAND 2     @E@@@@         L,U   A13,2          . $P SET DN IND TO 2    QI
)@@G@@      @G@@@@         SLJ   GETSYM         . $W GETSYM - GET VALUE OF OP QJ
)@@G@@2           @E@@@@         TP    A1             . $T WAS VALUE FOUND ?  QK
)@@G@@      @C@@@@         J     SYMERR         . $A YES NO,SYMERR@E@@@@      QL
)@@G@@   TNE,U A3,4           . $T IS OP 2 NOT A SET PTR ?  @G@@@@         L,UQM
)@@G@@   A3,3           . $P SET OP 2 TYPE TO PIC 9 COMP          @E@@@@      QN
)@@G@@   A     X7,A14         . $P SET PTR TO WRKER PACKET  @E@@@@         TNEQO
)@@G@@,U A3,1           . $T IS OP 2 TYPE PIC X ?     @C@@@@         J     CTEQP
)@@G@@ST          . $A NO YES,CTEST @E@@@@         TNE,U A8,1           . $T IQQ
)@@G@@S OP 1 TYPE PIC X ?     @C@@@@         J     CTEST          . $A NO YES,QR
)@@G@@CTEST @A@@@@ .        DO NUMERIC COMPARE        @G@@@@         SLJ   GETQS
)@@G@@NUM         . $W GETNUM - GET BINARY VALUE OF OP 2    @E@@@@         L  QT
)@@G@@   A9,A0          . $P SAVE VALUE OF OP 2       @E@@@@         L     A0,QU
)@@G@@A6          . $P RESTORE OP 1 PARAMETERS  @A@@@@         L     A1,X6    QV
)@@G@@      .     @A@@@@         L     A2,A7          .     @A@@@@         L  QW
)@@G@@   A3,A8          .     @G@@@@         SLJ   GETNUM         . $W GETNUM QX
)@@G@@- GET BINARY VALUE OF OP 1    @E@@@@         L     A1,A9          . $P RQY
)@@G@@ESTORE OP 2 VALUE       @G@@@@         L     X10,X7         . $P SET PARQZ
)@@G@@AM ADDR FOR WRKER CALL        @E@@@@         TE,U  A12,1          . $T IRA
)@@G@@S IF TYPE = ?           @C@@@@         J     NT2            . $A YES NO,RB
)@@G@@NT2   @E@@@@         TE    A0,A1          . $P PERFORM TEST =           RC
)@@G@@@C@@@@         J     *RETURN        . $E FALSE        @C@@@@         J  RD
)@@G@@   XEQWKR         .    TRUE         @E@@@@NT2      TE,U  A12,2          RE
)@@G@@. $T IS IF TYPE > ?           @C@@@@         J     NT3            . $A YRF
)@@G@@ES NO,NT3   @E@@@@         TG    A1,A0          . $P PERFORM TEST >     RG
)@@G@@      @C@@@@         J     *RETURN        . $E FALSE        @B@@@@      RH
)@@G@@   J     XEQWKR         .    TRUE   @C@@@[NT3      TE,U  A12,3          RI
)@@G@@. $T IS IF TYPE < @C@@@[         J     NT4            . $A YES NO,NT4   RJ
)@@G@@@D@[@@NT3      TG    A0,A1          . $P PERFORM TEST <     @D@@@[      RK
)@@G@@   TG    A0,A1          . $P PERFORM TEST <     @C@@@@         J     *RERL
)@@G@@TURN        . $E FALSE        @B@@@@         J     XEQWKR         .    TRM
)@@G@@RUE   @E@@@[NT4      TE    A0,A1          . $P PERFORM TEST NOT =       RN
)@@G@@@B@@@[         J     XEQWKR         . $E TRUE   @B@@@[         J     *RERO
)@@G@@TURN        . FALSE     @A@@@@ .        DO CHARACTER COMPARE      @E@@@@RP
)@@G@@CTEST    TNE,U A3,3           . $T IS OP 2 TYPE PIC 9 COMP ?@C@@@@      RQ
)@@G@@   J     TYPERR         . $A NO YES,TYPERR@E@@@@         TNE,U A8,3     RR
)@@G@@      . $T IS OP 1 TYPE PIC 9 COMP ?@C@@@@         J     TYPERR         RS
)@@G@@. $A NO YES,TYPERR@G@@@@         L     X10,X7         . $P SET PARAM ADDRT
)@@G@@R FOR WRKER CALL        @E@@@@         L     X5,A1          . $P SAVE OPRU
)@@G@@ 2 ADDR           @E@@@@         L     A9,A0          . $P SAVE OP 2 LENRV
)@@G@@GTH         @E@@@@         L     A3,A7          . $P SET OP 1 OFFSET    RW
)@@G@@      @E@@@@         AN,U  A6,1           . $P SET CHAR LOOP CNTRS      RX
)@@G@@@A@@@@         AN,U  A9,1           .     @G@@@@         LXI,U A2,1     RY
)@@G@@      . $P SET INC FLDS OF OFFSET PTRS          @A@@@@         LXI,U A3,RZ
)@@G@@1           .     @E@@@@         LXI,U X5,1           . $P SET INC FLDS SA
)@@G@@OF ADDR PTRS@A@@@@         LXI,U X6,1           .     @E@@@@CT2      EX SB
)@@G@@   CHAR1,A3       . $P GET NEXT CHAR OF OP 1    @E@@@@         EX    CHASC
)@@G@@R2,A2       . $P GET NEXT CHAR OF OP 2    @E@@@@         TNE   A0,A1    SD
)@@G@@      . $T ARE CHARS EQUAL ?        @C@@@@         J     CT4            SE
)@@G@@. $A NO YES,CT4   @E@@@@         TNE,U A12,1          . $T IS THIS NOT TSF
)@@G@@EST = ?     @C@@@@         J     *RETURN        . $E FALSE EXIT   @E@@@[SG
)@@G@@         TNE,U A12,4          . $T IS THIS NOT TEST NOT =   @C@@@[      SH
)@@G@@   J     XEQWKR         . $E TRUE EXIT    @E@@@@         TE,U  A12,2    SI
)@@G@@      . $T IS THIS TEST > ?         @C@@@@         J     CT3            SJ
)@@G@@. $A YES NO,CT3   @E@@@@         TG    A1,A0          . $P PERFORM TEST SK
)@@G@@>           @C@@@@         J     *RETURN        . $E FALSE        @C@@@@SL
)@@G@@         J     XEQWKR         .    TRUE         @E@@@@CT3      TG    A0,SM
)@@G@@A1          . $P PERFORM TEST <           @C@@@@         J     *RETURN  SN
)@@G@@      . $E FALSE        @C@@@@         J     XEQWKR         .    TRUE   SO
)@@G@@      @E@@@@CT4      TLEM,U A2,6          . $T IS OP 2 OFFSET < 6 ?     SP
)@@G@@@A@@@@         J     $+2            .     @E@@@@         LXM,U A2,1     SQ
)@@G@@      . $P SET OP 2 OFFSET TO 1     @E@@@@         TLEM,U A3,6          SR
)@@G@@. $T IS OP 1 OFFSET < 6 ?     @A@@@@         J     $+2            .     SS
)@@G@@@E@@@@         LXM,U A3,1           . $P SET OP 1 OFFSET TO 1     @E@@@@ST
)@@G@@         JGD   A6,$+2         . $T MORE CHAR IN OP 1 ?      @C@@@@      SU
)@@G@@   J     CT7            . $A YES NO,CT7   @E@@@@         JGD   A9,CT2   SV
)@@G@@      . $T MORE CHAR IN OP 2 ?      @C@@@@                              SW
)@@G@@. $A NO YES,CT2   @E@@@@         TNE,U A12,3          . $T IS THIS NOT TSX
)@@G@@EST < ?     @C@@@@         J     *RETURN        . $E FALSE EXIT   @E@@@@SY
)@@G@@CT5      EX    CHAR1,A3       . $P GET NEXT CHAR OF OP 1    @E@@@@      SZ
)@@G@@   TE,U  A0,' '         . $T IS CHAR A SPACE ?        @C@@@@         J  TA
)@@G@@   CT6            . $A YES NO,CT6   @E@@@@         TLEM,U A3,6          TB
)@@G@@. $T IS OP 1 OFFSET < 6 ?     @A@@@@         J     $+2            .     TC
)@@G@@@E@@@@         LXM,U A3,1           . $P SET OP 1 OFFSET TO 1     @E@@@@TD
)@@G@@         JGD   A6,CT5         . $T MORE CHAR IN OP 1 ?      @C@@@@      TE
)@@G@@                        . $A NO YES,CT5   @D@@@@         TE,U  A12,1    TF
)@@G@@      . $P ITEMS ARE EQUAL    @D@[@@         J     *RETURN        . $E FTG
)@@G@@ALSE IF TEST >    @E@@@[         J     *RETURN        . $E FALSE IF TESTTH
)@@G@@ >, NOT =   @E@@@@         J     XEQWKR         .    TRUE IF TEST =     TI
)@@G@@      @C@@@@CT6      TE,U  A12,1          . $P OP1 > OP2    @D@[@@      TJ
)@@G@@   J     XEQWKR         . $E TRUE IF TEST >     @E@@@[         J     XEQTK
)@@G@@WKR         . $E TRUE IF TEST >, NOT =    @E@@@@         J     *RETURN  TL
)@@G@@      .    FALSE IF TEST =          @E@@@@CT7      JGD   A9,CT8         TM
)@@G@@. $T MORE CHAR IN OP 2 ?      @C@@@@                              . $A NTN
)@@G@@O YES,CT8   @E@@@@         TE,U  A12,1          . $P ITEMS ARE EQUAL    TO
)@@G@@      @E@[@@         J     *RETURN        . $E FALSE IF TEST > OR <     TP
)@@G@@@F@@@[         J     *RETURN        . $E FALSE IF TEST > OR < OR NOT =  TQ
)@@G@@@E@@@@         J     XEQWKR         .    TRUE IF TEST =           @E@@@@TR
)@@G@@CT8      TNE,U A12,2          . $T IS THIS NOT TEST > ?     @C@@@@      TS
)@@G@@   J     *RETURN        . $E FALSE EXIT   @E@@@@CT9      EX    CHAR2,A2 TT
)@@G@@      . $P GET NEXT CHAR OF OP 2    @E@@@@         TE,U  A1,' '         TU
)@@G@@. $T IS CHAR A SPACE ?        @C@@@@         J     CT10           . $A YTV
)@@G@@ES NO,CT10  @E@@@@         TLEM,U A2,6          . $T IS OP 2 OFFSET < 6 TW
)@@G@@?     @A@@@@         J     $+2            .     @E@@@@         LXM,U A2,TX
)@@G@@1           . $P SET OP 2 OFFSET TO 1     @E@@@@         JGD   A9,CT9   TY
)@@G@@      . $T MORE CHAR IN OP 2 ?      @C@@@@                              TZ
)@@G@@. $A NO YES,CT9   @D@@@@         TE,U  A12,1          . $P ITEMS ARE EQUUA
)@@G@@AL    @D@[@@         J     *RETURN        . $E FALSE IF TEST <    @E@@@[UB
)@@G@@         J     *RETURN        . $E FALSE IF TEST <, NOT =   @E@@@@      UC
)@@G@@   J     XEQWKR         .    TRUE IF TEST =           @C@@@@CT10     TE,UD
)@@G@@U  A12,1          . $P OP1 < OP2    @D@[@@         J     XEQWKR         UE
)@@G@@. $E TRUE IF TEST <     @E@@@[         J     XEQWKR         . $E TRUE IFUF
)@@G@@ TEST <, NOT =    @E@@@@         J     *RETURN        .    FALSE IF TESTUG
)@@G@@ =          @]@@@@ .          @A@@@@CHAR1    NOP                  .     UH
)@@G@@@A@@@@         L,S1  A0,0,X6        .     @A@@@@         L,S2  A0,0,X6  UI
)@@G@@      .     @A@@@@         L,S3  A0,0,X6        .     @A@@@@         L,SUJ
)@@G@@4  A0,0,X6        .     @A@@@@         L,S5  A0,0,X6        .     @A@@@@UK
)@@G@@         L,S6  A0,0,*X6       .     @A@@@@CHAR2    NOP                  UL
)@@G@@.     @A@@@@         L,S1  A1,0,X5        .     @A@@@@         L,S2  A1,UM
)@@G@@0,X5        .     @A@@@@         L,S3  A1,0,X5        .     @A@@@@      UN
)@@G@@   L,S4  A1,0,X5        .     @A@@@@         L,S5  A1,0,X5        .     UO
)@@G@@@A@@@@         L,S6  A1,0,*X5       .     @]@@@@ .          @E@@@@TYPERRUP
)@@G@@   P$RINT (PF 1,8,TEM)  . $P PRINT TYPE ERROR MESSAGE @E@@@@SYMERR   L,UUQ
)@@G@@   A0,1           . $P SET FATAL ERROR FLAG     @A@@@@         S     A0,UR
)@@G@@FATAL       .     @A@@@@         J     *RETURN        . $E  @]@@@@ .    US
)@@G@@      @]@@@@$(4).       @A@@@@RETURN   +     0              .     @E@@@@UT
)@@G@@TEM      'INVALID FIELD TYPE COMBINATION IN IF STATEMENT. '.@A@@@@      UU
)@@G@@   END                  .     ___LXI,U A2,1           . $P SET INC FLDS UV
)@@G@@OF OFFSET PTRS          @A@@@@         LXI,U A3,*[@@@@*SDFF*@[@@@@ .    UW
)@@G@@@A@@@@ .                  ** CALL$WK **   @[@@@@ .    @B@@@@ .        REUX
)@@G@@ORG EDITOR WORKER ROUTINE     @A@@@@ .             TO SET UP AND EXECUTEUY
)@@G@@@C@@@@ .             CALL TO EXTERNAL SUBROUTINE      @[@@@@ .    @^@@@@UZ
)@@G@@ .        CALL IS       @A@@@@ .                  LX,U X10,PARAM  @A@@@@VA
)@@G@@ .                  LMJ  X11,CALL$WK@#@@@@ .        WHERE   @C@@@@ .    VB
)@@G@@         -------------------------------  @C@@@@ .        PARAM: LENGTH VC
)@@G@@ :TYPE:   +(CALL$WK) :  @C@@@@ .             :--------------------------VD
)@@G@@---:  @C@@@@ .             : 11 :    :    :              :  @C@@@@ .    VE
)@@G@@         :-----------------------------:  @C@@@@ .             :        VF
)@@G@@                     :  @C@@@@ .             :--     ROUTINE NAME       VG
)@@G@@ --:  @C@@@@ .             :                             :  @C@@@@ .    VH
)@@G@@         :-----------------------------:  @C@@@@ .             :        VI
)@@G@@                     :  @C@@@@ .             =     PARAMETER PTRS       VJ
)@@G@@   =  @C@@@@ .             :                             :  @C@@@@ .    VK
)@@G@@         -------------------------------  @B@@@@ .             TYPE IS #VL
)@@G@@ OF PARAMETERS    @[@@@@ .    @C@@@@ .             INPUT OF  CALL  RTN(XVM
)@@G@@,Y,Z)       @C@@@@ .                  WILL PRODUCE CALLING PKET OF@B@@@@VN
)@@G@@ .                       LMJ  X11,RTN     @A@@@@ .                      VO
)@@G@@ +    X     @A@@@@ .                       +    Y     @A@@@@ .          VP
)@@G@@             +    Z     @C@@@@ .                       +    $,('EDITOR')VQ
)@@G@@      @C@@@@ .                  WHERE  X,Y,Z ARE GIVEN      @C@@@@ .    VR
)@@G@@                   T1 - CHAR LENGTH       @C@@@@ .                      VS
)@@G@@ S3 - CHAR OFFSET (1-6) @C@@@@ .                       H2 - ABS WORD ADDVT
)@@G@@R     @[@@@@ .    @#@@@@         AXR$.    @#@@@@$(4)     LIT.     @A@@@@VU
)@@G@@PF       FORM  12,6,18        .     @A@@@@INSTR    FORM  6,4,4,4,2,16   VV
)@@G@@.     @]@@@@$(3).       @[@@@@ .    @C@@@@CALL$WK*.                     VW
)@@G@@. $H CALL$WK      @D@@@@         S,H2  X11,RETURN     . $P SAVE RETURN AVX
)@@G@@DDR   @E@@@@         L     X7,X10         . $P SET PTR TO RTN NAME      VY
)@@G@@@A@@@@         A,U   X7,2           .     @E@@@@         L,S3  A7,0,X10 VZ
)@@G@@      . $P GET # OF PARAMETERS      @G@@@@         TG,U  A7,26          WA
)@@G@@. $T ARE THERE > 25 PARAMS ON CALL ?      @C@@@@         J     MAXPRM   WB
)@@G@@      . $A NO YES,MAXPRM@C@@@@         DL    A0,0,X7        . $P GET RTNWC
)@@G@@ NAME @F@@@@         L     X9,(3,LD$TBL)  . $P SET PTR TO SUBRTN JUMP TAWD
)@@G@@BLE   @F@@@@         L     R1,0,X9        . $P GET # SUBRTNS DEFINED IN WE
)@@G@@SJT   @E@@@@SRCHLP   JGD   R1,$+2         . $T MORE ENTRIES IN SJT      WF
)@@G@@@C@@@@         J     NOFIND         . $A YES NO,NOFIND@F@@@@         DTEWG
)@@G@@   A0,1,*X9       . $T IS THIS SJT ENTRY FOR RTN ?    @C@@@@         J  WH
)@@G@@   SRCHLP         . $A YES NO,SRCHLP@F@@@@         L     A0,0,X9        WI
)@@G@@. $P GET SUBRTN SEG LOAD TBL ADDR   @A@@@@         L     A1,A0          WJ
)@@G@@.     @E@@@@         MSI,U A0,4           . $P GET SEG LOAD TBL ADDR    WK
)@@G@@@A@@@@         A,U   A0,SLT$        .     @C@@@@         L     A3,A0    WL
)@@G@@      . $P SAVE ADDR    @E@@@@         TN    0,A0           . $T HAS SEGWM
)@@G@@ BEEN LOADED      @C@@@@         J     LOADED         . $A NO YES,LOADEDWN
)@@G@@@A@@@@         L     A0,A1          .     @A@@@@         SZ    A1       WO
)@@G@@      .     @C@@@@         ER    LOAD$          . $P LOAD SEGMENT @E@@@@WP
)@@G@@LOADED   L,H2  X5,1,A3        . $P GET START ADDR OF SEG    @D@@@@      WQ
)@@G@@   DL    A0,0,X7        . $P GET SUBRTN NAME    @E@@@@         L     X9,WR
)@@G@@(3,ENTRY$)  . $P SET PTR TO ENTRY PT TBL  @E@@@@EPSLP    TP    1,X9     WS
)@@G@@      . $T MORE ENTRY PTS IN TBL    @C@@@@         J     NOFIND         WT
)@@G@@. $A YES NO,NOFIND@E@@@@         DTE   A0,1,*X9       . $T IS THIS SUBRTWU
)@@G@@N ENTRY PT  @C@@@@         J     EPSLP          . $A YES NO,EPSLP @D@@@@WV
)@@G@@         L,H2  X5,0,X9        . $P SET ENTRY PT ADDR  @E@@@@         A,UWW
)@@G@@   X7,2           . $P SET TO 1ST PARAM         @G@@@@         L     X6,WX
)@@G@@(1,PRMLST)  . $P SET PTR TO CALL PARAM LIST           @A@@@@         SZ WY
)@@G@@   A13            .     @G@@@@PRMLP    JGD   A7,$+2         . $T ANY MORWZ
)@@G@@E PARAMS TO BE SET UP ?       @C@@@@         J     ENDPRM         . $A YXA
)@@G@@ES NO,ENDPRM@E@@@@         A,U   A13,1          . $P INCREMENT DATANAME XB
)@@G@@PTR   @G@@@@         SLJ   GETSYM         . $W GETSYM - GET PARAM VALUE XC
)@@G@@ADDR        @E@@@@         JN    A1,SYMERR      . $T WAS GET SUCCESSFUL XD
)@@G@@?     @C@@@@                              . $A YES NO,SYMERR@E@@@@      XE
)@@G@@   A     X7,A14         . $P SET PTR TO NEXT PARAM    @G@@@@         S,TXF
)@@G@@1  A0,0,X6        . $P SET PARAM PTR IN CALL PKET           @A@@@@      XG
)@@G@@   S,S3  A2,0,X6        .     @A@@@@         S,H2  A1,0,*X6       .     XH
)@@G@@@C@@@@         J     PRMLP          . $J PRMLP        @G@@@@ENDPRM   L,UXI
)@@G@@   A0,EDNME       . $P SET UP WALKBACK WORD IN CALL PKET    @A@@@@      XJ
)@@G@@   S,H2  A0,0,X6        .     @A@@@@         L     A0,X6          .     XK
)@@G@@@A@@@@         LSSL  A0,18          .     @A@@@@         SSL   A0,18    XL
)@@G@@      .     @A@@@@         S,H1  A0,0,*X6       .     @G@@@@         L  XM
)@@G@@   A0,RINSTR      . $P PUT RETURN JUMP INSTR AT END OF CALL @A@@@@      XN
)@@G@@   S     A0,0,X6        .     @C@@@@         LMJ   X11,0,X5       . $W CXO
)@@G@@ALL SUBRTN  @A@@@@PRMLST   RES   27             . $E  @]@@@@ .          XP
)@@G@@@E@@@@MAXPRM   P$RINT (PF 1,8,MPM)  . $P PRINT ERROR MESSAGE      @C@@@@XQ
)@@G@@         J     SYMERR         . $J SYMERR       @E@@@@NOCORE   P$RINT (PXR
)@@G@@F 1,9,NCM)  . $P PRINT ERROR MESSAGE      @C@@@@         J     SYMERR   XS
)@@G@@      . $J SYMERR       @E@@@@NOFIND   P$RINT (PF 1,6,NFM)  . $P PRINT EXT
)@@G@@RROR MESSAGE      @E@@@@SYMERR   L,U   A0,1           . $P SET FATAL ERRXU
)@@G@@OR FLAG     @A@@@@         S     A0,FATAL       .     @A@@@@         J  XV
)@@G@@   *RETURN        . $E  @]@@@@$(4).       @A@@@@RETURN   +     0        XW
)@@G@@      .     @E@@@@RINSTR   +     (INSTR 074,4,0,0,1,RETURN) .  J *RETURNXX
)@@G@@ INSTR@A@@@@EDNME    'EDITOR'             .     @G@@@@MPM      'ERROR - XY
)@@G@@MAXIMUM OF 25 PARAMETERS ALLOWED ON CALL' .           @G@@@@NCM      'ERXZ
)@@G@@ROR - NO CORE AVAILABLE TO LOAD CALLED SUBROUTINE   ' .     @E@@@@NFM   YA
)@@G@@   'ERROR - CALLED ROUTINE IS UNDEFINED ' .           @^@@@@         ENDYB
)@@G@@   .        ___G PRROR MESSAGE      @E@@@@SYMERR*[@@@@*SDFF*@#@@@@      YC
)@@G@@   AXR$.    @]@@@@LD$TBL*.    @B@@@@         +     (ENDTBL-LD$TBL-1)/3  YD
)@@G@@.     @A@@@@         'SORTINT     '         .   @ @@@@         +     R$SYE
)@@G@@EG1    .    @A@@@@         'SORTPUT     '         .   @ @@@@         +  YF
)@@G@@   R$SEG1    .    @A@@@@         'SORTRUN     '         .   @ @@@@      YG
)@@G@@   +     R$SEG1    .    @A@@@@         'SORTGET     '         .   @ @@@@YH
)@@G@@         +     R$SEG1    .    @A@@@@ENDTBL   +     0              .     YI
)@@G@@@#@@@@         END  .   ___^@)^@)^@)^@)^@)^@)^@,*[@@@@*SDFF*@[@@@@ .    YJ
)@@G@@@A@@@@ .                  ** PRINTV **    @[@@@@ .    @B@@@@ .        REYK
)@@G@@ORG EDITOR WORKER ROUTINE     @D@@@@ .             TO PRINT VARIABLES FRYL
)@@G@@OM CORE BUFFERS   @[@@@@ .    @^@@@@ .        CALL IS       @A@@@@ .    YM
)@@G@@              LX,U X10,PARAM  @A@@@@ .                  LMJ  X11,PRINTV YN
)@@G@@@^@@@@ .             WHERE    @D@@@@ .                  ----------------YO
)@@G@@---------------   @D@@@@ .             PARAM:    N    :TYPE:   +(PRINTV)YP
)@@G@@  :   @D@@@@ .                  :-----------------------------:   @D@@@@YQ
)@@G@@ .                  : 4  : 0/1:    :              :   @D@@@@ .          YR
)@@G@@        :-----------------------------:   @D@@@@ .                  =   YS
)@@G@@                          =   @D@@@@ .                  :---------------YT
)@@G@@--------------:   @D@@@@ .                  :   VAR ADDR   : INDX ADDR/0YU
)@@G@@  :   @D@@@@ .                  :-----------------------------:   @D@@@@YV
)@@G@@ .                  =                             =   @D@@@@ .          YW
)@@G@@        :-----------------------------:   @D@@@@ .                  :   YX
)@@G@@VAR ADDR   :400 ----   000:   @D@@@@ .                  :---------------YY
)@@G@@--------------:   @D@@@@ .                  :FD VALUE OF INDEX (LFT JUSTYZ
)@@G@@) :   @D@@@@ .                  :-----------------------------:   @D@@@@ZA
)@@G@@ .                  =                             =   @D@@@@ .          ZB
)@@G@@        :-----------------------------:   @D@@@@ .                  :000ZC
)@@G@@ ----- 0000:CHAR LENGTH/LT:   @D@@@@ .                  :---------------ZD
)@@G@@--------------:   @D@@@@ .                  :                           ZE
)@@G@@  :   @D@@@@ .                  =       LITERAL  STRING       =   @D@@@@ZF
)@@G@@ .                  :                             :   @D@@@@ .          ZG
)@@G@@        -------------------------------   @E@@@@ .                  ALL ZH
)@@G@@ADDR ARE TO SYMBOL TBL ENTRIES      @B@@@@ .                  TYPE GIVESZI
)@@G@@ COMMAND -  @F@@@@ .                       0 - PRINT COMMAND - CONVERT AZJ
)@@G@@ND PRINT    @F@@@@ .                       1 - DISPLAY COMMAND - PRINT OZK
)@@G@@CTAL IMAGE  @G@@@[ .                       2 - MONITOR COMMAND - PRINT OZL
)@@G@@N CONSOLE IF BATCH@G@@@[ .                                              ZM
)@@G@@                MODE    @[@@@@ .    @#@@@@         AXR$.    @#@@@@$(4)  ZN
)@@G@@   LIT.     @]@@@@$(3).       @[@@@@ .    @A@@@@PF       FORM  12,6,18  ZO
)@@G@@      .     @[@@@@ .    @C@@@@PRINTV*.                      . $H PRINTV ZP
)@@G@@      @D@@@@         S,H2  X11,RETURN     . $P SAVE RETURN ADDR   @D@@@@ZQ
)@@G@@         S     X10,PKET       . $P SAVE PKET ADDR     @F@@@@         L,SZR
)@@G@@3  A15,0,X10      . $P GET COMMAND TYPE FROM PKET     @E@@@[         SZ ZS
)@@G@@   CONPRT         . $P CLEAR MONITOR FLAG       @E@@@[         TE,U  A15ZT
)@@G@@,2          . $T IS THIS MONITOR COMMAND  @C@@@[         J     PRT1     ZU
)@@G@@      . $A YES NO,PRT1  @G@@@[         SZ    A15            . $P RESET FZV
)@@G@@UNCTION TO PRINT COMMAND      @D@@@[         L,U   A0,1           . $P SZW
)@@G@@ET MONITOR FLAG   @A@]@[         S     A0,CONFLG      .     @A@@@]      ZX
)@@G@@   S     A0,CONPRT      .     @E@[@@         SZ    A13            . $P IZY
)@@G@@NITIALIZE VAR CNTR      @E@@@[PRT1     SZ    A13            . $P INITIALZZ
)@@G@@IZE VAR CNTR      @F@@@@         L     X7,X10         . $P SET PTR TO FIAA
)@@G@@RST PKET ENTRY    @A@@@@         A,U   X7,2           .     @D@@@@      AB
)@@G@@   L,T1  A7,0,X10       . $P SAVE PKET LENGTH   @F@@@@         L,U   A6,AC
)@@G@@72          . $P SET CHAR LENGTH OF PRINT LINE  @A@@@@         TZ    POPAD
)@@G@@T           .     @A@@@@         L,U   A6,132         .     @E@@@@      AE
)@@G@@   E$DIT PVPKT          . $P INITIALIZE LINE BUFFER   @A@@@@         E$DAF
)@@G@@ITX               .     @E@@@@PRT2     L     A0,X7          . $P GET CURAG
)@@G@@RENT DISP IN PKET @A@@@@         AN    A0,PKET        .     @D@@@@      AH
)@@G@@   TNE   A0,A7          . $T AT END OF PKET ?   @C@@@@         J     PRTAI
)@@G@@END         . $A NO YES,PRTEND@E@@@@         A,U   A13,1          . $P IAJ
)@@G@@NCREMENT VAR CNTR       @E@@@@         SLJ   GETSYM         . $W GETSYM AK
)@@G@@- GET SYM VALUE   @D@@@@         TP    A1             . $T VARIABLE FOUNAL
)@@G@@D ?   @A@@@@         J     *RETURN        . $E  @E@@@@         L     X5,AM
)@@G@@A1          . $P SAVE VAR LOC PARAMS      @A@@@@         L     X6,A2    AN
)@@G@@      .     @A@@@@         L     A10,A0         .     @D@@@@         L,UAO
)@@G@@   A11,1          . $P SET PRT TYPE TO 1  @E@@@@         JNZ   A15,PICX AP
)@@G@@      . $T IS THIS DISPLAY COMMAND  @C@@@@                              AQ
)@@G@@. $A NO YES,PICX  @D@@@@         TNE,U A3,3           . $T IS TYPE COMP AR
)@@G@@?     @C@@@@         J     PICCMP         . $A NO YES,PICCMP@D@@@@      AS
)@@G@@   TNE,U A3,4           . $T IS TYPE SET PTR    @C@@@@         J     PICAT
)@@G@@SET         . $A NO YES,PICSET@E@@@@         L     A11,A3         . $P SAU
)@@G@@ET TYPE FOR PRINT       @B@@@@         J     PICX           . $J PICX   AV
)@@G@@@D@@@@PICCMP   L     R4,A10         . $P SAVE ITEM LENGTH   @E@@@@      AW
)@@G@@   JGD   A10,$+2        . $T IS ITEM LENGTH ZERO ?    @C@@@@         J  AX
)@@G@@   ERR3           . $A NO YES,ERR3  @D@@@@         SZ    A1             AY
)@@G@@. $P INITIALIZE VALUE   @A@@@@         SZ    A2             .     @E@@@@AZ
)@@G@@         LXI,U X5,1           . $P SET PTRS FOR TRANSFER    @A@@@@      BA
)@@G@@   LXI,U X6,1           .     @E@@@@PC1      EX    CHAR,X6        . $P GBB
)@@G@@ET NEXT CHAR OF ITEM    @E@@@@         LDSL  A1,6           . $P SHIFT PBC
)@@G@@REVIOUS VALUE     @E@@@@         A     A2,A0          . $P ADD THIS CHARBD
)@@G@@ TO VALUE   @E@@@@         TLEM,U X6,6          . $T IS CHAR OFFSET < 6 BE
)@@G@@?     @A@@@@         J     $+2            .     @D@@@@         LXM,U X6,BF
)@@G@@1           . $P SET OFFSET TO 1    @C@@@@         JGD   A10,PC1        BG
)@@G@@. $T MORE CHARS ? @C@@@@                              . $A NO YES,PC1   BH
)@@G@@@E@@@@         L     A0,(0606060606060) . $P INITIALIZE FD BUFFER @A@@@@BI
)@@G@@         S     A0,CBUF        .     @A@@@@         S     A0,CBUF+1      BJ
)@@G@@.     @A@@@@         S     A0,CBUF+2      .     @E@@@@         L     X4,BK
)@@G@@(-1,CBUF+2) . $P SET CONVERT BUFF PTR     @C@@@@         DI    A1,(10000BL
)@@G@@00000) . $P SPLIT VALUE @C@@@@         L     R6,A1          . $P SAVE TOBM
)@@G@@P PART@D@@@@         L     A1,A2          . $P SET FOR CONVERT    @A@@@@BN
)@@G@@         L,U   A3,5           .     @G@@@@PC2      JZ    A1,PC3         BO
)@@G@@. $T NONZERO VALUE REMAINING THIS PART ?  @C@@@@                        BP
)@@G@@      . $A YES NO,PC3   @D@@@@         L     A2,A1          . $P GET NEXBQ
)@@G@@T DIGIT     @A@@@@         SZ    A1             .     @A@@@@         DI,BR
)@@G@@U  A1,10          .     @D@@@@         A,U   A2,060         . $P CONVERTBS
)@@G@@ IT TO FD   @C@@@@         EX    SAVE,A3        . $P SAVE IT      @F@@@@BT
)@@G@@         JGD   A3,PC2         . $T MORE ROOM IN THIS BUFF WORD ?  @E@@@@BU
)@@G@@         L,U   A3,5           . $P SET TO NEXT EARLIER WORD @B@@@@      BV
)@@G@@   J     PC2            . $J PC2    @E@@@@PC3      L     A1,R6          BW
)@@G@@. $P GET TOP HALF OF VALUE    @C@@@@         JZ    A1,PC4         . $T IBX
)@@G@@S IT ZERO ? @C@@@@         SZ    R6             . $A NO YES,PC4   @E@@@@BY
)@@G@@         LXM,U X4,CBUF+1      . $P ZERO SAVED TOP HALF VALUE@E@@@@      BZ
)@@G@@   L,U   A3,2           . $P RESET CONVERT BUFF PTR   @B@@@@         J  CA
)@@G@@   PC2            . $J PC2    @A@@@@PC4      L     A0,R4          .     CB
)@@G@@@E@@@@         L,T1  A10,CMPCNV,A0  . $P GET CONVERTED ITEM LENGTH@G@@@@CC
)@@G@@         L,S3  X6,CMPCNV,A0   . $P GET CONVERTED ITEM CHAR OFFSET       CD
)@@G@@@F@@@@         L,H2  X5,CMPCNV,A0   . $P GET CONVERTED ITEM ABS ADDR    CE
)@@G@@@D@@@@         L,U   A11,2          . $P SET TYPE TO PIC 9  @F@@@@PICX  CF
)@@G@@   A     X7,A14         . $P SET PKET PTR TO NEXT ENTRY     @E@@@@      CG
)@@G@@   JGD   A10,$+2        . $T IS ITEM LENGTH ZERO ?    @C@@@@         J  CH
)@@G@@   ERR3           . $A NO YES,ERR3  @E@@@@         LXI,U X5,1           CI
)@@G@@. $P SET PTRS FOR PRINT       @A@@@@         LXI,U X6,1           .     CJ
)@@G@@@E@@@@         SZ    A9             . $P SET ZERO-SUPPRESS FLAG   @C@@@@CK
)@@G@@         TNE,U A11,1          . $T IS TYPE PIC 9@E@@@@         L,U   A9,CL
)@@G@@1           . $P SET ZERO-SUPPRESS FLAG   @E@@@@         E$DITR PVPKT   CM
)@@G@@      . $P REOPEN OUTPUT BUFFER     @E@@@@PX1      E$COLN               CN
)@@G@@. $P GET CURRENT COLUMN NUMBER@E@@@@         TG    A0,A6          . $T MCO
)@@G@@ORE ROOM ON THIS LINE   @G@@@@         SLJ   PRTLN          . $W PRTLN -CP
)@@G@@ PRINT LN & GET NEW LINE      @C@@@@         EX    CHAR,X6        . $P GCQ
)@@G@@ET NEXT CHAR@E@@@@         JNZ   A15,PDISP      . $T IS THIS DISPLAY COMCR
)@@G@@MAND  @C@@@@                              . $A NO YES,PDISP @E@@@@      CS
)@@G@@   JNZ   A9,PX2         . $T IS ZERO-SUP FLAG SET     @C@@@@            CT
)@@G@@                  . $A YES NO,PX2   @D@@@@         L,U   A9,1           CU
)@@G@@. $P RESET Z-S FLAG     @D@@@@         TE,U  A0,060         . $T IS CHARCV
)@@G@@ A ZERO ?   @C@@@@         J     PX2            . $A YES NO,PX2   @C@@@@CW
)@@G@@         SZ    A9             . $P SET Z-S FLAG @F@@@@         TZ    A10CX
)@@G@@            . $T IS THIS LAST CHAR OF ITEM ?    @C@@@@         L,U   A0,CY
)@@G@@5           . $P SUPPRESS ZERO@E@@@@PX2      LMJ   X11,ECHAR$     . $P PCZ
)@@G@@UT CHAR INTO PRT LINE   @E@@@@PX3      TLEM,U X6,6          . $T IS CHARDA
)@@G@@ OFFSET < 6 ?     @A@@@@         J     $+2            .     @E@@@@      DB
)@@G@@   LXM,U X6,1           . $P SET CHAR OFFSET TO 1     @E@@@@         JGDDC
)@@G@@   A10,PX1        . $T MORE CHAR IN ITEM ?      @E@@@@         E$DITX   DD
)@@G@@            . $P CLOSE OUTPUT BUFFER      @D@@@@         J     PRT2     DE
)@@G@@      . $A YES,PX1 NO,PRT2    @D@@@@PICSET   L     A10,0,A1       . $P GDF
)@@G@@ET SET PTR VALUE  @E@@@@         E$DIT SPKT           . $P CONVERT PTR TDG
)@@G@@O FD OCTAL  @A@@@@         L     A0,A10         .     @A@@@@         L,UDH
)@@G@@   A1,12          .     @A@@@@         LMJ   X11,EOCTF$     .     @A@@@@DI
)@@G@@         E$DITX               .     @E@@@@         L,U   X5,SBUF        DJ
)@@G@@. $P SET ADDR OF PTR VALUE    @E@@@@         L,U   X6,1           . $P SDK
)@@G@@ET CHAR OFFSET TO 1     @E@@@@         L,U   A10,12         . $P SET CHADL
)@@G@@R LENGTH TO 12    @D@@@@         L,U   A11,1          . $P SET TYPE TO PDM
)@@G@@IC X  @B@@@@         J     PICX           . $J PICX   @[@@@@ .    @A@@@@DN
)@@G@@PDISP    L,U   A1,2           .     @G@@@@         LMJ   X11,EOCTF$     DO
)@@G@@. $P PUT OCTAL IMAGE OF CHAR IN O BUF     @B@@@@         J     PX3      DP
)@@G@@      . $J PX3    @[@@@@ .    @A@@@@PRTEND   E$DITR PVPKT         .     DQ
)@@G@@@E@@@@         SLJ   PRTLN          . $W PRTLN - PRINT LAST LINE  @A@@@@DR
)@@G@@         E$DITX               .     @A@@@@         J     *RETURN        DS
)@@G@@. $E  @[@@@@ .    @B@@@@PRTLN    +     0              . $H PRTLN  @E@@@@DT
)@@G@@         E$DITX               . $P CLOSE OUTPUT LINE BUFFER @E@@@@      DU
)@@G@@   P$RINT (PF 1,22,PVBUF)  . $P PRINT OUTPUT LINE     @E@@@[         TNZDV
)@@G@@   CONPRT         . $T IS THIS MONITOR COMMAND  @C@@@[         J     PRTDW
)@@G@@LN2         . $A YES NO,PRTLN2@E@#@[         TNZ   POPT           . $T IDX
)@@G@@S THIS BATCH MODE       @E@@@#         TNZ   MOPT           . $T IS THISDY
)@@G@@ MONITOR MODE     @C@@@[         J     PRTLN2         . $A YES NO,PRTLN2DZ
)@@G@@@D@^@#         JK    MKEY,$+2       . $T IS JUMP KEY SET    @C@^@#      EA
)@@G@@   J     PRTLN2         . $A YES NO,PRTLN2@F@@@[         C$OM  COMPKT   EB
)@@G@@      . $P SEND LINE TO SYSTEM CONSOLE    @G@[@@         E$DIT PVPKT    EC
)@@G@@      . $P OPEN NEW OUTPUT LINE BUFFER          @F@@@[PRTLN2   E$DIT PVPED
)@@G@@KT          . $P OPEN NEW OUTPUT LINE BUFFER    @A@@@@         J     *PREE
)@@G@@TLN         . $E  @[@@@@ .    @A@@@@ICHAR    NOP                  .     EF
)@@G@@@A@@@@         L,S1  A10,0,A1       .     @A@@@@         L,S2  A10,0,A1 EG
)@@G@@      .     @A@@@@         L,S3  A10,0,A1       .     @A@@@@         L,SEH
)@@G@@4  A10,0,A1       .     @A@@@@         L,S5  A10,0,A1       .     @A@@@@EI
)@@G@@         L,S6  A10,0,*A1      .     @[@@@@ .    @A@@@@CHAR     NOP      EJ
)@@G@@            .     @A@@@@         L,S1  A0,0,X5        .     @A@@@@      EK
)@@G@@   L,S2  A0,0,X5        .     @A@@@@         L,S3  A0,0,X5        .     EL
)@@G@@@A@@@@         L,S4  A0,0,X5        .     @A@@@@         L,S5  A0,0,X5  EM
)@@G@@      .     @A@@@@         L,S6  A0,0,*X5       .     @[@@@@ .    @A@@@@EN
)@@G@@SAVE     S,S1  A2,0,*X4       .     @A@@@@         S,S2  A2,0,X4        EO
)@@G@@.     @A@@@@         S,S3  A2,0,X4        .     @A@@@@         S,S4  A2,EP
)@@G@@0,X4        .     @A@@@@         S,S5  A2,0,X4        .     @A@@@@      EQ
)@@G@@   S,S6  A2,0,X4        .     @[@@@@ .    @]@@@@$(4).       @A@@@@RETURNER
)@@G@@   +     0              .     @A@@@[CONPRT   +     0              .     ES
)@@G@@@A@@@[COMPKT   C$OMPK,0  50,PVBUF   .     @A@@@@PKET     +     0        ET
)@@G@@      .     @A@@@@CBUF     RES   3              .     @[@@@@ .    @A@@@@EU
)@@G@@CMPCNV   +     0               .    @A@@@@         +     (PF 1,6,CBUF+2)EV
)@@G@@ .    @A@@@@         +     (PF 3,4,CBUF+2) .    @A@@@@         +     (PFEW
)@@G@@ 5,2,CBUF+2) .    @A@@@@         +     (PF 6,1,CBUF+2) .    @A@@@@      EX
)@@G@@   +     (PF 8,5,CBUF+1) .    @A@@@@         +     (PF 10,3,CBUF+1) .   EY
)@@G@@@A@@@@         +     (PF 12,1,CBUF+1) .   @A@@@@         +     (PF 13,6,EZ
)@@G@@CBUF) .     @A@@@@         +     (PF 15,4,CBUF) .     @A@@@@         +  FA
)@@G@@   (PF 17,2,CBUF) .     @A@@@@         +     (PF 18,1,CBUF) .     @]@@@@FB
)@@G@@$(3).       @B@@@@GETSYM*  +     0              . $H GET    @E@@@@      FC
)@@G@@   TZ,H1 0,X7           . $T IS ENTRY A LITERAL       @C@@@@         J  FD
)@@G@@   VAR            . $A YES NO,VAR   @E@@@@         L,XH2 A0,0,X7        FE
)@@G@@. $P GET LITERAL LENGTH       @G@@@@                              . $T IFF
)@@G@@S LENGTH ZERO (BAD VAR NAME) ?      @E@@@@         JN    A0,NUM         FG
)@@G@@. $T IS ENTRY A NUMERIC       @C@@@@                              . $A NFH
)@@G@@O YES,NUM   @C@@@@         JZ    A0,UNDEF       . $A NO YES,UNDEF @D@@@@FI
)@@G@@         L,U   A3,1           . $P SET TYPE TO PIC X  @E@@@@         L,UFJ
)@@G@@   A2,1           . $P SET CHAR OFFSET TO 1     @E@@@@         L     A1,FK
)@@G@@X7          . $P SET WORD ADDR OF LITERAL @A@@@@         A,U   A1,1     FL
)@@G@@      .     @G@@@@         SZ    A4             . $P CALCULATE # WORDS IFM
)@@G@@N PKET ENTRY      @A@@@@         L     A5,A0          .     @A@@@@      FN
)@@G@@   AN,U  A5,1           .     @A@@@@         DI,U  A4,6           .     FO
)@@G@@@A@@@@         A,U   A4,2           .     @E@@@@         L     A14,A4   FP
)@@G@@      . $P SAVE AS PKET ENTRY LENGTH@C@@@@         J     *GETSYM        FQ
)@@G@@. $E RETURN       @[@@@@ .    @B@@@@NUM                           . $H NFR
)@@G@@UM    @E@@@@         L,T3  A0,0,X7        . $P GET NUMERIC LENGTH       FS
)@@G@@@D@@@@         L,U   A3,2           . $P SET TYPE TO PIC 9  @E@@@@      FT
)@@G@@   L,U   A2,1           . $P SET CHAR OFFSET TO 1     @E@@@@         L  FU
)@@G@@   A1,X7          . $P SET WORD ADDR OF LITERAL @A@@@@         A,U   A1,FV
)@@G@@1           .     @G@@@@         SZ    A4             . $P CALCULATE # WFW
)@@G@@ORDS IN PKET ENTRY      @A@@@@         L     A5,A0          .     @A@@@@FX
)@@G@@         AN,U  A5,1           .     @A@@@@         DI,U  A4,6           FY
)@@G@@.     @A@@@@         A,U   A4,2           .     @E@@@@         L     A14FZ
)@@G@@,A4         . $P SAVE AS PKET ENTRY LENGTH@E@@@@         L,S1  A4,0,A1  GA
)@@G@@      . $P GET FIRST CHAR OF NUMBER @E@@@@         TNE,U A4,060         GB
)@@G@@. $T IS FIRST CHAR A ZERO     @C@@@@         J     N1             . $A NGC
)@@G@@O YES,N1    @E@@@@         SLJ   GETNUM         . $W GETNUM - GET BIANRYGD
)@@G@@ VALUE@B@@@@         J     N2             . $J N2     @G@@@@N1       SLJGE
)@@G@@   GETONUM        . $W GETONUM - GET BINARY VALUE, OCTAL    @C@@@@N2    GF
)@@G@@   S     A0,NBUF        . $P SAVE VALUE   @D@@@@         L,U   A0,6     GG
)@@G@@      . $P SET LENGTH TO 6    @D@@@@         L,U   A1,NBUF        . $P SGH
)@@G@@ET VALUE ADDR     @E@@@@         L,U   A2,1           . $P SET CHAR OFFSGI
)@@G@@ET TO 1     @E@@@@         L,U   A3,3           . $P SET TYPE TO PIC 9 CGJ
)@@G@@OMP   @C@@@@         J     *GETSYM        . $E RETURN       @[@@@@ .    GK
)@@G@@@B@@@@VAR.                          . $H VAR    @E@@@@         TZ,H2 0,XGL
)@@G@@7           . $T IS AN INDEX GIVEN ?      @C@@@@         J     V1       GM
)@@G@@      . $A NO YES,V1    @E@@@@         L,U   A14,1          . $P SET PKEGN
)@@G@@T ENTRY LENGTH    @E@@@@         SZ    A0             . $P SET INDEX VALGO
)@@G@@UE TO 0     @B@@@@         J     V3             . $J V3     @E@@@@V1    GP
)@@G@@   L,XH2 A0,0,X7        . $P GET INDEX ADDR VALUE     @E@@@@         TN GQ
)@@G@@   A0             . $T IS INDEX VARIABLE GIVEN ?@C@@@@         J     V2 GR
)@@G@@            . $A NO YES,V2    @E@@@@         L,S4  A0,0,X7        . $P GGS
)@@G@@ET INDEX FLAG FIELD     @E@@@@         TE,U  A0,040         . $T IS INDEGT
)@@G@@X VALUE GIVEN     @C@@@@         J     SET            . $A YES NO,SET   GU
)@@G@@@D@@@@         L     A0,1,X7        . $P GET INDEX VALUE    @A@@@@      GV
)@@G@@   L     A1,BLANKS      .     @G@@@@         SLJ   FD$BIN         . $W FGW
)@@G@@D$BIN - CONVERT INDEX TO BINARY     @E@@@@         TZ    STATUS         GX
)@@G@@. $T WAS CONVERT SUCCESSFUL   @C@@@@         J     ERR24          . $A YGY
)@@G@@ES NO,ERR24 @E@@@@         L,U   A14,2          . $P SET PKET ENTRY LENGGZ
)@@G@@TH    @B@@@@         J     V3             . $J V3     @E@@@@V2       L  HA
)@@G@@   X10,A0         . $P SET SYMBOL TBL ADDR      @A@@@@         SZ    A0 HB
)@@G@@            .     @F@@@@         SLJ   GETVAR         . $W GETVAR - GET HC
)@@G@@ADDR OF INDEX     @C@@@@         TP    A1             . $T INDEX FOUND ?HD
)@@G@@@C@@@@         J     ERR1           . $A YES NO,ERR1  @E@@@@         L,UHE
)@@G@@   A14,1          . $P SET PKET ENTRY LENGTH    @C@@@@         TNE,U A3,HF
)@@G@@1           . $T IS TYPE PIC X@C@@@@         J     ERR17          . $A NHG
)@@G@@O YES,ERR17 @D@@@@         JZ    A0,ERR12       . $T IS INDEX LENGTH 0  HH
)@@G@@@C@@@@                              . $A NO YES,ERR12 @F@@@@         SLJHI
)@@G@@   GETNUM         . $W GETNUM - GET VALUE OF INDEX    @F@@@@V3       L,HHJ
)@@G@@1  X10,0,X7       . $P GET SYMBOL TBL ADDR FROM PKET  @E@@@@         SLJHK
)@@G@@   GETVAR         . $W GETVAR - GET ADDR OF ITEM@D@@@@         TP    A1 HL
)@@G@@            . $T VARIABLE FOUND ?   @C@@@@         J     ERR2           HM
)@@G@@. $A YES NO,ERR2  @C@@@@         JZ    A0,ERR3        . $T IS LENGTH 0  HN
)@@G@@@C@@@@                              . $A NO YES,ERR3  @C@@@@         J  HO
)@@G@@   *GETSYM        . $E RETURN       @[@@@@ .    @B@@@@SET.              HP
)@@G@@            . $H SET    @E@@@@         AND,U A0,7           . $P GET LINHQ
)@@G@@K TYPE CODE       @E@@@@         TG,U  A1,4           . $T IS THIS RESERHR
)@@G@@VED WORD    @C@@@@         J     RSVWD          . $A NO YES,RSVWD @D@@@@HS
)@@G@@         L     X10,A1         . $P SAVE LINK TYPE     @E@@@@         L,HHT
)@@G@@1  A0,0,X7        . $P GET SET SYM TBL ADDR     @E@@@@         L,S3  A2,HU
)@@G@@0,A0        . $P GET MODE OF SET (OLD/NEW)@C@@@@         L,T1  A0,1,A0  HV
)@@G@@      . $P GET SET CODE @A@@@@         LSSL  A0,24          .     @A@@@@HW
)@@G@@         SSL   A0,24          .     @E@@@@         L,H1  A1,1,X7        HX
)@@G@@. $P GET RECORD SYM TBL ADDR  @D@@@@         JZ    A1,SET2        . $T IHY
)@@G@@S RECORD GIVEN    @C@@@@                              . $A YES NO,SET2  HZ
)@@G@@@D@@@@         TE,U  A2,1           . $T WAS SET MODE OLD   @F@@@@      IA
)@@G@@   L,S3  A2,0,A1        . $P GET MODE OF RECD (OLD/NEW)     @E@@@@      IB
)@@G@@   L,T1  A1,1,A1        . $P GET RECORD SEQ NUMBER    @A@@@@         AN,IC
)@@G@@U  A1,1           .     @E@@@@         TG,H1 A1,TT1         . $T IS SEQ ID
)@@G@@NUMBER VALID      @C@@@@         J     UNDEF          . $A YES NO,UNDEF IE
)@@G@@@E@@@@         A,H2  A1,TT1         . $P GET SEQ TBL ENTRY ADDR   @D@@@@IF
)@@G@@         L,T1  A1,0,A1        . $P GET RECORD CODE    @A@@@@         LSSIG
)@@G@@L  A1,24          .     @A@@@@         SSL   A1,24          .     @E@@@@IH
)@@G@@SET2     SLJ   GETSET         . $W GETSET - GET SET POINTERS@E@@@@      II
)@@G@@   JN    A1,SETERR      . $T SET POINTERS FOUND       @C@@@@            IJ
)@@G@@                  . $A YES NO,SETERR@E@@@@SET1     EX    GETPTR,X10     IK
)@@G@@. $P GET PROPER SET PTR       @A@@@@         S     A4,SBUF        .     IL
)@@G@@@E@@@@         L,U   A1,SBUF        . $P SET ADDR OF PTR VALUE    @E@@@@IM
)@@G@@         L,U   A2,1           . $P SET CHAR OFFSET TO 1     @E@@@@      IN
)@@G@@   L,U   A0,6           . $P SET CHAR LENGTH TO 6     @E@@@@         L,UIO
)@@G@@   A3,4           . $P SET TYPE TO SET PTR      @E@@@@         L,U   A14IP
)@@G@@,2          . $P SET LENGTH OF PKET ENTRY @C@@@@         J     *GETSYM  IQ
)@@G@@      . $E RETURN       @[@@@@ .    @A@@@@GETPTR   NOP                  IR
)@@G@@.     @A@@@@         L     A4,A2          .     @A@@@@         L     A4,IS
)@@G@@A3          .     @A@@@@         NOP                  .     @[@@@@ .    IT
)@@G@@@A@@@@RSVWD    L     X10,X7         .     @E@@@@         SLJ   GETRSV   IU
)@@G@@      . $W GETRSV - GET RES WRD LOC @E@@@@         TZ    STATUS         IV
)@@G@@. $T WAS THERE ERROR IN GETRSV@C@@@@         J     ERR24          . $A NIW
)@@G@@O YES,ERR24 @D@@@@         JN    A1,RSVERR      . $T WAS RES WRD FOUND  IX
)@@G@@@C@@@@                              . $A YES NO,RSVERR@E@@@@         L  IY
)@@G@@   A14,A4         . $P SAVE PKET ENTRY LENGTH   @F@@@@         TNE,U A3,IZ
)@@G@@3           . $T IS TYPE PIC X (RECORD-NAME)    @G@@@@         L,U   A3,JA
)@@G@@4           . $P SET TYPE TO SETPTR TO PRT IN OCTAL   @C@@@@         J  JB
)@@G@@   *GETSYM        . $E RETURN       @[@@@@ .    @C@@@@GETONUM  +     0  JC
)@@G@@            . $H GETONUM      @E@@@@         L     R1,A0          . $P SJD
)@@G@@AVE CHAR LENGTH OF NUM  @E@@@@         SZ    A0             . $P INITIALJE
)@@G@@IZE RETURN VALUE  @E@@@@         JGD   R1,$+2         . $T IS CHAR LENGTJF
)@@G@@H > 0       @A@@@@         J     *GETONUM       . $E  @E@@@@GON1     L  JG
)@@G@@   A3,0,A1        . $P GET NEXT WORD OF NUMBER  @E@@@@         A,U   A1,JH
)@@G@@1           . $P SET INDEX TO NEXT WORD   @E@@@@         L,U   R2,5     JI
)@@G@@      . $P SET CHAR OF WORD COUNTER @A@@@@GON2     SZ    A2             JJ
)@@G@@.     @E@@@@         LDSL  A2,3           . $P GET TOP HALF OF NEXT CHARJK
)@@G@@@F@@@@         TE,U  A2,6           . $T IS TOP HALF 06 (VALID OCTAL)   JL
)@@G@@@C@@@@         J     ERR5           . $A YES NO,ERR5  @E@@@@         SZ JM
)@@G@@   A2             . $P CLEAR TOP HALF OF CHAR   @G@@@@         LDSL  A2,JN
)@@G@@3           . $P GET BOTTOM HALF OF CHAR (VALUE)      @F@@@@         LSSJO
)@@G@@L  A0,3           . $P MULTIPLY PREVIOUS RESULT BY 8  @F@@@@         A  JP
)@@G@@   A0,A2          . $P ADD THIS CHAR VALUE TO RESULT  @E@@@@         JGDJQ
)@@G@@   R1,$+2         . $T MORE CHAR TO BE CONVERTED@A@@@@         J     *GEJR
)@@G@@TONUM       . $E  @E@@@@         JGD   R2,GON2        . $T MORE CHAR IN JS
)@@G@@THIS WORD   @D@@@@         J     GON1           . $A YES,GON2 NO,GON1   JT
)@@G@@@[@@@@ .    @D@@@@UNDEF    L     A1,(01000000)  . $P SET ERROR CODE     JU
)@@G@@@B@@@@         J     ERR2           . $J ERR2   @[@@@@ .    @E@@@@SETERRJV
)@@G@@   LSSL  A1,1           . $P GET GETSET ERROR CODE    @A@@@@         SSLJW
)@@G@@   A1,19          .     @E@@@@         L     A1,ERRCDE,A1   . $P CONVERTJX
)@@G@@ TO PV ERR CDE    @E@@@@         JN    A1,SERR1       . $T IS IT MANUAL JY
)@@G@@SET ERROR   @C@@@@                              . $A NO YES,SERR1 @D@@@@JZ
)@@G@@         LSSL  A1,18          . $P FORMAT ERROR CODE  @B@@@@         J  KA
)@@G@@   ERR2           . $J ERR2   @E@@@@SERR1    SZ    A2             . $P SKB
)@@G@@ET ALL PTR VALUES TO 0  @A@@@@         SZ    A3             .     @A@@@@KC
)@@G@@         SZ    A4             .     @B@@@@         J     SET1           KD
)@@G@@. $J SET1   @[@@@@ .    @E@@@@RSVERR   LSSL  A1,1           . $P GET GETKE
)@@G@@RSV ERROR CODE    @A@@@@         SSL   A1,19          .     @E@@@@      KF
)@@G@@   L     A4,RERCDE,A1   . $P CONVERT TO PV ERR CDE    @B@@@@         J  KG
)@@G@@   ERR4           . $J ERR4   @[@@@@ .    @D@@@@ERR1     LSSL  A1,1     KH
)@@G@@      . $P GET ERROR CODE     @A@@@@         SSL   A1,19          .     KI
)@@G@@@A@@@@         L     A4,A1          .     @E@@@@         E$DIT PVPKT    KJ
)@@G@@      . $P PRINT INDEX ERROR MESSAGE@A@@@@         E$COPY 29,EM1        KK
)@@G@@.     @B@@@@         J     ERR20          . $J ERR20  @E@@@@ERR12    E$DKL
)@@G@@IT PVPKT          . $P PRINT INDEX ERROR MESSAGE@A@@@@         E$COPY 29KM
)@@G@@,EM1        .     @B@@@@         J     ERR30          . $J ERR30  @E@@@@KN
)@@G@@ERR17    E$DIT PVPKT          . $P PRINT INDEX ERROR MESSAGE@A@@@@      KO
)@@G@@   E$COPY 29,EM1        .     @A@@@@         L     A0,A13         .     KP
)@@G@@@A@@@@         LMJ   X11,EDECV$     .     @A@@@@         E$COPY 15,EM17 KQ
)@@G@@      .     @A@@@@         J     ERR23          .     @[@@@@ .    @D@@@@KR
)@@G@@ERR2     LSSL  A1,1           . $P GET ERROR CODE     @A@@@@         SSLKS
)@@G@@   A1,19          .     @A@@@@         L     A4,A1          .     @F@@@@KT
)@@G@@         E$DIT PVPKT          . $P SET UP PROPER ERROR MESSAGE    @A@@@@KU
)@@G@@         E$COPY 20,EM2        .     @A@@@@ERR20    L     A0,A13         KV
)@@G@@.     @A@@@@         LMJ   X11,EDECV$     .     @A@@@@         TNE,U A4,KW
)@@G@@3           .     @A@@@@         J     ERR225         .     @A@@@@      KX
)@@G@@   TNE,U A4,2           .     @A@@@@         J     ERR22          .     KY
)@@G@@@A@@@@         TNE,U A4,1           .     @A@@@@         J     ERR21    KZ
)@@G@@      .     @A@@@@         E$COPY 31,EM20       .     @A@@@@         J  LA
)@@G@@   ERR23          .     @A@@@@ERR21    E$COPY 13,EM21       .     @A@@@@LB
)@@G@@         J     ERR23          .     @A@@@@ERR22    E$COPY 24,EM22       LC
)@@G@@.     @A@@@@         J     ERR23          .     @A@@@@ERR225   E$COPY 41LD
)@@G@@,EM23       .     @A@@@@ERR23    E$DITX                .    @D@@@@      LE
)@@G@@   P$RINT (PF 1,22,PVBUF) . $P PRINT MESSAGE    @E@@@@ERR24    L     A1,LF
)@@G@@(-1)        . $P SET ERROR FLAG RETURN    @A@@@@         J     *GETSYM  LG
)@@G@@      . $E  @[@@@@ .    @E@@@@ERR3     E$DIT PVPKT          . $P PRINT ELH
)@@G@@RROR MESSAGE      @A@@@@         E$COPY 20,EM2        .     @A@@@@ERR30 LI
)@@G@@   L     A0,A13         .     @A@@@@         LMJ   X11,EDECV$     .     LJ
)@@G@@@A@@@@         E$COPY 16,EM3        .     @B@@@@         J     ERR23    LK
)@@G@@      . $J ERR23  @F@@@@ERR4     E$DIT PVPKT          . $P SET UP PROPERLL
)@@G@@ ERROR MESSAGE    @A@@@@         E$COPY 37,EM4        .     @B@@@@      LM
)@@G@@   J     ERR20          . $J ERR20  @E@@@@ERR5     E$DIT PVPKT          LN
)@@G@@. $P PRINT ERROR MESSAGE      @A@@@@         E$COPY 20,EM2        .     LO
)@@G@@@A@@@@         L     A0,A13         .     @A@@@@         LMJ   X11,EDECVLP
)@@G@@$     .     @A@@@@         E$COPY 20,EM5        .     @B@@@@         J  LQ
)@@G@@   ERR23          . $J ERR23  @[@@@@ .    @]@@@@$(4).       @A@@@@PVPKT LR
)@@G@@   E$PKT 22,PVBUF       .     @A@@@@PVBUF    RES   22             .     LS
)@@G@@@A@@@@SPKT     E$PKT 3,SBUF         .     @A@@@@SBUF     RES   3        LT
)@@G@@      .     @A@@@@NBUF     +     0              .     @A@@@@BLANKS   '  LU
)@@G@@    '             .     @[@@@@ .    @A@@@@ERRCDE   +     0              LV
)@@G@@.     @A@@@@         +     0              .     @A@@@@         +     0  LW
)@@G@@            .     @A@@@@         +     1              .     @A@@@@      LX
)@@G@@   +     1              .     @A@@@@         +     1              .     LY
)@@G@@@A@@@@         +     -1             .     @A@@@@         +     1        LZ
)@@G@@      .     @A@@@@         +     0              .     @[@@@@ .    @A@@@@MA
)@@G@@RERCDE   +     0              .     @A@@@@         +     0              MB
)@@G@@.     @A@@@@         +     1              .     @A@@@@         +     1  MC
)@@G@@            .     @A@@@@         +     1              .     @[@@@@ .    MD
)@@G@@@C@@@@EM1      '***ERROR - INDEX OF DATANAME ' .      @ @@@@EM17     ' IME
)@@G@@S NOT NUMERIC' .  @A@@@@EM2      '***ERROR - DATANAME ' .   @C@@@@EM20  MF
)@@G@@   ' HAS NO VALUE CURRENTLY DEFINED' .    @ @@@@EM21     ' IS UNDEFINED'MG
)@@G@@ .    @B@@@@EM22     ' HAS ILLEGAL INDEX VALUE'  .    @E@@@@EM23     ' HMH
)@@G@@AS INDEX BEYOND RANGE CURRENTLY DEFINED' .      @A@@@@EM3      ' HAS ZERMI
)@@G@@O LENGTH'  .      @D@@@@EM4      '***ERROR - RESERVED WORD OF DATANAME 'MJ
)@@G@@ .    @A@@@@EM5      ' IS BAD OCTAL STRING'  .  @[@@@@ .    @#@@@@      MK
)@@G@@   END .    ___R (VALUE)      @F@@@@         LSSL  A0,3           . $P MML
)@@G@@*[@@@@*SDFF*@^@@@@          AXR$          @]@@@@$(1)        @]@@@@ .    MM
)@@G@@      @]@@@@TF$IB* .    @C@@@@          SX,H2     X11,RETURN     . $H TFMN
)@@G@@$IB   @G@@@@          SLJ       FRSTED         . $P FLUSH SQW INDEX BUF MO
)@@G@@ON 1ST EDIT @E@[@@          LA,H1     A0,0,X10       . $P RECORD NUMBER MP
)@@G@@TO A0 @E@@@[          LA        A0,0,X10       . $P RECORD NUMBER TO A0 MQ
)@@G@@@E@@@@          TNE,U     A0,0           . $T IS RECORD NUMBER = 0@E@@@@MR
)@@G@@          J         IBERR1         . $A YES,IBERR1 NO       @G@@@@      MS
)@@G@@    LA        A2,RECNMC      . $P CURRENT NUMBER OF RECORDS TO A2 @G@@@@MT
)@@G@@          TLE       A2,A0          . $  RCD# <= CUR # OF RECORDS        MU
)@@G@@@E@@@@          ER        ERR$           . $  NO,EXIT YES         @E@@@@MV
)@@G@@          ANA,U     A0,1           . $P DECREMENT RCD#      @G@[@@      MW
)@@G@@    SA,H1     A0,0,X10       . $P NEW RECORD NUMBER TO PACKET     @G@@@[MX
)@@G@@          SA        A0,0,X10       . $P NEW RECORD NUMBER TO PACKET     MY
)@@G@@@G@@@@          LMJ       X11,TF$IA      . $W TF$IA CALL TEMP FILE INST MZ
)@@G@@AFTER @A@[@@          LA,H1     A1,0,X10       .@A@@@[          LA      NA
)@@G@@  A1,0,X10       .@A@@@@          AA,U      A1,1           .@G@[@@      NB
)@@G@@    SA,H1     A1,0,X10       . $P RESTORE RCD   NUMBER TO PACKET  @G@@@[NC
)@@G@@          SA        A1,0,X10       . $P RESTORE RCD   NUMBER TO PACKET  ND
)@@G@@@C@@@@          J         *RETURN        . $E EXIT    @]@@@@IBERR1 .    NE
)@@G@@@G@@@@          LA,U      A1,1              . $P RETURN NONZERO STATUS  NF
)@@G@@      @C@@@@          SA,T1     A1,2,X10          .         @C@@@@      NG
)@@G@@    J         *RETURN           . $E EXIT @]@@@@$(2)        @^@@@@RETURNNH
)@@G@@    +         0   @^@@@@          END           ___@@@^@)^@)^@)^@)^@)ET[NI
)@@G@@ -CAC)^@)^@)CC1 )0 -SAC0*[@@@@*SDFF*@[@@@@$(1)  @#@@@@         AXR$     NJ
)@@G@@@C@@@@ . DELETE FCN     OF TEMP FILE ACCESS METHOD    @[@@@@ .    @]@@@@NK
)@@G@@TF$DLT* .   @A@@@@          SX,H2     X11,RETURN      @I@@@@          SLNL
)@@G@@J       FRSTED            . $P FLUSH INDEX BUF IF THIS IS FRST EDIT     NM
)@@G@@@D@[@@          LA,H1     A2,1,X10       . $P RCD#1 TO A2   @D@@@[      NN
)@@G@@    LA        A2,3,X10       . $P RCD#3 TO A2   @D@[@@          LA,H2   NO
)@@G@@  A3,1,X10       . $P RCD#2 TO A3   @D@@@[          LA        A3,4,X10  NP
)@@G@@     . $P RCD#4 TO A3   @G@@@@          LA        A4,RECNMC      . $P CUNQ
)@@G@@RREN # OF RECORDS TO A4       @D@[@@          TG,U      A2,1           .NR
)@@G@@ $T RCD#1 < 1     @D@@@[          TG,U      A2,1           . $T RCD#3 < NS
)@@G@@1     @E@@@@          J         DLTGT1         . $A NO,DLTGT1 YES,DLTER1NT
)@@G@@@A@@@@          J         DLTER1         .@]@@@@DLTGT1 .    @G@[@@      NU
)@@G@@    TLE       A4,A2          . $T RCD#1 <= CURRENT # OF RECORDS   @G@@@[NV
)@@G@@          TLE       A4,A2          . $T RCD#3 <= CURRENT # OF RECORDS   NW
)@@G@@@E@@@@          J         DLTER1         . $A NO,DLTER1 YES       @E@[@@NX
)@@G@@          TLE       A3,A2          . $T RCD#1 <= RCD#2      @E@@@[      NY
)@@G@@    TLE       A3,A2          . $T RCD#3 <= RCD#4      @E@@@@          J NZ
)@@G@@        DLTER1         . $A NO,DLTER1 YES       @G@[@@          TG      OA
)@@G@@  A4,A3          . $T RCD#2 > CURRENT # OF RECORDS    @G@@@[          TGOB
)@@G@@        A4,A3          . $T RCD#4 > CURRENT # OF RECORDS    @E@@@@      OC
)@@G@@    J         DLTGT2         . $A NO,DLTGT2 YES       @G@[@@          LAOD
)@@G@@        A3,A4          . $P REPLACE RCD#2 BY CURRENT NUMBER @G@@@[      OE
)@@G@@    LA        A3,A4          . $P REPLACE RCD#4 BY CURRENT NUMBER @]@@@@OF
)@@G@@DLTGT2 .    @D@[@@          LA        A0,A3          . $P RCD#2 TO A0   OG
)@@G@@@D@@@[          LA        A0,A3          . $P RCD#4 TO A0   @E@[@@      OH
)@@G@@    ANA       A0,A2          . $P RCD#2 - RCD#1 TO A0 @E@@@[          ANOI
)@@G@@A       A0,A2          . $P RCD#4 - RCD#3 TO A0 @G@@@@          AA,U    OJ
)@@G@@  A0,1           . $P # OF RECORDS DELETED TO A0      @G@[@@          SAOK
)@@G@@,H1     A0,0,X10       . $P # OF RECORDS DELETED TO PACKET  @G@@@[      OL
)@@G@@    SA        A0,0,X10       . $P # OF RECORDS DELETED TO PACKET  @G@@@@OM
)@@G@@          SA,H2     A0,DELSAV      . $  # OF REC TO DEL TO H2 OF DELSAV ON
)@@G@@@A@@@@          LA        A0,A2          .@G@[@@          AN,U      A0,1OO
)@@G@@           . $P RCD#1 - 1 TO A0 ( RCD#3 )       @G@@@[          AN,U    OP
)@@G@@  A0,1           . $P RCD#3 - 1 TO A0 ( RCD#2 )       @E@[@@          SAOQ
)@@G@@,H2     A0,0,X10       . $P RCD#3 TO PACKET     @E@@@[          SA      OR
)@@G@@  A0,1,X10       . $P RCD#2 TO PACKET     @F@[@@          SA,H1     A3,DOS
)@@G@@ELSAV      . $  RCD#1 TO H1 OF DELSAV     @F@@@[          SA,H1     A3,DOT
)@@G@@ELSAV      . $  RCD#3 TO H1 OF DELSAV     @]@@@@DLTLP1      @G@@@@      OU
)@@G@@    LA,H1     A3,DELSAV      . $P RECORD # TO BE DELETED TO A3    @G@@@@OV
)@@G@@          TNZ,H2    DELSAV         . $T ARE WE DONE WITH ALL RECORDS    OW
)@@G@@@E@@@@          J         DLTDON         . $A   YES,DELTON NO     @G@@@@OX
)@@G@@          LMJ       X11,LOCINX     . $W LOCINX LOCATE INDEX OF RECORD   OY
)@@G@@@F@@@@                                   . WILL RETURN INDEX IN LCINX   OZ
)@@G@@@E@@@@                                   . ADDR OF INDEX IN LCINXA@G@@@@PA
)@@G@@                                   . INDEX BLK ADDR IN H2 OF INXPKT+1   PB
)@@G@@@F@@@@                                   . INDEX BLK # IN H2 OF INXPKT  PC
)@@G@@@D@@@@          SLJ       INDXUPD           . $W INDXUPD    @G@@@@      PD
)@@G@@    LA,H2     A0,INXPKT+1    . $P ADDRESS OF INDEX BLOCK TO A0    @G@@@@PE
)@@G@@          LA,H2     A1,1,A0        . $P # OF INDICES IN BLOCK TO A1     PF
)@@G@@@B@@@@          LA        A3,A1          . $    @B@@@@          ANA,U   PG
)@@G@@  A3,1           . $    @G@@@@          SA,H2     A3,1,A0        . $P UPPH
)@@G@@DATE # OF INDICES IN BLK      @A@@@@          LA        A2,INXREL      .PI
)@@G@@@A@@@@          AA,U      A2,1           .@G@@@@          TNE       A1,APJ
)@@G@@2          . $T INDEX FOUND WAS LAST INX IN BLK @E@@@@          J       PK
)@@G@@  DLTGT3         . $A YES,DLTBT3 NO       @A@@@@. PREPARE FOR PUSHING INPL
)@@G@@DICES UP    @G@@@@          TLE       A1,A2          . $P INDEX # TO DELPM
)@@G@@ETE <= # OF INXS  @A@@@@          ER        ERR$           .@E@@@@      PN
)@@G@@    LX,H2     X8,LCINXA      . $P ADDR OF INX  TO X8  @B@@@@          AXPO
)@@G@@,U      X8,2              .   @G@@@@          ANA       A1,A2          .PP
)@@G@@ $P # OF INDICES TO MOVE UP TO A1   @B@@@@          MSI,U     A1,2      PQ
)@@G@@     . $    @F@@@@          LR        R1,A1          . $P # OF WORDS TO PR
)@@G@@MOVE TO R1  @G@@@@          LA,U      A2,2           . $P # OF LOCATIONSPS
)@@G@@ BY WHICH TO PUSH @E@@@@          SZ        A0             . $P DIRECTIOPT
)@@G@@N CODE TO A0@G@@@@          SLJ       IPUSH          . $W IPUSH CALL ROUPU
)@@G@@TINE TO PUSH INXES@]@@@@DLTGT3      @G@@@@          LX        X9,RNDSAV PV
)@@G@@     . $P ADDR OF RANDOM TABLE ENTRY TO X9@A@@@@          LA        A0,0PW
)@@G@@,X9        .@A@@@@          ANA,U     A0,1           .@G@@@@          SAPX
)@@G@@        A0,0,X9        . $P UPDATE NUM OF ENTRIES IN RNDTAB @A@@@@      PY
)@@G@@    LA,H1     A0,DELSAV      .@A@@@@          ANA,U     A0,1           .PZ
)@@G@@@G@@@@          SA,H1     A0,DELSAV      . $P UPDATE REC # TO BE DELETEDQA
)@@G@@ NEXT @A@@@@          LA,H2     A0,DELSAV      .@A@@@@          ANA,U   QB
)@@G@@  A0,1           .@G@@@@          SA,H2     A0,DELSAV      . $P UPD  # OQC
)@@G@@F RECORDS TO BE DELETED @C@@@@          J         DLTLP1         . $J DLQD
)@@G@@TLP1  @A@@@@DLTDON . DONE WITH DELETING RECORDS @F@@@@          LA      QE
)@@G@@  A0,RECNMC      . $P UPDATE CUR = OF RECORDS   @A@[@@          ANA,H1  QF
)@@G@@  A0,0,X10       .@A@@@[          ANA       A0,0,X10       .@A@@@@      QG
)@@G@@    SA        A0,RECNMC      .@G@[@@          LA,H2     A0,0,X10       .QH
)@@G@@ $P UPDATE CUR REC = TO RCD=1 - 1   @G@@@[          LA        A0,1,X10  QI
)@@G@@     . $P UPDATE CUR REC = TO RCD=1 - 1   @A@@@@          SA,H2     A0,CQJ
)@@G@@URREC      .@C@@@@          J         *RETURN        . $E EXIT    @ @@@@QK
)@@G@@DLTER1  . ERROR IN DELETE     @E@@@@          LA,U      A0,1           .QL
)@@G@@ $P ERROR STATUS 1 TO A0@F@@@@          SA,T1     A0,2,X10       . $P ERQM
)@@G@@ROR STATUS TO PACKET    @C@@@@          J         *RETURN        . $E EXQN
)@@G@@IT    @[@@@@/     @[@@@@ .    @E@@@@ . SUBROUTINE TO MOVE A BLOCK OF INDQO
)@@G@@ICES UPWARD OR DOWNWARD @D@@@@ . UPON ENTRY  X8 HAS ADDRESS OF BLOCK TO QP
)@@G@@BE MOVED    @G@@@@ .             A2 HAS # OF LOCATIONS BY WHICH BLOCK ISQQ
)@@G@@ TO BE PUSHED     @D@@@@ .             A0 INDICATES DIRECTION  0 = UPWARQR
)@@G@@D     @D@@@@ .                                     1 = DOWNWARD   @C@@@@QS
)@@G@@ .             R1 HAS # OF WORDS IN BLOCK       @[@@@@ .    @]@@@@IPUSH*QT
)@@G@@ .    @^@@@@          +         0   @F@@@@          JZ        A0,IPUSH1 QU
)@@G@@     . $T PUSH UPWARD OR DOWNWARD   @F@@@@                              QV
)@@G@@     . $A UPWARD,IPUSH1 DOWNWARD    @ @@@@          AX        X8,R1     QW
)@@G@@@^@@@@          ANX,U     X8,1@ @@@@          LX        X9,X8     @ @@@@QX
)@@G@@          AX        X9,A2     @ @@@@          LXI,U     X8,-1     @ @@@@QY
)@@G@@          LXI,U     X9,-1     @ @@@@          BT        X9,0,*X8  @ @@@@QZ
)@@G@@          J         *IPUSH    @[@@@@ .    @]@@@@IPUSH1 .    @A@@@@      RA
)@@G@@    LX        X9,X8          .@A@@@@          ANX       X9,A2          .RB
)@@G@@@^@@@@          LXI,U     X8,1@^@@@@          LXI,U     X9,1@ @@@@      RC
)@@G@@    BT        X9,0,*X8  @ @@@@          J         *IPUSH    @[@@@@$(2)  RD
)@@G@@@G@@@@DELSAV    +         0              . H1 HAS 1ST REC = TO BE DELETERE
)@@G@@D     @G@@@@                                   . H2 HAS = OF RECS TO BE RF
)@@G@@DELETED     @A@@@@RETURN    +         0              .@#@@@@          ENRG
)@@G@@D     ___S DELETED TO A0      @G@[@@          SA,H1     A0,0,X10       .RH
)@@G@@*[@@@@*SDFF*@[@@@@ .    @A@@@@ .                  ** PRINTL **    @[@@@@RI
)@@G@@ .    @B@@@@ .        REORG EDITOR WORKER ROUTINE     @C@@@@ .          RJ
)@@G@@   TO PRINT LINES FROM THE DATA FILE@[@@@@ .    @^@@@@ .        CALL IS RK
)@@G@@      @A@@@@ .                  LX,U X10,PARAM  @A@@@@ .                RL
)@@G@@  LMJ  X11,PRINTL @^@@@@ .             WHERE    @D@@@@ .                RM
)@@G@@  -------------------------------   @D@@@@ .             PARAM:   2/4   RN
)@@G@@:TYPE:   +(PRINTL)  :   @D@@@@ .                  :---------------------RO
)@@G@@--------:   @D@@@@ .                  : 3  : 0/1:    :              :   RP
)@@G@@@D@@@@ .                  :-----------------------------:   @D@@@@ .    RQ
)@@G@@              :    FIELDATA VALUE N,        :   @D@@@@ .                RR
)@@G@@  :-- LEFT JUST., BLANK FILLED--:   @D@@@@ .                  :NOT PRESERS
)@@G@@NT FOR TYPES 5 - 8  :   @D@@@@ .                  ----------------------RT
)@@G@@---------   @[@@@@ .    @ @@@@ .                  TYPE -    @C@@@@ .    RU
)@@G@@              1 - P N             5 - P!  @C@@@@ .                  2 - RV
)@@G@@PN N            6 - PN! @C@@@@ .                  3 - PR N            7 RW
)@@G@@- PR! @C@@@@ .                  4 - PO N            8 - PO! @[@@@@ .    RX
)@@G@@@#@@@@         AXR$.    @#@@@@$(4)     LIT.     @A@@@@PF       FORM  12,RY
)@@G@@6,18        .     @]@@@@$(3).       @[@@@@ .    @C@@@@PRINTL*.          RZ
)@@G@@            . $H PRINTL       @D@@@@         S,H2  X11,RETURN     . $P SSA
)@@G@@AVE RETURN ADDR   @G@@@@         L,U   A11,72         . $P SET MARGINS FSB
)@@G@@OR 72 OR 132 CHAR LINE  @A@@@@         TZ    POPT           .     @A@@@@SC
)@@G@@         L,U   A11,132        .     @A@@@@         L,U   A12,12         SD
)@@G@@.     @A@@@@         TZ    POPT           .     @A@@@@         L,U   A12SE
)@@G@@,22         .     @G@@@@         L,U   A10,RDA        . $P SET PTR TO STSF
)@@G@@ART OF LINE BUFFER      @A@@@@         A,U   A10,1          .     @C@@@@SG
)@@G@@         L,S3  A8,0,X10       . $P GET TYPE     @F@@@@         TLE,U A8,SH
)@@G@@5           . $T IS IT PRINT ALL (TYPE 5-8) ?   @C@@@@         J     PTLSI
)@@G@@1           . $A YES NO,PTL1  @E@@@@         L     A7,(-1)        . $P SSJ
)@@G@@ET LOOP COUNTER NEGATIVE@E@@@@         AN,U  A8,4           . $P RESET TSK
)@@G@@YPE TO 1 - 4      @E@@@@         SZ    LN             . $P SET CURRENT LSL
)@@G@@INE TO 0    @B@@@@         J     PTL4           . $J PTL4   @E@@@@PTL1  SM
)@@G@@   DL    A0,2,X10       . $P GET FD NUMBER FROM PARAM @G@@@@         SLJSN
)@@G@@   FD$BIN         . $W  FD$BIN - CONVERT FD TO BINARY       @A@@@@      SO
)@@G@@   L     A7,A0          .     @F@@@@         TNZ   A7             . $T WSP
)@@G@@AS A NON-ZERO NUMBER INPUT ?  @E@@@@         A,U   A7,1           . $P SSQ
)@@G@@ET ZERO VALUE TO 1      @F@@@@PTL4     L,U   A0,RDA         . $P GET ADDSR
)@@G@@R OF MC LINE BUFFER     @A@@@@         A,U   A0,1           .     @E@@@@SS
)@@G@@         S     A0,TFPKT+1     . $P PUT IT IN TF$AM PACKET   @E@@@@      ST
)@@G@@   L     A0,LN          . $P GET CURRENT LINE NUMBER  @C@@@@         TZ SU
)@@G@@   A0             . $T IS IT ZERO ? @C@@@@         AN,U  A0,1           SV
)@@G@@. $P SUBTRACT 1   @F@@@@         S     A0,LN          . $P RESTORE NEW VSW
)@@G@@ALUE TO LN NUM    @G@@@@PTL5     JN    A7,$+3         . $P IF PRINT ALL,SX
)@@G@@ DON'T CHECK LOOP COUNT @G@@@@         JGD   A7,$+2         . $T MORE LISY
)@@G@@NES TO BE PRINTED (LP CNT>0)? @E@@@@         J     *RETURN        . $E RSZ
)@@G@@ETURN TO MAIN CONTROL   @E@@@@         L     A0,LN          . $P GET CURTA
)@@G@@RENT LINE NUMBER  @G@@@@         A,U   A0,1           . $P ADD 1 TO GET TB
)@@G@@LINE TO BE PRINTED      @F@@@@         S     A0,LN          . $P SAVE NETC
)@@G@@W LN AS CURRENT LN NUM  @G@[@@         TNE,H1 A0,RDA        . $T IS LINETD
)@@G@@ PRESENTLY IN LINE BUFFER ?   @G@@@[         TNE   A0,RDALN      . $T ISTE
)@@G@@ LINE PRESENTLY IN LINE BUFFER ?    @C@@@@         J     PTL6           TF
)@@G@@. $A NO YES,PTL6  @G@[@@         S,H1  A0,TFPKT       . $P PUT LINE NUMBTG
)@@G@@ER INTO TF$AM PACKET    @G@@@[         S     A0,TFPKT       . $P PUT LINTH
)@@G@@E NUMBER INTO TF$AM PACKET    @A@@@@         L,U   X10,TFPKT      .     TI
)@@G@@@F@@@@         LMJ   X11,TF$RMR     . $W TF$RMR - GET LINE FROM T$FILE  TJ
)@@G@@@E@@@@         TZ    STATUS         . $T WAS READ SUCCESSFUL ?    @C@@@@TK
)@@G@@         J     PTL7           . $A YES NO,PTL7  @F@[@@         L     A0,TL
)@@G@@TFPKT       . $P GET LINE NUMBER AND LENGTH     @D@@@[         L     A0,TM
)@@G@@TFPKT       . $P GET LINE NUMBER    @E@[@@         S     A0,RDA         TN
)@@G@@. $P PUT IT IN LINE BUFFER    @E@@@[         S     A0,RDALN       . $P PTO
)@@G@@UT IT IN LINE BUFFER    @D@@@[         L,H2  A0,TFPKT+2     . $P GET LINTP
)@@G@@E LENGTH    @E@@@[         S     A0,RDA         . $P PUT IT IN LINE BUFFTQ
)@@G@@ER    @A@@@@PTL6     L     A0,A8          .     @F@@@@         SLJ   *PTTR
)@@G@@LLST,A0     . $W PERFORM PROPER FORMAT PRINT    @B@@@@         J     PTLTS
)@@G@@5           . $J PTL5   @F@@@@PTL7     SLJ   SENDEOF        . $W SENDEOFTT
)@@G@@ - PRINT E0F MESSAGE    @D@@@@         SZ    LN             . $P SET LN TU
)@@G@@TO ZERO     @E@@@@         J     *RETURN        . $E RETURN TO MAIN CONTTV
)@@G@@ROL   @[@@@@ .    @A@@@@PTLLST   +     0              .     @A@@@@      TW
)@@G@@   +     PL$P           .     @A@@@@         +     PL$PN          .     TX
)@@G@@@A@@@@         +     PL$PR          .     @A@@@@         +     PL$PO    TY
)@@G@@      .     @[@@@@ .    @A@@@@ .        PRINT FIELDATA ROUTINE    @[@@@@TZ
)@@G@@ .    @B@@@@PL$P     +     0              . $H PL$P   @D@@@@         L  UA
)@@G@@   A9,A10         . $P GET BUFFER PTR     @E@[@@         L,H2  A5,RDA   UB
)@@G@@      . $P GET LINE CHAR LENGTH     @E@@@[         L     A5,RDA         UC
)@@G@@. $P GET LINE CHAR LENGTH     @A@@@@         MSI,U A5,6           .     UD
)@@G@@@A@@@@P1       E$DIT PEDPKT         .     @E@@@@         L     A1,A11   UE
)@@G@@      . $P GET MAX PRT LN SIZE      @F@@@@         TG    A1,A5          UF
)@@G@@. $T IS LINE BIGGER THAN PRT LN ?   @F@@@@         L     A1,A5          UG
)@@G@@. $P SET PRT LN SIZE TO LINE SIZE   @G@@@@         AN    A5,A1          UH
)@@G@@. $P SUBTRACT PRT LN SIZE FROM LINE SIZE  @C@@@@         L     A0,A9    UI
)@@G@@      . $P GET IMAGE PTR@G@@@@         A     A9,A12         . $P UPDATE UJ
)@@G@@IMAGE PTR FOR NEXT PRT LN     @E@@@@         LMJ   X11,ECOPY$     . $P CUK
)@@G@@OPY IMAGE INTO PTR LN   @A@@@@         E$DITX               .     @D@@@@UL
)@@G@@         P$RINT (PF 1,22,PEDBUF) . $P PRINT PRT LN    @E@@@@         JNZUM
)@@G@@   A5,P1          . $T MORE LINE TO BE PRINTED ?@C@@@@                  UN
)@@G@@            . $A NO YES,P1    @A@@@@         J     *PL$P          . $E  UO
)@@G@@@[@@@@ .    @C@@@@ .        PRINT FIELDATA WITH NUMBERS ROUTINE   @[@@@@UP
)@@G@@ .    @B@@@@PL$PN    +     0              . $H PL$PN  @D@@@@         L  UQ
)@@G@@   A9,A10         . $P GET BUFFER PTR     @E@[@@         L,H2  A5,RDA   UR
)@@G@@      . $P GET LINE CHAR LENGTH     @E@@@[         L     A5,RDA         US
)@@G@@. $P GET LINE CHAR LENGTH     @A@@@@         MSI,U A5,6           .     UT
)@@G@@@A@@@@         E$DIT PEDPKT         .     @D@[@@         L,H1  A0,RDA   UU
)@@G@@      . $P GET LINE NUMBER    @C@[@@         S     A0,WORD        . $P SUV
)@@G@@AVE IT      @G@[@@         E$DECF 10,WORD       . $P PUT LINE NUMBER INTUW
)@@G@@O 1ST PRT LN      @G@@@[         E$DECF 10,RDALN      . $P PUT LINE NUMBUX
)@@G@@ER INTO 1ST PRT LN      @A@@@@         E$CHAR ':'           .     @A@@@@UY
)@@G@@         E$SKIP 1             .     @G@@@@         L     A1,A11         UZ
)@@G@@. $P GET # REMAINING CHAR IN 1ST PRT LN   @A@@@@         AN,U  A1,12    VA
)@@G@@      .     @G@@@@         TG    A1,A5          . $T WILL LINE NOT FIT OVB
)@@G@@N 1ST PRT LN ?    @F@@@@         L     A1,A5          . $P SET PRT LN SIVC
)@@G@@ZE TO LINE SIZE   @G@@@@         AN    A5,A1          . $P SUBTRACT PRT VD
)@@G@@LN SIZE FROM LINE SIZE  @C@@@@         L     A0,A9          . $P GET IMAVE
)@@G@@GE PTR@G@@@@         A     A9,A12         . $P UPDATE IMAGE PTR FOR NEXTVF
)@@G@@ PRT LN     @A@@@@         AN,U  A9,2           .     @E@@@@         LMJVG
)@@G@@   X11,ECOPY$     . $P COPY IMAGE INTO PRT LN   @A@@@@         E$DITX   VH
)@@G@@            .     @D@@@@         P$RINT (PF 1,22,PEDBUF) . $P PRINT PRT VI
)@@G@@LN    @E@@@@         JNZ   A5,N1          . $T MORE LINE TO BE PRINTED ?VJ
)@@G@@@A@@@@         J     *PL$PN         . $E  @A@@@@N1       E$DIT PEDPKT   VK
)@@G@@      .     @E@@@@         L     A1,A11         . $P GET MAX PRT LN SIZEVL
)@@G@@      @F@@@@         TG    A1,A5          . $T IS LINE BIGGER THAN PRT LVM
)@@G@@N ?   @F@@@@         L     A1,A5          . $P SET PRT LN SIZE TO LINE SVN
)@@G@@IZE   @G@@@@         AN    A5,A1          . $P SUBTRACT PRT LN SIZE FROMVO
)@@G@@ LINE SIZE  @C@@@@         L     A0,A9          . $P GET IMAGE PTR@G@@@@VP
)@@G@@         A     A9,A12         . $P UPDATE IMAGE PTR FOR NEXT PRT LN     VQ
)@@G@@@E@@@@         LMJ   X11,ECOPY$     . $P COPY IMAGE INTO PRT LN   @A@@@@VR
)@@G@@         E$DITX               .     @D@@@@         P$RINT (PF 1,22,PEDBUVS
)@@G@@F) . $P PRINT PRT LN    @E@@@@         JNZ   A5,N1          . $T MORE LIVT
)@@G@@NE TO BE PRINTED ?@C@@@@                              . $A NO YES,N1    VU
)@@G@@@A@@@@         J     *PL$PN         . $E  @[@@@@ .    @A@@@@ .        PRVV
)@@G@@INT OCTAL ROUTINE       @[@@@@ .    @B@@@@PL$PO    +     0              VW
)@@G@@. $H PL$PO  @D@@@@         L     A9,A10         . $P GET BUFFER PTR     VX
)@@G@@@E@[@@         L,H2  A5,RDA         . $P GET LINE CHAR LENGTH     @E@@@[VY
)@@G@@         L     A5,RDA         . $P GET LINE CHAR LENGTH     @A@@@@      VZ
)@@G@@   MSI,U A5,6           .     @E@@@@         L     A4,A12         . $P SWA
)@@G@@ET PRT LN WORD LP CNTR  @A@@@@         SSL   A4,1           .     @A@@@@WB
)@@G@@         AN,U  A4,2           .     @A@@@@         E$DIT PEDPKT         WC
)@@G@@.     @D@[@@         L,H1  A0,RDA         . $P GET LINE NUMBER    @C@[@@WD
)@@G@@         S     A0,WORD        . $P SAVE IT      @G@[@@         E$DECF 10WE
)@@G@@,WORD       . $P PUT LINE NUMBER INTO 1ST PRT LN      @G@@@[         E$DWF
)@@G@@ECF 10,RDALN      . $P PUT LINE NUMBER INTO 1ST PRT LN      @A@@@@      WG
)@@G@@   E$CHAR ':'           .     @A@@@@         E$SKIP 1             .     WH
)@@G@@@B@@@@         J     O2             . $J O2     @E@@@@O1       L     A4,WI
)@@G@@A12         . $P SET PRT LN WORD LP CNTR  @A@@@@         SSL   A4,1     WJ
)@@G@@      .     @A@@@@         AN,U  A4,1           .     @A@@@@         E$DWK
)@@G@@IT PEDPKT         .     @E@@@@O2       L,U   A1,6           . $P GET FULWL
)@@G@@L WORD SIZE       @G@@@@         TG    A1,A5          . $T IS MORE THAN WM
)@@G@@1 WORD LEFT IN LINE ?   @F@@@@         L     A1,A5          . $P SET WORWN
)@@G@@D SIZE TO LINE SIZE     @G@@@@         AN    A5,A1          . $P SUBTRACWO
)@@G@@T WORD SIZE FROM LINE SIZE    @F@@@@         L,U   A1,12          . $P GWP
)@@G@@ET # OCTAL DIGITS IN WORD     @E@@@@         L     A0,A9          . $P GWQ
)@@G@@ET ADDR OF WORD OF LINE @C@@@@         L     A0,0,A0        . $P GET WORWR
)@@G@@D     @G@@@@         A,U   A9,1           . $P UPDATE PTR TO NEXT WORD FWS
)@@G@@OR NEXT PRT @E@@@@         LMJ   X11,EOCTF$     . $P CONVERT WORD TO OCTWT
)@@G@@AL    @E@@@@         TZ    A5             . $T MORE WORDS IN LINE ?     WU
)@@G@@@C@@@@                              . $A YES NO,O3    @G@@@@         JGDWV
)@@G@@   A4,O2          . $T MORE PRT SPACE ON THIS PRT LN ?      @C@@@@      WW
)@@G@@   E$DITX               . $A NO YES,O2    @D@@@@O3       P$RINT (PF 1,22WX
)@@G@@,PEDBUF) . $P PRINT PRT LINE  @E@@@@         JNZ   A5,O1          . $T MWY
)@@G@@ORE LINE TO BE PRINTED ?@C@@@@                              . $A NO YES,WZ
)@@G@@O1    @A@@@@         J     *PL$PO         . $E  @[@@@@ .    @A@@@@ .    XA
)@@G@@    PRINT RECORD ROUTINE      @[@@@@ .    @B@@@@PL$PR    +     0        XB
)@@G@@      . $H PL$PR  @E@@@@         L     X6,A10         . $P SET INDEX TO XC
)@@G@@RECORD IMAGE@A@@@@         E$DIT PEDPKT         .     @E@[@@         L,HXD
)@@G@@1  A0,RDA         . $P GET DATA FILE LINE NUMBER@A@[@@         S     A0,XE
)@@G@@WORD        .     @E@[@@         E$DECF 10,WORD       . $P PUT IT IN FIRXF
)@@G@@ST PRT LINE @F@@@[         E$DECF 10,RDALN      . $P PUT LINE # IN FIRSTXG
)@@G@@ PRT LINE   @G@@@@         E$COPY 16,RTL        . $P PUT 'RECORD TYPE' IXH
)@@G@@N 1ST PRT LINE    @A@@@@         E$DITX               .     @D@@@@      XI
)@@G@@   TNZ   0,X6           . $T IS DBP VALUE 0 ?   @C@@@@         J     PCRXJ
)@@G@@            . $A NO YES,PCR   @D@@@@         L,T1  A1,1,X6        . $P GXK
)@@G@@ET RECORD CODE    @G@@@@         TNE,T1 A1,NMEBUF     . $T IS IT THE SAMXL
)@@G@@E AS LAST REC CDE FOUND?@C@@@@         J     PR3            . $A NO YES,XM
)@@G@@PR3   @G@@@@         L,H2  A0,C8          . $P SET PTR TO FIRST NAME OF XN
)@@G@@C8 TABLE    @A@@@@         A,U   A0,28          .     @G@@@@PR1      TNEXO
)@@G@@,T1 A1,0,A0       . $T IS THIS ENTRY FOR CURRENT REC CODE ? @C@@@@      XP
)@@G@@   J     PR2            . $A NO YES,PR2   @F@@@@         L,T3  A2,0,A0  XQ
)@@G@@      . $T IS LINK FOR THIS ENTRY 0 ?     @C@@@@         JZ    A2,ERROR XR
)@@G@@      . $A NO YES,ERROR @G@@@@         A     A0,A2          . $P ADD LINXS
)@@G@@K TO SET PTR TO NEXT C8 ENTRY @B@@@@         J     PR1            . $J PXT
)@@G@@R1    @G@@@@PR2      LXI,U A0,1           . $P SAVE C8 ENTRY AS LAST RECXU
)@@G@@ FOUND      @A@@@@         L     A1,(1,NMEBUF)  .     @A@@@@         L,UXV
)@@G@@   R1,6           .     @A@@@@         BT    A1,0,*A0       .     @A@@@@XW
)@@G@@PR3      E$DITR PEDPKT        .     @G@@@@         E$COPY 30,NAME       XX
)@@G@@. $P PUT RECORD NAME IN 1ST PRT LINE      @A@@@@         E$DITX         XY
)@@G@@      .     @E@@@@         P$RINT (PF 1,22,PEDBUF) . $P PRINT 1ST PRT LIXZ
)@@G@@NE    @C@@@@         L     A0,0,X6        . $P GET DBP      @G@@@@      YA
)@@G@@   SLJ   DBP$APS        . $W DBP$APS - CONVERT IT TO AREA/PG/SLOT @D@@@@YB
)@@G@@         L     A6,A1          . $P SAVE AREA CODE     @E@@@@         L  YC
)@@G@@   X8,A4          . $P SAVE PTR TO C3 ENTRY     @D@@@@         DL    A4,YD
)@@G@@A2          . $P SAVE PG AND SLOT   @C@@@@         S     A0,WORD        YE
)@@G@@. $P SAVE DBP     @A@@@@         E$DIT PEDPKT         .     @G@@@@      YF
)@@G@@   E$COPY 6,DBPL        . $P PUT 'DBP - ' INTO 2ND PRT LINE       @E@@@@YG
)@@G@@         E$OCTF 12,WORD       . $P PUT DBP INTO 2ND PRT LINE@E@@@@      YH
)@@G@@   JZ    A6,PR35        . $T IS THIS ARTIFICIAL DBP ? @C@@@@         E$CYI
)@@G@@OPY 3,DASH        . $A NO YES,PR35  @G@@@@         DL    A0,1,X8        YJ
)@@G@@. $P PUT AREA NAME INTO 2ND PRT LINE      @A@@@@         LMJ   X11,EFD2$YK
)@@G@@      .     @A@@@@         E$CHAR '/'           .     @F@@@@         E$DYL
)@@G@@ECV A4            . $P PUT PG NO INTO 2ND PRT LINE    @A@@@@         E$CYM
)@@G@@HAR '/'           .     @F@@@@         E$DECV A5            . $P PUT SLOYN
)@@G@@T NO INTO 2ND PRT LINE  @A@@@@PR35     E$DITX               .     @E@@@@YO
)@@G@@         P$RINT (PF 1,22,PEDBUF) . $P PRINT 2ND PRT LINE    @E@@@@      YP
)@@G@@   A,U   X6,1           . $P SET PTR TO RECORD HEADER @F@[@@         L,HYQ
)@@G@@2  A0,RDA         . $P GET DATA FILE IMAGE LENGTH     @F@@@[         L  YR
)@@G@@   A0,RDA         . $P GET DATA FILE IMAGE LENGTH     @A@@@@         AN,YS
)@@G@@U  A0,1           .     @G@@@@         TE,H2 A0,0,X6        . $T IS THERYT
)@@G@@E BOTH AN OLD & NEW RECORD ?  @C@@@@         J     PR4            . $A NYU
)@@G@@O YES,PR4   @E@@@@         L,U   A6,2           . $P SET ONE RECORD FLAGYV
)@@G@@      @A@@@@         E$DIT PEDPKT         .     @E@@@@         SLJ   PRFYW
)@@G@@ORM         . $W PRFORM - PRINT OUT RECORD@A@@@@         J     *PL$PR   YX
)@@G@@      . $E  @E@@@@PR4      L,U   A6,1           . $P SET NEW RECORD FLAGYY
)@@G@@      @A@@@@         E$DIT PEDPKT         .     @A@@@@         E$COPY 4,YZ
)@@G@@NEWL        .     @E@@@@         SLJ   PRFORM         . $W PRFORM - PRINZA
)@@G@@T NEW RECORD@F@@@@         A,H2  X6,0,X6        . $P SET PTR TO OLD RECOZB
)@@G@@RD HEADER   @E@@@@         SZ    A6             . $P SET OLD RECORD FLAGZC
)@@G@@      @A@@@@         E$DIT PEDPKT         .     @A@@@@         E$COPY 4,ZD
)@@G@@OLDL        .     @E@@@@         SLJ   PRFORM         . $W PRFORM - PRINZE
)@@G@@T OLD RECORD@A@@@@         J     *PL$PR         . $E  @A@@@@PCR      E$DZF
)@@G@@ITR PEDPKT        .     @E@@@@         L,T1  A0,1,X6        . $P GET CONZG
)@@G@@TROL RECORD TYPE  @A@@@@         LSSL  A0,1           .     @E@@@@      ZH
)@@G@@   DL    A0,CRT,A0      . $P PUT TYPE IN 1ST PRT LINE @A@@@@         LMJZI
)@@G@@   X11,EFD2$      .     @A@@@@         E$COPY 11,CRL        .     @E@@@@ZJ
)@@G@@         L,T1  A0,1,X6        . $P GET CONTROL RECORD TYPE  @E@@@@      ZK
)@@G@@   L     A0,CRF,A0      . $P GET DATA HEADER WORD     @D@@@@         LMJZL
)@@G@@   X11,EFD1$      . $P PUT IT IN PRT LN   @A@@@@         E$SKIP 1       ZM
)@@G@@      .     @E@@@@         L     A0,2,X6        . $P GET DATA WORD FROM ZN
)@@G@@RECORD@E@@@@         LMJ   X11,EOCTV$     . $P PUT IT IN PRT LN IN OCTALZO
)@@G@@@A@@@@         E$DITX               .     @E@@@@         P$RINT (PF 1,22ZP
)@@G@@,PEDBUF) . $P PRINT 1ST PRT LINE    @A@@@@         J     *PL$PR         ZQ
)@@G@@. $E  @[@@@@ .    @E@@@@ .        ROUTINE TO PRINT RECORD - RECORD PTRS ZR
)@@G@@IN OCTAL,   @E@@@@ .                                  RECORD DATA IN FIEZS
)@@G@@LDATA @[@@@@ .    @C@@@@PRFORM   +     0              . $H PRFORM       ZT
)@@G@@@G@@@@         E$COPY 16,RHL        . $P PUT 'RECORD HEADER' IN NEXT PRTZU
)@@G@@ LINE @A@@@@         L,U   A1,12          .     @G@@@@         L     A0,ZV
)@@G@@0,X6        . $P PUT RECORD HEADER IN NEXT PRT LINE   @A@@@@         LMJZW
)@@G@@   X11,EOCTF$     .     @A@@@@         E$DITX               .     @F@@@@ZX
)@@G@@         P$RINT (PF 1,22,PEDBUF) . $P PRINT RECORD HEADER LINE    @A@@@@ZY
)@@G@@         L     A0,A6          .     @D@@@@         L,T1  A1,0,X6        ZZ
)@@G@@. $P GET RECORD CODE    @G@@@@         TNE,T1 A1,FDW,A0     . $T IS IT TAA
)@@G@@HE SAME AS LAST CODE FOUND ?  @C@@@@         J     PRF5           . $A NAB
)@@G@@O YES,PRF5  @E@@@@PRF1     L,H2  A0,*CN5,A0     . $P GET ADDR OF C5/C11 AC
)@@G@@TABLE @E@@@@         TNZ   A0             . $T DOES C11 TABLE EXIST ?   AD
)@@G@@@E@@@@         L,H2  A0,*CN5        . $P GET ADDR OF C5 TABLE     @G@@@@AE
)@@G@@PRF2     TNE,T1 A1,0,A0       . $T IS THIS ENTRY FOR THIS RECORD ?      AF
)@@G@@@C@@@@         J     PRF4           . $A NO YES,PRF4  @E@@@@         L,TAG
)@@G@@3  A2,0,A0        . $T IS LINK TO NEXT ENTRY 0 ?@C@@@@         JZ    A2,AH
)@@G@@PRF3        . $A NO YES,PRF3  @E@@@@         A     A0,A2          . $P RAI
)@@G@@ESET PTR TO NEXT ENTRY  @B@@@@         J     PRF2           . $J PRF2   AJ
)@@G@@@G@@@@PRF3     TE,U  A6,2           . $T IS THIS 1ST PASS OF ONE RECORD AK
)@@G@@CALL ?@C@@@@         J     ERROR          . $A YES NO,ERROR @F@@@@      AL
)@@G@@   L,U   A6,3           . $P SET ONE RECORD, 2ND PASS FLAG  @A@@@@      AM
)@@G@@   SZ    A0             .     @B@@@@         J     PRF1           . $J PAN
)@@G@@RF1   @F@@@@PRF4     TNE,U A6,3           . $T IS 2ND PASS FLAG NOT SET AO
)@@G@@?     @D@@@@         L,U   A6,2           . $P SET 1ST PASS FLAG  @E@@@@AP
)@@G@@         L,T3  A2,1,A0        . $P GET FIRST DATA WORD DISP @A@@@@      AQ
)@@G@@   L     A0,A6          .     @G@@@@         S,T3  A2,FDW,A0      . $P SAR
)@@G@@AVE DISP AS LAST RECORD FOUND       @A@@@@         S,T1  A1,FDW,A0      AS
)@@G@@.     @E@@@@PRF5     L,T3  A5,FDW,A0      . $P GET FIRST DATA WORD DISP AT
)@@G@@@A@@@@         L     A6,A5          .     @F@@@@         AN,U  A5,1     AU
)@@G@@      . $P CONVERT IT TO # RECORD PTRS    @E@@@@         JZ    A5,PRF8  AV
)@@G@@      . $T ARE THERE ANY PTRS ?     @C@@@@         L     A9,X6          AW
)@@G@@. $A YES NO,PRF8  @E@@@@         A,U   A9,1           . $P SET PTR TO 1SAX
)@@G@@T REC PTR   @E@@@@         L     A4,A12         . $P SET PRT LN WORD CNTAY
)@@G@@R     @A@@@@         SSL   A4,1           .     @A@@@@         AN,U  A4,AZ
)@@G@@3           .     @A@@@@         E$DIT PEDPKT         .     @E@@@@      BA
)@@G@@   E$COPY 13,PTRL       . $P PUT PTR HEADER IN PRT LN @B@@@@         J  BB
)@@G@@   PRF7           . $J PRF7   @E@@@@PRF6     L     A4,A12         . $P SBC
)@@G@@ET PRT LN WORD CNTR     @A@@@@         SSL   A4,1           .     @A@@@@BD
)@@G@@         AN,U  A4,2           .     @A@@@@         E$DIT PEDPKT         BE
)@@G@@.     @E@@@@PRF7     AN,U  A5,1           . $P DECREMENT REC PTR CNT    BF
)@@G@@@A@@@@         L,U   A1,12          .     @E@@@@         L     A0,A9    BG
)@@G@@      . $P GET ADDR OF THIS REC PTR @D@@@@         L     A0,0,A0        BH
)@@G@@. $P GET REC PTR VALUE  @E@@@@         A,U   A9,1           . $P SET PTRBI
)@@G@@ TO NEXT REC PTR  @G@@@@         LMJ   X11,EOCTF$     . $P PUT OCTAL VALBJ
)@@G@@UE OF REC PTR IN PRT LN @A@@@@         E$SKIP 1             .     @D@@@@BK
)@@G@@         TZ    A5             . $T MORE REC PTRS ?    @C@@@@            BL
)@@G@@                  . $A YES NO,PRF75 @F@@@@         JGD   A4,PRF7        BM
)@@G@@. $T MORE SPACE ON THIS PRT LN ?    @C@@@@         E$DITX               BN
)@@G@@. $A NO YES,PRF7  @D@@@@PRF75    P$RINT (PF 1,22,PEDBUF) . $P PRINT PRT BO
)@@G@@LN    @D@@@@         JNZ   A5,PRF6        . $T MORE REC PTRS ?    @C@@@@BP
)@@G@@                              . $A NO YES,PRF6  @D@@@@PRF8     L,H2  A5,BQ
)@@G@@0,X6        . $P GET RECORD LENGTH  @G@@@@         AN    A5,A6          BR
)@@G@@. $P SUBTRACT FDW DISP TO GET # DATA WORDS@G@@@@         MSI,U A5,6     BS
)@@G@@      . $P CONVERT # WORDS TO # CHARACTERS      @F@@@@         L     A9,BT
)@@G@@X6          . $P SET PTR TO FIRST DATA WORD     @F@@@@         A     A9,BU
)@@G@@A6          . $T ANY DATA WORDS IN RECORD ?     @C@@@@         JZ    A5,BV
)@@G@@PRF10       . $A YES NO,PRF10 @A@@@@         E$DIT PEDPKT         .     BW
)@@G@@@E@@@@         E$COPY 6,DATL        . $P PUT DATA HEADER IN PRT LN@E@@@@BX
)@@G@@         L     A1,A11         . $P GET MAX PRT LN SIZE      @E@@@@      BY
)@@G@@   AN,U  A1,6           . $P ADJUST IT FOR HEADER WORD@E@@@@         SZ BZ
)@@G@@   A15            . $P SET FIRST LINE FLAG      @B@@@@         J     PRFCA
)@@G@@95          . $J PRF95  @A@@@@PRF9     E$DIT PEDPKT         .     @E@@@@CB
)@@G@@         L     A1,A11         . $P GET MAX PRT LN SIZE      @F@@@@PRF95 CC
)@@G@@   TG    A1,A5          . $T IS LINE BIGGER THAN PRT LN ?   @F@@@@      CD
)@@G@@   L     A1,A5          . $P SET PRT LN SIZE TO LINE SIZE   @G@@@@      CE
)@@G@@   AN    A5,A1          . $P SUBTRACT PRT LN SIZE FROM LINE SIZE  @E@@@@CF
)@@G@@         L     A0,A9          . $P GET IMAGE PTR THIS PRT LN@G@@@@      CG
)@@G@@   A     A9,A12         . $P UPDATE IMAGE PTR FOR NEXT PRT LN     @E@@@@CH
)@@G@@         JNZ   A15,$+3        . $T IS THIS NOT FIRST LINE   @E@@@@      CI
)@@G@@   AN,U  A9,1           . $P ADJUST FOR HEADER WORD   @A@@@@         L,UCJ
)@@G@@   A15,1          .     @E@@@@         LMJ   X11,ECOPY$     . $P COPY IMCK
)@@G@@AGE INTO PRT LN   @A@@@@         E$DITX               .     @D@@@@      CL
)@@G@@   P$RINT (PF 1,22,PEDBUF) . $P PRINT PRT LN    @G@@@@         JNZ   A5,CM
)@@G@@PRF9        . $T MORE LINE LEFT TO BE PRINTED ?       @C@@@@            CN
)@@G@@                  . $A NO YES,PRF9  @A@@@@PRF10    J     *PRFORM        CO
)@@G@@. $E  @[@@@@ .    @ @@@@ .        TABLE ERROR EXIT    @[@@@@ .    @B@@@@CP
)@@G@@ERROR.                        . $H ERROR  @A@@@@         LSSL  A1,24    CQ
)@@G@@      .     @A@@@@         SSL   A1,24          .     @D@@@@         S  CR
)@@G@@   A1,WORD        . $P SAVE RECORD CODE   @E@@@@         E$DIT PEDPKT   CS
)@@G@@      . $P FORMAT WARNING MESSAGE   @A@@@@         E$COPY 20,ERL1       CT
)@@G@@.     @A@@@@         E$OCTF 5,WORD        .     @A@@@@         E$COPY 18CU
)@@G@@,ERL2       .     @A@[@@         L,H1  A0,RDA         .     @A@[@@      CV
)@@G@@   S     A0,WORD        .     @A@[@@         E$DECV WORD          .     CW
)@@G@@@A@@@[         E$DECV RDALN         .     @A@@@@         E$DITX         CX
)@@G@@      .     @E@@@@         P$RINT (PF 1,22,PEDBUF) . $P PRINT WARNING MECY
)@@G@@SSAGE @A@@@@         J     *PL$PR         . $E  @[@@@@ .    @[@@@@ .    CZ
)@@G@@@]@@@@$(4).       @A@@@@RETURN   +     0              .     @A@@@@WORD  DA
)@@G@@   +     0              .     @[@@@@ .    @A@@@@NMEBUF   +     0        DB
)@@G@@      .     @A@@@@NAME     RES   5              .     @[@@@@ .    @A@@@@DC
)@@G@@FDW      +     0              .     @A@@@@         +     0              DD
)@@G@@.     @A@@@@         +     0              .     @A@@@@CN5      +     C5 DE
)@@G@@            .     @A@@@@         +     C11            .     @A@@@@      DF
)@@G@@   +     C11            .     @A@@@@TFPKT    +     0              .     DG
)@@G@@@A@@@@         +     0              .     @A@@@@         +     0        DH
)@@G@@      .     @A@@@@STATUS   EQUF  TFPKT+2,,T1    .     @A@@@@PEDPKT   E$PDI
)@@G@@KT 22,PEDBUF      .     @A@@@@EOFLN    'EOF:  '             .     @A@@@@DJ
)@@G@@RTL      ': RECORD TYPE - '   .     @A@@@@DBPL     'DBP - '             DK
)@@G@@.     @A@@@@DASH     ' - '                .     @A@@@@NEWL     'NEW '   DL
)@@G@@            .     @A@@@@OLDL     'OLD '               .     @A@@@@CRT   DM
)@@G@@   '            '       .     @A@@@@         'AREA        '       .     DN
)@@G@@@A@@@@         'END-OF-SET  '       .     @A@@@@         'OWNER      '  DO
)@@G@@      .     @A@@@[         'DIRECT      '       .     @A@@@@CRL      ' CDP
)@@G@@ONTROL - '        .     @A@@@@CRF      '      '             .     @A@@@@DQ
)@@G@@         'AREA: '             .     @A@@@@         'SET:  '             DR
)@@G@@.     @A@@@@         'OWNER:'             .     @A@@@[         'KEY:  ' DS
)@@G@@            .     @A@@@@RHL      'RECORD HEADER - '   .     @A@@@@PTRL  DT
)@@G@@   'SET PTRS:    '      .     @A@@@@DATL     'DATA: '             .     DU
)@@G@@@A@@@@ERL1     'UNKNOWN RECORD CODE ' .   @A@@@@ERL2     ' DETECTED AT LDV
)@@G@@INE '  .    @A@@@@PEDBUF   RES   22             .     @A@@@@         ENDDW
)@@G@@                  .     ___   .     @E@@@@         E$COPY 13,PTRL       DX
)@@G@@. $P PUT PTR HEADER IN PRT LN @B@@@@         J     PRF7           . $J PDY
)@@G@@*[@@@@*SDFF*@]@@@@ .          @A@@@@ .                  ** PERFORM **   DZ
)@@G@@@]@@@@ .          @G@@@@ .        THIS ELEMENT CONTAINS THE PERFORM, RETEA
)@@G@@URN, AND GOTO           @E@@@@ .             WORKER ROUTINES FOR THE REOEB
)@@G@@RG EDITOR         @]@@@@ .          @A@@@@ .        PERFORM CALL IS:    EC
)@@G@@      @A@@@@ .                  LX,U X10,PARAM  @A@@@@ .                ED
)@@G@@  LMJ  X11,PERFORM@^@@@@ .             WHERE    @E@@@@ .                EE
)@@G@@  -------------------------------         @E@@@@ .             PARAM:   EF
)@@G@@ 10   :  0 :   +(PERFORM) :         @E@@@@ .                  :---------EG
)@@G@@--------------------:         @E@@@@ .                  : 6  :          EH
)@@G@@              :         @E@@@@ .                  :---------------------EI
)@@G@@--------:         @E@@@@ .                  :                           EJ
)@@G@@  :         @E@@@@ .                  :--      PROC QUALIFIER     --:   EK
)@@G@@      @E@@@@ .                  :                             :         EL
)@@G@@@E@@@@ .                  :-----------------------------:         @E@@@@EM
)@@G@@ .                  :                             :         @E@@@@ .    EN
)@@G@@              :--    PROC FILE NAME       --:         @E@@@@ .          EO
)@@G@@        :                             :         @E@@@@ .                EP
)@@G@@  :-----------------------------:         @E@@@@ .                  :   EQ
)@@G@@                          :         @E@@@@ .                  :--  PROC ER
)@@G@@ELEMENT NAME      --:         @D@@@@ .                  :               ES
)@@G@@              :   @D@@@@ .                  :---------------------------ET
)@@G@@--:   @D@@@@ .                  :                             :   @D@@@@EU
)@@G@@ .                  :--      PROC VERSION       --:   @D@@@@ .          EV
)@@G@@        :                             :   @D@@@@ .                  ----EW
)@@G@@---------------------------   @[@@@@ .    @ @@@@ .        RETURN CALL ISEX
)@@G@@:     @A@@@@ .                  LX,U X10,PARAM  @G@@@@ .                EY
)@@G@@  LMJ  X11,PRFRET  (INTERNAL CALL FROM PERFORM)       @^@@@@ .          EZ
)@@G@@   WHERE    @D@@@@ .                  -------------------------------   FA
)@@G@@@D@[@@ .             PARAM:    2    : 0  :              :   @D@@@[ .    FB
)@@G@@         PARAM:    2    : 0/1:              :   @D@@@@ .                FC
)@@G@@  :-----------------------------:   @D@@@@ .                  : 9  :    FD
)@@G@@                    :   @D@@@@ .                  ----------------------FE
)@@G@@---------   @C@@@[ .                    TYPE 0-RETURN, 1-ABORT    @[@@@@FF
)@@G@@ .    @^@@@@ .        GOTO CALL IS: @A@@@@ .                  LX,U X10,PFG
)@@G@@ARAM  @A@@@@ .                  LMJ  X11,GOTO   @^@@@@ .             WHEFH
)@@G@@RE    @D@@@@ .                  -------------------------------   @D@@@@FI
)@@G@@ .             PARAM:    3    : 2  :    +(GOTO)   :   @D@@@@ .          FJ
)@@G@@        :-----------------------------:   @D@@@@ .                  : 7 FK
)@@G@@ :                        :   @D@@@@ .                  :---------------FL
)@@G@@--------------:   @D@@@@ .                  :  LABEL NUMBER (FD, LFT JUSFM
)@@G@@T):   @D@@@@ .                  -------------------------------   @[@@@@FN
)@@G@@ .    @#@@@@         AXR$.    @#@@@@$(4)     LIT.     @A@@@@PF       FORFO
)@@G@@M  12,6,18        .     @]@@@@$(3).       @C@@@@PERFORM*.               FP
)@@G@@      . $H PERFORM      @E@@@@         S,H2  X11,RETURN     . $P SAVE FIFQ
)@@G@@NAL RETURN ADDR   @E@@@@         SZ    STKPTR         . $P CLEAR NESTED-FR
)@@G@@CALL STACK  @D@@@@PRFORM   S     X10,FLNMAD     . $P SAVE PACKET ADDR   FS
)@@G@@@F@@@@         DL    A0,6,X10       . $P PUT ELEMENT NAME IN PFS$ PKET  FT
)@@G@@@A@@@@         DS    A0,PFPPKT+2    .     @E@@@@         DL    A0,8,X10 FU
)@@G@@      . $P PUT VERSION IN PFS$ PKET @A@@@@         DS    A0,PFPPKT+6    FV
)@@G@@.     @G@@@@         SZ,T1 PFPPKT+5       . $P ZERO OUT FLAG BITS IN PFSFW
)@@G@@$ PKET      @G@@@@         LMJ   X11,PINITIAL      . $W PINITIAL - ASSOCFX
)@@G@@IATE INT FILE NAME@E@@@@         JZ    A0,NOFIND      . $T WAS ASSOCIATIFY
)@@G@@ON MADE     @C@@@@                              . $A YES NO,NOFIND@G@@@@FZ
)@@G@@         DS    A0,PFPPKT      . $P PUT INT FILE NAME IN PFS$ PKET       GA
)@@G@@@A@@@@         L,U   R1,8           .     @E@@@@         L     A0,FLNMADGB
)@@G@@      . $P MOVE PROC NAME TO PBLOCK @A@@@@         A,U   A0,2           GC
)@@G@@.     @A@@@@         LXI,U A0,1           .     @A@@@@         L     A1,GD
)@@G@@(1,PBLOCK)  .     @A@@@@         BT    A1,0,*A0       .     @C@@@@      GE
)@@G@@   L,U   A0,PFPPKT      . $P CALL PFS$    @D@@@@         ER    PFS$     GF
)@@G@@      . $T WAS ELEMENT FOUND  @C@@@@         JNZ   A2,PFPERR      . $A YGG
)@@G@@ES NO,PFPERR@F@@@@         L     A2,PRCTEP      . $P SET PTR FOR PROC TBGH
)@@G@@L SEARCH    @D@@@@         DL    A0,PBLOCK+4    . $P GET ELEMENT NAME   GI
)@@G@@@E@@@@         L     R1,PRCCNT      . $P GET # PARSED PROCS       @G@@@@GJ
)@@G@@TBLSRC   SE    A0,14,*A2      . $P SEARCH FOR MATCH, 1ST WRD ELT NAME   GK
)@@G@@@C@@@@                              . $T MATCH MADE   @C@@@@         J  GL
)@@G@@   NEWENT         . $A YES NO,NEWENT@F@@@@         TE    A1,5,A2        GM
)@@G@@. $T DOES 2ND WRD ELT NAME MATCH    @C@@@@         J     TBLSRC         GN
)@@G@@. $A YES NO,TBLSRC@A@@@@         DL    A3,PBLOCK+2    .     @E@@@@      GO
)@@G@@   DTE   A3,2,A2        . $T DOES FILE NAME MATCH     @C@@@@         J  GP
)@@G@@   TBLSRC         . $A YES NO,TBLSRC@A@@@@         DL    A3,PBLOCK      GQ
)@@G@@.     @E@@@@         DTE   A3,0,A2        . $T DOES QUALIFIER MATCH     GR
)@@G@@@C@@@@         J     TBLSRC         . $A YES NO,TBLSRC@A@@@@         DL GS
)@@G@@   A3,PBLOCK+6    .     @E@@@@         DTE   A3,6,A2        . $T DOES VEGT
)@@G@@RSION MATCH       @C@@@@         J     TBLSRC         . $A YES NO,TBLSRCGU
)@@G@@@E@@@@         L,T2  A3,PFPPKT+8    . $P GET CURRENT CYCLE #      @E@@@@GV
)@@G@@         TE,T2 A3,9,A2        . $T DOES CYCLE # MATCH       @C@@@@      GW
)@@G@@   J     REPRSE         . $A YES NO,REPRSE@G@@@@         TNZ,T1 9,A2    GX
)@@G@@      . $T WAS THERE A SYNTAX ERR IN LAST PARSE @C@@@@         J     EXIGY
)@@G@@STS         . $A YES NO,EXISTS@G@@@@REPRSE   L,H1  A1,8,A2        . $P SGZ
)@@G@@ET UP PRIME BLOCK LIMITS FOR REPARSE@A@@@@         S     A1,LSTADR      HA
)@@G@@.     @A@@@@         L,H2  A1,8,A2        .     @A@@@@         S     A1,HB
)@@G@@CURADR      .     @C@@@@         J     SETENT         . $J SETENT       HC
)@@G@@@F@@@@NEWENT   L     A0,PRCCNT      . $P GET # CURRENTLY PARSED PROCS   HD
)@@G@@@D@@@@         TG,U  A0,50          . $T IS PROC TBL FULL   @C@@@@      HE
)@@G@@   J     MAXPRC         . $A NO YES,MAXPRC@E@@@@         A,U   A0,1     HF
)@@G@@      . $P INCREMENT PROC COUNT     @A@@@@         S     A0,PRCCNT      HG
)@@G@@.     @G@@@@         L     A0,0,*A2       . $P INCREMENT PRCTBL PTR TO NHH
)@@G@@EW ENTRY    @A@@@@         L     A0,LAST$D      .     @A@@@@         A,UHI
)@@G@@   A0,1           .     @E@@@@         S     A0,CURADR      . $P GET STAHJ
)@@G@@RT OF PRIME BLOCK @F@@@@         L,H2  A1,PFPPKT+9    . $P GET SECTOR LEHK
)@@G@@NGTH, PROC TEXT   @F@@@@         LSSL  A1,6           . $P CALCULATE PRIHL
)@@G@@ME BLOCK SIZE     @A@@@@         A     A0,A1          .     @E@@@@      HM
)@@G@@   S     A0,LSTADR      . $P SAVE END OF PRIME BLOCK  @A@@@@         S  HN
)@@G@@   A0,LAST$D      .     @D@@@@         ER    MCORE$         . $P MCORE PHO
)@@G@@RIME BLOCK  @E@@@@SETENT   S     A2,SAVADR      . $P SAVE PROC TBL ENTRYHP
)@@G@@ ADDR @A@@@@         LXI,U A2,1           .     @E@@@@         L     A0,HQ
)@@G@@(1,PBLOCK)  . $P BUILD PROC TBL ENTRY     @A@@@@         L,U   R1,9     HR
)@@G@@      .     @A@@@@         BT    A2,0,*A0       .     @D@@@@         SZ,HS
)@@G@@T1 0,A2           . $P ZERO ERROR FLAG    @C@@@@         L,T2  A0,PFPPKTHT
)@@G@@+8    . $P SET CYCLE #  @A@@@@         S,T2  A0,0,A2        .     @E@@@@HU
)@@G@@         SZ    EOFFLG         . $P RESET EOF FLAG IN PINPUT @F@@@@      HV
)@@G@@   DL    A0,PFPPKT      . $P SET INT FILE NAME FOR SDFI     @A@@@@      HW
)@@G@@   DS    A0,SDFPKT      .     @E@@@@         L     A0,PFPPKT+10   . $P SHX
)@@G@@ET FILE DISP FOR SDFI   @A@@@@         S     A0,SDFPKT+5    .     @C@@@@HY
)@@G@@         L,U   A0,SDFPKT      . $P OPEN SDFI    @D@@@@         LMJ   X11HZ
)@@G@@,SDFIO      . $T OPEN SUCCESSFUL    @C@@@@         J     SDFERR         IA
)@@G@@. $A YES NO,SDFERR@A@@@@         L,U   A0,SDFPKT     .      @D@@@@      IB
)@@G@@   LMJ   X11,SDFI       . $P READ FIRST IMAGE   @D@@@@         J     SDFIC
)@@G@@ERR         . $T IS THIS SDF FILE   @C@@@@         J     FILERR         ID
)@@G@@. $A YES NO,FILERR@A@@@@         SZ,S3 SDFPKT+10      .     @A@@@@      IE
)@@G@@   L     A1,(05001,0,0) .     @G@@@@         TE    A1,SDFPKT+10   . $T IIF
)@@G@@S 1ST IMAGE LABEL FOR FD FILE       @C@@@@         J     FILERR         IG
)@@G@@. $A YES NO,FILERR@A@@@@         L     A1,('*SDFF*')  .     @D@@@@      IH
)@@G@@   TE    A1,INBUF+1     . $T IS LABEL *SDFF*    @C@@@@         J     FILII
)@@G@@ERR         . $A YES NO,FILERR@E@@@@         L,U   A0,ZERO        . $P CIJ
)@@G@@LEAR LABEL CHECK BUFFER @A@@@@         L     A1,(1,LBLBLK)  .     @A@@@@IK
)@@G@@         L,U   R1,280         .     @A@@@@         BT    A1,0,*A0       IL
)@@G@@.     @F@@@@         SZ    ERRFLG         . $P INITIALIZE SYNTAX ERROR FIM
)@@G@@LAG   @D@@@@         SZ    LININC         . $P INITIALIZE LINE #  @A@@@@IN
)@@G@@         L,U   A0,1           .     @A@@@@         S     A0,FLINE       IO
)@@G@@.     @D@@@@PARSLP   L     A0,FLINE       . $P INCREMENT LINE #   @A@@@@IP
)@@G@@         A     A0,LININC      .     @A@@@@         S     A0,FLINE       IQ
)@@G@@.     @A@@@@         L,U   X10,INPKT      .     @G@@@@         LMJ   X11IR
)@@G@@,PINPUT     . $W PINPUT - READ NEXT LINE FROM ELEMENT @E@@@@         TNZIS
)@@G@@   LININC         . $T WAS FILE ERROR DETECTED  @C@@@@         J     SDFIT
)@@G@@ERR         . $A NO YES,SDFERR@G@@@@         LMJ   X11,PARSE0     . $P CIU
)@@G@@ALL PARSER-0 TO STRIP OFF LABEL     @A@@@@         +     INBUF          IV
)@@G@@.     @A@@@@         +     LABEL          .     @E@@@@         LMJ   X11IW
)@@G@@,PARSE      . $P CALL PARSER TO PARSE LINE@A@@@@         +     INBUF    IX
)@@G@@      .     @A@@@@         +     WRKPKT         .     @E@@@@         SZ IY
)@@G@@   SYNCDE         . $P RESET SYNTAX ERROR CODE  @F@@@@         TZ    LABIZ
)@@G@@EL          . $T DOES LINE NOT HAVE A LABEL     @C@@@@         SLJ   LBLJA
)@@G@@CHK         . $W DO LBLCHK    @D@@@@         TNZ,S1 WRKPKT+1      . $T WJB
)@@G@@AS SYNTAX O.K.    @G@@@@         SLJ   SYNERR         . $W SYNERR - FLAGJC
)@@G@@ LINE AS SYNTAX ERROR   @G@@@@         TZ    ERRFLG         . $T HAS SYNJD
)@@G@@TAX ERROR OCCURRED IN PROC    @C@@@@         J     PARSLP         . $A NJE
)@@G@@O YES,PARSLP@F@@@@         L     A0,LABEL       . $P SAVE LABEL IN PARSEJF
)@@G@@D PACKET    @A@@@@         S,H2  A0,WRKPKT+1    .     @D@@@@         L  JG
)@@G@@   A3,WRKPKT      . $P GET PACKET LENGTH  @A@@@@         SSL   A3,24    JH
)@@G@@      .     @E@@@@         L     R1,A3          . $P SAVE AS TRANSFER CNJI
)@@G@@T     @F@@@@         A     A3,CURADR      . $P ADD IT TO CURRENT CORE ADJJ
)@@G@@DR    @G@@@@         L     A1,INBUF       . $P CONVERT TEXT CHAR LEN TO JK
)@@G@@WRD LEN + 1 @A@@@@         A,U   A1,6           .     @A@@@@         SZ JL
)@@G@@   A0             .     @A@@@@         DI,U  A0,6           .     @A@@@@JM
)@@G@@         TZ    A1             .     @A@@@@         A,U   A0,1           JN
)@@G@@.     @A@@@@         S     A0,INBUF       .     @F@@@@         A     A3,JO
)@@G@@A0          . $P ADD TEXT LENGTH TO CORE ADDR   @E@@@@         L     A2,JP
)@@G@@LSTADR      . $P GET LAST ADDR OF BLOCK   @E@@@@         TG    A2,A3    JQ
)@@G@@      . $T WILL LINE FIT IN BLOCK   @C@@@@         J     STORE          JR
)@@G@@. $A NO YES,STORE @E@@@@         AN    A3,CURADR      . $P GET TOTAL LINJS
)@@G@@E LENGTH    @F@@@@         A,U   A3,1           . $P ADD 1 FOR END-OF-BLJT
)@@G@@OCK FLAG    @A@@@@         L     A2,CURADR      .     @A@@@@         L  JU
)@@G@@   A0,LAST$D      .     @A@@@@         AU,U  A0,1           .     @G@@@@JV
)@@G@@         S     A1,0,A2        . $P SET BLOCK LINK IN END-OF-BLOCK FLAG  JW
)@@G@@@F@@@@         S     A1,CURADR      . $P SAVE START ADDR OF NEW BLOCK   JX
)@@G@@@E@@@@         TLE,U A3,64          . $T IS LINE SIZE > 64 WORDS  @E@@@@JY
)@@G@@         L,U   A3,64          . $P SET NEW BLOCK SIZE TO 64 @A@@@@      JZ
)@@G@@   A     A0,A3          .     @D@@@@         ER    MCORE$         . $P MKA
)@@G@@CORE NEW BLOCK    @A@@@@         S     A0,LAST$D      .     @F@@@@      KB
)@@G@@   S     A0,LSTADR      . $P SAVE END ADDR OF NEW BLOCK     @A@@@@STORE KC
)@@G@@   L     A2,CURADR      .     @A@@@@         LXI,U A2,1           .     KD
)@@G@@@E@@@@         L     A0,(1,WRKPKT)  . $P SAVE PARSED PACKET       @A@@@@KE
)@@G@@         BT    A2,0,*A0       .     @D@@@@         L     A0,INBUF       KF
)@@G@@. $P GET TEXT LENGHT    @E@@@@         L     R1,A0          . $P SAVE ASKG
)@@G@@ TRANSFER CNT     @D@@@@         LSSL  A0,24          . $P FORMAT TEXT LKH
)@@G@@INK   @A@@@@         A     A0,FLINE       .     @A@@@@         S     A0,KI
)@@G@@INBUF       .     @A@@@@         L     A0,(1,INBUF)   .     @D@@@@      KJ
)@@G@@   BT    A2,0,*A0       . $P SAVE LINE TEXT     @A@@@@         LXI,U A2,KK
)@@G@@0           .     @F@@@@         S     A2,CURADR      . $P SAVE CORE PTRKL
)@@G@@ FOR NEXT LINE    @C@@@@         J     PARSLP         . $J PARSLP       KM
)@@G@@@A@@@@FLUSH    L     A0,CURADR      .     @E@@@@         SZ    0,A0     KN
)@@G@@      . $P SET END-OF-PROC FLAG     @A@@@@         L,U   A0,SDFPKT      KO
)@@G@@.     @C@@@@         LMJ   X11,SDFIC      . $P CLOSE SDFI   @A@@@@      KP
)@@G@@   L,U   A1,1           .     @F@@@@         TNE   A1,FLINE       . $T WKQ
)@@G@@ERE THERE ANY LINES IN PROC   @E@@@@         S     A1,ERRFLG      . $P SKR
)@@G@@ET SYNTAX ERROR FLAG    @F@@@@         L     A2,SAVADR      . $P GET ADDKS
)@@G@@R OF PROC TBL ENTRY     @A@@@@         L     A1,ERRFLG      .     @G@@@@KT
)@@G@@         S,T1  A1,9,A2        . $P SET ERROR FLAG IN ENTRY IF SYNTAX ERRKU
)@@G@@@E@@@@         TZ    ERRFLG         . $T WAS THERE A SYNTAX ERROR @C@@@@KV
)@@G@@         J     NOXEQ          . $A NO YES,NOXEQ @G@@@@EXISTS   L,H2  A0,KW
)@@G@@8,A2        . $P GET START ADDR OF PROC PACKETS       @A@@@@         S  KX
)@@G@@   A0,TBLADR      .     @A@@@@         S     A0,CURADR      .     @E@@@@KY
)@@G@@         TNZ   STKPTR         . $T IS THIS NESTED PERFORM   @C@@@@      KZ
)@@G@@   J     XEQ            . $A YES NO,XEQ   @D@@@@         TNZ   LOPT     LA
)@@G@@      . $T IS LIST MODE ON    @C@@@@         J     XEQ            . $A YLB
)@@G@@ES NO,XEQ   @E@@@@         E$DIT PREPKT         . $P PRINT ENTERING PROCLC
)@@G@@ MSG  @A@@@@         E$COPY 20,ENM1       .     @A@@@@         SLJ   BLDLD
)@@G@@NME         .     @A@@@@         E$DITX               .     @A@@@@      LE
)@@G@@   P$RINT (PF 1,22,PREBUF) .  @B@@@@         J     XEQ            . $J XLF
)@@G@@EQ    @E@@@@XEQLP    L     A0,CURADR      . $P GET ADDR OF LAST PKET    LG
)@@G@@@E@@@@         L     A1,0,A0        . $P GET LENGTH OF LAST PKET  @A@@@@LH
)@@G@@         SSL   A1,24          .     @E@@@@         A     A0,A1          LI
)@@G@@. $P GET ADDR OF LAST TEXT    @E@@@@         L     A1,0,A0        . $P GLJ
)@@G@@ET LENGTH OF LAST TEXT  @A@@@@         SSL   A1,24          .     @E@@@@LK
)@@G@@         A     A0,A1          . $P GET ADDR OF NEXT PKET    @A@@@@      LL
)@@G@@   S     A0,CURADR      .     @E@@@@         TZ,T1 0,A0           . $T ILM
)@@G@@S THIS END-OF-BLOCK FLAG@C@@@@         J     XEQ            . $A YES NO,LN
)@@G@@XEQ   @E@@@@         TNZ   0,A0           . $T IS THIS END-OF-PROC FLAG LO
)@@G@@@C@@@@         J     PRFRET         . $A NO YES,PRFRET@F@@@@         L  LP
)@@G@@   A0,0,A0        . $P RESET POINTER TO NEXT BLOCK    @A@@@@         S  LQ
)@@G@@   A0,CURADR      .     @E@@@@XEQ      L     X10,CURADR     . $P GET PARLR
)@@G@@SED PKET ADDR     @D@@@@         TNZ   LOPT           . $T IS LIST MODE LS
)@@G@@ON ?  @C@@@@         J     XEQWKR         . $A YES NO,XEQWKR@D@@@@      LT
)@@G@@   L,H2  A0,1,X10       . $P GET LINE LABEL     @A@@@@         S     A0,LU
)@@G@@LABEL       .     @E@@@@         L,S1  A1,1,X10       . $P GET PKET FUNCLV
)@@G@@TION CODE   @F@@@@         TNE,U A1,15          . $T IS THIS AN UNLABELELW
)@@G@@D COMMENT   @C@@@@         JZ    A0,XEQWKR      . $A NO YES,XEQWKR@D@@@@LX
)@@G@@         L     A0,0,X10       . $P GET ADDR OF TEXT   @A@@@@         SSLLY
)@@G@@   A0,24          .     @A@@@@         A     X10,A0         .     @E@@@@LZ
)@@G@@         SLJ   P$LPRT         . $W P$LPRT - PRINT THE LINE  @E@@@@      MA
)@@G@@   L     X10,CURADR     . $P GET PARSED PKET ADDR     @E@@@@XEQWKR*  L,SMB
)@@G@@1  A0,1,X10       . $P GET PKET FUNCTION CODE   @A@@@@         TG,U  A0,MC
)@@G@@16          .     @A@@@@         SZ    A0             .     @F@@@@      MD
)@@G@@   LMJ   X11,*WKRAD,A0  . $W EXECUTE PROPER WORKER ROUTINE  @F@@@@      ME
)@@G@@   TZ    FATAL          . $T DID FATAL ERROR OCCUR IN WKR   @C@@@@      MF
)@@G@@   J     FTLERR         . $A NO YES,FTLERR@B@@@@         J     XEQLP    MG
)@@G@@      . $J XEQLP  @A@@@@ .        WORKER ROUTINE ADDRESS    @]@@@@WKRAD.MH
)@@G@@      @A@@@@         +     WKRERR         .     @A@@@@         +     LOCMI
)@@G@@ATE$        .     @A@@@@         +     INSERT         .     @A@@@@      MJ
)@@G@@   +     PRINTL         .     @A@@@@         +     PRINTV         .     MK
)@@G@@@A@@@@         +     WKRERR         . PROC@B@@@@         +     PRFWKR   ML
)@@G@@      . PERFORM   @A@@@@         +     GOTO           .     @A@@@@      MM
)@@G@@   +     IFWKR          .     @B@@@@         +     PRFRET         . RETUMN
)@@G@@RN    @A@@@@         +     LET            .     @A@@@@         +     CALMO
)@@G@@L$WK        .     @A@@@@         +     EDIT$WK        .     @A@@@@      MP
)@@G@@   +     INTRP          .     @A@@@@         +     CHANGE$        .     MQ
)@@G@@@A@@@@         +     COMMNT         .     @]@@@@$(3).       @C@@@@COMMNTMR
)@@G@@.  WORKER ROUTINE TO NO-OP COMMENT LINES  @A@@@@         SZ    FATAL    MS
)@@G@@      .     @A@@@@         J     0,X11          .     @E@@@@PRFWKR.   WOMT
)@@G@@RKER ROUTINE TO HANDLE PERFORMS WITHIN PROCS    @G@@@@         L     A0,MU
)@@G@@STKPTR      . $P INCREMENT # ENTRIES ON PERFORM STACK @A@@@@         AU,MV
)@@G@@U  A0,1           .     @A@@@@         S     A1,STKPTR      .     @F@@@@MW
)@@G@@         MSI,U A0,10          . $P GET NEXT AVAIL ADDR ON STACK   @A@@@@MX
)@@G@@         A,U   A0,STACK       .     @A@@@@         LXI,U A0,1           MY
)@@G@@.     @A@@@@         L,U   R1,10          .     @A@@@@         L     A1,MZ
)@@G@@(1,PBLOCK)  .     @E@@@@         BT    A0,0,*A1       . $P MOVE PBLOCK TNA
)@@G@@O THE STACK @A@@@@         L     A0,STKPTR      .     @D@@@@         TG,NB
)@@G@@U  A0,50          . $T IS STACK FULL ?    @C@@@@         J     MXDPTH   NC
)@@G@@      . $A NO YES,MXDPTH@C@@@@         J     PRFORM         . $J PRFORM ND
)@@G@@      @[@@@@ .    @A@@@@PRFRET.   RETURN WORKER ROUTINE     @E@@@[      NE
)@@G@@   L,S3  A0,0,X10       . $P GET TYPE OF RETURN       @E@@@[         TNENF
)@@G@@,U A0,1           . $T IS THIS RETURN OR ABORT  @E@@@[         J     PRFNG
)@@G@@ABT         . $A RETURN ABORT,PRTABT      @D@@@@         L     A0,STKPTRNH
)@@G@@      . $P GET PERFORM DEPTH  @G@@@@         TNZ   A0             . $T INI
)@@G@@S THIS PERFORM WITHIN PERFORM ?     @E@@@@         J     *RETURN        NJ
)@@G@@. $E RETURN CONTROL TO USER   @E@@@@         AN,U  A0,1           . $P DNK
)@@G@@ECREMENT DEPTH NUMBER   @A@@@@         S     A0,STKPTR      .     @F@@@@NL
)@@G@@         MSI,U A0,10          . $P GET ADDR LAST ENTRY ON STACK   @A@@@@NM
)@@G@@         A,U   A0,STACK       .     @A@@@@         LXI,U A0,1           NN
)@@G@@.     @A@@@@         L,U   R1,10          .     @A@@@@         L     A1,NO
)@@G@@(1,PBLOCK)  .     @F@@@@         BT    A1,0,*A0       . $P MOVE STACK ENNP
)@@G@@TRY TO PBLOCK     @G@@@@         TZ    FATAL          . $T DID FATAL ERRNQ
)@@G@@OR OCCUR IN SBRTN       @C@@@@         J     FTLERR         . $A NO YES,NR
)@@G@@FTLERR@D@@@@         TNZ   LOPT           . $T IS LIST MODE ON    @C@@@@NS
)@@G@@         J     XEQLP          . $A YES NO,XEQLP @F@@@@         E$DIT PRENT
)@@G@@PKT         . $P PRINT RETURNING TO PROC MSG    @A@@@@         E$COPY 24NU
)@@G@@,RTM1       .     @A@@@@         SLJ   BLDNME         .     @A@@@@      NV
)@@G@@   E$DITX               .     @A@@@@         P$RINT (PF 1,22,PREBUF) .  NW
)@@G@@@B@@@@         J     XEQLP          . $J XEQLP  @[@@@@ .    @A@@@[PRFABTNX
)@@G@@.  ABORT WORKER ROUTINE       @D@@@[         L,U   A0,1           . $P SNY
)@@G@@ET FATAL FLAG     @A@@@[         S     A0,FATAL       .     @E@@@[      NZ
)@@G@@   P$RINT (PF 5,8,ABTM1) . $P PRINT ABORT MESSAGE     @A@@@[         P$ROA
)@@G@@INT (PF 1,8,ABTM2) .    @A@@@[         P$RINT (PF 1,8,ABTM1) .    @A@@@[OB
)@@G@@         P$RINT (PF 3,0,ABTM1) .    @C@@@[         J     FTLERR         OC
)@@G@@. $J FTLERR       @[@@@[ .    @^@@@@ .        ERROR ROUTINES@[@@@@ .    OD
)@@G@@@E@@@@NOFIND.        PROC NAME NOT IN PROC FILE . $H NOFIND       @E@@@@OE
)@@G@@         E$DIT PREPKT         . $P FORMAT ERROR MESSAGE     @A@@@@      OF
)@@G@@   E$COPY 20,NFM1       .     @A@@@@         L     X8,FLNMAD      .     OG
)@@G@@@A@@@@         L,S1  A0,2,X8        .     @A@@@@         TNE,U A0,' '   OH
)@@G@@      .     @A@@@@         J     NFND3          .     @A@@@@         TNEOI
)@@G@@,U A0,'*'         .     @A@@@@         J     NFND2          .     @A@@@@OJ
)@@G@@         DL    A0,2,X8        .     @A@@@@         LMJ   X11,EFD2$      OK
)@@G@@.     @A@@@@NFND2    E$CHAR '*'           .     @A@@@@NFND3    DL    A0,OL
)@@G@@4,X8        .     @A@@@@         LMJ   X11,EFD2$      .     @A@@@@      OM
)@@G@@   E$CHAR '.'           .     @A@@@@         DL    A0,6,X8        .     ON
)@@G@@@A@@@@         LMJ   X11,EFD2$      .     @A@@@@         L,U   A0,' '   OO
)@@G@@      .     @A@@@@         TNE,S1 A0,8,X8       .     @A@@@@         J  OP
)@@G@@   NFND4          .     @A@@@@         E$CHAR '/'           .     @A@@@@OQ
)@@G@@         DL    A0,8,X8        .     @A@@@@         LMJ   X11,EFD2$      OR
)@@G@@.     @A@@@@NFND4    E$COPY 10,NFM2       .     @A@@@@         E$DITX   OS
)@@G@@            .     @D@@@@         P$RINT (PF 1,22,PREBUF) . $P PRINT MESSOT
)@@G@@AGE   @E@@@@         L,U   A0,1           . $P SET FATAL ERROR FLAG     OU
)@@G@@@A@@@@         S     A0,FATAL       .     @C@@@@         J     PRFRET   OV
)@@G@@      . $J PRFRET       @[@@@@ .    @C@@@@LBLCHK.  LABEL CHECK          OW
)@@G@@. $H LBLCHK       @A@@@@         +     0              .     @A@@@@      OX
)@@G@@   L     A1,LABEL       .     @E@@@@         TG,U  A1,10000       . $T IOY
)@@G@@S LABEL VALUE > 10,000  @C@@@@         J     MAXLBL         . $A NO YES,OZ
)@@G@@MAXLBL@F@@@@         AN,U  A1,1           . $P GET INDEX TO LABEL CHK BIPA
)@@G@@T     @A@@@@         SZ    A0             .     @A@@@@         DI,U  A0,PB
)@@G@@36          .     @D@@@@         L     A2,LBLBLK,A0   . $P GET LABEL CHKPC
)@@G@@ BIT  @A@@@@         SSC   A2,0,A1        .     @E@@@@         JB    A2,PD
)@@G@@DUPLBL      . $T IS LABEL BIT ALREADY SET @C@@@@                        PE
)@@G@@      . $A NO YES,DUPLBL@D@@@@         A,U   A2,1           . $P SET LABPF
)@@G@@EL CHK BIT  @A@@@@         LSSC  A2,0,A1        .     @A@@@@         S  PG
)@@G@@   A2,LBLBLK,A0   .     @A@@@@         J     *LBLCHK        . $E  @F@@@@PH
)@@G@@DUPLBL   L,U   A0,1           . $P SET DUP LBL SYNTAX ERR CODE    @A@@@@PI
)@@G@@         S     A0,SYNCDE      .     @E@@@@         SZ,S1 WRKPKT+1       PJ
)@@G@@. $P SET SYNTAX ERROR FLAG    @A@@@@         J     *LBLCHK        . $E  PK
)@@G@@@F@@@@MAXLBL   L,U   A0,2           . $P SET MAX LBL SYNTAX ERR CODE    PL
)@@G@@@A@@@@         S     A0,SYNCDE      .     @E@@@@         SZ,S1 WRKPKT+1 PM
)@@G@@      . $P SET SYNTAX ERROR FLAG    @A@@@@         J     *LBLCHK        PN
)@@G@@. $E  @[@@@@ .    @C@@@@SYNERR.   SYNTAX ERROR        . $H SYNERR       PO
)@@G@@@A@@@@         +     0              .     @F@@@@         TZ    ERRFLG   PP
)@@G@@      . $T IS THIS FIRST SYNTAX ERROR ?   @C@@@@         J     SYN2     PQ
)@@G@@      . $A YES NO,SYN2  @F@@@@         E$DIT PREPKT         . $P FORMAT PR
)@@G@@PROC SYN ERR HEADER     @A@@@@         E$COPY 24,SNM1       .     @A@@@@PS
)@@G@@         SLJ   BLDNME         .     @A@@@@         E$SKIP 1             PT
)@@G@@.     @A@@@@         E$CHAR ':'           .     @A@@@@         E$DITX   PU
)@@G@@            .     @D@@@@         P$RINT (PF 1,22,PREBUF) . $P PRINT HEADPV
)@@G@@ER    @E@@@@         L,U   A0,1           . $P SET SYNTAX ERROR FLAG    PW
)@@G@@@A@@@@         S     A0,ERRFLG      .     @E@@@@SYN2     L     A1,INBUF PX
)@@G@@      . $W P$LPRT - PRINT BAD LINE  @A@@@@         A,U   A1,6           PY
)@@G@@.     @A@@@@         SZ    A0             .     @A@@@@         DI,U  A0,PZ
)@@G@@6           .     @A@@@@         TZ    A1             .     @A@@@@      QA
)@@G@@   A,U   A0,1           .     @A@@@@         SZ    INBUF          .     QB
)@@G@@@A@@@@         S,T1  A0,INBUF       .     @A@@@@         L     A0,FLINE QC
)@@G@@      .     @A@@@@         S,H2  A0,INBUF       .     @A@@@@         L,UQD
)@@G@@   X10,INBUF      .     @A@@@@         SLJ   P$LPRT         .     @E@@@@QE
)@@G@@         L     A0,SYNCDE      . $P PRINT SYNTAX TYPE LINE   @A@@@@      QF
)@@G@@   L     A0,SNMLST,A0   .     @A@@@@         ER    PRINT$         .     QG
)@@G@@@A@@@@         J     *SYNERR        . $E  @[@@@@ .    @E@@@@NOXEQ.   TERQH
)@@G@@MINATE EXECUTION DUE TO SYNTAX ERR . $H NOXEQ   @A@@@@         L     A0,QI
)@@G@@FLINE       .     @F@@@@         TE,U  A0,1           . $T WERE THERE ANQJ
)@@G@@Y LINES IN PROC   @C@@@@         J     NOX2           . $A NO YES,NOX2  QK
)@@G@@@E@@@@         E$DIT PREPKT         . $P PRINT NO-LINES MSG       @A@@@@QL
)@@G@@         E$COPY 23,NXM2       .     @A@@@@         SLJ   BLDNME         QM
)@@G@@.     @A@@@@         E$DITX               .     @A@@@@         P$RINT (PQN
)@@G@@F 1,22,PREBUF) .  @E@@@@NOX2     P$RINT (PF 1,7,NXM1) . $P PRINT TERM MEQO
)@@G@@SSAGE       @E@@@@         L,U   A0,1           . $P SET FATAL ERROR FLAQP
)@@G@@G     @A@@@@         S     A0,FATAL       .     @C@@@@         J     PRFQQ
)@@G@@RET         . $J PRFRET       @[@@@@ .    @C@@@@WKRERR.   ILLEGAL WORKERQR
)@@G@@ CODE . $H WKRERR       @E@@@@         P$RINT (PF 1,4,WKM1) . $P PRINT IQS
)@@G@@LLEGAL WKR MESSAGE@E@@@@         L,U   A0,1           . $P SET FATAL ERRQT
)@@G@@OR FLAG     @A@@@@         S     A0,FATAL       .     @C@@@@         J  QU
)@@G@@   FTLERR         . $J FTLERR       @[@@@@ .    @C@@@@MXDPTH. MAX DEPTH QV
)@@G@@OF PERFORMS . $H MXDPTH       @E@@@@         P$RINT (PF 1,6,MDM1) . $P PQW
)@@G@@RINT ERROR MESSAGE      @E@@@@         L,U   A0,1           . $P SET FATQX
)@@G@@AL ERROR FLAG     @A@@@@         S     A0,FATAL       .     @C@@@@      QY
)@@G@@   J     FTLERR         . $J FTLERR       @[@@@@ .    @A@@@@ .        FAQZ
)@@G@@TAL ERROR EXIT ROUTINE  @[@@@@ .    @E@@@@FTLERR   E$DIT PREPKT         RA
)@@G@@. $P PRINT FATAL ERROR MESSAGE@A@@@@         E$COPY 23,FTLM1      .     RB
)@@G@@@A@@@@         SLJ   BLDNME         .     @A@@@@         E$COPY 21,FTLM2RC
)@@G@@      .     @A@@@@         E$DITX               .     @A@@@@         P$RRD
)@@G@@INT (PF 1,22,PREBUF) .  @A@@@@         L     X10,CURADR     .     @A@@@@RE
)@@G@@         L,H2  A0,1,X10       .     @A@@@@         S     A0,LABEL       RF
)@@G@@.     @A@@@@         L     A0,0,X10       .     @A@@@@         SSL   A0,RG
)@@G@@24          .     @A@@@@         A     X10,A0         .     @E@@@@      RH
)@@G@@   SLJ   P$LPRT         . $W P$LPRT - PRINT BAD LINE  @E@@@@         L  RI
)@@G@@   A7,STKPTR      . $P GET PERFORM NEST DEPTH   @C@@@@         JGD   A7,RJ
)@@G@@$+2         . $T IS DEPTH > 0 @C@@@@         J     *RETURN        . $E RRK
)@@G@@ETURN       @A@@@@         P$RINT (PF 1,7,MDM2) .     @E@@@@         L,URL
)@@G@@   X7,STACK       . $P PRINT PERFORM HISTORY    @A@@@@MDLP1    E$DIT PRERM
)@@G@@PKT         .     @A@@@@         E$COPY 4,DASH        .     @A@@@@      RN
)@@G@@   L,H2  A0,8,X7        .     @A@@@@         L     A1,0,A0        .     RO
)@@G@@@A@@@@         SSL   A1,24          .     @A@@@@         A     A0,A1    RP
)@@G@@      .     @A@@@@         L,H2  A0,0,A0        .     @A@@@@         L,URQ
)@@G@@   A1,4           .     @A@@@@         LMJ   X11,EDECF$     .     @A@@@@RR
)@@G@@         E$COPY 4,DASH2       .     @A@@@@         L     A0,X7          RS
)@@G@@.     @A@@@@         DL    A0,0,A0        .     @A@@@@         LMJ   X11RT
)@@G@@,EFD2$     .      @A@@@@         E$CHAR '*'           .     @A@@@@      RU
)@@G@@   L     A0,X7          .     @A@@@@         A,U   A0,2           .     RV
)@@G@@@A@@@@         DL    A0,0,A0        .     @A@@@@         LMJ   X11,EFD2$RW
)@@G@@     .      @A@@@@         E$CHAR '.'           .     @A@@@@         L  RX
)@@G@@   A0,X7          .     @A@@@@         A,U   A0,4           .     @A@@@@RY
)@@G@@         DL    A0,0,A0        .     @A@@@@         LMJ   X11,EFD2$     .RZ
)@@G@@      @A@@@@         E$CHAR '/'           .     @A@@@@         L     A0,SA
)@@G@@X7          .     @A@@@@         A,U   A0,6           .     @A@@@@      SB
)@@G@@   DL    A0,0,A0        .     @A@@@@         LMJ   X11,EFD2$     .      SC
)@@G@@@A@@@@         A,U   X7,10          .     @A@@@@         E$DITX         SD
)@@G@@      .     @A@@@@         P$RINT (PF 1,22,PREBUF) .  @A@@@@         JGDSE
)@@G@@   A7,MDLP1       .     @E@@@@         J     *RETURN        . $E RETURN SF
)@@G@@CONTROL TO USER   @[@@@@ .    @A@@@@ .       ROUTINE TO PRINT TEXT LINE SG
)@@G@@@[@@@@ .    @C@@@@P$LPRT   +     0              . $H P$LPRT       @E@@@@SH
)@@G@@         L     A5,0,X10       . $P GET LINE WORD LENGTH     @A@@@@      SI
)@@G@@   SSL   A5,24          .     @A@@@@         AN,U  A5,1           .     SJ
)@@G@@@E@@@@         MSI,U A5,6           . $P CALCULATE CHAR LENGTH    @A@@@@SK
)@@G@@         AN,U  A5,1           .     @A@@@@         SZ    A4             SL
)@@G@@.     @G@@@@         DI,U  A4,60          . $P CALCULATE # PRINT LINES NSM
)@@G@@EEDED       @F@@@@         A,U   A5,1           . $P SET FINAL PRINT LINSN
)@@G@@E LENGTH    @A@@@@         L     A7,X10         .     @G@@@@         A,USO
)@@G@@   A7,1           . $P SET PTR TO START OF LINE IMAGE       @A@@@@      SP
)@@G@@   E$DIT PREPKT         .     @A@@@@         E$CHAR '#'           .     SQ
)@@G@@@A@@@@         L,H2  A0,0,X10       .     @A@@@@         L,U   A1,4     SR
)@@G@@      .     @C@@@@         LMJ   X11,EDECF$     . $P OUTPUT LINE #@A@@@@SS
)@@G@@         E$CHAR ':'           .     @F@@@@         TNZ   LABEL          ST
)@@G@@. $T DOES LINE NOT HAVE A LABEL     @A@@@@         J     P$LP01         SU
)@@G@@.     @C@@@@         E$DECF 5,LABEL       . $P OUTPUT LABEL @A@@@@      SV
)@@G@@   E$SKIP 1             .     @A@@@@         J     P$LP02         .     SW
)@@G@@@A@@@@P$LP01   E$SKIP 6             .     @G@@@@P$LP02   JZ    A4,P$LP3 SX
)@@G@@      . $T IS MORE THAN 1 PRINT LINE NEEDED ?   @A@@@@         AN,U  A4,SY
)@@G@@1           .     @E@@@@         J     P$LP2          . $A NO,P$LP3 YES,SZ
)@@G@@P$LP2       @A@@@@P$LP1    E$DIT PREPKT         .     @D@@@@         E$CTA
)@@G@@OL 12             . $P SET LEFT MARGIN    @E@@@@P$LP2    L,U   A1,60    TB
)@@G@@      . $P SET TO COPY 60 CHARACTERS@A@@@@         L     A0,A7          TC
)@@G@@.     @G@@@@         A,U   A7,10          . $P UPDATE IMAGE PTR FOR NEXTTD
)@@G@@ PRINT LINE @F@@@@         LMJ   X11,ECOPY$     . $P COPY IMAGE TO PRINTTE
)@@G@@ BUFFER     @A@@@@         E$DITX               .     @C@@@@         P$RTF
)@@G@@INT (PF 1,12,PREBUF) . $P PRINT LINE@G@@@@         JGD   A4,P$LP1       TG
)@@G@@. $T MORE PRINT LINES NEEDED (>1) ?       @C@@@@                        TH
)@@G@@      . $A NO YES,P$LP1 @G@@@@         E$DIT PREPKT         . $P SET UP TI
)@@G@@TO PRINT LAST PRINT LINE      @D@@@@         E$COL 12             . $P STJ
)@@G@@ET LEFT MARGIN    @E@@@@P$LP3    L     A1,A5          . $P GET # CHARACTTK
)@@G@@ERS IN LINE @E@@@@         L     A0,A7          . $P GET LINE IMAGE PTR TL
)@@G@@      @F@@@@         LMJ   X11,ECOPY$     . $P COPY IMAGE TO PRINT BUFFETM
)@@G@@R     @A@@@@         E$DITX               .     @C@@@@         P$RINT (PTN
)@@G@@F 1,12,PREBUF) . $P PRINT LINE@C@@@@         J     *P$LPRT        . $E RTO
)@@G@@ETURN       @[@@@@ .    @[@@@@ .    @G@@@@BLDNME   +     0              TP
)@@G@@. ROUTINE TO BUILD PROC NAME FOR ERROR MSG@A@@@@         L,S1  A0,PBLOCKTQ
)@@G@@      .     @A@@@@         TNE,U A0,' '         .     @A@@@@         J  TR
)@@G@@   BNME3          .     @A@@@@         TNE,U A0,'*'         .     @A@@@@TS
)@@G@@         J     BNME2          .     @A@@@@         DL    A0,PBLOCK      TT
)@@G@@.     @A@@@@         LMJ   X11,EFD2$      .     @A@@@@BNME2    E$CHAR '*TU
)@@G@@'           .     @A@@@@BNME3    DL    A0,PBLOCK+2    .     @A@@@@      TV
)@@G@@   LMJ   X11,EFD2$      .     @A@@@@         E$CHAR '.'           .     TW
)@@G@@@A@@@@         DL    A0,PBLOCK+4    .     @A@@@@         LMJ   X11,EFD2$TX
)@@G@@      .     @A@@@@         L,U   A0,' '         .     @A@@@@         TNETY
)@@G@@,S1 A0,PBLOCK+6   .     @A@@@@         J     *BLDNME        .     @A@@@@TZ
)@@G@@         E$CHAR '/'           .     @A@@@@         DL    A0,PBLOCK+6    UA
)@@G@@.     @A@@@@         LMJ   X11,EFD2$      .     @A@@@@         J     *BLUB
)@@G@@DNME        .     @[@@@@ .    @[@@@@ .    @D@@@@MAXPRC.  MAX NUMBER OF EUC
)@@G@@LEMENTS PARSED . $H MAXPRC    @E@@@@         P$RINT (PF 1,7,MPM1)   . $PUD
)@@G@@ PRINT ERROR MESSAGE    @A@@@@         L,U   A0,1           .     @A@@@@UE
)@@G@@         S     A0,FATAL       .     @A@@@@         J     FTLERR         UF
)@@G@@.     @[@@@@ .    @[@@@@ .    @C@@@@FILERR.   ELEMENT NOT FD SDFF . $H FUG
)@@G@@ILERR       @G@@@@         E$DIT PREPKT         . $P FORMAT AND PRINT ERUH
)@@G@@ROR MESSAGE       @A@@@@         E$COPY 8,FRM1        .     @A@@@@      UI
)@@G@@   SLJ   BLDNME         .     @A@@@@         E$COPY 19,FRM2       .     UJ
)@@G@@@A@@@@         E$DITX               .     @A@@@@         P$RINT (PF 1,22UK
)@@G@@,PREBUF)   .@A@@@@         L,U   A0,1           .     @A@@@@         S  UL
)@@G@@   A0,FATAL       .     @C@@@@         J     PRFRET         . $J PRFRET UM
)@@G@@      @[@@@@ .    @[@@@@ .    @B@@@@PFPERR.  ELEMENT NOT FOUND . $H PFPEUN
)@@G@@RR    @G@@@@         E$DIT PREPKT         . $P FORMAT AND PRINT ERROR MEUO
)@@G@@SSAGE       @A@@@@         SLJ   BLDNME         .     @A@@@@         E$CUP
)@@G@@OPY 28,PFM1       .     @A@@@@         E$DITX               .     @B@@@@UQ
)@@G@@         P$RINT (PF 1,22,PREBUF)    .     @A@@@@         L,U   A0,1     UR
)@@G@@      .     @A@@@@         S     A0,FATAL       .     @C@@@@         J  US
)@@G@@   PRFRET         . $J PRFRET       @[@@@@ .    @[@@@@ .    @C@@@@SDFERRUT
)@@G@@.  I/O ERROR READING ELEMENT . $ H SDFERR @G@@@@         E$DIT PREPKT   UU
)@@G@@      . $P FORMAT AND PRINT ERROR MESSAGE       @A@@@@         E$COPY 10UV
)@@G@@,SFM1       .     @A@@@@         L,S1  A0,SDFPKT+3    .     @A@@@@      UW
)@@G@@   L,U   A1,3           .     @A@@@@         LMJ   X11,EOCTF$     .     UX
)@@G@@@A@@@@         E$COPY 9,SFM2        .     @A@@@@         SLJ   BLDNME   UY
)@@G@@      .     @^@@@@         E$DITX   .     @B@@@@         P$RINT (PF 1,22UZ
)@@G@@,PREBUF)    .     @A@@@@         L,U   A0,1           .     @A@@@@      VA
)@@G@@   S     A0,FATAL       .     @C@@@@         J     PRFRET         . $J PVB
)@@G@@RFRET       @[@@@@ .    @[@@@@ .    @]@@@@$(4).       @A@@@@RETURN   +  VC
)@@G@@   0              .     @A@@@@ERRFLG   +     0              .     @A@@@@VD
)@@G@@PBLOCK*  RES   10             .     @A@@@@CURADR   EQUF  PBLOCK+8,,H2   VE
)@@G@@.     @A@@@@LSTADR   EQUF  PBLOCK+8,,H1   .     @A@@@@TBLADR   EQUF  PBLVF
)@@G@@OCK+9,,H2   .     @A@@@@FLINE    +     0              .     @A@@@@LABEL VG
)@@G@@   +     0              .     @A@@@@INPKT    +     0,SDFPKT       .     VH
)@@G@@@A@@@@         +     FLUSH,0        .     @A@@@@LININC   EQUF  INPKT,,H1VI
)@@G@@      .     @A@@@@EOFFLG   EQUF  INPKT+1,,H2    .     @A@@@@PREPKT   E$PVJ
)@@G@@KT 22,PREBUF      .     @A@@@@PREBUF   RES   22             .     @A@@@@VK
)@@G@@FLNMAD   +     0              .     @A@@@@SAVADR   +     0              VL
)@@G@@.     @A@@@@PFPPKT   +     '            ' .     @A@@@@         +     '  VM
)@@G@@          ' .     @A@@@@         +     0              .     @A@@@@      VN
)@@G@@   +     1,0            .     @A@@@@         +     '            ' .     VO
)@@G@@@A@@@@         +     0              .     @A@@@@         +     010000,0 VP
)@@G@@      .     @A@@@@         +     0              .     @A@@@@         +  VQ
)@@G@@   0              .     @A@@@@         +     0              .     @A@@@@VR
)@@G@@SDFPKT   +     '            ' .     @A@@@@         +     0              VS
)@@G@@.     @A@@@@         +     02000,0        .     @A@@@@         +     448VT
)@@G@@,0          .     @A@@@@         +     0              .     @A@@@@      VU
)@@G@@   +     IN1,IN2        .     @A@@@@         +     16,399         .     VV
)@@G@@@A@@@@         +     1,INBUF+1      .     @A@@@@         +     1,0      VW
)@@G@@      .     @A@@@@         +     0              .     @ @@@@PRCTEP   +  VX
)@@G@@   10,PRCTBL-10   @A@@@@SYNCDE   +     0              .     @A@@@@ZERO  VY
)@@G@@   +     0              .     @F@@@[ABTM1    '**************************VZ
)@@G@@**********************' .     @F@@@[ABTM2    '****** USER DID AN ABORT WWA
)@@G@@ITHIN A PERFORM ******' .     @A@@@@NFM1     'PERFORM ERROR: PROC ' .   WB
)@@G@@@A@@@@NFM2     ' NOT FOUND'         .     @A@@@@SNMLST   +     (PF 1,6,SWC
)@@G@@NM2)  .     @A@@@@         +     (PF 1,6,SNM3)  .     @A@@@@         +  WD
)@@G@@   (PF 1,6,SNM4)  .     @C@@@@SNM1     'SYNTAX ERROR(S) IN PROC ' .     WE
)@@G@@      @E@@@@SNM2     '******      SYNTAX ERROR      ******'  .          WF
)@@G@@@E@@@@SNM3     '****** DUPLICATE LABEL VALUE  ******' .           @E@@@@WG
)@@G@@SNM4     '******   LABEL VALUE > 9999   ******' .           @E@@@@NXM1  WH
)@@G@@   'PERFORM NOT EXECUTED DUE TO SYNTAX ERROR. ' .     @C@@@@NXM2     'NOWI
)@@G@@ LINES FOUND IN PROC '   .          @C@@@@WKM1     'ILLEGAL COMMAND FOUNWJ
)@@G@@D   ' .           @E@@@@MDM1     'MAXIMUM PERFORM DEPTH OF 50 EXCEEDED' WK
)@@G@@ .          @C@@@@FTLM1    '***FATAL ERROR IN PROC '  .           @A@@@@WL
)@@G@@FTLM2    ' AT FOLLOWING LINE***' .  @E@@@@MDM2     '  PERFORM CALL HISTOWM
)@@G@@RY (FIRST TO LAST):   ' .     @E@@@@MPM1     'LIMIT OF 50 PERFORM ELEMENWN
)@@G@@TS EXCEEDED.' .         @A@@@@FRM1     'ELEMENT '           .     @A@@@@WO
)@@G@@FRM2     ' NOT FD SDF FORMAT.'   .  @C@@@@PFM1     ' SYMBOLIC ELEMENT NOWP
)@@G@@T FOUND.'   .     @A@@@@SFM1     'I/O ERROR '         .     @A@@@@SFM2  WQ
)@@G@@   ' READING '           .    @A@@@@ENM1     '#---> ENTERING PROC '   . WR
)@@G@@@C@@@@RTM1     '#---> RETURNING TO PROC ' .           @A@@@@DASH     '--WS
)@@G@@>#'                .    @A@@@@DASH2    ' -- '               .     @A@@@@WT
)@@G@@LBLBLK   RES   280            .     @A@@@@STKPTR   +     0              WU
)@@G@@.     @A@@@@STACK    RES   51*10          .     @A@@@@IN1      RES   448WV
)@@G@@            .     @A@@@@IN2      RES   448            .     @]@@@@$(3). WW
)@@G@@      @]@@@@ .          @]@@@@ .          @]@@@@ .          @C@@@@GOTO*.WX
)@@G@@                        . $H GOTO         @E@@@@         L,S3  A0,0,X10 WY
)@@G@@      . $P GET GOTO ADDR TYPE       @E@@@@         TE,U  A0,1           WZ
)@@G@@. $T IS ADDR AN ABS ADDR      @C@@@@         J     SEARCH         . $A YXA
)@@G@@ES NO,SEARCH@C@@@@         L     A0,2,X10       . $P GET ABS ADDR @E@@@@XB
)@@G@@         S     A0,CURADR      . $P MAKE IT CURRENT ADDR     @C@@@@      XC
)@@G@@   J     XEQ            . $J XEQ          @E@@@@SEARCH   L     A0,2,X10 XD
)@@G@@      . $P GET FD LINE NUMBER       @A@@@@         L     A1,('      ')  XE
)@@G@@.     @E@@@@         L     A2,STATUS      . $P SAVE PREVIOUS STATUS     XF
)@@G@@@G@@@@         SLJ   FD$BIN         . $W FD$BIN - CONVERT IT TO BINARY  XG
)@@G@@      @E@@@@         S     A2,STATUS      . $P RESTORE STATUS VALUE     XH
)@@G@@@E@@@@         L     A1,TBLADR      . $P GET FIRST PKET ADDR      @E@@@@XI
)@@G@@SRCHLP   L,H2  A2,1,A1        . $P GET LINE # THIS PKET     @E@@@@      XJ
)@@G@@   TNE   A2,A0          . $T IS THIS NEEDED LINE      @C@@@@         J  XK
)@@G@@   FOUND          . $A NO YES,FOUND @E@@@@         L     A2,0,A1        XL
)@@G@@. $P GET LENGTH OF THIS PKET  @A@@@@         SSL   A2,24          .     XM
)@@G@@@E@@@@         A     A1,A2          . $P SET TO THIS TEXT         @E@@@@XN
)@@G@@         L     A2,0,A1        . $P GET LENGTH OF THIS TEXT  @A@@@@      XO
)@@G@@   SSL   A2,24          .     @E@@@@         A     A1,A2          . $P SXP
)@@G@@ET TO NEXT PKET         @E@@@@         TZ,T1 0,A1           . $T IS THERXQ
)@@G@@E A NEXT PKET     @C@@@@         J     SRCHLP         . $A NO YES,SRCHLPXR
)@@G@@@E@@@@         TNZ   0,A1           . $T IS THIS END-OF-PROC      @C@@@@XS
)@@G@@         J     GTERR          . $A NO YES,GTERR @E@@@@         L     A1,XT
)@@G@@0,A1        . $P SET TO NEXT BLOCK        @C@@@@         J     SRCHLP   XU
)@@G@@      . $J SRCHLP       @E@@@@GTERR    P$RINT (PF 1,4,GOM1) . $P PRINT GXV
)@@G@@OTO ERR MESSAGE   @E@@@@         L,U   A0,1           . $P SET FATAL ERRXW
)@@G@@OR FLAG     @A@@@@         S     A0,FATAL       .     @C@@@@         J  XX
)@@G@@   FTLERR         . $J FTLERR       @G@@@@FOUND    S     A1,CURADR      XY
)@@G@@. $P SAVE ABS ADDR AS CURRENT ADDR        @G@@@@         S     A1,2,X10 XZ
)@@G@@      . $P SAVE ABS ADDR IN GOTO PKET           @E@@@@         L,U   A0,YA
)@@G@@1           . $P SET GOTO ADDR TYPE TO ABS@A@@@@         S,S3  A0,0,X10 YB
)@@G@@      .     @C@@@@         J     XEQ            . $J XEQ          @]@@@@YC
)@@G@@ .          @]@@@@$(4).       @C@@@@GOM1     'ILLEGAL GOTO ADDRESS    ' YD
)@@G@@.           @^@@@@         END   .        ___   @A@@@@         +     FLUYE
)@@G@@SH,0        .     @A@@@@LININC   EQUF  INPKT,,H1      .     @A@@@@EOFFLGYF
)@@G@@   EQUF  INPKT+1,,H2    *[@@@@*SDFF*@[@@@@$(1)  @G@@@@TF$IA* . TEMPORARYYG
)@@G@@ FILE ACCESS METHOD, INSERT AFTER A GIVEN RECORD      @#@@@@          AXYH
)@@G@@R$    @B@@@@PF1       FORM      12,6,18           .   @G@#@@IOVFNUM   EQYI
)@@G@@U       2                 . # OF OVERFLOW INDEX BLOCKS      @E@@@@      YJ
)@@G@@              . EQU SHOULD BE REMOVED EVENTUALLY      @C@@@@          SXYK
)@@G@@,H2     X11,RETURN     . $H TF$IA   @G@@@@          SZ,S6     SW2       YL
)@@G@@     . $P ZERO OUT ZERO RECORD SWITCH     @G@@@@                        YM
)@@G@@      .         SWITCH IS SET BY LOCINX IF 0 RCD@G@@@@          SLJ     YN
)@@G@@  FRSTED         . $P FLUSH SQW INDEX BUF ON 1ST EDIT @I@[@@          LAYO
)@@G@@,H1     A3,0,X10       .  RECORD NUMBER TO INSERT AFTER TO A3           YP
)@@G@@@I@@@[          LA        A3,0,X10       .  RECORD NUMBER TO INSERT AFTEYQ
)@@G@@R TO A3           @G@@@@          LMJ       X11,LOCINX     . $W LOCATE IYR
)@@G@@NDEX OF RECORD          @G@@@@                                   . WILL YS
)@@G@@RETURN INDEX IN LCINX         @G@@@@                                   .YT
)@@G@@   ADDR OF INDEX IN LCINXA          @G@@@@                              YU
)@@G@@     .   INX BLOCK ADDR IN INXPKT+1       @G@@@@                        YV
)@@G@@           . IF RCD# WANTED IS ZERO, WILL RETURN@G@@@@                  YW
)@@G@@                 . INFORMATION ON RCD#1 AND SET S6(SW2@E@@@@          TZYX
)@@G@@        A0             . $T  SUCCESSFUL         @E@@@@          ER      YY
)@@G@@  ERR$           . $A  NO,EXIT YES        @]@@@@ .          @C@@@@ . PREYZ
)@@G@@PARE TO INSERT RECORD IN TEMP FILE        @]@@@@ .          @E@[@@      ZA
)@@G@@    LA,H2     A1,0,X10       . $P RECORD LENGTH TO A1 @E@@@[          LAZB
)@@G@@,H2     A1,2,X10       . $P RECORD LENGTH TO A1 @G@@@@          AA,U    ZC
)@@G@@  A1,1           . $P ADD ONE WORD FOR HEADER         @G@@@@          SAZD
)@@G@@        A1,RECLEN      . $P TOTAL LENGTH TO RECLEN          @G@@@@      ZE
)@@G@@    LA,H2     A2,1,X10       . $P ADDR OF RCD TO INSERT TO A2     @G@@@@ZF
)@@G@@          SA        A2,RECADD      . $P ADDR OF RCD TO RECADD           ZG
)@@G@@@G@@@@IALP1 . CHECK IF THERE IS SPACE FOR RECORD IN TEMP FILE BLOCK     ZH
)@@G@@      @G@@@@          TNZ       TBWRSW         . $ ANYTHING WRITTEN IN TZI
)@@G@@EMP BLOCK   @G@@@@          LMJ       X11,TINIT      . $ NO, INITIALIZE ZJ
)@@G@@TEMP BLOCK        @G@@@@          LMJ       X11,TSPACE     . $T  ANY SPAZK
)@@G@@CE LEFT IN TEMP FILE    @E@@@@          JZ        A2,IAFGT2      . $A  YZL
)@@G@@ES,IAFGT2 NO      @E@@@@          LMJ       X11,TBWRT1     . $P WRITE TEZM
)@@G@@MP FILE OUT @G@@@@          J         IALP1          . $J IALP1 GO BACK ZN
)@@G@@CHECK ANOTHER BLK @A@@@@IAFGT2 . FOUND SPACE IN TEMP BLOCK  @G@@@@      ZO
)@@G@@    LX        X9,TWADDR      . $P ADDR OF TEMP BLOCK TO X9        @G@@@@ZP
)@@G@@          AX        X9,TBRELW      . $P X9 POINTS TO NEW LOC IN TEMP BLKZQ
)@@G@@@A@@@@          LA        A3,RECLEN      .@G@@@@          SA,H2     A3,0ZR
)@@G@@,X9        . $P RCD LENGTH TO H2 OF TEMP ENTRY  @G@@@@          AA,U    ZS
)@@G@@  A3,EXTRAW      . $P RCD LENGTH + EXTRAW TO A3       @G@@@@          SAZT
)@@G@@        A3,RECLN1      . $P RCD + EXTRAW TO RECLN1          @G@@@@      ZU
)@@G@@    SA,H1     A3,0,X9        . $P RECORD LENGTH + EXTRAW HI(TBUF) @E@@@@ZV
)@@G@@          LA        A3,RECLEN      . $P RECORD LENGTH TO A3 @G@@@@      ZW
)@@G@@    AX,U      X9,1           . $P RECORD DESTINATION TO X9        @A@@@@ZX
)@@G@@          ANA,U     A3,1           .@E@@@@          LR        R1,A3     ZY
)@@G@@     . $P RECORD LENGTH TO R1 @G@@@@          LX        X8,RECADD      .ZZ
)@@G@@ $P RECORD ORIGINATING ADDR TO X8   @G@@@@          SLJ       RTRANS    AA
)@@G@@     . $W RTRANS TRANSFER RECORD TO TEMP B@G@@@@          LMJ       X11,AB
)@@G@@FRMINX     . $W FRMINX FORM INDEX FOR NEW RECORD@A@@@@          LA      AC
)@@G@@  A5,TBRELW      .@A@@@@          AA        A5,RECLN1      .@E@@@@      AD
)@@G@@    SA        A5,TBRELW      . $P UPDATE TBRELW       @^@@@@          LAAE
)@@G@@,U      A0,1@G@@@@          SA        A0,TBWRSW      . $P SET TBWRSW , WAF
)@@G@@RITE IN TEMP BLK  @]@@@@ .          @G@@@@ . PREPARE TO INSERT INDEX FORAG
)@@G@@MED WHICH IS TO BE FOUND IN INDEX         @A@@@@ . CHECK FIRST IF SPACE AH
)@@G@@IS AVAILABLE@]@@@@ .          @E@@@@          SLJ       INDXUPD         AI
)@@G@@  . $W INDXUPD          @G@@@@                                       . MAJ
)@@G@@ARK INDEX BLK FOR UPDATE      @G@@@@          LX,H2     X9,INXPKT+1    .AK
)@@G@@ $P INDEX BLOCK ADDRESS TO X9       @G@@@@          LA,H2     A3,1,X9   AL
)@@G@@     . $P # OF INDICES IN BLOCK TO A3     @C@@@@          LA        A0,RAM
)@@G@@EMINDX        .         @C@@@@          TLE       A0,A3             .   AN
)@@G@@      @C@@@@          ER        ERR$              .         @C@@@@      AO
)@@G@@    ANA       A0,A3             .         @E@@@@          SA        A0,RAP
)@@G@@EMINDX        . $P UPDATE REMINDX   @G@@@@          TG,U      A3,INDNUM AQ
)@@G@@     . $T ANY MORE SPACE IN INDEX BLOCK   @G@@@@                        AR
)@@G@@              . INDNUM = ( IBSIZE/2 - 1)        @E@@@@          J       AS
)@@G@@  IANSPC         . $A NO,IANSPC YES       @A@@@@          LA        A4,AAT
)@@G@@3          .@E@@@@ . PREPARE TO PUSH INDICES & UPDATE # OF INDICES IN BLAU
)@@G@@OCK   @G@@@@          AA,U      A4,1           . $P ADD TO NUMBER OF INDAV
)@@G@@ICES        @G@@@@          SA,H2     A4,1,X9        . $P UPDATE # OF INAW
)@@G@@DICES IN BLOCK    @G@@@@          SLJ       INSINDEX          . $W INSINAX
)@@G@@DEX INSERT INDEX        @E@@@@                              . A3 HAS # OAY
)@@G@@F INDICES IN BLOCK@E@@@@                              . DO NOT PUSH LASTAZ
)@@G@@ INDEX      @G@@@@                              . USES LCINXA (ADDR OF LBA
)@@G@@OCATED INDEX)     @G@@@@                              .      INXREL (RELBB
)@@G@@ LOC WITHIN INX BLOCK)  @G@@@@                              .      RECADBC
)@@G@@D (ADDR OF REC TO BE INSERTED)@A@@@@                              .     BD
)@@G@@@G@@@@                              . UPDATES IASAVA (ADD OF INSERT POINBE
)@@G@@T)    @E@@@@          J         IADONE            . $J IADONE           BF
)@@G@@@C@@@@IANSPC . NO SPACE AVAILABLE IN INDEX BLOCK      @C@@@@ .        L$BG
)@@G@@SNAP    'IAOVF ',,16,IOBFENT        @C@@@@       . PRINT OVERFLOW MESSAGBH
)@@G@@E IF DEBUGGING    @C@@@@       . A3 HAS # OF INDICES IN CURRENT BLOCK   BI
)@@G@@@A@@@@       . X9 HAS INDEX BLOCK ADDRESS @]@@@@       .    @]@@@@      BJ
)@@G@@ .    @G@@@@          LA        A4,A3     . $P # OF INDICES IN BLOCK TO BK
)@@G@@A4          @^@@@@          MSI,U     A4,2@^@@@@          LXI,U     X9,0BL
)@@G@@@G@@@@          AX        X9,A4     . $P X9 POINTS TO LAST INDEX IN BLOCBM
)@@G@@K     @A@@@@          LA        A0,X9           @A@@@@          TLE     BN
)@@G@@  A0,LCINXA       @^@@@@          ER        ERR$@G@@@@          TNE     BO
)@@G@@  A0,LCINXA . $T IS INDEX TO INSERT AFTER LAST  IN BLK@E@@@@          J BP
)@@G@@        IALASTI   . $A YES,IALASTI NO           @]@@@@ .          @C@@@@BQ
)@@G@@ . SAVE LAST INDEX OF BLOCK IN LASTISAVE        @E@@@@ . # OF INDICES INBR
)@@G@@ BLOCK WILL NOT CHANGE AS RESULT          @]@@@@ .          @A@@@@      BS
)@@G@@    DL        A0,0,X9         @A@@@@          DS        A0,LASTISAVE    BT
)@@G@@@G@@@@          SLJ       INSINDEX  . $W INSINDEX INSERT INDEX IN PLACE BU
)@@G@@      @E@@@@                              . A3 HAS # OF INDICES IN BLOCKBV
)@@G@@@E@@@@                              . DO NOT PUSH LAST INDEX      @G@@@@BW
)@@G@@                              . USES LCINXA (ADDR OF LOCATED INDEX)     BX
)@@G@@@G@@@@                              .      INXREL (REL LOC WITHIN INX BLBY
)@@G@@OCK)  @G@@@@                              .      RECADD (ADDR OF REC TO BZ
)@@G@@BE INSERTED)@A@@@@                              .     @G@@@@            CA
)@@G@@                  . UPDATES IASAVA (ADD OF INSERT POINT)    @A@@@@      CB
)@@G@@                        .     @C@@@@          J         IAOVFLP1  . $J ICC
)@@G@@AOVFLP1     @]@@@@ .          @]@@@@ .          @]@@@@IALASTI     @]@@@@CD
)@@G@@ .          @C@@@@ . INDEX TO INSERT AFTER IS LAST INDEX IN BLOCK @G@@@@CE
)@@G@@ . SAVE INDEX TO BE INSERTED INSTEAD  OF SAVING THE LAST INDEX IN BLK   CF
)@@G@@@]@@@@ .          @E@@@@          LA        A0,INDEX  . $P INDEX FORMED CG
)@@G@@TO A0       @G@@@@          LA        A2,RECADD . $P ADDR OF RECORD TO BCH
)@@G@@E INSERTED TO A0  @E@@@@          LA        A1,0,A2   . $P DBP OF RECORDCI
)@@G@@ TO A1      @A@@@@          DS        A0,LASTISAVE    @G@@@@            CJ
)@@G@@                  . $P SAVE INDEX + DBP IN LASTISAVE        @]@@@@ .    CK
)@@G@@      @]@@@@ .          @]@@@@IAOVFLP1    @]@@@@ .          @A@@@@ . CHECL
)@@G@@CK IF OVERFLOW IS DEFINED     @]@@@@ .          @G@@@@          LX,H2   CM
)@@G@@  X9,INXPKT+1    . $P INDEX BLOCK ADDRESS TO X9       @G@@@@          SXCN
)@@G@@        X9,ORBLKAD        . $P SAVE ADDR OF ORIGINAL BLK    @E@@@@      CO
)@@G@@    LA,H2     A0,0,X9        . $P OVF INDICATOR TO A0 @E@@@@          JZCP
)@@G@@        A0,IANOVFB     . $T ANY OVERFLOW BLOCK  @E@@@@                  CQ
)@@G@@                 . $A NO,IANOVFB YES      @]@@@@ .          @C@@@@ . GETCR
)@@G@@ OVERFLOW BLOCK POINTED TO BY A0          @]@@@@ .          @G@@@@      CS
)@@G@@    SA,H2     A0,INXPKT      . $P OVF BLOCK # TO INXPKT           @C@@@@CT
)@@G@@          LMJ       X11,INXBUF     . $W INXBUF  @A@@@@          TZ,H1   CU
)@@G@@  INXPKT          @^@@@@          ER        ERR$@G@@@@          LX      CV
)@@G@@  X9,INXPKT+1    . $P ADDR OF NEW BUFFER BLOCK TO X9  @G@@@@            CW
)@@G@@                       .    ADDRESS MAY BE THAT OF AN       @E@@@@      CX
)@@G@@                             .    OVERFLOW BUFFER     @]@@@@ .          CY
)@@G@@@A@@@@ . UPDATE # OF INDICES LEFT TO GO   @]@@@@ .          @A@@@@      CZ
)@@G@@                             .@A@@@@          LA        A2,REMINDX     .DA
)@@G@@@A@@@@          TLE,H2    A2,1,X9        .@A@@@@          ER        ERR$DB
)@@G@@           .@A@@@@          ANA,H2    A2,1,X9         @A@@@@          SADC
)@@G@@        A2,REMINDX      @]@@@@ .          @]@@@@IAOVSPCHK . @]@@@@ .    DD
)@@G@@      @G@@@@ . CHECK IF INDEX CAN BE INSERTED WITHOUT PUSHING OTHER INDIDE
)@@G@@CES DOWN    @]@@@@ .          @G@@@@          LA,H2     A3,1,X9        .DF
)@@G@@ $P # OF INDICES IN BLOCK TO A3     @G@@@@          TG,U      A3,INDNUM DG
)@@G@@     . $T CAN WE HAVE ONE MORE INDEX IN BL@E@@@@          J         IANSDH
)@@G@@PCOV       . $J NO,IANSPCOV YES     @G@@@@          SLJ       INSFIRST  DI
)@@G@@     . $W INSERT INDEX FIRST IN BLOCK     @G@@@@          SLJ       INDNDJ
)@@G@@UMUPD      . $W INDNUMUPD UPDATE # OF INDICES   @G@@@@          SLJ     DK
)@@G@@  INDXUPD        . $W INDXUPD MARK BLOCK FOR UPDATE   @C@@@@          J DL
)@@G@@        IADONE         . $J IADONE  @]@@@@ .          @]@@@@ .          DM
)@@G@@@]@@@@IANSPCOV    @]@@@@ .          @C@@@@ . NO SPACE TO INSERT ON OVERFDN
)@@G@@LOW BLOCK         @G@@@@ . PREPARE TO SAVE LAST INDEX OF BLOCK, PUSH INDDO
)@@G@@ICES DOWN TO MAKE SPACE @]@@@@ .          @A@@@@          LX        X8,XDP
)@@G@@9          .@G@@@@          LA,H2     A4,1,X9        . $P # OF INDICES IDQ
)@@G@@N BLOCK TO A4     @A@@@@          MSI,U     A4,2           .@G@@@@      DR
)@@G@@    AX        X8,A4          . $P X8 POINTS TO LAST INDEX IN BLOCK@A@@@@DS
)@@G@@          DL        A0,0,X8         @I@@@@          DS        A0,LASTITEDT
)@@G@@MP   . $P SAVE LAST INDEX TEMPORARILY UNTIL           @G@@@@            DU
)@@G@@                       .    INDEX FROM PREVIOUS BLOCK IS    @C@@@@      DV
)@@G@@                             .    STORED  @G@@@@          LA,H2     A3,1DW
)@@G@@,X9        . $P # OF INDICES IN BLOCK TO A3     @G@@@@          ANA,U   DX
)@@G@@  A3,1           . $P REDUCE # OF INDICES TO PUSH     @C@@@@          SLDY
)@@G@@J       INSFIRST       . $P INSFIRST@I@@@@ .        L$SNAP    'NOSPAD',0DZ
)@@G@@,20,IOBFENT                               .           @G@@@@            EA
)@@G@@                       .    WILL PUSH INDICES DOWN BY 2 WRDS@G@@@@      EB
)@@G@@                             .    & STORE WHATEVER WAS IN         @G@@@@EC
)@@G@@                                   .    LASTITEMP FIRST IN BLOCK        ED
)@@G@@@G@@@@          DL        A0,LASTITEMP   . $P INX FROM LASTITEMP TO LASTEE
)@@G@@ISAVE @A@@@@          DS        A0,LASTISAVE   .@G@@@@          J       EF
)@@G@@  IAOVFLP1       . $J IAOVFLP1 GO REPEAT FOR INX      @]@@@@ .          EG
)@@G@@@]@@@@IANOVFB     @C@@@@ . NO OVERFLOW BLOCK DEFINED, CREATE A NEW ONE  EH
)@@G@@@G@@@@          SLJ       OBLKADD        . $W OBLKADD GET ADDRESS OF NEWEI
)@@G@@ BLK  @G@@@@          SLJ       OIINIT         . $W OIINIT INITIALIZE NEEJ
)@@G@@W BLOCK     @G@@@@                                   . $P OIINIT WILL INEK
)@@G@@CREMENT IBNUMWO   @A@@@@          LX        X8,OIWADDR     .@A@@@@      EL
)@@G@@    DL        A0,LASTISAVE   .@G@@@@          DS        A0,2,X8        .EM
)@@G@@ $P INDEX SAVED TO NEW OVF BLOCK    @A@@@@          LA,H2     A3,1,X8   EN
)@@G@@     .@A@@@@          AA,U      A3,1           .@G@@@@          SA,H2   EO
)@@G@@  A3,1,X8        . $P INCREMENT # OF INDICES IN BLK   @]@@@@IADONE .    EP
)@@G@@@A@@@@          LA        A0,RECNMC      .@A@@@@          AA,U      A0,1EQ
)@@G@@           .@G@@@@          SA        A0,RECNMC      . $P UPDATE CURRENTER
)@@G@@ # OF RECORDS     @A@[@@          LA,H1     A0,0,X10       .@A@@@[      ES
)@@G@@    LA        A0,0,X10       .@A@@@@          AA,U      A0,1           .ET
)@@G@@@E@@@@          SA        A0,CURREC      . $P UPDATE CURRENT RCD# @G@[@@EU
)@@G@@          SA,H1     A0,0,X10  . $P RETURN NEW RCD NUM TO CALLING PROG   EV
)@@G@@@G@@@[          SA        A0,0,X10  . $P RETURN NEW RCD NUM TO CALLING PEW
)@@G@@ROG   @G@@@@          LA        A0,RNDSAV      . $P ADDR OF RANDOM TABLEEX
)@@G@@ ENTRY      @G@@@@          LA        A1,0,A0        . $P # OF INDICES FEY
)@@G@@ROM RNDTAB TO A1  @E@@@@          AA,U      A1,1           . $P INCREMENEZ
)@@G@@T # IN A1   @G@@@@          SA        A1,0,A0        . $P UPDATE # OF INFA
)@@G@@DICES IN RNDTAB   @E@@@@          SZ,T1     2,X10          . $P SET ZEROFB
)@@G@@ RETURN CODE@A@@@@          J         *RETURN         @]@@@@ .          FC
)@@G@@@]@@@@ .          @]@@@@ .          @]@@@@ .          @]@@@@ .          FD
)@@G@@@]@@@@ .          @C@@@@INSINDEX  +         0                 .         FE
)@@G@@@G@@@@          LX        X8,LCINXA      . $P ADDRESS OF INDEX FOUND TO FF
)@@G@@X8    @G@@@@          TZ,S6     SW2            . $T WAS RECORD # WANTED FG
)@@G@@= 0         @E@@@@          J         IAGT2          . $A YES,IAGT2   NOFH
)@@G@@      @G@@@@          AX,U      X8,2           . $P X8 POINTS TO BLK TO FI
)@@G@@BE MOVED    @G@@@@IAGT2     SX        X8,IASAVA      . $P SAVE ADDRESS WFJ
)@@G@@HERE TO INSERT    @A@@@@          LA        A2,INXREL      .@G@@@@      FK
)@@G@@    AA,U      A2,1           . $T INDEX FOUND WAS LAST INX IN BLK @G@@@@FL
)@@G@@          TNE       A2,A3          .    BLOCK CANNOT BE COMPLETELY FULL FM
)@@G@@@E@@@@          J         IAGT3          . $A YES,IAGT3  NO       @]@@@@FN
)@@G@@ .          @^@@@@ . PUSH INDICES DOWN    @]@@@@ .          @]@@@@ .    FO
)@@G@@      @G@@@@          TG,U      A3,INDNUM         . $T IS INDEX BLOCK FUFP
)@@G@@LL          @C@@@@          AN,U      A3,1              .         @]@@@@FQ
)@@G@@ .          @G@@@]          TZ,S6     SW2               . $T WAS REC TO FR
)@@G@@INSERT AFTER = 0  @I@@@]          AA,U      A3,1              . $P INCREFS
)@@G@@MENT # OF INDICES TO PUSH           @G@@@@          AN        A3,A2     FT
)@@G@@     . $P # OF INDICES TO PUSH TO A3      @A@@@@IAGT5     MSI,U     A3,2FU
)@@G@@           .@G@@@@          LR        R1,A3          . $P # OF WORDS TO FV
)@@G@@PUSH TO R1        @G@@@@          LA,U      A2,2           . $P # OF LOCFW
)@@G@@S BY WHICH TO PUSH TO A2@G@@@@          LA,U      A0,1           . $P DIFX
)@@G@@RECTION CODE 1 (DOWN) TO A0   @G@@@@          SLJ       IPUSH          .FY
)@@G@@ $W IPUSH CALL ROUTINE TO PUSH DOWN @E@@@@IAGT4 . STORE NEW INDEX IN LOCFZ
)@@G@@ATION POINTED TO BY IASAVA    @E@@@@          LA        A5,INDEX       .GA
)@@G@@ $P  INDEX FORMED TO A5 @A@@@@          LX        X8,IASAVA      .@G@@@@GB
)@@G@@          SA        A5,0,X8        . $P  INDEX FORMED TO INDEX BLOCK    GC
)@@G@@@A@@@@          LA        A0,RECADD       @E@@@@          LA        A4,0GD
)@@G@@,A0        . $P DBP OF RECORD TO A4 @E@@@@          SA        A4,1,X8   GE
)@@G@@     . $P DBP TO INDEX BLOCK  @C@@@@          J         *INSINDEX       GF
)@@G@@  . $E EXIT @]@@@@IAGT3 .     @G@@@@          TNZ,S6    SW2            .GG
)@@G@@ $T WAS RCD#   TO INSERT AFTER = 0  @E@@@@          J         IAGT4     GH
)@@G@@     . $A NO,IAGT4 YES        @G@@@@          TG,U      A3,INDNUM       GI
)@@G@@  . $T IS INDEX BLOCK FULL          @C@@@@          J         $+2       GJ
)@@G@@        .         @C@@@@          AA,U      A3,1              .         GK
)@@G@@@A@@@@          ANA       A3,A2          .@C@@@@          J         IAGTGL
)@@G@@5          . $J IAGT5   @]@@@@ .          @]@@@@ .          @]@@@@ .    GM
)@@G@@      @]@@@@ .          @]@@@@ .          @]@@@@ .          @G@@@@ . SUBGN
)@@G@@ROUTINE THAT WILL INCREMENT VALUE OF IOVFPTR TO POINT TO THE      @E@@@@GO
)@@G@@ . RIGHT ENTRY IN TABLE IOBFTAB (RELATIVE POINTER)          @]@@@@ .    GP
)@@G@@      @A@@@@OVFPTINC  +         0              .@A@@@@          LA      GQ
)@@G@@  A2,IOVFPTR     .@A@@@@          JNZ       A2,OVFPTGT1    .@A@@@@      GR
)@@G@@    LA,U      A2,1           .@A@@@@          J         $+2            .GS
)@@G@@@^@@@@OVFPTGT1  SZ        A2  @A@@@@          SA        A2,IOVFPTR      GT
)@@G@@@A@@@@          J         *OVFPTINC       @]@@@@ .          @]@@@@ .    GU
)@@G@@      @]@@@@ .          @G@@@@ . SUBROUTINE TO OBTAIN AN ADDRESS FOR AN GV
)@@G@@OVERFLOW INDEX BLOCK          @G@@@@ . IF NECESSARY, AN OVERFLOW INDEX BGW
)@@G@@LOCK MIGHT HAVE TO BE WRITTEN       @^@@@@ . OUT TO FREE UP SPACE.@C@@@@GX
)@@G@@ . UPON ENTRY, X9 POINTS TO CURRENT INDEX BLOCK @G@@@@ . UPON RETURN, OIGY
)@@G@@WADDR HAS NEW INDEX BLOCK ADDRESS, IOBFTAB UPDATED    @C@@@@OBLKADD   + GZ
)@@G@@        0              . $H         @^@@@@          LXI,U     X9,0@A@#@@HA
)@@G@@          LX,U      X8,IOBFTAB      @A@@@#          LX        X8,IOVFRADHB
)@@G@@      @G@@@@          AX        X8,IOVFPTR     . $P X8 POINTS TO NEXT AVHC
)@@G@@AIL ENTRY   @A@@@@                                   .@A@@@@            HD
)@@G@@                       .@E@@@@          LA,H1     A1,0,X8        . $P BLHE
)@@G@@OCK NUMBER TO A1  @E@@@@          JZ        A1,OBLKGT1     . $T IS BLOCKHF
)@@G@@ # = 0      @E@@@@                                   . $A YES,OBLKGT2 NOHG
)@@G@@      @G@@@@          TE,H1     A1,0,X9        . $T BLOCK # SAME AS CURRHH
)@@G@@ENT         @E@@@@          J         OBLKGT1        . $A NO,OBLKGT1 YESHI
)@@G@@      @A@@@@          LA        A2,X9           @G@@@@          TE,H2   HJ
)@@G@@  A2,0,X8        . $T IS CURRENT BLOCK SAME           @E@@@@          J HK
)@@G@@        OBLKGT1        . $A NO,OBLKGT1  YES     @]@@@@ .          @C@@@@HL
)@@G@@ . BLOCK IS THE SAME, POINT TO NEXT ONE         @]@@@@ .          @G@@@@HM
)@@G@@          SLJ       OVFPTINC       . $W OVFPTINC  POINT TO NEXT BLOCK   HN
)@@G@@@I@#@@          LX,U      X8,IOBFTAB        . $P REPOINT X8 TO NEXT AVAIHO
)@@G@@LABLE ENTRY       @I@@@#          LX        X8,IOVFRAD        . $P REPOIHP
)@@G@@NT X8 TO NEXT AVAILABLE ENTRY       @C@@@@          AX        X8,IOVFPTRHQ
)@@G@@        .         @E@@@@OBLKGT1 . IF THERE IS A BLOCK IN BUFFER THEN FLUHR
)@@G@@SH IT OUT   @]@@@@        .   @G@@@@          LA        A2,IOBFENT     .HS
)@@G@@ $T # OF ENTRIES IN BUF = # OF BLKS @A@@@@          TE,U      A2,IOVFNUMHT
)@@G@@     .@E@@@@          J         OBLKGT11       . $A NO,OBLKGT11 YES     HU
)@@G@@@G@@@@          LA,H1     A1,0,X8        . $P BLOCK # TO WRITE OUT TO A1HV
)@@G@@      @E@@@@          LA,H2     A2,0,X8        . $P BLOCK ADDRESS TO A2 HW
)@@G@@@G@@@@          LA,U      A3,010         . $P WRITE FUNCTION CODE TO A3 HX
)@@G@@      @G@@@@          LMJ       X11,IBIOW      . $W IBIOW ISSUE I/O AND HY
)@@G@@WAIT        @E@@@@          J         OBLKGT2           . $J OBLKGT2    HZ
)@@G@@      @]@@@@ .          @]@@@@ .          @]@@@@ .          @]@@@@OBLKGTIA
)@@G@@11 .  @C@@@@          AA,U      A2,1              .         @G@@@@      IB
)@@G@@    SA        A2,IOBFENT        . $P INCREMENT # OF OVF INX BLKS  @]@@@@IC
)@@G@@ .          @]@@@@ .          @A@@@@OBLKGT2   LA,H2     A0,0,X8         ID
)@@G@@@G@@@@          SX        A0,OIWADDR     . $P NEW OVF BLK ADDR TO OIWADDIE
)@@G@@R     @G@@@@          SLJ       OVFPTINC       . $W OVFPTINC INCREMENT OIF
)@@G@@VF POINTER  @A@@@@          LA        A0,IBNUMWO      @F@#@@          SAIG
)@@G@@,H1     A0,0,X8        . $P NEW OVF BLK # TO IOBFTAB  @G@@@#          SAIH
)@@G@@,H1     A0,0,X8        . $P NEW OVF BLK # TO INX OVF TAB    @I@@@@ .    II
)@@G@@    L$SNAP    'OBLKAD',0,20,IOBFENT                               .     IJ
)@@G@@      @C@@@@          J         *OBLKADD       . $E EXIT    @]@@@@ .    IK
)@@G@@      @]@@@@ .          @E@@@@ . SUBROUTINE TO INITIALIZE AN OVERFLOW INIL
)@@G@@DEX BLOCK         @G@@@@ . UPON ENTRY, OIWADDR WILL CONTAIN ADDRESS OF OIM
)@@G@@VERFLOW BLOCK           @C@@@@OIINIT* .                          . $H   IN
)@@G@@      @^@@@@          +         0   @A@@@@          LX        X8,(0,ZEROIO
)@@G@@S)    @A@@@@          LX        X9,OIWADDR      @^@@@@          LXI,U   IP
)@@G@@  X9,1@A@@@@          LR,U      R1,IBSIZE       @G@@@@          BT      IQ
)@@G@@  X9,0,*X8       . $P ZERO OUT NEW INDEX BLOCK        @G@@@@          LAIR
)@@G@@        A0,IBNUMWO     . $P NEXT INDEX BLOCK # TO A0        @G@@@@      IS
)@@G@@    LX        X11,OIWADDR    . $P INITIALIZE BLOCK # IN HEADER    @A@@@@IT
)@@G@@          SA,H1     A0,0,X11       .@G@@@@          LX        X8,ORBLKADIU
)@@G@@        . $P ADDRESS OF ORIGINAL BLK      @G@@@@          SA,H2     A0,0IV
)@@G@@,X8           . $P OVF BLK NUMBER TO ORIG BLK   @^@@@@          AA,U    IW
)@@G@@  A0,1@G@@@@          SA        A0,IBNUMWO     . $P INCREMENT # OF INDEXIX
)@@G@@ BLOCKS     @C@@@@          J         *OIINIT        . $E EXIT    @]@@@@IY
)@@G@@ .          @]@@@@ .          @]@@@@ .          @G@@@@ . SUBROUTINE TO IIZ
)@@G@@NSERT INDEX FROM LASTISAVE AT THE BEGINNING OF        @A@@@@ . INDEX BLOJA
)@@G@@CK POINTED TO BY X9     @C@@@@ . UPON ENTRY.  X9 HAS ADDRESS OF INDEX BLJB
)@@G@@OCK   @E@@@@ .              A3 HAS NUMBER OF INDICES IN BLOCK           JC
)@@G@@@]@@@@ .          @C@@@@INSFIRST  +         0              . $H         JD
)@@G@@@G@@@@          JZ        A3,IAOVFINS    . $T # OF INDICES IN BLOCK = 0 JE
)@@G@@      @E@@@@                                   . $A YES,IAOVFINS NO     JF
)@@G@@@]@@@@ .          @E@@@@ . PUSH INDICES DOWN TO ALLOW SPACE FOR ONE INDEJG
)@@G@@X AT THE TOP@]@@@@ .          @A@@@@          LX        X8,X9           JH
)@@G@@@G@@@@          AX,U      X8,2           . $P X8 POINTS TO BEGINNING OF JI
)@@G@@PUSH  @^@@@@          MSI,U     A3,2@G@@@@          LR        R1,A3     JJ
)@@G@@     . $P # OF WORDS TO PUSH TO R1        @G@@@@          LA,U      A2,2JK
)@@G@@           . $P # OF LOCATIONS BY WHICH TO PUSH @G@@@@          LA,U    JL
)@@G@@  A0,1           . $P DIRECTION CODE 1 (DOWN)         @C@@@@          LRJM
)@@G@@        R2,X9             . SAVE X9 @G@@@@          SLJ       IPUSH     JN
)@@G@@     . $W IPUSH MOVE BLOCK OF INDICES     @E@@@@          LX        X9,RJO
)@@G@@2             . RESTORE X9          @]@@@@ .          @]@@@@IAOVFINS .  JP
)@@G@@@G@@@@          DL        A0,LASTISAVE   . $P INDEX FROM LAST BLOCK     JQ
)@@G@@      @G@@@@          DS        A0,2,X9        . INSERT INDEX FROM LAST JR
)@@G@@SAVE        @C@@@@          J         *INSFIRST      . $E EXIT    @]@@@@JS
)@@G@@ .          @C@@@@INDNUMUPD +         0              . $H         @]@@@@JT
)@@G@@ .          @G@@@@ . SUBROUTINE TO INCREMENT # OF INDICES IN INDEX BLOCKJU
)@@G@@ POINTED TO BY X9 @]@@@@ .          @A@@@@          LA,H2     A0,1,X9   JV
)@@G@@      @G@@@@          AA,U      A0,1           . $P INCREMENT # OF INDICJW
)@@G@@ES          @A@@@@          SA        A0,1,X9         @C@@@@          J JX
)@@G@@        *INDNUMUPD     . $E EXIT    @]@@@@ .          @]@@@@ .          JY
)@@G@@@]@@@@$(2)        @E@@@@IOBFENT*  +         0              . # OF OVF BLJZ
)@@G@@OCK ENTRIES @G@@@@IOVFPTR   +         0              . RELATIVE POINTER KA
)@@G@@TO NEXT BLOCK     @^@@@@OIWADDR   +         0   @F@#@@IOBFTAB*  RES     KB
)@@G@@  IOVFNUM        . OVERFLOW INDEX BLOCK TABLE   @G@@@@                  KC
)@@G@@                 . ---------------------------        @G@@@@            KD
)@@G@@                       . *INX BLK NUM * BUF ADDRESS*        @G@@@@      KE
)@@G@@                             . ---------------------------        @G@@@@KF
)@@G@@REMINDX*  +         0              . # OF REMAINING INDICES ON OVERFLOW KG
)@@G@@@G@@@@ORBLKAD   +         0                 . ORIGINAL INDEX BLOCK ADDREKH
)@@G@@SS    @G@@@@LASTISAVE RES       2              . LAST INDEX ENTRY ON BLOKI
)@@G@@CK SAVED    @G@@@@LASTITEMP RES       2              . TEMP SAVE FOR LASKJ
)@@G@@T INDEX ENTRY     @G@@@@IASAVA    +         0              . SAVE ADDRESKK
)@@G@@S WHERE TO INSERT       @G@@@@IAINDX    RES       2              . SAVE KL
)@@G@@INDEX+DBP FROM LAST BLOCK     @C@@@@RETURN    +         0               KM
)@@G@@  .         @]@@@@ .          @^@@@@          END           ___   @E@@@@KN
)@@G@@*[@@@@*SDFF*@]@@@@$(1)        @^@@@@         AXR$           @]@@@@ .    KO
)@@G@@      @A@@@@ . SEQUENTIAL WRITE, FILE CREATION  @]@@@@TF$SQW* .   @A@@@@KP
)@@G@@          S,H2      X11,RETURN      @E@@@@          TZ        CRETSW    KQ
)@@G@@     . $T IS FILE CREATED YET @C@@@@          ER        ERR$           .KR
)@@G@@ $E         @E@@@@          TNZ       IDFASW         . $T ARE FILES ASSIKS
)@@G@@GNED  @E@@@@          LMJ       X11,FILASG     . $A NO,FILASG YES       KT
)@@G@@@A@@@@ .                                 .@]@@@@ .          @G@@@@SQWLP1KU
)@@G@@ .                           .    POINTERS SHOULD POINT TO 1ST BLK@G@@@@KV
)@@G@@          TNZ       IBWRSW         . $T ANYTHING WRITTEN ON THAT BLK    KW
)@@G@@@G@@@@          LMJ       X11,IINIT      . $W INIT INITIALIZE BLOCK     KX
)@@G@@      @E@@@@          LMJ       X11,ISPACE     . $T WAS SPACE AVAILABLE KY
)@@G@@@E@@@@          JZ        A2,SQWYSP      . $A YES,SQWYSP NO       @G@@@@KZ
)@@G@@          LMJ       X11,IBWRT1     . $W IBWRT1 WRITE INDEX BLOCK OUT    LA
)@@G@@@E@@@@                                   . $P POINT TO NEXT BLOCK @C@@@@LB
)@@G@@          J         SQWLP1         . $J SQWLP1  @C@@@@ . SPACE WAS AVAILLC
)@@G@@ABLE FOR INDEX ENTRY          @]@@@@SQWYSP .    @E@@@@          LA,H2   LD
)@@G@@  A1,0,X10       . $P REC LENGTH TO A1    @G@@@@          AA,U      A1,1LE
)@@G@@           . $P ADD 1  FOR REC LENGTH HDR       @E@@@@          SA      LF
)@@G@@  A1,RECLEN      . $P REC LENGTH TO RECLEN@E@@@@          LA,H2     A2,1LG
)@@G@@,X10       . $P REC ADDRESS TO A2   @G@@@@          SA        A2,RECADD LH
)@@G@@     . $P REC ADDRESS TO RECADD           @G@@@@SQWLP2    TNZ       TBWRLI
)@@G@@SW         . $T ANYTHING WRITTEN ON TEMP BLOCK  @A@@@@          LMJ     LJ
)@@G@@  X11,TINIT       @G@@@@          LMJ       X11,TSPACE     . $W TSPACE (LK
)@@G@@ANY SPACE IN TEMP BLOCK)@E@@@@          JZ        A2,SQWFSN      . $T SPLL
)@@G@@ACE FOUND         @E@@@@ .                                 . $A YES,SQWFLM
)@@G@@SN NO       @G@@@@          LMJ       X11,TBWRT1     . $W TBWRT1 WRITE TLN
)@@G@@EMP BLOCK OUT     @C@@@@          J         SQWLP2         . $J SQWLP2  LO
)@@G@@@]@@@@SQWFSN .    @G@@@@          LX        X9,TWADDR      . $P ADDRESS LP
)@@G@@OF TEMP BLOCK TO X9     @G@@@@          AX        X9,TBRELW      . $P POLQ
)@@G@@INT TO NEW LOC IN TEMP BLOCK  @E@@@@          LA        A3,RECLEN      .LR
)@@G@@ $P RECORD LENGTH TO A3 @G@@@@          SA,H2     A3,0,X9           . $PLS
)@@G@@ RCD LENGTH TO H2 OF TEMP     @G@@@@          A,U       A3,EXTRAW      .LT
)@@G@@ $P ADD # OF EXTRA WORDS TO REC LGTH@I@@@@          SA        A3,RECLN1 LU
)@@G@@        . $P LENGTH OF REC +EXTRAW TO RECLN1          @I@@@@          SALV
)@@G@@,H1     A3,0,X9           . $P RCD LENGTH + EXTRAW TO TEMP ENT          LW
)@@G@@@C@@@@          LA        A3,RECLEN         .         @A@@@@          AXLX
)@@G@@,U      X9,1           .@A@@@@          ANA,U     A3,1           .@G@@@@LY
)@@G@@          LR        R1,A3          . $P # OF WORDS TO TRANSFER TO R1    LZ
)@@G@@@E@@@@          LX        X8,RECADD      . $P RECORD ADDRESS TO X8@G@@@@MA
)@@G@@          SLJ       RTRANS         . $W TRANSFER RECORD TO TEMP BLOCK   MB
)@@G@@@G@@@@          LMJ       X11,FRMINX     . $W FRMINX FORM INDEX FOR RECOMC
)@@G@@RD    @G@@@@                                   .    WILL RETURN INDEX TOMD
)@@G@@ LOC INDEX  @C@@@@          LA        A5,TBRELW         .         @E@@@@ME
)@@G@@          AA        A5,RECLN1         . $P UPDATE TBRELW    @A@@@@      MF
)@@G@@    SA        A5,TBRELW      .@C@@@@          LA,U      A0,1            MG
)@@G@@  .         @G@@@@          SA        A0,TBWRSW         . $P SET TBWRSW MH
)@@G@@TO IND TEMP BLK WR@G@@@@          LA        A0,IBRELW      . $P RELATIVEMI
)@@G@@ LOCATION IN INDX BLOCK @G@@@@          LMJ       X11,INSIBL     . $W INMJ
)@@G@@SIBL INSERT IN INDEX BLOCK;   @G@@@@                                   .MK
)@@G@@ $  AT RELATIVE LOCATION IN A0      @A@@@@          LA        A0,IBRELW ML
)@@G@@     .@A@@@@          AA,U      A0,2           .@G@@@@          SA      MM
)@@G@@  A0,IBRELW      . $P UPDATE REL LOCATION IN INX BLOCK@A@@@@          LAMN
)@@G@@        A5,RECNMW       @^@@@@          AA,U      A5,1@G@@@@          SAMO
)@@G@@        A5,RECNMW      . $P UPDATE NUMBER OF RECORDS STORED @I@@@@      MP
)@@G@@    SA        A5,RECNMC         . $P UPDATE CURRENT NUMBER OF RECORDS   MQ
)@@G@@      @C@@@@          J         *RETURN        . $E         @]@@@@ .    MR
)@@G@@      @]@@@@IIOERR      @C@@@@          LX,U      X10,IIOPKT     . $    MS
)@@G@@      @C@@@@          LMJ       X11,IOERR      . $          @C@@@@TIOERRMT
)@@G@@    LX,U      X10,TIOPKT     . $          @C@@@@          LMJ       X11,MU
)@@G@@IOERR      . $          @]@@@@ .          @]@@@@ .          @]@@@@ .    MV
)@@G@@      @]@@@@ .          @]@@@@ .          @]@@@@ .          @]@@@@ .    MW
)@@G@@      @]@@@@ .          @]@@@@/           @]@@@@ .          @]@@@@ .    MX
)@@G@@      @]@@@@ .          @G@@@@ . SUBROUTINE TO INSERT INDEX IN INDEX BLOMY
)@@G@@CK AT REL LOC GIVEN BY  A0    @G@@@@ .    WILL ALSO UPDATE # OF INDICES MZ
)@@G@@IN BLOCK AND IN RANDOM TABLE ENTRY  @]@@@@ .          @]@@@@INSIBL .    NA
)@@G@@@C@@@@          SX,H2     X11,RET1       . $H INSIBL  @G@@@@          LANB
)@@G@@        A1,IWADDR      . $P ADDRESS OF INDEX BLOCK TO A1    @G@@@@      NC
)@@G@@    AA        A0,A1          . $P A0 POINTS TO INDEX BLOCK LOC    @E@@@@ND
)@@G@@          LA        A2,INDEX       . $P INDEX TO A2         @E@@@@      NE
)@@G@@    SA        A2,0,A0        . $P INDEX TO INDEX BLOCK@C@@@@          LANF
)@@G@@        A2,RECADD         .         @E@@@@          LA        A2,0,A2   NG
)@@G@@     . $P DBP TO A2           @E@@@@          SA        A2,1,A0        .NH
)@@G@@ $P DBP TO INDEX BLOCK  @C@@@@          LA,H2     A3,1,A1        . $    NI
)@@G@@      @C@@@@          AA,U      A3,1           . $          @G@@@@      NJ
)@@G@@    SA,H2     A3,1,A1        . $P UPDATE # OF INDICES IN INDEX BLK@A@@@@NK
)@@G@@          LX        X8,RNDADD      .@A@@@@          AX        X8,RNDIDX NL
)@@G@@     .@A@@@@          LA        A1,0,X8        .@A@@@@          A,U     NM
)@@G@@  A1,1           .@G@@@@          S         A1,0,X8        . $P UPDATE #NN
)@@G@@ OF INDICES IN RAND TBL @C@@@@          LA,U      A0,1              .   NO
)@@G@@      @G@@@@          SA        A0,IBWRSW         . $P UPDATE INX BLK WRNP
)@@G@@ITE SW      @C@@@@          J         *RET1          . $E         @]@@@@NQ
)@@G@@ .          @C@@@@ . SUBROUTINE TO INITIALIZE TEMP FILE BLOCK     @]@@@@NR
)@@G@@ .          @]@@@@TINIT* .    @A@@@@          SX,H2     X11,RET1        NS
)@@G@@@A@@@@          LX        X8,(0,ZEROS)    @A@@@@          LX        X9,TNT
)@@G@@WADDR       @^@@@@          LXI,U     X9,1@A@@@@          LR,U      R1,TNU
)@@G@@BSIZE       @G@@@@          BT        X9,0,*X8       . $P ZERO OUT TEMP NV
)@@G@@FILE BLOCK        @A@@@@          J         *RET1           @]@@@@ .    NW
)@@G@@      @C@@@@ . SUBROUTINE TO FORM INDEX FOR RECORD          @]@@@@ .    NX
)@@G@@      @A@@@@FRMINX*   SX,H2     X11,RET1        @E@@@@          LA      NY
)@@G@@  A4,TBNUMW      . $P BLOCK NUMBER TO A4  @G@@@@          MSI,U     A4,TNZ
)@@G@@BSIZE      . $P WORD # AT BEGINNING OF BLK TO A4@G@@@@          AA      OA
)@@G@@  A4,TBRELW      . $P A4 HAS WORD # IN TEMP FILE      @E@@@@          DSOB
)@@G@@L       A4,36          . $P PREPARE TO DIVIDE   @E@@@@          DI,U    OC
)@@G@@  A4,28          . $P SECTOR NUMBER TO A4 @G@@@@                        OD
)@@G@@           . $P RELATIVE LOCATION W SECT TO A5  @A@@@@          SA      OE
)@@G@@  A4,INDEX        @G@@@@          S,S1      A5,INDEX       . $P STOR INDOF
)@@G@@EX FORMED IN INDEX      @A@@@@          J         *RET1           @]@@@@OG
)@@G@@ .          @C@@@@ . SUBROUTINE TO INITIALIZE INDEX BLOCK         @C@@@@OH
)@@G@@IINIT* .                            . $H        @A@@@@          SX,H2   OI
)@@G@@  X11,RET1        @A@@@@          LX        X8,(0,ZEROS)    @A@@@@      OJ
)@@G@@    LX        X9,IWADDR       @^@@@@          LXI,U     X9,1@A@@@@      OK
)@@G@@    LR,U      R1,IBSIZE       @E@@@@          BT        X9,0,*X8       .OL
)@@G@@ $P ZERO OUT INDEX BLOCK@A@@@@          LA        A4,IBNUMW       @C@@@@OM
)@@G@@          LX        X11,IWADDR        .         @G@@@@          SA,H1   ON
)@@G@@  A4,0,X11       . $P INITIALIZE # OF BLOCK IN HEADER @G@@@@          SZOO
)@@G@@        IBWRSW         . $P RESET SW TO INDICATE NO WRITE   @C@@@@      OP
)@@G@@    J         *RET1          . $E         @]@@@@ .          @G@@@@ . SUBOQ
)@@G@@ROUTINE TO CHECK IF THERE IS AVAILABLE SPACE FOR INDEX ENTRY IN   @A@@@@OR
)@@G@@ . INDEX BLOCK POINTED TO BY IWADDR @A@@@@ . PERCENT FILL IS IN LOCATIONOS
)@@G@@ IFILL@]@@@@ .          @]@@@@ISPACE .    @A@@@@          SX,H2     X11,OT
)@@G@@RET1        @A@@@@          LA,U      A5,IBSIZE       @A@@@@          ANOU
)@@G@@A       A5,IBRELW       @C@@@@          LA,U      A4,100            .   OV
)@@G@@      @E@@@@          AN,U      A4,IFILL          . $P 100-IFILL TO A4  OW
)@@G@@@C@@@@          LA,U      A1,IBSIZE         .         @G@@@@          MSOX
)@@G@@I       A1,A4             . $P # OF RESERVED WRDS TO A1     @C@@@@      OY
)@@G@@    DSL       A1,36             .         @C@@@@          DI,U      A1,1OZ
)@@G@@00            .         @C@@@@          TNZ       A2                .   PA
)@@G@@      @C@@@@          J         $+2               .         @C@@@@      PB
)@@G@@    AA,U      A1,1              .         @G@@@@          AN        A5,APC
)@@G@@1             . $P # OF FREE WORDS TO A5        @^@@@@          LA,U    PD
)@@G@@  A2,1@A@@@@          TLE       A2,A5           @A@@@@          J       PE
)@@G@@  ISPEX0          @A@@@@          J         *RET1           @^@@@@ISPEX0PF
)@@G@@    LA,U      A2,0@A@@@@          J         *RET1           @]@@@@ .    PG
)@@G@@      @G@@@@ . SUBROUTINE TO TRANSFER A BLOCK FROM LOCATION POINTED TO BPH
)@@G@@Y X8 TO     @E@@@@ . LOCATION POINTED TO BY X9. LENGTH OF BLOCK IN R1   PI
)@@G@@      @]@@@@ .          @^@@@@RTRANS*   +         0   @^@@@@          LXPJ
)@@G@@I,U     X8,1@^@@@@          LXI,U     X9,1@A@@@@          BT        X9,0PK
)@@G@@,*X8        @A@@@@          J         *RTRANS         @]@@@@ .          PL
)@@G@@@G@@@@ . SUBROUTINE TO WRITE INDEX BLOCK OUT IN A DOUBLE BUFFERED MANNERPM
)@@G@@.     @C@@@@ . UPDATE DBLE BUFFERED SWITCH AND ADDRESS.     @A@@@@ . USEPN
)@@G@@D FOR SEQUENTIAL WRITE        @A@@@@IBWRT1    SX,H2     X11,RET1        PO
)@@G@@@A@@@@          LA        A4,IBNUMW       @G@@@@          MSI,U     A4,IPP
)@@G@@BSIZE      . $P WRD NUMBER OF BLOCK BEG TO A4   @A@@@@          DSL     PQ
)@@G@@  A4,36           @E@@@@          DI,U      A4,28          . $P SECTOR NPR
)@@G@@UMBER TO A4 @E@@@@          TZ        A5             . $  NO REMAINDER APS
)@@G@@LLOWED@^@@@@          ER        ERR$@G@@@@          SA        A4,ISECT  PT
)@@G@@    . $P SAVE SECTOR NUMBER IN ISECT      @]@@@@ .          @]@@@@ .    PU
)@@G@@      @G@@@@          TP        IIOPKT+3       . $  IS INDEX I/O PACKET PV
)@@G@@FREE        @A@@@@          ER        WAIT$           @C@@@@          TZPW
)@@G@@,S1     IIOPKT+3       . $          @C@@@@          J         IIOERR    PX
)@@G@@     . $          @A@@@@          LA,U      A0,010          @G@@@@      PY
)@@G@@    SA        A0,IIOFUNC     . $P WRITE FUNCTION TO PACKET        @C@@@@PZ
)@@G@@          LA        A1,IWADDR      . $P         @G@@@@          SA      QA
)@@G@@  A1,IIOBUF      . $P BUFFER ADDRESS TO INX I/O PACKET@G@@@@          SAQB
)@@G@@        A4,IIOSECT     . $P SECTOR # TO I/O PACKET          @A@@@@      QC
)@@G@@    LA,U      A0,IIOPKT      .@G@@@@          ER        IO$            .QD
)@@G@@ $P ISSUE I/O WITHOUT WAIT          @A@@@@          TZ        IDBLSW    QE
)@@G@@      @A@@@@          J         IBWGT1          @^@@@@          LA,U    QF
)@@G@@  A0,1@G@@@@          SA        A0,IDBLSW      . $P SET IDBLSW TO POINT QG
)@@G@@TO BUFFER   @A@@@@          J         IBWGT2          @A@@@@IBWGT1    SZQH
)@@G@@        IDBLSW          @]@@@@IBWGT2      @E@@@@          SZ        IBWRQI
)@@G@@SW         . $P RESET IBWRSW        @E@@@@          LA,U      A0,2      QJ
)@@G@@     . $P RESET IBRELW        @A@@@@          SA        A0,IBRELW      .QK
)@@G@@@A@@@@          LA        A0,RNDIDX       @^@@@@          AA,U      A0,1QL
)@@G@@@A@@@@          SA        A0,RNDIDX       @A@@@@          LA        A0,IQM
)@@G@@BNUMW      .@^@@@@          AA,U      A0,1@G@@@@          SA        A0,IQN
)@@G@@BNUMW      . INCREMENT IBNUMW, NUM OF BLOCKS    @]@@@@ .          @A@@@@QO
)@@G@@          LA        A0,IDBLSW       @A@@@@          LA        A1,IBUF,A0QP
)@@G@@      @G@@@@          SA        A1,IWADDR      . $P UPDATE ADDRESS OF NXQQ
)@@G@@T INX BUF   @]@@@@ .          @C@@@@          J         *RET1          .QR
)@@G@@ $          @]@@@@ .          @G@@@@ . SUBROUTINE TO CHECK IF TEMP FILE QS
)@@G@@BLOCK, INDICATED BY TWADDR, HAS     @C@@@@ . SPACE FOR RECORD WHOSE LENGQT
)@@G@@TH IS IN RECLEN   @E@@@@ . RETURN STATUS IS IN REGISTER A2, 0 IS SUCCESSQU
)@@G@@FUL         @]@@@@ .          @]@@@@TSPACE*  .  @A@@@@          SX,H2   QV
)@@G@@  X11,RET1        @G@@@@          LA,U      A5,TBSIZE      . $P TEMP BLOQW
)@@G@@CK SIZE TO A5           @G@@@@          ANA       A5,TBRELW      . $P FRQX
)@@G@@EE SPACE LEFT TO A5           @G@@@@          LA        A2,RECLEN      .QY
)@@G@@ $P LENGTH OF RECORD TO A2          @C@@@@          AA,U      A2,EXTRAW QZ
)@@G@@        .         @G@@@@          TG        A5,A2          . $T LENGTH ORA
)@@G@@F RECORD > FREE SPACE   @E@@@@          J         TSPEX0         . $A NORB
)@@G@@,TSPEX0 YES       @G@@@@          L,U       A2,1           . $P NONZERO RC
)@@G@@RETURN STATUS           @C@@@@          J         *RET1          . $E   RD
)@@G@@      @]@@@@TSPEX0 .    @E@@@@          L,U       A2,0           . $P ZERE
)@@G@@RO RETURN STATUS  @C@@@@          J         *RET1          . $E         RF
)@@G@@@]@@@@ .          @G@@@@ . SUBROUTINE  TO WRITE TEMP FILE OUT IN A DOUBLRG
)@@G@@E BUFFERED MANNER       @E@@@@ . UPDATES DBL BUFFERED SWITCH AND BUFFER RH
)@@G@@ADDRESS           @C@@@@ . USED FOR SEQUENTIAL WRITE TO TEMP FILE       RI
)@@G@@@]@@@@ .          @]@@@@TBWRT1* .   @A@@@@          SX,H2     X11,RET1  RJ
)@@G@@      @A@@@@          LA        A4,TBNUMW       @G@@@@          MSI,U   RK
)@@G@@  A4,TBSIZE      . $P WRD NUMBER OF BLOCK  BEG TO A4  @A@@@@          DSRL
)@@G@@L       A4,36           @E@@@@          DI,U      A4,28          . $P SERM
)@@G@@CTOR NUMBER TO A4 @E@@@@          TZ        A5             . $  NO REMAIRN
)@@G@@NDER ALLOWED@^@@@@          ER        ERR$@A@@@@          SA        A4,TRO
)@@G@@SECT        @A@@@@          TP        TIOPKT+3       .@A@@@@          ERRP
)@@G@@        WAIT$          .@A@@@@          TZ,S1     TIOPKT+3       .@A@@@@RQ
)@@G@@          J         TIOERR         .@G@@@@          LA,U      A0,010    RR
)@@G@@     . $P WRITE FUNCTION CODE TO  A0      @G@@@@          SA        A0,TRS
)@@G@@IOFUNC     . $P WRITE FUNCTION CODE TO PACKET   @E@@@@          LA      RT
)@@G@@  A1,TWADDR      . $P BUFFER ADDRESS TO A1@G@@@@          SA        A1,TRU
)@@G@@IOBUF      . $P BUFFER ADDRESS TO TEMP I/O PKT  @G@@@@          SA      RV
)@@G@@  A4,TIOSECT     . $P SECTOR NUMBER TO I/O PACKET     @A@@@@          LARW
)@@G@@,U      A0,TIOPKT      .@G@@@@          ER        IO$            . $P ISRX
)@@G@@SUE THE I/O WITHOUT WAIT      @]@@@@ .          @A@@@@          TZ      RY
)@@G@@  TDBLSW         .@A@@@@          J         TBWGT1         .@A@@@@      RZ
)@@G@@    LA,U      A0,1           .@G@@@@          SA        A0,TDBLSW      .SA
)@@G@@ $P SET TDBLSW TO POINT TO TEMP BUF @A@@@@          J         TBWGT2    SB
)@@G@@      @A@@@@TBWGT1    SZ        TDBLSW          @]@@@@TBWGT2 .    @]@@@@SC
)@@G@@ .          @G@@@@          SZ        TBWRSW         . $P RESET TEMP BLOSD
)@@G@@CK WRITE SWITCH   @G@@@@          SZ        TBRELW         . $P RESET TESE
)@@G@@MP BLOCK REL WRITE LOC  @]@@@@ .          @A@@@@          LA        A0,TSF
)@@G@@DBLSW      .@A@@@@          LA        A1,TOBF1A,A0   .@G@@@@          SASG
)@@G@@        A1,TWADDR      . $P UPDATE ADDRESS OF NEXT TEMP BLCK@G@@@@      SH
)@@G@@    LA        A0,TBNUMW      . $P INCREMENT NUMBER OF TEMP FILE ; @C@@@@SI
)@@G@@                                      . BLOCKS  @A@@@@          AA,U    SJ
)@@G@@  A0,1           .@A@@@@          SA        A0,TBNUMW      .@C@@@@      SK
)@@G@@    J         *RET1          . $E         @]@@@@ .          @]@@@@ .    SL
)@@G@@      @]@@@@/           @]@@@@ .          @]@@@@ .          @A@@@@ . SEQSM
)@@G@@UENTIAL READ OF TEMP FILE     @]@@@@TF$SQR* .   @E@@@@          SX,H2   SN
)@@G@@  X11,RETURN     . $H SEQUENTIAL READ     @E@@@@          TNZ       IDFASO
)@@G@@SW    . $T ARE FILES ASSIGNED       @^@@@@          ER        ERR$@G@@@@SP
)@@G@@          TNZ       CRETSW         . $T FILE HAS BEEN CREATED SW SET    SQ
)@@G@@@E@@@@          J         SQRFLI            . $J SQRFLI           @E@@@@SR
)@@G@@SQRFOK    TNZ       FLSHSW         . $T EDIT BUFFERS        @G@@@@      SS
)@@G@@    J         SQRFSL         . $W SQRFLS FLUSH REST OF BUFFERS OUT@A@@@@ST
)@@G@@SQRGT1 . BUFFERS HAVE BEEN FLUSHED  @G@@@@          TNZ       IBNUMR    SU
)@@G@@     . $T IS BLOCK TO READ FIRST BLOCK    @E@@@@          J         SQRFSV
)@@G@@BL         . $A YES,SQRFBL NO       @A@@@@SQRGT2  . NOT FIRST INDEX BLOCSW
)@@G@@K READ@E@@@@          TNZ       SQRRIN         . $T ANY NEXT READ INDEX SX
)@@G@@@E@@@@          J         SQRNRI         . $A NO,SQRNRI YES       @A@@@@SY
)@@G@@          LA        A0,IRADDR       @A@@@@          AA        A0,IBRELR SZ
)@@G@@      @G@@@@          LA        A1,0,A0        . $P NEXT INDEX IN BLOCK TA
)@@G@@READ TO A1  @G@@@@          LA        A3,SQRRIN      . $P UPDATE NUMBER TB
)@@G@@OF INDICES REM    @A@@@@          ANA,U     A3,1           .@A@@@@      TC
)@@G@@    SA        A3,SQRRIN      .@G@@@@          SA        A1,RINDEX      .TD
)@@G@@ $P INDEX OF RECORD TO LOC RINDEX   @A@@@@          LA        A0,IBRELR TE
)@@G@@      @^@@@@          AA,U      A0,2@G@@@@          SA        A0,IBRELR TF
)@@G@@     . $P UPDATE REL LOC WITHIN INX BLK   @C@@@@          J         SQRGTG
)@@G@@T3         . $J SQRGT3  @E@@@@SQRNRI . NO NEXT READ INDEX IN CURRENT BLOTH
)@@G@@CK READ           @A@@@@          LA        A2,IRADDR       @G@@@@      TI
)@@G@@    TZ,H2     0,A2           . $T ANY OVERFLOW DEFINED FOR BLK    @E@@@@TJ
)@@G@@          J         SQRGT4         . $A YES,SQRGT4 NO       @E@@@@SQRGT5TK
)@@G@@ . NO OVERFLOW BLOCK DEFINED FOR CURRENT BLOCK        @G@@@@          TZTL
)@@G@@        REOFSW         . $T END OF FILE SWITCH SET          @E@@@@      TM
)@@G@@    J         SQREOF         . $A YES,SQREOF NO       @E@@@@          TNTN
)@@G@@Z       ROVFSW         . $T OVERFLOW SWITCH SET @E@@@@          J       TO
)@@G@@  SQRNOS         . $A NO,SQRNOS YES       @G@@@@          LA        A5,STP
)@@G@@QRORB      . $P ORIGINAL BLOCK NUMBER TO A4     @E@@@@          AA,U    TQ
)@@G@@  A5,1           . $P ADD 1 TO A4         @G@@@@          SA        A5,ITR
)@@G@@BNUMR      . $P STORE UPDATED BLK NUM IN IBNUMR @G@@@@          SZ      TS
)@@G@@  ROVFSW         . $P RESET OVERFLOW SWITCH           @C@@@@          J TT
)@@G@@        SQRGT6         . $J SQRGT6  @A@@@@SQRNOS . NO OVERFLOW SWITCH SETU
)@@G@@T     @G@@@@          LA        A5,IBNUMR      . $P NUMBER OF BLOCK TO ATV
)@@G@@5           @E@@@@          AA,U      A5,1           . $P ADD 1 TO A5   TW
)@@G@@      @G@@@@          SA        A5,IBNUMR      . $P UPDATE READ BLOCK NUTX
)@@G@@MBER        @C@@@@SQRGT6 . UPDATED BLOCK NUMBER TO NEXT BLOCK     @C@@@@TY
)@@G@@          TP        IIOPKT+3          .         @C@@@@          ER      TZ
)@@G@@  WAIT$             .         @C@@@@          TZ,S1     IIOPKT+3        UA
)@@G@@  .         @C@@@@          J         IIOERR            .         @A@@@@UB
)@@G@@          ANA,U     A5,1      .     @G@@@@          TE        A5,IBRSTA UC
)@@G@@     . $T IS IT THE SAME AS THE ORIG BLK  @C@@@@          ER        ERR$UD
)@@G@@           . $E EXIT    @A@@@@          LA,U      A0,2           .@G@@@@UE
)@@G@@          SA        A0,IBRELR      . $P RESET RELATIVE READ TO 2        UF
)@@G@@@G@@@@                                   . PREPARE TO UPDATE DBL BUFFEREUG
)@@G@@D SW  @A@@@@          TZ        IDBLSW         .@A@@@@          J       UH
)@@G@@  SQRGT7          @^@@@@          LA,U      A0,1@A@@@@          SA      UI
)@@G@@  A0,IDBLSW       @A@@@@          J         SQRGT8          @A@@@@SQRGT7UJ
)@@G@@    SZ        IDBLSW          @C@@@@SQRGT8 . UPDATED DOUBLE BUFFER SWITCUK
)@@G@@H           @A@@@@          LA        A0,IDBLSW       @A@@@@          LAUL
)@@G@@        A1,IBUF,A0      @E@@@@          SA        A1,IRADDR      . $P UPUM
)@@G@@DATE ADDR OF BLOCK@G@@@@          L,H2      A2,1,A1        . $P NUMBER OUN
)@@G@@F INDICES IN BLK TO A2  @G@@@@          S         A2,SQRRIN      . $P NUUO
)@@G@@MBER OF INDICES TO SQRRIN     @G@@@@          LA        A3,IBNUMR       UP
)@@G@@  . $P # OF RECORDS READ TO A3      @]@@@@ .          @C@@@@ . CHECK IF UQ
)@@G@@THERE ARE ANY MORE  BLOCKS TO READ  @]@@@@ .          @G@@@@          TGUR
)@@G@@        A3,IBNUMW      . $T # OF BLOCKS WRITTEN > # READ    @E@@@@      US
)@@G@@    J         SQRSEF         . $A NO,SQRSEF   YES     @A@@@@          L UT
)@@G@@        A1,IDBLSW      .@A@@@@          TZ        A1             .@A@@@@UU
)@@G@@          J         SQRGT9         .@A@@@@          LA,U      A1,1      UV
)@@G@@     .@A@@@@          J         SQRG10         .@A@@@@SQRGT9    SZ      UW
)@@G@@  A1             .@G@@@@SQRG10                             . $P   DOUBLEUX
)@@G@@ BUFFER SW TO A1        @E@@@@          LA        A2,IBNUMR      . $P BLUY
)@@G@@OCK NUMBER TO A2  @G@@@@          SA        A2,IBRSTA      . $P SAVE BLKUZ
)@@G@@ # FOR WHICH READ ST    @G@@@@          LMJ       X11,IBREAD     . $P STVA
)@@G@@ART READ OPERATION FOR NXT I B@G@@@@          J         SQRGT2         .VB
)@@G@@ $J SQRGT2 NEW INDEX BLOCK OBTAINED @A@@@@SQRSEF . NO MORE BLOCKS TO REAVC
)@@G@@D     @A@@@@          LA,U      A0,1           .@G@@@@          SA      VD
)@@G@@  A0,REOFSW      . $P SET END OF FILE SWITCH          @C@@@@          J VE
)@@G@@        SQRGT2         . $J SQRGT2  @]@@@@ .          @A@@@@SQRFBL . FIRVF
)@@G@@ST BLOCK TO BE READ     @G@@@@          SZ        IDBLSW         . $P SEVG
)@@G@@T DOUBLE BUFFER SWITCH TO ZERO@E@@@@          SZ        A1             .VH
)@@G@@ $P PROPER SWITCH TO A1 @E@@@@          LA,U      A2,0           . $P BLVI
)@@G@@OCK NUMBER TO A2  @G@@@@          LMJ       X11,IBREAD     . $W ISSUE REVJ
)@@G@@AD FOR 1ST BLOCK        @A@@@@          TP        IIOPKT+3       .@E@@@@VK
)@@G@@          ER        WAIT$          . $P WAIT FOR END OF READ@A@@@@      VL
)@@G@@    TZ,S1     IIOPKT+3       .@A@@@@          J         IIOERR         .VM
)@@G@@@A@@@@                                   .@A@@@@          LA        A0,IVN
)@@G@@DBLSW       @A@@@@          LA        A3,IBUF,A0      @G@@@@          SAVO
)@@G@@        A3,IRADDR      . $P UPDATE ADDRESS OF BLOCK         @A@@@@      VP
)@@G@@    LA,H2     A0,1,A3        .@G@@@@          SA        A0,SQRRIN      .VQ
)@@G@@ $P UPDATE  NUM OF INDICES IN BLK   @A@@@@          LA        A5,IBNUMR VR
)@@G@@     .@A@@@@          AA,U      A5,1           .@G@@@@          S       VS
)@@G@@  A5,IBNUMR      . $P UPDATE # OF BLOCKS READ         @G@@@@          TGVT
)@@G@@        A5,IBNUMW      . $T # OF BLKS WRITTEN > # READ      @E@@@@      VU
)@@G@@    J         SQEOF1         . $A NO,SQEOF1 YES       @G@@@@            VV
)@@G@@                       . $P PREPARE TO START NEXT OP [ READ]@A@@@@      VW
)@@G@@    LA        A1,IDBLSW       @^@@@@          TZ        A1  @A@@@@      VX
)@@G@@    J         SQRG11          @^@@@@          LA,U      A1,1@A@@@@      VY
)@@G@@    J         SQRG12          @^@@@@SQRG11    SZ        A1  @G@@@@SQRG12VZ
)@@G@@ .                           . $P PROPER DBL BUFFER SW + A1       @A@@@@WA
)@@G@@          LA        A2,IBNUMR       @G@@@@          SA        A2,IBRSTA WB
)@@G@@     . $P SAVE BLK # FOR WHICH READ START @C@@@@          LMJ       X11,WC
)@@G@@IBREAD     . $W IBREAD  @G@@@@                                   . $P DOWD
)@@G@@ NOT  WAIT FOR THIS I/O       @]@@@@SQRG13 .    @A@@@@          LA      WE
)@@G@@  A0,IRADDR      .@G@@@@          TNZ,H2    1,A0           . $T ANY INDIWF
)@@G@@CES IN BLOCK READ       @G@@@@          J         SQRNRI         . $A NOWG
)@@G@@,SQRNRI  YES,SQRGT2           @A@@@@          J         SQRGT2         .WH
)@@G@@@]@@@@ .          @]@@@@SQEOF1 .    @^@@@@          LA,U      A3,1@G@@@@WI
)@@G@@          SA        A3,REOFSW      . $P SET READ END OF FILE SWITCH     WJ
)@@G@@@C@@@@          J         SQRG13         . $J SQRG13  @]@@@@ .          WK
)@@G@@@A@@@@SQRGT4 . OVERFLOW DEFINED FOR BLOCK @C@@@@       . NO MORE INDICESWL
)@@G@@ IN ORIGINAL BLOCK      @G@@@@          TZ        ROVFSW         . $T WAWM
)@@G@@S THIS BLOCK AN OVERFLOW BLOCK@E@@@@          J         SQROBL         .WN
)@@G@@ $A YES,SQROBL NO       @^@@@@          LA,U      A0,1@E@@@@          SAWO
)@@G@@        A0,ROVFSW      . $P SET OVERFLOW SWITCH @A@@@@          LA      WP
)@@G@@  A1,IBNUMR      .@G@@@@          SA        A1,SQRORB      . $P SAVE ORIWQ
)@@G@@GINAL BLOCK # IN SQRORB @C@@@@SQROBL . NEED AN OVERFLOW INDEX BLOCK     WR
)@@G@@      @G@@@@          TP        IIOPKT+3       . $P WAIT FOR PREVIOUS IOWS
)@@G@@ TO COMPLETE@A@@@@          ER        WAIT$           @A@@@@          TZWT
)@@G@@,S1     IIOPKT+3        @A@@@@          J         IIOERR          @G@@@@WU
)@@G@@          LA        A1,IOBF1A      . $P ADDRESS OF INDEX  BLOCK  TO A1  WV
)@@G@@@A@@@@          LA        A2,IRADDR      .@G@@@@          LA,H2     A3,0WW
)@@G@@,A2        . $P # OF OVERFLOW BLOCK TO A3       @G@@@@          MSI,U   WX
)@@G@@  A3,IBSIZE      . $P WRD # AT BEG OF BLK TO A3       @E@@@@          DSWY
)@@G@@L       A3,36          .    PREPARE TO DIVIDE   @E@@@@          DI,U    WZ
)@@G@@  A3,28          . $P SECTOR NUMBER TO A3 @E@@@@          TZ        A4  XA
)@@G@@           .    NO REMAINDER ALLOWED@A@@@@          ER        ERR$      XB
)@@G@@     .@G@@@@          LA,U      A4,020         . $P READ FUNCTION CODE TXC
)@@G@@O A4        @G@@@@          SA        A4,IIOFUNC     . $P READ FN CODE TXD
)@@G@@O PACKET          @G@@@@          SA        A3,IIOSECT     . $P SECTOR NXE
)@@G@@UMBER TO PACKET         @G@@@@          SA        A1,IIOBUF      . $P BUXF
)@@G@@FFER ADDRESS TO I/O PKT       @A@@@@          L,U       A0,IIOPKT      .XG
)@@G@@@E@@@@          ER        IO$            . $W IO$ ISSUE THE I/O   @G@@@@XH
)@@G@@          TP        IIOPKT+3       . $P WAIT FOR I/O TO COMPLETE        XI
)@@G@@@A@@@@          ER        WAIT$           @A@@@@          TZ,S1     IIOPXJ
)@@G@@KT+3        @A@@@@          J         IIOERR          @A@@@@          LAXK
)@@G@@        A1,IOBF1A      .@G@@@@          SA        A1,IRADDR      . $P UPXL
)@@G@@DATE IRADDR BY NEW OVF BLK    @^@@@@          LA,U      A2,2@G@@@@      XM
)@@G@@    SA        A2,IBRELR      . $P UPDATE IBRELR TO POINT TO REL 2 @G@@@@XN
)@@G@@          LA        A3,IBONRR      . $P UPDATE # OF OVERFLOW BLOCKS READXO
)@@G@@@^@@@@          AA,U      A3,1@A@@@@          SA        A3,IBONRR       XP
)@@G@@@A@@@@          LX        X8,IRADDR      .@G@@@@          TNZ,H2    1,X8XQ
)@@G@@           . $T ANY INDICES IN THIS BLOCK       @E@@@@          J       XR
)@@G@@  SQRNOI         . $A NO,SQRNOI YES       @G@@@@          LA,H2     A4,1XS
)@@G@@,X8        . $P # OF INDICES IN BLOCK TO A4     @G@@@@          SA      XT
)@@G@@  A4,SQRRIN      . $P UPDATE SQRRIN BY # OF REM INDX  @A@@@@          AXXU
)@@G@@        X8,IBRELR       @E@@@@          LA        A5,0,X8        . $P NEXV
)@@G@@XT INDEX TO A5    @G@@@@          SA        A5,RINDEX      . $P INDEX OFXW
)@@G@@ RECORD TO RINDEX       @^@@@@          ANA,U     A4,1@G@@@@          SAXX
)@@G@@        A4,SQRRIN      . $P UPDATE # OF INDICES REMAINING   @A@@@@      XY
)@@G@@    LA        A0,IBRELR       @^@@@@          AA,U      A0,2@G@@@@      XZ
)@@G@@    SA        A0,IBRELR      . $P UPDATE RELATIVE INDX BLK PTR    @A@@@@YA
)@@G@@          J         SQRGT3          @C@@@@SQRNOI . NO MORE INDICES AVAILYB
)@@G@@ABLE IN THIS BLOCK@G@@@@          TNZ,H2    0,X8           . $T ANY OVERYC
)@@G@@FLOW BLOCKS DEFINED     @E@@@@          J         SQRGT5         . $A NOYD
)@@G@@,SQRGT5 YES,SQRGT4@C@@@@          J         SQRGT4         . $          YE
)@@G@@@E@@@@SQRGT3 . INDEX FOUND, BREAK DOWN AND GET TEMP FILE BLOCK    @A@@@@YF
)@@G@@          LA        A1,RINDEX      .@A@@@@          LSSL      A1,6      YG
)@@G@@     .@E@@@@          SSL       A1,6           . $P SECTOR NUMBER TO A1 YH
)@@G@@@E@@@@          DSL       A1,36          .    PREPARE TO DIVIDE   @E@@@@YI
)@@G@@          DI,U      A1,TBSECT      . $P BLOCK NUMBER TO A1  @G@@@@      YJ
)@@G@@                             . $P SECTOR WITHIN BLOCK TO A2       @A@@@@YK
)@@G@@          LA        A3,TBSQWN      .@A@@@@          ANA,U     A3,1      YL
)@@G@@     .@G@@@@          TG        A3,A1          . $T TEMP BLK NUM > LARGEYM
)@@G@@ST SEQ WR BL@G@@@@          J         SQRG14         . $J SQRG14  BLOCK YN
)@@G@@IS NOT OVERFLOW   @G@@@@          LMJ       X11,TOREAD     . $W TOREAD  YO
)@@G@@ OVERFLOW BLOCK         @C@@@@          J         SQRG15         . $J SQYP
)@@G@@RG15  @C@@@@SQRG14 . BLOCK WHERE RECORD IS NOT OVERFLOW     @C@@@@      YQ
)@@G@@    LMJ       X11,TBREAD     . $W TBREAD  @G@@@@                        YR
)@@G@@           . UPON RETURN SECTAD HAS SECTOR ADDR @A@@@@SQRG15    LA      YS
)@@G@@  A0,SECTAD       @G@@@@          AA,S1     A0,RINDEX      . $P ADDRESS YT
)@@G@@OF RECORD TO A0         @E@@@@          LA,H2     A5,0,A0        . $P REYU
)@@G@@CORD LENGTH TO A5 @C@@@@          ANA,U     A5,EXTRAW         .         YV
)@@G@@@B@[@@          ANA,U     A5,EXTRAW         .   @B@@@[          ANA,U   YW
)@@G@@  A5,1              .   @G@@@@          SA,H2     A5,2,X10       . $P REYX
)@@G@@CORD LENGTH TO CALLING PACKET @^@@@@          AA,U      A0,1@G@@@@      YY
)@@G@@    SA        A0,1,X10       . $P ADDRESS OF RECORD TO PACKET     @A@@@@YZ
)@@G@@          LA        A1,RECNMR       @^@@@@          AA,U      A1,1@E@@@@ZA
)@@G@@          SA        A1,0,X10       . $P RECORD # TO PACKET  @G@@@@      ZB
)@@G@@    SA        A1,RECNMR      . $P UPDATE # OF RECORDS READ        @G@@@@ZC
)@@G@@          SZ,T1     2,X10          . $P ZERO STATUS (SUCCESSFUL)        ZD
)@@G@@@C@@@@          J         *RETURN        . $E EXIT    @C@@@@SQREOF . ENDZE
)@@G@@ OF FILE NO MORE RECORDS TO READ    @^@@@@          LA,U      A0,1@A@@@@ZF
)@@G@@          SA,T1     A0,2,X10        @A@@@@          J         *RETURN   ZG
)@@G@@      @]@@@@SQRFLI .    @G@@@@          LMJ       X11,IBWRT1        . $WZH
)@@G@@ IBWRT1 FLUSH INDEX BUF       @G@@@@          TP        IIOPKT+3        ZI
)@@G@@  . $P MAKE SURE I/O IS DONE        @C@@@@          ER        WAIT$     ZJ
)@@G@@        .         @G@@@@          TZ,S1     IIOPKT+3          . $P MAKE ZK
)@@G@@SURE I/O IS OK          @C@@@@          J         IIOERR            .   ZL
)@@G@@      @C@@@@          LA,U      A0,1              .         @E@@@@      ZM
)@@G@@    SA        A0,CRETSW         . $P SET CRETSW       @G@@@@          SAZN
)@@G@@        A0,WRITSW         . $P SET WRITSW TO INDICATE EOW   @C@@@@      ZO
)@@G@@    LA        A1,TBNUMW         .         @I@@@@          SA        A1,TZP
)@@G@@BSQWN         . $P SAVE # OF BLOCKS READ FOR EDIT           @C@@@@      ZQ
)@@G@@    LA        A1,IBNUMW         .         @E@@@@          SA        A1,IZR
)@@G@@BNUMWO        . $P UPDATE IBNUMWO   @C@@@@          LA        A2,RECNMW ZS
)@@G@@        .         @G@@@@          SA        A2,RECNMC         . $P SAVE ZT
)@@G@@== OF RECORDS IN RECNMC @C@@@@          J         SQRFOK            .$J ZU
)@@G@@SQRFOK@]@@@@/           @]@@@@ .          @]@@@@ .          @]@@@@ .    ZV
)@@G@@      @]@@@@ .          @]@@@@ .          @]@@@@ .          @E@@@@ . SUBZW
)@@G@@ROUTINE TO DOUBLE BUFFER TEMPORARY FILE BLOCKS.       @G@@@@ . UPON ENTRZX
)@@G@@Y, A1 HAS BLOCK NUM, A2 HAS REL SECTOR WITHIN BLOCK         @G@@@@ . UPOZY
)@@G@@N RETURN, LOCATION SECTAD WILL POINT TO BEG OF SECTOR IN BUFFER   @]@@@@ZZ
)@@G@@ .          @]@@@@TBREAD .    @C@@@@          SX,H2     X11,RET1       .AA
)@@G@@ $H TBREAD  @G@@@@          TNZ       TBNUMR         . $T ANY TEMP FILE AB
)@@G@@BLOCKS READ       @E@@@@          J         TBRNTB         . $A NO,TBRNTAC
)@@G@@B YES       @A@@@@TBRGT1 . A BLOCK HAS BEEN READ      @A@@@@          LAAD
)@@G@@        A4,TBNUMR       @G@@@@          ANA,U     A4,1           . $P LAAE
)@@G@@ST BLOCK NUMBER READ TO A4    @G@@@@          TLE       A4,A1          .AF
)@@G@@ $T BLK # WANTED <= BLK # READ      @E@@@@          J         TBRNIN    AG
)@@G@@     . $A NO,TBRNIN YES       @G@@@@          TE        A4,A1          .AH
)@@G@@ $T BLK # WANTED = BLK # READ       @C@@@@          ER        ERR$      AI
)@@G@@     . $E EXIT    @C@@@@          J         TBGETS         . $J TBGETS  AJ
)@@G@@@C@@@@TBRNIN . BLOCK WANTED IS NOT AVAILABLE          @G@@@@          TPAK
)@@G@@        TIOPKT+3       . MAKE SURE I/O PACKET IS FREE       @A@@@@      AL
)@@G@@    ER        WAIT$           @G@@@@          TZ,S1     TIOPKT+3       .AM
)@@G@@ MAKE SURE LAST I/O WAS OK          @A@@@@          J         TIOERR    AN
)@@G@@     .@G@@@@                                   . $ ANOTHER BLOCK MUST BEAO
)@@G@@ READY NOW  @A@@@@          LA        A5,TBNUMR      .@A@@@@          TZAP
)@@G@@        TDBLSW         .@A@@@@          J         TBRGT2         .@A@@@@AQ
)@@G@@          LA,U      A0,1           .@G@@@@          SA        A0,TDBLSW AR
)@@G@@     . $P UPDATE TEMP FILE DBLE BUF SW    @A@@@@          J         TBRGAS
)@@G@@T3         .@A@@@@TBRGT2    SZ        TDBLSW         .@]@@@@TBRGT3 .    AT
)@@G@@@G@@@@          TE        A5,TBRSTA      . $T IS NEXT BLOCK SAME AS STARAU
)@@G@@TED   @E@@@@          ER        ERR$           . $E ERROR, SHOULD BE    AV
)@@G@@@C@@@@          AA,U      A5,1              .         @G@@@@          SAAW
)@@G@@        A5,TBNUMR   . $P UPDATE BLOCK READ TO BLOCK READ + 1@G@@@@      AX
)@@G@@    LA        A0,TDBLSW      . $P UPDATE TRADDR (ADDR OF TEMP BLK)@A@@@@AY
)@@G@@          LA        A4,TBUF,A0     .@A@@@@          SA        A4,TRADDR AZ
)@@G@@     .@G@@@@          LMJ       X11,TBRDE1     . $W TBRDE1 ST RDE OF NEXBA
)@@G@@T BLK IF ANY@G@@@@                                   . $P WILL NOT WAIT BB
)@@G@@FOR NEW I/O       @A@@@@          LA        A5,TBNUMR      .@A@@@@      BC
)@@G@@    ANA,U     A5,1           .@G@@@@          TNE       A1,A5          .BD
)@@G@@ $T BLOCK READ SAME AS BLOCK WANTED @E@@@@          J         TBGETS    BE
)@@G@@     . $A YES,TBGETS NO       @G@@@@          TNZ       TEOFSW         .BF
)@@G@@ $T IS TEMP FILE END OF FILE SW SET @E@@@@          J         TBRNIN    BG
)@@G@@     . $A NO,TBRNIN YES       @C@@@@          ER        ERR$           .BH
)@@G@@ $E EXIT    @G@@@@TBRNTB . NO TEMP BLOCKS HAVE BEEN READ YET, READ BLOCKBI
)@@G@@ # IN A1          @C@@@@       . REGISTERS A1 AND A2 NOT TO BE CHANGED  BJ
)@@G@@@A@@@@          SZ        TDBLSW          @G@@@@          TP        TIOPBK
)@@G@@KT+3       . MAKE SURE I/O PACKET IS FREE       @A@@@@          ER      BL
)@@G@@  WAIT$           @A@@@@          TZ,S1     TIOPKT+3        @A@@@@      BM
)@@G@@    J         TIOERR          @A@@@@          LA        A3,A1          .BN
)@@G@@@E@@@@          MSI,U     A3,TBSECT      . $P SECTOR NUMBER TO A3 @E@@@@BO
)@@G@@          LA        A4,TBUF        . $P BUFFER ADDRESS TO A4@E@@@@      BP
)@@G@@    LA,U      A5,020         . $P I/O READ CODE TO A5 @E@@@@          SABQ
)@@G@@        A5,TIOFUNC     . $P I/O CODE TO TIOPKTT @G@@@@          SA      BR
)@@G@@  A4,TIOBUF      . $P BUFFER ADDRESS TO TIOPKT        @G@@@@          SABS
)@@G@@        A3,TIOSECT     . $P SECTOR NUMBER TO TIOPKT         @E@@@@      BT
)@@G@@    LA,U      A0,TIOPKT      . $P ISSUE THE I/O       @^@@@@          ERBU
)@@G@@        IO$ @G@@@@          TP        TIOPKT+3       . $P WAIT FOR I/O TBV
)@@G@@O COMPLETE        @A@@@@          ER        WAIT$           @A@@@@      BW
)@@G@@    TZ,S1     TIOPKT+3        @A@@@@          J         TIOERR          BX
)@@G@@@G@@@@          SA        A4,TRADDR      . $P UPDATE TEMP FILE ADDRESS  BY
)@@G@@      @A@@@@          L         A5,A1           @^@@@@          AA,U    BZ
)@@G@@  A5,1@G@@@@          SA        A5,TBNUMR      . $P UPDATE # OF TEMP FILCA
)@@G@@ES READ     @G@@@@          LMJ       X11,TBRDE1     . $W TBRDE1 ST READCB
)@@G@@ OF NEXT BL IF ANY@C@@@@          J         TBRGT1         . $J  TBRGT1 CC
)@@G@@@]@@@@ .          @A@@@@TBGETS . BLOCK WANTED IS IN CORE    @C@@@@      CD
)@@G@@    LA        A0,TDBLSW         .         @G@@@@          LA        A0,TCE
)@@G@@BUF,A0        . $P ADDR OF TEMP BUF TO A0       @G@@@@          MSI,U   CF
)@@G@@  A2,28       . $P REL WRD DISPLACEMENT TO A2         @G@@@@          AACG
)@@G@@        A0,A2       . $P ADDRESS OF SECTOR WANTED TO A0     @G@@@@      CH
)@@G@@    S         A0,SECTAD   . $P ADDR OF SECTOR WANTED TO SECTAD    @C@@@@CI
)@@G@@          J         *RET1       . $P EXIT       @]@@@@ .          @E@@@@CJ
)@@G@@TBRDE1 . SUBROUTINE TO START READ OF NEXT TEMP BLOCK IF ANY @C@@@@      CK
)@@G@@    SX,H2      X11,RET2       .           @G@@@@          LA        A5,TCL
)@@G@@BNUMR      . $P A5 CONTAINS NEXT REL BLK NUMBER @G@@@@          TG      CM
)@@G@@  A5,TBSQWN      . $T ANY MORE BLOCKS TO BE READ      @E@@@@          J CN
)@@G@@        TBRGT4         . $A NO,TBRGT4 YES       @G@@@@                  CO
)@@G@@                 . START NEXT READ OPERATION (NO WAIT)@A@@@@          LACP
)@@G@@        A0,TDBLSW      .@A@@@@          TZ        A0             .@A@@@@CQ
)@@G@@          J         TBRGT5         .@A@@@@          LA,U      A0,1      CR
)@@G@@     .@A@@@@          J         TBRGT6         .@G@@@@TBRGT5    SZ      CS
)@@G@@  A0             . $P A0 HAS THE CORRECT DBL BUF SW   @E@@@@TBRGT6    LACT
)@@G@@        A4,TBUF,A0     . $P BUFFER ADDRESS TO A4@A@@@@          SA      CU
)@@G@@  A5,TBRSTA       @E@@@@          MSI,U     A5,TBSECT      . $P SECTOR NCV
)@@G@@UMBER TO A5 @G@@@@          TP        TIOPKT+3       . $P WAIT TILL TIOPCW
)@@G@@KT IS CLEAR       @A@@@@          ER        WAIT$          .@A@@@@      CX
)@@G@@    TZ,S1     TIOPKT+3       .@G@@@@          J         TIOERR         .CY
)@@G@@ MAK SURE LAST I/O WAS OK           @G@@@@          SA        A4,TIOBUF CZ
)@@G@@     . $P I/O BUFFER ADDR TO TIOPKT       @G@@@@          SA        A5,TDA
)@@G@@IOSECT     . $P I/O SECTOR NUMBER TO TIOPKT     @G@@@@          LA,U    DB
)@@G@@  A0,020         . $P READ FUNCTION CODE TO A0        @G@@@@          SADC
)@@G@@        A0,TIOFUNC     . $P READ FUNCTION CODE TO TIOPKT    @G@@@@      DD
)@@G@@    LA,U      A0,TIOPKT      . $P ISSUE THE I/O WITHOUT WAIT      @A@@@@DE
)@@G@@          ER        IO$            .@C@@@@          J         *RET2     DF
)@@G@@     . $E EXIT    @]@@@@TBRGT4 .    @^@@@@          LA,U      A0,1@G@@@@DG
)@@G@@          SA        A0,TEOFSW      . $P SET TEMP END OF FILE SWITCH     DH
)@@G@@@C@@@@          J         *RET2          . $E EXIT    @]@@@@ .          DI
)@@G@@@G@@@@ . SUBROUTINE TO INITIATE A READ OPERATION FOR  INDEX BLOCK WHOSE DJ
)@@G@@REL   @G@@@@ . NUMBER IS IN REGISTER A2. THE PROPER DOUBLE BUFFERED SWITDK
)@@G@@CH IS IN    @A@@@@ . REGISTER A1 (VALUE 0 OR 1)       @]@@@@ .          DL
)@@G@@@]@@@@IBREAD .    @C@@@@          SX,H2    X11,RET1       . $H IBREAD   DM
)@@G@@@G@@@@          TP        IIOPKT+3       . $  MAKE SURE IIOPKT IS FREE  DN
)@@G@@      @A@@@@          ER        WAIT$           @A@@@@          TZ,S1   DO
)@@G@@  IIOPKT+3        @A@@@@          J         IIOERR          @G@@@@      DP
)@@G@@    LA,U      A3,020         . $P I/O READ FN CODE TO A3          @E@@@@DQ
)@@G@@          SA        A3,IIOFUNC     . $P I/O CODE TO PACKET  @E@@@@      DR
)@@G@@    LA        A4,IBUF,A1     . $P BUFFER ADDRESS TO A4@G@@@@          SADS
)@@G@@        A4,IIOBUF      . $P BUFFER ADDRESS TO PACKET        @E@@@@      DT
)@@G@@    LA        A5,A2          . $P REL BLK # TO A5     @E@@@@          MSDU
)@@G@@I,U     A5,IBSECT      . $P SECTOR # TO A5      @G@@@@          SA      DV
)@@G@@  A5,IIOSECT     . $P SECTOR NUMBER TO IIOPKT         @A@@@@          LADW
)@@G@@,U      A0,IIOPKT      .@C@@@@          ER        IO$            . $W IODX
)@@G@@$     @G@@@@          SA        A2,IBRSTA      . $P SAVE BLK NUM FOR WHIDY
)@@G@@CH READ ST  @A@@@@          J         *RET1           @]@@@@ .          DZ
)@@G@@@E@@@@ . SUBROUTINE TO READ OVERFLOW TEMP FILE BLOCKS INTO TOBF1A @G@@@@EA
)@@G@@ . THE RELATIVE BLOCK NUMBER IS IN A1, THE SECTOR NUMBER WITHIN BLOCK   EB
)@@G@@@^@@@@ . IS IN REGISTER A2.   @G@@@@ . UPON RETURN, LOCATION SECTAD WILLEC
)@@G@@ HAVE THE ADDRESS OF SECTOR IN CORE @]@@@@ .          @]@@@@TOREAD .    ED
)@@G@@@C@@@@          SX,H2     X11,RET1       . $H TOREAD  @A@@@@          LAEE
)@@G@@        A0,TBONRR      .@G@@@@          TNE       A1,A0          . $T OVEF
)@@G@@F BLK READ = BLK WANTED       @E@@@@          J         TORGT1         .EG
)@@G@@ $A YES,TORGT1 NO       @A@@@@          LA        A3,A1          .@E@@@@EH
)@@G@@          MSI,U     A3,TBSECT      . $P SECTOR NUMBER TO A3 @E@@@@      EI
)@@G@@    LA        A4,TOBF1A      . $P BUFFER ADDRESS TO A4@G@@@@          LAEJ
)@@G@@,U      A5,020         . $P I/O READ FN CODE TO A5          @G@@@@      EK
)@@G@@    TP        TIOPKT+3       . $P MAKE SURE THAT PACKET IS FREE   @A@@@@EL
)@@G@@          ER        WAIT$          .@G@@@@          TZ,S1     TIOPKT+3  EM
)@@G@@     . $P MAKE SURE THAT LAST I/O WAS OK  @A@@@@          J         TIOEEN
)@@G@@RR         .@G@@@@          SA        A3,TIOSECT     . $P SECTOR NUMBER EO
)@@G@@TO TEMP I/O PACKET@G@@@@          SA        A4,TIOBUF      . $P BUFFER AEP
)@@G@@DDRESS TO TIOPKT        @E@@@@          SA        A5,TIOFUNC     . $P I/EQ
)@@G@@O CODE TO TIOPKT  @C@@@@          LA,U      A0,TIOPKT         .         ER
)@@G@@@G@@@@          ER        IO$               . $W ISSUE THE IO TO TEMP FIES
)@@G@@LE    @G@@@@          TP        TIOPKT+3       . $P WAIT FOR I/O TO COMPET
)@@G@@LETE        @A@@@@          ER        WAIT$          .@G@@@@          TZEU
)@@G@@,S1     TIOPKT+3       . $P MAKE SURE I/O WAS GOOD          @A@@@@      EV
)@@G@@    J         TIOERR         .@G@@@@          SA        A4,TRADDR       EW
)@@G@@  . $P SAVE BUF ADDR IN TRADDR      @G@@@@          SA        A1,TBONRR EX
)@@G@@        . $P SAVE # OF OVF BLK READ (REL) @]@@@@TORGT1 .    @C@@@@      EY
)@@G@@    LA        A5,A2          . $          @G@@@@          MSI,U     A5,2EZ
)@@G@@8          . $P RELATIVE # OF WRDS TO A5        @G@@@@          AA      FA
)@@G@@  A5,TOBF1A      . $P ADDRESS OF SECTOR TO A5         @G@@@@          SAFB
)@@G@@        A5,SECTAD      . $  ADDR OF SECTOR TO LOC SECTAD    @A@@@@      FC
)@@G@@    J         *RET1           @]@@@@ .          @]@@@@ .          @]@@@@FD
)@@G@@SQRFSL .    @G@@@@          LMJ       X11,TBWRT1        . $P WRITE LAST FE
)@@G@@TEMP BLOCK OUT    @A@@@@          TP        TIOPKT+3        @C@@@@      FF
)@@G@@    ER        WAIT$             .         @C@@@@          TZ,S1     TIOPFG
)@@G@@KT+3          .         @C@@@@          J         TIOERR            .   FH
)@@G@@      @I@@@@          LX        X9,IBRTAD         . $P ADDR OF INX CORE FI
)@@G@@REF TAB TO X9           @G@@@@          LR        R1,IBFENT         . $PFJ
)@@G@@ # OF ENTRIES TO R1           @]@@@@FLSLP3 .    @E@@@@          JGD     FK
)@@G@@  R1,$+2            . $T ARE WE DONE      @E@@@@          J         FLSGFL
)@@G@@T1            . $A YES,FLSGT1 NO    @E@@@@          LA,H1     A1,0,X9   FM
)@@G@@        . $P INX BLK NUM TO A1@G@@@@          LA,H2     A2,0,X9         FN
)@@G@@  . $P INX BLK ADDR TO A2           @G@@@@          LA,U      A3,010    FO
)@@G@@        . $P WRITE FUNCTION TO A3         @G@@@@          LMJ       X11,FP
)@@G@@IBIOW         . $W IBIOW WRITE I BLOCK OUT      @E@@@@          AX,U    FQ
)@@G@@  X9,1              . $P INCREMENT PTR    @E@@@@          J         FLSLFR
)@@G@@P3            . $J FLSLP3           @]@@@@FLSGT1 .    @I@@@@          LXFS
)@@G@@        X9,TBRTAD         . $P ADDR OF DATA CORE REF BLK TO X9          FT
)@@G@@@G@@@@          LR        R1,TBFENT         . $P # OF TEMP BLKS TO R1   FU
)@@G@@      @]@@@@FLSLP4 .    @E@@@@          JGD       R1,$+2            . $TFV
)@@G@@ ARE WE DONE      @E@@@@          J         FLSGT2            . $A YES,FFW
)@@G@@LSGT2 NO    @G@@@@          LA,H1     A1,0,X9           . $P TEMP BLK NUFX
)@@G@@M TO A1           @G@@@@          LA,H2     A2,0,X9           . $P TEMP FY
)@@G@@BLK ADDR TO A2          @G@@@@          LA,U      A3,010            . $WFZ
)@@G@@ WRITE FUNCTION CODE TO A3    @C@@@@          LMJ       X11,TBIOW       GA
)@@G@@  . $W TBIOW@E@@@@          AX,U      X9,1              . $P INCREMENT PGB
)@@G@@TR    @E@@@@          J         FLSLP4            . $J FLSLP4           GC
)@@G@@@]@@@@FLSGT2 .    @]@@@@ .          @]@@@@ .          @A@@@@ . FLUSH OVEGD
)@@G@@RFLOW INDEX BLOCKS      @]@@@@ .          @]@@@@ .          @C@@@@      GE
)@@G@@    LX        X9,IOVFRAD             .    @G@@@@          LR        R1,IGF
)@@G@@OBFENT        . # OF OVF BLOCKS TO R1           @]@@@@FLSLP5 .    @E@@@@GG
)@@G@@          JGD       R1,$+2            . $T ARE WE DONE      @E@@@@      GH
)@@G@@    J         FLSGT3            . $J FLSGT3           @G@@@@          LAGI
)@@G@@,H1     A1,0,X9           . OVF INX BLOCK NUM TO A1         @G@@@@      GJ
)@@G@@    LA,H2     A2,0,X9           . OVF INDEX BLOCK ADDR TO A2      @C@@@@GK
)@@G@@          LA,U      A3,010            .         @I@@@@ .        L$SNAP  GL
)@@G@@  'OVFLSH',2,1,IOBFENT                                .           @E@@@@GM
)@@G@@          LMJ       X11,IBIOW         . $W IBIOW ISSUE WRITE@E@@@@      GN
)@@G@@    AX,U      X9,1              . $P ADVANCE POINTER  @E@@@@          J GO
)@@G@@        FLSLP5            . $J FLSLP4           @]@@@@FLSGT3 .    @]@@@@GP
)@@G@@ .          @]@@@@ .          @C@@@@          LA,U      A0,1            GQ
)@@G@@  .         @G@@@@          SA        A0,FLSHSW         . $P SET EDIT BUGR
)@@G@@F FLUSH SW        @A@@@@ . FLUSH EDIT BUFFERS IF ANY        @C@@@@      GS
)@@G@@    J         SQRGT1            .         @]@@@@/           @]@@@@ .    GT
)@@G@@      @G@@@@ . SUBROUTINE TO ASSIGN THE INDEX AND TEMPORARY FILES FOR THGU
)@@G@@E TEMP FILE @G@@@@ . ACCESS METHOD. THE SUBROUTINE WILL ISSUE MCORE$ CALGV
)@@G@@LS TO GET THE     @^@@@@ . NECESSARY BUFFERS    @E@@@@ . WILL ALSO MCOREGW
)@@G@@ SPACE FOR THE NECESSARY TABLES           @]@@@@FILASG .    @C@@@@      GX
)@@G@@    SX,H2     X11,RET1          .         @G@@@@          LA,U      A0,AGY
)@@G@@SGIA       . $P TRY TO ASSIGN,A FIRST (INDEX FI)@C@@@@          ER      GZ
)@@G@@  CSF$           . $W CSF$    @E@@@@          JP        A0,IFUSE       .HA
)@@G@@ $T FACILITY REJECTED   @E@@@@                                   . $A  NHB
)@@G@@O,IFUSE YES       @G@@@@          TZ        WRITSW         . $T HAS THERHC
)@@G@@E BEEN A SEQUENTIAL WRIT@E@@@@          J         IASER1         . $A YEHD
)@@G@@S,IASER1 NO       @G@@@@          L,U       A0,ASGIT       . $P TRY TO AHE
)@@G@@SG,T (INDEX FILE)       @C@@@@          ER        CSF$           . $W CSHF
)@@G@@F$    @E@@@@          JN        A0,IASER2      . $T FACILITY REJECTED   HG
)@@G@@@E@@@@ .                                 . $A YES,IASER2 NO       @E@@@@HH
)@@G@@IFUSE . FACILITY NOT REJECTED ON AN ASG,A FOR INDEX FILE    @]@@@@ .    HI
)@@G@@      @G@@@@          LA,U      A0,ASGTA       . $P TRY TO ASG,A TEMP FIHJ
)@@G@@LE          @C@@@@          ER        CSF$           . $W CSF$    @E@@@@HK
)@@G@@          JP        A0,TFUSE       . $T FACILITY REJECTED   @E@@@@      HL
)@@G@@                             . $A NO,TFUSE YES        @G@@@@          TZHM
)@@G@@        WRITSW         . $T ANY SEQUENTIAL WRITE OCCURED    @E@@@@      HN
)@@G@@    J         TASER1         . $A YES,TASER1 NO       @G@@@@          L,HO
)@@G@@U       A0,ASGTT       . $P TRY TO ASG,T  (TEMP FILE)       @C@@@@      HP
)@@G@@    ER        CSF$           . $W CSF$    @E@@@@          JN        A0,THQ
)@@G@@ASER2      . $T FACILITY REJECTED   @E@@@@                              HR
)@@G@@     . $A YES,TASER2 NO       @]@@@@TFUSE .     @G@@@@          L,U     HS
)@@G@@  A0,1           . $P SET IDFASW SWITCH (FILES ASSIGN)@A@@@@          S HT
)@@G@@        A0,IDFASW      .@G@@@@          LA        A0,LAST$D      . $P PRHU
)@@G@@EPARE TO ISSUE MCORE$         @A@@@@          LA        A1,A0           HV
)@@G@@@^@@@@          AA,U      A1,1@I@@@@          SA        A1,IWADDR       HW
)@@G@@  . $P INITIALIZE FIRST WRITE ADDRESS           @G@@@@          SA      HX
)@@G@@  A1,IBUF1A      . $P ADDRESS OF FIRST BUF TO IBUF1A  @A@@@@          LAHY
)@@G@@        A2,A1           @A@@@@          AA,U      A2,IBSIZE       @G@@@@HZ
)@@G@@          SA        A2,IBUF2A      . $P ADDRESS OF 2ND INX BUF TO IBUF2AIA
)@@G@@@C@@@@          LA,U      A2,IBNUM          .         @I@@@@          MSIB
)@@G@@I,U     A2,IBSIZE         . $P SIZE OF INDEX BUFFERS FOR EDITING        IC
)@@G@@@G@@@@          AA        A1,A2           . $P ACCOUNT FOR EDIT INDEX BUID
)@@G@@FFERS @G@@@@          SA        A1,IOBF1A      . $P ADDR OF FIRST OVF INIE
)@@G@@X BUF IOBF1A@C@@@@          AA,U      A1,IOVBUFF             .    @G@@@@IF
)@@G@@          SA        A1,TBUF1A      . $P ADDR OF TEMP FILE 1ST BUF TBUF1AIG
)@@G@@@A@@@@          LA        A2,A1          .@A@@@@          AA,U      A2,TIH
)@@G@@BSIZE      .@G@@@@          SA        A2,TBUF2A      . $P ADDR OF TEMP FII
)@@G@@ILE 2ND BUF TBUF2A@C@@@@          LA,U      A0,TBNUM          .         IJ
)@@G@@@I@@@@          MSI,U     A0,TBSIZE         . $P SIZE OF DATA BUFFERS FOIK
)@@G@@R EDITING         @C@@@@          AA        A1,A0           . $         IL
)@@G@@@I@@@@          SA        A1,TWADDR         . $P INITIALIZE FIRST TEMP BIM
)@@G@@LK ADDR           @G@@@@          SA        A1,TOBF1A      . $P ADDR OF IN
)@@G@@1ST OVF TBUF TO TOBF1A  @C@@@@          AA,U      A1,TBSIZE      . $    IO
)@@G@@      @G@@@@          SA        A1,TOBF2A      . $P ADDR OF 2ND OVF TBUFIP
)@@G@@ TO TOBF2A  @A@@@@          AA,U      A1,TBSIZE      .@A@@@@          LAIQ
)@@G@@        A0,A1          .@E@@@@          SA        A0,LAST$D      . $P UPIR
)@@G@@DATE LAST$D       @G@@@@          ER        MCORE$         . $P ISSUE MCIS
)@@G@@ORE$ TO GET BUFFERS     @]@@@@ .          @]@@@@ .          @A@@@@ . MCOIT
)@@G@@RE FOR CORE RAND INDEX TABLE  @]@@@@ .          @]@@@@ .          @C@@@@IU
)@@G@@          LA        A0,LAST$D         .         @C@@@@          LA      IV
)@@G@@  A1,A0             .         @C@@@@          AA,U      A1,1            IW
)@@G@@  .         @E@@@@          SA,H2     A1,RNDADD         . $P UPDATE RNDAIX
)@@G@@DD    @C@@@@          AA,U      A0,IDBNUM         .         @E@@@@      IY
)@@G@@    SA        A0,LAST$D         . UPDATE LAST$D       @E@@@@          ERIZ
)@@G@@        MCORE$            . ISSUE THE MCORE     @]@@@@ .          @]@@@@JA
)@@G@@ .          @C@@@@ . MCORE FOR INDEX CORE REFERENCE TABLE         @]@@@@JB
)@@G@@ .          @]@@@@ .          @C@@@@          LA        A0,LAST$D       JC
)@@G@@  .         @C@@@@          LA        A1,A0             .         @C@@@@JD
)@@G@@          AA,U      A1,1              .         @E@@@@          SA,H2   JE
)@@G@@  A1,IBRTAD         . $P UPDATE IBRTAD    @C@@@@          AA,U      A0,IJF
)@@G@@BNUM          .         @E@@@@          SA        A0,LAST$D         . UPJG
)@@G@@DATE LAST$D       @E@@@@          ER        MCORE$            . ISSUE THJH
)@@G@@E MCORE     @]@@@@ .          @]@@@@ .          @C@@@@ . MCORE FOR DATA JI
)@@G@@BUFFER CORE REFERENCE TABLE   @]@@@@ .          @]@@@@ .          @C@@@@JJ
)@@G@@          LA        A0,LAST$D         .         @C@@@@          LA      JK
)@@G@@  A1,A0             .         @C@@@@          AA,U      A1,1            JL
)@@G@@  .         @E@@@@          SA,H2     A1,TBRTAD         . $P UPDATE RNDAJM
)@@G@@DD    @C@@@@          AA,U      A0,TBNUM          .         @E@@@@      JN
)@@G@@    SA        A0,LAST$D         . UPDATE LAST$D       @E@@@@          ERJO
)@@G@@        MCORE$            . ISSUE THE MCORE     @]@@@@ .          @]@@@@JP
)@@G@@ .          @A@@@@ . MCORE FOR INDEX UPDATE TABLE     @]@@@@ .          JQ
)@@G@@@]@@@@ .          @C@@@@          LA        A0,LAST$D         .         JR
)@@G@@@C@@@@          LA        A1,A0             .         @C@@@@          AAJS
)@@G@@,U      A1,1              .         @E@@@@          SA,H2     A1,IUPDAD JT
)@@G@@        . $P UPDATE IUPDAD    @C@@@@          AA,U      A0,IBNUM        JU
)@@G@@  .         @E@@@@          SA        A0,LAST$D         . UPDATE LAST$D JV
)@@G@@      @E@@@@          ER        MCORE$            . ISSUE THE MCORE     JW
)@@G@@@]@@@@ .          @]@@@@ .          @C@@@@ . MCORE FOR OVERFLOW INDEX COJX
)@@G@@RE REFERENCE TABLE@]@@@@ .          @]@@@@ .          @C@@@@          LAJY
)@@G@@        A0,LAST$D         .         @C@@@@          LA        A1,A0     JZ
)@@G@@        .         @C@@@@          AA,U      A1,1              .         KA
)@@G@@@E@@@@          SA,H2     A1,IOVFRAD        . $P UPDATE IOVFRAD   @C@@@@KB
)@@G@@          AA,U      A0,IOVFNUM        .         @E@@@@          SA      KC
)@@G@@  A0,LAST$D         . UPDATE LAST$D       @E@@@@          ER        MCORKD
)@@G@@E$            . ISSUE THE MCORE     @]@@@@ .          @]@@@@ .          KE
)@@G@@@C@@@@          J         *RET1        . $E EXIT      @]@@@@ .          KF
)@@G@@@A@@@@IASER1    LX,U      X10,ASGIA      .@C@@@@          LMJ       X11,KG
)@@G@@ASGERR     . $E EXIT    @]@@@@IASER2 .    @A@@@@          LX,U      X10,KH
)@@G@@ASGIT      .@C@@@@          LMJ       X11,ASGERR     . $E EXIT    @]@@@@KI
)@@G@@TASER1 .    @A@@@@          LX,U      X10,ASGTA      .@C@@@@          LMKJ
)@@G@@J       X11,ASGERR     . $E EXIT    @]@@@@TASER2 .    @A@@@@          LXKK
)@@G@@,U      X10,ASGTT      .@C@@@@          LMJ       X11,ASGERR     . $E EXKL
)@@G@@IT    @]@@@@ .          @]@@@@ .          @G@@@@ . SUBROUTINE TO BE CALLKM
)@@G@@ED BY THE EDIT PROCESSORS TO CHECK SWITCHES     @C@@@@ . AND FLUSH SEQUEKN
)@@G@@NTIAL WRITE INDEX BUFFER      @]@@@@ .          @]@@@@FRSTED* .   @^@@@@KO
)@@G@@          +         0   @G@@@@          TNZ       IDFASW         . $T TEKP
)@@G@@MP FILE HAS BEEN ASSIGNED     @^@@@@          ER        ERR$@G@@@@      KQ
)@@G@@    TZ        CRETSW         . $T FILE HAS BEEN CREATED           @C@@@@KR
)@@G@@          J         *FRSTED           . $E EXIT @C@@@@RMRFLI . THIS IS TKS
)@@G@@HE FIRST RANDOM READ          @G@@@@          LMJ       X11,IBWRT1     .KT
)@@G@@ $W IBWRT1 FLUSH INDEX BUFFER OUT   @G@@@@          TP        IIOPKT+3  KU
)@@G@@     . $P MAKE SURE I/O IS DONE           @A@@@@          ER        WAITKV
)@@G@@$           @E@@@@          TZ,S1     IIOPKT+3       . $P MAKE SURE I/O KW
)@@G@@WAS OK@A@@@@          J         IIOERR          @^@@@@          LA,U    KX
)@@G@@  A0,1@G@@@@          SA        A0,CRETSW      . $P SET CRETSW (TEMP FILKY
)@@G@@E CREATED)  @G@@@@          SA        A0,WRITSW      . $P SET NON SEQUENKZ
)@@G@@TIAL WRITE MODE   @E@@@@ . UPDATE SOME CONSTANTS IN PREPARATION FOR EDITLA
)@@G@@ING         @]@@@@ .          @A@@@@          LA        A1,TBNUMW       LB
)@@G@@@G@@@@          SA        A1,TBSQWN      . $P SAVE # OF TEMP BLKS WRITTELC
)@@G@@N;    @G@@@@                                   .    FOR EDITING PURPOSE,LD
)@@G@@ ANY BLOCKS @G@@@@                                   .    TO BE WRITTEN LE
)@@G@@HEREAFTER ARE OVF @C@@@@          LA        A1,IBNUMW         .         LF
)@@G@@@I@@@@          SA        A1,IBNUMWO        . $P IBNUMWO WILL CONTAIN CULG
)@@G@@RRENT # OF        @G@@@@                                      . $ INDEX LH
)@@G@@BLOCK INCLUDING OVERFLOW@A@@@@          J         *FRSTED         @]@@@@LI
)@@G@@ .          @]@@@@/           @]@@@@ .          @C@@@@ . RANDOM READ TEMLJ
)@@G@@P FILE ACCESS METHOD          @]@@@@ .          @]@@@@TF$RMR* .   @C@@@@LK
)@@G@@          SX,H2     X11,RETN1      . $H TF$RMR  @I@@@@          SLJ     LL
)@@G@@  FRSTED            . $P FLUSH SQW INDEX BUF ON FRST ED           @]@@@@LM
)@@G@@RMRGT1 .    @G@@@@          LA        A3,0,X10       . $P RECORD NUMBER LN
)@@G@@WANTED TO A3      @C@@@@          LMJ       X11,LOCINX     . $W LOCINX  LO
)@@G@@@G@@@@                                   .    WILL RETURN INDEX IN LCINXLP
)@@G@@      @G@@@@                                   .    AND ADDR OF INDEX INLQ
)@@G@@ LCINXA     @G@@@@                                   .    INX BLK ADDRESLR
)@@G@@S IN INXPKT+1     @E@@@@          TZ        A0                . $T SUCCELS
)@@G@@SSFUL       @E@@@@          J         LOCEOF         . $A NO,LOCEOF YES LT
)@@G@@      @A@@@@          LA        A0,LCINX       .@E@@@@          SA      LU
)@@G@@  A0,TEMPKT+1    . $P INDEX TO TEMPKT+1   @G@@@@          LMJ       X11,LV
)@@G@@LOCREC     . $W LOCREC LOCATE RECORD IN BUFFER  @G@@@@                  LW
)@@G@@                 .    RECORD ADDRESS RETURNED (RMRRAD)@A@@@@ . DELIVER RLX
)@@G@@ECORD TO CALLING PACKET @G@@@@          LX,H2     X8,TEMPKT      . $P ADLY
)@@G@@DR OF RECORD + HEADER TO X8   @E@@@@          LA,H2     A5,0,X8        .LZ
)@@G@@ $P RECORD LENGTH TO A5 @^@@@@          ANA,U     A5,1@G@@@@          SAMA
)@@G@@,H2     A5,2,X10       . $P RECORD LENGTH TO CALLING PACKET @^@@@@      MB
)@@G@@    AX,U      X8,1@G@@@@          TZ        RMR1SW            . $T DO WEMC
)@@G@@ DELIVER RECORD         @E@@@@          J         RMRGT2            . $AMD
)@@G@@ NO,RMRGT2 YES    @G@@@@          LX,H2     X9,1,X10       . $P ADDR OF ME
)@@G@@CALLING BUF TO X9       @A@@@@          LR        R1,A5           @I@@@@MF
)@@G@@          SLJ       RTRANS         . $P TRANSFER RECORD TO CALLING BUFFEMG
)@@G@@R           @G@@@@RMRGT3    SZ,T1     2,X10          . $P SET 0 RETURN CMH
)@@G@@ODE IN CALLING PKT@E@@@@          SZ        RMR1SW            . $P RESETMI
)@@G@@ RMR1SW     @C@@@@          J         *RETN1         . $E EXIT    @]@@@@MJ
)@@G@@ .          @]@@@@LOCEOF .    @A@@@@          LA,U      A0,1           .MK
)@@G@@@E@@@@          SA,T1     A0,2,X10       . $P SET ERROR RETURN    @E@@@@ML
)@@G@@          SZ        RMR1SW            . $P RESET RMR1SW     @C@@@@      MM
)@@G@@    J         *RETN1         . $E         @]@@@@ .          @A@@@@RMRGT2MN
)@@G@@ . DO NOT DELIVER RECORD      @G@@@@          SX,H2     X8,1,X10        MO
)@@G@@  . $P RETURN RECORD ADDRESS        @C@@@@          J         RMRGT3    MP
)@@G@@        .$J RMRGT3@]@@@@ .          @]@@@@ .          @C@@@@TF$RMR1* . RMQ
)@@G@@ANDOM READ WITHOUT DELIVERING RECORD@C@@@@          LA,U      A0,1      MR
)@@G@@        .         @E@@@@          SA        A0,RMR1SW         . $P SET RMS
)@@G@@MR1SW       @E@@@@          J         TF$RMR            . $J TF$RMR     MT
)@@G@@      @]@@@@/           @G@@@@ . SUBROUTINE TO LOCATE THE INDEX FOR A REMU
)@@G@@CORD WHOSE NUMBER IS CONTAINED@E@@@@ . IN A3  RETURN CODE WILL BE IN REGMV
)@@G@@ISTER A0 (0=SUCCESSFUL).@G@@@@ . IF SUCCESSFUL, THE INDEX WILL BE PLACEDMW
)@@G@@ IN LOCATION LCINX AND ITS    @A@@@@ . ADDRESS IN LOCATION LCINXA.      MX
)@@G@@@E@@@@ . ADDRESS OF INDEX BLOCK TO H2 OF INXPKT+1, INX BLK NUM TO @C@@@@MY
)@@G@@ . H2 OF INXPKT. REL INDEX IN BLOCK TO INXREL.  @]@@@@ .          @G@@@@MZ
)@@G@@ . IUPDPT1 WILL CONTAIN THE RELATIVE LOCATION OF BLOCK WITHIN           NA
)@@G@@@A@@@@ . TABLE INDEX BLOCK UPDATE TABLE   @]@@@@LOCINX* .   @C@@@@      NB
)@@G@@    SX,H2     X11,RET1       . $H LOCINX  @G@@@@          SZ,S6     SW2 NC
)@@G@@              . $P RESET ZERO REC SWITCH        @G@@@@LOCGT3    SA      ND
)@@G@@  A3,LOCRCN      . $P SAVE RECORD NUMBER WANTED       @G@@@@          LANE
)@@G@@        A4,RECNMC      . $P CURRENT # OF RECORDS TO A4      @G@@@@      NF
)@@G@@    TLE       A4,A3          . $T REC # WANTED <= CURRENT NUM     @G@@@@NG
)@@G@@          J         RMRER1         . $A NO,RMRER1 RETURN NOT AVAILABLE  NH
)@@G@@@E@@@@          TNZ       A3             . $T REC # WANTED = 0    @E@@@@NI
)@@G@@          J         LCZER1         . $A YES,LCZER1 NO       @E@@@@ . LOCNJ
)@@G@@ATE WHICH INDEX BLOCK HAS THE RECORD INDEX DESIRED    @A@@@@          LXNK
)@@G@@        X8,RNDADD       @C@@@@          LXI,U     X8,1              .   NL
)@@G@@      @E@@@@          LR        R1,RNDIDX      . $P R1 WILL CONTROL LOOPNM
)@@G@@@G@@@@          SZ        A5             . $P A5 WILL HOLD ACCUMULATED INN
)@@G@@NX SUM@G@@@@          SZ        A1             . $P BLOCK NUMBER WILL BENO
)@@G@@ IN A1      @G@@@@LOCLP1    AA,H2     A5,0,*X8       . $P ACCUMULATE # ONP
)@@G@@F INDICES         @E@@@@          TLE       A5,A3          . $T REC # WANQ
)@@G@@NTED FOUND  @^@@@@          J         $+2 @A@@@@          J         LOCINR
)@@G@@FD          @G@@@@          AA,U      A1,1           . $P INCREMENT BLOCNS
)@@G@@K NUMBER          @I@@@@          JGD       R1,LOCLP1      . $T TRIED ALNT
)@@G@@L RAND CORE INX TAB ENTRIES         @E@@@@          ER        ERR$      NU
)@@G@@     . $A NO LOCLP1 YES       @A@@@@LOCIFD . FOUND INDEX BLOCK #        NV
)@@G@@@^@@@@          ANX,U     X8,1@C@@@@          LA        A0,0,X8         NW
)@@G@@  .         @G@@@@          SA        A0,REMINDX        . $P INITIALIZE NX
)@@G@@REMINDX           @G@@@@          SX,H2     X8,RNDSAV      . $P SAVE ADDNY
)@@G@@RESS OF RND TABLE       @A@@@@          ANA,H2    A5,0,X8         @^@@@@NZ
)@@G@@          AA,U      A5,1@G@@@@          SA        A5,INXLOW      . $P LOOA
)@@G@@WER INDEX # TO INXLOW (1ST= 1)@A@@@@          LA,H2     A4,0,X8         OB
)@@G@@@G@@@@          SA        A4,INXINT      . $P # OF INDICES IN BLOCK TO IOC
)@@G@@NXINT @G@@@@          SA,H2     A1,INXPKT      . $P INX BLK WANTED TO INOD
)@@G@@XPKT (H2)   @G@@@@          LMJ       X11,INXBUF     . $W INXBUF GET INDOE
)@@G@@EX BLOCK          @G@@@@          TZ,H1     INXPKT         .    SECOND WOF
)@@G@@ORD OF IXPKT WILL HAVE  @E@@@@          ER        ERR$           .    ADOG
)@@G@@DRESS OF BLOCK    @C@@@@ . FIND OUT IF INDEX IS IN THIS BLOCK           OH
)@@G@@@A@@@@          LX        X9,INXPKT+1     @A@@@@          LA        A2,LOI
)@@G@@OCRCN      .@E@@@@          ANA       A2,INXLOW      . $P REL INDEX TO AOJ
)@@G@@2     @A@@@@          SA        A2,INXREL      .@G@@@@LOCLOOP1   LA,H2  OK
)@@G@@   A0,1,X9           . $P # OF INDICES IN BLK TO A0   @G@@@@          TNOL
)@@G@@Z       A0                . $T ANY INDICES IN BLOCK OBTAINED@E@@@@      OM
)@@G@@    J         LOCGT22            . $A NO,LOCGT22 YES  @G@@@@          ANON
)@@G@@A,U     A0,1              . $P DECREMENT # OF INDICES       @G@@@@      OO
)@@G@@    TLE       A0,A2          . $T INDEX IS IN THIS BLOCK          @E@@@@OP
)@@G@@          J         LOCGT2         . $A  NO,LOCGT2 YES      @E@@@@ . FOUOQ
)@@G@@ND INDEX IN BLOCK, CALCULATE DISPLACEMENT & READ INDEX@]@@@@LOCIF1 .    OR
)@@G@@@A@@@@          MSI,U     A2,2           .@C@@@@          AA,U      A2,2OS
)@@G@@           . $          @G@@@@          AX        X9,A2          . $P X9OT
)@@G@@ POINTS TO INDEX WANTED       @E@@@@          LA        A0,0,X9        .OU
)@@G@@ $P INDEX TO A0         @E@@@@          SA        A0,LCINX       . $P INOV
)@@G@@DEX TO LCINX      @G@@@@          SZ,H1     INXPKT         . $P SUCCESSFOW
)@@G@@UL RETURN CODE TO INXPKT@G@@@@          SX        X9,LCINXA      . $P SAOX
)@@G@@VE ADDR OF INDEX IN LCINXA    @A@@@@          SZ        A0             .OY
)@@G@@@C@@@@          J         *RET1          . $E EXIT    @E@@@@          J OZ
)@@G@@        LOCGT2            . $J LOCGT2           @^@@@@LOCGT22           PA
)@@G@@  .   @C@@@@          AA,U      A2,1              .         @]@@@@LOCGT2PB
)@@G@@ .    @]@@@@ .          @]@@@@ .          @C@@@@ . INDEX NOT FOUND IN BLPC
)@@G@@OCK, CHECK FOR OVERFLOW @A@@@@ . X9 POINTS TO INDEX BLOCK         @]@@@@PD
)@@G@@ .          @]@@@@ .          @G@@@@          TNZ,H2    0,X9            PE
)@@G@@  $T IS OVERFLOW BLOCK DEFINED      @I@@@@          J         RMRER1    PF
)@@G@@        . $A NO,RMRER1                    . $A NO,    @]@@@@ .          PG
)@@G@@@C@@@@ . UPDATE # OF INDICES LEFT TO SEARCH           @]@@@@ .          PH
)@@G@@@E@@@@          ANA       A2,A0             . $P NEW REL INX TO A2@C@@@@PI
)@@G@@          ANA,U     A2,1              .         @G@@@@          SA      PJ
)@@G@@  A2,INXREL         . $P SAVE OVF REL INDEX           @C@@@@          LAPK
)@@G@@        A0,REMINDX        .         @C@@@@          ANA,H2    A0,1,X9   PL
)@@G@@        .         @I@@@@          SA        A0,REMINDX        . REMAININPM
)@@G@@G # OF INDICES TO REMINDX           @G@@@@          LA,H2     A1,0,X9   PN
)@@G@@        . $P OVERFLOW BLOCK # TO A1       @G@@@@          SA,H2     A1,IPO
)@@G@@NXPKT         . $P OVF BLOCK # TO INXPKT,,H2    @G@@@@          LMJ     PP
)@@G@@  X11,INXBUF        . $W INXBUF GET INDEX BLOCK       @C@@@@          TZPQ
)@@G@@,H1 INXPKT                .         @C@@@@          ER        ERR$      PR
)@@G@@        .         @G@@@@          LX        X9,INXPKT+1       . $P INDEXPS
)@@G@@ BLOCK ADDRESS TO X9    @G@@@@          LA        A2,INXREL         . $PPT
)@@G@@ OVERFLOW REL INDEX TO A2     @C@@@@          JN A2,RMRER1              PU
)@@G@@  .         @E@@@@          J         LOCLOOP1          . $J LOCLOOP1   PV
)@@G@@      @]@@@@RMRER1 .    @G@@@@          LA,U      A0,1           . $P REPW
)@@G@@TURN NONZERO STATUS           @C@@@@          J         *RET1          .PX
)@@G@@ $E EXIT    @C@@@@LCZER1 . WANTING TO LOCATE RECORD NUMBER ZERO   @C@@@@PY
)@@G@@          LA,U      A0,1              .         @I@@@@          SA,S6   PZ
)@@G@@  A0,SW2            . $P SET SW TO INDICATE ZERO RECORD           @E@@@@QA
)@@G@@          AA,U      A3,1              . $P INCREMENT RCD#   @E@@@@      QB
)@@G@@    J         LOCGT3            . $J LOCGT3           @]@@@@ .          QC
)@@G@@@C@@@@ . SUBROUTINE TO MANAGE INDEX EDIT BUFFERS      @G@@@@ . UPON ENTRQD
)@@G@@Y, H2 OF INXPKT CONTAINS RELATIVE INDEX BLOCK NUMBER        @G@@@@ . UPOQE
)@@G@@N RETURN, H1 OF INXPKT CONTAINS ERROR STATUS (0=SUCCESSFUL)       @E@@@@QF
)@@G@@ .              INXPKT+1 CONTAINS ADDRESS OF BLOCK IN BUFFER@]@@@@ .    QG
)@@G@@      @]@@@@ .          @]@@@@INXBUF* .   @C@@@@          SX,H2     X11,QH
)@@G@@RET2       . $H INXBUF  @G@@@@          SZ        IFNDOOVF          . REQI
)@@G@@SET FOUND ON OVERFLOW PAGE    @G@@@@          LA,H2     A1,INXPKT      .QJ
)@@G@@ $P REL INDEX BLK NUM TO A1         @G@@@@          TNZ       IOBFENT   QK
)@@G@@        . $P ANY OVERFLOW ENTRIES         @E@@@@          J         IBFGQL
)@@G@@T11           . $P NO,IBFGT11 YES   @G@@@@          LR        R1,IOBFENTQM
)@@G@@        . $P # OF OVF BLOCKS TO R1        @I@@@@          LX        X8,IQN
)@@G@@OVFRAD        . $P ADDR OF OVF CORE REF TABLE TO X8         @]@@@@IBFLP3QO
)@@G@@ .    @A@@@@          JGD       R1,$+2          @E@@@@          J       QP
)@@G@@  IBFGT11           . YES,IBFGT11 NO      @E@@@@          TNE,H1    A1,0QQ
)@@G@@,X8           . INX BLOCK NUM EQUAL @E@@@@          J         IBFOFND   QR
)@@G@@        . $J IBFOFND          @E@@@@          AX,U      X8,1            QS
)@@G@@  . $P INCREMENT POINTER@E@@@@          J         IBFLP3            . $JQT
)@@G@@ IBFLP3           @]@@@@ .          @]@@@@ .          @C@@@@IBFOFND . BLQU
)@@G@@OCK WAS FOUND IN OVERFLOW AREA      @]@@@@ .          @]@@@@ .          QV
)@@G@@@E@@@@          LA,H2     A0,0,X8           . BLOCK NUMBER TO A0  @G@@@@QW
)@@G@@          SA,H2     A0,INXPKT+1       . $P BLOCK NUMBER TO INXPKT+1,,H2 QX
)@@G@@@C@@@@ .        L$SNAP    'INXFND',,8,INXPKT          @]@@@@ .          QY
)@@G@@@]@@@@ .          @E@@@@ . SWITCH IFNDOOVF IS TO BE SET TO INDICATE THATQZ
)@@G@@ INDEX BLOCK@A@@@@ . WAS FOUND IN OVERFLOW AREA.      @]@@@@ .          RA
)@@G@@@]@@@@ .          @C@@@@          LA,U      A0,1              .         RB
)@@G@@@E@@@@          SA        A0,IFNDOOVF       . $P SET IFNDOOVF     @C@@@@RC
)@@G@@          SZ,H1     INXPKT            .         @C@@@@          J       RD
)@@G@@  *RET2             . $E EXIT @]@@@@IBFGT11 .   @G@@@@          TNZ     RE
)@@G@@  IBFENT         . $T ANY ENTRIES IN INDEX EDIT BUFS  @E@@@@          J RF
)@@G@@        IBFEMP         . $A NO,IBFEMP YES       @E@@@@          LR      RG
)@@G@@  R1,IBFENT      . $P # OF ENTRIES TO R1  @G@@@@          LX        X8,IRH
)@@G@@BRTAD      . $P ADDRESS OF INX BUF REF TAB TO X8@]@@@@IBFLP1      @G@@@@RI
)@@G@@          JGD       R1,$+2         . $T DONE WITH ALL ENTRIES           RJ
)@@G@@@E@@@@          J         IBNFND         . $A YES,IBNFND NO       @G@@@@RK
)@@G@@          TNE,H1    A1,0,X8        . $T INDEX BLOCK IN BUFFER           RL
)@@G@@@E@@@@          J         IBFFND         . $A YES,IBFFND NO       @C@@@@RM
)@@G@@          AX,U      X8,1           . $          @C@@@@          J       RN
)@@G@@  IBFLP1         . $J IBFLP1  @]@@@@ .          @C@@@@IBFFND . INDEX BLORO
)@@G@@CK WANTED IS FOUND IN BUFFER  @G@@@@          LA,H2     A0,0,X8        .RP
)@@G@@ $P ADDRESS OF BUFFER TO A0         @G@@@@          SA,H2     A0,INXPKT+RQ
)@@G@@1    . $P ADDRESS OF BUFFER TO CALLING PKT@G@@@@          ANX       X8,IRR
)@@G@@BRTAD         . POINTER WITHIN UPD TABLE TO X8  @C@@@@          SX,H2   RS
)@@G@@  X8,IUPDPT1        .         @G@@@@          SZ,H1     INXPKT         .RT
)@@G@@ $P SET SUCCESSFUL RETURN CODE      @C@@@@          J         *RET2     RU
)@@G@@     . $E EXIT    @E@@@@IBNFND . INDEX BLOCK WANTED WAS NOT FOUND IN BUFRV
)@@G@@FER         @A@@@@          LX        X9,IBRTAD       @G@@@@          AXRW
)@@G@@        X9,IBFPT1   . $P X9 POINTS TO BUF ENTRY TO WRITE OUT@A@@@@      RX
)@@G@@    LA        A3,IBFENT       @G@@@@          TE,U      A3,IBNUM       .RY
)@@G@@ $T # OF ENTRIES IN BUFFER = # BLKS @E@@@@          J         IBFGT1    RZ
)@@G@@     . $A NO,IBFGT1 YES       @E@@@@ . WE HAVE TO WRITE ONE BLOCK OUT BESA
)@@G@@FORE READING ANOTHER IN @G@@@@ . IBFPT1 POINTS TO BLOCK ENTRY TO BE WRITSB
)@@G@@TEN OUT (REL POINTER)         @A@@@@ . CHECK IF BLOCK HAS BEEN MODIFIED SC
)@@G@@@G@@@@          LA        A0,IUPDAD         . ADDR OF INDEX BLOCK INDICASD
)@@G@@TOR   @G@@@@          AA        A0,IBFPT1         . POINT TO CORRESPONDISE
)@@G@@NG BLOCK    @C@@@@          TNZ       0,A0              .         @C@@@@SF
)@@G@@          J         IBFGT1            .         @G@@@@          SZ      SG
)@@G@@  0,A0             . RESET UPDATE INDICATOR           @E@@@@          LASH
)@@G@@,H1     A1,0,X9     . $P IBLOCK NUMBER TO A1    @E@@@@          LA,H2   SI
)@@G@@  A2,0,X9     . $P IBLOCK ADDRESS TO A2   @G@@@@          LA,U      A3,0SJ
)@@G@@10         . $P WRITE FUNCTION CODE TO A3       @E@@@@          LMJ     SK
)@@G@@  X11,IBIOW      . $W PERFORM I/O AND WAIT@]@@@@IBFGT1 .    @G@@@@      SL
)@@G@@    LA,H2     A1,INXPKT      . $P NEW BLOCK # WANTED TO A1        @E@@@@SM
)@@G@@          LA,H2     A2,0,X9        . $P ADDR OF IBLOCK TO A2@G@@@@      SN
)@@G@@    LA,U      A3,020         . $P READ FUNCTION CODE TO A3        @G@@@@SO
)@@G@@          LMJ       X11,IBIOW      . $W IBIOW PERFORM I/O AND WAIT      SP
)@@G@@@E@@@@          SA,H1     A1,0,X9        . $P UPDATE BUFFER ENTRY @E@@@@SQ
)@@G@@          LA        A5,IBFPT1      . $P INX BUF PTR TO A5   @G@@@@      SR
)@@G@@    SA        A5,IUPDPT1        . SAVE TO INDICATE UPDATE         @E@@@@SS
)@@G@@          AA,U      A5,1           . $P INCREMENT BY 1      @E@@@@      ST
)@@G@@    TE,U      A5,IBNUM       . $T END OF BUF CONDITION@E@@@@          J SU
)@@G@@        IBFGT2         . $A NO,IBFGT2 YES       @E@@@@          SZ      SV
)@@G@@  A5             . $P ZERO REL INX BUF PTR@G@@@@IBFGT2    SA        A5,ISW
)@@G@@BFPT1      . $P STORE NEW REL PTR IN IBFPT1     @G@@@@          LA      SX
)@@G@@  A0,IBFENT      .$P NUM OF INX BLOCKS TO A0          @E@@@@          TNSY
)@@G@@E,U     A0,IBNUM       . $T ARE THEY EQ TO IBNUM@E@@@@          J       SZ
)@@G@@  IBFGT3         . $A YES,IBFGT3 NO       @A@@@@          AA,U      A0,1TA
)@@G@@           .@E@@@@          SA        A0,IBFENT      . $P INCREMENT IBFETB
)@@G@@NT    @]@@@@IBFGT3 .    @G@@@@          SA        A2,INXPKT+1    . $P ADTC
)@@G@@DRESS OF IBLOCK TO CALLING PKT@E@@@@          SZ,H1     INXPKT         .TD
)@@G@@ $P ZERO RETURN STATUS  @C@@@@          J         *RET2          . $E EXTE
)@@G@@IT    @E@@@@IBFEMP . INDEX BLOCK EMPTY, INITIALIZE BUFFER TABLE         TF
)@@G@@@I@@@@          LX        X8,IBRTAD      . $P ADD OF INX BUF CORE REF TATG
)@@G@@BLE TO X8         @G@@@@          LX        X9,IBUF        . $P ADDRESS TH
)@@G@@OF 1ST INX BUF TO X9    @E@@@@          LR,U      R1,IBNUM       . $P R1TI
)@@G@@ WILL CONTROL LOOP@^@@@@          LXI,U     X8,1@G@@@@IBFLP2    JGD     TJ
)@@G@@  R1,$+2         . $T ARE WE DONE WITH ALL ENTRIES    @E@@@@          J TK
)@@G@@        IBFEMP1         . $A YES,IBNFND NO      @G@@@@          SX,H2   TL
)@@G@@  X9,0,*X8       . $P ADDR OF CORRESPONDING BUF TO ENT@A@@@@          AXTM
)@@G@@,U      X9,IBSIZE       @C@@@@          J         IBFLP2         . $J IBTN
)@@G@@FLP2  @]@@@@IBFEMP1 .   @I@@@@          LXM       X8,IOVFRAD        . $PTO
)@@G@@ ADDR OF OVF CORE REF ENTRY TAB TO X8     @A@@@@          LX        X9,ITP
)@@G@@OBF1A       @I@@@@          LR,U      R1,IOVFNUM        . $P # OF ENTRIETQ
)@@G@@S IN TAB WILL CONTROL LOOP    @]@@@@IBFLP22 .   @E@@@@          JGD     TR
)@@G@@  R1,$+2            . $P ARE WE DONE      @E@@@@          J         IBNFTS
)@@G@@ND            . $J IBNFND           @E@@@@          SX,H2     X9,0,*X8  TT
)@@G@@        . $P ADDR TO OVF TABLE@G@@@@          AX,U    X9,IBSIZE         TU
)@@G@@  . $P POINT TO NEXT BUFFER         @E@@@@          J         IBFLP22   TV
)@@G@@        . $J IBFLP22          @]@@@@ .          @E@@@@ . SUBROUTINE TO ITW
)@@G@@SSUE AN I/O FOR INDEX BLOCKS, THEN TO WAIT@C@@@@ . UPON ENTRY, A1 HAS RETX
)@@G@@L BLOCK NUMBER          @A@@@@ .             A2 HAS IBLOCK ADDRESS@C@@@@TY
)@@G@@ .             A3 HAS I/O FUNCTION CODE         @]@@@@ .          @E@@@@TZ
)@@G@@IBIOW*    SX,H2     X11,RET3       . $H IBIOW I/O WITH WAIT @G@@@@      UA
)@@G@@    TP        IIOPKT+3       . $P MAKE SURE I/O PACKET IS FREE    @A@@@@UB
)@@G@@          ER        WAIT$           @G@@@@          TZ,S1     IIOPKT+3  UC
)@@G@@     . $P MAKE SURE LAST I/O WAS OK       @A@@@@          J         IIOEUD
)@@G@@RR          @A@@@@          LA        A4,A1          .@A@@@@          MSUE
)@@G@@I,U     A4,IBSECT       @G@@@@          SA        A4,IIOSECT     . $P SEUF
)@@G@@CTOR NUMBER TO I/O PACKET     @G@@@@          SA        A2,IIOBUF      .UG
)@@G@@ $P BUFFER ADDRESS TO I/O PACKET    @G@@@@          SA        A3,IIOFUNCUH
)@@G@@     . $P FUNCTION CODE TO I/O PACKET     @A@@@@          L,U       A0,IUI
)@@G@@IOPKT      .@E@@@@          ER        IO$            . $W IO$ ISSUE THE UJ
)@@G@@I/O   @G@@@@          TP        IIOPKT+3       . $P MAKE SURE I/O PACKETUK
)@@G@@ IS FREE    @A@@@@          ER        WAIT$           @G@@@@          TZUL
)@@G@@,S1     IIOPKT+3       . $P MAKE SURE LAST I/O WAS OK       @A@@@@      UM
)@@G@@    J         IIOERR          @C@@@@          J         *RET3          .UN
)@@G@@ $E EXIT    @]@@@@ .          @E@@@@ . SUBROUTINE TO LOCATE RECORD WHOSEUO
)@@G@@ INDEX IS IN TEMPKT+1   @G@@@@ . UPON RETURN, THE ADDRESS OF THE RECORD UP
)@@G@@IS FOUND IN H2 OF TEMPKT      @]@@@@ .          @]@@@@ .          @]@@@@UQ
)@@G@@LOCREC*     @C@@@@          SX,H2     X11,RET2       . $H LOCREC  @A@@@@UR
)@@G@@          LA        A1,TEMPKT+1     @^@@@@          LSSL      A1,6@^@@@@US
)@@G@@          SSL       A1,6@A@@@@          DSL       A1,36           @E@@@@UT
)@@G@@          DI,U      A1,TBSECT      . $P BLOCK NUMBER TO A1  @G@@@@      UU
)@@G@@    SA        A2,LOCSWB      . $P SECTOR WITHIN BLOCK TO A2,LOCTBL@G@@@@UV
)@@G@@          SA        A1,LOCBLK      . $P BLOCK NUMBER TO LOCBLK          UW
)@@G@@@G@@@@          LA        A3,TBNUMW      . $P # OF TEMP BLOCKS WRITTEN TUX
)@@G@@O A3  @G@@@@          ANA,U     A3,1           . $P REL # OF LAST TEMP BUY
)@@G@@LK TO A3    @G@@@@          TLE       A3,A1          . $T BLOCK WANTED <UZ
)@@G@@= TBNUMW-1        @E@@@@          J         RECGT1         . $A NO,RECGTVA
)@@G@@1 YES       @C@@@@ . BLOCK WANTED MUST HAVE BEEN WRITTEN OUT      @]@@@@VB
)@@G@@ .          @G@@@@          TNZ       TBFENT         . $T ANY ENTRIES INVC
)@@G@@ TEMP EDIT BUFS   @E@@@@          J         TBFEMP         . $A NO,TBFEMVD
)@@G@@P YES       @E@@@@          LR        R1,TBFENT      . $P # OF ENTRIES TVE
)@@G@@O R1  @A@@@@          LX        X8,TBRTAD       @]@@@@TBFLP1 .    @G@@@@VF
)@@G@@          JGD       R1,$+2         . $T DONE WITH ALL ENTRIES           VG
)@@G@@@E@@@@          J         TBNFND         . $A YES,TBNFND NO       @G@@@@VH
)@@G@@          TNE,H1    A1,0,X8        . $T TEMP BLOCK ALREADY IN BUFFER    VI
)@@G@@@E@@@@          J         TBFFND         . $A YES,TBFFND NO       @A@@@@VJ
)@@G@@          AX,U      X8,1           .@A@@@@          J         TBFLP1    VK
)@@G@@      @]@@@@ .          @C@@@@TBFFND . TEMP FILE WANTED IS FOUND IN BUFFVL
)@@G@@ER    @]@@@@ .          @C@@@@          LA,H2     A0,0,X8        . $    VM
)@@G@@      @A@@@@          MSI,U     A2,28          .@A@@@@          AA      VN
)@@G@@  A0,A2          .@E@@@@          AA,S1     A0,TEMPKT+1    . $P A0 POINTVO
)@@G@@S TO RECORD @G@@@@          SA,H2     A0,TEMPKT      . $P RECORD ADDRESSVP
)@@G@@ TO CALLING PACKET@A@@@@          J         *RET2           @]@@@@ .    VQ
)@@G@@      @E@@@@TBNFND . TEMPORARY BLOCK NOT NOT FOUND IN BUFFER, READ IT INVR
)@@G@@@A@@@@          LX        X9,TBRTAD       @G@@@@          AX        X9,TVS
)@@G@@BFPT1      . $P X9 POINTS TO EDIT TEMP BUF ENTRY@A@@@@          LA      VT
)@@G@@  A3,TBFENT       @G@@@@          TE,U      A3,TBNUM       . $T # OF ENTVU
)@@G@@RIES IN TBUF = # OF BLKS@A@@@@          J         TBFGT3          @G@@@@VV
)@@G@@ . WE HAVE TO WRITE ONE TEMP FILE BLOCK OUT BEFORE READING ANOTHER IN   VW
)@@G@@@I@@@@ . TBFPT1 POINTS TO BLOCK ENTRY IN TEMP BUF CORE REF TAB TO BE WRIVX
)@@G@@TTEN OUT (REL)    @G@@@@          LA,H1     A1,0,X9        . $P TBLOCK NVY
)@@G@@UMBER TO A1 (TO WRITE)  @E@@@@          LA,H2     A2,0,X9        . $P BUVZ
)@@G@@FFER ADDRESS TO A2@G@@@@          LA,U      A3,010         . $P WRITE FUWA
)@@G@@NCTION CODE TO A3       @G@@@@          LMJ       X11,TBIOW      . $W TBWB
)@@G@@IOW WRITE BLOCK OUT           @]@@@@TBFGT3 .    @E@@@@          LA      WC
)@@G@@  A1,LOCBLK      . $P BLK # TO READ TO A1 @E@@@@          LA,H2     A2,0WD
)@@G@@,X9        . $P BUFFER ADDRESS TO A2@A@@@@          LA,U      A3,020    WE
)@@G@@      @G@@@@          LMJ       X11,TBIOW      . $W TBIOW PERFORM TEMP IWF
)@@G@@/O & WAIT   @E@@@@          SA,H1     A1,0,X9        . $P UPDATE BUFFER WG
)@@G@@ENTRY @E@@@@          LA        A5,TBFPT1      . $P TEMP BUF PTR TO A5  WH
)@@G@@@E@@@@          AA,U      A5,1           . $P INCREMENT BY 1      @G@@@@WI
)@@G@@          TE,U      A5,TBNUM       . $T END OF BUFFER CONDITION         WJ
)@@G@@@E@@@@          J         TBFGT2         . $A NO,TBFGT2 YES       @G@@@@WK
)@@G@@          SZ        A5             . $P ZERO RELATIVE PTR IN TBF TABLE  WL
)@@G@@@G@@@@TBFGT2    SA        A5,TBFPT1      . $P NEW REL PTR TO TBFPT1     WM
)@@G@@      @G@@@@          LA        A0,TBFENT      . $P # OF ENTRIES IN BUFFWN
)@@G@@ER TO A0    @G@@@@          TNE,U     A0,TBNUM       . $T # OF ENTRIES IWO
)@@G@@N BUFS = TBNUM    @E@@@@          J         TBFGT4         . $A YES,TBFGWP
)@@G@@T4 NO       @G@@@@          AA,U      A0,1           . $P INCREMENT # OFWQ
)@@G@@ ENTRIES IN BUF   @G@@@@          SA        A0,TBFENT      . $P UPDATE TWR
)@@G@@BFENT (# OF ENTRIES)    @]@@@@TBFGT4 .    @A@@@@          LA        A3,LWS
)@@G@@OCSWB      .@A@@@@          MSI,U     A3,28          .@G@@@@          AAWT
)@@G@@        A2,A3          . $P ADDRESS OF SECTOR TO A2         @G@@@@      WU
)@@G@@    AA,S1     A2,TEMPKT+1    . $P ADDRESS OF RECORD TO A2         @G@@@@WV
)@@G@@          SA,H2     A2,TEMPKT      . $P ADDRESS OF RECORD TO CALLING PKTWW
)@@G@@@C@@@@          J         *RET2          . $E EXIT    @]@@@@ .          WX
)@@G@@@E@@@@TBFEMP . INDEX BLOCK EMPTY, INITIALIZE BUFFER TABLE         @I@@@@WY
)@@G@@          LX        X8,TBRTAD      . $P ADDR OF TEMP BUF CORE REF TABLE WZ
)@@G@@TO X8       @G@@@@          LX        X9,TBUF        . $P ADDR OF 1ST TEXA
)@@G@@MP BUFFER TO X9   @E@@@@          LR,U      R1,TBNUM       . $P R1 WILL XB
)@@G@@CONTROL LOOP@^@@@@          LXI,U     X8,1@G@@@@TBFLP2    JGD       R1,$XC
)@@G@@+2         . $T ARE WE DONE WITH ALL ENTRIES    @A@@@@          J       XD
)@@G@@  TBNFND          @G@@@@          SX,H2     X9,0,*X8       . $P ADDR OF XE
)@@G@@CORRESPONDING BUF TO ENT@A@@@@          AX,U      X9,TBSIZE       @C@@@@XF
)@@G@@          J         TBFLP2         . $J TBFLP2  @A@@@@RECGT1 . BLK WANTEXG
)@@G@@D > TBNUMW-1      @^@@@@          AA,U A3,1 .   @G@@@@          TE      XH
)@@G@@  A3,A1             . $T IS IT 1 OVER TBNUMW-1        @E@@@@          ERXI
)@@G@@        ERR$              . $A YES,EXIT NO      @C@@@@          LA      XJ
)@@G@@  A0,TDBLSW         .         @G@@@@          LA        A2,TOBF1A,A0    XK
)@@G@@  . $P ADDR OF TEMP BLOCK TO A2     @E@@@@          J         TBFGT4    XL
)@@G@@        . $J TBFGT4           @]@@@@ .          @E@@@@ . SUBROUTINE TO IXM
)@@G@@SSUE AN I/O FOR TEMP BLOCKS THEN WAIT     @A@@@@ . UPON ENTRY, A1 HAS BLXN
)@@G@@OCK NUMBER  @C@@@@ .             A2 HAS TEMP BLOCK ADDRESS (BUFFER@C@@@@XO
)@@G@@ .             A3 HAS I/O FUNCTION CODE         @]@@@@ .          @G@@@@XP
)@@G@@TBIOW*                             . $H TBIOW  TEMP FILE I/O WITH WAIT  XQ
)@@G@@@C@@@@          SX,H2     X11,RET3        .           @G@@@@          TPXR
)@@G@@        TIOPKT+3       . $P MAKE SURE TEMP I/O PKT IS FREE  @A@@@@      XS
)@@G@@    ER        WAIT$          .@G@@@@          TZ,S1     TIOPKT+3       .XT
)@@G@@ $P MAKE SURE LAST I/O WAS OK       @A@@@@          J         TIOERR    XU
)@@G@@      @A@@@@          LA        A4,A1           @G@@@@          MSI,U   XV
)@@G@@  A4,TBSECT      . $P SECTOR NUMBER TO I/O PKT        @A@@@@          SAXW
)@@G@@        A4,TIOSECT     .@G@@@@          SA        A2,TIOBUF      . $P BUXX
)@@G@@FFER ADDRESS TO TEMP I/O PKT  @G@@@@          SA        A3,TIOFUNC     .XY
)@@G@@ $P FUNCTION CODE TO TEMP I/O PKT   @A@@@@          LA,U      A0,TIOPKT XZ
)@@G@@     .@E@@@@          ER        IO$            . $W IO$ ISSUE THE I/O   YA
)@@G@@@G@@@@          TP        TIOPKT+3       . $P MAKE SURE I/O PKT IS FREE YB
)@@G@@      @A@@@@          ER        WAIT$           @G@@@@          TZ,S1   YC
)@@G@@  TIOPKT+3       . $P MAKE SURE LAST I/O IS OK        @A@@@@          J YD
)@@G@@        TIOERR          @C@@@@          J         *RET3          . $E EXYE
)@@G@@IT    @]@@@@ .          @]@@@@$(2)        @]@@@@ .          @C@@@@IIOPKTYF
)@@G@@    I$OD      'I$FILE      ',W$ IBSIZE,0 0@C@@@@TIOPKT    I$OD      'T$FYG
)@@G@@ILE      ',W$ TBSIZE,0 0@A@@@@IIOFUNC   EQUF      IIOPKT+3,,S2    @A@@@@YH
)@@G@@TIOFUNC   EQUF      TIOPKT+3,,S2    @A@@@@IIOWRDS   EQUF      IIOPKT+4,,YI
)@@G@@H1    @A@@@@TIOWRDS   EQUF      TIOPKT+4,,H1    @A@@@@IIOBUF    EQUF    YJ
)@@G@@  IIOPKT+4,,H2    @A@@@@TIOBUF    EQUF      TIOPKT+4,,H2    @A@@@@IIOSECYK
)@@G@@T   EQUF      IIOPKT+5        @A@@@@TIOSECT   EQUF      TIOPKT+5        YL
)@@G@@@]@@@@ .          @A@@@@ASGIA     '@ASG,A   I$FILE    .'    @C@@@@ASGIT YM
)@@G@@    '@ASG,T   I$FILE,//POS/100    .'      @A@@@@ASGTA     '@ASG,A   T$FIYN
)@@G@@LE    .'    @C@@@@ASGTT      '@ASG,T   T$FILE,//POS/400    .'     @]@@@@YO
)@@G@@ .          @G@@@@SW1*      +         0              . SWITCH, SEE EQUF YP
)@@G@@DESCRIPTION       @G@@@@SW2*      +         0              . SWITCH, SEEYQ
)@@G@@ EQUF DESCRIPTION       @E@@@@WRITSW    EQUF      SW1,,S1        . SEQ WYR
)@@G@@RITE MODE =0      @G@@@@IDFASW    EQUF      SW1,,S2        . INDEX & DATYS
)@@G@@A FILES ASSIGNED        @G@@@@CRETSW    EQUF      SW1,,S3        . TEMP YT
)@@G@@FILE CREATED, NO MORE SEQ     @G@@@@FIBLSW    EQUF      SW1,,S4        .YU
)@@G@@ FIRST INDEX BLOCK TO WRITE         @G@@@@FTBLSW    EQUF      SW1,,S5   YV
)@@G@@     . FIRST TEMP FILE BLOCK TO WRITE     @G@@@@FLSHSW    EQUF      SW1,YW
)@@G@@,S6        . SWITCH TO INDICATE EDIT BUF FLUSH  @E@@@@REOFSW    EQUF    YX
)@@G@@  SW2,,S1        . READ END OF FILE SWITCH@G@@@@ROVFSW    EQUF      SW2,YY
)@@G@@,S2        . SEQUENTIAL READ OVERFLOW SWITCH    @G@@@@TROFSW    EQUF    YZ
)@@G@@  SW2,,S3        . TEMP FILE READ END OF FILE SW      @G@@@@TEOFSW    EQZA
)@@G@@UF      SW2,,S5           . TO INDICATE TEMP FILE EOF       @G@@@@LCZESWZB
)@@G@@    EQUF      SW2,,S6           . FOR RCD#0 WANTED, BY LOCINX     @G@@@@ZC
)@@G@@IDBLSW*    +         0              . INDEX WRITE DBLE BUF SW           ZD
)@@G@@@G@@@@IBNUMW*   +         0              . INDEX WRITE BLOCK NUMBER, SEQZE
)@@G@@ WRITE@G@@@@IBNUMWO*  +         0                 . CURRENT # OF IBLKS IZF
)@@G@@NCL OVF     @G@@@@IBRELW*   +         2              . REL LOCATION IN IZG
)@@G@@NDEX WRITE BLOCK  @G@@@@IWADDR*   +         0              . ADDRESS OF ZH
)@@G@@CUR INDEX WRITE BLOCK   @G@@@@IBWRSW*   +         0              . ANY WZI
)@@G@@RITE IN CUR IDX BLOCK SW      @G@@@@ISECT*   +         0              . ZJ
)@@G@@SECTOR NUMBER OF WRITTEN INDEX BLK  @G@@@@TDBLSW*   +         0         ZK
)@@G@@     . TEMP FILE WRITE DBLE BUF SWITCH    @G@@@@TBNUMW*   +         0   ZL
)@@G@@           . TEMP FILE BLOCK NUMBER, SEQ WRITE  @G@@@@TBRELW*   +       ZM
)@@G@@  0              . REL LOCATION IN TEMP WRITE BLOCK   @G@@@@TWADDR*   + ZN
)@@G@@        0              . ADDRESS OF CURRENT TEMP WRITE BLOCK@G@@@@TBWRSWZO
)@@G@@*   +         0              . ANY WRITE IN CUR TEMP BLOCK SW     @G@@@@ZP
)@@G@@TSECT*    +         0              . SECTOR NUMBER OF WRITTEN TEMP BLOCKZQ
)@@G@@@G@@@@RECNMC*   +         0              . CURRENT NUMBER OF RECORDS IN ZR
)@@G@@FILE  @G@@@@RECNMW*   +         0              . # OF RECORDS FOR SEQ WRZS
)@@G@@ITE         @E@@@@RECLEN*   +         0              . RECORD LENGTH    ZT
)@@G@@      @E@@@@RECLN1*   +         0                 . REC LENGTH + EXTRAW ZU
)@@G@@@E@@@@RECADD*   +         0              . RECORD ADDRESS         @G@@@@ZV
)@@G@@INDEX*    +         0              . RECORD INDEX FORMED BY TEMP A/M    ZW
)@@G@@@G@@@@RNDIDX*   +         0                 . POINTER TO RAND CORE INDEXZX
)@@G@@ TABLE@^@@@@ZEROS*    +         0   @G@@@@RNDADD*   +         0         ZY
)@@G@@. ADDR OF RAND CORE INDEX TABLE           @]@@@@$(6)        @E@@@@IBUF* ZZ
)@@G@@                        . ADDR OF INDEX BUFFER        @E@@@@IBUF1A*   + AA
)@@G@@        0         . ADDR OF WRITE INDEX BUFFER 1@E@@@@IBUF2A*   +       AB
)@@G@@  0         . ADDR OF INDEX BUFFER 2      @G@@@@IOBF1A*   +         0   AC
)@@G@@      . ADDR OF OVERFLOW INDEX BUFFER 1         @G@@@@IOBF2A*   +       AD
)@@G@@  0         . ADDR OF OVERFLOW INDEX BUFFER 2         @G@@@@TBUF*       AE
)@@G@@                  . ADDR OF TEMP FILE EDIT BUFFERS          @G@@@@TBUF1AAF
)@@G@@*   +         0         . ADDR OF TEMP FILE BUFFER 1 (SEQ READ)   @G@@@@AG
)@@G@@TBUF2A*   +         0         . ADDR OF TEMP FILE BUFFER 2 (SEQ READ)   AH
)@@G@@@G@@@@TOBF1A*   +         0         . ADDR OF WRITE OVF TEMP BUFFER 1 (SAI
)@@G@@EQ)   @G@@@@TOBF2A*   +         0         . ADDR OF WRITE OVF TEMP BUFFEAJ
)@@G@@R 2 (SEQ)   @^@@@@RETURN*   +         0   @^@@@@RET1*     +         0   AK
)@@G@@@^@@@@RET2*     +         0   @^@@@@RET3*     +         0   @]@@@@$(4)  AL
)@@G@@      @E@@@@IBNUMR*   +         0         . # OF INDEX BLOCKS READ      AM
)@@G@@@G@@@@IBRELR*   +         2         . REL LOCATION IN INDEX READ BLOCK  AN
)@@G@@      @G@@@@IRADDR*   +         0         . ADDRESS OF CUR INDEX BLOCK RAO
)@@G@@EAD         @G@@@@SQRORB*   +         0         . # OF ORIGINAL BLOCK BEAP
)@@G@@FORE  OVERFLOW    @G@@@@SQRRIN*   +         0         . # OF REMAINING IAQ
)@@G@@NDICES IN CURRENT BLOCK @E@@@@RINDEX*   +         0         . INDEX OF RAR
)@@G@@ECORD TO BE READ  @G@@@@IBRSTA*   +         0         . NEXT BLOCK NUMBEAS
)@@G@@R FOR WHICH A READ START@G@@@@IBONMR*   +         0         . # OF INDEXAT
)@@G@@ OVF BLOCKS GENERATED         @G@@@@IBONRR*   +         0         . # OFAU
)@@G@@  INDEX OVF BLOCKS READ (SEQ READ)  @E@@@@TBNUMR*   +         0         AV
)@@G@@. # OF TEMP FILE BLOCKS READ  @G@@@@TBONRR*   +         0         . BLK AW
)@@G@@# OF TEMP OVERFLOW BLOCK READ       @G@@@@TBRELR*   +         0         AX
)@@G@@. REL LOCATION WITHIN TEMP FILE BLOCK     @E@@@@TRADDR*   +         0   AY
)@@G@@      . ADDRESS OF TEMP FILE BLOCK  @G@@@@TORELR*   +         0         AZ
)@@G@@. RELATIVE LOCATION WITHIN TEMP BLOCK     @G@@@@TBRSTA*   +         0   BA
)@@G@@      . REL BLOCK NUMBER FOR WHICH READ STARTED @E@@@@RECNMR*   +       BB
)@@G@@  0         . # OF RECORDS READ           @G@@@@CURREC*   +         0   BC
)@@G@@              . CURRENT RECORD NUMBER           @E@@@@SECTAD*   +       BD
)@@G@@  0                 . ADDRESS OF SECTOR   @]@@@@$(10)       @G@@@@TBSQWNBE
)@@G@@*   +         0              . # OF TEMP BLKS WRITTEN BY SEQ WRITE@G@@@@BF
)@@G@@INXLOW*   +         0              . # OF 1ST INDEX IN CONCERNED BLOCK  BG
)@@G@@@G@@@@INXINT*   +         0              . # OF INDICES IN INDEX BLK+ OVBH
)@@G@@F     @G@@@@LOCRCN*   +         0              . RECORD NUMBER AS SUPPLIBI
)@@G@@ED LOCINX   @G@@@@LCINX*    +         0              . INDEX LOCATED BY BJ
)@@G@@LOCINX ROUTINE    @G@@@@LCINXA*   +         0              . ADDRESS OF BK
)@@G@@INDEX LOCATED BY LCINX  @I@@@@IFNDOOVF* +         0                 . SWBL
)@@G@@ = 1 IF INDEX IS FOUND IN OVERFLOW        @I@@@@                        BM
)@@G@@              . AREA. IT IS RESET UPON ENTRY TO INXBUF      @G@@@@RNDSAVBN
)@@G@@*   +         0              . TOSAVE ADDR OF RND TABLE ENTRY     @G@@@@BO
)@@G@@INXPKT*   RES       2              . PACKET TO CALL INDEX BUFFER ROUTINEBP
)@@G@@@E@@@@INXREL*   +         0              . REL INDEX WITHIN BLOCK @A@@@@BQ
)@@G@@                                   .@G@@@@TEMPKT*   RES       2         BR
)@@G@@     . PACKET TO CALL TEMP FILE BUF ROUTNE@^@@@@RETN1*    +         0   BS
)@@G@@@G@@@@IBFENT*   +         0              . # OF ENTRIES IN INDEX EDIT BUBT
)@@G@@FFERS @G@@@@IBRTAD*   +         0                 . INDEX BUFFER CORE REBU
)@@G@@F TABLE     @G@@@@IOVFRAD*  +         0                 . ADDR OF OVF INBV
)@@G@@DEX REF TABLE     @G@@@@IUPDPT1*  +         0                 . POINTER BW
)@@G@@TO UPDATE INDEX TABLE   @G@@@@IUPDAD*   +         0                 . ADBX
)@@G@@DR OF INDEX BLOCK INDIC UPDATE@G@@@@IBFPT1*   +         0              .BY
)@@G@@ POINTER TO INDEX EDIT BUF TABLE    @G@@@@TBFENT*   +         0         BZ
)@@G@@     . # OF ENTRIES IN TEMP EDIT BUFFERS  @G@@@@TBRTAD*   +         0   CA
)@@G@@              . TEMP BUFFER CORE REF TABLE      @G@@@@TBFPT1*   +       CB
)@@G@@  0              . POINTER TO TEMP EDIT BUF TABLE     @G@@@@LOCSWB*   + CC
)@@G@@        0              . SECTOR WITHIN TEMP BLK FOR LOCREC  @G@@@@LOCBLKCD
)@@G@@*   +         0              . TEMP BLOCK NUMBER FOR LOCREC       @I@@@@CE
)@@G@@RMR1SW*   +         0                 . TO INDICATE RMR WITHOUT REC DELICF
)@@G@@VERY        @^@@@@          END           ___ . SECTOR NUMBER OF WRITTENCG
)@@G@@ INDEX BLK  @G@@@@TDBLSW*   +         0              . TEMP FILE WRITE DCH
)@@G@@BLE BUF SWITCH    @G@@@@TBNUMW*   +         0   *[@@@@*SDFF*@[@@@@$(1)  CI
)@@G@@@#@@@@          AXR$    @[@@@@ .    @D@@@@TF$C* . TEMPORARY FILE ACCESS CJ
)@@G@@METHOD CHANGE COMMAND   @^@@@@EXTRAW    EQU       0   @C@@@@          SXCK
)@@G@@,H2     X11,RETURN     . $H TF$C    @G@@@@          SLJ       FRSTED    CL
)@@G@@     . $P FLUSH SQW INDEX BUF ON 1ST EDIT @[@@@@ .    @F@@@@ . PREPARE TCM
)@@G@@O BUILD PACKET TO CALL RANDOM READ FOR THIS RECORD    @C@@@@          SXCN
)@@G@@,H2     X10,SAVX10     . $P SAVE X10@G@[@@          LA,H1     A0,0,X10  CO
)@@G@@     . $P REC # TO BE CHANGED TO A0       @G@@@[          LA        A0,0CP
)@@G@@,X10       . $P REC # TO BE CHANGED TO A0       @F@@@@          LX,U    CQ
)@@G@@  X10,RNDPKT     . $P ADDR OF RNDPKT TO X10     @E@[@@          SA,H1   CR
)@@G@@  A0,0,X10       . $P REC # TO RNDPKT     @E@@@[          SA        A0,0CS
)@@G@@,X10       . $P REC # TO RNDPKT     @G@@@@          LMJ       X11,TF$RMRCT
)@@G@@1    . $W TF$RMR1 ISSUE RANDOM READ       @D@@@@          TZ,T1     RNDPCU
)@@G@@KT+2       . $T SUCCESSFUL    @E@@@@          J         DLTER1         .CV
)@@G@@ $A NO,DLTER1 YES       @G@[@@          LA,H2     A3,0,X10       . $P ORCW
)@@G@@IGINAL RECORD LENGTH TO A3    @G@@@[          LA,H2     A3,2,X10       .CX
)@@G@@ $P ORIGINAL RECORD LENGTH TO A3    @G@@@@          AA,U      A3,EXTRAW CY
)@@G@@     . $P RCD LENGTH + EXTRAW TO A3       @A@@@@          LA        A0,SCZ
)@@G@@AVX10      .@E@[@@          LA,H2     A4,0,A0        . $P NEW LENGTH TO DA
)@@G@@A4    @E@@@[          LA,H2     A4,2,A0        . $P NEW LENGTH TO A4    DB
)@@G@@@G@@@@          TG        A3,A4          . $T OLD RCD SIZE <  NEW LENGTHDC
)@@G@@      @E@@@@          J         CHNGT1         . $A NO,CHNGT1 YES       DD
)@@G@@@F@@@@          LA        A1,A4          . $P NEW RECORD LENGTH TO A1   DE
)@@G@@@E@@@@          AA,U      A1,1           . $P ADD 1 FOR REC HDR   @F@@@@DF
)@@G@@          SA        A1,RECLEN      . $P TOTAL LENGTH TO RECLEN    @F@@@@DG
)@@G@@          LA,H2     A2,1,A0        . $P ADDR OF NEW RECORD TO A2  @F@@@@DH
)@@G@@          SA        A2,RECADD      . $P RECORD ADDRESS TO RECADD  @C@@@@DI
)@@G@@CHNLP1 . CHECK IF THERE IS SPACE IN TEMP FILE   @G@@@@          TNZ     DJ
)@@G@@  TBWRSW         . $  ANYTHING WRITTEN IN TEMP BLOCK  @G@@@@          LMDK
)@@G@@J       X11,TINIT      . $  INITIALIZE TEMP BLOCK IF NOTHING@G@@@@      DL
)@@G@@    LMJ       X11,TSPACE     . $T ANY SPACE LEFT IN TEMP FILE     @E@@@@DM
)@@G@@          JZ        A2,CHNGT2      . $A YES,CHNGT2 NO       @E@@@@      DN
)@@G@@    LMJ       X11,TBWRT1     . $P WRITE RECORD OUT    @C@@@@          J DO
)@@G@@        CHNLP1         . $J CHNLP1  @A@@@@CHNGT2 . FOUND SPACE IN TEMP BDP
)@@G@@LOCK  @G@@@@          LX        X9,TWADDR      . $P ADDRESS OF TEMP BLOCDQ
)@@G@@K TO X9     @G@@@@          AX        X9,TBRELW      . $P X9 POINTS TO NDR
)@@G@@EW LOC IN TEMP BLK@E@@@@          LA        A3,RECLEN      . $P RECORD LDS
)@@G@@ENGTH TO A3 @G@@@@          SA,H2     A3,0,X9        . $P RCD LGTH TO H2DT
)@@G@@ OF TEMP ENTRY    @F@@@@          AA,U      A3,EXTRAW      . $P RCD LGTHDU
)@@G@@ + EXTRAW TO A3   @G@@@@          SA        A3,RECLN1      . $P RCD LGTHDV
)@@G@@ + EXTRAW TO RECLN1     @G@@@@          SA,H1     A3,0,X9        . $P RCDW
)@@G@@D LGTH + EXTRAW TO H1 OF TBUF @E@@@@          LA        A3,RECLEN      .DX
)@@G@@ $P RECORD LENGTH TO A3 @G@@@@          AX,U      X9,1           . $P REDY
)@@G@@CORD DESTINATION ADDR TO X9   @A@@@@          ANA,U     A3,1           .DZ
)@@G@@@E@@@@          LR        R1,A3          . $P RECORD LENGTH TO R1 @G@@@@EA
)@@G@@          LX        X8,RECADD      . $P RECORD ORIGINATING ADDR TO X8   EB
)@@G@@@G@@@@          SLJ       RTRANS         . $W RTRANS TRANSFER RCD TO TEMEC
)@@G@@P BLK @G@@@@          LMJ       X11,FRMINX     . $W FRMINX FORM INDEX FOED
)@@G@@R RECORD    @A@@@@          LA        A5,TBRELW      .@A@@@@          AAEE
)@@G@@        A5,RECLN1      .@E@@@@          SA        A5,TBRELW      . $P UPEF
)@@G@@DATE TBRELW       @A@@@@          LA,U      A0,1           .@D@@@@      EG
)@@G@@    SA        A0,TBWRSW      . $P SET TBWRSW    @D@@@@ . PREPARE TO CHANEH
)@@G@@GE INDEX FOUND BY THE NEW INDEX     @D@@@@          SLJ       INDXUPD   EI
)@@G@@        . $W INDXUPD    @E@@@@          LA        A0,LCINXA      . $P INEJ
)@@G@@DEX ADDRESS TO A0 @F@@@@          LA        A1,INDEX       . $P NEWLY FOEK
)@@G@@RMED INDEX TO A1  @G@@@@          SA        A1,0,A0        . $P NEWLY FOEL
)@@G@@RMED INDEX TO INDEX BLK @A@@@@          LX        X10,SAVX10     .@F@@@@EM
)@@G@@          LX,H2     X9,1,X10       . $P ADDR OF NEW RECORD TO X9  @D@@@@EN
)@@G@@          LA        A2,0,X9        . $P DBP TO A2     @E@@@@          SAEO
)@@G@@        A2,1,A0        . $P DBP TO INDEX BLK    @C@@@@          J       EP
)@@G@@  DLTEX0         . $J DLTEX0  @[@@@@ .    @F@@@@CHNGT1 . OLD RECORD HAS EQ
)@@G@@SUFFICINT SPACE, REPLACE RECORD AND DBP   @F@@@@          LA        A1,AER
)@@G@@4          . $P NEW REC LENGTH  TO A1     @E@@@@          AA,U      A1,1ES
)@@G@@           . $P ADD 1 FOR REC HEADER@A@@@@          SA        A1,RECLEN ET
)@@G@@      @F@@@@          LX,H2     X9,TEMPKT      . $P RECORD HDR ADDR TO XEU
)@@G@@9     @G@@@@          SA,H2     A1,0,X9        . $P NEW RECORD LENGTH TOEV
)@@G@@ REMP BLK   @G@@@@          AX,U      X9,1           . $P RECORD DESTINAEW
)@@G@@TION ADDRESS TO X9@A@@@@          ANA,U     A1,1           .@E@@@@      EX
)@@G@@    LR        R1,A1     . $P RECORD LENGTH TO R1      @A@@@@          LXEY
)@@G@@        X10,SAVX10     .@F@@@@          LX,H2     X8,1,X10       . $P NEEZ
)@@G@@W RECORD ADDRESS TO X8  @D@@@@          LA        A5,0,X8        . $P DBFA
)@@G@@P TO A5     @F@@@@          SLJ       RTRANS         . $W RTRANS TRANSFEFB
)@@G@@R RECORD    @D@@@@          SLJ       INDXUPD           . $W INDXUPD    FC
)@@G@@@E@@@@          LA        A0,LCINXA      . $P INDEX ADDRESS TO A0 @F@@@@FD
)@@G@@          SA        A5,1,A0        . $P CHANGE DATA BASE POINTER  @]@@@@FE
)@@G@@DLTEX0 .    @G@@@@          SZ,T1     2,X10          . $P SET ZERO RETURFF
)@@G@@N CODE (SUCCESSFUL@C@@@@          J         *RETURN        . $E EXIT    FG
)@@G@@@]@@@@DLTER1 .    @A@@@@          LA,U      A0,1           .@E@@@@      FH
)@@G@@    SA,T1     A0,2,X10       . $P SET NONZERO STATUS  @C@@@@          J FI
)@@G@@        *RETURN        . $E EXIT    @[@@@@ .    @[@@@@ .    @B@@@@INDXUPFJ
)@@G@@D*  +         0                 .   @[@@@@ .    @E@@@@ . SUBROUTINE TO MFK
)@@G@@ARK THAT AN INDEX BLOCK HAS BEEN MODIFIED @C@]@@ . POINTER TO ENTRY IN IFL
)@@G@@UPDTAB IS IN IUPDPT1    @E@@@] . POINTER TO ENTRY IN INDEX UPDATE TABLE FM
)@@G@@IS IN IUPDPT1     @[@@@@ .    @B@@@@          DS        A0,UPDSAVE      FN
)@@G@@  .   @H@@@@          TZ        IFNDOOVF          . $T WAS LAST BLOCK FOFO
)@@G@@UND ON OVERFLOW   @E@@@@          J         UPDRET            . $A YES,UFP
)@@G@@PDRET NO    @E@@@@          LA        A0,IUPDPT1        . REL ENTRY LOC FQ
)@@G@@TO A0 @B@@@@          TG,U      A0,IBNUM          .   @B@@@@          ERFR
)@@G@@        ERR$              .   @G@]@@          AA,U      A0,IUPDTAB      FS
)@@G@@  . ABSOLUTE ENTRY ADDR TO A0       @G@@@]          AA        A0,IUPDAD FT
)@@G@@        . ABSOLUTE ENTRY ADDR TO A0       @B@@@@          LA,U      A1,7FU
)@@G@@              .   @F@@@@          SA        A1,0,A0           . MARK ENTFV
)@@G@@RY AS UPDATED     @[@@@@ .    @[@@@@ .    @]@@@@UPDRET .    @[@@@@ .    FW
)@@G@@@[@@@@ .    @B@@@@          DL        A0,UPDSAVE        .   @B@@@@      FX
)@@G@@    J         *INDXUPD          .   @[@@@@ .    @[@@@@/     @[@@@@ .    FY
)@@G@@@[@@@@ .    @[@@@@$(2)  @G@@@@UPDSAVE   RES       2                 . TOFZ
)@@G@@ SAVE REGISTERS BY INDXUPD    @[@@@@ .    @G@@@@RETURN    +         0   GA
)@@G@@           . RETURN ADDRESS FOR CHANGE COMMAND  @^@@@@SAVX10    +       GB
)@@G@@  0   @F@#@@CHBUFF*   RES       326       . BUFFER TO HOLD RECORD DELIVEGC
)@@G@@RED   @G@[@@RNDPKT*   +         0              . RCD# IN H1, LENGTH IN HGD
)@@G@@2           @C@@@[RNDPKT*   +         0              . RCD#       @G@#@@GE
)@@G@@          +         CHBUFF         . BUFFER ADDRESS FOR RECORD DELIVERY GF
)@@G@@@G@@@#          +         0              . BUFFER ADDRESS FOR RECORD DELGG
)@@G@@IVERY @E@[@@          +         0              . STATUS IN T1           GH
)@@G@@@F@@@[          +         0              . STATUS IN T1, LENGTH IN H2   GI
)@@G@@@#@@@@          END     ___ TEMP FILE     @E@@@@*[@@@@*SDFF*@[@@@# .    GJ
)@@G@@@#@@@#          AXR$    @[@@@#$(1)  @D@@@#TF$MVE* . TEMP     FILE ACCESSGK
)@@G@@ METHOD MOVE COMMAND    @[@@@# .    @C@@@#           SX,H2    X11,RETURNGL
)@@G@@     . $H TF$MVE  @C@@@#           SX       X10,X10SAV     . $P SAVE X10GM
)@@G@@@G@@@#          SLJ       FRSTED         . $P FLUSH SQW INDEX BUF ON 1STGN
)@@G@@ EDIT @G@@@#           LMJ      X11,CHRNGE     . $W CHRNGE CHECK IF RECOGO
)@@G@@RDS IN RANGE@G@@@#          TZ        A2             . $T RCD# TO MOVE AGP
)@@G@@FTER OUT OF RNGE  @E@@@#          J         MVEER1         . $A NO,MVEERGQ
)@@G@@1 YES       @B@@@#           LA       A0,3,X10       . $    @E@@@#      GR
)@@G@@     SA       A0,MVSAV2      . $P RCD#3 TO   (MVSAV2) @A@@@#           LGS
)@@G@@A       A1,4,X10       .@A@@@#           ANA      A1,A0          .@G@@@#GT
)@@G@@           AA,U     A1,1           . $P NUMBER OF RECS TO BE MOVED TO A1GU
)@@G@@@G@^@#           SA,H2    A1,MVSAV2      . $P # OF RECS TO MOVE TO H2(MVGV
)@@G@@SAV2) @G@@@^           SA       A1,NUMMVE      . $P # OF RECS TO MOVE TOGW
)@@G@@   (NUMMVE) @A@@@#           LA       A2,0,X10       .@E@@@#           SGX
)@@G@@A       A2,MVSAV1      . $P RCD#1 TO MVSAV1     @[@@@# .    @C@@@# . SETGY
)@@G@@ UP LOOP FOR MOVING RECORDS ONE BY ONE    @]@@@#MVELP1      @G@^@#      GZ
)@@G@@    TNZ,H2    MVSAV2         . $T DONE WITH ALL RECORDS TO MOVE   @G@@@^HA
)@@G@@          TNZ       NUMMVE         . $T DONE WITH ALL RECORDS TO MOVE   HB
)@@G@@@E@@@#          J         MVEDN1         . $A YES,MVEDN1 NO       @G@ @#HC
)@@G@@          LX,U      X10,RNDPKT     . $P ADDR OF RANDOM READ PKT TO X10  HD
)@@G@@@G@@@           LX,U      X10,RMVPKT     . $P ADDR OF RANDOM READ PKT TOHE
)@@G@@ X10  @F@@@#          LA        A0,MVSAV2      . $P RECORD # TO MOVE TO HF
)@@G@@A0    @G@ @#          SA        A0,0,X10       . $P RECORD # TO MOVE TO HG
)@@G@@RNDPKT      @G@@@           SA        A0,0,X10       . $P RECORD # TO MOHH
)@@G@@VE TO RMVPKT      @F@@@#          LMJ       X11,TF$RMR     . $W TF$RMR IHI
)@@G@@SSUE RANDOM READ  @G@ @#                                   .    RECORD DHJ
)@@G@@ELIVERED TO CHBUFF      @F@@@                                    .    REHK
)@@G@@CORD DELIVERED TO RDA   @E@ @#          TZ,T1     RNDPKT+2       . $T SUHL
)@@G@@CCESSFUL          @D@@@           TZ,T1     RMVPKT+2       . $T SUCCESSFHM
)@@G@@UL    @E@@@#          J         MVEER1         . $A NO,MVEER1 YES       HN
)@@G@@@C@ @^          L$SNAP    'RNDPKT',0,4,RNDPKT         @B@B@           L$HO
)@@G@@SNAP    'RMVPKT',0,4,RMVPKT   @B@@@B       .  L$SNAP    'RMVPKT',0,4,RMVHP
)@@G@@PKT   @[@@@# .    @E@@@# . PREPARE TO DELETE RECORD JUST READ TO FREE INHQ
)@@G@@DEX SPACE   @[@@@# .    @F@@@#          LX,U      X10,DLTPKT     . $P ADHR
)@@G@@DR OF DLTPKT TO X10     @A@ @#          LA        A1,RNDPKT      .@A@@@ HS
)@@G@@          LA        A1,RMVPKT      .@G@@@#          SA        A1,3,X10  HT
)@@G@@     . $P RECORD NUMBER TO DELETE TO PKT  @A@@@#          SA        A1,4HU
)@@G@@,X10       .@E@@@#          LMJ       X11,TF$DLT     . $W TF$DLT DELETE HV
)@@G@@RECORD@B@@@#          TZ,T1     DLTPKT+2          .   @B@@@#          J HW
)@@G@@        MVEER1            .   @[@@@# .    @C@@@# . FIGURE OUT EFFECT OF HX
)@@G@@DELETE ON RECORD NUMBERS@[@@@# .    @E@ @#          LA        A2,RNDPKT HY
)@@G@@     . $P RECORD DELETED TO A2@E@@@           LA        A2,RMVPKT      .HZ
)@@G@@ $P RECORD DELETED TO A2@E@@@#          TG        A2,MVSAV1      . $T RCIA
)@@G@@D# DELETED < RCD#1@E@@@#          J         MVEGT2         . $A NO,MVEGTIB
)@@G@@2 YES,MVEGT1@ @@@#          J         MVEGT1    @A@@@#MVEGT1    LA      IC
)@@G@@  A3,MVSAV1      .@A@@@#          ANA,U     A3,1           .@G@@@#      ID
)@@G@@    SA        A3,MVSAV1      . $P DECREMENT RCD#1, WHERE TO INSERT@F@@@#IE
)@@G@@MVEGT2 . PREPARE TO INSERT RECORD IN FILE AFTER RCD# IN  MVSAV1   @[@@@#IF
)@@G@@ .    @ @@@# . SET UP THE INSERT PACKET   @F@@@#          LX,U      X10,IG
)@@G@@IAFPKT     . $P ADDR OF IAFPKT TO X10     @A@@@#          LA        A4,MIH
)@@G@@VSAV1      .@G@@@#          SA        A4,0,X10       . $P RCD# TO INSERTII
)@@G@@ AFTER H1(IAFPKT) @G@ @#          LA,H2     A5,RNDPKT+2    . $P LENGTH OIJ
)@@G@@F RECORD TO A5          @F@@@           LA,H2     A5,RMVPKT+2    . $P LEIK
)@@G@@NGTH OF RECORD TO A5    @G@@@#          SA,H2     A5,2,X10       . $P LEIL
)@@G@@NGTH OF RECORD TO H2(IAFPKT)  @E@@@#          LMJ       X11,TF$IA      .IM
)@@G@@ $W TF$IA INSERT RECORD @A@@@#          TZ,T1     2,X10          .@A@@@#IN
)@@G@@          J         MVEER1         .@B@B@^          L$SNAP    'DLTMVE',0IO
)@@G@@,12,DLTPKT  @B@@@B       .  L$SNAP    'DLTMVE',0,12,DLTPKT  @G@@@#      IP
)@@G@@    LA        A5,MVSAV1      . $P RCD# TO INSERT AFTER TO A5      @G@@@#IQ
)@@G@@          TLE       A5,MVSAV2      . $T RCD# TO INSERT <= INSERT RCD#   IR
)@@G@@@E@@@#          J         MVEGT4         . $A NO,MVEGT2 YES,MVEGT3@ @@@#IS
)@@G@@          J         MVEGT3    @C@@@#MVEGT4 . INCREMENT RECORD TO INSERT IT
)@@G@@AFTER       @G@@@#          AA,U      A5,1           . $P INCREMEN RCD# IU
)@@G@@TO INSERT AFTER   @G@@@#          SA        A5,MVSAV1      . $P NEW RCD#IV
)@@G@@ TO INSERT AFTER  MVSAV1@A@@@#          LA        A1,MVSAV2      .@A@@@#IW
)@@G@@          AA,U      A1,1           .@G@@@#          SA        A1,MVSAV2 IX
)@@G@@     . $P INCREMENT NEXT RECORD # TO MOVE @ @@@#          J         MVEGIY
)@@G@@T5    @]@@@#MVEGT3 .    @A@@@#          LA        A1,MVSAV1      .@A@@@#IZ
)@@G@@          AA,U      A1,1           .@G@@@#          SA        A1,MVSAV1 JA
)@@G@@     . $P INCREMENT RCD= TO INSERT AFTER  @]@@@#MVEGT5 .    @A@^@#      JB
)@@G@@    LA,H2     A0,MVSAV2      .@A@@@^          LA        A0,NUMMVE      .JC
)@@G@@@A@@@#          ANA,U     A0,1           .@G@^@#          SA,H2     A0,MJD
)@@G@@VSAV2      . $P DECREMENT # OF RECORDS TO MOVE  @G@@@^          SA      JE
)@@G@@  A0,NUMMVE      . $P DECREMENT # OF RECORDS TO MOVE  @ @@@#          J JF
)@@G@@        MVELP1    @A@@@#MVEDN1 . NO MORE RECORDS TO MOVE    @D@@@#      JG
)@@G@@    LX        X10,X10SAV     . $P RESTORE X10   @F@@@#          SZ,T1   JH
)@@G@@  2,X10          . $P STORE SUCCESSFUL RETURN   @A@@@#          LA      JI
)@@G@@  A0,0,X10       .@G@@@#          SA        A0,1,X10       . $P RETURN FJJ
)@@G@@INAL RCD# TO CALLER SAME@B@@@A          SZ        RDA               .   JK
)@@G@@@C@A@ _         SZ        RDA               .         @B@@@           SZJL
)@@G@@        RDALN             .   @C@@@#          J         *RETURN        .JM
)@@G@@ $E EXIT    @]@@@#MVEER1 .    @D@@@#          LX        X10,X10SAV     .JN
)@@G@@ $P RESTORE X10   @^@@@#          LA,U      A0,1@F@@@#          SA,T1   JO
)@@G@@  A0,2,X10       . $P SET ERROR RETURN CODE     @B@@@           SZ      JP
)@@G@@  RDA               .   @B@@@           SZ        RDALN             .   JQ
)@@G@@@C@@@#          J         *RETURN        . $E EXIT    @[@@@# .    @G@@@#JR
)@@G@@ . SUBROUTINE TO CHECK IF RCD# TO MOVE   AFTER IS OUT OF RANGE OF       JS
)@@G@@@^@@@# . RECORDS TO BE MOVED. @F@@@# . UPON RETURN, A2 CONTAINS ERROR COJT
)@@G@@DE (0 = RCD# OUT OF RANGE)    @[@@@# .    @C@@@#CHRNGE    SX,H2     X11,JU
)@@G@@RET1       . $H CHRNGE  @D@@@#          LA        A0,0,X10       . $P RCJV
)@@G@@D#1 TO A0   @D@@@#          LA        A1,3,X10       . $P RCD#3 TO A1   JW
)@@G@@@D@@@#          LA        A2,4,X10       . $P RCD#4 TO A2   @E@@@#      JX
)@@G@@    TLE       A2,A1          . $T RCD#3 <= RCD#4      @E@@@#          J JY
)@@G@@        CHREX1         . $A NO,CHREX1 YES       @E@@@#          TG      JZ
)@@G@@  A0,A1          . $T RCD#3 > RCD#1       @E@@@#          J         CHRGKA
)@@G@@T1         . $A NO,CHRGT1 YES,CHREX0@ @@@#          J         CHREX0    KB
)@@G@@@]@@@#CHRGT1 .    @E@@@#          TLE       A2,A0          . $T RCD#1 <=KC
)@@G@@ RCD=4      @E@@@#          J         CHREX0         . $A NO,CHREX0 YES KD
)@@G@@      @G@@@#CHREX1    LA,U      A2,1           . $P RETURN NONZERO ERRORKE
)@@G@@ CODE       @C@@@#          J         *RET1          . $E EXIT    @F@@@#KF
)@@G@@CHREX0    SZ        A2             . $P RETURN ZERO ERROR STATUS  @C@@@#KG
)@@G@@          J         *RET1          . $E EXIT    @[@@@#$(2)  @C@@@ RMVPKTKH
)@@G@@*   +         0                 . RCD#    @G@@@           +         RDA KI
)@@G@@              . BUFFER ADDRESS FOR DELIVERY     @G@@@           +       KJ
)@@G@@  0                 . STATUS IN T1, LENGTH IN H2      @E@@@#DLTPKT*   + KK
)@@G@@        0         . # OF RECORDS   DELETED      @B@@@#          +       KL
)@@G@@  0         . RCD#2     @E@@@#          +         0         . T1 HAS STAKM
)@@G@@TUS (0=SUCCESSFUL)@C@@@#          +         0                 . RCD#3   KN
)@@G@@@C@@@#          +         0                 . RCD#4   @D@@@#IAFPKT*   + KO
)@@G@@        0         . RCD# TO INSERT AFTER  @C@ @#          +         CHBUKP
)@@G@@FF      RECORD ADDRESS  @C@@@           +         RDA         RECORD ADDKQ
)@@G@@RESS  @G@@@#          +         0         . T1 HAS STATUS (0=SUCCESSFUL)KR
)@@G@@, H2 LENGTH @E@@@#MVSAV1    +         0         .  HAS RECORD # TO MOVE KS
)@@G@@AFTER @G@@@#MVSAV2    +         0         .  HAS RCD3 FROM PACKET FOR LOKT
)@@G@@OP CONTROL  @E@@@^NUMMVE    +         0                 . # OF RECORDS TKU
)@@G@@O MOVE@C@@@#X10SAV    +         0         . TO SAVE X10     @^@@@#RET1  KV
)@@G@@    +         0   @^@@@#RETURN    +         0   @[@@@# .    @#@@@#      KW
)@@G@@    END     ___ TG        A2,MVSAV1      . $T RCD# DELETED < RCD#1@E@@@#KX
)@@G@@          J         MVEGT2         . $A NO,MVEGT*[@@@@*SDFF*@C@@@@ . TEMKY
)@@G@@PORARY FILE ACCESS METHOD COPY COMMAND    @[@@@@ .    @#@@@@          AXKZ
)@@G@@R$    @[@@@@$(1)  @C@@@@TF$CPY*                            . $H TF$CPY  LA
)@@G@@@A@@@@          SX,H2     X11,RETURN     .@C@@@@          SX        X10,LB
)@@G@@X10SAV     . $P SAVE X10@G@@@@          SLJ       FRSTED         . $P FLLC
)@@G@@USH SQW INDEX BUF ON 1ST EDIT @E@[@@          LA,H1     A0,1,X10       .LD
)@@G@@ $P RCD#3 TO A0         @D@@@[          LA        A0,3,X10       . $P RCLE
)@@G@@D#3 TO A0   @E@[@@          LA,H2     A1,1,X10       . $P RCD#4 TO A1   LF
)@@G@@      @D@@@[          LA        A1,4,X10       . $P RCD#4 TO A1   @C@[@@LG
)@@G@@          LA,H1     A2,0,X10  . $P RCD#1 TO A2  @C@@@[          LA      LH
)@@G@@  A2,0,X10  . $P RCD#1 TO A2  @G@@@@          SA,H2     A2,CPSAV1 . $P RLI
)@@G@@CD#1 TO CPSAV1, RCD# TO INSERT AFTER@E@@@@          TLE       A1,A0     LJ
)@@G@@     . $T RCD#3 <= RCD#4      @E@@@@          J         CPYER1         .LK
)@@G@@ $A NO,CPYER1 YES       @D@@@@          TLE       A0,A2     . $T RCD#1 <LL
)@@G@@= RCD#3     @E@@@@          J         CPYGT1    . $A NO,CPYGT1 YES,CPYGTLM
)@@G@@2     @A@@@@          J         CPYGT2    .     @]@@@@CPYGT1 .    @D@@@@LN
)@@G@@          TLE       A2,A1     . $T RCD#4 <= RCD#1     @C@@@@          J LO
)@@G@@        CPYER1    . $A NO,CPYER1 YES@C@@@@          SZ        CPYSW1    LP
)@@G@@. $P RESET CPYSW1 @C@@@@          J         CPYGT3    . $J CPYGT3       LQ
)@@G@@@C@@@@CPYGT2    LA,U      A5,1      . $P SET CPYSW1   @A@@@@          SALR
)@@G@@        A5,CPYSW1      .@]@@@@CPYGT3 .    @[@@@@ .    @G@]@@          SALS
)@@G@@,H1     A0,CPSAV2      . $P RCD# TO COPY   TO H1(CPSAV2)    @G@@@]      LT
)@@G@@    SA        A0,CPSAV2      . $P RCD# TO COPY   TO (CPSAV2)      @A@@@@LU
)@@G@@          ANA       A1,A0          .@A@@@@          AA,U      A1,1      LV
)@@G@@     .@G@]@@          SA,H2     A1,CPSAV2      . $P # OF RECORDS TO COPYLW
)@@G@@ H2(CPSAV2) @G@@@]          SA        A1,NUMCPY      . $P # OF RECORDS TLX
)@@G@@O COPY (NUMCPY)   @[@@@@ .    @C@@@@ . SET UP LOOP FOR COPYING RECORDS OLY
)@@G@@NE BY ONE   @[@@@@ .    @]@@@@CPYLP1 .    @G@]@@          TNZ,H2    CPSALZ
)@@G@@V2         . $T DONE WITH ALL RECORDS TO COPY   @G@@@]          TNZ     MA
)@@G@@  NUMCPY         . $T DONE WITH ALL RECORDS TO COPY   @E@@@@          J MB
)@@G@@        CPYDNE         . $A YES,CPYDNE NO       @G@#@@          LX,U    MC
)@@G@@  X10,RNDPKT     . $P ADDR OF RANDOM READ PKT TO X10  @G@@@#          LXMD
)@@G@@,U      X10,RMVPKT     . $P ADDR OF RANDOM READ PKT TO X10  @E@]@@      ME
)@@G@@    LA,H1     A0,CPSAV2      . $P RCD# TO COPY TO A0  @E@@@]          LAMF
)@@G@@        A0,CPSAV2      . $P RCD# TO COPY TO A0  @G@[@@          SA,H1   MG
)@@G@@  A0,0,X10       . $P RCD# TO COPY TO RNDPKT          @G@#@[          SAMH
)@@G@@        A0,0,X10       . $P RCD# TO COPY TO RNDPKT          @F@@@#      MI
)@@G@@    SA        A0,0,X10       . $P RCD# TO COPY TO RMVPKT    @F@@@@      MJ
)@@G@@    LMJ       X11,TF$RMR     . $W TF$RMR ISSUE RANDOM READ  @G@#@@      MK
)@@G@@                             .    RECORD DELIVERED TO CHBUFF      @F@@@#ML
)@@G@@                                   .    RECORD DELIVERED TO RDA   @E@#@@MM
)@@G@@          TZ,T1     RNDPKT+2       . $T SUCCESSFUL          @D@@@#      MN
)@@G@@    TZ,T1     RMVPKT+2       . $T SUCCESSFUL    @E@@@@          J       MO
)@@G@@  CPYER1         . $A NO,CPYER1 YES       @[@@@@ .    @E@@@@ . PREPARE TMP
)@@G@@O INSERT RECORD IN FILE AFTER RECORD IN CPSAV1  @[@@@@ .    @C@#@]      MQ
)@@G@@    L$SNAP    'RNDPKT',0,4,RNDPKT         @B@^@#          L$SNAP    'RMVMR
)@@G@@PKT',0,4,RMVPKT   @B@@@^       .  L$SNAP    'RMVPKT',0,4,RMVPKT   @G@@@@MS
)@@G@@          LX,U      X10,IAFPKT     . $P ADDR OF INSERT AFTER PKT TO X10 MT
)@@G@@@A@@@@          LA,H2     A4,CPSAV1      .@G@[@@          SA,H1     A4,0MU
)@@G@@,X10       . $P RCD# TO INSERT AFTER TO IAFPKT  @G@@@[          SA      MV
)@@G@@  A4,0,X10       . $P RCD# TO INSERT AFTER TO IAFPKT  @A@[@@          LAMW
)@@G@@,H2     A5,RNDPKT      .@A@#@[          LA,H2     A5,RNDPKT+2    .@A@@@#MX
)@@G@@          LA,H2     A5,RMVPKT+2    .@G@[@@          SA,H2     A5,0,X10  MY
)@@G@@     . $P RCD LENGTH TO H2(IAFPKT)        @G@]@[          SA,H2     A5,3MZ
)@@G@@,X10       . $P RCD LENGTH TO H2(IAFPKT)+2      @G@@@]          SA,H2   NA
)@@G@@  A5,2,X10       . $P RCD LENGTH TO H2(IAFPKT)+2      @E@@@@          LMNB
)@@G@@J       X11,TF$IA      . $W TF$IA INSERT RECORD @D@@@@          TZ,T1   NC
)@@G@@  2,X10          . $T SUCCESSFUL    @E@@@@          J         CPYER1    ND
)@@G@@     . $A NO,CPYER1 YES       @B@^@]          L$SNAP    'IAFPKT',0,4,IAFNE
)@@G@@PKT   @B@@@^       .  L$SNAP    'IAFPKT',0,4,IAFPKT   @E@]@@          LANF
)@@G@@,H1     A0,CPSAV2      . $P RCD# TO COPY TO A0  @E@@@]          LA      NG
)@@G@@  A0,CPSAV2      . $P RCD# TO COPY TO A0  @G@@@@          TZ        CPYSNH
)@@G@@W1         . $T RCD# TO COPY <= RCD# TO INSERT  @E@@@@          J       NI
)@@G@@  CPYGT5         . $A NO,CPYGT5 YES       @A@@@@                        NJ
)@@G@@           .@A@@@@                                   .@G@@@@          AANK
)@@G@@,U      A0,1           . $P INCREMENT RCD# TO COPY BY 1     @C@@@@      NL
)@@G@@    J         CPYGT6         . $J CPYGT6  @]@@@@CPYGT5 .    @G@@@@      NM
)@@G@@    AA,U      A0,2           . $P INCREMENT RCD# TO COPY BY 2     @G@]@@NN
)@@G@@CPYGT6    SA,H1     A0,CPSAV2      . $P NEW RCD# TO COPY TO H1(CPSAV2)  NO
)@@G@@@G@@@]CPYGT6    SA        A0,CPSAV2      . $P NEW RCD# TO COPY TO (CPSAVNP
)@@G@@2)    @A@]@@          LA,H2     A1,CPSAV1      .@A@@@]          LA      NQ
)@@G@@  A1,CPSAV1      .@A@@@@          AA,U      A1,1           .@G@]@@      NR
)@@G@@    SA,H2     A1,CPSAV1      . $P UPDATE RCD# TO INSERT BY 1      @G@@@]NS
)@@G@@          SA        A1,CPSAV1      . $P UPDATE RCD# TO INSERT BY 1      NT
)@@G@@@A@]@@          LA,H2     A2,CPSAV2      .@A@@@]          LA        A2,NNU
)@@G@@UMCPY      .@A@@@@          ANA,U     A2,1           .@G@]@@          SANV
)@@G@@,H2     A2,CPSAV2      . $P UPDATE # OF RECORDS TO COPY     @G@@@]      NW
)@@G@@    SA        A2,NUMCPY      . $P UPDATE # OF RECORDS TO COPY     @C@@@@NX
)@@G@@          J         CPYLP1         . $J CPYLP1  @]@@@@CPYDNE .    @D@@@@NY
)@@G@@          LX        X10,X10SAV     . $P RESTORE X10   @A@]@@          LANZ
)@@G@@,H2     A0,CPSAV1      .@A@@@]          LA        A0,CPSAV1      .@E@[@@OA
)@@G@@          SA,H2     A0,0,X10       . $P RETURN PROPER RCD#2 @E@@@[      OB
)@@G@@    SA        A0,1,X10       . $P RETURN PROPER RCD#2 @G@@@@          SZOC
)@@G@@,T1     2,X10          .  $P RETURN ZERO ERROR STATUS       @B@@@#      OD
)@@G@@    SZ        RDA               .   @B@@@#          SZ        RDALN     OE
)@@G@@        .   @C@@@@          J         *RETURN        . $E EXIT    @]@@@@OF
)@@G@@CPYER1 .    @G@@@@          LA,U      A0,1           . $P RETURN NON ZEROG
)@@G@@O ERROR STATUS    @A@@@@          SA,T1     A0,2,X10       .@B@@@#      OH
)@@G@@    SZ        RDA               .   @B@@@#          SZ        RDALN     OI
)@@G@@        .   @C@@@@          J         *RETURN        . $E EXIT    @[@@@@OJ
)@@G@@$(2)  @E@]@@CPSAV1    +         0         . H2 HAS RCD# TO INSERT AFTER OK
)@@G@@@E@@@]CPSAV1    +         0         .  HAS RCD# TO INSERT AFTER   @E@]@@OL
)@@G@@CPSAV2    +         0         . H1 HAS RCD# TO COPY         @D@@@]CPSAV2OM
)@@G@@    +         0         .  HAS RCD# TO COPY     @E@@@]NUMCPY    +       ON
)@@G@@  0                 . # OF RECORDS TO COPY@E@]@@                        OO
)@@G@@      . H2 HAS # OF RECORDS TO COPY @F@@@@CPYSW1    +         0         OP
)@@G@@.  0  WHEN RCD#3 <= RCD#4 <= RCD#1  @^@@@@RETURN    +         0   @B@@@@OQ
)@@G@@X10SAV    +         0                 .   @#@@@@          END     ___1,AOR
)@@G@@0          .@A@@@@          AA,U      A1,1      *[@@@@*SDFF*@[@@@D .    OS
)@@G@@@C@@@D . TEMPORARY FILE ACCESS METHOD, LOCATE BY DBP  @[@@@D .    @#@@@DOT
)@@G@@          AXR$    @[@@@D$(1)  @B@@@DTF$DBP1*  LA,U      A0,1            OU
)@@G@@  .   @E@@@D          SA        A0,DBPASW         . $P SET DBPASW       OV
)@@G@@@B@H@D          L$SNAP    'DBP1  ',0,4,DBPPKT   @B@@@H       .  L$SNAP  OW
)@@G@@  'DBP1  ',0,4,DBPPKT   @]@@@DTF$DBP*     @A@@@D          SX,H2     X11,OX
)@@G@@RETURN      @B@@@D          SX        X10,X10SAV        .   @F@@@D      OY
)@@G@@    SLJ       FRSTED         . $W FRSTED FLUSH INDEX BUFF   @A@@@D      OZ
)@@G@@    SZ        DBPSW          .@G@@@D          TNZ       RNDSAV          PA
)@@G@@  . $T HAS ANY BLOCK BEEN LOCATED   @E@@@D          J         DBPKFIL   PB
)@@G@@        . $A NO,DBPKFIL YES   @[@@@D .    @A@@@D . SEARCH LAST LOCATED BPC
)@@G@@LOCK FIRST  @[@@@D .    @B@@@D          LA        A2,RNDADD         .   PD
)@@G@@@B@@@D          LA        A1,RNDSAV         .   @H@@@D          ANA     PE
)@@G@@  A1,A2             . $P REL BLOCK # OF LAST LOCATED BLOCK  @B@@@D      PF
)@@G@@    TG        A1,RNDIDX         .   @B@@@D          ER        ERR$      PG
)@@G@@        .   @B@@@D          SA,H2     A1,DBPBLK         .   @G@@@D      PH
)@@G@@    LMJ       X11,DBPSCH        . $W DBPSCH SEARCH FOR INDEX      @E@@@DPI
)@@G@@          JZ        A2,DBPFND         . $T WAS INDEX FOUND  @E@@@D      PJ
)@@G@@                                . $A YES,DBPFND NO    @^@@@DDBPKFIL     PK
)@@G@@        .   @[@@@D .    @[@@@D .    @E@@@D . CALL THE KEY FILE ACCESS MEPL
)@@G@@THOD TO FIND REL INDEX BLOCK #@[@@@D .    @[@@@D .    @F@@@G          TNPM
)@@G@@Z,H1    1,X10             . $T IS POINTER ARTIFICIAL  @E@@@G          J PN
)@@G@@        ARTDBP            . $YES,ARTDBP NO      @F@@@D          LA      PO
)@@G@@  A0,1,X10          . $P DBP TO LOCATE TO A0    @E@@@D          SA      PP
)@@G@@  A0,KFAPKT+3       . $P DBP TO KFAPKT+3  @B@@@D          LX,U      X10,PQ
)@@G@@KFAPKT        .   @D@@@D          LMJ       X11,KF$AMR        . $W KF$AMPR
)@@G@@R     @B@@@D          LX        X10,X10SAV        .   @G@@@D          TZPS
)@@G@@        KFAPKT+5          . $T SUCCESSFUL KEY FILE READ     @E@@@D      PT
)@@G@@    J         ARTDBP            . $A NO,ARTDBP YES    @[@@@D .    @^@@@DPU
)@@G@@ . FOUND DBP IN KEY FILE@[@@@D .    @E@@@D          TZ,H1     KFAPKT+4  PV
)@@G@@        . $T RECORD RELOADED  @E@@@D          J         ARTDBP          PW
)@@G@@  . $A YES,ARTDBP NO    @F@@@D          LA,H2     A1,KFAPKT+4       . $PPX
)@@G@@ BLOCK NUMBER TO A1     @G@@@D          SA        A1,RELKBLK        . SAPY
)@@G@@VE RELATIVE BLOCK NUMBER      @F@@@D          TG        A1,RNDIDX       PZ
)@@G@@  . $T BLOCK NUMBER LEGAL     @E@@@D          J         ARTDBP          QA
)@@G@@  . $T NO,ARTDBP YES    @I@E@D          L$SNAP    'DBPKFM',0,4,KFAPKT+3 QB
)@@G@@                              .           @H@@@E       .  L$SNAP    'DBPQC
)@@G@@KFM',0,4,KFAPKT+3                               .     @D@@@D          J QD
)@@G@@        DBPGT3            . $J DBPGT3     @]@@@DARTDBP    . @[@@@D .    QE
)@@G@@@C@@@D . TEMPORARY FILE ACCESS METHOD, LOCATE BY DBP  @[@@@D .    @A@@@DQF
)@@G@@          LA        A2,RNDADD      .@G@@@D          TNZ       RNDSAV    QG
)@@G@@     . $T ANY RECORD HAS BEEN LOCATED     @E@@@D          J         DBPGQH
)@@G@@T1         . $A NO,DBPGT  YES       @B@@@D          LA        A1,RNDSAV QI
)@@G@@        .   @G@@@D          ANA       A1,A2          . $P RELATIVE CURREQJ
)@@G@@NT BLOCK# TO A1   @A@@@D          TG        A1,RNDIDX      .@A@@@D      QK
)@@G@@    ER        ERR$           .@C@@@D          J         DBPGT3         .QL
)@@G@@ $J DBPGT3  @]@@@DDBPGT1 .    @F@@@D          SZ        A1             .QM
)@@G@@ $P ASSUME 0 REL BLK NUMBER   @]@@@DDBPGT3 .    @F@@@D          SA      QN
)@@G@@  A1,BLKUP       . $P BLKUP = CUR REL INX BLK#  @^@@@D          ANA,U   QO
)@@G@@  A1,1@E@@@D          SA        A1,BLKDN       . $P BLKDN = BLKUP - 1   QP
)@@G@@@G@@@D          LR        R2,RNDIDX      . $P # OF BLK ENTRIES TO DBPIXNQQ
)@@G@@      @B@@@D          SR        R2,DBPIXN      . $    @]@@@DDBPLP1 .    QR
)@@G@@@G@@@D          JGD       R2,$+2         . $T ARE WE DONE WITH ALL ENTS QS
)@@G@@      @E@@@D          J         DBPER1         . $A YES,DBPER1 NO       QT
)@@G@@@]@@@DDBPLP2      @D@@@D          TZ        DBPSW          . $T DBPSW = QU
)@@G@@0     @E@@@D          J         DBPGT4         . $A NO,DBPGT4 YES       QV
)@@G@@@[@@@D .    @#@@@D . DBPSW IZ ZERO  @[@@@D .    @B@@@D          LA,U    QW
)@@G@@  A0,1           . $    @D@@@D          SA        A0,DBPSW       . $P SEQX
)@@G@@T DBPSW     @D@@@D          LA        A1,BLKUP       . $P BLKUP TO A1   QY
)@@G@@@A@@@D          LA        A2,RNDIDX      .@G@@@D          ANA,U     A2,1QZ
)@@G@@           . $P MAX REL INX BLK NUM TO A2       @G@@@D          TLE     RA
)@@G@@  A2,A1          . $T BLKUP <= MAX REL INX BLK NUM    @E@@@D          J RB
)@@G@@        DBPLP2         . $P NO,DBPLP2 YES       @A@@@D          LA      RC
)@@G@@  A3,A1       .   @A@@@D          AA,U      A3,1        .   @D@@@D      RD
)@@G@@    SA        A3,BLKUP    . $P INCREMENT BLKUP  @[@@@D .    @F@@@D . SHORE
)@@G@@ULD SEARCH BLOCK WHOSE REL # IS IN A1 FOR DBP, A1 CONTAINS  @^@@@D . RELRF
)@@G@@ BLK NUMBER       @E@@@DDBPGT6    SA,H2     A1,DBPBLK   . $P REL BLK # TRG
)@@G@@O H2(DBPBLK)@G@@@D          LMJ       X11,DBPSCH     . $W DBPSCH SEARCH RH
)@@G@@INDEX BLOCK       @E@@@D                                   .    A2=0 IF RI
)@@G@@SUCCESSFUL  @D@@@D          TZ        A2             . $T SUCCESSFUL    RJ
)@@G@@@E@@@D          J         DBPLP1         . $A NO,DBPLP1 YES,DBPFND@A@@@DRK
)@@G@@          J         DBPFND         .@^@@@DDBPGT4 . DBPSW IS ONE   @D@@@DRL
)@@G@@          SZ        DBPSW          . $P RESET DBPSW   @D@@@D          LARM
)@@G@@        A0,BLKDN       . $P BLKDN TO A0   @D@@@D          TG,U      A0,0RN
)@@G@@           . $T BLKDN ) 0     @E@@@D          J         DBPGT5         .RO
)@@G@@ $A NO,DBPGT5 YES,DBPLP2@ @@@D          J         DBPLP2    @]@@@DDBPGT5RP
)@@G@@ .    @D@@@D          LA        A1,BLKDN       . $P BLKDN TO A1   @A@@@DRQ
)@@G@@          LA        A3,A1          .@A@@@D          ANA,U     A3,1      RR
)@@G@@     .@E@@@D          SA        A3,BLKDN       . $P DECREMENT BLKDN     RS
)@@G@@@C@@@D          J         DBPGT6         . $J DBPGT6  @[@@@D .    @E@@@DRT
)@@G@@DBPFND . FOUND INDEX FOR DBP, WILL BE IN LOCATION DBPINX    @[@@@D .    RU
)@@G@@@A@@@D          LA        A3,DBPINX       @E@@@D          SA        A3,TRV
)@@G@@EMPKT+1    . $P INDEX TO TEMPKT+1   @E@@@D          LMJ       X11,LOCRECRW
)@@G@@     . $W LOCREC LOCATE RECORD@G@@@D          LX,H2     X8,TEMPKT      .RX
)@@G@@ $P ADDR OF RECORD < HEADER TO X8   @E@@@D          LA,H2     A5,0,X8   RY
)@@G@@     . $P RECORD LENGTH TO A5 @^@@@D          ANA,U     A5,1@G@@@D      RZ
)@@G@@    SA        A5,3,X10       . $P RECORD LENGTH TO CALLING PKT    @A@@@DSA
)@@G@@          AX,U      X8,1           .@G@@@D          TNZ       DBPASW    SB
)@@G@@        . $T RECORD TO BE DELIVERED       @E@@@D          J         DBPGSC
)@@G@@T7            . $A NO,DBPGT7 YES    @G@@@D          SX,H2     X8,2,X10  SD
)@@G@@        . $P RETURN ADDRESS OF RECORD     @D@@@D          J         DBPESE
)@@G@@X0            . $J DBPEX0     @]@@@DDBPGT7      @A@@@D          LX,H2   SF
)@@G@@  X9,2,X10       .@ @@@D          LR        R1,A5     @F@@@D          SLSG
)@@G@@J       RTRANS         . $W RTRANS TRANSFER RECORD    @E@@@DDBPEX0    SZSH
)@@G@@,T1     2,X10          . $P SET ZERO RETURN CODE@]@@@DDBPEXT .    @B@@@DSI
)@@G@@          SZ        DBPASW            .   @ @@@D          J         *RETSJ
)@@G@@URN   @ @@@DDBPER1 . COULD NOT FIND DP    @A@@@D          LA,U      A0,1SK
)@@G@@           .@G@@@D          SA,T1     A0,2,X10       . $P RETURN NON ZERSL
)@@G@@O ERROR CODE      @C@@@D          J         DBPEXT         . $E EXIT    SM
)@@G@@@[@@@D .    @G@@@D . SUBROUTINE TO SEARCH AN INDEX BLOCK FOR DBP REQUIRESN
)@@G@@D BY CALLING      @D@@@D . PACKET (1,X10) . THE INDEX BLOCK NUMBER IS INSO
)@@G@@ A1.  @E@@@D . IF DBP IS NOT FOUND IN BLOCK, SEARCH THE OVERFLOW BLOCKS SP
)@@G@@@E@@@D . UPON RETURN, A2 CONTAINS ERROR STATUS  0=SUCCESSFUL      @C@@@DSQ
)@@G@@ .              DBPINX CONTAINS INDEX IF FOUND  @F@@@D .              H1SR
)@@G@@(DBPBLK) CONTAINS REL INX BLK NUMBER WHERE FND  @D@@@D .              RESS
)@@G@@CORD # TO  CALLING PACKET   0,X10   @[@@@D .    @]@@@DDBPSCH      @C@@@DST
)@@G@@          SX,H2     X11,RET1       . $H DBPSCH  @G@@@D          SZ      SU
)@@G@@  SCHINX         . $P # OF INDICES SEARCHED IS ZERO   @A@@@DSCHLP2    SASV
)@@G@@,H1     A1,DBPBLK      .@F@@@D          SA,H2     A1,INXPKT      . $P INSW
)@@G@@X BLK# TO H2(INXPKT)    @E@@@D          LMJ       X11,INXBUF     . $W INSX
)@@G@@XBUF GET BLOCK    @D@@@D          TZ,H1     INXPKT         . $T SUCCESSFSY
)@@G@@UL    @C@@@D          ER        ERR$           . $E EXIT    @E@@@D      SZ
)@@G@@    LX        X9,INXPKT+1    . $P ADDR OF BLK TO X9   @F@@@D          TNTA
)@@G@@Z,H2    1,X9           . $T ANY INDICES IN THIS BLK   @E@@@D          J TB
)@@G@@        SCHGT1         . $A NO,SCHGT1 YES       @G@@@D          LA      TC
)@@G@@  A0,SCHINX      . $P UPDATE # OF INDICES SEARCHED    @A@@@D          AATD
)@@G@@,H2     A0,1,X9        .@A@@@D          SA        A0,SCHINX       @A@@@DTE
)@@G@@ . PREPARE TO SEARCH BLOCK FOR DBP  @A@@@D          LX        X8,X9     TF
)@@G@@     .@G@@@D          AX,U      X8,3           . $P X8 POINTS TO BEG OF TG
)@@G@@SEARCH      @G@@@D          LXI,U     X8,2           . $P X8 WILL INDEX TH
)@@G@@BLK TO SEARCH     @E@@@D          LA        A2,1,X10       . $P DBP TO FTI
)@@G@@IND TO A2   @G@@@D          LR,H2     R1,1,X9         . $P # OF INDICES TJ
)@@G@@IN BLK TO R1      @D@@@D          SE        A2,0,*X8       . $T DBP IN BTK
)@@G@@LOCK  @E@@@D          J         SCHGT1         . $T NO,SCHGT1 YES       TL
)@@G@@@D@@@D . FOUND A MATCH FOR DBP, CALCULATE RECORD NUMBER     @A@@@D      TM
)@@G@@    LA        A0,SCHINX      .@G@@@D          ANA       A0,R1          .TN
)@@G@@ $P SUBTRACT # OF INDICES IN BLK    @G@@@D          SA        A0,SCHINX TO
)@@G@@     . $P INX # IN THIS BLK TO SCHINX     @B@@@D          LA        A0,RTP
)@@G@@NDADD         .   @B@@@D          LXI,U     A0,1              .   @A@@@DTQ
)@@G@@          SZ        A4             .@A@@@D          LR,H2     R1,DBPBLK TR
)@@G@@     .@F@@@D          TNZ       R1        . $T WAS INX FOUND IN 1ST BLOCTS
)@@G@@K     @C@@@D          J         SCHGT2    . $A YES,SCHGT2 NO@A@@@DSCHLP1TT
)@@G@@                        .     @E@@@D          JGD       R1,$+2    . $T ATU
)@@G@@RE WE DONE WITH ALL BLKS@C@@@D          J         SCHGT2    . $A YES,SCHTV
)@@G@@GT2 NO@E@@@D          AA        A4,0,*A0  . $P ACCUMULATE # OF INDICES  TW
)@@G@@@C@@@D          J         SCHLP1    . $J SCHLP1       @]@@@DSCHGT2 .    TX
)@@G@@@H@@@D          SA,H2     A0,RNDSAV         . $P SAVE ADD OF RAND CORE ITY
)@@G@@NX TAB ENT  @E@@@D          AA        A4,SCHINX      . $P INDEX # FOUND TZ
)@@G@@TO A4 @G@@@D          SA        A4,0,X10       . $P RECORD # TO CALLING UA
)@@G@@PACKET      @F@@@D          ANX,U     X8,3           . $P X8 POINTS TO IUB
)@@G@@NDEX FOUND  @D@@@D          LA        A5,0,X8        . $P INDEX TO A5   UC
)@@G@@@E@@@D          SA        A5,DBPINX      . $P INDEX TO DBPINX     @E@@@DUD
)@@G@@          SZ        A2             . $P SET 0 RETURN CODE   @ @@@D      UE
)@@G@@    J         *RET1     @A@@@DSCHGT1 . NO MATCH IN INDEX BLOCK    @G@@@DUF
)@@G@@          TNZ,H2    0,X9           . $T  OVERFLOW BLOCK AVAILABLE       UG
)@@G@@@E@@@D          J         SCHER1         . $A NO,SCHER1 YES       @F@@@DUH
)@@G@@          LA,H2     A1,0,X9        . $P OVERFLOW BLOCK # TO A1    @C@@@DUI
)@@G@@          J         SCHLP2         . $J SCHLP2  @]@@@DSCHER1 .    @F@@@DUJ
)@@G@@          LA,U      A2,1           . $P RETURN NONZERO STATUS     @ @@@DUK
)@@G@@          J         *RET1     @[@@@D$(2)  @E@@@DDBPSW     +         0   UL
)@@G@@           . 0 FOR SEARCH UPWARD    @G@@@DRELKBLK   +         0         UM
)@@G@@        . REL INX BLK # RETURNED BY KF$AM @F@@@DBLKUP     +         0   UN
)@@G@@           . BLK # FOR SEARCH GOING UP    @F@@@DBLKDN     +         0   UO
)@@G@@           . BLK # FOR SEARCH GOING DOWN  @G@@@DDBPIXN    +         0   UP
)@@G@@           . # OF INDEX BLKS LEFT TO SEARCH     @F@@@DDBPBLK    +       UQ
)@@G@@  0,0            . H2 HAS INX BLK # SEARCHED    @G@@@D                  UR
)@@G@@                 . H1 HAS INX BLK # WHERE FOUND       @G@@@DSCHINX    + US
)@@G@@        0              . # OF INDICES SEARCHED IN BLOCK     @B@@@DDBPINXUT
)@@G@@    +         0                 .   @F@@@DDBPASW    +         0         UU
)@@G@@        . TO INDICATE TF$DBP1 CALL  @H@@@D                              UV
)@@G@@        . TF$DBP1 CALL WILL NOT DELIVER RECORD  @G@@@DKFAPKT    RES     UW
)@@G@@  46                . KEY FILE ACCESS METHOD PACKET   @G@@@D            UX
)@@G@@                          . USED FOR GETTING BLOCK NUMBERS  @A@@@DRETURNUY
)@@G@@    +         0              .@A@@@DRET1      +         0              .UZ
)@@G@@@G@@@DX10SAV    +         0                 . SAVE X10 BEFORE CALLING KFVA
)@@G@@$AM   @#@@@D          END     ___ J         DBPEX0            . $J DBPEXVB
)@@G@@0     @]@@@DDBPGT7      *[@@@@*SDFF*@]@@@@ .          @A@[@@ .          VC
)@@G@@   ** DBPARSE **        @A@@@[ .             ** PARSE **          @]@@@@VD
)@@G@@ .          @C@@@@ .       THIS ROUTINE IS USED TO PARSE THE SYTAX@E@[@@VE
)@@G@@ .             READ BY THE DATA BASE EDITOR SYSTEM          @E@@@[ .    VF
)@@G@@     READ BY THE D B REORGANIZATION MAIN CONTROL      @]@@@@ .          VG
)@@G@@@A@@@@ .       THE INTERFACE IS:          @]@@@@ .          @A@[@@ .    VH
)@@G@@              LMJ  X11,DBPARSE@A@@@[ .                  LMJ  X11,PARSE  VI
)@@G@@@]@@@@ .          @A@[@@ .             ** DSPARSE **        @]@@@@ .    VJ
)@@G@@      @^@@@@         AXR$           @^@@@@ED       FORM  6,6,6,18 @^@@@@VK
)@@G@@PF       FORM  12,6,18  @]@@@@ .          @^@@@@$(4)      LIT.          VL
)@@G@@@]@@@@$(1).       @C@[@@DBPARSE*.                     . $H DBPARSE      VM
)@@G@@@C@@@[PARSE*.                     . $H PARSE          @A@@@]         L,UVN
)@@G@@   A1,BLKS        .     @A@@@]         L,U   A2,PBUFR       .     @A@@@]VO
)@@G@@         LXI,U A2,1           .     @A@@@]         L,U   R1,50          VP
)@@G@@.     @C@@@]         BT    A2,,*A1        . *W CLEAR BUFFER @E@]@@      VQ
)@@G@@   SLJ   CLR            . $W CLEAR PARSE BUFFER       @E@]@@         DS VR
)@@G@@   A0,SA01        . $P SAVE WORKING REGISTERS   @A@]@@         DS    A2,VS
)@@G@@SA23        .     @A@]@@         DS    A4,SA45        .     @A@]@@      VT
)@@G@@   S     X1,SX1         .     @A@]@@         S     X2,SX2         .     VU
)@@G@@@A@]@@         S     X3,SX3         .     @A@@@@         L     A5,A0    VV
)@@G@@      .     @E@@@@PL1      L,U   X3,PBUFR       . $P GET PTR TO PARSE BUVW
)@@G@@F     @A@@@@         LXI,U X3,1           .     @E@@@@         L     X2,VX
)@@G@@A5          . $P SET PTR TO INPUT STRING  @A@@@@         LXI,U X2,1     VY
)@@G@@      .     @E@@@@         SSL   A5,18          . $P GET INPUT WORD CNT VZ
)@@G@@      @E@@@@         MSI,U A5,6           . $P CONVERT TO CHAR CNT      WA
)@@G@@@A@@@@         ANA,U A5,1           . -1  @C@@@@         SZ    A1       WB
)@@G@@      . $P INIT CNTR    @E@@@@         L     A2,(1,0)       . $P INIT INWC
)@@G@@PUT CHR INDEX     @E@@@@PL2      L     A3,(1,0)       . $P INIT OUTPUT CWD
)@@G@@HR INDEX    @E@@@@         L     X1,X3          . $P SET ALT OUTPUT PTR WE
)@@G@@      @C@@@@GET1     EX    GET,A2        . $W GET A CHAR    @C@@@@      WF
)@@G@@   TLEM,U A2,5          . $P END OF WORD ?@^@@@@          J         $+2 WG
)@@G@@@E@@@@         L     A2,(1,0)       . $P YES, RESET INDEX         @E@@@@WH
)@@G@@         TNE,U A0,5           . $T CHAR A BLANK ?           @E@@@@      WI
)@@G@@   J     CHKBLK         . $A YES,CHKBLK NO,PL3        @C@@@@PL3      A,UWJ
)@@G@@   A1,1           . $P INCR CHR CNTR@C@@@@         EX    PUT,A3        .WK
)@@G@@ $W SAVE CHAR     @E@@@@         TLEM,U A3,5          . $P END OF OUTPUTWL
)@@G@@ WORD ?     @^@@@@          J         $+2 @E@@@@         L     A3,(1,0) WM
)@@G@@      . $P YES, RESET INDEX         @E@@@@         JGD   A5,GET1        WN
)@@G@@. $P LOOP TILL INTERRUPT      @C@@@@         J     EXIT           . $J EWO
)@@G@@XIT         @C@@@@CHKBLK   JZ    A1,CHK2        . $H CHK BLK      @E@]@@WP
)@@G@@         A,U   X3,2           . $P POINT TO NXT OUTPUT BLOCK@E@@@]      WQ
)@@G@@   A,U   X3,5           . $P POINT TO NXT OUTPUT BLOCK@C@@@@         SZ WR
)@@G@@   A1             . $P CLEAR CHR CNT@E@@@@CHK2     JGD   A5,PL2         WS
)@@G@@. $P IF NOT DONE LOOP         @]@@@]EXIT.       @C@]@@EXIT     DL    A0,WT
)@@G@@SA01        . $W RESTORE REGS @A@]@@         DL    A2,SA23        .     WU
)@@G@@@A@]@@         DL    A4,SA45        .     @A@]@@         L     X1,SX1   WV
)@@G@@      .     @A@]@@         L     X2,SX2         .     @A@]@@         L  WW
)@@G@@   X3,SX3         .     @C@@@@         J     0,X11          . $E EXIT   WX
)@@G@@      @]@@@@ .          @C@@@@GET      L,S1  A0,,X2         . GET VECTORWY
)@@G@@      @A@@@@         L,S2  A0,,X2         .     @A@@@@         L,S3  A0,WZ
)@@G@@,X2         .     @A@@@@         L,S4  A0,,X2         .     @A@@@@      XA
)@@G@@   L,S5  A0,,X2         .     @A@@@@         L,S6  A0,,*X2        .     XB
)@@G@@@]@@@@          . @C@@@@PUT      S,S1  A0,,X1         . PUT VECTOR      XC
)@@G@@@A@@@@         S,S2  A0,,X1         .     @A@@@@         S,S3  A0,,X1   XD
)@@G@@      .     @A@@@@         S,S4  A0,,X1         .     @A@@@@         S,SXE
)@@G@@5  A0,,X1         .     @A@@@@         S,S6  A0,,*X1        .     @C@]@@XF
)@@G@@CLR      +     0              . $H CLR          @A@]@@         L,U   A1,XG
)@@G@@BLKS        .     @A@]@@         L,U   A2,PBUFR       .     @A@]@@      XH
)@@G@@   LXI,U A2,1           .     @A@]@@         L,U   R1,20          .     XI
)@@G@@@C@]@@         BT    A2,,*A1        . *W CLEAR BUFFER @C@]@@         J  XJ
)@@G@@   *CLR           . $E EXIT         @]@@@@$(4).       @#@#@@SA01     RESXK
)@@G@@   2  @#@#@@SA23     RES   2  @#@#@@SA45     RES   2  @#@#@@SX1      +  XL
)@@G@@   0  @#@#@@SX2      +     0  @#@#@@SX3      +     0  @^@@@@BLKS     '  XM
)@@G@@    '       @]@@@@         END___^@)^@)^@)^@) 0)^@)^@)@D@]@@^@)^@)^@)^@)XN
)@@G@@^[G^@)^@)^[SAC?ETSAC)^@)^@)^@)^@) 0)^@)^@)@D@]@@^@)^@)^@)^@)^[G^@)^@)^[SXO
)@@G@@AK?ETSAK)^@)^@)^@)^@) 0)^@)^@)@D@]@@^@)^@)^@)^@)*[@@@@*SDFF*@#@@@@      XP
)@@G@@    AXR$    @]@@@@$(1).       @]@@@@DUMMY*.     @ @@@@          J       XQ
)@@G@@  0,X11     @#@@@@          END     ___^@)^@)^@)^@)C(IC))^@)___D1PD(]C(MXR
)@@G@@*[@@@@*SDFF*@^@@@@          AXR$          @^@@@@$(4)      LIT           XS
)@@G@@@]@@@@$(1).       @A@@@@PGSIZE    EQUF      2,X9,H1         @A@@@@UNUSEDXT
)@@G@@    EQUF      2,X9,H2         @A@@@@SLOTS     EQUF      3,X9,H1         XU
)@@G@@@A@@@@LASTVAC   EQUF      3,X9,H2         @A@@@@PGTYPE    EQUF      1,X9XV
)@@G@@,S3         @A@@@@CALCNUM   EQUF      6,X9,H1         @A@@@@PGNUM     EQXW
)@@G@@UF      1,X9,H2         @A@@@@ACODE     EQUF      1,X9,T1         @A@@@@XX
)@@G@@RCDTYP    EQUF      0,X7,T1         @A@@@@RCDDESC   EQUF      0,X7,S3   XY
)@@G@@      @A@@@@RCDLENG   EQUF      0,X7,H2         @A@@@@SLTDESC   EQUF    XZ
)@@G@@  0,X6,S1         @A@@@@DISP      EQUF      0,X6,H2         @C@@@@PACKPGYA
)@@G@@*                               . $H      @]@@@@.           @E@@@@.     YB
)@@G@@    PACKPG IS A SUBROUTINE TO COMPACT A DATA BASE PAGE@C@@@@.         ENYC
)@@G@@TERED:          LMJ   X11,PACKPG    @A@@@@.                   X9 = PAGE YD
)@@G@@ADDR  @C@@@@.                   OTHER REGISTERS USED:       @E@@@@.     YE
)@@G@@                       A0,A1,X1,X2,X3,R13,R14,R15,R1  @]@@@@.           YF
)@@G@@@C@@@@          LXI,U     X9,1              .         @E@@@@          TNYG
)@@G@@Z       UNUSED            . $T ANY UNUSED WORDS @E@@@@          J       YH
)@@G@@  0,X11             . $A YES NO,RETURN    @G@@@@          LA        A0,LYI
)@@G@@ASTVAC        . $P GET LAST VACANT WRD ADDR     @C@@@@          AA      YJ
)@@G@@  A0,X9             .         @E@@@@          LA        A0,0,A0         YK
)@@G@@  . GET THE ENTRY       @G@@@@          TNE       A0,UNUSED         . $TYL
)@@G@@ MATCH UNUSED COUNT           @E@@@@          J         PACKPG55        YM
)@@G@@  . $A YES,PACKPG55 NO  @]@@@@PACKPG1.    @E@@@@          LA        A0,PYN
)@@G@@GSIZE         . $P GET PAGE SIZE    @E@@@@          ANA       A0,SLOTS  YO
)@@G@@        . $P - SLOTS NUMBER   @E@@@@          ANA       A0,CALCNUM      YP
)@@G@@  . $P - CALC SLOTS     @E@@@@          AA        A0,X9             . $PYQ
)@@G@@ COMPUTE ABS ADDR @C@@@@          LXI,U     A0,1              .         YR
)@@G@@@E@@@@          LR        R15,A0            . SAVE IT IN R15      @C@@@@YS
)@@G@@PACKPG2                               . $H      @I@@@@          LX      YT
)@@G@@  X1,X9             . $P SET UP X1 & X2 FOR RECORD TRANSFER       @C@@@@YU
)@@G@@          LXI,U     X1,1              .         @C@@@@          AX,U    YV
)@@G@@  X1,10             .         @C@@@@          LX        X2,X1           YW
)@@G@@  .         @C@@@@PACKPG3                               . $H      @E@@@@YX
)@@G@@          LA        A0,R15            . $T LAST RECORD MOVED@C@@@@      YY
)@@G@@    TNE       A0,X2             .         @E@@@@          J         PACKYZ
)@@G@@PG5           . $A YES,PACKPG5 NO   @C@@@@          LA        A0,(010000ZA
)@@G@@000)    .         @E@@@@          AND       A0,0,X2           . $T RECORZB
)@@G@@D DELETED   @E@@@@          JZ        A1,PACKPG4        . $A YES,PACKPG4ZC
)@@G@@ NO   @E@@@@          LR,H2     R1,0,X2           . $P GET RECORD LENGTHZD
)@@G@@@E@@@@          LR        R13,X1            . $P SAVE X1          @E@@@@ZE
)@@G@@          LR        R14,X2            . $P SAVE X2          @E@@@@      ZF
)@@G@@    BT        X1,0,*X2          . SAVE THE RECORD     @G@@@@          LXZG
)@@G@@        X3,X9             . $ MODIFY THE SLOT ENTRY         @G@@@@      ZH
)@@G@@    AX        X3,PGSIZE         . $P COMPUTE THE SLOT ADDR        @C@@@@ZI
)@@G@@          ANX       X3,CALCNUM        .         @C@@@@          ANX,U   ZJ
)@@G@@  X3,1              .         @C@@@@          LXI,U     X3,-1           ZK
)@@G@@  .         @E@@@@          LA        A0,R14            . $P GET OLD DISZL
)@@G@@P     @C@@@@          ANA       A0,X9             .         @C@@@@      ZM
)@@G@@    LXI,U     A0,0              .         @E@@@@          LR        R1,SZN
)@@G@@LOTS          . $P GET LOOP COUNT   @E@@@@          SE,H2     A0,0,*X3  ZO
)@@G@@        . $T SEARCH FOR SLOT  @E@@@@          ER        ERR$            ZP
)@@G@@  . $A YES NO,ERR       @E@@@@          LA        A0,R13            . $PZQ
)@@G@@ GET THE NEW DISP @C@@@@          ANA       A0,X9             .         ZR
)@@G@@@E@@@@          SA,H2     A0,1,X3           . $P SAVE IT          @C@@@@ZS
)@@G@@          J         PACKPG3           . $J NXT  @C@@@@PACKPG4           ZT
)@@G@@                    . $H      @G@@@@          AX,H2     X2,0,X2         ZU
)@@G@@  . $P BUMP UP TO NXT RECORD        @C@@@@          J         PACKPG3   ZV
)@@G@@        .         @C@@@@PACKPG5                               . $H      ZW
)@@G@@@G@@@@          LA        A0,X1             . $P COMPUTE LAST VAC ADDR  ZX
)@@G@@      @C@@@@          ANA       A0,X9             .         @E@@@@      ZY
)@@G@@    SA        A0,LASTVAC        . $P SAVE IT          @I@@@@          LAZZ
)@@G@@        A0,X2             . $P COMPUTE NUMBER OF WRDS TO BE ZEROED      AA
)@@G@@@C@@@@          ANA       A0,X1             .         @E@@@@          SAAB
)@@G@@        A0,UNUSED         . $P SAVE UNUSED COUNT@C@@@@          LR      AC
)@@G@@  R1,A0             .         @C@@@@          SZ        A0              AD
)@@G@@  .         @G@@@@          LX,U      X3,A0             . $P SET UP TO SAE
)@@G@@TORE ZEROS        @C@@@@          BT        X1,0,*X3          .         AF
)@@G@@@I@@@@PACKPG55                           . $H CHECK IF ANY SLOTS MAY BE AG
)@@G@@ELIMINATED        @E@@@@          TNZ       SLOTS             . $T ANY SAH
)@@G@@LOTS        @E@@@@          J         0,X11             . $A YES NO,RETUAI
)@@G@@RN    @E@@@@          LR        R15,SLOTS         . $P SCAN SLOTS       AJ
)@@G@@@C@@@@          JGD       R15,$+1           .         @G@@@@          LXAK
)@@G@@        X1,X9             . $P COMPUTE SLOTS ADDR           @C@@@@      AL
)@@G@@    AX        X1,PGSIZE         .         @C@@@@          ANX       X1,CAM
)@@G@@ALCNUM        .         @C@@@@          ANX       X1,SLOTS          .   AN
)@@G@@      @^@@@@          LXI,U     X1,1@C@@@@PACKPG6                       AO
)@@G@@        . $H      @E@@@@          LA        A0,(0400000000000). $P SET AAP
)@@G@@0           @E@@@@          AND       A0,0,X1           . $T SLOT IN USEAQ
)@@G@@      @E@@@@          JZ        A1,PACKPG7        . $A YES,PACKPG7 NO   AR
)@@G@@@E@@@@          SZ        0,*X1             . $P ZERO OUT THE SLOT@E@@@@AS
)@@G@@          LA,U      A0,1              . $P UP UNUSED COUNT  @C@@@@      AT
)@@G@@    AA        A0,UNUSED         .         @C@@@@          SA        A0,UAU
)@@G@@NUSED         .         @E@@@@          LA        A0,SLOTS         . $P AV
)@@G@@DOWN SLOTS COUNT  @^@@@@          ANA,U     A0,1@C@@@@          SA      AW
)@@G@@  A0,SLOTS          .         @E@@@@          JGD       R15,PACKPG6     AX
)@@G@@  . $J TRY NXT          @C@@@@PACKPG7                               . $HAY
)@@G@@      @E@@@@          LX        X1,X9             . $P SET LASTVAC      AZ
)@@G@@@C@@@@          AX        X1,LASTVAC        .         @C@@@@          LABA
)@@G@@        A0,UNUSED         .         @C@@@@          SA        A0,0,X1   BB
)@@G@@        .         @E@@@@          J         0,X11             . $J RETURBC
)@@G@@N           @^@@@@          END           ___ TN RETURN           @^@@@@BD
)@@G@@          END           ___ TNZ       UNUSED            . $T ANY UNUSED BE
)@@G@@*[@@@@*SDFF*@[@@@@ .    @C@@@@ .                  ** SCHEMA ACCESS METHOBF
)@@G@@DS ** @[@@@@ .    @G@@@@ .        THIS ELEMENT CONTAINS THE FOLLOWING SCBG
)@@G@@HEMA ACCESS METHODS:    @C@@@@ .                  FABNME,  FABCDE,  FSABBH
)@@G@@CD    @C@@@@ .                  FRBNME,  FRBCDE,  FSRBCD    @C@@@@ .    BI
)@@G@@              FSBNME,  FSBCDE,  FSSBCD    @A@@@@ .                  FASRBJ
)@@G@@TL,  FDSDT  @[@@@@ .    @[@@@@ .    @#@@@@          AXR$.   @#@@@@$(4)  BK
)@@G@@    LIT.    @]@@@@$(3).       @A@@@@PF        FORM 12,6,18        .     BL
)@@G@@@[@@@@ .    @[@@@@ .    @A@@@@ .                  ** FABNME **    @[@@@@BM
)@@G@@ .    @G@@@@ .        THIS ROUTINE FETCHES AN AREA  TABLE FROM THE ABSOLBN
)@@G@@UTE SCHEMA  @[@@@@ .    @E@@@@ .        THERE ARE THREE ENTRY POINTS WHOBO
)@@G@@SE CALLS ARE:     @D@@@@ .                  LMJ  X11,[FABNME,FABCDE,FSABBP
)@@G@@CD]   @ @@@@ .                  +    KEY  @A@@@@ .                  +   BQ
)@@G@@ BUFFER     @C@@@@ .                  +    SCHEMA-INDICATOR       @B@@@@BR
)@@G@@ .                  +    $,('RTN-NAME')   @[@@@@ .    @B@@@@ .          BS
)@@G@@        WHERE KEY CONTAINS:   @E@@@@ .                       AREA-NAME,ABT
)@@G@@REA-CODE,SEQUENCE-NUMBER@G@@@@ .                  BUFFER IS BUFFER INTO BU
)@@G@@WHICH TABLE IS TO BE PLACED   @E@@@@ .                  SCHEMA-INDICATORBV
)@@G@@ INDICATES WHICH SCHEMA:@B@@@@ .                       0 - OLDSCHEMA    BW
)@@G@@@B@@@@ .                       1 - NEWSCHEMA    @[@@@@ .    @E@@@@ .    BX
)@@G@@    THE ROUTINE TESTS SDTICF TO SEE SDT IS IN CORE    @E@@@@ .          BY
)@@G@@   IF NOT, A ROUTINE IS CALLED TO READ IT       @[@@@@ .    @E@@@@ .    BZ
)@@G@@    IF TABLE CANNOT BE FOUND, ROUTINE RETURNS WITH    @A@@@@ .          CA
)@@G@@   ZERO IN LOCATION KEY @[@@@@ .    @[@@@@ .    @A@@@@ .                CB
)@@G@@  ** FABNME **    @C@@@@ .                       D L SCHEIDT - 11/74    CC
)@@G@@@[@@@@ .    @C@@@@FABNME*.                      . $H FABNME       @D@@@@CD
)@@G@@          L         A3,*2,X11 . $P SET SCHEMA INDEX   @D@@@@          TNCE
)@@G@@Z       SDTICF,A3 . $T IS SDT IN CORE ?   @E@@@@          SLJ       FASRCF
)@@G@@TL    . $W CALL FASRTL TO GET SDT   @C@@@@          DL        A0,*0,X11 CG
)@@G@@. $P GET A-EA NAME@D@@@@          L,H1      R1,ARTPTR,A3 . $P GET # OF ACH
)@@G@@RT    @G@@@@          L,H2      X8,ARTPTR,A3 . $P GET ADDR OF START OF ACI
)@@G@@RT BLOCK    @A@@@@          LXI,U     X8,10     .     @G@@@@NME1      SECJ
)@@G@@        A0,4,*X8  . $P SEARCH ART FOR MATCH ON 1ST WD OF NME@D@@@@      CK
)@@G@@    J         ERROR     . $T WAS MATCH FOUND ?  @C@@@@                  CL
)@@G@@            . $A YES NO,ERROR @A@@@@          L         X9,X8     .     CM
)@@G@@@A@@@@          AN,U      X9,10     .     @F@@@@          TE        A1,5CN
)@@G@@,X9   . $T DOES 2ND WD OF NAME MATCH ?    @C@@@@          J         NME1CO
)@@G@@      . $A YES NO,NME1  @C@@@@          J         GETADT    . $J GETADT CP
)@@G@@      @[@@@@ .    @[@@@@ .    @C@@@@FABCDE*.                      . $H FCQ
)@@G@@ABCDE       @D@@@@          L         A3,*2,X11 . $P SET SCHEMA INDEX   CR
)@@G@@@D@@@@          TNZ       SDTICF,A3 . $T IS SDT IN CORE ?   @E@@@@      CS
)@@G@@    SLJ       FASRTL    . $W CALL FASRTL TO GET SDT   @C@@@@          L CT
)@@G@@        A0,*0,X11 . $P GET AREA CODE@D@@@@          L,H1      R1,ARTPTR,CU
)@@G@@A3 . $P GET # OF ART    @G@@@@          L,H2      X8,ARTPTR,A3 . $P GET CV
)@@G@@ADDR OF START OF ART BLOCK    @A@@@@          LXI,U     X8,10     .     CW
)@@G@@@A@@@@          L,U       R2,07777  .     @G@@@@          MSE       A0,0CX
)@@G@@,*X8  . $P SEARCH ART FOR MATCH ON AREA CODE    @D@@@@          J       CY
)@@G@@  ERROR     . $T WAS MATCH FOUND ?  @C@@@@                              CZ
)@@G@@. $A YES NO,ERROR @A@@@@          L         X9,X8     .     @A@@@@      DA
)@@G@@    AN,U      X9,10     .     @C@@@@          J         GETADT    . $J GDB
)@@G@@ETADT       @[@@@@ .    @[@@@@ .    @C@@@@FSABCD*.                      DC
)@@G@@. $H FSABCD       @D@@@@          L         A3,*2,X11 . $P SET SCHEMA INDD
)@@G@@DEX   @D@@@@          TNZ       SDTICF,A3 . $T IS SDT IN CORE ?   @E@@@@DE
)@@G@@          SLJ       FASRTL    . $W CALL FASRTL TO GET SDT   @E@@@@      DF
)@@G@@    L         A0,*0,X11 . $P GET SEQUENCE NUMBER      @A@@@@          ANDG
)@@G@@,U      A0,1      .     @F@@@@          TP        A0        . $T IS SEQUDH
)@@G@@ENCE NUMBER VALID ?     @A@@@@          J         ERROR     .     @A@@@@DI
)@@G@@          TG,H1     A0,ARTPTR,A3 .  @C@@@@          J         ERROR     DJ
)@@G@@. $A YES NO,ERROR @E@@@@          MSI,U     A0,10     . $P CALCULATE DISDK
)@@G@@P INTO ART  @A@@@@          L,H2      X9,ARTPTR,A3 .  @E@@@@          A DL
)@@G@@        X9,A0     . $P SET INDEX INTO ART       @[@@@@ .    @[@@@@ .    DM
)@@G@@@D@@@@GETADT    L         X8,1,X11  . $P GET BUFFER ADDR    @A@@@@      DN
)@@G@@    LXI,U     X8,1      .     @A@@@@          LXI,U     X9,1      .     DO
)@@G@@@A@@@@          L,U       R1,10     .     @E@@@@          BT        X8,0DP
)@@G@@,*X9  . $P BLOCK TRANSFER ADT       @C@@@@          J         4,X11     DQ
)@@G@@. $E RETURN       @[@@@@ .    @[@@@@ .    @A@@@@ .                  ** FDR
)@@G@@RBNME **    @[@@@@ .    @G@@@@ .        THIS ROUTINE FETCHES A RECORD TADS
)@@G@@BLE FROM THE ABSOLUTE SCHEMA  @[@@@@ .    @E@@@@ .        THERE ARE THREDT
)@@G@@E ENTRY POINTS WHOSE CALLS ARE:     @D@@@@ .                  LMJ  X11,[DU
)@@G@@FRBNME,FRBCDE,FSRBCD]   @ @@@@ .                  +    KEY  @A@@@@ .    DV
)@@G@@              +    BUFFER     @C@@@@ .                  +    SCHEMA-INDIDW
)@@G@@CATOR       @B@@@@ .                  +    $,('RTN-NAME')   @[@@@@ .    DX
)@@G@@@B@@@@ .                  WHERE KEY CONTAINS:   @F@@@@ .                DY
)@@G@@       RECORD-NAME,RECORD-CODE,SEQUENCE-NUMBER  @G@@@@ .                DZ
)@@G@@  BUFFER IS BUFFER INTO WHICH TABLE IS TO BE PLACED   @E@@@@ .          EA
)@@G@@        SCHEMA-INDICATOR INDICATES WHICH SCHEMA:@B@@@@ .                EB
)@@G@@       0 - OLDSCHEMA    @B@@@@ .                       1 - NEWSCHEMA    EC
)@@G@@@[@@@@ .    @E@@@@ .        THE ROUTINE TESTS SDTICF TO SEE SDT IS IN COED
)@@G@@RE    @E@@@@ .             IF NOT, A ROUTINE IS CALLED TO READ IT       EE
)@@G@@@[@@@@ .    @E@@@@ .        IF TABLE CANNOT BE FOUND, ROUTINE RETURNS WIEF
)@@G@@TH    @A@@@@ .             ZERO IN LOCATION KEY @[@@@@ .    @[@@@@ .    EG
)@@G@@@A@@@@ .                  ** FRBNME **    @C@@@@ .                      EH
)@@G@@ D L SCHEIDT - 11/74    @[@@@@ .    @C@@@@FRBNME*.                      EI
)@@G@@. $H FRBNME       @D@@@@          L         A3,*2,X11 . $P SET SCHEMA INEJ
)@@G@@DEX   @D@@@@          TNZ       SDTICF,A3 . $T IS SDT IN CORE ?   @E@@@@EK
)@@G@@          SLJ       FASRTL    . $W CALL FASRTL TO GET SDT   @D@@@@      EL
)@@G@@    L         A0,*0,X11 . $P GET RECORD NAME    @A@@@@          L       EM
)@@G@@  X8,0,X11  .     @A@@@@          DL        A1,1,X8   .     @A@@@@      EN
)@@G@@    DL        A4,3,X8   .     @D@@@@          L,H1      R1,RRTPTR,A3 . $EO
)@@G@@P GET # OF RRT    @G@@@@          L,H2      X8,RRTPTR,A3 . $P GET ADDR OEP
)@@G@@F START OF RRT BLOCK    @A@@@@          LXI,U     X8,10     .     @G@@@@EQ
)@@G@@NME2      SE        A0,4,*X8  . $P SEARCH RRT FOR MATCH ON 1ST WD OF NMEER
)@@G@@@D@@@@          J         ERROR     . $T WAS MATCH FOUND ?  @C@@@@      ES
)@@G@@                        . $A YES NO,ERROR @A@@@@          L         X9,XET
)@@G@@8     .     @A@@@@          AN,U      X9,10     .     @G@@@@          DTEU
)@@G@@E       A1,5,X9   . $T DO 2ND AND 3RD WD OF NAME MATCH ?    @C@@@@      EV
)@@G@@    J         NME2      . $A YES NO,NME2  @G@@@@          DTE       A4,7EW
)@@G@@,X9   . $T DO 4TH AND 5TH WD OF NAME MATCH ?    @C@@@@          J       EX
)@@G@@  NME2      . $A YES NO,NME2  @C@@@@          J         GETTBL    . $J GEY
)@@G@@ETTBL       @[@@@@ .    @[@@@@ .    @C@@@@FRBCDE*.                      EZ
)@@G@@. $H FRBCDE       @D@@@@          L         A3,*2,X11 . $P SET SCHEMA INFA
)@@G@@DEX   @D@@@@          TNZ       SDTICF,A3 . $T IS SDT IN CORE ?   @E@@@@FB
)@@G@@          SLJ       FASRTL    . $W CALL FASRTL TO GET SDT   @D@@@@      FC
)@@G@@    L         A0,*0,X11 . $P GET RECORD CODE    @D@@@@          L,H1    FD
)@@G@@  R1,RRTPTR,A3 . $P GET # OF RRT    @G@@@@          L,H2      X8,RRTPTR,FE
)@@G@@A3 . $P GET ADDR OF START OF RRT BLOCK    @A@@@@          LXI,U     X8,1FF
)@@G@@0     .     @A@@@@          L,U       R2,07777  .     @G@@@@          MSFG
)@@G@@E       A0,0,*X8  . $P SEARCH RRT FOR MATCH ON RECD CODE    @D@@@@      FH
)@@G@@    J         ERROR     . $T WAS MATCH FOUND ?  @C@@@@                  FI
)@@G@@            . $A YES NO,ERROR @A@@@@          L         X9,X8     .     FJ
)@@G@@@A@@@@          AN,U      X9,10     .     @C@@@@          J         GETTFK
)@@G@@BL    . $J GETTBL       @[@@@@ .    @[@@@@ .    @C@@@@FSRBCD*.          FL
)@@G@@            . $H FSRBCD       @D@@@@          L         A3,*2,X11 . $P SFM
)@@G@@ET SCHEMA INDEX   @D@@@@          TNZ       SDTICF,A3 . $T IS SDT IN CORFN
)@@G@@E ?   @E@@@@          SLJ       FASRTL    . $W CALL FASRTL TO GET SDT   FO
)@@G@@@E@@@@          L         A0,*0,X11 . $P GET SEQUENCE NUMBER      @A@@@@FP
)@@G@@          AN,U      A0,1      .     @F@@@@          TP        A0        FQ
)@@G@@. $T IS SEQUENCE NUMBER VALID ?     @A@@@@          J         ERROR     FR
)@@G@@.     @A@@@@          TG,H1     A0,RRTPTR,A3 .  @C@@@@          J       FS
)@@G@@  ERROR     . $A YES NO,ERROR @E@@@@          MSI,U     A0,10     . $P CFT
)@@G@@ALCULATE DISP INTO RRT  @A@@@@          L,H2      X9,RRTPTR,A3 .  @E@@@@FU
)@@G@@          A         X9,A0     . $P SET INDEX INTO RRT       @E@@@@      FV
)@@G@@    L         A1,1,X9   . $P GET RELATIVE SECTOR ADDR @A@@@@          LSFW
)@@G@@SL      A1,12     .     @A@@@@          SSL       A1,12     .     @A@@@@FX
)@@G@@          SZ        A0        .     @E@@@@          DI,U      A0,64     FY
)@@G@@. $P GET SECTOR ADDR OF TRACK @A@@@@          MSI,U     A0,64     .     FZ
)@@G@@@F@@@@          TE        A0,TRKIC,A3 . $T IS PROPER TRACK IN CORE -    GA
)@@G@@@F@@@@          SLJ       GETTRK    . $W READ PROPER TRACK FROM SCHEMA  GB
)@@G@@@G@@@@          MSI,U     A1,28     . $P GET WORD DISP OF RDT WITHIN TRKGC
)@@G@@      @E@@@@          AU,T1     A1,1,X9   . $P GET LAST ADDR OF RDT     GD
)@@G@@@F@@@@          TG,U      A2,1792   . $T IS RDT COMPLETELY IN TRACK -   GE
)@@G@@@C@@@@          J         GETTBL    . $A YES NO,GETTBL@A@@@@          L GF
)@@G@@        A2,TRKAD,A3 .   @E@@@@          A         A2,A1     . $P GET CORGG
)@@G@@E ADDR OF RDT     @E@@@@          L,T1      R1,1,X9   . $P GET # WORDS IGH
)@@G@@N RDT       @E@@@@          L         A0,1,X11  . $P GET USER'S BUFFER AGI
)@@G@@DDR   @A@@@@          LXI,U     A0,1      .     @A@@@@          LXI,U   GJ
)@@G@@  A2,1      .     @C@@@@          BT        A0,0,*A2  . $P TRANSFER RDT GK
)@@G@@@C@@@@          J         4,X11     . $E RETURN       @A@@@@GETTRK    + GL
)@@G@@        0         .     @E@@@@          S         A0,TRKIC,A3 . $P UPDATGM
)@@G@@E TRK-IN-CORE PTR @D@@@@          L,U       X8,SIOPKT . $P GET I/O PKT AGN
)@@G@@DDR   @E@@@@          DL        A4,*FILENM,A3 . $P PUT FILE NAME IN PKT GO
)@@G@@@A@@@@          DS        A4,0,X8   .     @E@@@@          L,U       A0,1GP
)@@G@@792   . $P PUT WORD CNT IN PKT      @A@@@@          S,H1      A0,4,X8   GQ
)@@G@@.     @G@@@@          L         A0,TRKAD,A3 . $T HAS TRACK BUFFER BEEN GGR
)@@G@@OTTEN -     @C@@@@          JNZ       A0,GTTRK2 . $A NO YES,GTTRK2@A@@@@GS
)@@G@@          L         A4,A1     .     @A@@@@          L         A0,LAST$D GT
)@@G@@.     @F@@@@          AU,U      A0,1      . $P GET START ADDR OF TRK BUFGU
)@@G@@FER   @A@@@@          S         A1,TRKAD,A3 .   @A@@@@          A,U     GV
)@@G@@  A0,1792   .     @E@@@@          S         A0,LAST$D . $P GET CORE FOR GW
)@@G@@BUFFER      @A@@@@          ER        MCORE$    .     @A@@@@          L GX
)@@G@@        A0,A1     .     @A@@@@          L         A1,A4     .     @E@@@@GY
)@@G@@GTTRK2    S,H2      A0,4,X8   . $P PUT BUFFER ADDR IN PKT   @G@@@@      GZ
)@@G@@    L         A0,TRKIC,A3 . $P GET REL SECTOR ADDR OF TRACK       @E@@@@HA
)@@G@@          A         A0,SECTAD,A3 . $P ADD ABS START SECTOR  @E@@@@      HB
)@@G@@    S         A0,5,X8   . $P PUT SECTOR ADDR IN PKT   @E@@@@          I$HC
)@@G@@OW      SIOPKT    . $P READ TRACK INTO CORE     @D@@@@         L,S1  A0,HD
)@@G@@3,X8        . $P GET I/O STATUS     @C@@@@         TNE,U A0,5           HE
)@@G@@. $T IS IT NOT 05 @D@@@@         SZ,S1 3,X8           . $P ZERO 05 STATUHF
)@@G@@S     @E@@@@          TZ,S1     3,X8      . $T WAS READ SUCCESSFUL -    HG
)@@G@@@C@@@@          J         SFIOER    . $A YES NO,SFIOER@C@@@@          J HH
)@@G@@        *GETTRK   . $E RETURN       @]@@@@ .          @]@@@@ .          HI
)@@G@@@A@@@@ .                  ** FSBNME **    @]@@@@ .          @G@@@@ .    HJ
)@@G@@    THIS ROUTINE FETCHES A   SET  TABLE FROM THE ABSOLUTE SCHEMA  @]@@@@HK
)@@G@@ .          @E@@@@ .        THERE ARE THREE ENTRY POINTS WHOSE CALLS AREHL
)@@G@@:     @E@@@@ .                  LMJ  X11,[FSBNME,FSBCDE,FSSBCD]         HM
)@@G@@@A@@@@ .                  +    KEY        @A@@@@ .                  +   HN
)@@G@@ BUFFER     @C@@@@ .                  +    SCHEMA-INDICATOR       @C@@@@HO
)@@G@@ .                  +    $,('RTN-NAME')         @]@@@@ .          @C@@@@HP
)@@G@@ .                  WHERE KEY CONTAINS:         @E@@@@ .                HQ
)@@G@@       SET-NAME,SET-CODE,SEQUENCE-NUMBER  @G@@@@ .                  BUFFHR
)@@G@@ER IS BUFFER INTO WHICH TABLE IS TO BE PLACED   @E@@@@ .                HS
)@@G@@  SCHEMA-INDICATOR INDICATES WHICH SCHEMA:@C@@@@ .                      HT
)@@G@@ 0 - OLDSCHEMA          @C@@@@ .                       1 - NEWSCHEMA    HU
)@@G@@      @]@@@@ .          @E@@@@ .        THE ROUTINE TESTS SDTICF TO SEE HV
)@@G@@SDT IS IN CORE    @E@@@@ .             IF NOT, A ROUTINE IS CALLED TO REHW
)@@G@@AD IT       @]@@@@ .          @E@@@@ .        IF TABLE CANNOT BE FOUND, HX
)@@G@@ROUTINE RETURNS WITH    @A@@@@ .             ZERO IN LOCATION KEY @]@@@@HY
)@@G@@ .          @]@@@@ .          @A@@@@ .                  ** FSBNME **    HZ
)@@G@@@C@@@@ .                       D L SCHEIDT - 11/74    @]@@@@ .          IA
)@@G@@@C@@@@FSBNME*.                      . $H FSBNME       @E@@@@          L IB
)@@G@@        A3,*2,X11 . $P SET SCHEMA INDEX         @E@@@@          TNZ     IC
)@@G@@  SDTICF,A3 . $T IS SDT IN CORE ?         @E@@@@          SLJ       FASRID
)@@G@@TL    . $W CALL FASRTL TO GET SDT   @E@@@@          L         A0,*0,X11 IE
)@@G@@. $P GET SET NAMEAME          @A@@@@          L         X8,0,X11  .     IF
)@@G@@@A@@@@          DL        A1,1,X8   .     @A@@@@          DL        A4,3IG
)@@G@@,X8   .     @E@@@@          L,H1      R1,SRTPTR,A3 . $P GET # OF SRT    IH
)@@G@@      @G@@@@          L,H2      X8,SRTPTR,A3 . $P GET ADDR OF START OF SII
)@@G@@RT BLOCK    @A@@@@          LXI,U     X8,9      .     @G@@@@NME3      SEIJ
)@@G@@        A0,4,*X8  . $P SEARCH SRT FOR MATCH ON 1ST WD OF NME@E@@@@      IK
)@@G@@    J         ERROR     . $T WAS MATCH FOUND ?        @C@@@@            IL
)@@G@@                  . $A YES NO,ERROR @A@@@@          L         X9,X8     IM
)@@G@@.     @A@@@@          AN,U      X9,9      .     @G@@@@          DTE     IN
)@@G@@  A1,5,X9   . $T DO 2ND AND 3RD WD OF NAME MATCH ?    @C@@@@          J IO
)@@G@@        NME3      . $A YES NO,NME3  @G@@@@          DTE       A4,7,X9   IP
)@@G@@. $T DO 4TH AND 5TH WD OF NAME MATCH ?    @C@@@@          J         NME3IQ
)@@G@@      . $A YES NO,NME3  @C@@@@          J         GETTBL    . $J GETTBL IR
)@@G@@      @]@@@@ .          @]@@@@ .          @C@@@@FSBCDE*.                IS
)@@G@@      . $H FSBCDE       @E@@@@          L         A3,*2,X11 . $P SET SCHIT
)@@G@@EMA INDEX         @E@@@@          TNZ       SDTICF,A3 . $T IS SDT IN CORIU
)@@G@@E ?         @E@@@@          SLJ       FASRTL    . $W CALL FASRTL TO GET IV
)@@G@@SDT   @C@@@@          L         A0,*0,X11 . $P GET SET CODE @E@@@@      IW
)@@G@@    L,H1      R1,SRTPTR,A3 . $P GET # OF SRT          @G@@@@          L,IX
)@@G@@H2      X8,SRTPTR,A3 . $P GET ADDR OF START OF SRT BLOCK    @A@@@@      IY
)@@G@@    LXI,U     X8,9      .     @A@@@@          L,U       R2,07777  .     IZ
)@@G@@@G@@@@          MSE       A0,0,*X8  . $P SEARCH SRT FOR MATCH ON SET  COJA
)@@G@@DE    @E@@@@          J         ERROR     . $T WAS MATCH FOUND ?        JB
)@@G@@@C@@@@                              . $A YES NO,ERROR @A@@@@          L JC
)@@G@@        X9,X8     .     @A@@@@          AN,U      X9,9      .     @C@@@@JD
)@@G@@          J         GETTBL    . $J GETTBL       @]@@@@ .          @]@@@@JE
)@@G@@ .          @C@@@@FSSBCD*.                      . $H FSSBCD       @E@@@@JF
)@@G@@          L         A3,*2,X11 . $P SET SCHEMA INDEX         @E@@@@      JG
)@@G@@    TNZ       SDTICF,A3 . $T IS SDT IN CORE ?         @E@@@@          SLJH
)@@G@@J       FASRTL    . $W CALL FASRTL TO GET SDT   @E@@@@          L       JI
)@@G@@  A0,*0,X11 . $P GET SEQUENCE NUMBER      @A@@@@          AN,U      A0,1JJ
)@@G@@      .     @G@@@@          TP        A0        . $T IS SEQUENCE NUMBER JK
)@@G@@VALID ?           @A@@@@          J         ERROR     .     @A@@@@      JL
)@@G@@    TG,H1     A0,SRTPTR,A3 .  @C@@@@          J         ERROR     . $A YJM
)@@G@@ES NO,ERROR @E@@@@          MSI,U     A0,9      . $P CALCULATE DISP INTOJN
)@@G@@ SRT  @A@@@@          L,H2      X9,SRTPTR,A3 .  @E@@@@          A       JO
)@@G@@  X9,A0     . $P SET INDEX INTO SRT       @C@@@@          J         GETTJP
)@@G@@BL    . $J GETTBL       @]@@@@ .          @A@@@@ .                  ** FJQ
)@@G@@ITBRC **    @]@@@@ .          @E@@@@ .        THIS ROUTINE FETCHES THE IJR
)@@G@@TEM NAME TABLE          @C@@@@ .             FOR A SPECIFIED RECORD     JS
)@@G@@      @]@@@@ .          @^@@@@ .        THE CALL IS   @A@@@@ .          JT
)@@G@@        LMJ  X11,FITBRC @A@@@@ .                  +    RECORD-CODE@A@@@@JU
)@@G@@ .                  +    BUFFER     @C@@@@ .                  +    SCHEMJV
)@@G@@A-INDICATOR       @C@@@@ .                  +    $,('RTN-NAME')         JW
)@@G@@@^@@@@ .             WHERE    @G@@@@ .                  RECORD-CODE CONTJX
)@@G@@AINS CODE OF OBJECT RECORD          @E@@@@ .                  BUFFER IS JY
)@@G@@WHERE TABLE IS RETURNED       @G@@@@ .                  SCHEMA-INDICATORJZ
)@@G@@ INDICATES OLD(0) OR NEW(1) SCHEMA  @]@@@@ .          @E@@@@ .        THKA
)@@G@@E ROUTINE TESTS SDTICF TO SEE IF SDT IS IN CORE @E@@@@ .             IF KB
)@@G@@NOT, A ROUTINE IS CALLED TO READ IT       @]@@@@ .          @E@@@@ .    KC
)@@G@@    IF RDT CANNOT BE FOUND, ROUTINE WILL RETURN       @C@@@@ .          KD
)@@G@@   WITH ZERO IN RECORD-CODE         @]@@@@ .          @C@@@@FITBRC*.    KE
)@@G@@                  . $H FITBRC       @E@@@@          L         A3,*2,X11 KF
)@@G@@. $P SET SCHEMA INDEX         @E@@@@          TNZ       SDTICF,A3 . $T IKG
)@@G@@S SDT IN CORE           @E@@@@          SLJ       FASRTL    . $W CALL FAKH
)@@G@@SRTL TO GET SDT   @E@@@@          L         A0,*0,X11 . $P GET RECORD COKI
)@@G@@DE          @E@@@@          L,H1      R1,RRTPTR,A3 . $P GET # OF RRT    KJ
)@@G@@      @G@@@@          L,H2      X8,RRTPTR,A3 . $P GET ADDR OF START OF RKK
)@@G@@RT BLOCK    @A@@@@          LXI,U     X8,10     .     @A@@@@          L,KL
)@@G@@U       R2,07777  .     @G@@@@          MSE       A0,0,*X8  . $P SEARCH KM
)@@G@@RRT FOR MATCH ON RECD CODE    @E@@@@          J         ERROR     . $T WKN
)@@G@@AS MATCH FOUND          @C@@@@                              . $A YES NO,KO
)@@G@@ERROR @A@@@@          L         X9,X8     .     @A@@@@          AN,U    KP
)@@G@@  X9,2      .     @C@@@@          J         GETTBL    . $J GETTBL       KQ
)@@G@@@]@@@@ .          @E@@@@ .  ********************************************KR
)@@G@@********    @E@@@@GETTBL    L,U       X8,SIOPKT . $P GET I/O PKT ADDR   KS
)@@G@@      @E@@@@          DL        A0,*FILENM,A3 . $P PUT FILE NAME IN PKT KT
)@@G@@@A@@@@          DS        A0,0,X8   .     @E@@@@          L,T1      A0,1KU
)@@G@@,X9   . $P PUT WORD LENGTH IN PKT   @A@@@@          S,H1      A0,4,X8   KV
)@@G@@.     @E@@@@          L         A0,1,X11  . $P PUT BUFFER ADDR IN PKT   KW
)@@G@@@A@@@@          S,H2      A0,4,X8   .     @E@@@@          L         A0,1KX
)@@G@@,X9   . $P GET RELATIVE SECTOR ADDR @A@@@@          LSSL      A0,12     KY
)@@G@@.     @A@@@@          SSL       A0,12     .     @E@@@@          A       KZ
)@@G@@  A0,SECTAD,A3 . $P ADD ABS START SECTOR  @E@@@@          S         A0,5LA
)@@G@@,X8   . $P PUT SECTOR ADDR IN PKT   @E@@@@          I$OW      SIOPKT    LB
)@@G@@. $P READ TBL INTO BUFFER     @E@@@@          TZ,S1     3,X8      . $T WLC
)@@G@@AS READ SUCCESSFUL ?    @C@@@@          J         SFIOER    . $A YES NO,LD
)@@G@@SFIOER@C@@@@          J         4,X11     . $E RETURN       @]@@@@ .    LE
)@@G@@      @]@@@@ .          @C@@@@ .        THIS ROUTINE CALLS FASRTL -     LF
)@@G@@      @E@@@@ .             TO INITIALIZE THE IN-CORE SCHEMA REF TBL, ANDLG
)@@G@@@G@@@@ .             PARTICULARLY TO INITIALIZE THE MAX TBL SIZE VALUES LH
)@@G@@      @C@@@@FDSDT*.                       . $H FDSDT        @C@@@@      LI
)@@G@@    L         A3,*0,X11 . $W CALL FASRTL  @A@@@@          SLJ       FASRLJ
)@@G@@TL    .     @A@@@@          J         2,X11     . $E  @]@@@@ .          LK
)@@G@@@]@@@@ .          @E@@@@ERROR     SZ        *0,X11    . $P STORE ZERO INLL
)@@G@@ LOC KEY    @C@@@@          J         4,X11     . $E RETURN       @]@@@@LM
)@@G@@ .          @]@@@@ .          @A@@@@ .                  ** FASRTL **    LN
)@@G@@@]@@@@ .          @G@@@@ .        THIS ROUTINE READS THE SCHEMA REFERENCLO
)@@G@@E TABLES FROM           @C@@@@ .             A USER-SPECIFIED ABSOLUTE SLP
)@@G@@CHEMA @E@@@@ .        IT WILL HANDLE TWO DIFFERENT SCHEMAS CONCURRENTLY LQ
)@@G@@@E@@@@ .        AFTER THE READ, THE TABLES ARE PACKED SO AS TO BE @A@@@@LR
)@@G@@ .             CONTINUOUS           @]@@@@ .          @E@@@@ .        SPLS
)@@G@@ACE FOR THE TABLES IS GOTTEN BY MCORE$          @]@@@@ .          @E@@@@LT
)@@G@@ .        LOCATIONS ARTPTR, RRTPTR, SRTPTR ARE SET UP WITH  @E@@@@ .    LU
)@@G@@         H1  CONTAINING # OF WORDS IN TABLE           @E@@@@ .          LV
)@@G@@   H2  CONTAINING START ADDR OF TABLE           @]@@@@ .          @A@@@@LW
)@@G@@ .        THE ROUTINE IS CALLED BY -@A@@@@ .                  SLJ   FASRLX
)@@G@@TL    @E@@@@ .        AND A3 MUST CONTAIN THE SCHEMA INDICATOR -        LY
)@@G@@@A@@@@ .             0 - OLDSCHEMA        @A@@@@ .             1 - NEWSCLZ
)@@G@@HEMA        @]@@@@ .          @G@@@@ .        A USE COMMAND MUST HAVE BEMA
)@@G@@EN ISSUED PRIOR TO CALL -           @E@@@@ .             @USE OLDSCHEMA.MB
)@@G@@,[OLD-SCHEMA-FILE-NAME].      @E@@@@ .             @USE NEWSCHEMA.,[NEW-MC
)@@G@@SCHEMA-FILE-NAME].      @]@@@@ .          @A@@@@ .                  ** FMD
)@@G@@ASRTL **    @]@@@@ .          @C@@@@FASRTL   +     0              . $H FME
)@@G@@ASRTL       @A@@@@          L,U  A0,4           .     @A@@@@          L MF
)@@G@@   A1,ASGADR,A3   .     @A@@@@          LSSL A1,18          .     @A@@@@MG
)@@G@@          LDSL A0,18          .     @E@@@@          ER   CSF$           MH
)@@G@@. $P ISSUE ASG COMMAND        @E@@@@          JN   A0,ERR1        . $P GMI
)@@G@@O TO ERR1 IF REJECTED   @A@@@@          DL   A0,*FILENM,A3  .     @G@@@@MJ
)@@G@@          DS   A0,ELTPKT      . $P GET PROPER FILE NAME INTO PKTS       MK
)@@G@@@A@@@@          DS   A0,SIOPKT      .     @A@@@@          L,U  A0,ELTPKTML
)@@G@@      .     @G@@@@          ER   PFS$           . $P GET SECTOR ADDR OF MM
)@@G@@ELEMENT IN FILE   @G@@@@          JNZ  A2,ERR2        . $P GO TO ERR2 IFMN
)@@G@@ ELEMENT NOT FOUND      @G@@@@          L    A0,ELTSEC      . $P SAVE SEMO
)@@G@@CTOR DISP OF SCHEMA IN FILE   @A@@@@          S    A0,SECTAD,A3   .     MP
)@@G@@@G@@@@          L    A0,LAST$D      . $P GET NEXT AVAIL D-BANK ADDR     MQ
)@@G@@      @A@@@@          AU,U A0,1           .     @G@@@@          S    A1,MR
)@@G@@BUFADR      . $P SAVE START ADDR OF NEW BUFFER        @A@@@@          S MS
)@@G@@   A1,SAVLOC      .     @A@@@@          S    A1,R3          .     @A@@@@MT
)@@G@@          A,U  A0,28          .     @G@@@@          ER   MCORE$         MU
)@@G@@. $P GET CORE FOR 1ST SECTOR OF SCHEMA    @E@@@@          L,U  A0,28    MV
)@@G@@      . $P SET UP PACKET TO READ FDT@A@@@@          S    A0,WDCNT       MW
)@@G@@.     @A@@@@          L    A0,ELTSEC      .     @A@@@@          S    A0,MX
)@@G@@DRUMAD      .     @C@@@@          I$OW SIOPKT         . $P READ IN FDT  MY
)@@G@@@E@@@@          TZ   IOSTAT         . $T READ SUCCESSFUL ?        @C@@@@MZ
)@@G@@          J    SFIOER         . $A YES NO,SFIOER@G@@@@          L    A0,NA
)@@G@@8,A1        . $P GET LENGTH OF 1ST SCD SEGMENT        @A@@@@          SSNB
)@@G@@L  A0,24          .     @A@@@@          S    A0,SWDCNT      .     @G@@@@NC
)@@G@@          L    A0,DRUMAD      . $P INCREMENT PACKET TO NEXT SECTOR      ND
)@@G@@@A@@@@          A,U  A0,1           .     @A@@@@          S    A0,DRUMADNE
)@@G@@      .     @G@@@@SDTLP     L    A0,LAST$D      . $P GET CORE BUFFER FORNF
)@@G@@ NEXT SDT SEGMENT @A@@@@          AU,U A0,1           .     @A@@@@      NG
)@@G@@    S    A1,BUFADR      .     @A@@@@          A    A0,SWDCNT       .    NH
)@@G@@@A@@@@          S    A0,LAST$D      .     @A@@@@          ER   MCORE$   NI
)@@G@@      .     @E@@@@          L    A0,SWDCNT      . $P SET UP PACKET FOR RNJ
)@@G@@EAD   @A@@@@          S    A0,WDCNT       .     @E@@@@          I$OW SIONK
)@@G@@PKT         . $P READ IN NEXT SDT SEGMENT @E@@@@          TZ   IOSTAT   NL
)@@G@@      . $T READ SUCCESSFUL ?        @C@@@@          J    SFIOER         NM
)@@G@@. $A YES NO,SFIOER@E@@@@          TNZ,T3  1,A1        . $T MORE SDT SEGMNN
)@@G@@ENTS ?      @C@@@@          J    PCKSDT         . $A YES NO,PCKSDT@G@@@@NO
)@@G@@          L    A0,DRUMAD      . $P INCREMENT SECTOR CNT TO NEXT SEGMENT NP
)@@G@@@A@@@@          A,U  A0,63          .     @A@@@@          S    A0,DRUMADNQ
)@@G@@      .     @G@@@@          L,T3 A0,1,A1        . $P GET LENGTH OF NEXT NR
)@@G@@SCD SEGMENT       @A@@@@          LSSL A0,24          .     @A@@@@      NS
)@@G@@    SSL  A0,24          .     @A@@@@          S    A0,SWDCNT      .     NT
)@@G@@@C@@@@          J    SDTLP          . $J SDTLP        @E@@@@PCKSDT    L NU
)@@G@@   X9,SAVLOC      . $P GET START ADDR OF SDT    @A@@@@          L    A2,NV
)@@G@@LAST$D      .     @E@@@@          A,U  A2,1           . $P GET START ADDNW
)@@G@@R OF ART    @A@@@@          L    X8,A2          .     @A@@@@          S,NX
)@@G@@H2 A2,ARTPTR,A3   .     @E@@@@          L    A1,6,X9        . $P GET RT NY
)@@G@@CNT WORD          @A@@@@          SSL  A0,36          .     @E@@@@      NZ
)@@G@@    LDSL A0,12          . $P GET # ART ENTRIES        @A@@@@          S,OA
)@@G@@H1 A0,ARTPTR,A3   .     @G@@@@          MSI,U A0,10         . $P CALCULAOB
)@@G@@TE START OF PACKED RRT        @A@@@@          A    A2,A0          .     OC
)@@G@@@A@@@@          S,H2 A2,RRTPTR,A3   .     @A@@@@          SSL  A0,36    OD
)@@G@@      .     @E@@@@          LDSL A0,12          . $P GET # RRT ENTRIES  OE
)@@G@@      @A@@@@          S,H1 A0,RRTPTR,A3   .     @G@@@@          MSI,U A0OF
)@@G@@,10         . $P CALCULATE START OF PACKED SRT        @A@@@@          A OG
)@@G@@   A2,A0          .     @A@@@@          S,H2 A2,SRTPTR,A3   .     @A@@@@OH
)@@G@@          SSL  A0,36          .     @E@@@@          LDSL A0,12          OI
)@@G@@. $P GET # SRT ENTRIES        @A@@@@          S,H1 A0,SRTPTR,A3   .     OJ
)@@G@@@G@@@@          MSI,U A0,9          . $P CALCULATE END OF PACKED SDT    OK
)@@G@@      @A@@@@          A    A2,A0          .     @A@@@@          S    A2,OL
)@@G@@SAVLOC      .     @G@@@@          L    A0,A2          . $P GET CORE FOR OM
)@@G@@PACKED TABLES           @A@@@@          ER   MCORE$         .     @C@@@@ON
)@@G@@          J    GETART         . $J GETART       @A@@@@ARTLP     L    A0,OO
)@@G@@X8          .     @G@@@@          TNE,H2 A0,RRTPTR,A3 . $T ARE THERE MOROP
)@@G@@E ART IN NEXT SEGMENT ? @C@@@@          J    GETRRT         . $A YES NO,OQ
)@@G@@GETRRT@G@@@@          A,U  X9,1764        . $P SET PTR TO START OF NEXT OR
)@@G@@SEGMENT     @A@@@@GETART    L,T2 X10,8,X9       .     @E@@@@          A OS
)@@G@@   X10,X9         . $P SET INDEX TO START OF ART@A@@@@          LXI,U X1OT
)@@G@@0,1         .     @A@@@@          LXI,U X8,1          .     @E@@@@      OU
)@@G@@    L,T3 A0,8,X9        . $P GET # ART IN THIS SEGMENT@A@@@@          MSOV
)@@G@@I,U A0,10         .     @G@@@@          L    R1,A0          . $P BLOCK MOW
)@@G@@OVE ART TO BE CONTINUOUS      @A@@@@          BT   X8,0,*X10      .     OX
)@@G@@@A@@@@          LXI,U X8,0          .     @C@@@@          J    ARTLP    OY
)@@G@@      . $J ARTLP        @A@@@@RRTLP     L    A0,X8          .     @G@@@@OZ
)@@G@@          TNE,H2 A0,SRTPTR,A3 . $T ARE THERE MORE RRT IN NEXT SEGMENT ? PA
)@@G@@@C@@@@          J    GETSRT         . $A YES NO,GETSRT@G@@@@          A,PB
)@@G@@U  X9,1764        . $P SET PTR TO START OF NEXT SEGMENT     @A@@@@GETRRTPC
)@@G@@    L,T2 X10,9,X9       .     @E@@@@          A    X10,X9         . $P SPD
)@@G@@ET INDEX TO START OF RRT@A@@@@          LXI,U X10,1         .     @A@@@@PE
)@@G@@          LXI,U X8,1          .     @E@@@@          L,T3 A0,9,X9        PF
)@@G@@. $P GET # RRT IN THIS SEGMENT@A@@@@          MSI,U A0,10         .     PG
)@@G@@@G@@@@          L    R1,A0          . $P BLOCK MOVE RRT TO BE CONTINUOUSPH
)@@G@@      @A@@@@          BT   X8,0,*X10      .     @A@@@@          LXI,U X8PI
)@@G@@,0          .     @C@@@@          J    RRTLP          . $J RRTLP        PJ
)@@G@@@A@@@@SRTLP     L    A0,X8          .     @G@@@@          TNE,H2 A0,SAVLPK
)@@G@@OC    . $T ARE THERE MORE SRT IN NEXT SEGMENT ? @C@@@@          J    EXIPL
)@@G@@T           . $A YES NO,EXIT  @G@@@@          A,U  X9,1764        . $P SPM
)@@G@@ET PTR TO START OF NEXT SEGMENT     @A@@@@GETSRT    L,T2 X10,10,X9      PN
)@@G@@.     @E@@@@          A    X10,X9         . $P SET INDEX TO START OF SRTPO
)@@G@@@A@@@@          LXI,U X10,1         .     @A@@@@          LXI,U X8,1    PP
)@@G@@      .     @E@@@@          L,T3 A0,10,X9       . $P GET # SRT IN THIS SPQ
)@@G@@EGMENT@A@@@@          MSI,U A0,9          .     @G@@@@          L    R1,PR
)@@G@@A0          . $P BLOCK MOVE SRT TO BE CONTINUOUS      @A@@@@          BTPS
)@@G@@   X8,0,*X10      .     @A@@@@          LXI,U X8,0          .     @C@@@@PT
)@@G@@          J    SRTLP          . $J SRTLP        @G@@@@EXIT      L,H2 A0,PU
)@@G@@ARTPTR,A3   . $P BLOCK SHIFT RT TO LOWER CORE         @A@@@@          L PV
)@@G@@   X8,A0          .     @E@@@@          AN   A0,R3          . $P GET SHIPW
)@@G@@FT DIFFERENCE     @E@@@@          ANU,H2 A0,ARTPTR,A3 . $P UPDATE RT PTRPX
)@@G@@S           @A@@@@          SN,H2 A1,ARTPTR,A3  .     @A@@@@          ANPY
)@@G@@U,H2 A0,RRTPTR,A3 .     @A@@@@          SN,H2 A1,RRTPTR,A3  .     @A@@@@PZ
)@@G@@          ANU,H2 A0,SRTPTR,A3 .     @A@@@@          SN,H2 A1,SRTPTR,A3  QA
)@@G@@.     @E@@@@          L,H2 A0,SAVLOC      . $P GET # WORDS IN RT        QB
)@@G@@@A@@@@          AN   A0,X8          .     @A@@@@          L    R1,A0    QC
)@@G@@      .     @A@@@@          L    X9,R3          .     @E@@@@          LXQD
)@@G@@I,U X8,1          . $P SET TRANSFER INDICES     @A@@@@          LXI,U X9QE
)@@G@@,1          .     @E@@@@          BT   X9,0,*X8       . $P BLOCK TRANSFEQF
)@@G@@R RT        @E@@@@          L    A0,X9          . $P RELEASE UNUSED COREQG
)@@G@@      @A@@@@          LSSL A0,18          .     @A@@@@          SSL  A0,QH
)@@G@@18          .     @A@@@@          S    A0,LAST$D      .     @A@@@@      QI
)@@G@@    ER   LCORE$         .     @E@@@@          L,U  A0,10          . $P SQJ
)@@G@@ET MAX ADT SIZE         @A@@@@          S    A0,MAXADT,A3   .     @G@@@@QK
)@@G@@          L,H1 R1,RRTPTR,A3   . $P SEARCH ALL RRT TO FIND MAX RDT SIZE  QL
)@@G@@@A@@@@          L,H2 X8,RRTPTR,A3   .     @A@@@@          LXI,U X8,10   QM
)@@G@@      .     @A@@@@MRLP      SG,T1 A0,1,*X8      .     @A@@@@          J QN
)@@G@@   MREND          .     @A@@@@          L    A1,X8          .     @A@@@@QO
)@@G@@          AN,U A1,10          .     @A@@@@          L,T1 A0,1,A1        QP
)@@G@@.     @A@@@@          J    MRLP           .     @A@@@@MREND     S    A0,QQ
)@@G@@MAXRDT,A3   .     @G@@@@          L,H1 R1,SRTPTR,A3   . $P SEARCH ALL SRQR
)@@G@@T TO FIND MAX SDT SIZE  @A@@@@          L,H2 X8,SRTPTR,A3   .     @A@@@@QS
)@@G@@          LXI,U X8,9          .     @A@@@@MSLP      SG,T1 A0,1,*X8      QT
)@@G@@.     @A@@@@          J    MSEND          .     @A@@@@          L    A1,QU
)@@G@@X8          .     @A@@@@          AN,U A1,9           .     @A@@@@      QV
)@@G@@    L,T1 A0,1,A1        .     @A@@@@          J    MSLP           .     QW
)@@G@@@A@@@@MSEND     S    A0,MAXSDT,A3   .     @A@@@@         L,U   A0,1     QX
)@@G@@      .     @E@@@@         S     A0,SDTICF,A3   . $P  SET SDT-IN-CORE-FLQY
)@@G@@AG    @C@@@@          J    *FASRTL        . $E RETURN       @]@@@@ .    QZ
)@@G@@      @^@@@@ .        ERROR ROUTINES@]@@@@ .          @C@@@@ERR1      S RA
)@@G@@   A0,SAVLOC      . $H ERR1         @A@@@@          E$DIT   EDTPKT      RB
)@@G@@.     @A@@@@          E$COPY  40,MSG1     .     @E@@@@          E$OCTF  RC
)@@G@@12,SAVLOC   . $P OUTPUT ASG STATUS        @A@@@@          E$DITX        RD
)@@G@@      .     @A@@@@          P$RINT  (PF 1,12,EDTBUF) .@A@@@@          ERRE
)@@G@@      EXIT$       . $E  @C@@@@ERR2      S    A2,SAVLOC      . $H ERR2   RF
)@@G@@      @A@@@@          E$DIT  EDTPKT       .     @A@@@@          E$COPY  RG
)@@G@@34,MSG2     .     @E@@@@          E$OCTF  2,SAVLOC    . $P OUTPUT PFS$ SRH
)@@G@@TATUS       @A@@@@          E$DITX              .     @A@@@@          P$RI
)@@G@@RINT  (PF 1,12,EDTBUF) .@A@@@@          ER   EXIT$          . $E  @C@@@@RJ
)@@G@@SFIOER*.                      . $H SFIOER       @A@@@@          E$DIT  ERK
)@@G@@DTPKT       .     @A@@@@          E$COPY 38,MSG3      .     @A@@@@      RL
)@@G@@    L,U  A1,3           .     @A@@@@          L    A0,IOSTAT      .     RM
)@@G@@@E@@@@          LMJ  X11,EOCTF$     . $P OUTPUT I/O STATUS        @A@@@@RN
)@@G@@          E$DITX              .     @A@@@@          P$RINT (PF 1,12,EDTBRO
)@@G@@UF) . @E@@@@          L$SNAP 'IO PKT',7,6,SIOPKT  . $P SNAP I/O PKT     RP
)@@G@@@A@@@@          ER   EXIT$          . $E  @]@@@@ .          @]@@@@$(4). RQ
)@@G@@      @C@@@@EDTPKT    E$PKT  12,EDTBUF 'MSG','.' .          @A@@@@EDTBUFRR
)@@G@@    RES  12             .     @A@@@@ASGADR    +    ASGOLN         .     RS
)@@G@@@A@@@@          +    ASGNLN         .     @A@@@@ASGOLN    '@ASG,A OLDSCHRT
)@@G@@EMA. . '  . @A@@@@ASGNLN    '@ASG,A NEWSCHEMA. . '  . @A@@@@ELTPKT    'XRU
)@@G@@XXXXXXX'          .     @A@@@@          'SCHEMA  '          .     @A@@@@RV
)@@G@@          +    0              .     @A@@@@          +    0,0,6,0,0,0    RW
)@@G@@.     @A@@@@         DO  4 ,   ' '        .     @A@@@@ELTSEC    +    0  RX
)@@G@@            .     @A@@@@          +    0              .     @A@@@@SIOPKTRY
)@@G@@    'XXXXXXXX'          .     @A@@@@          +    0              .     RZ
)@@G@@@A@@@@          +    0,020,0,0,0,0  .     @A@@@@          +    0        SA
)@@G@@      .     @A@@@@          +    0              .     @A@@@@FILENM    + SB
)@@G@@   OLDNME         .     @A@@@@          +    NEWNME         .     @A@@@@SC
)@@G@@OLDNME    'OLDSCHEMA'         .     @A@@@@NEWNME    'NEWSCHEMA'         SD
)@@G@@.     @A@@@@TRKIC     +         -1        .     @A@@@@          +       SE
)@@G@@  -1        .     @A@@@@TRKAD     +         0         .     @A@@@@      SF
)@@G@@    +         0         .     @A@@@@SAVLOC    +    0              .     SG
)@@G@@@A@@@@SWDCNT    +    0              .     @A@@@@ARTPTR    +    0        SH
)@@G@@      .     @A@@@@          +    0              .     @A@@@@RRTPTR    + SI
)@@G@@   0              .     @A@@@@          +    0              .     @A@@@@SJ
)@@G@@SRTPTR    +    0              .     @A@@@@          +    0              SK
)@@G@@.     @A@@@@SDTICF*  +     0              .     @A@@@@          +    0  SL
)@@G@@            .     @A@@@@SECTAD*   +    0              .     @A@@@@      SM
)@@G@@    +    0              .     @A@@@@MAXADT*   +    0              .     SN
)@@G@@@A@@@@          +    0              .     @A@@@@MAXRDT*   +    0        SO
)@@G@@      .     @A@@@@          +    0              .     @A@@@@MAXSDT*   + SP
)@@G@@   0              .     @A@@@@          +    0              .     @]@@@@SQ
)@@G@@ .          @A@@@@DRUMAD    EQUF SIOPKT+5       .     @A@@@@WDCNT     EQSR
)@@G@@UF SIOPKT+4,,H1   .     @A@@@@BUFADR    EQUF SIOPKT+4,,H2   .     @A@@@@SS
)@@G@@IOSTAT    EQUF SIOPKT+3,,S1   .     @]@@@@ .          @E@@@@MSG1     'ERST
)@@G@@ROR IN ASSIGNING SCHEMA FILE - STATUS:'  .      @C@@@@MSG2      'SCHEMA SU
)@@G@@ELEMENT NOT FOUND - STATUS:' .@E@@@@MSG3      'I/O ERROR READING ABS SCHSV
)@@G@@EMA - STATUS:' .        @A@@@@          END                 .     ___   SW
)@@G@@*   +    0              .     @A@@@@          +    0              .     SX
)@@G@@@A@@@@MAXADT*   +    0              .     @A@@@@          +    0        SY
)@@G@@*[@@@@*SDFF*@#@@@@          AXR$    @#@@@@$(4)      LIT. .  @]@@@@$(1). SZ
)@@G@@      @[@@@@.     @^@@@@.         *  DB$AM *    @[@@@@.     @F@@@@.     TA
)@@G@@    THIS IS ROUTINE, KNOWN AS DATA BASE ACCESS METHOD, IS   @[@@@@.     TB
)@@G@@@E@@@@.              TO READ & WRITE THE DATA BASE PAGE(S).       @[@@@@TC
)@@G@@.     @^@@@@.         ENTERED:      @A@@@@.                   LX,U   X10TD
)@@G@@,PARAM@A@@@@.                   LMJ    X11,DB$AM@[@@@@.     @[@@@@.     TE
)@@G@@@F@@@@ANAME     EQUF      0,X10             .  WORD 0 & 1 IS AREA NAME  TF
)@@G@@@G@@@@                                      .  IF WORD 0 = 0 , WORD 1 ISTG
)@@G@@ DBP, @G@@@@                                      .     AND THE PAGE POITH
)@@G@@NTED BY DBP @E@@@@                                      .     WILL BE RETI
)@@G@@AD    @E@@@@STA       EQUF      3,X10,S1          .  STATUS RETURNED:   TJ
)@@G@@@G@@@@                                      .     022 ACCESS BEYOND AN ATK
)@@G@@REA   @H@@@@                                      .     052 GOT LESS PAGTL
)@@G@@ES THAN REQ'D     @G@@@@                                      .     053 TM
)@@G@@FUNCTION CODE NOT R/W   @G@@@@                                      .   TN
)@@G@@  054 (PGCNT,BUFLEN,STPG) = 0 @I@@@@                                    TO
)@@G@@  .     055 AREA NOT SPECIFIED IN AREA CMD      @E@@@@FNC       EQUF    TP
)@@G@@  3,X10,S2          . FUNCTION CODE       @E@@@@                        TQ
)@@G@@              .     020  READ       @E@@@@                              TR
)@@G@@        .     010  WRITE      @G@@@@FWRDCNT   EQUF      3,X10,H2        TS
)@@G@@  . TOTAL NUMBER OF WORD READ       @G@@@@                              TT
)@@G@@        .   NOTE: THIS NUMBER DIVIDED BY  @H@@@@                        TU
)@@G@@              .         PAGESZ SHOULD PROVID NUMBER   @F@@@@            TV
)@@G@@                          .         OF PAGES READ.    @G@@@@PGCNT     EQTW
)@@G@@UF      4,X10,H1          . NUMBER OF PAGES REQUESTED       @D@@@@BUFADDTX
)@@G@@R   EQUF      4,X10,H2          . BUFFER ADDR   @E@@@@BUFLEN    EQUF    TY
)@@G@@  5,X10,H1          . LENGTH OF BUFFER    @E@@@@STPG      EQUF      5,X1TZ
)@@G@@0,H2          . STARTING PAGE NUMBER@F@@@@                              UA
)@@G@@        .          1 = FIRST PAGE   @E@@@@PAGESZ    EQUF      6,X10,H2  UB
)@@G@@        . AREA PAGE SIZE      @E@@@@DBP       EQUF      1,X10           UC
)@@G@@  . DATA BASE POINTER   @ @@@@DRUMADDR  EQUF      5,X10     @^@@@@NAME  UD
)@@G@@    EQUF      1,X9@ @@@@PGBIT     EQUF      0,X9,S3   @ @@@@RCDBIT    EQUE
)@@G@@UF      0,X9,S4   @ @@@@CODE      EQUF      0,X9,T1   @ @@@@PGLENG    EQUF
)@@G@@UF      3,X9,T1   @ @@@@PGALOCT   EQUF      4,X9,H1   @C@@@@DB$AM*      UG
)@@G@@                          . $H      @C@@@@          SZ        R3        UH
)@@G@@        . RESET R3@E@@@@          SZ        STA               . $P RESETUI
)@@G@@ STATUS BYTE@G@@@@          SZ        FWRDCNT           . $P RESET WORD(UJ
)@@G@@INPUT) COUNT      @G@@@@          DL        A0,7,X10          . $P MOVE UK
)@@G@@LAST TWO  TO 4TH&5TH    @B@@@@          DS        A0,4,X10          .   UL
)@@G@@@[@@@@.     @F@@@@.         CHECK IF D OPTION SET, GO TO TRACE ROUTINE IUM
)@@G@@F IT IS     @[@@@@.     @E@@@@          TZ        DOPT              . $TUN
)@@G@@ D OPTION SET     @E@@@@          J         TRACE             . $A YES,TUO
)@@G@@RACE NO     @E@@@@TRACER                                . $H RETURN FRONUP
)@@G@@ TRACE@F@@@@          TNZ       ANAME             . $T AREA NAME PROVIDEUQ
)@@G@@D     @E@@@@          J         DB201             . $A YES  NO,DB201    UR
)@@G@@@E@@@@          LX        X9,C3             . $P GET AREA TBL     @B@@@@US
)@@G@@          LXI,U     X9,9              .   @E@@@@          LA,H1     A0,CUT
)@@G@@3             . $P AREA TBL LENGTH  @B@@@@          DSL       A0,36     UU
)@@G@@        .   @G@@@@          DI,U      A0,9              . $P COMPUTE THEUV
)@@G@@ ENTRY COUNT      @B@@@@          ANA,U     A0,1              .   @E@@@@UW
)@@G@@          DL        A1,ANAME          . $P A0,A1 = AREA NAME@C@@@@DB101 UX
)@@G@@                                . $H      @E@@@@          DTE       A1,1UY
)@@G@@,*X9          . $P SEARCH TBL       @D@@@@          JGD       A0,DB101  UZ
)@@G@@        . $T FOUND IT   @E@@@@          JN        A0,DB955          . $AVA
)@@G@@ YES NO,DB100     @B@@@@          ANX       X9,(9,9)          .   @ @@@@VB
)@@G@@          J         DB301     @^@@@@/.        DBP ENTERED   @C@@@@DB201 VC
)@@G@@                                . $H      @E@@@@          LA,H1     A0,CVD
)@@G@@3             . $P GET C3 TBL LENGTH@B@@@@          DSL       A0,36     VE
)@@G@@        .   @G@@@@          DI,U      A0,9              . $P COMPUTE THEVF
)@@G@@ ENTRY COUNT      @B@@@@          LR        R1,A0             .   @G@@@@VG
)@@G@@          LX        X9,C3             . $P GET FIRT AREA TBL ENTRY      VH
)@@G@@@B@@@@          LXI,U     X9,9              .   @B@@@@          LA      VI
)@@G@@  A0,PGBIT          .   @B@@@@          AA        A0,RCDBIT         .   VJ
)@@G@@@E@@@@          LA        A4,DBP            . $P COMPUTE AREA CODE@ @@@@VK
)@@G@@          DSL       A4,0,A0   @G@@@@          SE,T1     A4,0,*X9        VL
)@@G@@  . $T AREA CODE IN TBL ENTRY       @E@@@@          J         DB955     VM
)@@G@@        . $A YES  NO,DB954    @B@@@@          ANX       X9,(9,9)        VN
)@@G@@  .   @F@@@@          DL        A0,NAME           . MOVE AREA NAME TO PKVO
)@@G@@T     @B@@@@          DS        A0,ANAME          .   @B@@@@          SZVP
)@@G@@        A4                .   @F@@@@          LA        A0,PGBIT        VQ
)@@G@@  . $P COMPUT PAGE NUMBER     @G@@@@          LDSL      A4,0,A0         VR
)@@G@@  .  THIS PAGE NUMBER WILL BE       @G@@@@          SA        A4,STPG   VS
)@@G@@        .    THE STARTING PAGE NUMBER     @[@@@@/     @C@@@@DB301       VT
)@@G@@                          . $H      @B@@@@          TNZ       PGCNT     VU
)@@G@@        .   @G@@@@          J         DB954             . $P CHECK PGCNTVV
)@@G@@,BUFLEN,STPG      @ @@@@          TNZ       BUFLEN    @ @@@@          J VW
)@@G@@        DB954     @^@@@@          TNZ       STPG@ @@@@          J       VX
)@@G@@  DB954     @F@@@@          SZ        FWRDCNT           . $P INITIALIZE VY
)@@G@@FWRDCNT     @B@@@@          LA        A0,PGLENG         .   @E@@@@      VZ
)@@G@@    SA        A0,PAGESZ         . $P SET PAGE SIZE    @]@@@@DB305       WA
)@@G@@@G@@@@          LA        A0,PGCNT          . $T CHECK IF PAGE ACCESSED WB
)@@G@@BEYOND@B@@@@          AA        A0,STPG           .   @B@@@@          ANWC
)@@G@@A,U     A0,1              .   @D@@@@          LA        A4,PGALOCT      WD
)@@G@@  . $A YES,DB310  @B@@@@          TLE       A4,A0             .   @B@@@@WE
)@@G@@          J         DB310             .   @G@@@@                        WF
)@@G@@              . $P CHECK IF BUFFER BIG ENOUGH   @B@@@@          LA      WG
)@@G@@  A0,PGCNT          .   @E@@@@          MSI       A0,PGLENG         . $AWH
)@@G@@ YES  NO,DB320    @B@@@@          LA        A4,BUFLEN         .   @B@@@@WI
)@@G@@          TLE       A4,A0             .   @B@@@@          J         DB32WJ
)@@G@@0             .   @E@@@@          SA        A0,PGCNT          . $P COMPUWK
)@@G@@TE DRUM ADDR@B@@@@          LA        A0,STPG           .   @B@@@@      WL
)@@G@@    ANA,U     A0,1              .   @B@@@@          MSI       A0,PAGESZ WM
)@@G@@        .   @B@@@@          DSL       A0,36             .   @B@@@@      WN
)@@G@@    DI,U      A0,28             .   @B@@@@          SA        A0,DRUMADDWO
)@@G@@R       .   @F@@@@          LA        A0,FNC            . $T FUNCTION COWP
)@@G@@DE = R/W    @G@@@@          LR,U      R1,4              . $P SET UP TO CWQ
)@@G@@HECK FUNCTION CODE@B@@@@          LX        X8,(1,CODETYPE)   .   @E@@@@WR
)@@G@@          SE,T3     A0,,*X8           . $P PERFORM SEARCH   @F@@@@      WS
)@@G@@    J         DB953             . $J ERROR, FNC NOT FOUND   @B@@@@      WT
)@@G@@    ANX       X8,(1,1)          .   @D@@@@          LA,T2     A0,,X8    WU
)@@G@@        . GET F CODE    @E@@@@          SA        A0,FNC            . $PWV
)@@G@@ RESET IN PKT     @E@@@@          TZ,T1     0,X8              . $T IO$ OWW
)@@G@@R IOW$      @D@@@@          J         DOIO$             . $J DO IO$     WX
)@@G@@@]@@@@$(4).       @]@@@@CODETYPE.   @^@@@@          +0,010,010    @^@@@@WY
)@@G@@          +0,020,020    @^@@@@          +1,010,011    @^@@@@          +1WZ
)@@G@@,020,021    @]@@@@$(1).       @C@@@@DB401                               XA
)@@G@@  . $H      @F@@@@          LA        A0,X10            . $P GET I/O PACXB
)@@G@@KET ADDR    @D@@@@          ER        IOW$              . $P DO I/O     XC
)@@G@@@E@@@@          TZ        STA               . $T GOOD STATUS      @E@@@@XD
)@@G@@          LMJ       X11,IOERR         . $A YES NO,IOERR     @B@@@@      XE
)@@G@@    TNZ       R3                .   @E@@@@          J         0,X11     XF
)@@G@@        . $J EXIT,RETURN      @ @@@@DB402     LA,U      A0,052    @ @@@@XG
)@@G@@          SA        A0,STA    @ @@@@          J         0,X11     @C@@@@XH
)@@G@@DB310                                 . $H      @ @@@@          LA,U    XI
)@@G@@  A0,052    @G@@@@          SA        A0,R3             . $P ADJUST PGCNXJ
)@@G@@T TO END OF AREA  @ @@@@          ANA       A4,STPG   @C@@@@          JNXK
)@@G@@        A4,DB922          . $E      @^@@@@          AA,U      A4,1@ @@@@XL
)@@G@@          SA        A4,PGCNT  @ @@@@          J         DB305     @C@@@@XM
)@@G@@DB320                                 . $H      @^@@@@          SZ      XN
)@@G@@  A3  @H@@@@          DI        A3,PGLENG         . $P ADJUST PGCNT TO FXO
)@@G@@IT THE BUFFER     @ @@@@          SA        A3,PGCNT  @C@@@@          JZXP
)@@G@@        A3,DB402          . $E      @ @@@@          J         DB305     XQ
)@@G@@@C@@@@DB922                                 . $H      @ @@@@          LAXR
)@@G@@,U      A0,022    @B@@@@          SA        A0,STA            .   @D@@@@XS
)@@G@@          J         0,X11             . $J RETURN     @C@@@@DB955       XT
)@@G@@                          . $H      @ @@@@          LA,U      A0,055    XU
)@@G@@@ @@@@          J         DB990     @C@@@@DB954                         XV
)@@G@@        . $H      @ @@@@          LA,U      A0,054    @ @@@@          J XW
)@@G@@        DB990     @C@@@@DB953                                 . $H      XX
)@@G@@@ @@@@          LA,U      A0,053    @ @@@@DB990     SA        A0,STA    XY
)@@G@@@B@@@@          J         IOERR             .   @C@@@@DOIO$             XZ
)@@G@@                    . $H      @B@@@@          LA        A0,X10          YA
)@@G@@  .   @B@@@@          ER        IO$               .   @D@@@@          J YB
)@@G@@        0,X11             . $J RETURN     @[@@@@.     @^@@@@.         TRYC
)@@G@@ACE ROUTINE @[@@@@.     @C@@@@TRACE                                 . $HYD
)@@G@@      @F@@@@          TS        TSWORD            . $T SEE IF FREE TO TRYE
)@@G@@ACE   @E@@@@          SX        X1,SAVEX1         . $P SAVE X1,X2,X3,X11YF
)@@G@@@B@@@@          SX        X2,SAVEX2         .   @B@@@@          SX      YG
)@@G@@  X3,SAVEX3         .   @B@@@@          SX        X11,SAVEX11       .   YH
)@@G@@@ @@@@          E$DIT     EDPKT     @ @@@@          E$COPY    12,ANAME  YI
)@@G@@@A@@@@          E$FD1     ('FUNC=')       @ @@@@          E$OCTF    3,FNYJ
)@@G@@C     @A@@@@          E$FD1     (',STPG=')      @A@@@@          E$DECF  YK
)@@G@@  5,STPG          @A@@@@          E$FD2     (',PGCNT=')     @A@@@@      YL
)@@G@@    E$DECF    3,PGCNT         @A@@@@          E$FD2     (',BUFADD=')    YM
)@@G@@@A@@@@          E$OCTF    6,BUFADDR       @^@@@@          E$DITX        YN
)@@G@@@A@@@@          P$RNTA   PRTAPKT          @G@@@@          LX        X1,SYO
)@@G@@AVEX1         . $P RESTORE X1,X2,X3,X11         @C@@@@          LX      YP
)@@G@@  X2,SAVEX2         .         @C@@@@          LX        X3,SAVEX3       YQ
)@@G@@  .         @C@@@@          LX        X11,SAVEX11       .         @A@@@@YR
)@@G@@          C$TS      TSWORD          @E@@@@          J         TRACER    YS
)@@G@@        . $J RETURN           @]@@@@$(4).       @A@@@@PF        FORM    YT
)@@G@@  12,6,18         @]@@@@PRTAPKT.    @A@@@@          PF        1,14,LINE YU
)@@G@@      @^@@@@          'DB$AMPF'     @A@@@@EDPKT     E$PKT    14,LINE    YV
)@@G@@      @^@@@@LINE      RES       14  @]@@@@SAVEX1    +0@]@@@@SAVEX2    +0YW
)@@G@@@]@@@@SAVEX3    +0@]@@@@SAVEX11   +0@]@@@@TSWORD    +0@^@@@@          ENYX
)@@G@@D           ___   @]@@@@SAVEX1    +0@]@@@@SAVEX2    +0@]@@@@SAVEX3    +0YY
)@@G@@@]@@@@SAVEX11   +0@]@@@@*[@@@@*SDFF*@^@@@@          AXR$          @^@@@@YZ
)@@G@@$(4)      LIT           @]@@@@$(1).       @]@@@@F$ASG*.     @A@@@@      ZA
)@@G@@    SX        X11,SAVEX11     @E@@@@          LA,H1     A4,C3           ZB
)@@G@@  . GET AREA TBL COUNT  @C@@@@          DSL       A4,36             .   ZC
)@@G@@      @E@@@@          DI,U      A4,9              . COMPUTE ENTRY COUNT ZD
)@@G@@@E@@@@          LX,H2     X8,C3             . GET TBL ENTRY ADDR  @^@@@@ZE
)@@G@@          LXI,U     X8,9@E@@@@          JZ        A4,0,X11          . REZF
)@@G@@TURN IF 0 ENTRY   @^@@@@          ANA,U     A4,1@]@@@@ASGLOOP.    @ @@@@ZG
)@@G@@          E$DIT     EDPKT     @^@@@@          E$CHAR    '@' @A@@@@      ZH
)@@G@@    E$FD1     ('ASG,A')       @^@@@@          E$CHAR    ' ' @ @@@@      ZI
)@@G@@    E$FD2     1,*X8     @^@@@@          E$CHAR    ' ' @^@@@@          E$ZJ
)@@G@@CHAR    '.' @#@@@@          E$DITX  @ @@@@          LA,U      A0,LINE   ZK
)@@G@@@^@@@@          ER        CSF$@A@@@@          JN        A0,ASGXER       ZL
)@@G@@@A@@@@          JGD       A4,ASGLOOP      @A@@@@          LX        X11,ZM
)@@G@@SAVEX11     @ @@@@          J         0,X11     @[@@@@/     @]@@@@ASGXERZN
)@@G@@.     @ @@@@          LX,U      X10,LINE  @A@@@@          LMJ       X11,ZO
)@@G@@ASGERR      @^@@@@LINE      RES       10  @A@@@@EDPKT     E$PKT     10,LZP
)@@G@@INE         @^@@@@SAVEX11   RES       1   @^@@@@          END           ZQ
)@@G@@___A@^@A@A@           E$DIT     EDPKT           @A@A@           E$COPY  ZR
)@@G@@)@@[Y*@@@@@@;:)@@MW#K@@S @@@@TG#0@@H;CK@@MW#)@@G @@@@U;G@@@MC#0@@HBF2-85ZS
)@@G@@*CALC*AA@@@@)@F[Y*@@@@@@C@0@@G;?@@@GC@K@@R @@@@V @@@@U @@@@T @@@@S @@@@GZT
)@@G@@/KF@@@C@F)@@;$)@@MAB@@@@)@Q[Y*@]@@@@:8@@@AG8@@@[;!@@@A;(K@@Y')G@@.H8@@@[ZU
)@@G@@ @@@@A @@@@M;CK@@M;?@@@A @@@@GAC@@@@)@-[Q*@C@)C@@@@@@@/KB@@@/!K@@:/^0@@WZV
)@@G@@H80@@[/!K@@::9)@@AG9)@@[G8K@@[(@@@@G @@@@GAD@@@@)@:[Y*@]@@@@C#K@@KC#@@@KZW
)@@G@@/K @@@O9)@@[')A@@4;(#@@@ @@@@MR@0@@MT9)@@AG9)@@AD[)@@MAE@@@@)@6[Y*@@@@@@ZX
)@@G@@C(X@@@C!X@@@C1X@@@C5X@@@/S@@@@/S@@@@/S@@@@N@0@@KN@)@@KC#0@@KC#)@@KAF@@@@ZY
)@@G@@)[[[Y*@@)]@@H9@@@0/K@@[K:9@@@ /[@@[K;!@@@A @@@@K @@@@HC9)@@ C[K@@GC-X@@@ZZ
)@@G@@C>X@@@AG@@@@)[G[Q*@)@C@@@@@@@@O]@@@L/[K@[=CTS@@[R]@@@I/KB@@@8^)@[AG@K@@KAA
)@@G@@T8K@@E+80@@JE@0@@KAH@@@@)[Q[Q%@C@)]@@@@@@@G9K@@[H[S@@[C[S@@]/K@@[RO]@@@LAB
)@@G@@/[K@[=C5S@@@/K@@[X:OC@@@/@@@[XAI@@@@)[)[Q*@)@-@@@@@@@@W80@@D @@@@JCD@@@@AC
)@@G@@@@[@@@/KB@@@C@@@[&/KB@@@;@@@@M&#C@@[C@@@@LAJ@@@@)[%[Q%@CK[@^[@K@@@CW[@@@AD
)@@G@@P@K@['/G0@[78#0@[\9.[)@[8#0@[\&8K@@DR^K@@@9!E@@@/@0@[7AK@@@@)[4[Y*@@]@@@AE
)@@G@@C@@@@S/!0@@IC];@@@&'0@@[@@D@@D/KB@@@ @E@@]C8@@__/KB@@@A^U@@][WE@@]AL@@@@AF
)@@G@@)[_[Q%@)C]@)@)@@@@&'0@@[@@@@@ /K@@[.C];@@[&'0@@]/K@@@]C#@@]B/!0@[M/!0@[$AG
)@@G@@/!0@[#AM@@@@)]D[Y*)@@]@@T8@@@HC[J@]SE@0@@KH9@@@A;!@@@A @@@@K @@@@GC8K@@#AH
)@@G@@C[K@@S/!0@@IC];@@@AN@@@@)]O[Y*)]@@@@@@@@@#@@@@@]@@@@@]@@@@@[@@@@@[@@@@@@AI
)@@G@@@@@@@@/K@@]7C@K@@G8#K@]IG@@@@KAO@@@@)]Z[Y*@@@@@@@@@@@D@@@@@B@@@@@A@@@@@CAJ
)@@G@@@@@@@B@@@@@ @@@@@A@@@@@ @@@@@^@@@@@^@@@@@#AP@@@@)]%[Y*@@@)@@/!0@@IC];@@@AK
)@@G@@&'0@@[@@@@@G@@@@@F@@@@@E@@@@@D@@@@@G@@@@@C@@@@@F@@@@@EAQ@@@@)]5[Q*)C]@)CAL
)@@G@@@C@@@@C@@@@S/!0@@IC];@@@&'0@@]/K@@@]C#@@#D/!0@[M/!0@[$/!0@[#C@@@@SAR@@@@AM
)@@G@@)]_[Q%@]@C@]@@@@@@/K@@]7T@K@@NG8K@@[G90@@[/!0@[#C@@@@S/!0@@IC];@@[C[0@@HAN
)@@G@@/!0@[#AS@@@@)#D[Q*]@C]@)C]@@@@/K@@@]C#@@#N/!0@[M/!0@[$/!0@[#C@@@@S/!0@@IAO
)@@G@@C];@@@&'0@@[@@@@@ AT@@@@)#N[Q*]@C]@)C]@@@@/K@@@]C#@@#"/!0@[M/!0@[$/!0@[#AP
)@@G@@C@@@@S/!0@@IC];@@@&'0@@[@@@@@[AU@@@@)#X[Q%@)@C@)@@@@@@C];@@[C[0@@H/!0@[#AQ
)@@G@@C@@@@S/!0@@IC];@@@&'0@@]R@K@@G/!0@[M/!0@[$AV@@@@)#$[Y%@C@@@@;H@@@MC[@@@[AR
)@@G@@;G@@@=C[0@@HG@@@@NT90@[=W8@@@O @@@@G/!0@[#C@@@@S/!0@@IAW@@@@)#2[Y*@]@@@@AS
)@@G@@C@F)@@;$)@@M;:)@@MC#)@@HW@@@#" @@@@GC@K@@NC#0@@HG@K@@LW@@@@K;DK@@MAX@@@@AT
)@@G@@)#.[Q*@)]@)C]@@@@@C#@@ >/!0@[M/!0@[$/!0@[#C@@@@S/!0@@IC];@@@&'0@@[@@@@@#AU
)@@G@@/KF@@@AY@@@@)^B[Q%@]@C@C]@@@@@/@K@^O/!0@[#C@@@@TC[0@@H/!0@[#C@@@@S/!0@@IAV
)@@G@@C];@@[&'0@@^/K@@@]AZ@@@@)^L[Q*@)@)]@@@@@@@/!0@[#C@@@@S/!0@@IC];@@@&'0@@]AW
)@@G@@/K@@^^G@K@@NT8K@@ET8K@@E!8K@@EBA@@@@)^V[Q*C@)]@]@@@@@@/!0@@IC];@@@&'0@@[AX
)@@G@@/K@@^^G@K@@N/!0@[#C@@@@S/!0@@IC];@@[C[0@@HBB@@@@)^>[Q*)C@C@C@@@@@@C[0@@HAY
)@@G@@/!0@[#C@@@@T;J@@@G/!0@@IC];@@@&'0@@]/K@@^^/!0@[#C@@@@SBC@@@@)^\[Q*)]@C@CAZ
)@@G@@@@@@@@C@K@@S/!0@@IC];@@@&'0@@[/K@@^^G@K@@NW@@@ > @@@@G/!0@[#C@@@@SBD@@@@BA
)@@G@@)^9[Y*)@)@@@H9@@@A;!@@@A @@@@K @@@@GC8K@@#C[K@@S/!0@@IC];@@@&'0@@[/K@@^^BB
)@@G@@;CK@@YBE@@@@) ^[Q*)@)]@@@@@@@@@@@@@[@@@@@@@@@@@@/K@@^^C@K@@G8#K@ [G@@@@KBC
)@@G@@T8@@@HC[J@ FE@0@@KBF@@@@) I[Y*@@@@@@@@@@@B@@@@@ @@@@@A@@@@@ @@@@@^@@@@@^BD
)@@G@@@@@@@#@@@@@#@@@@@]@@@@@]@@@@@[BG@@@@) T[Y*@@@@@@@@@@@F@@@@@E@@@@@D@@@@@GBE
)@@G@@@@@@@C@@@@@F@@@@@E@@@@@D@@@@@B@@@@@A@@@@@CBH@@@@) =[Q*@)]@)C]@@@@@C#@@ \BF
)@@G@@/!0@[M/!0@[$/!0@[#C@@@@S/!0@@IC];@@@&'0@@[@@@@@#@@@@@GBI@@@@) ,[Q%@@)]@]BG
)@@G@@@@@@@@/!0@@IC];@@@&'0@@[/K@@ :C@K@@S/!0@@IC];@@@&'0@@[@@@@@ /K@@@]BJ@@@@BH
)@@G@@) 8[Q*)@)C@@@@@@@@T90@@E!8K@[=T90@@E!8K@J*/@K@A^/!0@[#C@@@@TC[0@@H/!0@[#BI
)@@G@@C@@@@SBK@@@@)A][Q*]@]@C@@@@@@@C[0@@H/!0@[#C@@@@S/!0@@IC];@@@&'0@@]/K@@ :BJ
)@@G@@G@K@@NT90@@E!8K@@EBL@@@@)AG[Q*)]@)]@]@@@@@/!0@@IC];@@@&'0@@[/K@@ &&'0@@[BK
)@@G@@/K@@ ./!0@[#C@@@@S/!0@@IC];@@[BM@@@@)AQ[Y*@@)@)@/!0@@IC];@@@&'0@@[/K@@ :BL
)@@G@@C@K@@GP;@@@[%8K@@]T8@@@]W8@@@E;G@@@/C@@@@SBN@@@@)A-[Q*]@]@]@@@@@@@/K@@ :BM
)@@G@@;CK@@YC@K@@S/!0@@IC];@@@&'0@@[/K@@ :+8@@@J;C@@@YC@@@@SBO@@@@)A:[Q*C@)@)]BN
)@@G@@@@@@@@/!0@[#C@@@@S/!0@@IC];@@[C[0@@H/!0@[#C@@@@S/!0@@IC];@@@&'0@@^BP@@@@BO
)@@G@@)A5[Q*]@C@]@@@@@@@/!0@@IC];@@#G[0@@HT90@@E/!0@[#C@@@@S/!0@@IC];@@]G[0@@HBP
)@@G@@T90@[=BQ@@@@)A_[Q*)@)@)@@@@@@@C@@@[]C@K@[#/!0@@IC];@@@&'0@@[/K@@ :O#K@@NBQ
)@@G@@T90@@B/!0@[#C@@@@SBR@@@@)BD[Y*@@@@@@)@@@@H;*@@@^C@@@@T)@@@@H;*@@@#C@@@@UBR
)@@G@@)@@@@H;*@@@]C@@@@V)@@@@H;*@@@[BS@@@@)BO[Y*@@)@)@/!0@@IC];@@]&'0@@#/K@@ :BS
)@@G@@O#K@@G;CK@@M;?@@@M @@@@G)@@@@H;*@@@ C@@@@SBT@@@@)BZ[Q*)@)@)@@@@@@@C];@@[BT
)@@G@@G[0@@H/!0@[#C@@@@UG[0@@H/!0@[#C@@@@TC[0@@H/!0@[#C@@@@SBU@@@@)B([Q%@C@C@)BU
)@@G@@]@@@@@/K@@ :O#K@@N/!0@[#C@@@@S/!0@@IC];@@@G[0@@H/!0@[#C@@@@S/!0@@IBV@@@@BV
)@@G@@)B3[Q*C@)C]@)C@@@@@@@@@#/K@@@]C#@@B//!0@[M/!0@[$/!0@[#C@@@@S/!0@@IC];@@@BW
)@@G@@&'0@@[BW@@@@)B.[Q*C@]@@@@@@@@@C];@@@;!0@@GC]@@@S/!0@@IC];@@#C[0@@S;F@@@SBX
)@@G@@/!0@@IC];@@#&'0@@^BX@@@@)CB[Q%@@)@@@@@@@@@C@K@@P-]@@@T-[0@@S;FK@@M;J@@@ABY
)@@G@@/!0@@IC];@@];!0@@AC]@@@S/!0@@IBY@@@@)CL@,%@)C]@@@@@@@@@@@@@@@@@@@@@@@@@@BZ
)@@G@@@@@@@@@@@@@@@@@@@#/K@@@]C#@@CP/!0@[M/!0@[$BZ@@@@@@^@@F@@J@@[@@L@@:@].@@@CA
)@@G@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CQC3    CB
)@@G@@      CL0008      @@E@@@@@@@]^CL0014      @@E@@@@@@@[;CL0015      @@E@@@CC
)@@G@@@@@@#ECL0077      @@E@@@@@@@AACL0103      @@E@@@@@@@ &CL0231      @@E@@@CD
)@@G@@@@@@ 5CL0281      @@E@@@@@@@ALCL0295      @@E@@@@@@@ 5CL0298      @@E@@@CE
)@@G@@@@@@B^CL0311      @@E@@@@@@@ 0CL0333      @@E@@@@@@@ALCL0721      @@E@@@CF
)@@G@@@@@@]2CL0724      @@E@@@@@@@]2CL1042      @@E@@@@@@@B.CL1136      @@E@@@CG
)@@G@@@@@@A:CL1141      @@E@@@@@@@A>CL1229      @@E@@@@@@@AACL1500      @@E@@@CH
)@@G@@@@@@]2CL1505      @@E@@@@@@@]CCL1522      @@E@@@@@@@^CCL1530      @@E@@@CI
)@@G@@@@@@#OCL1604      @@E@@@@@@@ALCL1623      @@E@@@@@@@#XCL1630      @@E@@@CJ
)@@G@@@@@@#OCL1640      @@E@@@@@@@#_CL1657      @@E@@@@@@@#OCL1713      @@E@@@CK
)@@G@@@@@@AYCL1715      @@E@@@@@@@AYCL1717      @@E@@@@@@@AYCL1737      @@E@@@CL
)@@G@@@@@@ANCL1815      @@E@@@@@@@ &CL1819      @@E@@@@@@@ &CL1824      @@E@@@CM
)@@G@@@@@@^;CL1907      @@E@@@@@@@[;CL2022      @@E@@@@@@@^QCL210       @@E@@@CN
)@@G@@@@@@^+CL413       @@E@@@@@@@^*CL415       @@E@@@@@@@^5CL417       @@E@@@CO
)@@G@@@@@@B3CL761       @@E@@@@@@@];CL893       @@E@@@@@@@AYCL895       @@E@@@CP
)@@G@@@@@@AYCL897       @@E@@@@@@@AY@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CQ
)@@G@@*[@@@@*SDFF*@[@@@[ .    @A@@@[ .                  ** CONF-1 **    @[@@@[CR
)@@G@@ .    @E@@@[ .        THIS ELEMENT CONTAINS THE FOLLOWING ROUTINES:     CS
)@@G@@@C@@@[ .             BLDC1, BLDC3, CTINIT, BLDC8      @[@@@[ .    @[@@@[CT
)@@G@@ .    @A@@@[ .                  ** BLDC1 **     @[@@@[ .    @D@@@[ .    CU
)@@G@@    THIS ROUTINE PRODUCES ALL OF TABLES FOR     @B@@@[ .             EACCV
)@@G@@H INPUT OBJECT RECORD   @[@@@[ .    @D@@@[ .        IT BUILDS C1/C9 ITSECW
)@@G@@LF, AND CALLS ROUTINES  @C@@@[ .             TO BUILD C5/C11, C6/C12, C7CX
)@@G@@/C13, @B@@@[ .                      C8, C14, AND C15  @[@@@[ .    @E@@@[CY
)@@G@@ .        ON THE INITIAL CALL, BUFFER SPACE FOR THE TABLES  @C@@@[ .    CZ
)@@G@@         AND SCHEMA TABLES IS MCORED      @[@@@[ .    @A@@@[ .        THDA
)@@G@@E ROUTINE CALL IS       @A@@@[ .                  LX,U X10,NAMEBUF@A@@@[DB
)@@G@@ .                  LMJ  X11,BLDC1  @G@@@[ .                       WHEREDC
)@@G@@ NAMEBUF CONTAINS THE OBJ RECORD NAME     @[@@@[ .    @E@@@[ .        IFDD
)@@G@@ AN INVALID NAME IS GIVEN, THIS ROUTINE WILL    @B@@@[ .             PRODE
)@@G@@DUCE WARNING MESSAGES   @[@@@[ .    @#@@@[         AXR$.    @#@@@[$(2)  DF
)@@G@@   LIT.     @A@@@[PF       FORM  12,6,18        .     @G@@@[ . NUMOAP*  DG
)@@G@@EQU   30             . MAX NUM OWN/AUTO PTR PER C1/C9 ENTRY @F@@@[ . NUMDH
)@@G@@REC   EQU   100            . MAX NUM REC ENTRIES IN C1/C9   @B@@@[ . C1SDI
)@@G@@IZE   EQU   NUMREC*(NUMOAP+39) .    @A@@@[ . C5SIZE   EQU   (NUMREC/3)*2DJ
)@@G@@33 .  @A@@@[ . C7SIZE   EQU   (NUMREC/3)*200 .  @A@@@[ . C8SIZE   EQU   DK
)@@G@@NUMREC*6+28    .  @[@@@[ .    @]@@@[$(1).       @[@@@[ .    @B@@@[BLDC1*DL
)@@G@@.                       . $H BLDC1  @D@@@[         S,H2  X11,RETURN     DM
)@@G@@. $P SAVE RETURN ADDR   @E@@@[         S,H2  X10,RNMPTR     . $P STORE NDN
)@@G@@AME PTR IN CALL   @E@@@[         L     A1,0,X10       . $P SAVE FIRST WODO
)@@G@@RD OF NAME  @A@@@[         S     A1,SA1         .     @E@@@[         TNZDP
)@@G@@    BUFFLG        . $T IS THIS INITIAL CALL ?   @C@@@[         SLJ   CTIDQ
)@@G@@NIT         . $A NO YES,CTINIT@E@@@[         SZ    X7             . $P SDR
)@@G@@ET FOR FIRST SCHEMA     @A@@@[         SZ    SFIND          .     @A@@@[DS
)@@G@@         SZ    NFFLG          .     @A@@@[         SZ    C8FLG          DT
)@@G@@.     @A@@@[         SZ    CURREC         .     @F@@@[C1STRT   LMJ   X11DU
)@@G@@,FRBNME     . $W FRBNME - GET RDT FROM SCHEMA   @A@@@[RNMPTR*  +     0  DV
)@@G@@            .     @A@@@[RTABAD*  +     0              .     @A@@@[      DW
)@@G@@   +     SFIND          .     @A@@@[         +     $,('BLDC1')    .     DX
)@@G@@@E@@@[         TNZ   *RNMPTR        . $T WAS RECORD NAME VALID ?  @C@@@[DY
)@@G@@         J     C1ERR          . $A YES NO,C1ERR @F@@@[         TNZ   C8FDZ
)@@G@@LG          . $T IS THIS SECOND PASS FOR NAME   @F@@@[         SLJ   BLDEA
)@@G@@C8          . $W BLDC8 - ENTER OBJ REC IN C8    @E@@@[         LMJ   X11EB
)@@G@@,BLDC5      . $W BLDC5 - BUILD C5/C11     @D@@@[         L     X8,RTABADEC
)@@G@@      . $P SET PTR TO RDT     @E@@@[         L,T3  A0,1,X8        . $P SED
)@@G@@AVE OBJECT RECORD CODE  @A@@@[         LSSL  A0,24          .     @A@@@[EE
)@@G@@         SSL   A0,24          .     @A@@@[         S     A0,C1ORCD      EF
)@@G@@.     @G@@@[         L     A0,RTABAD      . $P SAVE OWNER, AUTO, MANUAL EG
)@@G@@LIST PTRS   @A@@@[         AU,T1 A0,4,X8        .     @A@@@[         S  EH
)@@G@@   A1,C1LPTR      .     @A@@@[         L,S1  A1,3,X8        .     @A@@@[EI
)@@G@@         S,S1  A1,C1LPTR      .     @A@@@[         AU,T2 A0,4,X8        EJ
)@@G@@.     @A@@@[         S     A1,C1LPTR+1    .     @A@@@[         L,S2  A1,EK
)@@G@@3,X8        .     @A@@@[         S,S1  A1,C1LPTR+1    .     @A@@@[      EL
)@@G@@   AU,T3 A0,4,X8        .     @A@@@[         S     A1,C1LPTR+2    .     EM
)@@G@@@A@@@[         L,S3  A1,3,X8        .     @A@@@[         S,S1  A1,C1LPTREN
)@@G@@+2    .     @E@@@[         SZ,S2 C1ORCD         . $P SET CHAIN-EMPTY FLAEO
)@@G@@G     @A@@@[         L,U   A0,0           .     @F@@@[         SLJ   C1LEP
)@@G@@IST         . $W C1LIST- PROCESS OWNER LIST     @A@@@[         L,U   A0,EQ
)@@G@@1           .     @E@@@[         SLJ   C1LIST         . $W C1LIST- PROCEER
)@@G@@SS AUTO LIST@A@@@[         L,U   A0,2           .     @F@@@[         SLJES
)@@G@@   C1LIST         . $W C1LIST- PROCESS MANUAL LIST    @E@@@[         TZ,ET
)@@G@@S2 C1ORCD         . $T WERE ALL LISTS EMPTY ?   @C@@@[         J     C1EEU
)@@G@@XIT         . $A YES NO,C1EXIT@A@@@[         L     A3,C1ORCD      .     EV
)@@G@@@A@@@[         LSSL  A3,24          .     @A@@@[         S     A3,C1SWRDEW
)@@G@@      .     @A@@@[         L,U   A1,4           .     @G@@@[         SLJEX
)@@G@@   C1STOR         . $W C1STOR - STORE OBJ REC W/ NO PTR INFO@A@@@[C1EXITEY
)@@G@@   L     A0,X7          .     @D@@@[         TNE   A0,NS$FLG      . $T AEZ
)@@G@@NOTHER SCHEMA ?   @C@@@[         J     C1EXT2         . $A YES NO,C1EXT2FA
)@@G@@@E@@@[         L,U   X7,1           . $P SET FOR SECOND SCHEMA    @A@@@[FB
)@@G@@         S     X7,SFIND       .     @C@@@[         J     C1STRT         FC
)@@G@@. $J C1STRT       @E@@@[C1EXT2   TZ    NS$FLG         . $T IS THERE ONLYFD
)@@G@@ ONE SCHEMA @G@@@[         LMJ   X11,ARTDEF     . $W ARTDEF - BUILD ART FE
)@@G@@RULES FOR RECD    @E@@@[         J     *RETURN        . $E RETURN TO MAIFF
)@@G@@N CONTROL   @[@@@[ .    @#@@@[ .   C1LIST -     @E@@@[ .        SCANS THFG
)@@G@@E SET-RELATION LISTS OF THE OBJ REC       @B@@@[ .             A0 INDICAFH
)@@G@@TES WHICH LIST -  @C@@@[ .                  0-OWNER, 1-AUTO, 2-MANUAL   FI
)@@G@@@[@@@[ .    @C@@@[C1LIST   +     0              . $H C1LIST       @D@@@[FJ
)@@G@@         TNZ,S1 C1LPTR,A0     . $T IS LIST EMPTY ?    @C@@@[         J  FK
)@@G@@   *C1LIST        . $A NO YES,C1LEND@A@@@[         L,U   A3,1           FL
)@@G@@.     @A@@@[         S,S2  A3,C1ORCD      .     @D@@@[         L,S1  A6,FM
)@@G@@C1LPTR,A0   . $P SET LIST LOOP CNT  @A@@@[         AN,U  A6,1           FN
)@@G@@.     @D@@@[         L,H2  X6,C1LPTR,A0   . $P SET INDEX TO LIST  @F@@@[FO
)@@G@@C1LLP    L,T3  A4,0,X6        . $P GET NEXT SET CODE FROM LIST    @A@@@[FP
)@@G@@         LSSL  A4,24          .     @A@@@[         SSL   A4,24          FQ
)@@G@@.     @G@@@[         SLJ   C1SET          . $W C1SET - SCAN SET FOR INVOFR
)@@G@@LVED RECS   @F@@@[         A,S1  X6,0,X6        . $P SET INDEX TO NEXT LFS
)@@G@@IST ENTRY   @E@@@[         JGD   A6,C1LLP       . $T MORE LIST ENTRIES ?FT
)@@G@@      @C@@@[                              . $A NO YES,C1LLP @D@@@[C1LENDFU
)@@G@@   J     *C1LIST        . $E RETURN TO BLDC1    @[@@@[ .    @]@@@[ .   CFV
)@@G@@1SET -@F@@@[ .        GETS AND SCANS THE SET TABLE TO GET REC AND PTR INFW
)@@G@@FO    @B@@@[ .             A4 CONTAINS THE SET CODE   @[@@@[ .    @B@@@[FX
)@@G@@C1SET    +     0              . $H C1SET  @C@@@[         S     A4,C1SCDEFY
)@@G@@      . $P SAVE SET CODE@A@@@[         SZ,S1 C1ORCD         .     @F@@@[FZ
)@@G@@         LMJ   X11,FSBCDE     . $W FSBCDE - GET SDT FROM SCHEMA   @A@@@[GA
)@@G@@         +     C1SCDE         .     @A@@@[STABAD*  +     0              GB
)@@G@@.     @A@@@[         +     SFIND          .     @A@@@[         +     $,(GC
)@@G@@'BLDC1')    .     @E@@@[         LMJ   X11,BLDC7      . $W BLDC7 - BUILDGD
)@@G@@ C7/C13     @A@@@[         L     X9,STABAD      .     @E@@@[         L  GE
)@@G@@   A0,2,X9        . $P GET OWNER RECORD WORD    @A@@@[         S     A0,GF
)@@G@@C1SWRD      .     @A@@@[         L,U   A1,0           .     @E@@@[      GG
)@@G@@   SLJ   C1STOR         . $W C1STOR - STORE RECORD PTR@E@@@[         L,SGH
)@@G@@3  X8,2,X9        . $P GET MEMBER RECORD COUNT  @A@@@[         AN,U  X8,GI
)@@G@@1           .     @E@@@[         A,U   X9,8           . $P INITIALIZE MEGJ
)@@G@@MBER PTR    @E@@@[C1SLP    L     A0,0,X9        . $P GET MEMBER RECORD WGK
)@@G@@ORD   @A@@@[         S     A0,C1SWRD      .     @A@@@[         L,U   A1,GL
)@@G@@1           .     @E@@@[         SLJ   C1STOR         . $W C1STOR - STORGM
)@@G@@E RECORD PTR@E@@@[         A,T3  X9,1,X9        . $P RESET PTR TO NEXT MGN
)@@G@@EMBER @E@@@[         JGD   X8,C1SLP       . $T ARE THERE MORE MEMBERS ? GO
)@@G@@@C@@@[                              . $A NO YES,C1SLP @G@@@[         TNZGP
)@@G@@,S1 C1ORCD        . $T WAS OBJECT RECORD ENCOUNTERED ?      @C@@@[      GQ
)@@G@@   J     C1ERRI         . $J C1ERRI       @D@@@[         J     *C1SET   GR
)@@G@@      . $E RETURN TO C1LIST   @[@@@[ .    @#@@@[ .   C1STOR -     @D@@@[GS
)@@G@@ .        BUILDS AND STORES POINTER ENTRY IN C1/C9    @C@@@[ .        A GT
)@@G@@RECORD ENTRY IS CREATED IF NEEDED   @D@@@[ .        A CHECK IS MADE FOR GU
)@@G@@DUPLICATE PTR ENTRIES   @E@@@[ .        A1 INDICATES OWNER (0) OR MEMBERGV
)@@G@@ (1) OF SET       @A@@@[ .        X8 AND X9 MUST BE SAVED   @[@@@[ .    GW
)@@G@@@C@@@[C1STOR   +     0              . $H C1STOR       @A@@@[         L  GX
)@@G@@   R5,X8          .     @A@@@[         L     R6,X9          .     @A@@@[GY
)@@G@@         L     R7,A1          .     @D@@@[         L     A0,C1SWRD      GZ
)@@G@@. $P GET RECORD CODE    @A@@@[         SSL   A0,24          .     @A@@@[HA
)@@G@@         S     A0,C1R2WD      .     @F@@@[         LMJ   X11,FRBCDE     HB
)@@G@@. $W FRBCDE - GET RDT FROM SCHEMA   @A@@@[         +     C1R2WD         HC
)@@G@@.     @A@@@[R2TBAD*  +     0              .     @A@@@[         +     SFIHD
)@@G@@ND          .     @A@@@[         +     $,('BLDC1')    .     @A@@@^      HE
)@@G@@   L     A0,R2TBAD      .     @F@@@^         L,S1  A0,1,A0        . $P GHF
)@@G@@ET LOCATION MODE OF RECORD    @D@@@^         SZ    R11            . $P RHG
)@@G@@ESET DIRECT FLAG  @F@@@^         TNE,U A0,1           . $T IS RECORD NOTHH
)@@G@@ DIRECT RECORD    @D@@@^         L,U   R11,1          . $P SET DIRECT FLHI
)@@G@@AG    @A@@@[         L     X8,R5          .     @A@@@[         L     X9,HJ
)@@G@@R6          .     @A@@@[         L     A1,R7          .     @D@@@[      HK
)@@G@@   L     A2,C1SWRD      . $P GET RECORD CODE    @E@@@[         L,H1  R1,HL
)@@G@@*CN,X7      . $P GET NUM OF C TAB ENTRIES @A@@@[         L     R2,(07777HM
)@@G@@00000000) . @F@@@[         L,U   A0,NUMOAP      . $P SET INDEX FOR SEARCHN
)@@G@@HING C TBL  @A@@@[         A,U   A0,39          .     @A@@@[         LSSHO
)@@G@@L  A0,18          .     @A@@@[         LXM,H2 A0,*CN,X7     .     @G@@@[HP
)@@G@@         MSE   A2,0,*A0       . $P SEARCH C TAB FOR EXISTING REC ENTRY  HQ
)@@G@@@E@@@[                              . $T WAS AN ENTRY FOUND ?     @E@@@[HR
)@@G@@         J     C1NEW          . $A NO,C1NEW YES,C1TYPE      @A@@@[      HS
)@@G@@   AN,U  A0,NUMOAP      .     @A@@@[         AN,U  A0,39          .     HT
)@@G@@@A@@@[         J     C1TYPE         .     @F@@@[C1NEW    L,H1  A12,*CN,XHU
)@@G@@7     . $P GET NUMBER OF ENTRIES IN TBL   @E@@@[         TG,U  A12,NUMREHV
)@@G@@C     . $T IS IT LESS THAN MAX NUM  @A@]@[         ER    ERR$           HW
)@@G@@. $E  @C@@@]         J     C1OFL          . $A YES NO,C1OFL @E@@@[      HX
)@@G@@   SSL   A2,24          . $P INITIALIZE NEW ENTRY     @A@^@[         LSSHY
)@@G@@L  A2,24          .     @A@@@^         LSSL  A2,3           .     @C@@@^HZ
)@@G@@         A     A2,R11         . DIRECT FLAG     @A@@@^         LSSL  A2,IA
)@@G@@21          .     @C@@@[         S     A2,0,A0        . RECORD CODE     IB
)@@G@@@A@@@[         L     A3,(0400000000000) . @A@@@[         A,U   A0,1     IC
)@@G@@      .     @E@@@[         S     A3,NUMOAP,A0   . MANUAL BLOCK HDR WORD ID
)@@G@@      @A@@@[         A,U   A0,1           .     @A@@@[         SZ    NUMIE
)@@G@@OAP,A0      . MASK@A@@@[         AN,U  A0,2           .     @A@@@[      IF
)@@G@@   L,U   A3,1           .     @F@@@[         A,H1  A3,*CN,X7      . INCRIG
)@@G@@EMENT NUM OF C TAB ENTRIES    @A@@@[         S,H1  A3,*CN,X7      .     IH
)@@G@@@G@@@[C1TYPE   L,T1  A2,C1SWRD      . $P DETERMINE IF RECORD IS OBJ, OWNII
)@@G@@,     @F@@@[         TNE,T3 A2,C1ORCD     . $  MEM, OR CO-MEM W-R-T OBJ IJ
)@@G@@REC   @F@@@[         J     C1OBJ          . JUMP IF THIS IS OBJECT RECORIK
)@@G@@D     @D@@@[         JZ    A1,C1OWN       . JUMP IF OWNER OF SET  @E@^@[IL
)@@G@@         L,S1  A2,C1ORCD      . RECORD IS MEMBER OF SET     @A@^@[      IM
)@@G@@   TE,U  A2,1           .     @G@^@[         J     $+3            . JUMPIN
)@@G@@ IF OBJ REC IS NOT OWNER OF SET     @D@@@[         L,U   A4,4           IO
)@@G@@. TYPE IS MEMBER (4)    @A@@@[         J     C1ENT          .     @E@^@[IP
)@@G@@         L,U   A4,010         . TYPE IS CO-MEMBER (8)       @A@^@[      IQ
)@@G@@   J     C1ENT          .     @D@@@[C1OWN    L,U   A4,2           . TYPEIR
)@@G@@ IS OWNER (2)     @A@@@[         J     C1ENT          .     @D@@@[C1OBJ IS
)@@G@@   L,U   A4,1           . TYPE IS OBJECT (1)    @G@@@[         L,U   A2,IT
)@@G@@1           . OBJECT FOUND IN THIS SET, MARK FOUND FLG@F@@@[         TZ IU
)@@G@@   A1             .    =1 IF OBJ IS OWNER OF SET,     @F@@@[         LSSIV
)@@G@@L  A2,1           .    =2 IF OBJ IS MEMBER OF SET     @A@@@[         S,SIW
)@@G@@1  A2,C1ORCD      .     @F@@@[C1ENT    OR,S3 A4,0,A0        . $P STORE RIX
)@@G@@TYPE IN C TAB ENTRY     @A@@@[         S,S3  A5,0,A0        .     @G@@@[IY
)@@G@@         TNE,U A1,4           . $T WAS C1STOR ENTERED FROM C1SET ?      IZ
)@@G@@@D@@@[         J     *C1STOR        . $E RETURN TO BLDC1    @E@@@[      JA
)@@G@@   TNE,U A1,0           . $T IS RECORD OWNER OF SET ? @C@@@[         J  JB
)@@G@@   C1STO          . $A NO YES,C1STO @A@@@[         L,U   A2,2           JC
)@@G@@.     @G@@@[         TG,S3 A2,C1SWRD      . $T IS RECORD AUTO MEMBER OF JD
)@@G@@SET ?       @C@@@[         J     C1STA          . $A NO YES,C1STA @A@@@[JE
)@@G@@         A,U   A0,1           .     @G@@@[         TZ,S2 NUMOAP,A0      JF
)@@G@@. $T HAS MANUAL TABLE BEEN CREATED ?      @C@@@[         J     C1MAN    JG
)@@G@@      . $A NO YES,C1MAN @A@@@[         A,U   A0,NUMOAP      .     @A@@@[JH
)@@G@@         S,H2  A0,SA0         .     @A@@@[         L     X5,R2TBAD      JI
)@@G@@.     @E@@@[         L,T1  A2,6,X5        . $P SAVE DISPLACEMENT OF MFCWJJ
)@@G@@@A@@@[         S,S6  A2,0,A0        .     @F@@@[         L,S3  A2,6,X5  JK
)@@G@@      . $P SAVE NUMBER OF PTRS RESERVED   @A@@@[         S,S5  A2,0,A0  JL
)@@G@@      .     @E@@@[         L,S3  A1,3,X5        . $P SAVE MANUAL MEMBER JM
)@@G@@COUNT @A@@@[         S,S2  A1,0,A0        .     @A@@@[         AN,U  A1,JN
)@@G@@1           .     @A@@@[         LXM   X4,SA0         .     @A@@@[      JO
)@@G@@   LXI,U X4,1           .     @A@@@[         A,T3  X5,4,X5        .     JP
)@@G@@@G@@@[C1MLP1   L     A4,0,X5        . $P BUILD C TAB ENTRY MAN MEM LIST JQ
)@@G@@      @A@@@[         SZ    A3             .     @D@@@[         LSSL  A4,JR
)@@G@@6           . FORMAT MANUAL WORD    @A@@@[         LDSL  A3,6           JS
)@@G@@.     @A@@@[         LSSL  A4,6           .     @A@@@[         LDSL  A3,JT
)@@G@@6           .     @A@@@[         LSSC  A4,18          .     @A@@@[      JU
)@@G@@   DSL   A3,1           .     @A@@@[         SSL   A4,2           .     JV
)@@G@@@A@@@[         DSL   A3,3           .     @A@@@[         SSL   A3,2     JW
)@@G@@      .     @A@@@[         SSC   A4,12          .     @A@@@[         DSLJX
)@@G@@   A3,12          .     @A@@@[         S     A4,2,*X4       .     @A@@@[JY
)@@G@@         A,S1  X5,0,X5        .     @A@@@[         JGD   A1,C1MLP1      JZ
)@@G@@.     @A@@@[         AN,U  A0,NUMOAP      .     @G@@@[C1MAN    L     A4,KA
)@@G@@(0400000000000) . $P SET UP PTRS FOR MAN LIST SEARCH  @A@@@[         A,UKB
)@@G@@   A0,NUMOAP      .     @A@@@[         S,H2  A0,SA0         .     @A@@@[KC
)@@G@@         LXI,U A0,1           .     @D@@@[         L,S2  A1,0,A0        KD
)@@G@@. $P GET MAN LIST CNT   @A@@@[         AN,U  A1,1           .     @G@@@[KE
)@@G@@C1MLP2   L,T2  A2,2,*A0       . $P SEARCH MAN LIST FOR OBJECT RECORD    KF
)@@G@@@A@@@[         LSSL  A2,24          .     @A@@@[         SSL   A2,24    KG
)@@G@@      .     @A@@@[         TNE   A2,C1SCDE      .     @A@@@[         J  KH
)@@G@@   C1MAN1         .     @G@@@[         SSL   A4,1           . $P SHIFT MKI
)@@G@@ASK BIT TO CORRESPOND TO SET  @A@@@[         JGD   A1,C1MLP2      .     KJ
)@@G@@@E@@@[         J     C1ERRI         . IF SET NOT FOUND, ERROR OFF @A@@@[KK
)@@G@@C1MAN1   L,H2  A0,SA0         .     @G@@@[         OR    A4,1,A0        KL
)@@G@@. $P OR MASK BIT INTO C TAB ENTRY MASK WRD@A@@@[         S     A5,1,A0  KM
)@@G@@      .     @D@@@[         J     *C1STOR        . $E RETURN TO C1SET    KN
)@@G@@@A@@@[C1STO    L     X5,R2TBAD      .     @E@@@[         L,S1  A3,3,X5  KO
)@@G@@      . $P GET OWNER COUNT IN RDT   @A@@@[         AN,U  A3,1           KP
)@@G@@.     @A@@@[         A,T1  X5,4,X5        .     @C@@@[         J     C1OKQ
)@@G@@ALP         . $J C1OALP       @A@@@[C1STA    L     X5,R2TBAD      .     KR
)@@G@@@F@@@[         L,S2  A3,3,X5        . $P GET AUTO MEMBER COUNT IN RDT   KS
)@@G@@@A@@@[         A,T2  X5,4,X5        .     @A@@@[         AN,U  A3,1     KT
)@@G@@      .     @E@@@[C1OALP   L,T3  A2,0,X5        . $P SEARCH RDT FOR SET KU
)@@G@@ENTRY @A@@@[         LSSL  A2,24          .     @A@@@[         SSL   A2,KV
)@@G@@24          .     @A@@@[         TNE   A2,C1SCDE      .     @A@@@[      KW
)@@G@@   J     C1STOA         .     @A@@@[         A,S1  X5,0,X5        .     KX
)@@G@@@A@@@[         JGD   A3,C1OALP      .     @E@@@[         J     C1ERRI   KY
)@@G@@      . IF SET NOT FOUND, ERROR OFF @G@@@[C1STOA   L     A3,0,X5        KZ
)@@G@@. $P SET UP POINTER DESCRIPTION ENTRY     @A@@@[         SZ    A2       LA
)@@G@@      .     @A@@@[         LSSL  A3,6           .     @A@@@[         LDSLB
)@@G@@L  A2,18          .     @A@@@[         LSSC  A3,18          .     @A@@@[LC
)@@G@@         DSL   A2,1           .     @A@@@[         SSL   A3,2           LD
)@@G@@.     @A@@@[         DSL   A2,3           .     @A@@@[         SSL   A2,LE
)@@G@@2           .     @A@@@[         LSSC  A3,1           .     @A@@@[      LF
)@@G@@   TNZ   A1             .     @A@@@[         A,U   A3,1           .     LG
)@@G@@@A@@@[         LSSC  A3,11          .     @A@@@[         DSL   A2,6     LH
)@@G@@      .     @A@@@[         SSC   A3,18          .     @A@@@[         DSLLI
)@@G@@   A2,12          .     @F@@@[         L,S4  R1,0,A0        . $P SEARCH LJ
)@@G@@PRESENT POINTER LIST    @A@@@[         LXM   X10,A0         .     @A@@@[LK
)@@G@@         LXI,U X10,1          .     @G@@@[         SE    A3,1,*X10      LL
)@@G@@. $T DOES NEW DESC MATCH AN OLD DESC ?    @C@@@[         J     C1SOA1   LM
)@@G@@      . $A YES NO,C1SOA1@D@@@[         J     *C1STOR        . $E RETURN LN
)@@G@@TO C1SET    @A@@@[C1SOA1   L,S4  A1,0,A0        .     @E@@@[         S  LO
)@@G@@   A3,1,X10       . $P STORE NEW PTR DESC       @A@@@[         A,U   A1,LP
)@@G@@1           .     @D@@@^         TG,U  A1,NUMOAP      . $T NUMOAP EXCEEDLQ
)@@G@@ED    @C@@@^         J     OAPOFL         . $A NO YES,OAPOFL@D@@@[      LR
)@@G@@   S,S4  A1,0,A0        . $P INCREMENT O/A CNT  @D@@@[         J     *C1LS
)@@G@@STOR        . $E RETURN TO C1SET    @[@@@[ .    @#@@@[ .   C1ERRI -     LT
)@@G@@@A@@@[ .        INTERNAL ERROR EXIT       @[@@@[ .    @C@@@[C1ERRI.     LU
)@@G@@                  . $H C1ERRI       @G@@@[         P$RINT (PF 1,6,C1ERIMLV
)@@G@@) . $P PRINT ERROR MESSAGE AND TERMINATE  @A@@@[         ER    ERR$     LW
)@@G@@      . $E  @[@@@[ .    @]@@@[ .   C1ERR -@B@@@[ .        HANDLES INVALILX
)@@G@@D NAME ERRORS     @[@@@[ .    @B@@@[C1ERR.                        . $H CLY
)@@G@@1ERR  @E@@@[         L     A1,SA1         . $P RESTORE RECORD NAME      LZ
)@@G@@@A@@@[         S     A1,*RNMPTR     .     @A@@@[         L,U   A0,' '   MA
)@@G@@      .     @A@@@[         S,S2  A0,EDPKT       .     @E@@@[         TZ MB
)@@G@@   NS$FLG         . $T ARE THERE TWO SCHEMAS ?  @C@@@[         J     C1EMC
)@@G@@R1          . $A NO YES,C1ER1 @D@@@[         E$DIT EDPKT          . $P FMD
)@@G@@ORMAT MESSAGE     @A@@@[         E$COPY 14,C1EM01     .     @A@@@[      ME
)@@G@@   L     A0,RNMPTR      .     @A@@@[         LMJ   X11,EMSG$      .     MF
)@@G@@@A@@@[         E$COPY 22,C3EM02     .     @A@@@[         E$DITX         MG
)@@G@@      .     @C@@@[         J     C3EREX         . $J C3EREX       @G@@@[MH
)@@G@@C1ER1    TZ    NFFLG          . $T WAS NAME NOT FOUND IN BOTH SCHEMAS ? MI
)@@G@@@C@@@[         J     C1ER2          . $A NO YES,C1ER2 @D@@@[         E$DMJ
)@@G@@IT EDPKT          . $P FORMAT MESSAGE     @A@@@[         E$COPY 16,C1EM1MK
)@@G@@1     .     @A@@@[         L     A0,RNMPTR      .     @A@@@[         LMJML
)@@G@@   X11,EMSG$      .     @A@@@[         E$COPY 16,C3EM12     .     @A@@@[MM
)@@G@@         L     A0,C3EM13,X7   .     @A@@@[         LMJ   X11,EFD1$      MN
)@@G@@.     @A@@@[         E$COPY 7,C3EM14      .     @A@@@[         E$DITX   MO
)@@G@@            .     @E@@@[         P$RINT (PF 1,14,PRINT) . $P PRINT WARNIMP
)@@G@@NG MESSAGE  @A@@@[         L,U   A0,1           .     @A@@@[         S  MQ
)@@G@@   A0,NFFLG       .     @C@@@[         J     C1EXIT         . $J C1EXIT MR
)@@G@@      @D@@@[C1ER2    E$DIT EDPKT          . $P FORMAT MESSAGE     @A@@@[MS
)@@G@@         E$COPY 14,C1EM01     .     @A@@@[         L     A0,RNMPTR      MT
)@@G@@.     @A@@@[         LMJ   X11,EMSG$      .     @A@@@[         E$COPY 29MU
)@@G@@,C3EM22     .     @A@@@[         E$DITX               .     @C@@@[      MV
)@@G@@   J     C3EREX         . $J C3EREX       @[@@@] .    @B@@@]C1OFL.      MW
)@@G@@                  . $H C1OFL  @E@@@]         P$RINT (PF 1,4,C1OM) . $P PMX
)@@G@@RINT OVERFLOW MESSAGE   @A@@@]         ER    ERR$           . $E  @[@@@^MY
)@@G@@ .    @C@@@^OAPOFL.                       . $H OAPOFL       @D@@@^      MZ
)@@G@@   L     A5,0,A0        . $P SAVE RECORD CODE   @A@ @^         LSSL  A5,NA
)@@G@@24          .     @A@@@          SSL   A5,24          .     @G@@@^      NB
)@@G@@   E$DIT EDPKT          . $P FORMAT & PRINT NUMOAP OFL MSG        @A@@@^NC
)@@G@@         E$COPY 14,OAPM1      .     @A@@@^         E$DECV A5            ND
)@@G@@.     @A@@@^         E$COPY 18,OAPM2      .     @A@@@^         L,U   A0,NE
)@@G@@NUMOAP      .     @A@@@^         LMJ   X11,EDECV$     .     @A@@@^      NF
)@@G@@   E$CHAR '!'           .     @A@@@^         E$DITX               .     NG
)@@G@@@A@@@^         P$RINT (PF 1,14,PRINT)  .  @A@@@^         ER    ERR$     NH
)@@G@@      . $E  @]@@@[ .          @]@@@[$(2).       @A@@@[SA0      +     0  NI
)@@G@@            .     @A@@@[SA1      +     0              .     @A@@@[C1ORCDNJ
)@@G@@   +     0              .     @A@@@[C1SWRD   +     0              .     NK
)@@G@@@A@@@[C1SCDE   +     0              .     @A@@@[C1R2WD   +     0        NL
)@@G@@      .     @A@@@[C1LPTR   RES   3              .     @A@@@[CN       +  NM
)@@G@@   C1             .     @A@@@[         +     C9             .     @A@@@[NN
)@@G@@C1EM01   'ERROR: RECORD '     .     @A@@@[C1EM11   'WARNING: RECORD '   NO
)@@G@@.     @E@@@[C1ERIM   'CONFIG INTERNAL SCHEMA TABLE ERROR  ' .           NP
)@@G@@@A@@@]C1OM     'C1/C9 TABLE OVERFLOW!' .  @A@@@^OAPM1    'ERROR: RECORD NQ
)@@G@@'     .     @A@@@^OAPM2    ' EXCEEDS NUMOAP = ' .     @]@@@[ .          NR
)@@G@@@A@@@[ .                  ** BLDC3 **     @]@@@[ .          @C@@@[ .    NS
)@@G@@    THIS ROUTINE BUILDS THE AREA TABLES   @E@@@[ .             C3 AND C1NT
)@@G@@0 FROM THE INPUT AREA NAMES         @]@@@[ .          @A@@@[ .        THNU
)@@G@@E ROUTINE CALL IS       @E@@@[ .             LX   X10,(NAME-LIST-INC,ARENV
)@@G@@A-NAME-LIST)      @A@@@[ .             LMJ  X11,BLDC3       @G@@@[ .    NW
)@@G@@              WHERE AREA-NAME-LIST IS ADDR OF NAME-LIST           @G@@@[NX
)@@G@@ .                       AND NAME-LIST-INC IS # OF WORDS/NAME           NY
)@@G@@@C@@@[ .                            IN LIST           @]@@@[ .          NZ
)@@G@@@E@@@[ .        A NAME WITH THE FIRST WORD ALL BLANKS WILL        @C@@@[OA
)@@G@@ .             SIGNAL THE END OF THE LIST       @]@@@[ .          @E@@@[OB
)@@G@@ .        IF AN INVALID NAME IS GIVEN, THE ROUTINE WILL     @C@@@[ .    OC
)@@G@@         PRODUCE WARNING MESSAGES         @]@@@[ .          @E@@@[ .    OD
)@@G@@    EACH ENTRY WILL BE PLACED IN THE TABLE SO THAT    @E@@@[ .          OE
)@@G@@   THE TABLE IS SORTED BY ASCENDING AREA CODE   @]@@@[ .          @^@@@[OF
)@@G@@$(2)     LIT.           @]@@@[$(1).       @]@@@[ .          @C@@@[BLDC3*OG
)@@G@@.                       . $H BLDC3        @E@@@[         S,H2  X11,RETUROH
)@@G@@N     . $P SAVE RETURN ADDR         @E@@@[         S     X10,SX10       OI
)@@G@@. $P SAVE NAME LIST PTR       @E@@@[         SZ    X7             . $P SOJ
)@@G@@ET FOR FIRST SCHEMA     @E@@@[C3INIT   TZ,H1 *CX,X7         . $T IS THISOK
)@@G@@ FIRST AREA ?     @C@@@[         J     C3RSET         . $A YES NO,C3RSETOL
)@@G@@@A@@@[         S     X7,SFIND       .     @G@@@[         LMJ   X11,FDSDTOM
)@@G@@      . $W INITIALIZE SCHEMA ACCESS METHOD      @A@@@[         +     SFION
)@@G@@ND          .     @A@@@[         +     $,('BLDC3')    .     @G@@@[      OO
)@@G@@   L     A0,*LADDR,X7   . $P SAVE STARTING ADDR OF C3/C10         @A@@@[OP
)@@G@@         A,U   A0,1           .     @A@@@[         S,H2  A0,*CX,X7      OQ
)@@G@@.     @A@@@[C3INT2   L     A0,X7          .     @E@@@[         TNE   A0,OR
)@@G@@NS$FLG      . $T ANOTHER SCHEMA ?         @C@@@[         J     C3OLD    OS
)@@G@@      . $A YES NO,C3OLD @E@@@[         L,U   X7,1           . $P SET FOROT
)@@G@@ SECOND SCHEMA    @C@@@[         J     C3INIT         . $J C3INIT       OU
)@@G@@@G@@@[C3RSET   L,H2  A0,*CX,X7      . $P GET FIRST WORD ADDR OF LAST TBLOV
)@@G@@ ENTRY@A@@@[         A,H1  A0,*CX,X7      .     @A@@@[         AN,U  A0,OW
)@@G@@9           .     @A@@@[         L,U   A1,9           .     @G@@@[      OX
)@@G@@   S,T3  A1,0,A0        . $P RESET LAST LINK FROM 0 TO 9          @C@@@[OY
)@@G@@         J     C3INT2         . $J C3INT2       @E@@@[C3OLD    SZ    X7 OZ
)@@G@@            . $P SET FOR FIRST SCHEMA     @A@@@[         SZ    SFIND    PA
)@@G@@      .     @E@@@[         SZ    NFFLG          . $P SET NOT-FOUND FLAG PB
)@@G@@TO 0  @A@@@[C3TEST   L     X10,SX10       .     @E@@@[         L     A0,PC
)@@G@@0,X10       . $P GET FIRST WORD OF NAME   @E@@@[         TNE   A0,BLNKS PD
)@@G@@      . $T IS IT BLANKS ?           @C@@@[         J     C3EXIT         PE
)@@G@@. $A NO YES,C3EXIT@E@@@[         S,H2  X10,ANMPTR     . $P STORE NAME PTPF
)@@G@@R IN CALL   @G@@@[         DL    A0,0,X10       . $P SAVE NAME IN CASE OPG
)@@G@@F ERROR           @A@@@[         DS    A0,ANAME       .     @G@@@[C3TST2PH
)@@G@@   LMJ   X11,FABNME     . $W GET AREA DESC TABLE FROM SCHEMA      @A@@@[PI
)@@G@@ANMPTR   +     0              .     @A@@@[         +     ADTBUF         PJ
)@@G@@.     @A@@@[         +     SFIND          .     @A@@@[         +     $,(PK
)@@G@@'BLDC3')    .     @E@@@[         TNZ   *ANMPTR        . $T WAS AREA NAMEPL
)@@G@@ VALID ?    @C@@@[         J     C3ERR          . $A YES NO,C3ERR @G@@@[PM
)@@G@@         L     A0,ADTBUF      . $P GET AND FORMAT AREA-CODE LINE        PN
)@@G@@@A@@@[         LSSC  A0,12          .     @A@@@[         LSSL  A0,12    PO
)@@G@@      .     @A@@@[         A,U   A0,9           .     @A@@@[         S  PP
)@@G@@   A0,C3BUF       .     @C@@@[         DL    A0,ADTBUF+4    . $P GET AREPQ
)@@G@@A NAME@A@@@[         DS    A0,C3BUF+1     .     @A@@@[         SZ    A0 PR
)@@G@@            .     @G@@@[         L     A1,ADTBUF+6    . $P GET AND FORMAPS
)@@G@@T PG-LENGTH LINE        @A@@@[         LDSL  A0,18          .     @A@@@[PT
)@@G@@         LSSL  A0,6           .     @G@@@[         A,S6  A0,ADTBUF+3    PU
)@@G@@. $P INSERT FILE TYPE INTO P-L LINE       @A@@@[         DSL   A0,18    PV
)@@G@@      .     @A@@@[         S     A1,C3BUF+3     .     @E@@@[         DL PW
)@@G@@   A0,ADTBUF+7    . $P GET PAGE ALLOCATION LINES@A@@@[         DS    A0,PX
)@@G@@C3BUF+4     .     @A@@@[         SZ    A0             .     @G@@@[      PY
)@@G@@   L     A1,ADTBUF+9    . $P GET AND FORMAT LOAD-FACTOR LINE      @A@@@[PZ
)@@G@@         LDSL  A0,12          .     @A@@@[         LSSL  A1,6           QA
)@@G@@.     @A@@@[         DSL   A0,18          .     @A@@@[         S     A1,QB
)@@G@@C3BUF+6     .     @E@@@[         L     A0,AREAP       . $P GET UNLOAD FLQC
)@@G@@AG          @E@@@[         S,S1  A0,C3BUF+8     . $P PUT IT IN TABLE ENTQD
)@@G@@RY    @G@@@[         L     A0,*LADDR,X7   . $P GET ADDR OF NEXT AVAIL COQE
)@@G@@RE WORD     @A@@@[         AU,U  A0,1           .     @A@@@[         LXIQF
)@@G@@,U A1,1           .     @A@@@[         A,U   A0,9           .     @A@@@[QG
)@@G@@         S     A0,*LADDR,X7   .     @E@@@[         ER    MCORE$         QH
)@@G@@. $W MCORE BUFFER SPACE       @C@@@[         L,T1  A2,C3BUF       . $P GQI
)@@G@@ET AREA CODE@G@@@[         L,H2  X9,*CX,X7      . $P SET UP PTRS FOR C TQJ
)@@G@@ABLE SEARCH       @A@@@[         LXI,U X9,9           .     @A@@@[      QK
)@@G@@   SZ    A4             .     @A@@@[         L,H1  A5,*CX,X7      .     QL
)@@G@@@G@@@[         DI,U  A4,9           . $P CONVERT WORD CNT TO ENTRY CNT  QM
)@@G@@      @A@@@[         L     R1,A4          .     @G@@@[         SG,T1 A2,QN
)@@G@@0,*X9       . $P SEARCH C TABLE FOR PLACEMENT OF ENTRY@G@@@[         J  QO
)@@G@@   C3AEND         . $P IF PLACE IS AT END, GO TO C3AEND     @G@@@[      QP
)@@G@@   L     A3,R1          . $P GET NUMBER OF WORDS FOR TRANSFER     @A@@@[QQ
)@@G@@         A,U   A3,1           .     @A@@@[         MSI,U A3,9           QR
)@@G@@.     @A@@@[         L     R1,A3          .     @E@@@[         LXI,U A0,QS
)@@G@@-1          . $P SET INDICES FOR TRANSFER @A@@@[         ANU,U A0,9     QT
)@@G@@      .     @G@@@[         BT    A0,0,*A1       . $P SHIFT C TABLE FOR SQU
)@@G@@PACE FOR NEW ENTRY@G@@@[         A,U   A1,1           . $P SET INDEX TO QV
)@@G@@INSERT NEW ENTRY        @A@@@[         LXI,U A1,1           .     @A@@@[QW
)@@G@@C3AEND   L     A0,(1,C3BUF)   .     @A@@@[         L,U   R1,9           QX
)@@G@@.     @G@@@[         BT    A1,0,*A0       . $P INSERT NEW ENTRY INTO C TQY
)@@G@@ABLE        @E@@@[         L,U   A0,9           . $P INCREMENT TABLE SIZQZ
)@@G@@E     @A@@@[         A,H1  A0,*CX,X7      .     @A@@@[         S,H1  A0,RA
)@@G@@*CX,X7      .     @A@@@[C3STST   L     A0,X7          .     @E@@@[      RB
)@@G@@   TE    A0,NS$FLG      . $T ANOTHER SCHEMA ?         @C@@@[         J  RC
)@@G@@   C3NEW          . $A NO YES,C3NEW @G@@@[         L,H2  A0,SX10        RD
)@@G@@. $P SET NAME LIST PTR TO NEXT NAME       @A@@@[         A,H1  A0,SX10  RE
)@@G@@      .     @A@@@[         S,H2  A0,SX10        .     @C@@@[         J  RF
)@@G@@   C3OLD          . $J C3OLD        @E@@@[C3NEW    L,U   X7,1           RG
)@@G@@. $P SET FOR SECOND SCHEMA    @A@@@[         S     X7,SFIND       .     RH
)@@G@@@C@@@[         J     C3TST2         . $J C3TST2       @E@@@[C3EXIT   SZ RI
)@@G@@   X7             . $P SET FOR PROPER SCHEMA    @G@@@[         TNZ,H1 *CRJ
)@@G@@X,X7        . $T ARE THERE ANY ENTRIES IN C TABLE ?   @C@@@[         J  RK
)@@G@@   C3EXT2         . $A YES NO,C3EXT2@E@@@[         L     A0,*LADDR,X7   RL
)@@G@@. $P SET LAST LINK TO ZERO    @A@@@[         AN,U  A0,8           .     RM
)@@G@@@A@@@[         SZ,T3 0,A0           .     @A@@@[C3EXT2   L     A0,X7    RN
)@@G@@      .     @E@@@[         TNE   A0,NS$FLG      . $T ANOTHER SCHEMA ?   RO
)@@G@@      @A@@@[         J     *RETURN        . $E  @A@@@[         L,U   X7,RP
)@@G@@1           .     @C@@@[         J     C3EXIT+1       . $J C3EXIT       RQ
)@@G@@@]@@@[ .          @E@@@[C3ERR    TZ    NS$FLG         . $T ARE THERE TWORR
)@@G@@ SCHEMAS ?  @C@@@[         J     C3ER1          . $A NO YES,C3ER1 @E@@@[RS
)@@G@@         E$DIT EDPKT          . $P FORMAT MESSAGE           @A@@@[      RT
)@@G@@   E$COPY 12,C3EM01     .     @A@@@[         DL    A0,ANAME       .     RU
)@@G@@@A@@@[         LMJ   X11,EFD2$      .     @A@@@[         E$COPY 22,C3EM0RV
)@@G@@2     .     @A@@@[         E$DITX               .     @C@@@[         J  RW
)@@G@@   C3EREX         . $J C3EREX       @G@@@[C3ER1    TZ    NFFLG          RX
)@@G@@. $T WAS NAME NOT FOUND IN BOTH SCHEMAS ? @C@@@[         J     C3ER2    RY
)@@G@@      . $A NO YES,C3ER2 @E@@@[         E$DIT EDPKT          . $P FORMAT RZ
)@@G@@MESSAGE           @A@@@[         E$COPY 14,C3EM11     .     @A@@@[      SA
)@@G@@   DL    A0,ANAME       .     @A@@@[         LMJ   X11,EFD2$      .     SB
)@@G@@@A@@@[         E$COPY 16,C3EM12     .     @A@@@[         L     A0,C3EM13SC
)@@G@@,X7   .     @A@@@[         LMJ   X11,EFD1$      .     @A@@@[         E$CSD
)@@G@@OPY 7,C3EM14      .     @A@@@[         E$DITX                .    @E@@@[SE
)@@G@@         P$RINT (PF 1,14,PRINT) . $P PRINT WARNING MESSAGE  @A@@@[      SF
)@@G@@   L     X10,SX10       .     @E@@@[         DL    A0,ANAME       . $P RSG
)@@G@@ESTORE AREA NAME        @A@@@[         DS    A0,0,X10       .     @A@@@[SH
)@@G@@         L,U   A0,1           .     @A@@@[         S     A0,NFFLG       SI
)@@G@@.     @C@@@[         J     C3STST         . $J C3STST       @E@@@[C3ER2 SJ
)@@G@@   E$DIT EDPKT          . $P FORMAT MESSAGE           @A@@@[         E$CSK
)@@G@@OPY 12,C3EM01     .     @A@@@[         DL    A0,ANAME       .     @A@@@[SL
)@@G@@         LMJ   X11,EFD2$      .     @A@@@[         E$COPY 29,C3EM22     SM
)@@G@@.     @A@@@[         E$DITX               .     @E@@@[C3EREX   P$RINT (PSN
)@@G@@F 1,14,PRINT) . $P PRINT ERROR MESSAGE    @G@@@[         P$RINT (PF 1,8,SO
)@@G@@TERMSG) . $P PRINT TERMINATION MESSAGE          @A@@@[         ER    EXISP
)@@G@@T$          . $E  @]@@@[ .          @]@@@[$(2).       @A@@@[RETURN   +  SQ
)@@G@@   0              .     @A@@@[SX10     +     0              .     @A@@@[SR
)@@G@@SFIND    +     0              .     @A@@@[NFFLG    +     0              SS
)@@G@@.     @A@@@[LADDR    +     LAST$I         .     @A@@@[         +     LASST
)@@G@@T$D         .     @A@@@[CX       +     C3             .     @A@@@[      SU
)@@G@@   +     C10            .     @A@@@[ANAME    RES   2              .     SV
)@@G@@@A@@@[BLNKS    '      '             .     @A@@@[ADTBUF   RES   10       SW
)@@G@@      .     @A@@@[C3BUF    RES   7              .     @A@@@[         +  SX
)@@G@@   0              .     @A@@@[         +     0              .     @A@@@[SY
)@@G@@C3EM01   'ERROR: AREA '       .     @A@@@[C3EM02   ' NOT DEFINED IN SCHESZ
)@@G@@MA' . @A@@@[C3EM11   'WARNING: AREA '     .     @A@@@[C3EM12   ' NOT DEFTA
)@@G@@INED IN '   .     @A@@@[C3EM13   'FIRST'              .     @A@@@[      TB
)@@G@@   'SECOND'             .     @A@@@[C3EM14   ' SCHEMA'            .     TC
)@@G@@@C@@@[C3EM22   ' NOT DEFINED IN EITHER SCHEMA' .      @G@@@[TERMSG   'RETD
)@@G@@ORGANIZATION TERMINATED DUE TO NAME ERROR.    ' .           @]@@@[ .    TE
)@@G@@      @A@@@[ .                  ** CTINIT **    @]@@@[ .          @E@@@[TF
)@@G@@ .        THIS ROUTINE REQUESTS BUFFER SPACE FOR ALL        @E@@@[ .    TG
)@@G@@         OF THE OBJECT RECORD TABLE BUILDING FUNCTIONS@]@@@[ .          TH
)@@G@@@G@@@[ .        IT FIRST REQUESTS SPACE FOR C1, C5, AND C7 IN THE I-BANKTI
)@@G@@,     @C@@@[ .             FOR C9, C11, C12 IN THE D-BANK   @G@@@[ .    TJ
)@@G@@    THEN READS IN THE SCHEMA REF TABLES INTO THE D-BANK           @G@@@[TK
)@@G@@ .        THEN ALLOCATES BUFFER SPACE FOR RECORD TBLS AND SET TBL       TL
)@@G@@@]@@@[ .          @^@@@[$(2)     LIT.           @]@@@[$(1).       @C@@@[TM
)@@G@@CTINIT   +     0              . $H CTINIT       @E@@@[         SZ    X7 TN
)@@G@@            . $P SET FOR FIRST SCHEMA     @E@@@[CTLP1    L     A0,*LADDRTO
)@@G@@,X7   . $P GET NEXT AVAIL CORE ADDR @A@@@[         A,U   A0,1           TP
)@@G@@.     @E@@@[         S     A0,*CN,X7      . $P GET C1/C9 BLOCK          TQ
)@@G@@@A@@@[         A,U   A0,C1SIZE      .     @E@@@[         S     A0,*CN5,XTR
)@@G@@7     . $P GET C5/C11 BLOCK         @A@@@[         A,U   A0,C5SIZE      TS
)@@G@@.     @E@@@]         S     A0,*CN6,X7     . $P GET C6/C12 BLOCK         TT
)@@G@@@A@@@]         A,U   A0,C6SIZE      .     @E@@@[         S     A0,*CN7,XTU
)@@G@@7     . $P GET C7/C13 BLOCK         @A@@@[         A,U   A0,C7SIZE      TV
)@@G@@.     @C@]@[         S     A0,C8          . $P GET C8 BLOCK @C@@@]      TW
)@@G@@   S     A0,*CN8,X7     . $P GET C8 BLOCK @G@@@]         TZ    X7       TX
)@@G@@      . $T IS THIS 1ST SCHEMA, I-BANK MCORE     @C@@@]         J     CTITY
)@@G@@NT1         . $A YES NO,CTINT1@A@@@[         A,U   A0,C8SIZE      .     TZ
)@@G@@@E@@@]         L,U   A1,FRSTD$      . $P GET FIRST D-BANK ADDR    @G@@@]UA
)@@G@@         TLE   A1,A0          . $T IS THERE ENOUGH I-BANK FOR MCORE     UB
)@@G@@@C@@@]         J     BNKERR         . $A YES NO,BNKERR@A@]@[         AN,UC
)@@G@@U  A0,1           .     @A@@@]CTINT1   AN,U  A0,1           .     @E@@@[UD
)@@G@@         S     A0,*LADDR,X7   . $P NOTE LAST ADDR           @E@@@[      UE
)@@G@@   ER    MCORE$         . $P MCORE BUFFER SPACE       @A@@@[         L  UF
)@@G@@   A0,X7          .     @E@@@[         TNE   A0,NS$FLG      . $T ANOTHERUG
)@@G@@ SCHEMA ?         @C@@@[         J     CTINT2         . $A YES NO,CTINT2UH
)@@G@@@E@@@[         L,U   X7,1           . $P SET FOR SECOND SCHEMA    @C@@@[UI
)@@G@@         J     CTLP1          . $J CTLP1        @A@@@[CTINT2   SZ    SFIUJ
)@@G@@ND          .     @G@@@[         LMJ   X11,FDSDT      . $W FDSDT - GET FUK
)@@G@@IRST SCHEMA REF TBL     @A@@@[         +     SFIND          .     @A@@@[UL
)@@G@@         +     $,('CTINIT')   .     @E@@@[         TNZ   NS$FLG         UM
)@@G@@. $T IS THERE SECOND SCHEMA ? @C@@@[         J     CTINT3         . $A YUN
)@@G@@ES NO,CTINT3@A@@@[         L,U   A0,1           .     @A@@@[         S  UO
)@@G@@   A0,SFIND       .     @G@@@[         LMJ   X11,FDSDT      . $W FDSDT -UP
)@@G@@ GET SECOND SCHEMA REF TBL    @A@@@[         +     SFIND          .     UQ
)@@G@@@A@@@[         +     $,('CTINIT')   .     @G@@@[CTINT3   SZ    A1       UR
)@@G@@      . $P SET TO SCAN FIRST SCHEMA MAXTBL SIZES@A@@@[         SZ    A2 US
)@@G@@            .     @A@@@[         SZ    X7             .     @C@@@[CTLP2 UT
)@@G@@   L     A0,MAXRDT,X7   . $P GET MAXRDT   @A@@@[         TLE   A1,A0    UU
)@@G@@      .     @A@@@[         L     A1,A0          .     @C@@@[         L  UV
)@@G@@   A0,MAXSDT,X7   . $P GET MAXSDT   @A@@@[         TLE   A2,A0          UW
)@@G@@.     @A@@@[         L     A2,A0          .     @A@@@[         L     A0,UX
)@@G@@X7          .     @E@@@[         TNE   A0,NS$FLG      . $T IS THERE SECOUY
)@@G@@ND SCHEMA ? @C@@@[         J     CTINT4         . $A YES NO,CTINT4@E@@@[UZ
)@@G@@         L,U   X7,1           . $P SET TO SECOND SCHEMA     @C@@@[      VA
)@@G@@   J     CTLP2          . $J CTLP2        @E@@@[CTINT4   L     A0,LAST$DVB
)@@G@@      . $P GET NEXT AVAIL CORE ADDR @A@@@[         A,U   A0,1           VC
)@@G@@.     @E@@@[         S     A0,RTABAD      . $P GET OBJ REC TABLE BLOCK  VD
)@@G@@@A@@@[         A     A0,A1          .     @E@@@[         S     A0,R2TBADVE
)@@G@@      . $P GET AUX REC TABLE BLOCK  @A@@@[         A     A0,A1          VF
)@@G@@.     @E@@@[         S     A0,STABAD      . $P GET SET TABLE BLOCK      VG
)@@G@@@A@@@[         A     A0,A2          .     @E@@@[         S     A0,LAST$DVH
)@@G@@      . $P NOTE LAST ADDR           @E@@@[         ER    MCORE$         VI
)@@G@@. $P MCORE BUFFER SPACE       @G@@@[         LMJ   X11,BLDC6      . $W BVJ
)@@G@@LDC6 - BUILD CALC REC TABLE         @E@@@[         L,U   A0,28          VK
)@@G@@. $P INITIALIZE LOC C8        @A@@@[         S,H1  A0,C8          .     VL
)@@G@@@G@@@[         L,U   A0,1           . $P SET FLAG SINCE BUFFERS GOTTEN  VM
)@@G@@      @A@@@[         S     A0,BUFFLG      .     @E@@@[         J     *CTVN
)@@G@@INIT        . $E RETURN TO BLDC1          @]@@@] .          @C@@@]BNKERRVO
)@@G@@.                       . $H BNKERR       @G@@@]         AN    A0,A1    VP
)@@G@@      . $P PRINT NOT ENOUGH I-BANK ERROR MSG    @A@@@]         L     A5,VQ
)@@G@@A0          .     @A@@@]         E$DIT EDPKT          .     @A@@@]      VR
)@@G@@   E$COPY 7,BEM1        .     @A@@@]         E$OCTV A5            .     VS
)@@G@@@A@@@]         E$COPY 26,BEM2       .     @A@@@]         E$DITX         VT
)@@G@@      .     @A@@@]         P$RINT (PF 1,14,PRINT) .   @A@@@]         ER VU
)@@G@@   ERR$           . $E  @]@@@[ .          @]@@@[$(2).       @A@@@[BUFFLGVV
)@@G@@   +     0              .     @A@@@]BEM1     'ERROR: '            .     VW
)@@G@@@C@@@]BEM2     ' WORDS MORE I-BANK NEEDED.' .         @]@@@[ .          VX
)@@G@@@A@@@[ .                  ** BLDC8 **     @]@@@[ .          @E@@@[ .    VY
)@@G@@    THIS ROUTINE STORES THE OBJECT RECORD NAME AND    @G@@@[ .          VZ
)@@G@@   CODE IN C8, AND ASSIGNS THE RECORD AN INTERNAL           @A@@@[ .    WA
)@@G@@         SEQUENCE NUMBER      @]@@@[ .          @^@@@[$(2)     LIT.     WB
)@@G@@      @]@@@[$(1).       @C@@@[BLDC8    +     0              . $H BLDC8  WC
)@@G@@      @A@@@[         L,U   A0,1           .     @A@@@[         S     A0,WD
)@@G@@C8FLG       .     @G@@@[         L,H1  A0,C8          . $P SET INDEX FORWE
)@@G@@ NEXT C8 ENTRY          @A@@@[         A,H2  A0,C8          .     @E@@@[WF
)@@G@@         L     X8,RTABAD      . $P SET PTR TO RDT           @E@@@[      WG
)@@G@@   L,T3  A1,1,X8        . $P GET RECORD CODE          @A@@@[         S,TWH
)@@G@@1  A1,0,A0        .     @E@@@[         DL    A1,7,X8        . $P GET RECWI
)@@G@@ORD NAME          @A@@@[         DS    A1,1,A0        .     @A@@@[      WJ
)@@G@@   DL    A1,9,X8        .     @A@@@[         DS    A1,3,A0        .     WK
)@@G@@@A@@@[         L     A1,11,X8       .     @A@@@[         S     A1,5,A0  WL
)@@G@@      .     @E@@@[         L,H1  A2,C8          . $P INCREMENT C8 SIZE  WM
)@@G@@      @A@@@[         A,U   A2,6           .     @A@@@[         S,H1  A2,WN
)@@G@@C8          .     @A@@@[         AN,U  A2,28          .     @A@@@[      WO
)@@G@@   SZ    A1             .     @C@@@[         DI,U  A1,6           . $P GWP
)@@G@@ET SEQ-NUM  @A@@@[         S,T2  A1,0,A0        .     @E@@@[         S  WQ
)@@G@@   A1,C8SEQN      . $P SAVE IT FOR BLDSYM       @E@@@[         SZ,T3 0,AWR
)@@G@@0           . $P SET LINK THIS ENTRY      @E@@@[         TLE,U A1,2     WS
)@@G@@      . $T IS THIS FIRST OBJ REC ?  @E@@@[         J     *BLDC8         WT
)@@G@@. $E RETURN TO BLDC1          @E@@@[         AN,U  A0,6           . $P SWU
)@@G@@ET LINK IN PRIOR ENTRY  @A@@@[         L,U   A1,6           .     @A@@@[WV
)@@G@@         S,T3  A1,0,A0        .     @E@@@[         J     *BLDC8         WW
)@@G@@. $E RETURN TO BLDC1          @]@@@[ .          @]@@@[$(2).       @A@@@[WX
)@@G@@C8FLG    +     0              .     @A@@@[C8SEQN*  +     0              WY
)@@G@@.     @A@#@]CN8      +     C8             .     @A@@@#CN8*     +     C8 WZ
)@@G@@            .     @A@@@]         +     C8D            .     @A@@@]C8D*  XA
)@@G@@   +     0              .     @^@@@[         END  .         ___         XB
)@@G@@. $P MCORE BUFFER SPACE       @A@@@[         L     A0,X7          .     XC
)@@G@@*[@@@@*SDFF*@]@@@@.           @C@@@@.                 ****    UNLOAD    XD
)@@G@@****        @]@@@@.           @]@@@@.    INPUTS:@E@@@@.              X9 XE
)@@G@@ - LOCATION OF CURRENT SLOT WORD          @C@@@@.              X10 - LOCXF
)@@G@@ATION OF CURRENT RECORD @A@@@@.              X11 - RETURN ADDRESS @C@@@@XG
)@@G@@.              A0  - ADDRESS OF CURRENT PAGE    @A@@@@.              A1 XH
)@@G@@ - AREA CODE      @A@@@@.              A2  - PAGE NUMBER    @E@@@@.     XI
)@@G@@         A3  - NUMBER OF SLOTS SCANNED THIS PAGE      @]@@@@.           XJ
)@@G@@@]@@@@ AXR$       @]@@@@$(1).       @]@@@@UNL*.       @E@@@@          S XK
)@@G@@        X8,UNSAVX8        . $  SAVE MINOR SET   @C@@@@          S       XL
)@@G@@  X9,UNSAVX9        .         @C@@@@          S         X10,UNSAVX10    XM
)@@G@@  .         @C@@@@          S         X11,UNSAVX11      .         @C@@@@XN
)@@G@@          DS        A0,UNSAVA0        .         @C@@@@          DS      XO
)@@G@@  A2,UNSAVA2        .         @C@@@@          DS        A4,UNSAVA4      XP
)@@G@@  .         @G@@@@          L,H1      A4,6,A0           . $  NUMBER OF CXQ
)@@G@@ALC CHAINS AT END @G@@@@          A         A3,A4             . $  NUMBEXR
)@@G@@R OF SLOT THIS RECORD   @E@@@@          SLJ       APS$DBP           . $ XS
)@@G@@ CONSTRUCT A DBP  @G@@@@UNL0      S         A0,UNKPKT+3       . $  STOREXT
)@@G@@ DBP IN KEY FILE PKT    @G@@@@          S         A0,UNDPKT         . $ XU
)@@G@@ STORE DBP IN DFILE PKT       @I@@@@          S         X10,UNDPKT+1    XV
)@@G@@  . $  STORE LOC OF RECORD IN DFILE PKT         @]@@@@UNL03.      @G@@@@XW
)@@G@@          TNE       A1,UNDFPKT+3      . $  SKIP IF NOT THE SAME AREA    XX
)@@G@@@G@@@@          J         UNL05             . $ SAME AREA AS BEFORE     XY
)@@G@@      @G@@@@          S         A1,UNDFPKT+3      . $  STORE AREA CODE IXZ
)@@G@@N PKT       @E@@@@          L         X10,C3            . ADDRESS OF C3 YA
)@@G@@TABLE @E@@@@UNL04     L         A4,,X10           . WORD WITH AREA CODE YB
)@@G@@@G@@@@          SSL       A4,24             . RIGHT JUSTIFY AREA CODE   YC
)@@G@@      @G@@@@          TNE       A4,A1             . SKIP IF NOT THE SAMEYD
)@@G@@ AREA CODE  @G@@@@          J         UNL045            . FOUND THE ENTRYE
)@@G@@Y IN C3           @E@@@@          TNZ,T3    0,X10             . SKIP IF YF
)@@G@@MORE ENTRIES@E@@@@          ER        ERR$              . NOT FOUND     YG
)@@G@@      @G@@@@          A,T3      X10,,X10          . ADDRESS OF NEXT ENTRYH
)@@G@@Y           @C@@@@          J         UNL04             . CONTINUE@]@@@@YI
)@@G@@UNL045.     @E@@@@          L,S1      A4,8,X10          . PATCH ONLY FLAYJ
)@@G@@G     @C@@@@          S         A4,UNOFF          . STORE IT@E@@@@      YK
)@@G@@    L,U       X10,UNDFPKT       . $ PACKET ADDRESS    @E@@@@          LMYL
)@@G@@J       X11,DF$AMW        . $  WRITE AREA ENTRY @]@@@@UNL05.      @E@@@@YM
)@@G@@          L         X9,UNSAVX9        . RESTORE X9          @E@@@@      YN
)@@G@@    L         A0,UNSAVA0        . RESTORE A0          @E@@@@          TZYO
)@@G@@        UNOFF             . SKIP IF UNLOADING   @G@@@@          J       YP
)@@G@@  UNL07             . NOT UNLOADING FROM THIS AREA    @G@@@@          TZYQ
)@@G@@        SCDIRECT          . SKIP IF NOT A DIRECT RECD       @E@@@@      YR
)@@G@@    J         UNDIRECT          . RECORD IS DIRECT    @]@@@@UNL06.      YS
)@@G@@@G@@@@          L,U       X10,UNDPKT        . $  ADDRESS OF DFILE PKT   YT
)@@G@@      @G@@@@          LMJ       X11,DF$AMW        . $  STORE ENTRY IN DFYU
)@@G@@ILE         @E@@@@          L         A1,R15            . LINE NUMBER   YV
)@@G@@      @A@@@@          AN,U A1,1 . LESS 1        @C@@@@          SZ      YW
)@@G@@  A0                . ZERO    @E@@@@          DI,U      A0,INDBLK       YX
)@@G@@  . BLK NUMBER          @G@@@@          S         A0,UNKPKT+4       . STYY
)@@G@@ORE IN KFILE PACKET           @G@@@@          L,U       X10,UNKPKT      YZ
)@@G@@  . $  ADDRESS OF PACKET FOR KFILE  @G@@@@          LMJ       X11,KF$AMCZA
)@@G@@        . $  STORE IT IN KEY FILE         @E@@@@          L         X11,ZB
)@@G@@UNCOUNT       . $ RECORDS UNLOADED  @E@@@@          A,U       X11,1     ZC
)@@G@@        . $ INCREMENT IT      @E@@@@          S         X11,UNCOUNT     ZD
)@@G@@  . $ STORE IT BACK     @]@@@@UNL07.      @E@@@@          L         X8,UZE
)@@G@@NSAVX8        . $  RESTORE REGISTERS@C@@@@          L         X9,UNSAVX9ZF
)@@G@@        .         @C@@@@          L         X10,UNSAVX10      .         ZG
)@@G@@@C@@@@          L         X11,UNSAVX11      .         @C@@@@          DLZH
)@@G@@        A0,UNSAVA0        .         @C@@@@          DL        A2,UNSAVA2ZI
)@@G@@        .         @C@@@@          DL        A4,UNSAVA4        .         ZJ
)@@G@@@E@@@@          J         0,X11             . $  RETURN           @]@@@@ZK
)@@G@@.           @C@@@@. FLUSH BUFFERS OF KEY FILE AND DATA FILE       @]@@@@ZL
)@@G@@.           @]@@@@UNLF*.      @E@@@@          S         X11,UNSAVX11    ZM
)@@G@@  . $  SAVE X11         @I@@@@          L,U       X10,UNKPKT        . $ ZN
)@@G@@ ADDRESS OF PACKET FOR KFILE AM           @G@@@@          LMJ       X11,ZO
)@@G@@KF$AMF        . $  FLUSH KFILE BUFFERS          @G@@@@          LMJ     ZP
)@@G@@  X11,DF$AMF        . $  FLUSH DATA FILE BUFFER       @C@@@@          E$ZQ
)@@G@@DIT     UNEPKT            .         @C@@@@          E$DECV    UNCOUNT   ZR
)@@G@@        .         @C@@@@          E$COPY    17,UNMSG1         .         ZS
)@@G@@@^@@@@          E$DITX    .   @C@@@@          L         A0,UNMSG        ZT
)@@G@@  . ACW     @E@@@@          ER        PRINT$            . PRINT UNLOAD CZU
)@@G@@OUNTS @E@@@@          L         X11,UNSAVX11      . $  RESTORE          ZV
)@@G@@@C@@@@          J         0,X11             . $ RETURN@]@@@@.           ZW
)@@G@@@G@@@@. ENTRY POINT FOR FOREIGN PAGE.  A DBP IS IN A0 AND THE RECORD    ZX
)@@G@@      @C@@@@. LOCATION IS IN A1.  AREA CODE IS IN A2.       @]@@@@.     ZY
)@@G@@      @]@@@@UNL1*.      @E@@@@          S         X8,UNSAVX8        . $ ZZ
)@@G@@ SAVE MINOR SET   @C@@@@          S         X9,UNSAVX9        .         AA
)@@G@@@C@@@@          S         X10,UNSAVX10      .         @C@@@@          S AB
)@@G@@        X11,UNSAVX11      .         @C@@@@          DS        A0,UNSAVA0AC
)@@G@@        .         @C@@@@          DS        A2,UNSAVA2        .         AD
)@@G@@@C@@@@          DS        A4,UNSAVA4        .         @G@@@@          S AE
)@@G@@        A0,UNKPKT+3       . $  STORE KEY IN KFILE PKT       @G@@@@      AF
)@@G@@    S         A1,UNDPKT+1       . $  STORE RECORD LOC IN DFILE PKT@G@@@@AG
)@@G@@          S         A0,UNDPKT         . $  STORE KEY IN DFILE PKT       AH
)@@G@@@E@@@@          L         A1,A2             . $  AREA CODE        @E@@@@AI
)@@G@@          J         UNL03             . $  CONTINUE         @]@@@@.     AJ
)@@G@@      @^@@@@. ENTRY FOR SCAN VIA SET@]@@@@.           @]@@@@UNLS*.      AK
)@@G@@@E@@@@          S         X8,UNSAVX8        . $  SAVE MINOR SET   @C@@@@AL
)@@G@@          S         X9,UNSAVX9        .         @C@@@@          S       AM
)@@G@@  X10,UNSAVX10      .         @C@@@@          S         X11,UNSAVX11    AN
)@@G@@  .         @C@@@@          DS        A0,UNSAVA0        .         @C@@@@AO
)@@G@@          DS        A2,UNSAVA2        .         @C@@@@          DS      AP
)@@G@@  A4,UNSAVA4        .         @E@@@@          L         A0,STDBP,X8     AQ
)@@G@@  . $ GET DBP           @E@@@@          J         UNL0              . $ AR
)@@G@@CONTINUE          @]@@@@UNDIRECT.   @C@@@@          L,S1      A4,,X9    AS
)@@G@@        . DESC    @C@@@@          AND,U     A4,020            .         AT
)@@G@@@E@@@@          TZ        A5                . SKIP IF NOT FOREIGN @G@@@@AU
)@@G@@          J         UNDIRFOR          . FOREIGN DIRECT RECORD           AV
)@@G@@@E@@@@          L,H2      A4,1,A0           . PAGE NUMBER         @G@@@@AW
)@@G@@          S,H1      A4,UNDIRPKT+3     . STORE IN DFILE PACKET           AX
)@@G@@@]@@@@UNDIR1.     @E@@@@          L         A4,,X9            . SLOT WORAY
)@@G@@D           @E@@@@          LSSL      A4,6              . SHIFT OFF DESCAZ
)@@G@@      @E@@@@          SSL       A4,24             . RECORD NUMBER       BA
)@@G@@@E@@@@          S,H2      A4,UNDIRPKT+3     . STORE IN PACKET     @E@@@@BB
)@@G@@          L,U       X10,UNDIRPKT      . PKT ADDRESS         @G@@@@      BC
)@@G@@    LMJ       X11,DF$AMW        . WRITE DIRECT CONTROL IN D$FILE'S@C@@@@BD
)@@G@@          J         UNL06             . CONTINUE@]@@@@UNDIRFOR.   @E@@@@BE
)@@G@@          SLJ       DBP$APS           . DECOMPOSE DBP       @G@@@@      BF
)@@G@@    S,H1      A2,UNDIRPKT+3     . STORE IN DFILE PACKET           @C@@@@BG
)@@G@@          J         UNDIR1            . CONTINUE@]@@@@$(0).       @#@[@@BH
)@@G@@IBSIZE EQU 28     @]@[@@IFILL EQU 90@C@[@@FREE EQU ((((IBSIZE*(100-IFILLBI
)@@G@@)+99)/100)+1)/2)*2@ @[@@INDBLK EQU (IBSIZE-2-FREE)/2  @^@@@@UNDIRPKT  + BJ
)@@G@@        0   @^@@@@          +         $+1 @A@@@@          +         4,0,BK
)@@G@@2           @^@@@@          +         0   @G@@@@UNDFPKT   +         0   BL
)@@G@@              . PACKET FOR DFILE AREA ENTRY     @^@@@@          +       BM
)@@G@@  $+1 @A@@@@          +         1,0,2           @^@@@@          +       BN
)@@G@@  0   @G@@@@KF$WKS    EQU       40                . SIZE OF WORKSPACE FOBO
)@@G@@R KF$AM     @E@@@@UNKPKT    +         0                 .  PACKET FOR KFBP
)@@G@@ILE   @^@@@@          +         0   @^@@@@          +         0   @C@@@@BQ
)@@G@@          +         0                 . OLD DBP @^@@@@          +       BR
)@@G@@  0   @^@@@@          +         0   @A@@@@          RES       KF$WKS    BS
)@@G@@      @E@@@@UNDPKT    +         0                 . OLD DBP FOR DFILE   BT
)@@G@@@E@@@@          +         0                 . ADDRESS OF RECORD   @I@@@@BU
)@@G@@UNOFF     +         0                 . PATCH ONLY IF 1   ELSE UNLOAD IFBV
)@@G@@ 0          @E@@@@UNCOUNT   +         0                 . RECORDS UNLOADBW
)@@G@@ED    @A@@@@UNEPKT    E$PKT     5,UNMSG+1       @A@@@@UNMSG     +       BX
)@@G@@  0105,$+1        @^@@@@          RES       5   @A@@@@UNMSG1    ' RECORDBY
)@@G@@S UNLOADED'       @^@@@@UNSAVX8   +         0   @^@@@@UNSAVX9   +       BZ
)@@G@@  0   @^@@@@UNSAVX10  +         0   @^@@@@UNSAVX11  +         0   @^@@@@CA
)@@G@@UNSAVA0   RES       2   @^@@@@UNSAVA2   RES       2   @^@@@@UNSAVA4   RECB
)@@G@@S       2   @^@@@@          END           ___VX9        .         @C@@@@CC
)@@G@@          L         X10,UNSAVX10      .         *[@@@@*SDFF*@[@@@@ .    CD
)@@G@@@A@@@@ .                  ** CF$AM **     @[@@@@ .    @C@@@@ .        THCE
)@@G@@IS ROUTINE PROVIDES THE I/O NEEDED  @A@@@@ .             FOR THE C-FILE CF
)@@G@@      @[@@@@ .    @A@@@@ .        THE ROUTINE CALL IS       @A@@@@ .    CG
)@@G@@         LX,U   X10,PARAM     @A@@@@ .             LMJ    X11,CF$AM     CH
)@@G@@@E@@@@ .                  WHERE PARAM IS A LOCATION CONTAINING THE@A@@@@CI
)@@G@@ .                       FOLLOWING -@C@@@@ .                  S1 - C-FILCJ
)@@G@@E SEGMENT NO      @B@@@@ .                  S2 - FUNCTION CODE    @A@@@@CK
)@@G@@ .                       010 - WRITE@F@@@@ .                       011 -CL
)@@G@@ FOR C1/C9 - WRITE AFTER PACKING    @A@@@@ .                       020 -CM
)@@G@@ READ @[@@@@ .    @E@@@@ .        THE CORE LOCATIONS CN ARE THE FILE LOCCN
)@@G@@ATION       @C@@@@ .             POINTERS FOR THE REORG SYSTEM    @D@@@@CO
)@@G@@ .             H1  CONTAINS WORD LENGTH OF SEGMENT    @C@@@@ .          CP
)@@G@@   H2  CONTAINS CORE ADDR OF SEGMENT@[@@@@ .    @C@@@@ .        THE WRITCQ
)@@G@@E TAKES INFO FROM LOC PTRS CN @C@@@@ .             THE HEADER C0 IS ALWACR
)@@G@@YS WRITTEN  @[@@@@ .    @E@@@@ .        THE READ CHECKS IF SEGMENT IS ALCS
)@@G@@READY IN CORE -   @D@@@@ .             IF NOT IT MCORE'S SPACE AND READSCT
)@@G@@ -    @C@@@@ .             THE LOC PTRS CN ARE UPDATED      @[@@@@ .    CU
)@@G@@@A@@@@ .                  ** CF$AM **     @[@@@@ .    @A@@@@PF       FORCV
)@@G@@M  12,6,18        .     @E@@@@ .                                     (NOCW
)@@G@@T INCLUDING C0)   @#@@@@         AXR$.    @#@@@@$(8)     LIT.     @]@@@@CX
)@@G@@$(7).       @[@@@@ .    @B@@@@CF$AM*.                       . $H CF$AM  CY
)@@G@@@A@@@@         S,H2  X11,RETURN     .     @D@@@@         L,S1  A2,0,X10 CZ
)@@G@@      . $P GET WHICH SEGMENT  @C@@@@         L,S2  A3,0,X10       . $P GDA
)@@G@@ET FUNCTION @E@@@@         TLE,U A2,1           . $T IS SEGMENT # WITHINDB
)@@G@@ RANGE@A@@@@         J     SEGERR         .     @A@[@@         TG,U  A2,DC
)@@G@@19          .     @A@@@[         TG,U  A2,21          .     @C@@@@      DD
)@@G@@   J     SEGERR         . $A YES NO,SEGERR@F@@@@         L,U   X8,PGMSW DE
)@@G@@      . $P CHOOSE WHICH BANK FOR READ     @A@@@@         TNE,U A2,14    DF
)@@G@@      .     @A@@@@         L,U   X8,1           .     @E@@@@         TZ DG
)@@G@@   STATUS         . $T IS HEADER IN CORE ?      @C@@@@         J     GO DH
)@@G@@            . $A NO YES,GO    @A@@@@         L     A0,(4,ASGA)    .     DI
)@@G@@@C@@@@         ER    CSF$           . $W @ASG,AX      @D@@@@         JP DJ
)@@G@@   A0,RESET       . $T ASG REJECTED ?     @C@@@@ .                      DK
)@@G@@      . $A YES NO,RESET @E@@@@         TNE,U A3,020         . $T IS A WRDL
)@@G@@ITE REQUESTED ?   @C@@@@         J     *RETURN        . $E RETURN       DM
)@@G@@@A@@@@         L     A0,(5,ASGU)    .     @C@@@@         ER    CSF$     DN
)@@G@@      . $W @ASG,UP      @A@@@@         JN    A0,UERR        .     @]@@@@DO
)@@G@@RESET.      @A@@@@         L,U   A0,1           .     @E@@@@         S  DP
)@@G@@   A0,STATUS      . $P SET HEADER-IN-CORE FLAG  @E@@@@GO       TE,U  A3,DQ
)@@G@@020         . $T IS FUNCTION WRITE ?      @C@@@@         J     WRT      DR
)@@G@@      . $A NO,RD YES,WRT@E@@@@RD       L     A1,ELTNME,A2   . $P GET PRODS
)@@G@@PER ELEMENT NAME  @A@@@@         S     A1,PFPPKT+2    .     @D@@@@      DT
)@@G@@   L     A4,A2          . $P SAVE SEGMENT #     @E@@@@         L,U   A0,DU
)@@G@@6           . $P SET FOR ABSOLUTE ELEMENT @A@@@@         S,H1  A0,PFPPKTDV
)@@G@@+5    .     @A@@@@         L,U   A0,PFPPKT      .     @F@@@@         ER DW
)@@G@@   PFS$           . $P GET ELEMENT TABLE FROM PFP     @D@@@@         TNEDX
)@@G@@,U A2,1           . $T WAS ELEMENT FOUND  @C@@@@         J     RDB      DY
)@@G@@      . $A YES NO,RDB   @E@@@@         TZ    A2             . $T WAS THEDZ
)@@G@@RE PFP ERROR      @C@@@@         J     PFPERR         . $A NO YES,PFPERREA
)@@G@@@D@@@@         L     A2,A4          . $P RESTORE SEGMENT #  @E@@@@      EB
)@@G@@   TZ,T1 PFPPKT+5       . $T HAS ELEMENT BEEN DELETED @C@@@@         J  EC
)@@G@@   RDB            . $A NO YES,RDB   @F@@@@         L     A1,PFPPKT+10   ED
)@@G@@. $P GET SECTOR DISP OF ELEMENT     @A@@@@         S     A1,DISP        EE
)@@G@@.     @C@@@@         L     A1,PFPPKT+8    . $P GET PTR WORD @A@@@@      EF
)@@G@@   S     A1,PTRS        .     @A@@@@         L     A0,*LADDR,X8   .     EG
)@@G@@@A@@@@         AU,U  A0,1           .     @G@@@@         S,H2  A1,PTRS  EH
)@@G@@      . $P DETERMINE FIRST AND LAST ADDR OF BUFF@A@@@@         A,H1  A0,EI
)@@G@@PTRS        .     @A@@@@         S     A0,*LADDR,X8   .     @D@@@@      EJ
)@@G@@   ER    MCORE$         . $W GET CORE FOR BUFF  @D@@@@RDA      L     A0,EK
)@@G@@PTRS        . $P SET UP I/O PACKET  @A@@@@         L     A1,DISP        EL
)@@G@@.     @A@@@@         DS    A0,PKET+4      .     @A@@@@         L,U   A0,EM
)@@G@@020         .     @A@@@@         S,S2  A0,PKET+3      .     @E@@@@      EN
)@@G@@   L,H1  A0,PTRS        . $T IS WORD COUNT ZERO       @C@@@@         JZ EO
)@@G@@   A0,RDB         . $A NO YES,RDB   @D@@@@         I$OW  PKET           EP
)@@G@@. $W DO READ - IOW$     @E@@@@         SLJ   CHECK          . $W CHECK FEQ
)@@G@@OR I/O ERROR      @A@@@@         J     $+2            .     @A@@@@RDB   ER
)@@G@@   SZ    PTRS           .     @A@@@@         L     A1,PTRS        .     ES
)@@G@@@E@@@@         EX    STORE,A2       . $P NOTE CORE LOCATION IN CN @C@@@@ET
)@@G@@         J     *RETURN        . $E RETURN       @[@@@@ .    @C@@@@WRT   EU
)@@G@@   TNE,U A2,1           . $T IS SEGMENT C1@C@@@@         J     PACK     EV
)@@G@@      . $A NO YES,PACK  @C@@@@         TNE,U A2,9           . $T IS SEGMEW
)@@G@@ENT C9@C@@@@         J     PACK1          . $A NO YES,PACK1 @D@@@@WRTEX EX
)@@G@@   TE,U  A3,010         . $T IS THIS WRITE FNC  @C@@@@         J     FNCEY
)@@G@@ERR         . $A YES NO,FNCERR@A@@@@         EX    LOAD,A2        .     EZ
)@@G@@@E@@@@         S     A1,PTRS        . $P GET LOC INFO FROM CN     @D@@@@FA
)@@G@@         L     A4,A2          . $P SAVE SEGMENT #     @A@@@@         L,UFB
)@@G@@   A0,PFPPKT      .     @F@@@@         ER    PFWL$          . $P GET NEXFC
)@@G@@T WRITE LOC OF FILE     @E@@@@         JNZ   A2,PFPERR      . $T WAS THEFD
)@@G@@RE PFP ERROR      @C@@@@                              . $A NO YES,PFPERRFE
)@@G@@@D@@@@         L     A2,A4          . $P RESTORE SEGMENT #  @D@@@@WRTA  FF
)@@G@@   L     A0,PTRS        . $P SET UP I/O PACKET  @D@@@@         S     A1,FG
)@@G@@DISP        . $P SAVE FILE DISP     @A@@@@         DS    A0,PKET+4      FH
)@@G@@.     @A@@@@         L,U   A0,010         .     @A@@@@         S,S2  A0,FI
)@@G@@PKET+3      .     @E@@@@         L,H1  A0,PTRS        . $T IS WORD COUNTFJ
)@@G@@ ZERO       @C@@@@         JZ    A0,WRTB        . $A NO YES,WRTB  @D@@@@FK
)@@G@@         I$OW  PKET           . $W DO WRITE - IOW$    @E@@@@         SLJFL
)@@G@@   CHECK          . $W CHECK FOR I/O ERROR      @D@@@@WRTB     L     A0,FM
)@@G@@PTRS        . $P SAVE PRT IN FILE   @A@@@@         S     A0,PFPPKT+8    FN
)@@G@@.     @F@@@@         DSL   A0,54          . $P GET SECTOR LENGTH OF ELEMFO
)@@G@@ENT   @A@@@@         DI,U  A0,28          .     @A@@@@         TZ    A1 FP
)@@G@@            .     @A@@@@         A,U   A0,1           .     @E@@@@      FQ
)@@G@@   S     A0,PFPPKT+9    . $P SAVE IT IN PFP PKT       @F@@@@         L,UFR
)@@G@@   A1,6           . $P SET TYPE OF ELT TO ABSOLUTE    @A@@@@         S,HFS
)@@G@@1  A1,PFPPKT+5    .     @D@@@@         L     A1,ELTNME,A2   . $P SET ELEFT
)@@G@@MENT NAME   @A@@@@         S     A1,PFPPKT+2    .     @G@@@@         SZ FU
)@@G@@   PFPPKT+11      . $P ZERO WRD SO TIME/DATE WILL BE SET    @E@@@@      FV
)@@G@@   L     A1,DISP        . $P GET DISP WITHIN FILE     @A@@@@         S  FW
)@@G@@   A1,PFPPKT+10   .     @F@@@@         A     A1,A0          . $P UPDATE FX
)@@G@@LAST WRITE LOC OF FILE  @A@@@@         LN,U  A0,PFPPKT      .     @F@@@@FY
)@@G@@         ER    PFI$           . $P ADD ELEMENT TO FILE DIRECTORY  @E@@@@FZ
)@@G@@         JNZ   A2,PFPERR      . $T WAS THERE PFP ERROR      @C@@@@      GA
)@@G@@                        . $A NO YES,PFPERR@A@@@@         J     *RETURN  GB
)@@G@@      . $E  @[@@@@ .    @C@@@@ .   PACK - CALL PACKC1 TO PACK SEGMENT C1GC
)@@G@@/C9   @[@@@@ .    @D@@@@PACK     TE,U  A3,011         . $T IS PACK REQUEGD
)@@G@@STED  @C@@@@         J     WRTEX          . $A YES NO,WRTEX @D@@@@      GE
)@@G@@   S     A2,SAVE        . $P SAVE SEGMENT #     @E@@@@         L,U   A1,GF
)@@G@@6           . $P SET TO DELETE ABS ELEMENT@A@@@@         S,H1  A1,PFPPKTGG
)@@G@@+5    .     @E@@@@         SZ    A1             . $P INITIALIZE LOOP COUGH
)@@G@@NTER  @E@@@@PACK0    A,U   A1,1           . $P ADD 1 TO ELEMENT PTR     GI
)@@G@@@E@@@@         L     A0,ELTNME,A1   . $P GET NEXT ELEMENT NAME    @A@@@@GJ
)@@G@@         S     A0,PFPPKT+2    .     @A@@@@         L,U   A0,PFPPKT      GK
)@@G@@.     @D@@@@         ER    PFD$           . $P DELETE ELEMENT     @E@@@@GL
)@@G@@         TG,U  A2,2           . $T WAS THERE A PFP ERROR    @C@@@@      GM
)@@G@@   J     PFPERR         . $A NO YES,PFPERR@E@[@@         TLE,U A1,18    GN
)@@G@@      . $T MORE C-TABLES TO DELETE  @E@@@[         TLE,U A1,20          GO
)@@G@@. $T MORE C-TABLES TO DELETE  @C@@@@         J     PACK0          . $A NGP
)@@G@@O YES,PACK0 @D@@@@         L     A2,SAVE        . $P RESTORE SEGMENT #  GQ
)@@G@@@B@@@@         J     PACK2          . $J PACK2  @D@@@@PACK1    TE,U  A3,GR
)@@G@@011         . $T IS PACK REQUESTED  @C@@@@         J     WRTEX          GS
)@@G@@. $A YES NO,WRTEX @C@@@@PACK2    SZ    X8             . $P SET FOR C1   GT
)@@G@@@C@@@@         TNE,U A2,9           . $T IS SEGMENT C1@C@@@@         L,UGU
)@@G@@   X8,1           . $P RESET FOR C9 @D@@@@         DS    A2,SAVE        GV
)@@G@@. $P SAVE REGISTERS     @C@@@@         SLJ   PACKC1         . $W PACK C1GW
)@@G@@      @D@@@@         DL    A2,SAVE        . $P RESTORE REGISTERS  @E@@@@GX
)@@G@@         L,U   A3,010         . $P RESET FNC TO WRITE       @B@@@@      GY
)@@G@@   J     WRTEX          . $J WRTEX  @[@@@@ .    @ @@@@ .    CHECK FOR I/GZ
)@@G@@O ERROR     @[@@@@ .    @B@@@@CHECK    +     0              . $H CHECK  HA
)@@G@@@A@@@@         L,U   X10,PKET       .     @D@@@@         TZ,S1 PKET+3   HB
)@@G@@      . $T IS STATUS ZERO ?   @C@@@@         LMJ   X11,IOERR      . $A YHC
)@@G@@ES NO,IOERR @A@@@@         L,H2  A0,PKET+3      .     @G@@@@         TE,HD
)@@G@@H1 A0,PTRS        . $T WERE CORRECT # WORDS TRANSFERRED ?   @C@@@@      HE
)@@G@@   LMJ   X11,IOERR      . $A YES NO,IOERR @A@@@@         J     *CHECK   HF
)@@G@@      . $E  @[@@@@ .    @A@@@@ .    INSTR TO GET LOC INFO FROM CN @[@@@@HG
)@@G@@ .    @A@@@@LOAD     SZ    A1             .     @A@@@@         L     A1,HH
)@@G@@C1          .     @A@@@@         L     A1,C2          .     @A@@@@      HI
)@@G@@   L     A1,C3          .     @A@@@@         L     A1,C4          .     HJ
)@@G@@@A@@@@         L     A1,C5          .     @A@@@@         L     A1,C6    HK
)@@G@@      .     @A@@@@         L     A1,C7          .     @A@@@@         L  HL
)@@G@@   A1,C8          .     @A@@@@         L     A1,C9          .     @A@@@@HM
)@@G@@         L     A1,C10         .     @A@@@@         L     A1,C11         HN
)@@G@@.     @A@@@@         L     A1,C12         .     @A@@@@         L     A1,HO
)@@G@@C13         .     @A@@@@         L     A1,C14         .     @A@@@@      HP
)@@G@@   L     A1,C15         .     @A@@@@         L     A1,C16         .     HQ
)@@G@@@A@@@@         L     A1,C17         .     @A@@@@         L     A1,C18   HR
)@@G@@      .     @A@@@[         L     A1,Z1          .     @A@@@[         L  HS
)@@G@@   A1,Z2          .     @[@@@@ .    @A@@@@ .    INSTR TO PUT LOC INFO INHT
)@@G@@TO CN @[@@@@ .    @A@@@@STORE    NOP                  .     @A@@@@      HU
)@@G@@   S     A1,C1          .     @A@@@@         S     A1,C2          .     HV
)@@G@@@A@@@@         S     A1,C3          .     @A@@@@         S     A1,C4    HW
)@@G@@      .     @A@@@@         S     A1,C5          .     @A@@@@         S  HX
)@@G@@   A1,C6          .     @A@@@@         S     A1,C7          .     @A@@@@HY
)@@G@@         S     A1,C8          .     @A@@@@         S     A1,C9          HZ
)@@G@@.     @A@@@@         S     A1,C10         .     @A@@@@         S     A1,IA
)@@G@@C11         .     @A@@@@         S     A1,C12         .     @A@@@@      IB
)@@G@@   S     A1,C13         .     @A@@@@         S     A1,C14         .     IC
)@@G@@@A@@@@         S     A1,C15         .     @A@@@@         S     A1,C16   ID
)@@G@@      .     @A@@@@         S     A1,C17         .     @A@@@@         S  IE
)@@G@@   A1,C18         .     @A@@@[         S     A1,Z1          .     @A@@@[IF
)@@G@@         S     A1,Z2          .     @[@@@@ .    @^@@@@ .    ASSIGN ERRORIG
)@@G@@S     @[@@@@ .    @A@@@@UERR     L,U   X10,ASGU       .     @A@@@@      IH
)@@G@@   LMJ   X11,ASGERR     .     @A@@@@SEGERR   P$RINT (PF 1,9,SEM)  .     II
)@@G@@@A@@@@         ER    ERR$           . $E  @A@@@@PFPERR   P$RINT (PF 1,8,IJ
)@@G@@PEM) .      @B@@@@         L$SNAP  'PFPPKT',2,12,PFPPKT  .  @A@@@@      IK
)@@G@@   ER    ERR$           . $E  @A@@@@FNCERR   P$RINT (PF 1,9,FEM)  .     IL
)@@G@@@A@@@@         ER    ERR$           . $E  @[@@@@ .    @]@@@@$(8).       IM
)@@G@@@A@@@@SAVE     RES   2              .     @A@@@@STATUS   +     0        IN
)@@G@@      .     @A@@@@PTRS     +     0              .     @A@@@@DISP     +  IO
)@@G@@   0              .     @A@@@@ELTNME   'XXXXXX'             .     @#@@@@IP
)@@G@@         'C1'  .  @#@@@@         'C2'  .  @#@@@@         'C3'  .  @#@@@@IQ
)@@G@@         'C4'  .  @#@@@@         'C5'  .  @#@@@@         'C6'  .  @#@@@@IR
)@@G@@         'C7'  .  @#@@@@         'C8'  .  @#@@@@         'C9'  .  @#@@@@IS
)@@G@@         'C10' .  @#@@@@         'C11' .  @#@@@@         'C12' .  @#@@@@IT
)@@G@@         'C13' .  @#@@@@         'C14' .  @#@@@@         'C15' .  @#@@@@IU
)@@G@@         'C16' .  @#@@@@         'C17' .  @#@@@@         'C18' .  @#@@@[IV
)@@G@@         'Z1'  .  @#@@@[         'Z2'  .  @A@@@@PFPPKT   'C$FILE      ' IW
)@@G@@      .     @A@@@@         '            '       .     @A@@@@         +  IX
)@@G@@   0              .     @A@@@@         +     0              .     @A@@@@IY
)@@G@@         '            '       .     @A@@@@         DO 4 ,   +    0      IZ
)@@G@@ .    @A@@@@PKET     'C$FILE      '       .     @A@@@@         DO 4  ,  JA
)@@G@@  +    0    .     @A@@@@ASGA     '@ASG,AX  C$FILE. . ' .    @B@@@@ASGU  JB
)@@G@@   '@ASG,UP  C$FILE.,///300 . ' .   @G@@@@SEM      '*** ERROR - INVALID JC
)@@G@@SEGMENT NUMBER PASSED TO CF$AM ***' .     @E@@@@PEM      '*** ERROR - C$JD
)@@G@@FILE IS NOT A PROGRAM FILE ***' .   @G@@@@FEM      '*** ERROR - INVALID JE
)@@G@@FUNCTION CODE PASSED TO CF$AM ***' .      @A@@@@RETURN   +     0        JF
)@@G@@      .     @A@@@@LADDR    +     LAST$I         .     @A@@@@         +  JG
)@@G@@   LAST$D         .     @#@@@@         END   .  ___   @D@@@@         ER JH
)@@G@@   PFD$           . $P D*[@@@@*SDFF*@^@@@@          AXR$.         @^@@@@JI
)@@G@@$(6)      LIT.          @]@@@@$(5).       @C@@@@CHKPT*    +         0   JJ
)@@G@@              .         @C@@@@          DS        A0,SAV1           .   JK
)@@G@@      @A@@@@         L,S2  A1,3,X10       .     @A@@@@         TE,U  A1,JL
)@@G@@011         .     @A@@@@         J     RDBLK          .     @A@@@@      JM
)@@G@@   L     A0,PCNT        .     @A@@@@         A     A0,A8          .     JN
)@@G@@@A@@@@         S     A0,PCNT        .     @A@@@@         L     A0,WCNT  JO
)@@G@@      .     @A@@@@         A,H1  A0,7,X10       .     @A@@@@         S  JP
)@@G@@   A0,WCNT        .     @A@@@@         J     OUT            .     @A@@@@JQ
)@@G@@RDBLK    L     A0,PHRCNT      .     @A@@@@         A,H1  A0,7,X10       JR
)@@G@@.     @A@@@@         S     A0,PHRCNT      .     @]@@@@OUT.        @C@@@@JS
)@@G@@          DL        A0,SAV1           .         @C@@@@          J       JT
)@@G@@  *CHKPT            .         @A@@@@CHKPT2*  +     0              .     JU
)@@G@@@A@@@@         E$DIT EDPKT          .     @A@@@@         E$DECV         JV
)@@G@@    PHRCNT .@C@@@@         E$COPY               11,RMSG .         @A@@@@JW
)@@G@@         E$DECV               WCNT .@C@@@@         E$COPY               JX
)@@G@@14,WMSG .         @A@@@@         E$DECV               PCNT .@C@@@@      JY
)@@G@@   E$COPY               14,TMSG .         @A@@@@         E$DITX         JZ
)@@G@@       .    @C@@@@         P$RINT               (PF 1,12,PRINT)  .@A@@@@KA
)@@G@@         J     *CHKPT2        .     @]@@@@ .          @C@@@@ .        ZEKB
)@@G@@RO DBP WARNING MESSAGE ROUTINE      @]@@@@ .          @C@@@@ZPWARN*  +  KC
)@@G@@   0              . $H ZPWARN       @E@@@@         DS    A0,SAV1        KD
)@@G@@. $P SAVE REGISTERS           @A@@@@         DS    A2,SAV2        .     KE
)@@G@@@G@@@]         L,U   A2,ZWRNCNT     . $P GET MAX # WARNINGS BEFORE SUPPRKF
)@@G@@ESS   @A@@@]         A,U   A2,1           .     @A@@@@         L     A1,KG
)@@G@@R13         .     @G@@@@         L,S1  A0,0,A1        . $P GET ZERO PTR KH
)@@G@@CNT FROM C1 ENTRY       @C@]@@         TG,U  A0,11          . $T IS CNT KI
)@@G@@> 10  @D@@@]         TG    A0,A2          . $T IS CNT > ZWRNCNT   @C@@@@KJ
)@@G@@         J     ZPOUT          . $A NO YES,ZPOUT @C@@@@         A,U   A0,KK
)@@G@@1           . $P INCREMENT CNT@A@@@@         S,S1  A0,0,A1        .     KL
)@@G@@@E@]@@         TG,U  A0,11          . $T IS THIS 11TH ZERO PTR    @G@@@]KM
)@@G@@         TG    A0,A2          . $T IS THIS (ZWRNCNT+1)ST ZERO PTR       KN
)@@G@@@C@@@@         J     ZPMAX          . $A NO YES,ZPMAX @E@@@@         E$DKO
)@@G@@IT EDPKT          . $P PRINT WARNING LINE       @A@]@@         E$COPY 25KP
)@@G@@,ZPM1       .     @A@@@]         E$COPY 32,ZPM1       .     @C@@@@      KQ
)@@G@@   L,T1  A0,1,X8        . AREA CODE       @A@@@@         LSSL  A0,24    KR
)@@G@@      .     @A@@@@         SSL   A0,24          .     @A@@@@         LMJKS
)@@G@@   X11,EDECV$     .     @A@@@@         E$COPY 4,ZPM2        .     @C@@@@KT
)@@G@@         L,H2  A0,1,X8        . PAGE NUM        @A@@@@         LMJ   X11KU
)@@G@@,EDECV$     .     @A@@@@         E$COPY 5,ZPM3        .     @C@@@@      KV
)@@G@@   L     A1,R3          . ABS SLOT ADDR   @A@@@@         LSSL  A1,18    KW
)@@G@@      .     @A@@@@         SSL   A1,18          .     @A@@@@         A,UKX
)@@G@@   A1,1           .     @C@@@@         AN    A1,X8          . REL SLOT AKY
)@@G@@DDR   @C@@@@         L,H1  A0,2,X8        . PAGE SIZE       @C@@@@      KZ
)@@G@@   AN    A0,A1          . SLOT NUM        @A@@@@         LMJ   X11,EDECVLA
)@@G@@$     .     @A@@@@         E$COPY 8,ZPM4        .     @C@@@@         L  LB
)@@G@@   A0,R15         . REC CODE        @A@@@@         LMJ   X11,EDECV$     LC
)@@G@@.     @A@@@@         E$COPY 8,ZPM5        .     @C@@@@         L     A0,LD
)@@G@@R14         . SET CODE        @A@@@@         LSSL  A0,24          .     LE
)@@G@@@A@@@@         SSL   A0,24          .     @A@@@@         LMJ   X11,EDECVLF
)@@G@@$     .     @A@@@@         E$CHAR '.'           .     @A@@@@         E$DLG
)@@G@@ITX               .     @A@@@@         P$RINT (PF 1,12,PRINT) .   @C@@@@LH
)@@G@@         J     ZPOUT          . $J ZPOUT        @E@@@@ZPMAX    E$DIT EDPLI
)@@G@@KT          . $P PRINT SUPPRESS MESSAGE   @A@]@@         E$COPY 40,ZPM6 LJ
)@@G@@      .     @A@@@]         E$COPY 44,ZPM6       .     @A@@@@         L  LK
)@@G@@   A0,R15         .     @A@@@@         LMJ   X11,EDECV$     .     @A@@@@LL
)@@G@@         E$COPY 9,ZPM7        .     @A@@@@         L     A0,R14         LM
)@@G@@.     @A@@@@         LSSL  A0,24          .     @A@@@@         SSL   A0,LN
)@@G@@24          .     @A@@@@         LMJ   X11,EDECV$     .     @A@@@@      LO
)@@G@@   E$CHAR '.'           .     @A@@@@         E$DITX               .     LP
)@@G@@@A@@@@         P$RINT (PF 1,12,PRINT) .   @E@@@@ZPOUT    DL    A0,SAV1  LQ
)@@G@@      . $P RESTORE REGISTERS        @A@@@@         DL    A2,SAV2        LR
)@@G@@.     @A@@@@         J     *ZPWARN        . $E  @]@@@[ .          @C@@@[LS
)@@G@@ .        UNKNOWN AREA WARNING MESSAGE ROUTINE  @]@@@[ .          @C@@@[LT
)@@G@@BDWARN*  +     0              . $H BDWARN       @E@@@[         DS    A0,LU
)@@G@@SAV3        . $P SAVE REGISTERS TO BE USED@A@@@[         DS    A2,SAV4  LV
)@@G@@      .     @E@@@[         E$DIT EDPKT          . $P FORMAT WARNING MESSLW
)@@G@@AGE   @A@]@[         E$COPY 22,BDM1       .     @A@@@]         E$COPY 29LX
)@@G@@,BDM1       .     @A@@@[         L     A0,SAV3        .     @A@@@[      LY
)@@G@@   LMJ   X11,EDECV$     .     @A@@@[         E$COPY 8,BDM2        .     LZ
)@@G@@@C@@@[         L,T1  A0,1,X8        . AREA CODE       @A@@@[         LSSMA
)@@G@@L  A0,24          .     @A@@@[         SSL   A0,24          .     @A@@@[MB
)@@G@@         LMJ   X11,EDECV$     .     @A@@@[         E$COPY 4,ZPM2        MC
)@@G@@.     @C@@@[         L,H2  A0,1,X8        . PAGE NUM        @A@@@[      MD
)@@G@@   LMJ   X11,EDECV$     .     @A@@@[         E$COPY 5,ZPM3        .     ME
)@@G@@@C@@@[         L     A1,R3          . ABS SLOT ADDR   @A@@@[         LSSMF
)@@G@@L  A1,18          .     @A@@@[         SSL   A1,18          .     @A@@@[MG
)@@G@@         A,U   A1,1           .     @C@@@[         AN    A1,X8          MH
)@@G@@. REL SLOT ADDR   @C@@@[         L,H1  A0,2,X8        . PAGE SIZE       MI
)@@G@@@C@@@[         AN    A0,A1          . SLOT NUM        @A@@@[         LMJMJ
)@@G@@   X11,EDECV$     .     @A@@@[         E$COPY 8,ZPM4        .     @C@@@[MK
)@@G@@         L     A0,R15         . REC CODE        @A@@@[         LMJ   X11ML
)@@G@@,EDECV$     .     @A@@@[         E$COPY 8,ZPM5        .     @C@@@[      MM
)@@G@@   L     A0,R14         . SET CODE        @A@@@[         LSSL  A0,24    MN
)@@G@@      .     @A@@@[         SSL   A0,24          .     @A@@@[         LMJMO
)@@G@@   X11,EDECV$     .     @A@@@[         E$CHAR '.'           .     @A@@@[MP
)@@G@@         E$DITX               .     @E@@@[         P$RINT (PF 1,12,PRINTMQ
)@@G@@) . $P PRINT MESSAGE          @E@@@[         DL    A0,SAV3        . $P RMR
)@@G@@ESTORE REGISTERS        @A@@@[         DL    A2,SAV4        .     @A@@@[MS
)@@G@@         J     *BDWARN        . $E  @]@@@@$(6).       @C@@@@PF        FOMT
)@@G@@RM      12,6,18           .         @A@@@@PCNT*     +     0             MU
)@@G@@ .    @A@@@@PHRCNT*  +     0              .     @A@@@@WCNT     +     0  MV
)@@G@@            .     @A@@@@TMSG     ' PTRS PATCHED.'  .        @A@@@@RMSG  MW
)@@G@@   ' PGS READ, '  .           @A@@@@WMSG     ' PGS WRITTEN, '  .        MX
)@@G@@@C@@@@SAV1      RES       2                 .         @A@@@@SAV2     RESMY
)@@G@@   2              .     @B@]@@ZPM1     'WARNING: ZERO DBP - AREA ' .    MZ
)@@G@@@C@@@]ZPM1     'WARNING: ZERO PTR STORED - AREA ' .   @A@@@@ZPM2     ',PNA
)@@G@@G '               .     @A@@@@ZPM3     ',SLT '              .     @A@@@@NB
)@@G@@ZPM4     ',RECCDE '           .     @A@@@@ZPM5     ',SETCDE '           NC
)@@G@@.     @E@]@@ZPM6     'ZERO DBP WARNINGS SUPPRESSED FOR RECCDE ' .       ND
)@@G@@@E@@@]ZPM6     'ZERO POINTER WARNINGS SUPPRESSED FOR RECCDE ' .   @A@@@@NE
)@@G@@ZPM7     ', SETCDE '          .     @A@@@[SAV3     RES   2              NF
)@@G@@.     @A@@@[SAV4     RES   2              .     @A@]@[BDM1     'WARNING:NG
)@@G@@ UNKNOWN AREA ' . @C@@@]BDM1     'WARNING: PTR TO UNKNOWN AREA ' .      NH
)@@G@@@A@@@[BDM2     ' - AREA '           .     @^@@@@          END       .   NI
)@@G@@___         . $T IS THIS*[@@@@*SDFF*@]@@@# .          @A@@@# .          NJ
)@@G@@        ** BLDC5 **     @]@@@# .          @E@@@# .        THIS ROUTINE BNK
)@@G@@UILDS THE C5/C11 TABLE FOR          @A@@@# .             A GIVEN OBJECT NL
)@@G@@RECORD@]@@@# .          @A@@@# .        IT IS CALLED BY BLDC1 -   @C@@@#NM
)@@G@@ .             BLDC1 PROVIDES THE BUFFER SPACE  @C@@@# .             RTANN
)@@G@@BAD CONTAINS THE ADDR OF THE  @C@@@# .                  OBJECT RECORD TANO
)@@G@@BLE         @C@@@# .             X7 INDICATES WHICH SCHEMA        @]@@@#NP
)@@G@@ .          @^@@@# .        THE CALL IS - @A@@@# .                  LMJ NQ
)@@G@@ X11,BLDC5  @]@@@# .          @^@@@#         AXR$.          @A@@@#PF    NR
)@@G@@   FORM  12,6,18        .     @^@@@#$(4)     LIT.           @]@@@#$(3). NS
)@@G@@      @C@@@#BLDC5*.                       . $H BLDC5        @E@@@#      NT
)@@G@@   S,H2  X11,RETURN     . $P SAVE RETURN ADDR         @G@@@#         LXMNU
)@@G@@   X8,RTABAD      . $P SET INDEX INTO RECORD TABLE          @E@@@#      NV
)@@G@@   L,H2  X9,*CN5,X7     . $P SET INDEX TO C TBL ENTRY @A@@@#         A,HNW
)@@G@@1  X9,*CN5,X7     .     @E@@@#         S     X9,SX9         . $P SAVE STNX
)@@G@@ART OF ENTRY      @E@@@#         L,T3  A1,0,X9        . $P GET START OF NY
)@@G@@LAST ENTRY  @A@@@#         L     A0,X9          .     @A@@@#         AN NZ
)@@G@@   A0,A1          .     @E@@@#         S,T3  A1,0,A0        . $P SET LINOA
)@@G@@K IN LAST ENTRY   @A@@@#         LXI,U X9,1           .     @E@@@#      OB
)@@G@@   L,T3  A0,1,X8        . $P GET RECORD CODE          @A@@@#         LSSOC
)@@G@@L  A0,24          .     @A@ @#         S     A0,0,*X9       .     @A@@@ OD
)@@G@@         S     A0,0,X9        .     @E@@@#         L,S1  A0,1,X8        OE
)@@G@@. $P GET LOCATION MODE        @E@@@#         S     A0,LOCMDE,X7   . $P SOF
)@@G@@AVE MODE FOR ART        @A@ @#         LSSL  A0,30          .     @A@ @^OG
)@@G@@         S     A0,0,X9        .     @A@@@          S,S4  A0,0,*X9       OH
)@@G@@.     @E@^@#         A,T3  A0,3,X8        . $P GET FIRST DATA WORD DISP OI
)@@G@@@E@ @^         L,T3  A0,3,X8        . $P GET FIRST DATA WORD DISP @E@@@ OJ
)@@G@@         L     A0,3,X8        . $P GET FIRST DATA WORD DISP @A@@@       OK
)@@G@@   LSSL  A0,24          .     @A@@@          SSL   A0,24          .     OL
)@@G@@@A@^@#         S     A0,0,*X9       .     @A@ @^         S,T3  A0,0,*X9 OM
)@@G@@      .     @A@@@          S     A0,0,X9        .     @A@@@#         S  ON
)@@G@@   A0,C5FDW       .     @G@@@          A,H2  A0,6,X8        . $P ADD RECOO
)@@G@@D DATA LNGTH TO GET RECD LNGTH@A@@@          S,T1  A0,0,*X9       .     OP
)@@G@@@E@@@#         DL    A0,7,X8        . $P TRANSFER RECORD NAME     @A@@@#OQ
)@@G@@         DS    A0,0,X9        .     @A@@@#         DL    A0,9,X8        OR
)@@G@@.     @A@@@#         DS    A0,2,X9        .     @A@@@#         L     A0,OS
)@@G@@11,X8       .     @A@@@#         S     A0,4,X9        .     @A@@@#      OT
)@@G@@   A,U   X9,5           .     @E@@@#         L,S1  A1,1,X8        . $P GOU
)@@G@@ET LOCATION MODE        @E@@@#         AND,U A1,2           . $T IS RECOOV
)@@G@@RD CALC ?         @C@@@#         JZ    A2,C5NCLC      . $A YES NO,C5NCLCOW
)@@G@@@G@@@#         DL    A0,13,X8       . $P TRANSFER CALC PROCEDURE NAME   OX
)@@G@@      @A@@@#         DS    A0,0,X9        .     @A@@@#         A,U   X9,OY
)@@G@@2           .     @A@@@#         L     X10,X8         .     @G@@@#      OZ
)@@G@@   A,T1  X10,5,X8       . $P SET PTR TO ITEM LIST OF RDT          @E@@@#PA
)@@G@@         L,T2  A8,5,X8        . $P GET # ITEMS IN RECORD    @G@@@#      PB
)@@G@@   L     X4,X8          . $P SET PTR TO CALC ITEM CODES           @A@@@#PC
)@@G@@         A,U   X4,15          .     @E@@@#         L,S2  A2,0,X4        PD
)@@G@@. $P GET CALC ITEM COUNT      @A@@@#         AN,U  A2,1           .     PE
)@@G@@@E@@@#         SZ    A10            . $P SET CALC ITEM # TO ZERO  @E@@@#PF
)@@G@@C5CLP    A,U   A10,1          . $P INCREMENT CALC ITEM #    @A@@@#      PG
)@@G@@   SZ    A0             .     @E@@@#         L     A1,A10         . $P GPH
)@@G@@ET CALC ITEM CODE       @A@@@#         DI,U  A0,3           .     @A@@@#PI
)@@G@@         A     A0,X4          .     @A@@@#         EX    C5CLIT,A1      PJ
)@@G@@.     @E@@@#         SZ    C5FLAG         . $P INITIALIZE WORK AREAS    PK
)@@G@@@A@@@#         SZ    X5             .     @G@@@#         LMJ   X11,C5GTIPL
)@@G@@T     . $W C5GTIT - BREAK ITEM INTO ELEM'RY ITEM@E@@@#         JGD   A2,PM
)@@G@@C5CLP       . $T MORE CALC ITEMS ?        @C@@@#                        PN
)@@G@@      . $A NO YES,C5CLP @G@@@#         L     A0,X9          . $P CALCULAPO
)@@G@@TE # ELEM ITEMS PUT IN TABLE  @A@@@#         LSSL  A0,18          .     PP
)@@G@@@A@@@#         SSL   A0,18          .     @A@@@#         AN    A0,SX9   PQ
)@@G@@      .     @A@@@#         AN,U  A0,9           .     @B@@@A          L PR
)@@G@@        A1,SX9            .   @E@A@#         S,S3  A0,*SX9        . $P SPS
)@@G@@TORE IT AS CALC ITEM CNT@E@@@A         S,S3  A0,0,A1        . $P STORE IPT
)@@G@@T AS CALC ITEM CNT@C@@@#         J     C5AREA         . $J C5AREA       PU
)@@G@@@G@@@#C5NCLC   DL    A0,C5BLNK      . $P PUT BLANKS IN CALC PROC NAME   PV
)@@G@@      @A@@@#         DS    A0,0,X9        .     @A@@@#         A,U   X9,PW
)@@G@@2           .     @C@@@A          L         A0,SX9            .         PX
)@@G@@@E@A@#         SZ,S3 *SX9           . $P PUT ZERO IN CALC ITEM CNT@E@@@APY
)@@G@@         SZ,S3 0,A0           . $P PUT ZERO IN CALC ITEM CNT@A@@@#C5AREAPZ
)@@G@@   L,T2  A0,1,X8        .     @A@@@#         SZ    A5             .     QA
)@@G@@@E@@@#         L     X10,X9         . $P SAVE AREA CNT WORD ADDR  @E@@@#QB
)@@G@@         A,U   X9,1           . $T ARE THERE ANY WITHINS    @C@@@#      QC
)@@G@@   JZ    A0,C5AEND      . $A YES NO,C5AEND@G@@@#         A     X8,A0    QD
)@@G@@      . $P SET PTR TO 1ST WITHIN OF RDT         @G@@@#         L     A1,QE
)@@G@@X9          . $P GET DISPLACEMENT TO FIRST WITHIN     @A@@@#         LXIQF
)@@G@@,U A1,0           .     @A@@@#         L     A0,SX9         .     @A@@@#QG
)@@G@@         AN    A1,A0          .     @A@@@#         S,T2  A1,1,A0        QH
)@@G@@.     @A@@@#         LXI,U X8,1           .     @E@@@#C5ALP    A,U   A5,QI
)@@G@@1           . $P INCREMENT AREA COUNT     @E@@@#         L,U   A0,3     QJ
)@@G@@      . $P SET LINK TO NEXT WITHIN  @E@@@#         TNZ,S1 0,X8          QK
)@@G@@. $T IS THERE ANOTHER WITHIN ?@E@@@#         SZ    A0             . $P RQL
)@@G@@ESET LINK TO ZERO       @A@@@#         LSSL  A0,6           .     @A@@@#QM
)@@G@@         S,T1  A0,0,X9        .     @C@@@#         L,T3  A0,0,X8        QN
)@@G@@. $P GET AREA CODE@A@@@#         S,T3  A0,0,X9        .     @A@@@#      QO
)@@G@@   L,S1  A4,0,X8        .     @G@@@#         L,S3  A2,0,X8        . $P GQP
)@@G@@ET LOWER/UPPER BOUND CODES          @A@@@#         L,S4  A3,0,*X8       QQ
)@@G@@.     @G@@@#         TNE,U A2,2           . $T IS LOWER BOUND A DATANAMEQR
)@@G@@ ?          @C@@@#         J     C5AL2          . $A NO YES,C5AL2 @G@@@#QS
)@@G@@         TNE,U A3,2           . $T IS UPPER BOUND A DATANAME ?          QT
)@@G@@@C@@@#         J     C5AL2          . $A NO YES,C5AL2 @E@@@#         TE,QU
)@@G@@U  A2,1           . $T IS PAGE RANGE GIVEN ?    @C@@@#         J     C5AQV
)@@G@@L3          . $A YES NO,C5AL3 @E@@@#         L,U   A0,0101        . $P SQW
)@@G@@ET L/U BOUND CODES      @A@@@#         S,T2  A0,0,*X9       .     @E@@@#QX
)@@G@@         L     A0,0,*X8       . $P GET LOWER BOUND          @A@@@#      QY
)@@G@@   S     A0,0,*X9       .     @E@@@#         L     A0,0,*X8       . $P GQZ
)@@G@@ET UPPER BOUND          @A@@@#         S     A0,0,*X9       .     @C@@@#RA
)@@G@@         J     C5AL4          . $J C5AL4        @G@@@#C5AL2    A,U   X8,RB
)@@G@@2           . $P INCREMENT RDT INDEX PAST DATANAMES   @E@@@#C5AL3    SZ,RC
)@@G@@T2 0,*X9          . $P ZERO L/U BOUND CODES     @E@@@#         SZ    0,*RD
)@@G@@X9          . $P ZERO L AND U BOUNDS      @A@@@#         SZ    0,*X9    RE
)@@G@@      .     @E@@@#C5AL4    JNZ   A4,C5ALP       . $T MORE WITHINS ?     RF
)@@G@@      @C@@@#                              . $A NO YES,C5ALP @E@@@#C5AENDRG
)@@G@@   S     A5,0,X10       . $P STORE AREA COUNT         @E@@@#         L  RH
)@@G@@   A0,X9          . $P GET NEW TABLE LENGTH     @A@@@#         LSSL  A0,RI
)@@G@@18          .     @A@@@#         SSL   A0,18          .     @A@@@#      RJ
)@@G@@   ANU   A0,SX9         .     @G@@@#         S,T3  A1,0,X9        . $P SRK
)@@G@@ET PRIOR LINK AT END OF TABLE       @G@@@#         TG,H2 A0,*CN6,X7     RL
)@@G@@. $T HAS C5/C11 BUFFER OVERFLOWED         @C@@@#         J     C5OFL    RM
)@@G@@      . $A NO YES,C5OFL @A@@@#         AN,H2 A0,*CN5,X7     .     @E@@@#RN
)@@G@@         S,H1  A0,*CN5,X7     . $P SAVE LENGTH IN C5/C11    @G@@@#      RO
)@@G@@   LMJ   X11,BLDSMR     . $W BLDSMR - BUILD SYMBOL TABLE FOR RECD @E@@@#RP
)@@G@@         J     *RETURN        . $E RETURN TO BLDC1          @]@@@# .    RQ
)@@G@@      @C@@@#C5OFL.                        . $H C5OFL        @E@@@#      RR
)@@G@@   P$RINT (PF 1,4,C5OM) . $P PRINT OVERFLOW MESSAGE   @A@@@#         ER RS
)@@G@@   ERR$           . $E  @]@@@# .          @^@@@# .   C5GTIT -           RT
)@@G@@@E@@@# .        ROUTINE TO BREAK AN ITEM INTO ITS ELEMENTARY ITEMS@E@@@#RU
)@@G@@ .        IT CALLS ITSELF AND USES A STACK TO SAVE DATA     @A@@@# .    RV
)@@G@@         ON SUCCESSIVE CALLS  @]@@@# .          @C@@@#C5GTIT.           RW
)@@G@@            . $H C5GTIT       @E@@@#         S     X11,C5STK+1,X5 . $P SRX
)@@G@@AVE RETURN ADDR ON STACK@E@@@#         L     A3,A6          . $P GET ITERY
)@@G@@M NUMBER          @A@@@#         AN,U  A3,1           .     @A@@@#      RZ
)@@G@@   MSI,U A3,2           .     @E@@@#         A     A3,X10         . $P SSA
)@@G@@ET PTR TO ITEM IN RDT   @E@@@#         TLE   A8,A6          . $T IS ITEMSB
)@@G@@ NUMBER VALID ?   @E@@@#         L,U   A3,C5ZERO      . $P RESET PTR TO SC
)@@G@@ZERO ENTRY  @E@@@#C5TST    L     A0,C5STK,X5    . $P GET LAST LEVEL FROMSD
)@@G@@ STACK@E@@@#         JZ    A0,C5TOP       . $T IS LEVEL ZERO ?          SE
)@@G@@@C@@@#                              . $A NO YES,C5TOP @G@@@#C5TSTA   TG,SF
)@@G@@S2 A0,0,A3        . $T IS ITEM OF LOWER LEVEL THAN LAST ONE?@C@@@#      SG
)@@G@@   J     C5SAVE         . $A YES NO,C5SAVE@G@@@#         L,S2  A0,0,A3  SH
)@@G@@      . $P SAVE LEVEL AS LAST ON STACK          @A@@@#         S     A0,SI
)@@G@@C5STK+2,X5  .     @E@@@#         L,H2  A0,0,A3        . $P FORMAT ITEM ESJ
)@@G@@NTRY        @A@@@#         L     A1,1,A3        .     @A@@@#         LSSSK
)@@G@@L  A1,15          .     @A@@@#         SSL   A1,3           .     @A@@@#SL
)@@G@@         DSL   A0,12          .     @A@@@#         A     A1,C5FDW       SM
)@@G@@.     @G@@@#         S     A1,0,X9        . $P PLACE ENTRY IN C TBL - MASN
)@@G@@Y BE        @E@@@#                              . $  OVERWRITTEN LATER  SO
)@@G@@      @E@@@#         L,U   A7,1           . $P SET ITEM-TO-BE-SAVED FLAGSP
)@@G@@@E@@@#         A,U   A6,1           . $P SET TO NEXT ITEM         @C@@@#SQ
)@@G@@         A,U   X5,2           . $P PUSH STACK   @G@@@#         LMJ   X11SR
)@@G@@,C5GTIT     . $W C5GTIT - PROCESS NEXT ITEM           @C@@@#         J  SS
)@@G@@   C5TST          . $J C5TST        @G@@@#C5SAVE   JZ    A7,$+3         ST
)@@G@@. $T ARE THERE NOT ITEMS TO BE SAVED ?    @A@@@#         L,U   A7,0     SU
)@@G@@      .     @G@@@#         A,U   X9,1           . $P INCREMENT C TBL PTRSV
)@@G@@ TO SAVE ITEM     @G@@@#         L     X11,C5STK+1,X5 . $P GET RETURN ADSW
)@@G@@DR FROM STACK           @C@@@#         AN,U  X5,2           . $P POP STASX
)@@G@@CK    @C@@@#         J     0,X11          . $E RETURN       @G@@@#C5TOP SY
)@@G@@   TZ    C5FLAG         . $T IS THIS FIRST OR LAST PASS ?         @E@@@#SZ
)@@G@@         J     C5SAVE         . $A FIRST LAST,C5SAVE        @C@@@#      TA
)@@G@@   L,U   A1,1           . $P SET FLAG     @A@@@#         S     A1,C5FLAGTB
)@@G@@      .     @C@@@#         J     C5TSTA         . $J C5TSTA       @]@@@#TC
)@@G@@ .          @A@@@#C5CLIT   L,T1  A6,0,A0        .     @A@@@#         L,TTD
)@@G@@2  A6,0,A0        .     @A@@@#         L,T3  A6,0,A0        .     @]@@@#TE
)@@G@@ .          @]@@@#$(4).       @A@@@#RETURN   +     0              .     TF
)@@G@@@A@@@#CN5*     +     C5             .     @A@@@#         +     C11      TG
)@@G@@      .     @A@@@#C5OM     'C5/C11 TABLE OVERFLOW!' . @A@@@#SX9      +  TH
)@@G@@   0              .     @A@@@#C5FDW    +     0              .     @A@@@#TI
)@@G@@C5FLAG   +     0              .     @A@@@#C5BLNK   '            '       TJ
)@@G@@.     @A@@@#C5ZERO   +     0              .     @A@@@#         +     0  TK
)@@G@@            .     @A@@@#C5STK    +     0              .     @A@@@#      TL
)@@G@@   RES   49             .     @]@@@# .          @]@@@# .          @A@@@#TM
)@@G@@ .                  ** BLDC6 **     @]@@@# .          @E@@@# .        THTN
)@@G@@IS ROUTINE BUILDS THE CALC RECORD TABLES        @E@@@# .             (C6TO
)@@G@@ AND C12) FOR BOTH SCHEMAS BY SCANNING    @E@@@# .             ALL RECORTP
)@@G@@DS OF EACH SCHEMA AND NOTING        @A@@@# .             THOSE THAT ARE TQ
)@@G@@CALC  @]@@@# .          @E@@@# .        IT IS CALLED BY CTINIT, AND USESTR
)@@G@@ BUFFER SPACE     @A@@@# .             GOTTEN BY CTINIT     @]@@@# .    TS
)@@G@@      @^@@@# .        THE CALL IS   @A@@@# .                  LMJ  X11,BTT
)@@G@@LDC6  @]@@@# .          @^@@@#$(4)     LIT.           @]@@@#$(3).       TU
)@@G@@@C@@@#BLDC6*.                       . $H BLDC6        @E@@@#         S,HTV
)@@G@@2  X11,RETURN     . $P SAVE RETURN ADDR         @E@@@#         L,H2  X6,TW
)@@G@@C6          . $P SET C6 TABLE POINTER     @A@@@#         LXI,U X6,1     TX
)@@G@@      .     @E@@@#         SZ    A6             . $P SET SEQUENCE COUNTETY
)@@G@@R     @A@@@#         SZ    A7             .     @E@@@#         SZ    SFITZ
)@@G@@ND          . $P SET FOR FIRST SCHEMA     @E@@@#         L     A0,RTABADUA
)@@G@@      . $P GET REC TBL BUFFER ADDR  @A@@@#         S     A0,C6TBAD      UB
)@@G@@.     @E@@@#C6LOOP   A,U   A6,1           . $P INCREMENT SEQUENCE NUMBERUC
)@@G@@@A@@@#         S     A6,C6SNUM      .     @G@@@#         LMJ   X11,FSRBCUD
)@@G@@D     . $W FSRBCD - GET NEXT RDT FROM SCHEMA    @A@@@#         +     C6SUE
)@@G@@NUM         .     @A@@@#C6TBAD   +     0              .     @A@@@#      UF
)@@G@@   +     SFIND          .     @A@@@#         +     $,('BLDC6')    .     UG
)@@G@@@E@@@#         TNZ   C6SNUM         . $T END OF RECORDS ?         @C@@@#UH
)@@G@@         J     C6END          . $A NO YES,C6END @A@@@#         L     X9,UI
)@@G@@C6TBAD      .     @E@@@#         L,S1  A0,1,X9        . $P GET LOCATION UJ
)@@G@@MODE        @G@@@#         TNE,U A0,2           . $T IS RECORD CALC WITHUK
)@@G@@ DUPLICATES ?     @C@@@#         J     C6NOTE         . $A NO YES,NOTE  UL
)@@G@@@G@@@#         TE,U  A0,3           . $T IS RECORD CALC WITHOUT DUPLICATUM
)@@G@@ES ?  @C@@@#         J     C6LOOP         . $A YES NO,C6LOOP@E@@@#C6NOTEUN
)@@G@@   L,T3  A0,1,X9        . $P GET RECORD CODE          @A@@@#         S,TUO
)@@G@@1  A0,0,X6        .     @E@@@#         L,T3  A0,3,X9        . $P GET FIRUP
)@@G@@ST DATA DISP      @A@@@#         S,T3  A0,0,*X6       .     @E@@@#      UQ
)@@G@@   TG,U  A7,C6SIZE      . $T HAS TABLE OVERFLOWED     @C@@@#         J  UR
)@@G@@   C6OFL          . $A NO YES,C6OFL @E@@@#         A,U   A7,1           US
)@@G@@. $P INCREMENT TABLE SIZE     @C@@@#         J     C6LOOP         . $J CUT
)@@G@@6LOOP       @E@@@#C6END    L     A0,SFIND       . $P SAVE TABLE SIZE IN UU
)@@G@@C6/C12@A@@@#         S,H1  A7,*CN6,A0     .     @E@@@#         TNE   A0,UV
)@@G@@NS$FLG      . $T ANOTHER SCHEMA ?         @A@@@#         J     *RETURN  UW
)@@G@@      . $E  @E@@@#         L,H2  X6,C12         . $P SET C12 TABLE POINTUX
)@@G@@ER    @A@@@#         LXI,U X6,1           .     @E@@@#         SZ    A6 UY
)@@G@@            . $P RESET SEQUENCE COUNTER   @A@@@#         SZ    A7       UZ
)@@G@@      .     @E@@@#         L,U   A0,1           . $P SET FOR SECOND SCHEVA
)@@G@@MA    @A@@@#         S     A0,SFIND       .     @C@@@#         J     C6LVB
)@@G@@OOP         . $J C6LOOP       @]@@@# .          @C@@@#C6OFL.            VC
)@@G@@            . $H C6OFL        @E@@@#         P$RINT (PF 1,4,C6OM) . $P PVD
)@@G@@RINT OVERFLOW MESSAGE   @A@@@#         ER    ERR$           . $E  @]@@@#VE
)@@G@@ .          @]@@@#$(4).       @A@@@#C6SNUM   +     0              .     VF
)@@G@@@A@@@#SFIND    +     0              .     @A@@@#CN6*     +     C6       VG
)@@G@@      .     @A@@@#         +     C12            .     @A@@@#C6OM     'C6VH
)@@G@@/C12 TABLE OVERFLOW!' . @]@@@# .          @A@@@# .                  ** BVI
)@@G@@LDC7 **     @]@@@# .          @E@@@# .        THIS ROUTINE BUILDS THE C7VJ
)@@G@@/C13 TABLE FOR          @A@@@# .             A GIVEN SET          @]@@@#VK
)@@G@@ .          @A@@@# .        IT IS CALLED BY BLDC1 -   @C@@@# .          VL
)@@G@@   BLDC1 PROVIDES THE BUFFER SPACE  @C@@@# .             STABAD CONTAINSVM
)@@G@@ THE ADDR OF THE  @A@@@# .                  SET TABLE       @C@@@# .    VN
)@@G@@         X7 INDICATES WHICH SCHEMA        @]@@@# .          @^@@@# .    VO
)@@G@@    THE CALL IS - @A@@@# .                  LMJ  X11,BLDC7  @]@@@# .    VP
)@@G@@      @^@@@#$(4)     LIT.           @]@@@#$(3).       @C@@@#BLDC7*.     VQ
)@@G@@                  . $H BLDC7        @E@@@#         S,H2  X11,RETURN     VR
)@@G@@. $P SAVE RETURN ADDR         @E@@@#         L     X8,STABAD      . $P SVS
)@@G@@ET PTR TO SDT           @G@@@#         TNZ,H1 *CN7,X7       . $T IS THISVT
)@@G@@ FIRST TABLE ENTRY ?          @C@@@#         J     C7NSET         . $A NVU
)@@G@@O YES,C7NSET@C@@@#         L,T3  A0,1,X8        . $P GET SET CODE @E@@@#VV
)@@G@@         L,H2  X9,*CN7,X7     . $P SET PTR TO C TBL         @G@@@#C7SLP VW
)@@G@@   TNE,T1 A0,0,X9       . $T IS C TBL ENTRY FOR THIS SET ?        @C@@@#VX
)@@G@@         J     C7EXT2         . $A NO YES,C7EXT2@E@@@#         TNZ,T3 0,VY
)@@G@@X9          . $T MORE C TBL ENTRIES ?     @C@@@#         J     C7NSET   VZ
)@@G@@      . $A YES NO,C7NSET@G@@@#         A,T3  X9,0,X9        . $P SET PTRWA
)@@G@@ TO NEXT C TBL ENTRY          @C@@@#         J     C7SLP          . $J CWB
)@@G@@7SLP        @E@@@#C7NSET   L,H2  X9,*CN7,X7     . $P SET INDEX TO NEW ENWC
)@@G@@TRY   @A@@@#         A,H1  X9,*CN7,X7     .     @E@@@#         S     X9,WD
)@@G@@SX9         . $P SAVE START OF ENTRY      @E@@@#         L,T3  A1,0,X9  WE
)@@G@@      . $P GET START OF LAST ENTRY  @A@@@#         L     A0,X9          WF
)@@G@@.     @A@@@#         AN    A0,A1          .     @E@@@#         S,T3  A1,WG
)@@G@@0,A0        . $P SET LINK IN LAST ENTRY   @A@@@#         LXI,U X9,1     WH
)@@G@@      .     @E@@@#         L     A0,1,X8        . $P GET SET CODE WORD  WI
)@@G@@      @A@@@#         LSSC  A0,12          .     @A@@@#         LSSL  A0,WJ
)@@G@@12          .     @A@@@#         S     A0,0,*X9       .     @C@@@#      WK
)@@G@@   DL    A0,3,X8        . $P GET SET NAME @A@@@#         DS    A0,0,X9  WL
)@@G@@      .     @A@@@#         DL    A0,5,X8        .     @A@@@#         DS WM
)@@G@@   A0,2,X9        .     @A@@@#         L     A0,7,X8        .     @A@@@#WN
)@@G@@         S     A0,4,X9        .     @A@@@#         A,U   X9,5           WO
)@@G@@.     @E@@@#         L,H1  A0,2,X8        . $P GET OWNER REC WORD       WP
)@@G@@@A@@@#         SZ    A1             .     @A@@@#         DSL   A0,6     WQ
)@@G@@      .     @A@@@#         SSC   A0,18          .     @A@@@#         LDSWR
)@@G@@L  A0,6           .     @A@@@#         LSSC  A0,12          .     @A@@@#WS
)@@G@@         S     A0,0,*X9       .     @E@@@#         L,S3  A3,2,X8        WT
)@@G@@. $P GET MEMBER COUNT         @A@@@#         AN,U  A3,1           .     WU
)@@G@@@G@@@#         A,U   X8,8           . $P RESET SDT INDEX TO 1ST MEMBER  WV
)@@G@@      @E@@@#C7MLP    L,S3  A0,0,X8        . $P GET MEMBER TYPE          WW
)@@G@@@A@@@#         S,T1  A0,0,X9        .     @E@@@#         L,T1  A0,0,X8  WX
)@@G@@      . $P GET MEMBER REC CODE      @A@@@#         S,T3  A0,0,*X9       WY
)@@G@@.     @G@@@#         A,T3  X8,1,X8        . $P SET SDT PTR TO NEXT MEMBEWZ
)@@G@@R           @E@@@#         JGD   A3,C7MLP       . $T MORE MEMBERS ?     XA
)@@G@@      @C@@@#                              . $A NO YES,C7MLP @E@@@#      XB
)@@G@@   L     A0,X9          . $P GET NEW ENTRY LENGTH     @A@@@#         LSSXC
)@@G@@L  A0,18          .     @A@@@#         SSL   A0,18          .     @A@@@#XD
)@@G@@         ANU   A0,SX9         .     @G@@@#         S,T3  A1,0,X9        XE
)@@G@@. $P SET PRIOR LINK AT END OF ENTRY       @E@@@#         TG,H2 A0,*CN8,XXF
)@@G@@7     . $T HAS TABLE OVERFLOWED     @C@@@#         J     C7OFL          XG
)@@G@@. $A NO YES,C7OFL @A@@@#         AN,H2 A0,*CN7,X7     .     @E@@@#      XH
)@@G@@   S,H1  A0,*CN7,X7     . $P SAVE LENGTH IN C7/C13    @G@@@#         LMJXI
)@@G@@   X11,BLDSMS     . $W BLDSMS - BUILD SYMBOL TABLE FOR SET  @E@@@#C7EXT2XJ
)@@G@@   J     *RETURN        . $E RETURN TO BLDC1          @]@@@# .          XK
)@@G@@@C@@@#C7OFL.                        . $H C7OFL        @E@@@#         P$RXL
)@@G@@INT (PF 1,4,C7OM) . $P PRINT OVERFLOW MESSAGE   @A@@@#         ER    ERRXM
)@@G@@$           . $E  @]@@@# .          @]@@@#$(4).       @A@@@#CN7*     +  XN
)@@G@@   C7             .     @A@@@#         +     C13            .     @A@@@#XO
)@@G@@C7OM     'C7/C13 TABLE OVERFLOW!' . @]@@@# .          @A@@@# .          XP
)@@G@@        ** PACKC1 **    @]@@@# .          @E@@@# .        THIS ROUTINE PXQ
)@@G@@ACKS THE INTERNAL EXPANDED          @E@@@# .             C1/C9 TABLE BEFXR
)@@G@@ORE THE INITIAL C1/C9 WRITE   @]@@@# .          @C@@@# .        THE ROUTXS
)@@G@@INE IS CALLED BY CF$AM        @]@@@# .          @E@@@# .        X8 INDICXT
)@@G@@ATES WHICH TABLE - C1(0) OR C9(1)         @]@@@# .          @^@@@#$(4)  XU
)@@G@@   LIT.           @]@@@#$(3).       @C@@@#PACKC1*.                      XV
)@@G@@. $H PACKC1       @A@@@#         +     0              .     @E@@@#      XW
)@@G@@   L,H1  A4,*CN1,X8     . $P GET NUMBER OF ENTRIES    @C@@@#         JGDXX
)@@G@@   A4,$+2         . $T IS IT NONZERO@C@@@#         J     *PACKC1        XY
)@@G@@. $E RETURN       @E@@@#         L,H2   A2,*CN1,X8    . $P SET UP INDICEXZ
)@@G@@S FOR PACK  @A@@@#         S     A2,SA2         .     @A@@@#         LXIYA
)@@G@@,U A2,1           .     @A@@@#         L     X9,A2          .     @A@@@#YB
)@@G@@PCKLP    L     X10,SA2        .     @A@@@#         ANU    A2,X10        YC
)@@G@@.     @G@@@#         S,T3  A3,0,X10       . $P LINK LAST ENTRY TO THIS EYD
)@@G@@NTRY        @A@@@#         S,H2  A2,SA2         .     @A@@@#         L,SYE
)@@G@@4  A0,0,X9        .     @A@@@#         ANU,U A0,NUMOAP      .     @A@@@#YF
)@@G@@         SN    A1,SA1         .     @A@@@#         A,U   A0,1           YG
)@@G@@.     @A@@@#         L     R1,A0          .     @G@@@#         BT    A2,YH
)@@G@@0,*X9       . $P BLOCK TRANSFER OWN/AUTO PTR WORDS    @A@@@#         A,HYI
)@@G@@2  X9,SA1         .     @A@@@#         L,S2  A0,0,X9        .     @A@@@#YJ
)@@G@@         ANU,U A0,36          .     @A@@@#         SN    A1,SA1         YK
)@@G@@.     @A@@@#         A,U   A0,2           .     @A@@@#         L     R1,YL
)@@G@@A0          .     @G@@@#         BT    A2,0,*X9       . $P BLOCK TRANSFEYM
)@@G@@R MAN PTR WORDS         @A@@@#         A,H2  X9,SA1         .     @G@@@#YN
)@@G@@         JGD   A4,PCKLP       . $T MORE ENTRIES TO BE PACKED ?          YO
)@@G@@@C@@@#         L     X10,SA2        . $A NO YES,PCKLP @E@@@#         SZ,YP
)@@G@@T3 0,X10          . $P SET LAST LINK TO ZERO    @A@@@#         AN,H2 A2,YQ
)@@G@@*CN1,X8     .     @A@@@#         S,H1  A2,*CN1,X8     .     @A@@@#      YR
)@@G@@   J     *PACKC1        . $E  @]@@@#$(4).       @^@@@#SA1      +     0  YS
)@@G@@  .   @^@@@#SA2      +     0    .   @C@@@#CN1       +         C1        YT
)@@G@@        .         @C@@@#          +         C9                .         YU
)@@G@@@A@@@#         END                  .     ___ 0,X9          . $T MORE C YV
)@@G@@*[@@@@*SDFF*@[@@@@.     @B@@@@.           ********    SORT    ********  YW
)@@G@@@[@@@@.     @D@@@@.  PURPOSE: SORT THE KEY FILE FOR REORGANIZATION.     YX
)@@G@@@[@@@@.     @]@@@@ AXR$.      @]@@@@$(1).       @]@@@@SORTKEY*    @E@@@@YY
)@@G@@          S         X11,SORTRET       . STORE RETURN ADDRESS@F@@@@      YZ
)@@G@@    L,U       A0,USE            . ADDRESS OF USE STATEMENT  @C@@@@      ZA
)@@G@@    ER        CSF$              . USE     @F@@@@          L,U       A0,AZB
)@@G@@SG            . ADDRESS OF ASG STATEMENT  @C@@@@          ER        CSF$ZC
)@@G@@              . ASG     @E@@@@          TP        A0                . SKZD
)@@G@@IP IF NO REJECT   @D@@@@          LMJ       X11,ASGERR        . ASSIGN EZE
)@@G@@RROR  @F@@@@          L,U       A0,ASG1           . ADDRESS OF ASG STATEZF
)@@G@@MENT  @C@@@@          ER        CSF$              . ASG     @E@@@@      ZG
)@@G@@    TP        A0                . SKIP IF NO REJECT   @D@@@@          LMZH
)@@G@@J       X11,ASGERR        . ASSIGN ERROR  @F@@@@          L,U       A0,AZI
)@@G@@SG2           . ADDRESS OF ASG STATEMENT  @C@@@@          ER        CSF$ZJ
)@@G@@              . ASG     @E@@@@          TP        A0                . SKZK
)@@G@@IP IF NO REJECT   @D@@@@          LMJ       X11,ASGERR        . ASSIGN EZL
)@@G@@RROR  @F@@@@          L,U       A0,ASG3           . ADDRESS OF ASG STATEZM
)@@G@@MENT  @C@@@@          ER        CSF$              . ASG     @E@@@@      ZN
)@@G@@    TP        A0                . SKIP IF NO REJECT   @D@@@@          LMZO
)@@G@@J       X11,ASGERR        . ASSIGN ERROR  @G@@@@          L,U       A0,FZP
)@@G@@ACPKT         . PACKET FOR FACILITIES REQUEST   @C@@@@          ER      ZQ
)@@G@@  FACIL$            . GET INFO@G@@@@          L,H2      A0,FACPKT+8     ZR
)@@G@@  . HIGHEST GRANULE ON ASG ST       @H@@@@          MSI,U     A0,1024   ZS
)@@G@@        . NUMBER OF WORDS RESERVED FOR SORT     @E@@@@          A       ZT
)@@G@@  A0,LAST$D         . LAST DBANK ADDRESS  @E@@@@          A,U       A0,1ZU
)@@G@@              . NEXT DBANK ADDRESS  @E@@@@          S         A0,BUF1   ZV
)@@G@@        . STORE AS BUFFER 1   @F@@@@          S,H2      A0,KF$PKT1+4    ZW
)@@G@@  . STORE BUFFER ADDR IN PKT  @E@@@@          A,U       A0,SECT*28      ZX
)@@G@@  . ADDRESS OF BUF 2    @F@@@@          S         A0,BUF2           . STZY
)@@G@@ORE AS BUFFER 2 ADDR    @E@@@@          A,U       A0,SECT*28        . LAZZ
)@@G@@ST DBANK ADDRESS  @E@@@@          A,U       A0,1              . ADD 1 FOAA
)@@G@@R SAFETY    @E@@@@          S         A0,LAST$D         . HIGHEST DBANK AB
)@@G@@ADDR  @C@@@@          ER        MCORE$            . GET CORE@E@@@@      AC
)@@G@@    L,U       A3,PARM           . PARM LIST FOR SORT  @E@@@@          J AD
)@@G@@        ROPN$             . START THE SORT      @[@@@@I.    @E@@@@      AE
)@@G@@    L,U       A0,KF$PKT         . ADDRESS OF PACKET   @D@@@@          ERAF
)@@G@@        IOW$              . READ HEADER   @F@@@@          L         A2,KAG
)@@G@@FIWDS         . NUMBER OF WORDS IN INDEX  @F@@@@          SSL       A2,1AH
)@@G@@              . NUMBER OF BLOCKS OF DATA  @F@@@@          AN,U      A2,1AI
)@@G@@              . LESS 1 FOR DUMMY BLOCK    @E@@@@          MSI       A2,KAJ
)@@G@@CSORT         . NUMBER OF WDS DATA  @E@@@@          TNZ       A2        AK
)@@G@@        . SKIP IF WORDS       @C@@@@          J         OEND1           AL
)@@G@@  . RETURN  @F@@@@          TNG,U     A2,SECT*28        . SKIP IF BUFFERAM
)@@G@@ SIZE OK    @G@@@@          S,H1      A2,KF$PKT1+4      . STORE NUMBER OAN
)@@G@@F WDS IN PKT      @F@@@@          AN,H1     A2,KF$PKT1+4      . WORDS REAO
)@@G@@MAINING TO READ   @E@@@@          L,U       A0,KF$PKT1        . ADDRESS AP
)@@G@@OF PACKET   @E@@@@          ER        IO$               . READ FIRST BLOAQ
)@@G@@CK    @[@@@@.     @C@@@@. SWITCH TO NEXT BUFFER IF WORDS ARE PRESENT.   AR
)@@G@@@[@@@@.     @]@@@@SORT1.      @F@@@@          TP        KF$PKT1+3       AS
)@@G@@  . $ SKIP IF I/O COMPLETE    @D@@@@          ER        WAIT$           AT
)@@G@@  . ELSE WAIT     @G@@@@          TZ,S1     KF$PKT1+3         . SKIP IF AU
)@@G@@ZERO ERROR STATUS       @D@@@@          LMJ       X11,IOERR         . I/AV
)@@G@@O ERROR     @F@@@@          TNZ,H2    KF$PKT1+3         . SKIP IF WDS TRAW
)@@G@@ANSFERRED   @G@@@@          J         RSORT$            . DONE PASSING DAX
)@@G@@ATA TO SORT       @G@@@@          L,H2      A1,KF$PKT1+3      . NUMBER OAY
)@@G@@F WORDS TRANSFERRED     @C@@@@          AN,U      A1,2              . LEAZ
)@@G@@SS 2  @D@@@@          LXI       A1,(-2)           . INCREMENT     @E@@@@BA
)@@G@@          L,H2      X8,KF$PKT1+4      . BUFFER ADDRESS      @F@@@@      BB
)@@G@@    TNZ       A2                . SKIP IF WDS LEFT TO READ  @E@@@@      BC
)@@G@@    J         SORT3             . NO I/O REQUIRED     @F@@@@          TNBD
)@@G@@G,U     A2,SECT*28        . SKIP IF BUFFER SIZE OK    @G@@@@          S,BE
)@@G@@H1      A2,KF$PKT1+4      . STORE NUMBER OF WDS IN PKT      @F@@@@      BF
)@@G@@    AN,H1     A2,KF$PKT1+4      . WORDS REMAINING TO READ   @D@@@@      BG
)@@G@@    L         A0,KF$PKT1+5      . DRUM ADDRESS  @E@@@@          A,U     BH
)@@G@@  A0,SECT           . NEXT DRUM ADDRESS   @D@@@@          S         A0,KBI
)@@G@@F$PKT1+5      . DRUM ADDRESS  @E@@@@          L         A0,BUF1         BJ
)@@G@@  . ADDRESS OF BUFFER 1 @G@@@@          TNE,H2    A0,KF$PKT1+4      . SKBK
)@@G@@IP IF NOT THE CURRENT BUFFER  @E@@@@          L         A0,BUF2         BL
)@@G@@  . ADDRESS OF BUFFER 2 @F@@@@          S,H2      A0,KF$PKT1+4      . STBM
)@@G@@ORE NEW BUFFER ADDRESS  @E@@@@          L,U       A0,KF$PKT1        . PABN
)@@G@@CKET ADDRESS      @E@@@@          ER        IO$               . READ NEXBO
)@@G@@T BLOCK     @F@@@@          L         A0,X8             . LOCATION OF FIBP
)@@G@@RST RECORD  @]@@@@SORT2.      @G@@@@          LMJ       X11,RREL$       BQ
)@@G@@  . PASS RECORD TO SORT ROUTINE     @E@@@@          A,U       A0,2      BR
)@@G@@        . NEXT RECORD LOCATION@C@@@@          JMGI      A1,SORT2        BS
)@@G@@  . CONTINUE@E@@@@          J         SORT1             . SWITCH BUFFERSBT
)@@G@@      @]@@@@SORT3.      @G@@@@          SZ,H2     KF$PKT1+3         . ZEBU
)@@G@@RO NUMBER OF WDS TRANSFERRED  @E@@@@          L         A0,X8           BV
)@@G@@  . BUFFER ADDRESS      @C@@@@          J         SORT2             . COBW
)@@G@@NTINUE@[@@@@O.    @D@@@@          LMJ       X11,RRET$         . GET A REBX
)@@G@@CORD  @G@@@@          +         OEND              . ADDRESS OF END OF REBY
)@@G@@CORDS       @C@@@@          DL        A0,,A0            . GET KEY @G@@@@BZ
)@@G@@          TNE       A0,KEYLAST        . SKIP IF NOT SAME KEY AS BEFORE  CA
)@@G@@@D@@@@          J         KEYDUP            . DUPLICATE     @F@@@@      CB
)@@G@@    S         A0,KEYLAST        . STORE THIS KEY AS LAST    @F@@@@      CC
)@@G@@    DS        A0,KFAMPK+3       . STORE IN KF$AM PACKET     @E@@@@      CD
)@@G@@    L,U       X10,KFAMPK        . PACKET ADDRESS      @E@@@@          LMCE
)@@G@@J       X11,KF$AMC        . CREATE KEYFILE ENTRY@C@@@@          J       CF
)@@G@@  O.                . CONTINUE@]@@@@OEND.       @E@@@@          L,U     CG
)@@G@@  X10,KFAMPK        . PACKET ADDRESS      @E@@@@          LMJ       X11,CH
)@@G@@KF$AMF        . FLUSH KEY FILE      @]@@@@OEND1.      @E@@@@          L CI
)@@G@@        X11,SORTRET       . RETURN ADDRESS      @C@@@@          J       CJ
)@@G@@  0,X11             . RETURN  @]@@@@KEYDUP.     @G@@@@          TNE     CK
)@@G@@  A0,KEYMAX         . SKIP IF NOT MAX VAL FOR A KEY   @C@@@@          J CL
)@@G@@        OEND              . DONE    @F@@@@          E$DIT     EPKT      CM
)@@G@@        . INIT FOR EDIT PACKAGE     @A@@@@          E$OCTF    13,KEYLASTCN
)@@G@@      @#@@@@          E$DITX  @F@@@@          L         A0,EMSG         CO
)@@G@@  . ACW FOR ERROR MESSAGE     @C@@@@          ER        PRINT$          CP
)@@G@@  . PRINT IT@E@@@@          L         A0,EMSG1          . ACW FOR SECONDCQ
)@@G@@ LINE @C@@@@          ER        PRINT$            . PRINT IT@D@@@@      CR
)@@G@@    ER        ERR$              . ERROR OFF     @]@@@@$(0).       @G@@@@CS
)@@G@@PARM      R$FILE    'RSZW',2 'KEYW',1,35,36,'U','A' 'FPOC',I 'LPOC',O ; CT
)@@G@@@A@@@@                    'COPY',RSTD$    @^@@@@FACPKT    'R$CORE      'CU
)@@G@@@^@@@@          RES       7   @A@@@@USE       '@USE K$FILE,*K$FILE . '  CV
)@@G@@@ @@@@ASG       '@ASG,A K$FILE . '  @A@@@@ASG1      '@ASG,T R$CORE,///15CW
)@@G@@ . '  @A@@@@ASG2      '@ASG,T XA,F4/400 . '     @A@@@@ASG3      '@ASG,T CX
)@@G@@XB,F4/200 . '     @B@@@@KF$PKT   I$OD  'K$FILE      ',R$ 6,KHDR   @]@@@@CY
)@@G@@KHDR.       @^@@@@KFNAME   'K$FILE'       @^@@@@KFDATE   '      '       CZ
)@@G@@@^@@@@KFTIME   '      '       @#@@@@KFIWDS   +     0  @#@@@@KFLKEY   +  DA
)@@G@@   0  @#@@@@KFHKEY   +     0  @A@@@@EMSG      +         0107,EMSG+1     DB
)@@G@@@E@@@@          'RECORD UNLOADED TWICE.                    '      @A@@@@DC
)@@G@@EMSG1     +         0105,EMSG1+1    @B@@@@          'REORG INVALID.  TERDD
)@@G@@MINATING.'  @ @@@@EPKT      E$PKT     3,EMSG+5  @A@@@@KEYMAX    +       DE
)@@G@@  0777777777777   @^@@@@KEYLAST   +         0   @]@@@@KHDREND.    @G@@@@DF
)@@G@@SECT      EQU       128                . NUMBER OF SECTORS IN BUF       DG
)@@G@@@E@@@@BUF1      +         0                 . BUFFER1 ADDRESS     @E@@@@DH
)@@G@@BUF2      +         0                 . BUFFER 2 ADDRESS    @E@@@@KF$PKTDI
)@@G@@1   I$OD      'K$FILE      ',R$ SECT*28,BUF1 640      @F@@@@KFAMPK    REDJ
)@@G@@S       50                . PACKET FOR KF$AM CREATE   @E@@@@SORTRET   + DK
)@@G@@        0                 . RETURN ADDRESS      @[@@@@ END  ___   @E@@@@DL
)@@G@@          L,U       A0,KF$PKT1        . ADDRESS OF PACKET   @E@@@@      DM
)@@G@@    ER        IO$       *[@@@@*SDFF*@]@@@# .          @A@@@# .          DN
)@@G@@        ** PATCH **     @]@@@# .          @E@@@# .        THIS ROUTINE WDO
)@@G@@ILL PATCH DB PTRS THAT SHOULD       @E@@@# .             POINT TO RECORDDP
)@@G@@S MOVED DURING REORGANIZATION @C@@@# .             SO THAT THE POINTERS DQ
)@@G@@ARE CORRECT @]@@@# .          @^@@@# .        THE CALL IS   @A@@@# .    DR
)@@G@@         LMJ  X11,PATCH       @]@@@# .          @G@@@# .        C2 IS USDS
)@@G@@ED TO GET THE DB RANGES WHICH NEED TO BE EXAMINED     @]@@@# .          DT
)@@G@@@G@@@# .        AFRCDT IS A TABLE BUILT INTERNALLY TO PATCH WHICH CONTAIDU
)@@G@@NS    @G@@@# .             THE RECORD CODES AND C1 TABLE ENTRY ADDR FOR DV
)@@G@@ALL         @A@@@# .             AFFECTED RECORDS     @]@@@# .          DW
)@@G@@@E@@@# .        THE CODE WAS WRITTEN WITH REENTRANCY IN MIND,     @C@@@#DX
)@@G@@ .             THUS MANY REGISTERS ARE USED     @E@@@# .             FORDY
)@@G@@ THE MOST PART, REGISTER ASSIGNMENTS      @A@@@# .                  ARE DZ
)@@G@@AS FOLLOWS: @C@@@# .                  X5  - ADDR OF KFAM PACKET   @C@@@#EA
)@@G@@ .                  X6  - ADDR OF DBAM PACKET   @E@@@# .                EB
)@@G@@  X7  - PTR TO NEXT PG RANGE ENTRY        @E@@@# .                  X8  EC
)@@G@@- ADDR OF FIRST WORD OF CURRENT PG  @A@@@# .                  X9  -     ED
)@@G@@      @C@@@# .                  X10 - PARAM ADDR FOR CALLS  @C@@@# .    EE
)@@G@@              X11 - CALLING REG           @C@@@# .                  A0  EF
)@@G@@- WORKING REG / SLOT PTR@C@@@# .                  A1  - WORKING REG     EG
)@@G@@      @C@@@# .                  A2  - START ADDR OF RECORD  @C@@@# .    EH
)@@G@@              A3  - ADDR OF DB PTR        @C@@@# .                  A4  EI
)@@G@@- SLOT LOOP COUNTER     @C@@@# .                  A5  - PAGE LOOP COUNTEEJ
)@@G@@R     @G@@@# .                  A6  - NUMBER OF PAGES IN CURRENT DB BLOCEK
)@@G@@K           @C@@@# .                  A7  - CURRENT RANGE BLOCK   @E@@@#EL
)@@G@@ .                  A8  - PAGE-BLOCK-CHANGED FLAG           @E@@@# .    EM
)@@G@@              A9  - PG RANGE REMAINING COUNT          @G@@@# .          EN
)@@G@@        R4  - ADDR OF START OF CURRENT C2 TABLE ENTRY       @C@@@# .    EO
)@@G@@              R5  - LINK TO NEXT C2 ENTRY @C@@@# .                  R3,REP
)@@G@@6,R7 - SAVE REGISTERS   @]@@@# .          @A@@@# .                  ** PEQ
)@@G@@ATCH **     @]@@@# .          @A@@@#PF       FORM  12,6,18        .     ER
)@@G@@@A@@@#AW       FORM  6,6,6,18       .     @G@ @# . ACTNUM   EQU   3     ES
)@@G@@         . NO PROCESS ACTIVITIES CREATED        @C@@@  . ACTNUM   EQU - ET
)@@G@@ NO PROCESS ACTIVITIES CREATED@G@ @# . PGPBLK   EQU   10             . NEU
)@@G@@O OF PAGES IN BLOCK I/O FROM DB     @E@@@  . PGPBLK   EQU - NO OF PAGES EV
)@@G@@IN BLOCK I/O FROM DB          @G@ @# . KF$WKS   EQU   50             . WEW
)@@G@@ORK SPACE ALLOWED IN KFAM PACKET    @E@@@  . KF$WKS   EQU - WORK SPACE AEX
)@@G@@LLOWED IN KFAM PACKET         @]@@@# .          @^@@@#         AXR$.    EY
)@@G@@      @^@@@#$(6)     LIT.           @]@@@#$(5).       @]@@@# .          EZ
)@@G@@@C@@@#PATCH*.                       . $H PATCH        @C@@@#         S,HFA
)@@G@@2  X11,RETURN     . $P SAVE RETURN  @G@@@#         SLJ   MERGE          FB
)@@G@@. $W MERGE - MERGE C2 AND C4 INTO NEW C2  @C@@@#         L     A15,C4   FC
)@@G@@      . $P SAVE C4      @E@@@#         L     A0,C16         . $P MOVE C1FD
)@@G@@6 TO C4           @A@@@#         S     A0,C4          .     @G@@@#      FE
)@@G@@   SLJ   MERGE          . $W MERGE - NEW C2 AND C16 INTO NEW C2   @C@@@#FF
)@@G@@         S     A15,C4         . $P RESTORE C4   @G@@@#         SLJ   BLDFG
)@@G@@ART         . $W BLDART - BUILD AFFTD RECD & AREA TBLS@G@@@          SZ FH
)@@G@@   WRNFLG         . $P RESET WARNINGS-PRINTED FLAG          @E@@@#      FI
)@@G@@   L,U   A0,ACTNUM      . $P GET NUMBER OF ACTIVITIES @E@@@#         TG,FJ
)@@G@@U  A0,21          . $T IS IT LESS THAN 21       @C@@@#         J     MAXFK
)@@G@@ACT         . $A YES NO,MAXACT@A@@@#         L     A0,LAST$D      .     FL
)@@G@@@A@@@#         AU,U  A0,1           .     @E@@@#         L,U   A2,KF$WKSFM
)@@G@@      . $P GET KF$AM PACKET SPACE   @A@@@#         A,U   A2,6           FN
)@@G@@.     @A@@@#         MSI,U A2,ACTNUM      .     @E@@@#         L,U   A3,FO
)@@G@@ACTNUM      . $P GET DB$AM PACKET SPACE   @A@@@#         MSI,U A3,3     FP
)@@G@@      .     @A@@@#         AN,U  A3,1           .     @A@@@#         MSIFQ
)@@G@@,U A3,9           .     @A@@@#         A     A2,A3          .     @A@@@#FR
)@@G@@         A     A0,A2          .     @A@@@#         S     A0,LAST$D      FS
)@@G@@.     @E@@@#         ER    MCORE$         . $P MCORE ALL PACKET SPACE   FT
)@@G@@@A@@@#         L     R1,A2          .     @A@@@#         L     A3,A1    FU
)@@G@@      .     @A@@@#         LXI,U A3,1           .     @A@@@#         L  FV
)@@G@@   A0,ZEROPT      .     @E@@@#         BT    A3,0,*A0       . $P ZERO OUFW
)@@G@@T ALL PACKET SPACE@G@@@#         L,U   A3,ACTNUM      . $P GET # OF DB$AFX
)@@G@@M PKETS NEEDED          @A@@@#         MSI,U A3,3           .     @A@@@#FY
)@@G@@         AN,U  A3,1           .     @E@@@#DBPLP1   JGD   A3,$+2         FZ
)@@G@@. $P LOOP TO SET DBPKET ADDRS @A@@@#         J     DBPLP2         .     GA
)@@G@@@A@@@#         S     A1,DBPADR+1,A3 .     @A@@@#         A,U   A1,9     GB
)@@G@@      .     @A@@@#         J     DBPLP1         .     @E@@@#DBPLP2   L,UGC
)@@G@@   A0,KF$WKS      . $P GET KFPKET SIZE          @A@@@#         A,U   A0,GD
)@@G@@6           .     @E@@@#         L,U   A3,ACTNUM      . $P GET # KF$AM PGE
)@@G@@KETS NEEDED @E@@@#KFPLP1   JGD   A3,$+2         . $P LOOP TO SET KFPKET GF
)@@G@@ADDRS @A@@@#         J     KFPLP2         .     @A@@@#         S     A1,GG
)@@G@@KFPADR,A3   .     @A@@@#         A     A1,A0          .     @A@@@#      GH
)@@G@@   J     KFPLP1         .     @]@@@#KFPLP2.     @C@@@# .   THIS SECTION GI
)@@G@@OF CODE SCANS THE C3 TABLE    @C@@@# .        TO GET THE LARGEST AFFECTEGJ
)@@G@@D PAGE SIZE @C@@@# .        AND THEN MCORE'S A BUFFER FOR THE DBAM@G@@@#GK
)@@G@@         L,U   A1,0           . $P CALCULATE NO ENTRIES IN C3           GL
)@@G@@@A@@@#         L,H1  A2,C3          .     @A@@@#         DI,U  A1,9     GM
)@@G@@      .     @A@@@#         JZ    A1,ERROR       .     @E@@@#         AN,GN
)@@G@@U  A1,1           . $P SET C3 SEARCH COUNT      @C@@@#         L,H2  X9,GO
)@@G@@C3          . $P SET C3 INDEX @A@@@#         LXI,U X9,9           .     GP
)@@G@@@E@@@#         L,U   A2,0           . $P INITIALIZE MAX PG SIZE   @E@@@#GQ
)@@G@@PGSZLP   L,T1  A0,3,*X9       . $P GET NEXT PG SIZE         @A@@@#      GR
)@@G@@   LSSL  A0,24          .     @A@@@#         SSL   A0,24          .     GS
)@@G@@@G@@@#         TLE   A2,A0          . $T IS MAX GREATER THAN THIS PG SIZGT
)@@G@@E ?   @E@@@#         L     A2,A0          . $P RESET MAX TO THIS SIZE   GU
)@@G@@@E@@@#         JGD   A1,PGSZLP      . $T MORE C3 ENTRIES ?        @C@@@#GV
)@@G@@                              . $A NO YES,PGSZLP@E@@@#         L,U   A3,GW
)@@G@@ACTNUM      . $P GET # OF BLOCKS NEEDED   @A@@@#         MSI,U A3,3     GX
)@@G@@      .     @A@@@#         AN,U  A3,1           .     @E@@@#         MSIGY
)@@G@@,U A2,PGPBLK      . $P CALCULATE PAGE BLOCK SIZE@C@@@#         A,U   A2,GZ
)@@G@@100         . $P PAD IT       @E@@@#         L     A0,LAST$D      . $P GHA
)@@G@@ET LAST-D-BANK ADDR     @C@@@#         A,U   A0,1           . $P INCREMEHB
)@@G@@NT IT @E@@@#BUFLP    L     X6,DBPADR,A3   . $P GET NEXT DBAM PACKET ADDRHC
)@@G@@@G@@@#         S,H2  A0,7,X6        . $P PUT BUF AD IN DBAM PKET AS BLOCHD
)@@G@@K ADDR@G@@@#         S,H1  A2,8,X6        . $P PUT BLOCK SIZE INTO DBAM HE
)@@G@@PACKET      @G@@@#         SZ,S1 3,X6           . $P INITIALIZE PKET STAHF
)@@G@@TUS TO 0          @E@@@#         A     A0,A2          . $P ADD BLOCK SIZHG
)@@G@@E           @E@@@#         JGD   A3,BUFLP       . $P REPEAT FOR OTHER BUHH
)@@G@@FFERS @A@@@#         AN,U  A0,1           .     @E@@@#         S     A0,HI
)@@G@@LAST$D      . $P SAVE NEW LAST-D          @G@@@#         ER    MCORE$   HJ
)@@G@@      . $W MCORE - GET CORE FOR BUFFER          @A@@@#         L,U   A0,HK
)@@G@@'PCH'       .     @G@@@#         ER    NAME$          . $P NAME MAIN ACTHL
)@@G@@IVITY FOR ACT$          @C@@@#         L     R10,A0         . $P SAVE NAHM
)@@G@@ME    @C@@@#         L     A0,(AW 0,1,1,ACTONE) .           @E@@@#      HN
)@@G@@   ER    FORK$          . $P FORK PRIMARY ACTIVITY    @G@@@#         ER HO
)@@G@@   DACT$          . $P WAIT FOR COMPLETION OF PRI ACT       @E@@@#      HP
)@@G@@   SLJ   CHKPT2         . $W CHKPT2 - PRINT STATISTICS@E@@@          TNZHQ
)@@G@@   WRNFLG         . $T WERE ANY WARNINGS PRINTED@E@@@          J     *REHR
)@@G@@TURN        . $E RETURN TO MAIN CONTROL   @G@@@          P$RINT (PF 1,8,HS
)@@G@@WMSG1) . $P PRINT POSSIBLE ERROR BLOCK          @A@@@          P$RINT (PHT
)@@G@@F 1,8,WMSG2) .    @A@@@          P$RINT (PF 1,8,WMSG3) .    @A@@@       HU
)@@G@@   P$RINT (PF 1,8,WMSG4) .    @A@@@          P$RINT (PF 1,8,WMSG2) .    HV
)@@G@@@A@@@          P$RINT (PF 1,8,WMSG1) .    @E@ @#         J     *RETURN  HW
)@@G@@      . $E RETRUN TO MAIN CONTROL   @E@@@          J     *RETURN        HX
)@@G@@. $E RETURN TO MAIN CONTROL   @]@@@# .          @E@@@# .        THIS SECHY
)@@G@@TION OF CODE IS PRIMARY ACTIVITY          @E@@@# .             IT INITIAHZ
)@@G@@LIZES THE GETRNG FUNCTION AND       @E@@@# .             ALL I/O BUFFER IA
)@@G@@PTRS, FORKS ACTNUM SECONDARY  @E@@@# .             ACTIVITIES, AND WAITSIB
)@@G@@ FOR THEIR COMPLETION   @]@@@# .          @E@@@#ACTONE   ER    TSQRG$   IC
)@@G@@      . $P REGISTER TS QUEUEING     @G@@@#         L,H2  A0,C2          ID
)@@G@@. $P INITIALIZE INDICES FOR GETRNG        @A@@@#         LXI,U A0,1     IE
)@@G@@      .     @A@@@#         AN,U  A0,1           .     @E@@@#         S  IF
)@@G@@   A0,SV1         . CURRENT C2 ENTRY ADDR       @A@@@#         L,U   A0,IG
)@@G@@1           .     @E@@@#         S     A0,SV2         . SET LINK NON-ZERIH
)@@G@@O           @E@@@#         TS    RNGTSC         . $P LOCK OUT GETRNG    II
)@@G@@      @A@@@#         L,U   A3,ACTNUM      .     @A@@@#         AN,U  A3,IJ
)@@G@@1           .     @G@@@#STRTLP   L     X3,(-1)        . $P INITIALIZE BUIK
)@@G@@FFER PTRS FOR SEC ACT   @A@@@#         L     A0,A3          .     @A@@@#IL
)@@G@@         MSI,U A0,3           .     @C@@@#         L     X1,A0          IM
)@@G@@. READ BUFFER     @A@@@#         A,U   A0,2           .     @C@@@#      IN
)@@G@@   L     X2,A0          . WRITE BUFFER    @C@@@#         L     X5,KFPADRIO
)@@G@@,A3   . KF$AM PACKET    @A@@@#         L     A0,A3          .     @C@@@#IP
)@@G@@         A,U   A0,2           . ACTIVITY-ID     @A@@@#         LSSL  A0,IQ
)@@G@@6           .     @E@@@#         A,U   A0,1           . USE MAJOR REGISTIR
)@@G@@ER SET      @A@@@#         LSSL  A0,18          .     @C@@@#         A,UIS
)@@G@@   A0,ACTTWO      . ACTIVITY ADDR   @E@@@#         ER    FORK$          IT
)@@G@@. $P FORK SECONDARY ACTIVITY  @E@@@#         JGD   A3,STRTLP      . $T MIU
)@@G@@ORE SEC ACT TO BE FORKED@C@@@#                              . $A NO YES,IV
)@@G@@STRTLP@C@@@#         C$TS  RNGTSC         . $P UNLOCK GETRNG@A@@@#      IW
)@@G@@   L,U   A2,ACTNUM      .     @A@@@#         AN,U  A2,1           .     IX
)@@G@@@E@@@#         L     A1,(0400000000000)  . $P SET UP ACTIVITY MASK@A@@@#IY
)@@G@@         SZ    A0             .     @A@@@#         SSA   A1,0,A2        IZ
)@@G@@.     @A@@@#         LDSL  A0,3,A2        .     @G@@@#         ER    AWAJA
)@@G@@IT$         . $P WAIT FOR COMPLETION OF ALL SEC ACT   @E@@@#         ER JB
)@@G@@   TSQCL$         . $P CLEAR TS QUEUEING        @E@@@#         L     A0,JC
)@@G@@R10         . $P GET MAIN ACTIVITY NAME   @E@@@#         ER    ACT$     JD
)@@G@@      . $P ACTIVATE MAIN ACTIVITY   @C@@@#         ER    EXIT$          JE
)@@G@@. $E EXIT         @]@@@# .          @E@@@# .        THIS SECTION OF CODEJF
)@@G@@ IS SECONDARY ACTIVITY        @E@@@# .             IT GETS THE NEXT RANGJG
)@@G@@E BLOCK TO BE SCANNED   @E@@@# .             FROM GETRNG, CALLS DBAM TO JH
)@@G@@READ THE BLOCK,   @E@@@# .             INITIALIZES THE PATCH PROCESS FORJI
)@@G@@ EACH PAGE  @E@@@# .             OF THE BLOCK, AND ON COMPLETION CALLS DJJ
)@@G@@BAM   @E@@@# .             TO WRITE THE BLOCK IF ANY PATCHES WERE MADE  JK
)@@G@@@E@@@# .             IT EXITS WHEN THERE ARE NO MORE RANGES TO BE @^@@@#JL
)@@G@@ .             SCANNED  @]@@@# .          @]@@@#ACTTWO.     @E@@@#      JM
)@@G@@   L     X6,DBPADR,X1   . $P GET DBAM READ PACKET     @E@@@#         TS JN
)@@G@@   RNGTSC         . $P LOCK OUT GETRNG          @G@@@#         SLJ   GETJO
)@@G@@RNG         . $W GETRNG - SET PKET FOR NEXT PAGE BLOCK@C@@@#         C$TJP
)@@G@@S  RNGTSC         . $P UNLOCK GETRNG@E@@@#         TN    X1             JQ
)@@G@@. $T WAS THERE A BLOCK        @C@@@#         J     RNGE4          . $A NJR
)@@G@@O YES,RNGE4 @E@@@#         TN    X3             . $T IS THIS FIRST BLOCKJS
)@@G@@      @C@@@#         J     RNGEB          . $A YES NO,RNGEB @A@@@#      JT
)@@G@@   ER    EXIT$          . $E  @A@@@#RNGE4    L,U   A1,021         .     JU
)@@G@@@G@@@#         S,S2  A1,3,X6        . $P SET FNC TO READ IN DBAM PACKET JV
)@@G@@      @A@@@#         L     X10,X6         .     @E@@@#         TS    CHKJW
)@@G@@TSC         . $T LOCK OUT CHKPT           @E@@@#         SLJ   CHKPT    JX
)@@G@@      . $W CHKPT - GATHER STATISTICS@C@@@#         C$TS  CHKTSC         JY
)@@G@@. $P UNLOCK CHKPT @G@@@#         LMJ   X11,DB$AM      . $W DB$AM - READ JZ
)@@G@@BLOCK FROM DATA BASE    @E@@@# .   NOTE THAT MINOR REGISTER SET HAS NOT KA
)@@G@@BEEN SAVED        @E@@@#         TN    X3             . $T IS THIS THE FKB
)@@G@@IRST READ   @C@@@#         J     RNGEB          . $A YES NO,RNGEB @E@@@#KC
)@@G@@         TP    3,X6           . $T HAS READ FINISHED        @C@@@#      KD
)@@G@@   ER    WAIT$          . $P WAIT FOR IT  @E@@@#         TZ,S1 3,X6     KE
)@@G@@      . $T WAS READ SUCCESSFUL ?    @C@@@#         LMJ   X11,IOERR      KF
)@@G@@. $A YES NO,IOERR @E@@@#         L     X3,X1          . $P SET BUFFER FOKG
)@@G@@R PROCESSING@E@@@#         L     X1,X2          . $P GET BUFFER FOR NEXTKH
)@@G@@ READ @A@@@#         AN,U  X1,1           .     @C@@@#         J     ACTKI
)@@G@@TWO         . $J ACTTWO       @E@@@#RNGEB    L     X6,DBPADR,X3   . $P GKJ
)@@G@@ET PROCESS DBAM PACKET  @E@@@#         SZ    A8             . $P RESET BKK
)@@G@@LOCK-CHANGED FLAG @E@@@#         L,H1  A6,7,X6        . $P GET PAGE COUNKL
)@@G@@T           @G@@@#         L     A5,A6          . $P SET PAGE LOOP COUNTKM
)@@G@@ER TO NO OF PAGES @A@@@#         AN,U  A5,1           .     @E@@@#      KN
)@@G@@   L,H2  X8,7,X6        . $P GET START OF FIRST PAGE  @G@@@#         L  KO
)@@G@@   X10,X5         . $P SET X10 TO ADDR OF KFAM PACKET       @C@@@#RNGE1 KP
)@@G@@   J     PAGE           . $J PAGE         @E@@@#RNGE2    A,H2  X8,6,X6  KQ
)@@G@@      . $P GET START OF NEXT PAGE   @E@@@#         JGD   A5,RNGE1       KR
)@@G@@. $T MORE PAGES IN BLOCK ?    @C@@@#                              . $A NKS
)@@G@@O YES,RNGE1 @E@@@#         L     X6,DBPADR,X2   . $P GET WRITE DBAM PKETKT
)@@G@@ ADDR @E@@@#         TP    3,X6           . $T HAS LAST WRITE FINISHED  KU
)@@G@@@C@@@#         ER    WAIT$          . $P WAIT FOR IT  @A@@@#         L  KV
)@@G@@   X10,X6         .     @E@@@#         TZ,S1 3,X6           . $T WAS LASKW
)@@G@@T WRITE SUCCESSFUL@C@@@#         LMJ   X11,IOERR      . $A YES NO,IOERR KX
)@@G@@@E@@@#         L     X4,X2          . $P SAVE WRITE BUFFER #      @G@@@#KY
)@@G@@         L     X2,X3          . $P SET WRITE BUFFER TO PROCESS BUFFER   KZ
)@@G@@@G@@@#         L     X6,DBPADR,X2   . $P GET NEW WRITE DBAM PKET ADDR   LA
)@@G@@      @G@@@#         JZ    A8,RNGEC       . $T IS BLOCK-CHANGED FLAG SETLB
)@@G@@ ?          @C@@@#                              . $A YES NO,RNGEC @A@@@#LC
)@@G@@         L,U   A1,011         .     @G@@@#         S,S2  A1,3,X6        LD
)@@G@@. $P SET FNC TO WRITE IN DBAM PACKET      @A@@@#         L     X10,X6   LE
)@@G@@      .     @E@@@#         TS    CHKTSC         . $P LOCK OUT CHKPT     LF
)@@G@@      @E@@@#         SLJ   CHKPT          . $W CHKPT - GATHER STATISTICSLG
)@@G@@@C@@@#         C$TS  CHKTSC         . $P UNLOCK CHKPT @G@@@#         LMJLH
)@@G@@   X11,DB$AM      . $W DB$AM - WRITE BLOCK BACK TO DATA BASE@E@@@#RNGEC LI
)@@G@@   TP    X1             . $T IS THIS LAST WRITE       @C@@@#         J  LJ
)@@G@@   RNGED          . $J RNGED        @E@@@#         L     X6,DBPADR,X1   LK
)@@G@@. $P GET READ DBAM PKET ADDR  @E@@@#         TP    3,X6           . $T HLL
)@@G@@AS LAST READ FINISHED   @C@@@#         ER    WAIT$          . $P WAIT FOLM
)@@G@@R IT  @A@@@#         L     X10,X6         .     @E@@@#         TZ,S1 3,XLN
)@@G@@6           . $T WAS READ SUCCESSFUL ?    @C@@@#         LMJ   X11,IOERRLO
)@@G@@      . $A YES NO,IOERR @G@@@#         L     X3,X1          . $P SET PROLP
)@@G@@CESS BUFFER TO READ BUFFER    @G@@@#         L     X1,X4          . $P SLQ
)@@G@@ET READ BUFFER TO VACANT BUFFER     @C@@@#         J     ACTTWO         LR
)@@G@@. $J ACTTWO       @E@@@#RNGED    L     X6,DBPADR,X2   . $P GET LAST WRITLS
)@@G@@E PACKET    @E@@@#         TP    3,X6           . $T HAS WRITE FINISHED LT
)@@G@@      @C@@@#         ER    WAIT$          . $P WAIT FOR IT  @A@@@#      LU
)@@G@@   L     X10,X6         .     @E@@@#         TZ,S1 3,X6           . $T WLV
)@@G@@AS WRITE SUCCESSFUL     @C@@@#         LMJ   X11,IOERR      . $A YES NO,LW
)@@G@@IOERR @C@@@#         ER    EXIT$          . $E EXIT ACTIVITY@]@@@# .    LX
)@@G@@      @G@@@# .        THIS SECTION OF CODE IS USED BY ALL SECONDARY ACTILY
)@@G@@VITIES      @G@@@# .             TO GET THE NEXT BLOCK-SIZE PAGE RANGE FLZ
)@@G@@ROM C2 AND SET    @C@@@# .             UP DBAM PACKET FOR PAGE BLOCK    MA
)@@G@@@]@@@# .          @A@@@#GETRNG   +     0              .     @G@@@#      MB
)@@G@@   L     A9,SV3         . $P GET # RANGES LEFT IN THIS AREA       @G@@@#MC
)@@G@@         L     A7,SV4         . $P GET REMAINDER OF LAST RANGE          MD
)@@G@@@E@@@#         L     X7,SV5         . $P GET PTR TO C2 CURRENT LOC@A@@@#ME
)@@G@@         L     A0,A7          .     @G@@@#         LSSL  A0,18          MF
)@@G@@. $T ARE THERE MORE PAGES IN RANGE        @C@@@#         JNZ   A0,RNGEA MG
)@@G@@      . $A NO YES,RNGEA @C@@@#RANGE    JZ    A9,AREA1       . $T IS IT ZMH
)@@G@@ERO   @C@@@#                              . $A NO YES,AREA1 @G@@@#      MI
)@@G@@   L     A7,0,*X7       . $P GET NEXT RANGE FROM C2 ENTRY         @G@@@#MJ
)@@G@@         AN,U  A9,1           . $P DECREMENT NO RANGES LEFT IN C2 ENTRY MK
)@@G@@@G@@@#RNGEA    L     A0,A7          . $P GET NUMBER OF PAGES IN RANGE   ML
)@@G@@      @A@@@#         LSSL  A0,18          .     @A@@@#         SSL   A0,MM
)@@G@@18          .     @G@@@#         TG,U  A0,PGPBLK      . $T WILL RANGE FIMN
)@@G@@T INTO BLOCK ?          @E@@@#         L,U   A0,PGPBLK      . $P LIMIT SMO
)@@G@@IZE TO BLOCK SIZE @G@@@#         S,H1  A0,7,X6        . $P PUT PAGE CNT MP
)@@G@@INTO DBAM PACKET        @E@@@#         L     A2,A7          . $P GET STAMQ
)@@G@@RT PAGE OF RANGE  @A@@@#         SSL   A2,18          .     @E@@@#      MR
)@@G@@   S,H2  A2,8,X6        . $P PUT IT IN DBAM PACKET    @G@@@#         AN MS
)@@G@@   A7,A0          . $P REDUCE NO PAGES IN RANGE BY PAGE CNT @A@@@#      MT
)@@G@@   LSSL  A0,18          .     @G@@@#         A     A7,A0          . $P IMU
)@@G@@NCREASE START PG OF RANGE BY PG CNT @G@@@#         DL    A0,ANAME       MV
)@@G@@. $P PUT AREA NAME INTO DBAM PACKET       @A@@@#         DS    A0,0,X6  MW
)@@G@@      .     @E@@@#         S     A9,SV3         . $P SAVE RANGE COUNT   MX
)@@G@@      @E@@@#         S     A7,SV4         . $P SAVE REMAINING RANGE     MY
)@@G@@@C@@@#         S     X7,SV5         . $P SAVE C2 PTR  @C@@@#         J  MZ
)@@G@@   *GETRNG        . $E RETURN       @C@@@#AREA1    L     A0,SV2         NA
)@@G@@. $P GET C2 LINK  @E@@@#         JNZ   A0,AREA        . $T MORE AREAS INNB
)@@G@@ C2         @C@@@#                              . $A NO YES,AREA  @E@@@#NC
)@@G@@         S     A9,SV3         . $P SAVE REGISTERS           @A@@@#      ND
)@@G@@   S     A7,SV4         .     @A@@@#         S     X7,SV5         .     NE
)@@G@@@E@@@#         L     X1,(-1)        . $P SET READS-DONE FLAG      @C@@@#NF
)@@G@@         J     *GETRNG        . $E RETURN       @E@@@#AREA     L     X7,NG
)@@G@@SV1         . $P GET LAST C2 ENTRY        @C@@@#         A     X7,SV2   NH
)@@G@@      . $P ADD LINK     @G@@@#         S     X7,SV1         . $P SAVE ASNI
)@@G@@ START ADDR OF C2 ENTRY       @G@@@#         L,T2  A9,0,X7        . $P GNJ
)@@G@@ET NUMBER OF RANGES THIS AREA       @E@@@#         L,T3  A0,0,X7        NK
)@@G@@. $P GET LINK TO NEXT ENTRY   @C@@@#         S     A0,SV2         . $P SNL
)@@G@@AVE IT      @C@@@#         DL    A0,1,X7        . $P GET AREA NAME@C@@@#NM
)@@G@@         DS    A0,ANAME       . $P SAVE IT      @G@@@#         A,U   X7,NN
)@@G@@3           . $P SET C2 PTR TO FIRST RANGE OF ENTRY   @C@@@#         J  NO
)@@G@@   RANGE          . $J RANGE        @]@@@# .          @E@@@# .   THIS SENP
)@@G@@CTION OF CODE SCANS THE PAGES OF A BLOCK        @A@@@# .        BY SCANNNQ
)@@G@@ING THE SLOTS,    @C@@@# .        AND FOR EACH ONE IN USE ON THE PAGE,  NR
)@@G@@@G@@@# .        IT INITIALIZES THE PATCH PROCESS FOR EACH RECORD ON THE NS
)@@G@@PAGE  @]@@@# .          @C@@@#PAGE.                         . $H PAGE   NT
)@@G@@      @E@@@#         L     A0,X8          . $P GET START OF PAGE        NU
)@@G@@@C@@@#         A,H1  A0,2,X8        . $P ADD PAGE SIZE@G@@@#         AN,NV
)@@G@@U  A0,1           . $P DECREMENT FOR ADDR OF LAST WORD OF PG@G@@@#      NW
)@@G@@   AN,H1 A0,6,X8        . $P SUBTRACT NO CALC CHAINS AT END TO ;  @E@@@#NX
)@@G@@ .                            . $ GET ADDR OF FIRST SLOT    @A@@@#      NY
)@@G@@   LXI,U A0,-1          .     @E@@@#         L,H1  A4,3,X8        . $P GNZ
)@@G@@ET NO OF SLOTS ALLOCATED@G@B@#         AN,U  A4,1           . $P DECREMEOA
)@@G@@NT TO SET SLOT LOOP COUNTER   @B@@@B         J     PAGE2          . $J POB
)@@G@@AGE2  @C@@@#PAGE1    L     A2,0,*A0       . $P GET SLOT     @E@@@#      OC
)@@G@@   AND   A2,(0500000000000) . $P ISOLATE SLOT DESC    @G@@@#         TZ OD
)@@G@@   A3             . $T IS SLOT IN USE FOR RECD ON THIS PG ? @C@@@#      OE
)@@G@@   J     PAGE2          . $A YES NO,PAGE2 @G@@@#         LSSL  A2,18    OF
)@@G@@      . $P GET RECORD DISP FROM TOP OF PAGE     @A@@@#         SSL   A2,OG
)@@G@@18          .     @G@@@#         A     A2,X8          . $P ADD START ADDOH
)@@G@@R OF PAGE TO GET START ;@C@@@# .                            . $ ADDR OF OI
)@@G@@RECORD@C@@@#         J     RECORD         . $J RECORD       @E@@@#PAGE2 OJ
)@@G@@   JGD   A4,PAGE1       . $T MORE SLOTS TO CHECK ?    @C@@@# .          OK
)@@G@@                  . $A NO YES,PAGE1 @C@@@#         J     RNGE2          OL
)@@G@@. $J RNGE2        @]@@@# .          @E@@@# .   THIS SECTION OF CODE TAKEOM
)@@G@@S A RECORD FROM THE PAGE,     @C@@@# .        CHECKS IF IT IS OF AN AFFEON
)@@G@@CTED TYPE,  @E@@@# .        AND IF SO SCANS ALL POSSIBLY AFFECTED POINTEOO
)@@G@@RS    @G@@@# .             ANY CHANGED POINTERS WILL BE PATCHED TO THE NOP
)@@G@@EW VALUE,   @G@@@# .             AND THE BLOCK-CHANGED FLAG WILL BE SET OQ
)@@G@@IF ANY CHANGES    @]@@@# .          @G@@@#RECORD   L,T1  A1,0,A2        OR
)@@G@@. $P GET RECORD CODE FROM RECORD HEADER   @G@@@#         L     X9,(1,AFROS
)@@G@@CDT)  . $P SET INDEX TO AFFECTED RECORD TABLE   @G@@@#         L     R1,OT
)@@G@@ARTCNT      . $P GET NO OF AFFECTED RECORD TYPES      @G@@@#         SE,OU
)@@G@@T1 A1,0,*X9       . $P SEARCH AF RCD TBL FOR REC CODE       @E@@@# .    OV
)@@G@@                        . $T WAS IT FOUND ?           @C@@@#         J  OW
)@@G@@   PAGE2          . $A YES NO,PAGE2 @E@@@#         AN,U  X9,1           OX
)@@G@@. $P POINT TO AF RCD TBL ENTRY@G@@@#         L,H2  X9,0,X9        . $P GOY
)@@G@@ET START ADDR OF C1 ENTRY           @C@@@#         LXI,U X9,1           OZ
)@@G@@. $P SET C1 INDEX @G@@@#         A,U   X9,1           . $P SET C1 INDEX PA
)@@G@@TO FIRST PTR WORD       @E@@@#         L     R15,A1         . $P SAVE REPB
)@@G@@CD CODE           @E@@@#         L     R3,A0          . $P SAVE CONTENTSPC
)@@G@@ OF A0      @G@@@#REC2     TP    0,X9           . $T IS THIS MANUAL PTR PD
)@@G@@WORD OF C1 ?      @C@@@#         J     MANCHK         . $A NO YES,MANCHKPE
)@@G@@@G@@@#         AU,S6 A2,0,X9        . $P ADD POINTER DISP TO START OF REPF
)@@G@@CORD  @G@@@#         LXI,U A3,1           . $P SET INDEX TO 'NEXT' LINK PG
)@@G@@OF POINTER  @C@@@#         L,T2  R14,0,X9       . $P SAVE SET CODE@A@@@#PH
)@@G@@         L     R13,X9          .    @G@@@#         L,S2  A1,0,*X9       PI
)@@G@@. $P GET NUMBER OF LINKS IN POINTER       @G@@@#         LMJ   X4,PTRCHKPJ
)@@G@@      . $W PTRCHK - CHECK ALL LINKS OF POINTER ;@E@@@# .                PK
)@@G@@            . $ AND PATCH IF NECESSARY    @C@@@#         J     REC2     PL
)@@G@@      . $J REC2         @G@@@#MANCHK   TNZ,S2 0,X9          . $T ARE THEPM
)@@G@@RE ANY MANUAL PTRS AFFECTED ? @C@@@#         J     REC3           . $A YPN
)@@G@@ES NO,REC3  @G@@@#         AU,S6 A2,0,*X9       . $P GET ADDR OF MFCW FOPO
)@@G@@R RECORD          @E@@@#         LXI,U A3,1           . $P SET MANUAL PTPP
)@@G@@R INDEX     @C@@@#         L     A10,0,*A3      . $P GET NFCW     @G@@@#PQ
)@@G@@         AND   A10,0,X9       . $P AND MFCW AND AFFECTED MASK TO GET ;  PR
)@@G@@@E@@@# .                            . $ OCCURRING AFFECTED MASK   @G@@@#PS
)@@G@@         TN    A11            . $T ARE THERE ANY OCCURRING AFFCTD PTRS ?PT
)@@G@@@C@@@#         JZ    A11,REC3       . $A YES NO,REC3  @E@@@#         L,UPU
)@@G@@   A2,1           . $P SET C1 MANUAL PTR INDEX  @G@@@#MAN2     JP    A10PV
)@@G@@,MAN3       . $T DOES THIS PTR OCCUR IN THIS RECORD ? @C@@@# .          PW
)@@G@@                  . $A YES NO,MAN3  @G@@@#         L     X11,X9         PX
)@@G@@. $P GET START OF C1 MAN PTR LIST         @E@@@#         A     X11,A2   PY
)@@G@@      . $P ADD DISP TO CURRENT SET  @G@@@#         JN    A11,MAN4       PZ
)@@G@@. $T CAN POINTER HAVE BEEN AFFECTED ?     @C@@@# .                      QA
)@@G@@      . $A NO YES,MAN4  @G@@@#         A,S2  A3,0,X11       . $P INCR MAQB
)@@G@@NUAL PTR INDEX PAST PTR IN REC@G@@@#MAN3     LSSL  A10,1          . $P SQC
)@@G@@HIFT MFCW MASK TO NEXT SET          @G@@@#         LSSL  A11,1          QD
)@@G@@. $P SHIFT OCCURRING AFFCTD MASK 2 NXT SET@G@@@#         A,U   A2,1     QE
)@@G@@      . $P INCREMENT C1 MANUAL PTR INDEX        @G@@@#         JNZ   A11QF
)@@G@@,MAN2       . $T ARE THERE MORE AFFECTED PTRS ?       @C@@@# .          QG
)@@G@@                  . $A NO YES,MAN2  @E@@@#REC3     L     A0,R3          QH
)@@G@@. $P RESTORE CONTENTS OF A0   @C@@@#         J     PAGE2          . $J PQI
)@@G@@AGE2        @C@@@#MAN4     L,T2  R14,0,X11      . $P SAVE SET CODE@A@@@#QJ
)@@G@@         L     R13,X11         .    @G@@@#         L,S2  A1,0,X11       QK
)@@G@@. $P GET NUMBER OF LINKS IN POINTER       @G@@@#         LMJ   X4,PTRCHKQL
)@@G@@      . $W PTRCHK - CHECK ALL LINKS OF POINTER ;@E@@@# .                QM
)@@G@@            . AND PATCH IF NECESSARY      @C@@@#         J     MAN3     QN
)@@G@@      . $J MAN3         @]@@@# .          @E@@@# .   THIS SECTION OF CODQO
)@@G@@E CHECKS ALL LINKS IN A POINTER     @C@@@# .        TO SEE IF THEY ARE CQP
)@@G@@HANGED DB PTRS    @A@@@# .        ANY FOUND WILL BE UPDATED @C@@@# .    QQ
)@@G@@    AND THE BLOCK-CHANGED FLAG WILL BE SET@C@@@# .                      QR
)@@G@@      . $H PTRCHK       @E@@@#PTRCHK   AN,U  A1,1           . $P SET LINQS
)@@G@@K LOOP COUNTER    @E@@@#PCHK1    L     A0,0,*A3       . $P GET DB POINTEQT
)@@G@@R           @E@@@#         S     A0,3,X10       . $P PUT IT IN KFAM PACKQU
)@@G@@ET    @E@@@#         L     R2,A1          . $P SAVE VALUE OF A1         QV
)@@G@@@E@@@#         L     A1,ASHFT       . $P GET AREA SHIFT COUNT     @C@@@#QW
)@@G@@         SSL   A0,0,A1        . $P GET AREA CODE@G@@@A         JZ    A0,QX
)@@G@@PCHK10      . $T IS POINTER TO ARTIFICIAL DBP (CODE=0)@C@@@A            QY
)@@G@@                  . $A NO YES,PCHK10@E@^@#         L     A1,(1,ARETBL)  QZ
)@@G@@. $SET PTRS FOR A-TBL SEARCH  @E@@@^         L     A1,(1,ARETBL)  . $P SRA
)@@G@@ET PTRS FOR A-TBL SEARCH@A@@@#         L     R1,ARECNT      .     @G@@@#RB
)@@G@@         SE    A0,0,*A1       . $T IS THIS CODE FOR AFFECTED AREA       RC
)@@G@@@C@@@#         J     BADARE         . $A YES NO,BADARE@E@A@#         L  RD
)@@G@@   A1,R2          . $P RESTORE VALUE OF A1      @E@@@APCHK10   L     A1,RE
)@@G@@R2          . $P RESTORE VALUE OF A1      @G@@@#         LMJ   X11,KF$AMRF
)@@G@@R     . $W KF$AMR - SEE IF DB PTR IS IN K-FILE  @E@@@#         TZ    5,XRG
)@@G@@10          . $T WAS FIND SUCCESSFUL ?    @C@@@#         J     PCHK2    RH
)@@G@@      . $A YES NO,PCHK2 @G@@@#         L,H1  A0,4,X10       . $P GET NEWRI
)@@G@@ VALUE,H1 OF DBP FROM KFAM PKT@E@@@#         JZ    A0,ZPTR        . $T IRJ
)@@G@@S NEW DBP ZERO          @C@@@#                              . $A NO YES,RK
)@@G@@ZPTR  @G@^@#         TNE,U A0,1           . $T IS RECORD A RECORDU RECORRL
)@@G@@D           @C@^@#         J     PCHK2          . $A NO YES,PCHK2 @G@@@#RM
)@@G@@         L     A0,4,X10       . $P GET NEW VALUE OF DBP FROM KFAM PACKETRN
)@@G@@@E@@@#PCHK11   AN,U  A3,1           . $P RESET INDEX TO THIS SLOT @E@@@#RO
)@@G@@         S     A0,0,*A3       . $P STORE NEW DBP IN RECORD  @E@@@#      RP
)@@G@@   A,U   A8,1           . $P SET BLOCK-CHANGED FLAG   @G@@@#PCHK2    JGDRQ
)@@G@@   A1,PCHK1       . $T MORE LINKS IN THIS POINTER ?         @C@@@# .    RR
)@@G@@                        . $A NO YES,PCHK1 @C@@@#         J      0,X4    RS
)@@G@@      . $E RETURN       @]@@@# .          @C@@@# .        ZERO VALUE DBPRT
)@@G@@ WARNING ROUTINE        @]@@@# .          @C@@@#ZPTR.                   RU
)@@G@@      . $H ZPTR         @E@@@#         TS    ZPTSC          . $P LOCK OURV
)@@G@@T WARNING ROUTINE @E@@@#         SLJ   ZPWARN         . $W ZPWARN - PRINRW
)@@G@@T WARNING   @E@@@          L,U   A0,1           . $P SET WARNINGS-PRINTERX
)@@G@@D FLAG@A@@@          S     A0,WRNFLG      .     @E@@@#         C$TS  ZPTRY
)@@G@@SC          . $P UNLOCK WARNING ROUTINE   @E@@@#         SZ    A0       RZ
)@@G@@      . $P SET NEW DBP VALUE TO ZERO@C@@@#         J     PCHK11         SA
)@@G@@. $J PCHK11       @]@@@# .          @C@@@# .        UNKNOWN AREA WARNINGSB
)@@G@@ ROUTINE          @]@@@# .          @C@@@#BADARE.                       SC
)@@G@@. $H BADARE       @E@@@#         L     A1,R2          . $P RESTORE VALUESD
)@@G@@ A1         @E@@@#         TS    BDTSC          . $P LOCK OUT WARNING ROSE
)@@G@@UTINE @E@@@#         SLJ   BDWARN         . $W BDWARN - PRINT WARNING   SF
)@@G@@@E@@@          L,U   A0,1           . $P SET WARNINGS-PRINTED FLAG@A@@@ SG
)@@G@@         S     A0,WRNFLG      .     @E@@@#         C$TS  BDTSC          SH
)@@G@@. $P UNLOCK WARNING ROUTINE   @E@@@#         SZ    A0             . $P SSI
)@@G@@ET NEW DBP VALUE TO ZERO@C@@@#         J     PCHK11         . $J PCHK11 SJ
)@@G@@      @]@@@# .          @C@@@# .   THIS SECTION OF CODE IS INTERNAL ERROSK
)@@G@@R EXIT@]@@@# .          @C@@@#ERROR.                        . $H ERROR  SL
)@@G@@      @G@@@#         P$RINT (PF 1,5,ERMSG) . $P PRINT ERROR MESSAGE AND SM
)@@G@@TERMINATE   @A@@@#         ER    ERR$           . $E  @]@@@# .          SN
)@@G@@@C@@@#MAXACT.                       . $H MAXACT       @G@@@#         P$RSO
)@@G@@INT (PF 1,12,MAXMSG)  . $P PRINT ERROR MESSAGE AND TERMINATE@A@@@#      SP
)@@G@@   ER    ERR$           . $E  @]@@@# .          @]@@@# .          @]@@@#SQ
)@@G@@$(6).       @C@@@#KCNT      +         0                 .         @C@@@#SR
)@@G@@K2CNT     +         0                 .         @]@@@# .          @A@@@#SS
)@@G@@RETURN   +     0              .     @A@@@ WRNFLG   +     0              ST
)@@G@@.     @A@@@#DBPADR   +     PDBPKT         .     @A@@@#         RES   59 SU
)@@G@@            .     @A@@@#KFPADR   RES   20             .     @A@@@#ANAME SV
)@@G@@   RES   2              .     @]@@@#PDBPKT*.    @A@@@#         DO    9 ,SW
)@@G@@   +   0 .        @A@@@#SV1      +     0              .     @A@@@#SV2   SX
)@@G@@   +     0              .     @A@@@#SV3      +     0              .     SY
)@@G@@@A@@@#SV4      +     0              .     @A@@@#SV5      +     0        SZ
)@@G@@      .     @A@@@#ZEROPT   +     0,ZERO         .     @A@@@#ZERO     +  TA
)@@G@@   0              .     @A@@@#RNGTSC   T$CELL                .    @A@@@#TB
)@@G@@CHKTSC   T$CELL                .    @A@@@#ZPTSC    T$CELL               TC
)@@G@@.     @A@@@#BDTSC    T$CELL               .     @C@@@#ERMSG    'PATCH FOTD
)@@G@@UND NO C3 ENTRIES'  .         @E@@@#MAXMSG   'ERROR: PATCH ATTEMPTED USITE
)@@G@@NG MORE THAN 20 ' .     @C@@@#         'ACTIVITIES (ACTNUM>20) - ERR$!' TF
)@@G@@.     @G@@@ WMSG1    '************************************************' TG
)@@G@@ .          @G@@@ WMSG2    '*****                                      *TH
)@@G@@****'  .          @G@@@ WMSG3    '*****        PATCH MAY BE IN ERROR    TI
)@@G@@     *****'  .          @G@@@ WMSG4    '*****      SEE WARNINGS PRINTED TJ
)@@G@@ABOVE      *****'   .         @^@@@#         END   .        ___         TK
)@@G@@@]@@@# .          @E@@@# .   THIS SECTION OF CODE CHECKS ALL LINKS IN A TL
)@@G@@POINTER     @C@@@# .        TO SEE IF THEY ARE C*[@@@@*SDFF*@[@@@@$(1)  TM
)@@G@@@#@@@@          AXR$    @]@@@[ .          @]@@@[ .          @]@@@[ .    TN
)@@G@@      @C@@@[ .   *** RELOAD PROCESS ERROR CODES ***         @]@@@[ .    TO
)@@G@@      @]@@@[ .          @A@@@[ . ERROR CODE:      EXPLANATION:    @]@@@[TP
)@@G@@ .          @C@@@[ .  1               EMPTY C3 OR C5 TABLE.       @]@@@[TQ
)@@G@@ .          @G@@@[ .  2               CANNOT FIND CALC PROCEDURE NAME INTR
)@@G@@ CLSEG$.          @]@@@[ .          @E@@@[ .  3               CANNOT FINTS
)@@G@@D RECORD CODE IN Z2 TABLE.    @]@@@[ .          @I@@@[ .  4             TT
)@@G@@  INTERNAL ERROR     DESTINATION AREA CODE 0 ENCOUNTERED          @G@@@[TU
)@@G@@ .                    IN DESARE AFTER THE DECOMPOSITION OF THE RECORD'S TV
)@@G@@@E@@@[ .                    DBP RETURNED ZERO AREA CODE.          @]@@@[TW
)@@G@@ .          @G@@@[ .  5               DESTINATION AREA CODE = 0 ENCOUNTETX
)@@G@@RED IN DESARE.    @]@@@[ .          @G@@@[ .  6               C3 TABLE STY
)@@G@@EARCH FOR DESTINATION AREA CODE FAILED.   @]@@@[ .          @G@@@[ .  7 TZ
)@@G@@              INTERNAL ERROR     ERROR RETURN FROM BUFFER ROUTINE @G@@@[UA
)@@G@@ .                    ON A CODE 1 CALL (GET PAGE SPECIFIED WITH PAGE    UB
)@@G@@@E@@@[ .                    RANGE CHECK). ERROR CODE IN BUFPKT,,H1@]@@@[UC
)@@G@@ .          @I@@@[ .  8               INTERNAL ERROR     PAGE # REQUESTEUD
)@@G@@D FROM BUFFER ROUTINE         @G@@@[ .                    ON A CODE 1 CAUE
)@@G@@LL WAS NOT MADE CURRENT IN CURPGE.  @]@@@[ .          @G@@@[ .  9       UF
)@@G@@        PAGE REQUESTED FROM BUFFER ROUTINE ON A CODE 1 CALL @G@@@[ .    UG
)@@G@@                IS EXPECTED TO BE A DATA PAGE BUT IS NOT. CURADD  @G@@@[UH
)@@G@@ .                    POINTS TO PAGE RETURNED. PROBABLE CAUSE OF ERROR  UI
)@@G@@@G@@@[ .                    IS HAVING WRONG C$FILE, SCHEMA(S) OR AREA.  UJ
)@@G@@      @]@@@[ .          @I@@@[ . 10               INTERNAL ERROR     ERRUK
)@@G@@OR RETURN FROM BUFFER ROUTINE ON          @G@@@[ .                    A UL
)@@G@@CODE 6 CALL(GET FIRST DATA PAGE IN RANGE).      @E@@@[ .                UM
)@@G@@    ERROR CODE IS IN BUFPKT,,H1           @]@@@[ .          @G@@@[ . 11 UN
)@@G@@              COMPOSED DBP AS RETURNED BY APS$DBP IS ZERO.        @]@@@[UO
)@@G@@ .          @G@@@[ . 12               ERROR RETURN FROM KEY FILE ACCESS UP
)@@G@@METHOD KF$AM.     @]@@@[ .          @I@@@[ . 13               INTERNAL EUQ
)@@G@@RROR     ERROR RETURN FROM THE BUFFER ROUTINE         @G@@@[ .          UR
)@@G@@          ON A CODE 1 CALL (GET DATA PAGE SPECIFIED WITH    @G@@@[ .    US
)@@G@@                PAGE RANGE CHECK). ERROR CODE IN BUFPKT,,H1       @]@@@[UT
)@@G@@ .          @G@@@[ . 14               ERROR RETURN FROM THE BUFFER ROUTIUU
)@@G@@NE ON A CODE 7    @G@@@[ .                    CALL ( GET NEXT DATA PAGE UV
)@@G@@IN RANGE). ERROR CODE   @G@@@[ .                    IS IN BUFPKT,,H1 . PUW
)@@G@@ROBABLY OUT OF SPACE IN THAT  @A@@@[ .                    RANGE.        UX
)@@G@@@]@@@[ .          @G@@@[ . 15               CALC ITEM COUNT = 0 FOR A CAUY
)@@G@@LC RECORD. PROBABLE     @C@@@[ .                    CAUSE IS A BAD C$FILUZ
)@@G@@E.    @]@@@[ .          @G@@@[ . 16               DESTINATION AREA CODE VA
)@@G@@= 0 ENCOUNTERED JUST BEFORE   @C@@@[ .                    CALLING THE CAVB
)@@G@@LC ROUTINE. @]@@@[ .          @G@@@[ . 17               C3 TABLE SEARCH VC
)@@G@@FOR AREA TO CALC TO FAILED.         @]@@@[ .          @G@@@[ . 18       VD
)@@G@@        C3 TABLE SEARCH FOR AREA NAME RETURNED BY THE CALC  @G@@@[ .    VE
)@@G@@                ROUTINE(X10 POINTS TO AREA NAME) FAILED.          @]@@@[VF
)@@G@@ .          @G@@@[ . 19               CANNOT FIND AREA ENTRY FOR AREA COVG
)@@G@@DE TO CALC TO IN  @G@@@[ .                    THE Z2 ENTRY FOR THE RECORVH
)@@G@@D TYPE THAT IS BEING    @A@@@[ .                    RELOADED.     @]@@@[VI
)@@G@@ .          @G@@@[ . 20               PAGE NUMBER RETURNED BY   CALC ROUVJ
)@@G@@TINE < LOWER RANGE@G@@@[ .                    FOR RECORD IN THE AREA SPEVK
)@@G@@CIFIED. PROBABLE CAUSE  @C@@@[ .                    IS A BAD CALC ROUTINVL
)@@G@@E.    @]@@@[ .          @G@@@[ . 21               PAGE NUMBER RETURNED BVM
)@@G@@Y  CALC ROUTINE > UPPER RANGE @G@@@[ .                    FOR RECORD IN VN
)@@G@@THE AREA SPECIFIED. PROBABLE CAUSE  @C@@@[ .                    IS A BADVO
)@@G@@ CALC ROUTINE.    @]@@@[ .          @I@@@[ . 22               INTERNAL EVP
)@@G@@RROR     ERROR RETURN FROM BUFFER ROUTINE ON          @G@@@[ .          VQ
)@@G@@          A CODE 1 CALL (GET DATA PAGE SPECIFIED WITH A PAGE@E@@@[ .    VR
)@@G@@                RANGE CHECK) ERROR CODE IN BUFPKT,,H1.@]@@@[ .          VS
)@@G@@@G@@@[ . 23               POINTER COMPOSED FOR CALC CHAIN HEADER = 0 UPOVT
)@@G@@N     @C@@@[ .                    RETURN FROM APS$DBP.      @]@@@[ .    VU
)@@G@@      @I@@@[ . 24               INTERNAL ERROR     POINTER COMPOSED FOR VV
)@@G@@RELOADED RECORD         @E@@@[ .                    IS ZERO UPON RETURN VW
)@@G@@FROM APS$DBP.     @]@@@[ .          @I@@@[ . 25               ERROR RETUVX
)@@G@@RN FROM KEY FILE ACCESS METHOD             INSERTI    @E@@@[ .          VY
)@@G@@               NEW POINTER IN THE KEY FILE.     @]@@@[ .          @I@@@[VZ
)@@G@@ . 26               INTERNAL ERROR     POINTER TO RECORD HEADER POINTS PWA
)@@G@@AST         @C@@@[ .                    THE SLOT FOR THAT RECORD. @]@@@[WB
)@@G@@ .          @G@@@[ . 27               ERROR RETURN TRYING TO FIND RELATIWC
)@@G@@VE LOCATION OF A  @G@@@[ .                    CALC POINTER WITHIN A RECOWD
)@@G@@RD WHILE TRAVERSING A   @G@@@[ .                    CALC CHAIN. PROBABLEWE
)@@G@@ CAUSE IS ENCOUNTERING A REC  @G@@@[ .                    TYPE WHICH IS WF
)@@G@@UNKNOWN TO THE REORGANIZATION.      @]@@@[ .          @G@@@[ . 28       WG
)@@G@@        ERROR RETURN TRYING TO GET AN OVERFLOW PAGE. PAGE   @G@@@[ .    WH
)@@G@@                RETURNED IS A DATA PAGE. PROBABLE CAUSE IS WRONG  @G@@@[WI
)@@G@@ .                    C$FILE, SCHEMA(S) OR AREA IMPROPERLY INITIALIZED. WJ
)@@G@@@]@@@[ .          @I@@@[ . 29               INTERNAL ERROR     ERROR RETWK
)@@G@@URN FROM BUFFER ROUTINE ON          @G@@@[ .                    A CODE 5WL
)@@G@@ CALL ( GET PAGE DIRECTLY WITHOUT PAGE    @A@@@[ .                    RAWM
)@@G@@NGE CHECK)  @]@@@[ .          @G@@@[ . 30               PAGE OBTAINED ISWN
)@@G@@ EXPECTED TO BE AN OVERFLOW PAGE BUT@E@@@[ .                    IS NOT. WO
)@@G@@BAD CALC CHAIN PROBABLY.      @]@@@[ .          @G@@@[ . 31             WP
)@@G@@  NEW DATA BASE POINTER COMPOSED = 0 UPON RETURN FROM @A@@@[ .          WQ
)@@G@@          APS$DBP       @]@@@[ .          @G@@@[ . 32               ERROWR
)@@G@@R RETURN FROM KEY FILE ACCESS METHOD. TRYING TO @E@@@[ .                WS
)@@G@@    INSERT NEW POINTER IN KEY FILE        @]@@@[ .          @G@@@[ . 33 WT
)@@G@@              ERROR RETURN TRYING TO FIND RELATIVE LOCATION OF A  @G@@@[WU
)@@G@@ .                    CALC POINTER WITHIN A RECORD WHILE TRAVERSING A   WV
)@@G@@@G@@@[ .                    CALC CHAIN. PROBABLE CAUSE IS ENCOUNTERING AWW
)@@G@@ REC  @G@@@[ .                    TYPE WHICH IS UNKNOWN TO THE REORGANIZWX
)@@G@@ATION.      @]@@@[ .          @I@@@[ . 34               INTERNAL ERROR  WY
)@@G@@   ERROR RETURN FROM BUFFER ROUTINE ON          @G@@@[ .                WZ
)@@G@@    A CODE 1 CALL ( GET DATA PAGE SPECIFIED WITH A    @G@@@[ .          XA
)@@G@@          PAGE RANGE CHECK). ERROR CODE IN BUFPKT,,H1.      @]@@@[ .    XB
)@@G@@      @G@@@[ . 35               ERROR RETURN FROM THE BUFFER ROUTINE ON XC
)@@G@@A CODE 5    @G@@@[ .                    CALL. ERROR CODE IN BUFPKT,,H1. XD
)@@G@@PROBABLY A BAD    @A@@@[ .                    CALC CHAIN.   @]@@@[ .    XE
)@@G@@      @G@@@[ . 36               ERROR RETURN FROM THE BUFFER ROUTINE ON XF
)@@G@@A CODE 5    @G@@@[ .                    CALL TO MAKE THE FOREIGN PAGE CUXG
)@@G@@RRENT. ERROR CODE @A@@@[ .                    IN BUFPKT,,H1.@]@@@[ .    XH
)@@G@@      @A@@@[ . 37               BAD CALC CHAIN. @]@@@[ .          @G@@@[XI
)@@G@@ . 38               ERROR RETURN FROM THE BUFFER ROUTINE ON A CODE 2 OR XJ
)@@G@@@G@@@[ .                    CODE 3 CALL ( GET 1ST OR NEXT OVERFLOW PAGE XK
)@@G@@AFTER @G@@@[ .                    THE CURRENT PAGE). ERROR CODE IN BUFPKXL
)@@G@@T,,H1       @]@@@[ .          @G@@@[ . 39               INTERNAL ERROR  XM
)@@G@@   ERROR RETURN FROM BUFFER ROUTINE @G@@@[ .                    ON A CODXN
)@@G@@E 8 CALL (FLUSH DATA BUFFERS).ERROR CODE  @A@@@[ .                    INXO
)@@G@@ BUFPKT,,H1.@]@@@[ .          @G@@@[ . 40               ERROR RETURN FROXP
)@@G@@M KEY FILE ACCESS METHOD ON A CALL  @E@@@[ .                    TO FLUSHXQ
)@@G@@ THE KEY FILE BUFFERS.        @]@@@[ .          @G@@@[ . 41             XR
)@@G@@  C3 TABLE SEARCH FOR AREA CODE FAILED. IN PROCESS    @G@@@[ .          XS
)@@G@@          OF BUILDING C4 TABLE ( EXTERNAL NAME C16 ).       @]@@@[ .    XT
)@@G@@      @G@@@[ . 42               LOWER PAGE RANGE OF Z2 AREA ENTRY = 0. IXU
)@@G@@N THE       @G@@@[ .                    PROCESS OF BUILDING C4 TABLE (EXXV
)@@G@@TERNAL NAME C16). @]@@@[ .          @G@@@[ . 43               INTERNAL EXW
)@@G@@RROR     ERROR RETURN FROM MRGSML ( NO    @E@@@[ .                    SMXX
)@@G@@ALLEST ENTRY IN MERGE TABLE.        @]@@@[ .          @G@@@[ . 44       XY
)@@G@@        NO PAGE RANGE FOR RECORD SPECIFIED FOR THE INDICATED@A@@@[ .    XZ
)@@G@@                AREA.         @]@@@[ .          @C@@@[ . 45             YA
)@@G@@  PAGE # RETURNED BY CALC = 0.@]@@@[ .          @G@@@[ . 46             YB
)@@G@@  RECORD # SPECIFIED BY THE DIRECT CONTROL RECORD = 0.@]@@@[ .          YC
)@@G@@@G@@@[ . 47               INTERNAL ERROR     TRYING TO GET A RECORD NUMBYD
)@@G@@ER.   @]@@@[ .          @E@@@[ . 48               RECORD NUMBER IS NEGATYE
)@@G@@IVE OR ZERO.      @]@@@[ .          @A@@@[ . 49               NOT USED  YF
)@@G@@      @]@@@[ .          @E@@@[ . 50               SLOT POINTED TO BY CALYG
)@@G@@C CHAIN NOT IN USE@]@@@[ .          @G@@@[ . 51               ERROR RETUYH
)@@G@@RN FROM CLPFND IN TRYING TO FIND RELATIVE @G@@@[ .                    LOYI
)@@G@@CATION OF CALC POINTER WITHIN RECORD. PROBABLY  @G@@@[ .                YJ
)@@G@@    ENCOUNTERED A RECORD WHICH IS UNKNOWN TO THE      @C@@@[ .          YK
)@@G@@          REORGANIZATION.           @]@@@[ .          @G@@@[ . 52       YL
)@@G@@        NO SLOTS ALLOCATED ON PAGE WHILE TRAVERSING THE     @E@@@[ .    YM
)@@G@@                CALC CHAIN. FOREIGN PAGE ACCESSED.    @]@@@[ .          YN
)@@G@@@G@@@[ . 53               NO SLOTS IN USE ON PAGE. FOREIGN PAGE ACCESSEDYO
)@@G@@.     @]@@@[ .          @C@@@[ . 54               NO FOREIGN POINTER INDYP
)@@G@@ICATOR@]@@@[ .          @I@@@[ . 55               ERROR RETURN FROM CLPFYQ
)@@G@@ND                             TRYING     @G@@@[ .                    POYR
)@@G@@INTER WITHIN CALC RECORD ON FOREIGN PAGE.       @G@@@[ .                YS
)@@G@@    PROBABLY ENCOUNTERED A RECORD WHICH IS UNKNOWN TO @C@@@[ .          YT
)@@G@@          THE REORGANIZATION.       @]@@@[ .          @G@@@[ . 56       YU
)@@G@@        PAGE TYPE ERROR    EXPECTING INTERSPERSED OR GLOBAL @G@@@[ .    YV
)@@G@@                OVERFLOW (DMSLEV5 NOT SET). IN PROCESS OF BUILDING@G@@@[YW
)@@G@@ .                    OVERFLOW RANGES TO BE USED IN BUILDIG C4 TABLE.   YX
)@@G@@@]@@@[ .          @E@@@[ . 57               ERROR IN INSERTING ENTRY IN YY
)@@G@@C4 TABLE.   @]@@@[ .          @E@@@[ . 58               INTERNAL ERROR  YZ
)@@G@@   PAGE TYPE ERROR.     @]@@@[ .          @A@@@[ . 59               INTEZA
)@@G@@RNAL ERROR. @]@@@[ .          @A@@@[ . 60               PAGE TYPE ERROR ZB
)@@G@@@]@@@[ .          @E@@@[ . 61               C3 TABLE SEARCH FOR AREA CODZC
)@@G@@E FAILED.   @]@@@[ .          @G@@@[ . 62               # OF WORDS READ ZD
)@@G@@BY THE DATA BASE ACCESS METHOD NOT  @C@@@[ .                    MULTIPLEZE
)@@G@@ OF PAGE SIZE.    @]@@@[ .          @G@@@[ . 63               CALC CHAINZF
)@@G@@ DOES NOT REMAIN IN AREA WHERE RECORD     @G@@@[ .                    HAZG
)@@G@@S CALC'D. CAN ELIMINATE PROBLEM IF ALL RECORD   @G@@@[ .                ZH
)@@G@@    TYPES ON THE CALC CHAIN ARE REORGANIZED.          @]@@@[ .          ZI
)@@G@@@G@@@[ . 64               PAGE # OUT OF RANGE OF AREA. POSSIBLE CAUSE ISZJ
)@@G@@      @E@@@[ .                    HAVING WRONG C$FILE, SCHEMA OR AREA.  ZK
)@@G@@@]@@@[ .          @C@@@[ . 65               NO MORE SPACE IN AREA       ZL
)@@G@@@]@@@[ .          @G@@@[ . 66               INTERNAL ERROR     SUM AS DEZM
)@@G@@TERMINED IN CHKPGE IS   @G@@@[ .                    GREATER THAN TOTAL #ZN
)@@G@@ OFPAGES - GLOBAL OVERFLOW.   @]@@@[ .          @]@@@[ .          @]@@@[ZO
)@@G@@ .          @]@@@[ .          @G@@@[ . 67               PAGE TYPE ERROR ZP
)@@G@@   PAGE EXPECTED TO BE OVERFLOW.    @]@@@[ .          @A@@@[ . 68       ZQ
)@@G@@        BAD C3 TABLE    @]@@@[ .          @G@@@[ . 69               PAGEZR
)@@G@@ TYPE ERROR    PROBABLE CAUSE IS HAVING WRONG   @C@@@[ .                ZS
)@@G@@    C$FILE, SCHEMA OR AREA.   @]@@@[ .          @G@@@[ . 70             ZT
)@@G@@  PAGE TYPE ERROR    PAGE # REQUESTED IN BUFPKT IS    @G@@@[ .          ZU
)@@G@@          SUPPOSED TO CORRESPOND TO A DATA PAGE. PROBABLE   @G@@@[ .    ZV
)@@G@@                CAUSE IS HAVING WRONG C$FILE, SCHEMA OR AREA.     @]@@@[ZW
)@@G@@ .          @]@@@[ .          @G@@@[ . 71               SUM AS DEFINED IZX
)@@G@@N CHKPGE >    TOTAL # OF PAGES      @E@@@[ .                    ALLOCATEZY
)@@G@@D - # OF AT END OVERFLOW.     @]@@@[ .          @A@@@[ . 72             ZZ
)@@G@@  PAGE TYPE ERROR @]@@@[ .          @G@@@[ . 73               NO AT END AA
)@@G@@OVERFLOW. HAVE ALREADY DETERMINED NO      @G@@@[ .                    INAB
)@@G@@TERSPERSED AND DMSLEV5 SWITCH NOT SET.          @]@@@[ .          @G@@@[AC
)@@G@@ . 74               INTERNAL ERROR     TRYING TO FLUSH BUFFERS OUT.     AD
)@@G@@@]@@@[ .          @I@@@[ . 75               C3 TABLE SEARCH FOR AREA CODAE
)@@G@@E FAILED                 FLUSHIN    @]@@@[ .          @G@@@[ . 76       AF
)@@G@@        ERROR RETURN FROM DATA BASE ACCESS METHOD WRITE.    @]@@@[ .    AG
)@@G@@      @G@@@[ . 77               ERROR RETURN FROM DATA BASE ACCESS METHOAH
)@@G@@D READ.     @]@@@[ .          @E@@@[ . 78               C3 TABLE SEARCH AI
)@@G@@FOR AREA CODE FAILED    @]@@@[ .          @G@@@[ . 79               SUM AJ
)@@G@@AD DEFINED BY CHKPGE IS GREATER THAN TOTAL #    @E@@@[ .                AK
)@@G@@    OF PAGES - AT END OVERFLOW.           @]@@@[ .          @G@@@[ .    AL
)@@G@@              SUM AS DEFINED BY CHKPGE IS GRATER THAN TOTAL #     @A@@@[AM
)@@G@@ .                    RECORD.       @]@@@[ .          @G@@@[ . 82       AN
)@@G@@        ERROR RETURN FROM THE BUFFER ROUTINE. ERROR CODE    @C@@@[ .    AO
)@@G@@                IS IN BUFPKT,,H1.         @]@@@[ .          @G@@@[ . 83 AP
)@@G@@              NO SPACE AVAILABLE ON PAGE WHERE DIRECT RECORD IS   @C@@@[AQ
)@@G@@ .                    SUPPOSED TO BE RELOADED.  @]@@@[ .          @G@@@[AR
)@@G@@ . 84               INTERNAL ERROR     CURRENT PAGE NOT SAME AS PAGE    AS
)@@G@@@G@@@[ .                    SPECIFIED IN THE DIRECT CONTROL RECORD.     AT
)@@G@@      @]@@@[ .          @G@@@[ . 85               DIRECT RECORD NUMBER CAU
)@@G@@OLLISION ON A SLOT WHERE SLOT @G@@@[ .                    IS USED BY ANOAV
)@@G@@THER RECORD WHICH IS EITHER ON      @G@@@[ .                    A FOREIGAW
)@@G@@N PAGE OR FOREIGN TO THE PAGE IN QUESTION.@]@@@@ .          @E@@@@ . THEAX
)@@G@@ FOLLOWING ENTRY POINTS MIGHT BE CALLED FROM RELOAD   @A@@@@ . VIA AN SLAY
)@@G@@J INSTRUCTION.          @E@@@@ . FOR AN EXPLANATION OF THE POSSIBLE ERROAZ
)@@G@@R, REFER          @^@@@@ . TO THE USER'S MANUAL @C@@@@ . WRITTEN BY Z. NBA
)@@G@@AZIF ON NOV 11, 1975          @]@@@@ .          @]@@@@ .          @C@@@@BB
)@@G@@PF1       FORM      12,6,18           .         @]@@@@ .          @^@@@@BC
)@@G@@RER001*   +         0   @G@@@@          LA        A0,RER001         . $PBD
)@@G@@ ADDR OF CALL TO A0           @G@@@@          SLJ       ERLOCCAL        BE
)@@G@@  . $W ERLOCCAL GET ABS ADDR        @E@@@@          LA,U      A0,01     BF
)@@G@@        . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPRINT        BG
)@@G@@  . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@ .          BH
)@@G@@@A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@ .          @^@@@@RER002BI
)@@G@@*   +         0   @G@@@@          LA        A0,RER002         . $P ADDR BJ
)@@G@@OF CALL TO A0           @G@@@@          SLJ       ERLOCCAL          . $WBK
)@@G@@ ERLOCCAL GET ABS ADDR        @E@@@@          LA,U      A0,02           BL
)@@G@@  . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPRINT          . $WBM
)@@G@@ ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@ .          @^@@@@BN
)@@G@@RER003*   +         0   @G@@@@          LA        A0,RER003         . $PBO
)@@G@@ ADDR OF CALL TO A0           @G@@@@          SLJ       ERLOCCAL        BP
)@@G@@  . $W ERLOCCAL GET ABS ADDR        @E@@@@          LA,U      A0,03     BQ
)@@G@@        . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPRINT        BR
)@@G@@  . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@ .          BS
)@@G@@@A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@ .          @^@@@@RER004BT
)@@G@@*   +         0   @G@@@@          LA        A0,RER004         . $P ADDR BU
)@@G@@OF CALL TO A0           @G@@@@          SLJ       ERLOCCAL          . $WBV
)@@G@@ ERLOCCAL GET ABS ADDR        @E@@@@          LA,U      A0,04           BW
)@@G@@  . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPRINT          . $WBX
)@@G@@ ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@ .          @^@@@@BY
)@@G@@RER005*   +         0   @G@@@@          LA        A0,RER005         . $PBZ
)@@G@@ ADDR OF CALL TO A0           @G@@@@          SLJ       ERLOCCAL        CA
)@@G@@  . $W ERLOCCAL GET ABS ADDR        @E@@@@          LA,U      A0,05     CB
)@@G@@        . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPRINT        CC
)@@G@@  . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@ .          CD
)@@G@@@A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@ .          @^@@@@RER006CE
)@@G@@*   +         0   @G@@@@          LA        A0,RER006         . $P ADDR CF
)@@G@@OF CALL TO A0           @G@@@@          SLJ       ERLOCCAL          . $WCG
)@@G@@ ERLOCCAL GET ABS ADDR        @E@@@@          LA,U      A0,06           CH
)@@G@@  . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPRINT          . $WCI
)@@G@@ ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@ .          @^@@@@CJ
)@@G@@RER007*   +         0   @G@@@@          LA        A0,RER007         . $PCK
)@@G@@ ADDR OF CALL TO A0           @G@@@@          SLJ       ERLOCCAL        CL
)@@G@@  . $W ERLOCCAL GET ABS ADDR        @E@@@@          LA,U      A0,07     CM
)@@G@@        . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPRINT        CN
)@@G@@  . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@ .          CO
)@@G@@@A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@ .          @^@@@@RER008CP
)@@G@@*   +         0   @G@@@@          LA        A0,RER008         . $P ADDR CQ
)@@G@@OF CALL TO A0           @G@@@@          SLJ       ERLOCCAL          . $WCR
)@@G@@ ERLOCCAL GET ABS ADDR        @E@@@@          LA,U      A0,8            CS
)@@G@@ . $P ERROR CODE TO A0  @G@@@@          SLJ       ERRPRINT          . $WCT
)@@G@@ ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@ .          @^@@@@CU
)@@G@@RER009*   +         0   @G@@@@          LA        A0,RER009         . $PCV
)@@G@@ ADDR OF CALL TO A0           @G@@@@          SLJ       ERLOCCAL        CW
)@@G@@  . $W ERLOCCAL GET ABS ADDR        @E@@@@          LA,U      A0,9      CX
)@@G@@        . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPRINT        CY
)@@G@@  . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@ .          CZ
)@@G@@@A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@ .          @^@@@@RER010DA
)@@G@@*   +         0   @G@@@@          LA        A0,RER010         . $P ADDR DB
)@@G@@OF CALL TO A0           @G@@@@          SLJ       ERLOCCAL          . $WDC
)@@G@@ ERLOCCAL GET ABS ADDR        @E@@@@          LA,U      A0,10           DD
)@@G@@  . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPRINT          . $WDE
)@@G@@ ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@ .          @^@@@@DF
)@@G@@RER011*   +         0   @G@@@@          LA        A0,RER011         . $PDG
)@@G@@ ADDR OF CALL TO A0           @G@@@@          SLJ       ERLOCCAL        DH
)@@G@@  . $W ERLOCCAL GET ABS ADDR        @E@@@@          LA,U      A0,11     DI
)@@G@@        . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPRINT        DJ
)@@G@@  . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@ .          DK
)@@G@@@A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@ .          @^@@@@RER012DL
)@@G@@*   +         0   @G@@@@          LA        A0,RER012         . $P ADDR DM
)@@G@@OF CALL TO A0           @G@@@@          SLJ       ERLOCCAL          . $WDN
)@@G@@ ERLOCCAL GET ABS ADDR        @E@@@@          LA,U      A0,12           DO
)@@G@@  . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPRINT          . $WDP
)@@G@@ ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@ .          @^@@@@DQ
)@@G@@RER013*   +         0   @G@@@@          LA        A0,RER013         . $PDR
)@@G@@ ADDR OF CALL TO A0           @G@@@@          SLJ       ERLOCCAL        DS
)@@G@@  . $W ERLOCCAL GET ABS ADDR        @E@@@@          LA,U      A0,13     DT
)@@G@@        . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPRINT        DU
)@@G@@  . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@ .          DV
)@@G@@@A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@ .          @^@@@@RER014DW
)@@G@@*   +         0   @G@@@@          LA        A0,RER014         . $P ADDR DX
)@@G@@OF CALL TO A0           @G@@@@          SLJ       ERLOCCAL          . $WDY
)@@G@@ ERLOCCAL GET ABS ADDR        @E@@@@          LA,U      A0,14           DZ
)@@G@@  . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPRINT          . $WEA
)@@G@@ ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@ .          @^@@@@EB
)@@G@@RER015*   +         0   @G@@@@          LA        A0,RER015         . $PEC
)@@G@@ ADDR OF CALL TO A0           @G@@@@          SLJ       ERLOCCAL        ED
)@@G@@  . $W ERLOCCAL GET ABS ADDR        @E@@@@          LA,U      A0,15     EE
)@@G@@        . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPRINT        EF
)@@G@@  . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@ .          EG
)@@G@@@A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@ .          @^@@@@RER016EH
)@@G@@*   +         0   @G@@@@          LA        A0,RER016         . $P ADDR EI
)@@G@@OF CALL TO A0           @G@@@@          SLJ       ERLOCCAL          . $WEJ
)@@G@@ ERLOCCAL GET ABS ADDR        @E@@@@          LA,U      A0,16           EK
)@@G@@  . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPRINT          . $WEL
)@@G@@ ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@ .          @^@@@@EM
)@@G@@RER017*   +         0   @G@@@@          LA        A0,RER017         . $PEN
)@@G@@ ADDR OF CALL TO A0           @G@@@@          SLJ       ERLOCCAL        EO
)@@G@@  . $W ERLOCCAL GET ABS ADDR        @E@@@@          LA,U      A0,17     EP
)@@G@@        . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPRINT        EQ
)@@G@@  . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@ .          ER
)@@G@@@A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@ .          @^@@@@RER018ES
)@@G@@*   +         0   @G@@@@          LA        A0,RER018         . $P ADDR ET
)@@G@@OF CALL TO A0           @G@@@@          SLJ       ERLOCCAL          . $WEU
)@@G@@ ERLOCCAL GET ABS ADDR        @E@@@@          LA,U      A0,18           EV
)@@G@@  . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPRINT          . $WEW
)@@G@@ ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@ .          @]@@@@EX
)@@G@@ .          @^@@@@RER019*   +         0   @G@@@@          LA        A0,REY
)@@G@@ER019         . $P ADDR OF CALL TO A0           @G@@@@          SLJ     EZ
)@@G@@  ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@          LAFA
)@@G@@,U      A0,19             . $P ERROR CODE TO A0 @G@@@@          SLJ     FB
)@@G@@  ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          FC
)@@G@@@]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@ .    FD
)@@G@@      @^@@@@RER020*   +         0   @G@@@@          LA        A0,RER020 FE
)@@G@@        . $P ADDR OF CALL TO A0           @G@@@@          SLJ       ERLOFF
)@@G@@CCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@          LA,U    FG
)@@G@@  A0,20             . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPFH
)@@G@@RINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@FI
)@@G@@ .          @^@@@@RER021*   +         0   @G@@@@          LA        A0,RFJ
)@@G@@ER021         . $P ADDR OF CALL TO A0           @G@@@@          SLJ     FK
)@@G@@  ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@          LAFL
)@@G@@,U      A0,21             . $P ERROR CODE TO A0 @G@@@@          SLJ     FM
)@@G@@  ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          FN
)@@G@@@]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@ .    FO
)@@G@@      @^@@@@RER022*   +         0   @G@@@@          LA        A0,RER022 FP
)@@G@@        . $P ADDR OF CALL TO A0           @G@@@@          SLJ       ERLOFQ
)@@G@@CCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@          LA,U    FR
)@@G@@  A0,22             . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPFS
)@@G@@RINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@FT
)@@G@@ .          @^@@@@RER023*   +         0   @G@@@@          LA        A0,RFU
)@@G@@ER023         . $P ADDR OF CALL TO A0           @G@@@@          SLJ     FV
)@@G@@  ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@          LAFW
)@@G@@,U      A0,23             . $P ERROR CODE TO A0 @G@@@@          SLJ     FX
)@@G@@  ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          FY
)@@G@@@]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@ .    FZ
)@@G@@      @^@@@@RER024*   +         0   @G@@@@          LA        A0,RER024 GA
)@@G@@        . $P ADDR OF CALL TO A0           @G@@@@          SLJ       ERLOGB
)@@G@@CCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@          LA,U    GC
)@@G@@  A0,24             . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPGD
)@@G@@RINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@GE
)@@G@@ .          @^@@@@RER025*   +         0   @G@@@@          LA        A0,RGF
)@@G@@ER025         . $P ADDR OF CALL TO A0           @G@@@@          SLJ     GG
)@@G@@  ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@          LAGH
)@@G@@,U      A0,25             . $P ERROR CODE TO A0 @G@@@@          SLJ     GI
)@@G@@  ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          GJ
)@@G@@@]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@ .    GK
)@@G@@      @^@@@@RER026*   +         0   @G@@@@          LA        A0,RER026 GL
)@@G@@        . $P ADDR OF CALL TO A0           @G@@@@          SLJ       ERLOGM
)@@G@@CCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@          LA,U    GN
)@@G@@  A0,26             . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPGO
)@@G@@RINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@GP
)@@G@@ .          @^@@@@RER027*   +         0   @G@@@@          LA        A0,RGQ
)@@G@@ER027         . $P ADDR OF CALL TO A0           @G@@@@          SLJ     GR
)@@G@@  ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@          LAGS
)@@G@@,U      A0,27             . $P ERROR CODE TO A0 @G@@@@          SLJ     GT
)@@G@@  ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          GU
)@@G@@@]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@ .    GV
)@@G@@      @^@@@@RER028*   +         0   @G@@@@          LA        A0,RER028 GW
)@@G@@        . $P ADDR OF CALL TO A0           @G@@@@          SLJ       ERLOGX
)@@G@@CCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@          LA,U    GY
)@@G@@  A0,28             . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPGZ
)@@G@@RINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@HA
)@@G@@ .          @^@@@@RER029*   +         0   @G@@@@          LA        A0,RHB
)@@G@@ER029         . $P ADDR OF CALL TO A0           @G@@@@          SLJ     HC
)@@G@@  ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@          LAHD
)@@G@@,U      A0,29             . $P ERROR CODE TO A0 @G@@@@          SLJ     HE
)@@G@@  ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          HF
)@@G@@@]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@ .    HG
)@@G@@      @^@@@@RER030*   +         0   @G@@@@          LA        A0,RER030 HH
)@@G@@        . $P ADDR OF CALL TO A0           @G@@@@          SLJ       ERLOHI
)@@G@@CCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@          LA,U    HJ
)@@G@@  A0,30             . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPHK
)@@G@@RINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@HL
)@@G@@ .          @^@@@@RER031*   +         0   @G@@@@          LA        A0,RHM
)@@G@@ER031         . $P ADDR OF CALL TO A0           @G@@@@          SLJ     HN
)@@G@@  ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@          LAHO
)@@G@@,U      A0,31             . $P ERROR CODE TO A0 @G@@@@          SLJ     HP
)@@G@@  ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          HQ
)@@G@@@]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@ .    HR
)@@G@@      @^@@@@RER032*   +         0   @G@@@@          LA        A0,RER032 HS
)@@G@@        . $P ADDR OF CALL TO A0           @G@@@@          SLJ       ERLOHT
)@@G@@CCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@          LA,U    HU
)@@G@@  A0,32             . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPHV
)@@G@@RINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@HW
)@@G@@ .          @^@@@@RER033*   +         0   @G@@@@          LA        A0,RHX
)@@G@@ER033         . $P ADDR OF CALL TO A0           @G@@@@          SLJ     HY
)@@G@@  ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@          LAHZ
)@@G@@,U      A0,33             . $P ERROR CODE TO A0 @G@@@@          SLJ     IA
)@@G@@  ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          IB
)@@G@@@]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@ .    IC
)@@G@@      @^@@@@RER034*   +         0   @G@@@@          LA        A0,RER034 ID
)@@G@@        . $P ADDR OF CALL TO A0           @G@@@@          SLJ       ERLOIE
)@@G@@CCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@          LA,U    IF
)@@G@@  A0,34             . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPIG
)@@G@@RINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@IH
)@@G@@ .          @^@@@@RER035*   +         0   @G@@@@          LA        A0,RII
)@@G@@ER035         . $P ADDR OF CALL TO A0           @G@@@@          SLJ     IJ
)@@G@@  ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@          LAIK
)@@G@@,U      A0,35             . $P ERROR CODE TO A0 @G@@@@          SLJ     IL
)@@G@@  ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          IM
)@@G@@@]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@ .    IN
)@@G@@      @^@@@@RER036*   +         0   @G@@@@          LA        A0,RER036 IO
)@@G@@        . $P ADDR OF CALL TO A0           @G@@@@          SLJ       ERLOIP
)@@G@@CCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@          LA,U    IQ
)@@G@@  A0,36             . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPIR
)@@G@@RINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@IS
)@@G@@ .          @]@@@@ .          @^@@@@RER037*   +         0   @G@@@@      IT
)@@G@@    LA        A0,RER037         . $P ADDR OF CALL TO A0           @G@@@@IU
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        IV
)@@G@@@E@@@@          LA,U      A0,37             . $P ERROR CODE TO A0 @G@@@@IW
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    IX
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRIY
)@@G@@PRINT @]@@@@ .          @^@@@@RER038*   +         0   @G@@@@          LAIZ
)@@G@@        A0,RER038         . $P ADDR OF CALL TO A0           @G@@@@      JA
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@JB
)@@G@@          LA,U      A0,38             . $P ERROR CODE TO A0 @G@@@@      JC
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@JD
)@@G@@ .          @]@@@@ .          @^@@@@RER039*   +         0   @G@@@@      JE
)@@G@@    LA        A0,RER039         . $P ADDR OF CALL TO A0           @G@@@@JF
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        JG
)@@G@@@E@@@@          LA,U      A0,39             . $P ERROR CODE TO A0 @G@@@@JH
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    JI
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRJJ
)@@G@@PRINT @]@@@@ .          @^@@@@RER040*   +         0   @G@@@@          LAJK
)@@G@@        A0,RER040         . $P ADDR OF CALL TO A0           @G@@@@      JL
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@JM
)@@G@@          LA,U      A0,40             . $P ERROR CODE TO A0 @G@@@@      JN
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@JO
)@@G@@ .          @]@@@@ .          @^@@@@RER041*   +         0   @G@@@@      JP
)@@G@@    LA        A0,RER041         . $P ADDR OF CALL TO A0           @G@@@@JQ
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        JR
)@@G@@@E@@@@          LA,U      A0,41             . $P ERROR CODE TO A0 @G@@@@JS
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    JT
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRJU
)@@G@@PRINT @]@@@@ .          @^@@@@RER042*   +         0   @G@@@@          LAJV
)@@G@@        A0,RER042         . $P ADDR OF CALL TO A0           @G@@@@      JW
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@JX
)@@G@@          LA,U      A0,42             . $P ERROR CODE TO A0 @G@@@@      JY
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@JZ
)@@G@@ .          @]@@@@ .          @^@@@@RER043*   +         0   @G@@@@      KA
)@@G@@    LA        A0,RER043         . $P ADDR OF CALL TO A0           @G@@@@KB
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        KC
)@@G@@@E@@@@          LA,U      A0,43             . $P ERROR CODE TO A0 @G@@@@KD
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    KE
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRKF
)@@G@@PRINT @]@@@@ .          @^@@@@RER044*   +         0   @G@@@@          LAKG
)@@G@@        A0,RER044         . $P ADDR OF CALL TO A0           @G@@@@      KH
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@KI
)@@G@@          LA,U      A0,44             . $P ERROR CODE TO A0 @G@@@@      KJ
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@KK
)@@G@@ .          @]@@@@ .          @^@@@@RER045*   +         0   @G@@@@      KL
)@@G@@    LA        A0,RER045         . $P ADDR OF CALL TO A0           @G@@@@KM
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        KN
)@@G@@@E@@@@          LA,U      A0,45             . $P ERROR CODE TO A0 @G@@@@KO
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    KP
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRKQ
)@@G@@PRINT @]@@@@ .          @^@@@@RER046*   +         0   @G@@@@          LAKR
)@@G@@        A0,RER046         . $P ADDR OF CALL TO A0           @G@@@@      KS
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@KT
)@@G@@          LA,U      A0,46             . $P ERROR CODE TO A0 @G@@@@      KU
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@KV
)@@G@@ .          @]@@@@ .          @^@@@@RER047*   +         0   @G@@@@      KW
)@@G@@    LA        A0,RER047         . $P ADDR OF CALL TO A0           @G@@@@KX
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        KY
)@@G@@@E@@@@          LA,U      A0,47             . $P ERROR CODE TO A0 @G@@@@KZ
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    LA
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRLB
)@@G@@PRINT @]@@@@ .          @^@@@@RER048*   +         0   @G@@@@          LALC
)@@G@@        A0,RER048         . $P ADDR OF CALL TO A0           @G@@@@      LD
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@LE
)@@G@@          LA,U      A0,48             . $P ERROR CODE TO A0 @G@@@@      LF
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@LG
)@@G@@ .          @]@@@@ .          @^@@@@RER049*   +         0   @G@@@@      LH
)@@G@@    LA        A0,RER049         . $P ADDR OF CALL TO A0           @G@@@@LI
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        LJ
)@@G@@@E@@@@          LA,U      A0,49             . $P ERROR CODE TO A0 @G@@@@LK
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    LL
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRLM
)@@G@@PRINT @]@@@@ .          @^@@@@RER050*   +         0   @G@@@@          LALN
)@@G@@        A0,RER050         . $P ADDR OF CALL TO A0           @G@@@@      LO
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@LP
)@@G@@          LA,U      A0,50             . $P ERROR CODE TO A0 @G@@@@      LQ
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@LR
)@@G@@ .          @]@@@@ .          @^@@@@RER051*   +         0   @G@@@@      LS
)@@G@@    LA        A0,RER051         . $P ADDR OF CALL TO A0           @G@@@@LT
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        LU
)@@G@@@E@@@@          LA,U      A0,51             . $P ERROR CODE TO A0 @G@@@@LV
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    LW
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRLX
)@@G@@PRINT @]@@@@ .          @^@@@@RER052*   +         0   @G@@@@          LALY
)@@G@@        A0,RER052         . $P ADDR OF CALL TO A0           @G@@@@      LZ
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@MA
)@@G@@          LA,U      A0,52             . $P ERROR CODE TO A0 @G@@@@      MB
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@MC
)@@G@@ .          @]@@@@ .          @^@@@@RER053*   +         0   @G@@@@      MD
)@@G@@    LA        A0,RER053         . $P ADDR OF CALL TO A0           @G@@@@ME
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        MF
)@@G@@@E@@@@          LA,U      A0,53             . $P ERROR CODE TO A0 @G@@@@MG
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    MH
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRMI
)@@G@@PRINT @]@@@@ .          @^@@@@RER054*   +         0   @G@@@@          LAMJ
)@@G@@        A0,RER054         . $P ADDR OF CALL TO A0           @G@@@@      MK
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@ML
)@@G@@          LA,U      A0,54             . $P ERROR CODE TO A0 @G@@@@      MM
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@MN
)@@G@@ .          @]@@@@ .          @^@@@@RER055*   +         0   @G@@@@      MO
)@@G@@    LA        A0,RER055         . $P ADDR OF CALL TO A0           @G@@@@MP
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        MQ
)@@G@@@E@@@@          LA,U      A0,55             . $P ERROR CODE TO A0 @G@@@@MR
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    MS
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRMT
)@@G@@PRINT @]@@@@ .          @^@@@@RER056*   +         0   @G@@@@          LAMU
)@@G@@        A0,RER056         . $P ADDR OF CALL TO A0           @G@@@@      MV
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@MW
)@@G@@          LA,U      A0,56             . $P ERROR CODE TO A0 @G@@@@      MX
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@MY
)@@G@@ .          @]@@@@ .          @^@@@@RER057*   +         0   @G@@@@      MZ
)@@G@@    LA        A0,RER057         . $P ADDR OF CALL TO A0           @G@@@@NA
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        NB
)@@G@@@E@@@@          LA,U      A0,57             . $P ERROR CODE TO A0 @G@@@@NC
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    ND
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRNE
)@@G@@PRINT @]@@@@ .          @^@@@@RER058*   +         0   @G@@@@          LANF
)@@G@@        A0,RER058         . $P ADDR OF CALL TO A0           @G@@@@      NG
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@NH
)@@G@@          LA,U      A0,58             . $P ERROR CODE TO A0 @G@@@@      NI
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@NJ
)@@G@@ .          @]@@@@ .          @^@@@@RER059*   +         0   @G@@@@      NK
)@@G@@    LA        A0,RER059         . $P ADDR OF CALL TO A0           @G@@@@NL
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        NM
)@@G@@@E@@@@          LA,U      A0,59             . $P ERROR CODE TO A0 @G@@@@NN
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    NO
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRNP
)@@G@@PRINT @]@@@@ .          @^@@@@RER060*   +         0   @G@@@@          LANQ
)@@G@@        A0,RER060         . $P ADDR OF CALL TO A0           @G@@@@      NR
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@NS
)@@G@@          LA,U      A0,60             . $P ERROR CODE TO A0 @G@@@@      NT
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@NU
)@@G@@ .          @]@@@@ .          @^@@@@RER061*   +         0   @G@@@@      NV
)@@G@@    LA        A0,RER061         . $P ADDR OF CALL TO A0           @G@@@@NW
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        NX
)@@G@@@E@@@@          LA,U      A0,61             . $P ERROR CODE TO A0 @G@@@@NY
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    NZ
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERROA
)@@G@@PRINT @]@@@@ .          @^@@@@RER062*   +         0   @G@@@@          LAOB
)@@G@@        A0,RER062         . $P ADDR OF CALL TO A0           @G@@@@      OC
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@OD
)@@G@@          LA,U      A0,62             . $P ERROR CODE TO A0 @G@@@@      OE
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@OF
)@@G@@ .          @]@@@@ .          @^@@@@RER063*   +         0   @G@@@@      OG
)@@G@@    LA        A0,RER063         . $P ADDR OF CALL TO A0           @G@@@@OH
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        OI
)@@G@@@E@@@@          LA,U      A0,63             . $P ERROR CODE TO A0 @G@@@@OJ
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    OK
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERROL
)@@G@@PRINT @]@@@@ .          @^@@@@RER064*   +         0   @G@@@@          LAOM
)@@G@@        A0,RER064         . $P ADDR OF CALL TO A0           @G@@@@      ON
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@OO
)@@G@@          LA,U      A0,64             . $P ERROR CODE TO A0 @G@@@@      OP
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@OQ
)@@G@@ .          @]@@@@ .          @^@@@@RER065*   +         0   @G@@@@      OR
)@@G@@    LA        A0,RER065         . $P ADDR OF CALL TO A0           @G@@@@OS
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        OT
)@@G@@@E@@@@          LA,U      A0,65             . $P ERROR CODE TO A0 @G@@@@OU
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    OV
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERROW
)@@G@@PRINT @]@@@@ .          @^@@@@RER066*   +         0   @G@@@@          LAOX
)@@G@@        A0,RER066         . $P ADDR OF CALL TO A0           @G@@@@      OY
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@OZ
)@@G@@          LA,U      A0,66             . $P ERROR CODE TO A0 @G@@@@      PA
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@PB
)@@G@@ .          @]@@@@ .          @^@@@@RER067*   +         0   @G@@@@      PC
)@@G@@    LA        A0,RER067         . $P ADDR OF CALL TO A0           @G@@@@PD
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        PE
)@@G@@@E@@@@          LA,U      A0,67             . $P ERROR CODE TO A0 @G@@@@PF
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    PG
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRPH
)@@G@@PRINT @]@@@@ .          @^@@@@RER068*   +         0   @G@@@@          LAPI
)@@G@@        A0,RER068         . $P ADDR OF CALL TO A0           @G@@@@      PJ
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@PK
)@@G@@          LA,U      A0,68             . $P ERROR CODE TO A0 @G@@@@      PL
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@PM
)@@G@@ .          @]@@@@ .          @^@@@@RER069*   +         0   @G@@@@      PN
)@@G@@    LA        A0,RER069         . $P ADDR OF CALL TO A0           @G@@@@PO
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        PP
)@@G@@@E@@@@          LA,U      A0,69             . $P ERROR CODE TO A0 @G@@@@PQ
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    PR
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRPS
)@@G@@PRINT @]@@@@ .          @^@@@@RER070*   +         0   @G@@@@          LAPT
)@@G@@        A0,RER070         . $P ADDR OF CALL TO A0           @G@@@@      PU
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@PV
)@@G@@          LA,U      A0,70             . $P ERROR CODE TO A0 @G@@@@      PW
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@PX
)@@G@@ .          @]@@@@ .          @^@@@@RER071*   +         0   @G@@@@      PY
)@@G@@    LA        A0,RER071         . $P ADDR OF CALL TO A0           @G@@@@PZ
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        QA
)@@G@@@E@@@@          LA,U      A0,71             . $P ERROR CODE TO A0 @G@@@@QB
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    QC
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRQD
)@@G@@PRINT @]@@@@ .          @^@@@@RER072*   +         0   @G@@@@          LAQE
)@@G@@        A0,RER072         . $P ADDR OF CALL TO A0           @G@@@@      QF
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@QG
)@@G@@          LA,U      A0,72             . $P ERROR CODE TO A0 @G@@@@      QH
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@QI
)@@G@@ .          @]@@@@ .          @^@@@@RER073*   +         0   @G@@@@      QJ
)@@G@@    LA        A0,RER073         . $P ADDR OF CALL TO A0           @G@@@@QK
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        QL
)@@G@@@E@@@@          LA,U      A0,73             . $P ERROR CODE TO A0 @G@@@@QM
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    QN
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRQO
)@@G@@PRINT @]@@@@ .          @^@@@@RER074*   +         0   @G@@@@          LAQP
)@@G@@        A0,RER074         . $P ADDR OF CALL TO A0           @G@@@@      QQ
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@QR
)@@G@@          LA,U      A0,74             . $P ERROR CODE TO A0 @G@@@@      QS
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@QT
)@@G@@ .          @]@@@@ .          @^@@@@RER075*   +         0   @G@@@@      QU
)@@G@@    LA        A0,RER075         . $P ADDR OF CALL TO A0           @G@@@@QV
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        QW
)@@G@@@E@@@@          LA,U      A0,75             . $P ERROR CODE TO A0 @G@@@@QX
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    QY
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRQZ
)@@G@@PRINT @]@@@@ .          @^@@@@RER076*   +         0   @G@@@@          LARA
)@@G@@        A0,RER076         . $P ADDR OF CALL TO A0           @G@@@@      RB
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@RC
)@@G@@          LA,U      A0,76             . $P ERROR CODE TO A0 @G@@@@      RD
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@RE
)@@G@@ .          @]@@@@ .          @^@@@@RER077*   +         0   @G@@@@      RF
)@@G@@    LA        A0,RER077         . $P ADDR OF CALL TO A0           @G@@@@RG
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        RH
)@@G@@@E@@@@          LA,U      A0,77             . $P ERROR CODE TO A0 @G@@@@RI
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    RJ
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRRK
)@@G@@PRINT @]@@@@ .          @^@@@@RER078*   +         0   @G@@@@          LARL
)@@G@@        A0,RER078         . $P ADDR OF CALL TO A0           @G@@@@      RM
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@RN
)@@G@@          LA,U      A0,78             . $P ERROR CODE TO A0 @G@@@@      RO
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@RP
)@@G@@ .          @]@@@@ .          @^@@@@RER079*   +         0   @G@@@@      RQ
)@@G@@    LA        A0,RER079         . $P ADDR OF CALL TO A0           @G@@@@RR
)@@G@@          SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        RS
)@@G@@@E@@@@          LA,U      A0,79             . $P ERROR CODE TO A0 @G@@@@RT
)@@G@@          SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    RU
)@@G@@@]@@@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRRV
)@@G@@PRINT @]@@@@ .          @^@@@@RER080*   +         0   @G@@@@          LARW
)@@G@@        A0,RER080         . $P ADDR OF CALL TO A0           @G@@@@      RX
)@@G@@    SLJ       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@RY
)@@G@@          LA,U      A0,80             . $P ERROR CODE TO A0 @G@@@@      RZ
)@@G@@    SLJ       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@SA
)@@G@@ .          @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT SB
)@@G@@@]@@@@ .          @^@@@@RER081*   +         0   @G@@@@          LA      SC
)@@G@@  A0,RER081         . $P ADDR OF CALL TO A0           @G@@@@          SLSD
)@@G@@J       ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@      SE
)@@G@@    LA,U      A0,81             . $P ERROR CODE TO A0 @G@@@@          SLSF
)@@G@@J       ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .    SG
)@@G@@      @]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@SH
)@@G@@ .          @^@@@@RER082*   +         0   @G@@@@          LA        A0,RSI
)@@G@@ER082         . $P ADDR OF CALL TO A0           @G@@@@          SLJ     SJ
)@@G@@  ERLOCCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@          LASK
)@@G@@,U      A0,82             . $P ERROR CODE TO A0 @G@@@@          SLJ     SL
)@@G@@  ERRPRINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          SM
)@@G@@@]@@@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@ .    SN
)@@G@@      @^@@@@RER083*   +         0   @G@@@@          LA        A0,RER083 SO
)@@G@@        . $P ADDR OF CALL TO A0           @G@@@@          SLJ       ERLOSP
)@@G@@CCAL          . $W ERLOCCAL GET ABS ADDR        @E@@@@          LA,U    SQ
)@@G@@  A0,83             . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPSR
)@@G@@RINT          . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@SS
)@@G@@ .          @A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@ .          ST
)@@G@@@^@@@@RER084*   +         0   @G@@@@          LA        A0,RER084       SU
)@@G@@  . $P ADDR OF CALL TO A0           @G@@@@          SLJ       ERLOCCAL  SV
)@@G@@        . $W ERLOCCAL GET ABS ADDR        @E@@@@          LA,U      A0,8SW
)@@G@@4             . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPRINT  SX
)@@G@@        . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@ .    SY
)@@G@@      @A@@@@ . PROGRAM WILL ERR OUT IN ERRPRINT @]@@@@ .          @^@@@@SZ
)@@G@@RER085*   +         0   @G@@@@          LA        A0,RER085         . $PTA
)@@G@@ ADDR OF CALL TO A0           @G@@@@          SLJ       ERLOCCAL        TB
)@@G@@  . $W ERLOCCAL GET ABS ADDR        @E@@@@          LA,U      A0,85     TC
)@@G@@        . $P ERROR CODE TO A0 @G@@@@          SLJ       ERRPRINT        TD
)@@G@@  . $W ERRPRINT PRINT ERROR CODE    @]@@@@ .          @]@@@@ .          TE
)@@G@@@]@@@@ .          @]@@@@ .          @]@@@@ .          @C@@@@ERLOCCAL  + TF
)@@G@@        0                 .         @C@@@@          AN,U      A0,1      TG
)@@G@@        .         @G@@@@          SA        A0,ABSERR         . SAVE ABSTH
)@@G@@OLUTE ADDRESS OF ERR    @G@@@@          AN,U      A0,RELOAD         . CATI
)@@G@@LCULATE RELATIVE ADDRESS      @G@@@@          SA A0,RELERR              TJ
)@@G@@  . SAVE RELATIVE ADDRESS           @C@@@@          E$DIT     EDPKT     TK
)@@G@@        .         @C@@@@          E$COPY    33,MSGABSERR      .         TL
)@@G@@@A@@@@          E$OCTV    ABSERR    .     @C@@@@          E$COPY    11,MTM
)@@G@@SGRELERR      .         @C@@@@          E$OCTV    RELERR            .   TN
)@@G@@      @A@@@@          P$RINT    (PF1 1,14,PRINT)@C@@@@          J       TO
)@@G@@  *ERLOCCAL         .         @]@@@@ .          @]@@@@ .          @]@@@@TP
)@@G@@ .          @C@@@@ERRPRINT  +         0                 .         @C@@@@TQ
)@@G@@          SA        A0,ERRCODE        .         @C@@@@          E$DIT   TR
)@@G@@  EDPKT             .         @C@@@@          E$COPY    12,MSGERRCODE   TS
)@@G@@  .         @C@@@@          E$DECV    ERRCODE           .         @C@@@@TT
)@@G@@          P$RINT   (PF1 1,14,PRINT)  .          @^@@@@          ER      TU
)@@G@@  ERR$@]@@@@ .          @]@@@@ .          @]@@@@$(2)        @C@@@@ERRCODTV
)@@G@@E   +         0                 .         @C@@@@ABSERR    +         0   TW
)@@G@@              .         @C@@@@RELERR    +         0                 .   TX
)@@G@@      @C@@@@MSGABSERR 'RELOAD ERROR, ABSOLUTE LOCATION: '   @^@@@@MSGRELTY
)@@G@@ERR ' RELATIVE: ' @A@@@@MSGERRCODE          'ERROR CODE: '  @^@@@@      TZ
)@@G@@    END           ___ROR CODE TO A0 @G@@@@          SLJ       ERRPRINT  UA
)@@G@@        . $W ERRPRINT PR*[@@@@*SDFF*@[@@@[.     @C@@@[.                *UB
)@@G@@*****    SCAN    ******       @[@@@[.     @]@@@[ AXR$.      @]@@@[$(1). UC
)@@G@@      @]@@@[SCAN*.      @]@@@[UNLOAD*.    @]@@@     TZ  TOPT@]@]@[  SLJ UD
)@@G@@DEBUG$@#@ @]  . SLJ DEBUG$    @#@@@     SLJ DEBUG$    @E@@@[          L UE
)@@G@@        A3,C3             . $  ADDR OF C3       @G@@@[          AN,U    UF
)@@G@@  A3,9              . $ BEFORE FIRST C3 ENTRY         @E@@@[          SZUG
)@@G@@        A4                . $  ZERO A4          @]@@@[SCAN0.      @G@@@[UH
)@@G@@          A,U       A3,9              . $  ADDRESS OF NEXT ENTRY IN C3  UI
)@@G@@@G@@@[          TLE,T1    A4,3,A3           . $  SKIP IF NEW PG SIZE NOTUJ
)@@G@@ > OLD@E@@@[          L,T1      A4,3,A3           . $  GET NEW PG SIZE  UK
)@@G@@@G@@@[          TZ,T3     0,A3              . $  SKIP IF LAST ENTRY     UL
)@@G@@      @E@@@[          J         SCAN0             . $  CONTINUE         UM
)@@G@@@G@@@[          S         A4,SCMAXPG        . $  STORE MAX PAGE SIZE FORUN
)@@G@@ AREAS@E@@@[          MSI,U     A4,SCSPGS         . $ LENGTH OF BUFFER  UO
)@@G@@@G@@@[          S,H1      A4,SCSPKT+8       . $ STORE IN VIA SET PKT    UP
)@@G@@      @G@@@[          L,H2      A3,C1             . $  LOAD ADDR & WDCNTUQ
)@@G@@ FOR C1     @G@@@[          SZ        A2                . $  ZERO INDEX UR
)@@G@@REGISTER          @E@@@[          S         X11,SCSAVX11      . $  SAVE US
)@@G@@X11         @]@@@[SCAN1.      @G@@@[          L         A4,,A3          UT
)@@G@@  . $  GET FIRST WORD OF C1 ENTRY   @G@@@[          S         A4,SCRECORUU
)@@G@@DS,A2   . $  STORE IN RECORD TABLE        @G@@@[          S,S4      A2,SUV
)@@G@@CRECORDS,A2   . $  STORE OFFSET IN ENTRY        @E@@@[          L       UW
)@@G@@  A0,SCSNXT         . $ SET TABLE LOCATION@G@@@[          S,T3      A0,SUX
)@@G@@CRECORDS,A2   . $ STORE IN RTBL ENTRY           @G@@@[          S,H2    UY
)@@G@@  A3,STBL,A0        . $ STORE ADDR OF C1 ENTRY IN STBL@G@@@[          L UZ
)@@G@@        X9,A0             . $ START OF THIS STBL ENTRY      @G@@@[      VA
)@@G@@    SZ        STBL+1,A0         . $ ZERO SECOND WORD OF STBL      @E@@@[VB
)@@G@@          A,U       A0,2              . $ INCREMENT         @E@@@[      VC
)@@G@@    S         A0,SCSNXT         . $ STORE OFFSET      @E@@@[          L VD
)@@G@@        A1,A3             . C1 TABLE ADDRESS    @E@@@[          LXI,U   VE
)@@G@@  A1,1              . INCREMENT           @G@@@[SCAN11    TN        1,*AVF
)@@G@@1             . LOOK FOR MANUAL CONTROL WD      @E@@@[          J       VG
)@@G@@  SCAN11            . NOT FOUND           @E@@@[          L,T2      A5,,VH
)@@G@@A1            . LOAD SET CODE       @G@@@[          S,T1      A5,STBL,X9VI
)@@G@@        . STORE IN FIRST WD OF STBL       @G@@@[          AND       A4,SVJ
)@@G@@CSMSK         . $ MASK ALL BUT SCAN SET BIT     @G@@@[          TNZ     VK
)@@G@@  A5                . $ SKIP IF SETS TO SCAN          @E@@@[          J VL
)@@G@@        SCAN19            . $ CONTINUE          @E@@@[          L,U     VM
)@@G@@  A4,1              . $ FIRST SET TO SCAN @]@@@[SCAN12.     @G@@@[      VN
)@@G@@    L         A1,A3             . $ ADDRESS OF C1 ENTRY           @G@@@[VO
)@@G@@          A,U       A1,1              . $ ADDRESS OF FIRST SET WORD     VP
)@@G@@@G@@@[SCAN125   TP        0,A1              . $ SKIP IF NOT MANUAL WORD VQ
)@@G@@      @E@@@[          J         SCAN13            . $ MANUAL WORD       VR
)@@G@@@E@@@[          TNE,S1    A4,,A1            . $ SKIP IF NO MATCH  @C@@@[VS
)@@G@@          J         SCAN16            . $ MATCH @E@@@[          A,U     VT
)@@G@@  A1,1              . $ NEXT WORD IN C1   @E@@@[          J         SCANVU
)@@G@@125           . $ CONTINUE          @]@@@[SCAN13.     @G@@@[          S VV
)@@G@@        A1,STBL+1,X9      . $ STORE ADDRESS OF MANUAL WORD  @]@@@[SCAN15VW
)@@G@@.     @G@@@[          S         A0,SCSNXT         . $ NEXT OFFSET INTO SVX
)@@G@@TBL         @G@@@[          AN        A0,X9             . $ WORDS IN THIVY
)@@G@@S STBL ENTRY      @E@@@[          AN,U      A0,2              . $ SETS TVZ
)@@G@@O SCAN      @G@@@[          S,H1      A0,STBL+1,X9      . $ NUMBER OF SEWA
)@@G@@TS IN STBL        @C@@@[          J         SCAN19            . CONTINUEWB
)@@G@@@]@@@[SCAN16.     @G@@@[          S         A1,STBL,A0        . $ STORE WC
)@@G@@SET ADDRESS IN STBL     @G@@@[          L,U       A5,SCSBNO         . $ WD
)@@G@@NUMBER OF BUFFERS TO ALLOCATE @C@@@[          AN,U      A5,1            WE
)@@G@@  . $ LESS 1@E@@@[          L         X11,LAST$D        . $ LAST DBANK AWF
)@@G@@DDRESS@G@@@[          A,U       X11,1             . $ FIRST BUFFER ADDREWG
)@@G@@SS          @G@@@[          L         X10,SCSBNX        . $ NEXT BUFFER WH
)@@G@@CNTL WD           @E@@@[          S,T1      X10,STBL,A0       . $ STORE WI
)@@G@@IN STBL     @E@@@[          L         A1,SCMAXPG        . $ MAXIMUM PAGEWJ
)@@G@@ SIZE @G@@@[          MSI,U     A1,SCSPGS         . $ SIZE OF EACH SET BWK
)@@G@@UFFER       @]@@@[SCAN17.     @G@@@[          S         X11,SCSBUF,X10  WL
)@@G@@  . $ STORE BUFFER ADDR IN CNTL WD  @E@@@[          SZ        SCSBUF+1,XWM
)@@G@@10      . $ ZERO WD 2         @G@@@[          A         X11,A1          WN
)@@G@@  . $ LOCATION OF NEXT BUFFER       @E@@@[          A,U       X10,2     WO
)@@G@@        . $ INCREMENT         @E@@@[          JGD       A5,SCAN17       WP
)@@G@@  . $ CONTINUE          @E@@@[          AN,U      X11,1             . $ WQ
)@@G@@LAST DBANK ADDRESS@E@@@[          S         X11,LAST$D        . $ STORE WR
)@@G@@IT          @G@@@[          S         X10,SCSBNX        . $ NEXT BUFFER WS
)@@G@@TO ALLOC          @G@@@[          A,U       A4,1              . $ NEXT SWT
)@@G@@ET TO LOOK FOR          @G@@@[          A,U       A0,1              . $ WU
)@@G@@INCRMENT SET TABLE INDEX      @E@@@[          J         SCAN12          WV
)@@G@@  . $ CONTINUE          @]@@@[SCAN19.     @E@@@[          A,U       A2,1WW
)@@G@@              . $  INCREMENT A2     @G@@@[          L,T3      A4,,A3    WX
)@@G@@        . $  LOAD LINK TO NEXT ENTRY      @G@@@[          A         A3,AWY
)@@G@@4             . $  ADDRESS OF NEXT ENTRY        @G@@@[          TZ      WZ
)@@G@@  A4                . $  SKIP IF NO MORE ENTRIES      @G@@@[          J XA
)@@G@@        SCAN1             . $  CONTINUE CREATING RECORD TBL @G@@@[      XB
)@@G@@    S         A2,SCREPEAT       . $  STORE NUMBER OF RECORDS      @]@@@[XC
)@@G@@.           @A@@@[. GET BUFFER SPACE REQUIRED FOR SCAN@]@@@[.           XD
)@@G@@@G@@@[          L         A1,LAST$D         . $  LOAD LAST DBANK ADDRESSXE
)@@G@@      @E@@@[          A,U       A1,1              . $  INCREMENT IT BY 1XF
)@@G@@@I@@@[          S         A1,C2             . $  STORE ADDRESS OF BUFFERXG
)@@G@@ FOR C2           @G@@@[          S         A1,SCC2LOC        . $  STOREXH
)@@G@@ NEXT LOCATION IN C2 BUF@I@@@[          A,U       A1,SCC2BUFSZ      . $ XI
)@@G@@ CALCULATE ADDRESS OF BUFFER FOR C4       @G@@@[          S         A1,CXJ
)@@G@@4             . $  ADDRESS OF BUFFER FOR C4     @G@@@[          S       XK
)@@G@@  A1,SCC4LOC        . $  STORE NEXT LOCATION IN C4 BUF@G@@@[          A,XL
)@@G@@U       A1,SCC4BUFSZ      . $  ADDRESS OF DATA BASE BUFFER 1@E@@@[      XM
)@@G@@    S         A1,SCDBUF1        . $  STORE IT         @G@@@[          S,XN
)@@G@@H2      A1,SCPKT+7        . $  STORE IT AS CURRENT BUFFER   @G@@@[      XO
)@@G@@    L         A0,SCMAXPG        . $  GET SIZE OF LARGEST PAGE     @G@@@[XP
)@@G@@          MSI,U     A0,SCDBPGS        . $  MULTIPLY BY PGS IN BUFFER    XQ
)@@G@@@G@@@[          S,H1      A0,SCPKT+8        . $  STORE BUFFER LENGTH    XR
)@@G@@      @G@@@[          A         A1,A0             . $  CALCULATE ADDRESSXS
)@@G@@ OF BUFFER 2@E@@@[          S         A1,SCDBUF2        . $  STORE IT   XT
)@@G@@      @G@@@[          A         A0,A1             . $  CALCULATE LAST DBXU
)@@G@@ANK ADDRESS @G@@@[          L,U       A2,SCFPNO         . $  NO. OF PGS XV
)@@G@@IN FOREIGN PG BUF @E@@@[          LSSL      A2,1              . $ MULTIPXW
)@@G@@LY BY 2     @E@@@[          AN,U      A2,2              . $  LESS 2     XX
)@@G@@      @E@@@[          LXI       A2,(-2)           . $ INCRMENT = -2     XY
)@@G@@@E@@@[          L         A1,SCMAXPG        . $  MAXIMUM PAGE SIZE@]@@@[XZ
)@@G@@SCAN25.     @I@@@[          S,H2      A0,SCFPTBL+1,A2   . $  STORE FOREIYA
)@@G@@GN PAGE BUFFER ADDR           @E@@@[          A         A0,A1           YB
)@@G@@  . $  NEXT BUFFER ADDR @G@@@[          JMGI      A2,SCAN25         . $ YC
)@@G@@ JP IF MORE BUFFERS           @G@@@[          S,H1      A1,SCFDBPKT+8   YD
)@@G@@  . $  STORE SIZE OF BUFFER IN PKT  @E@@@[          S         A0,LAST$D YE
)@@G@@        . $  STORE IT         @E@@@[          ER        MCORE$          YF
)@@G@@  . $  GO GET THE CORE  @G@@@[          L,H2      A3,C3             . $ YG
)@@G@@ LOCATION OF C3 TABLE         @G@@@[          S         A3,SCAREA       YH
)@@G@@  . $  STORE AS CURRENT AREA ENTRY  @]@@@[.           @E@@@[. GET NEXT AYI
)@@G@@REA TABLE(C3) ENTRY AND SCAN FOR RECORDS        @^@@@[. REGISTER USAGE: YJ
)@@G@@      @C@@@[.     X9 - LOCATION OF CURRENT SLOT WORD        @C@@@[.     YK
)@@G@@X10 - LOCATION OF CURRENT RECORD          @A@@@[.     A0 - ADDRESS OF CUYL
)@@G@@RRENT PAGE  @^@@@[.     A1 - AREA CODE    @^@@@[.     A2 - PAGE NUMBER  YM
)@@G@@@A@@@[.     A3 - CURRENT SLOT NUMBER      @]@@@[.           @]@@@[SCAN3.YN
)@@G@@      @G@@@[          L         A2,SCC2LOC        . $  LOAD NEXT ADDRESSYO
)@@G@@ IN C2      @I@@@[          AN        A2,SCC2AREA       . $  CALCULATE DYP
)@@G@@ISP FROM C2 AREA WD           @C@@@[          L,H2      X8,SCC2AREA     YQ
)@@G@@  . $       @G@@@[          S,T3      A2,,X8            . $  STORE IN NEYR
)@@G@@XT FIELD          @G@@@[          AN,U      A2,3              . $  CALCUYS
)@@G@@LATE NUMBER OF WDS      @G@@@[          S,T2      A2,,X8            . $ YT
)@@G@@ STORE NUMBER OF C2 ENTRIES   @G@@@[          L         A2,SCC2LOC      YU
)@@G@@  . $  NEXT LOCATION IN C2          @G@@@[          S         A2,SCC2AREYV
)@@G@@A       . $  STORE LOCATION OF AREA WD    @E@@@[          L         A1,,YW
)@@G@@A3            . $  GET AREA CODE    @C@@@[          SSL       A1,24     YX
)@@G@@        .         @E@@@[          S,T3      A1,SCAREACD       . $  STOREYY
)@@G@@ AREA CODE  @G@@@[          S,H1      A1,SCARPG         . $ STORE IN BUFYZ
)@@G@@FER CNTL WD       @G@@@[          S,H1      A1,SCARPG+1       . $ STORE ZA
)@@G@@IN BUFFER CNTL WD2      @E@@@[          S,T1      A1,,A2            . $ ZB
)@@G@@STORE IN C2       @E@@@[          DL        A4,1,A3           . $  LOAD ZC
)@@G@@AREA NAME   @G@@@[          DS        A4,SCPKT          . $  STORE IN PAZD
)@@G@@CKET FOR DBAM     @E@@@[          DS        A4,1,A2           . $  STOREZE
)@@G@@ IN C2      @G@@@[          A,U       A2,3              . $  INCREMENT LZF
)@@G@@OCATION           @E@@@[          S         A2,SCC2LOC        . $  STOREZG
)@@G@@ IT BACK    @E@@@[          TNZ,S1    8,A3              . $ SKIP IF PATCZH
)@@G@@H ONLY@E@@@[          J         SCAN34            . $ AREA TO BE SCANNEDZI
)@@G@@@G@@@[          L,H1      A4,4,A3           . $ NO. ALLOCATED PAGES     ZJ
)@@G@@      @G@@@[          A         A4,(01000000)     . $ BEGINNING AT PAGE ZK
)@@G@@1           @E@@@[          S         A4,,A2            . $ STORE IT IN ZL
)@@G@@C2    @G@@@[          A,U       A2,1              . $ INCREMENT NEXT LOCZM
)@@G@@ATION IN C2 @E@@@[          S         A2,SCC2LOC        . $ STORE IT    ZN
)@@G@@      @E@@@[          J         SCAN75            . $ CONTINUE          ZO
)@@G@@@]@@@[SCAN34.     @G@@@[          L         A2,SCC4LOC        . $  LOAD ZP
)@@G@@NEXT ADDRESS IN C4      @I@@@[          AN        A2,SCC4AREA       . $ ZQ
)@@G@@ CALCULATE DISP FROM C4 AREA WD           @C@@@[          L,H2      X8,SZR
)@@G@@CC4AREA       . $       @G@@@[          S,T3      A2,,X8            . $ ZS
)@@G@@ STORE IN NEXT FIELD          @G@@@[          AN,U      A2,3            ZT
)@@G@@  . $  CALCULATE NUMBER OF WDS      @G@@@[          S,T2      A2,,X8    ZU
)@@G@@        . $  STORE NUMBER OF C4 ENTRIES   @G@@@[          L         A2,SZV
)@@G@@CC4LOC        . $  LOCATION OF NEXT WORD IN C4  @G@@@[          S       ZW
)@@G@@  A2,SCC4AREA       . $  STORE LOCATION OF AREA WD    @G@@@[          S,ZX
)@@G@@T1      A1,,A2            . $  STORE ENTRY IN C4 FOR AREA   @E@@@[      ZY
)@@G@@    DS        A4,1,A2           . $  STORE IN C2      @G@@@[          A,ZZ
)@@G@@U       A2,3              . $  INCREMENT LOCATION           @E@@@[      AA
)@@G@@    S         A2,SCC4LOC        . $  STORE IT BACK    @E@@@[          L,AB
)@@G@@U       X10,1             . $  START PAGE       @E@@@[          S,H2    AC
)@@G@@  X10,SCPKT+8       . $  STORE IT IN PKT  @E@@@[          AN,U      X10,AD
)@@G@@1             . $ START PAGE - 1    @G@@@[          S,H2      X10,SCARPGAE
)@@G@@        . $ STORE IN BUFFER CNTL WD       @G@@@[          A,U       X10,AF
)@@G@@SCDBPGS       . $ LAST PAGE IN BUFFER           @G@@@[          S,H2    AG
)@@G@@  X10,SCARPG+1      . $ STORE IN BUFFER CNTL WD2      @E@@@[          L,AH
)@@G@@U       X10,020           . $ READ AND WAIT     @E@@@[          S,S2    AI
)@@G@@  X10,SCPKT+3       . $ FUNCTION CODE     @E@@@[          L,U       X10,AJ
)@@G@@SCPKT         . $  PACKET ADDRESS   @G@@@[          LMJ       X11,DB$AM AK
)@@G@@        . $  READ DATA BASE PAGES         @E@@@[          L,H2      A0,SAL
)@@G@@CPAGE         . $  GET PAGE SIZE    @G@@@[          MSI,U     A0,SCDBPGSAM
)@@G@@        . $  CALCULATE BUFFER SIZE        @G@@@[          S         A0,SAN
)@@G@@CDBBUFSZ      . $  STORE AS CURRENT BUFFER SIZE @G@@@[          L,H2    AO
)@@G@@  A0,SCPKT+7        . $  GET ADDRESS OF FIRST PAGE    @E@@@[          L AP
)@@G@@        A1,SCAREACD       . $  LOAD AREA CODE   @E@@@[          L,U     AQ
)@@G@@  A2,1              . $  FIRST PAGE       @]@@@[SCAN4.      @G@@@[      AR
)@@G@@    TNZ,H2    SCPKT+3           . $ SKIP IF WORDS TRANSFERRED     @G@@@[AS
)@@G@@          J         SCDBERR           . $  NON ZERO RETURN FROM READ    AT
)@@G@@@E@@@[          L,U       A0,021            . $ READ AND RETURN   @E@@@[AU
)@@G@@          S,S2      A0,SCPKT+3        . $ FUNCTION CODE     @E@@@[      AV
)@@G@@    L,H2      A0,SCPKT+7        . $ BUFFER ADDRESS    @G@@@[          S AW
)@@G@@        A0,SCDBUF         . $ STORE AS CURRENT BUFFER       @G@@@[      AX
)@@G@@    L         A0,SCDBUF1        . $ ADDRESS OF BUFFER 1           @G@@@[AY
)@@G@@          TNE       A0,SCDBUF         . $ SKIP IF CURRENT BUFFER NOT 1  AZ
)@@G@@@G@@@[          L         A0,SCDBUF2        . $ ADDRESS OF BUFFER 2     BA
)@@G@@      @E@@@[          S,H2      A0,SCPKT+7        . $ STORE IN PACKET   BB
)@@G@@@E@@@[          L         A0,SCPKT+8        . $ START PAGE        @E@@@[BC
)@@G@@          S         A0,SCSTPG         . $ STORE IT          @G@@@[      BD
)@@G@@    A,U       A0,SCDBPGS        . $ FIRST PAGE OF NEXT BLOCK      @E@@@[BE
)@@G@@          S,H2      A0,SCPKT+8        . $ STORE IT IN PKT   @E@@@[      BF
)@@G@@    L,U       X10,SCPKT         . $ PACKET ADDRESS    @G@@@[          L,BG
)@@G@@H2      A0,SCDBUF         . $  GET ADDRESS OF FIRST PAGE    @G@@@[      BH
)@@G@@    L         X8,A0             . $  ADDRESS OF FIRST PAGE        @G@@@[BI
)@@G@@          A,H2      X8,SCPKT+3        . $ END OF PAGES IN BUFFER        BJ
)@@G@@@E@@@[          S         X8,SCENDPGADR     . $  STORE IT         @C@@@[BK
)@@G@@          S         X8,SCSSVX8        . $ SAVE  @C@@@[          S       BL
)@@G@@  X9,SCSSVX9        . $ SAVE  @C@@@[          S         X10,SCSSVX10    BM
)@@G@@  . $ SAVE  @C@@@[          S         X11,SCSSVX11      . $ SAVE  @C@@@[BN
)@@G@@          DS        A0,SCSSVA0        . $ SAVE  @C@@@[          DS      BO
)@@G@@  A2,SCSSVA2        . $ SAVE  @C@@@[          DS        A4,SCSSVA4      BP
)@@G@@  . $ SAVE  @C@@@[          LMJ       X11,DB$AM         . $ READ  @E@@@[BQ
)@@G@@          L         X8,SCSSVX8        . $ RESTORE           @E@@@[      BR
)@@G@@    L         X9,SCSSVX9        . $ RESTORE           @E@@@[          L BS
)@@G@@        X10,SCSSVX10      . $ RESTORE           @E@@@[          L       BT
)@@G@@  X11,SCSSVX11      . $ RESTORE           @E@@@[          DL        A0,SBU
)@@G@@CSSVA0        . $ RESTORE           @E@@@[          DL        A2,SCSSVA2BV
)@@G@@        . $ RESTORE           @E@@@[          DL        A4,SCSSVA4      BW
)@@G@@  . $ RESTORE           @E@@@[          L,H2      A2,1,A0           . $ BX
)@@G@@ LOAD PAGE NUMBER @E@@@[          L         A1,SCAREACD       . $  LOAD BY
)@@G@@AREA CODE   @G@@@[SCAN41    TNZ,H1    3,A0              . $  SKIP IF SLOBZ
)@@G@@TS ALLOCATED      @G@@@[          J         SCENDPG           . $  NO SLCA
)@@G@@OTS ALLOCATED ON PG     @E@@@[          L,H1      X9,2,A0           . $ CB
)@@G@@ GET PAGE SIZE    @G@@@[          AN,U      X9,1              . $  DISP CC
)@@G@@TO END OF PAGE          @G@@@[          A         X9,A0             . $ CD
)@@G@@ LOCATION OF END OF PAGE      @I@@@[          L,H1      X10,6,A0        CE
)@@G@@  . $  LOAD NUMBER OF CALC CHAINS AT END        @G@@@[          AN      CF
)@@G@@  X9,X10            . $  LOCATION OF FIRST SLOT       @E@@@[          L,CG
)@@G@@U       A3,1              . $  CURRENT SLOT     @]@@@[SCAN5.      @G@@@[CH
)@@G@@          TP        0,X9              . $  SKIP IF SLOT IN USE          CI
)@@G@@@E@@@[          J         SCAN65            . $  SLOT NOT IN USE  @G@@@[CJ
)@@G@@          L,S1      A4,,X9            . $  GET DESC FIELD FROM SLOT     CK
)@@G@@@E@@@[          AND,U     A4,010            . $  ZERO MISC BITS   @I@@@[CL
)@@G@@          TZ        A5                . $  SKIP IF RECORD NOT ON FOREIGNCM
)@@G@@ PG         @G@@@[          J         SCFOREIGN         . $  RECORD ON FCN
)@@G@@OREIGN PG         @G@@@[          L,H2      X10,,X9           . $  DISPLCO
)@@G@@ACEMENT TO RECORD       @G@@@[          A         X10,A0            . $ CP
)@@G@@ LOCATION OF RECORD           @G@@@[          L,S3      A4,,X10         CQ
)@@G@@  . $  LOAD DESC FIELD OF RECORD    @G@@@[          AND,U     A4,010    CR
)@@G@@        . $  ZERO ALL BUT VACANCY BIT     @G@@@[          TNZ       A5  CS
)@@G@@              . $  SKIP IF A RECORD ENTRY       @E@@@[          J       CT
)@@G@@  SCAN65            . $  A VACANCY ENTRY  @E@@@[          L,T1      A4,,CU
)@@G@@X10           . $  LOAD RCODE       @G@@@[          TNE,T1    A4,SCRECLACV
)@@G@@ST      . $  SKIP IF DIFFERENT THAN LAST  @G@@@[          J         SCSACW
)@@G@@MEREC         . $  SAME AS LAST RECORD          @G@@@[          L       CX
)@@G@@  R1,SCREPEAT       . $  COUNTER FOR SEARCH           @G@@@[          L CY
)@@G@@        X11,SCSEARCH      . $  INDEX REGISTER FOR SEARCH    @G@@@[      CZ
)@@G@@    SE,T1     A4,SCRECORDS,*X11 . $  SEARCH RECORD TABLE          @G@@@[DA
)@@G@@          J         SCAN65            . $  NOT IN RECORD TABLE          DB
)@@G@@@]@@@[.           @G@@@[. RECORD WAS FOUND IN TABLE.  X11 CONTAINS OFFSEDC
)@@G@@T TO RECORD ENTRY.      @]@@@[.           @G@@@[          AN,U      X11,DD
)@@G@@1             . $  OFFSET INTO RECORD TABLE     @G@@@[          L       DE
)@@G@@  A4,SCRECORDS,X11  . $  GET RECORD TABLE ENTRY       @G@@@[          S DF
)@@G@@        A4,SCRECLAST      . $  STORE AS LAST ENTRY FOUND    @I@@@[SCAN55DG
)@@G@@    L         A5,SCRECSTAT,X11  . $  GET NUMBER OF RECORDS THIS CODE    DH
)@@G@@      @E@@@[          A,U       A5,1              . $  INCREMENT IT     DI
)@@G@@@E@@@[          S         A5,SCRECSTAT,X11  . $  STORE IT BACK    @G@@@[DJ
)@@G@@          L,S3      A4,SCRECLAST      . $  LOAD RECORD TYPE CODE        DK
)@@G@@@G@@@[          AND,U     A4,1              . $  ZERO ALL BUT OBJECT BITDL
)@@G@@      @G@@@[          TZ        A5                . $  SKIP IF NOT AN OBDM
)@@G@@JECT RECORD @E@@@[          J         SCOBJ             . $  OBJECT RECODN
)@@G@@RD    @I@@@[          S         A4,SCC2THISPG     . $  STORE NON OBJECT DO
)@@G@@RECORD THIS PAGE        @]@@@[.           @E@@@[. CHECK WHETHER THERE ARDP
)@@G@@E SETS TO SCAN OFF THIS RECORD      @]@@@[.           @]@@@[SCAN6.      DQ
)@@G@@@E@@@[          L,S1      A4,,X9            . $ DESC FROM SLOT    @G@@@[DR
)@@G@@          AND,U     A4,020            . $ ZERO ALL BUT FOREIGN RECORD   DS
)@@G@@@G@@@[          TZ        A5                . $ SKIP IF NOT  A FOREIGN RDT
)@@G@@EC    @G@@@[          J         SCAN65            . $ FOREIGN RECORD CONDU
)@@G@@TINUE       @E@@@[          L         A4,SCRECLAST      . $ RTBL ENTRY  DV
)@@G@@      @G@^@[          AND       A4,SCSMSK         . $ CHECK FOR SETS TO DW
)@@G@@SCAN        @G@@@^          AND       A4,SCSMSK1        . $ CHECK FOR SEDX
)@@G@@TS TO SCAN        @G@@@[          A,H1      A3,6,A0           . $ NUMBERDY
)@@G@@ OF THIS SLOT           @G@^@[          TZ        A5                . $ DZ
)@@G@@SKIP IF NO SETS TO SCAN       @G@@@^          TNE       A5,SCSMSK       EA
)@@G@@  . SKIP IF SETS NOT TO BE SCANNED  @E@@@[          LMJ       X11,SSET  EB
)@@G@@        . $ SCAN VIA SET      @I@@@[          AN,H1     A3,6,A0         EC
)@@G@@  . $ NUMBER OF THIS SLOT - CALC CHNS           @]@@@[.           @E@@@[ED
)@@G@@. IF MORE RECORDS ON THIS PAGE PREPARE TO CHECK THEM        @]@@@[.     EE
)@@G@@      @]@@@[SCAN65.     @G@@@[          TNE,H1    A3,3,A0           . $ EF
)@@G@@ SKIP IF MORE SLOTS           @E@@@[          J         SCENDPG         EG
)@@G@@  . $  JP END OF PAGE   @E@@@[          A,U       A3,1              . $ EH
)@@G@@ INCREMENT SLOT   @G@@@[          AN,U      X9,1              . $  LOCATEI
)@@G@@ION OF NEXT SLOT        @E@@@[          J         SCAN5             . $ EJ
)@@G@@ CONTINUE         @]@@@[.           @E@@@[. NO MORE PAGES IN THIS AREA. EK
)@@G@@ PREPARE TO SCAN NEXT AREA.   @]@@@[.           @]@@@[SCAN7.      @G@@@[EL
)@@G@@          SZ        SCENDAREA         . $ CLEAR END OF AREA FLAG        EM
)@@G@@@G@@@[          L,U       X10,SCC2LOC       . $  LOCATION OF NEXT C2 WD EN
)@@G@@      @G@@@[          LMJ       X11,SCBREAK       . $  CREATE LAST C2 ENEO
)@@G@@TRY         @G@@@[          L,U       X10,SCC4LOC       . $  LOCATION OFEP
)@@G@@ NEXT C4 WD       @G@@@[          LMJ       X11,SCBREAK       . $  CREATEQ
)@@G@@E LAST C4 ENTRY         @G@@@[SCAN75    TNZ,T3    *SCAREA           . $ ER
)@@G@@ SKIP IF MORE AREAS TO SCAN   @G@@@[          J         SCAN8           ES
)@@G@@  . $  NO MORE AREAS TO SCAN        @E@@@[          L         A3,SCMINUSET
)@@G@@1000    . $  LOAD MINUS 1000  @G@@@[          S         A3,SCC2HI       EU
)@@G@@  . $  STORE AS HIGH VALUE FOR C2   @G@@@[          S         A3,SCC4HI EV
)@@G@@        . $  STORE AS HIGH VALUE FOR C4   @E@@@[          L,T3      A3,*EW
)@@G@@SCAREA        . $  LOAD LINK TO NEXT@G@@@[          A         A3,SCAREA EX
)@@G@@        . $  ADDRESS OF NEXT AREA ENTRY   @E@@@[          S         A3,SEY
)@@G@@CAREA         . $  STORE IT         @E@@@[          J         SCAN3     EZ
)@@G@@        . $  CONTINUE SCAN    @]@@@[.           @A@@@[. NO MORE AREAS.  FA
)@@G@@PREPARE TO RETURN.@]@@@[.           @]@@@[SCAN8.      @G@@@[          L FB
)@@G@@        A2,SCC2LOC        . $  LOAD NEXT ADDRESS IN C2      @I@@@[      FC
)@@G@@    AN        A2,SCC2AREA       . $  CALCULATE DISP FROM C2 AREA WD     FD
)@@G@@      @G@@@[          AN,U      A2,3              . $  SUBTRACT WDS IN HFE
)@@G@@EADER       @C@@@[          L         X8,SCC2AREA       .         @G@@@[FF
)@@G@@          S,T2      A2,,X8            . $  STORE NUMBER OF C2 ENTRIES   FG
)@@G@@@E@@@[          SZ,T3     ,X8               . $  ZERO NEXT FIELD  @G@@@[FH
)@@G@@          L         A2,SCC4LOC        . $  LOAD NEXT ADDRESS IN C4      FI
)@@G@@@I@@@[          AN        A2,SCC4AREA       . $  CALCULATE DISP FROM C4 FJ
)@@G@@AREA WD           @G@@@[          AN,U      A2,3              . $  SUBTRFK
)@@G@@ACT WDS IN HEADER       @C@@@[          L         X8,SCC4AREA       .   FL
)@@G@@      @G@@@[          S,T2      A2,,X8            . $  STORE NUMBER OF CFM
)@@G@@4 ENTRIES   @E@@@[          SZ,T3     ,X8               . $  ZERO NEXT FFN
)@@G@@IELD  @G@@@[          L         A2,SCC2LOC        . $  LOAD NEXT LOCATIOFO
)@@G@@N IN C2     @G@@@[          L,H2      A3,C2             . $  LOAD START FP
)@@G@@OF C2 TABLE       @I@@@[          AN        A2,A3             . $  CALCUFQ
)@@G@@LATE NUMBER OF WORDS IN C2          @E@@@[          S,H1      A2,C2     FR
)@@G@@        . $  STORE IT         @G@@@[          L         A2,SCC4LOC      FS
)@@G@@  . $  LOAD NEXT LOCATION IN C4     @G@@@[          L,H2      A3,C4     FT
)@@G@@        . $  LOAD START OF C4 TABLE       @I@@@[          AN        A2,AFU
)@@G@@3             . $  CALCULATE NUMBER OF WORDS IN C4          @E@@@[      FV
)@@G@@    S,H1      A2,C4             . $  STORE IT         @I@@@[          TZFW
)@@G@@        SCOBJUNL          . $  SKIP IF THIS WAS NOT SCAN UNLOAD         FX
)@@G@@@E@@@[          LMJ       X11,UNLF          . $  GO FLUSH BUFFERS @E@@@[FY
)@@G@@          J         *SCSAVX11         . $  RETURN           @]@@@[.     FZ
)@@G@@      @C@@@[. END OF PAGE.  SETUP TO SCAN NEXT PAGE.        @]@@@[.     GA
)@@G@@      @]@@@[SCENDPG.    @G@@@[          TNZ       SCC2THISPG        . $ GB
)@@G@@ SKIP IF C2 ENTRY FOR THIS PG @E@@@[          J         SCENDPG1        GC
)@@G@@  . $  JP TO CHECK C4   @G@@@[          L,U       A4,GAP            . $ GD
)@@G@@ INTERVAL BREAK VALUE         @I@@@[          L,U       X10,SCC2LOC     GE
)@@G@@  . $  NEXT LOCATION IN C2 WORD ADDRESS         @E@@@[          L       GF
)@@G@@  A5,A2             . $  PAGE NUMBER      @E@@@[          AN        A5,SGG
)@@G@@CC2HI         . $  CURRENT INTERVAL @E@@@[          TLE       A4,A5     GH
)@@G@@        . $  SKIP IF NO BREAK @C@@@[          LMJ       X11,SCBREAK     GI
)@@G@@  . $  BREAK@G@@@[          S         A2,SCC2HI         . $  STORE NEW HGJ
)@@G@@I VALUE           @E@@@[          SZ        SCC2THISPG        . $  ZERO GK
)@@G@@FLAG        @]@@@[SCENDPG1.   @G@@@[          TNZ       SCC4THISPG      GL
)@@G@@  . $  SKIP IF C4 ENTRY THIS PG     @E@@@[          J         SCENDPG2  GM
)@@G@@        . $  CONTINUE         @G@@@[          L,U       A4,GAP          GN
)@@G@@  . $  LOAD BREAK INTERVAL          @E@@@[          L         A5,A2     GO
)@@G@@        . $  PAGE NUMBER      @E@@@[          AN        A5,SCC4HI       GP
)@@G@@  . $ CURRENT INTERVAL  @G@@@[          L,U       X10,SCC4LOC       . $ GQ
)@@G@@ NEXT LOCATION IN C4 WORD ADDR@E@@@[          TLE       A4,A5           GR
)@@G@@  . $  SKIP IF NO BREAK @C@@@[          LMJ       X11,SCBREAK       . $ GS
)@@G@@ BREAK@G@@@[          S         A2,SCC4HI         . $  STORE NEW HI VALUGT
)@@G@@E           @E@@@[          SZ        SCC4THISPG        . $  ZERO FLAG  GU
)@@G@@      @G@@@[SCENDPG2  A         A0,SCPAGE         . $  ADDRESS OF NEXT PGV
)@@G@@AGE         @G@@@[          A,U       A2,1              . $  INCREMENT PGW
)@@G@@AGE NUMBER        @G@@@[          TE        A0,SCENDPGADR     . $  SKIP GX
)@@G@@IF NO PGS IN BUFFER     @E@@@[          J         SCAN41            . $ GY
)@@G@@ CONTINUE         @G@@@[          TZ        SCENDAREA         . $  SKIP GZ
)@@G@@IF MORE PGS IN AREA     @G@@@[          J         SCAN7             . $ HA
)@@G@@ NO MORE PGS IN AREA          @E@@@[          TP        SCPKT+3         HB
)@@G@@  . $ SKIP IF I/O DONE  @E@@@[          ER        WAIT$             . $ HC
)@@G@@ELSE WAIT         @G@@@[          L,H2      A0,SCPKT+8        . $ START HD
)@@G@@PAGE OF BUFFER          @E@@@[          AN,U      A0,1              . $ HE
)@@G@@START PAGE - 1    @G@@@[          S,H2      A0,SCARPG         . $ STORE HF
)@@G@@IN CNTL WD FOR MAIN BUF @E@@@[          A,U       A0,SCDBPGS        . $ HG
)@@G@@LAST PG IN BUFFER @E@@@[          S,H2      A0,SCARPG+1       . $ STORE HH
)@@G@@IN CNTL WD2 @E@@@[          J         SCAN4             . $  CONTINUE SCHI
)@@G@@AN    @]@@@[.           @C@@@[. A BREAK HAS OCCURRED.  START NEW INTERVAHJ
)@@G@@L.    @]@@@[.           @]@@@[SCBREAK.    @G@@@[          TP        2,X1HK
)@@G@@0             . $  SKIP IF NOT FIRST INT        @E@@@[          J       HL
)@@G@@  SCBREAK1          . $  FIRST INTERVAL   @G@@@[          DL        A4,1HM
)@@G@@,X10          . $  LOAD LOW AND HIGH PAGE       @C@@@[          L       HN
)@@G@@  X8,,X10           .         @G@@@[          S,H1      A4,0,X8         HO
)@@G@@  . $  STORE IN EITHER C2 OR C4     @E@@@[          AN        A5,A4     HP
)@@G@@        . $  HIGH - LOW       @E@@@[          A,U       A5,1            HQ
)@@G@@  . $  PAGES IN INTERVAL@I@@@[          S,H2      A5,0,X8           . $ HR
)@@G@@ STORE NUMB OF PAGES IN C2 OR C4          @G@@@[          L         A5,,HS
)@@G@@X10           . $  LOAD ADDRESS OF THIS C ENTRY @E@@@[          A,U     HT
)@@G@@  A5,1              . $  INCREMENT IT     @E@@@[          S         A5,,HU
)@@G@@X10           . $  STORE IT BACK    @G@@@[SCBREAK1  S         A2,1,X10  HV
)@@G@@        . $  STORE NEW LOW VALUE          @E@@@[          J         0,X1HW
)@@G@@1             . $  RETURN           @]@@@[.           @A@@@[. AN OBJECT HX
)@@G@@RECORD HAS BEEN FOUND.  @]@@@[.           @]@@@[SCOBJ.      @G@@@[      HY
)@@G@@    S         A5,SCC4THISPG     . $  STORE OBJECT RECORD THIS PG  @G@@@[HZ
)@@G@@          L,S1      A4,,X9            . $  LOAD DESC FIELD FROM SLOT    IA
)@@G@@@E@@@[          AND,U     A4,020            . $  ZERO MISC BITS   @I@@@[IB
)@@G@@          TZ        A5                . $  SKIP IF THIS RECORD NOT FOREIIC
)@@G@@GN          @G@@@[          J         SCAN65            . $  RECORD FOREID
)@@G@@IGN TO PAGE       @G@@@[          TNZ       SCOBJUNL          . $ SKIP IIE
)@@G@@F UNLOAD OPTION         @E@@@[          J         SCAN6             . $ IF
)@@G@@CONTINUE          @E@@@[          L,S3      A4,SCRECLAST      . $ GET RTIG
)@@G@@YPE         @G@@@[          SSL       A4,5              . $ GET UNLOAD VIH
)@@G@@IA SET BIT        @I@@@[          TZ        A4                . $ SKIP III
)@@G@@F RECORD NOT UNLOADED VIA SET       @G@@@[          J         SCAN65    IJ
)@@G@@        . $ CONTINUE FOR UNLOAD VIA SET   @C@@@[          L,S3      A4,SIK
)@@G@@CRECLAST      . RTYPE   @E@@@[          AND,U     A4,010            . 0 IL
)@@G@@IF NOT DIRECT     @E@@@[          S         A5,SCDIRECT       . STORE ITIM
)@@G@@ FOR UNLOAD @E@@@[          LMJ       X11,UNL           . $ UNLOAD IT   IN
)@@G@@      @E@@@[          J         SCAN6             . $ CONTINUE          IO
)@@G@@@]@@@[.           @A@@@[. SAME RECORD FOUND AS LAST TIME    @]@@@[.     IP
)@@G@@      @]@@@[SCSAMEREC.  @G@@@[          L,S4      X11,SCRECLAST     . $ IQ
)@@G@@ POSITION IN RECORD TABLE     @E@@@[          J         SCAN55          IR
)@@G@@  . $  CONTINUE         @]@@@[.           @E@@@[. NON ZERO STATUS RETURNIS
)@@G@@ED FROM DATA BASE ACCESS METHOD     @]@@@[.           @]@@@[SCDBERR.    IT
)@@G@@@C@@@[          L,S1      A5,SCPKT+3        . $ STATUS@E@@@[          TNIU
)@@G@@E,U     A5,022            . $ SKIP IF NOT AN 022@E@@@[          J       IV
)@@G@@  SCAN7             . $  SCAN NEXT AREA   @E@@@[          L,U       X10,IW
)@@G@@SCPKT         . $ ADDRESS OF PKT    @C@@@[          LMJ       X11,IOERR IX
)@@G@@        . $ ERROR @]@@@[.           @G@@@[. A FOREIGN PAGE POINTER HAS BIY
)@@G@@EEN FOUND.  GET FOREIGN PAGE.  IF         @E@@@[. RECORD IS AN OBJECT REIZ
)@@G@@CORD UNLOAD IT.  DO NOT INCLUDE IT  @G@@@[. IN C4.  IF RECORD IS NOT AN JA
)@@G@@OBJECT RECORD DO NOT INCLUDE IT IN C2.    @]@@@[.           @]@@@[SCFOREJB
)@@G@@IGN.  @I@@@[          TNZ       SCOBJUNL          . $  SKIP IF RECORDS TJC
)@@G@@O BE UNLOADED           @G@@@[          J         SCAN65            . $ JD
)@@G@@ NOT TO BE UNLOADED   CONTINUE@E@@@[          DS        A0,SCSAVA0      JE
)@@G@@  . $  SAVE REGISTERS   @C@@@[          DS        A2,SCSAVA2        .   JF
)@@G@@      @C@@@[          DS        A4,SCSAVA4        .         @C@@@[      JG
)@@G@@    S         X8,SCSAVX8        .         @E@@@[          S         X9,SJH
)@@G@@CSAVX9        . $  SAVE REGISTER    @C@@@[          S         X10,SCSAVXJI
)@@G@@10      .         @E@@@[          A,H1      A3,6,A0           . $ SLOT NJJ
)@@G@@UMBER       @E@@@[          DL        A4,SCPKT          . $ AREA-NAME   JK
)@@G@@      @G@@@[          DS        A4,SCFANAME       . $ STORE IN PKT FOR FJL
)@@G@@OREIGN PG   @C@@@[          L,H2      A5,,X9            . $ PAGE  @E@@@[JM
)@@G@@          L,H2      A4,SCAREACD       . $ AREA CODE         @E@@@[      JN
)@@G@@    LSSL      A5,18             . $ LEFT JUSTIFY      @E@@@[          LDJO
)@@G@@SL      A4,18             . $ AREA-CODE , PAGE  @G@@@[          LMJ     JP
)@@G@@  X11,SCFOREIG      . $ GET FOREIGN PAGE AND RECORD   @G@@@[          J JQ
)@@G@@        SCAN65            . $ ERROR   RECORD NOT FOUND      @E@@@[      JR
)@@G@@    L,T1      A4,,A1            . $  LOAD RCODE       @G@@@[          L JS
)@@G@@        R1,SCREPEAT       . $  COUNTER FOR SEARCH           @G@@@[      JT
)@@G@@    L         X11,SCSEARCH      . $  INDEX REGISTER FOR SEARCH    @G@@@[JU
)@@G@@          SE,T1     A4,SCRECORDS,*X11 . $  SEARCH RECORD TABLE          JV
)@@G@@@E@@@[          J         SCFP04            . $  NOT FOUND        @G@@@[JW
)@@G@@          AN,U      X11,1             . $  OFFSET INTO RECORD TABLE     JX
)@@G@@@G@@@[          L,S3      A4,SCRECORDS,X11  . $  LOAD RECORD TYPE CODE  JY
)@@G@@      @G@@@[          AND,U     A4,1              . $  ZERO ALL BUT OBJEJZ
)@@G@@CT BIT      @G@@@[          TNZ       A5                . $  SKIP IF AN KA
)@@G@@OBJECT RECORD     @G@@@[          J         SCFP03            . $ CHECK KB
)@@G@@WHETHER SETS TO SCAN    @G@@@[          AND,U     A4,010            . DIKC
)@@G@@RECT BIT FROM RTYPE           @E@@@[          S         A5,SCDIRECT     KD
)@@G@@  . STORE IT FOR UNLOAD @E@@@[          AND,U     A4,040            . $ KE
)@@G@@ZERO MISC BITS    @E@@@[          L         A2,SCSAVA0+1      . $ AREA CKF
)@@G@@ODE         @G@@@[          TNZ       A5                . $ SKIP IF UNLOKG
)@@G@@ADED VIA SET      @E@@@[          LMJ       X11,UNL1          . $ UNLOADKH
)@@G@@ IT         @]@@@[SCFP03.     @E@@@[          AND,U     A4,020          KI
)@@G@@  . $ ZERO MISC BITS    @G@@@[          TNZ       A5                . $ KJ
)@@G@@SKIP IF SETS TO SCAN          @E@@@[          J         SCFP04          KK
)@@G@@  . $ CONTINUE          @G@@@[          DL        A0,SCSAVA0        . $ KL
)@@G@@PAGE ADDRESS AND AREA CODE    @E@@@[          DL        A2,SCSAVA2      KM
)@@G@@  . $ PAGE IN A2        @E@@@[          A,H1      A3,6,A0           . $ KN
)@@G@@SLOT NUMBER       @E@@@[          L         A4,SCRECORDS,X11  . $ RTBL EKO
)@@G@@NTRY        @E@@@[          LMJ       X11,SSET          . $ SCAN VIA SETKP
)@@G@@      @E@@@[SCFP04    DL        A0,SCSAVA0        . $  RESTORE REGISTERSKQ
)@@G@@@E@@@[          DL        A2,SCSAVA2        . $  RESTORE REGISTER @C@@@[KR
)@@G@@          DL        A4,SCSAVA4        .         @C@@@[          L       KS
)@@G@@  X8,SCSAVX8        .         @C@@@[          L         X9,SCSAVX9      KT
)@@G@@  .         @C@@@[          L         X10,SCSAVX10      .         @E@@@[KU
)@@G@@          J         SCAN65            . $ CONTINUE          @]@@@[SCFOREKV
)@@G@@IG.   @E@@@[          S         X11,SCFSAVX11     . $ SAVE REGISTER     KW
)@@G@@@G@@@[          L,U       R1,SCFPNO         . $  NUMBER OF FOREIGN PG BUKX
)@@G@@FFERS @G@@@[          L         X11,SCFIND        . $  INDEX REGISTER FOKY
)@@G@@R SEARCH    @E@@@[          SE        A4,SCFPTBL,*X11   . $  SEARCH PAGEKZ
)@@G@@ TABLE@E@@@[          J         SCFGET            . $  GET PAGE NEEDED  LA
)@@G@@@G@@@[          AN,U      X11,2             . $  INDEX INTO FOREIGN PG TLB
)@@G@@ABLE  @E@@@[          L,H2      X11,SCFPTBL+1,X11 . $  ADDRESS OF PAGE  LC
)@@G@@@]@@@[.           @C@@@[. PAGE IS IN BUFFER POINTED TO BY X11           LD
)@@G@@@]@@@[.           @]@@@[SCFP1.      @E@@@[          L         A4,X11    LE
)@@G@@        . $  LOCATION OF PAGE @E@@@[          L,H1      A5,2,X11        LF
)@@G@@  . $  GET PAGE SIZE    @G@@@[          AN,U      A5,1              . $ LG
)@@G@@DISP TO END OF PAGE           @G@@@[          A         A4,A5           LH
)@@G@@  . $ LOCATION OF END OF PAGE       @I@@@[          L,H1      A5,6,X11  LI
)@@G@@        . $  LOAD NUMBER OF CALC CHAINS AT END        @G@@@[          ANLJ
)@@G@@        A4,A5             . $  LOCATION OF FIRST SLOT       @G@@@[      LK
)@@G@@    S,H2      A4,SCFIND1        . $  STORE IN INDEX WD FOR SEARCH @G@@@[LL
)@@G@@          L         X8,SCFIND1        . $  INDEX WD FOR SEARCH          LM
)@@G@@@I@@@[          SLJ       APS$DBP           . $  CONSTRUCT A POINTER FORLN
)@@G@@ PRIME PG         @G@@@[          L         A4,,X9            . $  SLOT LO
)@@G@@WD FROM PRIME PAGE      @E@@@[          LSSL      A4,6              . $ LP
)@@G@@ LEFT SHIFT SIX   @E@@@[          SSL       A4,6              . $  RIGHTLQ
)@@G@@ SHIFT SIX  @G@@@[          OR        A4,SCFSET34       . $  SET BIT 34 LR
)@@G@@FOR FOREIGN RECD  @G@@@[          L,H1      R1,3,X11          . $  NUMBELS
)@@G@@R OF SLOTS ALLOCATED    @E@@@[          L         R2,SCFMASK        . $ LT
)@@G@@ MASK FOR SEARCH  @]@@@[SCFP2.      @E@@@[          MSE       A5,,*X8   LU
)@@G@@        . $  SEARCH FOR RECORD@E@@@[          J         SCFERR          LV
)@@G@@  . $  RECORD NOT FOUND @]@@@[.           @G@@@[. A RECORD ON A FOREIGN LW
)@@G@@PAGE WAS FOUND WITH THE CORRECT RECORD          @C@@@[. NUMBER.  CHECK PLX
)@@G@@RIME PAGE POINTER FOR A MATCH.@]@@@[.           @G@@@[          L,H2    LY
)@@G@@  A1,1,X8           . $  DISPLACEMENT TO RECORD       @G@@@[          A LZ
)@@G@@        A1,X11            . $  LOCATION OF RECORD           @E@@@[      MA
)@@G@@    L         X10,A1            . $ ADDRESS OF RECORD @G@@@[          L,MB
)@@G@@H2      A2,,A1            . $  LOAD RECORD LENGTH           @G@@@[      MC
)@@G@@    A         A2,A1             . $  PAST END OF RECORD           @G@@@[MD
)@@G@@          AN,U      A2,1              . $  LOC OF PRIME PG POINTER      ME
)@@G@@@G@@@[          TE        A0,,A2            . $  SKIP IF POINTERS EQUAL MF
)@@G@@      @E@@@[          J         SCFP2             . $  DIFFERENT        MG
)@@G@@@]@@@[.           @^@@@[. FOUND THE RECORD      @]@@@[.           @E@@@[MH
)@@G@@          L         X11,SCFSAVX11     . $ RESTORE           @C@@@[      MI
)@@G@@    J         1,X11             . $ RETURN@]@@@[.           @C@@@[. THE MJ
)@@G@@RECORD WAS NOT FOUND ON THE FOREIGN PAGE  @]@@@[.           @]@@@[SCFERRMK
)@@G@@.     @C@@@[          L$SNAP    'FOREIG',7,4,SCSAVA0        @E@@@[      ML
)@@G@@    L         X11,SCFSAVX11     . $ RESTORE           @C@@@[          J MM
)@@G@@        0,X11             . $ RETURN@]@@@[.           @C@@@[. PAGE NUMBEMN
)@@G@@R IN A4 MUST BE BROUGHT IN          @]@@@[.           @]@@@[SCFGET.     MO
)@@G@@@G@@@[          L         A0,SCFNXT         . $  NEXT PGTBL ENTRY TO WRIMP
)@@G@@TE    @E@@@[          S         A4,SCFPTBL,A0     . $  STORE PAGE TBL   MQ
)@@G@@@G@@@[          S,H2      A4,SCFDBPKT+8     . $  STORE PAGE IN DB$AM PKTMR
)@@G@@      @G@@@[          L,H2      A4,SCFPTBL+1,A0   . $  LOAD BUFFER ADDREMS
)@@G@@SS          @E@@@[          S,H2      A4,SCFDBPKT+7     . $  STORE IN PAMT
)@@G@@CKET  @E@@@[          A,U       A0,2              . $  INCREMENT SCFNXT MU
)@@G@@@G@@@[          TNE,U     A0,SCFPNO         . $  SKIP IF NOT TIME TO RESMV
)@@G@@ET    @C@@@[          SZ        A0                . $  RESET@E@@@[      MW
)@@G@@    S         A0,SCFNXT         . $  STORE IT         @G@@@[          L,MX
)@@G@@U       X10,SCFDBPKT      . $  ADDR OF PKT FOR DB$AM        @C@@@[      MY
)@@G@@    S         X8,SCFSAVX8       . $ SAVE  @C@@@[          S         X9,SMZ
)@@G@@CFSAVX9       .         @C@@@[          S         X10,SCFSAVX10     .   NA
)@@G@@      @C@@@[          DS        A0,SCFSAVA0       .         @C@@@[      NB
)@@G@@    DS        A2,SCFSAVA2       .         @C@@@[          DS        A4,SNC
)@@G@@CFSAVA4       .         @E@@@[          LMJ       X11,DB$AM         . $ ND
)@@G@@ GO READ PAGE     @E@@@[          TZ,S1     SCFDBPKT+3        . $  SKIP NE
)@@G@@IF READ OK  @E@@@[          LMJ       X11,IOERR         . $ I/O ERROR   NF
)@@G@@      @G@@@[          L,H2      X11,SCFDBPKT+7    . $  GET ADDRESS OF PANG
)@@G@@GE          @E@@@[          DL        A0,SCFSAVA0       . $  RESTORE REGNH
)@@G@@ISTER @C@@@[          DL        A2,SCFSAVA2       .         @C@@@[      NI
)@@G@@    DL        A4,SCFSAVA4       .         @C@@@[          L         X8,SNJ
)@@G@@CFSAVX9       .         @C@@@[          L         X9,SCFSAVX9       .   NK
)@@G@@      @C@@@[          L         X10,SCFSAVX10     .         @E@@@[      NL
)@@G@@    J         SCFP1             . $  CONTINUE         @]@@@[.           NM
)@@G@@@C@@@[.              ****    SCAN VIA SET    ****     @]@@@[.           NN
)@@G@@@A@@@[. INPUTS:    X8  - OLD STACK        @C@@@[.            X10 - LOCATNO
)@@G@@ION OF CURRENT RECORD   @A@@@[.            X11 - RETURN ADDRESS   @C@@@[NP
)@@G@@.            A0 - ADDRESS OF CURRENT PAGE       @A@@@[.            A1 - NQ
)@@G@@AREA CODE         @A@@@[.            A2 - PAGE NUMBER       @C@@@[.     NR
)@@G@@       A3 - CURRENT SLOT NUMBER           @E@@@[.            A4  - RECORNS
)@@G@@D TABLE ENTRY FOR CURRENT RECORD    @]@@@[.           @]@@@[SSET.       NT
)@@G@@@E@@@[          S         X8,*STKADR        . $ SAVE REGISTERS    @G@@@[NU
)@@G@@          L         X8,STKADR         . $ GET ADDRESS OF NEW STACK      NV
)@@G@@@E@@@[          S         X9,1,X8           . $ SAVE REGISTERS    @C@@@[NW
)@@G@@          S         X10,2,X8          .         @C@@@[          S       NX
)@@G@@  X11,3,X8          .         @C@@@[          DS        A0,4,X8         NY
)@@G@@  .         @C@@@[          DS        A2,6,X8           .         @C@@@[NZ
)@@G@@          DS        A4,8,X8           .         @G@@@[          SLJ     OA
)@@G@@  APS$DBP           . $ COMPOSE A DBP FOR RECORD      @E@@@[          TNOB
)@@G@@Z       A0                . SKIP IF DBP OK      @C@@@[          J       OC
)@@G@@  SSAPSERR          . ERROR   @E@@@[          S         A0,SCSDFPKT1+3  OD
)@@G@@  . $ DBP OF OWNER      @E@@@[          S         A0,STDBPO,X8      . $ OE
)@@G@@STORE IT IN STACK @E@@@[          L         A4,8,X8           . $ RESTOROF
)@@G@@E A4        @E@@@[          L,S3      A1,8,X8           . RTYPE FOR OWNEOG
)@@G@@R     @C@@@[          LSSL      A1,35             .         @G@@@[      OH
)@@G@@    SSL       A1,35             . 1 IF OBJECT RECORD OWNS SET     @E@@@[OI
)@@G@@          S         A1,STOUL,X8       . STORE IT IN STACK   @E@@@[      OJ
)@@G@@    L         A1,SCSLVL         . $ VIA SET LEVEL     @E@@@[          A,OK
)@@G@@U       A1,1              . $ INCREMENT IT      @E@@@[          S       OL
)@@G@@  A1,SCSLVL         . $ STORE IT BACK     @E@@@[          DSL       A4,1OM
)@@G@@2             . $ OFFSET TO STBL    @E@@@[          SSL       A5,24     ON
)@@G@@        . $ RIGHT JUSTIFY IT  @G@@@[          SSL       A4,12           OO
)@@G@@  . $ RIGHT JUSTIFY RECORD CODE     @E@@@[          S         A4,STRCDE,OP
)@@G@@X8      . $ STORE IT IN STACK @E@@@[          L         A0,A5           OQ
)@@G@@  . $ OFFSET TO STBL    @G@@@[          S         A0,STSTBL,X8      . $ OR
)@@G@@STORE STBL OFFSET IN STACK    @G@@@[          L         A1,STBL,A0      OS
)@@G@@  . $ FIRST WORD OF SET TABLE       @G@@@[          S         A1,STRTBL,OT
)@@G@@X8      . $ STORE ADDR OF RTBL IN STACK   @G@@@[          L         A2,SOU
)@@G@@TBL+1,A0      . $ CNT,MADR  FROM STBL           @E@@@[          S       OV
)@@G@@  A2,STMANC,X8      . $ STORE IT IN STACK @G@@@[          S         A2,SOW
)@@G@@TMANCO,X8     . $ STORE FOR OWNER RECORD        @E@@@[          L       OX
)@@G@@  X9,A0             . $ STBL ADDRESS      @G@@@[          A,U       X9,2OY
)@@G@@              . $ ADDRESS OF FIRST SET ENTRY    @E@@@[          LXI,U   OZ
)@@G@@  X9,1              . $ FIRST SET TO SCAN @]@@@[.           @E@@@[. SCANPA
)@@G@@ SET.  SET ENTRY ADDR IN X9.  RECORD ADDR IN X10.     @]@@@[.           PB
)@@G@@@]@@@[SS1.        @G@@@[          L,H2      A1,STBL,X9        . $ ADDRESPC
)@@G@@S OF SET ENTRY IN STBL  @E@@@[          L,T2      A1,,A1            . $ PD
)@@G@@SET CODE          @E@@@[          S         A1,STSCDE,X8      . $ STORE PE
)@@G@@IT IN STACK @G@@@[          L,H2      A0,STBL,X9        . $ ADDRESS OF SPF
)@@G@@ET ENTRY IN STBL  @G@@@[          L,S6      A0,,A0            . $ DISP IPG
)@@G@@NTO RECORD OF DBP       @G@@@[          A         A0,X10            . $ PH
)@@G@@ADDRESS OF DBP IN RECORD      @C@@@[          L         A0,,A0          PI
)@@G@@  . $ DBP   @]@@@[SS2.        @E@@@[          S         A0,STDBP,X8     PJ
)@@G@@  . $ STORE THIS DBP    @G@@@[          TNE       A0,STDBPO,X8      . $ PK
)@@G@@SKIP IF NOT END OF SET        @E@@@[          J         SSEOS           PL
)@@G@@  . $ END OF SET        @E@@@[          SLJ       DBP$APS           . $ PM
)@@G@@DECOMPOSE DBP     @G@@@[          TNZ       A1                . SKIP IF PN
)@@G@@NON ZERO AREA CODE      @C@@@[          J         SSDBPERR          . ERPO
)@@G@@ROR   @G@@@[          S         A1,STAREA,X8      . $ STORE AREA CODE INPP
)@@G@@ STACK      @G@@@[          S         A2,STPAGE,X8      . $ STORE PAGE NPQ
)@@G@@UMBER IN STACK    @G@@@[          S         A3,STSLOT,X8      . $ STORE PR
)@@G@@SLOT IN STACK           @G@@@[          S         A4,STATBL,X8      . $ PS
)@@G@@STORE AREA TABLE ADDRESS      @]@@@[.           @A@@@[. CHECK WHETHER PAPT
)@@G@@GE IS IN CORE     @]@@@[.           @E@@@[          LSSL      A2,18     PU
)@@G@@        . $ PG NUM TO H1      @E@@@[          DSL       A1,18           PV
)@@G@@  . $ ACODE,PG NUM      @G@@@[          DL        A0,SCARPG         . $ PW
)@@G@@CONTROL FOR VIA AREA BUFFER   @G@@@[          TNW       A0,A2           PX
)@@G@@  . $ SKIP IF NOT IN BUFFER         @^@@@[          J         SSX1@]@@@[PY
)@@G@@.           @A@@@[. CHECK SET BUFFERS FOR PAGE        @]@@@[.           PZ
)@@G@@@G@@@[          L,T1      A3,STBL,X9        . $ OFFSET TO FIRST SET BUFFQA
)@@G@@ER    @G@@@[          L,U       A5,SCSBNO         . $ NUMBER OF SET BUFFQB
)@@G@@ERS         @G@@@[          LSSL      A5,1              . $ X 2 WORDS PEQC
)@@G@@R BUFFER          @G@@@[          A         A5,A3             . $ WORD PQD
)@@G@@AST LAST BUFFER CNTL WD @]@@@[SS3.        @E@@@[          L         A0,SQE
)@@G@@CSBUF+1,A3    . $ BUFFER CNTL WD    @E@@@[          AN,U      A0,1      QF
)@@G@@        . $ START PAGE - 1    @C@@@[          L         A1,A0           QG
)@@G@@  .         @G@@@[          A,U       A1,SCSPGS         . $ LAST PAGE INQH
)@@G@@ BUFFER           @E@@@[          TNW       A0,A2             . $ SKIP IQI
)@@G@@F NOT FOUND @^@@@[          J         SSX2@E@@@[          A,U       A3,2QJ
)@@G@@              . $ NEXT SET BUFFER   @E@@@[          TE        A3,A5     QK
)@@G@@        . $ SKIP IF LAST      @G@@@[          J         SS3             QL
)@@G@@  . $ CONTINUE CHECKING BUFFERS     @]@@@[.           @^@@@[. PAGE NOT IQM
)@@G@@N BUFFER    @]@@@[.           @G@@@[          L         A0,A4           QN
)@@G@@  . $ ADDRESS OF AREA TABLE ENTRY   @E@@@[          DL        A0,1,A0   QO
)@@G@@        . $ AREA NAME         @E@@@[          DS        A0,SCSPKT       QP
)@@G@@  . $ STORE IN PACKET   @G@@@[          L         A1,A2             . $ QQ
)@@G@@AREA CODE,PAGE NUMBER         @E@@@[          LSSL      A1,18           QR
)@@G@@  . $ SHIFT OFF GARBAGE @E@@@[          SSL       A1,18             . $ QS
)@@G@@PAGE NUMBER       @C@@@[          SZ        A0                . $ ZERO  QT
)@@G@@@E@@@[          L         A5,A1             . $ PAGE NUMBER       @E@@@[QU
)@@G@@          DI,U      A0,SCSPGS         . $ A1 = REMAINDER    @G@@@[      QV
)@@G@@    AN        A5,A1             . $ FIRST PAGE TO PUT IN BUFFER   @G@@@[QW
)@@G@@          TNZ       A5                . $ SKIP IF LEGAL FIRST PAGE      QX
)@@G@@@G@@@[          L,U       A5,1              . $ USE 1 AS FIRST PAGE     QY
)@@G@@      @E@@@[          S,H2      A5,SCSPKT+8       . $ STORE IN PACKET   QZ
)@@G@@@G@@@[          L,T1      A0,STBL,X9        . $ OFFSET TO FIRST SET BUFFRA
)@@G@@ER    @E@@@[          L         A5,SCSBUF,A0      . $ BUFFER ADDRESS    RB
)@@G@@@G@@@[          L,U       A1,SCSBNO-1       . $ NO. OF SET BUFFERS - 1  RC
)@@G@@      @C@@@[          LSSL      A1,1              . $ X 2   @E@@@[      RD
)@@G@@    L         R1,A1             . $ REPEAT COUNT      @E@@@[          LXRE
)@@G@@I,U     A0,1              . $ INCREMENT         @E@@@[          L       RF
)@@G@@  A1,A0             . $ INDEX FOR TAKE    @E@@@[          A,U       A1,2RG
)@@G@@              . $ POINT TO NEXT     @E@@@[          BT        A0,SCSBUF,RH
)@@G@@*A1     . $ MOVE WORDS        @G@@@[          S         A5,SCSBUF,A0    RI
)@@G@@  . $ STORE BUFFER ADDRESS          @E@@@[          L,H2      A5,SCSPKT+RJ
)@@G@@8       . $ START PAGE        @G@@@[          S,H2      A5,SCSBUF+1,A0  RK
)@@G@@  . $ STORE IN BUF CNTL TABLE       @E@@@[          LSSC      A2,18     RL
)@@G@@        . $ POSITION AREA CODE@G@@@[          S,H1      A2,SCSBUF+1,A0  RM
)@@G@@  . $ STORE IN BUFFER CNTL TABLE    @E@@@[          L,H2      A0,SCSBUF,RN
)@@G@@A0      . $ BUFFER ADDRESS    @E@@@[          S,H2      A0,SCSPKT+7     RO
)@@G@@  . $ STORE IN PACKET   @C@@@[          S         X8,SCSSVX8        . $ RP
)@@G@@SAVE  @C@@@[          S         X9,SCSSVX9        . $ SAVE  @C@@@[      RQ
)@@G@@    S         X10,SCSSVX10      . $ SAVE  @C@@@[          S         X11,RR
)@@G@@SCSSVX11      . $ SAVE  @E@@@[          L,U       X10,SCSPKT        . $ RS
)@@G@@PACKET ADDRESS    @E@@@[          LMJ       X11,DB$AM         . $ READ PRT
)@@G@@AGES        @G@@@[          TNZ,H2    SCSPKT+3          . $ SKIP IF WDS RU
)@@G@@TRANSFERRED       @E@@@[          LMJ       X11,IOERR         . $ IO ERRRV
)@@G@@OR          @E@@@[          L         X8,SCSSVX8        . $ RESTORE     RW
)@@G@@      @E@@@[          L         X9,SCSSVX9        . $ RESTORE           RX
)@@G@@@E@@@[          L         X10,SCSSVX10      . $ RESTORE           @E@@@[RY
)@@G@@          L         X11,SCSSVX11      . $ RESTORE           @E@@@[      RZ
)@@G@@    L,H2      A0,SCSPKT+7       . $ BUFFER ADDRESS    @E@@@[          L SA
)@@G@@        A1,STPAGE,X8      . $ PAGE NUMBER       @E@@@[          AN,H2   SB
)@@G@@  A1,SCSPKT+8       . $ PAGES INTO BUFFER @G@@@[          MSI,H2    A1,SSC
)@@G@@CSPKT+6       . $ OFFSET TO PAGE IN BUFFER      @E@@@[          A       SD
)@@G@@  A0,A1             . $ ADDRESS OF PAGE   @]@@@[.           @C@@@[. PAGESE
)@@G@@ IS IN CORE.  A0 CONTAINS PAGE ADDRESS.   @]@@@[.           @]@@@[SS4.  SF
)@@G@@      @G@@@[          L,H1      A4,3,A0           . $ SLOTS ALLOCATES THSG
)@@G@@IS PAGE     @I@@@[          A,H1      A4,6,A0           . $ ADD NUMBER OSH
)@@G@@F CALC CHAINS AT END          @G@@@[          TLE       A4,STSLOT,X8    SI
)@@G@@  . $ SKIP IF THIS SLOT ALLOCATED   @G@@@[          J         SSNOTINUSESJ
)@@G@@        . $ ERROR - SLOT NOT ALLOCATED    @E@@@[          L         X10,SK
)@@G@@A0            . $ POINTER TO PAGE   @E@@@[          A,H1      X10,2,X10 SL
)@@G@@        . $ ADD PAGE SIZE     @E@@@[          AN        X10,STSLOT,X8   SM
)@@G@@  . $ ADDRESS OF SLOT   @G@@@[          TP        0,X10             . $ SN
)@@G@@SKIP IF SLOT IN USE           @G@@@[          J         SSNOTINUSE      SO
)@@G@@  . $ ERROR   SLOT NOT IN USE       @G@@@[          L,S1      A4,,X10   SP
)@@G@@        . $ DESC FIELD FROM SLOT          @E@@@[          AND,U     A4,0SQ
)@@G@@10            . $ ZERO MISC BITS    @I@@@[          TZ        A5        SR
)@@G@@        . $ SKIP IF RECORD NOT ON FOREIGN PG          @G@@@[          LMSS
)@@G@@J       X11,SSFOREIGN     . $ RECORD ON FOREIGN PAGE        @G@@@[      ST
)@@G@@    L,H2      X10,,X10          . $ DISPLACEMENT TO RECORD        @E@@@[SU
)@@G@@          A         X10,A0            . $ ADDRESS OF RECORD @G@@@[SS43  SV
)@@G@@    L,S3      A4,,X10           . $ LOAD DESC FIELD OF RECORD     @E@@@[SW
)@@G@@          AND,U     A4,010            . $ ZERO MISC BITS    @G@@@[      SX
)@@G@@    TNZ       A5                . $ SKIP IF A RECORD ENTRY        @E@@@[SY
)@@G@@          J         SSVACANT          . $ A VACANCY ENTRY   @G@@@[      SZ
)@@G@@    L,T1      A4,,X10           . $ LOAD RCODE AND DESC           @I@@@[TA
)@@G@@          TNE,T1    A4,STRECLAST,X8   . $ SKIP IF NOT SAME AS LAST REC TTB
)@@G@@YPE         @G@@@[          J         SSAMEREC          . $ SAME AS LASTTC
)@@G@@ RECORD MATCHED   @E@@@[          L         R1,SCREPEAT       . $ COUNTETD
)@@G@@R FOR SEARCH@E@@@[          L         X11,SCSEARCH      . $ INDEX FOR SETE
)@@G@@ARCH  @G@@@[          SE,T1     A4,SCRECORDS,*X11 . $ SEARCH RECORD TABLTF
)@@G@@E           @G@@@[          J         SSBADREC          . $ NOT IN RECORTG
)@@G@@D TABLE           @G@@@[          AN,U      X11,1             . $ OFFSETTH
)@@G@@ INTO RECORD TABLE      @E@@@[SS45      L         A4,SCRECORDS,X11  . $ TI
)@@G@@GET TABLE ENTRY   @E@@@[          S         A4,STRECLAST,X8   . $ STORE TJ
)@@G@@IT IN STACK @C@@@[          L,S3      A4,STRECLAST,X8   . $ RTYPE @E@#@[TK
)@@G@@          AND,U     A4,32             . $ ZERO MISC BITS    @E@@@#      TL
)@@G@@    AND,U     A4,041            . $ ZERO MISC BITS    @E@@@[          L TM
)@@G@@        A1,STAREA,X8      . $ AREA CODE         @G@#@[          TNZ     TN
)@@G@@  A5                . $ SKIP IF UNLOADED VIA SET      @G@@@#          TETO
)@@G@@,U      A5,041            . SKIP IF VIA SET UNLOAD          @G@@@[      TP
)@@G@@    J         SS5               . $ NOT UNLOADED VIA SET          @E@@@[TQ
)@@G@@          L,T3      X11,STRECLAST,X8  . LINK TO STBL        @C@@@[      TR
)@@G@@    L,T1      A5,STBL,X11       . SET CODE@E@@@[          TE        A5,STS
)@@G@@TSCDE,X8      . SKIP IF VIA THIS SET@C@@@[          J         SS5       TT
)@@G@@        . CONTINUE@G@@@[. **********************************************TU
)@@G@@******************      @G@@@[. ****************************************TV
)@@G@@************************      @G@@@[. THE FOLLOWING JUMP CAUSES OWNER CNTW
)@@G@@TL RECORDS TO BE CREATED FOR        @G@@@[. ALL SETS BEING UNLOADED.  IFTX
)@@G@@ THE JUMP IS REMOVED OWNER CNTL           @G@@@[. RECORDS WILL BE CREATETY
)@@G@@D ONLY WHEN THE OWNER OF THE SET IS NOT         @G@@@[. BEING UNLOADED. TZ
)@@G@@ THIS WILL SERVE TO REDUCE THE NUMBER OF RECORDS      @G@@@[. IN THE DATUA
)@@G@@A FILES BUT WILL ELIMINATE PLACE NEAR LOGIC DURING THE      @^@@@[. RELOUB
)@@G@@AD PROCESS.       @G@@@[. **********************************************UC
)@@G@@*******************     @G@@@[. ****************************************UD
)@@G@@*************************     @E@@@[          J         $+3             UE
)@@G@@  . SEE ABOVE PARAGRAPH @G@@@[          TZ        STOUL,X8          . SKUF
)@@G@@IP IF OWNER NOT ULOADED       @G@@@[          J         SS47            UG
)@@G@@  . OWNER WAS UNLOADED  NO CNTL REC @G@@@[          TNZ       SCSDFPKT1+UH
)@@G@@3       . $ SKIP TO WRITE OWNER ENTRY     @E@@@[          J         SS47UI
)@@G@@              . $ CONTINUE          @C@@@[          S         X8,SCSSVX8UJ
)@@G@@        . $ SAVE  @C@@@[          S         X9,SCSSVX9        . $ SAVE  UK
)@@G@@@C@@@[          S         X10,SCSSVX10      . $ SAVE  @C@@@[          S UL
)@@G@@        X11,SCSSVX11      . $ SAVE  @C@@@[          DS        A0,SCSSVA0UM
)@@G@@        . $ SAVE  @C@@@[          DS        A2,SCSSVA2        . $ SAVE  UN
)@@G@@@C@@@[          DS        A4,SCSSVA4        . $ SAVE  @E@@@[          L,UO
)@@G@@U       X10,SCSDFPKT1     . $ PKT FOR DF$AM     @E@@@[          LMJ     UP
)@@G@@  X11,DF$AMW        . $ WRITE ENTRY       @C@@@[          SZ        SCSDUQ
)@@G@@FPKT1+3       . $ ZERO  @E@@@[          L         X8,SCSSVX8        . $ UR
)@@G@@RESTORE           @E@@@[          L         X9,SCSSVX9        . $ RESTORUS
)@@G@@E           @E@@@[          L         X10,SCSSVX10      . $ RESTORE     UT
)@@G@@      @E@@@[          L         X11,SCSSVX11      . $ RESTORE           UU
)@@G@@@E@@@[          DL        A0,SCSSVA0        . $ RESTORE           @E@@@[UV
)@@G@@          DL        A2,SCSSVA2        . $ RESTORE           @E@@@[      UW
)@@G@@    DL        A4,SCSSVA4        . $ RESTORE           @]@@@[SS47.       UX
)@@G@@@E@@@[          AND,U     A4,010            . 0 IF NOT DIRECT     @E@@@[UY
)@@G@@          S         A5,SCDIRECT       . STORE IT FOR UNLOAD @E@@@[      UZ
)@@G@@    LMJ       X11,UNLS          . $ UNLOAD IT         @]@@@[.           VA
)@@G@@@C@@@[. CHECK WHETHER SETS TO SCAN OFF THIS RECORD.   @^@@@[.   IFSO SCAVB
)@@G@@N THEM.     @A@@@[.   ELSE CONTINUE SCANNING THIS SET @]@@@[.           VC
)@@G@@@]@@@[SS5.        @E@@@[          L         A4,STRECLAST,X8   . $ LAST RVD
)@@G@@TBL ENTRY   @I@@@[          L         A5,STKADR         . $ ADDRESS OF CVE
)@@G@@URRENT STACK ELEMENT          @G@@@[          A,U       A5,SCSSTKSIZ    VF
)@@G@@  . $ NEXT STACK ELEMENT ADDRESS    @E@@@[          S         A5,STKADR VG
)@@G@@        . $ STORE IT BACK     @E@@@[          AND       A4,SCSMSK       VH
)@@G@@  . $ ZERO MISC BITS    @E@@@[          L         A1,STAREA,X8      . $ VI
)@@G@@AREA CODE         @E@@@[          L         A2,STPAGE,X8      . $ PAGE NVJ
)@@G@@UMBER       @E@@@[          L         A3,STSLOT,X8      . SLOT NUMBER   VK
)@@G@@      @G@@@[          TZ        A5                . $ SKIP IF NO SETS TOVL
)@@G@@ SCAN       @E@@@[          LMJ       X11,SSET          . $ SCAN THE SETVM
)@@G@@S     @G@@@[          L         A5,STKADR         . $ ADDRESS OF LAST STVN
)@@G@@ACK ELEMENT @G@@@[          AN,U      A5,SCSSTKSIZ      . $ ADDRESS OF CVO
)@@G@@URRENT STACK      @E@@@[          S         A5,STKADR         . $ STORE VP
)@@G@@IT BACK     @G@@@[          L,T3      X11,STRECLAST,X8  . $ OFFSET TO STVQ
)@@G@@BL ENTRY          @E@@@[          L,H2      X11,STBL,X11      . $ ADDRESVR
)@@G@@S OF C1     @]@@@[          . @A@@@[. CONTINUE TO SCAN THIS SET         VS
)@@G@@@]@@@[.           @]@@@[SS6.        @I@@@[          A,U       X11,1     VT
)@@G@@        . $ ADDRESS OF FIRST SET ENT. IN RTBL         @E@@@[          TPVU
)@@G@@        0,X11             . $ SKIP IF AUTO ENTRY@E@@@[          J       VV
)@@G@@  SS7               . $ MANUAL ENTRY      @E@@@[          L,T2      A5,,VW
)@@G@@X11           . $ LOAD SET CODE     @E@@@[          TE        A5,STSCDE,VX
)@@G@@X8      . $ SKIP IF MATCH     @E@@@[          J         SS6             VY
)@@G@@  . $ CONTINUE          @]@@@[.           @C@@@[. AUTOMATIC ENTRY FOR SEVZ
)@@G@@T HAS BEEN FOUND        @]@@@[.           @E@@@[          L,S6      A0,,WA
)@@G@@X11           . $ LOAD DISP TO DBP  @E@@@[          A         A0,X10    WB
)@@G@@        . $ ADDRESS OF DBP    @E@@@[          L         A0,,A0          WC
)@@G@@  . $ GET THE DBP       @E@@@[          J         SS2               . $ WD
)@@G@@CONTINUE          @]@@@[.           @A@@@[.  SET BEING SCANNED IS A MANUWE
)@@G@@AL SET@]@@@[.           @]@@@[SS7.        @G@@@[          L         A3,XWF
)@@G@@11            . $ ADDR OF MANUAL CNTL IN C1     @G@@@[          A,U     WG
)@@G@@  A3,2              . $ FIRST MANUAL SET ENTRY IN C1  @G@@@[          L,WH
)@@G@@S6      A0,,X11           . $ DISP TO CNTL WD IN RECORD     @G@@@[      WI
)@@G@@    A         A0,X10            . $ ADDR OF MANUAL CNTL IN RECORD @G@@@[WJ
)@@G@@          L         A4,,A0            . $ MANUAL CNTL WORD FROM RECORD  WK
)@@G@@@E@@@[          L         A5,STSCDE,X8      . $ SETCODE           @G@@@[WL
)@@G@@          A,U       A0,1              . $ ADDRESS OF FIRST MANUAL DBP   WM
)@@G@@@]@@@[SS8.        @G@@@[          TNZ       A4                . $ SKIP IWN
)@@G@@F MORE SETS TO CHECK    @G@@@[          J         SSMANERR          . $ WO
)@@G@@ERROR  NOT A MEMBER OF SET    @E@@@[          TN        A4              WP
)@@G@@  . $ SKIP IF BIT 35 SET@E@@@[          J         SS9               . $ WQ
)@@G@@CONTINUE          @E@@@[          L,T2      A2,,A3            . $ SET COWR
)@@G@@DE          @G@@@[          TNE       A2,A5             . $ SKIP IF DIFFWS
)@@G@@ERENT SET CODE    @E@@@[          J         SS95              . $ SET HAWT
)@@G@@S BEEN FOUND@G@@@[          A,S2      A0,,A3            . $ ADD OFFSET TWU
)@@G@@O NEXT MANUAL DBP @]@@@[SS9.        @I@@@[          A,S2      A3,,A3    WV
)@@G@@        . $ ADD OFFSET TO NEXT MANUAL ENT IN C1       @G@@@[          LSWW
)@@G@@SL      A4,1              . $ SHIFT MANUAL CONTROL WD       @E@@@[      WX
)@@G@@    J         SS8               . $ CONTINUE          @]@@@[SS95.       WY
)@@G@@@E@@@[          L         A0,,A0            . $ GET DBP           @E@@@[WZ
)@@G@@          J         SS2               . $ CONTINUE          @]@@@[.     XA
)@@G@@      @A@@@[. END OF SET HAS BEEN FOUND         @]@@@[.           @]@@@[XB
)@@G@@SSEOS.      @C@@@[          S         X8,SVX8           . SAVE    @A@@@[XC
)@@G@@          S         X9,SVX9         @A@@@[          S         X10,SVX10 XD
)@@G@@      @A@@@[          S         X11,SVX11       @A@@@[          DS      XE
)@@G@@  A0,SVA0         @C@@@[          DS        A2,SVA2           .         XF
)@@G@@@C@@@[          DS        A4,SVA4           .         @E@@@[          L XG
)@@G@@        X10,STSCDE,X8     . $ SET CODE          @E@@@[          S,T3    XH
)@@G@@  X10,SCSDFPKT+3    . $ STORE IN PACKET   @E@@@[          L,U       X10,XI
)@@G@@SCSDFPKT      . $ PACKET ADDRESS    @I@@@[          TZ        EOSFLG    XJ
)@@G@@        . SKIP IF END OF SET CNTL NOT DESIRED         @G@@@[          LMXK
)@@G@@J       X11,DF$AMW        . $ WRITE EOS IN DATA FILE        @C@@@[      XL
)@@G@@    L         X8,SVX8           . RESTORE @A@@@[          L         X9,SXM
)@@G@@VX9         @A@@@[          L         X10,SVX10       @A@@@[          L XN
)@@G@@        X11,SVX11       @A@@@[          DL        A0,SVA0         @C@@@[XO
)@@G@@          DL        A2,SVA2           .         @C@@@[          DL      XP
)@@G@@  A4,SVA4           .         @]@@@[.           @A@@@[. CHECK WHETHER MOXQ
)@@G@@RE SETS TO SCAN.  @]@@@[.           @E@@@[          L         X11,STSTBLXR
)@@G@@,X8     . $ SET TABLE OFFSET  @E@@@[          L         A5,X9           XS
)@@G@@  . $ COUNT,OFFSET      @C@@@[          SSL       A5,18             . $ XT
)@@G@@COUNT @G@@@[          TNE,H1    A5,STBL+1,X11     . $ SKIP IF MORE SETS XU
)@@G@@TO SCAN     @G@@@[          J         SSDONE            . $ VIA SET FINIXV
)@@G@@SHED AT THIS LEVEL@G@@@[          A         X9,(1,1)          . $ INCREMXW
)@@G@@ENT LOCATION AND COUNT  @E@@@[          L         X10,2,X8          . $ XX
)@@G@@LOCATION OF OWNER @E@@@[          J         SS1               . $ SCAN NXY
)@@G@@EXT SET     @]@@@[.           @E@@@[. ALL SETS HAVE BEEN SCANNED. RETURNXZ
)@@G@@ TO NEXT LEVEL.         @]@@@[.           @]@@@[SSDONE.     @E@@@[      YA
)@@G@@    L         A0,SCSLVL         . $ LEVEL OF VIA SET  @E@@@[          ANYB
)@@G@@,U      A0,1              . $ DECRMENT IT       @E@@@[          S       YC
)@@G@@  A0,SCSLVL         . $ STORE IT BACK     @C@@@[          L         X9,1YD
)@@G@@,X8           .         @C@@@[          L         X10,2,X8          .   YE
)@@G@@      @C@@@[          L         X11,3,X8          .         @C@@@[      YF
)@@G@@    DL        A0,4,X8           .         @C@@@[          DL        A2,6YG
)@@G@@,X8           .         @C@@@[          DL        A4,8,X8           .   YH
)@@G@@      @E@@@[          L         X8,0,X8           . $ RESTORE REGISTERS YI
)@@G@@@C@@@[          J         0,X11             . $ RETURN@]@@@[SSAMEREC.   YJ
)@@G@@@E@@@[          L,S4      X11,STRECLAST,X8  . $ OFFSET INTO RTBL  @E@@@[YK
)@@G@@          J         SS45              . $ CONTINUE          @]@@@[.     YL
)@@G@@      @C@@@[. A RECORD ON A FOREIGN PAGE WAS ENCOUNTERED    @]@@@[.     YM
)@@G@@      @]@@@[SSFOREIGN.  @E@@@[          DS        A0,SCSAVA0        . $ YN
)@@G@@ SAVE REGISTERS   @C@@@[          DS        A2,SCSAVA2        .         YO
)@@G@@@C@@@[          DS        A4,SCSAVA4        .         @C@@@[          S YP
)@@G@@        X8,SCSAVX8        .         @E@@@[          S         X9,SCSAVX9YQ
)@@G@@        . $  SAVE REGISTER    @C@@@[          S         X10,SCSAVX10    YR
)@@G@@  .         @E@@@[          L         X9,X10            . $ ADDRESS OF SYS
)@@G@@LOT   @E@@@[          L         A1,STAREA,X8      . $ AREA CODE         YT
)@@G@@@E@@@[          L         A2,STPAGE,X8      . $ PAGE NUMBER       @E@@@[YU
)@@G@@          L         A3,STSLOT,X8      . $ SLOT NUMBER       @G@@@[      YV
)@@G@@    L         X11,STATBL,X8     . $ ADDRESS OF AREA TABLE         @E@@@[YW
)@@G@@          DL        A4,1,X11          . $ AREA-NAME         @G@@@[      YX
)@@G@@    DS        A4,SCFANAME       . $ STORE IN PKT FOR FOREIGN PG   @C@@@[YY
)@@G@@          L,H2      A5,,X9            . $ PAGE  @E@@@[          L,H2    YZ
)@@G@@  A4,STAREA,X8      . $ AREA CODE         @E@@@[          LSSL      A5,1ZA
)@@G@@8             . $ LEFT JUSTIFY      @E@@@[          LDSL      A4,18     ZB
)@@G@@        . $ AREA-CODE , PAGE  @G@@@[          LMJ       X11,SCFOREIG    ZC
)@@G@@  . $ PROCESS RECORD ON FOREIGN PG  @E@@@[          J         SSFORERR  ZD
)@@G@@        . $ AN ERROR OCCURRED @E@@@[          L         X10,A1          ZE
)@@G@@  . $ ADDRESS OF RECD   @E@@@[          DL        A0,SCSAVA0        . $ ZF
)@@G@@ RESTORE REGISTERS@E@@@[          DL        A2,SCSAVA2        . $  RESTOZG
)@@G@@RE REGISTER @C@@@[          DL        A4,SCSAVA4        .         @C@@@[ZH
)@@G@@          L         X8,SCSAVX8        .         @C@@@[          L       ZI
)@@G@@  X9,SCSAVX9        .         @E@@@[          J         SS43            ZJ
)@@G@@  . $ CONTINUE          @]@@@[.           @E@@@[. AN ERROR OCCURRED PROCZK
)@@G@@ESSING A RECORD ON A FOREIGN PAGE   @^@@@[. DURING VIA SET SCAN.  @]@@@[ZL
)@@G@@.           @]@@@[SSFORERR.   @E@@@[          L         A0,SSFERRMSG    ZM
)@@G@@  . $ ACW FOR PRINT     @E@@@[          ER        PRINT$            . $ ZN
)@@G@@PRINT IT          @E@@@[          ER        ERR$              . $ ERROR ZO
)@@G@@OFF         @]@@@[SSX1.       @G@@@[          L,H2      A0,SCDBUF       ZP
)@@G@@  . $ BUFFER ADDRESS (VIA AREA)     @E@@@[          L,H2      A1,STPAGE,ZQ
)@@G@@X8      . $ PAGE NUMBER       @E@@@[          AN,H2     A1,SCSTPG       ZR
)@@G@@  . $ PAGES INTO BUFFER @E@@@[          MSI,H2    A1,SCPKT+6        . $ ZS
)@@G@@OFFSET INTO BUFFER@E@@@[          A         A0,A1             . $ PAGE AZT
)@@G@@DDRESS      @E@@@[          J         SS4               . $ CONTINUE    ZU
)@@G@@      @]@@@[SSX2.       @E@@@[          L,U       A1,SCSBNO-1       . $ ZV
)@@G@@BUFFERS - 1       @C@@@[          LSSL      A1,1              . $ X 2   ZW
)@@G@@@G@@@[          A,T1      A1,STBL,X9        . $ ADD OFFSET TO BUFFER 1  ZX
)@@G@@      @E@@@[          AN        A1,A3             . $ REPEAT COUNT      ZY
)@@G@@@E@@@[          L         R1,A1             . $ REPEAT COUNT      @E@@@[ZZ
)@@G@@          L         A1,SCSBUF,A3      . $ FIRST CNTL WD     @E@@@[      AA
)@@G@@    L         A5,SCSBUF+1,A3    . $ SECOND CNTL WD    @C@@@[          LXAB
)@@G@@I,U     A3,1              . $ INDEX @E@@@[          L         A0,A3     AC
)@@G@@        . $ INDEX REGISTER    @E@@@[          A,U       A0,2            AD
)@@G@@  . $ REGISTER FOR TAKE @E@@@[          BT        A3,SCSBUF,*A0     . $ AE
)@@G@@MOVE WORDS        @G@@@[          S         A1,SCSBUF,A3      . $ STORE AF
)@@G@@FIRST CNTL WD           @G@@@[          S         A5,SCSBUF+1,A3    . $ AG
)@@G@@STORE SECOND CNTL WD          @E@@@[          L,H2      A0,SCSBUF,A3    AH
)@@G@@  . $ BUFFER ADDRESS    @E@@@[          L         A1,STPAGE,X8      . $ AI
)@@G@@PAGE NUMBER       @G@@@[          AN,H2     A1,SCSBUF+1,A3    . $ NUMBERAJ
)@@G@@ OF PAGES INTO BUFFER   @G@@@[          MSI,H2    A1,SCSPKT+6       . $ AK
)@@G@@OFFSET TO PAGE WITHIN BUFFER  @G@@@[          A         A0,A1           AL
)@@G@@  . $ A0 CONTAINS PAGE ADDRESS      @E@@@[          J         SS4       AM
)@@G@@        . $ CONTINUE          @]@@@[.           @A@@@[. ERROR ENCOUNTEREAN
)@@G@@D COMPOSING A DBP @]@@@[.           @]@@@[SSDBPERR.   @C@@@[          L$AO
)@@G@@SNAP    'DBPERR',7,1,SCSAVA0        @E@@@[          L         A0,SSDBPMSAP
)@@G@@G       . ACW FOR PRINT       @E@@@[          ER        PRINT$          AQ
)@@G@@  . PRINT ERROR MESSAGE @E@@@[          ER        ERR$              . ERAR
)@@G@@ROR OFF           @]@@@[.           @C@@@[. ERROR ENCOUNTERED DECOMPOSINAS
)@@G@@G A DBP           @]@@@[.           @]@@@[SSAPSERR.   @C@@@[          L$AT
)@@G@@SNAP    'APSERR',7,1,SCSAVA0        @E@@@[          L         A0,SSAPSMSAU
)@@G@@G       . ACW FOR PRINT       @E@@@[          ER        PRINT$          AV
)@@G@@  . PRINT ERROR MESSAGE @^@@@[          ER        ERR$@]@@@[.           AW
)@@G@@@E@@@[. A VACANCY ENTRY WAS ENCOUNTERED WHILE SCANNING A SET      @]@@@[AX
)@@G@@.           @]@@@[SSVACANT.   @C@@@[          L$SNAP    'VACANT',7,1,SCSAY
)@@G@@AVA0        @E@@@[          L         A0,SSVACMSG       . $ ACW FOR PRINAZ
)@@G@@T     @E@@@[          ER        PRINT$            . $ PRINT ERROR MSG   BA
)@@G@@@C@@@[          ER        ERR$              .         @]@@@[.           BB
)@@G@@@E@@@[. A SLOT NOT ALLOCATED OR NOT IN USE WAS FOUND WHILE        @^@@@[BC
)@@G@@. SCANNING A SET        @]@@@[.           @]@@@[SSNOTINUSE. @C@@@[      BD
)@@G@@    L$SNAP    'SLOT  ',7,1,SCSAVA0        @E@@@[          L         A0,SBE
)@@G@@SLOTMSG       . $ ACW FOR PRINT     @E@@@[          ER        PRINT$    BF
)@@G@@        . $ PRINT MSG         @E@@@[          ER        ERR$            BG
)@@G@@  . $ ERROR OFF         @]@@@[.           @A@@@[. AN ERROR OCCURRED SCANBH
)@@G@@NING A SET  @]@@@[.           @]@@@[SSMANERR.   @C@@@[          L$SNAP  BI
)@@G@@  'MANERR',7,1,SCSAVA0        @E@@@[          L         A0,SSMANMSG     BJ
)@@G@@  . $ ACW FOR PRINT     @E@@@[          ER        PRINT$            . $ BK
)@@G@@PRINT MSG         @E@@@[          ER        ERR$              . $ ERROR BL
)@@G@@OFF         @]@@@[.           @E@@@[. AN INVALID RECORD TYPE WAS ENCOUNTBM
)@@G@@ERED DURING SET SCAN    @]@@@[.           @]@@@[SSBADREC.   @C@@@[      BN
)@@G@@    L$SNAP    'BADREC',7,1,SCSAVA0        @E@@@[          L         A0,SBO
)@@G@@SRECMSG       . $ ACW FOR PRINT     @E@@@[          ER        PRINT$    BP
)@@G@@        . $ PRINT MSG         @E@@@[          ER        ERR$            BQ
)@@G@@  . $ ERROR OFF         @]@@@[$(0).       @G@@@[SCDFPKT   +         0   BR
)@@G@@              . PACKET FOR DATA FILE AM         @A@@@[          +       BS
)@@G@@  SCDFAREA        @G@@@[SCAREA    +         0                 . LOCATIONBT
)@@G@@ OF AREA TABLE ENTRY    @E@@@[SCDFAREA  +         1,0,2             . ARBU
)@@G@@EA ENTRY FOR DFILE@E@@@[SCAREACD  +         0                 . AREA CODBV
)@@G@@E           @E@@@[SCARPG    RES       2                 . AREA CODE,PAGEBW
)@@G@@      @G@@@[SCAREASTOP +        0                 . STOP LOCATION FOR ARBX
)@@G@@EA TABLE    @G@@@[SCMAXREC  EQU       100               . NO. OF RECORD BY
)@@G@@TYPES ALLOWED     @G@@@[SCRECORDS RES       SCMAXREC           . RECORD BZ
)@@G@@TABLE FOR SCAN          @G@@@[SCRECSTAT RES       SCMAXREC           . CCA
)@@G@@OUNTS FOR RECORD TYPES        @G@@@[SCC2BUFSZ EQU       1000            CB
)@@G@@  . NUMBER OF WORDS MAX FOR C2      @G@@@[SCC4BUFSZ EQU       1000      CC
)@@G@@        . NUMBER OF WORDS MAX FOR C4      @E@@@[SCMAXPG   +         0   CD
)@@G@@              . SIZE OF LARGEST PAGE@G@@@[SCDBUF1   +         0         CE
)@@G@@        . BUFFER 1 FOR DATA BASE PAGES    @G@@@[SCDBUF2   +         0   CF
)@@G@@              . BUFFER 2 FOR DATA BASE PAGES    @^@@@[SCC2LOC   +       CG
)@@G@@  0   @I@@@[SCC2LOW   +         0                 . LOW VALUE FOR CURRENCH
)@@G@@T C2 INTERVAL           @G@@@[SCC2HI    -         100000            . HICI
)@@G@@ VALUE FOR CURRENT C2 INTERVAL@G@@@[SCC2THISPG +        0               CJ
)@@G@@  . 0 - NO C2 OCCUR.  1 - C2 OCCUR. @^@@@[SCC4LOC   +         0   @I@@@[CK
)@@G@@SCC4LOW   +         0                 . LOW VALUE FOR CURRENT C4 INTERVACL
)@@G@@L           @G@@@[SCC4HI    -         100000            . HI VALUE FOR CCM
)@@G@@URRENT C4 INTERVAL@G@@@[SCC4THISPG +        0                 . 0 - NO CCN
)@@G@@4 OCCUR.  1 - C4 OCCUR. @E@@@[SCPKT*                                . PACO
)@@G@@CKET FOR DBAM     @E@@@[SCANAME   RES       2                 . AREA NAMCP
)@@G@@E           @^@@@[          +         0   @A@@@[          +         0200CQ
)@@G@@0,0         @^@@@[          +         0   @^@@@[          +         0   CR
)@@G@@@E@@@[SCPAGE    +         0                 . PAGE SIZE           @A@@@[CS
)@@G@@          +         SCDBPGS,0       @^@@@[          +         0,1 @E@@@[CT
)@@G@@SCDBUF    +         0                 . CURRENT BUFFER      @E@@@[SCSTPGCU
)@@G@@    +         0                 . START PAGE          @G@@@[SCENDPGADR +CV
)@@G@@        0                 . ADDRESS PAST END OF PG BUFFER   @I@@@[SCENDACW
)@@G@@REA  +        0                 . 0 - NOT END OF AREA. 1 - END AREA     CX
)@@G@@      @G@@@[SCSEARCH  +         1,0               . INDEX REGISTER FOR SCY
)@@G@@EARCH       @G@@@[SCREPEAT  +         0                 . REPEAT COUNT FCZ
)@@G@@OR SEARCH         @G@@@[SCRECLAST +         0                 . LAST FOUDA
)@@G@@ND RECORD ENTRY         @E@@@[SCDBBUFSZ +         0                 . CUDB
)@@G@@RRENT BUFFER SIZE @G@@@[SCC2AREA  +       SCDUMMY             . LOCATIONDC
)@@G@@ OF AREA WD FOR C2      @G@@@[SCC4AREA  +       SCDUMMY             . LODD
)@@G@@CATION OF AREA WD FOR C4      @^@@@[SCDUMMY   +         0   @^@@@[SCOBJUDE
)@@G@@NL  +         1   @^@@@[SCMINUS1000 -       1000@I@@@[SCFPNO    EQU     DF
)@@G@@  10                . NUMBER OF PAGES IN FOREIGN PG BUF           @G@@@[DG
)@@G@@SCFPTBL   RES       SCFPNO*2          . PAGE TABLE FOR FOREIGN PG BUF   DH
)@@G@@@E@@@[SCFNXT    +         0                 . NEXT BUFFER TO WRITE@E@@@[DI
)@@G@@SCFIND    +         2,0               . INDEX FOR SEARCH    @]@@@[SCFDBPDJ
)@@G@@KT.   @E@@@[SCFANAME  RES       2                 . $  AREA NAME        DK
)@@G@@@^@@@[          +         0   @A@@@[          +         02000,0         DL
)@@G@@@^@@@[          +         0   @^@@@[          +         0   @^@@@[      DM
)@@G@@    +         0   @^@@@[          +         1,0 @^@@@[          +       DN
)@@G@@  0   @E@@@[SCFMASK   +         0207777,0         . MASK FOR SLOT SEARCHDO
)@@G@@@G@@@[SCFIND1             -1,0              . INDEX FOR SLOT SEARCH     DP
)@@G@@      @E@@@[SCFSET34  +         0200000,0         . SET BIT 34          DQ
)@@G@@@I@@@[SCSDFPKT  +         0                 . PACKET FOR DATA FILE ACCESDR
)@@G@@S METHOD          @G@@@[          +         $+1               . LOCATIONDS
)@@G@@ OF END OF SET ENTRY    @A@@@[          +         2,0,2           @^@@@[DT
)@@G@@          +         0   @E@@@[SCSDFPKT1 +         0                 . PKDU
)@@G@@T FOR OWNER ENTRY @^@@@[          +         $+1 @A@@@[          +       DV
)@@G@@  3,0,2           @^@@@[          +         0   @G@@@[SCSMAX    EQU     DW
)@@G@@  30                . MAXIMUM NUM. OF SETS TO SCAN    @G@@@[SCSSIZ    EQDX
)@@G@@U       400               . WORDS RESERVED IN SET TABLE     @G@@@[. ....DY
)@@G@@..................................................................@G@@@[DZ
)@@G@@.    SET CODE                      .          C1 TABLE ADDRESS         .EA
)@@G@@@G@@@[. ................................................................EB
)@@G@@......@G@@@[.   COUNT OF SET ENTRIES           .  ADDRESS OF MANUAL WORDEC
)@@G@@ IN C1     .@G@@@[. ....................................................ED
)@@G@@..................@G@@@[. BUFFER CNTL ADDRESS  .   CNTL    .   SET ENTRYEE
)@@G@@ ADDRESS (C1)          .@G@@@[. ........................................EF
)@@G@@..............................@E@@@[STBL      RES       SCSSIZ          EG
)@@G@@  . SET TABLE           @G@@@[SCSNXT    +         0                 . NEEH
)@@G@@XT LOCATION IN SET TABLE      @E@@@[SCSBUF    RES       SCSMAX*10       EI
)@@G@@  . BUFFER ACCESS WORDS @E@@@[SCSMSK    +         020,0             . SEEJ
)@@G@@TS TO SCAN        @E@@@^SCSMSK1   +         060,0             . SETS TO EK
)@@G@@SCAN        @G@@@[SCSBNX    +         0                 . NEXT BUFFER TOEL
)@@G@@ ALLOCATE         @G@@@[SCSLVL    +         0                 . LEVEL OFEM
)@@G@@ SCAN VIA SET           @C@@@[SCSSVX8   +         0                 . SAEN
)@@G@@VE    @C@@@[SCSSVX9   +         0                 . SAVE    @C@@@[SCSSVXEO
)@@G@@10  +         0                 . SAVE    @C@@@[SCSSVX11  +         0   EP
)@@G@@              . SAVE    @^@@@[SCSSVA0   RES       2   @^@@@[SCSSVA2   REEQ
)@@G@@S       2   @^@@@[SCSSVA4   RES       2   @G@@@[SCSSTKMAX EQU       8   ER
)@@G@@              . MAXIMUM LEVEL FOR VIA SET SCAN  @G@@@[SCSSTKSIZ EQU     ES
)@@G@@  50                . SIZE OF STACK ELEMENT           @E@@@[SCSSTK    REET
)@@G@@S       SCSSTKSIZ*SCSSTKMAX . STACK FRAME       @G@@@[STKADR    +       EU
)@@G@@  SCSSTK            . ADDRESS OF NEXT STACK ELEMENT   @G@@@[STSAVE    EQEV
)@@G@@U       0                 . 10 WORDS TO SAVE MINOR SET      @C@@@[STSCDEEW
)@@G@@    EQU       10                . SET CODE@E@@@[STRCDE    EQU       11  EX
)@@G@@              . RECORD CODE         @G@@@[STSTBL    EQU       12        EY
)@@G@@        . OFFSET INTO SET TABLE           @G@@@[STRTBL    EQU       13  EZ
)@@G@@              . LOCATION OF RECORD TABLE ENT    @G@@@[STAUTO    EQU     FA
)@@G@@  14                . 1 INDICATES AN AUTOMATIC SET    @E@@@[STMANC    EQFB
)@@G@@U       15                . COUNT,MANUAL ADDRESS@E@@@[STDBPO    EQU     FC
)@@G@@  16                . DBP FOR OWNER       @E@@@[STSLOT    EQU       18  FD
)@@G@@              . SLOT OF DBP         @E@@@[STPAGE    EQU       19        FE
)@@G@@        . PAGE OF DBP         @E@@@[STAREA    EQU       20              FF
)@@G@@  . AREA OF DBP         @G@@@[STRECLAST EQU       21                . LAFG
)@@G@@ST RTBL ENTRY THIS LEVEL      @E@@@[STDBP*    EQU       22              FH
)@@G@@  . DBP THIS RECORD     @E@@@[STMANCO   EQU       23                . MAFI
)@@G@@NUAL CNTL OF OWNER@E@@@[STATBL    EQU       24                . AREA TABFJ
)@@G@@LE ADDRESS  @G@@@[STOUL     EQU       25                . 1 IF OWNER IS FK
)@@G@@UNLOADED          @G@@@[SCDIRECT* +         0                 . 1 IF RECFL
)@@G@@ORD IS DIRECT           @E@@@[SCSPKT    RES       2                 . PAFM
)@@G@@CKET FOR VIA SET  @^@@@[          +         0   @C@@@[          +       FN
)@@G@@  02000,0           . READ    @^@@@[          RES       3   @A@@@[      FO
)@@G@@    +         SCSPGS,0        @^@@@[          +         0   @A@@@[SSDBPMFP
)@@G@@SG +          0106,$+1        @C@@@[          'ERROR ENCOUNTERED COMPOSIFQ
)@@G@@NG A DBP'   @A@@@[SSAPSMSG +          0106,$+1        @C@@@[          'EFR
)@@G@@RROR ENCOUNTERED DECOMPOSING A DBP' @A@@@[SSMANMSG  +         0105,$+1  FS
)@@G@@      @C@@@[          'ERROR SCANNING A MANUAL SET'         @E@@@[SSFERRFT
)@@G@@MSG +         0107,$+1          . ACW FOR PRINT       @E@@@[          'UFU
)@@G@@NLOAD VIA SET.  FOREIGN RECORD ERROR.'          @A@@@[SSVACMSG  +       FV
)@@G@@  0110,$+1        @E@@@[          'VACANCY ENTRY ENCOUNTERED WHILE SCANNFW
)@@G@@ING SET.'   @A@@@[SSLOTMSG  +         0106,$+1        @C@@@[          'SFX
)@@G@@LOT NOT IN USE ON PAGE. SET SCAN.'  @C@@@[SSRECMSG  +         0106,$+1  FY
)@@G@@        .         @C@@@[          'RECORD TYPE NOT IN C1. SET SCAN.'    FZ
)@@G@@@^@@@[EOSFLG    +         0   @^@@@[SCSAVA0   RES       2   @^@@@[SCSAVAGA
)@@G@@2   RES       2   @^@@@[SCSAVA4   RES       2   @^@@@[SCSAVX8   +       GB
)@@G@@  0   @^@@@[SCSAVX9   +         0   @^@@@[SCSAVX10  +         0   @^@@@[GC
)@@G@@SCSAVX11  +         0   @^@@@[SVX8      +         0   @^@@@[SVX9      + GD
)@@G@@        0   @^@@@[SVX10     +         0   @^@@@[SVX11     +         0   GE
)@@G@@@^@@@[SVA0      +         0   @^@@@[SVA2      +         0   @^@@@[SVA4  GF
)@@G@@    +         0   @C@@@[SCFSAVA0  RES       2                 . SAVE    GG
)@@G@@@C@@@[SCFSAVA2  RES       2                 .         @C@@@[SCFSAVA4  REGH
)@@G@@S       2                 .         @C@@@[SCFSAVX8  +         0         GI
)@@G@@        .         @C@@@[SCFSAVX9  +         0                 .         GJ
)@@G@@@C@@@[SCFSAVX10 +         0                 .         @^@@@[SCFSAVX11 + GK
)@@G@@        0   @^@@@[          END           ___RCH@G@@@[SCFIND1           GL
)@@G@@*[@@@@*SDFF*@[@@@@$(1)  @C@@@@ . RELOAD FUNCTION OF DATA BASE REORGANIZAGM
)@@G@@TION  @B@@@@ . WRITTEN BY Z. NAZIF   DECEMBER 1974    @#@@@@         AXRGN
)@@G@@$     @]@@@@RELOAD*  .  @B@@@@          TZ        TOPT              .   GO
)@@G@@@ @@@@          SLJ       DEBUG$    @G@@@@          S,H2      X11,RETURNGP
)@@G@@        . SAVE RETURN ADDR TO MAIN PROG   @B@@@@          TNZ,H1    Z1  GQ
)@@G@@              .   @B@@@@          J         $+3               .   @[@@@@GR
)@@G@@ .    @[@@@@ .    @B@@@@          LX,U      X10,Z1CPAR        .   @E@@@@GS
)@@G@@          LMJ       X11,CF$AM . WRITE THE Z1 TABLE OUT      @[@@@@ .    GT
)@@G@@@[@@@@ .    @[@@@@ .    @C@@@@ . FIND MAXIMUM PAGE SIZE FOR AREAS INVOLVGU
)@@G@@ED    @[@@@@ .    @G@@@@          SLJ       MXPGET            . $W MXPGEGV
)@@G@@T GET MAX PAGE SIZE     @[@@@@ .    @B@@@@PF1       FORM      12,6,18   GW
)@@G@@        .   @[@@@@ .    @[@@@@ .    @^@@@@ . MCORE FOR Z2 TABLE   @[@@@@GX
)@@G@@ .    @[@@@@ .    @F@@@@          SZ        A6        . $P INITIALIZE # GY
)@@G@@OF WRDS IN Z2     @E@@@@          TNZ,H1    C5        . $T ANY WORDS IN GZ
)@@G@@TABLE C5    @C@@@@          SLJ       RER001    . $A NO  YES      @F@@@@HA
)@@G@@          LA,H1     A0,C5             . $P # OF C5 WORDS TO A0    @B@@@@HB
)@@G@@          LA        A1,A0             .   @B@@@@          MSI,U     A1,ZHC
)@@G@@2MULT         .   @H@@@@          AA        A0,A1             . $P ADD DHD
)@@G@@OUBLE THE # OF WORDS TO A0    @B@@@@          LA        A2,LAST$D       HE
)@@G@@  .   @B@@@@          AA,U      A2,1              .   @G@@@@          SAHF
)@@G@@,H2     A2,Z2             . $P UPDATE Z2 TABLE ADDRESS      @E@@@@      HG
)@@G@@    AA        A0,LAST$D         . $P UPDATE LAST$D    @B@@@@          SAHH
)@@G@@        A0,LAST$D         .   @B@@@@          ER        MCORE$          HI
)@@G@@  .   @[@@@@ .    @[@@@@ .    @^@@@@ . MCORE FOR C4 TABLE   @[@@@@ .    HJ
)@@G@@@[@@@@ .    @B@@@@          LA        A0,LAST$D         .   @B@@@@      HK
)@@G@@    LA        A1,A0             .   @B@@@@          AA,U      A1,1      HL
)@@G@@        .   @E@@@@          SA,H2     A1,C4ADD          . UPDATE C4 ADDRHM
)@@G@@ESS   @B@@@@          AA,U      A0,C4SIZE         .   @E@@@@          SAHN
)@@G@@        A0,LAST$D         . UPDATE LAST$D       @B@@@@          ER      HO
)@@G@@  MCORE$            .   @[@@@@ .    @[@@@@ .    @[@@@@ .    @^@@@@ . MCOHP
)@@G@@RE FOR MERGE TABLE@[@@@@ .    @[@@@@ .    @B@@@@          LA        A0,LHQ
)@@G@@AST$D         .   @B@@@@          LA        A1,A0             .   @B@@@@HR
)@@G@@          AA,U      A1,1              .   @G@@@@          SA,H2     A1,MHS
)@@G@@RGADD         . UPDATE MERGE TABLE ADDRESS      @B@@@@          AA,U    HT
)@@G@@  A0,MRGSIZ         .   @E@@@@          SA        A0,LAST$D         . UPHU
)@@G@@DATE LAST$D       @B@@@@          ER        MCORE$            .   @[@@@@HV
)@@G@@ .    @[@@@@ .    @A@@@@ . MCORE FOR OVERFLOW RANGE TABLE   @[@@@@ .    HW
)@@G@@@[@@@@ .    @B@@@@          LA        A0,LAST$D         .   @B@@@@      HX
)@@G@@    LA        A1,A0             .   @B@@@@          AA,U      A1,1      HY
)@@G@@        .   @G@@@@          SA,H2     A1,RNGADD         . UPDATE RANGE THZ
)@@G@@ABLE ADDRESS      @B@@@@          AA,U      A0,RNGSIZ         .   @E@@@@IA
)@@G@@          SA        A0,LAST$D         . UPDATE LAST$D       @B@@@@      IB
)@@G@@    ER        MCORE$            .   @[@@@@ .    @[@@@@ .    @ @@@@ . MCOIC
)@@G@@RE FOR RECORD BUFFER    @E@@@@ . RECORD BUFFER SIZE USED WILL BE THE MAXID
)@@G@@IMUM ALLOWED      @ @@@@ . FOR THE REORGANIZATION     @[@@@@ .    @[@@@@IE
)@@G@@ .    @B@@@@          LA        A0,LAST$D         .   @B@@@@          LAIF
)@@G@@        A1,A0             .   @B@@@@          AA,U      A1,1            IG
)@@G@@  .   @G@@@@          SA,H2     A1,RECADD         . UPDATE RECORD BUFFERIH
)@@G@@ ADDRESS    @B@@@@          AA        A0,MAXRSIZE       .   @E@@@@      II
)@@G@@    SA        A0,LAST$D         . UPDATE LAST$D       @B@@@@          ERIJ
)@@G@@        MCORE$            .   @[@@@@ .    @[@@@@ .    @G@@@@ . THIS CODEIK
)@@G@@ EXPANDS TABLE C5 BY MERGING TABLES C5,C3 AND Z1 INTO A NEW @^@@@@ . TABIL
)@@G@@LE CALLED Z2.     @B@@@@ . NO REGISTERS ARE SAVED IN THIS PART    @[@@@@IM
)@@G@@ .    @^@@@@ . REGISTER USAGE       @A@@@@ .        X8  TRAVERSES   TABLIN
)@@G@@E Z1  @A@@@@ .        X9  WITHIN      TABLE Z1  @[@@@@ .    @A@@@@ .    IO
)@@G@@    X5  TRAVERSES   TABLE Z2  @A@@@@ .        X6  WITHIN      TABLE Z2  IP
)@@G@@@ @@@@ .        A6  LENGTH OF Z2    @A@@@@ .        X7   TRAVERSES  TABLIQ
)@@G@@E C3  @[@@@@ .    @A@@@@ .        X3  TRAVERSES   TABLE C5  @A@@@@ .    IR
)@@G@@    X4  WITHIN            C5  @C@@@@ .        A0  POINTER TO ENTRY OR TEIS
)@@G@@MPORARY     @C@@@@ .        A8,A9,A10 ARE LOOP CONTROL REGISTERS  @A@@@@IT
)@@G@@ .        A11,A12 CALC PROC NAME    @A@@@@ .        A2 ADDRESS OF CALC RIU
)@@G@@OUTINE@G@@@@ .        A3 WILL SEARCH CLSEG$, ABSOLUTE ADDRESS OF CALC ENIV
)@@G@@TRIES       @[@@@@ .    @[@@@@ .    @E@@@@          L,H2      X5,Z2     IW
)@@G@@. $P ADDRESS OF Z2 TO X5      @F@@@@          L,H2      X3,C5     . $P SIX
)@@G@@TARTING ADDRESS OF C5 TO X3   @G@@@@Z2LP1     L         X6,X5     . $P XIY
)@@G@@6 TO INDEX THROUGH ENTRY OF Z2      @G@@@@          L         X4,X3     IZ
)@@G@@. $P X4 TO INDEX THROUGH ENTRY OF C5      @E@@@@          L,T1      A1,0JA
)@@G@@,X3   . $P RECORD CODE TO A1 FROM C5@ @@@@ . TRANSFER C5 ENTRY TO Z2    JB
)@@G@@@C@@@@          L,U       A0,9      . $P #9 TO A0     @E@@@@          A,JC
)@@G@@S3      A0,0,X3   . $P ADD CALC ITEM COUNT TO A0@F@@@@          A       JD
)@@G@@  X4,A0     . $P X4 POINTS TO AREA COUNT IN C5  @I@@@@          A,U     JE
)@@G@@  A0,1              . $P ADD AREA COUNT TO WORDS TRANSFERRED      @E@@@@JF
)@@G@@          L         A10,0,X4  . $P AREA COUNT TO A10 FROM C5@G@@@@      JG
)@@G@@    MSI,U     A10,Z2LINK . $P # OF WRDS TO TRANSFER FOR ALL AREA  @E@@@@JH
)@@G@@          A         A10,A0    . $P LENGTH OF C5 ENTRY TO A10@F@@@@      JI
)@@G@@    L         R1,A0    . $P # OF WRDS TO TRANSFER TO R1     @E@@@@      JJ
)@@G@@    L         X1,X3     . $P ORIGINATING ADDRESS TO X1@E@@@@          L JK
)@@G@@        X2,X5     . $P DESTINATION ADDRESS TO X2@E@@@@          LMJ     JL
)@@G@@  X11,PTRANS . $W TRANSFER C5 ENTRY TO Z2 @E@@@@          TNZ,T2    1,X3JM
)@@G@@              . ANY WITHIN CLAUSES  @C@@@@          J         NOWITH    JN
)@@G@@        . NO      @E@@@@          L         A13,0,X4          . $P AREA JO
)@@G@@COUNT TO A13@F@@@@          AN,U      A13,1             . $P A13 WILL COJP
)@@G@@NTROL LOOP  @ @@@@          L         A3,X4     @I@@@@          A,U     JQ
)@@G@@  A3,1              . $P A3 POINTS TO FIRST AREA ENTRY IN C5      @I@@@@JR
)@@G@@          A         X6,A0             . $P X6 POINTS TO FIRST AREA ENTRYJS
)@@G@@ IN Z2      @G@@@@Z2LP11    DL        A11,0,A3          . $P TRANSFER 2 JT
)@@G@@WORDS OF ENTRY    @B@@@@          TZ        WOPT              .   @B@@@@JU
)@@G@@          J         $+3               .   @E@@@@          TNZ       A12 JV
)@@G@@              . $T OPTION SET       @D@@@@          J         Z2GTPR    JW
)@@G@@        . $J Z2GTPR     @F@@@@          DS        A11,0,X6          . $PJX
)@@G@@ STORE TWO WORDS IN Z2  @ @@@@          L         A11,2,A3  @G@@@@      JY
)@@G@@    S         A11,2,X6          . $P STORE THIRD WORD IN Z2       @E@@@@JZ
)@@G@@Z2GPR1    L,U       A12,Z2LINK            . $P NEW LINK IS 4@ @@@@      KA
)@@G@@    S,S1      A12,0,X6  @B@@@@          S         X6,Z2AENT         .   KB
)@@G@@@B@@@@          SZ        3,X6              .   @ @@@@          A,S1    KC
)@@G@@  A3,0,A3   @ @@@@          A,S1      X6,0,X6   @G@@@@          JGD     KD
)@@G@@  A13,Z2LP11        . $P ARE WE DONE WITH ALL AREAS   @E@@@@            KE
)@@G@@                          . $A NO,Z2LP11 YES    @F@@@@Z2CON1    LX      KF
)@@G@@  X11,Z2AENT        . $P ADDR OF Z2AENT TO X11  @B@@@@          SZ,S1   KG
)@@G@@  0,X11           .     @E@@@@          SZ        2,X5      . $P ZERO 3RKH
)@@G@@D WORD OF Z2 ENTRY@E@@@@          SZ        4,X5      . $P ZERO 5TH WORDKI
)@@G@@ OF Z2      @E@@@@          SZ        3,X5      . $P ZERO 4TH WORD OF Z2KJ
)@@G@@ ENTRY@A@@@@ . SEARCH FOR CALC PROCEDURE ADDRESS@[@@@@ .    @E@@@@      KK
)@@G@@    TNZ,S3    0,X5             . ANY CALC ENTRIES     @I@@@@          J KL
)@@G@@        Z2GT2             . SKIP PART THAT ESTABLISHES CALC ADDRESSE    KM
)@@G@@@E@@@@          DL        A11,7,X5  . CALC PROC NAME TO A11,A12   @G@@@@KN
)@@G@@          L,H2      A13,CLSEG$ . $P COUNT OF CALC PROCEDURES TO A13     KO
)@@G@@@E@@@@          AN,U      A13,1     . $P A13 WILL CONTROL LOOP    @G@@@@KP
)@@G@@          L,U       A3,CLSEG$+1 . $P A3 WILL INDEX THROUGH ENTRIES      KQ
)@@G@@@ @@@@Z2CAL1    DTE       A11,0,A3  @^@@@@          J         $+2 @ @@@@KR
)@@G@@          J         CALAD1    @^@@@@          A,U       A3,3@E@@@@      KS
)@@G@@    JGD       A13,Z2CAL1 . $T ANY MORE CALC PROCEDURES@E@@@@          SLKT
)@@G@@J       RER002     . $A YES,Z2CAL1 NO,ERR       @]@@@@Z2GTPR .    @B@@@@KU
)@@G@@          DS        A0,SAVER1         .   @B@@@@          DS        A2,SKV
)@@G@@AVER1+2       .   @E@@@@          LA,T3     A1,0,A3           . $P AREA KW
)@@G@@CODE TO A1  @F@@@@          LX,U      X10,C3            . $P PREPARE TO KX
)@@G@@SEARCH C3   @F@@@@          LMJ       X11,TABSE1        . $W TABSE SEARCKY
)@@G@@H C3 TABLE  @B@@@@          TZ        A2                .   @B@@@@      KZ
)@@G@@    J         PTTGT1            .   @B@@@@          LA,U      A12,1     LA
)@@G@@        .   @D@@@@          DS        A11,0,X6          . STORE PAGE 1  LB
)@@G@@@G@@@@          LA,H1     A11,4,A0          . $P # OF PAGES ALLOCATED TOLC
)@@G@@ A11  @G@@@@          ANA,H2    A11,5,A0          . $P SUBTRACT GLOBAL OLD
)@@G@@VERFLOW     @B@@@@          SA        A11,2,X6          .   @B@@@@      LE
)@@G@@    J         PTTGT2            .   @E@@@@ . PATCH TO ZERO OUT ENTRIES FLF
)@@G@@OR AREAS NOT IN AREA COMMAND  @[@@@@ .    @]@@@@PTTGT1 .    @B@@@@      LG
)@@G@@    LA,U      A12,0             .   @B@@@@          DS        A11,0,X6  LH
)@@G@@        .   @B@@@@          SZ        2,X6              .   @]@@@@PTTGT2LI
)@@G@@ .    @B@@@@          DL        A0,SAVER1         .   @B@@@@          DLLJ
)@@G@@        A2,SAVER1+2       .   @D@@@@          J         Z2GPR1          LK
)@@G@@  . $J Z2GPR1     @]@@@@NOWITH .    @D@@@@ . NO WITHIN CLAUSE ON THIS RELL
)@@G@@CORD, CREATE AN ENTRY   @A@@@@ . WITH AREA CODE = 0 AND RANGE 0   @^@@@@LM
)@@G@@ . X5 POINTS TO Z2 ENTRY@[@@@@ .    @[@@@@ .    @F@@@@          L,U     LN
)@@G@@  A13,10            . RELATIVE LOCATION TO A13  @H@@@@          S,T2    LO
)@@G@@  A13,1,X5          . STORE RELATIVE LOCATION IN Z2 ENTRY   @G@@@@      LP
)@@G@@    A         X6,A0             . X6 POINTS TO FIRST AREA ENTRY   @G@@@@LQ
)@@G@@          AN,U      X6,1              . X6 POINTS TO AREA CNT LOC       LR
)@@G@@@ @@@@          L,U       A13,1     @F@@@@          S         A13,0,X6  LS
)@@G@@        . AREA COUNT TO Z2 ENTRY    @E@@@@          A,U       X6,1      LT
)@@G@@        . ADVANCE X6 BY 1     @^@@@@          SZ        0,X6@B@@@@      LU
)@@G@@    SZ        1,X6              .   @B@@@@          SZ        2,X6      LV
)@@G@@        .   @B@@@@          SZ        3,X6              .   @D@@@@      LW
)@@G@@    L,U       A13,Z2LINK        . LINK TO A13   @E@@@@          S,S1    LX
)@@G@@  A13,0,X6          . LINK TO Z2 ENTRY    @E@@@@          S         X6,ZLY
)@@G@@2AENT         . SAVE ADDRESS OF LINK@E@@@@          A,S1      X6,0,X6   LZ
)@@G@@        . POINT TO NEXT       @B@@@@          J         Z2CON1          MA
)@@G@@  .   @F@@@@CALAD1    L,H1      A2,2,A3   . $P ADDRESS OF CALC PROC TO AMB
)@@G@@2     @G@@@@          S,H2      A2,4,X5   . $P SAVE ADDR OF CALC ROUTINEMC
)@@G@@ IN Z2      @C@@@@ . STORE CALC ITEMS ABSOLUTE ADDRESSES IN Z2    @ @@@@MD
)@@G@@          L         A3,X5     @^@@@@          A,U       A3,9@G@@@@      ME
)@@G@@    LXI,U     A3,1      . $P X3 WILL INDEX THROUGH CALC ITEMS     @E@@@@MF
)@@G@@          L,S3      A14,0,X5  . $P # OF CALC ITEMS TO A14   @G@@@@      MG
)@@G@@    AN,U      A14,1     . $P A14 WILL CONTROL LOOP FOR CALC ITEMS @F@@@@MH
)@@G@@          LA        A2,RECADD         . ADDRESS OF RECORD BUFFER  @B@@@@MI
)@@G@@          AA,U      A2,1              .   @G@@@@CALAD2    L,H2      A15,MJ
)@@G@@0,A3  . $P START WRD CNT OF CALC ITEM TO A15    @G@@@@          A       MK
)@@G@@  A15,A2    . $P ABSOLUTE ADDR OF CALC ITEM TO A15    @E@@@@          S,ML
)@@G@@H2      A15,0,*A3. $P STORE ABSOLUTE ADDR IN Z2 @E@@@@          JGD     MM
)@@G@@  A14,CALAD2 . $T ANY MORE CALC ITEMS     @D@@@@                        MN
)@@G@@       . $A YES,CALAD2 NO     @]@@@@Z2GT2 .     @ @@@@          L       MO
)@@G@@  X6,X5     @^@@@@          AN,U      X6,1@G@@@@          A         X6,AMP
)@@G@@0     . $P POINT TO AREA COUNT IN Z2 ENTRY      @G@@@@          S,H2    MQ
)@@G@@  X3,2,X5   . $P SAVE ADDRESS OF ORIGINAL ENTRY OF C5 @A@@@@ . PREPARE TMR
)@@G@@O SEARCH Z1 TABLE       @A@@@@ . RECORD CODE IS STILL IN A1       @E@@@@MS
)@@G@@          L,U       X10,Z1    . $P ADDRESS OF Z1 TO X10     @G@@@@      MT
)@@G@@    LMJ       X11,TABSE1 . $W SEARCH TABLE Z1 FOR RECORD CODE     @G@@@@MU
)@@G@@          S         A2,Z1ENSW . $P SAVE RET CODE FROM Z1 IN Z1ENSW      MV
)@@G@@@F@@@@          JNZ       A2,Z2GT11 . $T ANY  ENTRY IN Z1 FOR REC CODE  MW
)@@G@@@C@@@@                              . $A NO,Z2GT1 YES @E@@@@          L MX
)@@G@@        X8,A0     . $P X8 POINTS TO ENTRY IN Z1 @E@@@@          L       MY
)@@G@@  X9,X8     . $P X9 WILL INDEX THROUGH Z1 @D@@@@          L,T2      A0,0MZ
)@@G@@,X8   . $P LOAD FACTOR TO A0  @F@@@@          S,T1      A0,1,X5   . $P SNA
)@@G@@AVE IN T1 OF 2ND WORD IN Z2   @D@@@@          L         A0,1,X8   . $P FNB
)@@G@@CNT + ICNT TO A0  @F@@@@          S         A0,3,X5   . $P STORE FCNT + NC
)@@G@@ICNT IN Z2 ENTRY  @E@@@@          L,H2      A8,1,X8   . $P # OF IN STATEND
)@@G@@MENTS TO A8 @D@@@@          TNZ       A8        . $T ANY IN STATEMENTS  NE
)@@G@@@D@@@@          J         Z2GT1     . $A NO,Z2GT1   YES     @G@@@@      NF
)@@G@@    AN,U      A8,1      . $P A8 TO CONTROL LOOP[ SEARCH FOR IN]   @G@@@@NG
)@@G@@          A,U       X9,2      . $P X9 POINTS TO FIRST IN WRD IN Z1      NH
)@@G@@@G@@@@          LXI,U     X9,1      . $ X9 WILL INCREMENT BY 1 UPON INDENI
)@@G@@XING  @]@@@@Z2BLD1 .    @E@@@@          L,T3      A1,0,*X9  . $P AREA CONJ
)@@G@@DE TO A1 FROM Z1  @F@@@@ . SEARCH Z2 TABLE FOR AREA, X6 POINTS TO AREA CNK
)@@G@@OUNT IN Z2 TABLE  @D@@@@          L,H2      A10,0,X6  . $P AREA COUNT TONL
)@@G@@ A10  @E@@@@          AN,U      A10,1     . $P A10 WILL CONTROL LOOP    NM
)@@G@@@H@@@@          L         X4,X6     .    X4 WILL INDEX THROUGH THE AREA NN
)@@G@@ENTRIES     @^@@@@         A,U       X4,1 @D@@@@Z2LP2     TNE,T3    A1,0NO
)@@G@@,X4   . $T FOUND AREA IN Z2   @C@@@@          J         Z2BLD3    . $A YNP
)@@G@@ES,Z2BLD3 NO@E@@@@          A,S1      X4,0,X4      . $P POINT TO NEXT ARNQ
)@@G@@EA    @C@@@@          JGD       A10,Z2LP2 . $T ARE WE DONE  @E@@@@      NR
)@@G@@                          . $A NO,Z2LP2 YES Z2BL33    @]@@@@Z2BL33      NS
)@@G@@@I@@@@          L,U       A4,Z2LINK         . PREPARE TO PATCH LAST LINKNT
)@@G@@ IN Z2 AREA EN    @E@@@@          S,S1      A4,0,X4           . STORE INNU
)@@G@@ Z2 ENTRY   @F@@@@          A,U       X4,Z2LINK         . POINT TO NEXT NV
)@@G@@AREA ENTRY  @E@@@@          L,H2      A4,0,X6           . $P AREA CNT TONW
)@@G@@ A4   @F@@@@          A,U       A4,1              . $P INCREMENT AREA CNNX
)@@G@@T     @F@@@@          S,H2      A4,0,X6           . STORE AREA COUNT IN NY
)@@G@@Z2    @G@@@@          S,T3      A1,0,X4           . $P AREA CODE TO NEW NZ
)@@G@@ENTRY IN Z2 @E@@@@          L,U       A4,0              . $P LINK TO A4 OA
)@@G@@      @G@@@@          S,S1      A4,0,X4           . $P LINK TO S1 OF ENTOB
)@@G@@RY IN Z2    @C@@@@Z2BLD3 .                      . FOUND AREA CODE @D@@@@OC
)@@G@@          L,H1      A4,0,X9   . $P LOWER BOUND TO A4  @E@@@@          S OD
)@@G@@        A4,1,X4   . $P SAVE LOWER BOUND IN Z2   @D@@@@          L,H2    OE
)@@G@@  A4,0,*X9  . $P UPPER BOUND TO A4  @E@@@@          S         A4,2,X4   OF
)@@G@@. $P SAVE UPPER BOUND IN Z2   @F@@@@          JGD       A8,Z2BLD1 . $T AOG
)@@G@@RE WE DONE WITH IN ENTRIES    @C@@@@          J         Z2GT1           OH
)@@G@@  . $J Z2GT1@F@@@@Z2GT11    SZ,T1     1,X5              . $P ZERO OUT LOOI
)@@G@@AD FACTOR   @F@@@@          SZ        3,X5              . $P ZERO OUT INOJ
)@@G@@CNT & FCNT  @[@@@@ .    @G@@@@ . START OVER WITH ALL AREAS IN Z2 AND GETOK
)@@G@@ LOAD FACTOR & BITS FROM C3.  @G@@@@ . WHEN DONE, X6 WILL POINT TO NEXT OL
)@@G@@WORD PAST ALL THE AREA ENTRIES IN   @]@@@@ . Z2       @]@@@@Z2GT1       OM
)@@G@@@G@@@@          L,H2      A10,0,X6 . $A NO,Z2BLD1 YES AREA CNT OF Z2 TO ON
)@@G@@A10   @H@@@@          AN,U      A10,1     . $P AREA COUNT TO A10, A10 TOOO
)@@G@@ CONTROL LOOP     @G@@@@          A,U       X6,1      . $P X6 POINTS TO OP
)@@G@@FIRST AREA ENTRY IN Z2  @E@@@@Z2LP3     L,T3      A1,0,X6   . $P AREA COOQ
)@@G@@DE FROM Z2 TO A1  @E@@@@          L,U       X10,C3    . $P ADDRESS OF C3OR
)@@G@@ TO X10     @E@@@@          LMJ       X11,TABSE1 . $W SEARCH TABLE C3 FOOS
)@@G@@R AREA@D@@@@          JNZ       A2,Z2BLD4 . $T FOUND AREA ENTRY   @C@@@@OT
)@@G@@          L         X7,A0     . $A NO,Z2BLD4 YES@C@@@@          L,S4    OU
)@@G@@  A0,3,X7   . $P BITS TO A0   @E@@@@          S,S2      A0,0,X6   . $P SOV
)@@G@@AVE IN AREA ENTRY IN Z2 @D@@@@          L,H1      A0,6,X7   . $P LOAD FAOW
)@@G@@CTOR TO A0  @C@@@@          S,T2      A0,0,X6   . $P STORE IN Z2  @F@@@@OX
)@@G@@Z2BLD5    A,S1       X6,0,X6      . $P X6 POINTS TO NEXT ENTRY    @C@@@@OY
)@@G@@          JGD       A10,Z2LP3 . $T ARE WE DONE  @C@@@@                  OZ
)@@G@@            . $A NO,Z2LP3 YES @B@@@@          A,U       X6,Z2LINK       PA
)@@G@@  .   @E@@@@          TZ        Z1ENSW    . $T WAS THERE AN ENTRY IN Z1 PB
)@@G@@@C@@@@          J         Z2ENT1    . $J Z2ENT1  NO   @F@@@@          TZPC
)@@G@@,H2     1,X8              . WAS THERE IN STATEMENT    @C@@@@          J PD
)@@G@@        Z2FROM            . YES     @^@@@@          LXI,U     X9,1@^@@@@PE
)@@G@@          A,U       X9,2@C@@@@Z2FROM    TNZ,H1    1,X8      . $T ANY FCNPF
)@@G@@T     @C@@@@          J         Z2ENT1    . $J Z2ENT1       @A@@@@      PG
)@@G@@    L         A0,X6     . $   @G@@@@          AN        A0,X5     . $  CPH
)@@G@@ALCULATE RELATIVE POSITION OF FCNT  @F@@@@          S,H1      A0,2,X5   PI
)@@G@@. $P SAVE RELATIVE POSITION IN Z2   @F@@@@ . TRANSFER FCOUNT ENTRIES, X9PJ
)@@G@@ POINTS TO FIRST ENTRY OF FCOUNT    @A@@@@          LXI,U     X6,1      PK
)@@G@@.     @C@@@@          L,H1      A8,1,X8   . $P FCNT TO A8   @E@@@@      PL
)@@G@@    AN,U      A8,1      . $P A8 WILL CONTROL LOOP     @]@@@@Z2BLD2 .    PM
)@@G@@@E@@@@          L         A0,0,*X9  . $P FROM ENTRY TO A0 FROM Z1 @F@@@@PN
)@@G@@          S         A0,0,*X6  . $P SAVE FROM ENTRY IN Z2 ENTRY    @C@@@@PO
)@@G@@          JGD       A8,Z2BLD2 . $T ARE WE DONE  @C@@@@Z2ENT1    LXI,U   PP
)@@G@@  X5,0      . $A NO,Z2BLD2 YES@A@@@@          LXI,U     X6,0      . $P  PQ
)@@G@@@E@@@@          L         A0,X6     . $P NEXT ENTRY ADDRESS TO A0 @D@@@@PR
)@@G@@          AN        A0,X5     . $P CALCULATE LINK     @D@@@@          S,PS
)@@G@@T3      A0,0,X5   . $P SAVE LINK IN Z2    @E@@@@          A         A6,APT
)@@G@@0     . $P UPDATE # OF WRDS IN Z2   @D@@@@          TNZ,T3    0,X3      PU
)@@G@@. $T ANY LINK IN C5     @C@@@@          J         Z2DONE    . $J Z2DONE PV
)@@G@@      @E@@@@          A,T3      X3,0,X3   . $P POINT TO NEXT ENTRY IN C5PW
)@@G@@@E@@@@          A,T3      X5,0,X5   . $P POINT TO NEXT ENTRY IN Z2@B@@@@PX
)@@G@@          J         Z2LP1     . $J Z2LP1  @D@@@@Z2BLD4 .                PY
)@@G@@      NO AREA ENTRY IN C3     @D@@@@          SZ,S2     0,X6      . $P ZPZ
)@@G@@ERO BITS FIELD    @D@@@@          SZ,T2     0,X6      . $P ZERO LOAD FACQA
)@@G@@TOR   @C@@@@          J         Z2BLD5    . $J Z2BLD5       @C@@@@Z2DONEQB
)@@G@@    SZ,T3     0,X5      . $P ZERO LINK    @E@@@@          S,H1      A6,ZQC
)@@G@@2     . $P STORE # OF WRDS IN Z2    @[@@@@ .    @^@@@@ . Z2 HAS BEEN BUIQD
)@@G@@LT    @[@@@@ .    @[@@@@ .    @[@@@@ .    @ @@@@ . WRITE OUT THE Z2 TABLQE
)@@G@@E     @[@@@@ .    @B@@@@          LX,U      X10,Z2CPAR        .   @F@@@@QF
)@@G@@          LMJ       X11,CF$AM         . WRITE THE Z2 TABLE OUT    @[@@@@QG
)@@G@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @C@@@@ . PREPARE TO MCORE FOR QH
)@@G@@THE BUFFER NEEDED       @[@@@@ .    @[@@@@ .    @B@@@@          L       QI
)@@G@@  A0,LAST$D         .   @B@@@@          L         A1,A0             .   QJ
)@@G@@@B@@@@          A,U       A1,1              .   @B@@@@          S       QK
)@@G@@  A1,BUFADD         .   @B@@@@          LA        A2,MAXPSIZE       .   QL
)@@G@@@E@@@@          MSI,U     A2,BLSIZE         . $P GET BUFFER SIZE  @B@@@@QM
)@@G@@          MSI,U     A2,NUMBLK         .   @B@@@@          AA        A0,AQN
)@@G@@2             .   @B@@@@          S         A0,LAST$D         .   @D@@@@QO
)@@G@@          ER        MCORE$            . $W MCORE$     @[@@@@ .    @[@@@@QP
)@@G@@ .    @[@@@@ .    @C@@@@ . PREPARE TO MCORE FOR THE BUFFER INDEX TABLE  QQ
)@@G@@@[@@@@ .    @[@@@@ .    @B@@@@          L         A0,LAST$D         .   QR
)@@G@@@B@@@@          L         A1,A0             .   @B@@@@          A,U     QS
)@@G@@  A1,1              .   @B@@@@          S         A1,BFIADD         .   QT
)@@G@@@B@@@@          LA,U      A2,BFISIZ         .   @B@@@@          AA      QU
)@@G@@  A0,A2             .   @B@@@@          S         A0,LAST$D         .   QV
)@@G@@@D@@@@          ER        MCORE$            . $W MCORE$     @[@@@@/     QW
)@@G@@@]@@@@MLOOP1 .    @A@@@@ . THIS IS THE MAIN LOOP OF RELOAD  @[@@@@ .    QX
)@@G@@@A@@@@ . ACCESS RECORD FROM DATA FILE     @[@@@@ .    @A@@@@ . SAVE OLD QY
)@@G@@BUFPKT FOR DEBUGGING    @[@@@@ .    @B@@@@          DL        A0,BUFPKT QZ
)@@G@@        .   @B@@@@          DS        A0,BPKTSV         .   @B@@@@      RA
)@@G@@    DL        A0,BUFPKT+2       .   @B@@@@          DS        A0,BPKTSV+RB
)@@G@@2       .   @[@@@@ .    @[@@@@ .    @B@@@@ . INITIALIZE SWITCHES FOR NEXRC
)@@G@@T RECORD    @[@@@@ .    @E@@@@          SZ        STDWRAP           . $PRD
)@@G@@ RESET STDWRAP    @G@@@@          SZ        BUFPKT+3          . $P RESETRE
)@@G@@ 4TH WORD OF BUFPKT     @F@@@@          SZ        ST7RAP            . $PRF
)@@G@@ RESET STN WRAP SWITCH  @F@@@@          SZ        ARSCAN            . BERG
)@@G@@GINNING OF AREA SCAN    @G@@@@          SZ        FROMSW            . $PRH
)@@G@@ RESET FROM ENTRY SWITCH      @F@@@@          SZ        STNRSW          RI
)@@G@@  . RESET NEAR LOGIC SWITCH   @G@@@@          LX        X10,RECADD . $P RJ
)@@G@@ADDRESS OF RECORD BUFFER TO X10     @F@@@@          LMJ       X11,DF$AMRRK
)@@G@@ . $P NEXT RECORD TO RECORD BUFFER  @F@@@@          L         A0,DFIEOF RL
)@@G@@ . $P END OF FILE INDICATOR TO A0   @F@@@@          LA        A1,RECADD RM
)@@G@@        . ADDRESS OF RECORD BUFFER  @G@@@@          TNE       A0,0,A1   RN
)@@G@@   . $T WAS END OF FILE WORD RETURNED     @C@@@@          J         DFEORO
)@@G@@F      . $A YES,DFEOF   @G@@@@ . RECORD PRECEDED WITH CONTROL WORD SHOULRP
)@@G@@D BE IN RECORD BUFFER NOW     @F@@@@          TNZ       0,A1       . $T RQ
)@@G@@IS FIRST WRD CONTROL OR DBP   @C@@@@          J         CONTRL     . $A RR
)@@G@@YES,CONTRL  @[@@@@ .    @A@@@@ . GET TABLE ENTRIES FOR RECORD     @[@@@@RS
)@@G@@ .    @F@@@@          LA        A0,RECADD         . ADDRESS OF RECORD BURT
)@@G@@FFER  @E@@@@          L,T1      A1,1,A0     . $P RECORD CODE TO A1      RU
)@@G@@@F@@@@          L,U       X10,Z2      . $P ADDRESS OF Z2 WRD TO X10     RV
)@@G@@@H@@@@          LMJ       X11,TABSE1  . $W SEARCH TABLE Z2 FOR ENTRY (RERW
)@@G@@C CODE)     @E@@@@          TZ        A2          . $T ARE WE SUCCESSFULRX
)@@G@@      @C@@@@          SLJ       RER003      . $E NO ERROR   @F@@@@      RY
)@@G@@    L         X5,A0       . $P POINTER OF Z2 ENTRY TO X5    @E@@@@      RZ
)@@G@@    S         X5,Z2ENT    . $P SAVE POINTER TO ENTRY  @[@@@@ .    @A@@@@SA
)@@G@@ . DECOMPOSE DBK & FIND OUT AREA    @F@@@@          LA        A0,RECADD SB
)@@G@@        . ADDRESS OF RECORD BUFFER  @C@@@@          L         A0,0,A0   SC
)@@G@@. $P DBK TO A0    @F@@@@          SLJ       DBP$APS   . $W CALL ROUTINE SD
)@@G@@TO DECOMPOSE DBP  @B@@@@          JNZ       A1,EDPAT1         .   @B@@@@SE
)@@G@@          TNZ       DESARE            .   @B@@@@          SLJ       RER0SF
)@@G@@04            .   @B@@@@          LA        A1,DESARE         .   @]@@@@SG
)@@G@@EDPAT1 .    @G@@@@          DS        A1,OLDARE . $P SAVE VALUES RETURNESH
)@@G@@D FROM DBP$APS    @A@@@@          DS        A3,OLDSLT . $P  @[@@@@ .    SI
)@@G@@@C@@@@ .  FIGURE OUT IF USER SPECIFIED FROM ENTRY     @E@@@@ . X5 POINTSSJ
)@@G@@ TO Z2 ENTRY FOR RECORD. ( SAVED IN Z2ENT )     @[@@@@ .    @[@@@@ .    SK
)@@G@@@[@@@@ .    @C@@@@          L,H1      A3,3,X5 . $P #OF FCNT TO A3 @E@@@@SL
)@@G@@          TNZ       A3                . $T ANY FROM ENTRY   @E@@@@      SM
)@@G@@    J         TYPECHK           . $A NO,RELCN2 YES    @D@@@@          ANSN
)@@G@@,U      A3,1   . $P A3 WILL CONTROL LOOP  @E@@@@          L         X6,XSO
)@@G@@5  . $P X6 WILL SCAN FCNT ENTRIES   @E@@@@          A,H1      X6,2,X6   SP
)@@G@@. $P POINT TO FCNT ENTRIES    @D@@@@FCNLP1    TNE,T2    A1,0,X6   . $T ASQ
)@@G@@REA CODES MATCH   @C@@@@          J         FRFND1    . $A YES,FRFND1 NOSR
)@@G@@@E@@@@          A,U       X6,1      . $P POINT TO NEXT ENTRY      @G@@@@SS
)@@G@@          JGD       A3,FCNLP1 . $T ARE WE DONE WITH ALL FCNT ENTRIES    ST
)@@G@@@D@@@@          J         TYPECHK           . $J TYPECHK    @H@@@@FRFND1SU
)@@G@@    LA,T3     A1,0,X6           . $P FOUND FROM ENTRY FOR THIS AREA     SV
)@@G@@@B@@@@          LA,U      A0,1              .   @E@@@@          SA      SW
)@@G@@  A0,FROMSW         . $P SET FROMSW       @[@@@@ .    @[@@@@ .    @A@@@@SX
)@@G@@ . CHECK IF RECORD IS A CALC RECORD @[@@@@ .    @[@@@@ .    @]@@@@TYPECHSY
)@@G@@K     @[@@@@ .    @[@@@@ .    @F@@@@          LA        A0,RECADD       SZ
)@@G@@  . ADDRESS OF RECORD BUFFER  @G@@@@          L,S3      A5,1,A0     . $PTA
)@@G@@ RECORD DESCRIPTION TO A5      6    @G@@@@          AND       A5,CALMSK TB
)@@G@@. $P MASK RECORD TYPE BIT,RESULT TO A6    @E@@@@          JNZ       A6,RTC
)@@G@@ELCAL . $T IS RECORD A CALC RECORD  @C@@@@                              TD
)@@G@@. $A YES,RELCAL NO@[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@TE
)@@G@@ .    @[@@@@ .    @]@@@@RELCN2 .    @]@@@@          . @[@@@@ .    @E@@@@TF
)@@G@@          LA        A0,FROMSW         . $T FROMSW SET       @E@@@@      TG
)@@G@@    JNZ       A0,RELCN1         . $A YES,RELCN1 NO    @B@@@@          TNTH
)@@G@@Z       DESARE            .   @B@@@@          SLJ       RER005          TI
)@@G@@  .   @B@@@@          L         A1,DESARE         .   @G@@@@RELCN1    S TJ
)@@G@@        A1,NEWARE . $P SAVE AREA CODE TO BE LOADED IN NEWARE@[@@@@ .    TK
)@@G@@@C@@@@ . FIND CORRESPONDING AREA ENTRY WITHIN Z2 ENTRY@[@@@@ .    @G@@@@TL
)@@G@@          SLJ       FZ2AENT           . $W FZ2AENT FIND AREA ENTRY      TM
)@@G@@@E@@@@          JNZ       A0,NPGMSG         . $T AREA ENTRY FOUND @E@@@@TN
)@@G@@                                      . $A NO,NPGEMSG YES   @F@@@@Z2AFNDTO
)@@G@@    S         X6,Z2AREA . $P SAVE POINTR TO Z2 AREA ENTRY   @E@@@@ .    TP
)@@G@@                        . A1 SHOULD CONTAIN NEW AREA  @E@@@@          LXTQ
)@@G@@,U      X10,C3    . $P ADDRESS OF C3 TO X10     @G@@@@          LMJ     TR
)@@G@@  X11,TABSE1 . $W SEARCH C3 TABLE FOR NEW AREA ENTRY  @C@@@@          TZTS
)@@G@@        A2        .  $T SUCCESSFUL  @C@@@@          SLJ       RER006    TT
)@@G@@. $E EXIT NO      @E@@@@          S         A0,NEWC3A . $P SAVE ADDRESS TU
)@@G@@TO C3 ENTRY @[@@@@ .    @[@@@@ .    @[@@@@ .    @C@@@@ . CHECK IF RECORDTV
)@@G@@ HAS A DIRECT LOCATION MODE   @C@@@@ . LOCATION MODE IS IN S4 OF FIRST ZTW
)@@G@@2 ENTRY WORD@ @@@@ . Z2 ENTRY ADDRESS IN Z2ENT  @[@@@@ .    @[@@@@ .    TX
)@@G@@@G@@@@          LA        A2,Z2ENT          . ADDRESS OF Z2 ENTRY TO A2 TY
)@@G@@      @E@@@@          LA,S4     A2,0,A2           . $P TYPE TO A2       TZ
)@@G@@@G@@@@          TNE,U     A2,1              . $P DOES REC HAVE DIRECT LOUA
)@@G@@C     @E@@@@          J         RELDIR            . $T YES,RELDIR NO    UB
)@@G@@@F@@@@          TNZ       OWNRSW            . $T IS OWNER SWITCH SET    UC
)@@G@@@D@@@@          J         STNGT1            . $J STNGT1     @]@@@@OWNCR1UD
)@@G@@ .    @F@@@@ . OWNER RECORD SWITCH WAS SET INDICATING POSSIBLE STORE NEAUE
)@@G@@R     @[@@@@ .    @F@@@@          SZ        OWNRSW            . $P RESETUF
)@@G@@ OWNER SWITCH     @G@@@@          L         A0,OWNARE         . $P AREA UG
)@@G@@CODE OF OWNER TO AO     @G@@@@          S         A0,STNARE         . $PUH
)@@G@@ A/C OF OWNER TO STNARE       @E@@@@          L         A0,OWNPGE       UI
)@@G@@  . $P PAGE # TO A0     @E@@@@          S         A0,STNPGE         . PAUJ
)@@G@@GE # TO STNPGE    @G@@@@          TNE       A1,STNARE         . $T STNARUK
)@@G@@E SAME AS AREA IN A1    @E@@@@          J         STCRNG            . $AUL
)@@G@@ YES,STCRNG NO    @[@@@@ .    @F@@@@ . STNARE WAS FOUND TO BE DIFFERENT UM
)@@G@@THAN  AREA FOR THIS RECORD    @E@@@@ . CHECK IF RECORD CAN RESIDE IN STNUN
)@@G@@ARE WHERE OWNER IS      @E@@@@ . THIS IS TO COVER THE CASE WHERE THE CALUO
)@@G@@C ROUTINE FOR THE @D@@@@ . OWNER CHANGES THE AREA DUE TO A CALC KEY CHANUP
)@@G@@GE.   @C@@@@ . NEWARE CONTAINS AREA CODE BEFORE THIS CHECK. @B@@@@ . PREUQ
)@@G@@VIOUS VALUE OF A1 SAVED IN NEWARE   @[@@@@ .    @[@@@@ .    @E@@@@      UR
)@@G@@    LA        A1,STNARE         . $P STNARE TO A1     @D@@@@          SLUS
)@@G@@J       FZ2AENT           . $W FZ2AENT    @E@@@@          JNZ       A0,OUT
)@@G@@WNCR2         . $T AREA ENTRY FOUND @B@@@@                    . $A NO,OWUU
)@@G@@NCR2 YES    @[@@@@ .    @[@@@@ .    @C@@@@ . RECORD CAN BE RELOADED IN AUV
)@@G@@REA OF OWNER.     @ @@@@ . UPDATE Z2AREA AND NEWC3A.  @[@@@@ .    @[@@@@UW
)@@G@@ .    @E@@@@          SX        X6,Z2AREA         . $P UPDATE Z2AREA    UX
)@@G@@@E@@@@          LX,U      X10,C3            . $P ADDRESS OF C3    @G@@@@UY
)@@G@@          LMJ       X11,TABSE1        . $W TABSE1 SEARCH C3 FOR STNARE  UZ
)@@G@@@E@@@@          JZ        A2,$+2            . $T SUCCESSFULL      @E@@@@VA
)@@G@@          SLJ       RER006            . $A NO,RER006 YES    @E@@@@      VB
)@@G@@     SA       A0,NEWC3A         . $P UPDATE NEWC3A    @E@@@@          SAVC
)@@G@@        A1,NEWARE         . $P UPDATE NEWARE    @D@@@@          J       VD
)@@G@@  STCRNG            . $J STCRNG     @G@@@@STNGT1    TE        A1,STNARE VE
)@@G@@        . $T STNARE SAME AS AREA IN A1    @E@@@@          J         RELCVF
)@@G@@N3            . $A NO,RELCN3 YES    @]@@@@STCRNG .    @E@@@@          L,VG
)@@G@@H2      A2,2,X6           . $P UPPER RANGE TO A2@E@@@@          L       VH
)@@G@@  A0,STNPGE         . $P STN PAGE TO A0   @F@@@@          TG        A2,AVI
)@@G@@0             . STORE NEAR PGE > UPPER    @B@@@@          J         $+2 VJ
)@@G@@              .   @D@@@@          J         RELCN3            . IGNORE IVK
)@@G@@T     @G@@@@          TLE,H2    A0,1,X6           . LOWER RNGE <= STORE VL
)@@G@@NEAR PGE    @D@@@@          J         RELCN3            . IGNORE IT     VM
)@@G@@@E@@@@                                      . $T STN PGE IN RANGE @E@@@@VN
)@@G@@                                      . $A NO,RELCN2 YES    @F@@@@      VO
)@@G@@    S,H1      A0,3,X6           . $P STN PGE TO Z2 ENTRY    @B@@@@      VP
)@@G@@    L,U       A0,1              .   @F@@@@          S         A0,STNRSW VQ
)@@G@@        . $P SET STORE NEAR SWITCH  @D@@@@          J         AREGT2    VR
)@@G@@        . $J AREGT2     @G@@@@OWNCR2    LA        A1,NEWARE         . REVS
)@@G@@CORD CANNOT BE RELOADED TO    @E@@@@                                    VT
)@@G@@  . SAME AREA AS OWNER  @]@@@@RELCN3      @G@@@@          TZ,H2     3,X6VU
)@@G@@      . $T ANY PGE NUMBER IN Z2 AREA ENTRY      @D@@@@          J       VV
)@@G@@  AREGT2            . $J AREGT2     @F@@@@NPGENU    . NO PAGE HAS BEEN DVW
)@@G@@ELIVERED TO THE RECORD FROM AREA    @E@@@@          L,U       X10,BUFPKTVX
)@@G@@ . $P ADDRESS OF BUFPKT TO X10@E@@@@          L,U       A0,6      . $P FVY
)@@G@@UNCTION CODE 6 TO A0    @G@@@@          S,H2      A0,0,X10  . $P FUNCTIOVZ
)@@G@@N CODE TO BUFFER ROUTINE PKT  @D@@@@          S,T1      A1,1,X10  . $P AWA
)@@G@@REA CODE(NEW)     @A@@@@          L         A0,Z2AREA       @G@@@@      WB
)@@G@@    S,H2      A0,2,X10          . $P AREA POINTER OF Z2 TO BUFPKT @G@@@@WC
)@@G@@          LMJ       X11,BUFROU . $W GET FIRST DATA PAGE WITHIN RANGE    WD
)@@G@@@ @@@@          TZ,H1     BUFPKT    @ @@@@          SLJ       RER010    WE
)@@G@@@G@@@@                              .  THE CALL WILL SET THE PAGE NUMBERWF
)@@G@@ IN   @D@@@@                              .  THE Z2 AREA ENTRY    @B@@@@WG
)@@G@@          SLJ       DATYPE            .   @C@@@@          J         ARECWH
)@@G@@UR    . $J ARECUR       @D@@@@ . CHECK IF LAST AREA, RECORD AND PAGE AREWI
)@@G@@ CURRENT    @]@@@@AREGT2 .    @E@@@@          TE        A1,CURARE . $T IWJ
)@@G@@S NEW AREA CURRENT      @E@@@@          J         ARNCUR    . $A NO,ARNCWK
)@@G@@UR YES,ARECUR     @]@@@@ARECUR .    @B@@@@          L         A1,CURARE WL
)@@G@@        .   @D@@@@          S         A1,NEWARE . $P SAVE AREA CODE     WM
)@@G@@@F@@@@          LA        A0,RECADD         . ADDRESS OF RECORD BUFFER  WN
)@@G@@@E@@@@          L,T1      A2,1,A0     . $P RECORD CODE TO A2      @B@@@@WO
)@@G@@          TNE        A2,CURREC         .  @^@@@@          J         $+2 WP
)@@G@@@E@@@@          SA        A2,CURREC         . MAKE RECORD CURRENT @A@@@@WQ
)@@G@@                              .     @]@@@@RECCUR .    @F@@@@          TZWR
)@@G@@        STNRSW            . $T ANY STORE NEAR LOGIC   @E@@@@          J WS
)@@G@@        RECGT1            . YES,RECGT1 NO       @E@@@@          L,H2    WT
)@@G@@  A3,3,X6   . $P LAST PAGE FROM Z2AREA    @D@@@@RECGT2    TE        A3,CWU
)@@G@@URPGE . $T IS PAGE CURRENT    @C@@@@          J         PGNCUR    . $A NWV
)@@G@@O,PGNCUR YES@B@@@@PGECUR    L         A3,CURPGE         .   @F@@@@      WW
)@@G@@    S         A3,NEWPGE . $P SAVE CURRENT PAGE FOR POINTER  @C@@@@ . PAGWX
)@@G@@E IS CURRENT, CHECK IF WE CAN STORE IN IT @E@@@@          L        X9,CUWY
)@@G@@RADD . $P ADDRESS OF PAGE TO X9     @D@@@@          L,H1      X8,2,X9   WZ
)@@G@@. $P PAGE LENGTH TO X8  @ @@@@          A         X8,X9     @A@@@@      XA
)@@G@@    AN,U      X8,1      . $P  @G@@@@          AN,H1     X8,6,X9   . $P XXB
)@@G@@8 POINTS PAST THE CALC HEADERS      @G@@@@          S         X8,FSLTVA XC
)@@G@@. $P SAVE POINTER TO FIRST SLOT ON PAGE   @ @@@@ . DOES PAGE HAVE ANY SPXD
)@@G@@ACE   @F@@@@          LA        A0,RECADD         . ADDRESS OF RECORD BUXE
)@@G@@FFER  @E@@@@          L,T3      A3,1,A0     . $P RECORD LENGTH TO A3    XF
)@@G@@@ @@@@          L         A2,Z2ENT  @G@@@@          TZ,T1     1,A2      XG
)@@G@@        . $T ANY LOAD FACTOR BY USER      @E@@@@          J         USERXH
)@@G@@LD            . $A YES,USERLD NO    @F@@@@          LX        X11,Z2AREAXI
)@@G@@        . $P ADDR OF Z2AREA TO X11  @E@@@@          L,T2      A4,0,X11  XJ
)@@G@@  . $P LOAD FACTOR TO A4      @E@@@@SPFIND    LMJ       X11,RSPACE  . $WXK
)@@G@@ ANY SPACE AVAILABLE    @I@@@@          S         A2,SPACSW         . SAXL
)@@G@@VE ERROR RETURN FROM RSPACE ROUTINE       @E@@@@          JNZ       A2,NXM
)@@G@@OSPC1         . $T SUCCESSFUL       @E@@@@                              XN
)@@G@@        . $A NO,NOSPC1 YES    @[@@@@ .    @C@@@@ . GO AHEAD AND ASSIGN RXO
)@@G@@ECORD AND SLOT NUMBER   @D@@@@ . X9 POINTS TO PAGE, FSLTVA  POINTS TO FIXP
)@@G@@RST SLOT    @E@@@@          LMJ       X11,RNUSLT  . $W ASSIGN SLOT AND RXQ
)@@G@@EC #  @F@@@@ . A2>0 IF A SLOT IS BEING REUSED, A3 HAS NEW RECORD #  ASSIXR
)@@G@@GNED  @B@@@@ . A0 HAS CONTENTS OF SLOT JUST ASSIGNED  @A@@@@          S XS
)@@G@@        A1,NEWSLT       @[@@@@ .    @ @@@@ . PREPARE TO STORE RECORD    XT
)@@G@@@[@@@@ .    @E@@@@          LXM       X1,RECADD   . $P RECORD ADDRESS TOXU
)@@G@@ X1   @B@@@@          AX,U      X1,1              .   @E@@@@          L,XV
)@@G@@T3      A1,0,X1     . $P RECORD LENGTH TO A1    @E@@@@          LMJ     XW
)@@G@@  X11,RSTORE  . $P STORE RECORD ON PAGE   @F@@@@          J         PTRFXX
)@@G@@RM      . $J PTRFRM  GO FORM NEW DBP AND  @F@@@@                        XY
)@@G@@        .    GATHER STATISTICS FOR C4     @]@@@@USERLD .    @G@@@@      XZ
)@@G@@    L,T1      A4,1,A2           . $P LOAD FACTOR SPECIFIED TO A4  @D@@@@YA
)@@G@@          J         SPFIND            . $J SPFIND     @[@@@@ .    @[@@@@YB
)@@G@@ .    @[@@@@ .    @ @@@@ARNCUR .  AREA NOT CURRENT    @G@@@@ . BUILD BUFYC
)@@G@@ROU PACKET FOR NEW AREA AND PAGE NUMBER AS OBTAINED FROM Z2 @G@@@@      YD
)@@G@@    L,U       X10,BUFPKT  . $P X10 POINTS TO BUFFER ROUTINE PKT   @F@@@@YE
)@@G@@          S,T1      A1,1,X10    . $P AREA CODE TO T1 OF 2ND WRD   @F@@@@YF
)@@G@@          TZ        STNRSW             . $T ANY STORE NEAR LOGIC  @E@@@@YG
)@@G@@          J         STGTPG            . $A YES,STGTPG NO    @G@@@@      YH
)@@G@@    L,H2      A2,3,X6     . $P PAGE PREVIOUSLY RETURNED TO A2     @G@@@@YI
)@@G@@ARNGT1    S,H2      A2,1,X10    . $P PAGE # TO H2 OF 2ND WRD OF PKT     YJ
)@@G@@@E@@@@          L,U       A0,1        . $P FUNCTION CODE IS 1     @E@@@@YK
)@@G@@          S,H2      A0,0,X10    . $P FUNCTION CODE TO PACKET@G@@@@      YL
)@@G@@    S,H2      X6,2,X10  . $P AREA ENTRY ADDRESS OF Z2 TO PACKET   @C@@@@YM
)@@G@@          LMJ       X11,BUFROU  . $W GET PAGE   @C@@@@          TZ,H1   YN
)@@G@@  BUFPKT      . $T SUCCESSFUL @D@@@@          J         BUNSUC      . $AYO
)@@G@@ NO,BUNSUC   YES  @G@@@@                                .    YES, AREA, YP
)@@G@@PAGE, BLOCK, ADDR INFO  @E@@@@                                .    SETUPYQ
)@@G@@ IN CURRENCY WORDS@G@@@@          SLJ       DATYPE            . MAKE SURYR
)@@G@@E PAGE IS DATA TYPE     @ @@@@          J         ARECUR    @]@@@@STGTPGYS
)@@G@@ .    @G@@@@          L,H1      A2,3,X6           . $P LAST STORE NEAR PYT
)@@G@@GE TO A2    @D@@@@          J         ARNGT1            . $J ARNGT1     YU
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @B@@@@PGNCURYV
)@@G@@ . PAGE NOT CURRENT BUT AREA IS     @E@@@@       . BUILD PACKET TO CALL YW
)@@G@@BUFROU TO MAKE PAGE CURRENT   @G@@@@          L,U       X10,BUFPKT      YX
)@@G@@  . X10 POINTS TO BUFFER PACKET     @E@@@@          S,T1      A1,1,X10  YY
)@@G@@         . AREA CODE TO PACKET@F@@@@          S,H2      A3,1,X10        YZ
)@@G@@  . $P PAGE NUMBER TO PACKET  @B@@@@          L,U       A0,1            ZA
)@@G@@  .   @G@@@@          S,H2      A0,0,X10          . $P FUNCTION CODE 1 TZB
)@@G@@O PACKET    @I@@@@          S,H2      X6,2,X10          . $P POINTER TO ZC
)@@G@@AREA ENTRY IN Z2 TO PKT       @G@@@@          LMJ       X11,BUFROU      ZD
)@@G@@  . $W BUFROU CALL BUFFER ROUTINES  @D@@@@          TZ,H1     BUFPKT    ZE
)@@G@@        . SUCCESSFUL    @B@@@@          SLJ       RER007            .   ZF
)@@G@@@B@@@@          TE        A3,CURPGE         .   @B@@@@          SLJ     ZG
)@@G@@  RER008            .   @B@@@@          SLJ       DATYPE            .   ZH
)@@G@@@B@@@@          L         A0,CURADD         .   @^@@@@          A,U     ZI
)@@G@@  A0,1@B@@@@          TZ,S3     0,A0              .   @B@@@@          SLZJ
)@@G@@J       RER009            .   @B@@@@          J         PGECUR          ZK
)@@G@@  .   @H@@@@RECGT1    L,H1      A3,3,X6           . $P LAST STORE NEAR LZL
)@@G@@OGIC PGE TO A3    @D@@@@          J         RECGT2            . $J RECGTZM
)@@G@@2     @[@@@@ .    @A@@@@PTRFRM . FORM NEW DATA BASE POINTER @G@@@@      ZN
)@@G@@    DL        A1,NEWARE . $P NEW AREA TO A1, NEW PAGE TO A2       @D@@@@ZO
)@@G@@          L         A3,NEWSLT . $P NEW SLOT TO A3     @ @@@@          SLZP
)@@G@@J       APS$DBP   @E@@@@          TNZ       A0        . $T WAS AREA IN CZQ
)@@G@@3 TABLE     @B@@@@          SLJ       RER011    . $E ERROR  @F@@@@      ZR
)@@G@@    S         A0,NEWDBP . $P SAVE NEW DATA BASE POINTER     @D@@@@ . CALZS
)@@G@@L KEY FILE ACCESS METHOD TO INSERT NEW POINTER  @[@@@@ .    @G@@@@      ZT
)@@G@@    S         A0,KFAPKT+4 . $P NEW DBP TO PACKET OF KEY ACCESS    @F@@@@ZU
)@@G@@          LA        A0,RECADD         . ADDRESS OF RECORD BUFFER  @D@@@@ZV
)@@G@@          L         A0,0,A0     . $P OLD DBP TO A0    @G@@@@          S ZW
)@@G@@        A0,KFAPKT+3 . $P OLD DBP TO PACKET OF KEY ACCESS    @A@@@@      ZX
)@@G@@    L,U       X10,KFAPKT      @F@@@@          LMJ       X11,KF$AMW  . $WZY
)@@G@@ CALL KF$AMW  WRITE FUNCTION  @ @@@@          TZ        KFAPKT+5  @D@@@@ZZ
)@@G@@          SLJ       RER012    . SUCCESSFUL RETURN     @G@@@@          L AA
)@@G@@        A0,CURPGE         . $P CURRENT PAGE TO STNPGE       @B@@@@      AB
)@@G@@    S         A0,STNPGE         .   @B@@@@          L         A0,CURARE AC
)@@G@@        .   @G@@@@          S         A0,STNARE         . $P CURRENT AREAD
)@@G@@A TO STNARE       @G@@@@          L         A0,RELNUM         . $P NUM OAE
)@@G@@F RECORDS RELOADED TO A0@D@@@@          A,U       A0,1              . $PAF
)@@G@@ INCREMENT  @E@@@@          S         A0,RELNUM         . $P SAVE IN RELAG
)@@G@@NUM   @B@@@@          LA        A0,RELSNUM        .   @^@@@@          AAAH
)@@G@@,U      A0,1@E@@@@          SA        A0,RELSNUM        . INCREMENT RELSAI
)@@G@@NUM   @ @@@@          J         MLOOP1    @[@@@@ .    @[@@@@ .    @[@@@@AJ
)@@G@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@AK
)@@G@@ .    @E@@@@BUNSUC . ACCESS OF PAGE WAS UNSUCCESSFUL, DO SOMETHING      AL
)@@G@@@ @@@@          SLJ       RER013    @G@@@@NOSPC1 . PAGE DOES NOT HAVE ANAM
)@@G@@Y MORE SPACE, GET NEXT PAGE IN RANGE      @F@@@@          L,U       X10,AN
)@@G@@BUFPKT . $P ADDR OF BUFFER PACKET TO X10  @E@@@@          L         A0,CAO
)@@G@@URARE . $P CURRENT AREA TO A0       @F@@@@          S,T1      A0,1,X10  AP
)@@G@@. $P CURRENT AREA TO T1 OF 2ND WRD  @E@@@@          L         A1,CURPGE AQ
)@@G@@. $P CURRENT PAGE TO A1       @F@@@@          S,H2      A1,1,X10  . $P CAR
)@@G@@URRENT PAGE TO H2 OF 2ND WRD  @E@@@@          L,U       A2,7      . $P FAS
)@@G@@UNCTION CODE 7 TO A2    @E@@@@          S,H2      A2,0,X10  . $  FUNCTIOAT
)@@G@@N CODE TO PACKET  @B@@@@          LA        A2,Z2AREA         .   @B@@@@AU
)@@G@@          SA,H2     A2,2,X10          .   @E@@@@          LMJ       X11,AV
)@@G@@BUFROU . $W CALL BUFFER ROUTINE     @ @@@@          TZ,H1     BUFPKT    AW
)@@G@@@C@@@@          J         SPCERR            .$J SPCERR@F@@@@          SLAX
)@@G@@J       DATYPE            . MAKE SURE PAGE IS DATA    @C@@@@          J AY
)@@G@@        ARECUR    . $J ARECUR       @[@@@@ .    @B@@@@SPCERR    E$DIT   AZ
)@@G@@  EDPKT             .   @B@@@@          E$COPY    36,MSGSPCE        .   BA
)@@G@@@B@@@@          E$DECV    CURREC            .   @B@@@@          E$CHAR  BB
)@@G@@  '('               .   @B@@@@          E$OCTV    CURREC            .   BC
)@@G@@@^@@@@          E$CHAR    ')' @B@@@@          P$RINT    (PF1 1,14,PRINT)BD
)@@G@@  .   @ @@@@          SLJ       RER014    @[@@@@ .    @[@@@@ .    @E@@@@BE
)@@G@@ . SUBROUTINE TO MAKE SURE THAT PAGE OBTAINED IS A DATA PAGE@B@@@@ . THEBF
)@@G@@ ADDRESS OF THE PAGE IS IN CURADD.  @#@@@@ . USES A0 ONLY   @[@@@@ .    BG
)@@G@@@[@@@@ .    @^@@@@DATYPE    +         0   @B@@@@          LA        A0,CBH
)@@G@@URADD         .   @B@@@@          LA,S3     A0,1,A0           .   @B@@@@BI
)@@G@@          TE,U      A0,0              .   @B@@@@          SLJ       RER0BJ
)@@G@@69            .   @B@@@@          J         *DATYPE           .   @[@@@@BK
)@@G@@ .    @[@@@@ .    @[@@@@ .    @]@@@@CONTRL    . @F@@@@          LA      BL
)@@G@@  A2,RECADD         . ADDRESS OF RECORD BUFFER  @B@@@@          L,T1    BM
)@@G@@  A0,1,A2           .   @E@@@@          TE,U      A0,01             . $TBN
)@@G@@ SPECIAL CODE = 01@D@@@@          J         CONTR1             . $J MLOOBO
)@@G@@P1    @B@@@@          L         A1,2,A2           .   @F@@@@          S BP
)@@G@@        A1,DESARE         . $P AREA CODE TO DES AREA  @D@@@@          J BQ
)@@G@@        MLOOP1            . $J MLOOP1     @]@@@@CONTR1 .    @G@@@@      BR
)@@G@@    TE,U      A0,03             . $T SPECIAL CODE 3 (OWNER REC)   @E@@@@BS
)@@G@@          J         CONTR2            . $A NO,CONTR2 YES    @E@@@@      BT
)@@G@@    L         A1,2,A2           . $P OLD DBP TO A1    @[@@@@ .    @D@@@@BU
)@@G@@ . CALL KEY FILE ACCESS METHOD FOR NEW DBP IF ANY     @[@@@@ .    @E@@@@BV
)@@G@@          S         A1,KFAPKT+3       . OLD DBP TO PACKET   @F@@@@      BW
)@@G@@    L,U       X10,KFAPKT        . $W KF$AMR RANDOM READ     @A@@@@      BX
)@@G@@    LMJ       X11,KF$AMR      @E@@@@          TZ        KFAPKT+5        BY
)@@G@@  . $T SUCCESSFUL       @E@@@@          J         DBPNFD            . $ABZ
)@@G@@ NO,DBPNFD YES    @[@@@@ .    @ @@@@ . FOUND NEW DBP IN KEY FILE  @[@@@@CA
)@@G@@ .    @E@@@@          TNZ,H1    KFAPKT+4          . $T OWNER IS RELOADEDCB
)@@G@@@E@@@@          J         DBPNFD            . $A NO,DBPNFD YES    @E@@@@CC
)@@G@@          L         A0,KFAPKT+4       . NEW DBP TO A0       @F@@@@OWNAFDCD
)@@G@@    SLJ       DBP$APS           . $W DBP$APS DECOMPOSE DBP  @E@@@@      CE
)@@G@@    L         A8,A1             . AREA CODE TO A8     @E@@@@          L CF
)@@G@@        A7,A2             . PAGE NUMP$BER TO A7 @F@@@@          SLJ     CG
)@@G@@  CHKPGE            . $W CHKPGE SEE WHAT TYPE   @E@@@@          TNE,U   CH
)@@G@@  A2,1              . $T IS IT DATA PGE   @E@@@@          J         STNGCI
)@@G@@T3            . $A YES,STNGT3 NO    @E@@@@          SZ        OWNPGE    CJ
)@@G@@        . $P ZERO OUT OWNPGE  @F@@@@          S         A8,OWNARE       CK
)@@G@@  . $P AREA CODE TO OWNARE    @D@@@@          J         STNGT4          CL
)@@G@@  . $J STNGT4     @]@@@@STNGT3     .@F@@@@          S         A8,OWNARE CM
)@@G@@        . $P AREA CODE TO OWNARE    @F@@@@          S         A7,OWNPGE CN
)@@G@@        . $P PAGE NUMBER TO OWNPGE  @]@@@@STNGT4      @B@@@@          L,CO
)@@G@@U       A0,1              .   @E@@@@          S         A0,OWNRSW       CP
)@@G@@  . $P SET OWNER SWITCH @D@@@@          J         MLOOP1            . $JCQ
)@@G@@ MLOOP1     @]@@@@DBPNFD .    @F@@@@          LA        A0,RECADD       CR
)@@G@@  . ADDRESS OF RECORD BUFFER  @E@@@@          L         A0,2,A0         CS
)@@G@@  . $P OLD DBP TO A0    @D@@@@          J         OWNAFD            . $JCT
)@@G@@ OWNAFD     @]@@@@CONTR2 .    @G@@@@          TE,U      A0,4            CU
)@@G@@  . $T SPECIAL CODE 4 (DIRECT)      @C@@@@          J         CONTR3    CV
)@@G@@         $J CONTR3@B@@@@          LA,U      A2,1               .  @H@@@@CW
)@@G@@          SA        A2,DIRSW2         . $P SET DIRSW2 TO INDICATE DIR CNCX
)@@G@@TL    @F@@@@          LA        A0,RECADD         . RECORD BUFFER ADDRESCY
)@@G@@S     @G@@@@          LA        A1,2,A0           . $P DIRECT CNTL REC ICZ
)@@G@@NFORMATION  @D@@@@          SA        A1,DIRCNTL        . $P SAVE INFO  DA
)@@G@@@D@@@@          J         MLOOP1            . $J MLOOP1     @]@@@@CONTR3DB
)@@G@@    . @E@@@@          TE,U      A0,2              . $T SPECIAL CODE 2   DC
)@@G@@@E@@@@          J         MLOOP1            . $A NO,MLOOP1 YES    @A@@@@DD
)@@G@@ . END OF SET CONTROL RECORD FOUND  @B@@@@          J         MLOOP1    DE
)@@G@@        .   @E@@@@                                      . $P PAGE # TO ODF
)@@G@@WNPGE @[@@@@ .    @[@@@@/     @[@@@@ .    @[@@@@ .    @[@@@@ .    @ @@@@DG
)@@G@@ . RECORD IS A CALC RECORD    @[@@@@ .    @]@@@@RELCAL      @A@@@@ . SAVDH
)@@G@@E ANY REGISTERS IF NEEDED     @F@@@@          L,H2      A2,4,X5   . $P ADI
)@@G@@DDR OF CALC PROCEDURE TO A2   @H@@@@          S,H2      A2,CALCAL    . $DJ
)@@G@@P STORE PROPER ADDRESS IN INSTRUCTION     @G@@@@          L         X2,(DK
)@@G@@1,CALPR1) .   ADDRESS OF 1ST CALC PAR TO X2     @E@@@@          L,S3    DL
)@@G@@  A0,0,X5   . $P CALC ITEM COUNT TO A0    @E@@@@          TNZ       A0  DM
)@@G@@      . $T ANY CALC ITEM ENTRIES    @B@@@@          SLJ       RER015    DN
)@@G@@. $E ERROR  @E@@@@          AN,U      A0,1      . $P A0 TO CONTROL LOOP DO
)@@G@@      @E@@@@          L         X6,X5     . $P ADDR OF Z2 ENTRY TO X6   DP
)@@G@@@G@@@@          A,U       X6,9      . $P X6 POINTS TO 1ST CALC ITEM ENTRDQ
)@@G@@Y     @ @@@@          LXI,U       X6,1    @E@@@@CALLP1    L         A1,0DR
)@@G@@,*X6          . $P CALC ITEM TO A1  @G@@@@          S         A1,0,*X2  DS
)@@G@@        . $P CALC ITEM TO PARAMETER LIST  @F@@@@          JGD       A0,CDT
)@@G@@ALLP1 . $T ARE WE DONE WITH CALC ENTRIES  @C@@@@                        DU
)@@G@@      . $A NO,CALLP1 YES@E@@@@          L         A0,CALRIN . $P RETURN DV
)@@G@@INSTRUCTION TO A0 @G@@@@          S         A0,0,X2   . $P STORE RETURN DW
)@@G@@IN PARAMETER LIST       @[@@@@ .    @D@@@@ . GET AREA NAME FROM C3 TO BEDX
)@@G@@ USED IN CALC ROUTINE   @[@@@@ .    @B@@@@          TNZ       DESARE    DY
)@@G@@        .   @B@@@@          SLJ       RER016            .   @D@@@@      DZ
)@@G@@    L         A1,DESARE . $ AREA CODE TO A1     @E@@@@          L,U     EA
)@@G@@  X10,C3    . $P ADDRESS OF C3 TO X10     @E@@@@          LMJ       X11,EB
)@@G@@TABSE1 . $W GET AREA ENTRY FROM C3  @^@@@@          TZ       A2   @ @@@@EC
)@@G@@          SLJ       RER017    @B@@@@          A,U       A0,1            ED
)@@G@@  .   @E@@@@          DL        A2,0,A0    . $P AREA NAME TO A2,A3      EE
)@@G@@@G@@@@          DS        A2,CALPR2  . $P AREA NAME TO CALPR2 FOR CALC UEF
)@@G@@SAGE  @F@@@@          L,U       X10,CALPR2 . $P X10 POINTS TO PARAMETER EG
)@@G@@LIST  @G@@@@          L         A2,X5      . $P A2  POINTS TO Z2 ENTRY FEH
)@@G@@OR RECORD   @[@@@@ .    @E@@@@CALCAL    LMJ       X11,0      . $P CALL CEI
)@@G@@ALC ROUTINE       @^@@@@CALPR1    +         0   @^@@@@          +       EJ
)@@G@@  0   @^@@@@          +         0   @^@@@@          +         0   @^@@@@EK
)@@G@@          +         0   @^@@@@          +         0   @^@@@@          + EL
)@@G@@        0   @^@@@@          +         0   @^@@@@          +         0   EM
)@@G@@@^@@@@          +         0   @^@@@@          +         0   @ @@@@CALRINEN
)@@G@@    J         CALRET    @[@@@@ .    @G@@@@CALRET    .  CALC ROUTINE RETUEO
)@@G@@RNS HERE WITH  A15= PGE#,CCH#  AND AREA   @E@@@@          .  TO USE FOR EP
)@@G@@RELOADING IN 3RD WORD OF CALPR2     @G@@@@          S,H2      A15,CLCHNEEQ
)@@G@@ . $P SAVE CALC CHAIN NUMBER IN CLCHNE    @A@@@@          SSL       A15,ER
)@@G@@18     . $  @G@@@@          S,H2      A15,CLPGE  . $P SAVE CALC PAGE NUMES
)@@G@@BER IN CLPGE      @G@@@@          S,H2      A15,STNPGE        . $P UPDATET
)@@G@@E STORE NEAR PAGE       @B@@@@                                      .   EU
)@@G@@@B@@@@                                      .   @B@@@@                  EV
)@@G@@                    .   @B@@@@                                      .   EW
)@@G@@@E@@@@ . USE AREA NAME(POINTED TO BY X10) TO SEARCH C3 TABLE      @E@@@@EX
)@@G@@ . THIS IS NECESSARY SINCE THE CALC ROUTINE MIGHT CHANGE    @#@@@@ . AREEY
)@@G@@A NAME.     @B@@@@                                      .   @B@@@@      EZ
)@@G@@                                .   @B@@@@                              FA
)@@G@@        .   @G@@@@          TNZ,H1    C3                . MAKE SURE C3 IFB
)@@G@@S NOT EMPTY       @B@@@@          SLJ       RER001            .   @E@@@@FC
)@@G@@          LXM,H2    X5,C3             . $P C3  TABLE ADDRESS@F@@@@      FD
)@@G@@    LXI,U     X5,9              . $P TABLE INCREMENT TO X5  @H@@@@      FE
)@@G@@    ANX,U     X5,9              . $P POINT ONE ENTRY BEFORE BEGINNING   FF
)@@G@@@D@@@@          DL        A2,0,X10          . AREA NAME     @E@@@@      FG
)@@G@@    LA,H1     A0,C3             . $P # OF WORDS IN C3 @B@@@@          DSFH
)@@G@@L       A0,36             .   @G@@@@          DI,U      A0,9            FI
)@@G@@  . $P # OF AREA ENTRIES IN C3 TO A0@B@@@@          TZ        A1        FJ
)@@G@@        .   @E@@@@          SLJ       RER068            . NO REMAINDER AFK
)@@G@@LLOWED@H@@@@          LR        R1,A0             . # OF AREA ENTRIES TOFL
)@@G@@ CONTROL LOOP     @F@@@@CLANLP1   SE        A2,10,*X5         . $P SEARCFM
)@@G@@H FOR AREA NAME   @B@@@@          SLJ       RER018            .   @B@@@@FN
)@@G@@          TE        A3,2,X5           .   @B@@@@          J         CLANFO
)@@G@@LP1           .   @E@@@@          LA,T1     A1,0,X5           . $P AREA FP
)@@G@@CODE TO A1  @G@@@@          SX        X5,NEWC3A         . $P SAVE AREA CFQ
)@@G@@ODE IN NEWC3A     @E@@@@          S         A1,NEWARE  . $P SAVE NEW AREFR
)@@G@@A IN NEWARE @G@@@@          S         A1,STNARE         . $P AREA CODE TFS
)@@G@@O STORE NEAR AREA @[@@@@ .    @G@@@@          L         X5,Z2ENT  . $P AFT
)@@G@@DDRESS OF Z2 ENTRY FOR RECORD TO X5 @[@@@@ .    @C@@@@ . PREPARE TO SEARFU
)@@G@@CH Z2 TABLE FOR THIS RECORD   @[@@@@ .    @F@@@@          LA        A0,RFV
)@@G@@ECADD         . ADDRESS OF RECORD BUFFER  @E@@@@          L,T1      A1,1FW
)@@G@@,A0     . $P RECORD CODE TO A1      @F@@@@          L         X6,X5     FX
)@@G@@ . $P ADDRESS OF Z2 ENTRY TO X6     @E@@@@          A,T2      X6,1,X6   FY
)@@G@@. $P POINT TO AREA ENTRY      @A@@@@          L         X1,X6     .     FZ
)@@G@@@A@@@@          AN,U      X1,1      .     @F@@@@          L,H2      A0,0GA
)@@G@@,X1   . $P # OF AREA ENTRIES IN Z2 TO A0  @E@@@@          AN,U      A0,1GB
)@@G@@      . $P A0 WILL CONTROL LOOP     @D@@@@          L         A1,NEWARE GC
)@@G@@. $P AREA CODE TO A1    @D@@@@CLOOP1    TNE,T3    A1,0,X6   . $T AREA COGD
)@@G@@DES EQUAL   @C@@@@          J         CALAFD    . $A YES,CALAFD   @G@@@@GE
)@@G@@          A,S1      X6,0,X6   . $P POINT TO NEXT AREA ENTRY IN Z2       GF
)@@G@@@E@@@@          JGD       A0,CLOOP1 . $T ANY MORE AREA ENTRIES    @G@@@@GG
)@@G@@          SLJ       RER019    . $E EXIT AREA ENTRY SHOULD BE FOUND IN Z2GH
)@@G@@@D@@@@CALAFD .  FOUND AREA ENTRY IN Z2 FOR NEW CALC AREA    @A@@@@      GI
)@@G@@ .  X6 POINTS TO AREA ENTRY   @E@@@@          S         X6,Z2AREA . $P SGJ
)@@G@@AVE AREA ENTRY IN Z2AREA@[@@@@ .    @F@@@@ . CHECK IF PAGE # RETURNED BYGK
)@@G@@ CALC IS WITHIN PROPER PAGE RANGE   @[@@@@ .    @C@@@@          L       GL
)@@G@@  A3,CLPGE  . PAGE # TO A3    @B@@@@          JZ        A3,CLCMSG       GM
)@@G@@  .   @G@@@@          TLE,H2    A3,1,X6   . $T IS LOWER RANGE LESS OR EQGN
)@@G@@UAL TO PGE #@C@@@@          SLJ       RER020    . $E EXIT  ERROR  @D@@@@GO
)@@G@@          L,H2      A4,2,X6   . $P UPPER RANGE TO A4  @E@@@@          A,GP
)@@G@@U       A4,1      . $P INCREMENT UPPER RANGE BY1@G@@@@          TLE     GQ
)@@G@@  A3,A4     . $T IS UPPER RANGE+1 LESS OR EQUAL TO PGE@C@@@@          J GR
)@@G@@        $+2       . $J CLANCU       @C@@@@          SLJ       RER021    GS
)@@G@@. $E EXIT  ERROR  @C@@@@ . CHECK IF AREA,RECORD AND PAGE ARE CURRENT    GT
)@@G@@@[@@@@ .    @D@@@@          L         A1,NEWARE . $P NEW AREA TO A1     GU
)@@G@@@E@@@@          TE        A1,CURARE . $T IS NEW AREA CURRENT      @C@@@@GV
)@@G@@          J         CLANCU    . $A NO,CLANCU YES@A@@@@CLACUR . YES NEW AGW
)@@G@@REA IS CURRENT    @G@@@@          L         A1,CURARE . MAKE SURE THAT AGX
)@@G@@1 HAS CURRENT AREA      @E@@@@          S         A1,NEWARE . $P SAVE CUGY
)@@G@@RRENT AREA CODE   @F@@@@          LA        A2,RECADD         . ADDRESS GZ
)@@G@@OF RECORD BUFFER  @E@@@@          L,T1      A2,1,A2     . $P RECORD CODEHA
)@@G@@ TO A2      @E@@@@          TE        A2,CURREC   . $T IS RECORD CURRENTHB
)@@G@@      @D@@@@          J         CLRNCU      . $A NO,CLRNCU YES    @A@@@@HC
)@@G@@CLRCUR . YES RECORD IS CURRENT      @E@@@@          L         A3,CLPGE  HD
)@@G@@  . $P NEW PAGE # TO A3       @G@@@@          TE        A3,CURPGE   . $THE
)@@G@@ IS NEW PAGE # SAME AS CURRENT      @D@@@@          J         CLANCU    HF
)@@G@@  . $A NO,CLPNCU YES    @ @@@@          J         CLPCUR    @E@@@@CLANCUHG
)@@G@@ . AREA NOT CURRENT, CALC PRIMARY PAGE NOT CURRENT    @[@@@@ .    @E@@@@HH
)@@G@@ . PREPARE TO BUILD PACKET FOR BUFROU TO GET PRIMARY PAGE   @[@@@@ .    HI
)@@G@@@G@@@@          L,U       X10,BUFPKT . $P X10 POINTS TO BUFFER ROUTINE PHJ
)@@G@@ACKET @D@@@@          L         A1,NEWARE  . $P AREA CODE TO A1   @F@@@@HK
)@@G@@          S,T1      A1,1,X10   . $P AREA CODE TO T1 OF BUFPKT+1   @E@@@@HL
)@@G@@          S,H2      A3,1,X10   . $P PAGE # TO H2 OF BUFPKT  @G@@@@      HM
)@@G@@    L,U       A0,1       . $P BUFFER ROUTINE FUNCTION CODE =1     @E@@@@HN
)@@G@@          S,H2      A0,0,X10   . $P FUNCTION CODE TO PACKET @G@@@@      HO
)@@G@@    S,H2      X6,2,X10   . $P AREA ENTRY ADDRESS OF Z2 TO PACKET  @H@@@@HP
)@@G@@          LMJ       X11,BUFROU . $W BUFROU CALL BUFFER ROUTINE TO GET PGHQ
)@@G@@E     @C@@@@          TZ,H1     BUFPKT     . $T SUCCESSFUL  @C@@@@      HR
)@@G@@    SLJ       RER022     . $E EXIT ERROR  @G@@@@          SLJ       DATYHS
)@@G@@PE            . MAKE SURE PAGE IS A DATA PAGE   @D@@@@          J       HT
)@@G@@  CLACUR            . $J CLACUR     @[@@@@ .    @[@@@@ .    @[@@@@ .    HU
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    HV
)@@G@@@[@@@@ .    @E@@@@ . PRIMARY PAGE OBTAINED FROM DATA BASE FOR CALC RECORHW
)@@G@@D     @[@@@@ .    @[@@@@ .    @E@@@@CLPCUR . NEW PAGE IS CURRENT, CHECK HX
)@@G@@IF WE CAN STORE IN   IT @[@@@@ .    @A@@@@ . FORM POINTER TO CALC CHAIN HY
)@@G@@HEADER@D@@@@          L         A1,NEWARE . $P AREA CODE TO A1    @D@@@@HZ
)@@G@@          L         A2,CLPGE  . $P CALC PAGE TO A2    @G@@@@          L IA
)@@G@@        A3,CLCHNE . $P CALC CHAIN # TO A3, IF 0 THEN 1ST CHN@D@@@@      IB
)@@G@@    SLJ       APS$DBP   . $W APS$DBP FORM NEW   @C@@@@          TNZ     IC
)@@G@@  A0        . $T SUCCESSFUL   @B@@@@          SLJ       RER023    . $E EID
)@@G@@XIT   @G@@@@          S         A0,CLCHDR . $P SAVE NEW HEADER POINTER IIE
)@@G@@N CLCHDR    @[@@@@ .    @A@@@@ . POINT TO CALC CHAIN HEADER       @E@@@@IF
)@@G@@          L         X9,CURADD   . $P ADDRESS OF PAGE TO X9  @F@@@@      IG
)@@G@@    TZ        CLCHNE      . $T WAS CALC CHAIN  RETURNED 0   @D@@@@      IH
)@@G@@    J         CLCHNZ      . $A NO,CLCHNZ YES    @G@@@@          A,U     II
)@@G@@  X9,7        . $P X9 CONTAINS POINTER TO CALC HEADER @G@@@@          S IJ
)@@G@@        X9,CLCHAD   . $P SAVE ADDRESS OF CALC CHAIN HEADER  @C@@@@      IK
)@@G@@    J         CLCON2    . $J CLCON2       @F@@@@CLCHNZ . CALC CHAIN NUMBIL
)@@G@@ER RETURNED BY CALC ROUTINE IS NOT ZERO   @D@@@@          L,H1      X8,2IM
)@@G@@,X9   . $P PAGE LENGTH TO X8  @ @@@@          A         X8,X9     @G@@@@IN
)@@G@@          AN        X8,CLCHNE . $P X8 POINTS TO CALC CHAIN HEADER       IO
)@@G@@@G@@@@          S         X8,CLCHAD . $P SAVE POINTER TO CALC CHAIN HEADIP
)@@G@@ER    @[@@@@ .    @[@@@@ .    @[@@@@ .    @^@@@@ . SEE IF PAGE HAS SPACEIQ
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@ .    @A@@@@CLCON2    L         X9,CLCHAD IR
)@@G@@      @A@@@@          AN        X9,CURADD       @F@@@@          S       IS
)@@G@@  X9,CHDREL   . $+ SAVE REL PTR TO CALC HDR     @[@@@@ .    @E@@@@      IT
)@@G@@    L         X9,CURADD . $P ADDRESS OF PAGE TO X9    @D@@@@          L,IU
)@@G@@H1      X8,2,X9   . $P PAGE LENGTH TO X8  @ @@@@          A         X8,XIV
)@@G@@9     @^@@@@          AN,U      X8,1@G@@@@          AN,H1     X8,6,X9   IW
)@@G@@. $P X8 POINTS PAST THE CALC HEADERS      @G@@@@          S         X8,FIX
)@@G@@SLTVA . $P SAVE POINTER TO FIRST SLOT IN PAGE   @F@@@@          LA      IY
)@@G@@  A2,RECADD         . ADDRESS OF RECORD BUFFER  @E@@@@          L,T3    IZ
)@@G@@  A3,1,A2     . $P RECORD LENGTH TO A3    @ @@@@          L         A2,ZJA
)@@G@@2ENT  @^@@@@          TZ,T1     1,A2@ @@@@          J         CLUSLD    JB
)@@G@@@F@@@@          LX        X11,Z2AREA        . $P ADDR OF Z2AREA TO X11  JC
)@@G@@@E@@@@          L,T2      A4,0,X11   . $P LOAD FACTOR TO A4       @E@@@@JD
)@@G@@CLSPAC    LMJ       X11,RSPACE . $W ANY SPACE AVAILABLE     @F@@@@      JE
)@@G@@    S         A2,SPACSW  . SAVE ERROR RETURN FOR DEBUGGING  @F@@@@      JF
)@@G@@    TZ        A2         . $T FOUND SPACE ON PRIMARY PAGE   @D@@@@      JG
)@@G@@    J         CLNSPC     . $A NO,CLNSPC  YES    @[@@@@ .    @G@@@@ . SPAJH
)@@G@@CE WAS FOUND ON PRIMARY PAGE, GO AHEAD AND STORE THE RECORD       @D@@@@JI
)@@G@@ . X9 POINTS TO PAGE, FSLTVA POINTS TO FIRST SLOT     @[@@@@ .    @]@@@@JJ
)@@G@@CLFSPC .    @G@@@@          LMJ       X11,RNUSLT . $W ASSIGN SLOT AND REJK
)@@G@@CORD NUMBER       @D@@@@ . UPON RETURN A2=0 IMPLIES A SLOT IS BEING REUSJL
)@@G@@ED    @C@@@@ .             A3 HAS NEW RECORD NUMBER ASSIGNED@A@@@@ .    JM
)@@G@@         A1 HAS SLOT NUMBER   @A@@@@          S         A1,NEWSLT       JN
)@@G@@@F@@@@          LA        A0,RECADD         . ADDRESS OF RECORD BUFFER  JO
)@@G@@@F@@@@          LX        X1,A0             . $P ADDR OF RECORD BUFFER  JP
)@@G@@@F@@@@          AX,U      X1,1              . $P RECORD ADDRESS TO X1   JQ
)@@G@@@E@@@@          L,T3      A1,1,A0     . $P RECORD LENGTH TO A1    @E@@@@JR
)@@G@@          LMJ       X11,RSTORE  . $P STORE RECORD ON PAGE   @B@@@@      JS
)@@G@@    L         A1,CURPGE         .   @B@@@@          S         A1,NEWPGE JT
)@@G@@        .   @B@@@@          S         A1,PPGNUM         .   @A@@@@ . FORJU
)@@G@@M NEW DBP FOR RECORD STORED   @A@@@@          DL        A1,NEWARE       JV
)@@G@@@A@@@@          L         A3,NEWSLT       @F@@@@          SLJ       APS$JW
)@@G@@DBP     . $W FORM NEW DATA BASE POINTER   @^@@@@          TNZ       A0  JX
)@@G@@@ @@@@          SLJ       RER024    @F@@@@          S         A0,NEWDBP JY
)@@G@@. $P SAVE NEW DATA BASE POINTER     @D@@@@ . CALL KEY FILE ACCESS METHODJZ
)@@G@@ TO INSERT NEW POINTER  @[@@@@ .    @G@@@@          S         A0,KFAPKT+KA
)@@G@@4 . $P NEW DBP TO PACKET OF KEY ACCESS    @F@@@@          LA        A0,RKB
)@@G@@ECADD         . ADDRESS OF RECORD BUFFER  @D@@@@          L         A0,0KC
)@@G@@,A0     . $P OLD DBP TO A0    @G@@@@          S         A0,KFAPKT+3 . $PKD
)@@G@@ OLD DBP TO PACKET OF KEY ACCESS    @A@@@@          L,U       X10,KFAPKTKE
)@@G@@      @F@@@@          LMJ       X11,KF$AMW  . $W CALL KF$AMW WRITE FUNCTKF
)@@G@@ION   @ @@@@          TZ        KFAPKT+5  @E@@@@          SLJ       RER0KG
)@@G@@25      . $ SUCCESSFUL RETURN       @[@@@@ .    @B@@@@ . PROCEED TO LINKKH
)@@G@@ RECORD IN CALC CHAIN   @F@@@@          L,H2      A0,NEWSLT . $P NEW DATKI
)@@G@@A BASE SLOT    TO A0    @E@@@@          L         X8,CURADD . ADDRESS OFKJ
)@@G@@ DATA PAGE TO X8  @G@@@@          A,H1      X8,2,X8   . $P X8 POINTS PASKK
)@@G@@T THE LAST SLOT ON PAGE @G@@@@          AN        X8,A0     . $P X8 POINKL
)@@G@@TS TO THE SLOT WHERE LAST     @D@@@@                              . $  RKM
)@@G@@ECORD WAS LOADED  @E@@@@          L         X7,CURADD . $P PAGE ADDRESS KN
)@@G@@TO X7       @H@@@@          A,H2      X7,0,X8   . $P X7 POINTS TO RECORDKO
)@@G@@ HEADER JUST LOADED     @ @@@@          L         A1,X7     @ @@@@      KP
)@@G@@    TG        A1,X8     @F@@@@          SLJ       RER026    . X7 CANNOT KQ
)@@G@@POINT PAST THE SLOT     @D@@@@          L,T1      A1,0,X7   . RECORD CODKR
)@@G@@E TO A1     @G@@@@          SLJ       CLPFND . $W FIND RELATIVE LOCATIONKS
)@@G@@ OF CALC POINTER  @C@@@@          TZ        A2        . $T SUCCESSFUL   KT
)@@G@@@C@@@@          SLJ       RER027    . $A NO,EXIT YES  @H@@@@          S KU
)@@G@@        X1,RELATV         . SAVE REL LOC OF CALC PTR WITHIN REC   @G@@@@KV
)@@G@@          A         X7,X1     . $P X7 POINTS TO CALC PTR IN LDED REC    KW
)@@G@@@D@@@@CLCON1 . CHECK IF CALC CHAIN HEADER POINTER EXISTS    @[@@@@ .    KX
)@@G@@@F@@@@          LX        X11,CLCHAD        . $P ADDR OF CLCHAD TO X11  KY
)@@G@@@E@@@@          TNZ       0,X11     . $T IS CALC CHAIN HEADER ZERO@C@@@@KZ
)@@G@@          J         CLSTZ1    . $A YES,CLSTZ1 NO@F@@@@ . LINK NEW RECORDLA
)@@G@@ FIRST IN CALC CHAIN, NONZERO CALC HEADER CASE  @E@@@@ . X7 HAS ABSOLUTELB
)@@G@@ LOCATION OF CALC POINTER WITHIN RECORD   @[@@@@ .    @F@@@@          LXLC
)@@G@@        X11,CLCHAD        . $P ADDR OF CLCHAD TO X11  @G@@@@          L LD
)@@G@@        A4,0,X11   . $P POINTER OF CALC CHAIN HEADER TO A4  @G@@@@      LE
)@@G@@    S         A4,0,X7   . $P NEXT POINTER TO NEW RECORD (PRIMARY) @F@@@@LF
)@@G@@          L         A5,NEWDBP  . $P NESLY CREATED POINTER TO A5   @F@@@@LG
)@@G@@          LX        X11,CLCHAD        . $P ADDR OF CLCHAD TO X11  @G@@@@LH
)@@G@@          S         A5,0,X11   . $P NEWLY CREATED POINTER TO CALC HEADERLI
)@@G@@@G@@@@          J         CLDONE    . $J CLDONE, STORED ONE CALC RECORD LJ
)@@G@@      @G@@@@CLSTZ1 . CALC CHAIN HEADER ZERO, CREATE NEW CALC CHAIN ON THLK
)@@G@@IS PAGE     @F@@@@       . X7 HAS ABSOLUTE LOCATION OF CALC POINTER WITHLL
)@@G@@IN RECORD   @]@@@@       .    @F@@@@          L         A4,CLCHDR  . $P LM
)@@G@@POINTER TO CALC HEADER TO A4  @F@@@@          S         A4,0,X7   . $P HLN
)@@G@@EADER POINTER TO NEW RECORD   @F@@@@          L         A5,NEWDBP . $P NLO
)@@G@@EWLY CREATED POINTER TO A5    @F@@@@          LX        X11,CLCHAD      LP
)@@G@@  . $P ADDR OF CLCHAD TO X11  @G@@@@          S         A5,0,X11   . $P LQ
)@@G@@NEWLY CREATED POINTER TO CALC HEADER@G@@@@          J         CLDONE    LR
)@@G@@ . $J STORED ONE CALC RECORD (PRIMARY)    @[@@@@ .    @C@@@@ . SAVE PRIMLS
)@@G@@ARY PAGE INFORMATION FOR LATER CHECK@E@@@@CLNSPC . NO SPACE ON PRIMARY PLT
)@@G@@AGE FOR STORING CALC RECORD   @F@@@@          L         A5,CURADD  . $P LU
)@@G@@CURRENT PAGE ADDRESS TO A5    @D@@@@          S         A5,PPGADD  . $P LV
)@@G@@SAVE IN PPGADD    @E@@@@          L         A6,CURPGE  . $P CURRENT PAGELW
)@@G@@ # TO A6    @D@@@@          S         A6,PPGNUM  . $P SAVE IN PPGNUM    LX
)@@G@@@D@@@@ . GET CALC CHAIN HEADER POINTER AND CHECK  IF ZERO   @F@@@@      LY
)@@G@@    LX        X11,CLCHAD        . $P ADDR OF CLCHAD TO X11  @E@@@@      LZ
)@@G@@    L         A7,0,X11   . $P CALC CHAIN HEADER TO A7 @F@@@@          S MA
)@@G@@        A7,CLSAVP  . $P SAVE CALC POINTER IN CLSAVP   @F@@@@          TNMB
)@@G@@Z       A7         . $T IS CALC CHAIN HEADER EQUAL 0  @D@@@@          J MC
)@@G@@        CLZER1     . $A YES,CLZER1 NO     @A@@@@          S         A7,CMD
)@@G@@LNXTP  .    @B@@@@          LA,U      A0,1              .   @E@@@@      ME
)@@G@@    SA        A0,CHOVSW         . $P SET CHOVSW       @G@@@@          L MF
)@@G@@        A0,A7      . CHECK IF CALC POINTER POINTS ELSEWHERE @G@@@@CCHNE1MG
)@@G@@    SLJ       DBP$APS    . $W DBP $APS ROUTINE TO DECOMPOSE CL HDR@G@@@@MH
)@@G@@          DS        A1,CLCARE  . $P SAVE VALUES RETURNED FROM DBP$APS   MI
)@@G@@@D@@@@          DS        A3,CLCSLT  . A2 HAS PAGE NUMBER   @G@@@@      MJ
)@@G@@    TE        A2,CURPGE  . $T DOES HDR   POINT TO ANOTHER PAGE    @D@@@@MK
)@@G@@          J         CLAPG1     . $A YES,CLAPG1 NO     @E@@@@          L ML
)@@G@@        A7,CLNXTP  . $P CALC HEADER TO A7       @G@@@@          TNE     MM
)@@G@@  A7,CLCHDR  . $T DOES POINTER POINT TO CALC HEADER   @D@@@@          J MN
)@@G@@        CLPTHR     . $A YES,CLPTHR NO     @G@@@@ . POINTER POINTS TO SAMMO
)@@G@@E PAGE, GET NEXT POINTER FROM RECORD POINTED TO @ @@@@ . WATCH FOR FOREIMP
)@@G@@GN RECORDS  @E@@@@ . A2 HAS PAGE #, A3 SLOT NUMBER, CURADD HAS PAGE ADDRMQ
)@@G@@ESS   @E@@@@          SLJ       FNXTCL    . FIND NEXT CALC POINTER      MR
)@@G@@@F@@@@          SZ        CHOVSW            . $P RESET SWITCH CHOVSW    MS
)@@G@@@G@@@@          J         CCHNE1    . $J CCHNE1 GO FIND IF IT POINTS ELSMT
)@@G@@EWHERE@A@@@@CLRNCU . CALC RECORD IS NOT CURRENT @G@@@@          S       MU
)@@G@@  A2,CURREC . $P STORE RECORD CODE IN CURRENT RECORD  @ @@@@          J MV
)@@G@@        CLRCUR    @F@@@@CLUSLD . USER HAS SPECIFIED HIS OWN LOAD FACTOR MW
)@@G@@FOR THIS RECORD   @F@@@@          L,T1      A4,1,A2   . $P LOAD FACTOR SMX
)@@G@@PECIFIED TO A4    @C@@@@          J         CLSPAC    . $J CLSPAC       MY
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    MZ
)@@G@@@G@@@@CLPTHR . CALC POINTER POINTS TO HEADER, MEANS END OF CHAIN BEFORE NA
)@@G@@      @F@@@@       . REACHING OVERFLOW, PREPARE TO GET OVERFLOW PAGE (NENB
)@@G@@XT)   @^@@@@          L,U       A0,1@A@@@@          S         A0,CENDSW NC
)@@G@@      @[@@@@ .    @[@@@@ .    @[@@@@ .    @E@@@@ . NEXT CODE MIGHT EXECUND
)@@G@@TE IN CASE CALC HEADER IS ZERO      @C@@@@ . GET FIRST OVERFLOW PAGE NEXNE
)@@G@@T TO PRIMARY PAGE @[@@@@ .    @[@@@@ .    @[@@@@ .    @F@@@@CLPTH1    L,NF
)@@G@@U       X10,BUFPKT . $P X10 POINTS TO BUFFER PACKET   @A@@@@          L NG
)@@G@@        A9,CURARE       @E@@@@          S,T1      A9,1,X10   . $P AREA CNH
)@@G@@ODE TO PACKET     @E@@@@          L,U       A10,3      . $P FUNCTION CODNI
)@@G@@E 3 TO A10  @F@@@@          S,H2      A10,0,X10  . $P FUNCTION CODE 3 TONJ
)@@G@@ PACKET     @E@@@@          L         A11,CURPGE . $P CURRENT PAGE TO A1NK
)@@G@@1     @F@@@@          S,H2      A11,1,X10  . $P DATA PAGE NUMBER  TO PACNL
)@@G@@KET   @A@@@@          L         X6,Z2AREA  .    @G@@@@          S,H2    NM
)@@G@@  X6,2,X10   . $P AREA ENTRY ADDRESS OF Z2 TO BUFPKT  @[@@@@ .    @[@@@@NN
)@@G@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@NO
)@@G@@ .    @[@@@@ .    @G@@@@          LMJ       X11,BUFROU . $W BUFROU CALL NP
)@@G@@BUFFER ROUTINE TO GET;  @G@@@@                               . $  FIRST NQ
)@@G@@OVERFLOW PAGE AFTER DATA PAGE @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@NR
)@@G@@ .    @[@@@@ .    @[@@@@ .    @C@@@@          TZ,H1     BUFPKT     . $T NS
)@@G@@SUCCESSFUL  @[@@@@ .    @[@@@@ .    @[@@@@ .    @D@@@@          J       NT
)@@G@@  CBNSUC     . $A NO,CBNSUC YES     @A@@@@          L         A11,CURPGENU
)@@G@@      @[@@@@ .    @G@@@@ . OBTAINED NEXT OVERFLOW PAGE, POINTERS TO LASTNV
)@@G@@ RECORD IN CALC CHAIN   @G@@@@ . ARE SAVED IN LSRADD, LSRREL, LSRSLT . TNW
)@@G@@HEY REFER TO PRIMARY PAGE.    @G@@@@ . IN CASE LAST RECORD WAS A FOREIGNNX
)@@G@@ RECORD, FOREIGN PAGE NUMBER IS IN  @D@@@@ . FORPGE AND LSRSLT HAS SLOT NY
)@@G@@NUMBER ON THAT PAGE     @[@@@@ .    @E@@@@ . PROCEED TO CHECK IF SPACE INZ
)@@G@@S AVAILABLE IN OVERFLOW PAGE  @E@@@@CLCGT3    L         X9,CURADD  . $P OA
)@@G@@ADDRESS OF PAGE TO X9   @D@@@@          L,S3      A0,1,X9    . $P PAGE TOB
)@@G@@YPE TO A0   @E@@@@          TNE,U      A0,01     . PAGE SHOULD BE OVERFLOC
)@@G@@OW    @D@@@@          J         CLCGT4             . $J CLCGT4    @B@@@@OD
)@@G@@          LA,U      A0,DMSLEV5        .   @E@@@@          JNZ       A0,$OE
)@@G@@+2            . SHOULD BE LEVEL5    @A@@@@          SLJ       RER028    OF
)@@G@@ .    @B@@@@          TNZ,H2    BUFPKT+3          .   @G@@@@          SLOG
)@@G@@J       RER028            . TYPE CHANGE SWITCH MUST BE SET  @^@@@@CLCGT4OH
)@@G@@              .   @E@@@@          L,H1      X8,2,X9    . $P PAGE LENGTH OI
)@@G@@TO X8       @ @@@@          A         X8,X9     @^@@@@          AN,U    OJ
)@@G@@  X8,1@G@@@@          AN,H1     X8,6,X9    . $P X8 POINTS PAST CALC HEADOK
)@@G@@ERS IF ANY  @G@@@@          S         X8,FSLTVA  . $P SAVE POINTER TO FIOL
)@@G@@RST SLOT ON PAGE  @F@@@@          LA        A0,RECADD         . ADDRESS OM
)@@G@@OF RECORD BUFFER  @E@@@@          L,T3      A3,1,A0     . $P RECORD LENGON
)@@G@@TH TO A3    @G@@@@          L,U       A4,100     . $P PERCENT FILL 100 FOO
)@@G@@OR OVERFLOW PGE   @F@@@@          LMJ       X11,RSPACE . $W RSPACE ANY SOP
)@@G@@PACE AVAILABLE    @F@@@@          S         A2,SPACSW  . SAVE ERROR RETUOQ
)@@G@@RN FOR DEBUGGING  @F@@@@          TZ        A2         . $T FOUND SPACE OR
)@@G@@ON OVERFLOW PAGE  @E@@@@          J         NSOVFP     . $A NO,NSOVFP YEOS
)@@G@@S,YSOVFP    @ @@@@          J         YSOVFP    @[@@@@ .    @[@@@@ .    OT
)@@G@@@[@@@@ .    @C@@@@CLAPG1 . CALC POINTER POINTS TO ANOTHER PAGE    @E@@@@OU
)@@G@@       . INFORMATION OBTAINED FROM CALC POINTER IS SAVED IN @B@@@@      OV
)@@G@@ . CLCARE, CLCPGE, CLCSLT, CLCC3A   @F@@@@       . GET   PAGE DIRECTLY BOW
)@@G@@Y CALLING BUFROU WITH FUNCTION 5    @]@@@@CLCLP2 .    @F@@@@          L OX
)@@G@@        A0,CLCPGE  . $P PAGE NUMBER POINTED TO TO A0  @^@@@@            OY
)@@G@@        .   @^@@@@                    .   @G@@@@          L,U       X10,OZ
)@@G@@BUFPKT . $P X10 POINTS TO PACKET OF BUFROU      @A@@@@          L,H2    PA
)@@G@@  A1,CLCARE       @E@@@@                    . MAKE A CHECK FOR CALC CHAIPB
)@@G@@N GOING     @B@@@@                    . TO THE SAME AREA.   @E@@@@      PC
)@@G@@    TE        A1,NEWARE         . $T CLCARE = NEWARE  @G@@@@            PD
)@@G@@                          . CANNOT ACCEPT CALC CHAIN TO     @E@@@@      PE
)@@G@@                                . ANOTHER AREA.       @E@@@@          SLPF
)@@G@@J       RER063            . $A NO,RER063 YES    @F@@@@          S,T1    PG
)@@G@@  A1,1,X10   . $P AREA CODE TO T1 OF BUFPKT+1   @E@@@@          S,H2    PH
)@@G@@  A0,1,X10   . $P PAGE # TO H2 OF BUFPKT  @G@@@@          L,U       A0,5PI
)@@G@@       . $P BUFFER ROUTINE FUNCTION CODE = 5    @E@@@@          S,H2    PJ
)@@G@@  A0,0,X10   . $P FUNCTION CODE TO PACKET @A@@@@          L         A2,ZPK
)@@G@@2AREA       @G@@@@          S,H2      X6,2,X10   . $P AREA ENTRY ADDRESSPL
)@@G@@ OF Z2 TO PACKET  @G@@@@          LMJ       X11,BUFROU . $W BUFROU CALL PM
)@@G@@BUFFER ROUTINE TO GET PG@C@@@@          TZ,H1     BUFPKT     . $T SUCCESPN
)@@G@@SFUL  @ @@@@          SLJ       RER029    @[@@@@ .    @[@@@@ .    @[@@@@PO
)@@G@@ .    @A@@@@ . CHECK IF SPACE IS AVAILABLE      @ @@@@ . CHECK IF PAGE IPP
)@@G@@S OVERFLOW  @[@@@@ .    @[@@@@ .    @[@@@@ .    @E@@@@          L       PQ
)@@G@@  X9,CURADD  . $P ADDRESS OF PAGE TO X9   @D@@@@          L,S3      A0,1PR
)@@G@@,X9    . $P PAGE TYPE TO A0   @E@@@@          TNE,U     A0,01      . $P PS
)@@G@@PAGE SHOULD BE OVERFLOW @D@@@@          J         CLCGT5            . $JPT
)@@G@@ CLCGT5     @B@@@@          LA,U      A0,DMSLEV5        .   @ @@@@      PU
)@@G@@    JNZ       A0,$+2    @A@@@@          SLJ       RER030     .    @^@@@@PV
)@@G@@CLCGT5              .   @E@@@@          L,H1      X8,2,X9    . $P PAGE LPW
)@@G@@ENGTH TO X8       @ @@@@          A         X8,X9     @^@@@@          ANPX
)@@G@@,U      X8,1@G@@@@          AN,H1     X8,6,X9    . $P X8 POINTS PAST CALPY
)@@G@@C HEADERS IF ANY  @G@@@@          S         X8,FSLTVA  . $P SAVE POINTERPZ
)@@G@@ TO FIRST SLOT ON PGE   @F@@@@          LA        A0,RECADD         . ADQA
)@@G@@DRESS OF RECORD BUFFER  @E@@@@          L,T3      A3,1,A0     . $P RECORQB
)@@G@@D LENGTH TO A3    @G@@@@          L,U       A4,100     . $P PERCENT FILLQC
)@@G@@ 100 FOR OVERFLOW       @F@@@@          LMJ       X11,RSPACE . $W RSPACEQD
)@@G@@ ANY SPACE AVAILABLE    @G@@@@          S         A2,SPACSW  . $P SAVE EQE
)@@G@@RROR RETURN FOR DEBUGGING     @E@@@@          TNZ       A2         . $T QF
)@@G@@FOUND SPACE ON PAGE     @D@@@@          J         YSOVFP     . $A YES,YSQG
)@@G@@OVFP NO     @E@@@@          SZ        CHOVSW            . $P ZERO CHOVSWQH
)@@G@@      @[@@@@ .    @E@@@@ . NO SPACE ON OVERFLOW PAGE, HAVE TO TRAVERSE CQI
)@@G@@ALC CHAIN   @D@@@@ . SLOT POINTED AT IN CURRENT PAGE FOUND IN CLCSLT    QJ
)@@G@@@C@@@@CLCLP3 . TRAVERSING CALC CHAIN ON CURRENT PAGE  @A@@@@          L QK
)@@G@@        A3,CLCSLT       @[@@@@ .    @G@@@@          SLJ       FNXTCL    QL
)@@G@@. $W FNXTCL  GO FIND NEXT CALC POINTER    @G@@@@                        QM
)@@G@@      .    A0 WILL HAVE POINTER UPON RETURN     @G@@@@          SLJ     QN
)@@G@@  DBP$APS   . $W DBP$APS CALL ROUTINE TO DECOMPOSE PTR@G@@@@          DSQO
)@@G@@        A1,CLCARE . $P SAVE VALUES RETURNED FROM DBP$APS    @G@@@@      QP
)@@G@@    DS        A3,CLCSLT . $  A2 HAS PAGE NUMBER, A3 SLOT NUMBER   @G@@@@QQ
)@@G@@          TNE       A2,CURPGE . $T DOES PTR POINT TO ANOTHER PAGE       QR
)@@G@@@C@@@@          J         CLCLP3    . $A NO,CLCLP3 YES@E@@@@          L QS
)@@G@@        A7,CLNXTP . $P CALC POINTER TO A7       @E@@@@          . $ CALCQT
)@@G@@ PTR MUST POINT TO ANOTHER PGE OR HDR     @G@@@@          TE        A7,CQU
)@@G@@LCHDR . $T DOES POINTER POINTER TO CALC HEADER  @C@@@@          J       QV
)@@G@@  CLCLP2    . $A NO,CLCLP2 YES@A@@@@ . SET END OF CALC CHAIN SWITCH     QW
)@@G@@@^@@@@          L,U       A0,1@F@@@@          S         A0,CENDSW   . $PQX
)@@G@@ SET CALC CHAIN END SWITCH    @[@@@@ .    @G@@@@ . GO GET NEXT OVERFLOW QY
)@@G@@PAGE, PAGE NUMBER IS IN CLCPGE, SAME AREA       @G@@@@NSOVFP . EITHER NOQZ
)@@G@@ SPACE IS AVAILABLE IN OVERFLOW PAGE OR CALC CHAIN    @E@@@@       . ENDRA
)@@G@@ED IN AN OVERFLOW PAGE WITH NO SPACE IN IT      @C@@@@       . BUILD PACRB
)@@G@@KET WITH FUNCTION CODE 2      @E@@@@          L,U       X10,BUFPKT  . $PRC
)@@G@@ X10 POINTS TO BUFPKT   @C@@@@          L         A9,NEWARE   . $P AREA RD
)@@G@@CODE  @E@@@@          S,T1      A9,1,X10    . $P AREA CODE TO PACKET    RE
)@@G@@@E@@@@          L,U       A10,2       . $P FUNCTION CODE 2 TO A10 @F@@@@RF
)@@G@@          S,H2      A10,0,X10   . $P FUNCTION CODE 2 TO PACKET    @F@@@@RG
)@@G@@          L         A11,CURPGE  . $P LAST OVERFLOW PGE # TO A11   @F@@@@RH
)@@G@@          S,H2      A11,1,X10   . $P OVERFLOW PAGE # TO PACKET    @A@@@@RI
)@@G@@          L         X6,Z2AREA   . $ @G@@@@          S,H2      X6,2,X10  RJ
)@@G@@  . $P AREA ENTRY ADDRESS OF Z2 TO BUFPKT @G@@@@          LMJ       X11,RK
)@@G@@BUFROU  . $W BUFROU CALL BUFFER ROUTINE TO GET; @G@@@@                  RL
)@@G@@              . $  NEXT OVERFLOW PAGE AFTER THAT GIVEN@C@@@@          TZRM
)@@G@@,H1     BUFPKT      . $T SUCCESSFUL @D@@@@          J         CBNSUC    RN
)@@G@@  . $A NO,CBNSUC YES    @E@@@@ . OBTAINED NEXT OVERFLOW PAGE, CHECK IF IRO
)@@G@@T HAS SPACE       @A@@@@          L         A11,CURPGE   .  @ @@@@      RP
)@@G@@    J         CLCGT3    @C@@@@CLZER1 . CALC HEADER WAS FOUND TO BE ZERO RQ
)@@G@@      @B@@@@       . SET  HEADER EQUAL ZERO SWITCH    @^@@@@          L,RR
)@@G@@U       A0,1@F@@@@          S         A0,HEZRSW   . $P SET HEAD EQUAL ZERS
)@@G@@RO SWITCH   @G@@@@          J         CLPTH1      . $J CLPTH1 GO GET FRSRT
)@@G@@T OVERFLOW PAGE   @E@@@@YSOVFP . SPACE WAS FOUND ON OVERFLOW PAGE WHICH RU
)@@G@@IS CURRENT  @A@@@@       . PROCEED TO STORE RECORD    @E@@@@          L RV
)@@G@@        X9,CURADD    . $P ADDRESS OF PAGE TO X9 @E@@@@          L,H1    RW
)@@G@@  X8,2,X9      . $P PAGE LENGTH TO X8     @ @@@@          A         X8,XRX
)@@G@@9     @^@@@@          AN,U      X8,1@G@@@@          AN,H1     X8,6,X9   RY
)@@G@@   . $P X8 POINTS PAST CALC HEADERS       @G@@@@          S         X8,FRZ
)@@G@@SLTVA    . $P SAVE POINTER TO FIRST SLOT ON PGE @F@@@@          L       SA
)@@G@@  A0,CURPGE   . $P CURRENT PAGE NUMBER TO A0    @F@@@@          S       SB
)@@G@@  A0,NEWPGE   . $P SAVE PAGE NUMBER IN NEWPGE   @F@@@@          LA      SC
)@@G@@  A0,RECADD         . ADDR OF RECORD BUFFER     @E@@@@          L,T3    SD
)@@G@@  A3,1,A0    . $P RECORD LENGTH TO A3     @E@@@@          L,U       A4,1SE
)@@G@@00      . $P PERCENT FILL 100 TO A4 @G@@@@          LMJ       X11,RNUSLTSF
)@@G@@  . $W ASSIGN SLOT AND RECORD NUMBER      @D@@@@ . UPON RETURN, A2>0 IMPSG
)@@G@@LIES A SLOT IS BEING REUSED   @D@@@@ .              A4 HAS NEW RECORD NUSH
)@@G@@MBER ASSIGNED     @A@@@@ .              A1 HAS SLOT NUMBER  @A@@@@      SI
)@@G@@    S         A1,NEWSLT       @F@@@@          LA        A0,RECADD       SJ
)@@G@@  . ADDRESS OF RECORD BUFFER  @E@@@@          LXM,U     X1,1,A0      . $SK
)@@G@@P RECORD ADDRESS TO X1  @E@@@@          L,T3      A1,1,A0      . $P RECOSL
)@@G@@RD LENGTH TO A1   @E@@@@          LMJ       X11,RSTORE   . $P STORE RECOSM
)@@G@@RD ON PAGE  @[@@@@ .    @[@@@@ .    @A@@@@ . FORM NEW DBP FOR RECORD STOSN
)@@G@@RED   @[@@@@ .    @A@@@@          DL        A1,NEWARE       @A@@@@      SO
)@@G@@    L         A3,NEWSLT       @G@@@@          SLJ       APS$DBP     . $WSP
)@@G@@ APS$DBP FORM NEW DATA BASE POINTER @^@@@@          TNZ       A0  @ @@@@SQ
)@@G@@          SLJ       RER031    @E@@@@          S         A0,NEWDBP   . $PSR
)@@G@@ SAVE DBP IN NEWDBP     @G@@@@          SLJ       C4INST            . INSS
)@@G@@SERT ENTRY FOR OVF RANGE      @[@@@@ .    @D@@@@ . CALL KEY FILE ACCESS ST
)@@G@@METHOD TO INSERT NEW POINTER  @[@@@@ .    @D@@@@          L         A0,NSU
)@@G@@EWDBP         . RESTORE DBP   @G@@@@          S         A0,KFAPKT+4  . $SV
)@@G@@P NEW DBP TO PACKET OF KEY ACCESS   @F@@@@          LA        A0,RECADD SW
)@@G@@        . ADDRESS OF RECORD BUFFER  @D@@@@          L         A0,0,A0   SX
)@@G@@   . $P OLD DBP TO A0   @G@@@@          S         A0,KFAPKT+3  . $P OLD SY
)@@G@@DBP TO PACKET OF KEY ACCESS   @A@@@@          L,U       X10,KFAPKT      SZ
)@@G@@@F@@@@          LMJ       X11,KF$AMW   . $W CALL KF$AMW WRITE FUNCTION  TA
)@@G@@@ @@@@          TZ        KFAPKT+5  @G@@@@          SLJ       RER032    TB
)@@G@@  . $ SUCCESSFUL RETURN FROM KEY ACCESS M @[@@@@ .    @B@@@@ . PROCEED TTC
)@@G@@O LINK RECORD IN CALC CHAIN   @[@@@@ .    @F@@@@          LA        A1,RTD
)@@G@@ECADD         . ADDRESS OF RECORD BUFFER  @E@@@@          L,T1         ATE
)@@G@@1,1,A1       . $P RECORD CODE TO A1 @F@@@@          SLJ       CLPFND    TF
)@@G@@  . $W FIND CALC RELATIVE POINTER   @C@@@@          TZ        A2        TG
)@@G@@  . $  SUCCESSFUL @ @@@@          SLJ       RER033    @G@@@@          S TH
)@@G@@        X1,RELATV   . $P SAVE RELATIVE LOCATION OF CLC PTR  @A@@@@      TI
)@@G@@    L         X9,CURADD       @ @@@@          L         X8,X9     @ @@@@TJ
)@@G@@          A,H1      X8,2,X8   @G@@@@          AN        X8,NEWSLT   . $PTK
)@@G@@ X8 POINTS TO SLOT OF RELOADED REC  @G@@@@          A,H2      X9,0,X8   TL
)@@G@@  . $P X9 POINTS TO RELOADED RECORD       @G@@@@          S         X9,RTM
)@@G@@LRCAD  . $P SAVE ADDRESS OF RELOADED RECORD     @F@@@@          A       TN
)@@G@@  X9,RELATV   . $P X9 POINTS TO CALC POINTER    @F@@@@          TNZ     TO
)@@G@@  HEZRSW      . $T CALC HEADER ZERO SWITCH SET  @ @@@@          J       TP
)@@G@@  LNKNZR    @C@@@@ . HEADER POINTER TO GO INTO NEWLY STORED RECORD@E@@@@TQ
)@@G@@          L         A0,CLCHDR   . $P CALC HEADER TO A0      @G@@@@      TR
)@@G@@    S         A0,0,X9     . $P CALC HEADER TO PTR LOC  OF REL REC @[@@@@TS
)@@G@@ .    @E@@@@ . MAKE PRIMARY PAGE CURRENT TO STORE POINTER TO NEW RECORD TT
)@@G@@@[@@@@ .    @F@@@@          L,U       X10,BUFPKT  . $P ADDRESS OF BUFPKTTU
)@@G@@ TO X10     @F@@@@          L         A1,NEWARE   . $A AREA CODE TO T1 OTV
)@@G@@F BUFPKT    @E@@@@          L         A3,CLPGE  . $P PRIMARY PAGE TO A3 TW
)@@G@@      @F@@@@          S,T1      A1,1,X10  . $P AREA CODE TO T1 OF BUFPKTTX
)@@G@@+1    @F@@@@          S,H2      A3,1,X10  . $P PRIMARY PAGE TO H2 OF PACTY
)@@G@@KET   @G@@@@          L,U       A0,1      . $P BUFFER ROUTINE FUNCTION CTZ
)@@G@@ODE 1 TO A0 @E@@@@          S,H2      A0,0,X10  . $P FUNCTION CODE TO PAUA
)@@G@@CKET  @A@@@@          L         A0,Z2AREA . $   @G@@@@          S,H2    UB
)@@G@@  A0,2,X10  . $P Z2 AREA ENTRY ADDRESS TO PACKET      @D@@@@          LMUC
)@@G@@J       X11,BUFROU . $W BUFROU GET PAGE   @C@@@@          TZ,H1     BUFPUD
)@@G@@KT    . $  SUCCESSFUL?  @B@@@@          SLJ       RER034    .    NO     UE
)@@G@@@A@@@@          L         X5,CURADD .     @G@@@@          A         X5,CUF
)@@G@@HDREL . $P X5 POINTS TO HEADER ON PRIMARY PAGE  @A@@@@          L       UG
)@@G@@  A0,NEWDBP       @G@@@@          S         A0,0,X5   . $P NEWLY FORMED UH
)@@G@@POINTER TO HEADER       @ @@@@          J         CLDN1     @[@@@@ .    UI
)@@G@@@D@@@@LNKNZR . LINK CALC RECORD, NONZERO CALC HEADER CASE   @[@@@@ .    UJ
)@@G@@@E@@@@ . FIRST, STORE LAST POINTER FOUND IN NEWLY RELOADED RECORD @[@@@@UK
)@@G@@ .    @G@@@@          L         X9,RLRCAD   . $P ADDRESS OF RELOADED RECUL
)@@G@@ TO X9      @G@@@@          A         X9,RELATV   . $P X9 POINTS TO CALCUM
)@@G@@ POINTER OF REL RC@E@@@@          TZ        CHOVSW            . $T CHOVSUN
)@@G@@W SET       @E@@@@          J         LNKDOV            . $A YES,LNKDOV UO
)@@G@@NO    @E@@@@          L         A0,CLNXTP     $P LAST POINTER TO A0     UP
)@@G@@@G@@@@          S         A0,0,X9     . $P STORE LAST POINTER IN NEW RECUQ
)@@G@@ORD   @C@@@@ . WAS LAST CALC POINTER FROM A FOREIGN PAGE    @F@@@@      UR
)@@G@@    L,U       X10,BUFPKT  . $P ADDRESS OF BUFPKT TO X10     @F@@@@      US
)@@G@@    L         A1,NEWARE   . $P AREA CODE TO T1 OF BUFPKT+1  @E@@@@      UT
)@@G@@    S,T1      A1,1,X10    . $P AREA CODE TO BUFPKT+1  @D@@@@          L,UU
)@@G@@U       A0,5        . $P FN CODE 5 TO A0  @E@@@@          S,H2      A0,0UV
)@@G@@,X10    . $P FN CODE TO PACKET      @A@@@@          L         A0,Z2AREA UW
)@@G@@      @G@@@@          S         A0,2,X10    . $P Z2 AREA ENTRY ADDRESS TUX
)@@G@@O PACKET    @E@@@@          TZ        FORRSW      . $T FOREIGN REC SWITCUY
)@@G@@H SET @D@@@@          J         LNFOSW      . $A YES,LNFORSW NO   @D@@@@UZ
)@@G@@ . MAKE PAGE WHERE LAST POINTER CAME FROM CURRENT     @E@@@@          L VA
)@@G@@        A3,LSTPGE   . $P LAST PAGE # TO A3      @E@@@@          S,H2    VB
)@@G@@  A3,1,X10    . $P PAGE NUMBER TO PACKET  @G@@@@          LMJ       X11,VC
)@@G@@BUFROU  . $W CALL BUFROU TO MAKE PAGE CURRENT   @C@@@@          TZ,H1   VD
)@@G@@  BUFPKT      . $  SUCCESSFUL @ @@@@          SLJ       RER035    @F@@@@VE
)@@G@@          L         X9,CURADD   . $P X9 POINTS TO TOP OF PAGE     @ @@@@VF
)@@G@@          L         X8,X9     @ @@@@          A,H1      X8,2,X8   @F@@@@VG
)@@G@@          AN        X8,LSRSLT   . $P X8 POINTS TO RECORD SLOT     @G@@@@VH
)@@G@@          A,H2      X9,0,X8     . $P X9 POINTS TO LAST CALC RECORD      VI
)@@G@@@F@@@@          A         X9,LSRREL   . $P X9 POINTS TO CALC POINTER    VJ
)@@G@@@D@@@@          L         A0,NEWDBP   . $+ NEW DBP TO A0    @G@@@@      VK
)@@G@@    S         A0,0,X9     . $P STORE NEW RELOADED REC PTR IN LST  @ @@@@VL
)@@G@@          J         CLDN1     @[@@@@ .    @G@@@@LNFOSW . LAST CALC POINTVM
)@@G@@ER CAME FROM A FOREIGN PAGE, MAKE THAT CURRENT  @[@@@@ .    @F@@@@      VN
)@@G@@    L         A3,FORPGE     $P FOREIGN PAGE NUMBER TO A3    @G@@@@      VO
)@@G@@    S         A3,1,X10    . $P FOREIGN PAGE NUMBER TO PACKET      @G@@@@VP
)@@G@@          LMJ       X11,BUFROU  . $W BUFROU MAKE FOREIGN PAGE CURRENT   VQ
)@@G@@@C@@@@          TZ,H1     BUFPKT      . $  SUCCESSFUL @ @@@@          SLVR
)@@G@@J       RER036    @F@@@@ . FOREIGN PAGE IS CURRENT NOW, GET ADDRESSABILIVS
)@@G@@TY OVER RECORD    @[@@@@ .    @F@@@@          L         X9,CURADD   . $PVT
)@@G@@ X9 POINTS TO TOP OF PAGE     @ @@@@          L         X8,X9     @ @@@@VU
)@@G@@          A,H1      X8,2,X8   @F@@@@          AN        X8,FORSLT   . $PVV
)@@G@@ X8 POINTS TO RECORD SLOT     @G@@@@          A         X9,0,X8     $P XVW
)@@G@@9 POINTS TO CALC REC ON FOREIGN PGE @F@@@@          A         X9,LSRREL VX
)@@G@@  . $P X9 POINTS TO CALC POINTER    @D@@@@          L         A0,NEWDBP VY
)@@G@@  . $P NEW DBP TO A0    @G@@@@          S         A0,0,X9     . $P STOREVZ
)@@G@@ NEW RELOADED DBP IN FOR REC  @ @@@@          J         CLDN1     @[@@@@WA
)@@G@@ .    @C@@@@LNKDOV . CALC HDR POINTS DIRECTLY TO OVF PAGE   @E@@@@      WB
)@@G@@    LA        A0,CLCHAD         . $P ADDR OF HDR TO A0@E@@@@          LAWC
)@@G@@        A3,0,A0           . $P HDR VALUE TO A3  @B@@@@          TE      WD
)@@G@@  A3,CLSAVP         .   @B@@@@          SLJ       RER037            .   WE
)@@G@@@F@@@@          SA        A3,0,X9           . HDR TO NEW REC CHAIN PTR  WF
)@@G@@@E@@@@          LA        A4,NEWDBP         . $P NEW DBP TO A4    @E@@@@WG
)@@G@@          SA        A4,0,A0           . $P NEW DBP TO HDR   @C@@@@      WH
)@@G@@    J         CLDN1             . $J CLDN1@[@@@@ .    @[@@@@ .    @]@@@@WI
)@@G@@CBNSUC .    @ @@@@          SLJ       RER038    @G@@@@CLDN1 . FINISHED LWJ
)@@G@@INKING CALC RECORDS, MAKE AN ENTRY FOR C4 TAB PURPOSE @ @@@@CLDONE . LOAWK
)@@G@@DED  CALC RECORD  @B@@@@          LA        A0,RELCNUM        .   @B@@@@WL
)@@G@@          AA,U      A0,1              .   @E@@@@          SA        A0,RWM
)@@G@@ELCNUM        . $P INCREMENT RELCNUM@B@@@@          L         A0,RELNUM WN
)@@G@@        .   @^@@@@          A,U       A0,1@B@@@@          S         A0,RWO
)@@G@@ELNUM         .   @ @@@@       . RESET ALL SWITCHES   @E@@@@          SZWP
)@@G@@        FORRSW            . $P RESET SWITCHES   @F@@@@          SZ      WQ
)@@G@@  CHOVSW            . HDR POINTS DIREC TO OVF   @E@@@@          SZ      WR
)@@G@@  CENDSW            . CALC CHNE END SW    @E@@@@          SZ        HEZRWS
)@@G@@SW            . HEADER ZERO SWITCH  @B@@@@          SZ        STIWRAP   WT
)@@G@@        .   @B@@@@          SZ        STOWRAP           .   @B@@@@      WU
)@@G@@    SZ        STGWRAP           .   @ @@@@          J         MLOOP1    WV
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@/     @[@@@@ .    @[@@@@ .    WW
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @D@@@@       . Z2ENT HASWX
)@@G@@ ADDRESS OF Z2 TABLE RECORD ENTRY   @D@@@@RELDIR . RECORD BEING RELOADEDWY
)@@G@@ IS A DIRECT RECORD     @E@@@@       . NEWARE HAS NEW AREA CODE ( AREA TWZ
)@@G@@O RELOAD TO)      @D@@@@       . NEWC3A HAS ADDRESS TO C3 ENTRY OF NEWARXA
)@@G@@E     @G@@@@       . Z2AREA HAS ADDRESS OF Z2 TABLE AREA ENTRY (WITHIN RXB
)@@G@@ECORD ENTRY)@G@@@@          TNZ       DIRSW2         . $ MAKE SURE THEREXC
)@@G@@ WAS A DIRECT     @F@@@@                                   .   CONTROL RXD
)@@G@@ECORD SPECIFIED   @A@@@@          SLJ       RER081         .@]@@@@      XE
)@@G@@    . @G@@@@          . CALL BUFFER ROUTINE TO OBTAIN PAGE FOR DIRECT REXF
)@@G@@CORD RELOAD @G@@@@          . WITH PAGE NUMBER FROM DIRECT CONTROL RECORXG
)@@G@@D AND BUFROU      @A@@@@          . FUNCTION CODE 1 .       @]@@@@      XH
)@@G@@    . @G@@@@          LX,U      X10,BUFPKT     . $P X10 TO POINT TO BUFFXI
)@@G@@ER RTN  PKT @A@@@@          LA        A1,NEWARE      .@G@@@@          SAXJ
)@@G@@,T1     A1,1,X10       . $P AREA CODE TO T1 OF 2ND WORD     @A@@@@      XK
)@@G@@    LA,H1     A2,DIRCNTL     .@G@@@@          SA,H2     A2,1,X10       .XL
)@@G@@ $P PAGE NUMBER TO H2 OF 2ND WRD    @E@@@@          SA        A2,NEWPGE XM
)@@G@@     . $P PAGE # TO NEWPGE    @B@@@@          LA,U      A0,1           .XN
)@@G@@ $    @G@@@@          SA,H2     A0,0,X10       . $P BUFROU FUNCTION CODEXO
)@@G@@ 1 TO H2    @D@@@@                                   .    OF BUFPKT     XP
)@@G@@@A@@@@          LX        X6,Z2AREA      .@G@@@@          SX,H2     X6,2XQ
)@@G@@,X10       . $P Z2 AREA ENTRY TO H2 OF 3RD WRD  @G@@@@          LMJ     XR
)@@G@@  X11,BUFROU     . $W BUFROU, GET PAGE WITH PAGE RNGE @C@@@@            XS
)@@G@@                       .    CHECK   @D@@@@          TZ,H1     BUFPKT    XT
)@@G@@     . $T SUCCESSFUL    @E@@@@          SLJ       RER082         . $A NOXU
)@@G@@,RER082 YES       @G@@@@          SLJ       DATYPE         .    PAGE BETXV
)@@G@@TER BE A DATA PAGE      @F@@@@          LX        X3,RECADD      .    REXW
)@@G@@CORD BUFFER ADDR TO X3  @D@@@@          LA,T1     A0,1,X3        .    REXX
)@@G@@CORD CODE   @A@@@@          TNE       A0,CURREC      .@A@@@@          J XY
)@@G@@        $+2            .@E@@@@          SA        A0,CURREC      . $P MAXZ
)@@G@@KE RECORD CURRENT @]@@@@          . @]@@@@          . @E@@@@          LXYA
)@@G@@        X9,CURADD      . $P ADDR OF CURRENT PAGE@A@@@@          TE,H2   YB
)@@G@@  A2,1,X9        .@A@@@@          SLJ       RER084         .@E@@@@      YC
)@@G@@    L,H1      X8,2,X9        . $P PAGE LENGTH TO X8   @ @@@@          A YD
)@@G@@        X8,X9     @^@@@@          AN,U      X8,1@G@@@@          AN,H1   YE
)@@G@@  X8,6,X9        . $P X8 POINTS PAST THE CALC HEADERS @G@@@@          SXYF
)@@G@@,H2     X8,FSLTVA      . $P SAVE POINTER TO 1ST SLOT ON PAGE@E@@@@      YG
)@@G@@    L,T3      A3,1,X3        . $P RECORD LENGTH TO A3 @F@@@@          LAYH
)@@G@@        A2,Z2ENT       . $P Z2 RECORD ENTRY TO A2     @F@@@@          LAYI
)@@G@@,U      A4,100         . $P 100 LOAD FACTOR ASSUMED   @G@@@@          LMYJ
)@@G@@J       X11,RSPACE     . $W RSPACE ANY SPACE AVAILABLE      @G@@@@      YK
)@@G@@    SA        A2,SPACSW      . SAVE ERROR CODE FROM RSPACE ROUTINE@E@@@@YL
)@@G@@          TZ        A2             . $T ANY SPACE AVAILABLE @E@@@@      YM
)@@G@@    SLJ       RER083         . $A NO,RER083 YES       @]@@@@          . YN
)@@G@@@E@@@@          . CHECK IF RECORD CODE IS DUPLICATED ON PAGE      @]@@@@YO
)@@G@@          . @G@@@@          LA,H2     A3,DIRCNTL     . $P RECORD NUMBER YP
)@@G@@FROM DIR CNTL INF @G@@@@          LX        X8,FSLTVA      . $P ADDRESS YQ
)@@G@@OF FIRST SLOT ON PAGE   @E@@@@          LX        X9,CURADD      . $P ADYR
)@@G@@DRESS OF PAGE     @G@@@@          TNZ       A3             .    MAKE SURYS
)@@G@@E RECORD NUMBER NOT ZERO@B@@@@          SLJ       RER046            .   YT
)@@G@@@F@@@@          TNZ,H1    3,X9              . $T ANY SLOTS ALLOCATED    YU
)@@G@@@E@@@@          J         DIRNDUP           . $A NO,DIRNDUP YES   @C@@@@YV
)@@G@@          LMJ       X11,RECDUP     . $W RECDUP  @G@@@@                  YW
)@@G@@                 . UPON RETURN, A2 HAS RETURN CODE    @G@@@@            YX
)@@G@@                       . X8 POINTS ONE LOCATION AHEAD OF DUP@C@@@@      YY
)@@G@@                             .    IF ANY  @E@@@@          JNZ       A2,DYZ
)@@G@@IRNDUP     . $T FOUND DUPLICATE     @E@@@@          LXI,U     X8,0      ZA
)@@G@@     . $A NO,DIRNDUP YES      @A@@@@          AX,U      X8,1           .ZB
)@@G@@@G@@@@          LR        R3,X8          . $P SAVE ADDR OF DUPLICATE SLOZC
)@@G@@T (R3)@G@@@@          LA        A0,FSLTVA      .    DUPLICATE RECORD NUMZD
)@@G@@BER FOUND   @G@@@@          AA,U      A0,1           .    ON PAGE. SAVE ZE
)@@G@@SLOT NUMBER (R4)  @G@@@@          AN        A0,X8          .    WARN USEZF
)@@G@@R, THEN CHANGE OLD      @E@@@@          A,H1      A0,6,X9        .    REZG
)@@G@@CORD NUMBER       @A@@@@          LR        R4,A0          .@E@@@@      ZH
)@@G@@    LA        A9,0,X8        . $P SLOT VALUE TO A9    @F@@@@          ANZI
)@@G@@D       A9,SIUMSK      . $P MASK SLOT DESCRIPTION     @D@@@@          JZZJ
)@@G@@        A10,DIRGT2     . $T SLOT IN USE   @E@@@@                        ZK
)@@G@@           . $A NO,DIRNUS YES,DIRGT1@F@@@@DIRNUS . SLOT WITH DUPLICATE RZL
)@@G@@ECORD NUMBER AS DIRECT WAS FOUND.   @C@@@@       . THIS SLOT HAD AN INDIZM
)@@G@@CATOR OF NOT USED @C@@@@       . REUSE THIS SLOT FOR THE DIRECT RECORD  ZN
)@@G@@@C@@@@       . ADDRESS OF DUPLICATE SLOT IS KEPT IN R3@]@@@@       .    ZO
)@@G@@@E@@@@          LX        X9,CURADD      .    X9 POINTS TO PAGE   @G@@@@ZP
)@@G@@          LA        A1,FSLTVA      . $P ADDR OF FIRST SLOT ON PAGE      ZQ
)@@G@@@A@@@@          AA,U      A1,1           .@A@@@@          AN        A1,RZR
)@@G@@3          .@G@@@@          A,H1      A1,6,X9        . $P ADD ADDITIONALZS
)@@G@@ # OF CALC CHAINS @D@@@@                                   . $P SLOT # TZT
)@@G@@O A1  @G@@@@          SZ        A2             . $P A2=0 WILL INDICATE SZU
)@@G@@LOT REUSED  @E@@@@          LX        X8,R3          . $P SLOT ADDRESS TZV
)@@G@@O X8  @ @@@@          J         DIRSTR    @]@@@@DIRGT2      @A@@@@      ZW
)@@G@@    LA,U      A0,1           .@A@@@@          AND       A9,RFPMSK       ZX
)@@G@@@ @@@@          JZ        A10,$+2   @ @@@@          SLJ       RER085    ZY
)@@G@@@A@@@@          AND       A9,SHPMSK       @ @@@@          JZ        A10,ZZ
)@@G@@$+2   @ @@@@          SLJ       RER085    @F@@@@          SA        A0,DAA
)@@G@@IRWAR      . $P SET DIRWAR TO WARN USER   @G@@@@          SA        A0,RAB
)@@G@@ELWAR      . $P SET RELWAR FOR GENERAL WARNING  @F@@@@          LX      AC
)@@G@@  X8,FSLTVA      . ADDRESS OF 1ST SLOT ON PAGE  @D@@@@          LX      AD
)@@G@@  X9,CURADD      . ADDRESS OF PAGE  @G@@@@          LMJ       X11,RNUSLTAE
)@@G@@     . $W RNUSLT  GET NEW RECORD NUMBER   @G@@@@                        AF
)@@G@@           . $  UPON RETURN, A3 HAS RECORD NUM  @G@@@@                  AG
)@@G@@                 .    IGNORE OTHER INFORMATION RETURND@A@@@@          SAAH
)@@G@@        A3,NEWRNU       @E@@@@          LA        A0,R3          . $P ADAI
)@@G@@DR OF OLD SLOT    @E@@@@          LA,S1     A2,0,A0        .   SAVE S1 OAJ
)@@G@@F SLOT      @G@@@@          SA,H1     A3,0,A0        .   STORE NEW RECORAK
)@@G@@D NUMBER IN SLOT  @E@@@@          SA,S1     A2,0,A0        .   RESTORE SAL
)@@G@@1 TO SLOT   @]@@@@DIRNDUP     @E@@@@          LX        X9,CURADD      .AM
)@@G@@    X9 POINTS TO PAGE   @G@@@@          LX        X8,FSLTVA      .    X8AN
)@@G@@ POINTS TO FIRST SLOT ON PAGE @G@@@@          LMJ       X11,RNUSLT     .AO
)@@G@@ $W RNUSLT ASSIGN NEW SLOT FOR REC  @G@@@@                              AP
)@@G@@     .    UPON RETURN, A2=0 IMPLIES A SLOT@G@@@@                        AQ
)@@G@@           .                      IS REUSED     @G@@@@                  AR
)@@G@@                 .                 A1 HAS SLOT NUMBER @G@@@@DIRSTR . NEEAS
)@@G@@D TO ASSIGN NEW SLOT BUT MUST USE DIRECT RECORD NUMBER      @G@@@@      AT
)@@G@@    LA,H2     A3,DIRCNTL     . $P REPLACE RECORD NUMBER ASSIGNED  @G@@@@AU
)@@G@@                                   .    BY RECORD NUMBER FROM DIRECT    AV
)@@G@@@E@@@@                                   .    CONTROL RECORD      @G@@@@AW
)@@G@@          SA        A1,NEWSLT      . $P SAVE NEW SLOT NUMBER IN NEWSLT  AX
)@@G@@@F@@@@          LA        A0,RECADD      . $P ADDRESS OF RECORD BUFFER  AY
)@@G@@@F@@@@          LX        X1,A0          . $P ADDRESS OF RECORD BUFFER  AZ
)@@G@@@E@@@@          AX,U      X1,1           . $P ADDRESS OF RECORD   @E@@@@BA
)@@G@@          LA,T3     A1,1,A0        . $P RECORD LENGTH TO A1 @E@@@@      BB
)@@G@@    LMJ       X11,RSTORE     . $P STORE RECORD ON PAGE@A@@@@            BC
)@@G@@                       .@A@@@@          LA        A1,CURPGE       @A@@@@BD
)@@G@@          SA        A1,NEWPGE       @E@@@@          DL        A1,NEWARE BE
)@@G@@     . $P NEW AREA, NEW PAGE  @C@@@@          L         A3,NEWSLT      .BF
)@@G@@ $P NEW SLOT@G@@@@          SLJ       APS$DBP        . $W APS$DBP FORM NBG
)@@G@@EW DATA BASE PTR  @^@@@@          TNZ       A0  @ @@@@          SLJ     BH
)@@G@@  RER024    @G@@@@          SA        A0,NEWDBP      . $P NEW DATA BASE BI
)@@G@@POINTER SAVED     @A@@@@                                   .@G@@@@      BJ
)@@G@@                             . $  CALL KEY FILE ACCESS METHOD     @F@@@@BK
)@@G@@                                   .    TO INSERT NEW POINTER     @A@@@@BL
)@@G@@                                   .@G@@@@          SA        A0,KFAPKT+BM
)@@G@@4    . $P NEW DBP TO KEY FILE PKT + 4     @F@@@@          LA        A0,RBN
)@@G@@ECADD      . $P ADDR OF RECORD BUFFER     @E@@@@          LA        A0,0BO
)@@G@@,A0        . $P OLD DBP TO A0       @G@@@@          SA        A0,KFAPKT+BP
)@@G@@3    . $P OLD DBP TO KEY FILE PKT + 3     @A@@@@          LX,U      X10,BQ
)@@G@@KFAPKT     .@G@@@@          LMJ       X11,KF$AMW     . $W KF$AMW WRITE NBR
)@@G@@EW POINTER TO     @C@@@@                                   .    KEY FILEBS
)@@G@@@A@@@@          TZ        KFAPKT+5       .@ @@@@          SLJ       RER0BT
)@@G@@25    @[@@@@ .    @B@@@@ . CHECK IF WARNING TO USER IS NEEDED     @[@@@@BU
)@@G@@ .    @E@@@@          TNZ       DIRWAR         . $T IS WARNING NEEDED   BV
)@@G@@@E@@@@          J         DIRGT3         . $A NO,DIRGT3 YES       @F@@@@BW
)@@G@@                                   .    ISSUE WARNING TO USER     @A@@@@BX
)@@G@@          E$DIT     EDPKT          .@A@@@@          E$COPY    30,MSGDR1 BY
)@@G@@     .@A@@@@          LA,H2     A11,DIRCNTL    .@A@@@@          E$DECV  BZ
)@@G@@  A11            .@A@@@@          E$COPY    17,MSGDR2      .@A@@@@      CA
)@@G@@    E$DECV    NEWARE         .@A@@@@          E$COPY    7,MSGDR3       .CB
)@@G@@@A@@@@          E$DECV    NEWPGE         .@A@@@@          P$RINT    (PF1CC
)@@G@@ 1,14,PRINT)@A@@@@          E$DIT     EDPKT          .@A@@@@          E$CD
)@@G@@COPY    22,MSGDR4      .@A@@@@          E$DECV    R4             .@A@@@@CE
)@@G@@          E$COPY    17,MSGDR5      .@A@@@@                              CF
)@@G@@     .@D@@@@                                   . GET RECORD CODE  @A@@@@CG
)@@G@@                                   .@E@@@@          LX        X8,R3     CH
)@@G@@     . $P ADDR OF DUP SLOT    @A@@@@          LX        X9,CURADD      .CI
)@@G@@@E@@@@          AX,H2     X9,0,X8        . $P X9 POINTS TO RECORD @E@@@@CJ
)@@G@@          LA,T1     A12,0,X9       . $P RECORD CODE TO A12  @A@@@@      CK
)@@G@@    E$DECV    A12            .@A@@@@          E$COPY    14,MSGDR6      .CL
)@@G@@@G@@@@          LA,H2     A13,DIRCNTL    . $P DUPLICATED DIRECT RECORN NCM
)@@G@@UMBER @A@@@@          E$DECV    A13            .@E@@@@          E$COPY  CN
)@@G@@  4,MSGDR7       . $P NEW RECORD NUMBER   @A@@@@          E$DECV    NEWRCO
)@@G@@NU         .@A@@@@          P$RINT    (PF1 1,14,PRINT)@B@@@@DIRGT3    LACP
)@@G@@        A0,RELDNUM     . $P   @G@@@@          AA,U      A0,1           .CQ
)@@G@@ $P INCREMENT NUMBER OF DIRECT RECS @A@@@@          SA        A0,RELDNUMCR
)@@G@@     .@A@@@@          LA        A0,RELNUM      .@G@@@@          AA,U    CS
)@@G@@  A0,1           . $P INCREMENT # OF RELOADED RECORDS @A@@@@          SACT
)@@G@@        A0,RELNUM      .@ @@@@          SZ        DIRCNTL   @ @@@@      CU
)@@G@@    SZ        DIRSW     @C@@@@          J         MLOOP1         . $J MLCV
)@@G@@OOP1  @[@@@@/     @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@CW
)@@G@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @]@@@@DFEOF .     @[@@@@ .    CX
)@@G@@@B@@@@ . FLUSH CORE BUFFER AND KEY FILE OUT     @[@@@@ .    @G@@@@      CY
)@@G@@    L,U       X10,BUFPKT . $P ADDRESS OF BUFFER PACKET TO X10     @G@@@@CZ
)@@G@@          L,U       A1,8      . $P FUNCTION CODE 8 TO BUFFER PACKET     DA
)@@G@@@A@@@@          S,H2      A1,0,X10  . $   @A@@@@                        DB
)@@G@@      . $   @G@@@@          LMJ       X11,BUFROU . $W BUFROU FLUSH CORE DC
)@@G@@BUFFERS OUT       @D@@@@          TZ,H1     BUFPKT    . $ SUCCESSFUL RETDD
)@@G@@URN   @ @@@@          SLJ       RER039    @G@@@@          L,U       X10,DE
)@@G@@KFAPKT . $ ADDRESS OF KEY FILE PACKET TO X10    @C@@@@          LMJ     DF
)@@G@@  X11,KF$AMF . $ KF$AMF       @E@@@@          TZ        KFAPKT+5  . $ CHDG
)@@G@@ECK STATUS OF CALL      @ @@@@          SLJ       RER040    @[@@@@ .    DH
)@@G@@@[@@@@ .    @[@@@@ .    @B@@@@ . PROCEED TO WRITE OUT THE Z2 TABLE.     DI
)@@G@@@[@@@@ .    @[@@@@ .    @B@@@@          LX,U      X10,Z2CPAR        .   DJ
)@@G@@@C@@@@          LMJ       X11,CF$AM         . $W CF$AM@[@@@@ .    @[@@@@DK
)@@G@@ .    @[@@@@ .    @[@@@@ .    @A@@@@ . PROCEDE TO CREATE C4 TABLE       DL
)@@G@@@[@@@@ .    @[@@@@ .    @G@@@@          SZ        A6                . $PDM
)@@G@@ ZERO TO A6 FOR #OF WRDS      @G@@@@          L,H2       X5,Z2          DN
)@@G@@   . $P ADDRESS OF Z2 TABLE TO X5   @G@@@@          L         X8,C4ADD  DO
)@@G@@        . $P ADDRESS OF C4 TABLE TO X8    @G@@@@          S,H2      X8,CDP
)@@G@@4             . $ADDRESS OF C4 TABLE TO C4      @]@@@@C4BLD3 .    @ @@@@DQ
)@@G@@          L         X6,X5     @G@@@@          A,T2      X6,1,X5         DR
)@@G@@  . X6 POINTS TO FIRST AREA ENTRY   @B@@@@          L         X7,X6     DS
)@@G@@        .   @C@@@@          AN,U        X7,1              .       @G@@@@DT
)@@G@@          L,H2      A3,0,X7           . $P #OF AREA ENTRIES TO A3       DU
)@@G@@@F@@@@          AN,U      A3,1              . $P A3 TO CONTROL LOOP     DV
)@@G@@@]@@@@C4BLP1 .    @I@@@@          TZ        3,X6              . $T C4 TADW
)@@G@@B TO BE CONSTRUCTED FOR THIS ENT    @E@@@@                              DX
)@@G@@        . $A YES,C4BLD1 NO    @ @@@@          J         C4BLD1    @F@@@@DY
)@@G@@C4BLD2    A,S1      X6,0,X6           . $P POINT TO NEXT ENTRY    @E@@@@DZ
)@@G@@          JGD       A3,C4BLP1         . $T ARE WE DONE YET  @E@@@@      EA
)@@G@@                                . $A NO,C4BLP1 YES    @E@@@@          TNEB
)@@G@@Z,T3    0,X5              . $T ANY LINK IN Z2   @E@@@@                  EC
)@@G@@                    . $A NO,C4DONE YES    @ @@@@          J         C4DOED
)@@G@@NE    @G@@@@          A,T3      X5,0,X5           . $P POINT TO NEXT ENTEE
)@@G@@ IN Z2      @D@@@@          J         C4BLD3            . $J C4BLD3     EF
)@@G@@@]@@@@C4BLD1 .    @[@@@@ .    @B@@@@ . WE WANT TO BUILD A C4 ENTRY FOR TEG
)@@G@@HIS   @G@@@@          SZ        3,X6              . ZERO OUT REL PGE INDEH
)@@G@@ICATOR      @G@@@@          SZ        MRGARE            . ZERO OUT MERGEEI
)@@G@@ TABLE INDICATOR  @E@@@@          L,T3      A1,0,X6           . $P AREA EJ
)@@G@@CODE TO A1  @F@@@@          S,T1      A1,0,X8           . $P AREA CODE TEK
)@@G@@O C4 ENTRY  @ @@@@          L,U       X10,C3    @G@@@@          LMJ     EL
)@@G@@  X11,TABSE1        . $P SEARCH C3 FOR AREA ENTRY     @B@@@@ . A0 WILL PEM
)@@G@@OINT TO ENTRY UPON RETURN     @^@@@@          TZ        A2  @ @@@@      EN
)@@G@@    SLJ       RER041    @E@@@@          DL        A7,1,A0           . $AEO
)@@G@@REA NAME TO A7,A8 @F@@@@          DS        A7,1,X8           . $P AREA EP
)@@G@@NAME TO C4 ENTRY  @ @@@@          L         X9,X8     @^@@@@          LXEQ
)@@G@@I,U     X9,1@H@@@@          A,U       X9,3              . $P X9 WILL POIER
)@@G@@NT TO 1ST RANGE IN C4   @A@@@@ . POINTER TO AREA ENTRY IN X6      @^@@@@ES
)@@G@@          TNZ       1,X6@ @@@@          SLJ       RER042    @G@@@@      ET
)@@G@@    S,T1      A1,MRGARE . $P SAVE AREA CODE IN MRGARE HEADER      @F@@@@EU
)@@G@@          L         X4,MRGADD . $P ADDRESS OF MERGE TABLE TO X4   @^@@@@EV
)@@G@@          LXI,U     X4,2@F@@@@          DL        A9,1,X6   . $P RANGE OEW
)@@G@@F PAGES TO A9 AND A10   @F@@@@          DS        A9,0,*X4  . $P RANGE OEX
)@@G@@F PAGES TO C4 ENTRY     @A@@@@          L,H2      A0,MRGNUM       @B@@@@EY
)@@G@@          TLE,U     A0,MRGENT         .   @B@@@@          J         $+2 EZ
)@@G@@              .   @F@@@@          SLJ       RER057            . OVERFLOWFA
)@@G@@ OF MERGE TABLE   @E@@@@          A,U       A0,1      . $P UPDATE # OF EFB
)@@G@@NTRIES IN A0@G@@@@          S,H2      A0,MRGNUM . $P STORE # OF ENTRIES FC
)@@G@@IN H2 OF MRGNUM   @A@@@@ . X5 POINTS TO Z2 ENTRY CONSIDERED @E@@@@      FD
)@@G@@    TNZ,T3    0,X5      . $T ANY LINK IN Z2 ENTRY     @C@@@@          J FE
)@@G@@        C4OVFL    . $A NO,C4OVFL YES@E@@@@ . SEARCH REST OF Z2 ENTRY LOOFF
)@@G@@KING FOR DUPLICATE AREA       @E@@@@          L         X2,X5     . $P AFG
)@@G@@DDRESS OF Z2 ENTRY TO X2@G@@@@          A,T3      X2,0,X2   . $P X2 POINFH
)@@G@@TS TO NEXT Z ENTRY IF ANY     @]@@@@MERGE3 .    @A@@@@          L       FI
)@@G@@  X3,X2     .     @F@@@@          A,T2      X3,1,X2   . $P X3 POINTS TO FJ
)@@G@@FIRST AREA ENTRY  @ @@@@          L         X7,X3     @^@@@@          ANFK
)@@G@@,U      X7,1@E@@@@          L,H2      A15,0,X7  . $P # OF AREA ENTRIES TFL
)@@G@@O A15 @E@@@@          AN,U      A15,1     . $P A15 WILL CONTROL LOOP    FM
)@@G@@@]@@@@C4LP11 .    @D@@@@          TNE,T3    A1,0,X3   . $T AREA CODES EQFN
)@@G@@UAL   @C@@@@          J         MERGE1    . $A YES,MERGE1 NO@]@@@@MERGE2FO
)@@G@@ .    @G@@@@          A,S1      X3,0,X3   . $P POINT TO NEXT AREA ENTRY FP
)@@G@@WITHIN Z2   @D@@@@          JGD       A15,C4LP11 . $T ANY MORE AREAS    FQ
)@@G@@@C@@@@                              . $A YES,C4LP11 NO@E@@@@          TNFR
)@@G@@Z,T3    0,X2       . $T ANY LINK IN Z2 ENTRY    @C@@@@          J       FS
)@@G@@  C4OVFL    . $A NO,CLOVFL YES@E@@@@          A,T3      X2,0,X2   . $P PFT
)@@G@@OINT TO NEXT Z2 ENTRY   @C@@@@          J         MERGE3    . $J MERGE3 FU
)@@G@@      @G@@@@MERGE1    TNZ       3,X3      . $T ANY PAGE RELOADED IN THISFV
)@@G@@ AREA       @C@@@@          J         MERGE2    . $A NO,MERGE2 YES@G@@@@FW
)@@G@@ .        FOUND AN AREA ENTRY, PUT RANGE IN MERGE TABLE AND ZERO ENTRY  FX
)@@G@@@F@@@@          DL        A9,1,X3   . $P RANGE OF PAGES TO A9 AND A10   FY
)@@G@@@F@@@@          DS        A9,0,*X4  . $P RANGE OF PAGES TO MERGE TABLE  FZ
)@@G@@@A@@@@          L,H2      A0,MRGNUM       @B@@@@          TLE,U     A0,MGA
)@@G@@RGENT         .   @B@@@@          J         $+2               .   @F@@@@GB
)@@G@@          SLJ       RER057            . OVERFLOW OF MERGE TABLE   @E@@@@GC
)@@G@@          A,U       A0,1      . $P UPDATE # OF ENTRIES IN A0@G@@@@      GD
)@@G@@    S,H2      A0,MRGNUM . $P STORE # OF ENTRIES IN H2 OF MRGNUM   @E@@@@GE
)@@G@@          SZ        3,X3      . $P ZERO PAGE CURRENCY       @C@@@@      GF
)@@G@@    J         MERGE2    . $J MERGE2       @E@@@@ . **** DETERMINE HERE IGG
)@@G@@F ANY OVERFLOW RANGES ARE NEEDED    @C@@@@ . ****IF NEEDED STORE RANGES GH
)@@G@@BEFORE LINK       @[@@@@ .    @F@@@@C4OVFL    TNZ       C4TBNM          GI
)@@G@@  . ANY ENTRIES IN OVF TBL    @B@@@@          J         C4CON3          GJ
)@@G@@  .   @B@@@@          L         A7,C4TBNM         .   @E@@@@          ANGK
)@@G@@,U      A7,1              . A7 TO CONTROL LOOP  @A@@@@ . SEARCH TABLE OFGL
)@@G@@ OVERFLOW RANGES  @[@@@@ .    @G@@@@          L         X1,RNGADD       GM
)@@G@@  . ADDRESS OF RANGE TABLE TO X1    @B@@@@C4BLP2    TNE,T3    A1,0,X1   GN
)@@G@@        .   @G@@@@          J         C4BLD5            . AREA CODES EQUGO
)@@G@@AL, BUILD ENTRY   @^@@@@C4CON2    A,U       X1,2@B@@@@          JGD     GP
)@@G@@  A7,C4BLP2         .   @]@@@@C4CON3 .    @[@@@@ .    @C@@@@ . BUILD A CGQ
)@@G@@4 TABLE ENTRY FROM MERGE TABLE      @E@@@@ . X8 POINTS TO C4 ENTRY, X9 PGR
)@@G@@OINTS TO RANGE ENTRY WITHIN C4@C@@@@ . GET SMALLEST LOWER RANGE FROM MERGS
)@@G@@GE TABLE    @D@@@@          SZ        A5        . $P ZERO # OF RANGES   GT
)@@G@@@G@@@@          SLJ       MRGSML    . $W MRGSML FIND SMALLEST LOWER RANGGU
)@@G@@E IN; @G@@@@                              .    MERGE TABLE, A0 POINTS TOGV
)@@G@@ ENTRY      @E@@@@          TZ        A2        . $T ANY SMALLEST ENTRY GW
)@@G@@FOUND @G@@@@          SLJ       RER043    . $E EXIT NO THERE MUST BE AT GX
)@@G@@LEAST ONE   @E@@@@          L,H2       A9,0,A0   . $P LOWER RANGE TO A9 GY
)@@G@@      @E@@@@          S,H1      A9,0,X9   . $P LOWER RANGE TO C4 ENTRY  GZ
)@@G@@@E@@@@          L,H2      A10,1,A0  . $P UPPER RANGE TO A10       @[@@@@HA
)@@G@@ .    @]@@@@MRGLP2 .    @G@@@@          SLJ       MRGSML    . $W MRGSML HB
)@@G@@GET NEXT SMALLEST LOWER RANGE @E@@@@          TZ        A2        . $T AHC
)@@G@@NY SMALLEST ENTRY       @C@@@@          J         C4ENT1    . $A NO,C4ENHD
)@@G@@T1    @G@@@@          TLE,H2    A10,0,A0  . $T IS NEW LOWER RGE LESS OR HE
)@@G@@EQU TO PREV @C@@@@          J         MERGE4    . $A NO,MERGE4 YES@B@@@@HF
)@@G@@          TG,H2     A10,1,A0          .   @B@@@@          J         $+2 HG
)@@G@@              .   @G@@@@          L,H2      A10,1,A0  . $P YES NEWLY FOUHH
)@@G@@ND UPPER RANGE TO A10   @C@@@@          J         MRGLP2    . $J MRGLP2 HI
)@@G@@      @G@@@@MERGE4 . CALCULATE # OF PAGES FOR RANGE AND STORE IN C4 RANGHJ
)@@G@@E ENTRY     @ @@@@          AN        A10,A9    @F@@@@          A,U     HK
)@@G@@  A10,1     . $P # OF PAGES IN RANGE TO A10     @E@@@@          S,H2    HL
)@@G@@   A10,0,*X9 . $P # OF PAGES TO C4 ENTRY  @G@@@@          A,U       A5,1HM
)@@G@@      . $P INCREMENT # OF RANGES IN C4 ENTRY    @E@@@@          L,H2    HN
)@@G@@  A9,0,A0   . $P NEW LOWER RANGE TO A9    @F@@@@          S,H1      A9,0HO
)@@G@@,X9   . $P NEW LOWER RANGE TO C4 ENTRY    @E@@@@          L,H2      A10,HP
)@@G@@1,A0  . $P NEW UPPER RANGE TO A10   @C@@@@          J         MRGLP2    HQ
)@@G@@. $J MRGLP2       @[@@@@ .    @[@@@@ .    @]@@@@C4ENT1 .    @ @@@@      HR
)@@G@@    AN        A10,A9    @F@@@@          A,U       A10,1     . $P # OF PAHS
)@@G@@GES IN RANGE TO A10     @E@@@@          S,H2       A10,0,*X9 . $P # OF PHT
)@@G@@AGES TO C4 ENTRY  @G@@@@          A,U       A5,1      . $P INCREMENT # OHU
)@@G@@F RANGES IN C4 ENTRY    @F@@@@          S,T2      A5,0,X8           . # HV
)@@G@@OF RANGES TO C4 ENTRY   @ @@@@          LXM       A0,X9     @^@@@@      HW
)@@G@@    LXI,U     X8,0@F@@@@          S         X8,C4ENT          . $P SAVE HX
)@@G@@C4 ENTRY ADDRESS  @E@@@@          AN        A0,X8             . CALCULATHY
)@@G@@E LINK      @G@@@@          S,T3      A0,0,X8           . $P STORE LINK HZ
)@@G@@IN C4 ENTRY       @G@@@@          A         A6,A0             . $P INCREIA
)@@G@@MENT ## OF WRDS IN C4   @B@@@@          TLE,U     A6,C4SIZE         .   IB
)@@G@@@B@@@@          J         $+2               .   @ @@@@          SLJ     IC
)@@G@@  RER067    @E@@@@          A,T3      X8,0,X8           . POINT TO NEXT ID
)@@G@@ENTRY @D@@@@          J         C4BLD2            . $J C4BLD2     @[@@@@IE
)@@G@@ .    @[@@@@ .    @]@@@@C4BLD5 .    @B@@@@          L,H1      A9,1,X1   IF
)@@G@@        .   @G@@@@          S         A9,0,X4           . LOWER RNGE TO IG
)@@G@@MERGE TAB ENT     @E@@@@          L,H2      A10,1,X1          . $P UPPERIH
)@@G@@ RNGE TO A10@F@@@@          S         A10,1,*X4         . $P UPPER RNGE II
)@@G@@TO MRG TAB  @B@@@@          L,H2      A0,MRGARE         .   @B@@@@      IJ
)@@G@@    A,U       A0,1              .   @H@@@@          S,H2      A0,MRGARE IK
)@@G@@        . $P UPDATE # OF ENTRIES IN MRG TAB     @B@@@@          J       IL
)@@G@@  C4CON2            .   @]@@@@C4DONE .    @B@@@@          LA        A0,CIM
)@@G@@4ENT          .   @F@@@@          SZ,T3     0,A0              . STORE ZEIN
)@@G@@RO IN LAST LINK   @G@@@@          S,H1      A6,C4             . $P STOREIO
)@@G@@ # OF WRDS IN C4 IN C4  @H@@@@                                      . SEIP
)@@G@@ND OUT WARNING IF RELWAR NOT = 0    @B@@@@          TNZ       RELWAR    IQ
)@@G@@        .   @B@@@@          J         NOWARN            .   @B@@@@      IR
)@@G@@    E$DIT     EDPKT             .   @A@@@@          E$COPY    42,MSGAST IS
)@@G@@.     @A@@@@          P$RINT    (PF1 1,14,PRINT)@B@@@@          E$DIT   IT
)@@G@@  EDPKT             .   @A@@@@          E$COPY    42,MSGRWA .     @A@@@@IU
)@@G@@          P$RINT    (PF1 1,14,PRINT)@B@@@@          E$DIT     EDPKT     IV
)@@G@@        .   @A@@@@          E$COPY    42,MSGAST .     @A@@@@          P$IW
)@@G@@RINT    (PF1 1,14,PRINT)@]@@@@NOWARN      @B@@@@          E$DIT     EDPKIX
)@@G@@T             .   @B@@@@          E$DECV    RELNUM            .   @B@@@@IY
)@@G@@          E$COPY    17,MSGNUM         .   @#@@@@          E$DITX  @A@@@@IZ
)@@G@@          P$RINT    (PF1 1,14,PRINT)@B@@@@          E$DIT     EDPKT     JA
)@@G@@        .   @G@@@@          E$DECV    RELSNUM           . # OF VIA SET RJB
)@@G@@ECORDS RELOADED   @B@@@@          E$COPY    10,MSGVIA         .   @G@@@@JC
)@@G@@          E$DECV    RELCNUM           . # OF CALC RECORDS RELOADED      JD
)@@G@@@B@@@@          E$COPY    10,MSGCAL         .   @B@@@@          E$DECV  JE
)@@G@@  RELDNUM           .   @B@@@@          E$COPY    7,MSGDIR          .   JF
)@@G@@@B@@@@          E$COPY    17,MSGNUM         .   @B@@@@          P$RINT  JG
)@@G@@  (PF1 1,14,PRINT)  .   @ @@@@          J         *RETURN   @]@@@@NPGMSGJH
)@@G@@ .    @B@@@@          E$DIT     EDPKT             .   @B@@@@          E$JI
)@@G@@COPY    22,MSGNPG         .   @F@@@@          LA        A2,RECADD       JJ
)@@G@@  . ADDR OF RECORD BUFFER     @B@@@@          LA,T1     A2,1,A2         JK
)@@G@@  .   @B@@@@          SA        A2,CURREC         .   @ @@@@          E$JL
)@@G@@DECV    CURREC    @^@@@@          E$CHAR    '(' @B@@@@          E$OCTV  JM
)@@G@@  CURREC            .   @B@@@@          E$CHAR    ')'               .   JN
)@@G@@@B@@@@          E$COPY    6,MSGARE          .   @B@@@@          E$DECV  JO
)@@G@@  DESARE            .   @B@@@@          E$CHAR    '('               .   JP
)@@G@@@B@@@@          E$OCTV    DESARE            .   @B@@@@          E$CHAR  JQ
)@@G@@  ')'               .   @A@@@@          P$RINT    (PF1 1,14,PRINT)@ @@@@JR
)@@G@@          SLJ       RER044    @]@@@@CLCMSG .    @B@@@@          E$DIT   JS
)@@G@@  EDPKT             .   @B@@@@          E$COPY    44,MSGCLC         .   JT
)@@G@@@F@@@@          LA        A2,RECADD         . ADDR OF RECORD BUFFER     JU
)@@G@@@B@@@@          LA,T1     A2,1,A2           .   @A@@@@          SA      JV
)@@G@@  A2,CURREC .     @B@@@@          E$DECV    CURREC            .   @^@@@@JW
)@@G@@          E$CHAR    '(' @ @@@@          E$OCTV    CURREC    @^@@@@      JX
)@@G@@    E$CHAR    ')' @A@@@@          P$RINT    (PF1 1,14,PRINT)@ @@@@      JY
)@@G@@    SLJ       RER045    @[@@@@/     @[@@@@ .    @[@@@@ .    @D@@@@ . ROUJZ
)@@G@@TINE TO SEARCH Z2 TABLE RECORD ENTRY FOR AN     @A@@@@ . AREA CODE WHICHKA
)@@G@@ IS PASSED IN A1  @A@@@@ . REGISTERS USED ARE X1, X6 AND A0 @[@@@@ .    KB
)@@G@@@[@@@@ .    @C@@@@FZ2AENT   +         0                 . $H      @E@@@@KC
)@@G@@          L         X6,Z2ENT  . $P ADDRESS OF Z2 ENTRY TO X6@E@@@@      KD
)@@G@@    A,T2      X6,1,X6   . $P POINT TO AREA ENTRY      @ @@@@          L KE
)@@G@@        X1,X6     @^@@@@          AN,U      X1,1@F@@@@          L,H2    KF
)@@G@@  A0,0,X1   . $P # OF AREA ENTRIES IN Z2 TO A0  @D@@@@          AN,U    KG
)@@G@@  A0,1      . $P A0 WILL CONTROL    @D@@@@RELLP2    TNE,T3    A1,0,X6   KH
)@@G@@. $T AREA CODES EQUAL   @C@@@@          J         Z2AEX0    . $A YES,Z2AKI
)@@G@@FND NO@G@@@@          A,S1       X6,0,X6  . $P POINT TO NEXT AREA ENTRY KJ
)@@G@@IN Z2       @E@@@@          JGD       A0,RELLP2 . $T ANY MORE AREA ENTRIKK
)@@G@@ES    @E@@@@          LA,U      A0,1              . $P RETURN ERROR CODEKL
)@@G@@@C@@@@Z2AEX     J         *FZ2AENT          . $E EXIT @G@@@@Z2AEX0    SZKM
)@@G@@        A0                . $P RETURN SUCCESSFULL ERROR CODE@C@@@@      KN
)@@G@@    J         Z2AEX             . $J Z2AEX@[@@@@ .    @[@@@@ .    @[@@@@KO
)@@G@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@.     @C@@@@KP
)@@G@@ . ROUTINE TO SEARCH A VARIABLE LENGTH TABLE.   @G@@@@ . UPON ENTRY  X10KQ
)@@G@@ POINTS TO THE FIXED WORD IDENTIFYING THE TABLE.      @E@@@@ .          KR
)@@G@@       THIS WORD HAS # OF WRDS IN TABLE IN H1   @F@@@@ .                KS
)@@G@@               STARTING ADDRESS OF TABLE IN H2  @G@@@@ .             A1 KT
)@@G@@ CONTAINS SEARCH KEY WHICH IS T1 OF 1ST WORD OF ENTRY @D@@@@ . UPON RETUKU
)@@G@@RN A2  HAS RETURN CODE.  0= SUCCESSFUL    @E@@@@ .                      KV
)@@G@@             1= ENTRY NOT FOUND     @D@@@@ .                            KW
)@@G@@       2= TABLE EMPTY   @D@@@@ .             A0  WILL POINT TO ENTRY FOUKX
)@@G@@ND IF ANY   @[@@@@ .    @C@@@@TABSE1    S,H2      X11,RET7  . $H TABSE1 KY
)@@G@@      @E@@@@          TNZ,H1    0,X10     . $T ANY WORDS IN TABLE       KZ
)@@G@@@C@@@@          J         TABN2     . $A NO,TABN2 YES @F@@@@          L,LA
)@@G@@H2      A0,0,X10  . $P ADDRESS OF FIRST ENTRY TO A0   @E@@@@TALOP1    TNLB
)@@G@@E,T1    A1,0,A0   . $T ARE RECORD CODES EQUAL   @C@@@@          J       LC
)@@G@@  TABYES    . $A YES,TABYES NO@E@@@@          TNZ,T3    0,A0      . $T ILD
)@@G@@S THIS LAST ENTRY       @C@@@@          J         TABN1     . $A YES,TABLE
)@@G@@N1 NO @E@@@@          A,T3      A0,0,A0   . $P POINT TO NEXT ENTRY      LF
)@@G@@@ @@@@          J         TALOP1    @E@@@@TABN1     L,U       A2,1      LG
)@@G@@. $P ITEM NOT FOUND CODE      @C@@@@          J         TABEXT    . $J TLH
)@@G@@ABEXT       @C@@@@TABN2     L,U       A2,2      . $P TABLE EMPTY  @C@@@@LI
)@@G@@          J         TABEXT    . $J TABEXT       @F@@@@TABYES    L,U     LJ
)@@G@@  A2,0      . $P SET SUCCESSFUL RETURN CODE     @B@@@@TABEXT    J       LK
)@@G@@  *RET7     . $E EXIT   @[@@@@ .    @[@@@@ .    @G@@@@ . SUBROUTINE WHICLL
)@@G@@H DETERMINES IF THERE IS SPACE ON A CERTAIN PAGE      @^@@@@ . TO STORE LM
)@@G@@A RECORD    @C@@@@ . UPON ENTRY  A3 HAS RECORD LENGTH IN WORDS    @B@@@@LN
)@@G@@ .             X9 POINTS TO DATA PAGE     @E@@@@ . UPON RETURN A2 HAS RELO
)@@G@@TURN CODE: 0=FOUND SPACE, 1=NO SPACE@A@@@@ . OTHER REGISTERS  USED A1,A2LP
)@@G@@,     @ @@@@RSPACE   S,H2      X11,RET6   @B@@@@          DS        A0,SLQ
)@@G@@AVER1+1       .   @B@@@@          S         X1,XSAVE1         .   @B@@@@LR
)@@G@@          S         X2,XSAVE1+1       .   @B@@@@          S         X3,SLS
)@@G@@AVER1         .   @G@@@@          LMJ       X11,PACKPG        . PACK PAGLT
)@@G@@E IF NOT ALREADY PACKED @A@@@@          DL        A0,SAVER1+1     @B@@@@LU
)@@G@@          L         X1,XSAVE1         .   @B@@@@          L         X2,XLV
)@@G@@SAVE1+1       .   @B@@@@          L         X3,SAVER1         .   @E@@@@LW
)@@G@@         L,H2      A1,2,X9   . $P # OF FREE WRDS TO A1      @C@@@@      LX
)@@G@@   TNZ       A1        . $T ANY FREE WRDS @C@@@@         J         NOSPALY
)@@G@@C    . $A NO,NOSPAC YES @^@@@@         L,U      A0,100@^@@@@         AN LZ
)@@G@@      A0,A4 @E@@@@         L        A4,A0    . COMPLEMENT OF PAGE FILL TMA
)@@G@@O A4  @C@@@@         L,H1     A1,2,X9  . PAGE SIZE TO A1    @D@@@@ . IT MB
)@@G@@WAS DECIDED NOT TO SUBTRACT ADDITIONAL # OF     @B@@@@ . CALC CHAINS TO MC
)@@G@@BE CONSISTENT WITH DMR  @D@@@@         AN,U     A1,10    . SUBTRACT PAGEMD
)@@G@@ HEADER     @A@@@@         MSI       A1,A4     .      @G@@@@ .          ME
)@@G@@   A4 HAS COMPLEMENT OF PERCENTAGE FILL FOR THAT PAGE       @ @@@@      MF
)@@G@@   DSL      A1,36    .  @G@@@@         DI,U      A1,100    . $P AVAILABLMG
)@@G@@E SPACE WITH FILL FAC TO A1   @E@@@@          TNZ       A2              MH
)@@G@@  . $ ROUND NUMBER UP   @B@@@@          J         $+2               .   MI
)@@G@@@B@@@@          AA,U      A1,1              .   @F@@@@         L,H2     MJ
)@@G@@A0,2,X9   . NUMBER OF FREE WORDS ON PAGE TO A0  @E@@@@         AN       MK
)@@G@@A0,A1     . NUMBER OF NEW AVAILABLE       @C@@@@         L        A1,A0 ML
)@@G@@    . TRANSFER TO A1    @C@@@@        TLE,U     A1,1      . ANY AVAILABLMM
)@@G@@E     @C@@@@         J        NOSPAC   . NO SPACE ON PAGE   @ @@@@      MN
)@@G@@   DS        A3,RSPSA2  @ @@@@         S         A1,RSPSA1  @E@@@@      MO
)@@G@@   LMJ       X11,SLTFND    . $W ANY AVAILABLE SLOT    @ @@@@        DL  MP
)@@G@@     A3,RSPSA2    @ @@@@         L         A1,RSPSA1  @F@@@@          TNMQ
)@@G@@Z       A2                . $T FOUND ANY SLOT TO USE  @E@@@@          J MR
)@@G@@        SPNGT1            . $A YES,SPNGT1 NO    @F@@@@SPNSLT   A,U      MS
)@@G@@ A3,1      . $P INCREMENT RECORD LNGTH BY SLOT  @G@@@@SPNGT1    TLE     MT
)@@G@@  A1,A3             . $T REC LENGTH <= AVAILABLE      @E@@@@         J  MU
)@@G@@       NOSPAC    . $A YES,NOSPAC NO,RSCON1      @F@@@@RSCON1   L,U      MV
)@@G@@ A2,0      . $P SET SUCCESSFUL CONDITION CODE   @B@@@@         J        MW
)@@G@@ RSPEXT    . $J RSPEXT  @E@@@@NOSPAC   L,U       A2,1      . $P SET CONDMX
)@@G@@ CODE UNSUCCESSFUL@^@@@@RSPEXT   J         *RET6@[@@@@ .    @G@@@@ . SUBMY
)@@G@@ROUTINE WHICH ALLOCATES A SLOT ON A DATA PAGE AND ASSIGNS AN      @E@@@@MZ
)@@G@@ . APPROPRIATE RECORD NUMBER ASSOCIATED WITH THAT SLOT      @B@@@@ . UPONA
)@@G@@N ENTRY X9 POINTS TO THE DATA PAGE  @E@@@@ .            X8 POINTS TO THENB
)@@G@@ FIRST SLOT ON THE DATA PAGE  @[@@@@ .    @E@@@@ . UPON EXIT  A0 CONTAINNC
)@@G@@S THE VALUE OF THE SLOT ALLOCATED   @C@@@@ .            A2 CONTAINS THE ND
)@@G@@RETURN CODE;      @D@@@@ .                  RET CODE=0  SLOT HAS BEEN RENE
)@@G@@USED  @E@@@@ .                 RET CODE=1  NEW SLOT HAS BEEN ASSIGNED   NF
)@@G@@@B@@@@ .            A1 CONTAINS SLOT NUMBER     @C@@@@ .            A3 CNG
)@@G@@ONTAINS RECORD NUMBER ASSIGNED@B@@@@ .            X8 POINTS TO SLOT ASSINH
)@@G@@GNED  @ @@@@ . OTHER REGISTERS USED: X7   @[@@@@ .    @C@@@@RNUSLT   S,HNI
)@@G@@2      X11,RET1   . $H RNUSLT       @E@@@@         TNZ,H1    3,X9       NJ
)@@G@@. $T ANY SLOTS ALLOCATED      @C@@@@         J         FIRSLT     . $A NNK
)@@G@@O,FIRSLT YES@A@@@@         L         X8,FSLTVA   . S  @E@@@@         LMJNL
)@@G@@       X11,SLTFND . $W FIND 1ST UNUSED SLOT     @E@@@@                  NM
)@@G@@           . X8 WILL POINT TO SLOT FOUND  @D@@@@         TNZ       A2   NN
)@@G@@      . $T ANY UNUSED SLOTS   @C@@@@         J         RNRUSE     . $A YNO
)@@G@@ES,RNRUSE NO@G@@@@                              .    X8 MUST POINT TO NENP
)@@G@@XT HIGHER SLOT    @E@@@@         L,U       A2,1       . $P RETURN CODE, NQ
)@@G@@NEW SLOT    @G@@@@                              .    SEARCH FOR HIGHEST NR
)@@G@@RECORD NUMBER     @A@@@@RNUG06   L         X7,FSLTVA    .   @G@@@@      NS
)@@G@@   LXI,U     X7,-1    . X7 WILL BE USED TO INDEX THROUGH SLOTS    @F@@@@NT
)@@G@@         SZ        RNLARG    . $P RESET LARGEST RECORD NUMBER     @G@@@@NU
)@@G@@         L,H1      A1,3,X9   . $P #OF SLOTS TO A1 FOR LOOP CONTROL      NV
)@@G@@@^@@@@         AN,U      A1,1 @E@@@@RNULP1   L,H1      A3,0,*X7 . $P FIRNW
)@@G@@ST HALF OF SLOT TO A3   @^@@@@         LSSL      A3,24@F@@@@         SSLNX
)@@G@@       A3,24     . $P POSITION RECORD # CORRECTLY     @G@@@@         TG NY
)@@G@@       A3,RNLARG . $T LARGEST NUMBER LARGER THAN REC # FOUND@C@@@@      NZ
)@@G@@   J         RNG01     . $A NO,RNG01 YES  @C@@@@RNG02    JGD       A1,RNOA
)@@G@@ULP1 . $P CONTINUE      @E@@@@         TZ,S1     0,X9      . $T REC NUM OB
)@@G@@SEARCH SWITCH SET @G@@@@         J         RNG04     . $A YES,RNG04 NO  OC
)@@G@@       NO LOWER REC #   @E@@@@         L,H1      A1,3,X9   . $P # OF SLOOD
)@@G@@TS ALLOCATED TO A1@G@@@@         TLE       A1,RNLARG . $T # OF SLOTS ALLOE
)@@G@@OCATED LESS OR EQUAL ;  @E@@@@                             . $ TO LARGESOF
)@@G@@T RECORD NUMBER   @C@@@@         J         RNG06    . $A NO,RNG06 YES   OG
)@@G@@@G@@@@         J         RNG04     . $J RNG04  NO  SEARCH FOR LOWER REC OH
)@@G@@#     @E@@@@RNG06    L         A3,RNLARG . $P GET LARGEST RECORD NUMBER OI
)@@G@@@F@@@@         AN,U     A1,1     . A1 WILL ASSURE AGAINST INF SEARCH    OJ
)@@G@@@E@@@@RNULP2   AN,U      A3,1      . $P GET LOWER REC # TO A3     @C@@@@OK
)@@G@@         S         A1,RNUSA1 . SAVE LOOP CONTROL@D@@@@         TNE,U    OL
)@@G@@ A3,1      . $T RECORD # EQUAL 1    @C@@@@         J         RNG03     .OM
)@@G@@ $A YES,RNG03 NO  @G@@@@RNG05    LMJ      X11,RECDUP . $W RECDUP SEARCH ON
)@@G@@FOR DUPLICATE REC #     @A@@@@   . L$SNAP 'RECDUP',6,12,RET1      @D@@@@OO
)@@G@@         TZ        A2        . $T FOUND DUPLICATE     @G@@@@         J  OP
)@@G@@       RNFND1    . $A NO,RNFND1 YES   HAVE PROPER REC #     @D@@@@      OQ
)@@G@@   L        A1,RNUSA1 . RESTORE LOOP CONTROL    @G@@@@         JGD      OR
)@@G@@ A1,RNULP2 . $J RNULP2  CHECK FOR INF LOOP BEFORE     @ @@@@         SLJOS
)@@G@@       RER047     @G@@@@RNG01    S         A3,RNLARG . $P REPLACE LARGESOT
)@@G@@T RECORD NUM BY NEW     @B@@@@         J         RNG02     . $J RNG02   OU
)@@G@@@^@@@@RNG03    L,U       A0,1 @G@@@@         S,S1      A0,0,X9   . $P SEOV
)@@G@@T SWITCH TO INDICATE NO SEARCH      @E@@@@         J         RNG05     .OW
)@@G@@ $J RNG05 FIND ANY DUPLICATE  @ @@@@RNG04    L         A3,RNLARG  @E@@@@OX
)@@G@@         A,U       A3,1      . $P INCREMENT RECORD NUMBER   @ @@@@      OY
)@@G@@   S         A3,RNLARG  @B@@@@         J         RNFND1    . $J RNFND1  OZ
)@@G@@@F@@@@RNRUSE   L,U       A2,0      . $P RET CODE = SLOT BEEN REUSED     PA
)@@G@@@F@@@@         L,H1      A3,0,X8   . $P GET FIRST HALF OF SLOT TO A3    PB
)@@G@@@E@@@@         LSSL      A3,24      . $P GET RID OF EXTRA BITS    @E@@@@PC
)@@G@@         SSL       A3,24     . $P POSITION RECORD # PROPERLY@F@@@@      PD
)@@G@@   TNZ       A3        . $T DOES SLOT HAVE RECORD NUMBER    @C@@@@      PE
)@@G@@   J         RNUG06  . $A NO,RNUG06 YES   @F@@@@         J         RNFNDPF
)@@G@@1  . $J RNFND1 RECORD # FOUND IN SLOT     @ @@@@FIRSLT   . NO SLOTS ASSIPG
)@@G@@GNED  @G@@@@         L,U       A2,1    . $P INDICATE NEW SLOT HAS BEEN APH
)@@G@@SSIGNED     @G@@@@         L,U       A3,1    . $P ASSIGN RECORD NUMBER 1PI
)@@G@@ SINCE PAGE EMPT  @G@@@@         . SLOT ASSIGNED IS FIRST ONE POINTED TOPJ
)@@G@@ BY X8 AT THIS TIME     @E@@@@         S,S1      A3,0,X9 . $P SET NO SEAPK
)@@G@@RCH SWITCH ON PAGE@B@@@@         J         RNFND1  . $J RNFND1    @E@@@@PL
)@@G@@RNFND1   TG,U      A3,1      . $T RECORD NUMBER POSITIVE    @C@@@@      PM
)@@G@@   J         RNUEXT    . $A NO,RNUEXT YES @B@@@@         SLJ       RER04PN
)@@G@@8    . $P ERROR   @B@@@@RNUEXT   . STANDARD EXIT FROM PROGRAM     @E@@@@PO
)@@G@@         L         A0,0,X8   . $P SLOT VALUE TO A0 FOR CHECK@A@@@@      PP
)@@G@@   LXI,U               X8,0   @A@@@@         L         A1,FSLTVA .      PQ
)@@G@@@A@@@@         LXI,U               A1,0   @^@@@@         A,U       A1,1 PR
)@@G@@@D@@@@         AN        A1,X8     . $P SLOT NUMBER TO A1   @E@@@@      PS
)@@G@@   A,H1     A1,6,X9  . ADD NUMBER OF ADDITIONAL CALC  @B@@@@         J  PT
)@@G@@       *RET1     . $E RETURN  @[@@@@ .    @F@@@@ . SUBROUTINE WHICH SCANPU
)@@G@@S THE ALLOCATED SLOTS ON A DATA PAGE AND  @C@@@@ . DETERMINES IF THERE IPV
)@@G@@S AN UNUSED SLOT.       @C@@@@ . UPON ENTRY  X9 POINTS TO THE DATA PAGE PW
)@@G@@      @D@@@@ .             X8 POINTS TO FIRST SLOT ON THE PAGE    @[@@@@PX
)@@G@@ .    @F@@@@ . UPON RETURN A2 HAS RETURN CODE; O=SUCCESSFUL, 1=UNSUCCESSPY
)@@G@@FUL   @C@@@@ .             A3 HAS SLOT VALUE IF FOUND       @[@@@@ .    PZ
)@@G@@@B@@@@ .             X8 POINTS TO SLOT FOUND    @^@@@@ . OTHER REGISTERSQA
)@@G@@ USED:@[@@@@ .    @B@@@@SLTFND   S,H2      X11,RET2  . $H SLTFND  @E@@@@QB
)@@G@@         TZ,S2     0,X9      . $T PAGE SEARCHED BEFORE      @C@@@@      QC
)@@G@@   J         SLNFND    . $A YES,SLNFND NO @E@@@@         LXI,U     X8,-1QD
)@@G@@     . $P X8 TO INDEX THROUGH SLOTS @E@@@@         L,H1      A1,3,X9   .QE
)@@G@@ $P # OF SLOTS ALLOCATED TO A1@E@@@@         TNZ       A1        . $T ANQF
)@@G@@Y SLOTS ALLOCATED       @C@@@@         J         SLTEND    . $A NO,SLTENQG
)@@G@@D YES @E@@@@         AN,U      A1,1      . $P A1 WILL CONTROL LOOP      QH
)@@G@@@D@@@@SLLOOP   L         A3,0,*X8  . $P SLOT VALUE TO A3    @G@@@@      QI
)@@G@@   AND       A3,SIUMSK . $P MASK SLOT DESCRIPTION TO SEE IF IN USE@C@@@@QJ
)@@G@@         TZ        A4        . $T SLOT IN USE   @C@@@@         J        QK
)@@G@@ SLTYES    . $A NO,SLTYES YES @G@@@@         JGD       A1,SLLOOP . $P DEQL
)@@G@@CREMENT LOOP CNT AND CHECK FOR ZERO @B@@@@ .                           .QM
)@@G@@ $J SLLOOP  @E@@@@SLTEND   L,U       A2,1      . $P NO UNUSED SLOT FOUNDQN
)@@G@@      @G@@@@         S,S2      A0,0,X9   . $P MARK 2ND SIXTH OF CHECKSUMQO
)@@G@@ FOR LATER  @B@@@@         J         SLTEXT    . $J SLTEXT  @C@@@@SLNFNDQP
)@@G@@   L,U       A2,1      . $P NO SLOT FOUND @E@@@@         L         X8,FSQQ
)@@G@@LTVA . $P GET NEXT SLOT ASSIGNED    @ @@@@         AN,H1    X8,3,X9     QR
)@@G@@@B@@@@         J         SLTEXT    . $J SLTEXT  @D@@@@SLTYES   L,U      QS
)@@G@@ A2,0      . $P UNUSED SLOT FOUND   @E@@@@         A,U       X8,1      .QT
)@@G@@ $P X8 POINTS TO SLOT FOUND   @B@@@@SLTEXT   J         *RET2     . $E EXQU
)@@G@@IT    @[@@@@ .    @G@@@@ . SUBROUTINE WHICH CHECKS IF A RECORD CODE IS DQV
)@@G@@UPLICATED IN A SLOT     @^@@@@ . ON A DATA PAGE       @B@@@@ . UPON ENTRQW
)@@G@@Y  X9 POINTS TO DATA PAGE     @C@@@@ .             X8 POINTS TO FIRST SLQX
)@@G@@OT ON PAGE  @D@@@@ .             A3 HAS RECORD NUMBER TO BE CHECKED     QY
)@@G@@@[@@@@ .    @F@@@@ . UPON RETURN A2 HAS RETURN CODE; 0=SUCCESSFUL, 1=UNSQZ
)@@G@@UCCESSFUL   @[@@@@ .    @B@@@@RECDUP   S,H2      X11,RET3  . $H DUPNUM  RA
)@@G@@@E@@@@         L         X8,FSLTVA       . POINT TO FIRST SLOT    @G@@@@RB
)@@G@@         LXI,U     X8,-1     . $P X8 WILL INDEX AUTOMATICALLY (SLOTS)   RC
)@@G@@@E@@@@         L,H1      A1,3,X9   . $P # OF SLOTS ALLOCATED TO A1@E@@@@RD
)@@G@@         TNZ       A1        . $T ANY SLOTS ALLOCATED       @C@@@@      RE
)@@G@@   J         ERR       . $A NO,ERR YES    @E@@@@         AN,U      A1,1 RF
)@@G@@     . $P A1 WILL CONTROL THE LOOP  @E@@@@DUPLOP   L,H1      A0,0,*X8  .RG
)@@G@@ $P FIRST HALF OF SLOT TO A0  @^@@@@         LSSL      A0,24@F@@@@      RH
)@@G@@   SSL       A0,24  . $P POSITION RECORD NUMBER PROPERLY    @E@@@@      RI
)@@G@@   TNE       A3,A0     . $T RECORD NUMBERS EQUAL      @C@@@@         J  RJ
)@@G@@       DUPFND    . $A YES,DUPFND NO @D@@@@         JGD       A1,DUPLOP .RK
)@@G@@ $P DECREMENT LOOP CNT  @D@@@@         L,U       A2,1      . $T EXHAUSTERL
)@@G@@D SLOTS     @E@@@@         J         DUPEXT    . $A NO,DUPLOP YES DUPEXTRM
)@@G@@      @E@@@@DUPFND   L,U       A2,0      . $P SET SUCCESSFUL RETURN CODERN
)@@G@@@B@@@@DUPEXT   J         *RET3     . $E EXIT    @B@@@@ERR      SLJ      RO
)@@G@@ RER049    . $W ERR     @[@@@@ .    @G@@@@ . SUBROUTINE WHICH STORES A RRP
)@@G@@ECORD ON A DATA PAGE. IT ASSUMES ENOUGH   @A@@@@ . SPACE IS AVAILABLE FORQ
)@@G@@R RECORD    @F@@@@ . UPON ENTRY  A1 HAS RECORD LENGTH IN WORDS INCLUDINGRR
)@@G@@ HEADER     @G@@@@ .             A2 HAS FLAG WHETHER A SLOT HAS BEEN REURS
)@@G@@SED (0) OR NEW    @C@@@@ .             A3 HAS NEW RECORD NUMBER ASSIGND RT
)@@G@@@E@@@@ .             X1 POINTS TO RECORD LOCATION BEFORE STORING  @F@@@@RU
)@@G@@ .             X8 POINTS TO SLOT THAT HAS BEEN ALLOCATED ON PAGE  @B@@@@RV
)@@G@@ .             X9 POINTS TO DATA PAGE     @[@@@@ .    @A@@@@ . OTHER REGRW
)@@G@@ISTERS USED  A4,X2,X3   @[@@@@ .    @B@@@@RSTORE   S,H2      X11,RET4  .RX
)@@G@@ $H RSTORE  @E@@@@         L,H2      A4,2,X9   . $P # OF FREE WRDS TO A4RY
)@@G@@      @G@@@@         TNZ       A2        . $T IS SLOT NEWLY ASSIGNED OR RZ
)@@G@@REUSED      @D@@@@         J         RSTG01    . $A REUSED,RSTG01 NEW   SA
)@@G@@@E@@@@         L,H1      A0,3,X9   . $P TOTAL # OF SLOTS TO A0    @G@@@@SB
)@@G@@         A,U       A0,1      . $P UPDATE TOTAL # OF SLOTS ON PAGE       SC
)@@G@@@F@@@@         S,H1      A0,3,X9   . $P STORE BACK TOTAL # OF SLOTS     SD
)@@G@@@E@@@@         AN,U      A4,1      . $P DECREMENT # OF FREE WORDS @E@@@@SE
)@@G@@RSTG01   S,H1      A3,0,X8   . $P RECORD # TO H1 OF SLOT    @G@@@@      SF
)@@G@@   L,H2      X3,3,X9   . $P RELATIVE LOCATION OF RECORD ON PAGE   @F@@@@SG
)@@G@@         S,H2      X3,0,X8  . $P STORE RELATIVE LOCATION IN SLOT  @A@@@@SH
)@@G@@         L         X2,X3     .      @G@@@@         A         X2,X9     .SI
)@@G@@ $P X2 POINTS TO NEW RECORD LOCATION      @E@@@@         L         R1,A1SJ
)@@G@@     . PREPARE TO TRANSFER RECORD   @F@@@@         LMJ   X11,PTRANS    .SK
)@@G@@ $W TRANSFER ENTIRE RECORD TO PAGE  @^@@@@         L,U       A0,1 @G@@@@SL
)@@G@@         S,S3      A0,0,X9   . $P MARK CHECKSUM (PAGE WRITTEN ONTO)     SM
)@@G@@@E@@@@         AN        A4,A1     . $P UPDATE # OF FREE WORDS    @F@@@@SN
)@@G@@          TNZ       A4                . $T # OF FREE WRDS ZERO    @D@@@@SO
)@@G@@          J         RSTGT1            . $J RSTGT1     @G@@@@         S,HSP
)@@G@@2      A4,2,X9   . $P STORE NEW # OF FREE WRDS ON PAGE      @E@@@@      SQ
)@@G@@   A         X3,A1     . $P UPDATE RELATIVE POINTER   @E@@@@         S,HSR
)@@G@@2      X3,3,X9   . $P STORE  NEW FREE POINTER   @G@@@@         A        SS
)@@G@@ X3,X9     . $P POINT TO FIRST WRD OF FREE SPACE      @E@@@@         S  ST
)@@G@@       A4,0,X3   . $P STORE NEW # OF FREE WRDS  @^@@@@         J        SU
)@@G@@ *RET4@]@@@@RSTGT1 .    @G@@@@          SZ,H2     2,X9              . $PSV
)@@G@@ ZERO NUMBER OF FREE WRDS     @E@@@@          SZ,H2     3,X9            SW
)@@G@@  . $P ZERO RELATIVE PTR@C@@@@          J         *RET4             . $ESX
)@@G@@ EXIT @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @D@@@@ . SUBROUTINSY
)@@G@@E TO FIND NEXT CALC POINTER IN A CHAIN    @G@@@@ . UPON ENTRY A3 HAS SLOSZ
)@@G@@T NUMBER FOR RECORD POINTED TO; SLOT IS ON SAME @G@@@@ .               PTA
)@@G@@AGE WHOSE ADDRESS IS IN LOCATION CURADD AND PAGE NUMBR@A@@@@ .          TB
)@@G@@     IS IN CURPGE.      @[@@@@ .    @[@@@@ .    @F@@@@ . UPON RETURN A0 TC
)@@G@@CONTAINS THE VALUE OF THE NEXT CALC POINTER     @G@@@@ .             FORTD
)@@G@@RSW IS NON ZERO IF THE RECORD POINTED TO IS FOREIGN   @G@@@@ .          TE
)@@G@@   FORPGE CONTAINS NUMBER OF PAGE WHERE FOREIGN REC RESIDES @E@@@@ .    TF
)@@G@@                IF ANY [CASE WHEN FORRSW IS NON ZERO] @F@@@@ .          TG
)@@G@@   FORREC CONTAINS THE FOREIGN RECORD NUMBER IF ANY   @[@@@@ .    @C@@@@TH
)@@G@@ .             LSRADD CONTAINS REC ADDRESS      @G@@@@ .             LSRTI
)@@G@@REL CONTAINS RELATIVE LOCATION OF CALC POINTER WITHIN @ @@@@ .          TJ
)@@G@@          RECORD  @E@@@@ .             CLCSLT CONTAINS CALC RECORD SLOT TK
)@@G@@NUMBER      @[@@@@ .    @^@@@@FNXTCL    +         0   @F@@@@          SZTL
)@@G@@        FORRSW      . $P ZERO FOREIGN RECORD SWITCH   @E@@@@          L TM
)@@G@@        X9,CURADD  . $P PAGE ADDRESS TO X9      @E@@@@          L       TN
)@@G@@  X8,X9      . $P PAGE ADDRESS TO X8      @F@@@@          A,H1      X8,2TO
)@@G@@,X9    . $P POINT PAST THE PAGE BY X8     @G@@@@          AN        X8,ATP
)@@G@@3      . $P POINT TO SLOT GIVEN BY POINTER BY X8@G@@@@          L       TQ
)@@G@@  A1,0,X8    . $P VALUE OF SLOT POINTED TO TO A1      @G@@@@          ANTR
)@@G@@D       A1,SIUMSK  . $P MASK SLOT DESCRIPTION TO SEE IF USED@C@@@@      TS
)@@G@@    TZ        A2         . $T SLOT USED   @C@@@@          SLJ       RER0TT
)@@G@@50     . $A NO,EXIT YES @G@@@@          AND       A1,SHPMSK  . $P MASK STU
)@@G@@LOT DESCRIPTION TO SEE IF;    @G@@@@                               . $  TV
)@@G@@SECOND HALF OF SLOT IS PAGE #       @F@@@@          TZ        A2        TW
)@@G@@ . $T SLOT SECOND HALF IS PAGE #    @D@@@@          J         ROAPGE    TX
)@@G@@ . $A YES,ROAPGE NO     @ @@@@ . RECORD IS ON THIS PAGE     @E@@@@      TY
)@@G@@    L         X7,X9      . $P X7 POINTS TO TOP OF PAGE@F@@@@          A,TZ
)@@G@@H2      X7,0,X8    . $P X7 POINTS TO RECORD ON PAGE   @D@@@@          L,UA
)@@G@@T1      A1,0,X7   . $P RECORD CODE TO A1  @G@@@@          SLJ       CLPFUB
)@@G@@ND    . $W CLPFND GET RELATIVE LOCATION OF CALC @E@@@@          TZ      UC
)@@G@@  A2        .    X1 WILL CONTAIN RELATIVE @A@@@@          SLJ       RER0UD
)@@G@@51    .     @A@@@@          L         A0,CURPGE       @E@@@@          S UE
)@@G@@        A0,LSTPGE    . $P SAVE PAGE FOR LATER   @E@@@@          S       UF
)@@G@@  X7,LSRADD   . $P SAVE RECORD ADDRESS    @G@@@@          S         X1,LUG
)@@G@@SRREL   . $P SAVE CALC PTR REL LOC IN RECORD    @E@@@@          L       UH
)@@G@@  A0,CLCSLT   . $P SAVE CALC RECORD SLOT  @E@@@@          S         A0,LUI
)@@G@@SRSLT   . $P SAVE CALC RECORD SLOT  @E@@@@          A         X7,X1     UJ
)@@G@@. $P X7 POINTS TO CALC PTR    @D@@@@          L         A0,0,X7   . $P CUK
)@@G@@ALC PTR TO A0     @F@@@@          S         A0,CLNXTP . $P SAVE CALC POIUL
)@@G@@NTER IN CLSAVP    @G@@@@          J        *FNXTCL    . $J CCHNE1 SEE IFUM
)@@G@@ WE POINT TO ANOTHER PGE@G@@@@ROAPGE . RECORD HAS BEEN DISCOVERED TO BE UN
)@@G@@ON A FOREIGN PAGE IN THE      @C@@@@       . PROCESS OF SCANNING THE CALUO
)@@G@@C CHAIN     @A@@@@       . X8 POINTS TO SLOT OF RECORD@E@@@@          S,UP
)@@G@@H2      A1,FORPGE . $P SAVE FOREIGN PAGE NUMBER @E@@@@          L       UQ
)@@G@@  A0,CLCSLT   . $P SLOTBCONSIDERED TO A0  @G@@@@          S         A0,LUR
)@@G@@SRSLT   . $P SAVE SLOT CONSIDERED IN LSRSLT     @^@@@@          LSSL    US
)@@G@@  A1,6@ @@@@          SSL       A1,24     @F@@@@          S,H2      A1,FUT
)@@G@@ORREC  . $P SAVE FOREIGN RECORD NUMBER    @C@@@@          L,H2      A7,0UU
)@@G@@,X8   . $P PAGE # TO A7 @D@@@@          L         A8,CURARE . $P AREA COUV
)@@G@@DE   TO A8  @[@@@@ .    @B@@@@ . CHECK IF PAGE IS ALREADY IN BUFFER     UW
)@@G@@@[@@@@ .    @G@@@@          L         A15,BUFENT . $P # OF ENTRIES IN BUUX
)@@G@@FFER TO A15       @G@@@@          AN,U      A15,1      . $P A15 WILL CONUY
)@@G@@TROL LOOP FOR BLOCKS    @G@@@@          L         X4,BFIADD  . $P ADDRESUZ
)@@G@@S OF BUFFER TABLE TO X4       @D@@@@CLFLP1    TNE,T1    A8,0,X4    . $T VA
)@@G@@AREA CODES EQUAL  @D@@@@          J         CLAEQU     . $A YES,CLAEQU NVB
)@@G@@O     @^@@@@CLFLP2    A,U       X4,2@G@@@@          JGD       A15,CLFLP1VC
)@@G@@ . $T ARE WE DONE WITH ALL ENTRIES IN BUF @D@@@@                        VD
)@@G@@       . $A NO,CLFLP1 YES     @ @@@@          J         CLNIBF    @G@@@@VE
)@@G@@CLAEQU . AREA CODES EQUAL, CHECK IF PAGE IS IN PROPER RANGE IN BUFFER   VF
)@@G@@@^@@@@       . PAGE # IN A7   @G@@@@          TLE,H1    A7,1,X4    . $T VG
)@@G@@IS LOWER LIMIT LESS OR EQUAL PAGE # @G@@@@          J         CLFLP2    VH
)@@G@@ . $A NO,CLFLP2 YES CHECK OTHER RANGE     @E@@@@          L,H2      A10,VI
)@@G@@1,X4   . $P HIGHER LIMIT TO A10     @G@@@@          TG        A10,A7    VJ
)@@G@@ . $T IS PAGE # GREATER THAN UPPER LIMIT  @G@@@@          J         CLPGVK
)@@G@@FD     . $J CLPGND YES PAGE REQUIRED IS IN      @G@@@@          J       VL
)@@G@@  CLFLP2     . $J CLFLP2 NO GO LOOK AT OTHER BLOCKS   @[@@@@ .    @G@@@@VM
)@@G@@CLPGFD . PAGE OF FOREIGN RECORD FOUND IN BUFFER, GET ADDRESS OF PGE TOX7VN
)@@G@@@C@@@@          L         A0,A7      . $P PAGE # TO A0@G@@@@          ANVO
)@@G@@,H1     A0,1,X4    . $P SUBTRACT FIRST PAGE # IN BLOCK      @E@@@@      VP
)@@G@@    L,H2      A1,0,X4    . $P ADDRESS OF BLOCK TO A1  @F@@@@          MSVQ
)@@G@@I,H1    A0,2,A1           . MULTIPLY BY PAGE SIZE     @E@@@@          A VR
)@@G@@        A1,A0      . $P PAGE ADDRESS TO A7      @A@@@@          L       VS
)@@G@@  X7,A1      .    @C@@@@          J         CLCGT1     . $J CLCGT1      VT
)@@G@@@A@@@@ . READ PAGE WHERE FOREIGN RECORD IS@]@@@@CLNIBF .    @G@@@@      VU
)@@G@@    L         A0,NEWC3A  . $P ADDRESS OF C3 AREA ENTRY TO A0      @E@@@@VV
)@@G@@          DL        A1,1,A0    . $P AREA NAME TO A1,A2      @E@@@@      VW
)@@G@@    L         A3,020     . $P FUNCTION CODE TO A3     @F@@@@          L,VX
)@@G@@U       X10,DBPPKT  . $P ADDRESS OF PACKET TO X10     @G@@@@          S,VY
)@@G@@S2      A3,3,X10   . $P FUNCTION CODE TO PACKET (READ)      @E@@@@      VZ
)@@G@@    DS        A1,DBPPKT  . $P AREA NAME TO PACKET     @E@@@@          L,WA
)@@G@@U       A4,1       . $P PAGE COUNT 1 TO A4      @E@@@@          S,H1    WB
)@@G@@  A4,7,X10   . $P PAGE COUNT 1 TO PACKET  @B@@@@          LA,T1     A5,3WC
)@@G@@,A0           .   @E@@@@          S,H1      A5,8,X10   . $P BUFFER LENGTWD
)@@G@@H TO PACKET @E@@@@          LA        A3,FORBFAD . $P BUFFER ADDRESS TO WE
)@@G@@A3    @B@@@@          JNZ       A3,$+2            .   @B@@@@          SLWF
)@@G@@J       FORMCORE          .   @E@@@@          S,H2      A3,7,X10   . $P WG
)@@G@@BUFFER ADDRESS TO PACKET@E@@@@          S,H2      A7,8,X10   . $P PAGE NWH
)@@G@@UMBER TO PACKET   @H@@@@          LMJ       X11,DB$AM  . $W DB$AM ISSUE WI
)@@G@@THE READ FOR FOREIGN PAGE     @E@@@@          TZ,S1     DBPPKT+3   . $T WJ
)@@G@@SUCCESSFUL IN THE READ  @D@@@@          J         BRSTAT     . $A NO,BRSWK
)@@G@@TAT YES     @[@@@@ .    @G@@@@ . PAGE HAS BEEN READ INTO FOREIGN BUF PROWL
)@@G@@CEED TO FIND RECORD ON PAGE   @A@@@@          L         X7,FORBFAD      WM
)@@G@@@[@@@@ .    @G@@@@CLCGT1 . FOR    PAGE ADDRESS IN X7, SEA CH FOR RECO D+WN
)@@G@@CODE WHICH CAN BE @G@@@@      . FOUND IN LOCATION FORREC. X6 WILL BE USEWO
)@@G@@D TO INDEX THROUGH SLOTS@E@@@@          L         X6,X7      . $P PAGE AWP
)@@G@@DDRESS TO X6      @E@@@@          A,H1      X6,2,X7    . $P X6 POINTS PAWQ
)@@G@@ST THE PAGE @G@@@@          AN,U      X6,1       . $P X6 POINTS TO LAST WR
)@@G@@WORD IN PAGE      @G@@@@          AN,H1     X6,6,X7    . $P X6 POINTS TOWS
)@@G@@ FIRST SLOT IN PAGE     @G@@@@                               . $P X6 WILWT
)@@G@@L BE USED TO INDEX THROUGH SLT@F@@@@          L,H1      A15,3,X7   . $P WU
)@@G@@# OF SLOTS ALLOCATED TO A15   @E@@@@          TNZ       A15        . $T WV
)@@G@@ANY SLOTS ALLOCATED     @C@@@@          SLJ       RER052     . $A NO,EXIWW
)@@G@@T YES @E@@@@          AN,U      A15,1      . $P A15 WILL CONTROL LOOP   WX
)@@G@@@[@@@@ .    @]@@@@CFRLP1 .    @D@@@@          L         A3,0,X6    . $P WY
)@@G@@SLOT VALUE TO A3  @G@@@@          AND       A3,SIUMSK  . $P MASK SLOT DEWZ
)@@G@@SCRIPTION TO SEE IF USED@C@@@@          TNZ       A4         . $T SLOT IXA
)@@G@@N USE @D@@@@          J         CLSLIU     . $A YES,CLSLIU NO     @E@@@@XB
)@@G@@CFRLP2    AN,U      X6,1       . $P POINT TO NEXT SLOT      @D@@@@      XC
)@@G@@    JGD       A15,CFRLP1 . $T ANY MORE SLOTS    @E@@@@          SLJ     XD
)@@G@@  RER053     . $A YES,CFRLP1 NO,EXIT ERROR@C@@@@CLSLIU . SLOT FOUND SEARXE
)@@G@@CHING FOR FOREIGN RECORD@G@@@@       . CHECK IF SLOT BELONGS TO FOREIGN XF
)@@G@@RECORD, SLOT POINTED TO BY X6 @E@@@@       . FIRST FIND OUT IF RECORD NUXG
)@@G@@MBERS ARE THE SAME      @D@@@@          L         A0,0,X6    . $P SLOT VXH
)@@G@@ALUE TO A0  @D@@@@          AND       A0,RFPMSK . $T IS RECORD FOREIGN  XI
)@@G@@@C@@@@          TNZ       A1        . $A NO,CLCGT2 YES@A@@@@          J XJ
)@@G@@        CLCGT2    . $   @A@@@@CLCGT2    LSSL      A0,6       .    @G@@@@XK
)@@G@@          SSL       A0,24      . $P RECORD # POSITIONED IN LOWER HALF A0XL
)@@G@@@G@@@@          TE        A0,FORREC  . $T IS RECORD CODE SAME AS FOREIGNXM
)@@G@@ REC  @D@@@@          J         CFRLP2     . $A NO,CFRLP2 YES     @E@@@@XN
)@@G@@          L         X2,X7      . $P PAGE ADDRESS TO X2      @F@@@@      XO
)@@G@@    A,H2      X2,0,X6    . $P X2 POINTS TO FOREIGN RECORD   @E@@@@      XP
)@@G@@    L         A0,0,X2    . $P RECORD HEADER TO A0     @G@@@@          ANXQ
)@@G@@D       A0,PPTMSK  . $P MASK TO SEE IF PRIME PAGE SYSTEM PTR@F@@@@      XR
)@@G@@    TNZ       A1         . $  IS THERE A FOREIGN POINTER    @A@@@@      XS
)@@G@@    SLJ       RER054     .    @ @@@@          L         X3,X2     @ @@@@XT
)@@G@@          A,T3      X3,0,X2   @G@@@@          AN,U      X3,1       . $P XU
)@@G@@X3 POINTS TO PRIME PAGE POINTER     @E@@@@          L         A0,0,X3   XV
)@@G@@. $P PRIME PAGE POINTER TO A0 @G@@@@          TE        A0,CLNXTP . $T DXW
)@@G@@OES IT POINT BACK TO PRIMARY PGE SLT@G@@@@          J         CFRLP2    XX
)@@G@@. $A NO,CFRLP2 YES FOUND FOREIGN RECORD   @[@@@@ .    @E@@@@ . FOUND  FOXY
)@@G@@REIGN RECORD ON PAGE, X2 POINTS TO RECORD       @D@@@@          L,T1    XZ
)@@G@@  A1,0,X2   . $P RECORD CODE TO A1  @E@@@@          L         X4,X2     YA
)@@G@@. SAVE POINTER TO RECORD      @G@@@@          SLJ       CLPFND    . $W CYB
)@@G@@LPFND FIND CALC POINTER,(X1 REL)    @^@@@@          TNZ       A2  @ @@@@YC
)@@G@@          SLJ       RER055    @F@@@@          S         X1,LSRREL  . $P YD
)@@G@@SAVE REL LOCATION WITHIN REC  @A@@@@          L         A0,FORBFAD      YE
)@@G@@@E@@@@          A,H1      A0,2,A0    . $ POINT PAST LAST WRD      @A@@@@YF
)@@G@@          AN        A0,X6      .    @A@@@@          S         A0,FORSLT YG
)@@G@@      @^@@@@          L,U       A0,1@G@@@@          S         A0,FORRSW YH
)@@G@@. $P SET FOREIGN RECORD OCCURRENCE SWITCH @E@@@@          A         X4,XYI
)@@G@@1     . $P X4 POINTS TO CALC PTR    @E@@@@          L         A0,0,X4   YJ
)@@G@@. $P CALC POINTER TO  A0      @F@@@@          S         A0,CLNXTP . $P SYK
)@@G@@AVE CALC POINTER IN CLSAVP    @ @@@@          J         *FNXTCL   @[@@@@YL
)@@G@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @H@@@@YM
)@@G@@ . ROUTINE WHICH SEARCHES TABLE C6 FOR ENTRY CORRESPONDING TO CALC RECORYN
)@@G@@D     @A@@@@ . THE RECORD CODE IS IN REGISTER A1@C@@@@ . UPON RETURN A2 YO
)@@G@@HAS RETURN CODE 0(SUCCESSFUL) @G@@@@ .             X1 HAS RELATIVE LOCATYP
)@@G@@ION OF CALC POINTER WITHIN RECORD   @[@@@@ .    @C@@@@CLPFND .          YQ
)@@G@@            . $H CLPFND       @^@@@@          +         0   @F@@@@      YR
)@@G@@    L,H1      R1,C6     . $P # OF ENTRIES FROM C6 TO R1     @F@@@@      YS
)@@G@@    L         X2,(1,0)  . $P X2 WILL BE INDEX TO C6 TABLE   @F@@@@      YT
)@@G@@    LXM,H2      X2,C6             . $P X2 POINTS TO C6 TBL  @E@@@@      YU
)@@G@@    SE,T1     A1,0,*X2 . $T SEARCH TABLE FOR AREA CODE@C@@@@          J YV
)@@G@@        ACNFND    . $A NO,ACNFND YES@G@@@@          AN,U      X2,1      YW
)@@G@@. $P FOUND A MATCH, BACK UP INDEX REGISTER@F@@@@          SZ        A2  YX
)@@G@@      . $P CONDITION CODE SET TO ZERO     @G@@@@          L,T3      X1,0YY
)@@G@@,X2           . $P DISP OF FRST DATA WRD TO X1  @G@@@@          AN,U    YZ
)@@G@@  X1,1              . $P X1 POINTS TO FRST CALC PTR   @C@@@@          J ZA
)@@G@@        CLPEXT    . $J CLPEXT       @E@@@@ACNFND    L,U       A2,1      ZB
)@@G@@. $P SET CONDITION CODE TO 1  @B@@@@CLPEXT    J         *CLPFND   . $E EZC
)@@G@@XIT   @[@@@@ .    @[@@@@ .    @G@@@@ . SUBROUTINE TO INSERT AN ENTRY IN ZD
)@@G@@TABLE CURANG FOR THE PURPOSE OF     @G@@@@ . BUILDING C4 TABLE. THE ENTRZE
)@@G@@Y CONSISTS OF A RANGE OF OVERFLOW PAGES   @G@@@@ . WHEN CALLED, THE PAGEZF
)@@G@@ NUMBER IS IN CURPGE AND THE AREA CODE IN ARECUR@[@@@@ .    @C@@@@C4INSTZG
)@@G@@    +         0         . $H+C4INST       @C@@@@          L         A7,CZH
)@@G@@URPGE . $P PAGE # TO A7 @D@@@@          L         A8,CURARE . $P AREA COZI
)@@G@@DE TO A8    @F@@@@          SLJ       CHKPGE    . $W CHKPGE SEE WHAT TYPZJ
)@@G@@E OF PAGE   @F@@@@          TNE,U     A2,2      . $T PAGE IS INTERSPERSEZK
)@@G@@D OVERFLOW  @C@@@@          J         C4IOVF    . $A YES,C4IOVF NO@E@@@@ZL
)@@G@@          TNE,U     A2,3      . $T PAGE IS GLOBAL OVERFLOW  @C@@@@      ZM
)@@G@@    J         C4GOVF    . $A YES,C4GOVF NO@B@@@@          LA,U      A0,DZN
)@@G@@MSLEV5        .   @B@@@@          JNZ       A0,$+2            .   @ @@@@ZO
)@@G@@          SLJ       RER056    @I@@@@          TE,U      A2,1            ZP
)@@G@@  . CAN ALLOW DATA PAGE IF LEVEL 5 SW IS SET    @B@@@@          SLJ     ZQ
)@@G@@  RER056            .   @D@@@@          J         C4REXT            . $JZR
)@@G@@ C4REXT     @E@@@@ . CHKPGE WILL RETURN SUM IN A5, X8 POINTING TO C3 ENTZS
)@@G@@RY    @]@@@@C4IOVF .    @D@@@@          L         A6,A5     . $P UPPER RZT
)@@G@@ANGE TO A6  @G@@@@          AN,H1     A5,5,X8   . $P SUBTRACT INTERSPERSZU
)@@G@@ED OVERFLOW       @F@@@@          A,U       A5,1      . $+ A5 WILL CONTAZV
)@@G@@IN LOWER RANGE    @C@@@@          J         C4RSRC    . $J C4RSRC       ZW
)@@G@@@C@@@@ . CHKPGE WILL RETURN TOTAL PGES IN A3, M IN A4 @F@@@@C4GOVF    L ZX
)@@G@@        A6,A3     . $P TOTAL PAGES ALLOCATED TO A3    @G@@@@          L ZY
)@@G@@        A5,A4     . $P TOTAL ALLOCATED-AT END = M TO A5     @D@@@@      ZZ
)@@G@@    A,U       A5,1      . $+ LOWER RANGE TO A5  @ @@@@ . SEARCH C4 RANGEAA
)@@G@@  TABLE     @[@@@@ .    @E@@@@C4RSRC    L         A1,C4TBNM . $+ # OF ENAB
)@@G@@TRIES TO A1       @B@@@@          TNZ       A1        . $T A1=0   @C@@@@AC
)@@G@@          J         C4RIN1    . $A YES,C4RINS NO@E@@@@          AN,U    AD
)@@G@@  A1,1      . $P A1 WILL CONTROL LOOP     @D@@@@          L         X4,RAE
)@@G@@NGADD . $P POINTS TO TABLE    @D@@@@C4LP1     TNE,T3    A8,0,X4   . $T AAF
)@@G@@REA CODES EQUAL   @C@@@@          J         C4TRNG    . $A YES,C4TRNG NOAG
)@@G@@@E@@@@C4CON1    A,U       X4,2      . $P POINT TO NEXT ENTRY      @ @@@@AH
)@@G@@          JGD       A1,C4LP1  @^@@@@ . INSERT ENTRY IN TABLE@F@@@@C4RINSAI
)@@G@@    S,T3      A8,0,X4   . $P AREA CODE TO OVF RANGE ENTRY   @E@@@@      AJ
)@@G@@    S,H2      A6,1,X4   . $P UPPER RANGE TO ENTRY     @E@@@@          S,AK
)@@G@@H1      A5,1,X4   . $P LOWER RANGE TO ENTRY     @A@@@@          L       AL
)@@G@@  A0,C4TBNM       @B@@@@          TLE,U     A0,C4OVEN         .   @B@@@@AM
)@@G@@          J         $+2               .   @B@@@@          SLJ       RER0AN
)@@G@@57            .   @^@@@@          A,U       A0,1@G@@@@          S       AO
)@@G@@  A0,C4TBNM . $P INCREMENT # OF ENTRIES IN TABLE      @B@@@@          J AP
)@@G@@        C4REXT    . $E EXIT   @B@@@@C4RIN1     L         X4,RNGADD      AQ
)@@G@@   .  @D@@@@          J         C4RINS            . $J C4RINS     @D@@@@AR
)@@G@@C4TRNG    TE,H2     A6,1,X4   . $T EQUAL UPPER RANGE  @A@@@@          J AS
)@@G@@        C4CON1    .     @B@@@@C4REXT    J         *C4INST   . $E EXIT   AT
)@@G@@@[@@@@/     @[@@@@ .    @G@@@@ . ROUTINE THAT HANDLES ALL INTERFACE BETWAU
)@@G@@EEN THE RELOAD FUNCTION AND   @^@@@@ . THE DATA BASE.       @G@@@@ . UPOAV
)@@G@@N CALLING THE ROUTINE, X10 POINTS TO A PACKET (BUFPKT) WITH A     @A@@@@AW
)@@G@@ . FUNCTION CODE IN H2 OF WORD 0    @C@@@@ . THE FUNCTION CODES ARE DEFIAX
)@@G@@NED AS FOLLOWS.   @G@@@@ .  FUNCTION = 1  GET PAGE # SPECIFIED IN PACKETAY
)@@G@@ FROM PROPER AREA       @C@@@@ .                   WITH PAGE RANGE CHECKAZ
)@@G@@      @G@@@@ .           = 2  GET OVERFLOW PAGE NEXT TO ONE SPECIFIED INBA
)@@G@@ PACKET.    @G@@@@ .                IF END OF OVERFLOW RANGE IS REACHED,BB
)@@G@@ WRAP AROUND AND  @G@@@@ .                RETURN PAGES FROM THE BEGINNINBC
)@@G@@G OF THE RANGE UNTIL    @G@@@@ .                ALL PAGES OF THE RANGE HBD
)@@G@@AVE BEEN EXHAUSTED. IN THAT   @F@@@@ .                CASE START AT THE BE
)@@G@@BEGINNING OF THE NEXT RANGE   @G@@@@ .           = 3  GET THE FIRST OVERBF
)@@G@@FLOW PAGE FROM THE RANGE IMMEDIATELY@E@@@@ .                FOLLOWING THBG
)@@G@@E PAGE SPECIFIED IN THE PACKET@C@@@@ .           = 5  GET PAGE WITHOUT RBH
)@@G@@ANGE CHECK  @G@@@@ .           = 6  GET THE FIRST DATA PAGE ALLOWABLE FOBI
)@@G@@R THIS RECORD TYPE@G@@@@ .                THIRD WRD OF PACKET POINTS TO BJ
)@@G@@AREA ENTRY IN Z2. THIS  @G@@@@ .                CALL WILL STORE THE PAGEBK
)@@G@@ # RETURNED IN H2 OF THE      @C@@@@ .                FOURTH WRD OF Z2 ABL
)@@G@@REA ENTRY   @F@@@@ .           = 7  GET NEXT DATA PAGE TO THAT SPECIFIEDBM
)@@G@@ IN PACKET  @E@@@@ .           = 8  DONE WITH PROCESSING, CLEAR ALL BUFFBN
)@@G@@ERS   @H@@@@ .  RETURN CODE = 0 PAGE OBTAINED SUCCESSFULLY, ALL CURRENCYBO
)@@G@@ INFO UPDATED     @E@@@@ .                1 PAGE SPECIFIED NOT WITHIN PRBP
)@@G@@OPER RANGE  @G@@@@ .                2 PAGE CANNOT BE RETURNED SINCE NO MBQ
)@@G@@ORE PAGES QUALIFY @C@@@@ .              = 3 ILLEGAL FUNCTION CODE       BR
)@@G@@@[@@@@ .    @[@@@@ .    @C@@@@BUFROU .                       . $H BUFROUBS
)@@G@@      @E@@@@          S,H2      X11,BUFRET . $P SAVE RETURN ADDRESS     BT
)@@G@@@ @@@@ . SAVE REGISTERS R1, X1-A15  @C@@@@          S         R1,RSAVE1 BU
)@@G@@ . $P SAVE R1     @C@@@@          S         X1,XSAVE1  . $P SAVE X1     BV
)@@G@@@C@@@@          S         X2,XSAVE1+1 . $P SAVE X2    @A@@@@          LRBW
)@@G@@,U      R1,25       .   @ @@@@          LX        X1,(1,3)  @A@@@@      BX
)@@G@@    LX        X2,(1,SAVER1)   @C@@@@          BT        X2,0,*X1  . $P SBY
)@@G@@AVE X3-A15  @[@@@@ .    @E@@@@          L,H2      A6,0,X10  . $P FUNCTIOBZ
)@@G@@N CODE TO A6      @G@@@@          TNE,U     A6,1      . $T IS FUNCTION CCA
)@@G@@ODE EQUAL 1 (DIRECT PGE)@C@@@@          J         BUFRF1    . $A YES,BUFCB
)@@G@@RF1 NO@G@@@@          TNE,U     A6,6      . $T IS FUNCTION CODE EQUAL 6 CC
)@@G@@(FIRST DATA)@C@@@@          J         BUFRF6    . $A YES,BUFRF6 NO@G@@@@CD
)@@G@@          TNE,U     A6,7      . $T IS FUNCTION CODE EQUAL 7 (NEXT DATA) CE
)@@G@@@C@@@@          J         BUFRF7    . $A YES,BUFRF7 NO@G@@@@          TNCF
)@@G@@E,U     A6,3      . $T IS FUNCTION CODE EQUAL 3 (1ST OVERFL)@C@@@@      CG
)@@G@@    J         BUFRF3    . $A YES,BUFRF3 NO@H@@@@          TNE,U     A6,2CH
)@@G@@      . $T IS FUNCTION CODE EQUAL 2 (NEXT OVERFL)     @C@@@@          J CI
)@@G@@        BUFRF2    . $A YES,BUFRF2 NO@D@@@@          TNE,U     A6,5      CJ
)@@G@@       . $T FN CODE 5   @E@@@@          J         BUFRF5            . $ACK
)@@G@@ YES,BUFRF5 NO    @G@@@@          TNE,U     A6,8      . $T IS FUNCTION CCL
)@@G@@ODE EQUAL 8 ( FLUSH BUF)@C@@@@          J         BUFRF8    . $A YES,BUFCM
)@@G@@RF8 NO@G@@@@          J         BUFEX3    . $J BUFEX3  RETURN ERROR CODECN
)@@G@@ 3 (INVALID @E@@@@                              .            FUNCTION COCO
)@@G@@DE)   @[@@@@ .    @]@@@@BUFRF1 .    @C@@@@          L,H2      A7,1,X10  CP
)@@G@@. $P PAGE # TO A7 @D@@@@BUFR11    L,T1      A8,1,X10  . $P AREA CODE TO CQ
)@@G@@A8    @G@@@@ . CHECK IF PAGE NUMBER IS WITHIN SPECIFIED RANGE IN Z2 AREACR
)@@G@@ ENTRY      @G@@@@          L,H2      X3,2,X10 . $P POINTER TO AREA ENTRCS
)@@G@@Y IN Z2 TO X3     @E@@@@          TNZ       1,X3      . $T IS LOWER BOUNCT
)@@G@@D EQUAL 0   @E@@@@          J         NPGMSG            . $A YES,NPGMSG CU
)@@G@@NO    @[@@@@ .    @G@@@@          TLE       A7,1,X3   . $T IS LOWER RANGCV
)@@G@@E LESS OR EQUAL PAGE #  @C@@@@          J         BUFGT1   . $A NO,BUFEXCW
)@@G@@1 YES @D@@@@          L         A9,2,X3   . $P UPPER RANGE TO A9  @G@@@@CX
)@@G@@          TG        A9,A7     . $T IS PAGE # GREATER THAN UPPER BOUND   CY
)@@G@@@E@@@@          J         PWRNGE    . $A NO,PWRNGE YES,BUFGT1     @ @@@@CZ
)@@G@@          J         BUFGT1    @]@@@@BUFGT1 .    @]@@@@LEV5GT1 .   @]@@@@DA
)@@G@@          . @]@@@@          . @D@@@@          . ON A FN CODE 1,6, OR 7 CDB
)@@G@@ALL TO BUFROU,    @G@@@@          . THE PAGE # WANTED WAS FOUND TO BE OUDC
)@@G@@TSIDE THE PAGE RANGE    @E@@@@          . SPECIFIED FOR THE RECORD WITHIDD
)@@G@@N THE AREA WANTED @B@@@@          . X10 HAS ADDRESS OF BUFPKT     @E@@@@DE
)@@G@@          . X3 POINTS TO AREA ENTRY IN Z2 RECORD ENTRY      @E@@@@      DF
)@@G@@    L,H2      A0,BUFPKT         . $P FN CODE TO A0    @E@@@@          TEDG
)@@G@@,U      A0,07             . $T FN CODE = 7      @E@@@@          J       DH
)@@G@@  BUFEX1            . $A NO,BUFEX1 YES    @G@@@@          LA        A0,2DI
)@@G@@,X3           . UPPER PAGE ALLOWED FOR REC      @B@@@@          AA,U    DJ
)@@G@@  A0,1              .   @E@@@@          TE        A0,A7             . $TDK
)@@G@@ UPPER RANGE + 1 =@E@@@@                                      . PAGE # WDL
)@@G@@ANTED       @E@@@@          J         BUFEX1            . $A NO,BUFEX1 YDM
)@@G@@ES    @E@@@@          TZ        ST7RAP            . $T STNRSW SET       DN
)@@G@@@E@@@@          J         BUFEX2            . $A YES,BUFEX2 NO    @F@@@@DO
)@@G@@          LA,H2     A0,1,X10          . $P PAGE # FROM BUFPKT     @F@@@@DP
)@@G@@          SA        A0,ST7RAP         . $P SET ST7RAP TO PAGE #   @H@@@@DQ
)@@G@@                                      . CANNOT SET IT TO 1ST PAGE IN RANDR
)@@G@@GE    @H@@@@                                      . SINCE THAT MAY NOT BDS
)@@G@@E A DATA PAGE.    @G@@@@          LA,U      A0,06             . $P FN CODT
)@@G@@DE 6 ( 1ST DATA PAGE)   @E@@@@          SA,H2     A0,0,X10          . $PDU
)@@G@@ FN CODE TO BUFPKT@B@@@@          LA,H2     A0,1,X10          .   @G@@@@DV
)@@G@@          SA,H1     A0,3,X10          . $P MARK BUFPKT FOR 2ND CALL     DW
)@@G@@@H@@@@       .  L$SNAP    'LV5GT1',0,8,BUFPKT                           DX
)@@G@@      .     @H@@@@          J         BUFRF6            . $J BUFRF6 GET DY
)@@G@@FIRST PAGE IN RANGE     @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    DZ
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    EA
)@@G@@@[@@@@ .    @[@@@@ .    @C@@@@PWRNGE . PAGE SPECIFIED WITHIN PROPER RANGEB
)@@G@@E     @]@@@@           .@B@@@@ . CHECK IF PAGE SPECIFIED IS OVERFLOW    EC
)@@G@@@[@@@@ .    @G@@@@          SLJ       CHKPGE            . $W CHECK IF PAED
)@@G@@GE IS OVERFLOW    @E@@@@          TNE,U     A2,1              . $ IS IT EE
)@@G@@DATA PAGE   @E@@@@          J         DATPG1            . $ YES,GETPGE NEF
)@@G@@O     @G@@@@          TNE,U     A2,2              . $ IS PAGE INTERSPERSEG
)@@G@@ED OVERFLOW @E@@@@          J         IOVFPG           . $ YES,IOVOPG NOEH
)@@G@@      @G@@@@          TNE,U     A2,3              . $ IS PAGE GLOBAL OVEEI
)@@G@@RFLOW       @E@@@@          J         GOVFPG            . $YES,GOVFPG NOEJ
)@@G@@      @G@@@@          SLJ       RER058            . PAGE MUST BE OUT OF EK
)@@G@@RANGE       @]@@@@IOVFPG .    @I@@@@          L,U       X10,BUFPKT      EL
)@@G@@  . $P ESTABLISH ADDRESSABILITY OVER BUFPKT     @E@@@@          L,H2    EM
)@@G@@  A6,0,X10          . FUNCTION CODE TO A6 @D@@@@          TNE,U     A6,1EN
)@@G@@              . $ WAS IT = 1  @ @@@@          J         DATPG1    @[@@@@EO
)@@G@@ .    @[@@@@ .    @C@@@@ . GET NEXT DATA PAGE AFTER INTER OVERFLOW      EP
)@@G@@@[@@@@ .    @A@@@@ . A4 HAS M UPON RETURN FROM CHKPGE @B@@@@ . A5 HAS SUEQ
)@@G@@M UPON RETURN FROM CHKPGE     @E@@@@          A,U       A5,1            ER
)@@G@@  . $ ADD 1 TO SUM      @E@@@@          TG        A4,A5             . ISES
)@@G@@ GREATER THAN M   @^@@@@          J         $+2 @ @@@@          SLJ     ET
)@@G@@  RER059    @D@@@@          L         A7,A5             . $ RETURN SUM  EU
)@@G@@@ @@@@          J         BUFR11    @]@@@@DATPG1 .    @E@@@@          LAEV
)@@G@@,H2     A0,BUFPKT         . $T FN CODE WAS 7    @B@@@@          TE,U    EW
)@@G@@  A0,07             .   @D@@@@          J         GETPGE            . $JEX
)@@G@@ GETPGE     @E@@@@          TNE       A7,STDWRAP        . $T PAGE # = STEY
)@@G@@DWRAP @F@@@@          J         BUFEX2            . $A YES,BUFEX2 NO,GETEZ
)@@G@@PGE   @B@@@@          J         GETPGE            .   @G@@@@GOVFPG    SLFA
)@@G@@J       RER060            . $ PAGE IS GLOBAL OVERFLOW       @[@@@@ .    FB
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    FC
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @]@@@@GETPGEFD
)@@G@@ .    @A@@@@       . CHECK IF PAGE IS IN BUFFER @E@@@@          TNZ     FE
)@@G@@  BUFENT    . $T ANYTHING IN BUFFER       @C@@@@          J         BEMPFF
)@@G@@T1    . $A NO,BEMPT1 YES@G@@@@          L         A15,BUFENT . $P # OF EFG
)@@G@@NTRIES IN BUFFER TO A15       @G@@@@          AN,U       A15,1     . $P FH
)@@G@@A15 WILL CONTROL LOOP FOR BLOCKS    @F@@@@          L         X4,BFIADD FI
)@@G@@. $P ADDRESS OF BUFFER TABLE TO X4  @D@@@@BUFLP1    TNE,T1    A8,0,X4   FJ
)@@G@@. $T AREA CODES EQUAL   @D@@@@          J         BFAEQU    . $A YES,BFAFK
)@@G@@EQU  NO     @^@@@@BUFLP2    A,U       X4,2@F@@@@          JGD       A15,FL
)@@G@@BUFLP1 . $T ARE WE DONE WITH ALL ENTRIES  @D@@@@                        FM
)@@G@@       . $A NO,BUFLP1  YES    @G@@@@          J         BPNIBF     . $J FN
)@@G@@BPNIBF PAGE REQUIRED NOT IN BUFFER  @E@@@@BFAEQU . AREA CODES EQUAL, CHEFO
)@@G@@CK IF PAGE IN PROPER RANGE    @^@@@@       . PAGE # IN A7   @G@@@@      FP
)@@G@@    TLE,H1    A7,1,X4    . $T IS LOWER LIMIT LESS OR EQUAL PAGE # @G@@@@FQ
)@@G@@          J         BUFLP2     . $A NO,BUFLP2 YES CHECK THE OTHER RANGE FR
)@@G@@@E@@@@          L,H2      A10,1,X4   . $P HIGHER LIMIT TO A10     @G@@@@FS
)@@G@@          TG        A10,A7     . $T IS PAGE # GREATER THAN UPPER LIMIT  FT
)@@G@@@G@@@@          J         BUPFND     . $J BUPFND  YES PAGE REQUIRED IS IFU
)@@G@@N     @G@@@@          J         BUFLP2     . $J BUFLP2  NO GO LOOK AT OTFV
)@@G@@HER BLOCKS  @[@@@@ .    @G@@@@BPNIBF . PAGE NOT FOUND IN BUFFER, DETERMIFW
)@@G@@NE WHICH BLOCK TO READ IN     @]@@@@       .    @C@@@@          L       FX
)@@G@@  A11,A7    . $P PAGE # TO A11@D@@@@          DSL       A11,36    . $P PFY
)@@G@@REPARE TO DIVIDE  @F@@@@          DI,U     A11,BLSIZE . $P DIVID PAGE # FZ
)@@G@@BY BLOCK SIZE     @G@@@@                              .    QUOTIENT TO AGA
)@@G@@11, REMAINDER TO A12    @E@@@@          TNZ       A11               . QUGB
)@@G@@OTIENT ZERO       @ @@@@          J         QUZERO    @A@@@@          MSGC
)@@G@@I,U     A11,BLSIZE      @^@@@@          TZ        A12 @B@@@@          J GD
)@@G@@        QNZGT1            .   @B@@@@          AN,U      A11,BLSIZE      GE
)@@G@@  .   @B@@@@QNZGT1    A,U       A11,1             .   @B@@@@          J GF
)@@G@@        GOTBBL            .   @B@@@@QUZERO    L,U       A11,1           GG
)@@G@@  .   @]@@@@GOTBBL .    @[@@@@ .    @E@@@@ . DETERMINE WHICH BLOCK TO REGH
)@@G@@PLACE (FIRST IN FIRST OUT)    @C@@@@ . IF NECESSARY WRITE BLOCK OUT BEFOGI
)@@G@@RE REPLACING@[@@@@ .    @F@@@@          L         X5,BFIADD . $P ADDRESSGJ
)@@G@@ OF BUF   TABLE TO X5   @G@@@@          A         X5,BUFPT1 . $P X5 POINGK
)@@G@@TS TO NEXT ENTRY IN BUFFER TAB@C@@@@          TNZ,T1    0,X5      . $T IGL
)@@G@@S ENTRY FREE@C@@@@          J         BFNBLK    . $A YES,BFNBLK NO@E@@@@GM
)@@G@@ . MAY WANT TO CHECK IF ANY OF THE PAGES HAS BEEN MODIFIED  @E@@@@      GN
)@@G@@                        . PREPARE TO WRITE BLOCK  OUT @G@@@@          L,GO
)@@G@@H2      X6,0,X5   . $P ADDRESS OF FIRST WORD IN BLOCK TO X6 @F@@@@      GP
)@@G@@    LXI,H1    X6,2,X6    . $P X6 WILL INDEX THROUGH PAGES   @D@@@@      GQ
)@@G@@    L,U       A0,BLSIZE . $P BLOCK SIZE TO A0   @E@@@@          AN,U    GR
)@@G@@  A0,1      . $P A0 WILL CONTROL LOOP     @F@@@@BUFLP3    SZ        0,*XGS
)@@G@@6                . $P ZERO CHECKSUM WORD  @G@@@@          JGD       A0,BGT
)@@G@@UFLP3           . $T ALL PAGES IN BLOCK HANDLED @F@@@@                  GU
)@@G@@                        . $A NO,BUFLP3  YES     @G@@@@ . WRITE BLOCK TO GV
)@@G@@BE REPLACED OUT, X5 POINTS TO BLOCK ENTRY IN TABLE    @D@@@@          L,GW
)@@G@@T1      A1,0,X5   . $P AREA CODE TO A1    @E@@@@          L,U       X10,GX
)@@G@@C3    . $P ADDRESS OF C3 TO X10     @E@@@@          LMJ       X11,TABSE1GY
)@@G@@ . $W SEARCH C3 FOR AREA ENTRY@B@@@@          TZ        A2              GZ
)@@G@@  .   @B@@@@          SLJ       RER061            .   @E@@@@          DLHA
)@@G@@        A1,1,A0   . $P AREA NAME TO A1,A2       @E@@@@          L,U     HB
)@@G@@  A3,010    . $P FUNCTION CODE TO A3      @G@@@@          L,U       X10,HC
)@@G@@DBPPKT . $P ADDRESS OF DATA BASE PACKET TO X10  @G@@@@          S,S2    HD
)@@G@@  A3,3,X10  . $P FUNCTION CODE TO DATA BASE PACKET    @E@@@@          DSHE
)@@G@@        A1,DBPPKT . $P AREA NAME TO PACKET      @E@@@@          L,H2    HF
)@@G@@  A4,1,X5   . $P UPPER PAGE NUMBR TO A4   @E@@@@          AN,H1     A4,1HG
)@@G@@,X5   . $P SUBTRACT LOWER PAGE LIMIT@D@@@@          A,U       A4,1      HH
)@@G@@. $P PAGE COUNT TO A4   @E@@@@          S,H1      A4,7,X10  . $P PAGE COHI
)@@G@@UNT TO PACKET     @E@@@@          L,H2      A0,0,X5   . $P BUFFER ADDRESHJ
)@@G@@S TO A0     @E@@@@          S,H2      A0,7,X10  . $P BUFFER ADDRESS TO PHK
)@@G@@ACKET @H@@@@          MSI,H1    A4,2,A0           . $P BUFFER SIZE = PGEHL
)@@G@@ CNT*PAGE SIZE    @E@@@@          S,H1      A4,8,X10  . $P BUFFER LENGTHHM
)@@G@@ TO PACKET  @E@@@@          L,H1      A5,1,X5   . $P LOWER PAGE # TO A5 HN
)@@G@@      @E@@@@          S,H2      A5,8,X10  . $P STARTING PAGE TO PACKET  HO
)@@G@@@E@@@@          LMJ       X11,DB$AM . $W ISSUE WRITE OF BLOCK     @D@@@@HP
)@@G@@          TZ,S1     DBPPKT+3  . $T SUCCESSFUL RETURN  @C@@@@          J HQ
)@@G@@        BWSTAT    . $A NO,BWSTAT YES@D@@@@ . READ NEW BLOCK IN,  X5 POINHR
)@@G@@TS TO NEW BUFFER TABLE  @D@@@@ .                     BUFPT1 HAS BLOCK ENHS
)@@G@@TRY NUMBER  @[@@@@ .    @]@@@@BFNBLK .    @G@@@@          L         A0,NHT
)@@G@@EWC3A . $P ADDRESS OF C3 AREA ENTRY TO A0       @E@@@@          DL      HU
)@@G@@  A1,1,A0   . $P AREA NAME TO A1,A2       @E@@@@          L,U       A3,0HV
)@@G@@20    . $P FUNCTION CODE TO A3      @E@@@@          L,U       X10,DBPPKTHW
)@@G@@ . $P ADDRESS OF PACKET TO X10@G@@@@          S,S2      A3,3,X10  . $P FHX
)@@G@@UNCTION CODE TO PACKET (READ)       @E@@@@          DS        A1,DBPPKT HY
)@@G@@ . $P AREA NAME TO PACKET     @F@@@@          L,U       A4,BLSIZE      .HZ
)@@G@@ $P PAGE CNT =BLSIZE  TO A4   @E@@@@          S,H1      A4,7,X10  . $P PIA
)@@G@@AGE CNT TO PACKET       @D@@@@          LA,T1     A3,3,A0           . $PIB
)@@G@@ PAGE SIZE  @I@@@@          MSI       A4,A3             . $P BUFFER LENGIC
)@@G@@TH = PGE CNT * PAGE SIZE      @E@@@@          S,H1      A4,8,X10  . $P BID
)@@G@@UFFER LENGTH TO PACKET  @E@@@@          L,H2      A3,0,X5   . $P BUFFER IE
)@@G@@ADDRESS TO A3     @E@@@@          S,H2      A3,7,X10  . $P BUFFER ADDRESIF
)@@G@@S TO PACKET @G@@@@          S         A3,CURBLK . $P BUFFER ADDRESS TO CIG
)@@G@@URRENT BLK ADDR   @E@@@@          S,H2      A11,8,X10 . $P STARTING PAGEIH
)@@G@@ TO PACKET  @F@@@@          S,H1      A11,1,X5  . $P STARTING PAGE TO BUII
)@@G@@FFER TABLE  @E@@@@          L         A12,A7            . PAGE WANTED TOIJ
)@@G@@ A12  @G@@@@          AN        A12,A11           . $P REL PGE WITHIN BLIK
)@@G@@OCK TO A12  @G@@@@          LMJ       X11,DB$AM . $W ISSUE THE READ TO CIL
)@@G@@URRENT BLK ADDR   @E@@@@          L,S1      A0,DBPPKT+3 . $P STATUS CODEIM
)@@G@@ TO A0      @F@@@@          JZ        A0,BLREOK   . $T SUCCESSFUL RETURNIN
)@@G@@ ON READ    @D@@@@                                . $A YES,BLREOK NO    IO
)@@G@@@G@@@@          TE,U      A0,052      . $T STATUS =052 (GOT LESS PAGES )IP
)@@G@@      @E@@@@          J         BRSTAT      . $J BRSTAT ERROR RETURN    IQ
)@@G@@@G@@@@BLREOK . BLOCK HAS BEEN READ SUCCESSFULLY, UPDATE CURRENCY INDICATIR
)@@G@@ORS   @A@@@@       . AND BLOCK ENTRY INFORMATION@G@@@@          L       IS
)@@G@@  A1,CURBLK         . $P ADDR OF FIRST WRD IN BLOCK   @F@@@@          LXIT
)@@G@@I,H1    A1,2,A1    . $P A1 WILL INDEX THROUGH PAGES   @D@@@@          L,IU
)@@G@@U       A0,BLSIZE . $P BLOCK SIZE TO A0   @E@@@@          AN,U      A0,1IV
)@@G@@      . $P A0 WILL CONTROL LOOP     @F@@@@BUFLP5    SZ        0,*A1     IW
)@@G@@           . $P ZERO CHECKSUM WORD  @G@@@@          JGD       A0,BUFLP5 IX
)@@G@@          . $T ALL PAGES IN BLOCK HANDLED @A@@@@          L         A0,NIY
)@@G@@EWARE       @G@@@@          S,T1      A0,0,X5     . $P AREA CODE TO BLOCIZ
)@@G@@K TABLE ENTRY     @F@@@@          S         A0,CURARE   . $P AREA CODE TJA
)@@G@@O CURRENT A/C     @ @@@@ . CALCULATE # OF PAGES READ  @E@@@@          L,JB
)@@G@@H2      A1,DBPPKT+3 . $P FINAL WORD CNT TO A1   @E@@@@          DSL     JC
)@@G@@  A1,36       . $P PREPARE TO DIVIDE      @E@@@@          DI,H2     A1,DJD
)@@G@@BPPKT+6 . $P # OF PAGES READ TO A1  @E@@@@          TZ       A2         JE
)@@G@@ . $  REMAINDER SHOULD BE ZERO@A@@@@          SLJ       RER062      . $ JF
)@@G@@@E@@@@          A         A11,A1      . $P UPPER PAGE READ TO A11 @ @@@@JG
)@@G@@          AN,U      A11,1     @G@@@@          S,H2      A11,1,X5  . $P UJH
)@@G@@PPER PAGE READ TO BLOCK ENTRY       @E@@@@          S         A7,CURPGE JI
)@@G@@. $P PAGE # TO CURRENT PAGE   @I@@@@          L         A3,Z2AREA       JJ
)@@G@@  . ESTABLISH ADDRESSABILITY OVER Z2 AREA EN    @F@@@@          TZ      JK
)@@G@@  STNRSW            . $T STORE NEAR SWITCH SET  @E@@@@          J       JL
)@@G@@  BLGT2             . $A YES,BLGT2 NO     @G@@@@          S,H2      A7,3JM
)@@G@@,A3           . $P CURRENT PAGE TO Z2AREA       @E@@@@BLCON1    L,H2    JN
)@@G@@  A3,0,X5   . $P BUFFER ADDRESS TO A3     @E@@@@          MSI,H1    A12,JO
)@@G@@2,A3 . $P REL POS OF PAGE TO A12    @G@@@@          A         A3,A12    JP
)@@G@@ . $P A3 POINTS TO ADDRESS OF NEW PAGE    @F@@@@          S         A3,CJQ
)@@G@@URADD . $P UPDATE CURRENT PAGE ADDRESS    @E@@@@ . INCREMENT BUFPT1 TO PJR
)@@G@@OINT TO PROPER ENTRY FOR NEXT BLOCK @G@@@@          L         A4,BUFPT1 JS
)@@G@@. $P    POINTER WITHIN BUFFER TABLE TO A4 @E@@@@          A,U       A4,2JT
)@@G@@      . $P    INCREMENT POINTER BY 2@G@@@@          TE,U      A4,BFISIZ JU
)@@G@@  . $T END OF BUFFER CONDITION DETECTED   @D@@@@          J         BUTSJV
)@@G@@TO    . $A NO,BPTSTO    YES   @F@@@@          SZ        A4        . $P RJW
)@@G@@ESET POINTER TO ZERO IN A4    @G@@@@BUTSTO    S         A4,BUFPT1 . $P SJX
)@@G@@TORE PROPER POINTER VALUE IN BUFPT1 @A@@@@          L         A0,BUFENT JY
)@@G@@.     @B@@@@          TNE,U     A0,NUMBLK         .   @B@@@@          J JZ
)@@G@@        BLFIX1            .   @^@@@@          A,U       A0,1@G@@@@      KA
)@@G@@    S         A0,BUFENT . $P INCREMENT BLOCK COUNT IN BUFFER      @C@@@@KB
)@@G@@  . ALL DONE, RETURN TO CALLER WITH ZERO  STATUS@]@@@@BLFIX1 .    @C@@@@KC
)@@G@@          J         BUFEX0    . $J BUFEX0       @]@@@@BLGT2 .     @G@@@@KD
)@@G@@          S,H1      A7,3,A3           . $P UPDATE STORE NEAR PAGE       KE
)@@G@@@D@@@@          J         BLCON1            . $J BLCON1     @[@@@@ .    KF
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    KG
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@ .    @]@@@@BUFRF2 .    @[@@@@ .    @G@@@@KH
)@@G@@ . FUNCTION CODE EQUAL 2, GET NEXT OVERFLOW PAGE TO THAT SPECIFIED IN   KI
)@@G@@@^@@@@ . PACKET TO BUFROU     @[@@@@ .    @C@@@@          L,H2      A7,1KJ
)@@G@@,X10   . $P PAGE # TO A7@D@@@@          L,T1      A8,1,X10   . $P AREA CKK
)@@G@@ODE TO A8   @G@@@@          L,H2      X3,2,X10   . $P POINTER TO AREA ENKL
)@@G@@TRY IN Z2 TO X3   @G@@@@          SLJ       CHKPGE     . $W CHKPGE FIND KM
)@@G@@OUT IF PAGE IS OVERFLOW @G@@@@                               . $  X8 POIKN
)@@G@@NTS TO AREA ENTRY IN C3       @A@@@@          TNE,U     A2,1       .    KO
)@@G@@@D@@@@          J         LEV5GT2    . PAGE IS DATA PAGE    @G@@@@      KP
)@@G@@                                . GO TRY TO GET NEXT DATA PAGE    @G@@@@KQ
)@@G@@                                      . GET NEXT DATA PAGE IF LEVEL 5   KR
)@@G@@@A@@@@          TNE,U     A2,4       .    @F@@@@          SLJ       RER0KS
)@@G@@64     . PAGE IS OUT OF RANGE OF AREA     @E@@@@          TNE,U     A2,3KT
)@@G@@       . $T IS PAGE GLOBAL OVERFLOW @D@@@@          J         GLOBAL    KU
)@@G@@ . $A YES,GLOBAL NO     @[@@@@ .    @H@@@@          TNE       A7,STOWRAPKV
)@@G@@        . $T HAVE WE REACHED THE OVF WRAP PAGE  @E@@@@          J       KW
)@@G@@  BF2GT5            . $A YES,BF2GT5 NO    @^@@@@BF2GT6              .   KX
)@@G@@@G@@@@          TNE       A7,A5      . $T IS PAGE NUMBER EQUAL SUM AS DEKY
)@@G@@FINED;@E@@@@                               . $  IN SUBROUTINE CHKPGE    KZ
)@@G@@@C@@@@          J         BF2RAP     . $A YS,BF2RAP NO@H@@@@          TZLA
)@@G@@        STOWRAP           . $P SET STOWRAP IF NOT ALREADY SET     @B@@@@LB
)@@G@@          J         $+2               .   @B@@@@          SA        A7,SLC
)@@G@@TOWRAP        .   @G@@@@          A,U       A7,1       . $P INCREMENT PALD
)@@G@@GE NUMBER BY 1 TO NEXT  @D@@@@ . PROCEED TO GET PAGE WHOSE NUMBER APPEARLE
)@@G@@S IN A7     @E@@@@          J         GETPGE     . $J GETPGE GO GET PAGELF
)@@G@@      @[@@@@ .    @[@@@@ .    @]@@@@BF2GT5 .    @B@@@@       .  L$SNAP  LG
)@@G@@  'STDOGI',0,4,STDWRAP  @B@@@@          LA        A0,A5             .   LH
)@@G@@@E@@@@          AN,H1     A0,5,X8           . SUBTRACT INTER OVF  @H@@@@LI
)@@G@@          AA,U      A0,1              . $P 1ST INTERSPERSED PAGE IN RANGLJ
)@@G@@E     @H@@@@          TNE       A0,A7             . $T PAGE # = 1ST INTELK
)@@G@@RSPERSED PAGE #   @E@@@@          J         BF2GT6            . $T YES,BLL
)@@G@@F2GT4 NO    @D@@@@          J         BF2CN1            . $J BF2CN1     LM
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@ .    @G@@@@BF2RAP . PAGE NUMBER WAS FOUNDLN
)@@G@@ TO BE EQUAL TO SUM FROM SUB CHKPGE       @E@@@@          TZ        STIWLO
)@@G@@RAP           . $T STIWRAP SET      @E@@@@          J         BF2GT2    LP
)@@G@@        . $A YES,BF2GT2 NO    @D@@@@          LA        A0,A5           LQ
)@@G@@  . $P SUM TO A0  @G@@@@          AN,H1     A0,5,X8           . $P SUBTRLR
)@@G@@ACT INTERSPERSED OVF    @B@@@@          AA,U      A0,1              .   LS
)@@G@@@G@@@@          SA        A0,STIWRAP        . $P STIWRAP = 1ST INTER PAGLT
)@@G@@E     @H@@@@          TNE       A7,A0             $T PAGE # = # OF 1ST ILU
)@@G@@NTERSPERSED PAGE  @E@@@@          J         BF2CN1            . $T YES,BLV
)@@G@@F2CN1 NO    @G@@@@          TNZ       STOWRAP           . $P SET STOWRAPLW
)@@G@@ IF NOT SET       @E@@@@BF2GT1    SA        A7,STOWRAP        . $P PGE #LX
)@@G@@ TO STOWRAP @]@@@@BF2GT2 .    @E@@@@          TZ        ARSCAN      . $TLY
)@@G@@ ARSCAN SWITCH SET      @D@@@@          J         BF2SCN      . $A YS,BFLZ
)@@G@@2SCN YES    @G@@@@          AN,H1     A5,5,X8     . $P SUBTRACT INTERSPEMA
)@@G@@RSED OVF FROM SUM @E@@@@          A,U       A5,1        . $P ADD ONE TO MB
)@@G@@     RESULT @F@@@@          TNE       A5,STOWRAP  . $T NEW PAGE # EQUAL MC
)@@G@@TO STOWRAP  @ @@@@          J         BF2CN1    @D@@@@          L       MD
)@@G@@  A7,A5       . $P PAGE # TO A7     @E@@@@          J         GETPGE    ME
)@@G@@  . $J GETPGE GO GET THAT PAGE@[@@@@ .    @B@@@@BF2CN1 . GET READY TO SCMF
)@@G@@AN REST OF AREA   @B@@@@       .  L$SNAP    'F2DOGI',0,4,STDWRAP  @B@@@@MG
)@@G@@          LA        A0,STIWRAP        .   @F@@@@          SA        A0,SMH
)@@G@@TOWRAP        . $P STIWRAP TO STOWRAP     @^@@@@          L,U       A0,1MI
)@@G@@@G@@@@          S         A0,ARSCAN   . $P SET AREA SCAN SWITCH (ARSCAN)MJ
)@@G@@      @E@@@@          L         A5,OLDSUM   . $P GET OLD SUM TO A5      MK
)@@G@@@G@@@@BF2SCN    TE        A5,A4       . $T IS OLD SUM EQUAL M FROM CHEKPML
)@@G@@G     @D@@@@          J         BF2CN2      . $A NO,BF2CN2 YES    @^@@@@MM
)@@G@@          SZ        A5  @F@@@@          A,H2      A5,4,X8     . $P ADD EMN
)@@G@@VER DATA PAGES TO SUM   @^@@@@          A,U       A5,1@G@@@@BF2CN4    TNMO
)@@G@@E       A5,STOWRAP  . $T HAVE WE REACHED START OF WRAP YET  @G@@@@      MP
)@@G@@    J         LEV5GT3     .  ERROR NO MORE INTERSPERSED OVF AVAIL @E@@@@MQ
)@@G@@          L         A7,A5       . $P PAGE NUMBER TO A7      @E@@@@      MR
)@@G@@    J         GETPGE      . $J GETPGE GO GET PAGE     @A@@@@BF2CN2 . OLDMS
)@@G@@ SUM WAS NOT EQUAL TO M @[@@@@ .    @^@@@@          A,U       A5,1@F@@@@MT
)@@G@@          A,H2      A5,4,X8     . $P ADD EVERY DATA PAGES TO SUM  @E@@@@MU
)@@G@@          TG        A4,A5       . $T SUM GREATER THAN M     @ @@@@      MV
)@@G@@    J         BF2CN5    @ @@@@          SLJ       RER066    @]@@@@BF2CN5MW
)@@G@@ .    @ @@@@          L         A7,A5     @F@@@@          SLJ       CHKPMX
)@@G@@GE      . $W CHKPGE CHECK PAGE DELIVERED  @E@@@@          TE,U      A2,2MY
)@@G@@        . $  PAGE BETTER BE OVERFLOW@A@@@@          SLJ       RER072    MZ
)@@G@@  .   @D@@@@          L         A5,A7       . $  PAGE # TO A5     @C@@@@NA
)@@G@@          J         BF2CN4      . $J BF2CN4     @[@@@@ .    @]@@@@GLOBALNB
)@@G@@ .    @G@@@@          TNZ       STOWRAP           . $P SET STOWRAP IF NONC
)@@G@@T SET       @B@@@@          SA        A7,STOWRAP        .   @G@@@@      ND
)@@G@@    TE        A7,A3     . $T PAGE NUMBER EQUAL TOTAL ALLOCATED    @C@@@@NE
)@@G@@          J         BF2CN6    . $J BF2CN6       @G@@@@          L       NF
)@@G@@  A7,A4     . $P TOTAL ALLOCATED - AT END OVF TO A7   @E@@@@          TZNG
)@@G@@        STGWRAP           . $T STGWRAP SET      @E@@@@          J       NH
)@@G@@  BF2GT3            . $A YES,BF2GT3 NO    @B@@@@          LA        A0,ANI
)@@G@@7             .   @B@@@@          AA,U      A0,1              .   @G@@@@NJ
)@@G@@          SA        A0,STGWRAP        . $P SET STGWRAP TO 1ST GLOBAL PGENK
)@@G@@@D@@@@          J         BF2CN6            . $J BF2CN6     @]@@@@BF2SNPNL
)@@G@@      @B@@@@       .  L$SNAP    'S2DOGI',0,4,STDWRAP  @]@@@@BF2GT3 .    NM
)@@G@@@E@@@@          LA        A0,CLPGE          . $P PRIMARY PAGE     @G@@@@NN
)@@G@@          SA,H2     A0,BUFPKT+1       . $P PRIMARY PAGE TO BUFPKT       NO
)@@G@@@D@@@@          J         LEV5GT2           . $J LEV5GT2    @D@@@@BF2CN6NP
)@@G@@    A,U       A7,1      . $P INCREMENT A7 BY 1  @F@@@@          TNE     NQ
)@@G@@  A7,STOWRAP        . $T PAGE NUM = STOWRAP     @E@@@@          J       NR
)@@G@@  BF2SNP            . $A YES,BF2GT3 NO    @E@@@@          J         GETPNS
)@@G@@GE    . $J GETPGE GO GET PAGE       @[@@@@ .    @[@@@@ .    @[@@@@ .    NT
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @]@@@@LEV5GTNU
)@@G@@3     @]@@@@          . @]@@@@          . @F@@@@          . HAVE ALREADYNV
)@@G@@ SCANNED ALL INTER OVF WITHOUT FINDING    @A@@@@          . SPACE TO STONW
)@@G@@RE RECORD   @]@@@@          . @B@@@@       .  L$SNAP    'G3DOGI',0,4,STDNX
)@@G@@WRAP  @E@@@@          . X8 POINTS TO C3 ENTRY FOR AREA ENCOUNTERED      NY
)@@G@@@]@@@@          . @E@@@@          LA,U      A0,DMSLEV5        . DMS LEVENZ
)@@G@@L 5 SWITCH  @E@@@@          TNZ       A0                . $T DMSLEV5 SETOA
)@@G@@      @E@@@@          SLJ       RER065            . $A NO,RER065 YES    OB
)@@G@@@F@@@@          TNZ,H2    5,X8              .$T ANY GLOBAL OVF DEFINED  OC
)@@G@@@E@@@@          J         L5NGLB            . $A NO,L5NGLB YES    @E@@@@OD
)@@G@@          LA,H1     A7,4,X8           . ALLOCATED PAGES     @G@@@@      OE
)@@G@@    AN,H2     A7,5,X8           . $P ALLOCATED PAGES - AT END OVF @E@@@@OF
)@@G@@          AA,U      A7,1              . $P PAGE # = M + 1   @F@@@@      OG
)@@G@@    SA        A7,STOWRAP        . SAVE PAGE # IN STGWRAP    @D@@@@      OH
)@@G@@    J         GETPGE            . $J GETPGE     @]@@@@L5NGLB      @E@@@@OI
)@@G@@          LX,U      X10,BUFPKT        . $P ADDR OF BUFPKT   @D@@@@      OJ
)@@G@@    LA,H2     A0,1,X10          . OLD PAGE #    @G@@@@          SA,H1   OK
)@@G@@  A0,3,X10          . SET SW FOR 2ND CALL TO OLD #    @E@@@@          LAOL
)@@G@@        A0,CLPGE          . PRIMARY PAGE TO A0  @G@@@@          SA,H2   OM
)@@G@@  A0,1,X10          . PRIMARY PAGE TO BUFPKT,1,H2     @D@@@@          LAON
)@@G@@,U      A0,7              . $P FN CODE 7  @E@@@@          SA,H2     A0,0OO
)@@G@@,X10          . FN CODE 7 TO BUFPKT @E@@@@                              OP
)@@G@@        . GET NEXT DATA PAGE  @G@@@@          SA,H2     A0,3,X10        OQ
)@@G@@  . $P SET BFERSW( H2 OF 3RD WRD)   @H@@@@       .  L$SNAP    'LV5GT3',0OR
)@@G@@,8,BUFPKT                                 .     @D@@@@          J       OS
)@@G@@  BUFRF7            . $J BUFRF7     @]@@@@BUFRF3 .    @[@@@@ .    @[@@@@OT
)@@G@@ .    @G@@@@ . FUNCTION CODE EQUAL 3, GET FIRST OVERFLOW PAGE AFTER DATAOU
)@@G@@ PAGE WHICH @#@@@@ . IS IN PACKET   @[@@@@ .    @D@@@@          L,H2    OV
)@@G@@  A7,1,X10    . $P PAGE # TO A7     @D@@@@          L,T1      A8,1,X10  OW
)@@G@@  . $P AREA CODE TO A8  @G@@@@          L,H2      X3,2,X10    . $P POINTOX
)@@G@@ER TO AREA ENTRY IN Z2 TO X3  @G@@@@          SLJ       CHKPGE      . $WOY
)@@G@@ CHKPGE FIND OUT IF PAGE IS OVERFLOW@G@@@@                              OZ
)@@G@@  . $  X8 POINTS TO AREA ENTRY IN  C3     @E@@@@          TE,U      A2,1PA
)@@G@@        . $T IS PAGE A DATA PAGE    @C@@@@          SLJ       RER070    PB
)@@G@@  . $A NO,EXIT YES@F@@@@          TNZ,H2    4,X8        . $T ANY INTERSPPC
)@@G@@ERSED OVERFLOW    @D@@@@          J         BF3CN2      . $A NO,BF3CN2 YPD
)@@G@@ES    @D@@@@          A,U       A5,1        . $P ADD 1 TO SUM     @H@@@@PE
)@@G@@          TZ        STOWRAP           . $P SET STOWRAP IF NOT ALREADY SEPF
)@@G@@T     @B@@@@          J         $+2               .   @B@@@@          SAPG
)@@G@@        A5,STOWRAP        .   @E@@@@          TG        A4,A5       . $TPH
)@@G@@ IS SUM GREATER THAN M  @^@@@@          J         $+2 @ @@@@          SLPI
)@@G@@J       RER071    @E@@@@                                      . ERROR ISPJ
)@@G@@ VALID SINCE@F@@@@                                      . THERE SHOULD BPK
)@@G@@E AT LEAST  @G@@@@                                      . ONE INTER RANGPL
)@@G@@E AFTER DATA      @ @@@@          L         A7,A5     @G@@@@          SLPM
)@@G@@J       CHKPGE      . $W CHKPGE CHECK IF PAGE IS INTERSP OVF@G@@@@      PN
)@@G@@    TE,U      A2,2        . $  IS  PAGE INTERSPERSED OVERFLOW     @ @@@@PO
)@@G@@          SLJ       RER072    @ @@@@          J         GETPGE    @[@@@@PP
)@@G@@ .    @[@@@@ .    @[@@@@ .    @D@@@@BF3CN2 . NO INTERSPERSED OVERFLOW DEPQ
)@@G@@FINED FOR AREA    @E@@@@          TNZ,H2    5,X8        . $T ANY AT END PR
)@@G@@OVERFLOW    @E@@@@          J         LEV5GT2           . $A NO,LEV5GT2 PS
)@@G@@      @C@@@@          L         A7,A4       . $P GET M      @D@@@@      PT
)@@G@@    A,U       A7,1        . $P INCREMENT BY 1   @H@@@@          TZ      PU
)@@G@@  STOWRAP           . $P SET STOWRAP IF NOT ALREADY SET     @B@@@@      PV
)@@G@@    J         $+2               .   @B@@@@          SA        A7,STOWRAPPW
)@@G@@        .   @E@@@@          J         GETPGE      . $J GETPGE GO GET PAGPX
)@@G@@E     @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @]@@@@LEV5GT2 .   PY
)@@G@@@F@@@@          .  ON A FN CALL OF 3 TO BUFROU (1ST OVF PAGE), IT WAS   PZ
)@@G@@@G@@@@          . DISCVERED THAT NO INTERSPERSED OR GLOBAL OVERFLOW WAS QA
)@@G@@      @ @@@@          . DEFINED.    OR:   @F@@@@          . ON A FN CALLQB
)@@G@@ OF 2 TO BUFROU (NEXT OVF PAGE), IT WAS   @F@@@@          . DISCOVERED TQC
)@@G@@HAT THE STARTING PAGE WAS A DATA PAGE     @C@@@@          . OR NO MORE OQD
)@@G@@VERFLOW PAGES TO RETURN.@[@@@@ .    @[@@@@ .    @E@@@@          LA,U    QE
)@@G@@  A0,DMSLEV5        . LEVEL 5 SWITCH TO A0@E@@@@          TNZ       A0  QF
)@@G@@              . $T DMSLEV5 SET      @E@@@@          SLJ       RER073    QG
)@@G@@        . $A NO,RER073 YES    @E@@@@          LX,U      X10,BUFPKT      QH
)@@G@@  . ADDR OF BUFPKT      @E@@@@          LA,H2     A0,0,X10          . $PQI
)@@G@@ OLD FN CODE      @G@@@@          SA,H1     A0,3,X10          . $P SET 2QJ
)@@G@@ND PACKET CALL SWITCH   @G@@@@          LA,U      A0,7              . $PQK
)@@G@@ FN CODE 7 (NEXT DATA PAGE)   @E@@@@          SA,H2     A0,0,X10        QL
)@@G@@  . FN CODE TO BUFPKT   @G@@@@          SA,H2     A0,3,X10          . $PQM
)@@G@@ SET BFERSW( H2 OF 3RD WRD)   @H@@@@       .  L$SNAP    'LV5GT2',0,8,BUFQN
)@@G@@PKT                                 .     @D@@@@          J         BUFRQO
)@@G@@F7            . $J BUFRF7     @[@@@@ .    @[@@@@ .    @[@@@@ .    @A@@@@QP
)@@G@@BUFRF5 . FUNCTION CODE 5 FOR BUFROU @[@@@@ .    @[@@@@ .    @E@@@@      QQ
)@@G@@    L,H2      A7,1,X10          . $P PAGE NUMBER TO A7@E@@@@          L,QR
)@@G@@T1      A8,1,X10          . $P AREA CODE TO A8  @G@@@@          L,H2    QS
)@@G@@  X3,2,X10          . $P POINTER TO ARE ENT IN Z2     @ @@@@          J QT
)@@G@@         GETPGE   @[@@@@ .    @[@@@@ .    @]@@@@BUFRF8 .    @[@@@@ .    QU
)@@G@@@[@@@@ .    @B@@@@ . FUNCTION CODE IS 8, FLUSH BUFFERS OUT  @[@@@@ .    QV
)@@G@@@F@@@@          L         X5,BFIADD . $P ADDRESS OF BUFFER TABLE TO X5  QW
)@@G@@@E@@@@          L,U       A15,NUMBLK . $P # OF BLOCKS TO A15      @E@@@@QX
)@@G@@          AN,U      A15,1      . $P A15 WILL CONTROL LOOP   @ @@@@      QY
)@@G@@    TG,U      A15,0     @^@@@@          J         $+2 @ @@@@          SLQZ
)@@G@@J       RER074    @]@@@@FLSHL1 .    @E@@@@          TNZ,T1    0,X5      RA
)@@G@@. $ IS BLOCK ENTRY FREE       @C@@@@          J         FLSGT1    . $ YERB
)@@G@@S IGNORE IT @C@@@@ . WRITE BLOCK OUT ,  X5 POINTS TO BLOCK ENTRY  @E@@@@RC
)@@G@@ . MAY WANT TO CHECK IF ANY OF THE PAGES HAS BEEN MODIFIED  @E@@@@      RD
)@@G@@                        . PREPARE TO WRITE BLOCK  OUT @G@@@@          L,RE
)@@G@@H2      X6,0,X5   . $P ADDRESS OF FIRST WORD IN BLOCK TO X6 @F@@@@      RF
)@@G@@    LXI,H1    X6,2,X6   . $P X6 WILL INDEX THROUGH PAGES    @D@@@@      RG
)@@G@@    L,U       A0,BLSIZE . $P BLOCK SIZE TO A0   @E@@@@          AN,U    RH
)@@G@@  A0,1      . $P A0 WILL CONTROL LOOP     @F@@@@FLSHL2    SZ        0,*XRI
)@@G@@6               . $P ZERO CHECKSUM WORD   @G@@@@          JGD       A0,FRJ
)@@G@@LSHL2           . $T ALL PAGES IN BLOCK HANDLED @E@@@@                  RK
)@@G@@                      . $A NO,FLSHL2  YES @D@@@@          L,T1      A1,0RL
)@@G@@,X5   . $P AREA CODE TO A1    @E@@@@          L,U       X10,C3    . $P ARM
)@@G@@DDRESS OF C3 TO X10     @E@@@@          LMJ       X11,TABSE1 . $W SEARCHRN
)@@G@@ C3 FOR AREA ENTRY@^@@@@          TZ        A2  @ @@@@          SLJ     RO
)@@G@@  RER075    @E@@@@          DL        A1,1,A0   . $P AREA NAME TO A1,A2 RP
)@@G@@      @E@@@@          L,U       A3,010    . $P FUNCTION CODE TO A3      RQ
)@@G@@@G@@@@          L,U       X10,DBPPKT . $P ADDRESS OF DATA BASE PACKET TORR
)@@G@@ X10  @G@@@@          S,S2      A3,3,X10  . $P FUNCTION CODE TO DATA BASRS
)@@G@@E PACKET    @E@@@@          DS        A1,DBPPKT . $P AREA NAME TO PACKETRT
)@@G@@      @E@@@@          L,H2      A4,1,X5   . $P UPPER PAGE NUMBR TO A4   RU
)@@G@@@E@@@@          AN,H1     A4,1,X5   . $P SUBTRACT LOWER PAGE LIMIT@D@@@@RV
)@@G@@          A,U       A4,1      . $P PAGE COUNT TO A4   @E@@@@          S,RW
)@@G@@H1      A4,7,X10  . $P PAGE COUNT TO PACKET     @E@@@@          L,H2    RX
)@@G@@  A0,0,X5   . $P BUFFER ADDRESS TO A0     @E@@@@          S,H2      A0,7RY
)@@G@@,X10  . $P BUFFER ADDRESS TO PACKET @E@@@@          MSI,H1    A4,2,A0   RZ
)@@G@@        . $P BUFFER SIZE TO A4@E@@@@          S,H1      A4,8,X10  . $P BSA
)@@G@@UFFER LENGTH TO PACKET  @E@@@@          L,H1      A5,1,X5   . $P LOWER PSB
)@@G@@AGE # TO A5       @E@@@@          S,H2      A5,8,X10  . $P STARTING PAGESC
)@@G@@ TO PACKET  @E@@@@          LMJ       X11,DB$AM . $W ISSUE WRITE OF BLOCSD
)@@G@@K     @D@@@@          TZ,S1     DBPPKT+3  . $T SUCCESSFUL RETURN  @C@@@@SE
)@@G@@          J         BWSTAT    . $A NO,BWSTAT YES@E@@@@FLSGT1    A,U     SF
)@@G@@  X5,2      . $P POINT TO NEXT BLOCK      @C@@@@          JGD       A15,SG
)@@G@@FLSHL1 . $T ARE WE DONE @C@@@@                              . $A NO,FLSHSH
)@@G@@L1 YES@E@@@@          J         BUFEX0    . $E EXIT  SUCCESSFUL RETURN  SI
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@ .    @C@@@@BUFRF7 . FUNCTION CODE 7, GET SJ
)@@G@@NEXT DATA PAGE    @C@@@@          L,H2      A7,1,X10  . $P PAGE # TO A7 SK
)@@G@@@H@@@@          TZ        STDWRAP           . $P SET STDWRAP TO PGE # IFSL
)@@G@@ NOT SET    @^@@@@          J         $+2 @B@@@@          SA        A7,SSM
)@@G@@TDWRAP        .   @G@@@@          A,U       A7,1      . $P INCREMENT PAGSN
)@@G@@E SPECIFIED IN PACKET   @C@@@@          J         BUFR11    . $J BUFR11 SO
)@@G@@      @G@@@@BUFRF6 . FUNCTION CODE 6, GET FIRST DATA PAGE WITHIN RANGE SSP
)@@G@@PACIFIED    @G@@@@          L,H2      X3,2,X10  . $P POINTER TO AREA ENTSQ
)@@G@@RY IN Z2 TO X3    @E@@@@          L         A7,1,X3   . $P FIRST PAGE INSR
)@@G@@ RANGE TO A7@C@@@@          J         BUFR11    . $J BUFR11       @D@@@@SS
)@@G@@BEMPT1 . BUFFER IS EMPTY, INITIALIZE BUFFER TABLE     @A@@@@       . THEST
)@@G@@N READ FIRST BLOCK IN   @F@@@@          L         X8,BUFADD . $P ADDRESSSU
)@@G@@ OF DATA BUFFER TO X8   @F@@@@          L         X9,BFIADD . $P ADDRESSSV
)@@G@@ OF BUFFER TABLE TO X9  @G@@@@          L,U       A0,NUMBLK . $P # OF BLSW
)@@G@@OCKS IN BUFFER TO A0 (FIXED)  @E@@@@          AN,U      A0,1      . $P ASX
)@@G@@0 WILL CONTROL LOOP     @^@@@@          LXI,U     X9,2@G@@@@BUFLP4    S,SY
)@@G@@H2      X8,0,*X9  . $P ADDRESS OF BUFFER TO BLOCK ENTRY     @B@@@@      SZ
)@@G@@    LA        A11,MAXPSIZE      .   @G@@@@          MSI,U     A11,BLSIZETA
)@@G@@        . MULTIPLY MAXPSIZE BY BLOCK SIZE @E@@@@          AX        X8,ATB
)@@G@@11            . POINT TO NEXT BLOCK @G@@@@          JGD       A0,BUFLP4 TC
)@@G@@. $T ARE WE DONE WITH ALL BUFFER ENTRIES  @D@@@@                        TD
)@@G@@      . $A NO,BUFLP4  YES     @E@@@@          J         BPNIBF    . $J BTE
)@@G@@PNIBF  GO GET BLOCK IN  @C@@@@BWSTAT . STATUS ON WRITE DIFFERENT THAN ZETF
)@@G@@RO    @ @@@@          SLJ       RER076    @C@@@@BRSTAT . STATUS ON READ TG
)@@G@@DIFFERENT THAN ZERO     @ @@@@          SLJ       RER077    @[@@@@ .    TH
)@@G@@@C@@@@BUPFND . PAGE REQUIRED IS WITHIN BUFFER LIMIT   @B@@@@         . UTI
)@@G@@PDATE CURRENCY INDICATORS     @G@@@@          S         A7,CURPGE . $P STJ
)@@G@@TORE PAGE # IN CURRENT PAGE #       @G@@@@          S         A8,CURARE TK
)@@G@@. $P STORE AREA # IN CURRENT AREA #       @G@@@@          L         A1,ZTL
)@@G@@2AREA         . ADDRESS OF Z2AREA ENTRY TO A1   @F@@@@          TZ      TM
)@@G@@  STNRSW            . $T STORE NEAR SWITCH SET  @D@@@@          J       TN
)@@G@@  BLGT1              . $J BLGT1     @I@@@@          S,H2      A7,3,A1   TO
)@@G@@        . $P STORE CURRENT PAGE IN Z2 AREA ENTRY      @C@@@@BLCON2    L TP
)@@G@@        A0,A7     . $P PAGE # TO A0 @F@@@@          AN,H1     A0,1,X4   TQ
)@@G@@$P SUBTRACT FIRST PAGE # IN BLOCK   @G@@@@          S         A0,RELPGE TR
)@@G@@. $P MAKE RELATIVE PAGE # CURRENT (RELPGE)@E@@@@          L,H2      A1,0TS
)@@G@@,X4   . $P ADDRESS OF BLOCK TO A1   @H@@@@          S         A1,CURBLK TT
)@@G@@   . $P MAKE ADDRESS OF BLOCK CURRENT (CURBLK)  @F@@@@          MSI,H1  TU
)@@G@@  A0,2,A1           . MULTIPLY BY PAGE SIZE     @E@@@@          A       TV
)@@G@@  A1,A0     . $P PAGE ADDRESS TO A1       @E@@@@          S         A1,CTW
)@@G@@URADD . $P MAKE PAGE ADDRESS CURRENT@C@@@@          J         BUFEX0    TX
)@@G@@. $J BUFEX0       @]@@@@BLGT1 .     @G@@@@          S,H1      A7,3,A1   TY
)@@G@@         . $P UPDATE STORE NEAR PAGE IN Z2@D@@@@          J         BLCOTZ
)@@G@@N2            . $J BLCON2     @[@@@@ .    @D@@@@BUFEX0 .  EXIT WITH STATUA
)@@G@@US EQUAL 0 (NORMAL RETURN)    @^@@@@          L,U       A0,0@A@@@@      UB
)@@G@@    S,H1      A0,BUFPKT       @ @@@@          J         BUFEXT    @E@@@@UC
)@@G@@BUFEX1 .  EXIT WITH STATUS=1,    X10  POINTS TO PACKET      @^@@@@      UD
)@@G@@    L,U       A0,1@A@@@@          S,H1      A0,BUFPKT       @ @@@@      UE
)@@G@@    J         BUFEXT    @A@@@@BUFEX2 .  EXIT WITH STATUS ERROR = 2@^@@@@UF
)@@G@@          L,U       A0,2@A@@@@          S,H1      A0,BUFPKT       @B@@@@UG
)@@G@@          E$DIT     EDPKT             .   @B@@@@          E$COPY    36,MUH
)@@G@@SGSPCE        .   @B@@@@          E$DECV    CURREC            .   @A@@@@UI
)@@G@@          P$RINT    (PF1 1,14,PRINT)@ @@@@          J         BUFEXT    UJ
)@@G@@@A@@@@BUFEX3 .  EXIT WITH STATUS ERROR = 3@^@@@@          L,U       A0,3UK
)@@G@@@A@@@@          S,H1      A0,BUFPKT       @ @@@@          J         BUFEUL
)@@G@@XT    @[@@@@ .    @A@@@@BUFEX4 .  EXIT WITH STATUS ERROR = 4@B@@@@      UM
)@@G@@    L,U       A0,4              .   @B@@@@          S,H1      A0,BUFPKT UN
)@@G@@        .   @B@@@@          J         BUFEXT            .   @]@@@@BUFEXTUO
)@@G@@ .    @[@@@@ .    @^@@@@ . RESTORE REGISTERS    @ @@@@          LR,U    UP
)@@G@@  R1,25     @A@@@@          LX        X1,(1,SAVER1)   @ @@@@          LXUQ
)@@G@@        X2,(1,3)  @E@@@@          BT        X2,0,*X1  . $P RESTORE REGISUR
)@@G@@TERS X3-A15 @C@@@@          LR        R1,RSAVE1 . $P RESTORE R1   @C@@@@US
)@@G@@          L         X1,XSAVE1 . $P RESTORE X1   @C@@@@          L       UT
)@@G@@  X2,XSAVE1+1 . $P RESTORE X2 @B@@@@          J         *BUFRET   . $E EUU
)@@G@@XIT   @[@@@@ .    @[@@@@ .    @F@@@@ . SUBROUTINE TO SEARCH MERGE TABLE UV
)@@G@@TABLE FOR SMALLEST PGE NUM    @F@@@@ . UPON FINDING AN ENTRY, A0 WILL POUW
)@@G@@INT TO ABS LOCATION OF ENT    @F@@@@ . AND S1 OF FIRST WORD WILL BE MARKUX
)@@G@@ED BY 07 TO INDICATE THAT     @F@@@@ . ONCE AN ENTRY HAS BEEN FOUND, IT UY
)@@G@@WILL NOT BE CHOSEN AGAIN.     @D@@@@ . UPON RETURN, A2 HAS RETURN CODE 0UZ
)@@G@@ IF SUCCESSFUL.   @B@@@@ . REGISTERS USED: A0, A2, A11, A12, A13  @[@@@@VA
)@@G@@ .    @[@@@@ .    @B@@@@MRGSML    +         0                 .   @B@@@@VB
)@@G@@          L,U       A11,0377777       .   @H@@@@          L,H2      A2,MVC
)@@G@@RGNUM        . $P # OF ENTRIES IN MERGE TAB TO A2     @E@@@@          ANVD
)@@G@@,U      A2,1             . $P A2 TO CONTROL LOOP@G@@@@          L       VE
)@@G@@  A0,MRGADD         . $P A0 TO INDEX THROUGH MERGE TAB@B@@@@          SZVF
)@@G@@        A13               .   @B@@@@MRGLP5    L,S1      A12,0,A0        VG
)@@G@@  .   @E@@@@          TE,U      A12,07            . $T ENTRY MARKED     VH
)@@G@@@E@@@@          J         MRGSM1            . $A NO,MRGSM1 YES    @B@@@@VI
)@@G@@MRCON1    A,U       A0,2              .   @E@@@@          JGD       A2,MVJ
)@@G@@RGLP5        . $T ANY MORE ENTRIES  @G@@@@          TNZ       A13       VK
)@@G@@        . $T WERE THERE NON-MARKED ENTRIES@E@@@@          J         MRCOVL
)@@G@@N2            . $A NO,MRCON2 YES    @B@@@@          L,U       A12,07    VM
)@@G@@        .   @B@@@@          L         A0,A13            .   @G@@@@      VN
)@@G@@    S,S1      A12,0,A0          . $P MARK RANGE ENT RETURNED      @^@@@@VO
)@@G@@          SZ        A2  @ @@@@          J         MRGEX1    @B@@@@MRCON2VP
)@@G@@    L,U       A2,1              .   @]@@@@MRGEX1 .    @A@@@@          J VQ
)@@G@@*MRGSML . $E EXIT       @]@@@@MRGSM1 .    @F@@@@          TLE,H2    A11,VR
)@@G@@0,A0          . $T NEW LOW RANGE L=(A11)  @B@@@@          J MRCON1  . $AVS
)@@G@@ NO,MRCON1 YES    @F@@@@          L,H2      A11,0,A0          . $P LOWERVT
)@@G@@ RANGE TO A11     @F@@@@          L         A13,A0            . $P A13 PVU
)@@G@@OINTS TO ENTRY    @D@@@@          J         MRCON1            . $J MRCONVV
)@@G@@1     @[@@@@ .    @G@@@@ . ROUTINE TO DECIDE WHETHER A PAGE IS DATA, OVEVW
)@@G@@RFLOW OR GLOBAL OVERFLOW@ @@@@ . UPON ENTRY  A7 HAS PAGE #  @A@@@@ .    VX
)@@G@@         A8 HAS AREA CODE     @E@@@@ .             X3 HAS POINTER TO AREVY
)@@G@@A ENTRY FROM Z2 TABLE   @C@@@@ . UPON RETURN A2 HAS RETURN CODE  1= DATAVZ
)@@G@@ PAGE @D@@@@ .                                 2= OVERFLOW PAGE   @E@@@@WA
)@@G@@ .                                 3= GLOBAL OVERFLOW       @G@@@@ .    WB
)@@G@@                             4= PAGE OUT OUT OF RANGE OF AREA     @D@@@@WC
)@@G@@ .             A3 HAS TOTAL ALLOCATED PAGES FOR AREA  @F@@@@ .          WD
)@@G@@   A4 HAS HAS PAGES ALLOCATED MINUS GLOBAL OVRFLOW M  @D@@@@ .          WE
)@@G@@   A5 HAS HAS SUM AS DEFINED FOR ROUTINE  @]@@@@CHKPGE .    @^@@@@      WF
)@@G@@    +         0   @D@@@@          L         A1,A8     . $P AREA CODE TO WG
)@@G@@A1    @E@@@@          L,U       X10,C3    . $P ADDRESS OF C3 TO X10     WH
)@@G@@@E@@@@          LMJ       X11,TABSE1 . $W SEARCH C3 FOR AREA ENTRY@H@@@@WI
)@@G@@                              .  A0 WILL HAVE ADDRESS OF ENTRY UPON RETUWJ
)@@G@@RN    @E@@@@          TZ        A2     . $T NORMAL RETURN FROM SEARCH   WK
)@@G@@@B@@@@          SLJ       RER078    . $E EXIT   @F@@@@          L       WL
)@@G@@  X8,A0     . $P X8 POINTS TO AREA ENTRY IN C3  @E@@@@          L,H1    WM
)@@G@@  A3,4,X8   . $P ALLOCATED PAGES TO A3    @ @@@@          L,H1      A4,4WN
)@@G@@,X8   @G@@@@          AN,H2     A4,5,X8   . $P ALLOC PGS MINUS AT END TOWO
)@@G@@ A4 = M     @D@@@@          SZ        A5        . $P ZERO SUM IN A5     WP
)@@G@@@E@@@@          TNZ,H2    4,X8      . $T IS THERE INTERSPERSED?   @C@@@@WQ
)@@G@@          J         NIOVFL    . $J NIOVFL       @F@@@@CPGLP1    A,H2    WR
)@@G@@  A5,4,X8   . $P ADD EVERY DATA PGES TO SUM     @D@@@@          TNE     WS
)@@G@@  A4,A5     . $T IS SUM    EQUAL M  @C@@@@          J         LSTDPG    WT
)@@G@@. $A YES,LSTDPG NO@E@@@@          TLE       A4,A5     . $T SUM GREATER TWU
)@@G@@HAN M       @C@@@@          SLJ       RER079    . $A YES,ERR NO   @F@@@@WV
)@@G@@          TLE       A5,A7     . $T PAGE # LESS OR EQUAL TO SUM    @^@@@@WW
)@@G@@          J         $+2 @C@@@@          J         CHPEX1    . $A YES,CHPWX
)@@G@@EX1 NO@G@@@@          A,H1      A5,5,X8   . $P ADD INTERSPERSED OVERFLOWWY
)@@G@@ TO SUM INA5@D@@@@          TNE       A5,A4     . $T IS SUM EQUAL M     WZ
)@@G@@@C@@@@          J         LSTOVF    . $A YES,LSTOVF NO@E@@@@          TLXA
)@@G@@E       A4,A5     . $T SUM GREATER THAN M       @C@@@@          SLJ     XB
)@@G@@  RER080    . $A YES,ERR  NO  @F@@@@          TLE       A5,A7     . $T PXC
)@@G@@AGE # LESS OR EQUAL TO SUM    @^@@@@          J         $+2 @G@@@@      XD
)@@G@@    J         CHPEX2    . $J CHPEX2 PAGE IS AN OVERFLOW PAGE      @C@@@@XE
)@@G@@          J         CPGLP1    . $J CPGLP1       @E@@@@NIOVFL    TLE     XF
)@@G@@  A4,A7     . $T PAGE LESS OR EQUAL TO M  @C@@@@          J         $+2 XG
)@@G@@      . $J NIOVF1       @F@@@@          J         CHPEX1    . $J CHPEX1 XH
)@@G@@PAGE IS A DATA PAGE     @]@@@@NIOVF1 .    @G@@@@          TLE       A3,AXI
)@@G@@7     . $T PAGE # LESS OR EQUAL ALLOCATED       @G@@@@          J       XJ
)@@G@@  CHPEX4    . $J CHPEX4 PAGE OUT OF RANGE OF AREA     @G@@@@          J XK
)@@G@@        CHPEX3    . $J CHPEX3 PAGE IS GLOBAL OVERFLOW       @]@@@@LSTDPGXL
)@@G@@ .    @F@@@@          TLE       A5,A7     . $T PAGE # LESS OR EQUAL TO SXM
)@@G@@UM    @C@@@@          J         NIOVF1    . $J NIOVF1       @F@@@@      XN
)@@G@@    J         CHPEX1    . $J CHPEX1 PAGE IS A DATA PAGE     @]@@@@LSTOVFXO
)@@G@@ .    @F@@@@          TLE       A5,A7     . $T PAGE # LESS OR EQUAL TO SXP
)@@G@@UM    @C@@@@          J         NIOVF1    . $J NIOVF1       @G@@@@      XQ
)@@G@@    J         CHPEX2    . $J CHPEX2 PAGE IS AN OVERFLOW PAGE      @[@@@@XR
)@@G@@ .    @E@@@@CHPEX1    L,U       A2,1      . $P RETURN CODE 1 TO A2      XS
)@@G@@@C@@@@          J         CHPEXT    . $J CHPEXT       @E@@@@CHPEX2    L,XT
)@@G@@U       A2,2      . $P RETURN CODE 2 TO A2      @C@@@@          J       XU
)@@G@@  CHPEXT    . $J CHPEXT       @E@@@@CHPEX3    L,U       A2,3      . $P RXV
)@@G@@ETURN CODE 3 TO A2      @C@@@@          J         CHPEXT    . $J CHPEXT XW
)@@G@@      @E@@@@CHPEX4    L,U       A2,4      . $P RETURN CODE 4 TO A2      XX
)@@G@@@C@@@@          J         CHPEXT    . $J CHPEXT       @^@@@@CHPEXT      XY
)@@G@@        .   @F@@@@          SA        A5,OLDSUM         . SAVE SUM FOR WXZ
)@@G@@RAP AROUND  @B@@@@          J         *CHKPGE   . $E EXIT   @[@@@@ .    YA
)@@G@@@[@@@@ .    @[@@@@ .    @G@@@@ . SUBROUTINE TO TRANSFER A BLOCK FRDM LOCYB
)@@G@@ATION POINTED TO BY X1 TO     @E@@@@ . A LOCATION POINTED TO BY X2. LENGYC
)@@G@@TH OF THE BLOCK IS IN R1@[@@@@ .    @[@@@@ .    @[@@@@ .    @B@@@@PTRANSYD
)@@G@@   S,H2      X11,RET5  . $H PTRANS  @^@@@@         LXI,U     X1,1 @D@@@@YE
)@@G@@         LXI,U     X2,1      . $P SET UP INDEXING     @D@@@@         BT YF
)@@G@@       X2,0,*X1  . $P PERFORM TRANSFER    @B@@@@         J         *RET5YG
)@@G@@     . $E EXIT    @[@@@@ .    @[@@@@ .    @[@@@@ .    @E@@@@ . SUBROUTINYH
)@@G@@E TO FIND THE MAXIMUM PAGE SIZE FOR AREAS       @A@@@@ . SPECIFIED IN THYI
)@@G@@E AREA COMMANDS.  @ @@@@ . A0 WILL TRAVERSE C3 TABLE  @A@@@@ . A1 WILL HYJ
)@@G@@AVE MAXIMUM PAGE SIZE   @ @@@@ . A2 USED FOR COMPARISON     @[@@@@ .    YK
)@@G@@@[@@@@ .    @C@@@@MXPGET    +         0                 . $H      @H@@@@YL
)@@G@@          TNZ,H1    C3                . MAKE SURE THAT C3 TABLE IS NOT EYM
)@@G@@MPTY  @B@@@@          SLJ       RER078            .   @G@@@@          SZYN
)@@G@@        A1                . $P ZERO OUT MAX PAGE INITIALLY  @E@@@@      YO
)@@G@@    LA,H2     A0,C3             . $P C3 ADDRESS TO A0 @B@@@@          LAYP
)@@G@@,H2     A4,C3             .   @E@@@@          AA,H1     A4,C3           YQ
)@@G@@  . # OF WORDS TO A4    @[@@@@ .    @[@@@@ .    @G@@@@MXPGLP1   LA,T1   YR
)@@G@@  A2,3,A0           . $P PAGE SIZE OF FIRST AREA ENTRY@G@@@@          TGYS
)@@G@@        A1,A2             . COMPARE PAGE SIZE WITH MAXIMUM  @H@@@@      YT
)@@G@@    J         $+2               . $P IF BIGGER, MOVE CURRENT TO MAX     YU
)@@G@@@B@@@@          LA        A1,A2             .   @E@@@@          TNZ,T3  YV
)@@G@@  0,A0              . $T ARE WE DONE      @E@@@@          J         MXPGYW
)@@G@@DON           . $A YES,MXPGDON NO   @F@@@@          AA,T3     A0,0,A0   YX
)@@G@@        . $P POINT TO NEXT ENTRY    @B@@@@          TG        A0,A4     YY
)@@G@@        .   @B@@@@          SLJ       RER068            .   @D@@@@      YZ
)@@G@@    J         MXPGLP1           . $J MXPGLP1    @[@@@@ .    @]@@@@MXPGDOZA
)@@G@@N .   @E@@@@                                      . SCANNED ALL AREAS   ZB
)@@G@@@I@@@@          TNZ       A1                . MAKE SURE THAT MAX PAGE SIZC
)@@G@@ZE NOT ZERO       @B@@@@          SLJ       RER068            .   @F@@@@ZD
)@@G@@          SA        A1,MAXPSIZE       . $P SAVE MAX PAGE SIZE     @C@@@@ZE
)@@G@@          J         *MXPGET           . $E EXIT @[@@@@ .    @[@@@@ .    ZF
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @F@@@@ . SUBZG
)@@G@@ROUTINE TO MCORE A BUFFER TO CONTAIN THE FOREIGN PAGE IN    @D@@@@ . THEZH
)@@G@@ CASE WHERE A FOREIGN RECORD IS ENCOUNTERED.    @D@@@@ . THE BUFFER SIZEZI
)@@G@@ WILL BE DETERMINED BY MAXPSIZE.    @D@@@@ . WILL RETURN ADDRESS OF FOREZJ
)@@G@@IGN PAGE BUFFER IN A3   @[@@@@ .    @[@@@@ .    @C@@@@FORMCORE  +       ZK
)@@G@@  0                 . $H      @D@@@@          DS        A0,FORRSAVE     ZL
)@@G@@  .$P SAVE A0,A1  @B@@@@          P$RINT    (PF1 1,9,MSGFOR)  .   @F@@@@ZM
)@@G@@          LA        A0,MAXPSIZE       . $P # OF WORDS TO MCORE    @B@@@@ZN
)@@G@@          LA        A1,LAST$D         .   @B@@@@          AA,U      A1,1ZO
)@@G@@              .   @G@@@@          SA        A1,FORBFAD        . $P ADDR ZP
)@@G@@OF NEW BUFFER TO FORBFAD@F@@@@          LA        A3,A1             . $PZQ
)@@G@@ ADDR OF NEW BUFFER     @B@@@@          AA        A0,LAST$D         .   ZR
)@@G@@@E@@@@          SA        A0,LAST$D         . $P UPDATE LAST$D    @B@@@@ZS
)@@G@@          ER        MCORE$            .   @B@@@@          DL        A0,FZT
)@@G@@ORRSAVE       .   @C@@@@          J         *FORMCORE         . $E EXIT ZU
)@@G@@@[@@@@$(2)  @^@@@@Z2*       +         0,0 @E@@@@MRGADD    +         0   ZV
)@@G@@              . ADDR OF MERGE TABLE @E@@@@RNGADD    +         0         ZW
)@@G@@        . ADDR OF RANGE TABLE @F@@@@RECADD    +         0               ZX
)@@G@@  . ADDR OF RECORD BUFFER     @G@@@@BFIADD    +         0         . TABLZY
)@@G@@E FOR INDEXING INTO DATA BUFFER     @G@@@@BUFADD    RES       1         ZZ
)@@G@@. ADDR OF DATA BUFFER TO STORE PAGES      @E@@@@C4ADD     +         0   AA
)@@G@@              . ADDRESS OF C4 TABLE @F@@@@C4TBNM    +         0         AB
)@@G@@        . # OF ENTRIES IN OVERFLOW  @D@@@@                              AC
)@@G@@        . RANGE TABLE   @]@@@@MRGNUM .    @E@@@@MRGARE    RES       1   AD
)@@G@@              . T1 IS AREA CODE     @G@@@@                              AE
)@@G@@        . H2 IS # OF ENTRIES IN MERGE TAB @F@@@@OLDARE    +         0   AF
)@@G@@      . AREA CODE FROM DECOMPOSING DBP    @E@@@@OLDPGE    +         0   AG
)@@G@@      . PAGE # FROM DECOMPOSING DBP @E@@@@OLDSLT    +         0         AH
)@@G@@. SLOT # FROM DECOMPOSING DBP @E@@@@OLDC3A    +         0         . ADDRAI
)@@G@@ OF AREA ENTRY IN C3    @G@@@@NEWARE    +         0         . AREA CODE AJ
)@@G@@WHERE RECORD IS TO BE LOADED  @G@@@@NEWPGE    +         0         . PAGEAK
)@@G@@ # WHERE RECORD WILL BE RELOADED    @E@@@@NEWSLT    +         0         AL
)@@G@@. SLOT # ASSIGNED TO RECORD   @E@@@@NEWC3A    +         0         . POINAM
)@@G@@TER TO C3 ENTRY FOR AREA@G@@@@Z2ENT     +         0         . POINTER TOAN
)@@G@@ Z2 ENTRY FOR RECORD BEING REL@G@@@@Z2AREA    +         0         . POINAO
)@@G@@TER TO AREA ENTRY WITHIN Z2 ENTRY   @[@@@@ .    @G@@@@RELNUM*   +       AP
)@@G@@  0                 . NUMBER OF RECORDS RELOADED      @G@@@@RELSNUM*  + AQ
)@@G@@        0                 . # OF VIA SET RECS RELOADED      @F@@@@RELCNUAR
)@@G@@M*  +         0                 . # OF CALC RECS RELOADED   @G@@@@RELDNUAS
)@@G@@M*  +         0                 . # OF DIRECT RECS RELOADED       @E@@@@AT
)@@G@@CURARE    +         0         . CURRENT AREA OF RELOAD      @F@@@@CURRECAU
)@@G@@    +         0         . CURRENT RECORD BEING RELOADED     @G@@@@CURPGEAV
)@@G@@    +         0         . CURRENT PAGE NUMBER BEING RELOADED      @G@@@@AW
)@@G@@CURBLK    +         0         . ADDRESS OF BLOCK WHERE CURRENT PGE IS   AX
)@@G@@@E@@@@CURADD    +         0         . ADDRESS OF CURRENT PAGE     @G@@@@AY
)@@G@@DESARE    +         0                 . DESTINATION AREA FOR RECORD     AZ
)@@G@@@G@@@@RELPGE    +         0         . RELATIVE LOCATION OF PAGE WITHIN BBA
)@@G@@LOCK  @^@@@@NEWDBP    +         0   @I@@@@FROMSW    +         0         BB
)@@G@@        . TO INDICATE IF FROM AREA WAS SPECIFIED      @F@@@@STNARE    + BC
)@@G@@        0                 . STORE NEAR LOGIC AREA     @F@@@@STNPGE    + BD
)@@G@@        0                 . STORE NEAR LOGIC PAGE     @F@@@@STNRSW    + BE
)@@G@@        0                 . SW FOR STORE NEAR LOGIC   @G@@@@ST7RAP    + BF
)@@G@@        0                 . STORE NEAR LOGIC FOR WRAP AROUND@^@@@@SPACSWBG
)@@G@@    +         0   @G@@@@MAXPSIZE  +         0                 . WILL CONBH
)@@G@@TAIN MAXIMUM PAGE SIZE  @I@@@@MAXRSIZE  +         MXRSIZ            . MABI
)@@G@@XIMUM RECORD SIZE FOR REORGANIZATION      @E@@@@BUFENT    +         0   BJ
)@@G@@      . # OF BLOCK ENTRIES IN BUFFER@H@@@@BUFPT1    +         0         BK
)@@G@@. POINTER TO ENTRIES OF BUF INX TAB,INC BY 2    @I@@@@C4ENT     +       BL
)@@G@@  0                 . WILL STORE THE ADDRESS OF LAST C4 ENTRY     @H@@@@BM
)@@G@@Z2AENT    +         0                 . SAVES LAST AREA ENTRY ADDRESS INBN
)@@G@@ Z2   @E@@@@OWNARE    +         0                 . AREA OF OWNER       BO
)@@G@@@E@@@@OWNPGE    +         0                 . PAGE OF SET OWNER   @F@@@@BP
)@@G@@OWNRSW    +         0                 . SW FOR SET OWNER RECORD   @F@@@@BQ
)@@G@@                              . BASE BUFFER (2 WRDS PER ENTRY)    @G@@@@BR
)@@G@@                               . A0 WILL POINT TO AREA ENTRY IN C3      BS
)@@G@@@F@@@@BUFPKT    RES       4         . PKT FOR   THE BUFFERING ROUTINE   BT
)@@G@@@G@@@@                                      . H1 IS STATUS, H2 IS FN CODBU
)@@G@@E     @H@@@@                                      . T1 IS AREA CODE, H2 BV
)@@G@@IS PAGE NUMBER    @G@@@@                                      . H2 IS Z2BW
)@@G@@ AREA ENTRY ADDRESS     @I@@@@                                      . H1BX
)@@G@@ INDICATE 2ND CALL, INDICATE PGE TYPE     @G@@@@BPKTSV    RES       4   BY
)@@G@@              . TO SAVE BUFPKT FOR EVERY RECORD @G@@@@DBPPKT    RES     BZ
)@@G@@  9         . PKT FOR   THE DATA BASE ACCESS METHOD   @H@@@@KFAPKT    RECA
)@@G@@S       46                . PACKET FOR KEY FILE ACCESS METHOD     @[@@@@CB
)@@G@@$(4)  @D@@@@RSAVE1    RES       1         . TO SAVE R1 REGISTER   @E@@@@CC
)@@G@@XSAVE1    RES       2         . TO SAVE X1 AND X2 REGISTERS @E@@@@SAVER1CD
)@@G@@    RES       25        . TO SAVE X3-A15 REGISTERS    @G@@@@FORRSAVE  RECE
)@@G@@S       2                 .  TO SAVE REGISTERS FOR FORMCORE @G@@@@DFIEOFCF
)@@G@@    +         0777777777777 . END OF FILE RETURN CODE FROM D-FILE @G@@@@CG
)@@G@@CALMSK    +         040       . MASK FOR RECORD DESCRIPTION TO TELL IF  CH
)@@G@@@C@@@@                              . RECORD IS CALC  @^@@@@CALPR2    RECI
)@@G@@S       3   @[@@@@$(8)  @[@@@@ .    @G@@@@CLPGE*    +         0         CJ
)@@G@@. $ PAGE # RETURNED BY CALC ROUTINE       @G@@@@CLCHNE*   +         0   CK
)@@G@@      . CALC CHAIN # RETURNED BY CALC ROUTINE   @G@@@@CLCHDR*   +       CL
)@@G@@  0         . POINTER TO CALC CHAIN HEADER CONSIDERED @E@@@@RLRCAD*   + CM
)@@G@@        0         . ADDRESS OF RELOADED REC     @G@@@@CHDREL*   +       CN
)@@G@@  0         . RELATIVE LOC OF CALC HDR WITHIN PGE     @G@@@@CLCHAD*   + CO
)@@G@@        0         . ADDRESS OF CALC CHAIN HEADER RETURNED   @G@@@@RELATVCP
)@@G@@*   +         0         . RELATIVE LOCATION OF CALC PTR JUST RELOA@G@@@@CQ
)@@G@@PPGADD*   +         0         . ADDRESS TO PRIMARY PAGE IN CASE OF CALC CR
)@@G@@@G@@@@PPGNUM*   +         0         . PRIMARY PAGE NUMBER IN CASE OF CALCS
)@@G@@C     @F@@@@FORPGE*   +         0         . # OF PAGE WHERE FOREIGN REC CT
)@@G@@IS    @E@@@@FORREC*   +         0         . FOREIGN RECORD NUMBER       CU
)@@G@@@D@@@@FORSLT*   +         0         . SLOT ON FOREIGN PGE   @D@@@@CLSAVPCV
)@@G@@*   +         0         . TO SAVE CALC POINTER  @F@@@@CLNXTP*   +       CW
)@@G@@  0         . NEXT POINTER FOUND ON CALC CHAIN  @F@@@@CLCARE*   +       CX
)@@G@@  0         . AREA POINTED TO BY CALC POINTER   @F@@@@CLCPGE*   +       CY
)@@G@@  0         . PAGE POINTED TO BY CALC POINTER   @F@@@@CLCSLT*   +       CZ
)@@G@@  0         . SLOT POINTED TO BY CALC POINTER   @C@@@@CLCC3A*   +       DA
)@@G@@  0         . C3 TABLE ENTRY  @G@@@@FORRSW*   +         0         . SWITDB
)@@G@@CH WILL INDICATE THAT A FOREIGN REC @G@@@@                              DC
)@@G@@. HAS BEEN ENCOUNTERED, CLSAVP UPDATED    @E@@@@CENDSW*   +         0   DD
)@@G@@      . END OF CALC CHAIN SWITCH    @E@@@@HEZRSW*   +         0         DE
)@@G@@. HEADER EQUAL ZERO SWITCH    @G@@@@CHOVSW    +         0               DF
)@@G@@  . CLC HDR POINTS DIRECTLY TO OV   @D@@@@WRAPSW*   +         0         DG
)@@G@@. WRAP AROUND SWITCH    @C@@@@ARSCAN*   +         0         . AREA SCAN DH
)@@G@@SWITCH@F@@@@OLDSUM*   +         0         . SUM SAVED HERE FOR WRAP AROUDI
)@@G@@ND    @D@@@@LSTPGE*   +         0         . NUMBER OF LAST PGE    @G@@@@DJ
)@@G@@LSRADD*   +         0         . ADDRESS OF LAST CALC RECORD ON CHAIN    DK
)@@G@@@G@@@@LSRREL*   +         0         . RELATIVE LOC OF PTR IN LAST CALC RDL
)@@G@@ECORD @G@@@@LSRSLT*   +         0         . SLOT OF LAST CALC RECORD IN DM
)@@G@@CHAIN       @F@@@@STDWRAP   +         0                 . FOR DATA PAGE DN
)@@G@@WRAPAROUND  @G@@@@STOWRAP   +         0                 . FOR OVERFLOW PDO
)@@G@@AGE WRAPAROUND    @G@@@@STGWRAP   +         0                 . FOR GLOBDP
)@@G@@AL OVERFLOW WRAPAROUND  @H@@@@STIWRAP   +         0                 . FODQ
)@@G@@R INTERSPERSED OVERFLOW WRAPAROUND  @G@@@@RELWAR    +         0         DR
)@@G@@        . TO INDICATE ERROR POSSIBILITY   @G@@@@FORBFAD   +         0   DS
)@@G@@              . ADDR OF FOREIGN PAGE BUFFER     @E@@@@PPTMSK*   +    000DT
)@@G@@0010000000  . PRIMARY PAGE INDICATOR MASK @F@@@@RFPMSK*   +     02000000DU
)@@G@@00000 . RECORD IS FOREIGN TO THIS PAGE    @G@@@@SHPMSK*   +     01000000DV
)@@G@@00000 . SECOND HALF OF SLOT IS PAGE NUMBER      @]@@@@$(10)       @B@@@@DW
)@@G@@MSGNUM    ' RECORDS RELOADED'         .   @^@@@@MSGVIA    ' VIA SET, '  DX
)@@G@@@^@@@@MSGCAL    ' CALC AND '  @^@@@@MSGDIR    ' DIRECT'     @A@@@@MSGNPGDY
)@@G@@    'NO PAGE RANGE, RECORD '  @^@@@@MSGARE    ' AREA '      @E@@@@MSGCLCDZ
)@@G@@    ' PGE# RETURNED BY CALC IS 0,   RECORD CODE '     @E@@@@MSGCL1    'CEA
)@@G@@ANNOT RELOAD IN AREA RETURNED BY CALC, RECORD'  @C@@@@MSGSPCE   'NO MOREEB
)@@G@@ SPACE AVAILABLE,  RECORD: '  @F@@@@MSGFOR    'FOREIGN RECORD ON CALC CHEC
)@@G@@AIN, WILL MCORE FOR BUFFER'   @C@@@@MSGSRCH   'C TABLE SEARCH FAILURE FOED
)@@G@@R CODE: '   @^@@@@MSGC11    ' AREA '      @C@@@@MSGDR1    'WARNING: DIREEE
)@@G@@CT RECORD NUMBER '      @A@@@@MSGDR2    ' COLLISION, AREA '       @^@@@@EF
)@@G@@MSGDR3    ', PAGE '     @A@@@@MSGDR4    'RECORD NUMBER OF SLOT '  @A@@@@EG
)@@G@@MSGDR5    ' FOR RECORD CODE '       @ @@@@MSGDR6    ' CHANGED FROM '    EH
)@@G@@@#@@@@MSGDR7    ' TO '  @E@@@@MSGAST    '*******************************EI
)@@G@@***********'      @E@@@@MSGRWA    '* WARNING: POSSIBLE RELOAD PROCESS EREJ
)@@G@@ROR *'      @]@@@@ .          @]@@@@ .          @]@@@@$(6)        @G@@@@EK
)@@G@@DIRSW     +         0              . SEE EQUF BELOW, RESET AFTER REL RECEL
)@@G@@@G@@@@DIRSW1    EQUF      DIRSW,,S1      . TO INDICATE THAT RECORD IS DIEM
)@@G@@RECT  @G@@@@DIRSW2    EQUF      DIRSW,,S2      . TO INDICATE DIRECT CONTEN
)@@G@@ROL RECORD  @G@@@@DIRWAR    EQUF      DIRSW,,S3      . TO INDICATE THAT EO
)@@G@@WARNING MUST BE   @I@@@@                                   . ISSUED TO UEP
)@@G@@SER ON RECORD # COLLISION           @G@@@@DIRCNTL   +         0         EQ
)@@G@@     . HOLD INFO FROM DIRECT CONTROL REC  @E@@@@                        ER
)@@G@@           . H1 WILL HAVE PAGE NUM  @G@@@@                              ES
)@@G@@     . H2 WILL HAVE RECORD NUMBER         @G@@@@                        ET
)@@G@@           . RESET AFTER RELOADING DIRECT RECORD@G@@@@NEWRNU    +       EU
)@@G@@  0              . NEW RECORD NUMBER FOR OLD SLOT     @]@@@@ .          EV
)@@G@@@]@@@@ .          @G@@@@Z1ENSW    +         0         . TO STORE RET CODEW
)@@G@@E UPON SEARCH OF Z1     @E@@@@RET1     +         0         . RETURN  ADDEX
)@@G@@RESS OF RNUSLT    @^@@@@RET2     +         0    @^@@@@RET3     +        EY
)@@G@@ 0    @^@@@@RET4     +         0    @^@@@@RET5     +         0    @^@@@@EZ
)@@G@@RET6     +         0    @^@@@@RET7      +         0   @^@@@@BUFRET    + FA
)@@G@@      0     @E@@@@FSLTVA   +         0         . POINTER TO FIRST SLOT OFB
)@@G@@N PAGE@E@@@@RNLARG   +         0         . LARGEST RECORD NUMBER FOUND  FC
)@@G@@@E@@@@RSPSA1   RES      1         . SAVE FOR FREE WRDS IN RSPACE  @G@@@@FD
)@@G@@RSPSA2   RES      2          . SAVE FOR REC LNGTH, FILL IN RSPACE       FE
)@@G@@@^@@@@RNUSA1   RES       1    @A@@@@SIUMSK   +         0400000000000    FF
)@@G@@@G@@@@Z1CPAR    +         0231000000000     . PARAMETER FOR WRITING Z1 TFG
)@@G@@ABLE  @G@@@@Z2CPAR    +         0241000000000     . PARAMETER FOR WRITINFH
)@@G@@G Z2 TABLE  @E@@@@RETURN    +         0                 . RETURN TO MAINFI
)@@G@@ PROG @]@@@@         END___     0                 . RETURN TO MAIN PROG FJ
)@@G@@@]@@@@         END___   *[@@@@*SDFF*@#@@@@          AXR$    @#@@@@$(4)  FK
)@@G@@    LIT     @]@@@@$(1).       @[@@@@.     @^@@@@.         * COMPACT *   FL
)@@G@@@[@@@@.     @E@@@@.         THISROUTINE COMPACTS PAGES AS THEY ARE LISTEFM
)@@G@@D     @F@@@@.         IN DPGCNT*  &  DPGTBL*AND WRITE THEM BACK TO THE DFN
)@@G@@. B.  @F@@@@.         IN OVFCNT*  &  OVFTBL*AND WRITE THEM BACK TO THE DFO
)@@G@@. B.  @[@@@@.     @^@@@@.         ENTERED:      @A@@@@.                 FP
)@@G@@  SLJ   COMPACT   @C@@@@COMPACT*  +0                          . $H      FQ
)@@G@@@E@@@@          LA,H1     A0,DPGCNT         . $P GET PAGE COUNT   @B@@@@FR
)@@G@@          SA        A0,COUNT          .   @B@@@@COMPLP1.                FS
)@@G@@              $H  @F@@@@          LA        A0,COUNT          . $P GET PFT
)@@G@@AGE COUNT LEFT    @D@@@@          JZ        A0,COMPOVF        . $J NONE FU
)@@G@@LEFT  @C@@@@          ANA,U     A0,1              . $P -1   @D@@@@      FV
)@@G@@    SA        A0,COUNT          . $P SAVE IT    @E@@@@          LX,H2   FW
)@@G@@  X9,DPGTBL,A0      . $P GET PAGE ADDR    @D@@@@          LMJ       X11,FX
)@@G@@PACKPG        . $W PACK IT    @C@@@@          J         COMPLP1         FY
)@@G@@  . $J NEXT @B@@@@COMPOVF.                              $H  @E@@@@      FZ
)@@G@@    LA,H1     A0,OVFCNT         . $P GET PAGE COUNT   @B@@@@          SAGA
)@@G@@        A0,COUNT          .   @B@@@@COMPLP2.                            GB
)@@G@@  $H  @F@@@@          LA        A0,COUNT          . $P GET PAGE COUNT LEGC
)@@G@@FT    @D@@@@          JZ        A0,WRTPGE         . $J NONE LEFT  @C@@@@GD
)@@G@@          ANA,U     A0,1              . $P -1   @D@@@@          SA      GE
)@@G@@  A0,COUNT          . $P SAVE IT    @E@@@@          MSI,U     A0,2      GF
)@@G@@        . $P COMPUTE TBL ADDR @E@@@@          LX,H2     X9,OVFTBL+1,A0  GG
)@@G@@  . $P GET PAGE ADDR    @D@@@@          LMJ       X11,PACKPG        . $WGH
)@@G@@ PACK IT    @C@@@@          J         COMPLP2           . $J NEXT @B@@@@GI
)@@G@@WRTPGE.                               $H  @[@@@@.     @F@@@@.         * GJ
)@@G@@WRTPGE *   A SUBROUTINE TO WRITE ALL PAGES WHICH ARE  @B@@@@.           GK
)@@G@@        DELETED & COMPACTED   @[@@@@.     @[@@@@.     @E@@@@          LAGL
)@@G@@,U      A0,010            . $P SET TO WRITE     @B@@@@          SA,S2   GM
)@@G@@  A0,DPKT1          .   @G@@@@          LX,U      X10,DLTPKT        . $PGN
)@@G@@ WRITE FIRST CONTIGOUT PGE'S  @B@@@@          LMJ       X11,DB$AM       GO
)@@G@@  .   @ @@@@          TZ,S1     DPKT1     @A@@@@          LMJ       X11,GP
)@@G@@IOERR       @E@@@@          LA,U      A0,010            . $P SET TO WRITGQ
)@@G@@E     @B@@@@          SA,S2     A0,OVFPKT1        .   @E@@@@          LAGR
)@@G@@        A0,OVFCNT         . $P GET OVF CNT      @D@@@@          SA      GS
)@@G@@  A0,COUNT          . $P SAVE IT    @B@@@@WRTOVFLP.                     GT
)@@G@@        $H  @E@@@@          LA        A0,COUNT          . $P GET PAGES LGU
)@@G@@EFT   @D@@@@          JZ        A0,*COMPACT       . $J RETURN     @C@@@@GV
)@@G@@          ANA,U     A0,1              . -1      @B@@@@          SA      GW
)@@G@@  A0,COUNT          .   @E@@@@          MSI,U     A0,2              . $PGX
)@@G@@ COMPUTE TBL ADDR @E@@@@          LA,H2     A1,OVFTBL,A0      . $P GET PGY
)@@G@@AGE NUMBER  @B@@@@          SA,H2     A1,OVFPKT3        .   @E@@@@      GZ
)@@G@@    LA        A1,OVFTBL+1,A0    . $P GET BUF ADDR     @B@@@@          SAHA
)@@G@@,H2     A1,OVFPKT2        .   @E@@@@          LA,H1     A0,OVFTBL,A0    HB
)@@G@@  . $P GET AREA CODE    @F@@@@          SLJ       GETASIZE          . $PHC
)@@G@@ GET PAGE SIZE,NAME     @C@@@@          TNZ       A0                . $THD
)@@G@@ OK   @B@@@@          ER        ERR$              .   @C@@@@          SAHE
)@@G@@,H1     A0,OVFPKT3        . $P      @E@@@@          DS        A1,OVFPKT HF
)@@G@@        . $P SAVE AREA NAME   @E@@@@          LX,U      X10,OVFPKT      HG
)@@G@@  . $P GET I/O PKT      @B@@@@          LMJ       X11,DB$AM         .   HH
)@@G@@@C@@@@          TZ,S1     OVFPKT1           . $T OK   @B@@@@          LMHI
)@@G@@J       X11,IOERR         .   @ @@@@          J         WRTOVFLP  @]@@@@HJ
)@@G@@$(4).       @]@@@@COUNT     +0@#@@@@          END     ___^@)^@)^@)^@)^@)HK
)@@G@@^@) 0) *1^@)@E@@_@^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC0 -#D9PD1O^@)^@)^@)^@)HL
)@@G@@*[@@@@*SDFF*@#@@@@          AXR$    @#@@@@$(4)      LIT.    @]@@@@$(1). HM
)@@G@@      @[@@@@.     @G@@@@.         * DECALC *    TO REMOVE A CALC RECORD HN
)@@G@@FROM ITS CALC BUCKET    @[@@@@.     @A@@@@.         ENTERED:  SLJ  DECALHO
)@@G@@C     @E@@@@.         (IN)      DBP1* = CURRENT SLOT BEEN DELETED       HP
)@@G@@@F@@@@.                   DBP2* = CALC CHAIN LINK TO NXT CALC RECORD    HQ
)@@G@@@C@@@@.                   X8 POINT TO CURRENT PAGE    @ @@@@PGSIZE    EQHR
)@@G@@UF      2,X8,H1   @ @@@@UNUSED    EQUF      2,X8,H2   @ @@@@SLOTS     EQHS
)@@G@@UF      3,X8,H1   @ @@@@LASTVAC   EQUF      3,X8,H2   @ @@@@PGTYPE    EQHT
)@@G@@UF      1,X8,S2   @ @@@@CALCNUM   EQUF      6,X8,H1   @ @@@@PGNUM     EQHU
)@@G@@UF      1,X8,H2   @ @@@@ACODE     EQUF      1,X8,T1   @ @@@@RCDTYPE   EQHV
)@@G@@UF      0,X7,T1   @ @@@@RCDDESC   EQUF      0,X7,S3   @ @@@@RCDLENG   EQHW
)@@G@@UF      0,X7,H2   @ @@@@SLTDESC   EQUF      0,X6,S1   @ @@@@DISP      EQHX
)@@G@@UF      0,X6,H2   @C@@@@DECALC*   +0                          . $H      HY
)@@G@@@B@@@@          LA        A0,(1,X6)         .   @E@@@@          SA      HZ
)@@G@@  A0,CALCSW         . $P SET CALC SW      @B@@@@          LA        A1,(IA
)@@G@@1,SAVEX)      .   @E@@@@          LR,U      R1,6              . $P SAVE IB
)@@G@@X6 - X11    @B@@@@          BT        A1,0,*A0          .   @G@@@@      IC
)@@G@@    SZ        SWCCH             . $P RESET CALC CHAIN HEADER SW   @B@@@@ID
)@@G@@          LA        A0,DBP2           .   @]@@@@DECLP1.     @F@@@@      IE
)@@G@@    SA        A0,PKTKEY         . $P SAVE IT IN KF$AM PKT   @F@@@@      IF
)@@G@@    SLJ       CHASE             . $P CHASE NXT CALC RECORD  @D@@@@      IG
)@@G@@    TNZ       X7                . $T IS IT CCH  @E@@@@          J       IH
)@@G@@  NODLT1            . $A YES,NODLT1 NO    @I@@@@          LR,T1     R1,DII
)@@G@@LTC10         . $T CHK IF RECORD TYPE SHOULD BE DELETED     @G@@@@      IJ
)@@G@@    LX        X1,(1,DLTC10)     . $P DELETED RECORD TYPES TBL     @B@@@@IK
)@@G@@          LA        A0,RCDTYPE        .   @G@@@@          SE,T3     A0,0IL
)@@G@@,*X1          . $T SHOULD THIS RECORD BE DELETED@E@@@@          J       IM
)@@G@@  NODLT2            . $A YES NO,NODLT2    @D@@@@          LA        A0,PIN
)@@G@@KTKEY         . $P GET DBP    @E@@@@          SLJ       CHKEY           IO
)@@G@@  . $P CHK DBP IN K$FILE@D@@@@          TZ        KEYOK             . $TIP
)@@G@@ STATUS OK  @E@@@@          J         NODLT2            . $A YES NO,NODLIQ
)@@G@@T2    @G@@@@          LA,U      A0,1              . $P COMPUTE DLT RECORIR
)@@G@@D  CNT      @B@@@@          AA        A0,DLTCNT         .   @B@@@@      IS
)@@G@@    SA        A0,DLTCNT         .   @E@@@@          LA        A0,(077776IT
)@@G@@7777777). $P MARKING PROCESS  @ @@@@          AND       A0,0,X7   @ @@@@IU
)@@G@@          SA        A1,0,X7   @F@@@@          LA        A0,RCDLENG      IV
)@@G@@  . $P UPDATE UNUSED WRDS     @B@@@@          AA        A0,UNUSED       IW
)@@G@@  .   @D@@@@          SA        A0,UNUSED         . $P SAVE IT    @B@@@@IX
)@@G@@          LA        A0,(0400000000000)    @ @@@@          OR        A0,0IY
)@@G@@,X6   @B@@@@          LA        A0,(0477777000000)    @ @@@@          ANIZ
)@@G@@D       A0,A1     @ @@@@          SA        A1,0,X6   @G@@@@          TNJA
)@@G@@Z       X5                . $T AN FOREIGN PAGE INVOLED      @E@@@@      JB
)@@G@@    J         STEP01            . $A YES NO,STEP01    @I@@@@          LAJC
)@@G@@        A0,(0400000000000).                                 $P MARKI    JD
)@@G@@@ @@@@          OR        A0,0,X5   @B@@@@          LA        A0,(047777JE
)@@G@@7000000)    @ @@@@          AND       A0,A1     @ @@@@          SA      JF
)@@G@@  A1,0,X5   @]@@@@STEP01.     @I@@@@          SLJ       GETCCL          JG
)@@G@@  . $W GET RELATIVE ADDR OF CALC CHAIN WD       @G@@@@          TZ      JH
)@@G@@  SWCCH             . $T PREVIOUS A CALC CHAIN HEADER @E@@@@          J JI
)@@G@@        CHGPRI            . $A YES NO,CHGPRI    @G@@@@          LA      JJ
)@@G@@  A0,0,X1           . $P GET LINK NEXT CALC POINTER   @D@@@@          SAJK
)@@G@@        A0,DBP2           . $P SAVE IT    @ @@@@          J         DECLJL
)@@G@@P1    @C@@@@NODLT1                                . $H      @F@@@@      JM
)@@G@@    SX        X9,SWCCH          . $P JUST RESET A SWITCH    @F@@@@      JN
)@@G@@    SX        X9,DBPF1          . $P SAVE THE NEW DBP PAIR  @B@@@@      JO
)@@G@@    LA        A0,0,X6           .   @B@@@@          SA        A0,DBPF2  JP
)@@G@@        .   @E@@@@          LX        X1,X6             . $P SET X1 TO SJQ
)@@G@@LOT   @B@@@@          J         CHKPTR            .   @C@@@@NODLT2      JR
)@@G@@                          . $H      @E@@@@          SX        X9,SWCCH  JS
)@@G@@        . $P RESET SWITCH     @F@@@@          SX        X9,DBPF1        JT
)@@G@@  . $P SAVE THE NEW DBP PAIR  @ @@@@          SLJ       GETCCL    @ @@@@JU
)@@G@@          LA        A0,0,X1   @ @@@@          SA        A0,DBPF2  @ @@@@JV
)@@G@@          J         CHKPTR    @C@@@@CHASE     +0                        JW
)@@G@@  . $H      @[@@@@.     @^@@@@.        (IN)   A0 = DBP@F@@@@.        (OUJX
)@@G@@T)  X5 = PRIME PAGE SLOT ADDR IF DBP IN A0 POINTS     @C@@@@.           JY
)@@G@@        TO A FOREIGN PAGE, 0 IF NONE@^@@@@.         X6 = SLOT ADDR@A@@@@JZ
)@@G@@.         X7 = RECORD ADDR, 0 IF CCH@A@@@@.         X8 = PAGE(TOP) ADDR KA
)@@G@@      @C@@@@.         X9 = ORIGINAL CONTENT       OF A0     @D@@@@      KB
)@@G@@    SZ        X5                . $P RESET X5   @E@@@@          LX      KC
)@@G@@  X9,A0             . $P SAVE DBP IN X9   @D@@@@          SLJ       DBP$KD
)@@G@@APS           . $P PARSE DBP  @D@@@@          TNZ       A1              KE
)@@G@@  . $T GOOD DBP   @B@@@@          ER        ERR$              .   @D@@@@KF
)@@G@@          SLJ       GETPG             . $W GET PG     @G@@@@          LAKG
)@@G@@        A0,CALCNUM        . $P GET CALC BUCKET NUMBER       @E@@@@      KH
)@@G@@    TG        A0,A3             . $T SEE IF HIT CCH   @ @@@@          J KI
)@@G@@        HITCCH    @ @@@@          LX        X6,X8     @E@@@@          AXKJ
)@@G@@        X6,PGSIZE         . $A YES,HITCCH NO    @ @@@@          ANX     KK
)@@G@@  X6,A3     @B@@@@          TP        0,X6              .   @B@@@@      KL
)@@G@@    LMJ       X11,BADCCL        .   @F@@@@          LA        A0,(010000KM
)@@G@@0000000). $T CHECK IF FOREIGN PG    @B@@@@          AND       A0,0,X6   KN
)@@G@@        .   @E@@@@          JZ        A1,NOTFRG         . $A YES  NO,NOTKO
)@@G@@FRG   @B@@@@          LX        X5,X6             .   @B@@@@          LAKP
)@@G@@,H2     A2,0,X6           .   @E@@@@          LA        A1,1,X8         KQ
)@@G@@  . $P GET AREA CODE    @D@@@@          SSL       A1,24             . $PKR
)@@G@@ GET PAGE   @B@@@@          SLJ       GETPG             .   @B@@@@      KS
)@@G@@    LX        X6,X8             .   @B@@@@          AX        X6,PGSIZE KT
)@@G@@        .   @B@@@@          ANX,U     X6,1              .   @B@@@@      KU
)@@G@@    ANX       X6,CALCNUM        .   @B@@@@          LXI,U     X6,-1     KV
)@@G@@        .   @B@@@@          LR        R1,SLOTS          .   @B@@@@      KW
)@@G@@    LA        A0,0,X5           .   @B@@@@          LR        R2,(000777KX
)@@G@@7000000).   @]@@@@MSELOP.     @B@@@@          MSE       A0,0,*X6        KY
)@@G@@  .   @B@@@@          LMJ       X11,BADCCL        .   @F@@@@          LAKZ
)@@G@@        A10,(0200000000000).  $T AN FOREIGN RECORD    @B@@@@          ANLA
)@@G@@D       A10,1,X6          .   @E@@@@          JZ        A11,MSELOP      LB
)@@G@@  . $A YES NO,MSELOP    @G@@@@          LX        X7,X8             . $TLC
)@@G@@ CHECK PRIME PAGE POINTER     @B@@@@          AX,H2     X7,1,X6         LD
)@@G@@  .   @G@@@@          LA        A10,RCDLENG       . $P COMPUTE ADDR OF PLE
)@@G@@RIME POINTER@ @@@@          ANA,U     A10,1     @B@@@@          AX      LF
)@@G@@  X7,A10            .   @B@@@@          LA        A10,0,X7          .   LG
)@@G@@@E@@@@          TE        A10,X9            . $A YES NO,MSELOP    @B@@@@LH
)@@G@@          J         MSELOP            .   @B@@@@          AX        X6,(LI
)@@G@@1,1)         .    @]@@@@NOTFRG.     @B@@@@          LX        X7,X8     LJ
)@@G@@        .   @B@@@@          AX,H2     X7,0,X6           .   @B@@@@      LK
)@@G@@    J         *CHASE            .   @B@@@@HITCCH.                       LL
)@@G@@        .   @B@@@@          SZ        X7                .   @B@@@@      LM
)@@G@@    LX        X6,X8             .   @B@@@@          JZ        A3,CCH0   LN
)@@G@@        .   @B@@@@          AX        X6,PGSIZE         .   @B@@@@      LO
)@@G@@    ANX       X6,A3             .   @B@@@@          J         *CHASE    LP
)@@G@@        .   @B@@@@CCH0.                                 .   @B@@@@      LQ
)@@G@@    AX,U      X6,7              .   @B@@@@          J         *CHASE    LR
)@@G@@        .   @]@@@@BADCCL.     @ @@@@          E$DIT     EDPKT     @A@@@@LS
)@@G@@          E$COPY    18,CALCMSG1     @ @@@@          E$OCTF    12,DBP1   LT
)@@G@@@^@@@@          E$CHAR    ')' @A@@@@          E$COPY    34,CALCMSG2     LU
)@@G@@@#@@@@          E$DITX  @ @@@@PF        FORM      12,6,18   @A@@@@      LV
)@@G@@    P$RINT    (PF 1,14,PRINT) @]@@@@$(4).       @A@@@@CALCMSG1  'A CALC LW
)@@G@@RECORD(DBP='      @C@@@@CALCMSG2  ' PARTICIPATING IN A BAD CALC CHAIN'  LX
)@@G@@@]@@@@$(1).       @^@@@@          ER        ERR$@]@@@@GETCCL    +0@[@@@@LY
)@@G@@.     @A@@@@.         (IN)  X7 = RECORD ADDR    @A@@@@.         (OUT) X1LZ
)@@G@@ = CCL WORD ADDR  @A@@@@          LA        A0,RCDTYPE      @ @@@@      MA
)@@G@@    LX        X1,C6     @^@@@@          LXI,U     X1,1@ @@@@          LRMB
)@@G@@,H1     R1,C6     @ @@@@          SE,T1     A0,0,*X1  @A@@@@          LMMC
)@@G@@J       X11,BADCCL      @ @@@@          ANX       X1,(1,1)  @ @@@@      MD
)@@G@@    LA,T3     A0,0,X1   @ @@@@          LX        X1,A0     @ @@@@      ME
)@@G@@    AX        X1,X7     @^@@@@          ANX,U     X1,1@ @@@@          J MF
)@@G@@        *GETCCL   @[@@@@$(1)  @C@@@@CHGPRI                              MG
)@@G@@  . $H      @B@@@@          LA        A0,0,X1           .   @B@@@@      MH
)@@G@@    SA        A0,DBPF2          .   @F@@@@          LA        A0,DBPF1  MI
)@@G@@        . $P GET PRIOR RECORD SLOT  @B@@@@          SLJ       CHASE     MJ
)@@G@@        .   @F@@@@          TNZ       X7                . $T A CALC CHAIMK
)@@G@@N HEADER    @B@@@@          J         CHGCCH            .   @B@@@@      ML
)@@G@@    SLJ       GETCCL            .   @B@@@@          LA        A0,DBPF2  MM
)@@G@@        .   @B@@@@          SA        A0,0,X1           .   @B@@@@      MN
)@@G@@    J         CHKPTR            .   @B@@@@CHGCCH    LX        X1,X6     MO
)@@G@@        .   @B@@@@          LA        A0,DBPF2          .   @B@@@@      MP
)@@G@@    SA        A0,0,X1           .   @]@@@@CHKPTR.     @B@@@@          TEMQ
)@@G@@        A0,DBP1           .   @B@@@@          J         DECLP1          MR
)@@G@@  .   @B@@@@          LA        A0,DBP2           .   @B@@@@          SAMS
)@@G@@        A0,0,X1           .   @B@@@@          TNE       A0,DBPF1        MT
)@@G@@  .   @B@@@@          SZ        0,X1              .   @B@@@@          LAMU
)@@G@@        A0,(1,X6)         .   @B@@@@          LA        A1,(1,SAVEX)    MV
)@@G@@  .   @B@@@@          LR,U      R1,6              .   @B@@@@          BTMW
)@@G@@        A0,0,*A1          .   @B@@@@          J         *DECALC         MX
)@@G@@  .   @]@@@@$(4).       @]@@@@DBPF1     +0@]@@@@DBPF2     +0@H@@@@SWCCH MY
)@@G@@    +0                          . SW TO INDICATE A CALC CHAIN HEADER    MZ
)@@G@@@^@@@@SAVEX     RES       6   @#@@@@          END     ___     . $P PARSENA
)@@G@@ DBP  @D@@@@          TNZ       A1                . $T GOOD DBP   @B@@@@NB
)@@G@@          ER        ERR$              .   @D@@@@          SLJ       GETPNC
)@@G@@*[@@@@*SDFF*@#@@@@          AXR$    @[@@@@.     @[@@@@.     @^@@@@.     ND
)@@G@@  * DLTPGE  *     @[@@@@.     @G@@@@.       THIS ROUTINE WILL MARK A DELNE
)@@G@@ETE BIT ON BOTH SLOT & RECORD HEADER@H@@@@.         ON THE DATA BASE PAGNF
)@@G@@ES SUPPLIED AND THE RECORDS(CODES) SPECIFIED.   @[@@@@.     @ @@@@.     NG
)@@G@@    SLJ       DLTPGE    @F@@@@.         DEFINED:  DPGCNT  +M,N      M=N NH
)@@G@@CONT PAGES IN BUFFER    @B@@@@.                   DPGTBL  +PGN,ADDR     NI
)@@G@@@B@@@@.                                     .   @B@@@@.                 NJ
)@@G@@                    .   @[@@@@.     @[@@@@.     @#@@@@$(4)      LIT.    NK
)@@G@@@]@@@@$(1).       @C@@@@DLTPGE*   +0                          . $H      NL
)@@G@@@B@@@@          LA,H1     A0,DPGCNT         .   @E@@@@          SA      NM
)@@G@@  A0,PGCNT          . $P GET PAGE COUNT   @B@@@@          LA,H2     A0,DNN
)@@G@@PGTBL         .   @E@@@@          SA        A0,PGADDR         . $P GET PNO
)@@G@@AGES ADDR   @F@@@@DLTLOP1   LX        X8,PGADDR         . $P SET PAGE ADNP
)@@G@@DR IN X8    @E@@@@          TNZ       PGCNT             . $T ANY PAGE LENQ
)@@G@@FT    @D@@@@          J         *DLTPGE           . $J RETURN     @ @@@@NR
)@@G@@          LX        X6,X8     @G@@@@          AX        X6,PGSIZE       NS
)@@G@@  . $P SET X6 = BOTTOM OF THE PAGE  @B@@@@          ANX       X6,CALCNUMNT
)@@G@@        .   @E@@@@          ANX,U     X6,1              . $P SKIP CALC BNU
)@@G@@KTS   @B@@@@          LX        X9,SLOTS          .   @E@@@@          TNNV
)@@G@@Z       X9                . $P X9 = SLOTS       @E@@@@          J       NW
)@@G@@  NXTPG             . $T PAGE EMPTY       @E@@@@                        NX
)@@G@@              . $A YES,NXTPG NO     @B@@@@          JGD       X9,$+1    NY
)@@G@@        .   @]@@@@DLTLOP2.    @H@@@@          SZ        CALCSW          NZ
)@@G@@  . $P RESET CALCSW FOR CHKEY ROUTINE     @E@@@@          TP        0,X6OA
)@@G@@              . $T SLOT IN USE      @E@@@@          J         NXTSLT    OB
)@@G@@        . $A YES NO,NXTSLT    @E@@@@          LA        A0,(010000000000OC
)@@G@@0). $T A FOREIGN SLOT   @ @@@@          AND       A0,0,X6   @E@@@@      OD
)@@G@@    JNZ       A1,NXTSLT         . $A YES,NXTSLT NO    @B@@@@          LXOE
)@@G@@        X7,DISP           .   @E@@@@          AX        X7,X8           OF
)@@G@@  . $P GET RECORD ADDR  @E@@@@          LA        A0,RCDTYPE        . $POG
)@@G@@ GET RECORD CODE  @B@@@@          LA        A1,(1,DLTC10)     .   @B@@@@OH
)@@G@@                                      .   @B@@@@                        OI
)@@G@@              .   @G@@@@          LR,T1     R1,DLTC10         . $T CHECKOJ
)@@G@@ IF THIS RECORD TYPE    @E@@@@          SE,T3     A0,0,*A1          . $ OK
)@@G@@ SHOULD BE DELETED@E@@@@          J         NXTSLT            . $A YES NOL
)@@G@@O,NXTSLT    @E@@@@          ANA       A1,(1,1)          . $P BACK UP INDOM
)@@G@@EX    @G@@@@          SZ        CCSW              . $T CHECK IF A CALC RON
)@@G@@ECORD       @E@@@@          TZ,T2     0,A1              . $P RESET SWITCOO
)@@G@@H     @D@@@@          SA        A0,CCSW           . $P SET SWICH  @G@@@@OP
)@@G@@          LA        A0,(020000000)    . $T CHK IF A FOREIGN RECORD      OQ
)@@G@@@C@@@@          AND       A0,0,X7           . $       @E@@@@          SAOR
)@@G@@        A1,FORGSW         . $P SET FORGSW ACCORD@F@@@@          JZ      OS
)@@G@@  A1,NONFORG        . $J JUMP IF NON FOREIGN    @E@@@@          LA      OT
)@@G@@  A0,X7             . $P GET RECORD ADDR  @G@@@@          AA        A0,ROU
)@@G@@CDLENG        . $P COMPUTE SYSTEM PTR ADDR      @C@@@@          ANA,U   OV
)@@G@@  A0,1              . -1      @E@@@@          LA        A0,,A0          OW
)@@G@@  . $P GET PRIMARY DBP  @]@@@@NONFORG.    @G@@@@          SLJ       CHKEOX
)@@G@@Y             . $P CHK IF RECORD UNLOADED       @C@@@@          TZ      OY
)@@G@@  KEYOK             . $T IS IT@E@@@@          J         NXTSLT          OZ
)@@G@@  . $A YES NO,NXTSLT    @E@@@@          LA,U      A0,1              . $PPA
)@@G@@ UP DELETE COUNT  @B@@@@          AA        A0,DLTCNT         .   @B@@@@PB
)@@G@@          SA        A0,DLTCNT         .   @F@@@@          LA        A2,(PC
)@@G@@0777767777777). $P MARK RECORD VACANT     @B@@@@          AND       A2,0PD
)@@G@@,X7           .   @B@@@@          SA        A3,0,X7           .   @F@@@@PE
)@@G@@          LA        A2,RCDLENG        . $P UPDATE UNUSED WORDS    @B@@@@PF
)@@G@@          AA        A2,UNUSED         .   @D@@@@          SA        A2,UPG
)@@G@@NUSED         . $P SAVE IT    @F@@@@          LA        A2,(040000000000PH
)@@G@@0). $P MARK SLOT NOT IN USE   @B@@@@          OR        A2,0,X6         PI
)@@G@@  .   @B@@@@          LA        A2,(0777777000000).   @B@@@@          ANPJ
)@@G@@D       A2,A3             .   @B@@@@          SA        A3,0,X6         PK
)@@G@@  .   @E@@@@          SZ        FRGDBP            . $A YES,FIXFPG NO    PL
)@@G@@@G@@@@          TZ        FORGSW            . $T CHK IF A FOREIGN RECORDPM
)@@G@@      @E@@@@          SLJ       FIXFPG            .$A YES,FIXFPG NO     PN
)@@G@@@E@@@@          SZ        FORGSW            . $P RESET FORGSW     @E@@@@PO
)@@G@@          LA        A0,CCSW           . $T CALC RECORD      @E@@@@      PP
)@@G@@    JZ        A0,NXTSLT         . $A YES NO,NXTSLT    @B@@@@          LAPQ
)@@G@@        A0,FRGDBP         .   @E@@@@          JNZ       A0,DLTCALC      PR
)@@G@@  . $T A FOREIGN RECORD @E@@@@          LA        A1,ACODE          . $APS
)@@G@@ YES,DLTCALC NO   @B@@@@          LA        A2,PGNUM          .   @E@@@@PT
)@@G@@          LA        A3,PGSIZE         . $P CONSTRUCT DBP    @B@@@@      PU
)@@G@@    LA        A4,X6             .   @B@@@@          ANA       A4,X8     PV
)@@G@@        .   @B@@@@          ANA       A3,A4             .   @B@@@@      PW
)@@G@@    SLJ       APS$DBP           .   @B@@@@          TNZ       A0        PX
)@@G@@        .   @B@@@@          ER        ERR$              .   @C@@@@DLTCALPY
)@@G@@C   LX,H2     X1,C6             . $H      @B@@@@          LXI,U     X1,1PZ
)@@G@@              .   @F@@@@          LA        A5,RCDTYPE        . $P GET CQA
)@@G@@ALC LINK WORD     @B@@@@          LR,H1     R1,C6             .   @B@@@@QB
)@@G@@          SE,T1     A5,0,*X1          .   @B@@@@          ER        ERR$QC
)@@G@@              .   @B@@@@          ANX       X1,(1,1)          .   @B@@@@QD
)@@G@@          LX,T3     X2,0,X1           .   @B@@@@          AX        X2,XQE
)@@G@@7             .   @B@@@@          ANX,U     X2,1              .   @B@@@@QF
)@@G@@          LA        A1,0,X2           .   @C@@@@          DS        A0,DQG
)@@G@@BP1           . $P      @C@@@@          SLJ       DECALC            . $WQH
)@@G@@      @C@@@@NXTSLT.                               . $H      @D@@@@      QI
)@@G@@    ANX,U     X6,1              . $P NXT SLOT   @E@@@@          JGD     QJ
)@@G@@  X9,DLTLOP2        . $T ANY MORE SLOT    @]@@@@NXTPG.      @E@@@@      QK
)@@G@@    AX        X8,PGSIZE         . $A YES,DLTLOP2 NO   @E@@@@          SXQL
)@@G@@        X8,PGADDR         . $P NXT PAGE ADDR    @E@@@@          LA      QM
)@@G@@  A0,PGCNT          . $P UPDATE PAGE COUNT@B@@@@          ANA,U     A0,1QN
)@@G@@              .   @B@@@@          SA        A0,PGCNT          .   @D@@@@QO
)@@G@@          J         DLTLOP1           . $J DLTLOP1    @[@@@@.     @G@@@@QP
)@@G@@.         THIS SUBROUTINE WILL TRY TO GO TO A FOREIGN PAGE TO MARK      QQ
)@@G@@@C@@@@.         A PARTICULAR SLOT BEEN      DELETED   @[@@@@.     @A@@@@QR
)@@G@@.         ENTERED:  SLJ  FIXFPG     @[@@@@.     @B@@@@.                 QS
)@@G@@  X7 = RECORD ADDRESS   @[@@@@.     @]@@@@$(1).       @C@@@@FIXFPG*   +0QT
)@@G@@                          . $H      @E@@@@          LA        A0,(1,X6) QU
)@@G@@        . $P SAVE X6 - X11    @B@@@@          LA        A1,(1,SAVEX)    QV
)@@G@@  .   @B@@@@          LR,U      R1,6              .   @B@@@@          BTQW
)@@G@@        A1,0,*A0          .   @G@@@@          LA        A0,X7           QX
)@@G@@  . $P GET PRIME PAGE POINTER       @B@@@@          AA        A0,RCDLENGQY
)@@G@@        .   @B@@@@          ANA,U     A0,1              .   @B@@@@      QZ
)@@G@@    LA        A0,0,A0           .   @B@@@@          SA        A0,FRGDBP RA
)@@G@@        .   @E@@@@          SLJ       DBP$APS           . $W DBP TO A,P,RB
)@@G@@S     @F@@@@          SA        A1,HIGHBITS       . $P GET SIGN EXTENSIORC
)@@G@@N     @B@@@@          LA,T3     A1,HIGHBITS       .   @E@@@@          JZRD
)@@G@@        A1,FIXERR         . $T CHECK AREA CODE  @E@@@@          TE,T1   RE
)@@G@@  A1,1,X8           . $A YES NO,FIXERR    @H@@@@          J         FIXERF
)@@G@@RR            . $J FOREIGN PAGE MUST BE IN SAME AREA  @E@@@@          SLRG
)@@G@@J       GETPG             . $W GET THE PAGE     @B@@@@          AX      RH
)@@G@@  X8,PGSIZE         .   @E@@@@          ANX       X8,A3             . $PRI
)@@G@@ LOCATE THE SLOT  @B@@@@          LA        A0,(0400000000000)    @ @@@@RJ
)@@G@@          OR        A0,0,X8   @B@@@@          LA        A0,(047777700000RK
)@@G@@0).   @B@@@@          AND       A0,A1             .   @B@@@@          SARL
)@@G@@        A1,0,X8           .   @B@@@@                                    RM
)@@G@@  .   @B@@@@                                      .   @B@@@@            RN
)@@G@@                          .   @B@@@@                                    RO
)@@G@@  .   @B@@@@                                      .   @E@@@@RETURN    LARP
)@@G@@        A0,(1,X6)         . $P RESTORE X6 -X11  @B@@@@          LA      RQ
)@@G@@  A1,(1,SAVEX)      .   @B@@@@          LR,U      R1,6              .   RR
)@@G@@@B@@@@          BT        A0,0,*A1          .   @C@@@@          J       RS
)@@G@@  *FIXFPG           . $E      @C@@@@FIXERR                              RT
)@@G@@  . $H      @B@@@@          SA        A0,FPTRX          .   @B@@@@      RU
)@@G@@    LA        A0,SLOTS          .   @B@@@@          ANA       A0,X9     RV
)@@G@@        .   @B@@@@          SA        A0,SLTX           .   @B@@@@      RW
)@@G@@    LA        A0,PGNUM          .   @B@@@@          SA        A0,PGX    RX
)@@G@@        .   @B@@@@          LA        A0,ACODE          .   @H@@@@      RY
)@@G@@    SA,T3     A0,ACODEX         . $P SAVE IT WITHOUT SIGN EXTENSION     RZ
)@@G@@@ @@@@          E$DIT     EDPKT     @ @@@@          E$COPY    21,FMSG1  SA
)@@G@@@ @@@@          E$DECV    ACODEX    @ @@@@          E$COPY    7,FMSG2   SB
)@@G@@@^@@@@          E$DECV    PGX @ @@@@          E$COPY    7,FMSG3   @^@@@@SC
)@@G@@          E$DECV    SLTX@#@@@@          E$DITX  @ @@@@PF        FORM    SD
)@@G@@  12,6,18   @A@@@@          P$RINT    (PF 2,10,SEPAR) @A@@@@          P$SE
)@@G@@RINT    (PF 1,14,PRINT) @ @@@@          E$DIT     EDPKT     @ @@@@      SF
)@@G@@    E$COPY    18,FMSG4  @ @@@@          E$OCTF    12,FPTRX  @ @@@@      SG
)@@G@@    E$COPY    33,FMSG5  @#@@@@          E$DITX  @A@@@@          P$RINT  SH
)@@G@@  (PF 1,14,PRINT) @A@@@@          P$RINT    (PF 1,10,SEPAR) @ @@@@      SI
)@@G@@    J         RETURN    @]@@@@$(1).       @C@@@@GETPG*    +0            SJ
)@@G@@              . $H      @F@@@@          TE,T3     A1,DLTAREA        . $TSK
)@@G@@ PAGE IN PRIMARY AREA   @C@@@@          J         GETPG1            . $JSL
)@@G@@ NO   @G@@@@          LR,H1     R1,DPGCNT         . $T CHECK IF PAGE IS SM
)@@G@@IN CORE     @B@@@@          LX        X1,(1,DPGTBL-1)   .   @F@@@@      SN
)@@G@@    SE,H1     A2,1,*X1          . $T SEARCH PRIMARY TBL     @D@@@@      SO
)@@G@@    J         GETPG1            . $A NO FIND    @E@@@@          LX,H2   SP
)@@G@@  X8,0,X1           . $P SET BUFADDR IN X8@ @@@@          J         *GETSQ
)@@G@@PG    @C@@@@GETPG1                                . $H      @E@@@@      SR
)@@G@@    LSSL      A2,18             . $P COMPOSE ACODE,PG#@B@@@@          DSSS
)@@G@@L       A1,18             .   @F@@@@          LR        R1,OVFCNT       ST
)@@G@@  . $P SEARCH OVER FLOW TBL   @E@@@@          LX        X1,(2,OVFTBL-2) SU
)@@G@@  . $P TBL ADDR-2       @C@@@@          SE        A2,2,*X1          . $TSV
)@@G@@      @D@@@@          J         GETPG2            . $J NO FIND    @E@@@@SW
)@@G@@          LX,H2     X8,1,X1           . $P GET BUF ADDR     @D@@@@      SX
)@@G@@    J         *GETPG            . $J RETURN     @]@@@@GETPG2.     @E@@@@SY
)@@G@@          LA        A0,(1,X6)         . $P SAVE X6 - X11    @B@@@@      SZ
)@@G@@    LA        A1,(1,SAVEXX)     .   @B@@@@          LR,U      R1,6      TA
)@@G@@        .   @B@@@@          BT        A1,0,*A0          .   @D@@@@      TB
)@@G@@    SA        A3,SAVEA3         . $P SAVE A3    @F@@@@          LA      TC
)@@G@@  A0,OVFCNT         . $P UPDATTE OVER FLOW CNT  @C@@@@          AA,U    TD
)@@G@@  A0,1              . +1      @D@@@@          SA        A0,OVFCNT       TE
)@@G@@  .$P SAVE IT     @E@@@@          MSI,U     A0,2              . $P COMPUTF
)@@G@@TE TBL ADDR @B@@@@          ANA,U     A0,2              .   @E@@@@      TG
)@@G@@    LX        X8,A0             . $P TBL ADDR IN X8   @E@@@@          SATH
)@@G@@        A2,OVFTBL,X8      . $P SAVE AREA,PG#    @E@@@@          LA,H2   TI
)@@G@@  A0,OVFTBL,X8      . $P GET PAGE NUMBER  @E@@@@          SA,H2     A0,OTJ
)@@G@@VFPKT3        . $P SAVE IT IN PKT   @E@@@@          LA,H1     A0,OVFTBL,TK
)@@G@@X8      . $P GET AREA CODE    @F@@@@          SLJ       GETASIZE        TL
)@@G@@  . $P GET PAGE SIZE,NAME     @C@@@@          TNZ       A0              TM
)@@G@@  . $T OK   @B@@@@          ER        ERR$              .   @E@@@@      TN
)@@G@@    SA,H1     A0,OVFPKT3        . $P SAVE PAGE SIZE   @E@@@@          DSTO
)@@G@@        A1,OVFPKT         . $P SAVE AREA NAME   @E@@@@          LA      TP
)@@G@@  A1,OVFTBL+1,X8    . $P GET BUF ADDR     @I@@@@                        TQ
)@@G@@              . THIS SHOULD BE SET UP BY PREVIOUS REQ       @B@@@@      TR
)@@G@@    SA,H2     A1,OVFPKT2        .   @G@@@@          A         A0,A1     TS
)@@G@@        . $P COMPUTE NEXT BUFFER ADDR     @B@@@@          ER        MCORTT
)@@G@@E$            .   @F@@@@          SA        A0,OVFTBL+3,X8    . $P SAVE TU
)@@G@@IT FOR NXT REQ    @E@@@@          LA,U      A0,020            . $P SET TTV
)@@G@@O READ      @B@@@@          SA,S2     A0,OVFPKT1        .   @E@@@@      TW
)@@G@@    LX,U      X10,OVFPKT        . $P GET PKT ADDR     @B@@@@          LMTX
)@@G@@J       X11,DB$AM         .   @B@@@@          TZ,S1     OVFPKT1         TY
)@@G@@  .   @B@@@@          LMJ       X11,IOERR         .   @B@@@@          LATZ
)@@G@@        A3,SAVEA3         .   @E@@@@          LA        A0,(1,X6)       UA
)@@G@@  . $P RESTORE X6 - X11 @B@@@@          LA        A1,(1,SAVEXX)     .   UB
)@@G@@@B@@@@          LR,U      R1,6              .   @B@@@@          BT      UC
)@@G@@  A0,0,*A1          .   @B@@@@          LX,H2     X8,OVFPKT2        .   UD
)@@G@@@B@@@@          J         *GETPG            .   @[@@@@.     @C@@@@.     UE
)@@G@@    ROUTINE TO CHK IF A DBP IS IN K$FILE  @[@@@@.     @C@@@@CHKEY*    +0UF
)@@G@@                          . $H      @G@@@@          TZ        FORGSW    UG
)@@G@@        . $T CHK IF A FOREIGN RECORD      @E@@@@          J         GOKFUH
)@@G@@AM            . $A YES,GOKFAM NO    @F@@@@          TZ        CALCSW    UI
)@@G@@        . $T CHK IF A CALC CHASE    @E@@@@          J         GOKFAM    UJ
)@@G@@        .$A YES,GOKFAM NO     @F@@@@          LA        A0,X6           UK
)@@G@@  . $P COMPUTE THE ALOT NUM   @B@@@@          ANA       A0,X8           UL
)@@G@@  .   @E@@@@          LA        A3,PGSIZE         . $P GET PAGE SZ      UM
)@@G@@@E@@@@          ANA       A3,A0             . $P A3=SLOT NUM      @E@@@@UN
)@@G@@          LA        A2,PGNUM          . $P A2=PAGE NUM      @E@@@@      UO
)@@G@@    LA,T3     A1,DLTAREA        . $P A1=AREA CODE     @E@@@@          SLUP
)@@G@@J       APS$DBP           . $P CONVERT TO A DBP @D@@@@          TNZ     UQ
)@@G@@  A0                . $T GOT A DBP  @E@@@@          ER        ERR$      UR
)@@G@@        . $A YES NO,ERR$      @]@@@@GOKFAM.     @F@@@@          SA      US
)@@G@@  A0,PKTKEY         . $P SAVE THE DBP IN PKY    @E@@@@          SZ      UT
)@@G@@  KEYOK             .$P RESET STATUS      @D@@@@          LX,U      X10,UU
)@@G@@KFPKT         . $P PKT ADDR   @E@@@@          LMJ       X11,KF$AMR      UV
)@@G@@  . $P CALL KF$AM       @D@@@@          J         *CHKEY            . $PUW
)@@G@@ RETURN     @]@@@@$(4).       @B@@@@HIGHBITS  +0                        UX
)@@G@@  .   @E@@@@OVFCNT*   +0                          . OVER FLOW PAGE CNT  UY
)@@G@@@C@@@@OVFTBL*   +0                          . PAGE TBL@D@@@@            UZ
)@@G@@                          . 1. ACODE,PG#  @D@@@@                        VA
)@@G@@              . 2. BUFFADDR   @]@@@@OVFADDR*  +0@E@@@@          RES     VB
)@@G@@  200               . TOTAL ENTRY=201     @C@@@@OVFPKT*   RES       3   VC
)@@G@@              . I/O PKT @^@@@@OVFPKT1*  RES       4   @D@@@@OVFPKT2*  +1VD
)@@G@@,0                        . #PG,BUFADDR   @C@@@@OVFPKT3*  +0,0          VE
)@@G@@              . LNG,1 PG@A@@@@KFPKT*    +0        . KF$SM PKT     @]@@@@VF
)@@G@@          +0@]@@@@          +0@]@@@@PKTKEY*   +0@]@@@@          +0@]@@@@VG
)@@G@@KEYOK*    +0@^@@@@          RES       100 @]@@@@DLTCNT*   +0@]@@@@CALCSWVH
)@@G@@*   +0@]@@@@FORGSW*   +0@]@@@@SAVEA3    +0@]@@@@$(4).       @A@@@@FMSG1 VI
)@@G@@    '** WARNNING: ON AREA '   @^@@@@FMSG2     ', PAGE '     @^@@@@FMSG3 VJ
)@@G@@    ', SLOT '     @A@@@@FMSG4     'A FOREIGN POINTER('      @C@@@@FMSG5 VK
)@@G@@    ') IN THE RECORD CAN NOT BE TRACED'   @^@@@@SAVEXX    RES       6   VL
)@@G@@@^@@@@SEPAR     '* * * * * * '@^@@@@          '* * * * * * '@^@@@@      VM
)@@G@@    '* * * * * * '@^@@@@          '* * * * * * '@^@@@@          '* * * *VN
)@@G@@ * * '@^@@@@SAVEX     RES       10  @]@@@@FPTRX     +0@]@@@@ACODEX    +0VO
)@@G@@@]@@@@PGX       +0@]@@@@SLTX      +0@]@@@@$(4).       @]@@@@PARAM1    +0VP
)@@G@@@A@@@@PGCNT     EQUF      PARAM1,,H1      @A@@@@PGADDR    EQUF      PARAVQ
)@@G@@M1,,H2      @ @@@@PGSIZE    EQUF      2,X8,H1   @ @@@@UNUSED    EQUF    VR
)@@G@@  2,X8,H2   @ @@@@SLOTS     EQUF      3,X8,H1   @ @@@@LASTVAC   EQUF    VS
)@@G@@  3,X8,H2   @ @@@@PGTYPE    EQUF      1,X8,S2   @ @@@@CALCNUM   EQUF    VT
)@@G@@  6,X8,H1   @ @@@@PGNUM     EQUF      1,X8,H2   @ @@@@ACODE     EQUF    VU
)@@G@@  1,X8,T1   @ @@@@RCDTYPE   EQUF      0,X7,T1   @ @@@@RCDDESC   EQUF    VV
)@@G@@  0,X7,S3   @ @@@@RCDLENG   EQUF      0,X7,H2   @ @@@@SLTDESC   EQUF    VW
)@@G@@  0,X6,S1   @ @@@@DISP      EQUF      0,X6,H2   @]@@@@CCSW      +0@]@@@@VX
)@@G@@DBP1*     +0@]@@@@DBP2*     +0@]@@@@FRGDBP*   +0@#@@@@          END     VY
)@@G@@___     . $P SAVE A3    @F@@@@          LA        A0,OVFCNT         . $PVZ
)@@G@@*[@@@@*SDFF*@#@@@@          AXR$    @#@@@@$(4)      LIT     @]@@@@$(1). WA
)@@G@@      @[@@@@.     @A@@@@.         SUBROUTINE  'REORDLT'     @[@@@@.     WB
)@@G@@@[@@@@.     @G@@@@DLTPGS    EQU       10                . NUMBER OF PAGEWC
)@@G@@S PER DELETE      @C@@@@REORDLT*                              . $H      WD
)@@G@@@E@@@@          TZ        TOPT              . $T DEBUG REQ'D      @B@@@@WE
)@@G@@          SLJ       DEBUG$            .   @C@@@@          SX        X11,WF
)@@G@@SAVEX11       . $H      @E@@@@          LX,U      X10,KFPKT         . $PWG
)@@G@@ INITIALIZE KF$AM @B@@@@          LMJ       X11,KF$AMR        .   @G@@@@WH
)@@G@@          SLJ       DLTRCD            . $P BUILD DELETE RECORDS TBL     WI
)@@G@@@F@@@@          LA        A0,LAST$D         . $P COMPUTE BUFFER ADDR    WJ
)@@G@@@B@@@@          AA,U      A0,1              .   @D@@@@          SA,H2   WK
)@@G@@  A0,DPKT2          . $P SAVE IT    @ @@@@          LA,H2     A0,C4     WL
)@@G@@@ @@@@          SA        A0,C4P1   @ @@@@          SZ        C4ENT     WM
)@@G@@@]@@@@AREALP.     @B@@@@.         SCAN THROUGH C4 AREA BY AREA    @F@@@@WN
)@@G@@          LA,H2     A1,C4P1           . $P GET AREA ENTRY ADDR    @I@@@@WO
)@@G@@          LA        A0,C4ENT          . $P GET NO OF ENTRY PROCESSED FORWP
)@@G@@ THE ARE    @D@@@@          TG,T2     A0,0,A1           . $T DONE ALL   WQ
)@@G@@@E@@@@          J         NXTAREA           . $A YES,NEXTAREA NO  @E@@@@WR
)@@G@@          AA,U      A0,1              . $P UP COUNT BY 1    @ @@@@      WS
)@@G@@    SA        A0,C4ENT  @F@@@@          AA,U      A0,2              . $PWT
)@@G@@ COMPUTE ENTRY ADDR     @F@@@@          AA        A0,A1             . $PWU
)@@G@@ GET THE PAGE RANGE     @ @@@@          LA        A3,0,A0   @ @@@@      WV
)@@G@@    SA        A3,PGRNG  @E@@@@          LA,T1     A3,0,A1           . $PWW
)@@G@@ GET AREA CODE    @D@@@@          SA,T3     A3,DLTAREA        . $P SAVE WX
)@@G@@IT    @E@@@@          DL        A3,1,A1           . $P GET AREA NAME    WY
)@@G@@@A@@@@          DS        A3,DLTPKT       @]@@@@PAGELP.     @A@@@@.     WZ
)@@G@@    DELETE DLTPGS PAGES A TIME@E@@@@          LA,U      A0,020          XA
)@@G@@  . $P SET TO READ      @ @@@@          SA,S2     A0,DPKT1  @E@@@@      XB
)@@G@@    LA,H1     A0,PGRNG          . $P GET STARTING PAGE@ @@@@          SAXC
)@@G@@,H2     A0,DPKT3  @E@@@@          AA,U      A0,DLTPGS         . $P UP BYXD
)@@G@@ DLTPGS     @ @@@@          SA,H1     A0,PGRNG  @E@@@@          LA,H2   XE
)@@G@@  A0,PGRNG          . $P GET TOTAL PAGES  @D@@@@          TLE,U     A0,DXF
)@@G@@LTPGS         . $T > LIMIT    @E@@@@          J         LASTPG          XG
)@@G@@  . $A Y NO,LASTPG      @D@@@@          ANA,U     A0,DLTPGS         . $PXH
)@@G@@ -LIMIT     @ @@@@          SA,H2     A0,PGRNG  @A@@@@          LA,U    XI
)@@G@@  A0,DLTPGS       @^@@@@          J         $+2 @]@@@@LASTPG.     @ @@@@XJ
)@@G@@          SZ,H2     PGRNG     @ @@@@          SA,H1     A0,DPKT2  @E@@@@XK
)@@G@@          LA        A0,DLTAREA        . $P GET AREA CODE    @G@@@@      XL
)@@G@@    SLJ       GETASIZE          . $W GET AREA PAGE SIZE/NAME      @C@@@@XM
)@@G@@          TNZ       A0                . $T OK   @B@@@@          ER      XN
)@@G@@  ERR$              .   @D@@@@          SA        A0,DPGSIZE        . $PXO
)@@G@@ SAVE IT    @G@@@@          MSI,H1    A0,DPKT2          . $P COMPUTE TOTXP
)@@G@@AL BUFF SIZE      @D@@@@          SA,H1     A0,DPKT3          . $P SAVE XQ
)@@G@@IT    @G@@@@          AA,H2     A0,DPKT2          . $P COMPUTE OVER FLOWXR
)@@G@@ BUFF ADDR  @D@@@@          SA        A0,OVFADDR        . $P SAVE IT    XS
)@@G@@@G@@@@          SZ        OVFCNT            . $P RESET OVER FLOW PAGE CNXT
)@@G@@T     @B@@@@          ER        MCORE$            .   @A@@@@          LXXU
)@@G@@,U      X10,DLTPKT      @A@@@@          LMJ       X11,DB$AM       @ @@@@XV
)@@G@@          TZ,S1     DPKT1     @A@@@@          LMJ       X11,IOERR       XW
)@@G@@@ @@@@          LR,H1     R1,DPKT2  @ @@@@          JGD       R1,$+1    XX
)@@G@@@ @@@@          LA,H2     A0,DPKT3  @F@@@@          LA,H2     A1,DPKT2  XY
)@@G@@        . $P STARTING BUFFER ADDR   @A@@@@          LX        X1,(1,DPGTXZ
)@@G@@BL)   @]@@@@PGLOP1.     @G@@@@          SA,H2     A1,0,X1           . $PYA
)@@G@@ SETUP BUFF ADDR IN TBL       @ @@@@          SA,H1     A0,0,*X1  @^@@@@YB
)@@G@@          AA,U      A0,1@E@@@@          AA        A1,DPGSIZE        . $PYC
)@@G@@ UP NEXT BUF ADDR @A@@@@          JGD       R1,PGLOP1       @ @@@@      YD
)@@G@@    LA,H1     A0,DPKT2  @A@@@@          SA,H1     A0,DPGCNT       @A@@@@YE
)@@G@@          SA,H2     A0,DPGCNT       @G@@@@          SLJ       DLTPGE    YF
)@@G@@        . $W PERFORM DELETE RECORDS       @G@@@@          SLJ       COMPYG
)@@G@@ACT           . $W COMPACT AND WRITE BACK PGS   @ @@@@          SZ      YH
)@@G@@  DPGCNT    @A@@@@          LX        X1,(1,DPGTBL)   @A@@@@          LXYI
)@@G@@,U      X2,DPGCNT       @D@@@@          LR,U      R1,DLTPGS         . $PYJ
)@@G@@ RESET TBL  @ @@@@          BT,H1     X1,0,*X2  @ @@@@          TZ,H2   YK
)@@G@@  PGRNG     @ @@@@          J         PAGELP    @ @@@@          J       YL
)@@G@@  AREALP    @]@@@@NXTAREA.    @E@@@@          LA,T3     A0,0,A1         YM
)@@G@@  . $P GET TBL LINK     @D@@@@          TNZ       A0                . $JYN
)@@G@@ END C4     @ @@@@          J         RETURN    @ @@@@          AA      YO
)@@G@@  A1,A0     @ @@@@          SA        A1,C4P1   @ @@@@          SZ      YP
)@@G@@  C4ENT     @ @@@@          J         AREALP    @C@@@@DLTRCD    +0      YQ
)@@G@@                    . $H      @G@@@@                                    YR
)@@G@@  .   THIS ROUTINE SCANS C5 TBL     @G@@@@          SZ        DLTC10    YS
)@@G@@        .   AND BUILD A TABLE WHICH       @G@@@@          LX,H2     X1,CYT
)@@G@@5             .   CONSISTS OF ALL RECORD CODES  @E@@@@          LX      YU
)@@G@@  X2,(1,DLTC10)     .   BEING DELETED     @]@@@@DRCDLP.     @B@@@@      YV
)@@G@@    LA,T1     A0,0,X1           .   @B@@@@          SA,T3     A0,0,X2   YW
)@@G@@        .   @B@@@@          LA,S3     A0,0,X1           .   @B@@@@      YX
)@@G@@    SA,T2     A0,0,*X2          .   @B@@@@          LA,T1     A0,DLTC10 YY
)@@G@@        .   @B@@@@          AA,U      A0,1              .   @B@@@@      YZ
)@@G@@    SA,T1     A0,DLTC10         .   @E@@@@          TG,U      A0,DLTTYPEZA
)@@G@@S       . $P TBL SIZE OVER    @B@@@@          ER        ERR$            ZB
)@@G@@  .   @B@@@@          LA,T3     A0,0,X1           .   @B@@@@          JZZC
)@@G@@        A0,*DLTRCD        .   @B@@@@          AX        X1,A0           ZD
)@@G@@  .   @B@@@@          J         DRCDLP            .   @]@@@@RETURN.     ZE
)@@G@@@B@@@@          LX,U      X10,KFPKT         .   @E@@@@          LMJ     ZF
)@@G@@  X11,KF$AMF        . $P FLUSH KF$AM BUG'S@ @@@@          E$DIT     EDPKZG
)@@G@@T     @ @@@@          E$DECV    DLTCNT    @^@@@@          E$SKIP    1   ZH
)@@G@@@A@@@@          E$FD2     ('RECORDS')     @^@@@@          E$SKIP    1   ZI
)@@G@@@A@@@@          E$FD2     ('DELETED')     @#@@@@          E$DITX  @ @@@@ZJ
)@@G@@PF        FORM      12,6,18   @A@@@@          P$RINT    (PF 1,14,PRINT) ZK
)@@G@@@A@@@@          LX        X11,SAVEX11     @ @@@@          J         0,X1ZL
)@@G@@1     @^@@@@GETASIZE* +0        . $H@E@@@@          SA        A0,HIGHBITZM
)@@G@@        . $P REFETCH A0       @B@@@@          LA,T3     A0,HIGHBIT      ZN
)@@G@@  .   @E@@@@          LA,H1     A1,C3             . $P GET AREA TBL     ZO
)@@G@@@G@@@@          DSL       A1,36             . $P COMPUTE NUMBER OF ENTRYZP
)@@G@@      @B@@@@          DI,U      A1,9              .   @B@@@@          LRZQ
)@@G@@        R1,A1             .   @B@@@@          LA,H2     A1,C3           ZR
)@@G@@  .   @B@@@@          LXI,U     A1,9              .   @E@@@@          SEZS
)@@G@@,T1     A0,0,*A1          . $T SEARCH AREA TBL  @ @@@@          J       ZT
)@@G@@  NOAREA    @E@@@@          ANA,U     A1,9              . $P BACK UP POIZU
)@@G@@NTER  @E@@@@          LA,T1     A0,3,A1           . $P GET PAGE SIZE    ZV
)@@G@@@E@@@@          DL        A1,1,A1           . $P GET AREA NAME    @B@@@@ZW
)@@G@@          J         *GETASIZE         .   @]@@@@NOAREA.     @B@@@@      ZX
)@@G@@    SZ        A0                .   @B@@@@          J         *GETASIZE ZY
)@@G@@        .   @]@@@@$(4).       @]@@@@DPGSIZE   +0@]@@@@HIGHBIT   +0@]@@@@ZZ
)@@G@@DLTAREA*  +0@]@@@@SAVEX11   +0@G@@@@DPGCNT*   +0,0                      AA
)@@G@@  . TOTAL NUMBER OF PAGES IN CORE   @E@@@@DPGTBL*   RES       DLTPGS    AB
)@@G@@        . PAGE-NUM,BUFFER-ADDR@]@@@@C4P1      +0@ @@@@C4ENT     EQUF    AC
)@@G@@  C4P1,,H1  @I@@@@DLTTYPES  EQU       500               . MAX NUM OF RECAD
)@@G@@ORD TYPES CAB BE DELETED      @E@@@@DLTC10*   RES       DLTTYPES        AE
)@@G@@  . DELETING RECORDS TBL@G@@@@                                      .   AF
)@@G@@1ST ENTRY   CNT,SW,CODE       @G@@@@DLTPKT*   +0                        AG
)@@G@@  .                 0,SW,CODE       @E@@@@          +0                  AH
)@@G@@        .                   . @E@@@@          +0                        AI
)@@G@@  .   SW=0, NON-CALC  . @]@@@@DPKT1*    +0@]@@@@          +0@]@@@@      AJ
)@@G@@    +0@]@@@@          +0@A@@@@DPKT2*    +0,0      . #PGS,BUFFADR  @A@@@@AK
)@@G@@DPKT3*    +0,0      . BUFLEN,ST-PG  @E@@@@PGRNG     +0,0                AL
)@@G@@        . STARTING-PG, PGCNT  @#@@@@          END     ___IZE      @D@@@@AM
)@@G@@          SA,H1     A0,DPKT3          . $P SAVE IT    @G@@@@          AAAN
)@@G@@,H2     A0,DPKT2          . $P COMPUTE OVER FLOW BUFF ADDR  @D@@@@      AO
)@@G@@*[@@@@*SDFF*@#@@@@          AXR$    @[@@@@.     @^@@@@.       * DBP$APS AP
)@@G@@*     @C@@@@.                     ENTER:  SLJ  DBP$APS      @E@@@@.     AQ
)@@G@@             R1,R8,  A0 - A5 ARE USED BY THE ROUTINES @[@@@@.     @C@@@@AR
)@@G@@.                           (IN)  A0 = DBP      @I@@@@.                 AS
)@@G@@          (OUT) A1 = ARE CODE, 0 IF AREA NOT IN AREA COMMAND      @D@@@@AT
)@@G@@.                           (OUT) A2 = PAGE NUMBER    @D@@@@.           AU
)@@G@@                      A3 = SLOT NUMBER    @F@@@@.                       AV
)@@G@@          A4 = ADDR OF AREA TABLE IN C3   @[@@@@.     @^@@@@.       * APAW
)@@G@@S$DBP *     @C@@@@.                     ENTER: SLJ  APS$DBP       @[@@@@AX
)@@G@@.     @C@@@@.                           (IN)  A1 = AREA CODE@D@@@@.     AY
)@@G@@                            A2 = PAGE NUMBER    @D@@@@.                 AZ
)@@G@@                A3 = SLOT NUMBER    @H@@@@.                           (OBA
)@@G@@UT) A0 = DBP, 0 IF AREA NOT IN AREA COMMAND     @F@@@@.                 BB
)@@G@@                A4 = ADDR OF AREA TABLE IN C3   @[@@@@.     @#@@@@$(4)  BC
)@@G@@    LIT     @]@@@@$(1).       @ @@@@PGBIT     EQUF      0,X8,S3   @ @@@@BD
)@@G@@RCDBIT    EQUF      0,X8,S4   @C@@@@DBP$APS*                            BE
)@@G@@  . $H      @]@@@@          +0@D@@@@          LR        R8,X8           BF
)@@G@@  . $P SAVE X8    @E@@@@          LX        X8,C3             . $P GET ABG
)@@G@@REA TABLES  @B@@@@          LXI,U     X8,9              .   @E@@@@      BH
)@@G@@    LA,H1     A4,C3             . $P GET C3 TBL LENGTH@B@@@@          DSBI
)@@G@@L       A4,36             .   @G@@@@          DI,U      A4,9            BJ
)@@G@@  . $P COMPUTE THE ENTRY COUNT      @B@@@@          LR        R1,A4     BK
)@@G@@        .   @D@@@@          LA        A1,A0             . $P A1 = DBP   BL
)@@G@@@E@@@@          LA        A5,A0             . $P SAVE DBP IN A5   @E@@@@BM
)@@G@@          LA        A0,PGBIT          . $P GET PG BITS      @E@@@@      BN
)@@G@@    AA        A0,RCDBIT         . $P ADD RCD BITS     @G@@@@          DSBO
)@@G@@L       A1,0,A0           . $P SHIFT BY PG + RCD BITS       @F@@@@      BP
)@@G@@    SE,T1     A1,0,*X8          . $T SEARCH FOR AREA ENTRY  @E@@@@      BQ
)@@G@@    J         NOAREA            . $A YES NO,NOAREA    @B@@@@          ANBR
)@@G@@X       X8,(9,9)          .   @E@@@@          DSL       A2,36           BS
)@@G@@  . $P SHIFT PAGE TO A2 @B@@@@          LA        A0,PGBIT          .   BT
)@@G@@@B@@@@          LDSL      A2,0,A0           .   @B@@@@          DSL     BU
)@@G@@  A3,36             .   @E@@@@          LA        A0,RCDBIT         . $PBV
)@@G@@ SHIFT SLOT TO A3 @ @@@@          LDSL      A3,0,A0   @E@@@@          LABW
)@@G@@        A4,X8             . $P A4 = AREA ENTRY  @D@@@@          LA      BX
)@@G@@  A0,A5             . $P A0 = DBP   @E@@@@          LX        X8,R8     BY
)@@G@@        . $P RESTORE X8       @C@@@@          J         *DBP$APS        BZ
)@@G@@  . $E      @]@@@@NOAREA.     @ @@@@          LX        X8,R8     @ @@@@CA
)@@G@@          LA        A0,A5     @^@@@@          SZ        A1  @ @@@@      CB
)@@G@@    J         *DBP$APS  @C@@@@APS$DBP*                              . $HCC
)@@G@@      @]@@@@          +0@F@@@@          SA        A1,HIGHBITS       . $PCD
)@@G@@ GET SIGN EXTENSION     @B@@@@          LA,T3     A1,HIGHBITS       .   CE
)@@G@@@E@@@@          LR        R8,X8             . $P SAVE X8 IN R8    @E@@@@CF
)@@G@@          LX        X8,C3             . $P GET AREA TABLES  @B@@@@      CG
)@@G@@    LXI,U     X8,9              .   @E@@@@          LA,H1     A4,C3     CH
)@@G@@        . $P GET C3 TBL LENGTH@B@@@@          DSL       A4,36           CI
)@@G@@  .   @G@@@@          DI,U      A4,9              . $P COMPUTE THE ENTRYCJ
)@@G@@ COUNT      @B@@@@          LR        R1,A4             .   @F@@@@      CK
)@@G@@    SE,T1     A1,0,*X8          . $P SEARCH FOR AREA ENTRY  @E@@@@      CL
)@@G@@    J         NOAREA1           . $T ENTRY FOUND      @E@@@@          ANCM
)@@G@@X       X8,(9,9)          . $A YES NO,NOAREA1   @E@@@@          LA      CN
)@@G@@  A0,PGBIT          . $P GET PAGE BITS    @E@@@@          LA        A4,ACO
)@@G@@1             . $P MOVE ACODE TO A4 @H@@@@          LSSL      A4,0,A0   CP
)@@G@@        . $P LEFT SHIFT BY NUMBER OF PG BITS    @E@@@@          LA      CQ
)@@G@@  A5,A2             . $P MOVE PG NUM TO A5@E@@@@          OR        A4,ACR
)@@G@@5             . $P OR A4 TO A5      @E@@@@          LA        A0,RCDBIT CS
)@@G@@        . $P GET RECORD BITS  @H@@@@          LSSL      A5,0,A0         CT
)@@G@@  . $P SHIFT A5 BY NUMBER OF RED BITS     @F@@@@          LA        A4,ACU
)@@G@@3             . $P MOVE RCD NUM TO A4     @E@@@@          OR        A4,ACV
)@@G@@5             . $P OR A4 TO A5      @E@@@@          LA        A0,A5     CW
)@@G@@        . $P MOVE DBP TO A0   @E@@@@          LA        A4,X8           CX
)@@G@@  . $P RESTORE X8       @E@@@@          LX        X8,R8             . $PCY
)@@G@@ A4 = AREA ENTRY  @C@@@@          J         *APS$DBP          . $E      CZ
)@@G@@@]@@@@NOAREA1.    @B@@@@          SZ        A0                .   @B@@@@DA
)@@G@@          LX        X8,R8             .   @B@@@@          J         *APSDB
)@@G@@$DBP          .   @]@@@@$(4).       @]@@@@HIGHBITS  +0@#@@@@          ENDC
)@@G@@D     ___AC)^@)^@)CC1 )0 )%F@8^@)^@)^@)^@)^@) 0)^-K^[NC([EL#D@)C1JEK)CDMDD
)@@G@@C([^[ D1OELT@I@@_@^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)*[@@@@*SDFF*@#@@@@      DE
)@@G@@    AXR$    @#@@@@$(4)      LIT.    @]@@@@$(1).       @[@@@@.     @^@@@@DF
)@@G@@.         INPUT ROUTINE @^@@@@.         INTERFACE:    @C@@@@.           DG
)@@G@@        LX,U              X10,INPKT @C@@@@.                   LMJ       DH
)@@G@@        X11,INPUT @[@@@@.     @G@@@@.                   INPKT           DI
)@@G@@  +LINE-SPACE,WRD-CNT,OUT-MESG      @E@@@@.                             DJ
)@@G@@        +EOF-ADDR,INPUT-BUFFER@[@@@@.     @E@@@@.         IF WRD-CNT IS DK
)@@G@@NOT 0, TREAD$ WILL BE PERFORMED     @D@@@@.         IF LAST NON-BLANK CHDL
)@@G@@ARACTER IS A SEMICOLON  @A@@@@.           LINE IS CINTINUED.      @[@@@@DM
)@@G@@.     @C@@@@INPUT*                                . $H      @E@@@@      DN
)@@G@@    LA,H1     A0,1,X10          . $P GET EOF JUMP ADDR@D@@@@          TZDO
)@@G@@        EOFSW             . $T IS IT EOF  @E@@@@          J         0,A0DP
)@@G@@              . $A YES,0,A0 NO      @D@@@@          DL        A0,,X10   DQ
)@@G@@        . $P GET INPKT  @D@@@@          DS        A0,TRDPKT         . $PDR
)@@G@@ SOTORE     @F@@@@          LX        X8,INBUF          . $P GET INPUT BDS
)@@G@@UFFER ADDR  @G@@@@          SZ        0,X8              . $P SET CHARACTDT
)@@G@@ER COUNT TO 0     @F@@@@          LA        A0,X8             . $P UPDATDU
)@@G@@E IN BUF ADDR     @B@@@@          AA,U      A0,1              .   @B@@@@DV
)@@G@@          SA        A0,INBUF          .   @E@@@@          LA,U      A0,1DW
)@@G@@              . $P PRESET EOF SW    @B@@@@          SA        A0,EOFSW  DX
)@@G@@        .   @E@@@@          TNZ       WRDCNT            . $T IS WORD COUDY
)@@G@@NT 0  @E@@@@          J         DOREAD            . $A YES,PRINT NO     DZ
)@@G@@@E@@@@          LA,U      A0,TRDPKT         . $P GET TREAD$ PKT   @B@@@@EA
)@@G@@          ER        TREAD$            .   @E@@@@          SA        A0,SEB
)@@G@@AVEA0         . $P TEMP SAVE A0     @E@@@@          J         CHK1STLN  EC
)@@G@@        . $J CHECK FIRST LINE @[@@@@.     @^@@@@.         DO READ$ ONLY ED
)@@G@@@[@@@@.     @C@@@@DOREAD                                . $H      @E@@@@EE
)@@G@@          LA        A0,TRDPKT+1       . $P GET READ$ PKT    @B@@@@      EF
)@@G@@    ER        READ$             .   @E@@@@          SA        A0,SAVEA0 EG
)@@G@@        . $P TEMP SAVE A0     @B@@@@          J         CHK1STLN        EH
)@@G@@  .   @]@@@@$(4).       @^@@@@TRDPKT    RES       2   @A@@@@WRDCNT    EQEI
)@@G@@UF      TRDPKT,,S3      @A@@@@INBUF     EQUF      TRDPKT+1,,H2    @]@@@@EJ
)@@G@@$(1).       @[@@@@.     @A@@@@.         CHECK FIRST LINE INPUT    @[@@@@EK
)@@G@@.     @C@@@@CHK1STLN                              . $H      @E@@@@      EL
)@@G@@    SZ        EOFSW             . $P RESET EOF SW     @E@@@@          LSEM
)@@G@@SL      A0,18             . $P GET WORD IN COUNT@B@@@@          SSL     EN
)@@G@@  A0,18             .   @F@@@@          JZ        A0,RETRN          . $JEO
)@@G@@ RETURN IF NO INPUT     @G@@@@          LA        A1,A0             . $PEP
)@@G@@ CHECK IF LAST WORD IS ALL BLK@F@@@@          AA        A1,X8           EQ
)@@G@@  . $P GET LAST WORD ADDR     @E@@@@          LA        A1,0,A1         ER
)@@G@@  . $P GET THE LAST WORD@D@@@@          TNE       A1,('      ')     . $TES
)@@G@@ ALL BLANK  @C@@@@          ANA,U     A0,1              . $A A0 -1@B@@@@ET
)@@G@@          JZ        A0,RETRN          .   @E@@@@          LR        R3,AEU
)@@G@@0             . $P SAVE IT IN R3    @G@@@@          AA        A0,X8     EV
)@@G@@        . $P COMPUTE LAST WORD ADDR       @E@@@@          LA        A0,0EW
)@@G@@,A0           . $P GET THE LAST WORD@F@@@@          SLJ       SCAN      EX
)@@G@@        . $W EXAMINE THE LAST WORD  @H@@@@          LA        A0,R3     EY
)@@G@@        . $P COMPUTE TOTAL NUM OF CHARACTER IN  @B@@@@          ANA,U   EZ
)@@G@@  A0,1              .   @B@@@@          MSI,U     A0,6              .   FA
)@@G@@@B@@@@          AA        A0,R1             .   @D@@@@          SA,H2   FB
)@@G@@  A0,,X8            . $P SAVE IT    @E@@@@          TZ        CNTNUSW   FC
)@@G@@        . $T CONTINUE SW SET  @E@@@@          J         GETNXTLN        FD
)@@G@@  . $A YES NO,GETNXTLN  @D@@@@          J         RETRN             . $JFE
)@@G@@ RETURN     @[@@@@.     @A@@@@.         GET NXT CONTINUED LINE    @[@@@@FF
)@@G@@.     @C@@@@GETNXTLN                              . $H      @A@@@@      FG
)@@G@@    R$EAD     (SETEOF,BUFFER) @F@@@@          LSSL      A0,18           FH
)@@G@@  . $P GET NUM. OF WORDS IN   @B@@@@          SSL       A0,18           FI
)@@G@@  .   @F@@@@          JZ        A0,RETRN          . $J RETURN IF NO INPUFJ
)@@G@@T     @G@@@@          LA        A1,A0             . $P CHECK IF LAST WORFK
)@@G@@D IS ALL BLK@F@@@@          ANA,U     A1,1              . $P GET LAST WOFL
)@@G@@RD ADDR     @E@@@@          LA        A1,BUFFER,A1      . $P GET THE LASFM
)@@G@@T WORD@D@@@@          TNE       A1,('      ')     . $T ALL BLANK  @C@@@@FN
)@@G@@          ANA,U     A0,1              . $A A0 -1@B@@@@          JZ      FO
)@@G@@  A0,RETRN          .   @E@@@@          LR        R3,A0             . SAFP
)@@G@@VE IT IN R3       @B@@@@          ANA,U     A0,1              .   @E@@@@FQ
)@@G@@          LA        A0,BUFFER,A0      . $P GET LASR WORD IN @F@@@@      FR
)@@G@@    SLJ       SCAN              . $W EXAMINE THE LAST WORD  @G@@@@      FS
)@@G@@    LA        A0,R3             . $P COMPUTE NUM OF CHARACTER IN  @B@@@@FT
)@@G@@          ANA,U     A0,1              .   @^@@@@          MSI,U     A0,6FU
)@@G@@@B@@@@          AA        A0,R1             .   @E@@@@          LR      FV
)@@G@@  R3,A0             . SAVE IT IN R3       @H@@@@          SLJ       MOVEFW
)@@G@@IT            . $P MOVE LAST LINE TO INPUT BUFFER     @D@@@@          TZFX
)@@G@@        CNTNUSW           . $P CONTINUED  @B@@@@          J         GETNFY
)@@G@@XTLN          .   @B@@@@          J         RETRN             .   @[@@@@FZ
)@@G@@.     @B@@@@.         EXAMINE THE LAST INPUT WORD     @H@@@@          . GA
)@@G@@  SKIP BLANKS, CHECK FOR '                                  '     @[@@@@GB
)@@G@@.     @C@@@@SCAN      +0                          . $H      @E@@@@      GC
)@@G@@    LR,U      R1,6              . $P SET CHAR COUNT   @C@@@@BLKLOP      GD
)@@G@@                          . $H      @E@@@@          DSL       A0,6      GE
)@@G@@        . $P GET 1 CHAR       @B@@@@          SSL       A1,30           GF
)@@G@@  .   @E@@@@          TE,U      A1,5               $T IS IT A BLANK     GG
)@@G@@@E@@@@          J         NONBLK            . $A YES NO,NONBLK    @D@@@@GH
)@@G@@          JGD       R1,BLKLOP         . $J TRY NXT    @B@@@@          ERGI
)@@G@@        ERR$              .   @[@@@@.     @C@@@@NONBLK                  GJ
)@@G@@              . $H      @E@@@@          SZ        CNTNUSW           . $PGK
)@@G@@ RESET CONTINUE SW@E@@@@          TE,U      A1,073            . $T A CONGL
)@@G@@TINUED CHAR @E@@@@          J         *SCAN             . $A YES NO,*SCAGM
)@@G@@N     @F@@@@          SA        A1,CNTNUSW        . $P SET THE CONTINUEDGN
)@@G@@ SW   @C@@@@          JGD       R1,$+2            . -1      @B@@@@      GO
)@@G@@    ER        ERR$              .   @D@@@@          J         *SCAN     GP
)@@G@@        . $J RETURN     @[@@@@.     @E@@@@.         MOVE THE 2ND LINE ANGQ
)@@G@@D UP TO THE INPUT BUFFER      @[@@@@.     @A@@@@.         R3=NUM. OF CHAGR
)@@G@@R TO MOVE   @B@@@@.         FROM BUFFER TO X8+(0,X8,H2)/6   @[@@@@.     GS
)@@G@@@C@@@@MOVEIT    +0                          . $H      @F@@@@          LAGT
)@@G@@,H2     A4,0,X8           . $P GET CHAR POS IN INPUT  @E@@@@          AUGU
)@@G@@        A4,R3             . $P + CURRENT LENGTH @D@@@@          SA,H2   GV
)@@G@@  A5,,X8            . $P SAVE IT    @H@@@@          LA,U      A5,1      GW
)@@G@@        . $P START FROM 1ST CHAR FROM BUFFER    @G@@@@          SZ      GX
)@@G@@  A3                . $P COMPUTE INPUT BUFFER ADDR    @B@@@@          DIGY
)@@G@@,U      A3,6              .   @B@@@@          AA        A3,X8           GZ
)@@G@@  .   @B@@@@          AA,U      A3,1              .   @B@@@@          LXHA
)@@G@@        X9,A3             .   @F@@@@          LXI,U     X9,1            HB
)@@G@@  . $P SET UP X9 FOR MOVE     @B@@@@          AA,U      A4,1            HC
)@@G@@  .   @]@@@@MVELOP.     @E@@@@          JGD       R3,$+2            . $PHD
)@@G@@ LOOP FOR ALL CHAR@D@@@@          J         *MOVEIT           . $J RETURHE
)@@G@@N     @G@@@@          LA        A0,A5             . $P COMPUTE CHAR FROMHF
)@@G@@ BUFFER     @B@@@@          AA,U      A5,1              .   @B@@@@      HG
)@@G@@    ANA,U     A0,1              .   @B@@@@          DSL       A0,36     HH
)@@G@@        .   @B@@@@          DI,U      A0,6              .   @E@@@@      HI
)@@G@@    EX        GETONE,A1         . $P GET A CHAR       @G@@@@          LAHJ
)@@G@@        A0,A4             . $P COMPUTE INPUT CHAR POS       @^@@@@      HK
)@@G@@    AA,U      A4,1@B@@@@          ANA,U     A0,1              .   @B@@@@HL
)@@G@@          DSL       A0,36             .   @B@@@@          DI,U      A0,6HM
)@@G@@              .   @F@@@@          EX        PUTONE,A1         . $P SAVE HN
)@@G@@IN INPUT BUFFER   @B@@@@          J         MVELOP            .   @[@@@@HO
)@@G@@.     @B@@@@GETONE    LA,S1     A3,BUFFER,A0      .   @A@@@@          LAHP
)@@G@@,S2     A3,BUFFER,A0    @A@@@@          LA,S3     A3,BUFFER,A0    @A@@@@HQ
)@@G@@          LA,S4     A3,BUFFER,A0    @A@@@@          LA,S5     A3,BUFFER,HR
)@@G@@A0    @A@@@@          LA,S6     A3,BUFFER,A0    @ @@@@PUTONE    SA,S1   HS
)@@G@@  A3,,X9    @ @@@@          SA,S2     A3,,X9    @ @@@@          SA,S3   HT
)@@G@@  A3,,X9    @ @@@@          SA,S4     A3,,X9    @ @@@@          SA,S5   HU
)@@G@@  A3,,X9    @ @@@@          SA,S6     A3,,*X9   @[@@@@.     @D@@@@RETRN.HV
)@@G@@                                . $H RETURN     @E@@@@          LA      HW
)@@G@@  A0,SAVEA0         . $P GET 1ST A0       @D@@@@          J         0,X1HX
)@@G@@1             . $J RETURN     @C@@@@SETEOF                              HY
)@@G@@  . $H      @B@@@@          LA,U      A0,1              .   @B@@@@      HZ
)@@G@@    SA        A0,EOFSW          .   @ @@@@          J         RETRN     IA
)@@G@@@]@@@@$(4).       @F@@@@SAVEA0    +0                          . $ TEMP AIB
)@@G@@0(FIRST READ$)    @E@@@@.                                     . $ TO SAVIC
)@@G@@E INPUT MOSE@]@@@@EOFSW     +0@^@@@@BUFFER    RES       14  @]@@@@CNTNUSID
)@@G@@W   +0@#@@@@          END     ___0,18             . $P GET NUM. OF WORDSIE
)@@G@@ IN   @B@@@@          SS*[@@@@*SDFF*@#@@@@          AXR$    @A@@@@.     IF
)@@G@@    *RESTORE PROCESSOR*       @]@@@@.           @E@@@@.         THIS PROIG
)@@G@@CESSOR WILL RESTORE THE D. B. RECORDS FROM@F@@@@.         D$FILE'S BACK IH
)@@G@@TO THEIR ORIGINAL AREA, PAGE AND SLOT.    @F@@@@.         NO DELETE COMMII
)@@G@@AND SHOULD PROCEED THE RESTORE COMMAND.   @F@@@@.         NO PATCH COMMAIJ
)@@G@@ND SHOULD BE ISSUED AFTERWARD EITHER.     @G@@@@.         LIST FOLLOWED IK
)@@G@@WILL BE CHECKED AGAINST EACH RECORD RESTORED:   @]@@@@.           @F@@@@IL
)@@G@@.         1. RECORD LENGTH SHOULD NOT BE CHANGED.(FATAL ERROR)    @D@@@@IM
)@@G@@.         2. RECORD CODE MAY BE CHANGED BY THE TYPE.  @H@@@@.         3.IN
)@@G@@ SET POINTERS AND CALC POINTER(IF ANY) SHOULD NOT BE CHANGED.     @]@@@@IO
)@@G@@.           @#@@@@$(4)      LIT.    @]@@@@$(1).       @C@@@@RESTORE*    IP
)@@G@@                          . $H      @D@@@@          TZ        TOPT      IQ
)@@G@@        . $T TEST MODE  @E@@@@          SLJ       DEBUG$            . $AIR
)@@G@@ YES,*DEBUG$      @F@@@@          SX,H2     X11,SAVEX11       . $P SAVE IS
)@@G@@RETURN ADDRESS    @E@@@@          LX,H2     X1,C3             . $P DO SOIT
)@@G@@ME INIT     @G@@@@          LA,U      A0,0              . $P COMPUTE LARIU
)@@G@@GEST PAGE SIZE    @]@@@@PGSZLP.     @G@@@@          TLE,T1    A0,3,X1   IV
)@@G@@        . $P SIZE BIGGER THAN PREVIOUS    @D@@@@          LA,T1     A0,3IW
)@@G@@,X1           . $A YES,* NO   @D@@@@          TNZ,T3    0,X1            IX
)@@G@@  . $T END OF C3  @E@@@@          J         GETPGSZ           . $A YES,GIY
)@@G@@ETPGSZ NO   @E@@@@          AX,T3     X1,0,X1           . $P GET NXT TBLIZ
)@@G@@ ADDR @B@@@@          J         PGSZLP            .   @]@@@@GETPGSZ.    JA
)@@G@@@E@@@@          SZ        BUFPTR            . $P RESET POINTER    @E@@@@JB
)@@G@@          SA        A0,PGSIZE         . $P SAVE PGE SIZE    @G@@@@      JC
)@@G@@    MSI,U     A0,BUFCNT         . $P COMPUTE TOTAL BUFFER SIZE    @E@@@@JD
)@@G@@          LA        A1,LAST$D         . $P COMPUTE CORE ADDR@B@@@@      JE
)@@G@@    AA,U      A1,1              .   @E@@@@          SA        A1,BASEADRJF
)@@G@@        . $P SAVE BASE ADDR   @E@@@@          AA        A0,A1           JG
)@@G@@  . $P MCORE$ ADDR      @B@@@@          ER        MCORE$            .   JH
)@@G@@@E@@@@          SA        A0,LAST$D         . $P RESET DBANK ADDR @E@@@@JI
)@@G@@          LR,U      R1,BUFCNT         . $P INIT TBL ENTRIES @B@@@@      JJ
)@@G@@    SZ        A0                .   @B@@@@          LX,U      X1,A0     JK
)@@G@@        .   @B@@@@          LX        X2,(1,BUFTBL)     .   @B@@@@      JL
)@@G@@    BT        X2,,*X1           .   @E@@@@GETNXT.                       JM
)@@G@@        . $H GET NEXT LINE    @E@@@@          SLJ       GET1RCD         JN
)@@G@@  . $W GET A RECORD     @D@@@@          SLJ       CHKDBP            . $WJO
)@@G@@ CHK DBP    @G@@@@          SLJ       GETPG             . $W FETCH THE PJP
)@@G@@AGE REFERENCED    @F@@@@          SLJ       RSTOR             . $W RESTOJQ
)@@G@@RE THE RECORD     @B@@@@          J         GETNXT            .   @]@@@@JR
)@@G@@.           @A@@@@.         GET A RECORD FROM D$FILE  @]@@@@.           JS
)@@G@@@C@@@@GET1RCD   +0                          . $H      @E@@@@          LXJT
)@@G@@,U      X10,RCDBUF        . $P GET BUFFER ADDR  @E@@@@          LMJ     JU
)@@G@@  X11,DF$AMR        . $W GET A LINE       @E@@@@          LA        A0,(JV
)@@G@@+0777777777777). $P END OF F CHECKER@C@@@@          TNE       A0,RCDBUF JW
)@@G@@        . $T EOF  @B@@@@          J         RSTEND            .   @F@@@@JX
)@@G@@          TNZ       RCDBUF            . $T CHK IF CONTROL RECORD  @C@@@@JY
)@@G@@          J         GET1RCD+1         . $       @F@@@@          LA      JZ
)@@G@@  A0,RESTCNT        . $P UPDATE RESTORE COUNT   @B@@@@          AA,U    KA
)@@G@@  A0,1              .   @C@@@@          SA        A0,RESTCNT        . $ KB
)@@G@@      @D@@@@          J         *GET1RCD          . $J RETURN     @]@@@@KC
)@@G@@$(4).       @F@@@@RCDBUF    RES       1000              . 1K BUFFER FOR KD
)@@G@@RECORD!!!   @]@@@@$(1).       @]@@@@.           @B@@@@.         MAKE SURKE
)@@G@@E DBP IS A LEGAL ONE    @]@@@@.           @C@@@@CHKDBP    +0            KF
)@@G@@              . $H      @E@@@@          LA        A0,RCDBUF         . $PKG
)@@G@@ GET THE DBP      @C@@@@          SLJ       DBP$APS           . $W      KH
)@@G@@@D@@@@          TNZ       A1                . $T GOOD DBP   @C@@@@      KI
)@@G@@    J         ERR1              . $J      @E@@@@          SA        A1,AKJ
)@@G@@REANUM        . $P SAVE AREA CODE   @E@@@@          SA        A2,PAGENUMKK
)@@G@@        . $P SAVE PAGE NUM    @E@@@@          SA        A3,SLOTNUM      KL
)@@G@@  . $P SAVE SLOT NUM    @D@@@@          J         *CHKDBP           . $JKM
)@@G@@ RETURN     @]@@@@$(4).       @]@@@@AREANUM   +0@]@@@@PAGENUM   +0@]@@@@KN
)@@G@@SLOTNUM   +0@]@@@@RESTCNT*  +0@]@@@@$(1).       @]@@@@.           @C@@@@KO
)@@G@@.         GET A DATA BASE PAGE IF NOT IN CORE   @]@@@@.           @C@@@@KP
)@@G@@GETPG     +0                          . $H      @E@@@@          LA      KQ
)@@G@@  A0,AREANUM        . $P GET AREA CODE    @D@@@@          LA        A1,PKR
)@@G@@AGENUM        . $P PAGE NUM   @E@@@@          LSSL      A1,18           KS
)@@G@@  . $P PACK BOTH IN A0  @B@@@@          LDSL      A0,18             .   KT
)@@G@@@C@@@@          LR,U      R1,BUFCNT         . $P      @D@@@@          LXKU
)@@G@@        X1,(1,BUFTBL)     . $P TBL ADDR   @E@@@@          SE        A0,,KV
)@@G@@*X1           . $T SEARCH TBL ENTRY @E@@@@          J         GETPG1    KW
)@@G@@        . $A YES NO,GETPG1    @F@@@@          LA,U      A0,BUFCNT       KX
)@@G@@  . $P COMPUTE PAGE BUF ADDR  @B@@@@          ANA       A0,R1           KY
)@@G@@  .   @D@@@@          ANA,U     A0,1              . $P ENTRY NUM  @D@@@@KZ
)@@G@@          MSI       A0,PGSIZE         . $P UNIT SIZE  @D@@@@          AALA
)@@G@@        A0,BASEADR        . $P + OFF-SET  @E@@@@          LX        X8,ALB
)@@G@@0             . $P PUT IT IN X8     @D@@@@          J         *GETPG    LC
)@@G@@        . $J RETURN     @C@@@@GETPG1.                               . $HLD
)@@G@@      @F@@@@          LA        A0,BUFPTR         . $P GET NXT AVAI ENTRLE
)@@G@@Y     @E@@@@          TZ        BUFTBL,A0         . $T ENTRY IN USE     LF
)@@G@@@E@@@@          SLJ       WRTPG             . $A YES,WRTPG NO     @E@@@@LG
)@@G@@          LA,T3     A0,AREANUM        . $P GET AREA CODE    @E@@@@      LH
)@@G@@    SLJ       GTASZ             . $P GET AREA INFO    @D@@@@          TNLI
)@@G@@Z       A0                . $T GOOD AREA  @C@@@@          ER        ERR$LJ
)@@G@@              . $E NOP  @E@@@@          DS        A1,RDPKT          . $PLK
)@@G@@ SAVE AREA NAME   @E@@@@          SA,H1     A0,RDBUF+1        . $P SAVE LL
)@@G@@PAGE SIZE   @D@@@@          LA        A0,PAGENUM        . $P PAGE NUM   LM
)@@G@@@C@@@@          SA,H2     A0,RDBUF+1        . $P      @D@@@@          LALN
)@@G@@        A0,BUFPTR         . $P ENTRY PTR  @E@@@@          MSI       A0,PLO
)@@G@@GSIZE         . $P *UNIT SIZE       @F@@@@          AA        A0,BASEADRLP
)@@G@@        . $P COMPUTE BUFFER ADDR    @B@@@@          SA,H2     A0,RDBUF  LQ
)@@G@@        .   @D@@@@          LX,U      X10,RDPKT         . $P DB$AM PKT  LR
)@@G@@@D@@@@          LMJ       X11,DB$AM         . $W DO DB$AM   @E@@@@      LS
)@@G@@    TZ,S1     RDPKT+3           . $T CHK STATUS       @D@@@@          ERLT
)@@G@@        ERR$              . $E BOMBED     @G@@@@          LA        A0,BLU
)@@G@@UFPTR         . $P COMPUTE & SET TBL ENTRY      @D@@@@          LA      LV
)@@G@@  A1,AREANUM        . $P AREA CODE  @C@@@@          SA,H1     A1,BUFTBL,LW
)@@G@@A0      . $P      @D@@@@          LA        A1,PAGENUM        . $P PAGE LX
)@@G@@NUM   @B@@@@          SA,H2     A1,BUFTBL,A0      .   @E@@@@          AALY
)@@G@@,U      A0,1              . $P UP BUFPTR BY 1   @G@@@@          DSL     LZ
)@@G@@  A0,36             . $P COMPUTE NXT ENTRY POINT      @B@@@@          DIMA
)@@G@@,U      A0,BUFCNT         .   @B@@@@          SA        A1,BUFPTR       MB
)@@G@@  .   @D@@@@          J         GETPG+1           . $J RETURN     @]@@@@MC
)@@G@@.           @B@@@@.         WRITE A PAGE BACK TO DATA BASE  @]@@@@.     MD
)@@G@@      @C@@@@WRTPG     +0                          . $H      @E@@@@      ME
)@@G@@    LX        X1,BUFPTR         . $P GET TBL ENTRY    @E@@@@          LAMF
)@@G@@,H1     A0,BUFTBL,X1      . $P GET AREA CODE    @E@@@@          SLJ     MG
)@@G@@  GTASZ             . $W GET AREA INFO    @D@@@@          TNZ       A0  MH
)@@G@@              . $T GOOD AREA  @B@@@@          ER        ERR$            MI
)@@G@@  .   @E@@@@          DS        A1,WRTPKT         . $P SAVE AREA NAME   MJ
)@@G@@@D@@@@          SA,H1     A0,WRTBUF+1       . $P PAGE SIZE  @E@@@@      MK
)@@G@@    LX        X1,BUFPTR         . $P GET TBL ENTRY    @E@@@@          LAML
)@@G@@,H2     A0,BUFTBL,X1      . $P GET PAGE NUM     @E@@@@          SA,H2   MM
)@@G@@  A0,WRTBUF+1       . $P START PGE NUM    @E@@@@          LA        A0,XMN
)@@G@@1             . $P COMPUTE BUF ADDR @E@@@@          MSI       A0,PGSIZE MO
)@@G@@        . $P SKIP UNITS       @E@@@@          AA        A0,BASEADR      MP
)@@G@@  . $P ACTUAL ADDR      @D@@@@          SA,H2     A0,WRTBUF         . $PMQ
)@@G@@ SAVE IT    @D@@@@          LX,U      X10,WRTPKT        . $P DB$AM PKT  MR
)@@G@@@D@@@@          LMJ       X11,DB$AM         . $DO DB$AM     @D@@@@      MS
)@@G@@    TZ,S1     WRTPKT+3          . $T STATUS OK  @^@@@@          ER      MT
)@@G@@  ERR$@B@@@@          LX        X1,BUFPTR         .   @E@@@@          SZMU
)@@G@@        BUFTBL,X1         . $P RESET TBL ENTRY  @D@@@@          J       MV
)@@G@@  *WRTPG            . $J RETURN     @]@@@@.           @E@@@@.         GEMW
)@@G@@T AREA INFORMATION, PAGE SIZE AND AREA NAME     @]@@@@.           @C@@@@MX
)@@G@@GTASZ     +0                          . $H      @E@@@@          LA,H1   MY
)@@G@@  A1,C3             . $P GET AREA TBL(C3) @F@@@@          DSL       A1,3MZ
)@@G@@6             . $P COMPUTE NUM OF ENTRY   @E@@@@          DI,U      A1,9NA
)@@G@@              . $P 9 WORDS PER ENTRY@B@@@@          LR        R1,A1     NB
)@@G@@        .   @D@@@@          LA,H2     A1,C3             . $P TBL ADDR   NC
)@@G@@@B@@@@          LXI,U     A1,9              .   @E@@@@          SE,T1   ND
)@@G@@  A0,,*A1           . $T SEARCH TBL       @D@@@@          J         NOARNE
)@@G@@EA            .$J BAD AREA    @E@@@@          ANA,U     A1,9            NF
)@@G@@  . $P BACK UP PTR      @E@@@@          LA,T1     A0,3,A1           . $PNG
)@@G@@ GET PAGE SZ      @E@@@@          DL        A1,1,A1           . $P GET ANH
)@@G@@REA NAME    @D@@@@          J         *GTASZ            . $J RETURN     NI
)@@G@@@]@@@@NOAREA.     @C@@@@          SZ        A0                . $       NJ
)@@G@@@D@@@@          J         GTASZ             . $J RETURN     @]@@@@.     NK
)@@G@@      @ @@@@.         RESTORE THE RECORD  @]@@@@.           @C@@@@RSTOR NL
)@@G@@    +0                          . $H      @G@@@@          LA        A0,SNM
)@@G@@LOTS          . $P GET NUM OF SLOTS IN THE PAGE @E@@@@          AA      NN
)@@G@@  A0,CALCNUM        . $P + CALC SLOTS     @G@@@@          TLE       A0,SNO
)@@G@@LOTNUM        . $T POINT TO A UNUSED SLOT       @E@@@@          J       NP
)@@G@@  ERR2              . $A YES,ERR2 NO      @E@@@@          LX        X6,XNQ
)@@G@@8             . $P COMPUTE SLOT ADDR@C@@@@          AX        X6,PGLEN  NR
)@@G@@        . $       @B@@@@          ANX       X6,SLOTNUM        .   @E@@@@NS
)@@G@@          TNZ       0,X6              . $T A GOOD SLOT      @E@@@@      NT
)@@G@@    J         ERR2              . $A YES NO,ERR2      @E@@@@          TPNU
)@@G@@        0,X6              . $T SLOT IN USE      @B@@@@          J       NV
)@@G@@  ERR2              .   @E@@@@          LA        A0,SLTDESC        . $PNW
)@@G@@ GET SLOT DESC    @E@@@@          AND,U     A0,010            . $T CHK FNX
)@@G@@OREIGN BIT  @E@@@@          TZ        A1                . $T A FOREIGN SNY
)@@G@@LOT   @E@@@@          J         FORGN             . $A YES,FORGN NO     NZ
)@@G@@@E@@@@          LX        X7,X8             . $P GET RECORD ADDR  @C@@@@OA
)@@G@@          AX        X7,DISP           . $P      @C@@@@RSTOR1.           OB
)@@G@@                    . $H      @E@@@@          LA        A0,RCDCODE      OC
)@@G@@  . $P GET RECORD CODE  @E@@@@          TE,T1     A0,RCDBUF+1       . $TOD
)@@G@@ CODE CHANGED     @F@@@@          J         ERR6              . $J RECOROE
)@@G@@D CODE MODIFIED   @F@@@@          SLJ       RCDTBL            . $P GET ROF
)@@G@@ECORD CODE MOD    @E@@@@          LA,H2     A0,RCDBUF+1       . $P GET ROG
)@@G@@ECORD LENG  @D@@@@          TE        A0,RCDLEN         . $T MATCHED    OH
)@@G@@@B@@@@          J         ERR3              .   @F@@@@          SLJ     OI
)@@G@@  CHKPTR            . $W CHK SET PTRS ANS CALC  @E@@@@          LR      OJ
)@@G@@  R1,RCDLEN         . $P TRANSFER RECORD  @B@@@@          LXI,U     X7,1OK
)@@G@@              .   @B@@@@          LX        X1,(1,RCDBUF+1)   .   @B@@@@OL
)@@G@@          BT        X7,,*X1           .   @D@@@@          J         *RSTOM
)@@G@@OR            . $J RETURN     @]@@@@.           @B@@@@.         RECORD SON
)@@G@@TORED IN FOREIGN PAGE   @]@@@@.           @C@@@@FORGN.                  OO
)@@G@@              . $H      @I@@@@          LA,H2     A0,RCDBUF+1       . $POP
)@@G@@ MODIFY RECORD FOR THE FOREIGN PAGE       @B@@@@          AA,U      A0,1OQ
)@@G@@              .   @E@@@@          SA,H2     A0,RCDBUF+1       . $P UP LEOR
)@@G@@NGTH BY 1   @G@@@@          LA        A1,RCDBUF         . $P PUT DBP AT OS
)@@G@@END OF RECORD     @B@@@@          SA        A1,RCDBUF,A0      .   @E@@@@OT
)@@G@@          LA,S3     A0,RCDBUF+1       . $P RECORD DESC      @E@@@@      OU
)@@G@@    OR,U      A0,020            . $P SET FOREIGN BIT  @B@@@@          SAOV
)@@G@@,S3     A0,RCDBUF+1       .   @E@@@@          LA        A0,RCDNUM       OW
)@@G@@  . $GET RECORD NUM     @C@@@@          AND,U     A0,07777          . $POX
)@@G@@      @D@@@@          SA        A1,RCDNUMG        . $P SAVE IT    @F@@@@OY
)@@G@@          LA        A0,DISP           . $P GET FOREIGN PAGE NUM   @B@@@@OZ
)@@G@@          SA        A0,PAGENUM        .   @D@@@@          LA        A0,APA
)@@G@@CODE          . $P AREA CODE  @B@@@@          SA        A0,AREANUM      PB
)@@G@@  .   @D@@@@          SLJ       GETPG             . $P GET PG     @E@@@@PC
)@@G@@          LX        X6,X8             . $P COMPUTE SLOT ADDR@B@@@@      PD
)@@G@@    AX        X6,PGLEN          .   @E@@@@          ANX       X6,CALCNUMPE
)@@G@@        . $P SKIP CALC SLOTS  @E@@@@          LR        R1,SLOTS        PF
)@@G@@  . $P NUM OF SLOTS     @C@@@@CKNUMLP.                              . $HPG
)@@G@@      @E@@@@          ANX,U     X6,1              . $P POINT TO NXT SLOTPH
)@@G@@@E@@@@          JGD       R1,$+2            . $T END OF SLOTS     @B@@@@PI
)@@G@@          J         ERR4              .   @E@@@@          TP        0,X6PJ
)@@G@@              . $T SLOT IN USE      @B@@@@          J         CKNUMLP   PK
)@@G@@        .   @E@@@@          LA,U      A0,020            . $P CHK FOREIGNPL
)@@G@@ BIT  @B@@@@          AND       A0,SLTDESC        .   @B@@@@          JZPM
)@@G@@        A1,CKNUMLP        .   @E@@@@          LA        A0,RCDNUM       PN
)@@G@@  . $P GET RECORD NUM   @C@@@@          AND,U     A0,07777          . $ PO
)@@G@@      @D@@@@          TE        A1,RCDNUMG        . $T RIGHT ONE  @B@@@@PP
)@@G@@          J         CKNUMLP           .   @F@@@@          LX        X7,XPQ
)@@G@@8             . $P COMPUTE RECORD ADDRR   @B@@@@          AX        X7,DPR
)@@G@@ISP           .   @E@@@@          LA,U      A0,020            . $P CHK RPS
)@@G@@ECORD DESC  @B@@@@          AND       A0,RCDDESC        .   @B@@@@      PT
)@@G@@    JZ        A1,CKNUMLP        .   @E@@@@          LA        A0,RCDLEN PU
)@@G@@        . $P CHK SYS POINTER  @B@@@@          ANA,U     A0,1            PV
)@@G@@  .   @B@@@@          AA        A0,X7             .   @F@@@@          LAPW
)@@G@@        A0,,A0            . $P GET THE SYS POINTER    @D@@@@          TEPX
)@@G@@        A0,RCDBUF         . $T MATCHED    @B@@@@          J         CKNUPY
)@@G@@MLP           .   @F@@@@          J         RSTOR1            . $J RETURPZ
)@@G@@N NORMAL PROCESS  @ @@@@PGLEN     EQUF      2,X8,H1   @ @@@@PGNUM     EQQA
)@@G@@UF      1,X8,H2   @ @@@@CALCNUM   EQUF      6,X8,H1   @ @@@@SLOTS     EQQB
)@@G@@UF      3,X8,H1   @ @@@@ACODE     EQUF      1,X8,T1   @ @@@@RCDCODE   EQQC
)@@G@@UF      0,X7,T1   @ @@@@RCDLEN    EQUF      0,X7,H2   @ @@@@RCDDESC   EQQD
)@@G@@UF      0,X7,S3   @ @@@@SLTDESC   EQUF      0,X6,S1   @ @@@@DISP      EQQE
)@@G@@UF      0,X6,H2   @ @@@@RCDNUM    EQUF      0,X6,H1   @]@@@@.           QF
)@@G@@@C@@@@.         ROUTINE TO GET RECORD INFOMATION      @]@@@@.           QG
)@@G@@@C@@@@RCDTBL    +0                          . $H      @F@@@@          LXQH
)@@G@@,H2     X9,C5             . $P GET RECORD TBL ADDR    @]@@@@RCDLP.      QI
)@@G@@@G@@@@          TNE,T1    A0,,X9            . $T SEE IF MATCH THE ENTRY QJ
)@@G@@      @D@@@@          J         FINDRCD           . $J FOUND IT   @E@@@@QK
)@@G@@          TNZ,T3    0,X9              . $T END OF TBL       @F@@@@      QL
)@@G@@    J         ERR5              . $E RECORD NOT FOUND(C5)   @E@@@@      QM
)@@G@@    AX,T3     X9,,X9            . $P NEXT ENTRY       @B@@@@          J QN
)@@G@@        RCDLP             .   @C@@@@FINDRCD.                            QO
)@@G@@  . $H      @F@@@@          TNZ       NEWCODE           . $T RECORD CODEQP
)@@G@@ MODIFIED   @E@@@@          J         *RCDTBL           . $A YES NO,*RCDQQ
)@@G@@TBL   @F@@@@          LA        A0,NEWCODE        . $P GET NEW RECORD COQR
)@@G@@DE    @F@@@@          SA,T1     A0,RCDBUF+1       . $P CHANGE RECORD CODQS
)@@G@@E     @D@@@@          J         *RCDTBL           . $J RETURN     @ @@@@QT
)@@G@@NEWSW     EQUF      0,X9,S4   @ @@@@NEWCODE   EQUF      1,X9,T1   @ @@@@QU
)@@G@@FIRSTWD   EQUF      1,X9,T3   @ @@@@OLDCODE   EQUF      0,X9,T1   @]@@@@QV
)@@G@@.           @C@@@@.         CHECK SET PTR'S AND CALC PTR(IF ANY)  @]@@@@QW
)@@G@@.           @C@@@@CHKPTR    +0                          . $H      @E@@@@QX
)@@G@@          LA        A0,FIRSTWD        . $P GET NUM OF PTRS  @B@@@@      QY
)@@G@@    ANA,U     A0,1              .   @F@@@@          SA        A0,PTRCNT QZ
)@@G@@        . $P SAVE NUM OF POINTERS   @F@@@@          LR        R1,A0     RA
)@@G@@        . $P SAVE IT IN REPEATER    @E@@@@          LX        X1,X7     RB
)@@G@@        . $P GET RECORD ADDR  @F@@@@          AX,U      X1,1            RC
)@@G@@  . $P SKIP RECORD HEADER     @B@@@@          LXI,U     X1,1            RD
)@@G@@  .   @C@@@@          LX        X2,(1,RCDBUF+2)   . $P      @]@@@@PRTLP.RE
)@@G@@      @D@@@@          JGD       R1,$+2            . $T DONE ALL   @D@@@@RF
)@@G@@          J         *CHKPTR           . $J RETURN     @D@@@@          LARG
)@@G@@        A0,,*X1           . $P GET A PTR  @C@@@@          TNE       A0,,RH
)@@G@@*X2           . $T OK   @E@@@@          J         PRTLP             . $ARI
)@@G@@ YES,PRTLP NO     @F@@@@          J         ERR7              . $E SET/CRJ
)@@G@@ALC PTR GOOF!     @]@@@@.           @C@@@@.         END OF RESTORE, FLUSRK
)@@G@@H ALL BUFFERS     @]@@@@.           @C@@@@RSTEND.                       RL
)@@G@@        . $H      @D@@@@          SZ        BUFPTR            . $P RESETRM
)@@G@@ PTR  @C@@@@FLUSHLP.                              . $H      @E@@@@      RN
)@@G@@    LX        X1,BUFPTR         . $P GET BUF PTR      @F@@@@          TZRO
)@@G@@        BUFTBL,X1         . $T CHK IF AN EMPTY ENTRY  @E@@@@          SLRP
)@@G@@J       WRTPG             . $A YES NO,WRTPG     @E@@@@          LA      RQ
)@@G@@  A0,BUFPTR         . $P UPDATE PTR       @B@@@@          AA,U      A0,1RR
)@@G@@              .   @B@@@@          SA        A0,BUFPTR         .   @D@@@@RS
)@@G@@          TE,U      A0,BUFCNT         . $T DONE ALL   @E@@@@          J RT
)@@G@@        FLUSHLP           . $A YES NO,FLUSHLP   @ @@@@          E$DIT   RU
)@@G@@  EDPKT     @ @@@@          E$DECV    RESTCNT   @^@@@@          E$SKIP  RV
)@@G@@  1   @A@@@@          E$FD2     ('RECORDS')     @^@@@@          E$SKIP  RW
)@@G@@  1   @A@@@@          E$FD2     ('RESTORED')    @#@@@@          E$DITX  RX
)@@G@@@A@@@@          P$RINT    (PF 1,12,PRINT) @D@@@@          J         *SAVRY
)@@G@@EX11          . $J RETURN     @C@@@@RCDID     +0                        RZ
)@@G@@  . $H      @ @@@@          E$DIT     EDPKT     @A@@@@          E$FD2   SA
)@@G@@  ('NEW-ID:')     @ @@@@          E$FD1     ('DBP-')  @A@@@@          E$SB
)@@G@@OCTF    12,RCDBUF       @A@@@@          E$FD2     (',HEADER-')    @A@@@@SC
)@@G@@          E$OCTF    12,RCDBUF+1     @#@@@@          E$DITX  @A@@@@      SD
)@@G@@    P$RINT    (PF 1,12,PRINT) @ @@@@          J         *RCDID    @C@@@@SE
)@@G@@ORCDID    +0                          . $H      @ @@@@          E$DIT   SF
)@@G@@  EDPKT     @A@@@@          E$FD2     ('OLD-ID:')     @ @@@@          E$SG
)@@G@@FD1     ('DBP-')  @A@@@@          E$OCTF    12,RCDBUF       @A@@@@      SH
)@@G@@    E$FD2     (',HEADER-')    @ @@@@          E$OCTF    12,0,X7   @#@@@@SI
)@@G@@          E$DITX  @A@@@@          P$RINT    (PF 1,12,PRINT) @ @@@@      SJ
)@@G@@    J         *ORCDID   @]@@@@.           @^@@@@.         ERROR ROUTINESSK
)@@G@@@]@@@@.           @C@@@@ERR1.                                 . $H      SL
)@@G@@@A@@@@          P$RINT    (PF 1,ML1,MSG1) @ @@@@          SLJ       RCDISM
)@@G@@D     @ @@@@          J         ERROR     @C@@@@ERR2.                   SN
)@@G@@              . $H      @A@@@@          P$RINT    (PF 1,ML2,MSG2) @ @@@@SO
)@@G@@          SLJ       RCDID     @ @@@@          J         ERROR     @C@@@@SP
)@@G@@ERR3.                                 . $H      @A@@@@          P$RINT  SQ
)@@G@@  (PF 1,ML3,MSG3) @ @@@@          SLJ       RCDID     @ @@@@          SLSR
)@@G@@J       ORCDID    @ @@@@          J         ERROR     @C@@@@ERR4.       SS
)@@G@@                          . $H      @A@@@@          P$RINT    (PF 1,ML4,ST
)@@G@@MSG4) @ @@@@          SLJ       RCDID     @ @@@@          J         ERROSU
)@@G@@R     @C@@@@ERR5.                                 . $H      @A@@@@      SV
)@@G@@    P$RINT    (PF 1,ML5,MSG5) @ @@@@          SLJ       RCDID     @ @@@@SW
)@@G@@          J         ERROR     @C@@@@ERR6.                               SX
)@@G@@  . $H      @A@@@@          P$RINT    (PF 1,ML6,MSG6) @ @@@@          SLSY
)@@G@@J       RCDID     @ @@@@          J         ERROR     @C@@@@ERR7.       SZ
)@@G@@                          . $H      @A@@@@          P$RINT    (PF 1,ML7,TA
)@@G@@MSG7) @ @@@@          SLJ       RCDID     @F@@@@          LA        A0,PTB
)@@G@@TRCNT         . $P GET NUM OF POINTERS    @F@@@@          SA,H1     A0,NTC
)@@G@@EWPTR+5       . $P SAVE IT IN SNAP PKT    @C@@@@NEWPTR    L$SNAP    'NEWTD
)@@G@@PTR',0,10,RCDBUF+2      @ @@@@          SLJ       ORCDID    @F@@@@      TE
)@@G@@    LA        A0,PTRCNT         . $P GET POINTERS COUNT     @E@@@@      TF
)@@G@@    SA,H1     A0,OLDPTR+5       . $P SAVE IT IN PKT   @E@@@@          LATG
)@@G@@        A0,X7             . $P COMPUTE DUMP ADDR@E@@@@          A,U     TH
)@@G@@  A0,1              . $P SKIP HEADER      @F@@@@          SA,H2     A0,OTI
)@@G@@LDPTR+5       . $P PUT IT IN SNAP PKT     @B@@@@OLDPTR    L$SNAP    'OLDTJ
)@@G@@PTR',0,10,RCDBUF  @ @@@@          J         ERROR     @C@@@@ERROR.      TK
)@@G@@                          . $H      @^@@@@          ER        ERR$@]@@@@TL
)@@G@@$(4).       @]@@@@PTRCNT    +0@A@@@@MSG1      '** RECORD DBP NOT VALID' TM
)@@G@@@ @@@@ML1       EQU       $-MSG1    @D@@@@MSG2      '** RECORD DBP POINTTN
)@@G@@S TO AN UNUSED SLOT'    @ @@@@ML2       EQU       $-MSG2    @B@@@@MSG3  TO
)@@G@@    '** RECORD LENGTH NOT MATCHED'  @ @@@@ML3       EQU       $-MSG3    TP
)@@G@@@D@@@@MSG4      '** SLOT IN FOREIGN PAGE CANNOT BE FOUND'   @ @@@@ML4   TQ
)@@G@@    EQU       $-MSG4    @C@@@@MSG5      '** RECORD CODE CANNOT BE IDENTITR
)@@G@@FIED' @ @@@@ML5       EQU       $-MSG5    @G@@@@MSG6      '** RECORD CODTS
)@@G@@E MUST BE MODIFIED BY RESTORE SUBCOMMAND.'      @ @@@@ML6       EQU     TT
)@@G@@  $-MSG6    @D@@@@MSG7      '** SET/CALC POINTERS CANNOT BE CHANGED'    TU
)@@G@@@ @@@@ML7       EQU       $-MSG7    @F@@@@BUFCNT    EQUF      10        TV
)@@G@@        . INDICATE NUM OF BUFFERS   @]@@@@BASEADR   +0@]@@@@BUFPTR    +0TW
)@@G@@@ @@@@BUFTBL    RES       BUFCNT    @]@@@@SAVEX11   +0@]@@@@RCDNUMG   +0TX
)@@G@@@]@@@@PGSIZE    +0@^@@@@RDPKT     RES       2   @]@@@@          +0@^@@@@TY
)@@G@@          020,0,0       @^@@@@          RES       3   @#@@@@RDBUF     +1TZ
)@@G@@,0    @#@@@@          +0,0    @^@@@@WRTPKT    RES       2   @]@@@@      UA
)@@G@@    +0@^@@@@          +010,0,0      @^@@@@          RES       3   @#@@@@UB
)@@G@@WRTBUF    +1,0    @#@@@@          +0,0    @ @@@@PF        FORM      12,6UC
)@@G@@,18   @#@@@@          END     ___@@@          LA*[@@@@*SDFF*@[@@@@.     UD
)@@G@@@E@@@@.         AUTOMATIC RECORD TRANSFORMATION PROCESSOR (ART)   @[@@@@UE
)@@G@@.     @B@@@@.         ENTERED:   LX,U     X10,PARAM   @A@@@@.           UF
)@@G@@         SLJ      ART   @^@@@@.           WHERE:      @A@@@@.           UG
)@@G@@         PARAM =  0, DBP@D@@@@.                    PARAM+1 =  ADDR OF THUH
)@@G@@E RECORD    @^@@@@.           RETURNED:   @C@@@@.                    R3 UI
)@@G@@= FINAL RECORD LENGTH   @[@@@@.     @ @@@@PF        FORM      12,6,18   UJ
)@@G@@@#@@@@          AXR$    @#@@@@$(4)      LIT.    @]@@@@$(1).       @C@@@@UK
)@@G@@ART*      +0                          . $H      @E@@@@          LX,H2   UL
)@@G@@  X9,1,X10          . $P GET RECORD ADDR  @E@@@@          LR,H2     R3,0UM
)@@G@@,X9           . $P GET RECORD LENGTH@D@@@@          TNZ       0,X10     UN
)@@G@@        . $T PARAM = 0  @E@@@@          J         *ART              . $AUO
)@@G@@ YES,*ART NO      @E@@@@          LA        A0,0,X9           . $P GET RUP
)@@G@@ECORD HEADER@[@@@@.     @A@@@@.         CHECK FOR FOREIGN BIT     @[@@@@UQ
)@@G@@.     @F@@@@          AND       A0,(020000000)    . $T TEST THE FOREIGN UR
)@@G@@BIT   @E@@@@          JZ        A1,NFOREIGN       . $A YES NO,NFOREIGN  US
)@@G@@@F@@@@          LA,H2     A0,0,X9           . $P GET THE RECORD LENGTH  UT
)@@G@@@C@@@@          ANA,U     A0,1              . $P -1   @E@@@@          SAUU
)@@G@@,H2     A0,0,X9           . $P RESTORE IT       @E@@@@          LR      UV
)@@G@@  R3,A0             . $P PUT IT IN R3     @F@@@@          LA,U      A0,0UW
)@@G@@50            . $P RESET THE FOREIGN BIT  @B@@@@          AND,S3    A0,0UX
)@@G@@,X9           .   @E@@@@          SA,S3     A1,0,X9           . $P RESTOUY
)@@G@@RE IT       @[@@@@.     @C@@@@.         CHECK IF TRANSFORMATION IS NECESUZ
)@@G@@SARY  @[@@@@.     @C@@@@NFOREIGN                              . $H      VA
)@@G@@@E@@@@          TNZ       C17               . $T RULE EXIST       @E@@@@VB
)@@G@@          J         *ART              . $A YES NO,*ART      @E@@@@      VC
)@@G@@    LA,T1     A0,0,X9           . $P GET RECORD CODE  @I@@@@          SLVD
)@@G@@J       CHKC17            . $P CHECK IF RULE EXISTS FOR THE RECORD      VE
)@@G@@@D@@@@          TNZ       X8                . $T X8 = 0     @E@@@@      VF
)@@G@@    J         *ART              . $A YES NO,*ART      @B@@@@.           VG
)@@G@@   SAVE REGISTER  X1 - A15    @[@@@@.     @B@@@@          LX,U      A0,XVH
)@@G@@1             .   @B@@@@          LXI,U     A0,1              .   @B@@@@VI
)@@G@@          LX        A1,(1,REGSAVE)    .   @B@@@@          LR,U      R1,2VJ
)@@G@@7             .   @B@@@@          BT        A1,,*A0           .   @E@@@@VK
)@@G@@          TZ,H2     NBUFADR           . $T MCORE$ NEW BUFF  @E@@@@      VL
)@@G@@    J         ARTSTART          . $A YES NO,ARTSTART  @]@@@@.           VM
)@@G@@@A@@@@.         COMPUTE ART BUFFER SIZE   @]@@@@.           @E@@@@      VN
)@@G@@    LX,H2     X1,C17            . $P GET C17 ADDR     @E@@@@          SZVO
)@@G@@        A0                . $P SET BUF SZ TO 0  @]@@@@BUFSZLP   . @F@@@@VP
)@@G@@          LA,T1     A1,1,X1           . $P GET NEW RECORD LENGTH  @E@@@@VQ
)@@G@@          AA,T2     A1,1,X1           . $P ADD OLD LENGTH   @D@@@@      VR
)@@G@@    TG        A1,A0             . $T A0 > A1    @D@@@@          LA      VS
)@@G@@  A0,A1             . $A YES NO,*   @D@@@@          TNZ,T3    0,X1      VT
)@@G@@        . $T LINK=0     @E@@@@          J         BUFSZ1            . $AVU
)@@G@@ YES,BUGSZ1 NO    @E@@@@          AX,T3     X1,,X1            . $P GET NVV
)@@G@@EXT ENTRY   @B@@@@          J         BUFSZLP           .   @]@@@@BUFSZ1VW
)@@G@@.     @F@@@@          A,U       A0,10             . $P ADD 10 EXTRA WORDVX
)@@G@@S     @D@@@@          SA        A0,NBUFSZ         . $P SAVE IT    @B@@@@VY
)@@G@@          LA        A0,LAST$D         .   @E@@@@          AU,U      A0,1VZ
)@@G@@              . $P COMPUT BUF ADDR  @D@@@@          SA,H2     A1,NBUFADRWA
)@@G@@        . $P SAVE IT    @E@@@@          AA        A0,NBUFSZ         . $PWB
)@@G@@ GET MCORE$ SIZE  @B@@@@          SA        A0,LAST$D         .   @B@@@@WC
)@@G@@          ER        MCORE$            .   @]@@@@$(4).       @E@@@@NBUFSZWD
)@@G@@    RES       1                 . $ ART BUFFER SIZE   @D@@@@REGSAVE   REWE
)@@G@@S       28                . $ X1 - A15    @]@@@@$(1).       @]@@@@ARTSTAWF
)@@G@@RT.   @[@@@@.     @B@@@@.         PERFORM RECORD TRANSFORMATION   @A@@@@WG
)@@G@@.         X7 = ADDR OF NEW-BUFF     @A@@@@.         X9 = ADDR OF RECORD WH
)@@G@@      @C@@@@.         X8 = ADDR OF TRANSFORMATION RULE ENTRY@[@@@@.     WI
)@@G@@@E@@@@          SZ        A0                . $P SET A0 = 0       @E@@@@WJ
)@@G@@          LX,U      X1,A0             . $P ZEROS OUT NEWBUFF@B@@@@      WK
)@@G@@    LX        X2,NBUFADR        .   @B@@@@          LR        R1,NBUFSZ WL
)@@G@@        .   @B@@@@          BT        X2,,*X1           .   @F@@@@      WM
)@@G@@    LX,H2     X7,NBUFADR        . $P X7 = ADDR OF NEW-BUFF  @G@@@@      WN
)@@G@@    LX        X1,X9             . $P MOVE ORIGINAL RECORD TO A    @D@@@@WO
)@@G@@          LXI,U     X1,1              . $  NEW BUFF   @B@@@@          LXWP
)@@G@@        X2,NBUFADR        .   @B@@@@          LR        R1,R3           WQ
)@@G@@  .   @G@@@@          BT        X2,,*X1           . $P MOVE RECORD(OLD) WR
)@@G@@TO NEW BUFF @I@@@@          LA,S6     A0,1,X8           . $P GET NEW RECWS
)@@G@@ORD TYPE(CALC/NON-CALC)       @F@@@@          SA,S3     A0,,X7          WT
)@@G@@  . $P SET IT IN NEW RECORD   @E@@@@          LA,T1     A0,,X9          WU
)@@G@@  . $ GET RECORD CODE   @E@@@@          SLJ       CHKC1             . $PWV
)@@G@@ SEARCH C1 ENTRY  @F@@@@          LX        X6,X1             . $P SAVE WW
)@@G@@ENTRY ADDR IN X6  @[@@@@.     @A@@@@.         X6 =  C1 ENTRY ADDR       WX
)@@G@@@[@@@@.     @E@@@@          LX        X1,X6             . $P GET ENTRY AWY
)@@G@@DDR   @E@@@@          AX,S4     X1,,X1            . $P SKIP O/A SETS    WZ
)@@G@@@G@@@@          AX,U      X1,1              . $P ADDR OF MANUAL CONTROL XA
)@@G@@      @E@@@@.         LOCATE ALL OF MANUAL SET PTR'S IN OLD RECORD      XB
)@@G@@@[@@@@.     @E@@@@          LA,S2     A15,0,X1          . $P GET MANUAL XC
)@@G@@COUNT @E@@@@          JZ        A15,MOVESET       . $J JUMP IF COUNT = 0XD
)@@G@@@G@@@@          LX,S6     X2,0,X1           . $P GET MANUAL CONTROL WRD XE
)@@G@@DISP  @G@@@@          AX        X2,X9             . $P GET ABS. ADDR OF XF
)@@G@@ABOVE       @D@@@@          LA        A1,,X2            . $P GET MFCW   XG
)@@G@@@B@@@@          JGD       A15,$+1           .   @G@@@@          AX,U    XH
)@@G@@  X1,2              . $P X1 POINTS TO FIRST M-SET(C1) @I@@@@          AXXI
)@@G@@,U      X2,1              . $P X2 POINTS TO FIRST M SET PTR(RECORD)     XJ
)@@G@@@D@@@@MC1LOOP   SZ        A0                . $P ZEROS A0   @E@@@@      XK
)@@G@@    LDSL      A0,1              . $P CHECK A BIT      @F@@@@          JZXL
)@@G@@        A0,NOTIN1         . $J IF NOT PARTICIPATING   @G@@@@          LXXM
)@@G@@        X3,X2             . $P COMPUTE SET PTR DISP IN THE  @D@@@@      XN
)@@G@@    ANX       X3,X9             . $  RECORD     @C@@@@          SX,S6   XO
)@@G@@  X3,,X1            . $       @H@@@@          AX,S2     X2,,X1          XP
)@@G@@  . $P SKIP TO NEXT SET (IN THE RECORD)   @G@@@@GNXTMAN   AX,U      X1,1XQ
)@@G@@              . $P X1 POINTS TO NXT M-SET(C1)   @D@@@@          JGD     XR
)@@G@@  A15,MC1LOOP       . $J TRY NXT    @B@@@@          J         MOVESET   XS
)@@G@@        .   @]@@@@NOTIN1.     @F@@@@          SZ,S6     0,X1            XT
)@@G@@  . $P ZEROS OUT DISP IN C1   @B@@@@          J         GNXTMAN         XU
)@@G@@  .   @[@@@@.     @F@@@@.         TRANSFER ALL SETS PTR'S FROM OLD RECORXV
)@@G@@D TO NEW-BUFF     @[@@@@.     @C@@@@MOVESET                             XW
)@@G@@  . $H      @E@@@@          LA,T1     A0,,X9            . $P GET RECORD XX
)@@G@@CODE  @E@@@@          SLJ       CHKC9             . $P SEARCH C9 TBL    XY
)@@G@@@G@@@@          LX        X5,X1             . $P SAVE C9 ENTRY ADDR IN XXZ
)@@G@@5     @[@@@@.     @ @@@@.         X5 = C9 ENTRY ADDR  @[@@@@.     @F@@@@YA
)@@G@@          LA,S4     A15,,X5           . $P GET O/A COUNT   (A15)  @D@@@@YB
)@@G@@          AX,U      X5,1              . $P UPDATE X5  @E@@@@          JZYC
)@@G@@        A15,MOVEMAN       . $J JUMP IF A15 = 0  @E@@@@          JGD     YD
)@@G@@  A15,$+1           . $P A15 = (A15) - 1  @ @@@@.         MOVE OWNER SETYE
)@@G@@S     @[@@@@.     @]@@@@MOVEOWN.    @E@@@@          LA,S5     A0,,X5    YF
)@@G@@         . $P GET OWNER BIT   @F@@@@          SSL       A0,5            YG
)@@G@@   . $P SHIFT OFF XTRA BITS   @G@@@@          JZ        A0,MOVEAUTO     YH
)@@G@@   . $J JUMP IF OWNER SETS END      @E@@@@          LA,T2     A0,,X5    YI
)@@G@@         . $P GET THE SET CODE@I@@@@          SLJ       GETSETO         YJ
)@@G@@   . $P GET SET POINTER(S) ADDR IN OLD(C1)      @E@@@@          TNZ     YK
)@@G@@  X1                 . $T A NEW SET       @E@@@@          J         SETEYL
)@@G@@MPTY          . $A YES,SETEMPTY NO  @E@@@@          LA,S5     A0,,X5    YM
)@@G@@        . $P GET SET TYPE     @F@@@@          TE,S5     A0,,X1          YN
)@@G@@  . $T IDENTICAL TO OLD TYPE  @E@@@@          J         NEWTYPEO        YO
)@@G@@  . $A YES NO,NEWTYPE   @E@@@@          LA,S6     A0,,X1            . $PYP
)@@G@@ GET SET DISP (C1)@G@@@@          TNE,S6    A0,,X5            . $T CHECKYQ
)@@G@@ IF SET POSITION CHANGED@E@@@@          J         NXTOWN            . $AYR
)@@G@@ YES,NXTOWN NO    @G@@@@          AX        A0,X9             . $P GET AYS
)@@G@@BS. ADDR OF SET PTR     @B@@@@          LXI,U     A0,1              .   YT
)@@G@@@F@@@@          LX,S6     X3,,X5            . $P GET SET DISP IN NEW    YU
)@@G@@@B@@@@          AX        X3,X7             .   @B@@@@          LXI,U   YV
)@@G@@  X3,1              .   @F@@@@          LR,S2     R1,,X5            . $PYW
)@@G@@ GET NUMBER OF LINKS    @F@@@@          BT        X3,,*A0           . $PYX
)@@G@@ TRANSFER SET PTR'S     @E@@@@NXTOWN    AX,U      X5,1              . $PYY
)@@G@@ NXT SET IN C9    @D@@@@          JGD       A15,MOVEOWN       . $P NXT OYZ
)@@G@@WNER  @ @@@@          J         MOVEMAN   @[@@@@.     @D@@@@.         SEZA
)@@G@@T OWNER EMPTY (SET TO POINT TO ITSELF)    @[@@@@.     @C@@@@SETEMPTY    ZB
)@@G@@                          . $H      @D@@@@          LX        X2,X10    ZC
)@@G@@        . $P GET DBP    @B@@@@          LXI,U     X2,0              .   ZD
)@@G@@@F@@@@          LX,S6     X3,,X5            . $P GET SET DISP IN NEW    ZE
)@@G@@@E@@@@          AX        X3,X7             . $P ABS. OF ABOVE    @B@@@@ZF
)@@G@@          LXI,U     X3,1              .   @D@@@@          LR,S2     R1,,ZG
)@@G@@X5            . $P GET LINKS  @E@@@@          BT        X3,,*X2         ZH
)@@G@@  . $P SET IT EMPTY     @B@@@@          J         NXTOWN            .   ZI
)@@G@@@[@@@@.     @C@@@@.         SET LINK TYPE CHANGED (OWNER SET)     @[@@@@ZJ
)@@G@@.     @C@@@@NEWTYPEO                              . $H      @F@@@@      ZK
)@@G@@    LX,S6     X2,,X1            . $P GET SET DISP IN OLD    @E@@@@      ZL
)@@G@@    AX        X2,X9             . $P GET ABS. ADDR    @F@@@@          LAZM
)@@G@@        A10,,X2           . $P GET NXT PTR IN A10     @D@@@@          AXZN
)@@G@@,U      X2,1              . $P X2 UP 1    @G@@@@          LA,U      A0,1ZO
)@@G@@              . $P CHECK IF PRIOR PTR EXITS     @B@@@@          AND,S5  ZP
)@@G@@  A0,,X1            .   @C@@@@          LA        A11,,X10          . $TZQ
)@@G@@ IS IT@B@@@@          TZ        A1                .   @E@@@@          LAZR
)@@G@@        A11,,X2           . $P GET PRIOR PTR    @[@@@@.     @F@@@@.     ZS
)@@G@@    PUT OWNER PTR'S (A10 = NXT, A11 = PRIOR)  IN NEW BUFF   @[@@@@.     ZT
)@@G@@@G@@@@          LX,S6     X3,,X5            . $P GET SET PTR DISP IN NEWZU
)@@G@@-BUFF @G@@@@          AX        X3,X7             . $P GET ABS. ADDR OF ZV
)@@G@@ABOVE       @E@@@@          SA        A10,,X3           . $P MOVE NXT PTZW
)@@G@@R     @E@@@@          AX,U      X3,1              . $P UPDATE  ADDR     ZX
)@@G@@@C@@@@          LA,U      A0,1              . $P      @G@@@@          ANZY
)@@G@@D,S5    A0,,X5            . $T SEE IF PRIOR PTR NEEDED      @B@@@@      ZZ
)@@G@@    TZ        A1                .   @E@@@@          SA        A11,,X3   AA
)@@G@@        . $A YES,SAVE-IT NO   @B@@@@          J         NXTOWN          AB
)@@G@@  .   @[@@@@.     @A@@@@.         MOVE AUTOMATIC MEMBER SETS@[@@@@.     AC
)@@G@@@C@@@@MOVEAUTO                              . $H      @E@@@@          LAAD
)@@G@@,T2     A0,,X5            . $P GET THE SET CODE @G@@@@          SLJ     AE
)@@G@@  GETSET            . $P GET SET PTR(S) ADDR IN C1    @E@@@@          TNAF
)@@G@@Z       X1                . $T SEE IF AN OLD SET@E@@@@          J       AG
)@@G@@  NEWAUTO           . $A YES NO,NEWAUTO   @H@@@@          TNZ,S6    0,X1AH
)@@G@@              . $T SEE IF SET PTR(IF MANUAL) EXITS    @E@@@@          J AI
)@@G@@        NEWAUTO           . $A YES NO,NEWAUTO   @E@@@@          LA,S5   AJ
)@@G@@  A0,,X5            . $P GET LINK TYPE    @F@@@@          TE,S5     A0,,AK
)@@G@@X1            . $T ARE THEY SAME TYPE     @E@@@@          J         NEWTAL
)@@G@@YPEA          . $A YES NO,NEWTYPEA  @F@@@@          LA,S6     A0,,X1    AM
)@@G@@        . $P GET SET DISP IN OLD    @G@@@@          TNE,S6    A0,,X5    AN
)@@G@@        . $T CHECK IF THEY HAVE SAME ADDR @B@@@@          J         NXTOAO
)@@G@@WN            .   @G@@@@          AA        A0,X9             . $P GET AAP
)@@G@@BS. ADDR OF SET PTR'S   @B@@@@          LXI,U     A0,1              .   AQ
)@@G@@@F@@@@          LX,S6     X3,,X5            . $P GET SET DISP IN NEW    AR
)@@G@@@E@@@@          AX        X3,X7             . $P GET ABS. OF ABOVE@^@@@@AS
)@@G@@          LXI,U     X3,1@E@@@@          LR,S2     R1,,X1            .  $AT
)@@G@@P GET # OF PTR'S  @E@@@@          BT        X3,,*A0           .  $P TRANAU
)@@G@@SFER THEM   @D@@@@          J         NXTOWN            .  $J NXT ONE   AV
)@@G@@@[@@@@.     @C@@@@.         THE RECORD IS A MEMBER OF A NEW SET   @A@@@@AW
)@@G@@.               (SET TO ZERO)       @[@@@@.     @C@@@@NEWAUTO           AX
)@@G@@                    . $H      @C@@@@          SZ        A0              AY
)@@G@@  . $P      @C@@@@          LX,U      X3,A0             . $P      @E@@@@AZ
)@@G@@          LX,S6     X2,,X5            . $P GET SET PTR DISP @E@@@@      BA
)@@G@@    AX        X2,X7             . $P GET ABS. ADDR    @E@@@@          LRBB
)@@G@@,S2     R1,,X5            . $P GET LINK NUMBER  @B@@@@          BT      BC
)@@G@@  X2,,*X3           .   @B@@@@          J         NXTOWN            .   BD
)@@G@@@[@@@@.     @D@@@@.         SET TYPE(LINK) CHANGED FOR AUTOMATIC SET    BE
)@@G@@@[@@@@.     @C@@@@NEWTYPEA                              . $H      @F@@@@BF
)@@G@@          LX,S6     X2,,X1            . $P GET SET DISP IN OLD    @E@@@@BG
)@@G@@          AX        X2,X9             . $P GET ABS.OF ABOVE @E@@@@      BH
)@@G@@    LA        A10,,X2           . $P UP TO NXT PTR    @E@@@@          AXBI
)@@G@@,U      A0,1              . $P GET NXT POINTER  @H@@@@          SZ      BJ
)@@G@@  A11               . $P PRESET PRIOR AND OWNER TO ZERO     @B@@@@      BK
)@@G@@    SZ        A12               .   @G@@@@          TNZ,S5    0,X1      BL
)@@G@@        . $T CHECK IF ANY OTHER LINKS     @B@@@@          J         NEWTBM
)@@G@@YPMOV         .   @G@@@@          LA,U      A0,010            . $P SET UBN
)@@G@@P TO CHECK FOR OWNER PTR@C@@@@          AND,S5    A0,0,X1           . $ BO
)@@G@@      @E@@@@          JZ        A1,$+3            . $T OWNER POINTER    BP
)@@G@@@E@@@@          LA        A11,0,X2          . $P GET OWNER PTR    @E@@@@BQ
)@@G@@          AX,U      X2,1              . $P UP SET ADDR    1 @G@@@@      BR
)@@G@@    LA,U      A0,1              . $P SET UP TO CHK FOR PRIOR PTR  @B@@@@BS
)@@G@@          AND,S5    A0,0,X1           .   @E@@@@          JZ        A1,NBT
)@@G@@EWTYPMOV      . $P JUMP IF NO PRIOR @E@@@@          LA        A12,0,X2  BU
)@@G@@        . $P GET PRIOR PTR    @[@@@@.     @C@@@@.         PUT AN AUTOMATBV
)@@G@@IC SET PTR'S IN NEW BUFF@[@@@@.     @C@@@@NEWTYPMOV                     BW
)@@G@@        . $H      @G@@@@          LX,S6     X3,,X5            . $P GET SBX
)@@G@@ET PTR DISP IN NEW      @G@@@@          AX        X3,X7             . $PBY
)@@G@@ GET ABS. ADDR OF ABOVE       @E@@@@          SA        A10,,X3         BZ
)@@G@@  . $P MOVE NXT PTR     @E@@@@          AX,U      X3,1              . $PCA
)@@G@@ UPDATE ADDR      @H@@@@          LA,U      A0,010            . $P SET UCB
)@@G@@P TO SEE IF OWNER PTR NEEDED  @B@@@@          AND,S5    A0,,X5          CC
)@@G@@  .   @E@@@@          JZ        A1,$+3            . $J SKIP OWNER PTR   CD
)@@G@@@E@@@@          SA        A11,,X3           . $P MOVE OWNER PTR   @E@@@@CE
)@@G@@          AX,U      X3,1              . $P UPDATE ADDR      @H@@@@      CF
)@@G@@    LA,U      A0,1              . $P SET UP TO SEE IF PRIOR PTR NEEDED  CG
)@@G@@@B@@@@          AND,S5    A0,,X5            .   @E@@@@          JZ      CH
)@@G@@  A1,NXTOWN         . $J SKIP IF NO PRIOR @E@@@@          SA        A12,CI
)@@G@@,X3           . $P MOVE PRIOR PTR   @D@@@@          J         NXTOWN    CJ
)@@G@@        . $J NXT SET    @[@@@@.     @B@@@@.         MOVE MANUAL SETS TO CK
)@@G@@NEW BUFF    @[@@@@.     @C@@@@MOVEMAN                               . $HCL
)@@G@@      @F@@@@          LA,S2     A15,,X5           . $P GET MANUAL SET COCM
)@@G@@UNTS  @F@@@@          JZ        A15,ENDSET        . $J JUMP IF NO MANUALCN
)@@G@@ SET  @C@@@@          JGD       A15,$+1           . $P A15-1@F@@@@      CO
)@@G@@    LA,S5     A14,,X5           . $P GET NUMBER OF RESERVE  @C@@@@      CP
)@@G@@    SX        X5,SAVEX5         . $P SAVE @G@@@@          TNZ       A14 CQ
)@@G@@              . $P MAKE SURE NON-ZERO RESERVE   @E@@@@          J       CR
)@@G@@  NORESV            . $  INTERNAL ERROR   @F@@@@          AX,U      X5,2CS
)@@G@@              . $P UPDATE C9 TBL ADDR     @]@@@@$(4).       @]@@@@SAVEX5CT
)@@G@@    +0@]@@@@$(1).       @B@@@@          LA        A0,SAVEX5         .   CU
)@@G@@@G@@@@          LA,S6     A0,,A0            . $P GET MANUAL CTL WORD DISCV
)@@G@@P     @E@@@@          AA        A0,X7             . $P GET ABS. OF ABOVECW
)@@G@@@G@@@@          SZ        0,A0              . $P SET MANUAL CTL WORD TO CX
)@@G@@ZERO  @[@@@@.     @A@@@@.         TRANSFER MANUAL SET       @[@@@@.     CY
)@@G@@@]@@@@MVEMANLP.   @E@@@@          LA,T2     A0,,X5            . $P GET ACZ
)@@G@@ SET CODE   @G@@@@          SLJ       GETSET            . $P LOOK FOR THDA
)@@G@@E SET PTR IN OLD  @E@@@@          TNZ       X1                . $T FOUNDDB
)@@G@@ IT IN OLD  @E@@@@          J         NXTMAN            . $A YES NO,NXTMDC
)@@G@@AN    @G@@@@          TNZ,S6    0,X1              . $T SEE IF AN EXISTINDD
)@@G@@G SET       @E@@@@          J         NXTMAN            . $A YES NO,NXTMDE
)@@G@@AN    @E@@@@          LX,S6     X2,,X1            . $P GET SET PTR DISP DF
)@@G@@@E@@@@          AX        X2,X9             . $P GET ABS. OF ABOVE@E@@@@DG
)@@G@@          LA        A10,,X2           . $P GET NXT PTR      @H@@@@      DH
)@@G@@    SZ        A11               . $P PRESET OWNER/PRIOR PTR'S TO ZERO   DI
)@@G@@@B@@@@          SZ        A12               .   @D@@@@          TNZ,S5  DJ
)@@G@@  0,X1              . $T O/P EXIST  @B@@@@          J         INSERT    DK
)@@G@@        .   @D@@@@          AX,U      X2,1              . $P UP ADDR    DL
)@@G@@@G@@@@          LA,U      A0,010            . $P SET UP TO CHECK FOR OWNDM
)@@G@@ER PTR@B@@@@          AND,S5    A0,0,X1           .   @E@@@@          JZDN
)@@G@@        A1,$+3            . $J SKIP OWNER       @E@@@@          LA      DO
)@@G@@  A11,0,X2          . $P GET OWNER PTR    @D@@@@          AX,U      X2,1DP
)@@G@@              . $P UP ADDR    @G@@@@          LA,U      A0,1            DQ
)@@G@@  . $P SET UP TO CHK FOR PRIOR PTR  @B@@@@          AND,S5    A0,0,X1   DR
)@@G@@        .   @E@@@@          JZ        A1,INSERT         . $J SKIP PRIOR DS
)@@G@@      @E@@@@          LA        A12,0,X2          . $P GET PRIOR PTR    DT
)@@G@@@[@@@@.     @C@@@@.         INSERT A MANUAL SET PTR TO NEW BUFF   @[@@@@DU
)@@G@@.     @C@@@@INSERT                                . $H      @H@@@@      DV
)@@G@@    LA        A0,X5             . $P COMPUT CURRENT MANUAL SET NUMBER   DW
)@@G@@@C@@@@          ANA       A0,SAVEX5         . $P -BASE@C@@@@          ANDX
)@@G@@A,U     A0,2              . $P -2   @G@@@@          SLJ       MANADDR   DY
)@@G@@        . $P DETERMINE THE SET PTR ADDR   @E@@@@          SA        A10,DZ
)@@G@@,X1           . $P SAVE NXT PTR     @E@@@@          AX,U      X1,1      EA
)@@G@@        . $P UPDATE ADDR      @E@@@@          ANA,U     A14,1           EB
)@@G@@  . $P -1 OF RESERVE    @H@@@@          JN        A14,NORESV        . $PEC
)@@G@@ MAKE SURE RESERVE NOT VIOLATED     @G@@@@          LA,U      A0,010    ED
)@@G@@        . $P SET UP TO CHECK OWNER PTR    @B@@@@          AND,S5    A0,,EE
)@@G@@X5            .   @E@@@@          JZ        A1,$+5            . $J SKIP EF
)@@G@@OWNER       @E@@@@          SA        A11,,X1           . $P SAVE OWNER EG
)@@G@@PTR   @B@@@@          AX,U      X1,1              .   @B@@@@          ANEH
)@@G@@A,U     A14,1             .   @B@@@@          JN        A14,NORESV      EI
)@@G@@  .   @B@@@@          LA,U      A0,1              .   @B@@@@          ANEJ
)@@G@@D,S5    A0,,X5            .   @C@@@@          JZ        A1,NXTMAN       EK
)@@G@@  . $J      @B@@@@          SA        A12,,X1           .   @B@@@@      EL
)@@G@@    ANA,U     A14,1             .   @B@@@@          JN        A14,NORESVEM
)@@G@@        .   @[@@@@.     @A@@@@.         TRANSFER NEXT MANUAL SET  @[@@@@EN
)@@G@@.     @]@@@@NXTMAN.     @G@@@@          AX,U      X5,1              . $PEO
)@@G@@ UPDATE SET ENTRY PTR (C9)    @B@@@@          JGD       A15,MVEMANLP    EP
)@@G@@  .   @B@@@@          J         ENDSET            .   @[@@@@.     @D@@@@EQ
)@@G@@.         NOT ENOUGH RESERVE WORDS FOR MANUAL SET     @[@@@@.     @]@@@@ER
)@@G@@NORESV.     @ @@@@          E$DIT     EDPKT     @A@@@@          E$FD2   ES
)@@G@@  ('RECORD:')     @ @@@@          E$DECV    0,X9,T1   @^@@@@          E$ET
)@@G@@CHAR    '(' @ @@@@          E$OCTV    0,X9,T1   @^@@@@          E$CHAR  EU
)@@G@@  ')' @^@@@@          E$SKIP    1   @A@@@@          E$COPY    54,RESVMSGEV
)@@G@@      @#@@@@          E$DITX  @A@@@@          P$RINT    (PF 1,14,PRINT) EW
)@@G@@@^@@@@          ER        ERR$@]@@@@$(4).       @G@@@@RESVMSG   'DOES NOEX
)@@G@@T HAVE ENOUGH RESERVE WORDS FOR MANUAL SET PTRS'      @B@@@@MBITS.      EY
)@@G@@         MAX. 20 MANUAL SETS  @#@@@@          +1*/35  @#@@@@          +1EZ
)@@G@@*/34  @#@@@@          +1*/33  @#@@@@          +1*/32  @#@@@@          +1FA
)@@G@@*/31  @#@@@@          +1*/30  @#@@@@          +1*/29  @#@@@@          +1FB
)@@G@@*/28  @#@@@@          +1*/27  @#@@@@          +1*/26  @#@@@@          +1FC
)@@G@@*/25  @#@@@@          +1*/24  @#@@@@          +1*/23  @#@@@@          +1FD
)@@G@@*/22  @#@@@@          +1*/21  @#@@@@          +1*/20  @#@@@@          +1FE
)@@G@@*/19  @#@@@@          +1*/18  @#@@@@          +1*/17  @#@@@@          +1FF
)@@G@@*/16  @#@@@@          +1*/15  @]@@@@$(1).       @[@@@@.     @G@@@@.     FG
)@@G@@    ROUTINE TO CALCULATE THE MANUAL SET PTR ADDR IN NEW BUFF      @[@@@@FH
)@@G@@.     @C@@@@MANADDR   +0                          . $H      @B@@@@      FI
)@@G@@    LX        X1,SAVEX5         .   @F@@@@          LX,S6     X1,,X1    FJ
)@@G@@        . $P GET MAN. CTL WRD DISP  @E@@@@          AX        X1,X7     FK
)@@G@@        . $P GET ABS. OF ABOVE@G@@@@          LA        A4,,X1          FL
)@@G@@  . $P GET THE MANUAL CTL WRD       @H@@@@          OR        A4,MBITS,AFM
)@@G@@0       . $P SET THE PROPER BIT FOR CURRT ONE   @D@@@@          SA      FN
)@@G@@  A5,,X1            . $P SAVE IT    @E@@@@          AX,U      X1,1      FO
)@@G@@        . $P UPDATE PTR ADDR  @G@@@@          JZ        A4,*MANADDR     FP
)@@G@@  . $J RETURN IF 1ST SET INSERTED   @C@@@@          JGD       A0,$+1    FQ
)@@G@@        . $P A0-1 @]@@@@MADDRLP.    @D@@@@          AND       A4,MBITS,AFR
)@@G@@0       . $P CHECK IF   @F@@@@          JZ        A5,NXTMSET        . $TFS
)@@G@@ SEE IF SET PRESENT     @G@@@@          LA        A1,A0             . $PFT
)@@G@@ COMPUTE SET ENTRY IN C9      @E@@@@          AA        A1,SAVEX5       FU
)@@G@@  . $P GET ABS. OF ABOVE@E@@@@          AX,S2     X1,2,A1           . $PFV
)@@G@@ UPDATE PTR ADDR  @]@@@@NXTMSET.    @E@@@@          JGD       A0,MADDRLPFW
)@@G@@        . $P TRY NXT ONE      @D@@@@          J         *MANADDR        FX
)@@G@@  . $J RETURN     @[@@@@.     @E@@@@.         THIS ROUTINE WILL SEARCH CFY
)@@G@@1 ENTRY(POINTED BY X6)  @C@@@@.              TO LOCATE A PARTICULAR SET FZ
)@@G@@PTR(S)@[@@@@.     @A@@@@.        (IN)   A0 = SET CODE       @A@@@@.     GA
)@@G@@          X6 = C1 ENTRY       @D@@@@.         (OUT) X1 = ADDR OF C1 ENTRGB
)@@G@@Y FOR THE SET     @A@@@@.                  = 0, IF NOF FOUND@[@@@@.     GC
)@@G@@@D@@@@.         ENTERED:  SLJ   GETSETO  .FOR SET OWNER     @E@@@@.     GD
)@@G@@    ENTERED:  SLJ   GETSET   .FOR NON SET OWNER       @[@@@@.     @C@@@@GE
)@@G@@GETSETO   +0                          . $H      @E@@@@          LX      GF
)@@G@@  X1,X6             . $P GET C1 ENTRY ADDR@F@@@@          LA,S4     A10,GG
)@@G@@,X1           . $P GET      O/A COUNT     @E@@@@          JZ        A10,GH
)@@G@@NOSETO        . $J JUMP IF COUNT = 0@C@@@@          AX,U      X1,1      GI
)@@G@@        . $P UP X1@ @@@@          JGD       A10,$+1   @E@@@@GETOLOOP  LAGJ
)@@G@@,S5     A1,,X1            . $P GET LINK TYPE    @E@@@@          SSL     GK
)@@G@@  A1,5              . $P GET OWNER BIT    @G@@@@          JZ        A1,$GL
)@@G@@+3            . $J TERM SEARCHING IF NOT OWNER  @F@@@@          TNE,T2  GM
)@@G@@  A0,,X1            . $T CHECK IF RIGHT SET     @E@@@@          J       GN
)@@G@@  *GETSETO          . $A YES,*GETSETO NO  @D@@@@          AX,U      X1,1GO
)@@G@@              . $P UP X1 PTR  @D@@@@          JGD       A10,GETOLOOP    GP
)@@G@@  . $P TRY NXT    @]@@@@NOSETO.     @D@@@@          SZ        X1        GQ
)@@G@@        . $P NOT FOUND  @D@@@@          J         *GETSETO          . $JGR
)@@G@@ RETURN     @[@@@@.     @ @@@@.         FOR  NON SET OWNER  @[@@@@.     GS
)@@G@@@C@@@@GETSET    +0                          . $H      @E@@@@          LXGT
)@@G@@        X1,X6             . $P GET C1 ENTRY ADDR@E@@@@          LA,S4   GU
)@@G@@  A10,,X1           . $P GET O/A COUNT    @G@@@@          JZ        A10,GV
)@@G@@GETSETM       . $J GOTO GET M-SET IF COUNT = 0  @D@@@@          JGD     GW
)@@G@@  A10,$+1           . $P COUNT - 1  @C@@@@GETLOOP   AX,U      X1,1      GX
)@@G@@        . $+ UP X1@E@@@@          LA,S5     A1,,X1            . $P GET LGY
)@@G@@INK TYPE    @E@@@@          SSL       A1,5              . $P GET OWNER BGZ
)@@G@@IT    @D@@@@          JNZ       A1,NXTSET         . $T OWNER SET  @E@@@@HA
)@@G@@                                      . $A YES,NXTSET NO    @D@@@@      HB
)@@G@@    TNE,T2    A0,,X1            . $T RIGHT SET  @E@@@@          J       HC
)@@G@@  *GETSET           . $A YES,*GETSET NO   @]@@@@NXTSET.     @D@@@@      HD
)@@G@@    JGD       A10,GETLOOP       . $T TRY NXT    @]@@@@GETSETM.    @F@@@@HE
)@@G@@          AX,U      X1,1              . $P POINT TO MCNT WORD     @D@@@@HF
)@@G@@          LA,S2     A10,,X1           . $P GET MCNT   @G@@@@          JZHG
)@@G@@        A10,NOSET         . $J TERM SEARCHING IF MAN CNT = 0@D@@@@      HH
)@@G@@    JGD       A10,$+1           . $P MCNT - 1   @D@@@@          AX,U    HI
)@@G@@  X1,1              . $P SKIP MASK  @]@@@@GETLOOP2.   @D@@@@          AXHJ
)@@G@@,U      X1,1              . $P NXT SET    @E@@@@          TNE,T2    A0,,HK
)@@G@@X1            . $T SET CODE MATCH   @E@@@@          J         *GETSET   HL
)@@G@@        . $A YES,*GETSET NO   @D@@@@          JGD       A10,GETLOOP2    HM
)@@G@@  . $J TRY NEXT   @]@@@@NOSET.      @E@@@@          SZ        X1        HN
)@@G@@        . $P SET NO FOUND     @D@@@@          J         *GETSET         HO
)@@G@@  . $J RETURN     @[@@@@.     @E@@@@.         CHECK C17 FOR A SPECIFIED HP
)@@G@@RECORD CODE(IN A0)      @[@@@@.     @C@@@@CHKC17    +0                  HQ
)@@G@@        . $H      @E@@@@          LX,H2     X8,C17            . $P GET CHR
)@@G@@17 ADDR     @E@@@@C17LOOP   TNE,T1    A0,,X8            . $T RECORD CODEHS
)@@G@@ MATCH@E@@@@          J         *CHKC17           . $A YES,*CHKC17 NO   HT
)@@G@@@D@@@@          TNZ,T3    0,X8              . $T GET LINK   @E@@@@      HU
)@@G@@    J         NOC17             . $J NOFOUND IF A1=0  @C@@@@          AXHV
)@@G@@,T3     X8,,X8            . $P UP X8@B@@@@          J         C17LOOP   HW
)@@G@@        .   @]@@@@NOC17.      @D@@@@          SZ        X8              HX
)@@G@@  . $P ZERO X8    @D@@@@          J         *CHKC17           . $J RETURHY
)@@G@@N     @[@@@@.     @D@@@@.         SEARCH C1 TBL, AND RETURN ENTRY ADDR IHZ
)@@G@@N X1  @[@@@@.     @]@@@@CHKC1     +0@E@@@@          LX,H2     X1,C1     IA
)@@G@@        . $P GET C1 ADDR      @]@@@@C1LOOP.     @E@@@@          TE,T1   IB
)@@G@@  A0,0,X1           . $T RECORD CODE MATCH@E@@@@          J         NXTCIC
)@@G@@1             . $A YES NO,NXTC1     @ @@@@          J         *CHKC1    ID
)@@G@@@]@@@@NXTC1.      @D@@@@          TNZ,T3    0,X1              . $T LINK IE
)@@G@@=0    @E@@@@          ER        ERR$              . $A YES,ERR$ NO      IF
)@@G@@@E@@@@          AX,T3     X1,0,X1           . $P GET NXT ADDR     @D@@@@IG
)@@G@@          J         C1LOOP            . $J TRY NXT    @[@@@@.     @D@@@@IH
)@@G@@.         SEARCH C9 TBL, AND RETURN ENTRY ADDR IN X1  @[@@@@.     @]@@@@II
)@@G@@CHKC9     +0@E@@@@          LX,H2     X1,C9             . $P GET C9 ADDRIJ
)@@G@@      @]@@@@C9LOOP.     @E@@@@          TE,T1     A0,0,X1           . $TIK
)@@G@@ RECORD CODE MATCH@E@@@@          J         NXTC9             . $A YES NIL
)@@G@@O,NXTC9     @ @@@@          J         *CHKC9    @]@@@@NXTC9.      @D@@@@IM
)@@G@@          TNZ,T3    0,X1              . $T LINK =0    @E@@@@          ERIN
)@@G@@        ERR$              . $A YES,ERR$ NO      @E@@@@          AX,T3   IO
)@@G@@  X1,0,X1           . $P GET NXT ADDR     @D@@@@          J         C9LOIP
)@@G@@OP            . $J TRY NXT    @[@@@@.     @D@@@@.         TRANSFORM DATAIQ
)@@G@@ ACCORDING TO THE RULES(C17)  @[@@@@.     @C@@@@ENDSET                  IR
)@@G@@              . $H      @]@@@@MVEDATA.    @[@@@@.     @A@@@@.         X9IS
)@@G@@ = ADDR OF OLD RECORD   @C@@@@.         X7 = ADDR OF NEW RECORD(NEW-BUFFIT
)@@G@@)     @E@@@@.         X8 = ADDR OF TRANSFORMATION RULES FOR THE RECORD  IU
)@@G@@@[@@@@.     @E@@@@          LA,T2     A15,,X8           . $P GET RULE COIV
)@@G@@UNT   @E@@@@          JZ        A15,ENDART9       . $J END IF NON EXISTSIW
)@@G@@@E@@@@          SX        X8,SAVEX8         . $P SAVE RULES ADDR  @F@@@@IX
)@@G@@          LR,T2     R4,1,X8           . $P GET NEW RECORD LENGTH  @G@@@@IY
)@@G@@          AX,U      X8,2              . $P UPDATE RULE ENTRY ADDR       IZ
)@@G@@@E@@@@          JGD       A15,$+1           . $P RULE-CNT - 1     @[@@@@JA
)@@G@@.     @^@@@@.         PROCESS RULES @[@@@@.     @]@@@@ARTLOOP.    @G@@@@JB
)@@G@@          LA,U      A0,5              . $P SET UP TO CHECK FOR TYPE 5   JC
)@@G@@@F@@@@          TNE,S4    A0,,X8            . $T IS IT TYPE 5(OCCURS)   JD
)@@G@@@E@@@@          J         OCCURS            . $A YES,REPEAT NO    @F@@@@JE
)@@G@@          TNZ,T1    0,X8              . $T CHECK IF A NEW ITEM    @E@@@@JF
)@@G@@          J         NEWITEM           . $A YES,NEWITEM1 NO  @E@@@@      JG
)@@G@@    LA,S4     A0,,X8            . $P GET 1ST TYPE     @E@@@@          LAJH
)@@G@@,S4     A1,1,X8           . $P GET 2ND TYPE     @E@@@@          LSSL    JI
)@@G@@  A1,18             . $P FORM TYPE WORD   @B@@@@          LDSL      A0,1JJ
)@@G@@8             .   @E@@@@          LR        R1,TYPECNT        . $P GET RJK
)@@G@@EPEAT COUNT @B@@@@          LX        X4,(2,TYPES)      .   @G@@@@      JL
)@@G@@    SE        A0,,*X4           . $P CHECK FOR TYPES COMBINATION  @E@@@@JM
)@@G@@          ER        ERR$              . $S INTERNAL ERROR   @G@@@@      JN
)@@G@@    ANX       X4,(2,1)          . $P BACK UP TO ROUTINE ADDR      @E@@@@JO
)@@G@@          SLJ       SETREGS           . $P SET UP REGISTERS @E@@@@      JP
)@@G@@    LA,H2     A0,,X4            . $P GET ROUTINE ADDR @E@@@@          SLJQ
)@@G@@J       0,A0              . $P PERFORM TRANSFORM@D@@@@          J       JR
)@@G@@  NXTART            . $J TRY NEXT   @]@@@@$(4).       @]@@@@TYPES.      JS
)@@G@@@#@@@@          +1,1    @^@@@@          +TYPE11       @#@@@@          +2JT
)@@G@@,2    @^@@@@          +TYPE22       @#@@@@          +3,3    @^@@@@      JU
)@@G@@    +TYPE33       @#@@@@          +4,4    @^@@@@          +TYPE44       JV
)@@G@@@#@@@@          +1,4    @^@@@@          +TYPE14       @#@@@@          +4JW
)@@G@@,1    @^@@@@          +TYPE41       @#@@@@          +1,2    @^@@@@      JX
)@@G@@    +TYPE12       @#@@@@          +1,3    @^@@@@          +TYPE13       JY
)@@G@@@#@@@@          +4,2    @^@@@@          +TYPE42       @#@@@@          +4JZ
)@@G@@,3    @^@@@@          +TYPE43       @#@@@@          +2,1    @^@@@@      KA
)@@G@@    +TYPE21       @#@@@@          +3,1    @^@@@@          +TYPE31       KB
)@@G@@@#@@@@          +2,4    @^@@@@          +TYPE24       @#@@@@          +3KC
)@@G@@,4    @^@@@@          +TYPE34       @#@@@@          +2,3    @^@@@@      KD
)@@G@@    +TYPE23       @#@@@@          +3,2    @^@@@@          +TYPE32       KE
)@@G@@@ @@@@TYPECNT   +(TYPECNT-TYPES)/2  @]@@@@SAVEX8    +0@]@@@@$(1).       KF
)@@G@@@[@@@@.     @E@@@@.         NEW ELEMENTARY ITEMS(SET UP TO INITIALIZE THKG
)@@G@@EM)   @[@@@@.     @C@@@@NEWITEM1  +0                          . $H      KH
)@@G@@@G@@@@          LX,T3     X5,1,X8           . $P SET UP ADDR TO INITILIZKI
)@@G@@E     @F@@@@          AX        X5,X7             . $P ABS. ADDR OF ABOVKJ
)@@G@@E     @E@@@@          LR,T1     R5,1,X8           . $P GET ITEM LENGTH  KK
)@@G@@@G@@@@          LA,S3     A0,1,X8           . $P GET START CHARACTER POSKL
)@@G@@      @E@@@@          LA,S4     A1,1,X8           . $P GET ITEM TYPE    KM
)@@G@@@F@@@@          SLJ       NEWINIT           . $S INITIALIZE THE ITEM    KN
)@@G@@@D@@@@          J         *NEWITEM1         . $J TRY NXT    @[@@@@.     KO
)@@G@@@C@@@@.         PROCESS NXT TRANSFORMATION RULE       @[@@@@.     @C@@@@KP
)@@G@@NXTART                                . $H      @E@@@@          AX,U    KQ
)@@G@@  X8,2              . $P UPDATE ENTRY ADDR@D@@@@          JGD       A15,KR
)@@G@@ARTLOOP       . $P TRY NEXT   @E@@@@          J         ENDART8         KS
)@@G@@  . $J END PROCESS      @[@@@@.     @C@@@@NEWITEM                       KT
)@@G@@        . $H      @B@@@@          SLJ       NEWITEM1          .   @B@@@@KU
)@@G@@          J         NXTART            .   @[@@@@.     @D@@@@.         THKV
)@@G@@E SUBROUTINE WILL INITIALIZE A NEW ITEM   @[@@@@.     @C@@@@.         (IKW
)@@G@@N)  X5 = ITEM ADDRESS IN NEW BUFF   @A@@@@.               A1 = ITEM TYPEKX
)@@G@@      @C@@@@.               A0 = STARTING CHARACTER POSITION@E@@@@.     KY
)@@G@@          R5 = LENGTH OF AN ITEM (IN CHARACTERS)      @[@@@@.     @C@@@@KZ
)@@G@@NEWINIT   +0                          . $H      @E@@@@          LXI,U   LA
)@@G@@  X5,1              . $P SET INX INCREMENT@F@@@@          LA,S1     A5,TLB
)@@G@@YP0,A1        . $P GET TYPE CHARACTER     @ @@@@          JGD       R5,$LC
)@@G@@+1    @]@@@@INITLOOP.   @C@@@@          ANU,U     A0,1              . $PLD
)@@G@@ LOOP @C@@@@          DSL       A1,36             . $     TO@E@@@@      LE
)@@G@@    DI,U      A1,6              . $       INITIALIZE  @D@@@@          EXLF
)@@G@@        PUT,A2            . $        THE  @E@@@@          AA,U      A0,1LG
)@@G@@              . $         NEW       @E@@@@          JGD       R5,INITLOOLH
)@@G@@P       . $          ITEM     @D@@@@          J         *NEWINIT        LI
)@@G@@  . $J RETURN     @]@@@@$(4).       @]@@@@TYP0.       @^@@@@          +0LJ
)@@G@@77,,,,,0    @^@@@@          +05,,,,,0     @^@@@@          +060,,,,,0    LK
)@@G@@@^@@@@          +0,,,,,0      @^@@@@          +05,,,,,0     @[@@@@PUT.  LL
)@@G@@@ @@@@          SA,S1     A5,,X5    @ @@@@          SA,S2     A5,,X5    LM
)@@G@@@ @@@@          SA,S3     A5,,X5    @ @@@@          SA,S4     A5,,X5    LN
)@@G@@@ @@@@          SA,S5     A5,,X5    @ @@@@          SA,S6     A5,,*X5   LO
)@@G@@@]@@@@$(1).       @[@@@@.     @D@@@@.         ROUTINE TO SET UP TRANSFORLP
)@@G@@MATION REGISTERS  @[@@@@.     @B@@@@.        (IN)  X8 = ADDR OF RULE ENTLQ
)@@G@@RY    @E@@@@.        (OUT) X1 = OLD ADDR, A7 = CHAR POS, R7 = LENGTH    LR
)@@G@@@H@@@@.              X2 = NEW ADDR, A8 = CHAR POS, R8 = LENGTH, A1 = NEWLS
)@@G@@ TYPE CODE  @[@@@@.     @C@@@@SETREGS   +0                          . $HLT
)@@G@@      @E@@@@          LA,S4     A1,1,X8           . $P GET NEW TYPE     LU
)@@G@@@E@@@@          LX,T3     X1,,X8            . $P GET OLD ADDR(REL)@E@@@@LV
)@@G@@          AX        X1,X9             . $P GET ABS. OF ABOVE@F@@@@      LW
)@@G@@    LA,S3     A7,,X8            . $P BEG. CHAR POS.(OLD)    @E@@@@      LX
)@@G@@    LX,T3     X2,1,X8           . $P GET NEW ADDR(REL)@E@@@@          AXLY
)@@G@@        X2,X7             . $P GET ABS. OF ABOVE@F@@@@          LA,S3   LZ
)@@G@@  A8,1,X8           . $P BEG. CHAR POS.(NEW)    @E@@@@          LR,T1   MA
)@@G@@  R8,1,X8           . $P GET LENGTH       @ @@@@          LR,T1     R7,0MB
)@@G@@,X8   @D@@@@          J         *SETREGS          . $J RETURN     @[@@@@MC
)@@G@@.     @D@@@@.         TRANSFORM ROUTINES (CHAR MOVE FROM TOP)     @[@@@@MD
)@@G@@.     @]@@@@TYPE11.     @]@@@@TYPE44.     @]@@@@TYPE14.     @]@@@@TYPE41ME
)@@G@@.     @]@@@@TYPE21.     @]@@@@TYPE31.     @]@@@@TYPE24.     @]@@@@TYPE34MF
)@@G@@.     @[@@@@.     @A@@@@.         TRANSFORM ITEM FROM TOP   @[@@@@.     MG
)@@G@@@E@@@@.         (IN)  X1 = OLD ADDR, A7 = CHAR POS R7 = LENGTH    @H@@@@MH
)@@G@@.               X2 = NEW ADDR, A8 = CHAR POS R8 = LENGTH A1 = NEW TYPE CMI
)@@G@@ODE   @[@@@@.     @C@@@@TOPMOVE   +0                          . $H      MJ
)@@G@@@F@@@@          LR        R5,R8             . $P GET INITIALIZE LENGTH  MK
)@@G@@@E@@@@          LA        A0,R7             . $P GET OLD LENGTH   @G@@@@ML
)@@G@@          TG        A0,R8             . $T SEE IF (NEW-LENGTH)>(OLD)    MM
)@@G@@@E@@@@          J         TMOVE1            . $A YES NO,TMOVE1    @[@@@@MN
)@@G@@.     @G@@@@.         NEW ITEM HAS LONGER FIELD, INTIALIZE IT BEFORE TRAMO
)@@G@@NSFER       @[@@@@.     @D@@@@          LX        X5,X2             . $PMP
)@@G@@ SET UP X5  @D@@@@          LA        A0,A8             .           A0  MQ
)@@G@@@D@@@@          LR        R5,R8             .           R5  @H@@@@      MR
)@@G@@    SLJ       NEWINIT           .        FOR INITILIZATION  ROUTINE     MS
)@@G@@@B@@@@          LR        R5,R7             .   @B@@@@.         TRANSFERMT
)@@G@@ (R5) CHAR'S FROM TOP   @[@@@@.     @]@@@@TMOVE1.     @E@@@@          LXMU
)@@G@@I,U     X1,1              . $P SET INCRMNT CNT  @C@@@@          LXI,U   MV
)@@G@@  X2,1              . $       @E@@@@          JGD       R5,$+1          MW
)@@G@@  . $P CHAR-CNT - 1     @]@@@@TMLOOP1.    @F@@@@          LA        A0,AMX
)@@G@@7             . $P SET UP TO GET 1 CHAR   @C@@@@          ANA,U     A0,1MY
)@@G@@              . $       @C@@@@          DSL       A0,36             . $ MZ
)@@G@@      @C@@@@          DI,U      A0,6              . $       @E@@@@      NA
)@@G@@    EX        GETOP,A1          . $P GET 1 CHAR       @G@@@@          AANB
)@@G@@,U      A7,1              . $P SET UP TO STORE 1 CHAR       @C@@@@      NC
)@@G@@    LA        A0,A8             . $       @C@@@@          ANA,U     A0,1ND
)@@G@@              . $       @C@@@@          DSL       A0,36             . $ NE
)@@G@@      @C@@@@          DI,U      A0,6              . $       @E@@@@      NF
)@@G@@    EX        PUTOP,A1          . $P STORE 1 CHAR     @C@@@@          AANG
)@@G@@,U      A8,1              . $       @E@@@@          JGD       R5,TMLOOP1NH
)@@G@@        . $J TRY NXT CHAR     @D@@@@          J         *TOPMOVE        NI
)@@G@@  . $J RETURN     @]@@@@$(4).       @]@@@@GETOP.      @ @@@@          LANJ
)@@G@@,S1     A5,,X1    @ @@@@          LA,S2     A5,,X1    @ @@@@          LANK
)@@G@@,S3     A5,,X1    @ @@@@          LA,S4     A5,,X1    @ @@@@          LANL
)@@G@@,S5     A5,,X1    @ @@@@          LA,S6     A5,,*X1   @]@@@@PUTOP.      NM
)@@G@@@ @@@@          SA,S1     A5,,X2    @ @@@@          SA,S2     A5,,X2    NN
)@@G@@@ @@@@          SA,S3     A5,,X2    @ @@@@          SA,S4     A5,,X2    NO
)@@G@@@ @@@@          SA,S5     A5,,X2    @ @@@@          SA,S6     A5,,*X2   NP
)@@G@@@]@@@@$(1).       @[@@@@.     @D@@@@.         TRANSFORM ROUTINE ( CHAR MNQ
)@@G@@OVE FROM BOTTOM)  @[@@@@.     @]@@@@TYPE22.     @]@@@@TYPE33.     @]@@@@NR
)@@G@@TYPE12.     @]@@@@TYPE13.     @]@@@@TYPE42.     @]@@@@TYPE43.     @[@@@@NS
)@@G@@.     @A@@@@.         TRANSFORM ITEM FROM BOTTOM@[@@@@.     @E@@@@.     NT
)@@G@@    (IN) X1 =  OLD ADDR, A7 = CHAR POS, R7 = LENGTH   @G@@@@.           NU
)@@G@@   X2 =  NEW ADDR, A8 = CHAR POS, R8 = LENGTH,  A1 =NEW TYPE@[@@@@.     NV
)@@G@@@C@@@@BOTMOVE   +0                          . $H      @F@@@@          LRNW
)@@G@@        R5,R8             . $P GET INITIALIZE LENGTH  @E@@@@          LANX
)@@G@@        A0,R7             . $P GET OLD LENGTH   @G@@@@          TG      NY
)@@G@@  A0,R8             . $T SEE IF  NEW-LENGTH > OLD     @E@@@@          J NZ
)@@G@@        BMOVE1            . $A YES NO,BMOVE1    @[@@@@.     @A@@@@.     OA
)@@G@@    NEW ITEM HAS LONGER FIELD @[@@@@.     @D@@@@          LX        X5,XOB
)@@G@@2             . $P SET UP X5  @D@@@@          LA        A0,A8           OC
)@@G@@  .           A0  @D@@@@          LR        R5,R8             .         OD
)@@G@@  R5  @G@@@@          SLJ       NEWINIT           .        FOR INITILIZAOE
)@@G@@TION ROUTINE@B@@@@          LR        R5,R7             .   @C@@@@.     OF
)@@G@@    TRANSFER (R5) CHAR'S FROM BOTTOM      @[@@@@.     @]@@@@BMOVE1.     OG
)@@G@@@B@@@@          AA        A7,R7             .   @B@@@@          AA      OH
)@@G@@  A8,R8             .   @^@@@@          ANA,U     A7,1@B@@@@          ANOI
)@@G@@A,U     A8,1              .   @B@@@@          LA        A0,A7           OJ
)@@G@@  .   @F@@@@          ANA,U     A0,1              . $P COMPUTE NEW WORD OK
)@@G@@ADDR  @B@@@@          DSL       A0,36             .   @B@@@@          DIOL
)@@G@@,U      A0,6              .   @B@@@@          AX        X1,A0           OM
)@@G@@  .   @B@@@@          LA        A0,A8             .   @F@@@@          ANON
)@@G@@A,U     A0,1              . $P COMPUTE NEW WORD ADDR  @B@@@@          DSOO
)@@G@@L       A0,36             .   @B@@@@          DI,U      A0,6            OP
)@@G@@  .   @B@@@@          AX        X2,A0             .   @B@@@@          LXOQ
)@@G@@I,U     X1,-1             .   @B@@@@          LXI,U     X2,-1           OR
)@@G@@  .   @B@@@@          JGD       R5,$+1            .   @]@@@@BMLOOP1.    OS
)@@G@@@B@@@@          LA        A0,A7             .   @B@@@@          ANA,U   OT
)@@G@@  A0,1              .   @B@@@@          DSL       A0,36             .   OU
)@@G@@@B@@@@          DI,U      A0,6              .   @B@@@@          EX      OV
)@@G@@  GETBOT,A1         .   @B@@@@          ANA,U     A7,1              .   OW
)@@G@@@B@@@@          LA        A0,A8             .   @B@@@@          ANA,U   OX
)@@G@@  A0,1              .   @B@@@@          DSL       A0,36             .   OY
)@@G@@@B@@@@          DI,U      A0,6              .   @B@@@@          EX      OZ
)@@G@@  PUTBOT,A1         .   @B@@@@          ANA,U     A8,1              .   PA
)@@G@@@B@@@@          JGD       R5,BMLOOP1        .   @B@@@@          J       PB
)@@G@@  *BOTMOVE          .   @]@@@@$(4).       @]@@@@GETBOT.     @ @@@@      PC
)@@G@@    LA,S1     A5,,*X1   @ @@@@          LA,S2     A5,,X1    @ @@@@      PD
)@@G@@    LA,S3     A5,,X1    @ @@@@          LA,S4     A5,,X1    @ @@@@      PE
)@@G@@    LA,S5     A5,,X1    @ @@@@          LA,S6     A5,,X1    @]@@@@PUTBOTPF
)@@G@@.     @ @@@@          SA,S1     A5,,*X2   @ @@@@          SA,S2     A5,,PG
)@@G@@X2    @ @@@@          SA,S3     A5,,X2    @ @@@@          SA,S4     A5,,PH
)@@G@@X2    @ @@@@          SA,S5     A5,,X2    @ @@@@          SA,S6     A5,,PI
)@@G@@X2    @]@@@@$(1).       @[@@@@.     @D@@@@.         ROUTINE TO TRANSFORMPJ
)@@G@@ PIC 9  TO  PIC 9 COMP  @[@@@@.     @C@@@@TYPE23    +0                  PK
)@@G@@        . $H      @D@@@@          LXI,U     X1,1              . $P SET IPL
)@@G@@NC    @B@@@@          SZ        A10               .   @E@@@@          SZPM
)@@G@@        A11               . RESET ACCUMULATORS  @B@@@@          SZ      PN
)@@G@@  A13               .   @B@@@@          SZ        A12               .   PO
)@@G@@@B@@@@          SZ        A9                .   @E@@@@          JGD     PP
)@@G@@  R7,$+1            . $P LENGTH - 1       @]@@@@T23LOOP1.   @F@@@@      PQ
)@@G@@    LA        A0,A7             . $P SET UP TO GET 1 CHAR   @C@@@@      PR
)@@G@@    ANA,U     A0,1              . $P      @F@@@@          AA,U      A7,1PS
)@@G@@              . $P UPDATE TO NXT CHAR     @B@@@@          DSL       A0,3PT
)@@G@@6             .   @B@@@@          DI,U      A0,6              .   @B@@@@PU
)@@G@@          EX        GET23,A1          .   @F@@@@          AND,U     A12,PV
)@@G@@017           . $P STRIP OFF HIGH BITS    @B@@@@          SZ        A12 PW
)@@G@@              .   @C@@@@          MI,U      A10,10            . $       PX
)@@G@@@B@@@@          DA        A10,A12           .   @B@@@@          MSI,U   PY
)@@G@@  A9,10             .   @B@@@@          AA        A9,A10            .   PZ
)@@G@@@B@@@@         LDSL       A10,36            .   @D@@@@          JGD     QA
)@@G@@  R7,T23LOOP1       . $J TRY NXT    @[@@@@.     @C@@@@.         PUT  A9-QB
)@@G@@A10 TO PIC 9 COMP FIELD       @[@@@@.     @E@@@@          JGD       R8,$QC
)@@G@@+1            . $P LENGTH - 1       @G@@@@          AA        A8,R8     QD
)@@G@@        . $P SET TO MOVE FROM BOTTOM      @E@@@@          LA        A0,AQE
)@@G@@8             . $P COMPUTE NEW X2   @B@@@@          ANA,U     A0,1      QF
)@@G@@        .   @B@@@@          DSL       A0,36             .   @B@@@@      QG
)@@G@@    DI,U      A0,6              .   @B@@@@          AX        X2,A0     QH
)@@G@@        .   @B@@@@          LXI,U     X2,-1             .   @]@@@@T23LOOQI
)@@G@@P2.   @F@@@@          LA        A0,A8             . $P SET UP TO PUT 1 CQJ
)@@G@@HAR   @B@@@@          ANA,U     A0,1              .   @F@@@@          ANQK
)@@G@@A,U     A8,1              . $P UPDATE FOR NXT CHAR    @B@@@@          DSQL
)@@G@@L       A0,36             .   @B@@@@          DI,U      A0,6            QM
)@@G@@  .   @B@@@@          EX        PUT23,A1          .   @E@@@@          DSQN
)@@G@@L       A9,6              . $P SHIFT ONE CHAR   @B@@@@          JGD     QO
)@@G@@  R8,T23LOOP2       .   @D@@@@          J         *TYPE23           . $JQP
)@@G@@ RETURN     @]@@@@$(4).       @]@@@@GET23.      @ @@@@          LA,S1   QQ
)@@G@@  A12,,X1   @ @@@@          LA,S2     A12,,X1   @ @@@@          LA,S3   QR
)@@G@@  A12,,X1   @ @@@@          LA,S4     A12,,X1   @ @@@@          LA,S5   QS
)@@G@@  A12,,X1   @ @@@@          LA,S6     A12,,*X1  @]@@@@PUT23.      @ @@@@QT
)@@G@@          SA,S1     A10,,*X2  @ @@@@          SA,S2     A10,,X2   @ @@@@QU
)@@G@@          SA,S3     A10,,X2   @ @@@@          SA,S4     A10,,X2   @ @@@@QV
)@@G@@          SA,S5     A10,,X2   @ @@@@          SA,S6     A10,,X2   @]@@@@QW
)@@G@@$(1).       @[@@@@.     @D@@@@.         ROUTINE TO TRANSFORM  PIC 9 COMPQX
)@@G@@ TO PIC 9   @[@@@@.     @C@@@@TYPE32    +0                          . $HQY
)@@G@@      @B@@@@          LXI,U     X1,1              .   @B@@@@          SZQZ
)@@G@@        A9                .   @B@@@@          SZ        A10             RA
)@@G@@  .   @B@@@@          SZ        A11               .   @B@@@@          JGRB
)@@G@@D       R7,$+1            .   @]@@@@T32LOOP1.   @B@@@@          LA      RC
)@@G@@  A0,A7             .   @B@@@@          ANA,U     A0,1              .   RD
)@@G@@@B@@@@          AA,U      A7,1              .   @B@@@@          DSL     RE
)@@G@@  A0,36             .   @B@@@@          DI,U      A0,6              .   RF
)@@G@@@B@@@@          LDSL      A9,6              .   @B@@@@          EX      RG
)@@G@@  GET32,A1          .   @B@@@@          LA        A10,A11           .   RH
)@@G@@@B@@@@          JGD       R7,T32LOOP1       .   @E@@@@          DI      RI
)@@G@@  A9,(+10000000000) . $P SPLIT THE NUMBER @B@@@@          SZ        R7  RJ
)@@G@@              .   @H@@@@          AA        A8,R8             . $P SET URK
)@@G@@P TO TRANSFER FROM BOTTOM     @B@@@@          ANA,U     A8,1            RL
)@@G@@  .   @G@@@@          LA        A0,A8             . $P COMPUTE LAST WORDRM
)@@G@@ ADDR       @B@@@@          ANA,U     A0,1              .   @B@@@@      RN
)@@G@@    DSL       A0,36             .   @B@@@@          DI,U      A0,6      RO
)@@G@@        .   @ @@@@          AX        X2,A0     @B@@@@          LA      RP
)@@G@@  A0,R8             .   @B@@@@          ANA,U     A0,10             .   RQ
)@@G@@@B@@@@          JZ        A0,NOSPLT         .   @B@@@@          JN      RR
)@@G@@  A0,NOSPLT         .   @B@@@@          LR,U      R8,10             .   RS
)@@G@@@B@@@@          LR        R7,A0             .   @]@@@@NOSPLT.     @B@@@@RT
)@@G@@          LXI,U     X2,-1             .   @]@@@@T32LOOP2.   @B@@@@      RU
)@@G@@    JGD       R8,$+2            .   @B@@@@          J         T32END    RV
)@@G@@        .   @B@@@@          LA        A0,A8             .   @B@@@@      RW
)@@G@@    ANA,U     A0,1              .   @B@@@@          ANA,U     A8,1      RX
)@@G@@        .   @B@@@@          DSL       A0,36             .   @B@@@@      RY
)@@G@@    DI,U      A0,6              .   @B@@@@          DSL       A10,36    RZ
)@@G@@        .   @B@@@@          DI,U      A10,10            .   @B@@@@      SA
)@@G@@    OR,U      A11,060           .   @B@@@@          EX        PUT32,A1  SB
)@@G@@        .   @B@@@@          J         T32LOOP2          .   @]@@@@T32ENDSC
)@@G@@.     @B@@@@          TNZ       R7                .   @B@@@@          J SD
)@@G@@        *TYPE32           .   @B@@@@          LR        R8,R7           SE
)@@G@@  .   @B@@@@          SZ        R7                .   @B@@@@          LASF
)@@G@@        A10,A9            .   @B@@@@          J         T32LOOP2        SG
)@@G@@  .   @]@@@@$(4).       @]@@@@GET32.      @B@@@@          OR,S1     A10,SH
)@@G@@,X1           .   @B@@@@          OR,S2     A10,,X1           .   @B@@@@SI
)@@G@@          OR,S3     A10,,X1           .   @B@@@@          OR,S4     A10,SJ
)@@G@@,X1           .   @B@@@@          OR,S5     A10,,X1           .   @B@@@@SK
)@@G@@          OR,S6     A10,,*X1          .   @]@@@@PUT32.      @B@@@@      SL
)@@G@@    SA,S1     A12,,*X2          .   @B@@@@          SA,S2     A12,,X2   SM
)@@G@@        .   @B@@@@          SA,S3     A12,,X2           .   @B@@@@      SN
)@@G@@    SA,S4     A12,,X2           .   @B@@@@          SA,S5     A12,,X2   SO
)@@G@@        .   @B@@@@          SA,S6     A12,,X2           .   @]@@@@$(1). SP
)@@G@@      @[@@@@.     @A@@@@.         OCCURS TYPE TRANSFORMATION@[@@@@.     SQ
)@@G@@@C@@@@OCCURS                                . $H      @G@@@@          LXSR
)@@G@@        X1,X8             . $P SET UP TO COPY OCCURS RULES  @E@@@@      SS
)@@G@@    LXI,U     X1,1              . $  TO WORK AREA     @B@@@@          LXST
)@@G@@        X2,(1,OCCRULES)   .   @F@@@@          LA,S3     A0,,X8          SU
)@@G@@  . $P COMPUTE # OF WORDS     @B@@@@          MSI,U     A0,2            SV
)@@G@@  .   @C@@@@          AA,U      A0,2              . $P +2   @F@@@@      SW
)@@G@@    LR        R1,A0             . $P SET TRANSFER COUNT     @B@@@@      SX
)@@G@@    BT        X2,,*X1           .   @]@@@@$(4).       @^@@@@OCCRULES  RESY
)@@G@@S       100 @]@@@@$(1).       @G@@@@          ANA,S3    A15,,X8         SZ
)@@G@@  . $P UPDATE MASTER RULE COUNT     @B@@@@          LA,S3     A0,,X8    TA
)@@G@@        .   @B@@@@          MSI,U     A0,2              .   @D@@@@      TB
)@@G@@    AX        X8,A0             . $P UPDATE X8  @E@@@@          SA      TC
)@@G@@  A15,OCCA15        . $P SAVE A15, X8     @B@@@@          SX        X8,OTD
)@@G@@CCX8          .   @]@@@@$(4).       @]@@@@OCCA15    +0@]@@@@OCCX8     +0TE
)@@G@@@]@@@@$(1).       @[@@@@.     @D@@@@.     SET UP TO PERFORM TRANSFORMATITF
)@@G@@ON FROM OCCRULES  @[@@@@.     @E@@@@          LA,T2     A14,OCCRULES+1  TG
)@@G@@  . $P SET OCCURS COUNT @[@@@@.     @^@@@@.     OCCURS LOOP       @[@@@@TH
)@@G@@.     @]@@@@OCCLOOP.    @B@@@@          JGD       A14,$+2           .   TI
)@@G@@@B@@@@          J         ENDOCC            .   @G@@@@          LX      TJ
)@@G@@  X8,SAVEX8         . $P GET RULE TBL ENTRY ADDR      @E@@@@          LATK
)@@G@@,T1     A0,OCCRULES       . $P GET F-OCC-LENGTH @F@@@@          JZ      TL
)@@G@@  A0,OCCINIT        . $J IF INITIALIZE ONLY     @F@@@@                  TM
)@@G@@                    . $P COMPUTE # OF WORDS     @B@@@@          AA,T3   TN
)@@G@@  A0,OCCRULES       .   @B@@@@          ANA,U     A0,1              .   TO
)@@G@@@B@@@@          DSL       A0,36             .   @F@@@@          DI,U    TP
)@@G@@  A0,6              . $P COMPUTE WORD LENGTH    @B@@@@          TZ      TQ
)@@G@@  A1                .   @E@@@@          AA,U      A0,1              . $PTR
)@@G@@ FINAL LENGTH     @F@@@@          LA,H2     A1,0,X9           . $P GET OTS
)@@G@@LD RECORD LENGTH  @H@@@@          TLE       A1,A0             . $T CHECKTT
)@@G@@ IF STILL WITHIN THE RECORD   @E@@@@          J         ENDOCC1         TU
)@@G@@  . $A YES  NO,OCCEND   @]@@@@OCCINIT.    @C@@@@          LA,T1     A0,OTV
)@@G@@CCRULES+1     . $P DO   @D@@@@          AA,T3     A0,OCCRULES+1     .   TW
)@@G@@    THE     @E@@@@          ANA,U     A0,1              .           SAMETX
)@@G@@      @E@@@@          DSL       A0,36             .                FOR  TY
)@@G@@@B@@@@          DI,U      A0,6              .   @G@@@@          TZ      TZ
)@@G@@  A1                .                   NEW RECORD    @B@@@@          AAUA
)@@G@@,U      A0,1              .   @G@@@@          LA        A1,R4           UB
)@@G@@  . $P GET RECORD(NEW) LENGTH       @B@@@@          TLE       A1,A0     UC
)@@G@@        .   @B@@@@          J         ENDOCC1           .   @F@@@@      UD
)@@G@@    LX,U      X8,OCCRULES       . $P SET X8 TO FIRST RULE   @E@@@@      UE
)@@G@@    LA,S3     A15,OCCRULES      . $P SET RULE COUNT   @[@@@@.     @C@@@@UF
)@@G@@.     PERFORM TRANSFORMATION WITHIN AN OCCURS   @[@@@@.     @]@@@@ORULELUG
)@@G@@OP.   @G@@@@          JGD       A15,$+2           . $T SEE ZF COMPLETE AUH
)@@G@@LL RULES    @E@@@@          J         ENDRULES          . $A YES,ENDRULEUI
)@@G@@S NO  @E@@@@          AX,U      X8,2              . $P UPDATE RULE ADDR UJ
)@@G@@@E@@@@          TNZ,T1    0,X8              . $T IS IT A NEW ITEM @E@@@@UK
)@@G@@          J         OCCNEW            . $A YES,OCCNEW NO    @E@@@@      UL
)@@G@@    LA,S4     A0,,X8            . $P GET 1ST TYPE     @E@@@@          LAUM
)@@G@@,S4     A1,1,X8           . $P GET 2ND TYPE     @E@@@@          LSSL    UN
)@@G@@  A1,18             . $P FORM TYPE WORD   @B@@@@          LDSL      A0,1UO
)@@G@@8             .   @E@@@@          LR        R1,TYPECNT        . $P GET RUP
)@@G@@EPEAT COUNT @B@@@@          LX        X4,(2,TYPES)      .   @E@@@@      UQ
)@@G@@    JZ        A0,ORULELOP       . $$$$$ C17 FIX NEEDED@G@@@@          SEUR
)@@G@@        A0,,*X4           . $P CHECK FOR TYPES COMBINATION  @E@@@@      US
)@@G@@    ER        ERR$              . $S INTERNAL ERROR   @G@@@@          ANUT
)@@G@@X       X4,(2,1)          . $P BACK UP TO ROUTINE ADDR      @E@@@@      UU
)@@G@@    SLJ       SETREGS           . $P SET UP REGISTERS @E@@@@          LAUV
)@@G@@,H2     A0,,X4            . $P GET ROUTINE ADDR @E@@@@          SLJ     UW
)@@G@@  0,A0              . $P PERFORM TRANSFORM@D@@@@          J         ORULUX
)@@G@@ELOP          . $J TRY NXT    @[@@@@.     @A@@@@.         A NEW ITEM WITUY
)@@G@@HIN AN OCCUR@[@@@@.     @]@@@@OCCNEW.     @B@@@@          SLJ       NEWIUZ
)@@G@@TEM1          .   @D@@@@          J         ORULELOP          . $J TRY NVA
)@@G@@XT    @[@@@@.     @B@@@@.     END OF ALL RULE WITHIN AN OCCUR     @A@@@@VB
)@@G@@.         UPDATE ALL REL WORD ADDR  @[@@@@.     @C@@@@ENDRULES          VC
)@@G@@                    . $H      @H@@@@          LA,T1     A0,OCCRULES     VD
)@@G@@  . $P GET THE GROUP LENGTH OF AN OCCUR   @E@@@@          LA,T1     A3,OVE
)@@G@@CCRULES+1     . $P   (OLD/NEW)      @F@@@@          AU,T3     A0,OCCRULEVF
)@@G@@S       . $P COMPUTE NXT REL-CHAR   @B@@@@          SA,T3     A1,OCCRULEVG
)@@G@@S       .   @E@@@@          AU,T3     A3,OCCRULES+1     .        (OLD/NEVH
)@@G@@W)    @B@@@@          SA,T3     A4,OCCRULES+1     .   @E@@@@          LAVI
)@@G@@,S3     A15,OCCRULES      . $P GET RULE COUNT   @B@@@@          LX,U    VJ
)@@G@@  X8,OCCRULES       .   @]@@@@ENDRLOOP.   @B@@@@          JGD       A15,VK
)@@G@@$+2           .   @B@@@@          J         OCCLOOP           .   @B@@@@VL
)@@G@@          AX,U      X8,2              .   @H@@@@          AU,S3     A0,,VM
)@@G@@X8            . $P COMPUTE NEW REL-WORD & CHAR POS    @B@@@@            VN
)@@G@@                          .   @B@@@@                                    VO
)@@G@@  .   @B@@@@          JZ        A1,ENDR1          .   @B@@@@          ANVP
)@@G@@A,U     A1,1              .   @B@@@@          DSL       A1,36           VQ
)@@G@@  .   @B@@@@          DI,U      A1,6              .   @B@@@@          AAVR
)@@G@@,U      A2,1              .   @B@@@@          SA,S3     A2,,X8          VS
)@@G@@  .   @B@@@@          AA,T3     A1,,X8            .   @B@@@@          SAVT
)@@G@@,T3     A1,,X8            .   @]@@@@ENDR1.      @B@@@@          AU,S3   VU
)@@G@@  A3,1,X8           .   @B@@@@          ANA,U     A4,1              .   VV
)@@G@@@B@@@@          DSL       A4,36             .   @B@@@@          DI,U    VW
)@@G@@  A4,6              .   @B@@@@          AA,U      A5,1              .   VX
)@@G@@@B@@@@          SA,S3     A5,1,X8           .   @B@@@@          AA,T3   VY
)@@G@@  A4,1,X8           .   @B@@@@          SA,T3     A4,1,X8           .   VZ
)@@G@@@B@@@@          J         ENDRLOOP          .   @[@@@@.     @A@@@@.     WA
)@@G@@OCCURS DEPENDING ON STOPED    @[@@@@.     @]@@@@ENDOCC1.    @F@@@@      WB
)@@G@@    LA,T3     A0,OCCRULES+1     . $P GET FINAL CHAR POS.    @G@@@@      WC
)@@G@@    ANA,U     A0,1              . $P COMPUTE THE ACTUAL LENGTH/NEW@B@@@@WD
)@@G@@          DSL       A0,36             .   @B@@@@          DI,U      A0,6WE
)@@G@@              .   @B@@@@          TZ        A1                .   @B@@@@WF
)@@G@@          AA,U      A0,1              .   @G@@@@          LR        R4,AWG
)@@G@@0             . $P SAVE THE NEW LENGTH IN R4    @]@@@@ENDOCC.     @E@@@@WH
)@@G@@          LA        A15,OCCA15        . $P RESTORE A15,X8   @B@@@@      WI
)@@G@@    LX        X8,OCCX8          .   @B@@@@          J         NXTART    WJ
)@@G@@        .   @[@@@@.     @C@@@@.         NO RULES FOR DATA TRANSFORMATIONWK
)@@G@@      @[@@@@.     @]@@@@ENDART9.    @E@@@@          LA,T1     A0,1,X8   WL
)@@G@@        . $P GET RECORD LENGTH@H@@@@          ANA       A0,R3           WM
)@@G@@  . $P COMPUTE DIFFERENCE WITH ACTUAL     @E@@@@          LA,T2     A1,1WN
)@@G@@,X8           . $P GET NEW LENGTH   @B@@@@          ANA       A1,A0     WO
)@@G@@        .   @H@@@@          LR        R4,A1             . $P STORE ACTUAWP
)@@G@@L LENGTH(NEW) IN R4     @]@@@@ENDART8.    @F@@@@          LA        A0,RWQ
)@@G@@4             . $P GET NEW RECORD LENGTH  @B@@@@          SA,H2     A0,,WR
)@@G@@X7            .   @F@@@@          LR        R1,R3             . $P GET OWS
)@@G@@LD RECORD LENGTH  @B@@@@                                      .   @F@@@@WT
)@@G@@          AU        A0,R3             . $P COMPUTE TOTAL LENGTH   @E@@@@WU
)@@G@@          LR        R3,A1             . $P SAVE IN R3       @G@@@@      WV
)@@G@@    AA        A0,X7             . $P ADDR TO SAVE OLD RECORD      @B@@@@WW
)@@G@@          LXI,U     A0,1              .   @B@@@@          LA        A1,XWX
)@@G@@9             .   @B@@@@          LXI,U     A1,1              .   @B@@@@WY
)@@G@@          BT        A0,,*A1           .   @[@@@@.     @^@@@@.     RESTORWZ
)@@G@@E  X1 - A15 @[@@@@.     @B@@@@          LX,U      A0,X1             .   XA
)@@G@@@B@@@@          LXI,U     A0,1              .   @B@@@@          LX      XB
)@@G@@  A1,(1,REGSAVE)    .   @B@@@@          LR,U      R1,27             .   XC
)@@G@@@B@@@@          BT        A0,,*A1           .   @B@@@@          LA      XD
)@@G@@  A0,,X10           .   @B@@@@          SA        A0,NEWPARAM      .    XE
)@@G@@@B@@@@          LX,U      X10,NEWPARAM      .   @B@@@@          J       XF
)@@G@@  *ART              .   @]@@@@$(4).       @]@@@@NEWPARAM  +0@#@@@@NBUFADXG
)@@G@@R   +1,0    @]@@@@$(1).       @#@@@@          END     ___ J         OCCNXH
)@@G@@*[@@@@*SDFF*@#@@@@          AXR$    @ @@@@PF        FORM      12,6,18   XI
)@@G@@@#@@@@$(4)      LIT     @]@@@@$(1).       @A@@@@.         REORG II KEY IXJ
)@@G@@N ACTIVITY  @]@@@@ACTII*.     @ @@@@          LA,U      A0,'II'   @E@@@@XK
)@@G@@.                                     REGISTER ACTIVITY NAME@ @@@@      XL
)@@G@@    ER        NAME$     @A@@@@          SA        A0,IINAME       @C@@@@XM
)@@G@@          LA        A0,(PF 02000,1,IICONT)      @G@@@@.                 XN
)@@G@@                    REGISTER INTER ACT INTERRUPT RTN  @ @@@@          ERXO
)@@G@@        IALL$     @]@@@@IIER.       @^@@@@          ER        II$ @F@@@@XP
)@@G@@.                                     WAIT FOR II KEYIN OR BREAK  @ @@@@XQ
)@@G@@          SA        A0,KEYIN  @A@@@@          LA        A0,(031,PCT)    XR
)@@G@@@^@@@@          ER        PCT$@ @@@@          E$DIT     IIPKT     @^@@@@XS
)@@G@@          E$SKIP    2   @^@@@@          E$CHAR    '%' @^@@@@          E$XT
)@@G@@SKIP    1   @E@@@@          LA        A0,('NO')         . PRESET TO NO CXU
)@@G@@OMMAND@ @@@@          TZ        CMDLVL    @G@@@@          LA        A0,CXV
)@@G@@MDNAME        . SET TO PROPER COMMAND NAME      @A@@@@          LMJ     XW
)@@G@@  X11,EFD1$       @^@@@@          E$SKIP    1   @A@@@@          E$FD2   XX
)@@G@@  ('COMMAND')     @^@@@@          E$SKIP    1   @ @@@@          E$FD1   XY
)@@G@@  ('IN')    @^@@@@          E$SKIP    1   @A@@@@          E$FD2     ('PRXZ
)@@G@@OGRESS,')   @^@@@@          E$SKIP    1   @E@@@@          LA        A1,LYA
)@@G@@AST$I         . GET IBANK ADDR      @^@@@@          SZ        A0  @F@@@@YB
)@@G@@          DI,U      A0,512            . COMPUTE CORE BLOCKS USED  @^@@@@YC
)@@G@@          TZ        A1  @B@@@@          AA,U      A0,1              .   YD
)@@G@@@B@@@@          LA        A2,LAST$D         .   @^@@@@          SZ      YE
)@@G@@  A1  @A@@@@          ANA       A2,(+FRSTD$)    @ @@@@          DI,U    YF
)@@G@@  A1,512    @^@@@@          TZ        A2  @^@@@@          AA,U      A1,1YG
)@@G@@@ @@@@          AA        A0,A1     @ @@@@          MSI,U     A0,512    YH
)@@G@@@ @@@@          DSL       A0,36     @ @@@@          DI,U      A0,1000   YI
)@@G@@@^@@@@          TZ        A1  @^@@@@          AA,U      A0,1@A@@@@      YJ
)@@G@@    LMJ       X11,EDECV$      @^@@@@          E$CHAR    'K' @^@@@@      YK
)@@G@@    E$SKIP    1   @ @@@@          E$FD1     ('IN')    @^@@@@          E$YL
)@@G@@SKIP    1   @ @@@@          E$FD1     ('CORE')  @#@@@@          E$DITX  YM
)@@G@@@ @@@@          SLJ       IIOUT     @ @@@@          TNZ       CMDLVL    YN
)@@G@@@^@@@@          J         IIER@ @@@@          E$DIT     IIPKT     @^@@@@YO
)@@G@@          E$SKIP    2   @^@@@@          E$CHAR    '%' @^@@@@          E$YP
)@@G@@SKIP    1   @A@@@@          E$FD2     ('ELAPSED=')    @ @@@@          ERYQ
)@@G@@        TDATE$    @A@@@@          ANA       A0,TIMEST       @A@@@@      YR
)@@G@@    LMJ       X11,ETIME$      @^@@@@          E$CHAR    ',' @^@@@@      YS
)@@G@@    E$SKIP    1   @ @@@@          E$FD1     ('CPU=')  @ @@@@          LAYT
)@@G@@        A0,CPU    @ @@@@          ANA       A0,CPUIN  @ @@@@          DSYU
)@@G@@L       A0,36     @^@@@@          DI,U      A0,5@A@@@@          LMJ     YV
)@@G@@  X11,EDECV$      @^@@@@          E$SKIP    1   @ @@@@          E$FD1   YW
)@@G@@  ('MS,')   @^@@@@          E$SKIP    1   @ @@@@          E$FD1     ('I/YX
)@@G@@O=')  @C@@@@                    LA                A0,IOCNT  @ @@@@      YY
)@@G@@    ANA       A0,IOIN   @A@@@@          LMJ       X11,EDECV$      @#@@@@YZ
)@@G@@          E$DITX  @ @@@@          SLJ       IIOUT     @A@@@@          LAZA
)@@G@@        A0,CMDLVL       @ @@@@          J         JUMP,A0   @]@@@@JUMP. ZB
)@@G@@      @^@@@@          J         IIER@^@@@@          J         IIER@^@@@@ZC
)@@G@@          J         IIER@ @@@@          J         IISCAN    @A@@@@      ZD
)@@G@@    J         IIRESTORE       @ @@@@          J         IIDLT     @ @@@@ZE
)@@G@@          J         IIRELD    @ @@@@          J         IIPATCH   @]@@@@ZF
)@@G@@IISCAN.     @ @@@@          E$DIT     IIPKT     @^@@@@          E$SKIP  ZG
)@@G@@  2   @^@@@@          E$CHAR    '%' @^@@@@          E$SKIP    1   @A@@@@ZH
)@@G@@          E$FD2     ('SCANNING')    @^@@@@          E$SKIP    1   @A@@@@ZI
)@@G@@          E$FD1     ('AREA:')       @ @@@@          E$FD2     SCPKT     ZJ
)@@G@@@^@@@@          E$CHAR    ',' @A@@@@          E$FD1     ('PAGE:')       ZK
)@@G@@@A@@@@          E$DECV    SCPKT+8,,H2     @#@@@@          E$DITX  @ @@@@ZL
)@@G@@          SLJ       IIOUT     @^@@@@          J         IIER@]@@@@IIRESTZM
)@@G@@ORE.  @ @@@@          E$DIT     IIPKT     @^@@@@          E$SKIP    2   ZN
)@@G@@@^@@@@          E$CHAR    '%' @^@@@@          E$SKIP    1   @A@@@@      ZO
)@@G@@    E$FD1     ('NUMBER')      @^@@@@          E$SKIP    1   @ @@@@      ZP
)@@G@@    E$FD1     ('OF')    @^@@@@          E$SKIP    1   @A@@@@          E$ZQ
)@@G@@FD2     ('RECORDS')     @^@@@@          E$SKIP    1   @A@@@@          E$ZR
)@@G@@FD2     ('RESTORED:')   @^@@@@          E$SKIP    1   @ @@@@          E$ZS
)@@G@@DECV    RESTCNT   @#@@@@          E$DITX  @ @@@@          SLJ       IIOUZT
)@@G@@T     @B@@@@          J         IIER              .   @]@@@@IIDLT.      ZU
)@@G@@@ @@@@          E$DIT     IIPKT     @^@@@@          E$SKIP    2   @^@@@@ZV
)@@G@@          E$CHAR    '%' @^@@@@          E$SKIP    1   @A@@@@          E$ZW
)@@G@@FD1     ('NUMBER')      @^@@@@          E$SKIP    1   @ @@@@          E$ZX
)@@G@@FD1     ('OF')    @^@@@@          E$SKIP    1   @A@@@@          E$FD2   ZY
)@@G@@  ('RECORDS')     @^@@@@          E$SKIP    1   @A@@@@          E$FD2   ZZ
)@@G@@  ('DELETED:')    @^@@@@          E$SKIP    1   @ @@@@          E$DECV  AA
)@@G@@  DLTCNT    @#@@@@          E$DITX  @ @@@@          SLJ       IIOUT     AB
)@@G@@@^@@@@          J         IIER@[@@@@.     @A@@@@.         MESSAGE FOR REAC
)@@G@@LOAD PROCESS@[@@@@.     @]@@@@IIRELD.     @ @@@@          E$DIT     IIPKAD
)@@G@@T     @^@@@@          E$SKIP    2   @^@@@@          E$CHAR    '%' @^@@@@AE
)@@G@@          E$SKIP    1   @A@@@@          E$FD1     ('NUMBER')      @^@@@@AF
)@@G@@          E$SKIP    1   @ @@@@          E$FD1     ('OF')    @^@@@@      AG
)@@G@@    E$SKIP    1   @A@@@@          E$FD2     ('RECORDS')     @^@@@@      AH
)@@G@@    E$SKIP    1   @A@@@@          E$FD2     ('RELOADED:')   @^@@@@      AI
)@@G@@    E$SKIP    1   @ @@@@          E$DECV    RELNUM    @#@@@@          E$AJ
)@@G@@DITX  @ @@@@          SLJ       IIOUT     @^@@@@          J         IIERAK
)@@G@@@[@@@@.     @ @@@@.         MESSAG FOR PATCH    @[@@@@.     @]@@@@IIPATCAL
)@@G@@H.    @ @@@@          E$DIT     IIPKT     @^@@@@          E$SKIP    2   AM
)@@G@@@^@@@@          E$CHAR    '%' @^@@@@          E$SKIP    1   @^@@@@      AN
)@@G@@    E$DECV    PCNT@^@@@@          E$SKIP    1   @ @@@@          E$FD1   AO
)@@G@@  ('PTRS')  @^@@@@          E$SKIP    1   @A@@@@          E$FD2     ('PAAP
)@@G@@TCHED(')    @ @@@@          E$FD1     ('PG')    @^@@@@          E$SKIP  AQ
)@@G@@  1   @A@@@@          E$DECV    PDBPKT+8,,H2    @^@@@@          E$CHAR  AR
)@@G@@  '/' @ @@@@          E$FD2     PDBPKT    @^@@@@          E$CHAR    ')' AS
)@@G@@@#@@@@          E$DITX  @ @@@@          SLJ       IIOUT     @^@@@@      AT
)@@G@@    J         IIER@[@@@@.     @^@@@@.         II TERMINATION@[@@@@.     AU
)@@G@@@]@@@@IICONT.     @]@@@@          +0@]@@@@          +0@ @@@@          ERAV
)@@G@@        EXIT$     @[@@@@.     @[@@@@.     @]@@@@IIOUT     +0@A@@@@      AW
)@@G@@    P$RINT    (PF 1,8,IIPRT)  @E@@@@          LA,S2     A0,PCT+030      AX
)@@G@@  . $P GET PROG TYPE    @D@@@@          TNE,U     A0,4              . $TAY
)@@G@@ DEMAND     @E@@@@          J         *IIOUT            . $J YES,*IIOUT AZ
)@@G@@NO    @ @@@@          C$OM      COMPKT    @ @@@@          J         *IIOBA
)@@G@@UT    @]@@@@$(4).       @^@@@@PCT       RES       031 @ @@@@CPU       EQBB
)@@G@@UF      PCT+026   @ @@@@IOCNT     EQUF      PCT+8     @ @@@@IIPKT     E$BC
)@@G@@PKT     8,IIPRT   @^@@@@IIPRT     RES       8   @ @@@@COMPKT    C$OMPK  BD
)@@G@@  48,IIPRT  @]@@@@KEYIN     +0@]@@@@IINAME*   +0@]@@@@CMDLVL*   +0@#@@@@BE
)@@G@@          END     ___       DI,U      A0,1000   @^@@@@          TZ      BF
)@@G@@  A1  @^@@@@          AA,U      A0,1@A@@@@      *[@@@@*SDFF*@#@@@@      BG
)@@G@@    AXR$    @#@@@@$(4)      LIT.    @]@@@@$(1).       @ @@@@          SEBH
)@@G@@TMIN    0150000   @C@@@@MAIN.                                 . $H      BI
)@@G@@@[@@@@.     @G@@@@.         THIS IS THE MAIN CONTROL PROGRAM OF THE BISCBJ
)@@G@@US/FACS DATA BASE @A@@@@.         REORGANIZATION SYSTEM.    @G@@@@.     BK
)@@G@@    IT READS COMMANDS FROM THE USER, ANALYZE IT AND CALL A PROPER @E@@@@BL
)@@G@@.         PROCESS ROUTINE TO PERFORM THE REQUESTED FUNCTION.@^@@@@.     BM
)@@G@@    COMMANDS ARE: @[@@@@.     @C@@@@.         RECORD   RECORD-NAME [RECOBN
)@@G@@RD-NAME] ...@C@@@@.         AREA      AREA-NAME1 [AREA-NAME2] ... @C@@@@BO
)@@G@@.         AREAP    AREA-NAME1 [AREA-NAME2] ...  @#@@@@.         SCAN    BP
)@@G@@@#@@@@.         UNLOAD  @^@@@@.         RESTORE       @#@@@@.         DEBQ
)@@G@@LETE  @#@@@@.         RELOAD  @#@@@@.         PATCH   @B@@@@.         TIBR
)@@G@@ME      TO TIME EACH COMMAND  @[@@@@.     @E@@@@.         THIS PROGRAM SBS
)@@G@@HOULD BE EXECUTED AS A PROCESSOR:   @[@@@@.     @E@@@@.                 BT
)@@G@@  @REORG   [SCHEMA-NAME-1[,SCHEMA-NAME-2]]@[@@@@.     @[@@@@.     @E@@@@BU
)@@G@@          E$DIT     EDPKT             . $P FORMAT PROGRAM ID@B@@@@      BV
)@@G@@    E$COPY    29,PROGID         .   @E@@@@          E$DAT3              BW
)@@G@@        . $P GET TIME STAMP   @B@@@@          E$CHAR    ','             BX
)@@G@@  .   @B@@@@          E$TD                        .   @^@@@@          E$BY
)@@G@@CHAR    '(' @ @@@@          E$FD1     VERSION   @^@@@@          E$CHAR  BZ
)@@G@@  ')' @^@@@@          E$CHAR    '-' @B@@@@          E$DITX              CA
)@@G@@        .   @E@@@@          P$RINT    (PF  1,14,PRINT)  . $P PRINT PROGRCB
)@@G@@AM ID @E@@@@          SLJ       TIMEIN            . $P REGISTER TIME IN CC
)@@G@@@E@@@@          DL        A0,CPUIN          . $P SAVE TIME STAMP  @B@@@@CD
)@@G@@          DS        A0,CPUINX         .   @F@@@@          LA        A0,TCE
)@@G@@IMEST         . $P SAVE THE START TIME    @B@@@@          SA        A0,TCF
)@@G@@IMESTX        .   @B@@@@          LA        A0,(57,PBUFR)     .   @F@@@@CG
)@@G@@          LMJ       X11,RINF$         . $W READ PROCESSOR CARD    @E@@@@CH
)@@G@@          J         EPROC1            . $T PROCESSOR CALL OK@E@@@@      CI
)@@G@@    LA        A0,(1,ACTII)      . GET II ACTIVITY ADDR@B@@@@          ERCJ
)@@G@@        FORK$             .   @A@@@@.         REGISTER CONTI ROUTINE    CK
)@@G@@@I@@@@          LA        A0,(PF 01133,0,BOMB)                          CL
)@@G@@      . $P GET    @B@@@@          ER        IALL$             .   @B@@@@CM
)@@G@@          J         GETOPTS           .   @#@@@@BOMB      +0D     @B@@@@CN
)@@G@@          L$SNAP    'BOMB!!',7,2,BOMB     @ @@@@          ER        EABTCO
)@@G@@$     @]@@@@GETOPTS.    @[@@@@.     @A@@@@.         SET UP ALL OPTION WOCP
)@@G@@RDS   @[@@@@.     @E@@@@          ER        OPT$              . $P GET OCQ
)@@G@@PTION WORD  @D@@@@          LA,U      A1,1              . $P GET IND    CR
)@@G@@@B@@@@          LR,U      R1,26             .   @G@@@@          LSSL    CS
)@@G@@  A0,9              . $P SHIFT OFF FIRST 9 BITS       @F@@@@          LXCT
)@@G@@        X1,(1,OPTIONS)    . $P GET OPTION WORDS ADDR  @C@@@@OPTLOOP     CU
)@@G@@                          . $H      @E@@@@          JGD       R1,$+2    CV
)@@G@@        . $T ALL CHECKED      @E@@@@          J         ENDOPT          CW
)@@G@@  . $A YES,ENDOPT NO    @G@@@@          LSSL      A0,1              . $PCX
)@@G@@ SGIFT THE OPTION TO BIT 35   @D@@@@          TP        A0              CY
)@@G@@  . $T IS IT SET  @E@@@@          SA        A1,,X1           . $A YES,SECZ
)@@G@@TIT NO      @D@@@@          AX,U      X1,1              . $P UP INX     DA
)@@G@@@D@@@@          J         OPTLOOP           . $J NXT ONE    @]@@@@$(4). DB
)@@G@@      @C@@@@CFAMSW*   +0        . SW TO PUT C14 IN D BANK   @]@@@@OPTIONDC
)@@G@@S.    @]@@@@AOPT*     +0@]@@@@BOPT*     +0@]@@@@COPT*     +0@]@@@@DOPT* DD
)@@G@@    +0@]@@@@EOPT*     +0@]@@@@FOPT*     +0@]@@@@GOPT*     +0@]@@@@HOPT* DE
)@@G@@    +0@]@@@@IOPT*     +0@]@@@@JOPT*     +0@]@@@@KOPT*     +0@]@@@@LOPT* DF
)@@G@@    +0@]@@@@MOPT*     +0@]@@@@NOPT*     +0@]@@@@OOPT*     +0@]@@@@POPT* DG
)@@G@@    +0@]@@@@QOPT*     +0@]@@@@ROPT*     +0@]@@@@SOPT*     +0@]@@@@TOPT* DH
)@@G@@    +0@]@@@@UOPT*     +0@]@@@@VOPT*     +0@]@@@@WOPT*     +0@]@@@@XOPT* DI
)@@G@@    +0@]@@@@YOPT*     +0@]@@@@ZOPT*     +0@]@@@@$(1).       @]@@@@ENDOPTDJ
)@@G@@.     @[@@@@.     @C@@@@.         GET FIRST SCHEMA NAME AND DO @USE     DK
)@@G@@@[@@@@.     @E@@@@          LA,U      A0,1              . $P GET FIRST EDL
)@@G@@LT$   @B@@@@          LMJ       X11,SELT$         .   @E@@@@          J DM
)@@G@@        USE2              . $T 1ST NAME IN      @E@@@@          SLJ     DN
)@@G@@  BLDUSE            . $A NO, TRY 2ND      @[@@@@.     @C@@@@.         GEDO
)@@G@@T SECOND SCHEMA NAME AND DO @USE    @[@@@@.     @]@@@@USE2.       @E@@@@DP
)@@G@@          LA,U      A0,2              . $P GET 2ND ELT$     @B@@@@      DQ
)@@G@@    LMJ       X11,SELT$         .   @E@@@@          J         READIN    DR
)@@G@@        . $T 2ND NAME IN      @D@@@@          SLJ       BLDUSE          DS
)@@G@@  . $A NO,READIN  @B@@@@          J         READIN            .   @[@@@@DT
)@@G@@.     @C@@@@.         BUILD @USE COMMAND AND PERFORM CSF$   @[@@@@.     DU
)@@G@@@C@@@@BLDUSE    +0                          . $H      @E@@@@          E$DV
)@@G@@DIT     EDPKT             . $P SET UP PKT       @^@@@@          E$CHAR  DW
)@@G@@  '@' @ @@@@          E$FD1     ('USE')   @^@@@@          E$SKIP    1   DX
)@@G@@@G@@@@          LA,U      A0,1              . $P INCREMANT NO. OF SCHEMADY
)@@G@@ IN   @C@@@@          AA        A0,NS$FLG         . $   BY 1@D@@@@      DZ
)@@G@@    SA        A0,NS$FLG         . $P SAVE IT    @E@@@@          MSI,U   EA
)@@G@@  A0,2              . $P GET USE NAME ADDR@B@@@@          AA,U      A0,UEB
)@@G@@SENME         .   @^@@@@          E$FD2     0,A0@^@@@@          E$CHAR  EC
)@@G@@  ',' @E@@@@          TNZ,S1    ELT$              . $T QUALFIER IN      ED
)@@G@@@E@@@@          J         IMPQUAL           . $A YES NO,IMPQUAL   @ @@@@EE
)@@G@@          E$FD2     ELT$+2    @^@@@@          E$CHAR    '*' @B@@@@      EF
)@@G@@    J         FILENME           .   @[@@@@.     @B@@@@.         CHECK IFEG
)@@G@@ IMPLIED QUALFIER IN    @[@@@@.     @C@@@@IMPQUAL                       EH
)@@G@@        . $H      @E@@@@          TNZ,S6    ELT$              . $T IMPLIEI
)@@G@@ED QUAL     @E@@@@          J         FILENME           . $A YES NO,FILEEJ
)@@G@@NME   @B@@@@          E$CHAR    '*'               .   @[@@@@.     @^@@@@EK
)@@G@@.         GET FILENAME  @[@@@@.     @C@@@@FILENME                       EL
)@@G@@        . $H      @E@@@@          TNZ,S2    ELT$              . $T FILENEM
)@@G@@AME IN      @E@@@@          J         ELEMENT           . $A YES NO,ELEMEN
)@@G@@ENT   @ @@@@          E$FD2     ELT$+4    @ @@@@          J         DOUSEO
)@@G@@E     @[@@@@.     @ @@@@.         TRY ELEMENT NAME    @[@@@@.     @C@@@@EP
)@@G@@ELEMENT                               . $H      @E@@@@          TNZ,S1  EQ
)@@G@@  ELT$+1            . $T ELEMENT NAME IN  @E@@@@          ER        ERR$ER
)@@G@@              . $ PROC CALL ERR     @ @@@@          E$FD2     ELT$+9    ES
)@@G@@@[@@@@.     @^@@@@.         DO @USE       @[@@@@.     @C@@@@DOUSE       ET
)@@G@@                          . $H      @^@@@@          E$SKIP    1   @F@@@@EU
)@@G@@          E$CHAR    '.'               . $P END OF USE STATEMENT   @#@@@@EV
)@@G@@          E$DITX  @D@@@@          LA,U      A0,PRINT          . $P USE AEW
)@@G@@DDR   @D@@@@          ER        CSF$              . $P DO @USE    @D@@@@EX
)@@G@@          J         *BLDUSE           . $J RETURN     @]@@@@$(4).       EY
)@@G@@@^@@@@USENME    'OLDSCHEMA'   @^@@@@          'NEWSCHEMA'   @D@@@@NS$FLGEZ
)@@G@@*   -1                          . -1 NO SCHEMA  @D@@@@                  FA
)@@G@@                    .  0 1 SCHEMA   @D@@@@$(1)                          FB
)@@G@@        .  1 2 SCHEMAS  @[@@@@.     @ @@@@.         READ USER INPUT     FC
)@@G@@@[@@@@.     @C@@@@READIN.                               . $H      @E@@@@FD
)@@G@@          SLJ       TIMEOUT           . $P PRINT TIME STAT  @B@@@@      FE
)@@G@@    LA,U      A0,BLANK          .   @B@@@@          LA        A1,(1,LINEFF
)@@G@@)       .   @B@@@@          LR,U      R1,14             .   @F@@@@      FG
)@@G@@    BT        A1,,*A0           . $P CLEAR INPUT BUFFER     @F@@@@      FH
)@@G@@    P$RINT    (PF 2,1,READY)    . $P PRINT READY MESSAGE    @]@@@@$(4). FI
)@@G@@      @]@@@@INPUT1    +0@ @@@@          +ENDREAD,LINELNG    @]@@@@$(1). FJ
)@@G@@      @E@@@@          LX,U      X10,INPUT1        . $P GET INPUT PKT    FK
)@@G@@@E@@@@          LMJ       X11,INPUT         . $W CALL INPUT RTN   @^@@@@FL
)@@G@@          SLJ       ECHO@E@@@@          LSSL      A0,18             . $TFM
)@@G@@ BLANK LINE       @E@@@@          JZ        A0,READIN+1       . $A YES,RFN
)@@G@@EADIN NO    @B@@@@          LXM,U     A0,LINE           .   @E@@@@      FO
)@@G@@    LMJ       X11,PARSE         . $W GO PARSE COMMAND @E@@@@          SLFP
)@@G@@J       TIMEIN            . $P CHECK IN TIME    @]@@@@ENDIN.      @B@@@@FQ
)@@G@@          LA        A0,PBUFR          .   @B@@@@          LX        X1,(FR
)@@G@@2,COMMAND)    .   @B@@@@          LR        R1,CMDCNT         .   @F@@@@FS
)@@G@@          SE        A0,0,*X1          . $T IS A LEGAL COMMAND     @E@@@@FT
)@@G@@          J         CMDERR            . $A YES NO,CMDERR    @G@@@@      FU
)@@G@@    ANX       X1,(1,1)          . $P GET COMMAND ROUTINE ADDR     @E@@@@FV
)@@G@@          LA,H1     A0,0,X1           . $P GET COMMAND LVL  @D@@@@      FW
)@@G@@    SA        A0,CMDLVL         . $P SAVE IT    @B@@@@          LA,U    FX
)@@G@@  A0,1              .   @G@@@@          TG,H1     A0,0,X1           . $TFY
)@@G@@ IS IT RECORD OR DEBUG CMD    @E@@@@          J         DOFUNC          FZ
)@@G@@  . $W DO COMMAND       @E@@@@          SLJ       CKC1              . $WGA
)@@G@@ CHECK C1 TABLE   @B@@@@          LA,U      A0,2              .   @E@@@@GB
)@@G@@          TNE,H1    A0,0,X1           . $T IS IT AREA CMD   @C@@@@      GC
)@@G@@    J         DOFUNC            . $W DO IT@E@@@@          SLJ       CKC3GD
)@@G@@              . $W CHECK C3 TABLE   @ @@@@          J         DOFUNC    GE
)@@G@@@E@@@@.    ****************************************************   @[@@@@GF
)@@G@@.     @^@@@@.         RECORD COMMAND@[@@@@.     @E@@@@.    *************GG
)@@G@@***************************************   @C@@@@RECORD                  GH
)@@G@@              . $H      @H@@@@          TP        NS$FLG            . $TGI
)@@G@@ CHECK IF SCHEMA FILE SPECIFIED     @E@@@@          J         NOSCHEMA  GJ
)@@G@@        . $A YES NO,NOSCHEMA  @B@@@@          LA        A0,C1SW         GK
)@@G@@  .   @D@@@@          TNE,U     A0,2              . $T C1SW = 2   @E@@@@GL
)@@G@@          J         SEQERR            . $A YES,SEQERR NO    @B@@@@      GM
)@@G@@    LX,U      X10,PBUFR         .   @D@@@@          SX        X10,TEMPX1GN
)@@G@@0       . $P SAVE X10   @]@@@@RECLOP.     @E@@@@          LX        X10,GO
)@@G@@TEMPX10       . $P GET RECORD NAME  @B@@@@          AX,U      X10,5     GP
)@@G@@        .   @B@@@@          SX        X10,TEMPX10       .   @E@@@@      GQ
)@@G@@    LA        A0,('      ')     . $T CHK IF BLANK     @B@@@@          TNGR
)@@G@@E       A0,,X10           .   @E@@@@          J         READIN          GS
)@@G@@  . $A YES,READIN NO    @E@@@@          LMJ       X11,BLDC1         . $WGT
)@@G@@ CALL BLDC1       @E@@@@          LA,U      A0,1              . $P SET CGU
)@@G@@1SW = 1     @B@@@@          SA        A0,C1SW           .   @D@@@@      GV
)@@G@@    J         RECLOP            . $J RECLOP     @C@@@@SEQERR            GW
)@@G@@                    . $H      @E@@@@          P$RINT    (PF 1,5,SEQMSG) GX
)@@G@@  . $P PRINT MESSAGE    @B@@@@          ER        ABORT$            .   GY
)@@G@@@C@@@@NOSCHEMA                              . $H      @B@@@@          P$GZ
)@@G@@RINT    (PF 1,4,SCHEMAMSG)    @B@@@@          ER        ABORT$          HA
)@@G@@  .   @]@@@@$(4).       @]@@@@TEMPX10   +0@A@@@@SCHEMAMSG 'NO SCHEMA FILHB
)@@G@@E SPECIFIED'@]@@@@$(1).       @E@@@@.    *******************************HC
)@@G@@*********************   @[@@@@.     @^@@@@.         AREA COMMAND  @[@@@@HD
)@@G@@.     @E@@@@.    ****************************************************   HE
)@@G@@@C@@@@AREA                                  . $H      @E@@@@          SZHF
)@@G@@        AREAP             . $P RESET AREAP SW   @F@@@@          LA      HG
)@@G@@  A0,('AREAP ')     . $P CHK FOR AREAP COMMAND  @C@@@@          TNE     HH
)@@G@@  A0,PBUFR          . $T IS IT@D@@@@          SA        A0,AREAP        HI
)@@G@@  . $P SAVE IT    @H@@@@          TP        NS$FLG            . $T CHECKHJ
)@@G@@ IF SCHEMA FILE SPECIFIED     @E@@@@          J         NOSCHEMA        HK
)@@G@@  . $A YES NO,NOSCHEMA  @D@@@@          LA        A0,C3SW           . $PHL
)@@G@@ GET SW     @D@@@@          TNE,U     A0,2              . $T C3SW = 2   HM
)@@G@@@E@@@@          J         SEQERR            . $A YES,SEQERR  NO   @D@@@@HN
)@@G@@          LX,U      X10,(+8,020,,,,0) . $P READ C8    @B@@@@          TNHO
)@@G@@Z       C8                .   @B@@@@          LMJ       X11,CF$AM       HP
)@@G@@  .   @D@@@@          TNZ       C8                . $T C8 EXISTS  @E@@@@HQ
)@@G@@          J         SEQERR            . $A YES NO,SEQERR    @C@@@@      HR
)@@G@@    LA,U      A0,2              . $       @D@@@@          SA        A0,CHS
)@@G@@1SW           . $P SET C1SW   @A@@@@          LX,U      X10,PBUFR+5     HT
)@@G@@@E@@@@          LXI,U     X10,5             . $W CALL BLDC3       @A@@@@HU
)@@G@@          LMJ       X11,BLDC3       @E@@@@          LA,U      A0,1      HV
)@@G@@        . $P SET C1SW = 1     @ @@@@          SA        A0,C3SW   @D@@@@HW
)@@G@@          J         READIN            . $J READIN     @[@@@@.     @E@@@@HX
)@@G@@.         WRITE C TABES TO C$FILE AFTER RECORD COMMANDS     @[@@@@.     HY
)@@G@@@C@@@@CKC1      +0                          . $H      @E@@@@          LAHZ
)@@G@@        A0,C1SW           . $P GET C1 SWITCH    @G@@@@          TE,U    IA
)@@G@@  A0,1              . $T RECORD COMMANDS ENTERED      @E@@@@          J IB
)@@G@@        *CKC1             . $A YES NO,*CKC1     @[@@@@.     @A@@@@.     IC
)@@G@@    MOVE C TABLES TO C8       @G@@@@.         C8 BUFF ADDR WAS SET UP BYID
)@@G@@ CF$AM UPON FIRST RECORD COMMAND    @[@@@@.     @E@@@@          LX      IE
)@@G@@  X4,C8             . $P GET C8 ADDR      @G@@@@          LR,U      R1,1IF
)@@G@@8             . $P MOVE C TABLES ENTRY TO C8    @B@@@@          LXI,U   IG
)@@G@@  X4,1              .   @B@@@@          LX        X2,(1,C1)         .   IH
)@@G@@@B@@@@          BT        X4,,*X2           .   @[@@@@.     @A@@@@.     II
)@@G@@    LOOP TO WRITE ALL TABLES  @[@@@@.     @B@@@@          SZ        A15 IJ
)@@G@@              .   @]@@@@C1LOOP.     @E@@@@          LX,U      X10,WRTC1 IK
)@@G@@        . $P GET PARAM ADDR   @F@@@@          AX        X10,A15         IL
)@@G@@  . $P ADJUST TO PROPER ONE   @B@@@@          LMJ       X11,CF$AM       IM
)@@G@@  .   @E@@@@          AA,U      A15,1             . $P UP COUNT BY 1    IN
)@@G@@@D@@@@          TNE,U     A15,9             . $T DONE ALL   @E@@@@      IO
)@@G@@    J         C1DONE            . $A YES,C1DONE NO    @D@@@@          TZIP
)@@G@@        NS$FLG            . $T 1 SCHEMA   @E@@@@          J         C1LOIQ
)@@G@@OP            . $A YES NO,C1LOOP    @E@@@@          TNE,U     A15,5     IR
)@@G@@        . $T DONE FOR 1 SCHEMA@E@@@@          J         C1DONE          IS
)@@G@@  . $A YES,C1DONE NO    @B@@@@          J         C1LOOP            .   IT
)@@G@@@]@@@@C1DONE.     @[@@@@.     @A@@@@.         WRITE C14 IF AVAILABLE    IU
)@@G@@@[@@@@.     @B@@@@          LX,U      X10,(+14,010,,,,0)    @B@@@@      IV
)@@G@@    TZ,H1     C14               .   @B@@@@          LMJ       X11,CF$AM IW
)@@G@@        .   @[@@@@.     @ @@@@.         WRITE C15 IF EXITS  @[@@@@.     IX
)@@G@@@B@@@@          LX,U      X10,(+15,010,,,,0)    @B@@@@          TZ,H1   IY
)@@G@@  C15               .   @B@@@@          LMJ       X11,CF$AM         .   IZ
)@@G@@@[@@@@.     @C@@@@.         WRITE C17 (TRANSFORMATION RULES)      @[@@@@JA
)@@G@@.     @C@@@@          LX,U      X10,(+17,010,0,0,0,0)       @B@@@@      JB
)@@G@@    TZ        C17               .   @C@@@@          LMJ       X11,CF$AM JC
)@@G@@        . $       @E@@@@          SLJ       BANK              . $ RESET JD
)@@G@@I & D BANK  @B@@@@          LA,U      A0,2              .   @D@@@@      JE
)@@G@@    SA        A0,C1SW           . $ SET C1SW    @E@@@@          LMJ     JF
)@@G@@  X11,DUMMY         . $ RESET CONF SEGMENT@ @@@@          J         *CKCJG
)@@G@@1     @]@@@@$(4).       @]@@@@WRTC1.      @^@@@@          +1,011,,,,0   JH
)@@G@@@^@@@@          +5,010,,,,0   @^@@@@          +6,010,,,,0   @^@@@@      JI
)@@G@@    +7,010,,,,0   @^@@@@          +8,010,,,,0   @^@@@@          +9,011,,JJ
)@@G@@,,0   @^@@@@          +11,010,,,,0  @^@@@@          +12,010,,,,0  @^@@@@JK
)@@G@@          +13,010,,,,0  @]@@@@$(1).       @[@@@@.     @E@@@@.         WRJL
)@@G@@ITE  C3, C10  TO C$FILE AFTER AREA COMMAND(S)   @[@@@@.     @C@@@@CKC3  JM
)@@G@@    +0                          . $H      @F@@@@          LA        A0,CJN
)@@G@@3SW           . $T CHECK IF AREA COMMAND  @E@@@@          TE,U      A0,1JO
)@@G@@              . $A YES NO,*CKC3     @C@@@@          J         *CKC3     JP
)@@G@@        . $       @D@@@@          LX,U      X10,(+3,010,,,,0) . $P WRITEJQ
)@@G@@ C3   @B@@@@          LMJ       X11,CF$AM         .   @E@@@@          LXJR
)@@G@@,H2     X4,C8             . $P SET C3 SW IN C8  @B@@@@          LA      JS
)@@G@@  A0,C3             .   @B@@@@          SA        A0,2,X4           .   JT
)@@G@@@B@@@@          LA        A0,C10            .   @E@@@@          SA      JU
)@@G@@  A0,9,X4           . $P SAME FOR C10     @D@@@@          LX,U      X10,JV
)@@G@@(+8,010,,,,0) . $P WRITE C8   @A@@@@          LMJ       X11,CF$AM       JW
)@@G@@@C@@@@          LX,U      X10,(+10,010,,,,0) . $      @D@@@@          TZJX
)@@G@@        C10               . $T NO C10     @D@@@@          LMJ       X11,JY
)@@G@@CF$AM         . $P WRITE C10  @D@@@@          LA,U      A0,2            JZ
)@@G@@  . $P SET SW     @B@@@@          SA        A0,C3SW           .   @B@@@@KA
)@@G@@          SLJ       BANK              .   @ @@@@          J         *CKCKB
)@@G@@3     @[@@@@.     @C@@@@.         ROUTINE TO RESET I & D BANK ADDR      KC
)@@G@@@[@@@@.     @C@@@@BANK      +0                          . $H      @E@@@@KD
)@@G@@          LA        A0,LAST$DSV       . $P RESET I & D BANK @B@@@@      KE
)@@G@@    SA        A0,LAST$D         .   @F@@@@          ER        LCORE$    KF
)@@G@@        . $P RELEASE UNUSED CORE    @B@@@@          LA        A0,LAST$ISKG
)@@G@@V       .   @B@@@@          SA        A0,LAST$I         .   @F@@@@      KH
)@@G@@    ER        LCORE$            . $P RELEASE UNUSED CORE    @B@@@@      KI
)@@G@@    LR,U      R1,18             .   @E@@@@          SZ        A0        KJ
)@@G@@        . $P ZEROS C TABLES   @B@@@@          LX,U      X4,A0           KK
)@@G@@  .   @B@@@@          LX        X2,(1,C1)         .   @B@@@@          BTKL
)@@G@@        X2,,*X4           .   @B@@@@          J         *BANK           KM
)@@G@@  .   @]@@@@$(4).       @^@@@@LAST$D*   +LASTD$       @^@@@@LAST$DSV  +LKN
)@@G@@ASTD$       @^@@@@LAST$I*   +LASTI$       @^@@@@LAST$ISV  +LASTI$       KO
)@@G@@@]@@@@C1*       +0@]@@@@C2*       +0@]@@@@C3*       +0@]@@@@C4*       +0KP
)@@G@@@]@@@@C5*       +0@]@@@@C6*       +0@]@@@@C7*       +0@]@@@@C8*       +0KQ
)@@G@@@]@@@@C9*       +0@]@@@@C10*      +0@]@@@@C11*      +0@]@@@@C12*      +0KR
)@@G@@@]@@@@C13*      +0@]@@@@C14*      +0@]@@@@C15*      +0@]@@@@C16*      +0KS
)@@G@@@]@@@@C17*      +0@]@@@@C18*      +0@]@@@@$(1).       @C@@@@EPROC1      KT
)@@G@@                          . $H      @ @@@@          ER        PRINT$    KU
)@@G@@@C@@@@          ER        ABORT$            . $E      @C@@@@DODEBUG     KV
)@@G@@                          . $H      @E@@@@          SLJ       DEBUG$    KW
)@@G@@        . $W PERFORM DEBUG    @D@@@@          J         READIN+1        KX
)@@G@@  . $J READIN     @C@@@@CMDERR                                . $H      KY
)@@G@@@E@@@@          P$RINT    (PF 1,5,CMDMSG)   . $P SEND ERROR MSG   @D@@@@KZ
)@@G@@          J         READIN+1          . $J READIN     @]@@@@ENDREAD.    LA
)@@G@@@A@@@@          LA        A0,('END   ')   @ @@@@          SA        A0,PLB
)@@G@@BUFR  @ @@@@          J         ENDIN     @C@@@@DOFUNC                  LC
)@@G@@              . $H      @G@@@@          LA,H2     A0,0,X1           . $PLD
)@@G@@ GET FUNCTION ROUTINE ADDR    @C@@@@          J         0,A0            LE
)@@G@@  . $J      @E@@@@.    *************************************************LF
)@@G@@***   @[@@@@.     @ @@@@.         END COMMAND OR @    @[@@@@.     @E@@@@LG
)@@G@@.    ****************************************************   @]@@@@ENDIT.LH
)@@G@@      @A@@@@          DL        A0,CPUINX       @F@@@@          DS      LI
)@@G@@  A0,CPUIN          . $P RESTORE TIME IN STAMP  @F@@@@          LA      LJ
)@@G@@  A0,TIMESTX        . $P RESTORE START TIME     @B@@@@          SA      LK
)@@G@@  A0,TIMEST         .   @A@@@@          LA        A0,(' %END%')   @A@@@@LL
)@@G@@          SA        A0,CMDNAME      @ @@@@          SLJ       TIMEOUT   LM
)@@G@@@A@@@@          LA        A0,IINAME       @^@@@@          ER        INT$LN
)@@G@@@A@@@@          P$RINT    (PF 1,3,ENDMSG) @ @@@@          ER        EXITLO
)@@G@@$     @ @@@@ENDMSG    '* END DBREORG *'   @E@@@@.    *******************LP
)@@G@@*********************************   @[@@@@.     @^@@@@.         DELETE CLQ
)@@G@@OMMAND@[@@@@.     @E@@@@.    *******************************************LR
)@@G@@*********   @]@@@@DELETE.     @D@@@@          LX,U      X10,(+8,020,,,,0LS
)@@G@@) . $P READ C8    @B@@@@          LMJ       X11,CF$AM         .   @E@@@@LT
)@@G@@          LX,H2     X1,C8             . $P GET C8 ADDR      @D@@@@      LU
)@@G@@    TZ,H1     C8                . $T C8 EXISTS  @E@@@@          TNZ,H1  LV
)@@G@@  3,X1              . $T SEE IF C4 EXISTS @E@@@@          J         SEQELW
)@@G@@RR            . $A YES NO,SEQERR    @D@@@@          LX,U      X10,RDC4  LX
)@@G@@        . $P READ C4    @B@@@@          LMJ       X11,CF$AM         .   LY
)@@G@@@D@@@@          LX,U      X10,(+3,020,,,,0) . $P READ C3    @B@@@@      LZ
)@@G@@    LMJ       X11,CF$AM         .   @D@@@@          LX,U      X10,(+5,02MA
)@@G@@0,,,,0) . $P READ C5    @B@@@@          LMJ       X11,CF$AM         .   MB
)@@G@@@D@@@@          LX,U      X10,(+6,020,,,,0) . $P READ C6    @B@@@@      MC
)@@G@@    LMJ       X11,CF$AM         .   @F@@@@          LMJ       X11,F$ASG MD
)@@G@@        . $P ASG,A ALL FILES(DB)    @A@@@@          LMJ       X11,REORDLME
)@@G@@T     @E@@@@          SLJ       BANK              . $P RESET I&D BANK   MF
)@@G@@@ @@@@          J         READIN    @E@@@@.    *************************MG
)@@G@@***************************   @[@@@@.     @^@@@@.         PATCH COMMAND MH
)@@G@@@[@@@@.     @E@@@@.    *************************************************MI
)@@G@@***   @]@@@@PATCH$.     @D@@@@          LX,U      X10,(+8,020,,,,0) . $PMJ
)@@G@@ READ C8    @B@@@@          LMJ       X11,CF$AM         .   @E@@@@      MK
)@@G@@    LX,H2     X1,C8             . $P GET C8 ADDR      @E@@@@          TNML
)@@G@@Z,H1    1,X1              . $T SEE IF C2 EXISTS @E@@@@          J       MM
)@@G@@  SEQERR            . $A YES NO,SEQERR    @E@@@@          TNZ,H1    15,XMN
)@@G@@1             . $T SEE IF C16 EXISTS@E@@@@          J         SEQERR    MO
)@@G@@        . $A YES NO,SEQERR    @E@@@@          TZ        8,X1            MP
)@@G@@  . $T SEE IF C9 EXISTS @E@@@@          J         C9$C10           . $A MQ
)@@G@@YES,C9$C10 NO     @D@@@@          LX,U      X10,(+1,020,,,,0) . $P READ MR
)@@G@@C1    @B@@@@          LMJ       X11,CF$AM         .   @D@@@@          LXMS
)@@G@@,U      X10,(+3,020,,,,0) . $P READ C3    @B@@@@          LMJ       X11,MT
)@@G@@CF$AM         .   @ @@@@          J         PATCH$0   @]@@@@C9$C10.     MU
)@@G@@@D@@@@          LX,U      X10,(+9,020,,,,0) . $P READ C9    @B@@@@      MV
)@@G@@    LMJ       X11,CF$AM         .   @D@@@@          LX,U      X10,(+10,0MW
)@@G@@20,,,,0) . $P READ C10  @B@@@@          LMJ       X11,CF$AM         .   MX
)@@G@@@F@@@@          LA        A0,C9            . $P MOVE C9,C10 TO C1,C3    MY
)@@G@@@B@@@@          SA        A0,C1             .   @F@@@@          LA      MZ
)@@G@@  A0,C10            . $P MOVE C9,C10 TO C1,C3   @B@@@@          SA      NA
)@@G@@  A0,C3             .   @]@@@@PATCH$0.    @E@@@@          LX,U      X10,NB
)@@G@@RDC2          . $P READ C2 & C4     @B@@@@          LMJ       X11,CF$AM NC
)@@G@@        .   @D@@@@          LX,U      X10,(+16,020,,,,0) . $P READ C16  ND
)@@G@@@B@@@@          LMJ       X11,CF$AM         .   @D@@@@          LX,U    NE
)@@G@@  X10,(+4,020,,,,0) . $P READ C4    @B@@@@          LMJ       X11,CF$AM NF
)@@G@@        .   @F@@@@          LMJ       X11,F$ASG         . $P ASG,A ALL FNG
)@@G@@ILES(DB)    @E@@@@          LMJ       X11,PATCH         . $W PERFORM PATNH
)@@G@@CH    @B@@@@          J         READIN            .   @E@@@@.    *******NI
)@@G@@*********************************************   @[@@@@.     @ @@@@.     NJ
)@@G@@    RESTORE COMMAND     @[@@@@.     @E@@@@.    *************************NK
)@@G@@***************************   @C@@@@RESTORE$.                           NL
)@@G@@  . $H      @D@@@@          LX,U      X10,(+8,020,,,,0) . $P READ C8    NM
)@@G@@@B@@@@          LMJ       X11,CF$AM         .   @E@@@@          LX,H2   NN
)@@G@@  X1,C8             . $P GET C8 ADDR      @E@@@@          TZ        9,X1NO
)@@G@@              . $T SEE IF C10 EXISTS@E@@@@          J         C10C12    NP
)@@G@@        . $A YES,C10C12 NO    @D@@@@          LX,U      X10,(+3,020,,,,0NQ
)@@G@@) . $P READ C3    @B@@@@          LMJ       X11,CF$AM         .   @D@@@@NR
)@@G@@          LX,U      X10,(+5,020,,,,0) . $P READ C5    @B@@@@          LMNS
)@@G@@J       X11,CF$AM         .   @D@@@@          LX,U      X10,(+6,020,,,,0NT
)@@G@@) . $P READ C6    @B@@@@          LMJ       X11,CF$AM         .   @B@@@@NU
)@@G@@          J         RESTORE$0         .   @]@@@@C10C12.     @D@@@@      NV
)@@G@@    LX,U      X10,(+10,020,,,,0) . $P READ C10  @B@@@@          LMJ     NW
)@@G@@  X11,CF$AM         .   @D@@@@          LX,U      X10,(+11,020,,,,0) . $NX
)@@G@@P READ C11  @B@@@@          LMJ       X11,CF$AM         .   @D@@@@      NY
)@@G@@    LX,U      X10,(+12,020,,,,0) . $P READ C12  @B@@@@          LMJ     NZ
)@@G@@  X11,CF$AM         .   @G@@@@          LA        A0,C10            . $POA
)@@G@@ MOVE C10-C12 TO C3,C5,C6     @B@@@@          SA        A0,C3           OB
)@@G@@  .   @G@@@@          LA        A0,C11            . $P MOVE C10-C12 TO COC
)@@G@@3,C5,C6     @B@@@@          SA        A0,C5             .   @G@@@@      OD
)@@G@@    LA        A0,C12            . $P MOVE C10-C12 TO C3,C5,C6     @B@@@@OE
)@@G@@          SA        A0,C6             .   @]@@@@RESTORE$0.  @I@@@@      OF
)@@G@@    LX,U      X10,(+18,020,,,,0)                                  . $P ROG
)@@G@@EA    @B@@@@          LMJ       X11,CF$AM         .   @F@@@@          LMOH
)@@G@@J       X11,F$ASG         . $P ASG,A ALL FILES(DB)    @ @@@@NEWCODE   EQOI
)@@G@@UF      1,X9,T1   @]@@@@.           @B@@@@.         RESET C5 FOR OLD/NEWOJ
)@@G@@ CODE CHK   @]@@@@.           @C@@@@ZIPC5                               OK
)@@G@@  . $H      @E@@@@          LX,H2     X9,C5             . $P GET C5 ADDROL
)@@G@@      @]@@@@ZIPC5LP.    @D@@@@          SZ        NEWCODE           . $POM
)@@G@@ RESET SW   @E@@@@          TNZ,T3    0,X9              . $T LAST ENTRY ON
)@@G@@      @E@@@@          J         RSTLP             . $A YES,RSTLP NO     OO
)@@G@@@E@@@@          AX,T3     X9,,X9            . $P NEXT ENTRY       @B@@@@OP
)@@G@@          J         ZIPC5LP           .   @C@@@@RSTLP                   OQ
)@@G@@              . $H      @E@@@@          P$RINT    (PF 1,5,READYR1)  . $POR
)@@G@@ SEND READ. MSG   @]@@@@$(4).       @C@@@@READYR1   'READY.(FOR RESTORE OS
)@@G@@SUBCOMMAND)'      @]@@@@INPUT4    +0@ @@@@          +ENDRXX,LINELNG     OT
)@@G@@@]@@@@$(1).       @E@@@@          LX,U      X10,INPUT4        . $P GET IOU
)@@G@@NPUT PKT    @E@@@@          LMJ       X11,INPUT         . $W CALL INPUT OV
)@@G@@RTN   @B@@@@          SLJ       ECHO              .   @B@@@@          LSOW
)@@G@@SL      A0,18             .   @E@@@@          JZ        A0,RSTLP        OX
)@@G@@  . $T BLANK INPUT      @E@@@@                                      . $AOY
)@@G@@ YES,RSTLP NO     @G@@@@          LXM,U     A0,LINE           . $P SAVE OZ
)@@G@@NUMBER OF WORS IN'ED    @E@@@@          LMJ       X11,PARSE         . $WPA
)@@G@@ PARSE THE INPUT  @E@@@@          LA        A0,PBUFR          . $P GET FPB
)@@G@@IRST WORD   @E@@@@          TNE       A0,('ENDR  ')     . $T IS IT 'ENDRPC
)@@G@@'     @E@@@@          J         ENDRXX            . $A YES,ENDRXX NO    PD
)@@G@@@F@@@@          LA        A0,PBUFR+5        . $P GET THE SUBCOMMAND     PE
)@@G@@@E@@@@          TNE       A0,('TO    ')     . $T IS IT 'TO'       @E@@@@PF
)@@G@@          J         RSTTO             . $A YES,RSTTO NO     @E@@@@      PG
)@@G@@    P$RINT    (PF 1,5,INVALXX)  . $P SEND ERROR MSG   @C@@@@          J PH
)@@G@@        RSTLP             . $J      @C@@@@RSTTO                         PI
)@@G@@        . $H      @E@@@@          SLJ       CHKRCD            . $P CHECKPJ
)@@G@@ RECORD NAME@F@@@@          LX        X9,X1             . $P SAVE RECORDPK
)@@G@@ TBL ADDR   @E@@@@          LA        A0,PBUFR+10       . $P GET THE NUMPL
)@@G@@BER   @E@@@@          SLJ       XCON              . $P CONVERT TO BINARYPM
)@@G@@@E@@@@          JZ        A2,CODEERR        . $T >0 AND <= 07777  @B@@@@PN
)@@G@@          TG,U      A2,010000         .   @E@@@@          J         CODEPO
)@@G@@ERR           . $A YES NO,CODEERR   @G@@@@          SA        A2,NEWCODEPP
)@@G@@        . $P SAVE THE NEW RECORD CODE     @C@@@@          J         RSTLPQ
)@@G@@P             . $J      @C@@@@CODEERR.                              . $HPR
)@@G@@      @C@@@@          P$RINT    (PF 1,CERRLNG,CERRMSG)      @C@@@@      PS
)@@G@@    J         RSTLP             . $J LOOP @]@@@@$(4).       @A@@@@CERRMSPT
)@@G@@G   'ILLEGAL RECORD CODE.'    @A@@@@CERRLNG   EQU       $-CERRMSG       PU
)@@G@@@]@@@@$(1).       @]@@@@ENDRXX.     @E@@@@          LMJ       X11,RESTORPV
)@@G@@E       . $W PERFORM RESTORE  @B@@@@          J         READIN          PW
)@@G@@  .   @E@@@@.    ****************************************************   PX
)@@G@@@[@@@@.     @^@@@@.         RELOAD COMMAND@[@@@@.     @E@@@@.    *******PY
)@@G@@*********************************************   @C@@@@RELOAD$.          PZ
)@@G@@                    . $H      @D@@@@          LX,U      X10,(+8,020,,,,0QA
)@@G@@) . $P READ C8    @B@@@@          LMJ       X11,CF$AM         .   @E@@@@QB
)@@G@@          LX,H2     X1,C8             . $P GET C8 ADDR      @E@@@@      QC
)@@G@@    TZ        9,X1              . $T SEE IF C10 EXISTS@E@@@@          J QD
)@@G@@        C10$C12           . $A YES,C10$C12 NO   @D@@@@          LX,U    QE
)@@G@@  X10,(+3,020,,,,0) . $P READ C3    @B@@@@          LMJ       X11,CF$AM QF
)@@G@@        .   @D@@@@          LX,U      X10,(+5,020,,,,0) . $P READ C5    QG
)@@G@@@B@@@@          LMJ       X11,CF$AM         .   @D@@@@          LX,U    QH
)@@G@@  X10,(+6,020,,,,0) . $P READ C6    @B@@@@          LMJ       X11,CF$AM QI
)@@G@@        .   @B@@@@          J         RELOAD$0          .   @]@@@@C10$C1QJ
)@@G@@2.    @D@@@@          LX,U      X10,(+10,020,,,,0) . $P READ C10  @B@@@@QK
)@@G@@          LMJ       X11,CF$AM         .   @D@@@@          LX,U      X10,QL
)@@G@@(+11,020,,,,0) . $P READ C11  @B@@@@          LMJ       X11,CF$AM       QM
)@@G@@  .   @D@@@@          LX,U      X10,(+12,020,,,,0) . $P READ C12  @B@@@@QN
)@@G@@          LMJ       X11,CF$AM         .   @G@@@@          LA        A0,CQO
)@@G@@10            . $P MOVE C10-C12 TO C3,C5,C6     @B@@@@          SA      QP
)@@G@@  A0,C3             .   @G@@@@          LA        A0,C11            . $PQQ
)@@G@@ MOVE C10-C12 TO C3,C5,C6     @B@@@@          SA        A0,C5           QR
)@@G@@  .   @G@@@@          LA        A0,C12            . $P MOVE C10-C12 TO CQS
)@@G@@3,C5,C6     @B@@@@          SA        A0,C6             .   @]@@@@RELOADQT
)@@G@@$0.   @I@@@@          LX,U      X10,(+18,020,,,,0)                      QU
)@@G@@            . $P REA    @B@@@@          LMJ       X11,CF$AM         .   QV
)@@G@@@G@@@@          LA        A0,LAST$D         . $P MCORE$ BUFFER FOR Z1 TAQW
)@@G@@BLE   @B@@@@          AA,U      A0,ZAP1           .   @B@@@@          ERQX
)@@G@@        MCORE$            .   @B@@@@          LA        A1,LAST$D       QY
)@@G@@  .   @B@@@@          SA        A0,LAST$D         .   @E@@@@          AAQZ
)@@G@@,U      A1,1              . $P PUT Z1 TBL ADDR  @B@@@@          SA,H2   RA
)@@G@@  A1,Z1             .   @E@@@@          SZ        ZCOUNT            . $PRB
)@@G@@ RESET Z1 WORD    @^@@@@          SZ,H1     Z1  @B@@@@          SZ      RC
)@@G@@  A3                .   @B@@@@          LX,U      X1,A3             .   RD
)@@G@@@B@@@@          LX        X2,Z1             .   @B@@@@          LXI,U   RE
)@@G@@  X2,1              .   @E@@@@          LR,U      R1,ZAP1           . $PRF
)@@G@@ ZERO OUT TBL AREA@B@@@@          BT        X2,,*X1           .   @[@@@@RG
)@@G@@.     @C@@@@LOAD1                                 . $H      @E@@@@      RH
)@@G@@    P$RINT    (PF 1,5,READYR)   . $P SEND READ. MSG   @]@@@@$(4).       RI
)@@G@@@]@@@@INPUT2    +0@^@@@@          +ENDR,LINELNG @]@@@@$(1).       @E@@@@RJ
)@@G@@          LX,U      X10,INPUT2        . $P GET INPUT PKT    @E@@@@      RK
)@@G@@    LMJ       X11,INPUT         . $W CALL INPUT RTN   @B@@@@          SLRL
)@@G@@J       ECHO              .   @B@@@@          LSSL      A0,18           RM
)@@G@@  .   @E@@@@          JZ        A0,LOAD1          . $T BLANK INPUT      RN
)@@G@@@E@@@@                                      . $A YES,LOAD1 NO     @G@@@@RO
)@@G@@          LXM,U     A0,LINE           . $P SAVE NUMBER OF WORS IN'ED    RP
)@@G@@@E@@@@          LMJ       X11,PARSE         . $W PARSE THE INPUT  @E@@@@RQ
)@@G@@          LA        A0,PBUFR          . $P GET FIRST WORD   @E@@@@      RR
)@@G@@    TNE       A0,('ENDR  ')     . $T IS IT 'ENDR'     @E@@@@          J RS
)@@G@@        ENDR0             . $A YES,ENDR0 NO     @F@@@@          LA      RT
)@@G@@  A0,PBUFR+5        . $P GET THE SUBCOMMAND     @D@@@@          TNE     RU
)@@G@@  A0,('%     ')     . $T IS IT '%'  @E@@@@          J         PERCENT   RV
)@@G@@        . $A YES,PERCENT NO   @E@@@@          TNE       A0,('FROM  ')   RW
)@@G@@  . $T IS IT 'FROM'     @E@@@@          J         FROM              .$A RX
)@@G@@YES,FROM NO       @E@@@@          TNE       A0,('IN    ')     . $T IS ITRY
)@@G@@ 'IN'       @E@@@@          J         INPAGE            .$A YES,INPAGE NRZ
)@@G@@O     @E@@@@          P$RINT    (PF 1,5,INVAL)    . $P SEND ERROR MSG   SA
)@@G@@@C@@@@          J         LOAD1             . $J      @C@@@@ENDR        SB
)@@G@@                          . $H      @E@@@@          SZ        TERMITR   SC
)@@G@@        .$P SET END INPUT SW  @C@@@@ENDR0                               SD
)@@G@@  . $H      @G@@@@          LA,U      A0,ZAP1           . $P SET CORE RESE
)@@G@@LEASE COUNT       @D@@@@          SA        A0,RELCNT         . $P SAVE SF
)@@G@@IT    @D@@@@          TNZ       ZCOUNT            . $T ANY ENTRY  @E@@@@SG
)@@G@@          J         ENDR9             . $A YES NO,ENDR9     @B@@@@      SH
)@@G@@    LR        R3,ZCOUNT         .   @E@@@@          JGD       R3,$+1    SI
)@@G@@        . $P SET LOOP COUNT   @E@@@@          LX,H2     X1,Z1           SJ
)@@G@@  . $P GET Z1 TBL ADDR  @B@@@@          LXI,U     X1,1              .   SK
)@@G@@@C@@@@ENDR1                                 . $H      @E@@@@          LASL
)@@G@@,H2     A0,1,X1           . $P GET IN COUNT     @G@@@@          MSI,U   SM
)@@G@@  A0,2              . $P COMPUTE NUMBER OF WORDS      @G@@@@          AASN
)@@G@@,H1     A0,1,X1           . $P ADD NUMBER OF FROM COUNT     @F@@@@      SO
)@@G@@    AA,U      A0,2              . $P COMPUTE ENTRY LENGTH   @E@@@@      SP
)@@G@@    LA,H1     A1,Z1             . $P UPDATE Z1 LENGTH @B@@@@          AASQ
)@@G@@        A1,A0             .   @B@@@@          SA,H1     A1,Z1           SR
)@@G@@  .   @F@@@@          LA        A1,RELCNT         . $P UPDATE RELEASE COSS
)@@G@@UNT   @B@@@@          ANA       A1,A0             .   @B@@@@          SAST
)@@G@@        A1,RELCNT         .   @E@@@@          JGD       R3,$+2          SU
)@@G@@  . $T ANY MORE ENTRY   @E@@@@          J         ENDR9             . $ASV
)@@G@@ YES NO,ENDR9     @E@@@@          SA,T3     A0,0,X1           . $P SAVE SW
)@@G@@LINK FIELD  @G@@@@          LX        X3,X1             . $P MOVE UP ALLSX
)@@G@@ OTHER ENTRIES    @B@@@@          AX        X1,A0             .   @E@@@@SY
)@@G@@          LX        X2,X1             . $P SET UP BT REG'S  @B@@@@      SZ
)@@G@@    AX,U      X3,ZAP2           .   @B@@@@          LA        A0,LAST$D TA
)@@G@@        .   @B@@@@          LXI,U     A0,1              .   @G@@@@      TB
)@@G@@    ANA       A0,X3             . $P GET WORD COUNT FOR TRANSFER  @B@@@@TC
)@@G@@          AA,U      A0,1              .   @B@@@@          LR        R1,ATD
)@@G@@0             .   @B@@@@          BT        X2,,*X3           .   @C@@@@TE
)@@G@@          J         ENDR1             . $J ENDR1@[@@@@.     @C@@@@ENDR9 TF
)@@G@@                                . $H      @G@@@@          LA        A0,LTG
)@@G@@AST$D         . $P COMPUTE RELEASE CORE ADDR    @B@@@@          ANA     TH
)@@G@@  A0,RELCNT         .   @D@@@@          SA        A0,LAST$D         . $PTI
)@@G@@ SAVE IT    @ @@@@          ER        LCORE$    @F@@@@          LMJ     TJ
)@@G@@  X11,F$ASG         . $P ASG,A ALL FILES(DB)    @E@@@@          LMJ     TK
)@@G@@  X11,RELOAD        . $W PERFORM RELOAD   @E@@@@          LA        A0,CTL
)@@G@@4             . $P MOVE C4 TO C16&C8@B@@@@          SA        A0,C16    TM
)@@G@@        .   @B@@@@          LX,H2     X1,C8             .   @B@@@@      TN
)@@G@@    SA        A0,15,X1          .   @D@@@@          LX,U      X10,(+8,01TO
)@@G@@0,,,,0) . $P WRITE C8   @B@@@@          LMJ       X11,CF$AM         .   TP
)@@G@@@E@@@@          LX,U      X10,(+16,010,,,,0) . $P WRITE C16       @B@@@@TQ
)@@G@@          LMJ       X11,CF$AM         .   @E@@@@          SLJ       TIMETR
)@@G@@OUT           . $P GET STATISTICS   @E@@@@          SLJ       BANK      TS
)@@G@@        . $P RESET I&D BANK   @D@@@@          TZ        TERMITR         TT
)@@G@@  . $T END INPUT  @E@@@@          J         READIN+1          . $A YES NTU
)@@G@@O,READIN    @D@@@@          J         ENDREAD           . $J ENDREAD    TV
)@@G@@@[@@@@.     @C@@@@PERCENT                               . $H      @E@@@@TW
)@@G@@          SLJ       CHKRCD            . $P CHECK RECORD NAME@E@@@@      TX
)@@G@@    LA        A0,PBUFR+10       . $P GET THE NUMBER   @E@@@@          SLTY
)@@G@@J       XCON              . $P CONVERT TO BINARY@E@@@@          JZ      TZ
)@@G@@  A2,PERERR1        . $T >0 AND <=100     @B@@@@          TG,U      A2,1UA
)@@G@@01            .   @E@@@@          J         PERERR1           . $A YES NUB
)@@G@@O,PERERR1   @E@@@@          SLJ       CKZTAB            . $P GET TBL ENTUC
)@@G@@RY    @E@@@@          SA,T2     A2,0,X1           . $P INSERT INTO TBL  UD
)@@G@@@C@@@@          J         LOAD1             . $J      @[@@@@.     @[@@@@UE
)@@G@@.     @[@@@@.     @C@@@@FROM                                  . $H      UF
)@@G@@@E@@@@          SLJ       CHKRCD            . $P CHECK RECORD NAME@F@@@@UG
)@@G@@          LA        A0,PBUFR+15       . $T SEE IF 'TO' MISSING    @B@@@@UH
)@@G@@          TE        A0,('TO    ')     .   @E@@@@          J         FORMUI
)@@G@@ERR           . $A YES,FORMERR NO   @F@@@@          DL        A0,PBUFR+1UJ
)@@G@@0       . $P GET FROM AREA NAME     @C@@@@          TNE       A0,('     UK
)@@G@@ ')     . $T BLANK@E@@@@          J         FORMERR           . $A YES,FUL
)@@G@@ORMERR NO   @E@@@@          SLJ       CHKAREA           . $P SEARCH AREAUM
)@@G@@ TBL  @F@@@@          LA        A12,A13           . $P SAVE AREA CODE INUN
)@@G@@ A12  @E@@@@          DL        A0,PBUFR+20       . $P GET TO AREA NAME UO
)@@G@@@C@@@@          TNE       A0,('      ')     . $T BLANK@C@@@@          J UP
)@@G@@        FORMERR           . $A YES  @B@@@@          SLJ       CHKAREA   UQ
)@@G@@        .   @F@@@@          TZ,S1     8,X9              . $T IS IT A AREUR
)@@G@@AP AREA     @E@@@@          J         BADTOA            . $A YES,BADTOA US
)@@G@@NO    @E@@@@                                      . $ AREA CODE IN A13  UT
)@@G@@@E@@@@          SLJ       CKZTAB            . $P SEARCH TBL ENTRY @G@@@@UU
)@@G@@          LX        X2,X1             . $P CHECK IN AND FROM COUNT      UV
)@@G@@@E@@@@          LA,H2     A0,1,X1           . $P GET IN COUNT     @B@@@@UW
)@@G@@          MSI,U     A0,2              .   @G@@@@          LR,H1     R1,1UX
)@@G@@,X1           . $P GET FROM COUNT AS LOOP COUNT @F@@@@          AX      UY
)@@G@@  X2,A0             . $P GET FROM ENTRY ADDR    @B@@@@          AX,U    UZ
)@@G@@  X2,2              .   @C@@@@FROMLP                                . $HVA
)@@G@@      @E@@@@          TNZ       0,X2              . $T ENTRY EMPTY      VB
)@@G@@@E@@@@          J         FROMIN            . $A YES,FROMIN NO    @E@@@@VC
)@@G@@          TNE,T2    A12,0,X2          . $T ANY DUPLICATE    @E@@@@      VD
)@@G@@    J         FROMERR2          . $A YES,FROMERR2 NO  @E@@@@          AXVE
)@@G@@,U      X2,1              . $P NXT ENTRY ADDR   @C@@@@          J       VF
)@@G@@  FROMLP            . $J      @C@@@@FROMIN                              VG
)@@G@@  . $H      @F@@@@          SA,T2     A12,0,X2          . $P SAVE FROM AVH
)@@G@@REA CODE    @E@@@@          SA,T3     A13,0,X2          . $P SAVE TO AREVI
)@@G@@A CODE@E@@@@          LA,U      A0,1              . $P UPDATE FROM COUNTVJ
)@@G@@@B@@@@          AA,H1     A0,1,X1           .   @B@@@@          SA,H1   VK
)@@G@@  A0,1,X1           .   @E@@@@          J         LOAD1             . $JVL
)@@G@@ READ NXT COMMAND @[@@@@.     @[@@@@.     @[@@@@.     @C@@@@INPAGE      VM
)@@G@@                          . $H      @E@@@@          SLJ       CHKRCD    VN
)@@G@@        . $P CHECK RECORD NAME@E@@@@          TZ        A15             VO
)@@G@@  . $T A CALC REOCRD    @E@@@@          J         INERR1            . $AVP
)@@G@@ YES,INERR1 NO    @G@@@@          E$DIT     EDPKT             . $P STRIPVQ
)@@G@@ OFF BLANKS ON INPUT    @E@@@@          LR,U      R3,23             . $PVR
)@@G@@ LOOP COUNT       @A@@@@          LX        X9,(2,PBUFR+10) @C@@@@INLOOPVS
)@@G@@1                               . $H      @E@@@@          DL        A0,0VT
)@@G@@,*X9          . $P GET INPUT WORDS  @B@@@@          LMJ       X11,EFD2$ VU
)@@G@@        .   @A@@@@          JGD       R3,INLOOP1      @#@@@@          E$VV
)@@G@@DITX  @E@@@@          LX        X1,(1,PRINT)      . $P SAVE IMG IN PBUFRVW
)@@G@@@B@@@@          LX        X2,(1,PBUFR)      .   @B@@@@          LR,U    VX
)@@G@@  R1,14             .   @B@@@@          BT        X2,,*X1           .   VY
)@@G@@@ @@@@          E$DIT     EDPKT     @F@@@@          LA,U      A0,'('    VZ
)@@G@@        . $P SEARCH FOR AREA NAME   @F@@@@          SA,S2     A0,EDPKT  WA
)@@G@@        . $P SET '(' AS DELIMITER   @E@@@@          SA,S1     A0,PBUFR+1WB
)@@G@@5       . $P SET SAFETY STOP  @C@@@@          E$MSG     PBUFR           WC
)@@G@@  . $P SCAN @E@@@@          LA,H2     A0,EDPKT+1        . $P GET STOP ADWD
)@@G@@DR    @E@@@@          TNE,U     A0,PBUFR+15       . $T '(' MISSING      WE
)@@G@@@E@@@@          J         INERR2            . $A YES,INERR2 NO    @E@@@@WF
)@@G@@          DL        A0,PRINT          . $P GET THE AREA NAME@E@@@@      WG
)@@G@@    SLJ       CHKAREA           . $W CHECK AREA NAME  @E@@@@            WH
)@@G@@                          . $ AREA CODE IN A13  @H@@@@          DL      WI
)@@G@@  A0,('            ')                                 .     @E@@@@      WJ
)@@G@@    DS        A0,PRINT          . RESET PRINT BUFFER  @D@@@@          E$WK
)@@G@@COL     0                 . $P RESET COL  @E@@@@          LA,U      A0,'WL
)@@G@@,'            . $P SCAN FOR N1      @G@@@@          SA,S2     A0,EDPKT  WM
)@@G@@        . $P SET ',' AS THE DELIMITER     @E@@@@          SA,S2     A0,PWN
)@@G@@BUFR+15       . SET SAFETY STOP     @E@@@@          E$MSGR              WO
)@@G@@        . $P  RESUME SCAN     @G@@@@          LA,H2     A0,EDPKT+1      WP
)@@G@@  . $P GET THE SCAN STOP ADDR       @E@@@@          TNE,U     A0,PBUFR+1WQ
)@@G@@5       . $T ',' MISSING      @E@@@@          J         INERR2          WR
)@@G@@  . $A YES,INERR2 NO    @E@@@@          LA        A0,PRINT          . $PWS
)@@G@@ GET THE N1       @E@@@@          SLJ       XCON              . $P CONVEWT
)@@G@@RT TO BINARY@E@@@@          LA        A12,A2            . $P SAVE IT IN WU
)@@G@@A12   @B@@@@          DL        A0,('            ')   @B@@@@          DSWV
)@@G@@        A0,PRINT          .   @^@@@@          E$COL     0   @E@@@@      WW
)@@G@@    LA,U      A0,')'            . $P SCAN FOR N2      @F@@@@          SAWX
)@@G@@,S2     A0,EDPKT          . $P USE ')' AS DELIMITER   @E@@@@          SAWY
)@@G@@,S3     A0,PBUFR+15       . $P SET SAFFETY STOP @E@@@@          E$MSGR  WZ
)@@G@@                    . $P RESUME SCAN      @G@@@@          LA,H2     A0,EXA
)@@G@@DPKT+1        . $P GET THE SCAN STOP ADDR       @E@@@@          TNE,U   XB
)@@G@@  A0,PBUFR+15       . $T ')' MISSING      @E@@@@          J         INERXC
)@@G@@R2            . $A YES,INERR2 NO    @D@@@@          LA        A0,PRINT  XD
)@@G@@        . $P GET N2     @E@@@@          SLJ       XCON              . $PXE
)@@G@@ CONVERT TO BINARY@D@@@@          TLE       A2,A12            . $T N1 >=XF
)@@G@@N2    @E@@@@          J         INERR3            . $A YES NO,INERR3    XG
)@@G@@@E@@@@          LA        A11,A2            . $P SAVE N2 IN A11   @F@@@@XH
)@@G@@          SLJ       CKZTAB            . $P SEARCH FOR TBL ENTRY   @[@@@@XI
)@@G@@.     @[@@@@.     @E@@@@.         IN ORDER TO INSERT 'IN' ENTRY 'FROM' EXJ
)@@G@@NTRIES MUST @A@@@@.         BE SHIFTED DOWN 2 WORDS   @[@@@@.     @E@@@@XK
)@@G@@          LX        X2,X1             . $P TBL ENTRY IN X2  @B@@@@      XL
)@@G@@    AX,U      X2,2              .   @E@@@@          TNZ,H2    1,X1      XM
)@@G@@        . $T ANY 'IN' ENTRY   @E@@@@          J         SHIFTFM         XN
)@@G@@  . $A YES NO,SHIFTFM   @F@@@@          LR,H2     R3,1,X1           . $PXO
)@@G@@ GET 'IN' ENTRY COUNT   @E@@@@          JGD       R3,$+1            . $PXP
)@@G@@ SET LOOP COUNT   @C@@@@INLOOP2                               . $H      XQ
)@@G@@@G@@@@          TNE,T3    A13,0,X2          . $T SEE IF DUPLICATE AREA EXR
)@@G@@NTRY  @E@@@@          J         INERR4            . $A YES,INERR4 NO    XS
)@@G@@@E@@@@          AX,U      X2,2              . $P NXT ENTRY ADDR   @B@@@@XT
)@@G@@          JGD       R3,INLOOP2        .   @C@@@@SHIFTFM                 XU
)@@G@@              . $H      @E@@@@          TNZ,H1    1,X1              . $TXV
)@@G@@ ANY 'FROM' ENTRY @E@@@@          J         INSTPGS           . $A YES NXW
)@@G@@O,INSTPGS   @E@@@@          LX        X3,X2             . $P SET BT REG'XX
)@@G@@S     @B@@@@          AX,H1     X3,1,X1           .   @F@@@@          ANXY
)@@G@@X,U     X3,1              . $P COMPUTE BOTTOM ADDR    @ @@@@          LXXZ
)@@G@@I,U     X3,-1     @B@@@@          LX        X4,X3             .   @B@@@@YA
)@@G@@          AX,U      X3,2              .   @E@@@@          LR,H1     R1,1YB
)@@G@@,X1           . $P 'FROM' COUNT     @B@@@@          BT        X3,,*X4   YC
)@@G@@        .   @[@@@@.     @C@@@@INSTPGS                               . $HYD
)@@G@@      @E@@@@          SA        A13,0,X2          . $P SAVE AREA CODE   YE
)@@G@@@D@@@@          SA,H1     A12,1,X2          . $P SAVE PL    @D@@@@      YF
)@@G@@    SA,H2     A11,1,X2          . $P SAVE PU    @E@@@@          LA,U    YG
)@@G@@  A0,1              . $P UPDATE IN COUNT  @B@@@@          AA,H2     A0,1YH
)@@G@@,X1           .   @B@@@@          SA,H2     A0,1,X1           .   @B@@@@YI
)@@G@@          J         LOAD1             .   @[@@@@.     @C@@@@CHKRCD    +0YJ
)@@G@@                          . $H      @G@@@@          LX,H2     X1,C5     YK
)@@G@@        . $P GET RECORD TBL(C5) ADDR      @]@@@@CHKRCD0.    @G@@@@      YL
)@@G@@    DL        A0,2,X1        . $P GET FIRST 2 WORDS OF RECORD NAME@C@@@@YM
)@@G@@          DTE       A0,PBUFR          . $T MATCH@E@@@@          J       YN
)@@G@@  NXTENT            . $A YES NO,NXTENT    @E@@@@          DL        A0,4YO
)@@G@@,X1           . $P GET 3RD & 4TH    @C@@@@          DTE       A0,PBUFR+2YP
)@@G@@        . $T MATCH@E@@@@          J         NXTENT            . $A YES NYQ
)@@G@@O,NXTENT    @E@@@@          LA        A0,6,X1           . $P GET LAST WOYR
)@@G@@RD    @B@@@@          TE        A0,PBUFR+4        .   @B@@@@          J YS
)@@G@@        NXTENT            .   @E@@@@          LA,T1     A14,0,X1        YT
)@@G@@  . $P SAVE RECORD CODE @E@@@@          LA,S3     A15,0,X1          . $PYU
)@@G@@ SET CALC SW      @D@@@@          J         *CHKRCD           . $J RETURYV
)@@G@@N     @[@@@@.     @]@@@@NXTENT.     @E@@@@          TNZ,T3    0,X1      YW
)@@G@@        . $T ANY MORE ENTRY   @E@@@@          J         NORCD           YX
)@@G@@  . $A YES NO,NORCD     @F@@@@          AX,T3     X1,0,X1           . $PYY
)@@G@@ GET NXT ENTRY ADDR     @B@@@@          J         CHKRCD0           .   YZ
)@@G@@@]@@@@NORCD.      @ @@@@          E$DIT     EDPKT     @A@@@@          E$ZA
)@@G@@FD2     ('RECORD-NAME:')@^@@@@          E$SKIP    1   @^@@@@          LAZB
)@@G@@,U      A0,5@ @@@@          SA,S2     A0,EDPKT  @ @@@@          E$MSG   ZC
)@@G@@  PBUFR     @^@@@@          E$SKIP    1   @A@@@@          E$COPY    35,NZD
)@@G@@OTSPC1      @#@@@@          E$DITX  @A@@@@          P$RINT    (PF 1,14,PZE
)@@G@@RINT) @B@@@@          J         ENDIT             .   @]@@@@CHKAREA   +0ZF
)@@G@@@F@@@@          LX,H2     X9,C3             . $P GET AREA TBL ADDR(C3)  ZG
)@@G@@@]@@@@CHKAREA0.   @E@@@@          DTE       A0,1,X9           . $T AREA ZH
)@@G@@NAME MATCH  @E@@@@          J         NXTAREA           . $A YES NO,NXTAZI
)@@G@@REA   @E@@@@          LA,T1     A13,0,X9          . $P GET AREA CODE    ZJ
)@@G@@@C@@@@          J         *CHKAREA          . $J      @]@@@@NXTAREA.    ZK
)@@G@@@E@@@@          TNZ,T3    0,X9              . $T ANY MORE ENTRY   @E@@@@ZL
)@@G@@          J         NOAREA            . $A YES NO,NOAREA    @F@@@@      ZM
)@@G@@    AX,T3     X9,0,X9           . $P GET NXT ENTRY ADDR     @ @@@@      ZN
)@@G@@    J         CHKAREA0  @]@@@@NOAREA.     @E@@@@          DS        A0,AZO
)@@G@@NAMEX         . $P SAVE AREA NAME   @ @@@@          E$DIT     EDPKT     ZP
)@@G@@@A@@@@          E$FD2     ('AREA-NAME:')  @^@@@@          E$SKIP    1   ZQ
)@@G@@@ @@@@          E$FD2     ANAMEX    @^@@@@          E$SKIP    1   @A@@@@ZR
)@@G@@          E$COPY    33,NOTSPC2      @#@@@@          E$DITX  @A@@@@      ZS
)@@G@@    P$RINT    (PF 1,14,PRINT) @ @@@@          J         LOAD1     @[@@@@ZT
)@@G@@.     @[@@@@.     @B@@@@CKZTAB    +0                          .   @E@@@@ZU
)@@G@@          LX,H2     X1,Z1             . $P GET Z1 TBL ADDR  @D@@@@      ZV
)@@G@@    TNZ       ZCOUNT            . $T ANY ENTRY  @E@@@@          J       ZW
)@@G@@  Z1ZERO            . $A YES NO,Z1ZERO    @E@@@@          LR        R1,ZZX
)@@G@@COUNT         . $P LOOP COUNT       @D@@@@          LXI,U     X1,ZAP2   ZY
)@@G@@        . $P TBL SIZE   @D@@@@          SE,T1     A14,0,*X1         . $TZZ
)@@G@@ TBL EXIST  @E@@@@          J         Z1ZERO            . $A YES NO,Z1ZEAA
)@@G@@RO    @E@@@@          ANX,U     X1,ZAP2           . $P GET TBL ADDR     AB
)@@G@@@C@@@@          J         *CKZTAB           . $J      @[@@@@.     @]@@@@AC
)@@G@@Z1ZERO.     @E@@@@          LA,U      A0,1              . $P UPDATE ZCOUAD
)@@G@@NT    @A@@@@          AA        A0,ZCOUNT       @A@@@@          SA      AE
)@@G@@  A0,ZCOUNT       @B@@@@          SZ        0,X1              .   @E@@@@AF
)@@G@@          SA,T1     A14,0,X1          . $P SAVE RECORD CODE @B@@@@      AG
)@@G@@    SZ        1,X1              .   @C@@@@          J         *CKZTAB   AH
)@@G@@        . $J      @]@@@@INERR1.     @B@@@@          LA        A0,INPKT1 AI
)@@G@@        .   @B@@@@          J         INERR9            .   @]@@@@INERR2AJ
)@@G@@.     @B@@@@          LA        A0,INPKT2         .   @B@@@@          J AK
)@@G@@        INERR9            .   @]@@@@INERR3.     @B@@@@          LA      AL
)@@G@@  A0,INPKT3         .   @B@@@@          J         INERR9            .   AM
)@@G@@@]@@@@INERR4.     @B@@@@          LA        A0,INPKT4         .   @B@@@@AN
)@@G@@          J         INERR9            .   @]@@@@PERERR1.    @B@@@@      AO
)@@G@@    LA        A0,PERPKT1        .   @B@@@@          J         INERR9    AP
)@@G@@        .   @]@@@@FORMERR.    @B@@@@          LA        A0,FORMPKT      AQ
)@@G@@  .   @B@@@@          J         INERR9            .   @]@@@@FROMERR2.   AR
)@@G@@@B@@@@          LA        A0,FORMPKT2       .   @B@@@@          J       AS
)@@G@@  INERR9            .   @]@@@@INERR9.     @ @@@@          ER        PRINAT
)@@G@@T$    @B@@@@          J         LOAD1             .   @]@@@@BADTOA.     AU
)@@G@@@ @@@@          E$DIT     EDPKT     @^@@@@          E$FD2     1,X9@A@@@@AV
)@@G@@          E$COPY    31,BADTOMSG     @#@@@@          E$DITX  @B@@@@      AW
)@@G@@    LA        A0,(PF 1,14,PRINT)    @ @@@@          J         INERR9    AX
)@@G@@@E@@@@.    ****************************************************   @[@@@@AY
)@@G@@.     @A@@@@.         SCAN AND UNLOAD COMMANDS  @[@@@@.     @E@@@@.    *AZ
)@@G@@***************************************************   @C@@@@SCAN$       BA
)@@G@@                          . $H      @G@@@@          SLJ       SCANTBLR  BB
)@@G@@        . $P READ C TABLES FOR SCAN       @F@@@@          LMJ       X11,BC
)@@G@@F$ASG         . $P ASG,A ALL FILES(DB)    @E@@@@          LMJ       X11,BD
)@@G@@SCAN          . $P PERFORM SCAN     @E@@@@          SLJ       SCANTBLW  BE
)@@G@@        . $P WRITE C TABLES   @ @@@@          J         READIN    @[@@@@BF
)@@G@@.     @^@@@@.         UNLOAD COMMAND@[@@@@.     @C@@@@UNLOAD$           BG
)@@G@@                    . $H      @E@@@@          SLJ       SCANTBLR        BH
)@@G@@  . $P READ C TABLES    @]@@@@ULOAD1.     @B@@@@          P$RINT    (PF BI
)@@G@@1,5,READYU)   .   @]@@@@$(4).       @]@@@@INPUT3    +0@^@@@@          +EBJ
)@@G@@NDU,LINELNG @]@@@@$(1).       @E@@@@          LX,U      X10,INPUT3      BK
)@@G@@  . $P GET INPUT PKT    @E@@@@          LMJ       X11,INPUT         . $WBL
)@@G@@ CALL INPUT RTN   @B@@@@          SLJ       ECHO              .   @E@@@@BM
)@@G@@          LSSL      A0,18             . $T EMPTY LINE       @E@@@@      BN
)@@G@@    JZ        A0,ULOAD1         . $A YES,ULOAD1       @E@@@@          LXBO
)@@G@@M,U     A0,LINE           . $P SET UP FOR PARSER@B@@@@          LMJ     BP
)@@G@@  X11,PARSE         .   @B@@@@          LA        A0,PBUFR          .   BQ
)@@G@@@F@@@@          TNE       A0,('ENDU  ')     . $T END UNLOAD SUBCOMMAND  BR
)@@G@@@E@@@@          J         ENDU0             . $A YES,ENDU0 NO     @B@@@@BS
)@@G@@          LA        A0,PBUFR+5        .   @E@@@@          TNE       A0,(BT
)@@G@@'VIA   ')     . $T A VIA COMMAND    @E@@@@          J         VIA       BU
)@@G@@        . $A YES,VIA NO       @E@@@@          TNE       A0,('TO    ')   BV
)@@G@@  . $T A TO COMMAND     @E@@@@          J         TOFILE            . $ABW
)@@G@@ YES,TOFILE NO    @B@@@@          P$RINT    (PF 1,5,INVALU)   .   @B@@@@BX
)@@G@@          J         ULOAD1            .   @]@@@@ENDU.       @E@@@@      BY
)@@G@@    SZ        TERMITU           . $P SET EOF SW       @]@@@@ENDU0.      BZ
)@@G@@@F@@@@          LMJ       X11,F$ASG         . $P ASG,A ALL FILES(DB)    CA
)@@G@@@F@@@@          LMJ       X11,UNLOAD        . $P CALL UNLOAD PROCESS    CB
)@@G@@@B@@@@          SLJ       SCANTBLW          .   @F@@@@          TZ      CC
)@@G@@  KEYSORT           . $T SEE IF SORT REQUIRED   @E@@@@          SLJ     CD
)@@G@@  DOSORT            . $A YES,DOSORT NO    @C@@@@          TZ        TERMCE
)@@G@@ITU           . $T EOF  @E@@@@          J         READIN            . $ACF
)@@G@@ YES NO,READIN    @B@@@@          J         ENDIT             .   @E@@@@CG
)@@G@@.    ****************************************************   @[@@@@.     CH
)@@G@@@A@@@@.         INTERNAL SORT COMMAND     @[@@@@.     @E@@@@.    *******CI
)@@G@@*********************************************   @C@@@@DOSORT    +0      CJ
)@@G@@                    . $H      @F@@@@          SLJ       TIMEOUT         CK
)@@G@@  . $P CLOCK OUT FOR UNLOAD   @A@@@@          P$RINT    (PF 3,4,SORTMSG)CL
)@@G@@@E@@@@          SLJ       TIMEIN            . $P CLOCK IN FOR SORT@B@@@@CM
)@@G@@          LA        A0,('SORT  ')     .   @B@@@@          SA        A0,CCN
)@@G@@MDNAME        .   @E@@@@          LA,U      A0,1              . $P SET CCO
)@@G@@OMMAND LEVEL@B@@@@          SA        A0,CMDLVL         .   @E@@@@      CP
)@@G@@    LMJ       X11,SORTKEY       . $P PERFORM KEY SORT @D@@@@          J CQ
)@@G@@        *DOSORT           . $J RETURN     @]@@@@$(4).       @A@@@@SORTMSCR
)@@G@@G   'PROCESSING KEY FILE SORT'@]@@@@TERMITU   +1@B@@@@INVALU    'INVALIDCS
)@@G@@ UNLOAD SUBCOMMAND. '   @C@@@@READYU    'READY.(FOR UNLOAD SUBCOMMAND)' CT
)@@G@@      @]@@@@$(1).       @[@@@@.     @A@@@@.         PROCESS TO SUBCOMMANCU
)@@G@@D     @[@@@@.     @C@@@@TOFILE                                . $H      CV
)@@G@@@E@@@@          SLJ       CHKRCD            . $P CHECK RECORD NAME@E@@@@CW
)@@G@@          LA        A0,PBUFR+10       . $P GET FILE CODE    @E@@@@      CX
)@@G@@    SLJ       XCON              . $P CONV TO BINARY   @B@@@@          SZCY
)@@G@@        A0                .   @G@@@@          LA,U      A1,9            CZ
)@@G@@  . $ NUMBER SHOULD BE 1 THRU 9     @C@@@@          TW        A0,A2     DA
)@@G@@        . $T IS IT@E@@@@          J         BADNUM            . $A YES NDB
)@@G@@O,BADNUM    @D@@@@          TNZ       C18               . $T IS C18 UP  DC
)@@G@@@E@@@@          SLJ       GETC18            . $A YES NO,GETC18    @E@@@@DD
)@@G@@          LX,H2     X1,C18            . $P GET C18 ADDR     @E@@@@      DE
)@@G@@    AX,H1     X1,C18            . $P ENTRY ADDR       @E@@@@          SADF
)@@G@@,T1     A14,,X1           . $P SAVE RECORD CODE @E@@@@          SA,T3   DG
)@@G@@  A2,,X1            . $P SAVE FILE CODE   @G@@@@          LA,H1     A0,CDH
)@@G@@18            . $P UPDATE C18 ENTRY COUNT       @B@@@@          AA,U    DI
)@@G@@  A0,1              .   @B@@@@          SA,H1     A0,C18            .   DJ
)@@G@@@D@@@@          J         ULOAD1            . $J RETURN     @C@@@@BADNUMDK
)@@G@@                                . $H      @A@@@@          P$RINT    (PF DL
)@@G@@1,5,NUMMSG) @B@@@@          J         ULOAD1            .   @[@@@@.     DM
)@@G@@@C@@@@GETC18    +0                          . $H      @E@@@@          LXDN
)@@G@@,U      X1,TBLC18         . $P GET C18 TBL ADDR @E@@@@          SX      DO
)@@G@@  X1,C18            . $P SAVE IN C18      @B@@@@          J         *GETDP
)@@G@@C18           .   @]@@@@$(4).       @^@@@@TBLC18    RES       40  @B@@@@DQ
)@@G@@NUMMSG    'FILE CODE MUST BE 1 THRU 9'    @]@@@@$(1).       @[@@@@.     DR
)@@G@@@A@@@@.         PROCESS VIA SUBCOMMAND    @[@@@@.     @C@@@@VIA         DS
)@@G@@                          . $H      @E@@@@          SLJ       CHKRCD    DT
)@@G@@        . $P CHECK RECORD NAME@B@@@@          LA        A0,A14          DU
)@@G@@  .   @E@@@@          SLJ       CHKC1             . $P SEARCH C1 TBL    DV
)@@G@@@G@@@@          SX        X1,OBJX1          . $P SAVE OBJ RECORD C1 ADDRDW
)@@G@@      @G@@@@          LR,U      R5,3              . $P EXPECT MOST VIA 4DX
)@@G@@ SETS       @E@@@@          SZ        NOSET             . $P RESET EMPTYDY
)@@G@@ SW   @]@@@@SETLOOP.    @F@@@@          LA,U      A0,PBUFR+10       . $PDZ
)@@G@@ GET VIA SET NAME ADDR  @B@@@@          LA,U      A1,5              .   EA
)@@G@@@B@@@@          MSI       A1,R5             .   @B@@@@          AA      EB
)@@G@@  A0,A1             .   @C@@@@          LA        A1,0,A0           . $PEC
)@@G@@      @C@@@@          TNE       A1,('      ')     . $T BLANK@E@@@@      ED
)@@G@@    J         NXTSET            . $A YES,NXTSET NO    @F@@@@          SAEE
)@@G@@        A0,NOSET          . $P SET SW TO INDICATE --  @D@@@@          SLEF
)@@G@@J       CHKC7             . $P SEARCH C7  @E@@@@          SLJ       PUTOEG
)@@G@@BJ            . $P SAVE SET CODE    @E@@@@          LA        A0,A14    EH
)@@G@@        . $P RECORD CODE      @E@@@@          SLJ       CHKC1           EI
)@@G@@  . $P CHECK IN C1      @G@@@@          SX        X1,OBJX1          . $PEJ
)@@G@@ SAVE OBJ RECORD C1 ADDR      @E@@@@          LA,U      A0,020          EK
)@@G@@  . $P SET TRACE BIT    @B@@@@          OR,S3     A0,0,X1           .   EL
)@@G@@@F@@@@          SA,S3     A1,0,X1           . $P RESTORE TYPE FIELD     EM
)@@G@@@G@@@@          SLJ       SEQCNT            . $P GET SEQ NO.,& SET ENTRYEN
)@@G@@ ADDR @]@@@@NXTSET.     @F@@@@          SX        X11,KEYSORT       . $PEO
)@@G@@ SET SORT KEY FILE IND  @F@@@@          JGD       R5,SETLOOP        . $TEP
)@@G@@ DONE WITH ALL SETS     @D@@@@          TZ        NOSET             . $TEQ
)@@G@@ ANY SET    @B@@@@          J         ULOAD1            .   @A@@@@      ER
)@@G@@    P$RINT    (PF 1,3,NULLSET)@ @@@@          J         ULOAD1    @[@@@@ES
)@@G@@.     @E@@@@.         RECORD SPECIFIED WILL BE UNLOADED VIA ANOTHER SET ET
)@@G@@@[@@@@.     @C@@@@UNLDERR                               . $H      @D@@@@EU
)@@G@@          P$RINT    (PF 1,UNLDMSG9-UMSG90,UMSG90)     @D@@@@          P$EV
)@@G@@RINT    (PF 1,NULLSET-UNLDMSG9,UNLDMSG9)  @^@@@@          ER        ERR$EW
)@@G@@@]@@@@.           @C@@@@.         PUT SET CODE IN THE OBJECT RECORD     EX
)@@G@@@]@@@@.           @C@@@@PUTOBJ    +0                          . $H      EY
)@@G@@@F@@@@          LX        X1,OBJX1          . $P GET RECORD C1 ADDR     EZ
)@@G@@@F@@@@          LA,U      A0,040            . $T UNLOAD VIA SET BIT ON  FA
)@@G@@@E@@@@          AND,S3    A0,0,X1           . $P GET TYPE ENTRY   @G@@@@FB
)@@G@@          JNZ       A1,UNLDERR        . $A YES,AMBIGUOUS UNLOAD COMMD   FC
)@@G@@@F@@@@          OR,S3     A0,0,X1           . $P SET UNLOAD VIA SET     FD
)@@G@@@F@@@@          SA,S3     A1,0,X1           . $P RESTORE TYPE FIELD     FE
)@@G@@@E@@@@          AX,S4     X1,0,X1           . $P SKIP O/A CNT     @G@@@@FF
)@@G@@          TN        1,X1              . $T MAN CONTROL WORD HIGH BIT    FG
)@@G@@@E@@@@          ER        ERR$              . $E INTERNAL ERROR   @E@@@@FH
)@@G@@          SA,T2     A15,1,X1          . $P SAVE THE SET CODE@D@@@@      FI
)@@G@@    J         *PUTOBJ           . $J RETURN     @]@@@@$(4).       @H@@@@FJ
)@@G@@OBJX1     +0                          . INDICATE OBJ RECORD NEEDS SET COFK
)@@G@@DE    @]@@@@KEYSORT   +0@E@@@@UMSG90    'ERROR: LAST SUBCOMMAND CAUSED TFL
)@@G@@HAT AT LEAST'     @E@@@@UNLDMSG9  'ONE RECORD TO BE UNLOADED VIA MORE THFM
)@@G@@AN ONE SET' @ @@@@NULLSET   'SET NAME MISSING'  @]@@@@NOSET     +0@]@@@@FN
)@@G@@$(1).       @[@@@@.     @^@@@@.         SAVE C2,C4,C8 @[@@@@.     @]@@@@FO
)@@G@@SCANTBLW  +0@E@@@@          LX,H2     X1,C8             . $P GET C8 ADDRFP
)@@G@@      @E@@@@          LA        A0,C2             . $P SAVE C2 IN C8    FQ
)@@G@@@B@@@@          SA        A0,1,X1           .   @B@@@@          LA      FR
)@@G@@  A0,C4             .   @B@@@@          SA        A0,3,X1           .   FS
)@@G@@@D@@@@          LA        A0,C18            . $P STORE C18  @C@@@@      FT
)@@G@@    SA        A0,17,X1          . $P IN C8@D@@@@          LX,U      X10,FU
)@@G@@(+8,010,,,,0) . $P WRITE C8   @B@@@@          LMJ       X11,CF$AM       FV
)@@G@@  .   @D@@@@          LX,U      X10,(+2,010,,,,0) . $P WRITE C2   @A@@@@FW
)@@G@@          LMJ       X11,CF$AM       @D@@@@          LX,U      X10,(+4,01FX
)@@G@@0,,,,0) . $P WRITE C4   @A@@@@          LMJ       X11,CF$AM       @I@@@@FY
)@@G@@          LX,U      X10,(+18,010,,,,0)                                  FZ
)@@G@@. $P WRI    @B@@@@          LMJ       X11,CF$AM         .   @^@@@@      GA
)@@G@@    SLJ       BANK@A@@@@          J         *SCANTBLW       @C@@@@SCANTBGB
)@@G@@LR  +0                          . $H      @D@@@@          LX,U      X10,GC
)@@G@@(+8,020,,,,0) . $P READ C8    @B@@@@          LMJ       X11,CF$AM       GD
)@@G@@  .   @E@@@@          TNZ       C8                . $T C8 AVAILABLE     GE
)@@G@@@E@@@@          J         SEQERR            . $A YES NO,SEQERR    @B@@@@GF
)@@G@@          LX,H2     X1,C8             .   @F@@@@          TNZ       2,X1GG
)@@G@@              . $T CHECK IF AREA CMND IN  @B@@@@          J         SEQEGH
)@@G@@RR            .   @[@@@@.     @A@@@@.         READ  C1,C3,C5,C6,C7      GI
)@@G@@@[@@@@.     @F@@@@          SZ        A15               . $P ZERO OUT LOGJ
)@@G@@OP COUNT    @]@@@@SRDLOOP.    @B@@@@          LX,U      X10,SCANC1      GK
)@@G@@  .   @B@@@@          AX        X10,A15           .   @E@@@@          LMGL
)@@G@@J       X11,CF$AM         . $P READ A TBL       @E@@@@          AA,U    GM
)@@G@@  A15,1             . $P UPDATE LOOP COUNT@E@@@@          TNE,U     A15,GN
)@@G@@5             . $T DONE ALL 5       @E@@@@          J         $+2       GO
)@@G@@        . $A YES NO,SRDLOOP   @B@@@@          J         SRDLOOP         GP
)@@G@@  .   @[@@@@.     @A@@@@.         READ C17 IF AVAILABLE     @[@@@@.     GQ
)@@G@@@E@@@@          LX,H2     X1,C8             . $P GET C8 ADDR      @E@@@@GR
)@@G@@          TNZ       16,X1             . $T C17 AVAILABLE    @E@@@@      GS
)@@G@@    J         *SCANTBLR         . $A YES NO,*RETURN   @F@@@@          LXGT
)@@G@@,U      X10,(+17,020,,,,0). $P SET UP TO READ C17     @B@@@@          LMGU
)@@G@@J       X11,CF$AM         .   @D@@@@          LX,U      X10,(+9,020,,,,0GV
)@@G@@) . $P READ C9    @B@@@@          LMJ       X11,CF$AM         .   @D@@@@GW
)@@G@@          J         *SCANTBLR         . $J RETURN     @]@@@@$(4).       GX
)@@G@@@]@@@@SCANC1.     @^@@@@          +1,020,,,,0   @^@@@@          +3,020,,GY
)@@G@@,,0   @^@@@@          +5,020,,,,0   @^@@@@          +6,020,,,,0   @^@@@@GZ
)@@G@@          +7,020,,,,0   @]@@@@$(1).       @[@@@@.     @D@@@@.         SEHA
)@@G@@ARCH C1 TBL, AND RETURN ENTRY ADDR IN X1  @[@@@@.     @]@@@@CHKC1     +0HB
)@@G@@@E@@@@          LX,H2     X1,C1             . $P GET C1 ADDR      @]@@@@HC
)@@G@@CHKC10.     @E@@@@          TE,T1     A0,0,X1           . $T RECORD CODEHD
)@@G@@ MATCH@E@@@@          J         NXTC1             . $A YES NO,NXTC1     HE
)@@G@@@ @@@@          J         *CHKC1    @]@@@@NXTC1.      @D@@@@          TNHF
)@@G@@Z,T3    0,X1              . $T LINK =0    @E@@@@          ER        ERR$HG
)@@G@@              . $A YES,ERR$ NO      @E@@@@          AX,T3     X1,0,X1   HH
)@@G@@        . $P GET NXT ADDR     @D@@@@          J         CHKC10          HI
)@@G@@  . $J TRY NXT    @[@@@@.     @C@@@@.         CHECK VALIDITY OF SET NAMEHJ
)@@G@@ ENTERED    @[@@@@.     @]@@@@CHKC7     +0@G@@@@          LX        X2,AHK
)@@G@@0             . $P GET SET NAME ADDR IN X2      @E@@@@          LX,H2   HL
)@@G@@  X1,C7             . $P GET C7 ADDR      @]@@@@CHKC70.     @G@@@@      HM
)@@G@@    DL        A0,0,X2           . $P 1ST 2 WORDS OF SET NAME      @C@@@@HN
)@@G@@          DTE       A0,1,X1           . $T MATCH@E@@@@          J       HO
)@@G@@  NXTC7             . $A YES NO,NXTSET    @E@@@@          DL        A0,2HP
)@@G@@,X2           . $P CHECK NXT 2 WORDS@B@@@@          DTE       A0,3,X1   HQ
)@@G@@        .   @B@@@@          J         NXTC7             .   @B@@@@      HR
)@@G@@    LA        A0,4,X2           .   @B@@@@          TE        A0,5,X1   HS
)@@G@@        .   @B@@@@          J         NXTC7             .   @E@@@@      HT
)@@G@@    LA,T1     A15,0,X1          . $P SET CODE IN A15  @E@@@@          AXHU
)@@G@@,U      X1,6              . $P UPDATE ENTRY PTR @E@@@@          LR,T2   HV
)@@G@@  R1,0,X1           . $P GET MEMBER COUNT @C@@@@          JGD       R1,$HW
)@@G@@+1            . $P  -1  @E@@@@          LA        A0,A14            . $PHX
)@@G@@ LOOK FOR MEMBER  @F@@@@          LA,T3     A14,0,X1          . $P SAVE HY
)@@G@@THE OWNER CODE    @]@@@@CHKC71.     @E@@@@          TE,T3     A0,1,X1   HZ
)@@G@@        . $T RIGHT MEMBER     @E@@@@          J         NXTMEM          IA
)@@G@@  . $A YES NO,NXTMEM    @D@@@@          J         *CHKC7            . $JIB
)@@G@@ RETURN     @]@@@@NXTMEM.     @C@@@@          AX,U      X1,1            IC
)@@G@@  . $P UP   @C@@@@          JGD       R1,CHKC71         . $T END  @D@@@@ID
)@@G@@          LX        X5,X2             . $P SAVE  X2   @ @@@@          E$IE
)@@G@@DIT     EDPKT     @ @@@@          E$FD2     PBUFR     @ @@@@          E$IF
)@@G@@FD2     PBUFR+2   @ @@@@          E$FD1     PBUFR+4   @A@@@@          E$IG
)@@G@@COPY    25,SETMSG       @^@@@@          E$FD2     0,X5@^@@@@          E$IH
)@@G@@FD2     2,X5@^@@@@          E$FD1     4,X5@^@@@@          E$SKIP    1   II
)@@G@@@ @@@@          E$FD1     ('SET.')  @#@@@@          E$DITX  @A@@@@      IJ
)@@G@@    P$RINT    (PF 1,14,PRINT) @ @@@@          J         ULOAD1    @]@@@@IK
)@@G@@$(4).       @B@@@@SETMSG    ' DOES NOT ASSOCIATE WITH '     @]@@@@$(1). IL
)@@G@@      @]@@@@NXTC7.      @D@@@@          TNZ,T3    0,X1              . $TIM
)@@G@@ LINK = 0   @ @@@@          J         SETERR    @D@@@@          AX,T3   IN
)@@G@@  X1,0,X1           . $P NXT ENTRY  @B@@@@          J         CHKC70    IO
)@@G@@        .   @]@@@@SETERR.     @D@@@@          LX        X5,X2           IP
)@@G@@  . $P SAVE X2    @ @@@@          E$DIT     EDPKT     @ @@@@          E$IQ
)@@G@@FD1     ('SET')   @^@@@@          E$SKIP    1   @^@@@@          E$FD2   IR
)@@G@@  0,X5@^@@@@          E$FD2     2,X5@^@@@@          E$FD1     4,X5@A@@@@IS
)@@G@@          E$COPY    44,SETMSG2      @#@@@@          E$DITX  @A@@@@      IT
)@@G@@    P$RINT    (PF 1,14,PRINT) @ @@@@          J         ULOAD1    @]@@@@IU
)@@G@@$(4).       @E@@@@SETMSG2   ' IS NOT PATICIPATING IN THIS REORGANIZATIONIV
)@@G@@.'    @]@@@@$(1).       @[@@@@.     @C@@@@.         SEARCH C1 TO GET SETIW
)@@G@@ TRACE SEQUENCE   @C@@@@SEQCNT    +0                          . $H      IX
)@@G@@@B@@@@          SZ        X3                .   @G@@@@          SZ      IY
)@@G@@  A0                . $P SET SUMMATION OF SEQ NO. = 0 @E@@@@          LXIZ
)@@G@@        X2,X1             . $P C1 ENTRY ADDR    @D@@@@          LR,S4   JA
)@@G@@  R1,0,X2           . $P GET ZCNT   @E@@@@          AX,U      X2,1      JB
)@@G@@        . $T ANY AUTO SET     @E@@@@          JGD       R1,$+2          JC
)@@G@@  . $A YES NO,MANUAL    @ @@@@          J         MANUAL    @]@@@@CNT0. JD
)@@G@@      @E@@@@          AA,S1     A0,0,X2           . $P ACCUM. SEQ NO.   JE
)@@G@@@E@@@@          TNE,T2    A15,0,X2          . $T IS THIS THE SET  @E@@@@JF
)@@G@@          LX        X3,X2             . $A YES,SAVE THE ADDR@F@@@@      JG
)@@G@@    AX,U      X2,1              . $T DONE WITH AUTO SETS    @E@@@@      JH
)@@G@@    JGD       R1,CNT0           . $A YES NO,CNT0      @]@@@@MANUAL.     JI
)@@G@@@E@@@@          TN        0,X2              . $T ANY MANUAL SET   @E@@@@JJ
)@@G@@          J         NOMAN             . $A YES NO,NOMAN     @E@@@@      JK
)@@G@@    LR,S2     R1,0,X2           . $P GET MAN. SET CNT @B@@@@          JGJL
)@@G@@D       R1,$+2            .   @B@@@@          J         NOMAN           JM
)@@G@@  .   @B@@@@          AX,U      X2,2              .   @]@@@@CNT1.       JN
)@@G@@@E@@@@          AA,S1     A0,0,X2           . $P ACCUM. SEQ NO.   @B@@@@JO
)@@G@@          TNE,T2    A15,0,X2          .   @B@@@@          LX        X3,XJP
)@@G@@2             .   @B@@@@          AX,U      X2,1              .   @B@@@@JQ
)@@G@@          JGD       R1,CNT1           .   @[@@@@.     @A@@@@.         COJR
)@@G@@MPUTE NXT SEQ. NO.      @[@@@@.     @]@@@@NOMAN.      @B@@@@          LAJS
)@@G@@,U      A1,1              .   @]@@@@CNT2.       @F@@@@          JZ      JT
)@@G@@  A0,SETSEQ         . $T END OF COMPUTATION     @B@@@@          ANA     JU
)@@G@@  A0,A1             .   @B@@@@          AA,U      A1,1              .   JV
)@@G@@@B@@@@          JP        A0,CNT2           .   @G@@@@          ER      JW
)@@G@@  ERR$              . $J INTERNAL ERROR  A0 SHOULD NOT@E@@@@SETSEQ.     JX
)@@G@@                          . $    BE NEGATIVE    @B@@@@          TNZ     JY
)@@G@@  X3                .   @G@@@@          ER        ERR$              . $ JZ
)@@G@@SHOULD ALWAYS FOUND THE SET   @E@@@@          TNZ,S1    0,X3            KA
)@@G@@  . $T SEQ NO. EXIST    @E@@@@          SA,S1     A1,0,X3           . $AKB
)@@G@@ YES NO,SET IT    @D@@@@          J         *SEQCNT           . $J RETURKC
)@@G@@N     @[@@@@.     @[@@@@.     @]@@@@TIME.       @A@@@@          LA      KD
)@@G@@  A0,PBUFR+5      @^@@@@          SZ        A1  @A@@@@          TE      KE
)@@G@@  A0,('OFF   ')   @^@@@@          LA,U      A1,1@A@@@@          SA      KF
)@@G@@  A1,SWTIME       @ @@@@          J         READIN+1  @[@@@@.     @[@@@@KG
)@@G@@.     @]@@@@TIMEIN.     @]@@@@          +0@ @@@@          ER        TDATKH
)@@G@@E$    @A@@@@          SA        A0,TIMEST       @A@@@@          LA      KI
)@@G@@  A0,(24,PCT)     @^@@@@          ER        PCT$@ @@@@          LA      KJ
)@@G@@  A0,CPU    @ @@@@          LA        A1,IOCNT  @ @@@@          DS      KK
)@@G@@  A0,CPUIN  @ @@@@          LA        A0,PBUFR  @A@@@@          SA      KL
)@@G@@  A0,CMDNAME      @ @@@@          J         *TIMEIN   @[@@@@.     @[@@@@KM
)@@G@@.     @]@@@@TIMEOUT.    @]@@@@          +0@E@@@@          SZ        CMDLKN
)@@G@@VL            . $P RESET COMMAND LVL@ @@@@          TNZ       SWTIME    KO
)@@G@@@ @@@@          J         *TIMEOUT  @ @@@@          E$DIT     EDPKT     KP
)@@G@@@^@@@@          E$SKIP    6   @ @@@@          E$COPY    11,TMSG1  @A@@@@KQ
)@@G@@          E$COPY    6,CMDNAME       @#@@@@          E$DITX  @A@@@@      KR
)@@G@@    P$RINT    (PF 3,14,PRINT) @ @@@@          E$DIT     EDPKT     @^@@@@KS
)@@G@@          E$SKIP    6   @ @@@@          E$COPY    11,TMSG2  @ @@@@      KT
)@@G@@    ER        TDATE$    @A@@@@          ANA       A0,TIMEST       @A@@@@KU
)@@G@@          LMJ       X11,ETIME$      @^@@@@          E$SKIP    1   @^@@@@KV
)@@G@@          E$CHAR    '(' @ @@@@          E$TIME    TIMEST    @ @@@@      KW
)@@G@@    E$COPY    4,TMSG21  @#@@@@          E$TD    @^@@@@          E$CHAR  KX
)@@G@@  ')' @#@@@@          E$DITX  @A@@@@          P$RINT    (PF 1,14,PRINT) KY
)@@G@@@A@@@@          LA        A0,(24,PCT)     @^@@@@          ER        PCT$KZ
)@@G@@@ @@@@          E$DIT     EDPKT     @^@@@@          E$SKIP    6   @ @@@@LA
)@@G@@          E$COPY    7,TMSG3   @ @@@@          LA        A0,CPU    @ @@@@LB
)@@G@@          ANA       A0,CPUIN  @ @@@@          DSL       A0,36     @^@@@@LC
)@@G@@          DI,U      A0,5@A@@@@          LMJ       X11,EDECV$      @A@@@@LD
)@@G@@          E$COPY    17,TMSG31       @ @@@@          LA        A0,IOCNT  LE
)@@G@@@ @@@@          ANA       A0,IOIN   @A@@@@          LMJ       X11,EDECV$LF
)@@G@@      @#@@@@          E$DITX  @A@@@@          P$RINT    (PF 1,14,PRINT) LG
)@@G@@@ @@@@          J         *TIMEOUT  @[@@@@.     @[@@@@.     @I@@@@XCON  LH
)@@G@@    +0                          . ROUTINE TO CONVERT DECIMAL(FD) TO BINALI
)@@G@@RY    @A@@@@.         (IN) A0 = DECIMAL(FD)     @^@@@@.         A2 = BINLJ
)@@G@@ARY   @D@@@@          DSL       A0,36             . A1=DECIMAL    @C@@@@LK
)@@G@@          SZ        A2                . RESET A2@D@@@@          LR,U    LL
)@@G@@  R15,5             . LOOP COUNT    @]@@@@XLOOP.      @B@@@@          SZLM
)@@G@@        A0                .   @C@@@@          LDSL      A0,6            LN
)@@G@@  . 1 CHAR  @E@@@@          TNE,U     A0,5              . TEST FOR BLANKLO
)@@G@@      @B@@@@          J         NXTDIG            .   @D@@@@          TNLP
)@@G@@E,U     A0,0              . TEST FOR @    @B@@@@          J         NXTDLQ
)@@G@@IG            .   @E@@@@          ANA,U     A0,060            . - HIGHERLR
)@@G@@ 2 BIT2     @B@@@@          MSI,U     A2,10             .   @ @@@@      LS
)@@G@@    AA        A2,A0     @]@@@@NXTDIG.     @A@@@@          JGD       R15,LT
)@@G@@XLOOP       @C@@@@          J         *XCON             . RETURN  @[@@@@LU
)@@G@@.     @D@@@@.         ECHO THE INPUT LINE IF BATCH OR VIA @ADD    @[@@@@LV
)@@G@@.     @E@@@@ECHO      +0                          . $H ECHO ROUTINE     LW
)@@G@@@D@@@@          SA        A0,ECHOA0         . $P SAVE A0    @F@@@@      LX
)@@G@@    LA,U      A0,LINE           . $P GET INPUT BUFFER ADDR  @E@@@@      LY
)@@G@@    SA,H2     A0,ECHOPKT        . $P SET PRINT PKT    @F@@@@          LALZ
)@@G@@        A0,LINELNG        . $P GET INPUT CHARS NUM    @E@@@@          DSMA
)@@G@@L       A0,36             . $P SHIFT TO A1      @F@@@@          DI,U    MB
)@@G@@  A0,6              . $P COMPUTE NUM OF WORDS   @E@@@@          TZ      MC
)@@G@@  A1                . $T ANY REMINER      @C@@@@          AA,U      A0,1MD
)@@G@@              . $P +1   @B@@@@          SA,H2     A0,ECHOA0         .   ME
)@@G@@@D@@@@          LA        A0,(031,PBUFR)    . $P READ PCT   @^@@@@      MF
)@@G@@    ER        PCT$@D@@@@          LA,S2     A0,PBUFR+030      . $P GET TMG
)@@G@@YPE   @D@@@@          TE,U      A0,4              . $T DEMAND     @E@@@@MH
)@@G@@          J         ECHO1             . $A YES NO,ECHO1     @B@@@@      MI
)@@G@@    LA        A0,(+0200000,0)   .   @E@@@@          AND       A0,ECHOA0 MJ
)@@G@@        . $P CHK INPUT MODE   @B@@@@          JZ        A1,ECHORTN      MK
)@@G@@  .   @]@@@@ECHO1.      @E@@@@          LA,H2     A0,ECHOA0         . $PML
)@@G@@ GET INPUT LENGTH @A@@@@          JZ        A0,ECHORTN      @H@@@@      MM
)@@G@@    SA        A0,PRTLNG         . $P SAVE TOTAL LENGTH TO BE PRINTED    MN
)@@G@@@]@@@@ECHOLOP.    @E@@@@          LA        A0,PRTLNG         . $P LENGTMO
)@@G@@H LEFT      @D@@@@          JZ        A0,ECHORTN        . $J RETURN     MP
)@@G@@@B@@@@          JN        A0,ECHORTN        .   @E@@@@          ANU,U   MQ
)@@G@@  A0,12             . $P LNG -12 TO A1    @D@@@@          TG,U      A0,1MR
)@@G@@2             . $T LNG > 12   @E@@@@          LA,U      A0,12           MS
)@@G@@  . $P PRINT ONLY 12    @E@@@@          SA,S3     A0,ECHOPKT        . $PMT
)@@G@@ SET PRINT LENGTH @E@@@@          SA        A1,PRTLNG         . $P SAVE MU
)@@G@@PRTLNG      @A@@@@          LA        A0,ECHOPKT      @ @@@@          ERMV
)@@G@@        PRINT$    @F@@@@          LA,H2     A0,ECHOPKT        . $P UPDATMW
)@@G@@E BUFFER ADDR     @C@@@@          AA,U      A0,12             . $P +12  MX
)@@G@@@B@@@@          SA,H2     A0,ECHOPKT        .   @C@@@@          J       MY
)@@G@@  ECHOLOP           . $J LOOP @]@@@@ECHORTN.    @E@@@@          LA      MZ
)@@G@@  A0,ECHOA0         . $P RESTORE A0       @ @@@@          J         *ECHNA
)@@G@@O     @]@@@@$(4).       @E@@@@PRTLNG    +0                          . $ NB
)@@G@@TEMP PRT LENGTH   @ @@@@ECHOPKT   PF        1,0,LINE  @]@@@@ECHOA0    +0NC
)@@G@@@^@@@@ANAMEX    RES       2   @C@@@@NOTSPC2   'NOT SPECIFIED IN THE AREAND
)@@G@@ COMMAND'   @C@@@@NOTSPC1   'NOT SPECIFIED IN THE RECORD COMMAND' @#@@@@NE
)@@G@@Z1*       +0,0    @]@@@@TERMITR   +1@]@@@@ZCOUNT    +0@C@@@@READYR    'RNF
)@@G@@EADY. (FOR RELOAD SUBCOMMAND)'      @B@@@@INVAL     'INVALID RELOAD SUBCNG
)@@G@@OMMAND.'    @B@@@@INVALXX   'INVALID RESTORE SUBCOMMAND.'   @]@@@@RELCNTNH
)@@G@@    +0@G@@@@INMSG1    'WARNING:PAGE RANGE ENTERED FOR A CALC RECORD - IGNI
)@@G@@NORED'      @C@@@@INPKT1    PF        1,INPKT1-INMSG1,INMSG1      @E@@@@NJ
)@@G@@INMSG2    'PAGE RANGE SUBCOMMAND FORMAT ERROR - IGNORED'    @C@@@@INPKT2NK
)@@G@@    PF        1,INPKT2-INMSG2,INMSG2      @B@@@@INMSG3    'PAGE RANGE INNL
)@@G@@VALID - IGNORED'  @C@@@@INPKT3    PF        1,INPKT3-INMSG3,INMSG3      NM
)@@G@@@C@@@@INMSG4    'DUPLICATE PAGE RANGE - IGNORED'      @C@@@@INPKT4    PFNN
)@@G@@        1,INPKT4-INMSG4,INMSG4      @D@@@@FORMMSG   'FROM SUBCOMMAND FORNO
)@@G@@MAT ERROR - IGNORED'    @C@@@@FORMPKT   PF        1,FORMPKT-FORMMSG,FORMNP
)@@G@@MSG   @C@@@@FORMMSG2  'DULICATE FROM SUBCOMMAND - IGNORED'  @C@@@@FORMPKNQ
)@@G@@T2  PF        1,FORMPKT2-FORMMSG2,FORMMSG2@B@@@@PERMSG1   'INVALID % VALNR
)@@G@@UE - IGNORED'     @C@@@@PERPKT1   PF        1,PERPKT1-PERMSG1,PERMSG1   NS
)@@G@@@C@@@@BADTOMSG  ' CAN BE PATCHED ONLY - IGNORED'      @]@@@@SWTIME    +0NT
)@@G@@@#@@@@CMDNAME*  '   '   @^@@@@PCT       RES       24  @ @@@@CPU       EQNU
)@@G@@UF      PCT+026   @ @@@@IOCNT     EQUF      PCT+8     @]@@@@CPUIN*    +0NV
)@@G@@@]@@@@IOIN*     +0@^@@@@CPUINX    RES       2   @^@@@@TIMESTX   RES     NW
)@@G@@  1   @^@@@@TMSG1     '* COMMAND= ' @^@@@@TMSG2     '* ELAPSED= ' @#@@@@NX
)@@G@@TMSG21    ' TO '  @^@@@@TMSG3     '* CPU= '     @A@@@@TMSG31    ' MS,  INY
)@@G@@/O COUNT= '       @]@@@@TIMEST*   +0@^@@@@PBUFR*    RES       60  @F@@@@NZ
)@@G@@LINELNG   RES       1                 . $ NUM OF CHARS ON INPUT   @E@@@@OA
)@@G@@LINE      RES       40                . $ INPUT BUFFER      @^@@@@BLANK OB
)@@G@@    '      '      @G@@@@C1SW      +0                          . C1SW = 0OC
)@@G@@, RECORD CMD NOT IN     @G@@@@                                      .   OD
)@@G@@     1, RECORD CMD IN PROGRESS@G@@@@                                    OE
)@@G@@  .        2, C1 IN CORE & IN FILE  @B@@@@C2SW      +0                  OF
)@@G@@        .   @G@@@@C3SW      +0                          . C3SW = 0, AREAOG
)@@G@@ CMD NOT IN       @G@@@@                                      .        1OH
)@@G@@, AREA CMD IN PROGRESS  @G@@@@                                      .   OI
)@@G@@     2, C3 IN CORE & IN FILE  @^@@@@C1PARAM   +1,020,0,0,0,0@^@@@@C3PARAOJ
)@@G@@M   +3,020,0,0,0,0@ @@@@EDPKT*    E$PKT     14,PRINT  @^@@@@PRINT*    REOK
)@@G@@S       14  @C@@@@PROGID    '-BELL LABS D.B. REORGANIZER: '       @#@@@@OL
)@@G@@VERSION   '6,0'   @ @@@@PF        FORM      12,6,18   @^@@@@READY     'ROM
)@@G@@EADY.'      @B@@@@SEQMSG    'REORG COMMAND SEQUENCE ERROR'  @]@@@@COMMANON
)@@G@@D.    @#@@@@          'TIME'  @^@@@@          +0,TIME       @^@@@@      OO
)@@G@@    'RECORD'      @^@@@@          +1,RECORD     @#@@@@          'AREA'  OP
)@@G@@@^@@@@          +2,AREA       @^@@@@          'AREAP'       @^@@@@      OQ
)@@G@@    +2,AREA       @#@@@@          'SCAN'  @^@@@@          +3,SCAN$      OR
)@@G@@@^@@@@          'UNLOAD'      @^@@@@          +3,UNLOAD$    @^@@@@      OS
)@@G@@    'RESTOR'      @^@@@@          +4,RESTORE$   @^@@@@          'DELETE'OT
)@@G@@      @^@@@@          +5,DELETE     @^@@@@          'RELOAD'      @^@@@@OU
)@@G@@          +6,RELOAD$    @^@@@@          'PATCH'       @^@@@@          +7OV
)@@G@@,PATCH$     @^@@@@          'DEBUG'       @^@@@@          +0,DODEBUG    OW
)@@G@@@#@@@@          'END'   @^@@@@          +99,ENDIT     @A@@@@CMDCNT    + OX
)@@G@@(CMDCNT-COMMAND)/2      @C@@@@CMDMSG    'ILLEGAL REORGANIZATION COMMAND'OY
)@@G@@      @]@@@@X1SAVE    +0@]@@@@AREAP*    +0@^@@@@WRTC2     +2,010,0,0,0,0OZ
)@@G@@@^@@@@WRTC4     +4,010,0,0,0,0@^@@@@RDC2      +2,020,0,0,0,0@^@@@@RDC4  PA
)@@G@@    +4,020,0,0,0,0@^@@@@          END       MAIN___@@@          LA      PB
)@@G@@  A0,(031,PBUFR)    . $P READ PCT   @^@@@@      *[@@@@*SDFF*@#@@@@      PC
)@@G@@    AXR$    @[@@@@.     @G@@@@.         THIS SUBROUTINE, DF$AM (DATA FILPD
)@@G@@E ACCESS METHOD), IS DESIGNED @G@@@@.              TO CREATE THE DATA FIPE
)@@G@@LE AND TO READ, WRITE THE FILE.     @[@@@@.     @^@@@@.         ENTERED:PF
)@@G@@      @A@@@@.              3 SEQUENTIAL READ    @[@@@@.     @B@@@@.     PG
)@@G@@                LX,U  X10,BUFFER    @B@@@@.                     LMJ   X1PH
)@@G@@1,DF$AMR    @[@@@@.     @[@@@@.     @#@@@@$(4)      LIT.    @]@@@@$(1). PI
)@@G@@      @C@@@@DF$AMR*                               . $H      @E@@@@      PJ
)@@G@@    TNZ       INITSW            . $T FIRST TIME       @E@@@@          J PK
)@@G@@        INITIAL           . $A YES,INITIAL NO   @ @@@@          LA      PL
)@@G@@  A0,SWBUF  @E@@@@          LA        A1,BUFADDR,A0     . $P GET BUFFER PM
)@@G@@ADDR  @E@@@@          TNZ,H1    0,A1              . $T RECORD COUNT = 0 PN
)@@G@@@E@@@@          SLJ       GETNXT            . $A YES,GETNXT NO    @ @@@@PO
)@@G@@          LA        A0,SWBUF  @A@@@@          LX        X8,BUFADDR,A0   PP
)@@G@@@A@@@@          LA        A1,NXTWRD       @ @@@@          AA        A1,XPQ
)@@G@@8     @^@@@@          LXI,U     A1,1@ @@@@          LXI,U     X10,1     PR
)@@G@@@ @@@@          LA,H1     A0,0,*A1  @ @@@@          LR        R1,A0     PS
)@@G@@@E@@@@          LR        R3,A0             . $P SET RECORD LENGTH@^@@@@PT
)@@G@@          AA,U      A0,1@A@@@@          AA        A0,NXTWRD       @A@@@@PU
)@@G@@          SA        A0,NXTWRD       @A@@@@          BT        X10,0,*A1 PV
)@@G@@      @ @@@@          LA,H1     A0,0,X8   @^@@@@          ANA,U     A0,1PW
)@@G@@@ @@@@          SA,H1     A0,0,X8   @ @@@@          J         0,X11     PX
)@@G@@@[@@@@.     @[@@@@.     @C@@@@GETNXT    +0                          . $HPY
)@@G@@      @A@@@@          LA        A0,BLKCNT       @A@@@@          JN      PZ
)@@G@@  A0,NXTFILE      @E@@@@          JNZ       A0,GETNXT1        . $T GETINQA
)@@G@@G LAST BLOCK@E@@@@          TP        IOPKT+3           . $A YES NO,GETNQB
)@@G@@XT1   @C@@@@          ER        WAIT$             . $P WAIT @F@@@@      QC
)@@G@@    LA,U      A0,1              . $P SET TO PROPER BUFFER   @B@@@@      QD
)@@G@@    SA        A0,NXTWRD         .   @E@@@@          ANA       A0,SWBUF  QE
)@@G@@        . SET BUFFER SW       @ @@@@          SA        A0,SWBUF  @E@@@@QF
)@@G@@          LA        A0,(-1)           . $P SET BLKCOUNT TO -@A@@@@      QG
)@@G@@    SA        A0,BLKCNT       @C@@@@          J         *GETNXT         QH
)@@G@@  . $E      @[@@@@.     @C@@@@GETNXT1                               . $HQI
)@@G@@      @C@@@@          SLJ       DFREAD            . $W      @E@@@@      QJ
)@@G@@    LA        A0,BLKCNT         . $P UPDATE BLKCNT    @^@@@@          ANQK
)@@G@@A,U     A0,1@B@@@@          SA        A0,BLKCNT         .   @C@@@@      QL
)@@G@@    J         *GETNXT           . $E      @[@@@@ENDF  @B@@@@          LAQM
)@@G@@        A0,(+0777777777777).  @B@@@@          SA        A0,0,X10        QN
)@@G@@  .   @C@@@@          J         0,X11             . $E      @C@@@@DFREADQO
)@@G@@    +0                          . $H      @B@@@@          TP        IOPKQP
)@@G@@T+3           .   @B@@@@                                      .   @F@@@@QQ
)@@G@@          ER        WAIT$             . $P WAIT FOR PREVIOUS I/O  @F@@@@QR
)@@G@@          TZ        DEVICE            . $T SEE IF A TAPE FILE     @E@@@@QS
)@@G@@          SLJ       CHKSTAT           . $A YES,CHKSTAT NO   @B@@@@      QT
)@@G@@                                .   @B@@@@          LA,U      A0,1      QU
)@@G@@        .   @ @@@@          ANA       A0,SWBUF  @G@@@@          LX      QV
)@@G@@  X8,BUFADDR,A0     . $P GET BUFFER ADDR JUST READ    @H@@@@          LAQW
)@@G@@,H2     A1,0,X8           . $P COMPUTE NEXT BLOCK SECTOR ADDR     @B@@@@QX
)@@G@@          SZ        A0                .   @B@@@@          DI,U      A0,2QY
)@@G@@8             .   @B@@@@          TZ        A1                .   @B@@@@QZ
)@@G@@          AA,U      A0,1              .   @G@@@@          AA        A0,NRA
)@@G@@XTSECT        . $P SAVE IT, ALSO IN IO PKT      @B@@@@          SA      RB
)@@G@@  A0,NXTSECT        .   @B@@@@          SA        A0,IODRUM         .   RC
)@@G@@@B@@@@          LA        A0,SWBUF          .   @B@@@@          LA      RD
)@@G@@  A1,BUFADDR,A0     .   @E@@@@          SA        A1,IOBUF          . $PRE
)@@G@@ GET BUFFER ADDR  @B@@@@          LA,U      A0,1              .   @B@@@@RF
)@@G@@          SA        A0,NXTWRD         .   @B@@@@          ANA       A0,SRG
)@@G@@WBUF          .   @G@@@@          SA        A0,SWBUF          . $P SWITCRH
)@@G@@H SET TO PROPER BUFFER  @B@@@@          LA,U      A0,IOPKT          .   RI
)@@G@@@D@@@@          ER        IO$               . $P DO I/O     @C@@@@      RJ
)@@G@@    J         *DFREAD           . $E      @[@@@@.     @ @@@@.         INRK
)@@G@@ITIALIZE ROUTINE  @[@@@@.     @C@@@@INITIAL                             RL
)@@G@@  . $H      @F@@@@          LA        A0,LAST$D         . $P MCORE BUFFERM
)@@G@@R SPACE     @B@@@@          AU,U      A0,1              .   @G@@@@      RN
)@@G@@    SA        A1,BUFADDR        . $P COMPUTE FIRST BUFF ADDR      @F@@@@RO
)@@G@@          AA,U      A1,BLKSZ          . $P COMPUTE 2ND BUFF ADDR  @F@@@@RP
)@@G@@          SA        A1,BUFADDR+1      . $P SAVE 2ND BUFF ADDR     @F@@@@RQ
)@@G@@          AA,U      A0,BLKSZ          . $P COMPUTE MCORE$ ADDR    @F@@@@RR
)@@G@@          AA,U      A0,BLKSZ          . $P COMPUTE MCORE$ ADDR    @B@@@@RS
)@@G@@          SA        A0,LAST$D         .   @B@@@@          ER        MCORRT
)@@G@@E$            .   @E@@@@          LA,U      A0,1              . $P SET IRU
)@@G@@NIT SW      @B@@@@          SA        A0,INITSW         .   @D@@@@      RV
)@@G@@    TNZ       C18               . $T C18 EXIST  @E@@@@          J       RW
)@@G@@  ONEFILE           . $A YES NO,ONEFILE   @E@@@@          LX,H2     X8,CRX
)@@G@@18            . $P GET C18 ADDR     @B@@@@          LXI,U     X8,1      RY
)@@G@@        .   @D@@@@          LR,H1     R1,C18            . $P GET COUNT  RZ
)@@G@@@]@@@@FILELOOP.   @D@@@@          JGD       R1,$+2            . $T ANY MSA
)@@G@@ORE   @B@@@@          J         ONEFILE           .   @G@@@@          LASB
)@@G@@,U      A1,10             . $P COMPUTE FILE TBL ENTRY       @E@@@@      SC
)@@G@@    AN,T3     A1,,*X8           . $P 10 - FILE CODE   @E@@@@          SASD
)@@G@@,S1     A0,FILETBL,A1     . $P SET USE BIT      @B@@@@          J       SE
)@@G@@  FILELOOP          .   @[@@@@.     @C@@@@ONEFILE                       SF
)@@G@@        . $H      @E@@@@          SZ        FILECNT           . RESET FISG
)@@G@@LE COUNT    @]@@@@NXTFILE.    @E@@@@          LA        A0,FILECNT      SH
)@@G@@  . $P GET FILE COUNT   @C@@@@          AA,U      A0,1              . $PSI
)@@G@@ UP 1 @B@@@@          SA        A0,FILECNT        .   @E@@@@          TNSJ
)@@G@@E,U     A0,11             . $T ALL FILE DONE    @E@@@@          J       SK
)@@G@@  ENDF              . $A YES,ENDF NO      @E@@@@          TNZ,S1    FILESL
)@@G@@TBL,A0        . $T FILE IN USE      @E@@@@          J         NXTFILE   SM
)@@G@@        . $A YES NO,NXTFILE   @E@@@@          LA,H2     A0,FILETBL,A0   SN
)@@G@@  . $P GET FILE CODE    @G@@@@          AA        A0,A0             . $PSO
)@@G@@ COMPUTE INX FOR FILE NAME    @E@@@@          DL        A1,NAMED2,A0    SP
)@@G@@  . $P GET FILE NAME    @B@@@@          DS        A1,ASGCODE        .   SQ
)@@G@@@B@@@@          DS        A1,PKTCODE        .   @B@@@@          DS      SR
)@@G@@  A1,HDRCODE        .   @E@@@@          SZ        SWBUF             . $PSS
)@@G@@ RESET BUF SW     @B@@@@          LA,U      A0,1              .   @B@@@@ST
)@@G@@          SA        A0,NXTWRD         .   @D@@@@          LA,U      A0,ASU
)@@G@@SGA           . $P @ASG FILE  @C@@@@          ER        CSF$            SV
)@@G@@  . $       @C@@@@          JP        A0,READHDR        . $       @D@@@@SW
)@@G@@          LX,U      X10,ASGA          . $P @ASG ERR   @B@@@@          LMSX
)@@G@@J       X11,ASGERR        .   @B@@@@          ER        ERR$            SY
)@@G@@  .   @]@@@@$(4).       @ @@@@FF        FORM      6,6,6,18  @]@@@@FILETBSZ
)@@G@@L.    @]@@@@          +0@]@@@@          +9@]@@@@          +8@]@@@@      TA
)@@G@@    +7@]@@@@          +6@]@@@@          +5@]@@@@          +4@]@@@@      TB
)@@G@@    +3@]@@@@          +2@]@@@@          +1@ @@@@          FF        1,0,TC
)@@G@@0,0   @]@@@@INITSW    +0@]@@@@$(1).       @[@@@@.     @A@@@@.         RETD
)@@G@@AD HDR AND FIRST BLOCK  @[@@@@.     @C@@@@READHDR                       TE
)@@G@@        . $H      @F@@@@          DL        A0,HDPKT         . $P FIND OTF
)@@G@@UT DEVICE TYPE    @A@@@@          DS        A0,FITEMPKT     @A@@@@      TG
)@@G@@    LA        A0,(13,FITEMPKT)@ @@@@          ER        FITEM$    @ @@@@TH
)@@G@@          SZ        DEVICE    @^@@@@          SZ        A1  @ @@@@      TI
)@@G@@    LA,U      A2,017    @^@@@@          LA,U      A0,1@ @@@@          TNTJ
)@@G@@W       A1,EQUIP  @A@@@@          SA        A0,DEVICE       @ @@@@      TK
)@@G@@    TNZ       DEVICE    @^@@@@          J         $+3 @A@@@@          LATL
)@@G@@        A0,(0,FITEMPKT) @ @@@@          ER        TINTL$    @]@@@@READHDTM
)@@G@@R0.   @ @@@@          LA,U      A0,HDPKT  @E@@@@          ER        IOW$TN
)@@G@@              . $P READ HDR BLOCKS  @D@@@@          TZ,S1     HDPKT+3   TO
)@@G@@        . $T I/O GOOD   @E@@@@          ER        ERR$              . $ATP
)@@G@@ YES NO,ERROR     @ @@@@          TZ        DEVICE    @ @@@@          SLTQ
)@@G@@J       CHKHDR    @F@@@@          SLJ       NOTIFY            . $P SEND TR
)@@G@@DATA FILE INFO    @E@@@@          LA,H1     A0,RCDSZ1         . $P GET BTS
)@@G@@LOCK SIZE   @A@@@@          SA        A0,IOLENG       @E@@@@          LATT
)@@G@@        A0,BUFADDR        . @P GET BUF ADDR     @E@@@@          SZ      TU
)@@G@@  0,A0              . $P SET TO ZERO      @E@@@@          LA        A0,BTV
)@@G@@UFADDR+1      . $@ GET 2ND BUF ADDR @B@@@@          SZ        0,A0      TW
)@@G@@        .   @ @@@@          SZ        SWBUF     @^@@@@          LA,U    TX
)@@G@@  A0,2@ @@@@          SA   A0,NXTSECT     @E@@@@          SZ,S1     IOPKTY
)@@G@@T+3           . $P RESET STATUS     @H@@@@          SLJ  DFREAD         TZ
)@@G@@        . $P READ 1ST BLOCK AND WAIT FOR IT     @ @@@@          TP      UA
)@@G@@  IOPKT+3   @B@@@@          ER        WAIT$             .   @E@@@@      UB
)@@G@@    TZ,S1     IOPKT+3           . $T CHK STATUS OK    @^@@@@          ERUC
)@@G@@        ERR$@E@@@@          LA        A0,BLKCNT         . $P UPDATE BLKCUD
)@@G@@NT    @^@@@@          ANA,U     A0,1@B@@@@          SA        A0,BLKCNT UE
)@@G@@        .   @C@@@@          SLJ       GETNXT            . $W      @E@@@@UF
)@@G@@          SZ        SWBUF             . $P SET TO 1ST BLOCK @C@@@@      UG
)@@G@@    J         DF$AMR            . $E      @[@@@@.     @C@@@@.         PRUH
)@@G@@INT BLOCK COUNT AND RECORD COUNT    @[@@@@.     @C@@@@NOTIFY    +0      UI
)@@G@@                    . $H      @A@@@@          SX        X11,SAVEX11     UJ
)@@G@@@E@@@@          TZ        DEVICE            . $T IS IT A TAPE FILE@B@@@@UK
)@@G@@          J         TAPEIN            .   @ @@@@          E$DIT     EDPKUL
)@@G@@T     @ @@@@          E$DECV    BLKCNT    @ @@@@          E$COPY    9,DFUM
)@@G@@MSG1  @ @@@@          E$DECV    RCDCNT    @A@@@@          E$COPY    12,DUN
)@@G@@FMSG2       @ @@@@          E$FD2     IOPKT     @]@@@@TAPEMSG.    @#@@@@UO
)@@G@@          E$DITX  @F@@@@          P$RINT    (PF 2,14,PRINT)   . $P PRINTUP
)@@G@@ DATA FILE MSG    @ @@@@PF        FORM      12,6,18   @A@@@@          LXUQ
)@@G@@        X11,SAVEX11     @C@@@@          J         *NOTIFY           . $EUR
)@@G@@      @]@@@@TAPEIN.     @ @@@@          E$DIT     EDPKT     @A@@@@      US
)@@G@@    E$FD2     ('READING')     @^@@@@          E$SKIP    1   @ @@@@      UT
)@@G@@    E$FD2     IOPKT     @^@@@@          E$SKIP    1   @ @@@@          E$UU
)@@G@@FD1     ('FROM')  @^@@@@          E$SKIP    1   @ @@@@          E$FD1   UV
)@@G@@  ('TAPE')  @^@@@@          E$SKIP    1   @A@@@@          E$FD2     ('REUW
)@@G@@EL-NO.:')   @ @@@@          E$DECF    3,CUREEL  @ @@@@          J       UX
)@@G@@  TAPEMSG   @[@@@@.     @B@@@@.         TAPE READING RELATED ROUTINE    UY
)@@G@@@[@@@@.     @C@@@@CHKHDR    +0                          . $H      @A@@@@UZ
)@@G@@          LA        A0,CUREEL       @^@@@@          A,U       A0,1@A@@@@VA
)@@G@@          SA        A0,CUREEL       @A@@@@          TE        A0,REELNO VB
)@@G@@      @^@@@@          ER        ERR$@D@@@@.                             VC
)@@G@@        WRONG REEL NO.  @ @@@@          LA        A0,HDR    @A@@@@      VD
)@@G@@    TE        A0,('HDRO@@')   @E@@@@          ER        ERR$            VE
)@@G@@  . $ HDR BLK MISSING   @ @@@@          LA,U      A0,9000   @A@@@@      VF
)@@G@@    SA        A0,BLKCNT       @ @@@@          LA,U      A0,HDPKT  @^@@@@VG
)@@G@@          ER        IOW$@A@@@@          LA,S1     A0,HDPKT+3      @D@@@@VH
)@@G@@          TNE,U     A0,1              . $T AN EOF     @ @@@@          J VI
)@@G@@        *CHKHDR   @^@@@@          ER        ERR$@[@@@@.     @C@@@@.     VJ
)@@G@@    ROUTINE TO CHK TAPE READ STATUS       @[@@@@.     @^@@@@CHKSTAT   +0VK
)@@G@@      .     @E@@@@          LA,S1     A0,IOPKT+3        . $P GET STATUS VL
)@@G@@      @A@@@@          JZ        A0,*CHKSTAT     @D@@@@          TE,U    VM
)@@G@@  A0,1              . $T AN EOF     @C@@@@          ER        ERR$      VN
)@@G@@        . $       @ @@@@          DL        A0,IOPKT  @ @@@@          DSVO
)@@G@@        A0,TEORF  @ @@@@          LA,U      A0,TEORF  @^@@@@          ERVP
)@@G@@        IOW$@D@@@@          TZ,S1     TEORF+3           . $T STATUS OK  VQ
)@@G@@@^@@@@          ER        ERR$@ @@@@          LA        A0,EORF   @A@@@@VR
)@@G@@          TNE       A0,('EOFO@@')   @ @@@@          J         NXTFILE   VS
)@@G@@@A@@@@          TE        A0,('EORO@@')   @^@@@@          ER        ERR$VT
)@@G@@@A@@@@          LA        A0,(0,FITEMPKT) @ @@@@          ER        TSWAVU
)@@G@@P$    @ @@@@          J         READHDR0  @]@@@@$(4).       @]@@@@DEVICEVV
)@@G@@    +0@B@@@@TEORF     I$OT      'D$FILE0',R$ 28,EORF  @^@@@@EORF      REVW
)@@G@@S       28  @]@@@@CUREEL    +0@^@@@@FITEMPKT  RES       13  @A@@@@EQUIP VX
)@@G@@    EQUF      FITEMPKT+6,,S1  @F@@@@SWBUF     +0                        VY
)@@G@@  . BUFFER ALTERNATE SWITCH   @]@@@@BUFADDR   +0@]@@@@          +0@]@@@@VZ
)@@G@@NXTWRD    +1@ @@@@BRECNT    EQUF      0,X8,H1   @]@@@@NXTSECT   +2@C@@@@WA
)@@G@@IOPKT     I$OD      'D$FILE0     ',R$ BLKSZ,0 2 @ @@@@PKTCODE   EQUF    WB
)@@G@@  IOPKT     @A@@@@IOBUF     EQUF      IOPKT+4,,H2     @ @@@@IODRUM    EQWC
)@@G@@UF      IOPKT+5   @A@@@@IOLENG    EQUF      IOPKT+4,,H1     @C@@@@HDPKT WD
)@@G@@    I$OD      'D$FILE0     ',R$ 56,HDR 0  @ @@@@HDRCODE   EQUF      HDPKWE
)@@G@@T     @E@@@@HDR       'HDRO@@'                    . WORD 0 OF HDR BLOCK WF
)@@G@@@G@@@@RCDSZ1    +0,0                      . BLOCK SZ, LARGEST RECORD SZ WG
)@@G@@      @]@@@@          +0@]@@@@          +0@]@@@@DATE1     +0@A@@@@REELNOWH
)@@G@@    EQUF      DATE1+1,,H2     @]@@@@          +0@]@@@@          +0@^@@@@WI
)@@G@@          RES       21  @^@@@@EOF       'EOFO@@'      @E@@@@RCDSZ2    +0WJ
)@@G@@,0                      . WORD 0 OF EOF BLOCK   @]@@@@BLKCNT    +0@]@@@@WK
)@@G@@RCDCNT    +0@]@@@@DATE2     +0@]@@@@          +0@]@@@@EOFSECT   +0@^@@@@WL
)@@G@@          RES       21  @B@@@@ASGA      '@ASG,A      D$FILE0      . '   WM
)@@G@@@ @@@@ASGCODE   EQUF      ASGA+2    @^@@@@NAMED2*   'D$FILE0'     @^@@@@WN
)@@G@@          'D$FILE1'     @^@@@@          'D$FILE2'     @^@@@@          'DWO
)@@G@@$FILE3'     @^@@@@          'D$FILE4'     @^@@@@          'D$FILE5'     WP
)@@G@@@^@@@@          'D$FILE6'     @^@@@@          'D$FILE7'     @^@@@@      WQ
)@@G@@    'D$FILE8'     @^@@@@          'D$FILE9'     @^@@@@DFMSG1    ' BLOCKSWR
)@@G@@, '   @ @@@@DFMSG2    ' RECORDS IN   '    @]@@@@SAVEX11   +0@]@@@@FILECNWS
)@@G@@T   +0@#@@@@          END     ___     0,A0              .   @ @@@@      WT
)@@G@@    SZ        SWBUF     @^@@@@          LA,U      A0,2@ @@@@          SAWU
)@@G@@   A0,NXTSECT     @E@@@@*[@@@@*SDFF*@#@@@@          AXR$    @[@@@@.     WV
)@@G@@@ @@@@.         SNOFLAKE MACROS     @[@@@@.     @^@@@@$(DBK$$(0))   LIT.WW
)@@G@@      @#@@@@XSVE$$(0) EQU 0   @]@@@@SA$$ RES 21.@#@@@@DSCR$$ RES 2.     WX
)@@G@@@]@@@@$(1) RES 0  @C@@@@ .  CODE TO RESTORE REGISTERS UPON RETURN       WY
)@@G@@@^@@@@XRST$$ LX  X11,SA$$.    @#@@@@  DL 13,SA$$+1    @#@@@@  DL 15,SA$$WZ
)@@G@@+3.   @#@@@@  DL 26,SA$$+5.   @#@@@@   LR,U R1,14.    @#@@@@   LX X1,(1,XA
)@@G@@66).  @^@@@@   LX X2,(1,SA$$+7).    @#@@@@  BT X1,0,*X2.    @^@@@@   TNZXB
)@@G@@,T1  0,X11.       @]@@@@  J 1,X11.  @^@@@@  AX,T1  X11,0,X11.     @]@@@@XC
)@@G@@   J 0,X11. @]@@@@XSAVE* PROC.@#@@@@*   SX 11,SA$$.   @#@@@@   DS 13,SA$XD
)@@G@@$+1.  @^@@@@    DS 15,SA$$+3.       @^@@@@    DS 26,SA$$+5.       @#@@@@XE
)@@G@@  LR,U R1,14.     @#@@@@  LX X1,(1,66).   @^@@@@   LX X2,(1,SA$$+7).    XF
)@@G@@@#@@@@   BT X2,0,*X1.   @]@@@@    END.    @#@@@@XRETN* PROC  *1.  @A@@@@XG
)@@G@@  DO XRETN(1)=1    ,    LA,U A0,1.  @A@@@@ DO XRETN(1)=1 ,    J XRST$$. XH
)@@G@@      @B@@@@  DO XRETN(1)>1 ,  LX,U X1,XRETN(1,1).    @A@@@@  DO XRETN(1XI
)@@G@@)>1 ,  SX X1,DSCR$$.    @A@@@@  DO XRETN(1)>1 ,  LA A0,XRETN(1,2) @B@@@@XJ
)@@G@@  DO XRETN(1)>1 ,  SA,H1 A0,DSCR$$+1.     @B@@@@  DO XRETN(1)>1 ,  SA,H2XK
)@@G@@ A0,DSCR$$+1.     @A@@@@  DO XRETN(1)>1 ,  LX,U A0,DSCR$$.  @ @@@@ DO XRXL
)@@G@@ETN(1)>1 ,   J XRST$$.  @]@@@@ END.       @#@@@@XFRETN* PROC *0.  @]@@@@XM
)@@G@@    SZ A0.  @#@@@@    J XRST$$.     @]@@@@    END.    @]@@@@    AXR$.   XN
)@@G@@@#@@@@$(4)      LIT.    @]@@@@$(1).       @[@@@@.     @C@@@@.         SYXO
)@@G@@MBOL TABLE ACCESS METHOD(SYM$AM)    @[@@@@.     @ @@@@PF        FORM    XP
)@@G@@  12,6,18   @C@@@@SYM$TW*                               . $H      @[@@@@XQ
)@@G@@.     @A@@@@.         CREATE AND EXPAND AN ENTRY@[@@@@.     @C@@@@.     XR
)@@G@@    X10 = ADDR OF 8 WORDS SYM. TBL. PACKET@ @@@@.         LMJ  X11,SYM$TXS
)@@G@@W     @[@@@@.     @C@@@@.         A0 = ABS. ADDR OF 3 WORDS ENTRY       XT
)@@G@@@[@@@@.     @D@@@@          SX,H2     X11,SAVEX11       . $P SAVE X11   XU
)@@G@@@D@@@@          TNZ       C14               . $T C14 EXIST  @E@@@@      XV
)@@G@@    SLJ       SYMINIT           . $A YES NO,SYMINIT   @G@@@@          SLXW
)@@G@@J       CHKC14            . $P SEARCH FOR SYMBOLIC NAME     @D@@@@      XX
)@@G@@    TNZ       X1                . $T NEW ENTRY  @F@@@@          J       XY
)@@G@@  SYMCRT            . $A YES,CREAT-ONE NO .     @E@@@@          LA,S3   XZ
)@@G@@  A0,5,X1           . $P GET 1ST MODE     @E@@@@          LA,S3     A1,5YA
)@@G@@,X10          . $P GET 2ND MODE     @E@@@@          LSSL      A1,18     YB
)@@G@@        . $P FORM A MODES WORD@C@@@@          LDSL      A0,18           YC
)@@G@@  . $       @E@@@@          TNE       A0,(+1,2)         . $T SEE IF 1 & YD
)@@G@@2     @E@@@@          J         $+3               . $A YES,$+3 NO       YE
)@@G@@@E@@@@          TE        A0,(+2,1)         . $T SEE IF 2 & 1     @E@@@@YF
)@@G@@          J         DUPL              . $J DUPLICATED SYMBOL@D@@@@      YG
)@@G@@    LA,H1     A0,C15            . $P GET C15    @D@@@@          SA,H2   YH
)@@G@@  A0,6,X1           . $P SET LINK   @E@@@@          AU,U      A0,3      YI
)@@G@@        . $P UP C15 BY 3      @B@@@@          SA,H1     A1,C15          YJ
)@@G@@  .   @E@@@@          AA,H2     A0,C15            . $P NEW ENTRY ADDR   YK
)@@G@@@E@@@@          DL        A2,5,X10          . $P GET 2 WORD ENTRY @D@@@@YL
)@@G@@          DS        A2,0,A0           . $P SAVE IT    @F@@@@          LAYM
)@@G@@        A2,7,X10          . $P GET THE THIRD WORD     @D@@@@          SAYN
)@@G@@        A2,2,A0           . $P SAVE IT    @[@@@@.     @ @@@@          J YO
)@@G@@        0,X11     @[@@@@.     @^@@@@.     CREATE A NEW ENTRY@[@@@@.     YP
)@@G@@@E@@@@SYMCRT    LA,H1     A0,C14            . $P GET C14 LENGTH   @D@@@@YQ
)@@G@@          AU,U      A0,8              . $P UP BY 8    @D@@@@          SAYR
)@@G@@,H1     A1,C14            . $P SAVE IT    @G@@@@          AA,H2     A0,CYS
)@@G@@14            . $P COMPUTE NEW ENTRY ADDR (ABS.)@B@@@@          LX      YT
)@@G@@  X1,A0             .   @E@@@@          LXI,U     X1,1              . $PYU
)@@G@@ MOVE ENTRY       @B@@@@          LX        X2,X10            .   @B@@@@YV
)@@G@@          LXI,U     X2,1              .   @E@@@@          LR,U      R1,8YW
)@@G@@              . $P SET MOVE COUNT   @D@@@@          BT        X1,,*X2   YX
)@@G@@        . $P MOVE IT    @G@@@@          AA,U      A0,5              . $PYY
)@@G@@ ABS. ADDR OF 3 WORDS ENTRY   @D@@@@          J         0,X11           YZ
)@@G@@  . $J RETURN     @[@@@@.     @C@@@@.     PERFORM M$CORE FOR SYMBOL TBL ZA
)@@G@@BUFFER      @[@@@@.     @C@@@@SYMINIT   +0                          . $HZB
)@@G@@      @E@@@@          LA,H2     A0,LAST$D         . $P GET DBANK ADDR   ZC
)@@G@@@^@@@@          AA,U      A0,1@ @@@@          SA        A0,C14    @[@@@@ZD
)@@G@@.     @ @@@@.         C14 BUFFER SIZE     @[@@@@.     @B@@@@          AAZE
)@@G@@,U      A0,C14SZ.         .   @B@@@@          SA        A0,LAST$D       ZF
)@@G@@  .   @D@@@@          ER        MCORE$            . $P M$CORE     @E@@@@ZG
)@@G@@          LA,H2     A0,LAST$I         . $P GET IBANK ADDR   @B@@@@      ZH
)@@G@@    AA,U      A0,1              .   @B@@@@          SA        A0,C15    ZI
)@@G@@        .   @[@@@@.     @ @@@@.         C15  BUFFER SIZE    @[@@@@.     ZJ
)@@G@@@B@@@@          AA,U      A0,C15SZ          .   @B@@@@          SA      ZK
)@@G@@  A0,LAST$I         .   @ @@@@          ER        MCORE$    @I@@@@      ZL
)@@G@@    LA,U      A0,1              . $P SET NOT TO USE THE 1ST WORD OF C15 ZM
)@@G@@      @B@@@@          SA,H1     A0,C15            .   @ @@@@          J ZN
)@@G@@        *SYMINIT  @[@@@@.     @C@@@@.         SEARCH C14 TO MATCH A SYMBZO
)@@G@@OL NAME     @A@@@@.          (I) X10 = ADDR OF NAME   @B@@@@.          (ZP
)@@G@@O) X1  = ADDR OF TBL ENTRY    @A@@@@.          (O) X1  = 0  IF NOT FOUNDZQ
)@@G@@@[@@@@.     @C@@@@CHKC14    +0                          . $H      @D@@@@ZR
)@@G@@          SZ        X1                . $P SET X1=0   @D@@@@          TNZS
)@@G@@Z,H1    C14               . $T ANY ENTRY  @E@@@@          J         *CHKZT
)@@G@@C14           . $A YES NO,*CHKC14   @E@@@@          LX,H2     X1,C14    ZU
)@@G@@        . $P GET C14 ADDR     @]@@@@C14LOOP.    @G@@@@          DL      ZV
)@@G@@  A0,,X10           . $P GET FIRST 2 WORDS OF THE NAME@C@@@@          DTZW
)@@G@@E       A0,,X1            . $T  =   @E@@@@          J         NXTC14    ZX
)@@G@@        . $A YES NO,NXTC14    @B@@@@          DL        A0,2,X10        ZY
)@@G@@  .   @B@@@@          DTE       A0,2,X1           .   @B@@@@          J ZZ
)@@G@@        NXTC14            .   @B@@@@          LA        A0,4,X10        AA
)@@G@@  .   @B@@@@          TE        A0,4,X1           .   @B@@@@          J AB
)@@G@@        NXTC14            .   @D@@@@          J         *CHKC14         AC
)@@G@@  . $J FOUND IT   @C@@@@NXTC14                                . $H      AD
)@@G@@@E@@@@          AX,U      X1,8              . $P UP X1 BY 8       @F@@@@AE
)@@G@@          LA,H2     A0,C14            . $P COMPUTE TBL END ADDR   @C@@@@AF
)@@G@@          AA,H1     A0,C14            . $       @E@@@@          TE      AG
)@@G@@  A0,X1             . $T END OF TBL       @E@@@@          J         C14LAH
)@@G@@OOP           . $A YES NO,C14LOOP   @E@@@@          SZ        X1        AI
)@@G@@        . $P SET X1 = 0       @D@@@@          J         *CHKC14         AJ
)@@G@@  . $J *CHKC14    @[@@@@.     @B@@@@.         RANDOM LOCATE A SYM TBL ENAK
)@@G@@TRY   @[@@@@.     @F@@@@.         (I) X10 = ADDR OF A 5 WORDS PACKET CONAL
)@@G@@TAINING THE NAME  @D@@@@.         (O)  A0,H1 = ABS. ADDR OF 3 WORD OLD EAM
)@@G@@NTRY  @D@@@@.              A0,H2 = ABS. ADDR OF 3 WORD NEW ENTRY  @[@@@@AN
)@@G@@.     @B@@@@.              EITHER OR BOTH MAY BE 0    @[@@@@.     @E@@@@AO
)@@G@@.              A DEFINED ITEM WILL BE TREATED AS A NEW ITEM @[@@@@.     AP
)@@G@@@C@@@@SYM$TR*                               . $H      @E@@@@          TNAQ
)@@G@@Z       C14               . $T C14 IN CORE      @E@@@@          SLJ     AR
)@@G@@  GETC14            . $A YES NO,GETC14    @E@@@@          SLJ       CHKCAS
)@@G@@14            . $P SEARCH C14       @D@@@@          SZ        A0        AT
)@@G@@        . $P SET A0     @C@@@@          TNZ       X1                . $TAU
)@@G@@ FOUND@E@@@@          J         0,X11             . $A YES NO,RETURN    AV
)@@G@@@G@@@@          AX,U      X1,5              . $P GET ADDR OF 3 WORDS ENTAW
)@@G@@RY    @E@@@@          LA        A0,X1             . $P PUT IT IN A0     AX
)@@G@@@D@@@@          LA,S3     A1,0,X1           . $P GET MODE   @G@@@@      AY
)@@G@@    TNE,U     A1,2              . $T SEE IF NEW SCHEMA ONLY       @E@@@@AZ
)@@G@@          J         0,X11             . $A YES,RETURN NO    @E@@@@      BA
)@@G@@    TNE,U     A1,3              . $T A DEFINED ITEM   @E@@@@          J BB
)@@G@@        0,X11             . $A YES,RETURN NO    @C@@@@          LSSL    BC
)@@G@@  A0,18             . $P SHIFT@G@@@@          TNZ,H2    1,X1            BD
)@@G@@  . $T OLD SCHEMA ONLY(LINK=0)      @E@@@@          J         0,X11     BE
)@@G@@        . $A YES,RETURN NO    @D@@@@          LA,H2     A1,1,X1         BF
)@@G@@  . $P GET LINK   @E@@@@          DSL       A1,17             . $P SHIFTBG
)@@G@@ REL TO A2  @C@@@@          SSL       A2,19             . $       @E@@@@BH
)@@G@@          LA,H2     A4,C14            . $P ASSUME C14       @E@@@@      BI
)@@G@@    TNZ       A1                . $T TOP BIT SET      @E@@@@          LABJ
)@@G@@,H2     A4,C15            . $A YES,ADD C15      @E@@@@          AA      BK
)@@G@@  A2,A4             . $  NO, ADD C14      @B@@@@          LA        A1,ABL
)@@G@@2             .   @G@@@@          SSL       A0,18             . $P PUT OBM
)@@G@@LD ADDR IN H1,OF A0     @G@@@@          LSSL      A1,18             . $PBN
)@@G@@ PUT NEW ADDR IN H2 OF A0     @C@@@@          LDSL      A0,18           BO
)@@G@@  . $       @B@@@@          J         0,X11             .   @[@@@@.     BP
)@@G@@@A@@@@.         READ C14 & C15 FROM C$FILE@[@@@@.     @C@@@@GETC14    +0BQ
)@@G@@                          . $H      @D@@@@          SX        X10,SAVEX1BR
)@@G@@0        . $P SAVE X10  @D@@@@          SX        X11,SAVEX11        . $BS
)@@G@@P SAVE X11  @B@@@@          LX,U      X10,(+14,020,,,,0)    @D@@@@      BT
)@@G@@    LMJ       X11,CF$AM         . $P READ C14   @B@@@@          LX,U    BU
)@@G@@  X10,(+15,020,,,,0)    @E@@@@          LMJ       X11,CF$AM             BV
)@@G@@  . $P READ C15   @E@@@@          LX        X10,SAVEX10       . $P RESTOBW
)@@G@@RE X10      @E@@@@          LX        X11,SAVEX11       . $P RESTORE X11BX
)@@G@@      @D@@@@          J         *GETC14           . $J RETURN     @]@@@@BY
)@@G@@.           @B@@@@.         DUPLICATED SYMBOLS ENCOUNTERED  @]@@@@.     BZ
)@@G@@      @C@@@@DUPL.                                 . $H      @E@@@@      CA
)@@G@@    TZ        FRSTDUP           . $T FIRST TIME       @E@@@@          J CB
)@@G@@        DUPMSG            . $A YES NO,DUPMSG    @A@@@@          P$RINT  CC
)@@G@@  (PF 2,ML1,MSG1) @A@@@@          P$RINT    (PF 1,ML1,MSG1) @A@@@@      CD
)@@G@@    P$RINT    (PF 1,ML2,MSG2) @A@@@@          P$RINT    (PF 1,ML3,MSG3) CE
)@@G@@@A@@@@          P$RINT    (PF 1,ML4,MSG4) @A@@@@          P$RINT    (PF CF
)@@G@@1,ML5,MSG5) @A@@@@          P$RINT    (PF 1,ML6,MSG6) @A@@@@          P$CG
)@@G@@RINT    (PF 1,ML7,MSG7) @A@@@@          P$RINT    (PF 1,ML1,MSG1) @A@@@@CH
)@@G@@          P$RINT    (PF 1,ML1,MSG1) @E@@@@          SA        A0,FRSTDUPCI
)@@G@@        . $P SET FRST TIME SW @C@@@@DUPMSG.                             CJ
)@@G@@  . $H      @A@@@@          P$RINT    (PF 2,ML1,MSG1) @ @@@@          E$CK
)@@G@@DIT     EDPKT     @A@@@@          E$FD2     ('DUPLICATED')  @^@@@@      CL
)@@G@@    E$SKIP    1   @A@@@@          E$FD2     ('SYMBOL:')     @^@@@@      CM
)@@G@@    E$SKIP    1   @ @@@@          E$FD2     0,X10     @ @@@@          E$CN
)@@G@@FD2     2,X10     @ @@@@          E$FD1     4,X10     @^@@@@          E$CO
)@@G@@CHAR    '(' @E@@@@          LA,U      A1,PGMSW          . $P GET SW(REORCP
)@@G@@/ORED)@F@@@@          LA        A2,NEWSEQ         . $P GET NEW NAME SEQUCQ
)@@G@@ENCE  @C@@@@          AA,U      A2,1              . $P +1   @D@@@@      CR
)@@G@@    SA        A2,NEWSEQ         . $P SAVE IT    @F@@@@          DSL     CS
)@@G@@  A2,36             . $P CONVERT TO OCTAL(FD)   @B@@@@          DI,U    CT
)@@G@@  A2,8              .   @B@@@@          OR,U      A3,060            .   CU
)@@G@@@E@@@@          SA,S6     A4,NEWNAME,A1     . $P SAVE 6TH DIGIT   @F@@@@CV
)@@G@@          DSL       A2,36             . $P CONVERT TO OCTAL(FD)   @B@@@@CW
)@@G@@          DI,U      A2,8              .   @B@@@@          OR,U      A3,0CX
)@@G@@60            .   @E@@@@          SA,S5     A4,NEWNAME,A1     . $P SAVE CY
)@@G@@5TH DIGIT   @F@@@@          DSL       A2,36             . $P CONVERT TO CZ
)@@G@@OCTAL(FD)   @B@@@@          DI,U      A2,8              .   @B@@@@      DA
)@@G@@    OR,U      A3,060            .   @E@@@@          SA,S4     A4,NEWNAMEDB
)@@G@@,A1     . $P SAVE 4TH DIGIT   @E@@@@          LA        A0,NEWNAME,A1   DC
)@@G@@  . $P GET THE NEW NAME @D@@@@          SA        A0,0,X10          . $PDD
)@@G@@ CHANGE IT  @G@@@@          DL        A0,('            '). $P BLANK OUT DE
)@@G@@NEXT 4 WORDS      @B@@@@          DS        A0,1,X10          .   @B@@@@DF
)@@G@@          DS        A0,3,X10          .   @F@@@@          E$FD2     0,X1DG
)@@G@@0             . $P PRINT MODIFIED NAME    @B@@@@          E$FD2     2,X1DH
)@@G@@0             .   @B@@@@          E$FD1     4,X10             .   @B@@@@DI
)@@G@@          E$CHAR    ')'               .   @#@@@@          E$DITX  @A@@@@DJ
)@@G@@          P$RINT    (PF 1,12,PRINT) @A@@@@          P$RINT    (PF 1,ML1,DK
)@@G@@MSG1) @E@@@@          LX        X11,SAVEX11       . $P RESTORE X11      DL
)@@G@@@F@@@@          J         SYM$TW            . $J REPROCESS THE NAME     DM
)@@G@@@]@@@@$(4).       @]@@@@SAVEX10   +0@]@@@@SAVEX11   +0@]@@@@FRSTDUP   +0DN
)@@G@@@^@@@@NEWNAME   '%0-000'      @^@@@@          '%1-000'      @E@@@@NEWSEQDO
)@@G@@    +0                          . $ NEW NAME SEQ NO.  @G@@@@MSG1      '*DP
)@@G@@*****************************************************'      @ @@@@ML1   DQ
)@@G@@    EQU       $-MSG1    @E@@@@MSG2      'WARNING: DUPLICATED SYMBOL(S) EDR
)@@G@@NCOUNTERED.'      @ @@@@ML2       EQU       $-MSG2    @E@@@@MSG3      ' DS
)@@G@@ ANY REFERENCE TO THESE SYMBOLS IN THE EDITING' @ @@@@ML3       EQU     DT
)@@G@@  $-MSG3    @D@@@@MSG4      '  PROCESS MAY YIELD INCORRECT RESULTS.'    DU
)@@G@@@ @@@@ML4       EQU       $-MSG4    @D@@@@MSG5      '  SPECIAL ATTENTIONDV
)@@G@@ MUST BE GIVEN WHEN'    @ @@@@ML5       EQU       $-MSG5    @E@@@@MSG6  DW
)@@G@@    '  THE RECORDS ASSOCIATED WITH THESE SYMBOLS'     @ @@@@ML6       EQDX
)@@G@@U       $-MSG6    @D@@@@MSG7      '   ARE TRANSFORMED BY THE ART PROCESSDY
)@@G@@.'    @ @@@@ML7       EQU       $-MSG7    @]@@@@$(1).       @B@@@@SYMTRSDZ
)@@G@@*   XSAVE     . $H SNO READ ENTRY   @E@@@@          LX,H2     A0,1,X11  EA
)@@G@@        . $P GET IND ADDR?    @B@@@@          L,U       A1,6            EB
)@@G@@  .   @F@@@@          S,H2      A1,1,A0           . $P LENGTH OF STRING EC
)@@G@@= 6   @C@@@@          LA,H2     A0,,A0            . $P      @A@@@@      ED
)@@G@@    SA        A0,INDADDR      @F@@@@          LX,H2     X10,,X11        EE
)@@G@@  . $P GET ADDR OF THE NAME   @C@@@@          LX,H2     X10,,X10        EF
)@@G@@  . $       @F@@@@          LMJ       X11,SYM$TR        . $P SEARCH FOR EG
)@@G@@THE NAME    @D@@@@          SA        A0,ADDR           . $P SAVE IT    EH
)@@G@@@A@@@@          LX        X1,INDADDR      @D@@@@          SZ        0,X1EI
)@@G@@              . $P SET TO 0   @E@@@@          LA,S4     A0,,A0          EJ
)@@G@@  . $P GET SYM TYPE     @B@@@@          LA,U      A1,1              .   EK
)@@G@@@E@@@@          TNE,U     A0,025            . $T RESERVED TYPE    @D@@@@EL
)@@G@@          SA        A1,,X1            . $P SET TO 1   @ @@@@          XREM
)@@G@@ETN   ADDR,ADDRL  @E@@@@SYMTWS*   XSAVE                       . $H SNO CEN
)@@G@@REAT ENTRY  @F@@@@          LX,H2     X10,,X11          . $P GET ADDR OFEO
)@@G@@ THE NAME   @C@@@@          LX,H2     X10,,X10          . $       @F@@@@EP
)@@G@@          LMJ       X11,SYM$TW        . $P SEARCH FOR THE NAME    @D@@@@EQ
)@@G@@          SA        A0,ADDR           . $P SAVE IT    @ @@@@          XRER
)@@G@@ETN   ADDR,ADDRL  @]@@@@$(4).       @]@@@@INDADDR   +0@]@@@@ADDR      +0ES
)@@G@@@]@@@@ADDRL     +6@#@@@@          END     ___STORE X10      @E@@@@      ET
)@@G@@    LX        X11,SAVEX11       . $P RESTORE X11      @D@@@@          J EU
)@@G@@*[@@@@*SDFF*@[@@@@.     @A@@@@.         EDIT$ WORKER ROUTINE      @[@@@@EV
)@@G@@.     @^@@@@.         1. T - TOP    @^@@@@.         2. B - BOTTOM @^@@@@EW
)@@G@@.         3. M - MOVE   @^@@@@.         4. DITTO      @^@@@@.         5.EX
)@@G@@ D - DELETE @#@@@@.         6. #    @^@@@@.         7. EXIT       @#@@@@EY
)@@G@@.         8. END  @^@@@@.         9. OMIT       @ @@@@.         10. #(VAEZ
)@@G@@RIABLE)     @^@@@@.         11. N OR +    @#@@@@.         12. -   @#@@@@FA
)@@G@@.         13. ON  @^@@@@.         14. OFF       @^@@@@.         15. USE FB
)@@G@@      @[@@@@.     @#@@@@          AXR$    @#@@@@$(4)      LIT.    @]@@@@FC
)@@G@@$(1).       @E@@@@SAVEX11   +0                          . RETURN ADDRESSFD
)@@G@@      @C@@@@EDIT$WK*                              . $H      @E@@@@      FE
)@@G@@    SZ        STATUS            . $P RESET STATUS     @G@@@@          SXFF
)@@G@@,H2                        X11,SAVEX11       . $P SAVE X11  @E@@@@      FG
)@@G@@    LA        A0,TYPE           . $P GET EDIT TYPE    @H@@@@          LAFH
)@@G@@,H2                        A0,TYPETBL,A0     . $P GET SUB. ADDR   @B@@@@FI
)@@G@@          J         0,A0              .   @]@@@@ERROR.      @E@@@@      FJ
)@@G@@    ER        ERR$              . $ INTERNAL ERROR    @[@@@@.     @^@@@@FK
)@@G@@.         DELETE COMMAND@[@@@@.     @C@@@@DELETE                        FL
)@@G@@        . $H      @E@@@@          SLJ       BLDPKT            . $P BUILDFM
)@@G@@ TF$AM PKT  @C@@@@          SZ        TFPKT             . $P      @B@@@@FN
)@@G@@          SZ        TFPKT+2           .   @E@@@@          LX,U      X10,FO
)@@G@@TFPKT         . $P GET PKT ADDR     @E@@@@          LMJ       X11,TF$DLTFP
)@@G@@        . $P PERFORM DELETE   @F@@@@          LA        A0,NEWLN        FQ
)@@G@@  . $P GET NEW CURRENT LINE   @D@@@@          SA        A0,LN           FR
)@@G@@  . $P SAVE IT    @E@@@@          TZ        TFSTAT            . $T CHK TFS
)@@G@@FSTAT       @B@@@@          ER        ERR$              .   @D@@@@      FT
)@@G@@    SZ        RDA               . $P RESET RDA  @D@@@@          J       FU
)@@G@@  *SAVEX11          . $J RETURN     @[@@@@.     @^@@@@.         MOVE COMFV
)@@G@@MAND  @[@@@@.     @C@@@@MOVE                                  . $H      FW
)@@G@@@E@@@@          SLJ       BLDPKT            . $P BUILD TF$AM PKT  @B@@@@FX
)@@G@@          SZ        TFPKT             .   @E@@@@          LA        A0,LFY
)@@G@@N             . $P SET CURRENT LN   @B@@@@          SA        A0,CURLN  FZ
)@@G@@        .   @B@@@@          SZ        TFSTAT            .   @E@@@@      GA
)@@G@@    LX,U      X10,TFPKT         . $P GET PKT ADDR     @B@@@@          LMGB
)@@G@@J       X11,TF$MVE        .   @B@@@@          TZ        TFSTAT          GC
)@@G@@  .   @B@@@@          ER        ERR$              .   @E@@@@          LAGD
)@@G@@        A0,NEWLN          . $P GET NEW LN       @B@@@@          SA      GE
)@@G@@  A0,LN             .   @B@@@@          J         *SAVEX11          .   GF
)@@G@@@[@@@@.     @^@@@@.         DITTO COMMAND @[@@@@.     @C@@@@DITTO       GG
)@@G@@                          . $H      @E@@@@          SLJ       BLDPKT    GH
)@@G@@        . $P BUILD TF$AM PKT  @B@@@@          SZ        TFPKT           GI
)@@G@@  .   @E@@@@          LA        A0,LN             . $P GET CURRENT LN   GJ
)@@G@@@B@@@@          SA        A0,CURLN          .   @B@@@@          SZ      GK
)@@G@@  TFSTAT            .   @E@@@@          LX,U      X10,TFPKT         . $PGL
)@@G@@ GET PKT ADDR     @B@@@@          LMJ       X11,TF$CPY        .   @B@@@@GM
)@@G@@          TZ        TFSTAT            .   @E@@@@          ER        ERR$GN
)@@G@@              . $. INTERNAL ERROR   @B@@@@          LA        A0,NEWLN  GO
)@@G@@        .   @B@@@@          SA        A0,LN             .   @B@@@@      GP
)@@G@@    J         *SAVEX11          .   @[@@@@.     @^@@@@.         EXIT COMGQ
)@@G@@MAND  @[@@@@.     @C@@@@EXITED*                               . $H      GR
)@@G@@@D@@@@          TZ        ROPT              . $T READ ONLY  @E@@@@      GS
)@@G@@    J         OMIT              . $A YES,OMIT NO      @E@@@@          LMGT
)@@G@@J       X11,BLDD$F        . $P REBUILD D$FILE   @G@@@@          L,U     GU
)@@G@@  X10,KEYPKT        . ADDRESS OF EDITOR KEY FILE PKT  @E@@@@          TZGV
)@@G@@        KAFIRST           . SKIP IF KEYFILE OK  @F@@@@          LMJ     GW
)@@G@@  X11,KF$AMF        . FLUSH KEY FILE BUFFERS    @H@@@@          P$RINT  GX
)@@G@@                    (PF 1,3,EXITMSG)  . $P PRINT END MSG    @B@@@@      GY
)@@G@@    J         STOPALL           .   @]@@@@$(4).       @ @@@@EXITMSG   'EGZ
)@@G@@DITOR EXITED'     @]@@@@$(1).       @[@@@@.     @A@@@@.         #(VARIABHA
)@@G@@LE) COMMAND       @[@@@@.     @]@@@@EDGOTOX.    @E@@@@          LA      HB
)@@G@@  A0,SAVEX11        . $P GET RETURN ADDR  @G@@@@          SA        A0,GHC
)@@G@@ETVX11        . $P SAVE IT FOR GETVARX RTN      @ @@@@          SLJ     HD
)@@G@@  GETVARX   @I@@@@          LA,S5                        A0,VARSW       HE
)@@G@@                  . $P GET    @F@@@@          TE,U      A0,2            HF
)@@G@@  . $T PIC 9 OR PIC 9 COMP    @ @@@@          J         ERROR1    @E@@@@HG
)@@G@@          LA        A0,VARXVAL        . $P GET THE VALUE    @B@@@@      HH
)@@G@@    J         EDGOXIN           .   @[@@@@.     @[@@@@.     @^@@@@.     HI
)@@G@@    # COMMAND     @[@@@@.     @C@@@@EDGOTO                              HJ
)@@G@@  . $H      @E@@@@          SLJ       GETD1             . $P GET LINE # HK
)@@G@@(FD)  @]@@@@EDGOXIN.    @E@@@@                                      . $PHL
)@@G@@ CONVERT TO BINARY@E@@@@          LA        A1,RECNMC         . $P GET LHM
)@@G@@AST LINE #  @E@@@@          TLE       A1,A0             . $P CHK IF OVERHN
)@@G@@ EOF  @B@@@@          J         HITEOF            .   @E@@@@          SAHO
)@@G@@        A0,LN             . $P SAVE THE LN      @D@@@@          J       HP
)@@G@@  *SAVEX11          . $J RETURN     @C@@@@SENDEOF*  +0                  HQ
)@@G@@        . $H      @C@@@@          E$DIT                        EDPKT    HR
)@@G@@@C@@@@          E$FD1                        ('EOF:') @C@@@@          E$HS
)@@G@@DECV                      RECNMC    @#@@@@          E$DITX  @E@@@@      HT
)@@G@@    LA,U      A0,1              . $P SET EOF STATUS   @A@@@@          SAHU
)@@G@@        A0,STATUS       @B@@@@          LA        A0,(PF 1,14,PRINT)    HV
)@@G@@@E@@@@          TNZ       PERFSW            . $T PERFORM MODE     @ @@@@HW
)@@G@@          ER        PRINT$    @ @@@@          J         *SENDEOF  @[@@@@HX
)@@G@@.     @]@@@@HITEOF.     @ @@@@          SLJ       SENDEOF   @^@@@@      HY
)@@G@@    SZ        LN  @ @@@@          J         *SAVEX11  @[@@@@.     @ @@@@HZ
)@@G@@.         TOP       COMMAND   @[@@@@.     @C@@@@TOP                     IA
)@@G@@              . $H      @I@@@@          SZ        LN                    IB
)@@G@@                              . $P SET    @D@@@@          J         *SAVIC
)@@G@@EX11          . $J RETURN     @[@@@@.     @^@@@@.         BOTTOM COMMANDID
)@@G@@@[@@@@.     @C@@@@BOTTOM                                . $H      @E@@@@IE
)@@G@@          LA        A0,RECNMC         . $P GET LAST LINE #  @E@@@@      IF
)@@G@@    SA        A0,LN             . $P SET LN = LAST    @D@@@@          J IG
)@@G@@        *SAVEX11          . $J RETURN     @[@@@@.     @^@@@@.         ENIH
)@@G@@D AND OMIT  @[@@@@.     @C@@@@ENDED                                 . $HII
)@@G@@      @C@@@@OMIT                                  . $H      @E@@@@      IJ
)@@G@@    P$RINT                      (PF 1,4,ENDMSG)       @]@@@@STOPALL.    IK
)@@G@@@A@@@@          LA        A0,IINAME       @^@@@@          ER        INT$IL
)@@G@@@ @@@@          ER        EXIT$     @]@@@@$(4).       @A@@@@ENDMSG    'NIM
)@@G@@O CORRECTION APPLIED'   @]@@@@$(1).       @[@@@@.     @^@@@@.         N IN
)@@G@@OR + COMMAND@[@@@@.     @E@@@@SKIPF                                 . $HIO
)@@G@@ SKIP FORWARD     @E@@@@          SLJ       GETD1             . $P GET SIP
)@@G@@KIP COUNT   @F@@@@          AA        A0,LN             . $P COMPUTE NEWIQ
)@@G@@ LINE NUM.  @F@@@@          J         EDGOTO+1          . $P PERFORM IT IR
)@@G@@AS A GOTO   @[@@@@.     @^@@@@.         - COMMAND     @[@@@@.     @E@@@@IS
)@@G@@SKIPB                                 . $H SKIP BACKWARD    @E@@@@      IT
)@@G@@    SLJ       GETD1             . $P GET SKIPB COUNT  @E@@@@          LAIU
)@@G@@        A1,LN             . $P GET CURRENT LN   @E@@@@          ANA     IV
)@@G@@  A1,A0             . $P COMPUTE NEW LN   @D@@@@          SA        A1,LIW
)@@G@@N             . $P SAVE IT    @I@@@@          TP        A1              IX
)@@G@@                                    . $T IS     @I@@@@          SZ      IY
)@@G@@  LN                                                  . $P ZER    @D@@@@IZ
)@@G@@          J         *SAVEX11          . $J RETURN     @[@@@@.     @A@@@@JA
)@@G@@.         SUBROUTINE TO GET INDATA1 @[@@@@.     @C@@@@GETD1     +0      JB
)@@G@@                    . $H      @G@@@@          LA,U      A0,3            JC
)@@G@@  . $P PKT LENG MUST BE 4 OR GREATER@C@@@@          TG        A0,LENG   JD
)@@G@@        . $T IS IT@I@@@@          ER        ERR$              . $       JE
)@@G@@                        INTERNAL    @B@@@@          DL        A0,INDATA1JF
)@@G@@        .   @G@@@@          SLJ       FD$BIN            . $P CONVERT 1STJG
)@@G@@ DATA TO BIN      @D@@@@          J         *GETD1            . $J RETURJH
)@@G@@N     @[@@@@.     @A@@@@.         SUBROUTINE TO GET INDATA2 @[@@@@.     JI
)@@G@@@C@@@@GETD2     +0                          . $H      @B@@@@          LAJJ
)@@G@@,U      A0,3              .   @B@@@@          TG        A0,LENG         JK
)@@G@@  .   @E@@@@          ER        ERR$              . $ INTERNAL ERROR    JL
)@@G@@@F@@@@          LA        A0,(-1)           . $P SET A0 TO NEGATIVE     JM
)@@G@@@F@@@@          LA,U      A1,6              . $P PKT MUST HAVE 6 WORDS  JN
)@@G@@@B@@@@          TE        A1,LENG           .   @C@@@@          J       JO
)@@G@@  *GETD2            . $       @B@@@@          DL        A0,INDATA2      JP
)@@G@@  .   @B@@@@          SLJ       FD$BIN            .   @B@@@@          J JQ
)@@G@@        *GETD2            .   @[@@@@.     @A@@@@.         BUILD TF$AM PKJR
)@@G@@T FOR D NUM1@D@@@@.                                     D NUM1 NUM2     JS
)@@G@@@C@@@@.                                     DITTO NUM1@E@@@@.           JT
)@@G@@                          DITTO NUM1 NUM2       @C@@@@.                 JU
)@@G@@                    M NUM1    @D@@@@.                                   JV
)@@G@@  M NUM1 NUM2     @C@@@@BLDPKT    +0                          . $H      JW
)@@G@@@B@@@@          SLJ       GETD1             .   @D@@@@          JZ      JX
)@@G@@  A0,ERROR2         . $P GET NUM1   @E@@@@          LA        A4,A0     JY
)@@G@@        . $P SAVE IT IN A4    @D@@@@          SLJ       GETD2           JZ
)@@G@@  . $P GET NUM2   @E@@@@          JN        A0,NONUM2         . $T CHK IKA
)@@G@@F NUM2 IN   @F@@@@          TLE       A0,A4             . $T CHK NUM2 > KB
)@@G@@OR = NUM1   @B@@@@          J         ERROR2            .   @B@@@@      KC
)@@G@@    SA        A4,NUM1           .   @B@@@@          SA        A0,NUM2   KD
)@@G@@        .   @G@@@@CHKRNG.                               . $P CHECK IF(NUKE
)@@G@@M1 OR NUM2) > MAX.@B@@@@          LA        A0,RECNMC         .   @D@@@@KF
)@@G@@          TLE       A0,NUM1           . $T >=NUM1     @B@@@@          J KG
)@@G@@        HITEOF            .   @D@@@@          TLE       A0,NUM2         KH
)@@G@@  . $T >=NUM2     @B@@@@          SLJ       SENDEOF           .   @B@@@@KI
)@@G@@          LA        A0,RECNMC         .   @D@@@@          TLE       A0,NKJ
)@@G@@UM2           . $T >=NUM2     @B@@@@          SA        A0,NUM2         KK
)@@G@@  .   @ @@@@          J         *BLDPKT   @[@@@@.     @^@@@@.         NUKL
)@@G@@M1 IN ONLY  @[@@@@.     @]@@@@NONUM2.     @B@@@@          SA        A4,NKM
)@@G@@UM1           .   @B@@@@          SA        A4,NUM2           .   @B@@@@KN
)@@G@@          LA,U      A0,5              .   @E@@@@          TE        A0,TKO
)@@G@@YPE           . $T CHK IF DELETE    @E@@@@          J         CHKRNG    KP
)@@G@@        . $A YES NO,CHKRNG    @E@@@@          LA        A0,LN           KQ
)@@G@@  . $P GET CURRENT LN   @C@@@@          JZ        A0,ERROR3         . --KR
)@@G@@------@B@@@@          SA        A0,NUM1           .   @B@@@@          AAKS
)@@G@@        A0,NUM2           .   @H@@@@          ANA,U                     KT
)@@G@@   A0,1                             .     @B@@@@          SA        A0,NKU
)@@G@@UM2           .   @B@@@@          J         CHKRNG            .   @[@@@@KV
)@@G@@.     @C@@@@.         SPECIAL MODES SWITCHS ON-OFF COMMAND  @[@@@@.     KW
)@@G@@@]@@@@ONMODE.     @E@@@@          SLJ       GETMODE           . $P GET MKX
)@@G@@ODE SW      @E@@@@          LA,U      A0,1              . $P SET IT TO 1KY
)@@G@@      @I@@@@          LX,H2                        X2,,X1               KZ
)@@G@@            . $P GET    @B@@@@          SA        A0,,X2            .   LA
)@@G@@@I@@@@          LA,H1                        A0,,X1                     LB
)@@G@@      . $P GET    @I@@@@          TZ        A0                          LC
)@@G@@                        . $T ANY    @E@@@@          SLJ       0,A0      LD
)@@G@@        . $P PERFORM SPEC RTN @ @@@@          J         *SAVEX11  @]@@@@LE
)@@G@@OFFMODE.    @E@@@@          SLJ       GETMODE           . $P GET MODE SWLF
)@@G@@      @E@@@@          LX        X1,,X1            . $P GET OPT WORD ADDRLG
)@@G@@@E@@@@          SZ        0,X1              . $P SET IT TO 0      @ @@@@LH
)@@G@@          J         *SAVEX11  @[@@@@.     @C@@@@GETMODE   +0            LI
)@@G@@              . $H      @E@@@@          LA        A0,2,X10          . $PLJ
)@@G@@ GET MODE WORD    @I@@@@          LX        X1,(2,MODES-2)              LK
)@@G@@                        . $P GET    @E@@@@          LR        R1,MODECNTLL
)@@G@@        . $P GET MODES COUNT  @B@@@@          SE        A0,2,*X1        LM
)@@G@@  .   @ @@@@          J         ERROR4    @D@@@@          AX,U      X1,1LN
)@@G@@              . $P ADJ ADDR   @D@@@@          J         *GETMODE        LO
)@@G@@  . $J RETURN     @[@@@@.     @E@@@@USE.                                LP
)@@G@@  . $H USE NAME1 NAME2  @E@@@@          SX        X10,SAVEX10       . $PLQ
)@@G@@ SAVE USE PKT ADDR@E@@@@          AX,U      X10,7             . $P POINTLR
)@@G@@ TO NAME2   @E@@@@          LMJ       X11,SYM$TR        . $P CHK IN SYM LS
)@@G@@TBL   @F@@@@          JZ        A0,USERR          . $J USE NAME2 NOT EXILT
)@@G@@ST    @E@@@@          DSL       A0,18             . $P CHK NEW/OLD NAME LU
)@@G@@@D@@@@          TNZ       A0                . $T OLD NAME   @E@@@@      LV
)@@G@@    LDSL      A0,18             . $P USE NEW NAME     @G@@@@          SALW
)@@G@@        A0,NAME2PKT       . $P SAVE ADDR OF NAME2 ADDR      @E@@@@      LX
)@@G@@    LX        X10,SAVEX10       . $P GET PKT ADDR     @E@@@@          AXLY
)@@G@@,U      X10,2             . $P POINT TO NAME1   @E@@@@          LMJ     LZ
)@@G@@  X11,SYM$TR        . $T CHK SYM TBL      @D@@@@          JZ        A0,NMA
)@@G@@EWUSE         . $J NEW NAME1  @E@@@@          DSL       A0,18           MB
)@@G@@  . $T CHK NEW/OLD ENTRY@D@@@@          TNZ       A0                . $TMC
)@@G@@ OLD ONE    @E@@@@          LDSL      A0,18             . $P USE NEW ONEMD
)@@G@@      @E@@@@          LXI,U     A0,1              . $P SET UP TO BT     ME
)@@G@@@E@@@@          LX        X1,NAME2PKT       . $P ADDR OF NAME2    @B@@@@MF
)@@G@@          LXI,U     X1,1              .   @E@@@@          LR,U      R1,3MG
)@@G@@              . $P MOVE 3 WORDS     @B@@@@          BT        A0,,*X1   MH
)@@G@@        .   @D@@@@          J         *SAVEX11          . $P RETURN     MI
)@@G@@@D@@@@NEWUSE.                               . $H NAME1 NEW  @E@@@@      MJ
)@@G@@    LX        X1,SAVEX10        . $P GET USE PKT ADDR @E@@@@          AXMK
)@@G@@,U      X1,2              . $P NAME1 ADDR       @C@@@@          LXI,U   ML
)@@G@@  X1,1              . $       @E@@@@          LX        X2,(1,SYMPKT)   MM
)@@G@@  . $P NEW PKT ADDR     @E@@@@          LR,U      R1,5              . $PMN
)@@G@@ MOVE 5 WORDS     @B@@@@          BT        X2,,*X1           .   @F@@@@MO
)@@G@@          LX        X1,NAME2PKT       . $P GET NAME2 PKT ADDR     @B@@@@MP
)@@G@@          LXI,U     X1,1              .   @E@@@@          LR,U      R1,3MQ
)@@G@@              . $P MOVE 3 WORDS     @B@@@@          BT        X2,,*X1   MR
)@@G@@        .   @E@@@@          LX,U      X10,SYMPKT        . $P NEW PKT ADDMS
)@@G@@R     @D@@@@          LMJ       X11,SYM$TW        . $P CREAT TBL  @D@@@@MT
)@@G@@          J         *SAVEX11          . $J RETURN     @F@@@@USERR.      MU
)@@G@@                          . $H USE NAME2 NOT EXIST    @B@@@@          J MV
)@@G@@        ERROR5            .   @]@@@@$(4).       @^@@@@SYMPKT    RES     MW
)@@G@@  8   @]@@@@SAVEX10   +0@]@@@@NAME2PKT  +0@]@@@@MODES.      @^@@@@      MX
)@@G@@    'BRIEF'       @#@@@@          +BOPT   @^@@@@          'BATCH'       MY
)@@G@@@#@@@@          +POPT   @#@@@@          'LIST'  @#@@@@          +LOPT   MZ
)@@G@@@^@@@@          'DEBUG'       @^@@@@          +DEBUG$,TOPT  @#@@@@      NA
)@@G@@    'READ'  @#@@@@          +ROPT   @^@@@@          'MONITO'      @#@@@@NB
)@@G@@          +MOPT   @ @@@@MODECNT   +(MODECNT-MODES)/2  @]@@@@$(1).       NC
)@@G@@@]@@@@$(4).       @ @@@@TYPE      EQUF      0,X10,S3  @ @@@@INDATA1   EQND
)@@G@@UF      2,X10     @ @@@@INDATA2   EQUF      4,X10     @ @@@@LENG      EQNE
)@@G@@UF      0,X10,T1  @^@@@@TYPETBL   +0,ERROR      @#@@@@          +TOP    NF
)@@G@@@^@@@@          +BOTTOM       @#@@@@          +MOVE   @#@@@@          +DNG
)@@G@@ITTO  @^@@@@          +DELETE       @^@@@@          +EDGOTO       @^@@@@NH
)@@G@@          +EXITED       @#@@@@          +ENDED  @#@@@@          +OMIT   NI
)@@G@@@^@@@@          +EDGOTOX      @#@@@@          +SKIPF  @#@@@@          +SNJ
)@@G@@KIPB  @^@@@@          +ONMODE       @^@@@@          +OFFMODE      @#@@@@NK
)@@G@@          +USE    @ @@@@PF        FORM      12,6,18   @]@@@@TFPKT     +0NL
)@@G@@@]@@@@          +0@]@@@@          +0@]@@@@          +0@]@@@@          +0NM
)@@G@@@ @@@@NUM1      EQUF      TFPKT+3   @ @@@@NUM2      EQUF      TFPKT+4   NN
)@@G@@@ @@@@NEWLN     EQUF      TFPKT+1   @ @@@@CURLN     EQUF      TFPKT     NO
)@@G@@@A@@@@TFSTAT    EQUF      TFPKT+2,,T1     @]@@@@$(1).       @[@@@@.     NP
)@@G@@@A@@@@.         ERROR PRINTING SECTION    @A@@@@.                   STATNQ
)@@G@@US: 1 - 5   @[@@@@.     @]@@@@ERROR1 .    @^@@@@          LA,U      A0,1NR
)@@G@@@ @@@@          J         PRTERR    @]@@@@ERROR2.     @^@@@@          LANS
)@@G@@,U      A0,2@ @@@@          J         PRTERR    @]@@@@ERROR3.     @^@@@@NT
)@@G@@          LA,U      A0,3@ @@@@          J         PRTERR    @]@@@@ERROR4NU
)@@G@@.     @^@@@@          LA,U      A0,4@ @@@@          J         PRTERR    NV
)@@G@@@]@@@@ERROR5.     @^@@@@          LA,U      A0,5@ @@@@          J       NW
)@@G@@  PRTERR    @]@@@@PRTERR.     @A@@@@          LA        A1,STATCODE     NX
)@@G@@@A@@@@          SA        A1,STATUS       @A@@@@          LA        A1,FNY
)@@G@@ATCODE      @ @@@@          SA        A1,FATAL  @A@@@@          LX      NZ
)@@G@@  X2,MSGADDR      @E@@@@          LA        A0,,X2            . $P GET POA
)@@G@@RINT PKT    @E@@@@          TZ        PERFSW            . $T PERFORM MODOB
)@@G@@E     @C@@@@          TZ        FATAL             . $T FATAL@ @@@@      OC
)@@G@@    ER        PRINT$    @ @@@@          J         *SAVEX11  @]@@@@$(4). OD
)@@G@@      @A@@@@ERMSG5    'USE NAME2 NOT DEFINDED'  @ @@@@ML5       EQU     OE
)@@G@@  $-ERMSG5  @C@@@@ERMSG1    'LINE NUMBER CAN NOT BE EVALUATED'    @ @@@@OF
)@@G@@ML1       EQU       $-ERMSG1  @ @@@@ERMSG4    'UNDEFINED MODE'    @ @@@@OG
)@@G@@ML4       EQU       $-ERMSG4  @B@@@@ERMSG3    'ILLEGAL COMMAND AT LINE 0OH
)@@G@@'     @ @@@@ML3       EQU       $-ERMSG3  @A@@@@ERMSG2    'ERROR IN LINEOI
)@@G@@ NUMBER(S)' @ @@@@ML2       EQU       $-ERMSG2  @]@@@@ERRTBL.     @ @@@@OJ
)@@G@@TBL       FORM      12,6,18   @C@@@@          TBL       2,1,(PF 1,ML1,EROK
)@@G@@MSG1)       @C@@@@          TBL       3,1,(PF 1,ML2,ERMSG2)       @C@@@@OL
)@@G@@          TBL       4,1,(PF 1,ML3,ERMSG3)       @C@@@@          TBL     OM
)@@G@@  5,0,(PF 1,ML4,ERMSG4)       @C@@@@          TBL       8,0,(PF 1,ML5,ERON
)@@G@@MSG5)       @A@@@@STATCODE  EQUF      ERRTBL-1,A0,T1  @A@@@@MSGADDR   EQOO
)@@G@@UF      ERRTBL-1,A0,H2  @A@@@@FATCODE   EQUF      ERRTBL-1,A0,S3  @#@@@@OP
)@@G@@          END     ___     . $J USE NAME2 NOT EXIST    @E@@@@          DSOQ
)@@G@@L       A0,18             . $P CHK NEW/OLD NAME *[@@@@*SDFF*@[@@@@.     OR
)@@G@@@D@@@@.                   SUMMARY OF EDITOR STATUS CODES    @[@@@@.     OS
)@@G@@@B@@@@.         * INDICATES FATAL ERRORS, AND   @E@@@@.                 OT
)@@G@@  1. EDITOR WILL TERMINATED IN BATCH MODE @D@@@@.                   2. POU
)@@G@@ERFORM WILL BE TERMINATED     @[@@@@.     @[@@@@.     @A@@@@.         EROV
)@@G@@ROR(S) FROM  MAIN       @[@@@@.     @A@@@@. 91*     'NO INPUT FILE SPECIOW
)@@G@@FIED' @^@@@@. 92*     'SYNTAX ERROR'@C@@@@. 90*     'INVALID COMMAND FOROX
)@@G@@ NON-PROC MODE'   @[@@@@.     @A@@@@.         ERROR(S) FROM  RDCTBL     OY
)@@G@@@[@@@@.     @A@@@@. 93*     'NO C$FILE AVAILABLE'     @[@@@@.     @A@@@@OZ
)@@G@@.         ERROR(S) FROM  LOCATE     @[@@@@.     @^@@@@. 6       'NO FINDPA
)@@G@@'     @E@@@@. 7*      'NOT AN OBJECT RECORD OR NOT A RECORD NAME'       PB
)@@G@@@C@@@@. 11*     'VARIABLE MUST BE A PIC 9 COMP ITEM'  @A@@@@. 13      'DPC
)@@G@@BP=0 NOT ALLOWED'       @B@@@@. 15      'END OF SET OR AN EMPTY SET'    PD
)@@G@@@ @@@@. 16*     'NOT A SET NAME'    @D@@@@. 17      'BAD SET POINTER IN PE
)@@G@@THE CURRENT RECORD'     @A@@@@. 18      'NO CURRENCY FOR THE SET' @C@@@@PF
)@@G@@. 19      'NEXT SET MEMBER NOT IN D$FILE'       @E@@@@. 20      'CURRENTPG
)@@G@@ SET MEMBER(MANUAL) NO LONGER IN D$FILE'  @A@@@@. 9       'CURRENT LINE PH
)@@G@@IS 0'       @C@@@@. 10      'CURRENT LINE IS A CONTROL LINE'      @[@@@@PI
)@@G@@.     @A@@@@.         ERROR(S) FROM  EDIT$WK    @[@@@@.     @B@@@@. 1   PJ
)@@G@@    'EOF(END OF FILE ENCOUNTERED)'  @C@@@@. 2*      'LINE NUMBER CAN NOTPK
)@@G@@ BE EVALUATED'    @ @@@@. 5       'UNDEFINED MODE'    @B@@@@. 4*      'IPL
)@@G@@LLEGAL COMMAND AT LINE 0'     @A@@@@. 3*      'ERROR IN LINE NUMBER(S)' PM
)@@G@@@A@@@@. 8       'USE NAME2 NOT DEFINDED'  @[@@@@.     @A@@@@.         ERPN
)@@G@@ROR(S) FROM  CHANGE     @[@@@@.     @^@@@@. 21      'NO FIND'     @A@@@@PO
)@@G@@. 22*     'ERROR IN LINE NUMBER'    @B@@@@. 23*     'ILLEGAL COMMAND AT PP
)@@G@@LINE 0'     @[@@@@.     @ @@@@.         ERROR(S) FROM  LET  @[@@@@.     PQ
)@@G@@@C@@@@. 24*     'AN OLD ITEM CAN NOT BE MODIFIED'     @E@@@@. 25      'SPR
)@@G@@YMBOL FOR ARRAY IS ALREADY DEFINED - IGNORED'   @C@@@@. 26*     'ARITHMAPS
)@@G@@TIC OPR ERROR - OVERFLOW'     @C@@@@. 27*     'ARITHMATIC OPR ERROR - DIPT
)@@G@@VIDED BY 0 '@D@@@@. 28*     'INCOMPATABLE VARIABLE TYPES IN AN EQUATE'  PU
)@@G@@@C@@@@. 30*     'INVALID SET LINKAGE FOR THE SET'     @A@@@@. 31*     'IPV
)@@G@@LLEGAL ITEM TO MODIFY'  @E@@@@. 33*     'NOT A RECORD NAME OR LINE # CANPW
)@@G@@ NOT BE EVALUATED'@C@@@@. 34*     'LINE NUMBER EXCEEDS MAX. OR 0'       PX
)@@G@@@C@@@@. 35*     'RECORD HAS NO MANUAL CONTROL WORD'   @E@@@@. 36*     'CPY
)@@G@@URRENT OF THE RECORD NO LONGER IN D$FILE'       @A@@@@. 37*     'UNDEFINPZ
)@@G@@ED SET NAME'      @A@@@@. 38*     'UNDEFINED RECORD NAME'   @A@@@@. 40* QA
)@@G@@    'NO CURRENT OF THE RECORD'@E@@@@. 41      'RECORD NOT PARTICIPATING QB
)@@G@@IN THE MANUAL SET'      @C@@@@. 42*     'RECORD AND SET ARE NOT RELATED'QC
)@@G@@      @B@@@@. 43*     'A BAD OCTAL NUMBER ENTERED'    @C@@@@. 44*     'IQD
)@@G@@NDEX VALUE CAN NOT BE EVALUATED'    @B@@@@. 45*     'PIC X ITEM USED AS QE
)@@G@@AN INDEX'   @C@@@@. 46*     'AN ITEM IS INCORRECTLY INDEXED'      @C@@@@QF
)@@G@@. 32*     'UNDEFINED ITEM OR NO CURRENT VALUE'  @C@@@@. 47*     'DEPENDIQG
)@@G@@NG ON VALUE OUT OF RANGE'     @C@@@@. 48*     'RECORD LENGTH CAN NOT BE QH
)@@G@@CHANGED'    ___^9GDDIC*)D1PD(]C(M^[ F[#C( C-N^[HCDS 0)D9M^@0^8)^@)@G@@_@QI
)@@G@@ 0)AS5 K)^@)^@)^9MC(#D9MC))D[[ES)D1J^[HCDIE([D))CTJD1OELJD))E9JEL^^8)^@)QJ
)@@G@@*[@@@@*SDFF*@[@@@@.     @B@@@@.         CHANGE WORKER ROUTINE (C,CO)    QK
)@@G@@@[@@@@.     @#@@@@          AXR$    @#@@@@$(4)      LIT.    @]@@@@$(1). QL
)@@G@@      @C@@@@CHANGE$*                              . $H      @[@@@@.     QM
)@@G@@@^@@@@.         INITIALIZATION@[@@@@.     @E@@@@          SZ        STATQN
)@@G@@US            . $P RESET STATUS     @E@@@@          SX,H2     X11,SAVEX1QO
)@@G@@1       . $P SAVE RETURN ADDR @E@@@@          SZ        NOFIND          QP
)@@G@@  . $P RESET NO FIND SW @E@@@@          LX        X2,X10            . $PQQ
)@@G@@ GET G IND ADDR   @B@@@@          AX,U      X2,2              .   @F@@@@QR
)@@G@@          SX        X2,G              . $P SAVE IT IN SNO PKT     @E@@@@QS
)@@G@@          LA        A0,TYPE           . $P SAVE CHANGE TYPE @B@@@@      QT
)@@G@@    SA        A0,TYPEX          .   @[@@@@.     @C@@@@.         COMPUTE QU
)@@G@@NUM. OF LINE TO BE CHANGED    @[@@@@.     @D@@@@          LA        A0,LQV
)@@G@@INEM          . $P GET INPUT  @E@@@@          JZ        A0,SINGLE       QW
)@@G@@  . $P 1 LINE IF 0      @E@@@@          TE,U      A0,'A'            . $TQX
)@@G@@ ALL SEBSEG. LINE @E@@@@          J         LINENUM           . $A YES NQY
)@@G@@O,LINENUM   @E@@@@          LA        A0,RECNMC         . $P GET MAX LINQZ
)@@G@@E     @E@@@@          SA        A0,LINECNT        . $P SET TO MAX       RA
)@@G@@@F@@@@          LX,U      X2,('G     ')     . $P SET TO POINT TO G IND  RB
)@@G@@@B@@@@          SX        X2,G              .   @B@@@@          J       RC
)@@G@@  GETC1             .   @[@@@@.     @C@@@@SINGLE                        RD
)@@G@@        . $H      @E@@@@          LA,U      A0,1              . $P SET LRE
)@@G@@INECNT TO 1 @B@@@@          SA        A0,LINECNT        .   @I@@@@      RF
)@@G@@    TNZ       LN                                                  . $P MRG
)@@G@@AK    @B@@@@          J         ERROR3            .   @B@@@@          J RH
)@@G@@        GETC1             .   @[@@@@.     @C@@@@LINENUM                 RI
)@@G@@              . $H      @D@@@@          DL        A0,3,X10          . $PRJ
)@@G@@ GET INPUT  @E@@@@          SLJ       FD$BIN            . $P CONVERT TO RK
)@@G@@BINARY@E@@@@          JZ        A0,ERROR2         . $P MAKE SURE NOT 0  RL
)@@G@@@D@@@@          SA        A0,LINECNT        . $P SAVE IT    @[@@@@.     RM
)@@G@@@A@@@@.         GET C1, THE FIRST STRING  @[@@@@.     @C@@@@GETC1       RN
)@@G@@                          . $H      @E@@@@          LX        X2,X10    RO
)@@G@@        . $P COMPUTE C1 ADDR  @D@@@@          AX,U      X2,3            RP
)@@G@@  . + OFF-SET     @E@@@@          LA,U      A0,1              . $T CHK LRQ
)@@G@@INE TYPE    @C@@@@          TNE       A0,LINEM          . $       @B@@@@RR
)@@G@@          AX,U      X2,2              .   @F@@@@          SX        X2,CRS
)@@G@@1             . $P SAVE IT IN SNO PKT     @E@@@@          LA        A0,0RT
)@@G@@,X2           . $P GET STRING LENGTH@F@@@@          DSL       A0,36     RU
)@@G@@        . $P COMPUTE WORD COUNT     @B@@@@          DI,U      A0,6      RV
)@@G@@        .   @I@@@@          TZ        A1                                RW
)@@G@@                  . $P REM    @B@@@@          A,U       A0,1            RX
)@@G@@  .   @E@@@@          A,U       A0,1              . $P SET REPEATER     RY
)@@G@@@E@@@@          LR        R2,A0             . $P TEMP. SAVE IN R2 @[@@@@RZ
)@@G@@.     @B@@@@.         GET C2, THE CHANGE TO STRING    @[@@@@.     @E@@@@SA
)@@G@@          LX        X2,X10            . $P COMPUTE C2 ADDR  @D@@@@      SB
)@@G@@    AX,U      X2,3              . + OFF-SET     @D@@@@          AX      SC
)@@G@@  X2,R2             . $P SKIP C1    @E@@@@          LA,U      A0,1      SD
)@@G@@        . $T CHK LINE TYPE    @C@@@@          TNE       A0,LINEM        SE
)@@G@@  . $       @B@@@@          AX,U      X2,2              .   @D@@@@      SF
)@@G@@    SX        X2,C2             . $P SAVE IT    @[@@@@.     @ @@@@.     SG
)@@G@@    SET LN TO 1 IF 0    @[@@@@.     @B@@@@          LA,U      A0,1      SH
)@@G@@        .   @H@@@@          TNZ       LN                                SI
)@@G@@                  .     @B@@@@          SA        A0,LN             .   SJ
)@@G@@@[@@@@.     @A@@@@.         MCORE$ BUFFER IF NOT YET  @[@@@@.     @D@@@@SK
)@@G@@          TZ        BUFADR            . $T SW SET     @B@@@@          J SL
)@@G@@        CHG0              .   @F@@@@          LA        A0,LAST$D       SM
)@@G@@  . $P COMPUTE LAST$D ADDR    @B@@@@          AA,U      A0,1            SN
)@@G@@  .   @E@@@@          SA        A0,BUFADR         . SET BUFFER ADDR     SO
)@@G@@@E@@@@          A,U       A0,701            . $P 700 WORDS BUFF   @B@@@@SP
)@@G@@          SA        A0,LAST$D         .   @ @@@@          ER        MCORSQ
)@@G@@E$    @[@@@@.     @A@@@@.         MOVE LINE TO WORK BUFFER  @[@@@@.     SR
)@@G@@@C@@@@CHG0                                  . $H      @E@@@@          SLSS
)@@G@@J       GETCURLN          . $P GET CURRENT LINE @E@@@@          LX      ST
)@@G@@  X2,BUFADR         . $P GET BUFFER ADDR  @E@@@@          LR        R1,RSU
)@@G@@DA            . $P GET LINE LENGTH  @B@@@@          LA        A0,R1     SV
)@@G@@        .   @G@@@@          MSI,U     A0,6              . $P CONVERT TO SW
)@@G@@CHAR LENGTH       @E@@@@          SA        A0,,X2            . TEMP. SASX
)@@G@@VE IT       @E@@@@          AX,U      X2,1              . $ SET TO BUFERSY
)@@G@@(DATA)@B@@@@          LXI,U     X2,1              .   @B@@@@          LXSZ
)@@G@@        X1,(1,RDA+1)      .   @D@@@@          LA        A1,TYPEX        TA
)@@G@@  . $T CHK TYPE   @C@@@@          TE,U      A1,1              . $T CO   TB
)@@G@@@E@@@@          J         COCTAL1           . $A YES,COCTAL1 NO   @D@@@@TC
)@@G@@          BT        X2,,*X1           . $P TRANSFER   @B@@@@          J TD
)@@G@@        CALLSNO           .   @[@@@@.     @B@@@@.         CONVERT TO OCTTE
)@@G@@AL FORMAT(CO)     @[@@@@.     @C@@@@COCTAL1                             TF
)@@G@@  . $H      @E@@@@          SLJ       EXPAND            . $P CONVERT IT TG
)@@G@@      @E@@@@          LX        X1,BUFADR         . $P GET BUFFER ADDR  TH
)@@G@@@E@@@@          LA        A0,,X1            . $P GET CHAR COUNT   @C@@@@TI
)@@G@@          MSI,U     A0,2              . $P *2   @D@@@@          SA      TJ
)@@G@@  A0,,X1            . $@ SAVE IT    @[@@@@.     @C@@@@.         CALL SNOTK
)@@G@@FLAKE PROG. TO PERFORM CHANGE @[@@@@.     @C@@@@CALLSNO                 TL
)@@G@@              . $H      @A@@@@          LMJ       X11,CHANGE      @]@@@@TM
)@@G@@BUFADR    +0@]@@@@C1        +0@]@@@@C2        +0@]@@@@G         +0@[@@@@TN
)@@G@@.     @ @@@@.         RETURNED FROM SNO   @[@@@@.     @E@@@@          JZTO
)@@G@@        A0,NOCHG          . $T C1 MATCHED       @B@@@@          SA      TP
)@@G@@  A0,NOFIND         .   @[@@@@.     @A@@@@.         MOVE CHANGED LINE TOTQ
)@@G@@ RDA  @[@@@@.     @E@@@@          LX        X1,BUFADR         . $P GET BTR
)@@G@@UFF ADDR    @F@@@@          LA,H2     A0,,X1            . $P GET MODIFIETS
)@@G@@D LENGTH    @F@@@@          AX,U      X1,1              . $P COMPUTE BUFTT
)@@G@@FER ADDR    @E@@@@          LXI,U     X1,1              . $P SET UP FOR TU
)@@G@@BT    @E@@@@          LX        X2,(1,RDA+1)      . $P SET UP FOR BT    TV
)@@G@@@F@@@@          LA        A1,A0             . $P COMPUTE NUM OF WORDS   TW
)@@G@@@B@@@@          DSL       A1,36             .   @B@@@@          DI,U    TX
)@@G@@  A1,6              .   @H@@@@          TZ        A2                    TY
)@@G@@                              .     @^@@@@          A,U       A1,1@E@@@@TZ
)@@G@@          SA        A1,RDA            . $P SAVE IT IN RDA   @E@@@@      UA
)@@G@@    LR        R1,A1             . $P SET REPEATER     @B@@@@          LAUB
)@@G@@        A1,TYPEX          .   @C@@@@          TE,U      A1,1            UC
)@@G@@  . $T CO   @E@@@@          J         COCTAL2           . $A YES,COCTAL2UD
)@@G@@ NO   @D@@@@          BT        X2,,*X1           . $P TRANSFER   @C@@@@UE
)@@G@@          J         CALLT$F           . $J      @[@@@@.     @B@@@@.     UF
)@@G@@    CONVERT BACK TO REGULAR STRING  @[@@@@.     @C@@@@COCTAL2           UG
)@@G@@                    . $H      @B@@@@          SLJ       CONTRACT        UH
)@@G@@  .   @F@@@@          LX        X1,BUFADR         . $P COMPUTE NUM. OF WUI
)@@G@@ORDS  @F@@@@          LA        A0,,X1            . $P GET UNCONV CHAR CUJ
)@@G@@OUNT  @B@@@@          DSL       A0,36             .   @B@@@@          DIUK
)@@G@@,U      A0,12             .   @H@@@@          TZ        A1              UL
)@@G@@                                    .     @B@@@@          A,U       A0,1UM
)@@G@@              .   @B@@@@          SA        A0,RDA            .   @[@@@@UN
)@@G@@.     @A@@@@.         CALL TF$AM TO CHANGE      @[@@@@.     @C@@@@CALLT$UO
)@@G@@F                               . $H      @D@@@@          LA        A0,RUP
)@@G@@DA            . $P SET TFPKT  @G@@@@          SA        A0,TF$PKT+2     UQ
)@@G@@  . $P RECORD LENGTH & CLEAR STATUS @E@@@@          LA        A0,RDALN  UR
)@@G@@        . $P SET LINE NUMBER  @B@@@@          SA        A0,TF$PKT       US
)@@G@@  .   @B@@@@          LX,U      X10,TF$PKT        .   @B@@@@          LMUT
)@@G@@J       X11,TF$C          .   @D@@@@          TZ,T1     TF$PKT+2        UU
)@@G@@  . $T STATUS 0   @^@@@@          ER        ERR$@E@@@@          LA      UV
)@@G@@  A0,TYPEX          . $P GET C TYPE       @F@@@@          LX,U      X10,UW
)@@G@@PRTP          . $P SET UP TO PRINT PN     @D@@@@          TE,U      A0,1UX
)@@G@@              . $T C OR CO    @C@@@@          LX,U      X10,PRTPO       UY
)@@G@@  . $       @D@@@@          TNZ       BOPT              . $T BRIEF ON   UZ
)@@G@@@B@@@@          LMJ       X11,PRINTL        .   @[@@@@.     @A@@@@.     VA
)@@G@@    CHANGE NXT IF REQ'D       @[@@@@.     @C@@@@NOCHG                   VB
)@@G@@              . $H      @A@@@@          LA        A0,LINECNT      @B@@@@VC
)@@G@@          ANA,U     A0,1              .   @B@@@@          JZ        A0,EVD
)@@G@@NDCHG         .   @B@@@@          SA        A0,LINECNT        .   @B@@@@VE
)@@G@@          LA        A0,LN             .   @B@@@@          TG        A0,RVF
)@@G@@ECNMC         .   @ @@@@          J         HITEOF    @B@@@@          AAVG
)@@G@@,U      A0,1              .   @B@@@@          SA        A0,LN           VH
)@@G@@  .   @ @@@@          J         CHG0.     @[@@@@.     @^@@@@.         ENVI
)@@G@@D AHANGE    @[@@@@.     @]@@@@HITEOF.     @ @@@@          SLJ       SENDVJ
)@@G@@EOF   @^@@@@          SZ        LN  @B@@@@          SZ        STATUS    VK
)@@G@@        .   @]@@@@ENDCHG.     @ @@@@          TZ        NOFIND    @ @@@@VL
)@@G@@          J         *SAVEX11  @ @@@@          J         ERROR1    @]@@@@VM
)@@G@@$(4).       @ @@@@PF        FORM      12,6,18   @]@@@@LINECNT   +0@]@@@@VN
)@@G@@SAVEX11   +0@]@@@@TYPEX     +0@]@@@@NOFIND    +0@]@@@@TF$PKT    +0@#@@@@VO
)@@G@@          +RDA+1  @]@@@@          +0@^@@@@PRTP      +0,4,1,,,0    @^@@@@VP
)@@G@@          +3,,,,,0      @^@@@@          '1        '   @^@@@@          ' VQ
)@@G@@        '   @^@@@@PRTPO*    +0,4,4,,,0    @^@@@@          +3,,,,,0      VR
)@@G@@@^@@@@          '1        '   @^@@@@          '         '   @[@@@@.     VS
)@@G@@@B@@@@.         EQUF FOR CHANGE ROUTINE PKT     @[@@@@.     @E@@@@TYPE  VT
)@@G@@    EQUF      0,X10,S3          . CHANGE TYPE (C,CO)  @D@@@@LINK      EQVU
)@@G@@UF      0,X10,T1          . PKT LENGTH    @D@@@@LINEM     EQUF      2,X1VV
)@@G@@0,S2          . LINE COUNT    @[@@@@.     @D@@@@.         ROUTINE TO GETVW
)@@G@@ A LINE(RECORD) FROM TF$AM    @ @@@@.         AS INDICATED BY LN  @[@@@@VX
)@@G@@.     @]@@@@$(1).       @C@@@@GETCURLN  +0                          . $HVY
)@@G@@      @I@@@@          TNZ       LN                                      VZ
)@@G@@            . $ LN C    @^@@@@          ER        ERR$@F@@@@          LAWA
)@@G@@        A0,RECNMC         . $ LN CAB NOT BE > MAX     @D@@@@          TLWB
)@@G@@E       A0,LN             . $T LN > MAX   @^@@@@          ER        ERR$WC
)@@G@@@D@@@@          LA        A0,LN             . $P GET LN     @E@@@@      WD
)@@G@@    TNE       A0,RDALN          . $T IS IT IN CORE    @E@@@@          J WE
)@@G@@        *GETCURLN         . $A YES,*GETCURLN NO @E@@@@          SA      WF
)@@G@@  A0,TFPKT          . $P SAVE LN IN TF$PKT@B@@@@          LX,U      X10,WG
)@@G@@TFPKT         .   @E@@@@          LMJ       X11,TF$RMR        . $P READ WH
)@@G@@THE LINE    @D@@@@          TZ,T1     TFPKT+2           . $T STATUS =0  WI
)@@G@@@B@@@@          ER        ERR$              .   @E@@@@          LA,H2   WJ
)@@G@@  A0,TFPKT+2        . $P GET RECORD LENGTH@D@@@@          SA        A0,RWK
)@@G@@DA            . $P SAVE IT    @D@@@@          LA        A0,LN           WL
)@@G@@  . $P GET LN     @B@@@@          SA        A0,RDALN          .   @D@@@@WM
)@@G@@          J         *GETCURLN         . $J RETURN     @]@@@@$(4).       WN
)@@G@@@]@@@@TFPKT.      @]@@@@          +0@#@@@@          +RDA+1  @]@@@@      WO
)@@G@@    +0@]@@@@$(1).       @[@@@@.     @C@@@@.         EXPAND A STRING TO AWP
)@@G@@N OCTAL FORMAT    @[@@@@.     @A@@@@.         (IN) X1=ADDR OF STRING    WQ
)@@G@@@A@@@@.         X2=ADDR OF OCTAL STRING   @^@@@@.         A0=LENGTH     WR
)@@G@@@[@@@@.     @]@@@@$(1).       @C@@@@EXPAND*   +0                        WS
)@@G@@  . $H      @D@@@@          LXI,U     X1,1              . $P SET X1,X2  WT
)@@G@@@B@@@@          LXI,U     X2,1              .   @F@@@@          DSL     WU
)@@G@@  A0,36             . $P COMPUTE NUM. OF WORDS  @B@@@@          DI,U    WV
)@@G@@  A0,6              .   @I@@@@          TZ        A1                    WW
)@@G@@                              . $T REM    @B@@@@          A,U       A0,1WX
)@@G@@              .   @E@@@@          LR        R1,A0             . $P SET RWY
)@@G@@EPEATER     @[@@@@.     @^@@@@.         EXPAND LOOP   @[@@@@.     @C@@@@WZ
)@@G@@EXPLOP1                               . $H      @D@@@@          JGD     XA
)@@G@@  R1,$+2            . $T DONE ALL   @E@@@@          J         *EXPAND   XB
)@@G@@        . $A YES,*EXPAND NO   @G@@@@          LR,U      R2,2            XC
)@@G@@  . $P EXPAND 1 WORD TO 2 WORDS     @E@@@@          LA        A0,,*X1   XD
)@@G@@        . $P GET A WORD       @C@@@@EXPLOP2                             XE
)@@G@@  . $H      @E@@@@          JGD       R2,$+2            . $T 2ND WORD DOXF
)@@G@@NE    @E@@@@          J         EXPLOP1           . $A YES,EXPLOP1 NO   XG
)@@G@@@B@@@@          LA        A1,(0060606060606)    @E@@@@          LR,U    XH
)@@G@@  R3,6              . $P 6 CHAR A WORD    @C@@@@EXPLOP3                 XI
)@@G@@              . $H      @E@@@@          JGD       R3,$+2            . $TXJ
)@@G@@ GOT 6 CHAR       @E@@@@          J         SAVEIT1           . $A YES,SXK
)@@G@@AVEIT NO    @G@@@@          LDSC      A0,3              . $P SHIFT 3 BITXL
)@@G@@S FOR A CGAR      @B@@@@          LSSC      A1,3              .   @B@@@@XM
)@@G@@          J         EXPLOP3           .   @C@@@@SAVEIT1                 XN
)@@G@@              . $H      @B@@@@          SSC       A1,3              .   XO
)@@G@@@E@@@@          SA        A1,,*X2           . $P SAVE A WORD      @D@@@@XP
)@@G@@          J         EXPLOP2           . $J NXT WORD   @[@@@@.     @E@@@@XQ
)@@G@@.         CONTRACT AN OCTAL STRING TO A REGULAR STRING      @[@@@@.     XR
)@@G@@@C@@@@.         (IN)      X1=ADDR OF OCTAL STRING     @B@@@@.           XS
)@@G@@        A0=LENGTH IN CHAR     @A@@@@.                   X2=STRING ADDR  XT
)@@G@@@[@@@@.     @C@@@@CONTRACT* +0                          . $H      @D@@@@XU
)@@G@@          LXI,U     X1,1              . $P SET X1,X2  @^@@@@          LXXV
)@@G@@I,U     X2,1@F@@@@          DSL       A0,36             . $P COMPUTE NUMXW
)@@G@@. OF CHAR   @B@@@@          DI,U      A0,12             .   @H@@@@      XX
)@@G@@    TZ        A1                                                  .     XY
)@@G@@@B@@@@          A,U       A0,1              .   @E@@@@          LR      XZ
)@@G@@  R1,A0             . $P SET REPEATER     @C@@@@CNTRLOP1                YA
)@@G@@              . $H      @D@@@@          JGD       R1,$+2            . $TYB
)@@G@@ DONE ALL   @E@@@@          J         *CONTRACT         . $A YES,*CONTRAYC
)@@G@@CT NO @B@@@@          LR,U      R2,2              .   @C@@@@CNTRLOP2    YD
)@@G@@                          . $H      @E@@@@          JGD       R2,$+2    YE
)@@G@@        . $T GOT A WHOLE WORD @E@@@@          J         SAVEIT2         YF
)@@G@@  . $A YES,SAVEIT NO    @E@@@@          LA        A1,,*X1           . $PYG
)@@G@@ GET A WORD       @B@@@@          LR,U      R3,6              .   @C@@@@YH
)@@G@@CNTRLOP3                              . $H      @D@@@@          JGD     YI
)@@G@@  R3,$+2            . $T 6 TO 3     @C@@@@          J         CNTRLOP2  YJ
)@@G@@        . $J      @E@@@@          LSSL      A1,3              . $P SHIFTYK
)@@G@@ 3 BITS     @E@@@@          LDSL      A0,3              . $P DROP 3 BITSYL
)@@G@@      @B@@@@          J         CNTRLOP3          .   @C@@@@SAVEIT2     YM
)@@G@@                          . $H      @D@@@@          SA        A0,,*X2   YN
)@@G@@        . $P SAVE IT    @B@@@@          J         CNTRLOP1          .   YO
)@@G@@@[@@@@.     @A@@@@.         ERROR PRINTING SECTION    @A@@@@.         STYP
)@@G@@ATUS:   21  -  23       @[@@@@.     @]@@@@$(1).       @]@@@@ERROR1 .    YQ
)@@G@@@^@@@@          LA,U      A0,1@ @@@@          J         PRTERR    @]@@@@YR
)@@G@@ERROR2.     @^@@@@          LA,U      A0,2@ @@@@          J         PRTEYS
)@@G@@RR    @]@@@@ERROR3.     @^@@@@          LA,U      A0,3@ @@@@          J YT
)@@G@@        PRTERR    @]@@@@PRTERR.     @A@@@@          LA        A1,STATCODYU
)@@G@@E     @A@@@@          SA        A1,STATUS       @A@@@@          LA      YV
)@@G@@  A1,FATCODE      @ @@@@          SA        A1,FATAL  @A@@@@          LXYW
)@@G@@        X2,MSGADDR      @E@@@@          LA        A0,,X2            . $PYX
)@@G@@ GET PRINT PKT    @E@@@@          TZ        PERFSW            . $T PERFOYY
)@@G@@RM MODE     @C@@@@          TZ        FATAL             . $T FATAL@ @@@@YZ
)@@G@@          ER        PRINT$    @ @@@@          J         *SAVEX11  @]@@@@ZA
)@@G@@$(4).       @^@@@@ERMSG1    'NO FIND'     @ @@@@ML1       EQU       $-ERZB
)@@G@@MSG1  @A@@@@ERMSG2    'ERROR IN LINE NUMBER'    @ @@@@ML2       EQU     ZC
)@@G@@  $-ERMSG2  @B@@@@ERMSG3    'ILLEGAL COMMAND AT LINE 0'     @ @@@@ML3   ZD
)@@G@@    EQU       $-ERMSG3  @]@@@@ERRTBL.     @ @@@@TBL       FORM      12,6ZE
)@@G@@,18   @C@@@@          TBL       21,0,(PF 1,ML1,ERMSG1)      @C@@@@      ZF
)@@G@@    TBL       22,1,(PF 1,ML2,ERMSG2)      @C@@@@          TBL       23,1ZG
)@@G@@,(PF 1,ML3,ERMSG3)      @A@@@@STATCODE  EQUF      ERRTBL-1,A0,T1  @A@@@@ZH
)@@G@@MSGADDR   EQUF      ERRTBL-1,A0,H2  @A@@@@FATCODE   EQUF      ERRTBL-1,AZI
)@@G@@0,S3  @#@@@@          END     ___     .   @D@@@@          J         *GETZJ
)@@G@@CURLN         . $J RETURN     @]@@@@$(4).       @]@@@@TFPKT.      @]@@@@ZK
)@@G@@          +0@#@@@@          +RDA+1  @]@@@@      *[@@@@*SDFF*@#@@@@      ZL
)@@G@@    AXR$    @#@@@@$(4)      LIT     @]@@@@$(1).       @[@@@@.     @B@@@@ZM
)@@G@@.         ***** GETSET ***** SUBROUTINE   @A@@@@.          ENTERED: SLJ ZN
)@@G@@GETSET      @F@@@@.              ALL REGISTERS ARE RESTORED(EXCEPT A0 - ZO
)@@G@@A4 AND R1)  @#@@@@.         (IN)    @ @@@@.              A0 = SET CODE  ZP
)@@G@@@E@@@@.              A1(H1) = ADDR OF RECORD (IN RDA FORMAT) OR   @E@@@@ZQ
)@@G@@.                       0, IF CURRENT OF THE RECORD BE USED @G@@@@.     ZR
)@@G@@         A1(T3) = RECORD CODE, OR 0 IF CURRENT OF SET WANTED      @F@@@@ZS
)@@G@@.              A2 = MODE (1 FOR OLD SCHEMA, 2 FOR NEW SCHEMA)     @[@@@@ZT
)@@G@@.     @#@@@@.         (OUT)   @D@@@@.              A0 = SET TYPE IN H1, ZU
)@@G@@SET LINKS IN H2   @C@@@@.              A1 = 0 OR ERROR CONDITIONS IN H1 ZV
)@@G@@@D@@@@.                   ASB. ADDR OF SET PTR(NEXT) IN H2  @ @@@@.     ZW
)@@G@@         A2 = NEXT PTR  @B@@@@.              A3 = OWNER PTR(IF ANY)     ZX
)@@G@@@B@@@@.              A4 = PRIOR PTR(IF ANY)     @[@@@@.     @ @@@@.     ZY
)@@G@@    ERROR CONDITIONS:   @G@@@@.              BIT 35 OF A1 WILL BE SET, AZZ
)@@G@@ND H1 OF A1 WILL BE SET TO    @G@@@@.                   1, NO CURRENT OFAA
)@@G@@ SET AND NO RECORD CODE IS SPECIFIED@D@@@@.                   2, NO CURRAB
)@@G@@ENCY FOR THE RECORD     @A@@@@.                   3, BAD SET CODE @B@@@@AC
)@@G@@.                   4, BAD RECORD CODE    @C@@@@.                   5, AAD
)@@G@@2 IS NEITHER 1 NOR 2    @G@@@@.                   6, SET IS MANUAL AND RAE
)@@G@@ECORD IS NOT PARTICIPATING    @E@@@@.                   7, RECORD IS NOTAF
)@@G@@ ASSOCIATED WITH THE SET@F@@@@.                 010, CURRENT OF SET NOT AG
)@@G@@IN RECORD BUFFER AREA   @[@@@@.     @C@@@@GETSET*   +0                  AH
)@@G@@        . $H      @E@@@@          SA        A0,SETCODE        . $P SAVE AI
)@@G@@INPUT VALUE @B@@@@          SA        A1,RCDCODE        .   @E@@@@      AJ
)@@G@@    SSL       A1,18             . $P GET BUFFER ADDR  @B@@@@          SAAK
)@@G@@        A1,RCDADDR        .   @B@@@@          SA        A2,SCHCODE      AL
)@@G@@  .   @E@@@@          SZ        CHKDBP            . $P RESET A SW       AM
)@@G@@@[@@@@.     @^@@@@.         SAVE X1 - X11 @[@@@@.     @B@@@@          LAAN
)@@G@@,U      A0,X1             .   @B@@@@          LXI,U     A0,1            AO
)@@G@@  .   @B@@@@          LA        A1,(1,SAVEREG)    .   @B@@@@          LXAP
)@@G@@I,U     X0,1              .   @B@@@@          LR,U      R1,11           AQ
)@@G@@  .   @B@@@@          BT        A1,,*A0           .   @ @@@@.         GEAR
)@@G@@TSET START HERE   @E@@@@          TNZ       SETCODE           . $T SETCOAS
)@@G@@DE > 0      @E@@@@          J         BADSET            . $A YES NO,BADSAT
)@@G@@ET    @E@@@@          LA        A0,RCDADDR        . $P GET BUFFER ADDR  AU
)@@G@@@B@@@@          JZ        A0,NOADDR         .   @E@@@@          LA,T1   AV
)@@G@@  A1,2,A0           . $P GET RECORD CODE  @E@@@@          JZ        A1,NAW
)@@G@@OREL          . $J ILL. RECORD CODE @D@@@@          SA        A1,RCDCODEAX
)@@G@@        . $P SAVE IT    @]@@@@NOADDR.     @F@@@@          TNZ       RCDCAY
)@@G@@ODE           . $T RECORD CODE SPECIFIED  @E@@@@          SLJ       GETRAZ
)@@G@@CODE          . $A YES NO,GETRCODE  @F@@@@          TZ        RCDADDR   BA
)@@G@@        . $T RECORD ADDR PROVIDED   @E@@@@          J         CURROK    BB
)@@G@@        . $A YES,CURROK NO    @[@@@@.     @D@@@@.         CHECK TT1 TO SBC
)@@G@@EE IF THE RECORD IS CURRENT   @[@@@@.     @G@@@@          LX,H2     X1,TBD
)@@G@@T1            . $P GET RECORD SEQ TBL ADDR      @E@@@@          LR,H1   BE
)@@G@@  R1,TT1            . $P GET TBL LENGTH   @E@@@@          LA        A0,RBF
)@@G@@CDCODE        . $P GET RECORD CODE  @]@@@@TT1LOP.     @E@@@@          JGBG
)@@G@@D       R1,$+2            . $T TBL EXHAUSTED    @E@@@@          J       BH
)@@G@@  BADRCD            . $A YES,BADRCD NO    @C@@@@          TNE,T1    A0,,BI
)@@G@@X1            . $T MATCH@E@@@@          J         TT1END            . $ABJ
)@@G@@ YES,TT1END NO    @D@@@@          AX,U      X1,1              . $P NXT EBK
)@@G@@NTRY  @B@@@@          J         TT1LOP            .   @]@@@@TT1END.     BL
)@@G@@@G@@@@          LA,H2     A0,,X1            . $P GET RECORD BUFFER ADDR BM
)@@G@@      @F@@@@          JZ        A0,NORCD          . $J JUMP IF NO CURRENBN
)@@G@@CY    @G@@@@          SA        A0,RCDADDR        . $P TEMP SAVE THE BUFBO
)@@G@@FER ADDR    @G@@@@          TNZ       CHKDBP            . $T SHOULD CHK BP
)@@G@@THE CURRENCY      @E@@@@          J         CURROK            . $A YES NBQ
)@@G@@O,CURROK    @E@@@@          LA        A1,SETDBP          $P GET SET CURRBR
)@@G@@ENCY  @G@@@@          TE        A1,1,A0           . $T DOES IT MATCH THEBS
)@@G@@ RECORD     @E@@@@          J         ERROR10           . $A YES NO,ERROBT
)@@G@@R10   @]@@@@CURROK.     @E@@@@          SZ        ARTED             . $PBU
)@@G@@ RESET SW'S       @C@@@@          SZ        C1IND             . $       BV
)@@G@@@D@@@@          LA        A0,SCHCODE        . $P GET MODE   @E@@@@      BW
)@@G@@    TNE,U     A0,2              . $T NEW SCHEMA       @B@@@@          J BX
)@@G@@        GETSET0           .   @D@@@@          TE,U      A0,1            BY
)@@G@@  . $T OLD ONE    @E@@@@          J         BADA2             . $A YES NBZ
)@@G@@O,BADA2     @E@@@@          TNZ       C17               . $T C17 EXISTS CA
)@@G@@      @E@@@@          J         USEC1             . $A YES NO,USEC1     CB
)@@G@@@E@@@@          LX,H2     X1,C17            . $P GET C17 ADDR     @E@@@@CC
)@@G@@          LA        A0,RCDCODE        . $P GET RECORD CODE  @]@@@@C17LOPCD
)@@G@@.     @E@@@@          TNE,T1    A0,,X1            . $T RIGHT ENTRY      CE
)@@G@@@E@@@@          J         SETART            . $A YES,SETART NO    @D@@@@CF
)@@G@@          TNZ,T3    0,X1              . $T LINKS > 0  @E@@@@          J CG
)@@G@@        USEC1             . $A YES,USEC1 NO     @E@@@@          AX,T3   CH
)@@G@@  X1,,X1            . $P GET NXT ENTRY    @D@@@@          J         C17LCI
)@@G@@OP            . $P TRY NXT    @]@@@@SETART.     @E@@@@          LA,U    CJ
)@@G@@  A0,1              . $P SET ART SW       @B@@@@          SA        A0,ACK
)@@G@@RTED          .   @]@@@@USEC1.      @D@@@@          LA,U      A0,1      CL
)@@G@@        . $P SET C1 SW  @B@@@@          SA        A0,C1IND          .   CM
)@@G@@@[@@@@.     @B@@@@.         COMPUTE THE RECORD HEADER ADDR  @[@@@@.     CN
)@@G@@@]@@@@GETSET0.    @G@@@@          LX        X1,RCDADDR        . $P GET RCO
)@@G@@ECORD BUFFER ADDR       @B@@@@          LX        X2,X1             .   CP
)@@G@@@G@@@@          AX,U      X2,2              . $P GET FIRST RECORD HEADERCQ
)@@G@@ ADDR @F@@@@          TNZ       ARTED             . $T IS THE RECORD ARTCR
)@@G@@ED    @E@@@@          J         GETSET1           . $A YES NO,GETSET1   CS
)@@G@@@E@@@@          LA,H2     A0,,X2            . $P GET RECORD LENGTH@E@@@@CT
)@@G@@          AA,U      A0,1              . $P + 1 FOR DBP      @G@@@@      CU
)@@G@@    TG,H2     A0,,X1            . $T IS IT LESS THAN TOTAL LENGTH @E@@@@CV
)@@G@@          ER        ERR$              . $ INTERAL ERROR     @G@@@@      CW
)@@G@@    AX,H2     X2,,X2            . $P GET OLD RECORD HEADER ADDR   @[@@@@CX
)@@G@@.     @C@@@@.         USE C1 OR C9 TO COMPUTE THE SET ADDR  @[@@@@.     CY
)@@G@@@]@@@@GETSET1.    @G@@@@          SX        X2,RCDADDR        . $P SAVE CZ
)@@G@@THE RECORD HEADER ADDR  @E@@@@          LX,H2     X1,C1             . $PDA
)@@G@@ GET C1 ADDR      @E@@@@          TNZ       C1IND             . $T SHOULDB
)@@G@@D USE C9    @D@@@@          LX,H2     X1,C9             . $P USE C9     DC
)@@G@@@E@@@@          LA        A0,RCDCODE        . $P GET RECORD CODE  @]@@@@DD
)@@G@@C1LOP.      @F@@@@          TNE,T1    A0,,X1            . $T IS IT THE RDE
)@@G@@IGHT ENTRY  @E@@@@          J         GOTC1             . $A YES,GOTC1 NDF
)@@G@@O     @D@@@@          TNZ,T3    0,X1              . $T LINK > 0   @I@@@@DG
)@@G@@          ER        ERR$              . $ INTERNAL ERROR, NO C1/C9 FOR TDH
)@@G@@HE RECOR    @F@@@@          AX,T3     X1,,X1            . $P GET NEXT ENDI
)@@G@@TRY ADDR    @D@@@@          J         C1LOP             . $P TRY NXT    DJ
)@@G@@@]@@@@GOTC1.      @[@@@@.     @B@@@@.         SEARCH C1/C9 FOR THE SET CDK
)@@G@@ODE   @[@@@@.     @B@@@@          LXI,U     X1,1              .   @E@@@@DL
)@@G@@          LR,S4     R1,,X1            . $P GET A/O COUNT    @E@@@@      DM
)@@G@@    LA        A0,SETCODE        . $P GET RECORD CODE  @D@@@@          SEDN
)@@G@@,T2     A0,1,*X1          . $P SEARCH IT  @G@@@@          J         CHKMDO
)@@G@@AN            . $J NO FIND, TRY MANUAL SETS     @E@@@@          LA,S2   DP
)@@G@@  A0,,X1            . $P GET SET LINK     @B@@@@          SA        A0,SDQ
)@@G@@ETLINK        .   @E@@@@          LA,S5     A0,,X1            . $P GET SDR
)@@G@@ET TYPE     @B@@@@          AND,U     A0,037            .   @A@@@@      DS
)@@G@@    SA        A1,SETTYPE      @D@@@@          LA,S6     A0,,X1          DT
)@@G@@  . $P GET DISPL  @F@@@@          LX        X3,A0             . $P TEMP DU
)@@G@@SAVE IT IN X3     @B@@@@          J         GETSET2           .   @[@@@@DV
)@@G@@.     @ @@@@.         SEARCH MANUAL SET   @[@@@@.     @]@@@@CHKMAN.     DW
)@@G@@@E@@@@          LR,S2     R1,1,*X1          . $P GET MAN COUNT    @E@@@@DX
)@@G@@          LX,S6     X2,,*X1           . $P GET MAN CTL DISPL@E@@@@      DY
)@@G@@    TNZ       R1                . $T NO MANUAL SETS   @G@@@@          J DZ
)@@G@@        NOREL             . $ NO RELATIONSHIP RCD/SET       @E@@@@      EA
)@@G@@    SX        X2,X3             . $P SAVE IT X3       @B@@@@          AXEB
)@@G@@,U      X3,1              .   @E@@@@          AX        X2,RCDADDR      EC
)@@G@@  . $P GET MANCTL ADDR  @G@@@@          LA        A2,,X2            . $PED
)@@G@@ GET MANUAL CONTROL WORD      @]@@@@MANLOP.     @D@@@@          JGD     EE
)@@G@@  R1,$+2            . $T DONE ALL   @B@@@@          J         NOREL     EF
)@@G@@        .   @B@@@@          SZ        A1                .   @C@@@@      EG
)@@G@@    LDSL      A1,1              . $P      @D@@@@          TNE,T2    A0,1EH
)@@G@@,*X1          . $T RIGHT SET  @E@@@@          J         GOTMAN          EI
)@@G@@  . $A YES,GOTMAN NO    @D@@@@          JZ        A1,MANLOP         . $PEJ
)@@G@@ TRY NXT    @E@@@@          AX,S2     X3,,X1            . $P ADJ SET PTREK
)@@G@@ ADDR @B@@@@          J         MANLOP            .   @]@@@@GOTMAN.     EL
)@@G@@@G@@@@          JZ        A1,ERROR6         . $P NOT PARTICIPATING IN THEM
)@@G@@E SET @E@@@@          LA,S2     A0,,X1            . $P GET SET LINK     EN
)@@G@@@A@@@@          SA        A0,SETLINK      @E@@@@          LA,S5     A0,,EO
)@@G@@X1            . $P GET SET TYPE     @A@@@@          SA        A0,SETTYPEEP
)@@G@@      @[@@@@.     @C@@@@.         GET SET PTRS AND SAVE THEM IN A2,A3,A4EQ
)@@G@@@[@@@@.     @]@@@@GETSET2.    @G@@@@          AX        X3,RCDADDR      ER
)@@G@@  . $P COMPUTE ACTUAL SET PTR ADDR  @E@@@@          LA        A1,X3     ES
)@@G@@        . $P SAVE IT IN A1    @B@@@@          LXI,U     X3,1            ET
)@@G@@  .   @E@@@@          LA        A2,,*X3           . $P GET NXT PTR      EU
)@@G@@@E@@@@          LA        A3,SETTYPE        . $P GET SET TYPE     @G@@@@EV
)@@G@@          DSL       A3,3              . $P SPLIT OWNER BIT AND PRIOR BITEW
)@@G@@@F@@@@          SSL       A4,33             . $P CLEAR A4(BIT 0-32)     EX
)@@G@@@D@@@@          TZ        A3                . $T OWNER BIT  @E@@@@      EY
)@@G@@    LA        A3,,*X3           . $P GET OWNER PTR    @D@@@@          TZEZ
)@@G@@        A4                . $T PRIOR BIT  @E@@@@          LA        A4,,FA
)@@G@@*X3           . $P GET PRIOR PTR    @E@@@@          LA        A0,SETLINKFB
)@@G@@        . $P SET A0 FOR RETURN@A@@@@          LXI       A0,SETTYPE      FC
)@@G@@@]@@@@RETURN.     @B@@@@          LX,U      X1,X3             .   @^@@@@FD
)@@G@@          LXI,U     X1,1@A@@@@          LX        X2,(1,SAVEREG+2)@^@@@@FE
)@@G@@          LR,U      R1,9@B@@@@          BT        X1,,*X2           .   FF
)@@G@@@B@@@@          LX        X1,SAVEREG        .   @B@@@@          LX      FG
)@@G@@  X2,SAVEREG+1      .   @ @@@@          J         *GETSET   @[@@@@.     FH
)@@G@@@ @@@@.         ERROR CONDITIONS    @[@@@@.     @]@@@@BADSET.     @A@@@@FI
)@@G@@          LA        A1,(0400003)    @ @@@@          J         ERROR0    FJ
)@@G@@@]@@@@NORCD1.     @A@@@@          LA        A1,(0400001)    @ @@@@      FK
)@@G@@    J         ERROR0    @]@@@@BADRCD.     @A@@@@          LA        A1,(FL
)@@G@@0400004)    @ @@@@          J         ERROR0    @]@@@@NORCD.      @A@@@@FM
)@@G@@          LA        A1,(0400002)    @ @@@@          J         ERROR0    FN
)@@G@@@]@@@@BADA2.      @A@@@@          LA        A1,(0400005)    @ @@@@      FO
)@@G@@    J         ERROR0    @]@@@@NOREL.      @A@@@@          LA        A1,(FP
)@@G@@0400007)    @ @@@@          J         ERROR0    @]@@@@ERROR6.     @A@@@@FQ
)@@G@@          LA        A1,(0400006)    @ @@@@          J         ERROR0    FR
)@@G@@@]@@@@ERROR10.    @A@@@@          LA        A1,(0400010)    @ @@@@      FS
)@@G@@    J         ERROR0    @]@@@@ERROR0.     @B@@@@          LSSL      A1,1FT
)@@G@@8             .   @ @@@@          J         RETURN    @[@@@@.     @E@@@@FU
)@@G@@.         ROUTINE TO GET RECORD CODE(CURRENT OF THE SET)    @[@@@@.     FV
)@@G@@@C@@@@GETRCODE  +0                          . $H      @E@@@@          LAFW
)@@G@@,U      A0,1              . $P SET TO CHK DBP   @B@@@@          SA      FX
)@@G@@  A0,CHKDBP         .   @E@@@@          LX,H2     X1,TT2            . $PFY
)@@G@@ GET TT2 ADDR     @E@@@@          LR,H1     R1,TT2            . $P GET EFZ
)@@G@@NTRY COUNT  @E@@@@          LA        A0,SETCODE        . $P GET SET CODGA
)@@G@@E     @]@@@@GETRLOP.    @B@@@@          JGD       R1,$+2            .   GB
)@@G@@@B@@@@          J         BADSET            .   @E@@@@          TNE,T1  GC
)@@G@@  A0,,X1            . $T IS THIS THE ONE  @B@@@@          J         $+3 GD
)@@G@@              .   @E@@@@          AX,U      X1,3              . $P NXT EGE
)@@G@@NTRY ADDR   @B@@@@          J         GETRLOP           .   @E@@@@      GF
)@@G@@    LA,T3     A0,,X1            . $P GET RECORD CODE  @B@@@@          JZGG
)@@G@@        A0,NORCD1         .   @B@@@@          SA        A0,RCDCODE      GH
)@@G@@  .   @D@@@@          SA        A0,CURRCD         . $P SAVE IT    @E@@@@GI
)@@G@@          LA        A1,1,X1           . $P GET SET DBP      @D@@@@      GJ
)@@G@@    SA        A1,SETDBP         . $P SAVE IT    @F@@@@          LA,T2   GK
)@@G@@  A1,,X1            . $P GET SET OWNER CODE     @B@@@@          SA      GL
)@@G@@  A1,SETOWNER       .   @A@@@@          J         *GETRCODE       @[@@@@GM
)@@G@@.     @]@@@@$(4).       @^@@@@INPUT     RES       3   @A@@@@CHKDBP    EQGN
)@@G@@UF      INPUT+1,,S4     @A@@@@SETCODE   EQUF      INPUT,,T3       @A@@@@GO
)@@G@@RCDCODE   EQUF      INPUT+1,,T3     @A@@@@SCHCODE   EQUF      INPUT+2,,TGP
)@@G@@3     @A@@@@RCDADDR   EQUF      INPUT+1,,H1     @A@@@@SETTYPE   EQUF    GQ
)@@G@@  INPUT,,S1       @A@@@@SETLINK   EQUF      INPUT,,S2       @A@@@@ARTED GR
)@@G@@    EQUF      INPUT+2,,S1     @A@@@@C1IND     EQUF      INPUT+2,,S2     GS
)@@G@@@^@@@@SAVEREG   RES       11  @^@@@@CURRCD*   RES       1   @^@@@@SETOWNGT
)@@G@@ER* RES       1   @^@@@@SETDBP*   RES       1   @]@@@@$(1).       @C@@@@GU
)@@G@@GETLINE*  +0                          . $H      @E@@@@          LA      GV
)@@G@@  A0,LN             . $P GET LINE NUM     @E@@@@          SA        A0,RGW
)@@G@@DPKT          . $P SET LINE NUM.    @B@@@@          SZ        RDPKT+2   GX
)@@G@@        .   @E@@@@          LX,U      X10,RDPKT         . $P GET RMR PKTGY
)@@G@@ ADDR @E@@@@          LMJ       X11,TF$RMR        . $P READ THE RECORD  GZ
)@@G@@@D@@@@          TZ,T1     RDPKT+2           . $T STATUS OK  @^@@@@      HA
)@@G@@    ER        ERR$@F@@@@          LA,H2     A0,RDPKT+2        . $P GET THB
)@@G@@HE RECORD LENGTH  @D@@@@          SA        A0,RDA            . $P SAVE HC
)@@G@@IT    @D@@@@          LA        A0,LN             . $P SET RDALN  @B@@@@HD
)@@G@@          SA        A0,RDALN          .   @D@@@@          J         *GETHE
)@@G@@LINE          . $J RETURN     @]@@@@$(4).       @]@@@@RDPKT     +0@#@@@@HF
)@@G@@          +RDA+1  @]@@@@          +0@#@@@@          END     ___@@@      HG
)@@G@@    AX,S2     X3,,X1            . $P ADJ SET PTR ADDR @B@@@@          J HH
)@@G@@        MANLOP            .   @]@@@@GOTMAN.     @G@@@@          JZ      HI
)@@G@@*[@@@@*SDFF*@#@@@@          AXR$    @#@@@@$(4)      LIT.    @]@@@@$(1). HJ
)@@G@@      @ @@@@PF        FORM      12,6,18   @[@@@@.     @A@@@@.         LOHK
)@@G@@CATE WORKER ROUTINE     @[@@@@.     @^@@@@.         1.        L   @^@@@@HL
)@@G@@.         2.        LO  @^@@@@.         3.        LC  @^@@@@.         4.HM
)@@G@@        LCO @^@@@@.         5.        LR  @^@@@@.         6.        LS  HN
)@@G@@@A@@@@.         7.        LP STRING       @A@@@@.         8.        LP VHO
)@@G@@ARIABLE     @A@@@@.         9.        LCTL AREA       @A@@@@.         10HP
)@@G@@.       LCTL DIRECT     @A@@@@.         11.       LCTL OWNER      @[@@@@HQ
)@@G@@.     @ @@@@TYPE      EQUF      0,X10,S3  @C@@@@LOCATE$*                HR
)@@G@@              . $H      @E@@@@          SZ        STATUS            . $PHS
)@@G@@ RESET STATUS     @D@@@@          SX,H2     X11,SAVEX11       . $P SAVE HT
)@@G@@X11   @B@@@@          SZ        LSETSW            .   @E@@@@          SZHU
)@@G@@        NOFIND            . $P RESET NO FIND SW @E@@@@          LA      HV
)@@G@@  A0,TYPE           . $P GET LOCATE TYPE  @E@@@@          LA        A0,THW
)@@G@@YPETBL,A0     . $P GET ROUTINE ADDR @E@@@@          J         0,A0      HX
)@@G@@        . $P PERFORM IT       @[@@@@.     @^@@@@.         ERROR TYPE    HY
)@@G@@@[@@@@.     @]@@@@ERROR.      @^@@@@          ER        ERR$@]@@@@$(4). HZ
)@@G@@      @]@@@@TYPETBL.    @#@@@@          +ERROR  @]@@@@          +L@#@@@@IA
)@@G@@          +LO     @#@@@@          +LC     @#@@@@          +LCO    @#@@@@IB
)@@G@@          +LR     @#@@@@          +LS     @#@@@@          +LPS    @#@@@@IC
)@@G@@          +LPV    @#@@@@          +LCTLA  @#@@@@          +LCTLS  @#@@@@ID
)@@G@@          +LCTLO  @]@@@@$(1).       @[@@@@.     @^@@@@.         L COMMANIE
)@@G@@D     @[@@@@.     @C@@@@L                                     . $H      IF
)@@G@@@E@@@@          SLJ       SETC1X            . $P SET C1XADDR      @D@@@@IG
)@@G@@          SLJ       LOC               . $P DO LOC     @D@@@@          J IH
)@@G@@        *SAVEX11          . $J RETURN     @[@@@@.     @^@@@@.         LCII
)@@G@@ COMMAND    @[@@@@.     @C@@@@LC                                    . $HIJ
)@@G@@      @D@@@@          SLJ       SETC1X            . $P SET C1X    @D@@@@IK
)@@G@@LCLP                                  . $H LC LOOP    @E@@@@          SLIL
)@@G@@J       LOC               . $P PERFORM LOC      @B@@@@          J       IM
)@@G@@  LCLP              .   @[@@@@.     @^@@@@.         LO COMMAND    @[@@@@IN
)@@G@@.     @C@@@@LO                                    . $H      @E@@@@      IO
)@@G@@    SLJ       SETC1X            . $P SET C1XADDR      @D@@@@          SLIP
)@@G@@J       LOCO              . $P DO LOCO    @D@@@@          J         *SAVIQ
)@@G@@EX11          . $J RETURN     @[@@@@.     @^@@@@.         LCO COMMAND   IR
)@@G@@@[@@@@.     @C@@@@LCO                                   . $H      @E@@@@IS
)@@G@@          SLJ       SETC1X            . $P SET C1XADDR      @D@@@@LCOLP IT
)@@G@@                                . $H LCO LOOP   @D@@@@          SLJ     IU
)@@G@@  LOCO              . $P DO LOCO    @B@@@@          J         LCOLP     IV
)@@G@@        .   @[@@@@.     @[@@@@.     @[@@@@.     @C@@@@SETC1X    +0      IW
)@@G@@                    . $H      @G@@@@          LA,U      A0,RDA          IX
)@@G@@  . $P SET STRING ADDR TO RDA       @E@@@@          SA        A0,LINE   IY
)@@G@@        . $P SET LINE ADDR    @E@@@@          LA        A0,X10          IZ
)@@G@@  . $P GET C1XADDR      @B@@@@          A,U       A0,2              .   JA
)@@G@@@B@@@@          SA        A0,C1X            .   @D@@@@          J       JB
)@@G@@  *SETC1X           . $J RETURN     @[@@@@.     @ @@@@.         LCTL AREJC
)@@G@@A COMMAND   @[@@@@.     @C@@@@LCTLA                                 . $HJD
)@@G@@      @E@@@@          LA,U      A0,1              . $P SET CONTROL CODE JE
)@@G@@@D@@@@          SA        A0,CTLCODE        . $P SAVE IT    @B@@@@      JF
)@@G@@    J         LCTL              .   @[@@@@.     @ @@@@.         LCTL SETJG
)@@G@@ COMMAND    @[@@@@.     @C@@@@LCTLS                                 . $HJH
)@@G@@      @E@@@@          LA,U      A0,4              . $P SET CONTROL CODE JI
)@@G@@@D@@@@          SA        A0,CTLCODE        . $P SAVE IT    @B@@@@      JJ
)@@G@@    J         LCTL              .   @[@@@@.     @ @@@@.         LCTL OWNJK
)@@G@@ER COMMAND  @[@@@@.     @C@@@@LCTLO                                 . $HJL
)@@G@@      @E@@@@          LA,U      A0,3              . $P SET CONTROL CODE JM
)@@G@@@D@@@@          SA        A0,CTLCODE        . $P SAVE IT    @B@@@@      JN
)@@G@@    J         LCTL              .   @[@@@@.     @C@@@@.         ROUTINE JO
)@@G@@TO LOCATE A CONTROL RECORD    @[@@@@.     @C@@@@LCTL                    JP
)@@G@@              . $H      @E@@@@          SLJ       NXTLN             . $PJQ
)@@G@@ GET NXT LINE     @E@@@@          LX        X1,RADDR          . $P GET RJR
)@@G@@ECORD ADDR  @E@@@@          TZ        0,X1              . $P A CONTROL WJS
)@@G@@ORD   @E@@@@          J         LCTL              . $A YES NO,LCTL      JT
)@@G@@@E@@@@          LA        A0,CTLCODE        . $T CHECK RECORD CODE@E@@@@JU
)@@G@@          TE,T1     A0,1,X1           . $A YES NO,LCTL      @^@@@@      JV
)@@G@@    J         LCTL@E@@@@          LX,U      X10,PRTPR         . $P PRINTJW
)@@G@@ THE RECORD @D@@@@          TNZ       BOPT              . $T BRIEF ON   JX
)@@G@@@B@@@@          LMJ       X11,PRINTL        .   @D@@@@          J       JY
)@@G@@  *SAVEX11          . $J RETURN     @]@@@@$(4).       @]@@@@CTLCODE   +0JZ
)@@G@@@]@@@@$(1).       @[@@@@.     @E@@@@.         ROUTINE TO MOVE THE LINE TKA
)@@G@@O RECORD BUFFER AREA    @[@@@@.     @^@@@@.         A0=SEQNO      @[@@@@KB
)@@G@@.     @^@@@@MVECURCY  +0        .$H @E@@@@          AA,H2     A0,TT1    KC
)@@G@@        . $P GET SEQ TBL ENTRY@B@@@@          ANA,U     A0,1            KD
)@@G@@  .   @D@@@@          LX        X5,A0             . $P SET X5     @E@@@@KE
)@@G@@          TNZ,H2    0,X5              . $T IS BUFFER IN     @E@@@@      KF
)@@G@@    SLJ       GETBUF            . $A YES NO,GETBUF    @E@@@@          LXKG
)@@G@@,H2     X1,,X5            . $P GET BUFFER ADDR  @B@@@@          LXI,U   KH
)@@G@@  X1,1              .   @D@@@@          LX        X2,(1,RDA)        . $PKI
)@@G@@ SET X2     @E@@@@          LA,H2     A0,RDA            . $P GET WORD COKJ
)@@G@@UNT   @C@@@@          AA,U      A0,1              . $P + 1  @E@@@@      KK
)@@G@@    LR        R1,A0             . $P SET REPEATER     @D@@@@          BTKL
)@@G@@        X1,,*X2           . $P TRANSFER   @D@@@@          J         *MVEKM
)@@G@@CURCY         . $J RETURN     @[@@@@.     @A@@@@.         MCORE$ FOR A RKN
)@@G@@ECORD       @[@@@@.     @C@@@@GETBUF    +0                          . $HKO
)@@G@@      @E@@@@          LA        A0,LAST$D         . $P GET D BANK ADDR  KP
)@@G@@@C@@@@          AA,U      A0,1              . $P      @E@@@@          SAKQ
)@@G@@,H2     A0,,X5            . $P STORE THE ADDR   @]@@@@.           @C@@@@KR
)@@G@@.         COMPUTE BUFFER SIZE FOR THE RECORD    @B@@@@.         FROM C17KS
)@@G@@ IF VALID OR C11 OR C5  @]@@@@.           @E@@@@          LA,T1     A0,,KT
)@@G@@X5            . $P GET RECORD CODE  @E@@@@          TZ,H1     C17       KU
)@@G@@        . $T CHK IF C17 EXIST @E@@@@          SLJ       XCK17           KV
)@@G@@  . $W SEARCH C17       @E@@@@          TZ,H1     C11               . $TKW
)@@G@@ CHK IF C11 EXIST @E@@@@          SLJ       XCK11             . $W SEARCKX
)@@G@@H C11       @E@@@@          TNZ,H1    C5                . $T C5 MUST EXIKY
)@@G@@ST    @E@@@@          ER        ERR$              . $E C5 MISSING       KZ
)@@G@@@D@@@@          SLJ       XCK5              . $W SEARCH C5  @F@@@@      LA
)@@G@@    ER        ERR$              . $E RECORD CODE INVALID    @D@@@@      LB
)@@G@@    J         XCKRTN            . $J GOT IT     @C@@@@XCK17     +0      LC
)@@G@@                    . $H      @E@@@@          LX,H2     X1,C17          LD
)@@G@@  . $P GET C17 ADDR     @]@@@@XCK17A.     @E@@@@          TNE,T1    A0,,LE
)@@G@@X1            . $T RECORD CODE MATCH@E@@@@          J         XCK17B    LF
)@@G@@        . $A YES,XCK17B NO    @E@@@@          TNZ,T3    0,X1            LG
)@@G@@  . $T END OF TBL       @C@@@@          J         *XCK17            . $JLH
)@@G@@ RTN  @E@@@@          AX,T3     X1,,X1            . $P GET NEXT ENTRY   LI
)@@G@@@B@@@@          J         XCK17A            .   @]@@@@XCK17B.     @E@@@@LJ
)@@G@@          LA,T1     A0,1,X1           . $P GET RECORD LENGTH@E@@@@      LK
)@@G@@    AA,T2     A0,1,X1           . $P ADD OLD LENG     @C@@@@          J LL
)@@G@@        XCKRTN            . $J RTN  @C@@@@XCK11     +0                  LM
)@@G@@        . $H      @E@@@@          LX,H2     X1,C11            . $P GET CLN
)@@G@@11 ADDR     @]@@@@XCK11A.     @E@@@@          TNE,T1    A0,,X1          LO
)@@G@@  . $T RECORD CODE MATCH@E@@@@          J         XCK11B            . $ALP
)@@G@@ YES,XCK11B NO    @E@@@@          TNZ,T3    0,X1              . $T END OLQ
)@@G@@F TBL       @C@@@@          J         *XCK11            . $J RTN  @E@@@@LR
)@@G@@          AX,T3     X1,,X1            . $P GET NEXT ENTRY   @B@@@@      LS
)@@G@@    J         XCK11A            .   @]@@@@XCK11B.     @E@@@@          LALT
)@@G@@,T1     A0,1,X1           . $P GET RECORD LENGTH@C@@@@          J       LU
)@@G@@  XCKRTN            . $J RTN  @C@@@@XCK5      +0                        LV
)@@G@@  . $H      @E@@@@          LX,H2     X1,C5             . $P GET C5 ADDRLW
)@@G@@      @]@@@@XCK5A.      @E@@@@          TNE,T1    A0,,X1            . $TLX
)@@G@@ RECORD CODE MATCH@E@@@@          J         XCK5B             . $A YES,XLY
)@@G@@CK5B NO     @E@@@@          TNZ,T3    0,X1              . $T END OF TBL LZ
)@@G@@      @C@@@@          J         *XCK5             . $J RTN  @E@@@@      MA
)@@G@@    AX,T3     X1,,X1            . $P GET NEXT ENTRY   @B@@@@          J MB
)@@G@@        XCK5A             .   @]@@@@XCK5B.      @E@@@@          LA,T1   MC
)@@G@@  A0,1,X1           . $P GET RECORD LENGTH@C@@@@          J         XCKRMD
)@@G@@TN            . $J RTN  @]@@@@XCKRTN.     @G@@@@          AA        A0,LME
)@@G@@AST$D         . $P COMPUTE NEW LAST$D ADDR      @I@@@@          AA,U    MF
)@@G@@  A0,5              . $P 5 EXTRA WORDS( 2 MAY BE SUFFICIENT)      @B@@@@MG
)@@G@@          SA        A0,LAST$D         .   @B@@@@          ER        MCORMH
)@@G@@E$            .   @ @@@@          J         *GETBUF   @]@@@@$(1).       MI
)@@G@@@[@@@@.     @ @@@@.         CALL SNO TO LOCATE  @[@@@@.     @C@@@@CALLSNMJ
)@@G@@O   +0                          . $H      @A@@@@          LMJ       X11,MK
)@@G@@LOCATE      @]@@@@LINE      +0@]@@@@C1X       +0@D@@@@          J       ML
)@@G@@  *CALLSNO          . $J RETURN     @[@@@@.     @A@@@@.         TO GET NMM
)@@G@@EXT LINE OF LN    @[@@@@.     @]@@@@NXTLN     +0@D@@@@          LA      MN
)@@G@@  A0,LN             . $P GET LN     @D@@@@          TG        A0,RECNMC MO
)@@G@@        . $P LN < MAX   @E@@@@          J         HITEOF            . $AMP
)@@G@@ YES NO,HITEOF    @C@@@@          AA,U      A0,1              . $P + 1  MQ
)@@G@@@D@@@@          SA        A0,LN             . $P SAVE IT    @E@@@@      MR
)@@G@@    SA        A0,TFPKT          . $P SAVE IT IN TF PKY@B@@@@          LXMS
)@@G@@,U      X10,TFPKT         .   @B@@@@          LMJ       X11,TF$RMR1     MT
)@@G@@  .   @D@@@@          TZ,T1     TFPKT+2           . $T STATUS OK  @B@@@@MU
)@@G@@          ER        ERR$              .   @D@@@@          J         *NXTMV
)@@G@@LN            . $J RETURN     @[@@@@.     @]@@@@HITEOF.     @D@@@@      MW
)@@G@@    SZ        LN                . $P ZERO LN    @E@@@@          SLJ     MX
)@@G@@  SENDEOF           . $P SEND EOF MSG     @E@@@@          TZ        NOFIMY
)@@G@@ND            . $T NO FIND SW       @D@@@@          J         *SAVEX11  MZ
)@@G@@        . $J RETURN     @ @@@@          J         ERROR1    @]@@@@$(4). NA
)@@G@@      @]@@@@NOFIND    +0@]@@@@TFPKT     +0@]@@@@          +0@]@@@@      NB
)@@G@@    +0@A@@@@RADDR     EQUF      TFPKT+1,,H2     @A@@@@RLENG     EQUF    NC
)@@G@@  TFPKT+2,,H2     @]@@@@$(1).       @[@@@@.     @#@@@@.         LOC     ND
)@@G@@@[@@@@.     @^@@@@LOC       +0        .   @E@@@@          SLJ       NXTLNE
)@@G@@N             . $P GET NXT LN       @E@@@@          LA        A0,RADDR  NF
)@@G@@        . $P GET RECORD ADDR  @C@@@@          ANA,U     A0,1            NG
)@@G@@  . $P -1   @E@@@@          SA        A0,LINE           . $P SET LINE ADNH
)@@G@@DR    @F@@@@          LA        A1,,A0            . $P TEMP SAVE THE WORNI
)@@G@@D     @B@@@@          SA        A1,SAVEHR         .   @E@@@@          LANJ
)@@G@@        A1,RLENG          . $P GET RECORD LENGTH@E@@@@          MSI,U   NK
)@@G@@  A1,6              . $P CONVERT TO CHAR  @D@@@@          SA        A1,,NL
)@@G@@A0            . $P SAVE IT    @D@@@@          SLJ       CALLSNO         NM
)@@G@@  . $P CALL SNO   @E@@@@          LA        A1,LINE           . $P RESTONN
)@@G@@RE HR       @C@@@@          LA        A2,SAVEHR         . $       @B@@@@NO
)@@G@@          SA        A2,,A1            .   @E@@@@          JZ        A0,LNP
)@@G@@OC+1          . $P LOOK FOR NXT     @E@@@@          SA        A1,NOFIND NQ
)@@G@@        . $P SET FIND SW      @E@@@@          LX,U      X10,PRTPN       NR
)@@G@@  . $P PRINT THE LINE   @D@@@@          TNZ       BOPT              . $TNS
)@@G@@ BRIEF ON   @B@@@@          LMJ       X11,PRINTL        .   @D@@@@      NT
)@@G@@    J         *LOC              . $J RETURN     @]@@@@$(4).       @]@@@@NU
)@@G@@SAVEHR    +0@^@@@@PRTPN     +0,4,2,,,0    @^@@@@          +3,,,,,0      NV
)@@G@@@^@@@@          '1        '   @^@@@@          '         '   @]@@@@$(1). NW
)@@G@@      @[@@@@.     @^@@@@.         LOCO ROUTINE  @[@@@@.     @C@@@@LOCO  NX
)@@G@@    +0                          . $H      @E@@@@          SLJ       NXTLNY
)@@G@@N             . $P GET NXT LN       @E@@@@          LA        A0,RLENG  NZ
)@@G@@        . $P GET RECORD LENGTH@E@@@@          MSI,U     A0,6            OA
)@@G@@  . $P CHAR LENGTH      @B@@@@          LA        A1,A0             .   OB
)@@G@@@B@@@@          MSI,U     A1,2              .   @D@@@@          SA      OC
)@@G@@  A1,RDA            . $P SAVE IT    @E@@@@          LX        X1,RADDR  OD
)@@G@@        . $P STRING ADDR      @B@@@@          LX,U      X2,RDA+1        OE
)@@G@@  .   @E@@@@          SLJ       EXPAND            . $P EXPAND TO OCTAL  OF
)@@G@@@C@@@@          SLJ       CALLSNO           . $P      @D@@@@          JZOG
)@@G@@        A0,LOCO+1         . $P TRY NXT    @E@@@@          SA        A0,NOH
)@@G@@OFIND         . $P SET FIND SW      @D@@@@          LX,U      X10,PRTPO OI
)@@G@@        . $P PRINT PO   @D@@@@          TNZ       BOPT              . $TOJ
)@@G@@ BRIEF ON   @B@@@@          LMJ       X11,PRINTL        .   @D@@@@      OK
)@@G@@    J         *LOCO             . $J RETURN     @[@@@@.     @^@@@@.     OL
)@@G@@    LR COMMAND    @[@@@@.     @C@@@@LR                                  OM
)@@G@@  . $H      @ @@@@SEQNO     EQUF      1,X1,T1   @ @@@@STYPE     EQUF    ON
)@@G@@  0,X1,S4   @ @@@@SMODE     EQUF      0,X1,S3   @F@@@@          LX,H1   OO
)@@G@@  X1,2,X10          . $P GET ADDR OF SYM TBL    @D@@@@          TNZ     OP
)@@G@@  X1                . $T TBL FOUND  @E@@@@          J         ERROR2    OQ
)@@G@@        . $A YES NO,ERROR2    @G@@@@          ANX,U     X1,5            OR
)@@G@@  . $P BACK UP TO SYMBOL NAME       @D@@@@          LA        A0,('#    OS
)@@G@@ ')     . $P CHK FOR #  @C@@@@          TNE       A0,,X1            . $TOT
)@@G@@ IS IT@E@@@@          J         LRLN              . $J LR # COMMAND     OU
)@@G@@@E@@@@          AX,U      X1,5              . $P RESTORE X1       @D@@@@OV
)@@G@@          LA,U      A0,2              . $P TYPE 2     @E@@@@          TEOW
)@@G@@        A0,STYPE          . $T RIGHT TYPE       @E@@@@          J       OX
)@@G@@  ERROR2            . $A YES NO,ERROR2    @E@@@@          LA        A0,SOY
)@@G@@EQNO          . $P GET SEQ NO.      @D@@@@          SA        A0,SQNO   OZ
)@@G@@        . $P SAVE IT    @E@@@@          A,H2      A0,TT1            . $PPA
)@@G@@ GET TT1 ENTRY    @B@@@@          ANA,U     A0,1              .   @E@@@@PB
)@@G@@          LA,T1     A0,,A0            . $P GET RECORD CODE  @E@@@@      PC
)@@G@@    SA        A0,RCODE          . $P SAVE R CODE      @[@@@@.     @]@@@@PD
)@@G@@LRLOOP.     @E@@@@          SLJ       NXTLN             . $P GET NXT LN PE
)@@G@@      @E@@@@          LX        X1,RADDR          . $P GET RECORD ADDR  PF
)@@G@@@C@@@@          LA        A0,,X1            . $P DBP  @E@@@@          JZPG
)@@G@@        A0,LRLOOP         . $P TRY NXT LN       @E@@@@          LA,T1   PH
)@@G@@  A0,1,X1           . $P GET RECORD CODE  @C@@@@          TE        A0,RPI
)@@G@@CODE          . $T MATCH@E@@@@          J         LRLOOP            . $APJ
)@@G@@ YES NO,LRLOOP    @F@@@@          SLJ       GETLINE           . $P GET TPK
)@@G@@HE ACTUAL LINE    @C@@@@LRLN1.                                . $H      PL
)@@G@@@D@@@@          LX,U      X10,PRTPR         . $P PRINT PR   @D@@@@      PM
)@@G@@    TNZ       BOPT              . $T BRIEF ON   @B@@@@          LMJ     PN
)@@G@@  X11,PRINTL        .   @E@@@@          LA        A0,SQNO           . $PPO
)@@G@@ GET SEQ NO       @G@@@@          SLJ       MVECURCY          . $P MOVE PP
)@@G@@RECORD TO ITS BUFFER    @E@@@@          LA        A0,SQNO           . $PPQ
)@@G@@ GET SEQ NO       @G@@@@          SLJ       SETCURCY          . $P ESTABPR
)@@G@@LISH SET CURRENCY       @D@@@@          J         *SAVEX11          . $JPS
)@@G@@ RETURN     @E@@@@LRLN.                                 . $H LR # COMMANPT
)@@G@@D     @F@@@@          TNZ       LN                . $T MAKE SURE LN NOT=PU
)@@G@@ 0    @B@@@@          J         ERROR16           .   @E@@@@          SLPV
)@@G@@J       GETLINE           . $P GET CURRENT LINE @E@@@@          LX,U    PW
)@@G@@  X1,RDA            . $P POINT TO THE LINE@F@@@@          TNZ       1,X1PX
)@@G@@              . $T CHK IF CONTROL LINE    @E@@@@          J         ERROPY
)@@G@@R17           . $A YES,ERROR17 NO   @E@@@@          LA,T1     A0,2,X1   PZ
)@@G@@        . $P GET RECORD CODE  @D@@@@          SA        A0,RCODE        QA
)@@G@@  . $P SAVE IT    @F@@@@          LR,H1     R1,TT1            . $P GET SQB
)@@G@@EQ TBL ENTRY CNT  @D@@@@          LX,H2     X1,TT1            . $P TBL AQC
)@@G@@DDR   @C@@@@          LXI,U     X1,1              . $       @E@@@@      QD
)@@G@@    SE,T1     A0,,*X1           . $T SEARCH TBL       @G@@@@          ERQE
)@@G@@        ERR$              . $E RECORD CODE NOT IN SEQ TBL   @E@@@@      QF
)@@G@@    LA,H1     A0,TT1            . $P COMPUTE SEQ NO   @B@@@@          ANQG
)@@G@@A       A0,R1             .   @D@@@@          SA        A0,SQNO         QH
)@@G@@  . $P SAVE IT    @G@@@@          J         LRLN1             . $P CONTIQI
)@@G@@NUE NORMAL PROCESS      @[@@@@.     @]@@@@$(4).       @^@@@@PRTPR     +0QJ
)@@G@@,4,3,,,0    @^@@@@          +3,,,,,0      @^@@@@          '1        '   QK
)@@G@@@^@@@@          '         '   @]@@@@SAVEX11   +0@]@@@@RCODE     +0@]@@@@QL
)@@G@@SQNO      +0@]@@@@$(1).       @[@@@@.     @^@@@@.         LP COMMAND    QM
)@@G@@@[@@@@.     @C@@@@LPS                                   . $H      @[@@@@QN
)@@G@@LPV.  @D@@@@          LX        X11,SAVEX11       . $P GET X11    @G@@@@QO
)@@G@@          SX        X11,GETVX11       . $P SET IT FOR GETVARX RTN       QP
)@@G@@@E@@@@          SLJ       GETVARX           . $P GET THE DBP      @D@@@@QQ
)@@G@@          TZ        STATUS            . $T GOT IT OK  @E@@@@          J QR
)@@G@@        *SAVEX11          . $P YES NO,*SAVEX11  @E@@@@          LA,S5   QS
)@@G@@  A0,VARSW          . $P GET THE TYPE     @E@@@@          TE,U      A0,2QT
)@@G@@              . $P IS IT PIC 9 COMP @ @@@@          J         ERROR6    QU
)@@G@@@E@@@@          LA        A0,VARXVAL        . $P GET THE VALUE    @]@@@@QV
)@@G@@LPLOC.      @E@@@@          JZ        A0,ERROR8         . $J ERROR IF 0 QW
)@@G@@DBP   @G@@@@          SLJ       LOCPTR            . $P GOTO LOCATE THE RQX
)@@G@@ECORD BY DBP@]@@@@LPCURCY.    @D@@@@          LX,U      X10,PRTPR       QY
)@@G@@  . $P PRINT PR   @D@@@@          TNZ       BOPT              . $T BRIEFQZ
)@@G@@ ON   @B@@@@          LMJ       X11,PRINTL        .   @E@@@@          LARA
)@@G@@,T1     A0,RDA+2          . $P GET RECORD CODE  @F@@@@          SA      RB
)@@G@@  A0,RCODE          . $P SAVE THE RECORD CODE   @E@@@@          SLJ     RC
)@@G@@  GETSQNO           . $P GET SEQ NO       @D@@@@          SA        A0,SRD
)@@G@@QNO           . $P SAVE IT    @F@@@@          SLJ       MVECURCY        RE
)@@G@@  . $P MOVE TO RECORD BUFFER  @B@@@@          LA        A0,SQNO         RF
)@@G@@  .   @F@@@@          SLJ       SETCURCY          . $P EST SET CURRENCIERG
)@@G@@S     @D@@@@          J         *SAVEX11          . $P RETURN     @]@@@@RH
)@@G@@$(4).       @^@@@@STRING    RES       12  @]@@@@$(1).       @[@@@@.     RI
)@@G@@@C@@@@.         ROUTINE TO LOCATE A RECORD BY DBP     @[@@@@.     @C@@@@RJ
)@@G@@LOCPTR                                . $H      @B@@@@          +0      RK
)@@G@@                    .   @E@@@@          SA        A0,DBP            . $PRL
)@@G@@ SAVE THE DBP     @E@@@@          SZ,T1     LPPKT+2           . $P RESETRM
)@@G@@ STATUS     @ @@@@          SZ        LPPKT     @B@@@@          SZ      RN
)@@G@@  RDALN             .   @B@@@@          SZ        LN                .   RO
)@@G@@@E@@@@          LX,U      X10,LPPKT         . $P CALL TF$AM       @B@@@@RP
)@@G@@          LMJ       X11,TF$DBP        .   @D@@@@          TZ,T1     LPPKRQ
)@@G@@T+2           . $T FOUND IT   @E@@@@          J         ERROR1          RR
)@@G@@  . $A YES NO,ERROR1    @E@@@@          LA,H2     A0,LPPKT+3        . $PRS
)@@G@@ GET RECORD LENGTH@D@@@@          SA        A0,RDA            . $P SAVE RT
)@@G@@IT    @E@@@@          LA        A0,LPPKT          . $P GET RECORD NUM   RU
)@@G@@@B@@@@          SA        A0,RDALN          .   @B@@@@          SA      RV
)@@G@@  A0,LN             .   @B@@@@          J         *LOCPTR           .   RW
)@@G@@@]@@@@$(4).       @]@@@@LPPKT     +0@]@@@@DBP       +0@#@@@@          +RRX
)@@G@@DA+1  @]@@@@          +0@[@@@@.     @]@@@@$(4).       @]@@@@ADDR1     +0RY
)@@G@@@]@@@@INDX      +0@]@@@@$(1).       @[@@@@.     @G@@@@.         ROUTINE RZ
)@@G@@TO GET A BINARY VALUE OF A PIC 9 OR PIC 9 COMP FIELD  @[@@@@.     @B@@@@SA
)@@G@@.         (IN) A0 = LENGTH OF THE ITEM    @ @@@@.         A1 = ABS WORD SB
)@@G@@ADDR  @A@@@@.         A2 = CHARACTER OFF-SET    @C@@@@.         A3 = TYPSC
)@@G@@E 2 PIC 9, 3 PIC 9 COMP       @[@@@@.     @A@@@@.         (OUT) A0 = BINSD
)@@G@@ARY VALUE   @[@@@@.     @C@@@@GETNUM*   +0                          .$H SE
)@@G@@      @F@@@@          LX        X1,A1             . $P SET WORD ADDR IN SF
)@@G@@X1    @D@@@@          LXI,U     X1,1              . $P INC IN X1  @E@@@@SG
)@@G@@          LR        R1,A0             . $P ITEM LENGTH IN R1@F@@@@      SH
)@@G@@    ANA,U     A3,2              . $P SET TYPE TO BE 0 OR 1  @E@@@@      SI
)@@G@@    LR        R2,A3             . $P SAVE IT IN R2    @E@@@@          SZSJ
)@@G@@        A3                . $P SET ACCUMU TO 0  @C@@@@GETLOP            SK
)@@G@@                    . $H      @E@@@@          JGD       R1,$+2          SL
)@@G@@  . $T GOT ALL CHAR     @E@@@@          J         GETEND            . $ASM
)@@G@@ YES,GETEND NO    @E@@@@          LA        A0,A2             . $P GET CSN
)@@G@@HAR OFF SET @E@@@@          A,U       A2,1              . $P UP FOR NXT SO
)@@G@@ONE   @F@@@@          DSL       A0,36             . $P COMPUTE REL CHAR SP
)@@G@@ADDR  @B@@@@          ANA,U     A1,1              .   @B@@@@          DISQ
)@@G@@,U      A0,6              .   @E@@@@          EX        GETONE,A1       SR
)@@G@@  . $P GET A CHAR       @E@@@@          TZ        R2                . $TSS
)@@G@@ IS IT PIC 9      @E@@@@          J         $+3               . $A YES NST
)@@G@@O,$+3       @E@@@@          AND,U     A4,017            . $P MASK HIGHT SU
)@@G@@BITS  @C@@@@          LA        A4,A5             . $P      @H@@@@      SV
)@@G@@    LA,U      A0,10             . $P *10 FOR PIC 9, *64 FOR PIC 9 COMP  SW
)@@G@@@C@@@@          TZ        R2                . $T PIC 9@E@@@@          LASX
)@@G@@,U      A0,64             . $P SHOULD *64       @E@@@@          MSI     SY
)@@G@@  A3,A0             . $P ACCUMU*(A0) + A4 @B@@@@          AA        A3,ASZ
)@@G@@4             .   @E@@@@          J         GETLOP            . $J TRY NTA
)@@G@@XT ONE      @[@@@@.     @C@@@@GETEND                                . $HTB
)@@G@@      @E@@@@          LA        A0,A3             . $P FINAL IN A0      TC
)@@G@@@D@@@@          J         *GETNUM           . $J RETURN     @[@@@@.     TD
)@@G@@@]@@@@GETONE.     @B@@@@          LA,S1     A4,,X1            .   @B@@@@TE
)@@G@@          LA,S2     A4,,X1            .   @B@@@@          LA,S3     A4,,TF
)@@G@@X1            .   @B@@@@          LA,S4     A4,,X1            .   @B@@@@TG
)@@G@@          LA,S5     A4,,X1            .   @B@@@@          LA,S6     A4,,TH
)@@G@@*X1           .   @[@@@@.     @C@@@@.         ROUTINE TO ESTABLISH SET CTI
)@@G@@URRENCIES   @[@@@@.     @C@@@@SETCURCY  +0                          . $HTJ
)@@G@@      @E@@@@          AA,H2     A0,TT1            . $P GET RECORD CODE  TK
)@@G@@@B@@@@          ANA,U     A0,1              .   @G@@@@          TNZ,H2  TL
)@@G@@  0,A0              . $P MAKE SURE RECORD IN BUFFER   @^@@@@          ERTM
)@@G@@        ERR$@E@@@@          LX,H2     X5,0,A0           . $P GET RECORD TN
)@@G@@ADDR  @E@@@@          LA,T1     A0,0,A0           . $P GET RECORD CODE  TO
)@@G@@@G@@@@          TE,T1     A0,2,X5           . $T MAKE SURE RECORD CODE MTP
)@@G@@ATCHES@B@@@@          ER        ERR$              .   @E@@@@          SLTQ
)@@G@@J       GETC9             . $P SEARCH SET ENTRY @C@@@@SET100            TR
)@@G@@                    . $H      @D@@@@          LA        A0,1,X5         TS
)@@G@@  . $P GET DBP    @E@@@@          LXI,U     X1,1              . $P SET ITT
)@@G@@NC OF X1    @E@@@@          LR,S4     R2,,*X1           . $P GET A/O COUTU
)@@G@@NT    @C@@@@SET200                                . $H      @D@@@@      TV
)@@G@@    JGD       R2,$+2            . $T DONE ALL   @E@@@@          J       TW
)@@G@@  SET300            . $J TRY MANUAL SETS  @E@@@@          LA,T2     A1,,TX
)@@G@@*X1           . $P GET SET CODE     @E@@@@          SLJ       GETT2     TY
)@@G@@        . $P GOTO SET CURRENCY@E@@@@          LA        A9,1,X6         TZ
)@@G@@  . $P GET OLD DBP      @D@@@@          SA        A9,2,X6           . $PUA
)@@G@@ SAVE IT    @E@@@@          SA        A0,1,X6           . $P SAVE CURRENUB
)@@G@@T DBP @F@@@@          LA        A9,RCODE          . $P GET THE RECORD COUC
)@@G@@DE    @D@@@@          SA,T3     A9,0,X6           . $P SAVE TT2   @B@@@@UD
)@@G@@          J         SET200            .   @C@@@@SET300                  UE
)@@G@@              . $H      @F@@@@          LR,S2     R2,,X1            . $PUF
)@@G@@ GET MANUAL SET COUNT   @E@@@@          TNZ       R2                . $TUG
)@@G@@ ANY MANUAL SETS  @E@@@@          J         *SETCURCY         . $A YES NUH
)@@G@@O,*SETCURCY @G@@@@          LA,S6     A1,,X1            . $P GET MAN CONUI
)@@G@@TROL WORD DISPL   @G@@@@          AX,U      X1,2              . $P POINTUJ
)@@G@@ TO FIRST MAN SET ENTRY @F@@@@          AA        A1,X5             . $PUK
)@@G@@ COMPUTE ACTUAL ADDR    @C@@@@          A,U       A1,2              . $PUL
)@@G@@ + 2  @F@@@@          LA        A3,,A1            . $P GET THE CONTROL WUM
)@@G@@ORD   @C@@@@SET400                                . $H      @E@@@@      UN
)@@G@@    JGD       R2,$+2            . $T DONE ALL MAN SETS@E@@@@          J UO
)@@G@@        *SETCURCY         . $A YES,*RETURN NO   @E@@@@          LA,T2   UP
)@@G@@  A1,,*X1           . $P GET SET CODE     @C@@@@          SZ        A2  UQ
)@@G@@              . $       @E@@@@          LDSL      A2,1              . $PUR
)@@G@@ BIT FOR THE SET  @E@@@@          JZ        A2,SET400         . $J NOT SUS
)@@G@@ET, TRY NXT @E@@@@          SLJ       GETT2             . $P GOTO SET CUUT
)@@G@@RRENCY@E@@@@          LA        A9,1,X6           . $P GET OLD DBP      UU
)@@G@@@D@@@@          SA        A9,2,X6           . $P SAVE IT    @E@@@@      UV
)@@G@@    SA        A0,1,X6           . $P SAVE CURRENT DBP @F@@@@          LAUW
)@@G@@        A9,RCODE          . $P GET THE RECORD CODE    @D@@@@          SAUX
)@@G@@,T3     A9,0,X6           . $P SAVE TT2   @B@@@@          J         SET4UY
)@@G@@00            .   @C@@@@GETT2     +0                          . $H      UZ
)@@G@@@E@@@@          LX,H2     X6,TT2            . $P GET SET TBL ADDR @E@@@@VA
)@@G@@          LXI,U     X6,3              . $P 3 WORDS PER ENTRY@D@@@@      VB
)@@G@@    LR,H1     R1,TT2            . $P SET COUNT  @C@@@@          SE,T1   VC
)@@G@@  A1,,*X6           . $       @^@@@@          ER        ERR$@G@@@@      VD
)@@G@@    ANX       X6,(3,3)          . $P BACK UP TO PROPR ENTRY       @D@@@@VE
)@@G@@          J         *GETT2            . $J RETURN     @[@@@@.     @G@@@@VF
)@@G@@GETSQNO   +0                          . $H ROUTINE TO GET RECORD SEQ NO VG
)@@G@@@D@@@@          LR,H1     R1,TT1            . $P TT1 ADDR   @B@@@@      VH
)@@G@@    LX,H2     X1,TT1            .   @B@@@@          LXI,U     X1,1      VI
)@@G@@        .   @B@@@@          SE,T1     A0,,*X1           .   @E@@@@      VJ
)@@G@@    ER        ERR$              . $ INTERNAL ERROR    @B@@@@          LXVK
)@@G@@I,U     X1,0              .   @E@@@@          ANX,H2    X1,TT1          VL
)@@G@@  . $P COMPUTE SEQ NO   @ @@@@          LA        A0,X1     @ @@@@      VM
)@@G@@    J         *GETSQNO  @C@@@@GETC9     +0                          . $HVN
)@@G@@      @E@@@@          LX,H2     X1,C9             . $P SEARCH C1 OR C9  VO
)@@G@@@B@@@@          TNZ       X1                .   @E@@@@          LX,H2   VP
)@@G@@  X1,C1             . $P NO C9, USE C1    @]@@@@C9LOP.      @D@@@@      VQ
)@@G@@    TNE,T1    A0,,X1            . $T FOUND IT   @E@@@@          J       VR
)@@G@@  *GETC9            . $A YES,*GETC9 NO    @D@@@@          TNZ,T3    0,X1VS
)@@G@@              . $P LINK = 0   @E@@@@          ER        ERR$            VT
)@@G@@  . $ INTERNAL ERROR    @E@@@@          AX,T3     X1,,X1            . $PVU
)@@G@@ UP X1 ADDR       @D@@@@          J         C9LOP             . $P TRY NVV
)@@G@@XT    @[@@@@.     @^@@@@.         LS COMMAND    @[@@@@.     @]@@@@$(1). VW
)@@G@@      @C@@@@LS                                    . $H      @D@@@@      VX
)@@G@@    LA        A0,LN             . $P SAVE LN    @B@@@@          SA      VY
)@@G@@  A0,SAVELN         .   @E@@@@          LX,H1     X1,2,X10          . $PVZ
)@@G@@ GET SET SYM ADDR @G@@@@          LA,U      A0,1              . $P MAKE WA
)@@G@@SURE SET NAME ENTERED   @B@@@@          TE,S4     A0,,X1            .   WB
)@@G@@@E@@@@          J         ERROR11           . $J NOT A SET NAME   @E@@@@WC
)@@G@@          LA,T1     A0,1,X1           . $P GET SET CODE     @G@@@@      WD
)@@G@@    SA        A0,SETCODE        . $P TEMP. SAVE THE SET CODE      @G@@@@WE
)@@G@@          SZ        A1                . $P CURRENT RECORD OF THE SET    WF
)@@G@@@D@@@@          LA,S3     A2,,X1            . $P GET MODE   @F@@@@      WG
)@@G@@    SA        A2,SCHCODE        . $P SAVE THE SCHEMA CODE   @]@@@@MAN10.WH
)@@G@@      @G@@@@          SLJ       GETSET            . $P PERFORM GET NEXT WI
)@@G@@SET PTR     @E@@@@          JN        A1,ERROR91        . $J JUMP IF ERRWJ
)@@G@@OR    @C@@@@          JZ        A2,ERROR12        . $J DBP=0@E@@@@      WK
)@@G@@    TNE       A2,SETDBP         . $T POINT TO ITSELF  @E@@@@          J WL
)@@G@@        ERROR10           . $A YES,ERROR10 NO   @E@@@@          LA,U    WM
)@@G@@  A0,1              . $P SET LSETSW TO 1  @B@@@@          SA        A0,LWN
)@@G@@SETSW         .   @D@@@@          LA        A0,A2             . $P GET DWO
)@@G@@BP    @E@@@@          SLJ       LOCPTR            . $P LOCATE BY POINTERWP
)@@G@@@E@@@@          LA,T1     A0,RDA+2          . $P GET RECORD CODE  @E@@@@WQ
)@@G@@          TNE       A0,SETOWNER       . $T IS IT A SET OWNER@E@@@@      WR
)@@G@@    J         ERROR10           . $A YES,ERROR10 NO   @G@@@@          J WS
)@@G@@        LPCURCY           . $P ESTABLISH SET CURRENCY       @[@@@@.     WT
)@@G@@@]@@@@$(4).       @]@@@@$(1).       @[@@@@.     @[@@@@.     @]@@@@$(4). WU
)@@G@@      @]@@@@$(1).       @[@@@@.     @B@@@@.         GET MANUAL MEMBER BAWV
)@@G@@CK TO CODE  @[@@@@.     @]@@@@TRYMAN.     @E@@@@          LA,U      A0,2WW
)@@G@@              . $P SET LSETSW TO 2  @B@@@@          SA        A0,LSETSW WX
)@@G@@        .   @E@@@@          LA        A0,SETDBP         . $P GET MAN MEMWY
)@@G@@ DBP  @B@@@@          SLJ       LOCPTR            .   @G@@@@          LAWZ
)@@G@@        A0,SETCODE        . $P GET SET CODE, SCHEMA CODE    @B@@@@      XA
)@@G@@    SZ        A1                .   @B@@@@          LXI,U     A1,RDA    XB
)@@G@@        .   @A@@@@          LA        A2,SCHCODE      @B@@@@          J XC
)@@G@@        MAN10             .   @[@@@@.     @A@@@@.         ERROR RETURN FXD
)@@G@@ROM LOCPTR  @[@@@@.     @]@@@@LSNOFIND.   @C@@@@          LA        A0,LXE
)@@G@@SETSW         . $P      @ @@@@          J         LSNF,A0   @]@@@@LSNF. XF
)@@G@@      @^@@@@          ER        ERR$@ @@@@          J         ERROR14.  XG
)@@G@@@B@@@@          J         ERROR15           .   @[@@@@.     @]@@@@$(4). XH
)@@G@@      @[@@@@$(1)  @]@@@@$(4).       @]@@@@SETCODE   +0@]@@@@SCHCODE   +0XI
)@@G@@@]@@@@LSETSW    +0@]@@@@SAVELN    +0@]@@@@$(1).       @]@@@@RTNLN.      XJ
)@@G@@@A@@@@          LA        A0,SAVELN       @ @@@@          SA        A0,LXK
)@@G@@N     @ @@@@          J         *SAVEX11  @]@@@@$(1).       @[@@@@.     XL
)@@G@@@A@@@@.         ERROR PRINTING SECTION    @ @@@@.          STATUS: 6 - 2XM
)@@G@@0     @[@@@@.     @]@@@@ERROR1.     @E@@@@          TZ        LSETSW    XN
)@@G@@        . $T LOCATE SET SW ON @E@@@@          J         LSNOFIND        XO
)@@G@@  . $A YES,LSNOFIND NO  @^@@@@          LA,U      A0,1@B@@@@          J XP
)@@G@@        PRTIT1            .   @]@@@@ERROR2.     @^@@@@          LA,U    XQ
)@@G@@  A0,2@B@@@@          J         PRTIT1            .   @^@@@@ERROR3    LAXR
)@@G@@,U      A0,3@ @@@@          J         PRTIT1    @^@@@@ERROR4    LA,U    XS
)@@G@@  A0,4@ @@@@          J         PRTIT1    @]@@@@ERROR5.     @^@@@@      XT
)@@G@@    LA,U      A0,5@ @@@@          J         PRTIT1    @]@@@@ERROR6.     XU
)@@G@@@^@@@@          LA,U      A0,6@ @@@@          J         PRTIT1    @]@@@@XV
)@@G@@ERROR7.     @I@@@@          TNE       A1,(+040,0,0,0,0,2)               XW
)@@G@@                  . $T IND    @ @@@@          J         ERROR3    @^@@@@XX
)@@G@@          LA,U      A0,7@ @@@@          J         PRTIT1    @]@@@@ERROR8XY
)@@G@@.     @^@@@@          LA,U      A0,8@ @@@@          J         PRTIT1    XZ
)@@G@@@]@@@@ERROR9.     @^@@@@          LA,U      A0,9@ @@@@          J       YA
)@@G@@  PRTIT1    @]@@@@ERROR10.    @ @@@@          LA,U      A0,10     @ @@@@YB
)@@G@@          J         PRTIT2    @]@@@@ERROR11.    @ @@@@          LA,U    YC
)@@G@@  A0,11     @ @@@@          J         PRTIT2    @]@@@@ERROR12.    @ @@@@YD
)@@G@@          LA,U      A0,12     @ @@@@          J         PRTIT2    @]@@@@YE
)@@G@@ERROR91.    @E@@@@          LSSL      A1,1              . $P SHIFT OFF BYF
)@@G@@IT 35 @E@@@@          SSL       A1,19             . $P GET ERROR CODE   YG
)@@G@@@F@@@@          J         LSTBL,A1          . $J GOTO ERROR ROUTINE     YH
)@@G@@@[@@@@.     @]@@@@ERROR13.    @ @@@@          LA,U      A0,13     @ @@@@YI
)@@G@@          J         PRTIT2    @]@@@@ERROR14.    @ @@@@          LA,U    YJ
)@@G@@  A0,14     @ @@@@          J         PRTIT2    @]@@@@ERROR15.    @ @@@@YK
)@@G@@          LA,U      A0,15     @ @@@@          J         PRTIT2    @]@@@@YL
)@@G@@ERROR16.    @ @@@@          LA,U      A0,16     @ @@@@          J       YM
)@@G@@  PRTIT2    @]@@@@ERROR17.    @ @@@@          LA,U      A0,17     @ @@@@YN
)@@G@@          J         PRTIT2    @[@@@@.     @]@@@@PRTIT1.     @E@@@@      YO
)@@G@@    SZ        SAVELN            . $P RETURN LINE 0    @]@@@@PRTIT2.     YP
)@@G@@@C@@@@          SZ        RDALN             . $P      @A@@@@          LAYQ
)@@G@@        A1,STATCODE     @A@@@@          SA        A1,STATUS       @A@@@@YR
)@@G@@          LA        A1,FATCODE      @ @@@@          SA        A1,FATAL  YS
)@@G@@@A@@@@          LX        X2,MSGADDR      @E@@@@          LA        A0,,YT
)@@G@@X2            . $P GET PRINT PKT    @E@@@@          TZ        PERFSW    YU
)@@G@@        . $T PERFORM MODE     @C@@@@          TZ        FATAL           YV
)@@G@@  . $T FATAL@ @@@@          ER        PRINT$    @ @@@@          J       YW
)@@G@@  RTNLN     @]@@@@$(4).       @^@@@@ERMSG1    'NO FIND'     @ @@@@ML1   YX
)@@G@@    EQU       $-ERMSG1  @E@@@@ERMSG2    'NOT AN OBJECT RECORD OR NOT A RYY
)@@G@@ECORD NAME'       @ @@@@ML2       EQU       $-ERMSG2  @G@@@@ERMSG3    'IYZ
)@@G@@NDEX VALUE 0 OR OUT OF LIMIT OR NOT AN INDEXABLE ITEM'      @ @@@@ML3   ZA
)@@G@@    EQU       $-ERMSG3  @B@@@@ERMSG4    'ILLEGAL VARIABLE AS AN INDEX'  ZB
)@@G@@@ @@@@ML4       EQU       $-ERMSG4  @C@@@@ERMSG5    'INDEX VALUE CAN NOTZC
)@@G@@ BE EVALUATED'    @ @@@@ML5       EQU       $-ERMSG5  @C@@@@ERMSG6    'VZD
)@@G@@ARIABLE MUST BE A PIC 9 COMP ITEM'  @ @@@@ML6       EQU       $-ERMSG6  ZE
)@@G@@@C@@@@ERMSG7    'VARIABLE VALUE CAN NOT BE EVALUATED' @ @@@@ML7       EQZF
)@@G@@U       $-ERMSG7  @A@@@@ERMSG8    'DBP=0 NOT ALLOWED'       @ @@@@ML8   ZG
)@@G@@    EQU       $-ERMSG8  @A@@@@ERMSG9    'VARIABLE NOT DEFINED'    @ @@@@ZH
)@@G@@ML9       EQU       $-ERMSG9  @B@@@@ERMSG10   'END OF SET OR AN EMPTY SEZI
)@@G@@T'    @A@@@@ML10      EQU       $-ERMSG10       @ @@@@ERMSG11   'NOT A SZJ
)@@G@@ET NAME'    @A@@@@ML11      EQU       $-ERMSG11       @D@@@@ERMSG12   'BZK
)@@G@@AD SET POINTER IN THE CURRENT RECORD'     @A@@@@ML12      EQU       $-ERZL
)@@G@@MSG12       @A@@@@ERMSG13   'NO CURRENCY FOR THE SET' @A@@@@ML13      EQZM
)@@G@@U       $-ERMSG13       @]@@@@LSTBL.      @^@@@@          ER        ERR$ZN
)@@G@@@ @@@@          J         ERROR13   @^@@@@          ER        ERR$@^@@@@ZO
)@@G@@          ER        ERR$@^@@@@          ER        ERR$@^@@@@          ERZP
)@@G@@        ERR$@^@@@@          ER        ERR$@^@@@@          ER        ERR$ZQ
)@@G@@@ @@@@          J         TRYMAN    @C@@@@ERMSG14   'NEXT SET MEMBER NOTZR
)@@G@@ IN D$FILE'       @A@@@@ML14      EQU       $-ERMSG14       @E@@@@ERMSG1ZS
)@@G@@5   'CURRENT SET MEMBER(MANUAL) NO LONGER IN D$FILE'  @A@@@@ML15      EQZT
)@@G@@U       $-ERMSG15       @A@@@@ERMSG16   'CURRENT LINE IS 0'       @A@@@@ZU
)@@G@@ML16      EQU       $-ERMSG16       @C@@@@ERMSG17   'CURRENT LINE IS A CZV
)@@G@@ONTROL LINE'      @A@@@@ML17      EQU       $-ERMSG17       @]@@@@PRTBL.ZW
)@@G@@      @A@@@@STATCODE  EQUF      PRTBL-1,A0,T1   @A@@@@FATCODE   EQUF    ZX
)@@G@@  PRTBL-1,A0,S3   @A@@@@MSGADDR   EQUF      PRTBL-1,A0,H2   @ @@@@TBL   ZY
)@@G@@    FORM      12,6,18   @C@@@@          TBL       6,0,(PF 1,ML1,ERMSG1) ZZ
)@@G@@      @C@@@@          TBL       7,1,(PF 1,ML2,ERMSG2)       @C@@@@      AA
)@@G@@    TBL       8,1,(PF 1,ML3,ERMSG3)       @C@@@@          TBL       9,1,AB
)@@G@@(PF 1,ML4,ERMSG4)       @C@@@@          TBL       10,1,(PF 1,ML5,ERMSG5)AC
)@@G@@      @C@@@@          TBL       11,1,(PF 1,ML6,ERMSG6)      @C@@@@      AD
)@@G@@    TBL       12,1,(PF 1,ML7,ERMSG7)      @C@@@@          TBL       13,0AE
)@@G@@,(PF 1,ML8,ERMSG8)      @C@@@@          TBL       14,1,(PF 1,ML9,ERMSG9)AF
)@@G@@      @C@@@@          TBL       15,0,(PF 1,ML10,ERMSG10)    @C@@@@      AG
)@@G@@    TBL       16,1,(PF 1,ML11,ERMSG11)    @C@@@@          TBL       17,0AH
)@@G@@,(PF 1,ML12,ERMSG12)    @C@@@@          TBL       18,0,(PF 1,ML13,ERMSG1AI
)@@G@@3)    @C@@@@          TBL       19,0,(PF 1,ML14,ERMSG14)    @C@@@@      AJ
)@@G@@    TBL       20,0,(PF 1,ML15,ERMSG15)    @C@@@@          TBL       9,0,AK
)@@G@@(PF 1,ML16,ERMSG16)     @C@@@@          TBL       10,0,(PF 1,ML17,ERMSG1AL
)@@G@@7)    @#@@@@          END     ___@@@          J         PRTIT1          AM
)@@G@@  .   @]@@@@ERROR2.     @^@@@@          LA,U      A0,2@B@@@@          J AN
)@@G@@        PRTIT1          *[@@@@*SDFF*@[@@@@.     @E@@@@.         * LET, =AO
)@@G@@, ARRAY             WORKER ROUTINE *      @[@@@@.     @[@@@@.     @#@@@@AP
)@@G@@          AXR$    @#@@@@$(4)      LIT.    @]@@@@$(1).       @C@@@@LET*  AQ
)@@G@@                                . $H      @E@@@@          SZ        STATAR
)@@G@@US            . $P RESET STATUS     @E@@@@          SX,H2     X11,SAVEX1AS
)@@G@@1       . $P SAVE RETURN ADDR @E@@@@          SX,H2     X10,SAVEX10     AT
)@@G@@  . $P SAVE PKT ADDR    @E@@@@          LA,S3     A0,,X10           . $PAU
)@@G@@ GET OPR & TYPE   @E@@@@          DSL       A0,3              . $P SPLITAV
)@@G@@ THEM       @D@@@@          SSL       A1,33             . $P GET TYPE   AW
)@@G@@@D@@@@          SA        A1,TYPESW         . $P SAVE TYPE  @E@@@@      AX
)@@G@@    SA        A0,OPRSW          . $P SAVE OPERATOR    @E@@@@          J AY
)@@G@@        WKTBL,A1          . $J PERFORM LET/ARRAY@B@@@@$(4).             AZ
)@@G@@                    .   @]@@@@WKTBL.      @D@@@@          ER        ERR$BA
)@@G@@              . $ ILL. TYPE   @ @@@@          J         EQUATE    @ @@@@BB
)@@G@@          J         EQUATE    @ @@@@          J         ARRAY     @ @@@@BC
)@@G@@          J         ERROR1    @]@@@@SAVEX10   +0@]@@@@GETVX11*  +0@]@@@@BD
)@@G@@SAVEX11   +0@]@@@@TYPESW    +0@ @@@@PF        FORM      12,6,18   @]@@@@BE
)@@G@@$(1).       @C@@@@ARRAY     TNZ       2,X10             . $H      @F@@@@BF
)@@G@@          J         ERROR2            . $J DOUBLE DEFINED ARRAY   @D@@@@BG
)@@G@@          J         *SAVEX11          . $J RETURN     @]@@@@$(1).       BH
)@@G@@@[@@@@.     @A@@@@.         EQUATE AND LET COMMANDS   @[@@@@.     @C@@@@BI
)@@G@@EQUATE                                . $H      @[@@@@.     @C@@@@VARINDBJ
)@@G@@    EQUF      2,X10,S1          . $ PARSER@B@@@@IDXIND    EQUF      2,X1BK
)@@G@@0,S4          .   @C@@@@VARLEN    EQUF      2,X10,S3          . PKT     BL
)@@G@@@B@@@@IDXLEN    EQUF      2,X10,S6          .   @C@@@@VARENT    EQUF    BM
)@@G@@  2,X10,H1          . FORMAT  @B@@@@IDXENT    EQUF      2,X10,H2        BN
)@@G@@  .   @[@@@@.     @E@@@@.         INITIAL CHK OF THE VARIABLE ON LEFT HABO
)@@G@@ND SIZE     @[@@@@.     @E@@@@          SZ        VAR1TYPE          . $PBP
)@@G@@ SET TYPE 1 0     @F@@@@          TNZ       VARENT            . $T MUST BQ
)@@G@@BE A VARIABLE     @D@@@@          J         ERROR5            . $P HUH..BR
)@@G@@.     @E@@@@          LA        A0,IDXIND         . $P GET INX INDICATORBS
)@@G@@@F@@@@          AND,U     A0,040            . $T INDEXED BY LITERAL     BT
)@@G@@@E@@@@          JZ        A1,NONSET         . $A YES,NONSET NO    @E@@@@BU
)@@G@@          TNE,U     A0,044            . $T RESERVED WORD    @E@@@@      BV
)@@G@@    J         RSVLFT            . $A YES,RSVLFT NO    @E@@@@          ANBW
)@@G@@D,U     A0,3              . $T REF TO SET PTR   @E@@@@          JZ      BX
)@@G@@  A1,NONSET         . $A YES NO,NONSET    @E@@@@          SA        A0,VBY
)@@G@@AR1TYPE       . $P SAVE INDICATOR   @G@@@@          LA        A0,VARENT BZ
)@@G@@        . $P SAVE SET NAME ENTRY ADDR     @B@@@@          SA        A0,VCA
)@@G@@AR1ADD        .   @G@@@@          LA,H1     A0,3,X10          . $P SAVE CB
)@@G@@RECORD NAME ENTRY ADDR  @B@@@@          SA        A0,RCD1ADD        .   CC
)@@G@@@C@@@@          JZ        A0,ERROR5         . $ HUH...@G@@@@          AXCD
)@@G@@,U      X10,2             . $P UPDATE PKT(PARSE) ADDR PTR   @F@@@@      CE
)@@G@@    J         CHKVAR2           . $J EVALUATE RIGHT SIDE    @[@@@@.     CF
)@@G@@@C@@@@.         RESERVED WORD ON LEFT HAND SIDE       @[@@@@.     @]@@@@CG
)@@G@@RSVLFT.     @E@@@@          SA        A0,VAR1TYPE       . $P SAVE THE TYCH
)@@G@@PE    @D@@@@          SX        X10,RSVX10        . $P SAVE X10   @E@@@@CI
)@@G@@          LX        X1,VARENT         . $P GET ADDR 1       @E@@@@      CJ
)@@G@@    LA,U      A0,025            . $P TYPE 025(RSV)    @E@@@@          TECK
)@@G@@        A0,VARTYPE        . $T RIGHT TYPE       @B@@@@          ER      CL
)@@G@@  ERR$              .   @E@@@@          LA        A0,VARSEQ         . $PCM
)@@G@@ GET RESERVE CODE @A@@@@          LX        X2,(1,RSVTYPE)  @G@@@@      CN
)@@G@@    LR        R1,RSVCNT         . $P ACCEPTABLE RSV TYPE COUNT    @B@@@@CO
)@@G@@          SE,T1     A0,,*X2           .   @C@@@@          J         ERROCP
)@@G@@R8            . $J ERROR@F@@@@          SA        A0,RSVCODE        . $PCQ
)@@G@@ SAVE THE RESERVE CODE  @F@@@@          TNZ,H1    3,X10             . $TCR
)@@G@@ ADDR2 MUST BE RECORD   @ @@@@          J         ERROR10   @D@@@@      CS
)@@G@@    LX,H1     X1,3,X10          . $P GET ADDR2  @E@@@@          LA,U    CT
)@@G@@  A0,2              . $P TYPE=2(RECORD)   @F@@@@          SX        X1,VCU
)@@G@@AR1ADD        . $P SAVE ADDR1 FOR LETCHG  @E@@@@          TE        A0,VCV
)@@G@@ARTYPE        . $T A RECORD TYPE    @ @@@@          J         ERROR10   CW
)@@G@@@E@@@@          AX,U      X10,2             . $P SKIP TO RIGHT    @B@@@@CX
)@@G@@          J         CHKVAR2           .   @[@@@@$(4)  @]@@@@RSVTYPE.    CY
)@@G@@@#@@@@          +3,0,0  @#@@@@          +4,0,0  @ @@@@RSVCNT    +RSVCNT-CZ
)@@G@@RSVTYPE     @]@@@@RSVX10    +0@[@@@@$(1)  @[@@@@.     @C@@@@.         A DA
)@@G@@VARIABLE ON LEFT(NOT A SET PTR)     @[@@@@.     @C@@@@NONSET            DB
)@@G@@                    . $H      @F@@@@          LA        A0,VARENT       DC
)@@G@@  . $P SAVE VAR1 ENTRY ADDR   @B@@@@          SA        A0,VAR1ADD      DD
)@@G@@  .   @E@@@@          SLJ       GETIDX            . $P GET INDEX VALUE  DE
)@@G@@@D@@@@          SA        A0,IDX1VAL        . $P SAVE IT    @E@@@@      DF
)@@G@@    JN        A0,*SAVEX11       . $J ERROR ON INDEX   @E@@@@          AXDG
)@@G@@,U      X10,1             . $P UPDATE PKT PTR   @B@@@@          AX      DH
)@@G@@  X10,R4            .   @[@@@@.     @D@@@@.         CHECK AND EVALUATE TDI
)@@G@@HE VARIABLES ON RIGHT   @[@@@@.     @]@@@@CHKVAR2.    @E@@@@          SXDJ
)@@G@@        X10,SAVEX10       . $P TEMP SAVE X10    @E@@@@          SZ      DK
)@@G@@  VAR2TYPE          . $P RESET VAR 2 SW'S @G@@@@          SLJ       GETVDL
)@@G@@ARXX          . $P EVALUATE FIRST ONE ON RIGHT  @D@@@@          LA      DM
)@@G@@  A0,VARSW          . $P GET SW'S   @G@@@@          LX        X1,(1,VARLDN
)@@G@@IST-1)  . $P CHK IF RIGHT COMBINATIONS    @B@@@@          LR        R1,VDO
)@@G@@ARCNT         .   @B@@@@          SE,H2     A0,1,*X1          .   @B@@@@DP
)@@G@@          J         ERROR5            .   @E@@@@          TNZ,S1    0,X1DQ
)@@G@@              . $T 2ND VAR IN RIGHT @E@@@@          J         ASGVAR    DR
)@@G@@        . $A YES NO,ASGVAR    @E@@@@          LA        A0,VARXVAL      DS
)@@G@@  . $P SAVE 1ST VALUE   @B@@@@          SA        A0,VAR2VAL        .   DT
)@@G@@@E@@@@          LX        X10,SAVEX10       . $P RESTORE X10      @D@@@@DU
)@@G@@          AX,U      X10,1             . $P NXT PKT    @B@@@@          AXDV
)@@G@@        X10,R4            .   @E@@@@          SLJ       GETVARXX        DW
)@@G@@  . $P DO GETVARX       @D@@@@          LA        A0,VARSW          . $PDX
)@@G@@ GET SW'S   @E@@@@          LX        X1,(1,VARLIST-1)  . $P CHK IF COMPDY
)@@G@@ATABLE@B@@@@          LR        R1,VARCNT         .   @B@@@@          SEDZ
)@@G@@,H2     A0,1,*X1          .   @B@@@@          J         ERROR5          EA
)@@G@@  .   @B@@@@          TNZ,S1    0,X1              .   @B@@@@          J EB
)@@G@@        ERROR5            .   @C@@@@          SZ        A0              EC
)@@G@@  . $P      @C@@@@          LA        A1,VARXVAL        . PERFORM @B@@@@ED
)@@G@@          SZ        A2                .   @D@@@@          LA        A3,VEE
)@@G@@AR2VAL        . ARITHMATIC    @D@@@@          LX        X1,OPRSW        EF
)@@G@@  .  OPERATIONS   @B@@@@          J         OPERATE,X1        .   @]@@@@EG
)@@G@@OPERATE.    @^@@@@          ER        ERR$@ @@@@          J         ADDOEH
)@@G@@PR    @ @@@@          J         ANAOPR    @ @@@@          J         DIVOEI
)@@G@@PR    @ @@@@          J         MULOPR    @]@@@@ADDOPR.     @D@@@@      EJ
)@@G@@    DA        A0,A2             . $P ADD(+)     @B@@@@          JNZ     EK
)@@G@@  A0,ERROR3         .   @B@@@@          SA        A1,VARXVAL        .   EL
)@@G@@@B@@@@          J         ASGVAR            .   @]@@@@ANAOPR.     @E@@@@EM
)@@G@@          ANA       A3,A1             . $P SUBTRACT(-)      @B@@@@      EN
)@@G@@    TP        A3                .   @B@@@@          SZ        A3        EO
)@@G@@        .   @B@@@@          SA        A3,VARXVAL        .   @B@@@@      EP
)@@G@@    J         ASGVAR            .   @]@@@@DIVOPR.     @E@@@@          TNEQ
)@@G@@Z       A1                . $P DIVIDE (/)       @B@@@@          J       ER
)@@G@@  ERROR4            .   @B@@@@          DI        A2,A1             .   ES
)@@G@@@B@@@@          SA        A2,VARXVAL        .   @B@@@@          J       ET
)@@G@@  ASGVAR            .   @]@@@@MULOPR.     @E@@@@          MI        A3,AEU
)@@G@@1             . $P MULTIPLY(*)      @B@@@@          JNZ       A3,ERROR3 EV
)@@G@@        .   @B@@@@          SA        A4,VARXVAL        .   @B@@@@      EW
)@@G@@    J         ASGVAR            .   @[@@@@$(4)  @C@@@@                  EX
)@@G@@                    . 041 SET @C@@@@                                    EY
)@@G@@  . 042     @C@@@@                                      . 043     @E@@@@EZ
)@@G@@                                      . 044 UNDEFINED       @]@@@@VAR1TYFA
)@@G@@PE  +0@]@@@@VAR1ADD   +0@]@@@@VAR1MODE  +0@]@@@@IDX1VAL   +0@]@@@@RCD1ADFB
)@@G@@D   +0@]@@@@VAR2VAL   +0@ @@@@VARMODE   EQUF      0,X1,S3   @ @@@@VARTYPFC
)@@G@@E   EQUF      0,X1,S4   @ @@@@VARREL    EQUF      0,X1,T1   @ @@@@VARLENFD
)@@G@@G   EQUF      0,X1,T3   @ @@@@VARSEQ    EQUF      1,X1,T1   @ @@@@VAROFFFE
)@@G@@    EQUF      1,X1,S3   @ @@@@VARSETN   EQUF      1,X1,T1   @ @@@@RECLINFF
)@@G@@K   EQUF      2,X1,H1   @ @@@@OCCLINK   EQUF      2,X1,H2   @]@@@@VARLISFG
)@@G@@T     @^@@@@          +0,,,0,2,0    @^@@@@          +0,,,0,1,0    @^@@@@FH
)@@G@@          +0,,,041,2,0  @^@@@@          +0,,,042,2,0  @^@@@@          +0FI
)@@G@@,,,043,2,0  @^@@@@          +0,,,044,2,0  @^@@@@          +0,,,044,1,0  FJ
)@@G@@@^@@@@          +1,,,0,2,1    @^@@@@          +1,,,0,2,2    @^@@@@      FK
)@@G@@    +1,,,0,2,3    @^@@@@          +1,,,0,2,4    @ @@@@VARCNT    +VARCNT-FL
)@@G@@VARLIST     @]@@@@$(1).       @A@@@@.         EQUATE OF A SET POINTER   FM
)@@G@@@[@@@@.     @C@@@@SETEQU                                . $H      @B@@@@FN
)@@G@@          LA,U      A0,2              .   @E@@@@          TE        A0,VFO
)@@G@@ARXTYPE       . $T PIC 9 COMP       @E@@@@          J         ERROR5    FP
)@@G@@        . $A YES NO,ERROR5    @F@@@@          LX        X1,VAR1ADD      FQ
)@@G@@  . $P GET VAR ENTRY ADDR     @E@@@@          LA        A0,VARTYPE      FR
)@@G@@  . $P GET SYM TYPE     @E@@@@          TE,U      A0,1              . $TFS
)@@G@@ A SET NAME       @E@@@@          J         ERROR14           . $A YES NFT
)@@G@@O,ERROR14   @E@@@@          LA        A0,VARSETN        . $P GET SET CODFU
)@@G@@E     @D@@@@          SA        A0,SET1CODE       . $P SAVE IT    @E@@@@FV
)@@G@@          LA        A0,VARMODE        . $P SCHEMA CODE      @D@@@@      FW
)@@G@@    SA        A0,VAR1MODE       . $P SAVE 2T    @G@@@@          LX      FX
)@@G@@  X1,RCD1ADD        . $P GET RECORD NAME ENTRY ADDR   @A@@@@          LAFY
)@@G@@        A0,VARTYPE      @E@@@@          TE,U      A0,2              . $TFZ
)@@G@@ A RECORD NAME    @E@@@@          J         ERROR15           . $A YES NGA
)@@G@@O,RCONMERR  @E@@@@          LA        A0,VARSEQ         . $P GET SEQ NO.GB
)@@G@@      @F@@@@          AA,H2     A0,TT1            . $P GET TT1 ENTRY ADDGC
)@@G@@R     @B@@@@          ANA,U     A0,1              .   @D@@@@          TNGD
)@@G@@Z,T1    0,A0              . $T TT1 OK     @E@@@@          ER        ERR$GE
)@@G@@              . $ SEQ TBL GOOF      @E@@@@          LA,T1     A0,,A0    GF
)@@G@@        . $P GET RCD CODE     @D@@@@          SA        A0,RCD1CODE     GG
)@@G@@  . $P SAVE IT    @D@@@@          LA        A0,SET1CODE       . $P SET UGH
)@@G@@P     @B@@@@          LA        A1,RCD1CODE       .   @C@@@@          LAGI
)@@G@@        A2,VARMODE        . FOR     @D@@@@.                             GJ
)@@G@@        GETSET ROUTINE  @B@@@@          SLJ       GETSET            .   GK
)@@G@@@B@@@@          JN        A1,SETERR         .   @E@@@@          LA      GL
)@@G@@  A5,A0             . $P GET SET TYPE     @B@@@@          SSL       A5,1GM
)@@G@@8             .   @E@@@@          LA        A6,VAR1TYPE       . $P GET SGN
)@@G@@ET INDEX    @B@@@@          LSSL      A6,30             .   @B@@@@      GO
)@@G@@    LDSL      A5,6              .   @G@@@@          LX        X1,(1,SETLGP
)@@G@@INK-1)  . $P GET SET COMBINATION LIST     @B@@@@          LR,U      R1,8GQ
)@@G@@              .   @E@@@@          SE,T3     A5,1,*X1          . $P SEARCGR
)@@G@@H THE LIST  @B@@@@          J         ERROR7            .   @E@@@@      GS
)@@G@@    LA        A0,VARXVAL        . $P GET THE NEW VAL  @B@@@@          LXGT
)@@G@@,H1     X1,,X1            .   @B@@@@          EX        SAVEPTR,X1      GU
)@@G@@  .   @D@@@@          TNZ       VARXVAL           . $T PTR = 0    @B@@@@GV
)@@G@@          SLJ       ERROR6            .   @F@@@@          LA        A0,RGW
)@@G@@CD1ADD        . $P GET RECORD ENTRY ADDR  @E@@@@          SA        A0,VGX
)@@G@@AR1ADD        . $P SET AS VAR1 ADDR @B@@@@          J         LETCHG    GY
)@@G@@        .   @]@@@@$(4).       @]@@@@SAVEPTR.    @ @@@@          SA      GZ
)@@G@@  A0,,A1    @ @@@@          SA        A0,1,A1   @ @@@@          SA      HA
)@@G@@  A0,1,A1   @ @@@@          SA        A0,2,A1   @]@@@@RCD1CODE  +0@]@@@@HB
)@@G@@SET1CODE  +0@ @@@@PFSET     FORM      18,12,6   @]@@@@SETLINK.    @ @@@@HC
)@@G@@          PFSET     0,0,041   @ @@@@          PFSET     0,1,041   @A@@@@HD
)@@G@@          PFSET     0,010,041       @A@@@@          PFSET     0,011,041 HE
)@@G@@      @A@@@@          PFSET     1,010,042       @A@@@@          PFSET   HF
)@@G@@  1,011,042       @A@@@@          PFSET     2,001,043       @A@@@@      HG
)@@G@@    PFSET     3,011,043       @[@@@@.     @A@@@@.         UPDATE VDFINEDHH
)@@G@@ ITEM ENTRY @[@@@@.     @[@@@@$(1)  @E@@@@DEFINE    +0                  HI
)@@G@@        . $H UNDEFINED ITEM   @[@@@@.     @ @@@@.         MAKE ENTRY IN HJ
)@@G@@TT1   @[@@@@.     @E@@@@          LA        A0,LFTSW          . $T CHK IHK
)@@G@@F ARRAY     @B@@@@          TNE,U     A0,011            .   @B@@@@      HL
)@@G@@    J         LETARY            .   @F@@@@          LA        A0,TYPESW HM
)@@G@@        . $P GET SW FOR LET OR EQU  @E@@@@          TE,U      A0,1      HN
)@@G@@        . $T A LET COMMAND    @A@@@@          J         ERROR24+2       HO
)@@G@@@]@@@@LETARY.     @D@@@@          LX,H2     X3,TT1            . $P TT1 AHP
)@@G@@DDR   @B@@@@          LA,H1     A0,TT1            .   @E@@@@          AXHQ
)@@G@@        X3,A0             . $P ASG A SEQ NO.    @B@@@@          AA,U    HR
)@@G@@  A0,1              .   @B@@@@          SA,H1     A0,TT1            .   HS
)@@G@@@B@@@@          SA        A0,VARSEQ         .   @E@@@@          SZ      HT
)@@G@@  0,X3              . $P RESET TT1 ENTRY  @B@@@@          LA        A0,UHU
)@@G@@DFSW          .   @E@@@@          SA        A0,VARTYPE        . $P DEFINHV
)@@G@@E A TYPE    @B@@@@          LA        A1,LFTSW          .   @E@@@@      HW
)@@G@@    LA        A0,VARXLEN        . $P ITEM LENGTH      @E@@@@          TEHX
)@@G@@,U      A1,011            . $T ARRAY ITEM       @E@@@@          SA      HY
)@@G@@  A0,VARLENG        . $P SET ITEM LENGTH  @E@@@@LENGOK.                 HZ
)@@G@@              . M$CORE FOR BUFFER   @B@@@@          LA        A0,LAST$D IA
)@@G@@        .   @^@@@@          AA,U      A0,1@E@@@@          SA,H2     A0,,IB
)@@G@@X3            . $ BUFFER ADDR       @B@@@@          LA        A0,VARLENGIC
)@@G@@        .   @ @@@@          LA        A1,LFTSW  @B@@@@          TE,U    ID
)@@G@@  A1,011            .   @^@@@@          J         $+2 @E@@@@          MSIE
)@@G@@I,T3    A0,2,X1           . $P LENGTH X MAX OCC @F@@@@          DSL     IF
)@@G@@  A0,36             . $P COMPUTE BUFFER SIZE    @B@@@@          DI,U    IG
)@@G@@  A0,6              .   @B@@@@          TZ        A1                .   IH
)@@G@@@B@@@@          AA,U      A0,1              .   @B@@@@          AA,U    II
)@@G@@  A0,2              .   @B@@@@          AA        A0,LAST$D         .   IJ
)@@G@@@B@@@@          SA        A0,LAST$D         .   @E@@@@          ER      IK
)@@G@@  MCORE$            . $P GET THE CORE     @B@@@@          J         *DEFIL
)@@G@@INE           .   @[@@@@.     @[@@@@$(1)  @[@@@@.     @C@@@@.         ASIM
)@@G@@SIGN VALUE TO THE LEFT HAND VARIABLE@[@@@@.     @]@@@@ASGVAR.     @E@@@@IN
)@@G@@          LA        A0,VAR1TYPE       . $P GET VAR1 TYPE    @D@@@@      IO
)@@G@@    TNE,U     A0,044            . $T RSV TYPE   @E@@@@          J       IP
)@@G@@  ASGRSV            . $A YES,ASGRSV NO    @E@@@@          JNZ       A0,SIQ
)@@G@@ETEQU         . $J JUMP IF SET      @ @@@@.         NON-SET PTR ASSIGN  IR
)@@G@@@E@@@@          LX        X1,VAR1ADD        . $P GET VAR1 ADDR    @E@@@@IS
)@@G@@          LA        A0,VARTYPE        . $P CHK IF COMPATABLE@B@@@@      IT
)@@G@@    LA        A1,VARXTYPE       .   @D@@@@          LSSL      A1,30     IU
)@@G@@        . ( MESS LIST)  @B@@@@          LDSL      A0,6              .   IV
)@@G@@@B@@@@          LX        X2,(1,MESSLIST-1) .   @B@@@@          LR      IW
)@@G@@  R1,MESSCNT        .   @B@@@@          SE,T2     A0,1,*X2          .   IX
)@@G@@@B@@@@          J         ERROR5            .   @F@@@@          LA      IY
)@@G@@  A0,,X2            . $P GET THE LIST ENTRY     @D@@@@          SA      IZ
)@@G@@  A0,LEFTVAR        . $P SAVE IT    @E@@@@          TZ        UDFSW     JA
)@@G@@        . $T ITEM DEFINED     @E@@@@          SLJ       DEFINE          JB
)@@G@@  . $A YES NO,DEFINE    @D@@@@          LX        X10,VAR1ADD       . $PJC
)@@G@@ VAR1 ADDR  @D@@@@          LA        A0,IDX1VAL        . $P IDX VALUE  JD
)@@G@@@E@@@@          SLJ       GETVAR            . $P FIND ITEM ADDR   @B@@@@JE
)@@G@@          JN        A1,ERROR24        .   @E@@@@          DS        A0,DJF
)@@G@@SA0           . $P SAVE GETVAR      @C@@@@          DS        A2,DSA2   JG
)@@G@@        . RETURNS @F@@@@          TNZ       DPNSW             . $T A DEPJH
)@@G@@ENDING ON ITEM    @E@@@@          J         $+3               . $A YES NJI
)@@G@@O,$+3       @E@@@@          SLJ       GETNUM            . $P GET THE DPNJJ
)@@G@@ VALUE@D@@@@          SA        A0,DPNVAL         . $P SAVE IT    @D@@@@JK
)@@G@@          LX        X2,DSA0+1         . $P SET-UP     @C@@@@          LAJL
)@@G@@        A8,DSA2           .  FOR    @E@@@@          LR        R8,DSA0   JM
)@@G@@        .  MOVE (NEW ITEM)    @B@@@@          LA        A1,DSA2+1       JN
)@@G@@  .   @E@@@@          LX        X1,VARXADD        . $P OLD ITEM ADDR    JO
)@@G@@@B@@@@          LA        A7,VARXOFF        .   @B@@@@          LR      JP
)@@G@@  R7,VARXLEN        .   @D@@@@          LX        X3,TRFSW          . $PJQ
)@@G@@ MOVE TYPE  @B@@@@          LX        X3,SAVEIT,X3      .   @B@@@@      JR
)@@G@@    SLJ       0,X3              .   @E@@@@          TZ        DPNSW     JS
)@@G@@        . $T DEP ON ITEM      @E@@@@          SLJ       ADJDPN          JT
)@@G@@  . $A YES,ADJDPN NO    @E@@@@          TZ        UPDSW             . $TJU
)@@G@@ RECORD TYPE      @E@@@@          J         LETCHG            . $A YES,LJV
)@@G@@ETCHG NO    @ @@@@          J         *SAVEX11  @[@@@@$(4)  @^@@@@DSA0  JW
)@@G@@    RES       2   @^@@@@DSA2      RES       2   @]@@@@LEFTVAR   +0@A@@@@JX
)@@G@@DPNSW     EQUF      LEFTVAR,,S1     @A@@@@UPDSW     EQUF      LEFTVAR,,SJY
)@@G@@2     @A@@@@UDFSW     EQUF      LEFTVAR,,S5     @A@@@@TRFSW     EQUF    JZ
)@@G@@  LEFTVAR,,S6     @A@@@@LFTSW     EQUF      LEFTVAR,,S3     @A@@@@RGTSW KA
)@@G@@    EQUF      LEFTVAR,,S4     @]@@@@SAVEIT    +0@^@@@@          +TOPMOVEKB
)@@G@@      @^@@@@          +TYPE32       @^@@@@          +TYPE33       @]@@@@KC
)@@G@@DPNVAL    +0@]@@@@LPPKT     +0@]@@@@          +0@#@@@@          +RDA+1  KD
)@@G@@@]@@@@          +0@]@@@@TCPKT     +0@]@@@@          +0@]@@@@          +0KE
)@@G@@@]@@@@$(4).       @]@@@@MESSLIST.   @^@@@@          +0,1,2,1,0,1  @^@@@@KF
)@@G@@          +0,1,3,1,0,1  @^@@@@          +1,1,4,2,0,2  @^@@@@          +1KG
)@@G@@,1,5,2,0,3  @^@@@@          +0,1,6,1,0,1  @^@@@@          +0,0,7,2,0,3  KH
)@@G@@@^@@@@          +0,0,010,1,0,1@ @@@@          +0,0,011,1,010,1    @^@@@@KI
)@@G@@          +0,0,011,2,7,3@^@@@@          +0,1,012,1,0,1@^@@@@          +0KJ
)@@G@@,1,013,2,0,2@^@@@@          +0,1,014,2,0,3@^@@@@          +0,1,015,1,0,1KK
)@@G@@@^@@@@          +0,0,016,2,0,3@^@@@@          +0,0,017,1,0,1@ @@@@      KL
)@@G@@    +0,0,020,1,017,1    @ @@@@          +0,0,020,2,016,3    @^@@@@      KM
)@@G@@    +2,1,021,1,0,1@^@@@@          +2,1,022,2,0,2@^@@@@          +2,1,023KN
)@@G@@,2,0,3@^@@@@          +2,1,024,1,0,1@ @@@@MESSCNT   MESSCNT-MESSLIST    KO
)@@G@@@]@@@@$(1).       @C@@@@.         ASSIGN VALUE TO A RESERVED ITEM       KP
)@@G@@@[@@@@.     @]@@@@ASGRSV.     @D@@@@          LX        X10,RSVX10      KQ
)@@G@@  . $P GET X10    @E@@@@          AX,U      X10,2             . $P ADJ FKR
)@@G@@OR GETRSV   @B@@@@          SLJ       GETRSV            .   @A@@@@      KS
)@@G@@    JN        A1,ERRORXX      @G@@@@          LA        A0,VARXTYPE     KT
)@@G@@  . $T TYPE ON RIGHT MUST BE 2      @C@@@@          TE,U      A0,2      KU
)@@G@@        . $T IS IT@ @@@@          J         ERROR5    @F@@@@          LAKV
)@@G@@,U      A0,4              . $P CHK FOR HEADER CODE    @E@@@@          TNKW
)@@G@@E,U     A0,RSVCODE        . $T MAN-CTL CODE     @ @@@@          J       KX
)@@G@@  CHGMAN    @E@@@@          LA,H2     A0,,A1            . $P GET RECORD KY
)@@G@@LENGTH@E@@@@          TE,H2     A0,VARXVAL        . $T SAME LENGTH      KZ
)@@G@@@ @@@@          J         ERROR26   @]@@@@CHGMAN.     @E@@@@          LALA
)@@G@@        A0,VARXVAL        . $P GET THE VALUE    @D@@@@          SA      LB
)@@G@@  A0,,A1            . $P SAVE IT    @ @@@@          J         LETCHG    LC
)@@G@@@]@@@@$(1).       @D@@@@.         A RECORD HAS BEEN MODIFIED, CHANGE T$FLD
)@@G@@ILE   @[@@@@.     @]@@@@LETCHG.     @G@@@@          LX        X1,VAR1ADDLE
)@@G@@        . $P FIND OUT THE RECORD BUFFER   @B@@@@          LA        A0,VLF
)@@G@@ARSEQ         .   @F@@@@          LA        A1,DPNSW          . $P CHK ILG
)@@G@@F OCCURS ITEM     @G@@@@          TE,U      A1,2              . $T DPNSWLH
)@@G@@=2 FOR OCCURS ITEM      @D@@@@          J         SEQNOK            . $ALI
)@@G@@ YES,OK NO  @F@@@@          LA,H1     A0,1,X1           . $P GET OCCURS LJ
)@@G@@ITEM LINK   @E@@@@          DSL       A0,17             . $P LINK ADDR(RLK
)@@G@@EL)   @E@@@@          LA,H2     A2,C14            . $P REL TO C14       LL
)@@G@@@D@@@@          TNZ       A0                . $T C15 REL    @E@@@@      LM
)@@G@@    LA,H2     A2,C15            . $P REL TO C15       @E@@@@          SSLN
)@@G@@L       A1,19             . $P REL ADDR IN A1   @E@@@@          AA      LO
)@@G@@  A1,A2             . $P GET ABS ADDR     @E@@@@          LX        X1,ALP
)@@G@@1             . $P SET IT IN X1     @E@@@@          LA        A0,VARSEQ LQ
)@@G@@        . $P GET THE SEQ NO   @]@@@@SEQNOK.     @B@@@@          A,H2    LR
)@@G@@  A0,TT1            .   @B@@@@          AN,U      A0,1              .   LS
)@@G@@@B@@@@          TNZ,H2    0,A0              .   @D@@@@          ER      LT
)@@G@@  ERR$              . $ TT1 GOOF    @B@@@@          LX,H2     X4,0,A0   LU
)@@G@@        .   @B@@@@          SZ        RDALN             .   @D@@@@      LV
)@@G@@    LA        A0,1,X4           . $P GET DBP    @B@@@@          TNZ     LW
)@@G@@  A0                .   @D@@@@          ER        ERR$              . $ LX
)@@G@@DBP = 0     @E@@@@          SA        A0,LPPKT+1        . $P LOCATE THE LY
)@@G@@RECORD@B@@@@          SZ        LPPKT             .   @B@@@@          LXLZ
)@@G@@,U      X10,LPPKT         .   @B@@@@          LMJ       X11,TF$DBP      MA
)@@G@@  .   @B@@@@          TZ,T1     LPPKT+2           .   @E@@@@          J MB
)@@G@@        ERROR13           . $E RECORD DELETED   @E@@@@          LA      MC
)@@G@@  A0,LPPKT          . $P UPDATE THE RECORD@E@@@@          SA        A0,TMD
)@@G@@CPKT          . $P SAVE LINE NUMBER @E@@@@          LA        A0,,X4    ME
)@@G@@        . $P GET RECORD LENGTH@G@@@@          SA        A0,TCPKT+2      MF
)@@G@@  . $P SAVE IT & CLEAR STATUS       @B@@@@          LA        A0,X4     MG
)@@G@@        .   @B@@@@          A,U       A0,1              .   @B@@@@      MH
)@@G@@    SA        A0,TCPKT+1        .   @B@@@@          SZ,T1     TCPKT+2   MI
)@@G@@        .   @B@@@@          LX,U      X10,TCPKT         .   @B@@@@      MJ
)@@G@@    LMJ       X11,TF$C          .   @B@@@@          TZ,T1     TCPKT+2   MK
)@@G@@        .   @B@@@@          ER        ERR$              .   @D@@@@      ML
)@@G@@    SZ        RDALN             . $P RESET RDA  @B@@@@          J       MM
)@@G@@  *SAVEX11          .   @[@@@@.     @A@@@@.         EVALUATE A VARIABLE MN
)@@G@@      @[@@@@.     @F@@@@.         (OUT)     EITHER PIC X      OR  PIC 9 MO
)@@G@@COMP ON VARXVAL   @[@@@@.     @]@@@@$(1).       @]@@@@GETVARXX  +0@ @@@@MP
)@@G@@          SZ        GETXXSW   @A@@@@          J         GETVARX+2       MQ
)@@G@@@]@@@@GETVARX*  +0@A@@@@          SX        X10,GETXXSW     @D@@@@      MR
)@@G@@    TNZ       VARENT            . $T A LITERAL  @E@@@@          J       MS
)@@G@@  VARXLIT           . $A YES,VARXLIT NO   @E@@@@          LA        A0,IMT
)@@G@@DXIND         . $P GET IDX INDICATOR@G@@@@          AND,U     A0,040    MU
)@@G@@        . $T SET OR IDX'D BY LITERAL      @E@@@@          JZ        A1,NMV
)@@G@@ONSETX        . $A YES NO,NONSETX   @E@@@@          TNE,U     A0,044    MW
)@@G@@        . $T AN RSV TYPE      @E@@@@          J         RSVAR           MX
)@@G@@  . $A YES,RSVAR NO     @C@@@@          AND,U     A0,3              . $TMY
)@@G@@ SET  @E@@@@          JZ        A1,NONSETX        . $A YES NO,NONSETX   MZ
)@@G@@@C@@@@          SA        A0,VAR2TYPE       . $P SAVE @F@@@@          LXNA
)@@G@@        X1,VARENT         . $P GET SET ENTRY ADDR     @B@@@@          LANB
)@@G@@        A0,VARTYPE        .   @E@@@@          TE,U      A0,1            NC
)@@G@@  . $T SET NAME TYPE    @C@@@@          J         ERROR14           . $END
)@@G@@      @E@@@@          LA        A0,VARSETN        . $P GET SET CODE     NE
)@@G@@@D@@@@          SA        A0,SETCODE        . $P SAVEIT     @D@@@@      NF
)@@G@@    LA        A2,VARMODE        . $P SET MODE   @G@@@@          LX,H1   NG
)@@G@@  X1,3,X10          . $P GET RECORD NAME SYM TBL      @D@@@@          LANH
)@@G@@        A0,VARTYPE        . $P GET TYPE   @E@@@@          TE,U      A0,2NI
)@@G@@              . $T RECORD NAME      @C@@@@          J         ERROR15   NJ
)@@G@@        . $E      @E@@@@          TE        A0,VARMODE        . $T REF NNK
)@@G@@EW ITEM     @G@@@@          LA        A2,VARMODE        . $P SET A2 = OLNL
)@@G@@D ITEM CODE       @E@@@@          LA        A0,VARSEQ         . $P GET RNM
)@@G@@ECORD SEQ NO@E@@@@          AA,H2     A0,TT1            . $P GET RECORD NN
)@@G@@CODE  @E@@@@          ANA,U     A0,1              . $ FROM TT1 TBL      NO
)@@G@@@B@@@@          LA,T1     A0,,A0            .   @D@@@@          SA      NP
)@@G@@  A0,RCDCODE        . $P SAVE IT    @D@@@@          TNZ       A0        NQ
)@@G@@        . $T TT1 OK     @E@@@@          ER        ERR$              . $ENR
)@@G@@ SEQ NO TBL GOOF  @E@@@@          LA        A0,SETCODE        . $P GET SNS
)@@G@@ET CODE     @E@@@@          LA        A1,RCDCODE        . $P GET RCD CODNT
)@@G@@E     @D@@@@          SLJ       GETSET            . $P DO GETSET  @E@@@@NU
)@@G@@          JN        A1,SETERR         . $J ERROR IN GETSET  @F@@@@      NV
)@@G@@    LA,U      A0,6              . $P SET AS PIC 9(10) COMP  @E@@@@      NW
)@@G@@    SA        A0,VARXLEN        . $P LENGTH = 6       @E@@@@          LANX
)@@G@@,U      A0,VARXVAL        . $P ADDR OF VALUE    @D@@@@          SA      NY
)@@G@@  A0,VARXADD        . $P SAVE IT    @^@@@@          LA,U      A0,1@E@@@@NZ
)@@G@@          SA        A0,VARXOFF        . $P CHAR OFF-SET = 1 @G@@@@      OA
)@@G@@    LA        A0,VAR2TYPE       . $P GET THE SET PTR SPECIFIED    @ @@@@OB
)@@G@@          ANA,U     A0,041    @B@@@@          EX        SAVXPTR,A0      OC
)@@G@@  .   @F@@@@          LA,U      A0, 2             . $P SET PIC 9 COMP TYOD
)@@G@@PE    @B@@@@          SA        A0,VARXTYPE       .   @E@@@@          LROE
)@@G@@,U      R4,1              . $P LENGTH FOR PKT   @D@@@@          TNZ     OF
)@@G@@  VARXVAL           . $T PTR =0     @E@@@@          SLJ       ERROR16   OG
)@@G@@        . $W SEND WARNING MSG @]@@@@GETVXRTN.   @B@@@@          SZ      OH
)@@G@@  GETVX11           .   @ @@@@          TZ        GETXXSW   @ @@@@      OI
)@@G@@    J         *GETVARX  @A@@@@          J         *GETVARXX       @]@@@@OJ
)@@G@@SAVXPTR.    @D@@@@          SA        A2,VARXVAL        . $P NXT PTR    OK
)@@G@@@D@@@@          SA        A3,VARXVAL        . $P OWNER PTR  @D@@@@      OL
)@@G@@    SA        A4,VARXVAL        . $P PRIOR PTR  @]@@@@$(4).       @]@@@@OM
)@@G@@RSVCODE   +0@]@@@@SETCODE   +0@]@@@@RCDCODE   +0@]@@@@GETXXSW   +0@]@@@@ON
)@@G@@$(1).       @]@@@@SETERR.     @F@@@@          LSSL      A1,1            OO
)@@G@@  . $P GET GETSET ERROR CODE  @B@@@@          SSL       A1,19           OP
)@@G@@  .   @B@@@@          J         SETXTBL,A1        .   @]@@@@SETXTBL.    OQ
)@@G@@@^@@@@          ER        ERR$@^@@@@          ER        ERR$@ @@@@      OR
)@@G@@    J         ERROR17   @^@@@@          ER        ERR$@^@@@@          EROS
)@@G@@        ERR$@^@@@@          ER        ERR$@ @@@@          J         ERROOT
)@@G@@R18   @ @@@@          J         ERROR19   @^@@@@          ER        ERR$OU
)@@G@@@]@@@@$(1).       @[@@@@.     @A@@@@.         A RESERVED WORD ITEM      OV
)@@G@@@[@@@@.     @]@@@@RSVAR.      @E@@@@          SA        A0,VAR2TYPE     OW
)@@G@@  . $P SAVE THE TYPE    @F@@@@          AX,U      X10,2             . $POX
)@@G@@ SET X10 FOR GETRSV     @D@@@@          LA        A15,GETXXSW       . $POY
)@@G@@ SAVE SW    @A@@@@          SA        A15,SAVEXSW     @B@@@@          SLOZ
)@@G@@J       GETRSV            .   @E@@@@          LA        A15,SAVEXSW     PA
)@@G@@  . $P RESTORE SW       @B@@@@          SA        A15,GETXXSW       .   PB
)@@G@@@B@@@@          JN        A1,ERRORXX        .   @G@@@@          ANA,U   PC
)@@G@@  A4,1              . $P COMPUTE EXTRA WORD CNT       @E@@@@          LRPD
)@@G@@        R4,A4             . $P SAVE IT IN R4    @E@@@@          ANX,U   PE
)@@G@@  X10,2             . $P BACK UP X10      @ @@@@          J         RSVXPF
)@@G@@.     @[@@@@.     @A@@@@.         VAR       A VARIABLE      @[@@@@.     PG
)@@G@@@]@@@@$(1).       @C@@@@NONSETX                               . $H      PH
)@@G@@@E@@@@          SLJ       GETIDX            . $P GET IDX VALUE    @D@@@@PI
)@@G@@          SA        A0,IDXXVAL        . $P SAVE IT    @F@@@@          LXPJ
)@@G@@        X10,VARENT        . $P GET VAR ENTRY ADDR     @D@@@@          SLPK
)@@G@@J       GETVAR            . $P DO GETVAR  @B@@@@          JN        A1,EPL
)@@G@@RROR24        .   @]@@@@RSVX.       @C@@@@          SA        A0,VARXLENPM
)@@G@@        . $P SAVE @C@@@@          SA        A1,VARXADD        . GETVAR  PN
)@@G@@@C@@@@          SA        A2,VARXOFF        .  INFO   @B@@@@          SAPO
)@@G@@        A3,VARXTYPE       .   @C@@@@          TNE,U     A3,1            PP
)@@G@@  . $T PIC X@E@@@@          J         GETVXRTN          . $A YES,ENDVAR2PQ
)@@G@@ NO   @D@@@@          SLJ       GETNUM            . $P GETNUM     @E@@@@PR
)@@G@@          SA        A0,VARXVAL        . $P SAVE THE VALUE   @F@@@@      PS
)@@G@@    LA,U      A0,2              . $P SET AS PIC 9(10) COMP  @B@@@@      PT
)@@G@@    SA        A0,VARXTYPE       .   @F@@@@          LA,U      A0,6      PU
)@@G@@        . $P SET AS PIC 9(10) COMP  @E@@@@          SA        A0,VARXLENPV
)@@G@@        . $P LENGTH = 6       @E@@@@          LA,U      A0,VARXVAL      PW
)@@G@@  . $P ADDR OF VALUE    @D@@@@          SA        A0,VARXADD        . $PPX
)@@G@@ SAVE IT    @^@@@@          LA,U      A0,1@E@@@@          SA        A0,VPY
)@@G@@ARXOFF        . $P CHAR OFF-SET = 1 @ @@@@          J         GETVXRTN  PZ
)@@G@@@[@@@@.     @A@@@@.         VAR       IS A LITERAL    @[@@@@.     @]@@@@QA
)@@G@@VARXLIT.    @E@@@@          LA        A0,IDXIND         . $T NUMERIC OR QB
)@@G@@ALPHA @C@@@@          JZ        A0,VARXALP        . $J ALPHA@E@@@@      QC
)@@G@@    LA        A0,IDXLEN         . $P LITERAL LENGTH   @B@@@@          LAQD
)@@G@@        A1,X10            .   @E@@@@          AA,U      A1,3            QE
)@@G@@  . $P GET NUMERIC VALUE@B@@@@          LA,U      A2,1              .   QF
)@@G@@@B@@@@          LA,U      A3,2              .   @A@@@@          SA      QG
)@@G@@  A3,VARXTYPE     @F@@@@          LA,U      A10,060           . $T CHK IQH
)@@G@@F OCTAL INPUT     @C@@@@          TNE,S1    A10,0,A1          . $T IS ITQI
)@@G@@@E@@@@          J         $+3               . $A YES,OCTAL NO     @ @@@@QJ
)@@G@@          SLJ       GETNUM    @E@@@@          J         $+2             QK
)@@G@@  . $J SKIP SLJ OCTAL   @E@@@@          SLJ       OCTAL             . $PQL
)@@G@@ GET OCTAL NUM    @A@@@@          SA        A0,VARXVAL      @F@@@@      QM
)@@G@@    LA,U      A0,6              . $P SET AS PIC 9(10) COMP  @E@@@@      QN
)@@G@@    SA        A0,VARXLEN        . $P LENGTH = 6       @E@@@@          LAQO
)@@G@@,U      A0,VARXVAL        . $P ADDR OF VALUE    @D@@@@          SA      QP
)@@G@@  A0,VARXADD        . $P SAVE IT    @^@@@@          LA,U      A0,1@E@@@@QQ
)@@G@@          SA        A0,VARXOFF        . $P CHAR OFF-SET = 1 @]@@@@VARXLIQR
)@@G@@TX.   @G@@@@          LA        A0,IDXLEN         . $P COMPUTE LITERAL LQS
)@@G@@ENGTH       @ @@@@          DSL       A0,36     @^@@@@          DI,U    QT
)@@G@@  A0,6@^@@@@          TZ        A1  @^@@@@          AA,U      A0,1@B@@@@QU
)@@G@@          LR        R4,A0             .   @D@@@@          J         GETVQV
)@@G@@XRTN          . $J RETURN     @ @@@@.         ALPHA     LITERAL   @C@@@@QW
)@@G@@VARXALP.                              . $P      @C@@@@          LA      QX
)@@G@@  A0,IDXLEN         . SIMULATE@B@@@@          SA        A0,VARXLEN      QY
)@@G@@  .   @C@@@@          LA,U      A0,1              . GETVAR  @B@@@@      QZ
)@@G@@    SA        A0,VARXOFF        .   @C@@@@          LA        A0,X10    RA
)@@G@@        .  RETURNS@B@@@@          AA,U      A0,3              .   @B@@@@RB
)@@G@@          SA        A0,VARXADD        .   @B@@@@          LA,U      A0,1RC
)@@G@@              .   @B@@@@          SA        A0,VARXTYPE       .   @B@@@@RD
)@@G@@          J         VARXLITX          .   @[@@@@.     @^@@@@.         OCRE
)@@G@@TAL INPUT   @[@@@@.     @^@@@@OCTAL     +0        .   @E@@@@          ANRF
)@@G@@U,U     A2,1              . $P SET A3=A2-1      @E@@@@          LR      RG
)@@G@@  R1,A0             . $P CHAR COUNT       @E@@@@          SZ        A0  RH
)@@G@@              . $P SET INITIAL VAL  @D@@@@          LX        X1,A1     RI
)@@G@@        . $P SET X1     @D@@@@          LXI,U     X1,1              . $PRJ
)@@G@@ INDX X1    @]@@@@OCTLOP.     @D@@@@          JGD       R1,$+2          RK
)@@G@@  . $T DON ALL    @E@@@@          J         *OCTAL            . $A YES,*RL
)@@G@@OCTAL NO    @B@@@@          SZ        A2                .   @B@@@@      RM
)@@G@@    DI,U      A2,6              .   @E@@@@          EX        GETONE,A3 RN
)@@G@@        . $P GET A CHAR       @B@@@@          SSC       A1,3            RO
)@@G@@  .   @D@@@@          LDSL      A0,3              . $P VAL TO A0  @E@@@@RP
)@@G@@          AA,U      A3,1              . $P NXT CHAR POS     @F@@@@      RQ
)@@G@@    TE,U      A1,060            . $T CHK IF AN OCTAL DIGIT  @E@@@@      RR
)@@G@@    J         ERROR20           . $A YES NO,ERROR20   @D@@@@          J RS
)@@G@@        OCTLOP            . $J NXT ONE    @[@@@@.     @]@@@@GETONE.     RT
)@@G@@@B@@@@          LA,S1     A1,,X1            .   @B@@@@          LA,S2   RU
)@@G@@  A1,,X1            .   @B@@@@          LA,S3     A1,,X1            .   RV
)@@G@@@B@@@@          LA,S4     A1,,X1            .   @B@@@@          LA,S5   RW
)@@G@@  A1,,X1            .   @B@@@@          LA,S6     A1,,*X1           .   RX
)@@G@@@]@@@@$(4).       @]@@@@SAVEXSW   +0@C@@@@VARXADD   +0        . FOR PIC RY
)@@G@@X       ONLY      @]@@@@IDXXVAL   +0@C@@@@VARXLEN   +0        . FOR PIC RZ
)@@G@@X       ONLY      @C@@@@VARXOFF   +0        . FOR PIC X       ONLY      SA
)@@G@@@A@@@@VARXVAL*  +0        . FOR PIC 9 COMP@]@@@@VARSW*    +0@A@@@@VAR2TYSB
)@@G@@PE  EQUF      VARSW,,S4       @F@@@@VARXTYPE  EQUF      VARSW,,S5       SC
)@@G@@  . /, PIC X 2, PIC 9 COMP.   @A@@@@OPRSW     EQUF      VARSW,,S6       SD
)@@G@@@]@@@@VARZVAL   +0@[@@@@.     @B@@@@.         SUBROUTINE TO GET INDEX VASE
)@@G@@LUE   @[@@@@.     @A@@@@.         X10 =     PARSER PKT ADDR @[@@@@.     SF
)@@G@@@[@@@@.     @ @@@@.         SLJ       GETIDX    @[@@@@.     @#@@@@.     SG
)@@G@@    (OUT)   @D@@@@.         R4 = EXTRA WORDS FOR THE IDX IN THE PKT     SH
)@@G@@@^@@@@.         A0 = IDX VALUE@[@@@@.     @]@@@@$(1).       @C@@@@GETIDXSI
)@@G@@*   +0                          . $H      @D@@@@          SX        X10,SJ
)@@G@@IDX10         . $P SAVE X10   @D@@@@          SZ        R4              SK
)@@G@@  . $P R4 = 0     @D@@@@          TNZ       IDXENT            . $T INDEXSL
)@@G@@ED    @E@@@@          J         NOIDX             . $A YES NO,NOIDX     SM
)@@G@@@E@@@@          LA        A0,IDXIND         . $T IDX'D BY LITERAL @E@@@@SN
)@@G@@          AND,U     A0,040            . $A YES NO,IDXBVAR   @A@@@@      SO
)@@G@@    JZ        A1,IDXBVAR      @ @@@@.         INDEXED BY LITERAL  @B@@@@SP
)@@G@@.                                     .   @F@@@@          LA        A0,ISQ
)@@G@@DXLEN         . $P GET LITERAL LENGTH     @E@@@@          LA        A1,XSR
)@@G@@10            . $P LITERAL ADDR     @B@@@@          AA,U      A1,3      SS
)@@G@@        .   @D@@@@          LA,U      A2,1              . $P OFF-SET    ST
)@@G@@@C@@@@          LA,U      A3,2              . $P PIC 9@F@@@@          LASU
)@@G@@,U      A10,060           . $P CHK IF AN OCTAL NUM    @E@@@@          TNSV
)@@G@@E,S1    A10,0,A1          . $T AN LEADING 0     @E@@@@          J       SW
)@@G@@  $+3               . $A YES,$+3 NO       @E@@@@          SLJ       GETNSX
)@@G@@UM            . $P A REGULAR NUMBER @E@@@@          J         $+2       SY
)@@G@@        . $J SKIP OCTAL SLJ   @F@@@@          SLJ       OCTAL           SZ
)@@G@@  . $P GET THE OCTAL NUMBER   @B@@@@                                    TA
)@@G@@  .   @B@@@@          LA        A5,IDXLEN         .   @B@@@@          SZTB
)@@G@@        A4                .   @B@@@@          DI,U      A4,6            TC
)@@G@@  .   @B@@@@          TZ        A5                .   @B@@@@          A,TD
)@@G@@U       A4,1              .   @B@@@@          LR        R4,A4           TE
)@@G@@  .   @B@@@@          J         IDXRTN            .   @[@@@@.     @A@@@@TF
)@@G@@.         INDEXED BY A VARIABLE     @[@@@@.     @]@@@@IDXBVAR     @B@@@@TG
)@@G@@          LX        X10,IDXENT        .   @B@@@@          SZ        A0  TH
)@@G@@              .   @B@@@@          SLJ       GETVAR            .   @H@@@@TI
)@@G@@          JN        A1,ERROR21        . $E INDEX VALUE CAN'T BE EVALUATETJ
)@@G@@D     @C@@@@          TNE,U     A3,1              . $T PIC X@G@@@@      TK
)@@G@@    J         ERROR22           . $E INDEXED BY A PIC X ITEM      @B@@@@TL
)@@G@@          SLJ       GETNUM            .   @B@@@@          J         IDXRTM
)@@G@@TN            .   @A@@@@IDXRTN    LX        X10,IDX10       @A@@@@      TN
)@@G@@    JZ        A0,ERROR23      @ @@@@          J         *GETIDX   @A@@@@TO
)@@G@@NOIDX     LX        X10,IDX10       @^@@@@          SZ        A0  @ @@@@TP
)@@G@@          J         *GETIDX   @]@@@@$(4).       @]@@@@IDX10     +0@]@@@@TQ
)@@G@@$(1).       @I@@@@.         DEPENDING ON VALUE MAY BE CHANGED           TR
)@@G@@                  ADJUST R    @[@@@@.     @C@@@@ADJDPN    +0            TS
)@@G@@              . $H      @F@@@@          LA        A0,DPNSW          . $PTT
)@@G@@ CHK IF A DEP ON ITEM   @D@@@@          TE,U      A0,1              . $TTU
)@@G@@ DPNSW=1    @E@@@@          J         *ADJDPN           . $YES NO,*ADJDPTV
)@@G@@N     @E@@@@          LX        X1,VAR1ADD        . $P DPN ITEM ADDR    TW
)@@G@@@E@@@@          LA        A0,RECLINK        . $P LINK TO RCD      @G@@@@TX
)@@G@@          JZ        A0,*ADJDPN        . $J RETURN IF NO A DPN ITEM      TY
)@@G@@@D@@@@          LR,U      R1,1              . $P LOOP CTL   @D@@@@OCCLOPTZ
)@@G@@    TNZ       A0                . $T LINK =0    @E@@@@          ER      UA
)@@G@@  ERR$              . $ NO LINK TO RCD    @E@@@@          AND       A0,(UB
)@@G@@0377777)      . $T C15 OR C14       @B@@@@          LX        X4,A1     UC
)@@G@@        .   @B@@@@          AND       A0,(0400000)      .   @ @@@@      UD
)@@G@@    LA,H2     A2,C15    @E@@@@          TZ        A1,               . $TUE
)@@G@@ C15 RELATIVE     @B@@@@          LA,H2     A2,C14            .   @F@@@@UF
)@@G@@          AX        X4,A2             . $P GET OCC. ITEMS ADDR    @B@@@@UG
)@@G@@          JGD       R1,$+2            .   @B@@@@          J         GOTOUH
)@@G@@CC            .   @B@@@@          LA,H2     A0,2,X4           .   @B@@@@UI
)@@G@@          J         OCCLOP            .   @C@@@@GOTOCC    LA        A0,VUJ
)@@G@@ARSEQ         . $H      @E@@@@          TE,T1     A0,1,X4           . $PUK
)@@G@@ GET SEQ NO.      @E@@@@          ER        ERR$              . $ SEQ. NUL
)@@G@@O. NOT MATCH@B@@@@          LX        X1,X4             .   @G@@@@      UM
)@@G@@    LA,U      A0,011            . $P MAKE SURE IT IS OCC ITEMS    @B@@@@UN
)@@G@@          LA,U      A1,015            .   @B@@@@          TW        A0,VUO
)@@G@@ARTYPE        .   @E@@@@          ER        ERR$              . $ NON OCUP
)@@G@@CURS TYPE   @C@@@@.         CHK       IF DPN VALUE WITHIN RANGE   @E@@@@UQ
)@@G@@          LA,T1     A0,2,X1           . $P LOW # OCCURS     @^@@@@      UR
)@@G@@    ANA,U     A0,1@E@@@@          LA,T3     A1,2,X1           . $P HIGH US
)@@G@@# OCC       @B@@@@          TW        A0,VARXVAL        .   @B@@@@      UT
)@@G@@    J         ERROR25           .   @D@@@@          LA        A0,VARREL UU
)@@G@@        . $P COMPUTE    @B@@@@          MSI,U     A0,6              .   UV
)@@G@@@D@@@@          AA        A0,VAROFF         . NEW LENGTH    @B@@@@      UW
)@@G@@    LA        A1,VARLENG        .   @B@@@@          MSI       A1,VARXVALUX
)@@G@@        .   @B@@@@          AA        A1,A0             .   @B@@@@      UY
)@@G@@    ANA,U     A1,1              .   @B@@@@          SZ        A0        UZ
)@@G@@        .   @B@@@@          DI,U      A0,6              .   @B@@@@      VA
)@@G@@    TZ        A1                .   @C@@@@          AA,U      A0,1      VB
)@@G@@        . NEW LENG@B@@@@          LA        A1,VARSEQ         .   @B@@@@VC
)@@G@@          AA,H2     A1,TT1            .   @B@@@@          ANA,U     A1,1VD
)@@G@@              .   @B@@@@          TNZ,H2    0,A1              .   @B@@@@VE
)@@G@@          ER        ERR$              .   @B@@@@          LX,H2     X4,0VF
)@@G@@,A1           .   @E@@@@          ANA,H2    A0,2,X4           . $P - RECVG
)@@G@@ORD LENGTH  @F@@@@          SA        A0,LENGDIF        . $P SAVE THE DIVH
)@@G@@FFERENCE    @A@@@@          JZ        A0,*ADJDPN      @E@@@@          LAVI
)@@G@@,H2     A0,,X4            . $P LINE LENGTH      @B@@@@          AA      VJ
)@@G@@  A0,LENGDIF        .   @B@@@@          SA,H2     A0,,X4            .   VK
)@@G@@@B@@@@          LA,H2     A0,2,X4           .   @B@@@@          AU      VL
)@@G@@  A0,LENGDIF        .   @B@@@@          SA,H2     A1,2,X4           .   VM
)@@G@@@B@@@@          AA,U      A1,1              .   @D@@@@          TNE,H2  VN
)@@G@@  A1,,X4            . $P BT REQ'D   @B@@@@          J         *ADJDPN   VO
)@@G@@        .   @B@@@@          LX        X5,A0             .   @B@@@@      VP
)@@G@@    AX        X5,X4             .   @B@@@@          AX,U      X5,2      VQ
)@@G@@        .   @F@@@@          LR,H2     R1,0,X5           . $P GET TRANSFEVR
)@@G@@R COUNT     @B@@@@          TP        LENGDIF           .   @B@@@@      VS
)@@G@@    J         MOVELFT           .   @B@@@@          AX,H2     X5,0,X5   VT
)@@G@@        .   @B@@@@          ANX,U     X5,1              .   @]@@@@MOVELFVU
)@@G@@T     @B@@@@          LX        X6,X5             .   @B@@@@          AXVV
)@@G@@        X6,LENGDIF        .   @B@@@@          LXI,U     X5,1            VW
)@@G@@  .   @F@@@@          TN        LENGDIF           . $T MOVE RIGHT OR LEFVX
)@@G@@T     @ @@@@          LXI,U     X5,-1     @B@@@@          LXI,U     X6,1VY
)@@G@@              .   @B@@@@          TN        LENGDIF           .   @B@@@@VZ
)@@G@@          LXI,U     X6,-1             .   @B@@@@          BT        X6,,WA
)@@G@@*X5           .   @B@@@@          J         *ADJDPN           .   @[@@@@WB
)@@G@@$(1)  @]@@@@$(4).       @]@@@@LENGDIF   +0@]@@@@$(1).       @[@@@@.     WC
)@@G@@@D@@@@.         THE SUBROUTINE WILL INITIALIZE A NEW ITEM   @[@@@@.     WD
)@@G@@@D@@@@.         (IN)      X5 = ITEM ADDRESS IN NEW BUFF     @A@@@@.     WE
)@@G@@              A1 = ITEM TYPE  @D@@@@.                   A0 = STARTING CHWF
)@@G@@ARACTER POSITION  @E@@@@.                   R5 = LENGTH OF AN ITEM (IN CWG
)@@G@@HARACTERS)  @[@@@@.     @C@@@@NEWINIT   +0                          . $HWH
)@@G@@      @E@@@@          LXI,U     X5,1              . $P SET INX INCREMENTWI
)@@G@@@F@@@@          LA,S1     A5,TYP0,A1        . $P GET TYPE CHARACTER     WJ
)@@G@@@ @@@@          JGD       R5,$+1    @]@@@@INITLOOP.   @C@@@@          ANWK
)@@G@@U,U     A0,1              . $P LOOP @C@@@@          DSL       A1,36     WL
)@@G@@        . $ TO    @D@@@@          DI,U      A1,6              . $ INITIAWM
)@@G@@LIZE  @C@@@@          EX        PUT,A2            . $ THE   @C@@@@      WN
)@@G@@    AA,U      A0,1              . $ NEW   @C@@@@          JGD       R5,IWO
)@@G@@NITLOOP       . $ ITEM  @D@@@@          J         *NEWINIT          . $JWP
)@@G@@ RETURN     @]@@@@$(4).       @]@@@@TYP0.       @^@@@@          +077,,,,WQ
)@@G@@,0    @^@@@@          +05,,,,,0     @^@@@@          +060,,,,,0    @^@@@@WR
)@@G@@          +0,,,,,0      @^@@@@          +05,,,,,0     @[@@@@PUT.  @ @@@@WS
)@@G@@          SA,S1     A5,,X5    @ @@@@          SA,S2     A5,,X5    @ @@@@WT
)@@G@@          SA,S3     A5,,X5    @ @@@@          SA,S4     A5,,X5    @ @@@@WU
)@@G@@          SA,S5     A5,,X5    @ @@@@          SA,S6     A5,,*X5   @[@@@@WV
)@@G@@.     @A@@@@.         TRANSFORM ITEM FROM TOP   @[@@@@.     @E@@@@.     WW
)@@G@@    (IN)      X1 = OLD ADDR, A7 = CHAR POS R7 = LENGTH@I@@@@.           WX
)@@G@@        X2 = NEW ADDR, A8 = CHAR POS R8 = LENGTH A1 = NEW TYPE CODE     WY
)@@G@@@[@@@@.     @]@@@@$(1).       @C@@@@TOPMOVE   +0                        WZ
)@@G@@  . $H      @F@@@@          LR        R5,R8             . $P GET INITIALXA
)@@G@@IZE LENGTH  @E@@@@          LA        A0,R7             . $P GET OLD LENXB
)@@G@@GTH   @G@@@@          TG        A0,R8             . $T SEE IF (NEW-LENGTXC
)@@G@@H)>(OLD)    @E@@@@          J         TMOVE1            . $A YES NO,TMOVXD
)@@G@@E1    @[@@@@.     @G@@@@.         NEW ITEM HAS LONGER FIELD, INTIALIZE IXE
)@@G@@T BEFORE TRANSFER       @[@@@@.     @D@@@@          LX        X5,X2     XF
)@@G@@        . $P SET UP X5  @C@@@@          LA        A0,A8             .  AXG
)@@G@@0     @C@@@@          LR        R5,R8             .  R5     @G@@@@      XH
)@@G@@    SLJ       NEWINIT           . FOR INITILIZATION ROUTINE       @B@@@@XI
)@@G@@          LR        R5,R7             .   @B@@@@.         TRANSFER (R5) XJ
)@@G@@CHAR'S FROM TOP   @[@@@@.     @]@@@@TMOVE1.     @E@@@@          LXI,U   XK
)@@G@@  X1,1              . $P SET INCRMNT CNT  @C@@@@          LXI,U     X2,1XL
)@@G@@              . $       @]@@@@TMLOOP1.    @E@@@@          JGD       R5,$XM
)@@G@@+2            . $P CHAR-CNT - 1     @D@@@@          J         *TOPMOVE  XN
)@@G@@        . $J RETURN     @F@@@@          LA        A0,A7             . $PXO
)@@G@@ SET UP TO GET 1 CHAR   @C@@@@          ANA,U     A0,1              . $ XP
)@@G@@      @C@@@@          DSL       A0,36             . $       @C@@@@      XQ
)@@G@@    DI,U      A0,6              . $       @E@@@@          EX        GETOXR
)@@G@@P,A1          . $P GET 1 CHAR       @G@@@@          AA,U      A7,1      XS
)@@G@@        . $P SET UP TO STORE 1 CHAR       @C@@@@          LA        A0,AXT
)@@G@@8             . $       @C@@@@          ANA,U     A0,1              . $ XU
)@@G@@      @C@@@@          DSL       A0,36             . $       @C@@@@      XV
)@@G@@    DI,U      A0,6              . $       @E@@@@          EX        PUTOXW
)@@G@@P,A1          . $P STORE 1 CHAR     @C@@@@          AA,U      A8,1      XX
)@@G@@        . $       @E@@@@          J         TMLOOP1           . $J TRY NXY
)@@G@@XT CHAR     @]@@@@$(4).       @]@@@@GETOP.      @ @@@@          LA,S1   XZ
)@@G@@  A5,,X1    @ @@@@          LA,S2     A5,,X1    @ @@@@          LA,S3   YA
)@@G@@  A5,,X1    @ @@@@          LA,S4     A5,,X1    @ @@@@          LA,S5   YB
)@@G@@  A5,,X1    @ @@@@          LA,S6     A5,,*X1   @]@@@@PUTOP.      @ @@@@YC
)@@G@@          SA,S1     A5,,X2    @ @@@@          SA,S2     A5,,X2    @ @@@@YD
)@@G@@          SA,S3     A5,,X2    @ @@@@          SA,S4     A5,,X2    @ @@@@YE
)@@G@@          SA,S5     A5,,X2    @ @@@@          SA,S6     A5,,*X2   @]@@@@YF
)@@G@@$(1).       @[@@@@.     @E@@@@.         ROUTINE TO TRANSFORM        PIC YG
)@@G@@9 COMP TO PIC 9   @[@@@@.     @C@@@@TYPE32    +0                        YH
)@@G@@  . $H      @B@@@@          LXI,U     X1,1              .   @B@@@@      YI
)@@G@@    SZ        A9                .   @B@@@@          SZ        A10       YJ
)@@G@@        .   @B@@@@          SZ        A11               .   @B@@@@      YK
)@@G@@    JGD       R7,$+1            .   @]@@@@T32LOOP1.   @B@@@@          LAYL
)@@G@@        A0,A7             .   @B@@@@          ANA,U     A0,1            YM
)@@G@@  .   @B@@@@          AA,U      A7,1              .   @B@@@@          DSYN
)@@G@@L       A0,36             .   @B@@@@          DI,U      A0,6            YO
)@@G@@  .   @B@@@@          LDSL      A9,6              .   @B@@@@          EXYP
)@@G@@        GET32,A1          .   @B@@@@          LA        A10,A11         YQ
)@@G@@  .   @B@@@@          JGD       R7,T32LOOP1       .   @E@@@@          DIYR
)@@G@@        A9,(+10000000000) . $P SPLIT THE NUMBER @B@@@@          SZ      YS
)@@G@@  R7                .   @H@@@@          AA        A8,R8             . $PYT
)@@G@@ SET UP TO TRANSFER FROM BOTTOM     @B@@@@          ANA,U     A8,1      YU
)@@G@@        .   @B@@@@          LA        A0,A8             .   @F@@@@      YV
)@@G@@    ANA,U     A0,1              . $P COMPUTE NEW WORD ADDR  @B@@@@      YW
)@@G@@    DSL       A0,36             .   @B@@@@          DI,U      A0,6      YX
)@@G@@        .   @B@@@@          AX        X2,A0             .   @B@@@@      YY
)@@G@@    LA        A0,R8             .   @B@@@@          ANA,U     A0,10     YZ
)@@G@@        .   @B@@@@          JZ        A0,NOSPLT         .   @B@@@@      ZA
)@@G@@    JN        A0,NOSPLT         .   @B@@@@          LR,U      R8,10     ZB
)@@G@@        .   @B@@@@          LR        R7,A0             .   @]@@@@NOSPLTZC
)@@G@@.     @B@@@@          LXI,U     X2,-1             .   @]@@@@T32LOOP2.   ZD
)@@G@@@B@@@@          JGD       R8,$+2            .   @B@@@@          J       ZE
)@@G@@  T32END            .   @B@@@@          LA        A0,A8             .   ZF
)@@G@@@B@@@@          ANA,U     A0,1              .   @B@@@@          ANA,U   ZG
)@@G@@  A8,1              .   @B@@@@          DSL       A0,36             .   ZH
)@@G@@@B@@@@          DI,U      A0,6              .   @B@@@@          DSL     ZI
)@@G@@  A10,36            .   @B@@@@          DI,U      A10,10            .   ZJ
)@@G@@@B@@@@          OR,U      A11,060           .   @B@@@@          EX      ZK
)@@G@@  PUT32,A1          .   @B@@@@          J         T32LOOP2          .   ZL
)@@G@@@]@@@@T32END.     @B@@@@          TNZ       R7                .   @B@@@@ZM
)@@G@@          J         *TYPE32           .   @B@@@@          LR        R8,RZN
)@@G@@7             .   @B@@@@          SZ        R7                .   @B@@@@ZO
)@@G@@          LA        A10,A9            .   @B@@@@          J         T32LZP
)@@G@@OOP2          .   @]@@@@$(4).       @]@@@@GET32.      @B@@@@          ORZQ
)@@G@@,S1     A10,,X1           .   @B@@@@          OR,S2     A10,,X1         ZR
)@@G@@  .   @B@@@@          OR,S3     A10,,X1           .   @B@@@@          ORZS
)@@G@@,S4     A10,,X1           .   @B@@@@          OR,S5     A10,,X1         ZT
)@@G@@  .   @B@@@@          OR,S6     A10,,*X1          .   @]@@@@PUT32.      ZU
)@@G@@@B@@@@          SA,S1     A12,,*X2          .   @B@@@@          SA,S2   ZV
)@@G@@  A12,,X2           .   @B@@@@          SA,S3     A12,,X2           .   ZW
)@@G@@@B@@@@          SA,S4     A12,,X2           .   @B@@@@          SA,S5   ZX
)@@G@@  A12,,X2           .   @B@@@@          SA,S6     A12,,X2           .   ZY
)@@G@@@]@@@@$(1).       @[@@@@.     @D@@@@.         TRANSFORM ROUTINE ( CHAR MZZ
)@@G@@OVE FROM BOTTOM)  @[@@@@.     @]@@@@TYPE33.     @[@@@@.     @A@@@@.     AA
)@@G@@    TRANSFORM ITEM FROM BOTTOM@[@@@@.     @E@@@@.         (IN) X1 = OLD AB
)@@G@@ADDR, A7 = CHAR POS, R7 = LENGTH    @I@@@@.         X2 =      NEW ADDR, AC
)@@G@@A8 = CHAR POS, R8 = LENGTH,               A1 =NEW     @[@@@@.     @C@@@@AD
)@@G@@BOTMOVE   +0                          . $H      @F@@@@          LR      AE
)@@G@@  R5,R8             . $P GET INITIALIZE LENGTH  @E@@@@          LA      AF
)@@G@@  A0,R7             . $P GET OLD LENGTH   @G@@@@          TG        A0,RAG
)@@G@@8             . $T SEE IF NEW-LENGTH > OLD      @E@@@@          J       AH
)@@G@@  BMOVE1            . $A YES NO,BMOVE1    @[@@@@.     @A@@@@.         NEAI
)@@G@@W ITEM HAS LONGER FIELD @[@@@@.     @D@@@@          LX        X5,X2     AJ
)@@G@@        . $P SET UP X5  @C@@@@          LA        A0,A8             .  AAK
)@@G@@0     @C@@@@          LR        R5,R8             .  R5     @G@@@@      AL
)@@G@@    SLJ       NEWINIT           . FOR INITILIZATION ROUTINE       @B@@@@AM
)@@G@@          LR        R5,R7             .   @C@@@@.         TRANSFER (R5) AN
)@@G@@CHAR'S FROM BOTTOM      @[@@@@.     @]@@@@BMOVE1.     @B@@@@          AAAO
)@@G@@        A7,R7             .   @B@@@@          AA        A8,R8           AP
)@@G@@  .   @^@@@@          ANA,U     A7,1@B@@@@          ANA,U     A8,1      AQ
)@@G@@        .   @B@@@@          LA        A0,A7             .   @F@@@@      AR
)@@G@@    ANA,U     A0,1              . $P COMPUTE NEW WORD ADDR  @B@@@@      AS
)@@G@@    DSL       A0,36             .   @B@@@@          DI,U      A0,6      AT
)@@G@@        .   @B@@@@          AX        X1,A0             .   @B@@@@      AU
)@@G@@    LA        A0,A8             .   @F@@@@          ANA,U     A0,1      AV
)@@G@@        . $P COMPUTE NEW WORD ADDR  @B@@@@          DSL       A0,36     AW
)@@G@@        .   @B@@@@          DI,U      A0,6              .   @B@@@@      AX
)@@G@@    AX        X2,A0             .   @B@@@@          LXI,U     X1,-1     AY
)@@G@@        .   @B@@@@          LXI,U     X2,-1             .   @B@@@@      AZ
)@@G@@    JGD       R5,$+1            .   @]@@@@BMLOOP1.    @B@@@@          LABA
)@@G@@        A0,A7             .   @B@@@@          ANA,U     A0,1            BB
)@@G@@  .   @B@@@@          DSL       A0,36             .   @B@@@@          DIBC
)@@G@@,U      A0,6              .   @B@@@@          EX        GETBOT,A1       BD
)@@G@@  .   @B@@@@          ANA,U     A7,1              .   @B@@@@          LABE
)@@G@@        A0,A8             .   @B@@@@          ANA,U     A0,1            BF
)@@G@@  .   @B@@@@          DSL       A0,36             .   @B@@@@          DIBG
)@@G@@,U      A0,6              .   @B@@@@          EX        PUTBOT,A1       BH
)@@G@@  .   @B@@@@          ANA,U     A8,1              .   @B@@@@          JGBI
)@@G@@D       R5,BMLOOP1        .   @B@@@@          J         *BOTMOVE        BJ
)@@G@@  .   @]@@@@$(4).       @]@@@@GETBOT.     @ @@@@          LA,S1     A5,,BK
)@@G@@*X1   @ @@@@          LA,S2     A5,,X1    @ @@@@          LA,S3     A5,,BL
)@@G@@X1    @ @@@@          LA,S4     A5,,X1    @ @@@@          LA,S5     A5,,BM
)@@G@@X1    @ @@@@          LA,S6     A5,,X1    @]@@@@PUTBOT.     @ @@@@      BN
)@@G@@    SA,S1     A5,,*X2   @ @@@@          SA,S2     A5,,X2    @ @@@@      BO
)@@G@@    SA,S3     A5,,X2    @ @@@@          SA,S4     A5,,X2    @ @@@@      BP
)@@G@@    SA,S5     A5,,X2    @ @@@@          SA,S6     A5,,X2    @[@@@@.     BQ
)@@G@@@A@@@@.         ERROR PRINTING SECTION    @A@@@@.                   STATBR
)@@G@@US: 24 - 47 @[@@@@.     @]@@@@$(1).       @]@@@@ERROR1.     @^@@@@      BS
)@@G@@    LA,U      A0,1@ @@@@          J         PRTIT     @]@@@@ERROR2.     BT
)@@G@@@^@@@@          LA,U      A0,2@ @@@@          J         PRTIT     @^@@@@BU
)@@G@@ERROR3    LA,U      A0,3@ @@@@          J         PRTIT     @^@@@@ERROR4BV
)@@G@@    LA,U      A0,4@ @@@@          J         PRTIT     @]@@@@ERROR5.     BW
)@@G@@@^@@@@          LA,U      A0,5@ @@@@          J         PRTIT     @]@@@@BX
)@@G@@ERROR6    +0@B@@@@          LA        A0,(PF 1,ML6,ERMSG6)  @ @@@@      BY
)@@G@@    ER        PRINT$    @ @@@@          J         *ERROR6   @]@@@@ERROR7BZ
)@@G@@.     @^@@@@          LA,U      A0,7@ @@@@          J         PRTIT     CA
)@@G@@@[@@@@.     @[@@@@.     @ @@@@.         RESERVED ERROR MSG  @[@@@@.     CB
)@@G@@@]@@@@ERROR8.     @B@@@@          LA,U      A0,8              .   @ @@@@CC
)@@G@@          J         PRTIT     @]@@@@ERROR9.     @B@@@@          LA,U    CD
)@@G@@  A0,9              .   @ @@@@          J         PRTIT     @]@@@@ERROR1CE
)@@G@@0.    @ @@@@          LA,U      A0,10     @ @@@@          J         PRTICF
)@@G@@T     @]@@@@ERROR11.    @B@@@@          LA,U      A0,11             .   CG
)@@G@@@ @@@@          J         PRTIT     @]@@@@ERROR12.    @B@@@@          LACH
)@@G@@,U      A0,12             .   @ @@@@          J         PRTIT     @]@@@@CI
)@@G@@ERRORXX.    @^@@@@          LSSL      A1,1@ @@@@          SSL       A1,1CJ
)@@G@@9     @A@@@@          J         RSVERR,A1       @]@@@@RSVERR.     @^@@@@CK
)@@G@@          ER        ERR$@ @@@@          J         ERROR9    @ @@@@      CL
)@@G@@    J         ERROR10   @ @@@@          J         ERROR11   @ @@@@      CM
)@@G@@    J         ERROR12   @ @@@@          J         *SAVEX11  @]@@@@ERROR1CN
)@@G@@3.    @ @@@@          LA,U      A0,13     @ @@@@          J         PRTICO
)@@G@@T     @]@@@@ERROR14.    @ @@@@          LA,U      A0,14     @ @@@@      CP
)@@G@@    J         PRTIT     @]@@@@ERROR15.    @ @@@@          LA,U      A0,1CQ
)@@G@@5     @ @@@@          J         PRTIT     @]@@@@ERROR16   +0@C@@@@      CR
)@@G@@    LA        A0, (PF 1,ML16,ERMSG16)     @ @@@@          ER        PRINCS
)@@G@@T$    @ @@@@          J         *ERROR16  @]@@@@ERROR17.    @ @@@@      CT
)@@G@@    LA,U      A0,17     @ @@@@          J         PRTIT     @]@@@@ERROR1CU
)@@G@@8.    @ @@@@          LA,U      A0,18     @ @@@@          J         PRTICV
)@@G@@T     @]@@@@ERROR19.    @ @@@@          LA,U      A0,19     @ @@@@      CW
)@@G@@    J         PRTIT     @]@@@@ERROR20.    @ @@@@          LA,U      A0,2CX
)@@G@@0     @ @@@@          J         PRTIT     @]@@@@ERROR21.    @ @@@@      CY
)@@G@@    LA,U      A0,21     @ @@@@          J         PRTIT     @]@@@@ERROR2CZ
)@@G@@2.    @ @@@@          LA,U      A0,22     @D@@@@          J         PRTIDA
)@@G@@T             . $J RETURN     @ @@@@ERROR23   LA,U      A0,23     @ @@@@DB
)@@G@@          J         PRTIT     @]@@@@ERROR24.    @B@@@@          SSL     DC
)@@G@@  A1,18             .   @A@@@@          TNE       A1,(+0400002)   @ @@@@DD
)@@G@@          J         ERROR23   @ @@@@          LA,U      A0,24     @ @@@@DE
)@@G@@          J         PRTIT     @]@@@@ERROR25.    @ @@@@          LA,U    DF
)@@G@@  A0,25     @ @@@@          J         PRTIT     @]@@@@ERROR26.    @ @@@@DG
)@@G@@          LA,U      A0,26     @ @@@@          J         PRTIT     @]@@@@DH
)@@G@@PRTIT.      @C@@@@          SZ        RDALN             . $P      @A@@@@DI
)@@G@@          LA        A1,STATCODE     @A@@@@          SA        A1,STATUS DJ
)@@G@@      @A@@@@          LA        A1,FATCODE      @ @@@@          SA      DK
)@@G@@  A1,FATAL  @A@@@@          LX        X2,MSGADDR      @E@@@@          LADL
)@@G@@        A0,,X2            . $P GET PRINT PKT    @E@@@@          TZ      DM
)@@G@@  PERFSW            . $T PERFORM MODE     @C@@@@          TZ        FATADN
)@@G@@L             . $T FATAL@ @@@@          ER        PRINT$    @E@@@@      DO
)@@G@@    TNZ       GETXXSW           . $T CALLED BY NOT LET@ @@@@          J DP
)@@G@@        *SAVEX11  @B@@@@          LX        X11,GETVX11       .   @ @@@@DQ
)@@G@@          SZ        GETVX11   @ @@@@          J         0,X11     @]@@@@DR
)@@G@@$(4).       @C@@@@ERMSG1    'AN OLD ITEM CAN NOT BE MODIFIED'     @ @@@@DS
)@@G@@ML1       EQU       $-ERMSG1  @E@@@@ERMSG2    'SYMBOL FOR ARRAY IS ALREADT
)@@G@@DY DEFINED - IGNORED'   @ @@@@ML2       EQU       $-ERMSG2  @C@@@@ERMSG3DU
)@@G@@    'ARITHMATIC OPR ERROR - OVERFLOW'     @ @@@@ML3       EQU       $-ERDV
)@@G@@MSG3  @C@@@@ERMSG4    'ARITHMATIC OPR ERROR - DIVIDED BY 0 '@ @@@@ML4   DW
)@@G@@    EQU       $-ERMSG4  @D@@@@ERMSG5    'INCOMPATABLE VARIABLE TYPES IN DX
)@@G@@AN EQUATE'  @ @@@@ML5       EQU       $-ERMSG5  @C@@@@ERMSG6    'WARNINGDY
)@@G@@: SET PTR IS SET TO ZERO(0)'  @ @@@@ML6       EQU       $-ERMSG6  @C@@@@DZ
)@@G@@ERMSG7    'INVALID SET LINKAGE FOR THE SET'     @ @@@@ML7       EQU     EA
)@@G@@  $-ERMSG7  @A@@@@ERMSG8    'ILLEGAL ITEM TO MODIFY'  @ @@@@ML8       EQEB
)@@G@@U       $-ERMSG8  @E@@@@ERMSG10   'NOT A RECORD NAME OR LINE # CAN NOT BEC
)@@G@@E EVALUATED'@A@@@@ML10      EQU       $-ERMSG10       @C@@@@ERMSG11   'LED
)@@G@@INE NUMBER EXCEEDS MAX. OR 0'       @A@@@@ML11      EQU       $-ERMSG11 EE
)@@G@@      @C@@@@ERMSG12   'RECORD HAS NO MANUAL CONTROL WORD'   @A@@@@ML12  EF
)@@G@@    EQU       $-ERMSG12       @E@@@@ERMSG13   'CURRENT OF THE RECORD NO EG
)@@G@@LONGER IN D$FILE'       @A@@@@ML13      EQU       $-ERMSG13       @A@@@@EH
)@@G@@ERMSG14   'UNDEFINED SET NAME'      @A@@@@ML14      EQU       $-ERMSG14 EI
)@@G@@      @A@@@@ERMSG15   'UNDEFINED RECORD NAME'   @A@@@@ML15      EQU     EJ
)@@G@@  $-ERMSG15       @D@@@@ERMSG16   'WARNING - SET POINTER NOT EXIT OR ZEREK
)@@G@@O'    @A@@@@ML16      EQU       $-ERMSG16       @B@@@@ERMSG17   'NO CURREL
)@@G@@ENT OF THE RECORD'.     @A@@@@ML17      EQU       $-ERMSG17       @E@@@@EM
)@@G@@ERMSG18   'RECORD NOT PARTICIPATING IN THE MANUAL SET'      @A@@@@ML18  EN
)@@G@@    EQU       $-ERMSG18       @C@@@@ERMSG19   'RECORD AND SET ARE NOT REEO
)@@G@@LATED'      @A@@@@ML19      EQU       $-ERMSG19       @B@@@@ERMSG20   'AEP
)@@G@@ BAD OCTAL NUMBER ENTERED'    @A@@@@ML20      EQU       $-ERMSG20       EQ
)@@G@@@C@@@@ERMSG21   'INDEX VALUE CAN NOT BE EVALUATED'    @A@@@@ML21      EQER
)@@G@@U       $-ERMSG21       @B@@@@ERMSG22   'PIC X ITEM USED AS AN INDEX'   ES
)@@G@@@A@@@@ML22      EQU       $-ERMSG22       @C@@@@ERMSG23   'AN ITEM IS INET
)@@G@@CORRECTLY INDEXED'      @A@@@@ML23      EQU       $-ERMSG23       @C@@@@EU
)@@G@@ERMSG24   'UNDEFINED ITEM OR NO CURRENT VALUE'  @A@@@@ML24      EQU     EV
)@@G@@  $-ERMSG24       @C@@@@ERMSG25   'DEPENDING ON VALUE OUT OF RANGE'     EW
)@@G@@@A@@@@ML25      EQU       $-ERMSG25       @C@@@@ERMSG26   'RECORD LENGTHEX
)@@G@@ CAN NOT BE CHANGED'    @A@@@@ML26      EQU       $-ERMSG26       @]@@@@EY
)@@G@@PRTBL.      @A@@@@STATCODE  EQUF      PRTBL-1,A0,T1   @A@@@@FATCODE   EQEZ
)@@G@@UF      PRTBL-1,A0,S3   @A@@@@MSGADDR   EQUF      PRTBL-1,A0,H2   @ @@@@FA
)@@G@@TBL       FORM      12,6,18   @C@@@@          TBL       24,1,(PF 1,ML1,EFB
)@@G@@RMSG1)      @C@@@@          TBL       25,0,(PF 1,ML2,ERMSG2)      @C@@@@FC
)@@G@@          TBL       26,1,(PF 1,ML3,ERMSG3)      @C@@@@          TBL     FD
)@@G@@  27,1,(PF 1,ML4,ERMSG4)      @C@@@@          TBL       28,1,(PF 1,ML5,EFE
)@@G@@RMSG5)      @C@@@@          TBL       0,0,(PF 1,ML6,ERMSG6)       @C@@@@FF
)@@G@@          TBL       30,1,(PF 1,ML7,ERMSG7)      @C@@@@          TBL     FG
)@@G@@  31,1,(PF 1,ML8,ERMSG8)      @C@@@@          TBL       32,1,(PF 1,ML24,FH
)@@G@@ERMSG24)    @C@@@@          TBL       33,1,(PF 1,ML10,ERMSG10)    @C@@@@FI
)@@G@@          TBL       34,1,(PF 1,ML11,ERMSG11)    @C@@@@          TBL     FJ
)@@G@@  35,1,(PF 1,ML12,ERMSG12)    @C@@@@          TBL       36,1,(PF 1,ML13,FK
)@@G@@ERMSG13)    @C@@@@          TBL       37,1,(PF 1,ML14,ERMSG14)    @C@@@@FL
)@@G@@          TBL       38,1,(PF 1,ML15,ERMSG15)    @C@@@@          TBL     FM
)@@G@@  0,0,(PF 1,ML16,ERMSG16)     @C@@@@          TBL       40,1,(PF 1,ML17,FN
)@@G@@ERMSG17)    @C@@@@          TBL       41,0,(PF 1,ML18,ERMSG18)    @C@@@@FO
)@@G@@          TBL       42,1,(PF 1,ML19,ERMSG19)    @C@@@@          TBL     FP
)@@G@@  43,1,(PF 1,ML20,ERMSG20)    @C@@@@          TBL       44,1,(PF 1,ML21,FQ
)@@G@@ERMSG21)    @C@@@@          TBL       45,1,(PF 1,ML22,ERMSG22)    @C@@@@FR
)@@G@@          TBL       46,1,(PF 1,ML23,ERMSG23)    @C@@@@          TBL     FS
)@@G@@  32,1,(PF 1,ML24,ERMSG24)    @C@@@@          TBL       47,1,(PF 1,ML25,FT
)@@G@@ERMSG25)    @C@@@@          TBL       48,1,(PF 1,ML26,ERMSG26)    @#@@@@FU
)@@G@@          END     ___@@@ERROR21.    @ @@@@          LA,U      A0,21     FV
)@@G@@@ @@@@          J         PRTIT     @]@@@@ERROR2*[@@@@*SDFF*@[@@@@.     FW
)@@G@@@C@@@@.         GET RESERVED WORD VALUE (GETRSV)      @[@@@@.     @A@@@@FX
)@@G@@.     INTERFACE:    SLJ   GETRSV    @[@@@@.     @H@@@@.     INPUT:      FY
)@@G@@  X10 = ADDR. OF RESERVED WORD ENTRY WITHIN A PKT(PARSE)    @[@@@@.     FZ
)@@G@@@C@@@@.     OUTPUT:       A0  = CHARACTER LENGTH      @E@@@@.           GA
)@@G@@        A1  = ADDR. OF THE ITEM OR ERROR CODE   @D@@@@.                 GB
)@@G@@  A2  = CHARACTER OFFSET (1 - 6)    @G@@@@.                   A3  = TYPEGC
)@@G@@          1 PIC X, 2 PIC 9, 3 PIC 9 COMP. @F@@@@.                   A4  GD
)@@G@@= LENGTH(WORDS) OF THE ENTRY IN THE PKT   @A@@@@.                   X10 GE
)@@G@@=(UNCHANGED)@^@@@@.     ERROR CONDITIONS: @[@@@@.     @H@@@@.           GF
)@@G@@        BIT 35 OF A1 WILL BE SET AND H1 OF A1 WILL BE SET TO:     @[@@@@GG
)@@G@@.     @C@@@@.                        1. VALUE NOT IN CORE   @H@@@@.     GH
)@@G@@                   2. NOT A RECORD NAME OR LINE # CAN'T BE EVALUATED    GI
)@@G@@@D@@@@.                        3. LINE # EXCEEDS MAX. OR 0  @G@@@@.     GJ
)@@G@@                   4. NO MAN-CTL WORD IN THE RECORD SPECIFIED     @[@@@@GK
)@@G@@.     @A@@@@.     NOTE:  RDA MAY BE DESTROIED   @[@@@@.     @#@@@@      GL
)@@G@@    AXR$    @#@@@@$(4)      LIT     @]@@@@$(1).       @C@@@@GETRSV*   +0GM
)@@G@@                          . $H      @[@@@@.     @ @@@@IND1      EQUF    GN
)@@G@@  0,X10,S4  @ @@@@RSVADD    EQUF      0,X10,H1  @ @@@@IND2      EQUF    GO
)@@G@@  1,X10,S1  @ @@@@VARADD    EQUF      1,X10,H1  @ @@@@IDXADD    EQUF    GP
)@@G@@  1,X10,H2  @ @@@@IND3      EQUF      1,X10,S4  @[@@@@.     @E@@@@      GQ
)@@G@@    SZ        STATUS            . $P RESET STATUS     @D@@@@          LAGR
)@@G@@,U      A0,044            . $T RSV IND    @F@@@@          TE        A0,IGS
)@@G@@ND1           . $T MAKE SURE A RSV PKT    @E@@@@          ER        ERR$GT
)@@G@@              . $  INTERFACE ERROR  @B@@@@          LA,U      A0,X1     GU
)@@G@@        .   @C@@@@          LXI,U     A0,1              . $P SAVE @E@@@@GV
)@@G@@          LA        A1,(1,SAVEXS)     .        X1 - X11     @B@@@@      GW
)@@G@@    LR,U      R1,11             .   @B@@@@          BT        A1,,*A0   GX
)@@G@@        .   @[@@@@.     @F@@@@          LX        X1,RSVADD         . $PGY
)@@G@@ GET RSVD WORD ENTRY    @D@@@@          LA,U      A0,025            . $PGZ
)@@G@@ RSVD TYPE  @F@@@@          TE,S4     A0,,X1            . $T IS IT A RIGHA
)@@G@@HT TYPE     @E@@@@          ER        ERR$              . $  PARSER ERROHB
)@@G@@R     @E@@@@          LA,T1     A0,1,X1           . $P GET RSVD CODE    HC
)@@G@@@D@@@@          SA        A0,RSVCODE        . $P SAVE IT    @E@@@@      HD
)@@G@@    LA        A0,IND3           . $P LITERAL TYPE     @B@@@@          LXHE
)@@G@@        X1,VARADD         .   @D@@@@          TZ        X1              HF
)@@G@@  . $T LITERAL #  @E@@@@          LA,S4     A0,,X1            . $P GET VHG
)@@G@@AR TYPE     @E@@@@          SA        A0,OFTYPE         . $P SAVE OF-TYPHH
)@@G@@E     @E@@@@          LA,T1     A0,TYPEWD         . $P GET TYPE COMB    HI
)@@G@@@B@@@@          LX        X1,(1,RSVLIST-1)  .   @E@@@@          LR      HJ
)@@G@@  R1,RSVCNT         . $W SEARCH FOR MATCH @B@@@@          SE,T1     A0,1HK
)@@G@@,*X1          .   @D@@@@          J         ERROR2            . $J ERRORHL
)@@G@@ 2    @E@@@@          LA        A0,,X1            . $P GET LIST ENTRY   HM
)@@G@@@D@@@@          SA        A0,TYPEWD         . $P SAVE IT    @B@@@@      HN
)@@G@@    SLJ       EVALUE            .   @G@@@@          SA        A0,SEQLN  HO
)@@G@@        . $P SAVE SEQ NO. OR LINE #       @E@@@@          TNZ       RDASHP
)@@G@@W             . $T REF'D LINE NO.   @F@@@@          J         CURCD     HQ
)@@G@@        . $A YES NO,CURRENT RECORD  @E@@@@          JZ        A0,ERROR3 HR
)@@G@@        . $J REF LINE 0       @B@@@@          SZ        RDALN           HS
)@@G@@  .   @E@@@@          LA        A0,RECNMC         . $P GET MAX. LINE CNTHT
)@@G@@@D@@@@          TLE       A0,SEQLN          . $T LINE # OK  @B@@@@      HU
)@@G@@    J         ERROR3            .   @B@@@@          LA        A0,SEQLN  HV
)@@G@@        .   @B@@@@          SA        A0,RMRPKT         .   @B@@@@      HW
)@@G@@    LX,U      X10,RMRPKT        .   @B@@@@          LMJ       X11,TF$RMRHX
)@@G@@        .   @E@@@@          TZ,T1     RMRPKT+2          . $T STATUS = 0 HY
)@@G@@      @B@@@@          ER        ERR$              .   @E@@@@          LAHZ
)@@G@@,H2     A0,RMRPKT+2       . $P GET RECORD LENGTH@D@@@@          SA      IA
)@@G@@  A0,RDA            . $P SAVE IT    @B@@@@          LX,U      X1,RDA    IB
)@@G@@        .   @B@@@@          J         GOTRCD            .   @[@@@@.     IC
)@@G@@@]@@@@CURCD.      @D@@@@          AA,H2     A0,TT1            . $T TT1 EID
)@@G@@NTRY  @B@@@@          ANA,U     A0,1              .   @E@@@@          TNIE
)@@G@@Z,T1    0,A0              . $T A RECORD NAME    @B@@@@          ER      IF
)@@G@@  ERR$              .   @E@@@@          TNZ,H2    0,A0              . $TIG
)@@G@@ BUFFER IN CORE   @B@@@@          J         ERROR1            .   @E@@@@IH
)@@G@@          LX,H2     X1,,A0            . $P GET BUFFER ADDR  @]@@@@GOTRCDII
)@@G@@.     @B@@@@          LA        A0,RSVCODE        .   @A@@@@          J IJ
)@@G@@        JUMPTBL-1,A0    @[@@@@.     @]@@@@JUMPTBL.    @ @@@@          J IK
)@@G@@        GETRNAME  @ @@@@          J         GETDBP    @ @@@@          J IL
)@@G@@        GETHDR    @ @@@@          J         GETMCTL   @ @@@@          J IM
)@@G@@        GETRCODE  @[@@@@.     @[@@@@.     @[@@@@.     @]@@@@GETRCODE.   IN
)@@G@@@ @@@@          LA        A1,X1     @ @@@@          AA        A1,DSPSW  IO
)@@G@@@^@@@@          LA,U      A0,2@^@@@@          LA,U      A2,1@^@@@@      IP
)@@G@@    LA,U      A3,3@^@@@@          J         GRTN@[@@@@.     @[@@@@.     IQ
)@@G@@@[@@@@.     @]@@@@GETDBP.     @ @@@@          LA        A1,X1     @ @@@@IR
)@@G@@          AA        A1,DSPSW  @^@@@@GOTMTL    LA,U      A0,6@^@@@@      IS
)@@G@@    LA,U      A2,1@^@@@@          LA,U      A3,3@^@@@@          J       IT
)@@G@@  GRTN@[@@@@.     @[@@@@.     @[@@@@.     @]@@@@GETHDR.     @^@@@@      IU
)@@G@@    LA,U      A0,1@ @@@@          TE        A0,MODEX  @ @@@@          J IV
)@@G@@        NEWOK1    @ @@@@          LA,H2     A0,2,X1   @^@@@@          A,IW
)@@G@@U       A0,1@ @@@@          TNE,H2    A0,,X1    @ @@@@          J       IX
)@@G@@  NEWOK1    @F@@@@          AX,H2     X1,2,X1           . $P SKIP OVER NIY
)@@G@@EW RECORD   @]@@@@NEWOK1.     @ @@@@          J         GETDBP    @[@@@@IZ
)@@G@@.     @[@@@@.     @[@@@@.     @]@@@@GETMCTL.    @E@@@@          LX,H2   JA
)@@G@@  X2,C1             . $T USE OLD C1       @B@@@@          LA,U      A2,1JB
)@@G@@              .   @D@@@@          TE        A2,MODEX          . $T USE OJC
)@@G@@LD    @D@@@@          LX,H2     X2,C9             . $A YES NO,LX  @B@@@@JD
)@@G@@          TNZ       X2                .   @B@@@@          ER        ERR$JE
)@@G@@              .   @E@@@@          LA,T1     A0,2,X1           . $T GET RJF
)@@G@@ECORD CODE  @]@@@@GETMLOP.    @D@@@@          TNE,T1    A0,,X2          JG
)@@G@@  . $T FOUND IT   @ @@@@          J         GOTM1     @E@@@@          TNJH
)@@G@@Z,T3    0,X2              . $T END OF TBL       @B@@@@          ER      JI
)@@G@@  ERR$              .   @E@@@@          AX,T3     X2,0,X2           . $PJJ
)@@G@@ GET NXT ENTRY    @B@@@@          J         GETMLOP           .   @[@@@@JK
)@@G@@.     @[@@@@.     @[@@@@.     @]@@@@GOTM1.      @H@@@@          AX,S4   JL
)@@G@@  X2,0,X2           . $P GET ENTRY ADDR FOR MCTL IN C1(C9)  @E@@@@      JM
)@@G@@    TNZ,S2    1,X2              . $T ANY MAN CTL      @ @@@@          J JN
)@@G@@        ERROR4    @F@@@@          LA,S6     A1,1,X2           . $P GET MJO
)@@G@@CTL DSP IN X3     @B@@@@          LA,U      A0,1              .   @E@@@@JP
)@@G@@          TE        A0,MODEX          . $T OLD RECORD       @B@@@@      JQ
)@@G@@    J         NEWOK             .   @E@@@@          LA,H2     A0,2,X1   JR
)@@G@@        . $P RECORD LENGTH    @B@@@@          A,U       A0,1            JS
)@@G@@  .   @D@@@@          TNE,H2    A0,,X1            . $T ART'ED     @B@@@@JT
)@@G@@          J         NEWOK             .   @F@@@@          AX,H2     X1,2JU
)@@G@@,X1           . $P SKIP OVER NEW RECORD   @]@@@@NEWOK.      @E@@@@      JV
)@@G@@    AA,U      A1,2              . $P SKIP 2 WORDS     @B@@@@          AAJW
)@@G@@        A1,X1             .   @B@@@@          J         GOTMTL          JX
)@@G@@  .   @[@@@@.     @[@@@@.     @[@@@@.     @]@@@@GETRNAME.   @C@@@@      JY
)@@G@@    TNZ       1,X1              . $T DBP=0@E@@@@          J         NONAJZ
)@@G@@ME            . $A YES,NONAME NO    @E@@@@          LA,T1     A0,2,X1   KA
)@@G@@        . $P GET R CODE       @E@@@@          TNZ,H2    C8              KB
)@@G@@  . $T C8 IN CORE       @B@@@@          ER        ERR$              .   KC
)@@G@@@E@@@@          LX,H2     X2,C8             . $T GET C8 ADDR      @E@@@@KD
)@@G@@          AX,U      X2,28             . $P SKIP SCRATCH PAD @]@@@@GETRLOKE
)@@G@@P.    @D@@@@          TNE,T1    A0,,X2            . $T FOUND IT   @E@@@@KF
)@@G@@          J         NXTRNME           . $A YES,NXTRNAME NO  @D@@@@      KG
)@@G@@    TNZ,T3    0,X2              . $T END OF C8  @C@@@@          ER      KH
)@@G@@  ERR$              . $       @D@@@@          AX,T3     X2,0,X2         KI
)@@G@@  . $P NXT ENTRY  @ @@@@          J         GETRLOP   @[@@@@.     @]@@@@KJ
)@@G@@NXTRNME.    @B@@@@          LA        A1,X2             .   @F@@@@      KK
)@@G@@    AA,U      A1,1              . $P GET RECORD NAME ADDR   @]@@@@NONME1KL
)@@G@@.     @B@@@@          LA,U      A0,30             .   @^@@@@          LAKM
)@@G@@,U      A2,1@^@@@@          LA,U      A3,1@^@@@@          J         GRTNKN
)@@G@@@[@@@@.     @]@@@@NONAME.     @B@@@@          LA,U      A1,BLKS         KO
)@@G@@  .   @ @@@@          J         NONME1    @[@@@@.     @ @@@@.         EVKP
)@@G@@ALUATE  PARAM     @[@@@@.     @C@@@@EVALUE    +0                        KQ
)@@G@@  . $H      @E@@@@          LA        A0,EVASW          . $P GET EVA SW KR
)@@G@@      @E@@@@          TE,U      A0,2              . $T RECORD NAME      KS
)@@G@@@E@@@@          J         GETPAR            . $A YES NO,GETPAR    @F@@@@KT
)@@G@@          LX        X1,VARADD         . $P GET RECORD NAME ENTRY  @E@@@@KU
)@@G@@          LA,T1     A0,1,X1           . $P GET SEQ. NO      @F@@@@      KV
)@@G@@    LA,U      A4,2              . $P SET LENGTH OF ENTRY    @D@@@@      KW
)@@G@@    LA,S3     A2,,X1            . $P GET MODE   @D@@@@EVARTN    SA      KX
)@@G@@  A2,MODEX         .  $P SET MODE   @A@@@@          SA        A4,SAVEA4 KY
)@@G@@      @ @@@@          J         *EVALUE   @[@@@@.     @]@@@@GETPAR.     KZ
)@@G@@@G@@@@          ANX,U     X10,1             . $P RESET X10 FOR GETVARX RLA
)@@G@@TN    @E@@@@          LX,U      X5,$+3            . $P GET RETURN ADDR  LB
)@@G@@@G@@@@          SX        X5,GETVX11        . $P SAVE IT FOR GETVARX RTNLC
)@@G@@      @B@@@@          SLJ       GETVARX           .   @D@@@@          TZLD
)@@G@@        STATUS            . $T STATUS OK  @E@@@@          J         ERROLE
)@@G@@R5            . $A YES NO,ERROR5    @B@@@@          LA,U      A0,2      LF
)@@G@@        .   @E@@@@          TE,S5     A0,VARSW          . $T PIC 9 COMP LG
)@@G@@      @B@@@@          J         ERROR2            .   @B@@@@          LALH
)@@G@@        A0,VARXVAL        .   @B@@@@          LA,U      A4,2            LI
)@@G@@  .   @B@@@@          AA        A4,R4             .   @E@@@@          LALJ
)@@G@@,U      A2,1             .  $P SET MODE = OLD   @D@@@@          J       LK
)@@G@@  EVARTN            . $J RETURN     @]@@@@$(4).       @C@@@@BLKS      ' LL
)@@G@@                            '       @]@@@@$(1).       @]@@@@$(1).       LM
)@@G@@@^@@@@ERROR1    LA,U      A1,1@^@@@@          J         ERTN@^@@@@ERROR2LN
)@@G@@    LA,U      A1,2@^@@@@          J         ERTN@^@@@@ERROR3    LA,U    LO
)@@G@@  A1,3@^@@@@          J         ERTN@^@@@@ERROR4    LA,U      A1,4@^@@@@LP
)@@G@@          J         ERTN@^@@@@ERROR5    LA,U      A1,5@^@@@@          J LQ
)@@G@@        ERTN@[@@@@.     @]@@@@ERTN.       @ @@@@          LSSL      A1,1LR
)@@G@@8     @B@@@@          OR        A1,(0400000000000)    @ @@@@          LALS
)@@G@@        A1,A2     @]@@@@GRTN.       @ @@@@          DS        A0,DSA0   LT
)@@G@@@A@@@@          LA        A0,(1,X1)       @A@@@@          LA        A1,(LU
)@@G@@1,SAVEXS)   @ @@@@          LR,U      R1,11     @ @@@@          BT      LV
)@@G@@  A0,,*A1   @ @@@@          DL        A0,DSA0   @A@@@@          LA      LW
)@@G@@  A4,SAVEA4       @ @@@@          J         *GETRSV   @]@@@@$(4).       LX
)@@G@@@]@@@@SAVEA4    +0@]@@@@TYPEWD    +0@A@@@@RSVCODE   EQUF      TYPEWD,,S1LY
)@@G@@      @A@@@@OFTYPE    EQUF      TYPEWD,,S2      @A@@@@EVASW     EQUF    LZ
)@@G@@  TYPEWD,,S3      @A@@@@RDASW     EQUF      TYPEWD,,S4      @A@@@@DSPSW MA
)@@G@@    EQUF      TYPEWD,,S5      @]@@@@RSVLIST.    @E@@@@          +1,040,0MB
)@@G@@,1,2,0              . RECORD-NAME OF N    @E@@@@          +1,7,1,1,2,0  MC
)@@G@@              . RECORD-NAME OF X(N) @E@@@@          +1,016,1,1,2,0      MD
)@@G@@        . RECORD-NAME OF X    @C@@@@          +2,040,0,1,1,0            ME
)@@G@@  . DBP OF N@E@@@@          +2,2,2,0,1,0                . DBP OF RECORD-MF
)@@G@@NAME  @D@@@@          +2,7,1,1,1,0                . DBP OF X(N)   @C@@@@MG
)@@G@@          +2,016,1,1,1,0              . DBP OF X@F@@@@          +3,2,2,0MH
)@@G@@,2,0                . HEADER OF RECORD-NAME     @F@@@@          +4,2,2,0MI
)@@G@@,3,0                . MAN-CTL OF RECORD-NAME    @E@@@@          +5,040,0MJ
)@@G@@,1,2,0              . RECORD-CODE OF N    @G@@@@          +5,2,2,0,2,0  MK
)@@G@@              . RECORD-CODE OF RECORD-NAME      @E@@@@          +5,7,1,1ML
)@@G@@,2,0                . RECORD-CODE OF X(N) @E@@@@          +5,016,1,1,2,0MM
)@@G@@              . RECORD-CODE OF X    @ @@@@RSVCNT    +RSVCNT-RSVLIST     MN
)@@G@@@]@@@@$(4).       @^@@@@SAVEXS    RES       11  @^@@@@DSA0      RES     MO
)@@G@@  2   @^@@@@MODEX     RES       1   @]@@@@RMRPKT    +0@#@@@@          +RMP
)@@G@@DA+1  @]@@@@          +0@]@@@@SEQLN     +0@#@@@@          END     ___EWOMQ
)@@G@@K             .   @F@@@@          AX,H2     X1,2,X1           . $P SKIP MR
)@@G@@*[@@@@*SDFF*@#@@@@          AXR$    @#@@@@$(4)      LIT.    @]@@@@$(1). MS
)@@G@@      @ @@@@          SETMIN    0100000   @C@@@@MAIN.                   MT
)@@G@@              . $H      @[@@@@.     @G@@@@.         THIS IS THE MAIN CONMU
)@@G@@TROL PROGRAM OF THE BELL LABS DATA BASE   @C@@@@.              REORGANIZMV
)@@G@@ATION EDITING SYSTEM.   @[@@@@.     @E@@@@.         THIS PROGRAM SHOULD MW
)@@G@@BE EXECUTED AS A PROCESSOR:   @[@@@@.     @C@@@@.                   @REOMX
)@@G@@RGED.ED   D$FILE-NAME.  @[@@@@.     @E@@@@          E$DIT     EDPKT     MY
)@@G@@        . $P FORMAT PROGRAM ID@B@@@@          E$COPY    29,PROGID       MZ
)@@G@@  .   @E@@@@          E$DAT3                      . $P GET TIME STAMP   NA
)@@G@@@B@@@@          E$CHAR    ','               .   @B@@@@          E$TD    NB
)@@G@@                    .   @^@@@@          E$CHAR    '(' @ @@@@          E$NC
)@@G@@FD1     VERSION   @^@@@@          E$CHAR    ')' @^@@@@          E$CHAR  ND
)@@G@@  '-' @B@@@@          E$DITX                      .   @E@@@@          P$NE
)@@G@@RINT    (PF  1,14,PRINT)  . $P PRINT PROGRAM ID @B@@@@          LA      NF
)@@G@@  A0,(57,PBUFR)     .   @F@@@@          LMJ       X11,RINF$         . $WNG
)@@G@@ READ PROCESSOR CARD    @E@@@@          J         NOINPUT           . $TNH
)@@G@@ PROCESSOR CALL OK@]@@@@$(4).       @ @@@@PF        FORM      12,6,18   NI
)@@G@@@ @@@@EDPKT*    E$PKT     14,PRINT  @^@@@@PRINT*    RES       14  @#@@@@NJ
)@@G@@VERSION   '6.0'   @C@@@@PROGID    '-BELL LABS D$FILE EDITOR: ON '       NK
)@@G@@@^@@@@PBUFR*    RES       57  @]@@@@$(1).       @[@@@@.     @A@@@@.     NL
)@@G@@    SET UP ALL OPTION WORDS   @[@@@@.     @E@@@@          ER        OPT$NM
)@@G@@              . $P GET OPTION WORD  @D@@@@          LA,U      A1,1      NN
)@@G@@        . $P GET IND    @B@@@@          LR,U      R1,26             .   NO
)@@G@@@G@@@@          LSSL      A0,9              . $P SHIFT OFF FIRST 9 BITS NP
)@@G@@      @F@@@@          LX        X1,(1,OPTIONS)    . $P GET OPTION WORDS NQ
)@@G@@ADDR  @C@@@@OPTLOOP                               . $H      @E@@@@      NR
)@@G@@    JGD       R1,$+2            . $T ALL CHECKED      @E@@@@          J NS
)@@G@@        ENDOPT            . $A YES,ENDOPT NO    @G@@@@          LSSL    NT
)@@G@@  A0,1              . $P SGIFT THE OPTION TO BIT 35   @D@@@@          TPNU
)@@G@@        A0                . $T IS IT SET  @E@@@@          SA        A1,,NV
)@@G@@X1           . $A YES,SETIT NO      @D@@@@          AX,U      X1,1      NW
)@@G@@        . $P UP INX     @D@@@@          J         OPTLOOP           . $JNX
)@@G@@ NXT ONE    @]@@@@$(4).       @]@@@@OPTIONS.    @^@@@@AOPT*     +0      NY
)@@G@@  .   @ @@@@BOPT*     +0        .  BRIEF  @^@@@@COPT*     +0        .   NZ
)@@G@@@^@@@@DOPT*     +0        .   @^@@@@EOPT*     +0        .   @^@@@@FOPT* OA
)@@G@@    +0        .   @^@@@@GOPT*     +0        .   @^@@@@HOPT*     +0      OB
)@@G@@  .   @^@@@@IOPT*     +0        .   @^@@@@JOPT*     +0        .   @^@@@@OC
)@@G@@KOPT*     +0        .   @ @@@@LOPT*     +0        .  LIST   @A@@@@MOPT* OD
)@@G@@    +0        .  MONITOR      @^@@@@NOPT*     +0        .   @^@@@@OOPT* OE
)@@G@@    +0        .   @A@@@@POPT*     +0        .  BATCH/PRINT  @^@@@@QOPT* OF
)@@G@@    +0        .   @A@@@@ROPT*     +0        .  READ ONLY    @^@@@@SOPT* OG
)@@G@@    +0        .   @B@@@@TOPT*     +0        .  TEST/DEBUG MODE    @^@@@@OH
)@@G@@UOPT*     +0        .   @^@@@@VOPT*     +0        .   @^@@@@WOPT*     +0OI
)@@G@@        .   @A@@@@XOPT*     +0        .  SORT/MERGE   @^@@@@YOPT*     +0OJ
)@@G@@        .   @^@@@@ZOPT*     +0        .   @]@@@@$(1).       @]@@@@ENDOPTOK
)@@G@@.     @F@@@@          TNZ       XOPT              . $T CHK IF SORT NEEDEOL
)@@G@@D     @C@@@@          J         NOSORT            . $J NO   @E@@@@      OM
)@@G@@    LA        A0,LAST$D         . $P ADD 6K TO D BANK @B@@@@          AAON
)@@G@@,U      A0,SORTCORE       .   @B@@@@          SA        A0,LAST$D       OO
)@@G@@  .   @B@@@@          SA        A0,LAST$DSV       .   @]@@@@NOSORT.     OP
)@@G@@@[@@@@.     @C@@@@.         CALL DEBUG IF T OPTION SPECIFIED      @[@@@@OQ
)@@G@@.     @E@@@@          TZ        TOPT              . $T T OPTION SET     OR
)@@G@@@E@@@@          SLJ       DEBUG$            . $A YES,DEBUG NO     @[@@@@OS
)@@G@@.     @C@@@@.         GET THE DATA FILE NAME AND DO @USE    @[@@@@.     OT
)@@G@@@E@@@@          LA,U      A0,1              . $P GET FIRST ELT$   @B@@@@OU
)@@G@@          LMJ       X11,SELT$         .   @E@@@@          J         NOINOV
)@@G@@PUT           . $T 1ST NAME IN      @E@@@@          SLJ       BLDUSE    OW
)@@G@@        . $A NO, TRY 2ND      @B@@@@          J         START           OX
)@@G@@  .   @[@@@@.     @A@@@@.         NO INPUT FILE SPECIFIED   @[@@@@.     OY
)@@G@@@C@@@@NOINPUT                               . $H      @A@@@@          P$OZ
)@@G@@RINT    (PF 1,4,NOMSG)  @E@@@@          LA,U      A0,91             . $PPA
)@@G@@ SET STATUS=91    @B@@@@          SA        A0,STATUS         .   @ @@@@PB
)@@G@@          J         FATALSTP  @]@@@@$(4).       @A@@@@NOMSG     'NO INPUPC
)@@G@@T FILE SPECIFIED' @]@@@@$(1).       @[@@@@.     @C@@@@.         BUILD @UPD
)@@G@@SE COMMAND AND PERFORM CSF$   @[@@@@.     @C@@@@BLDUSE    +0            PE
)@@G@@              . $H      @E@@@@          E$DIT     EDPKT             . $PPF
)@@G@@ SET UP PKT       @^@@@@          E$CHAR    '@' @ @@@@          E$FD1   PG
)@@G@@  ('USE')   @^@@@@          E$SKIP    1   @ @@@@          E$FD2     USENPH
)@@G@@ME    @^@@@@          E$CHAR    ',' @E@@@@          TNZ,S1    ELT$      PI
)@@G@@        . $T QUALFIER IN      @E@@@@          J         IMPQUAL         PJ
)@@G@@  . $A YES NO,IMPQUAL   @ @@@@          E$FD2     ELT$+2    @^@@@@      PK
)@@G@@    E$CHAR    '*' @B@@@@          J         FILENME           .   @[@@@@PL
)@@G@@.     @B@@@@.         CHECK IF IMPLIED QUALFIER IN    @[@@@@.     @C@@@@PM
)@@G@@IMPQUAL                               . $H      @E@@@@          TNZ,S6  PN
)@@G@@  ELT$              . $T IMPLIED QUAL     @E@@@@          J         FILEPO
)@@G@@NME           . $A YES NO,FILENME   @B@@@@          E$CHAR    '*'       PP
)@@G@@        .   @[@@@@.     @^@@@@.         GET FILENAME  @[@@@@.     @C@@@@PQ
)@@G@@FILENME                               . $H      @E@@@@          TNZ,S2  PR
)@@G@@  ELT$              . $T FILENAME IN      @E@@@@          J         ELEMPS
)@@G@@ENT           . $A YES NO,ELEMENT   @ @@@@          E$FD2     ELT$+4    PT
)@@G@@@ @@@@          J         DOUSE     @[@@@@.     @ @@@@.         TRY ELEMPU
)@@G@@ENT NAME    @[@@@@.     @C@@@@ELEMENT                               . $HPV
)@@G@@      @E@@@@          TNZ,S1    ELT$+1            . $T ELEMENT NAME IN  PW
)@@G@@@E@@@@          ER        ERR$              . $ PROC CALL ERR     @ @@@@PX
)@@G@@          E$FD2     ELT$+9    @[@@@@.     @^@@@@.         DO @USE       PY
)@@G@@@[@@@@.     @C@@@@DOUSE                                 . $H      @^@@@@PZ
)@@G@@          E$SKIP    1   @F@@@@          E$CHAR    '.'               . $PQA
)@@G@@ END OF USE STATEMENT   @#@@@@          E$DITX  @D@@@@          LA,U    QB
)@@G@@  A0,PRINT          . $P USE ADDR   @D@@@@          ER        CSF$      QC
)@@G@@        . $P DO @USE    @D@@@@          J         *BLDUSE           . $JQD
)@@G@@ RETURN     @]@@@@$(4).       @^@@@@USENME*   'D$FILE  '    @[@@@@.     QE
)@@G@@@]@@@@$(1).       @C@@@@START                                 . $H      QF
)@@G@@@B@@@@          LA        A0,(1,ACTII)      .   @B@@@@          ER      QG
)@@G@@  FORK$             .   @ @@@@          LA,U      A0,'MM'   @ @@@@      QH
)@@G@@    ER        NAME$     @A@@@@          SA        A0,MAINNAME     @C@@@@QI
)@@G@@          LA        A0,(PF 02000,1,IICONT)      @ @@@@          ER      QJ
)@@G@@  IALL$     @D@@@@          LA        A0,(031,PBUFR)    . $P READ PCT   QK
)@@G@@@^@@@@          ER        PCT$@G@@@@          LA,U      A1,1            QL
)@@G@@  . $P SET POPT IF BATCH MODE       @E@@@@          LA,S2     A0,PBUFR+0QM
)@@G@@30      . $P GET PROG TYPE    @E@@@@          TE,U      A0,4            QN
)@@G@@  . $T DEMAND MODE      @E@@@@          SA        A1,POPT           . $AQO
)@@G@@ YES NO,SETIT     @E@@@@          LMJ       X11,RDCTBL        . $W READ QP
)@@G@@C TABLES    @E@@@@          LMJ       X11,BLDT$F        . $W BUILD TEMP.QQ
)@@G@@ FILE @G@@@@          SLJ       EDITING           . $W CALL EDITOR MAIN QR
)@@G@@CONTROL     @ @@@@          ER        EXIT$     @]@@@@IICONT.     @]@@@@QS
)@@G@@          +0@]@@@@          +0@ @@@@          J         READIN    @]@@@@QT
)@@G@@$(4).       @^@@@@LAST$D*   +LASTD$       @^@@@@LAST$DSV  +LASTD$       QU
)@@G@@@^@@@@LAST$I*   +LASTI$       @^@@@@LAST$ISV  +LASTI$       @]@@@@C1*   QV
)@@G@@    +0@]@@@@C2*       +0@]@@@@C3*       +0@]@@@@C4*       +0@]@@@@C5*   QW
)@@G@@    +0@]@@@@C6*       +0@]@@@@C7*       +0@]@@@@C8*       +0@]@@@@C9*   QX
)@@G@@    +0@]@@@@C10*      +0@]@@@@C11*      +0@]@@@@C12*      +0@]@@@@C13*  QY
)@@G@@    +0@]@@@@C14*      +0@]@@@@C15*      +0@]@@@@C16*      +0@]@@@@C17*  QZ
)@@G@@    +0@]@@@@C18*      +0@#@@@@TT1*       +0     @#@@@@TT2*       +0     RA
)@@G@@@#@@@@TT3*       +0     @]@@@@$(1).       @[@@@@.     @B@@@@.         EDRB
)@@G@@ITING MAIN CONTROL REOTINE    @[@@@@.     @C@@@@EDITING   +0            RC
)@@G@@              . $H      @ @@@@          E$DIT     EDPKT     @A@@@@      RD
)@@G@@    E$COPY    15,READYMSG     @B@@@@          TZ        ROPT            RE
)@@G@@  .   @ @@@@          J         RDONLY    @A@@@@          E$FD1     ('UPRF
)@@G@@DATE')      @ @@@@          J         PRTRDY    @]@@@@RDONLY.     @A@@@@RG
)@@G@@          E$FD2     ('READ-ONLY')   @]@@@@PRTRDY.     @^@@@@          E$RH
)@@G@@SKIP    1   @ @@@@          E$FD1     ('MODE')  @#@@@@          E$DITX  RI
)@@G@@@A@@@@          P$RINT    (PF 1,14,PRINT) @[@@@@$(4)  @ @@@@READYMSG  'ERJ
)@@G@@DITOR READY - '   @]@@@@LN*       +0@]@@@@RDALN*    +0@^@@@@RDA*      RERK
)@@G@@S       700 @^@@@@AREANAME* RES       2   @]@@@@PERFSW*   +0@]@@@@FATAL*RL
)@@G@@    +0@]@@@@ARTKEY*   +0@]@@@@STATUS*   +0@]@@@@AREACODE* +0@]@@@@PAGENURM
)@@G@@M*  +0@]@@@@SLOTNUM*  +0@]@@@@$(1).       @]@@@@READIN.     @F@@@@      RN
)@@G@@    TNZ       FATAL             . $T SEE IF FATAL ERROR     @E@@@@      RO
)@@G@@    J         $+4               . $A YES NO,$+4       @E@@@@          TZRP
)@@G@@        POPT              . $T BATCH ON OR OFF  @E@@@@          J       RQ
)@@G@@  FATALSTP          . $J GOTO FATAL STOP  @E@@@@          SZ        FATARR
)@@G@@L             . $P RESET FATAL IND  @ @@@@          E$DIT     EDPKT     RS
)@@G@@@^@@@@          E$DECV    LN  @^@@@@          E$CHAR    ':' @ @@@@      RT
)@@G@@    E$COPY    1,STOP    @#@@@@          E$COLN  @H@@@@          DSL     RU
)@@G@@  A0,36             . $P COMPUTE NUMBER OF WORDS TO OUT     @B@@@@      RV
)@@G@@    DI,U      A0,6              .   @B@@@@          TZ        A1        RW
)@@G@@        .   @B@@@@          AA,U      A0,1              .   @B@@@@      RX
)@@G@@    SA        A0,WRDCNT         .   @#@@@@          E$DITX  @A@@@@      RY
)@@G@@    LX,U      X10,INPKT       @E@@@@          LMJ       X11,INPUT       RZ
)@@G@@  . $P READ AN INPUT    @D@@@@          TZ        INBUF             . $TSA
)@@G@@ NO INPUT   @E@@@@          J         PARSER$           . $A YES,SYNTAX SB
)@@G@@NO    @E@@@@          J         SYNTAX            . $J SYNTAX ERROR     SC
)@@G@@@]@@@@$(4).       @^@@@@STOP      +0770000,0    @A@@@@INPKT     PF      SD
)@@G@@  1,0,PRINT       @^@@@@          +EOFIN,INBUF  @^@@@@INBUF*    RES     SE
)@@G@@  400 @^@@@@WRKPKT*   RES       400 @A@@@@WRDCNT    EQUF      INPKT,,S3 SF
)@@G@@      @A@@@@FUNCODE   EQUF      WRKPKT+1,,S1    @]@@@@$(1).       @[@@@@SG
)@@G@@.     @^@@@@.         SYNTAX ERROR  @[@@@@.     @C@@@@SYNTAX            SH
)@@G@@                    . $H      @A@@@@          P$RINT    (PF 1,2,SYNERR) SI
)@@G@@@ @@@@          LA,U      A0,92     @A@@@@          SA        A0,STATUS SJ
)@@G@@      @B@@@@          J         FATSTAT            .  @[@@@@.     @A@@@@SK
)@@G@@.         FATAL ERROR TERMINATION   @[@@@@.     @]@@@@FATALSTP*.  @ @@@@SL
)@@G@@          E$DIT     EDPKT     @A@@@@          E$COPY    28,FATALMSG     SM
)@@G@@@ @@@@          TNZ       STATUS    @ @@@@          J         FATPRT    SN
)@@G@@@A@@@@          E$FD2     (',STATUS:')    @ @@@@          E$DECF    4,STSO
)@@G@@ATUS  @]@@@@FATPRT.     @^@@@@          E$SKIP    1   @A@@@@          E$SP
)@@G@@COPY    3,FATALMSG      @#@@@@          E$DITX  @A@@@@          P$RINT  SQ
)@@G@@  (PF 1,14,PRINT) @ @@@@          ER        EXIT$     @]@@@@$(4).       SR
)@@G@@@C@@@@FATALMSG  '* * FATAL ERROR - TERMINATED * *'    @^@@@@SYNERR    'SSS
)@@G@@YNTAX ERROR'@]@@@@$(1).       @[@@@@.     @E@@@@.         CALL PARSER ROST
)@@G@@UTINE TO PARSE THE INPUT LINE       @[@@@@.     @C@@@@PARSER$           SU
)@@G@@                    . $H      @A@@@@          LMJ       X11,PARSE       SV
)@@G@@@#@@@@          +INBUF  @^@@@@          +WRKPKT       @]@@@@NOSNAP.     SW
)@@G@@@E@@@@          LA        A0,FUNCODE        . $P GET FUNC CODE    @E@@@@SX
)@@G@@          LA,H2     A0,WRKTBL,A0      . $P GET ROUTINE ADDR @E@@@@      SY
)@@G@@    LX,U      X10,WRKPKT        . $P WORKER PKT       @F@@@@          LMSZ
)@@G@@J       X11,0,A0          . $J GOTO WORKER ROUTINE    @E@@@@          J TA
)@@G@@        READIN            . $P GET NXT LINE     @[@@@@.     @C@@@@.     TB
)@@G@@    FOLLOWING ROUTINES ARE NOT AVAILABLE  @[@@@@.     @^@@@@          ERTC
)@@G@@        ERR$@]@@@@$(4).       @]@@@@WRKTBL.     @A@@@@          +0,SYNTATD
)@@G@@X . SYNTAX ERROR  @A@@@@          +0,LOCATE$ . CODE=1       @ @@@@      TE
)@@G@@    +0,INSERT . CODE=2  @ @@@@          +0,PRINTL . CODE=3  @ @@@@      TF
)@@G@@    +0,PRINTV . CODE=4  @ @@@@          +1,PROC$  . CODE=5  @ @@@@      TG
)@@G@@    +1,PERF$  . CODE=6  @H@@@@          +0,SYNTAXP                  . SYTH
)@@G@@NTAX ERROR IN NON-PROC MODE(GOTO)   @C@@@@          +0,SYNTAXP          TI
)@@G@@        .    IF   @D@@@@          +0,SYNTAXP                  .    RETURTJ
)@@G@@N     @A@@@@          +0,LET    . CODE=10       @A@@@@          +0,CALL$TK
)@@G@@WK . CODE=11      @A@@@@          +0,EDIT$WK . CODE=12      @A@@@@      TL
)@@G@@    +0,INTRP  . CODE=13       @A@@@@          +0,CHANGE$ . CODE=14      TM
)@@G@@@A@@@@          +0,NOPR   . CODE=15, NOP  @C@@@@          +0,SYNTAXP    TN
)@@G@@              . CODE=16 @]@@@@$(1).       @]@@@@NOPR.       @ @@@@      TO
)@@G@@    J         0,X11     @[@@@@.     @B@@@@.         SYNTAX ERROR IN NON-TP
)@@G@@PROC MODE   @[@@@@.     @C@@@@SYNTAXP                               . $HTQ
)@@G@@      @A@@@@          P$RINT    (PF 1,6,SYNPMSG)@ @@@@          LA,U    TR
)@@G@@  A0,90     @A@@@@          SA        A0,STATUS       @]@@@@FATSTAT.    TS
)@@G@@@E@@@@          LA,U      A0,1              . $P SET FATAL ERROR  @ @@@@TT
)@@G@@          SA        A0,FATAL  @B@@@@          J         READIN          TU
)@@G@@  .   @]@@@@$(4).       @C@@@@SYNPMSG   'INVALID COMMAND FOR NON-PROC MOTV
)@@G@@DE'   @]@@@@$(1).       @]@@@@EOFIN.      @E@@@@          J         EXITTW
)@@G@@ED            . $P PERFORM EXIT     @[@@@@.     @^@@@@.         PERFORM TX
)@@G@@PROC  @[@@@@.     @]@@@@PROC$.      @B@@@@          LMJ       X11,PROCMCTY
)@@G@@        .   @E@@@@          J         READIN            . $J GET NXT LINTZ
)@@G@@E     @[@@@@.     @A@@@@.         PERFORM PERFORM COMMAND   @[@@@@.     UA
)@@G@@@]@@@@PERF$.      @E@@@@          SX        X10,PERFSW        . $P SET PUB
)@@G@@ERFORM SW   @F@@@@          LMJ       X11,PERFORM       . $P GO TO PERFOUC
)@@G@@RM WRK RTN  @E@@@@          SZ        PERFSW            . $P RESET PERFOUD
)@@G@@RM SW @ @@@@          J         READIN    @^@@@@          END       MAINUE
)@@G@@___ E$FD1     ('MODE')  @#@@@@          E$DITX  @A@@@@          P$RINT  UF
)@@G@@*[@@@@*SDFF*@#@@@@          AXR$    @#@@@@$(4)      LIT.    @]@@@@$(1). UG
)@@G@@      @[@@@@.     @E@@@@.         THIS SUBROUTINE WILL READ ALL C TABLESUH
)@@G@@. (C1 - C17)@[@@@@.     @C@@@@RDCTBL*                               . $HUI
)@@G@@      @D@@@@          SX,H2     X11,SAVEX11       . $P SAVE X11   @G@@@@UJ
)@@G@@          LR,U      R5,17             . $P SET TO READ 17 C TABLES      UK
)@@G@@@C@@@@RDCLOOP                               . $H      @D@@@@          JGUL
)@@G@@D       R5,$+2            . $T ALL DONE   @E@@@@          J         ENDIUM
)@@G@@T             . $A YES,ENDIT NO     @E@@@@          LX,U      X10,RDPKT UN
)@@G@@        . $P SET PKT ADDR     @E@@@@          AX        X10,R5          UO
)@@G@@  . $P ADJ TO PROPER ONE@D@@@@          LMJ       X11,CF$AM         . $PUP
)@@G@@ READ IT    @E@@@@          J         RDCLOOP           . $J TRY NXT ONEUQ
)@@G@@      @C@@@@ENDIT                                 . $H      @E@@@@      UR
)@@G@@    TNZ,H1    C1                . $T CHK IF C TBL'S IN@E@@@@          J US
)@@G@@        NOC$FILE          . $A YES NO,NOC$FILE  @E@@@@          LA      UT
)@@G@@  A0,LAST$D         . $P MCORE FOR C14,C15@B@@@@          AA,U      A0,CUU
)@@G@@14SZX         .   @B@@@@          SA        A0,LAST$D         .   @B@@@@UV
)@@G@@          ER        MCORE$            .   @[@@@@.     @A@@@@.         BUUW
)@@G@@ILD RECORD SEQ TBL(TT1) @[@@@@.     @F@@@@          LA        A0,LAST$D UX
)@@G@@        . $P MCORE$ FOR THE TBL     @E@@@@          AA,U      A0,1      UY
)@@G@@        . $P COMPUTE ADDR     @E@@@@          SA        A0,TT1          UZ
)@@G@@  . $P SAVE IT IN TT1   @G@@@@          AA,U      A0,NUMREC         . $PVA
)@@G@@ INITIAL SZ OF NUMREC WORDS   @D@@@@          AA,U      A0,TT1SZ        VB
)@@G@@  . $P + IF ANY   @B@@@@          SA        A0,LAST$D         .   @ @@@@VC
)@@G@@          ER        MCORE$    @E@@@@          LX        X1,TT1          VD
)@@G@@  . $P BUILD THE TBL    @B@@@@          LXI,U     X1,1              .   VE
)@@G@@@E@@@@          LX        X2,C8             . $P GET C8 ADDR      @E@@@@VF
)@@G@@          AX,U      X2,28             . $P SKIP SCRATCH AREA@B@@@@      VG
)@@G@@    LXI,U     X2,6              .   @E@@@@          SZ        A1        VH
)@@G@@        . $P SET TO 0 RECORDS @C@@@@SETT1                               VI
)@@G@@  . $H      @E@@@@          LA,T1     A0,,X2            . $P GET A RECORVJ
)@@G@@D CODE@E@@@@          SA,T1     A0,,*X1           . $P SAVE IN TT1      VK
)@@G@@@D@@@@          LA,T3     A0,,*X2           . $P CHK LINK   @C@@@@      VL
)@@G@@    AA,U      A1,1              . $P UP 1 @B@@@@          JNZ       A0,SVM
)@@G@@ETT1          .   @E@@@@          SA,H1     A1,TT1            . $P FINALVN
)@@G@@ COUNT      @[@@@@.     @A@@@@.         BUILD SET CURRENCY TBL    @[@@@@VO
)@@G@@.     @E@@@@          LA        A0,LAST$D         . $P MCORE TBL AREA   VP
)@@G@@@E@@@@          A,U       A0,1              . $P GET THE ADDR     @D@@@@VQ
)@@G@@          SA        A0,TT2            . $P SAVE IT    @H@@@@          A,VR
)@@G@@U       A0,TT2SZ          . $P MAX. TT2SZ/3 SETS(3 WRDS PER SET)  @B@@@@VS
)@@G@@          SA        A0,LAST$D         .   @B@@@@          ER        MCORVT
)@@G@@E$            .   @E@@@@          LX,H2     X1,C7             . $P USE CVU
)@@G@@7 IF C13 = 0@D@@@@          TZ,H1     C13               . $T C13 IN     VV
)@@G@@@C@@@@          LX,H2     X1,C13            . $A YES  @E@@@@          LXVW
)@@G@@,H2     X2,TT2            . $P GET TT2 ADDR     @B@@@@          LXI,U   VX
)@@G@@  X2,3              .   @E@@@@          SZ        A1                . $PVY
)@@G@@ ENTRY COUNT 0    @E@@@@SETT2                                 . $H SET UVZ
)@@G@@P LOOP      @E@@@@          SZ        0,X2              . $P INITIALIZE WA
)@@G@@TBL   @B@@@@          SZ        1,X2              .   @B@@@@          SZWB
)@@G@@        2,X2              .   @E@@@@          LA,T1     A0,,X1          WC
)@@G@@  . $P GET SET CODE     @E@@@@          SA,T1     A0,,X2            . $PWD
)@@G@@ SAVE IT IN TT2   @F@@@@          LA,T3     A0,6,X1           . $P GET SWE
)@@G@@ET OWNER CODE     @D@@@@          SA,T2     A0,,*X2           . $P SAVE WF
)@@G@@IT    @E@@@@          A,U       A1,1              . $P UP ENTRY COUNT   WG
)@@G@@@D@@@@          LA,T3     A0,,X1            . $P GET LINK   @C@@@@      WH
)@@G@@    AX,T3     X1,,X1            . $P UP X1@D@@@@          JNZ       A0,SWI
)@@G@@ETT2          . $T LINK = 0   @E@@@@          SA,H1     A1,TT2          WJ
)@@G@@  . $A YES NO,SETT2     @E@@@@                                      . $PWK
)@@G@@ SAVE ENTRY COUNT @[@@@@.     @C@@@@.         CREATE SYM ENTRY FOR RESERWL
)@@G@@VED WORDS   @[@@@@.     @]@@@@DEFLOOP.    @F@@@@          LA        A0,DWM
)@@G@@EFCNT         . $P GET THE RSV DEF COUNT  @D@@@@          JGD       A0,$WN
)@@G@@+2            . $T DONE ALL   @E@@@@          J         RSVLOOP         WO
)@@G@@  . $A YES,RSVLOOP NO   @F@@@@          SA        A0,DEFCNT         . $PWP
)@@G@@ SAVE THE REMI COUNT    @C@@@@          MSI,U     A0,3              . $PWQ
)@@G@@      @E@@@@          LX        X4,A0             . $P INX TO DEFLIST   WR
)@@G@@@E@@@@          DL        A0,DEFLIST,X4     . $P GET A NAME       @F@@@@WS
)@@G@@          DS        A0,SYMPKT         . $P SAVE IT IN THE PKT     @D@@@@WT
)@@G@@          LA,S2     A0,DEFLIST+2,X4   . $P GET TYPE   @F@@@@          SAWU
)@@G@@,S4     A0,SYMPKT+5       . $P SAVE IT IN THE PKT     @E@@@@          LAWV
)@@G@@,S3     A0,DEFLIST+2,X4   . $P GET LENGTH       @B@@@@          SA,T3   WW
)@@G@@  A0,SYMPKT+5       .   @D@@@@          LX,H2     X1,TT1            . $PWX
)@@G@@ TT1 ADDR   @F@@@@          AX,H1     X1,TT1            . $P GET NXT ENTWY
)@@G@@RY ADDR     @D@@@@          SZ        0,X1              . $P SET TO 0   WZ
)@@G@@@E@@@@          LA        A0,DEFLIST+2,X4   . $P GET REV WRD ADDR @C@@@@XA
)@@G@@          ANA,U     A0,2              . $P - 2  @G@@@@          SA,H2   XB
)@@G@@  A0,,X1            . $P SAVE IT AS BUFFER ADDR       @E@@@@          LAXC
)@@G@@,H1     A0,TT1            . $P GET SEQ NO       @C@@@@          A,U     XD
)@@G@@  A0,1              . $P +1   @D@@@@          SA,H1     A0,TT1          XE
)@@G@@  . $P SAVE IT    @D@@@@          SA,T1     A0,SEQNO          . $P SEQ NXF
)@@G@@O.    @E@@@@          LX,U      X10,SYMPKT        . $P GET SYM PKT ADDR XG
)@@G@@@D@@@@          LMJ       X11,SYM$TW        . $P CREATE IT  @D@@@@      XH
)@@G@@    J         DEFLOOP           . $J TRY NXT    @[@@@@.     @A@@@@.     XI
)@@G@@    RESERVED WITHOUT A STORAGE@[@@@@.     @]@@@@RSVLOOP.    @E@@@@      XJ
)@@G@@    LA        A0,RSVCNT         . $P GET RSV COUNT    @D@@@@          JGXK
)@@G@@D       A0,$+2            . $T DONE ALL   @E@@@@          J         *SAVXL
)@@G@@EX11          . $A YES,RETURN NO    @E@@@@          SA        A0,RSVCNT XM
)@@G@@        . $P SAVE COUNT       @F@@@@          MSI,U     A0,3            XN
)@@G@@  . $P GET INDX TO RSVLIST    @C@@@@          LX        X4,A0           XO
)@@G@@  . $       @E@@@@          DL        A0,RSVLIST,X4     . $P GET THE NAMXP
)@@G@@E     @B@@@@          DS        A0,RSVPKT         .   @E@@@@          LAXQ
)@@G@@        A0,RSVLIST+2,X4   . $P RESERVED SEQ NO  @B@@@@          SA,T1   XR
)@@G@@  A0,RSVNO          .   @B@@@@          LX,U      X10,RSVPKT        .   XS
)@@G@@@A@@@@          LMJ       X11,SYM$TW      @B@@@@          J         RSVLXT
)@@G@@OOP           .   @[@@@@.     @ @@@@PF        FORM      12,6,18   @[@@@@XU
)@@G@@.     @]@@@@NOC$FILE.   @A@@@@          P$RINT    (PF 1,4,NOMSG)  @ @@@@XV
)@@G@@          LA,U      A0,93     @A@@@@          SA        A0,STATUS       XW
)@@G@@@ @@@@          J         FATALSTP  @]@@@@$(4).       @]@@@@DEFLIST.    XX
)@@G@@@^@@@@          '#        '   @^@@@@          +01606,LN     @^@@@@      XY
)@@G@@    'STATUS   '   @^@@@@          +01606,STATUS @^@@@@          'AREACODXZ
)@@G@@E'    @ @@@@          +01606,AREACODE     @^@@@@          'PAGE-NUM '   YA
)@@G@@@^@@@@          +01606,PAGENUM@^@@@@          'SLOT-NUM '   @^@@@@      YB
)@@G@@    +01606,SLOTNUM@^@@@@          'AREA-NAME '  @ @@@@          +01714,AYC
)@@G@@REANAME     @ @@@@DEFCNT    (DEFCNT-DEFLIST)/3  @^@@@@SYMPKT    RES     YD
)@@G@@  2   @ @@@@          '               '   @^@@@@          +0,0,3,016,0,6YE
)@@G@@@^@@@@SEQNO     +0,0,1,0,0,0  @]@@@@          +0@]@@@@RSVLIST.    @^@@@@YF
)@@G@@          'RECORD-NAME' @]@@@@          +1@^@@@@          'DBP        ' YG
)@@G@@@]@@@@          +2@^@@@@          'HEADER     ' @]@@@@          +3@^@@@@YH
)@@G@@          'MAN-CTL    ' @]@@@@          +4@^@@@@          'RECORD-CODE' YI
)@@G@@@]@@@@          +5@ @@@@RSVCNT    (RSVCNT-RSVLIST)/3  @^@@@@RSVPKT    REYJ
)@@G@@S       2   @ @@@@          '                '  @^@@@@          +0,0,3,0YK
)@@G@@25,0,0@]@@@@RSVNO     +0@]@@@@          +0@A@@@@NOMSG     'NO C$FILE AVAYL
)@@G@@ILABLE'     @]@@@@RDPKT.      @^@@@@          +14,020,,,,0  @^@@@@      YM
)@@G@@    +15,020,,,,0  @^@@@@          +1,020,,,,0   @^@@@@          +2,020,,YN
)@@G@@,,0   @^@@@@          +3,020,,,,0   @^@@@@          +4,020,,,,0   @^@@@@YO
)@@G@@          +5,020,,,,0   @^@@@@          +6,020,,,,0   @^@@@@          +7YP
)@@G@@,020,,,,0   @^@@@@          +8,020,,,,0   @^@@@@          +9,020,,,,0   YQ
)@@G@@@^@@@@          +10,020,,,,0  @^@@@@          +11,020,,,,0  @^@@@@      YR
)@@G@@    +12,020,,,,0  @^@@@@          +13,020,,,,0  @^@@@@          +16,020,YS
)@@G@@,,,0  @^@@@@          +17,020,,,,0  @]@@@@SAVEX11   +0@#@@@@          ENYT
)@@G@@D     ___T TT2 ADDR     @B@@@@          LXI,U     X2,3              .   YU
)@@G@@*[@@@@*SDFF*@#@@@@          AXR$    @ @@@@PF        FORM      12,6,18   YV
)@@G@@@#@@@@$(4)      LIT     @]@@@@$(1).       @A@@@@.         REORG II KEY IYW
)@@G@@N ACTIVITY  @]@@@@ACTII*.     @ @@@@          LA,U      A0,'II'   @E@@@@YX
)@@G@@.                                     REGISTER ACTIVITY NAME@ @@@@      YY
)@@G@@    ER        NAME$     @A@@@@          SA        A0,IINAME       @ @@@@YZ
)@@G@@          ER        TDATE$    @A@@@@          SA        A0,TIMEST       ZA
)@@G@@@A@@@@          LA        A0,(031,PCT)    @^@@@@          ER        PCT$ZB
)@@G@@@ @@@@          LA        A0,CPU    @ @@@@          LA        A1,IOCNT  ZC
)@@G@@@ @@@@          DS        A0,CPUIN  @C@@@@          LA        A0,(PF 020ZD
)@@G@@00,1,IICONT)      @G@@@@.                                     REGISTER IZE
)@@G@@NTER ACT INTERRUPT RTN  @ @@@@          ER        IALL$     @]@@@@IIER. ZF
)@@G@@      @^@@@@          ER        II$ @F@@@@.                             ZG
)@@G@@        WAIT FOR II KEYIN OR BREAK  @ @@@@          SA        A0,KEYIN  ZH
)@@G@@@B@@@@          SLJ       CKREQ             .   @ @@@@          E$DIT   ZI
)@@G@@  IIPKT     @^@@@@          E$SKIP    2   @^@@@@          E$CHAR    '%' ZJ
)@@G@@@^@@@@          E$SKIP    1   @E@@@@          LA        A1,LAST$I       ZK
)@@G@@  . GET IBANK ADDR      @^@@@@          SZ        A0  @F@@@@          DIZL
)@@G@@,U      A0,512            . COMPUTE CORE BLOCKS USED  @^@@@@          TZZM
)@@G@@        A1  @B@@@@          AA,U      A0,1              .   @B@@@@      ZN
)@@G@@    LA        A2,LAST$D         .   @^@@@@          SZ        A1  @A@@@@ZO
)@@G@@          ANA       A2,(+FRSTD$)    @ @@@@          DI,U      A1,512    ZP
)@@G@@@^@@@@          TZ        A2  @^@@@@          AA,U      A1,1@ @@@@      ZQ
)@@G@@    AA        A0,A1     @ @@@@          MSI,U     A0,512    @ @@@@      ZR
)@@G@@    DSL       A0,36     @ @@@@          DI,U      A0,1000   @^@@@@      ZS
)@@G@@    TZ        A1  @^@@@@          AA,U      A0,1@A@@@@          LMJ     ZT
)@@G@@  X11,EDECV$      @^@@@@          E$CHAR    'K' @^@@@@          E$SKIP  ZU
)@@G@@  1   @ @@@@          E$FD1     ('IN')    @^@@@@          E$SKIP    1   ZV
)@@G@@@A@@@@          E$FD1     ('CORE,')       @^@@@@          E$SKIP    1   ZW
)@@G@@@A@@@@          E$FD1     ('LINE=')       @^@@@@          E$DECV    LN  ZX
)@@G@@@^@@@@          E$CHAR    '(' @ @@@@          E$DECV    RECNMC    @^@@@@ZY
)@@G@@          E$CHAR    ')' @#@@@@          E$DITX  @ @@@@          SLJ     ZZ
)@@G@@  IIOUT     @ @@@@          E$DIT     IIPKT     @^@@@@          E$SKIP  AA
)@@G@@  2   @^@@@@          E$CHAR    '%' @^@@@@          E$SKIP    1   @A@@@@AB
)@@G@@          E$FD2     ('ELAPSED=')    @ @@@@          ER        TDATE$    AC
)@@G@@@A@@@@          ANA       A0,TIMEST       @A@@@@          LMJ       X11,AD
)@@G@@ETIME$      @^@@@@          E$CHAR    ',' @^@@@@          E$SKIP    1   AE
)@@G@@@ @@@@          E$FD1     ('CPU=')  @A@@@@          LA        A0,(031,PCAF
)@@G@@T)    @^@@@@          ER        PCT$@ @@@@          LA        A0,CPU    AG
)@@G@@@ @@@@          ANA       A0,CPUIN  @ @@@@          DSL       A0,36     AH
)@@G@@@^@@@@          DI,U      A0,5@A@@@@          LMJ       X11,EDECV$      AI
)@@G@@@^@@@@          E$SKIP    1   @ @@@@          E$FD1     ('MS,')   @^@@@@AJ
)@@G@@          E$SKIP    1   @ @@@@          E$FD1     ('I/O=')  @C@@@@      AK
)@@G@@              LA                A0,IOCNT  @ @@@@          ANA       A0,IAL
)@@G@@OIN   @A@@@@          LMJ       X11,EDECV$      @#@@@@          E$DITX  AM
)@@G@@@ @@@@          SLJ       IIOUT     @E@@@@          TNZ       PERFSW    AN
)@@G@@        . $T PERFORM MODE     @^@@@@          J         IIER@ @@@@      AO
)@@G@@    E$DIT     IIPKT     @^@@@@          E$SKIP    2   @^@@@@          E$AP
)@@G@@CHAR    '%' @^@@@@          E$SKIP    1   @A@@@@          E$FD2     ('PEAQ
)@@G@@RFORMING')  @^@@@@          E$SKIP    1   @ @@@@          E$FD2     PBLOAR
)@@G@@CK    @^@@@@          E$CHAR    '*' @ @@@@          E$FD2     PBLOCK+2  AS
)@@G@@@^@@@@          E$CHAR    '.' @ @@@@          E$FD2     PBLOCK+4  @A@@@@AT
)@@G@@          LA        A0,PBLOCK+6     @A@@@@          TNE       A0,('     AU
)@@G@@ ')   @ @@@@          J         NOVER     @^@@@@          E$CHAR    '/' AV
)@@G@@@ @@@@          E$FD2     PBLOCK+6  @]@@@@NOVER.      @^@@@@          E$AW
)@@G@@DITX    .   @ @@@@          SLJ       IIOUT     @^@@@@          J       AX
)@@G@@  IIER@[@@@@.     @^@@@@.         II TERMINATION@[@@@@.     @]@@@@IICONTAY
)@@G@@.     @]@@@@          +0@]@@@@          +0@ @@@@          ER        EXITAZ
)@@G@@$     @[@@@@.     @[@@@@.     @]@@@@IIOUT     +0@A@@@@          P$RINT  BA
)@@G@@  (PF 1,8,IIPRT)  @E@@@@          LA,S2     A0,PCT+030        . $P GET PBB
)@@G@@ROG TYPE    @E@@@@          TNE,U     A0,4              . $T DEMAND/BATCBC
)@@G@@H     @ @@@@          J         *IIOUT    @ @@@@          C$OM      COMPBD
)@@G@@KT    @ @@@@          J         *IIOUT    @[@@@@.     @B@@@@.         CHBE
)@@G@@ECK IF ANY OPTION REQUESTED   @[@@@@.     @]@@@@CKREQ.      @]@@@@      BF
)@@G@@    +0@E@@@@          LR        R5,REQCNT         . $P GET REQ COUNT    BG
)@@G@@@B@@@@          LX        X5,(+3,REQLIST-3)     @]@@@@CKST.       @ @@@@BH
)@@G@@          JGD       R5,$+2    @D@@@@          J         CKREQX          BI
)@@G@@  . $ DO KEYIN    @E@@@@          DL        A0,3,*X5          . $ GET REBJ
)@@G@@Q FILE NAME @A@@@@          DS        A0,FILENAME1    @A@@@@          DSBK
)@@G@@        A0,FILENAME2    @A@@@@          LA,U      A0,ASGFILE      @^@@@@BL
)@@G@@          ER        CSF$@ @@@@          JN        A0,CKST   @E@@@@      BM
)@@G@@    TNZ,H1    2,X5              . $T SEE IF STOP PROC @ @@@@          J BN
)@@G@@        SETOPT    @A@@@@          LA        A0,MAINNAME     @^@@@@      BO
)@@G@@    ER        INT$@ @@@@          J         FREEIT    @[@@@@.     @]@@@@BP
)@@G@@SETOPT.     @F@@@@          LX,H2     X1,2,X5           . $P GET OPT LISBQ
)@@G@@T ADD55     @ @@@@          LA        A0,0,X1   @^@@@@          AA,U    BR
)@@G@@  A0,1@ @@@@          DSL       A0,36     @^@@@@          DI,U      A0,2BS
)@@G@@@E@@@@          SA        A1,0,X1           . $ FLIP THE OPTION   @]@@@@BT
)@@G@@FREEIT.     @A@@@@          LA,U      A0,FREEFILE     @^@@@@          ERBU
)@@G@@        CSF$@^@@@@          J         CKST@]@@@@CKREQX.     @E@@@@      BV
)@@G@@    LR        R1,REQCNTX        . $P GET REQ COUNT    @B@@@@          LXBW
)@@G@@        X5,(+2,REQLISTX-2)    @E@@@@          LA        A0,KEYIN        BX
)@@G@@  . $P GET II KEYIN     @C@@@@          SSL       A0,12             . $ BY
)@@G@@      @D@@@@          SE        A0,2,*X5          . $T ANY MATCH  @E@@@@BZ
)@@G@@          J         *CKREQ            . $A YES NO,*RETURN   @E@@@@      CA
)@@G@@    TNZ,H1    1,X5              . $T SEE IF STOP PROC @ @@@@          J CB
)@@G@@        SETOPTX   @A@@@@          LA        A0,MAINNAME     @^@@@@      CC
)@@G@@    ER        INT$@ @@@@          J         *CKREQ    @[@@@@.     @]@@@@CD
)@@G@@SETOPTX.    @F@@@@          LX,H2     X1,1,X5           . $P GET OPT LISCE
)@@G@@T ADD55     @ @@@@          LA        A0,0,X1   @^@@@@          AA,U    CF
)@@G@@  A0,1@ @@@@          DSL       A0,36     @^@@@@          DI,U      A0,2CG
)@@G@@@E@@@@          SA        A1,0,X1           . $ FLIP THE OPTION   @ @@@@CH
)@@G@@          J         *CKREQ    @]@@@@$(4).       @]@@@@REQLISTX.   @^@@@@CI
)@@G@@          '@@STOP'      @#@@@@          +1,0    @^@@@@          '@@LIST'CJ
)@@G@@      @#@@@@          +LOPT   @^@@@@          '@@BRIE'      @#@@@@      CK
)@@G@@    +BOPT   @^@@@@          '@@MONI'      @#@@@@          +MOPT   @A@@@@CL
)@@G@@REQCNTX   +(REQCNTX-REQLISTX)/2     @]@@@@$(4).       @]@@@@REQLIST.    CM
)@@G@@@^@@@@          'ED$STOP'     @#@@@@          +1,0    @^@@@@          'ECN
)@@G@@D$LIST'     @#@@@@          +LOPT   @^@@@@          'ED$BRIEF'    @#@@@@CO
)@@G@@          +BOPT   @^@@@@          'ED$MONITOR'  @#@@@@          +MOPT   CP
)@@G@@@^@@@@          'ED$MONITR'   @#@@@@          +MOPT   @^@@@@          'ECQ
)@@G@@D$MONIT'    @#@@@@          +MOPT   @A@@@@REQCNT    +(REQCNT-REQLIST)/3 CR
)@@G@@      @^@@@@FREEFILE  '@FREE'       @^@@@@FILENAME1 RES       2   @#@@@@CS
)@@G@@          '  . '  @^@@@@ASGFILE   '@ASG,A '     @^@@@@FILENAME2 RES     CT
)@@G@@  2   @^@@@@          '   . '       @]@@@@MAINNAME* +0@^@@@@PCT       RECU
)@@G@@S       031 @ @@@@CPU       EQUF      PCT+026   @ @@@@IOCNT     EQUF    CV
)@@G@@  PCT+8     @ @@@@IIPKT     E$PKT     8,IIPRT   @^@@@@IIPRT     RES     CW
)@@G@@  8   @ @@@@COMPKT    C$OMPK    48,IIPRT  @]@@@@KEYIN     +0@]@@@@IINAMECX
)@@G@@*   +0@]@@@@TIMEST    +0@]@@@@CPUIN     +0@]@@@@IOIN      +0@#@@@@      CY
)@@G@@    END     ___@@@          ER        TDATE$    @A@@@@          ANA     CZ
)@@G@@  A0,TIMEST       @A@@@@          LMJ       X11,*[@@@@*SDFF*@]@@@@ .    DA
)@@G@@      @A@@@@ .        COMMON ERROR ROUTINES     @]@@@@ .          @^@@@@DB
)@@G@@         AXR$.          @^@@@@$(4)     LIT.           @]@@@@$(3).       DC
)@@G@@@A@@@@PF       FORM  12,6,18        .     @]@@@@ .          @^@@@@ .   ADD
)@@G@@SGERR -           @A@@@@ .        ASSIGN ERROR ROUTINE      @^@@@@ .    DE
)@@G@@         CALL IS  @A@@@@ .             LX,U  X10,ASG        @A@@@@ .    DF
)@@G@@         LMJ  X11,ASGERR      @E@@@@ .                  WHERE ASG IS ADDDG
)@@G@@R OF ASG STATEMENT      @]@@@@ .          @]@@@@ASGERR*.    @A@@@@      DH
)@@G@@   S     X10,SX10       .     @A@@@@         S     A0,SA0         .     DI
)@@G@@@A@@@@         L,U   A0,'.'         .     @A@@@@         S,S2  A0,EDPKT DJ
)@@G@@       .    @A@@@@         E$DIT EDPKT           .    @A@@@@         E$CDK
)@@G@@OPY 14,MSG1       .     @A@@@@         L     A0,SX10        .     @A@@@@DL
)@@G@@         LMJ   X11,EMSG$      .     @A@@@@         E$COPY 10,MSG2       DM
)@@G@@.     @A@@@@         E$OCTF 12,SA0        .     @A@@@@         E$DITX   DN
)@@G@@            .     @A@@@@         P$RINT (PF 1,14,PRINT) .   @A@@@@      DO
)@@G@@   ER    ERR$          .      @]@@@@ .   IOERR -@A@@@@ .        I/O ERRODP
)@@G@@R ROUTINE         @^@@@@ .             CALL IS  @A@@@@ .             LX,DQ
)@@G@@U  X10,IOPKT      @A@@@@ .             LMJ  X11,IOERR       @E@@@@ .    DR
)@@G@@              WHERE IOPKT IS ADDR OF I/O PACKET       @]@@@@ .          DS
)@@G@@@]@@@@IOERR*.     @C@@@@         S     X11,SX10       . $P SAVE X11     DT
)@@G@@@A@@@@         E$DIT EDPKT           .    @A@@@@         E$COPY 17,MSG3 DU
)@@G@@      .     @A@@@@         DL    A0,0,X10       .     @A@@@@         LMJDV
)@@G@@   X11,EFD2$      .     @A@@@@         E$COPY 10,MSG4       .     @A@@@@DW
)@@G@@         L,U   A1,2           .     @A@@@@         L,S1  A0,3,X10       DX
)@@G@@.     @A@@@@         LMJ   X11,EOCTF$     .     @A@@@@         E$COPY  6DY
)@@G@@,MSG5       .     @A@@@@         L,U   A1,2           .     @A@@@@      DZ
)@@G@@   L,S2  A0,3,X10       .     @A@@@@         LMJ   X11,EOCTF$     .     EA
)@@G@@@A@@@@         E$DITX               .     @A@@@@         P$RINT (PF 1,14EB
)@@G@@,PRINT) .   @C@@@@         L     X11,SX10       . $P RESTORE X11  @A@@@@EC
)@@G@@         S,H2  X10,SNAPKT+1   .     @A@@@@         L,U   A0,SNAPKT      ED
)@@G@@.     @E@@@@         ER    SNAP$          . $P SNAP ALL REG AND I/O PKT EE
)@@G@@@A@@@@         ER    ERR$          .      @]@@@@$(4).       @^@@@@SX10  EF
)@@G@@   +     0    .   @^@@@@SA0      +     0    .   @A@@@@SNAPKT   'IO PKT' EG
)@@G@@            .     @A@@@@         +     0700006,0      .     @A@@@@      EH
)@@G@@   +     0              .     @A@@@@MSG1     'FAC REJECTED: ' .         EI
)@@G@@@^@@@@MSG2     '  STATUS: ' . @A@@@@MSG3     'I/O ERROR - FILE ' .      EJ
)@@G@@@^@@@@MSG4     '   STATUS:' . @^@@@@MSG5     '  FNC:' .     @]@@@@ .    EK
)@@G@@      @A@@@@ .                  ** FD$BIN **    @]@@@@ .          @E@@@@EL
)@@G@@ .        ROUTINE TO CONVERT 2 WORD FIELDATA NUMBER         @E@@@@ .    EM
)@@G@@     TO BINARY - IF FIELDATA NUMBER IS LESS THAN      @E@@@@ .         1EN
)@@G@@2 DIGITS, IT MUST BE TERMINATED BY A SPACE      @^@@@@ .         (OCTAL EO
)@@G@@05)   @A@@@@ .        CALL IS SLJ  FD$BIN       @C@@@@ .         WITH A0EP
)@@G@@,A1 CONTAINING FD NUMBER,     @C@@@@ .         AND BINARY VALUE RETURNEDEQ
)@@G@@ IN A0      @]@@@@ .          @^@@@@$(2)     LIT.           @]@@@@$(1). ER
)@@G@@      @C@@@@FD$BIN*  +     0              . $H FD$BIN       @C@@@@      ES
)@@G@@   DS    A2,SAVE        . $P SAVE A2, A3  @A@@@@         S     A4,SAV2  ET
)@@G@@      .     @E@@@@         SZ    STATUS         . $P CLEAR SYSTEM STATUSEU
)@@G@@      @D@@@@         L     A2,A1          . $P MOVE FD TO A1, A2  @A@@@@EV
)@@G@@         L     A1,A0          .     @G@@@@          L         A3,A1     EW
)@@G@@        . $P GET FIRST CHAR OF NUMBER     @C@@@@          SSL       A3,3EX
)@@G@@0             .         @E@@@@         SZ    A4             . $P SET OCTEY
)@@G@@AL FLAG           @E@@@@         TE,U  A3,060         . $T IS FIRST CHAREZ
)@@G@@ A ZERO     @E@@@@         L,U   A4,1           . $P SET DECIMAL FLAG   FA
)@@G@@      @G@@@@         SZ    A3             . $P INITIALIZE RETURN VALUE TFB
)@@G@@O 0         @A@@@@FB1      SZ    A0             .     @G@@@@         LDSFC
)@@G@@L  A0,6           . $P GET NEXT CHAR OF FD NUMBER           @E@@@@      FD
)@@G@@   TE,U  A0,5           . $T IS CHAR A SPACE          @A@@@@         J  FE
)@@G@@   $+2            .     @C@@@@         J     FB4            . $A NO YES,FF
)@@G@@FB4   @G@@@@         TNZ   A0             . $T HAS ALL 1ST WORD OF NUM BFG
)@@G@@EEN CHECKED @C@@@@         J     FB3            . $A NO YES,FB3   @E@@@@FH
)@@G@@         AN,U  A0,060         . $P CONVERT CHAR TO BINARY   @E@@@@      FI
)@@G@@   JZ    A4,FB2         . $T IS OCTAL FLAG SET        @C@@@@            FJ
)@@G@@                  . $A NO YES,FB2   @G@@@@         MSI,U A3,10          FK
)@@G@@. $P MULTIPLY PREVIOUS VALUE BY 10        @C@@@@         J     FB25     FL
)@@G@@      . $J FB25         @E@@@@FB2      TP    A0             . $T IS OCTAFM
)@@G@@L NUM = OR > 0    @C@@@@         J     FBERR          . $A YES NO,FBERR FN
)@@G@@@E@@@@         TG,U  A0,8           . $T IS OCTAL NUM < 8         @C@@@@FO
)@@G@@         J     FBERR          . $A YES NO,FBERR @G@@@@         LSSL  A3,FP
)@@G@@3           . $P MULTIPLY PREVIOUS VALUE BY 8         @E@@@@FB25     A  FQ
)@@G@@   A3,A0          . $P ADD THIS CHAR TO VALUE   @C@@@@         J     FB1FR
)@@G@@            . $J FB1          @E@@@@FB3      L     A1,A2          . $P GFS
)@@G@@ET SECOND WORD OF FD NUM@G@@@@         L     A2,('      ')  . $P LOAD NEFT
)@@G@@W SEC WORD WITH BLANKS        @C@@@@         J     FB1            . $J FFU
)@@G@@B1          @E@@@@FB4      L     A0,A3          . $P PUT BINARY VALUE INFV
)@@G@@ A0   @E@@@@         DL    A2,SAVE        . $P RESTORE A2, A3           FW
)@@G@@@A@@@@         L     A4,SAV2        .     @C@@@@         J     *FD$BIN  FX
)@@G@@      . $E RETURN       @]@@@@ .          @E@@@@FBERR    TZ    PERFSW   FY
)@@G@@      . $T IS THIS PERFORM MODE     @C@@@@         J     FBER2          FZ
)@@G@@. $A NO YES,FBER2 @E@@@@         P$RINT (PF 1,4,FBEM) . $P PRINT ERROR MGA
)@@G@@ESSAGE      @E@@@@FBER2    L,U   A0,43          . $P SET STATUS TO 43   GB
)@@G@@      @A@@@@         S     A0,STATUS      .     @E@@@@         SZ    A0 GC
)@@G@@            . $P SET RETURN VALUE TO 0    @A@@@@         J     *FD$BIN  GD
)@@G@@      . $E  @]@@@@$(2).       @A@@@@SAVE     RES   2              .     GE
)@@G@@@A@@@@SAV2     RES   1              .     @C@@@@FBEM     'BAD OCTAL STRIGF
)@@G@@NG INPUT  '  .          @^@@@@         END        .   ___ 14L STRING INPGG
)@@G@@UT  '  .          @^@@@@         END        .   ___ 14,MSG1       .     GH
)@@G@@@A@@@@         L     A0,SX10        .     @A@@@@         LMJ   X11,EMSG$GI
)@@G@@)@@[M@K[#@L@@@@@@@H8@@@[C^D@@@/@K@@J+@@@^[C@D@@@/K@K@@(@E@@@N^9@@@RAU@@[GJ
)@@G@@@@@@@@AA@@@@)@E[M@^C^^@K@@@@@@(@@@@C'^@@ ICWD@@@/K@K@@(@@@@@[?T@@@+?D@@@GK
)@@G@@C8@@@*N@0@@G[^D@@@AB@@@@)@O[F@[#@K^G[^[][@@@@@@@R^K@@@/K@@@,*^@@^@M#W)@@GL
)@@G@@N8K@@VR#K@^]&;@@@[R;@@@[/K@K@@AC@@@@)@X[M@[@^@@@@@@@@@O;@@@E/K@@@YOOL@@@GM
)@@G@@/K@@@&(O[@@@C@@@@H!@K@@GGSL@@[CWL@@[ @@@@GAD@@@@)@$[F#@L][^K0^K0^K)LK)M@GN
)@@G@@R8K@@G @@@@G'=@@@@[@@@@@G@@@@@[^K@^@K8@@@[C@@@@@[@@@@@AE@@@@)@0[F#@L#@KKGO
)@@G@@0^[#@K@@@@@@M@-)@@N@K@[#R@)@^@&8K@@[R@K@@DR 0@^@M@-)@@N@K@@@R@)@^@AF@@@@GP
)@@G@@)@9[U[@@[@@@R)-@@@/#0@[PC31@@@O8K@@[O*L@@@R@K@@AR[)@@['^@@ SCWD@@@[?B@@@GQ
)@@G@@C)C@@[AG@@@@)[^[U^@@K@@@A)1@@@P@0@@DR@0@@]/@@@[N;?@@@[ @@@@GO8)@@[O8K@@]GR
)@@G@@8A0@[BC@M@@@O@)@@DAH@@@@)[J[M^[@^@K@@@@@@@C:5@@@R[K@@['^@@ -CWD@@@/K@@[KGS
)@@G@@ )[@@@/K@@[P8A0@[DO8K@@[O0-@@@AI@@@@)[T[MK^@^@K[@@@@@@/K@@[3(@@@@['^@@^*GT
)@@G@@CS @@@/@@@]H;C@@@ C= @@@8A0@[W/#0@#BO9K@@[AJ@@@@)[<[U^@^@@@@&80@@[O@0@@BGU
)@@G@@R)5@@@&;@@@[O#@@@D/K@@[0:) @@@C)[@@@/K@@[;%=[@@@C= @@@AK@@@@)[,[U[@K@@@@GV
)@@G@@N0P@@@&80@@[O@0@@BR)5@@@&8)@@@R@)@@E/K@@#B8A0@[WO9K@@[M@/)@@N0P@@@AL@@@@GW
)@@G@@)[9[UK@@@@@@C]2@@@*@@@@HC]'@@@+=[@@@C8@@@[O8)@@[C]+@@@O@)@@DR)-@@@/K@@[0GX
)@@G@@M@2)@@AM@@@@)]^[U@@^@K@@'^@@^7CS @@@/K@@[0[]3@@@*@@@@H+= @@@C8@@@[O80@@[GY
)@@G@@[]<@@@O@0@@BR)5@@@AN@@@@)]J[MK[@[@[@@@@@@@/K@@[0:) @@@C)[@@@/K@@]*%=[@@@GZ
)@@G@@C= @@@/K@@]-()[@@@/K@@]-(@@@@[AO@@@@)]T[U@@K@@@@R)>@@@R80@@G @@@@G/K@@[0HA
)@@G@@M@/)@@N0L@@@&80@@[O@0@@BR)5@@@&;@@@[G@@@@DAP@@@@)]=[U[@@@@@@(=[@@@ @@@@SHB
)@@G@@ @@@@RO;@@@[C]+@@@O@)@@DR)-@@@/K@@[0M@<)@@N0P@@@O@)@@BAQ@@@@)]\[V@[@@^@@HC
)@@G@@R)5@@@C#]@@@/@K@]9+=[@@@C8@@@[O8)@@[C]2@@@/@K@]5+=[@@@C8@@@C/K@@]9AR@@@@HD
)@@G@@)]'[U@^@@K@@/@K@[0+= @@@C8@@@[O80@@[[]3@@@/@K@#]+= @@@C8@@@CO80@@[[]<@@@HE
)@@G@@O@0@@BAS@@@@)# [MK[@K[#@KK@@@@O9K@@]/K@@^](@@@@UA[K@@XC$>@@@8A0@#E/#0@ %HF
)@@G@@C35@@@/K@@[0[##@@@AT@@@@)@X@I@)@@@@@)#J@;#@K@K@@@@@@@@(@@@@['^@@^7CS @@@HG
)@@G@@ @G@@@G@@@@BC)G@@@C@@@@X@@@@@@AU@@@@)#Q[V@^@@[@@O8)@@[/K@@#%(=[@@@ @@@@SHH
)@@G@@ @@@@RC]+@@@O@)@@DR)-@@@/K@@#_()[@@@/K@@#_AV@@@@)#-[M^@@K@@@@@@@@@C@@@@ HI
)@@G@@C#]@@@/@K@#%+=[@@@C8@@@[O8)@@[C]2@@@/@K@#&+=[@@@C8@@@CAW@@@@)#:[N#@KK@^@HJ
)@@G@@^@@@@@/@K@#9+= @@@C8@@@C/J)@^]H;)@@[O8K@@[[]-@@@'^@@^RH8@@@]H@@@@XAX@@@@HK
)@@G@@)#5[U[@[@[@@O9K@@[/J)@^]H;)@@[[#[@@@/@K@#_+= @@@C8@@@[/J)@^]H;)@@[O8K@@[HL
)@@G@@[]1@@@AY@@@@)^@[F@K]=@2^@]A@+^@8-@M@C/@@@(/,0@@@CWD@@@/,0@@@9?@@^#/,0@@@HM
)@@G@@C/@@@@/K@@ %8A0@#NAZ@@@@)^D[F]@CK)C^C@-]@L#@K@@@C8K@@6C8@@@Y/,0@@@C/@@@[HN
)@@G@@/,0@@@C/@@@)/,0@@@CWD@@@/,0@@@BA@@@@)^M@:]@!]@5#@L][L][O@@@@)@Y@Q@)@@@@@HO
)@@G@@OT HAVDOES N'=@@@@'=@@@@R#@@^ /,0@@@/,0@@@BB@@@@)@)[Y@)@@@@@^@@@@@C@@@@@HP
)@@G@@K@@@@@)@@@@@T PTRSUAL SEOR MANORDS FERVE WGH RESE ENOUBC@@@@)@:[Y@)@@@@@HQ
)@@G@@@@C@@@@@K@@@@@)@@@@[@@@@@]@@@@@^@@@@@C@@@@@K@@@@@)@@@@[@@@@@]@@@@@BD@@@@HR
)@@G@@)@6@6@)@@@@@)^R@UK0^@@@@R)L@@@R@K@@X@@@@@@@@@C@@@@@K@@@@@)@@@@[@@@@@]@@@HS
)@@G@@@@^@@@BE@@@@)^U[M^G[@K^[#@L@@@C@K@@G/[K@^&+[G@@$8#@@^-/[@K^RO8K@@[[[L@@@HT
)@@G@@)[G@@$C[[@@@O@K@@BBF@@@@)^=[N#@KK^@[@^@@@@8 )@^,O8K@@[/])@^5C%-@@@R@K@@AHU
)@@G@@@@@@@@/K@K^R8#@@^-O0X@@]G@K@@XBG@@@@)^,[M^@K[@^@@@@@@@@@@@@@/K@K^* @@@@[HV
)@@G@@8 )@^,O8K@@[/K@K^*:S[@@@/@K@^3;CK@@ C=L@@@BH@@@@)^8[M^[@@K[@@@@@@@/K@K^7HW
)@@G@@:S[@@@/^K@ ];CK@@ C=L@@@O8K@@[8 )@^//])@ #C%-@@@R@K@@ABI@@@@) ][N@[@K@^[HX
)@@G@@@@@@@@8 )@ C/K@K^7:S[@@@O8K@@[O8K@@[8 )@ B/])@ GC2-@@@O8K@@[8 )@^/BJ@@@@HY
)@@G@@) G[MK[][@K[@^@@@@/K@@ KOQC@@@/K@@ Q(OC@@@/K@K I:WC@@@RA@@@@@@@@@@/K@K^7HZ
)@@G@@ @@@@[BK@@@@) Q[MK[][SK^@K)P@@OOL@@@'=@@@@(O[@@@/K@K S/K@@ X%W[@@@R^K@@@IA
)@@G@@@@@@@@/K@K I @@@@CBL@@@@) )[N@^C 1@K[][OK@/K@@ <OOL@@@'=@@@@(O[@@@/K@K -IB
)@@G@@/K@@ &%W[@@@R^K@@@@@@@@@/K@@ UBM@@@@) %[MK^G[@K@K@@@@@(WC@@@/K@@D[:*C@@@IC
)@@G@@C8@@@ 8A0@ 0O'@@@]NTC@@[A]@@[X/#0@E&CV8@@@BN@@@@) 4[F@@^G[^G[[][O@@@@@@@ID
)@@G@@'=@@@@2@^)@@R[@@^AN@K@[W;?@@@M;*K@@MC*S@@[C*C@@@/K@@AHBO@@@@) .@:#@L@[@@IE
)@@G@@)@/@Y@)/S#@^@@@@@@@@]@@]@@@@A>@@[@@[/K@@AE'^G@@@C^^@@@'^@@AUP[@@^BBP@@@@IF
)@@G@@)@_[A@<1)G@K/S#@^JA@0[#1)G@K@@@@^@@[@@@@A>@@[@@^@@@@A>@@^@@^@@@@B@@@#@@#IG
)@@G@@@@@@B@BQ@@@@)[B[A@<1)G@K/S#@^JA@0[#1)G@K@@@@^@@#@@@@B@@@^@@]@@@@B@@@[@@#IH
)@@G@@@@@@B@@@[@@]@@@@A>BR@@@@)[J[A@<1)G@K/S#@^JA@0[#1)G@K@@@@#@@^@@@@A>@@]@@^II
)@@G@@@@@@A>@@#@@[@@@@A>@@]@@[@@@@B@BS@@@@)[R@"@<1)G@K/S#@^JA@0[@@)A]@E@@@@@@@IJ
)@@G@@@@@@@@@@@@@K@@@@CK@@#@@]@@@@B(@@]@@#@@@@A>BT@@@@)A#[M@^[@^[@@@@@@@/K@@E:IK
)@@G@@8A0@ 0O'@@@]/K@KA]'^@@AJC*S@@[C?C@@[NXS@@[O[K@@BRPS@@[BU@@@@)AH[N@K@K0^KIL
)@@G@@@^G[@@')I@[<W8K@@A;GK@@=L8@@@[8LK@ANC5X@[Y&9K@@[@@@@@@/K@@AE'^@@A]BV@@@@IM
)@@G@@)AR@UK^@@@@@)[Y@6@)@@@@@[5P@@@ @@@@@@@@@@@0@@@@@ @@@@@_@@@@@/K@KAJ8LK@ANIN
)@@G@@G8@@@[BW@@@@)[=@,@)@@@@@)AU@+@@@@@@@O@K@@DROS@@@C*S@@[@@@@@@[-P)@@[>P@@@IO
)@@G@@[(P@@@[!P@@@[1P@@@BX@@@@)AY[U@[@@@@@!@@@[CC@@@[BN[K@[C@@@@@@/K@KAUNX8@@@IP
)@@G@@NYC@@[C,C@@[O@)@@BRO*@@[C!8@@@BY@@@@)A([V@@K@^@@H8@@@[C@@@@N8LK@A2&8)@@[IQ
)@@G@@&8K@@[N[K@[B'^@@AJN[K@[CC@@@@OR[K@@]/K@@A\BZ@@@@)A4[M^G[@@K0^@@@@@G'@@@[IR
)@@G@@')H@[\W8@@@A;G@@@=H8@@@[C@@@@OG90@@[')H@[(W8@@@A;G@@@=CA@@@@)A"@N@K@@@@@IS
)@@G@@)[(@"@)@@@@@[5M@@@C-L)@@C>L@@@C(L@@@C!L@@@C1L@@@C5L@@@/K@KA>8LK@A2CB@@@@IT
)@@G@@)[0@,@)@@@@@)B@@+@@@@@@@!@@@[CC@@@[BN[K@[C@@@@@@[-M)@@[>M@@@[(M@@@[!M@@@IU
)@@G@@[1M@@@CC@@@@)B^[V@@K@@@@C@@@@NH'@@@[H90@@[G]@@[CG[0@[BN[K@[B'^@@AJN[K@[CIV
)@@G@@C@@@@OR[K@@]/K@@BECD@@@@)BJ[U@@@@@@@&8)__"&8K__"O@)@@GW8@@@A;G@@@=H8@@@[IW
)@@G@@C@@@@OO@K@@GW8@@@A;G@@@=H8@@@[CE@@@@)BU[N@@^G[@@@@@@@@;G@@@=H8@@@[C@@@@OIX
)@@G@@H90@@[')H@[5W8@@@A;G@@@=H8@@@[C@@@@N8LK@BVCF@@@@)B=@%K0^^[@@)[5@&@)@@@@@IY
)@@G@@C(L@@@C!L@@@C1L@@@C5L)@@/K@KB@8LK@BVH'@@@[')H@[;W8@@@ACG@@@@)[9[A@)@@@@@IZ
)@@G@@)B(@M@&8K@@[@@@@@@[-M@@@[>M@@@[(M@@@[!M@@@[1M@@@[5M)@@C-L@@@C>L@@@CH@@@@JA
)@@G@@)B:[U@^@@@@@W8@@@A;G@@@=G90@@[H8@@@[C@@@@N8L0@B1 @@@@P @@@@S @@@@T @@@@RJB
)@@G@@ @@@@QCI@@@@)B6[N#@K@@K^@@@@@@8M@@C@8L0@B1;,)@@=G]K@@QT'K@@E9+)@@SS')@@EJC
)@@G@@ @@@@S+;@@@J')H@][CJ@@@@)C@[U@@@@@@@;G@@@=H'@@@[H8@@@[C@@@@O&8)__"O@)@@GJD
)@@G@@W8@@@A;G@@@=H8@@@[C@@@@OG]@@[CCK@@@@)CF@%K0^^[@@)][@&@)@@@@@C:[@@@C\[@@@JE
)@@G@@C3[@@@C7[@@@/K@KB(8M@@CB;IK@@A')H@]BW8@@@ACL@@@@)] [A@)@@@@@)CK@M@&8K@@[JF
)@@G@@@@@@@@[++@@@[&+@@@[%+@@@[,+@@@[2+@@@[6+)@@C<[)@@C$[@@@CM@@@@)CM[M[@@@@@@JG
)@@G@@@@@@@@;,K@@AW8@@@A;G@@@=G90@@[H8@@@[C@@@@N8L0@CQ @@@@R @@@@Q @@@@PCN@@@@JH
)@@G@@)CW[N#@KK^G[@@@@@@;G@@@=H8@@@[C@@@@OH'@@@[G]@@[C @@@[BW]K@^C8L0@CQC])@@RJI
)@@G@@')H@]HCO@@@@)C&[M@K^@[@@@@@@@@8M@@C1&8)__"N[0@@GN'@@@E/G@@C,/@@@C,H8@@@EJJ
)@@G@@C@@@[CO@)@@GW8@@@ACP@@@@)C0[N@@@[#@K@@@@@@')H@]N)'0@@0W')@@E;I)@@=W8@@@AJK
)@@G@@;G@@@=H'@@@[H8@@@[C@@@@O/K@@C;CQ@@@@)C'@;@^@[@@@)]H@Q@)@@@@@)2-@@@)6-@@@JL
)@@G@@/K@@C\C])@@P @@@[BN]@@[B/K@KCK(@@@[B/K@@C\CR@@@@)]J[Q@)@@@@@@@@@@@[<]@@@JM
)@@G@@[$]@@@[:]@@@[\]@@@[3]@@@[7])@@)+-)@@)&-@@@)%-@@@),-@@@CS@@@@)D[[U^G[@@@@JN
)@@G@@T8@@@]C?C@@@H\8@@@M@-)@@N@K@@GG8@@@]T8@@@]C?C@@@R@)@^D&8K@@[R@K@@CCT@@@@JO
)@@G@@)DG@UK0^K0^@)#.@Q@)@@@@@)DJ@N#@L@@@@8A)@DMCV)@]U@@@@@@@@@@@@A]@@#"[#0@#.JP
)@@G@@O]@@@GCU@@@@)DL[F@K0^K0^K^G[@@@@@@@@*@@@@HW8@@@A;G@@@=H8@@@[GO@@]T/@@@DYJQ
)@@G@@CW@@]TR]@@[X/K@@E<CV@@@@)DU[M[@K0^K0^@@@@@*@@@@HW8@@@A;G@@@=H8@@@[GO@@]UJR
)@@G@@CW@@]U/K@@EW?@K@@GC^T@@@G8@@@[CW@@@@)D=[M[@ES]CS]C]@@@(WC@@@O'@@@]/K@@D_JS
)@@G@@8A0@D?C\0@]TR'@@]T/K@@EW?@K@@GC@K@[^G8@@@[CX@@@@)D,[F@@^G[^G[^@@@@@@@@@@JT
)@@G@@2@^)@@/@@@D%R[@@^AN@K@[W;?@@@M;*K@@MC*S@@[C*C@@@/K@@D.CY@@@@)D7[F][P#@L@JU
)@@G@@[@K^[#@K@@@@CW@@]T/K@@D%'^@@A]/K@@D%'^G@@@C^^@@@'^@@AUP[@@^B'=@@@@CZ@@@@JV
)@@G@@)E@[##@L#@L#@L#@L#@L#@K()C)@@@8A0@EDR'@@]TC\0@]T[P@@]UKO0@]U[OK@]TKO@@]TJW
)@@G@@CW0@]UDA@@@@)EC[V@[@@@@@[OS@@@GOS@@@[?*@@@G8)@@[W8K@@A;GK@@=H8K@@[/@K@ENJX
)@@G@@K?C@@@O'@@@]/K@@DKDB@@@@)EN[M@@^[#@K@@@@@@CO@@]U/K@@EB[PC@@[GPC@@[[!S@@[JY
)@@G@@G9K@@[W9@@@A;H@@@=H9@@@[K?8@@[DC@@@@)EX[M@[#@L#@L@@@@@CWC@@[/K@@AER]@@#"JZ
)@@G@@C#0@#.N[@@@GG8@@@[*@@@@HW8@@@A;G@@@=H8@@@[DD@@@@)E$[U@@@@@@@&;@@@[G@@@@BKA
)@@G@@N@0@@HK@@@[#N@K@[#[^B@@@C@@@[^N[@@@HH@K@@GCSS@@[H@@@[#DE@@@@)E2[M@^G[@^GKB
)@@G@@[@@@@@[@@@#_C@E@@@M#H)@@N8K@@VR#K@^]&;@@@[R;@@@[M#H)@@&;K@@[C@K@@DDF@@@@KC
)@@G@@)E/@M()C)@@@)#_@6@)])@@@@@@@@@ECORD:@@@@@R@@[@@[@@K@@@@@[@@@@@@@@@/K@K@@KD
)@@G@@R')@#_DG@@@@)^ @,@+=]TK@*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@]TDO]"K@KE
)@@G@@@@]@@[@@]@@/@[I@@@DH@@@@@@^@@ @@D@@S@@9@@[@@.@@@@@@@@@@@@@E")@@@@@)@@@@@KF
)@@G@@@@@@^EEDIT$       EDITR$      ECHAR$      ECOL$       ESKIP$      ECLR$ KG
)@@G@@      EDPKT       EFD2$       EOCTV$      EDECV$      EFD1$       ECOPY$KH
)@@G@@      EPACK$      EDITX$      ECOLN$      EMSGR$      C17         LAST$DKI
)@@G@@      MCORE$      PRINT       PRINT$      ERR$        C1          C9    KJ
)@@G@@      ART         @@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[##@L]@ ]@C(@@-@A-)C-@@)@@@/K@@@J:@@@@@C@@@@ KM
)@@G@@/,0@@@R')@@@9*@@@@9?@@@@A]0@@^AA@@@@)@C[F#@L@^G[]&@+^@+@-)C@/KF@@@R]0@@^KN
)@@G@@/K@@@#/,0@@@R')@@[[@@@@[C@@@[#'^@@@L*@@@@@AB@@@@)@L[]K0^K)@K^C@^G[^[]@@@KO
)@@G@@@@@@@@C@@@@]/K@K@L%@@@@AC@@@@[/K@K@L*@@@@@ @@@@@@@@@@@AC@@@@)@T@N]@P@@@@KP
)@@G@@)@@@6@)JA@)@@@@@@@______@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[/K@@@#[@@@@@AD@@@@KQ
)@@G@@)@A@I@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KR
)@@G@@@_@@@]AE@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@ @@D@@A@@P@@[@@T@@@@@@@@@@@@@@V)@@@@@)@@@@@KT
)@@G@@@@@@@BRDA         USENME      NAMED2      DF$AMR      TF$SQW      ARTKEYKU
)@@G@@      BLDT$F      @@[@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[Q@WG[@[@^G[[@@8KK@@FKV
)@@G@@N@T@@@R]K@@U9?B@@@/K@@[K!90@@UC!'@@@O90@@]R[0@@EAA0@@@AA@@@@)@E[Q@W@K@]=KW
)@@G@@@CC@@@/K@@@R1@G@@@R#0@@GO;@@@@T8@@@^R#K@@GR#D@@@/K@@@D9/D)@[/K@@[QAB@@@@KX
)@@G@@)@O[Q@SK)][#@KK[@@/K@@@U9/D)@[/K@@[Q0@D@@[R]K@@V9?B@@@R Z@@['=@@@@ @@@@HKY
)@@G@@R#@@@HAC@@@@)@Y[I@SK0^^[@^C[^@@@@@@@/GK@[S'^@@@@G;K@@[/K@@@?8^0@@= @@@@TKZ
)@@G@@R[)@@WO90@@]R T@@@AD@@@@)@$[Q@S[@ES]@@@@@@;C@@@M;*@@@MR#@@@AABA@@@R;@@@]LA
)@@G@@/K@@@+ABQ)@@A\&@@@AZA@@@O[0@@UAE@@@@)@1@&@T#@K@@)[K@&@WG[^C[O[#@K@R#@@@YLB
)@@G@@/K@@[S'=@@@@R#@@@X/,5@@@A#A@@@R#@@@[AFA)@@AF@@@@)[O@"@WC[O[#@L]@OK)AK0^@LC
)@@G@@@@@@@@@@@@@@/K@K@@A#@@@@R;@@@['=@@@@R#@@@Z/K@@[S'=@@@@AG@@@@)@@[Y@-@@@@@LD
)@@G@@N CALLOWED ORS ALLRAMETE 25 PAMUM OF- MAXIERROR EDITOR/K@K@@@@@@@@AH@@@@LE
)@@G@@)@F[Y@)@@@@@- CALLERROR INE   UBROUTLLED SOAD CAE TO LAILABLORE AV- NO CLF
)@@G@@ERROR AI@@@@)@Q[I@)@(@@O)#ES[>@*@@@@@[D@@F@[C@@#@@[@@5@@#@@@@@#@@@FINED LG
)@@G@@S UNDETINE IED ROUAJ@@@@)@Z@I@+)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@[A@@OAK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@ @@D@@B@@R@@[@@V@@@LJ
)@@G@@@@@@@@@@@@@@)@@@@@@@@@[V@@@@@)LD$TBL      SLT$        LOAD$       ENTRY$LK
)@@G@@      GETSYM      PRINT$      FATAL       CALL$WK     @@#@@@@@@@@@@@@@@@LL
)@@G@@)@@[Q@/G]@^@K]=@K@R'@@@[:8)@@IR'@@@@/K@@]8!8)@@P/K@@]8?8)@@[R3'@@@R7%@@@LM
)@@G@@AA0@[JAA@@@@)@E[A@/G]^[#@-]@H@^G]^G]@@@@@@R#@@[N/K@K[J:80@@K/C@@@O'=@@@@LN
)@@G@@R#@@[M/K@@@Q*@@@@]AB@@@@)@M[I@/C@4@K0C^[#@-#@)@@C[@@@IA#K@@WR#Y@@ /K@@@_LO
)@@G@@%80@@KA#@@@]R;@@@[/G@@]6'=@@@@AC@@@@)@V[I@9#@)()K-@CC@)@@@@@R#)@@K/K@@];LP
)@@G@@*@@@@I/K@@@;:8)@@['=@@@@R;@@@UAF@@@ZR;@@@AAD@@@@)@=[A@/G]^[#@-#@-#@-#@-#LQ
)@@G@@@)@@@@K8@@@[R#CK[KA#K@@#R#K@@+A#K@@^R#K@@=/K@@@;*W@@@ZAE@@@@)@?[A@/G]^G]LR
)@@G@@^G]^C[OG]^G]^G]@@@R;@@@K9*@@@%R#K@@^R#@@@#'=@@@@A#CK[KOF@@@#ABK@@#AF@@@@LS
)@@G@@)@4[A@/G]^G]^@()K-@G)C]A[@@@@@ @@@@#/K@@@/'^@@]^'=@@@@R;@@@&/@@@@;RF@@@#LT
)@@G@@A3@@@(AG@@@@)@/[I@/G]^[#@)K[@^@@@@@@/K@@# %80@@C/K@@[':8)@@D/K@@[(:8)@@[LU
)@@G@@/K@K[J')I@]-R#K@@#AH@@@@)[ [A@/[#@)ES^CK#*@-)K@@@@@@@@R#@@@#R#)@@K/^)@];LV
)@@G@@'=@@@@R;@@@UC[@@@IA#K@@#')I@]GAI@@@@)[H[A@/G]^G][#@-#@-@ES^CK#@@@@'=@@@@LW
)@@G@@R;@@@&/@@@[QRF@@@#A3@@@(R;@@@C9*@@@%A#K@@^AJ@@@@)[P[I@/[#@-#@)@K0C@@@@@@LX
)@@G@@R;K@@AA#@@@<O;@@@[*@@@@HW8@@@W;G@@@6A#@@@+R#@@@#'^@@]^AK@@@@)[Y[A@/G]^G]LY
)@@G@@^G]^G]^G]^G]@()K@@D8@@@UO#K@@GA#K@@=R#K@@^ @@@@>A#K@@WR#Y@@ AFK@@ZAL@@@@LZ
)@@G@@)[&[I@/C]^[#@)K^G][#@)@@ @@@@HAFK@@ZR;K@@AA#)@@@/K@@[#%80@@D/K@K[J/^)@];MA
)@@G@@'=@@@@AM@@@@)[\[I@9#@-#@)()K-@MC@)@@/K@@[\?8K@@O/K@@];!8)@@]'=@@@@R;@@@UMB
)@@G@@A#@@@WR#H@@ O;K@@[AN@@@@)[8[I@/G]^@K@^G]^C])@@@@'^@@@@9*)@@@R'@@@[:8)@@DMC
)@@G@@ @@@@C/K@@[#%80@@D/K@@[/R#)@@@AO@@@@)][[A@/G][@]&[]A[]^[UA[@@@@@@@RB@@@(MD
)@@G@@/,0@@@*4@@@(R')@@&@@@@@@/K@@[#R;0@@C9?)@@@AP@@@@)]D[A@/G]^C]4@K)GK)HK)IKME
)@@G@@)J@@@@R#K@@@R#K@@@R#K@@@R#K@@@ @@@@H/K@K]^/,0@@@%C@@@#AQ@@@@)]L@"@/C^^C^MF
)@@G@@OC^=C^4C ^C OC )@@@@@@@@R#K@@@R#K@@@R#K@@@R#K@@@R#K@@@R#K@@@R#K@@@AR@@@@MG
)@@G@@)]S@"@/C 4CA^CAOCA=CA4CB^CBK@@@@@@@@R#K@@@R#K@@@R#K@@@R#K@@@R#K@@@R#K@@@MH
)@@G@@R#K@@@AS@@@@)]Z[A@/CB=CB1]@1]@5]@9]@.][@@@A#K@@@A#K@@@A#K@@@A#K@@@A#K@@@MI
)@@G@@/S@@@@R#K@@@R#K@@@AT@@@@)]$@"@/C^OC^=C^4C ^C OC =C 0@@@@@@@@A#K@@@A#K@@@MJ
)@@G@@A#K@@@A#K@@@A#K@@@A#K@@@A#K@@@AU@@@@)],@"@/CA^CAOCA=CA4CB^CBOCB)@@@@@@@@MK
)@@G@@A#K@@@A#K@@@A#K@@@A#K@@@A#K@@@A#K@@@A#K@@@AV@@@@)]5@"@/CB2&[]^^]A[]^^E^^ML
)@@G@@MA[@@@@@@@@@R#@@[P'=@@@@'=@@@@R#@@[O/,0@@@R')@@0A#K@@@AW@@@@)]/[I@/CCO@*MM
)@@G@@CKL*@O0C^CC)'=@@@@@@@@@@K@G@@UPFPPKT/K@@#^'=@@@@C8@@#[[@@@##'=@@@@AX@@@@MN
)@@G@@)# @Y@/G]^CCOCC)@@)@]@,[@@@@@@C1    XXXXXX@@@@@@@@@@@@@@@@@@'=@@@@'=@@@@MO
)@@G@@R#@@[QAY@@@@)@B[Y[@@@@@@C12   C11   C10   C9    C8    C7    C6    C5    MP
)@@G@@C4    C3    C2    AZ@@@@)@M[Y[@@@@@@            C$FILEZ2    Z1    C18   MQ
)@@G@@C17   C16   C15   C14   C13   BA@@@@)@X[Y[@@@@@@      C$FILE@@@@@@@@@@@@MR
)@@G@@@@@@@@@@@@@@            @@@@@@@@@@@@      BB@@@@)@*[Y[@@@@@@ILE.,/P  C$FMS
)@@G@@@ASG,U      ILE. .X  C$F@ASG,A@@@@@@@@@@@@@@@@@@@@@@@@BC@@@@)@3[Y[@@@@@@MT
)@@G@@AM ***TO CF$ASSED MBER PENT NUD SEGMINVALIROR - *** ER.     //300 BD@@@@MU
)@@G@@)@"[Y[@@@@@@INVALIROR - *** ER**    FILE *OGRAM T A PR IS NOC$FILEROR - MV
)@@G@@*** ERBE@@@@)[D[I[@@@/S]@@/S]@^@@@@@@@@@@@@@@@@@@@@@@@M *** O CF$ASSED TMW
)@@G@@ODE PATION CD FUNCBF@@@@)[M@,[])O])O])@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MX
)@@G@@@[D@[A@[C@@"@[D@@5@@ @@0@@^@@?BG@@@@@@@@@@/G]^[#@-]@H@^G]^G]@@@@@@R#@@[NMY
)@@G@@/K@K[J:80@@K/C@@@O'=@@@@R#@@[M/K@@@Q*@@@@]AB@@@@@@^@@D@@H@@=@[P@@[@[T@@@MZ
)@@G@@@@@@@@@@@@@@)@@@@@)@@@@@)@@@@@)@@@@@)@@@@@@@@@#C@@@@[RLAST$I      LAST$DNA
)@@G@@      PGMSW       CSF$        PFS$        MCORE$      IOW$        PFWL$ NB
)@@G@@      PFI$        PFD$        PACKC1      IOERR       C1          C2    NC
)@@G@@      C3          C4          C5          C6          C7          C8    ND
)@@G@@      C9          C10         C11         C12         C13         C14   NE
)@@G@@      C15         C16         C17         C18         Z1          Z2    NF
)@@G@@      ASGERR      PRINT$      ERR$        SNAP$       CF$AM       @@B@@@NG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NI
)@@G@@)@@[F]@ #@L#@K^@K0^@@@@@C0E@@][@@@@]C?E@@@A@)@[KO8)@@]R@)@@E @@@@#AA0@@[NJ
)@@G@@ @@@@@AA@@@@)@D[F@^[]@D#@K()C)C@@@@@C8@@@[/K@@@UA@)@[KR8)@@=[@@@@@C@@@@@NK
)@@G@@/K@@@Q%8@@@A/@@@@LAB@@@@)@M[F#@L]@H@K[]@L@K0^@@@R@)@@E[@@@@@/@@@#H'^@@@@NL
)@@G@@9?E@@#/K@@@U/K@@#J(@@@@@[@@@@@AC@@@@)@V[U@K@@@@@O;@@@[O;@@@[*@@@@HW8@@@ANM
)@@G@@;G@@@=C@]@@@A@)@[IO8)@@]:0E@@]C8@@@[O8)@@#AD@@@@)@&[M@@K[]@G@@@@@@(@@@@@NN
)@@G@@C8@@@[A@)@[JO8)@@]:0E@@]C8@@@[O@)@[]O8)@@#R@)@@EN@)@@GAE@@@@)@0[F]@H@K^CNO
)@@G@@[L@^C[OC[)@@'=@@@@[@@@@@O;@@E.[@@@[HG8@@@[C@@@@@/K@@@9*@@@[H[@@@@@AF@@@@NP
)@@G@@)@9[F@K^C@@@K0^@@@@@@@@@R@K@@>&8)@@[O8)@@[[@]@@@T8@@@AC@@@[[N@K@@@R@)@[HNQ
)@@G@@'^@@]EAG@@@@)[][N#@KK[@K^@@@@@[@[@@@T8@@@]C@[@@@R@K@[H'^@@]X/K@@[GM@-)@@NR
)@@G@@/K@@[B%8K@@[C@K@@]AH@@@@)[G[N]@W@K^G[^@@@@O8K@@[C^[@@@R@K@[H[@@@@#/@@@['NS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@/,0@@@AI@@@@)[Q[MK0^@[]@@K0^@@C@K@@]N@K@@H[@K@@@NT
)@@G@@O;K@@[*@@@@IW8K@@A;GK@@=C@K@@GR@)@@>&8K@@[AJ@@@@)[)[MK[@K^@@@@@@@@*@@@@HNU
)@@G@@W8@@@G;G@@@=C@[@@@R@K@[H'^@@]5/K@@[?M@-)@@/K@@[=%8K@@[AK@@@@)[%[]K)@K)@KNV
)@@G@@0^K)CK0^ES]CK^)@@@/,0@@@R')@@^[@@@@^C@@@@@[@@@@AC@@@@@[@@@@@O;@@@[AL@@@@NW
)@@G@@)[2[##@L]@(#@K()C G[^C]4C#@@@@/,0@@@(@@@@@R')@@H%8@@@[R')@@BC@@@@]'=@@@@NX
)@@G@@*W@@@AAM@@@@)['[F#@KK^G[^C@4C@=@K)#@[@@@@@G8@@@[/K@@]^!@@@@@C@@@@@[@@@@@NY
)@@G@@/@@@]BH8@@@[C@@@@@AN@@@@)]#@;@K)HK)#K)[K0^K0^K@@@@@@@@@@@@@@/K@@#F/K@K@[NZ
)@@G@@*@@@@# @@@@@ @@@@@'^@@@@/K@@@9AO@@@@)@@[Q@)@JA@)@@@@@@1     #@@@@@@^[@@@OA
)@@G@@@@@@@@@@@@@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AP@@@@)@E[I@)@@@@@)]E@E@@@@@@@OB
)@@G@@                  1     #@@@@@@^^@@@                  AQ@@@@)]F[#]@H]@(]OC
)@@G@@@D]@H]@(]@H]@-@@@@/K@K]E:@@@@@C@@@@@'=@@@@?@@@@@C@@@@@'=@@@@(@@@@@AR@@@@OD
)@@G@@)]N[##@K()C-@W-)C-@O-)C-@@-@A@C@@@@@[@@@@@C^@@@P'=@@@@*W@@@P/,0@@@R')@@NOE
)@@G@@[@@@@NAS@@@@)]V@N]@-@@@@)@N@Y@)/S]@@@@@@@@)]X@M@&8K@@[@@@@@@@@@@@@@@@@@[OF
)@@G@@@@@@@@/K@K]E[@@@@@AT@@@@)]Z[U@[@K@K@8K)@]:C@[)@@N8)@@]/K@K]X8KK@]$N@K@@GOG
)@@G@@O;@@@[*@@@@HW8@@@A;G@@@=&8)@@[AU@@@@)]%[N@K0^^[@[@@@@@[@M)@@;@K@@#/K@@]!OH
)@@G@@;)K@@#;=@@@#/K@@]28K0@]\N80@@AC@K@@&/K@@]>AV@@@@)]4[V@@@[@K@/K@K]58KK@]_OI
)@@G@@N@K@@GO;@@@[*@@@@HW8@@@G;G@@@=&8)@@[&8K@@[@@@@@@/K@@](AW@@@@)]_[MK^@^[@[OJ
)@@G@@@@@@@@/K@@#^;?@@@#;*K@@#/K@@#@8K0@#AN80@@AC@L)@@/K@@#D8K)@#]N8)@@]AX@@@@OK
)@@G@@)#D[MK[@^@K^G[^C@K[@K@@@CWW@@)/K@@#LC8@@@#/K@@#LC8@@@]/K@@#LC8@@@[/K@@].OL
)@@G@@[@])@@AY@@@@)#N[##@L]@.#@KK)KK)JK)LK0^@@@@/K@K@['=@@@@*@@@@@*@@@@@C@]@@@OM
)@@G@@R^?@@)[@K@@@C?W@@)AZ@@@@)@Q[Y@)@@@@@0      LINE AND ATL COMMILLEGAER    ON
)@@G@@E NUMBIN LINERROR D     NO FINBA@@@@)@-[I@+)O]) C@@* @*@@@@@@[ @@W@[^@@SOO
)@@G@@@[]@@QAAAAAA@@[@@[G     @R[@@(@Q[@@*@P@@@$BB@@@@@@^@@ @@D@@M@@!@@^@@.@@@OP
)@@G@@@@@@@@@@@@#V)@@@@@)@@@@@@@@@@%RDA         STATUS      RECNMC      LN    OQ
)@@G@@      FD$BIN      LAST$D      MCORE$      CHANGE      RDALN       TF$C  OR
)@@G@@      ERR$        BOPT        PRINTL      SENDEOF     TF$RMR      FATAL OS
)@@G@@      PERFSW      PRINT$      CHANGE$     @@[@@@@@@@@@PRTPO       @@^@@@OT
)@@G@@@@@@@HEXPAND      @@[@@@@@@@]XCONTRACT    @@[@@@@@@@]5@@@@@@@@@@@@@@@@@@OU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[I@(#@S^[#@SK0AK0A@@@OW
)@@G@@R#@@@]A#@@@@O#@@@OR#@@@@/K@@@G%8K@@DR3U@@#9*@@@F@@@@@@AA@@@@)@D[I@(#@T@KOX
)@@G@@0A^G[=G[=@@@@@@@@@/K@K@@9?@@@FA#@@@[OFE@@BR#@@@[/K@@@JA#@@@]OFE@@BAB@@@@OY
)@@G@@)@M[A@%=@2^@]A@2^[]A@0-@O-)G@@C@@@@]/,0@@@C8K@@FC8@@@A/,0@@@C@@@@[/,0@@@OZ
)@@G@@C/@@@@AC@@@@)@U[A@?C]^G[-]@(#@T]@-#@S@@@@@C8K@@IC8@@@#/,0@@@C@@@@@/,0@@@PA
)@@G@@C8K@@IC8@@@C/,0@@@AD@@@@)@+[A@?C]=C#^G[=C^^@K0AK0A@@@@9*)@@H9*@@@F@@@@@@PB
)@@G@@/K@K@L'=@@@@R#@@@0/,0@@@/,0@@@AE@@@@)@%[Q@%=]C@)@C@@@@/K@@[Z!@@@@IA7H@@@PC
)@@G@@O;@@@[/K@@[2!@@@@IR7H@@@R#K@[HO;)@@[R;)@@@AF@@@@)@4[I@%=@2^@]A@0-@O@-@K@PD
)@@G@@/,0@@@;C@@@S;*@@@SRZC@@[/,0@@@C8K@@)C8@@@J/,0@@@C/@@@@AG@@@@)@.[I@?G[-]@PE
)@@G@@*K)CK0A^C])@R#K@[#/,0@@@C8K@@ C8@@@Q/,0@@@RBC@@[/,0@@@C8K@@^C8@@@PAH@@@@PF
)@@G@@)[A[Q@*@^C]^G[-]@*/,0@@@C8K@@CC8@@@R/,0@@@P#@@@HRFC@@]P#K@@CO;K@@[;CK@@MPG
)@@G@@;*K@@MAI@@@@)[K[I@(]@-#@SK)E@K)C@@@@/,0@@@;C@@@S;*@@@SR#@@[I/,0@@@C8K@@CPH
)@@G@@C8@@@T/,0@@@R#@@[JAJ@@@@)[T[A@(]@D]@1#@T][[@EK#CK@@@@@/,0@@@C/@@@@/K@@[2PI
)@@G@@'=@@@@R#@@@0/,0@@@/,0@@@C/@@@.AK@@@@)[-[I@?G[-]@*K)CK0A^C])@R#@@[I/,0@@@PJ
)@@G@@C8K@@DC8@@@</,0@@@R#@@[J/,0@@@C8K@@?C8@@@VAL@@@@)[%[A@*K)C^C@=C#^G[=C^@@PK
)@@G@@@@@@@@'=@@@@R#@@@0/,0@@@/,0@@@C/@@@./,0@@@;C@@@S;*@@@SAM@@@@)[2[A@?G[=G[PL
)@@G@@=@K0AK0AEK#CK@@@@@/,0@@@C/@@@@9*)@@$9*@@@>@@@@@@/K@K@$9?)@@H9?@@@FAN@@@@PM
)@@G@@)['[A@?G[-]@(#@T]@-#@SK)E@@@@@/,0@@@C8K@@CC8@@@,/,0@@@R#@@@>/,0@@@C8K@@XPN
)@@G@@C8@@@(AO@@@@)]][I@*^C]^G[-]@*K)C@@@@/,0@@@RBC@@[/,0@@@C8K@@^C8@@@P/,0@@@PO
)@@G@@;C@@@S;*@@@SRZC@@[AP@@@@)]F[Q@?G[-]@*@@@@@P#@@@HRFC@@]P#K@@CO;K@@[;CK@@MPP
)@@G@@;*K@@MR#K@[#/,0@@@C8K@@ C8@@@QAQ@@@@)]P[A@?C]^G[-]@*K)CK0A@@@@@@@@C8K@@CPQ
)@@G@@C8@@@T/,0@@@R#@@[J/,0@@@C8K@@CC8@@@R/,0@@@AR@@@@)]X[I@?C])^C][]@D]@1#@S@PR
)@@G@@R#@@@0/,0@@@/,0@@@C/@@@./,0@@@;C@@@S;*@@@SR#@@[I/,0@@@AS@@@@)]&@&@?C^^G[PS
)@@G@@=G[=@@)@@@&@0@@@@@ PTRS @@@@@@@@@@@@@@@@@@/K@K[59?)@@$9?@@@>'=@@@@AT@@@@PT
)@@G@@)@^@"@0@@@@@)@J@Q@0@@@@@G: ZERWARNIN,     RITTEN PGS WEAD,   PGS RD.    PU
)@@G@@PATCHEAU@@@@)@L[Y@0@@@@@ZERO PE     ,SETCDE     ,RECCD,SLT  ,PG   A     PV
)@@G@@ - ARESTOREDO PTR AV@@@@)@W[I@0@@@@@@@@@@@@@@@@@DE    , SETCE      RECCDPW
)@@G@@ED FORPPRESSNGS SU WARNIOINTERAW@@@@)@([A@0@@(@Y@@@@@@@@@@@@@@@@@@@[G@@@PX
)@@G@@A      - AREAREA  KNOWN  TO UNG: PTRWARNINAX@@@@@@^@@B@@F@@M@@\@@A@[B@@@PY
)@@G@@@@@@@@@@@@@@)@@@@@)@@@@@)@@@@@@@@@]%@@@@@1EDIT$       EDITR$      ECHAR$PZ
)@@G@@      ECOL$       ESKIP$      ECLR$       EDPKT       EOCTV$      EDECV$QA
)@@G@@      EFD1$       ECOPY$      EPACK$      EDITX$      ECOLN$      EMSGR$QB
)@@G@@      PRINT       PRINT$      ZWRNCNT     CHKPT       @@ @@@@@@@@@CHKPT2QC
)@@G@@      @@ @@@@@@@@LPHRCNT      @@A@@@@@@@@[PCNT        @@A@@@@@@@@@ZPWARNQD
)@@G@@      @@ @@@@@@@@$BDWARN      @@ @@@@@@@[5@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@QE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[A@WG[^G[[]@S(@G-@@-)QF
)@@G@@C@@@@@C8K@@IC8@@@ /,0@@@C/@@@@A3@@@@R;@@@.A#@@@[A])@@@AA@@@@)@C[A@WC[4G[QG
)@@G@@^C#4G[[]@X#@K@@@@@C8K@@GC@@@@[/,0@@@C8K@@EC8@@@C/,0@@@R#@@@@/,0@@@AB@@@@QH
)@@G@@)@K@"@WC]OC#^G[^C^OC^=G[]=@0@@@@@@@@C/@@@@A]0@@@'=@@@@'=@@@@R#@@@K/,0@@@QI
)@@G@@/,0@@@AC@@@@)@R[A@WC@^G[[]@WK)NK0^@@@@@@@@C8K@@EC8@@@H/,0@@@9?E@@@/,0@@@QJ
)@@G@@C8K@@LC8@@@E/,0@@@AD@@@@)@Z[I@WC[0K)DK0^^C[0@@@@R3E@@#R;K@@]/,0@@@C8K@@AQK
)@@G@@C8@@@J/,0@@@R7E@@#R;K@@]/,0@@@AE@@@@)@*@"@WC]OC#^G[^C^OG[^G[]&@)@@@@@@@@QL
)@@G@@R;@@@]AA)@@#R]0@@@'=@@@@R#@@@K/,0@@@/,0@@@AF@@@@)@\@Q@WC ^C^)@@@@@)@@@6@QM
)@@G@@)@@@@@FAC RE@@@@@@8@A@@@IO PKT@@@@@@@@@@@@'=@@@@'=@@@@AG@@@@)@A[Q@)@@@@@QN
)@@G@@@@@@@@  FNC:TUS:     STAFILE  ROR - I/O ERUS:     STAT:     JECTEDAH@@@@QO
)@@G@@)@@[MKO ][O@@@@@@@%80@@0 @@@@K;C0@@YR#0@@HR#K@@GR#)@@H @@@@@[[@@@]9*)@@@QP
)@@G@@@@@@@@AI@@@@)@E[M@^[@^@@@@@@@@P;@@@0/K@@@Y(@@@@G/K@@@-/K@@@L%8@@@ ;?@@@AQQ
)@@G@@ @@@@G @@@@JC9@@@[AJ@@@@)@O[N@^@K[@[@@@@@@/K@@@GO#0@@G;*0@@#/K@@@>!8@@@CQR
)@@G@@/K@@@>0@@@@G/K@@@WT80@@E/[@@@RAK@@@@)@Y[MKO@KO @K)QK^^R#@@@C/K@@@(*@@@@@QS
)@@G@@/K@K@@C[@@@]9?)@@@R#@@@J/K@@@GR#)@@BR#K@@IAL@@@@)@*@:][^K)P^@@@@@@)@#@W@QT
)@@G@@@@@@@@RING ITAL STBAD OC/K@K@@ @@@@GA#@@@@R;@@@:'=@@@@AM@@@@)@A@W]+@@@@@QU
)@@G@@)@K@I@+=]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[I@@@@[^@@#      NPUT  AN@@@@QV
)@@G@@@@^@@ @@D@@R@@7@@#@[#@@@@@@@@@@@@@@!@@@@@D@@@@@1@@@@@LEDIT$       EDITR$QW
)@@G@@      ECHAR$      ECOL$       ESKIP$      ECLR$       EDPKT       ECOPY$QX
)@@G@@      EPACK$      EOCTF$      EDECF$      EDCFZ$      EDITX$      ECOLN$QY
)@@G@@      EMSGR$      EMSG$       PRINT       PRINT$      ERR$        EFD2$ QZ
)@@G@@      SNAP$       STATUS      PERFSW      ASGERR      @@#@@@@@@@@@IOERR RA
)@@G@@      @@#@@@@@@@@PFD$BIN      @@[@@@@@@@@@13,P$(1,1) .  LMJ 11,P$(0,0) .RB
)@@G@@  END . P$ PROC 0,1 .  LMJ 11,P$(0,0) .  END . P$ PROC 1,2 .  L 12,P$(1,RC
)@@G@@)@@[]K)@K0^K0^K[#@L]@^@@@@@@@@RAW@@@[@@@@@H8@@@[/@@@@EC@@@@@[@@@@@CC@@@@RD
)@@G@@@@@@@@AA@@@@)@C[F]@D@K)#K0^K0^K[#@K@T8@@@][@@@@@H8@@@[/@@@@OC@@@@@[@@@@@RE
)@@G@@CC@@@@/K@@@#/,0@@@AB@@@@)@L[#]@L]@D@^C[M=@2^@'^@*@@@@@*4@@@@/,0@@@R')@@@RF
)@@G@@[0@@@@C8@@@C/K@@@G/,0@@@RAW@@[AC@@@@)@T[#]@)K)DK)#K0^K0^K@@@@@@@@@H8@@@[RG
)@@G@@/@@K@@C@@@@@[@@@@@C@@@@@[0@@@@C8@@@C/,0@@@AD@@@@)@-[##@KK)^K)EK)^K)FK)^KRH
)@@G@@)G@@@@'^@@@@CCG@@@[^K@@@C@W@@[[^K@@@C^W@@@T8@@@][@@@@@AE@@@@)@([]K)HK)EKRI
)@@G@@)IEKBCK#*K^*K^@@@@/,0@@@*4@@@@/,0@@@R')@@@9*K@@@[C@@@@'=@@@@(@@@@GAF@@@@RJ
)@@G@@)@1@F@@@@@@@)@@@I@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@RK
)@@G@@/K@@@YAG@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@RL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@ @@D@@J@@$@@[@@:@@@@@@@@@@@@@@2)@@@@@)@@@@@RM
)@@G@@@@@@@[DPGCNT      DPGTBL      PACKPG      OVFCNT      OVFTBL      DPKT1 RN
)@@G@@      DLTPKT      DB$AM       IOERR       OVFPKT1     OVFPKT3     OVFPKTRO
)@@G@@2     GETASIZE    ERR$        OVFPKT      COMPACT     @@[@@@@@@@@@@@@@@@RP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@RQ
)@@G@@)@@[N[K[[KO@KO [@@ @@@[= @@@@= @@@@< @@@@B'^@@CD(@@@[WA#K@@[R#U@@@AA)@@GRR
)@@G@@AA0@@-AA@@@@)@E[F][T][W#1)^0M+)C]]@@(@@@[=/K@@^M(@@K@G@@J@[(@@@@@<@@@@@@RS
)@@G@@@@@@@@/,0@@@ @@@@@AB@@@@)@N[N@K)SK@^ @^^@@A#K@@AKWC@@^R#@@@HA#@@@];C@@@SRT
)@@G@@;*@@@SRRC@@[R]@@@H/,0@@@'^@@DXAC@@@@)@X[MKL[^^KL[@@@@@A7K@@CR\S@@#A#K@@CRU
)@@G@@KOC@@^A7K@@BR3S@@#A#K@@BKSC@@^A7K@@AR7S@@#AD@@@@)@$[N[^@K[@KO[[@@@R#0@@]RV
)@@G@@/K@@@5*0@@@]'^@@@"R;@@@]'^@@@"R;@@@['^@@@"R;@@@@ 0@@@]AE@@@@)@1[MKL@^CAORW
)@@G@@@KO@@@/K@@@FA[0@@<R90@@[/K@@@;:@@@@@R#@@@B'^@@[$R;K@@^A#0@@#;*0@@SAF@@@@RX
)@@G@@)@;[F][>][([^ @^ [@@@@@@C5?@@AA30@@]R;0@@[/K@K@"(4G@@A@@@@@@/K@K@-/,0@@@RY
)@@G@@*@@@@@AG@@@@)[^[MKK^@K^@@@@@@@@@@@@@/K@K@"8^)@[AO5&@@@'^@@[H;D@@@S;(@@@SRZ
)@@G@@CPA@@@R ?@@AH9)@@[AH@@@@)[I[#[KOCA31)^JA@N[EE^#)@@@@@@/,0@@@@[O@[(@@@@@<SA
)@@G@@@@@@@@@@@@@^/,0@@@ 4@@@][[@@@^AI@@@@)[Q[N@^^K@[[@@@@@@A#@@@#R#D@@@O'K@@CSB
)@@G@@P'@@@[R,D@@]'^@@[$R;K@@@A#@@@#R#D@@]R]K@[MAJ@@@@)[)[MK[@KO[@@@@@@@N[)@@DSC
)@@G@@N[K@@C@@@@@@/K@K[H/K@@^J(4@@@]8]@@[YOQT@@['^@@[$R;K@@[AK@@@@)[%[EKL[K)XJSD
)@@G@@A@K/S[G^*)@@@[2@[(@@@@@<@@@@@@@@@@@ /,0@@@A#@@@ ;C@@@SR#@@@#N[0@@HAL@@@@SE
)@@G@@)[3[N@@@^ [@@@@@@@NCRK@DR#)@@#R#K@[BR]K@[AR]@@[ N'0@@[:8@@@[ @@@[FR7G@@[SF
)@@G@@R#@@[0AM@@@@)[.[N[EKJ@)+@O)Y^@/K@@]SP;@@@$P;@@@@/K@@]B9@?)@@QBBK@D;*@@@MSG
)@@G@@O;@@@$R;@@@@N@)@[%AN@@@@)]B[N[EKJ*@@CC@@@@O;@@@[R#0@[:A#?@@@;*)@@PO#)@[FSH
)@@G@@;*)@@#;C)@@S/K@@ B!;@@@@CFBK@DAO@@@@)]L[F][8K)Y[[KO [@@@@@@@:O)@@]RZ)@@#SI
)@@G@@AF7K@DOF7K@DR;0@@[P;@@@] @G@@@O;@@@[A#/@@@AP@@@@)]U[N@K[@^@@@@@@@@;*)@@[SJ
)@@G@@*@@@@HR;)@@[C9@@@[/K@@]>C9@@@]/K@@]>C9@@@^/@K@]Y/K@@])AQ@@@@)]=[N[@K[@^ SK
)@@G@@@@@@@@/K@@#&!?)@@#R;)@@]/K@@#-:8K@@@/K@K[$:8K@@^[!W@@@)!G@@@A7)@@]AR@@@@SL
)@@G@@)],[MK)YK]=#2])@@@A$?@@@R\>@@AA<?@@@RZ>@@AR[K@[0AB@@@@O;@@@@/K@@#J*0G@@@SM
)@@G@@O;@@@[AS@@@@)]8[U[[@@@@@;(@@@A;?0@@A;(@@@A @@@@JC[ @@@OPP@@^&9@@@[Q[@@@@SN
)@@G@@P;K@@[A3W@@@R\P@@#AT@@@@)##[U@@@K@@@8#K@]"O5P@@@[[^)@];G0@@G;[@@@G;C0@@]SO
)@@G@@;G0@@#;D@@@];G0@@[;-@@@M;?0@@AAU@@@@)#I[M(@/)>CB=^@@@@;C)@@S;*)@@SRV?)@]SP
)@@G@@P;K@@[R3W@@@&;@@@[AB@@@@O;@@@@C[@@[:P;@@@@AV@@@@)#S[N[K[@K^^^[@@@@R[K@[0SQ
)@@G@@/K@K[$[[W@@[)[G@@[RB@@@@/K@@^J8#K@#P;D@@@[/K@@#X:@)@@^AW@@@@)#+[U[@K@@@@SR
)@@G@@;C)@@S;*)@@SRR>@@@P;0@@[OTP@@^R35@@#R[K@[0/K@@#%OXP@@^P;0@@[R75@@#AX@@@@SS
)@@G@@)#![N[K[@K@@@@@@@@;)0@@M;?)@@M;*0@@A @@@@IR#5@@@/K@@^J8#0@#%O5P@@@/K@@#2ST
)@@G@@:@)@@^AY@@@@)#7[U@@@@@@@;G)@@G;@0@@M;G)@@A;)0@@FO;0@@[(@@@@H;)0@@[;C)@@]SU
)@@G@@;G)@@#;C0@@];G)@@[AZ@@@@)^][M@K^@@(@/@@@@@!8K@@@O;K@@[A#'@@[R:W@@@/K@K[$SV
)@@G@@/K@@^C2@')@[&')@@[Q])@@GN*W@@@BA@@@@)^G[F@^[[K))K)-KO@@@@@@@R;@@@ A#KK@GSW
)@@G@@R#K@@['=@@@@'=@@@@R#@@[?/K@K[$A:W@@@/K@@ EBB@@@@)^P[#]@T][>@EK#CK@CC-@I@SX
)@@G@@@@@@@@/,0@@@C8K@@IC8@@@F/,0@@@C/@@@@/K@@^=*@@@@@A3@@@@BC@@@@)^X[F@K)+KL]SY
)@@G@@@X]@>@KO@@@@/K@@^;*@@@@=/K@@C^/,0@@@/,0@@@C8K@@QC8@@[[/,0@@@R#@@@GBD@@@@SZ
)@@G@@)^&[E(@G-@@)+^@'@-[^))@@C8K@@KC8@@[C/,0@@@R#@@@G/,0@@@C8K@@KC8@@@I/,0@@@TA
)@@G@@C/@@@@BE@@@@)^\[#]@X[K)IKL]@X]@>[@@@@@@@@@R#@@[!/,0@@@/,0@@@C8K@@BC8@@[HTB
)@@G@@/,0@@@R#B@[F/,0@@@BF@@@@)^7[F]]@KO@(@G-@@)+^@8@@/,0@@@C8K@@IC8@@@F/,0@@@TC
)@@G@@C/@@@@/K@@@5A#@@@=R;@@@['=@@@@BG@@@@) @[F@K)+KL]@X]@>@KOCC@@'=@@@@R#@@[,TD
)@@G@@/K@@C^/,0@@@/,0@@@C8K@@XC8@@[J/,0@@@R#@@@GBH@@@@) D[F]]^]=@2^@]]CK#)@@@@TE
)@@G@@C@@@@L/,0@@@C8K@@IC8@@@V/,0@@@C/@@@@;DK@@SC[W@@@'=@@@@BI@@@@) M[#]@5[^C[TF
)@@G@@2=#2^[*-@^@@@@@@@@/,0@@@C/@@@!/,0@@@R;@@@@/,0@@@C8K@@MC8@@@Y/,0@@@BJ@@@@TG
)@@G@@) U@<]@>[K))K)-@@@)@@@=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'=@@@@'=@@@@R#@@[!TH
)@@G@@/,0@@@BK@@@@)@^@O@)@D@//S]@//S][@@@@G: RECWARNIND      RECORERROR:@@@@@@TI
)@@G@@@@@@@@@@@@@@@@@@@@BL@@@@)@K[W@@@@@@@OW!   OVERFLTABLE C1/C9 RROR  ABLE ETJ
)@@G@@HEMA TNAL SC INTERCONFIGORD   BM@@@@)@V@4@@@@@@@) Y@V[KK@@@@ @@@@BA])@@+TK
)@@G@@AA0@@-OAP = DS NUM EXCEED      RECORERROR:BN@@@@) -[F[K^ ]]K/S[G^**C))@@TL
)@@G@@ABBK@$O;@@@[R#BK@>@ &@[\@@@@@</,0@@@A[0@@</K@@ \*CBK@$BO@@@@) %[MK)TK[@KTM
)@@G@@O^@@@@ARW@@@R;K@@DP;@@@DOFBK@$RBBK@$/K@@ -R90@@[/K@@ 5:@@@@@R#@@@BBP@@@@TN
)@@G@@) 4[N@^ [KL[K^@@@@9?E@@@AA)@A@/K@@BA:@@@@:R#E@@@R])@@+ @@@@= @@@@< @@@@BTO
)@@G@@/K@@ %BQ@@@@) "[F[K)>#1)^/S[G^**]@))R#@@@?/K@@BL(@@KA@@A#@[\@@@@@<@@@@@?TP
)@@G@@@@@@@@/,0@@@9*@@@(BR@@@@)AB[M[[KO^KK@@@@@@;*@@@A;?@@@MR#K@@2 @@@@G9*@@@7TQ
)@@G@@9?@@@0A#@@@6O;@@@D;*@@@G;)@@@GBS@@@@)AL[N[^ [KL[@@@@@@;G@@@M;*K@@A;?@@@GTR
)@@G@@R#K@@5 @@@@G9*@@@'9?@@@3A#K@@9;G@@@MO<@@@\BT@@@@)AV[F[K)&KO^[[K)$@@@@@@@TS
)@@G@@'=@@@@A#BK@>O;@@@D&;K@@[K8@@@[R#BK@>A7@@@"R#@@@@A#K@@/BU@@@@)A=[N[KKKK^@TT
)@@G@@@@@@@@R#0@[[/K@@A65W()@@N@K@@KW9@@@DCDRK@$ @@@@K&'K@@DRARK@$RZ)@@6BV@@@@TU
)@@G@@)A,[U@@^^@@@M#W)@@N8K@@DR#@@[0&;K@@[O;K@@[M#H)@@L8@@@D&;@__"N@K@@JT80@@DTV
)@@G@@O;0@@[BW@@@@)A9[MKO^K)TK^ [KO@/K@@ 5AB@@@+OF@@@+RB@@@+/K@@B#%@@@@@R#@@@BTW
)@@G@@AFBK@$OFBK@$R;@@@DBX@@@@)B#[MKO@KO[[@@@@@@R#@@@B OG@@@P;@@@CR#BK@>/K@@BGTX
)@@G@@(CBK@$ @@@@B/K@@ _A[0@@<R90@@[BY@@@@)BH[F][>[^[][>@EK#CK@CC@C8@@@_/,0@@@TY
)@@G@@C/@@@@/K@@BZ*@@@@@/K@@BBR90@@[/K@K@-:@@@@@BZ@@@@)BQ[EK)BKOCE^^K)BK)DK@@@TZ
)@@G@@/K@@C^/,0@@@/,0@@@C8K@@QC8@@[[/,0@@@9?@@@(/,0@@@C8K@@GCA@@@@)BZ[F[K]=@2^UA
)@@G@@@]]CK#*E^ @@/,0@@@9?@@@(/,0@@@C8K@@IC8@@[ /,0@@@C/@@@@/K@@B9*@@@@=CB@@@@UB
)@@G@@)B*[F[^C[4 ]@9[^C[4C]K@@/,0@@@/,0@@@C8K@@BC8@@[H/,0@@@R#B@[F/,0@@@C8K@@KUC
)@@G@@C8@@[CCC@@@@)B1[F[K))KO^^ @EK#@@@@@@C/@@@@/K@@A/A#@@@=R;@@@[9*E@@@9?@@@(UD
)@@G@@R])@@+'=@@@@R#@@[!CD@@@@)B'[F]@[[^C[4 ]]-[^C[0@@/,0@@@C8K@@XC8@@[J/,0@@@UE
)@@G@@9?@@@(/,0@@@C8K@@GC8@@@_/,0@@@CE@@@@)C#@3]@>[K))KOCC^CEK@@@@)@-@O@@@@@@@UF
)@@G@@@@@@@@'=@@@@'=@@@@R#@@[1'=@@@@R#@@[!/,0@@@CF@@@@)@<@4#1)C^N1)C^<1)C^31)CUG
)@@G@@ @@@@@)@:@G@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CG@@@@)@.[W@@@@@@@UH
)@@G@@A     G: AREWARNINHEMA   IN SCEFINED NOT D AREA ERROR:@@@@@@@@@@@@CH@@@@UI
)@@G@@)[C[W@@@@@@@THER S IN EIEFINED NOT DA      SCHEMSECONDFIRST  IN   EFINEDUJ
)@@G@@ NOT DCI@@@@)[N[G@@@@@@@)CD@E@@@@@@@R.    E ERROTO NAMD DUE MINATEON TERUK
)@@G@@NIZATIREORGACHEMA CJ@@@@)CE[EKL[EKPCKP>CF^CFM= 0O;@@@@A#BK@@O;@@@@A#BK@@UL
)@@G@@O;@@@@A#BK@DO;@@@[R#BK@> @@@@BCK@@@@)CN[F]]/([))+@O)1EKT]@@@/K@@DH?@K@@GUM
)@@G@@R;K@@@O;@@@@/K@@CW*@@@@BA#BK[&O;@@@@A#BK@@CL@@@@)CW[EKOCD1][>@^[[@@@@@@@UN
)@@G@@ @@@@</K@@CFR90@@[/K@@C=:@@@@@R#@@@B'=@@@@A#BK@>P;@@@[CM@@@@)C>[#]]K/S[GUO
)@@G@@^**KG*@)*KM@@@@@@@/,0@@@A#@@@<R;@@@[/K@@C\(@@@@@@C$@[2@@@@@</,0@@@CN@@@@UP
)@@G@@)C![E/S[G^*)CKT)-[*@@@@@R#B@@@R#K@@G?@K@@GR#B@@@ @@@@B @@@@I @@@@H@C,@[2UQ
)@@G@@@@@@@<CO@@@@)C6[M[][>@^[][CK@@A#@@@HO;@@@[R#@@@@/K@@C2R90@@[/K@@C.:@@@@@UR
)@@G@@R#@@@BR#)@@G?@)@@GCP@@@@)D@[EK[@^C^=CD4CHK@@@@@@R;@@@W/,0@@@'=@@@@A#@@@@US
)@@G@@O#@@@IA#@@[MO#@@@HA#@@[0O#@@@HCQ@@@@)DD[F][OKO@]=@2^@]]@@@@@C8@@[X/,0@@@UT
)@@G@@C/@@@@C[K@@GP#@@@H/K@KCDA#@@[WR;@@@[AF@@@@CR@@@@)DM[EK)B^C#^^K)BK)DKK@@@UU
)@@G@@R#@@[!/,0@@@/,0@@@C8K@@UC8@@[Z/,0@@@C@@@@L/,0@@@C8K@@BCS@@@@)DV@N]][]]^@UV
)@@G@@)[W@/@@@@@@@ NEEDEI-BANK MORE  WORDS      ERROR:@@@@@@'=@@@@'=@@@@CT@@@@UW
)@@G@@)[<@G@)DX[]^ ][P][P@@@@@AZW@@@RRS@@[R]@@@HOB@@@@RF@@@@A#@@[=R;@@@[@@@@@@UX
)@@G@@D.    CU@@@@)D>[M@[][OK)P@@@@@P;)@@WAF)@@@O;)@@ARF)@@@A#W@@ R#S@@F9*W@@#UY
)@@G@@9?S@@D9*W@@[9?S@@BCV@@@@)D\[U[[[@@K@/K@KDXARW@@@R;K@@AP;@@@A/K@KDX?8K@@]UZ
)@@G@@ OG@@@A#K@[>AVW@@@W8K@@A @@@@HCW@@@@)[=[G#1)C N1)^@EC@@@@@@@@[A@@L)@@@@@VA
)@@G@@__@@@@@BLDC1@@@@@@@@@@[*@@@@@@@@@@@@@@@@@@CX@@@@)[!@4([AOK*>^@@@@@@@@@@@VB
)@@G@@@@@@@@@@@@@@@@@@@@CTINIT@[C@[O@@[@@6@BLDC3@[^@@R@[I@@@CY@@@@@@@@@@^ [KL[VC
)@@G@@@@@@@@;G@@@M;*K@@A;?@@@GR#K@@5 @@@@G9*@@@'9?@@@3A#K@@9;G@@@MO<@@@\BT@@@@VD
)@@G@@@@^@@#@@B@@6@[3@@D@]R@@@@@@@@@@@@@D'@@@@[3EDIT$       EDITR$      ECHAR$VE
)@@G@@      ECOL$       ESKIP$      ECLR$       EDPKT       ECOPY$      EPACK$VF
)@@G@@      EDITX$      ECOLN$      EMSGR$      EOCTV$      EDECV$      EFD1$ VG
)@@G@@      C1          C9          LAST$I      LAST$D      C3          C10   VH
)@@G@@      C8          CURREC      FRBNME      BLDC5       NS$FLG      ARTDEFVI
)@@G@@      FSBCDE      BLDC7       FRBCDE      NUMOAP      NUMREC      PRINT$VJ
)@@G@@      ERR$        EMSG$       PRINT       FDSDT       FABNME      AREAP VK
)@@G@@      MCORE$      EFD2$       EXIT$       C1SIZE      CN5         C5SIZEVL
)@@G@@      CN6         C6SIZE      CN7         C7SIZE      C8SIZE      FRSTD$VM
)@@G@@      MAXRDT      MAXSDT      BLDC6       BLDC1       @@[@@@@@@@@@RNMPTRVN
)@@G@@      @@[@@@@@@@@GRTABAD      @@[@@@@@@@@HSTABAD      @@[@@@@@@@[MR2TBADVO
)@@G@@      @@[@@@@@@@[0BLDC3       @@[@@@@@@@ YC8SEQN      @@]@@@@@@@[>CN8   VP
)@@G@@      @@]@@@@@@@[&C8D         @@]@@@@@@@[*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@VQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@VR
)@@G@@)@@[I@WG[^C]^G[^G[^G[@@@ARW@@@P#@@@HR#@@@DRRT@@@A]K@@BOERK@[RARK@[Q]@@@@VS
)@@G@@AA0@@@AA@@@@)@D[Q@S@K)D@@@@@@@;C@@@S;*@@@SR#C@@#A:D)@@A#B@@@R7C@@[A#D@@@VT
)@@G@@;*@@@SRRC@@[&'K@@[AB@@@@)@N[Q@T#@K@@@@@@@@A#D@@^R#C@@F9*D@@]9?C@@D9*D@@@VU
)@@G@@9?C@@BAZD)@@OBC@@AA#@@@CA#D@@@AC@@@@)@X[Y@S^@@@@R[@@@CCUC@@ OY*@@ R])@@CVV
)@@G@@O'K@@]9*D@@@9?C@@H/@)@@"+8K@@]R7S@@[O'K@@ AD@@@@)@*[Q@S@@^@@@@@@@@')H@]ZVW
)@@G@@O#@@@^W8@@@#R#K@@Q @@@@GG')@@[ @@@@QP;)@@[R3=@@@O9@@@JAE@@@@)@2[I@WG[[@KVX
)@@G@@@^G[@@@@@@@@P;@@@DP#@@@B;C@@@M;*@@@MR#@@@D8#)@@?/,0@[; @@@@  @@@@DAF@@@@VY
)@@G@@)@;[I@WG[[@K0^[#@K@@@@@@RVC@@[ ?G@@@R#@@@BO'K@@]9*D@@@9?@@@E/K@@[#A\H@@@VZ
)@@G@@R#K@@BAG@@@@)[^[Q@S^@[#@K@@@@@AVW@@[P#K@@GR#@@@B&;K@@@R#K@@DO]@@@G/@@@[?WA
)@@G@@O'K@@[R])@@D @@@@LAH@@@@)[I[Y@S@@@@@R\*@@@C5C@@@ARD@@@RRC@@@AZD@@@;*@@@AWB
)@@G@@ @@@@G(4C@@@R;@@@#G9K@@[&'@@@[AI@@@@)[T[Q@SK[@^@@@@@@@R#C)@@AVD)@@R;@@[[WC
)@@G@@/K@@[*%8)@@[/K@@[$:80@@]/K@@[$:8)@@]R:8)@@AJ@@@@)[<[Q@S^@@K@@@@@@@[[U@@@WD
)@@G@@/ @@[J @D)@@ @D)@@ SD)@@O'@@@]/K@@[:A#D)@@R#C)@@A#D)@@AK@@@@)[![I@S^G[[#WE
)@@G@@@L@K0^K0^@@@AFBK@[PBBK@[/K@@[8!^BK[]ART@@@L@@@@B;C@@@M;*@@@MR#@@@DAL@@@@WF
)@@G@@)[6[A@WC]=G[^G[^C]4C#^G[@@@@@@P;0@@[R#0@@MA]5@@J'=@@@@'=@@@@R#@@[M/K@K@@WG
)@@G@@/,0@@@AM@@@@)["[I@S]&@+A@+@C@@@@@@@@R3J@@@/K@@]O!0J@@@/@@@]UR# @@IR;0@@GWH
)@@G@@?]@@@MO#0@@ET80@@]AN@@@@)]B[Q@WG[@@K0^@@@@G9)@@[C90@@[A#T@@@O#K@@C;G@@@GWI
)@@G@@;CK@@#;*K@@JR#Z@@[RBJ@@@A# @@KAO@@@@)]L[I@T@K^@^G[@@@@@@@@@@/KF@@@P9K@@]WJ
)@@G@@R]5@@JO'K@@[C90@@@/[0@]R/K@@]]/,0@[;O9K@@]AP@@@@)]U[A@WG[^@K0^K@@@@@@@@@WK
)@@G@@@@@@@@CP?@@@CT?@@@CX?@@@/K@@]^A#K@@DR;K@@[/K@@]O*@@@@DAQ@@@@)@@[I@)/S]@@WL
)@@G@@/S]@^@@@@@@@@@@@@@@@@@@@LOW!   OVERF TABLEC5/C11@@@@@@@@@@@@@@@@@@AR@@@@WM
)@@G@@)@D@6@)@@@@@)]+@Q@WG[^C@)@@@@@R )@@@AA0@@@@@@@@@@@@@@@@@@@@@            WN
)@@G@@@@@@@@AS@@@@)]=[I@S^G[^C]^@K0^K)H@@@/,0@@@[[)@[@G9)@@[A#@@],R#@@@@ @@@[[WO
)@@G@@ @@@@N @@@@M&9)@@[AT@@@@)]![A@V1)G[@/S#@K0M&@+A@+@)@@@R7D@@[R]K@],/K@@#[WP
)@@G@@(@@@[@@]0@[N@@@@[[@@@@@@@@@@[@AU@@@@)]5[Q@T@^@@EKBC@@@/K@@#G!90@@@ARA)@@WQ
)@@G@@RRD@@#AZA@@@RRD@@[/K@@]%%8@@@#/K@@]9:8@@@]AV@@@@)]_[I@T@K0^K0^K)JK0^K)#@WR
)@@G@@ @@@@M&9)@@[R )@@@/K@K@@:@@@@@[D/K[]R#@@[[/K@@]%G90@@[AW@@@@)#C@"@SK0^K^WS
)@@G@@G[^C]4C#@@@@@@@@@@@@@@@@'=@@@@'=@@@@R#@@[O/K@@]%A#@@[[R;@@@[ @@@@NAX@@@@WT
)@@G@@)[@[A@)JA@)]JA@)#@@@@@@@@@@@@@LOW!   OVERF TABLEC6/C12@@@@@@@@@@@@@@@@@@WU
)@@G@@@@@@@@AY@@@@)#J[I@WG[^C^^G[^@K0^^@@@(OD@@@/K@@^C:WD@@@RARK[CRRC@@[/K@@#VWV
)@@G@@(CBK[CR]@@@@AA0@@@AZ@@@@)#S[I@W@K^G[^G[^G[@@@@@@P#@@@HR#@@@DRRT@@@A]K@@BWW
)@@G@@OERK[CRARK[C/K@@#POQT@@@/K@@#VBA@@@@)#-[Y@S@@@@@R#C@@B9*D@@]9?C@@ 9*D@@@WX
)@@G@@9?C@@#A#D)@@;*@@@G;)@@@GR#C@@[&'K@@[ARW@@@BB@@@@)#?[Y@S@@@@@P;0@@[R\8@@]WY
)@@G@@A#D)@@;)@@@G;?@@@A;@@@@M;G@@@A @@@@HRFC@@]O'K@@ A#D@@^BC@@@@)#7[Q@S@^@@@WZ
)@@G@@@@@@@@;C@@@M;*@@@MR#@@@D8#0@#8OQC@@[ARD)@@RZC@@@AZD@@@R\C@@@O'@@@CBD@@@@XA
)@@G@@)^[[A@WG[[][ @K0^K0^K)MK0^@@@@/K@K@@/,0@@@AFBK[CPBBK[C/K@@^D!^BK@@ART@@@XB
)@@G@@L@@@@BBE@@@@)^D@Y@WG[^C]4C#@@@)[C@&@<1)C[#1)C[K@ TABLEC7/C13@@@@@@@@@@@@XC
)@@G@@'=@@@@'=@@@@R#@@[PBF@@@@)[G@Q@)@@@@@)^G@,@T#@L@K^G[@@@@@@@@@RB*K[K/K@K^GXD
)@@G@@8^@@^KCDCK[K@@@@@@LOW!   OVERFBG@@@@)^L[I@WG[@K0^[#@KEKD)@@@L8@@@@R:D@@@XE
)@@G@@AB)@[JAR'@@@L@)@@ER])@[JR]K@@I&;)@@[A#)@[JBH@@@@)^U[Q@WG[@^G[@K0^@N@K@@GXF
)@@G@@O;@@@]]@K@[IL8@@@=R3D@@@OAK@[IM#()@@N@K@@GO;@@@[]@K@[IBI@@@@)^=[A@T#@L@KXG
)@@G@@0^^G[^G[^@@@@@@@@@/K@K^GAF*K[KPB*K[K OE@@@R])@[J8^@@^OOAK@[IM#()@@BJ@@@@XH
)@@G@@)[I[A@)JA@)AJA@)BE@O])@@@@@@@@@[^@[E@[^@[^@BLDC6@[^@@#@@@@@@@@@@@@@@@@@@XI
)@@G@@@@@@@@BK@@@@@@@@@@WG[[@K@^G[@@@@@@@@P;@@@DP#@@@B;C@@@M;*@@@MR#@@@D8#)@@?XJ
)@@G@@/,0@[; @@@@  @@@@DAF@@@@@@^@@ @@D@@O@@1@@B@[H@@@@@@@@@@@@@@@)@@@@@@@@@^?XK
)@@G@@@@@@[QC5          C11         C6          C12         C7          C13   XL
)@@G@@      C1          C9          RTABAD      LOCMDE      BLDSMR      PRINT$XM
)@@G@@      ERR$        FSRBCD      C6SIZE      NS$FLG      STABAD      CN8   XN
)@@G@@      BLDSMS      NUMOAP      BLDC5       @@#@@@@@@@@@CN5         @@^@@@XO
)@@G@@@@@@@[BLDC6       @@#@@@@@@@]+CN6         @@^@@@@@@@[]BLDC7       @@#@@@XP
)@@G@@@@@@#JCN7         @@^@@@@@@@[CPACKC1      @@#@@@@@@@^G@@@@@@@@@@@@@@@@@@XQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[M@^C ^@K^C K@@R]K@@@/K@@@P(@E@@@/K@@[\*@@@@@XR
)@@G@@9*E@@^9?E@@B ^E@@# 4E@@# @@@[#AA@@@@)@E[MK)P@[@K^G[@@@P]K@@)/G@@[>8#@@@KXS
)@@G@@9/T)@[9?U@@@H8@@@[W8@@@D;G@@@=CC@@@@&'K@@DAB@@@@)@O[N@K)P@K)P@@@@@C[E@@[XT
)@@G@@G*D@@@C?D@@@&'K@@DR]K@@@N@K@@GW8@@@D;G@@@=CC@@@@/K@@@*AC@@@@)@Y[M^[#@K@@XU
)@@G@@@@@@@@[ E@@ ;!G@@@C?D@@@ @@@@K9*E@@@9?D@@[P]K@@)/K@@[>2XD)@@;HG@@@AD@@@@XV
)@@G@@)@*[UK[@^@@@G^E@@ CCE@@^[^E@@ACWD@@# ^E@@#/K@@[$(^E@@ /K@@[$(CE@@ /K@@[$XW
)@@G@@(CE@@^AE@@@@)@3[U[@@^@@@C^E@@ [CE@@^/K@@[X?[@@@GCDE@@ TWD@@#CCE@@^/K@@[QXX
)@@G@@?[@@@GCDD@@^H8@@@[AF@@@@)@"[M@@K0^^@@@@@@@/K@@[(2OC)@@R]@@@-N8K@@^C0E@@#XY
)@@G@@[@E@@ W8@@@W;G@@@=T^E@@AH8@@@[AG@@@@)[C@:#@K[@@@)@@@&@)@@@@@@[@K@L@[@C@DXZ
)@@G@@@@@K@K@@@C@C/K@@[?*WC@@@[0E@@#CSC@@@P]@@@+AH@@@@)[H[MK)Q^C 0@@@@@@C8@@@%YA
)@@G@@/KF@@@[4E@@#C8@@@%/KF@@@(@@@[#/,0@@@*4E@@#'=@@@@C@@@@EAI@@@@)[R[M^@^@[@@YB
)@@G@@@@@@@@/@0@[N[C'@@^WW9@@# @@@@J/K@@@1[DE@@^G9@@@[/H@@[+H E@@ [@@@[#AJ@@@@YC
)@@G@@)[-[N@@^@K@@@@@@@@[4E@@#C8@@@:/K@@[%C8@@@?/K@@[%C8@@@!/KF@@@[4E@@#C8@@@MYD
)@@G@@/K@@@1AK@@@@)[:[#][WK)S^G[^G[^G[^G[@@@@@@@A@0@@XA@)@@WA@K@@V;/@@@Z/KF@@@YE
)@@G@@'=@@@@C@@@@E/K@@@@AL@@@@)[3[F#@K()C-@@]^@2A@+^[KC0E@@#/,0@@@C@@@@</,0@@@YF
)@@G@@C8K@@GC8E@@@/,0@@@C/@@@BA]0@@YAM@@@@)[/[EK)FK0^K)E[]@1#@L]@8/,0@@@9?@@@>YG
)@@G@@/,0@@@C8K@@ C^E@@ /,0@@@C@@@@=/,0@@@C8K@@#AN@@@@)] [E^C#^G[^C#)K)FK)J@@@YH
)@@G@@/,0@@@/,0@@@C8K@@AC^E@@^/,0@@@9?@@@$/,0@@@C8K@@#CCE@@^AO@@@@)]I[]()C-@2-YI
)@@G@@)C-)C-)C-)C-)C-)C@*^@@@Z 4@@@ZR]0@@YR@0@@XR@)@@WR@K@@V'=@@@@R;@@@^AP@@@@YJ
)@@G@@)]Q@N][D@@@@)@^@"@+)[K@@@@@@@@[[@@@@@@@@@@@&I@@HF     DB$AMP@[I@@H/K@@@BYK
)@@G@@'=@@@@AQ@@@@)@F@Q@)@@@@@)@V@"@)@])@@@@[@@@@@D@@D@@@@@@@@@@@@@@@@@@@@@@@@YL
)@@G@@@@@@@@@@@@@@@@@@@@AR@@@@)@+@"@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UFADD=@@@@,BYM
)@@G@@PGCNT=@@@@@,,STPG=@FUNC=@@[@@[AS@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@ @@D@@U@@.@@[@[[@@@YO
)@@G@@@@@@@@@@@@]S)@@@@@)@@@@@@@@@@(EDIT$       EDITR$      ECHAR$      ECOL$ YP
)@@G@@      ESKIP$      ECLR$       ECOPY$      EPACK$      EOCTV$      EDECV$YQ
)@@G@@      EFD1$       EOCTF$      EDECF$      EDCFZ$      EFD2$       EDITX$YR
)@@G@@      ECOLN$      EMSGR$      CTS$        CTSA$       DOPT        C3    YS
)@@G@@      IOW$        IOERR       IO$         PRNTA$      DB$AM       @@[@@@YT
)@@G@@@@@@@@P$(0,0) .  END . P$ PROC 1 .  DO P$(1)>1 , LA,P$(1,4) 12,+(E$AD 1,YU
)@@G@@2) .  DO P$(1)>0 , LA,14 13,P$(1,1) .  LMJ 11,P$)@@[M^C@[]@@@@@@@@C[K@@GYV
)@@G@@C@K@@GN@K@@KW9@@@D;H@@@=CD@@@@&'@@@DR]@@@@N]@@@C@@@@@@AA@@@@)@E[M@K^G[@@YW
)@@G@@@@@@@@;G0@@=;??@@@C?C@@@;G)@@=P]@@@[/K@@@U2WS)@@;GW@@@G*C@@@C?C@@@AB@@@@YX
)@@G@@)@O[U@^@[@@@@@@@@@/K@K@@ @@@@HC@@@@LR]@@[C/K@K@@R]@@[CC@@@@LC[@@@C;?/@@@YY
)@@G@@C*C@@@AC@@@@)@Z[F#@L#@KK)@^C@@@@@@@@N@K@@KW9@@@D;H@@@=CD@@@@&'@@@DR]@@@@YZ
)@@G@@N]@@@CCOK@@@[@K@@@AD@@@@)@*[MK^G[@@@@@@@@@;(W@@@C*C@@@)[@@@LC[K@@I;(G@@@ZA
)@@G@@C[@@@HC?C@@@P]@@@[/K@@@82WS)@@AE@@@@)@2[E@^@^@@@@@@@@@@@@@@@/K@K@YR]@@[CZB
)@@G@@ @@@@G/K@K@YR]@@[CC[@@@CC@@@@L)[@@@LC[@@@JAF@@@@)@@@Q@)@@@@@@@@@@@@@@@@@ZC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@D@@D@@@@@@AG@@@@@@@@@@@@@@@@ZD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZE
)@@G@@@@^@@ @@D@@[@@F@@]@@N@@@@@@@@@@@@@@;)@@@@@)@@@@@@@@@@]C3          DBP$APZF
)@@G@@S     @@[@@@@@@@@@APS$DBP     @@[@@@@@@@@Y@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[EK^[@K^@K^G[@@@@@@@@R#@@@@AA0@@HOY;@@@'^@@C,ZH
)@@G@@/K@@@CA#@@@HRB@@@@'^@@C,@@@@@@AA@@@@)@D[F]@.#@L][[@[][ @ES]@C/@@]B'^@@C,ZI
)@@G@@'=@@@@@@@@@@@@@@@@/K@@@<'=@@@@R#@@Q6'=@@@@AB@@@@)@M[#]@[@K0^K)I^C[^G[@@@ZJ
)@@G@@@@@@@@C8K@@UC8@@@A/,0@@@C/@@@[/,0@@@RBG@]IR\@@@H/,0@@@AC@@@@)@U[#]@T@^C]ZK
)@@G@@4C]^G[^C^^G[@@@@@@R#@@Q8'=@@@@R#@@Q7/,0@@@/,0@@@R;K@@GRB@@@H/,0@@@AD@@@@ZL
)@@G@@)@+[#][@()C-@@-@K-)C-@=) G[@@@@@[@@</,0@D"'=@@@@R#@@Q9/,0@@@/,0@@@C/@@]BZM
)@@G@@'=@@@@AE@@@@)@%[E()C-)C-)C-)CC@@@@@@;C@@@M;*@@@MR#@@@[/K@@D'2@[)@[R@K@Q'ZN
)@@G@@N@K@^VR#@@]V@@[@]VAF@@@@)@3[M@()CCS]]^]@)@8KK@@8O8K@@E'=@@@@O#@@@[R#@@Q;ZO
)@@G@@N8K@@!R8K@^W/KG@@@R#G@@@P;@@@]AG@@@@)@.[F@K^G[[@K^G[[@@@@@@@'^@@ANR#5)@@ZP
)@@G@@[[@@HQ/[@@[E'^@@ANR#5)@@R[K@Q//K@@@<'^@@^TAH@@@@)[A[F@K0^K^[@K^G[^@@@@@@ZQ
)@@G@@R#@@@K'^@@ANR#0@]X/K@@@<'^@@^T/K@@[@'^@@AZ[[@@HR/[@@[EAI@@@@)[J[EK)NK^@KZR
)@@G@@)OK)PJA@^@@@'^@@^T@@@@[N'^@@@@A:@@@@R;@@@[/K@@@<'^@@^T'=@@@@&;@[_@AJ@@@@ZS
)@@G@@)[S[F@K0^^[@K0^^[@@@@@@@/[@@[>'^@@ASR#5)@@[[@@HQ/[@@[>'^@@ANR#5)@@R[K@Q/ZT
)@@G@@/K@@@<AK@@@@)[-[F#@L#@L@K^[@K0^^@@@@'^@@ANR#5)@@R[K@Q//K@@@<'^@@^T/K@@[UZU
)@@G@@'^@@AZ[[@@HRG[@@HQAL@@@@)[%[F@K0^^@K0^K0^K^@@@@@/K@@[*'^@@A+[[@@HRC[@@HQZV
)@@G@@(@@@@K'^@@ANR#5)@@[[@@HQ/[@@[3AM@@@@)[3[F@K^G[[@K^G[[@@@@@@@'^@@ASR#5)@@ZW
)@@G@@[[@@HQ/[@@]#'^@@ANR#5)@@R[K@Q//K@@@<'^@@^TAN@@@@)[/[E^G[[#@L@K^[@@@@@@@@ZX
)@@G@@/K@@@<'^@@^T/K@@[6'^@@A+[[@@HRH9@@@[G[@@HQG9@@@[(@@@@KAO@@@@)] [F#@KK^[#ZY
)@@G@@@L@K^[@@@@@@/K@@@<'^@@^T/K@@]A'^@@A>[[@@HQ/[@@]G'^@@ANR#5)@@R[K@Q/AP@@@@ZZ
)@@G@@)]I[F#@KK0^K^[@K0^K0^K@@'^@@B# @@@HR[[@@HQ/[@@]V'^@@AN/K@@]S:@0@Q.R#5)@@AA
)@@G@@R[K@Q/AQ@@@@)]R[F@K0^K0^K^[@K0^@@@@@;D)@@MC[>@@@R[K@Q//K@@@<'^@@^T'^@@B#AB
)@@G@@ @@@HR @@@HQ/K@@]JAR@@@@)])[F#@L@K0^K^[@ES]CK@@@R#@@@M/,0@@@C/@@]B/K@@]4AC
)@@G@@'^@@CR/K@@#H:[)@Q_/K@@]6:[)@Q"AS@@@@)]([F][SK)^K0^K)Q[]@!]@)/,0@@@/,0@@@AD
)@@G@@R#@@@NR;K@@G/,0@@@R#@@R@/,0@@@C/@@@[/,0@@@AT@@@@)]2[F#@L][@K[#@L@K0^K@@@AE
)@@G@@/K@@# :[)@R#/K@@#[:[)@R]C[>)@@/K@@]YO9K@@]'=@@@@R#@@R[AU@@@@)];[F#@L@K0^AF
)@@G@@^[@K0^^@@@@@'^@@DON80@@JR[)@R /K@@]Y'^@@DON80@@(R[)@R /K@@#D:[)@R^AV@@@@AG
)@@G@@)#^[F@K0^^[@K0^^[@@@@@@@/K@@]Y'^@@DON80@@IR[)@RB/K@@]Y'^@@DON80@@ER[)@RAAH
)@@G@@/K@@]YAW@@@@)#H[F@K^G[[@K^G[@@@@@@@@C[ )@[R#5@@@[[@@HQ/[@@#W'^@@ANR#5)@@AI
)@@G@@R[K@Q//K@@@<'^@@^TAX@@@@)#Q[F@K0^K0^K0^^[@K^G[@@R[K@Q//K@@@<'^@@^T/K@@#KAJ
)@@G@@A#W@@@R#K@HSR#@@HQ[[@@HS'^@@D*AY@@@@)#Z[MK0^K[@K@K^G[@[[@@HS'^@@D*C[ )@[AK
)@@G@@R#5@@@/K@@^B'^@@CR;D)@@M/K@@^D:[)@RCC[>)@@AZ@@@@)#([E()C-@@CKF]^@+A@+^]8AL
)@@G@@C/@@@[/,0@@@9?@@RD/,0@@@C/@@@]/,0@@@R#@@@M/,0@@@C/@@]BBA@@@@)#2[#]@L#@L]AM
)@@G@@[SK)^K0^K)Q@@@@@@@C/@@@[/,0@@@R#@@RG/,0@@@C/@@@[/,0@@@R#@@RF/,0@@@BB@@@@AN
)@@G@@)#'[F]@K^C]1]@D#@K@@@@@@R;K@@GA#A@@@R#@@HS/,0@@@C/@@@//,0@@@R;K@@GR#@@@NAO
)@@G@@/,0@@@BC@@@@)^#[#]@!]@-#@L][@K^[@@@@@@@@@@/K@@@<'^@@^T/K@@#ZO9K@@]'=@@@@AP
)@@G@@R#@@RH/,0@@@/,0@@@BD@@@@)^F[F#@L][[@K)OK]&@))C@@/[@@^R'^@@ANR#5@@@R9K@]XAQ
)@@G@@/K@K@H *@@@@'^@@D]'=@@@@R#@@RIBE@@@@)^O[F#@L@K0^K^@K0^K)KK@@/K@K^T'=@@@@AR
)@@G@@R#@@Q8@@@@@@/K@@@<'^@@^T/K@KHQ'^@@D][[@@HQBF@@@@)^X[U@[@K[@@R;@@@[/K@K^XAS
)@@G@@ @@@@K8KK@^Z/K@@^$%9@@@ ;D@@@Y;G0@@A @@@@KN8K@@ @@@@@@BG@@@@)^*[M@[#@K^@AT
)@@G@@@@@@@@8KK@^: @@@@K;C0@@AT@@@HWO#K@@KT[@@@G+80@@J;?0@@A;(@@@Y @@@@HBH@@@@AU
)@@G@@)^2[MK[#@L#@K@K0^@R[)@HQW;)@@E @@@@UC#0@@GO;@@@[P#@@HQR#@@HR@@@@@@/K@K^XAV
)@@G@@C[@@@HBI@@@@)^/[EK]&@+^@]A@)-@QCK]@@/,0@@@C/@@@A/,0@@@C8K@@AC@@@HQ/,0@@@AW
)@@G@@C/@@]B/K@@ J(@@@@UBJ@@@@)  [E^C[=C]^G[^C^[#@K@@@H;)@@[A[)@HQO9)@@E'=@@@@AX
)@@G@@R#@@RJ/,0@@@/,0@@@R;K@@/R#@@@ABK@@@@) I[F@^@ES]CK@CS]]^[S@@@/,0@@@C8K@@AAY
)@@G@@C@@@HQ/,0@@@C/@@]BT;0@@A/K@K^4(@@@@V/K@@^/BL@@@@) R[EK)^[]@T]@-#@L][[@@@AZ
)@@G@@/K@K^4'=@@@@R#@@RK/,0@@@/,0@@@R#@@@AR#K@@V/,0@@@C/@@@ABM@@@@) )[MK0^K0^@BA
)@@G@@^G[@@@(@@@@U&9)@@[R[)@HQW;)@@^ @@@@UC#0@@GO;@@@[P#@@HQR#@@HR@@@@@@BN@@@@BB
)@@G@@) %[F@ES]CK@CS]]^[S-@C@@C;K@@#/,0@@@C/@@@A/,0@@@C8K@@AC@@@HQ/,0@@@C/@@]BBC
)@@G@@/K@@ _BO@@@@) 3[E^C]1]@L@K)CK0^K)K@@'=@@@@R#@@RJ/,0@@@8AK@ 3/,0@@@C/@@@^BD
)@@G@@/,0@@@R;K@@GR#A)@@BP@@@@) /[F#@KK[@ES]CK@CS]@@@@C8K@@AC@@@HQ/,0@@@C/@@]BBE
)@@G@@/K@K )(@@@@V/K@@ (H;)@@[A )@HQBQ@@@@)A [F]@?K)^[]@?K)^@@@@@@H;0@@[/,0@@@BF
)@@G@@C/@@@^/,0@@@R;K@@GR#A)@@/,0@@@C/@@@A/,0@@@BR@@@@)AI[F@K)CK0^K)KK@K0^K@@@BG
)@@G@@'^@@^XA#@@HWR;@@@C@@@@@@/K@K )'=@@@@R#@@RJ/,0@@@/B0@ACBS@@@@)AR[N@[#@L@KBH
)@@G@@[@^@@@'^@@^4@@@@@@/K@KAX@@@@@@/K@KAS'^@@^XA#@@HWR;@@@E@@@@@@/K@KANBT@@@@BI
)@@G@@)A-[F@^[@^G[^G[@@@@@@@@@A[$)@@&90@@[R[0@HXR[)@HQ@@@@@@/K@KA+'^@@ )@@@@@@BJ
)@@G@@/K@KAZBU@@@@)A%[F#@K[#@L#@K@@@@@@@@@A#B)@@O;@@@[A#B)@@R#@@F$A )@F$O9)@@[BK
)@@G@@A#B)@@R#A@@@R[)@HQBV@@@@)A3[##@L#@KES]CK@CS]]^@0@@@@@@/,0@@@C8K@@PC8@@F4BL
)@@G@@/,0@@@C/@@]BA#H@@@R#K@HQR#@@F*BW@@@@)A;[##@KK)FK)CK0^K0^K)KK@@@@@@/K@KA>BM
)@@G@@'=@@@@R#@@RKA[0@HX/,0@@@/,0@@@R;K@@AR#@@HQBX@@@@)B#[MK0^K^G[@ES]@@N@K@@GBN
)@@G@@W8@@@^;G@@@=P;@@HY;C@@@M;*@@@MR#@@HX/K@@B%(@@@HQ@@@@@@BY@@@@)BH[F#@L#@KKBO
)@@G@@^G[^G[@@@@@@ @[@@@A#W@@@R#L@@[R#@@HQP@K@RM/K@@BU2@[)@@R#@@HQR@K@RLBZ@@@@BP
)@@G@@)BQ[E[@ES]CK@CS]]^@0@@@@/,0@@@C8K@@=C8@@F:/,0@@@C/@@]B/K@KB# @[@@# @[@@]BQ
)@@G@@ @[@@[CA@@@@)BZ[F#@KK)F^C[[]@D]@-#@KR#@@Q7/,0@@@/,0@@@C/@@@*/,0@@@C/@@@[BR
)@@G@@/,0@@@C8K@@AC@@@HQCB@@@@)B*[F][[@K0^]&@+@CS]CS]@R#@@HQA#@@HQR#^@@@/K@@B4BS
)@@G@@$9@@HY&9@__;R[@@HX/K@KB#'=@@@@CC@@@@)B1[M^[#@L#@L@^@K@ @@@@H@@@@@@/K@KB7BT
)@@G@@@@@@@@/K@KB#A[@@HXR[@@RN/K@@B?A#W@@@R#O@@[CD@@@@)B;[F@K[#@L#@K()C@@@@@@@BU
)@@G@@W8K@@#;GK@@=O;K@@[P;K@HYRBK@HXAB@@HQP;@@@[RB@@B9'^@@C,CE@@@@)C^[EK0^^[#@BV
)@@G@@L@ES]CK@CS]@C8@@F1/,0@@@C/@@]BA^0@@HP@0@RP/K@@CC2^#)@@R@0@RON@K@@HCF@@@@BW
)@@G@@)CH[]K)AK0^^C]4C]^G[^C^@@@@@@@'=@@@@R#@@RQ/,0@@@/,0@@@C8K@@AC@@@HQ/,0@@@BX
)@@G@@C8K@@LCG@@@@)CP[N@K[#@K^[#@K@@C[6@@@R &@@@P[)@RR/K@@C)2D&)@@N8K@@%R[)@R BY
)@@G@@@@@@@@/K@@@<'^@@^TCH@@@@)CZ[#@ES]CK@CS]CKB]^]2^[K@@@@@/,0@@@/,0@@@R#@@@MBZ
)@@G@@/,0@@@C8@@F9/,0@@@C/@@]B/K@@C:CI@@@@)C$[F]@-#@L][[@K@^G[@@@@9*@@F.@@@@@@CA
)@@G@@/KG@@@O;@@@[R#@@CR/K@KCR'=@@@@R#@@RK/,0@@@CJ@@@@)C0[EK)OK0^]&@)@@@@@@@@@CB
)@@G@@M#H)@@N8K@@IQ;K@@I&;K@@[Q;@@F_&;@@@[^@K@GSA:@@@@R;@@@[CK@@@@)C9[N#@K@@K@CC
)@@G@@@@@@@@@@@@@@/K@KC,M#H)@@N8K@@IQ;K@[]&;K@@[O;@@@[M#H)@@N8K@@FR#K@RRCL@@@@CD
)@@G@@)D#[MES]@]A@)@@@@@O;@@@[M#W)@@N8K@@FR#K@RRM#W)@@N8K@@IQ;K@@I&;K@@[Q;@@F_CE
)@@G@@&;@@@[CM@@@@)DH[M@K0^K0^K@ES]@C/@@]BR 6@@@@@@@@@/K@KD]N@K@GS9?@@F.M#W)@@CF
)@@G@@N8K@@IQ;K@[]&;K@@[CN@@@@)DR[F]@@K)Q^C[^G[^C -]@K/,0@@@C/@@@[/,0@@@R#@@R@CG
)@@G@@/,0@@@C/@@@[/,0@@@RFA)@@/,0@@@CO@@@@)D)[E^C]4C]^G[^C^^[@@@@@@@@@@@/K@KDOCH
)@@G@@8K0@DP'=@@@@R#@@R[/,0@@@/,0@@@R;K@@GR#B@@@CP@@@@)D([MK0^[#@K@@@@@@C;K@@ CI
)@@G@@ @@@@UC;0@@[N9@@@[C[@@@H+@@@RSR#@@@KR#0@@H+@@@RSR#@@@JCQ@@@@)D3[M^@K[@K0CJ
)@@G@@^K)KK@/K@@@<'=@@@@R#@@RT/K@KD*C[@@@L8L@@D2;G0@@=8AK@D3;D@@@#;H@@@#CR@@@@CK
)@@G@@)D.[F][)ES]@@-)C@@@@@@@@R@0@RUR@:@@[R@V@@@N90@[BM#H)@@N8K@[=R;K@F(R#F@@[CL
)@@G@@'=@@@@CS@@@@)EA[N#@K[@^[#@KK@@/K@@ER:8)@@ R@0@RU/K@@EI$80@@ ')#@EY&9K@@[CM
)@@G@@ @@@@VR[K@@]R[@@RUCT@@@@)EK[MK[@K0^K^@K^@@8L0@EE/K@@EV*@@@@V/K@@EX8L0@EECN
)@@G@@R[@@RU/K@@EP$9@@@ ')^@E=G;0@@[CU@@@@)EU[V@^@@@@@A7>@@@R<-)@@R$-@@@R:-@@@CO
)@@G@@R\-@@@R3-@@@R7-@@@/KF@@]8L0@EAO8)@@]/K@@EXCV@@@@)E>@%@@@@@@@)@@@&@+&@C@@CP
)@@G@@Y *   G READ* DEBU:Z@@@HA<>)@@A$>@@@A:>@@@A\>@@@A3>@@@CW@@@@)@^[Y@)@@@@@CQ
)@@G@@GUARD ATION*L OPERILLEGA:     ATION AT LOCGENCY CONTINY *   * READCX@@@@CR
)@@G@@)@J[Y@)@@@@@LOW*   OVERFDIVIDE*     ERFLOWPT UNDFLOAT RFLOW*PT OVEFLOAT CS
)@@G@@MODE* CY@@@@)@U[I@)@@@@@@@@@@@@@@@@@TRAP* ODE*  ERR$ MYIN*  RBK KEII OR CT
)@@G@@BT$*   OR EAABORT$CZ@@@@)]B@I@+)@@@@)]I@6@)/S@JA@#1)@/S@JA@@@@@@@R@@@@@NCU
)@@G@@@@@@@K@@@@@I@@@@@F@@@@@@@*I@@<DA@@@@)]O@"@)/S@JA@@/S@#1)@@@@@@@@@@@@@@@@CV
)@@G@@@@@@@+@@@@@@@@@@@)@@@@@@@@@@@X@@@@@U@@@@@@DB@@@@)#_[A@<1)G@K/S#@^JA@0[#1CW
)@@G@@)G@K@@DUMPA @@@@[$PRINTN@@@@[TPRINTA@@@@@_HELP  @@@@@6DC@@@@)^B[A@<1)G@KCX
)@@G@@/S#@^JA@0[#1)G@K@@CREGS @@@@]XCBREAK@@@@]IBREAK @@@@] DUMPN @@@@[5DD@@@@CY
)@@G@@)^J[A@<1)G@K/S#@^JA@0[#1)G@K@@GOTO  @@@@^KPATCHR@@@@#YEXIT  @@@@^FPATCH CZ
)@@G@@@@@@#JDE@@@@)^R[I@<1)G@K/S#@^@@@@@@@PPORTSGER SU DEBUG  THIS@@@@@ITRAP  DA
)@@G@@@@@@[GSNOOPY@@@@[NDF@@@@)^)[Y@)@@@@@ THE ACRIBES - DES) HELP     1      DB
)@@G@@      MANDS:NG COMOLLOWI THE FDG@@@@)^:[Y@)@@@@@HEIR F AND TMANDS,   COMDC
)@@G@@                              LE    VAILABDH@@@@)^6[Y@)@@@@@DDRN  ---- ADD
)@@G@@R2 ---R1 ADDTA ADD) PRIN     2                  ORMAT.DI@@@@) [[Y@)@@@@@DE
)@@G@@PAIR  EEN A A BETWHE DATINTS T  - PR                              DJ@@@@DF
)@@G@@) G[Y@)@@@@@      DATA  FIELD ES IN DDRESS  OF A                        DG
)@@G@@      DK@@@@) R[Y@)@@@@@                                    R N   TN ADDDH
)@@G@@) PRIN     3      DL@@@@) +[Y@)@@@@@                   ADDR ING AT STARTDI
)@@G@@ WORDSINTS N  - PR            DM@@@@) ![Y@)@@@@@) DUMP     4            DJ
)@@G@@            ATA   IELD D  IN F            DN@@@@) 8[Y@)@@@@@  - DU      DK
)@@G@@                  DRN   --- ADR3 ---R2 ADDR1 ADDA  ADDDO@@@@)A#[Y@)@@@@@DL
)@@G@@ ADDRE    OF                        AIR   EN A P BETWEE DATAMPS THDP@@@@DM
)@@G@@)AI[Y@)@@@@@E      A LIN    TO                        ORDS  L, 4 WN OCTADN
)@@G@@SSES IDQ@@@@)AT[Y@)@@@@@            R N   N  ADD) DUMP     5            DO
)@@G@@                  DR@@@@)A=[Y@)@@@@@A STAROF DATWORDS MPS N   - DU      DP
)@@G@@                              DS@@@@)A\[Y@)@@@@@RDS     4 WO OCTALDDR INDQ
)@@G@@  AT A                              TING  DT@@@@)A'[Y@)@@@@@            DR
)@@G@@             LINE   TO A                              DU@@@@)B [Y@)@@@@@DS
)@@G@@            DRN   --- ADR3 ---R2 ADDR1 ADDK  ADD) BREA     6      DV@@@@DT
)@@G@@)BK[Y@)@@@@@     7      DDR N THRU AADDR1 NTS A AK POITS BRE  - SE      DU
)@@G@@      DW@@@@)BV[Y@)@@@@@                              RN    -  ADDR2 ---DV
)@@G@@R1 ADDAK ADD) CBREDX@@@@)B&[Y@)@@@@@                              THRU NDW
)@@G@@ADDR1 TS AT REAK PEARS B  - CLDY@@@@)B1[Y@)@@@@@  POIN                  DX
)@@G@@      LL BRKIED, ASPECIFS ARE O ADDR  IF NDZ@@@@)B/[Y@)@@@@@--- RN RN2 -DY
)@@G@@S  RN1) CREG     8                  ED     CLEARTS AREEA@@@@)CB[Y@)@@@@@DZ
)@@G@@STERS E REGIMPS TH  - DU            R     OR ALL ALLX LLA OR2 OR AEB@@@@EA
)@@G@@)CM[Y@)@@@@@REGS IALL A NI OR   BY R                              IED   EB
)@@G@@SPECIFEC@@@@)CX[Y@)@@@@@F ALLXREGS IALL X    OR                         EC
)@@G@@            F ALLAED@@@@)C*[Y@)@@@@@      F ALLRREGS IALL R    OR       ED
)@@G@@                              EE@@@@)C3[Y@)@@@@@N     N CONT- ADDRT2 ---EE
)@@G@@R2 CONT1 ADDR1 CONH  ADD) PATC     9      EF@@@@)C"[Y@)@@@@@            EF
)@@G@@      DDR1  S OF AONTENT THE CPLACES    RE            EG@@@@)DD[Y@)@@@@@EG
)@@G@@                        TA    THE DA WITH  ADDRN  THRU            EH@@@@EH
)@@G@@)DO[Y@)@@@@@T - RE0) EXI     1      Y     CTIVEL RESPE CONTN1 THRU  CONTEI
)@@G@@      EI@@@@)DZ[Y@)@@@@@                              ON    TRUCTIXT INSEJ
)@@G@@ TO NEONTROLTURN CEJ@@@@)D%[Y@)@@@@@      R     O  ADD)  GOT    11      EK
)@@G@@                              EK@@@@)D5[Y@)@@@@@LOCATIO THE TROL TSS CONEL
)@@G@@  - PA                                    EL@@@@)E@[Y@)@@@@@      R     EM
)@@G@@BY ADDIFIED   SPEC                              ON    EM@@@@)EF[Y@)@@@@@EN
)@@G@@                  ISTING@MAP LM THE ED FROOBTAIN                  EN@@@@EO
)@@G@@)EQ[Y@)@@@@@F     S- LJSNUMBEROCTAL DIGIT  BE 6 S MUSTDRESSEALL AD      EP
)@@G@@      EO@@@@)E-[Y@)@@@@@ ** NO      S     NUMBEROCTAL DIGIT BE 12  MUST EQ
)@@G@@RESSESLL ADD     AEP@@@@)E?[Y@)@@@@@                                    ER
)@@G@@                        TE ** EQ@@@@)E7[Y@)@@@@@NTS MULL COU     A      ES
)@@G@@                                          ER@@@@)F][Y@)@@@@@      9999  ET
)@@G@@    99            AN    ESS THGERS LL INTEDECIMAST BE ES@@@@)FH[Y@)@@@@@EU
)@@G@@MUST SBLANK T ONE T LEAS     A                                    ET@@@@EV
)@@G@@)FS[Y@)@@@@@      INE   MAND L A COM    ON            NT     ELEMEE EACHEW
)@@G@@EPARATEU@@@@)F<[Q@)@K0[@@@@@@@REAK P* NO B            '^@@B9/K@@@@      EX
)@@G@@                  EV@@@@)F![Y@)@@@@@ :    SET ATPOINT BREAK AT :  POINT EY
)@@G@@BREAK ON:   LOCATIET AT OINT SEW@@@@)F8@,@)@@@@@)G$@Y@+)O])@@@@@@@A2 @F_EZ
)@@G@@A1 @F"A0 @F.INED* OT DEFER * NREGIST      EX@@@@)G%[I@+)O])O])O])O])@@@@FA
)@@G@@A11@GCA10@GBA9 @GAA8 @G A7 @G^A6 @G#A5 @G]A4 @G[A3 @G@EY@@@@)G3[I@+)O])OFB
)@@G@@])O])O])@@@@X5 @GLX4 @GKX3 @GJX2 @GIX1 @GHA15@GGA14@GFA13@GEA12@GDEZ@@@@FC
)@@G@@)G/[I@+)O])O])O])O])@@@@R3 @GUR2 @GTR1 @GSX11@GRX10@GQX9 @GPX8 @GOX7 @GNFD
)@@G@@X6 @GMFA@@@@)H [I@+)O])O])O])O])@@@@R12@G<R11@G+R10@G-R9 @G)R8 @GZR7 @GYFE
)@@G@@R6 @GXR5 @GWR4 @GVFB@@@@)HI[Q@+)O])@@@@@@@@@@@@@@@@@@@AT ??  ?? WH *    FF
)@@G@@G EXIT* DEBUR15@G&R14@G>R13@G=FC@@@@)HS@6@)@E@@@)Q6@Y@+)O])@@[]@@^@[I@@<FG
)@@G@@@[#@@[@@[@HY@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FD@@@@)Q9[Q@<A@G* @E@@O@ALLA  FH
)@@G@@@[^@@<VALUE:@@@   @@@ALLALL   @@]@]X@]E@@@@@]@#_@D.@@<FE@@@@)R#[Q@)E[KE@FI
)@@G@@@@@@@@ARE:  VALUESW     OLD/NE      @@[@H]@@[@G7@@[@G$ALLR  ALLX  FF@@@@FJ
)@@G@@)RH[I@+)O])O]) @*@@@@@@@@@#@@]@@#@HY@@[@HY@@^@@^@@^@HY@[E@@<@[G@@<@[#@HLFK
)@@G@@@[C@@<FG@@@@)RQ@,@+)[K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@@@[]@HOFL
)@@G@@JJJJJJ@@[@@[@[ @@<FH@@@@@@^@@ @@D@@T@@;@@#@[B@@@@@@@@@@@@@E%)@@@@@)@@@@@FM
)@@G@@@@@@RVEDIT$       EDITR$      ECHAR$      ECOL$       ESKIP$      ECLR$ FN
)@@G@@      ECOPY$      EPACK$      EDITX$      ECOLN$      EMSGR$      EOCTF$FO
)@@G@@      EDECF$      EDCFZ$      EMSG$       IALL$       PRINT$      CEND$ FP
)@@G@@      READ$       SETBP$      SNFLG$      SNOOPY      EFD1$       EFD2$ FQ
)@@G@@      EXIT$       DEBUG$      @@[@@@@@@@@@DEBUGS      @@[@@@@@@@@ CONRTNFR
)@@G@@      @@[@@@@@@@@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[EK0^K)KK0^[#@L][ ][C[@@@@@C@@@@@ @@@@FM#W)@@FT
)@@G@@N8K@@AC@K@@N[@@@@@C@@@@M@@@@@@AA@@@@)@D[F@^[][H#@K^[][C@@@@@C@@@@@/K@@@6FU
)@@G@@2O[)@@CWB@@@R@K@@ONWK@@@/K@@@0(@@@@B'^@@@/AB@@@@)@M[F][L][P@^C =C =G[@@@FV
)@@G@@[@R@@@+@B@@@C@@@@P[@@@@@G@@@@@C8@@@[/K@@@6*@@@@@'^@@@@AC@@@@)@V[M[#@KK0^FW
)@@G@@@K@@@@/K@@@%(@@@@ [@Q@@@+@@@@HC@@@@R)@A@@@C@@@@Q[^C@@]G^C@@]C^B@@@AD@@@@FX
)@@G@@)@>[F#@KK0^[@K0^K@@@@@@@C@[@@@/K@@]M*@@@@F'^@@] [@P@@@+@@@@HC@@@@R)@ @@@FY
)@@G@@C@@@@QAE@@@@)@,[F][ @K0^K0^^G[[@K0^@A]K@@F/K@@]ZR@K@@A[@@@@EC@A@@@A]K@@DFZ
)@@G@@A]K@@F/K@@@C[@@@@@AF@@@@)@7[F#@L@^G[^@[][W@@@@@@'^@@@@R]K@@G @@@@ @@@@@@GA
)@@G@@/K@@]Z[@@@@EC@[@@@'^@@] A]K@@DAG@@@@)[@[MK)SK)T[@@@@@@0@A@@@P[)@@JOD*@@]GB
)@@G@@R[)@@C/K@@[?!@@@@JCCC@@A'^@@@@'=@@@@(@@@@HAH@@@@)[E[N@K0^^@@K)T@@@R[)@@CGC
)@@G@@'^@@@@;CK@@SC@S@@[C^&@@@R[K@@A/@K@[(+@A@@@C@@@@S/,0@[4AI@@@@)[O[M@[#@KK^GD
)@@G@@G[@@@@C])@@U/,0@[49@A)@@N@)@@TC@ @@@NCS@@#&9)__"PD*@@AP9)@@[OD*@@]AJ@@@@GE
)@@G@@)[Y[MK@@[@@@@@@@@@/K@@[V%])@@DC]$@@@O[0@@QH')@@[CA$@@@O 6@@[R[0@@C/]0@[VGF
)@@G@@+]&@@[AK@@@@)[*[N#@K^@^@^@@@@@/K@K@/P[)@@JOD*@@]/@0@[2R[)@@C @@@@B/K@K@/GG
)@@G@@O 6@@@R[0@@CO[)@@VAL@@@@)[2[EK]=@2^@]A@)-@I-@S@@C8K@@GC@@@@@/,0@@@C8K@@MGH
)@@G@@C8@@@@/,0@@@C/@@@@/K@K@/O9)@@BAM@@@@)[;[#]@=K)]K0^^C[4C#OG[@@@@@@@R#@@@WGI
)@@G@@/,0@@@/,0@@@C8K@@+C8@@@#/,0@@@C/@@@)/,0@@@AN@@@@)]#@F][?@@@@)@@[A@)@@@@@GJ
)@@G@@CALC CA BAD NG IN CIPATI PARTID(DBP= RECORA CALC'=@@@@AO@@@@)@C@I@)@@@@@GK
)@@G@@)]^@;][)^CB[][0@@@2W[)@@NCK@@@&8K@@[R@K@@@CWB@@@@@@@@@'=@@@@HAIN  AP@@@@GL
)@@G@@)]F[F@K0^@^@K0^@@@@@@@@@[@@@@EC@[@@@/K@K] P8K@@[O@K@@BR@K@@GCO[@@@P@K@@VGM
)@@G@@/,0@[4AQ@@@@)]O[F#@L@^[@K0^^@@@@@@@@R@K@@A/K@@]Z[@[@@@C@@@@E'^@@] /K@@]WGN
)@@G@@(@@@@B'^@@@/C@@@@DAR@@@@)]X[F#@KK)GK^C^L#@KK0^@@C@@@@M @[@@@:@@@@D[@[@@@GO
)@@G@@C@@@@@/K@@@C%@@@@@[@[@@@C@@@@EAS@@@@)]&@<#@K^@@@)@D@Y@)@@@@@@@@@@@@@@@@@GP
)@@G@@@@@@@@@@@@@@@@@@@@/K@K@@M#H)@@N8K@@AC@K@@NAT@@@@)@M[Q@)* C^0@@@@@@@@[@@[GQ
)@@G@@K@@@@@@__@@@C@@@@@$__@@@)@@@@@__7___@@[@@@@@[@@G@@[@@AAU@@@@)@W@I@+=#K@@GR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[I@@@AV@@@@GS
)@@G@@@@^@@ @@D@@X@[#@@[@[B@@@@@@@@@@@@@]%)@@@@@)@@@@@@@@@@XEDIT$       EDITR$GT
)@@G@@      ECHAR$      ECOL$       ESKIP$      ECLR$       EDPKT       ECOPY$GU
)@@G@@      EPACK$      EOCTF$      EDECF$      EDCFZ$      DBP1        EDITX$GV
)@@G@@      ECOLN$      EMSGR$      CALCSW      DBP2        PKTKEY      DLTC10GW
)@@G@@      CHKEY       KEYOK       DLTCNT      DBP$APS     ERR$        GETPG GX
)@@G@@      PRINT       PRINT$      C6          DECALC      @@[@@@@@@@@@0,0) .GY
)@@G@@  END . P$ PROC 0,1 .  LMJ 11,P$(0,0) .  END . P$ PROC 1,2 .  L 12,P$(1,GZ
)@@G@@)@@[##@L@K0^K0^^[#@L#@K@@@@@@@R]G@@.C@@@@/'^@@@R(CH@@@C@W@@.C@@@@//K@@[AHA
)@@G@@(@@@@FAA@@@@)@C[N#@K@@K0^K0^@@[@@@@_G@@@@_G8@@@[N@0@@GN@K@@GCCH)@@&')@@[HB
)@@G@@&;K@@[G@K@@CC@K@@_AB@@@@)@M[M@[#@L@K^G[@@@0@@@[^/^@@@=/G@@[XC@@@[:@@@@@@HC
)@@G@@/KF@@@[CC@@@H8@@@[CCC@@@M]!)@@AC@@@@)@W[#][OK0^K0^K0^K0^K0^K@@@@@@/K@K@RHD
)@@G@@[@@@[:C@@@]>[@@@@/H@@@@/[@@@@_C8@@@['=@@@@AD@@@@)@=[F@K0^^G[^[#@K@@@@@@@HE
)@@G@@@@@@@@/KF@@@[@E@@@C@@@]&/K@K@R[@@@[:H8@@@[C@@@[:'^@@@?AE@@@@)@![F#@L][P#HF
)@@G@@@L@^G[^G[@@@ @@@@GC^S@@@R]G@@.H@@@@/C8@@@['^@@#X*@@@@G'=@@@@0@@@[^AF@@@@HG
)@@G@@)@6[E[#@L#@L#@L#@L#@L#@K[^K@[ C@W@@.C@@@@/[@@@[A[@@@[@G@@@[@G8@@@[*@@@@HHH
)@@G@@W8@@@WAG@@@@)@_[]K0^K0^K0^ES]CKFC]^]8@@@@@C@@@@@/K@K@?'=@@@@C8@@[[[@@@@/HI
)@@G@@H@@@@/[@@@@_C8@@@[AH@@@@)[B[]K0^EKECS] C ]=]+^]'^#@@@@'=@@@@[@@@@@G8@@@@HJ
)@@G@@G8@@@@[@K@@"G8K@@@[@K@@.K8@@@[AI@@@@)[J[EK0^K)TK^CAL][>@K@@@/K@@[W8KK@[SHK
)@@G@@NCK@@@&'@@@[RA@@@@/K@@[W(@@@@@[@@@@FC8@@@[AJ@@@@)[S[E^G[^[#@L#@KK0^@@@@@HL
)@@G@@:8@@@F[@@@]=G8@@@[C@@@]= @@@]=/K@@[Q[4H@@@PRS)@@C8K@@EAK@@@@)[-[#@K0^K^GHM
)@@G@@[[#@L#@L#@K@@@@@@@9*K@[[9*K@]B9?W@]EG@@@@GC^G@@@/K@@[X(4G@@@/K@@@(AL@@@@HN
)@@G@@)[([##@L#@KK0^ES]CKHC[N@K@@@@@R')@] /C@@[3'=@@@@C8@@] [@@@@_C8@@@[ @@@@/HO
)@@G@@9*K@[BAM@@@@)[1@N][!][0@)@@@"@)@@@@@@@@@@^@@@@@ @@@@@A@@@@@B@@@@@C@@@@@DHP
)@@G@@@@@@@@'=@@@@/,0@@@AN@@@@)@B@,@)@@@@@)[3@V#@L#@L#@K@@@@C@@@]$9*@@@\9?@@[BHQ
)@@G@@@@@@@@[@@@@@@@@@@[@@@@@]@@@@@#AO@@@@)[6[F][5#@K[#@L#@L#@L@@@/K@@][(@@@@GHR
)@@G@@[@@@@G\4K@@5C8@@@[C8)@@J @@@@H @@@@G'=@@@@AP@@@@)[_[##@L][8()C-@"-)C-@8-HS
)@@G@@)C)@@@'^@@#G*@@@@G'=@@@@*4@@[E'=@@@@C8@@[B'=@@@@C@@@]*AQ@@@@)]B[F@K0^K0^HT
)@@G@@K0^^G[[#@K@@C8@@@] @@@@/ @G@@@C@@@@" @G@@@C@@@@.[C@@[ CC@@[I'^@@]XAR@@@@HU
)@@G@@)]K[##@L#@L@K0^K)PK0^K)WK0^@@@C@@@[:'=@@@@*4@@[^'=@@@@0@@@[^'^@@@? 4@@[^HV
)@@G@@[@@@[@AS@@@@)]S[EK0^K^G[^@K0^K0^K@@@/K@@]4*@@@@GA]0@]<@@@@@@/K@@@@ @@@@/HW
)@@G@@'^@@@R[@@@[:H8@@@[AT@@@@)]-[](@G-@@-)C-@K-)CCK CS]@@@@C@@@[?/,0@@@C8K@@DHX
)@@G@@C8@@]Y/,0@@@C@@@[:/,0@@@C/@@@@AU@@@@)]([#]@-#@KK)EK0^K)GK)HK0^@@@@R#@@](HY
)@@G@@/,0@@@/,0@@@9?@@[[/,0@@@C8K@@GC8@@])/,0@@@AV@@@@)]1[#]] #@L@EK#CK@CS]CKAHZ
)@@G@@@@@@@@C/@@@[/,0@@@9?@@]%/,0@@@C/@@@@/K@K]XR]0@]<'=@@@@AW@@@@)]9[#]@L#@L]IA
)@@G@@@0K)^K0^K)D@@@@@@@C/@@@[/,0@@@C@@@]?/,0@@@C/@@@[/,0@@@9?@@[[/,0@@@AX@@@@IB
)@@G@@)#[[#]@L#@L]@=K)^K0^K)GK0^@@@@C@@@@,/,0@@@9?@@],/,0@@@C/@@@[/,0@@@C@@@]!IC
)@@G@@/,0@@@AY@@@@)#D[EK)LK[#@KK0^K0^K)W@@'=@@@@%^@@[M[@@@@,O;@@@[C@@@@,@@@@@@ID
)@@G@@/K@@]\/,0@@@C8K@@#AZ@@@@)#M[##@L#@L][0K0^ES]CKJ*S]@@@@C4@@[E'=@@@@C8@@[BIE
)@@G@@[@@@[:C8@]G*'=@@@@%@@@]0C@@@[HBA@@@@)#U[EK^CB[#@L@^CB^G[@@@@9?@@[['=@@@@IF
)@@G@@%8@@@[/@@K#XC4@@[^@@@@@@'=@@@@/K@K#G:8@@@[BB@@@@)#<[##@K()C-@"-)C-@8-)C-IG
)@@G@@)C)@@@/K@@[X:@@@]1C@@@@M'=@@@@*4@@@K'=@@@@C8@@@H9*@@@HBC@@@@)#:@:#@L][1#IH
)@@G@@@L]]D@@@@@@@)@G@Q@)@@@@@D$FILE@@@@@@/K@@]['=@@@@C@@@]*'=@@@@%@@@]2BD@@@@II
)@@G@@)@I@&@)JA0)NE@@@@@)@,@I@)@@@@@)@/@I@)@@@@@@@@@@@@@@@@@@@W@@M@@@@@@@@@@@@IJ
)@@G@@0     BE@@@@)@.[Q@)@@/V][G)KE@@@@@@]@@@@@@@@@@@@@@@@@@0     D$FILE@@@@@]IK
)@@G@@@@@@@[@@@@@@@@@@@@BF@@@@)[B[Q@)#1?C^2)@@@@@@@@@@@@@@@@@@@@@@HDRO@@@@@@@@IL
)@@G@@@@8@[H@@@@@@@@@@@@0     D$FILEBG@@@@)[L@Y@)@@@@@)[(@6@)@@@@@@@@@@@@@@@@@IM
)@@G@@@@@@@@@@@@@@@@@@@@EOFO@@@@@@@@@@@@@@@@@@@@BH@@@@)[\@I@)@@@@@)] [A@)@@@@@IN
)@@G@@D$FILE0     D$FILE .    0     D$FILE      @ASG,A@@@@@@BI@@@@)]H[Y@)@@@@@IO
)@@G@@6     D$FILE5     D$FILE4     D$FILE3     D$FILE2     D$FILE1     BJ@@@@IP
)@@G@@)]S[Y@)@@@@@      DS IN  RECORS,     BLOCK9     D$FILE8     D$FILE7     IQ
)@@G@@D$FILEBK@@@@)]<[Q@)@* @([@@@@@@@FROMEADING@@@@@R@]I@@@@@@@@\@@H@@\______IR
)@@G@@_____"@@@@@@@@@@@@BL@@@@)]!@6@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EORO@@IS
)@@G@@EOFO@@HDRO@@L-NO.:@@@REE@@TAPEBM@@@@@@@@@@0^K0^K0^ES]CKFC]^]8@@@@@C@@@@@IT
)@@G@@/K@K@?'=@@@@C8@@[[[@@@@/H@@@@/[@@@@_C8@@@[AH@@@@@@^@@ @@D@@<@[J@@]@[R@@@IU
)@@G@@@@@@@@@@@@#0)@@@@@)@@@@@@@@@]3EDIT$       EDITR$      ECHAR$      ECOL$ IV
)@@G@@      ESKIP$      ECLR$       EDPKT       EOCTV$      EDECV$      EFD1$ IW
)@@G@@      ECOPY$      EPACK$      EFD2$       EDITX$      ECOLN$      EMSGR$IX
)@@G@@      EOCTF$      EDECF$      EDCFZ$      R$          BLKSZ       WAIT$ IY
)@@G@@      IO$         LAST$D      MCORE$      C18         CSF$        ASGERRIZ
)@@G@@      ERR$        FITEM$      TINTL$      IOW$        PRINT       PRINT$JA
)@@G@@      TSWAP$      DF$AMR      @@[@@@@@@@@@NAMED2      @@^@@@@@@@]EOC 1,2JB
)@@G@@ .  L 12,P$(1,1) .  ER PRINT$ .  END . P$ PROC 1 .  DO P$(1)>1 , LA,P$(1JC
)@@G@@,4) 12,+(E$AD 1,2) .  DO P$(1)>0 , LA,14 13,P$(1,1) .  LMJ 11,P$(0,0) . JD
)@@G@@)@@[]K)MK0^K)NK0^K0^K0^K@@@@@@/K@K@@(C@@ 2RA@@ 2[^@@ 2C^@@@@[C@@ 2CC@@@@JE
)@@G@@@@@@@@AA@@@@)@C[M@[@K^G[@@@@@@0@A@@@ @@@ @8]K@@K/K@@[U(@@@@DRES@@#P9)@@[JF
)@@G@@PD*@@AOD*@@]R[)@@CAB@@@@)@M[F@K0^^@[#@L][K@@@@@@NWK@@@C@K@ 8CWB@@@O[0@@CJG
)@@G@@R 6@@@/^K@[S+@A@@@C@@@ 7/K@@[SAC@@@@)@V[EK^G[^G[[#@L#@KK0^@@[@K@ [+@B@@@JH
)@@G@@C@@@ '[@@@ 3*SH@@@ @@@ 3H@K@ 9/K@@[S2OH)@@AD@@@@)@=[N@@^[#@L@^G[@@G@@@^_JI
)@@G@@C8@@@[/K@@[S*@@@#U'^@@#<C@G@@@H8@@@[G^B@@@C@@@@B/@K@@(AE@@@@)@,[F#@L#@K@JJ
)@@G@@^G[@@@@@@@@@)@&@@@C@)@ /[^*@@]G^*@@]C^$@@@[@7@@@+@$@@@C@)@ ;[@@@^_AF@@@@JK
)@@G@@)@7[F#@K^G[^G[^[#@L#@L@@/@@@[SC@@@ 3 @@@ ['^@@[)*@@@ [ @@@ 6[@6@@@+@)@@JJL
)@@G@@C@)@ .AG@@@@)[@[N#@L@@@K)P@@@@(@@@@G'^@@@@H@0@@KH[@@@CC[@@@ACC8@@]C^*@@[JM
)@@G@@CWS@@[/^@@[FC@@@ 6AH@@@@)[E[F][T][W^C 1][T#@K@@@RO-@@@P@K@ 9'=@@@@2XL)@@JN
)@@G@@NCK@@@CXR@@@&8K@@[R^K@@@'=@@@@AI@@@@)[N[E[#@L][)K[#@K@@@@@@@AA@@ 2OEC@@]JO
)@@G@@8]K@@KP9)@@['^@@@@9*@@ 4C@M@@@P8)@@[O@)@@BAJ@@@@)[W[F#@KK0^K[#@L#@K@@@@@JP
)@@G@@M#W)@@N8K@@AC@K@ _C@@@ "@@@@@@/K@@@ [C@@ 2H8@@@[CC@@ 2AK@@@@)[>[E@K0^K)TJQ
)@@G@@K0^K0^K@@@@@/@K@[.COK@@@[@K@@@'^@@@@[@@@ 6C@G@@@H8@@@[G^B@@@C@@@@BAL@@@@JR
)@@G@@)[,[MK^@^G[[#@K@@@[@S@@@+@@@@HC@@@A@)@C@@@C@@@ /P]@@@JOEC@@]'^@@]?/K@@[.JS
)@@G@@%WS@@[AM@@@@)[8[F#@L#@K^[#@K^G[@@@@@[@@@ 1H@@@@DCCC@@#[@@@ ,/K@K[)M#H)@@JT
)@@G@@N8K@@AC@K@ _C@@@ "AN@@@@)][[EK0^^G[]=@2^@]A@)-@I/,0@@@C8K@@PC8@@ #/,0@@@JU
)@@G@@C/@@@@[O@@ \CWC@@[[@@@ 0C^C@@[AO@@@@)]E[##@L]@(#@KK)BK0^K)EK0^@@@@C8@@ DJV
)@@G@@/,0@@@C@@@ 0/,0@@@C8K@@BC8@@ B/,0@@@C@@@ \AP@@@@)]M[]K)BK0^K)EK)GK0^K)UKJW
)@@G@@0^@@@@R#@@A]'=@@@@R#@@A[/,0@@@/,0@@@C@@@ 1/,0@@@C8K@@BAQ@@@@)]U[#][*(@G-JX
)@@G@@@@-)CCK#*S]@@@@@@@C8K@@GC@@@ ,/,0@@@C8K@@MC8@@ F/,0@@@C/@@@@'=@@@@AR@@@@JY
)@@G@@)]+[#]@.#@KK)BK)GK0^K)UK0^@@@@R#@@A#'=@@@@R#@@A]/,0@@@/,0@@@C8K@@-C8@@ IJZ
)@@G@@/,0@@@AS@@@@)]%[F][(@^CB^[][D#@KK@@@/K@@]52C-)@[R@K@A^NCK@@@/K@@]5%OK@@@KA
)@@G@@@@@@@@/K@@[8'=@@@@AT@@@@)]3[MK@K0^K0^^@K@@/K@K]?RA[@@[/K@@].2@-)@]R@K@A KB
)@@G@@N@K@@[;GK@@M;*)@@M/K@K]?RA[@@@AU@@@@)].[F#@L#@K^G[^G[[#@K@@@T8@@@][@@@@[KC
)@@G@@G8@@@[C@@@@[[@0@ ]M#W)@@N8K@@AC@K@AAC@@@ "AV@@@@)#A[E^G[^G[^G[^G[^CBL][SKD
)@@G@@'=@@@@(@@@@G'^@@@@CCC@@][^@@#OC^C@@][@*@@]R]@@@GH8@@@]AW@@@@)#J[##@L#@L#KE
)@@G@@@L#@KK)YK0^@@@@@@@C8@@@K[@C@@ '=@@@@O#@@@H[^K@#NC@S@@#9*K@#G[C@@#OAX@@@@KF
)@@G@@)#R[##@K()C-@"-)C-[@-)C-)C-)C@C@K@AAC@@@ "C@0@ ]/,0@@@*4@@#J/,0@@@R')@#GKG
)@@G@@[0@@#JAY@@@@)#Z[E^G[^@K0^K^G[^@@@@@@/K@@#1*@@@ @/K@@#1*@@@ [@@@@@@/K@K]?KH
)@@G@@RA@@#NM#H)@@N8K@@AAZ@@@@)#*[E@^CB^C L][S@@@@@@@@'=@@@@(@@@@G'^@@@@COK@@@KI
)@@G@@C^*@@[H@0@@GCC8@@]H@@@@CC@@@@ABA@@@@)#1@:#@L#@K()C-[])@@@@@@)@@@Q@)@@@@@KJ
)@@G@@@@@@@@@@@@@@/K@K#</,0@@@R')@#P @@@#U[@@@#SBB@@@@)@]@Q@)@@@@@)#N@"@)@@@@@KK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@@@@@@@@@@@@@@BC@@@@)#U@I@)@@@@@KL
)@@G@@)^_[A@)@@@@@EA     ON ARNNING:** WAR@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BD@@@@KM
)@@G@@) B[Y@)@@@@@N NOT ORD CAHE REC) IN TINTER(IGN POA FORE      , SLOT      KN
)@@G@@, PAGEBE@@@@) M@Q@)@@@@@) U@"@)@@@@@* * * * * * * * * * * * * * * * * * KO
)@@G@@* * * CED   BE TRABF@@@@) -@Y@)@@@@@) ,@6@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KP
)@@G@@@@@@@@@@@@@@* * * * * * * * * BG@@@@) 4[Q@)@(@*@@@@@@@___@@@)@@@@@__7___KQ
)@@G@@@@K@@@@@[@@[@@[@@@C@@@@@@@@@@@@@@@@@@@@@@@BH@@@@) "[I@)*[KEKH>@!@&O])@@@KR
)@@G@@@@[@ O@@]@@@@@[__"@[E@ U@[I@@@@]E@ U$__@@@@@[@ =@@[@@ABI@@@@@@@@@@^G[^G[KS
)@@G@@[#@L#@KK0^@@[@K@ [+@B@@@C@@@ '[@@@ 3*SH@@@ @@@ 3H@K@ 9/K@@[S2OH)@@AD@@@@KT
)@@G@@@@^@@ @@D@@+@[H@@O@]X@@@@@@@@@@@@@#6)@@@@@)@@@@@@@@@ABEDIT$       EDITR$KU
)@@G@@      ECHAR$      ECOL$       ESKIP$      ECLR$       EDPKT       ECOPY$KV
)@@G@@      EPACK$      EOCTV$      EDECV$      EFD1$       EDITX$      ECOLN$KW
)@@G@@      EMSGR$      EOCTF$      EDECF$      EDCFZ$      DPGCNT      DPGTBLKX
)@@G@@      DLTC10      APS$DBP     ERR$        C6          DECALC      DBP$APKY
)@@G@@S     PRINT$      PRINT       DLTAREA     GETASIZE    MCORE$      DB$AM KZ
)@@G@@      IOERR       KF$AMR      DLTPGE      @@[@@@@@@@@@FIXFPG      @@[@@@LA
)@@G@@@@@@[)GETPG       @@[@@@@@@@]?CHKEY       @@[@@@@@@@#<OVFCNT      @@^@@@LB
)@@G@@@@@@@[OVFTBL      @@^@@@@@@@@]OVFADDR     @@^@@@@@@@@#OVFPKT      @@^@@@LC
)@@G@@@@@@#GOVFPKT1     @@^@@@@@@@#JOVFPKT2     @@^@@@@@@@#NOVFPKT3     @@^@@@LD
)@@G@@@@@@#OKFPKT       @@^@@@@@@@#PPKTKEY      @@^@@@@@@@#SKEYOK       @@^@@@LE
)@@G@@@@@@#UDLTCNT      @@^@@@@@@@^_CALCSW      @@^@@@@@@@ @FORGSW      @@^@@@LF
)@@G@@@@@@ [DBP1        @@^@@@@@@@ 4DBP2        @@^@@@@@@@ 5FRGDBP      @@^@@@LG
)@@G@@@@@@ 6@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LH
)@@G@@)@@@E@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LI
)@@G@@/KF@@@AA@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@]@@A@@@@@A@@[@@E@@@@@@@@@@@@@@[DUMMY       LK
)@@G@@@@[@@@@@@@@@@@[A@-@@@@@@@@@@@@A$M   LIB$  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[EK)OK[#@KK)PK^G[@@@@LM
)@@G@@ @@@@,'^@@[8'=@@@@/KG@@@C^G@@YC?E@@@AA0@@@ @@@@@@@@@@@AA@@@@)@D[##@K()C-LN
)@@G@@@?-)C-@,-)C-@%-@0@ @@@@@'=@@@@*W@@@0[@@@@@C@@@@\/,0@@@R')@@, @@@@0AB@@@@LO
)@@G@@)@L[#@K^G[^C 4G[^G[]&@+^#C@@@@/,0@@@R')@@, W@@@0[@@@@,C@@@@@ @@@@,'^@@[8LP
)@@G@@/K@K@@AC@@@@)@T[##@L][P#@L][X@K^G[^C 0@@@@C@@@@@ @@@@,'^@@[8/K@K@@[@@@@@LQ
)@@G@@C@@@@\'=@@@@*W@@@0AD@@@@)@-[##@L#@K()C-@4-)C-@%-)C-@,@[@@@@@C@@@@\'=@@@@LR
)@@G@@*W@@@0/,0@@@R')@@, W@@@0[@@@@,AE@@@@)@([#@K)MK^CA2=#+^#%^#2A@)@@@@R#@@[ILS
)@@G@@/,0@@@*@@@@@R')@@@/,0@@@/K@@[R*@@@@@/K@K@@AF@@@@)@1@N][.@@@@)@@@Y@)@@@@@LT
)@@G@@)@3@N@K))@@@[@@@@@C@@@@@D      EXITEEDITOR/K@@[T'=@@@@AG@@@@)@5[F]] ]]CKLU
)@@G@@^CC4[@K)E@@@?@K@@GC@K@@@'^@@[&/K@@@/C@@@@@/K@@#I%8@@@]C=@@@@'^@@@@AH@@@@LV
)@@G@@)@"[#@K)RK@(@G-@@-)C-@M@@@@@@@/,0@@@C@@@[J/,0@@@C/@@@@@@@@@@/K@K@@[@@@@@LW
)@@G@@/K@@[JAI@@@@)[A[#]@(]@-]@?K)OK0^K)>K)Z@@@@'=@@@@(@@@@@C@@@[K[@@@@@C8@@@[LX
)@@G@@/,0@@@/,0@@@C@@@@@AJ@@@@)[I[F@K^C 4[][X@K)EK)RK@/K@K@@[@@@@@C@@@@@/K@K@@LY
)@@G@@ @@@@@/K@K@@ @@@@@'^@@[[/K@K[[AK@@@@)[R@:#@L][.]]T]]X]])@@@@)@#@Q@)@@@@@LZ
)@@G@@RECTIONO COR'=@@@@'=@@@@C@@@@@'=@@@@R#@@[LAL@@@@)@ @Q@)@@@@@)[W@3@K)RK^[MA
)@@G@@][W@@@H@K@@GC@K@@@'^@@[&/K@@@/G@@@@@'^@@[&IED   N APPLAM@@@@)[+[F][WK)RKMB
)@@G@@@^C K@@@@@@@9?E@@]'=@@@@!WE@@@C8@@@#@@@@@@/K@K@@ @@@@@0@@@@H[@K@@@AN@@@@MC
)@@G@@)[:[F]]>@@K)PK0^@@@@@@@@%WU@@@C8K@@AC@@@[M'=@@@@!WE@@@C8@@@#@@@@@@/K@K[&MD
)@@G@@'^@@@@AO@@@@)[4[N@^CEO@K^@K^@@/G@@]F'^@@[!C[@@@G/@@@#K'^@@[&@@@@@@/K@K[!ME
)@@G@@'^@@@@9?E@@^/K@K[!AP@@@@)["[]K^G[^G[^C]=G[^[#@K@@@@@@@?@@@@2/K@@[J?@@@@1MF
)@@G@@C@@@@@[@@@@2[[@@@1/K@@#K?@@@@KAQ@@@@)]A[F@K)EK0^K0^K^G[^G[@@%?E@@@C8@@@ MG
)@@G@@[[@@@2[[@@@1/K@K[8[@@@@2?@@@@2C@@@@@'^@@[[AR@@@@)]J[F@K)RK^G[^G[[#@L@K@@MH
)@@G@@'^@@]</K@@]][@@@@2H8@@@[G@@@@2[@@@@1/@@@#MC@@@@@/K@@]]AS@@@@)]S[U@[@K@K@MI
)@@G@@/K@K@@ @[@@@R@L@@@'^@@]</K@K@@'^G@@@*@@@@GCC[@@@[@]@@@R^-@@@C8@@@[AT@@@@MJ
)@@G@@)]<[E^G[^G[[@^[#@K@@@@@@A])@@J/K@K]<O8K@@[/K@@#O2@[)@]N@K@@XR@K@[NC@E@@]MK
)@@G@@@@@@@@AU@@@@)]?[EK)%K@^G[^G[@@@@@@@@O')@@]R])@@J[@@@@K;?@@@M(@@@@G;G@@@MML
)@@G@@/@@@#H/,0@@@O')@@BAV@@@@)]5[N]](@@^G[@@@@@M#[)@@N8K@@#&8K@@[R@K@@K&;@@@[MM
)@@G@@;?@@@M(@@@@G;G@@@M/@@@#@/,0@@@AW@@@@)]_[N@K0^[#@K^G[@@N8K@@#&8K@@[R@K@@KMN
)@@G@@M@-)@@N8K@@ R@)@[O&8K@@[O8K@@]R@K@@J/K@K@@AX@@@@)#D@%ES]CKP*]@@@@@)@J@Y@MO
)@@G@@)@@@@@BRIEF @@@@@@@@@@@@/K@@#Q/K@K@@/,0@@@R')@@BM@-)@@AY@@@@)@M[A@<1)C#)MP
)@@G@@/S]@/JA@)K#^]G([S@READ  @@@@@@DEBUG @@@@@@LIST  @@@@@@BATCH @@@@@@AZ@@@@MQ
)@@G@@)@U@"@<1)C^)/S][GES@$<@S@$<@S@)@@@@@@@@@[O@@@@[M@@@@@A@@@@@A@@@@@@MONITOMR
)@@G@@@@@@@@BA@@@@)@-@6@<1)G@N1)G@N1)G@N1)G@N1)G@N1)G@K@@@@@@@@@[R@@@@@%@@@@@;MS
)@@G@@@@@@@B@@@@@Y@@@@@MBB@@@@)@$@6@<1)G@N1)G@N1)G@N1)G@N1)G@N1)G@K@@@@@@@@@]ZMT
)@@G@@@@@@]R@@@@[Z@@@@[W@@@@@3@@@@[RBC@@@@)@!@6@<1)G@K@@@@@@)#I@MK@@@@@@/K@@#SMU
)@@G@@C8@@@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@]:BD@@@@)#K[MK[@^@K^G[^C @[@K@@@MV
)@@G@@CWW@[C/K@@#SC8@@@ /K@@#SC8@@@^/K@@#SC8@@@#/K@@#SC8@@@]BE@@@@)#U[##@L]]5#MW
)@@G@@@KK)>K)!K)ZK@@@@@@/K@K@@'=@@@@*@@@@@*@@@@@C@]@@@R^?@[C[@K@@@C?W@[CBF@@@@MX
)@@G@@)@3[Y@)@@@@@UNDEFIED    VALUATT BE ECAN NOUMBER LINE NNDED  T DEFIME2 NOMY
)@@G@@USE NABG@@@@)@"[Y@)@@@@@ER(S) E NUMBIN LINERROR 0      LINE AND ATL COMMMZ
)@@G@@ILLEGADE    NED MOBH@@@@)[D[I@+)O])O])O@([CO@@@@@[^@@#@[I@@@@@EOF:@[#@@@NA
)@@G@@@C@@[T@ @@[S@^[@[R@#[@[Q@][@[PBI@@@@)[M[A@)* @* @* @*@@@@@@@@@@@@@@[^@@3NB
)@@G@@@[#@@.@[ @[@@[^@[ @[A@@7@@[@@B@@]@@J_____"BJ@@@@@@^@@ @@D@@,@[>@@#@[1@@@NC
)@@G@@@@@@@@@@@@#+)@@@@@)@@@@@@@@@[UEDIT$       EDITR$      ECHAR$      ECOL$ ND
)@@G@@      ESKIP$      ECLR$       EDPKT       EOCTV$      EDECV$      EFD1$ NE
)@@G@@      RECNMC      EDITX$      ECOLN$      EMSGR$      BOPT        POPT  NF
)@@G@@      LOPT        DEBUG$      ROPT        MOPT        STATUS      ERR$  NG
)@@G@@      TF$DLT      LN          RDA         TF$MVE      TF$CPY      BLDD$FNH
)@@G@@      KEYPKT      KAFIRST     KF$AMF      PRINT$      GETVX11     GETVARNI
)@@G@@X     VARSW       VARXVAL     PRINT       PERFSW      IINAME      INT$  NJ
)@@G@@      EXIT$       FD$BIN      SYM$TR      SYM$TW      TOPT        FATAL NK
)@@G@@      EDIT$WK     @@[@@@@@@@@[EXITED      @@[@@@@@@@@%SENDEOF     @@[@@@NL
)@@G@@@@@@[[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@@@@^@@@@@^@@@@@^@@@9*KA@-C@@A@)%@KA@='=@@[.NO
)@@G@@C@@A@<'=@@[9@@[A@-@@@@@@@@@@@@A$M   LIB$  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[F@K)H[]@4@*@@@@@@@@@NQ
)@@G@@C/@@@(H9@@@[/[F@@@&'@@@DRA@@@@W9@@@D;H@@@=CD@@@@A]0@@\AA@@@@)@D[F]@@K)]KNR
)@@G@@0^K)C^C@-]@=/,0@@@9?C)@[/,0@@@C/@@@ /,0@@@C@@@@@/,0@@@C/@@@@/,0@@@AB@@@@NS
)@@G@@)@M[EK)]^C@=C]+)-@W)C@@@8^@@@C/G@@@X'=@@@@C8@@@Z/,0@@@/,0@@@C/@@@./,0@@@NT
)@@G@@C/@@@ AC@@@@)@V@<@])-@Y@)@(@%*@@@@@@@@@@@@@@@@@@[[@@@@@@@@@@@&E@@Z/,0@@@NU
)@@G@@R')@@Z/KF@@@R]0@@\AD@@@@)@,@E@)@@@I@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NV
)@@G@@@@@@@@@@@@@@@@@@@@@ASG,A@@@@@@AE@@@@@@@@@@CKT-ID@^@@@@  IF EOF2>0 THEN RNW
)@@G@@ETURN @A@@@@  FACCKT-IDENTIFIER=CKT-ID          @@^@@ @@D@@K@@(@@[@@!@@@NX
)@@G@@@@@@@@@@@@@0)@@@@@)@@@@@@@@@@[EDIT$       EDITR$      ECHAR$      ECOL$ NY
)@@G@@      ESKIP$      ECLR$       EOCTV$      EDECV$      EFD1$       EFD2$ NZ
)@@G@@      EDITX$      ECOLN$      EMSGR$      C3          CSF$        ASGERROA
)@@G@@      F$ASG       @@[@@@@@@@@@.  LMJ 11,P$(0,0) .  END . P$ PROC 0,1 .  OB
)@@G@@LMJ 11,P$(0,0) .  END . )@@[MK)[[]@C^G[@@@M#W)@@N8K@@FC@K@@$&;@@@[C8@@@[OC
)@@G@@'=@@@@%*E@@@C8@@@= @@@@@@@@@@@AA@@@@)@E[M[]@CK0^@@@@@@C*[@@@*@@@@[RCU@@[OD
)@@G@@C*E@@[[4@@@ACW[@@['=@@@@%*[@@@C8@@@PRCU@@@AB@@@@)@O[F#@L#@L#@L#@KK[#@L@@OE
)@@G@@'^@@]#[@@@@AC@[@@@/K@@]Y2W[)@[N@K@@OR@K@@*CW@@@A[0@@@AAC@@@@)@X[##@L#@L@OF
)@@G@@K^C@4C[^G[^@@@@@@@/K@@])?@@@@&C@@@@@ @@@@@/@@@])/K@@@\(*@@@A[@@@@&AD@@@@OG
)@@G@@)@>[##@L#@K()C-@E-)C-@^-)C-@@@[@@@@@C^@@@>'=@@@@*W@@@>/,0@@@R')@@<[@@@@<OH
)@@G@@C@@@@&AE@@@@)@![E(@@)CK#@-@^C@@@@@@@R^W@@@/K@@]W(^G@@@'=@@@@(WG@@@H8@@@[OI
)@@G@@G^@@@@/K@@@6R8K@@@AF@@@@)@6[F#@L@K^[@K^@K0^@@@@@G=K@@AC@K@@[/K@@@./K@@[MOJ
)@@G@@/K@@[D/K@@[#/K@@[,/KG@@7C4@@@AAG@@@@)@_[M[@^G[@^@@@@@@/K@@](C80@@#C8)@@[OK
)@@G@@C8@@@AG=K@@AC@K@@[/K@@](C80@@#C8)@@[C8@@@]AH@@@@)[D[MK0^K@^@K^C[0@R^)@@@OL
)@@G@@/K@@[#O^L@@]/K@@[L:^[@@@O;@@@[C^[@@]/K@@[L%@@@@+C8@@@[AI@@@@)[N[EK0^K)C^OM
)@@G@@C@)K@@@@@@@@(O]@@@/K@@[Z:W]@@@CW[@@]'=@@@@(@@@@]R^)@@@%@)@@+C8)@@[AJ@@@@ON
)@@G@@)[W[N]@CK@K@K0^K@@/K@@[:%@@@@+C8@@@[C)M@@[/K@@]+(0]@@[O*+@@@/K@@[TOO+@@@OO
)@@G@@'=@@@@AK@@@@)[&[U[@@K[@@CW[@@]/K@@][(@[@@[/K@@[ G@K@@[G8K@@]O^L@@]/K@@[:OP
)@@G@@:^[@@@O;@@@[C^[@@]AL@@@@)[1[F]@>]@D]@=^@K)]@@@@@OO+@@@'=@@@@(O]@@@/K@@[;OQ
)@@G@@:W]@@@O8)@@WR^)@@@'=@@@@(^@@@@AM@@@@)['[N@@[@ES]C@@@@@@@@@@@/K@@[.C8K@@@OR
)@@G@@/K@@](C80@@[C8)@@[C8@@@YG8K@@[C@K@@]/K@@[5AN@@@@)]^[F#@KK@[#@L#@K@@@@@@@OS
)@@G@@[[@@@ [@)@@+C?-@@@C9@@@]CW[@@[RCU@@[/K@@]I%8@@@]C?@@@AAO@@@@)]H[F@])-@O-OT
)@@G@@@Q-@])]^[)@@%=@@@@C8@@@]/K@@]=*@@@@@'^@@@@A[K@@@R9K@]MP')@@[/K@K]#AP@@@@OU
)@@G@@)]Q@3@K)H@K@)@@@Y@)@@@@@                  /K@@]FC8)@@[G[@@[^C9@@@]C@@@@@OV
)@@G@@/K@@]YAQ@@@@)@#@Q@)@@@@@)]W@'K[@^@@@C8K@@^/K@@]&C8K@@#/K@@]&C8K@@]/K@@]&OW
)@@G@@C8K@@[            AR@@@@)]<[F@^@K0^^G[^G[^G[@@@@C@K@@$C@@@@%9*@@@)C@K@@IOX
)@@G@@)@K@@(;*K@@M/K@@]&C8K@@ /K@@]&AS@@@@)]?@%^G[^G[^@@@@@@)@ @Y@)@@@@@[)@[]@OY
)@@G@@@@@@@@@@@@@@/K@K@@C[@@@ 9?@@@)M#H)@@N8K@@FAT@@@@)@C[Y@)@@@@@ B[[]@ ]]@]@OZ
)@@G@@ )@[]@^]]@#@#]]@]@]I[[[@]B[[[@]]]@[@])@[[@[I[[]@[B[[]@AU@@@@)@N@Q@)@@@@@PA
)@@G@@)@<@6@)/S]@@])O@@@@@[@@A@@[@@P@@@@@@@@@@@@@@@@@[@@@@@@@@@@@H I[[]@AV@@@@PB
)@@G@@)@(@Q@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@[PC
)@@G@@)@@@@@AW@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@PD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@ @@D@@I@@>@@[@@(@@@@@@@@@@@@@]1)@@@@@)@@@@@PE
)@@G@@@@@@@:RDA         STATUS      ERR$        RDALN       RECNMC      TF$RMRPF
)@@G@@      TT1         C1          C9          C8          GETVX11     GETVARPG
)@@G@@X     VARSW       VARXVAL     GETRSV      @@[@@@@@@@@@@@@@@@@@@@@@@@@@@@PH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@PI
)@@G@@)@@[EK0^K0^^G[^G[^G[@@@@&;@@@[C8@@@[ *@@@[[O)@@][CK@@[;CK@@M[OK@@[[O@@@@PJ
)@@G@@@@@@@@AA@@@@)@D[F#@K[#@L@K0^K@@@@@@@CWW@@]/@@@@OCC@@@[/K@@]F(O@@@@M#W)@@PK
)@@G@@N8K@@F&8@@@[C@K@@OAB@@@@)@M[#@K0^K0^K^G[^[]@ ]@^@@@@@@NCK@@@R^K@@@/K@@@(PL
)@@G@@*C@@@['^@@]X(O@@@[[OK@@[/@K@]PAC@@@@)@U[F#@L@K[@^@K@@@@@@@@@/@@@]LC^[@@@PM
)@@G@@/K@@@VO8K@@[/K@@@-:W[@@@/K@@]J8KK@@XCO@@@[AD@@@@)@<[##@L#@L@K0^^[#@L#@K@PN
)@@G@@@@@@@@ 0@@@] 4@@@]/K@@]T%@W@@[C@K@@K/K@@@((*@@@[[C@@@[AE@@@@)@:[F#@KK[@KPO
)@@G@@)]K^C@=G[@@@CO@@@[R^K@@@/K@@@/(@@@@@/K@@]N%8@@@[/K@@@":8@@@]CO@@@]AF@@@@PP
)@@G@@)@4[MK[@^@K0^^G[@@[0@@@]C8@@@[[4@@@]C8@@@[/K@@@4OOL@@@/K@@@/(O[@@@/K@@@'PQ
)@@G@@:W[@@@AG@@@@)@"[N#@K^G[^@[]@G@O^+@@@'=@@@@!^[@@@G8@@@[C^]@@@/K@@[C(4@@@]PR
)@@G@@O8)@@]R@)@@[RCK@@[AH@@@@)[C[##@L]@L#@L]@P#@KK@@@@@@@@@(O[@@@/K@@[N:W[@@@PS
)@@G@@CO@@@[R^K@@@(0@@@]R^K@@@AC)@@[AI@@@@)[K[F]@GK@K0^^@@@@@@@@@@C0[@@@/K@@[)PT
)@@G@@2S[)@[CO@@@@N*L@@@&8K@@[/K@@[HOOL@@@'=@@@@AJ@@@@)[T[N#@K^G[@K@@@@@(@@@[[PU
)@@G@@R)-)@@N0L)@[/K@@[6R@0@@GC)[@@@[4K@@@+8@@@ZC=[@@@[0@@@@AK@@@@)[<[N@[#@KK^PV
)@@G@@@@@@@@:S[)@[;?K@@[ @@@@H/K@@]P8KK@[%C@+@@@OC)@@[O80@@[A@)@@#/K@@]PAL@@@@PW
)@@G@@)[![F@K[@K[#@KK0^@@@@@@@[4@@@@C=[@@@[0@@@@C0[@@@/@K@]R/K@@[*O01@@@/@K@[*PX
)@@G@@/K@@[1AM@@@@)[6[N#@K[#@K@@@@@@*@@@@KC@3)@@*@@@@J;D@@@-;G0@@#C40@@@C@<)@@PY
)@@G@@&80@@[C@K@@#OC0@@[AN@@@@)]@[EK0^K0^[#@K^G[@@@@@@R@K@@#M@M)@@N8K@@DR@)@@PPZ
)@@G@@&8K@@[R8K@@#&7@@@@C0@@@@C[#)@@AO@@@@)]D[##@L@K0^K^G[^[#@L@@@@@@@@@/K@@]VQA
)@@G@@C@K@@S/K@@]VC@K@@R/K@@]VC@K@@Q/K@K@@R@)@@^AP@@@@)]L[##@L@K0^K^G[^[#@L@@@QB
)@@G@@@@@@@@/K@@]VC@K@@W/K@@]VC@K@@V/K@@]VC@K@@U/K@@]VC@K@@TAQ@@@@)]T[F#@L@^@^QC
)@@G@@G[^C[=C[)@@@NCK@@@R^K@@@[*@@@[C8@@@[@@@@@@/K@@]#;*K@@M/K@@]VC@K@@XAR@@@@QD
)@@G@@)]+[F#@L@K[@^@K@@@@@@@@@/@@@]HCO[@@@/K@@]<O8K@@#/K@@](:W[@@@/K@@]F8KK@]>QE
)@@G@@CO@@@@AS@@@@)]:[F#@L#@KK0^^G[^@K)B@@C@@@@@@@@@@@/K@K]X[@K@@JCSL@@@[@K@@KQF
)@@G@@C@L@@[[@@@@I[O@@@[AT@@@@)]4[##@L#@K()C-@K-)C-@A-)C-@@@[@@@@@C^@@@N'=@@@@QG
)@@G@@*W@@@N/,0@@@R')@@L @@@@N[@@@@LAU@@@@)]/@V]@X]@>@@@@@@@)@L@&@)/S]@@E@@@@@QH
)@@G@@@@[@@#@@@@@@@@@@@[@@@@@@/K@K]2[@@@@@C@@@@@AV@@@@)@P[I@+)@@@@@@@@@@@@@@@@QI
)@@G@@@@@)@C@@@)@A@@@)@B@@@)@ @@@)@]@@@)@^@@@)@[@@@)@#@@[@@ AW@@@@@@@@@@@@@@@@QJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@QK
)@@G@@@@^@@ @@D@@E@@X@@ @@1@@@@@@@@@@@@@]_)@@@@@)@@@@@@@@@@YRDA         TT1   QL
)@@G@@      C17         ERR$        C1          C9          TT2         LN    QM
)@@G@@      TF$RMR      RDALN       GETSET      @@[@@@@@@@@@CURRCD      @@^@@@QN
)@@G@@@@@@@ISETOWNER    @@^@@@@@@@@JSETDBP      @@^@@@@@@@@KGETLINE     @@[@@@QO
)@@G@@@@@@]2@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[M^@K[[K[@@@@@@/K@@@-QP
)@@G@@!80@@L/K@@[^(@J@@]R:'@@@/K@@[C0@@@@G/K@@[A(@@@@E@@@@@@AA@@@@)@E[MK[@^@K[QQ
)@@G@@@@@@@@/K@@@UR;@@@[/K@@[C!8@@@]/K@@[A:80@@[/K@@@O!80@@B/K@@@K!80@@IAB@@@@QR
)@@G@@)@O[MK@^[@KO@@@@@@R#)@@J/K@@[E!@K@@@'^@@[K/K@@[C?@)@@G+8K@__RRU@@]/K@@[CQS
)@@G@@(@@@@GAC@@@@)@Y[MKO@K^C@@K)[@@;*K@@[RB)@@@1@@@@HR#U@@[RB)@@@/K@@[C(@@@@GQT
)@@G@@/K@K@@R#_@@]R:'@@@AD@@@@)@*[M^^@K^[[@@@@@@R])@@['^@@[K/K@@[C?@)@@G+8K@__QU
)@@G@@RRU@@]R])@@IA])@@[O#)@@H;CK@@NAE@@@@)@2[U@@@@@@@O#K@@IW8)@@A @@@@IP;0@@]QV
)@@G@@;C@@@S;*@@@SRRE@@@O#0@@G;C@@@S;*@@@SRZE@@@AF@@@@)@.[N[K@^ @^@@@@@@R;K@@[QW
)@@G@@/K@@[G @@@@H/K@K@@R#_@@]R:'@@@R#)@@JO;0@@[/K@@[E!@K@@@AG@@@@)[B[V@^@@^@@QX
)@@G@@RZU@@[@@@@@@/K@K@@;@K@@[O;K@@[;@K@@LO;K@@#;*K@@M/K@@[GR;K@@]/K@@[GAH@@@@QY
)@@G@@)[M[N]@CK[]@C[@@@@O;K@@]/K@@[^(@@@@HRBX@@@RZ.@@@OBK@@@P;K@@[/K@@[A?@)@@HQZ
)@@G@@RF)@@@AI@@@@)[W[M^[]@H@K)#^@K@/K@@[((OI@@@/K@@[*:W"@@@RB)@@@/K@@[((C@@@@RA
)@@G@@/K@@[(%8)@@[R\%@@@AJ@@@@)[&[UK[[@KK@O#K@@J+8)@__RZ%@@@A#)@@@K^X@@@%80@@#RB
)@@G@@R\'@@@R#)@@ROBX@@@/K@@[+OR,@@@AK@@@@)[1[U@@@@@@@O#K@@IW8)@@A @@@@IP;0@@[RC
)@@G@@O\'@@[R#@@@IT@0@@GR#)@@J+8)@__RR%@@@P;@@@[AL@@@@)[/@MK@@@@@@)@@@/@@@@@@@RD
)@@G@@@@@@@]@@@@@[@@@@@[@@@@@[@@@@@@@@@@@@@@@@@@/K@K[KO;0@@[AM@@@@)@B[W@@@@@@@RE
)@@G@@@@@@@[@@@@@#@@@@@[@@@@@#@@@@@]@@@@@[@@@@@@@@@@@[@@@@@#@@@@@[@@@@@#AN@@@@RF
)@@G@@)@M@4@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B____@@@@@[@@@@@#@@@@@]@@@@@[RG
)@@G@@@@@@@@AO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@RH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@#@@B@@^@@J@@[@@N@@@@@@@@@@@@@["@@@@@SC14   RI
)@@G@@      C15         TT1         C17         GETVAR      @@[@@@@@@@@@@@@@@@RJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[Q@WG[@[]@@K@@@C[)@@GRK
)@@G@@R[)@@H/K@@]I0@@@@H'^@@@@C;K@@[O90@@]R[0@@EC\E@@@AA0@@@AA@@@@)@E[Q@S@^C@[RL
)@@G@@@@@@@@:80@@^/K@@]I0@@@@H'^@@@@C;K@@]O[0@@UC'@@@#:'@@@^C]@@@JC[0@@IAB@@@@RM
)@@G@@)@O[Q@S^@K^C@K@@@@R#K@@AR#@@@MC]K@@G'^@@@@/K@@@5:'@@@[/K@@@5:80@@[O[0@@URN
)@@G@@R;0@@#AC@@@@)@Y[I@SK)[@K[#@K@@@@@@@@/K@K@@%@@@@H/K@@@*%;@@@[R])@@BR#K@@PRO
)@@G@@'^@@@@R#0@@OR#)@@NAD@@@@)@$[I@WC@-@^G[^C@-@@@@@@!@@@@H/K@@@2%;@@@#/K@@@@RP
)@@G@@/K@K@@!@K@@G/K@@@!%;@@@]/K@@@@AE@@@@)@0[I@WG[^C@-]@D#@KK[@@@/K@@]G:'@@@#RQ
)@@G@@/K@@]G:80@@#/K@K@@/K@@@@%@@@@H/K@@@@/K@K@@AF@@@@)@9[Y@S@@[@@')J@["&9)@@[RR
)@@G@@&9K@@[&;0@@[&;)@@[H'K@@[H9)@@[R#0@@NC]K@@GR[K@@HR])@@BAG@@@@)[^[I@W@K[#@RS
)@@G@@KK)]^@@@@@@@/K@@[K%;@@@]/K@@@@:;@@@^/K@K@@:;@@@[/K@@[N:@@@@H')I@] AH@@@@RT
)@@G@@)[H[I@T#@L]@CK0^K)]^@@@@Q;)@@[/K@@[Q$;)@@A/K@@@@/K@K@@!@@@@H/K@@@@/K@K@@RU
)@@G@@!@K@@GAI@@@@)[Q[Q@T@^[@K[#@L@@%8@@@ ')J@["/K@K@@:;@@@#8 K@[#/K@@[:8^)@[VRV
)@@G@@Q;0@@[/K@@[T$;0@@AAJ@@@@)[)[I@W@K[@^G[^C@)@@@@@@%;@@@[/K@@@@/K@K@@%;@@@[RW
)@@G@@8^)@[YQ;0@@[/K@@[=$;0@@A/K@@[*AK@@@@)[([A@WC@=G[^@K0^K)]^G[@@@@@@@/K@K@@RX
)@@G@@:;@@@]/K@@@@/K@K@@%;@@@[8 K@[\/K@K@@/K@@@@AL@@@@)[1[I@W@K[@^@K0^@@@@@@@@RY
)@@G@@/K@K@@%;@@@[8 K@[1Q;)@@[/K@@[7$;)@@A/K@@[;%8K@@ ')I@] AM@@@@)['[Q@WC@-]@RZ
)@@G@@D#@K@@R$A@@@R:A@@@R\A@@@R3A@@@R7A@@@/S@@@@/K@K@@/K@@@@%;@@@[/K@@@@AN@@@@SA
)@@G@@)]^[Q@S@@K0^K)#@@@'=@@@@R#@@@DR<P)@@R$P@@@R:P@@@R\P@@@R3P@@@R7P@@@/S@@@@SB
)@@G@@R<A)@@AO@@@@)]I@Y@T]@L#@K@@@@@)@@@,@)@@@@@ COMBID TYPED FIELINVALI@@@@@@SC
)@@G@@/K@K@@A#@@@@R;@@@[AP@@@@)@ @,@)@*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SD
)@@G@@@[C@@[MENT.  STATE IN IFNATIONAQ@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@ @@D@@ @@N@@[@@R@@@SF
)@@G@@@@@@@@@@@@@@)@@@@@@@@@]L@@@@@EGETSYM      GETNUM      XEQWKR      PRINT$SG
)@@G@@      FATAL       IFWKR       @@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SH
)@@G@@)@@[]K)NK0^K)OK0^K0^K)PK0^@@@@C@@@@/'=@@@@C@@@[P[@@@[M'=@@@@[@@@[L'=@@@@SI
)@@G@@C8@@IIAA@@@@)@C[##@L#@L#@L][T][X#@L@ES]@@@C/@@@_'^@@]Q[@@@[K'=@@@@'=@@@@SJ
)@@G@@C@@@[Q9*@@[NC@K@@,AB@@@@)@K[F]@@K)^^C@-]@L][)@@@ @@@@GC@K@@@/,0@@@C/@@@[SK
)@@G@@/,0@@@C/@@@%/,0@@@C/@@@]/,0@@@AC@@@@)@T[M[][=K0^@@@@@@G@@@@HG8K@@[*@@@@ISL
)@@G@@W8K@C@H@)@[R @@@@HC@)@@@G8@@@[*@@@@HW8@@C@AD@@@@)@<[M@^C[1]@CK)^@@/,0@@@SM
)@@G@@C/@@@[/,0@@@C/@@@K/,0@@@G8@@@[*@@@@HW8@@J*;G@@@=T8@@C@AE@@@@)@![##@L]@)KSN
)@@G@@)^K0^K)C^C[@@@@@@@/,0@@@C/@@@[/,0@@@C@@@[T/,0@@@C/@@@[/,0@@@C@@@[SAF@@@@SO
)@@G@@)@5[##@L]@-]@>]@WK)]K)EK)B@@@@/,0@@@C@@@@@/,0@@@C/@@@(/,0@@@C@@@@@/,0@@@SP
)@@G@@C@@@[UAG@@@@)@.[EK)]K)FK]&@+^@@-@C@@C/@@@%/,0@@@C/@@@]/,0@@@C/@@@_'^@@]HSQ
)@@G@@/,0@@@/,0@@@C/@@@)AH@@@@)[A[#]@CK)^K0^K)IK)OK0^K)V@@@@/,0@@@H@@@[M'=@@@@SR
)@@G@@/,0@@@9?@@[V/,0@@@C/@@@[/,0@@@AI@@@@)[I[]K)]^C[^G[^C]^G[^C K@@@@@@'=@@@@SS
)@@G@@C@@@[P/,0@@@C@@@[X/,0@@@C/@@@[/,0@@@C/@@@,AJ@@@@)[Q[F#@L#@K^C[1]@L#@L]@)ST
)@@G@@/,0@@@C@@@[Y/,0@@@C/@@@[/,0@@@W8@@@ ;G@@@=H@@@[NC@@@@/AK@@@@)[Z[]K)^K0^KSU
)@@G@@)CK0^K0^K)BK)F@@@@/,0@@@/,0@@@H@@@[OC@@@@,/,0@@@C@@@[Z/,0@@@C/@@@[AL@@@@SV
)@@G@@)[$[F@K)WK]&@+^@@-@CCK[@/,0@@@C/@@@%/,0@@@C/@@@]/,0@@@C/@@@_/K@@@G(@@@@@SW
)@@G@@'^@@]HAM@@@@)[0[EK)^K0^K)I^C[^C#4C#)C/@@@*/,0@@@9?@@@@/,0@@@C/@@@[/,0@@@SX
)@@G@@9?@@[)/,0@@@C/@@@[AN@@@@)[9[#]@D]@.]@8K)]K)JK)IK)J@@@@C@@@@A/,0@@@9?@@@^SY
)@@G@@/,0@@@C/@@@./,0@@@9?@@@]/,0@@@AO@@@@)][[##@L@^C@=C#4C#=C]4@@@@@@@@'^@@]HSZ
)@@G@@/,0@@@/,0@@@9?@@@A/,0@@@C/@@@//K@@]B:@@@[+AP@@@@)]D[F@[][4K0^K)YK0^@@@@@TA
)@@G@@:8@@@^C0@@@"'=@@@@R#@@[<@@@@@@'=@@@@@@@@@@@@@@@@/K@@@GAQ@@@@)]M[F@ES]CKJTB
)@@G@@*@-)C-)C)C@@/K@@]\8LK@]VR[K@[=N[K@@V@@@@@@/K@K]H'=@@@@R;@@[H/K@K]HAR@@@@TC
)@@G@@)]V[EK0^K0^ES]CKKC@)CS]@C@@@@>/K@@]&(C @@]/G@@]T'=@@@@C8@@@)9*@@@+9*@@@XTD
)@@G@@9? )@#AS@@@@)]=[N]] @@@ES]CKK@'=@@@@C8@@@W[@L@@@W8@@@];G@@@=G8@@@[C@[@@@TE
)@@G@@R^P@@]/K@@]?'=@@@@AT@@@@)],[F@K0^K0^K0^[@^@@@@@@/K@@]'(C @@[/K@K]Q2@ )@]TF
)@@G@@;C@@@GC@@@[KR[K@[>N@K@@C/K@@]TAU@@@@)]7[N#@L]] @@@K@@@/K@K]Q[@L@@@W8@@@]TG
)@@G@@;G@@@=G8@@@[C@[@@@R^P@@[/K@K]Q'=@@@@C@@@@>AV@@@@)@@[I@)#1)C^@/S][^JA@)M@TH
)@@G@@@@@@@^@@@@@@@@MONI@@@@@@@@BRIE@@@@@@@@LIST@@[@@@@@STOPAW@@@@)@D[I@)@JA@)TI
)@@G@@K@/S][^@@@@@@@@@@@EF    ED$BRI@@@@@@T     ED$LIS@@[@@@P     ED$STOAX@@@@TJ
)@@G@@)@M[I@)JA@)M@/S][C#1)C^)@@@@@@IT    ED$MON@@@@@@ITR   ED$MON@@@@@@ITOR  TK
)@@G@@ED$MONAY@@@@)@V@Q@)@@@@@)@Z@Y@)@@@@@)@=@Q@)@@@@@@@@@@@   .        @ASG,ATL
)@@G@@  .   @FREE @@@@@AAZ@@@@)@_@6@+)@@@@)[H@Y@)*@@@@@@@@@@@@0@[ @@@@@@@@@@@@TM
)@@G@@@@@@@@@@@@@@[[@@@@@@@@@@@&C@[ BA@@@@)[K[I@)@E[N@^/S][*@@@@@@@@@@IN@@@@@@TN
)@@G@@K@[@]E@@T@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BB@@@@)[T[Y@)@@@*@@[C@[       TO
)@@G@@ORMING@@PERF@@I/O=@@@MS,@@CPU=APSED=@@@@EL@LINE=@CORE,BC@@@@)[=@Q@+)Q@@@TP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@]__.@@#@@ABD@@@@TQ
)@@G@@@@^@@ @@D@@+@[H@@#@[T@@@@@@@@@@@@@#[)@@@@@)@@@@@@@@@[&EDIT$       EDITR$TR
)@@G@@      ECHAR$      ECOL$       ESKIP$      ECLR$       EOCTV$      EDECV$TS
)@@G@@      EFD1$       LN          RECNMC      EDITX$      ECOLN$      EMSGR$TT
)@@G@@      EFD2$       PBLOCK      LOPT        BOPT        MOPT        NAME$ TU
)@@G@@      TDATE$      PCT$        IALL$       II$         LAST$I      LAST$DTV
)@@G@@      FRSTD$      ETIME$      PERFSW      EXIT$       PRINT$      COM$  TW
)@@G@@      CSF$        INT$        ACTII       @@[@@@@@@@@@MAINNAME    @@^@@@TX
)@@G@@@@@@@>IINAME      @@^@@@@@@@[LDO P$>2 ,I DO P$-2 ,A(P$(I+1,1)) EQU P$(I+TY
)@@G@@1,2) . Z FORM 6,6,6,18 .  Z 0,A('MSG'),P$(1,1),P$(1,2) .  Z 0,0,0,0 .  ZTZ
)@@G@@ A('FPS'),A('FPR'),0,0 .)@@[]K)NK0^K0^K)OK)PK0^K0^@@@@C@@@@,[@@@@%'=@@@@UA
)@@G@@'=@@@@C@@@@![@@@@:'=@@@@C8@@IIAA@@@@)@C[F][S()C-@@CK]]^@K-@C/,0@@@C/@@@[UB
)@@G@@/,0@@@C/@@@%/,0@@@C/@@@]/,0@@@C/@@@T'=@@@@AB@@@@)@L[##@L#@L][X]@=K)^K0^KUC
)@@G@@)A@@@@/,0@@@9?@@@0/,0@@@C/@@@[/,0@@@C@@@@@*@@@@?C@@@@\AC@@@@)@T[EK)^K0^KUD
)@@G@@)D^C[^G[^C[)C/@@@[/,0@@@9?@@@3/,0@@@C/@@@[/,0@@@C@@@@2/,0@@@C/@@@[AD@@@@UE
)@@G@@)@+[F]@L][)@K)T^G[@@@@@@H@)@@5 @@@@HC@)@@@G8@@@[*@@@@HW8@@C@ @@@@GC@K@@@UF
)@@G@@/,0@@@AE@@@@)@:[U@@[]@)@C/@@@K/,0@@@G8@@@[*@@@@HW8@@J*;G@@@=T8@@C@G@@@@HUG
)@@G@@G8K@@[*@@@@IW8K@C@AF@@@@)@6[#]@CK)^K0^K)D^C[^G[@@@@@@@C@@@@6/,0@@@C/@@@[UH
)@@G@@/,0@@@C@@@@2/,0@@@C/@@@[/,0@@@AG@@@@)@"[#]@>]@(@K0^K]&@+^@@@@@@@@@C/@@@]UI
)@@G@@/,0@@@C/@@@T/K@@@ (@@@@?'^@@^A/,0@@@/,0@@@AH@@@@)[A[#]@KK)]^C[^G[^C[=CA0UJ
)@@G@@@@@@@@'=@@@@/,0@@@9?@@@7/,0@@@C/@@@[/,0@@@C/@@@%/,0@@@AI@@@@)[I[#][1][4KUK
)@@G@@)]^C[^G[^C]K@@@@@@/,0@@@C@@@@9/,0@@@C/@@@[/,0@@@C/@@@,/,0@@@H@@@@@AJ@@@@UL
)@@G@@)[Q[F#@L][8^C][]@L#@L]@=/,0@@@C@@@@'/,0@@@C/@@@[/,0@@@W8@@@ ;G@@@=H@@@@@UM
)@@G@@C@@@@QAK@@@@)[Z[]K)^K0^K)DK0^K)ZK)CK)E@@@@/,0@@@/,0@@@H@@@@@C@@@@C/,0@@@UN
)@@G@@C@@@@;/,0@@@C/@@@[AL@@@@)[$[F@K0^K^[@K^[@K@@@@@@/K@@]*/K@@]F/K@@[2/K@@@ UO
)@@G@@/K@@@ /K@@@ /KG@[%C@@@@?'^@@^AAM@@@@)[0[F@K]&@+^@@-@CCK[@@@@C/@@@[/,0@@@UP
)@@G@@C/@@@%/,0@@@C/@@@]/,0@@@C/@@@T/K@@#+/K@@# AN@@@@)[9[#]@L#@L]@SK)^K0^K)DKUQ
)@@G@@)H@@@@9?@@@@/,0@@@C@@@@"/,0@@@C/@@@[/,0@@@9?@@@//,0@@@AO@@@@)][[#]@SK)]KUR
)@@G@@0^K)DK)HK)CK)E@@@@/,0@@@/,0@@@C^@@@C/,0@@@C@@@@_/,0@@@C/@@@,/,0@@@AP@@@@US
)@@G@@)]D[F@K]&@+^@@-@CCK[@@@@C/@@@[/,0@@@C/@@@%/,0@@@C/@@@]/,0@@@C/@@@T/K@@@ UT
)@@G@@'^@@^AAQ@@@@)]M[#]@L#@L]@=K)^K0^K)D@@@@@@@C/@@@[/,0@@@C@@@[[/,0@@@C/@@@[UU
)@@G@@/,0@@@C@@@[@/,0@@@AR@@@@)]U[#]@L#@L]@SK)^K0^K)A@@@@@@@C/@@@[/,0@@@9?@@[^UV
)@@G@@/,0@@@C/@@@[/,0@@@9?@@[]/,0@@@AS@@@@)]+[#]@L]@9]@-]@(@K]&@+^@@@@@@/,0@@@UW
)@@G@@C/@@@T/K@@@ '^@@^A/,0@@@/,0@@@C@@@@@/,0@@@AT@@@@)]%[EK)^^C@-]@L#@L]@=@@@UX
)@@G@@C/@@@[/,0@@@C@@@[@/,0@@@C/@@@[/,0@@@C/@@@%/,0@@@C/@@@]AU@@@@)]3[#]@L#@L]UY
)@@G@@@=K)^K0^K)A@@@@@@@C/@@@[/,0@@@9?@@[]/,0@@@C/@@@[/,0@@@C@@@[[/,0@@@AV@@@@UZ
)@@G@@)];[#]@L#@L]@SK)^K)JK)CK)E@@@@/,0@@@/,0@@@C@@@@@/,0@@@C/@@@[/,0@@@9?@@[AVA
)@@G@@/,0@@@AW@@@@)##[F@K]&@+^@@-@CCK[@@@@C/@@@[/,0@@@C/@@@%/,0@@@C/@@@]/,0@@@VB
)@@G@@C/@@@T/K@@@ '^@@^AAX@@@@)#G[#]@L#@L]@=K)^K0^K)D@@@@@@@C/@@@[/,0@@@C@@@[[VC
)@@G@@/,0@@@C/@@@[/,0@@@C@@@[@/,0@@@AY@@@@)#O[#]@L#@L]@SK)^K0^K)A@@@@@@@C/@@@[VD
)@@G@@/,0@@@9?@@[C/,0@@@C/@@@[/,0@@@9?@@[]/,0@@@AZ@@@@)#W[#]@L][[]@-]@(@K]&@+^VE
)@@G@@@@@@@@/,0@@@C/@@@T/K@@@ '^@@^A/,0@@@/,0@@@C@@@@@/,0@@@BA@@@@)#=[EK)^^C@-VF
)@@G@@]@L][ ]@)@@@C/@@@[/,0@@@C@@@@@/,0@@@C/@@@[/,0@@@C/@@@%/,0@@@C/@@@]BB@@@@VG
)@@G@@)#![#]@L#@L]@=K)^K0^K)AK0^@@@@C@@@[H/,0@@@9?@@[F/,0@@@C/@@@[/,0@@@C@@@[EVH
)@@G@@/,0@@@BC@@@@)#5[#]@=K)^K)MK)C^C@=C^)@@@@@@9?@@@@/,0@@@C/@@@//,0@@@C^@@@CVI
)@@G@@/,0@@@C/@@@[/,0@@@BD@@@@)#.[F]@SK)]K)EK^@^CC@@@@'=@@@@@@@@@@@@@@@@/K@@@ VJ
)@@G@@'^@@^A/,0@@@/,0@@@C/@@@)/,0@@@BE@@@@)^A[EK0^K)-K0^^@()C-[^)@/K@K^A'=@@@@VK
)@@G@@R;@@@$/K@K^A:8@@@^C0@@@S'=@@@@R#@@[I@@@@@@BF@@@@)@T@6@+)@@@@)@$@Y@)*@@@@VL
)@@G@@@@@@@@@@0@@Z@@@@@@@@@@@@@@@@@@@@@@@@[[@@@@@@@@@@@&C@@ZBG@@@@)@%[Q@)]&@DKVM
)@@G@@@@@@@@@@@PRO@@@@INOMMAND@@@@@C@@@@NO@@T@@@K@[@^#@@@@@@@@@@@@@@@@@@BH@@@@VN
)@@G@@)@4[Q@)/S][*@@@@@@ANNING@@@@SC@@I/O=@@@MS,@@CPU=APSED=@@@@EL@@CORE@@@@@@VO
)@@G@@GRESS,BI@@@@)@"[Y@)@@@@@@@@RELLETED:@@@@DETORED:@@@RESECORDS@@@@@R@@@@OFVP
)@@G@@NUMBER@PAGE:@AREA:BJ@@@@)[D@6@)@E@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[C@@ZVQ
)@@G@@@@@@PGTCHED(@@@@PA@@PTRSOADED:BK@@@@@@@@@@@[]@)@C/@@@K/,0@@@G8@@@[*@@@@HVR
)@@G@@W8@@J*;G@@@=T8@@C@G@@@@HG8K@@[*@@@@IW8K@C@AF@@@@@@^@@ @@D@@<@[J@@#@[V@@@VS
)@@G@@@@@@@@@@@@^J)@@@@@)@@@@@@@@@[JEDIT$       EDITR$      ECHAR$      ECOL$ VT
)@@G@@      ESKIP$      ECLR$       EFD2$       EOCTV$      EDECV$      EFD1$ VU
)@@G@@      EDITX$      ECOLN$      EMSGR$      SCPKT       RESTCNT     DLTCNTVV
)@@G@@      RELNUM      PCNT        PDBPKT      NAME$       IALL$       II$   VW
)@@G@@      PCT$        CMDNAME     LAST$I      LAST$D      FRSTD$      TDATE$VX
)@@G@@      TIMEST      ETIME$      CPUIN       IOIN        EXIT$       PRINT$VY
)@@G@@      COM$        ACTII       @@[@@@@@@@@@IINAME      @@^@@@@@@@@:CMDLVLVZ
)@@G@@      @@^@@@@@@@@?@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WB
)@@G@@)@@[EK0^[#@L#@K@@@@@@@@@G8@@@[C@@@@C @C@@@RA@@@[9*@@@@9?E@@@/KG@@@*@@@@#WC
)@@G@@CCE@@[AA@@@@)@D[##@KK0^K0^K]&@+^@]A@)@@@@@[@@@@]'=@@@@C8@@@@/K@@@M(?@@@@WD
)@@G@@[@@@@#C8@@@[[^@@@[AB@@@@)@L[F@K0^K)[K0^K^G[@K@@@/@@@[';C@@@M;*@@@M @@@@#WE
)@@G@@/K@@@Q[@@@@]'=@@@@C@@@@[/K@@@QAC@@@@)@U[M[#@KK@^@@@@@@'^@@[^C@G@@@G@@@@CWF
)@@G@@N@0@@G/@@@['H8@@@[:@K@@NC@X@@@G@K@@CC@K@@GAD@@@@)@=[E@^G[^[@K0^@@@@@@@@@WG
)@@G@@R#@@@O/K@@['/K@@@?*@@@@M[^C@@@G@@@[[T8@@@AH8@@@[C@@@[#AE@@@@)@![F]@^^@^GWH
)@@G@@[^G[@@@@@@@@H8@@@[:@K@@NC@X@@^H8K@@[C@K@@G/@@@[';C@@@M;*@@@M'=@@@@AF@@@@WI
)@@G@@)@6[N@[#@L@@@@@@@@N@0@@GG@@@[[T8@@@AH8@@@[C@@@[#'^@@[^C@G@@^H8@@@[N@0@@GWJ
)@@G@@/@@@['AG@@@@)[@[N@K0^K^@@^@@@@/K@@[G%8K@@ ;CK@@Y;G@@@AN8K@@A@@@@@@/K@@['WK
)@@G@@/K@@@?*@@@@M'^@@[NAH@@@@)[E[F@K)]K0^^[#@L@K)]K@@/K@K[^'=@@@@8KK@[M[@K@@MWL
)@@G@@/K@K[^%8K@@; @@@@M'=@@@@8KK@[AAI@@@@)[N[U@@@@@@@&'K@@[R]K@@JG80@@[G@0@@CWM
)@@G@@W80@@A @@@@JC9K@@[[ S@@@K[@@[#C C@@@@@@@@@AJ@@@@)[Y[UK^@@^@@G9@@@[C@@@@KWN
)@@G@@')H@[,W8@@@A;G@@@=H8@@@[G9K@@[C@@@@L/K@K[N8K0@[-G9@@@[AK@@@@)[([E[@K^G[^WO
)@@G@@G[^G[^G[@@@@C*/@@^C?/@@^C0/@@^C4/@@^/K@@[Z')H@[4W8@@@A;G@@@=H8@@@[AL@@@@WP
)@@G@@)[2[N#@L#@K@[#@K@@/KF@@@C@@@@][)9)@@[=9@@@[*9@@@[?9@@@[09@@@[49@@@C)/@@^WQ
)@@G@@C=/@@^AM@@@@)[/@UK0^K@@@)@]@Q@)@@@@@)@M@Q@)@@@@@      @@@@@@@@@@@@@@@@@@WR
)@@G@@/K@@['[@@@@#C8@@@[AN@@@@)@O@I@<A@G*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@[/@@^AO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@ @@D@@#@@J@@[@@N@@@WU
)@@G@@@@@@@@@@@@[_)@@@@@)@@@@@@@@@@PTREAD$      READ$       ERR$        INPUT WV
)@@G@@      @@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WW
)@@G@@)@@[I@WG[^C]0^C#^@K@@@@@/K@@@::80@@[/GK@@!'^@@@@C;K@@[O90@@]R[0@@E @@@@@WX
)@@G@@AA0@@@AA@@@@)@D[I@SK)HK)IK^C#4C^^C^KR#@@@KA#0@@@A#)@@@A#K@@@/@K@@P'^@@@@WY
)@@G@@'^@@@@R;0@@#:80@@^AB@@@@)@M[A@T][D#@L][H@]&@+^@@@@@@@@/,0@@@C/@@@IC[@@@GWZ
)@@G@@/K@@@<*@@@@@/K@K@@9*@@@@9?G@@[AC@@@@)@U[A@WG[[]@S^C ^C]^G[@@@@@@@@R#@@@WXA
)@@G@@/,0@@@/,0@@@R;K@@HR#@@@K/,0@@@C8K@@XC8@@@#AD@@@@)@+[A@WC OC#4C^^C^OG[^C^XB
)@@G@@-]@?@@A#@@@@R;@@@39*@@@@9?@@@[ @@@@@ @@@@@ @@@@@'=@@@@AE@@@@)@%@6@WG[^G[XC
)@@G@@^C L][T#@K@@)@@@I@)@@@@@@@@@@@/K@K@@A#@@@@R;@@@['=@@@@R#@@@X/K@K@@AF@@@@XD
)@@G@@)@[[Y@)@@@@@ERPRETOT INT- CANNERROR  DBP  ERPRETOT INT- CANNERROR       XE
)@@G@@      AG@@@@)@G[A@)E@@@@)@W@I@+)@@@@@[C@@O@@@@@@@@@@@@@@@@@@[[@@@@@@@@@@XF
)@@G@@@&C@@O FIELD PIC XAH@@@@)@X@I@+)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@[A@@CAI@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@ @@D@@R@@7@@[@@;@@@XI
)@@G@@@@@@@@@@@@@@)@@@@@@@@@@0@@@@@YEDIT$       EDITR$      ECHAR$      ECOL$ XJ
)@@G@@      ESKIP$      ECLR$       ECOPY$      EPACK$      EDITX$      ECOLN$XK
)@@G@@      EMSGR$      STATUS      GETSYM      GETNUM      DBP$APS     AREACOXL
)@@G@@DE    PAGENUM     SLOTNUM     AREANAME    PERFSW      EOCTF$      PRINT$XM
)@@G@@      FATAL       INTRP       @@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[C@/S]@@#1)C@@@@@@@@@XP
)@@G@@N     SORTRU@@@@@@T     SORTPU@@@@@@T     SORTIN@@@@@^AA@@@@)@D@*/S]@@#1XQ
)@@G@@)C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@T     SORTGE@@@@@@AB@@@@XR
)@@G@@@@^@@[@@ @@[@@B@@[@@F@@@@@@@@IR$SEG1      LD$TBL      @@@@@@@@@@@@@@@@@@XS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[F]@ #@L#@K[#@L#@L#@K/KH@@@[)@@[Y[@K@@C;CK@@-XU
)@@G@@;G@@@#C?E@@@AA)@@ AA0@@B @@@@@AA@@@@)@@[I@=C@=G@OG@OG@OG@K@@@@@@@@@@@@@@XV
)@@G@@@@@@@@@@@@@@/K@@F^/K@@@D/K@@@G/K@@@G'=@@@@AB@@@@)@D[MK^G[^G[[@[@@@:8@@@=XW
)@@G@@/@K@@3+8@@@)C*E@@]/K@@FG(CE@@] @@@@H/K@K@B/K@@FA(@E@@]AC@@@@)@N[F@^[#@KKXX
)@@G@@0^^G[^@@@@@@/@@@FG[@@@@LCCE@@#[@@@@ICCE@@][@@@@H/@K@@3+8@@@#/K@@@YAD@@@@XY
)@@G@@)@W[EK^G[^G[@^C@)@@@@@@@CW[@@['=@@@@%*[@@@C8@@@PRCU@@]A])@@G[@@@@H/K@@@'XZ
)@@G@@O')@@]AE@@@@)@>[F#@L#@KK^G[[@@@@@@@@C8@@@]RCU@@#/K@@FS(CE@@#[@@@[O/K@@FOYA
)@@G@@2W])@@N@K@@FR@)@^;AF@@@@)@,@:#@KK[@@)@D@&@)@@@@@@@@@@@@@@@@]@^@@@@@#@@@@YB
)@@G@@/K@@@'O')@@]/K@@FS%*[@@@A@K@@IAG@@@@)@3[EK0^K^G[^G[@K0^K0^@@ *@@[YA])@@ YC
)@@G@@O])@[^O')@@[/G@K@B[@@@@K'^@@BF[@@@@ICCE@@]AH@@@@)@/[F@K0^K0^K0^^@K^G[@@@YD
)@@G@@C@@@[X/K@@]_(4[@@@/K@@FG2^[)@[N@K@@YR@K@^/C@@@[Y'^@@^=AI@@@@)[ [F#@L#@K^YE
)@@G@@[#@L#@L#@K@@2^[)@[N@K@@YR@K@^/C@@@[Y'^@@^=O])@[^O')@@[R])@@ [@@@@MAJ@@@@YF
)@@G@@)[I[F@^@K0^^G[^G[^@@@@@@/K[@[RR)K@[YC@0@@M @@@@IC@K@[X @@@@G/K@@FG(4[@@@YG
)@@G@@/K@@FGAK@@@@)[R[F]@D@K^[@^[#@L@@@@@@/K@@]_[@K@[X/^@@FC9)@@@I/K@@[%/K@@[>YH
)@@G@@/K@@[)/K@@[W'=@@@@AL@@@@)[)[M[#@L@^@K0^K@@/K@@]_[@)@[XW@)@@H/K@@FE(@@@@HYI
)@@G@@/K@@]_[@0@[X @@@@J0@@@@JH@0@@HAM@@@@)[%@+K^G[^@@)@H@,@)@@@@@@@@@@@@@@@@@YJ
)@@G@@@@@@@@@@@@@@@@@@@@/K@@]_[[@@[X/^0@FCS@0@@HAN@@@@)@M[Y@)@@@@@[@@@]#[@@@]]YK
)@@G@@[@@@][@@@=[@@@@=]@@@@<]@@@@+]@@@@-]@@@@@[@@@@@]@@@@@@@AO@@@@)@X@Q@)@@@@@YL
)@@G@@)[,@2K0^K^G[@@@@@@%8@@@[C*[@@@R@K@@I/K@@FG%=@@[YC8@@@]@@@@@F[@@@]^AP@@@@YM
)@@G@@)[4[F@^G[[#@L#@K^@@@@@@@/K@@F:%8@@@]C*[@@@R@K@@L[@@@@JC?[@@@[@@@@=CW[@@[YN
)@@G@@/K@@F(AQ@@@@)[.[EK)#[]@CK0^K0^K0^@@@C@K@@<C@@@@=[@@@@<CWG@@@'=@@@@(WG@@@YO
)@@G@@H8@@@[G^@@@@CW[@@[AR@@@@)]A[MK)^K@K0^[#@K@N8K@@CR@K@^.;!K@@A;()@@YC[)@@HYP
)@@G@@;DK@@MC[K@@G/GK@ )'^@@@@C?-@@@AS@@@@)]K[EK^G[[#@L#@L@K0^K0^@[@@@@IC@@@@LYQ
)@@G@@'^@@FI(@@@[X')[@@ZRCL@@@C@@@[X/K@@FM2PL)@[AT@@@@)]T@F@@@@@@@)@Z[A@)@@@@@YR
)@@G@@@@@@[-@@@@@-@@@@@@@@@@@@[@H@@][@H@@[[@H@@[[@H@@@/K@@#9AU@@@@)@$@6@)@@@@@YS
)@@G@@)]U@UK0^@@@@:8@@@DC?@@@1@@@@@@@@#@D<@@]@[<@@[@D+@@[@C+@@@@D-@@@@C-AV@@@@YT
)@@G@@)]X[F@K0^^[]@H]@G^C@0@@@[C@@@@G8@@@[O@0@@GCC@@@@R^0@@@/K@@G[%8@@@[C@@@@CYU
)@@G@@/K@@]-AW@@@@)]&[E^G[[#@L#@K^C[K@@@@@C@@@@@[O[@@@%8K@@DC@@@[VC?K@@1[*[@@@YV
)@@G@@C=@@@1 @#@@@[W[@@[AX@@@@)]\[M[#@KK@@@@@@@@*@@@@HW8@@@A;G@@@=TO[@@]/K@@]6YW
)@@G@@%8K@@DC?K@@1CO[@@@[^#@@@G8@@@[AY@@@@)]9[E^C[OC[OC[=[#@KK@@@@/K@@#(:8@@@=YX
)@@G@@C@@@@H/K@K]U'=@@@@[@@@@@G@@@@@G8@@@]G8@@@[AZ@@@@)#][F@K0^^G[@K0^K0^@@@@@YY
)@@G@@2S])@[N@K@[NR@)@^";?@@@A;*K@@YC=K@[YC*[@@@R@K@@I/^@@[,BA@@@@)#F[#@^G[^G[YZ
)@@G@@^[#@L#@L]@W@@@@@@@'^@@@@C@@@@KR])@@I'^@@]U*=@@@1[@@@@1C@]@@@/K@@FGBB@@@@ZA
)@@G@@)#N[#@K0^K0^K0^K^C]^G[^G[@@@@@R@)@@,[@@@@6'^@@@@/K@@#U(4@@@19*)@@\9*@@@!ZB
)@@G@@/GK@F_BC@@@@)#V[##@L#@L#@L#@L#@L#@L#@L#@K@R@3@@2R)0@@1N[0@[VC[0@[WR@K@[TZC
)@@G@@C@K@@0N]@@@!C]@@@\BD@@@@)#<@2K0^K^G[^[#@K@)@1@Q@)@@@@@@@@@@@@@@@@@/K@K@BZD
)@@G@@/K@@#9*0@@@1'^@@B3*4@@@1'^#@@@BE@@@@)@3[A@<1)G@N1)G@N1)G@K#1)C@@@@@@@@@@ZE
)@@G@@@@@@@[@@@@@@@@@@@@@@@@@@@@@@EV@@@@D%@@@@DJBF@@@@)@;[Y@)@@@@@@@D[C[@@C[@[ZF
)@@G@@@@B]@#@[A[@[[[ ]@#[[^]@]@[#[@[@[][@[@@@@@@@@@@@@@@@@@@BG@@@@)[A[Y@)@@@@@ZG
)@@G@@][M]@]][L[@[@@K]I#@@K[J[@@J[@[@@I]@#@[H[@[@[G]@#@[F]@]@[E[@[@@D]B#BH@@@@ZH
)@@G@@)[L@Y@)@@@@@)#(@:#@KK)DK^G[@@@C=@@[Y/GK@FY'^@@@@O')@@]R])@@G@@@@@P][O[@[ZI
)@@G@@][N]@#BI@@@@)#,[EK@()C)]A@+@-)C@@@@@C@@@[X/K@@GA%^@@[XC^H@@@/K@@#6:8@@[OZJ
)@@G@@C8@@@^/K@@FG%8@@@]BJ@@@@)#7[EK^G[[#@KK@@@@@@@@@@;G@@@LCC[@@[/K@@^B%8K@@]ZK
)@@G@@C4K@@1CW[@@[R@K@@I/K@@#9[@H@@@BK@@@@)^@[N]@*K)F@^C@0@@(^G@@@P;@@@[OB@@@@ZL
)@@G@@CW[@@[R@K@@HG@K@@I;CK@@NC^)@@@(@@@@GC^)@@@BL@@@@)^E[F]@CK)G[]@D#@L#@K()CZM
)@@G@@R')@@7 @@@@7[@@@@8'=@@@@(@@@@GC@^@@[ @@@@@R G@@@'=@@@@BM@@@@)^N[F]@5#@L@ZN
)@@G@@K0^K0^^G[@@@O;@@@[C@@@@^[@@@@.C@^@@@[@@@@;C@@@@7/K@@F$*W@@@9/,0@@@BN@@@@ZO
)@@G@@)^W[##@L#@K()C-@W-)C-@^-@S-)C@/K@K@B @@@@@'=@@@@*W@@@./,0@@@R')@@; W@@@.ZP
)@@G@@[@@@@/BO@@@@)^=[MK0^K[#@KK@K@@/@K@ 8+8@@@)C*E@@]/K@@AI(CE@@]A])@[R@@@@@@ZQ
)@@G@@/K@@^( @@@[R@@@@@@BP@@@@)^,[MK[@K0^@K@@@@@CW[@@[/K@@F(%8@@@[C*[@@@RCU@@]ZR
)@@G@@[*@@[Y/@K@ 8+8@@@#/K@@ ?:8@@@=BQ@@@@)^8[N#@K@K@^C@0@@@G^@@@@CW[@@[C?-@@@ZS
)@@G@@%?[@@@/K@@F:%8@@@]C*[@@@RCU@@#C?-@@@[@@@[PBR@@@@) ][E^G[[]@D#@L#@L]@L@@@ZT
)@@G@@/GK@ )'^@@@@C@K@[QC@@@[P'=@@@@(@@@@G[@@@[QCWG@@@H8@@@[BS@@@@) F[EK0^ES]CZU
)@@G@@S]]A@+A@))@@')G@ XH8@@@-C*@@[Y[@@@[WC8@@@[[@@@[TC8@@[X[@@@[VC8@@@ABT@@@@ZV
)@@G@@) O[EK0^^G[^[#@L#@L@K@@@/K@K^=/K@K^$*@@@[R @@@@A'^@@F!(@@@[XN9@@@[[=@@[YZW
)@@G@@C8@@@]BU@@@@) X@V#@L#@L#@K@@@@)[O@&@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZX
)@@G@@[[@@[X[@0@[X[@)@[XBV@@@@) )[E^[]@D]@D@K)]K)]K)]@'=@@@@'=@@@@'=@@@@/K@@F1ZY
)@@G@@'=@@@@'=@@@@/KH@ <;CK@@N;*K@@[BW@@@@) ([#@K^C@=G[[#@L#@L]@=@@@@@@@'^@@@@ZZ
)@@G@@[#0@[SC#0@[RO')@@][*@@[Y'=@@@@/K@@F5/K@@F3BX@@@@) 1[F#@L#@L@@K^[#@K@@@@@AA
)@@G@@[@@@[U'^@@BF/K@@ .P')@@]N[@@@KH9@@@[/GK@FY[#0@[RC#0@[SBY@@@@) '[EK)BK^G[AB
)@@G@@^G[^G[^G[[@@/K@@ T:80@@[[=0@[Y[@)@[W[@K@[T[@@@[V/GK@F_'^@@@@RE%@@]BZ@@@@AC
)@@G@@)A#[F]@-#@KK0^^G[]&@+A@)C8@@@[[@@@[TC8@@[X[@@@[VC8@@@A[=@@[YC8@@@][@@@[XAD
)@@G@@'^@@@@CA@@@@)AG[N#@L@^@@^G[@@@[=0@[YC80@@]C8)@@[G8K@@#C@K@@EC)E@@]/@@@A%AE
)@@G@@C*E@@]/K@@ T[@@@[WCB@@@@)AQ[E^[]@-@K^G[[#@K@@@@@[@@@[VC8@@@A[@@@[X'^@@A4AF
)@@G@@/K@@AW'^@@@@/K@@AV:6!@@@C')@@0CC@@@@)AZ[M()C-)CCS]@@@@N[@@@GG8@@@[*@@@@HAG
)@@G@@W8@@@A;G@@@=C)E@@][@@@[WC8@@@[[@@@[TC8@@[XCD@@@@)A([F@^G[[#@K^G[@@@@@@@@AH
)@@G@@C8@@@[[@@@[TG8@@@#C@@@@E[@@@[WC8@@@[[@@@[VC)E@@]/K@@ TCE@@@@)A2[N#@L@@@KAI
)@@G@@^@@@@@/K@KA48KK@A/&8K@@[R@K@@H @@@@GN@K@@GL8)@@[@@@@@@/K@@A<[=@@[YCF@@@@AJ
)@@G@@)A/[U^@@K^@@C0L@@@C4L@@@/K@@A'/K@@F7%8K@@0G80@@[;?@@@#;@K@@#')J@B W8)@@AAK
)@@G@@ @@@@ICG@@@@)BB@+@@@@@@@)[S@,@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@C)L)@@AL
)@@G@@C=L@@@C*L@@@C?L@@@CH@@@@)[X@Y@)@@@@@)BF@2K0^[@@@C*E@@]/K@@B0(^E@@] @@@[^AM
)@@G@@A])@[)@@@@@@@@@@@@@@@@@@@@@@@@CI@@@@)BL[MK@@[@@@@@@@@@/K@@BX:6!@@@C')@@0AN
)@@G@@C80@@]C8)@@[G8K@@#C@K@@EC)E@@]/@K@B>+8@@@)CJ@@@@)BV[N]@-@K@@^@@@@@/K@@B!AO
)@@G@@N[@@@KG9@@@[*@@@@LW9@@@A @@@@KC-U@@]'^@@A4/K@@BY'^@@@@CK@@@@)B>[E^C[4@K^AP
)@@G@@C]^[#@K@@@@@R])@[)/K@@B!'^@@@@/K@@F;:80@@[/GK@F9'^@@@@ @@@@GRA%@@]CL@@@@AQ
)@@G@@)B,@:@K^G[[@@@@@@@)[)@I@)@@@@@)B3@E@@@@@@@@@@@@@/K@KBF @@@@GR])@[)/K@KBFAR
)@@G@@/@@@F.CM@@@@)B4[F#@KK^G[[@[]@C@@@@@@'=@@@@(@@@@GN8K@@[/@@KB3CC[@@]R@K@@IAS
)@@G@@/K@KB3%8@@@[C4@@@1CN@@@@)B.[F#@KK0^K)F^C]-@K@@@@/K@@CC8KK@CAO[@@@IC^)@@@AT
)@@G@@*@@@@HC^)@@@+@@@ @R[@@@H+@@@^_CO@@@@)CA[MK@K)]@^C@)@@@'=@@@@,*[@@@C8K@@HAU
)@@G@@C8@@@DR@K@@^'=@@@@%W^@@[CW[@@[/K@@B;C^^@@]CP@@@@)CK[M[#@L@@^G[@@@@T@K@[XAV
)@@G@@COL@@@G?[@@[T8@@@ACW[@@@/K@@G^,@@@[XCOL@@]H8@@@[CW[@@]CQ@@@@)CU[M@@K)#@@AW
)@@G@@@@@@@@(^H@@@H8K@@[G^K@@@CWL@@[G8@@@[*@@@@HW8@@@A @@@@GH8K@@[G@K@@GCR@@@@AX
)@@G@@)C=[F]@C^G[^@K0^@@@@@@@@C^^@@][^^@@@G@@@[-C^^@@@/@@KB3[@@@[-H^^@@]R H@@@AY
)@@G@@'=@@@@CS@@@@)C![N#@K[@@^G[@@@@0@@@[-N^P@@@O9K@@]O[K@@^R[K@@G/K@KB3:^O@@@AZ
)@@G@@G8K@@[[^O@@]K@@@[-CT@@@@)C7[N@@K0^^G[@K0^@1@@@[-&9)@@[&9K__"1@@@[-&9K@@[BA
)@@G@@O[)@[-R[)@@ P9K@@[O P@@@/K@@C'CU@@@@)D[@U^@@@@@@)[-@I@)@@@@@)D^@U^G[@@@@BB
)@@G@@C5X@[+&9K@@[@@@@@@@@@@@@/K@KB3M[>)@@&9)__"CV@@@@)DB[#@@K0^^[@@@@@@@@@@@@BC
)@@G@@@@@@@@/K@KD^8LK@DCG8@@@[')I@[$W8K@@A;GK@@=L8@@@[8LK@DCCW@@@@)[+[Y@)@@@@@BD
)@@G@@[-P)@@[>P@@@[(P@@@[!P@@@[1P@@@[5P@@@ @@@@@@@@@@@0@@@@@ @@@@@_@@@@@CX@@@@BE
)@@G@@)DJ[U@K@^@@@&8K@@[N[K@[B'^@@D^N[K@[CC@@@@OR[K@@]/K@@DT!@@@[CC@@@[BN[K@[CBF
)@@G@@@@@@@@CY@@@@)DU[MK^@@K0^@@@@@@C@@@@OG90@@[')H@[!W8@@@A;G@@@=H8@@@[C@@@@NBG
)@@G@@/K@KDJ8LK@DX&8)@@[CZ@@@@)D=@2[#@KK@@)[!@Y@)@@@@@C!L@@@C1L@@@C5L@@@/K@@DVBH
)@@G@@G'@@@[')H@[3W8@@@A;G@@@=H8@@@[DA@@@@)[0[I@)@@@@@)D%@E@@@@@@@[-M)@@[>M@@@BI
)@@G@@[(M@@@[!M@@@[1M@@@[5M@@@C-L)@@C>L@@@C(L@@@DB@@@@)D:[U@K@@@@@;,K@@AW8@@@ABJ
)@@G@@;G@@@=G90@@[H8@@@[C@@@@N8L0@D0 @@@@R @@@@Q @@@@P&8K@@[DC@@@@)D6[N#@KK^G[BK
)@@G@@@@@@@@;G@@@=H8@@@[C@@@@OH'@@@[G]@@[C @@@[BW]K@ [8L0@D0C])@@R')H@[9DD@@@@BL
)@@G@@)E@[M@K^@[@@@@@@@@8M@@EF&8)__"N[0@@GN'@@@E/G@@EC/@@@ECH8@@@EC@@@[CO@)@@GBM
)@@G@@W8@@@ADE@@@@)EE[N@@@[#@K@@@@@@')H@[_)'0@@0W')@@E;I)@@=W8@@@A;G@@@=H'@@@[BN
)@@G@@H8@@@[C@@@@O/K@@EPDF@@@@)EO@;@^@[@@@)[9@Q@)@@@@@)2-@@@)6-@@@/K@@EDC])@@PBO
)@@G@@ @@@[BN]@@[B/K@KD%(@@@[B/K@@EDDG@@@@)[;[Q@)@@@@@@@@@@@[<]@@@[$]@@@[:]@@@BP
)@@G@@[\]@@@[3]@@@[7])@@)+-)@@)&-@@@)%-@@@),-@@@DH@@@@)EV[U@K@^@@@G[0@[BN[K@[BBQ
)@@G@@'^@@D^N[K@[CC@@@@OR[K@@]/K@@E>!@@@[CC@@@[BN[K@[C@@@@@@DI@@@@)E&[U@@@@@@@BR
)@@G@@;G@@@=H8@@@[C@@@@OO@K@@GW8@@@A;G@@@=H8@@@[C@@@@NH'@@@[H90@@[G]@@[CDJ@@@@BS
)@@G@@)E1[M@K@[#@K@@@@@@')H@] W8@@@A;G@@@=H8@@@[C@@@@N8LK@E6&8)__"&8K__"O@)@@GBT
)@@G@@W8@@@ADK@@@@)E;[E@^G[[@K@@@@@@@@@@@@/K@KEV8LK@E6H'@@@[')H@]FW8@@@A;G@@@=BU
)@@G@@H8@@@[C@@@@OH90@@[DL@@@@)] [Y@)@@@@@[>M@@@[(M@@@[!M@@@[1M@@@[5M)@@C-L@@@BV
)@@G@@C>L@@@C(L@@@C!L@@@C1L@@@C5L)@@DM@@@@)]K@I@)@@@@@)F^[]K[@^@K@/K@@GCC8@@@^BW
)@@G@@/K@@GCC8@@@#/K@@GCC8@@@]/K@@GCC8@@@[[-M@@@DN@@@@)FG[MK[#@L]@.@^@K@/K@@GCBX
)@@G@@C8@@@C/K@@GCC8@@@B/K@KFI'=@@@@C@@@ ]@@@@@@/K@@GCC8@@@ DO@@@@)FQ[MK[@^@K@BY
)@@G@@@@@@@@;CK@@N;*K@@[/K@@GCC8@@@G/K@@GCC8@@@F/K@@GCC8@@@E/K@@GCC8@@@DDP@@@@BZ
)@@G@@)F)[F@K)]K^[@K^G[[@@@@@@/K@@GCC8@@@H/K@K@B/K@@FW/K@@FU/K@@FS/K@@FQ'=@@@@CA
)@@G@@/KH@F-DQ@@@@)F([MK[@^G[^C#4@K@/K@@GCC8@@@L/K@KF!'=@@@@C@@@ #@@@@@@/K@@GCCB
)@@G@@C8@@@J/K@@GCC8@@@IDR@@@@)F3[MK[@^@K[@@@@@@/K@@GCC8@@@Q/K@@GCC8@@@P/K@@GCCC
)@@G@@C8@@@O/K@@GCC8@@@N/K@@GCC8@@@MDS@@@@)F.[MK[#@L@^@K@@@@C8@@@U/K@@GCC8@@@TCD
)@@G@@/K@@GCC8@@@S/K@@F.:@K@ ^;CK@@M/K@@GCC8@@@RDT@@@@)GB[#@K)GK0^K)[K0^K)KK0^CE
)@@G@@@@@@@@C@]@@@R^?@^)[@K@@@C?W@^)[@K@@@CWW@^) @@@@@/K@@GCDU@@@@)GJ[#][ ][[]CF
)@@G@@@.#@L#@L#@L#@K@@@@/KF@@@ @@@@AR]0@@A/K@K@B(@@@[R'=@@@@*@@@@@*@@@@@DV@@@@CG
)@@G@@)]L[Y@)@@@@@ADY DES ALRERRAY I FOR ASYMBOLD     ODIFIET BE MCAN NO ITEM CH
)@@G@@AN OLDDW@@@@)]W[Y@)@@@@@ATIC OARITHMW     VERFLOOR - OPR ERRATIC OARITHMCI
)@@G@@RED   - IGNOFINED DX@@@@)]$[Y@)@@@@@UATE   AN EQPES INBLE TY VARIAATABLECJ
)@@G@@INCOMP BY 0 IVIDEDOR - DPR ERRDY@@@@)]2[Y@)@@@@@THE SEE FOR LINKAGD SET CK
)@@G@@INVALIO(0)  TO ZERS SET  PTR IG: SETWARNINDZ@@@@)].[Y@)@@@@@N NOT E # CACL
)@@G@@OR LIN NAME RECORDNOT A DIFY   TO MOL ITEMILLEGAT     EA@@@@)#C[Y@)@@@@@CM
)@@G@@AL CONO MANU HAS NRECORD OR 0 S MAX.EXCEEDUMBER LINE NLUATEDBE EVAEB@@@@CN
)@@G@@)#N[Y@)@@@@@NED SEUNDEFI$FILE R IN D LONGEORD NOHE RECT OF TCURRENORD   CO
)@@G@@TROL WEC@@@@)#Y[Y@)@@@@@ OR ZET EXITTER NOT POING - SEWARNINAME   CORD NCP
)@@G@@NED REUNDEFIT NAMEED@@@@)#([Y@)@@@@@E MANU IN THPATINGARTICI NOT PRECORDCQ
)@@G@@RECORDF THE RENT ONO CURRO    EE@@@@)#4[Y@)@@@@@ED     ENTERNUMBEROCTAL CR
)@@G@@A BAD ELATED NOT RET ARE AND SRECORDAL SETEF@@@@)#_[Y@)@@@@@DEX    AN INCS
)@@G@@SED ASITEM UPIC X ED    VALUATT BE ECAN NOVALUE INDEX EG@@@@)^E[Y@)@@@@@CT
)@@G@@ALUE  RENT VNO CUREM OR NED ITUNDEFINDEXEDCTLY INCORREM IS IAN ITEEH@@@@CU
)@@G@@)^P[Y@)@@@@@ CHANGNOT BEH CAN  LENGTRECORDE     F RANG OUT O VALUEING ONCV
)@@G@@DEPENDEI@@@@)^)[I@)* @* @* @* @@@@@@@Z[@ F@Y[@ E@@@@ ]@W[@ D@V[@ C@U[@ BCW
)@@G@@@T@@ A@S[@  ED    EJ@@@@)^([I@+)O])O])O])O])@@@@@*[@ N@@@@ #@&[@ M@>[@ LCX
)@@G@@@=[@ K@<[@ J@+[@ I@-[@ H@)[@ GEK@@@@)^2[I@+)O])O])O])O])@@@@@0[@ V@\[@ UCY
)@@G@@@)[@ G@,[@ T@![@ S@?[@ R@:[@ Q@%[@ P@(@@ OEL@@@@)^;[Q@+)O])O@])O@@@@@)@]CZ
)@@G@@@[B@#<@[A@]2DO]"K@@@@)@@@@@Z__@@[@@.@@[@@=@@[@@M@@[@@DEM@@@@)  [I@+)O])ODA
)@@G@@])O])O])@@@@@[C@#]@[A@^J@[^@]"@[A@]8@[B@]:@[A@]>@[A@]Z@[C@]R@[A@]LEN@@@@DB
)@@G@@) I[I@+)O])O])O])O])@@@@@[ @#'@[ @#5@[B@#,@[^@#%@[^@#Z@[#@#W@[B@#P@[A@#JDC
)@@G@@@[ @#EEO@@@@) R@,@+)O])O])@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[A@^V@[A@^PDD
)@@G@@@[ @^E@[ @^ @[A@#_EP@@@@@@^@@ @@D@@M@@!@@A@[ @@@@@@@@@@@@@GR)@@@@@)@@@@@DE
)@@G@@@@@@ WRDA         STATUS      ERR$        TT1         GETSET      LAST$DDF
)@@G@@      MCORE$      GETVAR      GETNUM      GETRSV      C14         C15   DG
)@@G@@      RDALN       TF$DBP      TF$C        PRINT$      FATAL       PERFSWDH
)@@G@@      LET         @@[@@@@@@@@@GETVX11     @@^@@@@@@@@AGETVARX     @@[@@@DI
)@@G@@@@@@^$VARXVAL     @@^@@@@@@@[XVARSW       @@^@@@@@@@[YGETIDX      @@[@@@DJ
)@@G@@@@@@BF@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[#]@ #@L#@L#@KK0^^C@)@@@@@@'=@@@@/KG@@@C@G@@@DL
)@@G@@C?E@@@ @@@@H @@@@5AA0@@Y @@@@@AA@@@@)@@@6@<1)G@N1)G@N1)G@N1)G@N1)G@N1)G@DM
)@@G@@K@@@@@@@@@]%@@@@@L@@@@@F@@@@@I@@@@@C@@@@@BAB@@@@)@A@6@<1)G@N1)G@N1)G@N1)DN
)@@G@@G@N1)G@N1)G@K@@@@@@@@@@-@@@@@Y@@@@@V@@@@#W@@@@#W@@@@ :AC@@@@)@C[F@K^G[^[DO
)@@G@@@K^[@K0^@@@@/K@K@Y'^@@]T'^@@@O/K@@@G'^@@] '^@@@O/K@K@Y'^@@] '^@@@OAD@@@@DP
)@@G@@)@L[N@K^@EK@C@C]@@/K@K@O[@@@[2O;@@@]C@@@@E[@@@[1C8@@@@@@@@@@/K@@@M'^@@]TDQ
)@@G@@'^@@@OAE@@@@)@V[EK0^K[#@L@^G[^@@@@@@/K@@@=[@@@@GC8@@@#/K@@@=[@@@@GC8@@@^DR
)@@G@@/K@@@=[@@@@GC8@@@[AF@@@@)@=[F@K0^^[#@KK]&@+^@S@@(@@@@@R')@@S/K@@@=%W[@@[DS
)@@G@@C@@@@G/K@@@=*@[@@@R^K@@J'^@@[4AG@@@@)@!@N]@L#@K@)@G@I@)@@@@@)@\@+K) @@@@DT
)@@G@@R[K@@GH8@@@[G^@@@@@@@@@@@@@@@@/K@K@Y/,0@@@AH@@@@)@3[MK@K0^K)@@K@@@/K@K@\DU
)@@G@@M@M)@@N@K@@GG8@@@[C^@@@@R@)@](&8K@@[R^P@@@'^@@@.(^ @@@AI@@@@)@.[EK)A@K)BDV
)@@G@@K^C]^@@@@@@@'^@@[Q*C@@@@'^@@[F*C@@@@CW @@@[^ @@@G8@@@[C@@@@@@@@@@@AJ@@@@DW
)@@G@@)[A[F]@>]@D@K)]K[]@WK@@@/K@@[N:W[@@@R^K@@@@@@@@@/K@@[%'=@@@@'^@@[)'=@@@@DX
)@@G@@(C@@@@AK@@@@)[J[MK[@[@^C]@@@@@:W[@@@R^K@@@@@@@@@/K@@[%GS[@@[CW[@@[/K@@[HDY
)@@G@@OOL@@@/K@K[F(O[@@@AL@@@@)[T[N@^@K[@^C]K@@@:W[@@@R^K@@@@@@@@@/K@@[%CW[@@[DZ
)@@G@@/K@@[SOOL@@@/K@K[Q(O[@@@/K@@[YAM@@@@)[<[N@^@K[@K)A^C[)[@@@@@G8@@@ G@@@@@EA
)@@G@@/K@@[%CW[@@[/K@@[+OOL@@@/K@K[)(O[@@@/K@@[*AN@@@@)[![F]@(@^C]0K[]@0@@@@@@EB
)@@G@@C@@@@@@@@@@@/K@K[\@@@@@@@@@@@@/,0@@@@@@@@@/K@K@.'=@@@@AO@@@@)[6[#]@5@^C#EC
)@@G@@^G[]&@+^[2A@)@@@@@*W@@@K/,0@@@R')@@I[@@@@I[@@@@@G8@@@[/K@@]@!@@@@@AP@@@@ED
)@@G@@)["@;]@D@K)GK)JK0^K0^K@@@@@@@@@@@@@@/K@@AO/K@K@Y*@@@@H'^@@@@ @@@@@/K@K[4EE
)@@G@@'=@@@@AQ@@@@)@H@&@)@@@@@)] @%K^G[[@@[@@@[1H8@@@[C^@@@J'^@@[4@@@@@@@@@@@@EF
)@@G@@@@@@@@@@@@@@@@@@@@AR@@@@)]E[EK0^K0^[@K^G[@@@@@@@[@!@@@C@)@@LC@K@[1'^@@[\EG
)@@G@@[@W@@@T8K@@AC^K@@K[@K@@LC@W@@@AS@@@@)]N@3@K0^ES]CK[*K]C@@@@@)@L@I@)@@@@@EH
)@@G@@@@@@@@/K@K] /,0@@@(@@@@@R')@@M[@K@@H/@@@]AAT@@@@)@M@6@)@@@@@)]T@UK^G[@@@EI
)@@G@@C^@@@K'^@@[4@@@@@@                  1     #@@@@@@^]@@@AU@@@@)]W[E[]@[#@KEJ
)@@G@@(@@-@))C@@@@/@@@]U'^@@[\'^@@@@R8)@@[R^K@@J[@K@@@T8K@@]C@K@@GT8@@@AAV@@@@EK
)@@G@@)]>[F#@K(@+-@A-@C)@)@@@@P8K@@ /K@@AS(@@@@[RCU@@]/K@K]T/,0@@@(@@@@@R')@@@EL
)@@G@@[@@@@HAW@@@@)],[F#@KK@^@K0^@@@@@@@@@[@@@@)CW[@@[/K@@AS%*[@@@C8@@@]O8K@@ EM
)@@G@@/K@@#F:@[@@@C@@@]%AX@@@@)]7[F]@O^G[^[#@KK@@@@@@@CW[@@[/@@@];C@[@@@R^K@@JEN
)@@G@@'^@@[4[@@@@ZCWG@@@H8@@@[OB@@@@AY@@@@)#@[##@L@K)MES]CK[*K]CS]C@@@@@'^@@@\EO
)@@G@@C@@@@)/,0@@@(@@@@@R')@@S'^@@@@/K@@];%@@@@ZAZ@@@@)#C[##@L@K0^K)GK^C^+=@@@EP
)@@G@@@@@@@@(@[@@[R8K@@@'^@@@@/K@@A9(@@@@@/K@K@Y'^@@^<C@@@@)BA@@@@)#K[F@^G[^C[EQ
)@@G@@OC[KK)]K) @@CC@@@@'=@@@@2W[)@@&8K@@[R^K@@@NCK@@@[@@@@ZCW[@@]/K@@A;BB@@@@ER
)@@G@@)#T@UK0^K@@@)@S@6@)@@@@@                  1     #@@@@@@^#@@@/K@@##[@@@@)ES
)@@G@@H@@@[[BC@@@@)@Y@Y@)@@@@@)#W@<#@L][H][L]@^@@@@@@@*@@@@@'^@@@@A]0@@@R]0@@YET
)@@G@@@@@@@@@@@@@@@@@@@@BD@@@@)#)[##@L][OK^C =[@ES]@@@@@@@@@R')@@S'^@@#2/@@@A&EU
)@@G@@C@@@@@/K@@A)%8@@@]C=@@@@/K@K@YBE@@@@)#*[#]@H]@L]@[#@L@K0^K^G[@@@@@C@@@@)EV
)@@G@@'^@@@\[@@@@)'^@@ R[@@@@ZCW@@@]/,0@@@(@@@@@BF@@@@)#0[#@K0^^G[^G[^G[^C 4C#EW
)@@G@@@@@@@@ @@@@@ @@@@@ @@@@! W@@@\[@@@@,@@@@@@/K@K@Y'^@@^<BG@@@@)#8[]()C-@0-EX
)@@G@@)C)CS]CK@CS]CKF)@@[@@@@@C@@@@![@@@@@C^@@@0/K@@AO*W@@@\/,0@@@R')@@!BH@@@@EY
)@@G@@)^@@N]@1@@@@)@!@6@)JA@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@@@@@@@@@@@/K@K#2EZ
)@@G@@[@@@@@BI@@@@)^][U@@K^@@@O;)@@[C@@@@I/K@@^V8KK@^F @@@@JN@)@@JH80@@]N@K@@GFA
)@@G@@&8K@@[R@K@@H@@@@@@BJ@@@@)^H[U[@^@@@@C8@@[@*@@@[]C8@@@EC[@@@L+9@@@J/K@@^PFB
)@@G@@*@@@[]')H@^XW8@@@AH8K@@[;G@@@=BK@@@@)^S[U^@K@@@@C-[)@@C>[@@@C([@@@C![@@@FC
)@@G@@C1[@@@C5[@@@/K@K^]C@@@@J/K@@^DG@0@@KT@0@@GBL@@@@)^<[MK) []@C[]@D@@'^@@ -FD
)@@G@@'=@@@@%W @@]CWG@@@R W@@@'=@@@@(^G@@@H8@@@[G^@@@@@@@@@@BM@@@@)^![M[@K[@@@FE
)@@G@@@@@@@@[@A@@[[]Q@@]C]Q@@['^@@ JCSL)@@/K@@^'8K)@^2N*-)@@&8K@@[C@ @@[BN@@@@FF
)@@G@@)^7[N#@KK@K@@@@@@@O;K@@]G@K@@ O8K@@]C)L@@@/K@K^<(@@@[]N0-@@@/K@@^0[QQ@@@FG
)@@G@@C]K@@ZBO@@@@) [[MK^@[@K@@@@@@@[]Q@@]C]Q@@['^@@ J/@)@ ];?)@@[ @@@@ICSL)@@FH
)@@G@@/K@K^<8K)@ ^C@.@@@BP@@@@) F[EK0^^@K)T^CAK@@@@@@@2WQ)@@NCK@@@&9)@@#R )@@@FI
)@@G@@@@@@@@/K@@ ][QQ@@@C]K@@Z[@A@@[BQ@@@@) O[F]@D#@L@^C[OC[KK)]@@'=@@@@2W[)@@FJ
)@@G@@&8K@@[R^K@@@NCK@@@@@@@@@/K@K JP[)@]:'=@@@@BR@@@@) X[EK) ^@K)U^CA0@@@@@@@FK
)@@G@@:W[@@@R^K@@@(@@@@[R^K@@@@@@@@@/K@K RC@@@@[P^K@@@&8K@@@BS@@@@) &[F@^C@-@KFL
)@@G@@)GK0^@@@@@@@C8@@@[RCU@@][@@@@6C@@@@@/K@@ >OOL@@@'=@@@@(O[@@@/K@K -BT@@@@FM
)@@G@@) \[EK[#@K^G[^CB^@@@@@@@/GK@A0'^@@@@[@)@@4C?-@@@ @@@@H[@@@@3CW[@@[/K@@A?FN
)@@G@@%*[@@@BU@@@@) 8[F@K)XK[#@KK^C@^CB)@@:@@@@@CW@@@]'^@@#2C@@@@I[@@@@5C8@@@[FO
)@@G@@/K@@A%:@)@@@/@)@A,BV@@@@)A[[F@K[#@L][5@K0^]=@@@@&;K@@@ @@@@HC@@@@3'^@@#2FP
)@@G@@C@@@@@[@@@@5C8@@@]/K@@#$/K@@A%BW@@@@)AE@;#@L@K0^K^C@=[@@@@@@@@@@@@@@@@@@FQ
)@@G@@/K@@A7/K@@A5'=@@@@/KG@AIC@@@@5/K@@ 6C@)@@4BX@@@@)@3@&@)@@@@@)AL@<#@L]@1#FR
)@@G@@@L#@K@*@@@@5/K@K@Y[@@@@@C@@@@6@@@@@@@@@@@@@@@@@@@@@@@@BY@@@@)AP[N@^@K[@^FS
)@@G@@@@@@@@C8@@@ /K@@A.C8@@@^/K@@A.C8@@@#/K@@A.C8@@@]/K@@A.C8@@@[/K@@AGBZ@@@@FT
)@@G@@)AZ[N@^[#@L@^@K@@@C8@@@D/K@@A.C8@@@C/K@@A.C8@@@B/K@@AU:@K@]?/K@@A.C8@@@AFU
)@@G@@/K@@A.CA@@@@)A([N@^@K[@[#@K@@@/KH@[';CK@@N;*K@@[/K@@A"C8@@@G/K@@A"C8@@@FFV
)@@G@@/K@@A"C8@@@E/K@@A.CB@@@@)A3[MK[@^@K[@@@@@@/K@@A"C8@@@L/K@@A"C8@@@K/K@@A"FW
)@@G@@C8@@@J/K@@A"C8@@@I/K@@A"C8@@@HCC@@@@)A.[##@L][X#@L]@ #@L][.#@K@@@@C@]@@@FX
)@@G@@R^?@]R[@K@@@C?W@]R[@K@@@CWW@]R @@@@@ @@@@6CD@@@@)B @<]][][.]] @@@@)@7@&@FY
)@@G@@)@@@@@ OBJECNOT AND     NO FIN/K@@AL'=@@@@*@@@@@*@@@@@CE@@@@)@;[Y@)@@@@@FZ
)@@G@@OR NOTLIMIT UT OF 0 OR OVALUE INDEX  NAME RECORDNOT A RD OR T RECOCF@@@@GA
)@@G@@)[A[Y@)@@@@@CAN NOVALUE INDEX NDEX  S AN IABLE AL VARIILLEGAE ITEMDEXABLGB
)@@G@@ AN INCG@@@@)[L[Y@)@@@@@LE VALVARIABITEM   COMP  PIC 9T BE ALE MUSVARIABGC
)@@G@@ED    VALUATT BE ECH@@@@)[W[Y@)@@@@@ED     DEFINLE NOTVARIABLOWED NOT ALGD
)@@G@@DBP=0 UATED E EVAL NOT BUE CANCI@@@@)[$[Y@)@@@@@TER INT POINBAD SEME    GE
)@@G@@SET NANOT A ET    MPTY SR AN E SET OEND OFCJ@@@@)[2[Q@)@@K)]K0[@@@/K@@A3GF
)@@G@@'=@@@@E SET FOR THRENCY NO CURD      RECORURRENT THE CCK@@@@)[/[A@=C@=C@GG
)@@G@@=C@=C@=C@=C@=G@K@@NEXT S/K@@A#'=@@@@'=@@@@'=@@@@'=@@@@'=@@@@'=@@@@CL@@@@GH
)@@G@@)]^[Y@)@@@@@ IN D$LONGERL) NO (MANUAMEMBERT SET CURREN$FILE T IN DBER NOGI
)@@G@@ET MEMCM@@@@)]J[Q@)@@])@@@@@@@@A@@]!L LINECONTRO IS A T LINECURREN IS 0 GJ
)@@G@@T LINECURRENFILE  CN@@@@)]T[I@+)O])O])O])O])@@@@@J@@]6@I[@]5@H@@]4@G[@]3GK
)@@G@@@F[@]2@E[@]1@D[@]0@C[@]\@B[@],CO@@@@)]+[I@+)O])O])O])O)@@@@@#     @@[@@@GL
)@@G@@@E@@].@D@@]/@O@@];@N@@]'@M@@]9@L@@]8@K[@]7CP@@@@)]:[I@)E[KE[KE[KE@@@@@@@GM
)@@G@@@[A@[U@[A@[O@[A@[I@[ @[D@[D@[@@[B@@9@[]@@7)@@@@]@@#@@#CQ@@@@)]4[I@+)O])OGN
)@@G@@])O])O])@@@@@[#@]K@[C@]C@[ @]#@[^@[6@[B@[\@[#@[?@[ @[$@[^@[<@[#@[)CR@@@@GO
)@@G@@)].@I@+)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GP
)@@G@@@[ @]NCS@@@@@@@@@@@K[@@@@@@@@@[@A@@[[]Q@@]C]Q@@['^@@ JCSL)@@/K@@^'8K)@^2GQ
)@@G@@N*-)@@&8K@@[C@ @@[BN@@@@@@^@@ @@D@@+@[H@@]@[P@@@@@@@@@@@@@BD)@@@@@)@@@@@GR
)@@G@@@@@@]"RDA         STATUS      ERR$        BOPT        PRINTL      TT1   GS
)@@G@@      LAST$D      C17         C11         C5          MCORE$      LOCATEGT
)@@G@@      LN          RECNMC      TF$RMR1     SENDEOF     EXPAND      PRTPO GU
)@@G@@      GETLINE     GETVX11     GETVARX     VARSW       VARXVAL     RDALN GV
)@@G@@      TF$DBP      TT2         C9          C1          GETSET      SETDBPGW
)@@G@@      SETOWNER    FATAL       PERFSW      PRINT$      LOCATE$     @@[@@@GX
)@@G@@@@@@@@GETNUM      @@[@@@@@@@^]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[]()C-@@-)CCK#CKG*K )HA
)@@G@@@@@@@@C/@@@,/,0@@@'=@@@@/,0@@@C8K@@XC8@@@P/,0@@@C/@@@@AA@@@@)@C[#]@D][>]HB
)@@G@@@)K)]K0^K)I@@@@@@@C/@@@)/,0@@@C@@@@O/,0@@@C/@@@(/,0@@@'=@@@@/,0@@@AB@@@@HC
)@@G@@)@K[#]@CK)]K)JK0^K)UK0^K)V@@@@/,0@@@C@@@UT'=@@@@R#@@US/,0@@@/,0@@@C/@@@-HD
)@@G@@/,0@@@AC@@@@)@S@F@@@@@@@)@@@6@+)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[[@@@@HE
)@@G@@@@@@@@@&I@@A/K@@@2AD@@@@)@O@6@)@@@@@)@T@V][0@@@@N8K@@UC8K@@['=@@@@: ON  HF
)@@G@@EDITOR$FILE LABS D-BELL 6.0   AE@@@@)@W[EK0^K^@@K@@@@@@@@@@@/K@@@YO8K@@[HG
)@@G@@[@L@@@0@@@@G;*@@@[/K@@@>8KK@@)R@K@UU;*@@@DAF@@@@)[N[Y@)@@@@@@@@@@@@@@@@@HH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AG@@@@)[Y[Y@)@@@@@HI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AH@@@@HJ
)@@G@@)[(@&@)@@@@@)@>@<#@L@K0^EKI)@@G8@@@@C@@@[3/K@@@:(@@@[%@@@@@@@@@@@@@@@@@@HK
)@@G@@@@@@@@AI@@@@)@([##@L#@L#@L][8K)ZK^@@@@@@@@'^@@@7/K@@@2/,0@@@C8@@@['^@@@@HL
)@@G@@*@@@[&[@@@[4[@@@[3AJ@@@@)@1@3@K0^K)U^G[^@@)[!@Q@)@@@@@UT FILNO INP/K@@]$HM
)@@G@@[@@@HMC8@@[V'=@@@@R#@@UV/K@@[)AK@@@@)[\@Q@)@@@@@)@7@2ES]CK@]^@MA@)C@@@UWHN
)@@G@@/,0@@@C/@@@@/,0@@@C/@@@@@@@@@@IFIED E SPECAL@@@@)@.[#]@8K)^K0^K)M^C@=C^0HO
)@@G@@@@@@@@(4@@@@/,0@@@C/@@@,/,0@@@9?@@[1/,0@@@C/@@@[/,0@@@AM@@@@)[ [F@K)NK)MHP
)@@G@@^C@=[][H@@@@C/@@@*/K@@[J()@@@@/K@@[J/,0@@@C/@@@*/,0@@@9?@@@]/K@@[FAN@@@@HQ
)@@G@@)[I[#]@D][H@K)NK)MK^C^4CC@@@@@'=@@@@(4@@@[/K@@[S/,0@@@9?@@@^/K@@[O(0@@@@HR
)@@G@@/,0@@@AO@@@@)[Q[#][H][CK)^^C@=C#2&@)@@@@@@C8@@@A/,0@@@/,0@@@C/@@@./,0@@@HS
)@@G@@C/@@@[/,0@@@9?@@@DAP@@@@)[Y@N]] @@@@)[1@Q@)@@@@@)[)@V#@L]]G@C8@@MM'=@@@@HT
)@@G@@C@@@UX      D$FILE/K@K@7'=@@@@AQ@@@@)[<[#]]L]]P#@L]]T#@L]]WK0^@@@@C0@@@2HU
)@@G@@C8K@@['=@@@@C@@@UZ'=@@@@C@@@UY[@@@@@'=@@@@AR@@@@)[:[EK0^K)*K)(K^CE)K@@@@HV
)@@G@@/K@@]C@@@@@@@@@@@@'=@@@@'^@@[4/,0@@@/,0@@@[@K@[+%8@@@^AS@@@@)[3[A@<1)C #HW
)@@G@@1)C #1)C N1)C K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AT@@@@HX
)@@G@@)[;[Y@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HY
)@@G@@@@@@@@AU@@@@)]A@6@)@@@@@)[4@UES]CK@@/,0@@@C/@@@@@@@@@@@@@@@@@@@@@@@@@@@@HZ
)@@G@@@@@@@@@@@@@@@@@@@@AV@@@@)[7[##@KK)AK0^K^G[^C#=@@@@@@@@/K@@][/,0@@@C@@@U)IA
)@@G@@/K@@[_*@@@[=/,0@@@C8K@@JC8@@]GAW@@@@)[_[##@L][CK)^K0^K)IK)JK0^@@@@R#@@USIB
)@@G@@/,0@@@/,0@@@C@@@U</,0@@@C/@@@[/,0@@@9?@@U-AX@@@@)]B@F][*@@@@)]G@,@)@@@@@IC
)@@G@@)HJ@I@)@@@@@@@@@@@@@@@@@@@@@@@ -     READYEDITOR'=@@@@AY@@@@)HK@6@)@@@@@ID
)@@G@@)]C@N#@L@@@@@@@@@@/K@@]H(@@@HK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AZ@@@@IE
)@@G@@)]E[##@L@K0^ES]CK@CS]CKA)@@@@@C/@@@:/,0@@@C@@@]J/,0@@@C/@@@@ @@@HK/K@@]$IF
)@@G@@*@@@[+BA@@@@)]M[F]@D#@KK)AK)K@@@@@@@G8@@@[*@@@@HW8@@@A;G@@@=/,0@@@/,0@@@IG
)@@G@@C8K@@[C8@@HQ/,0@@@BB@@@@)]V@;#@L]@/()C-[Q-)C)C@@@@@@@@@@@@@@/K@@]+/K@@]/IH
)@@G@@*@@@HT/,0@@@R')@HR/,0@@@[?@@HRBC@@@@)HQ@Y@)*AG@TK@@@@@)]+@<#@L][*K0^@@@@II
)@@G@@[@@@HMC8@@[W'=@@@@R#@@U=@#H@HT@[@@@A_@@@@@BD@@@@)]&[#@ES]CK@CS]]^@2A@+@@IJ
)@@G@@@@@@@@/K@@]3(@@@HM/,0@@@C8K@@WC8@@T9/,0@@@C/@@@@/K@@#EBE@@@@)],[F#@L][D#IK
)@@G@@@KK)R^C[^G[@C8K@@#C8@@T9/,0@@@C/@@@[/,0@@@C8K@@^C@@@HM/,0@@@9?@@U>BF@@@@IL
)@@G@@)]7@:]@T]@.#@L][(]]*@@@@)T9@Q@)@@@@@TAL ER* * FA'=@@@@'=@@@@R#@@US/,0@@@IM
)@@G@@/,0@@@BG@@@@)T;@6@)@@@@@)]/@N]]0/S#@K@@@@@@@@@HT/,0@@@ ERRORSYNTAX *    IN
)@@G@@ATED *TERMINROR - BH@@@@)]"@'/S#@L#@L#@K()CC]^^@@@@@@@@@@@@@'=@@@@/K@@]CIO
)@@G@@/,/@@@R')@N(C^G@U[C4@@N%@@@@N(BI@@@@)U[@"@+&@DM]4([WO)\EKS G@M&@C@@@@@@@IP
)@@G@@@@[@#K@@[@#I@@@@@@@@@@@@@@@@@@@@@@@@@@@@]+BJ@@@@)UC@"@+&@DN@^()]O)1EKT CIQ
)@@G@@G2=A)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#A@@@@#A@@@@#ABK@@@@)UJ@Y@+=A(N@IR
)@@G@@^()]@@)# @+K0^K)U@@@@@@@C8@@[U'=@@@@R#@@U$/KF@@@@@@@#A@@@@# @@@@@@BL@@@@IS
)@@G@@)#D@<#@KK0^K@@@@@@)UM@&@)@@@@@R NON-AND FOD COMMINVALI/K@@]C[@@@HKC8@@@[IT
)@@G@@[@@@HMBM@@@@)UQ@Q@)@@@@@)#H@:]#T]#X@K0^K)8@@@@@@/,0@@@A])@HJ/K@@]C/,0@@@IU
)@@G@@/K@@@@ODE   PROC MBN@@@@)#M@N#@L@@@@)US@6@+)O])O@([^@@@@[@@@@@@USE@[^@[!IV
)@@G@@@@[@[N@@9@@U@[I@@A/K@@]C @@@HJBO@@@@)UY[Q@+&@DK@])[K@@@[A@UMTATUS:@@@@,SIW
)@@G@@@[]@T_@@MODED-ONLY@@@REAUPDATE@@T@@UK@[@[1BP@@@@0@@@]@+&@DK@])[K@@@[A@UMIX
)@@G@@TATUS:@@@@,S@[]@T_@@MODED-ONLY@@@REAUPDATE@@T@@UK@[@[1BQ@@@@@@@@@@)@@@@@IY
)@@G@@)@7@2ES]CK@]^@MA@)C@@@UW/,0@@@C/@@@@/,0@@@C/@@@@@@@@@@IFIED E SPECAL@@@@IZ
)@@G@@@@^@@ @@D@@9@[;@[#@AB@@@@@@@@@C@@@#O)@@@@@)@@@@@@@@@U*EDIT$       EDITR$JA
)@@G@@      ECHAR$      ECOL$       ESKIP$      ECLR$       ECOPY$      EPACK$JB
)@@G@@      ETIME$      EDAY1$      EDAY2$      EDAY3$      EOCTV$      EDECV$JC
)@@G@@      EFD1$       EDITX$      ECOLN$      EMSGR$      EFD2$       ELT$  JD
)@@G@@      LASTD$      LASTI$      EOCTF$      EDECF$      EDCFZ$      TDATE$JE
)@@G@@      PRINT$      RINF$       OPT$        SORTCORE    DEBUG$      SELT$ JF
)@@G@@      ERR$        CSF$        ACTII       FORK$       NAME$       MAINNAJG
)@@G@@ME    IALL$       PCT$        RDCTBL      BLDT$F      EXIT$       INPUT JH
)@@G@@      PARSE       LOCATE$     INSERT      PRINTL      PRINTV      LET   JI
)@@G@@      CALL$WK     EDIT$WK     INTRP       CHANGE$     EXITED      PROCMCJJ
)@@G@@      PERFORM     EDPKT       @@^@@@@@@@@@PRINT       @@^@@@@@@@@APBUFR JK
)@@G@@      @@^@@@@@@@@UAOPT        @@^@@@@@@@[NBOPT        @@^@@@@@@@[OCOPT  JL
)@@G@@      @@^@@@@@@@[PDOPT        @@^@@@@@@@[QEOPT        @@^@@@@@@@[RFOPT  JM
)@@G@@      @@^@@@@@@@[SGOPT        @@^@@@@@@@[THOPT        @@^@@@@@@@[UIOPT  JN
)@@G@@      @@^@@@@@@@[VJOPT        @@^@@@@@@@[WKOPT        @@^@@@@@@@[XLOPT  JO
)@@G@@      @@^@@@@@@@[YMOPT        @@^@@@@@@@[ZNOPT        @@^@@@@@@@[)OOPT  JP
)@@G@@      @@^@@@@@@@[-POPT        @@^@@@@@@@[+QOPT        @@^@@@@@@@[<ROPT  JQ
)@@G@@      @@^@@@@@@@[=SOPT        @@^@@@@@@@[>TOPT        @@^@@@@@@@[&UOPT  JR
)@@G@@      @@^@@@@@@@[$VOPT        @@^@@@@@@@[*WOPT        @@^@@@@@@@[(XOPT  JS
)@@G@@      @@^@@@@@@@[%YOPT        @@^@@@@@@@[:ZOPT        @@^@@@@@@@[?USENMEJT
)@@G@@      @@^@@@@@@@[1LAST$D      @@^@@@@@@@[3LAST$I      @@^@@@@@@@[5C1    JU
)@@G@@      @@^@@@@@@@[7C2          @@^@@@@@@@[8C3          @@^@@@@@@@[9C4    JV
)@@G@@      @@^@@@@@@@['C5          @@^@@@@@@@[;C6          @@^@@@@@@@[/C7    JW
)@@G@@      @@^@@@@@@@[.C8          @@^@@@@@@@["C9          @@^@@@@@@@[_C10   JX
)@@G@@      @@^@@@@@@@]@C11         @@^@@@@@@@][C12         @@^@@@@@@@]]C13   JY
)@@G@@      @@^@@@@@@@]#C14         @@^@@@@@@@]^C15         @@^@@@@@@@] C16   JZ
)@@G@@      @@^@@@@@@@]AC17         @@^@@@@@@@]BC18         @@^@@@@@@@]CTT1   KA
)@@G@@      @@^@@@@@@@]DTT2         @@^@@@@@@@]ETT3         @@^@@@@@@@]FLN    KB
)@@G@@      @@^@@@@@@@]JRDALN       @@^@@@@@@@]KRDA         @@^@@@@@@@]LAREANAKC
)@@G@@ME    @@^@@@@@@@HHPERFSW      @@^@@@@@@@HJFATAL       @@^@@@@@@@HKARTKEYKD
)@@G@@      @@^@@@@@@@HLSTATUS      @@^@@@@@@@HMAREACODE    @@^@@@@@@@HNPAGENUKE
)@@G@@M     @@^@@@@@@@HOSLOTNUM     @@^@@@@@@@HPINBUF       @@^@@@@@@@HTWRKPKTKF
)@@G@@      @@^@@@@@@@N(FATALSTP    @@[@@@@@@@]$@@@@@@)@@[]()C-@@-)CCK#CKF*K )KG
)@@G@@@@@@@@C/@@@,/,0@@@'=@@@@/,0@@@C8K@@XC8@@A_/,0@@@C/@@A:AA@@@@)@C[#]@D][X]KH
)@@G@@@)K)]K0^K)I@@@@@@@C/@@@)/,0@@@C@@@B^/,0@@@C/@@@(/,0@@@'=@@@@/,0@@@AB@@@@KI
)@@G@@)@K[#]@CK)]K)JK0^K)SK^G[@@@@@@9?@@^0'^@@KB'=@@@@R#@@B\/,0@@@/,0@@@C/@@@-KJ
)@@G@@/,0@@@AC@@@@)@S[##@L#@L#@L#@L][>@K0^K)V@@@'=@@@@C@@@B1/K@@^[/,0@@@C@@@B0KK
)@@G@@[@@@^4C@@@^_9*@@^2AD@@@@)@)[F#@L][1@[@E]^#%@@@@@/K@@@?'=@@@@C8@@@([@@@@:KL
)@@G@@@@@@@@@@@@@@/K@@@!'=@@@@C@@@B2AE@@@@)@([EE@-@/-@"@-)C@@@@@@@R@K@B3;*@@@DKM
)@@G@@N8K@@UC8K@@['=@@@@'=@@@@@@@@@@8@]@@<BOMB!!AF@@@@)@2@;@K@[@@@)@@@Q@)@@@@@KN
)@@G@@@@@@@@@@@@@@/K@@@2O8K@@[[@L@@@0@@@@G;*@@@[/K@@@98KK@@4AG@@@@)@][Y@)@@@@@KO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AH@@@@KP
)@@G@@)@H[Y@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KQ
)@@G@@@@@@@@AI@@@@)@S@Y@)@@@@@)@9@%K))K^@@@@@@@@C8@@@]'^@@[]/K@@@./,0@@@C8@@@[KR
)@@G@@@@@@@@@@@@@@@@@@@@AJ@@@@)@"[F]][@K^@ES]CK@]^@K@@/,0@@@C/@@@@/,0@@@C/@@A:KS
)@@G@@@@@@@@/K@@[0'^@@[]/K@@[0/,0@@@AK@@@@)[B[F#@L]@8K)^^G[^G[@()CG8@@@VT8@@@]KT
)@@G@@[@@@@ZG@@@@ZC8@@@[/,0@@@C/@@@[/,0@@@C@@@B4AL@@@@)[K[EK)M^C@=C^4[][H][C@@KU
)@@G@@C/@@@*/,0@@@9?@@@]/K@@[V(4@@@@/,0@@@C/@@@,/,0@@@9?G@@@AM@@@@)[T[#]@D@K)NKV
)@@G@@K[]@D][H@@@@@@@@@@/K@@[=(0@@@@/,0@@@C/@@@*/K@@[Z()@@@@/K@@[Z/,0@@@AN@@@@KW
)@@G@@)[-[#][H][D@K)NK)-K)NK)M@@@@@@C/@@@[/,0@@@9?@@@D'=@@@@(4@@@[/K@@[*/,0@@@KX
)@@G@@9?@@@^AO@@@@)[(@;]@KK)]K)JES]CKLC@@@@@@@@@@@@@@@/K@K[]'=@@@@C8@@A1/,0@@@KY
)@@G@@/,0@@@C/@@@./,0@@@AP@@@@)@V@,@)@@@@@)[0@V@ES]CS]@@@@@@C@K@B5C8@@A>'^@@KMKZ
)@@G@@_____"EMA   NEWSCHEMA   OLDSCHAQ@@@@)[3@+^G[^CA@)@)@Q@)1)#E@)[7@E()C@@@@LA
)@@G@@R')@@)@^C@ /@@@@@@'=@@@@R#@@B6M#W)@@N8K@@IAR@@@@)[8[#]]H@^@()C-[C)CS]@@@LB
)@@G@@@@@@@@C@@@ @'^@@KB/,0@@@Q;@@ ./@@@[1;*@@@M'^@@L=/,0@@@AS@@@@)]@[F#@L#@KKLC
)@@G@@^G[[]]O@@@@@!C[@@@C8@@@[[@@@@@CC[@@@P@K@B8/K@@^ 2@[)@@N@K@B<R@K@B7AT@@@@LD
)@@G@@)]D[F@K@K^[@K0^K@@@@@@@@/K@@]=0@@@@Z/K@@^F'^@@#)/K@@^F:C[@@@C8@@@]'^@@].LE
)@@G@@/K@@^FAU@@@@)]M[##@KK]&@+A@+A@)-)C@@@@@@@@A])@@+O')@@ R])@@+A])@@+R')@ @LF
)@@G@@/K@@]-:8@@@]C@@@A&AV@@@@)]U[F#@KK^CD-#@L@K0^K)S@'=@@@@R#@@B'/K@@]R[@@@A&LG
)@@G@@C8@@@[/,0@@@/K@@[0:@E@@@C@@@B9AW@@@@)]<@<]]X#@L][-]]W@)@+@&@)@@@@@LE SPELH
)@@G@@EMA FINO SCH@@@@@@'=@@@@'=@@@@R#@@B;'=@@@@AX@@@@)@&@I@)@@@@@)]$@3#@L#@L#LI
)@@G@@@L#@L#@L@@@@/K@@]=0@@@@Z[@@@B%:@@@ @C@@@B/ @@@B%CIFIEDAY@@@@)]![F#@KK]&@LJ
)@@G@@+A@+^ ]A@+@@C8@@@]/K@@]-(@@@@;/,0@@@(@@@@;R')@B./K@@]-:8@@@]C@@@A*AZ@@@@LK
)@@G@@)]6[F#@K()CCKO+A@+@CS]@@C@@@A&@@@@@@/K@@[0[@@@A*C8@@@[/,0@@@&')@@ R')@  LL
)@@G@@[@@@A&BA@@@@)]_[MK^G[@K0^@()C@O])@@VR')@@$ @@@@VM[])@@R@)@B"&9@@@[N8K@@MLM
)@@G@@R[@@@;/K@K].%8@@@[BB@@@@)#D[F]])^[#@L@^[@@@@@@@@/K@@#B/K@@#M:;0@@ /K@@#BLN
)@@G@@*@@@@Z/K@@#M:;0@@DG;0@@[/,0@@@BC@@@@)#M[]()C-)C-[KO0^K0^K)*ES]CS]@*@@@[^LO
)@@G@@R')@C[/,0@@@*C@@[]R')@C@/,0@@@*C@@[[R')@B_BD@@@@)#U@3]]-@^G[^CE=@@)@$@Q@LP
)@@G@@)@@@@@ C@@@@[D@@@@/K@K]./,0@@@[@@@A&C8@@@]'^@@#4/,0@@@BE@@@@)@(@"@)@@@@@LQ
)@@G@@)#)@MK0^@@@@C@@@A*@@@@@@HC@@@@GC@@@@FC@@@@DD@@@@CC@@@@BC@@@@AC@@@@BF@@@@LR
)@@G@@)#+[EK]&@+^ ]A@+A@)-)C@@[@^@@DC@@@@.[@^@@]C@@@@6R @@@;/,0@@@R')@C]/K@K#)LS
)@@G@@%8@@@[BG@@@@)#:[]()C-[KO0^K0^K)*^G[^@@@@@@'^@@#4[@@@A*C8@@@]/,0@@@*@@@@.LT
)@@G@@R')@C^/,0@@@R')@C#BH@@@@)#3[#@^G[^G[^CE4G[^G[^CE0@@@@@'=@@@@[@@@@2C@@@@3LU
)@@G@@'=@@@@[@@@@0C@@@@1@@@@@@/K@K#)BI@@@@)#;@2[#@KK@@)@0@Q@<1)C #1)C @@@@@@@@LV
)@@G@@@@@@@@/K@K#4M@=)@@R@)@B"R9@@@G @@@@GN8K@@MBJ@@@@)@2[I@<1)C N1)C K@@@@@@@LW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BK@@@@)@;[Y@)@@@@@LX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BL@@@@LY
)@@G@@)^[[#][-]]X]]1@K0^K)SK^G[@@@@@C@@@CA/K@@[1'=@@@@R#@@C /K@@[1'^@@@@'=@@@@LZ
)@@G@@'=@@@@BM@@@@)^D[##@L@[#@L#@L#@L#@K@@@@@@@@[@@@^_C@@@^49*@@^09?@@^2/KG@@@MA
)@@G@@C^[@@@/K@@[_[@@@ @BN@@@@)^L[##@L#@L@K)!K),K0^K)SK)\@@@'=@@@@'=@@@@R#@@CCMB
)@@G@@'=@@@@C@@@@@'^@@KM[@@@^RC@@@CBBO@@@@)^T[E@()C-[K-)C-)CC@@@@@/K@@]-(C[@@#MC
)@@G@@*C@@@;R^K@@;/,0@@@R')@B.G *   DBREOR* END BP@@@@)^+[]()C-[KO0^K)*ES]CKO MD
)@@G@@G[^CE@/,0@@@R')@CF/,0@@@R')@CE/,0@@@R')@CD/,0@@@R')@B,BQ@@@@)^%[#]#[]# @ME
)@@G@@K]&@+^ ]A@)@@@@@@@(C[@@[R^K@@;/,0@@@R')@B./K@@[0'^@@#4/,0@@@/,0@@@BR@@@@MF
)@@G@@)^2[F@^@K]&@+^ [N@L]])@@/,0@@@R')@CD/,0@@@R')@CG/K@@^/*@[@@C/K@@]-(C[@@JMG
)@@G@@/K@@]-BS@@@@)^;[#@ES]CKO G[^CE^G[^G[^G[@@@C@@@@.[@@@@4C@@@@//,0@@@R')@CIMH
)@@G@@/,0@@@R')@CH/K@@ ^BT@@@@) #[##@K()C-[KO0^K)*ES]CKOCKS@/,0@@@/,0@@@R')@CKMI
)@@G@@/,0@@@R')@CJ/,0@@@R')@B![@@@@6BU@@@@) F[#]#D@ES]CKOCS]]@O0^@@@@@@@R')@CDMJ
)@@G@@/K@@ T*@[@@DR^K@@;/,0@@@R')@B./K@@[0/,0@@@BV@@@@) N[#]])()C-[KO0^K)*K]&@MK
)@@G@@+^ @@@/,0@@@R')@CI/K@@ >/,0@@@R')@CF/,0@@@R')@CE/,0@@@BW@@@@) V[]()C-[KOML
)@@G@@0^K)*K0^K0^K0^K0^@[@@@@8C@@@@"[@@@@6C@@@@./,0@@@R')@CM/,0@@@R')@CLBX@@@@MM
)@@G@@) <[##@L#@K()C-[K-[)-)C@@@@@@@(OD@@@ WD@@[RAK@@8/,0@@@/,0@@@R')@CN[@@@@9MN
)@@G@@C@@@@_BY@@@@) :@:@^[#@L][)@@@@)[A@Y@)@@@@@ESTORE(FOR RREADY.'=@@@@R#@@COMO
)@@G@@/K@@ (OQT@@@/K@@ ,BZ@@@@)[D@&@)#A@G*@@@@@@) 0@U()C-[A)@@@@@@'^@@L=/,0@@@MP
)@@G@@R')@[F@AG@ /@@@@@@MMAND) SUBCOCA@@@@) 3[]K]&@+^^+A@+A@+@-)C@@@@@@@C@@@  MQ
)@@G@@/K@@AG:@@@CPC@@@ @/,0@@@Q;@@ ./@@@ ,;*@@@MCB@@@@) ;[F#@L@K0^K)SK^@K0^K@@MR
)@@G@@'^@@LPC@@@ ER]K@@['^@@E[/K@@ ,'=@@@@R#@@CR/K@@A@:@@@CQCC@@@@)A^[#@^@K^G[MS
)@@G@@^CA^@@@@@@@@@@@@@@/K@@ ,'=@@@@R#@@CS/K@@ ,[W(@@[/K@@AD!8)[@@/@)@ADCD@@@@MT
)@@G@@)[H@&@)@@@@@)AG@<]#H@ES]CKO@@@/,0@@@R')@B./K@@[0/,0@@@E.    RD CODL RECOMU
)@@G@@ILLEGACE@@@@)AK[##@KK]&@+^ [N@L]])()C@@@@@R')@CF/,0@@@R')@CE/,0@@@R')@CDMV
)@@G@@/K@@AU*@[@@DR^K@@;CF@@@@)AS[#]]-@ES]CKO G[^CE]&@+^ @@@/,0@@@R')@CM/,0@@@MW
)@@G@@R')@CL/,0@@@R')@CI/K@@A&/,0@@@CG@@@@)A)[##@L#@L#@L#@L#@L#@K()C-[K@/,0@@@MX
)@@G@@R')@CN[@@@@9C@@@@_[@@@@8C@@@@"[@@@@6C@@@@.CH@@@@)A*[##@K([*-[%-)C-)CCS]CMY
)@@G@@S]@@@@ @@@#G[^K@#EG8K@@[[@@@@0C@K@@0'=@@@@G8@@@@C@@@@0CI@@@@)A0[F#@K^G[@MZ
)@@G@@([*CS]CKG@@@'=@@@@R#@@CTM@-)@@N8K@@@&8)@@[R@)@#ER8K@@J @@@@J C@@#ECJ@@@@NA
)@@G@@)[L@Q@)1)#E@)A9@2()C-[A)]@O0^@Q;@@ ./@@@A7;*@@@M'^@@L=/,0@@@R')@[L@BH@ /NB
)@@G@@@@@@@@CK@@@@)A_[#]]L#@L#@L@K0^K0^K^G[@@@@@:@@@CV/K@@C[:@@@CUC@@@  /K@@BINC
)@@G@@:@@@CPC@@@ @/,0@@@CL@@@@)BB[#@K0^K^G[^CA^[#@K([*@@@@@@C8@@@@ @@@#F/K@@A7ND
)@@G@@'=@@@@R#@@CX/K@@C?:@@@CW/K@@CECM@@@@)BJ[F#@L#@L@K0^K^G[@@@@@T8@@@]C^[@@[NE
)@@G@@&8K@@[R^K@#E8K0@BON@0@#G/K@@B,(@@@#G[@@@#WCN@@@@)BS[E^G[[#@L#@KK0^K@@@@@NF
)@@G@@8K0@B+[@K@#WH@K@@GC@K@#W[CK@#EG@K@@GCCK@#EG8@@@]GC[@@[CO@@@@)B-[N@@]=A2ANG
)@@G@@@)@@@@G8@@@[H@@@@#&;@@@[C@@@@0O80@@@R@)@@[O@K@@GR@0@@[[O[@@@/K@@B,CP@@@@NH
)@@G@@)B:[]^[#@L#@L#@L]]!]#@@@@@@@@@/,0@@@'=@@@@[@@@@0H@@@#WC@@@@0/K@@BQM@<)@@NI
)@@G@@N@K@@GCQ@@@@)B3[#]#X#@L#@L#@KES]CKO G[@@@@R')@CY/,0@@@R')@C#[@[@@JR^K@@;NJ
)@@G@@[@@@[#C@@@@7/,0@@@CR@@@@)B;[F]]-@K^G[^[@K^G[^@@@'^@@LPC@@@ E'^@@E[/K@@^CNK
)@@G@@/K@@[1*@@@#F'^@@#4'^@@KM/,0@@@CS@@@@)C^[F@^[@^[@K0^K0^@@@@@@%@@@CQC@@@ JNL
)@@G@@'^@@E[/K@@A7[S-@@@'^@@F]/K@@FV!8)@[>/@)@FVCT@@@@)CH[F@K0^K0^K^@K0^K0^K@@NM
)@@G@@/K@@FX:@@@B99?@@ OC#@@@T'^@@E&/K@@FX:@@@B99?@@ E/K@@FXCU@@@@)CQ[V@^[@@@@NN
)@@G@@(@]@@@O8)@@]O@)@@GNCL@@[T8@@@]C^[@@[R@)@@['^@@F]/K@@F<*4D@@C'^@@E&CV@@@@NO
)@@G@@)C-[N@^@K@@@@@@@@@[C[@@[GC[@@[C8@@@[[RM@@@[V]@@@/K@@C)O8)@@[/K@@FZ:V]@@@NP
)@@G@@/K@@C&CW@@@@)C:[F@K[@ES]CK@]A@)@@@@@9?D)@@R]K@CZN80@@R/,0@@@C/@@A:/K@@FNNQ
)@@G@@*@@@@V'^@@E[/K@@A7CX@@@@)C4[#][D@K)JK0^K0^@()C@@@@@@@@C/@@A:M@-)@@N8K@@INR
)@@G@@R@)@C-R@K@C)/,0@@@8K0@C3/,0@@@CY@@@@)C/[#]@@K0^K0^K0^K)QK0^ES]@@@@:8@@ JNS
)@@G@@C^@@A?/,0@@@C8@@ @[4@@ J[0@@A:C8@@@(/,0@@@CZ@@@@)D^[F@K0^K^G[^G[[]@GK0^@NT
)@@G@@[0@@A:C8@@@,/,0@@@C/@@@@9*@@A19?@@C+'^@@E&9?@@A1/K@@FPDA@@@@)DH[##@L][ #NU
)@@G@@@K()C)CS]C@@@@@@@@C#@@@I'^@@LPC@@@A1/K@@FP:8@@ JC^@@A?/,0@@@[0@@ JDB@@@@NV
)@@G@@)DP[##@L#@KK)#^G[^G[^C^K@@@@@@/,0@@@[?@@ J[0@@A:C8@@@)/,0@@@C/@@@@9*@@A1NW
)@@G@@9?@@C+DC@@@@)DX[F#@K()C)CS]C@)]@@@@@'^@@F]C]0@@I/K@@FR?@)@@S'^@@LPC@@@A1NX
)@@G@@/K@@FP:8@@ JC^@@A?DD@@@@)D&[M[@^@K[@@@@@@@8K0@D?O8)@@]/K@@FT:RM@@@8K0@D?NY
)@@G@@N^1@@[/K@@D0(^[@@[O8)@@]R@)@@[DE@@@@)D0[UK@@@@@@[#M@@@M@4)@@NCL@@[O80@@]NZ
)@@G@@R[@@@#&80__"P80@@[OC1@@[R@0@@]/K@@D'(C[@@[DF@@@@)D;[M@^@K0^^G[@@@@9/@@ @OA
)@@G@@9?[@@]R^K@@8@@@@@@/K@@A7[^[@@[G^[@@[C8@@@[[A2@@[[F]@@[DG@@@@)E [N@^G[^@KOB
)@@G@@0^K@K@/K@KE[C\1@@@CZ-@@@/K@@EJ%@@@ ^C@[@@A/K@@EJ9/@@ ]9?[@@^/K@@EJDH@@@@OC
)@@G@@)EJ[EK[@ES]CK@CS]CKD@@@@C/@@@[/,0@@@9?@@C=/,0@@@C/@@A:/K@@E#OOL@@@/K@@ENOD
)@@G@@(O[@@@DI@@@@)ES[F]@KK0^K0^K)Q^C[^G[@C8K@@<C8@@#^/,0@@@C/@@@[/,0@@@C8@@ @OE
)@@G@@[0@@A:C8@@@ /,0@@@DJ@@@@)E-[F]@T]@.#@L][-@^G[[@@/K@@E?9/D@@[RAK@@6@@@@@@OF
)@@G@@/K@@^H'=@@@@R#@@B\/,0@@@/,0@@@DK@@@@)E%[EK[@^[#@K()C-@@@@@@@/,0@@@C/@@A:OG
)@@G@@9*@@]//K@@E*OQT@@@/K@@E0(OD@@@/K@KE&CZT@@@DL@@@@)E3[##@L][CK)^K0^K)M^C[@OH
)@@G@@@@@@@@/,0@@@C/@@@[/,0@@@9?@@]//,0@@@C/@@@[/,0@@@9?@@C&DM@@@@)E;[##@KK)AKOI
)@@G@@)JK0^K)SK@@@@@@@@@@@@@@@/K@@A7'=@@@@R#@@B\/,0@@@/,0@@@C8K@@-C8@@]"DN@@@@OJ
)@@G@@)F#[##@L#@L@K0^EKV]@O)6@@@@@@@P8K@@@/K@@FG2Z-)@@&8K@@@N@K@#G/K@@FG(@@@#GOK
)@@G@@R^K@#EDO@@@@)FF[F@^G[^G[@^[#@K@@@@@@C@@@#&/K@KF] @[@@[[Z-@@@ @[@@@[@@@#GOL
)@@G@@G@@@#GC8@@@[/K@KF]DP@@@@)FO[F@K0^K^G[^[#@L@K0^K@/K@@F-C@@@^K/K@@F-C@@@#;OM
)@@G@@/K@@F-C@@@#5/K@@F-C@@@#\/K@@F-DQ@@@@)FX[##@L@K0^K^CA^@()C-@@@@@@@@/,0@@@ON
)@@G@@C/@@A:/K@@A7'=@@@@/K@@F-C@@@^E/K@@F-C@@@^#DR@@@@)F>[EK)MK0^^C[=C#4G[^[@@OO
)@@G@@'^@@H4/K@@F-C@@@B\/,0@@@/,0@@@C8K@@ZC8@@^L/,0@@@9?D@@[DS@@@@)F,@;]#[]#-@OP
)@@G@@K^[#@L][)@@@@@@@@@@@@@@@'=@@@@R#@@C*'^@@H4/K@@[0'^@@H+/,0@@@/,0@@@DT@@@@OQ
)@@G@@)[N@Q@)1)#E@)F5@2()C-[A)]@O0^@Q;@@ ./@@@F3;*@@@M'^@@L=/,0@@@R')@[N@GB@ /OR
)@@G@@@@@@@@DU@@@@)F;[#]]L#@L#@L@K0^K0^K^G[@@@@@:@@@CQ/K@@G3:@@@C%C@@@  /K@@GCOS
)@@G@@:@@@C(C@@@ @/,0@@@DV@@@@)G#[#@K0^K)SK^G[^CG^CIO@@@@@@@'^@@H+/,0@@@/,0@@@OT
)@@G@@ @@@[T/K@@F3'=@@@@R#@@C:/K@@GVDW@@@@)GF[F#@L@K0^K^@K^G[^CA@@'=@@@@R#@@C?OU
)@@G@@'^@@KM@@@@@@/K@@^H/K@@[0*@@@[T'^@@GK*@@@]MDX@@@@)GO@;@K0^K0^^CDOCI=@@@@@OV
)@@G@@@@@@@@@@@@@@/K@KGK/,0@@@[@@@@@C8@@@[[@@@^RC@@@C!'^@@KBDY@@@@)[P[Y@)@@@@@OW
)@@G@@READY.D.    COMMANAD SUBD UNLOINVALI@@@@@[E SORTEY FILSING KPROCESDZ@@@@OX
)@@G@@)[)@&@)@@@@@)GV@:@K0^K@@C8K@@D @@@@G'^@@LPC@@@ E'^@@E[MAND) SUBCOMNLOAD OY
)@@G@@(FOR UEA@@@@)G)[EK^G[^[#@L#@K^G[@@@@CC@@[ [O-@@@[Z-@@@OCK@[ R^K@[ '^@@G\OZ
)@@G@@(@@@[ /K@@G?,@@@@IEB@@@@)G([EK0^K^G[^CA^@ES]CS]@A@K@[ R8K@[=@@@@@@/K@@F3PA
)@@G@@'=@@@@R#@@C,/K@@F3[C@@[ G8@@@[EC@@@@)G2@F@@@@@@@)]G@,@)@@@@@)G3@F@@@@@@@PB
)@@G@@'^@@E[ 9    1 THRUST BE ODE MUFILE C/K@KG\ED@@@@)G4[MK^G[[#@K()C@@C@W@@@PC
)@@G@@G@@@@HT@K@[ C8K@@ C8@@ E @@@]&N9K@@#A@K@]L'^@@IGC@@@@UEE@@@@)G"[F#@L@K0^PD
)@@G@@K^@K^G[@@@@@C8@@@KA@K@]L'^@@IGC@@@@U'^@@HQ'^@@IP[@@@]&/K@@HE:@K@B9EF@@@@PE
)@@G@@)HB[E^[#@L@K0^K^G[^CA@@@'=@@@@R#@@C\/K@@F3*@@@]&8LK@G9A]0@]M'^@@JY[?L@@@PF
)@@G@@)?[@@@EG@@@@)HK[#@K0^K)SK0^K)SK)-^G[@@@@@@R@K@]L@@@@@@'=@@@@'=@@@@R#@@C1PG
)@@G@@'=@@@@R#@@C0/K@@F3EH@@@@)HS[M^@@K)-^@@@@@@/K@KHQ[V1@@['=@@@@1@[@@[O*L@@@PH
)@@G@@[?L@@@)?[@@@/^K@HL+?[@@@C8@@@)EI@@@@)]L[Y@)@@@@@ONE RET     T LEASTHAT API
)@@G@@AUSED MAND CSUBCOM LAST ERROR:@@@@@@@@@@@@EJ@@@@)]W[Y@)@@@@@@@@@@@SING  PJ
)@@G@@ME MISSET NAE SET HAN ONMORE TD VIA NLOADEO BE UCORD TEK@@@@)H+[EK0^K0^^PK
)@@G@@G[[#@KES]@@@R')@C#[@[@@LC@@@[ [@[@@#C@@@@7[@[@@[C@@@@5R^K@@;@@@@@@EL@@@@PL
)@@G@@)H:[#]])()C-[KO0^K)*ES]CKOC@@@'^@@#4/,0@@@R')@C4/,0@@@R')@C3/,0@@@R')@C2PM
)@@G@@/,0@@@EM@@@@)H3[F@]&@+^ ]A@+@-)CC@@@/K@@]-(@[@@]R^K@@;/K@@]-(@@@@;/,0@@@PN
)@@G@@R')@B.@@@@@@/K@KH+EN@@@@)H/[EES]]^ @C]@-)C@@@@@@R^K@@;/K@@H./K@@I^:;0@@ PO
)@@G@@G;0@@[/,0@@@O])@@VR')@]$ @@@@VEO@@@@)I @'K]&@+^ [N@L]]-@@@@@@@@@@@@@@@@@PP
)@@G@@/K@KH4/,0@@@R')@CH/,0@@@R')@C5/K@KH4(@[@@KEP@@@@)]$@,@)@@@@@)IG@+K0^^@@@PQ
)@@G@@/K@@IL%W[@@@R^K@@4@@@@@@BK@@@@AK@@@@ K@@@@#K@@@@[K@@@@EQ@@@@)IK[N@^CCL@[PR
)@@G@@#@K@@@9/[@@[9?]@@@R^K@@'R@)@@G@@@@@@/K@@IIOOL@@@'=@@@@(O[@@@/K@KIGER@@@@PS
)@@G@@)IU[N@[@[@@@@@@@@@NSL@@@O8K@@ACZ1@@@/K@@JA%@[@@ C@]@@^/K@@JA9/[@@#9?]@@]PT
)@@G@@/K@@JAES@@@@)I=[N@@K^@K@()C@@@C/@@A:R[K@@]8KK@I$O8K@@[/K@KIP/K@@I%%O[@@[PU
)@@G@@CR-@@@C@@@@U8KK@I>ET@@@@)I,[#]@[#@L][D#@L][D#@L]@9#@K@C8@@]?/,0@@@C@@@ ^PV
)@@G@@/,0@@@9?@@ ]/,0@@@9?@@ @/,0@@@EU@@@@)I6[EK)A^C^-][CK)I@@@@@@C/@@@[/,0@@@PW
)@@G@@C@ @@^/,0@@@9? @@]/,0@@@9? @@@/,0@@@C8K@@TEV@@@@)I_@;]@L#@L]@9]@.#@L][-@PX
)@@G@@@@@@@@@@@@@@/K@@F3'=@@@@R#@@B\/,0@@@/,0@@@C@@@C6/,0@@@EW@@@@)]?@,@)@@@@@PY
)@@G@@)JA@+K[@@@@@/K@@ISOOL@@@/K@@JE(O[@@@      E WITHSOCIATNOT AS DOES EX@@@@PZ
)@@G@@)JE[EES]CK@CS]CKB]^@)-@=/,0@@@9? @@@/,0@@@C/@@@[/,0@@@C@@@C7/,0@@@C/@@A:QA
)@@G@@R[K@@]EY@@@@)JN[EK)M^C#=G[[]@T]@.#@KR#@@B\/,0@@@/,0@@@C8K@@?C8@@]1/,0@@@QB
)@@G@@C@ @@^/,0@@@9? @@]EZ@@@@)JW@N][-@@@@)]1@"@)@@@@@IZATIOEORGANTHIS RNG IN QC
)@@G@@CIPATIT PATI IS NO/K@@F3'=@@@@FA@@@@)]8@I@)@@@@@)JY[]@[@K@@@/K@@J:8KK@J&QD
)@@G@@O8)@@[N*M@@@R@)@@[ @@@@G @@@@#@@@@@@N.    FB@@@@)J&[M@K[@^[@@@@@@@/K@@J6QE
)@@G@@8KK@J0N0M@@@/K@@J61@]@@@8KK@J&O8)@@[R@0@@]:V2@@@G4]@@@FC@@@@)J0[U@^@K@K@QF
)@@G@@/C@@J7G8K@@[H@@@@H/@@@J/C8K@@[8KK@J1O8)@@[R@0@@]:V2@@@G4]@@@O8)@@]FD@@@@QG
)@@G@@)J;[F]]^K)-[@K0^^G[@@@@@%@@@C8 @@@@HC@@@  /K@KJY[4N@@@(4#@@@'=@@@@(@@@@#QH
)@@G@@'=@@@@FE@@@@)K^[]K0^K[][X#@L#@L]#?@@@@@@@@'=@@@@C@@@C9[@@@^_'=@@@@@@@@@@QI
)@@G@@/K@@[1[@K@^QC8K@@[FF@@@@)KG[##@L#@L#@L#@L#@L@^CDK@@@@@ @@@@@@@@@@@/K@KKBQJ
)@@G@@[@@@^RC@@@ @9*@@^0C@K@^)C@@@^,FG@@@@)KO[##@L@ES]CK@]^@+A@)@@@@@@@@C8K@@FQK
)@@G@@C8@@^5/,0@@@C/@@@A/,0@@@C/@@A:/K@KKM(@@@^QFH@@@@)KW[#]@T#@KK)AK)JK0^K)SEQL
)@@G@@S]@@@@C/@@A:'=@@@@R#@@C'/,0@@@/,0@@@C8K@@AC8@@^R/,0@@@FI@@@@)K=[#]@@K)^KQM
)@@G@@0^^C[=C 4G[@@@@@@@H@@@^_'=@@@@/,0@@@C8K@@FC8@@^7/,0@@@C/@@@A/,0@@@FJ@@@@QN
)@@G@@)K?[F]@)K)^^C@=G[^C]^G[@C8K@@^C8@@^9/,0@@@C@@@^_/,0@@@C/@@@(/,0@@@C/@@@[QO
)@@G@@/,0@@@FK@@@@)K5[#]@T][X]@)K)]K)JK0^K)S@@@@'=@@@@R#@@B\/,0@@@/,0@@@C/@@@)QP
)@@G@@/,0@@@'=@@@@/,0@@@FL@@@@)K.[##@L]#?()C-@@CK]CS]@@@@@@@C8K@@BC8@@^'/,0@@@QQ
)@@G@@C/@@@A/,0@@@C/@@A:'=@@@@C@@@C9FM@@@@)L [F]@T#@L#@K^C#OG[[]@S/,0@@@C8K@@LQR
)@@G@@C8@@^//,0@@@W8@@@ ;G@@@=H@@@^0C@@@^,/,0@@@FN@@@@)LI[##@L#@L]@5]@.#@L][-@QS
)@@G@@@@@@@@@@@@@@/K@KKM'=@@@@R#@@B\/,0@@@/,0@@@H@@@^1C@@@^)FO@@@@)LQ[U@[@^@@@QT
)@@G@@T8)@@EH8@@@0/K@@L+:8@@@@/K@@L+:8@@@ ;?@@@A @@@@GN;0@@  @@@@I;G@@@=FP@@@@QU
)@@G@@)L-[EK^@K0^ES]CS]CS]@@@@;G@@@=C@@@ /[^@@]'C8@@ .[@@@];@@@@@@/K@KLP8N0@LTQV
)@@G@@G@)@@GFQ@@@@)L%[E[#@L#@L]#!#@KK@@@@@/K@@L6%8@@@^C0@@ S'=@@@@C@@@C;[^@@];QW
)@@G@@G8@@@[*@@@@HW8@@@AFR@@@@)L3[##@L#@L@K0^K^G[^G[^@@@@@@@/@@@MBC@@@]9[@@@]9QX
)@@G@@/@@@MBC^@@];/@K@MB+@@@];C@@@C/FS@@@@)L;[F@@K0^K0^K0^K)SK0^@@C^@@]''=@@@@QY
)@@G@@C@@@]'[@K@]9[?@@]'C8@@@G!8@@@GL8@@@G/G@@MBFT@@@@)M^@%K0^K^G[^@@@@@)]9@Y@QZ
)@@G@@)*@@@@@@@@@@@[@@ .@@@@@@/K@KL=C@@@];/K@@L9[^@@]'G8@@@GFU@@@@)]"[Y@)@@@@@RA
)@@G@@ORD COHE RECD IN TECIFIENOT SPAND   A COMMHE ARED IN TECIFIENOT SPFV@@@@RB
)@@G@@)#D[Y@)@@@@@D RELOINVALIMMAND) SUBCORELOAD (FOR READY.@@@@@@@@@@@[@@@@@@RC
)@@G@@MMAND FW@@@@)#O[Y@)@@@@@G:PAGEWARNIN@@@@@@ND.   BCOMMAORE SUD RESTINVALIRD
)@@G@@D.    COMMANAD SUBFX@@@@)#Z[Y@)@@*@@UBCOMMANGE SPAGE R@[D@#XGNOREDRD - IRE
)@@G@@C RECO A CALED FOR ENTER RANGEFY@@@@)#%[Y@)@E@@@ORED   - IGNNVALIDANGE IRF
)@@G@@PAGE R@[C@#$ED     IGNORRROR -RMAT EAND FOFZ@@@@)#5[Q@+)@[K@@@@@@@AND FORG
)@@G@@UBCOMMFROM S@[ @#6GNOREDGE - IGE RANATE PADUPLIC@[ @#0GA@@@@)#_[Y@)@*@@@RH
)@@G@@ORED   - IGNOMMANDM SUBCTE FRODULICA@[B@#/ED     IGNORRROR -RMAT EGB@@@@RI
)@@G@@)^E[Q@+)@[K@@@@@@@HED ONE PATC CAN B@[ @^FD     IGNORELUE - D % VAINVALIRJ
)@@G@@@[A@^^GC@@@@)^O@&@)@@@@@)^0@Q@)@@@@@)^5@I@)@@@@@* COMM@@@@@@@@@@@@      RK
)@@G@@@@@@@@GNOREDLY - IGD@@@@)^6[Q@)@@@@@@@@@@@@@@@@@UNT=  I/O CO MS,        RL
)@@G@@* CPU= TO   SED=  * ELAPAND=  GE@@@@)A>[Y@)@])@@@@@@@@@@@@@@[[@@@@@@@@@@RM
)@@G@@@&I@A1#K@@@@[K@@@@@@@@@@@@@@@@@@@@@@      GF@@@@)A0@I@)@@@@@)A_[A@)@@@@@RN
)@@G@@REORG READY.6,0   ZER:  ORGANI.B. RELABS D-BELL @@@@@@GG@@@@)BB[I@)@ES@-RO
)@@G@@N@^@@@@@@@@@AREA  @@[@]KRECORD@@@@K[TIME  RROR  ENCE ED SEQUCOMMANGH@@@@RP
)@@G@@)BK[I@+&@CO0[]&@CO0[]&@C@@^@ HRESTOR@@#@F2UNLOAD@@#@F!SCAN  @@]@]$AREAP RQ
)@@G@@@@]@]$GI@@@@)BT[I@)()] G@K()] G@K@@@END   @@@@^#DEBUG @@B@^,PATCH @@A@AIRR
)@@G@@RELOAD@@ @^WDELETEGJ@@@@)B+[Q@+&@C@@@@@@@@]C@@@@@@@@@@@@@@@@OMMANDTION CRS
)@@G@@GANIZAL REORILLEGA@@@@@G@[<@^HGK@@@@)B?[I@)])O]=#LN@^*@@@@@@@@@USE@@[@@[RT
)@@G@@DV@@@<@@[@@@@@9@ @@[I@A1^K@@@@]K@@@@^C@@@@GL@@@@)B5[Q@+)O])[KE@ @@@@[@@4RU
)@@G@@CK@@@@AREAP @[^@@<@[ @BA      @@[@@[@@]@BF@][@B @@[@ .GM@@@@)B_[Q@)@])[NRV
)@@G@@@^@@@@@[#@^T %END%END   @[ @B=EC@@@@CC@@@@#C@@@@LC@@@@JC@@@@IC@@@@GN@@@@RW
)@@G@@)CD[Y@)@@@@@MK@@@@GK@@@@FK@@@@^K@@@@KK@@@@EK@@@@DK@@@@[K@@@@AK@@@@ K@@@@RX
)@@G@@#K@@@@GO@@@@)CO[Q@+)[KE[K@E@@@@[ @#MIN    FROM  %     @[ @#H@[^@[H@[ @#RRY
)@@G@@TO    ENDR  @[ @[AGP@@@@)CY[Q@)* @*@@@@@@@-NAME:@@AREA-NAME:RECORD      RZ
)@@G@@      @@[@ @@@[@A1@@]@ EKC@@@@GQ@@@@)C*[Q@+)[KE@O])O])@[C@]V@[C@]N@[#@]<SA
)@@G@@@[ @]GSORT  @#^@[P@[ @[UVIA   ENDU  @[ @[ZGR@@@@)C2[Q@)@@* @*@@@@@@@T@ @SB
)@@G@@@#I@A1@@S@^SOFF   @@@SET@@SET.LK@@@@MC@@@@^C@@@@]C@@@@GS@@@@)C/@I@)@@@@@SC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@K@@@@@GT@@@@SD
)@@G@@0@@@]@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SE
)@@G@@K@@@@@GU@@@@@@@@@@[@^@@@T8)@@EH8@@@0/K@@L+:8@@@@/K@@L+:8@@@ ;?@@@A @@@@GSF
)@@G@@N;0@@  @@@@I;G@@@=FP@@@@@@^@@ @@D@@/@][@@9@ >@@@@@@@@@H@@@MD)@@@@@)@@@@@SG
)@@G@@@@@@C.EDIT$       EDITR$      ECHAR$      ECOL$       ESKIP$      ECLR$ SH
)@@G@@      ECOPY$      EPACK$      ETIME$      EDAY1$      EDAY2$      EDAY3$SI
)@@G@@      EOCTV$      EDECV$      EFD1$       EDITX$      ECOLN$      EMSGR$SJ
)@@G@@      EFD2$       ELT$        LASTD$      LASTI$      EMSG$       TDATE$SK
)@@G@@      PRINT$      RINF$       ACTII       FORK$       IALL$       SNAP$ SL
)@@G@@      EABT$       OPT$        SELT$       ERR$        CSF$        INPUT SM
)@@G@@      PARSE       CMDLVL      BLDC1       ABORT$      CF$AM       BLDC3 SN
)@@G@@      DUMMY       LCORE$      DEBUG$      IINAME      INT$        EXIT$ SO
)@@G@@      F$ASG       REORDLT     PATCH       RESTORE     ZAP1        MCORE$SP
)@@G@@      ZAP2        RELOAD      SCAN        UNLOAD      SORTKEY     PCT$  SQ
)@@G@@      EDPKT       @@^@@@@@@@A:CFAMSW      @@^@@@@@@@@@AOPT        @@^@@@SR
)@@G@@@@@@@[BOPT        @@^@@@@@@@@]COPT        @@^@@@@@@@@#DOPT        @@^@@@SS
)@@G@@@@@@@^EOPT        @@^@@@@@@@@ FOPT        @@^@@@@@@@@AGOPT        @@^@@@ST
)@@G@@@@@@@BHOPT        @@^@@@@@@@@CIOPT        @@^@@@@@@@@DJOPT        @@^@@@SU
)@@G@@@@@@@EKOPT        @@^@@@@@@@@FLOPT        @@^@@@@@@@@GMOPT        @@^@@@SV
)@@G@@@@@@@HNOPT        @@^@@@@@@@@IOOPT        @@^@@@@@@@@JPOPT        @@^@@@SW
)@@G@@@@@@@KQOPT        @@^@@@@@@@@LROPT        @@^@@@@@@@@MSOPT        @@^@@@SX
)@@G@@@@@@@NTOPT        @@^@@@@@@@@OUOPT        @@^@@@@@@@@PVOPT        @@^@@@SY
)@@G@@@@@@@QWOPT        @@^@@@@@@@@RXOPT        @@^@@@@@@@@SYOPT        @@^@@@SZ
)@@G@@@@@@@TZOPT        @@^@@@@@@@@UNS$FLG      @@^@@@@@@@@ZLAST$D      @@^@@@TA
)@@G@@@@@@@0LAST$I      @@^@@@@@@@@2C1          @@^@@@@@@@@4C2          @@^@@@TB
)@@G@@@@@@@5C3          @@^@@@@@@@@6C4          @@^@@@@@@@@7C5          @@^@@@TC
)@@G@@@@@@@8C6          @@^@@@@@@@@9C7          @@^@@@@@@@@'C8          @@^@@@TD
)@@G@@@@@@@;C9          @@^@@@@@@@@/C10         @@^@@@@@@@@.C11         @@^@@@TE
)@@G@@@@@@@"C12         @@^@@@@@@@@_C13         @@^@@@@@@@[@C14         @@^@@@TF
)@@G@@@@@@[[C15         @@^@@@@@@@[]C16         @@^@@@@@@@[#C17         @@^@@@TG
)@@G@@@@@@[^C18         @@^@@@@@@@[ PBUFR       @@^@@@@@@@ @CMDNAME     @@^@@@TH
)@@G@@@@@@^RTIMEST      @@^@@@@@@@^_Z1          @@^@@@@@@@#ECPUIN       @@^@@@TI
)@@G@@@@@@^0IOIN        @@^@@@@@@@^1PRINT       @@^@@@@@@@A1AREAP       @@^@@@TJ
)@@G@@@@@@B%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[@@JA@)#JA@)#JA@)#JA@TK
)@@G@@)#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/S@@@@AA@@@@)@C@0/S]@G/STL
)@@G@@]@G/S]@G/S]@G/S]@G/S]@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AB@@@@TM
)@@G@@)@I@8/S]@G/S]@G/S]@G/S]@GJA@)#JA@)A@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TN
)@@G@@@@@@@@AC@@@@)@P@8/S]@G/S]@G/S]@W/S]@G/S]@)/S]@G@@@@@@@@@@@@@@@@@@@@@@@@@TO
)@@G@@@@@@@@@@@@@@@@@@@@AD@@@@)@W@8/S]@G/S]@G/S]@*/S]@GJA@)#JA@)G@@@@@@@@@@@@@TP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AE@@@@)@<@C/S]@G@@@@@@@@@@@@@@@@@@@@@@@@@@TQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AF@@@@@@^@@[@@ @@K@@>@@@@@>@@@TR
)@@G@@@@@@@=ART         LD$TBL      PGMSW       REORG       BLDTF       MAIN  TS
)@@G@@      BLDCTBL     BLDDF       PINIT       PERF        PROC        ED    TT
)@@G@@      DUMMY       PACKC1      Z1          Z2          @@@@@@@@@@@@@@@@@@TU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@)@@@8@/S]@C/S]@C/S]@C/S]@C@@@@@@@@@@@@@@@@@@@@@@TW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@/S@@@@AA@@@@)@B@8/S]@CJA@)]JA@)]JA@)]JA@) JA@)]@TX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AB@@@@)@I@0/S]@S/S]@C/S]@C/S]@TY
)@@G@@W/S]@C/S]@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AC@@@@)@O@0/S]@C/STZ
)@@G@@]@C/S]@C/S]@C/S]@=/S]@C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AD@@@@UA
)@@G@@)@U@K/S]@*/S]@C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UB
)@@G@@@@@@@@AE@@@@@@@@@@      @@@@OP@G@@G0@@@@@@@@@@@@STREET-ADDR-RANGE       UC
)@@G@@      @@@@O3@F@@G1@@@@@@@@^@@[@@ @@G@@X@@@@@X@@@@@@@@WSTATUS      PGMSW UD
)@@G@@      REORG       CONF        MAIN        DELETE      SCAN        SORT  UE
)@@G@@      RELOAD      PATCH       DUMMY       PERFSW      @@@@@@@@@@@@@@@@@@UF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UH
)@@G@@)@@[U@@K@@@@HCD@@AHCD@@#CCD@@]/K@@@7:^D@@]C@G@@@G@@@@DC^D@@#/KF@@@(^D@@]UI
)@@G@@&'K@@[AA@@@@)@F[M@@[@@@@@@@@@@/K@@@!:@@@@]C@@@[JR@)@@[O8K@@E&8K@@[R@K@@DUJ
)@@G@@N#0@@G&;@@@[G@@@@DAB@@@@)@P[N#@KK@@@@@@@@@PC9@@AOC9@@]R@0@@DM@M)@@N#)@@]UK
)@@G@@N#K@@[N^M@@@/@K@@:+@]@@@C@@@@@AC@@@@)@Z[U@@K)@@@[^#@@[H@@@@DC@@@[H'=@@@@UL
)@@G@@2^#)@@NCT@@#&;@@@@H@@@@DC@@@[I&80__"P80@@[AD@@@@)@%[V@^@@@@@ @@@@GN@K@@GUM
)@@G@@[^D@@]H@@@@[C@@@@][^D@@#H@@@@DC@@@@[/K@@@MO^+@@@/K@@@MAE@@@@)@5[U@^@@@@@UN
)@@G@@&8K@@[PCT@@#PCT@@AOCT@@]R@K@@D8N0@@;NF9@@#/KF@@@(CD@@#M@N)@@R80@@GAF@@@@UO
)@@G@@)[@[N#@KK@@@@@@@@@[CD@@#H8@@@[CCD@@#[^D@@]G^D@@]C8@@@[ @[)@@/@K@[F+@[@@@UP
)@@G@@C@@@@[AG@@@@)[E@3@@@@@@@)@@@Q@)@@@@@@@@@@@)@@@@@@@C@@@/KF@@@[@[@@@C^D@@]UQ
)@@G@@O^T@@#R@K@@D8N0@[@AH@@@@@@^@@ @@D@@[@@F@@[@@J@@@@@@@@@@@@@[K)@@@@@)@@@@@UR
)@@G@@@@@@@]ERR$        PACKPG      @@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@US
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[M()CO)@@]=@@@@&8)@@[UT
)@@G@@R@)@@L&80@@[R80@@@C[K@@GM#!)@@N8K@@2&;)@@[R;)@@@R;K@@@AA@@@@)@E[M@K0^K0^UU
)@@G@@^@K@@@/K@@@P$;)@@ ')I@@<R@K@@#R#0@@[R#)@@[ @@@@HH9K@@[T9K@@A;DK@@MAB@@@@UV
)@@G@@)@O[F#@KK[@^[#@L@@@@@@@@8^K@@LR#0@@[/K@@@W$;0@@ ')J@@(O;K@@[/K@@@Y:8@@@ UW
)@@G@@R#)@@[AC@@@@)@X[V@K@K@@@R$]@@@R:]@@@R\]@@@R3]@@@R7]@@@/KF@@@8^K@@J @@@@HUX
)@@G@@O80@@ /@K@@-/K@@@+AD@@@@)@*@'@@@@@@@)@@@Q@)@@@@@@@[@@@      A<[)@@A$[@@@UY
)@@G@@A:[@@@A\[@@@A3[@@@A7[@@@R<])@@AE@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@ @@D@@[@@F@@[@@J@@@VA
)@@G@@@@@@@@@@@@@\)@@@@@)@@@@@@@@@@]PBUFR       PARSE       @@[@@@@@@@@@@@@@@@VB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@VC
)@@G@@)@@@"@?G[=C@=C@4C[^C@4C@=C@0@@@@@@@@[#0@@@'^@@@@A#@@@@R#@@@@C#0@@@'^@@@@VD
)@@G@@AA0@@]AA@@@@)@B[A@?C[OG[+=@0)CK#-M@)@@@@@@R;)@@@K8@@@[R#@@@@/K@@ ,!8@@@PVE
)@@G@@R;@@@@ @@@@#'^@@@@AB@@@@)@J[I@*(@GO)A@[]@W@@@@@@A#@@@@O#@@@IO#)@@JT80@@DVF
)@@G@@P;0@@[T80@@#R;0@@@T8)@@@O;)@@AAC@@@@)@S[I@?C]K^G[)(@G@@@@@@@P;0@@[T80@@#VG
)@@G@@R;0@@@M#/)@@R#@@[=&;0@@[R#0@@HN@K@@I'=@@@@AD@@@@)@-[I@?[@K0A^@(@K C[=@@@VH
)@@G@@8#0@@:R;0@@@O;@@@AR;@@@@/K@@@-O;K@@DA#Z@@ /K@@@&8#0@@<AE@@@@)@%[I@?[#@SKVI
)@@G@@[]@*K@@@@@@@P;K@@[/@K@ :W8K@@DRF)@@@R;K@@@/K@@@(O#K@@GA#Z@[@/K@@@,AF@@@@VJ
)@@G@@)@3[Q@?C])@[@EK#@@R;0@@@8#K@@6R#)@@G?@)@@G;C@@@S;*@@@SRZD)@#R;)@@@&'K@@DVK
)@@G@@RAK@@@AG@@@@)@.[Q@*EK +^@8-)G@ 4A@@#AF&@@CABA@@BR[\@@^O;@@@[R#@@@@O;)@[=VL
)@@G@@T8)@@@P;0@@[T80@@#AH@@@@)[B[I@(@^C[4C]L]@0K0A@@@R#@@]VN])@@G'=@@@@R;@PCHVM
)@@G@@'=@@@@A#@@@@P;@@@[8#0@[#O#@@@IAI@@@@)[K@"@?C#OC#=C#4G[=G[=G[=C^@@@@@@@@@VN
)@@G@@'=@@@@R#@@]W/K@K@](@@@@#'^@@@@'=@@@@'=@@@@AJ@@@@)[R@"@?G[=C^^G[=C^^G[=C^VO
)@@G@@^G[)@@@@@@@@R#@@]X'=@@@@R#@@]Z'=@@@@R#@@]Y'=@@@@R#@@]XAK@@@@)[Y[A@?C^^G[VP
)@@G@@=C^^G[=C^OC^)@@@@@P;@@@[&;@@@[RB@@@@'=@@@@/K@K@]'=@@@@R#@@]W'=@@@@AL@@@@VQ
)@@G@@)[&[I@?G[-#@T#@S(@GCS#@@T8@@@#R#@@@JR@0@])P;0@@[R;0@@@;/@@[&A#@@[)R;@@@[VR
)@@G@@A#@@[ZAM@@@@)[\[Q@*^G[)@E@@@@@O;@@]D;*@@@MO;@@@[;*@@@AO;@@@]R#@@@JR[Z@[@VS
)@@G@@R@)@@GO;@@@]R@K@@GAN@@@@)[9[A@?C#O[#@T#@T]@@(@GCS#@@@@R#K@]-P;)@@[R;)@@@VT
)@@G@@'=@@@@*^@@[& 4@@[&8#0@[?'=@@@@AO@@@@)][[I@*^C^4C [][P][T#@S@R[-@@^'=@@@@VU
)@@G@@'=@@@@R#@@[E'=@@@@'=@@@@;?I@@#;KY@@@ @@@@GAP@@@@)]E[I@?G[=[#@T#@T]@@K[@@VV
)@@G@@/K@@]$1@@@@#/K@@]O1@@@@['=@@@@*^@@[& 4@@[&'^@@#Q;/@@[&AQ@@@@)]N[A@?C )^GVW
)@@G@@[=C 4G[=G[)@@@@@@@*^@@[$ 4@@[$'^@@@@;/@@[$R])@@AA3Q@@#R;K@@L'=@@@@AR@@@@VX
)@@G@@)]V[I@?C@^CA[@^CAL][*@@@R@0@@[/,0@@@*4A@@#'=@@@@0@A@@#/K@@]$1@@@@#/,0@@@VY
)@@G@@'=@@@@AS@@@@)]=[Q@*K^G[)@@@@@@R])@@ RAA@@BH9K@@[C[K@@MCD&@@B @@@@OR[<@@^VZ
)@@G@@/K@@]DP8K@@[R@K@@]AT@@@@)],[I@?@K^G[-][=^CA)@@@@/,0@@@*4A@@#R])@@A'=@@@@WA
)@@G@@0@A@@#R[+@@^8^K@],OAA@@A/K@@^#AU@@@@)]7[I@*K0AK@^G[=C 0@@@@@'^@@@@;/@@[$WB
)@@G@@R])@@AA3Q@@#R;K@@D/]@@#^R[+@@^R@)@@#R[@@@]AV@@@@)#@[A@?G[=G[=C@^CA[@K0A@WC
)@@G@@@@@@@@0@A@@#R[-@@^/K@@#J0@@@@[/,0@@@'=@@@@*^@@[$ 4@@[$AW@@@@)#C[I@?CAKK)WD
)@@G@@U[@K0A@@@@@@0@A@@#R[+@@^/K@@]DR@K@@^R@0@@[/,0@@@*4A@@#R])@@A'=@@@@AX@@@@WE
)@@G@@)#L[A@?CAKK)UK)Q^G[=G[)@@@@@@@C[0@[+C]K@[-@@@@@@'=@@@@/,0@@@*4A@@#R])@@AWF
)@@G@@'=@@@@AY@@@@)#T[Q@?G[)K^@@@@@@;C@@@M;*@@@MR#@@@NH'K@@[C[7)@@/]K@#2/^@@#)WG
)@@G@@;*@@@MR#@@@NR[0@[<AZ@@@@)#<[I@%=[TM@?@@@@@@@@@@@G[0@@G;*@@@MH[0@@GAB&@@CWH
)@@G@@;C)@@MR#)@@NAFA@@BR;@@@@!8@@@@BA@@@@)#?[A@?G[-#@T#@T#@T@K0AK@@@@@@/^@@#9WI
)@@G@@R#@@[)/K@K#QA[0@[<[[0@[+[]K@[-9*A@@@9?@@[OBB@@@@)#4[A@?G[=G[=G[=G[=[#@T#WJ
)@@G@@@T#@S@A[0@[ZO[0@[)R[0@[Z/K@K#QR@K@])A[0@[<[[0@[+[]K@[-BC@@@@)#/[Q@*K0A^GWK
)@@G@@[-@@@@P;@@@[OFC@@]R#@@@C/K@@#XO90@@#9*@@[O9?B@@[A#@@[)RRB@@@CUR@@@BD@@@@WL
)@@G@@)^A[Q@*^@K0A^@@@@@;C)@@M;*)@@M/K@@^M*@@@@J+@)@]+R#?)@@/K@@^MCDC@@#&;@__"WM
)@@G@@PFC@@ABE@@@@)^K[I@(@K^@K0AK)W^@@@@@@/K@@^M2WT)@@N@K@@@R]K@]<RZY@@@/K@@]\WN
)@@G@@8^@@^E/K@@^OO#)@@CBF@@@@)^T[Y@*@[@@@NV(@@@&;0@@[K)(@@@/K@@^*0@D@@@N@0@@GWO
)@@G@@N#0@@HO'K@@[&'K@@[RAT@@@P'K@@[BG@@@@)^=[Q@*K^@K@@@@@@@+](@@@C]\)@@&;0@@[WP
)@@G@@K)()@@/K@@^'(0D@@@/K@@^Z/!@@ [R3T)@@N#K@@DBH@@@@)^,[Q@(@^@^@@@@@@@;%0@@[WQ
)@@G@@;%)@@[O3;@@@/I0@^/O]0@@IR]0@@D/E)@^6R;)@@[/]0@^'1@@@@RBI@@@@)^8[Q@(@^@[@WR
)@@G@@K@@@@@P;K@@[/K@@^6/!@@ [R3V@@@N#K@@FNV:@@@/K@@^MR#@@[#/A0@^1O;)@@[BJ@@@@WS
)@@G@@) ][I@*^CBL@K0AK)Z@@@@@@2@H)@@N@K@@@R#K@]=/@@@ G;CH@@@R#K@@@N@)@@HA#E@@#WT
)@@G@@R#J)@@BK@@@@) F[Q@?@K))^@K@@@@A#J)@@P;0@@[R#E@@^/@@@ SRFE@@^/K@@ Q*@E@@ WU
)@@G@@/,0@@@R#K@[]/K@@ -BL@@@@) P[I@(@^G[=CCL#@T#@T#@S*^@@[* 4@@[*A#@@@#R;@@@[WV
)@@G@@'^@@@@;/@@[*/K^@@@8#K@ ]G'@@@[BM@@@@) Y[I@?C@[@^G[=CC-#@T#@S 4@@[(A#@@@#WW
)@@G@@R;@@@['^@@@@;/@@[(R#K@[]/K@@ N @@@@G'=@@@@BN@@@@) $[A@?G[=C@[@K0AK)KK)<KWX
)@@G@@0A@@@@R#@@]&'=@@@@'=@@@@R#@@]>/K@@ N @@@@G'=@@@@*^@@[(BO@@@@) \@Q@?C^^CCWY
)@@G@@0@@@@@)@@@,@0@/S@@@@@@@@@@@@[Q@@@@@@@@@@@@@@@@@@@@@@@@'=@@@@'=@@@@BP@@@@WZ
)@@G@@)[Q[Y@0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XA
)@@G@@@@@@@@BQ@@@@)[-[Y@0])@@@FOUND PATCH @\@@@@@\@@@@@\@@@@@\@@@@@@@@@@@@@@[>XB
)@@G@@@@@@@@@@@@@@@@@@@@BR@@@@)[?[Y@0@@@@@ACTIVIAN 20 ORE THSING MPTED U ATTEMXC
)@@G@@ PATCHERROR:S     ENTRIENO C3 BS@@@@)[7[Y@0@@@@@************************XD
)@@G@@****************** ERR$!>20) -ACTNUMTIES (BT@@@@)]][Y@0@@@@@      ***** XE
)@@G@@ *****                                    ***** ******BU@@@@)]H[Y@0@@@@@XF
)@@G@@PRINTENINGS EE WAR     S*****  *****      RROR  E IN E MAY B PATCHBV@@@@XG
)@@G@@)]S[Q@0]&@(KE[KE@@)@@@@@_____"@[C@]N@[C@]F@[C@]#@[C@[;@[[@[+ *****E     XH
)@@G@@D ABOVBW@@@@)]+@,@0(@6O)YE[K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[G@[\@[ @[%XI
)@@G@@@@[@@@@@[@@@*@@@@@BX@@@@@@^@@B@@F@@=@[N@@]@[V@@@@@@@@@@@@@@@)@@@@@)@@@@@XJ
)@@G@@)@@@@@@@@@ 1@@@@]$CTS$        CTSA$       MERGE       C4          C16   XK
)@@G@@      BLDART      ACTNUM      LAST$D      KF$WKS      MCORE$      C3    XL
)@@G@@      PGPBLK      NAME$       FORK$       DACT$       CHKPT2      PRINT$XM
)@@G@@      TSQRG$      C2          AWAIT$      TSQCL$      ACT$        EXIT$ XN
)@@G@@      CHKPT       DB$AM       WAIT$       IOERR       AFRCDT      ARTCNTXO
)@@G@@      ASHFT       ARETBL      ARECNT      KF$AMR      ZPWARN      BDWARNXP
)@@G@@      ERR$        PATCH       @@ @@@@@@@@@PDBPKT      @@A@@@@@@@[Q@@@@@@XQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[A@WG[^G[^G[[#@KK0^K0XS
)@@G@@^@@@@@ W@@@39*@@@49?E@@C9*@@@09?E@@AA])@@? @@@BOAA0@@@AA@@@@)@C[I@WCA=[#XT
)@@G@@@KK0^[#@K@@@M#W)@@R#K@XR&;@@@[O;@@@]R#@@@?N8K@@C9*@@@,/@@@^>/,0@@@AB@@@@XU
)@@G@@)@L[A@U&@+^#U@-)C-)C-@8C@@@@@@/K@@@,2@I)@IN@K@@@9?@@@AR#)@[A/^)@D^'=@@@@XV
)@@G@@R;@@@,AC@@@@)@T[I@T@K0^^[#@KK^G[@@@@9?0@@C/K@@@R9/"@@@9?0@@]/K@@@R9/"@@]XW
)@@G@@9?0@@^/K@@@R%@Y@@ AD@@@@)@+[I@T@K0^^@K[#@K@@@@@@AFK@@ERFY@@C/K@@]?(WI@@DXX
)@@G@@/K@@@(%S"@@DRV0@@6/K@@@R9/"@@AAE@@@@)@:[I@T#@L@K)W^@K)W@@@@@R#I)@@A#@@@@XY
)@@G@@O;@@@[/K@@C0!8@@@2R#@@@@/K@@@.ABK@@ERBY@@CAF@@@@)@4[A@WCBL#@L#@K^G[^CBK@XZ
)@@G@@@@@@@@A#@@@@AF@@@EO#@@@H;*K@@ARBK@@7AB@@@EO;@@@[R#@@@@AG@@@@)@/[I@WCB=G[YA
)@@G@@[#@K[#@K@@@@AVI@@@RV@@@6 WI@@@M#?)@@N8K@@DR#@@XR&;)@@[A#)@@!'=@@@@AH@@@@YB
)@@G@@)[ [A@WG[^G[^G[^G[^G[]&@+^#'@@/K@@DK/,0@@@R;@@@;A#@@[@R#@@@89*@@@;9?@@@,YC
)@@G@@ ^@@@JAI@@@@)[H[A@U&@+^^]@)CS]CS]CS]C@@@@@/K@@C5%@K@[ R#K@XS ?@@[ /K@@C5YD
)@@G@@/K@@DK/,0@@@R;@@@;AJ@@@@)[P[A@WG[^C@^@()C-)C]A@)@@@@@@ @@@@[M#W)@@N8K@^SYE
)@@G@@R#K@XUR;@@[C/K@@C5%@K@@[R#K@XTAK@@@@)[X[A@WG[[#@L#@L#@L#@K()C-[]@@/,0@@@YF
)@@G@@R')@@IA#@@@GOF@@@IR#@@@GA#@@@GR;@@@[ C@@@IAL@@@@)[>@"@WG[^[]]C/S]@@/S#@LYG
)@@G@@]]G/S]@@@@@@@@@@@@/,0@@@@@@@@H@@@@@@/,0@@@/K@@DK(C@@@IAM@@@@)[?[A@V1)C@OYH
)@@G@@G[^G[^[]@ @K0^K@@@/K@@[)*@@@@['^@@ )(4@@@['^@@ E*@@@@H @@@[B@@@@@@AN@@@@YI
)@@G@@)[4[I@WG[^C@OC@KK0^K)@@@ @@@@GO;K@@AR#K@@@OB0@@EN@K@@J;C0@@SR#0@@@AB@@@[YJ
)@@G@@R#@@@HAO@@@@)[.[I@S^C@[#@KK^G[@@@@@@PB0@@E/K@@]M!@)@@JRF)@@EO#0@@GA#@@@@YK
)@@G@@O;@@@[*@@@@HW8@@@AAP@@@@)]A[I@T#@L][4^G[@@@@@@@@O#@@@JR;0@[@?80@[@ABK@@EYL
)@@G@@A#Y@@@K8@@@[R#@@@@RB)@@EO;0@@[AQ@@@@)]J[A@WCB=CBOG[^G[[#@KK)@@@@@@R#@@@@YM
)@@G@@M#?)@@R#@@XV&;)@@[RB)@@EAF@@@EA#@@@@'=@@@@AR@@@@)]R[I@SK0^K)@K0^[#@L@@@@YN
)@@G@@/K@@[)AB)@@E&;)@@@M#?)@@R#@@XWA#@@@@O#@@@G;*@@@SN@K@@GAS@@@@)])[A@WG[@()YO
)@@G@@C-[CCS]CS]CS]@@@@@R#)@@!A#K@@[:@K@@GR;K@@[/,0@@@R;@@@; @G@@@RB@@@EAT@@@@YP
)@@G@@)]*[A@WG[[#@L@^G[^G[^G[@@@@@@@(@@@BOAB@@@EAB@@@FRBI@@C/K@@A]*@@@@[AZY@@DYQ
)@@G@@R#K@@[AU@@@@)]0[A@W[]]P@ES]CK[CS]]^[@@@@@@/,0@@@C8K@@OC8@@]2/,0@@@C/@@@KYR
)@@G@@/K@@#F(@@@@@/K@@#FAV@@@@)]8[I@W[]@(#@L]]T@K0^@@@O#@@@H;CK@@SR#W@@@RB@@@EYS
)@@G@@/K@@#F'=@@@@R#@@XX/,0@@@'^@@CSAW@@@@)#[[Q@S^G[[@^@K0^@AB@@@ER#G@@@/K@@#"YT
)@@G@@(@G@@@/K@@#F*WG@@@AB@@@EO#@@@H;CK@@SR#W@@@AX@@@@)#F[I@WG[^CDO@K0^[@@@@@@YU
)@@G@@R#E@@@/@@@#S:8K@@JR7U@@[A#@@@HRBE@@[/K@@#S(@@@@@RA)@@EAY@@@@)#O[I@SK^G[@YV
)@@G@@^[]]W@@@@@@@*@@@@@/,/K#Z @@@@G!8@@@KR7E@@[RA)@@E'^@@B)O])@@G;C@@@SAZ@@@@YW
)@@G@@)#X@"@W[@JA@#1)C#N1)C#<1)C#31)C^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AN/K@@].YX
)@@G@@/K@@AXBA@@@@)#=@"@V1)@/S@JA@#1)C^N1)@/S][C/S][G@@@@@@@@@@@@@@@@@#"@@@@@@YY
)@@G@@@@@@D+@@@@#1@@@@ANBB@@@@)#:@"@V1)C #1)C N1)C <1)[]]WK0^@@@@@R#@@BO/KF@@@YZ
)@@G@@ @@@@@@@@@#\@@@@@@@@@@@@@@@@@@BC@@@@)#2[I@T#@KES]@-)CCS]@@@@R#@@BOM#H)@@ZA
)@@G@@R#K@XRN8K@@E&;@@@[O;@@BPT8@@@EA#K@BOK8@@@[BD@@@@)#;[I@T@K@K^G[[#@K@@@@@@ZB
)@@G@@/K@K@@(@@@@GR#@@BO/K@@^U:8@@@[R\E@@@/K@@@]/K@@AS!8@@@2BE@@@@)^^[I@T#@KESZC
)@@G@@]@-)CCKN)@@@*@@@@@M#W)@@R#K@XRN8K@@E&;@@@[O;@@BPT8@@@EA#@@BOP;@@@[BF@@@@ZD
)@@G@@)^H[A@W[]]P@ES]CK[CS]]^[@@@@@@/,0@@@C8K@@SC8@@]6/,0@@@C/@@@K/K@@].(@@@@@ZE
)@@G@@/K@@AXBG@@@@)^P[A@W[]@(#@L]]T@^CD4G[@@@@@@R#@@XYA#@@@@R;@@@[/K@@].'=@@@@ZF
)@@G@@R#@@XX/,0@@@'^@@CSBH@@@@)^X[A@WCD=G[^CD=G[^CD=G[^CD=@@/K@@AX'=@@@@R#@@X-ZG
)@@G@@'=@@@@R#@@X)'=@@@@R#@@XZ'=@@@@BI@@@@)^>[I@U&@+^@MA@)-@K-)C]@/K@@^4:8@@@ ZH
)@@G@@R7C@@]R]@@@?/,0@@@C8K@@OC8@@[T/,0@@@C/@@@KBJ@@@@)^,[I@T@^CE[]@KK)*@@@@@@ZI
)@@G@@C/@@@./,0@@@9?C@@^/,0@@@C/@@@*/,0@@@9?C@@]/K@@^2:8@@@*BK@@@@)^7[I@WC[[]]ZJ
)@@G@@)^@K)^@@@@@@9?C@@C/,0@@@C/@@@//K@@ [:4C@@CR;@@@ /,0@@@9?C@@A/,0@@@BL@@@@ZK
)@@G@@) @[A@WCE^G[[]@-]@(#@L]]S@@@@@R;@@@['=@@@@R#@@XX/,0@@@/,0@@@C8K@@EC8@@[XZL
)@@G@@/,0@@@BM@@@@) C[I@WCD4@K0^^@@@@@@@@@W8@@@= @@@@GP;K@@[/K@@ W!8K]WKR#K@@HZM
)@@G@@@@@@@@/K@@#"A#@@@@BN@@@@) L[I@WG[[@[#@L@^G[@@@@@A#@@[BR;@@@[/K@K EA#?@]/ZN
)@@G@@;)!@@@O;)@@[/=)@ S;@!@@@R#?@]/BO@@@@) U[I@WC@O@K0^K)[K[#@L@@/K@@ 2*@@@@[ZO
)@@G@@@@@@@@/K@K E 4@@@[A#@@[BR;@@@]/K@K E 4@@@[BP@@@@) <[I@U&@+^@MA@)-@K)]^@0ZP
)@@G@@C/@@@:/,0@@@C/@@@['^@@CS/,0@@@C8K@@SC8@@[+/,0@@@C/@@@KBQ@@@@) ?[A@WC[^C]ZQ
)@@G@@=G[^CD-#@L]@@@@@@@O;K@@AR#K@@@A#@@@[R;@@@['=@@@@R#@@XX/,0@@@/,0@@@BR@@@@ZR
)@@G@@) 4[I@S[]@[]@[#@L]@@(@@@R')@@@AB@@@@R#@@@GAZ@@@@ @@@@@O;@@@[*@@@@HW8@@@AZS
)@@G@@ @@@@GBS@@@@) .[A@W[#@L#@L]]T@K0^^@@@@@@@@/K@@AI%8@@@[R#@@@G/K@K )'=@@@@ZT
)@@G@@R#G@[ZR#@@[B'^@@B)BT@@@@)A [A@U&@+^@MA@)-@K)CK CS]@@@@R#@@XX/,0@@@'^@@CSZU
)@@G@@/,0@@@C8K@@RC8@@[_/,0@@@C/@@@KBU@@@@)AH[A@WCD=G[^CD-]]X@K0^K)&@@@@'=@@@@ZV
)@@G@@R#@@X</K@@#"A#@@@@R;@@@['=@@@@R#@@X+'=@@@@BV@@@@)AP[A@T]]X@K0^K)&^CD4@@@ZW
)@@G@@@@@@@@/K@@AXA#@@@@R;@@@['=@@@@R#@@X=/K@@AXA#@@@@R;@@@[BW@@@@)AX[A@U&@+^@ZX
)@@G@@MA@)-@K)CS]@@@@@@@C8K@@PC8@@]L'^@@CS/,0@@@C8K@@RC8@@]H/,0@@@C/@@@KBX@@@@ZY
)@@G@@)A>[A@WC]^C]=G[^CD=G[[#@K@@@@@R#E@@@A#@@@HRBE@@[RA)@@E'=@@@@R#@@XX/,0@@@ZZ
)@@G@@/,0@@@BY@@@@)A![A@SK^G[^[#@L#@L]]S@@@@@@@@'=@@@@R#@@X>/K@K@@8^0@A3C[0@BOAA
)@@G@@'^@@B)O])@@G;C@@@SBZ@@@@)A5[I@U&@-N@L]@D#@KK)C@@;CK@@SR#W@@@RBB@@C/,0@@@AB
)@@G@@C8K@@^C8@@]'/,0@@@C/@@@KR90@BPCA@@@@)A"[I@S^CA^G[[]@)@@@@@@@9?G@@@R#@@@BAC
)@@G@@/,0@@@C8K@@^C8@@];/,0@@@R;K@@^RBG@@@O#@@@HCB@@@@)BB[I@WCE[]@K[]])K)^@@@@AD
)@@G@@/,0@@@C/@@@./,0@@@9?G@@@O;@@@]R#@@@B/,0@@@C/@@@*/,0@@@CC@@@@)BK[Q@S^CE[]AE
)@@G@@@K[]])/,0@@@9?G@@@O;@@@AR#@@@B/,0@@@C/@@@//,0@@@9?G@@@O;@@@^R#@@@BCD@@@@AF
)@@G@@)BU[I@T]@(#@L]]T@K0^@@@@;DK@@SC[U@@@@@@@@@/K@K@@8^0@A6'=@@@@R#@@XX/,0@@@AG
)@@G@@O90@@ECE@@@@)B<[Q@S@@ES]CK[@@@/,0@@@C/@@@KG90@@[C[0@@EG9K@@[W9@@@/ @@@@KAH
)@@G@@H9K@@[T9K@@AH9K@@[CF@@@@)B![I@T]@K^CA[]@L#@L@@@@/K@@B/(@@@@H/,0@@@C/@@@:AI
)@@G@@/,0@@@R;K@@^RBE@@@/,0@@@C/@@@#CG@@@@)B6[I@WG[[][)K)AK[]@T@@@/[@@CL/,0@@@AJ
)@@G@@C/@@@A/K@@B"/,0@@@C/@@@[/,0@@@C8K@@ C@@@@HCH@@@@)B_[I@T@ES]CK[]^@*@@@@@@AK
)@@G@@G90@@ER#@@@NR;K@@//,0@@@C/@@@G/,0@@@C/@@@K/K@@C H9@@@[CI@@@@)CC[A@WC]^C]AL
)@@G@@=G[^CD=@()C-@^@@@@C/@@@G/,0@@@C/@@@K8^@@C['=@@@@R#@@X&/,0@@@/,0@@@CJ@@@@AM
)@@G@@)CK[I@WC[KK)CK)EK0^K)&K@@@@@@@/K@KB)'=@@@@R#@@X&/,0@@@/,0@@@R#@@@NR#K@@LAN
)@@G@@/,0@@@CK@@@@)CT[I@WG[[@^[#@L]])K)^@@/,0@@@C/@@@*/,0@@@9?@@@]/K@@C):8@@@*AO
)@@G@@/K@@C+:8@@@ R7@@@]CL@@@@)C+[A@WG[^CE[]@L#@L]])K0^@@@@@:4@@@CR;@@@ /,0@@@AP
)@@G@@9?@@@A/,0@@@C/@@@./,0@@@9?@@@^CM@@@@)C%[A@W@K)^K0^K)*K^G[^CD)@@@@@'=@@@@AQ
)@@G@@R#@@X$/K@KCS/,0@@@9?@@@C/,0@@@C/@@@//K@KCSCN@@@@)C2[A@T]]X@ES]CK[CS]]^[@AR
)@@G@@@@@@@@/,0@@@C8K@@CC8@@]</,0@@@C/@@@K/K@@AXA#@@@@R;@@@[CO@@@@)C'[A@W[#@KKAS
)@@G@@)CK)EK0^K)&@@@@@@@R;@@@['=@@@@R#@@XX/,0@@@/,0@@@C8K@@NC8@@]>'^@@CSCP@@@@AT
)@@G@@)D][A@WCD4@()C-@^)CS]]^[@@@@@@/,0@@@C8K@@WC8@@]('^@@CS/,0@@@C/@@@K/K@@#"AU
)@@G@@A#@@@@CQ@@@@)DE[A@WC]=G[^CD-]]X@ES]CK[@@@@/,0@@@C/@@@K/K@@#"A#@@@@R;@@@[AV
)@@G@@'=@@@@R#@@XX/,0@@@CR@@@@)DM[A@WG[[]@-#@KK)RK0^@@@@@@@@C8K@@DC8@@]0/,0@@@AW
)@@G@@R;K@@#R7@@@"/,0@@@C8K@@EC8@@],CS@@@@)DU[A@WC]^[]@(#@L]]SK)$K@@@@@@/K@@#"AX
)@@G@@A#@@@@R;@@@['=@@@@R#@@XX/,0@@@'^@@CS/,0@@@CT@@@@)@@@Q@)@@@@@)@G@6@)E[<@GAY
)@@G@@*@@@@@@@@@@@@&Q@@Q@])@@@@@@@@;@@@@@@@@@@@@@@@@@@@@@@@@CU@@@@)@M@&@)@@@@@AZ
)@@G@@)@?@,@)@@@@@                  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[[@@@@CV@@@@BA
)@@G@@)@1[Y@)@@@@@      @@@@@@@@@@@@@@@@@@[@@@@@@@@@@@            @@[@@@@@@@@@BB
)@@G@@      CW@@@@)@/[Q@)@G^*[M@@@@@@@@@@@@@[@@@@@[@@[@@K@AJ@JN@QN@@@@@@@B@@@@BC
)@@G@@@K@@@@@@@@@@      CX@@@@)[A[Q@+4 C@@@@@@@@******************************BD
)@@G@@************@@@@@@@@@@@@@@E__5CY@@@@)[K[Y@)@@@@@M ERROPERFOR******RFORM BE
)@@G@@N A PE WITHI ABORTDID AN USER ************CZ@@@@)[V[Q@)@* @*@@@@@@(S) INBF
)@@G@@ ERRORSYNTAX@[A@[2@[A@[?@[A@[&OUND   NOT FC     R: PRODA@@@@)[>[Y@)@@@@@BG
)@@G@@ABEL VCATE L DUPLI************       ERRORSYNTAX      ****** PROC DB@@@@BH
)@@G@@)[0[Y@)@@@@@EXECUTM NOT PERFOR******999   UE > 9EL VAL   LAB************BI
)@@G@@ALUE  DC@@@@)[;[Y@)@@@@@AND FOL COMMILLEGAPROC  ND IN ES FOUNO LINRROR. BJ
)@@G@@NTAX E TO SYED DUEDD@@@@)]A[Y@)@@@@@PROC  OR IN AL ERR***FATCEEDED 50 EXBK
)@@G@@PTH OFORM DEM PERFMAXIMUUND   DE@@@@)]L[Y@)@@@@@T):   TO LASFIRST TORY (BL
)@@G@@LL HISORM CA  PERF***   G LINELLOWIN AT FODF@@@@)]W[Y@)@@@@@D SDF  NOT FBM
)@@G@@T     ELEMEND.    XCEEDEENTS EM ELEMPERFOROF 50 LIMIT DG@@@@)]$[Y@)@@@@@BN
)@@G@@NG     READIROR   I/O ERUND.  NOT FOEMENT LIC EL SYMBO.     FORMATDH@@@@BO
)@@G@@)]2[Q@)@@@@@@@@@@@ --   -->#   PROC ING TORETURN#---> C     NG PROENTERIBP
)@@G@@#---> DI@@@@)BO@I@)@@@@@)D+@"@SK[#@L@@@@@@R#E@@]/K@@#FAB@@@ER#E@@]/K@@D*BQ
)@@G@@%8@@@[R\E@@@@@@@@@DJ@@@@)D([I@WG[^CE=CE4CE=G[@K@R#!@@@/K@@E]:@)@@GRB!@@[BR
)@@G@@RBK@@FA#)@@@'^@@@@R#)@@@R#K@X*DK@@@@)D2[Q@S@^@K@@@@@@@R#X@@@/K@@D.(@H@@@BS
)@@G@@/K@@D,*WH@@@O#K@@I;C)@@SR#!@@@O#K@@I;C)@@SDL@@@@)D/[I@W[#@L]]SK)$K^G[@@@BT
)@@G@@R;@@@[A#U@@]ABK@@E/K@@AXA#@@@@R;@@@['=@@@@R#@@X(/K@@D,DM@@@@)E @Q@T@@@@@BU
)@@G@@)XN@"@)@*@@@*SDFF**[@@@@@@[@@]SS     ADDREL GOTOILLEGA/K@@#FA\E@@@DN@@@@BV
)@@G@@)XU[I@+)O)[EK@ @* @* @*@@[B@[8@#@@[D@[C@[D@[C@[L@ C@[D@[Q@@Q@@[@@@@@[@@@BW
)@@G@@@@[@]/DO@@@@)X<@"@+)O])O]) @@@@@@@@@@@@@@@@@@@@@@[^@XN      @[B@]W@[G@@QBX
)@@G@@@[B@]P@[A@]B@[^@]#DP@@@@@@^@@ @@D@@?@[-@@^@[1@@@@@@@@@@@@@@@)@@@@@@@@@EBBY
)@@G@@@@@@X%INBUF       WRKPKT      EDIT$       EDITR$      ECHAR$      ECOL$ BZ
)@@G@@      ESKIP$      ECLR$       ECOPY$      EPACK$      EDITX$      ECOLN$CA
)@@G@@      EMSGR$      LOCATE$     INSERT      PRINTL      PRINTV      IFWKR CB
)@@G@@      LET         CALL$WK     EDIT$WK     INTRP       CHANGE$     EOCTF$CC
)@@G@@      EDECF$      EDCFZ$      PINITIAL    PFS$        PRCCNT      LAST$DCD
)@@G@@      MCORE$      SDFIO       SDFI        PINPUT      PARSE0      PARSE CE
)@@G@@      SDFIC       LOPT        PRINT$      FATAL       EFD2$       PRCTBLCF
)@@G@@      STATUS      FD$BIN      PERFORM     @@#@@@@@@@@@XEQWKR      @@#@@@CG
)@@G@@@@@@#SGOTO        @@#@@@@@@@D+PBLOCK      @@^@@@@@@@@]FORM 6,6,6,18 .  ZCH
)@@G@@ 0,A('MSG'),P$(1,1),P$(1,2) .  Z 0,0,0,0 .  Z A('FPS'),A('FPR'),0,0 .  +CI
)@@G@@ 0,0 .  + 0 .  + 0 .  DO P$(0,0) , END .  + A('DPC'),A('SPC'),0,0,0,0 . CJ
)@@G@@)@@[I@T@^G[@K0^K^@@@@@@@/K@@@:/K@@@D9/@@]#9?C@@@R]@@@EAA0@@@ @@@@L/K@@@#CK
)@@G@@C9K@@[AA@@@@)@D[I@WG[^G[[@[@^@@@@@@@/K@@@>P'K@@ /K@@@F%@T)@[P'K@@ /K@@@MCL
)@@G@@2@D)@@N@K@@ R]K@E3AB@@@@)@M[Q@W[#@KK[#@K@@ @D@@^ @D@@# @D@@]9*D@@@A#)@@ CM
)@@G@@O;)@@[/K@@ 0!8)@@TR#)@@ / K@@9AC@@@@)@W[I@T]@?]=[+^[U^[*@@@@AF(@@^R;)@@ECN
)@@G@@'=@@@@A#@@@@O;@@@@ABD@@#O;@@@[R#@@@@A7(@@]AD@@@@)@>[I@WG[[#@KK0^^G[[#@K@CO
)@@G@@RB@@]BAFC@@]RF@@]AM#D)@@A]K@@#&'K@@[R#@@E4N8K@@  @@@@]AE@@@@)@,[I@WG[@[#CP
)@@G@@@L@K0^K@@@@@/K@@@;*?@@] /[K@@7A#@@@[R;@@@[ABC@@]R;@@ZK!8@@ZLOF@@]BAF@@@@CQ
)@@G@@)@7[A@WG[^G[[#@L#@KK0^K0^@@@@@AA0@@@/K@K@@A#C@@]R#@@E5/K@K@@ @C@@]/K@K@@CR
)@@G@@[!K@] AG@@@@)@_[I@T#@L@^G[^G[[#@K@@@AFC@@]RF@@]AM]W)@@R]K@@#R#@@E4N8K@@ CS
)@@G@@/K@@[E(@@@@[R]@@@EAH@@@@)[C[I@WG[^G[[#@KK[#@K@@@R]@@@EAA0@@@C9@@@[/K@@[JCT
)@@G@@ @@@@K/K@K@@ @C@@]/K@K@@ @@@@[AI@@@@)[L[I@WG[^@K0^K@K@@@@@@@!8K@ZL/K@@]HCU
)@@G@@0@@@@HRFS@@]/K@@ S9/@@]#9?C@@@/K@@ S(@@@@[AJ@@@@)[U[I@W[@K0^K0^@K^@@@@@@CV
)@@G@@/H@@]U/K@@] 2WW)@@RFS@@]&;@@@[RB@@]ANCK@]A/@K@["/K@@]HAK@@@@)[<[Q@T@K^[@CW
)@@G@@@@@@@@&;@@@[;C@@@G;*@@@GR#G@@@P;@@@[/K@@]K8KK@[(/[@@[*/K@@^1!9@@@]AL@@@@CX
)@@G@@)[![Q@SK0^@@@@@@@@ @@@@HP;)@@[AF*@@#RB?)@@ABS@@]R;K@ZK!8K@ZLOFK@]BAFS@@]CY
)@@G@@RFW@@@AM@@@@)[7[Q@S@^G[^[#@L@@/K@@]K(C@@]A/-@@]K/K@K@@M#W)@@&;K@@[RBS@@#CZ
)@@G@@N@K@@HO;K@@[W8K@@AAN@@@@)][[I@WG[[@K^[#@L#@K@@@@RFS@@]&;@@@[RB@@]ANCK@]ADA
)@@G@@/H@@#E/K@@[(/K@@^.%9@@@[RB@@]AAO@@@@)]E[I@T@K^G[[@^G[^G[@@@@OF@@]BRB@@]BDB
)@@G@@ CC@@#/-@@]QAFC@@#R#@@E5/K@@[</K@@]K5WW)@@AP@@@@)]N[I@S[#@L#@L@K0^@@@@@@DC
)@@G@@P;)@@[RF)@]A/K@@[JC[@@E5/K@K@@ CC@@]ABC@@]R;@@ZK!8@@ZLAQ@@@@)]W[Q@WG[[@@DD
)@@G@@@@@@@@RF*@@#C[K@@G;C@@@G;*@@@GR#G@@@N@0@@GP;@@@['^@@ &!8K@X?AF)@]AAR@@@@DE
)@@G@@)]&[Y@S@@[@@/K@@^Q:@K@@IO;)@@[W8)@@A @@@@IO;0@@ RB/@@@O;K@@[W8K@@A @@@@HDF
)@@G@@O;)@@ AS@@@@)]1[Q@T@[@K[@K@@@@@@@@@@/K@@#Y'^@@]'R#0@@L/K@@^Q'^@@]'K@)@@LDG
)@@G@@P#)@@H/K@@]7!@K@@IAT@@@@)];[I@T#@L#@KK[@K0^@@@@@!9@@B4C[@@]C/K@@#BP')@@[DH
)@@G@@/K@@#]2XE)@@R])@E6N@K@]C @@@@KAU@@@@)#^[I@W@K0^[@^[#@K@@@@@@RF@@]A'^@@ &DI
)@@G@@!8K@X?/K@K]'AZ%@@@A#'@@@[[@@]CG9@@@[/K@K]'AV@@@@)#H[Q@S(@S)]A@)C@@&;@__"DJ
)@@G@@O#@@[[/K@@#X5WW)@@&;@@@[RB@@]AN@K@@G/K@@]H!8@@@@ @@@@KAW@@@@)#R[Y@S@@@@@DK
)@@G@@W8@@@A @@@@GO;K@@ RFS@@#N@0@@GM#D)@@N@K@@IO;)@@[R#)@[[P'K@@[R]K@@GAX@@@@DL
)@@G@@)#+[I@T#@L@K0^K0^^@@@@@@R#!@@@P;K@@[/K@@#\2WH)@@R#K@E6N@K@]C/K@@#.(@@@]CDM
)@@G@@O;@@@[AY@@@@)#:[Q@S^[#@L#@KK@@CXH@@@P;K@@[/K@@#.5WH)@@R#K@E6N@K@]C/K@@^LDN
)@@G@@;C)@@G;*)@@G @H@@@AZ@@@@)#5[Q@S@[@K0^K0^@@(C@@@^RF)@@^/K@@^L[XH@@@A#.@@@DO
)@@G@@K@)@@G;C)@@G;*)@@GR#!@@@H[@@@GBA@@@@)#_[I@W@K0^K^G[^@K)F@@@@O;@@@[R#@@@@DP
)@@G@@R#0@@G/K@@^LAF0@@^/K@@^ !^0@@^K@)@@G/K@@^ BB@@@@)^C[I@SK0^^C]4C#KK0^@@@@DQ
)@@G@@AF0@@^K@)@@GR#@@@J'=@@@@A#@@@@P;@@@[AB@@@^O;@@C@R#)@@GBC@@@@)^L[Q@S@@K0^DR
)@@G@@K0^@@@ABK@]B!^K@]BAFW@@@RFS@@]&;@@@[R#@@@IAZT@@@RFS@@]A#(@@@R]K@[#BD@@@@DS
)@@G@@)^V[Q@WG[@@@@@@@@@O;K@@[W8K@@A @@@@HP;)@@[AB?)@@RF*@@#ABS@@]R;K@ZK!8K@ZLDT
)@@G@@OFK@]BBE@@@@)^>[I@S[#@KK0^K0^@@@@@@@C9@@@]/K@K@@AFK@]AO;K@@[RFK@]AM#D)@@DU
)@@G@@&'K@@[RAS@@#N@K@@HBF@@@@)^,[Q@W@K[@@K0^@@@CXX@@@!^K@]A @@@@LL8@@@[P;@@@[DV
)@@G@@/K@@^;%9@@@]/K@@[JC9@@@#/K@@[JBG@@@@)^8[I@SK^[@^G[[#@K@@@@@@AF)@]AP;)@@[DW
)@@G@@RF)@]AC[S@@]/K@@]K8KK@^"/K@@^"GDS@@];(K@@MBH@@@@) [[Y@S@@@@@R#@@@J;C0@@GDX
)@@G@@;*0@@GM#D)@@O'K@@[R]K@@GNW?@@[*@@@@H @@@[]R#K@[[R#/@@@BI@@@@) G[Q@S@^@^GDY
)@@G@@[@@@@@/K@K@@^C*@@#[[S@@]'^@@]'R#)@@HO;K@@[W8K@@A @@@@HO;)@@ RB?@@@BJ@@@@DZ
)@@G@@) Q[A@WG[@()C-@@-)CCK#@@@@@@@@9?C@@@/,0@@@C8K@@ C8@@ET/,0@@@C/@@D./KF@@@EA
)@@G@@AF@@]BBK@@@@) Y[A@WC#=G[[]@T]@-#@L]@.][@@@'=@@@@'=@@@@R#@@E7/,0@@@/,0@@@EB
)@@G@@C8K@@%C8@@EU/,0@@@BL@@@@) &[I@T#@L@[#@L#@L]@/@@@R#@@[['=@@@@R#@@E8A#@@@]EC
)@@G@@R;@@@[N@K@@G/K@K &*@@@@]@@@@@@BM@@@@) \[I@W@K0^K)JK0^]&@+^@@C9@@@^/,0@@@ED
)@@G@@C/@@D.C9K@@^R]K@E''=@@@@R#@@E9 @C@@@/K@K &BN@@@@) 8[I@SK)#^C#=[]@-#@L]@/EE
)@@G@@'=@@@@R#@@E;/,0@@@8^@@ 8/,0@@@9?D)@@/,0@@@T8@@@JR#@@@KBO@@@@)A[@Q@W[#@K@EF
)@@G@@)@@@6@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/K@K@@8^K@ 5BP@@@@EG
)@@G@@)]C@I@)@@@@@)D.@6@+)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[[@@@@@@@@@@@&Q@E#EH
)@@G@@@@@@@@BQ@@@@)ET[Y@)@@@@@E NUMBG: LINWARNINRITE  READ/WOR TO ED PRITIALIZEI
)@@G@@OT INI WAS NPROC  BR@@@@)E=[Y@)@@@@@S HAVE5 PROCM OF 2MAXIMUD.    ALLOWEEJ
)@@G@@E NOT 000 ARTHAN 2EATER ERS GRBS@@@@)E\[Q@)@* @E[KE@@@@[E@E-@[E@E#@@[@]DEK
)@@G@@_____"@@[@]#@@ @@AT:    N INPUDY BEE ALREABT@@@@)E9@Y@+)O])@@@@@@@@@@@@@EL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[G@E#@@#@@A@[C@E:BU@@@@@@@@@@T@K^G[EM
)@@G@@[@^G[^G[@@@@OF@@]BRB@@]B CC@@#/-@@]QAFC@@#R#@@E5/K@@[</K@@]K5WW)@@AP@@@@EN
)@@G@@@@^@@ @@D@@L@@:@@G@[V@@@@@@@@@@@@@@@)@@@@@@@@@A#@@@@E/EDIT$       EDITR$EO
)@@G@@      ECHAR$      ECOL$       ESKIP$      ECLR$       ECOPY$      EPACK$EP
)@@G@@      EDITX$      ECOLN$      EMSGR$      LAST$D      PRMXLN      MCORE$EQ
)@@G@@      EFD2$       PRINT$      EXIT$       PF$AMS      @@#@@@@@@@@@PF$AMIER
)@@G@@      @@#@@@@@@@@]PF$AMF      @@#@@@@@@@@"PF$AMR      @@#@@@@@@@[GPF$AMNES
)@@G@@      @@#@@@@@@@[IPF$AMW      @@#@@@@@@@]SPF$AMD      @@#@@@@@@@^!PF$AMDET
)@@G@@N     @@#@@@@@@@^\PF$AMQ      @@#@@@@@@@ QPREPKT      @@^@@@@@@@D.PRCPKTEU
)@@G@@      @@^@@@@@@@]#PREBUF      @@^@@@@@@@E#) EQU P$(I+1,2) . Z FORM 6,6,6EV
)@@G@@,18 .  Z 0,A('MSG'),P$(1,1),P$(1,2) .  Z 0,0,0,0 .  Z A('FPS'),A('FPR'),EW
)@@G@@0,0 .  + 0,0 .  + 0 .  +)@@[##@L#@L#@L@K0^K0^K0^K)K@@@'=@@@@C@@@EI9*@@B5EX
)@@G@@9?@@EG'^@@[RA@)@C=A@K@C<A]0@C+AA@@@@)@C[EK^G[^[#@KK0^^G[@@@@R@K@EJ9*E@@]EY
)@@G@@9?@@B99*E@@^9?@@B7/@@@]KC@@@B7/^@@]K;C@@@YAB@@@@)@L[N#@L@K@K@K^G[@C@@@C$EZ
)@@G@@/K@@@M9/[@@]9?E@@^/K@@@M9/[)@^9?E@@]/K@@@)8KK@@ON@K@C$AC@@@@)@V[EK0^K0^KFA
)@@G@@0^K^G[@K)L@@'=@@@@!8@@@UO;@@@[C@@@C$/K@@[J9*@@C>C@K@ELG@@@EKH@@@[[AD@@@@FB
)@@G@@)@=[F#@K@K0^^G[^G[@@@@@@C@@@C$9*[@C%9?E@@^9*[@C*9?E@@]R@K@@GT8@@@^H8@@@[FC
)@@G@@[@@@C$AE@@@@)@![##@L#@L#@L#@K()C-@=O0^K)@@/,0@@@C/@@B_'=@@@@C8@@CS9*@@CUFD
)@@G@@9*@@C>C@K@ELG@@@EKAF@@@@)@5[EK)]K0^K)C^C[^G[^C]KC/@@@,/,0@@@9?@@C>/,0@@@FE
)@@G@@C/@@@[/,0@@@C@@@EM/,0@@@C/@@@@AG@@@@)@"[F]@CK)D^C@-]@=K)]@@@/,0@@@C/@@@.FF
)@@G@@/,0@@@9?E@@^/,0@@@C/@@@*/,0@@@9?E@@]/,0@@@AH@@@@)[B[]K)^^C@=C]+&@+^]M@@@FG
)@@G@@@@@@@@/K@@[J'=@@@@C8@@CC/,0@@@/,0@@@C/@@@./,0@@@C/@@@#AI@@@@)[J[F#@L#@L#FH
)@@G@@@L#@KK0^@@@@@@@@@@/KF@@@ @@@@GR]0@C+/KF@@@9?@@C>R@)@C=R@K@C<R]0@C+AJ@@@@FI
)@@G@@)[S[E()C-@@CS]C]A@+@CK^)/,0@@@9?E@@]/K@@[-:@@@EN/K@@[<:@@@ELC@E@@]/,0@@@FJ
)@@G@@C/@@B_AK@@@@)[-[EK)]^C]L]@CK)]@@@@@@C/@@@./,0@@@C/@@@ /,0@@@C/@@@./,0@@@FK
)@@G@@9?E@@^/,0@@@C/@@@*AL@@@@)[%[#]@D]@(#@L#@K()C-@=) G[@@@C8@@CO/G@@[8'=@@@@FL
)@@G@@C8@@CA9*@@CA9?@@CZ/,0@@@/,0@@@AM@@@@)[2[#][D#@L#@K()C-@=)CS]CS]@@@R#@@EOFM
)@@G@@[@@@C-/K@K[R'=@@@@C8@@CA9*@@CA9?@@CX'=@@@@AN@@@@)['[#][G()C-@@-)C-@KCK[CFN
)@@G@@S]@@@@9?@@EQ/,0@@@C/@@@ /,0@@@C@@@EP/,0@@@C/@@B_'=@@@@AO@@@@)]][#]@=K)]KFO
)@@G@@0^^C#OC]=G[@@@@@@@R#@@ES/,0@@@/,0@@@C8K@@GC@@@C-/,0@@@C/@@@ /,0@@@AP@@@@FP
)@@G@@)]E@;][GK)O^C O[][^@@@@@@@@@@@@@@@@@'=@@@@/K@@[O[@@@@@C8@@[>[@@@@@C8@@@[FQ
)@@G@@'=@@@@AQ@@@@)@@@I@)@@@@@)B_@"@+)@@@@@@@@@@ERROR:@@@@@@@@@@@@@@@@@@[[@@@@FR
)@@G@@@@@@@@@&G@CC@@@@@@AR@@@@)CO@6@)@@@@@)CW@Y@)@@@@@D$000,@USE E .    A     FS
)@@G@@@FREE,      00.  .A ED$0@FREE,AS@@@@)CZ@6@)@@@@@)C$@I@)@@@@@@@@@@@@@@@@@FT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @ASG,AAT@@@@)EG[Q@)E[K@])@@@@@@@@FACFU
)@@G@@@[H@C *     @@@USE      ED$00 @@^@C=@@E@B5      ED$000AU@@@@)EQ@Y@)E@@@@FV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[G@CCECTED:@@@REJAV@@@@FW
)@@G@@@@^@@ @@D@@Q@@5@@#@[[@@@@@@@@@@@@@]L)@@@@@)@@@@@@@@@ETEDIT$       EDITR$FX
)@@G@@      ECHAR$      ECOL$       ESKIP$      ECLR$       EOCTV$      EDECV$FY
)@@G@@      EFD1$       EFD2$       EDITX$      ECOLN$      EMSGR$      EOCTF$FZ
)@@G@@      EDECF$      EDCFZ$      FITEM$      ERR$        CSF$        PRINT$GA
)@@G@@      FATAL       STATUS      PINITIAL    @@[@@@@@@@@@PRCCNT      @@^@@@GB
)@@G@@@@@@@@PRCTBL      @@^@@@@@@@@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GD
)@@G@@)@@[N@@^@K0^@@@@@@RBG@@CRBE@@@9*@@@@9?E@@@A#@@]L/KG@@@*^E@@[CCE@@[ CE@@@GE
)@@G@@AA0@]KAA@@@@)@E[M@@K0^K)@K@@@@/K@@]P/,0@@@9*K@@L9?W@@BRBE@@@[^E@@[C8@@@[GF
)@@G@@ @C@@@R]@@@GP;@@@[AB@@@@)@O[V@[@@K@@;C@@@SR#G@@E ^E@@[/K@@@WAFU@@@O;K@@[GG
)@@G@@RFU@@@/K@@@M**G@@ERBE@@@/K@K]LAC@@@@)@Z[N@@K0^^@@@@@@@C@G@@@G@@@@CN@0@@GGH
)@@G@@/@@K]KH8@@@[:@K@@NC@X@@@G@K@@CC@K@@G/@@K]KAD@@@@)@([N@@[#@L@K@@@@@RBE@@@GI
)@@G@@/K@K]K/K@@@2*@@@@K[^C@@@G@@@[[T8@@@AH8@@@[C@@@[#'^@@[UAE@@@@)@3[EK0^@()CGJ
)@@G@@CK@C]@@@@@@@/K@@]M/K@@]P/,0@@@ABW@@CR;K@@]ABW@@BR;K@@I9*K@@L9?W@@BAF@@@@GK
)@@G@@)@/[M^@[#@K@@@@@@@;C@@@SR#G@@E9*W@@B9?K@@LAFU@@@O;K@@[RFU@@@/K@@@9**G@@EGL
)@@G@@RBE@@@AG@@@@)[A[F@[#@L#@KK@@@@@@@@@@H8@@@[N@0@@G/@@K]KH8@@@[:@K@@NC@X@@]GM
)@@G@@H8K@@[C@K@@G/@@K]KAH@@@@)[J[N#@L@@[@K0^K@@/K@@@2*@@@@K'^@@[(N@0@@GG@@@[[GN
)@@G@@T8@@@AH8@@@[C@@@[#'^@@[UC@G@@]AI@@@@)[T[N@@[@K^C@OG[@@ @@@@K'=@@@@8KK@[WGO
)@@G@@/K@@[+%8K@@ ;CK@@Y;G@@@AN8K@@A@@@@@@/K@K]KAJ@@@@)[<[MK^G[^[]@ @@@@[ S@@@GP
)@@G@@K[@@[#C C@@@@@@@@@/K@K[U'=@@@@8KK@[*[@K@@K/K@K[U%8K@@;AK@@@@)[![U@@^[@@@GQ
)@@G@@C@@@@L/K@K[(8K0@[7G9@@@[&'K@@[R]K@@JG80@@[G@0@@CW80@@A @@@@JC9K@@[AL@@@@GR
)@@G@@)[8[U@K@@K@@')H@]EW8@@@A;G@@@=H8@@@[G9@@@[C@@@@K')H@]^W8@@@A;G@@@=H8@@@[GS
)@@G@@G9K@@[AM@@@@)]#[#@K0^K0^K0^K0^K0^K0^@@@@@@[49@@@C)/@@]C=/@@]C*/@@]C?/@@]GT
)@@G@@C0/@@]C4/@@]/K@@[5AN@@@@)]F[U@@[@@@@ CE@@@/K@K]K[^E@@[C8@@@[@@@@@@@@@@@@GU
)@@G@@[)9)@@[=9@@@[*9@@@[?9@@@[09@@@AO@@@@)]Q@F@@@@@@@)@K@I@)@@@@@)@N@I@)@@@@@GV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@@/K@K]KAP@@@@@@^@@ @@D@@]@@H@@[@@L@@@GW
)@@G@@@@@@@@@@@@]R)@@@@@)@@@@@@@@@@OSDFI        ERR$        PINPUT      @@[@@@GX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GY
)@@G@@)@@[I@WG[[][K^C @(@%@@@@G')@@[C')@@@C;@@@Q*@@@@@C;@@@GC'0@]^*@@@@@C'0@[CGZ
)@@G@@AA0@@@AA@@@@)@D[I@SK^G[[][T@^C 0@@@@'^@@@@9?E@@]/K@@@P @@@@@H'@@@^C[0@[OHA
)@@G@@/K@@@K?'@@@ C,E@@@AB@@@@)@M[I@S]=]*-)C-@?@@@@@@@P;@@@[*@@@@GR#@@@@A#@@@JHB
)@@G@@O;@@@[R;@@@@G90@@[(@@@@NC[0@@GAC@@@@)@V[A@WC =[@K0^K)Q^C =C#@@@@@@:@@@@@HC
)@@G@@A#@@@@O;@@@[R#@@@@/K@K@@8^0@@Z/H0@@ZA#@@@@AD@@@@)@<[A@W[#@K()C-@0-)C)CS]HD
)@@G@@CKA@@@A#@@@@R#@@@I/K@@@0*W@@@K/,0@@@R')@@IA#@@@I/K@@@!AE@@@@)@:[A@WG[^C HE
)@@G@@L@K^CAOC =G[@@@@@@/K@K@@ @@@@@'^@@@@/K@@@W'^GK@3R#@@@OA#@@@@RB@@@KAF@@@@HF
)@@G@@)@3[A@S/S@JA@#1)@/S@[][O@@@@@@C[K@@@C]K@@Q@@@@@@@@@@[3@@@@]T@@@@[E@@@@@8HG
)@@G@@@@@@@@AG@@@@)@;[Q@S()C-@@@@-@U/,0@@@G]K@@SR#@@@PH[K@@HR#K@@L!@K@@LR#K@@RHH
)@@G@@/,0@@@C/@@@LT9K@@AAH@@@@)[ [I@WC[=G[^CA=[@[][O@@T9K@@AC[K@@@C]K@@Q@@@@@@HI
)@@G@@/K@K@8/ K@@/'=@@@@R#@@[P/,0@@@AI@@@@)[I[A@U&@+^@]^[)-@OCK[@@@@@@@@C/@@@[HJ
)@@G@@/,0@@@C/@@@:/,0@@@C8K@@EC@@@@@/,0@@@C/@@@LAJ@@@@)[Q[Q@WC[@@@K)H@@@/,0@@@HK
)@@G@@H'K@@]G]K@@SR#@@@PH[K@@HR#K@@L!@K@@LP;K@@GR#K@@R/,0@@@AK@@@@)[)[A@WC[=G[HL
)@@G@@^CA=[@ES]CK@@@@@@@R#K@@R/,0@@@C/@@@L/K@K[E/ K@[>'=@@@@R#@@[P/,0@@@AL@@@@HM
)@@G@@)[*[I@S@K)HK)AK0^K)U@@@@'=@@@@R#@@[P/,0@@@/,0@@@G]K@@SR#@@@PH[K@@HR#K@@LHN
)@@G@@!@K@@LAM@@@@)[1[Q@W[@[][O@ES]@C/@@@LH9@@@];D@@@[C[@@@ST9K@@AC[K@@@C]K@@QHO
)@@G@@@@@@@@/K@K[E/ K@[>AN@@@@)[;[I@WC@^C#[]@*K)]^C[^@/K@@]D/,0@@@C/@@@[/,0@@@HP
)@@G@@C/@@@:/,0@@@C8K@@EC@@@@@/,0@@@AO@@@@)]^[Q@S]&@+^@@@@@@R;K@@GH[K@@HR#K@@LHQ
)@@G@@!@K@@LR;K@@A/,0@@@C/@@@LH9@@@[;D@@@[C[@@@SAP@@@@)]I[I@S^C]L@K)AK0^K)U@@@HR
)@@G@@'=@@@@R#@@[P/,0@@@8^@@]D*@@@@L/,0@@@G'K@@[R#G@@@R#@@@PAQ@@@@)]R[I@W[@@()HS
)@@G@@C-@@-@SCK @@/,0@@@C8K@@EC@@@@@/,0@@@C/@@@LR[)@@Q@@@@@@/K@K[3/ K@]^AR@@@@HT
)@@G@@)])[I@WG[[]@5]@SK[#@L@@@/K@@]5:WK@@]RZQ@@[/K@@#6(@A@@@/,0@@@/,0@@@C8K@@KHU
)@@G@@C8@@@SAS@@@@)]([I@WCA0K[@^@@@@@@@@@@&;@@@[/K@@]:O#@@@I/@)@ ,RR?@@@/K@@]1HV
)@@G@@:WW@@@O;@@@WRB@@@@AT@@@@)]2[A@WG[@ES]CK@*S]]^[*@@@@@@@/,0@@@C8K@@YC8@@@#HW
)@@G@@/,0@@@C/@@@LM#W)@@N8K@@AR#K@[QAU@@@@)]'[I@WC[=G[^CA-][0[#@K@A#@@@[9!@@@IHX
)@@G@@R]@@@KC[)@@H'^@@@@R#A@@@'=@@@@R#@@[P/,0@@@AV@@@@)##[A@U&@+^@]A@)-@U-)CCKHY
)@@G@@^)@@@@/,0@@@C8K@@GC@@@@[/,0@@@C8K@@AC8@@@V/,0@@@C/@@@LAW@@@@)#F[I@W[#@KKHZ
)@@G@@)H^CBL]@C@@@C@@@@K/,0@@@C/@@@//,0@@@9?C@@[/,0@@@C8K@@#C8@@@W/[)@#TAX@@@@IA
)@@G@@)#O[A@WC^[]@CK)KK)AK0^K)U@@@@@'=@@@@R#@@[P/,0@@@/,0@@@C@@@@L/,0@@@C/@@@/IB
)@@G@@/,0@@@AY@@@@)#W[I@T][O^@ES]CK@C@@@@@'^@@^E/,0@@@C/@@@LC9)@@]/K@@#&%^A@@@IC
)@@G@@P;@@@[R#@@@@O9)@@[AZ@@@@)#>[I@W@ES]CK@CS]]^[%@@@O &@@@'^@@^E/,0@@@C8K@@^ID
)@@G@@C8@@@X/,0@@@C/@@@LC9)@@[/K@K]TBA@@@@)#,[A@S()C-@@-)CCKA*]@@@@@@@@@/K@K]TIE
)@@G@@'^@@^E/,0@@@C8K@@^C8@@@Y/,0@@@C/@@@L @@@@MBB@@@@)#6[A@U&@+^@CCS]CKI*S]@@IF
)@@G@@@@@@@@C8K@@FC8@@@(/,0@@@9?G@@Z;*@@@[RZA@@[/,0@@@C/@@@LBC@@@@)#"[A@WC#L#@IG
)@@G@@L][^K)^^C#0@@@@@@@/,0@@@R#A@@]/,0@@@C/@@@[/,0@@@R#G@@:RZA@@[/,0@@@BD@@@@IH
)@@G@@)^A[I@WC[=G[^CA=@K0^^C#KR;K@@G/,0@@@C8K@@KC8@@@0@@@@@@/K@K]T'=@@@@R#@@[PII
)@@G@@/,0@@@BE@@@@)^J[I@T]@>]@T#@L][*^G[^@/K@@^?:WW@@CRZQ@@@R#@@@M'=@@@@R#@@[PIJ
)@@G@@/,0@@@/,0@@@R#A@@@BF@@@@)^S[I@WG[[#@KK[@^@@@@@@@/K@@^VO#@@@I/@)@^-RR?@@@IK
)@@G@@/K@@^&:WW@@@RB@K@F(@@@@GRBGK@FBG@@@@)^-[Q@T@[@@^G[@@@@AR?@@CR#@@@MRR?@@[IL
)@@G@@C9)@@]:9)@@#/K@@^S @@@@GC9)@@#/K@@ ,%9)@@]BH@@@@)^:[Q@WG[^G[@K@@@@H9@@@#IM
)@@G@@;D@@@[C[@@@SG'K@@[C]K@@A/[K@ IH9K@@[C[)@@LCPW@@CAZW@@CBI@@@@)^5[I@U&@+^@IN
)@@G@@]A@)-@U)@@@@H9@@@];D@@@[C[@@@S/K@@ @/,0@@@C8K@@HC8@@@3/,0@@@C/@@@LBJ@@@@IO
)@@G@@)^"[I@U&@+^@@@CK^)@@@@@@C/@@@[/,0@@@G'K@@[R#G@@@R#@@@PR;K@@GH9K@@[/,0@@@IP
)@@G@@C/@@@LBK@@@@) B[I@WC[[@K)AK0^K)UK@@@H[K@@MC Q@@@/ K@^;'=@@@@R#@@[P/,0@@@IQ
)@@G@@8^@@ @*@@@@L/,0@@@BL@@@@) K[I@S^@()C-@@-)CCKA)@@/,0@@@C8K@@AC8@@@6/,0@@@IR
)@@G@@C/@@@L/[K@ !G]K@@MC]K@@AT9K@@ABM@@@@) T[Q@S^@()C-@@@@@H[K@@HR#K@@L!@K@@LIS
)@@G@@R#K@@R/,0@@@C/@@@L/K@@ ) @@@@VP;K@@AR#K@@RBN@@@@) <[I@SK@K)HK)AK0^K)U@@@IT
)@@G@@'=@@@@R#@@[P/,0@@@/,0@@@C;0@@[H'K@@[/B0@ *G]K@@SR#@@@PBO@@@@) ?[I@W[@[#@IU
)@@G@@K()C-@@-)C@@C8K@@OC8@@@7/,0@@@C/@@@LA#K@@[;CK@@S;*K@@S/K@K^E/ K@ XBP@@@@IV
)@@G@@) 5[A@WC#OG[[]@>#@KK)HK)G@@@@@C@@@@@/,0@@@C8K@@MC8@@@;/,0@@@C8K@@ C@@@@[IW
)@@G@@/,0@@@BQ@@@@) .@,@WC^^C[=G[^CA=@@@@@)@@@Q@)@@@@@@@@@@@@@@@@@/K@K]T'=@@@@IX
)@@G@@R#@@[P/,0@@@/,0@@@BR@@@@)@]@I@)@@@@@)@C@6@)#1)C^<1)C^31)C^0@@@@@@@@@@@@@IY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BS@@@@)@I[Y@)])@@@: RECOEOF:  @@@@@@@@@@@@IZ
)@@G@@@@@@@@[[@@@@@@@@@@@&Q@@"@@@@@@@@@@@@@@@@@@BT@@@@)@T[Y@)@@@@@END-OF      JA
)@@G@@AREA              OLD   NEW    -    DBP - E -   RD TYPBU@@@@)@=[Y@)@@@@@JB
)@@G@@OWNER:SET:  AREA:       OL -   CONTR      DIRECT      OWNER -SET  BV@@@@JC
)@@G@@)@\[Y@)@@@@@RD CODN RECOUNKNOWDATA:       RS:   SET PTR -    HEADERECORDJD
)@@G@@KEY:  BW@@@@)@'@&@)@@@@@)[O@Y@)* @@@@@@@@@@@@@@@@@[@@]@[Q@@"_____" LINE JE
)@@G@@TED AT DETECE     BX@@@@@@^@@ @@D@@Y@[ @@[@[D@@@@@@@@@@@@@@@)@@@@@@@@@A]JF
)@@G@@@@@@[REDIT$       EDITR$      ECHAR$      ECOL$       ESKIP$      ECLR$ JG
)@@G@@      EDITX$      ECOLN$      EMSGR$      EOCTF$      EDECF$      EDCFZ$JH
)@@G@@      RDALN       ECOPY$      EPACK$      EOCTV$      EDECV$      EFD1$ JI
)@@G@@      C5          C11         POPT        RDA         LN          FD$BINJJ
)@@G@@      TF$RMR      SENDEOF     PRINT$      C8          DBP$APS     EFD2$ JK
)@@G@@      PRINTL      @@#@@@@@@@@@$(0)<4)+P$(0,3) 12,+(E$AD 0,1) .  DO P$(1)JL
)@@G@@>0 , LA,14 13,P$(1,1) . )@@[I@WG[^G[[#@KK@K0^@@@A#@@@[R;@@@[ @@@@V/K@@@DJM
)@@G@@%;0@@] @@@@[C\'@@@A])@@ AA0@@@AA@@@@)@D[I@S@K)F]&@+^@@@@@@@@/,0@@@C/@@@PJN
)@@G@@C9)@]^*@@@@@C9)@[CCX'@@@O90@@]R[0@@E @@@@TAB@@@@)@M[I@WC[-#@KK[@^G[@@@@@JO
)@@G@@/K@K@@0@@@@H'^@@]<G;K@@[/K@@[.:@@@@NP#@@@ R#@@@B/,0@@@AC@@@@)@V[Q@S[@^@KJP
)@@G@@@@@@@@C]0@@J/K@@[,:80@@^/K@@@&:80@@#/B0@[LC'0@@[C])@@GR[)@@IR[K@@HAD@@@@JQ
)@@G@@)@>[Q@W@K^@@K@@@@@;?K@@A')A@]Q&9)@@[&9K@@[ @@@@I @@@@H/K@@ ;8 )@@(N[@@@QJR
)@@G@@/K@@[LAE@@@@)@\[I@SK[@K0^K0^K0^K0^@@A#@@@CA#@@@BA#@@@AR#@@[88 )@@!Q9)@@[JS
)@@G@@/K@@@3$9)@@AO#)@@GAF@@@@)@8[Q@WG[^G[@^@@@@O;)@@0W8K@@E @@@@HR#)@@H/@K@[AJT
)@@G@@R;0@@ R#K@@IN[)@@HW@K@['R[@@[9AG@@@@)[][Q@W[@^@K@()CC@/K@@@.R;0@@]Q9@@@BJU
)@@G@@ @@@[A/@K@[GR#K@[A/K@@@.R;0@@ 8#0@@.')J@]XAH@@@@)[G[I@T#@L#@L#@K^[@@@@@@JV
)@@G@@&9K@@[/K@@ ;8 )@[OO[0@@UC'0@@]R W@@DR!?@@DCY?@@DR#@@[^AI@@@@)[P[I@S@()C-JW
)@@G@@@]-@IC@@@@@@'^@@]]!@@@@M/,0@@@/,0@@@C/@@@PC'K@@[:'0@@[ @@@@P&9)@@[AJ@@@@JX
)@@G@@)[Y[Q@W[@K@K@^C@)@/,0@@@R;@@@ *@@@@Q @@@@P/K@@[$%8@@@0C'K@@[/AK@[$/B0@['JY
)@@G@@')A@]QAK@@@@)[*[I@T@^[]@T@]&@+^@@@@@/,0@@@C/@@@1C]!@@@/K@@@N/,0@@@8 )@[VJZ
)@@G@@Q9)@@[/K@@[:$9)@@AAL@@@@)[1[I@SK)GK)AES]@C@@@@@@/K@@[LC'0@@[C')@@GR9)@@[KA
)@@G@@R9K@@7/,0@@@/,0@@@R;K@@GR#@@@QAM@@@@)['[A@T]@1@ES]CK@*]^@2A@)@@@@@/K@K@@KB
)@@G@@/,0@@@'^@@]]/,0@@@C/@@@P/K@@[*/,0@@@R;K@@]AN@@@@)]][A@T]@T#@L]@5#@L@K)IKKC
)@@G@@@@@@@@/K@@]G(@@@@@/K@@]G(@@@@['=@@@@R#@@[;/,0@@@@@@@@@AO@@@@)]E[I@U&@+^[KD
)@@G@@9N@L]@[@@@@@C,!@@@C2!@@@C6!@@@/S@@@@/K@K]]/,0@@@C/@@@P'=@@@@R;@@@]AP@@@@KE
)@@G@@)]N[Y@S@@@@@A7=)@@R< )@@R$ @@@R: @@@R\ @@@R3 @@@R7 @@@/S@@@@C+!)@@C&!@@@KF
)@@G@@C%!@@@AQ@@@@)]Y@,@S@@@@@)@@@&@)])@@@@@2@@V@@@@@@@@@@@@@@@@@@A<=@@@A$=@@@KG
)@@G@@A:=@@@A\=@@@A3=@@@AR@@@@)@^@Q@)@@@@@)@D@6@)* @* @*@@@@@C @@B@A[@@C@ ]@@CKH
)@@G@@@#^@@C@[A@@C@@@@@@@@@@@@@@@@@@AS@@@@)@J@6@+)O])O])O@@@)]<@Q@S@@@@@*CB@@@KI
)@@G@@@@@@@@@M[@@A@L]@@A@J^@@A@HA@@A@G[@@B@E#@@BAT@@@@)]>[Q@W@K^@@@@@@@@C[K@@GKJ
)@@G@@ @@@@KO;K@@[R#K@@BR;)@@[R;0@@[/@@@^!/G@@]4RJB@@@/K@@#FAU@@@@)]\[Y@S[@@@@KK
)@@G@@ @@@@KO;K@@[R#K@@BR;)@@[R;0@@]RRB@@@/K@K]<C#)@@KG9@@@]W9@@@AH9K@@[AV@@@@KL
)@@G@@)]'[Q@S@[@K)KK@@@@/K@@# '^@@@@/K@@#^:9@@@0C5H@@@C#)@@KG9@@@]W9@@@AH9K@@[KM
)@@G@@C[K@@GAW@@@@)#^[I@W[#@KES]@)]@@@@@@@/K@@#K*^B@@@/K@K]<R;0@@#R;)@@[R;K@@'KN
)@@G@@R;@@@AA#@@@''^@@^TAX@@@@)#H[Q@SK@K@K@@@@@@R#B@@[/K@@#!%8@@@)R:B@@@/K@@#XKO
)@@G@@1@@@@GRJB@@@/K@@#$ @@@@GC;)@@[AY@@@@)#R[I@WG[^C^OC^=@K@K)N@@'^@@@@ @@@@GKP
)@@G@@R])@@G/K@@#$C;)@@]/K@@ 9*@@@@@'^@@@@R#K@@;AZ@@@@)#)[I@T@[@K^C^[][G@@@@@@KQ
)@@G@@'^@@@@RE$@@@'^@@@@/@@@ A/K@@ G:80@@[C;)@@[/K@@^.0@@@@HBA@@@@)#([Q@T@K^@^KR
)@@G@@@@@@@@R\?@@@RFB@@@R])@@H/K@@^K!8K@@^+8@@@B/K@K]</@@@ ;/K@@ R0@@@@HBB@@@@KS
)@@G@@)#3[Q@S[@@^C @@@@@!CK@@@P;K@@[RZX@@[R\!@@@%8)@@[/@K@^]RFR@@[;C@@@S;*@@@SKT
)@@G@@RZG@@[BC@@@@)#.[I@W[][K[][P@K^G[@@@@[[@@@7')E@^G/GK@^\'^@@@@;CK@@S;*K@@SKU
)@@G@@RZX@@@OBK@@@/K@@^!BD@@@@)^A[Q@U&@)@)@@@@@@/S@@@@C[@@@JC[@@@I/S@@@@/K@K]<KV
)@@G@@C;)@@]R;0@@^R;@@@AR;)@@[R;K@@7BE@@@@)^K[I@T][T][D@K@^@@@@@@@/K@K]<R;0@@^KW
)@@G@@:80@@#C#)@@K/GK@^9/K@@ 9*@@@@@'^@@@@R])@@BBF@@@@)^T[Q@S^[@@@@@@@@@;?)@@#KX
)@@G@@ @@@@IN8)@@ O;K@@[R#.@@@/K@K^T8KK@^Y @@@@GN@K@@G@@@@@@BG@@@@)^<[Q@T@@^[@KY
)@@G@@K^@@@@/K@@^Y8K)@^-/K@K^T8KK@^:O#@@@I;*@@@#;?)@@# @@@@I/K@@AG%8)@@ABH@@@@KZ
)@@G@@)^![I@WG[^@^G[^@K@@@@@@@ @@@@I/K@@ R;*K@@M/GK@^5R#X@@/;CK@@N;*K@@[/K@@ RLA
)@@G@@R#K@[/BI@@@@)^6[Q@SK@K0^K@@@@@C[@@@H;CK@@N;*K@@[/K@@AAC[H@[ ;CK@@N;*K@@[LB
)@@G@@/K@@^^ @@@@K @@@@JBJ@@@@) @[A@U&@+^@]A@)-@M) G[^C@@@@@/,0@@@C/@@@P/K@@ ZLC
)@@G@@/,0@@@C8K@@XC8@@[E/,0@@@C/@@@PBK@@@@) C[A@WG[[]@>@ES]CK@CS]@@@@@@@C8K@@XLD
)@@G@@C8@@[E/,0@@@C/@@@P/K@@A@/,0@@@C8K@@XC8@@[EBL@@@@) K[I@WC]L][X#@KK)DK@@@@LE
)@@G@@;CK@@N;*K@@[/K@@ 6/,0@@@C8K@@JC8@@[J/,0@@@R#@@@T/,0@@@BM@@@@) T[I@S()C-@LF
)@@G@@@-)CCK^+^]8@:9@@@#/,0@@@R#@@@T/,0@@@C8K@@OC8@@[M/,0@@@C/@@@PC[@@@HBN@@@@LG
)@@G@@) +[I@W@K[@K0^^C]O@@@@@@/K@@ 6/,0@@@C8K@@ZC8@@[Q/K@@ ::9@@@[/K@@ \:9@@@]LH
)@@G@@/K@@ 3BO@@@@) :[A@WG[[]@>@K0^^C]O@@@@@@@@@/K@@ 6/,0@@@C8K@@SC8@@[Z/K@@ 6LI
)@@G@@/,0@@@C8K@@HC8@@[WBP@@@@) 3[A@WG[[]@>]@T#@L]@5#@L@@@@@/K@K]<R#K@[.'=@@@@LJ
)@@G@@R#@@[;/,0@@@/,0@@@C8K@@(C8@@[<BQ@@@@) ;[A@U&@+^@]A@)-@MCKF*S]@@@@@C8@@[%LK
)@@G@@/,0@@@R#@@@T/,0@@@C8K@@OC8@@[M/,0@@@C/@@@PBR@@@@)A#[A@T]@>@ES]CK@CS]]^[CLL
)@@G@@@@@@@@/,0@@@C8K@@>C8@@[!/,0@@@C/@@@P/K@@ 6/,0@@@C8K@@KBS@@@@)AF[A@W@()C-LM
)@@G@@@@-)CCK^+^]8@@@@@@/,0@@@R#@@@T/,0@@@C8K@@OC8@@[M/,0@@@C/@@@P/K@@ ZBT@@@@LN
)@@G@@)AN@&@WG[[]@>@@@@@)@P@&@+)@@@@@@@@@@[[@@@@@@@@@@@&Q@@V/K@@ 6/,0@@@C8K@@OLO
)@@G@@C8@@[4BU@@@@)@T@Q@)@@@@@)@1@6@+)@@@@@@@@@@@@@@@@@@@@@@@@@@@@[[@@@@@@@@@@LP
)@@G@@@&#@@7@@@@@@@@@@@@BV@@@@)@'[Y@)@@@@@@@@@@@@@@@@[_____"@@@@@[@@@@@[@@@@@[LQ
)@@G@@@@@@@@@@@@@@@@@@@@      @@@@@@BW@@@@)[ [Y@)@@@@@ IS NONAME  F DATANDEX OLR
)@@G@@OR - I***ERR@@@@@[@@@@@[@@@@@[@@@@@@@@@@@@BX@@@@)[K[Y@)@@@@@DEFINEENTLY LS
)@@G@@E CURRO VALU HAS NE     ATANAMOR - D***ERRRIC   T NUMEBY@@@@)[V[Y@)@@@@@LT
)@@G@@EYOND NDEX B HAS I VALUE INDEXLLEGAL HAS ID     DEFINE IS UND     BZ@@@@LU
)@@G@@)[&[Y@)@@@@@D WORDESERVEOR - R***ERRNGTH  ERO LE HAS ZFINED TLY DECURRENLV
)@@G@@RANGE CA@@@@)[1[Q@)@@E@@@@@@@@@;&?*@__"@@C000000NG    L STRID OCTA IS BALW
)@@G@@      TANAME OF DACB@@@@)[;@Y@+)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LX
)@@G@@@@@@@@@@@@@@_____"@@[@@@@[Q@@VCC@@@@@@@@@@W[#@KES]@)]@@@@@@@/K@@#K*^B@@@LY
)@@G@@/K@K]<R;0@@#R;)@@[R;K@@'R;@@@AA#@@@''^@@^TAX@@@@@@^@@ @@D@@S@@9@@]@[[@@@LZ
)@@G@@@@@@@@@@@@@@)@@@@@@@@@AR@@@@["EDIT$       EDITR$      ECHAR$      ECOL$ MA
)@@G@@      ESKIP$      ECLR$       EDITX$      ECOLN$      EMSGR$      ECOPY$MB
)@@G@@      EPACK$      POPT        EOCTF$      PRINT$      MOPT        COM$  MC
)@@G@@      GETNUM      FD$BIN      STATUS      GETVAR      TT1         GETSETMD
)@@G@@      GETRSV      EDECV$      PRINTV      @@#@@@@@@@@@GETSYM      @@#@@@ME
)@@G@@@@@@]<@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[##@L]@[]@ @K0^^G[@@@MG
)@@G@@@@@@@@9?E@@C9*@@@]9?E@@A9*@@@@/@@@[C/,0@@@/,0@@@A]0@@MAA@@@@)@C[F#@K()C-MH
)@@G@@@^)]@) []@G@'=@@@@C8@@@M[@@@@O/K@@@Q:8)@@[/@)@@S'=@@@@C8@@@@9*@@@AAB@@@@MI
)@@G@@)@L@:@]&@)-@C@@@@@)@^@Q@)@@@@@@@@@@@@@[@@@@@@@@@'=@@@@@@@@@@K@E@@@*PF*  MJ
)@@G@@/K@@@PAC@@@@)@Q[##@L@K0^K0^K0^K0^^G[@@@@@@9?@@@@O8K@@#R@K@@Q[@K@@R)@@@@NMK
)@@G@@C@@@@P/K@@@TC@@@@OAD@@@@)@Y[MK^G[@@@@@@@@@O8K@@[O@K@@I[@L@@@)@@@@IC@@@@HML
)@@G@@)@@@@H;*K@@AC@@@@('^@@[E9*[@@[AE@@@@)@*[N#@KK^G[@@@@@@O@K@@I[@L@@@)@@@@IMM
)@@G@@C@@@@H)@@@@H;*K@@AC@@@@%'^@@[E9*[@@[9?@@@]AF@@@@)@2[EK0^^G@^[@K0^@@@@@@@MN
)@@G@@)@@@@H;*K@@AC@@@@:'^@@[E/K@@[@:@@@@@9*[@@[9?@@@AO8K@@[AG@@@@)@;[E@^G[^G[MO
)@@G@@^G@^G[@@@@@@O#@@@LC@@@@[A@K@@LP@K@@QO8K@@[O@K@@I[@L@@@)@@@@IC@@@@HAH@@@@MP
)@@G@@)[^[F#@KK) K^G[@K0^@@@@@N8K@@G @@@@K@@@@@@/KF@@@R]0@@M/K@@[C/,0@@@C9@@@^MQ
)@@G@@[@@@@IAI@@@@)[H[MK^@[@K^C[=G[@*@@@@K'=@@@@8KK@[I/K@@[W%8)@@ ;C)@@Y;GK@@AMR
)@@G@@/K@@[Q8K)@[KN8)@@AAJ@@@@)[R[N]@SK0^^@@@@@@O;@@@[*@@@@HW8@@@A;G@@@=C@@@[[MS
)@@G@@/K@@[H;G@@@=[@K@@KC8K@@['=@@@@AK@@@@)[-@+[@@@@@@)@I@,@)@@@@@@@@@@@@@@@@@MT
)@@G@@@@@@@@@@@@@@@@@@@@/K@K[EC8K@@A(@@@@HC@)@@GAL@@@@)@N@"@)#1)@@)@(@Q@)@@@@@MU
)@@G@@[[A@@@[[]@@@ED    @[A@][@@@@@@@@@@@R@@@@@)@@@)@@]=@@@@AM@@@@)@:@I@)@@@@@MV
)@@G@@)@@@K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@]@@@@@      [[B@@@AN@@@@MW
)@@G@@@@^@@ @@D@@B@@R@@^@@$@@@@@@@@]@@@@[>)@@@@@)@@@@@@@@@@?DUMMY       PINITIMX
)@@G@@AL    PFS$        SNAP$       EABT$       BEGIN       ERR$        PROCMCMY
)@@G@@      @@[@@@@@@@@@SAVEA0      @@^@@@@@@@@IOLDPSR      @@^@@@@@@@@JINFOR MZ
)@@G@@      @@^@@@@@@@@R@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[F#@KK^@()CCK@C]^@C@@NB
)@@G@@(C@@@@/K@@@]/,0@@@O])@[ R')@@7/K@@@C8LK@@^N9K@@LAA0@[CAA@@@@)@D[#@K)]EK[NC
)@@G@@*K[CK]CK[]^@*@@@@@[@@@@@G8@@@[C@@@@@'=@@@@[@@@@@G8@@@@C@@@@@/K@@[ZAB@@@@ND
)@@G@@)@L[](@GO)BK)]K)^K) ^C]@@@@@@@O8)@@WR@)@@@&8K@@[R@K@@@'=@@@@[@@@@@G8@@@@NE
)@@G@@G8@@@@AC@@@@)@T[M@[@K) K)]@@@@O;@@@[C@@@@@[CK@@@/^@@@VG8K@@[CO])@@[W[)@@NF
)@@G@@CW]@@@ @@@@H&8)@@AAD@@@@)@<[#]@=(@O-@^-@C-@Q-@S-@S-@M@R^)@@@R^K@@@*C@@@@NG
)@@G@@R^K@@@'=@@@@[@@@@@O;@@@@[@@@@@AE@@@@)@:[U@@@@@@@CO[@@@O;K@@[[S])@@CO[@@ANH
)@@G@@[W]@@@CW[@@@ @]@@] @]@@[ @]@@@ @@@@H&8)@@#AF@@@@)@6[EK^C]OG[^[@K0^@@@@@@NI
)@@G@@R[@@@GT8@@@#[@@@@M/K@@[M8#@@@/C@@@@M[CK@@@/^@@@!OOL@@@AG@@@@)@_[##@L#@L#NJ
)@@G@@@L#@L#@L#@L]@P]@O@OCK@@@R^K@@@[O@@@SC?^@@][*@@@SC0^@@]9*@@@N9?^@@@AH@@@@NK
)@@G@@)[B[EK0^[]@OK) K0^ES]@@@R')@@N[W@@@T[C@@@@O;@@@[CC@@@@[^[@@@H8@@@]C@^@@]NL
)@@G@@ @[@@@AI@@@@)[K[F]@5@K0^K^G[^G[@K0^@9?^@@VR[@@@GT8@@@#[@@@@%/K@K[C8#@@[PNM
)@@G@@C@@@@%/K@@@9/,0@@@AJ@@@@)[T[##@L#@L#@K()C-@U)CS]CKB@@@'=@@@@R#@@[D/K@@[MNN
)@@G@@/,0@@@R')@@:[W@@@1C@^@@X9*@@@:AK@@@@)[-@UK)JK)K@)@@@,@)EKC)@@@@@@@      NO
)@@G@@STATUS@IA@@@      #     /K@@@@[@@@@@C8@@[XAL@@@@)@ [I@+=[8 C^)EKD)@@@@@@NP
)@@G@@UM    SLOT-N@IA@@@UM    PAGE-N@IA@@@DE    AREACO@IA@@@AM@@@@)@I@,@+=]) CNQ
)@@G@@ K@@@@)@P@Y@)@@@@@                  @@@@@A@JG@@@AME   AREA-N@IA@@@AN@@@@NR
)@@G@@)@S[Y@)@@@@@      HEADER@@@@@]      DBP   @@@@@[-NAME RECORD@@@@@@@@[@@@NS
)@@G@@@@#I@AAO@@@@)@<[A@)@@@@@)@!@I@)@@@@@      @@@@@ @@@@@ -CODE RECORD@@@@@^NT
)@@G@@L     MAN-CT@@@@@#AP@@@@)@,[Y@)@@@@@JK@@@@IK@@@@E     AILABLILE AVNO C$FNU
)@@G@@@@@@@@@@@@@@@@#P@@            AQ@@@@)@9[Y@)@@@@@FK@@@@EK@@@@DK@@@@CK@@@@NV
)@@G@@BK@@@@AK@@@@ K@@@@^K@@@@#K@@@@]K@@@@[K@@@@AR@@@@)[^@6@)@E@@@@@@@@@@@@@@@NW
)@@G@@@@@@@@@@@@@@@@@@@@@[^@@3@@@@@@LK@@@@KK@@@@HK@@@@GK@@@@AS@@@@@@@@@@@@@@@@NX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NY
)@@G@@@@^@@ @@D@@Q@@5@@[@@9@@@@@@@@@@@@@[=)@@@@@)@@@@@@@@@[ECF$AM       C1    NZ
)@@G@@      LAST$D      C14SZX      MCORE$      TT1         NUMREC      TT1SZ OA
)@@G@@      C8          TT2         TT2SZ       C7          C13         SYM$TWOB
)@@G@@      PRINT$      STATUS      FATALSTP    LN          AREACODE    PAGENUOC
)@@G@@M     SLOTNUM     AREANAME    RDCTBL      @@[@@@@@@@@@@@@@@@@@@@@@@@@@@@OD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OF
)@@G@@)@@[MK^@K[@K[@@@@@'^@@A.C8@@@]'^@@A(C@@@@ @@@@@@'^@@A.C8@@@['^@@A(C@@@@@OG
)@@G@@@@@@@@AA@@@@)@E[MK^@K[@K[@@@@@'^@@A.C8@@@^'^@@A(C@@@@J@@@@@@'^@@A.C8@@@#OH
)@@G@@'^@@A(C@@@@E@@@@@@AB@@@@)@O[MK^@K[@K[@@@@@'^@@A.C8@@@A'^@@A(C@@@@T@@@@@@OI
)@@G@@'^@@A.C8@@@ '^@@A(C@@@@O@@@@@@AC@@@@)@Y[MK^@K[@K[@@@@@'^@@A.C8@@@C'^@@A(OJ
)@@G@@C@@@@<@@@@@@'^@@A.C8@@@B'^@@A(C@@@@Y@@@@@@AD@@@@)@*[MK^@K[@K[@@@@@'^@@A.OK
)@@G@@C8@@@E'^@@A(C@@@@!@@@@@@'^@@A.C8@@@D'^@@A(C@@@@*@@@@@@AE@@@@)@2[MK^@K[@KOL
)@@G@@[@@@@@'^@@A.C8@@@G'^@@A(C@@@@7@@@@@@'^@@A.C8@@@F'^@@A(C@@@@2@@@@@@AF@@@@OM
)@@G@@)@/[MK^@K[@K[@@@@@'^@@A.C8@@@I'^@@A(C@@@[[@@@@@@'^@@A.C8@@@H'^@@A(C@@@@/ON
)@@G@@@@@@@@AG@@@@)[A[MK^@K[@K[@@@@@'^@@A.C8@@@K'^@@A(C@@@[F@@@@@@'^@@A.C8@@@JOO
)@@G@@'^@@A(C@@@[A@@@@@@AH@@@@)[K[MK^@K[@K[@@@@@'^@@A.C8@@@M'^@@A(C@@@[P@@@@@@OP
)@@G@@'^@@A.C8@@@L'^@@A(C@@@[K@@@@@@AI@@@@)[U[MK^@K[@K[@@@@@'^@@A.C8@@@O'^@@A(OQ
)@@G@@C@@@[Z@@@@@@'^@@A.C8@@@N'^@@A(C@@@[U@@@@@@AJ@@@@)[=[MK^@K[@K[@@@@@'^@@A.OR
)@@G@@C8@@@Q'^@@A(C@@@[(@@@@@@'^@@A.C8@@@P'^@@A(C@@@[=@@@@@@AK@@@@)[,[MK^@K[@KOS
)@@G@@[@@@@@'^@@A.C8@@@S'^@@A(C@@@[3@@@@@@'^@@A.C8@@@R'^@@A(C@@@[,@@@@@@AL@@@@OT
)@@G@@)[8[MK^@K[@K[@@@@@'^@@A.C8@@@U'^@@A(C@@@[.@@@@@@'^@@A.C8@@@T'^@@A(C@@@[8OU
)@@G@@@@@@@@AM@@@@)]][MK^@K[@K[@@@@@'^@@A.C8@@@W'^@@A(C@@@]B@@@@@@'^@@A.C8@@@VOV
)@@G@@'^@@A(C@@@]]@@@@@@AN@@@@)]G[MK^@K[@K[@@@@@'^@@A.C8@@@Y'^@@A(C@@@]L@@@@@@OW
)@@G@@'^@@A.C8@@@X'^@@A(C@@@]G@@@@@@AO@@@@)]Q[MK^@K[@K[@@@@@'^@@A.C8@@@)'^@@A(OX
)@@G@@C@@@]V@@@@@@'^@@A.C8@@@Z'^@@A(C@@@]Q@@@@@@AP@@@@)])[MK^@K[@K[@@@@@'^@@A.OY
)@@G@@C8@@@+'^@@A(C@@@]>@@@@@@'^@@A.C8@@@-'^@@A(C@@@])@@@@@@AQ@@@@)]%[MK^@K[@KOZ
)@@G@@[@@@@@'^@@A.C8@@@='^@@A(C@@@]\@@@@@@'^@@A.C8@@@<'^@@A(C@@@]%@@@@@@AR@@@@PA
)@@G@@)]4[MK^@K[@K[@@@@@'^@@A.C8@@@&'^@@A(C@@@]9@@@@@@'^@@A.C8@@@>'^@@A(C@@@]4PB
)@@G@@@@@@@@AS@@@@)]"[MK^@K[@K[@@@@@'^@@A.C8@@@*'^@@A(C@@@##@@@@@@'^@@A.C8@@@$PC
)@@G@@'^@@A(C@@@]"@@@@@@AT@@@@)#C[MK^@K[@K[@@@@@'^@@A.C8@@@%'^@@A(C@@@#H@@@@@@PD
)@@G@@'^@@A.C8@@@('^@@A(C@@@#C@@@@@@AU@@@@)#M[MK^@K[@K[@@@@@'^@@A.C8@@@?'^@@A(PE
)@@G@@C@@@#R@@@@@@'^@@A.C8@@@:'^@@A(C@@@#M@@@@@@AV@@@@)#W[MK^@K[@K[@@@@@'^@@A.PF
)@@G@@C8@@@,'^@@A(C@@@#-@@@@@@'^@@A.C8@@@!'^@@A(C@@@#W@@@@@@AW@@@@)#&[MK^@K[@KPG
)@@G@@[@@@@@'^@@A.C8@@@0'^@@A(C@@@#:@@@@@@'^@@A.C8@@@\'^@@A(C@@@#&@@@@@@AX@@@@PH
)@@G@@)#0[MK^@K[@K[@@@@@'^@@A.C8@@@2'^@@A(C@@@#5@@@@@@'^@@A.C8@@@1'^@@A(C@@@#0PI
)@@G@@@@@@@@AY@@@@)#'[MK^@K[@K[@@@@@'^@@A.C8@@@4'^@@A(C@@@#_@@@@@@'^@@A.C8@@@3PJ
)@@G@@'^@@A(C@@@#'@@@@@@AZ@@@@)^^[MK^@K[@K[@@@@@'^@@A.C8@@@6'^@@A(C@@@^D@@@@@@PK
)@@G@@'^@@A.C8@@@5'^@@A(C@@@^^@@@@@@BA@@@@)^I[MK^@K[@K[@@@@@'^@@A.C8@@@8'^@@A(PL
)@@G@@C@@@^N@@@@@@'^@@A.C8@@@7'^@@A(C@@@^I@@@@@@BB@@@@)^S[MK^@K[@K[@@@@@'^@@A.PM
)@@G@@C8@@@''^@@A(C@@@^X@@@@@@'^@@A.C8@@@9'^@@A(C@@@^S@@@@@@BC@@@@)^+[MK^@K[@KPN
)@@G@@[@@@@@'^@@A.C8@@@/'^@@A(C@@@^$@@@@@@'^@@A.C8@@@;'^@@A(C@@@^+@@@@@@BD@@@@PO
)@@G@@)^?[MK^@K[@K[@@@@@'^@@A.C8@@@"'^@@A(C@@@^1@@@@@@'^@@A.C8@@@.'^@@A(C@@@^?PP
)@@G@@@@@@@@BE@@@@)^6[MK^@K[@K[@@@@@'^@@A.C8@@[@'^@@A(C@@@^;@@@@@@'^@@A.C8@@@_PQ
)@@G@@'^@@A(C@@@^6@@@@@@BF@@@@) @[MK^@K[@K[@@@@@'^@@A.C8@@[]'^@@A(C@@@  @@@@@@PR
)@@G@@'^@@A.C8@@[['^@@A(C@@@ @@@@@@@BG@@@@) E[MK^@K[@K[@@@@@'^@@A.C8@@[^'^@@A(PS
)@@G@@C@@@ J@@@@@@'^@@A.C8@@[#'^@@A(C@@@ E@@@@@@BH@@@@) O[MK^@K[@K[@@@@@'^@@A.PT
)@@G@@C8@@[A'^@@A(C@@@ T@@@@@@'^@@A.C8@@[ '^@@A(C@@@ O@@@@@@BI@@@@) Y[MK^@K[@KPU
)@@G@@[@@@@@'^@@A.C8@@[C'^@@A(C@@@ <@@@@@@'^@@A.C8@@[B'^@@A(C@@@ Y@@@@@@BJ@@@@PV
)@@G@@) *[MK^@K[@K[@@@@@'^@@A.C8@@[E'^@@A(C@@@ !@@@@@@'^@@A.C8@@[D'^@@A(C@@@ *PW
)@@G@@@@@@@@BK@@@@) 2[MK^@K[@K[@@@@@'^@@A.C8@@[G'^@@A(C@@@ 7@@@@@@'^@@A.C8@@[FPX
)@@G@@'^@@A(C@@@ 2@@@@@@BL@@@@) /[MK^@K[@K[@@@@@'^@@A.C8@@[I'^@@A(C@@@A[@@@@@@PY
)@@G@@'^@@A.C8@@[H'^@@A(C@@@ /@@@@@@BM@@@@)AA[MK^@K[@K[@@@@@'^@@A.C8@@[K'^@@A(PZ
)@@G@@C@@@AF@@@@@@'^@@A.C8@@[J'^@@A(C@@@AA@@@@@@BN@@@@)AK[MK^@K[@K[@@@@@'^@@A.QA
)@@G@@C8@@[M'^@@A(C@@@AP@@@@@@'^@@A.C8@@[L'^@@A(C@@@AK@@@@@@BO@@@@)AU[MK^@K[@KQB
)@@G@@[@@@@@'^@@A.C8@@[O'^@@A(C@@@AZ@@@@@@'^@@A.C8@@[N'^@@A(C@@@AU@@@@@@BP@@@@QC
)@@G@@)A=[MK^@K@KM=[+]@@[@@@@]P;@@@@[@@@@[P;@@@[@@@@@@'^@@A.C8@@[P'^@@A(C@@@A=QD
)@@G@@@@@@@@BQ@@@@)A,[E(@G-@@)+^@']-@M))@@C8K@@FC8@@@D/,0@@@C@@@@[/,0@@@C8K@@-QE
)@@G@@C8@@@#/,0@@@C/@@@@BR@@@@)A7[#]@X[K)DK0@K)IK[[@@@@@@@@@[@@@@@@@@@@@/K@KA(QF
)@@G@@'=@@@@R#@@@@/,0@@@C@@@@]/,0@@@BS@@@@)A_[](@G-@@)+^@']-@O-)@@@@@@@@R#@@@@QG
)@@G@@/,0@@@C@@@@@/,0@@@C8K@@GC8@@@F/,0@@@C/@@@@BT@@@@)BB@N]@9]@/@)@@@/@@@@@@@QH
)@@G@@LUTE L, ABSO ERRORRELOAD@@@@@@@@@@@@@@@@@@'=@@@@'=@@@@BU@@@@)@B@4@@@@@@@QI
)@@G@@)@@@C(@U@@@@@@@@@@@@@@@@@[I@@@CODE: ERROR IVE:   RELATN:    OCATIOBV@@@@QJ
)@@G@@@@^@@#@@B@@K@@$@[P@ ;@@@@@@@@[@@@@BD@@@@@HEDIT$       EDITR$      ECHAR$QK
)@@G@@      ECOL$       ESKIP$      ECLR$       EDPKT       ECOPY$      EPACK$QL
)@@G@@      EOCTV$      EDECV$      EFD1$       RELOAD      PRINT       PRINT$QM
)@@G@@      ERR$        RER001      @@[@@@@@@@@@RER002      @@[@@@@@@@@ RER003QN
)@@G@@      @@[@@@@@@@@ERER004      @@[@@@@@@@@JRER005      @@[@@@@@@@@ORER006QO
)@@G@@      @@[@@@@@@@@TRER007      @@[@@@@@@@@YRER008      @@[@@@@@@@@<RER009QP
)@@G@@      @@[@@@@@@@@*RER010      @@[@@@@@@@@!RER011      @@[@@@@@@@@2RER012QQ
)@@G@@      @@[@@@@@@@@7RER013      @@[@@@@@@@@/RER014      @@[@@@@@@@[[RER015QR
)@@G@@      @@[@@@@@@@[ARER016      @@[@@@@@@@[FRER017      @@[@@@@@@@[KRER018QS
)@@G@@      @@[@@@@@@@[PRER019      @@[@@@@@@@[URER020      @@[@@@@@@@[ZRER021QT
)@@G@@      @@[@@@@@@@[=RER022      @@[@@@@@@@[(RER023      @@[@@@@@@@[,RER024QU
)@@G@@      @@[@@@@@@@[3RER025      @@[@@@@@@@[8RER026      @@[@@@@@@@[.RER027QV
)@@G@@      @@[@@@@@@@]]RER028      @@[@@@@@@@]BRER029      @@[@@@@@@@]GRER030QW
)@@G@@      @@[@@@@@@@]LRER031      @@[@@@@@@@]QRER032      @@[@@@@@@@]VRER033QX
)@@G@@      @@[@@@@@@@])RER034      @@[@@@@@@@]>RER035      @@[@@@@@@@]%RER036QY
)@@G@@      @@[@@@@@@@]\RER037      @@[@@@@@@@]4RER038      @@[@@@@@@@]9RER039QZ
)@@G@@      @@[@@@@@@@]"RER040      @@[@@@@@@@##RER041      @@[@@@@@@@#CRER042RA
)@@G@@      @@[@@@@@@@#HRER043      @@[@@@@@@@#MRER044      @@[@@@@@@@#RRER045RB
)@@G@@      @@[@@@@@@@#WRER046      @@[@@@@@@@#-RER047      @@[@@@@@@@#&RER048RC
)@@G@@      @@[@@@@@@@#:RER049      @@[@@@@@@@#0RER050      @@[@@@@@@@#5RER051RD
)@@G@@      @@[@@@@@@@#'RER052      @@[@@@@@@@#_RER053      @@[@@@@@@@^^RER054RE
)@@G@@      @@[@@@@@@@^DRER055      @@[@@@@@@@^IRER056      @@[@@@@@@@^NRER057RF
)@@G@@      @@[@@@@@@@^SRER058      @@[@@@@@@@^XRER059      @@[@@@@@@@^+RER060RG
)@@G@@      @@[@@@@@@@^$RER061      @@[@@@@@@@^?RER062      @@[@@@@@@@^1RER063RH
)@@G@@      @@[@@@@@@@^6RER064      @@[@@@@@@@^;RER065      @@[@@@@@@@ @RER066RI
)@@G@@      @@[@@@@@@@  RER067      @@[@@@@@@@ ERER068      @@[@@@@@@@ JRER069RJ
)@@G@@      @@[@@@@@@@ ORER070      @@[@@@@@@@ TRER071      @@[@@@@@@@ YRER072RK
)@@G@@      @@[@@@@@@@ <RER073      @@[@@@@@@@ *RER074      @@[@@@@@@@ !RER075RL
)@@G@@      @@[@@@@@@@ 2RER076      @@[@@@@@@@ 7RER077      @@[@@@@@@@ /RER078RM
)@@G@@      @@[@@@@@@@A[RER079      @@[@@@@@@@AARER080      @@[@@@@@@@AFRER081RN
)@@G@@      @@[@@@@@@@AKRER082      @@[@@@@@@@APRER083      @@[@@@@@@@AURER084RO
)@@G@@      @@[@@@@@@@AZRER085      @@[@@@@@@@A=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@RP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[#][[][ #@T][D@ES#CKDRQ
)@@G@@*@@@@@'^@@>R/,0@@@R')@@N/K@@@B(C@@@@AA0@@P'^@@@@*@@@@@AA@@@@)@C[EK)OK)PKRR
)@@G@@)O]=]0-@,@@@G8)@@[C@)@@@G@@@@HT8K@@@C@K@@GCC@@@@'^@@@@(C@@@@ @@@@MAB@@@@RS
)@@G@@)@L[F[K)RK)RK)SK)R[[EKG)G8@@@@[^K@@AG8K@@[C@K@@GC@@@@@'=@@@@[@@@@@G@@@@@RT
)@@G@@[^)@@@AC@@@@)@U[#][X][-][W^^(@4-@,@@@@@@@@[@@@@@G8@@@@[^K@@[G8K@@[C@K@@GRU
)@@G@@C@@@@@'=@@@@[@@@@@AD@@@@)@+[#][-][W^^(@6-@,-@0@@@@@@@@'=@@@@[@@@@@G8@@@@RV
)@@G@@[^K@@]G8K@@[C@K@@GC@@@@@'=@@@@AE@@@@)@%[F][W^ [K)RK)SKOC @@@R^0@@@R K@@@RW
)@@G@@'=@@@@[@@@@@G@@@@&[^K@@#G8K@@[C@K@@GC@@@@@AF@@@@)@3[U@@]=#)@N@K@@GG])@@GRX
)@@G@@T')@@@C]=@@@O;@@@[O[@@@GO\#@@@R;@@@DRZN@@@R[@@@#R[)@@ AG@@@@)@"[U^@K@@@@RY
)@@G@@9,_@@@O[)@@GO;0@@[R#0@@^H;K@@[C#O@@@/K@@[;(S#@@[/,0@>MR@)@@ R@K@@#AH@@@@RZ
)@@G@@)[D[N][5@^@@(@8CC@A[)@@%[7A@@@C;@@@@[]6@@]C]_@@]9%6@@@/K@@[*(@@@@S/K@@[HSA
)@@G@@*@@@@@AI@@@@)[N[U[@KK@K@/K@@]S(? @@@ @ @@# @ @@^ @ @@] 4F@@@R]0@@%8AK@[CSB
)@@G@@O5&@@@O7_@@@ @A@@#AJ@@@@)[Y[EK)Y]=#0)C@)@@@@@@@@8AK@[+O;0@@#/K@@]F/K@@[>SC
)@@G@@9"_@@@R;0@@[H;K@@[CBK@@@9,5@@BAK@@@@)[$[F][.#@L#@KEKKC@)@@@@C;@@@[/K@@[5SD
)@@G@@*@@@@I/,0@Q/R')@@@COZ@@@9*)@@ 9*@@@#'^@@@@AL@@@@)[0[M@K@^G[^G[@@@@9?)@@ SE
)@@G@@9?@@@# @A@@]9%6@@@C;@@@@/K@@[8[]6@@]HA/@@ CE/@@^9%6@@@AM@@@@)['[V@@@@@@@SF
)@@G@@ @A@@] @A@@[ @A@@@O9)@@[[#Q@@@C;K@@[P9)@@[O[)@@G[VP@@[C;K@@E/K@@[KAN@@@@SG
)@@G@@)] [MEKI]]C@@@@@@@O;0@@DR#0@@ AB>@@^RF\@@]/K@@[RO5&@@@A[)@@%[7Q@@@C;K@@@SH
)@@G@@ @A@@#AO@@@@)]J[U[[@^@@@P9)@@[R[)@@ 8A)@]O[B_)@@G#0@@ICB_@@@G8)@@[C@)@@#SI
)@@G@@H;)@@[C\>@@@&;0@@[AP@@@@)]U[M]=]M@-)G)@@@@AZ @@[RVC@@@R]K@@CR]@@@G/^)@#^SJ
)@@G@@A#)@@#/,0@Q/R')@@@A^5@@]O[)@@GAQ@@@@)]=[U@K@@@@@H')@@[CA&@@@RRT)@@&'K@@[SK
)@@G@@O'K@@]H'@@@[/K@@#A(@@@@OCAC@@[A# @@#R#C@@[AR@@@@)]\[M[@^@(@8 CB@@@C A@@@SL
)@@G@@O9@@@@[5^@@@C9@@@@8 )@]1O5^@@@/K@@]":OO@@@O9@@@[R[@@@AAS@@@@)]9[U@@[@K@@SM
)@@G@@/K@@#A8 @@]?[[^@@]C D)@@[[^@@[CDD@@@[5^@@@C9@@@@ARO@@@[ A@@@G9@@@[AT@@@@SN
)@@G@@)#^[M@@([@)C@@@@@@R[0@@G/^)@#1/,0@Q/R')@@@RRQ@@@O9)@@[H')@@[CA&@@@ @ @@#SO
)@@G@@ W @@[AU@@@@)#I[M@^@(@8-)G)@@@*^C@@[/K@@#&*@@@@#O9)@@@8 )@#DO5&@@@AVA@@@SP
)@@G@@RFB@@AA3A@@@R:B@@#AV@@@@)#S[V@@K@@@@H'@@@[CEC@@[&9)@@[AF @@]P#@@@ R#@@@ASQ
)@@G@@/K@@#&(CC@@[O'K@@]&'K@@[/K@@#VAW@@@@)#<[U^@@@K@@/K@@#4(O#@@@G[)@@GAR @@@SR
)@@G@@P#@@@ R#@@@A&9)@@@&9K@@@8 @@#<A#A)@@R#D)@@AX@@@@)#,[M^@^@KM&@2^]S@/,0@@@SS
)@@G@@R')@@O[D)@@@ O @@@/K@@#M SA@@@ 0A@@@/K@@@3OPP@@@OO3@@@AY@@@@)#8[F][W^ [EST
)@@G@@KK>CC-][W@@@A#@@@@G@@@@IT8)@@@T8)@@@C@)@@>A#K@@ O;K@@[R#K@@GR#@@@@AZ@@@@SU
)@@G@@)^[[F][-][W^^([ACKF*KG@@'=@@@@A#@@@@G@@@@IC8)@@@A#K@@^O;K@@[R#K@@GR#@@@@SV
)@@G@@'=@@@@BA@@@@)^E[F[KO [K0CKO #@-[@@@@ @@@@Z @@@@R @@@@< @@@@1 @@@@X9*@@@4SW
)@@G@@9?@@@09*@@@29?@@@,BB@@@@)^N[F[KOCD^G[^^K[@@@@@@@/K@@CE(@H@@@/K@@M2:@H@@@SX
)@@G@@C@K@@#R#@@@Y/,0@@@R])@@# @@@@+BC@@@@)^W[N[]+)]^^*)*C@@R#G@@@C@@@@#A[K@@LSY
)@@G@@R[K@@G'^@@@@*@@@@I/,0@Q/R')@@@RZW@@[C@@@@#BD@@@@)^&[F]]T@KOCD4 [KK@@@@@@SZ
)@@G@@(@@@@JRF5@@#9*0@@F9*K@@DC@K@@W'^@@@@(@@@@W/^K@^:'^@@@@BE@@@@)^\[N@@^@K^@TA
)@@G@@@@@@@@COQ@@@/K@@^;8#0@^3O9)@@[/K@@^8:SQ@@@OD&@@]R[)@@ P;0@@[/K@@^;BF@@@@TB
)@@G@@)^9[EKO^K0^K^ @KK@@@@@@@(@@@@W/^@@ ^C@@@@Z/ )@C8+[K@@ZC!W@@[C@@@@#[@@@@ZTC
)@@G@@C8@@@[BG@@@@) ][F]]-[KO[@KM=^]@@@@@@*@@@@I/,0@Q/R')@@@A[)@@M/^@@P/'^@@Q!TD
)@@G@@A#K@@HR#K@@W'^@@@@BH@@@@) F[N]]>[KKK^ @KO^R#@@@: @@@@!/K@@ >(@@@@!/K@@KFTE
)@@G@@:8)@@[C*,@@@C@)@@LA#@@@K'^@@@@BI@@@@) P[F[KO [K^ @K^^@@@@@@@A[)@@M/^@@ 2TF
)@@G@@'^@@Q!C@K@@)/K@@ $:@K@@)A#@@@-R#@@@?A#@@@)BJ@@@@) Y[E([@)C]^ E])*]])@@@@TG
)@@G@@/K@@ 3%@K@@)/K@@ $[@K@@H[@@@@K'^@@@@/@)@ +/,0@Q/R')@@@BK@@@@) $[MKL@K[@[TH
)@@G@@[@@@@@A#@@@+R;@@@[AFA@@#/K@@ 3?^A@@[/K@@ 3/K@@ ?!@)@@GR#@@@-RB&@@]BL@@@@TI
)@@G@@) 1[N@KL@EC]]@@@@@ABE@@]R#@@@MAZU@@[ABE@@@R;@@@AR')@@,/K@@A@*^A@@#C@K@@HTJ
)@@G@@/K@@A@BM@@@@) ;[F@KOCE=[@KO[[KK@@@@@A#K@@HR#K@@R/K@@A(%@K@@R/K@@A]'^@@C^TK
)@@G@@'^@@@@*C@@@,/,0@W;BN@@@@)A^[N[^ @KO @^ @@@/K@@A9%@0@@TRB6@@#/K@@BE*@@@@+TL
)@@G@@[@)@@S/K@@AD:@)@@SRZ?@@[C@@@@#BO@@@@)AI[N[KO^@K0AKK@@@RR/@@[C@@@@#A]@@@GTM
)@@G@@PED@@AP'@@@[O]@@@DRED@@]R]K@@VA#0@@IR#0@@TBP@@@@)AS[N[^[[^[[K^[[@@A#K@@JTN
)@@G@@/,0@R7/^)@B&A#)@@=/,0@RGCTF@@@R]0@@M/K@@A$*WI@@[R#)@@LBQ@@@@)A+[N[[@K[@ETO
)@@G@@C))@@@*@@@@+AZU@@[R')@@,/K@@AXCXI@@[/K@@BG/,0@T=RRL@@@O8K@@[Q@K@@#BR@@@@TP
)@@G@@)A?[N@@[@KO[@@@@@@'^@@C^/K@@B>*C@@@,/,0@W;A %@@]ABE@@@R;@@@[AB%@@[RB&@@#TQ
)@@G@@/K@@A7BS@@@@)A6[N@^@*)@)@@@@@@/,0@W;A %@@]ABE@@@R;@@@[AB'@@[AZU@@[R')@@,TR
)@@G@@/K@@A,RF&@@#/K@@A]BT@@@@)B@[F[K):KOCF^[[[]]4@@@@'^@@@@*?G@@@O;@@@[R#@@@VTS
)@@G@@'^@@C^'^@@@@%@0@@T'^@@@@*C@@@,BU@@@@)BD[F@^[[KOCF-]].[@@@@@@A#@@@Y'^@@@@TT
)@@G@@(@@@@G'^@@@@R#0@@J9?K@@H/K@@AGRF6@@#/K@@AIBV@@@@)BM[F[KL[EE^A]]-[+))@@@@TU
)@@G@@R#@@@T'^@@@@*@@@[^/,0@@@R')@@_A#@@[]R#G@@@C@@@@#A#@@[#BW@@@@)BV[N[KO [^ TV
)@@G@@[^ @@@/K@@^E[@@@@OG8@@@[C@@@@OA#@@@NO;@@@[R#@@@NA#@@@)R#@@@RA#@@@-BX@@@@TW
)@@G@@)B>[N]#C**C))CC@@@[^%@@]C@)@@MAB%@@@R;)@@BABU@@[R#K@@TAZE@@[R#@@@RR')@@,TX
)@@G@@'^@@@@BY@@@@)B\[F@KO[@K]=@2^@]A[K@@@C8K@@=C8@@@Y/,0@@@C/@@@@/K@@A]'^@@C^TY
)@@G@@/K@@B4*C@@@,/,0@W;BZ@@@@)B8[F]@X[K)E^C@= ]@=K)]@/,0@@@C/@@@)/,0@@@C@@@@STZ
)@@G@@/,0@@@C/@@@(/,0@@@C@@@@S/,0@@@CA@@@@)C[[F#@[]#L]#OKKK)6K@@@@/K@KC^'^@@@@UA
)@@G@@%8@@@@C?G@@[C@@@@V@@@@@@'^@@@@'=@@@@R#@@@@CB@@@@)CE[N[[@^ @^@@@@@@R#Y@@]UB
)@@G@@/K@@C!%8@@@#/K@@^EA#K@@WR#Y@@]/K@@CL%8@@@[RZI@@[C@)@@#CC@@@@)CO[F[EE^A']UC
)@@G@@)CE@)*KN@@@@'^@@@@R#@@[#/K@@C%(C@@[#/K@@C%*@@@[^/,0@@@R')@@_A#K@[]CD@@@@UD
)@@G@@)CX[M^@K^ [K^ [@@@[[0@@?[]@@@:/K@@C$[]@@@: @@@@?/K@@C>:8)@@['^@@=YC[0@@IUE
)@@G@@C]@@@HCE@@@@)C$[MKO[[^@K[#@S@@[0)@@@C8)@@[/K@@C5%8@@@^/K@@CWR#G@@]C@@@@#UF
)@@G@@/K@@^EA#@@@!R;@@@[CF@@@@)C1[F[^G[=@K^@K@@@@@@@@@AB)@DNRB>@@^/K@@^E/K@@^EUG
)@@G@@%8@@@]/K@@^E[@K@@[C@W@@]C@@@@#CG@@@@)C'[N#@@^CI@@@@@@@A#M)@@R#Q)@@&9)@@[UH
)@@G@@O9)@@DR[)@@ P;@@@['^@@@@(@@@@GR\ @@@R@)@@[CH@@@@)D^[F@K[[K)9KM=^]@@@@@@@UI
)@@G@@*@@@@I/,0@Q/R')@@@R#K@@W'^@@@@(@@@@WA#]@@@R#@@DZ8#@@D]CI@@@@)DH[N]#*^G[]UJ
)@@G@@&@)@@@@@@@@@@@@@@@@@@@@@/,0@@@R#)@@ R')@@)9*)@@)9??@@@O;@@@['^@@@@CJ@@@@UK
)@@G@@)DR[M@@^[#@)@@@@@@[B0@@[/K@@D)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UL
)@@G@@@@@@@@CK@@@@)D-[EK0CKOCC^C OCC@@@@@@9?%@@@P9K@@D&9K@@DQ K@@@'^@@@@(C@@@@UM
)@@G@@[B0@@-[B0@@@;F0@@MCL@@@@)D%[N]]@[]#?^CJ[@@/K@@D0%@5@@]'^@@@@2@>)@EN@K@@GUN
)@@G@@'^@@@@*@@@@HW8@@@D;G@@@=CC@@@@CM@@@@)D4[MKO [KO^@@@@@@R@K@@AOT&@@[R[)@@ UO
)@@G@@RZW@@[C@@@@#R[K@@LA#K@@)A#K@@HA[K@@KCWP@@@CN@@@@)D"[M[[^@K^CJO^@@@A[)@@MUP
)@@G@@'^@@@@8#@@E]O5&@@@/K@@EB:OQ@@@R#K@@HP;@@@[RB[@@@P8K@@[CO@@@@)EC[F#@-@^CJUQ
)@@G@@)^[]#/@@@@@@'^@@@@/K@@EL?@0@@KG9@@@[C A@@]'^@@@@?^6@@[/@0@QUR#0@@@CP@@@@UR
)@@G@@)EL[F[KO[[KO^KO@@@@@@@@@/K@@GY%@)@@SRZ,@@[C@)@@#A#K@@HR#K@@R/K@@EY%@K@@RUS
)@@G@@R#K@@HCQ@@@@)EU[N#@-[K^@**C@@@ABE@@@R;@@@[AB'@@[AZU@@[R#K@@HR')@@,/K@@E%UT
)@@G@@/K@@EY%@0@@TR#0@@@CR@@@@)E=[EK^ ]^[@K^ #@-#@)@@@R#0@@[R#)@@@R#K@@H/K@@EOUU
)@@G@@'^@@C^'^@@@@*C@@@,/,0@W;A %@@]CS@@@@)E![F]]8K-[K0CKOG]^@K0C@A]K@@ O'K@@BUV
)@@G@@/K@@E7*@@@@[R]K@@VA#@@@]'^@@@@(@@@@G'^@@@@CT@@@@)E6[F@[#@-#@-#@-[K0CKK@@UW
)@@G@@R]K@@VA]K@@^P]K@@VR]K@@ A]@@@ P]@@@[O]@@@DRED@@]/K@@E;CU@@@@)E_[M@K0AKL[UX
)@@G@@^@@@@@/K@@G)*WI@@[R#)@@LRR"@@[C@)@@#A]@@@GPED@@AP'@@@[O]@@@DRED@@]CV@@@@UY
)@@G@@)FD[N[^[[^[@KO^@@@R@K@@GC@@@@#A#K@@J/,0@R7/K@@GA*@@@@IA#)@@=/,0@RGCTF@@@UZ
)@@G@@R]0@@MCW@@@@)FN[E^[[KOG]^ [K),@@@@@@'^@@@@R#0@@J9?K@@HA#K@@CA#K@@IR#K@@TVA
)@@G@@/,0@T=RRW@@[O8K@@[CX@@@@)FW[EK-]KO [^^**KS@@@@@@/,0@@@R')@@_A#@@[]R#G@@@VB
)@@G@@C@@@@#A#@@[#A#@@@Y'^@@@@(@@@@GCY@@@@)F>[N[K-#KO^^^@@@@!@K@@CR#K@@BO 8@@@VC
)@@G@@R[0@@VP]@@@GOEC@@]R]@@@VRB@@@J'^@@@@*@@@[^CZ@@@@)F\[F]^KK[]^P#@)K0C@@@@@VD
)@@G@@(@F@@@R]0@@ O[0@@[A@K@@A'^@@@@*@@@@I'^@@W[RZR@@@'^@@@@DA@@@@)F8[F@K0C[[KVE
)@@G@@0C^[#@)@@@@@C[@@@]/K@@J.[[V@@@R]0@@ C[K@@Y[[B@@@C[F@@@R]0@@ /K@@G@DB@@@@VF
)@@G@@)G[[EKOG][@KOG]^ #@)@@@@[[)@@CC[)@@T[[K@@BC[K@@V/K@@J.[[V@@@R]0@@ C[K@@YVG
)@@G@@[[B@@@DC@@@@)GE[F#@)K0C^[#@)K0C@@@@@R#@@@N[@@@@PC8@@@[[[0@@H/K@@I#(@@@@NVH
)@@G@@[[0@@GC[;@@@R]0@@ DD@@@@)GN[#]]T#@-#@-[K^G]^G]^@@@@@@@/K@@G+:[0@@]C[0@@HVI
)@@G@@/K@@HB%@)@@T9*0@@K9*K@@I'^@@@@DE@@@@)GV[F@K0CK^ @^@K0C@@@@@@A#@@@NR;@@@[VJ
)@@G@@/K@@FFCXI@@[/K@@EUA#)@@S/K@@GN @@@@P'^@@U[DF@@@@)G=[M**C]]CC)@@@@@/,0@W;VK
)@@G@@A %@@]R[)@@M[A'@@[C]0@@T[A%@@@C')@@#[YU@@[C]K@@RR')@@,DG@@@@)G,[F[K^ [[@VL
)@@G@@EK<C@@@@@@@@/^@@G8C8@@@@/K@@G':8@@@[R\D@@[R]K@@VC]0@@T/K@@J/*C@@@,DH@@@@VM
)@@G@@)G7[F]^X[K-B@^G[=^@@@@@@C@@@@#A]@@@GPED@@AP'@@@[O]@@@DRED@@]'^@@@@(^@@@1VN
)@@G@@'^@@@@DI@@@@)H@[E^[[^[@K0CEC@@@@@@@@R')@@,R#@@@J/K@@IA/K@@H5*@@@@IA#)@@=VO
)@@G@@/,0@RGC9@@[=RR/@@[DJ@@@@)HD[N#@-[K-C@^^K@@/,0@W;A %@@]R#)@@MABE@@@R;@@@ VP
)@@G@@ABE@@[AZU@@['^@@@@%@K@@HRBK@@IDK@@@@)HN[F[K-DKKK]=C2@-]O@@@@'^@@@@/^@@HWVQ
)@@G@@C8@@@@/K@@HW:8@@@[R\D@@[R]K@@V'^@@@@*C@@@,DL@@@@)HW[M@K0AKKK^^@@@@A#)@@=VR
)@@G@@/,0@RGC9@@[=RR/@@[C@@@@#A]@@@GPED@@AP'@@@[O]@@@DRED@@]DM@@@@)H&[]K^G]^G]VS
)@@G@@^[]]T#@-#@)@@@@@@@9*0@@K9*K@@I'^@@@@'^@@U[R#0@@K @@@@P/K@@IA(@@@@IDN@@@@VT
)@@G@@)H,[F[K^G]^G]^@K0CEE]@@@C]K@@HR')@@,A#@@@NR;@@@[/K@@HB%[0@@]C[0@@H/K@@H(VU
)@@G@@:@)@@TDO@@@@)H7[M[[^^K^ @@@@@@/K@@J/*C@@@,/,0@W;A %@@]R[)@@M[A'@@[C]0@@TVV
)@@G@@[A%@@@C')@@][YU@@[DP@@@@)I[[N[K[#@-@KK@@@@PED@@AP'@@@[O]@@@DRED@@]R]K@@VVW
)@@G@@/K@@G=A#@@@OR;@@@[/K@@G1C]0@@TDQ@@@@)IF[N#@T[KO^^[[KK@Q8W@@[C@@@@#A#K@@JVX
)@@G@@/,0@R7C9@@[=RR/@@[C@@@@#A#@@@IR#@@@TA]@@@GDR@@@@)IP[EK^ [K),^CM4 @@@@@@@VY
)@@G@@'^@@WIA#@@@Y'^@@@@(@@@@G'^@@@@R#0@@J9?K@@H/,0@T=RRW@@[DS@@@@)IY[F[KO^KM+VZ
)@@G@@-[))*K&@@@@@'^@@@@*@@@[^/,0@@@R')@@_A#@@[]R#G@@@C@@@@#A#@@[#R#@@@YDT@@@@WA
)@@G@@)I$[N[^@K-HK0CKKKKP]@@@JOEC@@]R]@@@DR]K@@VA@K@@A'^@@@@*@@@@I'^@@W[RZX@@[WB
)@@G@@C@K@@#DU@@@@)I1[EK0CK0CK0CK^G]@**C@@R#K@@HR')@@,A#D@@@R#@@@]/K@@JD(@@@@OWC
)@@G@@O]K@@AA]K@@#OAS@@@DV@@@@)I'[N#@)@KL@KOCN)@'^@@@@*C@@@,/,0@W;ABE@@]R#@@@MWD
)@@G@@ABE@@@R;@@@[AB'@@[AZU@@[R#0@@@DW@@@@)J^[F[K0CKL@K0CK0CK0CK@@/K@@J4*@@@@PWE
)@@G@@O]K@@AR]K@@#/K@@J.A# @@@R#@@@YO[K@@^R[K@@VDX@@@@)JH[N#@)EE]@)+A[@@*@@@@MWF
)@@G@@A#E@@]R#@@@MABE@@@R;@@@ AZU@@[R#K@@HR')@@,A#D@@@R#@@@HDY@@@@)JR[F@K0C^[[WG
)@@G@@K-JKK@@@@@@@OEC@@]R]@@@DR]K@@V'^@@@@*C@@@,/,0@W;AB'@@[R#0@@T/K@@J&DZ@@@@WH
)@@G@@)J)[F#@)K0CKL@K0C^@@@@@@/,0@W;A#'@@[R#0@@D/K@@J.A#D@@@R#@@@YO]K@@VOAS@@@WI
)@@G@@P]@@@WEA@@@@)J([F[K-KKKK0C^G]^^@@@@@R#@@@YO]K@@VO]S@@@P]@@@FOEC@@]R]@@@DWJ
)@@G@@R]K@@V'^@@@@*C@@@,EB@@@@)J2[EK^G][#@-] ^KK@@@@@@[[G@@@C[@@@Y[@9@@@'^@@@@WK
)@@G@@%@0@@GC@/@@@C@@@@ /K@@J.A#D@@@EC@@@@)J;[F@K-MKL[KL[K0C@@@@@@ @@@@MA#@@@NWL
)@@G@@O;@@@[R#@@@N[@@@@PG8@@@[C@@@@P'^@@@@/K@@J.ED@@@@)K^[##@-#@-#@-#@-#@-#@-@WM
)@@G@@K0A@@@(0@@@@/K@@^E @@@@Z @@@@Y @@@@) @@@@O @@@@N @@@@PEE@@@@)KG[N] G**C-WN
)@@G@@)GCCCCR[)@@M[^E@@@C8@@@[[@)@@I[^%@@[CC)@@[[WU@@[C@K@@HR')@@,'^@@@@EF@@@@WO
)@@G@@)KQ[MK^ ] L@KL[K^^[@@@@S/K@@K):@@@@SCW#@@[R@0@@#'^@@C^'^@@@@*C@@@,/,0@W;WP
)@@G@@A %@@]EG@@@@)K)[N[^CPK[#@SKK@@C@)@@LRR3@@[AA@@@GPED@@AP'@@@[O]@@@DRED@@]WQ
)@@G@@'^@@@@%^(@@[R]K@@VEH@@@@)K%[EK^^K-QK0AK0AKK@@@@@(@@@@JR]K@@VR]@@@GC^0@@[WR
)@@G@@'^@@@@*@@@@I[@)@@=/,0@RGC9@@[=EI@@@@)K3[N] WK^[@@K0A@@G8@@@[C@@@@GN@0@@CWS
)@@G@@O'@@@[&'@@@@/^)@LW/,0@TM/K@@LW(CD@@#'^@@@@EJ@@@@)K.[M@K0AK^ #@S@@@P#K@[#WT
)@@G@@G8K@@[C@K@@GR]K@@V/])@LF+]K@@MC]S@@@N[@@@GOFD@@AP#@@@CEK@@@@)LB[E[@^G]^[WU
)@@G@@] -#@)@@@@@@+]K@@>'^@@@@/])@LJ+]K@@=C8@@@[/K@@LZR]@@[# @@@@IOFT@@AEL@@@@WV
)@@G@@)LK[#@K-SK0AK0CK0AKO[#@S@@@@@@[@0@@]/,0@R7R]K@@VR]@@@G[@@@@-[?@@@@'^@@@@WW
)@@G@@/])@LMEM@@@@)LS[M@KOG[=[#@T[KKC@@@@#[@K@@JC^0@@[/,0@R7R]@@@GR]K@@V[4?@@@WX
)@@G@@[C/@@@C4?@@@C@@@[#EN@@@@)L+[M[@KO [KOCF)@@(@@@@G'^@@@@R#0@@J9?K@@H[@K@@IWY
)@@G@@C@K@@T/,0@T=COW@@[O8K@@[R@K@@GEO@@@@)L?[F]^D[KO^KM+-[)))@@@@*@@@[^/,0@@@WZ
)@@G@@R')@@_[@@@[]C@G@@@C@@@@#[@@@[#[@@@@Y'^@@@@EP@@@@)L5[#]^H#@T@EK#CK@CS ]^@XA
)@@G@@8@@@@@/,0@@@C8K@@YC8@@@4/,0@@@C/@@@@/K@@M((?@@@@'^@@@@EQ@@@@)L.[##@SK)EKXB
)@@G@@0E^C[4 ]@*@@@@@@@@/,0@@@C@@@@H/,0@@@C8K@@LC8@@@9/,0@@@C@@@@RCA0@@[ER@@@@XC
)@@G@@)M [##@*K)BKOC]=G@^CH]=@0@@@@@C/@@@@'=@@@@R#@@@@/,0@@@C@@@@I/,0@@@C8K@@BXD
)@@G@@C8@@@/ES@@@@)MH[F]@[#@*K)B^C]=G]-]@W/,0@@@C8K@@LC8@@[]/,0@@@C@@@[^/,0@@@XE
)@@G@@C8K@@QC8@@@"/,0@@@ET@@@@)MQ[EKK^C]=G]-]@W@@@@@@@/,0@@@C8K@@IC8@@[ /,0@@@XF
)@@G@@C@@@@SCZD@@@OAS@@@R]K@@VR]@@[#EU@@@@)MZ[##@SK)EK0E^C[4G[=C])@@@@@@/,0@@@XG
)@@G@@C@@@@]/,0@@@C8K@@^C8@@[C/,0@@@C@@@@TCBK@@[EV@@@@)M$[F#@[]#L[^ [^ #@S@@@@XH
)@@G@@ @@@@[[@@@@NG8@@@[C@@@@N[@@@@QG8@@@[C@@@@Q'=@@@@R#@@@@EW@@@@)M0[F#@T@ECCXI
)@@G@@]]-]2OK@@@@@R')@@_'^@@@@*C@@@,/,0@W;ABU@@@R;K@@CR')@@,/K@@^E @@@@@EX@@@@XJ
)@@G@@)M9[#] ([K-VES#CKD+]))@@@@@@@@R]@@@AR K@@@ @@@@M/,0@@@R')@@O'^@@@@*@@@[^XK
)@@G@@/,0@@@EY@@@@)N[[N] 0@@K@@@@@@@O5&@@@/K@@NK*@A@@#P;0@@[RB7@@@P90@@[R[0@@AXL
)@@G@@OT>@@[R[)@@ AA@@@@EZ@@@@)NF[N@^@K[[@([@@@@R')@@@AZS@@@RRQ@@@ @@@@C @A@@#XM
)@@G@@/K@@N]OPP@@@/K@@P[(O @@@8#0@NCFA@@@@)NP[N@^CRK@^CR)@@@'^@@@@(@A@@[O'K@@#XN
)@@G@@&'K@@[R]K@@C9(8@@[9!/@@['^@@@@*@@@@I/,0@Q/FB@@@@)NZ[N[KK^^(]")CK0@O;@@@[XO
)@@G@@'^@@@@/K@@N*?8@@@@RB@@@C9%O)@@9,Q@@[&9@@@]R[@@@[AZK@@CFC@@@@)N([V[^@@@@@XP
)@@G@@H;0@@[CB7@@@P90@@[R[0@@#OS2@@[R@0@@]OO+@@@R@)@@ /K@@OC(O @@@AB@@@CFD@@@@XQ
)@@G@@)N4[MK[@^@K[@@@@@@/K@@N6(@#@@#/K@@N,OO+@@@/K@@OC(O]@@@8A0@N4O43@@@/K@@N/XR
)@@G@@:ON@@@FE@@@@)N"[M^^(]")CK0]]C@/K@@N6 @#@@#AB@@@CO;@@@['^@@@@/K@@O^?8@@@@XS
)@@G@@RB@@@C9%O)@@9,N@@[FF@@@@)OC[N[K^^KL@^@@@@@ @@@@L8^0@OHO8K@@]/K@@O9:OL@@@XT
)@@G@@R@K@@]H90@@[C[0@@B/K@@OL(@@@@BFG@@@@)OM[N@^CSK^@K@@@@@?A?@@@/K@@O(*@@@@IXU
)@@G@@'^@@= CA?@@[[ET@@@CAW@@@'^@@@@*@@@@I'^@@= FH@@@@)OW[V@^@K@@@[ET@@@CAW@@@XV
)@@G@@G9K@@[[A()@@G')@@[H])@@P/K@@OSCA?@@[/K@@O)!A?@@[/K@@O-FI@@@@)O$[UK@@[[@@XW
)@@G@@P#@@@CA]@@@(&'@@@@Q#@@@D[TS@@@G9K@@[[A()@@G')@@[H])@@P/K@@OSCA?@@[FJ@@@@XX
)@@G@@)O2[M]=#E@-#^C@@@@CA-@@[[]O@@@CEL@@[/K@@NEOQC@@@'^@@@@/K@@O7?9)@@@G[)@@GXY
)@@G@@ARC@@@FK@@@@)O/[EKL[K^^K-WK0C@@@@@@@(@@@@-[D)@@@ OG@@@C@@@@(/K@@OJAB@@@CXZ
)@@G@@O;@@@[RB@@@C[]=)@[FL@@@@)P [#@EK#CK@CS ]^@'A@]^A)@@@@@'=@@@@R#@@@@/,0@@@YA
)@@G@@C8K@@%C8@@[D/,0@@@C/@@@@/K@@PVFM@@@@)PH[](@G-@@-)OCK#*S@CKU C[)@@@C/@@@@YB
)@@G@@'=@@@@R#@@@@/,0@@@C8K@@%C8@@[K/,0@@@C/@@@@FN@@@@)PP[#]@[#@*K)BK0@K)4EK#CYC
)@@G@@K@@@@@/,0@@@C/@@@@'=@@@@R#@@@@/,0@@@C8K@@%C8@@[D/,0@@@FO@@@@)PX[#[K)EK0EYD
)@@G@@^C[4C#^G@^CH@@@@@@'=@@@@R#@@@@/,0@@@/,0@@@C8K@@LC8@@@@/,0@@@C@@@@NFP@@@@YE
)@@G@@)P>[](@G-@@)*K CS ]^@']@@@@@@@C@@@@P/,0@@@C8K@@EC8@@@#/,0@@@C@@@@O/,0@@@YF
)@@G@@C/@@@@FQ@@@@)P![#]@(#@*K)BKOC]=G])@@@@@@@@C8K@@BC8@@@B/,0@@@C@@@@Q/,0@@@YG
)@@G@@C8K@@EC8@@@ /,0@@@FR@@@@)P5[#]@X#@*K)BK0@K)4K0AEK#@@@@C/@@@@/K@K@P'=@@@@YH
)@@G@@R#@@@@/,0@@@C8K@@LC8@@@@/,0@@@FS@@@@)P.[F]@[#@*K)BKL[KOC])@@/,0@@@C@@@@SYI
)@@G@@[@)@@SCW,@@[C@)@@#/,0@@@C8K@@QC8@@@D/,0@@@FT@@@@)QA[EK)]KOC]L]@D#@*K)B@@YJ
)@@G@@/,0@@@C8K@@AC8@@@H/,0@@@C/@@@)/,0@@@C@@@@S/,0@@@C/@@@(FU@@@@)QJ[F[K)E^C@YK
)@@G@@= ]@=K)]K0@@R#@@@@/,0@@@C/@@@)/,0@@@C@@@@W/,0@@@C/@@@(/,0@@@C@@@@WFV@@@@YL
)@@G@@)QS[#]#L]AG(@G-@@-)OCK#*C@@@@@C@)@@#/,0@@@C8K@@?C8@@@I/,0@@@C/@@@@'^@@@@YM
)@@G@@'=@@@@FW@@@@)Q)[EKO ]@*K)]KOC]K@@@@@C/@@@)/,0@@@C@@@@S/,0@@@C/@@@(/,0@@@YN
)@@G@@C@@@@S[@)@@SCW,@@[FX@@@@)Q([F]@D#@[]#L]AKKK@@@@@P8K@@[R@K@@AOT&@@[R[)@@LYO
)@@G@@@@@@@@'^@@@@'=@@@@R#@@@@/,0@@@FY@@@@)Q2[M[@^@K[@@@@@@@/K@@Q9 @@@@G/K@KQ!YP
)@@G@@C8@@@[8#@@Q4O5&@@@/K@@Q':OQ@@@P;@@@[RB[@@@FZ@@@@)Q/[N#@SK@K[@^@@@@/K@@R@YQ
)@@G@@ORG@@@/K@@RA(OG@@@/K@@RE:WW@@@RBE@@@/K@@RC(CE@@@AA0@@EGA@@@@)RA[EK[@^G[=YR
)@@G@@G[=G[^G[@@@@A@K@@[9*@@@^AA0@@D/K@K@ER;)@@@/K@@RFR;)@@]/K@@RFR;)@@[GB@@@@YS
)@@G@@)RJ[##@L#@L]AP#@L#@L#@L#@K@@@@RBT@@]R@0@@#R@)@@]R@K@@[9?@@@^/,0@@@A@0@@#YT
)@@G@@A@)@@]GC@@@@)RR[UK@@@@@@(@@@@IW8K@[=;GK@@=T@K@@KP;K@@ERFT@@]C[@@@GP#@@@KYU
)@@G@@R;@@[=/K@@R5(@@@@HGD@@@@)R+[N@@[@K0AK0AK@@/,0@S;A#K@@I9*0@@J/K@@R5?8K@@[YV
)@@G@@R#K@@GP#@@@HRBD@@]G8K@@[/K@@R=GE@@@@)R?[N#@T#@SK@K[@@@R;)@@[/K@@R6R;)@@@YW
)@@G@@/K@@R5?@K@@JO;0@@[/K@@R1(@@@@IR#K@@I9?0@@JGF@@@@)R6[F#@T#@SK^G[=@K@@@@@@YX
)@@G@@R;)@@[/K@@S>(@@@@I/,0@S;R]@@@G/K@@S?(CD@@#AA0@@^/K@K@DGG@@@@)R_[N#@SK0A@YY
)@@G@@[#@T@@/K@@SW!@0@@H;C0@@S;*0@@SRF7)@@P;K@@[RFT@@# @@@@H&90__"R[0@@GGH@@@@YZ
)@@G@@)SD[N@^@K0AK^[#@S@P;0@@[P;K@@[R#0@@H/K@@S-/K@@SK?@K@@HRFT@@#/K@@S-*4D@@@ZA
)@@G@@8#K@S^GI@@@@)SN[F#@SK^@K^G[=[]AS@@@@'^@@@@8#K@SMR#K@@L/K@@S0*@@@@I/,0@TMZB
)@@G@@/K@@SY:80@@[A#K@@LGJ@@@@)SW[F#@T@[@K0A^G[=@@@@@@/K@@S0A#0@@HO;0@@[R#0@@HZC
)@@G@@/K@@SQA7D@@@R;@@@[/K@@SDA#0@@HGK@@@@)S>[U@^[@@K@/K@@S0A79@@@R;0@@[R;)@@[ZD
)@@G@@/K@@S0/K@@R_(@@@@J;C0@@S;*0@@SRF8@@@R;)@@@GL@@@@)S0[MK^CT0K0A@@@@@OFT@@AZE
)@@G@@P#K@@CO;K@@[&;K@@@R#K@@G&'@@@@R#C@@@'^@@@@/K@@S3!80@@[GM@@@@)S'[N#@T#@SKZF
)@@G@@@^@@@@R#8)@@P;K@@[/K@@TC(@@@@HRFT@@#&'@__"/K@@TF*0D@@@AA0@@ /K@K@^GN@@@@ZG
)@@G@@)T^[N#@SK^@^@K0A@@PED@@#R]@@@GR;)@@[/K@@TLA3D@@@R;)@@[8#K@T#/K@@TJ*@@@@KZH
)@@G@@+@0@@MGO@@@@)TI[F@[#@T#@T#@S@@@@@@@@(@@@@HRFT@@#&'@__"R]@@@GAA0@@A/K@K@ ZI
)@@G@@O'@@@[R;)@@@/K@@TLGP@@@@)TR[N@@[@K[@@@@@@@/K@@T+R;)@@[8#K@TT/K@@T-:@0@@GZJ
)@@G@@;C@@@S;*@@@SRFC)@@P;K@@[/K@@T<GQ@@@@)T-[MK0AK-*K0A[@@@AFD@@#O;@@@[RFD@@#ZK
)@@G@@/K@@T?(@@@@IC D@@]AA0@@B'^@@@@/K@K@AR;)@@@GR@@@@)T:[U@@K@@@@H[@@@HA\D@@@ZL
)@@G@@R;@@@[/,0@>MN@K@@HO@)@@DR@)@@#A^8@@@R^9@@#AF8@@@H9@@@[GS@@@@)T6[MK@@K0A@ZM
)@@G@@@@@@@@ ^D@@# ^D@@]/K@K@B[[#@@@O@0@@DA^9@@#O@0@@H[ D@@]/K@@T"(@@@@KGT@@@@ZN
)@@G@@)U@[N#@SK0CKK[#@S@*@@@@I+@K@@MR#S@@@P]@@@JOED@@]R]@@@DR]K@@V @@@@M@@@@@@ZO
)@@G@@/K@K@BGU@@@@)UE[F]A>#@)K@^@@@@@@@@@@*@@@@I'^@@W[RZR@@@O 8@@@R[0@@D/K@@UYZP
)@@G@@*@@@@I+@K@@>'^@@@@GV@@@@)UN[#]A([K0CK0CK0CK0CK0C@@@@@@O[0@@[A#@@@WR#@@@KZQ
)@@G@@A@K@@VA[0@@UA#@@@TR#@@@T'^@@@@GW@@@@)UV[EK0CK^G]^G]^G]@K0C@@ABK@@E;CK@@SZR
)@@G@@;*K@@AA#@@@WR#@@@KABK@@D/K@KU[A#@@@HR#B@@@GX@@@@)U=[MKO^KL@^[@@@@@/K@@U;ZS
)@@G@@8A0@U(O9@@@]/K@@U,:Y^@@@R[@@@^H;0@@[C#0@@$C]@@@RC 8@@@GY@@@@)U,[UK@K^@@@ZT
)@@G@@O#K@@GTCH@@]RBO@@@PF^@@[R#@@@N/K@@U:/K@@U4!])@@NCA=@@[/K@@U:?D4@@[GZ@@@@ZU
)@@G@@)U9[MK^^]+CC@@@@@@[DE@@BC9@@@[9*K@@6A3'@@#R')@@6R#0@@K9?W@@[R#@@@K/K@@VIZV
)@@G@@R[0@@HHA@@@@)V#[M^G]^[@[]A![K@/K@@<N*4@@@9/,0@@@[ '@@CAB'@@B'^@@>?/^0@VCZW
)@@G@@C@0@@+[DU@@CCXW@@#HB@@@@)VH[N#@)@[]A0@@@@@R#6@@@H;0@@['^@@@@(@@@@VCF7@@#ZX
)@@G@@PD$@@AP9)@@[OD$@@]R[)@@BR[0@@+HC@@@@)VR[F#@SK[@K-!^G]@@@@@@@(@@@@H+@@@@=ZY
)@@G@@R#A@@@'^@@@@8A0@VQP9)@@[/K@@VX(@@@@K+@0@@MHD@@@@)V)[N@[#@-@@K0C@@@(@@@@HZZ
)@@G@@+@@@@<R#]@@@O^&@@@R@)@@B/K@@VU%@@@@E;C@@@S;*@@@A/K@@V-HE@@@@)V%[N]A8@K0CAA
)@@G@@K@K@@@'^@@W[R[@@@]RZM@@@/K@@VU%@@@@HR##@@@P80@@[OO2@@@R@0@@]'^@@@@HF@@@@AB
)@@G@@)V4[EK-\K0CK0C[#@)K0C@@@A#@@@MR;@@@[A#@@@FP#@@@AOFG@@]R#@@@+A@K@@V'^@@@@AC
)@@G@@(@@@@IHG@@@@)V.[E^G]^@K-0K0@K-0@@@@@2WM)@@Q^)@@@R@)@@]NCK@@@@@@@@@/K@KU[AD
)@@G@@A#@@@HR#^@@@O[@@@[HH@@@@)WA[N@@^@K[[@@@@@@C[0@@T@@@@@@/K@KW[R;)@@[/K@@WHAE
)@@G@@P8K@@[ROM@@@ @@@@IP8)@@[/K@@WGHI@@@@)WK[F[K[@^@(]G)CK8)@@@@@'^@@@@/^@@WTAF
)@@G@@C8@@@@/K@@W):8)@@#/K@@WW:8)@@]'^@@=YC]@@@RHJ@@@@)WT[MK-1K@^@@@@@@@G9K@@[AG
)@@G@@C[K@@KC[)@@J/K@@W<G9K@@[HDS@@ C[)@@L/K@@W''^@@@@%8)@@[HK@@@@)W<[N[^@KL@^AH
)@@G@@@@@@@@[Q^@@@8#K@W*O9@@@]/K@@W8:Q^@@@R[@@@]P;K@@[/K@@W6(@@@@HR#K@@BHL@@@@AI
)@@G@@)W![E^^(#=)CK0]])@@@@@@@/K@@W'A#@@@BO;@@@['^@@@@/K@@W3?8@@@@R#@@@B[DO@@[AJ
)@@G@@[ =@@[HM@@@@)W6[F[K[@K^G[=G[^G[^G[@@A@)@@]A@K@@[^@K@@@AA0@@F/K@KWI/K@@W%AK
)@@G@@% =@@[/K@@W?R[@@@]HN@@@@)W_[MK0@K0@@K[@@@@:9)@@B/K@@<^:9)@@A/K@@XN:9)@@[AL
)@@G@@C %@@@M@-)@@R@)@@^R@K@@#N8K@@THO@@@@)XD[N@^@K[@^[@@@@@/K@@<7/K@@+Q:9)@@CAM
)@@G@@/K@@+M:9)@@ /K@@)#:9)@@]/K@@-?:9)@@#/K@@+"HP@@@@)XN[M@K[@[@@@@@@@@/K@@X,AN
)@@G@@!]K@@NC]N@@]/K@@XY?[3@@[/K@@P/(@#@@[R^'@@]CYE@@[C '@@[HQ@@@@)XX[N@KL@@K^AO
)@@G@@ @@@@@/K@@<:*@@@@</K@@<*%@@@@NG8@@@[C@#@@]/K@@<*%8@@@BRB@@@,/K@@XYHR@@@@AP
)@@G@@)X$[MKK[@K[@@@@@@@/K@@Y@:8)@@['^@@=Y/K@@<^[CE@@#C^E@@[[^E@@@C8@@@A[@@@@<AQ
)@@G@@C^E@@[HS@@@@)X1[MK[@K-3ECC@@@@G9K@@[/K@@Y@:9)@@[C %@@@R')@@,'^@@@@/K@@YAAR
)@@G@@:8)@@#/K@@X6:8)@@]HT@@@@)X;[EK^CX[@KL@K0C@@@@@@@:[0@@X/K@@YB%8@@@BC^@@@,AS
)@@G@@/K@@XOC[0@@L'^@@@@/K@@X"![@@@LHU@@@@)Y^[N@K^CXO @KL[^@/K@@YL:Y^@@@R[@@@^AT
)@@G@@H;0@@[C#0@@$/K@@<B(@@@@$'^@@@@/K@@YB/K@@<:HV@@@@)YI[MK^@K@K^@@@@@@C]0@@NAU
)@@G@@/K@@YI/K@@<O!])@@NCA=@@[/K@@YI?D4@@[/K@@YR8A0@YGO9@@@]HW@@@@)YS[EEKK+@O)AV
)@@G@@-^@([]@@@@@@G'0@@[H'0@@@/K@@Y)*@@@@ST'0@@@/K@@Y+(@@@@RW'0@@@;I0@@=HX@@@@AW
)@@G@@)Y-[N@^ [^@]=^C@@@P;@@@[R;@@@@&D&@@]R >@@@/K@@Z^(W @@@O[K@@*R[K@@^C'0@@[AX
)@@G@@/K@@Y<HY@@@@)Y:[MK@([@)]^I0 ^@R')@@6R;0@@C9?W@@['^@@@@*@@@@I/,0@Q/R')@@@AY
)@@G@@RZP@@@8#@@Y: @A)@@HZ@@@@)Y5[UKK@@@@@CDP@@[[DE@@CTDG@@]ABE@@BRB @@@[DE@@BAZ
)@@G@@G9@@@[HD @@[C  @@[9*K@@6A3'@@#IA@@@@)Z@[MK-:KO[[@*+]@@9*K@@6A3'@@#R')@@6BA
)@@G@@R;0@@K9?W@@[R#@@@K/K@@<M*4@@@9/,0@@@[ U@@CIB@@@@)ZE[M([]@@))@@@@@@[E5@@[BB
)@@G@@[A'@@CA#0@@UAB'@@BRB5@@@[DE@@CT[@@@JCW/@@#[DE@@BC9@@@@IC@@@@)ZO[M^CU4 @^BC
)@@G@@[[]=^CR;@@@@&FX@@]R#K@@U/K@@<N%8@@@%/@@@ZVR7@@@9/,0@@@H#@@@RC#@@@NID@@@@BD
)@@G@@)ZY[M^[[^ [^^@@@@@*@@@@IW^K@@/;GK@@=RBK@@9A#@@@RAZ @@@R#@@@H8#@@ZZ @H)@@BE
)@@G@@P;@@@[IE@@@@)Z*[N]BW[[KO @@@@@RB5@@@[ _@@#/K@@)[*@@@@+R#0@@M[[0@@T[A5@@[BF
)@@G@@H'0@@[G]0@@H'^@@@@IF@@@@)Z2[M^ []=^U@CE]@@R#@@@$[[@@@* @@@@K/K@@Z'%9@@@@BG
)@@G@@G9@@@]C[@@@*A#0@@VO#0@@STFJ@@]IG@@@@)Z/[M([^)]])]@@@@@R^'@@]CYE@@[C '@@[BH
)@@G@@/K@@Z1[D_@@#/K@@<>A#@@@$O;@@@[/K@@)@:8@@@@IH@@@@))A[N@^@K-8^[#@-@@:[0@@LBI
)@@G@@/K@@)Q:[0@@Y/K@@-B:8)@@#'^@@@@:8)@@^/K@@+C:8)@@['^@@=YII@@@@))K[N@K0CK^GBJ
)@@G@@][@@@@:@@@@NG8@@@[PFC@@ C@@@@L/K@@YBG90@@[[[0@@Y/K@@)O*@@@@Y/K@@)WIJ@@@@BK
)@@G@@))U[N@K^G]^@[#@)K@/K@@),:[0@@G[@@@@)G8@@@[PFC@@ C@@@@L/K@@)&*@@@@)/K@@),BL
)@@G@@/K@@)JIK@@@@))=[F#@-#@-#@-@[#@-@@@@@C[0@@L/K@@),:[K@@YG9K@@[HDS@@ /K@@)3BM
)@@G@@*@@@@R[[0@@Y(@@@@YIL@@@@))![F@K0CK0C^G]^G][@@@@@ @@@@L/K@@)/%[K@@KC[K@@SBN
)@@G@@A#@@@RR;@@@[[@@@@YC@@@@)/K@@YBIM@@@@))6[M^G]^@K@^@@@@@/K@@-[![@@@LG S@@^BO
)@@G@@G9K@@[/K@@YBC[0@@L/K@@-T:[K@@YG9K@@[G S@@^IN@@@@)-@[F]B=K[]B*K^G]^G]@@@@BP
)@@G@@[[0@@Y(@@@@Y/K@@)8C[K@@N'^@@@@%8)@@]'^@@=YC[0@@L'^@@@@IO@@@@)-D[EK[#@-@[BQ
)@@G@@#@-@@@@@@@@@/K@@-P[@@@@ZG8@@@[C@@@@N/K@@-M*@@@@ZC[0@@K/K@@-P%[0@@JIP@@@@BR
)@@G@@)-M[F#@-[K[#@-@K]=C0@@@@(@@@@GC8@@@@/K@@YB/K@@-M:[0@@YG90@@[/K@@+C[^@@@\BS
)@@G@@C@@@@@IQ@@@@)-V[N]B?K@^G]^@*)@C^E@@[R')@@,/K@@YB[[0@@YG90@@[H 8@@ CD8@@^BT
)@@G@@/K@@-<(^C@@ '^@@@@IR@@@@)->[MK0C@^@@@@@@@@R^'@@]CYE@@[C '@@[/K@@+"[^E@@#BU
)@@G@@[^E@@@C8@@@B[^E@@[C@@@@@[CE@@#IS@@@@)-\[F@^CZ[@^G]^[#@)@@@@@[[K@@Y/K@@-8BV
)@@G@@*@@@@YG9K@@[/K@@+@(^C@@^'^@@@@%8)@@['^@@=YIT@@@@)-8[MK^CZL@^CY=@K@/K@@+CBW
)@@G@@(^C@@ /K@@YB'^@@@@%8)@@]'^@@=YC[0@@L'^@@@@/K@@-;![@@@LIU@@@@)+][E^G]^[#@BX
)@@G@@-@EK<]^J0@@@'^@@@@(@@@@GC8@@@@/K@@YB[[0@@Y/K@@+B*@@@@YG90@@[C[0@@KIV@@@@BY
)@@G@@)+F[U*)@)@C@/K@@YBR^'@@]CYE@@[C '@@[/K@@+"[^E@@#[^E@@@C8@@@B[CE@@#C^E@@@BZ
)@@G@@R')@@,IW@@@@)+Q[N[EKL@)CK_+@@@&D&@@]R >@@@/K@@+;(W @@@'^@@@@/K@@+W!;0@@@CA
)@@G@@H;0@@[C;0@@@R[K@@^IX@@@@)+)[E([]]@ CC^@K+@@@@@@@'^@@@@*@@@@I/,0@Q/R')@@@CB
)@@G@@RZP@@@8#@@++ @A)@@P;@@@[R;@@@@IY@@@@)+([U]+CC@@@ABE@@BRB @@@[DE@@BG9@@@[CC
)@@G@@HD @@[C  @@[9*K@@6A3'@@#R')@@6R;0@@C9?W@@[IZ@@@@)+4[M@K-:KO@K^@@@@/K@@<>CD
)@@G@@8A0@+WO9K@@]/K@@<M*4@@@9/,0@@@[ U@@CCDP@@[[DE@@CTDG@@]JA@@@@)+"[MK0CK^G]CE
)@@G@@[@[@KKR]@@@ /K@@XOC[3@@[R^'@@]/K@@XOG90@@[[[0@@X/K@@<]*@@@@XC '@@[JB@@@@CF
)@@G@@)<C[N[EKL@CDM]^K^@/K@@YR8#@@<GO]@@@RT'0@@@C]0@@>AAD)@@&'K@@]P;@@@[R;@@@@CG
)@@G@@R]K@@^JC@@@@)<M[F]C ]CD[KO [K@@@@@@@R#@@@N[ .@@#/K@@<<*@@@@+R#K@@M[]@@@RCH
)@@G@@[[0@@T'^@@@@'^@@@@JD@@@@)<V[MKL[[[K[@@@@@@/K@@<U[D.@@#/K@@<>A#K@@VO#K@@GCI
)@@G@@TCH@@]A#K@@URBO@@@A#@@@XPF^@@[JE@@@@)<>[EKO@KO@KM=@0@@@@@@@@C/@@@@AF@@@,CJ
)@@G@@R;@@@]/K@@<.AF@@@,R;@@@[/K@@<.AF@@@,R;@@@@JF@@@@)<,[#]@[#@*K)BKOC]=G@^CHCK
)@@G@@@@@@@@'=@@@@R#@@@@/,0@@@C@@@@S/,0@@@C8K@@=C8@@@Y/,0@@@JG@@@@)<6[F@^ @^ @CL
)@@G@@^G@@@@@@@@@@R@K@@^N8K@@T/K@@<.AF@@@,R;@@@^/K@@<.AF@@@,R;@@@#/K@@<.JH@@@@CM
)@@G@@)<_[F#@@K0^K0^K0^K0A[[@@RB)@@CC'0Z__@@@@@@/K@K@FR@)@@]R@K@@[N@K@@@M@-)@@CN
)@@G@@R@)@@#JI@@@@)=C[MKK^@K[@@@@@@@/K@@=R(@@@@T8#)@=FO;@@@]/K@@=T%;@@@BC7G@@@CO
)@@G@@ @@@@TR#@@@[P;)@@[JJ@@@@)=M[U@K[@^@@C#K@@GCA/@@@/K@@=I?A/@@@/K@K= R;)@@[CP
)@@G@@/K@@=S @@@@I[7G@@@R#@@@TC;@@@BJK@@@@)=X[N@@([@)]^KS@@@CDC@@^RF8@@^R]@@@GCQ
)@@G@@'^@@@@*@@@@I/,0@Q/R')@@@R#K@@O@@@@@@/K@@=IJL@@@@)=$[M[@[@^C-@@@@@@?[K@@NCR
)@@G@@'^@@@@?[@@@L/K@@>]:[@@@LG S@@^/K@@=/(^C@@^ @@@@LH C@@ JM@@@@)=1[N@K@K[]CCS
)@@G@@OK^@@@/K@@>E/K@@=;?[K@@N'^@@@@?[@@@L/K@@> :[K@@KGDS@@ /K@@>C/K@@=3JN@@@@CT
)@@G@@)=;[N@^[@^[@^[@@@@/K@@>C/K@@=_?[K@@N/K@@>G/K@@>I?@0@@N/K@@>C/K@@=_?[@@@NCU
)@@G@@/K@@=:JO@@@@)> [MK^@K[@^@@@@@@R;)@@^/K@@>KR;)@@#/K@@>KR;)@@]/K@@>KR;)@@[CV
)@@G@@/K@@>E/K@@=_?[K@@NJP@@@@)>J[F@K0CK^G[)^G[)@@@@@@@@@@@@/K@K@CM@-)@@&8)@@[CW
)@@G@@&8K@@[AA0@@C/K@K=Y[[K@@S/K@@>KJQ@@@@)>S[F]][]CGK))K))K))[@@@/K@@>+!@K@@ICX
)@@G@@CW?@@#GD@@@@C @@@@C^@@@@ @@@@H'^@@@@(C@@@@JR@@@@)>-[M^@^CI4@K);KK@[@K@@>CY
)@@G@@'^@@@@(@@@@H/K@@>Y'^@@@@!@@@@KGOG@@@/K@@>*(OG@@@C@K@@IJS@@@@)>:[F@^G[^G@CZ
)@@G@@^CH^ ][WK0C@[@K@@+G8K@@[C@K@@@C@@@@>'=@@@@R#@@@ 9*@@@W@@@@@@/K@K>RJT@@@@DA
)@@G@@)>4@2K)RK)RK)SK0^K@@@@@@)@@@O@@@@@@@@@@@@@/K@K>?9?@@@W'=@@@@[@@@@@G@@@@@DB
)@@G@@C@0@@HJU@@@@)@]@W@)@A@O@)@D@=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DC
)@@G@@@@@@@@@@@@@@@@@@@@JV@@@@)@H[W@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JW@@@@)@S[W@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JX@@@@)@<[O@/S]@/@@@@@@@@@@@@@DF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JY@@@@)@!@G@)@Y@Q@DG
)@@G@@)@@@@@)@@@,[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)______@@@@@@JZ@@@@DH
)@@G@@)@ [Y[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DI
)@@G@@@@@@@@KA@@@@)@K[Y[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DJ
)@@G@@@@@@@@@@@@@@@@@@@@KB@@@@)@V[Y[@@@@@@C@@@@@K@@@@@@@C@@@@@@@@@@@@@@@@@@@@@DK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KC@@@@)@@[Y[K@@@@@E RANGNO PAGT      DIRECDL
)@@G@@AND    CALC ET,    VIA SOADED DS REL RECORKD@@@@)@F[Y[K@@@@@      D CODEDM
)@@G@@ RECORS 0,  CALC IED BY RETURN PGE#  AREA ORD   E, RECKE@@@@)@Q[Y[K@@@@@DN
)@@G@@E AVAIE SPACNO MORCORD  LC, RE BY CATURNEDREA RED IN A RELOACANNOTKF@@@@DO
)@@G@@)@-[Y[K@@@@@OR BUFCORE FWILL MHAIN, CALC CRD ON N RECOFOREIGRD:     RECODP
)@@G@@LABLE,KG@@@@)@?[Y[K@@@@@ECT REG: DIRWARNIN AREA E:    OR CODLURE FCH FAIDQ
)@@G@@E SEARC TABLFER   KH@@@@)@7[Y[K@@@@@LOT   R OF S NUMBERECORD      , PAGEDR
)@@G@@AREA  SION,  COLLIUMBER CORD NKI@@@@)[][Y[K@@@@@************************DS
)@@G@@ TO   M     ED FRO CHANGCODE  ECORD  FOR RKJ@@@@)[H[Q[K@@@@@@@@@@@RROR *DT
)@@G@@CESS EAD PROE RELOOSSIBLING: P* WARN******************KK@@@@)@@[Y@0@@@@@DU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KL@@@@DV
)@@G@@)@F@Y@0@@@@@)@M@&@0@@@@@@@@@@@@@@@@@@@@@@@OC@@@@NC@@@@)@@@@@@@@@@@@@@@@@DW
)@@G@@@@@@@@KM@@@@)@@@0([&O0[@()CO0E@@@@@@@@@@@@@@@@@@@@@@@@@[D@@=@@[@@#@@[@@#DX
)@@G@@@@[@@@@@[@DO@[I@@@KN@@@@@@^@@F@@J@]A@^V@@>@A\@@@@@@@@A@@@@>'@@@@[!)@@@@@DY
)@@G@@@@@@@<)@@@@@@@@@@Q)@@@@@@@@@@&)@@@@@@@@@[REDIT$       EDITR$      ECHAR$DZ
)@@G@@      ECOL$       ESKIP$      ECLR$       EDPKT       ECOPY$      EPACK$EA
)@@G@@      EOCTV$      EDECV$      EFD1$       EDITX$      ECOLN$      EMSGR$EB
)@@G@@      MXRSIZ      TOPT        DEBUG$      Z1          CF$AM       C5    EC
)@@G@@      RER001      Z2MULT      LAST$D      MCORE$      C4SIZE      MRGSIZED
)@@G@@      RNGSIZ      Z2LINK      WOPT        CLSEG$      RER002      C3    EE
)@@G@@      BLSIZE      NUMBLK      BFISIZ      DF$AMR      RER003      DBP$APEF
)@@G@@S     RER004      RER005      RER006      RER010      RER007      RER008EG
)@@G@@      RER009      APS$DBP     RER011      KF$AMW      RER012      RER013EH
)@@G@@      PRINT       PRINT$      RER014      RER069      KF$AMR      RER015EI
)@@G@@      RER016      RER017      RER068      RER018      RER019      RER020EJ
)@@G@@      RER021      RER022      RER023      RER024      RER025      RER026EK
)@@G@@      RER027      DMSLEV5     RER028      RER063      RER029      RER030EL
)@@G@@      RER031      RER032      RER033      RER034      RER035      RER036EM
)@@G@@      RER037      RER038      RER081      RER082      RER084      RER083EN
)@@G@@      RER046      RER085      RER039      KF$AMF      RER040      C4    EO
)@@G@@      RER041      RER042      MRGENT      RER057      RER043      RER067EP
)@@G@@      RER044      RER045      PACKPG      RER047      RER048      RER049EQ
)@@G@@      RER050      RER051      DB$AM       RER052      RER053      RER054ER
)@@G@@      RER055      C6          RER056      C4OVEN      RER058      RER059ES
)@@G@@      RER060      RER061      RER062      RER064      RER066      RER072ET
)@@G@@      RER065      RER070      RER071      RER073      RER074      RER075EU
)@@G@@      RER076      RER077      RER078      RER079      RER080      RELOADEV
)@@G@@      @@[@@@@@@@@@RELNUM      @@]@@@@@@@@NRELSNUM     @@]@@@@@@@@ORELCNUEW
)@@G@@M     @@]@@@@@@@@PRELDNUM     @@]@@@@@@@@QZ2          @@]@@@@@@@@@CLPGE EX
)@@G@@      @@C@@@@@@@@@CLCHNE      @@C@@@@@@@@[CLCHDR      @@C@@@@@@@@]RLRCADEY
)@@G@@      @@C@@@@@@@@#CHDREL      @@C@@@@@@@@^CLCHAD      @@C@@@@@@@@ RELATVEZ
)@@G@@      @@C@@@@@@@@APPGADD      @@C@@@@@@@@BPPGNUM      @@C@@@@@@@@CFORPGEFA
)@@G@@      @@C@@@@@@@@DFORREC      @@C@@@@@@@@EFORSLT      @@C@@@@@@@@FCLSAVPFB
)@@G@@      @@C@@@@@@@@GCLNXTP      @@C@@@@@@@@HCLCARE      @@C@@@@@@@@ICLCPGEFC
)@@G@@      @@C@@@@@@@@JCLCSLT      @@C@@@@@@@@KCLCC3A      @@C@@@@@@@@LFORRSWFD
)@@G@@      @@C@@@@@@@@MCENDSW      @@C@@@@@@@@NHEZRSW      @@C@@@@@@@@OWRAPSWFE
)@@G@@      @@C@@@@@@@@QARSCAN      @@C@@@@@@@@ROLDSUM      @@C@@@@@@@@SLSTPGEFF
)@@G@@      @@C@@@@@@@@TLSRADD      @@C@@@@@@@@ULSRREL      @@C@@@@@@@@VLSRSLTFG
)@@G@@      @@C@@@@@@@@WPPTMSK      @@C@@@@@@@@<RFPMSK      @@C@@@@@@@@=SHPMSKFH
)@@G@@      @@C@@@@@@@@>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[#]@.][[#@K(@+-@=)CKDFJ
)@@G@@)@@@@@G8@@@[C@@@@@'^@@[Q/,0@@@R')@@@A]0@@#'^@@@@*@@@@@AA@@@@)@C[##@L][L#FK
)@@G@@@L#@L#@L#@KK@@@@@@/K@@[J!SH@@@CC@@@JC^K@@J C@@@J[@@@@JC^@@@@[^@@CFAB@@@@FL
)@@G@@)@K[EK0^@K0^^G[@@@@@@@@@9?.@@[[O0@@]CW.@@@[@0@CHC@/@@@G@@@@HG8@@@][C@@@JFM
)@@G@@G8@@@[AC@@@@)@T[F#@KK0^K0^K0^^G[^G[@?8@@@EC^@@CH[C@@CHG8@@@E[^@@CGCC@@CHFN
)@@G@@[0@@CBC8@@@K9*0@C^AD@@@@)@+[F@^G[[@K0^K0^K0^K@@@'^@@['C@@@@][C@@CF ^@@CHFO
)@@G@@/K@@@*C8@@@E[^@@CHH8@@@E/K@@@$AE@@@@)@:[]K)PK0^K0^K0^K0^K)QK)R@@@@ @@@@@FP
)@@G@@[@@@@@G^@@CF[C@@CGTC@@CF[@@@@@'=@@@@(@@@@GAF@@@@)@3[#][)()C-@2-)C-@4-)C)FQ
)@@G@@CS]@@@C^@@CG8KK@@'NCK@CF/,0@@@*4@@CB/,0@@@R')@C^'=@@@@AG@@@@)@;[F#@L#@K[FR
)@@G@@#@L@K0^K0^@@[C@@@^CC@@CF8KK@@.G@K@@@G8@@@[[C[)@@[^L@@@R@K@CIC^K@CFAH@@@@FS
)@@G@@)[^[##@L][!][1#@L#@K()C@@@@@@@MCM)@@N8K@@ER8)@@^R@K@CI @@@@^'^@@@@'^@@@@FT
)@@G@@[^@@@^AI@@@@)[G[F#@L@K@K[#@L#@K@@@@@ C@@@J[@K@@JG@K@@G/K@@[$(@@@@GCOH@@@FU
)@@G@@/K@@@G/K@@@U*^@@CHAJ@@@@)[P[F@^G[^CBOG[@@@@@@@@@[S])@@C?[@@@[O]@@@CW[@@@FV
)@@G@@R@)@CJR^K@@@ @@@@K@@@@@@/K@@@GAK@@@@)[Y[F#@KK0^^C L@^@@@@@@@/K@@[UO@K@@GFW
)@@G@@/@@K[QCO[@@@'=@@@@!8@@B4[W@@@KG8@@@[CW@@@KAL@@@@)[$[](@+-@/O)AK)@K)EK)C^FX
)@@G@@C[@@@@/,0@@@C/@@@[/,0@@@C@@@@@/,0@@@C/@@@@/,0@@@R')@@@AM@@@@)[\[##@L]@?KFY
)@@G@@)^K0^K)FK)GK0^@@@@R#@@CO/,0@@@/,0@@@9?@@CM/,0@@@C/@@@[/,0@@@9?@@CKAN@@@@FZ
)@@G@@)[7[F]][#@K^G[^G[^CCK@@@W8K@@D;GK@@=CCK@@@CO@@@[[@@@@[@@@@@@/KF@@@R]0@@#GA
)@@G@@'=@@@@AO@@@@)]@[MK)-[@@K@@@@@@ @@@@G/K@K['9?X@@[CWH@@#H8K@@D/K@@]D2WH)@@GB
)@@G@@&;K@@DC^K@@@N@K@@HAP@@@@)]E@F@@@@@@@)@@@,@)@@@@@)@J@I@)@@@@@@@@@@@@@@@@@GC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@/K@K['AQ@@@@)C^[Y@)@@@*@@@[@@ @@@@@@@@@@@@@@@@@@GD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AR@@@@)CJ@6@+)@ CB0@@@@@@@@@@@GE
)@@G@@@@@@@@@@@@@@@@@@@@@[I@@@ELETED@@@@@DECORDS@@@@@R@@[@@KAS@@@@@@@@@@@@@@@@GF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GG
)@@G@@@@^@@ @@D@@+@[H@@E@[5@@@@@@@@@@@@@]F)@@@@@)@@@@@@@@@CPEDIT$       EDITR$GH
)@@G@@      ECHAR$      ECOL$       ESKIP$      ECLR$       EDPKT       EOCTV$GI
)@@G@@      EDECV$      EFD1$       DLTCNT      EFD2$       EDITX$      ECOLN$GJ
)@@G@@      EMSGR$      TOPT        DEBUG$      KFPKT       KF$AMR      LAST$DGK
)@@G@@      C4          ERR$        OVFADDR     OVFCNT      MCORE$      DB$AM GL
)@@G@@      IOERR       DLTPGE      COMPACT     C5          KF$AMF      PRINT GM
)@@G@@      PRINT$      C3          REORDLT     @@[@@@@@@@@@GETASIZE    @@[@@@GN
)@@G@@@@@@['DLTAREA     @@^@@@@@@@@]DPGCNT      @@^@@@@@@@@^DPGTBL      @@^@@@GO
)@@G@@@@@@@ DLTC10      @@^@@@@@@@@KDLTPKT      @@^@@@@@@@C^DPKT1       @@^@@@GP
)@@G@@@@@@CBDPKT2       @@^@@@@@@@CFDPKT3       @@^@@@@@@@CG@@@@@@@@@@@@@@@@@@GQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[F][ ][D#@L][G@K@@@@@GS
)@@G@@/K@@@F(O[@@@CW[@@#?W[@@#C8@@@@R^K@@@AA0@K&'^@@@@*@@@@@AA@@@@)@D[EK^G[^G[GT
)@@G@@[][KK0^@@@@@G@@@@H[@K@KUG8K@@[C@K@@@T8@@@E[@@@K* @@@KV/K@@@ OOL@@@AB@@@@GU
)@@G@@)@M[F][P][K[#@KK^@@@@@@@'^@@@%'^@@@YM@-)@@R@)@K;R8K@@G @@@@GN8K@@E[@@@@@GV
)@@G@@'=@@@@AC@@@@)@V[F@K^@ES]CKFCS]CS]C@@/K@@#?:@@@@@C@@@K//,0@@@R')@@@@@@@@@GW
)@@G@@/K@@@T'^@@] '^@@@3AD@@@@)@=[F#@L@K0^^G[^@K0^K)R@'^@@@@C@@@@@@@@@@@/K@K@YGX
)@@G@@[@@@J:G8@@@[C@@@J:/K@@@Z(@@@@@AE@@@@)@!@2K^G[^G[^G[^@@)J*@Q@)@@@@@@@@@@@GY
)@@G@@@@@@@@/K@K@%[@0@J%[@)@J([@K@J*/K@@^:(@@@@HAF@@@@)J%@Q@)@@@@@)@3@2K0^K0^@GZ
)@@G@@@@@@@@N8K@@E;?@@@M;*K@@MC@K@J(C@@@J*@@@@@@@@@@@@@@@@@@AG@@@@)@9[F#@KK@^GHA
)@@G@@[^G[@@@@@@@@R]@@@GG@@@KUT@@@K*H8@@@[H@@@[[C8@@@E/K@@[#2@[)@@R@K@K;AH@@@@HB
)@@G@@)[][#@K0^K0^K^G[^@K)S@@@@@@@@@'=@@@@(@@@@G'^@@[6CO@@J*'^@@[)*@G@KWC@@@KVHC
)@@G@@/K@K@3AI@@@@)[E[##@L#@L#@L#@L#@L#@L#@L#@K@[^@@K0G@@@KUT@@@K*C@@@KV[^@@K1HD
)@@G@@C@@@J([C@@K19*K@K(AJ@@@@)[M[]()C-@2-)C-@0-)C-)C-)C-)C@C@K@J([CW@KWC@K@J*HE
)@@G@@C@@@KV'=@@@@*4@@K?/,0@@@R')@K(AK@@@@)[U[F#@K[#@L@^G[^G[@@@@@CC[@KWR@K@KVHF
)@@G@@@@@@@@/K@@@4[@K@KVW8@@@E;G@@@=G8@@@[[^W@KWAL@@@@)[<[#@^CA^G[^G[^G[^G[^G[HG
)@@G@@@@@@@@[^@@K'C^[@KWR@K@KV[C@@K'9*K@K2'=@@@@(@@@@G'^@@[6AM@@@@)[:[]K0^K0^KHH
)@@G@@0^ES]CKG*S]CKG@@@@'=@@@@*4@@K5/,0@@@R')@K2[^@@K9G@@@KUT@@@K*C@@@@[AN@@@@HI
)@@G@@)[3[F#@L#@L@^C^0^C^0@@@@C^K@@@N@K@@HW8K@@D;GK@@=CCK@@@@@@@@@/K@K[) @[@KWHJ
)@@G@@R@K@KVAO@@@@)[/[U^@[@^@@CCC@@#@@@@@@/K@@[6 @@@@G/K@K[69?X@@[CWH@@#H8K@@DHK
)@@G@@/K@@]#2WH)@@&;K@@DAP@@@@)]B[MK0^K@K0^^@K@@/K@@^\0@A@@@/K@@^\(@A@@@P[)@J%HL
)@@G@@OD*@@]R[)@@C/K@@^\?@@@J%GCC@@AAQ@@@@)]L[M[@@K0^K^@@@@@'^@@#K/K@@ @%W@@@[HM
)@@G@@CWB@@@O 6@@@R[0@@C/K@@]=*@@@@H+8@@@CC4A@@@AR@@@@)]V[F#@KK^@^G[[@@@@@@@@@HN
)@@G@@/K@K] M[1)@@R@K@K.&90@@[N^R@@@'^@@#X/K@@^3%^B@@@C^@@@[AS@@@@)]=[F#@KK0^KHO
)@@G@@0^K0^K0^^G[@CCA@@@[?@@@[)8@@@KC?@@@[[@W@@@C@K@@@[^@@@[G8@@@[C^@@@[AT@@@@HP
)@@G@@)]![MK0^^G[[#@L@@@PD*@@AOD*@@]R[)@@C'^@@@3[@@@J*CWC@@[[@@@J(C^A@@@[@K@K$HQ
)@@G@@+8@@__AU@@@@)]7[M^[@^@^@@@@@@@CCA@@@/@K@]8+4A@@@C8@@@K/K@@]80@A@@@/K@@^8HR
)@@G@@8KK@];P9)@@[NCS@@#AV@@@@)#[[MK0^K@[@@@@@@@H8@@@[C^B@@@/@K@]8+?B@@@C8@@@KHS
)@@G@@O 6@@@R[0@@C/K@@]8%@K@K$+8@@__AW@@@@)#F[M^G[^[@^CA-@@@(OD@@@/K@@#S:WD@@@HT
)@@G@@RAK@@@@@@@@@/K@@]R/K@@]8%@@@@@C@G@@@G@@@@BAX@@@@)#P[N@^@K[#@L@@@@@COD@@[HU
)@@G@@@@@@@@/K@K#K[W@@@[CWD@@[/K@K#K(WD@@[/K@@#MOQT@@@/K@@^/AY@@@@)#Z[MK0^@^G[HV
)@@G@@^[@@@@C@[)@@/K@K#X8KK@#*R@)@K"&8K@@[O8K@@[R@K@@BN@K@@G[@@@J?H8@@@[AZ@@@@HW
)@@G@@)#([EK^[#@L#@L#@L@K0^@@@G8@@@[C@@@KV'^@@[)*@[@KWR@K@KV @@@KV/K@@ ^/K@@#&HX
)@@G@@:@])@@BA@@@@)#2[##@KK]=@2^@]A@+^[@@@@@@@@@C/@@@[/,0@@@C@@@J:/,0@@@C/@@@@HY
)@@G@@/K@@#!%8@@@E[@@@KVBB@@@@)#'[#]@L#@L]@*K)^K0^K)EK)F@@@@/,0@@@/,0@@@9?@@L[HZ
)@@G@@/,0@@@C/@@@[/,0@@@9?@@K_/,0@@@BC@@@@)^][##@L][1#@KEK#CK@CS]CK @@@@/,0@@@IA
)@@G@@9?@@L^/,0@@@C/@@@@@@@@@@/K@KK&'=@@@@R#@@L#BD@@@@)^E[##@L]@>#@KK)IK0^K)EKIB
)@@G@@0^@@@@C@@@@[/,0@@@9?@@LB/,0@@@C8K@@GC@@@@@/,0@@@C@@@LABE@@@@)^M[]K)IK)FKIC
)@@G@@0^K)WK@(@G@@@@@@@@C/@@@@@@@@@@/K@K^ '=@@@@R#@@L#/,0@@@/,0@@@C8K@@GBF@@@@ID
)@@G@@)^U[#]@[#@L]@(#@L]@>#@KK)I@@@@/,0@@@C8K@@GC@@@@@/,0@@@C@@@LA/,0@@@9?@@LDIE
)@@G@@/,0@@@BG@@@@)^+[##@L]@*^C#=C]4G[^CB@@@@@@@'=@@@@R#@@L#/,0@@@/,0@@@C8K@@GIF
)@@G@@C@B@@@/,0@@@9?@@LBBH@@@@)^%[F@K0^K)WK^[#@L][1@K@/K@@ Y'^@@^ '=@@@@R#@@LGIG
)@@G@@/K@@ Y'^@@^ '=@@@@R#@@LF/K@K^SBI@@@@)^3[F#@L][1@K^[#@L][1@K@/K@@ Y'^@@^ IH
)@@G@@'=@@@@R#@@LI/K@@ Y'^@@^S'^@@^ '=@@@@R#@@LHBJ@@@@)^/[##@L][1@K^G[^CB^[@@@II
)@@G@@@@@@@@/K@@ Y'^@@^ '=@@@@R#@@LK/K@@ Y'^@@^ '=@@@@R#@@LJBK@@@@) ^[F#@L][1@IJ
)@@G@@K0^K^@*CKI*@/K@@ K'=@@@@C8@@ H[@@@ J[C@@ IC@@@J?'^@@^ '=@@@@R#@@LLBL@@@@IK
)@@G@@) H[MES]]@-)C)@)C@[@@@ W[^@@ VO;@@@[C@@@@B[C@@ VC@@@J?'^@@^S@@@@@@@@E@@]IL
)@@G@@NEWPTRBM@@@@) R[]*CKI*@O0^^[][)@@@@@@@@@@@'=@@@@/K@@ Y@@@@@@@@E@@@OLDPTRIM
)@@G@@/K@@ X'=@@@@C8@@ UBN@@@@)J?[Y@)@@@@@SED SLAN UNUTS TO P POINORD DB** RECIN
)@@G@@VALID P NOT ORD DB** REC@@@@@@BO@@@@)J7[Y@)@@@@@CANNOT PAGE OREIGNT IN FIO
)@@G@@** SLOCHED  OT MATNGTH NORD LE** RECOT    BP@@@@)K][Y@)@@@@@DE MUSORD COIP
)@@G@@** RECIFIED  IDENTNOT BEDE CANORD CO** RECUND    BE FOBQ@@@@)KH[Y@)@@@@@IQ
)@@G@@NOT BERS CANPOINTE/CALC ** SETMMAND. SUBCOESTORED BY RODIFIET BE MBR@@@@IR
)@@G@@)KS@&@)@@@@@)K&@Y@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ED    IS
)@@G@@ CHANGBS@@@@)K:@Q@)@@@@@)K0@Q@)@@@@@)K4@Q@)@@@@@@@@@@@@C@@@@@@@@@@@@@@@@IT
)@@G@@@@[@@@@K@@@@@@@@@@BT@@@@)K9[Q@)E@O])@@@@@@STORED@@@@REECORDS@@@@@R@@[@@]IU
)@@G@@@@[@@[______@@[@KW@@@@@@@@[@@@BU@@@@)L#[Q@+=#S@@O])@@@@[B@J1@[^@J!LD-ID:IV
)@@G@@@@@@@OEADER-@@@@,H@@DBP-EW-ID:@@@@@N@[G@@@BV@@@@)LH@,@+)O])O])@@@@@@@@@@IW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@[B@KN@[D@KE@[A@K^@[B@J.@[ @J8BW@@@@@@@@@@@@K0^KIX
)@@G@@^@@@@@'^@@#K/K@@ @%W@@@[CWB@@@O 6@@@R[0@@C/K@@]=*@@@@H+8@@@CC4A@@@AR@@@@IY
)@@G@@@@^@@ @@D@@Y@[ @@]@[H@@@@@@@@@@@@@ Z)@@@@@)@@@@@@@@@LMEDIT$       EDITR$IZ
)@@G@@      ECHAR$      ECOL$       ESKIP$      ECLR$       EDPKT       EOCTV$JA
)@@G@@      EDECV$      EFD1$       EFD2$       EDITX$      ECOLN$      EMSGR$JB
)@@G@@      EOCTF$      EDECF$      EDCFZ$      TOPT        DEBUG$      C3    JC
)@@G@@      LAST$D      MCORE$      DF$AMR      DBP$APS     ERR$        DB$AM JD
)@@G@@      C5          PRINT       PRINT$      SNAP$       RESTORE     @@[@@@JE
)@@G@@@@@@@@RESTCNT     @@^@@@@@@@J:@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JF
)@@G@@)@@[N]@D]@H]@K@[@@/K@@@ *OJ@@@CXJ@@#?XJ@@#O;0@@D @@@@KP;0@@DR#0@@@'^@@@@JG
)@@G@@*@@@@@AA@@@@)@E[##@@(@]-)@-@ECS@]A@@@@@@@@[[I@@CC[J@@@A]0@Q" @@@@IRB0@@@JH
)@@G@@[D@@Q@T9@@@@[[@@#KAB@@@@)@M[F#@[#@[#@[#@@K0@^G@@R#K@@JA#@@E:O;@@@] @G@^WJI
)@@G@@R]K@@GAB/@^VARI@@CR#@@E:A:,@@CAC@@@@)@V[M^@K0@K0@^@@@@R#K@@JC9@@@[/K@@[AJJ
)@@G@@(@@@@L+[@@JS[XT@^VCTX@@@/K@@@W1@H)@[&;K@@[AD@@@@)@>[M^@K[@K0@K0@@@P#@@@DJK
)@@G@@A#@@E:A#T@^W/K@@@&O;K@@[/K@@@2:5H@@@/K@@@?0@H@@@O;K@@[AE@@@@)@\[EK0@K^G@JL
)@@G@@]=@0-@ICS@@@R])@JUO'0@@[R]0@@@H9K@@[C9K@@@A#W@^V/K@@[AAFD@^WP;@@@]AF@@@@JM
)@@G@@)@8[F#@[#@@(@]-)@-)@]@@@P'0@@[8^K@@;O')@@]O]0@@H @E@E!A]'@E?T8K@@@R#K@#KJN
)@@G@@AY?@^VAG@@@@)[[[N]@X#@@^@@K@@@/K@@@K*@@@@KO#0@@KCPJ@@@O;)@@[/K@@@=O;@@@[JO
)@@G@@G9@@@[A])@JUA]0@@@AH@@@@)[F[F#@[]@WK)CK0@^C]OG@@O;K@J*A#K@#RA#K@@@O;K@J*JP
)@@G@@A#K@#NA#K@@@O;K@@[R#K@@@A#)@#(AI@@@@)[O[F#@[#@[#@@(@@-)@CS@@R;)@@EO#@@@HJQ
)@@G@@A#K@#MO#K@@GAF@@#<T8@@@@R#@@#KABK@#+A#K@#LAJ@@@@)[X[E^G@^G@^G@[@K0@K)B@@JR
)@@G@@A#@@@@AFK@^J/:)@[-O#@@@HABI@#2R#K@#K&#)@RKP;)@@];*)@@[AK@@@@)[&[F]@(]@L#JS
)@@G@@@[#@[#@[#@@@AV*@@@P;)@@#AR*@@@RA@@#?P#)@#?R#)@#NA#0@@]RB0@@@'=@@@@AL@@@@JT
)@@G@@)[\[F#@[#@@^G@^G@^G@@@@@9!J@@[AZY@@@AFK@@AAFK@@ ARK@@^;CK@@SR#Z@@@A#)@#?JU
)@@G@@R#)@#NAM@@@@)[8[N#@@^G@[@^G@@@O;)@@[[[I@@@G[@@RLCDJ@@^/K@@]^(4J@@CA#)@#NJV
)@@G@@O;)@@#9(I@@[9(@@#VAN@@@@)]][F#@[@K0@K0@K0@@K0@@@R#)@#RAV*@@@P;)@@#AR*@@@JW
)@@G@@RA@@#!P#)@#!R#)@#R/K@@#"A#)@#NAO@@@@)]F[F#@@[#@@K0@^G@@@@@@@AA)@@ P')@@[JX
)@@G@@AA)@#<R')@@[A#)@#RO;)@@#9(I@@[AZY@@@A#)@#!AP@@@@)]O[](@@-)@CS@ G@^C]4G@]JY
)@@G@@=@@@@@T8@@@@RB@@#-/,0@@@R')@#VA2)@#YR')@@KAA)@@AO')@@@AQ@@@@)]W[##@[#@[#JZ
)@@G@@@@K0@K[#@@@@@@@@@@A3@@#YR;@@@L/K@@ Z(^@@#YR;)@@[R#K@@^RB@@#+A#@@#:AR@@@@KA
)@@G@@)]=[##@[#@[#@[#@[#@[#@[#@[#@@@A#@@#>R#@@#<AB@@#+R#@@#M:@@@#=R#@@#LA#@@#=KB
)@@G@@RB@@#+AS@@@@)]?[](@@-)@O0@K0@^G@^G@^G@@@@@A]@@JWA]@@#&OA@@#YR]@@@GRB@@#=KC
)@@G@@R')@#VAB@@#<O;@@@@AT@@@@)]4[##@[#@[#@[#@[#@[#@[]@!#@@@R]@@JW/,0@@@9(@@J=KD
)@@G@@9*)@J+9*@@J)A]0@JZA])@JYA]K@JXAU@@@@)]/[##@[#@[#@[#@[#@[#@@K0@@@@@R#K@@^KE
)@@G@@RB?@@[9!@@J=9?)@J+9?@@J)R]0@JZR])@JYR]K@JXAV@@@@)#^[UK@@[@@@C5D@@@/K@@#4KF
)@@G@@0@D@@@R;0@@[P]K@@ERE?@@AO]K@@GP'K@@[REW@@]/K@@^Y(CG@@#AW@@@@)#J[M^@@^@@@KG
)@@G@@@@@@@@CXE@@@/K@@#4(@@@@L+9@@@CC!E@@@O])@@GRA(@@@/K@@ =*@@@@L+9@@@CAX@@@@KH
)@@G@@)#T[##@[@K0@K0@K0@K[#@@@@@@@@@C[F@@CP'0@@[/K@@#42XF)@CR]0@#*N@K@#(/K@@ XKI
)@@G@@:X@@#%AY@@@@)#-[F#@[#@@K0@K0@[@K0@@@[[@@#Q/K@@ H*@@@@L+9@@@[C!@@#%[[V@[?KJ
)@@G@@G9K@@[C[V@[?[[@@#%AZ@@@@)#%[E[@K0@K0@^G@^@@@@@@@/,0@BU:[K@JSOF/@@A+[@@JTKK
)@@G@@C[@@#%/K@@#4*@@@@L+9@@@KC5D@@@BA@@@@)#3[E^@^[#@@()@)@@@@@@@@/,0@ @R')@#NKL
)@@G@@ @@@#$/K@@#GP'K@@[O;0@@[/K@@^Y:C/@@#PF/@@ABB@@@@)#/[]()@)CS@C]A@]A@]A@]AKM
)@@G@@@@@@@@RR0K@]A#0@#TA#0@#PR#0@#0/K@@^B(O@K@]/,0@ @R')@#RBC@@@@)^^[F#@[#@[@KN
)@@G@@K0@K0@^G@@@@ OC@@@AV*@@@R]@@#?P;)@@#P#)@#?R#)@#N/K@@[(A#0@@]O#0@@]BD@@@@KO
)@@G@@)^H[F#@[#@@K0@[#@[]@)@@@P#)@@JRB0@@@R#)@#N OC@@@AV*@@@R]@@#!P;)@@#P#)@#!KP
)@@G@@R#)@#RBE@@@@)^Q[#]@-#@[]@=K)DK0@K)GK0@@@@@/K@KQ"/,0@@@*@@@#\AF)@@@P#)@@JKQ
)@@G@@RB0@@@R#)@#RAF)@@@BF@@@@)^Y[F#@[@EKA>G@[#@@K^G@@A#)@#P/,0@ @?[@@@LH[K@#PKR
)@@G@@C[K@@IR')@#NC9@@@@/K@@^*(@@@#QBG@@@@)^$[F#@[#@[@EKA+A@[N@@K@/,0@ @?[@@@LKS
)@@G@@R')@#RH[K@#TC[K@@IC9@@@@/K@@^2(@@@#U @@@#QBH@@@@)^0[##@[#@[#@@K0@K^G@^@@KT
)@@G@@@@@@@@/K@@#9*@@@#$/K@@#^%@@@#&O;)@@[O#@@#- @@@#UA#)@#TBI@@@@)^8[##@[]@9#KU
)@@G@@@@K0@EK@CS@C@@@@@@/K@@])AB@@@AO;@@@@AB@@@ P;@@@[RB@@#<'=@@@@0@@@#YBJ@@@@KV
)@@G@@) @[UK@@@@@@[[U@@@G9K@@[C[U@@@[ S@@@G9K@@[H[K@@K[DC@@@R]E@@@9!E@@[/K@@ FKW
)@@G@@0@E@@]BK@@@@) F[E^G@@^[#@[@@@@@@@@@@/K@@#%(@@@#\/K@@#4*@@@@L+9@@@KC5D@@@KX
)@@G@@[[K@#U/KF@@@A#%@@[BL@@@@) O[F#@@^[#@@K0@K)JK@@@@/K@@#%/,0@@@[[K@P7+9@@@CKY
)@@G@@C!@@#%/K@@#4*@@@@K;D@@@ C!@@#%BM@@@@) X[##@[@K0@^@()@-@)-)@@@@@@@@(@@@#\KZ
)@@G@@/,0@@@R')@#V/K@@#9:9K@@MC5K@#Y/K@@#+R%0@#%BN@@@@) >[#@K0@K0@K0@K0@K0@K0@LA
)@@G@@@@@@@@OF/@@AA])@Q.A]K@Q/A]@@Q;9(@@Q99*)@Q79*@@Q5/K@@#4BO@@@@) ![F#@[#@@KLB
)@@G@@0@[@K@@@@@@@CXH@@@/K@@#4/,0@AO;!@@@M;(K@@MC @@@^C T@@@9(@@^B9!@@#VBP@@@@LC
)@@G@@) 6[F#@[#@[#@[@^G@@K@@@@/K@@A (@@@@L+9@@@[C!F@@CP'0@@[/K@@AH2XF)@CR]0@#*LD
)@@G@@N@K@#(BQ@@@@) _[EK0@^G@[][^^@@@@@@@@/K@@AH(@@@@L+9@@@K/,0@@@(@@@@LR#)@Q6LE
)@@G@@+9@@@)[[K@P7+9@@@CBR@@@@)AC[##@[#@@K0@K^G@^G@^G@@@@@@@9!@@Q99?)@Q79?@@Q5LF
)@@G@@/,0@BUC[F@@COF/@@A9?)@Q79?@@Q5BS@@@@)AK[##@[#@[#@[@K0@^G@^G@@@@@@@2[F)#1LG
)@@G@@R]0@^AN8K@@EA]0@RJ/K@@#4R])@Q.R]K@Q/R]@@Q;BT@@@@)AS[N@^G@@@^G@@@@@[ @@^LLH
)@@G@@H[@@@LCDV@@AG[@@@LH9K@@[CDV@@]C[@@@FRA;@#2P'0@@]/K@@A_BU@@@@)A+[F#@[][C[LI
)@@G@@#@@K0@@@@@@@9[S)@@N@)@^KNCV@@#)[@@^M;D@@@A;(@@@AC[D@@@'^@@@@R]@@^LBV@@@@LJ
)@@G@@)A:[N@@@^[#@@@@@@@R]0@RJ/K@@A%%@I@@@P;)@@[O#)@@HRB!@@@R])@@HO#K@@FRBS@@[LK
)@@G@@/K@@A6BW@@@@)A5[EK])-@&)[N@@K0@@@@@@R]0@RJ@@@@@@8@^@Q5FOREIG/K@@A.'=@@@@LL
)@@G@@C8@@A'[@@@A//KF@@[BX@@@@)A"[EK0@K0@K0@K0@K0@@@@@ @@@@G:8@@@EO;@@@][ @@^ILM
)@@G@@C G@#2[ @@^J[[G@#1R#@@^ /KF@@@BY@@@@)BB[##@@()@-)@-)@-)@-)@-)@-)@@9(@@RELN
)@@G@@9*)@RC9*@@RAA])@RIA]K@RHA]@@RGR')@^BA#@@^ BZ@@@@)BJ[#]@!#@[][[#@[#@[#@[#LO
)@@G@@@[#@@@R]@@RH9!@@RE9?)@RC9?@@RARA0@^I/,0@@@*4@@^E/,0@@@CA@@@@)BR[F#@[#@[@LP
)@@G@@K0@K0@@@@@@@9*C@@^A]8@@#A]*@@]A]S@@[R]@@P6A]@KP6/K@@AVR])@RIR]K@RHCB@@@@LQ
)@@G@@)B)[M^C^-@K0@@@@@@;*K@@<R\S@@CC[C@@CA#C@@KA#@@^U/K@@G+(@@@@G'^@@@@9(C@@CLR
)@@G@@9**@@ACC@@@@)B%[M^G@[#@@@@@@@@R#@@@L[[C@@F;D@@@G;DK@@S;H@@@GA#K@JVO;K@@[LS
)@@G@@R#K@JVA#S@@T;CK@@<CD@@@@)B4[MK0@^G@@@K0@@@RBT@^V&'K@@[O'K@@]R]K@@GA#*@@RLT
)@@G@@A#*@@JR#?@^WA#S@@HR#W@^VA#C@@GCE@@@@)B"[M^G@@@K^C @@@@'^@@@@/K@@E':@C@@KLU
)@@G@@A#C@@QR#G@@@O#@@@ER<G@@@RBD@^VA#S@@ERVX@@@CF@@@@)CC[MK@@^G@@@@@@@@\@@@@ILV
)@@G@@9?@@@ ;GK@@M;*)@@M[[C@@SA#8@@MA#*@@NA#S@@O/K@@GS(@@@@HCG@@@@)CM[F@K0@EK#LW
)@@G@@@-)@[M@^@@@@O;K@@@R#K@@GP;@@@[R#J@E!G[K@@J;(K@@[C9K@@@RZ9@^V/K@@F_CH@@@@LX
)@@G@@)CV[MK@K@K0@@@@@@@;*K@@MR#K@@I9*@@P89?G@@[R#@@@K/K@@CR%@0@@LO;0@@]/K@@G LY
)@@G@@\@@@@ICI@@@@)C>[E@(@]@-)@-)@@@@@@@@@RZD@^V[ K@Q@C9K@@[(@@@@LH[K@@HW8@@@@LZ
)@@G@@C[K@@H @@@@G;CK@@MCJ@@@@)C,[F#@@!@G@]A@]A@@@@@@@[[W@E?M#H)E?O;K@@]R#K@@GMA
)@@G@@&;@@@[N@K@@H;*K@@[R;K__"C[W@E?CK@@@@)C7[##@[#@@K0@K0@K0@K0@K0@@@@@A]K@JXMB
)@@G@@A]@@JWAB@@P_RBG@E?AF?@E!;))@@M[ W@E!C K@Q@CL@@@@)C_[##@[#@@()@-@Q-)@-@)-MC
)@@G@@)@-)@@R]K@JXR]@@JW/,0@@@(^@@P;/,0@@@R')@P8A]0@JZA])@JYCM@@@@)DB[F#@[#@[#MD
)@@G@@@@K0@K0@@@@@GDG@@ACDG@@#O#@@@HT^K@P"PBK@Q@R#S@@NRB@@P_R]0@JZR])@JYCN@@@@ME
)@@G@@)DK[UK@[@@K@/,0@F+*@@@@L+9@@@CC5E@@@/K@@G60@E@@@P]*@@MOE%@@]R])@@G/K@@G6MF
)@@G@@?[C@@MCO@@@@)DV[M@^@^[#@@@@@@@N@K@#(/K@@F):XC@@PCXE@@@/K@@G?(@@@@L+9@@@CMG
)@@G@@C!E@@@O])@@GRA%@@@CP@@@@)D>[N#@[#@[@^G@@@@%9K@@-R#S@@O+9@@@-C!C@@P[[C@@PMH
)@@G@@C[F@@CP'0@@[/K@@HE2XF)@CR]0@#*CQ@@@@)D\[F@^G@[@K[@K0@@@@@@@@(@@@^U/K@@EEMI
)@@G@@*@C@@T/K@@D7/K@@EH%[S@@ECXV@^VRQ8@@P/K@@EHCR@@@@)D8[#@K0@K0@K0@K0@K0@K0@MJ
)@@G@@K0@@@@9(@@J=9*)@J+9*@@J)A]0@JZA])@JYA]K@JXA]@@JW/K@@EECS@@@@)E@[]()@-@%-MK
)@@G@@)@-)@-)@-)@-)@-)@@9?@@J)R]0@JZR])@JYR]K@JXR]@@JW @@@^U/,0@@@R')@^RCT@@@@ML
)@@G@@)EC[F#@[#@@K0@K)Q^G@[#@@[[K@P6G9K@@2C[K@P6C[C@@P/,0@@@[[K@P7+9@@@C9!@@J=MM
)@@G@@9?)@J+CU@@@@)EL[N#@@@K^G@[#@@@RQ8@@P[[K@P6H9K@@2C[K@P6/,0@BU*@@@@LR#8@@MMN
)@@G@@R#*@@NR#S@@O+[@@JSCV@@@@)EV[N#@@^@^@@@@@@@R#G@@@O#@@@ER<F@@@/K@@EW%[S@@EMO
)@@G@@CTV@@@/K@@E&0@F@@@O'0@@[RA;@^VCW@@@@)E>[V@@@[@@@1@@@@K/K@@H@(@@@@KO;@@@[MP
)@@G@@C[S@@EC[G@@@O#@@@ER<F@@@O;0@@]R#0@@F/K@@C^CX@@@@)E0[N@[@@K[@@@@@@@/K@@C^MQ
)@@G@@R#G@@@/K@@E!;(@@@[O3_@@@O3J@@@/K@@E8:@)@@LRV\@@@/K@@E5CY@@@@)E'[##@[#@[#MR
)@@G@@@[#@[#@[#@[#@@@@@@R]*@@E9(@@R 9*)@R^9*@@R#A]0@R]A])@R[A]K@R@A]@@Q_CZ@@@@MS
)@@G@@)F][##@@()@-)@-@%-)@-)@-)@-)@@R]0@R]R])@R[R]K@R@R]@@Q_/,0@@@*@@@Q4R')@^NMT
)@@G@@AQ)@^QDA@@@@)FE[F#@[#@[#@@[#@[@K0@@@O]K@RM/K@@FP:DV@^W;DK@@MC[K@@DR]8@@GMU
)@@G@@9!@@R 9?)@R^9?@@R#DB@@@@)FN[MK^G@[#@@@@@@@9?*@@A9?C@@^R]8@@#R]*@@]R]S@@[MV
)@@G@@A#@@JVP;@@@[R#@@JV/K@@B.R]*@@]DC@@@@)FX[E@K^G@^G@^G@^G@@@@@@A]@@Q;9(@@Q9MW
)@@G@@9*)@Q79*@@Q5/K@@D(R%8@@P/KF@@@R]C@@@9!C@@CDD@@@@)F&[N#@[#@@@[#@@@@C T@@@MX
)@@G@@9(@@^B9!F@@[R]8@@SR#8@@MR#*@@NR#S@@OR]K@@EA])@Q.A]K@Q/DE@@@@)F0[E[@K[#@[MY
)@@G@@#@[#@@@@@@@@9!@@Q99?)@Q79?@@Q5R])@@H/K@@F//,0@AO;!@@@M;(K@@MC C@@ODF@@@@MZ
)@@G@@)F9[##@[#@[@K0@K)RK)SK0@@@@@@@RBS@@NRB@@#='=@@@@'=@@@@R#@@QP/K@@DXR]K@Q/NA
)@@G@@R]@@Q;DG@@@@)G[[F#@[#@@K]4@0-)@@@@@@N@K@@HP#K@@JOZT@^V;*K@@[R;K__"/K@@DINB
)@@G@@O#@@@HT^K@#-PBK@#>DH@@@@)GE[F#@[#@@[#@[#@[#@[#@@RBJ@E?[[Z@E!A#Z@E?M#/)E?NC
)@@G@@O;@@@]R#@@@J&;0@@[C[Z@E!R#Z@E?DI@@@@)GN[EK0@K0@^[@E]^]U@@@@@/K@@GZ'=@@@@ND
)@@G@@C8@@GW[@@@GY/K@@DIO#@@@HT^K@P"PBZ@E!R#S@@NDJ@@@@)GW[EES@]A@]^]'^#]@O^C^0NE
)@@G@@'=@@@@C8@@G&[@@@G*'=@@@@'=@@@@R#@@Q[@@@@@@8@[@Q5DBPERRDK@@@@)G>[F@]&@@-)NF
)@@G@@@-@,-@0) @@@C8@@G0[@@@G2'=@@@@'=@@@@R#@@QC@@@@@@8@[@Q5APSERR/K@@G(DL@@@@NG
)@@G@@)G,[F][H@]&@@-)@-@,-@0)@[@@@G/'=@@@@'=@@@@R#@@QX@@@@@@8@[@Q5VACANT/K@@G3NH
)@@G@@'=@@@@DM@@@@)G7[E*CKD*@O0@^G@^C 4CA@'=@@@@'=@@@@R#@@Q&@@@@@@8@[@Q5SLOT  NI
)@@G@@/K@@G.'=@@@@C8@@G'DN@@@@)H@[F@E]^]U@ G@[#@[][W@@'=@@@@R#@@QJ@@@@@@8@[@Q5NJ
)@@G@@MANERR/K@@HB'=@@@@C8@@H^[@@@HADO@@@@)HD[F][-@E]^]U@ G@[#@@@@R#@@Q!@@@@@@NK
)@@G@@8@[@Q5BADREC/K@@HL'=@@@@C8@@HI[@@@HK'=@@@@DP@@@@)HM@N][X][)@)@@@*JA@@@@@NL
)@@G@@)@B@C@@@@@@@@@@@@@@[@@@]@@@@@@@@@@@#@@@@@@'=@@@@'=@@@@DQ@@@@)#K[S@@@@@@@NM
)@@G@@@@@@@@___$>Z@@@@@@@@@@@@@@@@@@___$>Z@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DR@@@@NN
)@@G@@)#X[S@#^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@@@@@@@@@@@@@@@@@@@@@@@@K@@@@NO
)@@G@@@@@@@@DS@@@@)#*[C@JA@#1)@@@@@@@@@@@@____0R@@@@@[@@@@@@@@@@#,@@@@#,@@@@@@NP
)@@G@@@@@@@@@@@@@@@@[@@@DT@@@@)^ @K@)^D[@@@@@@@@K__@@@@@@@@@@@[@@@@@@@@@@@@@@@NQ
)@@G@@@@@@@@@K@@@@@@@@@@@@]@@@@@@@@@DU@@@@)^L[K@/S@@JA@@@@@@@@@@@@@#@@@]@@@@^TNR
)@@G@@@@@@@@@@@@@@@]@@@]@@@@^P@@@@@@K@@@@@__"@@@DV@@@@)E:@C@)JS[@@@@@@@@@@@@@@NS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@0@@@@@K@@@@@@@@@DW@@@@)P6@K/S@@@@@NT
)@@G@@)P'@K@)P_@)1@] @@@ERROR @[A@Q]@@@@@@@@@@@@@K@@@@@@@@@@@@@@@@@@@@J&DX@@@@NU
)@@G@@)Q#[S@])@@@@OSING DECOMPTERED ENCOUNERROR @[A@QDDBP   ING A COMPOSTERED NV
)@@G@@ENCOUNDY@@@@)QI[SE@@ @@@ET.  F VIA SUNLOAD@[B@QQSET   ANUAL NG A MSCANNINW
)@@G@@ERROR @[ @QKA DBP DZ@@@@)QT[S@E@@@@@E SCAND WHILUNTEREY ENCOY ENTRVACANCNX
)@@G@@@[C@QYR.    D ERRO RECOROREIGNEA@@@@)Q=[S])@@O@@RECORD@[A@Q,CAN.   SET SNY
)@@G@@ PAGE.USE ONOT IN SLOT N@[A@Q$ET.   NING SEB@@@@)Q\@0@@@@@@@)Q;@S@@@@@@@NZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@N.    ET SCA C1. SNOT IN TYPE EC@@@@)Q"[@@@@@@@@OA
)@@G@@)RG@K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ED@@@@OB
)@@G@@)RI@*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@[@@[@@@_____.@@@@@@OC
)@@G@@@@@@@@EE@@@@@@@@@@@[#@[#@[#@[#@[#@[#@@@@@@R]*@@E9(@@R 9*)@R^9*@@R#A]0@R]OD
)@@G@@A])@R[A]K@R@A]@@Q_CZ@@@@@@^@@]@@A@@T@@8@@ @[G@@@@@@@RN@@@@HOSCDBPGS     OE
)@@G@@SCSPGS      TOPT        DEBUG$      C3          C1          SCSBNO      OF
)@@G@@LAST$D      C2          C4          MCORE$      DB$AM       UNLF        OG
)@@G@@GAP         WAIT$       UNL         IOERR       UNL1        APS$DBP     OH
)@@G@@SNAP$       DBP$APS     DF$AMW      UNLS        PRINT$      ERR$        OI
)@@G@@SCAN        @@[@@@@@@@@@UNLOAD      @@[@@@@@@@@@SCPKT       @@@@@@@@@@#VOJ
)@@G@@STDBP       @C@@@@@@@@@QSCDIRECT    @@@@@@@@@@P7@@@@@@@@@@@@@@@@@@@@@@@@OK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[I@T#@L@^G[^G[@K@@@@@/K@@#T2@C)@^&'@@@ERAJ@@'OL
)@@G@@NCZ@@'9?FK@@'^@@#V(@J@[@R#;K@]AA@@@@)@D[I@S^[@^G[^@@@@@@@@@@R#FK@@'^@@#VOM
)@@G@@(@J@[@R#;K@]/K@@@$/K@@@B%@T@@ P'K@@ER]K@@CAB@@@@)@M[Q@WG[^G[@^@^@@R#;K@]ON
)@@G@@/K@@@$P'K@@ER]K@@C/K@@#T9@C)@@N8)@__&'@@@ERAJ@@'NCZ@@'AC@@@@)@W[I@WG[^@[OO
)@@G@@@K0^K@@@@@@@T8@@@E/K@@#T!CJ@@'/K@@#T0@@@@GP;@@@[R#FK@@'^@@#V(@J@[@AD@@@@OP
)@@G@@)@>[Q@WG[@@@K0^@@@(@J@[@R#;K@]/KF@@^M]D)@@N8K@@E&'K@@[&'@@@[R]F@@[O]K@@GOQ
)@@G@@RAZ@@'AE@@@@)@\[Q@W@@K0^K0^[@@/K@@#T2@C)@^&'@@@ERAJ@@/NCZ@@/9!C@@#9?S@@[OR
)@@G@@R]F@@@R#FK@@'^@@#VAF@@@@)@9[Q@S^@K^@K0^K@@'^@@#V(@J@[@R#;K@]/K@@# /K@@@7OS
)@@G@@9.D@@B/K@@@79/T@@ P'K@@ER]K@@CAG@@@@)[#[Q@T#@L#@K[@[@@/K@@# P'K@@ER]K@@COT
)@@G@@/K@@#T9@C)@@N8)@__&'@@@ERAJ@@/NCZ@@/R#FK@@AH@@@@)[H[I@T#@L@@K^G[^@@@@@@@OU
)@@G@@/K@@#T!CJ@@//K@@#T0@@@@GP;@@@[R#FK@@'^@@#V(@J@[@R#;K@]AI@@@@)[Q[Q@T#@K@@OV
)@@G@@K0^@@@%@J@@4T8@@[@W8@@[@ @@@@G;CK@@G;*K@@GR#T@@[O]K@@GRAZ@@/T8@@@EAJ@@@@OW
)@@G@@)[)[Q@W@[@K0^@@@@@&;@@@[R#F@@[NWT@@[O#)@@HR#\@@6/K@@# !8)@W@KWT@@[T8K@@WOX
)@@G@@'^@@[!AK@@@@)[%[Q@S[#@K()C-)C@AFC@@^R;@@W@9(C@@@9!JK@,R'@@@*A#J@@4@@@@@@OY
)@@G@@/KF@@^M#I)@@&;)@@[AL@@@@)[4[I@WG[^@K)I^G[[]@9]@/'=@@@@A#@@@@O;@@W@A#Z@@6OZ
)@@G@@K8@@@[R#@@@@C[@@@H/^@@[_R#J@@6AM@@@@)[.[I@S^G[^G[@()C-@)@@@@R7C@@#'=@@@@PA
)@@G@@R;@@@*A#C@@ O#J@[]R#J@@4ABC@@^R#K@@KR#@@@HAN@@@@)]A[Q@S^[@^G[^@@@@R]F@@@PB
)@@G@@R#FK@@'^@@#V(@J@[@R#;K@]/K@K[!/K@@A+*4C@@# 4C@@#:8@@@ AO@@@@)]K[Q@SK0^K0PC
)@@G@@^[@@@@9/T@@ P'K@@DR]K@@C/K@@#T2@C)@^&'@@@DRAJ@@"NCZ@@"9!C@@#9?S@@[AP@@@@PD
)@@G@@)]U[I@W@K^@K0^K[#@K@@@@@NCZ@@"R#FK@@'^@@#V(@J@[@R#;K@]/K@@# /K@@]P9.D@@BPE
)@@G@@/K@@]PAQ@@@@)]<[Q@WG[@^@^@K0^@(@J@[@R#;K@]/K@@# P'K@@DR]K@@C/K@@#T9@C)@@PF
)@@G@@N8)@__&'@@@DRAJ@@"AR@@@@)]![I@W@[@K0^K[#@K@@@@@@RAZ@@"T8@@@D/K@@#T!CJ@@"PG
)@@G@@/K@@#T0@@@@GP;@@@[R#FK@@'^@@#VAS@@@@)]6[I@T@^G[^@K0^K0^@@@@@&'@@@ERAJ@@/PH
)@@G@@NCZ@@/R#FK@@'^@@#V(@J@[@R#;K@]/K@@# O]K@@GAT@@@@)]_[Q@SK@K]&@+A@)@RZD@@[PI
)@@G@@9*C@@@9?JK@,R'@@@*/K@@# P'K@@]R]K@@C/K@@#T9@C)@@N8)@__AU@@@@)#D[Q@S@^G[@PJ
)@@G@@()C-@)'=@@@@R;@@@*A#C@@ O#J@[];C@@@G;*@@@GR#D@@[ABC@@^R#F@@[AFC@@^AV@@@@PK
)@@G@@)#N[Q@T@[@@@@@@@@@R;@@@^@@@@@@/KF@@^ @FK@@/KF@@]'^@@#VR#;K@@/KF@@^/K@@A+PL
)@@G@@*4C@@#AW@@@@)#X[A@WG[@K)LK^G[^G[^G[@@@@@@@9*@@@*9*@@@W9?JK@,/G@@AC'=@@@@PM
)@@G@@;?@@@M;*K@@MR#Z@@MAX@@@@)#>[A@U&@+^]M@-)C-)C-@WCS]@@@@ABK@@?K8@@@[R#@@@@PN
)@@G@@A#J@[]R#@@@&/^)@AP'=@@@@R;@@@WAY@@@@)#![A@WG[@K)J^G[^G[^G[@@@@@@@@A#@@@!PO
)@@G@@R#@@@&AF@@@?R;@@@W'=@@@@O;@@@WA#K@[#A#K@@8AZ@@@@)#5[I@U&@+^]]A@+@]A@+A@)PP
)@@G@@O;@@@[R#@@@!A#@@@9;C@@@SR#H@@C/K@@A+*4@@@:'=@@@@R;@@@*BA@@@@)#"[A@WG[^C#PQ
)@@G@@-#@L#@L]@9]@.#@K@@R#@@@9'=@@@@A#@@@@O#@@@9ABK@@?K8@@@[R#@@@@A#@@@!BB@@@@PR
)@@G@@)^A[A@WG[]&@+^]]A@+@C]A@)@@@@@R#@@@!/K@@^P(OH@@[/K@@A+*4@@@:'=@@@@R;@@@*PS
)@@G@@AF@@@?BC@@@@)^I[I@T#@K[#@L@K0^K)I@@@R#)@@@R]K@@8/K@@#_A#@@@9;C@@@S;*@@@SPT
)@@G@@RRH@@[A#@@@!O;@@@_BD@@@@)^R[Q@SK0^@K0^[#@KAB\@@/O#)@@GT8@@@EAFJ@@';?@@@GPU
)@@G@@;C@@@=R#T@@AAB\@@'R]@@@IO;)@@[BE@@@@)^-[Q@SK0^[#@K^G[@T8@@@DAFJ@@";?@@@GPV
)@@G@@;C@@@=AB\@@"O#)@@GT8@@@EAFJ@@/;?@@@G;C@@@=BF@@@@)^:[I@T#@KK)JK[#@L@@@@@@PW
)@@G@@O'K@V=/K@@ ]:^J@@/R#@@@C/K@@^4'=@@@@R#@@@IA#)@@8O#)@@GBG@@@@)^4[Y@S@@^@@PX
)@@G@@R#@@@C/K@@^0&'@@@@M]E)@@N@K@@GT8@@@ERRD@@C&'@@@[&')@@[O])@@DRU(@@CBH@@@@PY
)@@G@@)^_[Q@WG[^@@@@@@@@N@K@@GT8@@@ERRD@@D&'@@@[&')@@[O])@@DRU(@@DO'K@V=/K@@ KPZ
)@@G@@:^J@@"BI@@@@) D[Q@SK[#@L@@@@@@&')@@[O])@@DRU(@@EO'K@V=/K@@ U:^@@@8R#@@@CQA
)@@G@@/K@@^"&'@@@@M]E)@@BJ@@@@) N[Q@S@^[#@K@@@@@P#@@[#R]@@@GRBJ@@'/K@@ G&'@@@@QB
)@@G@@M]E)@@N@K@@GT8@@@DRRD@@E&'@@@[BK@@@@) X[A@WG[^G[^G[^G[^G[^G[^G[@@@P#@@@CQC
)@@G@@RB@@@8]^Z@@"L^J@@"]^Z@@/L^J@@/]^Z@@'L^J@@'BL@@@@) >[Q@S@@K)IK)N@@@'=@@@@QD
)@@G@@A#@@@@;C@@@M;*@@@MR#@@@DM]S)@@&'K@@[&'@@@[R]K@[#N@K@@GBM@@@@) \[I@T#@L#@QE
)@@G@@L#@K^@@@@@@@P;K@@ER#K@@C/K@@ '5WC)@[&'@@@ERAJ@@/NCZ@@/A#J@[^R;@@@EBN@@@@QF
)@@G@@) 8[I@T@K0^K0^K0^[@@@@@@R#K@@C/K@@A^5WC)@[&'@@@DRAJ@@"NCZ@@"A#J@[A/K@@ 4QG
)@@G@@RZH@@[BO@@@@)A[[I@SK^G[[#@L@K0^ES]@@C/@@@@A#@@@8/K@K#VA#J@[@R;@@@[A#J@[CQH
)@@G@@/K@@ "RZH@@[P;K@@DBP@@@@)AE[A@WC@^G[[]@T#@KK)CK)F@@@@@/,0@@@/,0@@@C8K@@GQI
)@@G@@C@@@@8/,0@@@C8K@@*C8@@[E/,0@@@BQ@@@@)AM[A@WG[^C ^C OG[]&@+^@]A@)@@C8K@@+QJ
)@@G@@C8@@[L/,0@@@C/@@@@A#)@@8'=@@@@'=@@@@R#@@[YBR@@@@)AU[A@WC[=G[[]@-]@!#@L][QK
)@@G@@L][O@@'=@@@@'=@@@@R#@@[Y/,0@@@/,0@@@C8K@@]C@@@@8/,0@@@BS@@@@)A+[A@U&@+^@QL
)@@G@@]A@)-@GCS]CK^@@@@@/,0@@@R7@@@:R;K@@#/,0@@@C8K@@&C8@@[R/,0@@@C/@@@@BT@@@@QM
)@@G@@)A%[A@WC]4G[^C ^@*CKFC@@@@@@@@IO PKT/K@@A4'=@@@@C8@@A1[@@@A3'=@@@@R#@@[YQN
)@@G@@/,0@@@BU@@@@)A2@Y@U&@)-@%@@@@@)@@@,@+)@@@@@@@@@@@@@@@@[[@@@@@@@@@@@.G@@AQO
)@@G@@'=@@@@@@@@@@8@A@@*BV@@@@)@ @I@)@@@@@)@M@"@<1)@/S@@@@@@@ASG,A.     HEMA. QP
)@@G@@ OLDSC@ASG,A@@@@@S@@@@@O@@@@@@BW@@@@)@T[Y@)@@@@@            @@A@@@@@@@@@QQ
)@@G@@      SCHEMAXX    XXXXXX.     HEMA.  NEWSCBX@@@@)@=[Q@)@@@@@@@@@@@@@@@@@QR
)@@G@@@@@@@@@K@@@@@@@@@@XX    XXXXXX@@@@@@@@@@@@            BY@@@@)@,[Q@<1)@/SQS
)@@G@@@@@@@@@@@@@@@@@@@@_____"_____"EMA   NEWSCHEMA   OLDSCH@@@@@2@@@@@0BZ@@@@QT
)@@G@@)@8[Y@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@QU
)@@G@@@@@@@@CA@@@@)[#[Y@)@@@@@ SCHEMIGNINGIN ASSERROR @@@@@@@@@@@@@@@@@@@@@@@@QV
)@@G@@@@@@@@@@@@@@@@@@@@CB@@@@)[I[Y@)@@@@@ROR REI/O ERTUS:   - STA FOUNDNT NOTQW
)@@G@@ ELEMESCHEMATUS:   - STAA FILECC@@@@)[T@6@)@E@@@@@@@@@@@@@@@@@@@@@@@@@@@QX
)@@G@@@@@@@@@[G@@AS:     STATUHEMA -ABS SCADING CD@@@@@@^@@ @@D@@R@@7@@L@[;@@@QY
)@@G@@@@@@@@@@@@@@)@@@@@@@@@A5@@@@[ZEDIT$       EDITR$      ECHAR$      ECOL$ QZ
)@@G@@      ESKIP$      ECLR$       ECOPY$      EPACK$      EOCTF$      EDECF$RA
)@@G@@      EDCFZ$      EDITX$      ECOLN$      EMSGR$      LAST$D      MCORE$RB
)@@G@@      IOW$        CSF$        PFS$        LCORE$      PRINT$      EXIT$ RC
)@@G@@      SNAP$       FABNME      @@#@@@@@@@@@FABCDE      @@#@@@@@@@@IFSABCDRD
)@@G@@      @@#@@@@@@@@VFRBNME      @@#@@@@@@@@!FRBCDE      @@#@@@@@@@[@FSRBCDRE
)@@G@@      @@#@@@@@@@[HFSBNME      @@#@@@@@@@]FFSBCDE      @@#@@@@@@@]YFSSBCDRF
)@@G@@      @@#@@@@@@@]:FITBRC      @@#@@@@@@@]8FDSDT       @@#@@@@@@@#QSFIOERRG
)@@G@@      @@#@@@@@@@A+SDTICF      @@^@@@@@@@[@SECTAD      @@^@@@@@@@[]MAXADTRH
)@@G@@      @@^@@@@@@@[^MAXRDT      @@^@@@@@@@[AMAXSDT      @@^@@@@@@@[C('MSG'RI
)@@G@@) EQU '&' . A('FPS') EQU 1 . A('FPR') EQU 1 . A('DPC') EQU 0 . A('SPC') RJ
)@@G@@EQU 0 .  DO P$>2 ,I DO P)@@[##@@()@-@WO0@K)I^C#2&@@@@@R;@@@S/,0@@@0@@@@GRK
)@@G@@'=@@@@R;@@@P'=@@@@R;@@@LA]0@]@AA@@@@)@C[#]@8K)JES@CKB]^[9N@@@@@@@@R;@@@)RL
)@@G@@/,0@@@0@@@@G'=@@@@R;@@@W/,0@@@0@@@@G'=@@@@AB@@@@)@K[F]@8K)JES@CKCCS@]^]CRM
)@@G@@O;@@@[O#@@@@T8@@K@RB@@@K'=@@@@R;@@@C/,0@@@0@@@@G'=@@@@AC@@@@)@T[F#@[#@@KRN
)@@G@@0@[][ ][C()@R;0@@@'=@@@@A#@@@@O;@@@[O;@@8@A#@@[BO;@@8@AB@@[GA#@@[AAD@@@@RO
)@@G@@)@+[F][G()@-@*-)@]^]*)@@/K@@[W(@@@@IT@)@@@P;)@@[;C)@@[R#)@@!'=@@@@R;@@@=RP
)@@G@@/K@@@@AE@@@@)@:[]K0@K0@ES@CKFCS@CKF*S@@@@@*4@@[F'=@@@@0@@@[F'=@@@@R;@@[CRQ
)@@G@@PF)@[GAF)@[G?8)@8@AF@@@@)@3[#][-#@[][>#@@K0@K0@@@@@@@@(@@@@IRA@@[G&#K@][RR
)@@G@@P;K@@]RBK@[F/K@@@@(^@@[F/,0@@@AG@@@@)@;[#@^G@^G@^G@[#@[#@@@@@@@@@@R#@@[ARS
)@@G@@A#@@[HO;@@]@R#@@[HPF)@[GAF)@[G?8)@8@/K@@[HAH@@@@)[#[##@[#@[#@@()@-@?CKH@RT
)@@G@@@@@@@@O;@@@]/,0@@@R#@@@C'=@@@@R;@@[CAB@@[GR#@@[B:^@@[GAI@@@@)[F[F@K^G@[@RU
)@@G@@K)VJA@[#@@@@:@@@[ 9?G@@@@@@@[U/,0@@@/K@@[DR#@@@C ^@@[F/K@@@0/:K@[DAJ@@@@RV
)@@G@@)[O[#@K0@K0@ES@CKIC[N@[][4@@@@/,0@@@R')@[I/K@@[K/,0@@@R')@[I9*@@[LA#@@[ RW
)@@G@@/K@@[YAK@@@@)[W[##@@K0@K]&@]^@]A@@@@@@@@@@C8K@@HC@@@[ /,0@@@C/@@@"/K@@[URX
)@@G@@:@@@[^/KF@@@R]0@]@AL@@@@)[=@;]@T]@>#@[][9#@[][9][/@@@@@@@@@@'=@@@@'=@@@@RY
)@@G@@R#@@@8'=@@@@R#@@@0/,0@@@/,0@@@AM@@@@)@@[C*@BX@S@$X@S@>C#])@@R$CORE9@@@@@RZ
)@@G@@8@@@@@<@@@[K+@@@@<_@@@@=#UA[@@[@@@@]@@@@@@AN@@@@)@D@C@)@L[C@@@@@@@ R$CORSA
)@@G@@@ASG,TE .    K$FIL@ASG,AE .   *K$FIL$FILE,@USE K      AO@@@@)@U[S@@@@@@@SB
)@@G@@K$FILE      /200 . XB,F4@ASG,T      /400 . XA,F4@ASG,T5 .   E,///1AP@@@@SC
)@@G@@)@>[K#1?C#M)@@@@@@@@@@@@@@@@@@            K$FILE@@@@@@@@A@@%@@@@@@@@@@@@SD
)@@G@@      AQ@@@@)@\[SE@@@O@@REORG @[ @@9                  ICE.  DED TW UNLOASE
)@@G@@RECORD@[B@@1@@@@@@AR@@@@)@'[S@E@@@@@______@@@@@@@@@@@@@@@@@@[[@@@@@@@@@@SF
)@@G@@@&#@@5ING.  RMINATD.  TEINVALIAS@@@@)[ [C@@/V]@4*@@@@@@@@@@@@@@@E@@8@@[ASG
)@@G@@@@@@@@@@@@@@      K$FILE@@@@@@@@@@@@@@@@@@AT@@@@)]@@K@@@@@@@@@@@@@@@@@@@SH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@_____.@@@@@@AU@@@@@@@@@@@@@@@@SI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SJ
)@@G@@@@^@@]@@A@@)@[A@@[@[E@@@@@@@]]@@@@[:EDIT$       EDITR$      ECHAR$      SK
)@@G@@ECOL$       ESKIP$      ECLR$       EOCTF$      EDECF$      EDCFZ$      SL
)@@G@@EDITX$      ECOLN$      EMSGR$      RSTD$       R$          CSF$        SM
)@@G@@ASGERR      FACIL$      LAST$D      MCORE$      ROPN$       IOW$        SN
)@@G@@KCSORT      IO$         WAIT$       IOERR       RSORT$      RREL$       SO
)@@G@@RRET$       KF$AMC      KF$AMF      PRINT$      ERR$        SORTKEY     SP
)@@G@@@@[@@@@@@@@@PL FUNC . LJ* NAME 0 . I(0) EQU +(G2 PL(1)) .  DO 12 , DO (ISQ
)@@G@@)@@[F#@[#@[#@[#@@K0@K0@@(WF@@@M@M)@@R@)@@SR@K@@RN8K@@I9\)@@ 9?0@@#9?K@@[SR
)@@G@@R]0@@@AA@@@@)@D[M[#@L]@9@K[@@@C?[@@ /K@@@=(@@@@['^@@[@'^@@@0(@@@@@AA0@@[SS
)@@G@@/KF@@@OY;@@@/KF@@[AB@@@@)@N[E[#@L@K0^K^C#0@@@@@@[^[@@ACC@@@@/K@@[/%@@@@_ST
)@@G@@/K@@@U:@@@@";?@@@M;*K@@MC?U@@ AC@@@@)@W[MK)JK)J@[]@8@@K8@@@CCC@@@@/KF@@@SU
)@@G@@[@?@@]C@%@@B9*?@@@9?%@@ G^@@@@[CK@@@K8@@@#AD@@@@)@&[N]@9]@8@@@@@@@/KF@@@SV
)@@G@@G8@@@ M@M)@@N8K@@C&8)@@[R@)@@E&8K@@[R@K@@GG^@@@@[CK@@@AE@@@@)@0[EK)K^C#+SW
)@@G@@=]E^]]^]M^]SG8@@@[C^@@@@'=@@@@[@@@@@G8@@@@[@@@@@G8@@@[C^@@@@@@@@@@AF@@@@SX
)@@G@@)@9[F]@/(@*-@&-@=CKB*@@@ @@@@[@@@@@@/K@K@0[C@@@@C8@@@['=@@@@[@@@@@G8@@@@SY
)@@G@@[@@@@@AG@@@@)[][N]@9@K)I[@[@@@C@E@@^/K@@[J9/[@@]9?E@@]/K@@[J9/[@@@9?E@@@SZ
)@@G@@R^K@@@/K@K[@(C@@@@AH@@@@)[G[MK^@K)IK)I^@K@/K@K[@ @@@@[/K@@[ %@@@@[GC@@@@TA
)@@G@@C^@@@@O8K@@C/K@K[@/K@@[J%@[@@^AI@@@@)[Q[N]@9@K@@@@@@@@:8K@@]C?L@@@C@@@@[TB
)@@G@@O8K@@ /KF@@@(@@@@[ @@@@G'^@@[@'^@@[2(@@@@@AJ@@@@)[)[U@@[]@8@(@@@@HC @@@@TC
)@@G@@;C)@@N;GK@@LC^L@@[/KF@@@(^[@@[;*@@@M/KF@@@:8K@@#/KF@@@AK@@@@)[:[N]@/@@K0TD
)@@G@@^K0^@@A]0@@[A])@@@@@@@@@/KF@@@;?@@@M;*K@@M;C@@@MC@K@@IG@)@@KC @@@@AL@@@@TE
)@@G@@)[5[]()C-@%O0^K)PK0^K0^K^G[@@@*@@@@]/K@K[2R]0@@[R])@@@/,0@@@R')@[[/,0@@@TF
)@@G@@R')@[@AM@@@@)[.[#@K0^K)QK0^K)QK0^K)QK0^@@@R#@@[ '=@@@@R#@@[^'=@@@@R#@@[#TG
)@@G@@'=@@@@R#@@[]/K@@]NAN@@@@)] [#][T#@L][T#@L][T#@L][T#@K@R#@@[D'=@@@@R#@@[CTH
)@@G@@'=@@@@R#@@[B'=@@@@R#@@[A'=@@@@AO@@@@)]H[#][T#@L][T#@L][T#@L#@L][S@'=@@@@TI
)@@G@@R#@@[][@@@@]'=@@@@R#@@[#'=@@@@R#@@[#'=@@@@AP@@@@)]P[](@G-@@-)C-@ICK]CS]CTJ
)@@G@@K#)@@@/,0@@@9?@@[G/,0@@@C/@@@[/,0@@@9?@@[E/,0@@@C/@@@@AQ@@@@)]X[EK)^^C[1TK
)@@G@@]@WK)E@@@@@@C/@@@(/,0@@@C@E@@^/,0@@@9?E@@]/,0@@@9?E@@@/,0@@@C/@@@[AR@@@@TL
)@@G@@)]&[F]@C(@,-)CCS]@CS]@@@[-H@@#)80@@0W8)@@C;G)@@=[@)@@ G8)@@[C@)@@ C8K@@@TM
)@@G@@/,0@@@AS@@@@)]\[M[#@K[#@L#@K@@[@E@@@C@H@@#[(H@@#)80@@0W8)@@C;G)@@=[>H@@#TN
)@@G@@)80@@0W8)@@C;G)@@=AT@@@@)]9[F#@K[]@WK)B^C])@@@@@/,0@@@C@E@@^/,0@@@9?E@@]TO
)@@G@@/,0@@@9?E@@@9*E@@#9*E@@[9?@@[IAU@@@@)#][]K)]K)FK0^K)QK0^K)QK0^@@@@R]0@@[TP
)@@G@@'=@@@@R#@@[#'=@@@@R#@@[K/,0@@@/,0@@@C/@@@)AV@@@@)#E@F@@@@@@@)@@[A@)@@@@@TQ
)@@G@@************@@@@@@%1-000%0-000@@@@@@@@@@@@@@@@@@/K@@@GAW@@@@)@C[Y@)@@@@@TR
)@@G@@D SYMBLICATEG: DUPWARNIN******************************************AX@@@@TS
)@@G@@)@N[Y@)@@@@@ITING THE EDLS IN  SYMBO THESENCE TOREFERE  ANY TERED.ENCOUNTT
)@@G@@OL(S) AY@@@@)@Y[Y@)@@@@@N MUSTTENTIOIAL AT  SPECS.    RESULTRRECT D INCOTU
)@@G@@Y YIELESS MA  PROCAZ@@@@)@([Y@)@@@@@S     SYMBOLTHESE  WITH CIATEDS ASSOTV
)@@G@@RECORD  THE EN    VEN WH BE GIBA@@@@)@4@"@)@@@@@)#F@N#@[#@@@9*K@@[A]0@@@TW
)@@G@@S.    PROCESE ART  BY THFORMED TRANS   AREBB@@@@)#H[F#@[#@@K0^K0^@@@@@@@TX
)@@G@@ABW@@[R;K@@ARBF@@[M@-)@@R@)@[MR@K@[LN8K@@I9:)@@ 9*0@@#BC@@@@)#Q[MK0^[@K0TY
)@@G@@^K0^@@C8K@@[C*G@@@ @[@@@R@K@@;[@@@@//,0@[QRA%@@@RA:@@@[@@@@;C^G@@@BD@@@@TZ
)@@G@@)#)[]]&@+A@]A@+A@]A@[N@@@@@@@@R;@@@P[^@@@Q[C@@@QC@@@@.A@K@@PR8K@@/[@L@@@UA
)@@G@@:8@@@PBE@@@@)#*[#@K0@K0@K0@K0@^G[^G[@@@@@@R@)@[MR@K@[LN8K@@I9:)@@ 9*0@@#UB
)@@G@@9*K@@[A]0@@@/K@@@@BF@@@@)#0[E[@K0^ES]CS@CS]CS@@@[C@@@QC@@@@.A@K@@PR8K@@/UC
)@@G@@[@@@@//,0@@GRA%@@@RA:@@@M@-)@@BG@@@@)#9@V#@@()@)@@@@@@)@;@Y@)@@@@@)@R@C@UD
)@@G@@@@[@[]@@@@@A@@@@@@@@@@@@/K@@@@R;@@@P[^@@@QBH@@@@)@S@C*@@@@@@)@"@"@)@* @*UE
)@@G@@@@@@@@@[B@@J@[D@@A@]D@@AJK@@@@IK@@@@@@]@@[@@[@@]@@[@@BBI@@@@)[ [Q@+)O])OUF
)@@G@@])@@@@      YMBOL:@@@@@SICATED@@DUPL@[B@@4@[C@@?@[B@@>@[B@@Y@[C@@QBJ@@@@UG
)@@G@@)[J@&@)(@0 G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@B@@[@[]@[G@@@UH
)@@G@@      BK@@@@@@@@@@)K^C#+=]E^]]^]M^]SG8@@@[C^@@@@'=@@@@[@@@@@G8@@@@[@@@@@UI
)@@G@@G8@@@[C^@@@@@@@@@@AF@@@@@@^@@ @@D@@T@@;@@^@[F@@@@@@@@T@@@@#/)@@@@@)@@@@@UJ
)@@G@@@@@@[NEDIT$       EDITR$      ECHAR$      ECOL$       ESKIP$      ECLR$ UK
)@@G@@      EDPKT       EFD2$       EOCTV$      EDECV$      EFD1$       EDITX$UL
)@@G@@      ECOLN$      EMSGR$      C14         C15         LAST$D      C14SZ UM
)@@G@@      MCORE$      LAST$I      C15SZ       CF$AM       PRINT$      PGMSW UN
)@@G@@      PRINT       SYM$TW      @@[@@@@@@@@GSYM$TR      @@[@@@@@@@[QSYMTRSUO
)@@G@@      @@[@@@@@@@#FSYMTWS      @@[@@@@@@@#((1)>1 , J XRST$$.  END. XFRETNUP
)@@G@@* PROC *0.  SZ A0.  J XR)@@[F[K)@KK*+^@E])@@@@@@/K@@[B*W@@@A/,0@@@[@E@@@UQ
)@@G@@R')@@^C@E@@@AA)@@#'^@@@@AA0@@]AA@@@@)@D[M^^^@^C@)@@@@@C^?@@[[@K@@@G8K@@[UR
)@@G@@C@K@@K/K@@@6!@0@@KC G@@]C@@@@#G80@@@C^'@@]AB@@@@)@N[#]@H]@L]@P]@T@K)BK^CUS
)@@G@@]@@@@@R]K@@@/K@@@O/,0@@@/@)@@U/,0@@@/,0@@@(@@@@@[@)@@@AC@@@@)@V[F]@>]@C^UT
)@@G@@C]-]@C@@@@@@H80@@[O'K@@[C@0@@@[C9@@@[@0@@@G80@@@[^9@@@C@0@@@O]K@@@AD@@@@UU
)@@G@@)@=[]K)#K)FK)GK)DK)EK)D@@@@@@@C8@@@[[[K@@@G[K@@@C[K@@@/,0@@@'^@@@@R]@@@@UV
)@@G@@N@K@@JAE@@@@)@?[F]@L@K)HK)I^^@@@@@@@[@?@@[C@(@@@RAU@@[R])@@#[@W@@@C@K@@@UW
)@@G@@C@@@@@'^@@[E[@@@@@AF@@@@)@5[N@[]@D]@/@KK@@R])@@#N@K@@HH8K@@[O'K@@[[^T@@@UX
)@@G@@RAK@@@[@K@@@G8K@@[C@K@@K/K@@[ AG@@@@)@_[M^C]4[]@4^^@@@[WE@@]C8@@@[/K@K@]UY
)@@G@@ WE@@][[W@@[C@@@@@'^@@[E'^@@@@C[S@@@RAE@@[AH@@@@)[D[#[^ ][[@K)LEKDCKD)@@UZ
)@@G@@@@@@@@'=@@@@!8@@@@C@@@@@/K@@[O*@@@@@9*@@@@@@@@@@/K@K@]AI@@@@)[L@:][K^ @@VA
)@@G@@)@]@=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/K@K[E9?@@@@[@W@@@C8K@@BG@@@@@AJ@@@@VB
)@@G@@)@A@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@VC
)@@G@@@@@@@@AK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@VD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@#@@B@@P@@1@@#@@.@@@@@@@@@@@@@[Q@@@@@BFRSTEDVE
)@@G@@      TF$RMR1     RECLEN      RECADD      TBWRSW      TINIT       TSPACEVF
)@@G@@      TBWRT1      TWADDR      TBRELW      RECLN1      RTRANS      FRMINXVG
)@@G@@      LCINXA      INDEX       TEMPKT      IFNDOOVF    IUPDPT1     IBNUM VH
)@@G@@      ERR$        IUPDAD      TF$C        @@[@@@@@@@@@INDXUPD     @@[@@@VI
)@@G@@@@@@[ERNDPKT      @@]@@@@@@@@^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@VJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@VK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[N[KOC@@^^K@@@@?@@@@I/K@@@;?@K@@G[^)@@@C@%@@@VL
)@@G@@C@U@@^C@E@@#'^@@@@A])@@ AA0@@^AA@@@@)@E[N@K[@KO@KO^@@@H@K@@G[@@@@[[[K@@#VM
)@@G@@C9K@@[/K@@@M @@@@#/K@@@;?@)@@H/K@@@K/K@@@GAB@@@@)@O[EKO @EK@*C-@^-@]@@@@VN
)@@G@@*W@@@]/,0@@@[@E@@@C@@@@[R')@@@/K@@@4(@@@@][@K@@]G8K@@[AC@@@@)@X[F@EK[*C-VO
)@@G@@@]CK]]@@@@@@/K@@@;*WE@@]/,0@@@[ U@@]C K@@][[E@@@C @@@@R')@@@/K@@@;AD@@@@VP
)@@G@@)@&[N[KO@K[[KL[@@@[@K@@@G8K@@[C@K@@@[@@@@[G8@@@]/K@@@?G8@@@[/K@@@:*@@@@#VQ
)@@G@@C@@@@[AE@@@@)@0[F[^ @KO^^C[K@@@@@@@@ @@@@@ WE@@][@E@@[C@@@@@R])@@ /K@@@QVR
)@@G@@[@)@@]H8)@@[C@)@@]AF@@@@)@9@;]@T[[]@P]@T[@)@@@O@@@@@@@@@@@@@/K@K@^ @@@@@VS
)@@G@@ @@@@@[WE@@]C8@@@[/K@K@^ @@@@@AG@@@@)@]@=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@VT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AH@@@@@@^@@#@@B@@B@@P@@[@@T@@@VU
)@@G@@@@@@@@@@@@[@@@@@@AFRSTED      RMVPKT      TF$RMR      IAFPKT      TF$IA VV
)@@G@@      RDA         RDALN       TF$CPY      @@[@@@@@@@@@@@@@@@@@@@@@@@@@@@VW
)@@G@@)@@[EKO [K)@KOC@O[]@C@@@C@)@@@/K@@@K(@@@@@ @@@@@'^@@@@A])@@9AA0@@7[@@@@CVX
)@@G@@C8@@@[AA@@@@)@D[F]@^K)#K)^KO[@^@@@@@/K@@@)(CE@@[/@)@[F/,0@[)[^K@@ '=@@@@VY
)@@G@@!@K@@@H@K@@IC@K@@@AB@@@@)@M[EKM+-@E)*E@)*@@@@@@@/K@@@)*C@@@H/K@@@)*@@@@IVZ
)@@G@@R])@@9/,0@@@R')@@D[@@@@GC@E@@[AC@@@@)@V[F[KOC@4[@K)]K)[K^C@KC@K@@@/K@@@*WA
)@@G@@(@@@@@C@)@@@/K@@@(/K@@@)!@K@@@[@K@@[C^K@@HAD@@@@)@=[EK)#K)^K[[^ ]@G@@@@@WB
)@@G@@N@)@@@[@K@@#H8K@@[[@K@@] @@@@H/K@@@('=@@@@!@K@@@H@K@@IAE@@@@)@![N[K^[[K[WC
)@@G@@[KOC@0H8)@@[C@)@@@C@K@@][@@@@@C8@@@[/K@@[[*@@@@@/K@@[X8K)@@0^@)@@^AF@@@@WD
)@@G@@)@7[MK@KO @^[@@@@@/K@@[F/K@@@,*@@@@I/,0@[)[^K@@ [@0@@]G80@@[C@0@@H/K@@@0WE
)@@G@@?@)@@HAG@@@@)[[[N[KL@K^^^ @@@@/K@@@/[@0@@#H80@@[C@0@@HC@K@@#/K@@@0/K@@[AWF
)@@G@@!8@@@@C@@@@# @@@@@AH@@@@)[F[F[K)AK)BK)A@^^@@@@@@(@@@@CO'@@@[[[U@@#H9K@@[WG
)@@G@@C S@@@RA@@@@/,0@@@[@0@@[C@0@@BAI@@@@)[O[N@^@^C][[KK@@@C8@@@[/K@K@7 @@@@CWH
)@@G@@ WE@@]'^@@@@N@K@@LRAU@@]/K@@[UAAE@@]/K@@[RAJ@@@@)[Y[EK^ [KOC]OC]=C]OC[@@WI
)@@G@@'=@@@@*C@@@@/,0@@@[^K@@@[CK@@  @@@@AAA0@@8/K@@[V[WE@@]AK@@@@)[$[N]@=K^^KWJ
)@@G@@K@@@@@C@%@@[&'@@@]O'@@@#R]@@@D[@@@@AG^D@@[C@@@@A/K@@]D(^D@@[R]K@@[AL@@@@WK
)@@G@@)[1[M^[[^ ]@C^^@@@N^K@@  @@@@K&;@@@[C@@@@@[@@@@AH@@@[[C@@@@A/K@@]D2@*)@@WL
)@@G@@N^T@@[AM@@@@)[;[MK^[@^[]@ [@@@P'@@@#[[E@@@G[@@@A[^@@@@/K@@[.G[G)@@/K@@][WM
)@@G@@8KK@[_/K@@][(@@@[[AN@@@@)] [MKL[^@K[[@@@@@/K@K@8C8)@@[/K@@[+C^T@@@/K@@]HWN
)@@G@@(^D@@@/K@K@8 @@@@I[[K@@BC[S@@@AO@@@@)@@[G@@@@@@@)@7@G@@@@@@@@@@@@@@@@@@@WO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AP@@@@)@8@O@@@@@@@@@@@@@@@@@@@WP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AQ@@@@@@@@@@@@@@@@WQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WR
)@@G@@@@^@@#@@B@@F@@X@@]@@>@@@@@@@@@@@@@]J@@@@@'FRSTED      RNDSAV      RNDADDWS
)@@G@@      RNDIDX      ERR$        KF$AMR      TEMPKT      LOCREC      RTRANSWT
)@@G@@      INXPKT      INXBUF      TF$DBP1     @@[@@@@@@@@@TF$DBP      @@[@@@WU
)@@G@@@@@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[N[K)@[]@^K^@K@/K@@[[WW
)@@G@@?[@@@I/K@@[[/K@@@C!8)@@[C[@@@@C@'@@^C@%@@#'^@@@@AA0@@[AA@@@@)@E[UK[@@[[@WX
)@@G@@C@@@@I[^@@@@[@E@@@G8@@@[H@@@@IC@@@@JC@0@@K/K@@@J![@@@J/K@@[[?@0@@IAB@@@@WY
)@@G@@)@P[E^ [KO[]@D]@H]@K@@@@C^@@@['^@@@@/,0@@@/K@@@;(^@@@@CC0@@@[C0@@@[@E@@[WZ
)@@G@@P;@@@[AC@@@@)@Y[M@K) [@^C[)@@@'=@@@@?@K@@I/K@@@0:@K@@IG8)@@[C@)@@@[^/@@[XA
)@@G@@H80@@[C@0@@HC^W@@[AD@@@@)@*[N]@W@[@K)C@@@@C@D@@@R]K@@@'^@@[^ @@@@GC8)@@]XB
)@@G@@N@K@@HT8K@@]H@K@@IO'@@@]RA@@@@AE@@@@)@2[M^^KO^KO[]@^@@C@@@@@/K@@@S[^@@@@XC
)@@G@@H8@@@[C^@@@@[C@@@@H8@@@[CC@@@@[@D@@@H8@@@[AF@@@@)@/[MK)[^C]O^^^K@@/@@@[IXD
)@@G@@@@@@@@/K@K@[[WE@@]C8@@@[/K@K@[[^@@@@C@E@@[[@@@@@H@E@@@AG@@@@)[A[U@@K@@@@XE
)@@G@@&'@@@[P]K@@IR]K@@C/K@K[^M]S)@@&'K__"&'@__"O]K@@IR]K@@CP'@@@[O]@@[[AH@@@@XF
)@@G@@)[L@U^@@@@@@)@@@O@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/K@K[^M]S)@@XG
)@@G@@&'K@@[AI@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@#@@B@@E@@V@@]@@<@@@@@@@@@@@@@[O@@@@@]FRSTEDXI
)@@G@@      RECNMC      LOCINX      INDXUPD     INXPKT      INXREL      ERR$  XJ
)@@G@@      LCINXA      RNDSAV      CURREC      TF$DLT      @@[@@@@@@@@@IPUSH XK
)@@G@@      @@[@@@@@@@[^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XM
)@@G@@)@@[F[K)@K)[^C@-]@G@@@@@G8K@@[C^U@@]'=@@@@*@@@@G/,0@@@C@'@@@'^@@@@ )@@@@XN
)@@G@@AA0@@GAA@@@@)@D[#]@KK) K)AK)BK)CK^C]K@@@@@/,0@@@/@)@@M/,0@@@/,0@@@(@@@@@XO
)@@G@@[@)@@@C^%@@[[@K@@@AB@@@@)@L[#@K)EK)FK)^]=[+^[*@@@@@@@@[C9@@@[@0@@@G80@@@XP
)@@G@@[^9@@@C@0@@@O]K@@@R]K@@@/K@@@GAC@@@@)@T[F]@K[]@P]@9]@.]@!]@4G[K@@@C[K@@@XQ
)@@G@@/,0@@@'^@@@@R]@@@@N@K@@JH80@@[O'K@@[C@0@@@AD@@@@)@+[F]@?K)AK)KK)L^^K)#@@XR
)@@G@@'=@@@@?@@@@JC@@@@#C^9@@[RAK@@['^@@@@[@@@@@C8@@@[[[K@@@AE@@@@)@:[MKM=]M@@XS
)@@G@@)C@@@@C[@@@J/K@@[,'^@@[;[ D@@[G9@@@[C[@@@J/K@@@4!80@@@[@@@@#H@@@@JAF@@@@XT
)@@G@@)@5[E@K)NK)#K)NK@@@@@@@@9?D@@@/K@@[[:@@@@@'=@@@@?@@@@@C@@@@DO]K@@K&'K@@@XU
)@@G@@T9@@@]AG@@@@)@"[F[K^[][L]@OKOC^O^@@@A]K@@^RAK@@[9*@@@ C@Y@@@C@)@@@C@@@@@XV
)@@G@@/K@@[ '^@@[;9*@@@ AH@@@@)[B[EK^C^OC OC^OC@4C^O^@?^(@@[C@)@@#R]K@@['=@@@@XW
)@@G@@*C@@@@/,0@@@[^@@@@/@@@[&C^D@@@AI@@@@)[K[F]@GKK(@=)C]@-@)@@@@'^@@@@'^@@#ZXX
)@@G@@'^@@#L/K@@[U!80@@@C^9@@[[@)@@#H^(@@['=@@@@AJ@@@@)[T[N@@[[[@@@@@@@@'^@@#LXY
)@@G@@H80@@[C^9@@[9*@@@B9?C@@@O]@@@KT9@@@]C D@@[R]@@@D/K@@[,AK@@@@)[<[N[KO[@K^XZ
)@@G@@ [@@@@G80@@[C^8@@[9*C@@]9?@@@ R]@@@]'^@@##'^@@]>/K@@[ 9*@@@ 9?@@@BAL@@@@YA
)@@G@@)[![EK)Q^C )K)R^CA@@@@@@C@@@@@[@E@@@[@@@@@G8@@@[C@E@@@[@@@@@G8@@@[C@@@@@YB
)@@G@@[^8@@[AM@@@@)[6[M@KL][H]@[@@@@O'@@@]/K@@]@*)@@@@R]@@@@@@@@@@/K@K@G WE@@]YC
)@@G@@[@W@@@G8K@@[C@W@@@AN@@@@)]@[F[K)T[@EKD]^@@@@@@@@G80@@[*)@@@@P;0@@[!80@@@YD
)@@G@@/K@@]Q:@)@@JG8)@@[C@)@@@A]@@@DAO@@@@)]D[M@^CA=C ^^K) @C@@@@@[[S@@@R]@@@DYE
)@@G@@C[K@@@'^@@@@C8@@@[C8)@@]N@K@@JT80@@]P#0@@IAP@@@@)]N[M^[]@[@EKDC@C@/K@@]EYF
)@@G@@H@0@@IG80@@[/K@@]V!80@@@/K@@]J()@@@@/K@K[;[[C@@[C[G@@@AQ@@@@)]X[MKO@K[[KYG
)@@G@@@@@@@@&'K@@@@@@@@@/K@K]X[@)@@[ @@@@I/K@@]<C8)@@[/^)@]+C@)@@[@@@@@@AR@@@@YH
)@@G@@)]$[N][![^@K@K^@@@'^@@]X/K@@]3%^*@@@C@)@@D/K@@]3%CT@@@/@K@]3CCS@@@O]@@@[YI
)@@G@@R]@@@@AS@@@@)]1[F][![KM=#+@@-@'@@@@@/,0@@@C80@@CC^*@@@CCS@@@/K@@];%8)@@@YJ
)@@G@@C@)@@@O]@@@[R]@@@@AT@@@@)]'[N@^^KO[][8K@@@@@@@@@/K@K]>[CC@@@C@@@@@'^@@]XYK
)@@G@@A#@@@]C^C@@@[@)@@@G8)@@[/K@@].AU@@@@)#^[F#@[[]=^@-@/)+]@@@@@R]@@@^[CF@@@YL
)@@G@@R]0@@]C@@@@@M]S)@@N8K@@@&'K@@[R]K@@]R]@@@@AV@@@@)#H[M^CB=@K@@@@@@@N@K@@JYM
)@@G@@T80@@]O'@@@]R]@@@D/@0@#W@@@@@@/K@K##[@@@@@G8@@@[[^C@@@AW@@@@)#R[M[][*KL@YN
)@@G@@@@@@@@C^D@@[@@@@@@/K@K#L9*D@@]9?@@@ R]K@[]'^@@@@N@)@@DC8@@@[C8)@@]AX@@@@YO
)@@G@@)#-@U^@@@@@@)@@@?@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/K@K#Z[@D@@[YP
)@@G@@G8@@@[AY@@@@)@D@G@)@G@G@)@@@C(@"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YQ
)@@G@@@@@@@@@@@@@@@@@@@@AZ@@@@@@^@@#@@B@@-@[D@@^@[T@@@@@@@@[@@@@#=@@@@@HSW2   YR
)@@G@@      FRSTED      LOCINX      ERR$        RECLEN      RECADD      TBWRSWYS
)@@G@@      TINIT       TSPACE      TBWRT1      TWADDR      TBRELW      EXTRAWYT
)@@G@@      RECLN1      RTRANS      FRMINX      INDXUPD     INXPKT      INDNUMYU
)@@G@@      LCINXA      INDEX       INXBUF      RECNMC      CURREC      RNDSAVYV
)@@G@@      INXREL      IPUSH       IOVFRAD     IOVFNUM     IBIOW       IBNUMWYW
)@@G@@O     ZEROS       IBSIZE      TF$IA       @@[@@@@@@@@@OIINIT      @@[@@@YX
)@@G@@@@@@##IOBFENT     @@]@@@@@@@@@REMINDX     @@]@@@@@@@@#@@@@@@@@@@@@@@@@@@YY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[F[K)@[@K)[^C@)@@@@@@ZA
)@@G@@H8@@@['=@@@@?@)@@GC@)@@@/K@@@J:8@@@@C@E@@@'^@@@@AA0@@@AA@@@@)@D[EK)#@KKKZB
)@@G@@K@@@@@@@@@@@/K@K@@[WU@@]C8K@@[/K@K@@[@U@@@G8K@@[C@U@@@/,0@@@[@E@@@AB@@@@ZC
)@@G@@)@@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZD
)@@G@@@@@@@@AC@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@#@@B@@^@@J@@[@@N@@@@@@@@@@@@@@M@@@@@[FRSTEDZF
)@@G@@      RECNMC      ERR$        TF$IA       TF$IB       @@[@@@@@@@@@@@@@@@ZG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[N[KOC@O@K[[@@@H@K@@GZH
)@@G@@C@U@@^[@@@@GC@E@@#/K@@[^*@@@@I/,0@[E'^@@@@A])@@IAA0@@KAA@@@@)@E[MKL[KO@*ZI
)@@G@@*C-@^@/,0@@@[@E@@@C@@@@GR')@@@/K@@@.(@@@@H[@)@@FC@%@@@[@K@@HG8K@@[AB@@@@ZJ
)@@G@@)@O[N[K]+))-@A)*]]C@)@@@/K@@[^*W@@@ /,0@@@[@U@@^[@U@@#C@K@@@R')@@#/K@@[^ZK
)@@G@@*W@@@]AC@@@@)@Y[N[K^[[^^**C))@C K@@][[E@@@C[@@@FR')@@C[@0@@FH80@@[C@0@@FZL
)@@G@@/K@@@-/K@@@=!@)@@FAD@@@@)@*[MK)^^[[KO[@^^@[[K@@FG9K@@[/K@@@6/K@@@0?[K@@GZM
)@@G@@C[K@@F/K@@[^*WE@@]/,0@@@[ U@@]AE@@@@)@2[N[^ @KL[KL[@@@[@@@@HH8@@@[C@@@@HZN
)@@G@@[@K@@FG8K@@[C@K@@F/K@@@9[@K@@GG8K@@[C@K@@GAF@@@@)@/[N@KK^C@^C[O [@C8@@@[ZO
)@@G@@R])@@I/K@K@K @@@@@ @@@@@[@E@@[C@E@@@ WE@@]R])@@I/K@@@IAG@@@@)[A[MK)@K) KZP
)@@G@@O^@K@@/K@@[P?@)@@HC@%@@^C@U@@#C@E@@@AA0@@J/K@K@K @@@@@ @@@@@[WE@@]AH@@@@ZQ
)@@G@@)[K[EK^@K[[^^@@@@@@@@@@@/K@K@J @@@@I/K@K@JC8)@@[/K@@[R?@)@@G/K@@[R/K@@[NZR
)@@G@@!@@@@HAI@@@@)@@[OJA@)@@@#1)C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZS
)@@G@@@@@@@@@@@@@@@@@@@@AJ@@@@)@E@/@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@#@@B@@A@@N@@^@@<@@@ZV
)@@G@@@@@@@@@@@@[T@@@@@LRDA         FRSTED      TF$RMR      TF$DLT      TF$IA ZW
)@@G@@      RDALN       TF$MVE      @@[@@@@@@@@@RMVPKT      @@]@@@@@@@@@DLTPKTZX
)@@G@@      @@]@@@@@@@@#IAFPKT      @@]@@@@@@@@C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[F#@T[K)#KO[[K^[@@@@@/@)@@F/,0@[>/,0@[U(@@@@>AA
)@@G@@/,0@DE(0@@@Y'=@@@@*?@@@YAA0@@CAA@@@@)@D[N@K@KL[KO[@@@@/,0@]</,0@[E(@@@@:AB
)@@G@@[@)@@1C^%@@[[@K@@\G8K@@[C^U@@@/K@@@ /,0@[.AB@@@@)@N[N@K^[[KO^EK]CC[C9@@@AC
)@@G@@[@0@@0O;0@@@[^9@@@C@0@@\O]K@@(R]K@@%/K@@@K/,0@],/@)@@QAC@@@@)@X[N[@KO[@KAD
)@@G@@O [@@@[[K@@(G[K@@0C[K@@(/,0@[L'^@@[8R]@@@1N@K@@JH80@@[O'K@@[C@0@@\AD@@@@AE
)@@G@@)@$[MKO @KL[KL[@@@[[K@@,G9K@@[C[K@@,[@@@@<G8@@@]C@@@@</,0@@7C@@@@<[@@@@:AF
)@@G@@C8@@@[AE@@@@)@1[F[K0AEE^@(LK) K0AKK@G@@@@HC@K@@=AA0@@D/,0@@@R')@@A/,0@@@AG
)@@G@@R')@@@/K@K@C[[K@@!AF@@@@)@'[N[^^@^ [@@@@@@O]@@@3R]@@@5[^.@@[G80@@[C^.@@[AH
)@@G@@[@?@@[C@,@@@C@)@@1[@?@@@C@)@@2AG@@@@)[^[E@KOG[=G[=G@^^@@@@@@R]K@@%R]@@@@AI
)@@G@@AA0@@D/K@K@D[@@@@>C8@@@[A#S@@@O;K@@[C@S@@@AH@@@@)[H[EEK[]A@2A@2]O)]KK@@@AJ
)@@G@@;H@@@=G[@@@(T9@@@@C[@@@*AA0@@D/K@K@DM]S)@@N8K@@@&'K@@[AI@@@@)[Q[EKO #@T#AK
)@@G@@@T#@[[]=@C@@N8K@@@&'K@@[R]K@@=R]@@@@AA0@@D/K@K@D[5K@@2[[@@@2W9@@@WAJ@@@@AL
)@@G@@)[Z[EKO^KOG[=G[+=@E]@@@@H[K@@<C9K@@@AA0@@D/K@K@D @@@@>[DF@@@R]0@@=C[@@@-AM
)@@G@@M]S)@@AK@@@@)[*[MEK# C@K[@@@@@H[K@@HG8K@@[/K@@[1(@@@@IW8K@[=;GK@@=T@K@@KAN
)@@G@@C8K@@@H9@@@@C9@@[=AL@@@@)[2[M^[#@SK0A@@@@@M]S)@@&'K@@[&'@@@[@@@@@@/K@K@DAO
)@@G@@C8)@@@/K@K@D/K@@[6?@)@@LC8)@@[AM@@@@)[/[F@K0AKM=@C]^@U]@@@@@[[@@@&'=@@@@AP
)@@G@@*@@@@LW9@@@W;H@@@=T9@@@@C[@@@-AA0@@D/K@K[8AN@@@@)] [F[K)BKO@KO [KK@@@@@@AQ
)@@G@@[[@@@ [^K@@^C@K@@=[0@@@#C8@@@C/K@@@3*4@@@#'=@@@@0@@@@#AO@@@@)]I[M**K^CE@AR
)@@G@@CE@)*CC8@@@] @@@@> @@@@)/K@@]Q[@@@@)C8@@@[/K@@]P*@@@@)'=@@@@C8@@@@AP@@@@AS
)@@G@@)]S[N[KL[KL[KOG[=^[@K@@=C@W@@@C@@@@)[@@@@-G8@@@[C@@@@-[@@@@3G8@@@[C@@@@3AT
)@@G@@[@@@@<AQ@@@@)]+[F#@T#@S(@^)*DM@KK@@@R;)@@[/K@@]?![K@@IG8)@@@C@)@@\H[K@@(AU
)@@G@@C9K@@@AA0@@D/K@K@DAR@@@@)]:[F#@SK0AK0AKM=@K@@@@@*@@@@LW9@@@W;H@@@=T9@@@@AV
)@@G@@C[@@@*AA0@@D/K@K@DR;)@@@/K@K@DAS@@@@)]4[F]@H[KOC[4 @^ [@@@@@C@K@@%[0@@@DAW
)@@G@@C8@@@C/K@@@5*4@@@D'=@@@@0@@@@D[[@@@?'=@@@@AT@@@@)].[F[KM+-@K)*@)*@@@@@@@AX
)@@G@@/K@@#B[@@@@$C8@@@[/K@@#A*@@@@$'=@@@@C8@@@A[[@@@F[^K@@EAU@@@@)#A[F[KO [K0AY
)@@G@@AKO^KK@@@@@@[@@@@*G8@@@[C@@@@*[@K@@%C@W@@AC@@@@$ @@@@( @@@@: @@@@$AV@@@@AZ
)@@G@@)#J[F#@T#@T[K)#KO[[K^G[@(@@@@@/K@@C=()@@@Y/K@@AG(?@@@Y'=@@@@(0@@@YAA0@@CBA
)@@G@@/K@K@DAW@@@@)#S[F@K0^K^G[^G[[#@KK0^@[@0@@^H80@@[C@0@@^C@W@@@G@@@@[C@@@@]BB
)@@G@@/K@@#&(@@@@^/K@@^TAX@@@@)#-[F#@L#@KK0^K^G[[@KK@@*4@@@Z/K@@^;*^I@@@C@)@@]BC
)@@G@@/K@@ \[@@@@[G8@@@]C@@@@[[@K@@ AY@@@@)#%[F@KO[#@KK0^KO[#@K@@@C[K@@@/K@@#5BD
)@@G@@ 0@@@Z[[K@@@G9K@@[C[K@@#/K@@#2(0@@@Z/K@@ADAZ@@@@)#3[EK0^KOC[4 @^G[^C@0@@BE
)@@G@@'=@@@@%[K@@AH9K@@[/K@@@3*4@@@#'=@@@@0@@@@#[[K@@@G9K@@[BA@@@@)#/[EK0^KO@KBF
)@@G@@O[[KK@@@@@@@C@@@@) @@@@)/K@@^^[@@@@)C8@@@[/K@@^#*@@@@)[@@@@[C8@@@]BB@@@@BG
)@@G@@)^ [F#@T#@KK0^K0^KO[[@@@*@@@@HR#K@@)/K@@^Q!@0@@-C@0@@@A#)@@^RB!@@[[@K@@]BH
)@@G@@C@W@@@BC@@@@)^I[F@^@K0^K0^K^@@@@@@@@C8@@@[/K@@#T/,0@B8[@)@@AC@)@@@ @@@@HBI
)@@G@@/K@@^MC8K@@[/K@@^LBD@@@@)^R[N[K^^^[[K)BKO@/K@@@3*4@@@#'=@@@@0@@@@#/,0@B8BJ
)@@G@@C8)@@@ @@@@H @@@@)/K@@#T[4@@@ZBE@@@@)^-[F[K0AK0^^G[^G[[#@L[@![K@@-[[K@@@BK
)@@G@@G9K@@[C[K@@@[@@@@^C^J@@[[@0@@]C@/@@@C@@@@)BF@@@@)^%[F@KL@^@K0^K0^@@@@@@@BL
)@@G@@[@)@@AC@)@@@ @@@@H/K@@^1C8K@@[/K@@^0*@@@@HC@K@@)/K@@^8BG@@@@)^3[N@K0^^[@BM
)@@G@@^ @KO@/K@@ [*0@@@Z/K@@^4[40@@ZC80@@[/K@@#T/K@@#&(^G@@[C@@@@]/,0@B8BH@@@@BN
)@@G@@)^.[EKOG[^G[^ ]@X[K^G[)@C@K@@]/K@@@3*4@@@#'=@@@@0@@@@#[@K@@#C@K@@@[0@@@ZBO
)@@G@@C8@@@[BI@@@@) A[F#@KEK@)CK[+]@@@@@@@[1@@@#C9@@@K'=@@@@*@@@@KW80@@W;G0@@=BP
)@@G@@T80@@@C^"@@@C@)@@]BJ@@@@) J[F[KM+-@K)*K#*E@-)G@@C@K@@]/K@@@3*4@@@#'=@@@@BQ
)@@G@@0@@@@#'=@@@@R;@@@@[^K@@^[@0@@ BK@@@@) S[F#@KK0^K0^^G[^G[[@@@/K@@ ?(^C@@[BR
)@@G@@R]@@@][@0@@CG80@@[C@0@@C[@)@@[C8)@@][@K@@]BL@@@@) -[EK0^K0^^G[[#@L#@K@@@BS
)@@G@@G8@@@]C@@@@[[[@@@^H9@@@[[[K@@ C[S@@@O]@@@[[[@@@^C C@@[BM@@@@) %[F#@L@^[@BT
)@@G@@K0^@@@@@@@@@;GK@@=;CK@@A;*K@@AC@K@@ /K@@^;/K@@#((^C@@@/K@@ \[@@@@[BN@@@@BU
)@@G@@) 3[E(@M-)O]@)C]@-)C@@@@C@@@@L/,0@AV/K@@ ;/,0@CC/K@@ '!@0@@HH80@@[C@0@@@BV
)@@G@@W8K@@@BO@@@@) /[N#@KEK]@]A@)@@[@U@@@G8K@@[C@K@@J[@E@@[G8@@@[[ U@@]H9K@@[BW
)@@G@@H9K@@@C W@@@G4@@@ BP@@@@)AA[F#@KK0A[#@T@KOC[0@@@'=@@@@0@@@@#/,0@[./K@K@CBX
)@@G@@[WE@@]C8@@@[/K@K@C WE@@][@K@@JBQ@@@@)AJ[F[K[[KO #@([KK@@@@@@[@K@@+C@K@@-BY
)@@G@@[@K@@@C@K@@*[4@@@Y[?@@@YC8@@@[/K@@@3*4@@@#BR@@@@)AS[F[KO[#@T#@L@K0^@@@@@BZ
)@@G@@?[@@@HH9@@@[C[@@@D/K@@A_(@@@@DAA0@@D/K@@#P[@)@@!C@)@@,BS@@@@)A-[F@^C@4[[CA
)@@G@@K)BKO[#@K@@@C[K@@D/K@@@5*4@@@D'=@@@@0@@@@D/K@@BR'=@@@@%[@@@H/K@@A>BT@@@@CB
)@@G@@)A%[F[K[[K^ #@L]@G@@@@@@G9K@@['=@@@@%[K@@I @@@@$/K@@A0[@@@@$C8@@@[/K@@A\CC
)@@G@@*@@@@$BU@@@@)A3[F#@L[K0AK0^K^G[@K@@@/K@@BR:@K@@LH9K@@[C[K@@D/,0@BX[[@@@GCD
)@@G@@C[G@@^C@@@@$[[K@@DBV@@@@)A/[F[K^C@4 [K)BKO@@@@@@C@0@@H/K@@@5*4@@@D'=@@@@CE
)@@G@@0@@@@D @@@@$'=@@@@/K@@A>(=@@@ZBW@@@@)B [E(@M-)GCE])> ]@-[@@@0@@@@D'=@@@@CF
)@@G@@C8@@@A[@0@@F[ @@@E[1K@@DC9K@@KC[@@@^T80@@@BX@@@@)BI[F]@X[K^G[@K0^K^@@@@@CG
)@@G@@/K@@AY/,0@BX[[K@@DG9K@@[C[K@@H[[@@@G/K@@@5*4@@@D'=@@@@BY@@@@)BR[#[K0A[#@CH
)@@G@@L#@T#@T#@K@@@@@@@@C[K@@DAA0@@E/K@K@DA#@@@LG@@@@IT8)@@WC@G@@^C@@@@$BZ@@@@CI
)@@G@@)BZ[F#@(@KL@^@K0A@@@@@@@C[G@@^ @@@@G/K@@B$C8@@@[/K@@B&*@@@@GC@@@@$/K@@B5CJ
)@@G@@![K@@@CA@@@@)B*[F#@K(@M)*K#*E@)*C@@@C8@@@K[[K@@F[ @@@E/K@@@5*4@@@D'=@@@@CK
)@@G@@0@@@@DT9K@@@[[K@@ICB@@@@)B1[F[EE^[]A@0)*S#CS#CC@0@@@@#AA0@@D/K@K@E[=@@@ZCL
)@@G@@C8@@@[/K@K@E'=@@@@C8@@@A[0@@@DCC@@@@)B'[F]@X[K[[K0AKK(@O@@@@T9K@@@C[K@@ICM
)@@G@@[ @@@^C[H@@@[00@@#C80@@K/K@@@3*4@@@#'=@@@@CD@@@@)C#[#[EE^[]A@+A@2A@2A@)@CN
)@@G@@@@@@@@:@K@@GC@@@@EAA0@@D/K@K@D[@)@@A'=@@@@C8@@@@[[K@@ CE@@@@)CF[F@]=[EA@CO
)@@G@@0)*K#*E@@@@@/K@@@5*4@@@D'=@@@@0@@@@DC9K@@KC[@@@AT80@@@C@0@@H/K@@CZCF@@@@CP
)@@G@@)CO[F[KO^**K^CE^@'])@@@@/K@@@5*4@@@D'=@@@@0@@@@D'=@@@@C8@@@A[1K@@D[ @@@ECQ
)@@G@@[@0@@FCG@@@@)CX[F#@L#@K^G[=G[^G[=[[@0@@@@D/,0@],/K@K@D[[K@@LG[K@@AT9K@@WCR
)@@G@@C[K@@I[@K@@E[[@@@GCH@@@@)C&[F]@X[K^G]=G]=[@@@@@@C^(@@@CCT@@@/K@@C38KK@C!CS
)@@G@@N@K@@IR]K@@J/K@@@5*4@@@D'=@@@@CI@@@@)C\[MK[@K0EK0EK^@@C^(@@@CCT@@@/K@@C.CT
)@@G@@8KK@C7N@K@@OR]K@@P/K@@C:O'K@@[/,0@H9C80@@CCJ@@@@)C9[MK[@K0EK)FK^@@C^(@@@CU
)@@G@@CCT@@@/K@@DB8KK@D[N@K@@@R]K@@K/K@@C5O'K@@[/,0@JOC80@@CCK@@@@)D#[EK[@^ @KCV
)@@G@@0AEC@@@@@@@@C8@@@GAA0@@D/K@@#R[)@@@YC8@@@[/K@@C_O'K@@[/,0@H9C80@@CCL@@@@CW
)@@G@@)DG[F]@1@KO@**KAC[LK)G@@'=@@@@C8@@@P/G@@EZ'=@@@@R;@@@K/K@@EX*4@@@Y/C@@DNCX
)@@G@@'=@@@@CM@@@@)DP[F@KO@**KAC@)*KA)@@@@C@@@@@A3@@@YR;@@@[/G@@E<'=@@@@R;@@@TCY
)@@G@@/K@@E-*4@@@Y/C@@DVCN@@@@)DY[E^ #@SEK@*S# C#+=@C@T8)@@@C8)@@@[@)@@[G8)@@@CZ
)@@G@@C@)@@H[@K@@@[@K@@=G8K@@[C@K@@GCO@@@@)D$[]K0AEKB*S#[M@D#@S(@)@@@@@@C8@@@@DA
)@@G@@[@)@@ G8)@@@C@)@@H[@K@@^G8K@@@[@K@@]G@K@@ICP@@@@)D\[](@^CEA@1M@D#@S(@^@@DB
)@@G@@@@@@@@C@@@@HG8K@@@[@K@@BG8K@@@[@K@@A[@K@@%G@K@@GT8@@@@CQ@@@@)D7[#]@5][ ]DC
)@@G@@@4^^(@=-@U@@@@@@@@[@@@@@G8@@@@[^K@@5G8K@@[C@K@@GC@@@@@'=@@@@[@@@@@CR@@@@DD
)@@G@@)D_[#][ ]@4^G]+=[2^[%^]C@@@@@@'=@@@@[@@@@@G8@@@@[^K@@JG8K@@[C@K@@GC@@@@@DE
)@@G@@'=@@@@CS@@@@)EB[F]@4^G]+=]]^[%^]E^[*C@K@@GC@@@@@'=@@@@[@@@@@G8@@@@[^K@@PDF
)@@G@@G8K@@[C@K@@GC@@@@@CT@@@@)EK[EK0EEKBCKA*KC*KA)-)O[^K@@KG8K@@[C@K@@GC@@@@@DG
)@@G@@'=@@@@[@@@@@G8@@@@[^K@@MG8K@@[CU@@@@)ET[](@&-@U-@+-)GOOC ]+-@*@@@@/,0@@@DH
)@@G@@R')@@K/,0@@@R')@@G/K@K@D'=@@@@[@@@@@G8@@@@CV@@@@)E-[E**KE  ][KKOC@4 @@@@DI
)@@G@@/K@KE>*?@@@Y'=@@@@(0@@@Y@@@@@@/,0@@@R')@@T/,0@@@R')@@PCW@@@@)E%[F@KOC[4 DJ
)@@G@@@^ [KK@@@@@@C@K@@*[4@@@Y[?@@@YC8@@@[/K@@@3*4@@@#'=@@@@0@@@@#/,0@[.CX@@@@DK
)@@G@@)E3[F#@([KO[#@(@^@@@@@@@*@@@@G/,0@FQC@'@@@'^@@E>AA0@@H/K@KE>[@K@@+C@K@@-DL
)@@G@@[@K@@@CY@@@@)E/[F@K0EK0EK^G])@@@@@@@O'@@@[[ U@@]H9K@@[C S@@@RA@@@F/,0@IEDM
)@@G@@[@@@@GC@@@@^/K@@FHCZ@@@@)F [F#@(@[@^G]=G])@@@@@@C8@@@[/K@K@H @@@@T WE@@]DN
)@@G@@'^@@[8N@K@@LRAU@@[/K@@FL*@@@@TDA@@@@)FI[EK0EK0E^@K0EK^G[)@@@AA0@@D/K@@E7DO
)@@G@@[@@@@TC8@@@[/K@@FEAAE@@[/K@K@H @@@@T[WE@@]DB@@@@)FR[N[K0EKL@^[[^^@N@K@@3DP
)@@G@@&'@@@[R]@@@5/K@@GZ(@@@@J/K@@GX?[@@@JC[@@@![@0@@# )@@@ZDC@@@@)F-[M@K^@K^CDQ
)@@G@@@0@@@@P'@@@['=@@@@8KK@F<G8K@@[/K@@F%/K@@F$?[K@@JG S)@@ @@@@H @@@@LDD@@@@DR
)@@G@@)F:[EK)PK0E[#@*K0EK0E@@@[^K@@C[[@@@]C C@@@[[K@@[G9K@@[H S@@@AA@@@B[@@@@@DS
)@@G@@C@C@@@DE@@@@)F4[#@K0EK)#K0EK0EK0EK0E@@@@@@C^D@@[[@)@@EH@)@@[C@)@@#R]K@@DDT
)@@G@@'=@@@@*C@@@C/,0@G<DF@@@@)F/[MK@K@[#@*@@@@@[@@@@^C@D@@@O]K@@IG8)@@]T8)@@]DU
)@@G@@/K@@GG?@@@@IH8@@@[/K@@GF(@@@@GDG@@@@)GA[F#@(#@*K0AK@K@@@@@@@H@)@@G/K@@GXDV
)@@G@@(^D@@@G8)@@[/K@@GG/K@K@D @@@@GA]K@@  C@@@CDH@@@@)GJ[EK0EK)P^C L#@(@K0E@@DW
)@@G@@*C@@@C/,0@G<[^K@@CC^T@@@[@@@@@H^D@@[C@@@@@[@)@@EH8)@@[DI@@@@)GS[F]@H#@(#DX
)@@G@@@(@K[#@SKK@@[)@@@ZC8@@@[/K@K@DC8@@@[/K@@F;/G)@GXC@)@@ER]K@@D'=@@@@DJ@@@@DY
)@@G@@)G-[]K^G[=G]=G]=C]4[]@?@@@@@@@N@K@@@/K@@G6(@@@@@C^K@@C @@@@AAA0@@E/K@@FSDZ
)@@G@@G80@@[DK@@@@)G([N#@(@K[@^@K0E@C8@@@[[^@@@DC^C@@@/K@@G%O'@@@[/K@@G0:CS@@@EA
)@@G@@/K@@G68KK@G?R]@@@KDL@@@@)G3[##@(#@(#@T#@(@K0EK0EK@@@@@8KK@G/R]@@@JN@K@@IEB
)@@G@@/K@@H*(@@@@I/K@K@E C@@@C[@@@@ADM@@@@)G;[F@^@K[#@(#@(#@*@@@@@AA@@@LP]@@@JEC
)@@G@@[^@@@DC^C@@@/K@@G'O'@@@[/K@@H@:CS@@@/K@@HADN@@@@)H^[##@(#@T#@(#@(#@*(@W)ED
)@@G@@CS @@@C@@@@M/K@@HO%80@@@C@0@@IO]K@@NR]K@@J/K@K@E C@@@CDO@@@@)HG[N#@*K@[@EE
)@@G@@K0E@@@C^(@@@C^K@@C/,0@H9C80@@CC^(@@@CCT@@@ @G@@@/K@@HO(@G@@@G@@@@NDP@@@@EF
)@@G@@)HQ[EK[#@(#@*EKBC@@@@@@@ @@@@L/K@@HZ%9K@@@G9K@@[[[K@@LC[K@@N[CT@@@/,0@H9EG
)@@G@@C80@@KDQ@@@@)HZ[##@(#@*(@W)]A[MA[MA[K@@@@@ C@@@C[@)@@D[@@@@IG8@@@[/K@@H>EH
)@@G@@:8@@@@C@@@@I[[K@@NDR@@@@)H$[F#@T#@(#@S(@WC]@ C@KO'K@@@AAS)@@/K@@H18KK@H,EI
)@@G@@&'@@@[N8K@@@R]K@@@R]@@@J/K@K@EDS@@@@)H0[F@K0EK0AEKD*]@ C@O@@/K@@H4O'K@@@EJ
)@@G@@AAS)@@/K@@HA8KK@H6N8K@@@R]K@@]Q]@@@K/K@@H?DT@@@@)H9[F#@T[K)BKO@EK CE]@@@EK
)@@G@@[^)@@^[[@@@ T9@@@@C[@@@H/K@@@3*4@@@#'=@@@@0@@@@#AA0@@FDU@@@@)I][F[EE^[]]EL
)@@G@@-@I)*]A@2A@0AA0@@E/K@K@F/K@@@3*4@@@#'=@@@@0@@@@#'=@@@@R;@@@@[00@@#DV@@@@EM
)@@G@@)IF[F#@*@(@M-)O-)O))@@@@H80@@[C@0@@*[@K@@S[@)@@RW8K@@@;GK@@=;CK@@A;*K@@AEN
)@@G@@C@K@@GDW@@@@)IO[EK^G]=[#@(#@(@K@@@@@:CS@@@/K@@I&8KK@IWR]@@@PN@K@@O/K@@J EO
)@@G@@(@@@@O/K@@JI?@0@@HDX@@@@)IX[F@^@[#@(#@(#@S@@@@@@/K@K@E[^@@@FG4@@@GG@@@@IEP
)@@G@@T8)@@WC^C@@@/K@@IUO'@@@[/K@@I)DY@@@@)I&[F#@(#@(#@*(@))@C@@@@/,0@JOC80@@CEQ
)@@G@@C^(@@@CCT@@@/K@@I\%80@@@C@0@@OO]K@@QR]K@@PDZ@@@@)I\[F#@*^@K0E]=]]@@@@@@@ER
)@@G@@/K@@I9%9K@@@G9K@@[C[K@@Q[CT@@@/,0@JOC80@@KC^(@@@C@K@@SEA@@@@)I8[EK0EK0EEES
)@@G@@KCC@-)O-)O@@T80@@WC@0@@R[@@@@OG8@@@[/K@@I_:8@@@@C@@@@O[[K@@Q @@@@LEB@@@@ET
)@@G@@)J[[]K0EK0EK0AK0EK0AEKC@@@@@@@&'@@@[N8K@@@R]K@@^R]@@@P/K@K@E[^)@@FG4)@@GEU
)@@G@@G@)@@JEC@@@@)JD[F@K@(@^)@-@A))@@@@@@C@@@@$'=@@@@%@0@@HG80@@[/K@@JDO'K@@@EV
)@@G@@AAS)@@/K@@I&8KK@JFED@@@@)JM[F#@T@K0AKOC[4 @]=[C@T9@@@@C[@@@H/K@@@5*4@@@DEW
)@@G@@'=@@@@0@@@@DAA0@@F/K@@I_C@?@@AEE@@@@)JV[F[KO^**K^CE^@'])@@@@/K@@@5*4@@@DEX
)@@G@@'=@@@@0@@@@D'=@@@@C8@@@A[00@@D[^)@@E[[@@@FEF@@@@)J=@F#@S@@@@)@@@/@/V]@@)EY
)@@G@@K@)@@@T$FILE@@@@@@@@@@@@@@@@@@@@@@@@      I$FILE/K@K@FEG@@@@)@B[O#1?C@][EZ
)@@G@@@^@@@@@ASG,T .    ILE      I$F@ASG,A@@@@@@@@@@@@@@@@@@@@@@@@      EH@@@@FA
)@@G@@)@L[W@@@@@@@ILE,//   T$F@ASG,T .    ILE      T$F@ASG,A0    .POS/10ILE,//FB
)@@G@@   I$FEI@@@@)@W[W@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@]@@@@@@@@@@@@@@@@@@@@@@@@FC
)@@G@@@@@@@@0    .POS/40EJ@@@@)@$[W@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EK@@@@)@2@=@@@@@@@)@@@,@0@@@@@@@@@@@@@@@@@FE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EL@@@@)@ @"@0@@@@@)@@@Q@)@@@@@FF
)@@G@@@@@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EM@@@@)@][Y@)@@@@@FG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EN@@@@FH
)@@G@@)@H@,@)@@@@@)@@@&[K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FI
)@@G@@@@@@@@EO@@@@)@^@&[K@@@@@)@E@I[K@@@@@)@H@Q[K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FJ
)@@G@@@@@@@@@@@@@@@@@@@@EP@@@@)@J[Y[K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EQ@@@@)@@@C*)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@4ER@@@@@@^@@F@@J@@Q@@;@[)@A;@@@FM
)@@G@@@@@@@[@@@@J>@@@@@6)@@@@@@@@@@M)@@@@@@@@@@G)@@@@@)@@@@@)@@@@@@@@@@UW$    FN
)@@G@@      IBSIZE      TBSIZE      ERR$        EXTRAW      IOERR       IFILL FO
)@@G@@      WAIT$       IO$         TBSECT      IBSECT      IOBFENT     CSF$  FP
)@@G@@      LAST$D      IBNUM       IOVBUFF     TBNUM       MCORE$      IDBNUMFQ
)@@G@@      IOVFNUM     ASGERR      REMINDX     TF$SQW      @@[@@@@@@@@@TINIT FR
)@@G@@      @@[@@@@@@@[EFRMINX      @@[@@@@@@@[LIINIT       @@[@@@@@@@[URTRANSFS
)@@G@@      @@[@@@@@@@[8TSPACE      @@[@@@@@@@]<TBWRT1      @@[@@@@@@@],TF$SQRFT
)@@G@@      @@[@@@@@@@#KFRSTED      @@[@@@@@@@E>TF$RMR      @@[@@@@@@@E7TF$RMRFU
)@@G@@1     @@[@@@@@@@FNLOCINX      @@[@@@@@@@FQINXBUF      @@[@@@@@@@G<IBIOW FV
)@@G@@      @@[@@@@@@@H9LOCREC      @@[@@@@@@@IETBIOW       @@[@@@@@@@JOSW1   FW
)@@G@@      @@]@@@@@@@@YSW2         @@]@@@@@@@@ZIDBLSW      @@]@@@@@@@@)IBNUMWFX
)@@G@@      @@]@@@@@@@@-IBNUMWO     @@]@@@@@@@@+IBRELW      @@]@@@@@@@@<IWADDRFY
)@@G@@      @@]@@@@@@@@=IBWRSW      @@]@@@@@@@@>ISECT       @@]@@@@@@@@&TDBLSWFZ
)@@G@@      @@]@@@@@@@@$TBNUMW      @@]@@@@@@@@*TBRELW      @@]@@@@@@@@(TWADDRGA
)@@G@@      @@]@@@@@@@@%TBWRSW      @@]@@@@@@@@:TSECT       @@]@@@@@@@@?RECNMCGB
)@@G@@      @@]@@@@@@@@!RECNMW      @@]@@@@@@@@,RECLEN      @@]@@@@@@@@\RECLN1GC
)@@G@@      @@]@@@@@@@@0RECADD      @@]@@@@@@@@1INDEX       @@]@@@@@@@@2RNDIDXGD
)@@G@@      @@]@@@@@@@@3ZEROS       @@]@@@@@@@@4RNDADD      @@]@@@@@@@@5IBUF  GE
)@@G@@      @@A@@@@@@@@@IBUF1A      @@A@@@@@@@@@IBUF2A      @@A@@@@@@@@[IOBF1AGF
)@@G@@      @@A@@@@@@@@]IOBF2A      @@A@@@@@@@@#TBUF        @@A@@@@@@@@^TBUF1AGG
)@@G@@      @@A@@@@@@@@^TBUF2A      @@A@@@@@@@@ TOBF1A      @@A@@@@@@@@ATOBF2AGH
)@@G@@      @@A@@@@@@@@BRETURN      @@A@@@@@@@@CRET1        @@A@@@@@@@@DRET2  GI
)@@G@@      @@A@@@@@@@@ERET3        @@A@@@@@@@@FIBNUMR      @@^@@@@@@@@@IBRELRGJ
)@@G@@      @@^@@@@@@@@[IRADDR      @@^@@@@@@@@]SQRORB      @@^@@@@@@@@#SQRRINGK
)@@G@@      @@^@@@@@@@@^RINDEX      @@^@@@@@@@@ IBRSTA      @@^@@@@@@@@AIBONMRGL
)@@G@@      @@^@@@@@@@@BIBONRR      @@^@@@@@@@@CTBNUMR      @@^@@@@@@@@DTBONRRGM
)@@G@@      @@^@@@@@@@@ETBRELR      @@^@@@@@@@@FTRADDR      @@^@@@@@@@@GTORELRGN
)@@G@@      @@^@@@@@@@@HTBRSTA      @@^@@@@@@@@IRECNMR      @@^@@@@@@@@JCURRECGO
)@@G@@      @@^@@@@@@@@KSECTAD      @@^@@@@@@@@LTBSQWN      @@E@@@@@@@@@INXLOWGP
)@@G@@      @@E@@@@@@@@[INXINT      @@E@@@@@@@@]LOCRCN      @@E@@@@@@@@#LCINX GQ
)@@G@@      @@E@@@@@@@@^LCINXA      @@E@@@@@@@@ IFNDOOVF    @@E@@@@@@@@ARNDSAVGR
)@@G@@      @@E@@@@@@@@BINXPKT      @@E@@@@@@@@CINXREL      @@E@@@@@@@@ETEMPKTGS
)@@G@@      @@E@@@@@@@@FRETN1       @@E@@@@@@@@HIBFENT      @@E@@@@@@@@IIBRTADGT
)@@G@@      @@E@@@@@@@@JIOVFRAD     @@E@@@@@@@@KIUPDPT1     @@E@@@@@@@@LIUPDADGU
)@@G@@      @@E@@@@@@@@MIBFPT1      @@E@@@@@@@@NTBFENT      @@E@@@@@@@@OTBRTADGV
)@@G@@      @@E@@@@@@@@PTBFPT1      @@E@@@@@@@@QLOCSWB      @@E@@@@@@@@RLOCBLKGW
)@@G@@      @@E@@@@@@@@SRMR1SW      @@E@@@@@@@@T@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GX
)@@G@@)@@[##@[#@[#@[#@[#@[#@[#@@@@@@CDG@@A9(@@[L9*)@[J9*@@[HA]0@[GA])@[FA]K@[EGY
)@@G@@A]@@[DAA@@@@)@C[]K)IK0@K0@K0@K0@K^G@@@@@@@A#K@@B/K@@@X:@K@@BA])@@7A#@@@6GZ
)@@G@@A#@@@F'^@@@@O#0@@KAB@@@@)@K[N]@/[@^C^[@@@@C5E@@C/K@@@LOQ%@@@'=@@@@(OE@@@HA
)@@G@@/K@@@T:[@@@H;D@@@SC[E@@@R])@@@AC@@@@)@U[##@@()@-@+-)@-)@-)@)CKD@@@*@@@@@HB
)@@G@@/K@@@\*@@@@8R#@@[HR]K@[E/,0@@@R')@@^[[@@@8AD@@@@)@+[F@ES@CKC) C^4G@]&@@@HC
)@@G@@R')@@CA#@@@GW8@@@@ @@@@GP;K@@[R#K@[J/,0@@@R')@@6/K@@[WAE@@@@)@:[#][L#@@KHD
)@@G@@0@K0@K0@K0@K0@@@@@R]0@[GR])@[FR]K@[ER]@@[DA]0@@9O'0@@[R]0@@9/,0@@@AF@@@@HE
)@@G@@)@3[##@[#@[#@@K0@ES@CKE*KF@@@@/,0@@@/,0@@@R')@@CA]0@[G/KF@@@9!@@[L9?)@[JHF
)@@G@@9?@@[HAG@@@@)@;[]()@-@@-)@-@I-)@CK^*K )@@@/,0@@@/,0@@@C8K@@LC8@@[A/,0@@@HG
)@@G@@C@@@@9/,0@@@C/@@@'AH@@@@)[#[##@[][X#@@K0@K0@K0@K0@@@@@A]0@[GA])@[FA]K@[EHH
)@@G@@A]@@[D/KF@@@R]0@[G'=@@@@R#@@[@AI@@@@)[F[##@[#@[#@[#@[#@[#@@K@@@@@@/K@@@HHI
)@@G@@R#K@@IA#@@@6A#K@@7A#@@@F9(@@[L9*)@[J9*@@[HAJ@@@@)[N[##@[#@[#@[#@[#@[#@[#HJ
)@@G@@@[][)@R#C@@@9(@@[L9*)@[J9*@@[HA]0@[GA])@[FA]K@[EA]@@[DAK@@@@)[V[N@@K[#@@HK
)@@G@@@@@@@@;D@@@S;(@@@AC[D@@@[D@@@#C G@@[/K@@[(*@@@@L+9@@@KC5D@@@/K@@@EAL@@@@HL
)@@G@@)[>@;#@@()@-@+)CKG*S@C@@)@@@C@@@@@@@/K@@[+AF)@@#'^@@@@/K@@@</,0@@@R')@@@HM
)@@G@@[ @@@#AM@@@@)@[[K/S@@JA@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@@]@@@@@A@@@@@@HN
)@@G@@@@@@@@@^@@@]@@@@@]AN@@@@)@F@S@)@6@8@E@@@@@[[@@@@@@@@@@@& @[[@@@@@@@@@@@@HO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AO@@@@)@.@)@*@@@@@)[A@*@@@@@@@@@@@@@@@@@@@HP
)@@G@@OADED DS UNL RECOR@[ @[[@@@@@@@@@@@@@@@@@@AP@@@@)[F@K@@@@@@@@@@@@@@@@@@@HQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AQ@@@@@@@@@@@@@@@@HR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HS
)@@G@@@@^@@]@@A@@U@@'@@^@[E@@@@@@@[N@@@@[?EDIT$       EDITR$      ECHAR$      HT
)@@G@@ECOL$       ESKIP$      ECLR$       EOCTV$      EDECV$      EFD1$       HU
)@@G@@ECOPY$      EPACK$      EDITX$      ECOLN$      EMSGR$      APS$DBP     HV
)@@G@@C3          ERR$        DF$AMW      SCDIRECT    INDBLK      KF$AMC      HW
)@@G@@KF$AMF      DF$AMF      PRINT$      STDBP       DBP$APS     UNL         HX
)@@G@@@@[@@@@@@@@@UNLF        @@[@@@@@@@@7UNL1        @@[@@@@@@@[BUNLS        HY
)@@G@@@@[@@@@@@@[N@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HZ
)@@G@@*[@@@@*SDFF*@]@@@@ .          @A@@@@ .                  ** BLDSMR **    IA
)@@G@@@]@@@@ .          @E@@@@ .        THIS ROUTINE BUILDS AND STORES SYMBOL IB
)@@G@@TABLE       @C@@@@ .             ENTRIES FOR ALL ITEMS WITHIN THE @A@@@@IC
)@@G@@ .             OBJECT RECORD        @]@@@@ .          @E@@@@ .        ONID
)@@G@@ THE INITIAL PASS, IT WILL MCORE A BUFFER       @C@@@@ .             FORIE
)@@G@@ THE ITEM NAME LIST           @]@@@@ .          @^@@@@ .        THE CALLIF
)@@G@@ IS   @A@@@@ .                  LMJ  X11,BLDSMR @]@@@@ .          @A@@@@IG
)@@G@@ .        IT IS CALLED BY BLDC5     @]@@@@ .          @A@@@@PF       FORIH
)@@G@@M  12,6,18        .     @^@@@@         AXR$.          @^@@@@$(6)     LITII
)@@G@@.           @]@@@@$(5).       @C@@@@BLDSMR*.                      . $H BIJ
)@@G@@LDSMR       @E@@@@         S,H2  X11,RETURN     . $P SAVE RETURN ADDR   IK
)@@G@@      @A@@@@         L     A0,X7          .     @G@@@@         TNZ   A0 IL
)@@G@@            . $T IS THIS RECORD FROM 2ND SCHEMA       @E@@@@         SZ IM
)@@G@@   CURREC         . $P INITIALIZE SYM TBL ADDR  @G@@@@         TZ    ITBIN
)@@G@@FLG         . $T HAS ITEM TABLE BUFFER BEEN GOTTEN ?  @C@@@@         J  IO
)@@G@@   BRENT1         . $A NO YES,BRENT1@E@@@@         L     A0,LAST$D      IP
)@@G@@. $P GET NEXT AVAIL CORE ADDR @A@@@@         AU,U  A0,1           .     IQ
)@@G@@@G@@@@         S     A1,ITABAD      . $P SAVE START ADDR OF ITEM TABLE  IR
)@@G@@      @A@@@@         A,U   A0,1792        .     @E@@@@         S     A0,IS
)@@G@@LAST$D      . $P SAVE LAST ADDR USED      @C@@@@         ER    MCORE$   IT
)@@G@@      . $P MCORE BUFFER @G@@@@         L,U   A0,1           . $P SET ITEIU
)@@G@@M-BUFFER-GOTTEN FLAG          @A@@@@         S     A0,ITBFLG      .     IV
)@@G@@@E@@@@BRENT1   S     X7,SFIND       . $P SET FOR PROPER SCHEMA    @A@@@@IW
)@@G@@         L     A0,RTABAD      .     @E@@@@         L,T3  A1,1,A0        IX
)@@G@@. $P GET RECORD CODE          @A@@@@         LSSL  A1,24          .     IY
)@@G@@@A@@@@         SSL   A1,24          .     @A@@@@         S     A1,RECCDEIZ
)@@G@@      .     @G@@@@         LMJ   X11,FITBRC     . $W FITBRC - GET ITEM NJA
)@@G@@ME TBL FROM SCHEMA@A@@@@         +     RECCDE         .     @A@@@@ITABADJB
)@@G@@   +     0              .     @A@@@@         +     SFIND          .     JC
)@@G@@@A@@@@         +     $,('BLDSMR')   .     @G@@@@         L     A7,ITABADJD
)@@G@@      . $P SET PTR TO FIRST IT NME TBL ENTRY    @A@@@@         A,U   A7,JE
)@@G@@3           .     @E@@@@         L     X6,RTABAD      . $P SET PTR TO RDJF
)@@G@@T           @E@@@@         L,T3  A0,3,X6        . $P GET FIRST DATA WORDJG
)@@G@@ DISP @A@@@@         S     A0,BRFDW       .     @E@@@@         A,H2  A0,JH
)@@G@@6,X6        . $P GET TOTAL RECORD LENGTH  @A@@@@         S     A0,RECLENJI
)@@G@@,X7   .     @G@@@@         L     A0,X7          . $P SET MODE FOR ALL ITJJ
)@@G@@EMS OF RECORD     @A@@@@         A,U   A0,1           .     @A@@@@      JK
)@@G@@   S     A0,MODE        .     @G@@@@         L     A0,C8SEQN      . $P SJL
)@@G@@ET SEQ-NUM FOR ALL ITEMS OF RECORD  @A@@@@         S     A0,SEQNUM      JM
)@@G@@.     @G@@@@         SZ    A10            . $P SET ITEM ADDR CNTR TO ZERJN
)@@G@@O           @G@@@@         L,T2  A6,5,X6        . $P GET # OF ITEMS FOR JO
)@@G@@LOOP CNTR         @A@@@@         AN,U  A6,1           .     @E@@@@      JP
)@@G@@   L     X5,X6          . $P SAVE RDT START ADDR      @G@@@@         A,TJQ
)@@G@@1  X6,5,X6        . $P SET PTR TO 1ST RDT ITEM LIST ENTRY   @G@@@@      JR
)@@G@@   SZ    BROCFL         . $P INITIALLY CLEAR OCCURS FLAG          @A@@@@JS
)@@G@@BRLP1    L     A1,A7          .     @E@@@@         SZ    FILFLG         JT
)@@G@@. $P CLEAR FILLER FLAG        @E@@@@         SZ    A0             . $P SJU
)@@G@@ET FOR 0 IT AD TBL ENTRY@E@@@@         TNZ,S3 1,A1           . $T IS ITEJV
)@@G@@M FILLER          @C@@@@         J     BRLP12         . $A YES NO,BRLP12JW
)@@G@@@E@@@@         L,U   A0,1           . $P SET FILLER FLAG          @A@@@@JX
)@@G@@         S     A0,FILFLG      .     @C@@@@         J     BRLP17         JY
)@@G@@. $J BRLP17       @A@@@@BRLP12   E$DIT STPKT          .     @G@@@@      JZ
)@@G@@   E$COPY 30,BLANKS     . $P INITIALIZE NAME BUFFER TO BLANKS     @A@@@@KA
)@@G@@         E$COL 0              .     @A@@@@         L     A0,A7          KB
)@@G@@.     @G@@@@         L,S4  A1,0,A0        . $P GET NUMBER OF CHARACTERS KC
)@@G@@IN NAME     @G@@@@         TNZ,S2 0,A0          . $T DOES ITEM HAVE A DEKD
)@@G@@SCRIPTION ?       @E@@@@         AN,U  A1,1           . $P SUBTRACT 1 FOKE
)@@G@@R THE PERIOD@A@@@@         A,U   A0,2           .     @E@@@@         LMJKF
)@@G@@   X11,ECOPY$     . $P COPY ITEM NAME           @A@@@@         E$DITX   KG
)@@G@@            .     @G@@@@BRLP17   SZ    A3             . $P INITIALIZE TYKH
)@@G@@PE INCREMENT TO ZERO    @E@@@@         TZ    BROCFL         . $T IS OCCUKI
)@@G@@RS FLAG SET ?     @C@@@@         J     BROSIT         . $A NO YES,BROSITKJ
)@@G@@@E@@@@BRENT15  L     A0,ILENGTH     . $P GET ITEM LENGTH          @A@@@@KK
)@@G@@         S     A0,LENGTH      .     @G@@@@         L     A0,IRELPOS     KL
)@@G@@. $P GET REL WORD DISP IN RECORD          @A@@@@         A     A0,BRFDW KM
)@@G@@      .     @A@@@@         S     A0,RELWRD      .     @E@@@@         L  KN
)@@G@@   A0,IFCHAR      . $P GET CHARACTER OFF-SET    @A@@@@         AND,U A0,KO
)@@G@@7           .     @A@@@@         S     A1,OFFSET      .     @E@@@@BRENT2KP
)@@G@@   L     A0,IUSAGE      . $P GET ITEM USAGE CODE      @A@@@@         SZ KQ
)@@G@@   A1             .     @E@@@@         SZ    A4             . $P RESET GKR
)@@G@@ROUP ITEM FLAG    @A@@@@         L,U   A2,2           .     @G@@@@      KS
)@@G@@   TNW   A1,A0          . $T IS USAGE DISPLAY OR COMP ?           @C@@@@KT
)@@G@@         J     BRENT3         . $A NO YES,BRENT3@G@@@@         TNZ   A0 KU
)@@G@@            . $T IS THIS AN ELEMENTARY ITEM           @E@@@@         L,UKV
)@@G@@   A4,1           . $P SET GROUP ITEM FLAG      @E@@@@         L,U   A1,KW
)@@G@@3           . $P SET TYPE TO ITEM - PIC X @A@@@@         L     A0,ILEVELKX
)@@G@@      .     @E@@@@         TE,U  A0,1           . $T IS ITEM RECORD NAMEKY
)@@G@@      @C@@@@         J     BRENT4         . $A YES NO,BRENT4@E@@@@      KZ
)@@G@@   L,U   A1,2           . $P SET TYPE TO RECORD       @E@@@@         SZ LA
)@@G@@   A4             . $P RESET GROUP ITEM FLAG    @C@@@@         J     BRELB
)@@G@@NT4         . $J BRENT4       @E@@@@BRENT3   L,U   A1,5           . $P SLC
)@@G@@ET TYPE TO COMP         @E@@@@         TNE,U A0,1           . $T IS USAGLD
)@@G@@E COMP ?          @C@@@@         J     BRENT4         . $A NO YES,BRENT4LE
)@@G@@@E@@@@         L     A0,IFORMAT     . $P GET FORMAT CODE          @E@@@@LF
)@@G@@         L,U   A1,4           . $P SET TYPE TO PIC 9        @E@@@@      LG
)@@G@@   TG,U  A0,3           . $T IS TYPE NUMERIC ?        @C@@@@         J  LH
)@@G@@   BRENT4         . $A NO YES,BRENT4@E@@@@         L,U   A1,6           LI
)@@G@@. $P SET TYPE TO PIC A        @E@@@@         TE,U  A0,1           . $T ILJ
)@@G@@S TYPE ALPHABETIC ?     @E@@@@         L,U   A1,3           . $P SET TYPLK
)@@G@@E TO PIC X        @G@@@@BRENT4   TZ    IOCCURS        . $T DOES THIS ITELL
)@@G@@M CONTAIN AN OCCURS ?   @C@@@@         J     BROCIT         . $A NO YES,LM
)@@G@@BROCIT@E@@@@         A     A1,A3          . $P INCREMENT TYPE           LN
)@@G@@@E@@@@         S     A1,TYPE        . $P STORE TYPE IN ENTRY      @E@@@@LO
)@@G@@         S     A4,GRPIND      . $P STORE GROUP ITEM FLAG    @E@@@@      LP
)@@G@@   TZ    FILFLG         . $T IS FILLER FLAG SET       @C@@@@         J  LQ
)@@G@@   BRENT5         . $A NO YES,BRENT5@A@@@@         L,U   X10,STENT      LR
)@@G@@.     @G@@@@         LMJ   X11,SYM$TW     . $W SYM$TW - PUT ENTRY INTO SLS
)@@G@@YM TBL      @E@@@@         J     $+2            . $T IS THIS NOT FILLER LT
)@@G@@      @G@@@@BRENT5   SZ    A0             . $P SET TO PUT 0 IN IT TBL ADLU
)@@G@@DR          @E@@@@         L     A1,ILEVEL      . $P GET LEVEL NUMBER   LV
)@@G@@      @E@@@@         TE,U  A1,1           . $T IS THIS RECORD NAME      LW
)@@G@@@C@@@@         J     BRELP1         . $A YES NO,BRELP1@G@@@@         S  LX
)@@G@@   A0,RECADR      . $P SAVE SYM TBL ADDR OF REC NME         @G@@@@      LY
)@@G@@   TNZ   SFIND          . $T IS THIS RECORD FROM 2ND SCHEMA       @E@@@@LZ
)@@G@@         S     A0,CURREC      . $P SAVE SYM TBL ADDR        @C@@@@      MA
)@@G@@   J     BRELP2         . $J BRELP2       @E@@@@BRELP1   L     A1,IATAD,MB
)@@G@@X7    . $P GET ITEM ADDR TBL ADDR   @E@@@@         A,U   A10,1          MC
)@@G@@. $P INCREMENT IT AD COUNT    @A@@@@         A     A1,A10         .     MD
)@@G@@@E@@@@         S     A0,0,A1        . $P SAVE ITEM SYM TBL ADDR   @G@@@@ME
)@@G@@BRELP2   A,U   X6,2           . $P SET PTR TO NEXT RDT ITEM LIST ENTRY  MF
)@@G@@@G@@@@         L     A0,A7          . $P SET PTR TO NEXT IT NME TBL ENTRMG
)@@G@@Y     @A@@@@         A,S3  A7,0,A0        .     @E@@@@         JGD   A6,MH
)@@G@@BRLP1       . $T MORE ITEMS IN RECORD ?   @C@@@@                        MI
)@@G@@      . $A NO YES,BRLP1 @E@@@@         L     A1,IATAD,X7    . $P SAVE ITMJ
)@@G@@ AD TBL COUNT     @A@@@@         S     A10,0,A1       .     @E@@@@      MK
)@@G@@   J     *RETURN        . $E RETURN TO BLDC5          @]@@@@ .          ML
)@@G@@@G@@@@BROCIT   TNZ   BROCFL         . $T IS THIS PART OF HIGHER LEVEL OCMM
)@@G@@CURS  @C@@@@         J     BROC2          . $A YES NO,BROC2 @A@@@@      MN
)@@G@@   L,U   A1,021         .     @G@@@@         S     A1,TYPE        . $P SMO
)@@G@@ET TYPE TO SUB-OCCURS PIC X         @G@@@@         SZ    GRPIND         MP
)@@G@@ . $P RESET GROUP ITEM INDICATOR          @E@@@@         L     A0,IOCCURMQ
)@@G@@S     . $P GET OCCURS CLAUSE ADDR   @A@@@@         A     A0,X5          MR
)@@G@@.     @G@@@@         L     A1,ILENGTH     . $P GET LENGTH OF SINGLE OCCUMS
)@@G@@RRENCE      @E@@@@         MSI,H2 A1,0,A0       . $P MULTIPLY BY HIGH # MT
)@@G@@OCCURS@G@@@@         S     A1,LENGTH      . $P PUT PRODUCT AS LENGTH IN MU
)@@G@@SYM TBL     @A@@@@         L,U   X10,STENT      .     @G@@@@         LMJMV
)@@G@@   X11,SYM$TW     . $W SYM$TW - PUT ENTRY INTO SYM TBL      @A@@@@      MW
)@@G@@   L,U   A1,1           .     @E@@@@         S     A1,BRO2FL      . $P SMX
)@@G@@ET 2ND OCCURS FLAG      @G@@@@         L     A1,ILEVEL      . $P SAVE LEMY
)@@G@@VEL # OF 2ND OCCURS           @A@@@@         S     A1,BRO2LV      .     MZ
)@@G@@@C@@@@         J     BRELP1         . $J BRELP1       @E@@@@BROC2    A,UNA
)@@G@@   A1,7           . $P SET TYPE TO OCCURS TYPE  @E@@@@         S     A1,NB
)@@G@@TYPE        . $P STORE TYPE IN ENTRY      @E@@@@         S     A4,GRPINDNC
)@@G@@      . $P STORE GROUP ITEM FLAG    @E@@@@         L     A0,IOCCURS     ND
)@@G@@. $P GET OCCURS CLAUSE ADDR   @A@@@@         A     A0,X5          .     NE
)@@G@@@E@@@@         L,H1  A1,0,A0        . $P STORE OCCURS LOW VALUE   @A@@@@NF
)@@G@@         S     A1,OCLVAL      .     @E@@@@         L,H2  A1,0,A0        NG
)@@G@@. $P STORE OCCURS HIGH VALUE  @A@@@@         S     A1,OCHVAL      .     NH
)@@G@@@A@@@@         L,U   X10,STENT      .     @G@@@@         LMJ   X11,SYM$TNI
)@@G@@W     . $W SYM$TW - PUT ENTRY INTO SYM TBL      @A@@@@         SZ    A3 NJ
)@@G@@            .     @A@@@@         L     A1,OCLVAL      .     @E@@@@      NK
)@@G@@   TNE   A1,OCHVAL      . $T IS THIS VARIABLE OCCURS ?@C@@@@         J  NL
)@@G@@   BROC3          . $A YES NO,BROC3 @E@@@@         L     A3,RECADR      NM
)@@G@@. $P GET ADDR OF RECORD ENTRY @A@@@@         L     A1,IOCCURS     .     NN
)@@G@@@A@@@@         A     A1,X5          .     @G@@@@         L,T3  A1,1,A1  NO
)@@G@@      . $P GET DEPENDING ON ITEM CODE           @A@@@@         AN,U  A1,NP
)@@G@@1           .     @A@@@@         A     A1,IATAD,X7    .     @G@@@@      NQ
)@@G@@   L     A1,0,A1        . $P GET DEPENDING ON ITEM ENTRY ADDR     @A@@@@NR
)@@G@@         L     X9,A1          .     @G@@@@         TLE,H2 A1,C14        NS
)@@G@@. $T WAS D-O ITM STORED IN C15 ?          @C@@@@         J     BRDO1    NT
)@@G@@      . $A NO YES,BRDO1 @E@@@@         ANU,H2 A1,C14        . $P GET RELNU
)@@G@@ATIVE ADDR IN C14 @C@@@@         L,U   A1,1           . $P SET BASE FLAGNV
)@@G@@@A@@@@         LSSL  A2,19          .     @A@@@@         DSL   A1,19    NW
)@@G@@      .     @G@@@@         S     A2,RDOLINK     . $P SAVE D-O ITM ADDR INX
)@@G@@N RECD ENTRY      @C@@@@         J     BRDO2          . $J BRDO2        NY
)@@G@@@E@@@@BRDO1    AN,H2 A1,C15         . $P GET RELATIVE ADDR IN C15 @G@@@@NZ
)@@G@@         S     A1,RDOLINK     . $P SAVE D-O ITM ADDR IN RECD ENTRY      OA
)@@G@@@A@@@@BRDO2    L     A1,A3          .     @G@@@@         TLE,H2 A1,C14  OB
)@@G@@      . $T WAS RECD ENTRY STORED IN C15 ?       @C@@@@         J     BRDOC
)@@G@@O3          . $A NO YES,BRDO3 @E@@@@         ANU,H2 A1,C14        . $P GOD
)@@G@@ET RELATVIE ADDR IN C14 @C@@@@         L,U   A1,1           . $P SET BASOE
)@@G@@E FLAG@A@@@@         LSSL  A2,19          .     @A@@@@         DSL   A1,OF
)@@G@@19          .     @G@@@@         S     A2,RECLINK     . $P SAVE RECD ADDOG
)@@G@@R IN D-O ITM ENTRY      @C@@@@         J     BROC3          . $J BROC3  OH
)@@G@@      @E@@@@BRDO3    AN,H2 A1,C15         . $P GET RELATIVE ADDR IN C15 OI
)@@G@@@G@@@@         S     A1,RECLINK     . $P SAVE RECD ADDR IN D-O ITM ENTRYOJ
)@@G@@      @E@@@@BROC3    SZ    STENT+7        . $P CLEAR OCCURS LIMITS WORD OK
)@@G@@@A@@@@         L,U   A1,1           .     @E@@@@         S     A1,BROCFLOL
)@@G@@      . $P SET OCCURS FLAG          @E@@@@         S     A1,RELCHAR     OM
)@@G@@. $P SET REL CHAR TO 1        @G@@@@         L     A1,ILEVEL      . $P SON
)@@G@@AVE LEVEL NUMBER OF OCCURS ITEM     @A@@@@         S     A1,BROLVL      OO
)@@G@@.     @A@@@@         S     A1,BRLLVL      .     @A@@@@         L     A1,OP
)@@G@@A0          .     @G@@@@         TLE,H2 A1,C14         . $T WAS OCCURS EOQ
)@@G@@NTRY STORED IN C15 ?    @C@@@@         J     BRIC15         . $A NO YES,OR
)@@G@@BRIC15@E@@@@         ANU,H2 A1,C14        . $P GET RELATIVE ADDR IN C14 OS
)@@G@@@C@@@@         L,U   A1,1           . $P SET BASE FLAG@A@@@@         LSSOT
)@@G@@L  A2,19          .     @A@@@@         DSL   A1,19          .     @E@@@@OU
)@@G@@         S     A2,OCCLINK     . $P SAVE REL ADDR IN OCC-LINK@G@@@@      OV
)@@G@@   TZ    A3             . $T IS THIS FIXED LENGTH OCCURS          @G@@@@OW
)@@G@@         S     A2,ROCLINK     . $P SAVE OCC ITM ADDR IN RECD ENTRY      OX
)@@G@@@C@@@@         J     BRELP1         . $J BRELP1       @E@@@@BRIC15   AN,OY
)@@G@@H2 A1,C15         . $P GET RELATIVE ADDR IN C15 @E@@@@         S     A1,OZ
)@@G@@OCCLINK     . $P SAVE IT AS OCC-LINK      @G@@@@         TZ    A3       PA
)@@G@@      . $T IS THIS FIXED LENGTH OCCURS          @G@@@@         S     A1,PB
)@@G@@ROCLINK     . $P SAVE OCC ITM ADDR IN RECD ENTRY      @C@@@@         J  PC
)@@G@@   BRELP1         . $J BRELP1       @]@@@@ .          @E@@@@BROSIT   TNZPD
)@@G@@   BRO2FL         . $T IS 2ND OCCURS FLAG SET   @C@@@@         J     BROPE
)@@G@@S2          . $A YES NO,BROS2 @E@@@@         L     A0,BRO2LV      . $P GPF
)@@G@@ET ITEM LEVEL NUMBER    @G@@@@         TLE   A0,ILEVEL      . $T IS ITEMPG
)@@G@@ PART OF 2ND OCCURS           @C@@@@         J     BRELP2         . $A NPH
)@@G@@O YES,BRELP2@E@@@@         SZ    BRO2FL         . $P RESET 2ND OCCURS FLPI
)@@G@@AG    @E@@@@BROS2    L     A0,BROLVL      . $P GET ITEM LEVEL NUM       PJ
)@@G@@@E@@@@         TLE   A0,ILEVEL      . $T ITEM PART OF OCCURS ?    @C@@@@PK
)@@G@@         J     BROSI2         . $A NO YES,BROSI2@E@@@@         L     A0,PL
)@@G@@C8SEQN      . $P RESTORE SEQUENCE NUMBER  @A@@@@         S     A0,SEQNUMPM
)@@G@@      .     @E@@@@         SZ    BROCFL         . $P RESET OCCURS FLAG  PN
)@@G@@      @C@@@@         J     BRENT15        . $J BRENT15      @E@@@@BROSI2PO
)@@G@@   L,U   A3,14          . $P SET OCCURS TYPE INCREMENT@C@@@@         L  PP
)@@G@@   A0,RELCHAR     . $P GET REL CHAR @A@@@[         LSSL  A0,24          PQ
)@@G@@.     @A@@@[         SSL   A0,24          .     @A@@@@         L     A1,PR
)@@G@@BRLLVL      .     @G@@@@         TG    A1,ILEVEL      . $T IS THIS ITEM PS
)@@G@@PART OF LAST ITEM ?     @G@@@@         A     A0,LENGTH      . $P ADD LASPT
)@@G@@T LENGTH TO REL CHAR          @C@@@@         S     A0,RELCHAR     . $P SPU
)@@G@@AVE REL CHAR@E@@@@         L     A0,ILENGTH     . $P GET ITEM LENGTH    PV
)@@G@@      @A@@@@         S     A0,LENGTH      .     @G@@@@         L     A0,PW
)@@G@@ILEVEL      . $P SAVE ITEM LEVEL AS LAST LEVEL        @A@@@@         S  PX
)@@G@@   A0,BRLLVL      .     @C@@@@         J     BRENT2         . $J BRENT2 PY
)@@G@@      @]@@@@ .          @]@@@@$(6).       @A@@@@RETURN   +     0        PZ
)@@G@@      .     @A@@@@SFIND    +     0              .     @A@@@@ITBFLG   +  QA
)@@G@@   0              .     @A@@@@RECCDE   +     0              .     @A@@@@QB
)@@G@@RECLEN   +     0              .     @A@@@@         +     0              QC
)@@G@@.     @A@@@@BRFDW    +     0              .     @A@@@@BROCFL   +     0  QD
)@@G@@            .     @A@@@@BRO2FL   +     0              .     @A@@@@BROLVLQE
)@@G@@   +     0              .     @A@@@@BRO2LV   +     0              .     QF
)@@G@@@A@@@@BRLLVL   +     0              .     @A@@@@CURREC*  +     0        QG
)@@G@@      .     @A@@@@RECADR   +     0              .     @A@@@@FILFLG   +  QH
)@@G@@   0              .     @]@@@@BLANKS.     @A@@@@         DO  5  ,   '   QI
)@@G@@   '  .     @A@@@@STPKT    E$PKT 5,STENT        .     @A@@@@STENT    RESQJ
)@@G@@   7              .     @A@@@@         +     0              .     @A@@@@QK
)@@G@@IATAD    +     ITADT1         .     @A@@@@         +     ITADT2         QL
)@@G@@.     @A@@@@ITADT1   RES   500            .     @A@@@@ITADT2   RES   500QM
)@@G@@            .     @A@@@@RELWRD   EQUF  STENT+5,,T1    .     @A@@@@MODE  QN
)@@G@@   EQUF  STENT+5,,S3    .     @A@@@@TYPE     EQUF  STENT+5,,S4    .     QO
)@@G@@@A@@@@LENGTH   EQUF  STENT+5,,T3    .     @A@@@@SEQNUM   EQUF  STENT+6,,QP
)@@G@@T1    .     @A@@@@OFFSET   EQUF  STENT+6,,S3    .     @A@@@@GRPIND   EQUQQ
)@@G@@F  STENT+7,,S4    .     @A@@@@RELCHAR  EQUF  STENT+5,,T1    .     @A@@@@QR
)@@G@@OCCLINK  EQUF  STENT+6,,H1    .     @A@@@@OCLVAL   EQUF  STENT+7,,T1    QS
)@@G@@.     @A@@@@OCHVAL   EQUF  STENT+7,,T3    .     @A@@@@ROCLINK  EQUF  2,AQT
)@@G@@3,H2        .     @A@@@@RDOLINK  EQUF  2,A3,H1        .     @A@@@@RECLINQU
)@@G@@K  EQUF  2,X9,H1        .     @A@@@@IUSAGE   EQUF  0,X6,S1        .     QV
)@@G@@@A@@@@ILEVEL   EQUF  0,X6,S2        .     @A@@@@IFORMAT  EQUF  0,X6,S3  QW
)@@G@@      .     @A@@@@ILENGTH  EQUF  0,X6,H2        .     @A@@@@IOCCURS  EQUQX
)@@G@@F  1,X6,T1        .     @A@@@@IFCHAR   EQUF  1,X6,S3        .     @A@@@@QY
)@@G@@IRELPOS  EQUF  1,X6,H2        .     @]@@@@ .          @A@@@@ .          QZ
)@@G@@        ** BLDSMS **    @]@@@@ .          @E@@@@ .        THIS ROUTINE BRA
)@@G@@UILDS AND STORES A SYMBOL TABLE     @E@@@@ .             ENTRY FOR A SETRB
)@@G@@ IDENTIFIED AS PART OF        @A@@@@ .             THE REORGANIZATION   RC
)@@G@@@]@@@@ .          @^@@@@ .        THE CALL IS   @A@@@@ .                RD
)@@G@@  LMJ  X11,BLDSMS @]@@@@ .          @A@@@@ .        IT IS CALLED BY BLDCRE
)@@G@@7     @]@@@@ .          @^@@@@$(6)     LIT.           @]@@@@$(5).       RF
)@@G@@@C@@@@BLDSMS*.                      . $H BLDSMS       @E@@@@         S,HRG
)@@G@@2  X11,RETURN     . $P SAVE RETURN ADDR         @A@@@@         E$DIT STPRH
)@@G@@KT          .     @E@@@@         L     A0,STABAD      . $P GET ADDR OF SRI
)@@G@@DT IN CORE  @E@@@@         A,U   A0,3           . $P SET PTR TO NAME    RJ
)@@G@@      @A@@@@         L,U   A1,30          .     @C@@@@         LMJ   X11RK
)@@G@@,ECOPY$     . $P GET SET NAME @A@@@@         E$DITX               .     RL
)@@G@@@G@@@@         SZ    STENT+5        . $P INITIALIZE LAST TWO WORDS OF ENRM
)@@G@@TRY   @A@@@@         SZ    STENT+6        .     @C@@@@         L     A0,RN
)@@G@@X7          . $P SET MODE     @A@@@@         A,U   A0,1           .     RO
)@@G@@@A@@@@         S     A0,MODE        .     @E@@@@         L,U   A0,1     RP
)@@G@@      . $P SET TYPE TO SET NAME     @A@@@@         S     A0,TYPE        RQ
)@@G@@.     @G@@@@         L     A0,STABAD      . $P PUT SET SODE IN SYM TBL ERR
)@@G@@NTRY        @A@@@@         L,T3  A0,1,A0        .     @A@@@@         S  RS
)@@G@@   A0,SEQNUM      .     @A@@@@         L,U   X10,STENT      .     @G@@@@RT
)@@G@@         LMJ   X11,SYM$TW     . $W SYM$TW - PUT ENTRY INTO SYM TBL      RU
)@@G@@@E@@@@         J     *RETURN        . $E RETURN TO BLDC7          @]@@@@RV
)@@G@@ .          @A@@@@ .                  ** ARTDEF **    @]@@@@ .          RW
)@@G@@@E@@@@ .        THIS ROUTINE BUILDS THE TRANSFORMATION RULES,     @A@@@@RX
)@@G@@ .             IF ANY ARE NEEDED    @]@@@@ .          @E@@@@ .        ITRY
)@@G@@ IS CALLED BY BLDC1 EACH TIME A RECORD          @E@@@@ .             COMRZ
)@@G@@MAND IS INPUT, AND BUILDS THE RULES       @A@@@@ .             IN TABLE SA
)@@G@@C17         @]@@@@ .          @E@@@@ .        IT FIRST CHECKS TO SEE IF SB
)@@G@@THE RECORD OCCURS       @E@@@@ .             IN BOTH SCHEMAS (TWO SCHEMASC
)@@G@@S ARE NECESSARY)  @]@@@@ .          @E@@@@ .             IF IT DOES, THESD
)@@G@@N A COMPARISON IS MADE ON     @E@@@@ .                  THE SET POINTER SE
)@@G@@PLACEMENT - IF IT IS    @G@@@@ .                  DIFFERENT, A TRANSFORMSF
)@@G@@ATION IS CALLED FOR           @]@@@@ .          @G@@@@ .             AFTSG
)@@G@@ER CHECKING THE POINTERS, THE ITEMS ARE CHECKED       @G@@@@ .          SH
)@@G@@        BY SCANNING THE TWO ITEM ADDR LISTS CREATED         @G@@@@ .    SI
)@@G@@              BY BLDSMR - FOR EACH NON-OCCURS ITEM IN THE         @G@@@@SJ
)@@G@@ .                  OLD LIST (OCCURS ITEMS ARE HANDLED DIFFERENTLY),    SK
)@@G@@@G@@@@ .                  THE CORRESPONDING ITEM IS SCRATCHED FROM THE  SL
)@@G@@      @G@@@@ .                  NEW ITEM LIST - FOR EACH ELEMENTARY NEW SM
)@@G@@ITEM        @G@@@@ .                  SO FOUND, A RULE IS CREATED IF NEESN
)@@G@@DED - AFTER       @G@@@@ .                  ALL OLD ITEMS HAVE BEEN SO CSO
)@@G@@HECKED, ANY REMAINING   @G@@@@ .                  ELEMENTARY ITEMS IN THSP
)@@G@@E NEW LIST ARE INITIALIZED    @]@@@@ .          @G@@@@ .                SQ
)@@G@@  OCCURS ITEMS ARE CONSIDERED BY COMPARING THE ENTIRE @G@@@@ .          SR
)@@G@@             OCCURS GROUP (BOTH OLD AND NEW) TO SEE IF      @G@@@@ .    SS
)@@G@@                   THERE ARE ANY DIFFERENCES IN THE GROUPS -      @G@@@@ST
)@@G@@ .                       IF SO, A REPEATED RULE ENTRY IS CREATED        SU
)@@G@@@C@@@@ .                       FOR THE ENTIRE GROUP   @]@@@@ .          SV
)@@G@@@^@@@@ .        THE CALL IS   @A@@@@ .                  LMJ  X11,ARTDEF SW
)@@G@@@]@@@@ .          @^@@@@$(6)     LIT.           @]@@@@$(5).       @]@@@@SX
)@@G@@ .          @C@@@@ .        SEE IF BOTH OLD AND NEW RECORD EXIST  @]@@@@SY
)@@G@@ .          @C@@@@ARTDEF*.                      . $H ARTDEF       @E@@@@SZ
)@@G@@         S,H2  X11,RETURN     . $P SAVE RETURN ADDR         @G@@@@      TA
)@@G@@   TNZ   CURREC         . $T WAS RECORD FOUND IN 1ST SCHEMA ?     @C@@@@TB
)@@G@@         J     *RETURN        . $E RETURN       @G@@@@         LXM   X1,TC
)@@G@@CURREC      . $P GET SYM TBL ADDR OF RECORD ENTRY     @G@@@@         TNZTD
)@@G@@,H2 1,X1          . $T IS THERE A NEW ENTRY FOR REC NAME ?  @C@@@@      TE
)@@G@@   J     *RETURN        . $E RETURN       @G@@@@         L,H2  A11,1,X1 TF
)@@G@@      . $P GET RELATIVE LINK TO NEXT ENTRY      @G@@@@         SLJ   LINTG
)@@G@@KUP         . $W LINKUP - GET NEW ENTRY ADDR          @E@@@@         L,STH
)@@G@@4  A0,0,X2        . $P GET NEW ENTRY TYPE       @G@@@@         TE,U  A0,TI
)@@G@@2           . $T IS NEW ENTRY A RECORD NAME ?         @C@@@@         J  TJ
)@@G@@   *RETURN        . $E RETURN       @G@@@@         TNZ   C17FLG         TK
)@@G@@. $T HAS C17 BEEN INITIALIZED ?           @E@@@@         SLJ   C17INT   TL
)@@G@@      . $W C17INT - INITIALIZE C17  @]@@@@ .          @E@@@@ .        SETM
)@@G@@T UP TRANSFORMATION RULE TABLE ENTRY HEADER     @]@@@@ .          @G@@@@TN
)@@G@@         LXM   X6,THISAD      . $P SET INDEX TO NEXT AVAIL RULE TBL ENT TO
)@@G@@@A@@@@         LXI,U X6,1           .     @E@@@@         L,T3  A1,RECCDETP
)@@G@@      . $P GET RECORD CODE          @A@@@@         S,T1  A1,0,X6        TQ
)@@G@@.     @E@@@@         SZ,T3 0,*X6          . $P INITIALIZE LINK TO 0     TR
)@@G@@@E@@@@         SZ    XFLAG          . $P RESET TRANSFORM FLAG     @E@@@@TS
)@@G@@         L,T3  A0,RECLEN      . $P GET OLD RECORD LENGTH    @A@@@@      TT
)@@G@@   S,T1  A0,0,X6        .     @E@@@@         L,T3  A0,RECLEN+1    . $P GTU
)@@G@@ET NEW RECORD LENGTH    @A@@@@         S,T2  A0,0,X6        .     @E@]@@TV
)@@G@@         SZ,T3 0,*X6          . $P ZERO COMBINED LENGTH     @G@@@]      TW
)@@G@@   L     A0,LOCMDE+1    . $P GET LOCATION MODE OF RECORD          @E@@@]TX
)@@G@@         L,U   A2,010         . $P SET MODE BITS TO NON-CALC@E@#@]      TY
)@@G@@   TLE,U A0,2           . $T IS RECORD LOC MODE CALC  @G@@@#         TLETZ
)@@G@@,U A0,2           . $T IS RECORD LOC MODE NON-CALC          @A@@@]      UA
)@@G@@   J     $+3            .     @A@@@]         TLE,U A0,4           .     UB
)@@G@@@E@@@]         L,U   A2,050         . $P SET MODE BITS TO CALC    @G@@@#UC
)@@G@@         S,T3  A2,0,*X6       . $P STORE MODE BITS IN TBL ENTRY         UD
)@@G@@@]@@@@ .          @C@@@@ .        COMPARE OLD AND NEW SET LINKAGES      UE
)@@G@@@C@@@@ .             - SET XFLAG IF ANY DIFFERENCES   @]@@@@ .          UF
)@@G@@@G@@@@         LXM   X8,C1          . $P SET INDICES TO C1 AND C9 TABLESUG
)@@G@@      @A@@@@         LXM   X9,C9          .     @G@@@@         L,U   A0,UH
)@@G@@NUMOAP      . NOTE THAT C1 AND C9 ARE IN UNPACKED FORM@A@@@@         A,UUI
)@@G@@   A0,39          .     @A@@@@         LXI   X8,A0          .     @A@@@@UJ
)@@G@@         LXI   X9,A0          .     @E@@@@         L,H1  R1,C1          UK
)@@G@@. $P GET C1 ENTRY COUNT       @G@@@@         SE,T1 A1,0,*X8       . $P SUL
)@@G@@EARCH C1 FOR ENTRY FOR THIS RECORD  @A@@@@         J     ARTERR         UM
)@@G@@.     @E@@@@         AN    X8,A0          . $P SET INDEX TO C1 ENTRY    UN
)@@G@@@E@@@@         L,H1  R1,C9          . $P GET C9 ENTRY COUNT       @G@@@@UO
)@@G@@         SE,T1 A1,0,*X9       . $P SEARCH C9 FOR ENTRY FOR THIS RECORD  UP
)@@G@@@A@@@@         J     ARTERR         .     @E@@@@         AN    X9,A0    UQ
)@@G@@      . $P SET INDEX TO C9 ENTRY    @E@@@@         L,S4  A7,0,X8        UR
)@@G@@. $P GET OLD O/A COUNT        @E@@@@         TE,S4 A7,0,X9        . $T IUS
)@@G@@S NEW O/A COUNT EQUAL ? @C@@@@         J     ART4           . $A YES NO,UT
)@@G@@ART4  @G@@@@         JGD   A7,$+2         . $T ARE THERE ANY O/A ENTRIESUU
)@@G@@ ?          @C@@@@         J     ART2           . $A YES NO,ART2  @E@@@@UV
)@@G@@         LXM   A0,X8          . $P SET PTR TO OLD O/A LIST  @A@@@@      UW
)@@G@@   LXI,U A0,1           .     @E@@@@ART1     LXM   A1,X9          . $P SUX
)@@G@@ET PTR TO NEW O/A LIST  @A@@@@         LXI,U A1,1           .     @E@@@@UY
)@@G@@         L,S4  R1,0,A1        . $P GET NEW O/A COUNT        @E@@@@      UZ
)@@G@@   L     A2,1,*A0       . $P GET NEXT OLD O/A ENTRY   @G@@@@         SE VA
)@@G@@   A2,1,*A1       . $T IS THERE IDENTICAL NEW O/A ENTRY ?   @C@@@@      VB
)@@G@@   J     ART4           . $A YES NO,ART4  @G@@@@         JGD   A7,ART1  VC
)@@G@@      . $T ARE THERE MORE OLD O/A ENTRIES ?     @C@@@@                  VD
)@@G@@            . $A NO YES,ART1  @G@@@@ART2     LXM   A0,X8          . $P SVE
)@@G@@ET PTR TO OLD MANUAL LIST           @A@@@@         A,U   A0,NUMOAP      VF
)@@G@@.     @G@@@@         LXM   A1,X9          . $P SET PTR TO NEW MANUAL LISVG
)@@G@@T           @A@@@@         A,U   A1,NUMOAP      .     @E@@@@         L,SVH
)@@G@@2  A7,1,A0        . $P GET OLD MANUAL COUNT     @E@@@@         TE,S2 A7,VI
)@@G@@1,A1        . $T IS NEW MAN COUNT EQUAL ? @C@@@@         J     ART4     VJ
)@@G@@      . $A YES NO,ART4  @E@@@@         L,S5  A2,1,A0        . $P GET OLDVK
)@@G@@ # RESERVED PTRS  @E@@@@         TE,S5 A2,1,A1        . $T IS NEW # RES VL
)@@G@@PTRS EQUAL ?@C@@@@         J     ART4           . $A YES NO,ART4  @G@@@@VM
)@@G@@         JGD   A7,$+2         . $T ARE THERE ANY MAN ENTRIES ?          VN
)@@G@@@C@@@@         J     ART5           . $A YES NO,ART5  @E@@@@ART3     L  VO
)@@G@@   A2,3,*A0       . $P GET NEXT OLD MAN ENTRY   @G@@@@         TE    A2,VP
)@@G@@3,*A1       . $T IS NEXT NEW MAN ENTRY IDENTICAL ?    @C@@@@         J  VQ
)@@G@@   ART4           . $A YES NO,ART4  @G@@@@         JGD   A7,ART3        VR
)@@G@@. $T ARE THERE MORE OLD MAN ENTRIES ?     @E@@@@         J     ART5     VS
)@@G@@      . $A NO,ART5 YES,ART3         @E@@@@ .        SET XFLAG - DIFFERENVT
)@@G@@CE EXISTS IN LINKAGES         @E@@@@ART4     L,U   A0,1           . $P SVU
)@@G@@ET TRANSFORM FLAG       @A@@@@         S     A0,XFLAG       .     @]@@@@VV
)@@G@@ .          @E@@@@ .        PROCESS ITEMS FROM ITEM ADDR LISTS CREATED  VW
)@@G@@      @^@@@@ .             BY BLDSMR@]@@@@ .          @C@@@@ .        STVX
)@@G@@ART BY SCANNING OLD ITEM LIST       @G@@@@ .             NOTE THAT OCCURVY
)@@G@@S ITEMS ARE HANDLED DIFFERENTLY           @]@@@@ .          @G@@@@ART5  VZ
)@@G@@   L     X8,(1,ITADT1)  . $P SET PTR TO OLD ITEM ADDR LIST        @E@@@@WA
)@@G@@         L     A7,0,*X8       . $P GET ITEM LIST COUNT      @E@@@@      WB
)@@G@@   JGD   A7,$+2         . $T ANY ENTRIES IN LIST ?    @C@@@@         J  WC
)@@G@@   ART10          . $A YES NO,ART10 @G@@@@ART6     LMJ   X11,GETNEW     WD
)@@G@@. $T IS THERE A CORRESPONDING NEW ITEM ?  @C@@@@         J     ART8     WE
)@@G@@      . $A YES NO,ART8  @E@@@@         TNZ,H2 X1            . $T IS OLD WF
)@@G@@ITEM FILLER       @C@@@@         J     ART9           . $A NO YES,ART9  WG
)@@G@@@E@@@@         L,S4  A0,0,X1        . $P GET OLD ITEM TYPE        @E@@@@WH
)@@G@@         TG,U  A0,7           . $T IS TYPE OCCURS ?         @C@@@@      WI
)@@G@@   J     ARTOCC         . $A NO YES,ARTOCC@G@@@@         TZ,S4 2,X2     WJ
)@@G@@      . $T IS NEW ITEM AN ELEMENTARY ITEM ?     @C@@@@         J     ARTWK
)@@G@@9           . $A YES NO,ART9  @G@@@@ .        TRANSFORMATION RULES BUILTWL
)@@G@@ ONLY FOR NEW ELEMENTARY ITEMS      @G@@@@         LMJ   X11,CHKDSC     WM
)@@G@@. $T ARE OLD AND NEW DESCRIPTIONS THE SAME@C@@@@         J     ART9     WN
)@@G@@      . $A NO YES,ART9  @G@@@@ART7     LMJ   X11,BLDRUL     . $W BLDRUL WO
)@@G@@- BUILD TRANSFORMATION RULE   @E@@@@ART8     L,U   A0,1           . $P SWP
)@@G@@ET TRANSFORM FLAG       @A@@@@         S     A0,XFLAG       .     @G@@@@WQ
)@@G@@ART9     JGD   A7,ART6        . $T ARE THERE MORE OLD ITEMS ?           WR
)@@G@@@C@@@@                              . $A NO YES,ART6  @]@@@@ .          WS
)@@G@@@E@@@@ .        NOW SEARCH NEW ITEM ADDR LIST TO SEE IF ANY       @C@@@@WT
)@@G@@ .             NON-ZERO ENTRIES REMAIN          @E@@@@ .             FORWU
)@@G@@ ANY THAT DO, CREATE AN INITIALIZE RULE   @E@@@@ .                  FOR WV
)@@G@@ANY THAT ARE ELEMENTARY ITEMS       @]@@@@ .          @G@@@@ART10    L  WW
)@@G@@   X9,(1,ITADT2)  . $P SET PTR TO NEW ITEM ADDR LIST        @A@@@@      WX
)@@G@@   L,U   X1,RULINIT     .     @A@@@@         SZ    A14            .     WY
)@@G@@@E@@@@         L     R1,0,*X9       . $P GET ITEM LIST COUNT      @G@@@@WZ
)@@G@@ART11    SZ    A0             . $P SEARCH LIST FOR NON-ZERO ENTRIES     XA
)@@G@@@G@@@@         SNE   A0,0,*X9       . $T ANY MORE NON-ZERO ENTRIES ?    XB
)@@G@@      @C@@@@         J     ART12          . $A YES NO,ART12 @G@@@@      XC
)@@G@@   AN,U  X9,1           . $P CONSIDER NEXT NON-ZERO ENTRY         @E@@@@XD
)@@G@@         L     X2,0,*X9       . $P GET NEW ITEM ADDR        @G@@@@      XE
)@@G@@   TZ,S4 2,X2           . $T IS THIS AN ELEMENTARY ITEM ?         @C@@@@XF
)@@G@@         J     ART11          . $A YES NO,ART11 @C@@@@         L,S4  A1,XG
)@@G@@0,X2        . $P GET ITEM TYPE@E@@@@         TG,U  A1,7           . $T IXH
)@@G@@S ITEM PART OF OCCURS ? @C@@@@         J     ARTNOC         . $A NO YES,XI
)@@G@@ARTNOC@G@@@@         LMJ   X11,BLDRUL     . $W BLDRUL - CREATE INITIALIZXJ
)@@G@@E RULE      @E@@@@         L,U   A1,1           . $P SET TRANSFORM FLAG XK
)@@G@@      @A@@@@         S     A1,XFLAG       .     @C@@@@         J     ARTXL
)@@G@@11          . $J ART11        @]@@@@ .          @E@@@@ .        ALL TRANXM
)@@G@@SFORMATION CHECKS HAVE NOW BEEN MADE      @E@@@@ .             CHECK THEXN
)@@G@@ TRANSFORM FLAG TO SEE IF           @E@@@@ .                  RULE TABLEXO
)@@G@@ ENTRY SHOULD BE KEPT         @]@@@@ .          @E@@@@ART12    TNZ   XFLXP
)@@G@@AG          . $T IS TRANSFORM FLAG SET ?  @E@@@@         J     *RETURN  XQ
)@@G@@      . $E RETURN TO BLDC1          @G@@@@         L     A3,THISAD      XR
)@@G@@. $P GET START ADDR OF THIS RULE TBL ENTRY@G@@@@         L     A0,X6    XS
)@@G@@      . $P GET END ADDR OF THIS ENTRY           @A@@@@         LXI,U A0,XT
)@@G@@0           .     @G@@@@         ANU   A0,A3          . $P CALCULATE # OXU
)@@G@@F RULES IN THIS ENTRY   @A@@@@         SSL   A1,1           .     @A@@@@XV
)@@G@@         AN,U  A1,1           .     @G@@@@         S,T2  A1,0,A3        XW
)@@G@@. $P SAVE RULE COUNT IN THIS ENTRY        @G@@@@         L     A2,LASTADXX
)@@G@@      . $P GET START ADDR OF LAST ENTRY         @G@@@@         ANU   A3,XY
)@@G@@A2          . $P CALCULATE LENGTH OF LAST ENTRY       @G@@@@         S,TXZ
)@@G@@3  A4,0,A2        . $P SAVE AS LINK IN LAST ENTRY           @G@@@@      YA
)@@G@@   S     A3,LASTAD      . $P SAVE START ADDR OF THIS ENTRY        @G@@@@YB
)@@G@@         S     A0,THISAD      . $P SAVE START ADDR OF NEXT ENTRY        YC
)@@G@@@G@@@@         AN,H2 A0,C17         . $P CALCULATE LENGTH OF C17 TABLE  YD
)@@G@@      @C@@@@         S,H1  A0,C17         . $P SAVE IT      @G@@@@      YE
)@@G@@   L,U   A0,' '         . $P FORMAT TRANSFORMATION WARNING        @A@@@@YF
)@@G@@         S,S2  A0,EDPKT       .     @A@@@@         E$DIT EDPKT          YG
)@@G@@.     @A@@@@         E$COPY 16,ARTWM1     .     @A@@@@         L     A0,YH
)@@G@@RNMPTR      .     @A@@@@         LMJ   X11,EMSG$      .     @A@@@@      YI
)@@G@@   E$COPY 34,ARTWM2     .     @A@@@@         E$DITX               .     YJ
)@@G@@@G@@@@         P$RINT (PF 1,14,PRINT)  . $P PRINT TRANSFORMATION WARNINGYK
)@@G@@      @E@@@@         J     *RETURN        . $E RETURN TO BLDC1          YL
)@@G@@@]@@@@ .          @E@@@@ .        ROUTINE TO INITIALIZE C17 ON INITIAL AYM
)@@G@@RTDEF CALL  @]@@@@ .          @C@@@@C17INT   +     0              . $H CYN
)@@G@@17INT       @A@@@@         L     A0,LAST$D      .     @E@@@@         AU,YO
)@@G@@U  A0,1           . $P GET START ADDR OF NEW C17@A@@@@         S     A1,YP
)@@G@@C17         .     @E@@@@         S     A1,LASTAD      . $P INITIALIZE C1YQ
)@@G@@7 TBL PTRS  @A@@@@         S     A1,THISAD      .     @A@@@@         A,UYR
)@@G@@   A0,1792        .     @E@@@@         S     A0,LAST$D      . $P GET CORYS
)@@G@@E SPACE FOR C17   @A@@@@         ER    MCORE$         .     @E@@@@      YT
)@@G@@   L,U   A0,1           . $P SET C17-INITIALIZED FLAG @A@@@@         S  YU
)@@G@@   A0,C17FLG      .     @C@@@@         J     *C17INT        . $E RETURN YV
)@@G@@      @]@@@@ .          @E@@@@ .        ROUTINE TO CONVERT RELATIVE SYM YW
)@@G@@TBL ADDRS         @A@@@@ .             TO ABSOLUTE ADDRS    @E@@@@ .    YX
)@@G@@         IT IS CALLED WITH THE RELATIVE ADDR IN A11,  @E@@@@ .          YY
)@@G@@        AND RETURNS ABSOLUTE ADDR IN X2         @]@@@@ .          @C@@@@YZ
)@@G@@LINKUP   +     0              . $H LINKUP       @A@@@@         SZ    A10ZA
)@@G@@            .     @A@@@@         SZ    X2             .     @E@@@@      ZB
)@@G@@   LDSL  A10,19         . $P ISOLATE TBL INDICATOR BIT@A@@@@         SSLZC
)@@G@@   A11,19         .     @E@@@@         LXM   X2,C15         . $P SET BASZD
)@@G@@E ADDR FOR C15    @E@@@@         TZ    A10            . $T IS T I B SET ZE
)@@G@@ FOR C15 ?  @E@@@@         LXM   X2,C14         . $P RESET BASE ADDR FORZF
)@@G@@ C14  @E@@@@         A     X2,A11         . $P ADD RELATIVE DISP        ZG
)@@G@@@C@@@@         J     *LINKUP        . $E RETURN       @]@@@@ .          ZH
)@@G@@@E@@@@ .        ROUTINE TO GET NEXT OLD ITEM FROM ITEM ADDR LIST  @E@@@@ZI
)@@G@@ .             AND TO GET ADDR OF NEW ITEM IF ONE EXISTS    @A@@@@ .    ZJ
)@@G@@         FOR SAME RECORD      @C@@@@ .             CALL IS  LMJ  X11,GETZK
)@@G@@NEW         @A@@@@ .             RETURN IS BY         @E@@@@ .          ZL
)@@G@@            J    0,X11  IF NEW ITEM NOT FOUND   @E@@@@ .                ZM
)@@G@@      J    1,X11  IF ITEM FOUND           @]@@@@ .          @C@@@@GETNEWZN
)@@G@@.                       . $H GETNEW       @A@@@@         SZ    A13      ZO
)@@G@@      .     @A@@@@         J     $+2            .     @A@@@@GETONEW  L,UZP
)@@G@@   A13,1          .     @G@@@@         L     X1,0,*X8       . $P GET SYMZQ
)@@G@@ TBL ADDR OF NEXT OLD ITEM    @G@@@@         TNZ,H2 X1            . $T IZR
)@@G@@S ITEM NOT FILLER (ADDR 0)          @C@@@@         J     1,X11          ZS
)@@G@@. $E RETURN FIND  @G@@@@         TNZ,H2 1,X1          . $T IS THERE A LIZT
)@@G@@NK IN THE OLD ITEM ?    @E@@@@         J     0,X11          . $E RETURN ZU
)@@G@@NO FIND           @G@@@@         L,H2  A11,1,X1       . $P GET RELATIVE ZV
)@@G@@LINK TO NEXT ENTRY      @G@@@@         SLJ   LINKUP         . $W LINKUP ZW
)@@G@@- GET NEW ITEM ADDR           @G@@@@         JNZ   A13,GETNW3     . $T IZX
)@@G@@S THIS ITEM PART OF OCCURS          @C@@@@                              ZY
)@@G@@. $A NO YES,GETNW3@E@@@@         L,T1  A0,1,X1        . $P GET OLD ENTRYZZ
)@@G@@ SEQ-NUM    @G@@@@         TE,T1 A0,1,X2        . $T IS NEW ITEM FROM THAA
)@@G@@E SAME RECORD ?   @E@@@@         J     0,X11          . $E RETURN NO FINAB
)@@G@@D           @G@@@@GETNW2   L     X9,(1,ITADT2)  . $P SET PTR TO NEW ITEMAC
)@@G@@ ADDR LIST        @E@@@@         L     R1,0,*X9       . $P GET ITEM LISTAD
)@@G@@ COUNT      @E@@@@         L     A0,X2          . $P GET NEW ITEM ENTRY AE
)@@G@@ADDR  @G@@@@         SE    A0,0,*X9       . $P FIND ADDR IN NEW ITEM ADDAF
)@@G@@R LIST      @A@@@@         J     1,X11          .     @A@@@@         AN,AG
)@@G@@U  X9,1           .     @G@@@@         SZ    0,*X9          . $P ZERO NEAH
)@@G@@W ITEM ADDR LIST ENTRY        @C@@@@         J     1,X11          . $E RAI
)@@G@@ETURN FIND  @A@@@@GETNW3   L     A0,X2          .     @G@@@@         L,HAJ
)@@G@@1  A11,1,X1       . $P GET OCC-LINK FROM OLD ITEM           @G@@@@      AK
)@@G@@   SLJ   LINKUP         . $W LINKUP - GET ADDR OF ITEM W OCC CLSE @E@@@@AL
)@@G@@         L,T1  A2,1,X2        . $P GET OLD SEQ-NUM          @A@@@@      AM
)@@G@@   L     X2,A0          .     @E@@@@         L,S4  A5,0,X2        . $P GAN
)@@G@@ET NEW ITEM TYPE        @G@@@@         TLE,U A5,021         . $T DOES NEAO
)@@G@@W ITEM CONTAIN OCCURS CLAUSE  @C@@@@         J     GETNW4         . $A NAP
)@@G@@O YES,GETNW4@G@@@@         L,H1  A11,1,X2       . $P GET OCC-LINK FROM NAQ
)@@G@@EW ITEM           @G@@@@         SLJ   LINKUP         . $W LINKUP - GET AR
)@@G@@ADDR OF ITEM W OCC CLSE @E@@@@GETNW4   L,T1  A5,1,X2        . $P GET NEWAS
)@@G@@ SEQ-NUM          @A@@@@         L     X2,A0          .     @E@@@@      AT
)@@G@@   TE    A2,A5          . $T ARE SEQ-NUMS THE SAME    @E@@@@         J  AU
)@@G@@   0,X11          . $E RETURN NO FIND           @C@@@@         J     GETAV
)@@G@@NW2         . $J GETNW2       @]@@@@ .          @E@@@@ .        ROUTINE AW
)@@G@@TO TEST IF OLD AND NEW ITEM DESCRIPTIONS  @A@@@@ .             ARE IDENTAX
)@@G@@ICAL        @C@@@@ .             CALL IS  LMJ  X11,CHKDSC         @A@@@@AY
)@@G@@ .             RETURN IS BY         @G@@@@ .                      J    0AZ
)@@G@@,X11  IF DESCRIPTIONS ARE IDENTICAL       @G@@@@ .                      BA
)@@G@@J    1,X11  IF DESCRIPTIONS ARE NOT IDENTICAL   @]@@@@ .          @C@@@@BB
)@@G@@CHKDSC.                       . $H CHKDSC       @E@@@@         L,H2  A0,BC
)@@G@@0,X1        . $P GET OLD TYPE AND LENGTH  @G@@@@         TE,H2 A0,0,X2  BD
)@@G@@      . $T ARE OLD TYPE AND LENGTH THE SAME ?   @E@@@@         J     1,XBE
)@@G@@11          . $E RETURN NOT IDENTICAL     @E@@@@         L,T1  A0,0,X1  BF
)@@G@@      . $P GET OLD REL WORD         @G@@@@         TE,T1 A0,0,X2        BG
)@@G@@. $T IS NEW REL WORD THE SAME ?           @E@@@@         J     1,X11    BH
)@@G@@      . $E RETURN NOT IDENTICAL     @C@@@@         L,S4  A0,0,X1        BI
)@@G@@. $P GET OLD TYPE @G@@@@         TG,U  A0,020         . $T IS SYM TBL ENBJ
)@@G@@TRY OF FORMAT I         @E@@@@         J     0,X11          . $E RETURN BK
)@@G@@IDENTICAL         @E@@@@         L,S3  A0,1,X1        . $P GET OLD OFFSEBL
)@@G@@T           @E@@@@         TE,S3 A0,1,X2        . $T IS NEW OFFSET THE SBM
)@@G@@AME ? @E@@@@         J     1,X11          . $E RETURN NOT IDENTICAL     BN
)@@G@@@E@@@@         J     0,X11          . $E RETURN IDENTICAL         @]@@@@BO
)@@G@@ .          @C@@@@ .        ROUTINE TO CREATE TRANSFORMATION RULE @C@@@@BP
)@@G@@ .             FROM TWO SYM TBL ENTRIES         @C@@@@ .             CALBQ
)@@G@@L IS  LMJ  X11,BLDRUL         @C@@@@BLDRUL.                       . $H BBR
)@@G@@LDRUL       @E@@@@         DL    A0,0,X1        . $P GET OLD SYM TBL ENTBS
)@@G@@RY    @E@@@@         SLJ   BLDSHFT        . $W BLDSHFT - FORM RULE      BT
)@@G@@@E@@@@         DL    A0,0,X2        . $P GET NEW SYM TBL ENTRY    @E@@@@BU
)@@G@@         SLJ   BLDSHFT        . $W BLDSHFT - FORM RULE      @C@@@@      BV
)@@G@@   J     0,X11          . $E RETURN       @C@@@@BLDSHFT  +     0        BW
)@@G@@      . $H BLDSHFT      @G@@@@         LSSL  A1,12          . $P SHIFT EBX
)@@G@@NTRY INTO RULE FORMAT         @A@@@@         LDSC  A0,12          .     BY
)@@G@@@A@@@@         LSSL  A1,24          .     @A@@@@         SSL   A0,6     BZ
)@@G@@      .     @A@@@@         LSSL  A0,6           .     @A@@@@         LDSCA
)@@G@@L  A0,6           .     @A@@@@         LDSC  A0,6           .     @C@@@@CB
)@@G@@         AN,U  A1,2           . $P RESET TYPE   @E@@@@         TG,U  A1,CC
)@@G@@5           . $T IS IT NOT OCCURS ?       @G@@@@         AN,U  A1,7     CD
)@@G@@      . $P RESET OCCURS TYPE TO ITEM TYPE       @E@@@@         S     A0,CE
)@@G@@0,X6        . $P SAVE RULE IN RULE TBL    @A@@@@         S,S4  A1,0,*X6 CF
)@@G@@      .     @C@@@@         J     *BLDSHFT       . $E RETURN       @E@@@@CG
)@@G@@ .        ROUTINE TO BUILD RULE FROM SYM TBL FORMAT II ENTRY@C@@@@BLDORUCH
)@@G@@L.                      . $H BLDORUL      @E@@@@         L     A1,X1    CI
)@@G@@      . $P GET OLD SYM TBL ENTRY    @A@@@@         L     A2,A14         CJ
)@@G@@.     @E@@@@         SLJ   BLDMOVE        . $W BLDMOVE - FORM RULE      CK
)@@G@@@E@@@@         L     A1,X2          . $P GET NEW SYM TBL ENTRY    @A@@@@CL
)@@G@@         L     A2,A15         .     @E@@@@         SLJ   BLDMOVE        CM
)@@G@@. $W BLDMOVE - FORM RULE      @C@@@@         J     0,X11          . $E RCN
)@@G@@ETURN       @C@@@@BLDMOVE  +     0              . $H BLDMOVE      @C@@@@CO
)@@G@@         L,T3  A0,0,A1        . $P GET LENGTH   @A@@@@         S,T1  A0,CP
)@@G@@0,X6        .     @C@@@@         L,S4  A0,0,A1        . $P GET TYPE     CQ
)@@G@@@A@@@@         AN,U  A0,16          .     @E@@@@         JN    A0,BLDM2 CR
)@@G@@      . $T IS THIS INITIALIZE ENTRY @C@@@@                              CS
)@@G@@. $A NO YES,BLDM2 @C@@@@         S,S4  A0,0,X6        . $P SAVE TYPE    CT
)@@G@@@G@[@@         L,T1  A1,0,A1        . $P GET REL CHAR IN OCCURS OF ITEM CU
)@@G@@      @G@@@[         L     A1,0,A1        . $P GET REL CHAR IN OCCURS OFCV
)@@G@@ ITEM       @A@@@[         SSL   A1,24          .     @G@@@@         A  CW
)@@G@@   A1,A2          . $P ADD REL CHAR IN RECD OF OCCURS START @A@@@@      CX
)@@G@@   AN,U  A1,1           .     @A@@@@         SZ    A0             .     CY
)@@G@@@G@@@@         DI,U  A0,6           . $P CONVERT CHAR POS TO WORD & CHARCZ
)@@G@@ POS  @A@@@@         JNZ   A1,$+3         .     @A@@@@         L,U   A1,DA
)@@G@@6           .     @A@@@@         AN,U  A0,1           .     @C@@@@      DB
)@@G@@   S,T3  A0,0,X6        . $P SAVE REL-WORD@C@@@@         S,S3  A1,0,*X6 DC
)@@G@@      . $P SAVE CHAR-PS @C@@@@         J     *BLDMOVE       . $E RETURN DD
)@@G@@      @E@@@@BLDM2    SZ    0,*X6          . $P STORE ZERO AS RULE       DE
)@@G@@@C@@@@         J     *BLDMOVE       . $E RETURN       @]@@@@ .          DF
)@@G@@@E@@@@ .        ROUTINE TO BUILD AN INITIALIZE REPEAT ENTRY       @E@@@@DG
)@@G@@ .             FOR A NEW OCCURS ELEMENTARY ITEM WHICH       @C@@@@ .    DH
)@@G@@         HAS NO CORRESPONDING OLD ITEM    @]@@@@ .          @C@@@@ARTNOCDI
)@@G@@.                       . $H ARTNOC       @A@@@@         L     A2,X2    DJ
)@@G@@      .     @E@@@@         TLE,U A1,021         . $T IS THIS OCCURS ITEMDK
)@@G@@ ?    @C@@@@         J     ANOC1          . $A NO YES,ANOC1 @C@@@@      DL
)@@G@@   L     A0,X2          . $P SAVE X2      @E@@@@         L,H1 A11,1,X2  DM
)@@G@@      . $P GET OCC-LINK AS OLD LINK @G@@@@         SLJ   LINKUP         DN
)@@G@@. $W LINKUP - GET ADDR OF OCCURS ITEM     @C@@@@         L     A2,X2    DO
)@@G@@      . $P SAVE ADDR    @C@@@@         L     X2,A0          . $P RESTOREDP
)@@G@@ X2   @A@@@@ANOC1    L     A0,(0,0,1,5,0,0) .   @G@@@@         S     A0,DQ
)@@G@@0,*X6       . $P SET 1ST WORD OF REPEAT ENTRY         @E@@@@         L,TDR
)@@G@@3  A0,0,A2        . $P GET OCC-LENGTH           @A@@@@         S,T1  A0,DS
)@@G@@0,X6        .     @E@[@@         L,T1  A0,0,A2        . $P GET OCC-REL-CDT
)@@G@@HAR         @E@@@[         L     A0,0,A2        . $P GET OCC-REL-CHAR   DU
)@@G@@      @A@@@[         SSL   A0,24          .     @A@@@@         MSI,U A0,DV
)@@G@@6           .     @A@@@@         A,S3  A0,1,A2        .     @A@@@@      DW
)@@G@@   S     A0,A15         .     @A@@@@         S,T3  A0,0,X6        .     DX
)@@G@@@E@@@@         L,T3  A0,2,A2        . $P GET HIGH # OCCURS        @A@@@@DY
)@@G@@         S,T2  A0,0,*X6       .     @A@@@@         TG,U  A1,020         DZ
)@@G@@.     @G@@@@         J     $+3            . $W BLDRUL - CREATE INITIALIZEA
)@@G@@E RULE      @E@@@@         LMJ   X11,BLDRUL     . FORMAT I SYM TBL ENTRYEB
)@@G@@      @A@@@@         J     $+2            .     @E@@@@         LMJ   X11EC
)@@G@@,BLDORUL    . FORMAT II SYM TBL ENTRY     @A@@@@         L,U   A1,1     ED
)@@G@@      .     @E@@@@         S     A1,XFLAG        . $P SET TRANSFORM FLAGEE
)@@G@@      @C@@@@         J     ART11          . $J ART11        @]@@@@ .    EF
)@@G@@      @C@@@@ .        ROUTINE TO HANDLE OLD OCCURS GROUPS   @]@@@@ .    EG
)@@G@@      @C@@@@ARTOCC.                       . $H ARTOCC       @E@@@@      EH
)@@G@@   L,S4  A0,0,X2        . $P GET NEW ITEM TYPE        @G@@@@         TG,EI
)@@G@@U  A0,7           . $T IS NEW ITEM PART OF OCCURS ?         @C@@@@      EJ
)@@G@@   J     AOCC1          . $A NO YES,AOCC1 @A@@@@         AN,U  X9,1     EK
)@@G@@      .     @G@@@@         S     X2,0,*X9       . $P RESTORE ADDR TO NEWEL
)@@G@@ ITEM ADDR TBL    @C@@@@         J     ART9           . $J ART9         EM
)@@G@@@G@@@@AOCC1    S     X6,SX6         . $P SAVE CURRENT RULE TBL ADDR     EN
)@@G@@      @E@@@@         SZ    OFLAG          . $P RESET OCCURS SAVE FLAG   EO
)@@G@@@E@@@@         SZ    A8             . $P RESET REPEAT # RULES CNTR@A@@@@EP
)@@G@@         L     A2,X1          .     @E@@@@         L,S4  A1,0,X1        EQ
)@@G@@. $P GET OLD ITEM TYPE        @G@@@@         TLE,U A1,021         . $T DER
)@@G@@OES OLD ITEM CONTAIN OCCURS CLAUSE ?@C@@@@         J     AOCC2          ES
)@@G@@. $A NO YES,AOCC2 @A@@@@         L     A0,X2          .     @G@@@@      ET
)@@G@@   L,H1 A11,1,X1        . $P GET OCC-LINK FROM OLD ITEM           @G@@@@EU
)@@G@@         SLJ   LINKUP         . $W LINKUP - GET ADDR OF ITEM W OCC CLSE EV
)@@G@@@A@@@@         L     A2,X2          .     @A@@@@         L     X2,A0    EW
)@@G@@      .     @E@@@@AOCC2    L,T3  A0,0,A2        . $P GET F-OCC-LENGTH   EX
)@@G@@      @A@@@@         S,T1  A0,0,X6        .     @A@@@@         L     A9,EY
)@@G@@A0          .     @E@[@@         L,T1  A0,0,A2        . $P GET F-OCC-RELEZ
)@@G@@-CHAR       @E@@@[         L     A0,0,A2        . $P GET F-OCC-REL-CHAR FA
)@@G@@      @A@@@[         SSL   A0,24          .     @A@@@@         MSI,U A0,FB
)@@G@@6           .     @A@@@@         A,S3  A0,1,A2        .     @A@@@@      FC
)@@G@@   S     A0,A14         .     @A@@@@         S,T3  A0,0,X6        .     FD
)@@G@@@C@@@@         L,U   A0,5           . $P SET TYPE = 5 @A@@@@         S,SFE
)@@G@@4  A0,0,*X6       .     @E@@@@         L,T3  A0,2,A2        . $P GET OLDFF
)@@G@@ HIGH # OCCURS    @A@@@@         S,T2  A0,0,X6        .     @A@@@@      FG
)@@G@@   L     A2,X2          .     @E@@@@         L,S4  A1,0,X2        . $P GFH
)@@G@@ET NEW ITEM TYPE        @G@@@@         TLE,U A1,021         . $T DOES NEFI
)@@G@@W ITEM CONTAIN OCCURS CLAUSE ?@C@@@@         J     AOCC3          . $A NFJ
)@@G@@O YES,AOCC3 @A@@@@         L     A0,X2          .     @G@@@@         L,HFK
)@@G@@1 A11,1,X2        . $P GET OCC-LINK FROM NEW ITEM           @G@@@@      FL
)@@G@@   SLJ   LINKUP         . $W LINKUP - GET ADDR OF ITEM W OCC CLSE @A@@@@FM
)@@G@@         L     A2,X2          .     @A@@@@         L     X2,A0          FN
)@@G@@.     @E@@@@AOCC3    L,T3  A0,0,A2        . $P GET T-OCC-LENGTH         FO
)@@G@@@A@@@@         S,T1  A0,0,X6        .     @A@@@@         L,U   A1,1     FP
)@@G@@      .     @G@@@@         TE    A0,A9          . $T ARE OLD AND NEW OCCFQ
)@@G@@-LENGTH THE SAME ?@E@@@@         S     A1,OFLAG       . $P SET OCCURS SAFR
)@@G@@VE FLAG     @E@[@@         L,T1  A0,0,A2        . $P GET T-OCC-REL-CHAR FS
)@@G@@      @E@@@[         L     A0,0,A2        . $P GET T-OCC-REL-CHAR       FT
)@@G@@@A@@@[         SSL   A0,24          .     @A@@@@         MSI,U A0,6     FU
)@@G@@      .     @A@@@@         A,S3  A0,1,A2        .     @A@@@@         S  FV
)@@G@@   A0,A15         .     @A@@@@         S,T3  A0,0,X6        .     @G@@@@FW
)@@G@@         TE    A0,A14         . $T ARE OLD AND NEW OCC-REL-CHAR THE SAMEFX
)@@G@@@E@@@@         S     A1,OFLAG       . $P SET OCCURS SAVE FLAG     @E@@@@FY
)@@G@@         L,T2  A0,0,X6        . $P GET OLD HIGH # OCCURS    @G@@@@      FZ
)@@G@@   TE,T3 A0,2,A2        . $T ARE OLD AND NEW HIGH # OCCURS =      @E@@@@GA
)@@G@@         S     A1,OFLAG       . $P SET OCCURS SAVE FLAG     @G@@@@      GB
)@@G@@   TG,T3 A0,2,A2        . $T IS NEW HIGH # OCCURS GREATER ?       @E@@@@GC
)@@G@@         L,T3  A0,2,A2        . $P USE NEW HIGH # OCCURS    @E@@@@      GD
)@@G@@   S,T2  A0,0,*X6       . $P SET OCC-LOOP-COUNT       @G@@@@AOCC4    TZ,GE
)@@G@@S4 2,X2           . $T IS NEW ITEM AN ELEMENTARY ITEM ?     @C@@@@      GF
)@@G@@   J     AOCC5          . $A YES NO,AOCC5 @G@@@@         LMJ   X11,CHKDSGG
)@@G@@C     . $T ARE OLD AND NEW DESCRIPTIONS THE SAME@C@@@@         J     AOCGH
)@@G@@C45         . $A NO YES,AOCC45@E@@@@         L,U   A0,1           . $P SGI
)@@G@@ET OCCURS SAVE FLAG     @A@@@@         S     A0,OFLAG       .     @E@@@@GJ
)@@G@@AOCC45   L,S4  A1,0,X2        . $P GET NEW ITEM TYPE        @G@@@@      GK
)@@G@@   TG,U  A1,020         . $W BLDRUL - BUILD TRANSFORMATION RULE   @A@@@@GL
)@@G@@         J     $+3            .     @E@@@@         LMJ   X11,BLDRUL     GM
)@@G@@. FORMAT I SYM TBL ENTRY      @A@@@@         J     $+2            .     GN
)@@G@@@E@@@@         LMJ   X11,BLDORUL    . FORMAT II SYM TBL ENTRY     @G@@@@GO
)@@G@@         A,U   A8,1           . $P INCREMENT REPEAT # RULES CNTR        GP
)@@G@@@G@@@@AOCC5    JGD   A7,$+2         . $T ARE THERE MORE OLD IT AD TBL ENGQ
)@@G@@TRIES?@C@@@@         J     AOCC9          . $A YES NO,AOCC9 @G@@@@      GR
)@@G@@   L     A0,0,X8        . $P GET ADDR OF NEXT OLD ITEM ENTRY      @A@@@@GS
)@@G@@         JZ    A0,AOCC55      .     @C@@@@         L,S4  A1,0,A0        GT
)@@G@@. $P GET ITS TYPE @G@@@@         TLE,U A1,021         . $T IS IT PART OFGU
)@@G@@ CURRENT OCCURS GROUP ? @C@@@@         J     AOCC9          . $A YES NO,GV
)@@G@@AOCC9 @G@@@@AOCC55   LMJ   X11,GETONEW    . $T IS THERE A MATCHING NEW IGW
)@@G@@TEM ?       @C@@@@         J     AOCC8          . $A YES NO,AOCC8 @E@@@@GX
)@@G@@         TNZ,H2 X1            . $T IS OLD ITEM FILLER       @C@@@@      GY
)@@G@@   J     AOCC5          . $A NO YES,AOCC5 @G@@@@         L,S4  A0,0,X2  GZ
)@@G@@      . $T IS NEW ITEM PART OF OCCURS ?         @A@@@@         TG,U  A0,HA
)@@G@@7           .     @C@@@@         J     AOCC6          . $A NO YES,AOCC6 HB
)@@G@@@A@@@@         AN,U  X9,1           .     @G@@@@         S     X2,0,*X9 HC
)@@G@@      . $P RESTORE ADDR TO NEW ITEM ADDR TBL    @C@@@@         J     AOCHD
)@@G@@C8          . $J AOCC8        @G@@@@AOCC6    TG,U  A1,020         . $T DHE
)@@G@@OES NEW ITEM CONTAIN AN OCC CLAUSE ?@C@@@@         J     AOCC4          HF
)@@G@@. $A YES NO,AOCC4 @E@@@@         TZ    OFLAG          . $T IS OCCURS SAVHG
)@@G@@E FLAG SET ?@C@@@@         J     AOCC7          . $A NO YES,AOCC7 @G@@@@HH
)@@G@@         L     X6,SX6         . $P RESET RULE TBL PTR TO START REPEAT   HI
)@@G@@@C@@@@         J     AOCC1          . $J AOCC1        @A@@@@AOCC7    L  HJ
)@@G@@   A0,SX6         .     @G@@@@         S,S3  A8,0,A0        . $P SAVE REHK
)@@G@@PEAT # RULE CNTR IN REPEAT ENT@A@@@@         L,U   A0,1           .     HL
)@@G@@@E@@@@         S     A0,XFLAG       . $P SET TRANSFORM FLAG       @C@@@@HM
)@@G@@         J     AOCC1          . $J AOCC1        @A@@@@AOCC8    L,U   A0,HN
)@@G@@1           .     @E@@@@         S     A0,OFLAG       . $P SET OCCURS SAHO
)@@G@@VE FLAG     @C@@@@         J     AOCC5          . $J AOCC5        @E@@@@HP
)@@G@@AOCC9    TZ    OFLAG          . $T IS OCCURS SAVE FLAG SET ?@C@@@@      HQ
)@@G@@   J     AOCC10         . $A NO YES,AOCC10@G@@@@         L     X6,SX6   HR
)@@G@@      . $P RESET RULE TBL PTR TO START OF REPEAT@C@@@@         J     AOCHS
)@@G@@C11         . $J AOCC11       @A@@@@AOCC10   L     A0,SX6         .     HT
)@@G@@@G@@@@         S,S3  A8,0,A0        . $P SAVE REPEAT # RULE CNTR IN REPEHU
)@@G@@AT ENT@A@@@@         L,U   A0,1           .     @E@@@@         S     A0,HV
)@@G@@XFLAG       . $P SET TRANSFORM FLAG       @G@@@@AOCC11   TP    A7       HW
)@@G@@      . $T MORE OLD ITEM ADDR TBL ENTRIES ?     @E@@@@         J     ARTHX
)@@G@@10          . $A YES,ART6 NO,ART10        @A@@@@         J     ART6     HY
)@@G@@      .     @]@@@@ .          @^@@@@ .        ERROR EXIT    @]@@@@ .    HZ
)@@G@@      @E@@@@ARTERR   P$RINT (PF 1,6,ARTMSG)    . $P PRINT ERROR MESSAGE IA
)@@G@@@A@@@@         ER    ERR$           . $E  @]@@@@ .          @]@@@@$(6). IB
)@@G@@      @A@@@@SX6      +     0              .     @A@@@@THISAD   +     0  IC
)@@G@@            .     @A@@@@LASTAD   +     0              .     @A@@@@C17FLGID
)@@G@@   +     0              .     @A@@@@XFLAG    +     0              .     IE
)@@G@@@A@@@@OFLAG    +     0              .     @A@@@#LOCMDE*  +     0        IF
)@@G@@      .     @A@@@#         +     0              .     @A@@@@RULINIT  +  IG
)@@G@@   0,0,0,2,0,0    .     @A@@@@         +     0              .     @C@@@@IH
)@@G@@ARTMSG   '*** INTERNAL TABLE ERROR IN ARTDEF *' @A@@@@ARTWM1   'WARNING:II
)@@G@@ RECORD '    .    @E@@@@ARTWM2   ' WILL BE TRANSFORMED DURING UNLOAD'   IJ
)@@G@@.           @#@@@@         END .    @[@^@@EXIT  ___   @E@@@@AOCC3    L,TIK
)@@G@@3  A0,0,A2        . $P GET T-OCC-LENGTH         @A@@@@         S,T1  A0,IL
)@@G@@0,X6        .     @A@@@@*D@#@@P$CLSEG     UASR24YEE   COFKF1            IM
)@@G@@            @^@@@@            AXR$        @]@@@@$(2).       @]@@@@CLSEG$IN
)@@G@@*.    @^@@@@            +SLT$,COUNT @A@@@@           'CL1505      '     IO
)@@G@@      @A@@@@           +      CL1505,0          @A@@@@           'CL0103IP
)@@G@@      '           @A@@@@           +      CL0103,0          @A@@@@      IQ
)@@G@@     'CL1604      '           @A@@@@           +      CL1604,0          IR
)@@G@@@A@@@@           'CL1657      '           @A@@@@           +      CL1657IS
)@@G@@,0          @A@@@@           'CL0281      '           @A@@@@           +IT
)@@G@@      CL0281,0          @A@@@@           'CL1229      '           @A@@@@IU
)@@G@@           +      CL1229,0          @A@@@@           'CL0295      '     IV
)@@G@@      @A@@@@           +      CL0295,0          @A@@@@           'CL0298IW
)@@G@@      '           @A@@@@           +      CL0298,0          @A@@@@      IX
)@@G@@     'CL0311      '           @A@@@@           +      CL0311,0          IY
)@@G@@@A@@@@           'CL1907      '           @A@@@@           +      CL1907IZ
)@@G@@,0          @A@@@@           'CL1640      '           @A@@@@           +JA
)@@G@@      CL1640,0          @A@@@@           'CL413       '           @A@@@@JB
)@@G@@           +       CL413,0          @A@@@@           'CL415       '     JC
)@@G@@      @A@@@@           +       CL415,0          @A@@@@           'CL417 JD
)@@G@@      '           @A@@@@           +       CL417,0          @A@@@@      JE
)@@G@@     'CL0721      '           @A@@@@           +      CL0721,0          JF
)@@G@@@A@@@@           'CL0724      '           @A@@@@           +      CL0724JG
)@@G@@,0          @A@@@@           'CL0231      '           @A@@@@           +JH
)@@G@@      CL0231,0          @A@@@@           'CL0008      '           @A@@@@JI
)@@G@@           +      CL0008,0          @A@@@@           'CL0014      '     JJ
)@@G@@      @A@@@@           +      CL0014,0          @A@@@@           'CL0333JK
)@@G@@      '           @A@@@@           +      CL0333,0          @A@@@@      JL
)@@G@@     'CL761       '           @A@@@@           +       CL761,0          JM
)@@G@@@A@@@@           'CL1522      '           @A@@@@           +      CL1522JN
)@@G@@,0          @A@@@@           'CL893       '           @A@@@@           +JO
)@@G@@       CL893,0          @A@@@@           'CL895       '           @A@@@@JP
)@@G@@           +       CL895,0          @A@@@@           'CL897       '     JQ
)@@G@@      @A@@@@           +       CL897,0          @A@@@@           'CL1136JR
)@@G@@      '           @A@@@@           +      CL1136,0          @A@@@@      JS
)@@G@@     'CL1141      '           @A@@@@           +      CL1141,0          JT
)@@G@@@A@@@@           'CL2022      '           @A@@@@           +      CL2022JU
)@@G@@,0          @A@@@@           'CL0077      '           @A@@@@           +JV
)@@G@@      CL0077,0          @A@@@@           'CL1623      '           @A@@@@JW
)@@G@@           +      CL1623,0          @A@@@@           'CL1042      '     JX
)@@G@@      @A@@@@           +      CL1042,0          @A@@@@           'CL1630JY
)@@G@@      '           @A@@@@           +      CL1630,0          @A@@@@      JZ
)@@G@@     'CL1500      '           @A@@@@           +      CL1500,0          KA
)@@G@@@A@@@@           'CL1713      '           @A@@@@           +      CL1713KB
)@@G@@,0          @A@@@@           'CL1715      '           @A@@@@           +KC
)@@G@@      CL1715,0          @A@@@@           'CL1717      '           @A@@@@KD
)@@G@@           +      CL1717,0          @A@@@@           'CL1737      '     KE
)@@G@@      @A@@@@           +      CL1737,0          @A@@@@           'CL210 KF
)@@G@@      '           @A@@@@           +       CL210,0          @A@@@@      KG
)@@G@@     'CL0015      '           @A@@@@           +      CL0015,0          KH
)@@G@@@A@@@@           'CL1815      '           @A@@@@           +      CL1815KI
)@@G@@,0          @A@@@@           'CL1819      '           @A@@@@           +KJ
)@@G@@      CL1819,0          @A@@@@           'CL1824      '           @A@@@@KK
)@@G@@           +      CL1824,0          @A@@@@           'CL1530      '     KL
)@@G@@      @A@@@@           +      CL1530,0          @^@@@@          'CL1722 KM
)@@G@@     '@^@@@@          +         0,0 @A@@@@COUNT       EQU             44KN
)@@G@@      @#@@@@            END   @#@[@@@BRKPT PRINT$     ___^@)^@)^@)^@)^@$KO
)@@G@@CTGAC6AS0^@)^@)^@)^8)^@)^@)^@)^@)^@)@D@@@@^@)^@)^@)^@)^@)^@:^@)^@)^@)CTGKP
)@@G@@AC6AS0 )0^@)^@)^@)^@)^@))@@[I@?G[)K0AK0AK^C#[@@@A#K@@QK8@@@[R#@@@@/K@@@IKQ
)@@G@@*@@@@] @@@@G(@@@@GR#@@@BAA0@@@AA@@@@)@D[I@(]@1]@4K0AK0AK)I@@;*K@@SRRW@@[KR
)@@G@@R#@@@@A[0@@[A#@@@]R;@@@['=@@@@A#@@@@O;@@W@AB@@@@)@M[A@(#@T]@//S#@SJA@0AGKS
)@@G@@^()G)@C[0@@Q@@S@K>@@@@@[@@@@@@@@@@@#/,0@@@A#K@@#;CK@@SAC@@@@)@U[I@(]@8K0KT
)@@G@@A^G[)K0A@@@@A\@@@ZO;@@@[R#@@@BA#B@@^OBA@@AA#@@@ARRA@@#R[)@@@G90@@#AD@@@@KU
)@@G@@)@<[I@?C^^G[)@K0A@@@@@@@R#K@@N @@@@BOX&@@ R[K@@AH9)@@[CT&@@  @@@@QAZ@@@)KV
)@@G@@R#@@@@AE@@@@)@?[I@?G[)K[#@T@ES#CK@@@/,0@@@C/@@@O/K@@[[A#@@@IR;@@@[/K@@@3KW
)@@G@@(?H@@[ @@@@G @@@@IAF@@@@)@5[Q@?G[-]@SK)#@@O;@@@]P;K@@[(0G@@@R:W@@@R#@@@NKX
)@@G@@/,0@@@C/@@@@/,0@@@C8K@@YC8@@@JAG@@@@)@_[I@?C[=C][#@T@^G[-#@SO#@@@ARBA@@[KY
)@@G@@AR@@@ZRBA@@@/K@@#Q*@@@@B @@@@J/,0@@@/,0@@@AH@@@@)[C[Q@?G[)K0A@[@@@/K@@[VKZ
)@@G@@\@K@@GR;)@@] @@@@K @@@@HR7A@@@A\K@@)+8@@@BR\A@@[AZ@@@ZAI@@@@)[M[Q@*@K@K@LA
)@@G@@@@@@@@R;K@@ /K@@[> @@@@KR;K@@]/K@@[>%8@@@[R3A@@@R;K@@#C9@@@[(@@@@GAJ@@@@LB
)@@G@@)[W[Q@(@@K@@@@@@@@*WA@@[R;K@@#%8@@@[R;K@@A/K@@[>!8@@@#R;K@@^R\A@@@/K@@[>LC
)@@G@@:8@@@[AK@@@@)[&[A@?@K0AK0AK0AK]&@2^]C@@@@@/,0@@@R')@@U/K@@[\*@@@@I[(@@@-LD
)@@G@@A:K@@ZO#K@@J/K@@]]AL@@@@)[,[I@?@[@K0AK0AK0AK@@@@/K@@[;A#@@@G(@@@@[A#@@@HLE
)@@G@@/K@@[7%8K@@[R3Q@@@ @@@@G/K@@[0AM@@@@)[7[Q@?G[)@^[#@S@@[]!@@@R#R@@+8^)@@:LF
)@@G@@G!/@@@R#@@@NO9)@@]A#H@@@O#K@@QG')@@[R#R@@+AN@@@@)][[I@?G[=G[=@K0AK0A@@@@LG
)@@G@@RBQ@@@O#@@@ RZA@@[ *@@@-A:K@@ZR;K@@L/K@@]N(@@@@B/K@K@@AO@@@@)]E[I@(#@S()LH
)@@G@@G-@+CS#]A@2@/K@@[7A#K@@ER3Q@@@A#K@@CR;K@@[/,0@@@R')@@UARK@@ZT^W@@@AP@@@@LI
)@@G@@)]N[I@(#@T#@S[#@SK0A@@@@ARK@@-RBW@@@AZK@@-RFW@@@O#@@@ RZA@@[[(@@@-A:K@@ZLJ
)@@G@@O;K@@BAQ@@@@)]W[I@%&@2^]C-)G-)G)CS#@O#K@@ RZQ@@[R#0@@H/K@@]_:OK@@-RZK@@-LK
)@@G@@ @@@@J/,0@@@R')@@UAR@@@@)]>[I@*K0A[][D@K)M@@@@@@R;K@@[L^K@@@/K@@]2?^K@@@LL
)@@G@@R]K@@HR#X@@@O#R@@+P;K@@[RRX@@[AS@@@@)],[I@*^[][G^C^=@@@@@@@@/K@@].?^K@@@LM
)@@G@@R#K@@JAFZ@@]PBK@@@/K@@]4AF\@@];GK@@N;*)@@NAT@@@@)]7[I@?C^)[@K)N^G[)@@@@@LN
)@@G@@ @@@@-AFT@@]PBK@@@/K@@]_AF(@@];GK@@N;*)@@NR;K@@[L^K@@@AU@@@@)#@[I@(#@T#@LO
)@@G@@SK0AK0A^C^=@/K@@#L?^K@@@R#K@@GA#K@@FA#K@@DR3Q@@@AZK@@ZA#K@@BR;K@@[AV@@@@LP
)@@G@@)#D[I@?C^)^G[)K^C^0@@@@@PBK@@@/K@@[7AB\@@]*@@@@JAF)@@);GK@@N;*)@@NR;K@@[LQ
)@@G@@L^K@@@AW@@@@)#M[I@?G[)K^G[=[#@SK@@@@/K@@[;?0A@@@R#@@@E/K@@#W(@@@@C/K@@[7LR
)@@G@@ABZ@@]*@@@@JAFK@@)AX@@@@)#V[A@?G[=G[-@K)KK0AK0AK@@@@@@/K@@[^ @@@@BAZ@@@)LS
)@@G@@R#@@@@/K@@#<?0A@@@R#@@@D @@@@CAY@@@@)#<[I@(#@S^G[-#@T#@S@@@@RBA@@@AZ@@@ZLT
)@@G@@OR@@@Z!0Q@@@R#K@@F;C@@@S;*@@@SRZ@@@ZR;0@@IAZ@@@@)#?@&@?G[-#@T@@@@@)@@@&@LU
)@@G@@0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/K@@[GA#@@@FR3A@@@AR@@@ZBA@@@@)@^[Y@0@@@@@LV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BB@@@@LW
)@@G@@)@J[Y@0@E@@@@@@@@@@@@@@@@@@@@@[[@@@@@@@@@@@& @@U                        LX
)@@G@@      BC@@@@)@-@Y@0/S@JA@@@@@@)#0@Y@?G[+&@2^@@@@@@@@@@/,0@@@C/@@@OAA0@@@LY
)@@G@@@@@@CS@@@@@=@@@@@@BD@@@@)#3[I@?C @K)AK)CK0AK0A@@O;@@@[R#@@@B @@@@) @@@@ZLZ
)@@G@@/,0@@@/,0@@@R;K@@YO;@@@#R#@@@@BE@@@@)#/[A@?G[-#@T][KK0AES#CKC)@@@@/,0@@@MA
)@@G@@R')@@UAZ@@@)RRG@@[R#@@@@A:@@@ZR;@@@[A\@@@ZBF@@@@)^^[A@?G[=G[=G[=G[=G[-#@MB
)@@G@@S@@@@@CA1@@[/K@K@@(^[@@[Q@K@@G/K@K@@(@@@@GAA0@@@/K@K@@BG@@@@)^G[I@?@^G[=MC
)@@G@@G[=[#@SK0A@@RRK@@#&9)@@[Q[)@KH'^@@AR(@@@KJ/K@K@@%8@@@]R:]@@@'^@@A<BH@@@@MD
)@@G@@)^P[I@*K0AK0A^G[-#@S@@@@R;)@@CR#@@KNAVA@@@RR@@@ AZA@@@RR@@@^ @@@KK OA)@@ME
)@@G@@AZQ@@@BI@@@@)^Y[I@(@@K)PK)QEKF)@@@@@O;@@@$R;@@@@Q]K@@@Q]@@@@AR&)@@R;)@@*MF
)@@G@@?8@@@^/K@@^+?8@@@]BJ@@@@)^$[Q@*K)P^@K)Q^@@P]K@@G/K@@EW2WT)@@NCK@@@P]@@@GMG
)@@G@@/K@@EW2WS)@@NCK@@@&]K@@G&]@@@GBK@@@@)^1[Q@*K^[@@@@@@@@N*X@@@&;K@@[Q#K@@DMH
)@@G@@&;@@@[Q#@@@C/K@@^_8^0@^6/K@@ K%(9@@@C(8@@@BL@@@@)^;[Q@*K^@EKF-M[W@%1.@@[MI
)@@G@@C1/@@[O;K@@@Q#K@@DO;@@@@Q#@@@C8^0@^8/K@@ K2@!)@[R#?)@[BM@@@@)  [Q@?@^[@KMJ
)@@G@@@K^@@@8^0@ F/K@@ K%@!)@#R#?)@#/K@@ M8^0@ F/K@@ K%=!@@[R$?@@[/K@@ KBN@@@@MK
)@@G@@) J[I@?@K0AK0A^[@K^@@@@@/K@@ +/,0@A!/K@@ >8^0@ QC[8)@@R]@@K&A#@@KKR;@@@[ML
)@@G@@/K@@ MBO@@@@) S[Q@(@[@^[@K^@@@/,0@BZ/K@@ =/,0@BM/K@@ =**]@@]/K@@C%!8@@@BMM
)@@G@@R:[@@@/K@@ =(^@@@[BP@@@@) +[I@(#@T@K0AES#@@@@@@@3@D)@@ @@@@GN@T)@@ @@@@UMN
)@@G@@R8K@KOR]K@K$8^0@ QA#@@KKR;@@@[BQ@@@@) :[Q@?@[@[@K@@@@@R;K@@[/,0@BZ/K@@CIMO
)@@G@@!8K@@BR:M@@@/K@@ (**]@@]R@()@@P'K@@[/K@@ 7BR@@@@) 5[I@?G[=[#@T#@T#@S@@@@MP
)@@G@@;CK@@[L@@@@J&;@@@@R#@@@AR#0@KH/K@K@@(@@@KK/K@@ (A#K@KKBS@@@@) "[I@*K0A[#MQ
)@@G@@@T#@T][-][)@AF@@@@PB@@@@A#@@KHA#0@KI[PI@@@L@0@@IR#)@KIAVZ@@@P;K@@[BT@@@@MR
)@@G@@)AB[A@(]@?(@Q-@@-)GCK#CKG)@@@@R#@@@@/,0@@@C8K@@KC8@@KW/,0@@@C/@@@@A3@@@@MS
)@@G@@R;@@@ BU@@@@)AJ[A@?CA=G[-]@T]@-#@T][1#@S@@/K@K@@'=@@@@R#@@K*/,0@@@/,0@@@MT
)@@G@@C8K@@+C8@@KZ/,0@@@BV@@@@)AR[A@(]@0K)SK0AK0A^C#@@@@@@@@A#@@@@O;@@W@A#K@KHMU
)@@G@@A#K@KIA#K@@@K8@@@[R#@@@@@@@@@@BW@@@@)AZ[I@?C#L#@T@@@@@@@@@@@;E0@@N;,)@@NMV
)@@G@@ @@@@] @@@@Q@@@@@@/K@KARA#@@KJR;@@@['=@@@@BX@@@@)A*[Q@?C^1][CK[@@@(^@@@[MW
)@@G@@R@S)@@C;K@@[/K@@A0 @@@@T/K@KA<O@)@@RQ@)@@@*@@@@QQ@)@@@BY@@@@)A2[Q@*[@K@^MX
)@@G@@G[)@@@R]K@K$/KF@@@%W]@@[RZ[@@[/BK@B#'^@@A<CA1@@[/KF@@@(^[@@[/KF@@[BZ@@@@MY
)@@G@@)A/[Y@*@@^@@RZ+@@['^@@A<CE1@@[R#@@@]/KF@@[ @D)@@P'K@@[/KF@@[2@D)@@R#@@@]MZ
)@@G@@N@T)@@CA@@@@)BB[Q@*^@K@@@@@@@@/KF@@@%@)@@LR@)@@GCXM@@['^@@A<CE2@@[/K@@BHNA
)@@G@@?9K@@LC(M@@@R@)@@GCB@@@@)BL[Y@?@@@@@R\[@@[/KF@@@!8@@@KR:[@@@/KF@@[%W]@@@NB
)@@G@@RZ[@@@/KF@@[%^]@@@RB[@@@/K@@A;CC@@@@)BW[Q@*[@^@@@@@@@@;*K@@G@@@@@@/KF@@@NC
)@@G@@'^@@B=9?]@@@'^@@B=9?[@@@/KF@@@/KF@@[%?]@@[CD@@@@)B&[Y@*@@@@@A:Q)@@A#A@@@ND
)@@G@@P;K@@B!8K@@ P;K@@];=@@@A;?@@@A;*@@@A;C@@@A;*K@@S;=@@@GCE@@@@)B1[Q@?@^@^@NE
)@@G@@@@@@@@RRH@@@@@@@@@/KF@@@'^@@B9R#)@@VR#K@@]'^@@B9R#)@@UR#K@@[/K@KB=CF@@@@NF
)@@G@@)B;[Y@*^@@@@W8@@@A @@@@GP;K@@[O#K@@I;CK@@SR#X@@@A:A@@@/G@@CGP;@@@KR:H@@@NG
)@@G@@AZA@@@CG@@@@)CA[Q@?@@K[@@@@@@@?8K@@LR#)@@]/K@KB9 @A)@@/K@KB9A\Q)@@ARA@@@NH
)@@G@@P;@@@[R;K@@A/^K@CDCH@@@@)CK[Q@?@^@^G[)@@@@AZA@@@RRI@@@A#A)@@R#@@K(R@)@@GNI
)@@G@@R#)@@]'^@@A<CE2@@[R#@@@]/K@@CQCI@@@@)CU[Q@*@@^@@@@@@@@/K@@C&!8K@@KAVA)@@NJ
)@@G@@RRI@@]ARA@@@A#@@@VO\I@@[T8@@@A;C@@@SR#I@@@CJ@@@@)C=[Q@?[@K[#@T@[@@P'K@@[NK
)@@G@@/K@@C0!8@@@BR:]@@@/K@@ (A#K@KKR;K@@[/,0@B2/K@@C$/,0@BZCK@@@@)C,[Q@(@K0AKNL
)@@G@@0A@^@@R#@@@]/K@@C/?8K@@LR:L@@@R#)@@[ @@@@O @@@KLA[)@KG/K@@ =A@()@@CL@@@@NM
)@@G@@)C8[Y@(@@@@@O\I@@[T8@@@A;C@@@SR#I@@@C]K@@GAZA@@@RRI@@@R@)@@GR#)@@]'^@@A<NN
)@@G@@CE1@@[CM@@@@)D#[Y@*@@^@@R#@@@]/K@@DM?8K@@LR:M@@@R#)@@]AVA@@@RRI@@]A:A)@@NO
)@@G@@R;@@@ ARA@@@A#@@@UCN@@@@)DI[Q@(@@@K0A@@@@@R#I@@@A#K@KL%@@@@PR;K@@[AZA@@@NP
)@@G@@RRI@@@R@)@@GR#)@@]'^@@A<CE2@@[CO@@@@)DS[Q@*@^G[)K0A@@@A#K@KL%OI@@]RVA@@@NQ
)@@G@@A#K@KL%@@@@UARA@@@A#@@@VO\I@@[T8@@@A;C@@@SCP@@@@)D+[Q@*[@K^@K0A@@@R:M@@@NR
)@@G@@A#@@KLR;@@@[/K@@D:/,0@BM/K@@D2**]@@]AVA)@@RRI@@]!OI@@]CQ@@@@)D?[Q@(@K^[@NS
)@@G@@^[@^@@/@@@D9R#C@@@/K@@EL8^0@D4G'@@@[/,0@B2/K@@D1/,0@BZ/K@@D0!8K@@KCR@@@@NT
)@@G@@)D6[Q@*K^[@^@^@@@@/K@@E#!8@@@BR:]@@@/K@@D2(^@@@[/K@@EI/,0@A\/K@@EL?8K@@LNU
)@@G@@R:W@@@CS@@@@)E@[I@*K[@K0AK^G[=@@@@@@/K@@C0R[)@KG/K@@ED*@@@KL/K@@D>!8K@@KNV
)@@G@@/K@@EIA@()@@P'K@@[CT@@@@)ED[I@?G[)K0AK[#@T@K0A@@*@@@KL/K@@D2A#@@KLR;@@@[NW
)@@G@@/K@@C0A#@@KKR;@@@[[,G@@@R#@@KGCU@@@@)EM[I@?[#@T@K0A[#@SK@@@@/K@@ >0@@@@NNX
)@@G@@A#@@KKR;@@@[[,G@@@R#@@KG/K@@ETR[)@KG/K@@EPCV@@@@)EV@&@?[#@T][1][4@)KG@&@NY
)@@G@@0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'=@@@@'=@@@@R#@@K%/K@@ QCW@@@@)KK[Y@0@@@@@NZ
)@@G@@ IN AR ERROR TABLETERNAL*** IN@@@@@@@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@CX@@@@OA
)@@G@@)KV[Y@0@@@@@BLDSMRLOAD  ING UNED DURNSFORMBE TRA WILL ORD   G: RECWARNINOB
)@@G@@TDEF *CY@@@@)K&@,@2)O]=#SO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[A@KQ@@[ @@OC
)@@G@@@[I@@@@@[@CS@@[@@=CZ@@@@@@^@@B@@F@@Y@[B@@ @[V@@@@@@@@@@@@@@@)@@@@@)@@@@@OD
)@@G@@)@@@@@@@@@EZ@@@@K:EDIT$       EDITR$      ECHAR$      ECOL$       ESKIP$OE
)@@G@@      ECLR$       ECOPY$      EPACK$      EDITX$      ECOLN$      EMSGR$OF
)@@G@@      EDPKT       LAST$D      MCORE$      RTABAD      FITBRC      C8SEQNOG
)@@G@@      SYM$TW      C14         C15         STABAD      C1          C9    OH
)@@G@@      NUMOAP      C17         RNMPTR      EMSG$       PRINT       PRINT$OI
)@@G@@      ERR$        BLDSMR      @@ @@@@@@@@@CURREC      @@A@@@@@@@@GBLDSMSOJ
)@@G@@      @@ @@@@@@@#0ARTDEF      @@ @@@@@@@^ LOCMDE      @@A@@@@@@@KM@@@@@@OK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[G1@@[+@^#^@K@@@@@@@@OM
)@@G@@      CL1604@@@@@@      CL0103@@@@@@      CL1505@@@@@?AA@@@@)@D[G1@A[+@KON
)@@G@@#^@*@@@@@@@@      CL1229@@@@@@      CL0281@@@@@@      CL1657@@@@@@AB@@@@OO
)@@G@@)@M[G1@G[+@W#^[@@@@@@@@@      CL0311@@@@@@      CL0298@@@@@@      CL0295OP
)@@G@@@@@@@@AC@@@@)@V[G1@M[+@*#^[S@@@@@@@@      CL413 @@@@@@      CL1640@@@@@@OQ
)@@G@@      CL1907@@@@@@AD@@@@)@=[G1@S[+@4#^[0@@@@@@@@      CL0721@@@@@@      OR
)@@G@@CL417 @@@@@@      CL415 @@@@@@AE@@@@)@![G1@Y[+[@#^]C@@@@@@@@      CL0008OS
)@@G@@@@@@@@      CL0231@@@@@@      CL0724@@@@@@AF@@@@)@6[G1@=[+[G#^])@@@@@@@@OT
)@@G@@      CL761 @@@@@@      CL0333@@@@@@      CL0014@@@@@@AG@@@@)@_[G1@%[+[SOU
)@@G@@#^]8@@@@@@@@      CL895 @@@@@@      CL893 @@@@@@      CL1522@@@@@@AH@@@@OV
)@@G@@)[C[G1@0[+[=#^#K@@@@@@@@      CL1141@@@@@@      CL1136@@@@@@      CL897 OW
)@@G@@@@@@@@AI@@@@)[L[G1@6[+[0#^#*@@@@@@@@      CL1623@@@@@@      CL0077@@@@@@OX
)@@G@@      CL2022@@@@@@AJ@@@@)[U[G1@/[+[/#^^@@@@@@@@@      CL1500@@@@@@      OY
)@@G@@CL1630@@@@@@      CL1042@@@@@@AK@@@@)[<[G1[][+]C#^^S@@@@@@@@      CL1717OZ
)@@G@@@@@@@@      CL1715@@@@@@      CL1713@@@@@@AL@@@@)[?[G1[C[+]O#^^0@@@@@@@@PA
)@@G@@      CL0015@@@@@@      CL210 @@@@@@      CL1737@@@@@@AM@@@@)[5[G1[I[+])PB
)@@G@@#^ C@@@@@@@@      CL1824@@@@@@      CL1819@@@@@@      CL1815@@@@@@AN@@@@PC
)@@G@@)["@/1[O[+]?@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      CL1722@@@@@@      CL1530PD
)@@G@@@@@@@@AO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@PE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@#@@B@@?@[Z@@[@[<@@@@@@@@@@@@@@@@@@@] SLT$  PF
)@@G@@      CL1505      CL0103      CL1604      CL1657      CL0281      CL1229PG
)@@G@@      CL0295      CL0298      CL0311      CL1907      CL1640      CL413 PH
)@@G@@      CL415       CL417       CL0721      CL0724      CL0231      CL0008PI
)@@G@@      CL0014      CL0333      CL761       CL1522      CL893       CL895 PJ
)@@G@@      CL897       CL1136      CL1141      CL2022      CL0077      CL1623PK
)@@G@@      CL1042      CL1630      CL1500      CL1713      CL1715      CL1717PL
)@@G@@      CL1737      CL210       CL0015      CL1815      CL1819      CL1824PM
)@@G@@      CL1530      CLSEG$      @@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@PN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*[@@@@*SDFF*@]@@@@SEG MAPO
)@@G@@IN    @^@@@@EQU STATUS/0,PERFSW/0   @]@@@@.           @C@@@@.         THPP
)@@G@@ESE ENTRY POINTS ARE NOT NEEDED FOR @ @@@@.         THE REORGANIZER.    PQ
)@@G@@@]@@@@.           @E@@@@EQU PGMSW/0    . PROGRAM SWITCH, 0=REORGANIZER, PR
)@@G@@1=EDITOR.   @]@@@@.           @E@@@@.         SOME ROUTINES ARE COMMON FPS
)@@G@@OR BOTH REORGANIZER     @C@@@@.         AND EDITOR. THEY MAY USE THIS SWPT
)@@G@@ITCH  @A@@@@.         TO BEHAVE DIFFERENTLY.    @]@@@@.           @ @@@@PU
)@@G@@IN REORG.MAINREORG,.INPUT     @C@@@@IN REORG.DBP$APS,.IIKREORG,.CF$AM,.EPV
)@@G@@QUATE       @A@@@@IN REORG.PARSE,.DEBUG,.F$ASG,.DB$AM @^@@@@IN REORG.COMPW
)@@G@@MON,.PACKPG @#@@@@IN REORG.KF$AM    @^@@@@.         CONFIG PROCESS@#@@@@PX
)@@G@@SEG CONF*MAIN     @A@@@@IN REORG.CONF-1,.CONF-2,.CONF-3     @#@@@@IN REOPY
)@@G@@RG.SYM$AM   @#@@@@IN REORG.SF$AM    @^@@@@.         DELETE PROCESS@#@@@@PZ
)@@G@@SEG DELETE*,CONF  @C@@@@IN REORG.REORDLT,.DLTPGE,.DECALC,.COMPACT       QA
)@@G@@@A@@@@.         SCAN/UNLOAD PROCESS       @#@@@@SEG SCAN*,DELETE  @^@@@@QB
)@@G@@IN REORG.SCAN,.UNLOAD   @^@@@@IN REORG.ART,.DF$AMW    @A@@@@.         KEQC
)@@G@@Y FILE SORT PROCESS     @D@@@@.         INVOKED ONLY IF VIA SET SUBCOMMAQD
)@@G@@ND ISSUED.  @#@@@@SEG SORT*,CONF    @#@@@@IN REORG.SORT     @^@@@@.     QE
)@@G@@    RELOAD PROCESS@#@@@@SEG RELOAD*,SCAN  @^@@@@IN REORG.RELOAD,.RELERR QF
)@@G@@@#@@@@IN REORG.RESTORE  @^@@@@IN REORG.CALC,.CLSEG    @]@@@@.           QG
)@@G@@@ @@@@.         USER CALC ROUTINES  @]@@@@.           @#@@@@IN REORG.DF$QH
)@@G@@AMR   @^@@@@.         PATCH PROCESS @^@@@@SEG PATCH*,RELOAD       @ @@@@QI
)@@G@@IN REORG.PATCH,.MERGE,.CHKPT  @B@@@@.         DUMMY PROCESS TO CLEAR OVEQJ
)@@G@@RLAY  @#@@@@SEG DUMMY*,CONF   @#@@@@IN REORG.DUMMY    @[@@@@END   ___C8)QK
)@@G@@EL D-JCD^ K?ET#CDI@A@@_@DDI^[MC(JELB 1MC(GD9[C)? 1MC(GC(MEK)@^@@_@DDI^[MQL
)@@G@@*[@@@@*SDFF*@]@@@@SEG MAIN    @ @@@@EQU ART/0,PACKC1/0,Z1/0,Z2/0  @]@@@@QM
)@@G@@.           @E@@@@.         THESE ENTRY POINTS ARE NOT NEEDED IN THE EDIQN
)@@G@@TOR.  @]@@@@.           @]@@@@EQU LD$TBL/0@]@@@@.           @C@@@@.     QO
)@@G@@    THIS IS THE ENTRY POINT OF THE TABLE  @C@@@@.         CONTAINING USEQP
)@@G@@R PROVIDED ROUTINES.    @B@@@@.         (SEE USER'S GUIDE FOR DETAILS)  QQ
)@@G@@@]@@@@.           @A@@@@EQU PGMSW/1   . SET SW=1 FOR EDITOR @A@@@@IN REOQR
)@@G@@RG.MAINED,.IIKED,.EQUATE      @A@@@@IN REORG.LET,.LOCATE,.CHANGE,.GETSETQS
)@@G@@@#@@@@IN REORG.PRINTL   @#@@@@IN REORG.INTRP    @#@@@@IN REORG.KF$AM    QT
)@@G@@@#@@@@IN REORG.CALL$WK  @^@@@@IN REORG.DEBUG,.GETVAR  @#@@@@IN REORG.GETQU
)@@G@@RSV   @A@@@@IN REORG.EDIT$WK,.SYM$AM,.DBP$APS   @^@@@@IN REORG.COMMON,.IQV
)@@G@@NPUT  @#@@@@IN REORG.INSERT   @G@@@@IN REORG.TF$DBP,.TF$CPY,.TF$IA,.TF$RQW
)@@G@@MR,.TF$IB,.TF$MVE,.TF$C,.TF$DLT     @#@@@@IN REORG.PRINTV   @]@@@@IN REOQX
)@@G@@RG.SNO@]@@@@.           @D@@@@.         THIS IS THE PARSER ROUTINE OF THQY
)@@G@@E EDITOR.   @C@@@@.         IT IS WRITTEN IN A SPECIAL LANGUAGE   @ @@@@QZ
)@@G@@.         CALLED 'SNOFLAKE'.  @B@@@@.         ONLY RELOCATABLE IS REALEARA
)@@G@@SED.  @]@@@@.           @#@@@@SEG BLDTF*MAIN    @^@@@@IN REORG.BLDT$F,.DRB
)@@G@@F$AMR @^@@@@SEG BLDCTBL*,BLDTF      @#@@@@IN REORG.RDCTBL   @#@@@@IN REORC
)@@G@@RG.CF$AM    @#@@@@SEG BLDDF*,BLDTF  @^@@@@IN REORG.BLDD$F,.DF$AMW @#@@@@RD
)@@G@@SEG PINIT*,BLDTF  @#@@@@IN REORG.PINIT    @#@@@@SEG PERF*PINIT    @^@@@@RE
)@@G@@IN REORG.PINPUT,.IFWKR  @#@@@@IN REORG.PERFORM  @#@@@@SEG PROC*,PERF    RF
)@@G@@@#@@@@IN REORG.PROC     @]@@@@SEG ED*PROC @#@@@@IN REORG.ED/PROC  @]@@@@RG
)@@G@@.           @D@@@@.         THIS IS A UNIVAC LIKE EDITOR PROCESSOR.     RH
)@@G@@@B@@@@.         ONLY RELOCATABLE IS REALEASED.  @]@@@@.           @#@@@@RI
)@@G@@SEG DUMMY*,ED     @]@@@@.           @D@@@@.         THIS SEGMENT IS NEEDRJ
)@@G@@ED TO RE-INITIALIZE     @A@@@@.         THE ED/PROC ROUTINE.      @]@@@@RK
)@@G@@.           @#@@@@IN REORG.DUMMY    @[@@@@END   ___E)? 1DC1RDTM^@)@^@@_@RL
)@@G@@DDI^[MC(JELB 1KC(MC1JELH@^@@_@ET C8)E[MD9# K?E[ ELA^@)@^@@_@DDI^[MC(JELBRM
)@@G@@ 1KELJCS)^@)@#@@_@ET C8)C(^ LKELJCS)@^@@_@DDI^[MC(JELB 1 C)\E[MD9#@#@@_@RN
)@@G@@@@^@@@@@^@@@@@^@@9@#*@@@NUMREC      @C@@@@@@@@[=NUMOAP      @C@@@@@@@@@YRO
)@@G@@C1SIZE      @C@@@@@@@[:4C5SIZE      @C@@@@@@@[8DC6SIZE      @C@@@@@@@@[FRP
)@@G@@C7SIZE      @C@@@@@@@[$CC8SIZE      @C@@@@@@@@D4TON$        @C@@@@@@@@@@RQ
)@@G@@TOFF$       @C@@@@@@@@@@SNOOPY      @C@@@@@@@@@@SNFLG$      @C@@@@@@@@@@RR
)@@G@@BLKSZ       @C@@@@@@@@I@BUFSZ       @C@@@@@@@@X8BLKSZ1      @C@@@@@@@@@)RS
)@@G@@MAXBLK      @C@@@@@@@[ICSORTCORE    @C@@@@@@@[X0ZAP1        @C@@@@@@@[ICRT
)@@G@@ZAP2        @C@@@@@@@@@2ACTNUM      @C@@@@@@@@@[PGPBLK      @C@@@@@@@@@ERU
)@@G@@ZWRNCNT     @C@@@@@@@@@FKF$WKS      @C@@@@@@@@@2C14SZX      @C@@@@@@@@B4RV
)@@G@@TT1SZ       @C@@@@@@@@B4TT2SZ       @C@@@@@@@@I^Z2MULT      @C@@@@@@@@@]RW
)@@G@@BLSIZE      @C@@@@@@@@@ NUMBLK      @C@@@@@@@@@OC4OVEN      @C@@@@@@@@[=RX
)@@G@@RNGSIZ      @C@@@@@@@@#CBFISIZ      @C@@@@@@@@@*MRGENT      @C@@@@@@@@]QRY
)@@G@@C4SIZE      @C@@@@@@@@DSMRGSIZ      @C@@@@@@@@^?MXRSIZ      @C@@@@@@@@E/RZ
)@@G@@DMSLEV5     @C@@@@@@@@@@Z2LINK      @C@@@@@@@@@^SCSBNO      @C@@@@@@@@@CSA
)@@G@@SCSPGS      @C@@@@@@@@@ SCDBPGS     @C@@@@@@@@@OGAP         @C@@@@@@@@@ SB
)@@G@@C14SZ       @C@@@@@@@@")C15SZ       @C@@@@@@@@ZKIBNUM       @C@@@@@@@@@ESC
)@@G@@IOVFNUM     @C@@@@@@@@@]IFILL       @C@@@@@@@@[UIBSIZE      @C@@@@@@@@W@SD
)@@G@@TBSIZE      @C@@@@@@@@W@TBNUM       @C@@@@@@@@@#IOVBUFF     @C@@@@@@@@8@SE
)@@G@@EXTRAW      @C@@@@@@@@@@INDNUM      @C@@@@@@@@H_IDBNUM      @C@@@@@@@@G)SF
)@@G@@TBSECT      @C@@@@@@@@[@IBSECT      @C@@@@@@@@[@TOTCOR      @C@@@@@@@BW@SG
)@@G@@INDBLK      @C@@@@@@@@HM@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SI
)@@G@@)@@[U@@^@@@@[,1@@@[21@@@/K]@@CR@)@@NO@K@@MR@P@@@C'0@@ /['@@@W9)@@A;H)@@=SJ
)@@G@@C >@@[AA@@@@)@F[U@@@@@@@[(M@@@[!M@@@[1M@@@[5M@@@/?L@@@[-M)@@/KE@@@G9)@@[SK
)@@G@@[+1@@@[&1@@@[%1@@@AB@@@@)@Q[UK@@@K@@/?0@@S:=^@@@:*^@@@:?^@@@:0^@@@:4^@@@SL
)@@G@@/?3@@@/K#@@[%)^)@@/?K@@K[>M@@@AC@@@@)@-[U@@@@@@@[*^@@@[=^@@@[)^@@@/?3@@@SM
)@@G@@[4^)@@/KE@@@Q[@@@M&9@@@[R@0@@NW9)@@A;H)@@=AD@@@@)@?[U^@@@K@@/?K@@\C0]@@@SN
)@@G@@C?]@@@C*]@@@C=]@@@C)]@@@/?L@@@C4])@@/?0@@$[0^@@@[?^@@@AE@@@@)@7[U@@@@@@@SO
)@@G@@&8)@@[R@K@@NW9)@@A;H)@@=/KE@@@Q[@@@M&.@__"P@0@@NR80@@ W9)@@A;H)@@=AF@@@@SP
)@@G@@)[][U@@[#[@@/,)@@@AA)@@]/KE@@@Q@)@@M&/)__"P@K@@NR8K@@ W9)@@A;H)@@=/KE@@@SQ
)@@G@@Q@)@@MAG@@@@)[H[M^[#@K0K-^[#@@A^K@@[/K@@[IH9)@@Q'=@@@@R#@@@@O8K@@QA^K@@@SR
)@@G@@/K@@[Q?9)@@RQ@P@@@AH@@@@)[R@<#[#[] #@@@@@@)@@@S@@@@@@@@@@@@@@@@@@@@[@@@@SS
)@@G@@@[Q@@@/K@K@]'=@@@@R#@@@[[!)@@[AI@@@@)[V[##[@K0^G^G^C=G@@@@@@@@@@@@/K@K@^ST
)@@G@@'=@@@@R#@@@#A^K@@#R@P@@@[D)@@#/,)@@@AA)@@^AJ@@@@)@#@K@)[<[]@^@@@@@Q;K@@@SU
)@@G@@C)I)@@/,@@[(C=I@@@C*I@@@C?I@@@C0I@@@C4I@@@@@@@@@@@@@@@AK@@@@)[:[U@@^@@@@SV
)@@G@@/?3@@@[)^)@@/?K@[?C=]@@@C*]@@@C?]@@@C0]@@@C4]@@@/?L@@@C)])@@/KC@@@AL@@@@SW
)@@G@@)[6@2@^@@@@@)@ @S* @*@@@@[C@@I@[#@[@@[^@@//?0@[4[=^@@@[*^@@@[?^@@@[0^@@@SX
)@@G@@[4^@@@AM@@@@)@C[K* @* @* @@@@@NUMBERATIVE 1: NEGERROR @[ @@7@[A@@1@[B@@%SY
)@@G@@@[B@@<@[D@@U@[^@@QAN@@@@)@M[S@@@@@@@OR IN 3: ERRERROR RFLOW CK OVE2: STASZ
)@@G@@ERROR T     CONTEXLEGAL  IN ILAO@@@@)@X[S@@@@@@@ETIC OARITHMOR IN 4: ERRTA
)@@G@@ERROR N     VERSIOIC CONITHMET-TO-ARSTRINGAP@@@@)@*[S@@@@@@@6: RETERROR TB
)@@G@@EXT   L CONTILLEGANG IN L STRI5: NULERROR ON    PERATIAQ@@@@)@3[S@@@@@@@TC
)@@G@@URE:  PROCEDT GOTONDIRECALID I7: INVERROR O     EL ZEROM LEVURN FRAR@@@@TD
)@@G@@)@"@*@@@@@@@)[/@V#[] @@@@@@@@@/K@@]K'=@@@@R#@@@B      ENT:  STATEM      TE
)@@G@@      AS@@@@)[_[F#[] @K0K-K^G^CO@@@@/K@@]K'=@@@@R#@@@E/K@@]K'=@@@@R#@@@DTF
)@@G@@/K@@]K'=@@@@R#@@@CAT@@@@)]C[F#[] @K0K-K^G^COG@@@R#@@@ '=@@@@R#@@@H/K@@]KTG
)@@G@@'=@@@@R#@@@G/K@@]K'=@@@@R#@@@FAU@@@@)]L[N] #[] ]@@K@@@O^>@@@/,)@@"/];@@@TH
)@@G@@L])@@MC >@@[CE>@@['=@@@@'=@@@@R#@@@A'=@@@@AV@@@@)]V[N#[@@^@K0K@@@@/K@@]$TI
)@@G@@?#@@[^C[)@@S/]0@]5H'0@@[E#@@@S')[)@@C9K@@-/F@@]+O@K@[#AW@@@@)]>[N#[@[@^@TJ
)@@G@@^@@@@@/[0@]5W90@@E;H0@@=/K@@]*T90@@E/K@@]??#@@@NC90@@E/K@@]\C[0@[^AX@@@@TK
)@@G@@)]\[E@^@@@@@@@@[C@@@@@@@/KF@@@[A>@@[H])@@R/A0@]?H'0@@[')[)@@G9K@@0W[K@@NTL
)@@G@@ @@@@LAY@@@@)[#@K(+@@@@@)]8@'K@K0@@@Q^&@@@&8)@@[R@K@[ /KF@@@ @ K@@8A@@]/TM
)@@G@@CBA@@[DO]"K@@@[@@MAZ@@@@)]_[U@K[@@@@T9)@@E')[)@@H;@@@[C"0__"/K@@#E%8@@@-TN
)@@G@@/K@@#B:8@@@+')[)@@ @@@@MC'0@@[BA@@@@)#E[]^@K@@@@)[ @C(+@@@@@@@[@[,/KF@@@TO
)@@G@@[[>K@@ @@@@M/ )@#KT[)@@R8A@@#CG[)@@GH8@@@0BB@@@@)#M[V@@@[@@@G9)@@[/K@@#YTP
)@@G@@>#1@@@O8K@@] @@@@MR@K@@J/KF@@@H9@@@[/ED@@@;&G@@@')H)[<BC@@@@)#X[N@^[@[@@TQ
)@@G@@@@@@@@&9@@@[/[:@@@C >@@[/K@@^M?  @@[/K[K@[8^)@#T/K@@#T>#-@@@/K@@#TBD@@@@TR
)@@G@@)#$[EK0[@^@K@@@@@@@@@@@@/K@@^M/H:@@@8^)@#:')#)@@')H)[<H9)@@[H[@@@MR@0@[ATS
)@@G@@Q  @@@BE@@@@)[A@C(+@@@@@)#0[]K[@@K@@/ @@#1H9@@@[ @@@@N;AG@@@/E@@#8;&G@@@TT
)@@G@@')H)[<C90@@[@@[@@VBF@@@@)#8[V@@K@@K@/K@@#;/[D@@@/KF@@@&;K@@[H8)@@[Q;K@@ TU
)@@G@@8#K@#_&;K@@@/ 9@@@/[F@@@/ )@^[BG@@@@)^#[U@@*]@@@;&G@@@')[)@@8^)@^G&8K@@[TV
)@@G@@R8K@[, @@@@P @@@@OC[0@[BC >@@[&8)@@[Q@>@@@BH@@@@)^I[U^@[@@@@/KJK@@CDJ@@[TW
)@@G@@QB\@@[Q3Z@@@/K@@^M*4J@@@G80@@]/KF@@@8^)@^G;AG@@@)[0@@OBI@@@@)[B@**@@@@@@TX
)@@G@@)^T@<#[] ]@@C >@@['=@@@@'=@@@@R#@@[BRFLOW CK OVE2: STAERROR @[^@[CBJ@@@@TY
)@@G@@)^X[U@@@@@@@9.&)@@/JF@@@H;@@@[&9)@@#;!-@@@;H-@@@9!>K@@P@K@@MR8K@[CT9)@@ATZ
)@@G@@/[:@@@BK@@@@)^*[N@@K0[#@@@@@@@CEP@@[!EP@@[KA@@[WCAA@@[CBP@@[CF@@[WR[0@@ UA
)@@G@@/KAK@@P9)@@[/K@@^>BL@@@@)^2[N#@@[@^@@@@@@@/]@@ QH]@@@P/])@ Q[A @@[CE @@[UB
)@@G@@!E @@[G]@@@TC])@@OH]@@@S[EK@[WBM@@@@)^/[N#@K@^[@^@@@@@/,)@@"C[)@@R/K@@ AUC
)@@G@@/,)@[^C[)@@RG]0@@OH'0@@[/I)@ ^GA0@@SCA0@[WBN@@@@) A[E^[@K0K0K^[#@@@@@@@@UD
)@@G@@O@K@[I/,)@@-/K@@ KO@0@[HO@K@[G/,)@@7/I)@ HC[)@@RG]0@@QBO@@@@) J[N#@@^@()UE
)@@G@@)@@@@@1@B@@@/,)@A,R9K@[V8 @@ N')#)@@')[)@@H'@@@[O  @@@O^>@@@O@0@[JBP@@@@UF
)@@G@@) T@'@^[@@@@)[G@K(+O1@@@@@[@@(@@[@@1/K@@[F/K@@[V%9)@@)C5>@@@R])@@FR[K@@BUG
)@@G@@/KF@@@BQ@@@@)[I@K(+O1@@@) )@'@K0K@@@[#\@@@/\@@[_$B0@]CA]_@@[A]Z@@@N@)@@IUH
)@@G@@Q;K@@@@@[@[6@@[@[,BR@@@@) $[M@E@-)) @@@@@@A@Z@@@R8K@ 7/\@@[_$B0@]CA@Z@@[UI
)@@G@@R8K@ "A Z@@@[3J@@@C;@@@[*@@@@SBS@@@@) 1[M[#[@[@K@@@@@@G80@@^8^@@ //K@@ 'UJ
)@@G@@*0J@@]/KJK@^/\@@[_$B0@]C[^\@@[[DJ@@[[0Z@@@BT@@@@) ;[MK^[#@@@@@@@@@T8@@@AUK
)@@G@@H@@@[]QBC@@[&;@@@[P'@@@^R]@@[#^^)@[V/K@@ 1')H)[</KJK@@BU@@@@)A [MK0[#@@@UL
)@@G@@@@@@@@$ 0@@JG80@@^C#K@[AC#@@[^R[0@@C[C@@[WH@@@@KCCC@@[[^@@[WG0C@@@BV@@@@UM
)@@G@@)AJ[N@^@^@K@@@@@@@R R@@@ 4[@@@/K@@ANO8K@@]/K@@AR=#[@@@R8R@@]/K@@AI>#R@@@UN
)@@G@@/K@@A?BW@@@@)AT[MES]A@-)@@@@@@H[)@@NG1$@@@T.)__9H $@@[[10@[TC11@@@[[)@[TUO
)@@G@@C -@@[R9)@[T ^ @@[BX@@@@)A<[N#[@^@*@)C@@@@C@0@[#/K@@[F/K@@[V%9)@@)C5>@@@UP
)@@G@@R')@AI/K@@AI1@ @@@/,)@A,[[)@[UBY@@@@)A![U@@@@@@@Q  @@@&9@@@[C])@@NC 6@@[UQ
)@@G@@! 6@@[/['@@@H 5@@[CD5@@[/KE@@@(^A@@[/KJK@[BZ@@@@)A8[M^G^G@K@@@@@@@O[@@@OUR
)@@G@@W'@@@A @@@@O/]K@B#G])@@PCAP@@[R@K@[LR@0@[KQ^&@@@&8)@@[CA@@@@)B][N@^@@K^@US
)@@G@@@@@@@@O@0@@P/K@@BH/[0@BLM[])@@N@K@@MW9)@@A @@@@M/K@@BF*0A@@@/AK@BFCB@@@@UT
)@@G@@)BG@'@K@@@@@)[K@K(+O1@@@@@[@[,@@[@[6/KE@@@[A>@@[8^0@BI')#)@@')[)@@H90@@[UU
)@@G@@O0Q@@@CC@@@@)BN[F#[@K0[#[#[#[#@@@@@@N[K@[QN[@@[PC#0@[OC#)@[N&;K@@[&;)@@[UV
)@@G@@R#0@[M/ 0@B<C[0@[XCD@@@@)BW[N#[#@^G@K0K^G@R#0@[Y/K@@BY:[)@[Z/KE@@@&'0@@@UW
)@@G@@[[0@[XG90@@[N@0@@JN[0@[SN[)@[RCE@@@@)B&@'K0[#[@K@@@@@@)[M@C?@@@@@@__.@]AUX
)@@G@@/K@@BQ/\@@[_$B0@]CC90@@@[[\@@[C[)@[Z[[_@@@CF@@@@)[N@0@@@@@@@)[X@S@@@@@@@UY
)@@G@@@@@@@@@@@@@@@@@@@@)@@@@@^@@@@@]@@@@@[@@@@@K@@@@@C@@@@@CG@@@@)B!@U@)]C@C/UZ
)@@G@@S@@@@@)B0@<#[#@K0@C )@^MP8K@@[R^K@^LR#@@#*@@@@[=/KF@@@OY;@@@CGF@@@CH@@@@VA
)@@G@@)B4[MK0^@!))]A@-)@[[)@[ZC[\@@[[@0@[YG80@@]/K@@B_:80@]A/ )@B_H9)@@[C[)@[XVB
)@@G@@[[-@@@CI@@@@)B"[MK0^G^G@K0K0@@M@-)@@R@)@5FR@K@5EN8K@@TM@-)@@R@)@5DR@K@5CVC
)@@G@@N8K@@ [[)@[XC[\@@@CJ@@@@)CC[N#[#[#@@K^G^G@A@K@#_^@K@#"/K@@CGO'0@@[/KF@@@VD
)@@G@@*4F@@@OY;@@@R@)@^@R@K@#_N@K@#"CK@@@@)CM[F#@K0K0[#[#@@@@@@@@@M@M)@@R@)@5DVE
)@@G@@R@K@5CN8K@@ M@M)@@R@)@5FR@K@5EN8K@@TA@)@^@CL@@@@)CV[F#[#@[#[#[#@@@@@@@@@VF
)@@G@@O;@@@[[ )@^MCD)@^M!D)@^MC ?@@@R;F0@@&'0@@[R@)@^@R@K@#_CM@@@@)C=[F#@K0K0KVG
)@@G@@0K0K^G]&@@@@R9K@^H ^@@^I/,)@BNC[)@#*[ )@^OCD)@^OAB@@^NR;F0@@AB@@^LCN@@@@VH
)@@G@@)C![E())CS G]&]@-)-)O3@@R9K@@@C @@^'QB)@^9/,)@A,R9)@^LR9K@^9 ^@@^'/,)@A,VI
)@@G@@R9)@MMCO@@@@)C6[F#@*C[N@())CS G]&@@@R9)@M-R9K@M$ ^@@M*/,0@^:R9)@^AR9K@^9VJ
)@@G@@/,0@ )R'K@D\C#@K^CCP@@@@)C_[F@ES G^@()O0K^G^G@@@C @@M*QB)@M$/,)@A,R9)@^9VK
)@@G@@R9K@M$/,)@A,R9)@^6R9K@M$/,)@A,CQ@@@@)DC[E(&-)O^[@K0K0ET*S@@@C#@K^CR9K@[XVL
)@@G@@C @@^TQB)@^S/K@@Z7/,0@ )R'K@DHC#@K^CR9K@[FCR@@@@)DL[E*C]@-)-)O3K0E]@@@@@VM
)@@G@@/,0@ )R'K@EQC#@K^CR9K@[(C @@^TQB)@^S/K@@FK/,0@ )R'K@DOCS@@@@)DU[F#[#@(&-VN
)@@G@@)O^@()O0K@@@/,0@^:R9)@ZKR9K@^S/,0@ )R'K@D<C#@K^CR9K@[4C @@^TQB)@^SCT@@@@VO
)@@G@@)D<[F#[#[#[#[@K^[#@()@@@R9K@MI ^@@MJ/K@@D\/K@@)S/ )@D%H[)KZNC[)KZQ[[)KZQVP
)@@G@@C )@^TCU@@@@)D?[E())C]A[N@())CS G@@@R9K@^6 ^@@^7/,)@A,R9)@^9R9K@^S ^@@^TVQ
)@@G@@/K@@)Y/,)@A,R9)@^SCV@@@@)D5[E())CS G]&]@-)-)O3@@R9K@[8C @@^TQB)@^S/,)@A,VR
)@@G@@R9)@M-R9K@^9 ^@@^'/,)@A,R9)@ZTCW@@@@)D"[F#@*C]@-)-)O3K0E@@@@R'K@ELC#@K^CVS
)@@G@@R9K@]^C @@^TQB)@^S/K@@S!/,0@ )R'K@E]C#@K^CCX@@@@)EB[F@ES G^[#@()O0K^@@@@VT
)@@G@@/K@@)Y/,)@A,R9)@^SR9K@MI ^@@MJ/,0@^:R9)@ZKR9K@^S/,0@ )CY@@@@)EK[F@K0ES GVU
)@@G@@^[@K0ES G@@@R9)@^6R9K@^S ^@@^T/K@@)Y/,)@A,R9)@^SR9K@MI ^@@MJ/K@@EQCZ@@@@VV
)@@G@@)ET[F@K0K0ET*S [@ES G@@@R9)@Z-R9K@^S/,0@ )R'K@)SC#@K^CR9K@]CC @@^TQB)@^SVW
)@@G@@/,)@A,DA@@@@)E+[F@K0ES G^[@K0ES G@@@R9)@Z=R9K@^( ^@@^%/K@@)Y/,)@A,R9)@^SVX
)@@G@@R9K@MI ^@@MJ/,0@^:DB@@@@)E:[F@K^G]&[N[@K^G]&@@@@R9K@^( ^@@^%/K@@GC/,)@A,VY
)@@G@@R9)@Z$R9K@^( ^@@^%/K@@GC/,)@A,DC@@@@)E4[E())C]A[N@())C]A@@@@ ^@@^%/K@@HMVZ
)@@G@@/,)@A,R9)@Z!R9K@^( ^@@^%/K@@HM/,)@A,R9)@Z%DD@@@@)E.[E()O0K^[#@()O0K^@@@@WA
)@@G@@/K@@GC/,)@A,R9)@Z0R9K@^( ^@@^%/K@@HB/,)@A,R9)@M-R9K@^(DE@@@@)FA[F#@()O0KWB
)@@G@@^[#@()O0K@@@/,)@A,R9)@Z6R9K@^( ^@@^%/K@@GC/,)@A,R9)@Z3R9K@^( ^@@^%DF@@@@WC
)@@G@@)FJ[F@K0ES G^[@K0ES G@@@R9)@Z6R9K@^( ^@@^%/K@@GR/,)@A,R9)@Z9R9K@^( ^@@^%WD
)@@G@@/K@@GRDG@@@@)FS[F@K^G]&[N[@K^G]&@@@@R9K@^( ^@@^%/K@@F</,)@A,R9)@Z/R9K@^(WE
)@@G@@ ^@@^%/K@@GR/,)@A,DH@@@@)F-[E())CS G]&]@O0ESC@@@/,)@A,R9)@^9R9K@M$/,)@A,WF
)@@G@@R9)@M-R9K@M$ ^@@M*/,)@A,R9)@Z_DI@@@@)F%[E()O0K^G^G]&UA[KK@@@/,0@ )R'K@)SWG
)@@G@@C#@K^CR9K@]GC @@M*QB)@M$/,)@A,R9)@M-R9K@M$DJ@@@@)F3[F#@()O0K]&[N[@ES G@@WH
)@@G@@R9)@) R9K@M$/,)@A,R9)@^(R9K@M$/,)@A,R9)@)]R9K@M$ ^@@M*DK@@@@)F/[F@ES G^@WI
)@@G@@()O0K^G]&@@@R9K@^N ^@@^O/,)@A,R9)@)DR9K@M$/,)@A,R9)@MFR9K@M$/,)@A,DL@@@@WJ
)@@G@@)G [E())C]A[N@()) G]&@@@R9)@^(R9K@M$/,)@A,R9)@)GR9K@M$ ^@@M*/K@@)&/,)@A,WK
)@@G@@R9)@M$DM@@@@)GI[F@ES G^[#@()O0K^@@@@/K@@)&/,)@A,R9)@M$R9K@^N ^@@^O/,)@A,WL
)@@G@@R9)@) R9K@M$/,)@A,DN@@@@)GR[F#@()O0K]&[N[@ES G@@R9)@)JR9K@M$/,)@A,R9)@^9WM
)@@G@@R9K@M$/,)@A,R9)@M-R9K@M$ ^@@M*DO@@@@)G)[F@K0ES G^[#[#@(&-)@@C#@K^CR9K@]%WN
)@@G@@C @@^'QB)@^9/,)@A,R9)@M$R9K@^9 ^@@^'/,)@A,DP@@@@)G([E*C]A]A[NH#@*C]@@@@@WO
)@@G@@/K@@)S/,0@ )R'K@G2C#@K^CR9K@#CC @@^!QB)@^?/,0@ )R'K@)SDQ@@@@)G2[F#@()O0KWP
)@@G@@]&[N[@ES G@@R9)@) R9K@M$/,)@A,R9)@^(R9K@M$/,)@A,R9)@)QR9K@M$ ^@@M*DR@@@@WQ
)@@G@@)G;[F@ES G^@()O0K^G]&@@@R9K@^N ^@@^O/,)@A,R9)@)TR9K@M$/,)@A,R9)@^?R9K@M$WR
)@@G@@/,)@A,DS@@@@)H^[E())C]A]A[NH#@*C@@@@/,0@ )R'K@HIC#@K^CR9K@#KC @@^'QB)@^9WS
)@@G@@/K@@)&/,)@A,R9)@M$DT@@@@)HH[F@K0ES G^[#@()O0K@@@/,)@A,R9)@M-R9K@M$ ^@@M*WT
)@@G@@/,)@A,R9)@)XR9K@^9 ^@@^'/K@@HMDU@@@@)HQ[E()O0K]&[N[@K0ES G@@R9)@M$R9K@^9WU
)@@G@@ ^@@^'/,)@A,R9)@M-R9K@M$/,)@A,R9)@^9R9K@M$DV@@@@)HZ[F@K0K0ET*S [@K0K0@@@WV
)@@G@@C @@^!QB)@^?/,0@ )R'K@G>C#@K^CR9K@#SC @@^'QB)@^9/,)@A,DW@@@@)H*[E(&-)O^[WW
)@@G@@@K0K0ET*S@@@C#@K^CR9K@^UC @@FGQB)@FF/K@@)S/,0@ )R'K@H!C#@K^CR9K@^MDX@@@@WX
)@@G@@)H1[E*C]@-)O0ESC[N@()@@@R9)@)TR9K@M$/,)@A,R9)@^?R9K@M$ ^@@M*/K@@)S/,0@ )WY
)@@G@@R'K@H4DY@@@@)H'[F@K0ES G^[#@()O0K@@@/,)@A,R9)@))R9K@M$ ^@@M*/,)@A,R9)@M$WZ
)@@G@@R9K@^? ^@@^!/,)@A,DZ@@@@)I#[E()O0K]&[N[@ES G^@@@/,)@A,R9)@^?R9K@M$/,)@A,XA
)@@G@@R9)@) R9K@M$/,)@A,R9)@^(R9K@M$EA@@@@)IG[E()O0K]&[N[@K0ES G@@R9)@M$R9K@^NXB
)@@G@@ ^@@^O/,)@A,R9)@)TR9K@M$/,)@A,R9)@FFR9K@M$EB@@@@)IP[F@K^G]&[N[@K^G]&@@@@XC
)@@G@@R9K@^( ^@@^%/K@@I)/,)@A,R9)@Z=R9K@^( ^@@^%/K@@)&/,)@A,EC@@@@)IY[E())CSCSXD
)@@G@@ G4G]))CS@@@ ^@@M*/,0@ )R'K@)SC#@K^CR9K@^+C @@^7QB)@^6/,)@A,R9)@Z$ED@@@@XE
)@@G@@)I$[E()O0K]&[N[@K0ES G@@R9)@M$R9K@^9 ^@@^'/,)@A,R9)@^9R9K@M$/,)@A,R9)@M-XF
)@@G@@R9K@M$EE@@@@)I0[F@K0K0ET*S [@K0ES@@@R9K@)< ^@@)=/,0@ )R'K@I7C#@K^CR9K@^&XG
)@@G@@C @@^'QB)@^9/,)@A,EF@@@@)I9[E())CSCS G4G])) G@@@R9K@^9/,0@ )R'K@)SC#@K^CXH
)@@G@@R9K@ #C @@^'QB)@^9/,)@A,R9)@^6EG@@@@)J][E())CSCS G4G]))C@@@@/K@@JT/,0@ )XI
)@@G@@R'K@JFC#@K^CR9K@AMC @@^%QB)@^(/,0@^:R9)@^AEH@@@@)JF[F#[#@(&-)O^[@K0K0@@@XJ
)@@G@@C @@L+QB)@L-/K@@)S/,0@ )R'K@JMC#@K^CR9K@AQC @@FKQB)@FJEI@@@@)JO[E(&-)O^[XK
)@@G@@@K0K0K0K0@@@9()@^^9!)@[V[[)KZQC )@FK/K@@)S/,0@ )R'K@JTC#@K^CR9K@AYEJ@@@@XL
)@@G@@)JX[F#@*CSC[50A]@-)-)@@@:8@@@[9()@[V9!)@^^/@@@J3@[@@ZQ/K@@B!A]0@[ZR'0@J-XM
)@@G@@A#0@[YEK@@@@)J&[F@^G^[#[#@()O0K@@@@@/,)@A,R9)@^FR9K@M$ ^@@M* @@@^G/K@@J:XN
)@@G@@9()@^F9!?@@@/K@@J%EL@@@@)J\[F#@()O0K^G^G^G^G^G@@A#0@[Y9()@^^9!)@[V[[)KZQXO
)@@G@@C )@L+/,)@A,R9)@M$R9K@L1 ^@@L2EM@@@@)J8[E*CSC[50A]@-)-)C@@@@/K@@K^:8@@@[XP
)@@G@@9()@[V9!)@^^/@@@KH@[@@ZQ/K@@B!A]0@[ZR'0@J;EN@@@@)K[[EK0K^G^G]&[N[@K0@@@@XQ
)@@G@@ ^@@L5/,)@A,R9)@^FR9K@M$ ^@@M* @@@^G/K@@K 9()@^F9!?@@@EO@@@@)KE[E()O0K^GXR
)@@G@@]&[N[@ES G@@R9)@)DR9K@M$/,)@A,R9)@FJR9K@M$ ^@@M*/,)@A,R9)@M$R9K@L4EP@@@@XS
)@@G@@)KN[F@K0ES G^[#[#[#@@@@@;P)@@=C[)KZQ[[)KZQC )@FK/,)@A,R9)@M$R9K@FJ ^@@FKXT
)@@G@@/,)@A,EQ@@@@)KW[F#[@^G^G^G^@K0@@@@@@[[0KZQ @@@@N/ 0@K=S[)K)%C[)KZQ[[)KZQXU
)@@G@@ @@@@M/ )@KZW[)K)%ER@@@@)K>[F#[#[#[#@(&-)O^[#@@@ ^@@L"/,0@ )R'K@K!C#@K^CXV
)@@G@@R9K@A&C @@FKQB)@FJ[[)K)!C[)KZQES@@@@)K,[E()O0K^G]&[N[@K0ES@@R9K@L' ^@@L;XW
)@@G@@/,)@A,R9)@)3R9K@L7 ^@@L8/,)@A,R9)@)0R9K@L.ET@@@@)K7[E())CS G]&]@-)-)O3@@XX
)@@G@@R9K@A.C @@^'QB)@^9/,)@A,R9)@ZTR9K@^? ^@@^!/,)@A,R9)@)3EU@@@@)L@[F#@*C]A[XY
)@@G@@N@()) G]&@@@R9)@^9R9K@M$/,)@A,R9)@M-R9K@M$ ^@@M*/,0@ )R'K@L(C#@K^CEV@@@@XZ
)@@G@@)LD[F@K0ES G^[#[#@(&-)@@C#@K^CR9K@BCC @@^'QB)@^9/,)@A,R9)@M$R9K@^9 ^@@^'YA
)@@G@@/,)@A,EW@@@@)LM[E*C]A]A[NH#@*C]A@@@@ ^@@L;/,0@ )R'K@L(C#@K^CR9K@DAC @@^!YB
)@@G@@QB)@^?/,0@ )R'K@)SEX@@@@)LV[E()O0K^G]&[N[@ES G@@R9)@)TR9K@M$/,)@A,R9)@^?YC
)@@G@@R9K@M$ ^@@M*/,)@A,R9)@Z=R9K@L'EY@@@@)L=[F@K0ES G^[#@()O0K@@@/,)@A,R9)@L.YD
)@@G@@R9K@M$ ^@@M*/,)@A,R9)@M$R9K@^? ^@@^!/,)@A,EZ@@@@)L![E()O0K]&[N[@ES G^@@@YE
)@@G@@/,)@A,R9)@L7R9K@M$/,)@A,R9)@)9R9K@M$/,)@A,R9)@^(R9K@M$FA@@@@)L6[E()O0K]&YF
)@@G@@[N[@ES G^@@@/,)@A,R9)@^?R9K@M$/,)@A,R9)@).R9K@M$/,)@A,R9)@L'R9K@M$FB@@@@YG
)@@G@@)L_[E()O0K]&[N[@ES G^@@@/,)@A,R9)@L4R9K@M$/,)@A,R9)@FJR9K@M$/,)@A,R9)@L1YH
)@@G@@R9K@M$FC@@@@)MC[E()O0K]&[N[@K0ES G@@R9)@M$R9K@^N ^@@^O/,)@A,R9)@)DR9K@M$YI
)@@G@@/,)@A,R9)@L-R9K@M$FD@@@@)ML[F@K0K0K0^G^@K0@@@@@@[[)KZQ @@@@M/ )@MTW[)K)%YJ
)@@G@@;P)@@=C[)KZQ[[)KZQC )@^O/,)@A,FE@@@@)MU[F#[#[#@*CSC[50A]@-)@9!)@^^/@@@M4YK
)@@G@@@[@@ZQ/K@@B!A]0@[ZR'0@M)A#0@[Y9()@^^9!)@[VFF@@@@)M<[F#@K[#[@K0K0ES@@@@@@YL
)@@G@@R9K@M$ ^@@M* @@@^G/K@@M%9()@^F9!?@@@/K@@M(:8@@@[9()@[VFG@@@@)M?[E())CSCSYM
)@@G@@ G4G]))CS@@@QB)@^N/,0@ )R'K@M4C#@K^CR9K@DLC @@M*QB)@M$/,)@A,R9)@^FFH@@@@YN
)@@G@@)M5[F#@(&-)O^@()O0K^@@@@/K@@)&/,0@^:R9)@L.R9K@^N/,0@ )R'K@)&C#@K^CR9K@D1YO
)@@G@@C @@^OFI@@@@)M"[F#@()O0K^[#@()O0K@@@/,)@A,R9)@Z$R9K@^( ^@@^%/K@@N2/,)@A,YP
)@@G@@R9)@Z=R9K@^( ^@@^%FJ@@@@)NB[F@K0ES G^[@K0ES G@@@R9)@Z!R9K@^( ^@@^%/K@@PFYQ
)@@G@@/,)@A,R9)@Z%R9K@^( ^@@^%/K@@N2FK@@@@)NK[F@K^G]&[N[@K^G^G@@@@9()@^^9!)@[VYR
)@@G@@/K@@PF/,)@A,R9)@M-R9K@^( ^@@^%/K@@PF/,)@A,FL@@@@)NT[##@*CSC[50A[80A]@-)@YS
)@@G@@@@@@@@9!)@^^/@@@)&@@@@^N@]@@^9/K@[ NA]0@[ZR'0@NXA#0@[YFM@@@@)N-[F#@K[#[@YT
)@@G@@K0K0ES@@@@@@R9K@M$ ^@@M* @@@^G/K@@N*9()@^F9!?@@@/K@@N$:8@@@[9()@[VFN@@@@YU
)@@G@@)N%[E())C]A[N@())C]A@@@@ ^@@M*/K@@PF/,)@A,R9)@Z0R9K@^( ^@@^%/K@@)&/,)@A,YV
)@@G@@R9)@^FFO@@@@)N3[E()O0K]&[N[@ES G^@@@/,)@A,R9)@-DR9K@M$/,)@A,R9)@^(R9K@M$YW
)@@G@@/,)@A,R9)@-AR9K@M$FP@@@@)N/[F#[#[#[#[#@*CSC[50A@@[@@ZQ/K@@B!A]0@[ZR'0@O^YX
)@@G@@A#0@[Y9()@^^9!)@[V[[)KZQC )@^'FQ@@@@)O [F@K0K0^@K0K^G@@@@@@@ @@@^G/K@@OIYY
)@@G@@9()@^F9!?@@@/K@@OH:8@@@[9()@[V9!)@^^/@@@OZFR@@@@)OI[F#@()O0K]&[N[@ES G@@YZ
)@@G@@R9)@^9R9K@M$/,)@A,R9)@-HR9K@M$/,)@A,R9)@^FR9K@-H ^@@-IFS@@@@)OR[F@ES G^[ZA
)@@G@@#@()O0K^G@@@C )@^O/,)@A,R9)@M$R9K@^N ^@@^O/,)@A,R9)@)DR9K@M$/,)@A,FT@@@@ZB
)@@G@@)O)[F#[#@K0K[#[#[#@@@@@@9()@^^9!)@[V[[)KZQ @@@@M/ )@O&W[)K)%;P)@@=C[)KZQZC
)@@G@@[[)KZQFU@@@@)O([F#@*CSC[50A]@-)-)@@@:8@@@[9()@[V9!)@^^/@@@P[@[@@ZQ/K@@B!ZD
)@@G@@A]0@[ZR'0@O!A#0@[YFV@@@@)O2[F@^G^[#[#@()O0K@@@@@/,)@A,R9)@^FR9K@M$ ^@@M*ZE
)@@G@@ @@@^G/K@@O79()@^F9!?@@@/K@@O6FW@@@@)O;[F#[#@(&-)O^[#[#@(&@@R9K@EWC @@^OZF
)@@G@@QB)@^N/,0@ )R'K@P[C#@K^CR9K@D/C @@M*QB)@M$FX@@@@)P^[F#@*C[N@())C]A]A@@@@ZG
)@@G@@9()@^^9!)@[V/K@@)&/,0@^:R9)@L.R9K@^N/,0@ )R'K@)&C#@K^CFY@@@@)PH[F#@*CSC[ZH
)@@G@@50A]@-)-)@@@:8@@@[9()@[V9!)@^^/@@@P<@[@@^9/K@[D@A]0@[ZR'0@PLA#0@[YFZ@@@@ZI
)@@G@@)PQ[F@^G^[#[#@()O0K@@@@@/,)@A,R9)@^FR9K@M$ ^@@M* @@@^G/K@@PV9()@^F9!?@@@ZJ
)@@G@@/K@@PUGA@@@@)PZ[F#@()O0K^G^G]&UA[K@@R'K@P%C#@K^CR9K@E$C @@^OQB)@^N/,)@A,ZK
)@@G@@R9)@M$R9K@^N ^@@^OGB@@@@)P*[F@K^G^G]&UA[KK^G@@@@QB)@^9/,0@ )R'K@P7C#@K^CZL
)@@G@@R9K@E3C @@^%QB)@^(/K@@)S/,0@ )GC@@@@)P1[F#@(&-)O^[@K0K0ET)@@R9K@F]C @@^'ZM
)@@G@@QB)@^9/K@@)S/,0@ )R'K@P7C#@K^CR9K@E7C @@^'GD@@@@)P'[F#@*C]A]A]A]A]A[K@@@ZN
)@@G@@R'0@Q A#0@[Y9()@^^9!)@[V[[)KZQC )@^'/,0@ )R'K@Q2C#@K^CGE@@@@)Q#[F#[@I,@0ZO
)@@G@@K^G^G[@@@@@@9!?@@@/K@@QI:8@@@[9()@[V9!)@^^/@@@QR@[@@ZQ/K@@B!A]0@[ZGF@@@@ZP
)@@G@@)QG[F#[@K0K0ES G^[#@()@@R9K@L1 ^@@L2/,)@A,R9)@^FR9K@M$ ^@@M* @@@^G/K@@QJZQ
)@@G@@9()@^FGG@@@@)QP[E())CS G]&]@O0ESC@@@/,)@A,R9)@^(R9K@M$/,)@A,R9)@-AR9K@M$ZR
)@@G@@ ^@@M*/,)@A,R9)@M$GH@@@@)QY[E()O0K]&[N[@ES G^@@@/,)@A,R9)@L1R9K@M$/,)@A,ZS
)@@G@@R9)@^NR9K@M$/,)@A,R9)@-DR9K@M$GI@@@@)Q$[E()O0K]&[N[@K0ES G@@R9)@M$R9K@^NZT
)@@G@@ ^@@^O/,)@A,R9)@)DR9K@M$/,)@A,R9)@^9R9K@M$GJ@@@@)Q0[F@K^G^G^G])-))BR@S@@ZU
)@@G@@@[@@^9/K@[D@A]0@[ZR'0@Q8A#0@[Y9()@^^9!)@[V/K@@OZ/,)@A,GK@@@@)Q9[F@K0K0^@ZV
)@@G@@K0K^G@@@@@@@ @@@^G/K@@R]9()@^F9!?@@@/K@@R[:8@@@[9()@[V9!)@^^/@@@REGL@@@@ZW
)@@G@@)R][F#@()O0K^G]&[N[@K0@@QB)@^(/,)@A,R9)@M$R9K@^9 ^@@^'/,)@A,R9)@^FR9K@M$ZX
)@@G@@ ^@@M*GM@@@@)RF[F#@(&-)O^[@K0K0ET)@@R9K@F,C @@^'QB)@^9/K@@RR/,0@ )R'K@RLZY
)@@G@@C#@K^CR9K@F%C @@^%GN@@@@)RO[F#@*C]A[N@())CSCS@@@C @@^'QB)@^9/,)@A,R9)@ZTZZ
)@@G@@R9K@L1 ^@@L2/,0@ )R'K@)SC#@K^CGO@@@@)RX[E(&-)O^[#@()O0K^G@@@QB)@^(/,)@A,AA
)@@G@@R9)@ZTR9K@^9 ^@@^'/,0@ )R'K@QRC#@K^CR9K@G#GP@@@@)R&[F#@(&-)O^[@K0ES G@@@AB
)@@G@@R9)@4MR9K@^N ^@@^O/K@@QR/,0@ )R'K@)SC#@K^CR9K@GJC @@^%GQ@@@@)R\[F@K^G]&[AC
)@@G@@N[@K0K0K0@@@A#0@[Y9()@^^9!)@[V/,)@A,R9)@4QR9K@^N ^@@^O/K@@R5/,)@A,GR@@@@AD
)@@G@@)R8[E*CSC[50A[80A]@-)-)@:8@@@[9()@[V9!)@^^/@@@)&@@@@^N@]@@^9/K@[]OA]0@[ZAE
)@@G@@R'0@R;GS@@@@)S[[F@^G^[#[#@()O0K@@@@@/,)@A,R9)@^FR9K@M$ ^@@M* @@@^G/K@@SAAF
)@@G@@9()@^F9!?@@@/K@@S GT@@@@)SE[F@K0K0ET*S [@K0ES@@@R9K@M$ ^@@M*/,0@ )R'K@)SAG
)@@G@@C#@K^CR9K@GXC @@^'QB)@^9/K@@)&GU@@@@)SN[E()) G]&]@-)-)O3K0@@C#@K^CR9K@G*AH
)@@G@@C @@M*QB)@M$/,)@A,R9)@^9R9K@M$/,)@A,R9)@M-GV@@@@)SW[E*C]A[N@()) G]&]@@@@AI
)@@G@@/,)@A,R9)@MCR9K@M$/,)@A,R9)@4UR9K@M$ ^@@M*/,0@ )R'K@SYGW@@@@)S>[E()O0K^GAJ
)@@G@@]&[N[@K^G@@@ ^@@^O/K@@)&/,)@A,R9)@M$R9K@^N ^@@^O/,)@A,R9)@)DR9K@M$GX@@@@AK
)@@G@@)S,[E()O0K^[#@()O0K^@@@@/K@@)&/,)@A,R9)@4+R9K@^N ^@@^O/K@@)&/,)@A,R9)@4YAL
)@@G@@R9K@^NGY@@@@)S7[F#[#@(&-)O^@()O0K@@@/,0@^:R9)@^AR9K@^9/,0@ )R'K@T@C#@K^CAM
)@@G@@R9K@H]C @@^'QB)@^9GZ@@@@)T@[F#@()O0K]&[N[@ES G@@R9)@M-R9K@M$/,)@A,R9)@^9AN
)@@G@@R9K@M$/,)@A,R9)@M-R9K@M$ ^@@M*HA@@@@)TD[F@K0ES G^[#[#[#[#@@@C @@^'QB)@^9AO
)@@G@@[[)K^PC[)KMV/,)@A,R9)@M$R9K@^9 ^@@^'/,)@A,HB@@@@)TM[E(&-)O^@()O0K^G]&@@@AP
)@@G@@R9K@M$ ^@@M*/,0@^:R9)@^AR9K@^9/,0@ )R'K@)SC#@K^CR9K@HCHC@@@@)TV[E()) G]&AQ
)@@G@@]@-)O0ESC@@@/,)@A,R9)@M$R9K@M^ ^@@M /,)@A,R9)@)TR9K@M$/,)@A,R9)@M^HD@@@@AR
)@@G@@)T=[F#@()O0K]&[N[@K0ES@@R9K@^N ^@@^O/,)@A,R9)@M^R9K@M$/,)@A,R9)@4?R9K@M$AS
)@@G@@ ^@@M*HE@@@@)T![E())CSCS G4G])) G@@@R9K@^9/,0@ )R'K@W3C#@K^CR9K@H,C @@^'AT
)@@G@@QB)@^9/,)@A,R9)@M$HF@@@@)T6[E())CSCS G4G])) G@@@R9K@^9/,0@ )R'K@V-C#@K^CAU
)@@G@@R9K@H'C @@^'QB)@^9/,0@^:R9)@^AHG@@@@)T_[E())CSCSCSCSCS [#@@@A]0@[ZR'0@UDAV
)@@G@@A#0@[Y9()@^^9!)@[V[[)KZQC )@FK/,0@^:R9)@^AHH@@@@)UC[F@I,@0K^G^G[@^G@@@@@AW
)@@G@@9()@^F9!?@@@/K@@UM:8@@@[9()@[V9!)@^^/@@@UV@[@@ZQ/K@@B!HI@@@@)UL[F@K0K0ESAX
)@@G@@ G^[#@()O0@@R9)@M$R9K@L1 ^@@L2/,)@A,R9)@^FR9K@M$ ^@@M* @@@^G/K@@UNHJ@@@@AY
)@@G@@)UU[F@K0K0ET*S [@ES G@@@R9)@4&R9K@L1/,0@ )R'K@U=C#@K^CR9K@I5C @@L2QB)@L1AZ
)@@G@@/,)@A,HK@@@@)U<[F@K0ES G^@()O0K^G@@@ ^@@FK/,)@A,R9)@)DR9K@M$/,)@A,R9)@FJBA
)@@G@@R9K@M$ ^@@M*/,0@^:HL@@@@)U?[E()O0K^G^G^G[#[@@@@@/ )@U6W[)K)%;P)@@=C[)KZQBB
)@@G@@[[)KZQC )@FK/,)@A,R9)@M$R9K@FJHM@@@@)U5[EK0K0K0K[#[#[#@@@@@@[[)K46C[)KZQBC
)@@G@@[[0KZQ @@@@N/ 0@U;S[)K)%C[)KZQ[[)KZQ @@@@MHN@@@@)U"[F#[#@(&-)O^[#@()O0@@BD
)@@G@@R9)@^NR9K@M$ ^@@M*/,0@ )R'K@V^C#@K^CR9K@JCC @@FKQB)@FJHO@@@@)VB[F@ES G^@BE
)@@G@@()O0K^G]&@@@R9K@^N ^@@^O/,)@A,R9)@FJR9K@M$/,)@A,R9)@L1R9K@M$/,)@A,HP@@@@BF
)@@G@@)VK[E())CSCSCSCSCSCSCS@@C @@^7QB)@^6[[)K^PC[)KZQ[[)KZQG[)KMSC[)K^P/,)@A,BG
)@@G@@R9)@M$HQ@@@@)VT[E(&-)O^@()O0K^[#@@@@QB)@^9/K@@T8/,0@^:R9)@^AR9K@^6/,0@ )BH
)@@G@@R'K@W3C#@K^CR9K@JZHR@@@@)V+[F#@(&-)O^@()O0K^G@@@C )@FK/,0@^:R9)@^AR9K@^9BI
)@@G@@/,0@ )R'K@W C#@K^CR9K@J<C @@^'HS@@@@)V:[F#[#[#[#@*CSC[50A]@@/@@@U=@[@@ZQBJ
)@@G@@/K@@B!A]0@[ZR'0@V2A#0@[Y9()@^^9!)@[V[[)KZQHT@@@@)V4[F#[#@K[#[@K0K0@@@@@@BK
)@@G@@ ^@@M* @@@^G/K@@V/9()@^F9!?@@@/K@@V;:8@@@[9()@[V9!)@^^HU@@@@)V.[E()O0K^GBL
)@@G@@]&[N[@K^G@@@9!)@[V/K@@U=/,)@A,R9)@M$R9K@L1 ^@@L2/,)@A,R9)@^FR9K@M$HV@@@@BM
)@@G@@)WA[F#[#@*CSC[50A]@-)-)@9()@[V9!)@^^/@@@W=@[@@^9/K@[D@A]0@[ZR'0@WFA#0@[YBN
)@@G@@9()@^^HW@@@@)WJ[EK[#[@K0K0ES G@@@@@@R9)@^FR9K@M$ ^@@M* @@@^G/K@@WP9()@^FBO
)@@G@@9!?@@@/K@@WO:8@@@[HX@@@@)WS[F@K0ES G^@()O0K^G@@@ ^@@^O/,)@A,R9)@M$R9K@-HBP
)@@G@@/,)@A,R9)@^NR9K@-H ^@@-I/,)@A,HY@@@@)W-[E()O0K^G^G^G^G^G^G@@QB)@^9[[)K^PBQ
)@@G@@C[)KZQ[[)KZQG[)KMSC[)K^P/,)@A,R9)@-HR9K@^NHZ@@@@)W%[F#@(&-)O^@()O0K^@@@@BR
)@@G@@/K@@T8/,0@^:R9)@^AR9K@^9/,0@ )R'K@W3C#@K^CR9K@K&C @@^'IA@@@@)W3[F#@()O0KBS
)@@G@@]&[N[@K0K0@@C @@M*QB)@M$/,)@A,R9)@^9R9K@M$/,)@A,R9)@^6R9K@M$ ^@@M*IB@@@@BT
)@@G@@)W/[E(&-)O^[#[#[#@*CS@@@A]0@[ZR'0@XAA#0@[Y9()@^^9!)@[V/,0@ )R'K@)SC#@K^CBU
)@@G@@R9K@K%IC@@@@)X [F@I,@0K^G^G[@^G@@@@@9()@^F9!?@@@/K@@XJ:8@@@[9()@[V9!)@^^BV
)@@G@@/@@@XU@[@@^P/K@@B!ID@@@@)XI[F@K0K0ES G^[#[#@(&@@R9K@K4C @@M*QB)@M$/,)@A,BW
)@@G@@R9)@^FR9K@M$ ^@@M* @@@^G/K@@XKIE@@@@)XR[F#@*C]A]A]A@-))@@@@@/ )@X-W[)K)%BX
)@@G@@;P)@@=C[)KZQ[[)KZQC )@^O/,0@ )R'K@XUC#@K^CIF@@@@)X)[EK0K0K0K0E]A]@XW[)@@BY
)@@G@@@[@@ZQ/K@@B!A]0@[ZR'0@X*A#0@[Y9()@^^9!)@[V[[)KZQ @@@@MIG@@@@)X([F@K0K0^@BZ
)@@G@@K0K^G@@@@@@@ @@@^G/K@@X29()@^F9!?@@@/K@@X1:8@@@[9()@[V9!)@^^/@@@X/IH@@@@CA
)@@G@@)X2[F#@()O0K^G^G]&UA[K@@R'K@X/C#@K^CR9K@LOC @@M*QB)@M$/,)@A,R9)@^FR9K@M$CB
)@@G@@ ^@@M*II@@@@)X;[F@K0K0ET*S [@K0ES@@@R9K@M$ ^@@M*/,0@ )R'K@)&C#@K^CR9K@L4CC
)@@G@@C @@^OQB)@^N/,0@ )IJ@@@@)Y^[E()) G]&]@O0ESC]@@@@/K@@)&/,0@^:R9)@M$R9K@^NCD
)@@G@@/,)@A,R9)@^(R9K@M$/,)@A,R9)@L.IK@@@@)YH[F#@()O0K]&[N[@ES G@@R9)@M-R9K@M$CE
)@@G@@/,)@A,R9)@^9R9K@M$/,)@A,R9)@M-R9K@M$ ^@@M*IL@@@@)YQ[F@K0K0ET*S [@K0ES@@@CF
)@@G@@R9K@M$ ^@@M*/,0@ )R'K@YXC#@K^CR9K@L_C @@M*QB)@M$/,)@A,IM@@@@)YZ[E()) G]&CG
)@@G@@]@O0ESC]A@@@ ^@@^O/,)@A,R9)@)TR9K@M$/,)@A,R9)@M^R9K@M$/,)@A,R9)@4/IN@@@@CH
)@@G@@)Y*[E()O0K^[#[#[#@*CS@@@A]0@[ZR'0@Y2A#0@[Y9()@^^9!)@[V/K@@)&/,)@A,R9)@M$CI
)@@G@@R9K@^NIO@@@@)Y1[F@I,@0K^G^G[@^G@@@@@9()@^F9!?@@@/K@@Y;:8@@@[9()@[V9!)@^^CJ
)@@G@@/@@@ZF@[@@^9/K@[D@IP@@@@)Y'[F@K0K0ES G^[#@()O0@@R9)@5@R9K@-H ^@@-I/,)@A,CK
)@@G@@R9)@^FR9K@M$ ^@@M* @@@^G/K@@Y/IQ@@@@)Z#[F@ES G^[#@()O0K^G@@@C )@^O/,)@A,CL
)@@G@@R9)@-HR9K@^N ^@@^O/,)@A,R9)@M$R9K@-H/,)@A,IR@@@@)ZG[F#[#@K0K[#[#[#@@@@@@CM
)@@G@@9()@^^9!)@[V[[)KZQ @@@@M/ )@ZMW[)K)%;P)@@=C[)KZQ[[)KZQIS@@@@)ZP[F#@*CSC[CN
)@@G@@50A]@-)-)@@@:8@@@[9()@[V9!)@^^/@@@Z!@[@@ZQ/K@@B!A]0@[ZR'0@ZTA#0@[YIT@@@@CO
)@@G@@)ZY[F@^G^[#[#@()O0K@@@@@/,)@A,R9)@^FR9K@M$ ^@@M* @@@^G/K@@Z<9()@^F9!?@@@CP
)@@G@@/K@@Z+IU@@@@)Z$[F#[#@(&-)O^[#[#@(&@@R9K@M.C @@^OQB)@^N/,0@ )R'K@Z!C#@K^CCQ
)@@G@@R9K@MXC @@M*QB)@M$IV@@@@)Z0[F#@*C[N@())C]A]A@@@@9()@^^9!)@[V/K@@)&/,0@^:CR
)@@G@@R9)@L.R9K@^N/,0@ )R'K@)&C#@K^CIW@@@@)Z9[##@*CSC[50A[80A[80A[80A@@@@@@@^?CS
)@@G@@@@@@^6@@@@^9@H@@^S/K@@>"A]0@[ZR'0@Z.A#0@[YIX@@@@))[@'/S#@/S#@/S#@/S#@/S#CT
)@@G@@@/S#@/S#@@@@@@@@L.@@@@M@@@@@^(@@@@^3@@@@^0@@@@^N@@@@^>IY@@@@))C[E/S#@/S#CU
)@@G@@[@K0K0^@K0@@9()@^F9!?@@@/K@@)M:8@@@[9()@[V9!)@^^/@@@)&@@@@L1@@@@FJIZ@@@@CV
)@@G@@))L[F@K0K0ES G^[@K0ES@@@R9K@^N ^@@^O/K@@)&/,)@A,R9)@^FR9K@M$ ^@@M* @@@^GCW
)@@G@@/K@@)NJA@@@@))U[E())C]^@O0ESC[N@@@@@R9)@]D/,0@^WR9K@MIR9)@]DC;@@@X'=@@@@CX
)@@G@@/K@@)&/,)@A,R9)@5^JB@@@@))<@UESC@@@@)]D@*#1)GK@@@@@@@@@@@@@@B@@@@@@@@@E*CY
)@@G@@@@@@@@T@@@@@/,0@^WR9K@^HC;@@@XJC@@@@)]I[C/S#^#1)GKJA@1@@@@@@@@@@@@D@@@@@CZ
)@@G@@@@@@E7@@@@@@DITTO@@@@@E2@@@@@@MOVE@@@@@@E!JD@@@@)]R[C/S#^#1)GKJA@1@@@@@@DA
)@@G@@@@@@@@N@@@@@@@@@FA@@@@@@OMIT@@@@@@F[@@@@@@EXIT@@@@@@E/JE@@@@)])[C/S#^#1)DB
)@@G@@GKJA@1@@@@@@@@@@@@C@@@@@@@@@FKA@@@@@MINUS.@@@@FP@@@@@@PLUS.A@@@@FFJF@@@@DC
)@@G@@)]([C/S#^#1)GKJA@1@@@@@@@@@@@@CALL@@@@@@Z7@@@@@@NOFNC@@@@@IW@@@@@@CO@@@@DD
)@@G@@@@@@IRJG@@@@)]2[C/S#^#1)GKJA@1@@@@@@@@@@@@IB@@@@@@@@M"@@@@@@I@@@@@@@@@S2DE
)@@G@@@@@@@@ABORT@@@@@S7JH@@@@)];[C/S#^#1)GKJA@1@@@@@@@@@@@@IS@@@@@@@@NH@@@@@@DF
)@@G@@IRB@@@@@@@NC@@@@@@IR@@@@@@@@N#JI@@@@)#^[C/S#^#1)GKJA@1@@@@@@@@@@@@INTRP@DG
)@@G@@@@@@N!@@@@@@IK@@@@@@@@NR@@@@@@ICTL@@@@@@NMJJ@@@@)#H[C/S#^#1)GKJA@1@@@@@@DH
)@@G@@@@@@@@GOTO@@@@@@R1M@@@@@PERFOR@@@@R?@@@@@@PROC@@@@@@Y?JK@@@@)#Q[C/S#^#1)DI
)@@G@@GKJA@1@@@@@@@@@@@@OFF@@@@@@@FU@@@@@@ON@@@@@@@@S!.A@@@@RETURN@@@@SFJL@@@@DJ
)@@G@@)#Z@C/S#^@@@))&@2K0K[#[@@@@@@@@@@@@@/K@@B0[[)@#(C9)@@@/K@@B0[[)@#(C9)@@[DK
)@@G@@@@@@FZJM@@@@)@@[QU)@CSCS)@@@@@[@\@@[[0Z@@@^[J@@@/\@@^T$B0@]C[DJ@@[[^\@@[DL
)@@G@@[0Z@@@A[Z@@@R9K@@3JN@@@@)@E[QWG^GOGM&]AC@@C9)@@[9,@@@P-]@@@M-]K@@MD9)@@@DM
)@@G@@/,0@^#R9K@MP/[@@^M/\@@^T$B0@]CJO@@@@)@O[QU&EACO0@K0K1@^[J@@@/\@@^T$B0@]CDN
)@@G@@[@\@@[[0Z@@@A Z@@@R9K@^S^[\@@@/,0@#0R'K@^MJP@@@@)@Y[QSK0K1K0^GL#@@ @@@@GDO
)@@G@@G@KKMS&;K@@@/\@@^M0@@@@KH[@KMS/\@@^T$B0@]C[@\@@[[0Z@@@JQ@@@@)@*[QS@()@-)DP
)@@G@@-+@@@@/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K@^6^[\@@@&;K@@[G@)@@GW8@@@AJR@@@@DQ
)@@G@@)@2[QW@@[#[#^@@@@@^[J@@@/K@@^M%[)KMVG[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@IDR
)@@G@@/K@@[EJS@@@@)@/[QSK0K1ESCS-N@@[0Z@@@A Z@@@R9K@^S^[\@@@/,0@#+R9K@MY/\@@^TDS
)@@G@@$B0@]C[@\@@[[0Z@@@JT@@@@)[A[QT#[# @K1@@@@@&8K@@@R@K@@HT9)@@AH[)@[]C[)@@IDT
)@@G@@/K@@#R/K@@[E/\@@^T$B0@]C[@\@@[JU@@@@)[K[IT#[# #^()-+ GOGK@@@/,0@#0R'K@^MDU
)@@G@@ @@@@M/,0@^#R9K@M-/[@@^M/K@@^M%[)KMVG[)@@[JV@@@@)[T[QU&]AE@-+@@@@@G[)@@[DV
)@@G@@&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#R/K@@[W/,0@#+R9K@M=JW@@@@)[<[IWG^GM&]DW
)@@G@@AE@-+-)CS)@@/\@@^M0@@@@KH[@KMS/K@@#R/K@@[*/,0@#+R9K@MY/K@@^M%[)KMVJX@@@@DX
)@@G@@)[?[QT#@@K^GM&]AC@/,0@#+R9K@ZH/K@@#R/K@@[3&;K@@[G@)@@GW8@@@A @@@@GG@KKMSDY
)@@G@@&;K@@@JY@@@@)[6[QW[#^@[#[#^@@@/K@@^M%[)KMVG[)@@[&8K@@@R@K@@HT9)@@AH[)@[]DZ
)@@G@@C[)@@I/K@@#R/K@@[7JZ@@@@)]@[IU&]AE@-+O0K1K^GM&@@R9K@ZY/K@@#R/K@@]B/,0@#+EA
)@@G@@R9K@ZH/K@@#R/K@@]#/,0@#+R9K@ZVKA@@@@)]D[IWGO[# #^()-+ GOGK@@/,0@#0R'K@^MEB
)@@G@@ @@@@M/,0@^#R9K@M-/[@@^M/K@@#R/K@@]F/,0@#+KB@@@@)]M[QS^G^GOGM&]AC@-]K@@MEC
)@@G@@D9)@@@/,0@^#R9K@M-/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@KC@@@@)]W[QS]&EACOED
)@@G@@0@@@@@[@\@@[[0Z@@@A Z@@@R9K@MF^[\@@@/,0@#0R'K@^MC9)@@[9,@@@P-]@@@MKD@@@@EE
)@@G@@)]&[IWG^GO[# #^()-+ GK@@R'K@^M @@@@M/,0@^#R9K@M-/[@@^M/K@@#R/K@@](/\@@^TEF
)@@G@@$B0@]CKE@@@@)]\[IWGK^G^GOGM&]AC@@@@@/,0@^#R9K@M-/[@@^M/\@@^T$B0@]C[@\@@[EG
)@@G@@[0Z@@@^[J@@@/,0@#0KF@@@@)]8[QS@ES*S-N@@@@@A Z@@@R9K@^?^[\@@@/,0@#0R'K@^MEH
)@@G@@C9)@@[9,@@@P-]@@@M-]K@@MD9)@@@KG@@@@)#][ISK0K1K^GOGM&]AC@@@@/,0@^#R9K@)MEI
)@@G@@/[@@^M/K@@#R/K@@#B/\@@^T$B0@]C[@\@@[[0Z@@@KH@@@@)#F[IU&EAC)CS*S>G^GM&C@@EJ
)@@G@@R'0@^M/,0@^#R9K@M-/[@@^M/K@@#R/K@@#JH9@@@[/,K@#MR'0@^MKI@@@@)#O[IWGL@K1KEK
)@@G@@1ESCS-N^@@@@R'K@^M @@@@M/,0@^#R9K@M-/[@@^M/K@@#R/K@@#RH9@@@[/,K@#MKJ@@@@EL
)@@G@@)#X[IWGK^G^GOGM&]AC@@@@@/,0@^#R9K@M-/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@EM
)@@G@@/,0@#0KK@@@@)#&[QS@ES*S-N@@@@@A Z@@@R9K@^?^[\@@@/,0@#0R'K@^MC9)@@[9,@@@PEN
)@@G@@-]@@@M-]K@@MD9)@@@KL@@@@)#0[ISK0K1K1ESCS-N^@@@@@R'K@^M @@@@M/,0@^#R9K@M-EO
)@@G@@/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@KM@@@@)#9[IWGK^G^GOGM&]AC@@@@@/,0@^#R9K@M-EP
)@@G@@/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/,0@#0KN@@@@)^][QS@ES*S-N@@@@@A Z@@@EQ
)@@G@@R9K@FF^[\@@@/,0@#0R'K@^MC9)@@[9,@@@P-]@@@M-]K@@MD9)@@@KO@@@@)^G[ISK0K1K^ER
)@@G@@GOGM&]AC@@@@/,0@^#R9K@)M/[@@^M/K@@#R/K@@^L/\@@^T$B0@]C[@\@@[[0Z@@@KP@@@@ES
)@@G@@)^P[IU&EAC)CS*S>G^GM&C@@R'0@^M/,0@^#R9K@)M/[@@^M/K@@#R/K@@^TH9@@@[/,K@#MET
)@@G@@R'0@^MKQ@@@@)^Y[IWGL@K1ESCS*]AEAC@@@/[@@^M/K@@#R/K@@^>/,0@#+R9K@M-/K@@#REU
)@@G@@/K@@^-H9@@@[/,K@#MKR@@@@)^$[IU&]ACO1K1@K0@@@@@@@$B0@]C[@\@@[[0Z@@@^[J@@@EV
)@@G@@/,0@#0R'K@^M @@@@M/,0@^#R9K@M-KS@@@@)^0[QWGOG[#^K0@@@@&;K@@[G@)@@GW8@@@AEW
)@@G@@ @@@@GG@KKMS&;K@@@/\@@^M0@@@@KH[@KMS/\@@^TKT@@@@)^'[IS()@-)-+)CS)@@@@@@@EX
)@@G@@/K@@#R/K@@ ]/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K@^6^[\@@@KU@@@@) #[IWGM&]ACEY
)@@G@@O1K1K0^GK@@@/\@@^M0@@@@KH[@KMS/,0@#0R'K@^M @@@@M/,0@^#R9K@M-/[@@^MKV@@@@EZ
)@@G@@) G[QT#@@@K0@@@@@@$B0@]C[@\@@[[0Z@@@^[J@@@&;K@@[G@)@@GW8@@@A @@@@GG@KKMSFA
)@@G@@&;K@@@KW@@@@) Q[QWGOGM&]AC@ GKR'K@^MC9)@@[9,@@@P-]@@@M-]K@@MD9)@@@/,0@^#FB
)@@G@@R9K@)</[@@^M/\@@^TKX@@@@) )[QWGK()@-)-+-)@0@@@@KH[@KMS/\@@^T$B0@]C[@\@@[FC
)@@G@@[0Z@@@A Z@@@R9K@FJ^[\@@@/,0@#0KY@@@@) %[QWGL#@@@@@@@@@[@\@@[[0Z@@@^[J@@@FD
)@@G@@&;K@@[G@)@@GW8@@@A @@@@GG@KKMS&;K@@@/\@@^MKZ@@@@) 4[QWG^GOGM&]AC@@C9)@@[FE
)@@G@@9,@@@P-]@@@M-]K@@MD9)@@@/,0@^#R9K@)</[@@^M/\@@^T$B0@]CLA@@@@) "[IU&EACO0FF
)@@G@@@K0K1@@@@@@@/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K@L-^[\@@@/,0@#0R'K@^MLB@@@@FG
)@@G@@)AB[QWG[#^K0@^@@@@/K@@AL&;K@@[G@)@@GW8@@@A @@@@GG@KKMS&;K@@@/\@@^M0@@@@KFH
)@@G@@H[@KMSLC@@@@)AL[IWGM&]AE@-+-+O0K1ES)R'0@^M/,0@^#R9K@)&/[@@^M/K@@#R/K@@APFI
)@@G@@/,0@#+R9K@Z=/K@@#RLD@@@@)AU[IWGL@K1K1ESCS>GOGK@@/,K@#MR'0@^M/,0@^#R9K@)&FJ
)@@G@@/[@@^M/K@@#R/K@@AXH9@@@[/,K@#MLE@@@@)A<[QT@K1@K0K1K0@@0@@@@KH[@K)!/\@@^TFK
)@@G@@$B0@]C[@\@@[[0Z@@@^[J@@@/K@@#R/K@@A>H9@@@[LF@@@@)A![QWGL#@@]&@@@@@A Z@@@FL
)@@G@@R9K@FJ^[\@@@&;K@@[G@)@@GW8@@@A @@@@GG@KK)!&;K@@@/\@@^MLG@@@@)A7[ISK0K1K^FM
)@@G@@GOG[#^@@@@@@/\@@^M0@@@@KH[@KMS/K@@#R/K@@A//\@@^T$B0@]C[@\@@[[0Z@@@LH@@@@FN
)@@G@@)B@[QT#@@K^GK@@@@@H[)@[]C[)@@I/K@@#R/K@@BB&;K@@[G@)@@GW8@@@A @@@@GG@KKMSFO
)@@G@@&;K@@@LI@@@@)BE[QS[#[# #^()-+@ @@@@M/,0@^#R9K@M-/[@@^M/K@@^M%[)KMVG[)@@[FP
)@@G@@&8K@@@R@K@@HT9)@@ALJ@@@@)BO[QU&EADK@^G^GK@^[J@@@/\@@^T$B0@]C[DJ@@[[^\@@[FQ
)@@G@@[0Z@@@A[Z@@@R9K@B,/,0@#0R'K@^MLK@@@@)BY[QSK0K1ESCS-N@@[0Z@@@A Z@@@R9K@L'FR
)@@G@@^[\@@@/,0@#+R9K@)6/\@@^T$B0@]C[@\@@[[0Z@@@LL@@@@)B*[QT#[# #[# @E@@[^\@@[FS
)@@G@@[0Z@@@A[Z@@@R9K@C^/K@@D /K@@^M%[@KMV/\@@^T$B0@]C[@\@@[LM@@@@)B2[IT#[#^[#FT
)@@G@@[#^()@@@@@@@R9K@Z9/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/\@@^T$B0@]C[DJ@@[LN@@@@FU
)@@G@@)B;[QWGK()@-)-+) @R9K@C2/K@@B:/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K@L7^[\@@@FV
)@@G@@/,0@#+LO@@@@)C [QS[#[#^[#@@@@@$B0@]C[@\@@[[0Z@@@^[J@@@/\@@^T$B0@]C[DJ@@[FW
)@@G@@[^\@@[[0Z@@@A[Z@@@LP@@@@)CJ[IWGOGM&]ACO1K1]&@@@@R9K@^?^[\@@@/,0@#0R'K@^MFX
)@@G@@ @@@@M/,0@^#R9K@)M/[@@^M/\@@^TLQ@@@@)CS[IS^G^GOGM&]AC@@@@@@@ @@@@M/,0@^#FY
)@@G@@R9K@M-/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@LR@@@@)C-[IU&EAC]A]ADN[#^@@@@@FZ
)@@G@@/,0@#+R9K@Z9/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/,0@#0R'K@^MLS@@@@)C%[QS()@-)-GA
)@@G@@+)@@@@[0Z@@@^[J@@@/K@@B:/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K@L7^[\@@@LT@@@@GB
)@@G@@)C4[IT#[# #^()-+ GOGK@@@/,0@#0R'K@^M @@@@M/,0@^#R9K@)M/[@@^M/\@@^T$B0@]CGC
)@@G@@[@\@@[LU@@@@)C.[IS()@-)-+)CS)@@@@@@@/K@@#R/K@@B:/\@@^T$B0@]C[@\@@[[0Z@@@GD
)@@G@@A Z@@@R9K@^?^[\@@@LV@@@@)DA[QWG[#^K0@^@@@@/K@@DK&;K@@[G@)@@GW8@@@A @@@@GGE
)@@G@@G@KKMS&;K@@@/\@@^M0@@@@KH[@KMSLW@@@@)DK[QWGOG[#^K0@@@@&;K@@[G@)@@GW8@@@AGF
)@@G@@ @@@@GG@KK-@&;K@@@/\@@^M0@@@@KH[@K-@/K@@#RLX@@@@)DU[QS^G^GOG[#^K0@G@KK-#GG
)@@G@@&;K@@@/\@@^M0@@@@KH[@K-#/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@LY@@@@)D=[QS@ES@CSGH
)@@G@@@@@@@@$B0@]C[@\@@[[0Z@@@A Z@@@R9K@L.^[\@@@&;K@@[G@)@@GW8@@@A @@@@GLZ@@@@GI
)@@G@@)D,[IWGO[# #@K1^G@@@@@@@ @@@@GG@KK-#&;K@@@/\@@^M0@@@@KH[@K-#/K@@#R/K@@D0GJ
)@@G@@/\@@^TMA@@@@)D7[QS^[# #@K1^G@@G@KK-@&;K@@@/\@@^M0@@@@KH[@K-@/K@@#R/K@@D;GK
)@@G@@&;K@@[G@)@@GW8@@@AMB@@@@)E[[QS@[#[# #@@@@@H[@K-#/\@@^T$B0@]C[@\@@[[0Z@@@GL
)@@G@@^[J@@@&;K@@[G@)@@GW8@@@A @@@@GMC@@@@)EF[QT#^K0@@()@@@@R9K@L.^[\@@@&;K@@[GM
)@@G@@G@)@@GW8@@@A @@@@GG@KK-#&;K@@@/\@@^M0@@@@KMD@@@@)EP[IS^G^GO[# #@@@@@@@@@GN
)@@G@@0@@@@KH[@K-#/K@@#R/K@@EV/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@ME@@@@)EY[QWGL#@@KGO
)@@G@@^GK@@@C[)@@I/K@@#R/K@@E&&;K@@[G@)@@GW8@@@A @@@@GG@KK-#&;K@@@/\@@^MMF@@@@GP
)@@G@@)E*[QS@K0K1ESCS*@@/K@@E2/,0@#+R9K@4#/K@@^M%[)KMVG[)@@[&8K@@@R@K@@HT9)@@AGQ
)@@G@@H[)@[]MG@@@@)E2[IWGM&]AE@-+-)CS)@@@@&;K@@@/\@@^M0@@@@KH[@KMS/K@@#R/K@@E6GR
)@@G@@/,0@#+R9K@4A/K@@#RMH@@@@)E;[QWG@[@K1@@@@@@T9)@@AH[)@[]C[)@@I/K@@#R/K@@F[GS
)@@G@@&;K@@[G@)@@GW8@@@A @@@@GG@KKMSMI@@@@)F [IS^G^GOGM&]AC@@@@@@@ @@@@M/,0@^#GT
)@@G@@R9K@M-/[@@^M/K@@^M%[)KMVG[)@@[&8K@@@R@K@@HMJ@@@@)FI[IU&EADN[#^[#[#^@@@@@GU
)@@G@@/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/,0@#+R9K@4D/,0@#0R'K@^MMK@@@@)FR[QWGM&]ACGV
)@@G@@@ GOGK/,0@#0R'K@^MC9)@@[9,@@@P-]@@@M-]K@@MD9)@@@/,0@^#R9K@4D/[@@^MML@@@@GW
)@@G@@)F-[IS()@-)-+)CS)@@@@@@@/K@@#R/K@@F(/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K@^9GX
)@@G@@^[\@@@MM@@@@)F%[QU&]AE@-+@@@@@G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#RGY
)@@G@@/K@@F!/,0@#+R9K@Z0MN@@@@)F4[QWG^GOG[#^K0@@G@)@@GW8@@@A @@@@GG@KK4G&;K@@@GZ
)@@G@@/\@@^M0@@@@KH[@K4G/K@@^M%[)KMVMO@@@@)F"[QS()-+)CS)@@@@&8K@@@R@K@@HT9)@@AHA
)@@G@@H[)@[]C[)@@I/K@@#R/K@@G]/,0@#+R9K@4#&;K@@[MP@@@@)GC[IT#[#^()-+)CS>@@@@@@HB
)@@G@@A[Z@@@R9K@GT/K@@#R/K@@GI/,0@#+R9K@4J/K@@^M%[)KMVG[)@@[MQ@@@@)GL[IS^G^GM&HC
)@@G@@]AE@O0@@@@@@R9K@4A/K@@GW/,0@#+R9K@M-/\@@^T$B0@]C[DJ@@[[^\@@[[0Z@@@MR@@@@HD
)@@G@@)GU[IWGO[# #@K1^G@@@@@@@ @@@@GG@KKMS&;K@@@/\@@^M0@@@@KH[@KMS/K@@#R/K@@GWHE
)@@G@@/,0@#+MS@@@@)G<[IS^[# #^()-+@@@@@@@@ @@@@M/,0@^#R9K@M-/[@@^M/K@@#R/K@@G$HF
)@@G@@&;K@@[G@)@@GW8@@@AMT@@@@)G?[IU&EAC]A]AEADN@@@@@@R9K@)M/[@@^M/\@@^T$B0@]CHG
)@@G@@[@\@@[[0Z@@@^[J@@@/,0@#0R'K@^MMU@@@@)G5[QWGK(+-+ G@^G@$B0@]C[@\@@[[0Z@@@HH
)@@G@@A Z@@@R9K@MC^[\@@@/,0@#0R'K@^M @@@@M/,0@^#MV@@@@)G_[IWGO[#^()-+-)-+)CS)@HI
)@@G@@/K@@#R/K@@HB/K@@^M%[@KMV/,0@#+R9K@4&/K@@#R/K@@H[/\@@^TMW@@@@)HC[QS@^G^GOHJ
)@@G@@GM&@@@R9K@M-/[@@^M/K@@^M%[)KMVG[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@IMX@@@@HK
)@@G@@)HM[IWGK(+-+@-)-+@@@@@@@/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/,0@#0R'K@^M @@@@MHL
)@@G@@/,0@^#MY@@@@)HV[QWGM&]AC@ GOGK/,0@#0R'K@^MC9)@@[9,@@@P-]@@@M-]K@@MD9)@@@HM
)@@G@@/,0@^#R9K@4(/[@@^MMZ@@@@)H>[QS()@-)-+)CS)@C[)@@I/K@@#R/K@@H!/\@@^T$B0@]CHN
)@@G@@[@\@@[[0Z@@@A Z@@@R9K@M^^[\@@@NA@@@@)H\[QS@K0K1ESCS*@@/K@@H9/,0@#+R9K@40HO
)@@G@@/K@@^M%[)KMVG[)@@[&8K@@@R@K@@HT9)@@AH[)@[]NB@@@@)H9[QWGK@^G^GK@@@@^[J@@@HP
)@@G@@/K@@^M%[)KMVG[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#RNC@@@@)I#[ISK0K1K1HQ
)@@G@@ESCS-N^@@@@@R'K@^M @@@@M/,0@^#R9K@)M/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@ND@@@@HR
)@@G@@)IG[QWGK()@-)-+@@@[0Z@@@^[J@@@/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K@FJ^[\@@@HS
)@@G@@/,0@#0NE@@@@)IQ[QT#[#^*@]A]AC@/\@@^T$B0@]C[DJ@@[[^\@@[[0Z@@@A[Z@@@R9K@I%HT
)@@G@@/\@@^T$B0@]C[@\@@[NF@@@@)I)[IU&]ACO0@K0K1@@@@@@@/\@@^T$B0@]C[@\@@[[0Z@@@HU
)@@G@@A Z@@@R9K@^6^[\@@@/,0@#+R9K@M-NG@@@@)I([IW@()-+ G@^G@@@@@@@@$B0@]C[@\@@[HV
)@@G@@[0Z@@@A Z@@@R9K@^6^[\@@@/,0@#+R9K@43/K@@I4NH@@@@)I2[QWGO[#^@[#@@@@%[)K4GHW
)@@G@@G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#R/K@@I4/\@@^TNI@@@@)I/[QWGOG[#^HX
)@@G@@K0@@@@&;K@@[G@)@@GW8@@@A @@@@GG@KKMS&;K@@@/\@@^M0@@@@KH[@KMS/K@@^MNJ@@@@HY
)@@G@@)JA[IW[#^[#[# #@@@@@@@@@0@@@@KH[@K46/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/K@@#RHZ
)@@G@@/K@@JBNK@@@@)JJ[QWGL#@@]&@@@@@A Z@@@R9K@FJ^[\@@@&;K@@[G@)@@GW8@@@A @@@@GIA
)@@G@@G@KK46&;K@@@/\@@^MNL@@@@)JT[ISK0K1K^GM&]AE@@@@@@/K@@J+/,0@#+R9K@43/K@@#RIB
)@@G@@/K@@JY/\@@^T$B0@]C[@\@@[[0Z@@@NM@@@@)J+[QWGK@^G^GM&@@@R9K@4D/K@@^M%[)KMVIC
)@@G@@G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#RNN@@@@)J?[IWGK^G^GOGM&]AC@@@@@ID
)@@G@@/,0@^#R9K@4D/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/,0@#+NO@@@@)J5[QS@ES*S-IE
)@@G@@N@@@@@A Z@@@R9K@FJ^[\@@@/,0@#0R'K@^MC9)@@[9,@@@P-]@@@M-]K@@MD9)@@@NP@@@@IF
)@@G@@)J_[QSK0K1ESCS)CS@$B0@]C[@\@@[[0Z@@@^[J@@@/,0@#+R9K@4D/\@@^T$B0@]C[@\@@[IG
)@@G@@[0Z@@@NQ@@@@)KD[IWGM)@CSCS>G@@@@@@@@R9K@M-/\@@^T$B0@]C[DJ@@[[^\@@[[0Z@@@IH
)@@G@@A[Z@@@R9K@KV/\@@^TNR@@@@)KM[IWGK()@-)-+)@@@@@@@@/K@@K>/\@@^T$B0@]C[@\@@[II
)@@G@@[0Z@@@A Z@@@R9K@^6^[\@@@/,0@#+NS@@@@)KV[IU&]ACO0@K0K1@@@@@@@/\@@^T$B0@]CIJ
)@@G@@[@\@@[[0Z@@@A Z@@@R9K@^6^[\@@@/,0@#+R9K@43NT@@@@)K=[IW[#^()-+)CS*S>G^GK@IK
)@@G@@/,0@^#R9K@M-/[@@^M/K@@#R/K@@K(/,0@#+R9K@43/K@@#R/K@@K>NU@@@@)K![IS(+-+-)IL
)@@G@@-+)CS*S@@@@@0@@@@KH[@K49/K@@#R/K@@K3/K@@^M%[@KMV/,0@#0R'K@^M @@@@MNV@@@@IM
)@@G@@)K6[QWGL#@@@@@@@@@[@\@@[[0Z@@@^[J@@@&;K@@[G@)@@GW8@@@A @@@@GG@KK49&;K@@@IN
)@@G@@/\@@^MNW@@@@)L@[QWG^GOG[#^K0@@G@)@@GW8@@@A @@@@GG@KKMS&;K@@@/\@@^M0@@@@KIO
)@@G@@H[@KMS/\@@^T$B0@]CNX@@@@)LE[QSES@CSCS*]AC@/K@@#R/K@@LN/\@@^T$B0@]C[@\@@[IP
)@@G@@[0Z@@@A Z@@@R9K@^(^[\@@@&;K@@[NY@@@@)LO[QWG[#^K0@@@@@@^[J@@@&;K@@[G@)@@GIQ
)@@G@@W8@@@A @@@@GG@KK-@&;K@@@/\@@^M0@@@@KH[@K-@NZ@@@@)LY[QSK0K1K0^GL#@@ @@@@GIR
)@@G@@G@KK-#&;K@@@/\@@^M0@@@@KH[@K-#/\@@^T$B0@]C[@\@@[[0Z@@@OA@@@@)L*[QS@()@-)IS
)@@G@@-+@@@@/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K@L.^[\@@@&;K@@[G@)@@GW8@@@AOB@@@@IT
)@@G@@)L2[QW[# #@K1^G@@@G@)@@GW8@@@A @@@@GG@KK4G&;K@@@/\@@^M0@@@@KH[@K4G/K@@#RIU
)@@G@@/K@@L3OC@@@@)L/[IT@K1K1ESCS-N #^@@@@/,0@#0R'K@^M @@@@M/,0@^#R9K@M-/[@@^MIV
)@@G@@/K@@#R/K@@L"&;K@@[OD@@@@)M [QS^G^GOGM&]AC@-]K@@MD9)@@@/,0@^#R9K@M-/[@@^MIW
)@@G@@/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@OE@@@@)MJ[QS]&EACO0@@@@@[@\@@[[0Z@@@A Z@@@IX
)@@G@@R9K@M^^[\@@@/,0@#0R'K@^MC9)@@[9,@@@P-]@@@MOF@@@@)MT[IWG^GO[# #@K1^G@@@@@IY
)@@G@@G@KK-@&;K@@@/\@@^M0@@@@KH[@K-@/K@@#R/K@@MW/\@@^T$B0@]COG@@@@)M+[QS@[#[# IZ
)@@G@@#@@@@@H[@K-#/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@&;K@@[G@)@@GW8@@@A @@@@GOH@@@@JA
)@@G@@)M?[QT#^K0@@()@@@@R9K@L.^[\@@@&;K@@[G@)@@GW8@@@A @@@@GG@KK-#&;K@@@/\@@^MJB
)@@G@@0@@@@KOI@@@@)M6[IS^G^GO[# #@@@@@@@@@0@@@@KH[@K-#/K@@#R/K@@M//\@@^T$B0@]CJC
)@@G@@[@\@@[[0Z@@@A Z@@@OJ@@@@)M_[IWGL#@@K^GK@@@@@@@@@/K@@#R/K@@NB&;K@@[G@)@@GJD
)@@G@@W8@@@A @@@@GG@KK-#&;K@@@/\@@^MOK@@@@)^A[C/S@#1)@#1)@JA@@@@@@@@G@@@]@@@^JJE
)@@G@@@@@@@@]@@@^H@@@@@@@@A@@A[@@@^E@@@@@@]@@@^COL@@@@)^J[C#1)@JA@@/S@@@@@@@@@JF
)@@G@@@@@@@@@@A@@A[@@@^R@>)@@@]@@@^P@>)@@@]@@@^N            OM@@@@)^S[S/S@@@@@JG
)@@G@@                                                      @@_@@@]@@@^UON@@@@JH
)@@G@@)^<[K#1)@@/S@@/S@@]@@@^,      @@[@@@]@@@^:            @@G@@@]@@@^$      JI
)@@G@@      OO@@@@)^![K@/S@@/S@@/S@@]@@@^8      @@A@@@]@@@^5      @@A@@@]@@@^2JJ
)@@G@@            @@G@@@OP@@@@)^7[S#1)@@@@                                    JK
)@@G@@      @>)@@@]@@@^;      @@[@@@OQ@@@@) ][S@@@@@@@                        JL
)@@G@@                                          OR@@@@) H[S@@@@@@@            JM
)@@G@@                                                      OS@@@@) S[S@@@@@@@JN
)@@G@@                                                                  OT@@@@JO
)@@G@@) <[S@@@@@@@                                                            JP
)@@G@@      OU@@@@) ,[S@@@@@@@                                                JQ
)@@G@@                  OV@@@@) 9[S@@@@@@@                                    JR
)@@G@@                              OW@@@@)A^[S@@@@@@@                        JS
)@@G@@                                          OX@@@@)AJ[S@@@@@@@            JT
)@@G@@                                                      OY@@@@)AU[S@@@@@@@JU
)@@G@@                                                                  OZ@@@@JV
)@@G@@)A>[S@@@@@@@                                                            JW
)@@G@@      PA@@@@)A0[S@@@@@@@                                                JX
)@@G@@                  PB@@@@)A;[S@@@@@@@                                    JY
)@@G@@                              PC@@@@)BA[S@@@@@@@                        JZ
)@@G@@                                          PD@@@@)BL[S@@@@@@@            KA
)@@G@@                                                      PE@@@@)BW[S@@@@@@@KB
)@@G@@                                                                  PF@@@@KC
)@@G@@)B$[S@@@@@@@                                                            KD
)@@G@@      PG@@@@)B2[S@@@@@@@                                                KE
)@@G@@                  PH@@@@)B.[S@@@@@@@                                    KF
)@@G@@                              PI@@@@)CC[S@@@@@@@                        KG
)@@G@@                                          PJ@@@@)CN[S@@@@@@@            KH
)@@G@@                                                      PK@@@@)CY[S@@@@@@@KI
)@@G@@                                                                  PL@@@@KJ
)@@G@@)C([S@@@@@@@                                                            KK
)@@G@@      PM@@@@)C4[S@@@@@@@                                                KL
)@@G@@                  PN@@@@)C_[S@@@@@@@                                    KM
)@@G@@                              PO@@@@)DE[S@@@@@@@                        KN
)@@G@@                                          PP@@@@)DP[S@@@@@@@            KO
)@@G@@                                                      PQ@@@@)D)[S@@@@@@@KP
)@@G@@                                                                  PR@@@@KQ
)@@G@@)D:[S@@@@@@@                                                            KR
)@@G@@      PS@@@@)D6[S@@@@@@@                                                KS
)@@G@@                  PT@@@@)E[[S@@@@@@@                                    KT
)@@G@@                              PU@@@@)EG[S@@@@@@@                        KU
)@@G@@                                          PV@@@@)ER[S@@@@@@@            KV
)@@G@@                                                      PW@@@@)E+[S@@@@@@@KW
)@@G@@                                                                  PX@@@@KX
)@@G@@)E![S@@@@@@@                                                            KY
)@@G@@      PY@@@@)E8[S@@@@@@@                                                KZ
)@@G@@                  PZ@@@@)F#[S@@#1)@@      @@G@@@]@@@FH                  LA
)@@G@@                              QA@@@@)FI[SJA@@@@@                        LB
)@@G@@                        @>)@@@]@@@FL      QB@@@@)FT[S@@@@@@@            LC
)@@G@@                                                      QC@@@@)F=[S@@@@@@@LD
)@@G@@                                                                  QD@@@@LE
)@@G@@)F\[S@@@@@@@                                                            LF
)@@G@@      QE@@@@)F'[S@@@@@@@                                                LG
)@@G@@                  QF@@@@)G [S@@@@@@@                                    LH
)@@G@@                              QG@@@@)GK[S@@@@@@@                        LI
)@@G@@                                          QH@@@@)GV[S@@@@@@@            LJ
)@@G@@                                                      QI@@@@)G&[S@@@@@@@LK
)@@G@@                                                                  QJ@@@@LL
)@@G@@)G1[S@@@@@@@                                                            LM
)@@G@@      QK@@@@)G/[S@@@@@@@                                                LN
)@@G@@                  QL@@@@)HB[S@@@@@@@                                    LO
)@@G@@                              QM@@@@)HM[S@@@@@@@                        LP
)@@G@@                                          QN@@@@)HX[S@@@@@@@            LQ
)@@G@@                                                      QO@@@@)H*[S@@@@@@@LR
)@@G@@                                                                  QP@@@@LS
)@@G@@)H3[S@@@@@@@                                                            LT
)@@G@@      QQ@@@@)H"[S@@@@@@@                                                LU
)@@G@@                  QR@@@@)ID[S@@@@@@@                                    LV
)@@G@@                              QS@@@@)IO[S@@@@@@@                        LW
)@@G@@                                          QT@@@@)IZ[S@@@@@@@            LX
)@@G@@                                                      QU@@@@)I%[S@@@@@@@LY
)@@G@@                                                                  QV@@@@LZ
)@@G@@)I5[S@@@@@@@                                                            MA
)@@G@@      QW@@@@)J@[S@@@@@@@                                                MB
)@@G@@                  QX@@@@)JF[S@@@@@@@                                    MC
)@@G@@                              QY@@@@)JQ[S@@@@@@@                        MD
)@@G@@                                          QZ@@@@)J-[S@@@@@@@            ME
)@@G@@                                                      RA@@@@)J?[S@@@@@@@MF
)@@G@@                                                                  RB@@@@MG
)@@G@@)J7[S@@@@@@@                                                            MH
)@@G@@      RC@@@@)K][S@@@@@@@                                                MI
)@@G@@                  RD@@@@)KH[S@@@@@@@                                    MJ
)@@G@@                              RE@@@@)KS[S@@@@@@@                        MK
)@@G@@                                          RF@@@@)K<[S@@@@@@@            ML
)@@G@@                                                      RG@@@@)K,[S@@@@@@@MM
)@@G@@                                                                  RH@@@@MN
)@@G@@)K9[S@@@@@@@                                                            MO
)@@G@@      RI@@@@)L^[S@@@@@@@                                                MP
)@@G@@                  RJ@@@@)LJ[S@@@@@@@                                    MQ
)@@G@@                              RK@@@@)LU[S@@JA@@@            @[O@@@]@@@L<MR
)@@G@@                                          RL@@@@)L>[S@@@@@@@            MS
)@@G@@                                                      RM@@@@)L0[KJA@@JA@MT
)@@G@@@JA@@@      @@[@@@]@@@L9      @@A@@@]@@@L6      @@A@@@]@@@L3      RN@@@@MU
)@@G@@)L'[K/S@@/S@@/S@@@            @@G@@@]@@@M]      @@]@@@]@@@L_      @@[@@@MV
)@@G@@]@@@L/RO@@@@)M^[K/S@@JA@@JA@@@      @@A@@@]@@@MH      @@A@@@]@@@ME      MW
)@@G@@      @@G@@@]@@@MARP@@@@)MI[K/S@@JA@@JA@@@ +=   @@#@@#]@@@MRNOFNC @@ @@ MX
)@@G@@]@@@MO            @@G@@@]@@@MKRQ@@@@)MS[C/S@@/S@@/S@@@@@@@@@-     @@[@@[MY
)@@G@@]@@@M)@@@@@@@@A@@A[@@@MX@@@@@[@@A@@A[@@@MURR@@@@)M-[K/S@@/S@@/S@@@      MZ
)@@G@@      [FR@@@]@@@M(=     @@[@@[]@@@M&      @@[@@[]@@@M<RS@@@@)M:[S@@@@@@@NA
)@@G@@                                                                  RT@@@@NB
)@@G@@)M6[S@@@@@@@                                                            NC
)@@G@@      RU@@@@)N[[S@@@@@@@                                                ND
)@@G@@                  RV@@@@)NG[S@@@@@@@                                    NE
)@@G@@                              RW@@@@)NR[S@@@@@@@                        NF
)@@G@@                                          RX@@@@)N+[S@@@@@@@            NG
)@@G@@                                                      RY@@@@)N![S@@@@@@@NH
)@@G@@                                                                  RZ@@@@NI
)@@G@@)N8[S@@@@@@@                                                            NJ
)@@G@@      SA@@@@)O#[S@@@@@@@                                                NK
)@@G@@                  SB@@@@)OI[S@@@@@@@                                    NL
)@@G@@                              SC@@@@)OT[S@@@@@@@                        NM
)@@G@@                                          SD@@@@)O=[S@@@@@@@            NN
)@@G@@                                                      SE@@@@)O\[S@@@@@@@NO
)@@G@@                                                                  SF@@@@NP
)@@G@@)O'[S@@@@@@@                                                            NQ
)@@G@@      SG@@@@)P [S@@@@@@@                                                NR
)@@G@@                  SH@@@@)PK[S@@@@@@@                                    NS
)@@G@@                              SI@@@@)PV[S@@@@@@@                        NT
)@@G@@                                          SJ@@@@)P&[S@@@@@@@            NU
)@@G@@                                                      SK@@@@)P1[S@@@@@@@NV
)@@G@@                                                                  SL@@@@NW
)@@G@@)P/[S@@@@@@@                                                            NX
)@@G@@      SM@@@@)QB[S@@@@@@@                                                NY
)@@G@@                  SN@@@@)QM[S@@@@@@@                                    NZ
)@@G@@                              SO@@@@)QX[S@@@@@@@                        OA
)@@G@@                                          SP@@@@)Q*[S@@@@@@@            OB
)@@G@@                                                      SQ@@@@)Q3[S@@@@@@@OC
)@@G@@                                                                  SR@@@@OD
)@@G@@)Q"[S@@@@@@@                                                            OE
)@@G@@      SS@@@@)RD[S@@@@@@@                                                OF
)@@G@@                  ST@@@@)RO[S@@@@@@@                                    OG
)@@G@@                              SU@@@@)RZ[S@@@@@@@                        OH
)@@G@@                                          SV@@@@)R%[S@@@@@@@            OI
)@@G@@                                                      SW@@@@)R5[S@@@@@@@OJ
)@@G@@                                                                  SX@@@@OK
)@@G@@)S@[S@@@@@@@                                                            OL
)@@G@@      SY@@@@)SF[S@@@@@@@                                                OM
)@@G@@                  SZ@@@@)SQ[S@@@@@@@                                    ON
)@@G@@                              TA@@@@)S-[S@@@@@@@                        OO
)@@G@@                                          TB@@@@)S?[S@@@@@@@            OP
)@@G@@                                                      TC@@@@)S7[S@@@@@@@OQ
)@@G@@                                                                  TD@@@@OR
)@@G@@)T][S@@@@@@@                                                            OS
)@@G@@      TE@@@@)TH[S@@@@@@@                                                OT
)@@G@@                  TF@@@@)TS[S@@@@@@@                                    OU
)@@G@@                              TG@@@@)T<[S@@@@@@@                        OV
)@@G@@                                          TH@@@@)T,[S@@@@@@@            OW
)@@G@@                                                      TI@@@@)T9[S@@@@@@@OX
)@@G@@                                                                  TJ@@@@OY
)@@G@@)U^[S@@@@@@@                                                            OZ
)@@G@@      TK@@@@)UJ[S@@@@@@@                                                PA
)@@G@@                  TL@@@@)UU[S@@@@@@@                                    PB
)@@G@@                              TM@@@@)U>[S@@@@@@@                        PC
)@@G@@                                          TN@@@@)U0[S@@@@@@@            PD
)@@G@@                                                      TO@@@@)U;[S@@@@@@@PE
)@@G@@                                                                  TP@@@@PF
)@@G@@)VA[S@@@@@@@                                                            PG
)@@G@@      TQ@@@@)VL[S@@@@@@@                                                PH
)@@G@@                  TR@@@@)VW[S@@@@@@@                                    PI
)@@G@@                              TS@@@@)V$[S@@@@@@@                        PJ
)@@G@@                                          TT@@@@)V2[S@@@@@@@            PK
)@@G@@                                                      TU@@@@)V.[S@@@@@@@PL
)@@G@@                                                                  TV@@@@PM
)@@G@@)WC[S@@@@@@@                                                            PN
)@@G@@      TW@@@@)WN[S@@@@@@@                                                PO
)@@G@@                  TX@@@@)WY[S@@@@@@@                                    PP
)@@G@@                              TY@@@@)W([S@@@@@@@                        PQ
)@@G@@                                          TZ@@@@)W4[S@@@@@@@            PR
)@@G@@                                                      UA@@@@)W_[S@@@@@@@PS
)@@G@@                                                                  UB@@@@PT
)@@G@@)XE[S@@@@@@@                                                            PU
)@@G@@      UC@@@@)XP[S@@@@@@@                                                PV
)@@G@@                  UD@@@@)X)[S@@@@@@@                                    PW
)@@G@@                              UE@@@@)X:[S@@@@@@@                        PX
)@@G@@                                          UF@@@@)X6[S@@@@@@@            PY
)@@G@@                                                      UG@@@@)Y[[S@@@@@@@PZ
)@@G@@                                                                  UH@@@@QA
)@@G@@)YG[S@@@@@@@                                                            QB
)@@G@@      UI@@@@)YR[S@@@@@@@                                                QC
)@@G@@                  UJ@@@@)Y+[S@@@@@@@                                    QD
)@@G@@                              UK@@@@)Y![S@@@@@@@                        QE
)@@G@@                                          UL@@@@)Y8[S@@@@@@@            QF
)@@G@@                                                      UM@@@@)Z#[S@@@JA@@QG
)@@G@@]@@@ZJ                                                            UN@@@@QH
)@@G@@)ZI[K#1)@#1)@#1)@@@@A@@A[@@@ZS@@@@@_@@A@@A[@@@ZP.A    @@]@@]]@@@ZM!     QI
)@@G@@@@[@@[UO@@@@)ZS[CJA@@/S@@/S@@@@@@@@@+     @@[@@[]@@@Z)RETURN@@A@@A]@@@ZXQJ
)@@G@@@@@@@@]@@@ZV@@@@@@UP@@@@)Z-[C/S@@/S@@/S@@@@@@@@@]     @@[@@[]@@@Z([     QK
)@@G@@@@[@@[]@@@Z&PLUS.A@@A@@A]@@@Z<UQ@@@@)Z%[C/S@@/S@@/S@@@@@@@@@B     @@[@@[QL
)@@G@@]@@@Z2^     @@[@@[]@@@Z\#     @@[@@[]@@@Z?UR@@@@)Z3[C/S@@/S@@/S@@@@@@@@@QM
)@@G@@G     @@[@@[]@@@Z;F     @@[@@[]@@@Z8D     @@[@@[]@@@Z5US@@@@)Z/[C/S@@/S@QN
)@@G@@@/S@@@@@@@@@@#    @@]@@]]@@@)^I     @@[@@[]@@@)[H     @@[@@[]@@@Z"UT@@@@QO
)@@G@@)) [K/S@@JA@@JA@@@@]    @@]@@]]@@@)I      @@ @@ ]@@@)F@@@   @@@G@@@@D@@DQP
)@@G@@]@@@)BUU@@@@))J[K/S@@/S@@JA@@@@^    @@]@@]]@@@)S6789  012345@@E@@E]@@@)OQQ
)@@G@@ 1    @@#@@#]@@@)LUV@@@@))T[K/S@@JA@@JA@@@@A    @@]@@]]@@@)+1     @@[@@[QR
)@@G@@]@@@)Z            @@F@@F]@@@)VUW@@@@))<[K/S@@/S@@JA@@@@@@@@A@@A@@A[@@@)?QS
)@@G@@67    012345@@C@@C]@@@)*      @@[@@@]@@@)>UX@@@@))![C/S@@/S@@/S@@@@@@@@@QT
)@@G@@@     @@[@@[]@@@)5      @@]@@]]@@@)2@@@@@@@@A@@A[@@@)\UY@@@@))6[K/S@@/S@QU
)@@G@@@JA@@@@@@@  @@^@@^]@@@)_@@@   @@@I@@@@D@@D]@@@);ALL   @@#@@#]@@@)8UZ@@@@QV
)@@G@@)-@[C/S@@/S@@/S@@@@@@@@@@@    @@]@@]]@@@-C@@@@@]@@A@@A[@@@- @@@@@^@@A@@AQW
)@@G@@[@@@-]VA@@@@)-D[K/S@@JA@@@@@@@                        [07@@@]@@@-J@@@   QX
)@@G@@@@@]@@@@D@@D]@@@-FVB@@@@)-N[S@@@@@@@                                    QY
)@@G@@                              VC@@@@)-Y[S@@@@@@@                        QZ
)@@G@@                                          VD@@@@)-([S@@@@@@@            RA
)@@G@@                                                      VE@@@@)-4[S@@@@@@@RB
)@@G@@                                                                  VF@@@@RC
)@@G@@)-_[S@@@@@@@                                                            RD
)@@G@@      VG@@@@)+E[S@@@@@@@                                                RE
)@@G@@                  VH@@@@)+P[S@@@@@@@                                    RF
)@@G@@                              VI@@@@)+)[S@@@@@@@                        RG
)@@G@@                                          VJ@@@@)+:[S@@@@@@@            RH
)@@G@@                                                      VK@@@@)+6[S@@@@@@@RI
)@@G@@                                                                  VL@@@@RJ
)@@G@@)<[[S@@@@@@@                                                            RK
)@@G@@      VM@@@@)<G[S@@@@@@@                                                RL
)@@G@@                  VN@@@@)<R[S@@@@@@@                                    RM
)@@G@@                              VO@@@@)<+[S@@@@@@@                        RN
)@@G@@                                          VP@@@@)<![S@@@@@@@            RO
)@@G@@                                                      VQ@@@@)<8[S@@@@@@@RP
)@@G@@                                                                  VR@@@@RQ
)@@G@@)=#[S@@@@@@@                                                            RR
)@@G@@      VS@@@@)=I[S@@@@@@@                                                RS
)@@G@@                  VT@@@@)=T[S@@@@@@@                                    RT
)@@G@@                              VU@@@@)==[S@@@@@@@                        RU
)@@G@@                                          VV@@@@)=\[S@@@@@@@            RV
)@@G@@                                                      VW@@@@)='[S@@@@@@@RW
)@@G@@                                                                  VX@@@@RX
)@@G@@)> [S@@@@@@@                                                            RY
)@@G@@      VY@@@@)>K[S@@@@@@@                                                RZ
)@@G@@                  VZ@@@@)>V[S@@@@@@@                                    SA
)@@G@@                              WA@@@@)>&[S@@@@@@@                        SB
)@@G@@                                          WB@@@@)>1[S@@@@@@@            SC
)@@G@@                                                      WC@@@@)>/[S@@@@@@@SD
)@@G@@                                                                  WD@@@@SE
)@@G@@)&B[S@@@@@@@                                                            SF
)@@G@@      WE@@@@)&M[S@@@@@@@                                                SG
)@@G@@                  WF@@@@)&X[S@@@@@@@                                    SH
)@@G@@                              WG@@@@)&*[S@@@@@@@                        SI
)@@G@@                                          WH@@@@)&3[S@@@@@@@            SJ
)@@G@@                                                      WI@@@@)&"[S@@@@@@@SK
)@@G@@                                                                  WJ@@@@SL
)@@G@@)$D[S@@@@@@@                                                            SM
)@@G@@      WK@@@@)$O[S@@@@@@@                                                SN
)@@G@@                  WL@@@@)$Z[S@@@@@@@                                    SO
)@@G@@                              WM@@@@)$%[S@@@@@@@                        SP
)@@G@@                                          WN@@@@)$5[S@@@@@@@            SQ
)@@G@@                                                      WO@@@@)*@[S@@@@@@@SR
)@@G@@                                                                  WP@@@@SS
)@@G@@)*F[S@@@@@@@                                                            ST
)@@G@@      WQ@@@@)*Q[S@@@@@@@                                                SU
)@@G@@                  WR@@@@)*-[S@@@@@@@                                    SV
)@@G@@                              WS@@@@)*?[S@@@@@@@                        SW
)@@G@@                                          WT@@@@)*7[S@@@@@@@            SX
)@@G@@                                                      WU@@@@)(][S@@@@@@@SY
)@@G@@                                                                  WV@@@@SZ
)@@G@@)(H[S@@@@@@@                                                            TA
)@@G@@      WW@@@@)(S[S@@@@@@@                                                TB
)@@G@@                  WX@@@@)(<[S@@@@@@@                                    TC
)@@G@@                              WY@@@@)(,[S@@@@@@@                        TD
)@@G@@                                          WZ@@@@)(9[S@@@@@@@            TE
)@@G@@                                                      XA@@@@)%^[S@@@@@@@TF
)@@G@@                                                                  XB@@@@TG
)@@G@@)%J[S@@@@@@@                                                            TH
)@@G@@      XC@@@@)%U[S@@@@@@@                                                TI
)@@G@@                  XD@@@@)%>[S@@@@@@@                                    TJ
)@@G@@                              XE@@@@)%0[S@@@@@@@                        TK
)@@G@@                                          XF@@@@)%;[S@@@@@@@            TL
)@@G@@                                                      XG@@@@):A[S@@@@@@@TM
)@@G@@                                                                  XH@@@@TN
)@@G@@):L[S@@@@@@@                                                            TO
)@@G@@      XI@@@@):W[S@@@@@@@                                                TP
)@@G@@                  XJ@@@@):$[S@@@@@@@                                    TQ
)@@G@@                              XK@@@@):2[S@@@@@@@                        TR
)@@G@@                                          XL@@@@):.[S@@@@@@@            TS
)@@G@@                                                      XM@@@@)?C[S@@@@@@@TT
)@@G@@                                                                  XN@@@@TU
)@@G@@)?N[S@@@@@@@                                                            TV
)@@G@@      XO@@@@)?Y[S@@@@@@@                                                TW
)@@G@@                  XP@@@@)?([S@@@@@@@                                    TX
)@@G@@                              XQ@@@@)?4[S@@@@@@@                        TY
)@@G@@                                          XR@@@@)?_[S@@@@@@@            TZ
)@@G@@                                                      XS@@@@)!E[S@@@@@@@UA
)@@G@@                                                                  XT@@@@UB
)@@G@@)!P[S@@@@@@@                                                            UC
)@@G@@      XU@@@@)!)[S@@@@@@@                                                UD
)@@G@@                  XV@@@@)!:[S@@@@@@@                                    UE
)@@G@@                              XW@@@@)!6[S@@@@@@@                        UF
)@@G@@                                          XX@@@@),[[S@@@@@@@            UG
)@@G@@                                                      XY@@@@),G[S@@@@@@@UH
)@@G@@                                                                  XZ@@@@UI
)@@G@@),R[S@@@@@@@                                                            UJ
)@@G@@      YA@@@@),+[S@@@@@@@                                                UK
)@@G@@                  YB@@@@),![S@@@@@@@                                    UL
)@@G@@                              YC@@@@),8[S@@@@@@@                        UM
)@@G@@                                          YD@@@@)\#[S@@@@@@@            UN
)@@G@@                                                      YE@@@@)\I[S@@@@@@@UO
)@@G@@                                                                  YF@@@@UP
)@@G@@)\T[S@@@@@@@                                                            UQ
)@@G@@      YG@@@@)\=[S@@@@@@@                                                UR
)@@G@@                  YH@@@@)\\[S@@@@@@@                                    US
)@@G@@                              YI@@@@)\'[S@@@@@@@                        UT
)@@G@@                                          YJ@@@@)0 [S@@@@@@@            UU
)@@G@@                                                      YK@@@@)0K[S@@@@@@@UV
)@@G@@                                                                  YL@@@@UW
)@@G@@)0V[S@@@@@@@                                                            UX
)@@G@@      YM@@@@)0&[S@@@@@@@                                                UY
)@@G@@                  YN@@@@)01[S@@@@@@@                                    UZ
)@@G@@                              YO@@@@)0/[S@@@@@@@                        VA
)@@G@@                                          YP@@@@)1B[S@@@@@@@            VB
)@@G@@                                                      YQ@@@@)1M[S@@@@@@@VC
)@@G@@                                                                  YR@@@@VD
)@@G@@)1X[S@@@@@@@                                                            VE
)@@G@@      YS@@@@)1*[S@@@@@@@                                                VF
)@@G@@                  YT@@@@)13[S@@@@@@@                                    VG
)@@G@@                              YU@@@@)1"[S@@@@@@@                        VH
)@@G@@                                          YV@@@@)2D[S@@@@@@@            VI
)@@G@@                                                      YW@@@@)2O[S@@@@@@@VJ
)@@G@@                                                                  YX@@@@VK
)@@G@@)2Z[S@@@@@@@                                                            VL
)@@G@@      YY@@@@)2%[S@@@@@@@                                                VM
)@@G@@                  YZ@@@@)25[S@@@@@@@                                    VN
)@@G@@                              ZA@@@@)3@[S@@@@@@@                        VO
)@@G@@                                          ZB@@@@)3F[S@@@@@@@            VP
)@@G@@                                                      ZC@@@@)3Q[S@@@@@@@VQ
)@@G@@                                                                  ZD@@@@VR
)@@G@@)3-[S@@@@@@@                                                            VS
)@@G@@      ZE@@@@)3?[S@@@@@@@                                                VT
)@@G@@                  ZF@@@@)37[S@@@@@@@                                    VU
)@@G@@                              ZG@@@@)4][KJA@@JA@@JA@@@'     @@[@@[]@@@4FVV
)@@G@@A     @@[@@[]@@@4C@@@   @@#@@#]@@@4       ZH@@@@)4G[K/S@@/S@@/S@@@ @@@@@VW
)@@G@@@E@@@@@@G@@G]@@@4O@@@@@@@@A@@A]@@@4L@@@@@#@@A@@A[@@@4IZI@@@@)4Q[K/S@@JA@VX
)@@G@@@#1)@@@@G@@G]@@@4)B@@@@@@#]@@@@@G@@G]@@@4WA@@@@@@E@@@@@@G@@G]@@@4SZJ@@@@VY
)@@G@@)4)[K#1)@@/S@@/S@@]@@@4:)     @@[@@[]@@@4*D@@@@@@][@@@@@G@@G]@@@4=D@@@@@VZ
)@@G@@@]@@@@ZK@@@@)4%[K#1)@@/S@@/S@@]@@@45(     @@[@@[]@@@42F@@@@@@@@@@@@@G@@GWA
)@@G@@]@@@4, (    @@]@@]ZL@@@@)44[K#1)@#1)@#1)@@@@G@@G]@@@4"@@@@@ @@A@@A[@@@4;WB
)@@G@@@@@@@@@@A@@A[@@@48,     @@[@@[ZM@@@@)4"[K#1)@@/S@@@@@@@@@@@@@]@@@@@@G@@GWC
)@@G@@]@@@5AH@@@@@@@@@@@@@G@@G]@@@5]F@@@@@@^[@@@ZN@@@@)5C@)*[K@@@@))?@:#[#@K0@WD
)@@G@@[[-@@@C )@5'P8K@@[R^K@59R#@@5O@@[@@#@@[@#)@@[@[]@@[@#9ZO@@@@))1[N#@K0^G[WE
)@@G@@#@K0@@H9)@@[C[)@[X[[-@@@C )@5"P8K@@[R^K@5.[[-@@@C )@5/P8K@@[R^K@5;ZP@@@@WF
)@@G@@));[N@FSC@-)CS]A@@N8K@@ [[)@[XC[\@@@[[)@[ZC[\@@[[@0@[YG80@@]/K@@-#:80@]AWG
)@@G@@/ )@-#ZQ@@@@)- [F#[#@^G^G[#[#@@@@@@@R@K@5:N@K@5%M@-)@@R@)[#GR@K[#FN8K@@TWH
)@@G@@M@-)@@R@)[#ER@K[#DZR@@@@)-I[N#@@K^G^G^G@@@N8K@@TA@)@5?A@K@5:^@K@5%/K@@-KWI
)@@G@@O'0@@[/KF@@@*4F@@@OY;@@@R@)@5?ZS@@@@)-S[F#[#@^G^G[#[#@@@@@@@R@)@5?R@K@5:WJ
)@@G@@M@M)@@R@)[#ER@K[#DN8K@@ M@M)@@R@)[#GR@K[#FZT@@@@)--[M[#[#[#@K0@@@@C ?@@@WK
)@@G@@R;F0@@AB@@59O;@@@[[ )@5'CD)@5'!D)@5'C ?@@@R;F0@@&'0@@[ZU@@@@)-:[F#[#[#@KWL
)@@G@@0[#[#@@@@@@@CD)@5"!D)@5"C ?@@@R;F0@@AB@@5;O;@@@[[ )@5/CD)@5/!D)@5/ZV@@@@WM
)@@G@@)-4[F#@K0^G^G^G^G^@@@@@@/,)@BNC[)@5O[ )@6@CD)@6@AB@@5_R;F0@@AB@@5.O;@@@[WN
)@@G@@[ )@5"ZW@@@@)-.[F#[#@(&-)O^[@K0ES@@@R9K@6E ^@@6F/K@@+(/,0@ )R'K@+^C#@K54WO
)@@G@@R9K@NCC @@6@QB)@5_ZX@@@@)+A[E())CSCS G4G])) G@@@R9K@59/,0@ )R'K@<=C#@K54WP
)@@G@@R9K@NGC @@5'QB)@59/,)@A,R9)@5;ZY@@@@)+J[E())CSCSCSCSCS G]&@@R9)@59R9K@7^WQ
)@@G@@ ^@@7 [[)K6[C[)K6"[[)K6"C )@5'/,0@^:R9)@5.ZZ@@@@)+S[F@ES G^[#@()O0K^G@@@WR
)@@G@@C[)K6[/,)@A,R9)@7^R9K@59 ^@@5'/,)@A,R9)@7[R9K@7^/,)@A,)A@@@@)+-[F#[#[#@(WS
)@@G@@&-)O^[@K0@@@C[)L]A/K@@<-/,0@ )R'K@<-C#@K54R9K@NKC @@5'QB)@59[[)L]#)B@@@@WT
)@@G@@)+%[F#[#[#[#[#[#@()O0K@@/,)@A,R9)@5;R9K[]G ^@[]H[[)L]DC[)K6[[[)K6^C[)L]AWU
)@@G@@[[)K6[)C@@@@)+3[F#[#@(&-)O^@()O0K@@@/,0@^:R9)@5.R9K@59/,0@ )R'K@<FC#@K54WV
)@@G@@R9K@N$C @@5'QB)@59)D@@@@)+/[F#[#[#[#[#[#[#[#[#@@[[)K6[C[)K6"[[)K6"G[)K6"WW
)@@G@@C[)K6[[[)K6"C )@5"[[)K6^C[)L#@)E@@@@)< [F#[#[#[#[@K^G^G^G@@@C[)K6[[[)K6"WX
)@@G@@C )@5'/K@@+!/D)@<FH[)K6"C[)K6[[[)K6"C )@5')F@@@@)<I[F#[@K0K0K0K0K0K^G@@@WY
)@@G@@C[)K6^/K@@+![[)K6[C[)L##[[)L##G[)L#@C[)K6[/D)@<QH[)K6")G@@@@)<R[F#[#@()OWZ
)@@G@@0K^G^G^[@@@@/K@@+L/ )@<=H[)L##C[)K6"/,0@]8R9)@52R9K[##[[)K6"H[)L#@)H@@@@XA
)@@G@@)<)@;]@K0K[#[@@@@@)NC@IU&@@@@@R9K@6B/K@@)?[[)@5PC9)@@@/K@@)?[[)@5PC9)@@[XB
)@@G@@'=@@@@)I@@@@)ND[IWGO[#^()-+)CS)@@@@@[0Z@@@^[J@@@/K@@#R/K@@NJ/,0@#+R9K@6EXC
)@@G@@/K@@#R/K@@NF/,0@#+)J@@@@)NM[QT#[# #@K1^G@@W8@@@A @@@@GG@KL]#&;K@@@/\@@^MXD
)@@G@@0@@@@KH[@L]#/\@@^T$B0@]C[@\@@[)K@@@@)NW[QS]&@]A]AE@@@@/K@@N&/\@@^T$B0@]CXE
)@@G@@[@\@@[[0Z@@@A Z@@@R9K@59^[\@@@&;K@@[G@)@@G)L@@@@)N&[QWGK@^G^GM&@@@R9K[]GXF
)@@G@@/K@@^M%[)L]DG[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#R)M@@@@)N0@YWGO[#^@XG
)@@G@@)52@*/S@#1)@@@@@@@@@@@@@@@A@@A[@@@56@@@@@@]@@@54/K@@#R/K@@N2/,0@#+)N@@@@XH
)@@G@@)57[C/S@#1)@JA@@/S@#1)@@]@@@6[@^?@@@]@@@5_@^?@@@]@@@5.[[*@@@]@@@5;@@@@@@XI
)@@G@@]@@@59)O@@@@)6@[KJA@@JA@@JA@@@G     @@[@@[]@@@6D@@@@@@@@A@@A[@@@6A@@@@@@XJ
)@@G@@@@A@@A[@@@6#@@[@@@)P@@@@)6E[S/S@@@@@                                    XK
)@@G@@                  @^?@@@]@@@6G)Q@@@@)6P[S@@@@@@@                        XL
)@@G@@                                          )R@@@@)6)[S@@@@@@@            XM
)@@G@@                                                      )S@@@@)6:[S@@@@@@@XN
)@@G@@                                                                  )T@@@@XO
)@@G@@)66[S@@#1)@@@@@@@@@@A@@A[@@@7@                                          XP
)@@G@@      )U@@@@)7[[K/S@@/S@@@@@@@                              [[,@@@]@@@7AXQ
)@@G@@      @@A@@A]@@@7#)V@@@@)7F[S@@@@@@@                                    XR
)@@G@@                              )W@@@@)7Q[S@@@@@@@                        XS
)@@G@@                                          )X@@@@)7-[S@@@@@@@            XT
)@@G@@                                                      )Y@@@@)7?[S@@@@@@@XU
)@@G@@                                                                  )Z@@@@XV
)@@G@@)77[S@@@@@@@                                                            XW
)@@G@@      -A@@@@)8][S@@@@@@@                                                XX
)@@G@@                  -B@@@@)8H[S@@@@@@@                                    XY
)@@G@@                              -C@@@@)8S[S@@@@@@@                        XZ
)@@G@@                                          -D@@@@)8<[S@@@@@@@            YA
)@@G@@                                                      -E@@@@)8,[S@@@@@@@YB
)@@G@@                                                                  -F@@@@YC
)@@G@@)89[S@@@@@@@                                                            YD
)@@G@@      -G@@@@)9^[S@@@@@@@                                                YE
)@@G@@                  -H@@@@)9J[S@@@@@@@                                    YF
)@@G@@                              -I@@@@)9U[S@@@@@@@                        YG
)@@G@@                                          -J@@@@)9>[S@@@@@@@            YH
)@@G@@                                                      -K@@@@)90[S@@@@@@@YI
)@@G@@                                                                  -L@@@@YJ
)@@G@@)9;[S@@@@@@@                                                            YK
)@@G@@      -M@@@@)'A[S@@@@@@@                                                YL
)@@G@@                  -N@@@@)'L[S@@@@@@@                                    YM
)@@G@@                              -O@@@@)'W[S@@@@@@@                        YN
)@@G@@                                          -P@@@@)'$[S@@@@@@@            YO
)@@G@@                                                      -Q@@@@)'2[S@@@@@@@YP
)@@G@@                                                                  -R@@@@YQ
)@@G@@)'.[S@@@@@@@                                                            YR
)@@G@@      -S@@@@);C[S@@@@@@@                                                YS
)@@G@@                  -T@@@@);N[S@@@@@@@                                    YT
)@@G@@                              -U@@@@);Y[S@@@@@@@                        YU
)@@G@@                                          -V@@@@);([S@@@@@@@            YV
)@@G@@                                                      -W@@@@);4[S@@@@@@@YW
)@@G@@                                                                  -X@@@@YX
)@@G@@);_[S@@@@@@@                                                            YY
)@@G@@      -Y@@@@)/E[S@@@@@@@                                                YZ
)@@G@@                  -Z@@@@)/P[S@@@@@@@                                    ZA
)@@G@@                              +A@@@@)/)[S@@@@@@@                        ZB
)@@G@@                                          +B@@@@)/:[S@@@@@@@            ZC
)@@G@@                                                      +C@@@@)/6[S@@@@@@@ZD
)@@G@@                                                                  +D@@@@ZE
)@@G@@).[[S@@@@@@@                                                            ZF
)@@G@@      +E@@@@).G[S@@@@@@@                                                ZG
)@@G@@                  +F@@@@).R[S@@@@@@@                                    ZH
)@@G@@                              +G@@@@).+[S@@@@@@@                        ZI
)@@G@@                                          +H@@@@).![S@@@@@@@            ZJ
)@@G@@                                                      +I@@@@).8[S@@@@@@@ZK
)@@G@@                                                                  +J@@@@ZL
)@@G@@)"#[S@@@@@@@                                                            ZM
)@@G@@      +K@@@@)"I[S@@@@@@@                                                ZN
)@@G@@                  +L@@@@)"T[S@@@@@@@                                    ZO
)@@G@@                              +M@@@@)"=[S@@@@@@@                        ZP
)@@G@@                                          +N@@@@)"\[S@@@@@@@            ZQ
)@@G@@                                                      +O@@@@)"'[S@@@@@@@ZR
)@@G@@                                                                  +P@@@@ZS
)@@G@@)_ [S@@@@@@@                                                            ZT
)@@G@@      +Q@@@@)_K[S@@@@@@@                                                ZU
)@@G@@                  +R@@@@)_V[S@@@@@@@                                    ZV
)@@G@@                              +S@@@@)_&[S@@@@@@@                        ZW
)@@G@@                                          +T@@@@)_1[S@@@@@@@            ZX
)@@G@@                                                      +U@@@@)_/[S@@@@@@@ZY
)@@G@@                                                                  +V@@@@ZZ
)@@G@@-@B[S@@@@@@@                                                            AA
)@@G@@      +W@@@@-@M[S@@@@@@@                                                AB
)@@G@@                  +X@@@@-@X[S@@@@@@@                                    AC
)@@G@@                              +Y@@@@-@*[S@@@@@@@                        AD
)@@G@@                                          +Z@@@@-@3[S@@@@@@@            AE
)@@G@@                                                      <A@@@@-@"[S@@@@@@@AF
)@@G@@                                                                  <B@@@@AG
)@@G@@-[D[S@@@@@@@                                                            AH
)@@G@@      <C@@@@-[O[S@@@@@@@                                                AI
)@@G@@                  <D@@@@-[Z[S@@@@@@@                                    AJ
)@@G@@                              <E@@@@-[%[S@@@@@@@                        AK
)@@G@@                                          <F@@@@-[5[S@@@@@@@            AL
)@@G@@                                                      <G@@@@-]@[K@/S@@/SAM
)@@G@@@@/S@@[@@[]F@@@@@@@@A@@A[@@[]C@@@@@@@@A@@A[@@[]                   <H@@@@AN
)@@G@@-]E[S#1)@@@@                                          @^?@@@]@@[]I@@@@@@AO
)@@G@@@@A@@A<I@@@@-]P[S@@@@@@@                                                AP
)@@G@@                  <J@@@@-])[S@@@@@@@                                    AQ
)@@G@@                              <K@@@@-]:[S@@@@@@@                        AR
)@@G@@                                          <L@@@@-]6[S@@@JA@@[@@[#]      AS
)@@G@@                                                      <M@@@@-#[[K#1)@#1)AT
)@@G@@@])@@@@@[@[]@@[@5>@@@@@@@@A@@A[@@[#C@@@@@@@@A@@A[@@[# @@@@@[@@A@@A<N@@@@AU
)@@G@@-#F@K*@@@@@@)<$@3#[#@K0^G@@@@@R^K[#/[[-@@@C )[#;P8K@@[R^K[#'R#@[#P@@[@@#AV
)@@G@@@@[@5G<O@@@@)<![MK0^G[@FSC@-)@[@0@[YG80@@]/K@@<':80@]A/ )@<'H9)@@[C[)@[XAW
)@@G@@[[-@@@C )[#.P8K@@[<P@@@@)<7[MK0^G[#[#@^G@@R@K[^4N8K@@TM@-)@@R@)[^3R@K[^2AX
)@@G@@N8K@@ [[)@[XC[\@@@[[)@[ZC[\@@[<Q@@@@)=[[N#@K0K0K0@^@@@/K@@=BO'0@@[/KF@@@AY
)@@G@@*4F@@@OY;@@@R@)[#!R@K[#?N@K[#:M@-)@@R@)[^5<R@@@@)=F[F#[#[#@K0K0[#@@@@@@@AZ
)@@G@@R@K[^2N8K@@ M@M)@@R@)[^5R@K[^4N8K@@TA@)[#!A@K[#?^@K[#:<S@@@@)=O[F#@K0K0@BA
)@@G@@K0K0@@@@@@@@CD)[#;!D)[#;C ?@@@R;F0@@&'0@@[R@)[#!R@K[#?M@M)@@R@)[^3<T@@@@BB
)@@G@@)=X[F#@K0[#[#[#@@@@@@@@@O;@@@[[ )[#.CD)[#.!D)[#.C ?@@@R;F0@@AB@[#'O;@@@[BC
)@@G@@[ )[#;<U@@@@)=&[F#[#[@K0ES G^[#[#@@@C @[#;QB)[#'/,)@A,R9)[#/R9K[#" ^@[#_BD
)@@G@@/,)@BNC[)[#PAB@[#/<V@@@@)=\[E(&-)O^[@K)^G^@@@@@@/K@@<$[[)[#QC9)@@['=@@@@BE
)@@G@@/K@@=5/,0@ )R'K@=8C#@L#5R9K@N3<W@@@@)=8@UK0K@@@@)N3@&U&]AE@-+@@@@@@@@@@@BF
)@@G@@/K@@#R/K@@N6/,0@#+R9K[#"/K@@<$[[)[#QC9)@@@<X@@@@-#3[C/S@#1)@#1)@JA@@@@@@BG
)@@G@@[[*@@@]@@[#/@@@@@@]@@[#'@@@@@@@@A@@A[@@[#7@@@@@@]@@[#5<Y@@@@-#/[K/S@#1)@BH
)@@G@@@@@@@@                                    @^?@@@]@@[^@@^?@@@]@@[#"<Z@@@@BI
)@@G@@-^A[S@@@@@@@                                                            BJ
)@@G@@      =A@@@@-^L[S@@@@@@@                                                BK
)@@G@@                  =B@@@@-^W[S@@@@@@@                                    BL
)@@G@@                              =C@@@@-^$[S@@@@@@@                        BM
)@@G@@                                          =D@@@@-^2@)*[K@@@@)=;@:#@K0@@@BN
)@@G@@R@W@@[[ -@@[C )[A3R@W@@@R#@[AD@@[@@#@@[[#H@@[@[]@@[[#&=E@@@@)>@[N#@^G@K0BO
)@@G@@[#@@@@C )[A;R@W@@^[ -@@[C )[A9R@W@@#[ -@@[C )[A7R@W@@][ -@@[C )[A5=F@@@@BP
)@@G@@)>E[M^G@K0[#@@@@@@[ -@@[C )[B[R@W@@B[ -@@[C )[A_R@W@@A[ -@@[C )[A.R@W@@ BQ
)@@G@@[ -@@[=G@@@@)>O[MK0[#@^G@@@@@@R@W@@F[ -@@[C )[BBR@W@@E[ -@@[C )[B R@W@@DBR
)@@G@@[ -@@[C )[B#R@W@@C=H@@@@)>Y[N#@^G[#@K]6]@@/K@@>!:80@]A/ )@>!H9)@@[C[)@[XBS
)@@G@@[ -@@[C )[BFR@W@@G[ -@@[C )[BD=I@@@@)>*[MK0^G[#@K0K0@@M@-)@@R@)[:PR@K[:OBT
)@@G@@N8K@@ [[)@[XC[\@@@[[)@[ZC[\@@[[@0@[YG80@@]=J@@@@)>2[MK0K0^G^G^G@@@/KF@@@BU
)@@G@@*4F@@@OY;@@@R@)[A-R@K[A)N@K[AZM@-)@@R@)[:RR@K[:QN8K@@T=K@@@@)>/[MK^G^G^GBV
)@@G@@[#[#@@N8K@@ M@M)@@R@)[:RR@K[:QN8K@@TA@)[A-A@K[A)^@K[AZ/K@@>'O'0@@[=L@@@@BW
)@@G@@)&A[N#[#@K0K0@K0@@R;F0@@9()[A29!?@@@R;F0@@&'0@@[R@)[A-R@K[A)M@M)@@R@)[:PBX
)@@G@@R@K[:O=M@@@@)&K[MK0[#@^G@@@@@@9!?@@@R;F0@@9()[A89!?@@@R;F0@@9()[A69!?@@@BY
)@@G@@R;F0@@9()[A49!?@@@=N@@@@)&U[N#@^G@K0[#@@@@9()[B@9!?@@@R;F0@@9()[A"9!?@@@BZ
)@@G@@R;F0@@9()[A/9!?@@@R;F0@@9()[A'=O@@@@)&=[M^G@K0[#@@@@@@R;F0@@9()[BA9!?@@@CA
)@@G@@R;F0@@9()[B^9!?@@@R;F0@@9()[B]9!?@@@R;F0@@=P@@@@)&,[EK0[#[#[@K0ES@@@@@@@CB
)@@G@@R9K[B] ^@[B#/,)@BNC[)[AD9()[BE9!?@@@R;F0@@9()[BC9!?@@@=Q@@@@)&7[E())CS GCC
)@@G@@]&]@O0ESC@@@/,)@A,R9)[A6R9K[C /,)@A,R9)[B/R9K[C  ^@[CA/,)@A,R9)[B9=R@@@@CD
)@@G@@)$@[E()O0K^G^G]&UA[KK@@@/,0@ )R'K@$EC#@LA(R9K@N7C @[CAQB)[C /,)@A,R9)[A4CE
)@@G@@R9K[C =S@@@@)$D[F@K0K0ET*S [@ES G@@@R9)[O1R9K[A2/,0@ )R'K@$NC#@LA(R9K@ODCF
)@@G@@C @[A3QB)[A2/K@@/0=T@@@@)$M[F@K0ES G^[#@()O0K@@@/,)@A,R9)[A2R9K[B5 ^@[B6CG
)@@G@@/,)@A,R9)[O4R9K[A, ^@[A\/,0@^:=U@@@@)$V[F@K0ES G^@()O0K]&@@@R9K[C /,)@A,CH
)@@G@@R9)[A4R9K[C /,)@A,R9)[B/R9K[C  ^@[CA/K@[[==V@@@@)$=[E())CSCS G4G]))CS@@@CI
)@@G@@ ^@[CA/,0@ )R'K[[YC#@LA(R9K@OPC @[CAQB)[C /,)@A,R9)[B/=W@@@@)$![E()O0K]&CJ
)@@G@@[N[@K0ES G@@R9)[C R9K[B$ ^@[B*/,)@A,R9)[O7R9K[C /,)@A,R9)[B$R9K[C =X@@@@CK
)@@G@@)$6[F@K0ES G^@()O0K^G@@@ ^@[B\/,)@A,R9)[O7R9K[C /,)@A,R9)[B,R9K[C  ^@[CACL
)@@G@@/,)@A,=Y@@@@)$_[E()O0K^G]&[N[@ES G@@R9)[B$R9K[C /,)@A,R9)[O"R9K[C  ^@[CACM
)@@G@@/,)@A,R9)[C R9K[B,=Z@@@@)*C[F@ES G^[#@()O0K^@@@@/K@[[?/,)@A,R9)[C R9K[A/CN
)@@G@@ ^@[A./,)@A,R9)[B,R9K[C /,)@A,>A@@@@)*L[F#@()O0K^[#@()O0K@@@/,)@A,R9)[P CO
)@@G@@R9K[B] ^@[B#/K@@*9/,)@A,R9)[P]R9K[B] ^@[B#>B@@@@)*U[F@K0ES G^[@K0ES G@@@CP
)@@G@@R9)[PFR9K[B] ^@[B#/K@@*9/,)@A,R9)[PCR9K[B] ^@[B#/K@@*9>C@@@@)*<[F@K^G]&[CQ
)@@G@@N[@K^G]&@@@@R9K[B] ^@[B#/K@@*9/,)@A,R9)[B/R9K[B] ^@[B#/K@@*9/,)@A,>D@@@@CR
)@@G@@)*?[E())C]A[N@())C]A@@@@ ^@[B#/K@@*9/,)@A,R9)[PLR9K[B] ^@[B#/K@@*9/,)@A,CS
)@@G@@R9)[PI>E@@@@)*5[E()O0K^[#@()O0K]&@@@R9K[C /,)@A,R9)[B/R9K[C  ^@[CA/K@@*9CT
)@@G@@/,)@A,R9)[POR9K[B]>F@@@@)*"[E()) G]&]@-)O0ESC@@@/,)@A,R9)[C R9K[A4 ^@[A5CU
)@@G@@/,)@A,R9)[PRR9K[C /,)@A,R9)[A4>G@@@@)(B[F#[#@(&-)O^[#@()O0@@R9)[A8R9K[C CV
)@@G@@ ^@[CA/,0@ )R'K[[YC#@LA(R9K@PJC @[A5QB)[A4>H@@@@)(K[F@ES G^[#@()O0K^G@@@CW
)@@G@@ ^@[CA/,)@A,R9)[C R9K[A8 ^@[A9/,)@A,R9)[PYR9K[C /,)@A,>I@@@@)(T[E()O0K]&CX
)@@G@@[N[@ES G^@@@/,)@A,R9)[P>R9K[C /,)@A,R9)[B]R9K[C /,)@A,R9)[P+R9K[C >J@@@@CY
)@@G@@)(+[E()O0K^G]&[N[@K^G@@@ ^@[B#/K@[[?/,)@A,R9)[C R9K[A/ ^@[A./,)@A,R9)[A8CZ
)@@G@@R9K[C >K@@@@)(:[E()O0K^[#@()O0K^@@@@/K@@!F/,)@A,R9)[P R9K[B] ^@[B#/K@@!FDA
)@@G@@/,)@A,R9)[P]R9K[B]>L@@@@)(4[F#@()O0K^[#@()O0K@@@/,)@A,R9)[PFR9K[B] ^@[B#DB
)@@G@@/K@@!F/,)@A,R9)[PCR9K[B] ^@[B#>M@@@@)(.[F@K0ES G^[@K0ES G@@@R9)[PIR9K[B]DC
)@@G@@ ^@[B#/K@@?>/,)@A,R9)[B/R9K[B] ^@[B#/K@@!F>N@@@@)%A[F@K^G^G]&UA[KK]&@@@@DD
)@@G@@R9K[A4/,0@ )R'K@%MC#@LA(R9K@P1C @[A5QB)[A4/K@@?>/,)@A,>O@@@@)%J[E())C]A]DE
)@@G@@A[NH#@*C@@@@/,0@ )R'K@%WC#@LA(R9K@P_C @[A5QB)[A4/K@@%>/,0@^:R9)[P?>P@@@@DF
)@@G@@)%S[E()O0K^[#[#@(&-)O@@@R'K[[YC#@LA(R9K@QHC @[A5QB)[A4/K@@%>/,0@^:R9)[P2DG
)@@G@@R9K[A4>Q@@@@)%-[F@ES G^[#@()O0K]&@@@R9K[C /,)@A,R9)[P;R9K[C  ^@[CA/,0@^:DH
)@@G@@R9)[P8R9K[A4/,0@ )>R@@@@)%%[E()) G]&]@-)O0ESC@@@/,)@A,R9)[C R9K[A/ ^@[A.DI
)@@G@@/,)@A,R9)[P"R9K[C /,)@A,R9)[A4>S@@@@)%3[F@K0K0ET*S [@K0K0@@@9()[A>9!)@[VDJ
)@@G@@/,0@ )R'K[[YC#@LA(R9K@QVC @[A5QB)[A4/K@[[?>T@@@@)%/[F#@*CSC[50A]@-)-)@@@DK
)@@G@@:8@@@[9()@[V9!)[A>/@@@:U@[@[A4/K@[X%A]0@[ZR'0@:@A#0@[Y>U@@@@): [F@^G^[#[DL
)@@G@@#@()O0K@@@@@/,)@A,R9)[A?R9K[C  ^@[CA @@[A!/K@@:E9()[A?9!?@@@/K@@:D>V@@@@DM
)@@G@@):I[F#@()O0K]&[N[@K0ES@@R9K[A/ ^@[A./,)@A,R9)[C R9K[QD/,)@A,R9)[Q R9K[QDDN
)@@G@@ ^@[QE>W@@@@):R[E())C]A]A]A[KK0K@@@@/K@[D@A]0@[ZR'0@:)A#0@[Y9()[A>9!)@[VDO
)@@G@@/K@@:9/,)@A,R9)[QD>X@@@@):)[E'8#[@K0K0^@K0K@@@@@/K@@:%9()[A?9!?@@@/K@@:(DP
)@@G@@:8@@@[9()@[V9!)[A>/@@@:9@[@[A4>Y@@@@):([F#[#@()O0K^G]&[N[@@@/,)@A,R9)[Q DQ
)@@G@@R9K[QD ^@[QE/,)@A,R9)[A?R9K[C  ^@[CA @@[A!>Z@@@@):2[E()O0K^G]&[N[@K0K0@@DR
)@@G@@[[)L(FC )[A./,)@A,R9)[QDR9K[A/ ^@[A./,)@A,R9)[C R9K[QD&A@@@@):;[F#@K0K[#DS
)@@G@@[#[#[#@@@@@@A#0@[Y9()[A>9!)@[V[[)L(F @@@@M/ )@?@W[)L(];P)@@=C[)L(F&B@@@@DT
)@@G@@)?^[E*CSC[50A]@-)-)C@@@@/K@@?K:8@@@[9()@[V9!)[A>/@@@?V@[@[(F/K@@B!A]0@[ZDU
)@@G@@R'0@?B&C@@@@)?H[EK0K^G^G]&[N[@K0@@@@QB)[C /,)@A,R9)[A?R9K[C  ^@[CA @@[A!DV
)@@G@@/K@@?L9()[A?9!?@@@&D@@@@)?Q[F#@(&-)O^[#[#@(&-)@@C#@LA(R9K@RAC @[A.QB)[A/DW
)@@G@@/,0@ )R'K@?VC#@LA(R9K@Q&C @[CA&E@@@@)?Z[E*C[N@())C]A[N@()@@@R9)[P+R9K[C DX
)@@G@@ ^@[CA/K@[[?/,0@^:R9)[BAR9K[A//,0@ )R'K[[?&F@@@@)?*[F@ES G^@()O0K^G^G@@@DY
)@@G@@9()[A>9!)@[V/,)@A,R9)[P"R9K[C /,)@A,R9)[B]R9K[C /,)@A,&G@@@@)?1[F#@*CSC[DZ
)@@G@@50A]@-)-)@@@:8@@@[9()@[V9!)[A>/@@[[?@[@[A4/K@[D@A]0@[ZR'0@?5A#0@[Y&H@@@@EA
)@@G@@)?'[F@^G^[#[#@()O0K@@@@@/,)@A,R9)[A?R9K[QD ^@[QE @@[A!/K@@?_9()[A?9!?@@@EB
)@@G@@/K@@?"&I@@@@)!#[E()O0K^G]&[N[@K^G@@@ ^@[CA/K@[[?/,)@A,R9)[C R9K[A/ ^@[A.EC
)@@G@@/,)@A,R9)[QDR9K[C &J@@@@)!G[E()O0K]&[N[@ES G^@@@/,)@A,R9)[B/R9K[C /,)@A,ED
)@@G@@R9)[A4R9K[C /,)@A,R9)[B/R9K[C &K@@@@)!P[F#@()O0K^G^G]&UA[K@@R'K[[YC#@LA(EE
)@@G@@R9K@RLC @[A5QB)[A4/,)@A,R9)[C R9K[A4 ^@[A5&L@@@@)!Y[F@K0K0ET*S [@K0K0@@@EF
)@@G@@C @[BDQB)[BC/,0@ )R'K@!?C#@LA(R9K@R\C @[B#QB)[B]/,0@ )&M@@@@)!$[E(&-)O^[EG
)@@G@@@K0ES G^@@@@/,)@A,R9)[(MR9K[C  ^@[CA/K@[[Y/,0@ )R'K@!?C#@LA(R9K@R.&N@@@@EH
)@@G@@)!0[E()O0K]&[N[@K0K0K0@@9!)@[V[[)L(FC )[BD/,)@A,R9)[P"R9K[C /,)@A,R9)[B]EI
)@@G@@R9K[C &O@@@@)!9[F#[#@*CSC[50A]@-)-)@9()@[V9!)[A>/@@@,T@[@[(F/K@@B!A]0@[ZEJ
)@@G@@R'0@!"A#0@[Y9()[A>&P@@@@),][EK[#[@K0K0ES G@@@@@@R9)[A?R9K[QD ^@[QE @@[A!EK
)@@G@@/K@@,C9()[A?9!?@@@/K@@,B:8@@@[&Q@@@@),F[F@ES G^@()O0K]&[N@@@R9)[(PR9K[C EL
)@@G@@/,)@A,R9)[BCR9K[C /,)@A,R9)[QDR9K[C /,)@A,&R@@@@),O[F@K0ES G^[#[#[#@@@@@EM
)@@G@@;P)@@=C[)L(F[[)L(FC )[A./,)@A,R9)[C R9K[A/ ^@[A./,)@A,&S@@@@),X[F#[@^G^GEN
)@@G@@^G^G])-)@@@@A]0@[ZR'0@,$A#0@[Y9()[A>9!)@[V[[)L(F @@@@M/ )@,)W[)L(]&T@@@@EO
)@@G@@),&[F@I,@0K^G^G[@^G@@@@@9()[A?9!?@@@/K@@,0:8@@@[9()@[V9!)[A>/@@@,;@[@[(FEP
)@@G@@/K@@B!&U@@@@),\[F@K0K0ES G^[#[#@(&@@R9K@S C @[CAQB)[C /,)@A,R9)[A?R9K[C EQ
)@@G@@ ^@[CA @@[A!/K@@,1&V@@@@),8[F#@*C]A]A[NH#@*C@@@@/,0@ )R'K[[?C#@LA(R9K@S>ER
)@@G@@C @[A.QB)[A//,0@ )R'K@,;C#@LA(&W@@@@)\[[E()O0K^[#@()O0K^@@@@/K@@\I/,)@A,ES
)@@G@@R9)[P R9K[B] ^@[B#/K@[[?/,0@^:R9)[BAR9K[A/&X@@@@)\E[F#@()O0K^G]&[N[@ES@@ET
)@@G@@R9K[C /,)@A,R9)[(MR9K[C  ^@[CA/,)@A,R9)[P]R9K[B] ^@[B#&Y@@@@)\N[E()) G]&EU
)@@G@@]@-)O0ESC@@@/,)@A,R9)[C R9K[A/ ^@[A./,)@A,R9)[(SR9K[C /,)@A,R9)[B]&Z@@@@EV
)@@G@@)\W[F#[#@(&-)O^[#[#@(&@@R9K@S;C @[A5QB)[A4/,0@ )R'K[[YC#@LA(R9K@S0C @[A5EW
)@@G@@QB)[A4$A@@@@)\>[F#@*C]A[N@()) G]&@@@R9)[A4R9K[C /,)@A,R9)[B/R9K[C  ^@[CAEX
)@@G@@/,0@ )R'K@14C#@LA($B@@@@)\,[F@ES G^[#@()O0K^G@@@QB)[A4/,)@A,R9)[C R9K[A4EY
)@@G@@ ^@[A5/,)@A,R9)[B/R9K[C /,)@A,$C@@@@)\7[F#@(&-)O^@()O0K^G@@@C )[BD/,0@^:EZ
)@@G@@R9)[A$R9K[A4/,0@ )R'K@1CC#@LA(R9K@T#C @[A5$D@@@@)0@[F#[#[#[#@*CSC[50A]@@FA
)@@G@@/@@@0T@[@[(F/K@@B!A]0@[ZR'0@0BA#0@[Y9()[A>9!)@[V[[)L(F$E@@@@)0D[F#[#@K[#FB
)@@G@@[@K0K0@@@@@@ ^@[CA @@[A!/K@@0L9()[A?9!?@@@/K@@0K:8@@@[9()@[V9!)[A>$F@@@@FC
)@@G@@)0M[E()O0K^G]&[N[@K0ES@@R9K[C  ^@[CA/,)@A,R9)[C R9K[BE ^@[BF/,)@A,R9)[A?FD
)@@G@@R9K[C $G@@@@)0V[E()) G]&]@-)O0ESC@@@/,)@A,R9)[C R9K[BC ^@[BD/,)@A,R9)[(PFE
)@@G@@R9K[C /,)@A,R9)[BC$H@@@@)0=[F#[#[#@K0K[#[#@@@@@@C[)L(F[[)L(F @@@@M/ )@0:FF
)@@G@@W[)L(];P)@@=C[)L(F[[)L(FC )[BD$I@@@@)0![F#[@^G^G^G^G^G]&S@@@R9K@T3C @[BDFG
)@@G@@QB)[BC[[)L(ZC[)L(F[[0L(F @@@@N/ 0@00S[)L(]$J@@@@)06[F#@*C]A[N@()) G]&@@@FH
)@@G@@R9)[BER9K[C /,)@A,R9)[A/R9K[C  ^@[CA/,0@ )R'K@09C#@LA($K@@@@)0_[F@ES G^[FI
)@@G@@#@()O0K^@@@@/K@@\+/,)@A,R9)[C R9K[A/ ^@[A./,)@A,R9)[BCR9K[C /,)@A,$L@@@@FJ
)@@G@@)1C[F#[#[#@*CSC[50A]@-)@9!)[A>/@@@\+@[@[A4/K@[D@A]0@[ZR'0@1IA#0@[Y9()[A>FK
)@@G@@9!)@[V$M@@@@)1L[F#@K[#[@K0K0ES@@@@@@R9K[C  ^@[CA @@[A!/K@@1S9()[A?9!?@@@FL
)@@G@@/K@@1R:8@@@[9()@[V$N@@@@)1U[E())CS G]&]@O0ESC@@@/,)@A,R9)[C R9K[QD/,)@A,FM
)@@G@@R9)[A/R9K[QD ^@[QE/,)@A,R9)[A?$O@@@@)1<[F#@()O0K^[#@()O0K@@@/,)@A,R9)[A/FN
)@@G@@R9K[C  ^@[CA/K@@\+/,)@A,R9)[QDR9K[A/ ^@[A.$P@@@@)1?[E()O0K^G]&[N[@K^G@@@FO
)@@G@@C )[A./K@@\+/,)@A,R9)[C R9K[A/ ^@[A./,)@A,R9)[B^R9K[C $Q@@@@)15[F#[#@K0KFP
)@@G@@[#[#[#@@@@@@9()[A>9!)@[V[[)L(F @@@@M/ )@1;W[)L(];P)@@=C[)L(F[[)L(F$R@@@@FQ
)@@G@@)1"[F#@*CSC[50A]@-)-)@@@:8@@@[9()@[V9!)[A>/@@@2Q@[@[(F/K@@B!A]0@[ZR'0@2]FR
)@@G@@A#0@[Y$S@@@@)2B[F@^G^[#[#@()O0K@@@@@/,)@A,R9)[A?R9K[C  ^@[CA @@[A!/K@@2GFS
)@@G@@9()[A?9!?@@@/K@@2F$T@@@@)2K[F#[#@(&-)O^[#[#@(&@@R9K@U%C @[A.QB)[A//,0@ )FT
)@@G@@R'K@2QC#@LA(R9K@UEC @[CAQB)[C $U@@@@)2T[F#@*C[N@())C]A[N@@@@R9K[B] ^@[B#FU
)@@G@@/K@[[?/,0@^:R9)[BAR9K[A//,0@ )R'K[[?C#@LA($V@@@@)2+[E())CS G]&]@-)-)O3@@FV
)@@G@@R9K@U5C @[A7QB)[A6/,)@A,R9)[(+R9K[BC ^@[BD/,)@A,R9)[P $W@@@@)2:[F#@*C]@-FW
)@@G@@)-)O3K0E@@@@R'K[[YC#@LA(R9K@U9C @[A7QB)[A6/K@@3M/,0@ )R'K@2\C#@LA($X@@@@FX
)@@G@@)24[F@K0ES G^@()O0K^G@@@ ^@[A5/,)@A,R9)[A4R9K[C /,)@A,R9)[B/R9K[C  ^@[CAFY
)@@G@@/,0@ )$Y@@@@)2.[E()O0K^G^G]&UA[KK@@@/,0@ )R'K@3DC#@LA(R9K@U.C @[A5QB)[A4FZ
)@@G@@/,)@A,R9)[C R9K[A4$Z@@@@)3A[E()O0K^G^G]&UA[KK@@@/,0@ )R'K[[YC#@LA(R9K@V:GA
)@@G@@C @[A5QB)[A4/,0@^:R9)[A$R9K[A4*A@@@@)3J[E()O0K^G]&[N[@ES G@@R9)[BCR9K[C GB
)@@G@@/,)@A,R9)[A2R9K[C  ^@[CA/,0@^:R9)[A$R9K[A4*B@@@@)3S[F@K0ES G^[#[#@(&-)@@GC
)@@G@@C#@LA(R9K@WBC @[BDQB)[BC/,)@A,R9)[C R9K[BC ^@[BD/,)@A,*C@@@@)3-[E*C]@-)-GD
)@@G@@)-)O^G^@@@@@/K@[D@A]0@[ZR'0@3%A#0@[Y9()[A>9!)@[V/K@[[Y/,0@ )R'K@3=*D@@@@GE
)@@G@@)3%[E'8#[@K0K0^@K0K@@@@@/K@@349()[A?9!?@@@/K@@33:8@@@[9()@[V9!)[A>/@@[[YGF
)@@G@@@[@[BC*E@@@@)33[F#[#@()O0K^G]&[N[@@@/,)@A,R9)[C R9K[A/ ^@[A./,)@A,R9)[A?GG
)@@G@@R9K[C  ^@[CA @@[A!*F@@@@)3/[F#@()O0K]&[N[@K0ES@@R9K[A4 ^@[A5/,)@A,R9)[A4GH
)@@G@@R9K[C /,)@A,R9)[B/R9K[C  ^@[CA*G@@@@)4 [E())CSCS G4G])) G@@@R9K[A4/,0@ )GI
)@@G@@R'K@5TC#@LA(R9K@WFC @[A5QB)[A4/,)@A,R9)[C *H@@@@)4I[E())CSCSCSCSCS [#@@@GJ
)@@G@@A]0@[ZR'0@4SA#0@[Y9()[A>9!)@[V[[)L(FC )[BD/,0@^:R9)[A$*I@@@@)4R[F@I,@0K^GK
)@@G@@G^G[@^G@@@@@9()[A?9!?@@@/K@@4-:8@@@[9()@[V9!)[A>/@@@4%@[@[(F/K@@B!*J@@@@GL
)@@G@@)4)[F@K0K0ES G^[#@()O0@@R9)[C R9K[BE ^@[BF/,)@A,R9)[A?R9K[C  ^@[CA @@[A!GM
)@@G@@/K@@4+*K@@@@)4([F@K0ES G^@()O0K^G@@@ ^@[BD/,)@A,R9)[(PR9K[C /,)@A,R9)[BCGN
)@@G@@R9K[C  ^@[CA/,)@A,*L@@@@)42[E()O0K^G^G^G[#[@@@@@/ )@4/W[)L(];P)@@=C[)L(FGO
)@@G@@[[)L(FC )[BD/,)@A,R9)[C R9K[BC*M@@@@)4;[EK0K0K0K[#[#[#@@@@@@[[)L(%C[)L(FGP
)@@G@@[[0L(F @@@@N/ 0@5[S[)L(]C[)L(F[[)L(F @@@@M*N@@@@)5^[F#[#@(&-)O^[#@()O0@@GQ
)@@G@@R9)[A/R9K[C  ^@[CA/,0@ )R'K@5EC#@LA(R9K@W5C @[BDQB)[BC*O@@@@)5H[F@ES G^@GR
)@@G@@()O0K^G]&@@@R9K[A/ ^@[A./,)@A,R9)[BCR9K[C /,)@A,R9)[BER9K[C /,)@A,*P@@@@GS
)@@G@@)5Q[E())C]A]A[NH#@*C@@@@/,0@ )R'K@64C#@LA(R9K@XGC @[A5QB)[A4/K@@'(/,)@A,GT
)@@G@@R9)[C *Q@@@@)5Z[E()O0K^G^G^G^G^G])@@R'0@5%A#0@[Y9()[A>9!)@[V[[)L(FC )[BDGU
)@@G@@/,0@^:R9)[A$R9K[A4*R@@@@)5*[F#[@I,@0K^G^G[@@@@@@9!?@@@/K@@53:8@@@[9()@[VGV
)@@G@@9!)[A>/@@@5/@[@[(F/K@@B!A]0@[Z*S@@@@)51[F#[@K0K0ES G^[#@()@@R9K[BE ^@[BFGW
)@@G@@/,)@A,R9)[A?R9K[C  ^@[CA @@[A!/K@@549()[A?*T@@@@)5'[E())CSCS G4G])) G@@@GX
)@@G@@R9K[BE/,0@ )R'K@6 C#@LA(R9K@X,C @[BFQB)[BE/,)@A,R9)[C *U@@@@)6#[E())CS GGY
)@@G@@]&]@O0ESC@@@/,)@A,R9)[(PR9K[C /,)@A,R9)[BCR9K[C  ^@[CA/,0@^:R9)[(0*V@@@@GZ
)@@G@@)6G[F#@()O0K^G^G^G[#@@@@W[)L(];P)@@=C[)L(F[[)L(FC )[BD/,)@A,R9)[C R9K[BCHA
)@@G@@ ^@[BD*W@@@@)6P[F@^G^G^G^@K0K0@@@@@@C[)L(F[[0L(F @@@@N/ 0@6WS[)L(]C[)L(FHB
)@@G@@[[)L(F @@@@M/ )@6R*X@@@@)6Y[F#[#[#@(&-)O^[#@()@@R9K[C  ^@[CA/,0@ )R'K@6>HC
)@@G@@C#@LA(R9K@Y[C @[BDQB)[BC[[)L(3*Y@@@@)6$[E()) G]&]@O0ESC]A@@@ ^@[A./,)@A,HD
)@@G@@R9)[BCR9K[C /,)@A,R9)[BER9K[C /,)@A,R9)[A/*Z@@@@)60[E()O0K^[#[#[#@*CS@@@HE
)@@G@@A]0@[ZR'0@6'A#0@[Y9()[A>9!)@[V/K@@'(/,)@A,R9)[C R9K[A/(A@@@@)69[F@I,@0K^HF
)@@G@@G^G[@^G@@@@@9()[A?9!?@@@/K@@7#:8@@@[9()@[V9!)[A>/@@@7N@[@[A4/K@[D@(B@@@@HG
)@@G@@)7][F@K0K0ES G^[#@()O0@@R9)[A/R9K[QD ^@[QE/,)@A,R9)[A?R9K[C  ^@[CA @@[A!HH
)@@G@@/K@@7^(C@@@@)7F[F@ES G^[#@()O0K^G@@@ ^@[CA/,)@A,R9)[QDR9K[A/ ^@[A./,)@A,HI
)@@G@@R9)[C R9K[QD/,)@A,(D@@@@)7O[E()O0K]&[N[@K0ES G@@R9)[C R9K[A4 ^@[A5/,)@A,HJ
)@@G@@R9)[A4R9K[C /,)@A,R9)[B/R9K[C (E@@@@)7X[F@K0ES G^[#[#@(&-)@@C#@LA(R9K@YSHK
)@@G@@C @[A5QB)[A4/,)@A,R9)[(+R9K[A6 ^@[A7/,)@A,(F@@@@)7&[E*C[N@())CSCS G4G@@@HL
)@@G@@C#@LA(R9K@Y.C @[A7QB)[A6/,0@^:R9)[A$R9K[A4/,0@ )R'K@'((G@@@@)7\[E*C[N@()HM
)@@G@@)C]A]A[NG@@@R9K@Z[C @[A7QB)[A6/K@@8M/,0@^:R9)[POR9K[A6/,0@ )R'K@75(H@@@@HN
)@@G@@)78[F#@*C[N@())C]A]A@@@@C @[A7QB)[A6/K@@8M/,0@^:R9)[(/R9K[A6/,0@ )R'K@7_HO
)@@G@@C#@LA((I@@@@)8[[E(&-)O^@()O0K^[#@@@@QB)[A6/K@@8M/,0@^:R9)[%]R9K[A6/,0@ )HP
)@@G@@R'K@8DC#@LA(R9K@Z (J@@@@)8E[F#@(&-)O^@()O0K^G@@@ ^@[CA/,0@^:R9)[(0R9K[A6HQ
)@@G@@/,0@ )R'K[[YC#@LA(R9K@ZDC @[A7(K@@@@)8N[E()O0K]&[N[@K0ES G@@R9)[C R9K[BPHR
)@@G@@ ^@[BQ/,)@A,R9)[B]R9K[C /,)@A,R9)[%CR9K[C (L@@@@)8W[F@K0ES G^@()O0K^G@@@HS
)@@G@@ ^@[BT/,)@A,R9)[A6R9K[C /,)@A,R9)[%CR9K[C  ^@[CA/,)@A,(M@@@@)8>[E()O0K^GHT
)@@G@@^G^G])-))@@@/K@@B!A]0@[ZR'0@8,A#0@[Y9()[A>9!)@[V/,)@A,R9)[C R9K[BS(N@@@@HU
)@@G@@)8,[E'8#[@K0K0^@K0K@@@@@/K@@889()[A?9!?@@@/K@@87:8@@@[9()@[V9!)[A>/@@@9LHV
)@@G@@@[@[BP(O@@@@)87[F#[#[#[#[#[#@*CSC@@@/K@@B!A]0@[ZR'0@9@A#0@[Y9()[A>9!)@[VHW
)@@G@@[[)L(FC[)LA? @@[A!(P@@@@)9@[E'8#[@K0K0^@K0K@@@@@/K@@9E9()[A?9!?@@@/K@@9DHX
)@@G@@:8@@@[9()@[V9!)[A>/@@@9L@[@[BS(Q@@@@)9D[F#[#[#[#[#[#[#[#[#@@9!)@[V[[)LBGHY
)@@G@@C[)L(F[[)L(FG[)L%FC[)L(F[[)L%FC[)LA? @@[A!(R@@@@)9M[F#[#@*CSC[50A]@-)-)@HZ
)@@G@@9()@[V9!)[A>/@@@9:@[@[BG/K@@B!A]0@[ZR'0@9RA#0@[Y9()[A>(S@@@@)9V[EK[#[@K0IA
)@@G@@K0ES G@@@@@@R9)[A?R9K[C  ^@[CA @@[A!/K@@9-9()[A?9!?@@@/K@@9):8@@@[(T@@@@IB
)@@G@@)9=[F@K0K0ET*S [@K0K0@@@C @[A5QB)[A4/,0@ )R'K@9:C#@LA(R9K@ZHC @[CAQB)[C IC
)@@G@@/,)@A,(U@@@@)9![E(&-)O^[@K0ES G^@@@@/,)@A,R9)[B/R9K[C  ^@[CA/K@[[Y/,0@ )ID
)@@G@@R'K@92C#@LA(R9K@Z!(V@@@@)96[E()O0K]&[N[@K0ES G@@R9)[C R9K[A4 ^@[A5/,)@A,IE
)@@G@@R9)[B/R9K[C /,)@A,R9)[A4R9K[C (W@@@@)9_[F@K0K0ET*S [@ES G@@@R9)[A$R9K[A4IF
)@@G@@/,0@ )R'K@'EC#@LA(R9K@Z1C @[A5QB)[A4/,)@A,(X@@@@)'C[F@K^G^G^G])-))BR@S@@IG
)@@G@@@[@[A4/K@[D@A]0@[ZR'0@'KA#0@[Y9()[A>9!)@[V/K@@5+/,0@^:(Y@@@@)'L[F@K0K0^@IH
)@@G@@K0K^G@@@@@@@ @@[A!/K@@'U9()[A?9!?@@@/K@@'T:8@@@[9()@[V9!)[A>/@@@'((Z@@@@II
)@@G@@)'U[F#@()O0K^G]&[N[@ES@@R9K[QD/,)@A,R9)[A/R9K[QD ^@[QE/,)@A,R9)[A?R9K[C IJ
)@@G@@ ^@[CA%A@@@@)'<[E())CS G]&]@-)O0ES@@R9)[B/R9K[C  ^@[CA/,)@A,R9)[QDR9K[A/IK
)@@G@@ ^@[A./,)@A,R9)[C %B@@@@)'?[F@ES G^[#[#@(&-)O@@@R'K[[YC#@LA(R9K@)NC @[CAIL
)@@G@@QB)[C /,)@A,R9)[A4R9K[C /,)@A,%C@@@@)'5[F@K0ES G^@()O0K]&@@@R9K[C /,)@A,IM
)@@G@@R9)[B]R9K[C /,)@A,R9)[(MR9K[C  ^@[CA/,0@ )%D@@@@)'"[E()) G]&]@-)O0ESC@@@IN
)@@G@@/,)@A,R9)[C R9K[A/ ^@[A./,)@A,R9)[A/R9K[C /,)@A,R9)[%L%E@@@@);B[F#[#[#@KIO
)@@G@@0K[#[#@@@@@@9!)@[V[[)L(F @@@@M/ )@;IW[)L(];P)@@=C[)L(F[[)L(FC )[A.%F@@@@IP
)@@G@@);K[F#[#@*CSC[50A]@-)-)@9()@[V9!)[A>/@@@;(@[@[(F/K@@B!A]0@[ZR'0@;PA#0@[YIQ
)@@G@@9()[A>%G@@@@);T[EK[#[@K0K0ES G@@@@@@R9)[A?R9K[C  ^@[CA @@[A!/K@@;Z9()[A?IR
)@@G@@9!?@@@/K@@;Y:8@@@[%H@@@@);+[F@K0K0ET*S [@K0K0@@@C @[A.QB)[A//,0@ )R'K@;(IS
)@@G@@C#@LA(R9K@)>C @[CAQB)[C /,)@A,%I@@@@);:[E(&-)O^@()O0K^[#@@@@ ^@[B#/K@[[?IT
)@@G@@/,0@^:R9)[BAR9K[A//,0@ )R'K[[?C#@LA(R9K@- %J@@@@);4[E()O0K^G^G]&UA[KK@@@IU
)@@G@@/,0@ )R'K@/@C#@LA(R9K@-KC @[A5QB)[A4/,)@A,R9)[P]R9K[B]%K@@@@);.[E()O0K^GIV
)@@G@@^G]&UA[KK@@@/,0@ )R'K[[YC#@LA(R9K@-)C @[A5QB)[A4/,0@^:R9)[A$R9K[A4%L@@@@IW
)@@G@@)/A[E()O0K^G^G^G^G^[@@@@/K@[[Y/ )@2=H[)L%SC[)L(F[[)L(FC )[A3/,0@^:R9)[A$IX
)@@G@@R9K[A4%M@@@@)/J[##[#[#@*CSC[50A[80A@@@@@@@@@@[A4@H@[A2/K@[L(A]0@[ZR'0@/PIY
)@@G@@A#0@[Y9()[A>9!)@[V%N@@@@)/R@'/S#@/S#@/S#@/S#@/S#@/S#@/S#@@@@@@@[B]@@@[B@IZ
)@@G@@@@@[A"@@@[A/@@@[A'@@@[A8@@@[A6%O@@@@)/Y[]/S#@/S#@/S#@/S#[@K0K0@@@@:8@@@[JA
)@@G@@9()@[V9!)[A>/@@[[Y@@@[BE@@@[BC@@@[BA@@@[B^%P@@@@)/&[F@^G^[#[#@()O0K@@@@@JB
)@@G@@/,)@A,R9)[A?R9K[C  ^@[CA @@[A!/K@@/:9()[A?9!?@@@/K@@/%%Q@@@@)/\[F@K0K0ETJC
)@@G@@*S [@K^G@@@@ ^@[CA/K@@.A/,0@ )R'K@/7C#@LA(R9K@+:C @[A3QB)[A2/K@[[?%R@@@@JD
)@@G@@)/8[E()O0K]&[N[@ES G^@@@/,)@A,R9)[%ZR9K[C /,)@A,R9)[A2R9K[C /,)@A,R9)[%VJE
)@@G@@R9K[C %S@@@@).[[F#@()O0K^[#[#@(&-)@@C#@LA(R9K@+3C @[A7QB)[A6/K@[[?/,)@A,JF
)@@G@@R9)[C R9K[A/ ^@[A.%T@@@@).E[E*C]@-)-)-)O^G^@@@@@/K@[D@A]0@[ZR'0@.NA#0@[YJG
)@@G@@9()[A>9!)@[V/K@@2)/,0@ )R'K@.H%U@@@@).N[E'8#[@K0K0^@K0K@@@@@/K@@.X9()[A?JH
)@@G@@9!?@@@/K@@.W:8@@@[9()@[V9!)[A>/@@@.?@[@[A2%V@@@@).W[F#[#@()O0K^G]&[N[@@@JI
)@@G@@/,)@A,R9)[%<R9K[QD ^@[QE/,)@A,R9)[A?R9K[C  ^@[CA @@[A!%W@@@@).>[E()O0K^GJJ
)@@G@@]&[N[@K0K0@@[[)L(FC )[A./,)@A,R9)[QDR9K[A/ ^@[A./,)@A,R9)[C R9K[QD%X@@@@JK
)@@G@@).,[F#@K0K[#[#[#[#@@@@@@A#0@[Y9()[A>9!)@[V[[)L(F @@@@M/ )@.3W[)L(];P)@@=JL
)@@G@@C[)L(F%Y@@@@).7[E*CSC[50A]@-)-)C@@@@/K@@"#:8@@@[9()@[V9!)[A>/@@@"I@[@[(FJM
)@@G@@/K@@B!A]0@[ZR'0@.'%Z@@@@)"@[EK0K^G^G]&[N[@K0@@@@QB)[C /,)@A,R9)[A?R9K[C JN
)@@G@@ ^@[CA @@[A!/K@@"^9()[A?9!?@@@:A@@@@)"D[F#@(&-)O^[#[#@(&-)@@C#@LA(R9K@<YJO
)@@G@@C @[A.QB)[A//,0@ )R'K@"IC#@LA(R9K@+"C @[CA:B@@@@)"M[E*C[N@())C]A[N[#@@@@JP
)@@G@@C#@L(]R9K[C  ^@[CA/K@[[?/,0@^:R9)[BAR9K[A//,0@ )R'K[[?:C@@@@)"V[F@K0ES GJQ
)@@G@@^[#@()O0K@@@/,)@A,R9)[B/R9K[C  ^@[CA/,)@A,R9)[C R9K[B- ^@[B+/,0@]P:D@@@@JR
)@@G@@)"=[E()O0K]&[N[@K0K0ET)@R9K@<(C @[CAQB)[C /,)@A,R9)[B/R9K[C /,)@A,R9)[A4JS
)@@G@@R9K[C :E@@@@)"![F#@*C]A[N@()) G]&@@@R9)[%!R9K[C /,)@A,R9)[BCR9K[C  ^@[CAJT
)@@G@@/,0@ )R'K[[YC#@LA(:F@@@@)"6[F@K0ES G^[#[#[#@*@@@R'0@_[A#0@[Y9()[A>9!)@[VJU
)@@G@@/,)@A,R9)[C R9K[BC ^@[BD/,)@A,:G@@@@)"_[F#[]G'8#@/S#[@K0K0^@/K@@_F:8@@@[JV
)@@G@@9()@[V9!)[A>/@@@_O@@@[B=@]@[BC/K@@@@A]0@[Z:H@@@@)_C[EK0K^G^G]&[N[@K0@@@@JW
)@@G@@ ^@[BW/,)@A,R9)[A?R9K[C  ^@[CA @@[A!/K@@_G9()[A?9!?@@@:I@@@@)_L[E()O0K^GJX
)@@G@@^G]&UA[KK@@@/,0@ )R'K[[OC#@LA(R9K@>NC @[BWQB)[BV/,)@A,R9)[C R9K[BV:J@@@@JY
)@@G@@)_U[E()O0K^G^G]&[N[@K0@@C[)L(F/,0@]8R9)[B-R9K[(F[[)LBJC[)L(F/,0@]8R9)[BYJZ
)@@G@@R9K[(F:K@@@@)_<[F#[#[#[#@*CSC[50A]@@/@@@_"@[@[BJ/K@@B!A]0@[ZR'0@_%A#0@[YKA
)@@G@@9()[A>9!)@[V[[)LBM:L@@@@)_?[F#[#@K[#[@K0K0@@@@@@ ^@[CA @@[A!/K@@_49()[A?KB
)@@G@@9!?@@@/K@@_3:8@@@[9()@[V9!)[A>:M@@@@)_5[E()O0K^G^G]&UA[KK@@@/,0@ )R'K@_"KC
)@@G@@C#@LA(R9K@>RC @[CAQB)[C /,)@A,R9)[A?R9K[C :N@@@@)_"[F#[#[#@*CSC[50A]@-)@KD
)@@G@@9!)[A>/@@[@S@[@[BM/K@@B!A]0@[ZR'0[@^A#0@[Y9()[A>9!)@[V:O@@@@-@B[F#@K[#[@KE
)@@G@@K0K0ES@@@@@@R9K[C  ^@[CA @@[A!/K@[@I9()[A?9!?@@@/K@[@H:8@@@[9()@[V:P@@@@KF
)@@G@@-@K[E())CSCS G4G]))CS@@@QB)[BC/,0@ )R'K[@SC#@LA(R9K@>7C @[CAQB)[C /,)@A,KG
)@@G@@R9)[A?:Q@@@@-@T[F#@(&-)O^[#@()O0K@@@/,)@A,R9)[%.R9K[C  ^@[CA/,0@ )R'K[@4KH
)@@G@@C#@LA(R9K@&RC @[BD:R@@@@-@+[E()O0K]&[N[@ES G^@@@/,)@A,R9)[A8R9K[C /,)@A,KI
)@@G@@R9)[:@R9K[C /,)@A,R9)[A'R9K[C :S@@@@-@:[E()O0K]&[N[@ES G^@@@/,0@^:R9)[C KJ
)@@G@@R9K[BC/,)@A,R9)[A8R9K[C /,)@A,R9)[(MR9K[C :T@@@@-@4[F#[#[#@*CSCMBR@SC]A@KK
)@@G@@9!)[A>/@@[[?@[@[BC/K@@@@A]0@[ZR'0[@'A#0@[Y9()[A>9!)@[V:U@@@@-@.[F#@K[#[@KL
)@@G@@K0K0ES@@@@@@R9K[C  ^@[CA @@[A!/K@[[^9()[A?9!?@@@/K@[[#:8@@@[9()@[V:V@@@@KM
)@@G@@-[A[E())CS G]&]@O0ESC@@@/,)@A,R9)[C R9K[QD/,)@A,R9)[:#R9K[QD ^@[QE/,)@A,KN
)@@G@@R9)[A?:W@@@@-[J[F#@()O0K^[#@()O0K@@@/,)@A,R9)[:BR9K[A/ ^@[A./K@[[?/,)@A,KO
)@@G@@R9)[QDR9K[A/ ^@[A.:X@@@@-[S[F@K0ES G^[@K0ES G@@@R9)[:KR9K[A/ ^@[A./K@[[?KP
)@@G@@/,)@A,R9)[:GR9K[A/ ^@[A./K@[[?:Y@@@@-[-[F@K^C@()O0K]&@@@@@@@C;@@@TR9)[^6KQ
)@@G@@/,0@^WR9K[B5R9)[^6C;@@@T'=@@@@/K@[[?/,)@A,:Z@@@@-[%@M())@@@@-^6@0#1)GKJAKR
)@@G@@@1@@@@@@@@*Q@@@@@@PN@@@@@@@@*L@@@@@@P@@@@@/,0@^WR9K[A,?A@@@@-^/[C#1)GKJAKS
)@@G@@@1@/S#^@@@@@@@@@*>@@@@@@P.A@@@@@@@*)@@@@@@PO@@@@@@@@*V@@@@@@PR@@@@?B@@@@KT
)@@G@@-  [C#1)GKJA@1@/S#^@@@@@@@@@*4@@@@@@PO.A@@@@@@*\@@@@@@PR.A@@@@@@*%@@@@@@KU
)@@G@@PN.A@@?C@@@@- I[C#1)GKJA@1@/S#^@@@@@@@@@\I@@@@@@PRINT@@@@@/J@@@@@@IF@@@@KV
)@@G@@@@@@/0@@@@@@NOFNC@?D@@@@- R[C#1)GKJA@1@/S#^@@@@@@@@@(%@@@@@@L@@@@@@@@@\EKW
)@@G@@Y@@@@@DISPLA@@@@;3@@@@@@LET@@@?E@@@@- )[C#1)GKJA@1@/S#^@@@@@@@@@(4@@@@@@KX
)@@G@@LC@@@@@@@@(9@@@@@@LCO@@@@@@@(\@@@@@@LO@@@@?F@@@@- ([C#1)GKJA@1@/S#^@@@@@KY
)@@G@@@@@@%4@@@@@@LP@@@@@@@@%#@@@@@@LS@@@@@@@@("@@@@@@LR@@@@?G@@@@- 2[C#1)GKJAKZ
)@@G@@@1@/S#^@@@@@@@@[[T@@@@@@DOT@@@@@@@"S@@@@@@ARRAY@@@@@%C@@@@@@LCTL@@?H@@@@LA
)@@G@@- ;@0#1)GKJA@1@@@@-[?@MK0@@@@@[[)[AEC9)@@[@@@@$W@@@@@@USE@@@@@@@\ R@@@@@LB
)@@G@@MONITO?I@@@@-[,@<@^G^@@@)N7@,S@@@@@@&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@=;LC
)@@G@@[[)[AEC9)@@@/K@@=;?J@@@@)N/[IT#[# #^()-+ GOGK@@@/,0@#0R'K@^M @@@@M/,0@^#LD
)@@G@@R9K[B//[@@^M/K@@^M%[)LB_G[)@@[?K@@@@)O [QU&]AE@-+@@@@@G[)@@[&8K@@@R@K@@HLE
)@@G@@T9)@@AH[)@[]C[)@@I/K@@#R/K@@OC/,0@#+R9K[C]?L@@@@)OJ[IWG^GM&]AE@-+-+O0K1@LF
)@@G@@/,0@^#R9K[B//[@@^M/K@@#R/K@@OO/,0@#+R9K[O,/K@@^M%[)LB_?M@@@@)OS[IS(+-+@-LG
)@@G@@)-+-+@@@@@@@/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/,0@#0R'K@^M @@@@M?N@@@@LH
)@@G@@)O-[QU&]AC@ GOGK@@^[\@@@/,0@#0R'K@^MC9)@@[9,@@@P-]@@@M-]K@@MD9)@@@/,0@^#LI
)@@G@@R9K[B/?O@@@@)O:[IU&@]A]AEADN[#^@@@@@/,0@^#R9K[B//[@@^M/\@@^T$B0@]C[@\@@[LJ
)@@G@@[0Z@@@A Z@@@R9K[B$?P@@@@)O4[IS(+-+@-)-+-+@@@@@@@/[@@^M/\@@^T$B0@]C[@\@@[LK
)@@G@@[0Z@@@^[J@@@/,0@#0R'K@^M @@@@M?Q@@@@)O.[QU&]AC@ GOGK@@^[\@@@/,0@#0R'K@^MLL
)@@G@@C9)@@[9,@@@P-]@@@M-]K@@MD9)@@@/,0@^#R9K[B/?R@@@@)PB[QU&@]A]AE@-+@@H[)@[]LM
)@@G@@C[)@@I/K@@#R/K@@PI/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K[B,?S@@@@)PL[QS[#[# #LN
)@@G@@^()-+@ @@@@M/,0@^#R9K[B//[@@^M/K@@^M%[)LB_G[)@@[&8K@@@R@K@@HT9)@@A?T@@@@LO
)@@G@@)PV[IU&EAC]A]AEADN@@@@@@R9K[PU/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/,0@#0LP
)@@G@@R'K@^M?U@@@@)P=[QWGK(+-+ G@^G@$B0@]C[@\@@[[0Z@@@A Z@@@R9K[A8^[\@@@/,0@#0LQ
)@@G@@R'K@^M @@@@M/,0@^#?V@@@@)P,[QWGO[#^@[#@@@@%[)LB_G[)@@[&8K@@@R@K@@HT9)@@ALR
)@@G@@H[)@[]C[)@@I/K@@#R/K@@P0/\@@^T?W@@@@)P8[IWGM&]AEA]AE@-+@@@@@H[)@[]C[)@@ILS
)@@G@@/K@@#R/K@@P"/K@@^M%[@LB_/,0@#+R9K[P(/K@@^M?X@@@@)Q[[IS[#[#^()-+-)@@@@@@@LT
)@@G@@%[@LB_/,0@#+R9K[P\/K@@^M%[)LB_G[)@@[&8K@@@R@K@@HT9)@@A?Y@@@@)QE[QWGO[#^@LU
)@@G@@[#@@@@%[)LB_G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#R/K@@QG/K@@^M?Z@@@@LV
)@@G@@)QO[IWGM&]AEA]AE@-+-)@@@0@@@@KH[@LQ]/K@@#R/K@@QU/K@@^M%[@LB_/,0@#+R9K[P5LW
)@@G@@/K@@^M!A@@@@)QX[QWGL#@@K^GOG@@H[@L( /K@@#R/K@@Q>&;K@@[G@)@@GW8@@@A @@@@GLX
)@@G@@G@KLQ]&;K@@@/\@@^M!B@@@@)Q$[QT#^K0@@@@@@@@[0Z@@@^[J@@@&;K@@[G@)@@GW8@@@ALY
)@@G@@ @@@@GG@KL( &;K@@@/\@@^M0@@@@K!C@@@@)Q1[QT#[# #@K1^G@@W8@@@A @@@@GG@KL(CLZ
)@@G@@&;K@@@/\@@^M0@@@@KH[@L(C/\@@^T$B0@]C[@\@@[!D@@@@)Q;[QS]&@]A]AE@@@@/K@@R MA
)@@G@@/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K[BA^[\@@@&;K@@[G@)@@G!E@@@@)R [QWGOG[#^MB
)@@G@@K0@@@@&;K@@[G@)@@GW8@@@A @@@@GG@KL(C&;K@@@/\@@^M0@@@@KH[@L(C/K@@#R!F@@@@MC
)@@G@@)RJ[IW[# #^()-+ GOGK@@@@^[J@@@/,0@#0R'K@^M @@@@M/,0@^#R9K[B//[@@^M/K@@#RMD
)@@G@@/K@@RK!G@@@@)RS[QSK0K1K1ESCS)@-]@@@M-]K@@MD9)@@@/,0@^#R9K[B//[@@^M/\@@^TME
)@@G@@$B0@]C[@\@@[[0Z@@@!H@@@@)R+[QSES*S-N@[#@@@$B0@]C[@\@@[[0Z@@@A Z@@@R9K[BCMF
)@@G@@^[\@@@/,0@#0R'K@^MC9)@@[9,@@@P!I@@@@)R?[QWGO[#^*@]A]AC/\@@^T$B0@]C[DJ@@[MG
)@@G@@[^\@@[[0Z@@@A[Z@@@R9K@R9/K@@#R/K@@R,/\@@^T!J@@@@)R6[IU&]AE@O0K1K^GOGM&@@MH
)@@G@@R9K[(I/[@@^M/K@@#R/K@@R//,0@#+R9K[PF/K@@R//,0@#+R9K[P !K@@@@)R_[IWGM&EACMI
)@@G@@)CS*S]AC@@@@/\@@^M0@@@@KH[@L( /K@@#R/K@@S^H9@@@[/,K@#MR'0@^M/,0@^#!L@@@@MJ
)@@G@@)SC[QT#@@@K0@@@@@@$B0@]C[@\@@[[0Z@@@^[J@@@&;K@@[G@)@@GW8@@@A @@@@GG@KL( MK
)@@G@@&;K@@@!M@@@@)SM[QWGOG[#^K0@@@@&;K@@[G@)@@GW8@@@A @@@@GG@KL(C&;K@@@/\@@^MML
)@@G@@0@@@@KH[@L(C/\@@^T!N@@@@)SW[IS()@-)-+)CS)@@@@@@@/K@@#R/K@@S=/\@@^T$B0@]CMM
)@@G@@[@\@@[[0Z@@@A Z@@@R9K[BA^[\@@@!O@@@@)S>[QWG[#^K0@^@@@@/K@@S\&;K@@[G@)@@GMN
)@@G@@W8@@@A @@@@GG@KL(C&;K@@@/\@@^M0@@@@KH[@L(C!P@@@@)S\[QWGOG[#^K0@@@@&;K@@[MO
)@@G@@G@)@@GW8@@@A @@@@GG@KLQ]&;K@@@/\@@^M0@@@@KH[@LQ]/K@@#R!Q@@@@)S9[IW[# #^(MP
)@@G@@)-+O1K1^@@@@/K@@T]H9@@@[/,K@#MR'0@^M/,0@^#R9K[B//[@@^M/K@@#R/K@@S'!R@@@@MQ
)@@G@@)T][QWGK@^G^GOGK@@/[@@^M/K@@^M%[)LB_G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@IMR
)@@G@@/K@@#R!S@@@@)TG[IU&]ACO1K1ESCS)@@@@@[0Z@@@^[J@@@/,0@#+R9K[(W/,0@#0R'K@^MMS
)@@G@@ @@@@M/,0@^#R9K[B/!T@@@@)TP[QT#[# #^()-+@@9,@@@P-]@@@M-]K@@MD9)@@@/,0@^#MT
)@@G@@R9K[(W/[@@^M/\@@^T$B0@]C[@\@@[!U@@@@)TZ[QS(+-+ G@^G^GK/\@@^T$B0@]C[@\@@[MU
)@@G@@[0Z@@@A Z@@@R9K[BC^[\@@@/,0@#0R'K@^MC9)@@[!V@@@@)T([IU&]AEADN[#^ES*S*@@@MV
)@@G@@/K@@T2/,0@#0R'K@^M @@@@M/,0@^#R9K[B//[@@^M/,0@#+R9K[(W!W@@@@)T2[QWGK^G^GMW
)@@G@@OG[#^@&;K@@@/\@@^M0@@@@KH[@L(Z/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/K@@#R!X@@@@MX
)@@G@@)T/[QWG@@ES@@@@@@@[@\@@[[0Z@@@A Z@@@R9K[BC^[\@@@&;K@@[G@)@@GW8@@@A @@@@GMY
)@@G@@G@KL(Z!Y@@@@)UA[IWG^GO[# #@K1^G@@@@@G@KL( &;K@@@/\@@^M0@@@@KH[@L( /K@@#RMZ
)@@G@@/K@@UD/\@@^T$B0@]C!Z@@@@)UJ[QS@[#[# #@@@@@H[@L(C/\@@^T$B0@]C[@\@@[[0Z@@@NA
)@@G@@^[J@@@&;K@@[G@)@@GW8@@@A @@@@G,A@@@@)UT[QT#^K0@@()@@@@R9K[BA^[\@@@&;K@@[NB
)@@G@@G@)@@GW8@@@A @@@@GG@KL(C&;K@@@/\@@^M0@@@@K,B@@@@)U<[IS^G^GO[# #@@@@@@@@@NC
)@@G@@0@@@@KH[@L(C/K@@#R/K@@U(/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@,C@@@@)U?[QWGL#@@KND
)@@G@@^GM&@@R9K[C]/K@@#R/K@@U4&;K@@[G@)@@GW8@@@A @@@@GG@KL(C&;K@@@/\@@^M,D@@@@NE
)@@G@@)U6[IWGO[#^()-+)CS)@@@@@[0Z@@@^[J@@@/K@@#R/K@@U//,0@#+R9K[B//K@@#R/K@@U8NF
)@@G@@/,0@#+,E@@@@)U_[QT#[#^@[#@@@@@%[)LB_G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@ING
)@@G@@/\@@^T$B0@]C[@\@@[,F@@@@)VD[IWGOGM&]ACO1K1ESCS)@/,0@#+R9K[(=/,0@#0R'K@^MNH
)@@G@@ @@@@M/,0@^#R9K[B//[@@^M/K@@^M,G@@@@)VM[IWGM&]ACO1K1K1ESCS)@/,0@^#R9K[($NI
)@@G@@/[@@^M/,0@#0R'K@^M @@@@M/,0@^#R9K[B//[@@^M,H@@@@)VV[QS@ES*S-N@@@@@A Z@@@NJ
)@@G@@R9K[BC^[\@@@/,0@#0R'K@^MC9)@@[9,@@@P-]@@@M-]K@@MD9)@@@,I@@@@)V>[QSK0K1K^NK
)@@G@@GK@@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#R/K@@V%/\@@^T$B0@]C[@\@@[[0Z@@@,J@@@@NL
)@@G@@)V\[QSK0K1E@@-)@@@$B0@]C[DJ@@[[^\@@[[0Z@@@A[Z@@@R9K@W#/K@@^M%[)LB_G[)@@[NM
)@@G@@&8K@@@,K@@@@)V9[IWGOGM&]ACO1K1ESCS)@/,0@#+R9K[C]/,0@#0R'K@^M @@@@M/,0@^#NN
)@@G@@R9K[B//[@@^M/\@@^T,L@@@@)W][IW@()-+)CS>G^GO[#^@@/K@@#R/K@@WE/,0@#+R9K[(WNO
)@@G@@/K@@#R/K@@W@/,0@#+R9K[(+/K@@WA,M@@@@)WF[QS@^G^GOGM&@@@R9K[B//[@@^M/K@@^MNP
)@@G@@%[)LB_G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I,N@@@@)WP[IWGK(+-+O0K1@@@@@@@@NQ
)@@G@@[@\@@[[0Z@@@^[J@@@/,0@#+R9K[(W/,0@#0R'K@^M @@@@M/,0@^#,O@@@@)WY[QWG^GOGMNR
)@@G@@&]AC@@C9)@@[9,@@@P-]@@@M-]K@@MD9)@@@/,0@^#R9K[(W/[@@^M/\@@^T$B0@]C,P@@@@NS
)@@G@@)W*[IU&EACO0@K0K1@@@@@@@/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K[BC^[\@@@/,0@#0NT
)@@G@@R'K@^M,Q@@@@)W1[IU&]AE@-+@-)-+@@@@@@/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/K@@#RNU
)@@G@@/K@@W4/,0@#+R9K[(W,R@@@@)W'[QWG[#^K0@@@@@@^[\@@@&;K@@[G@)@@GW8@@@A @@@@GNV
)@@G@@G@KL(%&;K@@@/\@@^M0@@@@KH[@L(%,S@@@@)X^[QU&@]A]AE@-+@@H[)@[]C[)@@I/K@@#RNW
)@@G@@/K@@XF/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K[BC,T@@@@)XI[QS[#[# #^()-+@ @@@@MNX
)@@G@@/,0@^#R9K[B//[@@^M/K@@^M%[)LB_G[)@@[&8K@@@R@K@@HT9)@@A,U@@@@)XS[IU&EAC]ANY
)@@G@@]AEADN@@@@@@R9K[PU/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/,0@#0R'K@^M,V@@@@NZ
)@@G@@)X-[QWGK(+-+ G@^G@$B0@]C[@\@@[[0Z@@@A Z@@@R9K[BC^[\@@@/,0@#0R'K@^M @@@@MOA
)@@G@@/,0@^#,W@@@@)X:[QWGO[#^@[#@@@@%[)L(!G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@IOB
)@@G@@/K@@#R/K@@X!/\@@^T,X@@@@)X5[QWGOG[#^K0@@@@&;K@@[G@)@@GW8@@@A @@@@GG@KLQ]OC
)@@G@@&;K@@@/\@@^M0@@@@KH[@LQ]/K@@^M,Y@@@@)X_[IW[#^[#[# #@@@@@@@@@0@@@@KH[@L(3OD
)@@G@@/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/K@@#R/K@@Y@,Z@@@@)YC[QWGL#@@]&@@@@@A Z@@@OE
)@@G@@R9K[BC^[\@@@&;K@@[G@)@@GW8@@@A @@@@GG@KL(3&;K@@@/\@@^M\A@@@@)YM[QSK0K1K^OF
)@@G@@GK@@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#R/K@@YR/\@@^T$B0@]C[@\@@[[0Z@@@\B@@@@OG
)@@G@@)YW[ISK0K1K1ESCS-N^@@@@@R'K@^M @@@@M/,0@^#R9K[B//[@@^M/K@@^M%[)LB_G[)@@[OH
)@@G@@&8K@@@\C@@@@)Y>[QWGK^G^GOG[#^@&;K@@@/\@@^M0@@@@KH[@LQ]/\@@^T$B0@]C[@\@@[OI
)@@G@@[0Z@@@^[J@@@/,0@#0\D@@@@)Y\[QWG@@ES@@@@@@@[@\@@[[0Z@@@A Z@@@R9K[A6^[\@@@OJ
)@@G@@&;K@@[G@)@@GW8@@@A @@@@GG@KLQ]\E@@@@)Y9[IWG^GO[#^()-+)CS>G@@R9K[(9/K@@#ROK
)@@G@@/K@@Z@/,0@#+R9K[(6/K@@#R/K@@Y//\@@^T$B0@]C\F@@@@)Z][IWGO[#^()-+)CS>G^GK@OL
)@@G@@/,0@#+R9K[% /K@@#R/K@@ZC/,0@#+R9K[(_/K@@#R/K@@Z^/,0@#+\G@@@@)ZF[QW[# #@KOM
)@@G@@1^G@@@G@)@@GW8@@@A @@@@GG@KL%I&;K@@@/\@@^M0@@@@KH[@L%I/K@@#R/K@@ZG\H@@@@ON
)@@G@@)ZP[QS[#[# #@K1@@@&;K@@@/\@@^M0@@@@KH[@LQ]/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@OO
)@@G@@&;K@@[\I@@@@)ZZ[QWG@@ES@@@@@@@[@\@@[[0Z@@@A Z@@@R9K[B]^[\@@@&;K@@[G@)@@GOP
)@@G@@W8@@@A @@@@GG@KLQ]\J@@@@)Z([IWG^GO[#^()-+)CS)@@@C[)@@I/K@@#R/K@@Z0/,0@#+OQ
)@@G@@R9K[(W/K@@#R/K@@Z?/\@@^T$B0@]C\K@@@@)Z2[QS@K0K1K1ESCS)/,0@^#R9K[B//[@@^MOR
)@@G@@/K@@^M%[)LB_G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]\L@@@@)Z/[IS(+-+@-)-+-+@@@@@@@OS
)@@G@@/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/,0@#0R'K@^M @@@@M\M@@@@)) [QU&]ACO1OT
)@@G@@K1]&@@[@\@@[[0Z@@@A Z@@@R9K[BC^[\@@@/,0@#0R'K@^M @@@@M/,0@^#R9K[PU\N@@@@OU
)@@G@@))J[QWG^GO[#^@@@@@G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#R/K@@)M/\@@^TOV
)@@G@@$B0@]C\O@@@@))T[IWG^GOGM&]ACO1K1K0@@%[@LB_/,0@#0R'K@^M @@@@M/,0@^#R9K[B/OW
)@@G@@/[@@^M/K@@^M%[)LB_\P@@@@))+[IWGO[# #@K1^G@@@@@@@ @@@@GG@KL( &;K@@@/\@@^MOX
)@@G@@0@@@@KH[@L( /K@@#R/K@@)=/K@@^M\Q@@@@)):[QS@^G^GOG@@@@@0@@@@KH[@L(C/\@@^TOY
)@@G@@$B0@]C[@\@@[[0Z@@@^[J@@@&;K@@[G@)@@GW8@@@A\R@@@@))5[QWGL#@@]&@@@@@A Z@@@OZ
)@@G@@R9K[BA^[\@@@&;K@@[G@)@@GW8@@@A @@@@GG@KL(C&;K@@@/\@@^M\S@@@@))_[ISK0K1K^PA
)@@G@@GOG[#^@@@@@@/\@@^M0@@@@KH[@L(C/K@@#R/K@@-^/\@@^T$B0@]C[@\@@[[0Z@@@\T@@@@PB
)@@G@@)-C[QT#@@K^GK@@@@@H[)@[]C[)@@I/K@@#R/K@@-J&;K@@[G@)@@GW8@@@A @@@@GG@KL(CPC
)@@G@@&;K@@@\U@@@@)-M[QS[#[# #^()-+@ @@@@M/,0@^#R9K[B//[@@^M/K@@^M%[)LB_G[)@@[PD
)@@G@@&8K@@@R@K@@HT9)@@A\V@@@@)-W[QU&EAE@-+O@[#@$B0@]C[DJ@@[[^\@@[[0Z@@@A[Z@@@PE
)@@G@@R9K@+N/K@@#R/K@@-Z/,0@#0R'K@^M\W@@@@)-&[IWGK^G^GOGM&]AC@@@@@/,0@^#R9K[%PPF
)@@G@@/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/\@@^T\X@@@@)-\[QS@ES*S-N@@@@@A Z@@@PG
)@@G@@R9K[A2^[\@@@/,0@#0R'K@^MC9)@@[9,@@@P-]@@@M-]K@@MD9)@@@\Y@@@@)-9[QSK0K1@KPH
)@@G@@0K1K0@H[@LQ]/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/\@@^T$B0@]C[@\@@[[0Z@@@\Z@@@@PI
)@@G@@)+#[QT#^K0@@()@@@@R9K[A6^[\@@@&;K@@[G@)@@GW8@@@A @@@@GG@KLQ]&;K@@@/\@@^MPJ
)@@G@@0@@@@K0A@@@@)+H[QS^G^GO@@@@@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@+%/\@@^T$B0@]CPK
)@@G@@[@\@@[[0Z@@@A Z@@@0B@@@@)+R[QSK0K1@K0K1ES@R9K[(9/\@@^T$B0@]C[@\@@[[0Z@@@PL
)@@G@@^[J@@@/K@@^M%[)LB_G[)@@[&8K@@@0C@@@@)+-[IWGK()@-)-+)@@@@@@@@/K@@+%/\@@^TPM
)@@G@@$B0@]C[@\@@[[0Z@@@A Z@@@R9K[A2^[\@@@/,0@#+0D@@@@)+%[IWGOGM&]ADN #^K^GK@@PN
)@@G@@/K@@#R/K@@+2H9@@@[/,K@#MR'0@^M/,0@^#R9K[PU/[@@^M/K@@#R0E@@@@)+3[QWG[#^K0PO
)@@G@@@^@@@@/K@@+.&;K@@[G@)@@GW8@@@A @@@@GG@KLQ]&;K@@@/\@@^M0@@@@KH[@LQ]0F@@@@PP
)@@G@@)+.[QWGOG[#^K0@@@@&;K@@[G@)@@GW8@@@A @@@@GG@KL( &;K@@@/\@@^M0@@@@KH[@L( PQ
)@@G@@/K@@#R0G@@@@)<B[QS^G^GOG[#^K0@G@KL(C&;K@@@/\@@^M0@@@@KH[@L(C/\@@^T$B0@]CPR
)@@G@@[@\@@[[0Z@@@^[J@@@0H@@@@)<L[QS@ES@CS@@@@@@$B0@]C[@\@@[[0Z@@@A Z@@@R9K[BAPS
)@@G@@^[\@@@&;K@@[G@)@@GW8@@@A @@@@G0I@@@@)<V[IWGO[# #@K1^G@@@@@@@ @@@@GG@KL(CPT
)@@G@@&;K@@@/\@@^M0@@@@KH[@L(C/K@@#R/K@@<X/\@@^T0J@@@@)<=[YS^[#^@@G[)@@[&8K@@@PU
)@@G@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#R/K@@<*&;K@@[G@)@@GW8@@@A0K@@@@)<\[IWG^GOGMPV
)@@G@@&]ACO1K1@@@@^[J@@@/,0@#0R'K@^M @@@@M/,0@^#R9K[B//[@@^M/K@@^M%[)LB_0L@@@@PW
)@@G@@)<8[QSK0K1K1ESCS)@-]@@@M-]K@@MD9)@@@/,0@^#R9K[%$/[@@^M/\@@^T$B0@]C[@\@@[PX
)@@G@@[0Z@@@0M@@@@)=][QSES*S-N@[#@@@$B0@]C[@\@@[[0Z@@@A Z@@@R9K[BC^[\@@@/,0@#0PY
)@@G@@R'K@^MC9)@@[9,@@@P0N@@@@)=G[IWGM&]AC]A]AEAC@@@@@/[@@^M/\@@^T$B0@]C[@\@@[PZ
)@@G@@[0Z@@@^[J@@@/,0@#+R9K[%$/\@@^T0O@@@@)=P[QU&]AC@ GOGK@@^[\@@@/,0@#0R'K@^MQA
)@@G@@C9)@@[9,@@@P-]@@@M-]K@@MD9)@@@/,0@^#R9K[(00P@@@@)=Z[IU&@]A]ADN[#^*@@@@@@QB
)@@G@@R9K@>J/,0@#+R9K[(0/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K[BY0Q@@@@)=*[QS[#[#^(QC
)@@G@@)-+@@@[0Z@@@^[J@@@/,0@#+R9K[%%/\@@^T$B0@]C[DJ@@[[^\@@[[0Z@@@A[Z@@@0R@@@@QD
)@@G@@)=2[QT#[# #^()-+@@9,@@@P-]@@@M-]K@@MD9)@@@/,0@^#R9K[B//[@@^M/\@@^T$B0@]CQE
)@@G@@[@\@@[0S@@@@)=/[QS(+-+ G@^G^GK/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K[B-^[\@@@QF
)@@G@@/,0@#0R'K@^MC9)@@[0T@@@@)>A[IWGM&]ACO1K1K0K1K@@@/K@@>M/K@@^M%[@LB_/,0@#0QG
)@@G@@R'K@^M @@@@M/,0@^#R9K[B//[@@^M0U@@@@)>J[IU&]AE@-+O0K1K^GOG@@H[@L( /K@@#RQH
)@@G@@/K@@>Q/,0@#+R9K[%7/K@@#R/K@@>A/,0@#+R9K[(+0V@@@@)>S[QT#^K0@@@@@@@@[0Z@@@QI
)@@G@@^[J@@@&;K@@[G@)@@GW8@@@A @@@@GG@KL( &;K@@@/\@@^M0@@@@K0W@@@@)>+[QT#[# #@QJ
)@@G@@K1^G@@W8@@@A @@@@GG@KL(C&;K@@@/\@@^M0@@@@KH[@L(C/\@@^T$B0@]C[@\@@[0X@@@@QK
)@@G@@)>?[QS]&@]A]AE@@@@/K@@>6/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K[A8^[\@@@&;K@@[QL
)@@G@@G@)@@G0Y@@@@)>6[QWGOG[#^K0@@@@&;K@@[G@)@@GW8@@@A @@@@GG@KL( &;K@@@/\@@^MQM
)@@G@@0@@@@KH[@L( /K@@#R0Z@@@@)&@[QS^G^GOG[#^K0@G@KL(C&;K@@@/\@@^M0@@@@KH[@L(CQN
)@@G@@/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@1A@@@@)&E[QS@ES@CS@@@@@@$B0@]C[@\@@[[0Z@@@QO
)@@G@@A Z@@@R9K[A'^[\@@@&;K@@[G@)@@GW8@@@A @@@@G1B@@@@)&O[QWGO[#^@[#@@@@%[)L%'QP
)@@G@@G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#R/K@@&Q/\@@^T1C@@@@)&Y[QWGOG[#^QQ
)@@G@@K0@@@@&;K@@[G@)@@GW8@@@A @@@@GG@KLQ]&;K@@@/\@@^M0@@@@KH[@LQ]/K@@^M1D@@@@QR
)@@G@@)&*@QW[#^@@@-A$@0/S@#1)@#1)@@@]@@[A,@@@@@@@@A@@A[@@[A:@@@@@@]@@[A(/K@@#RQS
)@@G@@/K@@&(1E@@@@-A![CJA@@#1)@JA@@@@@@@@@@>)@@@]@@[A6@@_@@@]@@[A4            QT
)@@G@@@@G@@@]@@[A0@@@@@@1F@@@@-A6[C/S@#1)@JA@@/S@#1)@@]@@[B@@>)@@@]@@[A"@@G@@@QU
)@@G@@]@@[A/@@G@@@]@@[A'@@[@@@]@@[A81G@@@@-A_[CJA@@/S@#1)@JA@@@@@@@@]@@@]@@[BCQV
)@@G@@@@G@@@]@@[BA@@[@@@]@@[B^@@A@@@]@@[B]@@A@@@1H@@@@-BC[C/S@#1)@JA@@JA@@@@@@QW
)@@G@@@@A@@A[@@[BL@@@@@@@@A@@A[@@[BI@@A@@@]@@[BG@>)@@@]@@[BE1I@@@@-BL[KJA@@JA@QX
)@@G@@@JA@@@      @@A@@@]@@[BU      @@A@@@]@@[BR@@@@@@@@A@@A[@@[BO@@@@@@1J@@@@QY
)@@G@@-BV[C/S@@/S@@/S@@@@@@@@@      @@A@@@]@@[B<      @@A@@@]@@[B)      @@A@@@QZ
)@@G@@]@@[BX1K@@@@-B=[K/S@@/S@@@@@@@                              @@Y@@@]@@[B(RA
)@@G@@      @@A@@@]@@[B&1L@@@@-B,[K/S@@@JA@@@@@@      @@G@@@]@@[B7            RB
)@@G@@                  @@Y@@@]@@[B01M@@@@-B8[KJA@@JA@@JA@@@@@@@@@@@A@@A[@@[C[RC
)@@G@@      @@[@@[]@@[B"@     @@[@@[]@@[B;      1N@@@@-C][K/S@@/S@@@@@@@      RD
)@@G@@                        [F*@@@]@@[CB=     @@[@@[]@@[C^1O@@@@-CG[S@@@@@@@RE
)@@G@@                                                                  1P@@@@RF
)@@G@@-CR[S@@@@@@@                                                            RG
)@@G@@      1Q@@@@-C+[S@@@@@@@                                                RH
)@@G@@                  1R@@@@-C![S@@@@@@@                                    RI
)@@G@@                              1S@@@@-C8[S@@@@@@@                        RJ
)@@G@@                                          1T@@@@-D#[S@@@@@@@            RK
)@@G@@                                                      1U@@@@-DI[S@@@@@@@RL
)@@G@@                                                                  1V@@@@RM
)@@G@@-DT[S@@@@@@@                                                            RN
)@@G@@      1W@@@@-D=[S@@@@@@@                                                RO
)@@G@@                  1X@@@@-D\[S@@@@@@@                                    RP
)@@G@@                              1Y@@@@-D'[S@@@@@@@                        RQ
)@@G@@                                          1Z@@@@-E [S@@@@@@@            RR
)@@G@@                                                      2A@@@@-EK[S@@@@@@@RS
)@@G@@                                                                  2B@@@@RT
)@@G@@-EV[S@@@@@@@                                                            RU
)@@G@@      2C@@@@-E&[S@@@@@@@                                                RV
)@@G@@                  2D@@@@-E1[S@@@@@@@                                    RW
)@@G@@                              2E@@@@-E/[S@@@@@@@                        RX
)@@G@@                                          2F@@@@-FB[S@@@@@@@            RY
)@@G@@                                                      2G@@@@-FM[S@@@@@@@RZ
)@@G@@                                                                  2H@@@@SA
)@@G@@-FX[S@@@@@@@                                                            SB
)@@G@@      2I@@@@-F*[S@@@@@@@                                                SC
)@@G@@                  2J@@@@-F3[S@@@@@@@                                    SD
)@@G@@                              2K@@@@-F"[S@@@@@@@                        SE
)@@G@@                                          2L@@@@-GD[S@@@@@@@            SF
)@@G@@                                                      2M@@@@-GO[S@@@@@@@SG
)@@G@@                                                                  2N@@@@SH
)@@G@@-GZ[S@@@@@@@                                                            SI
)@@G@@      2O@@@@-G%[S@@@@@@@                                                SJ
)@@G@@                  2P@@@@-G5[S@@@@@@@                                    SK
)@@G@@                              2Q@@@@-H@[S@@@@@@@                        SL
)@@G@@                                          2R@@@@-HF[S@@@@@@@            SM
)@@G@@                                                      2S@@@@-HQ[S@@@@@@@SN
)@@G@@                                                                  2T@@@@SO
)@@G@@-H-[S@@@@@@@                                                            SP
)@@G@@      2U@@@@-H?[S@@@@@@@                                                SQ
)@@G@@                  2V@@@@-H7[S@@@@@@@                                    SR
)@@G@@                              2W@@@@-I][S@@@@@@@                        SS
)@@G@@                                          2X@@@@-IH[S@@@@@@@            ST
)@@G@@                                                      2Y@@@@-IS[S@@@@@@@SU
)@@G@@                                                                  2Z@@@@SV
)@@G@@-I<[S@@@@@@@                                                            SW
)@@G@@      3A@@@@-I,[S@@@@@@@                                                SX
)@@G@@                  3B@@@@-I9[S@@@@@@@                                    SY
)@@G@@                              3C@@@@-J^[S@@@@@@@                        SZ
)@@G@@                                          3D@@@@-JJ[S@@@@@@@            TA
)@@G@@                                                      3E@@@@-JU[S@@@@@@@TB
)@@G@@                                                                  3F@@@@TC
)@@G@@-J>[S@@@@@@@                                                            TD
)@@G@@      3G@@@@-J0[S@@@@@@@                                                TE
)@@G@@                  3H@@@@-J;[S@@@@@@@                                    TF
)@@G@@                              3I@@@@-KA[S@@@@@@@                        TG
)@@G@@                                          3J@@@@-KL[S@@@@@@@            TH
)@@G@@                                                      3K@@@@-KW[S@@@@@@@TI
)@@G@@                                                                  3L@@@@TJ
)@@G@@-K$[S@@@@@@@                                                            TK
)@@G@@      3M@@@@-K2[S@@@@@@@                                                TL
)@@G@@                  3N@@@@-K.[S@@@@@@@                                    TM
)@@G@@                              3O@@@@-LC[S@@@@@@@                        TN
)@@G@@                                          3P@@@@-LN[S@@@@@@@            TO
)@@G@@                                                      3Q@@@@-LY[S@@@@@@@TP
)@@G@@                                                                  3R@@@@TQ
)@@G@@-L([S@@@@@@@                                                            TR
)@@G@@      3S@@@@-L4[S@@@@@@@                                                TS
)@@G@@                  3T@@@@-L_[S@@@@@@@                                    TT
)@@G@@                              3U@@@@-ME[S@@@@@@@                        TU
)@@G@@                                          3V@@@@-MP[S@@@@@@@            TV
)@@G@@                                                      3W@@@@-M)[S@@@@@@@TW
)@@G@@                                                                  3X@@@@TX
)@@G@@-M:[S@@@@@@@                                                            TY
)@@G@@      3Y@@@@-M6[S@@@@@@@                                                TZ
)@@G@@                  3Z@@@@-N[[S@@@@@@@                                    UA
)@@G@@                              4A@@@@-NG[S@@@@@@@                        UB
)@@G@@                                          4B@@@@-NR[S@@@@@@@            UC
)@@G@@                                                      4C@@@@-N+[S@@@@@@@UD
)@@G@@                                                                  4D@@@@UE
)@@G@@-N![S@@@@@@@                                                            UF
)@@G@@      4E@@@@-N8[S@@@@@@@                                                UG
)@@G@@                  4F@@@@-O#[S@@@@@@@                                    UH
)@@G@@                              4G@@@@-OI[S@@@@@@@                        UI
)@@G@@                                          4H@@@@-OT[S@@@@@@@            UJ
)@@G@@                                                      4I@@@@-O=[S@@@JA@@UK
)@@G@@]@@[O0                                                            4J@@@@UL
)@@G@@-O\[K#1)@#1)@#1)@@@@Y@@Y]@@[O9NOFNC @@ @@ ]@@[O6DOT   @@#@@#]@@[O3.     UM
)@@G@@@@[@@[4K@@@@-O9[K@#1)@@/S@@@@@]@@[P^G@@@@@@GJ@@@@@G@@G]@@[P@            UN
)@@G@@                  4L@@@@-P#[K#1)@#1)@#1)@@@@[@@[]@@[PH#     @@[@@[]@@[PEUO
)@@G@@]     @@[@@[]@@[PB[     @@[@@[4M@@@@-PH[KJA@@JA@@JA@@@C     @@[@@[]@@[PQUP
)@@G@@B     @@[@@[]@@[PNA     @@[@@[]@@[PK^     4N@@@@-PR[K/S@@/S@@JA@@@      UQ
)@@G@@@@G@@G]@@[P)6789  012345@@E@@E]@@[PW 1    @@#@@#]@@[PT4O@@@@-P-[KJA@@JA@UR
)@@G@@@#1)@@@@^@@^]@@[P:@@@   @@@#@@@@D@@D]@@[P$@^    @@]@@]]@@[P=      4P@@@@US
)@@G@@-P:[KJA@@JA@@JA@@@E     @@[@@[]@@[P4DIRECT@@A@@A]@@[P1D     @@[@@[]@@[P,UT
)@@G@@AREA  4Q@@@@-P5[C/S@@/S@@/S@@@@@@@@@@]    @@]@@]]@@[P.F     @@[@@[]@@[P'UU
)@@G@@OWNER @@ @@ ]@@[P74R@@@@-P"[K/S@@JA@@JA@@@@@B@@@@@G@@G]@@[QB@@@@@[@@A@@AUV
)@@G@@[@@[Q^@@@   @@@[@@@@D@@D]@@[Q@4S@@@@-QC[SJA@@@@@                        UW
)@@G@@                        [1C@@@]@@[QF[@@@@@4T@@@@-QN[S@@@@@@@            UX
)@@G@@                                                      4U@@@@-QY[S@@@@@@@UY
)@@G@@                                                                  4V@@@@UZ
)@@G@@-Q([S@@@@@@@                                                            VA
)@@G@@      4W@@@@-Q4[S@@@@@@@                                                VB
)@@G@@                  4X@@@@-Q_[S@@@@@@@                                    VC
)@@G@@                              4Y@@@@-RE[S@@@@@@@                        VD
)@@G@@                                          4Z@@@@-RP[S@@@@@@@            VE
)@@G@@                                                      5A@@@@-R)[S@@@@@@@VF
)@@G@@                                                                  5B@@@@VG
)@@G@@-R:[S@@@@@@@                                                            VH
)@@G@@      5C@@@@-R6[S@@@@@@@                                                VI
)@@G@@                  5D@@@@-S[[S@@@@@@@                                    VJ
)@@G@@                              5E@@@@-SG[S@@@@@@@                        VK
)@@G@@                                          5F@@@@-SR[S@@@@@@@            VL
)@@G@@                                                      5G@@@@-S+[S@@@@@@@VM
)@@G@@                                                                  5H@@@@VN
)@@G@@-S![S@@@@@@@                                                            VO
)@@G@@      5I@@@@-S8[S@@@@@@@                                                VP
)@@G@@                  5J@@@@-T#[S@@@@@@@                                    VQ
)@@G@@                              5K@@@@-TI[S@@@@@@@                        VR
)@@G@@                                          5L@@@@-TT[S@@@@@@@            VS
)@@G@@                                                      5M@@@@-T=[S@@@@@@@VT
)@@G@@                                                                  5N@@@@VU
)@@G@@-T\[S@@@@@@@                                                            VV
)@@G@@      5O@@@@-T'[S@@@@@@@                                                VW
)@@G@@                  5P@@@@-U [S@@@@@@@                                    VX
)@@G@@                              5Q@@@@-UK[S@@@@@@@                        VY
)@@G@@                                          5R@@@@-UV[S@@@@@@@            VZ
)@@G@@                                                      5S@@@@-U&[S@@@@@@@WA
)@@G@@                                                                  5T@@@@WB
)@@G@@-U1[S@@@@@@@                                                            WC
)@@G@@      5U@@@@-U/[S@@@@@@@                                                WD
)@@G@@                  5V@@@@-VB[S@@@@@@@                                    WE
)@@G@@                              5W@@@@-VM[S@@@@@@@                        WF
)@@G@@                                          5X@@@@-VX[S@@@@@@@            WG
)@@G@@                                                      5Y@@@@-V*[S@@@@@@@WH
)@@G@@                                                                  5Z@@@@WI
)@@G@@-V3[S@@@@@@@                                                            WJ
)@@G@@      6A@@@@-V"[S@@@@@@@                                                WK
)@@G@@                  6B@@@@-WD[S@@@@@@@                                    WL
)@@G@@                              6C@@@@-WO[S@@@@@@@                        WM
)@@G@@                                          6D@@@@-WZ[S@@@@@@@            WN
)@@G@@                                                      6E@@@@-W%[S@@@@@@@WO
)@@G@@                                                                  6F@@@@WP
)@@G@@-W5[S@@@@@@@                                                            WQ
)@@G@@      6G@@@@-X@[S@@@@@@@                                                WR
)@@G@@                  6H@@@@-XF[S@@@@@@@                                    WS
)@@G@@                              6I@@@@-XQ[S@@@@@@@                        WT
)@@G@@                                          6J@@@@-X-[S@@@@@@@            WU
)@@G@@                                                      6K@@@@-X?[S@@@@@@@WV
)@@G@@                                                                  6L@@@@WW
)@@G@@-X7[S@@@@@@@                                                            WX
)@@G@@      6M@@@@-Y][S@@@@@@@                                                WY
)@@G@@                  6N@@@@-YH[S@@@@@@@                                    WZ
)@@G@@                              6O@@@@-YS[S@@@@@@@                        XA
)@@G@@                                          6P@@@@-Y<[S@@@@@@@            XB
)@@G@@                                                      6Q@@@@-Y,[S@@@@@@@XC
)@@G@@                                                                  6R@@@@XD
)@@G@@-Y9[S@@@@@@@                                                            XE
)@@G@@      6S@@@@-Z^[S@@@@@@@                                                XF
)@@G@@                  6T@@@@-ZJ[S@@@@@@@                                    XG
)@@G@@                              6U@@@@-ZU[S@@@@@@@                        XH
)@@G@@                                          6V@@@@-Z>[S@@@@@@@            XI
)@@G@@                                                      6W@@@@-Z0[S@@@@@@@XJ
)@@G@@                                                                  6X@@@@XK
)@@G@@-Z;[S@@@@@@@                                                            XL
)@@G@@      6Y@@@@-)A[S@@@@@@@                                                XM
)@@G@@                  6Z@@@@-)L[S@@@@@@@                                    XN
)@@G@@                              7A@@@@-)W[S@@@@@@@                        XO
)@@G@@                                          7B@@@@-)$[S@@@@@@@            XP
)@@G@@                                                      7C@@@@-)2[S@@@@@@@XQ
)@@G@@                                                                  7D@@@@XR
)@@G@@-).[S@@@@@@@                                                            XS
)@@G@@      7E@@@@--C[S@@@@@@@                                                XT
)@@G@@                  7F@@@@--N[S@@@@@@@                                    XU
)@@G@@                              7G@@@@--Y[S@@@@@@@                        XV
)@@G@@                                          7H@@@@--([S@@@@@@@            XW
)@@G@@                                                      7I@@@@--4[S@@@@@@@XX
)@@G@@                                                                  7J@@@@XY
)@@G@@--_[S@@@@@@@                                                            XZ
)@@G@@      7K@@@@-+E[S@@@@@@@                                                YA
)@@G@@                  7L@@@@-+P[S@@@@@@@                                    YB
)@@G@@                              7M@@@@-+)[S@@@@@@@                        YC
)@@G@@                                          7N@@@@-+:[S@@@@@@@            YD
)@@G@@                                                      7O@@@@-+6[S@@@@@@@YE
)@@G@@                                                                  7P@@@@YF
)@@G@@-<[[S@@@@@@@                                                            YG
)@@G@@      7Q@@@@-<G[S@@@@@@@                                                YH
)@@G@@                  7R@@@@-<R[S@@@@@@@                                    YI
)@@G@@                              7S@@@@-<+[S@@@@@@@                        YJ
)@@G@@                                          7T@@@@-<![S@@@@@@@            YK
)@@G@@                                                      7U@@@@-<8[S@@@@@@@YL
)@@G@@                                                                  7V@@@@YM
)@@G@@-=#[S@@@@@@@                                                            YN
)@@G@@      7W@@@@-=I[S@@@@@@@                                                YO
)@@G@@                  7X@@@@-=T[S@@@@@@@                                    YP
)@@G@@                              7Y@@@@-==[S@@@@@@@                        YQ
)@@G@@                                          7Z@@@@-=\[S@@@@@@@            YR
)@@G@@                                                      8A@@@@-='[S@@@@@@@YS
)@@G@@                                                                  8B@@@@YT
)@@G@@-> [S@@@@@@@                                                            YU
)@@G@@      8C@@@@->K[S@@@@@@@                                                YV
)@@G@@                  8D@@@@->V[S@@@@@@@                                    YW
)@@G@@                              8E@@@@->&[S@@@@@@@                        YX
)@@G@@                                          8F@@@@->1[S@@@@@@@            YY
)@@G@@                                                      8G@@@@->/[S@@@@@@@YZ
)@@G@@                                                                  8H@@@@ZA
)@@G@@-&B[S@@@@@@@                                                            ZB
)@@G@@      8I@@@@-&M[S@@@@@@@                                                ZC
)@@G@@                  8J@@@@-&X[S@@@@@@@                                    ZD
)@@G@@                              8K@@@@-&*[S@@@@@@@                        ZE
)@@G@@                                          8L@@@@-&3[S@@@@@@@            ZF
)@@G@@                                                      8M@@@@-&"[S@@@@@@@ZG
)@@G@@                                                                  8N@@@@ZH
)@@G@@-$D[S@@@@@@@                                                            ZI
)@@G@@      8O@@@@-$O[S@@@@@@@                                                ZJ
)@@G@@                  8P@@@@-$Z[S@@@@@@@                                    ZK
)@@G@@                              8Q@@@@-$%[S@@@@@@@                        ZL
)@@G@@                                          8R@@@@-$5[S@@@@@@@            ZM
)@@G@@                                                      8S@@@@-*@[S@@@@@@@ZN
)@@G@@                                                                  8T@@@@ZO
)@@G@@-*F[S@@@@@@@                                                            ZP
)@@G@@      8U@@@@-*Q[S@@@@@@@                                                ZQ
)@@G@@                  8V@@@@-*-[S@@@@@@@                                    ZR
)@@G@@                              8W@@@@-*?[S@@@@@@@                        ZS
)@@G@@                                          8X@@@@-*7[S@@@@@@@            ZT
)@@G@@                                                      8Y@@@@-(][C/S@@/S@ZU
)@@G@@@/S@@@@@@@@@@@@@@]@@A@@A[@@[(E@@@@@^@@A@@A[@@[(B@@@@@A@@A@@A[@@[(^8Z@@@@ZV
)@@G@@-(F[K/S@@/S@@JA@@@@@    @@]@@]]@@[(O67    012345@@C@@C]@@[(K@@@@@@@@A@@AZW
)@@G@@[@@[(H9A@@@@-(P[K/S@@/S@@JA@@@'     @@[@@[]@@[(Y@@@   @@@^@@@@D@@D]@@[(UZX
)@@G@@      @@ @@ ]@@[(R9B@@@@-(Z[C/S@@/S@#1)@#1)@@@@@]@@[((OF    @@]@@]]@@[(&ZY
)@@G@@@@@@@@]@@[(=@@@@@@@@A@@A[@@[(-9C@@@@-(*[K#1)@#1)@#1)@@@@[@@[]@@[(2@@@@@#ZZ
)@@G@@@@A@@A[@@[(\@@@@@@@@A@@A[@@[(? =    @@]@@]9D@@@@-(2[KJA@@JA@@JA@@@-     AA
)@@G@@@@[@@[]@@[(;+     @@[@@[]@@[(8@@@@@@@@A@@A[@@[(5)     9E@@@@-(/[C/S@@/S@AB
)@@G@@@/S@@@@@@@@@S     @@[@@[]@@[%^/     @@[@@[]@@[%[K     @@[@@[]@@[("9F@@@@AC
)@@G@@-% [C/S@@/S@@/S@@@@@@@@@@@@@@@@@A@@A[@@[%H@@@@@ @@ @@ ]@@[%E*     @@[@@[AD
)@@G@@]@@[%B9G@@@@-%I[K/S@@/S@@JA@@@ +=   @@#@@#]@@[%R@@@   @@@E@@@@D@@D]@@[%NAE
)@@G@@@@@@@ @@A@@A[@@[%K9H@@@@-%S[K/S@@/S@@JA@@@      @@F@@F]@@[%-G@@@@@@^A@@@AF
)@@G@@@@G@@G]@@[%X@@@@@_@@A@@A[@@[%U9I@@@@-%+[KJA@@#1)@#1)@@@@[@@[]@@[%?(     AG
)@@G@@@@[@@[]@@[%(G@@@@@@@E@@@@@G@@G]@@[%>      9J@@@@-%?[SJA@@@@@            AH
)@@G@@                                    @@0@@0]@@[%\,     9K@@@@-%7[C/S@@/S@AI
)@@G@@@/S@@@@@@@@@@@#D  @@^@@^]@@[%_@@@@@Y@@A@@A[@@[%/@@@@@@@@A@@A]@@[%99L@@@@AJ
)@@G@@-:@[K/S@@/S@@JA@@@@##@@@@@M@@M]@@[:DE@@@@@@##@@@@@G@@G]@@[: @@[@@@@@A@@AAK
)@@G@@]@@[:]9M@@@@-:E[K#1)@@/S@@@@@@@@@@@@@]@@@@@@G@@G]@@[:MJ@@@@@@]@@@@@@G@@GAL
)@@G@@]@@[:I@@@@@@E@@@@@9N@@@@-:O@)*[K@@@@-[2@:#@K0@@@R@W@@[[ -@@[C )[?AR@W@@@AM
)@@G@@R#@[:)@@[@@#@@[[A[@@[@[]@@[[AU9O@@@@-[7[N#@K0^@!))]A@@C[\@@[[@0@[YG80@@]AN
)@@G@@/K@[]#:80@]A/ )[]#H9)@@[C[)@[X[ -@@[C )[?C9P@@@@-][[F#@K0^G^G@K0@@@@@@@@AO
)@@G@@R@K[3UN8K@@TM@-)@@R@)[3TR@K[3SN8K@@ [[)@[XC[\@@@[[)@[Z9Q@@@@-]E[N#@K0K0KAP
)@@G@@0@^@@@/K@[]KO'0@@[/KF@@@*4F@@@OY;@@@R@)[:8R@K[:7N@K[:6M@-)@@R@)[3V9R@@@@AQ
)@@G@@-]O[F#[#[#@K0K0[#@@@@@@@R@K[3SN8K@@ M@M)@@R@)[3VR@K[3UN8K@@TA@)[:8A@K[:7AR
)@@G@@^@K[:69S@@@@-]X[N#@K0K0@K0@@@@9!?@@@R;F0@@9()[? 9!?@@@R;F0@@&'0@@[R@)[:8AS
)@@G@@R@K[:7M@M)@@R@)[3T9T@@@@-]$[F#[#[@K0ES G^[#@()@@R9K[?P ^@[?Q/,)@A,R9)[?TAT
)@@G@@R9K[?H ^@[?I/,)@BNC[)[:)9()[?B9U@@@@-]0[E())CS G]&]@-)O0ES@@R9)[?VR9K[?0AU
)@@G@@ ^@[?1/,)@A,R9)[?VR9K[?L ^@[?M/,)@A,R9)[?T9V@@@@-]9[F@ES G^@()O0K^G^G@@@AV
)@@G@@C @[?1QB)[?0/,)@A,R9)[?YR9K[?0/,)@A,R9)[? R9K[?0/,)@A,9W@@@@-#][E(&-)O^[AW
)@@G@@#[#[#[#[@@@@/ )[#GH[)L?!C[)L3E[[)L3EC )[?E/,0@ )R'K[^>C#@L?@R9K@&%9X@@@@AX
)@@G@@-#F[F@K0K0K0K0K^G]&[N@@@R9)[?-R9K[?L ^@[?M/ )[#PH[)L?!C[)L3E[[)L3EC )[?MAY
)@@G@@/K@[^>9Y@@@@-#O[F@K0K0K0K0K^G]&[N@@@R9)[3HR9K[?P ^@[?Q/ )[#=H[)L?!C[)L3EAZ
)@@G@@[[)L3EC )[?Q/,)@A,9Z@@@@-#X[F@K0K0ET*S [@K0ES@@@R9K[?0 ^@[?1/,0@ )R'K[^>BA
)@@G@@C#@L?@R9K@*.C @[?MQB)[?L/,)@A,'A@@@@-#&[E()) G]&]@-)O0ESC@@@/,)@A,R9)[?0BB
)@@G@@R9K[?L ^@[?M/,)@A,R9)[3KR9K[?0/,)@A,R9)[?L'B@@@@-#\[F#@()O0K]&[N[@K0ES@@BC
)@@G@@R9K[?P ^@[?Q/,)@A,R9)[3KR9K[?0/,)@A,R9)[?PR9K[?0 ^@[?1'C@@@@-#8[E())CS GBD
)@@G@@]&]@O0ESC@@@/,)@A,R9)[3KR9K[?0/,)@A,R9)[?DR9K[?0 ^@[?1/,)@A,R9)[?0'D@@@@BE
)@@G@@-^[[F#@()O0K^G]&[N[@ES@@R9K[?0/,)@A,R9)[?HR9K[?0 ^@[?1/,)@A,R9)[?0R9K[?DBF
)@@G@@ ^@[?E'E@@@@-^E[E())CS G]&]@-)O0ES@@R9)[?BR9K[?0 ^@[?1/,)@A,R9)[?0R9K[?HBG
)@@G@@ ^@[?I/,)@A,R9)[3K'F@@@@-^N[F@ES G^@()O0K]&[N@@@R9)[?DR9K[?0/,)@A,R9)[?PBH
)@@G@@R9K[?0/,)@A,R9)[?LR9K[?0/,)@A,'G@@@@-^W[F@ES G^[#@()O0K^@@@@/K@[^:/,)@A,BI
)@@G@@R9)[?0R9K[?B ^@[?C/,)@A,R9)[?HR9K[?0/,)@A,'H@@@@-^>[F#@()O0K^[]@K0K@@@@@BJ
)@@G@@/K@[[2[[)[:-C9)@@['=@@@@/K@[^:/,)@A,R9)[3OR9K[?B ^@[?C'I@@@@-^,@UK0K@@@@BK
)@@G@@)&%@,WGM&]ACO1@@@@R'K@^M @@@@M/,0@^#R9K[?V/[@@^M/K@[[2[[)[:-C9)@@@'J@@@@BL
)@@G@@)&\[QWGM)@CSCS)@@@[0Z@@@^[J@@@/\@@^T$B0@]C[DJ@@[[^\@@[[0Z@@@A[Z@@@R9K@*9BM
)@@G@@/,0@#0'K@@@@)&9[QT#[# #^()-+@@9,@@@P-]@@@M-]K@@MD9)@@@/,0@^#R9K[?-/[@@^MBN
)@@G@@/\@@^T$B0@]C[@\@@['L@@@@)$#[QS(+-+ G@^G^GK/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@BO
)@@G@@R9K[?L^[\@@@/,0@#0R'K@^MC9)@@['M@@@@)$H[QU&]ADK@^G^GK@^[J@@@/\@@^T$B0@]CBP
)@@G@@[DJ@@[[^\@@[[0Z@@@A[Z@@@R9K@*6/,0@#+R9K[?-'N@@@@)$R[QSK0K1K1ESCS)@-]@@@MBQ
)@@G@@-]K@@MD9)@@@/,0@^#R9K[?=/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@'O@@@@)$-[QSES*S-NBR
)@@G@@@[#@@@$B0@]C[@\@@[[0Z@@@A Z@@@R9K[?P^[\@@@/,0@#0R'K@^MC9)@@[9,@@@P'P@@@@BS
)@@G@@)$:[IWGM&]AC]A]AEAC@@@@@/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/,0@#+R9K[?=BT
)@@G@@/\@@^T'Q@@@@)$4[QU&]AC@ GOGK@@^[\@@@/,0@#0R'K@^MC9)@@[9,@@@P-]@@@M-]K@@MBU
)@@G@@D9)@@@/,0@^#R9K[?$'R@@@@)$"[QU&@]A]AEA@-+@&;K@@@/\@@^M0@@@@KH[@L?%/\@@^TBV
)@@G@@$B0@]C[@\@@[[0Z@@@A Z@@@R9K[?D'S@@@@)*C[QWG@@*@@@@@@@@[DJ@@[[^\@@[[0Z@@@BW
)@@G@@A[Z@@@R9K@*3&;K@@[G@)@@GW8@@@A @@@@GG@KL?%'T@@@@)*M[IWG^GK^G^GOGM&@@@@@@BX
)@@G@@R9K[?V/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/\@@^T$B0@]C'U@@@@)*V[QWGK@ES*BY
)@@G@@S-N@@@R9K[?H^[\@@@/,0@#0R'K@^MC9)@@[9,@@@P-]@@@M-]K@@MD9)@@@/,0@^#'V@@@@BZ
)@@G@@)*>[IS^G^GOGM&]AC@@@@@@@ @@@@M/,0@^#R9K[?V/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@CA
)@@G@@A Z@@@'W@@@@)*,[IU&EAEA]AE@O0K1K]&@@R9K[?T/K@@*%/,0@#+R9K[?T/K@@*//K@@^MCB
)@@G@@%[@L?!/,0@#0R'K@^M'X@@@@)*7[IWGO@()-+)CS>G^GO@@@/K@@(@/,0@#+R9K[?V/K@@#RCC
)@@G@@/K@@$J/,0@#+R9K[?T/K@@$,/,0@#+'Y@@@@)(@@IWGK@@@@-:"@8/S@#1)@#1)@@@@@@@@@CD
)@@G@@]@@[? @@@@@@@@A@@A[@@[?]@@@@@@]@@[?@/K@@#R'Z@@@@-? [C/S@#1)@JA@@#1)@@@@@CE
)@@G@@]@@[?J            @@G@@@]@@[?F@>)@@@]@@[?D@>)@@@]@@[?B;A@@@@-?I[K@/S@@JACF
)@@G@@@@@@@@      @@G@@@]@@[?R            @@G@@@]@@[?N            @@G@@@;B@@@@CG
)@@G@@-?S[CJA@@/S@@/S@@@@@@@@@      @@]@@]]@@[?)      @@[@@[]@@[?X@@@@@@]@@[?VCH
)@@G@@      ;C@@@@-?-[C/S@@/S@@/S@@@@@@@@@/     @@]@@]]@@[?(.     @@[@@[]@@[?&CI
)@@G@@*     @@[@@[]@@[?<;D@@@@-?%[K/S@@/S@@/S@@@            @&K@@@]@@[?2@@@@@@CJ
)@@G@@@@A@@A[@@[?\@@@@@[@@A@@A[@@[??;E@@@@-?4[S@@@@@@@                        CK
)@@G@@                                          ;F@@@@-?_[S@@@@@@@            CL
)@@G@@                                                      ;G@@@@-!E[S@@@@@@@CM
)@@G@@                                                                  ;H@@@@CN
)@@G@@-!P[S@@@@@@@                                                            CO
)@@G@@      ;I@@@@-!)[S@@@@@@@                                                CP
)@@G@@                  ;J@@@@-!:[S@@@@@@@                                    CQ
)@@G@@                              ;K@@@@-!6[S@@@@@@@                        CR
)@@G@@                                          ;L@@@@-,[[S@@@@@@@            CS
)@@G@@                                                      ;M@@@@-,G[S@@@@@@@CT
)@@G@@                                                                  ;N@@@@CU
)@@G@@-,R[S@@@@@@@                                                            CV
)@@G@@      ;O@@@@-,+[S@@@@@@@                                                CW
)@@G@@                  ;P@@@@-,![S@@@@@@@                                    CX
)@@G@@                              ;Q@@@@-,8[S@@@@@@@                        CY
)@@G@@                                          ;R@@@@-\#[S@@@@@@@            CZ
)@@G@@                                                      ;S@@@@-\I[S@@@@@@@DA
)@@G@@                                                                  ;T@@@@DB
)@@G@@-\T[S@@@@@@@                                                            DC
)@@G@@      ;U@@@@-\=[S@@@@@@@                                                DD
)@@G@@                  ;V@@@@-\\[S@@@@@@@                                    DE
)@@G@@                              ;W@@@@-\'[S@@@@@@@                        DF
)@@G@@                                          ;X@@@@-0 [S@@@@@@@            DG
)@@G@@                                                      ;Y@@@@-0K[S@@@@@@@DH
)@@G@@                                                                  ;Z@@@@DI
)@@G@@-0V[S@@@@@@@                                                            DJ
)@@G@@      /A@@@@-0&[S@@@@@@@                                                DK
)@@G@@                  /B@@@@-01[S@@@@@@@                                    DL
)@@G@@                              /C@@@@-0/[S@@@@@@@                        DM
)@@G@@                                          /D@@@@-1B[S@@@@@@@            DN
)@@G@@                                                      /E@@@@-1M[S@@@@@@@DO
)@@G@@                                                                  /F@@@@DP
)@@G@@-1X[S@@@@@@@                                                            DQ
)@@G@@      /G@@@@-1*[S@@@@@@@                                                DR
)@@G@@                  /H@@@@-13[S@@@@@@@                                    DS
)@@G@@                              /I@@@@-1"[S@@@@@@@                        DT
)@@G@@                                          /J@@@@-2D[S@@@@@@@            DU
)@@G@@                                                      /K@@@@-2O[S@@@@@@@DV
)@@G@@                                                                  /L@@@@DW
)@@G@@-2Z[S@@@@@@@                                                            DX
)@@G@@      /M@@@@-2%[S@@@@@@@                                                DY
)@@G@@                  /N@@@@-25[S@@@@@@@                                    DZ
)@@G@@                              /O@@@@-3@[S@@@JA@@[@@[3G                  EA
)@@G@@                                          /P@@@@-3F[K#1)@#1)@@/S@@]@@[3QEB
)@@G@@            @@G@@G]@@[3MTPF$  @@^@@^]@@[3J@@@@@@@@A@@A/Q@@@@-3P@8@*[K@@@EC
)@@G@@-^1@N#@@@@@@R@W@@@R#@[3=@@[@@#@@[[:S@@[@[]@@[[:1@@@@@@@]@@@@@@G@@G/R@@@@ED
)@@G@@-^3[N#@^G[#@K]6]@@/K@[ ]:80@]A/ )[ ]H9)@@[C[)@[X[ -@@[C )[4GR@W@@[[ -@@[EE
)@@G@@C )[4E/S@@@@-^.[MK0^G[#@K0K0@@M@-)@@R@)[;YR@K[;XN8K@@ [[)@[XC[\@@@[[)@[ZEF
)@@G@@C[\@@[[@0@[YG80@@]/T@@@@- B[MK0K0^G^G^G@@@/KF@@@*4F@@@OY;@@@R@)[3/R@K[3;EG
)@@G@@N@K[3'M@-)@@R@)[;)R@K[;ZN8K@@T/U@@@@- L[MK^G^G^G[#[#@@N8K@@ M@M)@@R@)[;)EH
)@@G@@R@K[;ZN8K@@TA@)[3/A@K[3;^@K[3'/K@[ JO'0@@[/V@@@@- V[N#[#@K0K0@K0@@R;F0@@EI
)@@G@@9()[4D9!?@@@R;F0@@&'0@@[R@)[3/R@K[3;M@M)@@R@)[;YR@K[;X/W@@@@- >[EK0K0K^GEJ
)@@G@@]&[N[@ES@@@@R9K[4Y/,)@A,R9)[4VR9K[4Y ^@[4Z/,)@BNC[)[3=9()[4F9!?@@@/X@@@@EK
)@@G@@- ,[E()) G]&]@-)O0ESC@@@/,)@A,R9)[4YR9K[4D ^@[4E/,)@A,R9)[4VR9K[4Y/,)@A,EL
)@@G@@R9)[4D/Y@@@@- 7[F#[#@(&-)O^@()O0K@@@/,0@^:R9)[4]R9K[4D/,0@ )R'K[CPC#@L4^EM
)@@G@@R9K@([C @[4EQB)[4D/Z@@@@-A@[F#[#@(&-)O^@()O0K@@@/,0@^:R9)['"R9K[4H/,0@ )EN
)@@G@@R'K[AEC#@L4^R9K@%MC @[4IQB)[4H.A@@@@-AD[F@K0K0ET*S [@K0K0@@@9()[4@9!)@[VEO
)@@G@@/,0@ )R'K[CPC#@L4^R9K@%QC @[4EQB)[4D/K@[B@.B@@@@-AM[F#@*CSC[50A]@-)-)@@@EP
)@@G@@:8@@@[9()@[V9!)[4@/@@[BS@[@[4K/K@[D@A]0@[ZR'0[AQA#0@[Y.C@@@@-AV[F@^G^[#[EQ
)@@G@@#@()O0K@@@@@/,)@A,R9)[4BR9K[4Y ^@[4Z @@[4C/K@[A)9()[4B9!?@@@/K@[AZ.D@@@@ER
)@@G@@-A=[F#[#[#@*CSC[50A]@-)@9!)[4@/@@[BS@[@[4O/K@[D@A]0@[ZR'0[A%A#0@[Y9()[4@ES
)@@G@@9!)@[V.E@@@@-A![F#@K[#[@K0K0ES@@@@@@R9K[;[ ^@[;] @@[4C/K@[A49()[4B9!?@@@ET
)@@G@@/K@[A3:8@@@[9()@[V.F@@@@-A6[E()) G]&]@-)O0ESC@@@/,)@A,R9)[4YR9K[4F ^@[4GEU
)@@G@@/,)@A,R9)[;[R9K[4Y/,)@A,R9)[4B.G@@@@-A_[F@K0K0K0E]A]@XW[))@@/@@[BS@[@[4KEV
)@@G@@/K@[D@A]0@[ZR'0[BAA#0@[Y9()[4@9!)@[V/K@[BS.H@@@@-BC[F#[#@K[#[@K0K0@@@@@@EW
)@@G@@ ^@[4Z @@[4C/K@[BK9()[4B9!?@@@/K@[BJ:8@@@[9()@[V9!)[4@.I@@@@-BL[E()O0K^GEX
)@@G@@]&[N[@K0ES@@R9K[4Y ^@[4Z/,)@A,R9)[4YR9K[4F ^@[4G/,)@A,R9)[4BR9K[4Y.J@@@@EY
)@@G@@-BU[E()) G]&]@O0ESC[N@@@R9K[4Y/,)@A,R9)[;DR9K[4Y/,)@A,R9)[4HR9K[4Y/,)@A,EZ
)@@G@@R9)[;A.K@@@@-B<[E())CS G]&]@-)-)-)@@C[)L;Q[[)L;QC )[4G/,)@A,R9)[4YR9K[4FFA
)@@G@@ ^@[4G/,)@A,R9)[4F.L@@@@-B?[EK0K[#[#[#[#@*@@@@@@R'0[B7A#0@[Y9()[4@9!)@[VFB
)@@G@@[[)L;Q @@@@M/ )[B0W[)L;H;P)@@=.M@@@@-B5[F#[@I,@0K^G^G[@@@@@@9!?@@@/K@[C@FC
)@@G@@:8@@@[9()@[V9!)[4@/@@[CF@[@[;Q/K@@B!A]0@[Z.N@@@@-B"[F#[@K0K0ES G^[#[#@@@FD
)@@G@@C @[4ZQB)[4Y/,)@A,R9)[4BR9K[4Y ^@[4Z @@[4C/K@[C[9()[4B.O@@@@-CB[E(&-)O^[FE
)@@G@@#[#@(&-)O@@@R'K[CVC#@L4^R9K@:QC @[4GQB)[4F/,0@ )R'K[CFC#@L4^R9K@%6.P@@@@FF
)@@G@@-CK[F@ES G^[@K0ES G^@@@@/,)@A,R9)[;TR9K[4F ^@[4G/K@[CV/,0@^:R9)[4SR9K[4FFG
)@@G@@/,0@ ).Q@@@@-CT[#@K)^G^@K0K@@@)([@ISC[)@@I/K@[^1[[)[3>C9)@@@/K@[^1[[)[3>FH
)@@G@@C9)@@['=@@@@/K@[CV.R@@@@)(][QS@K0K1K1ESCS)/,0@^#R9K[4V/[@@^M/K@@^M%[)L'2FI
)@@G@@G[)@@[&8K@@@R@K@@HT9)@@AH[)@[].S@@@@)(G[QS(+-+@-)-+O@@A[Z@@@R9K@%B/\@@^TFJ
)@@G@@$B0@]C[@\@@[[0Z@@@^[J@@@/,0@#0R'K@^M @@@@M.T@@@@)(Q[QS^G^GM&]ACO0@A Z@@@FK
)@@G@@R9K[4H^[\@@@/,0@#+R9K['5/\@@^T$B0@]C[DJ@@[[^\@@[[0Z@@@.U@@@@)()[ISK0K1K1FL
)@@G@@ESCS-N^@@@@@R'K@^M @@@@M/,0@^#R9K[4V/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@.V@@@@FM
)@@G@@)(([IWGK^G^GOGM&]AC@@@@@/,0@^#R9K[4V/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@FN
)@@G@@/,0@#0.W@@@@)(2[QS@ES*S-N@@@@@A Z@@@R9K[4K^[\@@@/,0@#0R'K@^MC9)@@[9,@@@PFO
)@@G@@-]@@@M-]K@@MD9)@@@.X@@@@)(/[ISK0K1K1ESCS-N^@@@@@R'K@^M @@@@M/,0@^#R9K[4VFP
)@@G@@/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@.Y@@@@)% [IWGO@()-+ G@@@@@@@@@[@\@@[[0Z@@@FQ
)@@G@@A Z@@@R9K[4H^[\@@@/,0@#+R9K['8/K@@%L/,0@#0.Z@@@@)%I[IWG^GO[#^()-+)CS)@@@FR
)@@G@@C[)@@I/K@@#R/K@@%P/,0@#+R9K[';/K@@#R/K@@(=/\@@^T$B0@]C"A@@@@)%R[QS@K0K1@FS
)@@G@@@@@@@@[@\@@[[0Z@@@^[J@@@/K@@^M%[)L'2G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]"B@@@@FT
)@@G@@)%-[QWG^GOGM&]AC@@C9)@@[9,@@@P-]@@@M-]K@@MD9)@@@/,0@^#R9K[4V/[@@^M/\@@^TFU
)@@G@@$B0@]C"C@@@@)%:[IU&EACO0@K0K1@@@@@@@/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K[4OFV
)@@G@@^[\@@@/,0@#0R'K@^M"D@@@@)%4[QW[# #@K1^G@@@G@)@@GW8@@@A @@@@GG@KL;K&;K@@@FW
)@@G@@/\@@^M0@@@@KH[@L;K/K@@#R/K@@%5"E@@@@)%"[QS[#[# #@K1@@@&;K@@@/\@@^M0@@@@KFX
)@@G@@H[@L;N/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@&;K@@["F@@@@):C[QWG@@ES@@@@@@@[@\@@[FY
)@@G@@[0Z@@@A Z@@@R9K[4S^[\@@@&;K@@[G@)@@GW8@@@A @@@@GG@KL;N"G@@@@):M[IWG^GO[#FZ
)@@G@@ #@K1^G@@@@@G@KL;N&;K@@@/\@@^M0@@@@KH[@L;N/K@@#R/K@@:P/\@@^T$B0@]C"H@@@@GA
)@@G@@):V@6S[@K1@@-4]@S/S@#1)@[@@[4A@@@@@@]@@[4^/K@@#R/K@@:)&;K@@[G@)@@GW8@@@AGB
)@@G@@ @@@@G"I@@@@-4 [C#1)@JA@@/S@#1)@@@@@]@@[4J@>)@@@]@@[4H@>)@@@]@@[4F@@@@@@GC
)@@G@@]@@[4D@@@@@@@@A@@A"J@@@@-4I[K#1)@@/S@@@@@@            @@G@@@]@@[4Q      GD
)@@G@@      @@G@@@]@@[4M      @@[@@@"K@@@@-4S[K/S@@/S@@/S@@@            @>?@@@GE
)@@G@@]@@[4)      @@[@@[]@@[4X      @@]@@@]@@[4U"L@@@@-4+[S@@@@@@@            GF
)@@G@@                                                      "M@@@@-4![S@@@@@@@GG
)@@G@@                                                                  "N@@@@GH
)@@G@@-48[S@@@@@@@                                                            GI
)@@G@@      "O@@@@-5#[S@@@@@@@                                                GJ
)@@G@@                  "P@@@@-5I[S@@@@@@@                                    GK
)@@G@@                              "Q@@@@-5T[S@@@@@@@                        GL
)@@G@@                                          "R@@@@-5=[S@@@@@@@            GM
)@@G@@                                                      "S@@@@-5\[S@@@@@@@GN
)@@G@@                                                                  "T@@@@GO
)@@G@@-5'[S@@@@@@@                                                            GP
)@@G@@      "U@@@@-6 [S@@@@@@@                                                GQ
)@@G@@                  "V@@@@-6K[S@@@@@@@                                    GR
)@@G@@                              "W@@@@-6V[S@@@@@@@                        GS
)@@G@@                                          "X@@@@-6&[S@@@@@@@            GT
)@@G@@                                                      "Y@@@@-61[S@@@@@@@GU
)@@G@@                                                                  "Z@@@@GV
)@@G@@-6/[S@@@@@@@                                                            GW
)@@G@@      _A@@@@-7B[S@@@@@@@                                                GX
)@@G@@                  _B@@@@-7M[S@@@@@@@                                    GY
)@@G@@                              _C@@@@-7X[S@@@@@@@                        GZ
)@@G@@                                          _D@@@@-7*[S@@@@@@@            HA
)@@G@@                                                      _E@@@@-73[S@@@@@@@HB
)@@G@@                                                                  _F@@@@HC
)@@G@@-7"[S@@@@@@@                                                            HD
)@@G@@      _G@@@@-8D[S@@@@@@@                                                HE
)@@G@@                  _H@@@@-8O[S@@@@@@@                                    HF
)@@G@@                              _I@@@@-8Z[S@@@@@@@                        HG
)@@G@@                                          _J@@@@-8%[S@@@@@@@            HH
)@@G@@                                                      _K@@@@-85[S@@@@@@@HI
)@@G@@                                                                  _L@@@@HJ
)@@G@@-9@[S@@@@@@@                                                            HK
)@@G@@      _M@@@@-9F[S@@@@@@@                                                HL
)@@G@@                  _N@@@@-9Q[S@@@@@@@                                    HM
)@@G@@                              _O@@@@-9-[S@@@@@@@                        HN
)@@G@@                                          _P@@@@-9?[S@@@@@@@            HO
)@@G@@                                                      _Q@@@@-97[S@@@@@@@HP
)@@G@@                                                                  _R@@@@HQ
)@@G@@-'][S@@@@@@@                                                            HR
)@@G@@      _S@@@@-'H[S@@@@@@@                                                HS
)@@G@@                  _T@@@@-'S[S@@@@@@@                                    HT
)@@G@@                              _U@@@@-'<[S@@@@@@@                        HU
)@@G@@                                          _V@@@@-',[K@JA@@JA@@@@@@AREA  HV
)@@G@@@@^@@^]@@['7@@@@@@@@A@@A[@@['4                        _W@@@@-'8[C/S@@/S@HW
)@@G@@@/S@@@@@@@@@C     @@[@@[]@@[;@A     @@[@@[]@@['.DIRECT@@A@@A]@@[''_X@@@@HX
)@@G@@-;[[K/S@@#1)@#1)@@@@D@@D]@@[;F      @@]@@]]@@[;C                  @@M@@@HY
)@@G@@]@@[;#_Y@@@@-;F[K#1)@#1)@#1)@@@@A@@A[@@[;P@@@@@^@@A@@A[@@[;M@@@@@A@@A@@AHZ
)@@G@@[@@[;J         ]  _Z@@@@-;P[KJA@@JA@@])@@@@@[@[]@@[[35@@@@@@@]@@@@@@G@@GIA
)@@G@@]@@[;V@@@@@@@@A@@A[@@[;S@@@@@]@A@@@@-;Z@K*@@@@@@-C-@3#@K0^G@@@@@@@H9)@@[IB
)@@G@@C[)@[X[ -@@[C )[/JR@W@@@R#@[;(@@[@@#@@[[3W@B@@@@-C$[N@FSC@-)CS]A@@N8K@@ IC
)@@G@@[[)@[XC[\@@@[[)@[ZC[\@@[[@0@[YG80@@]/K@[C\:80@]A/ )[C\@C@@@@-C1[F#[#@^G^ID
)@@G@@G[#[#@@@@@@@R@K[/@N@K[;_M@-)@@R@)]FBR@K]FAN8K@@TM@-)@@R@)]F R@K]F^@D@@@@IE
)@@G@@-C'[N#@@K^G^G^G@@@N8K@@TA@)[/[A@K[/@^@K[;_/K@[C/O'0@@[/KF@@@*4F@@@OY;@@@IF
)@@G@@R@)[/[@E@@@@-D^[F#[#@^G^G[#[#@@@@@@@R@)[/[R@K[/@M@M)@@R@)]F R@K]F^N8K@@ IG
)@@G@@M@M)@@R@)]FBR@K]FA@F@@@@-DH[E[#[#[@K0ES G@@@@@@@R9)[.QR9K[.T ^@[.U/,)@BNIH
)@@G@@C[)[;(9()[/I9!?@@@R;F0@@&'0@@[@G@@@@-DQ[F@ES G^@()O0K^G]&@@@R9K[/I ^@[/JII
)@@G@@/,)@A,R9)[.QR9K[.T/,)@A,R9)[/IR9K[.T/,)@A,@H@@@@-DZ[E())CS G]&]@-)O0ES@@IJ
)@@G@@R9)]#?R9K[/2 ^@[/3/,)@A,R9)]#?R9K[/= ^@[/>/,)@A,R9)[.T@I@@@@-D*[F@K0ES GIK
)@@G@@^[#@()O0K@@@/,)@A,R9)]#?R9K[.E ^@[.F/,)@A,R9)]#?R9K[/" ^@[/_/,)@A,@J@@@@IL
)@@G@@-D1[F#[#@(&-)O^@()O0K@@@/,0@^:R9)[/BR9K[/I/,0@ )R'K[KUC#@L/DR9K@:-C @[/JIM
)@@G@@QB)[/I@K@@@@-D'[F#[#@(&-)O^@()O0K@@@/,0@^:R9)[/BR9K[/I/,0@ )R'K[E#C#@L/DIN
)@@G@@R9K@:_C @[/JQB)[/I@L@@@@-E#[F#[#@(&-)O^[#[#@(&@@R9K@!XC @[/3QB)[/2/,0@ )IO
)@@G@@R'K[EDC#@L/DR9K@?!C @[/>QB)[/=@M@@@@-EG[F#@*C]A]A]A[KK0K@@@@/K@[Z4A]0@[ZIP
)@@G@@R'0[EPA#0@[Y9()[/ 9!)@[V/,0@ )R'K[EJC#@L/D@N@@@@-EP[E'8#[@K0K0^@K0K@@@@@IQ
)@@G@@/K@[EZ9()[/G9!?@@@/K@[EY:8@@@[9()@[V9!)[/ /@@[E*@[@[/=@O@@@@-EY[F#[#@()OIR
)@@G@@0K^G]&[N[@@@/,)@A,R9)[.TR9K[/K ^@[/L/,)@A,R9)[/GR9K[.T ^@[.U @@[/H@P@@@@IS
)@@G@@-E$[F@K0K0K0E]A]@XW[))@@/@@[FP@[@[/=/K@[X%A]0@[ZR'0[E,A#0@[Y9()[/ 9!)@[VIT
)@@G@@/K@[F@@Q@@@@-E0[F#[#@K[#[@K0K0@@@@@@ ^@[.U @@[/H/K@[E89()[/G9!?@@@/K@[E7IU
)@@G@@:8@@@[9()@[V9!)[/ @R@@@@-E9[E()O0K^G]&[N[@K0K0@@C @[/3QB)[/2/,)@A,R9)[.TIV
)@@G@@R9K[/K ^@[/L/,)@A,R9)[/GR9K[.T@S@@@@-F][E(&-)O^[@K0K0ET*S@@@C#@L/DR9K@,SIW
)@@G@@C @[/_QB)[/"/K@[KU/,0@ )R'K[FBC#@L/DR9K@,H@T@@@@-FF[E*C]@-)-)O3K0E]@@@@@IX
)@@G@@/,0@ )R'K[K)C#@L/DR9K@,<C @[.FQB)[.E/K@[KU/,0@ )R'K[FI@U@@@@-FO[#@K0K0K0IY
)@@G@@E]A]@XW[)@@@@@@@@@@]@[/=/K@[-/A]0@[ZR'0[FVA#0@[Y9()[/ 9!)@[V/K@[KU@V@@@@IZ
)@@G@@-FW[E/S#[@K0K0^@K0K@@@@@/K@[F&9()[/G9!?@@@/K@[F>:8@@@[9()@[V9!)[/ /@@[KUJA
)@@G@@@@@[/"@W@@@@-F>[F#[#@()O0K^G]&[N[@@@/,)@A,R9)[.TR9K[/K ^@[/L/,)@A,R9)[/GJB
)@@G@@R9K[.T ^@[.U @@[/H@X@@@@-F,[F#[#@(&-)O^[#[#@(&@@R9K@,9C @[/LQB)[/K/,0@ )JC
)@@G@@R'K[KEC#@L/DR9K@,,C @[/_QB)[/"@Y@@@@-F7[F#@*C]A]A[NH#@*C@@@@/,0@ )R'K[G[JD
)@@G@@C#@L/DR9K@\AC @[/3QB)[/2/,0@ )R'K[KUC#@L/D@Z@@@@-G@[F@K0K0K0E]A]@XW[))@@JE
)@@G@@/@@[G>@[@[/"/K@[X%A]0@[ZR'0[GBA#0@[Y9()[/ 9!)@[V/K@[HE[A@@@@-GD[F#[#@K[#JF
)@@G@@[@K0K0@@@@@@ ^@[.U @@[/H/K@[GL9()[/G9!?@@@/K@[GK:8@@@[9()@[V9!)[/ [B@@@@JG
)@@G@@-GM[E()O0K^G^G]&UA[KK@@@/,0@ )R'K[G>C#@L/DR9K@\LC @[.UQB)[.T/,)@A,R9)[/GJH
)@@G@@R9K[.T[C@@@@-GV[F#[#@(&-)O^@()O0K@@@/,0@^:R9)[/ZR9K[/K/,0@ )R'K[K)C#@L/DJI
)@@G@@R9K@\\C @[/LQB)[/K[D@@@@-G=[#@K0K0K0E]A]@XW[)@@@@@@@@@@]@[/"/K@[-/A]0@[ZJJ
)@@G@@R'0[G:A#0@[Y9()[/ 9!)@[V/K@[K)[E@@@@-G?[E/S#[@K0K0^@K0K@@@@@/K@[G69()[/GJK
)@@G@@9!?@@@/K@[G5:8@@@[9()@[V9!)[/ /@@[KU@@@]#?[F@@@@-G5[F#[#@()O0K^G^G]&UA@@JL
)@@G@@C#@L/DR9K@0]C @[.UQB)[.T/,)@A,R9)[/GR9K[.T ^@[.U @@[/H[G@@@@-G"[E*C]A]A[JM
)@@G@@NH#@*C[N@@@@R9K[/K/,0@ )R'K[K)C#@L/DR9K@0TC @[/LQB)[/K/,0@ )R'K[KU[H@@@@JN
)@@G@@-HB[E())C]A]A[NH#@*C@@@@/,0@ )R'K[HOC#@L/DR9K@0?C @[/_QB)[/"/K@[K)/,0@^:JO
)@@G@@R9)[/W[I@@@@-HK[E()O0K^[#[#@(&-)O@@@R'K[HYC#@L/DR9K@0'C @[/_QB)[/"/K@[H$JP
)@@G@@/,0@^:R9)]^IR9K[/"[J@@@@-HT[F@ES G^[@K0K0ET*S@@@C#@L/DR9K@1CC @[/_QB)[/"JQ
)@@G@@/K@[H$/,0@^:R9)]^OR9K[/"/,0@ )[K@@@@-H+[E*C[N@())CSCS G4G@@@C#@L/DR9K@1QJR
)@@G@@C @[/LQB)[/K/,0@^:R9)]^UR9K[/"/,0@ )R'K[KU[L@@@@-H:[E*C[N@())CSCSCS @@@@JS
)@@G@@R'0[H6A#0@[Y9()[/ 9!)@[V/,0@^:R9)[/"R9K[/K/,0@ )R'K[H0[M@@@@-H4[F#[@I,@0JT
)@@G@@K^G^G[@@@@@@9!?@@@/K@[H_:8@@@[9()@[V9!)[/ /@@[IQ@[@[/2/K@[X%A]0@[Z[N@@@@JU
)@@G@@-H.[F#[@K0K0ES G^[#@()@@R9K]^X ^@]^Y/,)@A,R9)[/GR9K[.T ^@[.U @@[/H/K@[I@JV
)@@G@@9()[/G[O@@@@-IA[E()) G]&]@-)O0ESC@@@/,)@A,R9)]^XR9K[/K ^@[/L/,)@A,R9)[.TJW
)@@G@@R9K]^X/,)@A,R9)[/K[P@@@@-IJ[F#[#@(&-)O^[@K0K0@@@9()[/ 9!)@[V/K@[KU/,0@ )JX
)@@G@@R'K[K)C#@L/DR9K@1(C @[.FQB)[.E[Q@@@@-IS[##@*CSC[50A[80A]@-)@@@@@@@9!)[/ JY
)@@G@@/@@[KU@@@[.E@]@[/2/K@[-/A]0@[ZR'0[IWA#0@[Y[R@@@@-I)[F#@K[#[@K0K0ES@@@@@@JZ
)@@G@@R9K[.T ^@[.U @@[/H/K@[I$9()[/G9!?@@@/K@[I&:8@@@[9()@[V[S@@@@-I([E())CS GKA
)@@G@@]&]@O0ESC@@@/,)@A,R9)[.TR9K]^X/,)@A,R9)[/KR9K]^X ^@]^Y/,)@A,R9)[/G[T@@@@KB
)@@G@@-I2[F#@()O0K^G^G]&UA[K@@R'K[K)C#@L/DR9K@14C @[.FQB)[.E/,)@A,R9)]^XR9K[/KKC
)@@G@@ ^@[/L[U@@@@-I;[F@K0K0K0E]A]@XW[))@@/@@[J>@[@[.E/K@[X%A]0@[ZR'0[J]A#0@[YKD
)@@G@@9()[/ 9!)@[V/,0@ )[V@@@@-J^[F#[#@K[#[@K0K0@@@@@@ ^@[.U @@[/H/K@[JG9()[/GKE
)@@G@@9!?@@@/K@[JF:8@@@[9()@[V9!)[/ [W@@@@-JH[E()O0K^G]&[N[@ES G@@R9)[.TR9K]^XKF
)@@G@@/,)@A,R9)[/KR9K]^X ^@]^Y/,)@A,R9)[/GR9K[.T[X@@@@-JQ[F@K0ES G^[#[#@(&-)@@KG
)@@G@@C#@L/DR9K@1_C @[/LQB)[/K/,)@A,R9)]^XR9K[/K ^@[/L/,)@A,[Y@@@@-JZ[E*C[N@()KH
)@@G@@)C]A]A]A@@@@A#0@[Y9()[/ 9!)@[V/K@[K)/,0@^:R9)[/BR9K[/K/,0@ )R'K[K)[Z@@@@KI
)@@G@@-J*[E*CSC[50A[80A]@-)-)@:8@@@[9()@[V9!)[/ /@@[KU@@@]#?@]@[.E/K@[-/A]0@[ZKJ
)@@G@@R'0[J:]A@@@@-J1[F@^G^[#[#@()O0K@@@@@/,)@A,R9)[/GR9K[.T ^@[.U @@[/H/K@[J6KK
)@@G@@9()[/G9!?@@@/K@[J5]B@@@@-J'[F#[#@(&-)O^[#[#@(&@@R9K@2(C @[/LQB)[/K/,0@ )KL
)@@G@@R'K[KUC#@L/DR9K@2MC @[.UQB)[.T]C@@@@-K#[F#@*C[N@())C]A]A@@@@C @[/3QB)[/2KM
)@@G@@/K@[K)/,0@^:R9)[/WR9K[/K/,0@ )R'K[K)C#@L/D]D@@@@-KG[E(&-)O^[#[#@(&-)O@@@KN
)@@G@@R'K[H0C#@L/DR9K@3BC @[/LQB)[/K/,0@ )R'K[K)C#@L/DR9K@2/]E@@@@-KP[F@ES G^[KO
)@@G@@@K0ES G^@@@@/,)@A,R9)]F@R9K[/K ^@[/L/K@[H0/,0@^:R9)]^IR9K[/K/,0@ )]F@@@@KP
)@@G@@-KY[#@K)ESCSC@-))@@@@[@@@@@@@@/K@[C-[[)[;%C9)@@@/K@[C-[[)[;%C9)[/K'=@@@@KQ
)@@G@@/K@[K)]G@@@@):-[IWGM&]ACO1K1@@@@@@@@[@\@@[[0Z@@@^[J@@@/,0@#0R'K@^M @@@@MKR
)@@G@@/,0@^#R9K[.Q/[@@^M]H@@@@):%[QWG^GOGM&]AC@@C9)@@[9,@@@P-]@@@M-]K@@MD9)@@@KS
)@@G@@/,0@^#R9K]#,/[@@^M/\@@^T$B0@]C]I@@@@):4[IU&EACO0@K0K1@@@@@@@/\@@^T$B0@]CKT
)@@G@@[@\@@[[0Z@@@A Z@@@R9K[/=^[\@@@/,0@#0R'K@^M]J@@@@):.[QW[#^@[#[#^@@@/K@@^MKU
)@@G@@%[)M#2G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#R/K@@:"]K@@@@)?B[IWGM&]ACKV
)@@G@@O1K1ESCS*S)@/[@@^M/,0@#+R9K]#5/,0@#0R'K@^M @@@@M/,0@^#R9K[.Q/[@@^M]L@@@@KW
)@@G@@)?K[IU&]ACO1K1@K0@@@@@@@$B0@]C[@\@@[[0Z@@@^[J@@@/,0@#0R'K@^M @@@@M/,0@^#KX
)@@G@@R9K[.Q]M@@@@)?T[QWGOGM&]AC@ GKR'K@^MC9)@@[9,@@@P-]@@@M-]K@@MD9)@@@/,0@^#KY
)@@G@@R9K]#8/[@@^M/\@@^T]N@@@@)?<[IWGK()@-)-+)@@@@@@@@/K@@??/\@@^T$B0@]C[@\@@[KZ
)@@G@@[0Z@@@A Z@@@R9K[/2^[\@@@/,0@#0]O@@@@)??[IWGK^G^GOGM&]AC@@@@@/,0@^#R9K]#/LA
)@@G@@/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/K@@#R]P@@@@)?5[QS@ES*S-N@@@@@A Z@@@LB
)@@G@@R9K[/=^[\@@@/,0@#0R'K@^MC9)@@[9,@@@P-]@@@M-]K@@MD9)@@@]Q@@@@)?_[QSK0K1ESLC
)@@G@@CS)CS@$B0@]C[@\@@[[0Z@@@^[J@@@/,0@#+R9K]#//\@@^T$B0@]C[@\@@[[0Z@@@]R@@@@LD
)@@G@@)!D[QWGOGM&]AC@ GKR'K@^MC9)@@[9,@@@P-]@@@M-]K@@MD9)@@@/,0@^#R9K]#_/[@@^MLE
)@@G@@/\@@^T]S@@@@)!N[IWGK()@-)-+)@@@@@@@@/K@@!W/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@LF
)@@G@@R9K[/"^[\@@@/,0@#0]T@@@@)!W[IWGK^G^GOGM&]AC@@@@@/,0@^#R9K]#//[@@^M/\@@^TLG
)@@G@@$B0@]C[@\@@[[0Z@@@^[J@@@/K@@#R]U@@@@)!>[QS@ES*S-N@@@@@A Z@@@R9K[/2^[\@@@LH
)@@G@@/,0@#0R'K@^MC9)@@[9,@@@P-]@@@M-]K@@MD9)@@@]V@@@@)!\[QSK0K1ESCS)CS@$B0@]CLI
)@@G@@[@\@@[[0Z@@@^[J@@@/,0@#+R9K]#//\@@^T$B0@]C[@\@@[[0Z@@@]W@@@@)!9[QWGOGM&]LJ
)@@G@@AC@ GKR'K@^MC9)@@[9,@@@P-]@@@M-]K@@MD9)@@@/,0@^#R9K]#_/[@@^M/\@@^T]X@@@@LK
)@@G@@),#[IWGK()@-)-+)@@@@@@@@/K@@,G/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K[.E^[\@@@LL
)@@G@@/,0@#0]Y@@@@),G[QWGOG[#^K0@@@@&;K@@[G@)@@GW8@@@A @@@@GG@KM^]&;K@@@/\@@^MLM
)@@G@@0@@@@KH[@M^]/K@@#R]Z@@@@),Q[QW[# #@K1^G@@@G@)@@GW8@@@A @@@@GG@KM^]&;K@@@LN
)@@G@@/\@@^M0@@@@KH[@M^]/K@@#R/K@@,R#A@@@@),)[QT@K1K0^GL#@@@W8@@@A @@@@GG@KM^]LO
)@@G@@&;K@@@/\@@^M0@@@@KH[@M^]/K@@#R/K@@,+&;K@@[#B@@@@),%[QSK^GOG[#^K0@@ @@@@GLP
)@@G@@G@KM^]&;K@@@/\@@^M0@@@@KH[@M^]/K@@#R/K@@,!&;K@@[G@)@@G#C@@@@),4[QS^[# #@LQ
)@@G@@K1^G@@G@KM^ &;K@@@/\@@^M0@@@@KH[@M^ /K@@#R/K@@,8&;K@@[G@)@@GW8@@@A#D@@@@LR
)@@G@@),"[QS@()-+)CS*S@@0@@@@KH[@M^]/K@@#R/K@@\ /,0@#+R9K]^C&;K@@[G@)@@GW8@@@ALS
)@@G@@ @@@@G#E@@@@)\C[QWGL#@@K^GOG@@H[@M^ /K@@#R/K@@\K&;K@@[G@)@@GW8@@@A @@@@GLT
)@@G@@G@KM^]&;K@@@/\@@^M#F@@@@)\M[QT#^K0@@@@@@@@[0Z@@@^[J@@@&;K@@[G@)@@GW8@@@ALU
)@@G@@ @@@@GG@KM^ &;K@@@/\@@^M0@@@@K#G@@@@)\W[QT#[#^@@@@@@@@ @@@@K&;K@@[G@)@@GLV
)@@G@@W8@@@A @@@@GG@K@@K&;K@@@/\@@^T$B0@]C[@\@@[#H@@@@)\&[QS()@-)-+)CS)@C[)@@ILW
)@@G@@/K@@#R/K@@\,/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K[/Z^[\@@@#I@@@@)\0[QS@K0K1KLX
)@@G@@0^GK@@/\@@^M0@@@@KH[@M^ /K@@^M%[)M^ G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]#J@@@@LY
)@@G@@)\'[QT#@@K^GK@@@@@[0Z@@@^[J@@@/K@@#R/K@@0[&;K@@[G@)@@GW8@@@A @@@@GG@KM^ LZ
)@@G@@&;K@@@#K@@@@)0^[QT#[# #@K1^G@@W8@@@A @@@@GG@KM^ &;K@@@/\@@^M0@@@@KH[@M^ MA
)@@G@@/\@@^T$B0@]C[@\@@[#L@@@@)0I[QS]&@]A]AE@@@@/K@@0S/\@@^T$B0@]C[@\@@[[0Z@@@MB
)@@G@@A Z@@@R9K[/W^[\@@@&;K@@[G@)@@G#M@@@@)0S[QWGK@^G^GOG@@@H[@M^ /K@@^M%[)M^ MC
)@@G@@G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#R#N@@@@)0+[QT#^K0@^[#^@@@/K@@#RMD
)@@G@@/K@@0:&;K@@[G@)@@GW8@@@A @@@@GG@KM^ &;K@@@/\@@^M0@@@@K#O@@@@)0?[QS@^G^GMME
)@@G@@&]AC@@/,0@#+R9K]^F/K@@^M%[)M#2G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I#P@@@@MF
)@@G@@)06[QWG^GO[#^@@@@@G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#R/K@@09/K@@^MMG
)@@G@@%[@M#2#Q@@@@)1@[IWG^GM&]AEA]AE@-+@@@C[)@@I/K@@#R/K@@1B/K@@^M%[@M#2/,0@#+MH
)@@G@@R9K]^L/K@@^M%[)M#2#R@@@@)1D[QS@K0K1ESCS*S@%[@M#2/,0@#+R9K]^R/K@@^M%[)M#2MI
)@@G@@G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]#S@@@@)1N[QWGO[#^@[#@@@@%[)M^ G[)@@[&8K@@@MJ
)@@G@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#R/K@@1P/K@@^M#T@@@@)1X[QWGOG[#^K0@@@@&;K@@[MK
)@@G@@G@)@@GW8@@@A @@@@GG@KM^ &;K@@@/\@@^M0@@@@KH[@M^ /K@@^M#U@@@@)1$[QW[# #@KML
)@@G@@1^G@@@G@)@@GW8@@@A @@@@GG@KM^]&;K@@@/\@@^M0@@@@KH[@M^]/K@@#R/K@@1*#V@@@@MM
)@@G@@)11[QT@K1K0^GL#@@@W8@@@A @@@@GG@KM^]&;K@@@/\@@^M0@@@@KH[@M^]/K@@#R/K@@13MN
)@@G@@&;K@@[#W@@@@)1;[QSK^GK@@@@@@@@G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#RMO
)@@G@@/K@@1"&;K@@[G@)@@G#X@@@@)2 [QWG^GOG[#^K0@@G@)@@GW8@@@A @@@@GG@KME.&;K@@@MP
)@@G@@/\@@^M0@@@@KH[@ME./K@@^M%[)ME'#Y@@@@)2J[QT@K1@K0K1K0@@0@@@@KH[@M^ /\@@^TMQ
)@@G@@$B0@]C[@\@@[[0Z@@@^[J@@@/K@@#R/K@@2L&;K@@[#Z@@@@)2T[QWGL#@@]&@@@@@A Z@@@MR
)@@G@@R9K[/W^[\@@@&;K@@[G@)@@GW8@@@A @@@@GG@KM^ &;K@@@/\@@^M^A@@@@)2<[QSK0K1K^MS
)@@G@@GK@@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#R/K@@2*/\@@^T$B0@]C[@\@@[[0Z@@@^B@@@@MT
)@@G@@)2![QSK0K1K0^GL#@@ @@@@GG@KM^ &;K@@@/\@@^M0@@@@KH[@M^ /K@@^M%[)ME'G[)@@[MU
)@@G@@&8K@@@^C@@@@)27[QS^[# #@K1^G@@G@KM^]&;K@@@/\@@^M0@@@@KH[@M^]/K@@#R/K@@2;MV
)@@G@@&;K@@[G@)@@GW8@@@A^D@@@@)3[[YS[@K1@@&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#RMW
)@@G@@/K@@3A&;K@@[G@)@@GW8@@@A @@@@G^E@@@@)3G@"T#[#^()-+)CS)-/B@C/S@@@@@]@@[/DMX
)@@G@@/K@@#R/K@@3M/,0@#+R9K]^C/K@@^M%[)M^ G[)@@[^F@@@@-/C[CJA@@JA@@/S@#1)@@@@@MY
)@@G@@]@@[/M@>)@@@]@@[/K@@@@@@]@@[/I@@@@@@@@A@@A[@@[/F@@@@@@^G@@@@-/L[S@@@@@@@MZ
)@@G@@                                                            @@/@@@^H@@@@NA
)@@G@@-/W[K/S@@/S@@#1)@@@[C@@@]@@[/&                  @@M@@@]@@[/-      @@A@@@NB
)@@G@@]@@[/Y^I@@@@-/&[S@@@@@@@                                                NC
)@@G@@                  ^J@@@@-/1[SJA@@@@@                                    ND
)@@G@@            @@/@@@]@@[/4      ^K@@@@-//[S#1)@@@@                        NE
)@@G@@                  @@/@@@]@@[.@            ^L@@@@-.B[S@/S@@@@            NF
)@@G@@                        @@/@@@]@@[.G                  ^M@@@@-.M[K@JA@@JANG
)@@G@@@@@@@@      @>+@@@]@@[.V      @@[@@[]@@[.S                        ^N@@@@NH
)@@G@@-.W[S@@@@@@@                                                            NI
)@@G@@      ^O@@@@-.$[S@@@@@@@                                                NJ
)@@G@@                  ^P@@@@-.2[S@@@@@@@                                    NK
)@@G@@                              ^Q@@@@-..[S@@@@@@@                        NL
)@@G@@                                          ^R@@@@-"C[S@@@@@@@            NM
)@@G@@                                                      ^S@@@@-"N[S@@@@@@@NN
)@@G@@                                                                  ^T@@@@NO
)@@G@@-"Y[S@@@@@@@                                                            NP
)@@G@@      ^U@@@@-"([S@@@@@@@                                                NQ
)@@G@@                  ^V@@@@-"4[S@@@@@@@                                    NR
)@@G@@                              ^W@@@@-"_[S@@@@@@@                        NS
)@@G@@                                          ^X@@@@-_E[S@@@@@@@            NT
)@@G@@                                                      ^Y@@@@-_P[S@@@@@@@NU
)@@G@@                                                                  ^Z@@@@NV
)@@G@@-_)[S@@@@@@@                                                            NW
)@@G@@       A@@@@-_:[S@@@@@@@                                                NX
)@@G@@                   B@@@@-_6[S@@@@@@@                                    NY
)@@G@@                               C@@@@+@[[S@@@@@@@                        NZ
)@@G@@                                           D@@@@+@G[S@@@@@@@            OA
)@@G@@                                                       E@@@@+@R[S@@@@@@@OB
)@@G@@                                                                   F@@@@OC
)@@G@@+@+[S@@@@@@@                                                            OD
)@@G@@       G@@@@+@![S@@@@@@@                                                OE
)@@G@@                   H@@@@+@8[S@@@@@@@                                    OF
)@@G@@                               I@@@@+[#[S@@@@@@@                        OG
)@@G@@                                           J@@@@+[I[S@@@@@@@            OH
)@@G@@                                                       K@@@@+[T[S@@@@@@@OI
)@@G@@                                                                   L@@@@OJ
)@@G@@+[=[S@@@@@@@                                                            OK
)@@G@@       M@@@@+[\[S@@@@@@@                                                OL
)@@G@@                   N@@@@+['[S@@@@@@@                                    OM
)@@G@@                               O@@@@+] [S@@@@@@@                        ON
)@@G@@                                           P@@@@+]K[S@@@@@@@            OO
)@@G@@                                                       Q@@@@+]V[S@@@@@@@OP
)@@G@@                                                                   R@@@@OQ
)@@G@@+]&[S@@@@@@@                                                            OR
)@@G@@       S@@@@+]1[S@@@@@@@                                                OS
)@@G@@                   T@@@@+]/[S@@@@@@@                                    OT
)@@G@@                               U@@@@+#B[S@@@@@@@                        OU
)@@G@@                                           V@@@@+#M[S@@@@@@@            OV
)@@G@@                                                       W@@@@+#X[S@@@@@@@OW
)@@G@@                                                                   X@@@@OX
)@@G@@+#*[K@JA@@/S@@@@@@=/*    !,+<>@@D@@D]@@]#0@@@@@@]@@]#,                  OY
)@@G@@       Y@@@@+#2[K/S@@/S@@/S@@@/*     ,+<>=@@C@@C]@@]#'OF    @@]@@]]@@]#7OZ
)@@G@@@@@@@@@@A@@A[@@]#4 Z@@@@+#/[C/S@@/S@@/S@@@@@@@@@@@@@@[@@A@@A[@@]^^)     PA
)@@G@@@@[@@[]@@]^[(     @@[@@[]@@]#"AA@@@@+^ [C/S@@/S@@/S@@@@@@@@@N     @@[@@[PB
)@@G@@]@@]^H@@@   @@#@@#]@@]^E@@@@@#@@A@@A[@@]^BAB@@@@+^I[C/S@@/S@@/S@@@@@@@@@PC
)@@G@@+@@   @@#@@#]@@]^QO     @@[@@[]@@]^N-@@   @@#@@#]@@]^KAC@@@@+^R[K/S@@/S@PD
)@@G@@@/S@@@            @&Y@@@]@@]^Z<@@   @@#@@#]@@]^WP     @@[@@[]@@]^TAD@@@@PE
)@@G@@+^-[S@@@@@@@                                                            PF
)@@G@@      AE@@@@+^?[S@@@@@@@                                                PG
)@@G@@                  AF@@@@+^7[S@@@@@@@                                    PH
)@@G@@                              AG@@@@+ ][S@@@@@@@                        PI
)@@G@@                                          AH@@@@+ H[S@@@@@@@            PJ
)@@G@@                                                      AI@@@@+ S[S@@@@@@@PK
)@@G@@                                                                  AJ@@@@PL
)@@G@@+ <[S@@@@@@@                                                            PM
)@@G@@      AK@@@@+ ,[S@@@@@@@                                                PN
)@@G@@                  AL@@@@+ 9[S@@@@@@@                                    PO
)@@G@@                              AM@@@@+A^[S@@@@@@@                        PP
)@@G@@                                          AN@@@@+AJ[S@@@@@@@            PQ
)@@G@@                                                      AO@@@@+AU[S@@@@@@@PR
)@@G@@                                                                  AP@@@@PS
)@@G@@+A>[S@@@@@@@                                                            PT
)@@G@@      AQ@@@@+A0[S@@@@@@@                                                PU
)@@G@@                  AR@@@@+A;[S@@@@@@@                                    PV
)@@G@@                              AS@@@@+BA[S@@@@@@@                        PW
)@@G@@                                          AT@@@@+BL[S@@@@@@@            PX
)@@G@@                                                      AU@@@@+BW[S@@@@@@@PY
)@@G@@                                                                  AV@@@@PZ
)@@G@@+B$[S@@@@@@@                                                            QA
)@@G@@      AW@@@@+B2[S@@@@@@@                                                QB
)@@G@@                  AX@@@@+B.[S@@@@@@@                                    QC
)@@G@@                              AY@@@@+CC[S@@@@@@@                        QD
)@@G@@                                          AZ@@@@+CN[S@@@@@@@            QE
)@@G@@                                                      BA@@@@+CY[S@@@@@@@QF
)@@G@@                                                                  BB@@@@QG
)@@G@@+C([S@@@@@@@                                                            QH
)@@G@@      BC@@@@+C4[S@@@@@@@                                                QI
)@@G@@                  BD@@@@+C_[S@@@@@@@                                    QJ
)@@G@@                              BE@@@@+DE[S@@@@@@@                        QK
)@@G@@                                          BF@@@@+DP[S@@@@@@@            QL
)@@G@@                                                      BG@@@@+D)[S@@@@@@@QM
)@@G@@                                                                  BH@@@@QN
)@@G@@+D:[S@@@@@@@                                                            QO
)@@G@@      BI@@@@+D6[S@@@@@@@                                                QP
)@@G@@                  BJ@@@@+E[[S@@@@@@@                                    QQ
)@@G@@                              BK@@@@+EG[S@@@@@@@                        QR
)@@G@@                                          BL@@@@+ER[S@@@@@@@            QS
)@@G@@                                                      BM@@@@+E+[S@@@@@@@QT
)@@G@@                                                                  BN@@@@QU
)@@G@@+E![S@@@@@@@                                                            QV
)@@G@@      BO@@@@+E8[K#1)@#1)@#1)@@@@G@@G]@@]F]@@@@@A@@A@@A[@@]E_@@@@@D@@A@@AQW
)@@G@@[@@]E/            BP@@@@+F]@0]) @@@@-K&@V#@K0@@@C )]F6R@W@@@R#@]FK@@[@@#QX
)@@G@@@@[[;-@@[@[]@@[[;'@@@@@@@@@@@@BQ@@@@-K([M^G@K0[#@@@@@@[ -@@[C )]F/R@W@@#QY
)@@G@@[ -@@[C )]F'R@W@@][ -@@[C )]F8R@W@@[[ -@@[BR@@@@-K3[MK0[#@^G@@@@@@R@W@@BQZ
)@@G@@[ -@@[C )]G]R@W@@A[ -@@[C )]G@R@W@@ [ -@@[C )]F"R@W@@^BS@@@@-K.[N#@^G@K0RA
)@@G@@[#@@@@C )]GER@W@@E[ -@@[C )]GCR@W@@D[ -@@[C )]GAR@W@@C[ -@@[C )]G^BT@@@@RB
)@@G@@-LB[M^G@K0^G[@@@@@/ )[LSH9)@@[C[)@[X[ -@@[C )]GIR@W@@G[ -@@[C )]GGR@W@@FRC
)@@G@@[ -@@[BU@@@@-LL[M!))]A@-)CS]A@R@K]!BN8K@@ [[)@[XC[\@@@[[)@[ZC[\@@[[@0@[YRD
)@@G@@G80@@]/K@[LS:80@]ABV@@@@-LV[F#@^G^G[#[#[#@@@@@@@R@)]F*R@K]F$N@K]F&M@-)@@RE
)@@G@@R@)]!ER@K]!DN8K@@TM@-)@@R@)]!CBW@@@@-L=[M@K^G^G^G[#@@@R@K]!DN8K@@TA@)]F*RF
)@@G@@A@K]F$^@K]F&/K@[L>O'0@@[/KF@@@*4F@@@OY;@@@BX@@@@-L,[N#@^G^G[#[#@@@R;F0@@RG
)@@G@@&'0@@[R@)]F*R@K]F$M@M)@@R@)]!CR@K]!BN8K@@ M@M)@@R@)]!EBY@@@@-L8[MK0[#@^GRH
)@@G@@@@@@@@9!?@@@R;F0@@9()]F99!?@@@R;F0@@9()]F79!?@@@R;F0@@9()]F59!?@@@BZ@@@@RI
)@@G@@-M][N#@^G@K0[#@@@@9()]G[9!?@@@R;F0@@9()]F_9!?@@@R;F0@@9()]F.9!?@@@R;F0@@RJ
)@@G@@9()]F;CA@@@@-MG[M^G@K0[#@@@@@@R;F0@@9()]GB9!?@@@R;F0@@9()]G 9!?@@@R;F0@@RK
)@@G@@9()]G#9!?@@@R;F0@@CB@@@@-MQ[MK0[#@^G^G^@@@/,)@BNC[)]FK9()]GH9!?@@@R;F0@@RL
)@@G@@9()]GF9!?@@@R;F0@@9()]GD9!?@@@CC@@@@-M)[F#@()O0K]&[N[@ES G@@R9)]GJR9K]GMRM
)@@G@@/,)@A,R9)]F7R9K]GM/,)@A,R9)]GJR9K]GM ^@]GNCD@@@@-M([F@K0ES G^[#[#@(&-)@@RN
)@@G@@C#@MF0R9K@3NC @]F8QB)]F7/,)@A,R9)]GMR9K]F7 ^@]F8/,)@A,CE@@@@-M2[E*C[N@()RO
)@@G@@)CSCSCSCS@@@9()]F?9!)@[V[[)MS"C )]GG/,0@^:R9)]F,R9K]F7/,0@ )R'K[N.CF@@@@RP
)@@G@@-M;[F#@*CSC[50A]@-)-)@@@:8@@@[9()@[V9!)]F?/@@[NL@[@]S"/K@@B!A]0@[ZR'0[M_RQ
)@@G@@A#0@[YCG@@@@-N^[F@^G^[#[#@()O0K@@@@@/,)@A,R9)]F3R9K]GM ^@]GN @@]F4/K@[NDRR
)@@G@@9()]F39!?@@@/K@[NCCH@@@@-NH[F#@()O0K^G]&[N[@ES@@R9K]GM/,)@A,R9)]GFR9K]GMRS
)@@G@@ ^@]GN/,)@A,R9)]GMR9K]GH ^@]GICI@@@@-NQ[E())CS G]&]@-)-)-)@@C[)MS"[[)MS"RT
)@@G@@C )]GG/,)@A,R9)]GMR9K]GF ^@]GG/,)@A,R9)]T[CJ@@@@-NZ[EK0K[#[#[#[@@@@@@@@@RU
)@@G@@ @@@@N/ 0[N*S[)MT^C[)MS"[[)MS" @@@@M/ )[N<W[)MT^;P)@@=CK@@@@-N*[F#[#[#[#RV
)@@G@@[#@(&-)O^@@@/,0@ )R'K[N1C#@MF0R9K@3.C @]GGQB)]GF[[)MTBC[)MS"[[0MS"CL@@@@RW
)@@G@@-N1[F#@()O0K]&[N[@K0ES@@R9K]F_ ^@]G@/,)@A,R9)]GFR9K]GM/,)@A,R9)]GHR9K]GMRX
)@@G@@ ^@]GNCM@@@@-N'[E())C]A]A[NH#@*C@@@@/,0@ )R'K[O%C#@MF0R9K@4OC @]F8QB)]F7RY
)@@G@@/K@[P]/,)@A,R9)]GMCN@@@@-O#[E()O0K^G^G^G^G^G])@@R'0[OIA#0@[Y9()]F?9!)@[VRZ
)@@G@@[[)MS"C )]GG/,0@^:R9)]F,R9K]F7CO@@@@-OG[F#[@I,@0K^G^G[@@@@@@9!?@@@/K@[ORSA
)@@G@@:8@@@[9()@[V9!)]F?/@@[O)@[@]S"/K@@B!A]0@[ZCP@@@@-OP[F#[@K0K0ES G^[#@()@@SB
)@@G@@R9K]GH ^@]GI/,)@A,R9)]F3R9K]GM ^@]GN @@]F4/K@[OS9()]F3CQ@@@@-OY[E())CSCSSC
)@@G@@ G4G])) G@@@R9K]GH/,0@ )R'K[NLC#@MF0R9K@46C @]GIQB)]GH/,)@A,R9)]GMCR@@@@SD
)@@G@@-O$[E())C]A]A]A[KK0K@@@@/K@[D@A]0@[ZR'0[O0A#0@[Y9()]F?9!)@[V/K@[NL/,0@^:SE
)@@G@@R9)]TOCS@@@@-O0[E'8#[@K0K0^@K0K@@@@@/K@[O'9()]F39!?@@@/K@[O9:8@@@[9()@[VSF
)@@G@@9!)]F?/@@[P]@[@]F7CT@@@@-O9[F#[#@()O0K^G]&[N[@@@/,)@A,R9)]GMR9K]F_ ^@]G@SG
)@@G@@/,)@A,R9)]F3R9K]GM ^@]GN @@]F4CU@@@@-P][F#[#@(&-)O^@()O0K@@@/,0@^:R9)]F,SH
)@@G@@R9K]F7/,0@ )R'K[PFC#@MF0R9K@5DC @]F8QB)]F7CV@@@@-PF[F#[#@(&-)O^@()O0K@@@SI
)@@G@@/,0@^:R9)]F,R9K]F7/,0@ )R'K[VHC#@MF0R9K@5TC @]F8QB)]F7CW@@@@-PO[F#[#@(&-SJ
)@@G@@)O^@()O0K@@@/,0@^:R9)]TUR9K]F9/,0@ )R'K[PYC#@MF0R9K@50C @]F'QB)]F9CX@@@@SK
)@@G@@-PX[F@K0K0ET*S [@ES G@@@R9)]T)R9K]F9/,0@ )R'K[P*C#@MF0R9K@54C @]F'QB)]F9SL
)@@G@@/K@[P;CY@@@@-P&[F@K^G^G]&UA[KK]&@@@@R9K]F9/,0@ )R'K[P2C#@MF0R9K@58C @]F'SM
)@@G@@QB)]F9/K@[P;/,0@^:CZ@@@@-P\[E())C]A]A[NH#@*C@@@@/,0@ )R'K[VHC#@MF0R9K@5/SN
)@@G@@C @]F'QB)]F9/K@[P;/,0@^:R9)]T&DA@@@@-P8[E()O0K^G]&[N[@ES G@@R9)]F7R9K]GMSO
)@@G@@/,)@A,R9)]GJR9K]GM ^@]GN/,0@^:R9)]T?R9K]F9DB@@@@-Q[[F@K0ES G^[#[#@(&-)@@SP
)@@G@@C#@MF0R9K@6@C @]F8QB)]F7/,)@A,R9)]GMR9K]F7 ^@]F8/,)@A,DC@@@@-QE[E*C[N@()SQ
)@@G@@)CSCSCSCS@@@9()]F?9!)@[V[[)MS"C )]GG/,0@^:R9)]F,R9K]F7/,0@ )R'K[RSDD@@@@SR
)@@G@@-QN[F#@*CSC[50A]@-)-)@@@:8@@@[9()@[V9!)]F?/@@[Q(@[@]S"/K@@B!A]0@[ZR'0[QRSS
)@@G@@A#0@[YDE@@@@-QW[F@^G^[#[#@()O0K@@@@@/,)@A,R9)]F3R9K]GM ^@]GN @@]F4/K@[Q-ST
)@@G@@9()]F39!?@@@/K@[Q)DF@@@@-Q>[F#@()O0K^G]&[N[@ES@@R9K]GM/,)@A,R9)]GFR9K]GMSU
)@@G@@ ^@]GN/,)@A,R9)]GMR9K]GH ^@]GIDG@@@@-Q,[E())CS G]&]@-)-)-)@@C[)MS"[[)MS"SV
)@@G@@C )]GG/,)@A,R9)]GMR9K]GF ^@]GG/,)@A,R9)]T[DH@@@@-Q7[EK0K[#[#[#[@@@@@@@@@SW
)@@G@@ @@@@N/ 0[R@S[)MT^C[)MS"[[)MS" @@@@M/ )[Q;W[)MT^;P)@@=DI@@@@-R@[F#[#[#[#SX
)@@G@@[#@(&-)O^@@@/,0@ )R'K[RDC#@MF0R9K@6%C @]GGQB)]GF[[)MT\C[)MS"[[0MS"DJ@@@@SY
)@@G@@-RD[F#@()O0K]&[N[@ES G@@R9)]GFR9K]GM/,)@A,R9)]GHR9K]GM/,)@A,R9)]F_R9K]GMSZ
)@@G@@ ^@]GNDK@@@@-RM[F@K0ES G^[@K0K0ET)@@R9K@7[C @]F8QB)]F7/K@[S=/,)@A,R9)]GMTA
)@@G@@R9K]F_ ^@]G@/,)@A,DL@@@@-RV[F#@*C[N@())CSCSCS@@@9!)@[V[[)MS"C )]GG/,0@^:TB
)@@G@@R9)]F,R9K]F7/,0@ )R'K[S C#@MF0DM@@@@-R=[F#[#@*CSC[50A]@-)-)@9()@[V9!)]F?TC
)@@G@@/@@[R;@[@]S"/K@@B!A]0@[ZR'0[R(A#0@[Y9()]F?DN@@@@-R![EK[#[@K0K0ES G@@@@@@TD
)@@G@@R9)]F3R9K]GM ^@]GN @@]F4/K@[R39()]F39!?@@@/K@[R2:8@@@[DO@@@@-R6[F@K0ES GTE
)@@G@@^[#[#@(&-)@@C#@MF0R9K@7<C @]GIQB)]GH/,)@A,R9)]GMR9K]GH ^@]GI/,)@A,DP@@@@TF
)@@G@@-R_[E*C[N@())C]A]A]A@@@@A#0@[Y9()]F?9!)@[V/K@[Q(/,0@^:R9)]TOR9K]GH/,0@ )TG
)@@G@@R'K[Q(DQ@@@@-SC[E*CSC[50A]@-)-)C@@@@/K@[SO:8@@@[9()@[V9!)]F?/@@[S=@[@]F7TH
)@@G@@/K@[D@A]0@[ZR'0[SFDR@@@@-SL[EK0K^G^G]&[N[@K0@@@@ ^@]T3/,)@A,R9)]F3R9K]GMTI
)@@G@@ ^@]GN @@]F4/K@[SP9()]F39!?@@@DS@@@@-SU[E()O0K]&[N[@K0ES G@@R9)]T2R9K]F_TJ
)@@G@@ ^@]G@/,)@A,R9)]GMR9K]T2/,)@A,R9)]F_R9K]T2DT@@@@-S<[F@K0ES G^@()O0K^G@@@TK
)@@G@@QB)]GM/,)@A,R9)]F7R9K]GM/,)@A,R9)]GJR9K]GM ^@]GN/,)@A,DU@@@@-S?[F#@(&-)OTL
)@@G@@^[#@()O0K@@@/,)@A,R9)]GFR9K]GM ^@]GN/,0@ )R'K[U C#@MF0R9K@76C @]GNDV@@@@TM
)@@G@@-S5[E()O0K^G]&[N[@K0K0@@C @]GGQB)]GF/,)@A,R9)]GMR9K]GF ^@]GG/,)@A,R9)]T[TN
)@@G@@R9K]GMDW@@@@-S"[E(&-)O^[#@()O0K]&@@@R9K]GM/,)@A,R9)]?*R9K]GM ^@]GN/,0@ )TO
)@@G@@R'K[T]C#@MF0R9K@8*DX@@@@-TB[E()) G]&]@O0ESC[N@@@R9K]GM/,)@A,R9)]F_R9K]GMTP
)@@G@@/,)@A,R9)]?:R9K]GM/,)@A,R9)]F9DY@@@@-TK[E()) G]&]@-)O0ESC@@@/,)@A,R9)]GMTQ
)@@G@@R9K]F_ ^@]G@/,)@A,R9)]GFR9K]GM/,)@A,R9)]?\DZ@@@@-TT[F#[#[#@K0K[#[#@@@@@@TR
)@@G@@9!)@[V[[)MS" @@@@M/ )[T)W[)MT^;P)@@=C[)MS"[[)MS"C )]G@EA@@@@-T+[F#[#@*CSTS
)@@G@@C[50A]@-)-)@9()@[V9!)]F?/@@[T;@[@]S"/K@@B!A]0@[ZR'0[T$A#0@[Y9()]F?EB@@@@TT
)@@G@@-T:[EK[#[@K0K0ES G@@@@@@R9)]F3R9K]GM ^@]GN @@]F4/K@[T19()]F39!?@@@/K@[T0TU
)@@G@@:8@@@[EC@@@@-T4[F@K0K0ET*S [@K0K0@@@C @]G@QB)]F_/,0@ )R'K[T;C#@MF0R9K@8_TV
)@@G@@C @]GNQB)]GM/,)@A,ED@@@@-T.[E(&-)O^@()O0K^[#@@@@ ^@]GN/K@[VE/,0@^:R9)]GDTW
)@@G@@R9K]F_/,0@ )R'K[VEC#@MF0R9K@9ZEE@@@@-UA[E()O0K]&[N[@K0K0ET)@R9K@9%C @]GNTX
)@@G@@QB)]GM/,)@A,R9)]F7R9K]GM/,)@A,R9)]GJR9K]GMEF@@@@-UJ[F#@*C]A[N@()) G]&@@@TY
)@@G@@R9)]F9R9K]GM/,)@A,R9)]?*R9K]GM ^@]GN/,0@ )R'K[U$C#@MF0EG@@@@-US[F@ES G^@TZ
)@@G@@()O0K]&[N@@@R9)]?/R9K]GM/,)@A,R9)]F_R9K]GM/,)@A,R9)]?:R9K]GM/,)@A,EH@@@@UA
)@@G@@-U-[F@K0ES G^[@K0ES G@@@R9)]GJR9K]GM ^@]GN/K@[TT/,)@A,R9)]GMR9K]F_ ^@]G@UB
)@@G@@/,)@A,EI@@@@-U%[F@ES G^[#[#@(&-)O@@@R'K[VHC#@MF0R9K@'^C @]GNQB)]GM/,)@A,UC
)@@G@@R9)]F7R9K]GM/,)@A,EJ@@@@-U3[F@K0ES G^@()O0K]&@@@R9K]GM/,)@A,R9)]F9R9K]GMUD
)@@G@@/,)@A,R9)]?*R9K]GM ^@]GN/,0@ )EK@@@@-U/[E()) G]&]@O0ESC]A@@@ ^@]G@/,)@A,UE
)@@G@@R9)]!#R9K]GM/,)@A,R9)]F_R9K]GM/,)@A,R9)]?:EL@@@@-V [E()O0K^[]@K0K@@@@@@@UF
)@@G@@C9)@@@/K@[K&[[)]FLC9)@@['=@@@@/K@[TT/,)@A,R9)]GMR9K]F_EM@@@@-VI@N#[@@@@@UG
)@@G@@)3N@"S@^G@@@%[)MS8G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@[K&[[)]FLEN@@@@UH
)@@G@@)3U[IWGOGM&]ACO1K1ESCS)@/,0@#+R9K]S;/,0@#0R'K@^M @@@@M/,0@^#R9K]GJ/[@@^MUI
)@@G@@/K@@^MEO@@@@)3<[QS^G^GOGM&]AC@-]K@@MD9)@@@/,0@^#R9K]S;/[@@^M/\@@^T$B0@]CUJ
)@@G@@[@\@@[[0Z@@@^[J@@@EP@@@@)3![QS]&EACO0@@@@@[@\@@[[0Z@@@A Z@@@R9K]GF^[\@@@UK
)@@G@@/,0@#0R'K@^MC9)@@[9,@@@P-]@@@MEQ@@@@)37[IWG^GM&]AE@-+@@@@@@@[@\@@[[0Z@@@UL
)@@G@@^[J@@@/K@@#R/K@@3//,0@#+R9K]S;/\@@^T$B0@]CER@@@@)4@[QWG^GOG[#^K0@@G@)@@GUM
)@@G@@W8@@@A @@@@GG@KMTB&;K@@@/\@@^M0@@@@KH[@MTB/\@@^T$B0@]CES@@@@)4E[QSES@CSCUN
)@@G@@S*]AC@/K@@#R/K@@4N/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K]GF^[\@@@&;K@@[ET@@@@UO
)@@G@@)4O[QS@^G^GOGM&@@@R9K]GJ/[@@^M/K@@^M%[)MS8G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]UP
)@@G@@C[)@@IEU@@@@)4Y[IWGK(+-+@-)-+@@@@@@@/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/,0@#0UQ
)@@G@@R'K@^M @@@@M/,0@^#EV@@@@)4$[IWGM&]ACO1K1]&@@@@@@A Z@@@R9K]GF^[\@@@/,0@#0UR
)@@G@@R'K@^M @@@@M/,0@^#R9K]TE/[@@^MEW@@@@)40[QSK0K1K^GK@@@@R@K@@HT9)@@AH[)@[]US
)@@G@@C[)@@I/K@@#R/K@@45/\@@^T$B0@]C[@\@@[[0Z@@@EX@@@@)4'[QSK0K1K0^GL#@@ @@@@GUT
)@@G@@G@KMTL&;K@@@/\@@^M0@@@@KH[@MTL/K@@^M%[)MTIG[)@@[&8K@@@EY@@@@)5^[YS^[#^@@UU
)@@G@@G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#R/K@@5C&;K@@[G@)@@GW8@@@AEZ@@@@UV
)@@G@@)5J[IWG^GOGM&]ACO1K1K@@@/K@@5S/,0@#0R'K@^M @@@@M/,0@^#R9K]GJ/[@@^M/K@@^MUW
)@@G@@%[)MS8FA@@@@)5S[QWGK^G^GOG[#^@&;K@@@/\@@^M0@@@@KH[@MTL/\@@^T$B0@]C[@\@@[UX
)@@G@@[0Z@@@^[J@@@/K@@#RFB@@@@)5+[QWG@@ES@@@@@@@[@\@@[[0Z@@@A Z@@@R9K]F9^[\@@@UY
)@@G@@&;K@@[G@)@@GW8@@@A @@@@GG@KMTLFC@@@@)5?[IWG^GO[#^()-+)CS>G@@R9K]TX/K@@#RUZ
)@@G@@/K@@53/,0@#+R9K]TR/K@@#R/K@@5\/\@@^T$B0@]CFD@@@@)55[IWGO[#^()-+)CS>G^GK@VA
)@@G@@/,0@#+R9K]T(/K@@#R/K@@5;/,0@#+R9K]T</K@@#R/K@@57/,0@#+FE@@@@)5"[QW[#^@[#VB
)@@G@@[#^@@@/K@@^M%[)MS8G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#R/K@@5_FF@@@@VC
)@@G@@)6C[IWGM&]ACO1K1ESCS)@@@^[J@@@/,0@#+R9K]S;/,0@#0R'K@^M @@@@M/,0@^#R9K]GJVD
)@@G@@/[@@^MFG@@@@)6L[QSK0K1K1ESCS)@-]@@@M-]K@@MD9)@@@/,0@^#R9K]S;/[@@^M/\@@^TVE
)@@G@@$B0@]C[@\@@[[0Z@@@FH@@@@)6V[QSES*S-N@[#@@@$B0@]C[@\@@[[0Z@@@A Z@@@R9K]GFVF
)@@G@@^[\@@@/,0@#0R'K@^MC9)@@[9,@@@PFI@@@@)6>[IWGM&]AE@-+@-)@@@@@@$B0@]C[@\@@[VG
)@@G@@[0Z@@@^[J@@@/K@@#R/K@@6(/,0@#+R9K]S;/\@@^TFJ@@@@)6,[QWGOG[#^K0@@@@&;K@@[VH
)@@G@@G@)@@GW8@@@A @@@@GG@KMT\&;K@@@/\@@^M0@@@@KH[@MT\/\@@^TFK@@@@)68[QS()@-)-VI
)@@G@@+)CS)@C[)@@I/K@@#R/K@@7@/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K]GF^[\@@@FL@@@@VJ
)@@G@@)7][QS@K0K1K1ESCS)/,0@^#R9K]GJ/[@@^M/K@@^M%[)MS8G[)@@[&8K@@@R@K@@HT9)@@AVK
)@@G@@H[)@[]FM@@@@)7G[IS(+-+@-)-+-+@@@@@@@/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@VL
)@@G@@/,0@#0R'K@^M @@@@MFN@@@@)7P[QU&]ACO1K1]&@@[@\@@[[0Z@@@A Z@@@R9K]GF^[\@@@VM
)@@G@@/,0@#0R'K@^M @@@@M/,0@^#R9K]TEFO@@@@)7Z[QWG^GO[#^@@@@@G[)@@[&8K@@@R@K@@HVN
)@@G@@T9)@@AH[)@[]C[)@@I/K@@#R/K@@7+/\@@^T$B0@]CFP@@@@)7([QWG^GOG[#^K0@@G@)@@GVO
)@@G@@W8@@@A @@@@GG@KMTL&;K@@@/\@@^M0@@@@KH[@MTL/K@@^M%[)MTIFQ@@@@)73[QT@K1@@KVP
)@@G@@0@@@@@%[)MS8G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#R/K@@75&;K@@[FR@@@@VQ
)@@G@@)7.[IWGOGM&]ACO1K1ESCS)@/,0@#+R9K]?>/,0@#0R'K@^M @@@@M/,0@^#R9K]GJ/[@@^MVR
)@@G@@/K@@^MFS@@@@)8A[IWGM&]ACO1K1@@@@@@@@[@\@@[[0Z@@@^[J@@@/,0@#0R'K@^M @@@@MVS
)@@G@@/,0@^#R9K]GJ/[@@^MFT@@@@)8J[IWG^GOGM&]ACO1K1@@@@^[\@@@/,0@#0R'K@^M @@@@MVT
)@@G@@/,0@^#R9K]TE/[@@^M/\@@^T$B0@]CFU@@@@)8S[IU&@]A]AEADN[#^@@@@@/,0@^#R9K]GJVU
)@@G@@/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K]GFFV@@@@)8-[IS(+-+-)-+)CS)@@@@@@VV
)@@G@@[0Z@@@^[J@@@/K@@#R/K@@8$/K@@^M%[@MS8/,0@#0R'K@^M @@@@MFW@@@@)8%[QT#[# #@VW
)@@G@@K1^G@@W8@@@A @@@@GG@KMT^&;K@@@/\@@^M0@@@@KH[@MT^/\@@^T$B0@]C[@\@@[FX@@@@VX
)@@G@@)84[QS]&@]A]AE@@@@/K@@8"/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K]GF^[\@@@&;K@@[VY
)@@G@@G@)@@GFY@@@@)8"[QWGOG[#^K0@@@@&;K@@[G@)@@GW8@@@A @@@@GG@KM?3&;K@@@/\@@^MVZ
)@@G@@0@@@@KH[@M?3/K@@#RFZ@@@@)9C[QS^G^GOG[#^K0@G@KM?6&;K@@@/\@@^M0@@@@KH[@M?6WA
)@@G@@/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@GA@@@@)9M[QS@ES@CS@@@@@@$B0@]C[@\@@[[0Z@@@WB
)@@G@@A Z@@@R9K]GD^[\@@@&;K@@[G@)@@GW8@@@A @@@@GGB@@@@)9W[IWGO[# #@K1^G@@@@@@@WC
)@@G@@ @@@@GG@KM?6&;K@@@/\@@^M0@@@@KH[@M?6/K@@#R/K@@9Y/\@@^TGC@@@@)9>[YS^[#^@@WD
)@@G@@G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#R/K@@9(&;K@@[G@)@@GW8@@@AGD@@@@WE
)@@G@@)90[IWG^GOGM&]ACO1K1ES@@R9K]?9/,0@#0R'K@^M @@@@M/,0@^#R9K]GJ/[@@^M/K@@^MWF
)@@G@@%[)MS8GE@@@@)99[IWGOGM&]ACO1K1K0K1@@/K@@^M%[@MS8/,0@#0R'K@^M @@@@M/,0@^#WG
)@@G@@R9K]GJ/[@@^M/,0@#+GF@@@@)'][QW[#^@[#[#^@@@/K@@^M%[)MS8G[)@@[&8K@@@R@K@@HWH
)@@G@@T9)@@AH[)@[]C[)@@I/K@@#R/K@@'#GG@@@@)'G[IWGM&]ACO1K1ESCS*S)@/[@@^M/,0@#+WI
)@@G@@R9K]!@/,0@#0R'K@^M @@@@M/,0@^#R9K]GJ/[@@^MGH@@@@)'P[IU&]ACO1K1K0K1K^GK@@WJ
)@@G@@/K@@#R/K@@'X/K@@^M%[@MS8/,0@#0R'K@^M @@@@M/,0@^#R9K]GJGI@@@@+F,[C/S@#1)@WK
)@@G@@#1)@JA@@@@@@@@Z@@@]@@]F7@@@@@@]@@]F5@@@@@@@@A@@A[@@]F2@@@@@@]@@]F0GJ@@@@WL
)@@G@@+F7[C/S@#1)@JA@@/S@#1)@@]@@]G[@@G@@@]@@]F_@@G@@@]@@]F.@@[@@@]@@]F;@>)@@@WM
)@@G@@]@@]F9GK@@@@+G@[CJA@@/S@#1)@JA@@@@@@@@G@@@]@@]GD@@[@@@]@@]GB@@A@@@]@@]G WN
)@@G@@@@A@@@]@@]G#@>)@@@GL@@@@+GD[C/S@#1)@JA@@/S@@@@@@      @@[@@[]@@]GL@@A@@@WO
)@@G@@]@@]GJ@>)@@@]@@]GH@@]@@@]@@]GFGM@@@@+GM[S/S@@@@@                        WP
)@@G@@                              [FS@@@]@@]GOGN@@@@+GX[S@@@@@@@            WQ
)@@G@@                                                      GO@@@@+G*[S@@@@@@@WR
)@@G@@                                                                  GP@@@@WS
)@@G@@+G3[S@@@@@@@                                                            WT
)@@G@@      GQ@@@@+G"[S@@@@@@@                                                WU
)@@G@@                  GR@@@@+HD[S@@@@@@@                                    WV
)@@G@@                              GS@@@@+HO[S@@@@@@@                        WW
)@@G@@                                          GT@@@@+HZ[S@@@@@@@            WX
)@@G@@                                                      GU@@@@+H%[S@@@@@@@WY
)@@G@@                                                                  GV@@@@WZ
)@@G@@+H5[S@@@@@@@                                                            XA
)@@G@@      GW@@@@+I@[S@@@@@@@                                                XB
)@@G@@                  GX@@@@+IF[S@@@@@@@                                    XC
)@@G@@                              GY@@@@+IQ[S@@@@@@@                        XD
)@@G@@                                          GZ@@@@+I-[S@@@@@@@            XE
)@@G@@                                                      HA@@@@+I?[S@@@@@@@XF
)@@G@@                                                                  HB@@@@XG
)@@G@@+I7[S@@@@@@@                                                            XH
)@@G@@      HC@@@@+J][S@@@@@@@                                                XI
)@@G@@                  HD@@@@+JH[S@@@@@@@                                    XJ
)@@G@@                              HE@@@@+JS[S@@@@@@@                        XK
)@@G@@                                          HF@@@@+J<[S@@@@@@@            XL
)@@G@@                                                      HG@@@@+J,[S@@@@@@@XM
)@@G@@                                                                  HH@@@@XN
)@@G@@+J9[S@@@@@@@                                                            XO
)@@G@@      HI@@@@+K^[S@@@@@@@                                                XP
)@@G@@                  HJ@@@@+KJ[S@@@@@@@                                    XQ
)@@G@@                              HK@@@@+KU[S@@@@@@@                        XR
)@@G@@                                          HL@@@@+K>[S@@@@@@@            XS
)@@G@@                                                      HM@@@@+K0[S@@@@@@@XT
)@@G@@                                                                  HN@@@@XU
)@@G@@+K;[S@@@@@@@                                                            XV
)@@G@@      HO@@@@+LA[S@@@@@@@                                                XW
)@@G@@                  HP@@@@+LL[S@@@@@@@                                    XX
)@@G@@                              HQ@@@@+LW[S@@@@@@@                        XY
)@@G@@                                          HR@@@@+L$[S@@@@@@@            XZ
)@@G@@                                                      HS@@@@+L2[S@@@@@@@YA
)@@G@@                                                                  HT@@@@YB
)@@G@@+L.[S@@@@@@@                                                            YC
)@@G@@      HU@@@@+MC[S@@@@@@@                                                YD
)@@G@@                  HV@@@@+MN[S@@@@@@@                                    YE
)@@G@@                              HW@@@@+MY[S@@@@@@@                        YF
)@@G@@                                          HX@@@@+M([S@@@@@@@            YG
)@@G@@                                                      HY@@@@+M4[S@@@@@@@YH
)@@G@@                                                                  HZ@@@@YI
)@@G@@+M_[S@@@@@@@                                                            YJ
)@@G@@      IA@@@@+NE[S@@@@@@@                                                YK
)@@G@@                  IB@@@@+NP[S@@@@@@@                                    YL
)@@G@@                              IC@@@@+N)[S@@@@@@@                        YM
)@@G@@                                          ID@@@@+N:[S@@@@@@@            YN
)@@G@@                                                      IE@@@@+N6[S@@@@@@@YO
)@@G@@                                                                  IF@@@@YP
)@@G@@+O[[S@@@@@@@                                                            YQ
)@@G@@      IG@@@@+OG[S@@@@@@@                                                YR
)@@G@@                  IH@@@@+OR[S@@@@@@@                                    YS
)@@G@@                              II@@@@+O+[S@@@@@@@                        YT
)@@G@@                                          IJ@@@@+O![S@@@@@@@            YU
)@@G@@                                                      IK@@@@+O8[S@@@@@@@YV
)@@G@@                                                                  IL@@@@YW
)@@G@@+P#[S@@@@@@@                                                            YX
)@@G@@      IM@@@@+PI[S@@@@@@@                                                YY
)@@G@@                  IN@@@@+PT[S@@@@@@@                                    YZ
)@@G@@                              IO@@@@+P=[S@@@@@@@                        ZA
)@@G@@                                          IP@@@@+P\[S@@@@@@@            ZB
)@@G@@                                                      IQ@@@@+P'[S@@@@@@@ZC
)@@G@@                                                                  IR@@@@ZD
)@@G@@+Q [S@@@@@@@                                                            ZE
)@@G@@      IS@@@@+QK[S@@@@@@@                                                ZF
)@@G@@                  IT@@@@+QV[S@@@@@@@                                    ZG
)@@G@@                              IU@@@@+Q&[S@@@@@@@                        ZH
)@@G@@                                          IV@@@@+Q1[S@@@@@@@            ZI
)@@G@@                                                      IW@@@@+Q/[S@@@@@@@ZJ
)@@G@@                                                                  IX@@@@ZK
)@@G@@+RB[S@@@@@@@                                                            ZL
)@@G@@      IY@@@@+RM[S@@@@@@@                                                ZM
)@@G@@                  IZ@@@@+RX[S@@@@@@@                                    ZN
)@@G@@                              JA@@@@+R*[S@@@@@@@                        ZO
)@@G@@                                          JB@@@@+R3[S@@@@@@@            ZP
)@@G@@                                                      JC@@@@+R"[S@@@@@@@ZQ
)@@G@@                                                                  JD@@@@ZR
)@@G@@+SD[S@@@@@@@                                                            ZS
)@@G@@      JE@@@@+SO[S@@@@@@@                                                ZT
)@@G@@                  JF@@@@+SZ[S@@@@@@@                                    ZU
)@@G@@                              JG@@@@+S%[S@@@@@@@                        ZV
)@@G@@                                          JH@@@@+S5[K@/S@@/S@@/S@@[@@]T@ZW
)@@G@@'     @@[@@[]@@]S.@@@@@@@@A@@A[@@]S'                  JI@@@@+S_[K#1)@#1)ZX
)@@G@@@#1)@@@@A@@A[@@]TD@@@@@A@@A@@A[@@]TA      @@ @@ ]@@]T#@@@@@@@@A@@AJJ@@@@ZY
)@@G@@+TD[KJA@@#1)@#1)@@@@A@@A[@@]TN@@@@@#@@A@@A[@@]TK6789  012345@@E@@E]@@]TGZZ
)@@G@@@@@@@@JK@@@@+TN[KJA@@JA@@JA@@@[     @@[@@[]@@]TW=     @@[@@[]@@]TT)     AA
)@@G@@@@[@@[]@@]TQ@@@@@[JL@@@@+TX[C/S@@/S@@/S@@@@@@@@@!     @@[@@[]@@]T>]     AB
)@@G@@@@[@@[]@@]T+>     @@[@@[]@@]TZJM@@@@+T&[C/S@@/S@@/S@@@@@@@@@#     @@[@@[AC
)@@G@@]@@]T,<     @@[@@[]@@]T:^     @@[@@[]@@]T*JN@@@@+T\[K/S@@/S@@@@@@@      AD
)@@G@@                        [0&@@@]@@]T4@@@@@@@@A@@A[@@]T1JO@@@@+T9[S@@@@@@@AE
)@@G@@                                                                  JP@@@@AF
)@@G@@+U^[S@@@@@@@                                                            AG
)@@G@@      JQ@@@@+UJ[S@@@@@@@                                                AH
)@@G@@                  JR@@@@+UU[S@@@@@@@                                    AI
)@@G@@                              JS@@@@+U>[S@@@@@@@                        AJ
)@@G@@                                          JT@@@@+U0[S@@@@@@@            AK
)@@G@@                                                      JU@@@@+U;[S@@@@@@@AL
)@@G@@                                                                  JV@@@@AM
)@@G@@+VA[S@@@@@@@                                                            AN
)@@G@@      JW@@@@+VL[S@@@@@@@                                                AO
)@@G@@                  JX@@@@+VW[S@@@@@@@                                    AP
)@@G@@                              JY@@@@+V$[S@@@@@@@                        AQ
)@@G@@                                          JZ@@@@+V2[S@@@@@@@            AR
)@@G@@                                                      KA@@@@+V.[S@@@@@@@AS
)@@G@@                                                                  KB@@@@AT
)@@G@@+WC[S@@@@@@@                                                            AU
)@@G@@      KC@@@@+WN[S@@@@@@@                                                AV
)@@G@@                  KD@@@@+WY[S@@@@@@@                                    AW
)@@G@@                              KE@@@@+W([S@@@@@@@                        AX
)@@G@@                                          KF@@@@+W4[S@@@@@@@            AY
)@@G@@                                                      KG@@@@+W_[S@@@@@@@AZ
)@@G@@                                                                  KH@@@@BA
)@@G@@+XE[S@@@@@@@                                                            BB
)@@G@@      KI@@@@+XP[S@@@@@@@                                                BC
)@@G@@                  KJ@@@@+X)[S@@@@@@@                                    BD
)@@G@@                              KK@@@@+X:[S@@@@@@@                        BE
)@@G@@                                          KL@@@@+X6[S@@@@@@@            BF
)@@G@@                                                      KM@@@@+Y[[S@@@@@@@BG
)@@G@@                                                                  KN@@@@BH
)@@G@@+YG[S@@@@@@@                                                            BI
)@@G@@      KO@@@@+YR[S@@@@@@@                                                BJ
)@@G@@                  KP@@@@+Y+[S@@@@@@@                                    BK
)@@G@@                              KQ@@@@+Y![S@@@@@@@                        BL
)@@G@@                                          KR@@@@+Y8[S@@@@@@@            BM
)@@G@@                                                      KS@@@@+Z#[S@@@@@@@BN
)@@G@@                                                                  KT@@@@BO
)@@G@@+ZI[S@@@@@@@                                                            BP
)@@G@@      KU@@@@+ZT[S@@@@@@@                                                BQ
)@@G@@                  KV@@@@+Z=[S@@@@@@@                                    BR
)@@G@@                              KW@@@@+Z\[S@@@@@@@                        BS
)@@G@@                                          KX@@@@+Z'[S@@@@@@@            BT
)@@G@@                                                      KY@@@@+) [S@@@@@@@BU
)@@G@@                                                                  KZ@@@@BV
)@@G@@+)K[S@@@@@@@                                                            BW
)@@G@@      LA@@@@+)V[S@@@@@@@                                                BX
)@@G@@                  LB@@@@+)&[S@@@@@@@                                    BY
)@@G@@                              LC@@@@+)1[S@@@@@@@                        BZ
)@@G@@                                          LD@@@@+)/[S@@@@@@@            CA
)@@G@@                                                      LE@@@@+-B[S@@@@@@@CB
)@@G@@                                                                  LF@@@@CC
)@@G@@+-M[S@@@@@@@                                                            CD
)@@G@@      LG@@@@+-X[S@@@@@@@                                                CE
)@@G@@                  LH@@@@+-*[S@@@@@@@                                    CF
)@@G@@                              LI@@@@+-3[S@@@@@@@                        CG
)@@G@@                                          LJ@@@@+-"[S@@@@@@@            CH
)@@G@@                                                      LK@@@@++D[S@@@@@@@CI
)@@G@@                                                                  LL@@@@CJ
)@@G@@++O[S@@@@@@@                                                            CK
)@@G@@      LM@@@@++Z[S@@@@@@@                                                CL
)@@G@@                  LN@@@@++%[S@@@@@@@                                    CM
)@@G@@                              LO@@@@++5[S@@@@@@@                        CN
)@@G@@                                          LP@@@@+<@[S@@@@@@@            CO
)@@G@@                                                      LQ@@@@+<F[S@@@@@@@CP
)@@G@@                                                                  LR@@@@CQ
)@@G@@+<Q[S@@@@@@@                                                            CR
)@@G@@      LS@@@@+<-[S@@@@@@@                                                CS
)@@G@@                  LT@@@@+<?[S@@@@@@@                                    CT
)@@G@@                              LU@@@@+<7[S@@@@@@@                        CU
)@@G@@                                          LV@@@@+=][S@@@@@@@            CV
)@@G@@                                                      LW@@@@+=H[S@@@@@@@CW
)@@G@@                                                                  LX@@@@CX
)@@G@@+=S[S@@@@@@@                                                            CY
)@@G@@      LY@@@@+=<[S@@@@@@@                                                CZ
)@@G@@                  LZ@@@@+=,[S@@@@@@@                                    DA
)@@G@@                              MA@@@@+=9[S@@@@@@@                        DB
)@@G@@                                          MB@@@@+>^[S@@@@@@@            DC
)@@G@@                                                      MC@@@@+>J[S@@@@@@@DD
)@@G@@                                                                  MD@@@@DE
)@@G@@+>U[S@@@@@@@                                                            DF
)@@G@@      ME@@@@+>>[S@@@@@@@                                                DG
)@@G@@                  MF@@@@+>0[S@@@@@@@                                    DH
)@@G@@                              MG@@@@+>;[S@@@@@@@                        DI
)@@G@@                                          MH@@@@+&A[S@@@@@@@            DJ
)@@G@@                                                      MI@@@@+&L[S@@@@@@@DK
)@@G@@                                                                  MJ@@@@DL
)@@G@@+&W[S@@@@@@@                                                            DM
)@@G@@      MK@@@@+&$[S@@@@@@@                                                DN
)@@G@@                  ML@@@@+&2[S@@@@@@@                                    DO
)@@G@@                              MM@@@@+&.[S@@@@@@@                        DP
)@@G@@                                          MN@@@@+$C[S@@@@@@@            DQ
)@@G@@                                                      MO@@@@+$N[S@@@@@@@DR
)@@G@@                                                                  MP@@@@DS
)@@G@@+$Y[S@@@@@@@                                                            DT
)@@G@@      MQ@@@@+$([S@@@@@@@                                                DU
)@@G@@                  MR@@@@+$4[S@@@@@@@                                    DV
)@@G@@                              MS@@@@+$_[S@@@@@@@                        DW
)@@G@@                                          MT@@@@+*E[S@@@@@@@            DX
)@@G@@                                                      MU@@@@+*P[S@@@@@@@DY
)@@G@@                                                                  MV@@@@DZ
)@@G@@+*)[S@@@@@@@                                                            EA
)@@G@@      MW@@@@+*:[S@@@@@@@                                                EB
)@@G@@                  MX@@@@+*6[S@@@@@@@                                    EC
)@@G@@                              MY@@@@+([[S@@@@@@@                        ED
)@@G@@                                          MZ@@@@+(G[S@@@@@@@            EE
)@@G@@                                                      NA@@@@+(R[S@@@@@@@EF
)@@G@@                                                                  NB@@@@EG
)@@G@@+(+[S@@@@@@@                                                            EH
)@@G@@      NC@@@@+(![S@@@@@@@                                                EI
)@@G@@                  ND@@@@+(8[S@@@@@@@                                    EJ
)@@G@@                              NE@@@@+%#[S@@@@@@@                        EK
)@@G@@                                          NF@@@@+%I[S@@@@@@@            EL
)@@G@@                                                      NG@@@@+%T[S@@@@@@@EM
)@@G@@                                                                  NH@@@@EN
)@@G@@+%=[S@@@@@@@                                                            EO
)@@G@@      NI@@@@+%\[S@@@@@@@                                                EP
)@@G@@                  NJ@@@@+%'[S@@@@@@@                                    EQ
)@@G@@                              NK@@@@+: [S@@@@@@@                        ER
)@@G@@                                          NL@@@@+:K[S@@@@@@@            ES
)@@G@@                                                      NM@@@@+:V[S@@@@@@@ET
)@@G@@                                                                  NN@@@@EU
)@@G@@+:&[S@@@@@@@                                                            EV
)@@G@@      NO@@@@+:1[S@@@@@@@                                                EW
)@@G@@                  NP@@@@+:/[S@@@@@@@                                    EX
)@@G@@                              NQ@@@@+?B[S@@@@@@@                        EY
)@@G@@                                          NR@@@@+?M[S@@@@@@@            EZ
)@@G@@                                                      NS@@@@+?X[S@@#1)@@FA
)@@G@@GOTO  @@^@@^]@@]?$                                                NT@@@@FB
)@@G@@+?*[K/S@@/S@@JA@@@@#]@@@@@G@@G]@@]?1@@@   @@@C@@@@D@@D]@@]?!@@    @@]@@]FC
)@@G@@]@@]?%NU@@@@+?2[KJA@@JA@@JA@@@RETURN@@A@@A]@@]?;@@@@@]@@A@@A[@@]?8@@@@@^FD
)@@G@@@@A@@A[@@]?5B@@@@@NV@@@@+?/[K/S@@JA@@JA@@@@][@@@@@G@@G]@@]! ABORT @@ @@ FE
)@@G@@]@@]!]D@@@@@@]@@@@@@G@@G]@@]?"NW@@@@+!A@*E@O@@@@-VK@<#[#@K0@C )]!9P8K@@[FF
)@@G@@R^K]!8R#@]!N@@[@@#@@[]FC@@[@[]@@[]F-D@@@@@NX@@@@-VO[MK0^@!))]A@-)@[[)@[ZFG
)@@G@@C[\@@[[@0@[YG80@@]/K@[VZ:80@]A/ )[VZH9)@@[C[)@[X[[-@@@NY@@@@-VY[MK0^G^G@FH
)@@G@@K0K0@@M@-)@@R@)]4*R@K]4$N8K@@TM@-)@@R@)]4&R@K]4>N8K@@ [[)@[XC[\@@@NZ@@@@FI
)@@G@@-V*[N#[#[#@@K^G^G@A@K]!%^@K]!(/K@[V?O'0@@[/KF@@@*4F@@@OY;@@@R@)]!:R@K]!%FJ
)@@G@@N@K]!(OA@@@@-V2[F#@K0K0[#[#@@@@@@@@@M@M)@@R@)]4&R@K]4>N8K@@ M@M)@@R@)]4*FK
)@@G@@R@K]4$N8K@@TA@)]!:OB@@@@-V;[F#[#@[#[#[#@@@@@@@@@O;@@@[[ )]!9CD)]!9!D)]!9FL
)@@G@@C ?@@@R;F0@@&'0@@[R@)]!:R@K]!%OC@@@@-W^[F#@K0K0K0K0K^G^G@@@@[[)M!'C[)M!_FM
)@@G@@/,)@BNC[)]!N[ )]!;CD)]!;AB@]!'R;F0@@AB@]!8OD@@@@-WH[F#@()O0K^G^G]&UA[K@@FN
)@@G@@R'K[WUC#@M!3R9K@'YC @]!9QB)]!8/,)@A,R9)],]R9K]!/ ^@]!.OE@@@@-WQ[F@ES G^[FO
)@@G@@#@()O0K]&@@@R9K],F/,)@A,R9)]!8R9K],F ^@],G/,0@^:R9)]!1R9K]!8/,0@ )OF@@@@FP
)@@G@@-WZ[E())CS G]&]@-)-)O3@@R9K@',C @]!9QB)]!8/,)@A,R9)],FR9K]!8 ^@]!9/,)@A,FQ
)@@G@@R9)],COG@@@@-W*[F#@*C]@-)-)O3K0E@@@@R'K[W5C#@M!3R9K@;AC @]!9QB)]!8/K@[W'FR
)@@G@@/,0@ )R'K[W?C#@M!3OH@@@@-W1[F@ES G^@()O0K^G^G@@@[[)M!'C[)M4+/,0@]8R9)]!/FS
)@@G@@R9K]4+/,0@^:R9)]!1R9K]!8/,0@ )OI@@@@-W'[F#[#@(&-)O^@()O0K@@@/,0@^:R9)]!1FT
)@@G@@R9K]!8/,0@ )R'K[X C#@M!3R9K@;*C @]!9QB)]!8OJ@@@@-X#[#@K)^G^@K0K@@@)'Y@ISFU
)@@G@@C[)@@I/K@[VK[[)]!OC9)@@@/K@[VK[[)]!OC9)@@['=@@@@/K@[X OK@@@@)'Z[QS@K0K1KFV
)@@G@@1ESCS)/,0@^#R9K], /[@@^M/K@@^M%[)M!_G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]OL@@@@FW
)@@G@@)'([QS(+-+)CS)@@@@&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#R/K@@'!/,0@#0R'K@^MFX
)@@G@@ @@@@MOM@@@@)'3[IT#[# #^()-+ GOGK@@@/,0@#0R'K@^M @@@@M/,0@^#R9K]4Y/[@@^MFY
)@@G@@/K@@^M%[)M!_G[)@@[ON@@@@)'/[IWGM&]ACO1K1K0K1K@@@/K@@; /K@@^M%[@M!_/,0@#0FZ
)@@G@@R'K@^M @@@@M/,0@^#R9K], /[@@^MOO@@@@); [QWGK@^G^GK@@@@^[J@@@/K@@^M%[)M!_GA
)@@G@@G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#ROP@@@@);J[ISK0K1K1ESCS-N^@@@@@GB
)@@G@@R'K@^M @@@@M/,0@^#R9K]4Y/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@OQ@@@@);S[IWGK()@-GC
)@@G@@)-+-+@@@@@@@/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K]!/^[\@@@/,0@#0OR@@@@GD
)@@G@@);-[IU&]ACO1K1K^GOGM&@@@R9K], /[@@^M/K@@#R/K@@;$/,0@#0R'K@^M @@@@M/,0@^#GE
)@@G@@R9K], OS@@@@);%[AWGK(+-+-)-+)CS)@@@@@@@@@@/K@@#R/K@@;1/K@@^M%[@M!_/,0@#0GF
)@@G@@R'K@^M @@@@M/,0@^#OT@@@@+!1[C/S@#1)@#1)@JA@@@@@@@>)@@@]@@]!'@@@@@@]@@]!8GG
)@@G@@@@@@@@@@A@@A[@@]!5@@@@@@]@@]!3OU@@@@+!'[C/S@#1)@#1)@#1)@@@@@]@@],^@@@@@@GH
)@@G@@@@A@@A[@@],[      @@A@@@]@@]!"@@A@@A[@@]!/OV@@@@+,#[K#1)@#1)@#1)@@@>>@@@GI
)@@G@@]@@],H      @@ @@ ]@@],E      @@[@@[]@@],B0     @@[@@[OW@@@@+,H[S@@@@@@@GJ
)@@G@@                                                                  OX@@@@GK
)@@G@@+,S[S@@@@@@@                                                            GL
)@@G@@      OY@@@@+,<[S@@@@@@@                                                GM
)@@G@@                  OZ@@@@+,,[S@@@@@@@                                    GN
)@@G@@                              PA@@@@+,9[S@@@@@@@                        GO
)@@G@@                                          PB@@@@+\^[S@@@@@@@            GP
)@@G@@                                                      PC@@@@+\J[S@@@@@@@GQ
)@@G@@                                                                  PD@@@@GR
)@@G@@+\U[S@@@@@@@                                                            GS
)@@G@@      PE@@@@+\>[S@@@@@@@                                                GT
)@@G@@                  PF@@@@+\0[S@@@@@@@                                    GU
)@@G@@                              PG@@@@+\;[S@@@@@@@                        GV
)@@G@@                                          PH@@@@+0A[S@@@@@@@            GW
)@@G@@                                                      PI@@@@+0L[S@@@@@@@GX
)@@G@@                                                                  PJ@@@@GY
)@@G@@+0W[S@@@@@@@                                                            GZ
)@@G@@      PK@@@@+0$[S@@@@@@@                                                HA
)@@G@@                  PL@@@@+02[S@@@@@@@                                    HB
)@@G@@                              PM@@@@+0.[S@@@@@@@                        HC
)@@G@@                                          PN@@@@+1C[S@@@@@@@            HD
)@@G@@                                                      PO@@@@+1N[S@@@@@@@HE
)@@G@@                                                                  PP@@@@HF
)@@G@@+1Y[S@@@@@@@                                                            HG
)@@G@@      PQ@@@@+1([S@@@@@@@                                                HH
)@@G@@                  PR@@@@+14[S@@@@@@@                                    HI
)@@G@@                              PS@@@@+1_[S@@@@@@@                        HJ
)@@G@@                                          PT@@@@+2E[S@@@@@@@            HK
)@@G@@                                                      PU@@@@+2P[S@@@@@@@HL
)@@G@@                                                                  PV@@@@HM
)@@G@@+2)[S@@@@@@@                                                            HN
)@@G@@      PW@@@@+2:[S@@@@@@@                                                HO
)@@G@@                  PX@@@@+26[S@@@@@@@                                    HP
)@@G@@                              PY@@@@+3[[S@@@@@@@                        HQ
)@@G@@                                          PZ@@@@+3G[S@@@@@@@            HR
)@@G@@                                                      QA@@@@+3R[S@@@@@@@HS
)@@G@@                                                                  QB@@@@HT
)@@G@@+3+[S@@@@@@@                                                            HU
)@@G@@      QC@@@@+3![S@@@@@@@                                                HV
)@@G@@                  QD@@@@+38[S@@@@@@@                                    HW
)@@G@@                              QE@@@@+4#[S@@@@@@@                        HX
)@@G@@                                          QF@@@@+4I[S@@@@@@@            HY
)@@G@@                                                      QG@@@@+4T[K@#1)@@/HZ
)@@G@@S@@@@@[@@]4=6789  012345@@E@@E]@@]4)                              QH@@@@IA
)@@G@@+4<@0]) @@@@-XF@V#@K0@@@C )]5RR@W@@@R#@]41@@[@@#@@[]!F@@[@[]@@[]!=@@@@@@IB
)@@G@@@@A@@AQI@@@@-XI[MK0^@!))]A@-)@[[)@[ZC[\@@[[@0@[YG80@@]/K@[XT:80@]A/ )[XTIC
)@@G@@H9)@@[C[)@[X[ -@@[QJ@@@@-XS[MK0^G^G@K0K0@@M@-)@@R@)]6BR@K]6AN8K@@TM@-)@@ID
)@@G@@R@)]6 R@K]6^N8K@@ [[)@[XC[\@@@QK@@@@-X+[N#[#[#@@K^G^G@A@K]5C^@K]5B/K@[X&IE
)@@G@@O'0@@[/KF@@@*4F@@@OY;@@@R@)]5DR@K]5CN@K]5BQL@@@@-X?[F#@K0K0[#[#@@@@@@@@@IF
)@@G@@M@M)@@R@)]6 R@K]6^N8K@@ M@M)@@R@)]6BR@K]6AN8K@@TA@)]5DQM@@@@-X5[F#[#@[#[IG
)@@G@@#[@K0@@@@@@@QB)]5Q/,)@BNC[)]419()]5Q9!?@@@R;F0@@&'0@@[R@)]5DR@K]5CQN@@@@IH
)@@G@@-X"[F#@(&-)O^[#[#[#[#@@@9()]5H9!)@[V[[)M5,C )]5W/,0@ )R'K[ZMC#@M5LR9K@;2II
)@@G@@C @]5RQO@@@@-YB[F#@*CSC[50A]@-)-)@@@:8@@@[9()@[V9!)]5H/@@[YZ@[@]5,/K@@B!IJ
)@@G@@A]0@[ZR'0[YFA#0@[YQP@@@@-YK[F@^G^[#[#@()O0K@@@@@/,)@A,R9)]5OR9K]51 ^@]52IK
)@@G@@ @@]5P/K@[YP9()]5O9!?@@@/K@[YOQQ@@@@-YT[F#[#@(&-)O^[#@()O0@@R9)]5VR9K]51IL
)@@G@@ ^@]52/,0@ )R'K[YZC#@M5LR9K@/KC @]52QB)]51QR@@@@-Y+[F@ES G^[#@()O0K^G@@@IM
)@@G@@C )]5W/,)@A,R9)]51R9K]5V ^@]5W/,)@A,R9)]58R9K]51/,)@A,QS@@@@-Y:[F#[#@K0KIN
)@@G@@[#[#[#@@@@@@S[)M5;C[)M5,[[)M5, @@@@M/ )[Y1W[)M5;;P)@@=C[)M5,[[)M5,QT@@@@IO
)@@G@@-Y4[F@^G^G^G^G^G]&UA@@@@C#@M5LR9K@/0C @]5WQB)]5V[[)M5"C[)M5,[[0M5, @@@@NIP
)@@G@@/ 0[Y6QU@@@@-Y.[E*C]A[N@()) G]&]@@@@/,)@A,R9)]5SR9K]51/,)@A,R9)]6[R9K]51IQ
)@@G@@ ^@]52/,0@ )R'K[Y_QV@@@@-ZA[E()O0K^G]&[N[@K^C@@@'=@@@@/K@[ZJ/,)@A,R9)]51IR
)@@G@@R9K]5V ^@]5W/,)@A,R9)]5VR9K]51QW@@@@-ZJ@2()-))]A]@@@@@);2@QS@@@@@@H[)@[]IS
)@@G@@C[)@@I/K@[XF[[)]42C9)@@@/K@[XF[[)]42C9)]5VQX@@@@);4[QS[#[#^[#@@@@@$B0@]CIT
)@@G@@[@\@@[[0Z@@@^[J@@@/K@@^M%[)M5-G[)@@[&8K@@@R@K@@HT9)@@AQY@@@@);"[IWGOGM&]IU
)@@G@@ACO1K1]&@@@@R9K]5V^[\@@@/,0@#0R'K@^M @@@@M/,0@^#R9K]5=/[@@^M/\@@^TQZ@@@@IV
)@@G@@)/B[IS^G^GOG^GO[#^@@@@@@/K@@#R/K@@/J/K@@^M%[@M5-/\@@^T$B0@]C[@\@@[[0Z@@@IW
)@@G@@A Z@@@RA@@@@)/K[QWG[#^K0@@@@@@^[J@@@&;K@@[G@)@@GW8@@@A @@@@GG@KM5*&;K@@@IX
)@@G@@/\@@^M0@@@@KH[@M5*RB@@@@)/U[QSK0K1K0^GL#@@ @@@@GG@KM5:&;K@@@/\@@^M0@@@@KIY
)@@G@@H[@M5:/\@@^T$B0@]C[@\@@[[0Z@@@RC@@@@)/=[QS@()@-)-+@@@@/\@@^T$B0@]C[@\@@[IZ
)@@G@@[0Z@@@A Z@@@R9K]5S^[\@@@&;K@@[G@)@@GW8@@@ARD@@@@)/,[IW[#^[#[# #@@@@@@@@@JA
)@@G@@0@@@@KH[@M5"/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/K@@#R/K@@/\RE@@@@)/7[QWGL#@@]JB
)@@G@@&@@@@@A Z@@@R9K]5V^[\@@@&;K@@[G@)@@GW8@@@A @@@@GG@KM5"&;K@@@/\@@^MRF@@@@JC
)@@G@@).[@6SK0K1K^GK@@@@+5J@K/S@@@@@@@@@@@]@@]5L/K@@#R/K@@.A/\@@^T$B0@]C[@\@@[JD
)@@G@@[0Z@@@RG@@@@+5L[C/S@@/S@#1)@JA@@@@@@@@]@@@]@@]5U@@M@@@]@@]5S@@@@@@]@@]5QJE
)@@G@@@@@@@@@@A@@A[@@]5NRH@@@@+5U[KJA@@@JA@@@@@@@@@@@@@@A@@A[@@]5<            JF
)@@G@@            @@S@@@]@@]5X      RI@@@@+5=[K/S@@JA@@JA@@@@@@@@]@@A@@A[@@]5!JG
)@@G@@@@@@@^@@A@@A[@@]5%6789  012345@@E@@E]@@]5&RJ@@@@+5,[K/S@@/S@@@@@@@      JH
)@@G@@                        @@Y@@@]@@]53@@@@@@@@A@@A[@@]50RK@@@@+58[C/S@@/S@JI
)@@G@@@/S@@@@@@@@@@@@@@@@@A@@A[@@]6@@@@@@A@@A@@A[@@]5.      @@ @@ ]@@]5'RL@@@@JJ
)@@G@@+6[@8/S@@*[K@@@@@@-ZP@F#@@@@@@R#@]6K@@[@@#@@[]4(@@[@[]@@[]5]@@@)  @@^@@^JK
)@@G@@]@@]6#RM@@@@-ZQ[MK0^G[@FSC@-)@[@0@[YG80@@]/K@[Z<:80@]A/ )[Z<H9)@@[C[)@[XJL
)@@G@@[ -@@[C )]66R@W@@@RN@@@@-Z)[MK0^G[#[#@^G@@R@K]7$N8K@@TM@-)@@R@)]7&R@K]7>JM
)@@G@@N8K@@ [[)@[XC[\@@@[[)@[ZC[\@@[RO@@@@-Z%[N#@K0K0K0@^@@@/K@[Z0O'0@@[/KF@@@JN
)@@G@@*4F@@@OY;@@@R@)]6*R@K]6$N@K]6&M@-)@@R@)]7*RP@@@@-Z4[F#[#[#@K0K0[#@@@@@@@JO
)@@G@@R@K]7>N8K@@ M@M)@@R@)]7*R@K]7$N8K@@TA@)]6*A@K]6$^@K]6&RQ@@@@-Z.[N#@K0K0@JP
)@@G@@K0K0K@/,)@BNC[)]6K9()]659!?@@@R;F0@@&'0@@[R@)]6*R@K]6$M@M)@@R@)]7&RR@@@@JQ
)@@G@@-)B[F#[#@(&-)O^[#[#[#@@@9!)@[V[[)M7GC )]6;/,0@ )R'K[-RC#@M60R9K@.BC @]66JR
)@@G@@QB)]65RS@@@@-)K[F#[#@*CSC[50A]@-)-)@9()@[V9!)]6?/@@[)$@[@]7G/K@@B!A]0@[ZJS
)@@G@@R'0[)PA#0@[Y9()]6?RT@@@@-)T[EK[#[@K0K0ES G@@@@@@R9)]63R9K]7J ^@]7K @@]64JT
)@@G@@/K@[)Z9()]639!?@@@/K@[)Y:8@@@[RU@@@@-)+[F@K0ES G^[#@()O0K@@@/,)@A,R9)]6'JU
)@@G@@R9K]7J ^@]7K/,)@A,R9)]7JR9K]67 ^@]68/,)@A,RV@@@@-):[E()O0K^G]&[N[@K0K0@@JV
)@@G@@[[)M7GC )]6;/,)@A,R9)]7JR9K]6' ^@]6;/,)@A,R9)]7WR9K]7JRW@@@@-)4[F#@K0K[#JW
)@@G@@[#[#[@@@@@@@/ 0[)"S[)M7ZC[)M7G[[)M7G @@@@M/ )[)9W[)M7Z;P)@@=C[)M7GRX@@@@JX
)@@G@@-).[EK0K0K0K0K0ET*S @@@@R'K[-BC#@M60R9K@.!C @]6;QB)]6'[[)M7+C[)M7G[[0M7GJY
)@@G@@ @@@@NRY@@@@--A[F@K0ES G^@()O0K^G@@@ ^@]6;/,)@A,R9)]6'R9K]7J/,)@A,R9)]67JZ
)@@G@@R9K]7J ^@]7K/,0@ )RZ@@@@--J[E()O0K^[]@()-))@@@@@C9)@@@/K@[ZP[[)]6LC9)]6'KA
)@@G@@'=@@@@/K@[-O/,)@A,R9)]7JR9K]6'SA@@@@--S@N#[@@@@@).B@"S@^G@@@%[)M7AG[)@@[KB
)@@G@@&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@[ZP[[)]6LSB@@@@).I[IWGM&]AC]A]AEAC@@@@@KC
)@@G@@/[@@^M/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/,0@#+R9K]7D/K@@^MSC@@@@).R[QU&]AC@ KD
)@@G@@GOGK@@^[\@@@/,0@#0R'K@^MC9)@@[9,@@@P-]@@@M-]K@@MD9)@@@/,0@^#R9K]7DSD@@@@KE
)@@G@@).-[IU&@]A]ADN[# #@@@@@@%[@M7A/,0@#+R9K]7D/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@KF
)@@G@@R9K]6'SE@@@@).%[IWGO[#^[#[# #@@@@@@@H[@M7+/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@KG
)@@G@@/K@@#R/K@@.?/K@@^MSF@@@@).3[QT#^K0@@()@@@@R9K]6'^[\@@@&;K@@[G@)@@GW8@@@AKH
)@@G@@ @@@@GG@KM7+&;K@@@/\@@^M0@@@@KSG@@@@)..@"S^G^GO[#^@@@@+6,@C/S@@@@@]@@]60KI
)@@G@@/K@@#R/K@@"#/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@SH@@@@+6\[CJA@@JA@@/S@#1)@@@@@KJ
)@@G@@]@@]69@>)@@@]@@]67@@@@@@]@@]65@@@@@@@@A@@A[@@]62@@@@@@SI@@@@+68[S#1)@@@@KK
)@@G@@                                          @@/@@@]@@]6/      @@A@@@SJ@@@@KL
)@@G@@+7#[K@/S@@/S@@/S@@[@@]7I'     @@[@@[]@@]7F@@@@@@@@A@@A[@@]7C            KM
)@@G@@      SK@@@@+7H[S#1)@@@@                                          @[]@@@KN
)@@G@@]@@]7L@@@@@@@@A@@ASL@@@@+7S[K@JA@@JA@@@@@@@@@@@A@@A@@A[@@]7-      @@ @@ KO
)@@G@@]@@]7Y                        SM@@@@+7+@8/S@@*[K@@@@@@--U@F#@@@@@@R#@]71KP
)@@G@@@@[@@#@@[]6C@@[@[]@@[]6-@@@@@@@@A@@A[@@]7=SN@@@@--V[MK0[#@K0^@!)@@:80@]AKQ
)@@G@@/ )[-:H9)@@[C[)@[X[ -@@[C )]8TR@W@@[[ -@@[C )]8RR@W@@@SO@@@@-->[N@^G[#@KKR
)@@G@@0^G^G@R@)]9%R@K]9(N8K@@ [[)@[XC[\@@@[[)@[ZC[\@@[[@0@[YG80@@]/K@[-:SP@@@@KS
)@@G@@--\[M^G^G[#[#[#@@@*4F@@@OY;@@@R@)]8DR@K]8CN@K]8BM@-)@@R@)]9?R@K]9:N8K@@TKT
)@@G@@M@-)@@SQ@@@@--9[M^[#[#[#@K0K0@M@M)@@R@)]9?R@K]9:N8K@@TA@)]8DA@K]8C^@K]8BKU
)@@G@@/K@[-8O'0@@[/KF@@@SR@@@@-+#[MK0K0^G^G@^G@@9()]8Q9!?@@@R;F0@@&'0@@[R@)]8DKV
)@@G@@R@K]8CM@M)@@R@)]9%R@K]9(N8K@@ SS@@@@-+H[E^G^G^[#@()O0K@@@@@@/,)@A,R9)]8&KW
)@@G@@R9K]8X ^@]8Y/,)@BNC[)]719()]8S9!?@@@R;F0@@ST@@@@-+Q[F#[#@(&-)O^@()O0K@@@KX
)@@G@@/,0@^:R9)]8JR9K]8Q/,0@ )R'K[+ZC#@M8LR9K@"^C @]8RQB)]8QSU@@@@-+Z[F#@()O0KKY
)@@G@@]&[N[@K0ES@@R9K]8Q ^@]8R/,)@A,R9)]8,R9K]88/,)@A,R9)]8QR9K]88 ^@]89SV@@@@KZ
)@@G@@-+*[E())CSCSCS [#[]G'8#@@]@]8Q/K@@@@A]0@[ZR'0[+0A#0@[Y9()]8H9!)@[V/,)@A,LA
)@@G@@R9)]88SW@@@@-+1[E/S#[@K0K0^@K0K@@@@@/K@[+;9()]8O9!?@@@/K@[+':8@@@[9()@[VLB
)@@G@@9!)]8H/@@[<#@@@]8)SX@@@@-+'[F#[#@()O0K^G]&[N[@@@/,)@A,R9)]88R9K]8< ^@]8=LC
)@@G@@/,)@A,R9)]8OR9K]88 ^@]89 @@]8PSY@@@@-<#[F#[#@(&-)O^[#[#@(&@@R9K@"3C @]8YLD
)@@G@@QB)]8X/,0@ )R'K[<DC#@M8LR9K@"WC @]8=QB)]8<SZ@@@@-<G[F#@*C]@-)-)O3K0E@@@@LE
)@@G@@R'K[<WC#@M8LR9K@""C @]8=QB)]8</K@[<W/,0@ )R'K[<KC#@M8LTA@@@@-<P[F@K0K0ETLF
)@@G@@*S [@K0K0@@@C @]8-QB)]8)/,0@ )R'K[<WC#@M8LR9K@_RC @]8=QB)]8</,0@ )TB@@@@LG
)@@G@@-<Y[E(&-)O^@()O0K^G^G@@@C @]8-QB)]8)/,0@^:R9)]9SR9K]8)/,0@ )R'K[<>C#@M8LLH
)@@G@@R9K@_7TC@@@@-<$[E(&-)O^[#@()O0K]&@@@R9K]88/,)@A,R9)]8UR9K]88 ^@]89/,0@ )LI
)@@G@@R'K[<:C#@M8LR9K@_;TD@@@@-<0[E())CS G]&]@-)-)O3@@R9K[@VC @]8VQB)]8U/,)@A,LJ
)@@G@@R9)]88R9K]8U ^@]8V/,)@A,R9)]8)TE@@@@-<9[F#@*C]A]A[NH#@*C@@@@/,0@ )R'K[=#LK
)@@G@@C#@M8LR9K[@ZC @]8TQB)]8S/,0@ )R'K[='C#@M8LTF@@@@-=][F@K0K0ET*S [@K^G@@@@LL
)@@G@@QB)]8Q/K@[=./,0@ )R'K[=EC#@M8LR9K[@%C @]8YQB)]8X/K@[=.TG@@@@-=F[F#@(&-)OLM
)@@G@@^@()O0K^G@@@9!)@[V/,0@^:R9)]9-R9K]8Q/,0@ )R'K[=NC#@M8LR9K[@5C @]8RTH@@@@LN
)@@G@@-=O[F#[#@*CSCMBR@SC]A]A@9()@[V9!)]8H/@@[=!@[@]8Q/K@@@@A]0@[ZR'0[=TA#0@[YLO
)@@G@@9()]8HTI@@@@-=X[EK[#[@K0K0ES G@@@@@@R9)]8OR9K]88 ^@]89 @@]8P/K@[=<9()]8OLP
)@@G@@9!?@@@/K@[=+:8@@@[TJ@@@@-=&[F@K0K0ET*S [@K0ES@@@R9K]88 ^@]89/,0@ )R'K[=!LQ
)@@G@@C#@M8LR9K[@_C @]89QB)]88/,)@A,TK@@@@-=\[E()) G]&]@-)O0ESC@@@/,)@A,R9)]88LR
)@@G@@R9K]8U ^@]8V/,)@A,R9)]9&R9K]88/,)@A,R9)]8UTL@@@@-=8[#@K)ESCSC@-))@)"^@ISLS
)@@G@@C[)@@I/K@[-U[[)]72C9)@@@/K@[-U[[)]72C9)]8U'=@@@@/K@[='TM@@@@)" [QS@K0K1@LT
)@@G@@@@@@@@[@\@@[[0Z@@@^[J@@@/K@@^M%[)M8*G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]TN@@@@LU
)@@G@@)"J[IWG^GM&]ACO0@@@@@@@@[@\@@[[0Z@@@A Z@@@R9K]8X^[\@@@/,0@#+R9K]8:/\@@^TLV
)@@G@@$B0@]CTO@@@@)"S[IWG^GO[#^[#[#^@@@@@@/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@/K@@#RLW
)@@G@@/K@@"V/\@@^T$B0@]CTP@@@@)"-[QWG[#^K0@@@@@@^[\@@@&;K@@[G@)@@GW8@@@A @@@@GLX
)@@G@@G@KM9G&;K@@@/\@@^M0@@@@KH[@M9GTQ@@@@)":[IU&@]A]AE@-+-)@@@@@@H[@M9J/K@@#RLY
)@@G@@/K@@"2/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K]8UTR@@@@)"4[QT#^K0@^[#^@@@/K@@#RLZ
)@@G@@/K@@".&;K@@[G@)@@GW8@@@A @@@@GG@KM9J&;K@@@/\@@^M0@@@@KTS@@@@)""[QS@^G^GOMA
)@@G@@G@@@@@0@@@@KH[@M9G/K@@^M%[)M8*G[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@ITT@@@@MB
)@@G@@)_C[QWGL#@@K1ESCS)/,0@^#R9K]9M/[@@^M&;K@@[G@)@@GW8@@@A @@@@GG@KM9G&;K@@@MC
)@@G@@/\@@^MTU@@@@)_M[IU&EAC)CS*S]AC@@@@@@&;K@@@/\@@^M0@@@@KH[@M9G/K@@#R/K@@_QMD
)@@G@@H9@@@[/,K@#MR'0@^MTV@@@@)_V[QWG@@[#[#^@@@@/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@ME
)@@G@@&;K@@[G@)@@GW8@@@A @@@@GG@KM9GTW@@@@)_>[QWG[#^K0@@@@@@^[\@@@&;K@@[G@)@@GMF
)@@G@@W8@@@A @@@@GG@KM9G&;K@@@/\@@^M0@@@@KH[@M9GTX@@@@)_\[IU&@]A]AE@-+O0@@@@@@MG
)@@G@@R9K]9P/K@@#R/K@@_6/\@@^T$B0@]C[@\@@[[0Z@@@A Z@@@R9K]8UTY@@@@)_8[IWGO[# #MH
)@@G@@@K1^G@@@@@@@ @@@@GG@KM9G&;K@@@/\@@^M0@@@@KH[@M9G/K@@#R/K@@_'/,0@#+TZ@@@@MI
)@@G@@-@[[QS@^G^GOG@@@@@0@@@@KH[@M9G/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@&;K@@[G@)@@GMJ
)@@G@@W8@@@AUA@@@@-@F[QWGL#@@]&@@@@@A Z@@@R9K]8)^[\@@@&;K@@[G@)@@GW8@@@A @@@@GMK
)@@G@@G@KM9G&;K@@@/\@@^MUB@@@@-@P[ISK0K1K^GM&]AE@@@@@@/K@[@Y/,0@#+R9K]9V/K@@#RML
)@@G@@/K@[@U/\@@^T$B0@]C[@\@@[[0Z@@@UC@@@@-@Y[QWGOG[#^K0@@@@&;K@@[G@)@@GW8@@@AMM
)@@G@@ @@@@GG@KM9J&;K@@@/\@@^M0@@@@KH[@M9J/K@@#RUD@@@@-@*[QW[# #@K1^G@@@G@)@@GMN
)@@G@@W8@@@A @@@@GG@KM9J&;K@@@/\@@^M0@@@@KH[@M9J/K@@#R/K@[@(UE@@@@-@2[QT@K1@@KMO
)@@G@@0@@@@@%[)M9YG[)@@[&8K@@@R@K@@HT9)@@AH[)@[]C[)@@I/K@@#R/K@[@4&;K@@[UF@@@@MP
)@@G@@-@/[IWGO[# #@K1^G@@@@@@@ @@@@GG@KM9G&;K@@@/\@@^M0@@@@KH[@M9G/K@@#R/K@[@"MQ
)@@G@@/K@@^MUG@@@@-[ [QS@^G^GOG@@@@@0@@@@KH[@M9G/\@@^T$B0@]C[@\@@[[0Z@@@^[J@@@MR
)@@G@@&;K@@[G@)@@GW8@@@AUH@@@@-[J[QWGL#@@]&@@@@@A Z@@@R9K]8U^[\@@@&;K@@[G@)@@GMS
)@@G@@W8@@@A @@@@GG@KM9G&;K@@@/\@@^MUI@@@@-[T@6SK0K1K^GK@@@@+8J@K/S@@@@@@@@@@@MT
)@@G@@]@@]8L/K@@#R/K@[[Y/\@@^T$B0@]C[@\@@[[0Z@@@UJ@@@@+8L[C/S@@/S@#1)@JA@@@@@@MU
)@@G@@@@Z@@@]@@]8U@@/@@@]@@]8S@@@@@@]@@]8Q@@@@@@@@A@@A[@@]8NUK@@@@+8U[C/S@@/S@MV
)@@G@@@/S@@@@@@@@@      @@A@@@]@@]8+      @@[@@@]@@]8Z      @@A@@@]@@]8WUL@@@@MW
)@@G@@+8<[C/S@@/S@#1)@#1)@@@@@]@@]8!@@@@@@@@A@@A[@@]8%@@@@@@]@@]8*      @@A@@@MX
)@@G@@]@@]8>UM@@@@+8?[S#1)@@@@                                          @@0@@0MY
)@@G@@]@@]80$     @@[@@[UN@@@@+87[SJA@@@@@                                    MZ
)@@G@@            @[?@@@]@@]8'      UO@@@@+9][S@@@JA@@[@@]9I                  NA
)@@G@@                                          UP@@@@+9H[K#1)@#1)@#1)@@@@A@@ANB
)@@G@@]@@]9R@     @@[@@[]@@]9O@@@@@[@@A@@A[@@]9L@@@@@#@@A@@AUQ@@@@+9R[KJA@@JA@NC
)@@G@@@JA@@@@@@@@Y@@A@@A[@@]9)@@@@@@@@A@@A]@@]9X@@@=@@@@A@@A]@@]9U@@@@@[UR@@@@ND
)@@G@@+9-[K/S@@#1)@])@@@@@[@[]@@[]8]@@@   @@#@@#]@@]9*@@@@@@@@[@@@@@#K@@@@M@@MNE
)@@G@@]@@]9<US@@@@+9:@K*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NF
)@@G@@@@@@@@@@[@@#@@[]7(UT@@@@@@^@@^@@C@@ @@M@@^@@+@@@@@^]9!@@@[>@@@@@@@@@@[[ZNG
)@@G@@EXIT$       PRINT$      PUNCH$      SYMTRS      SYMTWS      CHANGE      NH
)@@G@@@@[@@@@@@@-OLOCATE      @@[@@@@@@@=FPARSE       @@[@@@@@@@CKPARSE0      NI
)@@G@@@@[@@@@@@[V0@@A@@[@@@@@]@@[@@]@@]@@]@@^@@]@@ @@]@@A@@]@@@@@#@@[@@#@@]@@#NJ
)@@G@@@@^@@#@@ @@#@@A@@#@@@@@^@@[@@^@@]@@^@@^@@^@@ @@^@@A@@^@@@@@ @@[@@ @@]@@ NK
)@@G@@*[@@@@*SDFF*@C@@@@.         **********************************    @A@@@@NL
)@@G@@.              EQUATES FOR CONFIG   @C@@@@.         ********************NM
)@@G@@**************    @C@@@@.                                     . $       NN
)@@G@@@G@@@@NUMREC*   EQU       100               . $ MAX. NUMBER OF AFFECTED NO
)@@G@@      @H@@@@.                                     . $ RECORD TYPES FOR ANP
)@@G@@ GIVEN REORG.     @G@@@@.                                     . $ AFFECTNQ
)@@G@@ED RECORD TYPES =       @F@@@@.                                     . $ NR
)@@G@@ OBJECT RECORD TYPES +  @G@@@@.                                     . $ NS
)@@G@@  ALL NON-OBJECT RECORD TYPES @G@@@@.                                   NT
)@@G@@  . $   WHICH OWN OR ARE OWNED BY   @F@@@@.                             NU
)@@G@@        . $   OBJECT RECORD TYPES.  @C@@@@.                             NV
)@@G@@        . $       @F@@@@NUMOAP*   EQU       30                . $ MAX. NNW
)@@G@@UMBER OF SETS OF  @G@@@@.                                     . $ WHICH NX
)@@G@@ANY AFFECTED RECORD     @G@@@@.                                     . $ NY
)@@G@@IS OWNER OR AUTOMATIC MEMBER. @C@@@@.                                   NZ
)@@G@@  . $       @E@@@@C1SIZE*   EQU       NUMREC*(NUMOAP+39). $ MAX. SIZE OFOA
)@@G@@ C1/C9@G@@@@.                                     . $ TABLES DURING CONFOB
)@@G@@IG PROCESS. @G@@@@.                                     . $ TABLES ARE IOC
)@@G@@N EXPANDED FORM   @G@@@@.                                     . $ WITH AOD
)@@G@@ FIXED LENGTH ENTRY FOR @G@@@@.                                     . $ OE
)@@G@@EACH AFFECTED RECORD TYPE.    @G@@@@.                                   OF
)@@G@@  . $ EACH ENTRY GIVES SET POINTER  @G@@@@.                             OG
)@@G@@        . $ INFORMATION, WITH SPACE FOR   @H@@@@.                       OH
)@@G@@              . $ NUMOAP OWNER AND AUTO MEMBER SETS,  @G@@@@.           OI
)@@G@@                          . $ 36 MANUAL MEMBER SETS, AND 3  @E@@@@.     OJ
)@@G@@                                . $ WORDS MISC. INFO. @C@@@@.           OK
)@@G@@                          . $       @F@@@@C5SIZE*   EQU       (NUMREC/3)OL
)@@G@@*233    . $ MAX. SIZE OF C5/C11     @G@@@@.                             OM
)@@G@@        . $ TABLES DURING CONFIG PROCESS. @H@@@@.                       ON
)@@G@@              . $ THERE IS AN ENTRY FOR EACH OBJECT   @G@@@@.           OO
)@@G@@                          . $ RECORD TYPE, GIVING RECORD    @H@@@@.     OP
)@@G@@                                . $ NAME, CALC INFO, AND WITHIN INFO.   OQ
)@@G@@@I@@@@.                                     . $ TABLE SIZE IS FIGURED ASOR
)@@G@@ A FRACTION       @G@@@@.                                     . $ OF AFFOS
)@@G@@ECTED RECORDS WHICH     @G@@@@.                                     . $ OT
)@@G@@ARE OBJECT RECORDS TIMES AN   @H@@@@.                                   OU
)@@G@@  . $ ESTIMATE OF AVERAGE ENTRY SIZE.     @C@@@@.                       OV
)@@G@@              . $       @G@@@@C6SIZE*   EQU       75                . $ OW
)@@G@@MAX. SIZE OF C6/C12 TABLES    @F@@@@.                                   OX
)@@G@@  . $ DURING CONFIG PROCESS.  @G@@@@.                                   OY
)@@G@@  . $ TABLE CONTAINS ONE WORD ENTRY @G@@@@.                             OZ
)@@G@@        . $ FOR EACH CALC RECORD IN       @H@@@@.                       PA
)@@G@@              . $ SCHEMA (WHETHER AFFECTED OR NOT).   @C@@@@.           PB
)@@G@@                          . $       @F@@@@C7SIZE*   EQU       (NUMREC/3)PC
)@@G@@*200    . $ MAX. SIZE OF C7/C13     @G@@@@.                             PD
)@@G@@        . $ TABLES DURING CONFIG PROCESS. @G@@@@.                       PE
)@@G@@              . $ THERE IS AN ENTRY FOR EACH    @G@@@@.                 PF
)@@G@@                    . $ SET AFFECTED BY THE REORG.    @H@@@@.           PG
)@@G@@                          . $ THE ENTRY CONTAINS THE SET NAME     @G@@@@PH
)@@G@@.                                     . $ AND INFO ABOUT THE OWNER AND  PI
)@@G@@@F@@@@.                                     . $ MEMBERS OF THE SET.     PJ
)@@G@@@G@@@@.                                     . $ THE TABLE SIZE IS AN ARBPK
)@@G@@ITRARY@G@@@@.                                     . $ FUNCTION OF NUMBERPL
)@@G@@ OF AFFECTED@D@@@@.                                     . $ RECORDS.    PM
)@@G@@@C@@@@.                                     . $       @E@@@@C8SIZE*   EQPN
)@@G@@U       NUMREC*6+28       . $ MAX. SIZE OF C8   @G@@@@.                 PO
)@@G@@                    . $ TABLE DURING CONFIG PROCESS.  @G@@@@.           PP
)@@G@@                          . $ TABLE CONTAINS 6-WORDS ENTRY  @G@@@@.     PQ
)@@G@@                                . $ FOR EACH OBJECT RECORD +      @G@@@@PR
)@@G@@.                                     . $ 28-WORDS SCRATCH PAD ARE USED PS
)@@G@@@F@@@@.                                     . $ BY REORG MAIN CONTROL.  PT
)@@G@@@^@@@@.         * NOTE:       @E@@@@.         AFTER CONFIG PROCESS, TABLPU
)@@G@@ES ARE MAINTAINED       @A@@@@.         AT ACTUAL USED LENGTH.    @[@@@@PV
)@@G@@.     @C@@@@.         **********************************    @A@@@@.     PW
)@@G@@         EQUATES FOR DEBUG    @C@@@@.         **************************PX
)@@G@@********    @#@@@@.          NOTE:  @D@@@@.         REORG, BOTH REORGANIPY
)@@G@@ZER AND EDITOR, HAS     @E@@@@.         BUILT-IN DEBUGGING FACILITY, CALPZ
)@@G@@LED "DEBUG".      @C@@@@.         OPTIONALLY, DEBUG CAN BE USED TO CALL QA
)@@G@@@C@@@@.         SNOOPY (A SYSTEM TRACE ROUTINE)       @C@@@@.         IFQB
)@@G@@ FOLLOWING EQUATES ARE REMOVED      @A@@@@.         FROM THE EQUATE ELEMQC
)@@G@@ENT.  @[@@@@.     @C@@@@.                                     . $       QD
)@@G@@@C@@@@TON$*     EQU       0                 . $       @C@@@@.           QE
)@@G@@                          . $       @C@@@@TOFF$*    EQU       0         QF
)@@G@@        . $       @C@@@@.                                     . $       QG
)@@G@@@C@@@@SNOOPY*   EQU       0                 . $       @C@@@@.           QH
)@@G@@                          . $       @C@@@@SNFLG$*   EQU       0         QI
)@@G@@        . $       @C@@@@.         **********************************    QJ
)@@G@@@B@@@@.              EQUATES FOR DF$AMW/DF$AMR  @C@@@@.         ********QK
)@@G@@**************************    @C@@@@.                                   QL
)@@G@@  . $       @G@@@@BLKSZ*    EQU       896               . $ BLOCK SIZE OQM
)@@G@@F DATA FILES.     @G@@@@.                                     . $ IT SHOQN
)@@G@@ULD BE MULTIPLE OF 28.  @E@@@@.                                     . $ QO
)@@G@@MAXIMUN = 1792.   @C@@@@.                                     . $       QP
)@@G@@@F@@@@BUFSZ*    EQU       (BLKSZ*2)+120     . $ BUFFER SIZE RESERVED    QQ
)@@G@@@F@@@@.                                     . $ FOR EACH DATA FILE.     QR
)@@G@@@I@@@@.                                     . $ INTERNAL BUFFER(SHOULD NQS
)@@G@@OT BE CHANGED)    @C@@@@.                                     . $       QT
)@@G@@@G@@@@BLKSZ1*   EQU       BLKSZ/28          . $ NUMBER OF SECTORS FOR A QU
)@@G@@BLOCK.@I@@@@.                                     . $ INTERNAL NUMBER(SHQV
)@@G@@OULD NOT BE CHANGED)    @C@@@@.                                     . $ QW
)@@G@@      @E@@@@MAXBLK*   EQU       (1792/BLKSZ)*2500 . $ MAX. NUMBER       QX
)@@G@@@F@@@@.                                     . $ OF BLOCKS TO A TAPE.    QY
)@@G@@@I@@@@.                                     . $ IF TAPE IS SPECIFIED FORQZ
)@@G@@ A DATA FILE,     @H@@@@.                                     . $ IT WILRA
)@@G@@L TRY TO WRITE THIS NUMBER    @F@@@@.                                   RB
)@@G@@  . $ OF BLOCKS TO A TAPE     @H@@@@.                                   RC
)@@G@@  . $  OR UNTIL END OF TAPE IS DETECTED   @G@@@@.                       RD
)@@G@@              . $ BEFORE CALLING FOR NEXT TAPE. @C@@@@.         ********RE
)@@G@@**************************    @A@@@@.              EQUATES FOR MAINED   RF
)@@G@@@C@@@@.         **********************************    @C@@@@.           RG
)@@G@@                          . $       @G@@@@SORTCORE* EQU       6000      RH
)@@G@@        . $ CORE SIZE FOR SORT PACKAGE.   @H@@@@.                       RI
)@@G@@              . $ IN CALLING UNIVAC SORT PACKAGE,     @H@@@@.           RJ
)@@G@@                          . $ USER MUST SPECIFY THE SIZE OF CORE  @E@@@@RK
)@@G@@.                                     . $ FOR SORT TO USE.  @I@[@@.     RL
)@@G@@                                . $ WITH S OPTION IN THE PROCESSOR CALL,RM
)@@G@@      @I@@@[.                                     . $ WITH X OPTION IN TRN
)@@G@@HE PROCESSOR CALL,      @I@@@@.                                     . $ RO
)@@G@@EDITOR WILL RESERVE ABOVE SPECIFIED       @I@@@@.                       RP
)@@G@@              . $ NUM. OF WORDS FOR THE SORT PACKAGE.       @C@@@@.     RQ
)@@G@@    **********************************    @A@@@@.              EQUATES FRR
)@@G@@OR MAINREORG@C@@@@.         **********************************    @C@@@@RS
)@@G@@.                                     . $       @G@@@@ZAP1*     EQU     RT
)@@G@@  5000              . $ MAX BUFFER USED FOR Z1 TABLE. @G@@@@.           RU
)@@G@@                          . $ Z1 TABLE CONTAINS RELOAD      @E@@@@.     RV
)@@G@@                                . $ SUBCOMMANDS INPUT.@C@@@@.           RW
)@@G@@                          . $       @G@@@@ZAP2*     EQU       50        RX
)@@G@@        . $ MAX ENTRY LENGTH IN Z1 TABLE  @G@@@@.                       RY
)@@G@@              . $ FOR EACH RECORD TYPE.         @C@@@@.         ********RZ
)@@G@@**************************    @A@@@@.              EQUATES FOR PATCH    SA
)@@G@@@C@@@@.         **********************************    @C@@@@.           SB
)@@G@@                          . $       @G@@@@ACTNUM*   EQU       1         SC
)@@G@@        . $ NUMBER OF ACTIVITIES CREATED  @G@@@@.                       SD
)@@G@@              . $ DURING PATCH PROCESS.         @G@@@@.                 SE
)@@G@@                    . $ CURRENTLY APPEARS TO BE TIMING@G@@@@.           SF
)@@G@@                          . $ PROBLEM IF ACTNUM > 1.        @C@@@@.     SG
)@@G@@                                . $       @G@@@@PGPBLK*   EQU       10  SH
)@@G@@              . $ NUMBER OF DATA BASE PAGES     @G@@@@.                 SI
)@@G@@                    . $ PER BUFFER DURING PATCH       @G@@@@.           SJ
)@@G@@                          . $ PROCESS - EACH PATCH ACTIVITY @G@@@@.     SK
)@@G@@                                . $ HAS 3 SUCH BUFFERS.           @C@@@@SL
)@@G@@.                                     . $       @G@@@@ZWRNCNT*  EQU     SM
)@@G@@  11                . $ NUMBER OF WARNING MESSAGES    @G@@@@.           SN
)@@G@@                          . $ FOR A GIVEN RECORD AND SET    @G@@@@.     SO
)@@G@@                                . $ BEFORE THEY ARE SUPPRESSED.   @G@@@@SP
)@@G@@.                                     . $ DURING PATCH PROCESS,         SQ
)@@G@@@G@@@@.                                     . $ IF A SET POINTER WITH ZESR
)@@G@@RO(0) @G@@@@.                                     . $ VALUE IS ENCOUNTERSS
)@@G@@ED, A       @G@@@@.                                     . $ WARNING MESSST
)@@G@@AGE IS PRODUCED   @G@@@@.                                     . $ UNLESSSU
)@@G@@ NUMBER OF MESSAGES FOR @G@@@@.                                     . $ SV
)@@G@@THE SAME RECORD AND SET       @G@@@@.                                   SW
)@@G@@  . $ EXCEEDS THE NUMBER SPECIFIED. @C@@@@.                             SX
)@@G@@        . $       @E@@@@KF$WKS*   EQU       50                . $ (TEMP SY
)@@G@@EQU)        @C@@@@.         **********************************    @A@@@@SZ
)@@G@@.              EQUATES FOR RDCTBL   @C@@@@.         ********************TA
)@@G@@**************    @C@@@@.                                     . $       TB
)@@G@@@G@@@@C14SZX*   EQU       500               . $ ADDITIONAL WORDS RESERVETC
)@@G@@D FOR @I@@@@.                                     . $ USER DEFINED SYMBOTD
)@@G@@LS IN THE EDITOR.       @C@@@@.                                     . $ TE
)@@G@@      @G@@@@TT1SZ*    EQU       500               . $ MAX. NUMBER OF USETF
)@@G@@R           @E@@@@.                                     . $ DEFINED SYMBTG
)@@G@@OLS.  @C@@@@.                                     . $       @G@@@@TT2SZXTH
)@@G@@    EQU       300               . $ MAX. NUMBER OF AFFECTED       @E@@@@TI
)@@G@@.                                     . $ SETS IN A REORG.  @C@@@@.     TJ
)@@G@@                                . $       @E@@@@TT2SZ*    EQU       TT2STK
)@@G@@ZX*3          . $ EDITOR INTERNAL   @G@@@@.                             TL
)@@G@@        . SIZE COMPUTED FOR THE SETS.     @C@@@@.         **************TM
)@@G@@********************    @A@@@@.              EQUATES FOR RELOAD   @C@@@@TN
)@@G@@.         **********************************    @C@@@@.                 TO
)@@G@@                    . $       @G@@@@Z2MULT*   EQU       2               TP
)@@G@@  . $ MULTIPLIER USED TO CALCULATE  @G@@@@.                             TQ
)@@G@@        . $ SIZE OF Z2 TABLE BUFFER.      @I@@@@.                       TR
)@@G@@              . $ SIZE = SIZE OF C5 TABLE * Z2MULT          @G@@@@.     TS
)@@G@@                                . $   + SIZE OF C5 TABLE.         @G@@@@TT
)@@G@@.                                     . $ USER CAN CHANGE THIS TO A     TU
)@@G@@@E@@@@.                                     . $ BIGGER NUMBER     @G@@@@TV
)@@G@@.                                     . $ IF Z2 TABLE OVERFLOW.         TW
)@@G@@@C@@@@.                                     . $       @G@@@@BLSIZE*   EQTX
)@@G@@U       5                 . $ DATA BUFFER BLOCK SIZE        @E@@@@.     TY
)@@G@@                                . $ IN PAGES.         @I@@@@.           TZ
)@@G@@                          . $ ALL READS AND WRITES TO THE DATA          UA
)@@G@@@I@@@@.                                     . $ BASE ARE DONE IN BLOCKS UB
)@@G@@OF THIS           @C@@@@.                                     . $ SIZE. UC
)@@G@@@I@@@@.                                     . $ USER CAN ADJUST THIS TO UD
)@@G@@OPTIMIZE          @E@@@@.                                     . $ SPEED UE
)@@G@@OF RELOAD.  @C@@@@.                                     . $       @G@@@@UF
)@@G@@NUMBLK*   EQU       20                . $ NUMBER OF BLOCKS IN RELOAD    UG
)@@G@@@E@@@@.                                     . $ DATA BUFFER.      @G@@@@UH
)@@G@@.                                     . $ THE SIZE OF THE BUFFER IS     UI
)@@G@@@G@@@@.                                     . $ NUMBLK*BLSIZE PAGES.    UJ
)@@G@@      @C@@@@.                                     . $       @G@@@@C4OVENUK
)@@G@@*   EQU       100               . $ MAX. NUMBER OF INDEPENDENT    @G@@@@UL
)@@G@@.                                     . $ OVERFLOW RANGES USED BY RELOADUM
)@@G@@@G@@@@.                                     . $ IN A CERTAIN REORGANIZATUN
)@@G@@ION.  @G@@@@.                                     . $ SHOULD BE INCREASEUO
)@@G@@D ONLY IF   @G@@@@.                                     . $ THERE IS AN UP
)@@G@@ERROR CONDITION   @G@@@@.                                     . $ CAUSEDUQ
)@@G@@ BY THE RANGE TABLE     @E@@@@.                                     . $ UR
)@@G@@OVERFLOW.         @C@@@@.                                     . $       US
)@@G@@@G@@@@RNGSIZ*   EQU       C4OVEN*2          . $ INTERNAL COMPUTATION.   UT
)@@G@@      @G@@@@.                                     . $ OVERFLOW RANGE TABUU
)@@G@@LE SIZE.    @C@@@@.                                     . $       @G@@@@UV
)@@G@@BFISIZ*   EQU       NUMBLK*2          . $ INTERNAL COMPUTATION.         UW
)@@G@@@G@@@@.                                     . $ DATA BUFFER INDEX BLOCK UX
)@@G@@SIZE. @C@@@@.                                     . $       @G@@@@MRGENTUY
)@@G@@*   EQU       150               . $ MAX. NUMBER OF ENTRIES        @E@@@@UZ
)@@G@@.                                     . $ IN MERGE TABLE.   @G@@@@.     VA
)@@G@@                                . $ USER MAY INCREASE THIS ONLY   @G@@@@VB
)@@G@@.                                     . $ IN THE CASE OF AN ERROR CAUSEDVC
)@@G@@@E@@@@.                                     . $ BY TABLE OVERFLOW.@C@@@@VD
)@@G@@.                                     . $       @G@@@@C4SIZE*   EQU     VE
)@@G@@  600               . $ C4 TABLE SIZE IN WORDS.       @G@@@@.           VF
)@@G@@                          . $ USER MAY INCREASE THIS ONLY IF@I@@@@.     VG
)@@G@@                                . $ AN ERROR CAUSED BY TABLE OVERFLOW.  VH
)@@G@@      @C@@@@.                                     . $       @G@@@@MRGSIZVI
)@@G@@*   EQU       MRGENT*2          . $ INTERNAL COMPUTATION.         @G@@@@VJ
)@@G@@.                                     . $ SIZE OF MERGE TABLE.          VK
)@@G@@@C@@@@.                                     . $       @G@@@@MXRSIZ*   EQVL
)@@G@@U       700               . $ MAX. RECORD SIZE*2.           @G@@@@.     VM
)@@G@@                                . $ USER SHOULD INSURE THAT       @G@@@@VN
)@@G@@.                                     . $ NO OBJECT RECORD IS BIGGER    VO
)@@G@@@G@@@@.                                     . $ THAN MXRSIZ/2 WORDS.    VP
)@@G@@      @C@@@@.                                     . $       @E@@@@DMSLEVVQ
)@@G@@5*  EQU       0                 . $ THIS IS SET TO    @G@@@@.           VR
)@@G@@                          . $ 1 IF INSTALLATION IS          @G@@@@.     VS
)@@G@@                                . $ USING DMS-1100 LEVEL 5.       @G@@@@VT
)@@G@@.                                     . $ IT WILL CAUSE RELOAD TO STORE VU
)@@G@@@E@@@@.                                     . $ CALC RECORDS      @G@@@@VV
)@@G@@.                                     . $ ON DATA PAGES IF NOT ENOUGH   VW
)@@G@@@G@@@@.                                     . $ OVERFLOW IS SPECIFIED.  VX
)@@G@@      @G@@@@.                                     . $ THIS ALSO INCLUDESVY
)@@G@@ CASE WHERE @G@@@@.                                     . $ NO OVERFLOW VZ
)@@G@@IS SPECIFIED.     @C@@@@.                                     . $       WA
)@@G@@@E@@@@Z2LINK*   EQU       4                 . $ (TEMP EQU)        @C@@@@WB
)@@G@@.         **********************************    @C@@@@.              EQUWC
)@@G@@ATES FOR SCAN/UNLOAD          @C@@@@.         **************************WD
)@@G@@********    @C@@@@.                                     . $       @G@@@@WE
)@@G@@SCSBNO*   EQU       8                 . $ NUMBER OF BUFFERS RESERVED    WF
)@@G@@@G@@@@.                                     . $ FOR EACH SET SPECIFIED IWG
)@@G@@N     @G@@@@.                                     . $ A VIA SET SUBCOMMAWH
)@@G@@ND.         @C@@@@.                                     . $       @G@@@@WI
)@@G@@SCSPGS*   EQU       5                 . $ NUMBER OF PAGES IN EACH       WJ
)@@G@@@G@@@@.                                     . $ BUFFER RESERVED FOR A SEWK
)@@G@@T     @I@@@@.                                     . $ SPECIFIED IN A VIAWL
)@@G@@ SET SUBCOMMAND.        @C@@@@.                                     . $ WM
)@@G@@      @G@@@@SCDBPGS*  EQU       20                . $ NUMBER OF PAGES FOWN
)@@G@@R           @G@@@@.                                     . $ EACH OF TWO(WO
)@@G@@2) BIFFERS USED   @G@@@@.                                     . $ FOR SEWP
)@@G@@QUENTIAL AREA SCAN.     @C@@@@.                                     . $ WQ
)@@G@@      @G@@@@GAP*      EQU       5                 . $ NUMBER OF PAGES WIWR
)@@G@@THOUT       @G@@@@.                                     . $ AN AFFECTED WS
)@@G@@RECORD REQUIRED   @G@@@@.                                     . $ TO STAWT
)@@G@@RT A NEW INTERVAL       @G@@@@.                                     . $ WU
)@@G@@IN THE C2 AND C4 TABLES.      @C@@@@.         **************************WV
)@@G@@********    @A@@@@.              EQUATES FOR SYM$AM   @C@@@@.         **WW
)@@G@@********************************    @C@@@@.                             WX
)@@G@@        . $       @G@@@@C14SZ*    EQU       4000              . $ MAX. NWY
)@@G@@UMBER OF WORDS RESERVED @G@@@@.                                     . $ WZ
)@@G@@FOR SYMBOL TABLES(FIRST PART).@C@@@@.                                   XA
)@@G@@  . $       @G@@@@C15SZ*    EQU       2000              . $ MAX. NUMBER XB
)@@G@@OF WORDS RESERVED @I@@@@.                                     . $ FOR SYXC
)@@G@@MBOL TABLES(SECOND PART).           @I@@@@.                             XD
)@@G@@        . $ THIS PART IS FOR DUPLICATED SYMBOLS       @G@@@@.           XE
)@@G@@                          . $ FROM THE SECOND SCHEMA.       @C@@@@.     XF
)@@G@@    **********************************    @A@@@@.              EQUATES FXG
)@@G@@OR TF$AM    @C@@@@.         **********************************    @C@@@@XH
)@@G@@.                                     . $       @G@@@@IBNUM*    EQU     XI
)@@G@@  10                . $ NUMBER OF INDEX BLOCKS        @G@@@@.           XJ
)@@G@@                          . $ IN THE EDITOR'S INDEX BUFFER. @G@@@@.     XK
)@@G@@                                . $ NON-OVERFLOW INDEX BUFFER     @G@@@@XL
)@@G@@.                                     . $  SIZE = IBNUM*IBSIZE WORDS.   XM
)@@G@@@E@@@@.                                     . $ MINIMUM = 2.      @C@@@@XN
)@@G@@.                                     . $       @E@@@@IOVFNUM*  EQU     XO
)@@G@@  2                 . $ NUMBER OF OVERFLOW@G@@@@.                       XP
)@@G@@              . $ INDEX BLOCKS IN THE           @G@@@@.                 XQ
)@@G@@                    . $ EDITOR'S INDEX BUFFER.        @E@@@@.           XR
)@@G@@                          . $ MINIMUM = 2.      @C@@@@.                 XS
)@@G@@                    . $       @G@@@@IFILL*    EQU       90              XT
)@@G@@  . $ THIS DETERMINES THE %         @G@@@@.                             XU
)@@G@@        . $ FILL OF INDEX BLOCK DURING    @G@@@@.                       XV
)@@G@@              . $ THE SET UP OF THE TEMPORARY   @E@@@@.                 XW
)@@G@@                    . $ INDEX FILE.       @G@@@@.                       XX
)@@G@@              . $ THE SMALLER THE VALUE, THE    @G@@@@.                 XY
)@@G@@                    . $ SLOWER WILL THE EDITOR PERFORM@G@@@@.           XZ
)@@G@@                          . $ SINCE LESS INDICES WILL END   @G@@@@.     YA
)@@G@@                                . $ UP IN EACH INDEX BLOCK.       @G@@@@YB
)@@G@@.                                     . $ SHOULD BE LESS THAN 100       YC
)@@G@@@G@@@@.                                     . $ TO ALLOW INSERTION OF SOYD
)@@G@@ME    @G@@@@.                                     . $ NEW RECORDS WITHOUYE
)@@G@@T OVERFLOW. @C@@@@.                                     . $       @G@@@@YF
)@@G@@IBSIZE*   EQU       1792              . $ SIZE OF TEMPORARY INDEX       YG
)@@G@@@E@@@@.                                     . $ BLOCK IN WORDS.   @G@@@@YH
)@@G@@.                                     . $ SHOULD BE MULTIPLE OF 28.     YI
)@@G@@@E@@@@.                                     . $ MINIMUM = 28.     @C@@@@YJ
)@@G@@.                                     . $       @G@@@@TBSIZE*   EQU     YK
)@@G@@  1792              . $ SIZE OF TEMPORARY DATA        @E@@@@.           YL
)@@G@@                          . $ BLOCK IN WORDS.   @G@@@@.                 YM
)@@G@@                    . $ MUST BE MULTIPLE OF 28.       @E@@@@.           YN
)@@G@@                          . $ MINIMUM = 28.     @C@@@@.                 YO
)@@G@@                    . $       @G@@@@TBNUM*    EQU       3               YP
)@@G@@  . $ NUMBER OF TEMPORARY           @G@@@@.                             YQ
)@@G@@        . $ DATA BLOCKS USED BY THE       @E@@@@.                       YR
)@@G@@              . $ EDITOR.           @E@@@@.                             YS
)@@G@@        . $ MINIMUM = 2.      @C@@@@.                                   YT
)@@G@@  . $       @G@@@@IOVBUFF*  EQU       IOVFNUM*IBSIZE    . $ INTERNAL COMYU
)@@G@@PUTATION.         @C@@@@.                                     . $       YV
)@@G@@@G@@@@EXTRAW*   EQU       0                 . $ NUMBER OF WORDS(EXTRA)  YW
)@@G@@      @G@@@@.                                     . $ AT END OF THE RECOYX
)@@G@@RD.         @C@@@@.                                     . $       @G@@@@YY
)@@G@@INDNUM*   EQU       (IBSIZE/2)-1      . $ INTERNAL COMPUTATION.         YZ
)@@G@@@G@@@@.                                     . $ MAX. NUMBER OF INDICES IZA
)@@G@@N     @E@@@@.                                     . $ ONE INDEX BLOCK.  ZB
)@@G@@@C@@@@.                                     . $       @G@@@@IDBNUM*   EQZC
)@@G@@U       800               . $ MAX. NUMBER OF INDEX          @G@@@@.     ZD
)@@G@@                                . $ BLOCKS FORMED DURING          @G@@@@ZE
)@@G@@.                                     . $ THE TEMPORARY INDEX           ZF
)@@G@@@E@@@@.                                     . $ FILE SET UP.      @G@@@@ZG
)@@G@@.                                     . $ A COUNT TO TRAP ANY LOOP      ZH
)@@G@@@G@@@@.                                     . $ OR DAMAGED DATA FILE.   ZI
)@@G@@      @C@@@@.                                     . $       @G@@@@TBSECTZJ
)@@G@@*   EQU       TBSIZE/28         . $ INTERNAL COMPUTATION.         @C@@@@ZK
)@@G@@.                                     . $       @G@@@@IBSECT*   EQU     ZL
)@@G@@  IBSIZE/28         . $ INTERNAL COMPUTATION.         @C@@@@.           ZM
)@@G@@                          . $       @E@@@@TOTCOR*   EQU       IBSIZE*(IBZN
)@@G@@NUM+2)+TBSIZE*(TBNUM+2)       @G@@@@.                                   ZO
)@@G@@  . $ INTERNAL COMPUTATION.         @C@@@@.                             ZP
)@@G@@        . $       @E@@@@FREE      EQU       (((IBSIZE*(100-IFILL)+99)/10ZQ
)@@G@@0)+1)/2)*2  @C@@@@.                                     . $       @C@@@@ZR
)@@G@@INDBLK*   EQU       (IBSIZE-2-FREE)/2.          @G@@@@.                 ZS
)@@G@@                    . $ INTERNAL COMPUTATION.         @G@@@@.           ZT
)@@G@@                          . $ KEY FILE/BLOCK NUMBER.        ___   @G@@@@ZU
)@@G@@*[@@@@*SDFF*@]@@@@ .          @A@@@@ .             ** MERGE **          ZV
)@@G@@@]@@@@ .          @C@@@@ .        THIS ROUTINE MERGES THE TWO PAGE RANGEZW
)@@G@@@C@@@@ .             TABLES C2 AND C4 JUST PRIOR TO   @C@@@@ .          ZX
)@@G@@   THE POINTER PATCHING ROUTINE     @]@@@@ .          @C@@@@ .        THZY
)@@G@@E MERGED TABLE IS CALLED C2,        @E@@@@ .             BUT IS NEVER WRZZ
)@@G@@ITTEN TO THE C-FILE           @]@@@@ .          @E@@@@ .        MERGE ISAA
)@@G@@ EXECUTED AS PART OF THE PATCHING PROCESS @]@@@@ .          @^@@@@      AB
)@@G@@   AXR$.          @^@@@@$(6)     LIT .          @]@@@@$(5).       @]@@@@AC
)@@G@@ .          @C@@@@MERGE*.                       . $H MERGE        @A@@@@AD
)@@G@@         +     0              .     @C@@@@ .                  GET CORE FAE
)@@G@@OR NEW TABLE      @E@@@@         L     A0,LAST$D      . $P GET LAST USEDAF
)@@G@@ D-BANK ADDR@A@@@@         AU,U  A0,1           .     @G@@@@         S  AG
)@@G@@   A1,SX10        . $P SAVE START ADDR OF NEW TABLE         @C@@@@      AH
)@@G@@   A,H1  A0,C2          . $P ADD C2 LENGTH@C@@@@         A,H1  A0,C4    AI
)@@G@@      . $P ADD C4 LENGTH@A@@@@         S     A0,LAST$D      .     @E@@@@AJ
)@@G@@         ER    MCORE$         . $W MCORE SPACE FOR NEW TABLE@C@@@@ .    AK
)@@G@@              INITIALIZE INDICES          @A@@@@         LXI,U X9,1     AL
)@@G@@      .     @C@@@@         LXM,H2 X9,C2         . $P SET C2 INDEX @A@@@@AM
)@@G@@         L,H2  A1,C4          .     @E@@@@         S     A1,STRTC4      AN
)@@G@@. $P GET C4 START ADDR        @A@@@@         L     X10,SX10       .     AO
)@@G@@@E@@@@         LXI,U X10,1          . $P SET NEW TABLE INDEX      @E@@@@AP
)@@G@@         S,H2  X10,C2         . $P SAVE NEW TABLE START ADDR@G@@@@SCANC2AQ
)@@G@@.             SET LINK OF 1ST WRD OF LAST NEW TABLE ENTRY         @A@@@@AR
)@@G@@         L     A1,SX10        .     @A@@@@         L     A2,X10         AS
)@@G@@.     @G@@@@         ANU   A2,A1          . $P CALCULATE DISP FROM STARTAT
)@@G@@ OF TABLE   @G@@@@         S,T3   A3,0,A1       . $P STORE AS LINK OF LAAU
)@@G@@ST ENTRY          @G@@@@         AN,U   A3,3          . $P CALCULATE # RAV
)@@G@@ANGES IN LAST ENTRY     @G@@@@         S,T2   A3,0,A1       . $P STORE #AW
)@@G@@ IN 1ST WORD OF LAST ENTRY    @G@@@@         S,H2  X10,SX10       . $P SAX
)@@G@@AVE ADDR OF 1ST WORD THIS ENTRY     @C@@@@ .                  PROCESS OLAY
)@@G@@D C2 ENTRY        @E@@@@         TNZ,H1 C2            . $T ARE THERE ANYAZ
)@@G@@ C2 ENTRIES @C@@@@         J     NOC2           . $A YES NO,NOC2  @C@@@@BA
)@@G@@         L,T1  A0,0,X9        . $P GET AREA CODE@E@@@@         L,T2  A4,BB
)@@G@@0,X9        . $P GET NUMB RANGES          @C@@@@         L,T3  R3,0,X9  BC
)@@G@@      . $P SAVE LINK    @G@@@@         JZ    A4,NORNGE      . $T ANY RANBD
)@@G@@GES IN THIS C2 ENTRY          @C@@@@                              . $A YBE
)@@G@@ES NO,NORNGE@A@@@@         L,U   R1,3           .     @E@@@@         BT BF
)@@G@@   X10,0,*X9      . $P TRANSFER 3 WRD HEADER    @A@@@@         L     A1,BG
)@@G@@STRTC4      .     @E@@@@SRCHC4.             SEARCH C4 TO SEE IF AREA OCCBH
)@@G@@URS         @E@@@@ .                            . $P LOOK AT C4 ENTRY   BI
)@@G@@      @E@@@@         TNE,T1 A0,0,A1       . $T DOES AREA MATCH C2 ?     BJ
)@@G@@@C@@@@         J     MATCH          . $A NO YES,MATCH @E@@@@         TNZBK
)@@G@@,T3 0,A1          . $T MORE C4 ENTRIES ?        @C@@@@         J     NOMBL
)@@G@@TCH         . $A YES NO,NOMTCH@E@@@@         A,T3  A1,0,A1        . $P GBM
)@@G@@ET LINK TO NEXT C4 ENTRY@C@@@@         J     SRCHC4         . $J SRCHC4 BN
)@@G@@      @E@@@@NORNGE   A     X9,R3          . $P MOVE PTR TO NEXT C2 ENTRYBO
)@@G@@@G@@@@         S     A1,SX10        . $P RESET PTR TO LAST NEW TABLE ENTBP
)@@G@@RY    @C@@@@         J     C2END          . $J C2END        @E@@@@NOMTCHBQ
)@@G@@.             NO C4 MATCH, BLOCK TRANSFER C2 ENTRY    @E@@@@         L  BR
)@@G@@   R1,A4          . $P GET # RANGES IN C2 ENTRY @E@@@@         BT    X10BS
)@@G@@,0,*X9      . $P BLOCK TRANSFER RANGES    @C@@@@         J     C2END    BT
)@@G@@      . $J C2END        @E@@@@MATCH.              C4 MATCH, MERGE C2 ANDBU
)@@G@@ C4 RANGES        @E@@@@         L,T2  A5,0,A1        . $P GET # RANGES BV
)@@G@@IN C4 ENTRY @E@@@@         SZ,T1 0,A1           . $P ZERO OUT C4 AREA COBW
)@@G@@DE    @A@@@@         A,U   A1,3           .     @E@@@@         LXI,U A1,BX
)@@G@@1           . $P SET C4 RANGE INDEX       @A@@@@         L,U   X8,0     BY
)@@G@@      .     @G@@@@         SLJ   GETR2          . $W GET 1ST C2 RANGE, SBZ
)@@G@@TORE AS THIS      @A@@@@         S     A0,THIS        .     @G@@@@      CA
)@@G@@   SLJ   GETR4          . $W GET 1ST C4 RANGE, STORE AS NEXT      @]@@@@CB
)@@G@@ .          @G@@@@ .                  MERGE RANGES BY EXAMINING ON A PAICC
)@@G@@R BASIS           @G@@@@ .                  X8 IS CONTROL FLAG : 0-C2, 1CD
)@@G@@-C4 IS THIS ENTRY       @E@@@@CKPAGE.             MAKE THIS HAVE LOWEST CE
)@@G@@FIRST PAGE        @E@@@@         L,H1  A0,NEXT        . $P GET START PG CF
)@@G@@OF NEXT     @E@@@@         TNE,H1 A0,THIS       . $T ARE START PGS THE SCG
)@@G@@AME ? @C@@@@         J     PGEQL          . $A NO YES,PGEQL @G@@@@      CH
)@@G@@   TG,H1 A0,THIS        . $T IS THIS STR PG < NEXT STR PG ?       @C@@@@CI
)@@G@@         J     CKRNGE         . $A NO YES,CKRNGE@E@@@@         DL    A2,CJ
)@@G@@THIS        . $P INTERCHANGE THIS AND NEXT@A@@@@         DSC   A2,36    CK
)@@G@@      .     @A@@@@         DS    A2,THIS        .     @E@@@@         L  CL
)@@G@@   A2,X8          . $P SWITCH CONTROL FLAG      @A@@@@         XOR,U A2,CM
)@@G@@1           .     @A@@@@         L     X8,A3          .     @E@@@@CKRNGECN
)@@G@@.             SEE IF NEXT STR PG WITHIN THIS RANGE    @G@@@@         L,HCO
)@@G@@1  A2,THIS        . $P GET STR AND END PG OF THIS           @A@@@@      CP
)@@G@@   AU,H2 A2,THIS        .     @G@@@@         TW,H1 A2,NEXT        . $T ICQ
)@@G@@S NEXT STR PG WITHIN THIS RANGE ?   @C@@@@         J     NOLAP          CR
)@@G@@. $A YES NO,NOLAP @E@@@@CKEND.              FIND END OF RANGE WHICH IS GCS
)@@G@@REATER      @A@@@@         L,H1  A2,NEXT        .     @E@@@@         A,HCT
)@@G@@2  A2,NEXT        . $P GET END OF NEXT RANGE    @G@@@@         TLE   A3,CU
)@@G@@A2          . $T DOES NEXT RNGE GO BEYOND THIS RNGE ? @C@@@@         J  CV
)@@G@@   NLARG          . $A NO YES,NLARG @E@@@@         SLJ   *GETN,X8       CW
)@@G@@. $W GET NEXT NEXT VALUE      @C@@@@         J     CKRNGE         . $J CCX
)@@G@@KRNGE       @E@@@@NLARG.              NEXT RANGE GOES FARTHEST, SWITCH MCY
)@@G@@ODES  @G@@@@         AN,H1 A2,THIS        . $P CALCULATE AND SAVE NEW RACZ
)@@G@@NGE         @A@@@@         S,H2  A2,THIS        .     @E@@@@         L  DA
)@@G@@   A2,X8          . $P SWITCH CONTROL FLAG      @A@@@@         XOR,U A2,DB
)@@G@@1           .     @A@@@@         L     X8,A3          .     @E@@@@      DC
)@@G@@   SLJ   *GETN,X8       . $W GET NEXT NEXT VALUE      @C@@@@         J  DD
)@@G@@   CKRNGE         . $J CKRNGE       @C@@@@PGEQL.              STR PAGES DE
)@@G@@ARE SAME          @G@@@@         L,H1  A2,THIS        . $P GET STR AND EDF
)@@G@@ND PG OF THIS           @A@@@@         AU,H2 A2,THIS        .     @C@@@@DG
)@@G@@         J     CKEND          . $J CKEND        @E@@@@NOLAP.            DH
)@@G@@  NO OVERLAP, STORE NEW RANGE, START AGAIN@E@@@@         L     A0,THIS  DI
)@@G@@      . $P STORE RANGE IN NEW TABLE @A@@@@         S     A0,0,*X10      DJ
)@@G@@.     @E@@@@         L     A0,NEXT        . $P MAKE NEXT THIS           DK
)@@G@@@A@@@@         S     A0,THIS        .     @E@@@@         L     A2,X8    DL
)@@G@@      . $P SWITCH CONTROL FLAG      @A@@@@         XOR,U A2,1           DM
)@@G@@.     @A@@@@         L     X8,A3          .     @E@@@@         SLJ   *GEDN
)@@G@@TN,X8       . $W GET NEXT NEXT VALUE      @C@@@@         J     CKPAGE   DO
)@@G@@      . $J CKPAGE       @C@@@@GETR2.              GET NEXT RANGE FROM C2DP
)@@G@@ ENTRY@A@@@@         +     0              .     @E@@@@         JGD   A4,DQ
)@@G@@$+2         . $T MORE RANGES IN C2 ENTRY ?@C@@@@         J     BTR4     DR
)@@G@@      . $A YES NO,BTR4  @E@@@@         L     A0,0,*X9       . $P GET NEXDS
)@@G@@T RANGE           @E@@@@         S     A0,NEXT        . $P STORE IT IN NDT
)@@G@@EXT         @C@@@@         J     *GETR2         . $J RETURN       @C@@@@DU
)@@G@@GETR4.              GET NEXT RANGE FROM C4 ENTRY@A@@@@         +     0  DV
)@@G@@            .     @E@@@@         JGD   A5,$+2         . $T MORE RANGES IDW
)@@G@@N C4 ENTRY ?@C@@@@         J     BTR2           . $A YES NO,BTR2  @E@@@@DX
)@@G@@         L     A0,0,*A1       . $P GET NEXT RANGE           @E@@@@      DY
)@@G@@   S     A0,NEXT        . $P STORE IT IN NEXT         @C@@@@         J  DZ
)@@G@@   *GETR4         . $J RETURN       @E@@@@BTR2.               BLOCK TRANEA
)@@G@@SFER REST OF C2 RANGES        @A@@@@         L     A0,THIS        .     EB
)@@G@@@E@@@@         S     A0,0,*X10      . $P STORE LAST THIS RANGE    @A@@@@EC
)@@G@@         L     R1,A4          .     @G@@@@         BT    X10,0,*X9      ED
)@@G@@. $P BLOCK TRANSFER REST OF RANGES        @C@@@@         J     C2END    EE
)@@G@@      . $J C2END        @E@@@@BTR4.               BLOCK TRANSFER REST OFEF
)@@G@@ C4 RANGES        @A@@@@         L     A0,THIS        .     @E@@@@      EG
)@@G@@   S     A0,0,*X10      . $P STORE LAST THIS RANGE    @A@@@@         L  EH
)@@G@@   R1,A5          .     @G@@@@         BT    X10,0,*A1      . $P BLOCK TEI
)@@G@@RANSFER REST OF RANGES        @]@@@@ .          @A@@@@C2END    L     A0,EJ
)@@G@@R3          .     @E@@@@         JNZ   A0,SCANC2      . $T ARE THERE MOREK
)@@G@@E C2 AREAS ?@E@@@@ .                            . $A NO,SCANC4 YES,SCANCEL
)@@G@@2     @]@@@@NOC2.       @A@@@@         L     A1,STRTC4      .     @E@@@@EM
)@@G@@SCANC4.             SCAN C4 TO FIND ANY AREAS NOT NOTED     @E@@@@      EN
)@@G@@   TZ,T1 0,A1           . $T HAS AREA BEEN NOTED ?    @E@@@@         J  EO
)@@G@@   C4ENTR         . $A YES,CONT NO,C4ENTR       @E@@@@CONT     TNZ,T3 0,EP
)@@G@@A1          . $T MORE C4 ENTRIES ?        @C@@@@         J     EXIT     EQ
)@@G@@      . $A YES NO,EXIT  @E@@@@         A,T3  A1,0,A1        . $P GET LINER
)@@G@@K TO NEXT C4 ENTRY@C@@@@         J     SCANC4         . $J SCANC4       ES
)@@G@@@G@@@@C4ENTR.             SET LINK OF 1ST WRD OF LAST NEW TABLE ENTRY   ET
)@@G@@      @A@@@@         L     A0,SX10        .     @A@@@@         L     A2,EU
)@@G@@X10         .     @G@@@@         ANU     A2,A0        . $P CALCULATE DISEV
)@@G@@P FROM START OF TABLE   @G@@@@         S,T3   A3,0,A0       . $P STORE AEW
)@@G@@S LINK OF LAST ENTRY          @G@@@@         AN,U   A3,3          . $P CEX
)@@G@@ALCULATE # RANGES IN LAST ENTRY     @G@@@@         S,T2   A3,0,A0       EY
)@@G@@. $P STORE # IN 1ST WORD OF LAST ENTRY    @G@@@@         TNZ,T2 0,A1    EZ
)@@G@@      . $T ANY RANGES IN THIS C4 ENTRY          @C@@@@         J     CONFA
)@@G@@T           . $A YES NO,CONT  @G@@@@         S,H2  X10,SX10       . $P SFB
)@@G@@AVE ADDR OF 1ST WORD THIS ENTRY     @C@@@@ .                  BLOCK TRANFC
)@@G@@SFER ENTRY        @A@@@@         L     A2,A1          .     @E@@@@      FD
)@@G@@   LXI,U A2,1           . $P SET INDEX FOR TRANSFER   @A@@@@         L,TFE
)@@G@@2  A0,0,A2        .     @G@@@@         JZ    A0,CONT        . $T ANY RANFF
)@@G@@GES IN THIS C4 ENTRY          @C@@@@                              . $A YFG
)@@G@@ES NO,CONT  @A@@@@         A,U   A0,3           .     @E@@@@         L  FH
)@@G@@   R1,A0          . $P GET TRANSFER COUNT       @E@@@@         BT    X10FI
)@@G@@,0,*A2      . $P BLOCK TRANSFER ENTRY     @C@@@@         J     CONT     FJ
)@@G@@      . $J CONT         @C@@@@EXIT.               SET FINAL LINK OF NEW FK
)@@G@@TABLE @A@@@@         L     A2,SX10        .     @E@@@@         SZ,T3 0,AFL
)@@G@@2           . $P STORE O AS FINAL LINK    @A@@@@         L     A0,X10   FM
)@@G@@      .     @A@@@@         LXI,U A0,0           .     @G@@@@         ANUFN
)@@G@@,H2 A0,C2         . $P CALCULATE LENGTH OF NEW TABLE        @E@@@@      FO
)@@G@@   S,H1   A1,C2         . $P STORE IT IN PTR LOCATION @A@@@@         ANUFP
)@@G@@    A0,A2         .     @G@@@@         AN,U   A1,3          . $P CALCULAFQ
)@@G@@TE # RANGES IN FINAL ENTRY    @E@@@@         S,T2   A1,0,A2       . $P SFR
)@@G@@TORE # RANGES           @A@@@@         S     A0,LAST$D      .     @E@@@@FS
)@@G@@         ER    LCORE$         . $W RELEASE UNUSED CORE      @A@@@@      FT
)@@G@@   J     *MERGE         . $E  @]@@@@ .          @E@@@@ .   THIS SECTION FU
)@@G@@OF CODE BUILDS THE AFFECTED RECORD TABLE  @E@@@@ .        THIS TABLE CONFV
)@@G@@TAINS A ONE WORD ENTRY FOR EACH     @C@@@@ .        AFFECTED RECORD APPEFW
)@@G@@ARING IN C1       @G@@@@ .             T1 CONTAINS THE RECORD CODE OF THFX
)@@G@@E AFFECTED RECORD       @E@@@@ .             H2 CONTAINS THE ABSOLUTE ADFY
)@@G@@DR OF THE START OF@C@@@@ .                  THE C1 ENTRY FOR THAT RECORDFZ
)@@G@@@E@@@@ .        THE NUMBER OF AFFECTED RECORDS IS STORED IN ARTCNT@]@@@@GA
)@@G@@ .          @C@@@@BLDART*  +     0              . $H BLDART       @E@@@@GB
)@@G@@         L     X8,(1,AFRCDT)  . $P SET POINTER TO NEW TABLE @E@@@@      GC
)@@G@@   L,U   A2,1           . $P INITIALIZE COUNTER       @E@@@@         L,HGD
)@@G@@2  A0,C1          . $P GET START ADDR OF C1     @E@@@@BART1    L,T1  A1,GE
)@@G@@0,A0        . $P GET RECORD CODE          @E@@@@         S,T1  A1,0,X8  GF
)@@G@@      . $P PUT IT IN NEW TABLE      @G@@@@         S,H2  A0,0,*X8       GG
)@@G@@. $P SAVE C1 ENTRY ADDR IN NEW TBL ENTRY  @E@@@@         TNZ,T3 0,A0    GH
)@@G@@      . $T MORE C1 ENTRIES ?        @C@@@@         J     BART2          GI
)@@G@@. $A YES NO,BART2 @G@@@@         A,T3  A0,0,A0        . $P RESET PTR TO GJ
)@@G@@NEXT C1 ENTRY           @E@@@@         A,U   A2,1           . $P INCREMEGK
)@@G@@NT COUNT          @C@@@@         J     BART1          . $J BART1        GL
)@@G@@@E@@@@BART2    S     A2,ARTCNT      . $P SAVE NEW TABLE SIZE COUNT@G@@@[GM
)@@G@@         L     X8,(1,ARETBL)  . $P SET PTR TO BUILD AFFCT AREA TBL      GN
)@@G@@@E@@@[         TNZ,H1 C3            . $T ANY C3 ENTRIES           @C@@@[GO
)@@G@@         J     BART35         . $A YES NO,BART35@E@@@[         L,H2  A0,GP
)@@G@@C3          . $P POINT TO C3/C10          @E@@@[         L,S3  A2,0,A0  GQ
)@@G@@      . $P GET # RECD BITS          @E@@@[         A,S4  A2,0,A0        GR
)@@G@@. $P ADD # PAGE BITS          @E@@@[         S     A2,ASHFT       . $P SGS
)@@G@@AVE AS AREA SHIFT COUNT @E@@@[         L,U   A2,1           . $P INITIALGT
)@@G@@IZE AREA CNT      @G@@@[BART3    L     A1,0,A0        . $P GET AREA CODEGU
)@@G@@ FROM C3 ENTRY          @A@]@[         LSSL  A1,24          .     @A@@@]GV
)@@G@@         SSL   A1,24          .     @E@@@[         S     A1,0,*X8       GW
)@@G@@. $P SAVE IT IN AFFCT AREA TBL@E@@@[         TNZ,T3 0,A0          . $T MGX
)@@G@@ORE ENTRIES IN C3       @C@@@[         J     BART4           . $A YES NOGY
)@@G@@,BART4@G@@@[         A,T3  A0,0,A0        . $P RESET C3 PTR TO NEXT ENTRGZ
)@@G@@Y           @E@@@[         A,U   A2,1           . $P INCREMENT AREA CNT HA
)@@G@@      @C@@@[         J     BART3          . $J BART3        @E@@@[BART35HB
)@@G@@   SZ    ASHFT          . $P ZERO ALL PTRS SINCE NO C3@A@@@[         SZ HC
)@@G@@   ARETBL         .     @A@@@[         SZ    A2             .     @E@@@[HD
)@@G@@BART4    S     A2,ARECNT      . $P SAVE AFFECTED AREA CNT   @C@@@@      HE
)@@G@@   J     *BLDART        . $E RETURN       @]@@@@ .          @]@@@@$(6). HF
)@@G@@      @A@@@@GETN     +     GETR4     .          @A@@@@         +     GETHG
)@@G@@R2     .          @A@@@@SX10     +     0         .          @A@@@@STRTC4HH
)@@G@@   +     0         .          @C@@@@ .   THIS AND NEXT MUST BE CONSECUTIHI
)@@G@@VE LOCATIONS@A@@@@THIS     +     0         .          @A@@@@NEXT     +  HJ
)@@G@@   0         .          @]@@@@ .          @A@@@@ARTCNT*  +     0        HK
)@@G@@      .     @A@#@@AFRCDT*  RES   100            .     @A@@@#AFRCDT*  RESHL
)@@G@@   500            .     @A@@@[ASHFT*   +     0              .     @A@#@[HM
)@@G@@ARETBL*  RES   150            .     @A@@@#ARETBL*  RES   500            HN
)@@G@@.     @A@@@[ARECNT*  +     0              .     @^@@@@         END .    HO
)@@G@@      ___J     SCANC4         . $J SCANC4       @G@@@@C4ENTR.           HP
)@@G@@)@@[A@(]@@K0AK)[K)]K)@K)#@@@@@'=@@@@A#@@@@OF@@@@OF@@@@A#K@@]K8@@@[R#@@@@HQ
)@@G@@@@@@@@AA@@@@)@C[A@(]@ ]@D#@T#@SK)[K0A@@@@@R#K@@]AA)@@@&')@@[R])@@]A#K@@#HR
)@@G@@RBK@@@QAK@@@&'K@@[AB@@@@)@K[Q@*@K0AK)[K@@@CTD@@@RZD@@@/K@@[2(C@@@@AA)@@]HS
)@@G@@AV.@@@P;0@@#AR.@@@L@)@@HR#)@@EAC@@@@)@U[Q@(@[#@SK[@@@@ORX@@@/K@@@*(OH@@@HT
)@@G@@/K@@@::WH@@@R#K@@#M]()@@N8K@@#/[@@@>NO9@@@AD@@@@)@=[Q@?@K0AK@K@@@@O;K@@#HU
)@@G@@ WH@@@CTX@@@/K@@[0M]()@@N@K@@K/K@@[0A#K@@]O]K@[#/K@@@ZAE@@@@)@,[I@*K^G[=HV
)@@G@@[#@T#@T@K0A@!C@@@^/K@@[J:C@@@^RF@@@ '^@@[-A#@@@^'^@@[VR'@@@@&;K@@[AF@@@@HW
)@@G@@)@7[I@?[#@SK0A@K0AK0A@@@K^)@@^RF)@@^R]@@@J-8)@@[R#)@@C9*)@@^;^)@@=9?)@@^HX
)@@G@@/K@@@"AG@@@@)[@[A@?G[=[#@T#@SK^G[=@@@@@@@@/K@@@"'^CK@@/K@@[C?@0@@IOB)@@ HY
)@@G@@RF)@@ /K@@[M,C)@@ AH@@@@)[C[I@?G[=G[)^G[=[#@T#@SK^)@@^RF)@@^/K@@@"'^CK@@HZ
)@@G@@R]@@@J-8)@@[R#)@@CAB)@@^PF)@@^AI@@@@)[L[I@?[#@SK0AK0A@K0A@@@'^CK@@R]@@@JIA
)@@G@@-8)@@[R#)@@CA#@@@^R#@@@ A#E)@@R#@@@^/K@@[]AJ@@@@)[U[I@?@K^@K0AK[@@@@@@@@IB
)@@G@@8^K@[=@@@@@@/K@K[VA#@@@ R#D)@@/K@@[?8^@@[Y@@@@@@/K@@@3AK@@@@)[<[I@?@K0AKIC
)@@G@@^G[)^@@@@@@@/K@@[0M]()@@N@K@@KA#E)@@R#@@@^/K@K[-A#@@@ R#H)@@/K@@[$AL@@@@ID
)@@G@@)[?[Q@?G[)[@K0A^@@(OH@@@/K@@[9*WH@@@R#K@@#/^@@@JR#@@[#M]!)@@N@K@@LA#E)@@IE
)@@G@@R#@@@^AM@@@@)[6[Q@?@K^G[)@@@@@(SH@@@AV/@@@P;0@@#AR/@@@L@)@@GR#)@@ER#@@@]IF
)@@G@@/K@@[3ORX@@@/K@@]EAN@@@@)]@[Q@?[#@S[@@K@@@/K@@[5M],)@@N@K@@GO;@@@#/@@@[5IG
)@@G@@RVI@@@&;)@@[R#)@@HAA)@@]/K@@[5AO@@@@)]E[I@?G[)^C@OC@K@@@@@@@AVY@@@P;K@@#IH
)@@G@@L@@@@IAFK@@@L^@@@@&;@@@@R#@@@E OI@@@R#)@@]AP@@@@)]N[I@?C@^C[^@K0A^C[K@@@II
)@@G@@AZS@@@RZW@@@RB@@@@R;)@@[R]@@J1@@@@@@/K@K@@'=@@@@A#@@@@AQ@@@@)]W[I@*K@K^GIJ
)@@G@@[=G[=C[)@@@@(C@@@@R]@@J2A#)@@A/K@@]UO;)@@[ORG@@@/K@@]+(OG@@@ABC)@@AR@@@@IK
)@@G@@)]>[Q@?[]@S^G[)@@@(OG@@@A#S)@@;CK@@SR#W@@@R;)@@[A#)@B;O:?@@@R\?@@@RB@@@@IL
)@@G@@/K@@]3AS@@@@)]\[I@?@^[#@T#@SK0AK@@@@/K@K]QA#)@J0 @@@@I @@@B/ @@@B;/K@@]:IM
)@@G@@O;)@@[ORG@@@/K@@]6AT@@@@)@@@"@31)G[N1)G[K@@@@@@@@@@@8@@@@@@@@@@@@@@@@@@@IN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@[V@@@@[-AU@@@@)B;@I@0@@@@@)J0@Y@0* @@@@@@@@@@@@@@@IO
)@@G@@@@@@@@@@@@@@@@@@@@@@[@B/@@[@@B@@@@@@@@@@@@AV@@@@@@^@@B@@F@@B@@T@@B@@5@@@IP
)@@G@@@@@@@@@@@@@@)@@@@@)@@@@@)@@@@@@@@@]8@@@@J3LAST$D      C2          C4    IQ
)@@G@@      MCORE$      LCORE$      C1          C3          MERGE       @@ @@@IR
)@@G@@@@@@@@BLDART      @@ @@@@@@@]QARTCNT      @@A@@@@@@@@AAFRCDT      @@A@@@IS
)@@G@@@@@@@BASHFT       @@A@@@@@@@B;ARETBL      @@A@@@@@@@B/ARECNT      @@A@@@IT
)@@G@@@@@@J0<@B@P_=CD[@T>@@@@]*[@@@@*SDFF*@[@@@@.     @C@@@@.         DATA FILIU
)@@G@@E ACCESS METHOD (DF$AM)       @[@@@@.     @C@@@@.              FILES CREIV
)@@G@@ATION  (DF$AMW, DF$AMF) @[@@@@.     @^@@@@.         ENTRY POINTS: @[@@@@IW
)@@G@@.     @A@@@@.              1. SEQUENTIAL WRITE  @[@@@@.     @B@@@@.     IX
)@@G@@               LX,U   X10,PARAM     @B@@@@.                    LMJ    X1IY
)@@G@@1,DF$AMW    @[@@@@.     @C@@@@.              2. TO FLUSH OUT LAST DATA BIZ
)@@G@@LOCKS @[@@@@.     @B@@@@.                    LMJ    X11,DF$AMF    @[@@@@JA
)@@G@@.     @#@@@@          AXR$    @#@@@@$(4)      LIT.    @]@@@@$(1).       JB
)@@G@@@C@@@@DF$AMW*                               . $H      @E@@@@          LAJC
)@@G@@        A0,1,X10          . $P GET RECORD ADDR  @E@@@@          SA      JD
)@@G@@  A0,HDRADR         . $P SAVE THE ADDR    @F@@@@          LA        A0,,JE
)@@G@@A0            . $P GET THE RECORD HEADER  @E@@@@          SA        A0,HJF
)@@G@@DRWRD         . $P SAVE THE WRD     @E@@@@          LA,U      A0,PGMSW  JG
)@@G@@        . $T IS IT EDITOR     @B@@@@          TNZ       A0              JH
)@@G@@  .   @E@@@@          SLJ       ART               . $P PERFORM ART      JI
)@@G@@@E@@@@          SX,H2     X11,SAVEX11       . $P SAVE RETURN ADDR @E@@@@JJ
)@@G@@          SX        X1,SAVEX1         . $P SAVE X1 - X3     @B@@@@      JK
)@@G@@    SX        X2,SAVEX2         .   @B@@@@          SX        X3,SAVEX3 JL
)@@G@@        .   @F@@@@          TNZ       ASGSW             . $T ARE FILES AJM
)@@G@@SSIGNED     @E@@@@          SLJ       ASG               . $A YES NO,ASG JN
)@@G@@      @G@@@@          TNZ       0,X10             . $T IS IT A CONTROL RJO
)@@G@@ECORD       @E@@@@          J         ALLFILES          . $A YES,ALLFILEJP
)@@G@@S NO  @E@@@@          SZ        A1                . $P SET TO USE  FILE0JQ
)@@G@@@F@@@@          TNZ       C18               . $T IS IT MULTIPLE FILES   JR
)@@G@@@E@@@@          J         PICKFILE          . $A YES NO,PICKFILE  @G@@@@JS
)@@G@@          LX,H2     X1,C18            . $P SET UP TO SEARCH FOR A       JT
)@@G@@@E@@@@          LXI,U     X1,1              . $  PROPER DATA FILE @E@@@@JU
)@@G@@          LR,H1     R1,C18            . $P GET ENTRY COUNT  @G@@@@      JV
)@@G@@    LA        A0,1,X10          . $P GET RECORD BUFFER ADDR       @E@@@@JW
)@@G@@          LA,T1     A0,0,A0           . $P GET RECORD CODE  @B@@@@      JX
)@@G@@    SE,T1     A0,,*X1           .   @F@@@@          J         PICKFILE  JY
)@@G@@        . $J NOTFOUND, USE FILE0    @E@@@@          ANX       X1,(1,1)  JZ
)@@G@@        . $P BACK UP INX      @E@@@@          LA,T3     A1,,X1          KA
)@@G@@  . $P GET FILE CODE    @C@@@@PICKFILE                              . $HKB
)@@G@@      @F@@@@          LX,H2     X1,BUFTBL,A1      . $P SET PROPER BUFFERKC
)@@G@@ INX  @E@@@@          SLJ       PUT               . $S STORE THE RECORD KD
)@@G@@@F@@@@          LX        X1,HDRADR         . $P GET TEH RECORD ADDR    KE
)@@G@@@F@@@@          LA        A0,HDRWRD         . $P GET THE RECORD HEADER  KF
)@@G@@@F@@@@          SA        A0,,X1            . $P RESTORE RECORD HEADER  KG
)@@G@@@D@@@@          LX        X1,SAVEX1         . $P RESTORE    @E@@@@      KH
)@@G@@    LX        X2,SAVEX2         .           X1 - X3   @B@@@@          LXKI
)@@G@@        X3,SAVEX3         .   @D@@@@          J         *SAVEX11        KJ
)@@G@@  . $J RETURN     @[@@@@.     @B@@@@.         CONTROL RECORD FOR D$FILE'KK
)@@G@@S     @[@@@@.     @C@@@@ALLFILES                              . $H      KL
)@@G@@@D@@@@          LR,U      R2,10             . $P ALL FILES  @]@@@@ALLFLOKM
)@@G@@OP.   @D@@@@          JGD       R2,$+2            . $T DONE ALL   @B@@@@KN
)@@G@@          J         ENDALL            .   @B@@@@          LX        X8,RKO
)@@G@@2             .   @E@@@@          TNZ,S1    BUFTBL,X8         . $T FILE KP
)@@G@@IN USE      @B@@@@          J         ALLFLOOP          .   @E@@@@      KQ
)@@G@@    LX,H2     X1,BUFTBL,X8      . $P SEE BUF INX      @B@@@@          SLKR
)@@G@@J       PUT               .   @B@@@@          J         ALLFLOOP        KS
)@@G@@  .   @]@@@@ENDALL.     @B@@@@          LX        X1,SAVEX1         .   KT
)@@G@@@B@@@@          LX        X2,SAVEX2         .   @B@@@@          LX      KU
)@@G@@  X3,SAVEX3         .   @D@@@@          J         *SAVEX11          . $JKV
)@@G@@ RETURN     @[@@@@.     @C@@@@.         LAST DATA BLOCKS FLUSHING ROUTINKW
)@@G@@E     @[@@@@.     @C@@@@DF$AMF*                               . $H      KX
)@@G@@@E@@@@          SX,H2     X11,SAVEX11       . $P SAVE RETURN ADDR @G@@@@KY
)@@G@@          TNZ       ASGSW             . $T SEE IF ANY FILE CREATED      KZ
)@@G@@@E@@@@          J         DFEMPTY           . $A YES NO,DFEMPTY   @B@@@@LA
)@@G@@          SX        X1,SAVEX1         .   @F@@@@          LR,U      R2,1LB
)@@G@@0             . $P MUST FLUSH ALL FILES   @]@@@@FLUSHLP.    @D@@@@      LC
)@@G@@    JGD       R2,$+2            . $T DONE ALL   @E@@@@          J       LD
)@@G@@  ENDFLSH           . $A YES,ENDFLSH NO   @B@@@@          LX        X8,RLE
)@@G@@2             .   @E@@@@          TNZ,S1    BUFTBL,X8         . $T IS FILF
)@@G@@LE USED     @E@@@@          J         FLUSHLP           . $A YES NO,FLUSLG
)@@G@@HLP   @E@@@@          LX,H2     X1,BUFTBL,X8      . $P GET BUF INX      LH
)@@G@@@B@@@@          SLJ       FLUSH             .   @B@@@@          J       LI
)@@G@@  FLUSHLP           .   @]@@@@ENDFLSH.    @B@@@@          LX        X1,SLJ
)@@G@@AVEX1         .   @D@@@@          J         *SAVEX11          . $J RETURLK
)@@G@@N     @[@@@@.     @A@@@@.         ASSIGN ALL DATA FILES     @[@@@@.     LL
)@@G@@@C@@@@ASG       +0                          . $H      @D@@@@          LALM
)@@G@@,U      A0,1              . $P SET SW     @B@@@@          SA        A0,ALN
)@@G@@SGSW          .   @E@@@@          TNZ       C18               . $T C18 ELO
)@@G@@XISTS       @E@@@@          J         ASGFILE           . $A YES NO,ASGFLP
)@@G@@ILE   @G@@@@          LX,H2     X1,C18            . $P SET UP TO SET USALQ
)@@G@@GE IND'S    @B@@@@          LXI,U     X1,1              .   @B@@@@      LR
)@@G@@    LR,H1     R1,C18            .   @]@@@@ASG0.       @E@@@@          JGLS
)@@G@@D       R1,$+2            . $T ANY MORE ENTRY   @B@@@@          J       LT
)@@G@@  ASGFILE           .   @E@@@@          LA,T3     A1,,*X1           . $PLU
)@@G@@ GET FILE CODE    @E@@@@          SA,S1     A0,BUFTBL,A1      . $P SET TLV
)@@G@@HE IND      @D@@@@          J         ASG0              . $J TRY NXT    LW
)@@G@@@[@@@@.     @D@@@@.         ASSIGN ALL FILES & INITIALIZE ALL BUFFERS   LX
)@@G@@@[@@@@.     @C@@@@ASGFILE                               . $H      @E@@@@LY
)@@G@@          LR,U      R2,10             . $P 10 FILES MAX.    @C@@@@ASGLOOLZ
)@@G@@P                               . $H      @E@@@@          JGD       R2,$MA
)@@G@@+2            . $T ANY MORE FILE    @E@@@@          J         *ASG      MB
)@@G@@        . $A YES NO,*ASG      @E@@@@          LX        X3,R2           MC
)@@G@@  . $P GET FILE INX     @E@@@@          TNZ,S1    BUFTBL,X3         . $TMD
)@@G@@ IS FILE USED     @E@@@@          J         ASGLOOP           . $A YES NME
)@@G@@O,ASGLOOP   @G@@@@          LA        A0,X3             . $P COMPUTE INXMF
)@@G@@ TO GET FILE NAME @D@@@@          AA        A0,A0             . $P A0 * MG
)@@G@@2     @E@@@@          DL        A1,NAMED1,A0      . $P GET FILE NAME    MH
)@@G@@@D@@@@          DS        A1,FCODE2         . $P SAVE IT    @D@@@@      MI
)@@G@@    DS        A1,FITEMPKT       . $P SAVE IT    @E@@@@          LA,U    MJ
)@@G@@  A0,ASGING2        . $P TRY @ASG,A       @B@@@@          ER        CSF$MK
)@@G@@              .   @E@@@@          JP        A0,GETCORE        . $J GO TOML
)@@G@@ MCORE$     @[@@@@.     @ @@@@.         BUILD TO @ASG,UP    @[@@@@.     MM
)@@G@@@ @@@@          E$DIT     EDPKT     @^@@@@          E$CHAR    '@' @A@@@@MN
)@@G@@          E$FD1     ('ASG,UP')      @^@@@@          E$SKIP    1   @ @@@@MO
)@@G@@          E$FD2     FCODE2    @A@@@@          E$FD2     ('.,//POS/20')  MP
)@@G@@@^@@@@          E$SKIP    1   @^@@@@          E$CHAR    '.' @#@@@@      MQ
)@@G@@    E$DITX  @E@@@@          LA,U      A0,PRINT          . $P PERFORM @ASMR
)@@G@@G,UP  @B@@@@          ER        CSF$              .   @B@@@@          JPMS
)@@G@@        A0,GETCORE        .   @B@@@@          LX,U      X10,PRINT       MT
)@@G@@  .   @B@@@@          LMJ       X11,ASGERR        .   @B@@@@          ERMU
)@@G@@        ERR$              .   @[@@@@.     @A@@@@.         MCORE$ FOR EACMV
)@@G@@H DATA FILE @[@@@@.     @C@@@@GETCORE                               . $HMW
)@@G@@      @B@@@@          LA        A0,LAST$D         .   @E@@@@          AUMX
)@@G@@,U      A0,1              . $P COMPUT BUF ADDR  @D@@@@          SA,H2   MY
)@@G@@  A1,BUFTBL,X3      . $P SAVE IT    @E@@@@          AA,U      A0,BUFSZ  MZ
)@@G@@        . $P GET MCORE$ SIZE  @B@@@@          SA        A0,LAST$D       NA
)@@G@@  .   @B@@@@          ER        MCORE$            .   @E@@@@          LXNB
)@@G@@,H2     X1,BUFTBL,X3      . $P SET X1(BUFADD)   @[@@@@.     @ @@@@.     NC
)@@G@@    ZEROS THE BUFFER    @[@@@@.     @B@@@@          SZ        A0        ND
)@@G@@        .   @B@@@@          LX,U      X2,A0             .   @B@@@@      NE
)@@G@@    LX        X3,X1             .   @B@@@@          LXI,U     X3,1      NF
)@@G@@        .   @B@@@@          LR,U      R1,BUFSZ          .   @B@@@@      NG
)@@G@@    BT        X3,,*X2           .   @[@@@@.     @ @@@@.         GET DEVINH
)@@G@@CE TYPE     @[@@@@.     @E@@@@          LA        A0,(13,FITEMPKT)  . $PNI
)@@G@@ GET FITEM PKT    @B@@@@          ER        FITEM$            .   @E@@@@NJ
)@@G@@          SZ        DEVICE            . $P INITIALIZE       @B@@@@      NK
)@@G@@    SZ        TAPEHDR           .   @F@@@@          SZ        A1        NL
)@@G@@        . $P CHK IF A TAPE FILE     @F@@@@          LA,U      A2,017    NM
)@@G@@        . $P TAPE CODE= 1 - 017     @B@@@@          LA,U      A0,1      NN
)@@G@@        .   @E@@@@          TNW       A1,EQUIP          . $T A TAPE FILENO
)@@G@@      @E@@@@          SA        A0,DEVICE         . $A YES NO,SKIP      NP
)@@G@@@B@@@@          TNW       A1,EQUIP          .   @B@@@@          SA      NQ
)@@G@@  A0,TAPEHDR        .   @B@@@@          SZ        REELNO            .   NR
)@@G@@@G@@@@          LA,U      A0,1              . $P INITIALIZE OTHER CONSTANS
)@@G@@NT    @B@@@@          SA        A0,NXTWRD         .   @B@@@@          LANT
)@@G@@,U      A0,2              .   @B@@@@          SA        A0,NXTSECT      NU
)@@G@@  .   @C@@@@          LA        A0,('HDRO@@')     . $       @C@@@@      NV
)@@G@@    SA        A0,HDR            . $ I     @C@@@@          LA        A0,(NW
)@@G@@'EOFO@@')     . $  N    @C@@@@          SA        A0,EOF            . $ NX
)@@G@@  I   @C@@@@          LA        A0,('EORO@@')     . $  N    @C@@@@      NY
)@@G@@    SA        A0,EOR            . $   I   @C@@@@          LA,U      A0,BNZ
)@@G@@LKSZ          . $    T  @C@@@@          SA,H1     A0,RCDSZ1         . $ OA
)@@G@@    I @C@@@@          SA,H1     A0,RCDSZ2         . $      A@C@@@@      OB
)@@G@@    SA,H1     A0,RCDSZ3         . $      A@B@@@@          SA        A0,IOC
)@@G@@OLENG         .   @E@@@@          LA,U      A0,W$             . $P SET TOD
)@@G@@O WRITE     @B@@@@          SA        A0,IOFUNC         .   @D@@@@      OE
)@@G@@    ER        TDATE$            . $       L     @D@@@@          SA      OF
)@@G@@  A0,DATE1          . $        I    @D@@@@          SA        A0,DATE2  OG
)@@G@@        . $         Z   @D@@@@          SA        A0,DATE3          . $ OH
)@@G@@        Z   @B@@@@          SZ        RCDCNT3           .   @B@@@@      OI
)@@G@@    SZ        RCDCNT1           .   @B@@@@          SZ        TAPEBLK   OJ
)@@G@@        .   @D@@@@                                                   A  OK
)@@G@@@E@@@@          DL        A0,FCODE2         . $           T       @E@@@@OL
)@@G@@.         NOP                         . $            I      @E@@@@      OM
)@@G@@    DS        A0,IOPKT          . $             O     @E@@@@          LAON
)@@G@@        A0,X1             . $              N    @E@@@@          AA,U    OO
)@@G@@  A0,120            . $           R       @B@@@@          LA,U      A1,BOP
)@@G@@LKSZ          .   @E@@@@          SA        A0,BUF1ADD        . $       OQ
)@@G@@     O      @B@@@@          SA,H2     A1,,A0            .   @E@@@@      OR
)@@G@@    AA,U      A0,BLKSZ          . $             U     @E@@@@          SAOS
)@@G@@        A0,BUF2ADD        . $               T   @B@@@@          SA,H2   OT
)@@G@@  A1,,A0            .   @E@@@@          TNZ       DEVICE            . $TOU
)@@G@@ A TAPE FILE      @E@@@@          J         ASGLOOP           . $       OV
)@@G@@         I  @C@@@@          LA        A0,(0,FITEMPKT)   . $       @F@@@@OW
)@@G@@          ER        TINTL$            . $P INITIALIZE TAPE REELS  @B@@@@OX
)@@G@@          J         ASGLOOP           .   @]@@@@$(4).       @F@@@@HDRADROY
)@@G@@    +0                          . $ TEMP SAVE RECORD ADDR   @G@@@@HDRWRDOZ
)@@G@@    +0                          . $ TEMP RECORD HEADER WORD       @^@@@@PA
)@@G@@FITEMPKT  RES       13  @A@@@@EQUIP     EQUF      FITEMPKT+6,,S1  @E@@@@PB
)@@G@@BF        FORM      6,6,6,18          . S1= USAGE IND       @]@@@@BUFTBLPC
)@@G@@.     @C@@@@          BF        1,0,0,0           . D$FILE0 @C@@@@      PD
)@@G@@    BF        0,0,0,0           . D$FILE1 @C@@@@          BF        0,0,PE
)@@G@@0,0           . D$FILE2 @C@@@@          BF        0,0,0,0           . D$PF
)@@G@@FILE3 @C@@@@          BF        0,0,0,0           . D$FILE4 @C@@@@      PG
)@@G@@    BF        0,0,0,0           . D$FILE5 @C@@@@          BF        0,0,PH
)@@G@@0,0           . D$FILE6 @C@@@@          BF        0,0,0,0           . D$PI
)@@G@@FILE7 @C@@@@          BF        0,0,0,0           . D$FILE8 @C@@@@      PJ
)@@G@@    BF        0,0,0,0           . D$FILE9 @B@@@@ASGSW     +0            PK
)@@G@@              .   @C@@@@ASGING2   '@ASG,A      D$FILE0         . '      PL
)@@G@@@A@@@@FCODE2    EQUF      ASGING2+2       @^@@@@NAMED1*   'D$FILE0'     PM
)@@G@@@^@@@@          'D$FILE1'     @^@@@@          'D$FILE2'     @^@@@@      PN
)@@G@@    'D$FILE3'     @^@@@@          'D$FILE4'     @^@@@@          'D$FILE5PO
)@@G@@'     @^@@@@          'D$FILE6'     @^@@@@          'D$FILE7'     @^@@@@PP
)@@G@@          'D$FILE8'     @^@@@@          'D$FILE9'     @[@@@@.     @#@@@@PQ
)@@G@@.         EQU'S   @[@@@@.     @B@@@@IOPKT     EQUF      0,X1            PR
)@@G@@  .   @B@@@@IODONE    EQUF      3,X1              .   @B@@@@IOFUNC    EQPS
)@@G@@UF      3,X1,S2           .   @B@@@@IOBUF     EQUF      4,X1,H2         PT
)@@G@@  .   @B@@@@IODRUM    EQUF      5,X1              .   @B@@@@IOLENG    EQPU
)@@G@@UF      4,X1,H1           .   @B@@@@SWBUF     EQUF      6,X1            PV
)@@G@@  .   @B@@@@NXTWRD    EQUF      7,X1              .   @B@@@@NXTSECT   EQPW
)@@G@@UF      8,X1              .   @B@@@@BUF1ADD   EQUF      9,X1            PX
)@@G@@  .   @B@@@@BUF2ADD   EQUF      10,X1             .   @B@@@@HDR       EQPY
)@@G@@UF      20,X1             .   @B@@@@RCDSZ1    EQUF      21,X1           PZ
)@@G@@  .   @ @@@@RCDCNT1   EQUF      23,X1     @B@@@@DATE1     EQUF      24,XQA
)@@G@@1             .   @ @@@@REELNO    EQUF      25,X1,H2  @B@@@@EOF       EQQB
)@@G@@UF      48,X1             .   @B@@@@RCDSZ2    EQUF      49,X1           QC
)@@G@@  .   @B@@@@BLKCNT    EQUF      50,X1             .   @B@@@@RCDCNT    EQQD
)@@G@@UF      51,X1             .   @B@@@@DATE2     EQUF      52,X1           QE
)@@G@@  .   @B@@@@EOFSECT   EQUF      54,X1             .   @ @@@@EOR       EQQF
)@@G@@UF      76,X1     @ @@@@RCDSZ3    EQUF      77,X1     @ @@@@RCDCNT3   EQQG
)@@G@@UF      79,X1     @ @@@@DATE3     EQUF      80,X1     @A@@@@DEVICE    EQQH
)@@G@@UF      104,X1,S1       @A@@@@TAPEHDR   EQUF      104,X1,S2       @ @@@@QI
)@@G@@TAPEBLK   EQUF      105,X1    @]@@@@$(1).       @[@@@@.     @A@@@@.     QJ
)@@G@@    ROUTINE TO STORE A RECORD @[@@@@.     @C@@@@PUT       +0            QK
)@@G@@              . $H      @G@@@@                                      . $PQL
)@@G@@ GET BUFFER ADDR ( 1 OF 2)    @F@@@@          LX        X8,BUF1ADD      QM
)@@G@@  . $P SET TO FIRST BUFFER    @G@@@@          TZ        SWBUF           QN
)@@G@@  . $T CHECK WHICH BUFFER TO USE    @E@@@@          LX        X8,BUF2ADDQO
)@@G@@        . $P USE 2ND ONE      @E@@@@          LA        A4,R3           QP
)@@G@@  . $P GET TOTAL LENGTH @H@@@@          AA,U      A4,2              . $PQQ
)@@G@@ GET ACTUAL WORD NEEDED IN BLOCK    @E@@@@                              QR
)@@G@@        .    SIZE + 1  FOR DBP@G@@@@                                    QS
)@@G@@  .           1  FOR HEADER IN BLOCK@ @@@@          LA,U      A0,BLKSZ  QT
)@@G@@@A@@@@          ANA       A0,NXTWRD       @E@@@@          TLE       A0,AQU
)@@G@@4             . $T BUFFER BIG ENOUGH@E@@@@          J         DFWBUF    QV
)@@G@@        . $A YES NO,DFWBUF    @^@@@@          ANA,U     A4,1@A@@@@      QW
)@@G@@    LX        X9,NXTWRD       @G@@@@          AX        X9,X8           QX
)@@G@@  . $P GET NEXT AVAIL ADDR IN BLOCK @B@@@@          LXI,U     X9,1      QY
)@@G@@        .   @F@@@@          SA,H1     A4,0,X9           . $P ACTUAL RECOQZ
)@@G@@RD SIZE     @ @@@@          SA,H2     A4,0,*X9  @E@@@@          LA      RA
)@@G@@  A0,0,X10          . $P MOVE DBP OR 0    @ @@@@          SA        A0,0RB
)@@G@@,*X9  @ @@@@          LA,H2     A0,1,X10  @^@@@@          LXI,U     A0,1RC
)@@G@@@F@@@@          LR        R1,R3             . $P GET TRANSFER COUNT     RD
)@@G@@@E@@@@          BT        X9,0,*A0          . $P MOVE RECORD      @ @@@@RE
)@@G@@          ANX       X9,X8     @F@@@@          SX,H2     X9,NXTWRD       RF
)@@G@@  . $P SAVE NXT AVAIL ADDR    @B@@@@          LA        A0,BRECNT       RG
)@@G@@  .   @E@@@@          AA,U      A0,1              . $P UP RECORD COUNT 1RH
)@@G@@@B@@@@          SA        A0,BRECNT         .   @B@@@@          LA      RI
)@@G@@  A0,RCDCNT         .   @G@@@@          AA,U      A0,1              . $PRJ
)@@G@@ UPDATE TOTAL RECORD COUNT    @B@@@@          SA        A0,RCDCNT       RK
)@@G@@  .   @H@@@@          LR        R15,A0            . $P RECORD SEG COUNT(RL
)@@G@@FOR KEY FILE)     @A@@@@          LA,H2     A3,RCDSZ1       @B@@@@      RM
)@@G@@    TLE       A4,A3             .   @G@@@@          J         $+3       RN
)@@G@@        . $T SEE IF RECORD SIZE IS LARGEST@D@@@@          SA,H2     A4,RRO
)@@G@@CDSZ1         . $A YES NO     @B@@@@          SA,H2     A4,RCDSZ2       RP
)@@G@@  .   @D@@@@          J         *PUT              . $E RETURN     @[@@@@RQ
)@@G@@.     @^@@@@.         FLUSH ROUTINE @[@@@@.     @C@@@@FLUSH     +0      RR
)@@G@@                    . $H      @E@@@@          LX        X8,BUF1ADD      RS
)@@G@@  . $P SET TO 1ST BUFFER@ @@@@          TZ        SWBUF     @A@@@@      RT
)@@G@@    LX        X8,BUF2ADD      @H@@@@          TZ        BRECNT          RU
)@@G@@  . $T CHECK IF ANYTHING IN LAST BLOCK    @E@@@@          SLJ       DFWIRV
)@@G@@O             . $A YES,DFWIO NO     @G@@@@          TP        IODONE    RW
)@@G@@        . $P WAIT FOR I/O COMPLETION      @ @@@@          ER        WAITRX
)@@G@@$     @E@@@@          DL        A0,IOPKT          . $P GET FILE NAME    RY
)@@G@@@B@@@@          DS        A0,EOFPKT         .   @B@@@@          DS      RZ
)@@G@@  A0,HDPKT          .   @E@@@@          TZ        DEVICE            . $TSA
)@@G@@ A TAPE FILE      @E@@@@          SLJ       WRTEOF            . $A YES,WSB
)@@G@@RTEOF NO    @B@@@@          LA        A0,NXTSECT        .   @G@@@@      SC
)@@G@@    SA        A0,EOFSECT        . $P SET UP TO WRITE HDR BLOCKS   @B@@@@SD
)@@G@@          SA        A0,EOFPKT+5       .   @E@@@@          LA        A0,XSE
)@@G@@1             . $P GET EOF BLK ADDR @B@@@@          A,U       A0,48     SF
)@@G@@        .   @B@@@@          SA,H2     A0,EOFPKT+4       .   @A@@@@      SG
)@@G@@    LA,U      A0,EOFPKT       @D@@@@          ER        IOW$            SH
)@@G@@  . $P DO I/O     @E@@@@          TZ        DEVICE            . $T A TAPSI
)@@G@@E FILE      @E@@@@          J         TFLUSH            . $A YES,TFLUSH SJ
)@@G@@      @F@@@@          LA        A0,X1             . $P COMPUTE HDR BLOCKSK
)@@G@@S     @B@@@@          AA,U      A0,20             .   @E@@@@          SASL
)@@G@@,H2     A0,HDPKT+4        . $P SET BUFFER ADDR  @B@@@@          LA,U    SM
)@@G@@  A0,HDPKT          .   @D@@@@          ER        IOW$              . $PSN
)@@G@@ DO I/O     @]@@@@TBACK.      @E@@@@          LA        A0,BLKCNT       SO
)@@G@@  . $P SAVE BLKCNT      @B@@@@          SA        A0,BLKCNTP        .   SP
)@@G@@@E@@@@          LA        A0,RCDCNT         . $P SAVE RECORD COUNT@B@@@@SQ
)@@G@@          SA        A0,RCDCNTP        .   @G@@@@          SLJ       NOTISR
)@@G@@FY            . $W PRINT NOTIFIER MESSAGE       @D@@@@          J       SS
)@@G@@  *FLUSH             . $E RETURN    @[@@@@.     @^@@@@.         PERFORM ST
)@@G@@I/O   @[@@@@.     @C@@@@DFWIO     +0                          . $H      SU
)@@G@@@F@@@@          TZ        TAPEHDR           . $T TAPE FILE HDR DONE     SV
)@@G@@@E@@@@          SLJ       WRTHDR            . $A YES NO,WRTHDR    @B@@@@SW
)@@G@@          TP        IODONE            .   @F@@@@          ER        WAITSX
)@@G@@$             . $P WAIT FOR PREVIOUS IO   @E@@@@          TZ,S1     IODOSY
)@@G@@NE            . $T CHK STATUS       @E@@@@          SLJ       CHKTAPE   SZ
)@@G@@        . $P CHK IF EOTAPE    @F@@@@          SX        X8,IOBUF        TA
)@@G@@  . $P SET UP BUFFER ADDR     @A@@@@          LA        A0,NXTSECT      TB
)@@G@@@F@@@@          SA        A0,IODRUM         . $P SET UP SECTOR ADDR     TC
)@@G@@@A@@@@          AA,U      A0,BLKSZ1       @F@@@@.                       TD
)@@G@@              . $P COMPUTE SECTOR ADDR    @E@@@@          SA        A0,NTE
)@@G@@XTSECT        . $P NXT AVAIL SECTOR @E@@@@          LA        A0,X1     TF
)@@G@@          . $P GET PKT ADDR   @D@@@@          ER        IO$             TG
)@@G@@  . $P DO I/O     @^@@@@          LA,U      A0,1@B@@@@          SA      TH
)@@G@@  A0,NXTWRD         .   @ @@@@          ANA       A0,SWBUF  @E@@@@      TI
)@@G@@    SA        A0,SWBUF          . $P RESET BUF SWITCH @A@@@@          LATJ
)@@G@@        A0,BLKCNT       @F@@@@          AA,U      A0,1              . $PTK
)@@G@@ UPDATE BLOCK COUNT     @A@@@@          SA        A0,BLKCNT       @E@@@@TL
)@@G@@          TZ        DEVICE            . $T A TAPE FILE      @E@@@@      TM
)@@G@@    SLJ       TBLK              . $A YES,TBLK NO      @[@@@@.     @A@@@@TN
)@@G@@.         INITIALIZE THE OLD BUFFER @[@@@@.     @E@@@@          LA      TO
)@@G@@  A0,BUF1ADD        . $P RESET BUFFER     @H@@@@          TZ        SWBUTP
)@@G@@F             . $T CHECK WHICH BUFFER TO INITIALIZE   @E@@@@          LATQ
)@@G@@        A0,BUF2ADD        . $P USE 2ND ONE      @^@@@@          LXI,U   TR
)@@G@@  A0,1@F@@@@          LA,U      A1,BLKSZ          . INITIALIZE BLOCK HEATS
)@@G@@DER   @B@@@@          SA        A1,0,*A0          .   @C@@@@          ANTT
)@@G@@A,U     A1,1              . $P -1   @B@@@@          LR        R1,A1     TU
)@@G@@        .   @B@@@@          SZ        A2                .   @G@@@@      TV
)@@G@@    LA,U      A1,A2             . ZEROS OUT REST OF THE BUFFER    @ @@@@TW
)@@G@@          BT        A0,0,*A1  @C@@@@          J         *DFWIO          TX
)@@G@@  . $J      @[@@@@.     @G@@@@DFWBUF                                . $HTY
)@@G@@ WRITE FILLED BUFFER TO FILE  @C@@@@          SLJ       DFWIO           TZ
)@@G@@  . $W      @C@@@@          J         PUT+1             . $E      @[@@@@UA
)@@G@@.     @A@@@@.         TAPE FILE ACCESS ROUTINES @[@@@@.     @C@@@@WRTHDRUB
)@@G@@    +0                          . $H      @D@@@@          SZ        TAPEUC
)@@G@@HDR           . $P RESET SW   @E@@@@          LA,U      A0,1            UD
)@@G@@  . $P COMPUTE REEL NO  @B@@@@          AA        A0,REELNO         .   UE
)@@G@@@B@@@@          SA        A0,REELNO         .   @E@@@@          LA      UF
)@@G@@  A0,X1             . $P GET HSR ADDR     @B@@@@          A,U       A0,2UG
)@@G@@0             .   @B@@@@          SA,H2     A0,THDR+4         .   @ @@@@UH
)@@G@@          DL        A0,IOPKT  @B@@@@          DS        A0,THDR         UI
)@@G@@  .   @ @@@@          LA,U      A0,THDR   @^@@@@          ER        IOW$UJ
)@@G@@@D@@@@          TZ,S1     THDR+3            . $T STATUS OK  @^@@@@      UK
)@@G@@    ER        ERR$@B@@@@          SLJ       WRTEOF            .   @ @@@@UL
)@@G@@          J         *WRTHDR   @[@@@@.     @A@@@@.         WRITE EOF TAPEUM
)@@G@@ MARK       @[@@@@.     @C@@@@WRTEOF    +0                          . $HUN
)@@G@@      @ @@@@          DL        A0,IOPKT  @ @@@@          DS        A0,TUO
)@@G@@EOF   @ @@@@          LA,U      A0,TEOF   @^@@@@          ER        IOW$UP
)@@G@@@ @@@@          J         *WRTEOF   @[@@@@.     @^@@@@.         TAPE FLUUQ
)@@G@@SH    @[@@@@.     @]@@@@TFLUSH.     @ @@@@          SLJ       WRTEOF    UR
)@@G@@@ @@@@          SLJ       WRTEOF    @ @@@@          J         TBACK     US
)@@G@@@[@@@@.     @B@@@@.         CHK NO. BLKS WRITTEN ON A TAPE  @[@@@@.     UT
)@@G@@@C@@@@TBLK      +0                          . $H      @E@@@@          LAUU
)@@G@@        A0,TAPEBLK        . $P UPDATE BLK CNT   @^@@@@          AA,U    UV
)@@G@@  A0,1@A@@@@          SA        A0,TAPEBLK      @E@@@@          TE,U    UW
)@@G@@  A0,MAXBLK         . $T MAX REACHED      @E@@@@          J         *TBLUX
)@@G@@K             . $A YES NO,*TBLK     @B@@@@          TP        IODONE    UY
)@@G@@        .   @ @@@@          ER        WAIT$     @]@@@@EOTAPE.     @ @@@@UZ
)@@G@@          SLJ       WRTEOF    @ @@@@          SZ        TAPEBLK   @E@@@@VA
)@@G@@          LA        A0,X1             . $P GET EOR ADDR     @ @@@@      VB
)@@G@@    A,U       A0,76     @A@@@@          SA,H2     A0,TEOR+4       @ @@@@VC
)@@G@@          DL        A0,IOPKT  @ @@@@          DS        A0,TEOR   @ @@@@VD
)@@G@@          L,U       A0,TEOR   @^@@@@          ER        IOW$@ @@@@      VE
)@@G@@    SLJ       WRTEOF    @ @@@@          SLJ       WRTEOF    @[@@@@.     VF
)@@G@@@A@@@@.         SWAP TAPE REEL AND WRT HDR@[@@@@.     @ @@@@          DLVG
)@@G@@        A0,IOPKT  @A@@@@          DS        A0,FITEMPKT     @A@@@@      VH
)@@G@@    L         A0,(0,FITEMPKT) @ @@@@          ER        TSWAP$    @ @@@@VI
)@@G@@          SLJ       WRTHDR    @ @@@@          J         *TBLK     @[@@@@VJ
)@@G@@.     @B@@@@.         CHK IF END OF TAPE ENCOUNTERED  @[@@@@.     @^@@@@VK
)@@G@@CHKTAPE   +0        .   @E@@@@          TNZ       DEVICE            . $TVL
)@@G@@ IS IT A TAPE FILE@C@@@@          ER        ERR$              . NO      VM
)@@G@@@E@@@@          LA,S1     A0,IODONE         . $P GET THE STATUS   @D@@@@VN
)@@G@@          TE,U      A0,2              . $T E O TAPE   @C@@@@          ERVO
)@@G@@        ERR$              . NO      @E@@@@          LA        A0,CHKTAPEVP
)@@G@@        . $P GET RETURN ADDR  @ @@@@          SA        A0,TBLK   @ @@@@VQ
)@@G@@          J         EOTAPE    @[@@@@.     @C@@@@.         NOTIFY RECORD VR
)@@G@@COUNT AND BLOCK COUNT   @[@@@@.     @C@@@@NOTIFY    +0                  VS
)@@G@@        . $H      @ @@@@          E$DIT     EDPKT     @ @@@@          E$VT
)@@G@@DECV    BLKCNTP   @ @@@@          E$COPY    9,DFMSG1  @ @@@@          E$VU
)@@G@@DECV    RCDCNTP   @A@@@@          E$COPY    12,DFMSG2       @B@@@@      VV
)@@G@@    E$FD2     HDPKT             .   @#@@@@          E$DITX  @F@@@@      VW
)@@G@@    P$RINT    (PF 2,14,PRINT)   . $P PRINT DATA FILE MSG    @ @@@@PF    VX
)@@G@@    FORM      12,6,18   @C@@@@          J         *NOTIFY           . $EVY
)@@G@@      @[@@@@.     @ @@@@.         NO RECORD UNLOADED  @[@@@@.     @C@@@@VZ
)@@G@@DFEMPTY                               . $H      @B@@@@          P$RINT  WA
)@@G@@  (PF 1,3,NORECORD)     @B@@@@          J         *SAVEX11          .   WB
)@@G@@@]@@@@$(4).       @B@@@@THDR      I$OT      'D$FILE0',W$ 28,0     @B@@@@WC
)@@G@@TEOF      I$OT      'D$FILE0',WEF$ 1,0    @B@@@@TEOR      I$OT      'D$FWD
)@@G@@ILE0',W$ 28,0     @A@@@@NORECORD  'NO RECORD UNLOADED'      @]@@@@SAVEX1WE
)@@G@@    +0@]@@@@SAVEX2    +0@]@@@@SAVEX3    +0@]@@@@BLKCNTP   +0@]@@@@RCDCNTWF
)@@G@@P   +0@ @@@@BRECNT    EQUF      0,X8,H1   @C@@@@HDPKT     I$OD      'D$FWG
)@@G@@ILE0     ',W$ 56,HDPKT 0@D@@@@EOFPKT    I$OD      'D$FILE0     ',W$ 28,EWH
)@@G@@OFPKT 0     @^@@@@DFMSG1    ' BLOCKS, '   @ @@@@DFMSG2    ' RECORDS IN  WI
)@@G@@ '    @]@@@@SAVEX11   +0@ @@@@EDPKT     E$PKT     14,PRINT  @^@@@@PRINT WJ
)@@G@@    RES       14  @#@@@@          END     ___@@@.         INITIALIZE THEWK
)@@G@@)@@[EK0^^G[]=]C-@=-)C-)CA@K@[ AA0@[V'^@@@@(@@@@GC8@@@@[@@@@[C@G@@@[@@@@@WL
)@@G@@C@E@@[AA@@@@)@D[F#@L#@L#@L@^@K)NK@@@/K@@@V(@@@@@ @@@@H/K@@@=(@E@@@'^@@[@WM
)@@G@@(@@@@TA@0@[BA@)@[AAB@@@@)@M[F][GK)N@K^G[@@@@@@@@COL@@@P@K@[0/K@@@V2W[)@@WN
)@@G@@CWG@@@C@E@@[NCK@@@&8K@@[R^K@@@AC@@@@)@V[##@L@K0^K0^^G[^G[^G[@@@@@@R@0@[BWO
)@@G@@R@)@[AR@K@[ [@[@@@C@@@@[R@K@@@'^@@]3R^X@@JAD@@@@)@<[F#@KK^@K0^K^G[^@@@@@WP
)@@G@@'^@@]3R^S@@J/K@@@>(4C@@JR]@@[]/K@@@!8K)@@$N8)@@E/K@K[VAE@@@@)@?[#@K0^K0^WQ
)@@G@@K0^K0^K0^K0^K@@@@@/K@@ !(@@@@TAA0@[V/K@K[VR@0@[BR@)@[AR@K@[ /K@@@>AF@@@@WR
)@@G@@)@4[F#@KK^@K0^K^G[^@@@@@'^@@#SR^S@@J/K@@@6(4C@@JR]@@[]/K@@@"8K)@@8N8)@@EWS
)@@G@@A@K@[ AG@@@@)@.[F@K0^K0^[#@L][H@K)N@R^K@@@/K@@[H(@@@@@[@@@@TC8@@@[@@@@@@WT
)@@G@@/K@K[VR@K@[ /K@@@6AH@@@@)[A[EK)NK^@K0^K[@@@@@@@@8K)@[KN8)@@E/K@@[C[4H@@JWU
)@@G@@COL)@@/K@@[H8KK@[ENCK@@@&8K@@[AI@@@@)[J[F@^G[^@^G[^G[^G[@@@@9*K@@]9*K@@WWV
)@@G@@9?W@@ZG@@@@GC@@@@#/K@@[I(4#@@JR@0@[]/K@K[@AJ@@@@)[S[]()C-@*) G[^C@[]@D#@WW
)@@G@@K@@@@@C@@@[1/,0@@@C/@@@@/,0@@@C/@@[W/C@@[2'=@@@@C8@@@UAK@@@@)[)[#]@)K)^KWX
)@@G@@0^K)DK0^K)D@@@@@@@C/@@@[/,0@@@9?@@[2/,0@@@9?@@@W/,0@@@C/@@@[/,0@@@AL@@@@WY
)@@G@@)[*[#]@KK)]K)EES]CKEC[N@K@@@@@R')@[+/C@@[2'=@@@@C8@@[+/,0@@@/,0@@@C/@@@.WZ
)@@G@@/,0@@@AM@@@@)[0[#][P][T][WK0^EKGCKF*KG)@@@'=@@@@[@@@@@G8@@@@[^N@@JK8@@@[XA
)@@G@@C@@@@@'=@@@@/,0@@@AN@@@@)[8[F#@K@EKG]A@+^#K@@@@@'=@@@@C@@@[4M@2)@@N8K@@@XB
)@@G@@&80@@[R@0@@[R8)@@G @@@@GR^N@@JAO@@@@)][[M@^G[[#@K@@@@@ ^[@@T[0[@[*\4K@@CXC
)@@G@@[4[@[*\4K@@CC8@@@[C8)@@J @@@@H 0[@[* 4[@[*AP@@@@)]F[M@K0^^G[[#@K@@[@[@[GXD
)@@G@@C@@@[7[@[@@0C@@@[6[@[@@OC@@@[5[@[@@CC8@@@][@[@@BC8@@@[AQ@@@@)]P[M(@6@ C#XE
)@@G@@1][0@@[@[@@4[@[@@S'=@@@@[0[@@#C8@@@@[C[@@^[C[@[H[C[@@1[C[@@PC8@@@@AR@@@@XF
)@@G@@)]Z[M@^G[@]=#S@@@@C8K@@@G8@@[8C@@@@[9*[@@@9?@@@WO@@@@@ @[@[( @[@@R @[@[JXG
)@@G@@[@[@[KAS@@@@)]([E]=#S]@-)C-@'@@@@@@@'=@@@@C@@@[8/K@@[I(4[@[*[^W@@@[@[@@EXH
)@@G@@G8@@@@[^W@@@[@[@@DAT@@@@)]2@F@@@@@@@)@@@Q@)@@@@@)@J@&@)@@@@@@@@@@@@@@@@@XI
)@@G@@@@@@@@[@@@@@@@@@@@@@@@@@/K@@[IAU@@@@)@N[Y@)@@@@@0     D$FILE      @ASG,AXJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AV@@@@)@Y[Y@)@@@@@4     D$FILEXK
)@@G@@3     D$FILE2     D$FILE1     D$FILE0     D$FILE    . AW@@@@)@([Q@)@@@@@XL
)@@G@@@@@@@@9     D$FILE8     D$FILE7     D$FILE6     D$FILE5     D$FILEAX@@@@XM
)@@G@@)]3[M@@(@6]@@@@@@@/K@@^X?@@@@KH@[@@BC8@@@@G9@@@]C[@@[#R][@@E*@[@@AR][@@DXN
)@@G@@@@@@@@AY@@@@)].[U@@@@@@@N@K@[#&;@@@[C^E@@[[@D)@@C@E@@@[ D)@@[DD@@@&'K@@[XO
)@@G@@O]K@@CR]L@@BH9@@@[AZ@@@@)#C[U@@@@@@@C^1@@PN#0@@G[@[@@3G8@@@[C@[@@3[CC@@@XP
)@@G@@G8@@@[CCC@@@AAL@@BP]K@@CM]W)@@BA@@@@)#N[UK@K@@K@'^@@#'*CC@@@R][@@E*@[@@AXQ
)@@G@@R][@@D@@@@@@/K@K]3[ [@@1[ [@@P/K@@#R?[@@@JBB@@@@)#Y[EK)Y^G[^G[[@@@@@@@@@XR
)@@G@@[@[@@6C@[@@C'^@@^\*4[@[*9*@@[E9*@@[K9?[@@@'=@@@@0@[@@#BC@@@@)#$[F#@K^G[]XS
)@@G@@&@+^#8)@@@@@C@@@@[/K@@^5*4[@[*'=@@@@C8@@[K[^@@[OO;@@@0C@@@@[[@@@[PBD@@@@XT
)@@G@@)#0[EK0^ES]CKJ+A@)-)C)@@'^@@ U[@@@[DC@[@@3[@@@[CC@[@@2'=@@@@C8@@[E[^@@[IXU
)@@G@@G8@@@OBE@@@@)#9[N@[@^CB-@@@@@@C@[@@CAA[@@^'^@@ L*4[@@#'=@@@@0@[@@#'^@@^ZXV
)@@G@@*0[@[*@@@@@@/K@K#SBF@@@@)^#[MEKK@-[]@@@@@@C@[@@2[@[@@AH@[@@A[@[@@BC8@@@[XW
)@@G@@'=@@@@C@@@@[[@[@@CG8@@@@[@[@@ BG@@@@)^H[M[@@]=#S@@@@@@[@W)@@C8K@@@&;@@@[XX
)@@G@@C@[@@E*@[@@AC@[@@D'^@@^8*4[@[*[@[@@2G8@@@[BH@@@@)^R[U@^[@K@@C8@@@[ 0[@[*XY
)@@G@@@@@@@@/K@@]4'^@@#'/K@K#'M#H)@@C8K@@I @@@@IN@K@@HH8K@@[BI@@@@)^+[E@K0^^G[XZ
)@@G@@]&@+^#8@@@@@'=@@@@C8@@@39*@@@39?[@@@[^@@@7O;@@@OC@@@@[[^[@@TG^[@@TBJ@@@@YA
)@@G@@)^:[F#@L][T@K@K0^ES]CKJ)'=@@@@C8@@@89*@@@89?[@@@@@@@@@/K@K^Z'^@@^\'=@@@@YB
)@@G@@*4@@@6BK@@@@)^4[N@K^[@@]=^M@@@/K@K^8%8@@@@[@[@[(G8@@@[C@[@[(@@@@@@/K@@#4YC
)@@G@@'^@@^\'^@@^\/K@K^\BL@@@@)^"[EK)YK@^G[[#@K@@@@@@@9*@@@.9?[@@@[^@@[[O;@@[GYD
)@@G@@C@@@@[ @[@[('^@@^\'=@@@@0@[@@#BM@@@@) B[]()C-@")C@-)C-)C-[A@@@@@@@'=@@@@YE
)@@G@@R#@@[89*@@@]9?[@@@'^@@^\'^@@^\'=@@@@R;@@@.BN@@@@) J[N@K@K)Q[][T@K@[@@@^8YF
)@@G@@C@@@ L'=@@@@%8@@@]C4[@@#'=@@@@(4[@[*@@@@@@/K@K^8'^@@^ZBO@@@@) T[#@]&@+^@YG
)@@G@@]A@+^@'A@)@@@@@@@@C8K@@DC8@@[Q/,0@@@C@@@[C/,0@@@C/@@[W@@@@@@/K@@ @BP@@@@YH
)@@G@@) -[#]@5#@L]@X#@KK)HK0^K)D@@@@/,0@@@9?@@[E/,0@@@C8K@@GC8@@[S/,0@@@C@@@[DYI
)@@G@@/,0@@@BQ@@@@) (@;]@(#@L]]L@K0^K)=K0^@@@@@@@@@@@@/K@K[V'=@@@@R#@@['/K@K UYJ
)@@G@@'=@@@@R#@@[9/,0@@@BR@@@@)@3[I@)#1?C#0@/V][@@@@@@@@@@@@@@@@@@0     D$FILEYK
)@@G@@@@W@@@@@@@@@@@@@@@0     D$FILEBS@@@@)@/[Q@)@/V]@/@@@@@@@@@@@LOADEDORD UNYL
)@@G@@NO REC@@W@@@@@@@@@@@@@@@0     D$FILE@@[@@@BT@@@@)[A[Q@)@@/V]@/*@@@@@@@@@YM
)@@G@@@@8@[E@@@@@@@@@@@@0     D$FILE@@@@@@@@@@@@@@@@@@@@@@@@BU@@@@)[K[Q@)#1?C#YN
)@@G@@2)@@@@DS IN  RECORS,     BLOCK@@@@@@@@W@[K@@@@@@@@@@@@0     D$FILEBV@@@@YO
)@@G@@)[U[A@)E@@@@)[0@I@)@@@@@@@[@@[@@@@@@@@@@@@@@@@@@[[@@@@@@@@@@@&I@[+@@@@@@YP
)@@G@@      BW@@@@)[1[Q@)])@O])O@@@@@[#@[]@]I@[+@@@@@]EORO@@EOFO@@HDRO@@@@H@@]YQ
)@@G@@POS/20@@.,//ASG,UPBX@@@@@@^@@ @@D@@>@[N@@#@[Z@@@@@@@@@@@@@ 0)@@@@@)@@@@@YR
)@@G@@@@@@[;EDIT$       EDITR$      ECHAR$      ECOL$       ESKIP$      ECLR$ YS
)@@G@@      EOCTV$      EDECV$      EFD1$       EFD2$       EDITX$      ECOLN$YT
)@@G@@      EMSGR$      ECOPY$      EPACK$      W$          WEF$        PGMSW YU
)@@G@@      ART         C18         CSF$        ASGERR      ERR$        LAST$DYV
)@@G@@      BUFSZ       MCORE$      FITEM$      BLKSZ       TDATE$      TINTL$YW
)@@G@@      WAIT$       IOW$        BLKSZ1      IO$         MAXBLK      TSWAP$YX
)@@G@@      PRINT$      DF$AMW      @@[@@@@@@@@@DF$AMF      @@[@@@@@@@@1NAMED1YY
)@@G@@      @@^@@@@@@@@Z@]E@@<COMM-ERR    @]E@@WCOM-RTN-CURR@]E@@(CONVGREG    YZ
)@@G@@@]E@@ CONVJUL     @]E@@^DCLOSE      @]E@@>DCOM$$*[@@@@*SDFF*@#@@@@      ZA
)@@G@@    AXR$    @#@@@@$(4)      LIT.    @]@@@@$(1).       @[@@@@.     @G@@@@ZB
)@@G@@.         THIS ROUTINE WILL READ RECORDS FROM T$FILE AND WRITE TO D$FILEZC
)@@G@@@[@@@@.     @C@@@@BLDD$F*                               . $H      @E@@@@ZD
)@@G@@          SX        X11,SAVEX11       . $P SAVE RETURN ADDR @E@@@@      ZE
)@@G@@    DL        A0,USENME         . $P GET D$FILE NAME  @E@@@@          DSZF
)@@G@@        A0,NAMED1         . $P GIVE IT TO DF$AMW@G@@@@          TNZ     ZG
)@@G@@  ARTKEY            . $T SHOULD ART KEY BE SAVED      @E@@@@          J ZH
)@@G@@        RDLOOP            . $A YES NO,RDLOOP    @E@@@@          LR,U    ZI
)@@G@@  R3,3              . $P LENGTH=3 WORDS   @E@@@@          LA        A0,AZJ
)@@G@@RTKEY         . $P GET THE ART KEY  @F@@@@          SA        A0,ARTHDR+ZK
)@@G@@1       . $P SAVE IT IN THE PKT     @D@@@@          LX,U      X10,ARTPKTZL
)@@G@@        . $P DF$AM PKT  @D@@@@          LMJ       X11,DF$AMW        . $PZM
)@@G@@ WRITE IT   @E@@@@RDLOOP                                . $H READ T$FILEZN
)@@G@@ LOOP @E@@@@          LX,U      X10,TFPKT         . $P GET T$FILE PACKETZO
)@@G@@@E@@@@          LMJ       X11,TF$SQR        . $P READ ONE RECORD  @E@@@@ZP
)@@G@@          TZ        STATUS            . $T GOOD STATUS      @E@@@@      ZQ
)@@G@@    J         ENDIT             . $A YES NO,ENDIT     @E@@@@          LAZR
)@@G@@,H2     A0,TFPKT+2        . $P GET RECORD LENGTH@C@@@@          ANA,U   ZS
)@@G@@  A0,1              . $P -1   @H@@@@          LR        R3,A0           ZT
)@@G@@  . $P R3= RECORD LEN               -1    @E@@@@          LX        A1,BZU
)@@G@@UFAD          . $P GET BUFER ADDR   @F@@@@          LA        A0,0,A1   ZV
)@@G@@        . $P GET FIRST WORD(DBP)    @F@@@@          SA        A0,DFPKT  ZW
)@@G@@        . $P BUILD DF$AM PACKET     @E@@@@          AA,U      A1,1      ZX
)@@G@@        . $P COMPUTE DATA ADDR@E@@@@          SA        A1,DFPKT+1      ZY
)@@G@@  . $P SAVE IT IN DFPKT @E@@@@          LX,U      X10,DFPKT         . $PZZ
)@@G@@ CALL DF$AM       @C@[@@          LMJ       X11,DF$AMW+1      . $       AA
)@@G@@@C@@@[          LMJ       X11,DF$AMW        . $       @D@@@@          J AB
)@@G@@        RDLOOP            . $J TRY NXT    @[@@@@.     @C@@@@ENDIT       AC
)@@G@@                          . $H      @G@@@@          LMJ       X11,DF$AMFAD
)@@G@@        . $P END OF ALL, FLUSH D$FILE'S   @E@@@@          LX        X11,AE
)@@G@@SAVEX11       . $P GET RETURN ADDR  @D@@@@          J         0,X11     AF
)@@G@@        . $J RETURN     @]@@@@$(4).       @]@@@@ARTPKT    +0@^@@@@      AG
)@@G@@    +ARTHDR       @^@@@@ARTHDR    +077,0,2      @]@@@@          +0@D@@@@AH
)@@G@@TFPKT     +0                          . TF$AM PACKET  @]@@@@BUFAD     +0AI
)@@G@@@]@@@@          +0@A@@@@STATUS    EQUF      TFPKT+2,,T1     @D@@@@DFPKT AJ
)@@G@@    +0                          . DF$AM PKT     @]@@@@          +0@]@@@@AK
)@@G@@SAVEX11   +0@#@@@@          END     ___ 0)^))^@)@F@@_@^@)^@)^@)^@)^@)D-HAL
)@@G@@)@@[##@L]@[]@ ]@D@^C@=G[@@@@@@[@@@@#C@@@@@N80@@#/K@@@E(@@@@@9*@@@@9?@@@@AM
)@@G@@A]0@@DAA@@@@)@C[]()C-@AO0^K)^K0^K^G[@@@@@@H8@@@[C^@@@A/K@@@T*W@@@A/,0@@@AN
)@@G@@R')@@^/,0@@@R')@@@AB@@@@)@K[EK0^^G[[#@K()C-@A)@@/K@@@E/,0@@@R')@@B[@K@@CAO
)@@G@@G8K@@[[@@@@BC@H@@@R#K@@ N@0@@GAC@@@@)@T@V]@P#@K@)@@@6@)/S@@@@@@@@@@@@@@@AP
)@@G@@@@@@@@@_@@@]@@@@@]@@@@@@/KF@@@R]0@@D/,0@@@AD@@@@)@A@&@)@@@@@@@@@@@@@@@@@AQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AE@@@@@@@@@@@@@@@@AR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AS
)@@G@@@@^@@ @@D@@A@@P@@[@@T@@@@@@@@@@@@@@W)@@@@@)@@@@@@@@@@EUSENME      NAMED1AT
)@@G@@      ARTKEY      DF$AMW      TF$SQR      DF$AMF      BLDD$F      @@[@@@AU
)@@G@@@@@@@@F04D13F05D50F06D13*[@@@@*SDFF*@]@@@^$(1)        @]@@@^ .          AV
)@@G@@@A@@@^ . INSERT COMMAND WORKER ROUTINE    @]@@@^ .          @]@@@^INSERTAW
)@@G@@*     @^@@@^          AXR$          @]@@@^ .          @A@@@^PF1       FOAX
)@@G@@RM      12,6,18         @]@@@^ .          @C@@@^          SX,H2     X11,AY
)@@G@@RETURN     .    INSERT  @A@@@^          SX,H2     X10,X10SAV     .@C@@@^AZ
)@@G@@       .  L$SNAP    'WRKPKT',0,8,WRKPKT         @C@@@^          SZ      BA
)@@G@@  SW1               .         @E@@@^          SZ        SW2             BB
)@@G@@  . $P ZERO SWITCHES    @E@@@^          LA,S3     A0,0,X10       .    TYBC
)@@G@@PE TO A0          @A@@@^          TNZ       A0             .@A@@@^      BD
)@@G@@    ER        ERR$           .@A@@@^JMPTBL    J         JMPTBL,A0      .BE
)@@G@@@C@@@^          J         I              .    TYPE = 1@C@@@^          J BF
)@@G@@        IB             .    TYPE = 2@C@@@^          J         IR        BG
)@@G@@     .    TYPE = 3@C@@@^          J         IRB            .    TYPE = 4BH
)@@G@@@C@@@^          J         IS             .    TYPE = 5@C@@@^          J BI
)@@G@@        ICTL           .    TYPE = 6@C@@@^          J         IK        BJ
)@@G@@     .    TYPE = 7@E@@@^          J         ICTLA             . TYPE = 0BK
)@@G@@10          @E@@@^          J         ICTLD             . TYPE = 011    BL
)@@G@@      @]@@@^IRB .       @]@@@^ICTL .      @]@@@^IK .        @^@@@^      BM
)@@G@@    ER        ERR$@]@@@^/           @]@@@^ .          @A@@@^ . INSERT SEBN
)@@G@@T WORKING ROUTINE       @A@@@^ . SYNTAX: IS RECORD-NAME SET-NAME  @E@@@^BO
)@@G@@ . PHYSICALLY, NO CHANGE TO DATA OF RECORD(S) INVOLVED      @G@@@^ . LOGBP
)@@G@@ICALLY,  THE CURRENT OCCURENCE OF THE RECORD NAMED WILL BE        @G@@@^BQ
)@@G@@ .             INSERTED IN THE SET NAMED. THE LOGICAL INSERT POINT IS   BR
)@@G@@@G@@@^ .             NEXT TO THE CURRENT OF THE SET NAMED UNLESS THE CURBS
)@@G@@RENT  @G@@@^ .             OF THE SET NAMED HAPPENED TO BE THE SAME RECOBT
)@@G@@RD          @E@@@^ .             OCCURENCE TO BE INSERTED. IN THAT CASE BU
)@@G@@      @G@@@^ .             CASE, THE PREVIOUS CURRENT OF THE SET NAMED WBV
)@@G@@ILL BE USED @]@@@^ .          @]@@@^ .          @]@@@^ .          @]@@@^BW
)@@G@@ .          @]@@@^IS .        @^@@@^ . X10 POINTS TO PACKET @^@@@^ . A0 BX
)@@G@@HAS TYPE: 5 FOR IS@]@@@^ .          @A@@@^          TZ,H2     2,X10     BY
)@@G@@      @A@@@^          J         ERROR61         @A@@@^          TZ,H2   BZ
)@@G@@  3,X10           @A@@@^          J         ERROR62         @C@@@^      CA
)@@G@@    TNZ       2,X10             .         @C@@@^          J         ERROCB
)@@G@@R61           .         @C@@@^          TNZ       3,X10             .   CC
)@@G@@      @C@@@^          J         ERROR62           .         @A@@@^ . CHECD
)@@G@@CK IF RECORD NAME IS VALID    @G@@@^           LX,H1    X8,2,X10       .CE
)@@G@@ SYM TAB ENT ADDR FOR REC TO X8     @G@@@^           LA,S4    A1,0,X8   CF
)@@G@@     . $P TYPE OF FIRST SYMBOL TO A1      @G@@@^           TE,U     A1,0CG
)@@G@@2          . $T IS VARIABLE A RECORD NAME       @E@@@^           J   NRNCH
)@@G@@MSG              . $A NO,NRNMSG YES       @G@@@^           LA,T1    A2,1CI
)@@G@@,X8        . $P SEQUENCE NUMBER TO A2           @^@@@^           ANA,U  CJ
)@@G@@  A2,1@G@@@^           TG,H1    A2,TT1         . $P CHECK IF SEQUENCE # CK
)@@G@@IN RANGE    @A@@@^           ER       ERR$           .@G@@@^           ACL
)@@G@@A,H2    A2,TT1         . $P A2 POINTS TO SEQUENCE TBL ENTRY @G@@@^      CM
)@@G@@     SA       A2,RSEQAD      . $P SAVE ADDRESS OF REC SEQ ENT     @A@@@^CN
)@@G@@           TNZ,H2   0,A2           .@A@@@^           J        ERROR66   CO
)@@G@@     .@A@@@^           LA,T1    A1,0,A2        .@G@@@^           SA     CP
)@@G@@  A1,IRCODE      . $P RECORD CODE TO IRCODE           @A@@@^ . CHECK IF CQ
)@@G@@SET NAME IS VALID       @G@@@^           LX,H1    X9,3,X10       . $P SYCR
)@@G@@M TAB ENT ADDR FOR SET TO X9  @E@@@^           LA,S4    A2,0,X9        .CS
)@@G@@ $P TYPE TO A 2         @G@@@^           TE,U     A2,01          . $T ISCT
)@@G@@ VARIABLE A SET NAME          @E@@@^           J        ERROR64        .CU
)@@G@@ $A NO,ERROR64 YES      @E@@@^           LA,T1    A0,1,X9        . $P SECV
)@@G@@T CODE TO A0      @G@@@^           SA       A0,ISCODE      . $P SAVE SETCW
)@@G@@ CODE IN ISCODE         @A@@@^          LA        A0,RSEQAD .     @A@@@^CX
)@@G@@          LX,H2     X8,0,A0   .     @G@@@^          SX        X8,IRBFAD CY
)@@G@@. $P SAVE RECORD BUFFER ADDRESS IN IRBFAD @C@@@^          LA        A0,1CZ
)@@G@@,X8           .         @G@@@^          SA        A0,INSDBP         . $PDA
)@@G@@ DBP OF REC TO INS TO INSDBP  @A@@@^          AX,U      X8,2      . $   DB
)@@G@@@G@@@^          SX        X8,IRADDR . $P SAVE REOORD HEADER ADDRESS IN IDC
)@@G@@RADDR @]@@@^ .          @C@@@^ . CHECK IF RECORD CAN PARTICIPATE IN SET DD
)@@G@@      @^@@@^ . A1 HAS RECORD CODE   @]@@@^ .          @C@@@^          TNDE
)@@G@@Z,H1    C9        . $ ANY NEW SCHEMA@A@@@^          J         $+3       DF
)@@G@@.     @A@@@^          LX,U      X10,C9    .     @A@@@^          J       DG
)@@G@@  ISC1SE    .     @A@@@^          LX,U      X10,C1    .     @G@@@^ISC1SEDH
)@@G@@ .                      . $P LOAD ADDR OF PROPER C TABLE, C1 OR C9@G@@@^DI
)@@G@@          SLJ       TABSE     . $W TABSE SEARCH C1 OR C9 TABLES         DJ
)@@G@@@E@@@^          TZ        A2        . $T SUCCESSFUL SEARCH        @E@@@^DK
)@@G@@          J         NCENMSG   . $A NO,NCENMSG YES           @G@@@^      DL
)@@G@@    SA        A0,C1ENAD . $P SAVE ADDR OF C TBL ENT IN C1ENAD     @G@@@^DM
)@@G@@          LR,S4     R1,0,A0   . $P # OF AUTO & OWNER ENTRIES TO R1      DN
)@@G@@@E@@@^          LA        A1,ISCODE . $P SET CODE TO A1           @^@@@^DO
)@@G@@          AA,U      A0,1@^@@@^          LXI,U     A0,1@E@@@^ISLP1     JGDP
)@@G@@D       R1,$+2    . $T DONE WITH ALL ENTRIES    @C@@@^          J       DQ
)@@G@@  ISOUT1    . $A YES,ISOUT1 NO@E@@@^          TE,T2     A1,0,*A0  . $T SDR
)@@G@@ET CODES EQUAL          @C@@@^          J         ISLP1     . $A NO,ISLPDS
)@@G@@1 YES @A@@@^          ANA       A0,(1,1)        @E@@@^          LA,T3   DT
)@@G@@  A3,0,A0   . $P TEST TYPE OF ENTRY       @C@@@^                        DU
)@@G@@      . $T OWNER ENTRY  @E@@@^          JN        A3,ERROR67     . $A YEDV
)@@G@@S,ERROR67 NO      @G@@@^          SA        A0,AENTAD      . $P SAVE SETDW
)@@G@@ ENTRY ADDR IN AENTAD   @G@@@^          SA,H2     A1,SETCPKT     . $P SEDX
)@@G@@T CODE TO SETCPKT,,H2         @G@@@^          SLJ       SETCUR         .DY
)@@G@@ $W SETCUR EXTABLISH SET CURRENCY   @E@@@^          TZ,H1     SETCPKT   DZ
)@@G@@     . $T SUCCESSFUL          @E@@@^          J         NOSETMSG       .EA
)@@G@@ $A NO,NOSETMSG YES     @]@@@^ .          @G@@@^ . PREPARE TO LINK RECOREB
)@@G@@D WHOSE SEQUENCE TBLE POINTER IS IN RSEQAD INTO @C@@@^ . AUTOMATIC SET WEC
)@@G@@HOSE CODE IS IN SETCPKT       @C@@@^ . DBP OF RECORD TO INSERT IS IN INSED
)@@G@@DBP         @G@@@^          LA,U      A0,1           . $P AUTO MEMBER COEE
)@@G@@DE TO A0          @E@@@^          SA        A0,ISLNKSW     . $P SET ISLNEF
)@@G@@KSW         @G@@@^          SLJ       SETLINK        . $W SETLINK LINK REG
)@@G@@ECORD IN AUTO SET @]@@@^ .          @A@@@^ . UPDATE THE TEMPORARY FILE  EH
)@@G@@      @]@@@^ .          @G@@@^          LA        A0,IRBFAD      . $P REEI
)@@G@@CORD BUFFER ADDR TO A0        @C@@@^          SLJ       TFCHANGE       .EJ
)@@G@@ $W TFCHANGE@A@@@^          J         ISEXT           @]@@@^ .          EK
)@@G@@@]@@@^ .          @G@@@^ISOUT1 . RECORD DOES NOT PARTICIPATE IN SET AS OEL
)@@G@@WNER OR AUTO MEMBER     @C@@@^       . CHECK IF IT CAN BE A MANUAL SET  EM
)@@G@@      @G@@@^          TN        0,A0           . $ A0 SHOULD POINT TO 1SEN
)@@G@@T MANUAL WRD@^@@@^          ER        ERR$@G@@@^          SA        A0,MEO
)@@G@@WRDAD      . $P SAVE ADDR OF 1ST MAN WRD        @A@@@^          LA,U    EP
)@@G@@  A0,1           .@G@@@^          SA        A0,ISLNKSW     . $P INDICATEEQ
)@@G@@ CALL FROM  IS          @G@@@^          SLJ       MPTRFND        . $W MPER
)@@G@@TRFND FIND THE MANUAL SET ENT @G@@@^          TNZ       MENTAD         .ES
)@@G@@ $T CAN RECORD PARTICIPATE IN SET   @E@@@^          J         ERROR70   ET
)@@G@@     . $S NO,ERROR70 YES      @G@@@^          TZ        MSPARSW        .EU
)@@G@@ $T RECORD PARTICIPATES IN SET      @E@@@^          J         ERROR71   EV
)@@G@@     . $A YES,ERROR71 NO      @]@@@^ .          @E@@@^ . CHECK IF ENOUGHEW
)@@G@@ SPACE IS RESERVED FOR POINTERS           @]@@@^ .          @G@@@^      EX
)@@G@@    LX        X8,MWRDAD      . $P ADDR OF 1ST MAN WRD TO X8       @E@@@^EY
)@@G@@          LA,S5     A1,0,X8        . $P RES WRDS TO A1      @G@@@^      EZ
)@@G@@    ANA       A1,TOTMPTR     . $P # OF REMAINING PTRS TO A1       @G@@@^FA
)@@G@@          LX        X9,MENTAD      . $P ADDR OF MAN SET ENTRY TO X9     FB
)@@G@@@G@@@^          TLE,S2    A1,0,X9        . $T ENOUGH WORDS LEFT FOR POINFC
)@@G@@TERS  @E@@@^          J         ERROR72        . $A NO,ERROR72 YES      FD
)@@G@@@E@@@^          LA,T2     A1,0,X9        . $P SET CODE TO A1      @G@@@^FE
)@@G@@          SA,H2     A1,SETCPKT     . $P SET CODE TO SETCPKT,,H2         FF
)@@G@@@G@@@^          SLJ       SETCUR         . $W SETCUR ESTABLISH SET CURREFG
)@@G@@NCY   @E@@@^          TZ,H1     SETCPKT        . $T SUCCESSFUL          FH
)@@G@@@E@@@^          J         NOSETMSG       . $A NO,NOSETMSG YES     @G@@@^FI
)@@G@@          LX        X9,MENTAD      . $P ADDR OF MAN SET ENTRY TO X9     FJ
)@@G@@@]@@@^ .          @A@@@^          LA        A2,TOTMPTR     .@G@@@^      FK
)@@G@@    ANA       A2,NUMPTR      . $P # OF POINTERS TO BE SHIFTED DOWN@A@@@^FL
)@@G@@          LR        R1,A2           @G@@@^          LA        A2,IRADDR FM
)@@G@@     . $P ADDR OF MAN REC TO A2           @G@@@^          AA        A2,MFN
)@@G@@PTRDIS     . $P A2 POINTS TO INSERT POINT       @A@@@^          SA      FO
)@@G@@  A2,MPTRADD     .@A@@@^          AA        A2,R1          .@G@@@^      FP
)@@G@@    ANA,U     A2,1           . $P A2 POINTS TO LAST MAN PTR       @A@@@^FQ
)@@G@@          LA        A3,A2          .@G@@@^          AA,S2     A3,0,X9   FR
)@@G@@     . $P A3 POINTS TO DESTINATION ADDR   @G@@@^          LXI,U     A2,-FS
)@@G@@1          . $P A2 WILL DECREMENT UPON INDEXING @G@@@^          LXI,U   FT
)@@G@@  A3,-1          . $P A3 WILL DECREMENT UPON INDEXING @^@@@^ . PUSH POINFU
)@@G@@TERS DOWN   @A@@@^ISLP2     JGD       R1,$+2          @A@@@^          J FV
)@@G@@        ISOUT2          @A@@@^          LA        A0,0,*A2        @A@@@^FW
)@@G@@          SA        A0,0,*A3        @A@@@^          J         ISLP2     FX
)@@G@@      @]@@@^ISOUT2 .    @]@@@^ .          @G@@@^ . PROCEED TO SET MFCW; FY
)@@G@@USE MSETNUM TO DETERMINE WHICH BIT TO SET       @]@@@^ .          @^@@@^FZ
)@@G@@          LA,U      A4,1@A@@@^          LX,U      X9,36           @A@@@^GA
)@@G@@          AN        X9,MSETNUM      @G@@@^          LSSL      A4,0,X9   GB
)@@G@@     . $P A4 CONTAINS NEW BIT IN POSITION @]@@@^ .          @C@@@^ . OR GC
)@@G@@NEW BIT WITH MFCW TO FORM NEW ONE         @]@@@^ .          @G@@@^      GD
)@@G@@    LX        X8,MWRDAD      . $P ADDR OF 1ST MANUAL WRD TO X8    @G@@@^GE
)@@G@@          LA        A0,IRADDR      . $P ADDR OF INSERTED RCD TO A0      GF
)@@G@@@E@@@^          AA,S6     A0,0,X8        . $P A0 POINTS TO MFCW   @G@@@^GG
)@@G@@          OR        A4,0,A0        . $P OR NEW BIT WITH MFCW, MFCW TO A5GH
)@@G@@@E@@@^          SA        A5,0,A0        . $P UPDATE MFCW         @]@@@^GI
)@@G@@ .          @A@@@^          LA,U      A0,2           .@C@@@^          LAGJ
)@@G@@        A1,MENTAD         .         @G@@@^          SA        A1,AENTAD GK
)@@G@@        . $P ADDR OF SET ENTRY TO AENTAD  @G@@@^          LA        A2,IGL
)@@G@@RBFAD         . $P ADDR OF BUFFER TO IRBFAD     @C@@@^          LA      GM
)@@G@@  A3,1,A2           .         @G@@@^          SA        A3,INSDBP       GN
)@@G@@  . $P DBP OF RECORD TO INSDBP      @]@@@^ .          @A@@@^ . GO LINK RGO
)@@G@@ECORD IN MANUAL SET     @A@@@^ . RECORD ADDRESS IS IN IRADDR      @C@@@^GP
)@@G@@ . MANUAL PTR ADDRESS FOR SET IS IN MPTRADD     @A@@@^ . DBP OF RECORD IGQ
)@@G@@S IN INSDBP       @E@@@^ . DISPLACEMENT OF FIRST MANUAL POINTER IN MPTRDGR
)@@G@@IS          @A@@@^ . ADDRESS OF SET ENTRY IN AENTAD   @A@@@^ . A0 HAS COGS
)@@G@@DE FOR MANUAL SET LINK  @]@@@^ .          @E@@@^          SLJ       SETLGT
)@@G@@INK        . $W SETLINK LINK IN SET @]@@@^ .          @^@@@^ . UPDATE TEGU
)@@G@@MPORARY FILE@A@@@^          LA        A0,IRBFAD       @G@@@^          SLGV
)@@G@@J       TFCHANGE       . $W TFCHANGE CHANGE TEMP FILE       @A@@@^      GW
)@@G@@    J         ISEXT           @]@@@^ .          @]@@@^ .          @]@@@^GX
)@@G@@ .          @]@@@^ .          @]@@@^ .          @C@@@^MPTRFND   +       GY
)@@G@@  0              . $H MPTRFND @C@@@^ . FIND OUT WHERE THE 1ST MANUAL POIGZ
)@@G@@NTER IS.    @C@@@^ . POINTER TO FIRST MANUAL WORD IS IN MWRDAD    @A@@@^HA
)@@G@@ . SET CODE IS IN LOCATION ISCODE   @A@@@^ . RECORD ADDRESS IS IN IRADDRHB
)@@G@@      @G@@@^          LX        X8,MWRDAD      . $P ADDR OF FIRST MANUALHC
)@@G@@ WRD TO X8  @G@@@^          SZ        MENTAD         . $P ZERO ADDRESS OHD
)@@G@@F MANUAL SET ENTRY@G@@@^          LX,S6     X9,0,X8        . $P DISPLACEHE
)@@G@@MENT OF MFCW TO X9      @G@@@^          LR,S2     R1,0,X8        . $P # HF
)@@G@@OF MANUAL SETS TO R1          @C@@@^          LA        A3,R1           HG
)@@G@@  .         @A@@@^          LA        A4,X9          .@G@@@^          AAHH
)@@G@@,U      A4,1           . $P A4 HAS DISPLACEMENT OF 1ST PTR  @E@@@^      HI
)@@G@@    SZ        MSPARSW        . $P ZERO MSPARSW        @G@@@^          AXHJ
)@@G@@        X9,IRADDR      . $P X9 POINTS TO MFCW OF REC TO INS @G@@@^      HK
)@@G@@    SZ        A5             . $P A5 TO COUNT # OF MAN PTRS       @E@@@^HL
)@@G@@          LA        A1,0,X9        . $P MFCW TO A1          @A@@@^      HM
)@@G@@    LA        A2,ISCODE       @A@@@^          AX,U      X8,2           .HN
)@@G@@@]@@@^MANLP1 .    @G@@@^          JGD       R1,$+2         . $T ARE WE DHO
)@@G@@ONE WITH ALL MAN SETS   @E@@@^          J         MANOUT1        . $A YEHP
)@@G@@S,MANOUT1 NO      @E@@@^          TE,T2     A2,0,X8        . $T SET CODEHQ
)@@G@@S EQUAL     @E@@@^          J         MPTGT1         . $A NO,MPTGT1 YES HR
)@@G@@      @G@@@^          SX        X8,MENTAD      . $P SAVE ADDRESS OF MANUHS
)@@G@@AL SET ENTRY@G@@@^          SA        A4,MPTRDIS     . $P SAVE DISPLACEMHT
)@@G@@ENT OF 1ST MAN PTR@G@@@^          SA        A5,NUMPTR         . $P SAVE HU
)@@G@@PTR NUMS UP TO INS      @C@@@^          ANA       A3,R1             .   HV
)@@G@@      @G@@@^          SA        A3,MSETNUM        . $P SAVE # OF SETS, SHW
)@@G@@T AT 1      @G@@@^          JP        A1,MPTGT1      . $T DOES RECORD PAHX
)@@G@@RTICIPATE IN SET  @E@@@^          LA,U      A0,1           . $A NO,MPTGTHY
)@@G@@1 YES       @G@@@^          SA        A0,MSPARSW     . $P SET MSPARSW TOHZ
)@@G@@ IND REC PARTICIP;@E@@@^                                   .    IN MANUAIA
)@@G@@L SET       @G@@@^MPTGT1    JN        A1,MPTGT2      . $T DOES REC PARTIIB
)@@G@@CIPATE IN SET     @E@@@^                                   . $A YES,MPTGIC
)@@G@@T2 NO       @E@@@^          J         MPTGT3            . $J MPTGT3     ID
)@@G@@      @G@@@^MPTGT2    AA,S2     A5,0,X8        . $P UPDATE COUNT OF MANUIE
)@@G@@AL POINTERS @G@@@^          AA,S2     A4,0,X8        . $P UPDATE DISPLACIF
)@@G@@EMENT OF MAN PTR  @G@@@^MPTGT3    LSSL      A1,1           . $P SHIFT MFIG
)@@G@@CW LEFT BY 1 POSITION   @G@@@^          AX,U      X8,1           . $P ADIH
)@@G@@VANCE POINTER TO SET ENTRY    @C@@@^          J         MANLP1         .II
)@@G@@ $J MANLP1  @C@@@^MANOUT1 . GOT DONE WITH ALL MANUAL SET ENTRIES  @G@@@^IJ
)@@G@@          SA        A5,TOTMPTR     . $P SAVE TOTAL # OF MANUAL POINTERS IK
)@@G@@@A@@@^          SA        A4,TOTDISP      @C@@@^          J         *MPTIL
)@@G@@RFND       . $E EXIT    @]@@@^/           @]@@@^ .          @A@@@^ . INSIM
)@@G@@ERT AFTER CURRENT LINE        @^@@@^ . SYNTAX:  I  'LITERAL'@E@@@^ . LITIN
)@@G@@ERAL WILL BE ROUNDED TO THE NEXT WRD IN LENGTH        @]@@@^ .          IO
)@@G@@@]@@@^I .         @E@@@^          LA        A1,LN          . $P LINE NUMIP
)@@G@@BER TO A1   @]@@@^IGT1        @G@@@^          SA        A1,IPKT        .IQ
)@@G@@ $P LINE NUMBER TO INSERT PACKET    @E@@@^          LA        A2,2,X10  IR
)@@G@@     . $T PACKET PROPERLY SET @C@@@^          TZ,H1     2,X10           IS
)@@G@@  .         @E@@@^          J         INER1             . $A NO,INER1 YEIT
)@@G@@S     @G@@@^          LSSL      A2,18          . $P GET RID OF HIGH ORDEIU
)@@G@@R BIT       @E@@@^          DSL       A2,54          . $P # OF CHARS   TIV
)@@G@@O A2  @E@@@^                                   .    PREPARE TO DIVIDE   IW
)@@G@@@E@@@^          DI,U      A2,6           . $P # OF WRDS - 1 TO A2 @E@@@^IX
)@@G@@                                   . $P REMAINDER TO A3     @G@@@^      IY
)@@G@@    TNZ       A3             . $P ROUND LENGTH UP IF REMAINDER    @A@@@^IZ
)@@G@@          J         $+2            .@A@@@^          AA,U      A2,1      JA
)@@G@@     .@A@@@^          SA,H2     A2,IPKT+2      .@A@@@^          AX,U    JB
)@@G@@  X10,3          .@G@@@^          SX        X10,IPKT+1     . $P ADDR OF JC
)@@G@@RECORD TO IPKT          @]@@@^ .          @E@@@^ . CALL TEMPORARY FILE IJD
)@@G@@NSERT FUNCTION TO INSERT RECORD     @]@@@^ .          @E@@@^          LXJE
)@@G@@,U      X10,IPKT       . $P ADDR OF IPKT TO X10 @G@@@^          LMJ     JF
)@@G@@  X11,TF$IA      . $W TF$IA CALL TEMP FILE INSERT     @E@@@^          TZJG
)@@G@@,T1     2,X10          . $T SUCCESSFUL          @E@@@^          ER      JH
)@@G@@  ERR$.          . $A NO,EXIT  YES        @A@@@^          LA        A0,IJI
)@@G@@PKT        .@E@@@^          SA        A0,LN          . $P UPDATE LINE NUJJ
)@@G@@MBER  @E@@@^          LX        X10,X10SAV     . $P RESTORE X10         JK
)@@G@@@C@@@B          SZ        STATUS            .         @C@@@^          J JL
)@@G@@        *RETURN        . $E EXIT    @^@@@^INER1     ER        ERR$@]@@@^JM
)@@G@@ .          @]@@@^ .          @A@@@^ . INSERT BEFORE CURRENT LINE       JN
)@@G@@@^@@@^ . SYNTAX:  IB 'LITERAL'@E@@@^ . LITERAL WILL BE ROUNDED TO THE NEJO
)@@G@@XT WRD IN LENGTH        @]@@@^ .          @]@@@^IB .        @E@@@^      JP
)@@G@@    LA        A1,LN          . $P LINE NUMBER TO A1   @E@@@^          TNJQ
)@@G@@Z       A1             . $  IS LINE NUMBER =0   @E@@@^          ER      JR
)@@G@@  ERR$           . $  YES,EXIT NO         @G@@@^          ANA,U     A1,1JS
)@@G@@           . $P DECREMENT LINE NUMBER           @C@@@^          J       JT
)@@G@@  IGT1           . $J IGT1    @]@@@^/           @]@@@^ .          @A@@@^JU
)@@G@@ . INSERT RECORD WORKING ROUTINE    @A@@@^ . SYNTAX: IR RECORD-NAME 'STRJV
)@@G@@ING'  @A@@@^ .         IR RECORD-NAME VARIABLE  @G@@@^ . PHYSICALLY, A RJW
)@@G@@ECORD WILL BE FORMED AS INDICATED BY NEWSCHEMA        @G@@@^ .          JX
)@@G@@   THE NEWLY FORMED RECORD WILL BE INSERTED IN THE TEMPORARY@C@@@^ .    JY
)@@G@@         FILE NEXT TO CURRENT LINE (LN*). @I@@@^ . LOGICALLY,  RECORD WIJZ
)@@G@@LL BE INSERTED IN ALL AUTO SETS IT PARTICIPATES IN.         @G@@@^ .    KA
)@@G@@         THE LOGICAL INSERT POINT IS NEXT TO RECORDS THAT ARE     @G@@@^KB
)@@G@@ .             CURRENT OF THE SETS IN WHICH THE INSERTED RECORD         KC
)@@G@@@A@@@^ .             PARTICIPATES.        @]@@@^ .          @]@@@^IR .  KD
)@@G@@      @A@@@^ .   X10 POINTS TO PACKET           @A@@@^ .   A0  HAS TYPE;KE
)@@G@@ 3 FOR IR         @]@@@^ .          @C@@@^          TZ,H2     2,X10     KF
)@@G@@. NO INDEX ALLOWD @E@@@^          J         ERROR61           . $J ERRORKG
)@@G@@61          @C@@@^          TNZ       2,X10             .         @C@@@^KH
)@@G@@          J         ERROR61           .         @C@@@^                  KI
)@@G@@            . $P ZERO SWITCHES@A@@@^ .        SZ        RHSW      .     KJ
)@@G@@@G@@@^ .        SZ        CLCSW     . SW TO INDICATE RECORD IS CALC     KK
)@@G@@      @G@@@^ .        SZ        NOBFSW    . SW TO INDICATE NO BUFFER WASKL
)@@G@@ ASSIGNED   @G@@@^ .        SZ        IRSAMESW          . TO INDICATE NOKM
)@@G@@ BUFFER SAVING    @G@@@^          LX,H1     X8,2,X10       . $P SYM TBL KN
)@@G@@ENTRY ADDR TO X8        @E@@@^          LA,S4     A1,0,X8        . $P TYKO
)@@G@@PE OF SYMBOL TO A1@G@@@^          TE,U      A1,02          . $T IS VARIAKP
)@@G@@BLE A RECORD NAME       @E@@@^          J         NRNMSG         . $A NOKQ
)@@G@@,NRNMSG YES       @G@@@^          LA,T1     A2,1,X8        . $P SEQUENCEKR
)@@G@@ NUMBER TO A2           @^@@@^          ANA,U     A2,1@G@@@^          TGKS
)@@G@@,H1     A2,TT1         . CHECK IF SEQUENCE # IN RANGE       @^@@@^      KT
)@@G@@    ER        ERR$@I@@@^          AA,H2     A2,TT1         . $P A2 POINTKU
)@@G@@S TO SEQUENCE TABLE ENTRY           @G@@@^          SA        A2,RSEQAD KV
)@@G@@     . $P SAVE ADDRESS OF RECORD SEQ ENTRY@A@@@^          LA,T1     A1,0KW
)@@G@@,A2        .@G@@@^          SA        A1,IRCODE      . $P SAVE RECORD COKX
)@@G@@DE IN IRCODE      @]@@@^ .          @G@@@^ . CHECK IF NEW RECORD CAN BE KY
)@@G@@LINKED INTO SETS THAT IT CAN AUTOMATICALLY@]@@@^ . BELONG TO@^@@@^ .    KZ
)@@G@@A1 HAS RECORD CODE@]@@@^ .          @G@@@^          TNZ,H1    C9        LA
)@@G@@     .    ANY C9 TABLE (NEW SCHEMA)       @A@@@^          J         $+3 LB
)@@G@@           .@A@@@^          LX,U      X10,C9         .@A@@@^          J LC
)@@G@@        IRC1SE         .@A@@@^          LX,U      X10,C1         .@]@@@^LD
)@@G@@ .          @]@@@^IRC1SE .    @G@@@^          SLJ       TABSE          .LE
)@@G@@ $W SEARCH C9 OR C1 TABLES          @E@@@^          TZ        A2        LF
)@@G@@     . $T SUCCESSFUL SEARCH   @E@@@^          J         NCENMSG        .LG
)@@G@@ $A NO,NCENMSG YES      @G@@@^          SA        A0,C1ENAD      . $P SALH
)@@G@@VE ADDRESS OF ENT IN C1ENAD   @A@@@^          LX        X8,A0          .LI
)@@G@@@G@@@^          AX,U      X8,1           . $P X8 POINTS TO FIRST PTR ENTLJ
)@@G@@      @G@@@^          LR,S4     R1,0,A0        . $P # OF OWNER & AUTO ENLK
)@@G@@TS TO R1    @C@@@^          SR        R1,TEMPCNT        .         @]@@@^LL
)@@G@@IRLP1       @C@@@^          LR        R1,TEMPCNT        .         @G@@@^LM
)@@G@@          JGD       R1,$+2         . $T DONE WITH ALL ENTRIES           LN
)@@G@@@E@@@^          J         IROUT1         . $A YES,IROUT1 NO       @E@@@^LO
)@@G@@          SR        R1,TEMPCNT                  .           @G@@@^      LP
)@@G@@    LA,T3     A3,0,X8        . $P PREPARE TO TEST BIT 11          @E@@@^LQ
)@@G@@          JN        A3,IRGT2       . $T IS ENTRY FOR MEMBER @E@@@^      LR
)@@G@@                             . $A NO,IRGT2 YES        @E@@@^          LALS
)@@G@@,T2     A1,0,X8        . $P SET CODE TO A1      @C@@@^          SA,H2   LT
)@@G@@  A1,SETCPKT        .         @G@@@^          SLJ       SETCUR         .LU
)@@G@@ $W SETCUR GET SET CURRENCY         @C@@@^          TZ,H1     SETCPKT   LV
)@@G@@  . $T SUCCESSFUL @E@@@^          J         NOSETMSG        . $A NO,NSETLW
)@@G@@MSG YES     @]@@@^IRGT2 .     @E@@@^          AX,U      X8,1           .LX
)@@G@@ $P POINT TO NEXT ENTRY @C@@@^          J         IRLP1          . $J IRLY
)@@G@@LP1   @]@@@^ .          @]@@@^IROUT1      @C@@@^          LA        A1,ILZ
)@@G@@RCODE         .         @G@@@^          LA        A2,RSEQAD      . $P ADMA
)@@G@@DR OF RECORD SEQUENCE ENT TOA2@G@@@^          TZ,H2     0,A2           .MB
)@@G@@ $T IS BUFFER DEFINED FOR RECORD    @E@@@^          J         IRBFOK    MC
)@@G@@     . $A YES,IRBFOK NO       @]@@@^ .          @A@@@^ . DEFINE BUFFER FMD
)@@G@@OR RECORD         @]@@@^ .          @A@@@^          LA,U      A3,1      ME
)@@G@@     .@G@@@^          SA        A3,NOBFSW      . $P SET NOBFSW (NO BUFFEMF
)@@G@@R FOR RECORD@A@@@^ . CHECK IF RECORD IS CALC          @C@@@^          LAMG
)@@G@@        A1,IRCODE         .         @^@@@^          TNZ,H1    C11 @^@@@^MH
)@@G@@          J         $+3 @A@@@^          LX,U      X10,C11         @A@@@^MI
)@@G@@          J         IRC5SE          @A@@@^          LX,U      X10,C5    MJ
)@@G@@     .@G@@@^IRC5SE    SLJ       TABSE          . $W TABSE  SEARCH C11 ORMK
)@@G@@ C5 FOR REC @G@@@^                                   .    A0 WILL POINT ML
)@@G@@TO ENTRY IN C5    @E@@@^          JNZ       A2,NCENMSG        . $T SUCCEMM
)@@G@@SSFUL       @E@@@^                                      . $A NO,NCENMSG MN
)@@G@@YES   @E@@@^          LA,T1     A3,1,A0           . REC LENGTH TO A3    MO
)@@G@@@C@@@^          JNZ       A3,$+2            .         @C@@@^          ERMP
)@@G@@        ERR$              .         @A@@@^          SA,H2     A0,C5ENAD MQ
)@@G@@      @E@@@^          TNZ,S3    0,A0           . $T RECORD IS CALC      MR
)@@G@@@E@@@^          J         IRGT1          . $A NO,IRGT1 YES        @A@@@^MS
)@@G@@          LA,U      A3,1           .@E@@@^          SA        A3,CLCSW  MT
)@@G@@     . $P SET CLCSW           @]@@@^IRGT1 .     @C@@@^      . PREPARE TOMU
)@@G@@ MCORE$ FOR RECORD BUFFER     @E@@@^ . A1 HAS RECORD CODE, A3 HAS RECORDMV
)@@G@@ LENGTH FROM C5         @]@@@^      .     @]@@@^ .          @E@@@^ . SEAMW
)@@G@@RCH C17 TO SEE IF RECORD HAS BEEN TRANSFORMED         @]@@@^ .          MX
)@@G@@@E@@@^          LX,U      X10,C17           . $P ADDR OF C17      @C@@@^MY
)@@G@@          SLJ       TABSE             . $W TABSE@E@@@^          JNZ     MZ
)@@G@@  A2,IRBF4          . $T WAS ENTRY FOUND  @E@@@^                        NA
)@@G@@              . $A NO,IRBF1 YES     @]@@@^ .          @C@@@^ . FOUND C17NB
)@@G@@ ENTRY, FIGURE OUT TOTAL LENGTH     @]@@@^ .          @G@@@^          SANC
)@@G@@        A0,C17ENAD        . $P SAVE C17 ENTRY ADDRESS       @E@@@^      ND
)@@G@@    LA,T1     A3,1,A0           . $P OLD RECORD LENGTH@G@@@^          AANE
)@@G@@,T2     A3,1,A0           . $P OLD + NEW REC LENGTHS        @G@@@^      NF
)@@G@@    AA,U      A3,3              . $P + 2 DBP WORDS + LENGTH WORD  @E@@@^NG
)@@G@@          SA        A3,IRRSIZ         . $P SAVE IN IRRSIZ   @C@@@^      NH
)@@G@@    J         IRBF3             . $J IRBF3@]@@@^IRBF4 .     @A@@@^ . DIDNI
)@@G@@ NOT FIND RECORD ENTRY IN C17 @A@@@^ . USE LENGTH OBTAINED FROM C TABLESNJ
)@@G@@@C@@@^ . A3 CONTAINS RECORD LENGTH FROM PROPER C TABLE@G@@@^          AANK
)@@G@@,U      A3,3              . $P ADD 3 WORDS TO REC LENGTH    @E@@@^      NL
)@@G@@    SA        A3,IRRSIZ         . $P SAVE IN IRRSIZ   @]@@@^IRBF3     . NM
)@@G@@@G@@@^          LX        X9,RSEQAD      . $P ADDR OF SEQ ENTRY TO X9   NN
)@@G@@      @G@@@^          LA        A0,IRRSIZ         . $P INSERTED RECORD SNO
)@@G@@IZE TO A0   @A@@@^          LA        A4,LAST$D      .@A@@@^          AANP
)@@G@@,U      A4,1           .@G@@@^          SA,H2     A4,0,X9        . $P NENQ
)@@G@@W BUFFER ADDR TO SEQ TBL ENTRY@A@@@^          AA        A0,LAST$D      .NR
)@@G@@@A@@@^          SA        A0,LAST$D      .@A@@@^          ER        MCORNS
)@@G@@E$         .@A@@@^          SA        A4,IRBFAD       @G@@@^          LANT
)@@G@@,U      A3,1           . $P SET RECORD HEADER SWITCH RHSW   @A@@@^      NU
)@@G@@    SA        A3,RHSW        .@C@@@^          J         IRBF1          .NV
)@@G@@ $J IRBF1   @]@@@^ .          @E@@@^IRBFOK . BUFFER IS DEFINED FOR RECORNW
)@@G@@D TO BE INSERTED        @]@@@^ .          @E@@@^          LA,H2     A0,0NX
)@@G@@,A2        . $P BUFFER ADDR TO A0   @G@@@^          TE,T1     A1,2,A0   NY
)@@G@@     .    CHECK IF RECORD CODE IS THE SAME@A@@@^          ER        ERR$NZ
)@@G@@           .@G@@@^          SA        A0,IRBFAD      . $P SAVE BUFFER ADOA
)@@G@@DRESS IN IRBFAD   @C@@@^          LA,H2     A5,2,A0           .         OB
)@@G@@@E@@@^          AA,U      A5,1              . $P REC LGTH +1 TO A5@G@@@^OC
)@@G@@          SA,H2     A5,0,A0           . UPDATE REC LENGTH IN BUF        OD
)@@G@@@]@@@^ .          @A@@@^IRBF1 . BUFFER ADDRESS IS IN IRBFAD @]@@@^ .    OE
)@@G@@      @E@@@^          LA        A0,IRBFAD      . $P ADDR OF BUFFER TO A0OF
)@@G@@@A@@@^          LA        A4,ARTKEY      .@A@@@^          LR        R1,1OG
)@@G@@,A0        .@E@@@^          SR        R1,IRDBP       . $P SAVE DBP FOR LOH
)@@G@@ATER  @A@@@^          AA,U      A4,1           .@E@@@^          SA      OI
)@@G@@  A4,ARTKEY      . $P UPDATE ARTKEY       @I@@@^          SA        A4,IOJ
)@@G@@NSDBP         . $P SAVE ARTKEY FOR LINKING PURPOSES         @G@@@^      OK
)@@G@@    SA        A4,KEYPKT+3       . $P ARTIFICIAL PTR TO KEYPKT     @G@@@^OL
)@@G@@          SA        A4,1,A0        . $P ARTIFICIAL KEY AS DBP OF NEW RECOM
)@@G@@@]@@@^ .          @]@@@^ .          @C@@@^ . CALCULATE LENGTH OF RECORD ON
)@@G@@IF VARIABLE       @]@@@^ .          @G@@@^          LX        X8,X10SAV OO
)@@G@@     . $P ADDR OF SYMBOL TABLE ENT TO X8  @G@@@^          LX        X9,IOP
)@@G@@RBFAD      . $P RECORD BUFFER ADDR TO X9        @C@@@^          LX,H1   OQ
)@@G@@  X8,2,X8           .         @G@@@^          TNZ       NOBFSW         .OR
)@@G@@ $T NOBFSW SET TO INDICATE NO BUFFER@E@@@^          J         IRLINK    OS
)@@G@@     . $A NO,IRLINK YES       @G@@@^          LA,T3     A5,0,X8        .OT
)@@G@@ $P RECORD LENGTH FROM SYM TAB ENT  @G@@@^          SA        A5,IRLGTH OU
)@@G@@     . $P RECORD LENGTH TO IRLGTH         @C@@@^          J         IRHBOV
)@@G@@LD         . $J IRHBLD  @]@@@^ .          @]@@@^ .          @A@@@^ . REAOW
)@@G@@DY TO BUILD RECORD HEADER     @]@@@^ .          @]@@@^IRHBLD .    @G@@@^OX
)@@G@@          LX        X9,IRBFAD      . $P RECORD BUFFER ADDR TO X9        OY
)@@G@@@G@@@^          TNZ       RHSW           . $T RECORD HEADER SWITCH SET  OZ
)@@G@@      @E@@@^          J         IRHGT1         . $A NO,IRHGT1 YES       PA
)@@G@@@E@@@^          LA        A3,IRCODE      . $P RECORD CODE TO A3   @G@@@^PB
)@@G@@          SA,T1     A3,2,X9        . $P RECORD CODE TO HEADER           PC
)@@G@@@E@@@^          TNZ       CLCSW          . $T CLCSW SET           @E@@@^PD
)@@G@@          J         IRHGT2         . $A NO,IRHGT2 YES       @G@@@^      PE
)@@G@@    LA,U      A4,050         . $P INDICATE RECORD IS CALC IN HDR  @A@@@^PF
)@@G@@          J         IRHGT3          @]@@@^IRHGT2 .    @G@@@^          LAPG
)@@G@@,U      A4,010         . $P INDICATE RECORD IS IN USE IN HDR@A@@@^IRHGT3PH
)@@G@@    SA,S3     A4,2,X9        .@]@@@^ .          @]@@@^ .          @]@@@^PI
)@@G@@ .          @]@@@^IRHGT1 .    @C@@@^ . CALCULATE WORD LENGTH OF INSERTEDPJ
)@@G@@ RECORD     @E@@@^ . USE MAXIMUM LENGTH IN CASE OF A VARIABLE RECORD    PK
)@@G@@      @A@@@^          LA        A2,IRLGTH      .@E@@@^          DSL     PL
)@@G@@  A2,36             . $P PREPARE TO DIVIDE@C@@@^          DI,U      A2,6PM
)@@G@@              . $P      @C@@@^          TNZ       A3                .   PN
)@@G@@      @C@@@^          J         $+2               .         @E@@@^      PO
)@@G@@    AA,U      A2,1              . $P # OF WORDS TO A2 @G@@@^          LAPP
)@@G@@        A0,C5ENAD         . $P INSERTED REC LENGTH TO A2    @C@@@^      PQ
)@@G@@    AA,T3     A2,1,A0           .         @G@@@^          SA,H2     A2,2PR
)@@G@@,X9        . $P RECORD LENGTH TO HEADER         @E@@@^          SA      PS
)@@G@@  A2,IRLGTHW        . $P SAVE IN IRLGTHW  @C@@@^          AA,U      A2,1PT
)@@G@@              .         @G@@@^          SA,H2     A2,0,X9           . $PPU
)@@G@@ RECORD LENGTH TO BUFFER      @]@@@^IRLINK .    @G@@@^          AX,U    PV
)@@G@@  X9,2           . $P X9 POINTS TO IR RECORD          @G@@@^          SXPW
)@@G@@        X9,IRADDR         . $P SAVE ADDR OF INSERTED REC    @G@@@^      PX
)@@G@@    LX        X8,C1ENAD      . $P ADDR OF C9 OR C1 ENTRY TO X8    @G@@@^PY
)@@G@@          LR,S4     R1,0,X8        . $P # OF OWNER + AUTO ENTS TO R1    PZ
)@@G@@@G@@@^          SR        R1,APTRNM         . $P SAVE # OF AUTO & OWNER QA
)@@G@@ENTS  @G@@@^          AX,U      X8,1           . $P X8 POINTS TO FIRST SQB
)@@G@@ET ENT      @G@@@^          SX        X8,AENTAD         . $P SAVE C1 OR QC
)@@G@@C9 ENT ADDR       @]@@@^ .          @]@@@^ .          @C@@@^ . LINK INSEQD
)@@G@@RTED REC IN APPROPRIATE SETS        @]@@@^ .          @]@@@^ .          QE
)@@G@@@]@@@^LNKLP1 .    @G@@@^          LA        A3,APTRNM      . $P # OF AUTQF
)@@G@@O MEMBER ENTRIES TO A3  @G@@@^          JZ        A3,ALNKOUT     . $T ARQG
)@@G@@E WE DONE WITH ALL ENTRIES    @E@@@^                                   .QH
)@@G@@ $A YES,ALNKOUT NO      @G@@@^          LX        X8,AENTAD      . $P ADQI
)@@G@@DR OF SET ENTRY TO X8         @G@@@^          LA,T3     A3,0,X8         QJ
)@@G@@  . $P IS ENTRY FOR OWNER           @E@@@^          JP        A3,IRAUTO QK
)@@G@@        . $A NO,IRAUTO YES    @G@@@^          LA,U      A0,0            QL
)@@G@@  . $P OWNER CODE 0 TO A0           @C@@@^          J         $+2       QM
)@@G@@        .         @E@@@^IRAUTO    LA,U      A0,1              . MEMBER CQN
)@@G@@ODE 1 TO A0 @E@@@^          SLJ       SETLINK           . $W SETLINK    QO
)@@G@@      @]@@@^ .          @C@@@^          LA        A5,APTRNM      . $    QP
)@@G@@      @A@@@^          AN,U      A5,1           .@G@@@^          SA      QQ
)@@G@@  A5,APTRNM      . $P UPDATE # OF AUTO MEMBER ENTRIES @C@@@^          LXQR
)@@G@@        X8,AENTAD         .         @G@@@^          AX,U      X8,1      QS
)@@G@@        . $P UPDATE AUTO ENTRY ADDR       @C@@@^          SX        X8,AQT
)@@G@@ENTAD         .         @C@@@^          J         LNKLP1         . $J LNQU
)@@G@@KLP1  @]@@@^ .          @]@@@^ .          @E@@@^ALNKOUT . FINISHED LINKIQV
)@@G@@NG INSERTED RECORD IN ALL AUTO SETS @G@@@^        . AENTAD POINTS TO FIRQW
)@@G@@ST MANUAL SET ENTRY WITHIN C1 OR C9  ENTRY@]@@@^ .          @]@@@^ .    QX
)@@G@@      @G@@@^          LX        X8,C1ENAD      . $P ADDR OF C1 OR C9 ENTQY
)@@G@@RY TO X8    @G@@@^          LX        X9,AENTAD      . $P ADDR OF FIRST QZ
)@@G@@MAN ENT TO X9     @A@@@^          LA        A3,X9          .@A@@@^      RA
)@@G@@    ANA       A3,X8          .@G@@@^          AA,U      A3,2            RB
)@@G@@  . $P TWO EXTRA WORDS FOR TABLE    @G@@@^          TG,T3     A3,0,X8   RC
)@@G@@     . $T DOES RECORD PARTICIPATE IN MAN  @E@@@^          J         IRLNRD
)@@G@@K8         . $A NO,IRLNK8 YES       @]@@@^ .          @E@@@^ . ZERO OUT RE
)@@G@@MANUAL CONTROL WORD AND RESERVED POINTERS       @]@@@^ .          @E@@@^RF
)@@G@@          TN        0,X9           . BIT 35 MUST BE SET     @A@@@^      RG
)@@G@@    ER        ERR$           .@G@@@^          LR,S5     R1,0,X9        .RH
)@@G@@ $P # OF RESERVED MAN WRDS TO R1    @A@@@^          TNZ       R1        RI
)@@G@@     .@A@@@^          ER        ERR$           .@A@@@^          LX      RJ
)@@G@@  X8,IRBFAD      .@G@@@^          LXI,U     X8,1           . $P ADDR OF RK
)@@G@@INSERTED RCD BUF TO X8  @G@@@^          AX,S6     X8,0,X9        . $P ADRL
)@@G@@D DISPLACEMENT OF MFCW        @E@@@^          SZ        2,*X8          .RM
)@@G@@ $P ZERO OUT MFCW       @C@@@^MANLP11 .  LOOP TO ZERO OUT RESERVED POINTRN
)@@G@@ER    @G@@@^          JGD       R1,$+2         . $T ARE WE DONE WITH RESRO
)@@G@@ERVED PTRS  @E@@@^          J         IRLNK8         . $A YES,IRLNK8  NORP
)@@G@@      @G@@@^          SZ        2,*X8          . $P ZERO MANUAL CONTROL RQ
)@@G@@WRD         @C@@@^          J         MANLP11        . $J MANLP1  @]@@@^RR
)@@G@@ .          @]@@@^ .          @]@@@^IRLNK8 .    @G@@@^          TNZ     RS
)@@G@@  CLCSW          . $T WAS RECORD A CALC RECORD        @E@@@^          J RT
)@@G@@        IRLNK9         . $A NO,IRLNK9 YES       @C@@@^          LX      RU
)@@G@@  X8,IRADDR         .         @C@@@^          LA        A0,C5ENAD       RV
)@@G@@  .         @G@@@^          AX,T3     X8,1,A0           . $P X8 POINTS TRW
)@@G@@O 1ST DATA WRD    @C@@@^          ANX,U     X8,1              .         RX
)@@G@@@G@@@^          SZ        0,X8          . $P ZERO OUT CALC POINTER IN RERY
)@@G@@CORD  @]@@@^ .          @G@@@^IRLNK9 . SET UP PHYSICAL INSERT POINT AND RZ
)@@G@@INSERT RECORD IN TEMP FILE    @]@@@^ .          @]@@@^ .          @G@@@^SA
)@@G@@          LA        A1,IRBFAD      . $P ADDRESS OF INSERTED REC BUF  A1 SB
)@@G@@@G@@@^          LA        A0,LN          . $P RCD# TO INSERT AFTER TO A0SC
)@@G@@      @G@A@^          L$SNAP    'IRLC2 ',0,28,SW1                       SD
)@@G@@         .  @G@@@A       .  L$SNAP    'IRLC2 ',0,28,SW1                 SE
)@@G@@               .  @G@@@^          SLJ       TFUPDATE          . $W TFUPDSF
)@@G@@ATE UPDATE TEMP FILE    @G@@@^          LX        X10,X10SAV         . $SG
)@@G@@P PACKET ADDR TO X10          @]@@@^ .          @]@@@^ .          @]@@@^SH
)@@G@@ .          @E@@@^ . CALL THE LET WORKER ROUTINE TO GET RECORD DATA     SI
)@@G@@      @]@@@^ .          @]@@@^ .          @E@@@^          LA,U      A0,2SJ
)@@G@@              . TYPE IS EQUATE      @G@@@^          SA,S3     A0,0,X10  SK
)@@G@@           . $P EQUATE TYPE TO PACKET     @G@@@^          LMJ       X11,SL
)@@G@@LET           . $W LET CALL LET WORKER ROUTINE  @A@@@^          TZ      SM
)@@G@@  STATUS          @C@@@^          J         ERROR82            .        SN
)@@G@@@G@@@^          LA,U      A0,3              . $P RESTORE TYPE INPACKET TSO
)@@G@@O 3   @G@@@^          LX        X10,X10SAV        . $P RESTORE X10 TO ADSP
)@@G@@DR OF PACKET@C@@@^          SA,S3     A0,0,X10          .         @G@@@^SQ
)@@G@@          LX,H1     X8,2,X10          . $P SYM TAB ENTRY TO X8          SR
)@@G@@@G@@@^          TZ        2,X8           . $T IS RECORD VARIABLE LENGTH SS
)@@G@@      @E@@@^          J         IRGT3          . $A YES,IRGT3 NO        ST
)@@G@@@]@@@^ .          @E@@@^ . UPDATE THE KEY FILE WITH THE NEW ARTIFICIAL PSU
)@@G@@TR          @]@@@^ .          @]@@@^IREXT .     @C@@@^          LX,U    SV
)@@G@@  X10,KEYPKT        .         @A@@@^          LMJ       X11,KF$AMA      SW
)@@G@@@C@@@^          TZ        KEYPKT+5          .         @C@@@^          ERSX
)@@G@@        ERR$              .         @]@@@^ .          @]@@@^ .          SY
)@@G@@@E@@@^ISEXT     LX        X10,X10SAV     . $P RESTORE X10         @G@@@^SZ
)@@G@@          SZ        RDALN             . ZERO OUT THE RDA LINE NUMBER    TA
)@@G@@@C@@@^          SZ        RDA               .         @C@@@B          SZTB
)@@G@@        STATUS            .         @C@@@^          J         *RETURN   TC
)@@G@@     . $E EXIT    @]@@@^ .          @]@@@^IRGT3 .     @]@@@^ .          TD
)@@G@@@G@@@^      . GET THE OCCURS ITEM, X8 POINTS TO SYMBOL TABLE 3 WRD ENTRYTE
)@@G@@      @]@@@^      .     @G@@@^          LA,H2     A1,2,X8        . $P OCTF
)@@G@@CURS ITEM LINK TO A1          @G@@@^          SLJ       GETITEM        .TG
)@@G@@ $W GET ITEM SYM ENTRY ADDR TO A0   @E@@@^          SA        A0,OCCASAVTH
)@@G@@     . $P SAVE ADDR IN OCCASAV@]@@@^ .          @G@@@^          TNZ,H1  TI
)@@G@@  2,X8           . $T ANY DEPENDING ON ITEM           @E@@@^          J TJ
)@@G@@        IRGT4          . $A NO,IRGT4 YES        @]@@@^ .          @G@@@^TK
)@@G@@          LA,H1     A1,2,X8        . $P DEP ON ITEM LINK TO A1          TL
)@@G@@@G@@@^          SLJ       GETITEM        . $W GET ITEM SYM ENTRY ADDR TOTM
)@@G@@ A0   @]@@@^ .          @C@@@^ . PREPARE TO GET VALUE OF DEPENDING ON ITTN
)@@G@@EM    @]@@@^ .          @G@@@^          LX        X10,A0         . $P SYTO
)@@G@@M TAB ENT ADDR TO X10         @A@@@^          SZ        A0             .TP
)@@G@@@C@@@^          SLJ       GETVAR         . $W GETVAR  @E@@@^          JNTQ
)@@G@@        A1,GETER1      . $T SUCCESSFUL          @E@@@^                  TR
)@@G@@                 . $A NO,GETER1 YES       @G@@@^          TE,U      A3,0TS
)@@G@@2          .    MAKE SURE DEP ON ITEM IS EITHER @E@@@^          J       TT
)@@G@@  $+2            .    PIC 9  OR PIC 9 COMP@A@@@^          J         GETNTU
)@@G@@M1         .@A@@@^          TE,U      A3,3           .@A@@@^          ERTV
)@@G@@        ERR$           .@]@@@^GETNM1 .    @G@@@^          SLJ       GETNTW
)@@G@@UM         . $P GET BINARY VALUE TO A0          @G@@@^ . CHECK IF DEP ONTX
)@@G@@ VALUE IS WITHIN RANGE OF LOW, HIGH # OF OCCURS       @G@@@^          LXTY
)@@G@@        X8,OCCASAV     . $P ADDR OF OCCURS ITEM TO X8       @G@@@^      TZ
)@@G@@    TLE,T1    A0,2,X8        . $T LOW NUM OF OCC <= DEP ON VAL    @E@@@^UA
)@@G@@          J         DEPER1         . $A NO,DEPER1 YES       @A@@@^      UB
)@@G@@    LA,T3     A5,2,X8        .@G@@@^          TLE       A5,A0          .UC
)@@G@@ $T DEP ON VAL <= HIGH # OF OCCURS  @E@@@^          J         DEPER1    UD
)@@G@@     . $A NO,DEPER1 YES       @G@@@^          LA,T3     A1,0,X8        .UE
)@@G@@ $P LENGTH OF OCCURS ITEM TO A1     @G@@@^          MSI       A1,A0     UF
)@@G@@     . $P TOTAL LENGTH OF OCCURS GROUP A1 @A@@@^          J         IRGTUG
)@@G@@555         @C@@@^IRGT4 . NO DEPENDING ON ITEM IN  OCCURS CLAUSE  @]@@@^UH
)@@G@@      .     @G@@@^          LX        X8,OCCASAV     . $P OCCURS ITEM ADUI
)@@G@@DR TO X8          @G@@@^          LA,T3     A1,0,X8        . $P LENGTH OUJ
)@@G@@F OCCURS ITEM TO A1     @E@@@^          LA,T1     A0,2,X8        . $P # UK
)@@G@@OF OCCURS TO A0   @G@@@^          MSI       A1,A0          . $P TOTAL LEUL
)@@G@@NGTH OF OCCURS GROUP A1 @A@@@^          J         IRGT555         @E@@@^UM
)@@G@@IRGT555   LA,T1     A3,0,X8        . $P REL WRD TO A3       @E@@@^      UN
)@@G@@    MSI,U     A3,6           . $P # OF CHARS TO A3    @E@@@^          AAUO
)@@G@@,S3     A3,1,X8        . $P ADD OFF-SET         @G@@@^          ANA,U   UP
)@@G@@  A3,1           . $P # OF CHARS WITHOUT OCCURS TO A3 @A@@@^          AAUQ
)@@G@@        A1,A3          .@A@@@^          DSL       A1,36          .@G@@@^UR
)@@G@@          DI,U      A1,6           . $P # OF WRDS IN RECORD TO A1       US
)@@G@@@A@@@^          JZ        A2,IRLNFD       @^@@@^          AA,U      A1,1UT
)@@G@@@]@@@^IRLNFD .    @G@@@^          SA        A1,IRLGTHW     . $P SAVE RECUU
)@@G@@ORD LENGTH IN IRLGTHW   @G@@@^          LA        A0,IRBFAD         . $PUV
)@@G@@ ADDR OF IR REC TO A0         @G@@@^          SA,H2     A1,2,A0         UW
)@@G@@  . $P LENGTH OF VAR REC TO REC HDR @C@@@^          AA,U      A1,1      UX
)@@G@@        .         @G@@@^          SA,H2     A1,0,A0           . $P  REC UY
)@@G@@LGTH + 1 TO BUF         @]@@@^ .          @]@@@^ .          @A@@@^ . UPDUZ
)@@G@@ATE TEMP FILE WITH NEW LENGTH @]@@@^ .          @]@@@^ .          @E@@@^VA
)@@G@@          SLJ       TFCHANGE          . $W TFCHANGE         @C@@@^      VB
)@@G@@    J         IREXT             . $E EXIT @C@@@^GETER1 . ERROR RETURN FRVC
)@@G@@OM GETVAR SUBROUTINE    @G@@@^          LSSL      A1,1           . $P GEVD
)@@G@@T RID OF HIGH ORDER BIT       @E@@@^  . PRINT ERROR MESSAGE FROM GETVAR VE
)@@G@@WITH ERROR CODE FROM A1 @C@@@^          SSL       A1,19             .   VF
)@@G@@      @A@@@^          SA        A1,ERRCODE     .@G@@@^          E$DIT   VG
)@@G@@  EDPKT          . $P PRINT ERROR RETURN FROM GETVAR  @A@@@^          E$VH
)@@G@@COPY    33,MSGGVR      .@A@@@^          E$DECV    ERRCODE        .@A@@@^VI
)@@G@@          P$RINT    (PF1 1,14,PRINT)@C@@@^          J         ERROR73   VJ
)@@G@@     . $J ERROR73 @]@@@^ .          @]@@@^NOSETMSG .  @A@@@^          E$VK
)@@G@@DIT     EDPKT          .@G@@@^          E$COPY    18,MSGNOSET    . $P PRVL
)@@G@@INT NO SET CURRENCY + SET CODE@C@@@^          LA,H2     A1,SETCPKT      VM
)@@G@@  .         @A@@@^          SA        A1,ERRCODE     .@A@@@^          E$VN
)@@G@@DECV    ERRCODE        .@A@@@^          E$CHAR    '('            .@A@@@^VO
)@@G@@          E$OCTV    ERRCODE        .@A@@@^          E$CHAR    ')'       VP
)@@G@@     .@A@@@^          P$RINT    (PF1 1,14,PRINT)@C@@@^          J       VQ
)@@G@@  ERROR68        . $J ERROR68 @]@@@^ .          @G@@@^NRNMSG . PRINT MESVR
)@@G@@SAGE THAT VARIABLE IS NOT A RECORD NAME, THEN RETURN  @G@@@^          P$VS
)@@G@@RINT (PF1 1,8,MSGNRN)  . $P PRINT NOT RECORD NAME MESSAGE   @E@@@^      VT
)@@G@@                             .    NOT FATAL ERROR     @C@@@^          J VU
)@@G@@        ERROR63        . $J ERROR63 @]@@@^NCENMSG .   @C@@@^          E$VV
)@@G@@DIT     EDPKT          . $          @G@@@^          E$COPY    36,MSGNOC VW
)@@G@@     . $P PRINT NO C ENTRY AND CODE       @A@@@^          SA        A1,EVX
)@@G@@RRCODE     .@A@@@^          E$DECV    ERRCODE        .@A@@@^          P$VY
)@@G@@RINT    (PF1 1,14,PRINT)@C@@@^          J         ERROR65        . $J ERVZ
)@@G@@ROR65 @]@@@^DEPER1 .    @A@@@^          P$RINT    (PF1 1,6,MSGDEP)@C@@@^WA
)@@G@@          J         ERROR74           .         @E@@@^ERROR61   LA,U    WB
)@@G@@  A0,61             . $P ERROR CODE 61    @E@@@^          J         ERRSWC
)@@G@@TAT           . $J ERRSTAT          @E@@@^ERROR62   LA,U      A0,62     WD
)@@G@@        . $P ERROR CODE 62    @E@@@^          J         ERRSTAT         WE
)@@G@@  . $J ERRSTAT          @E@@@^ERROR63   LA,U      A0,63             . $PWF
)@@G@@ ERROR CODE 63    @E@@@^          J         ERRSTAT           . $J ERRSTWG
)@@G@@AT          @E@@@^ERROR64   LA,U      A0,64             . $P ERROR CODE WH
)@@G@@64    @E@@@^          J         ERRSTAT           . $J ERRSTAT          WI
)@@G@@@E@@@^ERROR65   LA,U      A0,65             . $P ERROR CODE 65    @E@@@^WJ
)@@G@@          J         ERRSTAT           . $J ERRSTAT          @E@@@^ERROR6WK
)@@G@@6   LA,U      A0,66             . $P ERROR CODE 66    @E@@@^          J WL
)@@G@@        ERRSTAT           . $J ERRSTAT          @E@@@^ERROR67   LA,U    WM
)@@G@@  A0,67             . $P ERROR CODE 67    @E@@@^          J         ERRSWN
)@@G@@TAT           . $J ERRSTAT          @E@@@^ERROR68   LA,U      A0,68     WO
)@@G@@        . $P ERROR CODE 68    @E@@@^          J         ERRSTAT         WP
)@@G@@  . $J ERRSTAT          @E@@@^ERROR69   LA,U      A0,69             . $PWQ
)@@G@@ ERROR CODE 69    @E@@@^          J         ERRSTAT           . $J ERRSTWR
)@@G@@AT          @E@@@^ERROR70   LA,U      A0,70             . $P ERROR CODE WS
)@@G@@70    @E@@@^          J         ERRSTAT           . $J ERRSTAT          WT
)@@G@@@E@@@^ERROR71   LA,U      A0,71             . $P ERROR CODE 71    @E@@@^WU
)@@G@@          J         ERRSTAT           . $J ERRSTAT          @E@@@^ERROR7WV
)@@G@@2   LA,U      A0,72             . $P ERROR CODE 72    @E@@@^          J WW
)@@G@@        ERRSTAT           . $J ERRSTAT          @E@@@^ERROR73    LA,U   WX
)@@G@@   A0,73              . $P ERROR CODE 73  @E@@@^          J         ERRSWY
)@@G@@TAT           . $J ERRSTAT          @E@@@^ERROR74  LA,U      A0,74      WZ
)@@G@@      . $P ERROR CODE 74      @E@@@^          J         ERRSTAT         XA
)@@G@@  . $J ERRSTAT          @G@@@^ERROR75   LA,U      A0,75          . $P ERXB
)@@G@@R CODE 75, NO INDEX ALLOWED   @C@@@^          J         ERRSTAT        .XC
)@@G@@ $J ERRSTAT @G@@@^ERROR76   LA,U      A0,76          . $P ERR CODE 76, AXD
)@@G@@REA NAME NOT FOUND@C@@@^          J         ERRSTAT        . $J ERRSTAT XE
)@@G@@@G@@@^ERROR77   LA,U      A0,77          . $P ERR CODE 77, AREA NAME > 2XF
)@@G@@ OR 0 @C@@@^          J         ERRSTAT        . $J ERRSTAT @G@@@^ERROR7XG
)@@G@@8   LA,U      A0,78          . $P ERR CODE 78, EMPTY C3 TABLE     @C@@@^XH
)@@G@@          J         ERRSTAT        . $J ERRSTAT @G@@@^ERROR79   LA,U    XI
)@@G@@  A0,79          . $P ERR CODE 79, OPERAND NOT NUMERIC@C@@@^          J XJ
)@@G@@        ERRSTAT        . $J ERRSTAT @G@@@^ERROR80   LA,U      A0,80     XK
)@@G@@     . $P ERR CODE 80, OPERAND NOT PROPER @C@@@^          J         ERRSXL
)@@G@@TAT        . $J ERRSTAT @G@@@^ERROR81   LA        A0,81          . $P ERXM
)@@G@@R CODE 81, INDEX NOT ALLOWED  @C@@@^          J         ERRSTAT        .XN
)@@G@@ $J ERRSTAT @]@@@^ .          @E@@@^ERROR82   LA,U      A0,82           XO
)@@G@@  . $P ERROR CODE 82    @E@@@^          J         ERRSTAT           . $JXP
)@@G@@ ERRSTAT          @E@@@^ERROR83   LA,U      A0,83             . $P ERRORXQ
)@@G@@ CODE 83    @E@@@^          J         ERRSTAT           . $J ERRSTAT    XR
)@@G@@      @C@@@^ERRSTAT   SA        A0,STATUS         .         @G@@@^      XS
)@@G@@    SA        A0,FATAL          . $P SET FATAL ERROR CODE         @C@@@^XT
)@@G@@          E$DIT     EDPKT             .         @C@@@^          E$COPY  XU
)@@G@@  23,MSGERROR       .         @C@@@^          E$DECV    STATUS          XV
)@@G@@  .         @C@@@^          P$RINT    (PF1 1,14,PRINT)  .         @]@@@^XW
)@@G@@ .          @]@@@^ .          @C@@@^          J         *RETURN         XX
)@@G@@  . $E EXIT @]@@@^/           @]@@@^ .          @]@@@^ .          @]@@@^XY
)@@G@@SETLINK .   @C@@@^          +         0                 .         @C@@@^XZ
)@@G@@          LX        X8,AENTAD         .         @G@@@^          TZ      YA
)@@G@@  A0                . $T SET ENTRY WAS FOR OWNER      @E@@@^          J YB
)@@G@@        SLINK1            . $A NO,SLINK1 YES    @C@@@^ . ENTRY FROM C1 OYC
)@@G@@R C9 TABLE WAS FOR OWNER      @]@@@^ .          @G@@@^          LA      YD
)@@G@@  A5,INSDBP      . $P INSDBP IS THE OWNER POINTER     @E@@@^          LAYE
)@@G@@,S2     A4,0,X8        . $P # OF LINKS TO A4    @^@@@^          TNZ     YF
)@@G@@  A4  @^@@@^          ER        ERR$@C@@@^          LX        X9,IRADDR YG
)@@G@@        .         @C@@@^          LXI,U     X9,1              .         YH
)@@G@@@G@@@^          AX,S6     X9,0,X8           . $P X9 POINTS TO FIRST OWNEYI
)@@G@@R PTR @E@@@^IRLP3     JGD       A4,$+2         . $T DONE WITH ALL LINKS YJ
)@@G@@@E@@@^          J         OWNCUR           . $A YES,LNKEXT  NO    @G@@@^YK
)@@G@@          SA        A5,0,*X9       . $P SET OWNER LINK TO POINT TO SELF YL
)@@G@@@C@@@^          J         IRLP3          . $J IRLP3   @]@@@^SLINK1 .    YM
)@@G@@@G@@@^          TE,U      A0,1              . $T ENTRY FOR AUTOMATIC SETYN
)@@G@@      @E@@@^          J         SLMAN             . $A NO,SLMAN YES     YO
)@@G@@@A@@@^LNGT11 . ENTRY FOR AUTO MEMBER      @E@@@^          LA,T2     A1,0YP
)@@G@@,X8        . $P SET CODE TO A1      @E@@@^          SA,H2     A1,SETCPKTYQ
)@@G@@     . $P SET CODE TO SETCPKT @G@@@^          SLJ       SETCUR         .YR
)@@G@@ $P GET SET CURRENCY, INFO ON CUR;  @G@@@^                              YS
)@@G@@     .    RECORD RETURNED IN SETCPKT      @A@@@^          TZ,H1     SETCYT
)@@G@@PKT        .@G@@@^          ER        ERR$           . BETTER HAVE CURREYU
)@@G@@NT OF SET OR ELSE @]@@@^ .          @]@@@^ .          @E@@@^ . PREPARE TYV
)@@G@@O CALL SUBROUTINE GETSET TO INSERT RECORD       @G@@@^ . USE RDA FOR BRIYW
)@@G@@NGING RECORD IN & PASS THAT ADDRESS TO GETSET         @]@@@^ .          YX
)@@G@@@E@@@^          LA,H1     A1,SETCPKT+1   . $P ADDR OF RECORD TO A1@G@@@^YY
)@@G@@          TE        A1,IRBFAD      . $T ADDR OF CURR REC SAME AS INSERTDYZ
)@@G@@@E@@@^          J         IRLNK0         . $A NO,IRLNK0 YES       @C@@@^ZA
)@@G@@          TZ        MANLNKSW          .         @G@@@^          ER      ZB
)@@G@@  ERR$              . MAN REC IS CURRENT OF SET       @C@@@^          LAZC
)@@G@@,U      A0,1              .         @E@@@^          SA        A0,IRSAMESZD
)@@G@@W       . $P SET IRSAMESW     @C@@@^          SZ        RBSAVE          ZE
)@@G@@  .         @E@@@^          TZ        ISLNKSW           . $T IS CALL FROZF
)@@G@@M IS  @E@@@^          J         IRLNK000          . $A YES,IRLNK000 NO  ZG
)@@G@@@E@@@^          LA        A0,IRDBP       . $P DBP SAVED TO A0     @A@@@^ZH
)@@G@@          J         IRLNK00        .@]@@@^IRLNK000 .  @G@@@^          LXZI
)@@G@@,H2     X9,SETCPKT+2      . $P SET CUR ENT ADDR TO X9       @G@@@^      ZJ
)@@G@@    LA        A0,2,X9           . $P DBP OF OLD CUR TO A0         @E@@@^ZK
)@@G@@          SA        A0,IRDBP          . $P SAVE IN IRDBP    @E@@@^      ZL
)@@G@@    J         IRLNK00           . $J IRLNK00          @]@@@^IRLNK0 .    ZM
)@@G@@@G@@@^          SA        A1,RBSAVE         . $P SAVE ADDRESS OF BUFFER ZN
)@@G@@      @G@@@^          LA        A0,1,A1        . $P DBP OF CURRENT REC TZO
)@@G@@O A0        @C@@@^IRLNK00 . FETCH RECORD WHOSE DBP IS IN A0 TO RDA@G@@@^ZP
)@@G@@          SLJ       DBPGET            . $W DBPGET READ REC TO RDA       ZQ
)@@G@@@C@@@^          LA,U      A0,RDA            .         @G@@@^          SAZR
)@@G@@,H1     A0,SETCPKT+1   . $P UPDATE RECORD ADDR IN SETCPKT+1 @E@@@^      ZS
)@@G@@    LA,H2     A0,SETCPKT     . $P SET CODE TO A0      @G@@@^          LAZT
)@@G@@        A1,SETCPKT+1   . $P ADDR OF RECORD TO H1 OF A1 AND; @G@@@^      ZU
)@@G@@                             .    RECORD CODE TO T3 OF A1         @E@@@^ZV
)@@G@@          TNZ,H1    C9             . $  NEW SCHEMA          @C@@@^      ZW
)@@G@@    J         $+3            .    NO      @G@@@^          LA,U      A2,2ZX
)@@G@@           . $P     SCHEMA INDICATOR TO A2      @A@@@^          J       ZY
)@@G@@  IRGT5          .@A@@@^          LA,U      A2,1           .@]@@@^IRGT5 ZZ
)@@G@@.     @G@@@^          SLJ       GETSET         . $W GETSET GET SET POINTAA
)@@G@@ERS         @G@@@^          DS        A0,GSETPKT     . $P SAVE INFO FROMAB
)@@G@@ GETSET, GSETPKT  @A@@@^          DS        A2,GSETPKT+2   .@A@@@^      AC
)@@G@@    SA        A4,GSETPKT+4   .@G@@@^          JP        A1,$+2         .AD
)@@G@@ $T ANY ERROR IN GETSET  ROUTINE    @E@@@^          ER        ERR$      AE
)@@G@@     . $A YES,EXIT NO         @]@@@^ .          @C@@@^ . PREPARE TO LINKAF
)@@G@@ NEXT POINTER IN SET.         @E@@@^ . SETCPKT CONTAINS INFORMATION ABOUAG
)@@G@@T INSERTED RECORD.      @G@@@^ . GSETPKT CONTAINS INFORMATION ABOUT WHERAH
)@@G@@E TO INSERT IN CURRENT OF SET.@C@@@^ . IRADDR POINTS TO  INSERTED RECORDAI
)@@G@@.           @C@@@^ . AENTAD POINTS TO AUTO ENTRY ADDRESS.         @]@@@^AJ
)@@G@@ .          @A@@@^ . NEXT PTR IS IN A2 REGISTER       @]@@@^ .          AK
)@@G@@@]@@@^ .          @G@@@^          TZ        MANLNKSW          . $T IS SEAL
)@@G@@T TO LINK INTO MANUAL   @E@@@^          J         LNKGT4            . $AAM
)@@G@@  YES,LNKGT4      @A@@@^          LX        X9,IRADDR       @C@@@^      AN
)@@G@@    LX        X8,AENTAD         .         @G@@@^          AX,S6     X9,0AO
)@@G@@,X8           . POINT TO NEXT PTR INIR          @E@@@^          J       AP
)@@G@@  LNKGT5            . $J LNKGT5           @G@@@^LNKGT4    LX        X9,MAQ
)@@G@@PTRADD        . $P ADDR OF MAN PTR TO X9        @]@@@^LNKGT5 .    @G@@@^AR
)@@G@@          SX        X9,APADSAV        . SAVE ADDR OF NEXT PTR           AS
)@@G@@@G@@@^          SA        A2,0,X9        . $P STORE NEXT POINTER IN INS AT
)@@G@@REC   @E@@@^          SA        A2,NEXTDBP        . $P SAVE NEXT DBP    AU
)@@G@@@G@@@^          LA        A5,INSDBP      . $P DBP OF INSERTED RECORD TO AV
)@@G@@A5    @G@@@^          LX,H2     X9,GSETPKT+1   . $P ADDR OF NEXT PTR OF AW
)@@G@@CURRENT X9  @G@@@^          SA        A5,0,X9        . $P DBP OF INSERTEAX
)@@G@@D REC TO NEXT PTR @E@@@^ . WRITE OUT RECORD TO FREE SPACE FOR NEXT  IF NAY
)@@G@@ECESSARY    @]@@@^ .          @]@@@^ .          @^@@@^ . RECORD IS IN RDAZ
)@@G@@A     @]@@@^ .          @A@@@^          LA,U      A0,RDA         .@G@@@^BA
)@@G@@          SLJ       TFCHANGE          . $W TFCHANGE UPDATE TEMP FILE    BB
)@@G@@@]@@@^ .          @]@@@^ .          @C@@@^ . TRANSFER RECORD TO ITS BUFFBC
)@@G@@ER IF NECESSARY   @]@@@^ .          @]@@@^ .          @G@@@^          TZBD
)@@G@@        IRSAMESW          . $T DO WE NEED TO RESTORE BUFFER @E@C@^      BE
)@@G@@    J         RBNOT             . $T NO,RBNOT YES     @E@@@C          J BF
)@@G@@        RBNOT2            . $T NO,RBNOT YES     @G@@@^          LX,U    BG
)@@G@@  X8,RDA            . $P ORIGINATING ADDRESS TO X8    @G@@@^          LXBH
)@@G@@        X9,RBSAVE         . $P DESTINATION ADDRESS TO X9    @G@@@^      BI
)@@G@@    LA        A0,RDA+1          . $P DBP OF REC FROM RDA          @G@@@^BJ
)@@G@@          TE        A0,1,X9           . MIGHT NOT BE THE SAME IF MANUAL BK
)@@G@@@C@@@^          J         RBNOT1            .$J RBNOT1@C@@@^          LABL
)@@G@@        A0,RDA            .         @I@@@^          AA,U      A0,1      BM
)@@G@@        . $P LENGTH OF BLOCK TOTRANSFER TO A0         @I@@@^          LRBN
)@@G@@        R1,A0             . $P LENGTH OF BLOCK TO TRANSFER TO R1        BO
)@@G@@@E@@@^          SLJ       RTRANS            . $W RTRANS           @C@@@^BP
)@@G@@          J         RBNOT             . $J RBNOT@[@@@C .    @[@@@C .    BQ
)@@G@@@]@@@CRBNOT2 .    @[@@@C .    @[@@@C .    @F@@@C . THE RECORD THAT WAS IBR
)@@G@@NSERTED IS THE SAME AS CURRENTOF SET.     @E@@@C . IF CALL IS FROM IS, TBS
)@@G@@HEN THE BUFFER OF THE OLD CURRENT   @D@@@C . MAY HAVE TO BE UPDATED IF TBT
)@@G@@HE OLD CURRENT RECORD   @D@@@C . TYPE IS DIFFERENT FROM THE RECORD TO BEBU
)@@G@@ INSERTED.  @[@@@C .    @[@@@C .    @E@@@C          TNZ       ISLNKSW   BV
)@@G@@        . $T IS CALL FROM IS  @E@@@C          J         RBNOT           BW
)@@G@@  . $A NO,RBNOT YES     @F@@@C          LA,T1     A0,RDA+2          . $PBX
)@@G@@ RECORD CODE FROM RDA   @E@@@C          TNE       A0,IRCODE          . $BY
)@@G@@T ARE THEY EQUAL  @E@@@C          J         RBNOT             . $A NO,RBBZ
)@@G@@NOT YES     @D@@@C          SLJ       RBUFUPD           . $W RBUFUPD    CA
)@@G@@@C@@@C          J         RBNOT             . $J RBNOT@[@@@^ .    @^@@@^CB
)@@G@@RBNOT1 .             $H @E@@@^          TNZ       MANLNKSW          . SECC
)@@G@@T BETTER BE MANUAL@^@@@^          ER        ERR$@]@@@^RBNOT .     @A@@@^CD
)@@G@@ . CHECK IF THERE IS A PRIOR POINTER@]@@@^ .          @]@@@^ .          CE
)@@G@@@C@@@^          LA        A0,AENTAD         .         @E@@@^          LACF
)@@G@@,S2     A4,0,A0        . $P # OF SET LINKS TO A4@E@@@^          TLE,U   CG
)@@G@@  A4,2           . $T MORE THAN ONE LINK  @E@@@^          J         LNKDCH
)@@G@@ONE         . $A NO,LNKDONE YES     @A@@@^          TG,U      A4,4      CI
)@@G@@     .@A@@@^          ER        ERR$           .@E@@@^          LA,S5   CJ
)@@G@@  A1,0,A0        . $P SET TYPE TO A1      @E@@@^          TE,U      A1,0CK
)@@G@@1          . $T IS IT PRIOR TYPE    @E@@@^          J         IRLNK2    CL
)@@G@@     . $A NO,IRLNK2 YES       @G@@@^          TE,U      A4,02          .CM
)@@G@@ BETTER HAVE 2 LINKS OR ELSE        @A@@@^          ER        ERR$      CN
)@@G@@     .@A@@@^LNKGT1 . LINK PRIOR POINTER IN      @G@@@^       . FIRST STOCO
)@@G@@RE DBP OF CURRENT RECORD, THEN FETCH NEXT RECORD TO   @E@@@^       . MODCP
)@@G@@IFY PRIOR POINTER AND COMPARE WITH CURRENT      @]@@@^       .    @G@@@^CQ
)@@G@@          LA,H1     A0,SETCPKT+1   . $P ADDR OF CUR REC BUF TO A0       CR
)@@G@@@E@@@^          LA        A3,1,A0        . $P DBP OF CUR REC TO A3@]@@@^CS
)@@G@@ .          @C@@@^ . X8 POINTS TO NEXT PTR IN INSERTED REC        @]@@@^CT
)@@G@@ .          @C@@@^          LX        X8,APADSAV         .        @G@@@^CU
)@@G@@          SA        A3,1,X8        . $P STORE PRIOR POINTER IN INS REC  CV
)@@G@@@]@@@^ .          @]@@@^ .          @A@@@^ . FETCH RECORD THAT IS NEXT ICW
)@@G@@N SET @]@@@^ .          @]@@@^ .          @G@@@^          LA        A0,0CX
)@@G@@,X8           . $P DBP OF NEXT RECORD TO A0     @A@@@^ . A0 HAS DBP OF NCY
)@@G@@EXT RECORD        @G@@@^          SLJ       DBPGET            . $W DBPGECZ
)@@G@@T READ NEXT REC TO RDA  @E@@@^ . SET UP PACKET FOR GETSET CALL TO FIND PDA
)@@G@@RIOR POINTER      @A@@@^ . CALL GETSET FOR THE NEW RECORD   @]@@@^ .    DB
)@@G@@      @E@@@^          LA,T1     A1,RDA+2       . $P RECORD CODE TO A1   DC
)@@G@@@G@@@^          SA,H2     A1,SETCPKT+1   . $P RECORD CODE TO SETCPKT+1,,DD
)@@G@@H2    @A@@@^          LA,U      A0,RDA+1        @G@@@^          SA,H1   DE
)@@G@@  A0,SETCPKT   . $P RECORD ADDR TO SETCPKT+1,,H1      @E@@@^          LADF
)@@G@@,H2     A0,SETCPKT     . $P SET CODE TO A0      @G@@@^          LA      DG
)@@G@@  A1,SETCPKT+1   . $P ADDR OF RECORD TO H1 OF A1 AND  @G@@@^            DH
)@@G@@                       . $P RECORD CODE TO T3 OF A1         @A@@@^      DI
)@@G@@    TNZ,H1    C9             .@A@@@^          J         $+3            .DJ
)@@G@@@G@@@^          LA,U      A2,2           . $P SCHEMA INDICATOR TO A2    DK
)@@G@@      @A@@@^          J         LNKGT2         .@A@@@^          LA,U    DL
)@@G@@  A2,1           .@]@@@^LNKGT2 .    @G@@@^          SLJ       GETSET    DM
)@@G@@     . $W GETSET GET SET POINTERS         @G@@@^          DS        A0,GDN
)@@G@@SETPKT1    . $P SAVE INFO FROM GETSET, GSETPKT1 @A@@@^          DS      DO
)@@G@@  A2,GSETPKT1+2  .@A@@@^          SA        A4,GSETPKT1+4  .@G@@@^      DP
)@@G@@    JP        A1,$+2         . $T ANY ERROR IN GETSET ROUTINE     @E@@@^DQ
)@@G@@          ER        ERR$           . $A YES,EXIT NO         @G@@@^      DR
)@@G@@    LA        A0,INSDBP      . $P NEWLY CREATED DBP TO A0         @G@@@^DS
)@@G@@          SA        A0,1,A1        . $P STORE NEWLY CREATED DBP IN PRIORDT
)@@G@@@]@@@^ .          @C@@@^ . WRITE RECORD OUT TO THE TEMPORARY FILE       DU
)@@G@@@^@@@^ . RECORD IS IN RDA     @]@@@^ .          @A@@@^          LA,U    DV
)@@G@@  A0,RDA         .@G@@@^          SLJ       TFCHANGE          . $W TFCHADW
)@@G@@NGE UPDATE TEMP FILE    @E@@@^          SLJ       RBUFUPD           . $WDX
)@@G@@ RBUFUPD          @G@@@^          LA        A0,AENTAD         . $P ADDREDY
)@@G@@SS OF SET ENT TO A0     @E@@@^          LA,S5     A1,0,A0           . $PDZ
)@@G@@ SET TYPE TO A1   @E@@@^          TE,U      A1,011        . $T IS IT PRIEA
)@@G@@OR+ OWNER   @E@@@^          J         LNKDONE         . $A NO,LNKDONE YEEB
)@@G@@S     @A@@@^IRLNK3 . PREPARE TO LINK TO OWNER   @G@@@^          LA,H2   EC
)@@G@@  A0,SETCPKT+2   . $P POINTER TO SET CURRENCY TBL, A0 @G@@@^          LAED
)@@G@@,T2     A2,0,A0        . $P RECORD CODE OF OWNER TO A2      @G@@@^      EE
)@@G@@    TE,T1     A2,RDA+2       . $T WAS NEXT RECORD THE SET OWNER   @E@@@^EF
)@@G@@          J         IRLNK4         . $A NO,IRLNK4 YES       @A@@@^      EG
)@@G@@                             .@]@@@^ .          @]@@@^ .          @A@@@^EH
)@@G@@ . RECORD IN RDA IS THE SET OWNER   @]@@@^ .          @]@@@^ .          EI
)@@G@@@E@@@^          LA        A3,RDA+1       . $P DBP OF OWNER TO A3  @G@@@^EJ
)@@G@@          LX        X8,APADSAV      . $P AUTOMATIC PTR ADDR OF INS REC  EK
)@@G@@@E@@@^          TE,U      A1,011         . $T WAS IT PRIOR + OWNER@E@@@^EL
)@@G@@          J         IRLNK6         . $A NO,IRLNK6 YES       @G@@@^      EM
)@@G@@    SA        A3,2,X8        . $P STORE OWNER POINTER AS 3RD A PTR@A@@@^EN
)@@G@@          J         LNKDONE         @]@@@^ .          @E@@@^IRLNK6 .  LIEO
)@@G@@NK AS SECOND AUTOMATIC POINTER (NO PRIOR)       @E@@@^          TE,U    EP
)@@G@@  A1,010         . BETTER BE OWNER TYPE   @^@@@^          ER        ERR$EQ
)@@G@@@G@@@^          SA        A3,1,X8        . $P STORE OWNER POINTER  2ND  ER
)@@G@@      @C@@@^          J         LNKDONE         . $J LNKDONE@C@@@^IRLNK4ES
)@@G@@ . NEXT RECORD WAS NOT SET OWNER          @C@@@^       . DETERMINE WHEREET
)@@G@@ IS THE OWNER POINTER   @G@@@^          LX        X8,APADSAV      . $P AEU
)@@G@@UTOMATIC PTR ADDR OF INS REC  @G@@@^          TE,U      A1,011          EV
)@@G@@. $T WAS SET TYPE PRIOR + OWNER     @E@@@^          J         IRLNK7    EW
)@@G@@     . $A NO,IRLNK7 YES       @G@@@^          LX,H2     X9,GSETPKT1+1  .EX
)@@G@@ $P ADDRESS OF NEXT PTR TO X9       @G@@@^          LA        A3,2,X9   EY
)@@G@@     . $P PICK UP THIRD PTR AS OWNER PTR  @G@@@^          SA        A3,2EZ
)@@G@@,X8        . $P STORE THIRD IN INSERTED RECORD  @C@@@^          J       FA
)@@G@@  LNKDONE         . $J LNKDONE@]@@@^ .          @]@@@^ .          @A@@@^FB
)@@G@@IRLNK7 . SET TYPE WAS OWNER         @E@@@^      . OWNER POINTER IS WITHIFC
)@@G@@N RECORD ALREADY IN RDA       @]@@@^       .    @G@@@^          LX,H2   FD
)@@G@@  X9,GSETPKT+1      . $P ADDRESS OF NEXT POINTER TO X9@G@@@^          LAFE
)@@G@@        A3,1,X9        . $P PICK UP SECOND PTR AS OWNER PTR @G@@@^      FF
)@@G@@    SA        A3,1,X8        . $P STORE SECOND IN INSERTED RECORD @C@@@^FG
)@@G@@          J         LNKDONE         . $J LNKDONE@]@@@^ .          @]@@@^FH
)@@G@@ .          @A@@@^IRLNK2 . SET NOT PRIOR TYPE         @G@@@^          TEFI
)@@G@@,U      A1,011          . $T IS SET TYPE PRIOR WITH OWNER   @A@@@^      FJ
)@@G@@    J         IRLNK22         @E@@@^          TE,U      A4,03          .FK
)@@G@@ $  BETTER HAVE 3 LINKS @^@@@^          ER        ERR$@A@@@^          J FL
)@@G@@        LNKGT1          @]@@@^IRLNK22 .   @G@@@^          TE,U      A1,0FM
)@@G@@10          . $T SET IS OF OWNER TYPE           @A@@@^          ER      FN
)@@G@@  ERR$           .@E@@@^          TE,U      A4,02          .    BETTER HFO
)@@G@@AVE 2 LINKS @A@@@^          ER        ERR$           .@C@@@^          J FP
)@@G@@        IRLNK3         . $J IRLNK3  @]@@@^ .          @]@@@^ .          FQ
)@@G@@@C@@@^IRLNK1 . SET DOES NOT HAVE MORE THAN ONE LINK   @E@@@^          LAFR
)@@G@@,H1     A1,GSETPKT     . $P SET TYPE TO A1      @E@@@^          JZ      FS
)@@G@@  A1,LNKDONE      . $T TYPE WAS NEXT      @E@@@^          ER        ERR$FT
)@@G@@           . $A YES,LNKDONE NO,EXIT @]@@@^ .          @]@@@^ .          FU
)@@G@@@G@@@^LNKDONE . CHECK IF SET OWNER HAS A PRIOR POINTER TO LINK. FOR EXAMFV
)@@G@@PLE:  @E@@@^        . SET THAT IS LINKED NEXT WITH ORDER LAST           FW
)@@G@@@]@@@^        .   @A@@@^          LX        X8,AENTAD      .@E@@@^      FX
)@@G@@    LA,S5     A1,0,X8        . $P SET TYPE TO A1      @E@@@^          TNFY
)@@G@@Z       A1             . $T SET TYPE IS NEXT    @E@@@^          J       FZ
)@@G@@  LNKGT6         . $A YES,LNKGT6 NO       @E@@@^          TE,U      A1,0GA
)@@G@@10         . $T SET TYPE IS OWNER   @E@@@^          J         LNKDONE1  GB
)@@G@@        . $A NO,LNKDONE1 YES  @]@@@^ .          @C@@@^ . GET NEXT RECORDGC
)@@G@@ TO RDA TO CHECK ON TYPE      @]@@@^ .          @]@@@^LNKGT6 .    @E@@@^GD
)@@G@@          LA        A0,NEXTDBP     . $P NEXT DBP TO A0      @G@@@^      GE
)@@G@@    SLJ       DBPGET         . $W DBPGET READ NEXT RECORD TO RDA  @G@@@^GF
)@@G@@          LA,H2     A0,SETCPKT+2   . $P ADDR OF SET CUR TBL TO A0       GG
)@@G@@@G@@@^          LA,T2     A2,0,A0        . $P RECORD CODE OF SET OWNER TGH
)@@G@@O A2  @G@@@^          TE,T1     A2,RDA+2       . $T WAS NEXT RECORD THE GI
)@@G@@SET OWNER   @E@@@^          J         LNKDONE1       . $A NO,LNKDONE1 YEGJ
)@@G@@S     @C@@@^ . CALL GETSET TO FIND LINK TYPE OF OWNER       @A@@@^      GK
)@@G@@    LA,U      A0,RDA          @G@@@^          SA,H1     A0,SETCPKT+1   .GL
)@@G@@ $P UPDATE RECORD ADDRESS IN SETCPKT@E@@@^          LA,H2     A0,SETCPKTGM
)@@G@@     . $P SET CODE TO A0      @G@@@^          LA        A1,SETCPKT+1   .GN
)@@G@@ $P ADDR OF RECORD TO H1 OF A1      @G@@@^                              GO
)@@G@@     .    RECORD CODE TO T3 OF A1         @E@@@^          TNZ,H1    C9  GP
)@@G@@           .    NEW SCHEMA          @^@@@^          J         $+3 @G@@@^GQ
)@@G@@          LA,U      A2,2           . $P SCHEMA INDICATOR TO A2          GR
)@@G@@@A@@@^          J         IRGT55          @^@@@^          LA,U      A2,1GS
)@@G@@@]@@@^IRGT55 .    @]@@@^ .          @G@@@^          SLJ       GETSET    GT
)@@G@@     . $W GETSET GET SET POINTERS         @A@@@^          JP        A1,$GU
)@@G@@+2          @^@@@^          ER        ERR$@G@@@^          SSL       A0,1GV
)@@G@@8          .    GET RID OF LOWER PART OF A0     @E@@@^          TE,U    GW
)@@G@@  A0,01          . $T IS LINK TYPE PRIOR  @E@@@^          J         LNKDGX
)@@G@@ONE1       . $A NO,LNKDONE1 YES     @]@@@^ .          @G@@@^          LAGY
)@@G@@        A5,INSDBP      . $P DBP OF INSERTED RECORD TO A5    @G@@@^      GZ
)@@G@@    SA        A5,1,A1        . DBP OF INSERTED RECORD TO OWNER    @A@@@^HA
)@@G@@          LA,U      A0,RDA         .@G@@@^          SLJ       TFCHANGE  HB
)@@G@@     . $W TFCHANGE  CHANGE TEMP FILE      @G@@@^          SLJ       RBUFHC
)@@G@@UPD           . $W RBUFUPD UPDATE REC BUF       @]@@@^ .          @G@@@^HD
)@@G@@LNKDONE1 . UPDATE CURRENCY OF SET INTO WHICH AN INSERT JUST OCCURED     HE
)@@G@@@]@@@^       .    @G@@@^          LX,H2     X8,SETCPKT+2   . $P ADDR OF HF
)@@G@@SET CUR TBL ENTRY TO X8 @E@@@^          LA,H2     A0,SETCPKT     . $P SEHG
)@@G@@T CODE TO A0      @G@@@^          LA        A1,IRCODE      . $P INSERTEDHH
)@@G@@ RECORD CODE TO A1      @E@@@^          TE,T1     A0,0,X8        . $  SEHI
)@@G@@T CODES EQUAL     @E@@@^          ER        ERR$           .    NO,INTERHJ
)@@G@@NAL ERROR   @G@@@^          SA,T3     A1,0,X8        . $P UPDATE SET CURHK
)@@G@@RENCY RECORD CODE @C@@@^          LA        A2,1,X8           .         HL
)@@G@@@G@@@^          SA        A2,2,X8           . $P PUSH DBP OF OLD CURRENTHM
)@@G@@ DOWN @A@@@^          LA        A2,INSDBP      .@G@@@^          SA      HN
)@@G@@  A2,1,X8        . $P UPDATE DBP FOR CURRENT OF SET   @E@@@^          J HO
)@@G@@        LNKEXT            . $J LNKEXT           @]@@@^ .          @]@@@^HP
)@@G@@/           @]@@@^ .          @C@@@^ . INSERT AREA CONTROL RECORD WORKERHQ
)@@G@@ ROUTINE    @A@@@^ . SYNTAX:     ICTL AREA AREA-NAME  @A@@@^ .        ORHR
)@@G@@   ICTL AREA VARIABLE   @]@@@^ .          @E@@@^ . AN AREA CONTROL RECORHS
)@@G@@D WILL BE INSERTED AFTER THE CURRENT@^@@@^ . TEMPORARY FILE LINE. @C@@@^HT
)@@G@@ . AREA CONTROL RECORD FORMAT IS AS FOLLOWS:    @]@@@^ .          @E@@@^HU
)@@G@@ . ----------------------------------------------           @E@@@^ . :  HV
)@@G@@                 000000                   :           @E@@@^ . :--------HW
)@@G@@------------------------------------:           @E@@@^ . :      01      HX
)@@G@@:              :     02       :           @E@@@^ . :--------------------HY
)@@G@@-:----------------------:           @E@@@^ . :                     :  ARHZ
)@@G@@EA-CODE           :           @E@@@^ . :--------------------------------IA
)@@G@@------------:           @]@@@^ .          @C@@@^ . X10 POINTS TO PACKET IB
)@@G@@GENERATED BY THE PARSER @^@@@^ . A0 HAS PACKET TYPE   @]@@@^ .          IC
)@@G@@@]@@@^ .          @]@@@^ICTLA .     @A@@@^          TZ,H2     2,X10     ID
)@@G@@     .@G@@@^          J         ERROR75        . NO INDEX ALLOWED ON AREIE
)@@G@@A-NAME      @C@@@^          TNZ       2,X10             .         @C@@@^IF
)@@G@@          J         ERROR75           .         @G@@@^          LX,H1   IG
)@@G@@  X8,2,X10       . $P ADDR OF SYMBOL TAB ENTRY        @E@@@^          LAIH
)@@G@@,S4     A1,0,X8        . $P SYMBOL TYPE         @E@@@^          TE,U    II
)@@G@@  A1,020         . $T IS SYMBOL UNDEFINED @E@@@^          J         $+2 IJ
)@@G@@           . $A NO  YES,ICANAME     @A@@@^          J         ICANAME   IK
)@@G@@     .@G@@@^          TE,U      A1,017         . $T IS SYMBOL DEFINED PIIL
)@@G@@C X         @E@@@^          ER        ERR$           . $A NO,EXIT YES   IM
)@@G@@      @]@@@^ .          @E@@@^ . SYMBOL IS DEFINED AND AREA NAME IS ENTEIN
)@@G@@RED AS A VARIABLE @C@@@^ . SHOULD HAVE THE VALUE AS THE AREA NAME       IO
)@@G@@@G@@@^ . PREPARE TO CALL GETVAR FOR AREA NAME, X10 HAS ADDR TO SYMB TAB IP
)@@G@@ENTRY @G@@@^ .                                 . X10 HAS SYMBOL TABLE ENIQ
)@@G@@TRY ADDR    @C@@@^          LX        X10,X8            .         @G@@@^IR
)@@G@@          SZ        A0             . A0 HAS 0 SINCE ITEM CANNOT BE INDXDIS
)@@G@@@C@@@^          SLJ       GETVAR         . UPON RETURN@G@@@^            IT
)@@G@@                       . X10 HAS SYMBOL TABLE ENTRY ADDR    @E@@@^      IU
)@@G@@                             . A0  HAS CHRACTER LENGTH@G@@@^            IV
)@@G@@                       . A1 ABSOLUTE WORD ADDR OF ITEM      @G@@@^      IW
)@@G@@                             .    + ERROR CODE IF ANY ( BIT 35 )  @G@@@^IX
)@@G@@                                   . A2 CHARACTER OFFSET (1-6)          IY
)@@G@@@E@@@^                                   . A3 TYPE,   1 - PIC X   @E@@@^IZ
)@@G@@                                   .            2 - PIC 9   @G@@@^      JA
)@@G@@                             .            3 - PIC 9 COMP          @E@@@^JB
)@@G@@          JN        A1,GETER1      . $T SUCCESSFUL          @E@@@^      JC
)@@G@@                             . $A NO,GETER1 YES       @E@@@^          TEJD
)@@G@@,U      A3,01          .    BETTER BE PIC X ITEM@A@@@^          ER      JE
)@@G@@  ERR$           .@A@@@^                                   .@A@@@^      JF
)@@G@@                             .@G@@@^                                   .JG
)@@G@@ GET THE ITEM NAME POINTED TO BY A  @A@@@^                              JH
)@@G@@     .@G@@@^          TG,U      A0,13          . NAME SHOULD FIT WITHIN JI
)@@G@@2 WORDS     @G@@@^                                   . SINCE IT IS AN ARJJ
)@@G@@EA NAME           @A@@@^          J         ERROR77        .@G@@@^      JK
)@@G@@    JZ        A0,ERROR77     . NAME CANNOT CONSIST OF 0 CHARACTERS@G@@@^JL
)@@G@@          DS        A0,GVARSAVE    . $P SAVE REGISTERS FROM GETVAR      JM
)@@G@@@A@@@^          DS        A2,GVARSAVE+2  .@G@@@^          DL        A2,0JN
)@@G@@,A1        . $P TWO WORDS RETURNED TO A2,A3     @A@@@^          LA,U    JO
)@@G@@  A0,7           .@G@@@^          ANA       A0,GVARSAVE+2  . $P ( 7 - OFJP
)@@G@@FSET )*6 TO A0          @C@@@^          MSI,U     A0,6              .   JQ
)@@G@@      @G@@@^          DSL       A2,0,A0        . $P FIRST WORD OF AREA-NJR
)@@G@@AME TO A3   @E@@@^          SA        A3,ICTLAN      . $P FIRST WORD TO JS
)@@G@@ICTLAN@E@@@^          LA        A0,GVARSAVE    . $P # OF CHARS TO A0    JT
)@@G@@@E@@@^          TG,U      A0,7           . $T # OF CHARS > 6      @E@@@^JU
)@@G@@          J         ICTLGT1        . $A YES,ICTLGT1 NO      @]@@@^ .    JV
)@@G@@      @G@@@^ .                                   AREA CODE IS ONE WORD OJW
)@@G@@R LESS      @]@@@^ .          @A@@@^          LA,U      A1,6           .JX
)@@G@@@G@@@^          ANA       A1,A0          . $P (6- NO OF CHARS) TO A1    JY
)@@G@@      @G@@@^          LR        R1,A1          . $P # OF SPACES TO ADD TJZ
)@@G@@O R1        @E@@@^          LX,U      X9,ICTLAN      . $P ADDR OF WORD TKA
)@@G@@O X9  @C@@@^          SLJ       ADDSPCS        . $W ADDSPCS @]@@@^ .    KB
)@@G@@      @G@@@^ .                                   FIRST WRD OF 2 WRD ENTRKC
)@@G@@Y IS READY  @G@@@^ .                                   PREPARE TO ADD SPKD
)@@G@@ACES TO 2ND WORD  @A@@@^          LR        R2,SPACES      .@G@@@^      KE
)@@G@@    SR        R2,1,X9        . $P SPACES TO SECOND WORD           @C@@@^KF
)@@G@@          J         ANREADY        . $J ANREADY @]@@@^ .          @C@@@^KG
)@@G@@ICTLGT1                            . $H         @G@@@^                  KH
)@@G@@                 . AREA NAME MORE THAN 6 CHARS        @G@@@^          LAKI
)@@G@@        A1,GVARSAVE+1  . ADDR OF VAR RETURNED BY GETVAR     @G@@@^      KJ
)@@G@@    DL        A2,1,A1        . $P 2ND & 3RD WORD FROM GETVAR TO A2@C@@@^KK
)@@G@@                                   .    AND A3  @A@@@^          LA      KL
)@@G@@  A0,GVARSAVE+2  .@I@@@^          ANA,U     A0,1           . $P DOUBLE SKM
)@@G@@HIFT LEFT BY (OFFSET -1)*6          @C@@@^          MSI,U     A0,6      KN
)@@G@@        .         @A@@@^          LDSL      A2,0,A0        .@G@@@^      KO
)@@G@@    SA        A2,ICTLAN+1    . $P 2ND WORD OF AREA NAME           @A@@@^KP
)@@G@@                                   .@G@@@^          LA        A0,GVARSAVKQ
)@@G@@E    . PROCEED TO FILL UP WITH SPACES     @A@@@^          LA,U      A1,1KR
)@@G@@2          .@G@@@^          ANA       A1,A0          . $P (12-NO OF CHARKS
)@@G@@S) TO A1          @G@@@^          LR        R1,A1          . $P # OF SPAKT
)@@G@@CES TO FILL TO R1       @G@@@^          LX,U      X9,ICTLAN+1    . $P ADKU
)@@G@@DR OF 2ND WORD TO X9          @E@@@^          ANA,U     A0,6           .KV
)@@G@@ $P REL CHAR POS TO A0  @C@@@^          SLJ       ADDSPCS        . $W ADKW
)@@G@@DSPCS @]@@@^ .          @C@@@^ANREADY                            . $H   KX
)@@G@@      @G@@@^                                   . AREA NAME SHOULD BE REAKY
)@@G@@DY IN ICTLAN@G@@@^                                   . SEARCH C3 TABLE FKZ
)@@G@@OR AREA NAME      @A@@@^          TNZ,H1    C3             .@A@@@^      LA
)@@G@@    J         ERROR68         @E@@@^          LXM,H2    X8,C3          .LB
)@@G@@ $P C3 ADDR TO X8       @G@@@^          LXI,U     X8,9           . $P INLC
)@@G@@ CREMENT VALUE TO X8          @G@@@^          ANX,U     X8,9           .LD
)@@G@@ $P X8 POINTS ONE ENTRY LENGTH BEFOR@E@@@^          DL        A2,ICTLAN LE
)@@G@@     . $P AREA NAME TO A2,A3  @G@@@^          LA,H1     A0,C3          .LF
)@@G@@ $P # OF WORDS IN C3 TABLE TO A0    @G@@@^          DSL       A0,36     LG
)@@G@@     . $P PREPARE TO DIVIDE BY # OF WORDS @C@@@^          DI,U      A0,9LH
)@@G@@           .    IN ENTRY@E@@@^          TZ        A1             . $P RELI
)@@G@@MAINDER TO A1     @G@@@^          ER        ERR$           .    REMAINDELJ
)@@G@@R BETTER BE NONZERO     @G@@@^          LR        R1,A0          . $P # LK
)@@G@@OF ENTRIES IN C3 TABLE TO R1  @G@@@^ANSLP1    SE        A2,10,*X8      .LL
)@@G@@ $T FOUND 1ST WORD IN TABLE         @E@@@^          J         ERROR76   LM
)@@G@@     . $A NO,ANNFOUND YES     @G@@@^          TE        A3,2,X8        .LN
)@@G@@ $P FOUND 2ND WORD IN TABLE         @E@@@^          J         ANSLP1    LO
)@@G@@     . $A NO,ANSLP1 YES       @]@@@^ .          @G@@@^ .                LP
)@@G@@                   AREA NAME FOUND IN C3 TABLE        @E@@@^ .          LQ
)@@G@@                         X8 POINTS TO AREA ENTRY@]@@@^ .          @]@@@^LR
)@@G@@ .          @E@@@^          LA,T1     A0,0,X8        . $P AREA CODE TO ALS
)@@G@@0     @G@@@^          LSSL      A0,24          . $P GET RID OF HIGH ORDELT
)@@G@@R BITS      @A@@@^          SSL       A0,24          .@G@@@^          SALU
)@@G@@,H2     A0,CNTRCD+2    . $P AREA CODE TO CNTRCD+2           @A@@@^      LV
)@@G@@    LA        A1,(01,0,02)   .@G@@@^          SA        A1,CNTRCD+1    .LW
)@@G@@ $P SET UP CNTRCD+1 TO (1,0,2)      @]@@@^DOINSERT    @G@@@^ .          LX
)@@G@@                         PREPARE TO INSERT CONTROL RECORD   @G@@@^ .    LY
)@@G@@                               AFTER CURRENT LINE GIVEN BY LN     @]@@@^LZ
)@@G@@ .          @]@@@^ .          @E@@@^          LA        A2,LN          .MA
)@@G@@ $P LINE # TO A2        @G@@@^          SA        A2,IPKT        . $P CUMB
)@@G@@RRENT LINE # TO IPKT          @G@@@^          LA,U      A3,3           .MC
)@@G@@ $P LENGTH OF CONTROL REC (3) TO A3 @G@@@^          SA,H2     A3,IPKT+2 MD
)@@G@@     . $P LENGTH OF CONTROL REC TO IPKT   @C@@@^          LX,U      X9,CME
)@@G@@NTRCD      . $          @G@@@^          SX        X9,IPKT+1      . $P ADMF
)@@G@@DR OF CONTROL RECORD TO IPKT+1@]@@@^ .          @G@@@^ .                MG
)@@G@@                   CALL TEMP FILE ACCESS METHOD       @]@@@^ .          MH
)@@G@@@E@@@^          LX,U      X10,IPKT       . $P ADDR OF IPKT TO X10 @G@@@^MI
)@@G@@          LMJ       X11,TF$IA      . $W TF$IA CALL TEMP FILE ACCESS METHMJ
)@@G@@@A@@@^          TZ,T1     2,X10          .@A@@@^          ER        ERR$MK
)@@G@@           .@A@@@^          LA        A0,IPKT        .@E@@@^          SAML
)@@G@@        A0,LN          . $P UPDATE LINE NUMBER  @C@@@B          SZ      MM
)@@G@@  STATUS            .         @A@@@^          LX        X10,X10SAV     .MN
)@@G@@@C@@@^          J         *RETURN        . $E EXIT    @]@@@^ .          MO
)@@G@@@C@@@^ICANAME .                          . $H         @]@@@^ .          MP
)@@G@@@E@@@^ .                                   SYMBOL IS UNDEFINED,   @G@@@^MQ
)@@G@@ .                                   NAME OF THE VARIABLE IS AREA NAME  MR
)@@G@@@G@@@^ .                                   X8 POINTS TO SYMBOL TABLE ENTMS
)@@G@@RY    @E@@@^          ANX,U     X8,5           . $P BACK UP 5 WORDS     MT
)@@G@@@G@@@^          DL        A2,0,X8        . $P NAME OF VARIABLE SUPPOSED MU
)@@G@@      @E@@@^          DS        A2,ICTLAN      .    TO BE AN AREA NAME  MV
)@@G@@@C@@@^          J         ANREADY        . $J ANREADY @]@@@^/           MW
)@@G@@@C@@@^ . INSERT DIRECT CONTROL RECORD WORKING ROUTINE @C@@@^ . SYNTAX:  MX
)@@G@@   ICTL DIRECT NUMERIC NUMERIC      @C@@@^ .             ICTL DIRECT NUMMY
)@@G@@ERIC VARIABLE     @C@@@^ .             ICTL DIRECT VARIABLE NUMERIC     MZ
)@@G@@@C@@@^ .             ICTL DIRECT VARIABLE VARIABLE    @]@@@^ .          NA
)@@G@@@G@@@^ . THE FIRST OPERAND  OF THE COMMAND SPECIFIES THE PAGE NUMBER    NB
)@@G@@      @G@@@^ . THE SECOND OPERAND OF THE COMMAND SPECIFIES THE RECORD NUNC
)@@G@@MBER        @C@@@^ . DIRECT CONTROL RECORD FORMAT IS AS FOLLOWS   @]@@@^ND
)@@G@@ .          @E@@@^ . ----------------------------------------------     NE
)@@G@@      @E@@@^ . !                  000000                    !           NF
)@@G@@@E@@@^ . !--------------------------------------------!           @E@@@^NG
)@@G@@ . !     04       !              !     02       !           @E@@@^ . !--NH
)@@G@@------------------------------------------!           @E@@@^ . !      PANI
)@@G@@GE NUMBER     !   RECORD NUMBER     !           @E@@@^ . !--------------NJ
)@@G@@------------------------------!           @]@@@^ .          @C@@@^ . X10NK
)@@G@@ POINTS TO PACKET GENERATED BY THE PARSER @^@@@^ . A0 HAS PACKET TYPE   NL
)@@G@@@]@@@^ .          @]@@@^ .          @]@@@^ICTLD .     @G@@@^          AXNM
)@@G@@,U      X10,2          . $P X10 POINTS TO ENTRY OF 1ST OPER @G@@@^      NN
)@@G@@    SLJ       ICTGVAR        . $W ICTGVAR GET VARIABLE OR NUMERIC @G@@@^NO
)@@G@@                                   . $ UPON RETURN, A0 WILL HAVE NUMBER NP
)@@G@@@G@@@^                                   . $ X10 WILL POINT TO NEXT ENTRNQ
)@@G@@Y     @G@@@^                                   .   FIRST OPERAND IS THE NR
)@@G@@PAGE NUMBER @A@@@^          TG        A0,(01000000)  .@A@@@^          J NS
)@@G@@        ERROR80        .@G@@@^          SA,H1     A0,CNTRCD+2    . $P PANT
)@@G@@GE NUMBER TO CNTRCD+2,,H1     @G@@@^          SLJ       ICTGVAR        .NU
)@@G@@ $W ICTGVAR GET 2ND VARIABLE OR NUM @A@@@^          TG        A0,(010000NV
)@@G@@)    .@A@@@^          J         ERROR80        .@G@@@^          S,H2    NW
)@@G@@  A0,CNTRCD+2    . $P RECORD NUMBER TO CNTRCD+2,,     @A@@@^          LANX
)@@G@@,U      A1,04          .@G@@@^          SA,T1     A1,CNTRCD+1    . $P SPNY
)@@G@@ECIAL CODE 4 TO CNTRCD+1,,T1  @C@@@^          J         DOINSERT       .NZ
)@@G@@ $J DOINSERT@]@@@^/           @]@@@^ .          @]@@@^ .          @]@@@^OA
)@@G@@ .          @E@@@^ . SUBROUTINE TO MODIFY THE RECORD BUFFER OF A RECORD OB
)@@G@@      @E@@@^ . TYPE WHICH IS CURRENTLY IN RDA IF THE RECORD IN RDA HAS  OC
)@@G@@@C@@@^ . THE SAME DBP AS THAT IN THE RECORD BUFFER.   @]@@@^ .          OD
)@@G@@@]@@@^ .          @]@@@^ .          @C@@@^RBUFUPD   +         0         OE
)@@G@@        . $H      @]@@@^ .          @]@@@^ .          @C@@@^ . FIRST SEAOF
)@@G@@RCH RECORD SEQUENCE TABLE           @]@@@^ .          @]@@@^ .          OG
)@@G@@@E@@@^          LA,T1     A2,RDA+2          . $P RECORD CODE TO A2@G@@@^OH
)@@G@@          LR,H1     R1,TT1            . $P RECORD COUNT TO R1           OI
)@@G@@@G@@@^          LX,H2     X9,TT1            . $P ADDR OF SEQUENCE TABLE OJ
)@@G@@TO X9 @C@@@^          LXI,U     X9,1              .         @G@@@^      OK
)@@G@@    SE,T1     A2,,*X9           . $T IS RECORD CODE IN TABLE      @E@@@^OL
)@@G@@          ER        ERR$              . $A NO,EXIT YES      @G@@@^      OM
)@@G@@    ANX       X9,(1,1)          . $P X9 POINTS TO RECORD SEQUENCE @G@@@^ON
)@@G@@          LA,H2     A3,0,X9           . $P RECORD BUFFER ADDRESS TO A3  OO
)@@G@@@G@@@^          JZ        A3,UPDRET         . $T RECORD BUFFER INITIALIZOP
)@@G@@ED    @E@@@^                                      . $A NO,UPDRET YES    OQ
)@@G@@@G@@@^          LA        A1,RDA+1          . $P DBP OF CHANGED RECORD TOR
)@@G@@O A1  @E@@@^          TE        A1,1,A3           . $T ARE DBPS EQUAL   OS
)@@G@@@E@@@^          J         UPDRET            . $A NO,UPDRET YES    @]@@@^OT
)@@G@@ .          @C@@@^ . RECORD IN RECORD BUFFER SAME AS THAT IN RDA  @A@@@^OU
)@@G@@ . UPDATE RECORD BUFFER FROM RDA    @]@@@^ .          @]@@@^ .          OV
)@@G@@@]@@@^ .          @C@A@^          P$RINT    (PF1 1,4,UPDATEMSG)         OW
)@@G@@@C@@@A .        P$RINT    (PF1 1,4,UPDATEMSG)         @G@@@^          LXOX
)@@G@@,U      X8,RDA            . $P ORIGINATING ADDR TO X8       @G@@@^      OY
)@@G@@    LX        X9,A3             . $P DESTINATION ADDR TO X9       @C@@@^OZ
)@@G@@          LA,H2     A0,RDA            .         @G@@@^          AA,U    PA
)@@G@@  A0,1              . $P LENGTH TO TRANSFER TO A0     @G@@@^          LRPB
)@@G@@        R1,A0             . $P LENGTH TO TRANSFER TO R1     @E@@@^      PC
)@@G@@    SLJ       RTRANS            . $W RTRANS           @C@@@^UPDRET    J PD
)@@G@@        *RBUFUPD          . $E EXIT @A@@@^ . MAKE OWNER RECORD CURRENT OPE
)@@G@@F SET @]@@@^ .          @]@@@^ .          @]@@@^OWNCUR .    @C@@@^      PF
)@@G@@    LX        X8,AENTAD         .         @E@@@^          LA,T2     A1,0PG
)@@G@@,X8           . SET CODE TO A1      @A@@@^          LX,H2     X9,TT2    PH
)@@G@@      @C@@@^          LXI,U     X9,3              .         @C@@@^      PI
)@@G@@    LR,H1     R1,TT2            .         @G@@@^          SE,T1     A1,,PJ
)@@G@@*X9           . $P SEARCH SET CURRENCY TABLE    @^@@@^          ER      PK
)@@G@@  ERR$@G@@@^          ANX       X9,(3,3)          . $P X9 POINTS TO SET PL
)@@G@@CUR TBLE ENT@C@@@^          LA        A1,IRCODE         .         @C@@@^PM
)@@G@@          TE,T2     A1,0,X9           .         @^@@@^          ER      PN
)@@G@@  ERR$@G@@@^          SA,T3     A1,0,X9           . $P UPDATE SET CURRENPO
)@@G@@CY          @G@@@^          LA        A0,IRBFAD         . $P ADDR OF IR PP
)@@G@@BUFFER TO A0      @C@@@^          LA        A2,1,X9           . $       PQ
)@@G@@@I@@@^          SA        A2,2,X9           . $P DBP OF OLD CURRENT PUSHPR
)@@G@@ED DOWN           @C@@@^          LA        A2,1,A0           . $       PS
)@@G@@@G@@@^          SA        A2,1,X9           . $P NEW DBP TO TT2 TABLE   PT
)@@G@@      @E@@@^          J         LNKEXT            . $J LNKEXT           PU
)@@G@@@A@@@^SLMAN . ENTRY FOR MANUAL SET        @I@@@^          SA        A0,MPV
)@@G@@ANLNKSW       . $P SET MANLNKSW TO IND MAN SET LINK         @E@@@^      PW
)@@G@@    J         LNGT11            . $J LNGT11           @]@@@^LNKEXT  .   PX
)@@G@@@E@@@^          SZ        ISLNKSW           . $P ZERO ISLNKSW     @C@@@^PY
)@@G@@          J         *SETLINK          . $E EXIT @]@@@^ .          @]@@@^PZ
)@@G@@ .          @]@@@^/           @C@@@^ . SUBROUTINE TO LOCATE ITEM SYM TABQA
)@@G@@ ENTRY      @]@@@^ .          @C@@@^GETITEM   +         0              .QB
)@@G@@ $H GETITEM @G@@@^          LSSL      A1,18          . $T IS LINK WITHINQC
)@@G@@ C15 OR C14       @E@@@^          JN        A1,GETEM1      . $A NO,GETEMQD
)@@G@@1 YES       @^@@@^ . ENTRY IS WITHIN C15  @]@@@^ .          @G@@@^      QE
)@@G@@    SSL       A1,18          . $P REL LOCATION WITHIN C15 TO A1   @G@@@^QF
)@@G@@          LA,H2     A0,C15         . $P ADDR OF C15 TBL TO A0           QG
)@@G@@@G@@@^          LA,H1     A3,C15         . $P # OF WRDS IN C15 TO A3    QH
)@@G@@      @C@@@^          J         GETEM2         . $J GETEM2  @]@@@^GETEM1QI
)@@G@@ .    @A@@@^          LSSL      A1,1           .@G@@@^          SSL     QJ
)@@G@@  A1,19          . $P REL LOC WITHIN C14 TO A1        @G@@@^          LAQK
)@@G@@,H2     A0,C14         . $P ADDR OF C14 TBL TO A0           @G@@@^      QL
)@@G@@    LA,H1     A3,C14         . $P # OF WRDS IN C14 TO A3          @]@@@^QM
)@@G@@GETEM2 .    @A@@@^          ANA,U     A3,3           .@G@@@^          TGQN
)@@G@@        A1,A3          .    RELATIVE POINTER WITHIN TABLE   @E@@@^      QO
)@@G@@    ER        ERR$           .    INTERNAL ERROR      @E@@@^          AAQP
)@@G@@        A0,A1          . $P POINT TO ITEM WANTED@C@@@^          J       QQ
)@@G@@  *GETITEM       . $E EXIT    @]@@@^ .          @]@@@^ .          @E@@@^QR
)@@G@@TFUPDATE  +         0                 . $H TFUPDATE         @]@@@^ .    QS
)@@G@@      @C@@@^ . SUBROUTINE TO UPDATE THE TEMPORARY FILE      @E@@@^ . WILQT
)@@G@@L INSERT THE CREATED RECORD IN THE TEMP FILE          @]@@@^ .          QU
)@@G@@@G@@@^          SA        A0,IAPKT       . $P STORE IN FIRST WRD OF IAPKQV
)@@G@@T H2  @G@@@^          LA,H2     A2,0,A1        . $P LENGTH OF RECORD TO QW
)@@G@@A2          @G@@@^          SA,H2     A2,IAPKT+2     . $P LENGTH OF IR RQX
)@@G@@ECORD TO IAPKT    @^@@@^          AA,U      A0,1@E@@@^          AA,U    QY
)@@G@@  A1,1           . $P ADDR OF RCD TO A1   @E@@@^          SA,H2     A1,IQZ
)@@G@@APKT+1     . $P ADDR OF RCD TO IAPKT@A@@@^          LX,U      X10,IAPKT RA
)@@G@@     .@G@@@^          LMJ       X11,TF$IA      . $W TF$IA INSERT RECORD RB
)@@G@@IN TEMP FILE@A@@@^          TZ,T1     IAPKT+2        .@E@@@^          ERRC
)@@G@@        ERR$           .  INTERNAL ERROR        @G@@@^          LA      RD
)@@G@@  A0,IAPKT          . $P UPDATE LINE NUMBER           @C@@@^          SARE
)@@G@@        A0,LN             .         @C@@@^          J         *TFUPDATE RF
)@@G@@        . $P EXIT @]@@@^ .          @]@@@^ .          @]@@@^ .          RG
)@@G@@@E@@@^ . SUBROUTINE TO ESTABLISH THE SET CURRENCY OF A GIVEN SET  @G@@@^RH
)@@G@@ . UPON ENTRY:   SETCPKT PROPERLY CONTAINS DATAL SEE DESCRIPTION IN     RI
)@@G@@@A@@@^ .                  THE D BANK      @E@@@^ . UPON RETURN   SETCPKTRJ
)@@G@@ CONTAINS SET CURRENCY INFORMATION  @]@@@^ .          @]@@@^ .          RK
)@@G@@@]@@@^ .          @C@@@^SETCUR .                           . $H SETCUR  RL
)@@G@@@^@@@^          +         0   @E@@@^          LA,H2     A1,SETCPKT      RM
)@@G@@. $P SET CODE TO A1     @A@@@^ . SEARCH SET CURRENCY TABLE        @G@@@^RN
)@@G@@          LX,H2     X9,TT2         . $P SET CURRENCY TABLE ADDR         RO
)@@G@@@G@@@^          LXI,U     X9,3           . $P X9 WILL ICRREMENT BY 3    RP
)@@G@@      @E@@@^          LR,H1     R1,TT2         . $P SET COUNT TO R1     RQ
)@@G@@@E@@@^          SE,T1     A1,,*X9        . $T FOUND SET ENTRY     @E@@@^RR
)@@G@@          J         SCERR1         . $A NO,SCERR1 YES       @E@@@^      RS
)@@G@@    ANX       X9,(3,3)       . $P BACK UP X9          @G@@@^          SXRT
)@@G@@,H2     X9,SETCPKT+2   . $P SAVE PTR TO SET CUR TBLE        @G@@@^      RU
)@@G@@    LA,T3     A2,0,X9        . $P RECORD CODE OF CURRENT REC TO A2@^@@@^RV
)@@G@@          TNZ       A2  @A@@@^          J         SCERR2          @G@@@^RW
)@@G@@          LSSL      A2,24          . $P GET RID OF EXTRA BITS           RX
)@@G@@@A@@@^          SSL       A2,24           @G@@@^          SA,H2     A2,SRY
)@@G@@ETCPKT+1   . $P SAVE RCD IN SETCPKT+1,,H2       @E@@@^          LA      RZ
)@@G@@  A3,1,X9        . $P DBP TO A3           @^@@@^ . SEARCH SEQUENCE TBL  SA
)@@G@@@E@@@^          LR,H1     R1,TT1         . $P RCD SEQ COUNT TO R1 @G@@@^SB
)@@G@@          LX,H2     X9,TT1         . $P ADDR OF  SEQ TBL TO X9          SC
)@@G@@@E@@@^          LXI,U     X9,1           . $P X9 TO INCREMENT BY 1@E@@@^SD
)@@G@@          SE,T1     A2,,*X9        . $T FOUND SET ENTRY     @E@@@^      SE
)@@G@@    J         SCERR3         . $A NO,SCERR3 YES       @G@@@^          ANSF
)@@G@@X       X9,(1,1)       . $P X9 POINTS TO REC ENTRY          @E@@@^      SG
)@@G@@    SX,H1     X9,SETCPKT+2      . $P SAVE SEQ ENTRY   @G@@@^          LASH
)@@G@@,H2     A0,0,X9        . $P RCD BUFFER ADDR TO A0           @E@@@^      SI
)@@G@@    TNZ       A0             . $T PTR EXISTS          @E@@@^          J SJ
)@@G@@        SCERR4         . $A NO,SCERR4 YES       @A@@@^          SA,H1   SK
)@@G@@  A0,SETCPKT+1    @E@@@^          SZ,H1     SETCPKT        . $P SET ZEROSL
)@@G@@ RETURN CODE@C@@@^SCEXT     J         *SETCUR        . $E EXIT    @]@@@^SM
)@@G@@ .          @]@@@^SCERR1 .    @A@@@^          LA,U      A0,1           .SN
)@@G@@@E@@@^          SA,H1     A0,SETCPKT        . $P SET RET CODE 1   @C@@@^SO
)@@G@@          J         SCEXT          . $J SCEXT   @A@@@^SCERR2    LA,U    SP
)@@G@@  A0,2           .@E@@@^          SA,H1     A0,SETCPKT        . $P SET RSQ
)@@G@@ET CODE 2   @C@@@^          J         SCEXT          . $J SCEXT   @]@@@^SR
)@@G@@SCERR3 .    @A@@@^          LA,U      A0,3           .@E@@@^          SASS
)@@G@@,H1     A0,SETCPKT        . $P SET RET CODE 3   @C@@@^          J       ST
)@@G@@  SCEXT          . $J SCEXT   @]@@@^SCERR4 .    @A@@@^          LA,U    SU
)@@G@@  A0,4           .@E@@@^          SA,H1     A0,SETCPKT        . $P SET RSV
)@@G@@ET CODE 4   @C@@@^          J         SCEXT          . $J SCEXT   @]@@@^SW
)@@G@@.           @C@@@^ . ROUTINE TO SEARCH A VARIABLE LENGTH TABLE.   @G@@@^SX
)@@G@@ . UPON ENTRY  X10 POINTS TO THE FIXED WORD IDENTIFYING THE TABLE.      SY
)@@G@@@E@@@^ .                 THIS WORD HAS # OF WRDS IN TABLE IN H1   @G@@@^SZ
)@@G@@ .                               STARTING ADDRESS OF TABLE IN H2        TA
)@@G@@@G@@@^ .             A1  CONTAINS SEARCH KEY WHICH IS T1 OF 1ST WORD OF TB
)@@G@@ENTRY @E@@@^ . UPON RETURN A2  HAS RETURN CODE.  0= SUCCESSFUL          TC
)@@G@@@E@@@^ .                                   1= ENTRY NOT FOUND     @E@@@^TD
)@@G@@ .                                   2= TABLE EMPTY         @E@@@^ .    TE
)@@G@@         A0  WILL POINT TO ENTRY FOUND IF ANY         @]@@@^ .          TF
)@@G@@@]@@@^TABSE .     @C@@@^          +         0                 .         TG
)@@G@@@E@@@^          TNZ,H1    0,X10     . $T ANY WORDS IN TABLE       @C@@@^TH
)@@G@@          J         TABN2     . $A NO,TABN2 YES @G@@@^          L,H2    TI
)@@G@@  A0,0,X10  . $P ADDRESS OF FIRST ENTRY TO A0         @E@@@^TALOP1    TNTJ
)@@G@@E,T1    A1,0,A0   . $T ARE RECORD CODES EQUAL   @C@@@^          J       TK
)@@G@@  TABYES    . $A YES,TABYES NO@E@@@^          TNZ,T3    0,A0      . $T ITL
)@@G@@S THIS LAST ENTRY       @C@@@^          J         TABN1     . $A YES,TABTM
)@@G@@N1 NO @E@@@^          A,T3      A0,0,A0   . $P POINT TO NEXT ENTRY      TN
)@@G@@@A@@@^          J         TALOP1          @E@@@^TABN1     L,U       A2,1TO
)@@G@@      . $P ITEM NOT FOUND CODE      @C@@@^          J         TABEXT    TP
)@@G@@. $J TABEXT       @C@@@^TABN2     L,U       A2,2      . $P TABLE EMPTY  TQ
)@@G@@@C@@@^          J         TABEXT    . $J TABEXT       @G@@@^TABYES    L,TR
)@@G@@U       A2,0      . $P SET SUCCESSFUL RETURN CODE           @C@@@^TABEXTTS
)@@G@@    J         *TABSE     . $E EXIT        @]@@@^ .          @]@@@^ .    TT
)@@G@@      @C@@@^ . SUBROUTINE TO CHANGE THE TEMPORARY FILE      @E@@@^ . . ATU
)@@G@@0 HAS ADDRESS OF RECORD BUFFER IN RDA FORMAT          @]@@@^ .          TV
)@@G@@@C@@@^TFCHANGE  +         0                 . $H      @]@@@^ .          TW
)@@G@@@]@@@^ .          @E@@@^ . FIRST FIND THE RECORD CONCERNED IN THE TEMP FTX
)@@G@@ILE         @]@@@^ .          @]@@@^ .          @G@@@^          LA      TY
)@@G@@  A1,0,A0           . $P FIRST WRD OF BUF TO CPKT     @G@@@^          SATZ
)@@G@@,H2     A1,CPKT+2         . LENGTH OF RECORD TO CHANGE      @C@@@^      UA
)@@G@@    LA        A2,A0             .         @C@@@^          AA,U      A2,1UB
)@@G@@              .         @G@@@^          SA        A2,CPKT+1         . $PUC
)@@G@@ RECORD ADDRESS TO CPKT       @E@@@^          LA        A1,1,A0   . $P DUD
)@@G@@BP TO FIND TO A1        @E@@@^          SA        A1,DBPPKT+1       . $PUE
)@@G@@ DBP TO PACKET    @C@@@^          LX,U      X10,DBPPKT        .         UF
)@@G@@@G@@@^          LMJ       X11,TF$DBP1       . $W TF$DBP1 DONT DELIVER REUG
)@@G@@CORD  @E@@@^          TZ,T1     DBPPKT+2          . $T SUCCESSFUL       UH
)@@G@@@C@@@^          ER        ERR$              .         @G@@@^          LAUI
)@@G@@        A1,DBPPKT         . $P LINE NUMBER OF RECORD        @G@@@^      UJ
)@@G@@    SA        A1,CPKT           . $P LINE NUMBER TO CPKT          @C@@@^UK
)@@G@@          LX,U      X10,CPKT          .         @G@@@^          LMJ     UL
)@@G@@  X11,TF$C          . $W TF$C CALL TEMP FILE AM       @C@@@^          TZUM
)@@G@@,T1     CPKT+2            .         @^@@@^          ER        ERR$@C@A@^UN
)@@G@@          L$SNAP    'TFCHGE',0,12,CPKT          @C@@@A       .  L$SNAP  UO
)@@G@@  'TFCHGE',0,12,CPKT          @C@@@^          J         *TFCHANGE       UP
)@@G@@  . $E EXIT @]@@@^ .          @]@@@^ .          @E@@@^ . SUBROUTINE TO FUQ
)@@G@@ETCH RECORD WHOSE DBP IS IN A0 TO RDA     @]@@@^ .          @]@@@^ .    UR
)@@G@@      @C@@@^DBPGET    +         0                 . $H      @G@@@^      US
)@@G@@    SA        A0,DBPPKT+1    . $P DBP TO SEARCH FOR TO DBPPKT+1   @A@@@^UT
)@@G@@          LA,U      A0,RDA+1       .@G@@@^          SA,H2     A0,DBPPKT+UU
)@@G@@2    . $P BUFFER ADDR TO DBPPKT+2,,H2     @A@@@^          LX,U      X10,UV
)@@G@@DBPPKT     .@G@@@^          LMJ       X11,TF$DBP     . $W TF$DBP LOCATE UW
)@@G@@RECORD TO RDA+1   @A@@@^          TZ,T1     DBPPKT+2       .@E@@@^      UX
)@@G@@    ER        ERR$           .    INTERNAL ERROR      @G@@@^          LAUY
)@@G@@        A0,DBPPKT         . LINE NUMBER FROM PACKET         @G@@@^      UZ
)@@G@@    SA        A0,RDALN          . $P RECORD NUMBER TO RDALN       @A@@@^VA
)@@G@@          LA        A0,DBPPKT+3    .@E@@@^          SA        A0,RDA    VB
)@@G@@     . $P  (LENGTH) TO RDA    @C@@@^          J         *DBPGET         VC
)@@G@@   . $E EXIT@]@@@^ .          @]@@@^ .          @G@@@^ .                VD
)@@G@@                   SUBROUTINE TO GET NUMBERIC VALUE   @G@@@^ .          VE
)@@G@@                         FROM AN ENTRY WITHIN A PACKET      @G@@@^ .    VF
)@@G@@                               GENERATED BY THE PARSING ROUTINE.  @G@@@^VG
)@@G@@ .                                   THE VALUE IS TO BE RETURNED IN A0  VH
)@@G@@@G@@@^ .                                   X10 POINTS TO ENTRY WITHIN PAVI
)@@G@@CKET  @C@@@^ICTGVAR   +         0              . $H         @G@@@^      VJ
)@@G@@    TZ,H1     0,X10          . $T IS ENTRY FOR VARIABLE           @E@@@^VK
)@@G@@          J         ICTVAR         . $A YES,ICTVAR NO       @]@@@^ .    VL
)@@G@@      @E@@@^ .                                   ENTRY IS NUMERIC       VM
)@@G@@@A@@@^          LA        A0,0,X10       .@A@@@^          LSSL      A0,1VN
)@@G@@8          .@A@@@^          JP        A0,ERROR79     .@A@@@^          LSVO
)@@G@@SL      A0,1           .@E@@@^          SSL       A0,19          . $P # VP
)@@G@@OF CHARS TO A0    @A@@@^          TG,U      A0,13          .@A@@@^      VQ
)@@G@@    J         ERROR80        .@G@@@^          TG,U      A0,7           .VR
)@@G@@ $T ONE OR TWO WORDS OF NUMERIC FD  @E@@@^          J         GVARGT2   VS
)@@G@@     . $A ONE,GVARGT1 TWO     @G@@@^          DL        A0,1,X10       .VT
)@@G@@ $P NUMERIC FD VALUE TO A0,A1       @G@@@^          AX,U      X10,2     VU
)@@G@@     . A0,A1 SHOULD B PADDED WITH BLANKS  @G@@@^ICTLCVT   SLJ       FD$BVV
)@@G@@IN         . $W FD$BIN CONVERT FD TO BINARY     @G@@@^                  VW
)@@G@@                 . UPON RETURN, A0 = BINARY VALUE     @G@@@^            VX
)@@G@@                       . STATUS MUST BE = 0 FOR PROPER RET  @E@@@^      VY
)@@G@@    TZ        STATUS         . $T CONVERSION OK       @E@@@^          J VZ
)@@G@@        ERROR79        . $A NO,ERROR79 YES      @C@@@^          J       WA
)@@G@@  *ICTGVAR       . $E EXIT    @G@@@^GVARGT2   LA        A0,1,X10       .WB
)@@G@@ $P 1ST WORD OF NUMERIC VALUE TO A0 @E@@@^          LA        A1,SPACES WC
)@@G@@     . $P SPACES TO A1        @G@@@^          AX,U      X10,1          .WD
)@@G@@ $P X10 POINTS TO NEXT ENTRY        @C@@@^          J         ICTLCVT   WE
)@@G@@     . $J ICTLCVT @A@@@^                                   .@G@@@^      WF
)@@G@@                             . X10 WILL POINT TO NEXT ENTRY IN PKT@A@@@^WG
)@@G@@                                   .@C@@@^ICTVAR    LR        R2,X10    WH
)@@G@@     . $H         @G@@@^          TZ,H2     0,X10          . $P MAKE SURWI
)@@G@@E THERE IS NO INDEX     @A@@@^          J         ERROR81         @^@@@^WJ
)@@G@@          SZ        A0  @A@@@^          LX,H1     X10,0,X10       @C@@@^WK
)@@G@@          SLJ       GETVAR         . $W GETVAR  @E@@@^          JN      WL
)@@G@@  A1,GETER1      . $T SUCCESSFUL          @E@@@^                        WM
)@@G@@           . $A NO,GETER1 YES       @G@@@^          TE,U      A3,02     WN
)@@G@@     . $P ITEM SHOULD BE PIC 9 OR PIC 9 C @^@@@^          J         $+2 WO
)@@G@@@A@@@^          J         ICTGT4          @^@@@^          TE,U      A3,3WP
)@@G@@@^@@@^          ER        ERR$@C@@@^ICTGT4    LX        X10,R2         .WQ
)@@G@@ $H         @G@@@^          SLJ       GETNUM         . $W GETNUM GET BINWR
)@@G@@ARY VALUE TO A0   @G@@@^          AX,U      X10,1          . $P X10 POINWS
)@@G@@TS TO NEXT ENTRY        @C@@@^          J         *ICTGVAR       . $E EXWT
)@@G@@IT    @]@@@^ .          @G@@@^ .                                   SUBROWU
)@@G@@UTINE TO ADD SPACES TO A WORD @G@@@^ .                                  WV
)@@G@@ STARTING FROM A CERTAIN CHARACTER  @G@@@^ .                            WW
)@@G@@       POSITION WITHIN THE WORD.          @G@@@^ .                      WX
)@@G@@             A0 RELATIVE CHAR POSITION IN WORD  @E@@@^ .                WY
)@@G@@                   X9 WORD ADDRESS        @G@@@^ .                      WZ
)@@G@@             R1 NUMBER OF SPACES TO FILL        @]@@@^ .          @C@@@^XA
)@@G@@ADDSPCS   +         0              . $H         @G@@@^          LXI,U   XB
)@@G@@  A0,1           . $P A0 USED TO POINT TO REL CHAR POS@A@@@^          LRXC
)@@G@@,U      R2,05           @A@@@^ADDLOOP                            .@G@@@^XD
)@@G@@          JGD       R1,$+2         . $P LOOP THROUGH (R1) TIMES         XE
)@@G@@@A@@@^          J         ADDEXIT        .@A@@@^          EX        SPCFXF
)@@G@@ILL,*A0    .@A@@@^          J         ADDLOOP        .@C@@@^ADDEXIT   J XG
)@@G@@        *ADDSPCS       . $E EXIT    @]@@@^ .          @]@@@^ .          XH
)@@G@@@E@@@^SPCFILL   SR,S1     R2,0,X9        . $P 1ST CHAR POS        @E@@@^XI
)@@G@@          SR,S2     R2,0,X9        . $P 2ND CHAR POS        @E@@@^      XJ
)@@G@@    SR,S3     R2,0,X9        . $P 3RD CHAR POS        @E@@@^          SRXK
)@@G@@,S4     R2,0,X9        . $P 4TH CHAR POS        @E@@@^          SR,S5   XL
)@@G@@  R2,0,X9        . $P 5TH CHAR POS        @E@@@^          SR,S6     R2,0XM
)@@G@@,X9        . $P 6TH CHAR POS        @]@@@^/           @]@@@^ .          XN
)@@G@@@]@@@^$(2)        @^@@@^SW1       +         0   @A@@@^RHSW      EQUF    XO
)@@G@@  SW1,,S1         @A@@@^CLCSW     EQUF      SW1,,S2         @A@@@^NOBFSWXP
)@@G@@    EQUF      SW1,,S3         @E@@@^IRSAMESW  EQUF      SW1,,S4         XQ
)@@G@@  . IR SAME AS CURRENT  @C@@@^C1ADD     +         0         . SEE EQUF  XR
)@@G@@      @]@@@^ .          @G@@@^AENTAD    EQUF      C1ADD,,H2      . ADDR XS
)@@G@@OF AUTO ENTRY IN C9 OR C1     @G@@@^C1ENAD    EQUF      C1ADD,,H1 . ADDRXT
)@@G@@ IN C9 OR C1 ENT FOR INS REC        @G@@@^C5ENAD    +         0         XU
)@@G@@. ADDR IN C11 OR C5 ENT FOR INS REC       @G@@@^C17ENAD   +         0   XV
)@@G@@              . ADDR OF INS REC ENTRY IN C17    @G@@@^RSEQAD    +       XW
)@@G@@  0         . ADDRESS OF RECORD SEQUENCE ENTRY        @]@@@^ .          XX
)@@G@@@]@@@^ .          @G@@@^IRBFAD    +         0         . TO SAVE INSERTEDXY
)@@G@@ RECORD BUFFER ADDRESS  @G@@@^OCCASAV   +         0         . ADDR OF OCXZ
)@@G@@CURS ITEM SYM TAB ENT         @G@@@^PTRASAV   +         0         . ADDRYA
)@@G@@ESS OF POINTER POINTED TO IN INS REC@G@@@^APTRNM    EQUF      PTRASAV,,HYB
)@@G@@1 . # OF AUTO MEMBER ENTRIES REMAINING    @E@@@^IRADDR    EQUF      PTRAYC
)@@G@@SAV,,H2       . SAVE ADDR TO INS REC@G@@@^IRRSIZ    +         0         YD
)@@G@@        . INSERTED RECORD SIZE IN WORDS+3 @]@@@^ .          @]@@@^ .    YE
)@@G@@      @G@@@^IRDBP     +         0              . TO SAVE DBP OF INS REC YF
)@@G@@TYPE OCC;   @G@@@^                                   . BEFORE CHANGING TYG
)@@G@@O ARTIFICIAL KEY  @C@@@^IRINFO    +         0                 . SEE EQUFYH
)@@G@@@G@@@^IRLGTH    EQUF      IRINFO,,T1        . LENGTH OF INS REC IN CHARSYI
)@@G@@      @E@@@^IRCODE    EQUF      IRINFO,,T2        . INSERTED REC CODE   YJ
)@@G@@@G@@@^IRLGTHW   EQUF      IRINFO,,T3        . LENGTH OF IR REC INWORDS  YK
)@@G@@      @A@@@^ERRCODE   +         0              .@C@@@^TEMPCNT   +       YL
)@@G@@  0                 .         @]@@@^ .          @]@@@^ .          @]@@@^YM
)@@G@@ .          @G@@@^INSDBP    +         0                 . DBP OF RECORD YN
)@@G@@TO INSERT         @]@@@^ .          @]@@@^ .          @C@@@^ADDSAV    + YO
)@@G@@        0                 . SEE EQUF@G@@@^APADSAV   EQUF      ADDSAV,,H1YP
)@@G@@        . FOR AUTOMATIC POINTER ADDRESS   @I@@@^RBSAVE    EQUF      ADDSYQ
)@@G@@AV,,H2        . FOR CUR BUF ADDR IF NOT SAME AS IR          @]@@@^ .    YR
)@@G@@      @A@@@^RETURN    +         0              .@^@@@^X10SAV    +       YS
)@@G@@  0   @G@@@^IPKT      +         0         .  RCD# TO INSERT AFTER OR BEFYT
)@@G@@ORE         @]@@@^ .          @]@@@^ .          @E@@@^          +       YU
)@@G@@  0         . ADDR OF RECORD TO INSERT    @G@@@^          +         0   YV
)@@G@@      . T1 IS STATUS RETURNED ( 0=SUCCESSFUL)   @G@@@^                  YW
)@@G@@            . H2 IS LENGTH OF RECORD IN WRDS          @G@@@^CPKT . PACKEYX
)@@G@@T TO CALL TEMPORARY FILE ACCESS METHOD TO CHANGE RECORD     @C@@@^      YY
)@@G@@    +         0                 . RCD#    @E@@@^          +         0   YZ
)@@G@@           . ADDR OF RECORD         @]@@@^ .          @]@@@^ .          ZA
)@@G@@@G@@@^          +         0              . T1 HAS STATUS UPON RETURN    ZB
)@@G@@      @G@@@^                                   . H2 HAS LENGTH OF RECORDZC
)@@G@@ UPON RETURN@]@@@^ .          @E@@@^IAPKT . PACKET TO INSERT RECORD IN TZD
)@@G@@EMPORARY FILE           @C@@@^          +         0              . RCD# ZE
)@@G@@      @E@@@^          +         0              . ADDR OF RECORD         ZF
)@@G@@@G@@@^          +         0              . T1 HAS STATUS UPON RETURN    ZG
)@@G@@      @G@@@^                                      . H2 IS LENGTH IN WORDZH
)@@G@@S           @]@@@^ .          @]@@@^ .          @E@ @^DBPPKT . PACKET TOZI
)@@G@@ CALL TEMPORARY FILE ACCESS METHOD        @E@@@ DBPPKT* . PACKET TO CALLZJ
)@@G@@ TEMPORARY FILE ACCESS METHOD       @C@@@^          +         0         ZK
)@@G@@     . (RCD#)*    @E@@@^          +         0              . DBP TO SEARZL
)@@G@@CH FOR      @G@@@^          +         0              . T1 IS ERROR RET ,ZM
)@@G@@ H2 IS BUFFER ADDR@E@@@^          +         0                 . (LENGTH)ZN
)@@G@@*           @E@@@^SETCPKT   +         0,0            . ERROR STATUS, SETZO
)@@G@@ CODE @]@@@^ .          @]@@@^ .          @G@@@^          +         0,0 ZP
)@@G@@           . ADDR OF RECORD BUFFER,  RECORD CODE@G@@@^          +       ZQ
)@@G@@  0,0            . ADDR OF SEQ TBL ENT, ADDR OF SET   @E@@@^            ZR
)@@G@@                       .    CURRENCY TABLE      @G@@@^GSETPKT   +       ZS
)@@G@@  0,0            . SET TYPE IN H1, SET LINKS IN H2    @G@@@^          + ZT
)@@G@@        0,0            . ERROR ST IN H1, NEXT SET PTR ADDR  @]@@@^ .    ZU
)@@G@@      @]@@@^ .          @C@@@^          +         0              . NEXT ZV
)@@G@@PTR   @E@@@^          +         0              . OWNER PTR (IF ANY)     ZW
)@@G@@@E@@@^          +         0              . PRIOR PTR (IF ANY)     @G@@@^ZX
)@@G@@GSETPKT1  +         0,0            . SAME DESCRIPTION AS GSETPKT        ZY
)@@G@@@]@@@^ .          @]@@@^ .          @A@@@^          +         0,0       ZZ
)@@G@@     .@A@@@^          +         0              .@A@@@^          +       AA
)@@G@@  0              .@A@@@^          +         0              .@]@@@^ .    AB
)@@G@@      @C@@@^CNTRCD    +         0              . ALWAYS ZERO@G@@@^      AC
)@@G@@    +         0,0,02         . T1 CONTAINS SPECIAL CODE           @G@@@^AD
)@@G@@          +         0              . INFO ABOUT CONTROL RECORD          AE
)@@G@@@G@@@^                                   . T3 CONTAINS RECORD LENGTH: 2 AF
)@@G@@      @A@@@^SPACES    +         '      '        @G@@@^ICTLAN    RES     AG
)@@G@@  2              . TO HOLD AREA NAME FOR ICTL COMMAND @G@@@^GVARSAVE  REAH
)@@G@@S       4              . TO SAVE REGISTERS RET FROM GETVAR  @E@@@^      AI
)@@G@@                             . CHARACTER LENGTH       @G@@@^            AJ
)@@G@@                       . ABSOLUTE WORD ADDR OF ITEM + ERR   @E@@@^      AK
)@@G@@                             . CHARACTER OFFSET       @E@@@^            AL
)@@G@@                       . TYPE OF ITEM   1- PIC X@]@@@^ .          @A@@@^AM
)@@G@@MSGNOSET  ' NO CURRENT OF SET '     @C@@@^MSGNOC    ' NO C TABLE ENTRY FAN
)@@G@@OR RECORD CODE = '@C@@@^MSGGVR    ' ERROR RETRUN FROM GETVAR CODE = '   AO
)@@G@@@E@@@^MSGNRN    ' VARIABLE IS NOT A RECORD NAME, NOTHING INSERTED'@C@@@^AP
)@@G@@MSGDEP    'DEPENDING ON ITEM HAS WRONG VALUE  ' @A@@@^MSGERROR  '***INSEAQ
)@@G@@RT ERROR STATUS'  @A@@@^UPDATEMSG 'UPDATED RECORD BUFFER   '@^@@@^KEYPKTAR
)@@G@@*   RES       50  @]@@@^ .          @]@@@^ .          @]@@@^$(4)        AS
)@@G@@@C@@@^SW2       +         0                 .         @G@@@^ISLNKSW   EQAT
)@@G@@UF      SW2,,S1           . CALL TO SETLINK FROM IS         @E@@@^MSPARSAU
)@@G@@W   EQUF      SW2,,S2           . REC IN MANUAL SET   @G@@@^MANLNKSW  EQAV
)@@G@@UF      SW2,,S3           . MANUAL SET LINK SWITCH          @A@@@^      AW
)@@G@@                             .@C@@@^INSINFO1  +         0               AX
)@@G@@  . SEE EQUF@G@@@^ISCODE    EQUF      INSINFO1,,T1      . SET CODE TO INAY
)@@G@@SERT INTO         @G@@@^NUMPTR    EQUF      INSINFO1,,T2      . # OF MANAZ
)@@G@@ PTRS UP TO INS SET     @G@@@^MSETNUM   EQUF      INSINFO1,,T3      . # BA
)@@G@@OF MAN SETS, ST AT 1          @C@@@^MANINF1   +         0               BB
)@@G@@  . SEE EQUF@E@@@^MPTRDIS   EQUF      MANINF1,,T1       . DISP OF 1ST MABC
)@@G@@N PTR @G@@@^TOTMPTR   EQUF      MANINF1,,T2       . TOT # OF MAN POINTERBD
)@@G@@S           @G@@@^TOTDISP   EQUF      MANINF1,,T3       . DISP PAST LASTBE
)@@G@@ MAN PTR          @C@@@^MADDR1    +         0                 . SEE EQUFBF
)@@G@@@G@@@^MWRDAD    EQUF      MADDR1,,H1        . ADDR OF 1ST MAN WRD, C1   BG
)@@G@@      @E@@@^MENTAD    EQUF      MADDR1,,H2        . ADDR OF MAN SET ENT BH
)@@G@@@C@@@^MADDR2    +         0                 . SEE EQUF@E@@@^MPTRADD   EQBI
)@@G@@UF      MADDR2,,H2        . ADDR OF MAN INSERT  @G@@@^NEXTDBP   +       BJ
)@@G@@ 0        . TO CHECK IF OWNER HAS A PRIOR POINTER     @^@@@^          ENBK
)@@G@@D           ___     . $P ZERO ISLNKSW     @C@@@^          J         *SETBL
)@@G@@LINK          . $E EXIT @]@@@^ .          @]@@@^ .          @]@@@^/     BM
)@@G@@)@@[F[KO #@K^C#O[@@@@@@@/K@@]2/KG@@B'=@@@@(@@@@GC?E@@@ @@@@@ @@@@@AA)@@KBN
)@@G@@AA0@@JAA@@@@)@D[F@K^[@K^[@K^C#K@@@@@'=@@@@/K@@H,/K@@GK/K@@@L/K@@@L/K@@@MBO
)@@G@@/K@@@L/K@@#J/K@@#EAB@@@@)@M[MK[@^@K@@@@@@@C*S@@@REE@@]/K@@C@(@E@@#/K@@B"BP
)@@G@@(@E@@]/K@@C@*^E@@#/K@@B"*^E@@]AC@@@@)@W[EK@K)IK)HK)IKK@@@@@@(^I@@@[@)@@^BQ
)@@G@@G^)@@@'=@@@@!C)@@@H8)@@[CW*@@[/K@@B!%8K@@]AD@@@@)@>[N@^^[@^G[^^@@@C@@@@^BR
)@@G@@[W@@@[CWD@@[/K@@C^%8)@@[C*(@@@REU@@#[SK@@ECWY@@@/K@@CCAE@@@@)@\[EKL[^ ]@BS
)@@G@@.@EKB)@@@@@@R')@@@/K@@@9(C@@@@AA@@@BO'@@@][@@@@HC@C@@[A]@@@ RAG@@@AF@@@@BT
)@@G@@)@8[N@EKCC@)CC-)C@&;@@@[G8@@@[CWK@@[N*W@@@[C@@@[/K@@B0*@@@@I'^@@J:R')@@@BU
)@@G@@/K@@@'AG@@@@)[][N@K[@K0@^[[KO@'^@@J][^K@@Y[^@@@[/G0@CECO/@@@H@@@@@/K@@[]BV
)@@G@@%SW)@@/K@@[O8KK@[^AH@@@@)[G[F[K[#@L@KO[@@@@@@@@@1@G@@@/K@@AU'^@@J;C@@@@ BW
)@@G@@'^@@C8[4@@@@C8@@@[/K@@BV*C@@@YAI@@@@)[P[#]@5#@KK0^K^G[^[#@K@@@@@@@*0@@@@BX
)@@G@@/K@@CK(^@@@#'^@@]I[4@@@@C8@@@[[C@@@#'=@@@@AJ@@@@)[X[F@K0^^G[^G[[@^^@@@@@BY
)@@G@@[^K@@YCST@@@/K@@CO?0T@@@RAK@@#HSK@@]C=S@@@RE@@@#/K@@CMAK@@@@)[&[F@KO[#@LBZ
)@@G@@#@L#@KKOG[@@GW)@@]C^)@@BN@K@@IHS)@@[CS)@@]RAK@@#/K@@BV*C@@@Y'^@@J]AL@@@@CA
)@@G@@)[\[N#@K@[@K@@@@@@C@I)@@/K@@[;8KK@[8&;0__"&;)__"G09@@@C@0@@IH8)@@[G@)@[[CB
)@@G@@[^)@@^AM@@@@)[9[MK@K0^^G[^^@@@)[G@@@G)C@@@C^@@@BRE@@@#;(D@@@PQK@@[R'K@@=CC
)@@G@@C9@@@[/K@@[6[@J)@@AN@@@@)]#[M^G[^ [^ @KO@@'^@@J;C@@@@ '^@@C8[@0@@HC@"@@[CD
)@@G@@C@)@@ [^K@@[C^K@@#C8@@@][[W@@@AO@@@@)]H[N@^G[^G[@@K0^@ 0@@@@G9@@@[C[@@@DCE
)@@G@@C@0@[[N0S@@@R+S@@@ ^@@@#RE@@@#@@@@@@/K@@AUAP@@@@)]R[N[[#@KK^@K^G[@AA@@@#CF
)@@G@@/K@@]*%S*@@@/K@@]\8KK@]YO'@@@]CW)@@[C@T@@@ @@@@LOAK@@BAQ@@@@)]-[F#@L#@KKCG
)@@G@@0^K[#@L@K@@@/K@@]?/GK@]%[0@@@@C8@@@[/CK@]*[O0@@[H@0@[[[TK@@[[X@@@]AR@@@@CH
)@@G@@)]%[E@K^G[^G[^[][^@@@@@@C@K@@@/K@K]I[P@@@][TK@@]/K@@]WO'@@@[;*K@@[G1C@@@CI
)@@G@@G1S@@@AS@@@@)]3[N[[@@^@@@@@@@@G8)@@[/K@@].(@@@@JW8)@@A;G)@@6;*)@@M/K@@#DCJ
)@@G@@*CE@@]C@%@@][@K@@LAT@@@@)].[F[^^**KD]^[%]-@+@@@@[@@@@@C@@@@L'=@@@@*WE@@]CK
)@@G@@/,0@@@R')@@LA])@@MO')@@#[^)@@NAU@@@@)#A[F[K)GKOC#OC^L]@4K@@@/K@@]3H8K@@[CL
)@@G@@'=@@@@(@@@@HC@K@@@'=@@@@/K@K@J @@@@@R])@@KAV@@@@)#J[MK[@@K@@@@@@@@H8)@@[CM
)@@G@@CW*@@[/K@@B!%8K@@]C*S@@@REE@@]/K@@B"(@E@@]/K@@B"*^E@@]AW@@@@)#T[#]@9]@5]CN
)@@G@@@9[^ ]@.@@@@@@@@@@/K@@#<(C@@@@[SK@@ECWY@@@[@)@@^G^)@@@'=@@@@!C)@@@AX@@@@CO
)@@G@@)#-[M(@Y) C^^@K^^@N*W@@@O'@@@[R]@@@G[C@@@[/K@@B0*@@@@I'^@@J:R')@@@/K@@#=CP
)@@G@@R')@@@AY@@@@)#:[N[KO[@KL@^ @@@'^@@J][^K@@YCSS@@@/G0@#7CO8@@@^@K@@G/K@@#9CQ
)@@G@@8KK@#\N@K@@G^@K@@GAZ@@@@)#5[N[K[@KO^K[[@@@[?0@@@C80@@[/K@@^&*^I@@@C@)@@^CR
)@@G@@CSK@@E/K@@#?O'@@@[/K@@BV*C@@@YBA@@@@)#_[F[K)NK]=]U@O)OK^@@@@CW/@@[/^)@B0CS
)@@G@@'^@@J:R')@@@/K@@^ R')@@@/K@@^^(C@@@@CSK@@EBB@@@@)^C[F@K)HKL@^^(@%)@@@@@@CT
)@@G@@'^@@J:R')@@@[00@@@C80@@[/K@@^J(?G@@@[^@@@]'=@@@@/^0@^EBC@@@@)^L[N@KK^ @^CU
)@@G@@ [@@@@R]K@@^[@0@@CG80@@#/K@@^U[@0@@CG80@@#GS/@@[CW/@@[[@@@@#/^)@^SBD@@@@CV
)@@G@@)^V[F[K)Q[][T][T][X[@@@@C80@@[[[@@@ '=@@@@[@@@@@G@@@@@[ D@@@G9@@@[C[@@@@CW
)@@G@@C@@@@CBE@@@@)^=[N[K@K)HKK^^@@@C@@@@ [ W@@@G9K@@[C W@@][@@@@ '=@@@@%WW@@]CX
)@@G@@C^I@@@/K@@^![40@@@BF@@@@)^,[F][)KL][-[KL[@@@@@@@R]@@@K[[G@@[[[@@[Y[[@@@HCY
)@@G@@[[@@@@G9@@@[^@K@@DN@W@@[C[@@@@BG@@@@)^7[N[^ @^ @KO @@@/K@@ D(4@@@@R]K@@ CZ
)@@G@@/K@@^"[XK@@ECPS@@@/K@@ P(?@@@@REC@@]R]K@@ BH@@@@) [[N[^ @^@^^@@@@@;G)@@=DA
)@@G@@CW)@@E[!D@@]C9@@@C/K@@ CC9@@@*/K@@ B(0@@@@[W9@@]CS0@@EBI@@@@) F[U^@KKKK@DB
)@@G@@O'K@@][^(@@@G8)@@[[O)@@E[^(@@]GO?@@[C@@@@]G8)@@[/K@@ J(@@@@JW8)@@ABJ@@@@DC
)@@G@@) Q[N[KL[^ [K^^@@@CO8@@@RA@@@[/@0@ ?CC0@@BAA@@@[O'@@@[^CK@@BN*S@@@RE@@@[DD
)@@G@@AAK@@BBK@@@@) )[N@^@K^^KO^@@@@O'@@@[RA@@@[[DK@@BH9K@@[CDK@@B'^@@C8C8@@@[DE
)@@G@@/K@@ =C8@@@@/C0@ <BL@@@@) %[N[K^ [@^@@@@@@1@D@@@/K@@A@!O8@@@G80@@]H@0@@CDF
)@@G@@C@0@@DRAK@@[RE@@@[/K@@ WAA@@@[BM@@@@) 4[N]@4^C#O^[@K@@/K@@A@8KK@ " @C)@]DG
)@@G@@O+D@@@&'@@@[R]@@@ '=@@@@(@@@[[N=T@@@'=@@@@BN@@@@) "[MK^ @KO^[[@@@@C@K@@ DH
)@@G@@ @C@@@P'@@@[OQG@@[C@@@@]RA@@@B/K@@AB(0@@@@/K@@ / @C)@]BO@@@@)AC[F][ @KKKDI
)@@G@@)TK)GK@@@@@@C8@@@#/K@@C**@@@@@/,0@@@[?E@@@C8@@@]R])@@K'^@@I4C@@@@@BP@@@@DJ
)@@G@@)AL[F[@K]+-@4)*KA)@@@@@@'=@@@@*@@@[)/,0@@@R')@[V/K@@AZ*@C@@]REE@@][?E@@@DK
)@@G@@R])@@KBQ@@@@)AU[F[K)VK)WK)GKL@KK@@@@(CC@@][@@@@A'^@@I=C^S@@]/K@K@J @@@@@DL
)@@G@@ @@@@@ @@@@@R])@@KBR@@@@)A<[N@^@^CBO@K^@@@/K@@A\/K@@A!%80@@]/GK@BI'^@@@@DM
)@@G@@ @@@@GR])@@G'^@@I=CCS@@]/K@@A9BS@@@@)A![MK)HK)YKL@[@@@COS@@@/K@@B;?[K@@GDN
)@@G@@CPS@@]/K@@B;?WC@@]R]@@@A'^@@@@'=@@@@%80@@#BT@@@@)A7[UK^^[@@@H80@@[G?8@@[DO
)@@G@@T80@@ACW8@@@/K@@A"T@K@@GCWC@@]COS@@@R]@@@A/K@@A"T@K@@GBU@@@@)B][M[@^ [@@DP
)@@G@@@@@@@@[^W@@@G8K@@[[^W@@]C@@@@ [OK@@EG8K@@[/@)@BBW8K@@A;GK@@=G@K@@JBV@@@@DQ
)@@G@@)BG[F@K@KM=@2^@]]@@@@@@@C8K@@-C8@@@_/,0@@@C/@@@@[@K@@F;CK@@N;*K@@[/K@@AQDR
)@@G@@'^@@J;BW@@@@)BP[#]@X[K)EK0@K))K]=@2^@@@@@@/,0@@@C/@@@@/K@@CQ'=@@@@R#@@@[DS
)@@G@@/,0@@@C@@@@F/,0@@@BX@@@@)BX[F[^C[4 [KOC]-]@C@@@@/,0@@@C/@@@(/,0@@@C@@@@FDT
)@@G@@[@K@@FC^K@@Y/,0@@@C8K@@MC8@@@5BY@@@@)B&[#[K)D^C@=G@^CC^[#@@@@@@@@@R#@@@]DU
)@@G@@/K@@CG'=@@@@R#@@@[/,0@@@C/@@@)/,0@@@C@@@@FBZ@@@@)B,[F]][@EK#CK@CC-@I)*C@DV
)@@G@@C@@@@F[@K@@F/,0@@@C8K@@=C8@@@9/,0@@@C/@@@@/K@@C]'=@@@@CA@@@@)B7[#]@(#@[]DW
)@@G@@][@K0@K))K@@@@@@@@C8@@@./K@@CS'=@@@@R#@@@#/K@@CA'=@@@@R#@@@[/,0@@@CB@@@@DX
)@@G@@)B_[N@^@K[@^@@@@@@C8@@[]/K@@C?C8@@[[/K@@C?C8@@[@/K@@C?C8@@@_/K@@C?C8@@@"DY
)@@G@@/K@@C?CC@@@@)CD[N@^@K[@^@@@@@@C8@@[B/K@@C?C8@@[A/K@@C?C8@@[ /K@@C?C8@@[^DZ
)@@G@@/K@@C?C8@@[#/K@@C?CD@@@@)CN[N@^@K[@^@@@@@@C8@@[G/K@@C?C8@@[F/K@@C?C8@@[EEA
)@@G@@/K@@C?C8@@[D/K@@C?C8@@[C/K@@C?CE@@@@)CX[N@^@K[@^@@@@@@C@@@[L/K@@C?C8@@[KEB
)@@G@@/K@@C?C8@@[J/K@@C?C8@@[I/K@@C?C8@@[H/K@@C?CF@@@@)C$[F@^@K^C#^CCM=@2^@@@@EC
)@@G@@/,0@@@C/@@@@[@@@@@[@@@@@/K@@C?C8@@[N/K@@C?C8@@[M/K@@C?CG@@@@)C0[F[^C[4C#ED
)@@G@@^C]=G@^CC^^@@@@@@@/K@K@J'=@@@@R#@@@[/,0@@@C@@@@@/,0@@@C8K@@RC8@@[NCH@@@@EE
)@@G@@)C9[N[^[[[]@5[@@@@O+S@@@&'K@@[RAK@@B'=@@@@(@@@@KC1C@@@C[K@@H/K@@DB*@@@@GEF
)@@G@@RA@@@[CI@@@@)D#[N@K[@^@KO[[@@@*C@@@Y'^@@J][^K@@YCSS@@@/K@@I)%8@@@[/K@@D#EG
)@@G@@[[T)@@/K@@II8^@@D CJ@@@@)DH[F]@5[KO[#@L]@4KO^@@@ ^@@@I[*@@@@C8@@@['=@@@@EH
)@@G@@*?@@@@/K@@DY%@K@@ CCK@@Z'=@@@@CK@@@@)DQ[N#@L@KO[[^ @KKC@H@@[[^K@@I/K@@D)EI
)@@G@@[@@@@DC@D@@]RAK@@)/K@@D)C@@@@D/K@@DU*4@@@@CL@@@@)D)[F@EKICE])*KB*@)@@@@@EJ
)@@G@@/K@@D%C8)@@]/K@@D((C@@@@C@K@@ZC^@@@Y[C@@@ZC8@@@@'^@@KICM@@@@)D([EK)+KO [EK
)@@G@@K^C#OG[^@@@@/K@@D6*?@@@@'=@@@@/CK@D0[[@@@>9*)@@<9*@@@-'^@@@@C8)@@[CN@@@@EL
)@@G@@)D2[F[KL@K0^KL#@L[@@@@@@C[K@@H[@)@@ [@(@@@AEK@@IRAK@@^/K@@D7O+S@@@RA@@@[EM
)@@G@@RAK@@BCO@@@@)D;[F[]=#+@)*[M[1[K)W@@@C@@@@[RAK@@IR'@@@@/K@@EF**@@@@'^@@J;EN
)@@G@@C8@@@@[[T@@@RAK@@+CP@@@@)E^[EK^CB@K)<K^G[^@@@@@@/K@@EO(4@@@@/K@@EO'^@@@@EO
)@@G@@N@K@@GG8@@@[C@@@@@/K@@EM%@D@@[CQ@@@@)EH[F][1[K^[@K0^K)HKK@@@C1G@@@C^@@@[EP
)@@G@@'=@@@@(?@@@@/K@@EO'^@@H'/K@@EO:S@@@ECW@@@]CR@@@@)EQ[MK[]@4^@K)HKK@CC@@@ZEQ
)@@G@@'=@@@@%9@@@]/K@@FS%8K@@[C=W@@@'=@@@@!9@@@^/K@@F>?9@@@]CS@@@@)E)[EKKK^CB^ER
)@@G@@^(@8))@@@@@@[C@@@YC8@@@[[^K@@ZCWK@@]'^@@KIC@C@@@[@8@@[RE@@@IC@/@@[CT@@@@ES
)@@G@@)E([F[KOC#4@K[]]D[@@@@@@9*@@@&'^@@@@C8)@@[/K@@E0C8)@@]/K@@E\(C@@@@C@K@@ZET
)@@G@@C^@@@YCU@@@@)E2[F[KO[]@5[]=#+@)@@@@@'^@@H''^@@J;C8@@@@[@H@@[C@@@@H'=@@@@EU
)@@G@@/CK@E6[[@@@%9*)@@*CV@@@@)E;[F[[@KL][1@K)W@@@@@@@C@0@@[/K@@FH%W)@@]CS?@@@EV
)@@G@@C^@@@)/K@@F>%8K@@DC=W@@@C^@@@[CW@@@@)F^[N[^@K[]@4K^^@@RE@@@I/K@@F>[@8@@[EW
)@@G@@'=@@@@%8K@@C/K@@F>[@8@@]/K@@FD%8K@@DRE@@@ICX@@@@)FI[MK^^^[[[@@@@@@/K@@F>EX
)@@G@@[@8@@[C@9@@[RAK@@+/K@@F>[@8@@]C@9@@]RAK@@$/K@@FO%8K@@DCY@@@@)FS[EK[]@5@^EY
)@@G@@C#L]@4@@@@@@'=@@@@%9@@@]'=@@@@%8K@@C/K@@EZ'=@@@@%9@@@#/K@@FX%8K@@DCZ@@@@EZ
)@@G@@)F-[N@KO[]@5[[@^@@/K@@G %8K@@C/K@@F:(@@@@HC=S@@@RA@@@['=@@@@/@K@F>CCK@@-FA
)@@G@@/K@@E_DA@@@@)F:[F#@L@KL][1@EKICE]@@@C^@@@Y[C@@@ZC8@@@@/K@@G %W)@@]CS?@@@FB
)@@G@@C^@@@)'^@@KIC@@@@ DB@@@@)F4[F[K)JK[@^CC=[]@4@@@@'=@@@@/CK@F.'^@@@@C8)@@[FC
)@@G@@/K@@F'C8)@@]/K@@F9(C@@@@C@K@@ZDC@@@@)F.[M^[[]=#+@)CE]@C^@@@YRA@@@)'^@@H'FD
)@@G@@'^@@J;C8@@@@[[X@@[C[K@@H/K@@G %8@@@[;C@@@MDD@@@@)GB[N[^C#K^^K@@@@@*^E@@]FE
)@@G@@/K@@I+[@*@@[C@)@@H[@*@@]C@*@@[[OS@@@'=@@@@%WC@@@CSK@@EDE@@@@)GL[N@^@[@K[FF
)@@G@@]@4@@@'=@@@@%8K@@J/K@@H%/K@@GT%8K@@KC*S@@@REE@@]/K@@CU(@E@@]/K@@CUDF@@@@FG
)@@G@@)GV[M^CBO@K)H^[@KK9*@@@1/@@@CY/K@@CY!8@@@H'=@@@@%80@@[/GK@BI'^@@@@ @@@@GFH
)@@G@@R])@@CDG@@@@)G>[N[[[[[KL@@@@@@/K@@G7!8@@@BC@@@@1[@0@@\;G?@@@T8@@@AH@@@@3FI
)@@G@@C8@@@B9?!@@@9*)@@3DH@@@@)G\[M@**]]C]]@@@@@9?!@@[C@K@@2/K@@H ^@(@@[N@)@@,FJ
)@@G@@'^@@L[R'K@@\N@K@@HH@K@@GC8K@@ADI@@@@)G9[N[@KO^@*)@@@@@R'K@@0N@K@@HH@K@@GFK
)@@G@@C8K@@GC@@@@1[@)@@0;??@@@T8@@@AH8@@@[C@@@@3DJ@@@@)H#[EK^CD^[]]K^ ]]K@@@@@FL
)@@G@@CC@@@@9?)@@\P'@@@D&'@@@DQA@@@@/K@@CG(C@@@@'^@@L[H8@@@ADK@@@@)HG[M[]@4^@KFM
)@@G@@@@@@@@CWC@@@/K@@HL%@8@@]/K@@CW2@*)@EN@K@@G'=@@@@*@@@@HW8@@@D;G@@@=DL@@@@FN
)@@G@@)HQ[E^ #@[[K)LKL[@@@@@@@[^0@@NC80@@#[@)@@LC@)@@@[@K@@?C@K@@^[^@@@!;C@@@SFO
)@@G@@;*@@@SDM@@@@)HZ[E**DLK)M^C#O ][ ]@0@ @@@@@[@@@@@C@@@@L'=@@@@*WE@@]/,0@@@FP
)@@G@@R')@@LA]K@@MR'K@@:DN@@@@)H*[N[KKKO@K^G@^@@/K@@C=!@@@@ '^@@KVO')@@]/K@@H FQ
)@@G@@9*)@@\9?*@@@P'@@@ /K@K@JR])@@KDO@@@@)H2[F[K^G@^[[^ @@@@@@@@@@@@@@@/K@@HVFR
)@@G@@[WK@@?C8K@@^AB@@@!/K@@C=!@@@@A'^@@KV[C@@@!DP@@@@)H;[F][1]@9]@8^C#OG@[@@@FS
)@@G@@/@0@IHC^9@@@P]K@@@'=@@@@2W()@@&'K@@[RAK@@@NCK@@@CW)@@]DQ@@@@)I^[F][0K]=#FT
)@@G@@)-@8]^^S@@@@'^@@@@N@K@@GG8@@@[C^@@@@R]K@@JR'@@@@/K@@IH%@Z@@[C@K@@[DR@@@@FU
)@@G@@)IH[F@KL]]OK)>^C#OG@@@@@P]K@@B'=@@@@2WT)@@NCK@@@&'K@@#RAK@@@CSS@@@RA@@@[FV
)@@G@@/K@KH'DS@@@@)IQ[N[^C#L[@^@@@@@/K@@I+[@(@@[C@?@@[[@(@@]C@(@@[C@@@@ [OT@@@FW
)@@G@@'=@@@@%ST@@@CSK@@EDT@@@@)I)[F#@L@K0^K@K[]]S@@@@@C^@@@@;CK@@M/GK@I:;*K@@MFX
)@@G@@@@@@@@/K@KC8 4@@@@/K@@DD[?@@@@DU@@@@)I([F]]T@[]]X]]W^C#K@@@@'=@@@@!@K@@JFY
)@@G@@H80@@#CC0@@@C^@@@@;CK@@N;*K@@[/K@@I\CC0@@@DV@@@@)I2[MK[[^^^^*)@@@@R')@@RFZ
)@@G@@[^K@@SG8K@@[G8@@@[[^)@@TC^!@@@[@@@@R@@@@@@/K@KI=G@@@@HDW@@@@)I/[F][D[K)HGA
)@@G@@KOC^O@KOCDK@RAK@@@C^K@@Y@@@@@@/K@KI4[@@@@@C@@@@R'=@@@@*W@@@T/,0@@@DX@@@@GB
)@@G@@)J [MK)>^[#@[[[@@@;*)@@S/K@@J+(@@@@ICO(@@@AAK@@)P]K@@B/K@@JZ2WT)@@NCK@@@GC
)@@G@@&'K@@#DY@@@@)JJ[EKL]@9]@8^[#@@@@@@@@P]K@@@/K@@J>2W()@@&'K@@[RAK@@@NCK@@@GD
)@@G@@C@9@@[[^)@@Z;C)@@SDZ@@@@)JS[N[[@KO @^ @@@@/K@@JY[C@@@YC8@@@[/K@KJ] C@@@YGE
)@@G@@[C@@@Z/K@@J*(@@@@GC^D@@@AEK@@)EA@@@@)J+[MKO@KO@KO@@@@@@@@@@@/K@@JY[C@@@YGF
)@@G@@C8@@@^/K@@JY[C@@@YC8@@@#/K@@JY[C@@@YC8@@@]EB@@@@)J?[MK@K[@^@@@@@@@R;)@@[GG
)@@G@@/K@@J\ORG@@@/K@@J5(OG@@@/K@@J9:WW@@@RBE@@@/K@@J7(CE@@@EC@@@@)J6[N@^@K@KKGH
)@@G@@@@@@@@G8)@@[C@)@@G[^K@@QC@W@@@@@@@@@/K@KJ:R;)@@@/K@@J'R;)@@]/K@@J'ED@@@@GI
)@@G@@)K@[F[^^**KOCE^[%]))@@@@[@K@@OC@K@@U'=@@@@*W@@@W/,0@@@R')@@U[@K@@VC@W@@[GJ
)@@G@@[@)@@PEE@@@@)KD[E**KO*E^[%@CDM[1[@@@[^@@@WC8@@@[[@@@@V@@@@@@/K@KJ;'=@@@@GK
)@@G@@*W@@@Q/,0@@@R')@@OEF@@@@)KM[E**KPCE^[%]-@6)*KIC@/K@KKI[@@@@@C@@@@X[@@@@@GL
)@@G@@C@@@@U'=@@@@*W@@@W/,0@@@R')@@UEG@@@@)KV[U^@^@[@@!8@@@B/K@@C=!8@@@H;C@@@NGM
)@@G@@;*@@@[/C@@C+;*@@@MC@E@@@/K@@K1*CE@@@@@@@@@EH@@@@)K&[N@[]]!]@1@K[[@O')@@[GN
)@@G@@C@K@@,C@E@@[/K@KKV/K@@C+*@@@@@'^@@@@O')@@]9?E@@[/K@@K!EI@@@@)K0[N@[@[][5GO
)@@G@@@^@@@@/K@@K;%80@@]/GK@BI'^@@@@RE%@@@ @@@@G/K@@C&*^E@@@N@)@@E/K@@K(EJ@@@@GP
)@@G@@)K'[N@^C#L][8K@@@@N8)@@ &;@@@[@@@@@@/K@KKVO')@@['^@@@@R])@[]'=@@@@%80@@#GQ
)@@G@@/K@@K.EK@@@@)L^[N@K^[@K@@@@@@@^=(@@@^*(@@@^?(@@@^0(@@@^4(@@@/K@KL[/K@@L^GR
)@@G@@')G)LD/K@@LC8KK@LAEL@@@@)LI@E@)@@[G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@^)(@@@EM@@@@)@D[W@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EN@@@@)@O[W@@@@@@@@@@@@@@@@@@@GU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EO@@@@)@Z[W@@@@@@@GV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EP@@@@GW
)@@G@@)@%@?@@@@@@@)@5@=@@@@@@@      OF SETRRENT  NO CU      @@@@@@@@@@@]@@@@@@GX
)@@G@@@@@@@@EQ@@@@)@9[W@@@@@@@R CODE GETVAN FROM RETRU ERRORODE = CORD CFOR REGY
)@@G@@ENTRY TABLE  NO C ER@@@@)[^[W@@@@@@@ING ONDEPENDSERTEDING IN, NOTHD NAMEGZ
)@@G@@ RECOR NOT ABLE IS VARIA =    ES@@@@)[J[W@@@@@@@RD BUFD RECOUPDATEATUS  HA
)@@G@@ROR STERT ER***INSLUE   ONG VAHAS WR ITEM ET@@@@)[U@G@)@@@6@)@@@@@)@@@C@HB
)@@G@@@@@@@@@@[@@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FER   EU@@@@)@[@8(@"OM+@HC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@#@@@[@@@@[@@@@[@@@]@[A@[H@[C@[ @[I@@@EV@@@@HD
)@@G@@@@^@@ @@D@@?@[-@@#@[!@@@@@@@@C@@@@LJ@@@@]H)@@@@@@@@@@AEDIT$       EDITR$HE
)@@G@@      ECHAR$      ECOL$       ESKIP$      ECLR$       EDPKT       ECOPY$HF
)@@G@@      EPACK$      EOCTV$      EDECV$      EFD1$       STATUS      ERR$  HG
)@@G@@      TT1         C9          C1          LN          TF$IA       C11   HH
)@@G@@      C5          C17         LAST$D      MCORE$      ARTKEY      LET   HI
)@@G@@      KF$AMA      RDALN       RDA         GETVAR      GETNUM      PRINT HJ
)@@G@@      PRINT$      FATAL       GETSET      RTRANS      C3          TT2   HK
)@@G@@      C15         C14         TF$DBP1     TF$C        TF$DBP      FD$BINHL
)@@G@@      INSERT      @@[@@@@@@@@@DBPPKT      @@]@@@@@@@@UKEYPKT      @@]@@@HM
)@@G@@@@@@[VDA7535305   300300======@@^@@ @@@@@@@@@@@@@@ @K0@@@@ D@@D@@=@@@@@@HN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@G4L  G70-1  @@@@]@@@@@R7@@@C@@@@@@@@@@@@@@HO
)@@G@@@@@@@@@@*C@=@ [@@A@@6@]W@E]@@@@[U@@^@@@E1^@@@@@@@^@@ D@^@0@[@ @@ DK^@:[@HP
)@@G@@@L@[[@DA7535305   30050012/22/75072012/22/7507203 WSZ 01/08/760737      HQ
)@@G@@      100000OPEN        000017000017@F@[[@DA7535305   40060001/07/760736HR
)@@G@@@@[^.R@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___HS
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___HT
)@@G@@@@@___@@@___@@@___@@@___/KF@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[DI^.R@@@___@[9GW3@@3G-YHW
)@@G@@@@FG>1@@1G*@@[FG%5@HEHC@)@[GW2)]2GY?)#)G+L)]^G>/)]^G*1)W@G?@@@@___@@@___HX
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___HY
)@@G@@?@@@[@?A@@[V?B@@[X?C@@@<?D@@[Y?E@@@)?F@@[[?G@@[]?H@@[#?I@@[^?J@@[ ?K@@[AHZ
)@@G@@?L@@[B?M@@[C?N@@[D?O@@[E?P@@[F?Q@@[G?R@@[H?S@@[I?T@@[J?U@@[K?V@@[L?W@@[MIA
)@@G@@?X@@[N?Y@@[O?Z@@[P?[@@[Q?\@@[R?]@@[S?^@@[T?_@@[U @@@@(!A@@@!"B@@@:#C@@@/IB
)@@G@@$D@@@.%E@@@"&F@@@&'G@@@=(H@@@%)I@@@**J@@@>+K@@@',L@@@_-M@@@-.N@@@?/O@@[WIC
)@@G@@0P@@@01Q@@@12R@@@23S@@@34T@@@45U@@@56V@@@67W@@@78X@@@89Y@@@9:Z@@@$;?@@@;ID
)@@G@@<\@@@\=!@@@,>^@@@+?_@@[ZC[@^_.A#K@@L;G@@@M;CK@@M/@V@@@H9K@@[G[K@@HT8K@@#IE
)@@G@@ @@@@GW8@@@]/@K^">O;@@@[R#0^_";^0@@MK@@@@IP;K@@[&;K__";*@@@MQ#@@@FR]0@@LIF
)@@G@@C[K@@G;DK@@MH9K@@[&'0__"R#)^__')I="_RB_^.R;^0@@D/C0^"0[[H)@@C[@^_.8^K^"0IG
)@@G@@R#)@@H;G@@@M;CK@@MO#)@@GR#,@@@:@) @@P;@@@[/KH@@@/K@^_ R3;@@@R\;@@@R:;@@@IH
)@@G@@R$;@@@R<;@@@R7;)@@Q;)@@ /K@^"1&;@@@@/@F@@@C[K@@G&#@@@FR]0@@H&;)@@[&'0@@[II
)@@G@@R#K @[R#0^_.8^K^_MC[F)@@;=0@@D;*0@@X;C0@@X=80@[@/K@^_UR7_^.R/K@^_VR3_^/RIJ
)@@G@@')H=_4 @@@@J/D@^_N/ K^_K;G@@@M;CK@@MR]0@@GT8K@@] @@@@GW8@@@#/@V@@@O;@@@[IK
)@@G@@P;K@@[R;0@@ A<"@@@A$"@@@/^K^_,A:"@@@A\"@@@:8@@@[/KF@@@R#"@@@:@0 @]P;@@@[IL
)@@G@@/KF@@@A7"@@@A3"@@@A\"@@@A:"@@@A$"@@@/K@^_'A<")@@R#K @[/K@^_W)@@@@@@@@^@)IM
)@@G@@__"@@ ^@)^@)@@[@@@      R#W@@DR#?@@EA#!)@@;K)@@S/C) @DR3?@@EAB?@@BR#?@@CIN
)@@G@@A#W@@DC G@@DG G@@BC W@@AGDW@@^H[@@@L/D@ @QN^W@@BM#Y)@@A#W@@D/KF@@[C W@@BIO
)@@G@@H[K@@KN@K@@LM#Y)@@[ G@@B0@G@@#'=@@@AC[W@@ GDW@@B[[W@@ C5W@@#/ V@@@C[W@@AIP
)@@G@@[ W@@^;[K@@M[[W@@A[ W@@D'=@@@[R#W@@D/K@ @GRBW@@AABW@@DC[W@@ HDW@@B[[W@@ IQ
)@@G@@CDW@@BT9K@@W[DW@@^/KF@@@0@G@@#'=@@@AC[W@@ GDW@@B[[W@@ C5W@@#/ V@@@RBW@@AIR
)@@G@@ABW@@^RBW@@DD8)___AF!@@@PBW@@AO;K@@[;GK@@=W8K@@W/@) [ O;K@@[R#)@@HT8)@@WIS
)@@G@@AF?@@^O#W@@ '=@@@#A#W@@ C5W@@#/ V@@@/KF@@[A^W@@#A@?@@^A@/@@ Q8W@@@1O@ ^IIT
)@@G@@/K@ [TC@)@@GC8@)@['=@@[\C@@@@I 0[@@@N?L@@@R@) ^JR^1@@@&80@@[C8@ ^KM@/)@@IU
)@@G@@Q^1@@@ ?[@@]/KF@@@A^W@@#A@?@@^A@/@@ Q8W@@@1O@ ^I/K@ [!C@)@@GC8@)@['=@@[\IV
)@@G@@C@@@@I 0[@@@&8)@@[Q4-@@[&80@@[Q01@@[O^1@@@/KF@@@A4-@@[P^1@@@A01@@[*0[@@@IW
)@@G@@/K@ ['C8@@@['=@@[\C8[@@@Q^L@@#R@?@@^R@/@@ /KF@@@[W<@@@[K<@@@[S<@@@/?) ]#IX
)@@G@@[O<)@@A^-@@]Q8)@@@/K[K@]C8?@@@')]>[_/KF@@@;G@@@=W8@@@^G^[@@@Q8!@@@Q8/@@@IY
)@@G@@/KF@@@G8]@@@C8N@@@H^L@@@;*K@@]G8H@@@/K@ ]EC8#@@@H^[@@@;*@@@]G8]@@@/KF@@@IZ
)@@G@@N?L@@@Q^1@@@C8@ ^KM@/)@@Q8)@@@Q^1@@@/KF@@@C80@@#/K@ ]>C80@@B;^@@@_+8K@B_JA
)@@G@@%8)@@):8)@@@/K@ ]:')]>[_8#0 ]>/KF@@@&"0__"/K@ ]0&'0@@@C8.@@@;G@@@M;CK@@MJB
)@@G@@&;@@@[&;K@@[8#0 ]7/KF@@@')G>#F0@@@@F%8)@@@')]>[_/K@ ]5C?[@@[C^L@@[/K@ #[JC
)@@G@@;G@@@M;CK@@M&;@@@[&;K@@[')G>#F:W-@@A/K@ #C')]>[_/K@ ##[?[@@[[^L@@[/KF@@@JD
)@@G@@CW!@@@CK!@@@CS!@@@/\@ #JCO!)@@[^[@@]Q;@@@@/K[K@]C80@@@;G@@@#/@@ #VG80@@[JE
)@@G@@;G@@@#/^@ #QC8)@@0')]>[_C8)@@@;=K@@#G8)@@0')]>[_8#0 #V/KF@@@C8.@@@T8K@@#JF
)@@G@@;GH@@@H80@@[/K@ #V&"0__"/K@ #%C8K@@@&'0@@@N8X@@@C80@@@;O@@@=W8@@@EE/X@@@JG
)@@G@@;?)@@AG8.@@08KK #2/^@ #?/C@ #90@@@@F/K@ #9;?)@@AG80@@!8KK #9C@K@@I0@@@@FJH
)@@G@@1@@@@G/K@ ^@R;)@@!')]>[_8KK ^@C8)@@)0@@@@FC8)@@0/K@ ^ ')]>[_8KK ^^R#@@@HJI
)@@G@@R#K@@J+8K@@_')]>[_;G@@@A+8K@@_/^) ^D/KF@@@______@@[@@@^@)^@)ED& 14.2A-&-JJ
)@@G@@(&&&&&C(^DDODDIE[PE))^@)E[MD9B^[ICDHC*_^@)SYM   @@@ELT@@@ASM@@@COB@@@FORJK
)@@G@@@@@ALG@@@MAP@@@DOC@@@SEC@@@SSG@@@APL@@@BAS@@@LSP@@@PLS@UPPERNORMAL@FREE JL
)@@G@@&     @ASG,CG &,F2///2000&    @BRKPT &    @SYM &,,PR& @SYM &,,CP& D@? )1JM
)@@G@@ ))^@)BI>16AA]0HPD/K@HC[C@@A];'=@@@8'=@@@) ?@GXG*=@GXA/,) G\ =@GXA*)@G%6JN
)@@G@@/K@  AC@@A]/'=@@@8 *@GXH *@GXG =@GXH*=@GXE/K@ )Y*)@G%//,) G\8N)  XN;)@@ JO
)@@G@@R;@GZ,R#KA].'=@@@4R#@GZ,T8@@@E;O@@@=W8@@@D?@@GX1/K@  XC[@GX1H[@GZ,C@@A]"JP
)@@G@@'=@@@8/K@ =P/,) 0] C@GW4/,) 6<*C@GW3/K@  >*)@G%"/K@ AA/K@ JJRZ@G>/?8@@@'JQ
)@@G@@?8@@@0/K@  %/K@ X RZ)G*1:8)@@:/K@ W<:8)@@!/K@ W$N8K@@UR#)A]_2CY& M/K@  8JR
)@@G@@R;@A =?8IA M/,0 ADRB,A L/KI@@@N8K@@9R;@@@[R;KG*1R;)GY?/,0^_CR#)A]_RF0GY?JS
)@@G@@2C"& ?/K@ AAR;@AAS?8IA ?/,0 ADRB,A :/KI@@@C@@A#@'=@@@8/K@  AR#@GW2>8@@^@JT
)@@G@@/KF@@@C@@A#['=@@@8/KF@@@C/@GY</,0@HSC8@ ^L/,0@I9(?@GXC/K@ ARC/@@@ /,0@I[JU
)@@G@@/,0@I6'=@@@?A#@@@K/,0@GDC/@__//,0@IEC/@@@-/,0@I[C@@@@K/,0@F1C/@__//,0@IEJV
)@@G@@/,0@I6R#@GW2>8@)@@/K@ A(C/@@@,/,0@I[C@@@@V/,0@J=R#@GW2=8@)@@/K@ A8C/@@@,JW
)@@G@@/,0@I[R#@GW2>8@@@)/K@ A8R#@@@VO;@@@[:8@@@_R3@G*E/,0@J=C/@@@)/,0@I[/,0@H\JX
)@@G@@C@@A#]'=@@@I/KE@@@C/@GYW/,0 [IC@@@@S/,0 #*C/@@@'/,0 ]B/,0 [3C@@A##'=@@@8JY
)@@G@@/KE@@@/,) A"/K@  AE-[CK'^0)CT#D[[EK'^0)D-#D[[EK'^0)D(NCTCCDMBK&^[#D-DD(DJZ
)@@G@@E)'^0)CDPE-JBK&^[HCDSD-DD1 BK&E-[CLNBK&^@)^[OCTCCDMBK&^@)C(SCTCCDMBK&^@)KA
)@@G@@^[KD-DD(DE-NBK&^@)^[#CDNC*'^0)ETOCC)EDPDD#DS)CLMDD C0)D1PD(]C(M^[KCTIE-MKB
)@@G@@D))C-NE[GDDO^@)^@)F[]ELDC(A^[NC(L^[GD9JDS)C(JC0)E(IDDHD9^^[HC(HD9MFC)^@)KC
)@@G@@^%)GXA/,) 6<(@@@@H/K@ B"C/@GY</,0@HS/K@ D1C/@GYW/,0 [IC8@ BE/,0 ]_RF@GW.KD
)@@G@@:8@@B_/,0 D(/,0 ]B/,0 ]/RB@GW":8@@B_/,0 D(/,0 ]B/,0 ]/RF@GW_:8@@B_/,0 D(KE
)@@G@@/,0 ]B/,0 ]/RB@GW_:8@@B_/,0 D(/,0 ]B/,0 ]/RF@GW8/,0 #*/,0 ]/RF@GW//,0 #*KF
)@@G@@/,0 ]/RF@GX[/,0 #*/,0 [3C@@A#^'=@@@8C/@GYW/,0 [IC8@ BS/,0 ]_R9K@@@ @@@[ KG
)@@G@@RPPG>/R;@@@[O#@@@ *O G>/!8@@]AN9K__"C[)@@G(@@@[ /K@ C3C/@@@?/,0 ]B/K@ C4KH
)@@G@@N9K@@[C@@@@M/,0 #*R#@@[ /=@ C$/,0 ]/RB@GW.:8@@B_/,0 D(/,0 ]B/,0 ]/RF@GX@KI
)@@G@@C[)@@G:8@@B_/,0 D(/,0 ]B:9)@B_/K@ DJC/@@@./,0 ]BC^@GX@/,0 #NC/@@@*/,0 ]BKJ
)@@G@@RB@GX@/,0 ]BC/@@@(/,0 ]B/,0 ]/CC@GX#/,0 #*C/@@@?/,0 ]BC^@GX#/,0 #*/,0 ]/KK
)@@G@@(4@GXH/K@ DW9?@A# /,0 ]=/K@ DY9?@A#B/,0 ]=/,0 [3C@@A#^'=@@@8R#@A#DR#KA#EKL
)@@G@@N8K@@NM#H)@@R;@@@NAB@GX[^+)GXA/K@  AR#@A#FO'0@@[/K@ ]+C]@@[E/K@ D\ @@@@OKM
)@@G@@ *@GXA/,) 6<A#K@@M+@KA#G/@) D6;CK@@A/K@ D2N8K@@FR[)A]_24Q?%5/K@ ECP9)@@[KN
)@@G@@**@GXA/K@ EF[+AG%5/,) 6<(*@GXA/K@ E 9?)GY?9*)GZHR#)GY,A#)GZJA#K@@M/@K EXKO
)@@G@@/K@ D2C@@A#H'=@@@8/K@ /:C@@@@M/,0@IWC/@@@[/,0@IE()AG%5/K@ EOC8@A#I/,0@I9KP
)@@G@@/K@ EQC8@A#J/,0@I9C/@@@]/,0@IE9?@GZH9*@GY?R#@GZJA#@GY,/K@ D"(*@GXA/K@  AKQ
)@@G@@/,0@H\C@@A#K'=@@@I/K@  ARB@GW7P;@@@[R;KG*2R;)G*1/,0^_CRB0GW7;*0@@[X80@@#KR
)@@G@@[ @GW7R;@G*1&B@GW7'=@@@JA#@G*1C/@GYW/,0 [IC8@ _=/,0 ]_C@@G*1/,0 #N/,0 [3KS
)@@G@@C@@A#L'=@@@8/K@  A/,) 8H/,0 E"AFKGW_/K@  A*@@@@H/KF@@@R;K@B_:CKGX]/KF@@@KT
)@@G@@ @@@@H/KF@@@/,) 8H(@@@@HR;K@B_ABKGW_/K@  A/,) 8H:^KGX@RFKGX@/,0 E"AFKGX@KU
)@@G@@/,) 6<(@@@@HR;K777+8KBBB;G)@@#;C)@@#;G)@@#;C)@@#;?)@@AAB)GX@/K@  A/,) 6<KV
)@@G@@:8K@@U/K@ F&:@K ^*/K@ F&:8K@@N/K@ F*:@K ^(/K@ F*C@@A#M'=@@@8/K@  A^6)GXHKW
)@@G@@/K@  A 4@GXH/K@  A@USE   MF$$,&*ED$M&      @@@@L/,) 6<N[K@@HC/@GY</,0@HSKX
)@@G@@R#@A#N'=@@@JC8@ F%/,0@I9C@@@[ /,0@IW/,0@I6C@@@@L/,0@J=/,0@H\R#@A#O'=@@@JKY
)@@G@@R#@A#P'=@@@J/C@ GA!9K@@E/K@ G(G9K@@[/K@ F1N8)@@DR;@GX!'=@@[8A\@GX%R#)@@GKZ
)@@G@@R#@GW2>8@^@@/K@ GM;*)@@MO#)A#QR#@@@I'=@@@8R;@GX%'=@@@98K) GBR#@A#RR#KGX\LA
)@@G@@9*@G*1'=@@@MR#)GYPA#)G*3A#@G*4A#)G*5A#KG*6R;@@@AA\@GX%R;@GX%'=@@[=R#@A#SLB
)@@G@@'=@@@JR#@A#N'=@@@J(=@GXB/K@  A/K@ :5C@@A#T'=@@@8/K@  A/C@ GP^&)GXB/K@ GPLC
)@@G@@ @@@@LR#@A#N'=@@@JC/@GY</,0@HSC8@ F%/,0@I9C@@GX\/,0@IW/,0@I6C@@@@L/,0@J=LD
)@@G@@/,0@H\R#@A#O'=@@@J9?@A#U9*@GYGR;@GYG'=@@[G*4@GYM/K@ HBR#@A#W'=@@@J/GE@@@LE
)@@G@@R;@GX+/ K HN(4@GXG/K@ HN'=@@[8&;@@@@/@E@@@RZKG*1:8K@[T/K@ HN%8K@[9/K@ H-LF
)@@G@@N8)@@ER;@GXX'=@@[7;*@@@MO#@A#X'=@@@8(*@GXH8K) HOR#@A#S'=@@@JR#@A#Y'=@@@JLG
)@@G@@G9K@@[/K@ G2AB@GX[8#@ H>^+)GXA/KE@@@R#WG*1A#WG%O/K@ H+/,) 6</,) 8+[A)GW6LH
)@@G@@/K@  A/,) 6<R#)A]_:@Y>^V/K@ H.?@)A#Z/K@ H,+8K@88%8)@00:8)@@0/K@ H9C@@A#)LI
)@@G@@'=@@@8/K@  A+8K@BB;G)@@#;C)@@#;?)@@#A7)G*RA7)G*F/K@  A/,) 6</,) 8>"K@@@QLJ
)@@G@@(@@@@H/K@ I(W8@@@^*@@@@HO;@@@[!8@@@-R;@@@-A7@GW7!')@]^C')@]^[E)GX#/,) 6<LK
)@@G@@*@@@@H/K@ ISR7@GW7A3@GW7^6)GW7RF@GX#AB@GX#^E)GX#/K@  A/,) 8> @@@@GR#K@@QLL
)@@G@@W8@@@^*@@@@HO;@@@[?4@GW7/K@ I$!8@@@-R;@@@-A3@GW7!')@]^C')@]^[A)GX#/K@  ALM
)@@G@@C@@A#-'=@@@8^6)GW7R;@@@-A3@GW7^E)GX#R;@@]^AB@GX#/K@  A/,) 8H/,0 E":8KCLGLN
)@@G@@R;K@@)ABKGW./K@  A/,) 8H/,0 E"ABKGW"/K@  AR;@@@))@@GW2A#KGW2*0@GX ^,)GX LO
)@@G@@R#@GW2>8@@^@/K@  A-8K@^@A#)GW2/K@  ACC@GW4?C@GW3/K@ RIRFKGX]:8K@@:/K@ RILP
)@@G@@()@G%"/K@ JJ^2)GXC/K@ RI^,)GXG*)@G%6/K@ JOC@@A#+'=@@@8/,) 0]*)@G%"/K@ JTLQ
)@@G@@(C@GW3/K@ ^"/,) 5/ ?@GXAG;@@@[]$0G-"C@@A#< @@@@HCXWG>;C9)@[@: KGW_[X?G>;LR
)@@G@@*C@GW3/K@ J$C[KGYS/K@ J%CXWG>;:DKGW./,) J3[LXG>/O;K@@[!CKGX[/K@ J0$F@GW3LS
)@@G@@/K@ J$AFKGW5/,) 6E/K@ JOCO!G>/C9K@@)[LXG>/O;K@@[!CKGX[/KE@@]?@K@@I/K@ J5LT
)@@G@@/KE@@]A\KGXB^&)GXH/K@ K@ ?@GXBCC@GW3:C@GW4C^@GW3[^@GW3(0@GXB/?0 \C/,) 5/LU
)@@G@@/,) 4S/K@ ;3**@GXH/K@  AC@)A#=GC)GW4C@0A]_CXYG>;:LZ?>//K@ KN% KGW./K@ KALV
)@@G@@$B)GW3/K@ KI(?@GXB/K@ KT*)@G%6/,) A"()@G%6/,) 10*?@GXB/K@ KA/K@  AA\KGXBLW
)@@G@@^&)GXH/K@ K+ ?@GXB 0@GXFCC@GW3:C@GW4C^@GW3[^@GW3(0@GXB/?0 \CC')@@)RF)GW4LX
)@@G@@CD)GW_!C)GW3/K@ K7O;)@@[:Y,G>;/K@ K?%X,G>;/K@ K7[Y,G>;P;)@@[AF)GW4^2)GXFLY
)@@G@@/,) 5//,) 4S/K@ ;3**@GXH/K@  ARF@GW5R;)@@#R;K@@)&;@@@[ANW?>/8#) L@&;@@@@LZ
)@@G@@OF@GW4H^@GW3G8@@@[*0@GXFO;@@@]/G@ K7[^@GW4C@KA]_C@)A#=GC)GW4C@0@@HCXYG>;MA
)@@G@@!@0A#>/K@ K7:LZ?>//K@ L+*0@GXF/K@ LZ$BKGW4/K@ LS/K@ K7*0@GXF/K@ LF:M\G>;MB
)@@G@@%M\G>'/K@ LFP;K@@[/K@ LJ%X,G>;/K@ LP/K@ L=$B)GW3/K@ LI(?@GXB/K@ L**)@G%6MC
)@@G@@/,) A"()@G%6/,) 10*?@GXB/K@ K7/K@  A 0@GXGR@KA]_R@)A]_OC)GW4CW]?>/:8@@@)MD
)@@G@@%W]G>//K@ M^$C)GW3/K@ L3RF@GW4A#@GW9C/@GYW/,0 [IC8@ _'/,0 ]_R#@GW9RZGG>/ME
)@@G@@/,0 ]B/,0 [3C@@A#&'=@@@8/K@  AA@-GW9 C[GW9$8K@@]/K@ MD/K@ MJRZ]?>/:W]G>/MF
)@@G@@/K@ M^$C)GW3/K@ ME/K@ L9O8)@@[AC)GW4 ?@GXE )@GXB @@@@Q/,) 6</@K M):8K@@GMG
)@@G@@/K@ MZ%8K@@A:8KALL/K@ O5/,) 8+[A)GW5/,) 6<:8K@@G^,)GXEC@@GW9G8@@@[!@@GW'MH
)@@G@@^+)GXB*@@@@S/K@ M*/A) OJ/K@ S[*)@GXB/K@ NSCC@GW5R;)@@#R;K@@)&;@@@[ANW?>/MI
)@@G@@8#) M,&;@@@@/@@ NE!C@GW8CC@GW8G@@GW9H@@GW'G8@@@[/G@ NE[^@GW4C@KA]_C@)A]_MJ
)@@G@@C@0A]_ ?@GXDR@KA#=O@KGW9R@)@@HCXLG>;%LM?>//K@ NA$@KGW'/K@ N@/K@ NK$BKGW4MK
)@@G@@/K@ M.*?@GXD/K@ N:/]) O0/,) 5/*0@GXB/,) 4S/K@ OP8 ) M=^2)GXG:@K@@I/K@ NVML
)@@G@@CLY?>/[TZG>/$B0GW8/K@ NK/K@ N6^2)GXGR#0A]_R@)A]_R#@GW'O;@@@[:@@GW;/K@ N=MM
)@@G@@CXWG>/[TZG>/$B0GW8/K@ NW/K@ N6^,)GXDC@@@@]C@K@@]H8K@@[C@)@@]*?@GXE/K@ NAMN
)@@G@@CCKGW5H8K@@[!^KGW8C^KGW8G@KA]_?@K@@G/K@ N6CLW?>/[TZG>/$B0GW8/K@ N0CCKGW5MO
)@@G@@!^KGW8/K@ N/AF0GW5H@0A#</K@ O[C9K@@)[TZG>/$B0GW8/K@ N.C^0GW8CTZG>/[LZG>/MP
)@@G@@8#0 O[]\0G-"/,) 5/]$0G-"RF@GW5!C@GX[RF@GX[AF@GW5/,) 6E()@G%6/,) 10/]) O0MQ
)@@G@@/,) 5//,) 4S/K@ OP**@GXH/K@ O08 ) M= ?@GXH 4@GXB 0@GXD^,)GXA(?@GXF/K@ OXMR
)@@G@@ ?@GXF/KA@@@(0@GXH/K@ O+R;K]WK'=@@@0 0@GXHHA)GW5#])@@QC/@GYW/,0 [IC8@ _6MS
)@@G@@/,0 ]_C@@@@Q/,0 #*/,0 [3(=@GXEC@@A#L'=@@@8 =@GX /K@ ;3*0@GXG/K@  AC@@A#$MT
)@@G@@'=@@@8/K@  AC')__"^,)GXE/K@ MWC')@@-/,) 6</@K P /,) 8>^,)GXF/!) XA/,) U=MU
)@@G@@**@GXH/K@  AC')@@-/,) 8H*@@@@HA#K@@Q/,K R']\0G-"/,) 5/]$0G-"RFKGW5R#@@@HMV
)@@G@@RN!G>;AN!G>.*)@G%_AN!G>"8#K PFR;)@@:AN)G>.AN)G>/()@G%_/K@ PRAN)G>"O;@@@[MW
)@@G@@O;@@@]AF@GW5/,) 6FN-)G%7N-0G%5 )@G%7 )@G%5/,) 10^-)G%7^-0G%5[E)GW9^%)GXFMX
)@@G@@/,) 0] *@GXFCE)GW9R;@G(MAB@GYWCE0GW3G]0A]_C/@GYW/,0 [IR[@A]_R[KA]_*)@G%_MY
)@@G@@O9K@@[RD0GW5P90@@]*)@G%_P90@@[C#KA#< =@GXF )@GXFCX^?>/?]0@@^/K@ Q0:#K@@^MZ
)@@G@@/K@ P"RN ?>"/,0 ]B:9@@@)/K@ P7:9@@[D/K@ Q-:9@@[^/K@ QY:9@@[M/K@ Q):9@@[(NA
)@@G@@/K@ Q-:9@@[=/K@ QY:9@@[2/K@ Q)C9KA@%/,K SD/,0 [3R;@GY?AB@GYWC/@GYW/,0 [INB
)@@G@@R#@@@L/,0 ]_R#@@@K/,0 ]B/,0 [3C@@A#*'=@@@8/K@ /:C[@@@QC9KA@\/K@ QH^+)GXFNC
)@@G@@/K@ Q-^&)GXFCX^?>/?]0@@^/K@ QV:[@@@Q/K@ P5*)@GXF/K@ Q,R#@@@K/,0 ]B*=@GXFND
)@@G@@/K@ Q,O90@@[/K@ Q-O9K@@[/K@ Q- @@@@H*)@G%_O90@@[Q#K@@ O;K@@]!CKGW5/K@ Q'NE
)@@G@@RN ?>"/,0 ]B/K@ Q3/,0 ]Q!C@GX[RF@GX[;G@@@=W8@@@^*@@@@HO;@@@[A3@G-"/,0 [3NF
)@@G@@R;@GY?AB@GYW/,) 10/,) 5 /K@  AH;@@@[/K@  A(@@@@S/K@ S[]\0G-"H;@@@[CAKGW6NG
)@@G@@/,) 5/G;@@@[]$0G-"RFKGX]%8K@@:/K@ RW^%)GXF/,) 0] *@GXF 0@GXC^E)GW4R#@A#<NH
)@@G@@/K@ RYC@@A#=GC@GW4 @@@@H(0@GXC/K@ R<C[KGYS/K@ R&CXWG>;:DKGW./,) J3[LXG>/NI
)@@G@@O;K@@[!CKGX[/K@ R?$F@GW3/K@ R<AFKGW5/,) 6E(*@GXH8 K RJ**@GXB/K@ S^ 0@GXCNJ
)@@G@@/K@  A(@@@@S/K@ S[/,K R'CAKGW6^%)GXB/K@ RLC@KA#(C@@A#%N0KG-"M#H)@@R#@G-"NK
)@@G@@A#@GX^/KD@@@C@@A#:'=@@@8/K@  A/,) 5/G;@@@[ *@GXB/,K SD/K@  AC@KA#%C@@A#(NL
)@@G@@R#)GX^;C)@@SN@K@@IM#H)@@R#@GX^A#@G-"/,) 5 /K@ U=H;@@@[/KD@@@^6)GXB/K@ SSNM
)@@G@@ 4@GXB[#@@[C/,@ U$ ^@GW'^A)GZ, @@G-</,) 6</@K /(/,) 8>[E)GW9/,) 6</@K T8NN
)@@G@@/,) 8>[A)GW9?E)GW9/K@ U=C])@@S[E)GW'CE)GW9^,)GXF/!) XA/,) U=CA)GW9HE)GW9NO
)@@G@@[A)GW;/,) T;/,) 5//,) 4S/,) UV8 ) S0CE)GW'^,)GXF/!) XA/,) UV**@GXH/K@  ANP
)@@G@@(^@GW'/K@ TD/,K UC @@G-<R;@G-YR;K@@KA3KG--'=@@@#R;@@@^O#@G-<A#@G-<RB@GW'NQ
)@@G@@P;@@@[AB@GW'R]@A#</,) 5/G;@@@[R#*GZ,A#)G-"]$0G-"N0S?Z,R#)A#?M#*?Z,()@G%6NR
)@@G@@/,) 10**@GXH/K@ TVR;*@@@?^)GZ,/K@ TE*^@GW'/K@ S_/,) 5 '=@@@)H;@@@[(4@GXBNS
)@@G@@/K@  ACA)GW9?E)GW'/K@ T!CE)GW'!E)GW9/K@ T5RF@GW9CA)GW9[E)GW9GA)GW9H])@@GNT
)@@G@@[A)GW9/K@ V,RF@GW9P;@@@[AF@GW9RB@GW9P;@@@[AB@GW9CA)GW9/K@ V,C@@A#!'=@@@8NU
)@@G@@/K@  ARF@GW9AB@GW9/K@ S$RB0GZ,K00G-"G9@@@[!9@@[0/,K UC&;0@@[R#@G-"A#J?Z,NV
)@@G@@R#)A#?N0KG-"M#"?Z,AB0GZ,/KE@@@*=@GXC/K@ UIR#@A#,'=@@@J/^@ /#^&)GXCR;@G-YNW
)@@G@@R;K@@CA3KG--'=@@@#R;@@@^O#@G-<A#@G-<RB@GW'O;@@@[AB@GW'R;0@@[/KD@@@/KE@@@NX
)@@G@@/A) U=N]K@@E 0@GXB @@G-"^,)GXA/?0 \DR])@[D @@@@Q/KE@@@C@@A#\'=@@@8/K@ /:NY
)@@G@@*0@GXB/KC@@@C])@@SG;@@@[^,)GXF/!) XA/,) U=/KC@@@(4@GXG/K@ U.R#@GW2=@@A#0NZ
)@@G@@/K@ U.^6)GXF/,) 6</@K VE/,) 8>?')@@ /A) V@[E)GW/ ^@GW//K@  AC@@A#1'=@@@8OA
)@@G@@/K@  AC/@GYW/,0 [IC8@A]^/,0 ]_C8@@@ /,0 #*/,0 [3C@@A#L'=@@@8/K@  A @@@@EOB
)@@G@@R;@Z_"(C@GW/AF@GW/AE)GW;[F@GW'C@@A#2'=@@@8/?0 \C(4@GXF/K@ VW(0@GXI/K@ VVOC
)@@G@@R#@G-")8@@@CA#KG-"/?0 \C 4@GXF ^@GW/CE)GW'^,)GXF/!) XA/,) OPRE)GW;*@@@@EOD
)@@G@@/K@ 0E/K@  ARFKGX]:8K@@:^2)GXD/,) 6</,) 8+[E)GW9/,) 6</@K V1/,) 8+!E)GW9OE
)@@G@@/K@ V_/A) U=(@@@@S/K@ S[CE)GW9[A)GW5 C@GW5**@GXH/K@  A]\0G-"/,) 5/H;@@@[OF
)@@G@@/]) WE/,) 4S/K@ OP8 ) V5HE)GW9[A)GW5[A)GW9CE)GW9G')@@[^,)GXF/!) XA/,) OPOG
)@@G@@CA)GW9[A)GW5/K@ V5C])@@S*0@GXDG')@@[(4@GXB/K@ WLC])@[C/K@ WN(0@GXDG;@@@[OH
)@@G@@^,)GXF/!) XA/,) OP 4@GXB 0@GXD/K@  A/,) 6</K@ X /,) 6<:8K@@-/K@ W*:8K@@+OI
)@@G@@/K@ W=/K@ W>C')@@[/K@ XA^E)GW4/,) 6</,) 8+/K@ W6^E)GW4/,) 6</,) 8>(@@@@QOJ
)@@G@@C')@@[D])@@QG])@@S^,)GXF/!) XA/,) OP/K@ X@/?0 \C/,) 5//,) 4J/K@ OP(*@GXHOK
)@@G@@8 ) W3 ?@GXH/,) 5//,) 4S/K@ OP(?@GXF/K@ X@ ?@GXF/KA@@[*)@G%6/K@  A*@@@@QOL
)@@G@@/,) 10/K@  A/,) 8>[A)GW5:])@@S/K@ W//]) XLH')@@[H])@@S/E) W6G])@@S8 ) W2OM
)@@G@@/?0 \C/K@ W9/?0 \C/K@ W/(0@GXB/?0 \CR80  A/,K R'/,) 5//,) 4J/K@ XW(*@GXHON
)@@G@@/K@ XQ ?@GXH/,K SD()@G%6/,) 10 @@G-"^,)GXA C@GW5/K#@@@R#@GYSA#@G*1 @@G-&OO
)@@G@@ @@G-* @@@@GRFKGW3W8@@@^*@@@@HO;@@@[R;KG*1R;)G*1/,0^_CR;@GZHAB@G-$C/@GY<OP
)@@G@@/,0@HSC@@GX0/,0@IWC/@@@:/,0@I[*)@GXH/K@ X_C=@G*1/,0@I[C)@G*1/,0@I[/K@ Y#OQ
)@@G@@C8@G*1C8K@@A/,0@I( )@GXHR;@G*2RFKGW3P;K@@A/,0@I(/,0@IR!8@@@3R;@@@2AF@G-$OR
)@@G@@/,0@H\RFKGX]%8K@@%/K@ YNR;@@@2AF@G-*R;@GZHAB@G-*R;@G-&'=@@@C%8K@@%/K@  AOS
)@@G@@RB@G-&;O@@@=W8@@@A*@@@@HO;@@@[;*@@@MO#@A#3'=@@@I/K@  A^&)GXH^&)GX RFKGX]OT
)@@G@@:8K@@:/K@ ZO:8K@@-/K@ ZC/,) 6<*=@GXE/@K ZC/,) 8+[E)GW9/,) 6</,) 8+!E)GW9OU
)@@G@@/A) Y"/A) U=CE)GW9[A)GW5(@@@@SG')@@[*@@@@S/,) 10/]) ZH**@GXH/K@ ZH/,) 5/OV
)@@G@@/,) 4S/K@ OP8 ) Y5HE)GW9[A)GW9[A)GW5CE)GW9G')@@[^,)GXF/!) XA/,) OPCA)GW9OW
)@@G@@/K@ Y5/?0 \CC')__"[A)GW5^,)GXH/K@ Y8 =@GX (0@GXH/K@  AR;K]WK'=@@@0 0@GXHOX
)@@G@@/K@  A/,) 6<(@@@@HR;K@@1/,) 8+(0@GXB/K@ OP/,) 5//,) 4S/K@ OP/K@ Y5C@@A#4OY
)@@G@@'=@@@8R;K@,8'=@@@0^2)GXH/K@ Y-^&)GXH/K@ Z$^+)GXHC/@GY</,0@HSC8@A#5/,0@I9OZ
)@@G@@'=@@@MC@@@@H/,0@IW/,0@H\9?@GZH9*@GY%C/@GY</,0@HSC8@ ^?/,0@I99?@GY%/,0@IYPA
)@@G@@/,0@I6/,0@H\R#@A#6'=@@@J/^@ /#^&)GXE*)@GXH/K@ Y-R;@GX6'=@@[8R;K@@,AZWGY,PB
)@@G@@9?K ^69*KGY?;*@@@MO#@A#7'=@@@"**@GXH/K@ )N*)@GX /K@ )KR#@A#8'=@@@F^+)GX PC
)@@G@@'=@@@DR#@A#9'=@@@F/K@ Y- =@GXE/K@  AA#@GY(R;@GY(*)@GXH/K@ )V'=@@[=/KE@@@PD
)@@G@@ 0@GY('=@@[>/KE@@@ =@GXE =@GXH*)@GXH/K@ - C/@GY</,0@HSC8@A[A/,0@I9'=@@@?PE
)@@G@@A#@@@L/,0@G$/,0@I6C@@@@L/,0@F1/,0@H\R#@A#'/,) )P/,) -7R#@A#;/,) )PR#@A#/PF
)@@G@@/,) )PC/@GY</,0@HSN8)@@E9?@GX9/,0@IY8K) )7/,0@H\R#@A#./,) )PR#@A#./,) )PPG
)@@G@@R#@A#"/,) )PR;@@@]'=@@[WR#@G(3/,) 3<C/@GY</,0@HSC8@ ^0/,0@I99?@GY%/,0@IYPH
)@@G@@/,0@H\R#@A#_'=@@@JC/@GY</,0@HSC8@ ^%/,0@I99?@GY%/,0@IY/,0@H\R#@A#O'=@@@JPI
)@@G@@C/@GY</,0@HS*)@GXH/K@ -YC8@ ^2/,0@I9/K@ -)C8@ ^4/,0@I99?@GY%/,0@IY/,0@I6PJ
)@@G@@/,0@H\R#@A#O'=@@@J/^@ E\()@GXH/K@  A9?@A^@9*@GY?R;@GX4'=@@[8/@@  AT8@@@^PK
)@@G@@AF@GW3/K@ X&R;@GX2'=@@[8;*@@@MO#@A#XA#@G(3'=@@@DR90G*IR#@GW2=8@@^@R90G*]PL
)@@G@@R#@GW2=8@@@)R90G*]9?B@@@9*@GYGR;@GYG'=@@[GC/@GY</,0@HS9?@GYK/,0@IYC/@@@*PM
)@@G@@/,0@I[9?@GYI/,0@IYC/@@@(/,0@I[C)@GYM/,0@J=C/@@@)/,0@I[C/@@@./,0@I[R#B@@]PN
)@@G@@*@B@@]:@@GYP/K@ +,9?B@@]/,0@IYR#B@@A*@B@@A:@@GYP/K@ +)C/@@@//,0@I[9?B@@APO
)@@G@@/,0@IYC/@@@(/,0@I[R#K@@VO;K@@[R#@GW2>8@@@) @@@@HR#@GW2=8@@^@R#K@@VR#@@@HPP
)@@G@@/,0@J=C/@@@)/,0@I[/,0@H\/KE@@@C/@GY</,0@HSR5)G*FR#@GW2=8@)@@R5)G*RR#@@@APQ
)@@G@@?8@@@I/K@ +;/,0@JJ/K@ +.C@A ^U/,0@IWC/@@@]/,0@IEC8@A^]/,0@I9/,) AS/,) -7PR
)@@G@@C@@A^#'=@@@I/K@  A*@@@@S/K@ <FC@@A#:'=@@@8/K@  A *@GXE/,) 6</@K /(/,) 8+PS
)@@G@@[])@[D/,) 6<(@@@@HR;K@41/,) 8+[A)GW9/,) 6</@K <T:8K@@P^%)GXE^2)GXE/,K R'PT
)@@G@@]\0G-"/,) 5/R^KGW9&8K@@[(*@GXE/K@ <>R;@@@,AN[?>/R;@@@)AN[?>/R;@@@^AN[G>/PU
)@@G@@ K[G>. K[G>" K[G>_ K[G&@ K[G&[ K[G&]R;[@@@!C@GW5ACKGW5/,) 6E]$0G-"/,) 10PV
)@@G@@R#KGYSA#WG*1O;@@@[/,) 02R@)A]_NCKGW3RZ]?>/AN[G>/$8K@]^8KK <9ACKGW5/,) 6EPW
)@@G@@/,) 5/ 0@GXE/,) 4S/K@ OP8MK <T/K@  A/G@ :5C[K@@G/,K SD+9K@B_:9)@[S @@@[DPX
)@@G@@?9)@@'?9)@@1/K@ <_+9)@@JR^KGW9O@K@@N/K@ <YR#@A^^'=@@@4C[@G)^;P@@@=W9@[ICPY
)@@G@@;P@@@=W9@@@/C/@GYW/,0 [IC@@@@K/,0 #*C8@A^ /,0 ]_C@@@@L/,0 #*/,0 ]//,0 [3PZ
)@@G@@C@@A^B'=@@@8/K@  AN8)@@GC/@GYW/,0 [I/,) 6</@K =2/,) 8+R#@@@Q/,0 ]K;Q)@@=QA
)@@G@@W')@@^H])@[]#])@[]9?@A^C/,0 ]=C@@A^E/,0 ]+8K) =2/,0 [3C@@A^F'=@@@8/K@  AQB
)@@G@@^&)GXH^%)GXG/K@ Y+/?0 \C/,) 5/C9)@[=[ )GW4C'@@@O(C@GX]/K@ >L/,) 6</@K /&QC
)@@G@@C[)A^GC[0A^HC[K@@H;HK@@A/ K >E9()GY?R;@@@]R;KGY?R;)GY?/,0^"RC')@@[/,) 6<QD
)@@G@@/@K >T/,) 8>/]) >R[A)GW4/,) 6</,) 8>/,) 4S/K@ ;3R#@GYSR3KG-"R;)@@NP#)@@HQE
)@@G@@/G) ><&;K@@[A#H?(M8#) >-[2@G-"9!)GY?9()G(=C@@A]_C@K@@Q;GK@@=W8K@@EG8)@@0QF
)@@G@@')G>>0/^K >*/,) 5/GA)GW4/K@ >TAR)G(>AV)G(>AN)G(>AZ)G(>AR)G(=AV)G(=AN)G(=QG
)@@G@@AZ)G(=/K@ >9 @@@@Q/K@ >= )@G%6/K@  A^+)G%6/K@  A/,) 6</,) 8>!')@] /K@ /&QH
)@@G@@(@@@@QC')@]^[E)GW8H')@@[[A)GW8/K@  A/,) 6</,) 8>!')@]^C')@]^[E)GX[/K@  AQI
)@@G@@C8@@]# OGG>/8#@ &KC@0A]_C]@@@J/,) 6</@K  A/,) 8+R#0@@O!')@]^/K@ &ZG])A]_QJ
)@@G@@[Q\?>/?@0@@Q/K@ &V/K@ &NC[K@@JC/@GYW/,0 [IC8@A@6/,0 ]_G')@@[C@@@@Q/,0 #*QK
)@@G@@/,0 [3R#0@@LC@@A^B'=@@@8/K@ &N/,) 8H/,0 E"[CKGW./K@  A =@GXICE@GX]/,K (NQL
)@@G@@/K@ &/*@@G>6/K@ &8^&)GXI/K@ $[R;@GX.'=@@[AR'K :R/^) :ER;@GX.'=@@[C/^) &'QM
)@@G@@A#KG>6A#KGYBR#@A^IA#@G>4/,) 9>/,) '#/,) 6</@K *^/,) 8>[E)GW9/,) 6</,) 8>QN
)@@G@@[A)GW9?E)GW9/K@ U=CE)GW9^,)GXF/!) XA/,) U=CA)GW9HE)GW9()@G%'/,) 10*)@G%9QO
)@@G@@]\0G-"*)@G%9H;@@@[R#@G-"A#@GX^/,) 5/R#@GX^A#@G-" ?@G-"/,) 9?/,) 4J/K@ *LQP
)@@G@@(*@GXH8 ) $O ?@GXH/,) 5 '=@@@)H;@@@[/,) 9**=@GXI/K@  AR#KG>6D[)GYBG[)@@HQQ
)@@G@@[ )GYA @@GY R;@@@ A3@GY ^+)GY R7@G*FA7@GYA'=@@@?;@@@@MA#@GYC*0@GXI/K@ $_QR
)@@G@@R3@GY])@@@@KA3KGY]R#KG>6D8@GX.'=@@[^/^) &'/,0 :?/K@  A%'@@@-/K@ *G^])@@QQS
)@@G@@^,)GXF/!) XA/,) U=C')__"/K@ $O^E)GW9C])@@SH')@@[[A)GW9/K@ $IC@@A^J'=@@@IQT
)@@G@@ 0@GXB/?0 \C/K@ $(CE@GX]/,@ U$/,K (N/K@ :RR#@A^KA#@G>4R;@@[0AF@G>5:'@@@:QU
)@@G@@/K@ *$R<@G%6O;@@@[A<@G%6/?0 XQR<@G%6P;@@@[A<@G%6/,) 'J/,) 6</@K (E/,) 8+QV
)@@G@@[E)GW9/,) 6</,) 8+[A)GW9?E)GW9/K@ U=/,) 5/CE)GW9/]) *8H')@@[/,) ')/K@ (HQW
)@@G@@8 ) *5CA)GW9HE)GW9/,) ')/K@ (HG;@@@[R#@G>;A#@G-"()@G%'/,) 10/,) 5/(*@GXHQX
)@@G@@8 ) *'/,) 'P/,0 :? @@G-"^,)GXA C@GW5/K@  AC')__"/,) 5//K@ *'C@@A^J'=@@@IQY
)@@G@@/K@ (^@USE ED$XF,TPF$    @@G>6 )@GXD @@@@QR#@A^L'=@@@JC/@GY</,0@HSC8@ :$QZ
)@@G@@/,0@I9CD)GW3H9)@@[RD@GW4?[)@@^/K@ %^RZ^G>/O9@@@[:8@@@)/K@ (Z%8@@@,/K@ ((RA
)@@G@@/]) (6/K@ (4R#KGYSA#KGY?AZ@GY?R;@@@[R;KGY?R;)GY?/,0^_C^])@@QC4@GY?/,0@I[RB
)@@G@@/K@ (ZR#@A^M'=@@@JAD@GW49?@A^N9*@GYGR;@GYG'=@@[G*4@GYM/K@ %[R#@A^P'=@@@JRC
)@@G@@/G@ :B^+)GXDR;@@@):W^G>//KD@@[/,0@H\9?@GYP9*@GY#9*@GYD/,) 6+/@T@@[9?@GZHRD
)@@G@@9*@GX_RFKGX]/@K %%:8K@@*/K@ %W%8K@@\/K@ %%/,) 6+/@K :^9?@GZH9*@GY#RFKGX]RE
)@@G@@/@K %%:8K@@)/K@ %%%8K@@*/K@ :^ @@GYERF@GW4CX?G>/:9)@@:[[)GYE:9)@@![[)GYERF
)@@G@@*@@GYEO;@@@[AF@GW4/,) 6</@K :^/,) 8>[])GYDR;@GX.'=@@[ /^) :ER#@GYBA#@G>6RG
)@@G@@R:)GY A#)GYFR#KGYD:@KGYP/KD@@[*@@GYE/K@ %8A#KGYF/KD@@[R#@GYE:8@@@:O#)GYDRH
)@@G@@:8@@@!P#)GYDR#@GYFL)@GY !@@@@I!@)GYF/K@ :OA#)GYF/KD@@[C@@A^Q'=@@@8/K@ /:RI
)@@G@@C@@A^R'=@@@8/K@ /::8)@@[/KD@@@:8)@@]/K@ :+C@@A^S'=@@@8/K@ /:C@@A^T'=@@@8RJ
)@@G@@/K@ /:C@@A^U'=@@@8/K@ /:C/@GY</,0@HSC8@ _S/,0@I99?@GX_/,0@IY/,0@I6/,0@H\RK
)@@G@@C@@A^V'=@@@I/K@ /:C@@A^W'=@@@8/K@ /:@ASG,A ED$XF@USE ED$XF,&@FREE,RA ED$RL
)@@G@@XF    R#@A^X*)@GXD'=@@@J )@GXD/KF@@@()@G%"/K@ :5*?@GXG/C@ ^"^&)GXDR#@GW2RM
)@@G@@=8@@^@/K@ /\/?0 \C**@GXH/K@ ^"R#@GW2=8@)@@/K@ ? R#@GW2=8@@@)/K@ !]R#@GW2RN
)@@G@@=8@@[@/K@ !5R8K ?8C8@G*I/,) ;([@KG*S[@KG+F9?@G*I9*@G-(/,) 83G;0@@[C()G*QRO
)@@G@@G9)@@[H-)G*Q*0@GXI )@G-"R7@G-"%8@@@0/K@ ?<(0@GXI/K@ ?< )@G-"R3@G-"R;KG(MRP
)@@G@@R;)G(M/,0^_CR3@G-";*@@@[O;@@@];G@@@=W8@@@#A3@G-"/,) 5/ ?@GXAC8@G-4/,0C]BRQ
)@@G@@/K@ /Q/K[@@@0@@G-"/K@ ?N(0@GXI/K[@@[R3@G-"R;KG(MR;)G(M/,0^_CR3@G-";*@@@[RR
)@@G@@O;@@@];G@@@=W8@@@#A3@G-"/K[@@[/K@ !@(?@G-"**@G-"/K@ ?= )@G-" =@G-" ?@G-"RS
)@@G@@/K@ ?N/,) ;#/K@ !"N8K@@GC@KA^YC@@A^ZM#H)@@*4@GX /K@ ?  @@@[ %;0@@"/K@ !KRT
)@@G@@^])@[ R3)G*QP;)@@]C#0@@IA:)G*Q/?K ?A/K@ !8(@@@[ /K@ !+R<)G-"P;)@[@O3)G*QRU
)@@G@@:/)__" @@@@IA<)G-"R:)G-"/@) !+P;)@[@O3)G*Q*@@@@I:/)__"/K@ ?=A:)G-"*=@G-"RV
)@@G@@[<0G-"*?@G-"[:0G-"R<@G-":*@G-"/^@ ?= =@G-" ?@G-"C0@G*Q%)@G*Q/K@ ?N?-)G-"RW
)@@G@@/K@ ?NK9)@@[:(0G-"/K@ ?=[-0G-"/K@ ?N9?@G*E9*@G*Q/K@ !A[:0G*QC)@G*Q%0@G*QRX
)@@G@@G8@@@[[)@G*Q/,) ;EC/@GYW/,0 [IC8@ _8/,0 ]_CC@GW6/,0 #*C/@@@)/,0 ]B*0@GXIRY
)@@G@@/K@ ,F9?@A^)/,0 ]=/K@ ,H9?@A^+/,0 ]=/,0 [3C@@A^='=@@@8R#@A^>*4@GXA'=@@@JRZ
)@@G@@R#@A^&*0@GXA'=@@@JR#@A^$'=@@@JR#@A^*'=@@@J @@@@G()@G%./K@ ,2R;@@)@*)@G%5SA
)@@G@@O;@@@[*)@G%6O;@@@]*)@G%7O;@@@^*)@G%8O;@@@C*)@G%9O;@@@K*)@G%'O;@@@)*)@G%;SB
)@@G@@O;@@[@*)@G%/O;@@]@*)@G%"O;@@^@*)@G%_O;@@C@'=@@@5 @@@@GR#@A#N'=@@@J*)@GXESC
)@@G@@/K@ ,"R#@A^('=@@@JR#@A^%'=@@@J @@@@G/K@ \#R#@GW2=8@@@^'=@@@)C8@@@[/K@ \#SD
)@@G@@C8@@@['=@@[\R]0HPD/KF@@@R80  A/?K \4[F@GW6/,) 8'/,) 9+9?@G-4*4@GXD9?@GX;SE
)@@G@@9?)G-(9*)G-49*@G-(^2)GXB @@@@S @@@@S @@@@U C@GW5 4@GXD @@G+F @@G+]*)@GXGSF
)@@G@@/K@ \%R;@@VQ!C@GW6/K@ \%R#@A^:'=@@@IC8@@@]/K@ \#PROC ELEMENT CANNOT BE OSG
)@@G@@VER 1750 LINES    /,) 8"/,) 83 ?@GXA(C@GW//K#@@@9?@G-(9/@A^?/K#@@@/K@ \CSH
)@@G@@R8K JJ/,) 6E/,) 5/ C@GW5(0@GXB/K[@@@/,) 4J/K@ \./,) 5//K@ \9 ?@GXH @@G-"SI
)@@G@@^,)GXA 0@GXB/K[@@@ C@GW"(C@GW//K@ 0ERB@GW/O;@@@[AB@GW/!C@GW//K@ VI C@GW3SJ
)@@G@@*4@GXG/K@ 0MC@@GX5*)@GXA/,0 1*'=@@[6/K@ 02C/@GYW/,0 [I(C@GW"/K@ 0SC/@@@:SK
)@@G@@/,0 ]B**@GXF/K@ 1>()@G%;/K@ 0)R#@@@S*?@GXGO;@@@[/,0 #*(?@GXG/K@ 0=C/@@[DSL
)@@G@@/,0 ]B()@G%;/K@ 0(C/@@@'/,0 ]B/K@ 0:C/@@@%/,0 ]BC/@@@^/,0 ]B/,0 [3R;@GX4SM
)@@G@@*)@GXA/,0 1*'=@@[8C[@@@G*C@GW"OB@GW7AB@GW7R#@GW2>8@^@@/K@ 0.R#@A^,OB@GW7SN
)@@G@@;@@@@M'=@@@8(^@GW7/KE@@@C@@A]_C@KA]_*C@GW"QFKGW"C@)A#<')G>1S(4@GXH/K@ 1GSO
)@@G@@?80@[;?80@[-/K@ 1GP;0@@)')G 1):^0GW"/K@ 1O:C0GX@RB0GX@[W.?>/%80@@)AFKGW3SP
)@@G@@/K@ 1^*C@GW"/KE@@@AFKGW"/K@ 0ERZ"G*0RN"G*0RV"G*0RR"G*0/K@ 1XC@@A]_$#)@@KSQ
)@@G@@/K@ 1^/KE@@@AZ"G*0AN"G*0AV"G*0AR"G*0C/@@@:/,0 ]B/K@ 0:RB@GX[8#@ 1!RB@GX[SR
)@@G@@ )@GXA/KF@@[R#WG%OA#WG*1/K@ 1(R3@G-":8@@@_/K@ ;3!4@GW7/K@ 17 @@@@G/K@ 1_SS
)@@G@@!0@GW7/K@ 1/P7@GW7O;@@@[/K@ 1_R3@GW7P7@GW7O;@@@[;*@@@MA#@@[ *=@GXE/K@ 2BST
)@@G@@*)@G%5^%)GXG*)@G%7^&)GXH(=@GXH/K@ 2QC/@GYW/,0 [I**@GXG/K@ 2LC@@@@SC8K@@BSU
)@@G@@/,0 #(/K@ 2NC@@@@S/,0 #*C/@@@'/,0 ]B/,0 [3*=@GXE/K@ 3H(=@GX (*@GXG/K@ 3HSV
)@@G@@C[@@[ /[@ 3H;D@@@MH9@@@[*=@GXH/K@ 2=C/@GYW/,0 [I/K@ 2&C/@GYW/,0 [+R[0A]_SW
)@@G@@R5)GW7P9)@@[C9K@@%')B>2;:9K@@)%9)@@)/K@ 20(=@GXG/K@ 2%[[)@@L%9)@@$/K@ 28SX
)@@G@@(=@GXG/K@ 27 =@GXG/K@ 28^&)GXGR#@@@M/,0 ]B/K@ 2%CX&G(MCL&G(MCT&G(MCP&G(MSY
)@@G@@/K@ 3@R[0A]_R#)@@AO9)@@[O;)@@[P7)GW7?@)@@K/K@ 2% =@GXG/,0 [3R#@A#^*0@GXESZ
)@@G@@/K@ 3?/K@ 3-R#@@[ *=@GXH/K@ 3L/K@ 3O9?KGY?9*KGZF'K@A^\'K@A#3R#0@[ ;C0@@MTA
)@@G@@N@K@@JR[KA^0R[@A#(O5@GW7P9@@@[M[O)@@*=@GXE/K@ 3<*0@GXE/K@ 3?'=@@@8/KE@@@TB
)@@G@@A#@GY(R;@GY(*)@GXH/K@ 3('=@@@9/KE@@@ 0@GY('=@@@;/KE@@@A#@GX)R;@GX)'=@@[8TC
)@@G@@/KE@@@ ?@GXI()@G-"^,)GXIR7@GXIR7KG-"?8@@@]/K@ 4^%8K@@*/K@ 4^%8@@@]/K@ 4GTD
)@@G@@*)@G-"/K@ 4[^2)GXIR;@@@#A7@GXI/K@ 4G 0@GXI 4@GXI/KF@@@%8K@@+/K@ 4G 0@GXITE
)@@G@@ 4@GXI ?@GXI()@G-"^,)GXI/K@ 4S*?@GXI^+)G-"/KF@@@^,)GXH/K@ 4S/,0 33R7@G-"TF
)@@G@@:8@@@0/K@ 5:A])GXK/,) 5/R])GXK ?@GXA(0@GXB/K@ ;3 C@GW5R#@GYSA#@G(MC8@G-4TG
)@@G@@/,0C]B/K@ /Q/KE@@@0@@G-"/K@ 4L(?@GXI/K@ 4\R3@G-"R;KG(MR;)G(M/,0^"RR3@G-"TH
)@@G@@T8@@@#O;@@@[;C@@@[A3@G-"(4@GXD/K@ 45(0@GX /K@ 45 ^@G-" ?@G-"?<0G-"/K@ 4STI
)@@G@@(4@GXD/K@ 4; ?@G-" =@G-"(?@G-"/K@ 5@*=@G-"/K@ 4S/K@ 4P(*@G-"/K@ 5 !:0G-"TJ
)@@G@@/K@ 4P *@G-"G;@@@[*?@GXH/KE@@[C@@A]_C@KA]_C@)A#<')G>5K[K.?>/%80@@)AFKGW5TK
)@@G@@/K@ 5FRZ"G(LRN"G(LRV"G(LRR"G(L/K@ 5PC@@A]_$3)G-"/K@ 5FR;@@@)RFKGW5RF)GW8TL
)@@G@@P#)@@H&;K@@[ANH?>/8#) 5XCC@GW5;O@@@=W8@@@^*@@@@HG8@@@[[0@G-"*C@GW5/KE@@[TM
)@@G@@R;@@@[A3@G-"AF@GW5/KE@@[(?@GXI/K@ 56R3@G-"R;KG(MR;)G(M/,0^"RR3@G-"T8@@@#TN
)@@G@@O;@@@[;C@@@[A3@G-"()@G%8/K@ 4P**@G-"/K@ 4SH;@@@[/K@ 5 C0@G-"*?@GXA/@E@@@TO
)@@G@@:8@@@_/KE@@@C@KG-"[@KG-3G;)@@[C8@G-(/,0 @#/K@ /Q @@G-"^,)GXA/KE@@@RF@GW5TP
)@@G@@/@E@@@;O@@@=W8@@@^*@@@@HG8@@@[[0@G-"C@KGYS[@WG(LC@0A]_C@KA#<R[@A#(CKHG>;TQ
)@@G@@')J>6V$FKGW5/K@ 6Q/KE@@@AZ^@@@AN^@@@AV^@@@/!K 6ZAR^)@@C@0A]_/K @@@^%)GXITR
)@@G@@9?@GYS9*@GZHA#@GZJ @@@@PR[@A^0R#0A]_ C@GX] @@@@HCC)GW4!C)GW3/K@ 8CG8)@@[TS
)@@G@@CWIG>;:8@@@)/K@ 6?(*@GXI/K@ 7)CWIG>;(*@GXI/K@ 7B?8@@[V?8@@[[/K@ 6;/K@ 7)TT
)@@G@@?8@@[;?8@@[-/K@ 6_/K@ 7)?8@@@'?8@@@0/K@ 7#/K@ 7)%8@@@!:8@@@=/K@ 7)/K@ 7YTU
)@@G@@:8@@@)/K@ 7&:8@@@?/K@ 7Y:8@@@)/K@ 7Y:8@@@-/K@ 7Y:8@@@:/K@ 7Y:8@@@\/K@ 7YTV
)@@G@@:8@@@*/K@ 7Y:8@@@(/K@ 7Y:8@@@$/K@ 7Y:8@@@%/K@ 7Y:8@@@,/K@ 7Y/K@ 7)AF@GX]TW
)@@G@@/K@ 7$')J>6VG'K@@[:C)GW3/K@ 7$G8)@@[/K@ 64H8)@@[AF)GW4(@@@@P/K@ 8A(*@GXITX
)@@G@@/K@ 75R;@@@#R;KGZHR;)GZH/,0^_C^])@@HC[KGYP:[KGZH @@@@H/K@ 8AC90@@AH[0@@PTY
)@@G@@9?KGZH(@@@@N/K@ 8@0@@@@N/K@ 8@O;)@@);^K@@DH90@@[/K@ 789*KGZHR;@@@]R;KGZHTZ
)@@G@@R;)GZH/,0^_CR#KGZH *@GXI/KE@@@R;@@B_AF@GX]AF)GW4 *@GXI/KE@@@ @@@@HRF)GW4UA
)@@G@@!C)GW3/K@ 8ZO;)@@[RZ"G>;:80@@)/K@ 8U;*K@@DO#K@@J:C)GW3/K@ 8X/K@ 8L*@@@@HUB
)@@G@@/K@ 8X/K@ 8LAF)GW4/KE@@@R;@@B_AF@GX]/KE@@@/\) 8&/]%@@@8 %@@@C@)@@E @@@@QUC
)@@G@@ @@@@G;?@@@A/@@ 80?8@@@'?8@@@0/K@ /(H8@@@0T')@@EG])@@G/^K 8$[A)GW5/KI@@@UD
)@@G@@N8K@@DC@@A^1C@KA^2M#W)@@C8@G-(/,0 @%/KE@@@R;@G-(/,0 @3/K@ /Q/KE@@@N8K@@DUE
)@@G@@C@@A^3C@KA^4M#W)@@C8@G-4/,0C]H/K@ /QR;@G-4/,0C]B/K@ /Q/K@ 9Z1@@G-"/K@ 9 UF
)@@G@@R#@G-"R3KGX :@@A^5/^K 9W()@GXC/K@ 9T+8@@@C(@@@@H/K@ 9R^2)GXI^6)GXI/K@ 9TUG
)@@G@@ 0@GXI 4@GXI/,0 30 ?@G-"/KE@@@C@@A^7'=@@@8/K@ /\C@@A^8'=@@@8/KE@@@R;@G-4UH
)@@G@@/,0C]E/KE@@@R;@G>1/,0 @%/KE@@@R;@G>1/,0 @3/K@ /Q/KE@@@R3@G-":8@@@_/KE@@@UI
)@@G@@(0@GXI/K@ 9'R;KG(MR;)G(M/,0^_CR3@G-";*@@@[O;@@@];G@@@=W8@@@#A3@G-"R#@G-"UJ
)@@G@@A#@G>; )@G>; )@G>; =@G>;R;@G>1/,0 @#/K@ /Q/KE@@@R#KA^9(0@GXIO;K@@[A#KG>;UK
)@@G@@N[KG(MR#KGYRA#KG(MR;@G>1/,0 @#/K@ /Q^[KG(M/KE@@@R;@@@-AB@G>8R;@G>1/,0C]HUL
)@@G@@/K@ :L/KE@@@R;@G>1/,0C]E/KE@@@R7@G>;:8@@@*/K@ 'X%8@@@+/K@ ') )@GXI()@G>;UM
)@@G@@^+)GXIR#@GYSA#@G(M ?@GXAR;@G>1/,0C]B/K@ :L/KE@@@0@@G>;/K@ 'SR#@GYF?)@G>;UN
)@@G@@/K@ ')(=@G>; ?@G>; =@G>;()@GXI/K@ ''R3@G>;R;KG(MR;)G(M/,0^"RR3@G>;T8@@@#UO
)@@G@@O;@@@[;C@@@[A3@G>;(*@G>;/K@ ;@R#@GYF!*@G>;/K@ ') *@G>; )@G>;]$0G>;/KE@@[UP
)@@G@@*?@GX /K@ ;DR;@@@ [0@G*QC8@@@[[)@G*Q *@G*QC8@G-(/,0 @3/K@ /Q'=@@@?;@@@@MUQ
)@@G@@A#@G*TR3@G*N*0@GXI/K@ ;Q)8@@@KA3KG*N/K@ ;S+8@@@\A3KG*ND8@G*IC@KG-,L@KG*SUR
)@@G@@[^)G*R*?@GX /K@ ;$'=@@[^/@%@@@:8)@@]/K@ /N:8)@@#/K@HH':80@@^/KE@@@/K@ "$US
)@@G@@ @@G*S/KE@@@R\)GX  @@@@H/^%@@@'=@@[C(4@G*R^6)G*R/@%@@@:8)@@#/K@HH'/K@ /NUT
)@@G@@*=@GXE/K@ ;"C/@GYW/,0 [IC8@ _0/,0 ]_C@@@@S/,0 #*/,0 [3C@@A#L'=@@@8 0@GXBUU
)@@G@@ @@G-"^,)GXA C@GW5/K@ \B=8@)@@/K@ /KC[K@@GC/@GYW/,0 [IC8@A@./,0 ]_C@@@@LUV
)@@G@@/,0 #N/,0 [3C@@A#*'=@@@8/K@ /:C@@A^''=@@@8/K@ /:C@@A^W'=@@@8/K@ /\*)@GXCUW
)@@G@@/K@HH.C/@GYW/,0 [IC8@ _Y/,0 ]_C@@@@L/,0 #N/,0 [3C@@A^;'=@@@8%9K@@ /K@ /\UX
)@@G@@C@@A^/'=@@@I/K@ /\C@@A#M'=@@@8/K@ /:C@@A^.'=@@@8(=@GXD/K@  A^+)GXE/K@ /\UY
)@@G@@C@@A^"'=@@@8/K@ ,K**@GXH/K@ .@A#@G:[R\@G:@:8@@@[/K@ .F:8@@@]/K@ .W:8@@@EUZ
)@@G@@/K@ .KRB@G:@O;@@@[AB@G:@ ?@G:@R#@GX5'=@@@H**@GXH/K@ /\R7@G:@%8@@@[^%)GXHVA
)@@G@@!8@@@#/K@ /\R#@G:[/K@W:@C/@GYW/,0 [IC8@A^_/,0 ]_/K@ .)C/@GYW/,0 [IC8@ _-VB
)@@G@@/,0 ]_C4@G:@/,0 #NC/@@@!/,0 ]BC0@G:@/,0 #N/,0 ]//K@ .)C/@GYW/,0 [IC8@A [VC
)@@G@@/,0 ]_C^@G:@/,0 #N/,0 [3C@@A#L'=@@@8RF@G:@N8K@@#R#KA]_2CH>"F/K@ .3R;@ "IVD
)@@G@@RBX "E+8K@__;*K@@AQ;K@@@'KKA #O#@@@IO#@@@H'=@@@I:8@]]E/K@ ./:8@]PE/K@ "^VE
)@@G@@:8@]ME/K@ "^:8@]AE/K@ .//K@ ^"C@@A A'=@@@8'=@@@D@FREE,R MF$$@ASG,AYQZ MFVF
)@@G@@$$    R#@A B'=@@@JR#@A C'=@@@JR#@A#Y'=@@@J/K@ ^"^)E^@@^+E^@^[MEE@CCSF$ IVG
)@@G@@MAGE SYNTAX ERROR ILLEGAL COMMAND FOR CSF$INPUT FILE HAS NO SDF END-OF-FVH
)@@G@@ILE   OR EXCEEDS 800 TRACKS   R7@G:#%8@@@['=@@@)C1KG:#:9K@@M/K@ "$/K@ /QVI
)@@G@@C@@A D'=@@@8R;@G-(/,0 @3/K@ "?/,) 9+9?)A E9?@G-4:@@A G9?)A^?9*)G-(^2)GXBVJ
)@@G@@R#@GW2>8@@@)R#@GW2=8@@[@H;0@@[9?@A H9*@GY?R#@A JA#@GY,R;@GX4'=@@[8T8@@@^VK
)@@G@@C[K@@GC/@GY</,0@HSC8@A K/,0@I99?@G*I/,0@IYC/@@@,/,0@I[R#K@@LR;@G*1/,0@I(VL
)@@G@@/,0@H\R#@A^M'=@@@JR#@A LA#@G%O^A)GX[^+)GXAR80  AR#@GW2=8@@@) @@G*U @@G*XVM
)@@G@@/K@ \OELEMENT & NOT IN SPECIFIED FILE &&  DC\D8)C(MELJEK)^@)C(HD9^C*)^0)VN
)@@G@@CDO^@&ETOCDOE(N^@&ETTD1OCDS^[ ELMD9M 0)^@)D9PE-KE(O^[ADDGC*)D9QC(MC1GD9RVO
)@@G@@ 0)^@)C(JC0'^0)^@)DDGD- C9[D))CTJD(HCDIC),ET#CDIBK&^@)D-DD1 ES'^0)D(DETNVP
)@@G@@DDIC8)C- D-DD(DE- EK'^0)D1J^[#D9MEL CTODDJD1N^[[E[KD-DC(^ 0)D1J^[ADDIC))VQ
)@@G@@D(DETNDDIC8)D1PD( ELDCS)DDIE1[D-DC))E-TE[ DDGD- C9[D))CTJD(HCDIC))E9CC(IVR
)@@G@@^[PET C))CDO^[GDDIC*)A@)CTJD-PD(I^[MC(AC(MC(ICT ^[ ELMD9M^@)D-DD1 ^[MC(AVS
)@@G@@C(MC(ICT ^[ ELMD9MCDPE-JD1J^[NC-A^[CC([C- EK)E9JEL^^[DD0)C1DD- ^@)DDIE1[VT
)@@G@@D-DC))C(^DDO^[#D[[EK'^0)D(DETNDDIC8)E- ELHDDICDODDJD0)CTCCDMBK&^@)CL[C))VU
)@@G@@E-[CK'^0)^@)C- E[MC(NES)E[PD1#D@)D9IC1DD- ^[ACD#^[MC(EC(#E)'^0)^@)E[MDDIVV
)@@G@@E-ADDGC*)DDI^[PET END ONSITE PRINTOUT ON & AT & DDIE[PE))D(JC- ^[[ETNE(HVW
)@@G@@C(^ 0)C(GC(HC(IE))C- ETDC9ICDODDJD0)C(MELJEK)^@)C1DD- ^[^C(NDDBD1[E-DD9IVX
)@@G@@^[ ELMD9M^@)E[MD9BEL[D*)C1DD- ^[PD1^C(ADDIC(^^@)EL CD^ (JD1GFC)D(JC- ^@)VY
)@@G@@****NO CARD DECK****  PLEASE RETURN THIS LISTING TO:  EL CD^^[D (J^[ ELMVZ
)@@G@@D9M^@)D1JD1 F[DETOCDIE))CTTCTGC*)^@)DDICTJELMC(#E))D(JC- ^[NE[ CTDC1DC(^WA
)@@G@@ 0)^@)D([DDG^[ADDGC*)C1PD-G^@)D(DD1DD(PD*)D-DD1 ES)CDGD-JE9 C)'^0)DDGD- WB
)@@G@@C9[D))D(JE1 ^@!^[^DDOE-J^[[ETNE(HC(^ 0)^@)CDPE-J^[ID9O^[[D-GD9RC(^^[DD0)WC
)@@G@@CL[E-#D@)^@)CDOE- D(KE))E-J^[ C-DE))E[MD9BEL[D*)C1DD- ^[[ES)CC)C-[E-[^[AWD
)@@G@@DDGC*)DD]CDIDS)^0)C-]CDIDS)D1JE))E-CC*)ET[D( ^[ C-DE-JEK)D- E1 D))D9M^[]WE
)@@G@@E(DD-O^[DD1#D9MEL CTOD-TE-DD( ^[MC(HCDDD1DD1B^[ODDGD))D([F@)E-DD( BK)^@)WF
)@@G@@@[JA]=@[[ ^O@@[@@Q@[CA]3@@[@@@@[^ _2@[^A[<@[ GZH@[#GY?@[-GY?E(KE[ EK)^@)WG
)@@G@@D1JELHCDG^@)@@[G%O@@[ B=D1JD1 _____@@[BA[9ON&&&&OFF&&&@[QGZH@[AGY?@[^ _&WH
)@@G@@@@]GXR@@^GZH@@^GXL@[[G*0FROM: @@]GXV@[^A]@MF$$        @@]GXP@[@G*1@@]GXTWI
)@@G@@@@[@@H@[#A@F@[AA@R@[] ^P@@[@@[@@[@@]@@[@]^@[LGY?@[]A@ @[CGY?@@[G(M@@[G(3WJ
)@@G@@@[DA@I@@[@D=@[CA]E@@^G*?@[ A@X@@K@@@@[BA]M@[[A@+@[@GZH@[^A@9PR$&&&@@ GZHWK
)@@G@@@@ GY%@][ )K@[@ -1@]EGZH@[GGZH@6[GYP@#QGZH@[DA[$@@#GZHD(NC8_^@)^@)&-(&&&WL
)@@G@@@[IGZH@@WGZ,D*)^1N^0&^0&@[ GY?AC2AS4A*6A88BC0^@)@[MGY?00000000    @C@@@@WM
)@@G@@@[]G:"@K@@@@@@# (K@@IGZHED$XF       @@] :>@[BA[K@[AA[R@[AA[X@[^A[0@[ A[4WN
)@@G@@@[EGZH@[# _Y@@# :(@@[G*]@@[G*ICDNCTDDC)^@)C1DC(GC-[E-[@[GGY?@@#G*U@@#G*XWO
)@@G@@@@#G*)@@#G*<@@#G*&@@#G*(@[B \<ED$TB       G*0@[[@@]__.@@[GZH@@[G+C@@[G-:WP
)@@G@@@@[G-_@@[G-6@@@ K%E[A K%@[FA]T@[BA@<*[@@@@@[^A[]@[DGY?@[A "Q@[^A@B@[A __WQ
)@@G@@DDJE[M^@&^@)@@@DDBC-H^@&@[@@@@CD]D9ME)-^@)@[]A ^@@] ._@@# "[@[A _%ED$TA WR
)@@G@@      ED$TA D9PE-KE(O^[ADDGC*_@USE &C(SDDO@@L K-@@Q =/@@P Y-@@F J_@RP H*WS
)@@G@@@LC KY@LN BC@FC J/@UP I'@PL I@@ON D?@@V >;@BR >.@@T \B@@H W-@@O ZO@GO WTWT
)@@G@@@@N WV@@B \3@@C L!@@D V>@@I J @IB R4@IN O8@@R RE@@A \3LOC K-LNQ =;QUI =/WU
)@@G@@PRI Y-LNP Y)FIN J_LAS XNEXI :5OMI /\TAB &?SET &JCLI >_PLI I@CSF E<LCH E'WV
)@@G@@MSC F PUN ZYAUT U\TYP H?TCH I0SPL &0SIT Z$LNS Z=CPU Z&OPR X=OFF D,TIM +0WW
)@@G@@CPT =MSCA =&CCH I6EXC FEMAI F,MAX &DSTA B7CAS FUVER >;BRI >.TOP \BEND /\WX
)@@G@@HEA W-GOT WTNEX WVOUT ZOSAV >_BOT \3DOC <ACHA L!DEL V>INS J INL O8RET REWY
)@@G@@APP \3INP JJDIT SRSEQ ="ADD *QMOV SP@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B_@B_@@@@@@@@@@@@@@@@@@@@@@@@XA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XB
)@@G@@@ASG,CP MF$$,F2///20    @ASG,A MF$$ @FREE MF$$  @FREE,D MF$$@BRKPT MF$$ XC
)@@G@@ HVG*1MF$$        @@@@@@ = G*1@[AGX= :5G*1C-J^[TD9P^[RCDIE))FDJE(M^[HCDDXD
)@@G@@D)_^@)@[@G*1MF$$        @[]G:A G?G*1@@@@@@@@@@@@@@@@@@@[]G:C :1G*1@[#GY?XE
)@@G@@ :1G*1@[]G:E :1GY,@@@@@@------------ED$TB       ED$XF       @@@@@@@@@@@@XF
)@@G@@@@@@@@@@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      XG
)@@G@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@            *SDFF*^@)^@)XH
)@@G@@^@)^@)G?@HC@H=@I@@@[-GY?@@@@@@[[@@@@@@@@@@@@@@@@@@@@@@^0@@@@@&QGZH@@@@@@XI
)@@G@@[[@@@@@@@@@@@@@@@@@@@@@@@@@@@@ED$PR       ED$DI       @@@@@@@@@@@@@[0GZ,XJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ED$TA       @@@@@@@@@@@@@@@@@@@@@@@@XK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ED$TB       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@K@@@@@B@@@@@@@@@@G?@G3@@@K@@-@@[G(M@@[@@@XM
)@@G@@@@@@@@@@@@@@@C@@@@@B@@@@@@@@@@G'@H[@@@K@@@@@[G(M@@[@@@@@@@@@ED$XF       XN
)@@G@@@@@@@@@@@@@@@[0@@@@@@@@@G+LG=[@@^@@-@@[G(M@@[@@@@@@@@@______@@@@@@@@@@@@XO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FREE,XQ
)@@G@@RA ED$S1.   @FREE,RA ED$S2.   @FREE,A ED$S1.    @FREE,A ED$S2.    @FREE XR
)@@G@@ED$TB.      @FREE ED$TA.      @ASG,T ED$DI,F///600     K% K%Q@@@@@B@@@@@XS
)@@G@@N@@@@@P@@@@@D@@@@[X@@@@[S@@@@[L@@@@@M@@@@@E@@@@@U@@@@[@@@@@@@@@@@@/K@ /2XT
)@@G@@@@@@@@@@@@@@/K@ ")D([DDG K%^@)D(NC8_^@)^@)D[^C8_^@)^@)@]^@]#@@[@@@@@^GZ,XU
)@@G@@@@AGZHED$TA       @@^HHSED$TB       @@^HHW@@#HH$@@^HH<@[GHO3ED$DI       XV
)@@G@@ /NGWX@@[GWY@@K@@@@@C@@@@[@@@@@]@@@@@[^HO$@@[G*]@@[G*I@[ A[F@@)@@@@[^A[<XW
)@@G@@@[CHO: /NHI/@[DGZH@[CHI#@[BHIP@[EHIF@[BHI5ED$S1       ED$S2       @ . REXX
)@@G@@JECTED@@IGZH@@^GZH^<@C]@@[ HOW@[AHO-@@]GZH@[IGY?@[JGY?@[EGY?*[@@@[EOF FOXY
)@@G@@UND   BI>16AR;@)@['=@@[\[@KGWPN')@@[R#@G:GA#@GW8 C@GW/^6)GXDR;@@@;AF@GW.XZ
)@@G@@ @@GX8R;@@@)AB@GW.^E)GX#R;@@]^AB@GX#^6)GW7R;@@@-A3@GW7R;@@B_AB@GW"R;@@B_YA
)@@G@@AB@GW_R;@@@$AF@GW_R;@@[KAF@GX[R;@@]# OGG>/8#@HCXN8K@@#R#KG:HR#0G:HC]!!P YB
)@@G@@G])G:H[Q\?>/?@0@@Q/K@HC=8KKHC+R#@G:I'=@@@4R#@GZ,A#@GX\R#@GZ\A#@GX0R#@GZ1YC
)@@G@@A#@GX1 @@@[I'=@@@6>8@@)@/K@HDN^+)G%. )@G%5 )@G%6 )@G%7 )@G%8 )@G%9 )@G%'YD
)@@G@@ )@G%; )@G%/ )@G%" )@G%_=8@@@[^+)G%5=8@@@]^+)G%6=8@@@^^+)G%7=8@@@C^+)G%8YE
)@@G@@=8@@@K^+)G%9=8@@@)^+)G%'=8@@[@^+)G%;=8@@]@^+)G%/=8@@^@^+)G%"=8@@C@^+)G%_YF
)@@G@@:9@@@^^6)GXG^&)GXDC/@GY</,0@HSC8@HH)/,0@I9C@@GX\/,0@IW/,0@H\R#@G:J'=@@@JYG
)@@G@@9?@G:K9*@GYGR;@GYG'=@@[G*4@GYM/K@HD$R#@G:M'=@@@J9?@G:N9*@GYGR;@GYG'=@@[GYH
)@@G@@*4@GYM/K@HD;(4@GXG/K@HD4R#@G:P'=@@@JR#@G:Q'=@@@J/C@HD;R#@G:R'=@@@J/G@ / YI
)@@G@@(4@GXG/K@HD;C@@G:S'=@@@89?@G:T9*@GYGR;@GYG'=@@[G*4@GYM^&)GXC @@@@U ^@GW5YJ
)@@G@@ @@@@S/,) 83R#@G:VC@@GWOOF@GW5AF@GW5;*@@@^/C@HI@;*@@@[RFKGW5O;KGWXA#KHI/YK
)@@G@@/G@HG8R#@GWX;C@@@U%8@@@(/K@HI@R]0G:W*4F@@@/K@HI@R<F@@@O]0@@G(4F)@[/K@HERYL
)@@G@@R#@GWXA#@GW2R#@GW2>8@@C@/K@HE< 0@GXI 4@GXI/K@HE:R#@GW2>8@@K@/K@HE(^2)GXIYM
)@@G@@^6)GXI/K@HE:R;K@@]A7KGXIR#@GW2=@@G:X^6)GXGR#@GW2=8@[@@^+)G%6R#@GW2>@@G:YYN
)@@G@@/K@HE7R;@^@@)@@GW2A#KGW2R#@GW2=@@G:Z 4@GXGR#@GW2=@@G:)^+)GXC*)@GXC 4@GXDYO
)@@G@@ C@GW59!@HHQ9(@G*]9(@G*I9(@GYGR#@GW2=8@)@@/K@HG[R;@G*]R;K@@[/,)HI./K@HG.YP
)@@G@@R#KG*^:@KGYPA3KGX R#@GW2>8@@@)/K@HFO*0@GX ^,)GX /K@HFXR;K@@]9!@HHQ9(@GYGYQ
)@@G@@R;@G*I/,)HI./K@HG=R#KG*K:@KGYP^,)GX R;@G*](0@GX *?@GX ^6)GX /,)HIWR7@G*FYR
)@@G@@A7@G*RR#@G*HA#@G*T9?@G*]*)@GXC9?@G:N9*@G-4C@@G*G[@@G+]*)@GXC @@G+]R;@@@-YS
)@@G@@*4@GX AB@G+^R'KG*]/,)HI>R#@GW2>8@@@^ =@GXD/,) 8"^2)GXB/,) AJ/,) G\ =@GXAYT
)@@G@@()@GXC/K@ ^" )@GXCC@@G:-'=@@@8/K@ ^"R7@GXI%8@@@]/K@HGA^2)GXI^6)GXIR;K@@[YU
)@@G@@R;@G*I/,)HI./K@HI@/K@HGON8K@@GC@KG:+C@@G:<M#H)@@C@@G:='=@@@8R#@GW2)8@)@@YV
)@@G@@A#KGW2R#KG*K%@KGYP/K@HGT^,)GX ^6)GX  @@@@V*)@GXC/K@HF* 0@GXBR#@GW2>8@@@^YW
)@@G@@ =@GXD/,)HOC/,) AJ^&)GXA/K@ JJR3KGX R#@GW2>8@@^@/^KHG1R#@GW2=@@G:>/K@HG4YX
)@@G@@R#@GW2)8@@^@A#KGW2C@@G:&'=@@@8/K@HFX^,)GX C@@G:$'=@@@8R#@GW2)8@@@)A#KGW2YY
)@@G@@/K@HFXR#@G:*!8K@@,/K@ /N/K@HEAR])@@C9?@ ^R9*@GY?R#@ ^TA#@GY, C@GW3A])@@CYZ
)@@G@@CD0GX5R;@ /\AF@GX5/,) 0,[D0GX5/,) 6+9?@GZH:@@GYP/K@HG/9*@G*^9?@HHQ9*@G*]ZA
)@@G@@^E)G*B^6)G*FR;@@@))@@GW2A#KGW2^6)GXE/KC@@[TPF$        @ASG,T  ED$TA,F///ZB
)@@G@@800   @CAT,VG ED$TB,F///800   @USE ED$TB,ED$TB& @ASG,T ED$TB,F///800    ZC
)@@G@@@ASG,ADX ED$TB .  C/@GY</,0@HSC8@ _S/,0@I99?@G*^/,0@IY/,0@I6/,0@H\C@@G:(ZD
)@@G@@'=@@@I*4@GXE/K@HGFR#@GW2=@@G:>/K@HGF/K@ /\C@@G:%'=@@@8/K@ /:C@@G::'=@@@8ZE
)@@G@@/K@ /1C@@G:?'=@@@8/K@ /\C1DD- ^[ID9O^[KELJC9MCDH^[ADDGC*)C1JELHCDO^@)^@)ZF
)@@G@@C(MELJEK)EL CD^DDIC8)E[MD9#C(NETJEK)CT[D-G^[NE-[E- D( D1O^@)CDPE-J^[ADDGZG
)@@G@@C*)CL[C))D9M^[ID9IC(SDDNE-[D1O'=@@[ /@%@@@:8)@@]/K@ /N*0@GX /KE@@@:8)@@[ZH
)@@G@@/K@HH%/K@HH'C:9@@C(4@GXC/KE@@@(C@GX8CB0GX80@@GX8HJ0GX8R:D@@CL)D@@C!@@@@VZI
)@@G@@!@K@@V/K@HI2/KE@@@C@@G:!'=@@@8/K@ /:CTTCTGC*)D1PD(]C(M^[JE(O^[JC0)EL[D1BZJ
)@@G@@C*,^@)@@@@@@A]0GXJA#K@[ R;:@@@?@)HI/%0V@@@/KE@@@R#)G:HA#?@@  @G@@^ @G@@CZK
)@@G@@ @G@@D @G@@E @G@@F @@HO[9!@GYP9(G@@]9(G@@A[[@HOB[[@HO#[[@HO 9!)G:,%8K@@[ZL
)@@G@@9!)G:09(?@@@R\V@@@R:;@@@R<:)@@:8)@@[/K@HJY%8)@@]/K@ /&9!F)@@/K@HJ)C[F@@@ZM
)@@G@@C[KGYP/KHHJ)/%0HJ%/%0HJ?/%0HJ,/%0HJ0/%0HJ2/%0HJ4/%0HJ'/%0HN)/%0HJ;9(@HO[ZN
)@@G@@/K@HJ;9(@GYG/K@HJ;[[@HOB/K@HJ;[[@HO#/K@HJ;[[@HO /K@HJ;9(G@@]%80@@./K@HJ;ZO
)@@G@@9!@G*]9(@G*I/K@HJ;9(G@@AR#K@[ R;:@@@?@)HI/%0V@@@/K@HK[/K@HJPA]0GXJC/@GY<ZP
)@@G@@/,0@HSC8@HN"/,0@I99?@@@M/,0@IYC/@@@,/,0@I[(@@HO[/K@HKK9?@HO[/,0@IYC/@@@*ZQ
)@@G@@/,0@I[9?@GYG/,0@IYR#@HOB:@@GYP/K@HKVC/@@@(/,0@I[C@@HOB/,0@IWC/@@@)/,0@I[ZR
)@@G@@R#@HO#:@@GYP/K@HK+C/@@@//,0@I[C@@HO#/,0@IWR#@HO :@@GYP/K@HK,R#@HO#%@@GYPZS
)@@G@@/K@HK%C/@@@//,0@I[C/@@@//,0@I[C@@HO /,0@IWC/@@@]/,0@IEC/@@@./,0@I[C/@@@]ZT
)@@G@@/,0@IE9?@G:2/,0@IY/,0@H\R#@G:4'=@@@JR#)@@G9?@@@M9*@GYGR;@GYG'=@@[G*4@GYMZU
)@@G@@/K@HL=R#K@[ :8K@@[^6)GXA:8K@@]^2)GXAC/@GY</,0@HSC8@HN//,0@I9R#@GW2>8@@)@ZV
)@@G@@/K@HLIC/@@@X/,0@I[C/@@@]/,0@IE9?@@@M/,0@IY/,0@H\R#@G:5'=@@@J/@@HL.C[K@@GZW
)@@G@@+@@G:6/@KHMG9?@@@M9*@GYGR;@GYG'=@@[G*4@GYM/K@HL)/K@HMG=9K@]@/K@HN#=9KC@@ZX
)@@G@@/K@HNJC10GYMR#K@[ :8K@@]/K@HL\>90@@]/K@HL!C@@G:7'=@@@8/K@HL3R#@GW2=8@@@)ZY
)@@G@@>90@@^/K@HM@C@@G:8'=@@@8C/@GY</,0@HSC8@HN_/,0@I99?@@@M/,0@IY/,0@H\R#@G:9ZZ
)@@G@@'=@@@J/K@ /\9()GYGR;@GYG'=@@[G9?@GYP9*@HO[A#@HO#A#@HO A#@HOBR7@GYM/@@HM,AA
)@@G@@;C@@@#%8@@@#/K@HMUR]0GXJ/KE@@[C/@GYW/,0 [IC8@HOM/,0 ]_C@@@[ /,0 #*/,0 ]/AB
)@@G@@C@@@@LC8K@@G/,0 #-/,0 [3R#@G:''=@@@8/K@ /\C/@GYW/,0 [IC8@HOM/,0 ]_C@@@[ AC
)@@G@@/,0 #*C8@HM&/,0 ]_/,0 [3C@@G:;'=@@@8/K@ /\^[ID9O^[JD0)C1[ETOEL[D1^^[AD9MAD
)@@G@@D([E))C- E1DCT ^0)C/@GYW/,0 [IC8@HOM/,0 ]_C@@@[ /,0 #*C8@HM'/,0 ]_/,0 [3AE
)@@G@@C@@G:;'=@@@8/K@ /\^[CCDN^[ID8)C(LE(DE[HC(IE))CDNETDC9IC(^^[OD8)DDO 0&^@)AF
)@@G@@C/@GYW/,0 [IC8@HOM/,0 ]_C@@@[ /,0 #*C8@HNV/,0 ]_/,0 [3C@@G:;'=@@@8/K@HL+AG
)@@G@@C/@GYW/,0 [IC8@HOM/,0 ]_C@@@[ /,0 #*C8@HO_/,0 ]_/,0 [3C@@G:/'=@@@8/K@HL=AH
)@@G@@^[^DDNCD]D- C)! ([CT#C(KE- C)& @@@@I @@@@JR#K@[ %8K@@[/K@HJ;A60GXC;?0@@AAI
)@@G@@?80@@'?80@@0/K@HN:/K@HN7:80@@-D@0@@J%80@@+/C0 /([C0GX8 @@@@J;?0@@A:80@@ AJ
)@@G@@/K@HJ;?80@@'?80@@0/K@ /(T8)@@EH80@@0G@)@@JAB)GX8/K@HN0@ASG,A&     @USE &AK
)@@G@@@FREE &                                               R#KG:.A#KG-3C@KGYRAL
)@@G@@[@KG(MC8@G-(/,0 @#/K@ /Q^,)GXA @@G-"/KE@@@C1DD- ^[DD0)C1DC(GC))^0)CT[D1IAM
)@@G@@D9O^[]C*)CDNETDC9IC(^BK)^0)^@)DDIE[PE))C1DD- ^[MC([C))D-JCTFD9PE-KE(O^[AAN
)@@G@@DDGC*)E9MDDOC*)D-JCTF^@)CDPE-J^[MC(#D9QC(MFC)^@)E*)D9KE-DD9I^[[ETNE(HC(^AO
)@@G@@^[AD9M^[^CDOCDADDGC*,^@)CDPE-J^[#D9HD([D1^^[#CDID1JE))CL ^[PET C),^[[E(OAP
)@@G@@D8)C1DD- ^[DD0)E(NC*,^@)^[DD0)E(NC*)CLT^[[D1JE-CC(M^[ME(I^@&@@@@@E@@@@@OAQ
)@@G@@@@@@@&@@@@[C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[>^;2@@@___@@WGW^@@#GW\AS
)@@G@@)@JGW)@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___AT
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___AU
)@@G@@A]0GWS/,0C[\/,0C[;/@@^/'9*@GWA9?E@@A9*@GWC9?E@@C9*@GWGC8@GWA'=@@[ /@)^/EAV
)@@G@@:8)@@[/K@^/C[@@^/AC8@^/^'=@@[Q/K@^/B*PF*  K@EGWA@@@@@@'=@@@QC@@GWU/K@^/FAW
)@@G@@C@@GWV)@@GWT[@KGWXR@KGWWO8K@@#9?@GWA9*[@@['^@^//C@@GW\;*K@@A)@@@@HC@@@@HAX
)@@G@@)@@@@I[@L@@@O@K@@IO8K@@[9?@GWC9*[@@['^@^//C@@GW0;*K@@A)@@@@HC@@@@H)@@@@IAY
)@@G@@[@L@@@O@K@@IO8K@@[9?@GWG9*[@@[:@@GW^/K@^/2'^@^//C@@GW1;*K@@A)@@@@HC@@@@HAZ
)@@G@@)@@@@I[@L@@@O@K@@IO8K@@[P@KGWWA@KGWRC@@GW O#@GWR[@@GWOC9@@@^/,0C[U/K@^/'BA
)@@G@@R]0GWS/KF@@@@@@@@@ @@GWQN8K@@GN8)@@A8K)^.]/K@^.C;GK@@A;C)@@Y%8)@@ /K@^.IBB
)@@G@@8KK^.@'=@@@)*@@GWQ'=@@@)C8K@@[[@KGWQ;G@@@=/K@^/_C@@@[[;G@@@=W8@@@A*@@@@HBC
)@@G@@O;@@@[C@)@@G(@@@@HC8K@@A/K@O//      ]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BD
)@@G@@@@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BE
)@@G@@@@@@@@@@@@@@]=@@@@@@@)@@@@@@@)@@@GWX@@@@@@@[A@][ED    [[]@@@[[A@@@[[B@@@BF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@I\^;2@@@___@@KGWO@@EGW,BG
)@@G@@@]KGXI@@EG<6@@RG95)@KGW^)@EGW=)@QGW8)^SGZY)P5G=@@@@___@@@___@@@___@@@___BH
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___BI
)@@G@@AA0^"] CE@@@CCE@@[*^E@@[/KG@@@A#@^"#9?E@@@9*@GW^RBE@@@RBG@@CP;@@@[R]@@@GBJ
)@@G@@ @C@@@C8@@@[[^E@@[RBE@@@9?W@@B9*KGWP/,0C]B/K@^"B/K@O"#RBE@@@**G@@E/K@^/^BK
)@@G@@RFU@@@O;K@@[AFU@@@/K@^/I ^E@@[R#G@@E;C@@@S/@@O"]C@K@@GG@K@@CC@X@@@:@KGWRBL
)@@G@@H8@@@[/@@O"]N@0@@GG@@@@CC@G@@@'^@^.GC@@@[#H8@@@[T8@@@AG@@@[[[^C@@@*@@GWOBM
)@@G@@/K@^/=/K@O"]RBE@@@9?W@@B9*KGWPR;K@@IABW@@BR;KGWAABW@@C/,0C]B/K@^"B/K@^"^BN
)@@G@@RBE@@@**G@@E/K@^/:RFU@@@O;K@@[AFU@@@9?KGWP9*W@@BR#G@@E;C@@@S/@@O"]C@K@@GBO
)@@G@@H8K@@[C@XGWA:@KGWRH8@@@[/@@O"]N@0@@GH8@@@[C@GGWA'^@^.GC@@@[#H8@@@[T8@@@ABP
)@@G@@G@@@[[N@0@@G'^@^.V*@@GWO/K@^/=/K@O"]@@@@@@N8K@@A;G@@@A;CK@@Y%8K@@ /K@^.OBQ
)@@G@@8KK^.I'=@@@) @@GWO%8K@@;/K@O.G[@KGWO8KK^.U'=@@@)/K@O.G@@@@@@C C@@@K[@@[#BR
)@@G@@[ S@@@C9K@@[ @@@@JW80@@AG@0@@CG80@@[R]K@@J&'K@@[G9@@@[8K0^.(/K@O.VC@@@@LBS
)@@G@@G9K@@[H8@@@[;G@@@=W8@@@A')H^.6C@@@@KG9@@@[H8@@@[;G@@@=W8@@@A')H^.//K@^.$BT
)@@G@@C4/GWAC0/GWAC?/GWAC*/GWAC=/GWAC)/GWA[49@@@[09@@@[?9@@@[*9@@@[=9@@@[)9)@@BU
)@@G@@@@@@@@@@@@@@C8@@@[[^E@@[/K@O"] CE@@@/K@O"]AA0GWSC\E@@@R[0@@EO90@@]C;K@@[BV
)@@G@@'^@]G>0@@@@H/K@ @RR[)@@HC[)@@GC[0@@IC]@@@J:'@@@^C'@@@#O[0@@UC;K@@]'^@]G>BW
)@@G@@0@@@@H/K@ @R:80@@^R;0@@#O[0@@U:80@@[/K@^"":'@@@[/K@^""'^@@$YC]K@@GR#@@@MBX
)@@G@@R#K@@AR#)@@NR#0@@O'^@@$YR#K@@PR])@@B%;@@@[/K@^"1%@@@@H/K@WWS/K@ #2%;@@@]BY
)@@G@@/K@^"6!@K@@G/K@WWS/K@ #2%;@@@#/K@^";!@@@@H/K@WWS/K@ #2%@@@@H/K@ #2/K@WWSBZ
)@@G@@:80@@#/K@ @P:'@@@#/K@ @PR])@@BR[K@@HC]K@@GR#0@@NH9)@@[H'K@@[&;)@@[&;0@@[CA
)@@G@@&9K@@[&9)@@[')J @B')I @I:@@@@H/K@^_W:;@@@[/K@WWS:;@@@^/K@ #2%;@@@]/K@^_TCB
)@@G@@!@K@@G/K@WWS/K@ #2!@@@@H/K@WWS/K@ #2$;)@@A/K@^_ZQ;)@@[$;0@@A/K@^_+Q;0@@[CC
)@@G@@8^)^_=/K@^_48 K^_G:;@@@#/K@WWS')J @B%8@@@ /K@^_1$;0@@A/K@^_!Q;0@@[8^)^_$CD
)@@G@@%;@@@[/K@WWS/K@ #2%;@@@[/K@ #2/K@WWS8 K^_8%;@@@[/K@WWS/K@ #2:;@@@]/K@WWSCE
)@@G@@')I @I%8K@@ /K@ @^$;)@@A/K@ @@Q;)@@[8 K^_'%;@@@[/K@WWS/K@ #2%;@@@[/K@ #2CF
)@@G@@/K@WWS/S@@@@R7A@@@R3A@@@R\A@@@R:A@@@R$A@@@R<A)@@/S@@@@R7P@@@R3P@@@R\P@@@CG
)@@G@@R:P@@@R$P@@@R<P)@@R#@GW-'=@@@IR;@@@[A#@CKB/K@WWSAA0GW+ @@G<6A])GXI9?E@@ACH
)@@G@@9*@GXM9?E@@C9*@GXQ W@GXP/,0C[;/@@ ^_9*@GXKN8K@@CR#@GXIO;@@@]&;@@@[R#KG99CI
)@@G@@M#W)@@R;@GXK'=@@[ /^) DYR#)GX*9?@GW*N@KGL:2@I)@I/K@ [C%@Y@@ /K@ @19?0GW&CJ
)@@G@@9/"@@]/K@ @19?0GW=9/"@@@/K@ @19?0GW%9/"@@A/K@ @1RV0GXS%S"@@D/K@ [#(WI@@DCK
)@@G@@/K@ #ARFY@@CAFKGW?RBY@@CABKGW?/K@ [RR#@GL:!8@@@2/K@ DEO;@@@[A#@GL:R#I)@@CL
)@@G@@R#@C^%O;@@@[AB@GW?RBKGXT;*K@@AO#@@@HAF@GW?A#@C^%'=@@@<A#)GXJ&;)@@[R#@G99CM
)@@G@@N8K@@DM#?)@@ WI@@@RV@GXSAVI@@@ ^@GW19?@GXK9*@GXXR#@GXUA#@GX+R;@GXX/,0C]HCN
)@@G@@/K@ D%R;@GXX/,0C]B/K@ D%/K@ DJ ?@GX$R#KG9'%@KGX$/K@ DJR#KG9;%@KCKL/K@ DJCO
)@@G@@R;@GX%R#KG9/N8K@^SM#W)@@ @@GW< C@GW0R;@@@[A#@GW,R#@GW,OF@GW0A#@GW,R')GW0CP
)@@G@@/,0^;2(C@GW0/K@ D%/,0#?D@@@CKK@@@GW\/,0]S(@@@CKK@@@CQ) @@GX(*@@GW\'^@  =CQ
)@@G@@(4@CQ-'^@  '*@@GW</K@ ['R#@GW\AB@CQ-R#0CQ);C0@@SN@K@@JOB0GW?R#KCKKO;K@@ACR
)@@G@@ @@@@GW8@@@A*@@@@HO;@@@[A#@CKKO#0@@GRF)GW?!@)@@J/K@ ]?PB0GW?O;0@@[RB)GW?CS
)@@G@@R#@C^%K8@@@[A#Y@@@ABKGW??80@[@R;0@[@O#@@@J'=@@@<A#@C^%AF@GW?RB)GW?&;)@@[CT
)@@G@@R#@G9.M#?)@@R#@CKKN@K@@G;*@@@SO#@GW,A#@CKKR#@G9"M#?)@@&;)@@@AB)GW?/K@ ['CU
)@@G@@RB@GW? @G@@@R;@GXX/,0C]ER;K@@[:@KGW,A#KGW<R#)GXJR#KGW<AZY@@D*@@GW</K@ AWCV
)@@G@@RBI@@CAB@GW!AB@GW?(@@G<6/K@ #>(@@C^P/K@ #>C/@GW2/,0@HSC8@GZOC8K@@O/,0@I(CW
)@@G@@'^@ C2/,0@H\R#@G9_'=@@@I/K@ #>RB@GW?R#W@@@;CK@@SO#@@@HR#W@@@;CK@@SO#@@@HCX
)@@G@@AB@GW?*WG@@@/K@ #>(@G@@@/K@ ^SR#G@@@AB@GW?RA)GW?(@@C^P/K@ #2RBE@@[A#@GW\CY
)@@G@@R7U@@[:8K@@J/@@ #2R#E@@@;C@@@SO])@@G'^@ B'RA)GW?R7E@@[!8@@@K @@@@G/,/P#9CZ
)@@G@@*@@CKB/K@ A7/K@ #R@@@ A!@@@@<W@@@[YA@@@@0_@@@]E]@@@ A!@@@ ^F@@@ D/@@@^"DDA
)@@G@@@@@ ^S@@@@R @@@[[W@@@[ML@@@@7[@@@@%>@@@ ^D @@CKB/KF@@@R#@G<6K8@@@[A#KG<6DB
)@@G@@T8@@@EO;@G<7&;@@@[N8K@@ER#KG99M#H)@@R#@G<6!8@@@2/K@ A2/K@ @WR\E@@@:8@@@[DC
)@@G@@/K@ ^4R#@G<6(@@@@G/K@WW+P;@@@[A#@G<6T8@@@EO;@G<7&;@@@[N8K@@ER#KG99M#W)@@DD
)@@G@@*@@CKB/K@ A7(@@C^P/K@ #RC/@GW2/,0@HSC8@GZSC8K@@S/,0@I('^@ C2/,0@H\R#@G9_DE
)@@G@@'=@@@I/K@ #RR;@@@[A#@CKBR#@G'@'=@@@IR#@G'['=@@@IR#@G']'=@@@IR#@G'#'=@@@IDF
)@@G@@/K@ A7C/@GW2/,0@HSC8@GX;C8K@@O/,0@I(R]@GXIR7C@@]:8@@@ /K@  I:8@@@*/K@  GDG
)@@G@@9?C@@]/,0@IYC/@@@*/,0@I[9?C@@^/,0@IYC/@@@./,0@I[9?C@@A/,0@IYR;@@@ :4C@@CDH
)@@G@@/K@  VC/@@@//,0@I[9?C@@C/,0@IYC8@GX_C8K@@E/,0@I(/,0@H\R#@G9_'=@@@IR;@@@[DI
)@@G@@A#@CKB/K@ ^S@@@@@@R#KGW\!8K]WK/K@  6P;K@@[ @@@@GW8@@@=R#?GZY;@!@@@/=)  2DJ
)@@G@@O;)@@[;)!@@@A#?GZY/K@P =R;@@@[A#@GX( 4@CQ-/K@P =R;@@@]A#@GX( 4@CQ-/K@P =DK
)@@G@@@@@@@@*@@GW</K@ AGC/@GW2/,0@HSC8@GY^C8K@@S/,0@I('^@ C2C/@@@[/,0@IEC/@@@:DL
)@@G@@/,0@I[/,0@H\R#@G9_'=@@@IR;@@@[A#@GW<R#KCKKO;K@@A @@@@GW8@@@A*@@@@HO;@@@[DM
)@@G@@ @@CKKAZ@CKKR#@GW,AB@CKKR')CKK'^@ B'R#@GX(R#GGY['=@@@I/K@P 'R#@GW,%8@@@[DN
)@@G@@/K@ A*C/@GW2/,0@HSC8@GY-C8K@@R/,0@I('^@ C2/,0@H\R#@G9_'=@@@IR#@G'^'=@@@IDO
)@@G@@R;@@@[A#@CKB/K@ ^SR#@G' '=@@@IR;@@@[A#@CKB/K@ A7R#@G'A'=@@@IR;@@@[A#@CKBDP
)@@G@@/K@ A7C/@GW2/,0@HSC8@GY\C8K@@R/,0@I('^@ C2C8@GY3C8K@@P/,0@I(/,0@H\R#@G9_DQ
)@@G@@'=@@@IRA)GW?RBE@@[A#@GW\R#E@@@;C@@@SO])@@G'^@ B'C[0G<68^0 BH/K@WW+R#@G'BDR
)@@G@@'=@@@IR90G<7C/@GW2/,0@HSC8@GZWC8K@@^/,0@I(RBB@@CR#W@@@;CK@@SO#@@@HRBG@@@DS
)@@G@@R;K@@^/,0@J>C8@GZXC8K@@^/,0@I(R#@@@B9?G@@@/,0@IYC/@@@*/,0@I[R#@@@BO;@@@]DT
)@@G@@9?G@@@/,0@IYC/@@@./,0@I[R#@@@BO;@@@^9?G@@@/,0@IYC/@@@//,0@I[R#@@@BO;@@@ADU
)@@G@@9?G@@@/,0@IYO90@@E/,0@H\R#@G9_'=@@@I8^0 BK/K@WW+@@@@@@C[U@@@;DK@@SH9K@@[DV
)@@G@@T9K@@AH9K@@[ @@@@KW9@@@/G9K@@[C[0@@EG90@@[C/@GW2/,0@HSC/@@@#/,0@I[RBE@@@DW
)@@G@@R;K@@^/,0@J>C/@@@:/,0@I[(@@GW\/K@ CQC@@GW\C8K@@ /,0@J>C/@@@[/,0@IE/K@ CSDX
)@@G@@C/@@@A/,0@IE/[@ C:H9@@@[/K@ CZC/@GW2/,0@HSC/@@@G/,0@I^R;K@@/R#@@@NG90@@EDY
)@@G@@/,0@I(/,0@H\R#@G'C'=@@@I8^@ CVC/@GW2/,0@HSC/@@@G/,0@I^R#K@@LR#@@@N/,0@I(DZ
)@@G@@/,0@H\R#@G'C'=@@@I/K@PB'@@@@@@R7@GW=:8@@@ /K@ C/:8@@@*/K@ C'9?@GW=/,0@IYEA
)@@G@@C/@@@*/,0@I[9?@GW&/,0@IYC/@@@./,0@I[9?@GW*/,0@IYR;@@@ :4@GW%/K@PC2C/@@@/EB
)@@G@@/,0@I[9?@GW%/,0@IY/K@PC2R#@G'D'=@@@IR;@@@[A#@CKB/K@ A7C/@GW2/,0@HSC8@GZ EC
)@@G@@C8K@@C/,0@I('^@ C2C8@GZBC8K@@N/,0@I(/,0@H\R#@G9_'=@@@IR;@@@[A#@CKB/K@ ^SED
)@@G@@C/@GW2/,0@HS'^@ C2C8@GZFC8K@@W/,0@I(/,0@H\R#@G9_'=@@@IR;@@@[A#@CKB/K@ ^SEE
)@@G@@C/@GW2/,0@HSC8@GZKC8K@@E/,0@I(R7@GX)R;K@@#/,0@JXC8@GZMC8K@@D/,0@I('^@ C2EF
)@@G@@/,0@H\R#@G9_'=@@@IR;@@@[A#@CKB/K@ ^SR\E@@@%8@@@[/K@ E]R#E@@]AB@GW?/K@ #>EG
)@@G@@R#E@@]R#KG'ER#)CKD'^@[U(A#)CKDRBKGW!RB!@@[:@)@@G/K@ EWR#!@@@;C)@@SO#K@@IEH
)@@G@@R#!@@@;C)@@SO#K@@I*WH@@@/K@ EC(@H@@@/K@ ERR#X@@@/K@ ECR#@G'F'=@@@IR;@@@[EI
)@@G@@A#@CKB/K@ A7ABKGW?A#U@@]R;@@@[A\E@@@/K@ #>@@@@@@@@@@@@@@@@@@      @@@@@@EJ
)@@G@@INVALID FIELD TYPE COMBINATION IN IF STATEMENT. @[CGWT@@@@@@@@@@@@@@@@@@EK
)@@G@@@@@@@@@@@GXX ]'@@@@&QGW8@@@@@@[[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      EL
)@@G@@                  @@@@@@@@[@@@            @@@@@@[@@@@@@@@@@@@@@@@@@@@@@@EM
)@@G@@            @@@@@@@K@@@@@B@@@@@@@@@@G:5G25@@K@AJ@@[CKL@@[@@@@@@@@@@@EGL+EN
)@@G@@@@@@@@@@@@@@****************************************************** USER EO
)@@G@@DID AN ABORT WITHIN A PERFORM ******PERFORM ERROR: PROC      NOT FOUND  EP
)@@G@@@[AGYC@[AGYI@[AGYOSYNTAX ERROR(S) IN PROC ******      SYNTAX ERROR      EQ
)@@G@@************ DUPLICATE LABEL VALUE  ************   LABEL VALUE > 9999   ER
)@@G@@******PERFORM NOT EXECUTED DUE TO SYNTAX ERROR. NO LINES FOUND IN PROC  ES
)@@G@@ILLEGAL COMMAND FOUND   MAXIMUM PERFORM DEPTH OF 50 EXCEEDED***FATAL ERRET
)@@G@@OR IN PROC   AT FOLLOWING LINE***     PERFORM CALL HISTORY (FIRST TO LASEU
)@@G@@T):   LIMIT OF 50 PERFORM ELEMENTS EXCEEDED.    ELEMENT      NOT FD SDF EV
)@@G@@FORMAT.      SYMBOLIC ELEMENT NOT FOUND.  I/O ERROR    READING    #---> EW
)@@G@@ENTERING PROC     #---> RETURNING TO PROC -->#   --   @@@@@@@@@@@@@@@@@@EX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ILLEGAL GOTO ADDRESS    @@[GW=EY
)@@G@@*[@@@@*SDFF*@@[GZY@@[CQ)@@[CKK@[QGW8@ CGX:@[CGX3@[CGX:@#@GX:@[BGYU@[^GY>EZ
)@@G@@@[AGY(@[BGY7@[GGW8@[BGY"      @[^G95@@@@@@@@@@@@@^'^68@@@___@@EGL:@@EGT%FA
)@@G@@@@XGT_@@HGV7)B5GL5)@FGT4)[VGUW@@@___@@@___@@@___@@@___@@@___@@@___@@@___FB
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___FC
)@@G@@R#W@@DR#?@@CR#.)@@A#/@@EA#W@@D @@@[] @@@[#;C0@@Y%80@@_/K@^7 P;K@@[A#W@@DFD
)@@G@@/KF@@[R#/@@E;K0@@S/C0^7DR3/@@E!^/@@BRB/@@BC G@@DG[@@@JC W@@AGDW@@^H[@@@LFE
)@@G@@/D@^8\N@K@@JM#!)@@A#W@@D*@@@[]/K@^8$R#/@@E;K0@@S/C0^7UR3/@@EPB/@@B/G0^77FF
)@@G@@C G@@DG[@@@J[ G@@DC W@@AGDW@@^H[@@@L/H@^77P#0@@K0@G@@#'=@@@AC[W@@ GDW@@BFG
)@@G@@[[W@@ C5W@@#/[K^7\%9K@@ /KF@@@(^G@@#/KF@@@C[W@@A[ W@@^;[K@@M[[W@@A[ W@@DFH
)@@G@@'=@@@[R#0@@K/K@^7WR#W@@DC5X@@@%9K@@(/KF@@]0@G@@E/K@^7_R;0@Z_/K@^8@R;0@@_FI
)@@G@@C[W@@E;LK@@S/DK^8^C1W@@E![K@@J/K@^8?! W@@B/K@^8?C[@@@LG1H@@@?@0@@K/K@^8QFJ
)@@G@@? G@@B/K@^8OC[K@@KH W@@BH1X@@@D@0@@LC G@@B/K@^8XR3.@@@/K@^8X!^/@@B/K@^8IFK
)@@G@@C[K@@KH[K@@JH1X@@@C[@@@JD@0@@L[1G@@E0@G@@E/K@^8+;D@@@A[5G@@EN0!@@@N@0@@JFL
)@@G@@O;K@@[A#W@@D/K@^7FR#0@[]P#0@[#/@0^77/G0^77/K@^7WR3.@@@O;0@@[/K@^7WP#0@@KFM
)@@G@@N@K@@JM#!)@@R#0@@K0@G@@#'=@@@AC[W@@ GDW@@B[[W@@ C5W@@#/[K^8"%9K@@ /KF@@@FN
)@@G@@(^G@@#/KF@@@C[W@@A[ W@@^;[K@@M[[W@@A[ W@@D'=@@@[R#W@@D/K@^7F @@@@HOBW@@AFO
)@@G@@ABW@@DR#W@@AABW@@^;@K@@M'=@@@#C[W@@ GDW@@B[[W@@ C5W@@#/[K^9Q%9K@@ /KF@@@FP
)@@G@@(^G@@#/KF@@@ABW@@^;@K@@MA#W@@A'=@@@[/KF@@[0@G@@#'=@@@AC[W@@ GDW@@B[[W@@ FQ
)@@G@@/KF@@@A]0GUHA@KGUIA@)GUJ'^@^'89?@GV79*@GT)C@@GV9'=@@@U;C@@@Y/^@^;1C@@GT+FR
)@@G@@/@@^;19?@GT+9*E@@^9?@GT=9*E@@]R@KGV'N@KGUM8KK^95/K@^'[9?E@@]9/[)@^/K@^93FS
)@@G@@9?E@@^9/[@@]/K@^93C@@GUMH@@@[[G@@GV;C@KGV/9*@GUK/K@^'0C@@GUMO;@@@[!8@@@UFT
)@@G@@'=@@@)[@@GUMH8@@@[T8@@@^R@K@@G9?E@@]9*[GUN9?E@@^9*[GUPC@@GUMG@@GV;C@KGV/FU
)@@G@@9*@GUK9*@GU C8@GU#'=@@@JC/@GT%/,0@HSC/@@@@/,0@I[C@@GV./,0@IWC/@@@[/,0@IEFV
)@@G@@9?@GUK/,0@IYC/@@@,/,0@I[9?E@@]/,0@IYC/@@@*/,0@I[9?E@@^/,0@IYC/@@@./,0@I[FW
)@@G@@C/@@@#/,0@IEC/@@@./,0@I[/,0@H\C8@GT3'=@@@J/K@^'0R]0GUHR@KGUIR@)GUJ9?@GUKFX
)@@G@@/KF@@@R]0GUH @@@@G/KF@@@@@@@@@C/@GT%/,0@HSC@E@@]:@@GV//K@^;^:@@GV"/K@^;]FY
)@@G@@9?E@@]/,0@IYC/@@@*/,0@I[9?E@@^/,0@IYC/@@@./,0@I[C/@@@ /,0@I[C/@@@./,0@I[FZ
)@@G@@/,0@H\9?@GUE9*@GT1C8@GT1'=@@@J/G@^;TC8@GT_'=@@@J9?@GUC9*@GT1C8@GT1'=@@@JGA
)@@G@@/K@O'8[@@GUGR#@GV_'=@@@IC/@GT%/,0@HSC@@GW@/,0@IWC/@@@ /,0@I[9?@GW[/,0@IYGB
)@@G@@C/@@@ /,0@I[C@@GUGC8K@@G/,0@JX/,0@H\R#@GW#'=@@@IC8@@@[[@@CKBC8@@[>[@@CKDGC
)@@G@@/K@^'5'=@@@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GD
)@@G@@@&GGT3@@@@@@[[@@@@@@@@@@@@@@@@@@@@@@ERROR:@@@@@@@@@@@@@@@@@@@FREE,A ED$0GE
)@@G@@00.  .      @FREE,A     @@@@@@@@@@@@ .    @USE ED$000,@ASG,A      @@@@@@GF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GG
)@@G@@@@@@@@@@@@@@@@@@@@ED$000      @@EGT)@@^GUJED$00       @@@USE*     @[HGT0GH
)@@G@@@@@FAC@@@REJECTED:@[GGT3@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AG^68@@@___@@GGL:@[NGM^GJ
)@@G@@@@FGN>)@HGL7)@IGNR@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___GK
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___GL
)@@G@@A]0GL49?@C^*9*@GMO(@@CKC/K@^7]N80@@#C@@CKC[@@GL,R')GL:/,0^7OR')GL\/,0[9SGM
)@@G@@*W@GL1/K@^7LC^@GL1H8@@@[N@0@@GR#KGL0C@H@@@[@@GL2G8K@@[[@KGL3R')GL2/,0^7OGN
)@@G@@/K@^7]/,0^8 R]0GL4/KF@@@C@E@@[[@@GL5C@G@@@[@@GL6C8@@@[(@@@@G'^@@@@AA0GNKGO
)@@G@@A@KGM'A@)GM;A@0GM/(@@GMI'^@^8O(@E@@@/K@^78 @@@@H(@@C^_/K@^7\R^KC^_&8K@@[GP
)@@G@@NCKC^_C@E@@[CWG@@@2W[)@@/K@^7\P@KGN>COL@@@R^XGM^'^@^'BR@KGL5C@@GL6[@[@@@GQ
)@@G@@R@KGM'R@)GM;R@0GM//K@WNKN8)@@E8K)^7;/K@^8[R]@@[](4CGM^/K@^79R^SGM^'^@^'BGR
)@@G@@/K@^79R@KGM'R@)GM;R@0GM//K@WNKAA0GNK(@@GMI/K@^.[A@KGM'N8)@@E8K)^8G/K@^8MGS
)@@G@@R]@@[](4CGM^/K@^8ER^SGM^'^@^'?/K@^8ER@KGM'/K@WNK@@@@@@C8@@@[[@@GMI(@@C^_GT
)@@G@@/K@^8-R^KC^_&8K@@[NCKC^_8KK^8Y/K@^8-COL)@@[4HGM^/K@^8WN8)@@E8K)^8=/K@O8OGU
)@@G@@R@0@[](4#GM^/K@^8+C@@@@#G@@@@G9?WGMO9*KGML9*KGL7C8@GMJ'=@@@J/C@^9AC/@GNLGV
)@@G@@/,0@HSC/@@@@/,0@I[C@@GN&/,0@IWC/@@@[/,0@IE9?@GML/,0@IY9?@GN$/,0@IYC/@@@[GW
)@@G@@/,0@IEC/@@@./,0@I[/,0@H\C8@GNR'=@@@J/C@^9AR')GNR/,0[VQ'=@@@)C@@C^%K8@@@[GX
)@@G@@[^NGM^G8@@X8[@@C^%'=@@@<R^NGM^ @@@@GR8)@@GR@0@@[&80@@[N8K@X8M@2)@@C@@GN(GY
)@@G@@'=@@@U 4[@[* 0[@[* @@@@HC8)@@JC8@@@[\4KGL.[4[@[*\4KGL.[0[@[* ^[@@TC8@@@[GZ
)@@G@@[@[@@BC8@@@][@[@@CC@@GN%[@[@@OC@@GN:[@[@@0C@@GN?[@[@[GC8@@I@[C[@@P[C[@@1HA
)@@G@@[C[@[H[C[@@^C8@@@C[0[@@#'=@@@?[@[@@S[@[@@4[@[@[K @[@[J @[@@R @[@[(O@@@@@HB
)@@G@@9?@GML9*[@@@C@@@@[G8@@[8C8K@I@[@[@@D[^W@@@G8@@I@[@[@@E[^W@@@(4[@[*/K@^8+HC
)@@G@@C@@GN!'=@@[Y/K@^8+@@@@@@R][@@D*@[@@AR][@@EC[@@[#G9@@@]C8@@I@H@[@@B?@@@@KHD
)@@G@@/K@^;1H9@@@[R]L@@BO]K@@C&'K@@[[DD@@@[ D)@@C@E@@@[@D)@@C^E@@[&;@@@[N@K@[#HE
)@@G@@M]W)@@P]K@@CAAL@@BCCC@@@G8@@@[[CC@@@C@[@@3G8@@@[[@[@@3N#0@@GC^1@@P?[@@@JHF
)@@G@@/K@^':[ [@@P[ [@@1/K@O'B@@@@@@R][@@D*@[@@AR][@@E*CC@@@'^@^;I0@[@@#'=@@@AHG
)@@G@@9?[@@@9*@GN 9*@GM_*4[@[*'^@^/#C@[@@C[@[@@6[@@GNEC@@@@[O;@@@0[^@GNDC8@GN HH
)@@G@@'=@@@#*4[@[*/K@^/DC@@@@[G8@@@O[^@GN#C8@GM_'=@@@#C@[@@2[@@GM.C@[@@3[@@GM"HI
)@@G@@'^@^/,/K@O'?@@@@@@*0[@[*'^@^;30@[@@#'=@@@A*4[@@#'^@^/>AA[@@^C@[@@C[@[@@ HJ
)@@G@@G8@@@)[@[@@CC@@@@['=@@@[C8@@@[[@[@@BH@[@@A[@[@@AC@[@@2G8@@@[[@[@@2*4[@[*HK
)@@G@@'^@^/GC@[@@D*@[@@AC@[@@E&;@@@[C8K@I@[@W)@@H8K@@[N@K@@H @@@@IC8K@@IM#H)@@HL
)@@G@@/K@O;I'^@^;I/K@^'C@@@@@@ 0[@[*C8@@@[G^[@@T[^[@@TC@@@@[O;@@@O[^@GM?9?[@@@HM
)@@G@@9*@GM*C8@GM*'=@@@#*4@GM:'=@@@)'^@^/#/K@O;3@@@@@@9?[@@@9*@GM!C8@GM!'=@@@#HN
)@@G@@/K@O/#'^@^/#'^@^/#/K@^;C@@@@@@C@[@[(G8@@@[[@[@[(%8@[IC/K@O/G0@[@@#'=@@@AHO
)@@G@@'^@^/# @[@[(C@@@@[O;@@[G[^@GM69?[@@@9*@GM2R;@GM2'=@@@#'^@^/#'^@^/#9?[@@@HP
)@@G@@9*@GL7R#@GN!'=@@[X'^@^;3/K@O/G@@@@@@(4[@[*'=@@@)C4[@@#%8@@@]'=@@@)C@@^/>HQ
)@@G@@[@@^/G/K@^/O@@@@@@C/@GNL/,0@HSC@@GM./,0@J=C8@GNFC8K@@D/,0@I(C@@GM"/,0@J=HR
)@@G@@C8@GNHC8K@@G/,0@I(9?@GM_/,0@IY/,0@H\R#@GN,'=@@@I/K@O/,R#@GN\'=@@@I/K@WNKHS
)@@G@@@@@@@@@@@GL!@_@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HT
)@@G@@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ASG,AHU
)@@G@@      D$FILE0         . D$FILE0     D$FILE1     D$FILE2     D$FILE3     HV
)@@G@@D$FILE4     D$FILE5     D$FILE6     D$FILE7     D$FILE8     D$FILE9     HW
)@@G@@D$FILE0     @@@@@@@C@@@@@@W@@@D$FILE0     @@@@@@@D@@@@@@[@@@D$FILE0     HX
)@@G@@@@@@@@@C@@@@@@W@@@NO RECORD UNLOADED@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@D$FILEHY
)@@G@@0     @@@@@@@C@@@@@@8GM_@@@@@@D$FILE0     @@@@@@@C@@@@@@WGN @@@@@@ BLOCKHZ
)@@G@@S,     RECORDS IN       @@@@@@@&IGNR@@@@@@[[@@@@@@@@@@@@@@@@@@@@@@@@[@@[IA
)@@G@@ASG,UP@@.,//POS/20@@HGL7HDRO@@EOFO@@EORO@@@@@GL7@]IGNR@[#GM7@@@@@@@@@@@@IB
)@@G@@@^?^68@@@___@]-GL:@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___IC
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___ID
)@@G@@@@@___@@@___@@@___@@@___AA0GM3N9K@@L8LK^6//K@^7@R')GM+O])@[ /,0^8W/K@^6'IE
)@@G@@(C@C^,/K@^8RC@@C^%G8@@B4[@@C^%'=@@@<C@@C^%G8@@@[[@@C @G8@@[=G8@@B4[@@C^%IF
)@@G@@'=@@@<R@KC @&8K@@[R@)C^5O8)@@W&8)@@A @@@@HCW]@@@[W[)@@CO])@@G8K@@[/^@^7NIG
)@@G@@[CKC @C@@C^%O;@@@[[@@C [O;@@I^[@@C^%'=@@@<R^KC^4*C@C^'R^KC^'R^)C [&8)@@#IH
)@@G@@ @@@@H @]@@@ @]@@[ @]@@]CW[@@@[W]@@@CO[@@A[S])@@O;K@@[CO[@@@OOL@@@/^@^7>II
)@@G@@[CKC [C@@GL.8#@^74/K@^8E[@@GL.T8@@@#R[@@@G9?^GL:9*@GL"C0^GL![*@GM#C?^GL!IJ
)@@G@@[O@GM#R^KC @OCKC @ @[@@@C@^GL!H8@@@][^[@@@CC@C @O;@@@[[C@C @[W@GM^R')GL"IK
)@@G@@/,0[P"/K@^71C@@GMP8#@^8H/K@WM3[@@GMPT8@@@#R[@@@G9?^GMA9*@GMQC@^GMC[W@GMWIL
)@@G@@R')GMQ/,0[P"/K@^8ER#@GM4'=@@@IC8@@[X[@@CKD/K@@NRAA0GO^R7%@@@R3'@@@?8)@@[IM
)@@G@@/K@^;O!8)@@P/K@^;OR'@@@[:8)@@IR'@@@[*@@GM7/K@^82R#@GOB'=@@@J/C@^80:80@@KIN
)@@G@@/K@WO^R#@GOC'=@@@J/G@^;MR;@@@[A#@GM7%80@@K/K@^9VR#YGM'A#KGNLC[@@@IR;@@@AIO
)@@G@@AF@GNOR;@GNJ'=@@[ :8)@@[/K@^9R*@@@@I/K@^;RR#)@@K*W@GNO/K@^9RR#KGNTA#KGM9IP
)@@G@@R#KGNRA#KGM8R#CWO K8@@@[ABKGM8OF@GM8A#CWO '=@@@<R#@GM8R#KGM99*@GNZR;@@@KIQ
)@@G@@A3@GNYRF@GM8/@@^9RR;@GNV'=@@@#'^@^')/K@^9S @@GM8R#KGM8')I^'./K@WO^:8)@@[IR
)@@G@@/K@^' :8)@@D/K@^'Q%80@@C/K@^;-')I^'*A#KGM8C[@@@IR;@GNJ'=@@[C/^)^;RR#)@@KIS
)@@G@@R#@GM8A#KGM99*@GNZR;@@@CA3@GNYRF@GM8/@@^92R;@GNV'=@@@#'^@^')R#@GM8A#@GNRIT
)@@G@@;G@@@6W8@@@W*@@@@HO;@@@[A#@GNSR;K@@AAFKGNOR#YGM'A#KGNL @@GNUR#KGM9A#KGNTIU
)@@G@@O#K@@GD8@GNJ'=@@[^/^)^;R/K@WO^%80@@D/K@^9ZA#)GM5R;K@@AAFKGNO @@@@HO;K@@[IV
)@@G@@R#HGM'A#@GNLR;@GNJ'=@@[A!8)@@]/K@^;R?8K@@O/K@^'FR#)GM5/K@^'S%80@@D/K@^9ZIW
)@@G@@ @@@@C:8)@@DR'@@@[9*)GM5'^@@@@9?)GM5R;0@@C/K@^9Z@@@@@@R')GNV*4@GNY/,0[V:IX
)@@G@@RB@GNY%C@GM8/,0[V:/K@O') @@@@HR#KC^,R#KC^\R#KC^0R#KC^1R#KC^2R#KC^3R#KC^4IY
)@@G@@R#KC^5R#KC^6R#KC^7R#KC^8R#KC^9R#KC^'R#KC^;R#KC^/R#KC^.R#KC^"R#KC^_R#K@@@IZ
)@@G@@R#K@@@/S@@@@A#KC^,A#KC^\A#KC^0A#KC^1A#KC^2A#KC^3A#KC^4A#KC^5A#KC^6A#KC^7JA
)@@G@@A#KC^8A#KC^9A#KC^'A#KC^;A#KC^/A#KC^.A#KC^"A#KC^_A#K@@@A#K@@@R')GN>/,0[VQJB
)@@G@@R#@GOD'=@@@I'=@@@)R#@GOE'=@@@I[@@^;ZC8@^;X'=@@[Q/K@^;)PFPPKTK@GGNJ@@@@@@JC
)@@G@@'=@@@)R#@GOF'=@@@I'=@@@)#           @IAC ASTATUS      @IACKDAREACODE    JD
)@@G@@@IACKEPAGE-NUM    @IACKFSLOT-NUM    @IACKGAREA-NAME   @JGCK^@@@@@A@@@@@@JE
)@@G@@@@@@@@                  @@#I@A@@[@@@@@@@@@RECORD-NAME @@@@@[DBP         JF
)@@G@@@@@@@]HEADER      @@@@@#MAN-CTL     @@@@@^RECORD-CODE @@@@@ @@@@@ @@@@@@JG
)@@G@@@@@@@@                  @@#P@@@@@@@@@@@@@@NO C$FILE AVAILABLE     IK@@@@JH
)@@G@@JK@@@@[K@@@@]K@@@@#K@@@@^K@@@@ K@@@@AK@@@@BK@@@@CK@@@@DK@@@@EK@@@@FK@@@@JI
)@@G@@GK@@@@HK@@@@KK@@@@LK@@@@@@@@@@@[^GMY@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XXXXXXJJ
)@@G@@C1    C2    C3    C4    C5    C6    C7    C8    C9    C10   C11   C12   JK
)@@G@@C13   C14   C15   C16   C17   C18   Z1    Z2    C$FILE                  JL
)@@G@@@@@@@@@@@@@@            @@@@@@@@@@@@@@@@@@@@@@@@C$FILE      @@@@@@@@@@@@JM
)@@G@@@@@@@@@@@@@@@ASG,AX  C$FILE. .      @ASG,UP  C$FILE.,///300 .     *** ERJN
)@@G@@ROR - INVALID SEGMENT NUMBER PASSED TO CF$AM ****** ERROR - C$FILE IS NOJO
)@@G@@T A PROGRAM FILE ***    *** ERROR - INVALID FUNCTION CODE PASSED TO CF$AJP
)@@G@@M *** @@@@@@@@@C^?@@@C^%@@^GN-@@ GN>@[DGN%@[CGN3@[DGN;@@@@@@@@@@@@@@@@@@JQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JR
)@@G@@@^F^68@@@___@@TGL:@@&GM)@@EGNV@@,GN7)@WGM^)@PGNA)@MGN>@@@___@@@___@@@___JS
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___JT
)@@G@@@@@___@@@___@@@___@@@___A]0GL\9?@C^*9*@GN/R')C C/,0^7NC@@GL0:@@C C/K@^7BJU
)@@G@@*@@GL:'^@^7DC@@@[#[@@GL?R')GL?/,0[6C/K@^6;R]0GL\/KF@@@@@@@@@ @@GL:*@@C CJV
)@@G@@/K@O7DC@@C D%@@GL1/K@O7DC@@C E[@@CKC/K@^6;(@@GL./K@^8TC@@GM,C@WGM\(CH@@@JW
)@@G@@'^@^7%C@@GM,R]GGM\C@KGM1G@K@@C&;K@@[&')@@[CCH)@@N@K@@GN@0@@GG8@@@[G@@GM1JX
)@@G@@[@@GM1M]!)@@CCC@@@H8@@@[[CC@@@/KF@@@@@@@@@C@@GNX/G@^80/^@^770@@GM6'=@@@AJY
)@@G@@C8@@@[[@@GM1H@@GM,[@@GM,C@@GOR[@@GNX/K@O7%'^@^7_C@@GNXH8@@@[[@@GNX/K@O7%JZ
)@@G@@C@@GOS[@E@@@/KF@@@@@@@@@0@@GM6'=@@@A*@@GL"'^@^'0C8@@@[H@@GM,R]GGM\C^S@@@KA
)@@G@@ @@@@GW8@@@W*@@@@HG8@@@[G@@GM2[@@GM2[@@GM8C@@GM,C@WGM\[^KGM7C8@@@[[@@GM1KB
)@@G@@H@@GM,[@@GM,C8@GM3'=@@@[/K@O7_C@@C^%K8@@@[[@KGM\G8K@I@[@KGM0G8@@I@G8@@I@KC
)@@G@@[@@C^%'=@@@<C8@@@[[@@GL.(@@C^_/K@^8\RA@C^_&'@@@[NCKC^_8KK^8:/K@^8\C8K@@EKD
)@@G@@PRS)@@[4HGL2/K@^8( @@GOQC@@GOQG8@@@[[@@GOQ:8@@@F/K@^7/(4GGL2/K@^80C^GGL2KE
)@@G@@G@@@@G9?WGN/9*KGN99*KGM39*KGM9 @@GM,C8@@@[[@@GM1C8@GN7'=@@@J/C@^9AR')GN7KF
)@@G@@/,0[VQ'=@@@)9?@GM99*@GM-C@@GOT'=@@@U @@GL" @@@@HC8)@@JC8@@@[\4KGM$[@@GL"KG
)@@G@@(@@GL"/K@^9OC@@GOU'=@@[YC8@GM9'=@@@#*4@GM/'=@@@)*@@GL"'^@^'Z'^@^90CC@GN@KH
)@@G@@[C@GM7C@@GM\ @G@@@C@@GM0 @G@@@ @@GM,C8@@@][@@GM2 4@GM6'^@^7_0@@GM6'=@@@AKI
)@@G@@*4@GM6'=@@@)C@@GNXH8@@@[[@@GNX'^@^7% @@GM,/K@^7N@@@@@@A]0GOP*@@GL"/K@^'BKJ
)@@G@@C/@C]7/,0@HSC@@GNX/,0@J=C8@GOKC8K@@D/,0@I(C@@GNY/,0@J=C8@GOMC8K@@G/,0@I(KK
)@@G@@9?@GM3/,0@IY/,0@H\R#@GOV'=@@@IR]0GOP/K@O90C/@C]7/,0@HS9?@GOW/,0@IYC/@@@[KL
)@@G@@/,0@IE9?@GM3/,0@IYC/@@@[/,0@IEC@@GOY/,0@IWC/@@@[/,0@IEC@@GOZ/,0@IWC/@@@[KM
)@@G@@/,0@IE9?@GO)/,0@IYC@@GM)C8K@@#/,0@J>/K@^']@@@@@@C@@GM)O;@@@[[@@GM)%^@GN^KN
)@@G@@'=@@@)C@@GM_%@@GO+'=@@@)C8@]G*[@@GNXC8@GM9'=@@@#C4@GM/:8@@@[/K@O'Z'=@@@)KO
)@@G@@@@@@@@C4@GM6/@@O'0%8@@@['=@@@)9?@GM39*@GL_C8@GL_'=@@@#*4@GM]'=@@@)C@@GM^KP
)@@G@@:@@GO</K@^80%@@GO='=@@@)C@@GOU'=@@[X/K@^9O@@@@@[@@@@@@@@@C C@@@@@@@@@@@@KQ
)@@G@@______@_@@@]@@@@@@@@@@@D@@@@@C@@@@@B@@@@@A@@@@@ @@@@@^@@@@@#@@@@@]@@@@@[KR
)@@G@@[@@@@@@@@@@@@@@@@@D$FILE0     @@@@@@@K@@@@@@WGM^@@@@@@@@@@@@@@@@@@@@@@@@KS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KT
)@@G@@@@@@@@@@@@@[@@@@@]D$FILE0     @@@@@@@K@@@@@I@@@@@@@@@]D$FILE0     @@@@@@KU
)@@G@@@K@@@@@@8GM_@@@@@@HDRO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EOFO@@@@@@@@KV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ASG,A      D$FILE0     KW
)@@G@@ .    D$FILE0     D$FILE1     D$FILE2     D$FILE3     D$FILE4     D$FILEKX
)@@G@@5     D$FILE6     D$FILE7     D$FILE8     D$FILE9      BLOCKS,     RECORKY
)@@G@@DS IN       @@@@@@@@@@@@_____"______@@HGM-@@@GM-@]IC].@@@@@READING@@FROMKZ
)@@G@@@@TAPE@@@REEL-NO.:HDRO@@EOFO@@EORO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LA
)@@G@@@'L@C@#4G[]?)@V[]L-LC^68@@@___@]-C@@@@EC]7@@EC#F@@"C^E@@ECKA@[SCW0@A=CYYLB
)@@G@@@];C>I@[FC*U@@8C(;@@UC:W@@(C?@)@QC]-)@EC#[)@5C#P)E"C C)G)CKK)@QCYC)@GC>]LC
)@@G@@)@LC*D)@QC(>)@(C%3)@EC:6[@@C]WC8W@@@KCKC]WH8)@@[&;K@CQC@@@@H'=@@@HG8W@@@LD
)@@G@@ @H@@@>@@@F%/K@@CN>@@@F:/KF@@[C8H@@@?8I@@@/K@@C C@@@F(C8K@@#/KF@@@C@@@FYLE
)@@G@@C8K@@[/KF@@@C@@@F=C8K@@]/KF@@@L8@@@[C@)C]WG8)@@[*@I@@@?CY@@@/K@@C-G),@@@LF
)@@G@@/K@@CV%CI@@@/KF@@@C)"@@@H80@@[T80@@AG="@@@9?I@@[?80@@BC@K@F?/KF@@[N8W@@@LG
)@@G@@C^@C]WG8@@@[C9K@@[ @@C]%N8)@@@(@G@@@/K@@DQ(4G@@@/K@@DA%1W@@@/K@@DQC?W@@@LH
)@@G@@!8K@@A/K@@DD%(KC]% @@C]([(KC]%9??@@[C-G@@@:9@@@[C@0@F?')H@EAH9@@@[T9@@@ALI
)@@G@@G>G@@@')H@EIG)G@@@G8@@@[/K@@C1:9K@@[/K@@DIC*?@@@:8)@@.N8)@@[%[K@[[/K@@DALJ
)@@G@@/K@@C.%@)@F?[5@C](:@)@F?[-KC](/K@@DA(@@@[]:(KC]%/K@@DV[(KC]% @@C](:[K@[[LK
)@@G@@/K@@D<G9K@@[*@G@@@/K@@C0 @@C]( @@C]%/KF@@@:(KC]% *@C]%9?KC](98V@@@C8@@@-LL
)@@G@@[=@C]%(?@C]%/KF@@[C@@C]6D8)@@@C80@@@C!@C]%8^@@D61@@@@I!8)@[@C80@@E[))C]%LM
)@@G@@[=0C]%/KF@@[C8K@@@;=@@@A?8K@@'?8K@@0/K@@E[(@@@@JC80@[@H8K@@0T8)@@EG8!@@@LN
)@@G@@/K@@D\/^0@D2%8K@@+:8K@@-C8.@@@/@0@D2/K@@D\9*)C]:9*)C]![@)C]\[@)C]0[@)C]1LO
)@@G@@9*)C]29*)C]4[@)C]6/K@@DL[1@C]([!@C]([(@C]([>@C]([5@C]%[1@C]%[!@C]%C80@@FLP
)@@G@@+8K@@_:8)@@ ;^@@@A8#0@ES9*@C]YC@@@F!C@K@F,C8)@@BC@0@F?[@"C]-8#)@E-N4KC](LQ
)@@G@@9!@C]:/\)@FJC9K@@*(4@C](*)@C](')H)@@N0KC](9!@C]!*@@@[[/K@@E0C[@@F\N8K@@^LR
)@@G@@/\)@FJN?KC]((@@@[[/K@@E'C9K@@(')H)@@C[@C]\/\)@FJC9K@@)')H)@@(*@C](*=@C](LS
)@@G@@/K@@F@C@@@F0'=@@@J/KF@@@C9K@@/')H)@@N*KC](C[@C]0/\)@FJN=KC]((@@@[[/K@@E.LT
)@@G@@C9K@@/')H)@@C[@C]1/\)@FJ/K@@E.;>@@@A')H)@@8KK@FH/KI@@@[5W@@@[1W@@@[!W@@@LU
)@@G@@[(W@@@[>W@@@/\0@FR[-W)@@Q;K@FL/KJ@@@PROCESSOR CALL ERROR    @[^@FUABNORMLV
)@@G@@AL RETURN FROM READ$    @[ @FZTOO MANY SPECIFICATIONS @[^@F>]@@@@@[@@@@@LW
)@@G@@      @@[C]-@@[@FLTPF$  @@GC]XC8G@@@;G@@@=W8@@8KC8?@@@C8H@@@/\K@G]C8)@@:LX
)@@G@@')])H7;G@@@=W8@@@/C8?@@@C8H@@@/\K@G]C8)@@:')])H7C8?@@@C8V@@@;G)@@=W8)@@ELY
)@@G@@G8)@@0')])H7C8\@@0')])H7/KH@@@;C@@@M+8@_@@;GK@@0/\K@G]C8)@@/')])H7+8@@_@LZ
)@@G@@;GK@@%/\K@G]C8)@@/')])H7+8@@@_C8!@[@/\K@G]/KF@@@;C@@@M+8@@_@;GK@@%/\K@G]MA
)@@G@@+8@_@@;CK@@FC@!@G"C80@@^;@)@@Y')])H78#0@G)+8@@@_C8!@[@/\K@G]/KF@@@AE1@@#MB
)@@G@@;C@@@M[@@@[[+8@_@@;CK@@F9?H@G"/,0@IYC8)@@ ')])H7C@K@[[+8K@_@;G)@@%W8)@@EMC
)@@G@@/@)@G7G8)@@0')])H7C8\@@0')])H7C8)@@,')])H7+8K@@_C8I@Y?C8K@@ RE1@@#/K@@J>MD
)@@G@@ JAN UARY    FEB RUARY   MAR CH      APR IL      MAY         JUN E      ME
)@@G@@ JUL Y       AUG UST     SEP TEMBER  OCT OBER    NOV EMBER   DEC EMBER  MF
)@@G@@A^W@@#A@?@@^A@/@@ Q8W@@@N?L@@@R@)@KBR^1@@@&80@@[C8@@KCM@/)@@Q^1@@@ ?[@@]MG
)@@G@@/KF@@@A^W@@#A@?@@^A@/@@ Q8W@@@&8)@@[Q4-@@[&80@@[Q01@@[O^1@@@/KF@@@A4-@@[MH
)@@G@@P^1@@@A01@@[C8[@@@Q^L@@#R@?@@^R@/@@ /KF@@@[4<@@@[0<@@@[?<@@@[*<@@@[=<@@@MI
)@@G@@/?)@H.[)<)@@A^-@@]Q8)@@@/K[K@]C8?@@@')])H7/KF@@@;G@@@=W8@@@AG^[@@@Q8!@@@MJ
)@@G@@Q8/@@@/KF@@@G8]@@@C8N@@@H^L@@@T8K@@AG8H@@@/K@@I^N?L@@@Q^1@@@C8@@KCM@/)@@MK
)@@G@@Q8)@@@Q^1@@@/KF@@@C8#@@@H^[@@@T8@@@AG8]@@@/KF@@@C80@@ /K@@IZC80@@F;^@@[]ML
)@@G@@+8K@@_%8)@@ :8)@@@/K@@I>')])H78#0@IZ/KF@@@&"0__"/K@@I%&'0@@@C8.@@@;G@@@MMM
)@@G@@;CK@@M&;@@@[&;K@@[8#0@I1/KF@@@')G)J 0@@@@F%8)@@@')])H7/K@@I\C?[@@[C^L@@[MN
)@@G@@/K@@I;;G@@@M;CK@@M&;@@@[&;K@@[')G)J :0-@@@/K@@J]')])H7/K@@I.[?[@@[[^L@@[MO
)@@G@@/KF@@@C4!@@@C0!@@@C?!@@@C*!@@@C=!@@@/\@@JFC)!)@@[^[@@]Q;@@@@/K[K@]C80@@@MP
)@@G@@;G@@@#/@@@JRG80@@[;G@@@#/^@@JMC8)@@0')])H7C8)@@@;=K@@#G8)@@0')])H78#0@JRMQ
)@@G@@/KF@@@C8.@@@T8K@@#;GH@@@H80@@[/K@@JR&"0__"/K@@J&C8K@@@&'0@@@N8X@@@C80@@@MR
)@@G@@;O@@@=W8@@@EE/X@@@;?)@@AG8.@@08KK@J,/^@@J*/C@@J50@@@@F/K@@J5;?)@@AG80@@-MS
)@@G@@8KK@J5C@K@@I0@@@@F1@@@@G/K@@J/R;)@@-')])H78KK@J/C8)@@ 0@@@@FC8)@@0/K@@K[MT
)@@G@@')])H78KK@K@C@)@@J')])H7;GK@@A/^)@K#/KF@@@@@[@@@      @@@@@@9*@@K?RBK@KDMU
)@@G@@RFH@@[AB@@KQRBH@@[;*@@@]1@GC@@/K@@KPRBH@@[R;K@KP'=@@[D9?@@K?/K@@@@@@@@@@MV
)@@G@@9*@@K?A#)@K,RB@KKR;*@@@]1@GC@@/K@@K-RB@KKRR;K@K-'=@@[DRB@@KRP;@@@]RBW@@@MW
)@@G@@R#)@K\A#?@@@RFG@@]ABW@@@O;@@@[AB@@KQR#)@K,/K@@KP@@@@@@@@@@@@@@@@@@'^@@KDMX
)@@G@@C/@C]7/,0@HSC8@C#GC8K@@X/,0@I('=@@@?/,0@G$C/@@@,/,0@I['=@@@?/,0@F1C/@@@(MY
)@@G@@/,0@I[C@@C#F/,0@IWC/@@@)/,0@I[C/@@@-/,0@I[/,0@H\R#@CXJ'=@@@IC@@CXK/,0@C@MZ
)@@G@@/K@@L+'=@@@3C8K@@[N8K@@U;*@@@DR@KCXL8KK@LK/K@@LP;*@@@[0@@@@G[@L@@@O8K@@[NA
)@@G@@/K@@LI(@@C^-/K@@LVC@@C^%G8@[X0[@@C^%[@@C^:*@@C^X'^@[]7C8@@@[/,0@C:/K@@L+NB
)@@G@@'^@@L$/K@@MKR#@CXM'=@@@IC8@@[V[@@CKD/K@@NR@@@@@@C/@C]7/,0@HSC/@@@@/,0@I[NC
)@@G@@C@@CXN/,0@IWC/@@@[/,0@IE9?@C^*/,0@IYC/@@@,/,0@I[(4@C](/K@@L;9?@C]:/,0@IYND
)@@G@@C/@@@*/,0@I[/K@@L_()@C](/K@@L_C/@@@*/,0@I[(0@C](/K@@M^9?@C]!/,0@IY/K@@MCNE
)@@G@@(4@C]%'=@@@)9?@C]2/,0@IYC/@@@[/,0@IEC/@@@./,0@I[/,0@H\C8@C].'=@@@J/K@KL$NF
)@@G@@C@@CXO'=@@@FC8@@MM'=@@[&[@@CY^C@@CXP'=@@[[C@@CXQ'=@@@4C8K@@[C0@C#(%8@@@^NG
)@@G@@[@KC^T/,0C]^/,0C[)'^@@M='=@@@D@@@@@@@@@@@@/K@@M8@@@@@@C/@C]7/,0@HSC8@C #NH
)@@G@@C8K@@J/,0@I(*@@C^V/K@@M\C@@CXR/,0@IW/K@@M19?@CXS/,0@IYC/@@@[/,0@IEC@@CXUNI
)@@G@@/,0@IW/,0@H\R#@CXJ'=@@@I(@@CKB/K@@M.*@@C^T/K@@NR @@CKBC/@C]7/,0@HSC@@C ANJ
)@@G@@/,0@J=C/@@@:/,0@I[C8@CKHC8K@@[/,0@I(/,0@IR;G@@@=W8@@@A*@@@@HG8@@@[[?@CKINK
)@@G@@/,0@H\R')CKI/,0[WB*@@CKK/K@@N?/K@@NMR#@CXV'=@@@IC8@@[W[@@CKD/K@@N'C/@C]7NL
)@@G@@/,0@HSC8@CW0C8K@@W/,0@I((@@CKD/K@@N<9?@CXW/,0@IYC@@CKDC8K@@^/,0@J>C/@@@[NM
)@@G@@/,0@IEC8@CW0C8K@@#/,0@I(/,0@H\R#@CXJ'=@@@I'=@@@D/,0]S(@@@CKK@@@CQ)C4@CQ-NN
)@@G@@C^GCW8R')CQ)/,/@@@/K@@M8'=@@@)/KF@@@R#@CXY'=@@@IC8@@[U[@@CKDC8@@@[[@@CKBNO
)@@G@@/K@@M8/K@[M'/,0C][/K@@M8A])CKA/,0C[8 @@CKA/K@@M8C8@@II'=@@[&[@@CY0'=@@@?NP
)@@G@@[@@CY1C@@CY4'=@@@4C@@CYVC@KCYH9*@CY2C@@CY5'=@@[['=@@@R[@@CY\'^@@QUC/@CYYNQ
)@@G@@/,0@HSC/@@@]/,0@IEC/@@@%/,0@I[C/@@@[/,0@IEC@KC^? @@@@GW8@@C@*@@@@HG8@@@[NR
)@@G@@C@)C^% @@@@HH@)CY6W8K@C@*@@@@IG8K@@[G@@@@HT8@@C@;G@@@=W8@@J**@@@@HG8@@@[NS
)@@G@@/,0@J=C/@@@K/,0@I[C/@@@[/,0@IEC@@CY7/,0@IWC/@@@[/,0@IEC@@CY8/,0@IWC/@@@[NT
)@@G@@/,0@IEC@@CY9/,0@IWC@@C A/,0@J=C/@@@(/,0@I[C@@DO=/,0@J=C/@@@)/,0@I[/,0@H\NU
)@@G@@'^@@QLC/@CYY/,0@HSC/@@@]/,0@IEC/@@@%/,0@I[C/@@@[/,0@IE9?@CY'/,0@IY'=@@@?NV
)@@G@@H@@CY1/,0@F1C/@@@,/,0@I[C/@@@[/,0@IEC@@CY//,0@IWC@@CY4'=@@@4C@@CYVH@@CY2NW
)@@G@@;G@@@=W8@@@ /,0@J=C/@@@[/,0@IEC@@CY./,0@IWC/@@@[/,0@IEC@@CY"/,0@IWC@@CYHNX
)@@G@@H@@CY3/,0@J=/,0@H\'^@@QL(@@CKA/K@@OKC/@CYY/,0@HSC/@@@]/,0@IEC/@@@%/,0@I[NY
)@@G@@C/@@@[/,0@IE9?@CY_/,0@IYC/@@@[/,0@IE9?@GW=/,0@IYC/@@@*/,0@I[9?@GW&/,0@IYNZ
)@@G@@C/@@@./,0@I[9?@GW*/,0@IYC@@GW%:@@CZ[/K@@QFC/@@@//,0@I[9?@GW%/,0@IY/,0@H\OA
)@@G@@'^@@QL/K@@OK@@@@@@@@@@@@'=@@@D@@@@@@R#@CZ]'=@@@IC0@CYX:8@@@^/K@KQLR;@CY?OB
)@@G@@'=@@@C/K@KQL@@@@@@N[KCX'R[KCZ#8LK@QZ/K@@Q39? )@#9*@CX/9*@CY[C8@CX_'=@@@JOC
)@@G@@/G@@QX(C @@]/K@@Q%C@@CY^'=@@@V/K@@Q0R^P@@]C@[@@@G8@@@[;G@@@=W8@@@][@L@@@OD
)@@G@@C8@CX;'=@@@J/K@@QXN@KCX$R[KCZ^C@@CY\;C@@@G2@ )@]/K@KQU(C @@[/K@@Q"C@@CY^OE
)@@G@@'=@@@V/K@KQUR^P@@[C@[@@@G8@@@[;G@@@=W8@@@][@L@@@/K@KQU @@CKDAA0CZGAA)CZEOF
)@@G@@C?E@@@;G@@@#;CK@@-[@KCZH[)@C)</KHCZ (@E@@]/K@@+F/K@SZG @@CZM(CE@@]/K@@+LOG
)@@G@@C*E@@]+8@@@)/@K@R8:8@@@=/K@@R<+8@@@#/@K@R8[@@CZMCCE@@][@@CZNCCE@@#[@@CZQOH
)@@G@@/@@@+LO')@@]/K@@R_[@@CZMA])CZLRCU@@]C8@@@P%*[@@@'=@@@)CW[@@[R@)C=@N@KCZKOI
)@@G@@2W])@@/K@@+T[@@C)T(CE@@#/K@@+XRCU@@#C8@@@]A@KCZN%*[@@@/K@@+XO')@@]/K@@R_OJ
)@@G@@CCE@@][@@CZN'^@@YK[@@CZP/G@SZGO')@@[O])@[^A])CZE *@C)<'^@@V(C@@C)<R@KC=[OK
)@@G@@N@KCZ<2^[)@[/K@@+L(4[@@@/K@@U^C@@C)+[@@CZRR])CZEO')@@[O])@[^'^@@V(C@@C)<OL
)@@G@@R@KC=[N@KCZ<2^[)@[/K@@+L(4[@@@/K@@+L @@@@GC@KC)+ @@@@IC@0CZRR)KC)</K[@SWOM
)@@G@@'=@@@)/K@@S-/K@@S>/K@@S%/K@@S\9)@@@I/^@@+H[@KC)+/K@@U^H@0@@H0@@@@J @@@@JON
)@@G@@[@0C)+/K@@U^(@@@@H/K@@+JW@)@@H[@)C)+/K@@U^S@0@@H/^0@+H[[@C)+/K@@U^C8@@@]OO
)@@G@@%=@C)</K@@+LR@KCZNC*[@@@%8@@@[/K@@+,CW[@@[[@@CZ(C?[@@@[@@CZOR@KCZQC*[@@@OP
)@@G@@%8@@@]/K@@+0CW[@@[G^@C @H8@@@[(WG@@@'=@@@)CWG@@@[@@CZ*C@@CZ(C@KCZ*C?-@@@OQ
)@@G@@'^@@,@/GK@W>C[K@@G;DK@@MC[)CZM;()@@Y;!K@@AR@KC=]N8K@@C2PL)@[/K@@+RC@@C)+OR
)@@G@@RCL@@@')[CZ=(@@C)+'^@@+NC@@CZQ[@@CZN/K@@U"@@@@@@C?@CZ6:8@@@D/K@@T&C@@CZHOS
)@@G@@%8@@@[/K@@<AR^0C @CC@C @O@0@@GG8@@@[[C@C @[W[@@[ @#@@@C=@CZ6[*[@@@C?KCZ6OT
)@@G@@C@@C))%8K@@D[O[@@@C@@C^%G8@@@[[^#@@@CO[@@@C?KCZ6%8K@@D/K@@T;TO[@@];G@@@=OU
)@@G@@W8@@@A*@@@@HG8@@@[G8@@@]G@@C^%[@@C^%'=@@@</K@KTZC@@CZM:8@@@=/K@@U,/^@@S3OV
)@@G@@R@KCZNC*[@@@C=KC)<;*K@@Y;?@@@AR@)C=#N@KC)S2S])@[/K@@+LC@]@@@[@@CZ6*=@CZ6OW
)@@G@@'^@@TZR])CZNC@@CZP'^@[H-/GK@<^9*@CZ29*)CZ4(4@CZ6/K@@UZ'^@@$Y[@@CZ;R@)CZ3OX
)@@G@@C]@CZ4N]@CZ2C@KCZ5R@KC)YC[0C)-N[0C))R)0CZ6R@3CZ7'^#@@@*4@CZ6'^@@Y8*0@CZ6OY
)@@G@@/K@@U"/K@SZGR])CZLO')@@]'^@[JZ/GK@+<C=@C)<%8@@@]/K@@+LC8@@@^:8@C)T/K@@U;OZ
)@@G@@C^H@@@%^@C)+/K@@<FC@@C)+[@H@@@/K@@U"R@KCZNCW[@@[C4KCZ6%8K@@]/K@@VGCC[@@[PA
)@@G@@;G@@@LC^)C^;(@@@@GC^)C^/;CK@@NG@K@@IR@K@@HCW[@@[OB@C @P;@@@[(^G@@@'=@@@)PB
)@@G@@R G@@@ @@C BC@^@@[(@@@@G'=@@@)[@@CZ. @@CZ/R')CZ//,0[\R*W@CZ"/K@@+?C@@CZ/PC
)@@G@@[@@C)@C@^@@@[@@C)]C@@@@^O;@@@[[@@C)[ W@C)]R')C)@/,0]BS*W@C)]'=@@@) @@C BPD
)@@G@@/K@SZG@@@@@@ @@C)W/K@@V,@@@@@@A])C)W(CE@@]/K@@XNC*E@@]+8@@@)/@K@W.:8@@@=PE
)@@G@@/K@@W1+8@@@#/@K@W.[*@C)<RCU@@]C*[@@@%8@@@[/K@@+,CW[@@[[@@C)UC?-@@@RCU@@#PF
)@@G@@C*[@@@%8@@@]/K@@+0%?[@@@C?-@@@CW[@@[G^@C @H8@@@[CWG@@@[@@C)V(@@@@G'=@@@)PG
)@@G@@C@@C)UC@KC)V'^@@,@/GK@W>C8@@@A[@@C))C8@C)+[@@C)YC8@@@[[@@C)-C*@C)<H8@@@-PH
)@@G@@')G@W+C8@@@][=@C)<N9@@@[(@@C)+'^@@+2 @@CZF*@@C)W/K@KV?/K@KV([@)C)+[@0C)+PI
)@@G@@[[@C)+;*K@@[;CK@@N/KH@W*'=@@@)'=@@@)/K@@+6'=@@@)'=@@@)'=@@@)/K@@+8/K@@+'PJ
)@@G@@'=@@@)[*@C)<O')@@]C#0C)W[#0C)X'^@[JZC#0C)X[#0C)W/GK@+<H9@@@[N[@@@KP')@@]PK
)@@G@@/K@@X]'^@@YK[@@C)ZRE%@@]'^@[H-/GK@<^[@@C))[@KC)Y[@)C)-[=0C)<:80@@[/K@@WYPL
)@@G@@'^@@$Y[@@C)+C8@@@][=@C)<C8@@@A[@@C))C8@C)+[@@C)YC8@@@[[@@C)-/K@@WYC*E@@]PM
)@@G@@/@@@X\C)E@@]C@K@@EG8K@@#C8)@@[C80@@][=0C)<C')@@0:6!@@@/K@@X)'^@@$Y/K@@X-PN
)@@G@@'^@@X9[@@C)+C8@@@A[@@C))C8@C)+[@@C)YC8@@@[[@@C)-C)E@@];G@@@=W8@@@A*@@@@HPO
)@@G@@G8@@@[N[@@@G/K@@WYC)E@@][@@C))C8@@@[[@@C)-C@@@@EG8@@@#[@@C)YC8@@@[[=@C)<PP
)@@G@@/K@@X*@@@@@@L8)@@[N@K@@G @@@@GR@K@@H&8K@@[8KK@Y[/K@KX9 @@@@IW8)@@A')J@YEPQ
)@@G@@;@K@@#;?@@@#G80@@[%8K@@0/K@@+//K@@X_C4L@@@C0L@@@C?L@@@C*L@@@C=L@@@C)L)@@PR
)@@G@@@@@@@@A])C)> @@@[^(^E@@]/K@@Y5C*E@@]+8@@@)/@K@Y%C)E@@]C@K@@EG8K@@#C8)@@[PS
)@@G@@C80@@]C')@@0:6!@@@/K@@Y+'^@@$Y/K@@Y<'^@@X9C-U@@] @@@@KW9@@@A*@@@@LG9@@@[PT
)@@G@@N[@@@K/K@@Y2RA%@@] @@@@G'^@[H-/GK@+":80@@[/K@@<@'^@@$Y/K@@Y2R])C)>/@@@<]PU
)@@G@@/K@KYKR])C)> @@@@G/K@KYK@@@@@@C4@CZ6%8@@@[/K@KY8R@KCZNCC[@@]/@@KY8N8K@@[PV
)@@G@@(@@@@G'=@@@)+@@C=^R[@@@H+@@C= C^)C^/*@@@@HC^)C^;O[@@@I8KK@ZF/K@@ZHC^^@@]PW
)@@G@@/K@@Z@CW[@@[%W^@@['=@@@)R@K@@^C8@@@DC8K@@H,*[@@@'=@@@)CW[@@]H8@@@[COL@@]PX
)@@G@@,@@C)+/K@@<DCW[@@@T8@@@AG?[@@[COL@@@T@KC)+G@K@@GH8K@@[ @@@@GW8@@@A*@@@@HPY
)@@G@@G8@@@[CWL@@[G^KC @H8K@@[(^H@@@'=@@@)R H@@@H^^@@][@@C)&/@@KY8C^^@@@G@@C)&PZ
)@@G@@[^^@@@C^^@@]K@@C)&[^O@@]G8K@@[:^O@@@/K@KY8R[K@@GO[K@@^O9K@@]N^P@@@0@@C)&QA
)@@G@@/K@@Z_O P@@@P9K@@[R[)@@ O[)C)&&9K@@[1@@C)&&9K__"&9)@@[1@@C)&&9)__"M[>)@@QB
)@@G@@/K@KY8@@@@@@&9K@@[C5XC)$8LK@)HL8@@@[;GK@@=W8K@@A')IC)?G8@@@[8LK@)H/K@K)DQC
)@@G@@@@@@@@N[K@[CC@@@[B!@@@[C/K@@)YR[K@@]C@@@@ON[K@[C'^@@)DN[K@[B&8K@@[&8)@@[QD
)@@G@@8LK@)+/K@K)OC@@@@NH8@@@[;G@@@=W8@@@A')HC)2G90@@[C@@@@OH8@@@[;G@@@=W8@@@AQE
)@@G@@')HC)8G'@@@[/K@@))@@@@@@&8K@@[ @@@@P @@@@Q @@@@R8L0@)5C@@@@NH8@@@[G90@@[QF
)@@G@@;G@@@=W8@@@A;,K@@A')HC)"C])@@R8L0@)5W]KC=A @@@[BG]@@[CH'@@@[C@@@@OH8@@@[QG
)@@G@@;G@@@=W8@@@AO@)@@GC@@@[CH8@@@E/@@@-H/G@@-HN'@@@EN[0@@G&8)__"8M@@-K/K@@-UQH
)@@G@@C@@@@OH8@@@[H'@@@[;G@@@=W8@@@A;I)@@=W')@@E)'0@@0')HC-^/K@@-I(@@@[B/K@K)\QI
)@@G@@N]@@[B @@@[BC])@@P/K@@-I@@@@@@N[K@[CC@@@[B!@@@[C/K@@-%R[K@@]C@@@@ON[K@[CQJ
)@@G@@'^@@)DN[K@[BG[0@[BG]@@[CH90@@[H'@@@[C@@@@NH8@@@[;G@@@=W8@@@AO@K@@GC@@@@OQK
)@@G@@H8@@@[;G@@@=W8@@@AO@)@@G&8K__"&8)__"8LK@-;C@@@@NH8@@@[;G@@@=W8@@@A')HC-EQL
)@@G@@H90@@[C@@@@OH8@@@[;G@@@=W8@@@A')HC-KH'@@@[8LK@-;/K@K-)C8@@@[/K@@<HC8@@@]QM
)@@G@@/K@@<HC8@@@#/K@@<HC8@@@^/K@@<HC8@@@ /K@@<H@@@@@@C@@C=B'=@@@I/K@K+NC8@@@BQN
)@@G@@/K@@<HC8@@@C/K@@<HC8@@@D/K@@<HC8@@@E/K@@<HC8@@@F/K@@<HC8@@@G/K@@<H;*K@@[QO
)@@G@@;CK@@N/KH@+&'=@@@)/K@@+V/K@@+X/K@@+Z/K@@+-/K@SZGC8@@@H/K@@<HC8@@@I/K@@<HQP
)@@G@@C8@@@J/K@@<H@@@@@@C@@C=C'=@@@I/K@K+2C8@@@L/K@@<HC8@@@M/K@@<HC8@@@N/K@@<HQQ
)@@G@@C8@@@O/K@@<HC8@@@P/K@@<HC8@@@Q/K@@<HC8@@@R/K@@<H;CK@@M:@KC=D/K@@<]C8@@@SQR
)@@G@@/K@@<HC8@@@T/K@@<HC8@@@U/K@@<H @@C BCWWC<>[@KCKDC?WC<>[@KCKBR^?C<>C@]@@@QS
)@@G@@*@@CKA*@@CKB'=@@@I(@@C)W/K@SZGR]0CZF @@CZF/KF@@@ @@CKDAA0C=_ @@C>Q @@C=,QT
)@@G@@C?E@@@C@GC=-/KG@@@'=@@@)'^@@<0'^@@>-/K@S=_'^@@<0'^@@>-/K@@<*'^@@<0'^@@>5QU
)@@G@@/K@S=_'^@@<0'^@@>5/K@@<,@@@@@@C8@C C[@@@>HC@@@@EO;@@@][@@@>I/K@K<0C8@@@[QV
)@@G@@[@@C=!/K@@=@C8@@@^[@@C=!/K@@=@C8@@@#[@@C=!/K@@=@'^@@>KR^KC=0*@[@@@/K@@=@QW
)@@G@@C@@C=!%W[@@[/K@@=@R')C=9(@@C^F/,0@0_/K@S=_@@@@@@G^@C @H8@@@[R[K@@G(^ @@@QX
)@@G@@'^@@=TR^P@@@&8K@@[R@)C$EC^@C CG8@@@[N@K@@GM@M)@@/K@K=F@@@@@@C@@C^%G8@@@[QY
)@@G@@[^ @@@CW @@@*C@C^"'^@@=$*C@C^8'^@@=2(C@C^2'=@@@)'^@@=/'=@@@)/K@@>A@@@@@@QZ
)@@G@@R^KC^":W[@@@/K@@=\(O[@@@/K@K=$OOL@@@/K@@=(CW[@@[GS[@@[/K@@>A@@@@@@R^KC^8RA
)@@G@@:W[@@@/K@@='(O[@@@/K@K=2OOL@@@/K@@=4CW[@@[/K@@>A@@@@@@R^KC^2:W[@@@/K@@>^RB
)@@G@@(O[@@@/K@K=/OOL@@@/K@@="CW[@@[/K@@>AG@@C^%G8@@@ [@@C^%'=@@@</K@K=T@@@@@@RC
)@@G@@/,0]4=@@@@@@@@@@@@/K@K>F@@@@@@C@@C A!@@DO=/K@@>WG8@@@[[@@C A[@@C=\R')C=\RD
)@@G@@/,0][V*W@C=1'=@@@)/K@K>K @@C A'^@[NL*@@C=,/K@S=_/K@@(0@@@@@@'^@@>KC^@C=0RE
)@@G@@H8@@@[[@@@>HC@W@@@[@KC=2C^KC=1T8K@@A[@W@@@'^@@>FC@K@>HC@)C=2[@!@@@/@@@>+RF
)@@G@@[@KC=,R')C=3(@@C^F/,0@0_/K@K>-@@@@@@'^@@>KC^@C=1T8@@@AC@K@@GT8K@@][@KC CRG
)@@G@@R^KC=0R8)C D'^@@!]'^@@>F/@@@>6[@@C=,R')C$?(@@C^F/,0@0_/K@K>5RCU@@](@@@@[RH
)@@G@@/K@@(4P8K@@ C@@C$F:@[@@@/K@@&$O8K@@ C8@@@]%*[@@@/K@@(4CW[@@[[@@C>[OB@C @RI
)@@G@@H8@@@[CWG@@@[@@C>@'^@@>KR^KC=0C@[@@@/@@@&RCW[@@[%@@C>@/K@@&R'^@@02R')C=9RJ
)@@G@@(@@C^F/,0@0_C@@C>['^@@=FC@@C>['^@@$_/K@S=_(@@C A/K@@%P'^@@02R8KC C(@[@@[RK
)@@G@@/K@@%RCW[@@][@@C>@NCKC @R^KC @&8K@@[2W[)@@'=@@@)CC@C @H@@@[[[@@C>[/K@@&ZRL
)@@G@@R]0C=_A]0CZF'^@@V?*@@CKD/K@S=_C=@C)<%8@@@]/K@@(/C@@C)+/@@@%]'^@@$IR')C=9RM
)@@G@@(@@C^F/,0@0_CW@C E[@@C>@'^@@*3[@@C>['^@@=FC@@C>['^@@$_/K@S=_@@@@@@[@@C>JRN
)@@G@@ W@C>K @@C>I @@C B @@C AR')C>I/,0[\R*W@C>K/K@@(0C^@C>L[@@C CC@@C>I[@@C BRO
)@@G@@[@@C A/K@K$I@@@@@@R@K@@H&8K@@[N@K@@GH80@@]N@)@@J @@@@J8KK@$$/K@@$7C@@@@IRP
)@@G@@O;)@@[;G@@@=H8K@@[W8@@@A')H@$9*@@@[]/K@@$1+9@@@JC[@@@LC8@@@E*@@@[]C8@@[@RQ
)@@G@@T@0@@GG@0@@K/K@@$>C@@@@J/K@K$YC5[@@@C1[@@@C![@@@C([@@@C>[@@@C-[)@@@@@@@@RR
)@@G@@G^@C @H8@@@[(^G@@@'=@@@)R W@@@CWG@@@%W @@]'=@@@)'^@@*.C@ @@[&8K@@[N*-)@@RS
)@@G@@8K)@*I/K@@*QCSL)@@'^@@*:C]Q@@[[]Q@@][@A@@[C]KC>@[QQ@@@/K@@*GN0-@@@(@@@[]RT
)@@G@@/K@K$_C)L@@@O8K@@]G@K@@ O;K@@]C@.@@@8K)@*)/K@K$_CSL)@@ @@@@I;?)@@[/@)@*YRU
)@@G@@'^@@*:C]Q@@[[]Q@@][@A@@[C]KC>@[QQ@@@/K@@*Y@@@@@@R )C [&9)@@#NCKC [2WQ)@@RV
)@@G@@'=@@@)P[)C$G/K@K*:@@@@@@NCKC @R^KC @&8K@@[2W[)@@'=@@@)&8K@@@P^KC @C@@@@[RW
)@@G@@/K@K*3@@@@@@R^KC^6(@@@@[R^KC^,:W[@@@/K@K*.(O[@@@'=@@@)OOL@@@/K@@([C@@C ARX
)@@G@@[@@C>RRCU@@]C8@@@[%*[@@@/K@@%CCW[@@[[@@C>O @@@@HC?-@@@[@)C>P'^@@,@/GK@%GRY
)@@G@@/@)@%E:@)C*T/K@@%AC8@@@[[@@C>QC@@@@I'^@@$ICW@C E:@@C*S/K@@%A/K@@$#C8@@@]RZ
)@@G@@[@@C>QC@@C*T'^@@$IC@@C>O @@@@H&;KC CC@)C>P/K@@(MC@@C>Q/KG@(%'=@@@)/K@@%LSA
)@@G@@/K@@%NC@@C>R[@@C A/K@S=_*@@C>Q/K@@(*C8@@@[/K@@%TC8@@@]/K@@%TC8@@@#/K@@%TSB
)@@G@@C8@@@^/K@@%TC8@@@ /K@@%TC8@@@A/K@@%T:@KC$H/K@@(6C8@@@B/K@@%TC8@@@C/K@@%TSC
)@@G@@C8@@@D/K@@%TC8@@@E/K@@%UC8@@@F/K@@%UC8@@@G/K@@%U;*K@@[;CK@@N/KHC&VC8@@@HSD
)@@G@@/K@@%UC8@@@I/K@@%UC8@@@J/K@@%UC8@@@K/K@@%UC8@@@L/K@@%U @@C>R @@C BCWWC&8SE
)@@G@@[@KCKDC?WC&8[@KCKBR^?C&8C@]@@@*@@CKA*@@CKB'=@@@I/K@@(! @@CKDAA0C$) @@C$+SF
)@@G@@R@)@@EO8)@@]A@)@:5C?E@@@[@@C$-C0E@@]/@@@%6%8@@@A/K@@%;C@@DO=[@@C$ZR8)C*#SG
)@@G@@A@)@:5/K@@%_C8@@@[[@@C$Z(@@C A/K@@!4/K@@%_9?E@@#'^@[U(/@@@!2[@@C$ZR@)@@ESH
)@@G@@O8)@@#C8@@@[:0E@@]O8)@@]A@)@:3C@]@@@;G@@@=W8@@@A*@@@@HO;@@@[O;@@@[N@)@@GSI
)@@G@@R@)@@EO8)@@#O@)@[]C8@@@[:0E@@]O8)@@]A@)@:4C8@@@[(@@C A[@@C A*@@@:2/K@@:YSJ
)@@G@@C@@C^%G8@@@[[@@@:2O;@@E.[@@C^%'=@@@<'^@@?\R@)@:2N@KC CC@@@[[T8@@@A[@]@@@SK
)@@G@@O8)@@[&8)@@[R@KC*^C@KC$-%8K@@[/K@@:?M@-)@@/K@@:1'^@@!]R@K@:2C@[@@@T8@@@]SL
)@@G@@[@[@@@/,0]1!@@@@@@@@@@@@@@@@@@@@@@@@/@@@?Z[@@C$+R@K@:2C^[@@@O8K@@[&8K@@[SM
)@@G@@R@)C*^C@K@@G;GK@@=W8K@@A*@@@@IO;K@@[[@KC CN@K@@HC@KC$-%8K@@[/K@@?DM@-)@@SN
)@@G@@/K@@?L'^@@!UR@K@:2C@[@@@;G@@@=W8@@@G*@@@@HO;@@@[[@@C CC@@C C[@@C$>C@@C BSO
)@@G@@[@@C$<R')C$</,0]BS*W@C$>'=@@@)C@@C$-R')C$&%8@@@[R')C$?(@@C^F/,0@0_C@@C$ZSP
)@@G@@H8@@@[/@@@??[@@C$ZC@@C A!@@DO=/K@@?(G8@@@[[@@C A/K@@:Y'^@[NL @@C A @@CKDSQ
)@@G@@*@@C$+/K@S$)/K@@!0@@@@@@(@@C A'=@@@)C@@DO=?@@C A'=@@@)C@@C A:@@C B/K@K?\SR
)@@G@@[@@C$2R')C$2/,0]@_*W@C$4'=@@@)C^@C$4[@@C CC@@C A[@@C B/K@K?\@@@@@@&8K@@[SS
)@@G@@&8)@@[;G@@@=W8@@@A*@@@@HO;@@@[N@K@@G8KK@!G/K@K!]N8)@@]C@[)@@8K)@!K/K@@!EST
)@@G@@C@KC* N80@@A8K0@!O/K@@!R;=@@@#;)K@@#/K@@!M;@K@@#[@M)@@/K@@!I@@@@@@&8K@@[SU
)@@G@@&8)@@[;G@@@=W8@@@G*@@@@HO;@@@[N@K@@G8KK@!=/K@K!UN8)@@]8K)@!$/K@@!,C@L)@@SV
)@@G@@N80@@A8K0@!:/K@@!>;*K@@#;?@@@#/K@@!([@])@@/K@@!+C8@@@[/K@@!6C8@@@]/K@@!6SW
)@@G@@C8@@@#/K@@!6CWWC$_[@KCKDC?WC$_[@KCKBR^?C$_C@]@@@*@@CKA*@@CKB'=@@@I/K@S$)SX
)@@G@@@@@@@@[O@C*D[OKC*E;CK@@M[CKC*E[O)C*F *@C*EC8@@@[&;@@@[C@KC*X&8@@@[N8K@@FSY
)@@G@@M#W)@@(O@C*D/K@@0FCC@C*E/@@@,OCWW@@]/@K@0P[OKC*E(O@C*E'^@@0X*C@C*E/K@@,(SZ
)@@G@@R^KC @NCKC @CO@C*E8KK@,X/K@@0J:W[@@@/K@@,-O8K@@[/K@@,VC^[@@@/@@@0L[C@C*ETA
)@@G@@(*@C*E/K@@,(C@KC*T%@W@@[/K@@0T 4@C*F 0@C*FCO@C*F:8@@@]/K@@,"%8@@@[/K@@0NTB
)@@G@@(@@C^"/K@@,/R^KC^"CO@C*E:W[@@@/K@@,'(O[@@@/K@@,/OOL@@@/K@@,4C8@@@[[4@C*FTC
)@@G@@C8@@@[[0@C*FRCKC*ER@)@@[O8)@@](4@C*F/K@@\CC^]@@@G8@@@[!^[@@@'=@@@)O^+@@@TD
)@@G@@AC)C*ER^KC^,(0@C*FR^KC^6CO@C*E:W[@@@/K@@\N(O[@@@'=@@@)OOL@@@/K@@\H&8K@@[TE
)@@G@@N*L@@@CO@C*D2S[)@[/K@@\)C0[@@@[0@C*DC=[@@@+8@@@Z[4KC*DC)[@@@R@0@@G/K@@\6TF
)@@G@@N0L)@[R)-)@@(@@@[[/K@@0PA@)@@#O80@@[OC)C*EC@+@@@8KK@\%/K@@0P @@@@H;?K@@[TG
)@@G@@:S[)@[/K@@\1/@K@\*O01@@@/K@@\*/@K@0RC0[@@@[0@C*DC=[@@@[4@C*DOC0C*EC@K@@#TH
)@@G@@&80@@[C@<)@@C40C*D;G0@@#;D@@@-*@@@@JC@3)@@*@@@@KC[#)@@C0@C*D&7@C*DR8K@@#TI
)@@G@@&8K@@[R@)C*YN8K@@DM@M)@@R@KC*GR@)C*H/K@K,@C@KC*Z/K@@0VC@KC*)/K@@0VC@KC*-TJ
)@@G@@/K@@0VC@KC*+/K@@0VC@KC*</K@@0VC@KC*=/K@@0VC@KC*>/K@@0VC@KC*&/K@@0V;*K@@MTK
)@@G@@/K@@0#@@@@@@C8@@@[[*@C*ER^KC [NCKC [CO@C*D8KK@0>/K@@0F:W[@@@/K@@0(O8K@@#TL
)@@G@@/K@@0<CO[@@@/@@@0H[O@C*E[@@C*RC@L@@[[@KC*TCSL@@@[@KC*S/K@K0X@@@@@@C@@C ATM
)@@G@@[@@C*U @@C*WR')C*U/,0]@_*W@C*W'=@@@)C^@C*W[@@C CC@@C A[@@C B/K@K02AA0C*$TN
)@@G@@C'0@[C*@@C^TC'0@]^C;@@@G*@@C^TC;@@@QC')C CG')@@[C,E@@@?'@@@ /K@@1JC[0C(;TO
)@@G@@H'@@@^ @@C A/K@@1O9?E@@]'^@[U(C[0@@G(@@@@NG90@@[R;@C CO;@@@[A#@C*6R#@C ATP
)@@G@@*@@@@GP;@@@[A#@C A/H0@1Y8^0@1Y/K@S*$R#@C AO;@@@[A#@C A:@@C B/K@@1?A#@C*5TQ
)@@G@@R')C*5/,0]@_*W@C*7/K@@1\R#@C*5A#@C BRB@C*7A#@C CR#@@@O'^GK12/K@@1V'^@[NLTR
)@@G@@ @@C A/K@S*$@@@@@@@@@@17@@@@2D@@@@3S@@@@22@@@@@@C]K@@QC[KC CT9K@@AC/@C*8TS
)@@G@@/,0@HSR#K@@R!@K@@LR#K@@LH[K@@HR#@@@PG]K@@S/,0@I(/,0@H\R#@C(/'=@@@I/ K@1;TT
)@@G@@/K@K17@@@@@@C]K@@QC[KC CT9K@@AC/@C*8/,0@HSC@@C BC8K@@E/,0@J>C/@@@:/,0@I[TU
)@@G@@C/@@@[/,0@IER#K@@RP;K@@G!@K@@LR#K@@LH[K@@HR#@@@PG]K@@SH'K@@]/,0@I(/,0@H\TV
)@@G@@R#@C(/'=@@@I/ K@2=/K@K2DC/@C*8/,0@HSR#K@@R!@K@@LR#K@@LH[K@@HR#@@@PG]K@@STW
)@@G@@/,0@I(/,0@H\R#@C(/'=@@@I/ K@2=/K@K2D@@@@@@C]K@@QC[KC CT9K@@AC[@@@S;D@@@[TX
)@@G@@H9@@@]C/@C*8/,0@HSC@@C BC8K@@E/,0@J>C/@@@:/,0@I[C/@@@[/,0@IE/K@@3CC[@@@STY
)@@G@@;D@@@[H9@@@[C/@C*8/,0@HSR;K@@A!@K@@LR#K@@LH[K@@HR;K@@GR#@@@PR#G@@@G'K@@[TZ
)@@G@@/,0@JX*@@@@L8^@@3C/,0@H\R#@C(/'=@@@I/ K@3#/K@K22@@@@@@R[)@@QC/@C*8/,0@HSUA
)@@G@@C@@C BC8K@@E/,0@J>C8@C*_C8K@@K/,0@I(/,0@H\(@A@@@/K@@45RZQ@@[:WKC*(/K@@34UB
)@@G@@RB@C^5O;@@@W:WW@@@/K@@30RR?@@@/@)@6!O#@@@I/K@@3%&;@@@[R#KC(.N8K@@AM#W)@@UC
)@@G@@C/@C*8/,0@H>C8@C*%C8K@@Y/,0@I(/,0@H\R#@C(/'=@@@IR#A@@@'^@[T,C[)@@HR]@@@KUD
)@@G@@9!@@@IA#@C**C/@C*8/,0@HSC8@C(]C8K@@A/,0@I(C@@C**C8K@@G/,0@JX/[)@4SC8@C(#UE
)@@G@@C8K@@#/,0@I(9?C@@[/,0@IYC/@@@//,0@I[C@@@@K/,0@J=C/@@@//,0@I[C@@@@L/,0@J=UF
)@@G@@/,0@H\R#@C(/'=@@@IO9)@@[R#@C CP;@@@[%^A@@@/K@@4>C9)@@]C/@C*8/,0@HS'^@@5DUG
)@@G@@/K@K3SC9)@@[C/@C*8/,0@HSC8@C(^C8K@@^/,0@I('^@@5DO &@@@ @@@@MC/@C*8/,0@HSUH
)@@G@@C8@C( C8K@@^/,0@I('^@@5D/K@K3SC/@C*8/,0@H>RZA@@[;*@@@[9?GC(A/,0@IYC8@C(KUI
)@@G@@C8K@@F/,0@I(RZA@@[R#GC(M/,0@IWC/@@@[/,0@IER#A@@]/,0@JJ/,0@H\R#@C(/'=@@@IUJ
)@@G@@/K@K3S@@@@@@C8@C(RC8K@@K/,0@I(R;K@@GR#A@@@/,0@JX/,0@H\R#@C(/'=@@@IR#@@@MUK
)@@G@@RZQ@@@:WWC*\/K@@5:RBGS*2(@@@@GRB@S*2:WW@@@/K@@5>RR?@@@/@)@5)O#@@@I/K@@5UUL
)@@G@@%9)@@]/K@@6!C9)@@# @@@@G/K@@5R:9)@@#C9)@@]RR?@@[R#@@@MAR?C*\AZWC*\CPWC*\UM
)@@G@@C[)@@LH9K@@[/[K@6HC]K@@AG'K@@[C[@@@S;D@@@[H9@@@#C/@C*8/,0@HSC8@C(UC8K@@HUN
)@@G@@/,0@I(/K@@5_C[@@@S;D@@@[H9@@@]C/@C*8/,0@HSH9K@@[R;K@@GR#@@@PR#G@@@G'K@@[UO
)@@G@@/,0@JXC/@@@[/,0@IE*@@@@L8^@@5_/,0@H\R#@C(/'=@@@I/ K@5'C Q@@@H[K@@MT9K@@AUP
)@@G@@C]K@@AG]K@@M/[K@6?C/@C*8/,0@HSC8@C(XC8K@@A/,0@I(R#K@@RP;K@@A @@@@V/K@@6ZUQ
)@@G@@C/@C*8/,0@HSR#K@@R!@K@@LR#K@@LH[K@@HR#@@@PG]K@@S/B0@6$H'K@@[C;0@@[/,0@I(UR
)@@G@@/,0@H\R#@C(/'=@@@I/ K@6W/K@K5D;*K@@S;CK@@SA#KC**C/@C*8/,0@HSC8@C(YC8K@@OUS
)@@G@@/,0@I(C@@C**C8K@@ /,0@JXC8@C(+C8K@@M/,0@I(C@@C B/,0@J=/,0@H\R#@C(/'=@@@IUT
)@@G@@/K@K3SAA0C(" @@CKDR[0@@EO90@@]C;K@@['^@]G>/GK@7,:80@@[/K@@7?:80@@^R;0@@#UU
)@@G@@'^@@$Y'^@[T,/@K@7QA#KCKEA#)CKFA#0CKGR#@@@K9?G@@[9*@CK^/K@S("*@@CKA/K@@7=UV
)@@G@@C[@@@GC/@C%G/,0@HSC8@C%[C8K@@X/,0@I(R#@@@KR;K@@H/,0@JX/,0@H\R#@C%U'=@@@IUW
)@@G@@ @@CKE @@CKF @@CKG9?@C(_9*@CK^R;@@@3A#@CKD/K@S("R#@C%V'=@@@IR;@@@[A#@CKBUX
)@@G@@/K@S("A]E@@CA]U@@DA]'@@E9*E@@F9*%@@H9(E@@J^@U@@LR#E@@A%8@@@[/,@@8-9?%@@#UY
)@@G@@R]KC1IO]KC1H9*(@@@R#KC1HO;K@@]:8K@W@/,K@8GA#KC1HR#0C1#(@@@@J/,K@9DO;0@@]UZ
)@@G@@:80@I@ @@@@JA#0C1#/K@@;E0@@C1M'=@@@A*4@C1M/K@@8XR#0C1IAB0C1NR#0C1OO;0@[@VA
)@@G@@A#0C1OR;@C1J'=@@@[R#0C1F:@0C1IR#0C1GA#0C1I @@@@H/KD@@@R#@@@ER')C1J/,0[V:VB
)@@G@@/KC@@@'=@@@M9*@C?< @@C1Q @@C?BR#E@@#P;@@@[A#@C?&/,K@85R#@C^%O;@@@[A#@C1IVC
)@@G@@A#@C1FO;@@W@A#@C1GO;@@W@A#@C^%'=@@@<R;@@@[A#E@@A/KC@@@R;@C%Z'=@@[G*@@C%&VD
)@@G@@/KD@@@R;@C?C'=@@@J1@@@@G/KD@@@R;@C?H'=@@@J1@@@@G/KD@@@R')C?H/,0[VQR;@C?WVE
)@@G@@'=@@@#(4@C?Z/KD@@@R')C?W/,0[V:R#KC?>O;K@@]A#KC?>R]@C1[O]@C1]R#0C1E9**@@@VF
)@@G@@O;0@@)A#0C1ER#0C1]O;0@@]:80@]G/,@@9TA#0C1] @@@@J/KD@@@0@@C1B'=@@@A*4@C1BVG
)@@G@@/K@@9%R#0C1[AB0C1CR#0C1DO;0@@ A#0C1DR;@C1^'=@@@[R;0C?(:@0C1[R;0C,5A#0C1[VH
)@@G@@ @@@@J/KC@@@R')C1J/,0[V:A]E@@CA]U@@DA]'@@E9*E@@F9*%@@H9(E@@J^@U@@L(@E@@AVI
)@@G@@/K@@.O @E@@ R#@C?&P#E@@#/@@@9"/8@@;MR#@C?$P#E@@#/@@@9"//@@;MR#%@@V(@@@@IVJ
)@@G@@/K@@'J:@%@@#/K@@;E9?%@@[O;0@@]:80@I@/K@@'JO#)@@J9!I@@@%[E@@#/K@@'J[[U@@^VK
)@@G@@9(E@@VA#'@@]/K@@;ER#)C1*R#0C?>/,K@./R#K@@GA#E@@Z;/@C1:R3!@@[:8)@@_/,K@;*VL
)@@G@@0@H@@[/K@@;ZC5X@@[%@U@@YG9K@@[[5X@@[R3!@@[AB)C1WAB)C1VR#0C1?')@C1W;*0@@[VM
)@@G@@R;)@@[;G)@@[')@C1VA#0C1? 4@C1:*^@C1:'=@@[NR3!@@[A#%@@+T8)@I@O#)C1<A#%@@XVN
)@@G@@R;0@I@/,K@./%@%@@#/K@@;MA#'@@^9*%@@VC[E@@+[[E@@BC[E@@X[[E@@[P#E@@XA#E@@]VO
)@@G@@C[E@@Z:[E@@Y/K@@;E(@E@@Y/K@@;D;/@C1:R#'@@YR7Z@@[P;K@@[A7Z@@[ 4@C1:*^@C1:VP
)@@G@@'=@@[N[[E@@YR]E@@CR]U@@DR]'@@E9?E@@F9?%@@H9!E@@JN@U@@L/KF@@@R;)@@[A#%@@ VQ
)@@G@@R#'@@Z:@'@@Y/K@@;E;/@C1:C5J@@[H9@@@[[5J@@[ 4@C1:*^@C1:'=@@[N/K@@;E 4@C1:VR
)@@G@@*^@C1:'=@@[N;/IC2O 4IC2O*^IC2O'=@@[N;/@C1:/K@@'UR#)C1?0@@@@I/K@@;\ @@@@GVS
)@@G@@)@)C28A#0C1?/K@@;8;S)C1?R#@@@JO;@@@[AB0C1V!8@@@=/K@@/')@)C29')@C1VA#0C1?VT
)@@G@@RB/C1\*4J@@[/K@@;\C9@@@_[1J@@[C9@@@[:DGC1\/K@@//A#WC1\A3H@@[C9@@@)[5H@@[VU
)@@G@@;/GC2O 4@C1:*^@C1:'=@@[NT8@@I@O#@C1<ABE@@TR#H@@[A#E@@U WE@@UR;@@K@AFE@@SVV
)@@G@@R#@@@EO;@@@P/K@@/2A]@C3LA]KC3MA])C3NA]0C3O9*@C3D9*)C3F9(@C3HRBW@@^A#KC3BVW
)@@G@@R#W@@ A#KC3CC/@C3[/,0@HSC@@C3CC8K@@E/,0@JXC/@@@]/,0@IEC@@C3BC8K@@C/,0@JXVX
)@@G@@/,0@H\R;@C2''=@@[=R]@C3LR]KC3MR])C3NR]0C3O9?@C3D9?)C3F9!@C3H'=@@@#;/@C1:VY
)@@G@@R3H@@[ 4GC2O*^GC2O'=@@[N 4H@@[/KD@@@ @@C1?/K@@;*R#)@@GT8)@I@O#)C1<AB%@@TVZ
)@@G@@R;)@C@AF%@@SR#\@@[A#%@@U WE@@UR;)@@)A7!@@[A3H@@[ABWC1\;/GC2O 4@C1:*^@C1:WA
)@@G@@'=@@[NR#@@@EO;@@@P'=@@@#(4E@@S/K@@/FO')@@P/,0[V:;/@C2N(@@C1%/,@@.& 4@C2NWB
)@@G@@*^@C2N'=@@[NR;@@@]A#E@@A'=@@[L @E@@Y @E@@V9!@C1X9(E@@P9!@C1Z9(E@@R9!@C1-WC
)@@G@@9(E@@T/K@@95A])C1%/,K@8./,K@9#R#@C^%O;@@@[A#@C1*AB@C1*O#@C?>A#@C1<O;@B8@WD
)@@G@@A#@C^%'=@@@<R#KC?>AFKC1*R;@C1='=@@@#*4@C1$/K@@.' C@C1*/KC@@@R')C1=/,0[V:WE
)@@G@@ @@@@K;C0@@[P;0@@[ @@@@HO#K@@KO#K@@J;CK@@[R#@@@H;*@@@[O#@@@I:[@@@J/K@@"NWF
)@@G@@C[W@@@H[U@@#/[K@"N/8@@"JC[@@@HR;K@@[/K@@"@R#0@@HR;K@@@P;0@@[/K@@"@9??@@@WG
)@@G@@/KD@@@A]E@@CA]U@@DA]'@@E9*E@@F9*%@@H9(E@@J^@U@@L(@E@@A/K@@_8R#U@@A:8K@@[WH
)@@G@@/K@@">:8K@@]/K@@_N @E@@A/K@@;ER#)C3P/,K@9D*@@C1]/,@@9T(@@C1H/K@@"5 @@@@JWI
)@@G@@R#KC1IO#KC1H9*!@@@R#KC1HO;K@@]A#KC1H%8K@W@/K@@"?/,K@8G0@@C1M'=@@@A*4@C1MWJ
)@@G@@/K@@8X0@@C1B'=@@@A*4@C1B/K@@9%R;KC?+ABKC1C @@C1DR#E@@#A#@C?$R;@C1^'=@@@#WK
)@@G@@*4@C1B/K@@_L @@C1H @@C1#R;K@D@A#KC1O @@C?> @@C1]R#KC3QA#KC1ER;K@@;A#KC1DWL
)@@G@@/K@@;ER')C1^/,0[V: @@C1%;/@C1:R#U@@YR7!@@[P;)@@[A7!@@[R;)@C@AF%@@SR#0C3RWM
)@@G@@CDJC1\%9@@@[/K@@_,RB\C1\*4I@@[/K@@_,R#Y@@[A#U@@U WE@@UR#@@@J&;@@@@T8@@I@WN
)@@G@@O#@C1<ABE@@TR#@@@EO;@@@P'=@@@# CJC1\/:0@_W @@C1?R;)@@<R;KC1!A#YC1\8#)@_2WO
)@@G@@ 4@C1:*^@C1:'=@@[N @E@@A(@@C1Q/K@@;EA])C%(R;@C:W'=@@@JR;@C:Z'=@@@JR')C:ZWP
)@@G@@0@@@@G/,0[VQ*@@C?B/K@[@FR;@C:='=@@@JR;@C:*'=@@@JR')C:*0@@@@G/,0[VQR;@C::WQ
)@@G@@'=@@@JR#KC1RP;K@@[R#)C1QR')C%%R;@C:0'=@@@#R#@C^%O;@@@[AB@C?^O;@@V"A#@C?AWR
)@@G@@O;@@@]A#@C^%'=@@@<R;@C?@'=@@@#R#@C? O;@@[@A#@C? R#0C?^&;0@@]9!J@@@(@@C1RWS
)@@G@@/K@[@!?[@@@I/K@[@!A#)C%! @@C%,/,0@71O;)@@[8#K[@$ @@C1R9(@C%!/,0@71:[@C:;WT
)@@G@@/K@[@4$#0C?A/K@[@+/K@[@V/,0@"PR;@C%W'=@@@JR;@C%W'=@@@JR])C%(/K@@;EA]'@@)WU
)@@G@@R]'@@^A]'@@-/,0@9?*@E@@ /K@[[K9?'@@[O#0@@KC[E@@-[[E@@^[[J@@[R#'@@BC9@@@[WV
)@@G@@;/@C1:[DJC1\9?'@@IR]'@@) 4@C1:*^@C1:'=@@[N/KF@@@R#@C?L'=@@@I'=@@@)A#E@@FWW
)@@G@@R#E@@#(@@C1QA#@C1QR#@C1RO;@@@[A#@C1RR#E@@F/KF@@@AA0C3SR[0@@EO90@@]C!'@@@WX
)@@G@@!90@@U/K@[]?9?B@@@R]KC32N@T@@@8KK[[$/K@[]29/D)@[/K@[[>R#D@@@R#K@@GT8@@@^WY
)@@G@@O;@C@@R#0@@G1@G@@@/K@[[3R#@@@H @@@@H'=@@[DR Z@@[9?B@@@R]KC330@D@@[/K@[]2WZ
)@@G@@9/D)@[/K@[[6R T@@@O90@@]R[)C34 @@@@T8^0[]@/K@[]CG;K@@['^@]G>/GK[]4O[0@@UXA
)@@G@@AZA@@@A\&@@@ABQ)@@/K@[["R;@C3UABA@@@R#@@@A;*@@@M;C@@@MAFA)@@R#@C3TA#A@@@XB
)@@G@@/,5@@@R#@C35'=@@@I/K@[]4R#@C36'=@@@I/K@[]4R#@C37'=@@@IR;@@@[A#@CKB/K@S3SXC
)@@G@@@@@@@@'^@[F>RB@[]7A#@[#^/K@[]_'^@[F>OY;@@@AA0[#^R#@C38'=@@[[R#@DE,'=@@@IXD
)@@G@@/K@[#U@@@@@@@@@@@@'=@@[@'^@[F>C/@C5_/,0@HSR\@[#^RBGC6A/,0@I9C/@@@[/,0@IEXE
)@@G@@C8@C3"C8K@@U/,0@I(RB@[#^R;K@@G/,0@JX/,0@H\R#@DE\'=@@@IR#@DE0'=@@@IC/@C5_XF
)@@G@@/,0@HS/,0@H\R#@DE1'=@@@H/,0[G5@@[C4V@@[C6NR#@C6NN@KC8NR@KDE22@[)@[/K@[G1XG
)@@G@@R#@@@[;*@@@M;C@@@MP;@@@]R#G@@@/KG@@@R8KC8ON8K@@!R#@DE3O#@@@['=@@@IO8K@@EXH
)@@G@@8KK[#\'^@[BK/K@[#UR[KDE4R#5)@@'^@[DE/[@[^[[[@D[IR#5)@@'^@[DE/[@[^[[[@D[JXI
)@@G@@'^@[DQ/K@[#7'^@[BK/K@[#UR#0C6P'^@[DER#@@@K&;@[_@'=@@[,'^@[BK/K@[#UR;@@@[XJ
)@@G@@A:@@@@'^@@@@@@@[^E'^@[BK/K@[#UR[KDE4R#5)@@'^@[DE/[@[^W[[@D[IR#5)@@'^@[DJXK
)@@G@@/[@[^WG[@D[I[[@D[J'^@[DQ/K@[^L'^@[BK/K@[#UR[KDE4R#5)@@'^@[DE/[@[^%[[@D[IXL
)@@G@@R#5)@@'^@[DE(@@@@KC[@D[I[[@D[J'^@[DT/K@[^Z'^@[BK/K@[#UR[KDE4R#5)@@'^@[DEXM
)@@G@@/[@[^'[[@D[IR#5)@@'^@[DJ(@@@@KG9@@@[G[@D[IH9@@@[[[@D[J'^@[DT/K@[^!'^@[BKXN
)@@G@@/K@[#UR[KDE4R#5)@@'^@[DE/[@[ #[[@D[I'^@[DW/K@[^.'^@[BK/K@[#UR[KDE4R#5)@@XO
)@@G@@:@0DE5/K@[ J'^@[DE/[@[ M[[@D[I @@D[J'^@[D'/K@[ A @@D[I @@D[J'^@[D''^@[BKXP
)@@G@@/K@[#UR[KDE4C[>@@@;D)@@M:[)DE6/K@[ !:[)DE7/K@[A^'^@[FI/K@[ :C/@C5_/,0@HSXQ
)@@G@@R#@@@M/,0@IWC/@@@[/,0@IER#@DE8/,0@IWR;K@@GR#@@@N/,0@JX/,0@H\R#@DE9'=@@@IXR
)@@G@@O9K@@]/K@[ PC[>)@@:[)DE'/K@[ 8:[)DE;/K@[ /:[)DE//K@[A@R[)DE.N80@@('^@[GFXS
)@@G@@/K@[ PR[)DE.N80@@J'^@[GF/K@[ PR[)DE"N80@@E'^@[GF/K@[ PR[)DE_N80@@I'^@[GFXT
)@@G@@/K@[ P'^@[BK/K@[#UR[KDE4R#5)@@'^@[DE/[@[AN[[@D[IR#5@@@C[ )@['^@[GZ[[@D[KXU
)@@G@@R#@D[IR#KD[KA#W@@@/K@[AB'^@[BK/K@[#UR[KDE4C[>)@@:[)DF@/K@[B@;D)@@M'^@[FIXV
)@@G@@/K@[A"R#5@@@C[ )@['^@[GZ[[@D[KC/@C5_/,0@HSR#@@@M/,0@IWC/@@@]/,0@IE9?@DF[XW
)@@G@@/,0@IYC/@@@[/,0@IER#@DF#/,0@IWC/@@@[/,0@IER#@DF^/,0@IWC/@@@[/,0@IER#@@@NXX
)@@G@@R;K@@G/,0@JXC/@@@//,0@I[R#@D[KA#A@@@R;K@@G/,0@JX/,0@H\R#@DF '=@@@IO9K@@]XY
)@@G@@/K@[AQ'^@[BK/K@[#UR#@DFA'=@@@I'^@[F9 *@@@@/K@L#^R9KC6PR#5@@@'^@[DE/[@[BIXZ
)@@G@@[[@D[I'^@[F9/K@T[I'^@[BK/K@[#U@@@@@@R#@DE0'=@@@I/K@LBK@@@@@@N8K@@  @@@@KYA
)@@G@@;G0@@A;D@@@Y%9@@@ /K@[BY8KK[BQ @@@@K/K@LBOR;@@@[ @@@@H;(@@@Y;?0@@A+80@@JYB
)@@G@@T[@@@GO#K@@KT@@D[O;C0@@A @@@@K8KK[B+C[@@@H/K@LBO@@@@@@R#@D[JP#@D[IO;@@@[YC
)@@G@@C#0@@G @@@@UW;)@@ER[)D[I(@@@@U/K@[CAC/@C5_/,0@HSC@@D[IC8K@@A/,0@JXC/@@@AYD
)@@G@@/,0@IER#@@@AR;K@@//,0@I(/,0@H\R#@DFB'=@@@IO9)@@EA[)D[IH;)@@[/K@[B3(@@@@VYE
)@@G@@/K@LB:T;0@@AC/@C5_/,0@HSC@@D[IC8K@@A/,0@JXC/@@@A/,0@IER#K@@VR#@@@A/,0@I(YF
)@@G@@/,0@H\R#@DFC'=@@@I/K@LB:@@@@@@R#@D[JP#@D[IO;@@@[C#0@@G @@@@UW;)@@^R[)D[IYG
)@@G@@&9)@@[(@@@@U/K@[C6C/@C5_/,0@HSC@@D[IC8K@@A/,0@JXC/@@@A/,0@IEC;K@@#R#A)@@YH
)@@G@@R;K@@G/,0@JXC/@@@^/,0@IE8AK[C%/,0@H\R#@DFB'=@@@IA )D[IH;)@@[/K@[C)(@@@@VYI
)@@G@@/K@LCRC/@C5_/,0@HSC@@D[IC8K@@A/,0@JXC/@@@A/,0@IER#A)@@R;K@@G/,0@JXC/@@@^YJ
)@@G@@/,0@IEH;0@@[/B0[C_/,0@H\R#@DFB'=@@@I/K@LCR@@@@@@R;@@@CA#@D[O'^@[BO/K@LDEYK
)@@G@@@@@@@@R;@@@EA#@D[O'^@[BO/K@LDJ@@@@@@/K@LDO@@@@@@'^@[B:/K@LDQ@@@@@@'^@[CRYL
)@@G@@/K@LDT@@@@@@R[)D[IR[0D[P&90@@[A[$)@@R[)D[IR#A@@@A#B)@@O9)@@[A )C_ZR#@C_ZYM
)@@G@@A#B)@@O;@@@[A#B)@@R#@C_)R#KD[IA#H@@@C/@C5_/,0@HSC8@C_?C8K@@P/,0@I(R#@D[IYN
)@@G@@R;K@@A/,0@JX/,0@H\A[0D[PR#@DFC'=@@@I/K@LDW@@@@@@(@@D[I/K@[E-R#@D[P;*@@@MYO
)@@G@@;C@@@MP;@D[Q;G@@@=W8@@@^N@K@@GR@KDFDR#@D[I2@[)@@/K@[ELP@KDFER#@D[IR#L@@[YP
)@@G@@A#W@@@ @[@@@ @[@@[ @[@@] @[@@#/K@LD'C/@C5_/,0@HSC8@C_<C8K@@=/,0@I(C@@D[IYQ
)@@G@@C8K@@A/,0@JXC/@@@[/,0@IEC/@@@*/,0@I[/,0@H\R#@DE\'=@@@I/K@LD'R[@D[P&9@__;YR
)@@G@@$9@D[Q/K@[E:R#^@@@A#@D[IR#@D[IR#O@@[A#W@@@/K@[E<R[@DFFA[@D[P/K@LD'@@@@@@YS
)@@G@@/K@LE,@@@@@@ @@[#^'^@[F>RB@[E0P;@@@[AB@D[IRBKD[PP;KD[QO;K@@[;GK@@=W8K@@#YT
)@@G@@N@K@@HR@0DFG2^#)@@/K@[E_P@0DFHA^0[#^C/@C5_/,0@HSC8@C_(C8K@@L/,0@I(C@@D[IYU
)@@G@@C8K@@A/,0@JX/,0@H\R#@DFI'=@@@I'^@[BK/K@[#U@@@@@@R[)DE.N8K@@%2D&)@@/K@[FRYV
)@@G@@P[)DFJR &@@@C[6@@@/K@[F+C/@C5_/,0@HSC8@C_1/,0@I9R#@@@M/,0@IW/,0@I6/,0@H\YW
)@@G@@R#@DFC'=@@@I/K@LFIR#@[FIO;@@@[/KG@@@@@@@@@9*@C_5R;@@@[A:@@@@^@KD@K&;@@@[YX
)@@G@@Q;@C_7&;K@@[Q;K@@IN8K@@IM#H)@@R#KDFJN8K@@FM#H)@@O;@@@[&;K@@[Q;K@[]N8K@@IYY
)@@G@@M#H)@@/K@LF>@@@@@@&;@@@[Q;@C_7&;K@@[Q;K@@IN8K@@IM#W)@@R#KDFJN8K@@FM#W)@@YZ
)@@G@@O;@@@[&;K@@[Q;K@[]N8K@@IM#W)@@9?@C_5N@KD@K/K@LF9@@@@@@R 6@@@C/@C5_/,0@HSZA
)@@G@@RFA)@@/,0@IWC/@@@[/,0@IER#@DE8/,0@IWC/@@@[/,0@IER#B@@@R;K@@G/,0@JX/,0@H\ZB
)@@G@@R#@DE9'=@@@I8K0[GG/K@LGF@@@@@@R#@@@J+@@DFKR#0@@HR#@@@K+@@DFKC[@@@HN9@@@[ZC
)@@G@@C;0@@[ @@@@UC;K@@ ;H@@@#;D@@@#8AK[G%;G0@@=8L@[G(C[@@@L/K@LGZR#@DFL'=@@@IZD
)@@G@@/K@[#U'=@@@DR#F@@[R;KC_-N8K@[=M#H)@@N90@[BR@V@@@R@:@@[R@0DFMR[@DFMR[K@@]ZE
)@@G@@ @@@@V&9K@@[')#[HP$80@@ /K@[H R@0DFM:8)@@ /K@[HIG;0@@[')^[HV$9@@@ /K@[HGZF
)@@G@@R[@DFM8L0[H[/K@[HO*@@@@V/K@[HM8L0[H[/K@[HOO8)@@]8L0[G./KF@@]R7-@@@R3-@@@ZG
)@@G@@R\-@@@R:-@@@R$-@@@R<-)@@A7>@@@A3>@@@A\>@@@A:>@@@A$>@@@A<>)@@@@@@@@(@@@@EZH
)@@G@@/K@[I$0@@@@G/K@[I(R:'@@@(@JDFP/K@[I>!80@@L/K@[I]!80@@I/K@[H1!80@@B/K@[H5ZI
)@@G@@:80@@[/K@[I$!8@@@]/K@[I(R;@@@[/K@[H;(@@@@G/K@[I(RRU@@]+8K@__?@)@@G/K@[I(ZJ
)@@G@@'^@[I1!@KDFN/K@[I:R#)@@JR:'@@@R#_DFP/K@LH-(@@@@G/K@[I(RB)C^;R#U@@[1@@@@HZK
)@@G@@RB)C^/;*K@@[;CK@@NO#)@@HA])DFOR])@@IRRU@@]+8K@__?@)@@G/K@[I('^@[I1R])DFOZL
)@@G@@RZE@@@;*@@@S;C@@@SO#0@@GRRE@@@;*@@@S;C@@@SP;0@@] @@@@IW8)@@AO#K@@I!@KDFNZM
)@@G@@/K@[I:O;0@@[R#)@@JR:'@@@R#_DFP/K@LH- @@@@H/K@[I!R;K@@[/K@[I!R;K@@]/K@[I!ZN
)@@G@@;*K@@MO;K@@#;@K@@LO;K@@[;@K@@[/K@LH-@@@@@@RZU@@[RF)C @?@)@@H/K@[I$P;K@@[ZO
)@@G@@OBKC @RZ.@@@RBX@@@(@@@@H/K@[I>O;K@@]R\%@@@%8)@@[/K@[JE(C@C^"/K@[JERB)C^"ZP
)@@G@@:W"@@@/K@[JD(OI@@@/K@[JEOR,@@@/K@[J#OBX@@@R#)DF%R\'@@@%80@@#K^X@@@A#)DFNZQ
)@@G@@RZ%@@@+8)@__O#K@@JP;@@@[RR%@@@+8)@__R#)@@JT@0@@GR#@@@IO\'@@[P;0@@[ @@@@IZR
)@@G@@W8)@@AO#K@@IO;0@@[/K@LI1@@@@@@ @@CKDC8@@@=%*E@@@'=@@@)C8@@@[&;@@@[C@KDGMZS
)@@G@@N8K@@FM#W)@@RCU@@@C8@@@P%*[@@@'=@@@)CW[@@[[4@DF1C*E@@[RCU@@[*@@@@[C*[@@@ZT
)@@G@@[0@DF1CW@DF1R@KDGNN@KDF_2W[)@[/K@[L.C@[@@@[@@DF1'^@[L+[@@DGL(*@DF1/K@[KIZU
)@@G@@/@@[L_ @@C BC@@DO=?@@DGL/K@[L_C@@DGL[@@DGIR')DGI/,0]@_*W@DGK'=@@@)C^@DGKZV
)@@G@@[@@C CR8KC C/K@[KPG^@C @H8@@@[(WG@@@'=@@@)(^G@@@/K@[L;R^W@@@C4@DF1/KG[KQZW
)@@G@@/K@[LH/K@[K+/K@[K*/K@[K1/K@[KWC@K@@[G=KDF1C8@@@]C8)@@[C80@@#/K@[MCC@K@@[ZX
)@@G@@G=KDF1C8@@@AC8)@@[C80@@#/K@[MCC8@@@[%@@DGH/K@[K0C^[@@]O;@@@[:^[@@@/K@[K0ZY
)@@G@@O^L@@]/K@[K+R^)C^,C8)@@[%@)DGHR^)C^6(@@@@]'=@@@)CW[@@]:W]@@@/K@[K"(O]@@@ZZ
)@@G@@'=@@@)OO+@@@/K@[K8O*+@@@(0]@@[/K@[M[C)M@@[C8@@@[%@@DGH/K@[LEC^[@@]O;@@@[AA
)@@G@@:^[@@@/K@[LEO^L@@]G8K@@]G@K@@[/K@[K=(@[@@[/K@[L)CW[@@](^@C^5'=@@@)R^)C^5AB
)@@G@@O8)@@W:W]@@@/K@[LU(O]@@@'=@@@)OO+@@@/K@[LOC@K@@]G8K@@[C8@@@YC8)@@[C80@@[AC
)@@G@@/K@[MCC8KDF:/K@[LW@@@@@@C?@DF1%8@@@]/K@[L!RCU@@[CW[@@[C9@@@]C?-@@@[@)DGHAD
)@@G@@[[@DF0/K@LL+P')@@[R9K[L1A[KCZF'^@@V?*@@CKD/K@[M#C8@@@]%=@C)</K@[L.C@@C)+AE
)@@G@@C9@@@]G[@@[^C8)@@[/K@[L%C8K@@[/K@[M C8K@@]/K@[M C8K@@#/K@[M C8K@@^/K@[M AF
)@@G@@C8K@@ /K@[M ;*K@@M)@KDGOC@K@@I9*@DGFC@@DGPC@KDGMN8K@@FM#H)@@9?@DGFC[@DF0AG
)@@G@@/K@LJZ@@@@@@ @@CKDAA0[MKC?E@@@C^GDG4/KG@@@'=@@@)'^@[OC @@DH^ @@DHAR')DH^AH
)@@G@@/,0]C,C@@DH [@@C A*W@DHA'=@@@) @@C C/K@LMK'^@[OC @@DH^C@@C A[@@DH^ W@DHAAI
)@@G@@R')DH^/,0] _*W@DHA'=@@@)C@@DH [@@C A/K@LMK'^@[OC @@DH^C@@C A[@@DH^ W@DHAAJ
)@@G@@R')DH^/,0[1=*W@DHA'=@@@)C@@DH [@@C A/K@LMK*@@C^V/K@[N$/,0C[XR')DL0*@@C1QAK
)@@G@@/,0@"PR#@DH='=@@@I/K@[N(C@@[MK[@@CZF'^@@V?C=@C)<%8@@@]/K@[PYC@@C)+/K@[NGAL
)@@G@@'^@[N6C@KDO=?@K@@G/K@[NZ[@@C A/K@LMK@@@@@@C/@C]7/,0@HSC@@DH>/,0@IWC@@DO=AM
)@@G@@/,0@J=/,0@H\C8@@@[[@@CKDC@@DH&(@@CKA'=@@@I/K@LNL'^@[NL @@C A/K@LMK @@C AAN
)@@G@@/K@LMKC@@DO=[@@C A/K@LMKR#@DH$'=@@@IC@@CY0'=@@@V'=@@@D'^@[N6G@@C A/K@[NGAO
)@@G@@'^@[N6C@KC AH@K@@G[@KC A0@@@@H @@C A/K@LMK@@@@@@C8@@@#!WE@@@'=@@@)9?E@@]AP
)@@G@@'^@[U(/K@LN6@@@@@@C8@@@#!WE@@@'=@@@)C@@DH*C8K@@A%WU@@@/K@LN.9?E@@^'^@[U(AQ
)@@G@@/K@LN.@@@@@@'^@[N6/@@[P)C[@@@G'^@[N./G@[OV?@@@@K/K@[P)[[@DHB[@@DHCC@@DO=AR
)@@G@@?@@DHB/K@[NZ?@@DHC'^@[NLC@@DO=?@@DHC[@@DHC/K@LOC[[@DHB[[@DHCC8@@@ %?E@@@AS
)@@G@@/K@[OMC@@C A/@@[P+[@@DHBG@@DHCH8@@@[[@@DHC/K@[OM'^@[O3C8@@@[R^-@@@[@]@@@AT
)@@G@@CC[@@@*@@@@G'^G@@@/K@LMK'^@[O3R@L@@@ @[@@@/K@LMK@@@@@@C@E@@]R@KDH(N@KDG3AU
)@@G@@2@[)@]/K@[P=O8K@@[/K@LO3A])DG>O')@@B/,0[RC/@@[PX;G@@@M(@@@@G;?@@@M[@@DG&AV
)@@G@@R])DG>O')@@]/,0[RC/@@[PK;G@@@M(@@@@G;?@@@M&;@@@[R@KDG&&8K@@[N8K@@#M#[)@@AW
)@@G@@/K@LMKR@KDG>O8K@@]&8K@@[R@)DH%N8K@@ M@-)@@R@KDG&&8K@@[N8K@@#M@-)@@R')DGXAX
)@@G@@/,0[P"/K@LMK/K@[P&C8@@@[/K@[P*C8@@@]/K@[P*C8@@@#/K@[P*C8@@@^/K@[P*C8@@@ AY
)@@G@@/K@[P*CWWDHY[@KCKDC?WDHY[@KCKBR^?DHYC@]@@@*@@CKA*@@CKB'=@@@I/K@LMKR]0DH0AZ
)@@G@@9?KDH19?0DH39\)DH5N8K@@IR@KDIBR@)DICM@M)@@(WF@@@/KF@@[OY;@@@/KF@@@AA0DIEBA
)@@G@@(@@C^;'^@[Q+'^@[Q2(@@@@[/K@[QQC?[@@ C?U@@ ;*K@@M;?@@@M:@@DJB/K@[QG%@@DJCBB
)@@G@@/K@[R,CC@C^/[^[@@AK8@@@#[CKC^/G^@C^/9?%@@ 9*?@@@C@%@@B[@?@@]/KF@@@CC@C^;BC
)@@G@@K8@@@C[CKC^;G^@C^;R@K@@G&8K@@[R@)@@E&8)@@[N8K@@CM@M)@@G8@@@ /KF@@@@@@@@@BD
)@@G@@C^@C^%G8@@@[[@@C^;G8@@")[@@C^%'=@@@<C^@C^?G8@@@[[@@C^/G8@@ZK[@@C^?'=@@@<BE
)@@G@@C8@@@[[C@C^//K@LQ+@@@@@@ @@@@[(C@C^;/K@LQ2R^KC^;9?E@@@9/[@@@/K@[R[9?E@@]BF
)@@G@@9/[@@]/K@[R[C@E@@^%@[@@^/K@[R[/K@LQ2O8K@@CC^@C^;GC@C^;%@@@@[/K@[Q7 @@@@[BG
)@@G@@/K@LQ2(@@C^;'^@[R='^@[Q2 @@@@G(@@@@[/KF@@@O8K@@ C@@@@[C?L@@@:8K@@]/KF@@@BH
)@@G@@:8K@@#/KF@@@;*@@@M(^[@@[/KF@@@C^L@@[;GK@@L;C)@@NC @C^;(@@@@HC @C^/G@)@@KBI
)@@G@@C@K@@I;C@@@M;*K@@M;?@@@M/KF@@@@@@@@@A])DIDA]0DIER')DJD/,0C[<R')DJE/,0C[<BJ
)@@G@@R])DIDR]0DIE/K@LR=*@@DIF/K@[S R#@DJF'=@@@IR#@DJG'=@@@IR#@DJH'=@@@IR#@DJIBK
)@@G@@'=@@@IR#@DJJ'=@@@IR#@DJK'=@@@IR#@DJL'=@@@IR#@DJM'=@@@IR#@DJG'=@@@IR#@DJGBL
)@@G@@'=@@@I[@@DIFR#@DJF'=@@@IC/@C]7/,0@HS9?@DJN/,0@IYC/@@@[/,0@IE9?@DJP/,0@IYBM
)@@G@@C/@@@[/,0@IE9?E@@@/,0@IY9?E@@]/,0@IYC@E@@^/,0@IWC/@@@(/,0@I[C8K@@[C@)DIIBN
)@@G@@G8)@@[[@)DII;G)@@=W8)@@C)80@@0[-HDIG;G)@@=W8)@@C)80@@0[>HDIG;G)@@=W8)@@CBO
)@@G@@)80@@0[(HDIGC@HDIG[@E@@@9?@DJR9*E@@[9*E@@#9?E@@@/,0@IY9?E@@]/,0@IYC@E@@^BP
)@@G@@/,0@IWC/@@@)/,0@I[/,0@H\R#@DJT'=@@@IR#@DJG'=@@@IR]0DIE/K@[P"A]0DH09*KDH1BQ
)@@G@@9*0DH39:)DH5N8K@@IR@KDJUR@)DJVM@-)@@RBF@@[R;K@@AABW@@[C^G@@@[@@DJ^RA:@@@BR
)@@G@@RA%@@@/,0[RC[@@DJ R@KDJ^ @[@@@C*G@@@C8K@@[:8@@@P[@L@@@R8KDJ A@KDI C@@DJABS
)@@G@@[C@DIA[^@DIAR;@DI /K@[P2A]0DH09*KDH19*0DH39:)DH5N8K@@IR@KDJUR@)DJVM@-)@@BT
)@@G@@RA:@@@RA%@@@/,0[P"[@@DJ R8KDJ A@KDI C@@DJA[C@DIA[^@DIAR;@DI /K@[P2@@@@@@BU
)@@G@@N]@@@CR]@C^0&'@@@DCD@C^0;H@@@=W9@@@DN@K@@KC@K@@GC[K@@GC?C@@@G*C@@@;GW@@@BV
)@@G@@2WS)@@/K@[UCP]@DJX;G)@@=C?C@@@;??@@@;G0@@=C*C@@@;?/@@@C[@@@CC@@@@LR]@@[CBW
)@@G@@/K@LT,R]@@[CC@@@@L @@@@H/K@LT,@@@@@@[@KDJWCOKDJWN]@@@CR]@C^0&'@@@DCD@C^0BX
)@@G@@;H@@@=W9@@@DN@K@@K2WS)@@/K@[U&P]@DJXC?C@@@C[@@@H;(G@@@C[K@@I)[@@@LC*C@@@BY
)@@G@@;(W@@@C[@@@J)[@@@LC@@@@LC[@@@CR]@@[C/K@LUG @@@@GR]@@[C/K@LUG@@@@@@9*)DJYBZ
)@@G@@[[@DJ) @@CKDR#)@@HR#K@@GR#0@@H;C0@@Y @@@@K%80@@0C9@@@[ @@@@J @@@@G;?@@@ACA
)@@G@@%8@@@ /K@[U'/K@[VE(@@@@G/K@[VBP;@@@0/[@[V@T80@@E/K@[V 0@@@@G/K@[VI!8@@@CCB
)@@G@@/K@[VI;*0@@#O#0@@G/K@[U5R#K@@IR#)DJ>/K@[U5R#@@@J9?)DJYC[@DJ)/K@LU(*@@CKACC
)@@G@@/K@[VMR#@DJ&'=@@@IR;@@@:A#@CKD @@@@G/K@LU(A])DJ$A#@DJ*R;@@@.A3@C]7C/@C]7CD
)@@G@@/,0@HSC8@DJ?C8K@@I/,0@I(R#@DJ$/,0@I9C8@DJ\C8K@@E/,0@I(C@@DJ*C8K@@G/,0@JXCE
)@@G@@/,0@H\R#@DJ7'=@@@I'=@@@)A]0DJ$C/@C]7/,0@HSC8@DJ1C8K@@L/,0@I(9?E@@@/,0@IYCF
)@@G@@C8@DJ4C8K@@E/,0@I(R;K@@]R7E@@#/,0@JXC8@DJ6C8K@@A/,0@I(R;K@@]R3E@@#/,0@JXCG
)@@G@@/,0@H\R#@DJ7'=@@@IR]0DJ$AA)DJ%R;@DJ('=@@[Q'=@@@)CCE@@[*@@DJ;/KG@@@9?E@@@CH
)@@G@@9*@DJ8RA@DJ9 @C@@@C@@@@CG8@@@[[^@DJ9C8@@@[[@@DJ;(?@DJ8/K@[WTC8@DJ8'=@@[]CI
)@@G@@[@@DJ'/K@[WXC@@DJ9'=@@@H[@@DJ'/K@[WX @@DJ;;*@@@M;C@@@M/@@[Y[C@K@@GG@K@@CCJ
)@@G@@C@X@@@:@KDKFH8@@@[/@@[Y[N@0@@GG@@@@CC@G@@@'^@[XFC@@@[#H8@@@[T8@@@AG@@@[[CK
)@@G@@[^C@@@*@@DKE/K@[W3/K@[Y[R#@DKG'=@@@H;*@@@M;C@@@M/@@[Y[C@K@@GH8K@@[C@XDJ/CL
)@@G@@:@KDKFH8@@@[/@@[Y[N@0@@GH8@@@[C@GDJ/'^@[XFC@@@[#H8@@@[T8@@@AG@@@[[N@0@@GCM
)@@G@@'^@[XU*@@DKE/K@[W3/K@[Y[@@@@@@N8K@@A;G@@@A;CK@@Y%8K@@ /K@[XN8KK[XH'=@@@)CN
)@@G@@ @@DKE%8K@@;/K@LXF[@KDKE8KK[XT'=@@@)/K@LXF@@@@@@C C@@@K[@@[#[ S@@@C9K@@[CO
)@@G@@ @@@@JW80@@AG@0@@CG80@@[R]K@@J&'K@@[G9@@@[8K0[X*/K@LXUC@@@@LG9K@@[H8@@@[CP
)@@G@@;G@@@=W8@@@A')H[X5C@@@@KG9@@@[H8@@@[;G@@@=W8@@@A')H[X;/K@[X&C4/DJ/C0/DJ/CQ
)@@G@@C?/DJ/C*/DJ/C=/DJ/C)/DJ/[49@@@[09@@@[?9@@@[*9@@@[=9@@@[)9)@@C@@DJ'/KF@@@CR
)@@G@@C8@@@[[@@DJ;/K@[Y[AA0DK=AA)DK> @@DKP @@DM+C?E@@@(@@@@G'=@@@)/KG[YH/K@[)8CS
)@@G@@/K@[-K/K@[-P/K@[YR/K@[YS/K@[YR/K@[YR/K@[%Q/K@[:4'=@@@)*^E@@]/K@[&^*^E@@#CT
)@@G@@/K@[&A(@E@@]/K@[&^(@E@@#/K@[&AREE@@]C*S@@@%8K@@]/K@[>3CW*@@[H8)@@[!C)C @CU
)@@G@@'=@@@)G^)C @[@)DKT(^I@@@/K@[&ICWY@@@[SKDKZREU@@#C*(@@@%8)@@[/K@[&ECWD@@[CV
)@@G@@[W@DM<C@@DKTRAG@@@A]@DKUC@C@@[[@@DK+O'@@@]AA@DKW(C@C^6/K@[Y_R')C^6/K@[Z@CW
)@@G@@R')C^,'^@[!1*@@@@I/K@[>6[C@DKQN*W@@@CWKDM<G8@@@[&;@@@[8KK[ZE/K@[ZU%SW)@@CX
)@@G@@/K@[ZCH@@DKHCO/@@@/G0[&K[^@DKQ[^KDK3'^@[!C*C@DK3/K@[>-C8@@@[[4@DM+'^@[&"CY
)@@G@@C@@DKU'^@[,[/K@[=)1@G@@@'=@@@)[C@DM>C8@@@[[4@DM+'^@[)O(^@DM>/K@[&Q*0@DM+CZ
)@@G@@/K@[&SRE@DM>C=S@@@HSKDM=RAKDM>?0T@@@/K@[&UCST@@@[^KDK3'^@[!C*C@DK3/K@[>-DA
)@@G@@RAKDM>CS)DM=HS)DM<N@K@@IC^)DKWGW)DM=[^)DM&G@)@[[H8)@@[C@0@@IG09@@@&;)__"DB
)@@G@@&;0__"8KK[Z"/K@[)[C@I)@@[@J)@@/K@[Z/C9@@@[R'K@@=PQKDM<;(D@@@RE@DM>C^@DKWDC
)@@G@@G)C@@@)[G@@@[[W@@@C8@@@]C^KDM>[^KDKQC@)DKUC@"@@[[@0DK+'^@[&"C@@DKU'^@[,[DD
)@@G@@/K@[=)@@@@@@RE@DM> ^@DM>R+S@@@N0S@@@C@0@[[C[@@@DG9@@@[ 0@DM+OAKDKW @@@@LDE
)@@G@@C@T@@@CW)DM<O'@@@]8KK[)=/K@[)5%S*@@@/K@[),AA@DM>[X@DM=[TKDM<H@0@[[[O0DM<DF
)@@G@@/CK[),C8@@@[[0@DM+/GK[)0/K@[)2G1S@@@G1C@@@;*K@@[O'@@@[/K@[)+[TKDM=[P@DM=DG
)@@G@@/K@L)OC@KC A[@KDK&C@%@@]*CE@@]/K@[-J;*)@@M;G)@@6W8)@@A(@@@@J/K@[-#G8)@@[DH
)@@G@@[^)DK*O')@@#A])DK$R')DK&/,0[2=*WE@@]'=@@@)C@@DK&[@@C AR])DK> @@CKD/K@TK=DI
)@@G@@'=@@@)C@KC A(@@@@H'=@@@)H8K@@[/K@[)9*^E@@]/K@[&^(@E@@]/K@[&^REE@@]C*S@@@DJ
)@@G@@%8K@@]/K@[>3CW*@@[H8)@@[!C)C @'=@@@)G^)C @[@)DKTCWY@@@[SKDKZ(C@C^6/K@[-(DK
)@@G@@R')C^6/K@[-%R')C^,'^@[!1*@@@@I/K@[>6[C@DKQR]@@@GO'@@@[N*W@@@^@KDK-N@KDK-DL
)@@G@@8KK[-5/K@[-_^@KDK-CO8@@@/G0[-.CSS@@@[^KDK3'^@[!C*C@DK3/K@[>-O'@@@[/K@[-2DM
)@@G@@CSKDKZC@)DKT*^I@@@/K@[+?C80@@[[?0DKPCSKDKZ(C@C^8/K@[+ER')C^8/K@[+FR')C^2DN
)@@G@@'^@[!1/^)[>6CW/@@[/^0[+K'=@@@)[^@DKR(?G@@@/K@[+PC80@@[[00DKPR')C^"'^@[!1DO
)@@G@@/^)[+Y[@@DKSCW/@@[GS/@@[G80@@#[@0DKX/K@[+)G80@@#[@0DKXR]KDKTC@@DKXC[@C^%DP
)@@G@@G9@@@[[ D@@@G@@C^%[@@C^%'=@@@<[[@DKUC80@@[[40DKP/K@[+3C^I@@@%WW@@]'=@@@)DQ
)@@G@@[@@DKUC W@@]G9K@@[[ W@@@C@@DKUC[@CKCN@W@@[^@KDKYG9@@@[[[@CKC[[@DK+[[@DL3DR
)@@G@@[[G@@[R]@DK>R]KDKUREC@@](?@DKP/K@[<VCPS@@@[XKDKZ/K@[<^R]KDKU(4@DKP/K@[<JDS
)@@G@@CS0DKZ[W9@@](0@DKP/K@[<HC9@@@*/K@[<IC9@@@C[!D@@]CW)DKZ;G)@@=W8)@@A(@@@@JDT
)@@G@@/K@[<PG8)@@[C@@DKRGO?@@[[^(@@][O)DKZG8)@@[[^(@@@O'K@@]AAKDKWRE@DKQN*S@@@DU
)@@G@@^CKDKWO'@@@[AA@DKQCC0DKW/@0[<2RA@DKQCO8@@@/C0[<(C8@@@@/K@[<%C8@@@['^@[&"DV
)@@G@@CDKDKWH9K@@[[DKDKWRA@DKQO'@@@[AA@DKQ/K@[<+RE@DKQRAKDKQC@0@@DH@0@@CG80@@]DW
)@@G@@!O8@@@/K@[=A1@D@@@'=@@@)N=T@@@(@@@[['=@@@)R]@DKU&'@@@[O+D@@@ @C)@]8KK[=^DX
)@@G@@/K@[=A @C)@]/K@[=](0@DKP/K@[=HRA@DKWC@@DKROQG@@[P'@@@[ @C@@@C@KDKUC@@C ADY
)@@G@@'^@[?'R])DK>C8@@@][?E@@@/,0@R *@@CKD/K@[&,C8@@@#R])DK>[?E@@@REE@@]*@C@@]DZ
)@@G@@/K@[=>R')DL0/,0[[N*@@DL5'=@@@)R])DK> @@C B @@C C @@CKD/K@TK=C^S@@]'^@[?%EA
)@@G@@[@@DKV(CC@@]/K@[=_CCS@@]'^@[?%R])@@G @@@@G'^@[H-/GK[>O%80@@]/K@[=3/K@[=5EB
)@@G@@%80@@#'=@@@)'^@@$YR]@DKV?WC@@]/K@[&[CPS@@]?[K@@G/K@[&[COS@@@T@K@@G/K@[>^EC
)@@G@@R]@DKVCOS@@@CWC@@]T@K@@G/K@[>^CW8@@@T80@@AG?8@@[H80@@[G@K@@J;GK@@=W8K@@AED
)@@G@@/@)[>HG8K@@[[OKDKZC@@DKU[^W@@]G8K@@[[^W@@@'^@[,[/K@[=W;*K@@[;CK@@N[@KDK)EE
)@@G@@C/@C]7/,0@HSC8@DLOC8K@@-/,0@I(C@@DK)/,0@J=R#@DKI'=@@@I/K@[&WC/@C]7/,0@HSEF
)@@G@@C8@DLEC8K@@M/,0@I(C^KDK3[@KDK)C@@DK)/,0@J=C/@@@(/,0@I[C@@DK)/,0@JJC/@@@)EG
)@@G@@/,0@I[R#@DKI'=@@@I/K@[&MR#@DKJ'=@@@I/K@[&CC/@C]7/,0@HSC8@DLIC8K@@=/,0@I(EH
)@@G@@[@KDK)C@@DK)/,0@J=R#@DKI'=@@@I/K@[&GR#@DKK'=@@@I/K@[&YC8@@@./K@[&2C8@@@"EI
)@@G@@/K@[&2C8@@@_/K@[&2C8@@[@/K@[&2C8@@[[/K@[&2C8@@[]/K@[&2C8@@[#/K@[&2C8@@[^EJ
)@@G@@/K@[&2C8@@[ /K@[&2C8@@[A/K@[&2C8@@[B/K@[&2C8@@[C/K@[&2C8@@[D/K@[&2C8@@[EEK
)@@G@@/K@[&2C8@@[F/K@[&2C8@@[G/K@[&2C8@@[H/K@[&2C8@@[I/K@[&2C8@@[J/K@[&2C8@@[KEL
)@@G@@/K@[&2C@@@[L/K@[&2C8@@[M/K@[&2C8@@[N/K@[&2[@@CKD[@@CKBC/@C]7/,0@HSC8@DL*EM
)@@G@@C8K@@R/,0@I(C@@CKD/,0@J=R#@DKI'=@@@I/K@TK=@@@@@@RA@DKQ*@@@@G/K@[$HC[KDK+EN
)@@G@@C1C@@@(@@@@K'=@@@)RAKDKW&'K@@[O+S@@@8^@[$F/K@[?O[[T)@@/K@[$D%8@@@[/K@[?&EO
)@@G@@CSS@@@[^KDK3'^@[!C*C@DK3'=@@@)CCKDK4%@KDKU/K@[$=*?@DM+'=@@@)C8@@@[[*@DKPEP
)@@G@@ ^@DK<*4@DM+/K@[$)C@@DKY/K@[$&RAKDK5C@D@@][@@DKY/K@[$&[^KDK<C@H@@['^@[,OEQ
)@@G@@C8@C C[C@DK4C^@DK3C@KDK4(C@C^6/K@[$\C8)@@]/K@[$0C8)@@['^@@,@9*@DK69*)DK8ER
)@@G@@[[@DK'/CK[$6'=@@@)*?@DM+/K@[$/RAKDKWRA@DKQO+S@@@/K@[$.RAKDM&AEKDK<[@(@@@ES
)@@G@@[@)DM$C[KDK+RAKDK7[[T@@@C8@C C'^@[,[**@DKP/K@[*LR'@C CRAKDK<C@@C D%@D@@[ET
)@@G@@/K@[*SC@@C CG8@@@[N@K@@G'^@[8@/K@[*U(4@DM+/K@[*UCW@C E:S@DKZ/K@[*U'^@[?@EU
)@@G@@/K@[*U(?@DM+'=@@@)C^@DKQC1G@@@?9@@@]/K@[(:!9@@@^'=@@@)C=W@@@%8K@@[/K@[(YEV
)@@G@@%9@@@]'=@@@)CC@DK4C@/@@[RE@DK<[@8@@[C@C@@@'^@[,OCWKC E[^KDK4C8@C D[C@DK3EW
)@@G@@C^@DK3C@KDK4(C@C^6/K@[*5C8)@@]/K@[*6C8)@@['^@@,@9*@DK;9*)DK.[[@DK_/CK[*/EX
)@@G@@'=@@@)C@@DK+[@H@@[C8@C C'^@[,['^@[?@C^@DKQC=W@@@%8K@@D/K@[(:C^@DK5CS?@@@EY
)@@G@@%W)C E/K@[(NC@0C DRE@DK<%8K@@D/K@[(J[@8@@]/K@[(:%8K@@C'=@@@)[@8@@[/K@[(:EZ
)@@G@@RE@DK<%8K@@D/K@[(URAKDK/C@9@@][@8@@]/K@[(:RAKDK7C@9@@[[@8@@[/K@[(:%8K@@DFA
)@@G@@/K@[(<%9@@@#'=@@@)/K@[*>%8K@@C'=@@@)%9@@@]'=@@@)/K@[( CCKDK6/@K[(:'=@@@)FB
)@@G@@RA@DKQC=S@@@(@@@@H/K@[(1%8K@@C/K@[%FC@@DM$'^@[,OC^@DK5CS?@@@%W)C E/K@[%FFC
)@@G@@C8@C C[C@DK4C^@DK3C@KDK4(C@C^6/K@[(_C8)@@]/K@[%@C8)@@['^@@,@/CK[%#'=@@@)FD
)@@G@@;C@@@M%8@@@[/K@[%FC[KDK+[[X@@[C8@C C'^@[,['^@[?@RA@DK5C^@DK3CSKDKZ%WC@@@FE
)@@G@@'=@@@)[OS@@@C@*@@[[@*@@]C@)DK+[@*@@[/K@[?**^E@@]/K@[&)(@E@@]/K@[&)REE@@]FF
)@@G@@C*S@@@%8K@@K/K@[%Z/K@[:0%8K@@J'=@@@)R])@@C @@@@G'^@[H-/GK[>O%80@@['=@@@)FG
)@@G@@!8@@@H/K@[&=/@@[&=9*@DLA9*)DLC9?!@@@C8@@@BH@@DLCT8@@@A;G?@@@[@0DL^C@@DLAFH
)@@G@@!8@@@B/K@[%.C8K@@AH@K@@GN@K@@HR'KDL^'^@[\BN@)DL#^@(@@[/K@[:FC@KDLB9?!@@[FI
)@@G@@C@@DLCH8@@@[T8@@@A;??@@@[@)DL C@@DLAC8K@@GH@K@@GN@K@@HR'KDL H8@@@A'^@[\BFJ
)@@G@@(C@C^0/K@[&MQA@C^0&'@@@DP'@@@D9?)DL^CC@C^0;G@@@=W8@@@D*@@@@H'=@@@)N@K@@GFK
)@@G@@2@*)@E/K@[&+%@8@@]/K@[:RCWC@@@;*@@@S;C@@@S[^@DL]C@KDKL[@KDL[C@)C A[@)DK&FL
)@@G@@C80@@#[^0DK*R'KDL@A]KDK$R')DK&/,0[2=*WE@@]'=@@@)C@@DK&[@@C A @@CKDR])DK>FM
)@@G@@/K@TK=P'@@@ 9?*@@@9*)DL^/K@[:FO')@@]'^@[,-!@@DKM/K@[&%[C@DL]'^@[,-!@@DKNFN
)@@G@@/K@[&%AB@DL]C8K@@^[WKDL[/K@[:-@@@@@@CW)C ENCKC @RAKC @&'K@@[2W()@@'=@@@)FO
)@@G@@P]KDKHC^9@@@/@0[?NC@KC D%@Z@@[/K@[?NR'@C CR]K@@JC^@C CG8@@@[N@K@@G'^@[8@FP
)@@G@@/K@L?@RA@DKQCSS@@@RAKC [&'K@@#NCKC [2WT)@@'=@@@)P]KDKOCSKDKZ%ST@@@'=@@@)FQ
)@@G@@[OT@@@C@@DKUC@(@@[[@(@@]C@?@@[[@(@@[/K@[?*[?@DM+/K@[$J 4@DM+/K@L&"@@@@@@FR
)@@G@@;*K@@M/GK[?1;CK@@MC^@C^/CC0C^//K@[?5;*K@@[;CK@@NC^@C^;CC0C^;H80@@#!@K@@JFS
)@@G@@'=@@@)G@@@@H/K@L?%@@@@@@[@@DK?C^!@@@[^)DK,G8@@@[G8K@@[[^KDK!R')DK?/,0[2=FT
)@@G@@*W@DK,'=@@@)C@@DK?[@@C A/K@L?'@@@@@@C^KDK3RAKC [&'K@@#NCKC [2WT)@@/K@[!>FU
)@@G@@P]KDKOAAKDK5CO(@@@(@@@@I/K@[!*;*)@@S;C)@@S[^)DK4C@9@@[NCKC @RAKC @&'K@@[FV
)@@G@@2W()@@/K@[!:P]KDKHAEKDK5C^D@@@(@@@@G/K@[!,[C@DK4 C@DK3/K@L!CC8@@@[[C@DK3FW
)@@G@@/K@[!=C8@@@][C@DK3/K@[!=C8@@@#[C@DK3/K@[!=C8@@@^[C@DK3/K@[!=@@@@@@(CE@@@FX
)@@G@@/K@[!.RBE@@@:WW@@@/K@[!_(OG@@@/K@[!;ORG@@@/K@[!5R;)@@[/K@[,@R;)@@]/K@[,@FY
)@@G@@R;)@@@/K@L!1@@@@@@C@W@@@[^KDK:C@)@@GG8)@@[[@)DK%C@W@@[[@KDK0R')DK\/,0[\PFZ
)@@G@@*W@DK1'=@@@)C@KDK\[@KDK(R')DK(/,0]BS*W@DK:'=@@@)/K@L,[@@@@@@[@@DK0C8@C DGA
)@@G@@[^@DK1R')DK\/,0[\R*W@DK1'=@@@)C@@DK\[@@C BC@@DK2[@@C C/K@L,O@@@@@@*CE@@@GB
)@@G@@/K@[,7C@E@@@;*@@@M/C@[&*;*@@@[;C@@@N!8@@@H/K@[&%!8@@@B/K@[,39?E@@[O')@@]GC
)@@G@@'^@[U(*@@CKD/K@[&*/K@L,-C@E@@[C@KDL#O')@@[/K@[,\N@)@@E*^E@@@/K@[&? @@@@GGD
)@@G@@RE%@@@'^@[H-/GK[>O%80@@]/K@[\[/K@[\#%80@@#'=@@@)R])@[]'^@@$YO')@@[/K@L,-GE
)@@G@@@@@@@@&;@@@[N8)@@ 8KK[\G/K@[\I')G-\J/K@[\E/K@L\B^4(@@@^0(@@@^?(@@@^*(@@@GF
)@@G@@^=(@@@^)(@@@C8@@@[[@@DM0AA0DNZA])DN-'^@]@! @@DM*(@@DPM/K@[\>C@)DO?C@KDPMGG
)@@G@@H@K@@I!@KDO%'=@@@)[^KDM!/,0[05/@)[0)(CE@@[/K@[\5C@E@@[[@@DM4R')DM1/,0@9?GH
)@@G@@R])DN-*@@DM6/K@[\5*C@DM5/K@[\5C^KDM5[@KDM(!@KDO%/K@[\5/K@[\"C@)DO?(@@DPMGI
)@@G@@/K@[\.C@KDPMH@K@@I!@KDO%'=@@@)/K@[\" @@@@H[@KDM%H8K@@[[@KDM:N@)DO%^@)DM?GJ
)@@G@@8K)[0 /K@[02*@@DM*/K@[0QC8@@@[[@@DM*C@KDM%C@)DO%H8)@@[?@)@@H/K@[0 C@0@@HGK
)@@G@@G80@@[[@0DM%[^KDM!/,0[05*@@@@I/K@[0#/K@[0) @@DM*C@@DM:!8@@@@/K@[0V/K@[0 GL
)@@G@@C@KDM:C@0@@HH80@@[[@0DM:/K@[0LC@0DM\[@0DPR/,0]^MRA@DPQC S@@@H9K@@[[[U@@#GM
)@@G@@O'@@@[(@@DM0/K@[0?AAE@@]/K@[0\RAU@@]N@K@@L'^@[8@ WE@@] @@DM0/K@TNZC8@@@[GN
)@@G@@[WE@@]/K@[00AA0DN) @@DM,[CKDM![^KDPN/,0]]:*C@DPN'=@@@)R]KDPO(^D@@[/K@[1YGO
)@@G@@C@@DM,G^D@@[[@@DM,R]@@@DO'@@@#&'@@@]C@%@@[N^T@@[2@*)@@/K@[1YC@@DM,H@@@[[GP
)@@G@@[@@DM,C@@DO?&;@@@[ @@@@KN^KDM!(@@@[[/K@[1Q8KK[1O/K@[1QG[G)@@/K@[1M[^@DPMGQ
)@@G@@G[@DM,[[E@@@P'@@@#C[S@@@[[KDM\ @@@@I/K@TN)(^D@@@/K@[1+C^T@@@/K@[07C8)@@[GR
)@@G@@/K@TN)AA0DN&A])DN$'^@]@!C@E@@#C@U@@^C@%@@@[^)DN+?@K@@G/K@[2Z?@@@@I/K@[10GS
)@@G@@/K@[14?@)@@H/K@[2Z @@DN>/K@[16C9K@@[[[KDN>[@@DN<H@K@@GG8K@@[[@KDN=(@@DN=GT
)@@G@@/K@[2SR')DP&C@@DN<[@E@@@/,0]@_*W@DP*/K@[2ZR')DP,C @DN+[[E@@@C KDP*[ U@@]GU
)@@G@@/,0[2=*WE@@]/K@[2ZC@@DN<*@@DN>/K@[2JG8@@@[/K@[2KG8@@@][@@DN<C@KDN+G8K@@[GV
)@@G@@[@KDN+C@)DN=H8)@@[[@)DN=/K@[1'R])DN$C@@DN+[@E@@[ WE@@] @@C C @@C B/K@TN&GW
)@@G@@C8@@@[[WE@@] @@C C @@C B/K@TN&AA0DN5 )@DOQ'^@]@!C@'@@@/,0][Y*@@@@G'=@@@)GX
)@@G@@C^U@@]G8K@@[[@KDO&C^%@@[[@)DO*(@@DO+/,0[7M/,0[8:/@)[26/,0[86/K@[20R]KDO-GY
)@@G@@O]KDO)C@0DO&[^9@@@G80@@@[@0DO$[C9@@@C@0DO&O'K@@[H80@@[N@K@@JR]@DO*'^@[8@GZ
)@@G@@/,0[7TC[KDO)G[KDO$[[KDO)C8@@@[[@@DO+'^@]C+RAKDPOC^9@@[C@@DN??@@@@J'=@@@)HA
)@@G@@H@@@@J[@@DN?!80@H_/K@[3SC[@@@JG9@@@[[ D@@['^@[4Z/K@[4MC[@@@JT9@@@]&'K@@@HB
)@@G@@O]K@@KC@@@@D?@@DPK'=@@@):@@DPK/K@[3>9?D@@@9*@DN,'^@[4Z/K@[3(C@@DO(C@)DO*HC
)@@G@@C@Y@@@9*@DN,RAKDPOA]KDN!C^D@@@/@@[4E[^@DPN/,0]]:*C@DPN'=@@@)R]KDPOC@)DN?HD
)@@G@@?^(@@['=@@@)H^(@@[[@)DN?C^9@@[!80@H_/K@[3"'^@[55'^@[6#'^@]C+/K@[4MR]@@@DHE
)@@G@@C D@@[T9@@@]O]@@@K9?C@@@9*@DN0C^9@@[H80@@['^@[559?@DN09*@DN,/K@[3('^@[5DHF
)@@G@@'^@[5$R]@DN:9?@DN,9*C@@]C^8@@[G80@@[[^8@@[C@@DO=G8@@@[[@@DO=C@E@@@G8@@@[HG
)@@G@@[@@DO.[@E@@@C@@DPMC@W@@@G8K@@[[@W@@@ WE@@]/K@TN5@@@@@@R]@DPK*)@DOQ/K@[4=HH
)@@G@@O'@@@]A]@DN2C@)DPPG8)@@[:@)@@J/K@[4'!80@H_P;0@@[*)@DOQG80@@[P#0@@IT80@@]HI
)@@G@@N@K@@JC8)@@]C8@@@['^@]D2C[KDO(R]@DN2[[S@@@C@@DO*C[G@@@[[C@@[/K@L4Z()@DOQHJ
)@@G@@/K@[43!80@H_/K@[4_G80@@[H@0@@I/K@[4,@@@@@@C@)DN%/^)[5AC8)@@[/K@[5B @@@@IHK
)@@G@@[@)DN%/K@L5[@@@@@@&'K@@@R]@DPVO]@DN%CCS@@@/@K[5R%CT@@@/K@[5RC@)@@D%^*@@@HL
)@@G@@/K@[5R'^@[5[R]@DPVO]@DN%C@)DN(%8)@@]/K@[5ZCCS@@@C^*@@@C80@@C/,0]^[/K@[5-HM
)@@G@@G8)@@[[@)DN(C^C@@@A#@DN:'^@[5[C@@DOT[CC@@@/K@L5D@@@@@@R]@DN*R]KDN:&'K@@[HN
)@@G@@N8K@W@M]S)@@C@@DOTR]0DN:[CF@@@R]@DN![^C@@@G8@@@[[@@DOT/K@L5$@@@@@@/@0[6@HO
)@@G@@R]@@@DO'@@@]T80@@]N@K@@JC8)@@]C8@@@[N@)@@D'^@]D2R]K@[]9?@DN,9*D@@]/K@L55HP
)@@G@@@@@@@@C^D@@[G8@@@[[@D@@[/K@L6#AA0DPB*?@DOP'=@@@)(0@DOP/,0[_M(@@DOW/,0[7+HQ
)@@G@@/,0[7!/@)[6N/,0[8 /K@[6HC^U@@@G8K@@[[@KDO&C^%@@[[@)DO*(@@DO+/,0[7M/,0[8:HR
)@@G@@/@)[6Y/,0[86/K@[6SR]KDO-O]KDO)C@0DO&[^9@@@O;0@@@[@0DO$[C9@@@C@0DO&O'K@@[HS
)@@G@@H80@@[N@K@@JR]@DO*'^@[8@/,0[7TC[KDO)G[KDO$[[KDO)C8@@@[[@@DO+C@@DOU/,0[6_HT
)@@G@@C@@DOUG8@@@][@@DOUC[KDO>G9K@@[[[KDO>[[KDO=/K@TPBR')DN7/,0[V:R')DN./,0[V:HU
)@@G@@AA0DPCC@KDOVG@@@@HC@)DO([@?@@@C@)DO*C@,@@@[@?@@[C^.@@[G80@@[[^.@@[R]@DO?HV
)@@G@@O]@DO%C@S@@@O;K@@[A#S@@@C8@@@[[@@DOW/K@TPCAA0DPCR]@DN6R]KDO-&'K@@[N8K@W@HW
)@@G@@M]S)@@/K@TPCAA0DPCC[@DOZT9@@W@G[@DO);H@@@=W9@@@W[[@DO([5KDO(/K@TPCAA0DPCHX
)@@G@@R]@DN6R]KDOV&'K@@[N8K@W@M]S)@@C[@DOSR]0DOV[DF@@@ @@DOW/K@TPCAA0DPCC9K@W@HY
)@@G@@H[KDOUC9@@[=H9@@[UC8K@W@T@K@@K;GK@@=W8K@[=(@@@@I/K@[79G8K@@[H[K@@HC8)@@[HZ
)@@G@@?@)@@L/K@[7"/K@TPCC8)@@@/K@TPC@@@@@@&'@@@[&'K@@[M]S)@@/K@L8@AA0DPCC[@DOSIA
)@@G@@T9@@W@;H@@@=W9@@@W*@@@@L'=@@@)[[@DOX0@@DN''=@@@A*4@DN'/K@[6;C8@@@C[0@DN'IB
)@@G@@C@KDOV[^KDN;[[@DN/C8@DN7'=@@@[*@@DOR/K@[8XC8@@@[[@@DOR/K@[8Y @@DOR @@DOWIC
)@@G@@C8@@@][@@DOUC@@DO%G8@@@[[@@DO%C@@DOSG8@@@[[@@DOSC@@DORC@WDO_[@KDOV/K@TPCID
)@@G@@AA0DPCC9K@W@H[KDO)C@)DO&G8)@@@![K@@I/K@[84R;)@@[/K@TPCR;)@@@/K@TPCAA0DPCIE
)@@G@@C[@DOZT9@@W@;H@@@=W9@@@W*@@@@L'=@@@)[[@DO<0@@DO@'=@@@A*4@DO@/K@[6.C8@@@CIF
)@@G@@[0@DO@C@KDO-[^KDO[[[@DO]C8@DN.'=@@@[*@@DOY/K@[9IC8@@@[[@@DOY/K@[9J @@DOYIG
)@@G@@ @@DO+ @@DO)C@@DOYC@WDP [@KDO-C@@DOZG8@@@[[@@DOZ/K@TPCAA0DPB(0@DOP'=@@@)IH
)@@G@@(?@DOP/K@[/O()@DOP/K@["?(@@DO!/K@['-(@@DO1/K@[9,C@@DO\G@@DO,C@W@@@C@0DO1II
)@@G@@H80@@[[@0DO1[@KDO2C@@DO,G8@@@][@@DO,/K@[;7C@)DO\*^I@@@/K@[;#*4@DOQ/K@[/LIJ
)@@G@@(0@DOQ/K@[9'C[KDO0G9K@@[[[KDO! 0@DOQ/K@[9.C[KDO!G9K@@[[[KDO!0@@DN''=@@@AIK
)@@G@@*4@DN'/K@[6;H9K@@[%[KDO3'=@@@)C8@@@][@@DO,*@@DOR/K@['FC8@@@[[@@DOR/K@['GIL
)@@G@@ @@DORC@@DORC@WDO_[@KDO\RB!@@[A#)DO1C@0DO!!@0DOS/K@['YR#KDOR*@@@@H/K@['TIM
)@@G@@C8K@@[/K@['U @@@@HC@)DO![@)DO3/,0["@/K@[9-C8@@@[[4@DOQ/K@[9- @@DOR @@@@HIN
)@@G@@C8)@@@/,0["@0@@DN''=@@@A*4@DN'/K@[6;C@@DORC@/DO_[@0DO\C^J@@[[@@DO1C[KDO!IO
)@@G@@G9K@@[[[KDO!![KDOS/K@[;@C@KDOR*@@@@H/K@['8C8K@@[/K@['9 @@@@HC@)DO![@)DO3IP
)@@G@@/,0["@C@@DO\(^G@@[/K@[9,/K@[9-C80@@[[40DOQ/K@['/*0@DOQ/K@[;DC8@@@[[0@DOQIQ
)@@G@@C@KDO![@KDO00@@DN''=@@@A*4@DN'/K@[6;C@KDP[C@)DO\C^"@@@T80@W@;G0@@=W80@@WIR
)@@G@@*@@@@K'=@@@)C9@@@K[1@DN'[@0DN/[^KDN;R;@DN7'=@@@[0@@DN''=@@@A*4@DN'/K@[6;IS
)@@G@@C@KDP[[@KDO\C8)@@][@)DO,C@0DO5G80@@[[@0DO5R]@DO\(^C@@[/K@[;4C C@@[[[@DO1IT
)@@G@@O]@DO,C[S@@@[[KDO2H9@@@[[[@DO1C@@DO,G8@@@][@@DO,/K@[;7(^C@@@/K@[91/K@[;#IU
)@@G@@C@KDO2;*K@@A;CK@@A;GK@@=W8K@[@C@0DPFH80@@[!@0@@H/K@[/]/,0["K/K@[/#/,0[/<IV
)@@G@@C@@DO"G4@DO2C W@@@H9K@@@H9K@@[[ U@@]G8@@@[[@E@@[C@KDO/G8K@@[[@U@@@[@KDO/IW
)@@G@@ WE@@]/K@TPBC8@@@[[WE@@]/K@TPB/,0[8 0@@DN''=@@@A*4@DN'/K@[6;C8@@@[[?@DOPIX
)@@G@@[4@DOPC@KDOZ[@KDPFC@KDOS[@KDOTC@)DO>[@)DO=/K@[9XAA0DPC(@@DO6/K@[.BC[@DO6IY
)@@G@@H9@@@[?[@@@H/K@[/!%[@@@H'=@@@)/K@[.Z0@@DO@'=@@@A*4@DO@/K@[6.C[KDO6*@@DOYIZ
)@@G@@/K@[/7C8@@@[[@@DOY/K@[/8 @@DOY%[KDO;'=@@@)G9K@@[[[KDO6C@@DOYC[GDP#[[@DO9JA
)@@G@@/,0[.>C[KDO6H9K@@[:@K@@L/K@[.Z(=@DOQ/K@[/!'=@@@) @@DOY0@@DO@'=@@@A*4@DO@JB
)@@G@@/K@[6.C@0@@HT80@[@C[@DP#C9K@@K[1KDO@[ @DO[[@0DO]C8@DN.'=@@@[0@@DO@'=@@@AJC
)@@G@@*4@DO@/K@[6.[[@DO9C[K@@HG9K@@[[[KDO6/,0[.>/K@[/&C@@DOYC@GDP#T8)@@WG@@@@IJD
)@@G@@A#@DO"/K@TPCAA0DPDC[KDO6![KDPF/K@[..C@@DOY*@@@@G/K@[.,C8@@@[/K@[.\ @@@@GJE
)@@G@@C[GDP#[[KDO;T9K@[@0@@DO@'=@@@A*4@DO@/K@[6.[ @DO[[[KDO]C8@@@K[0@DO@C8@DN.JF
)@@G@@'=@@@[/K@TPDC8@@@[[=@DOQ/K@TPDAA0DPC0@@DN''=@@@A*4@DN'/K@[6;C80@@K[00DN'JG
)@@G@@C[HDO_[ @DN;C[K@@IT9K@[@[[KDN/C8@DN7'=@@@[[@)DO3/K@TPCAA0DPCC@@DO7:@K@@GJH
)@@G@@/K@["$C@0@@HT80@[@C[@DP C9K@@K0@@DO@'=@@@A*4@DO@/K@[6.[@0DO][ @DO[[1KDO@JI
)@@G@@C8@DN.'=@@@[0@@DO@'=@@@A*4@DO@/K@[6.[[@DO9[@KDO7C[K@@IT9K@@WG[KDP [[KDO"JJ
)@@G@@/K@TPC/,0[860@@DO@'=@@@A*4@DO@/K@[6.R]KDPUN@KDPT8KK["5/K@[";CCT@@@C^(@@@JK
)@@G@@C80@@C/,0]^[O'K@@[/K@["3R]KDP)N@KDPZ8KK["_/K@[_ CCT@@@C^(@@@C80@@C/,0] WJL
)@@G@@O'K@@[/K@[".R]KDPVN@KDN(8KK[_D/K@[_JCCT@@@C^(@@@C80@@C/,0]^[O'K@@[/K@[_BJM
)@@G@@C8@@@[[)@DOP/K@[9ZAA0DPCC8@DO#'=@@@J/C@[_V*4@DOP/K@]@>R;@DOB'=@@@J/G@]@$JN
)@@G@@C8@DOG'=@@@J/C@[_<*4@DOP/K@]@(R;@DOK'=@@@J/G@]@:R;@@@[A3@DOPC@@C^%C@K@@GJO
)@@G@@G8K@@[[@KDOV[@KDO_C@)@@HG8)@W@[@)DP@C8)@@ET8)@W@G@K@@I[@KDP[G8K@8@[@KDP#JP
)@@G@@C@)@@HG8)@W@[@)DP^C8@@@#T8@@W@G@K@@G[@KDO-[@KDP G8K@W@[@KDPAG8K@W@C@@@@HJQ
)@@G@@[@@C^%'=@@@<C@@C^%C@K@@GG8K@@[[^KDO?G8@@G)[@@C^%'=@@@<C@@C^%C@K@@GG8K@@[JR
)@@G@@[^KDPUG8@@@E[@@C^%'=@@@<C@@C^%C@K@@GG8K@@[[^KDP)G8@@@#[@@C^%'=@@@<C@@C^%JS
)@@G@@C@K@@GG8K@@[[^KDPXG8@@@E[@@C^%'=@@@<C@@C^%C@K@@GG8K@@[[^KDPVG8@@@][@@C^%JT
)@@G@@'=@@@</K@TPCR')DO#/,0[VQR')DOB/,0[VQR')DOG/,0[VQR')DOK/,0[VQ@@@@@@(0@DOPJU
)@@G@@'=@@@)*?@DOP/K@M@!/,0[8 0@@DN''=@@@A*4@DN'/K@[6;C8@@@[[?@DOP[4@DOPC@KDOZJV
)@@G@@[@KDPFC@KDOS[@KDOT/K@M@!AA0DPS'^@]@!C@'@@@/,0][Y*@@@@G/K@][PC@@DPJ[@@DPRJW
)@@G@@/,0]^MRA@DPQC S@@@H9K@@[[ U@@]O'@@@[*@@DP=/K@][TRAU@@[N@K@@L'^@[8@ WE@@]JX
)@@G@@ @@DP=/K@TPSC8@@@[[WE@@] @@DP=/K@TPSAAE@@[/K@][MC8@@@[[@@DP=/K@]@_AA0DPCJY
)@@G@@ )@DOQ[@0DPIC[@DO=?[@@@J/K@]]>(@@@@J/K@]]$R]@DO?&'@@@[N@KDO% @@@@L @@@@HJZ
)@@G@@G S)@@?[K@@J/K@][\/K@][2G8K@@[8KK][:'=@@@)P'@@@[C@C@@@[@@DN?AA@DPMH S@@@KA
)@@G@@G9K@@[[[KDPGC C@@@[[@DPH[^KDPN/,0]]:*C@DPN'=@@@)R]KDPOC@)DPIH@)DPG[@)DPPKB
)@@G@@C^D@@[(@@@@G/K@]]NH8@@@[?@@@@I/K@]]OT8)@@]G8)@@]O]K@@IC@D@@@[@@DPJ C@DPNKC
)@@G@@A]KDPK @@@@G/K@TPC/K@]]OG8)@@[(^D@@@/K@]]>H@)@@GH8)@@[[@)DPPC@@DN?H^D@@[KD
)@@G@@[@@DN?C^T@@@[^KDPN/,0]]:*C@DPN'=@@@)R]KDPOC@)DPP/G)]]>/K@]]#C8@@@[/K@TPCKE
)@@G@@C8@@@[[)@DOQG80@@[/K@][)AA0DPD @@DPLC^KDPN(@@DN(/K@]]"N@KDN(R]@DPV8KK]]4KF
)@@G@@/K@]]":CS@@@/K@]]8O'@@@[/K@]]2C^C@@@[^@DPOC8@@@[[@@DPL C@DPN/K@TPD(@@DPTKG
)@@G@@/K@]#0N@KDPTR]@DPU8KK]#^/K@]#I:CS@@@/K@]#CO'@@@[/K@]#]C^C@@@[^@DPOP]@DPUKH
)@@G@@AA@DPW C@DPN/K@TPDR]KDPUO]KDPYC@0DPT%80@@E/K@]#WC@@DPXG@@DPY(@G@@@/K@]#WKI
)@@G@@ @G@@@CCT@@@C^(@@@C80@@C/,0]^[C^KDPNC^(@@@C80@@K/,0]^[[CT@@@C[KDPY[[KDPWKJ
)@@G@@G9K@@[%9K@@E/K@]#$ @@@@L[[KDPYC@@DPT:8@@@E/K@]#!G8@@@[[@@DPT[@)DPO C@DPNKK
)@@G@@/K@TPDR]@DPUR]KDO_N8K@@E&'@@@[8KK]#6/K@]#9AAS)@@O'K@W@/K@]#4Q]@DPVR]KDP[KL
)@@G@@N8K@@]8KK]#"/K@]#IAAS)@@O'K@W@/K@]#/AA0DPE0@@DN''=@@@A*4@DN'/K@[6;C[@@@HKM
)@@G@@T9@@[@[[@DN/[^)DN;[00DN'R;@DN7'=@@@[0@@DN''=@@@A*4@DN'/K@[6;/K@TPEAA0DPDKN
)@@G@@C@KDPR;*K@@A;CK@@A;GK@@=W8K@[@[@)DP+[@KDP<C@0DOZH80@@[?@0@@H/K@] Q(@@DPZKO
)@@G@@/K@] HN@KDPZR]@DP)8KK]^=/K@]^,:CS@@@/K@]^*O'@@@[/K@]^+C^C@@@T8)@@WG@@@@IKP
)@@G@@G4@DPR[^@DPQ/K@TPDR]KDP)O]KDP-C@0DPZ%80@@#/K@]^7CCT@@@C^(@@@C80@@C/,0] WKQ
)@@G@@C@KDP<C^(@@@C80@@K/,0] W[CT@@@C[KDP-G9K@@[%9K@@#/K@] [ @@@@L[[KDP-C@@DPZKR
)@@G@@:8@@@#/K@] BG8@@@[[@@DPZC@0DP+T80@@WG@)@@JG4)DPR[^)DPQ/K@TPDR]@DP)R]KDP#KS
)@@G@@N8K@@#&'@@@[8KK] N/K@]^,AAS)@@O'K@W@/K@] LG80@@[%@0@@H'=@@@)C@@DOYC@?DP KT
)@@G@@/K@] BAA0DPE0@@DO@'=@@@A*4@DO@/K@[6.C[@@@HT9@@[@[[@DO][^)DO[[00DO@C8@DN.KU
)@@G@@'=@@@[0@@DO@'=@@@A*4@DO@/K@[6./K@TPEAA0DP>'^@]@!C@E@@@:8@@@@/K@] /C@)DO=KV
)@@G@@?@)@@G'=@@@)H8@@@[[@E@@@/,0[2=C@U@@@G8K@@[[@U@@@/K@TP>C8K@@[[WU@@]/K@TP>KW
)@@G@@AA0DP6A])DP4'^@]@!/,0]BD*@@@@I/K@]B#C@E@@#[@@DP2C@U@@^H@K@@GG8K@@[[@KDP3KX
)@@G@@C@%@@@[@)DP1(@@DP3/K@]A/R')DP&C@@DP2[@E@@@/,0]@_*W@DP*/K@]B#R')DP(C@KDP&KY
)@@G@@[@U@@#[@U@@^/,0]C,*W@DP:/K@]B#C@)DP&!@)DP1/K@]A</K@]A)C@0DP1H80@@[[@0DP1KZ
)@@G@@R')DP,C[@DP1[[E@@@C KDP*[ U@@]/,0[2=*WE@@]/K@]B#C[KDP1?[KDP2/K@]A\/K@]A5LA
)@@G@@G9K@@[[[KDP1C@KDP2G8K@@[[@KDP2/K@]A8C@KDP1G8K@@[[@KDP1C@@DP3H8@@@[[@@DP3LB
)@@G@@/K@]AHR])DP4 WE@@]C@E@@@[@E@@[ @@C C @@C B/K@TP6R])DP4C8@@@[[WE@@] @@C CLC
)@@G@@ @@C B/K@TP6AA0DP5C@E@@@C@U@@#C@%@@^?@)@@H/K@]BO!@@@@H/K@]BM/K@]BQ?@)@@GLD
)@@G@@/K@]BQC8)@@[/K@TP5 @@@@I/K@TP5AA0DP9'^@]@!AA)DP'C@E@@@R')DP;[@E@@@/,0][VLE
)@@G@@*W@DP./K@]CZC^'@@]G80@@@C@@DP'C G@@]!@0@@K/K@]CIC@K@@KG8K@@[[@KDO&C^?@@[LF
)@@G@@[@)DO*(@@DO+/,0[7M/,0[8:/@)]B2/,0[86/K@]B?R]KDO-O]KDO)C@0DO&[^9@@@G80@@@LG
)@@G@@[@0DO$[C9@@@C@0DO&O'K@@[H80@@[N@K@@JR]@DO*'^@[8@/,0[7TC[KDO)G[KDO$[[KDO)LH
)@@G@@C8@@@[[@@DO+'^@]C+C@@DPKC@KDO([@W@@@R])DP'RAU@@[C@(@@@[@?@@[/K@]CXC@K@@KLI
)@@G@@G8K@@[[@KDO&RAKDPQ[^T@@@O'K@@[H8K@@[N@K@@HR])DP'RAE@@[C[S@@@'^@[8@'^@]C+LJ
)@@G@@C@@DPK[[W@@[ WE@@]/K@TP9C8@@@[[WE@@]/K@TP9@@@@@@9*@DP7*@@DPL/K@]C?C@@DPWLK
)@@G@@!8@@@E'=@@@)G@@DPXC8K@@B[@W@@@9?@DP7/K@MC+AA0DP_'^@]@!C@%@@#C@'@@^C[@DO=LL
)@@G@@!8)@@[/K@]C6/K@]D\?[@@@I/K@]D\?@0@@I/K@]D\![@@@J/K@]C.C@0@@KC@@@@JH@@@@ILM
)@@G@@G8@@@[[@E@@@[^@DP"C@@@@IP;@@@[[@E@@[[C0DP"CC0DP"(^@DP"/K@]D(/,0][Y'^@]C+LN
)@@G@@C^@DPOC^W@@[C@0@@HH80@@[[^/@@[C@)DPPG8)@@[:@K@@I/K@]DY?@K@@I'=@@@)RA@DPKLO
)@@G@@O'@@@]H@K@@IT8K@@]N@K@@HC8)@@] @@@@G'^@]D2R]KDPMC@D@@@H8@@@[[@D@@@CC@DP"LP
)@@G@@H8@@@[[C@DP"C^@DP"H8@@@[[^@DP"/K@]DAC@@DO=H@E@@@[@@DO=C@E@@[[^@DO./K@TP_LQ
)@@G@@C8@@@[[WE@@]/K@TP_@@@@@@/@@]D/O]@@[[P'@@@[R]K@@CO]K@@I&'@__"&'K__"M]S)@@LR
)@@G@@/K@MD2R]K@@CP]K@@I&'@@@[&'K@@[M]S)@@/K@MD2AA0DQ@A])DQ C\'@@@ @@DQ[%;0@@]LS
)@@G@@/K@]EF @@@@VR;@@@[A#@DQ[ @@@@TR[0@@EO90@@]CX'@@@C9)@[C*@@C^TC9)@]^C/@DQPLT
)@@G@@/,0@HS/,0@H\R#@@@BP#@DQ :@@@@N/K@]F_G;K@@['^@]G>0@@@@H/K@TQ@R[K@@HR[)@@ILU
)@@G@@C])@@GC'0@@[/B0]FN:80@@#/K@]E*:80@@^/K@]F0C]0@@J/K@]FNN[@@@Q8 )]E:/K@]J.LV
)@@G@@ @@@@H @@@@I&9K@@[&9)@@[')A]GS;?K@@AO#)@@G$9)@@A/K@]E5Q9)@@[8 )]E\R#@DR8LW
)@@G@@A#@DQAA#@DQBA#@DQCR[@DR9W@KDR'N[)@@HR#K@@IR;0@@ /@K]FCR#)@@H @@@@HW8K@@ELX
)@@G@@O;)@@0')J]GZ8#0]E_R;0@@ /K@]E_R#K@[A/@K]FI @@@[AQ9@DQBR;0@@]/K@]E_R#@@[^LY
)@@G@@CY?DQDR!?DQDR WDQDC'0@@]O[0@@U8 )]FQ/K@]J.&9K@@[&9)@@[ @@@@P:'0@@[C'K@@[LZ
)@@G@@C/@DQP/,0@H>/,0@IR!@@@@M'^@]G^')A]GS/B0]F//AK]F(C'K@@[%8@@@0/K@]F( @@@@PMA
)@@G@@*@@@@QR;@@@ /,0@I[$9)@@A/K@]F!Q9)@@[8 )]FX/,0@H\/K@]EPC]!@@@C/@DQ1/,0@HSMB
)@@G@@R#@@@QR;K@@G/,0@JX/,0@H\R9KDQ7R9)@@[C')@@GC'0@@[/K@]FNR;K@@]/,0@JX/K@]F%MC
)@@G@@C/@DQP/,0@H>'^@]G^/,0@H\/K@TQ@@@@@@@/,0@H\R#@DR;'=@@@I(@@DQ[/K@]GI(@@C^QMD
)@@G@@/K@]GIR;@DQ]'=@@@CC/@DQP/,0@HS/K@MG^/S@@@@C6!@@@C2!@@@C,!@@@C%!@@@C&!@@@ME
)@@G@@C+!)@@/S@@@@R7 @@@R3 @@@R\ @@@R: @@@R$ @@@R< )@@A7=)@@A3=@@@A\=@@@A:=@@@MF
)@@G@@A$=@@@A<=@@@@@@@@@*CB@@@/K@]HHRJB@@@/G@]G6/@@]I\R;0@@[R;)@@[R#K@@BO;K@@[MG
)@@G@@ @@@@KC[K@@GH9K@@[W9@@@AG9@@@]C#)@@K/K@MG>RRB@@@R;0@@]R;)@@[R#K@@BO;K@@[MH
)@@G@@ @@@@KC[K@@GH9K@@[W9@@@AG9@@@]C#)@@KC5H@@@:9@@@0/K@]HA'^@@$Y/K@]HB'^@]IVMI
)@@G@@A#@DQ'R;@@@AR;KDQ'R;)@@[R;0@@#/K@MG>*^B@@@/K@]HMC;)@@[ @@@@G/K@]H(RJB@@@MJ
)@@G@@1@@@@G/K@]HZR:B@@@%8@@@)/K@]H\R#B@@[R#KDQ;'^@[U(*@@CKD/K@]J;C;)@@]/K@]H(MK
)@@G@@R])@@G @@@@G'^@[H-0@@@@H/K@]I_C;)@@[:80@@[/K@]JI/@@]JC'^@@$YRE$@@@'^@[H-ML
)@@G@@0@@@@H/K@]JT/@@]J./K@MG>+8@@@B!8K@@^/K@]IMR])@@HRFB@@@R\?@@@RZG@@[;*@@@SMM
)@@G@@;C@@@SRFR@@[/@K]I^%8)@@[R\!@@@RZX@@[P;K@@[!CKC @/K@]I\OBKC @RZX@@@;*K@@SMN
)@@G@@;CK@@S'^@@,@/GK]I1')E]II[[@DQ7R;KDQ7R;)@@[R;@@@AR;0@@^C;)@@]/K@MG>/S@@@@MO
)@@G@@C[@@@IC[@@@J/S@@@@R])@@B'^@[JZ*@@CKD/K@]J;/GK]I;C#)@@K:80@@#R;0@@^/K@MG>MP
)@@G@@@@@@@@N@K@@G @@@@G8KK]I)/K@MIVR#.@@@O;K@@[N8)@@  @@@@I;?)@@#%8)@@A/K@]KIMQ
)@@G@@ @@@@I;?)@@#;*@@@#O#@@@I8KK]I!/K@MIV8K)]I</K@]I)R#KDR//K@]JT;*K@@[;CK@@NMR
)@@G@@R#XDQ//GK]I7;*K@@M/K@]JT @@@@I @@@@J @@@@K/K@]IA;*K@@[;CK@@NC[HDR /K@]KCMS
)@@G@@;*K@@[;CK@@NC[@@@HC/@DQP/,0@HSC8@DREC8K@@X/,0@I(/K@]J-C/@DQP/,0@HSC8@DREMT
)@@G@@C8K@@X/,0@I(/K@]K]C/@DQP/,0@HSC8@DREC8K@@X/,0@I(R#@@@T/,0@J=C8@DRJC8K@@JMU
)@@G@@/,0@I(/K@]J8;*K@@[;CK@@NC[@@@HC/@DQP/,0@HSC8@DRMC8K@@O/,0@I(R#@@@T/,0@J=MV
)@@G@@:9@@@#/K@]J5:9@@@]/K@]J1:9@@@[/K@]J!C8@DRQC8K@@Z/,0@I(/K@]J8C8@DRWC8K@@HMW
)@@G@@/,0@I(/K@]J8C8@DRZC8K@@S/,0@I(/K@]J8C8@DR<C8K@@(/,0@I(/,0@H\R#@DR;'=@@@IMX
)@@G@@R#KDR./K@MG>C/@DQP/,0@HSC8@DRMC8K@@O/,0@I(R#@@@T/,0@J=C8@DR%C8K@@K/,0@I(MY
)@@G@@/K@]J8C/@DQP/,0@HSC8@DR!C8K@@>/,0@I(/K@]J-C/@DQP/,0@HSC8@DRMC8K@@O/,0@I(MZ
)@@G@@R#@@@T/,0@J=C8@DR4C8K@@O/,0@I(/K@]J8C >@@[;H)@@=W9)@@A/['@@@C'0@@ R@P@@@NA
)@@G@@O@K@@MR@)@@N/K]]K-[21@@@[,1@@@[%1@@@[&1@@@[+1@@@G9)@@[/KE@@@[-M)@@/?L@@@NB
)@@G@@[5M@@@[1M@@@[!M@@@[(M@@@[>M@@@/?K]K(%)^)@@/K#@@[/?3@@@:4^@@@:0^@@@:?^@@@NC
)@@G@@:*^@@@:=^@@@/?0]K1;H)@@=W9)@@AR@0@@N&9@@@[Q[@@@M/KE@@@[4^)@@/?3@@@[)^@@@ND
)@@G@@[=^@@@[*^@@@[?^@@@[0^@@@/?0]L@C4])@@/?L@@@C)]@@@C=]@@@C*]@@@C?]@@@C0]@@@NE
)@@G@@/?K]LC;H)@@=W9)@@AR80@@ P@0@@N&.@__"Q[@@@M/KE@@@;H)@@=W9)@@AR@K@@N&8)@@[NF
)@@G@@Q@)@@M/KE@@@;H)@@=W9)@@AR8K@@ P@K@@N&/)__"Q@)@@M/KE@@@AA)DS@/,)]KTQ@P@@@NG
)@@G@@?9)@@R/K@]L\A^KDR"O8K@@QR#@DR"'=@@@IH9)@@Q/K@]L$A^KDR_[!)DR_R#@DR_'=@@@INH
)@@G@@/K@TS@AA)DS]/,)]KT[D)DS[R@P@@@A^KDS[R#@DS['=@@[S/K@TS]C4I@@@C0I@@@C?I@@@NI
)@@G@@C*I@@@C=I@@@/,@]M]C)I)@@Q;K@@@/KC@@@C)])@@/?L@@@C4]@@@C0]@@@C?]@@@C*]@@@NJ
)@@G@@C=]@@@/?K]M [)^)@@/?3@@@[4^@@@[0^@@@[?^@@@[*^@@@[=^@@@/?0]MHR#@DS '=@@@INK
)@@G@@/K@]M(R#@DSA'=@@@I/K@]M(R#@DSB'=@@@I/K@]M(R#@DSC'=@@@I/K@]M(R#@DSD'=@@@INL
)@@G@@/K@]M(R#@DSE'=@@@I/K@]M(R#@DSF'=@@@IR#@DS#'=@@@IR#@DS^'=@@@I'=@@@DCE>@@[NM
)@@G@@C >@@[L])@@M/];@@@/,)]LRO^>@@@O@KDT[/F@]M;C9K@@-')[)@@E#@@@SH'0@@[/]0]NINN
)@@G@@C[)@@S?#@DT]/K@]N@C[0DT]/K@]NCC90@@E?#@@@N/K@]N T90@@E/K@]N[;H0@@=W90@@ENO
)@@G@@/[0]NI @@@@LW[K@@NG9K@@0')[)@@H'0@@[/A0]N H])@@R[A>@@[/KF@@@CBA@@[8A@]NPNP
)@@G@@ @ K@@/KF@@@R@KDT#&8)@@[Q^&@@@C'0@@[ @@@@M')[)@@:8@@@+/K@]N)%8@@@-/K@]N<NQ
)@@G@@C"0__"H;@@@[')[)@@T9)@@EH8@@@0G[)@@G8A@]N-T[)@@R/ )]N( @@@@M[[>K@@/KF@@@NR
)@@G@@')H+L/;&G@@@/ED@@@H9@@@[/KF@@@R@K@@J @@@@MO8K@@]>#1@@@/K@]N7G9)@@[/K@]N2NS
)@@G@@>#-@@@/K@]N28^)]N2/K[K@[?  @@[/K@]O:C >@@[/[:@@@&9@@@[Q  @@@R@0DT^H[@@@MNT
)@@G@@H9)@@[')H+L/')#)@@8^)]O^/H:@@@/K@]O:C90@@[')H+L/;&G@@@/E@]OL;AG@@@ @@@@NNU
)@@G@@H9@@@[/ @]OE/ )]OU/[F@@@/ 9@@@&;K@@@8#K]OSQ;K@@ H8)@@[&;K@@[/KF@@@/[D@@@NV
)@@G@@/K@]OOQ@>@@@&8)@@[C >@@[C[0@[B @@@@O @@@@PR8K]MB&8K@@[8^)]O>')[)@@;&G@@@NW
)@@G@@)[0@@O;AG@@@8^)]O>/KF@@@G80@@]*4J@@@/K@]O:Q3Z@@@QB\@@[CDJ@@[/KJK@@R#@DT NX
)@@G@@'=@@@I'=@@@DC >@@[/[:@@@T9)@@AR8K@[CP@K@@M9!>K@@;H-@@@;!-@@@&9)@@#H;@@@[NY
)@@G@@/JF@@@9.&)@@/K@]O"P9)@@[/KAK@@R[0@@ CF@DTUCBP@@[CAA@@[KA@DTU!EP@@[CEP@@[NZ
)@@G@@[EKDTUH]@@@SC])@@OG]@@@T!E @@[CE @@[[A @@[/])]P\H]@@@P/]@]P\CA0DTUGA0@@SOA
)@@G@@/I)]PXH'0@@[G]0@@OC[)@@R/,)]LX/K@]PZC[)@@R/,)]LRG]0@@QC[)@@R/I)]P&/,)]LKOB
)@@G@@O@KDTEO@0DTF/K@]P(/,)]K'O@KDTGO@0DTHO^>@@@O  @@@H'@@@[')[)@@')#)@@8 @]P?OC
)@@G@@R9KDTT/,)]RB1@B@@@/KF@@@R[K@@BR])@@FC5>@@@%9)@@)/K@]L4/K@]L=Q;K@@@N@)@@IOD
)@@G@@A]Z@@@A]_@@[$B0DUA/\@]MS[#\@@@*@@@@SC;@@@[[3J@@@A Z@@@R8K]QRA@Z@@[$B0DUAOE
)@@G@@/\@]MSR8K]QKA@Z@@@[0Z@@@[DJ@@[[^\@@[$B0DUA/\@]MS/KJK@^*0J@@]/K@]QN8^@]QPOF
)@@G@@G80@@^/KJK@@')H+L//K@]QE^^)DTTR]@@[#P'@@@^&;@@@[QBC@@[H@@@[]T8@@@AG0C@@@OG
)@@G@@[^@DTUCCC@@[H@@@@K[C@DTUR[0@@CC#@@[^C#K@[AG80@@^$ 0@@J/K@]R >#R@@@/K@]Q$OH
)@@G@@R8R@@]=#[@@@/K@]Q0O8K@@]/K@]Q? 4[@@@R R@@@ ^ @@[R9)DTRC -@@[[[)DTRC11@@@OI
)@@G@@[10DTRH $@@[T.)__9G1$@@@H[)@@N[[)DTS/,)]RB1@ @@@/K@]Q$R')]Q$C5>@@@%9)@@)OJ
)@@G@@/K@]L4/K@]L=C@0@[#/KJK@[(^A@@[/KE@@@CD5@@[H 5@@[/['@@@! 6@@[C 6@@[C])@@NOK
)@@G@@&9@@@[Q  @@@&8)@@[Q^&@@@R@0DTIR@KDTJCAP@@[G])@@P/]K]RW @@@@OW'@@@AO[@@@OOL
)@@G@@/AK]R=*0A@@@/K@]R= @@@@MW9)@@AN@K@@MM[])@@/[0]R%/K@]R&O@0@@PO0Q@@@H90@@[OM
)@@G@@')[)@@')#)@@8^0]R$[A>@@[/KE@@@C[0DTV/ 0]R/R#0DTK&;)@@[&;K@@[C#)DTLC#0DTMON
)@@G@@N[@DTNN[KDTON[)DTPN[0DTQN@0@@JG90@@[[[0DTV&'0@@@/KE@@@:[)DTX/K@]R7R#0DTWOO
)@@G@@[[_@@@C[)DTX[[\@@[C90@@@$B0DUA/\@]MS/K@]R\CGF@@@OY;@@@/KF@@@R#@DV&R^KDWJOP
)@@G@@P8K@@[C )DWK[[-@@@C[)DTVH9)@@[/ )]SS:80DU^/K@]SSG80@@][@0DTWC[\@@[[[)DTXOQ
)@@G@@C[\@@@[[)DTVN8K@@ R@KEHAR@)EHBM@-)@@N8K@@TR@KEHCR@)EHDM@-)@@N@KDV/R@KDV.OR
)@@G@@R@)DV"OY;@@@*4F@@@/KF@@@O'0@@[/K@]S>^@KDV/A@KDV.A@)DV"N8K@@TR@KEHCR@)EHDOS
)@@G@@M@M)@@N8K@@ R@KEHAR@)EHBM@M)@@R@KDV.R@)DV"&'0@@[R;F0@@C ?@@@!D)DWKCD)DWKOT
)@@G@@[ )DWKO;@@@[AB@DWJR;F0@@AB@DWLCD)DWM[ )DWMC[)DV&/,)]R? ^@DWGR9KDWFR9)D%KOU
)@@G@@/,)]RB ^@DW8R9KDW7R9)DWJ/,)]RBQB)DW7C @DW8R9K#5TC#@TWAR'K]UC/,0]P9R9KDW7OV
)@@G@@R9)DW^/,0]P^ ^@D%&R9KD%>R9)D%Z/,)]RBR9KD%>R9)DW4/,)]RBR9KD%>R9)DW7/,)]RBOW
)@@G@@QB)D%>C @D%&R9K#6=C#@TWAR'K]T&/,0]P9/K@]0KQB)DWQC @DWRR9K#66C#@TWAR'K]T!OX
)@@G@@/,0]P9/K@]V(QB)DWQC @DWRR9K#7]C#@TWAR'K]U\/,0]P9QB)DWQC @DWRR9K#7HC#@TWAOY
)@@G@@R'K]T//,0]P9R9KDWQR9)D7I/,0]P^C )DWR[[)T7OC[)T7OH[)T7L/ )]U#/K@]01/K@]UCOZ
)@@G@@ ^@D%HR9KD%GR9)DWQ/,)]RB/K@]07 ^@DWRR9KDWQR9)DW7/,)]RB ^@DW5R9KDW4R9)D7RPA
)@@G@@/,)]RB ^@DW8R9KDW7R9)D%Z/,)]RBQB)DWQC @DWRR9K#7LC#@TWAR'K]UV/,0]P9/K@](APB
)@@G@@QB)DWQC @DWRR9K#7XC#@TWAR'K]U%/,0]P9R9KDWQR9)D7I/,0]P^ ^@D%HR9KD%GR9)DWQPC
)@@G@@/,)]RB/K@]07/K@]U\ ^@D%HR9KD%GR9)DWQ/,)]RB/K@]07 ^@DWRR9KDWQR9)DW4/,)]RBPD
)@@G@@QB)DWQC @DWRR9K#7-C#@TWAR'K]01/,0]P9R9KDWQR9)D7Z/,0]P^ ^@D%HR9KD%GR9)DWQPE
)@@G@@/,)]RB/K@]07 ^@DW*R9KDW$R9)D7+/,)]RB/K@]W- ^@DW*R9KDW$R9)D7>/,)]RB/K@]W-PF
)@@G@@ ^@DW*R9KDW$R9)D7*/,)]RB/K@]X: ^@DW*R9KDW$R9)D7:/,)]RB/K@]X: ^@DW*R9KDW$PG
)@@G@@R9)D%Z/,)]RB/K@]X) ^@DW*R9KDW$R9)D7,/,)]RB/K@]W- ^@DW*R9KDW$R9)D71/,)]RBPH
)@@G@@/K@]W- ^@DW*R9KDW$R9)D74/,)]RB/K@]W0 ^@DW*R9KDW$R9)D77/,)]RB/K@]W0 ^@DW*PI
)@@G@@R9KDW$R9)D74/,)]RB/K@]W0 ^@DW*R9KDW$R9)D7'/,)]RB/K@]V/ ^@DW*R9KDW$R9)D7.PJ
)@@G@@/,)]RB ^@D%&R9KD%>R9)D%Z/,)]RBR9KD%>R9)DW7/,)]RBR9KD%>R9)D%Z/,)]RBQB)D%>PK
)@@G@@C @D%&R9K#7>C#@TWAR'K]01/,0]P9 ^@D%&R9KD%>R9)D8@/,)]RBR9KD%>R9)DW$/,)]RBPL
)@@G@@R9KD%>R9)D8#/,)]RBR9KD%>R9)D%D/,)]RBR9KD%>R9)D8B/,)]RB ^@DWMR9KDWLR9)D%>PM
)@@G@@/,)]RB/K@]0_ ^@D%&R9KD%>R9)D8E/,)]RBR9KD%>R9)DW$/,)]RBR9KD%>R9)D8#/,)]RBPN
)@@G@@ ^@DWMR9KDWLR9)D%>/,)]RB/K@]0_ ^@D%&R9KD%>R9)D%Z/,)]RBR9KD%>R9)DW7/,)]RBPO
)@@G@@R9KD%>R9)D8H/,)]RB ^@DW8R9KDW7R9)D%>/,)]RBQB)DW7C @DW8R9K#8#C#@TWAR'K]01PP
)@@G@@/,0]P9QB)DW%C @DW:R9K#8-C#@TWAR'K]XF/,0]P9/K@]01 ^@D%&R9KD%>R9)D8O/,)]RBPQ
)@@G@@R9KD%>R9)DW$/,)]RBR9KD%>R9)D8#/,)]RBR9KD%>R9)DW%/,)]RBR9KD%>R9)D8R/,)]RBPR
)@@G@@ ^@DWMR9KDWLR9)D%>/,)]RB/K@]0_QB)DW7C @DW8R9K#8(C#@TWAR'K]X$/,0]P9/K@]X:PS
)@@G@@ ^@DW8R9KDW7R9)D8V/,)]RB ^@D%&R9KD%>R9)D%Z/,)]RBR9KD%>R9)DW7/,)]RBR9KD%>PT
)@@G@@R9)D%Z/,)]RB ^@DW8R9KDW7R9)D%>/,)]RBQB)DW7C @DW8R9K#81C#@TWAR'K]W"/,0]P9PU
)@@G@@QB)DW%C @DW:R9K#9:C#@TWAR'K]YA/,0]P9/K@]01QB)D<DC @D<ER9K#93C#@TWAR'K]YHPV
)@@G@@/,0]P9/K@]01 ^@D%&R9KD%>R9)DW%/,)]RBR9KD%>R9)D8R/,)]RB ^@DW:R9KDW%R9)D%>PW
)@@G@@/,)]RB ^@D%&R9KD%>R9)D8Y/,)]RBR9KD%>R9)DW$/,)]RBR9KD%>R9)D8#/,)]RBR9KD%>PX
)@@G@@R9)DW%/,)]RBR9KD%>R9)D<D/,)]RBR9KD%>R9)D8R/,)]RB ^@DWMR9KDWLR9)D%>/,)]RBPY
)@@G@@/K@]0_ ^@DW*R9KDW$R9)D7+/,)]RB/K@]Y9 ^@DW*R9KDW$R9)D7>/,)]RBQB)DW4C @DW5PZ
)@@G@@R9K#9;C#@TWAR'K]01/,0]P9 ^@D%&R9KD%>R9)D%Z/,)]RBR9KD%>R9)DW7/,)]RB ^@DW8QA
)@@G@@R9KDW7R9)D%>/,)]RBQB)DW7C @DW8R9K#9_C#@TWAR'K]ZK/,0]P9 ^@D8+R9KD8-R9)DW4QB
)@@G@@/,)]RBQB)DW7C @DW8R9K#'WC#@TWAR'K]01/,0]P9R9KDW7R9)DW^/,0]P^QB)DW$C @DW*QC
)@@G@@R9K#;:C#@TWAR'K]Z=/,0]P9/K@]Z2QB)D<HC @D<IR9K#;\C#@TWAR'K]Z:/,0]P9/K@]01QD
)@@G@@QB)D(ZC @D()R9K#;7C#@TWAR'K]Z2/,0]P9/K@]01C )D<I[[)T7O9!)DTT9()DW]A#0DTWQE
)@@G@@R'0]Z'A]0DTX/K@]SA@[@D7O/@@])G9!)DW]9()DTT:8@@@[/K@])#9!?@@@9()DWD/K@])^QF
)@@G@@ @@DWE ^@D%&R9KD%>R9)DWD/,)]RB ^@D(0R9KD(\R9)D%>/,)]RBC )D()[[)T7O9!)DTTQG
)@@G@@9()DW]A#0DTWR'0])OA]0DTX/K@]SA@[@D7O/@@])&9!)DW]9()DTT:8@@@[/K@])X9!?@@@QH
)@@G@@9()DWD/K@])Y @@DWE ^@D%&R9KD%>R9)DWD/,)]RB ^@D(3R9KD(2R9)D%>/,)]RB ^@D%&QI
)@@G@@R9KD%>R9)D<H/,)]RBR9KD%>R9)D8B/,)]RB ^@D<IR9KD<HR9)D%>/,)]RBC )D<I[[)T7OQJ
)@@G@@C[)T7O;P)@@=W[)T8*/ )])8 @@@@M[[)T7OC[)T7OS[)T8*/ 0]). @@@@N[[0T7OC[)T7OQK
)@@G@@[[)T8:QB)D<HC @D<IR9K#;_C#@TWAR'K]-A/,0]P9 ^@D(/R9KD(;R9)D8,/,)]RB ^@D(6QL
)@@G@@R9KD(5R9)D81/,)]RB ^@D(9R9KD(8R9)D81/,)]RB ^@DW:R9KDW%R9)D7R/,)]RBQB)DW7QM
)@@G@@C @DW8R9K#/QC#@TWAR'K]+]/,0]P9 ^@D%&R9KD%>R9)D%Z/,)]RBR9KD%>R9)DW7/,)]RBQN
)@@G@@ ^@DW8R9KDW7R9)D%>/,)]RBQB)DW7C @DW8R9K#/-C#@TWAR'K]01/,0]P9QB)DW%C @DW:QO
)@@G@@R9K#"ZC#@TWAR'K]+]/,0]P9 ^@D(9R9KD(8R9)D7+/,)]RB ^@D%&R9KD%>R9)DW%/,)]RBQP
)@@G@@R9KD%>R9)D8R/,)]RB ^@DW:R9KDW%R9)D%>/,)]RB ^@D%&R9KD%>R9)D(;/,)]RBR9KD%>QQ
)@@G@@R9)DW$/,)]RBR9KD%>R9)D87/,)]RBR9KD%>R9)D(5/,)]RBR9KD%>R9)D(8/,)]RBR9KD%>QR
)@@G@@R9)D8;/,)]RBR9KD%>R9)DW%/,)]RBR9KD%>R9)D(\/,)]RBR9KD%>R9)D<H/,)]RBR9KD%>QS
)@@G@@R9)D(2/,)]RBR9KD%>R9)D(Z/,)]RBR9KD%>R9)D8B/,)]RB ^@DWMR9KDWLR9)D%>/,)]RBQT
)@@G@@C )DWM[[)T7OC[)T7O;P)@@=W[)T8*/ )]+2 @@@@M[[)T7O9!)DTT9()DW]A#0DTWR'0]+9QU
)@@G@@A]0DTX/K@]SA@[@D7O/@@]<H9!)DW]9()DTT:8@@@[/K@]<]9!?@@@9()DWD/K@]<# @@DWEQV
)@@G@@ ^@D%&R9KD%>R9)DWD/,)]RBQB)D%>C @D%&R9K#"%C#@TWAR'K]<H/,0]P9QB)DWLC @DWMQW
)@@G@@R9K#_EC#@TWAR'K]0_/,0]P9R9KDWLR9)D(;/,0]P^/K@]0_ ^@DW*R9KDW$R9)D7+/,)]RBQX
)@@G@@/K@]=F ^@DW*R9KDW$R9)D7>/,)]RB/K@]=F ^@DW*R9KDW$R9)D7*/,)]RB/K@]>= ^@DW*QY
)@@G@@R9KDW$R9)D7:/,)]RB/K@]>= ^@DW*R9KDW$R9)D%Z/,)]RB/K@]>=9!)DTT9()DW]A#0DTWQZ
)@@G@@R'0]<6A]0DTX/K@#P?@]@DW7@@@DWL/@@]0_9!)DW]9()DTT:8@@@[/K@]=@9!?@@@9()DWDRA
)@@G@@/K@]=[ @@DWE ^@D%&R9KD%>R9)DWD/,)]RB/K@]0_ ^@DW*R9KDW$R9)D7,/,)]RB/K@]>=RB
)@@G@@ ^@D%&R9KD%>R9)D9^/,)]RBR9KD%>R9)DW$/,)]RBR9KD%>R9)D9B/,)]RBC )DW8[[)T7ORC
)@@G@@9!)DTT9()DW]A#0DTWR'0]=XA]0DTX/K@]SA@[@D7O/@@]=89!)DW]9()DTT:8@@@[/K@]=&RD
)@@G@@9!?@@@9()DWD/K@]=$ @@DWE ^@D9GR9KD9FR9)DWD/,)]RBR9KD%>R9)D9F/,)]RBR9KD%>RE
)@@G@@R9)DW7/,)]RBR9KD%>R9)D8B/,)]RB ^@DWMR9KDWLR9)D%>/,)]RBC )DWM[[)T7OC[)T7ORF
)@@G@@;P)@@=W[)T8*/ )]=_ @@@@M[[)T7O9!)DTT9()DW]A#0DTWR'0]>AA]0DTX/K@]SA@[@D7ORG
)@@G@@/@@]>U9!)DW]9()DTT:8@@@[/K@]>J9!?@@@9()DWD/K@]>K @@DWE ^@D%&R9KD%>R9)DWDRH
)@@G@@/,)]RBQB)D%>C @D%&R9K#_PC#@TWAR'K]>U/,0]P9QB)DWLC @DWMR9K#_5C#@TWAR'K]0_RI
)@@G@@/,0]P9R9KDWLR9)D(;/,0]P^/K@]0_9!)DTT9()DW]A#0DTWR'0]>%A]0DTX/K@#TT@[@DW7RJ
)@@G@@/@@]>/9!)DW]9()DTT:8@@@[/K@]>39!?@@@9()DWD/K@]>4 @@DWE ^@D%&R9KD%>R9)DWDRK
)@@G@@/,)]RB ^@DWMR9KDWLR9)D%>/,)]RBQB)DWLC @DWMR9K^@@C#@TWAR'K]&#/,0]P9/K@]01RL
)@@G@@QB)DW$C @DW*R9K^@GC#@TWAR'K]&K/,0]P9QB)DW7C @DW8R9K^@KC#@TWAR'K]&K/,0]P9RM
)@@G@@/K@]01QB)DW7C @DW8R9K^@VC#@TWAR'K]$F/,0]P9C )DW8[[)T7O9!)DTT9()DW]A#0DTWRN
)@@G@@R'0]&YA]0DTX/K@]SA@[@D7O/@@]&09!)DW]9()DTT:8@@@[/K@]&$9!?@@@9()DWD/K@]&*RO
)@@G@@ @@DWE ^@D%&R9KD%>R9)DWD/,)]RB ^@D(0R9KD(\R9)D%>/,)]RB ^@D%&R9KD%>R9)D9^RP
)@@G@@/,)]RBR9KD%>R9)DW$/,)]RBR9KD%>R9)D9B/,)]RBR9KD%>R9)DWL/,)]RBR9KD%>R9)D(\RQ
)@@G@@/,)]RBR9KD%>R9)DW7/,)]RBR9KD%>R9)D8B/,)]RB ^@DWMR9KDWLR9)D%>/,)]RB/K@]=8RR
)@@G@@9!)DTT9()DW]A#0DTWR'0]$LA]0DTX/K@#TT@[@DW7/@@]$<9!)DW]9()DTT:8@@@[/K@]$URS
)@@G@@9!?@@@9()DWD/K@]$V @@DWE ^@D%&R9KD%>R9)DWD/,)]RB ^@DW8R9KDW7R9)D%>/,)]RBRT
)@@G@@QB)DW$C @DW*R9K^[#C#@TWAR'K]$%/,0]P9/K@]$0QB)DW7C @DW8R9K^[BC#@TWAR'K]01RU
)@@G@@/,0]P9 ^@D(0R9KD(\R9)D7R/,)]RBQB)DW7C @DW8R9K^[WC#@TWAR'K]&0/,0]P9 ^@DW8RV
)@@G@@R9KDW7R9)D7R/,)]RBQB)DW$C @DW*R9K^[*C#@TWAR'K]01/,0]P9/K@]&0 ^@DWMR9KDWLRW
)@@G@@R9)EGK/,)]RB/K@]*I ^@DWMR9KDWLR9)EGO/,)]RB9!)DTT9()DW]A#0DTWR'0]*OA]0DTXRX
)@@G@@/K@#M!@]@DW7@@@DWL/@@]0_9!)DW]9()DTT:8@@@[/K@]*Y9!?@@@9()DWD/K@]*Z @@DWERY
)@@G@@ ^@D%&R9KD%>R9)DWD/,)]RB/K@]0_QB)DW7C @DW8R9K^[6C#@TWAR'K]01/,0]P9 ^@D%&RZ
)@@G@@R9KD%>R9)D%Z/,)]RBR9KD%>R9)DW7/,)]RBQB)D%>C @D%&R9K^][C#@TWAR'K]*7/,0]P9SA
)@@G@@ ^@D%&R9KD%>R9)EGS/,)]RBR9KD%>R9)D%A/,)]RBR9KD%>R9)D8B/,)]RB ^@DWMR9KDWLSB
)@@G@@R9)D%>/,)]RB/K@]0_ ^@DWMR9KDWLR9)EGW/,)]RB/K@]0_ ^@DWMR9KDWLR9)EG)/,)]RBSC
)@@G@@/K@]0_QB)DW7C @DW8R9K^]VC#@TWAR'K](T/,0]P9R9KDW7R9)DW^/,0]P^ ^@D%&R9KD%>SD
)@@G@@R9)D%Z/,)]RBR9KD%>R9)DW7/,)]RBR9KD%>R9)D%Z/,)]RB ^@DW8R9KDW7R9)D%>/,)]RBSE
)@@G@@C[)T%T[[)TWNQB)DW7C @DW8R9K^]-C#@TWAR'K]01/,0]P9R9KDW7R9)DW^/,0]P^ ^@D%&SF
)@@G@@R9KD%>R9)D%]/,)]RBR9KD%>R9)D8R/,)]RB ^@D%#R9KD%]R9)D%>/,)]RB ^@D%&R9KD%>SG
)@@G@@R9)EG%/,)]RBR9KD%>R9)D%]/,)]RB ^@DWMR9KDWLR9)D%>/,)]RBQB)DW7C @DW8R9K^#BSH
)@@G@@C#@TWAR'K]!G/,0]P9R9KDW7R9)DW^/,0]P^QB)DW7C @DW8R9K^#NC#@TWAR'K]:'/,0]P9SI
)@@G@@R9KDW7R9)DW^/,0]P^C )D<I[[)T7O9!)DTT9()DW]A#0DTWR'0]%+A]0DTX/K@]SA@[@D7OSJ
)@@G@@/@@]%49!)DW]9()DTT:8@@@[/K@]%:9!?@@@9()DWD/K@]%? @@DWE ^@D%&R9KD%>R9)DWDSK
)@@G@@/,)]RB ^@D(0R9KD(\R9)D%>/,)]RBQB)D(\C @D(0R9K^^IC#@TWAR'K]%./,0]P9R9KD(\SL
)@@G@@R9)EG=/,0]P^ ^@D%&R9KD%>R9)D<H/,)]RBR9KD%>R9)D8B/,)]RB ^@D<IR9KD<HR9)D%>SM
)@@G@@/,)]RBC )D<I[[)T7OC[)T7O;P)@@=W[)T8*/ )]:J @@@@M[[)T7OC[)T7OS[)T8*/ 0]:OSN
)@@G@@ @@@@N[[0T7OC[)T7O[[)UG4QB)D<HC @D<IR9K^^-C#@TWAR'K]:X/,0]P9 ^@D%&R9KD%>SO
)@@G@@R9)DWL/,)]RBR9KD%>R9)D(\/,)]RBR9KD%>R9)D<H/,)]RB ^@DWMR9KDWLR9)D%>/,)]RBSP
)@@G@@C[)TWNG[)T%Q[[)T7OC[)T7O[[)TWNQB)DW4C @DW5R9K^^8C#@TWAR'K]!G/,0]P9R9KDW4SQ
)@@G@@R9)DW^/,0]P^/K@]%LQB)DW7C @DW8R9K^^/C#@TWAR'K]?Y/,0]P9R9KDW7R9)DW^/,0]P^SR
)@@G@@C )D<I[[)T7O9!)DTT9()DW]A#0DTWR'0]?FA]0DTX/K@]SA@[@D7O/@@]%.9!)DW]9()DTTSS
)@@G@@:8@@@[/K@]?O9!?@@@9()DWD/K@]?P @@DWE ^@D%&R9KD%>R9)DWD/,)]RB ^@D(0R9KD(\ST
)@@G@@R9)D%>/,)]RB/K@]%.9!)DTT9()DW]A#0DTWR'0]?=A]0DTX/K@#TT@[@DW7/@@]?.9!)DW]SU
)@@G@@9()DTT:8@@@[/K@]?!9!?@@@9()DWD/K@]?, @@DWE ^@D%&R9KD%>R9)DWD/,)]RB ^@D9GSV
)@@G@@R9KD9FR9)DWL/,)]RBR9KD9FR9)D%>/,)]RB ^@DWMR9KDWLR9)D9F/,)]RBC[)TWNG[)T%QSW
)@@G@@[[)T7OC[)T7O[[)TWNQB)DW7C @DW8R9K^ _C#@TWAR'K]!G/,0]P9R9KDW7R9)DW^/,0]P^SX
)@@G@@/K@]%L ^@D%&R9KD%>R9)DW4/,)]RBR9KD%>R9)DW7/,)]RBQB)D%>C @D%&R9K^A#C#@TWASY
)@@G@@R'K]01/,0]P99!)DTT9()DW]A#0DTWR'0]!ZA]0DTX/K@]SA@[@DWN/@@]!39!)DW]9()DTTSZ
)@@G@@:8@@@[/K@]!*9!?@@@9()DWD/K@]!( @@DWE ^@D%&R9KD%>R9)DWD/,)]RBQB)D%>C @D%&TA
)@@G@@R9K^AHC#@TWAR'K]!3/,0]P9C )DWM[[)T7OC[)T7O;P)@@=W[)T8*/ )]!' @@@@M[[)T7OTB
)@@G@@9!)DTT9()DW]A#0DTWR'0],[A]0DTX/K@]SA@[@D7O/@@],P9!)DW]9()DTT:8@@@[/K@],ETC
)@@G@@9!?@@@9()DWD/K@],F @@DWE ^@D%&R9KD%>R9)DWD/,)]RBQB)D%>C @D%&R9K^A!C#@TWATD
)@@G@@R'K],P/,0]P9QB)DWLC @DWMR9K^BHC#@TWAR'K]0_/,0]P9 ^@D%&R9KD%>R9)D(;/,)]RBTE
)@@G@@R9KD%>R9)DW$/,)]RBR9KDWLR9)D%>/,0]P^/K@]0_ ^@D%&R9KD%>R9)D%Z/,)]RBR9KD%>TF
)@@G@@R9)DW7/,)]RBR9KD%>R9)D%Z/,)]RBQB)D%>C @D%&R9K^BSC#@TWAR'K],6/,0]P9 ^@D%&TG
)@@G@@R9KD%>R9)EG'/,)]RBR9KD%>R9)D%]/,)]RBR9KD%>R9)D8R/,)]RB ^@DWMR9KDWLR9)D%>TH
)@@G@@/,)]RB/K@]0_9!)DTT9()DW]A#0DTWR'0]\FA]0DTX/K@#TT@[@DW7/@@]\=9!)DW]9()DTTTI
)@@G@@:8@@@[/K@]\O9!?@@@9()DWD/K@]\P @@DWE ^@D%&R9KD%>R9)DWD/,)]RB ^@D9GR9KD9FTJ
)@@G@@R9)EG"/,)]RBR9KD9FR9)D%>/,)]RB ^@DWMR9KDWLR9)D9F/,)]RBC )DWM[[)T7OC[)T7OTK
)@@G@@;P)@@=W[)T8*/ )]\: @@@@M[[)T7O9!)DTT9()DW]A#0DTWR'0]\2A]0DTX/K@]SA@[@D7OTL
)@@G@@/@@]0A9!)DW]9()DTT:8@@@[/K@]\;9!?@@@9()DWD/K@]\/ @@DWE ^@D%&R9KD%>R9)DWDTM
)@@G@@/,)]RBQB)D%>C @D%&R9K^B6C#@TWAR'K]0A/,0]P9QB)DWLC @DWMR9K^CQC#@TWAR'K]0_TN
)@@G@@/,0]P9R9KDWLR9)D(;/,0]P^/K@]0_9!)DTT9()DW]A#0DTWR'0]0QA]0DTX/K@]6R@H@DWQTO
)@@G@@@@@DW7@@@DW4@@@DW%@@@DW<@@@DWL@@@DW,@@@DW1@@@DW$@@@D("@@@D(;@@@D<H@@@D(\TP
)@@G@@/@@]0_9!)DW]9()DTT:8@@@[/K@]0:9!?@@@9()DWD/K@]0? @@DWE ^@D%&R9KD%>R9)DWDTQ
)@@G@@/,)]RB/K@]0_ ^@DWMR9KDWLR9)EH]/,)]RB/K@]0_'=@@@DC;@@@XR9)DUBR9KD%G/,0]O5TR
)@@G@@R9)DUBC;@@@XR9KDWF/,0]O5C9)@@[[[)DV$/K@]SDC9)@@@[[)DV$/K@]SDR#@EHMR^KEH7TS
)@@G@@P8K@@[C )EH8[[-@@@R^KEH9P8K@@[C )EH'[[-@@@R^KEH;P8K@@[C )EH/[[-@@@C[)DTVTT
)@@G@@H9)@@[/ )]1W:80DU^/K@]1WG80@@][@0DTWC[\@@[[[)DTXC[\@@@[[)DTVN8K@@ R@KEVBTU
)@@G@@R@)EVCM@-)@@N8K@@TR@KEVDR@)EVEM@-)@@N@KEH*R@KEH(R@)EH%OY;@@@*4F@@@/KF@@@TV
)@@G@@O'0@@[/K@]1(^@KEH*A@KEH(A@)EH%N8K@@TR@KEVDR@)EVEM@M)@@N8K@@ R@KEVBR@)EVCTW
)@@G@@M@M)@@R@KEH(R@)EH%&'0@@[R;F0@@C ?@@@!D)EH8CD)EH8[ )EH8O;@@@[AB@EH7R;F0@@TX
)@@G@@C ?@@@!D)EH'CD)EH'[ )EH'O;@@@[AB@EH9R;F0@@C ?@@@!D)EH/CD)EH/[ )EH/O;@@@[TY
)@@G@@AB@EH;R;F0@@AB@EH.CD)EH"[ )EH"C[)EHM/,)]R?QB)EH.C @EH"R9K^C-C#@UH2R'K]2XTZ
)@@G@@/,0]P9/K@]3] ^@EIDR9KEICR9)EH9/,)]RBQB)EH7C @EH8R9K^C>C#@UH2R'K]3./,0]P9UA
)@@G@@R9KEH7R9)EH;/,0]P^C )EH8[[)UI/C[)UI/[[)UH_ ^@EJ#R9KEJ]R9)EH7/,)]RBR9KEJ]UB
)@@G@@R9)EI_/,)]RB ^@EH8R9KEH7R9)EJ]/,)]RBC[)UH_[[)UU[QB)EH7C @EH8R9K^C(C#@UH2UC
)@@G@@R'K]3'/,0]P9/K@]3'C[)UU^[[)UH_C[)UU^[[)UI]C[)UH_[[)UUB ^@EUFR9KEUER9)EH9UD
)@@G@@/,)]RBQB)EH7C @EH8R9K^D@C#@UH2R'K]3=/,0]P9R9KEH7R9)EH;/,0]P^C[)UU"[[)UI]UE
)@@G@@C )EH/[[)UI/C[)UH_G[)UI/[[)UI/C[)UI/[[)UH_C )EH8[[)UI/C[)UH_H[)UI//D)]3=UF
)@@G@@/K@]3AC )EH8[[)UI/C[)UH_H[)UI//D)]3\C[)UH_G[)UU"[[)UV[C[)UV[[[)UH_/K@]3AUG
)@@G@@C[)UI]H[)UU"[[)UI/R9KEV[R9)EH0/,0]NLC[)UI/H[)UV[/ )]3./K@]2%'=@@@DC9)@@[UH
)@@G@@[[)EHN/K@]1 C9)@@@[[)EHN/K@]1 R#@EVNR^KEV8P8K@@[C )EV9[[-@@@R^KEV'P8K@@[UI
)@@G@@C )EV;[[-@@@C[)DTVH9)@@[/ )]4N:80DU^/K@]4NG80@@][@0DTWC[\@@[[[)DTXC[\@@@UJ
)@@G@@[[)DTVN8K@@ R@KEW0R@)EW1M@-)@@N8K@@TR@KEW2R@)EW3M@-)@@N@KEV(R@KEV%R@)EV:UK
)@@G@@OY;@@@*4F@@@/KF@@@O'0@@[/K@]4)^@KEV(A@KEV%A@)EV:N8K@@TR@KEW2R@)EW3M@M)@@UL
)@@G@@N8K@@ R@KEW0R@)EW1M@M)@@R@KEV%R@)EV:&'0@@[R;F0@@C ?@@@!D)EV9CD)EV9[ )EV9UM
)@@G@@O;@@@[AB@EV8R;F0@@C ?@@@!D)EV;CD)EV;[ )EV;O;@@@[AB@EV'C[)EVN/,)]R? ^@EV.UN
)@@G@@R9KEV/R9)EV'/,)]RBQB)EV8C @EV9R9K^DGC#@UV3R'K]5L/,0]P9/K@]5I'=@@@DC9)@@[UO
)@@G@@[[)EVO/K@]4@C9)@@@[[)EVO/K@]4@R#@EYBR@W@@@C )EY1[ -@@[R@W@@[C )EY3[ -@@[UP
)@@G@@R@W@@]C )EY5[ -@@[R@W@@#C )EY7[ -@@[R@W@@^C )EY9[ -@@[R@W@@ C )EY;[ -@@[UQ
)@@G@@R@W@@AC )EY.[ -@@[R@W@@BC )EY_[ -@@[R@W@@CC )EZ[[ -@@[R@W@@DC )EZ#[ -@@[UR
)@@G@@R@W@@EC )EZ [ -@@[R@W@@FC )EZB[ -@@[R@W@@GC )EZD[ -@@[C[)DTVH9)@@[/ )]6AUS
)@@G@@:80DU^/K@]6AG80@@][@0DTWC[\@@[[[)DTXC[\@@@[[)DTVN8K@@ R@KF#MR@)F#NM@-)@@UT
)@@G@@N8K@@TR@KF#OR@)F#PM@-)@@N@KEYXR@KEYYR@)EYZOY;@@@*4F@@@/KF@@@O'0@@[/K@]6NUU
)@@G@@^@KEYXA@KEYYA@)EYZN8K@@TR@KF#OR@)F#PM@M)@@N8K@@ R@KF#MR@)F#NM@M)@@R@KEYYUV
)@@G@@R@)EYZ&'0@@[R;F0@@9!?@@@9()EY0R;F0@@9!?@@@9()EY2R;F0@@9!?@@@9()EY4R;F0@@UW
)@@G@@9!?@@@9()EY6R;F0@@9!?@@@9()EY8R;F0@@9!?@@@9()EY'R;F0@@9!?@@@9()EY/R;F0@@UX
)@@G@@9!?@@@9()EY"R;F0@@9!?@@@9()EZ@R;F0@@9!?@@@9()EZ]R;F0@@9!?@@@9()EZ^R;F0@@UY
)@@G@@9!?@@@9()EZAR;F0@@9!?@@@9()EZCC[)EYB/,)]R? ^@EZ[R9KEZ@R9)EZ7/,)]RB ^@E)^UZ
)@@G@@R9KE)#R9)EZ'/,)]RBR9KE)#R9)EY4/,)]RBR9KE)#R9)EY2/,)]RBQB)E)#C @E)^R9K^DKVA
)@@G@@C#@UY$R'K]7</,0]P9/K@#HDQB)EY0C @EY1R9K^D+C#@UY$R'K]7?/,0]P9R9KEY0R9)E?\VB
)@@G@@/,0]P^ ^@EY!R9KEY?R9)E?2/,)]RB ^@EZ4R9KEZ3R9)EY0/,)]RB/K@#L. ^@E)^R9KE)#VC
)@@G@@R9)EZ'/,)]RBR9KE)#R9)EY2/,)]RBR9KE)#R9)EZ'/,)]RBQB)E)#C @E)^R9K^D,C#@UY$VD
)@@G@@R'K#L7/,0]P9 ^@E)^R9KE)#R9)EZ>/,)]RBR9KE)#R9)E?5/,)]RB ^@EZ&R9KEZ>R9)E)#VE
)@@G@@/,)]RB ^@E)^R9KE)#R9)EZ?/,)]RBR9KE)#R9)E?5/,)]RB ^@EZ!R9KEZ?R9)E)#/,)]RBVF
)@@G@@ ^@E)^R9KE)#R9)E?//,)]RBR9KE)#R9)EZ>/,)]RBR9KE)#R9)EZ?/,)]RB ^@EY;R9KEY'VG
)@@G@@R9)E)#/,)]RB/K@#M  ^@EZ[R9KEZ@R9)E!@/,)]RB/K@]9M ^@EZ[R9KEZ@R9)E!#/,)]RBVH
)@@G@@/K@]9M ^@EZ[R9KEZ@R9)E!A/,)]RB/K@]9M ^@EZ[R9KEZ@R9)E!D/,)]RB/K@]9M ^@EZ[VI
)@@G@@R9KEZ@R9)EZ'/,)]RB/K@]9M ^@EZ[R9KEZ@R9)E!G/,)]RB/K@]9M ^@EZ[R9KEZ@R9)E!JVJ
)@@G@@/,)]RB/K@]9M ^@EZ[R9KEZ@R9)E!M/,)]RB/K@]9M ^@E)^R9KE)#R9)EZ'/,)]RBR9KE)#VK
)@@G@@R9)EY2/,)]RBR9KE)#R9)E!P/,)]RB ^@EY3R9KEY2R9)E)#/,)]RBQB)EY2C @EY3R9K^E*VL
)@@G@@C#@UY$R'K#L7/,0]P9 ^@E)^R9KE)#R9)EY6/,)]RBR9KE)#R9)E!W/,)]RB ^@EY7R9KEY6VM
)@@G@@R9)E)#/,)]RB ^@E)^R9KE)#R9)E!)/,)]RBR9KE)#R9)EZ@/,)]RBR9KE)#R9)E!</,)]RBVN
)@@G@@R9KE)#R9)EY6/,)]RB ^@EY;R9KEY'R9)E)#/,)]RB/K@#M  ^@EZ[R9KEZ@R9)E!@/,)]RBVO
)@@G@@/K@].= ^@EZ[R9KEZ@R9)E!#/,)]RB/K@].= ^@EZ[R9KEZ@R9)E!A/,)]RB/K@].= ^@EZ[VP
)@@G@@R9KEZ@R9)E!D/,)]RB/K@].= ^@EZ[R9KEZ@R9)EZ'/,)]RB/K@]/" ^@EZ[R9KEZ@R9)E!GVQ
)@@G@@/,)]RB/K@]/"QB)EY2C @EY3R9K^FEC#@UY$R'K]':/,0]P9R9KEY2R9)E!%/,0]P^/K@]'"VR
)@@G@@QB)EY2C @EY3R9K^FSC#@UY$R'K]'5/,0]P9R9KEY2R9)E!0/,0]P^/K@]'"QB)EY2C @EY3VS
)@@G@@R9K^F&C#@UY$R'K#L7/,0]P9R9KEY2R9)E!6/,0]P^ ^@E)^R9KE)#R9)E!9/,)]RBR9KE)#VT
)@@G@@R9)EY2/,)]RBR9KE)#R9)E!//,)]RB ^@EY;R9KEY'R9)E)#/,)]RB/K@#M QB)EY2C @EY3VU
)@@G@@R9K^F4C#@UY$R'K#L7/,0]P99!)DTT9()EY<A#0DTWR'0];TA]0DTX/K@#,#@[@EY2/@@];3VV
)@@G@@9!)EY<9()DTT:8@@@[/K@];+9!?@@@9()EY%/K@];< @@EY: ^@E)^R9KE)#R9)EY%/,)]RBVW
)@@G@@ ^@E,CR9KE,BR9)E,#/,)]RBR9KE,BR9)E)#/,)]RB ^@EY;R9KEY'R9)E,B/,)]RB/K@]/MVX
)@@G@@9!)DTT9()EY<A#0DTWR'0];9A]0DTX/K@#TT@[@EY2/@@]/M9!)EY<9()DTT:8@@@[/K@]/]VY
)@@G@@9!?@@@9()EY%/K@]/# @@EY: ^@E)^R9KE)#R9)EY%/,)]RB ^@E,CR9KE,BR9)E,#/,)]RBVZ
)@@G@@R9KE,BR9)E)#/,)]RB ^@EY;R9KEY'R9)E,B/,)]RBC )EY;[[)V[DC[)V[D;P)@@=W[)V[@WA
)@@G@@/ )]/T @@@@M[[)V[D9!)DTT9()EY<A#0DTWR'0]/)A]0DTX/K@]SA@[@F[D/@@]/49!)EY<WB
)@@G@@9()DTT:8@@@[/K@]/(9!?@@@9()EY%/K@]/% @@EY: ^@E)^R9KE)#R9)EY%/,)]RBQB)E)#WC
)@@G@@C @E)^R9K^F_C#@UY$R'K]/4/,0]P9QB)EY'C @EY;R9K^GZC#@UY$R'K#M /,0]P9R9KEY'WD
)@@G@@R9)EZ^/,0]P^/K@#M  ^@E)^R9KE)#R9)E!)/,)]RBR9KE)#R9)EZ@/,)]RBR9KE)#R9)E!/WE
)@@G@@/,)]RB9!)DTT9()EY<A#0DTWR'0].IA]0DTX/K@#TT@[@EY2/@@#M 9!)EY<9()DTT:8@@@[WF
)@@G@@/K@].R9!?@@@9()EY%/K@].S @@EY: ^@E,CR9KE,BR9)EY%/,)]RBR9KE)#R9)E,B/,)]RBWG
)@@G@@ ^@EY;R9KEY'R9)E)#/,)]RB/K@#M  ^@E)^R9KE)#R9)EZ'/,)]RBR9KE)#R9)EY2/,)]RBWH
)@@G@@R9KE)#R9)EZ'/,)]RB ^@EY3R9KEY2R9)E)#/,)]RBQB)EY2C @EY3R9K^G%C#@UY$R'K#L7WI
)@@G@@/,0]P9QB)EZ@C @EZ[R9K^HCC#@UY$R'K]" /,0]P9QB)EZAC @EZBR9K^HQC#@UY$R'K]" WJ
)@@G@@/,0]P9/K@#L7 ^@E)^R9KE)#R9)F[K/,)]RBR9KE)#R9)EZ@/,)]RBR9KE)#R9)E!//,)]RBWK
)@@G@@C )EZB[[)V[D9!)DTT9()EY<A#0DTWR'0]"RA]0DTX/K@]SA@[@F[D/@@]"29!)EY<9()DTTWL
)@@G@@:8@@@[/K@]")9!?@@@9()EY%/K@]"- @@EY: ^@E,CR9KE,BR9)EY%/,)]RBR9KE)#R9)E,BWM
)@@G@@/,)]RBR9KE)#R9)EZA/,)]RBR9KE)#R9)F[N/,)]RB ^@EY;R9KEY'R9)E)#/,)]RBC )EY;WN
)@@G@@[[)V[DC[)V[D;P)@@=W[)V[@/ )]"9 @@@@M[[)V[D9!)DTT9()EY<A#0DTWR'0]_@A]0DTXWO
)@@G@@/K@]SA@[@F[D/@@]_O9!)EY<9()DTT:8@@@[/K@]_D9!?@@@9()EY%/K@]_E @@EY: ^@E)^WP
)@@G@@R9KE)#R9)EY%/,)]RBQB)E)#C @E)^R9K^HYC#@UY$R'K]_O/,0]P9QB)EY'C @EY;R9K^H"WQ
)@@G@@C#@UY$R'K#M /,0]P9R9KEY'R9)EZ^/,0]P^/K@#M  ^@EZ[R9KEZ@R9)E!#/,)]RB/K@]_$WR
)@@G@@ ^@EZ[R9KEZ@R9)E!@/,)]RB ^@E)^R9KE)#R9)F[K/,)]RBR9KE)#R9)EZ@/,)]RBR9KE)#WS
)@@G@@R9)F[Q/,)]RB ^@EY;R9KEY'R9)E)#/,)]RBQB)EY2C @EY3R9K^IDC#@UY$R'K#L7/,0]P9WT
)@@G@@QB)EY2C @EY3R9K^IOC#@UY$R'K#]H/,0]P9 ^@E)^R9KE)#R9)EZ'/,)]RBR9KE)#R9)EY2WU
)@@G@@/,)]RBR9KE)#R9)EZ'/,)]RB ^@EY3R9KEY2R9)E)#/,)]RBQB)EY2C @EY3R9K^IWC#@UY$WV
)@@G@@R'K#[-/,0]P9R9KEY2R9)EY>/,0]P^C )EZB[[)V[D9!)DTT9()EY<A#0DTWR'0#@)A]0DTXWW
)@@G@@/K@]SA@[@F[D/@@#@29!)EY<9()DTT:8@@@[/K@#@(9!?@@@9()EY%/K@#@% @@EY: ^@E)^WX
)@@G@@R9KE)#R9)EY%/,)]RB ^@EZDR9KEZCR9)E)#/,)]RB ^@E)^R9KE)#R9)EZA/,)]RBR9KE)#WY
)@@G@@R9)F[N/,)]RB ^@EZBR9KEZAR9)E)#/,)]RBC )EZB[[)V[DC[)V[D;P)@@=W[)V[@/ )#[^WZ
)@@G@@ @@@@M[[)V[DC[)V[DS[)V[@/ 0#[D @@@@N[[0V[DC[)V[D[[)V[XQB)EZAC @EZBR9K^JGXA
)@@G@@C#@UY$R'K#[M/,0]P9 ^@E)^R9KE)#R9)EY'/,)]RBR9KE)#R9)EZC/,)]RBR9KE)#R9)EZAXB
)@@G@@/,)]RB ^@EY;R9KEY'R9)E)#/,)]RB/K@]_;9!)DTT9()EY<A#0DTWR'0#[$A]0DTX/K@#TTXC
)@@G@@@[@EY2/@@]_;9!)EY<9()DTT:8@@@[/K@#[09!?@@@9()EY%/K@#[1 @@EY: ^@E)^R9KE)#XD
)@@G@@R9)EY%/,)]RB ^@E,CR9KE,BR9)EY'/,)]RBR9KE,BR9)E)#/,)]RB ^@EY;R9KEY'R9)E,BXE
)@@G@@/,)]RB/K@]_; ^@E)^R9KE)#R9)EY'/,)]RBR9KE)#R9)EZ]/,)]RB ^@EY;R9KEY'R9)E)#XF
)@@G@@/,)]RB/K@]_;C )EY;[[)V[DC[)V[D;P)@@=W[)V[@/ )#]O @@@@M[[)V[D9!)DTT9()EY<XG
)@@G@@A#0DTWR'0#]VA]0DTX/K@]SA@[@F[D/@@#]\9!)EY<9()DTT:8@@@[/K@#]=9!?@@@9()EY%XH
)@@G@@/K@#]> @@EY: ^@E)^R9KE)#R9)EY%/,)]RBQB)E)#C @E)^R9K^J<C#@UY$R'K#]\/,0]P9XI
)@@G@@QB)EY'C @EY;R9K^K#C#@UY$R'K#M /,0]P9R9KEY'R9)EZ^/,0]P^/K@#M  ^@EZ[R9KEZ@XJ
)@@G@@R9)E!#/,)]RB ^@EZBR9KEZAR9)F[)/,)]RBQB)EY4C @EY5R9K^KIC#@UY$R'K##C/,0]P9XK
)@@G@@/K@##:QB)EY4C @EY5R9K^KMC#@UY$R'K#L7/,0]P9 ^@E)^R9KE)#R9)EZ'/,)]RBR9KE)#XL
)@@G@@R9)EY2/,)]RB ^@EY3R9KEY2R9)E)#/,)]RBQB)EY2C @EY3R9K^KQC#@UY$R'K##+/,0]P9XM
)@@G@@R9KEY2R9)EY>/,0]P^QB)EY2C @EY3R9K^L^C#@UY$R'K#L7/,0]P9R9KEY2R9)EY>/,0]P^XN
)@@G@@ ^@E)^R9KE)#R9)EY0/,)]RBR9KE)#R9)EZA/,)]RB ^@EZBR9KEZAR9)E)#/,)]RBQB)EZAXO
)@@G@@C @EZBR9K^L)C#@UY$R'K##./,0]P9/K@#L79!)DTT9()EY<A#0DTWR'0#^#A]0DTX/K@#TTXP
)@@G@@@[@EZA/@@#L79!)EY<9()DTT:8@@@[/K@#^G9!?@@@9()EY%/K@#^H @@EY: ^@E)^R9KE)#XQ
)@@G@@R9)EY%/,)]RB ^@EY;R9KEY'R9)E)#/,)]RB ^@E)^R9KE)#R9)EZ'/,)]RBR9KE)#R9)EY2XR
)@@G@@/,)]RB ^@EY3R9KEY2R9)E)#/,)]RBQB)EY2C @EY3R9K^L=C#@UY$R'K# 2/,0]P9R9KEY2XS
)@@G@@R9)EY>/,0]P^C )EZB[[)V[D9!)DTT9()EY<A#0DTWR'0#^1A]0DTX/K@]SA@[@F[D/@@# #XT
)@@G@@9!)EY<9()DTT:8@@@[/K@#^'9!?@@@9()EY%/K@#^; @@EY: ^@E)^R9KE)#R9)EY%/,)]RBXU
)@@G@@ ^@EZDR9KEZCR9)E)#/,)]RB ^@E)^R9KE)#R9)EZA/,)]RBR9KE)#R9)F[N/,)]RB ^@EZBXV
)@@G@@R9KEZAR9)E)#/,)]RBC )EZB[[)V[DC[)V[D;P)@@=W[)V[@/ )# P @@@@M[[)V[DC[)V[DXW
)@@G@@S[)V[@/ 0# U @@@@N[[0V[DC[)V[D[[)V[*QB)EZAC @EZBR9K^MIC#@UY$R'K# </,0]P9XX
)@@G@@ ^@E)^R9KE)#R9)EY'/,)]RBR9KE)#R9)EZC/,)]RBR9KE)#R9)EZA/,)]RB ^@EY;R9KEY'XY
)@@G@@R9)E)#/,)]RB/K@#F]QB)EY2C @EY3R9K^M>C#@UY$R'K#BH/,0]P9R9KEY2R9)EY>/,0]P^XZ
)@@G@@C )EZB[[)V[D9!)DTT9()EY<A#0DTWR'0#A#A]0DTX/K@]SA@[@F[D/@@#AP9!)EY<9()DTTYA
)@@G@@:8@@@[/K@#AG9!?@@@9()EY%/K@#AH @@EY: ^@E)^R9KE)#R9)EY%/,)]RB ^@EZDR9KEZCYB
)@@G@@R9)E)#/,)]RBQB)EZCC @EZDR9K^NBC#@UY$R'K#AY/,0]P9R9KEZCR9)F[,/,0]P^ ^@E)^YC
)@@G@@R9KE)#R9)EZA/,)]RBR9KE)#R9)F[N/,)]RB ^@EZBR9KEZAR9)E)#/,)]RBC )EZB[[)V[DYD
)@@G@@C[)V[D;P)@@=W[)V[@/ )#A0 @@@@M[[)V[DC[)V[DS[)V[@/ 0#A5 @@@@N[[0V[DC[)V[DYE
)@@G@@[[)V[1QB)EZAC @EZBR9K^NUC#@UY$R'K#A"/,0]P9 ^@E)^R9KE)#R9)EY'/,)]RBR9KE)#YF
)@@G@@R9)EZC/,)]RBR9KE)#R9)EZA/,)]RB ^@EY;R9KEY'R9)E)#/,)]RB/K@#F]9!)DTT9()EY<YG
)@@G@@A#0DTWR'0#BNA]0DTX/K@#TT@[@EY2/@@#B?9!)EY<9()DTT:8@@@[/K@#BW9!?@@@9()EY%YH
)@@G@@/K@#BX @@EY: ^@E)^R9KE)#R9)EY%/,)]RB ^@E,CR9KE,BR9)EY'/,)]RBR9KE,BR9)E)#YI
)@@G@@/,)]RB ^@EY;R9KEY'R9)E,B/,)]RB ^@E)^R9KE)#R9)EZ'/,)]RBR9KE)#R9)EY2/,)]RBYJ
)@@G@@ ^@EY3R9KEY2R9)E)#/,)]RB ^@EY5R9KEY4R9)F[)/,)]RBQB)EY2C @EY3R9K^N1C#@UY$YK
)@@G@@R'K#F]/,0]P9R9KEY2R9)EY>/,0]P^QB)EY4C @EY5R9K^OQC#@UY$R'K#CI/,0]P9R9KEY4YL
)@@G@@R9)E!M/,0]P^/K@#C:QB)EY4C @EY5R9K^OUC#@UY$R'K#CS/,0]P9R9KEY4R9)F['/,0]P^YM
)@@G@@/K@#C:QB)EY4C @EY5R9K^OYC#@UY$R'K#C+/,0]P9R9KEY4R9)F]@/,0]P^/K@#C:QB)EY4YN
)@@G@@C @EY5R9K^O+C#@UY$R'K#L7/,0]P9R9KEY4R9)F[,/,0]P^ ^@E)^R9KE)#R9)F]A/,)]RBYO
)@@G@@R9KE)#R9)EZ@/,)]RB ^@EZOR9KEZNR9)E)#/,)]RB ^@E)^R9KE)#R9)F]A/,)]RBR9KE)#YP
)@@G@@R9)EY4/,)]RB ^@EZRR9KEZQR9)E)#/,)]RB9!)DTT9()EY<A#0DTWR'0#DBA]0DTX/K@]SAYQ
)@@G@@@[@EZN/@@#D%9!)EY<9()DTT:8@@@[/K@#DK9!?@@@9()EY%/K@#DL @@EY:C[)UY%[[)V[DYR
)@@G@@9!)DTT9()EY<A#0DTWR'0#DTA]0DTX/K@]SA@[@EZQ/@@#D%9!)EY<9()DTT:8@@@[/K@#D+YS
)@@G@@9!?@@@9()EY%/K@#D< @@EY:C[)UY%[[)V]DC[)V[DG[)V]D[[)V[DC[)V[D[[)UZE9!)DTTYT
)@@G@@9()EY<A#0DTWR'0#D0A]0DTX/K@]SA@[@EZE/@@#E^9!)EY<9()DTT:8@@@[/K@#D99!?@@@YU
)@@G@@9()EY%/K@#D' @@EY: ^@E)^R9KE)#R9)EY%/,)]RBQB)E)#C @E)^R9K^O&C#@UY$R'K#E^YV
)@@G@@/,0]P9QB)EY2C @EY3R9K^PAC#@UY$R'K#EF/,0]P9/K@#L7 ^@E)^R9KE)#R9)EZ'/,)]RBYW
)@@G@@R9KE)#R9)EY2/,)]RBR9KE)#R9)EZ'/,)]RB ^@EY3R9KEY2R9)E)#/,)]RBQB)EY2C @EY3YX
)@@G@@R9K^PEC#@UY$R'K#E</,0]P9R9KEY2R9)EY>/,0]P^/K@# ;9!)DTT9()EY<A#0DTWR'0#E(YY
)@@G@@A]0DTX/K@#TT@[@EY2/@@#F]9!)EY<9()DTT:8@@@[/K@#E29!?@@@9()EY%/K@#E3 @@EY:YZ
)@@G@@ ^@E)^R9KE)#R9)EY%/,)]RB ^@E,CR9KE,BR9)EY'/,)]RBR9KE,BR9)E)#/,)]RB ^@EY;ZA
)@@G@@R9KEY'R9)E,B/,)]RB ^@E)^R9KE)#R9)EZ'/,)]RBR9KE)#R9)EY2/,)]RBQB)E)#C @E)^ZB
)@@G@@R9K^P?C#@UY$R'K#L7/,0]P9 ^@E)^R9KE)#R9)F[K/,)]RBR9KE)#R9)EZ@/,)]RBR9KE)#ZC
)@@G@@R9)F]J/,)]RBR9KE)#R9)EY'/,)]RB ^@EY;R9KEY'R9)E)#/,)]RBC )EY;[[)V[DC[)V[DZD
)@@G@@;P)@@=W[)V[@/ )#F$ @@@@M[[)V[D9!)DTT9()EY<A#0DTWR'0#F,A]0DTX/K@]SA@[@F[DZE
)@@G@@/@@#G]9!)EY<9()DTT:8@@@[/K@#F79!?@@@9()EY%/K@#F8 @@EY: ^@E)^R9KE)#R9)EY%ZF
)@@G@@/,)]RBQB)E)#C @E)^R9K^P"C#@UY$R'K#G]/,0]P9QB)EY'C @EY;R9K^QYC#@UY$R'K#M ZG
)@@G@@/,0]P9R9KEY'R9)EZ^/,0]P^/K@#M  ^@EZ[R9KEZ@R9)E!@/,)]RBQB)EY2C @EY3R9K^Q(ZH
)@@G@@C#@UY$R'K#GT/,0]P9R9KEY2R9)EY>/,0]P^QB)EY2C @EY3R9K^Q9C#@UY$R'K#L7/,0]P9ZI
)@@G@@R9KEY2R9)EY>/,0]P^C )EY1[[)V[DC[)V[DH[)V]Q/ )#]./K@#L79!)DTT9()EY<A#0DTWZJ
)@@G@@R'0#G,A]0DTX/K@#+]@H@EY0@@@EY2@@@EY4@@@EY6@@@EY8@@@EY'@@@EY/@@@EY"@@@EZ@ZK
)@@G@@@@@EZ]@@@EZ^@@@EZA@@@EZC/@@#L79!)EY<9()DTT:8@@@[/K@#H#9!?@@@9()EY%/K@#H^ZL
)@@G@@ @@EY: ^@E)^R9KE)#R9)EY%/,)]RB/K@#M QB)EY0C @EY1R9K^S^C#@UY$R'K#HK/,0]P9ZM
)@@G@@/K@#HZ ^@E)^R9KE)#R9)F]T/,)]RBR9KE)#R9)EY0/,)]RBR9KE)#R9)F]X/,)]RB ^@EY;ZN
)@@G@@R9KEY'R9)E)#/,)]RB/K@#M QB)EY4C @EY5R9K^SGC#@UY$R'K#H&/,0]P9/K@#]99!)DTTZO
)@@G@@9()EY<A#0DTWR'0#H?A]0DTX/K@#TT@[@EY0/@@#I 9!)EY<9()DTT:8@@@[/K@#H59!?@@@ZP
)@@G@@9()EY%/K@#H6 @@EY: ^@E)^R9KE)#R9)EY%/,)]RB ^@E,CR9KE,BR9)F]-/,)]RBR9KE,BZQ
)@@G@@R9)E)#/,)]RB ^@EY;R9KEY'R9)E,B/,)]RBC )EY;[[)V[DC[)V[D;P)@@=W[)V[@/ )#IGZR
)@@G@@ @@@@M[[)V[D9!)DTT9()EY<A#0DTWR'0#INA]0DTX/K@]SA@[@F[D/@@#I$9!)EY<9()DTTZS
)@@G@@:8@@@[/K@#IW9!?@@@9()EY%/K@#IX @@EY: ^@E)^R9KE)#R9)EY%/,)]RBQB)E)#C @E)^ZT
)@@G@@R9K^SRC#@UY$R'K#I$/,0]P9QB)EY'C @EY;R9K^S7C#@UY$R'K#M /,0]P9R9KEY'R9)EZ^ZU
)@@G@@/,0]P^/K@#M  ^@E)^R9KE)#C#@V[@/,0]M, ^@EZ)R9KEZZR9)E)#/,)]RB ^@E)^R9KE)#ZV
)@@G@@R9)EZ'/,)]RBR9KE)#R9)EY2/,)]RBR9KE)#R9)EZ'/,)]RBQB)E)#C @E)^R9K^T]C#@UY$ZW
)@@G@@R'K#L7/,0]P9 ^@E)^R9KE)#R9)EZA/,)]RBR9KE)#R9)F]:/,)]RB ^@EZBR9KEZAR9)E)#ZX
)@@G@@/,)]RB9!)DTT9()EY<A#0DTWR'0#JUA]0DTX/K@[S.@]@EZA@@@EZ+/@@#J!9!)EY<9()DTTZY
)@@G@@:8@@@[/K@#J=9!?@@@9()EY%/K@#J> @@EY: ^@E)^R9KE)#R9)EY%/,)]RB ^@EZUR9KEZTZZ
)@@G@@R9)E)#/,)]RBQB)EZTC @EZUR9K^U?C#@UY$R'K#L!/,0]P9R9KF[DR9)EZW/,0]NLC[)V[DAA
)@@G@@[[)UZHR9KF[DR9)EZZ/,0]NLC[)V[D[[)UZK9!)DTT9()EY<A#0DTWR'0#K#A]0DTX/K@]SAAB
)@@G@@@[@EZH/@@#KR9!)EY<9()DTT:8@@@[/K@#KG9!?@@@9()EY%/K@#KH @@EY: ^@E)^R9KE)#AC
)@@G@@R9)EY%/,)]RBQB)E)#C @E)^R9K^U0C#@UY$R'K#KR/,0]P99!)DTT9()EY<A#0DTWR'0#KXAD
)@@G@@A]0DTX/K@]SA@[@EZK/@@#K19!)EY<9()DTT:8@@@[/K@#K&9!?@@@9()EY%/K@#K$ @@EY:AE
)@@G@@ ^@E)^R9KE)#R9)EY%/,)]RBQB)E)#C @E)^R9K^VKC#@UY$R'K#K1/,0]P9QB)EZAC @EZBAF
)@@G@@R9K^V0C#@UY$R'K#LH/,0]P9 ^@E)^R9KE)#R9)F];/,)]RBR9KE)#R9)EY8/,)]RBR9KE)#AG
)@@G@@R9)F]"/,)]RBR9KE)#R9)EY6/,)]RBR9KE)#R9)F[K/,)]RBR9KE)#R9)EY6/,)]RBR9KEZAAH
)@@G@@R9)E)#/,0]P^9!)DTT9()EY<A#0DTWR'0#LNA]0DTX/K@[TV@[@EZA/@@#M 9!)EY<9()DTTAI
)@@G@@:8@@@[/K@#LW9!?@@@9()EY%/K@#LX @@EY: ^@E)^R9KE)#R9)EY%/,)]RB ^@E,CR9KE,BAJ
)@@G@@R9)F#[/,)]RBR9KE,BR9)E)#/,)]RB ^@EY;R9KEY'R9)E,B/,)]RB/K@#M  ^@EY;R9KEY'AK
)@@G@@R9)F# /,)]RB/K@#M  ^@EY;R9KEY'R9)F#E/,)]RB/K@#M  ^@EY;R9KEY'R9)F#I/,)]RBAL
)@@G@@/K@#M '=@@@DC;@@@TR9)EW4R9KEZ3/,0]O5R9)EW4C;@@@TR9KEY?/,0]O5C9)@@[[[)EYCAM
)@@G@@/K@]5OC9)@@@[[)EYC/K@]5OR#@F#YR@W@@@C )F^^[ -@@[R@W@@[C )F^A[ -@@[C[)DTVAN
)@@G@@H9)@@[/ )#MW:80DU^/K@#MWG80@@][@0DTWC[\@@[[[)DTXC[\@@@[[)DTVN8K@@ R@KFFQAO
)@@G@@R@)FFRM@-)@@N8K@@TR@KFFSR@)FFTM@-)@@N@KF#4R@KF#5R@)F#6OY;@@@*4F@@@/KF@@@AP
)@@G@@O'0@@[/K@#M(^@KF#4A@KF#5A@)F#6N8K@@TR@KFFSR@)FFTM@M)@@N8K@@ R@KFFQR@)FFRAQ
)@@G@@M@M)@@R@KF#5R@)F#6&'0@@[R;F0@@9!?@@@9()F^#R;F0@@9!?@@@9()F^ C[)F#Y/,)]R?AR
)@@G@@ ^@F^GR9KF^FR9)F^R/,)]RB ^@F^OR9KF^NR9)F^R/,)]RB ^@F^KR9KF^JR9)F^T/,)]RBAS
)@@G@@ ^@F^\R9KF^,R9)F^T/,)]RBR9KF^,R9)F^#/,)]RBR9KF^,R9)F^W/,)]RBQB)F^,C @F^\AT
)@@G@@R9K^W#C#@V#"R'K#O"/,0]P9C )F^C[[)VFCC[)VFCH[)V^:/ )#N>/K@#O"C )F^K[[)VFCAU
)@@G@@C[)VFCH[)V^:/ )#N, ^@F^KR9KF^JR9)F^Z/,)]RBC )F^O[[)VFCC[)VFCH[)V^:/ )#N.AV
)@@G@@ ^@F^OR9KF^NR9)FFF/,)]RBQB)F^JC @F^KR9K^YQC#@V#"R'K#O"/,0]P9 ^@F^\R9KF^,AW
)@@G@@R9)F^J/,)]RBR9KF^,R9)FFI/,)]RB ^@F^KR9KF^JR9)F^,/,)]RB ^@F^\R9KF^,R9)F^NAX
)@@G@@/,)]RBR9KF^,R9)FFI/,)]RB ^@F^OR9KF^NR9)F^,/,)]RB ^@F^\R9KF^,R9)F^B/,)]RBAY
)@@G@@R9KF^,R9)FFI/,)]RB ^@F^CR9KF^BR9)F^,/,)]RB ^@F^\R9KF^,R9)F^F/,)]RBR9KF^,AZ
)@@G@@R9)FFI/,)]RB ^@F^GR9KF^FR9)F^,/,)]RB ^@F^\R9KF^,R9)F^ /,)]RBR9KF^,R9)F^JBA
)@@G@@/,)]RBR9KF^,R9)F^N/,)]RBR9KF^,R9)F^B/,)]RBR9KF^,R9)F^F/,)]RB ^@F^AR9KF^ BB
)@@G@@R9)F^,/,)]RB/K@#P^ ^@F^AR9KF^ R9)FFM/,)]RB/K@#P^'=@@@DC9)@@[[[)F#Z/K@#MFBC
)@@G@@C9)@@@[[)F#Z/K@#MFR#@FF+R@W@@@C )FGC[ -@@[R@W@@[C )FGE[ -@@[C[)DTVH9)@@[BD
)@@G@@/ )#PV:80DU^/K@#PVG80@@][@0DTWC[\@@[[[)DTXC[\@@@[[)DTVN8K@@ R@KFNVR@)FNWBE
)@@G@@M@-)@@N8K@@TR@KFNXR@)FNYM@-)@@N@KFF8R@KFF9R@)FF'OY;@@@*4F@@@/KF@@@O'0@@[BF
)@@G@@/K@#P*^@KFF8A@KFF9A@)FF'N8K@@TR@KFNXR@)FNYM@M)@@N8K@@ R@KFNVR@)FNWM@M)@@BG
)@@G@@R@KFF9R@)FF'&'0@@[R;F0@@9!?@@@9()FGBR;F0@@9!?@@@9()FGDC[)FF+/,)]R? ^@FGXBH
)@@G@@R9KFGWR9)FGT/,)]RBR9KFGWR9)FGB/,)]RBR9KFGWR9)FGT/,)]RB ^@FGCR9KFGBR9)FGWBI
)@@G@@/,)]RBQB)FGBC @FGCR9K^YUC#@VG]R'K#S,/,0]P9R9KFGBR9)FG@/,0]P^QB)FGFC @FGGBJ
)@@G@@R9K^Z:C#@VG]R'K#Q</,0]P9R9KFGFR9)FM//,0]P^/K@#RTQB)FGBC @FGCR9K^Z\C#@VG]BK
)@@G@@R'K#S,/,0]P99!)DTT9()FF"A#0DTWR'0#Q\A]0DTX/K@#TT@[@FGI/@@#R19!)FF"9()DTTBL
)@@G@@:8@@@[/K@#Q89!?@@@9()FG /K@#Q9 @@FGA ^@FGXR9KFGWR9)FG /,)]RB9!)DTT9()FF"BM
)@@G@@A#0DTWR'0#R#A]0DTX/K@#TT@[@FGM/@@#R19!)FF"9()DTT:8@@@[/K@#RG9!?@@@9()FG BN
)@@G@@/K@#RH @@FGA ^@FN@R9KFM_R9)FG /,)]RBR9KFGWR9)FM_/,)]RB ^@FGER9KFGDR9)FGWBO
)@@G@@/,)]RB/K@#R19!)DTT9()FF"A#0DTWR'0#RZA]0DTX/K@#TT@[@FGI/@@#R19!)FF"9()DTTBP
)@@G@@:8@@@[/K@#R*9!?@@@9()FG /K@#R( @@FGA ^@FGXR9KFGWR9)FG /,)]RB ^@FGER9KFGDBQ
)@@G@@R9)FGW/,)]RB ^@FGXR9KFGWR9)FN^/,)]RBR9KFGWR9)FGF/,)]RBR9KFGWR9)FNB/,)]RBBR
)@@G@@R9KFGWR9)FGD/,)]RB ^@FGER9KFGDR9)FGW/,)]RBC )FGE[[)VNOC[)VNO;P)@@=W[)VNFBS
)@@G@@/ )#SD @@@@M[[)VNO9!)DTT9()FF"A#0DTWR'0#SKA]0DTX/K@]SA@[@FNO/@@#S=9!)FF"BT
)@@G@@9()DTT:8@@@[/K@#ST9!?@@@9()FG /K@#SU @@FGA ^@FGXR9KFGWR9)FG /,)]RBQB)FGWBU
)@@G@@C @FGXR9K^)JC#@VG]R'K#S=/,0]P9QB)FGDC @FGER9K^)\C#@VG]R'K#S4/,0]P9R9KFGDBV
)@@G@@R9)FGQ/,0]P^/K@#S4 ^@FGER9KFGDR9)FNR/,)]RB/K@#S4'=@@@DC9)@@[[[)FF</K@#PEBW
)@@G@@C9)@@@[[)FF</K@#PER#@FN$R@W@@@C )FOH[ -@@[C[)DTVH9)@@[/ )#TC:80DU^/K@#TCBX
)@@G@@G80@@][@0DTWC[\@@[[[)DTXC[\@@@[[)DTVN8K@@ R@KF<]R@)F<#M@-)@@N8K@@TR@KF<^BY
)@@G@@R@)F< M@-)@@N@KFN.R@KFN"R@)FN_OY;@@@*4F@@@/KF@@@O'0@@[/K@#TP^@KFN.A@KFN"BZ
)@@G@@A@)FN_N8K@@TR@KF<^R@)F< M@M)@@N8K@@ R@KF<]R@)F<#M@M)@@R@KFN"R@)FN_&'0@@[CA
)@@G@@R;F0@@9!?@@@9()FOGC[)FN$/,)]R? ^@FPSR9KFPRR9)FPO/,)]RBR9KFPRR9)FOG/,)]RBCB
)@@G@@R9KFPRR9)FPO/,)]RB ^@FOHR9KFOGR9)FPR/,)]RB ^@FO<R9KFO+R9)FV%/,)]RB ^@FO1CC
)@@G@@R9KFO0R9)FV%/,)]RB ^@FO.R9KFO/R9)FV%/,)]RB ^@FPDR9KFPCR9)FV%/,)]RBQB)FOGCD
)@@G@@C @FOHR9K^)'C#@VOBR'K#)3/,0]P9R9KFOGR9)FO /,0]P^QB)FOGC @FOHR9K^-SC#@VOBCE
)@@G@@R'K#UW/,0]P9R9KFOGR9)FO /,0]P^QB)FO+C @FO<R9K^+AC#@VOBR'K#U+/,0]P9QB)FO0CF
)@@G@@C @FO1R9K^+6C#@VOBR'K#U*/,0]P99!)DTT9()FO#A#0DTWR'0#U,A]0DTX/K@#0H@[@FO+CG
)@@G@@/@@#V[9!)FO#9()DTT:8@@@[/K@#U79!?@@@9()FOE/K@#U8 @@FOF ^@FPSR9KFPRR9)FOECH
)@@G@@/,)]RB ^@FOJR9KFOIR9)FPR/,)]RB/K@#VT9!)DTT9()FO#A#0DTWR'0#VBA]0DTX/K@#,#CI
)@@G@@@[@FO+/@@#V,9!)FO#9()DTT:8@@@[/K@#VK9!?@@@9()FOE/K@#VL @@FOF ^@FPSR9KFPRCJ
)@@G@@R9)FOE/,)]RB ^@FOJR9KFOIR9)FPR/,)]RBQB)FO0C @FO1R9K^<&C#@VOBR'K#V)/,0]P9CK
)@@G@@/K@#)3QB)FO/C @FO.R9K^<1C#@VOBR'K#V$/,0]P9/K@#)3QB)FPCC @FPDR9K^</C#@VOBCL
)@@G@@R'K#)9/,0]P9/K@#)39!)DTT9()FO#A#0DTWR'0#V4A]0DTX/K@#2P@]@FO+@@@FO//@@#)3CM
)@@G@@9!)FO#9()DTT:8@@@[/K@#V"9!?@@@9()FOE/K@#V_ @@FOF ^@FPSR9KFPRR9)FOE/,)]RBCN
)@@G@@ ^@FOJR9KFOIR9)FPR/,)]RBQB)FO/C @FO.R9K^=BC#@VOBR'K#)</,0]P9QB)FOIC @FOJCO
)@@G@@R9K^=MC#@VOBR'K#)3/,0]P9QB)FO0C @FO1R9K^=ZC#@VOBR'K#WU/,0]P9/K@#X<9!)DTTCP
)@@G@@9()FO#A#0DTWR'0#W)A]0DTX/K@#,#@[@FO//@@#W"9!)FO#9()DTT:8@@@[/K@#W(9!?@@@CQ
)@@G@@9()FOE/K@#W% @@FOF ^@FPSR9KFPRR9)FOE/,)]RBQB)FPRC @FPSR9K^=%C#@VOBR'K#W"CR
)@@G@@/,0]P9QB)FOIC @FOJR9K^>CC#@VOBR'K#)9/,0]P9R9KFOIR9)FOX/,0]P^/K@#)99!)DTTCS
)@@G@@9()FO#A#0DTWR'0#X^A]0DTX/K@#2P@]@FO/@@@FV%/@@#)39!)FO#9()DTT:8@@@[/K@#XICT
)@@G@@9!?@@@9()FOE/K@#XJ @@FOF ^@FPSR9KFPRR9)FOE/,)]RBQB)FPRC @FPSR9K^>VC#@VOBCU
)@@G@@R'K#)3/,0]P9QB)FOIC @FOJR9K^>2C#@VOBR'K#)9/,0]P9R9KFOIR9)FOU/,0]P^/K@#)9CV
)@@G@@QB)FO/C @FO.R9K^& C#@VOBR'K#X!/,0]P9R9KFO/R9)FWG/,0]P^/K@#Y@QB)FO/C @FO.CW
)@@G@@R9K^&NC#@VOBR'K#X7/,0]P9R9KFO/R9)FWM/,0]P^/K@#Y@QB)FO/C @FO.R9K^&-C#@VOBCX
)@@G@@R'K#)3/,0]P9R9KFO/R9)FWS/,0]P^QB)FOIC @FOJR9K^&\C#@VOBR'K#YD/,0]P9R9KFOICY
)@@G@@R9)FO//,0]P^9!)DTT9()FO#A#0DTWR'0#YJA]0DTX/K@#,#@[@FO0/@@#Y\9!)FO#9()DTTCZ
)@@G@@:8@@@[/K@#YS9!?@@@9()FOE/K@#YT @@FOF ^@FPSR9KFPRR9)FOE/,)]RB ^@FWWR9KFWVDA
)@@G@@R9)FOI/,)]RBR9KFWVR9)FPR/,)]RB ^@FOJR9KFOIR9)FWV/,)]RBQB)FPCC @FPDR9K^$]DB
)@@G@@C#@VOBR'K#)9/,0]P9/K@#)39!)DTT9()FO#A#0DTWR'0#Y5A]0DTX/K@#2P@]@FO0@@@FPCDC
)@@G@@/@@#)39!)FO#9()DTT:8@@@[/K@#Y_9!?@@@9()FOE/K@#Z@ @@FOF ^@FPSR9KFPRR9)FOEDD
)@@G@@/,)]RB ^@FWWR9KFWVR9)FOI/,)]RBR9KFWVR9)FPR/,)]RB ^@FOJR9KFOIR9)FWV/,)]RBDE
)@@G@@QB)FPCC @FPDR9K^$HC#@VOBR'K#)9/,0]P99!)DTT9()FO#A#0DTWR'0#ZVA]0DTX/K@#,#DF
)@@G@@@[@FPC/@@#Z"9!)FO#9()DTT:8@@@[/K@#Z=9!?@@@9()FOE/K@#Z> @@FOF ^@FPSR9KFPRDG
)@@G@@R9)FOE/,)]RB ^@FWWR9KFWVR9)FOI/,)]RBR9KFWVR9)FPR/,)]RB ^@FOJR9KFOIR9)FWVDH
)@@G@@/,)]RBQB)FOIC @FOJR9K^$SC#@VOBR'K#)9/,0]P9R9KFOIR9)FO /,0]P^/K@#)99!)DTTDI
)@@G@@9()FO#A#0DTWR'0#)^A]0DTX/K@#2P@]@FPC@@@FV%/@@#)39!)FO#9()DTT:8@@@[/K@#)IDJ
)@@G@@9!?@@@9()FOE/K@#)J @@FOF ^@FPSR9KFPRR9)FOE/,)]RBQB)FPRC @FPSR9K^$:C#@VOBDK
)@@G@@R'K#)3/,0]P9QB)FOIC @FOJR9K^*]C#@VOBR'K#)9/,0]P9R9KFOIR9)FOU/,0]P^/K@#)9DL
)@@G@@QB)FO0C @FO1R9K^*PC#@VOBR'K#)9/,0]P9QB)FOIC @FOJR9K^*)C#@VOBR'K#YD/,0]P9DM
)@@G@@R9KFOIR9)FWG/,0]P^/K@#YD ^@FOJR9KFOIR9)F+"/,)]RB/K@#)9'=@@@DC9)FOI[[)FN*DN
)@@G@@/K@#S'C9)@@@[[)FN*/K@#S'R#@F<IR@W@@@C )F<4[ -@@[R@W@@[C )F<6[ -@@[R@W@@]DO
)@@G@@C )F<8[ -@@[R@W@@#C )F<'[ -@@[R@W@@^C )F</[ -@@[R@W@@ C )F<"[ -@@[R@W@@ADP
)@@G@@C )F=@[ -@@[R@W@@BC )F=][ -@@[R@W@@CC )F=^[ -@@[R@W@@DC )F=A[ -@@[R@W@@EDQ
)@@G@@C )F=C[ -@@[R@W@@FC )F=E[ -@@[R@W@@GC )F=G[ -@@[C[)DTVH9)@@[/ )#-1:80DU^DR
)@@G@@/K@#-1G80@@][@0DTWC[\@@[[[)DTXC[\@@@[[)DTVN8K@@ R@KG  R@)G AM@-)@@N8K@@TDS
)@@G@@R@KG BR@)G CM@-)@@N@KF<=R@KF<>R@)F<&OY;@@@*4F@@@/KF@@@O'0@@[/K@#-"^@KF<=DT
)@@G@@A@KF<>A@)F<&N8K@@TR@KG BR@)G CM@M)@@N8K@@ R@KG  R@)G AM@M)@@R@KF<>R@)F<&DU
)@@G@@&'0@@[R;F0@@9!?@@@9()F<3R;F0@@9!?@@@9()F<5R;F0@@9!?@@@9()F<7R;F0@@9!?@@@DV
)@@G@@9()F<9R;F0@@9!?@@@9()F<;R;F0@@9!?@@@9()F<.R;F0@@9!?@@@9()F<_R;F0@@9!?@@@DW
)@@G@@9()F=[R;F0@@9!?@@@9()F=#R;F0@@9!?@@@9()F= R;F0@@9!?@@@9()F=BR;F0@@9!?@@@DX
)@@G@@9()F=DR;F0@@9!?@@@9()F=FC[)F<I/,)]R? ^@F=LR9KF=KR9)F=H/,)]RBR9KF=KR9)F<5DY
)@@G@@/,)]RBR9KF=KR9)F=H/,)]RB ^@F<6R9KF<5R9)F=K/,)]RBQB)F<5C @F<6R9K^*?C#@V<,DZ
)@@G@@R'K#=Q/,0]P9R9KF<5R9)F<?/,0]P^C )F=E[[)V0/9!)DTT9()F<%A#0DTWR'0#<SA]0DTXEA
)@@G@@/K@]SA@[@F0//@@#<%9!)F<%9()DTT:8@@@[/K@#<-9!?@@@9()F<1/K@#<+ @@F<2 ^@F=LEB
)@@G@@R9KF=KR9)F<1/,)]RB ^@F=GR9KF=FR9)F=K/,)]RB ^@F=LR9KF=KR9)F=D/,)]RBR9KF=KEC
)@@G@@R9)F0_/,)]RB ^@F=ER9KF=DR9)F=K/,)]RBC )F=E[[)V0/C[)V0/;P)@@=W[)V1]/ )#</ED
)@@G@@ @@@@M[[)V0/C[)V0/S[)V1]/ 0#=[ @@@@N[[0V0/C[)V0/[[)V1 QB)F=DC @F=ER9K^(QEE
)@@G@@C#@V<,R'K#=E/,0]P9 ^@F=LR9KF=KR9)F=F/,)]RBR9KF=KR9)F=D/,)]RB ^@F<"R9KF<.EF
)@@G@@R9)F=K/,)]RB/K@#>VQB)F<5C @F<6R9K^(!C#@V<,R'K#>#/,0]P9R9KF<5R9)F<?/,0]P^EG
)@@G@@C )F=E[[)V0/9!)DTT9()F<%A#0DTWR'0#=$A]0DTX/K@]SA@[@F0//@@#=99!)F<%9()DTTEH
)@@G@@:8@@@[/K@#=09!?@@@9()F<1/K@#=1 @@F<2 ^@F=LR9KF=KR9)F<1/,)]RB ^@F=GR9KF=FEI
)@@G@@R9)F=K/,)]RBQB)F=FC @F=GR9K^%JC#@V<,R'K#<%/,0]P9R9KF=FR9)F1M/,0]P^/K@#<%EJ
)@@G@@9!)DTT9()F<%A#0DTWR'0#>DA]0DTX/K@#TT@[@F<5/@@#>V9!)F<%9()DTT:8@@@[/K@#>MEK
)@@G@@9!?@@@9()F<1/K@#>N @@F<2 ^@F=LR9KF=KR9)F<1/,)]RB ^@F<"R9KF<.R9)F=K/,)]RBEL
)@@G@@QB)F<5C @F<6R9K^%+C#@V<,R'K#>=/,0]P9R9KF<5R9)F<?/,0]P^QB)F<5C @F<6R9K^%2EM
)@@G@@C#@V<,R'K#:&/,0]P9R9KF<5R9)F<?/,0]P^QB)F<7C @F<8R9K^:DC#@V<,R'K#>7/,0]P9EN
)@@G@@R9KF<7R9)F1S/,0]P^/K@#&OQB)F<7C @F<8R9K^:HC#@V<,R'K#&[/,0]P9R9KF<7R9)F1YEO
)@@G@@/,0]P^/K@#&OQB)F<7C @F<8R9K^:LC#@V<,R'K#&F/,0]P9R9KF<7R9)F1=/,0]P^/K@#&OEP
)@@G@@QB)F<7C @F<8R9K^:PC#@V<,R'K#:&/,0]P9R9KF<7R9)F1%/,0]P^ ^@F=LR9KF=KR9)F=HEQ
)@@G@@/,)]RBR9KF=KR9)F<5/,)]RB ^@F<6R9KF<5R9)F=K/,)]RBQB)F<5C @F<6R9K^:TC#@V<,ER
)@@G@@R'K#$1/,0]P9R9KF<5R9)F<?/,0]P^C )F=E[[)V0/9!)DTT9()F<%A#0DTWR'0#&0A]0DTXES
)@@G@@/K@]SA@[@F0//@@#$]9!)F<%9()DTT:8@@@[/K@#&99!?@@@9()F<1/K@#&' @@F<2 ^@F=LET
)@@G@@R9KF=KR9)F<1/,)]RB ^@F=GR9KF=FR9)F=K/,)]RB ^@F=LR9KF=KR9)F=D/,)]RBR9KF=KEU
)@@G@@R9)F0_/,)]RB ^@F=ER9KF=DR9)F=K/,)]RBC )F=E[[)V0/C[)V0/;P)@@=W[)V1]/ )#$OEV
)@@G@@ @@@@M[[)V0/C[)V0/S[)V1]/ 0#$T @@@@N[[0V0/C[)V0/[[)V1!QB)F=DC @F=ER9K^?#EW
)@@G@@C#@V<,R'K#$+/,0]P9 ^@F=LR9KF=KR9)F<./,)]RBR9KF=KR9)F=F/,)]RBR9KF=KR9)F=DEX
)@@G@@/,)]RB ^@F<"R9KF<.R9)F=K/,)]RB/K@#*.QB)F<5C @F<6R9K^?UC#@V<,R'K#*Y/,0]P9EY
)@@G@@R9KF<5R9)F<?/,0]P^C )F=E[[)V0/9!)DTT9()F<%A#0DTWR'0#*]A]0DTX/K@]SA@[@F0/EZ
)@@G@@/@@#*O9!)F<%9()DTT:8@@@[/K@#*F9!?@@@9()F<1/K@#*G @@F<2 ^@F=LR9KF=KR9)F<1FA
)@@G@@/,)]RB ^@F=GR9KF=FR9)F=K/,)]RBQB)F=FC @F=GR9K^?/C#@V<,R'K#$]/,0]P9R9KF=FFB
)@@G@@R9)F1M/,0]P^/K@#$]9!)DTT9()F<%A#0DTWR'0#*=A]0DTX/K@#TT@[@F<5/@@#*.9!)F<%FC
)@@G@@9()DTT:8@@@[/K@#*!9!?@@@9()F<1/K@#*, @@F<2 ^@F=LR9KF=KR9)F<1/,)]RB ^@F11FD
)@@G@@R9KF10R9)F<./,)]RBR9KF10R9)F=K/,)]RB ^@F<"R9KF<.R9)F10/,)]RB ^@F=LR9KF=KFE
)@@G@@R9)F=H/,)]RBR9KF=KR9)F<5/,)]RBQB)F=KC @F=LR9K^!JC#@V<,R'K#%Y/,0]P9 ^@F=LFF
)@@G@@R9KF=KR9)F=D/,)]RBR9KF=KR9)F0_/,)]RB ^@F=ER9KF=DR9)F=K/,)]RBQB)F=DC @F=EFG
)@@G@@R9K^,[C#@V<,R'K#(V/,0]P9 ^@F=LR9KF=KR9)G^&/,)]RBR9KF=KR9)F<7/,)]RBR9KF=KFH
)@@G@@R9)G^(/,)]RBR9KF=KR9)F<./,)]RBR9KF=KR9)G^!/,)]RBR9KF=KR9)F=D/,)]RB ^@F<"FI
)@@G@@R9KF<.R9)F=K/,)]RBC )F<"[[)V0/C[)V0/;P)@@=W[)V1]/ )#(9 @@@@M[[)V0/9!)DTTFJ
)@@G@@9()F<%A#0DTWR'0#%@A]0DTX/K@]SA@[@F0//@@#%O9!)F<%9()DTT:8@@@[/K@#%D9!?@@@FK
)@@G@@9()F<1/K@#%E @@F<2 ^@F=LR9KF=KR9)F<1/,)]RBQB)F=KC @F=LR9K^,SC#@V<,R'K#%OFL
)@@G@@/,0]P9QB)F<.C @F<"R9K^,8C#@V<,R'K#:</,0]P9R9KF<.R9)F=B/,0]P^/K@#:< ^@F=LFM
)@@G@@R9KF=KR9)F=H/,)]RBR9KF=KR9)F<5/,)]RBQB)F=KC @F=LR9K^\#C#@V<,R'K#:@/,0]P9FN
)@@G@@ ^@F=LR9KF=KR9)G^&/,)]RBR9KF=KR9)F<7/,)]RBR9KF=KR9)G^(/,)]RBR9KF=KR9)F<.FO
)@@G@@/,)]RBR9KF=KR9)G^'/,)]RB ^@F<"R9KF<.R9)F=K/,)]RB/K@#(2 ^@F=LR9KF=KR9)F=HFP
)@@G@@/,)]RBR9KF=KR9)F<5/,)]RBQB)F=KC @F=LR9K^\XC#@V<,R'K#:&/,0]P9 ^@F=LR9KF=KFQ
)@@G@@R9)G^&/,)]RBR9KF=KR9)F<7/,)]RBR9KF=KR9)G^(/,)]RBR9KF=KR9)F<./,)]RBR9KF=KFR
)@@G@@R9)G [/,)]RB ^@F<"R9KF<.R9)F=K/,)]RB/K@#(2'=@@@DC9)@@[[[)F<J/K@#)_C9)@@@FS
)@@G@@[[)F<J/K@#)_R#@G LR^KG 6P8K@@[C )G 7[[-@@@C[)DTVH9)@@[/ )#:8:80DU^/K@#:8FT
)@@G@@G80@@][@0DTWC[\@@[[[)DTXC[\@@@[[)DTVN8K@@ R@KGG<R@)GG=M@-)@@N8K@@TR@KGG>FU
)@@G@@R@)GG&M@-)@@N@KG $R@KG *R@)G (OY;@@@*4F@@@/KF@@@O'0@@[/K@#? ^@KG $A@KG *FV
)@@G@@A@)G (N8K@@TR@KGG>R@)GG&M@M)@@N8K@@ R@KGG<R@)GG=M@M)@@R@KG *R@)G (&'0@@[FW
)@@G@@R;F0@@C ?@@@!D)G 7CD)G 7[ )G 7O;@@@[AB@G 6R;F0@@AB@G 8CD)G 9[ )G 9C[)G LFX
)@@G@@/,)]R?C[)W .[[)W 8 ^@G ;R9KG 'R9)GA@/,)]RBQB)G 6C @G 7R9K^\7C#@W 1R'K#?3FY
)@@G@@/,0]P9R9KG 6R9)G \/,0]P^ ^@GAER9KGADR9)G 6/,)]RBR9KGADR9)GAA/,)]RB ^@G 7FZ
)@@G@@R9KG 6R9)GAD/,)]RBQB)G 6C @G 7R9K^0BC#@W 1R'K#! /,0]P9/K@#!NQB)G 6C @G 7GA
)@@G@@R9K^0ZC#@W 1R'K#!I/,0]P9R9KG 6R9)G \/,0]P^R9KGG)R9)G '/,0]NLC[)WG)[[)W 8GB
)@@G@@QB)G 6C @G 7R9K^1[C#@W 1R'K#!Y/,0]P9R9KG 6R9)G \/,0]P^/K@#!Y'=@@@DC9)@@[GC
)@@G@@[[)G M/K@#:(C9)@@@[[)G M/K@#:(R#@GG\R@W@@@C )GHP[ -@@[C[)DTVH9)@@[/ )#!2GD
)@@G@@:80DU^/K@#!2G80@@][@0DTWC[\@@[[[)DTXC[\@@@[[)DTVN8K@@ R@KGI]R@)GI#M@-)@@GE
)@@G@@N8K@@TR@KGI^R@)GI M@-)@@N@KGH R@KGHAR@)GHBOY;@@@*4F@@@/KF@@@O'0@@[/K@#!_GF
)@@G@@^@KGH A@KGHAA@)GHBN8K@@TR@KGI^R@)GI M@M)@@N8K@@ R@KGI]R@)GI#M@M)@@R@KGHAGG
)@@G@@R@)GHB&'0@@[R;F0@@9!?@@@9()GHOC[)GG\/,)]R?QB)GHOC @GHPR9K^1FC#@WHJR'K#\:GH
)@@G@@/,0]P9C )GHU[[)WH?9!)DTT9()GHFA#0DTWR'0#,=A]0DTX/K@]SA@[@GH?/@@#,89!)GHFGI
)@@G@@9()DTT:8@@@[/K@#,!9!?@@@9()GHM/K@#,, @@GHN ^@GH0R9KGH\R9)GHM/,)]RBQB)GH\GJ
)@@G@@C @GH0R9K^1(C#@WHJR'K#,8/,0]P9 ^@GH0R9KGH\R9)GHT/,)]RBR9KGH\R9)GH6/,)]RBGK
)@@G@@ ^@GHUR9KGHTR9)GH\/,)]RBC )GHU[[)WH?C[)WH?;P)@@=W[)WH9/ )#\E @@@@M[[)WH?GL
)@@G@@C[)WH?S[)WH9/ 0#\J @@@@N[[0WH?C[)WH?[[)WH/QB)GHTC @GHUR9K^2DC#@WHJR'K#\SGM
)@@G@@/,0]P9 ^@GH0R9KGH\R9)GH_/,)]RBR9KGH\R9)GHQ/,)]RBR9KGH\R9)GHT/,)]RB ^@GHUGN
)@@G@@R9KGHTR9)GH\/,)]RB/K@#\*'=@@@DC9)GHT[[)GG0/K@#!=C9)@@@[[)GG0/K@#!=R#@GIIGO
)@@G@@R@W@@@C )GI4[ -@@[C[)DTVH9)@@[/ )#\/:80DU^/K@#\/G80@@][@0DTWC[\@@[[[)DTXGP
)@@G@@C[\@@@[[)DTVN8K@@ R@KGJ<R@)GJ=M@-)@@N8K@@TR@KGJ>R@)GJ&M@-)@@N@KGI=R@KGI>GQ
)@@G@@R@)GI&OY;@@@*4F@@@/KF@@@O'0@@[/K@#0D^@KGI=A@KGI>A@)GI&N8K@@TR@KGJ>R@)GJ&GR
)@@G@@M@M)@@N8K@@ R@KGJ<R@)GJ=M@M)@@R@KGI>R@)GI&&'0@@[R;F0@@9!?@@@9()GI3C[)GIIGS
)@@G@@/,)]R?QB)GI3C @GI4R9K^2)C#@WI,R'K#10/,0]P9C )GI9[[)WJE9!)DTT9()GI%A#0DTWGT
)@@G@@R'0#0,A]0DTX/K@]SA@[@GJE/@@#1@9!)GI%9()DTT:8@@@[/K@#079!?@@@9()GI1/K@#08GU
)@@G@@ @@GI2 ^@GJIR9KGJHR9)GI1/,)]RB ^@GI6R9KGI5R9)GJH/,)]RB ^@GJIR9KGJHR9)GI8GV
)@@G@@/,)]RBR9KGJHR9)GJU/,)]RB ^@GI9R9KGI8R9)GJH/,)]RBC )GI9[[)WJEC[)WJE;P)@@=GW
)@@G@@W[)WJX/ )#1M @@@@M[[)WJEC[)WJES[)WJX/ 0#1R @@@@N[[0WJEC[)WJE[[)WJ)QB)GI8GX
)@@G@@C @GI9R9K^3AC#@WI,R'K#1)/,0]P9 ^@GJIR9KGJHR9)GI5/,)]RBR9KGJHR9)GI8/,)]RBGY
)@@G@@ ^@GI9R9KGI8R9)GJH/,)]RB/K@#1!'=@@@DC9)GI8[[)GIJ/K@#\,C9)@@@[[)GIJ/K@#\,GZ
)@@G@@R#@GJ\R@W@@@C )GKP[ -@@[R@W@@[C )GKR[ -@@[C[)DTVH9)@@[/ )#2^:80DU^/K@#2^HA
)@@G@@G80@@][@0DTWC[\@@[[[)DTXC[\@@@[[)DTVN8K@@ R@KGL$R@)GL*M@-)@@N8K@@TR@KGL(HB
)@@G@@R@)GL%M@-)@@N@KGK R@KGKAR@)GKBOY;@@@*4F@@@/KF@@@O'0@@[/K@#2L^@KGK A@KGKAHC
)@@G@@A@)GKBN8K@@TR@KGL(R@)GL%M@M)@@N8K@@ R@KGL$R@)GL*M@M)@@R@KGKAR@)GKB&'0@@[HD
)@@G@@R;F0@@9!?@@@9()GKOR;F0@@9!?@@@9()GKQC[)GJ\/,)]R? ^@GKWR9KGKVR9)GK=/,)]RBHE
)@@G@@QB)GKOC @GKPR9K^3XC#@WKJR'K#28/,0]P9R9KGKOR9)GKH/,0]P^ ^@GK7R9KGK6R9)GKOHF
)@@G@@/,)]RBR9KGK6R9)GK?/,)]RB ^@GKPR9KGKOR9)GK6/,)]RB9!)DTT9()GKFA#0DTWR'0#3DHG
)@@G@@A]0DTX/K@[S.@]@GKO@@@GKY/@@#3W9!)GKF9()DTT:8@@@[/K@#3N9!?@@@9()GKM/K@#3OHH
)@@G@@ @@GKN ^@GK7R9KGK6R9)GKM/,)]RB ^@GK+R9KGK-R9)GK6/,)]RBQB)GK-C @GK+R9K^35HI
)@@G@@C#@WKJR'K#3+/,0]P9QB)GKVC @GKWR9K^4GC#@WKJR'K#3(/,0]P9/K@#35QB)GK-C @GK+HJ
)@@G@@R9K^4RC#@WKJR'K#35/,0]P9QB)GK-C @GK+R9K^40C#@WKJR'K#35/,0]P9QB)GKYC @GKZHK
)@@G@@R9K^5KC#@WKJR'K#3"/,0]P9R9KGKYR9)GLQ/,0]P^QB)GKYC @GKZR9K^5OC#@WKJR'K#4^HL
)@@G@@/,0]P9 ^@GK7R9KGK6R9)GKS/,)]RBR9KGK6R9)GKY/,)]RB ^@GKTR9KGKSR9)GK6/,)]RBHM
)@@G@@QB)GKSC @GKTR9K^54C#@WKJR'K#5N/,0]P9QB)GKQC @GKRR9K^58C#@WKJR'K#4W/,0]P9HN
)@@G@@/K@#5QQB)GKVC @GKWR9K^6#C#@WKJR'K#4</,0]P9/K@#5QQB)GKOC @GKPR9K^6IC#@WKJHO
)@@G@@R'K#4?/,0]P9R9KGKOR9)GLZ/,0]P^9!)DTT9()GKFA#0DTWR'0#42A]0DTX/K@[TV@[@GKOHP
)@@G@@/@@#5A9!)GKF9()DTT:8@@@[/K@#4;9!?@@@9()GKM/K@#4/ @@GKN ^@GK7R9KGK6R9)GKMHQ
)@@G@@/,)]RBQB)GK6C @GK7R9K^6SC#@WKJR'K#5A/,0]P9 ^@GK7R9KGK6R9)GKS/,)]RBR9KGK6HR
)@@G@@R9)GL=/,)]RB ^@GKTR9KGKSR9)GK6/,)]RB/K@#5N'=@@@DC9)GKS[[)GJ0/K@#13C9)@@@HS
)@@G@@[[)GJ0/K@#13R9K#6GA[Z@@@[0Z@@@[^\@@[[DJ@@[$B0DUA/\@]O2^[J@@@[0Z@@@[@\@@[HT
)@@G@@$B0DUA/\@]O2/[@]O:R9KD%N/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]ODHU
)@@G@@^[\@@@R9KDWQA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2HV
)@@G@@H[@T%Q0@@@@K/\@]O:&;K@@@G@KT%Q @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KDW4A Z@@@HW
)@@G@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@#6<C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)T%THX
)@@G@@/K@]O:^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2R9KD%W/,0]N;^[\@@@R9KDWQA Z@@@[0Z@@@HY
)@@G@@[@\@@[$B0DUA/\@]O2/K@#6</K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)T%THZ
)@@G@@/K@]O:/[@]O:R9KD%Z/,0]OW @@@@MR'K]O:/,0]ODR9KD%+/,0]N;/K@#65/K@]N0C[)@@IIA
)@@G@@H[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)T%T/K@]O:R9KD%W/,0]N;/K@#7[/K@]N0H[@T%QIB
)@@G@@0@@@@K/\@]O:&;K@@@G@KT%Q @@@@GW8@@@AG@)@@G&;K@@[/K@#7G/K@]N0R9KD7F/,0]N;IC
)@@G@@/K@#7K/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)T%T/K@]O:R9KD7T/,0]N;ID
)@@G@@/K@#7W/K@]N0R9KD7F/,0]N;/K@#7)/K@]N0R9KD7W/,0]N;/K@#7=/K@]N0/[@]O:R9KD%ZIE
)@@G@@/,0]OW @@@@MR'K]O:/,0]OD^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KD%Z/,0]OWIF
)@@G@@D9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KD%DA Z@@@[0Z@@@[@\@@[IG
)@@G@@$B0DUA/\@]O2/K@#8]/K@]N0/[@]O:R9KD%Z/,0]OW @@@@MR'K]O:/,0]OD^[J@@@[0Z@@@IH
)@@G@@[@\@@[$B0DUA/\@]O2/[@]O:R9KD%Z/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:II
)@@G@@/,0]OD^[\@@@R9KDW%A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@#8)/K@]N0/[@]O:R9KD8KIJ
)@@G@@/,0]OWR'0]O:/,K]N:H9@@@[/K@#8*/K@]N0/[@]O:R9KD%Z/,0]OWR'0]O:/,K]N:H9@@@[IK
)@@G@@/K@#80/K@]N0/[@]O:R9KD%Z/,0]OW @@@@MR'K]O:/,0]OD^[J@@@[0Z@@@[@\@@[$B0DUAIL
)@@G@@/\@]O2/[@]O:R9KD%Z/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@IM
)@@G@@R9KDW%A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KD%Z/,0]OW @@@@MR'K]O:/,0]ODIN
)@@G@@^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KD%Z/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PIO
)@@G@@C9)@@[R'K]O:/,0]OD^[\@@@R9KD<DA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@#9%/K@]N0IP
)@@G@@/[@]O:R9KD8K/,0]OWR'0]O:/,K]N:H9@@@[/K@#92/K@]N0/[@]O:R9KD8K/,0]OWR'0]O:IQ
)@@G@@/,K]N:H9@@@[/K@#9'/K@]N0R9KD%Z/,0]N;/K@#9"/K@]N0/[@]O:R9KD%Z/,0]OW @@@@MIR
)@@G@@R'K]O:/,0]OD^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@T%Q0@@@@K/\@]O:&;K@@@G@KT%QIS
)@@G@@ @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KDW4A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@#'VIT
)@@G@@/K@]N0/[@]O:R9KD%Z/,0]OW @@@@MR'K]O:/,0]ODH[@T%Q0@@@@K/\@]O:&;K@@@G@KT%QIU
)@@G@@ @@@@GW8@@@AG@)@@G&;K@@[^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KD8-/,0]OWIV
)@@G@@D9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KD<HA Z@@@[0Z@@@[@\@@[IW
)@@G@@$B0DUA/\@]O2H[@T%Q0@@@@K/\@]O:&;K@@@G@KT%Q @@@@GW8@@@AG@)@@G&;K@@[^[J@@@IX
)@@G@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KD8-/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[IY
)@@G@@R'K]O:/,0]OD^[\@@@R9KD(ZA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@T%Q0@@@@K/\@]O:IZ
)@@G@@&;K@@@G@KT%Q @@@@GW8@@@AG@)@@G&;K@@[/K@#;%/K@]N0R9KD7+/,0]N;/K@#;,/K@]N0JA
)@@G@@/[@]O:R9KD8=/,0]OWR'0]O:/,K]N:H9@@@[/K@#;6/K@]N0/[@]O:R9KD8=/,0]OWR'0]O:JB
)@@G@@/,K]N:H9@@@[/K@#;"/K@]N0^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@T8:0@@@@K/\@]O:JC
)@@G@@&;K@@@G@KT8: @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KD<HA Z@@@[0Z@@@[@\@@[$B0DUAJD
)@@G@@/\@]O2/K@#/P/K@]N0H[@T%Q0@@@@K/\@]O:&;K@@@G@KT%Q @@@@GW8@@@AG@)@@G&;K@@[JE
)@@G@@/K@#/)/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)T%T/K@]O:/[@]O:R9KD%ZJF
)@@G@@/,0]OW @@@@MR'K]O:/,0]ODR9K#.BA[Z@@@[0Z@@@[^\@@[[DJ@@[$B0DUA/\@]O2^[J@@@JG
)@@G@@[0Z@@@[@\@@[$B0DUA/\@]O2R9KD84/,0]N;^[\@@@R9KD(8A Z@@@[0Z@@@[@\@@[$B0DUAJH
)@@G@@/\@]O2%[@T%T/K@]O:/K@#"YR9K#.XA[Z@@@[0Z@@@[^\@@[[DJ@@[$B0DUA/\@]O2^[J@@@JI
)@@G@@[0Z@@@[@\@@[$B0DUA/\@]O2R9KD77/,0]N;^[\@@@R9KD(5A Z@@@[0Z@@@[@\@@[$B0DUAJJ
)@@G@@/\@]O2/K@#.^R9K#"FA[Z@@@[0Z@@@[^\@@[[DJ@@[$B0DUA/\@]O2^[J@@@[0Z@@@[@\@@[JK
)@@G@@$B0DUA/\@]O2/[@]O:R9KD8K/,0]OW @@@@MR'K]O:/,0]OD^[\@@@R9KDW%A Z@@@[0Z@@@JL
)@@G@@[@\@@[$B0DUA/\@]O2/[@]O:R9KD%Z/,0]OW @@@@MR'K]O:/,0]OD^[J@@@[0Z@@@[@\@@[JM
)@@G@@$B0DUA/\@]O2R9KD77/,0]N;^[\@@@R9KD(5A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@#.^JN
)@@G@@^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KD8K/,0]OW @@@@MR'K]O:/,0]OD^[\@@@JO
)@@G@@R9KDW%A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@#.^/K@]N0H[@T%Q0@@@@K/\@]O:&;K@@@JP
)@@G@@G@KT%Q @@@@GW8@@@AG@)@@G&;K@@[/K@#"(/K@]N0H[@T8"0@@@@K/\@]O:&;K@@@G@KT8"JQ
)@@G@@ @@@@GW8@@@AG@)@@G&;K@@[^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@T9[0@@@@K/\@]O:JR
)@@G@@&;K@@@G@KT9[ @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KD(;A Z@@@[0Z@@@[@\@@[$B0DUAJS
)@@G@@/\@]O2/K@#_D/K@]N0H[@T9[0@@@@K/\@]O:&;K@@@G@KT9[ @@@@GW8@@@AG@)@@G&;K@@[JT
)@@G@@/K@#_O/K@]N0H[@T8"0@@@@K/\@]O:&;K@@@G@KT8" @@@@GW8@@@AG@)@@G&;K@@[^[J@@@JU
)@@G@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@T9[0@@@@K/\@]O:&;K@@@G@KT9[ @@@@GW8@@@AG@)@@GJV
)@@G@@&;K@@[^[\@@@R9KD(;A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@#_4/K@]N0H[@T9[0@@@@KJW
)@@G@@/\@]O:&;K@@@G@KT9[ @@@@GW8@@@AG@)@@G&;K@@[/K@#__/K@]N0C[)@@IH[)@[]T9)@@AJX
)@@G@@R@K@@H&8K@@@G[)@@[%[)T%T/K@]O:R9KEG[/,0]N;/K@^@F/K@]N0R9KEG^/,0]N;/K@^@JJY
)@@G@@/K@]N0H[@T%Q0@@@@K/\@]O:&;K@@@G@KT%Q @@@@GW8@@@AG@)@@G&;K@@[/K@^@U/K@]N0JZ
)@@G@@C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)T%T/K@]O:/[@]O:R9KD%Z/,0]OW @@@@MKA
)@@G@@R'K]O:/,0]ODR9KEGB/,0]N;^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KEGB/,0]OWKB
)@@G@@D9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KDW7A Z@@@[0Z@@@[@\@@[KC
)@@G@@$B0DUA/\@]O2/K@^[]/K@]N0R9KD7,/,0]N;/K@^[A/K@]N0C[)@@IH[)@[]T9)@@AR@K@@HKD
)@@G@@&8K@@@G[)@@[%[)T%T/K@]O:H[@UGE0@@@@K/\@]O:&;K@@@G@KUGE @@@@GW8@@@AG@)@@GKE
)@@G@@&;K@@[R9KEG[/,0]N;/K@^[V/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)T%TKF
)@@G@@/K@]O:R9KEGH/,0]N;/K@^[$/K@]N0R9K^[2A[Z@@@[0Z@@@[^\@@[[DJ@@[$B0DUA/\@]O2KG
)@@G@@R9KD%Z/,0]N;/K@^[5R9KEG^/,0]N;/K@^[5/K@]N0H[@T%Q0@@@@K/\@]O:&;K@@@G@KT%QKH
)@@G@@ @@@@GW8@@@AG@)@@G&;K@@[/K@^]@/K@]N0/[@]O:R9KD%Z/,0]OW @@@@MR'K]O:/,0]ODKI
)@@G@@^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KD8K/,0]OW @@@@MR'K]O:/,0]OD^[\@@@KJ
)@@G@@R9KD%AA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^]U/K@]N0R9KEG=/,0]N;%[@T%T/K@]O:KK
)@@G@@/K@^])/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)T%T/K@]O:/[@]O:R9KD%ZKL
)@@G@@/,0]OW @@@@MR'K]O:/,0]OD^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KEG$/,0]OWKM
)@@G@@D9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KD%]A Z@@@[0Z@@@[@\@@[KN
)@@G@@$B0DUA/\@]O2/K@^#A/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)T%T/K@]O:KO
)@@G@@R9KEG,/,0]N;/K@^#M/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)T%T/K@]O:KP
)@@G@@^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KD8K/,0]OW @@@@MR'K]O:/,0]OD^[\@@@KQ
)@@G@@R9KD<HA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2R9K^^#KR
)@@G@@A[Z@@@[0Z@@@[^\@@[[DJ@@[$B0DUA/\@]O2R9KD%Z/,0]N;^[\@@@R9KDW4A Z@@@[0Z@@@KS
)@@G@@[@\@@[$B0DUA/\@]O2/K@^^HR9KEG1/,0]N;^[\@@@R9KDW4A Z@@@[0Z@@@[@\@@[$B0DUAKT
)@@G@@/\@]O2/K@^^H/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)UGE/K@]O:H[@T%QKU
)@@G@@0@@@@K/\@]O:&;K@@@G@KT%Q @@@@GW8@@@AG@)@@G&;K@@[/K@^^)/K@]N0^[J@@@[0Z@@@KV
)@@G@@[@\@@[$B0DUA/\@]O2H[@UG40@@@@K/\@]O:&;K@@@G@KUG4 @@@@GW8@@@AG@)@@G&;K@@[KW
)@@G@@^[\@@@R9KD<HA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^^7/K@]N0R9KEG1/,0]N;/K@^^;KX
)@@G@@/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)T%T/K@]O:R9KEGB/,0]N;^[J@@@KY
)@@G@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KEGB/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[KZ
)@@G@@R'K]O:/,0]OD^[\@@@R9KD<HA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2R9KEGB/,0]N;^[J@@@LA
)@@G@@[0Z@@@[@\@@[$B0DUA/\@]O2R9K^ 4A[Z@@@[0Z@@@[^\@@[[DJ@@[$B0DUA/\@]O2R9KD%ZLB
)@@G@@/,0]N;^[\@@@R9KDW4A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^ "R9KEG1/,0]N;^[\@@@LC
)@@G@@R9KDW4A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^ "/K@]N0R9KEG1/,0]N;/K@^A]/K@]N0LD
)@@G@@/[@]O:R9KD%Z/,0]OW @@@@MR'K]O:/,0]OD%[@T%T/K@]O:/K@^AG/K@]N0H[@UG70@@@@KLE
)@@G@@/\@]O:&;K@@@G@KUG7 @@@@GW8@@@AG@)@@G&;K@@[^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2LF
)@@G@@H[@T%Q0@@@@K/\@]O:&;K@@@G@KT%Q @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KDW$A Z@@@LG
)@@G@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^A?/K@]N0H[@T8"0@@@@K/\@]O:&;K@@@G@KT8" @@@@GLH
)@@G@@W8@@@AG@)@@G&;K@@[^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@T9[0@@@@K/\@]O:&;K@@@LI
)@@G@@G@KT9[ @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KD(;A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2LJ
)@@G@@/K@^BG/K@]N0H[@UGE0@@@@K/\@]O:&;K@@@G@KUGE @@@@GW8@@@AG@)@@G&;K@@[/K@^BRLK
)@@G@@/K@]N0/[@]O:R9KD%Z/,0]OW @@@@MR'K]O:/,0]OD^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2LL
)@@G@@/[@]O:R9KD%Z/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KD%]LM
)@@G@@A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^B5/K@]N0H[@T8"0@@@@K/\@]O:&;K@@@G@KT8"LN
)@@G@@ @@@@GW8@@@AG@)@@G&;K@@[^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@T9[0@@@@K/\@]O:LO
)@@G@@&;K@@@G@KT9[ @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KD(;A Z@@@[0Z@@@[@\@@[$B0DUALP
)@@G@@/\@]O2/K@^CP/K@]N0H[@T9[0@@@@K/\@]O:&;K@@@G@KT9[ @@@@GW8@@@AG@)@@G&;K@@[LQ
)@@G@@/K@^C)/K@]N0R9KEI /,0]N;/K@^C=/K@]N0R9KEIC/,0]N;/K@^C*/K@]N0^[J@@@[0Z@@@LR
)@@G@@[@\@@[$B0DUA/\@]O2H[@UU[0@@@@K/\@]O:&;K@@@G@KUU[ @@@@GW8@@@AG@)@@G&;K@@[LS
)@@G@@^[\@@@R9KEH7A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^C_/K@]N0C[)@@IH[)@[]T9)@@ALT
)@@G@@R@K@@H&8K@@@G[)@@[%[)UUB/K@]O:R9KEUE/,0]N;/K@^DF/K@]N0R9KEV//,0]N;/K@^DJLU
)@@G@@/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)UZ./K@]O:/[@]O:R9KEZ'/,0]OWLV
)@@G@@ @@@@MR'K]O:/,0]ODR9KE)@/,0]N;/K@^D-/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@LW
)@@G@@G[)@@[%[)UZ./K@]O:R9KE??/,0]N;/K@^D!/K@]N0/[@]O:R9KEZ'/,0]OW @@@@MR'K]O:LX
)@@G@@/,0]OD^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KEZ'/,0]OWD9)@@@-]K@@M-]@@@MLY
)@@G@@9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KEZ>A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:LZ
)@@G@@R9KEZ'/,0]OW @@@@MR'K]O:/,0]OD^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KEZ'MA
)@@G@@/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KEZ?A Z@@@[0Z@@@MB
)@@G@@[@\@@[$B0DUA/\@]O2/K@^E$/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)UZ.MC
)@@G@@/K@]O:/[@]O:R9KEZ'/,0]OW @@@@MR'K]O:/,0]OD^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2MD
)@@G@@/[@]O:R9KE!S/,0]OW @@@@MR'K]O:/,0]OD^[\@@@R9KEY6A Z@@@[0Z@@@[@\@@[$B0DUAME
)@@G@@/\@]O2/K@^FD/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)UZ./K@]O:R9KE!$MF
)@@G@@/,0]N;%[@UZ./K@]O:/K@^FR/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)UZ.MG
)@@G@@/K@]O:R9KE!!/,0]N;%[@UZ./K@]O:/K@^F>/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@MH
)@@G@@G[)@@[%[)UZ./K@]O:R9KE!3/,0]N;%[@UZ./K@]O:/K@^F3/K@]N0H[@U,@0@@@@K/\@]O:MI
)@@G@@&;K@@@G@KU,@ @@@@GW8@@@AG@)@@G&;K@@[/K@^F"/K@]N0H[@V[#0@@@@K/\@]O:&;K@@@MJ
)@@G@@G@KV[# @@@@GW8@@@AG@)@@G&;K@@[^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@V[A0@@@@KMK
)@@G@@/\@]O:&;K@@@G@KV[A @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KEZ^A Z@@@[0Z@@@[@\@@[ML
)@@G@@$B0DUA/\@]O2/K@^GY/K@]N0H[@V[A0@@@@K/\@]O:&;K@@@G@KV[A @@@@GW8@@@AG@)@@GMM
)@@G@@&;K@@[/K@^G(/K@]N0/[@]O:R9KEZ'/,0]OW @@@@MR'K]O:/,0]OD^[J@@@[0Z@@@[@\@@[MN
)@@G@@$B0DUA/\@]O2/[@]O:R9KEZ'/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]ODMO
)@@G@@^[\@@@R9KEZAA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^HB/K@]N0R9K^HMA[Z@@@[0Z@@@MP
)@@G@@[^\@@[[DJ@@[$B0DUA/\@]O2R9KE!#/,0]N;/K@^HPR9KE!D/,0]N;/K@^HP/K@]N0/[@]O:MQ
)@@G@@R9KF[G/,0]OWR'0]O:/,K]N:H9@@@[/K@^HX/K@]N0H[@V[#0@@@@K/\@]O:&;K@@@G@KV[#MR
)@@G@@ @@@@GW8@@@AG@)@@G&;K@@[^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@V[A0@@@@K/\@]O:MS
)@@G@@&;K@@@G@KV[A @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KEZ^A Z@@@[0Z@@@[@\@@[$B0DUAMT
)@@G@@/\@]O2/K@^H./K@]N0H[@V[A0@@@@K/\@]O:&;K@@@G@KV[A @@@@GW8@@@AG@)@@G&;K@@[MU
)@@G@@/K@^IC/K@]N0H[@U,@0@@@@K/\@]O:&;K@@@G@KU,@ @@@@GW8@@@AG@)@@G&;K@@[/K@^INMV
)@@G@@/K@]N0/[@]O:R9KEZ'/,0]OWR'0]O:/,K]N:H9@@@[/K@^IV/K@]N0C[)@@IH[)@[]T9)@@AMW
)@@G@@R@K@@H&8K@@@G[)@@[%[)UZ./K@]O:/[@]O:R9KEZ'/,0]OW @@@@MR'K]O:/,0]ODR9KF[UMX
)@@G@@/,0]N;^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KF[U/,0]OWD9)@@@-]K@@M-]@@@MMY
)@@G@@9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KEZAA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2R9KF[UMZ
)@@G@@/,0]N;/[@]O:R9KEZ'/,0]OW @@@@MR'K]O:/,0]OD/K@^JF/K@]N0^[J@@@[0Z@@@[@\@@[NA
)@@G@@$B0DUA/\@]O2H[@V[X0@@@@K/\@]O:&;K@@@G@KV[X @@@@GW8@@@AG@)@@G&;K@@[^[\@@@NB
)@@G@@R9KEZAA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^J+/K@]N0H[@V[#0@@@@K/\@]O:&;K@@@NC
)@@G@@G@KV[# @@@@GW8@@@AG@)@@G&;K@@[^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@V[A0@@@@KND
)@@G@@/\@]O:&;K@@@G@KV[A @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KEZ^A Z@@@[0Z@@@[@\@@[NE
)@@G@@$B0DUA/\@]O2/K@^K]/K@]N0H[@V[A0@@@@K/\@]O:&;K@@@G@KV[A @@@@GW8@@@AG@)@@GNF
)@@G@@&;K@@[/K@^KH/K@]N0R9KE)@/,0]N;/K@^KL/K@]N0R9KEZ'/,0]N;/K@^KP/K@]N0^[J@@@NG
)@@G@@[0Z@@@[@\@@[$B0DUA/\@]O2C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)UZ./K@]O:NH
)@@G@@/[@]O:R9KEZ'/,0]OW @@@@MR'K]O:/,0]ODR9KF[+/,0]N;/[@]O:R9KEZ'/,0]OW @@@@MNI
)@@G@@R'K]O:/,0]OD/[@]O:R9KF[>/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]ODNJ
)@@G@@^[\@@@R9KEZAA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^L#/K@]N0C[)@@IH[)@[]T9)@@ANK
)@@G@@R@K@@H&8K@@@G[)@@[%[)UZ./K@]O:R9K^LWA[Z@@@[0Z@@@[^\@@[[DJ@@[$B0DUA/\@]O2NL
)@@G@@/[@]O:R9KEZ'/,0]OW @@@@MR'K]O:/,0]ODR9KE)@/,0]N;/K@^LZR9KF[)/,0]N;/K@^LTNM
)@@G@@/K@]N0R9KF[U/,0]N;/K@^L</K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)UZ.NN
)@@G@@/K@]O:/[@]O:R9KEZ'/,0]OW @@@@MR'K]O:/,0]ODR9KF[U/,0]N;^[J@@@[0Z@@@[@\@@[NO
)@@G@@$B0DUA/\@]O2/[@]O:R9KF[U/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]ODNP
)@@G@@^[\@@@R9KEZAA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2R9KF[U/,0]N;/K@^MH/K@]N0^[J@@@NQ
)@@G@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@V[*0@@@@K/\@]O:&;K@@@G@KV[* @@@@GW8@@@AG@)@@GNR
)@@G@@&;K@@[^[\@@@R9KEZAA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^M=/K@]N0C[)@@IH[)@[]NS
)@@G@@T9)@@AR@K@@H&8K@@@G[)@@[%[)UZ./K@]O:/[@]O:R9KEZ'/,0]OW @@@@MR'K]O:/,0]ODNT
)@@G@@^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KE!S/,0]OW @@@@MR'K]O:/,0]OD^[\@@@NU
)@@G@@R9KEZAA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^NA/K@]N0C[)@@IH[)@[]T9)@@AR@K@@HNV
)@@G@@&8K@@@G[)@@[%[)V[:/K@]O:H[@U,@0@@@@K/\@]O:&;K@@@G@KU,@ @@@@GW8@@@AG@)@@GNW
)@@G@@&;K@@[/K@^NT/K@]N0^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@V[10@@@@K/\@]O:&;K@@@NX
)@@G@@G@KV[1 @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KEZAA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2NY
)@@G@@/K@^N0/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)UZ./K@]O:/[@]O:R9KEZ'NZ
)@@G@@/,0]OW @@@@MR'K]O:/,0]OD^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@U,@0@@@@K/\@]O:OA
)@@G@@&;K@@@G@KU,@ @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KEY4A Z@@@[0Z@@@[@\@@[$B0DUAOB
)@@G@@/\@]O2/K@^OP/K@]N0R9KF[4/,0]N;/K@^OT/K@]N0R9KF[7/,0]N;/K@^OX/K@]N0R9KF[.OC
)@@G@@/,0]N;/K@^O-/K@]N0R9KF]#/,0]N;/K@^O>/K@]N0H[@V]G0@@@@K/\@]O:&;K@@@G@KV]GOD
)@@G@@ @@@@GW8@@@AG@)@@G&;K@@[^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@U,@0@@@@K/\@]O:OE
)@@G@@&;K@@@G@KU,@ @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KEZ@A Z@@@[0Z@@@[@\@@[$B0DUAOF
)@@G@@/\@]O2/K@^P /K@]N0R9KF[U/,0]N;/K@^PD/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@OG
)@@G@@G[)@@[%[)UZ./K@]O:/[@]O:R9KEZ'/,0]OW @@@@MR'K]O:/,0]OD^[J@@@[0Z@@@[@\@@[OH
)@@G@@$B0DUA/\@]O2/[@]O:R9KE!S/,0]OW @@@@MR'K]O:/,0]OD^[\@@@R9KEZAA Z@@@[0Z@@@OI
)@@G@@[@\@@[$B0DUA/\@]O2/K@^P:/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)UZ.OJ
)@@G@@/K@]O:/[@]O:R9KEZ'/,0]OW @@@@MR'K]O:/,0]OD%[@UZ./K@]O:/K@^P./K@]N0H[@V[#OK
)@@G@@0@@@@K/\@]O:&;K@@@G@KV[# @@@@GW8@@@AG@)@@G&;K@@[^[J@@@[0Z@@@[@\@@[$B0DUAOL
)@@G@@/\@]O2H[@V[A0@@@@K/\@]O:&;K@@@G@KV[A @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KEZ^OM
)@@G@@A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^QX/K@]N0H[@V[A0@@@@K/\@]O:&;K@@@G@KV[AON
)@@G@@ @@@@GW8@@@AG@)@@G&;K@@[/K@^Q*/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[OO
)@@G@@%[)UZ./K@]O:/[@]O:R9KEZ'/,0]OW @@@@MR'K]O:/,0]OD/K@^Q8/K@]N0R9K^R?A[Z@@@OP
)@@G@@[0Z@@@[^\@@[[DJ@@[$B0DUA/\@]O2^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KF]NOQ
)@@G@@/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KEY0A Z@@@[0Z@@@OR
)@@G@@[@\@@[$B0DUA/\@]O2^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@U,@0@@@@K/\@]O:&;K@@@OS
)@@G@@G@KU,@ @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KEY4A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2OT
)@@G@@/K@^S#C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)UZ./K@]O:^[J@@@[0Z@@@[@\@@[OU
)@@G@@$B0DUA/\@]O2R9KF[7/,0]N;^[\@@@R9KEY0A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^S#OV
)@@G@@/K@]N0/[@]O:R9KE!S/,0]OWR'0]O:/,K]N:H9@@@[/K@^SF/K@]N0H[@U,@0@@@@K/\@]O:OW
)@@G@@&;K@@@G@KU,@ @@@@GW8@@@AG@)@@G&;K@@[/K@^SQ/K@]N0H[@V[#0@@@@K/\@]O:&;K@@@OX
)@@G@@G@KV[# @@@@GW8@@@AG@)@@G&;K@@[^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@V[A0@@@@KOY
)@@G@@/\@]O:&;K@@@G@KV[A @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KEZ^A Z@@@[0Z@@@[@\@@[OZ
)@@G@@$B0DUA/\@]O2/K@^S6/K@]N0H[@V[A0@@@@K/\@]O:&;K@@@G@KV[A @@@@GW8@@@AG@)@@GPA
)@@G@@&;K@@[/K@^T[/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)UZ./K@]O:/[@]O:PB
)@@G@@R9KEZ'/,0]OW @@@@MR'K]O:/,0]OD^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KF]>PC
)@@G@@/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KEZAA Z@@@[0Z@@@PD
)@@G@@[@\@@[$B0DUA/\@]O2R9KF]>/,0]N;^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KF[,PE
)@@G@@/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KEZWA Z@@@[0Z@@@PF
)@@G@@[@\@@[$B0DUA/\@]O2R9KF[,/,0]N;R9K^U*A[Z@@@[0Z@@@[^\@@[[DJ@@[$B0DUA/\@]O2PG
)@@G@@R9KF]*/,0]N;^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KEZ'/,0]OWD9)@@@-]K@@MPH
)@@G@@-]@@@M9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KEZZA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2PI
)@@G@@/[@]O:R9KEZ'/,0]OW @@@@MR'K]O:/,0]OD%[@UZ./K@]O:/K@^U:R9KF[)/,0]N;/K@^UZPJ
)@@G@@/K@]N0R9KF]5/,0]N;/K@^U\/K@]N0H[@V[#0@@@@K/\@]O:&;K@@@G@KV[# @@@@GW8@@@APK
)@@G@@G@)@@G&;K@@[^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@V[A0@@@@K/\@]O:&;K@@@G@KV[APL
)@@G@@ @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KEY6A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^VJPM
)@@G@@/K@]N0H[@V[#0@@@@K/\@]O:&;K@@@G@KV[# @@@@GW8@@@AG@)@@G&;K@@[^[J@@@[0Z@@@PN
)@@G@@[@\@@[$B0DUA/\@]O2H[@V[A0@@@@K/\@]O:&;K@@@G@KV[A @@@@GW8@@@AG@)@@G&;K@@[PO
)@@G@@^[\@@@R9KEY8A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^V\/K@]N0C[)@@IH[)@[]T9)@@APP
)@@G@@R@K@@H&8K@@@G[)@@[%[)V]8/K@]O:H[@U,@0@@@@K/\@]O:&;K@@@G@KU,@ @@@@GW8@@@APQ
)@@G@@G@)@@G&;K@@[/K@^W]/K@]N0/[@]O:R9KF^T/,0]OW @@@@MR'K]O:/,0]ODR9K^YMA[Z@@@PR
)@@G@@[0Z@@@[^\@@[[DJ@@[$B0DUA/\@]O2^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KF^ZPS
)@@G@@/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KF^JA Z@@@[0Z@@@PT
)@@G@@[@\@@[$B0DUA/\@]O2R9KF^Z/,0]N;R9K^YJA[Z@@@[0Z@@@[^\@@[[DJ@@[$B0DUA/\@]O2PU
)@@G@@^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KF^+/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PPV
)@@G@@C9)@@[R'K]O:/,0]OD^[\@@@R9KF^NA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2R9KF^+/,0]N;PW
)@@G@@^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KF^>/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PPX
)@@G@@C9)@@[R'K]O:/,0]OD^[\@@@R9KF^BA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@V^*0@@@@KPY
)@@G@@/\@]O:&;K@@@G@KV^* @@@@GW8@@@AG@)@@G&;K@@[R9K^YGA[Z@@@[0Z@@@[^\@@[[DJ@@[PZ
)@@G@@$B0DUA/\@]O2^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KF^T/,0]OWD9)@@@-]K@@MQA
)@@G@@-]@@@M9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KF^FA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2QB
)@@G@@/[@]O:R9KF^T/,0]OW @@@@MR'K]O:/,0]OD%[@V^:/K@]O:/K@^YPR9KF^R/,0]N;/K@^Y#QC
)@@G@@R9KF^R/,0]N;/K@^XBR9KF^R/,0]N;/K@^W*/K@]N0R9KF^T/,0]N;/K@^YT/K@]N0C[)@@IQD
)@@G@@H[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)VM0/K@]O:/[@]O:R9KFGT/,0]OW @@@@MR'K]O:QE
)@@G@@/,0]OD^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2R9K^Z)A[Z@@@[0Z@@@[^\@@[[DJ@@[$B0DUAQF
)@@G@@/\@]O2R9KFM3/,0]N;^[\@@@R9KFGFA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KFGTQG
)@@G@@/,0]OW @@@@MR'K]O:/,0]OD^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KFGT/,0]OWQH
)@@G@@D9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KFGIA Z@@@[0Z@@@[@\@@[QI
)@@G@@$B0DUA/\@]O2/[@]O:R9KFGT/,0]OW @@@@MR'K]O:/,0]OD/K@^Z%R9KFM6/,0]N;^[\@@@QJ
)@@G@@R9KFGFA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^Y./K@]N0R9KFM9/,0]N;/K@^Z,/K@]N0QK
)@@G@@C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)VM0/K@]O:^[J@@@[0Z@@@[@\@@[$B0DUAQL
)@@G@@/\@]O2/[@]O:R9KFGT/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@QM
)@@G@@R9KFGMA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^)I/K@]N0H[@VNI0@@@@K/\@]O:&;K@@@QN
)@@G@@G@KVNI @@@@GW8@@@AG@)@@G&;K@@[^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@VNL0@@@@KQO
)@@G@@/\@]O:&;K@@@G@KVNL @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KFGQA Z@@@[0Z@@@[@\@@[QP
)@@G@@$B0DUA/\@]O2/K@^),/K@]N0H[@VNL0@@@@K/\@]O:&;K@@@G@KVNL @@@@GW8@@@AG@)@@GQQ
)@@G@@&;K@@[/K@^)9/K@]N0/[@]O:R9KFPO/,0]OW @@@@MR'K]O:/,0]OD^[J@@@[0Z@@@[@\@@[QR
)@@G@@$B0DUA/\@]O2/[@]O:R9KFV?/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]ODQS
)@@G@@^[\@@@R9KFO+A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^-R/K@]N0C[)@@IH[)@[]T9)@@AQT
)@@G@@R@K@@H&8K@@@G[)@@[%[)VV0/K@]O:/[@]O:R9KFPO/,0]OW @@@@MR'K]O:/,0]ODR9KFV3QU
)@@G@@/,0]N;/[@]O:R9KFPO/,0]OW @@@@MR'K]O:/,0]OD^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2QV
)@@G@@/[@]O:R9KFV6/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KFO0QW
)@@G@@A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^+ /K@]N0^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2QX
)@@G@@/[@]O:R9KFV'/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KFO+QY
)@@G@@A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2R9KFV'/,0]N;^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2QZ
)@@G@@/[@]O:R9KFV./,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KFO/RA
)@@G@@A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^+5/K@]N0^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2RB
)@@G@@/[@]O:R9KFV'/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KFO0RC
)@@G@@A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2R9KFV'/,0]N;^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2RD
)@@G@@/[@]O:R9KFV./,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KFPCRE
)@@G@@A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^<>/K@]N0H[@VW@0@@@@K/\@]O:&;K@@@G@KVW@RF
)@@G@@ @@@@GW8@@@AG@)@@G&;K@@[/K@^<0/K@]N0H[@VW@0@@@@K/\@]O:&;K@@@G@KVW@ @@@@GRG
)@@G@@W8@@@AG@)@@G&;K@@[/K@^<;/K@]N0H[@VW@0@@@@K/\@]O:&;K@@@G@KVW@ @@@@GW8@@@ARH
)@@G@@G@)@@G&;K@@[/K@^=A/K@]N0H[@VW@0@@@@K/\@]O:&;K@@@G@KVW@ @@@@GW8@@@AG@)@@GRI
)@@G@@&;K@@[/K@^=L/K@]N0H[@VW#0@@@@K/\@]O:&;K@@@G@KVW# @@@@GW8@@@AG@)@@G&;K@@[RJ
)@@G@@R9KFWA/,0]N;/K@^=Y/K@]N0H[@VW@0@@@@K/\@]O:&;K@@@G@KVW@ @@@@GW8@@@AG@)@@GRK
)@@G@@&;K@@[/K@^=(/K@]N0H[@VW#0@@@@K/\@]O:&;K@@@G@KVW# @@@@GW8@@@AG@)@@G&;K@@[RL
)@@G@@^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2&;K@@@G@K@@K @@@@GW8@@@AG@)@@G&;K@@[ @@@@KRM
)@@G@@^[\@@@R9KFOXA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^>B/K@]N0C[)@@IH[)@[]T9)@@ARN
)@@G@@R@K@@H&8K@@@G[)@@[%[)VW#/K@]O:H[@VW#0@@@@K/\@]O:&;K@@@G@KVW# @@@@GW8@@@ARO
)@@G@@G@)@@G&;K@@[/K@^>U/K@]N0^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@VW#0@@@@K/\@]O:RP
)@@G@@&;K@@@G@KVW# @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KFOUA Z@@@[0Z@@@[@\@@[$B0DUARQ
)@@G@@/\@]O2/K@^>1/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)VW#/K@]O:H[@VW#RR
)@@G@@0@@@@K/\@]O:&;K@@@G@KVW# @@@@GW8@@@AG@)@@G&;K@@[/K@^&^/K@]N0C[)@@IH[)@[]RS
)@@G@@T9)@@AR@K@@H&8K@@@G[)@@[%[)VV0/K@]O:R9KFWD/,0]N;%[@VV0/K@]O:/K@^&M/K@]N0RT
)@@G@@C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)VV0/K@]O:R9KFWJ/,0]N;%[@VV0/K@]O:RU
)@@G@@/K@^&)/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)VV0/K@]O:R9KFWP/,0]N;RV
)@@G@@%[@VV0/K@]O:/K@^&,/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)VW#/K@]O:RW
)@@G@@H[@VW#0@@@@K/\@]O:&;K@@@G@KVW# @@@@GW8@@@AG@)@@G&;K@@[/K@^$[/K@]N0H[@VW@RX
)@@G@@0@@@@K/\@]O:&;K@@@G@KVW@ @@@@GW8@@@AG@)@@G&;K@@[/K@^$G/K@]N0H[@VW@0@@@@KRY
)@@G@@/\@]O:&;K@@@G@KVW@ @@@@GW8@@@AG@)@@G&;K@@[/K@^$R/K@]N0C[)@@IH[)@[]T9)@@ARZ
)@@G@@R@K@@H&8K@@@G[)@@[%[)V+8/K@]O:H[@V+;0@@@@K/\@]O:&;K@@@G@KV+; @@@@GW8@@@ASA
)@@G@@G@)@@G&;K@@[/K@^$%/K@]N0^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@VW#0@@@@K/\@]O:SB
)@@G@@&;K@@@G@KVW# @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KFOUA Z@@@[0Z@@@[@\@@[$B0DUASC
)@@G@@/\@]O2/K@^*[/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)V+8/K@]O:H[@VW#SD
)@@G@@0@@@@K/\@]O:&;K@@@G@KVW# @@@@GW8@@@AG@)@@G&;K@@[/K@^*O/K@]N0H[@VW@0@@@@KSE
)@@G@@/\@]O:&;K@@@G@KVW@ @@@@GW8@@@AG@)@@G&;K@@[/K@^*Z/K@]N0C[)@@IH[)@[]T9)@@ASF
)@@G@@R@K@@H&8K@@@G[)@@[%[)VW#/K@]O:R9KFWA/,0]N;/K@^*:/K@]N0C[)@@IH[)@[]T9)@@ASG
)@@G@@R@K@@H&8K@@@G[)@@[%[)V06/K@]O:/[@]O:R9KF=H/,0]OW @@@@MR'K]O:/,0]ODR9KF09SH
)@@G@@/,0]N;^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KF09/,0]OWD9)@@@-]K@@M-]@@@MSI
)@@G@@9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KF=DA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2R9KF09SJ
)@@G@@/,0]N;/K@^(P/K@]N0^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@V1 0@@@@K/\@]O:&;K@@@SK
)@@G@@G@KV1  @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KF=DA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2SL
)@@G@@/K@^(?/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)V06/K@]O:/[@]O:R9KF=HSM
)@@G@@/,0]OW @@@@MR'K]O:/,0]OD^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KF1C/,0]OWSN
)@@G@@ @@@@MR'K]O:/,0]OD^[\@@@R9KF=DA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^%I/K@]N0SO
)@@G@@C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)V1G/K@]O:H[@V1J0@@@@K/\@]O:&;K@@@SP
)@@G@@G@KV1J @@@@GW8@@@AG@)@@G&;K@@[/K@^%-/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@SQ
)@@G@@G[)@@[%[)V06/K@]O:/[@]O:R9KF=H/,0]OW @@@@MR'K]O:/,0]OD/K@^%1/K@]N0^[J@@@SR
)@@G@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@V1J0@@@@K/\@]O:&;K@@@G@KV1J @@@@GW8@@@AG@)@@GSS
)@@G@@&;K@@[^[\@@@R9KF<7A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^:C/K@]N0R9KF1P/,0]N;ST
)@@G@@/K@^:G/K@]N0R9KF1V/,0]N;/K@^:K/K@]N0R9KF1-/,0]N;/K@^:O/K@]N0R9KF1$/,0]N;SU
)@@G@@/K@^:S/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)V06/K@]O:/[@]O:R9KF=HSV
)@@G@@/,0]OW @@@@MR'K]O:/,0]ODR9KF09/,0]N;^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:SW
)@@G@@R9KF09/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[R'K]O:/,0]OD^[\@@@R9KF=DA Z@@@SX
)@@G@@[0Z@@@[@\@@[$B0DUA/\@]O2R9KF09/,0]N;/K@^?]/K@]N0^[J@@@[0Z@@@[@\@@[$B0DUASY
)@@G@@/\@]O2H[@V1!0@@@@K/\@]O:&;K@@@G@KV1! @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KF=DSZ
)@@G@@A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^?T/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@TA
)@@G@@G[)@@[%[)V06/K@]O:/[@]O:R9KF=H/,0]OW @@@@MR'K]O:/,0]OD^[J@@@[0Z@@@[@\@@[TB
)@@G@@$B0DUA/\@]O2/[@]O:R9KF1C/,0]OW @@@@MR'K]O:/,0]OD^[\@@@R9KF=DA Z@@@[0Z@@@TC
)@@G@@[@\@@[$B0DUA/\@]O2/K@^?;/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)V1GTD
)@@G@@/K@]O:H[@V1J0@@@@K/\@]O:&;K@@@G@KV1J @@@@GW8@@@AG@)@@G&;K@@[/K@^!I/K@]N0TE
)@@G@@C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)V06/K@]O:/[@]O:R9KF=H/,0]OW @@@@MTF
)@@G@@R'K]O:/,0]ODR9KG^</,0]N;/[@]O:R9KF=H/,0]OW @@@@MR'K]O:/,0]OD^[J@@@[0Z@@@TG
)@@G@@[@\@@[$B0DUA/\@]O2/[@]O:R9KF1C/,0]OW @@@@MR'K]O:/,0]OD^[\@@@R9KF=DA Z@@@TH
)@@G@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KF=H/,0]OW @@@@MR'K]O:/,0]OD%[@V06/K@]O:TI
)@@G@@/K@^,@/K@]N0^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@V1]0@@@@K/\@]O:&;K@@@G@KV1]TJ
)@@G@@ @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KF=DA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^,RTK
)@@G@@/K@]N0H[@W^10@@@@K/\@]O:&;K@@@G@KW^1 @@@@GW8@@@AG@)@@G&;K@@[^[J@@@[0Z@@@TL
)@@G@@[@\@@[$B0DUA/\@]O2H[@W^40@@@@K/\@]O:&;K@@@G@KW^4 @@@@GW8@@@AG@)@@G&;K@@[TM
)@@G@@^[\@@@R9KF=BA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^,7/K@]N0H[@W^40@@@@K/\@]O:TN
)@@G@@&;K@@@G@KW^4 @@@@GW8@@@AG@)@@G&;K@@[/K@^\]/K@]N0C[)@@IH[)@[]T9)@@AR@K@@HTO
)@@G@@&8K@@@G[)@@[%[)V06/K@]O:/[@]O:R9KF=H/,0]OW @@@@MR'K]O:/,0]ODR9KG^7/,0]N;TP
)@@G@@/[@]O:R9KF=H/,0]OW @@@@MR'K]O:/,0]OD%[@V06/K@]O:/K@^\W/K@]N0C[)@@IH[)@[]TQ
)@@G@@T9)@@AR@K@@H&8K@@@G[)@@[%[)V06/K@]O:/[@]O:R9KF=H/,0]OW @@@@MR'K]O:/,0]ODTR
)@@G@@R9KG^"/,0]N;/[@]O:R9KF=H/,0]OW @@@@MR'K]O:/,0]OD%[@V06/K@]O:/K@^\6/K@]N0TS
)@@G@@C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)W ./K@]O:/[@]O:R9KGA#/,0]OW @@@@MTT
)@@G@@R'K]O:/,0]OD/K@^0A/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)W ./K@]O:TU
)@@G@@/[@]O:R9KGGW/,0]OW @@@@MR'K]O:/,0]OD/[@]O:R9KGA#/,0]OW @@@@MR'K]O:/,0]ODTV
)@@G@@%[@W ./K@]O:/K@^0Y/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)W ./K@]O:TW
)@@G@@^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KGGW/,0]OW @@@@MR'K]O:/,0]OD^[\@@@TX
)@@G@@R9KG 'A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KGA#/,0]OW @@@@MR'K]O:/,0]ODTY
)@@G@@/K@^1@/K@]N0/[@]O:R9KGA#/,0]OW @@@@MR'K]O:/,0]OD%[@W ./K@]O:/K@^1E/K@]N0TZ
)@@G@@C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)WHZ/K@]O:^[J@@@[0Z@@@[@\@@[$B0DUAUA
)@@G@@/\@]O2/[@]O:R9KGH+/,0]OW @@@@MR'K]O:/,0]OD^[\@@@R9KGHTA Z@@@[0Z@@@[@\@@[UB
)@@G@@$B0DUA/\@]O2%[@WHZ/K@]O:/K@^1*/K@]N0H[@WH&0@@@@K/\@]O:&;K@@@G@KWH& @@@@GUC
)@@G@@W8@@@AG@)@@G&;K@@[^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@WH(0@@@@K/\@]O:&;K@@@UD
)@@G@@G@KWH( @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KGHQA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2UE
)@@G@@/K@^2C/K@]N0^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@WH/0@@@@K/\@]O:&;K@@@G@KWH/UF
)@@G@@ @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KGHTA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^2ZUG
)@@G@@/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)WJ^/K@]O:R9KGJB/,0]N;^[J@@@UH
)@@G@@[0Z@@@[@\@@[$B0DUA/\@]O2/[@]O:R9KGJB/,0]OWD9)@@@-]K@@M-]@@@M9,@@@PC9)@@[UI
)@@G@@R'K]O:/,0]OD^[\@@@R9KGI8A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2R9KGJB/,0]N;%[@WJ^UJ
)@@G@@/K@]O:/K@^3 /K@]N0^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@WJ)0@@@@K/\@]O:&;K@@@UK
)@@G@@G@KWJ) @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KGI8A Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2UL
)@@G@@/K@^3W/K@]N0C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)WK&/K@]O:^[J@@@[0Z@@@UM
)@@G@@[@\@@[$B0DUA/\@]O2R9KGK(/,0]N;^[\@@@R9KGKVA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2UN
)@@G@@/K@^34/K@]N0^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@WLE0@@@@K/\@]O:&;K@@@G@KWLEUO
)@@G@@ @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KGKSA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^4FUP
)@@G@@/K@]N0H[@WLH0@@@@K/\@]O:&;K@@@G@KWLH @@@@GW8@@@AG@)@@G&;K@@[/K@^4Q/K@]N0UQ
)@@G@@C[)@@IH[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)WK&/K@]O:H[@WLE0@@@@K/\@]O:&;K@@@UR
)@@G@@G@KWLE @@@@GW8@@@AG@)@@G&;K@@[/[@]O:R9KGLK/,0]OWR'0]O:/,K]N:H9@@@[/K@^4\US
)@@G@@/K@]N0H[@WLE0@@@@K/\@]O:&;K@@@G@KWLE @@@@GW8@@@AG@)@@G&;K@@[^[J@@@[0Z@@@UT
)@@G@@[@\@@[$B0DUA/\@]O2H[@WLE0@@@@K/\@]O:&;K@@@G@KWLE @@@@GW8@@@AG@)@@G&;K@@[UU
)@@G@@^[\@@@R9KGKSA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^5J/K@]N0R9KGLN/,0]N;/K@^5NUV
)@@G@@/K@]N0H[@WLE0@@@@K/\@]O:&;K@@@G@KWLE @@@@GW8@@@AG@)@@G&;K@@[^[J@@@[0Z@@@UW
)@@G@@[@\@@[$B0DUA/\@]O2H[@WLE0@@@@K/\@]O:&;K@@@G@KWLE @@@@GW8@@@AG@)@@G&;K@@[UX
)@@G@@^[\@@@R9KGKYA Z@@@[0Z@@@[@\@@[$B0DUA/\@]O2/K@^53/K@]N0R9KGLT/,0]N;/K@^57UY
)@@G@@/K@]N0H[@WLH0@@@@K/\@]O:&;K@@@G@KWLH @@@@GW8@@@AG@)@@G&;K@@[/K@^6]/K@]N0UZ
)@@G@@H[@WLH0@@@@K/\@]O:&;K@@@G@KWLH @@@@GW8@@@AG@)@@G&;K@@[/K@^6H/K@]N0C[)@@IVA
)@@G@@H[)@[]T9)@@AR@K@@H&8K@@@G[)@@[%[)WLW/K@]O:/K@^6R/K@]N0H[@WLE0@@@@K/\@]O:VB
)@@G@@&;K@@@G@KWLE @@@@GW8@@@AG@)@@G&;K@@[^[J@@@[0Z@@@[@\@@[$B0DUA/\@]O2H[@WLEVC
)@@G@@0@@@@K/\@]O:&;K@@@G@KWLE @@@@GW8@@@AG@)@@G&;K@@[^[\@@@R9KGKSA Z@@@[0Z@@@VD
)@@G@@[@\@@[$B0DUA/\@]O2/K@^67/K@]N0@@@@@@^67@C@GL%C]W@@@@ D)O@@@@^;]^68GO=GL:VE
)@@G@@@@@@^')O@@@@^;<^68GOFGL:@@@@^*)O@@@@^.#^68GN\GL:@@@@^P)O@@@@^;1^68GW#GL:VF
)@@G@@@@@@^A)O@@@@ E)^;2G'FGW^@@@@#W)O@@@@^.Q^;2GW1GW^@@@@#Q)O@@@@AA=^.RHPDGW2VG
)@@G@@@@@@@^)O@@@@^.R^.R@@@@@@@@@@@]'^@@KD'^@@KR ]B@@B'^@@KD'^@@KR ]V@@B'^@@KDVH
)@@G@@'^@@KR ]Q@@B'^@@KD'^@@KR ]E@@B'^@@KD'^@@KR #&@@B'^@@KD'^@@KR #(@@B'^@@KDVI
)@@G@@'^@@KR #*@@B'^@@KD'^@@KR [+@@B'^@@KD'^@@KR [3@@B'^@@KD'^@@KR [I@@B'^@@KDVJ
)@@G@@'^@@KR ]+@@B'^@@KD'^@@KR ]=@@B'^@@KD'^@@KR ]/@@B'^@@KD'^@@KR ]_@@B'^@@KDVK
)@@G@@'^@@KR #-@@B'^@@KD'^@@KR #N@@B'^@@KD'^@@KR ]K@@B'^@@KD'^@@KR^_C@@B'^@@KDVL
)@@G@@'^@@KR ^9@@B'^@@KD'^@@KR^68@@#'^@@KD'^@@KR^68@@['^@@KD'^@@KR^8W@@]'^@@KDVM
)@@G@@'^@@KR^8 @@#'^@@KD'^@@KR^7N@@['^@@KD'^@@KR^7O@@#'^@@KD'^@@KR^.R@@C'^@@KDVN
)@@G@@'^@@KR^"R@@B'^@@KD'^@@KR^"D@@ '^@@KD'^@@KR @U@@ '^@@KD'^@@KR^9-@@^'^@@KDVO
)@@G@@'^@@KR^;2@@ '^@@KD'^@@KR^;2@@A'^@@KD'^@@KR^68@@]'^@@KD'^@@KR^68@@^'^@@KDVP
)@@G@@'^@@KR^9V@@^'^@@KD'^@@KR^9A@@^'^@@KD'^@@KR @#@@B'^@@KD'^@@KR @3@@B'^@@KDVQ
)@@G@@'^@@KR @%@@B'^@@KD'^@@KR #2@@ @@@@@@@USE  @@@@@@@@@@@@,     @&IC].@@@@@@VR
)@@G@@[[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@6.0   -BELL LABS D$FILE VS
)@@G@@EDITOR: ON  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@VT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@VU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NO INPUT FILE SPECIFIED VV
)@@G@@D$FILE      @@@HPD@@@HPD@@@AA=@@@AA=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@VW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@VX
)@@G@@@@@@@@@@@@@@@@@@@@EDITOR READY -    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@VY
)@@G@@@@@@@@@@@@@@@@@@@@_@@@@@@[@C].@N.CKK* * FATAL ERROR - TERMINATED * *    VZ
)@@G@@SYNTAX ERROR@@@@NM@@@@<W@@@[YA@@@@0_@@@]E]@@[@N"@@[@O@@@@@N6@@@@N6@@@@N6WA
)@@G@@@@@@R @@@[[W@@@[ML@@@@7[@@@@%>@@@@N5@@@@N6INVALID COMMAND FOR NON-PROC MWB
)@@G@@ODE   @[IC].@@9C#L@@[C^E@[^C^=@@@USE@@[@O^K@[@M-@@TC#LUPDATE@@@READ-ONLYWC
)@@G@@@@MODE@[]CW6@@@@,STATUS:@[ACXD@@STOP@@[@@@@@LIST@@@C^P@@BRIE@@@C^F@@MONIWD
)@@G@@@@@C^Q@@@@@^ED$STOP     @@[@@@ED$LIST     @@@C^PED$BRIEF    @@@C^FED$MONWE
)@@G@@ITOR  @@@C^QED$MONITR   @@@C^QED$MONIT    @@@C^Q@@@@@A@FREE @@@@@@@@@@@@WF
)@@G@@  .   @ASG,A      @@@@@@@@@@@@   .  @@@@@@@@@@@@@@@@@@@@@@@@@&CCY=@@@@@@WG
)@@G@@[[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WH
)@@G@@@@@@@@@@0CY=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TCY K@[@QI@@@C@@@@@@INWI
)@@G@@@CORE,@LINE=@@@@ELAPSED=@@CPU=@@@MS,@@I/O=@@PERFORMING      @[CCY=@@#CX>WJ
)@@G@@@@]CXX'=@@@)/K@@RL/K@@RL/K@@RI/K@@+D@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@^@@@@WK
)@@G@@@@@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@]@@@@@[@@@@-]@@@@+]@WL
)@@G@@@@@<]@@@@=]@@@@=[@[@@@][[@@@]][@@@]#[@@@]^@@@@@F[@H@@@[@H@@[[@H@@[[@H@@]WM
)@@G@@@@@@@@@@@@@@@@@@@-@@@@[-@@@@C-@@@@D-@@[@C+@@[@D+@@]@[<@@#@D<@@@@@@@@@@@@WN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)O@@@@)\@@@@-)@@@@@@@@@@@@@@@@@@@@@C D@@@@@@WO
)@@G@@@@@@@@@@@@@@@@@@@@@[][@[@[#[@[[[^]@][[ ]@#@[A[@[@@B]@#@@C[@[@@D[C[@@D]B#WP
)@@G@@@[E[@[@[F]@]@[G]@#@[H[@[@@I]@#@@J[@[@@K[J[@@K]I#][L[@[][M]@]][N]@#][O[@[WQ
)@@G@@@@@@@P@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WR
)@@G@@@@@@@@@@@@@@@@@@@@_@@@@@ @@@@@0@@@@@@@@@@@ @@@@@[5P@@@[1P@@@[!P@@@[(P@@@WS
)@@G@@[>P@@@[-P)@@C5L@@@C1L@@@C!L@@@C(L@@@C>L@@@C-L)@@[5M@@@[1M@@@[!M@@@[(M@@@WT
)@@G@@[>M@@@[-M)@@)6-@@@)2-@@@),-@@@)%-@@@)&-@@@)+-)@@[7])@@[3]@@@[\]@@@[:]@@@WU
)@@G@@[$]@@@[<]@@@C5L)@@C1L@@@C!L@@@C(L@@@C>L@@@C-L@@@[5M)@@[1M@@@[!M@@@[(M@@@WV
)@@G@@[>M@@@[-M@@@AN OLD ITEM CAN NOT BE MODIFIED     SYMBOL FOR ARRAY IS ALREWW
)@@G@@ADY DEFINED - IGNORED   ARITHMATIC OPR ERROR - OVERFLOW     ARITHMATIC OWX
)@@G@@PR ERROR - DIVIDED BY 0 INCOMPATABLE VARIABLE TYPES IN AN EQUATE  WARNINWY
)@@G@@G: SET PTR IS SET TO ZERO(0)  INVALID SET LINKAGE FOR THE SET     ILLEGAWZ
)@@G@@L ITEM TO MODIFY  NOT A RECORD NAME OR LINE # CAN NOT BE EVALUATEDLINE NXA
)@@G@@UMBER EXCEEDS MAX. OR 0 RECORD HAS NO MANUAL CONTROL WORD   CURRENT OF TXB
)@@G@@HE RECORD NO LONGER IN D$FILE UNDEFINED SET NAMEUNDEFINED RECORD NAME   XC
)@@G@@WARNING - SET POINTER NOT EXIT OR ZERO    NO CURRENT OF THE RECORDRECORDXD
)@@G@@ NOT PARTICIPATING IN THE MANUAL SETRECORD AND SET ARE NOT RELATEDA BAD XE
)@@G@@OCTAL NUMBER ENTERED    INDEX VALUE CAN NOT BE EVALUATED    PIC X ITEM UXF
)@@G@@SED AS AN INDEX   AN ITEM IS INCORRECTLY INDEXEDUNDEFINED ITEM OR NO CURXG
)@@G@@RENT VALUE  DEPENDING ON VALUE OUT OF RANGE     RECORD LENGTH CAN NOT BEXH
)@@G@@ CHANGED    @S[C=E@T@C=F@U[C=G@V[C=H@W[C=I@@@C=B@Y[C=J@Z[C=K@)[C=L@-[C=MXI
)@@G@@@+[C=N@<[C=O@=[C=P@>[C=Q@&[C=R@@@C=C@*[C=S@(@C=T@%[C=U@:[C=V@?[C=W@![C=XXJ
)@@G@@@,[C=Y@)[C=L@\[C=Z@0[C=)@@[CZI@@[CZR@@[CZ(@@[C)]@@@Z__@@@)@@DO]"K@@[AC-7XK
)@@G@@@[BC+*@@@)@]@[AC-Q@[CC-W@[AC-=@[AC-%@[BC-0@[AC-.@[^C+#@[AC<O@[CC+B@[ C+JXL
)@@G@@@[AC+O@[BC+U@[#C+-@[^C+=@[^C+\@[BC+3@[ C+'@[ C+_@[AC<^@[ C<E@[ C<J@[AC<UXM
)@@G@@@[AC<)@@@@<<@@@@<=@@@@<%@@@@<$@@@@<!@@@@&A@@@@(B@@@@&8@@@@&8@@@@<7@@@@<'XN
)@@G@@@@@@<.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@^]@@@#@@@@@1                 XO
)@@G@@      @^#@@@#@@@@@1                       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XP
)@@G@@@@@C D@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NO FIND     NOT AN OBJECXQ
)@@G@@T RECORD OR NOT A RECORD NAME INDEX VALUE 0 OR OUT OF LIMIT OR NOT AN INXR
)@@G@@DEXABLE ITEMILLEGAL VARIABLE AS AN INDEX  INDEX VALUE CAN NOT BE EVALUATXS
)@@G@@ED    VARIABLE MUST BE A PIC 9 COMP ITEM  VARIABLE VALUE CAN NOT BE EVALXT
)@@G@@UATED DBP=0 NOT ALLOWED VARIABLE NOT DEFINED    END OF SET OR AN EMPTY SXU
)@@G@@ET    NOT A SET NAME    BAD SET POINTER IN THE CURRENT RECORD     NO CURXV
)@@G@@RENCY FOR THE SET '=@@@)/K@@%J'=@@@)'=@@@)'=@@@)'=@@@)'=@@@)'=@@@)/K@@(ZXW
)@@G@@NEXT SET MEMBER NOT IN D$FILE CURRENT SET MEMBER(MANUAL) NO LONGER IN D$XX
)@@G@@FILE  CURRENT LINE IS 0 CURRENT LINE IS A CONTROL LINE@A@C$I@B[C$J@C[C$KXY
)@@G@@@D[C$L@E[C$M@F[C$N@G[C$O@H@C$P@I[C$Q@J@C$R@K[C$S@L@C$T@M@C$U@N@C$V@O@C$WXZ
)@@G@@@D@C$X@E@C$Y@@[C C#     @@#@@#)@@@@]@[]C>S@[BC>U@[DC>-@[ C>%@[AC>\@[AC>5YA
)@@G@@@[AC>;@[#C&[@[^C&^@[ C&C@[#C&H@[BC&K@[^C&R@[ C&=@[CC&(@[#C&1@[ C&4@@@@@@YB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@C D@@@@@@@^[@@@#@@@@@1                       YC
)@@G@@@^^@@@#@@@@@1                       @@@@@@@@@C D@@@@@@NO FIND     ERROR YD
)@@G@@IN LINE NUMBER    ILLEGAL COMMAND AT LINE 0     @P@C*A@Q[C*B@R[C*CG     YE
)@@G@@@@[C DAAAAAA@[]C$5@[^C$7@[ C$;@@@@@@@@@C D@@@@@@@@[C*G@@[C*I@@@)@#@@@)@[YF
)@@G@@@@@)@^@@@)@]@@@)@ @@@)@B@@@)@A@@@)@C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@C^2@@@C^8@@@C^8@@@@@@@@@@@@@@@@@@@&QC(>YH
)@@G@@@@@@@@[[@@@@@@@@@@@@@@@@@@@@@@EOF:  : RECORD TYPE -   DBP -  -    NEW   YI
)@@G@@OLD               AREA        END-OF-SET  OWNER       DIRECT       CONTRYJ
)@@G@@OL -        AREA: SET:  OWNER:KEY:  RECORD HEADER -   SET PTRS:         YK
)@@G@@DATA: UNKNOWN RECORD CODE      DETECTED AT LINE _____"@[QC(>@@[C*(@@@@@@YL
)@@G@@            ERROR - CANNOT INTERPRET DBP  ERROR - CANNOT INTERPRET PIC XYM
)@@G@@ FIELD@&CC%M@@@@@@[[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YN
)@@G@@@@@@@@@@@@@@@@@@@@@[CC%M@[AC%A@FREE K$FILE .    K$FILE      @@@@@@@@@@@@YO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@FREE,A K$FILE .  @ASG,CP K$FILE(+1),///10000 . YQ
)@@G@@@USE K$FILET,K$FILE .   @ASG,A K$FILET .  @USE K$FILE,K$FILE(+1) .      YR
)@@G@@K$FILET     @@@@@@@K@@@@@@EC:6@@@@@@K$FILET     @@@@@@@K@@@@@W@@@@@@@@E@YS
)@@G@@@@@@@@@@@@@@@ASG,UP    K$FILE,///1000  .  @ASG,A     K$FILE .     @[BC?MYT
)@@G@@KEY FILE WRITE ERROR. OLD DBP NOT FOUND.  @@@@@@@@@@@@@@@@@@K$FILE      YU
)@@G@@@@@@@@@K@@@@@@WC?+@@@@@@K$FILE            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#UC1[@@OC5_@B"C77@@7D@ZYX
)@@G@@@[MDE,@[+DGI@#(DIB@@JDM+@]/DNZ@]4DQ1@[SDUA@1ADW^@HVEH0@]IEV1)^SC?()[=C4VYY
)@@G@@)[=C6N)@%C_5)DSD[Q)@IDG@)@RDH0)@2DL0)@,DM1)@QDQV)@-DT>)@&DVY)@&EHE)@&EVFYZ
)@@G@@@@@C?(@@@@@@@@@@@@K$FILE      @@@@@@@C@@@@@]GC?(@@@@@;@_@@E@@@@@@@@@@@@@ZA
)@@G@@@@@@@@@@@@@@K$FILE      @@@@@@@C@@@@@W@@@@@@@@D@@@@@I@@@@@@@@@@@@@@@@@@@ZB
)@@G@@@@@@@@@@@@@@;@0@@[;)0@@[K$FILE      @@@@@@@K@@@@@I@@@@@@@@@@@@@@@@K$FILEZC
)@@G@@      @@@@@@@K@@@@@@@@@@@@@@[@@@@@@@@\[@@@@@@@@@@@@@@@@_@@@@@@@C1!@@@C1!ZD
)@@G@@@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!ZE
)@@G@@@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!ZF
)@@G@@@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!@@@C1!@\@@@@@\@@@@ZG
)@@G@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@ZH
)@@G@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@ZI
)@@G@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@)@@@@@ZJ
)@@G@@K@@@@@@[^C2.PFILE       @@@@@@@@@@@@@@@@@@@@@@@@@&^C2.@@@@@@[[@@@@@@@@@@ZK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@______@_@@E@__"@@<@@@@@@/K@S3SEDITORERROR - MAXIZM
)@@G@@MUM OF 25 PARAMETERS ALLOWED ON CALLERROR - NO CORE AVAILABLE TO LOAD CAZN
)@@G@@LLED SUBROUTINE   ERROR - CALLED ROUTINE IS UNDEFINED @@#@@@@@#@@@@@[[]LZO
)@@G@@@[CC3V@[DC3<@[AC3?:Z@[#^* DEBUG READY *   * READY *   CONTINGENCY AT LOCZP
)@@G@@ATION :     ILLEGAL OPERATION*GUARD MODE* FLOAT PT OVERFLOW*FLOAT PT UNDZQ
)@@G@@ERFLOW*     DIVIDE OVERFLOW*  ABORT$ OR EABT$*  II OR RBK KEYIN*  ERR$ MZR
)@@G@@ODE*  TRAP* @*IC4V@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@C4#@@@C4AZS
)@@G@@@@@C4C@@@C4F@@@C4J@@@@@@@@@C4M@@@C4P@@@@@@@@@C4S@@@@@@@@@C4U@@@[#!HELP  ZT
)@@G@@@@@[#6PRINTA@@@[^KPRINTN@@@[^YDUMPA @@@[^?DUMPN @@@[^/BREAK @@@[  CBREAKZU
)@@G@@@@@[ OCREGS @@@[AAPATCH @@@[B]EXIT  @@@[APPATCHR@@@[BBGOTO  @@@[^ESNOOPYZV
)@@G@@@@@[^#TRAP  @@@@@I  THIS DEBUGGER SUPPORTS THE FOLLOWING COMMANDS:      ZW
)@@G@@           1) HELP - DESCRIBES THE AVAILABLE                            ZX
)@@G@@         COMMANDS, AND THEIR FORMAT.                       2) PRINTA ADDZY
)@@G@@R1 ADDR2 ------- ADDRN                                  - PRINTS THE DATZZ
)@@G@@A BETWEEN A PAIR                                  OF ADDRESSES IN FIELD AA
)@@G@@DATA                   3) PRINTN ADDR N                                 AB
)@@G@@                    - PRINTS N WORDS STARTING AT ADDR                   AC
)@@G@@              IN FIELD DATA                                4) DUMPA  ADDAD
)@@G@@R1 ADDR2 ADDR3 ------ ADDRN                             - DUMPS THE DATAAE
)@@G@@ BETWEEN A PAIR                               OF ADDRESSES IN OCTAL, 4 WAF
)@@G@@ORDS                              TO A LINE                             AG
)@@G@@           5) DUMPN  ADDR N                                             AH
)@@G@@        - DUMPS N WORDS OF DATA STARTING                                AI
)@@G@@  AT ADDR IN OCTAL  4 WORDS                                   TO A LINE AJ
)@@G@@                                   6) BREAK  ADDR1 ADDR2 ADDR3 ------ ADAK
)@@G@@DRN                             - SETS BREAK POINTS A ADDR1 THRU ADDR N AL
)@@G@@           7) CBREAK ADDR1 ADDR2 ----  ADDRN                            AM
)@@G@@        - CLEARS BREAK PTS AT ADDR1 THRU N                              AN
)@@G@@  IF NO ADDRS ARE SPECIFIED, ALL BRK                          POINTS AREAO
)@@G@@ CLEARED                           8) CREGS  RN1 RN2 ---- RN2 OR ALLA ORAP
)@@G@@ ALLX OR ALLR                   - DUMPS THE REGISTERS SPECIFIED         AQ
)@@G@@                          BY RNI OR ALL A REGS IF ALLA                  AR
)@@G@@                     OR ALL X REGS IF ALLX                              AS
)@@G@@         OR ALL R REGS IF ALLR                 9) PATCH  ADDR1 CONT1 ADDAT
)@@G@@R2 CONT2 ---- ADDRN CONTN                     REPLACES THE CONTENTS OF AAU
)@@G@@DDR1                                  THRU ADDRN WITH THE DATA          AV
)@@G@@                          CONT1 THRU CONTN RESPECTIVELY                1AW
)@@G@@0) EXIT - RETURN CONTROL TO NEXT INSTRUCTION                            AX
)@@G@@                                              11)  GOTO  ADDR           AY
)@@G@@                                      - PASS CONTROL TO THE LOCATION    AZ
)@@G@@                                SPECIFIED BY ADDR                       BA
)@@G@@      OBTAINED FROM THE @MAP LISTING                              ALL ADBB
)@@G@@DRESSES MUST BE 6 DIGIT OCTAL NUMBERS- LJSF          ALL ADDRESSES MUST BC
)@@G@@BE 12 DIGIT OCTAL NUMBERS            ** NOTE **                         BD
)@@G@@                                                                        BE
)@@G@@                 ALL COUNTS MUST BE DECIMAL INTEGERS LESS THAN          BF
)@@G@@          999999                                                 AT LEASBG
)@@G@@T ONE BLANK MUST SEPARATE EACH ELEMENT                    ON A COMMAND LBH
)@@G@@INE                                 /K@@@@'^@[E0            * NO BREAK PBI
)@@G@@OINT SET AT LOCATION:   BREAK POINT AT :  BREAK POINT SET AT :          BJ
)@@G@@REGISTER * NOT DEFINED* A0 C_5A1 C_6A2 C_7A3 C_8A4 C_9A5 C_'A6 C_;A7 C_/BK
)@@G@@A8 C_.A9 C_"A10C__A11D@@A12D@[A13D@]A14D@#A15D@^X1 D@ X2 D@AX3 D@BX4 D@CBL
)@@G@@X5 D@DX6 D@EX7 D@FX8 D@GX9 D@HX10D@IX11D@JR1 D@KR2 D@LR3 D@MR4 D@NR5 D@OBM
)@@G@@R6 D@PR7 D@QR8 D@RR9 D@SR10D@TR11D@UR12D@VR13D@WR14D@XR15D@Y* DEBUG EXITBN
)@@G@@ *     ?? WHAT ?? @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[D[Q@[#C39BO
)@@G@@@[IC4V@[]C3/[G4C4V@@]C77@]E@@@@@]C6PALL   @@@ALL@@@   VALUE:@[^C4VALLA  BP
)@@G@@ALLX  ALLR  @@[D@Z@@[D@\@@[D@'      OLD/NEW     VALUESARE:  @[CC4V@[#D[DBQ
)@@G@@@[GC4V@[EC4V@@^D[Q@@^@@^@@[D[Q@@#D[Q@@#@@]@[ C4V@@[@@[JJJJJJ@[]D[G@@[@@@BR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@[@@@@@[@@@@@[@@@@@]@@@@@#@@@@@[@@@@@#@@@@@[@@@@@@BS
)@@G@@@@@@@[@@@@@]@@@@@#@@@@@[@@@@@#@@@@@[@@@@@@@@@@@[@@@@@]@@@@@#@@@@@[@B____BT
)@@G@@                              @@@@@@@@@@@@[)@[]@[B[[]@[I[[]@])@[[@]]]@[@BU
)@@G@@]B[[[@]I[[[@#]]@]@^]]@#@ )@[]@ ]]@]@ B[[]@ I[[]@@@@@@H@@@@@@@@@C D@@@@@@BV
)@@G@@@@@@@@@@[DG@@@[DF1)@@@@@@@[@@[EDITOR EXITED     NO CORRECTION APPLIED   BW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BRIEF @@@C^FBX
)@@G@@BATCH @@@C^TLIST  @@@C^PDEBUG []7C^XREAD  @@@C^VMONITO@@@C^Q@@@@@A@@@[MQBY
)@@G@@@@@[N+@@@[N=@@@[M+@@@[M,@@@[MR@@@[NF@@@[M'@@@[N$@@@[N$@@@[N#@@@[N?@@@[N\BZ
)@@G@@@@@[O$@@@[O\@@@[O;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@USE NAME2 NOT DEFINDED  CA
)@@G@@LINE NUMBER CAN NOT BE EVALUATED    UNDEFINED MODE    ILLEGAL COMMAND ATCB
)@@G@@ LINE 0     ERROR IN LINE NUMBER(S) @][DH:@#[DH?@^[DH!@ @DH,@C@DH\@[#DGQCC
)@@G@@@@EOF:@[IC].@[^DGT_____"@@]DG>@@[DGX@[ADHH@[^DHV@[ DHQ@[#DHN@[^DHD@@[@[]CD
)@@G@@@@[DH7@@@@@@@@@@@@@@@@@@%0-000%1-000@@@@@@******************************CE
)@@G@@************************WARNING: DUPLICATED SYMBOL(S) ENCOUNTERED.  ANY CF
)@@G@@REFERENCE TO THESE SYMBOLS IN THE EDITING   PROCESS MAY YIELD INCORRECT CG
)@@G@@RESULTS.      SPECIAL ATTENTION MUST BE GIVEN WHEN      THE RECORDS ASSOCH
)@@G@@CIATED WITH THESE SYMBOLS        ARE TRANSFORMED BY THE ART PROCESS.    CI
)@@G@@@@@@@@@@@@@@@@@@@A@@[@@]@@]@@[IK@@@@JK@@@@@]DDIJ@[DDIJ@[BDIS@[CDIZ@[BDI$CJ
)@@G@@@[BDI,@[CDI5@[BDI.@@DUPLICATED@@@@@SYMBOL:            @[GC].@@[@[]@@[DH7CK
)@@G@@@@@@@@@@D@@D@@@@@@@@@@@@@@@@@@BAD OCTAL STRING INPUT        @[^DJ-@@@@@@CL
)@@G@@@@@@@@IO PKT8@A@@@@@@@@@FAC REJECTED:       STATUS:   I/O ERROR - FILE  CM
)@@G@@   STATUS:    FNC:@[IC].@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      CO
)@@G@@[Y#DJ/@@[@@[@[IC].@[CDLU@[ADL+@[@@@]@@[@@@@@@[@@@@#@@#@@@@@@@@@@@@@@@@@@CP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@]@@@@@@      @@@@@@@@@@@@@@@@@@@@@@@@CT
)@@G@@@@@@@@@@@@@@ NO CURRENT OF SET       NO C TABLE ENTRY FOR RECORD CODE = CU
)@@G@@ ERROR RETRUN FROM GETVAR CODE =     VARIABLE IS NOT A RECORD NAME, NOTHCV
)@@G@@ING INSERTEDDEPENDING ON ITEM HAS WRONG VALUE   ***INSERT ERROR STATUS  CW
)@@G@@UPDATED RECORD BUFFER   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DO:@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DO:I$FILE      @@@@@@@C@@@@@W@@@@DA
)@@G@@@@@@@@T$FILE      @@@@@@@C@@@@@W@@@@@@@@@@@ASG,A   I$FILE    .    @ASG,TDB
)@@G@@   I$FILE,//POS/100    .@ASG,A   T$FILE    .    @ASG,T   T$FILE,//POS/40DC
)@@G@@0    .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DE
)@@G@@@@@@@@@@@@@@@@@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@C CDJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@C C@@@@@@@@@@@@@@@@@@@@@@@@DK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DL
)@@G@@@@@@@@@@@@@@@@@@@@@@2DQV@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[ADQC@#^DQCDM
)@@G@@@ ]DQC@A[DQC@C DQB@E#DQB@G[DQB@HADQA@J^DQA@L]DQA@M[DQA@&QDQV@@@@@@[[@@@@DN
)@@G@@@@@@@@@@@@@@@@@@@@@&#DQ7@@@@@@[[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DO
)@@G@@@@@@@@      @@@@@@@@@@@@@@@@@@@@@@@[@@@@@[@@@@@[_____"@@@@@[@@@@@@@@@@@@DP
)@@G@@@@@@@@@@@@@[@@@@@[@@@@@[***ERROR - INDEX OF DATANAME   IS NOT NUMERIC   DQ
)@@G@@***ERROR - DATANAME      HAS NO VALUE CURRENTLY DEFINED      IS UNDEFINEDR
)@@G@@D      HAS ILLEGAL INDEX VALUE HAS INDEX BEYOND RANGE CURRENTLY DEFINED DS
)@@G@@ HAS ZERO LENGTH  ***ERROR - RESERVED WORD OF DATANAME       IS BAD OCTADT
)@@G@@L STRING    000000__"DQC@;&?*@@[QDQV@@[@@@_____"@[Q@@@@[@@@@@@@@@@@@@@@@DU
)@@G@@@@@@@@@[^DS'@[#DS"@[CDSG@[^DSO@[DDSS@[BDS-@[BDS*@[ADS\@[ DS5ERROR 1: NEGDV
)@@G@@ATIVE NUMBER IN ILLEGAL CONTEXT     ERROR 2: STACK OVERFLOW ERROR 3: ERRDW
)@@G@@OR IN STRING-TO-ARITHMETIC CONVERSION     ERROR 4: ERROR IN ARITHMETIC ODX
)@@G@@PERATION    ERROR 5: NULL STRING IN ILLEGAL CONTEXT   ERROR 6: RETURN FRDY
)@@G@@OM LEVEL ZERO     ERROR 7: INVALID INDIRECT GOTOPROCEDURE:              DZ
)@@G@@STATEMENT:        @@[]K:DO]"K@@@[]MB@@[]K4@[^DTAERROR 2: STACK OVERFLOW EA
)@@G@@@@[]LE@@[]L]@@[]MB@@[]MJ@@[]MJ@@[]MB__.DU^C@@@@@K@@@@@[@@@@@]@@@@@^@@@@@EB
)@@G@@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EC
)@@G@@@@@@@@@@@@@@@@@@@@@@@DT+T@@@@@@@@@@@@@@]V[B@@@@@@@@@@@@@@]VAMOVE@@@@@@@@ED
)@@G@@@@@]VFDITTO@@@@@@@@@@]VKD@@@@@@@@@@@@@@]VPEXIT@@@@@@@@@@@]VUOMIT@@@@@@@@EE
)@@G@@@@@]VZN@@@@@@@@@@@@@@]V=PLUS.A@@@@@@@@@]V,MINUS.A@@@@@@@@]V(C@@@@@@@@@@@EF
)@@G@@@@@]Y0CO@@@@@@@@@@@@@]Y5NOFNC@@@@@@@@@@]0KCALL@@@@@@@@@@@](KABORT@@@@@@@EG
)@@G@@@@@](FI@@@@@@@@@@@@@@]<RIB@@@@@@@@@@@@@]<WIR@@@@@@@@@@@@@]<-IRB@@@@@@@@@EH
)@@G@@@@@]<&IS@@@@@@@@@@@@@]<:ICTL@@@@@@@@@@@]<0IK@@@@@@@@@@@@@]=AINTRP@@@@@@@EI
)@@G@@@@@]\ PROC@@@@@@@@@@@]* PERFORM@@@@@@@@]*EGOTO@@@@@@@@@@@]*=RETURN.A@@@@EJ
)@@G@@@@@](AON@@@@@@@@@@@@@]V3OFF@@@@@@@@@@@@]V8]@@DWA@@@@@@[@@DWC@@A@@A@@@@@@EK
)@@G@@]@@DWF@@@@@@]@@DWH@@G@@@            ]@@DWL@>)@@@]@@DWN@>)@@@[@@DWP@@A@@AEL
)@@G@@@@@@@@]@@DWS@@_@@@                                                      EM
)@@G@@            ]@@DW>@@G@@@            ]@@DW(@@[@@@      ]@@DW?@@G@@@      EN
)@@G@@      ]@@DW0@@A@@@      ]@@DW3@@A@@@      ]@@DW6@@[@@@      ]@@DW9@>)@@@EO
)@@G@@                                                                        EP
)@@G@@                                                                        EQ
)@@G@@                                                                        ER
)@@G@@                                                                        ES
)@@G@@                                                                        ET
)@@G@@                                                                        EU
)@@G@@                                                                        EV
)@@G@@                                                                        EW
)@@G@@                                                                        EX
)@@G@@                                                                        EY
)@@G@@                                                                        EZ
)@@G@@                                                                        FA
)@@G@@                                                                        FB
)@@G@@                                                                        FC
)@@G@@                                                                        FD
)@@G@@                                                                        FE
)@@G@@                                                                        FF
)@@G@@                                                                        FG
)@@G@@                                                                        FH
)@@G@@                                                                        FI
)@@G@@                                                                        FJ
)@@G@@                                                                        FK
)@@G@@                                                                        FL
)@@G@@                                                                        FM
)@@G@@                                                                        FN
)@@G@@                                                                        FO
)@@G@@                                                                        FP
)@@G@@                                                                        FQ
)@@G@@                                                                        FR
)@@G@@                                                                        FS
)@@G@@                                                                        FT
)@@G@@                                                                        FU
)@@G@@                                                                        FV
)@@G@@                        ]@@D<F@@G@@@            ]@@D<J@>)@@@            FW
)@@G@@                                                                        FX
)@@G@@                                                                        FY
)@@G@@                                                                        FZ
)@@G@@                                                                        GA
)@@G@@                                                                        GB
)@@G@@                                                                        GC
)@@G@@                                                                        GD
)@@G@@                                                                        GE
)@@G@@                                                                        GF
)@@G@@                                                                        GG
)@@G@@                                                                        GH
)@@G@@                                                                        GI
)@@G@@                                                                        GJ
)@@G@@                                                                        GK
)@@G@@                                                                        GL
)@@G@@                                                                        GM
)@@G@@                                                                        GN
)@@G@@                                                                        GO
)@@G@@                                                                        GP
)@@G@@                                                                        GQ
)@@G@@                                                                        GR
)@@G@@                                                                        GS
)@@G@@                                                                        GT
)@@G@@                                                                        GU
)@@G@@                                                                        GV
)@@G@@                                                                        GW
)@@G@@                                                                        GX
)@@G@@                                                                        GY
)@@G@@                                                                        GZ
)@@G@@                                                                        HA
)@@G@@                                                                        HB
)@@G@@                                                                        HC
)@@G@@                                                                        HD
)@@G@@            ]@@D(-@[O@@@                                                HE
)@@G@@                                    ]@@D(1@@A@@@      ]@@D(4@@A@@@      HF
)@@G@@]@@D(7@@[@@@      ]@@D('@@[@@@      ]@@D(.@@]@@@      ]@@D%@@@G@@@      HG
)@@G@@      ]@@D%^@@G@@@            ]@@D%C@@A@@@      ]@@D%F@@A@@@      ]@@D%IHH
)@@G@@@@G@@@            ]@@D%M@@ @@ NOFNC ]@@D%P@@#@@# +=   [@@D%S@@A@@A@@@@@[HI
)@@G@@[@@D%V@@A@@A@@@@@@]@@D%Y@@[@@[-     ]@@D%-@@[@@[      ]@@D%=@@[@@[=     HJ
)@@G@@]@@D%$[FR@@@                                                            HK
)@@G@@                                                                        HL
)@@G@@                                                                        HM
)@@G@@                                                                        HN
)@@G@@                                                                        HO
)@@G@@                                                                        HP
)@@G@@                                                                        HQ
)@@G@@                                                                        HR
)@@G@@                                                                        HS
)@@G@@                                                                        HT
)@@G@@                                                                        HU
)@@G@@                                                                        HV
)@@G@@                                                                        HW
)@@G@@                                                                        HX
)@@G@@                                                                        HY
)@@G@@                                                                        HZ
)@@G@@                                                                        IA
)@@G@@                                                                        IB
)@@G@@                                                                        IC
)@@G@@                                                                        ID
)@@G@@                                                                        IE
)@@G@@                                                                        IF
)@@G@@                                                                        IG
)@@G@@                                                                        IH
)@@G@@                                                                        II
)@@G@@                                                                        IJ
)@@G@@                                                                        IK
)@@G@@                                                                        IL
)@@G@@                                                                        IM
)@@G@@                                                                        IN
)@@G@@                                                                        IO
)@@G@@                                                                        IP
)@@G@@                                                                        IQ
)@@G@@                                                                        IR
)@@G@@                                                                        IS
)@@G@@                                                                        IT
)@@G@@                                                                        IU
)@@G@@                                                                        IV
)@@G@@                                                                        IW
)@@G@@                                                                        IX
)@@G@@                                                                        IY
)@@G@@                                                                        IZ
)@@G@@                                                                        JA
)@@G@@                                                                        JB
)@@G@@                                                                        JC
)@@G@@                                                                        JD
)@@G@@                                                                        JE
)@@G@@                                                                        JF
)@@G@@                                                                        JG
)@@G@@                                                                        JH
)@@G@@                                                                        JI
)@@G@@                                                                        JJ
)@@G@@                                                                        JK
)@@G@@                                                                        JL
)@@G@@                                                                        JM
)@@G@@                                                                        JN
)@@G@@                                                                        JO
)@@G@@                                                                        JP
)@@G@@                                                                        JQ
)@@G@@                                                                        JR
)@@G@@                                                                        JS
)@@G@@                                                                        JT
)@@G@@                                                                        JU
)@@G@@                                                                        JV
)@@G@@                                                                        JW
)@@G@@                                                                        JX
)@@G@@                                                                        JY
)@@G@@            ]@@D7H@@[@@[!     ]@@D7K@@]@@].A    [@@D7N@@A@@A@@@@@_[@@D7QJZ
)@@G@@@@A@@A@@@@@@]@@D7T@@@@@@]@@D7V@@A@@ARETURN]@@D7Y@@[@@[+     ]@@D7-@@A@@AKA
)@@G@@PLUS.A]@@D7=@@[@@[[     ]@@D7$@@[@@[]     ]@@D7%@@[@@[#     ]@@D7!@@[@@[KB
)@@G@@^     ]@@D70@@[@@[B     ]@@D73@@[@@[D     ]@@D76@@[@@[F     ]@@D79@@[@@[KC
)@@G@@G     ]@@D7/@@[@@[H     ]@@D7_@@[@@[I     ]@@D8]@@]@@]@#    ]@@D8 @@D@@DKD
)@@G@@@@@G@@@@@   ]@@D8D@@ @@       ]@@D8G@@]@@]@]    ]@@D8J@@#@@# 1    ]@@D8MKE
)@@G@@@@E@@E0123456789  ]@@D8Q@@]@@]@^    ]@@D8T@@F@@F            ]@@D8X@@[@@[KF
)@@G@@1     ]@@D8)@@]@@]@A    ]@@D8<@@[@@@      ]@@D8&@@C@@C01234567    [@@D8%KG
)@@G@@@@A@@A@@@@@A[@@D8!@@A@@A@@@@@@]@@D80@@]@@]      ]@@D83@@[@@[@     ]@@D86KH
)@@G@@@@#@@#ALL   ]@@D89@@D@@D@@@I@@@@@   ]@@D8.@@^@@^@@@@  [@@D9@@@A@@A@@@@@^KI
)@@G@@[@@D9#@@A@@A@@@@@]]@@D9A@@]@@]@@    ]@@D9D@@D@@D@@@]@@@@@   ]@@D9H[07@@@KJ
)@@G@@                                                                        KK
)@@G@@                                                                        KL
)@@G@@                                                                        KM
)@@G@@                                                                        KN
)@@G@@                                                                        KO
)@@G@@                                                                        KP
)@@G@@                                                                        KQ
)@@G@@                                                                        KR
)@@G@@                                                                        KS
)@@G@@                                                                        KT
)@@G@@                                                                        KU
)@@G@@                                                                        KV
)@@G@@                                                                        KW
)@@G@@                                                                        KX
)@@G@@                                                                        KY
)@@G@@                                                                        KZ
)@@G@@                                                                        LA
)@@G@@                                                                        LB
)@@G@@                                                                        LC
)@@G@@                                                                        LD
)@@G@@                                                                        LE
)@@G@@                                                                        LF
)@@G@@                                                                        LG
)@@G@@                                                                        LH
)@@G@@                                                                        LI
)@@G@@                                                                        LJ
)@@G@@                                                                        LK
)@@G@@                                                                        LL
)@@G@@                                                                        LM
)@@G@@                                                                        LN
)@@G@@                                                                        LO
)@@G@@                                                                        LP
)@@G@@                                                                        LQ
)@@G@@                                                                        LR
)@@G@@                                                                        LS
)@@G@@                                                                        LT
)@@G@@                                                                        LU
)@@G@@                                                                        LV
)@@G@@                                                                        LW
)@@G@@                                                                        LX
)@@G@@                                                                        LY
)@@G@@                                                                        LZ
)@@G@@                                                                        MA
)@@G@@                                                                        MB
)@@G@@                                                                        MC
)@@G@@                                                                        MD
)@@G@@                                                                        ME
)@@G@@                                                                        MF
)@@G@@                                                                        MG
)@@G@@                                                                        MH
)@@G@@                                                                        MI
)@@G@@                                                                        MJ
)@@G@@                                                                        MK
)@@G@@                                                                        ML
)@@G@@                                                                        MM
)@@G@@                                                                        MN
)@@G@@                                                                        MO
)@@G@@                                                                        MP
)@@G@@                                                                        MQ
)@@G@@                                                                        MR
)@@G@@                                                                        MS
)@@G@@                                                                        MT
)@@G@@                                                                        MU
)@@G@@                                                                        MV
)@@G@@                                                                        MW
)@@G@@                                                                        MX
)@@G@@                                                                        MY
)@@G@@                                                                        MZ
)@@G@@                                                                        NA
)@@G@@                                                                        NB
)@@G@@                                                                        NC
)@@G@@                                                                        ND
)@@G@@                                                                        NE
)@@G@@                                                                        NF
)@@G@@                                                                        NG
)@@G@@                                                                        NH
)@@G@@                                                                        NI
)@@G@@                                                                        NJ
)@@G@@                                                                        NK
)@@G@@                                                                        NL
)@@G@@                                                                        NM
)@@G@@                                                                        NN
)@@G@@                                                                        NO
)@@G@@                                                                        NP
)@@G@@                                                                        NQ
)@@G@@                                                                        NR
)@@G@@                                                                        NS
)@@G@@                                                                        NT
)@@G@@                                                                        NU
)@@G@@                                                                        NV
)@@G@@                                                                        NW
)@@G@@                                                                        NX
)@@G@@                                                                        NY
)@@G@@                                                                        NZ
)@@G@@                                                                        OA
)@@G@@                                                                        OB
)@@G@@                                                                        OC
)@@G@@                                                                        OD
)@@G@@                                                                        OE
)@@G@@                                                                        OF
)@@G@@                        ]@@EG#@@#@@#@@@   ]@@EGA@@[@@[A     ]@@EGD@@[@@[OG
)@@G@@'     [@@EGG@@A@@A@@@@@#]@@EGJ@@A@@A@@@@@@]@@EGM@@G@@G@E@@@@ @@@@@]@@EGQOH
)@@G@@@@G@@G@E@@@@A@@@@@]@@EGU@@G@@G@#]@@@B@@@@@]@@EGY@@G@@G@]@@@@D@@@@@]@@EG+OI
)@@G@@@@G@@G@][@@@D@@@@@]@@EG&@@[@@[)     ]@@EG(@@]@@] (    ]@@EG?@@G@@G@@@@@@OJ
)@@G@@F@@@@@]@@EG0@@[@@[(     ]@@EG3@@[@@[,     [@@EG6@@A@@A@@@@@@[@@EG9@@A@@AOK
)@@G@@@@@@@ ]@@EG/@@G@@G@^[@@@F@@@@@]@@EH@@@G@@G@@@@@@H@@@@@]@@EH^@@G@@G@]@@@@OL
)@@G@@@@@@@@@@[DV7@@[@[]@@[DVY@@[@@#]@@EH2@@@@@@[@@EH4@@A@@A@@@@@@]@@EH7@@@@@@OM
)@@G@@]@@EH9[[*@@@]@@EH;@^?@@@]@@EH.@^?@@@]@@EH_@@[@@@[@@EI[@@A@@A@@@@@@[@@EI^ON
)@@G@@@@A@@A@@@@@@]@@EIB@@[@@[G     ]@@EIE@^?@@@                              OO
)@@G@@                                                                        OP
)@@G@@                                                                        OQ
)@@G@@                                                                        OR
)@@G@@                                                      [@@EI"@@A@@A@@@@@@OS
)@@G@@]@@EJ[@@A@@A      ]@@EJ^[[,@@@                                          OT
)@@G@@                                                                        OU
)@@G@@                                                                        OV
)@@G@@                                                                        OW
)@@G@@                                                                        OX
)@@G@@                                                                        OY
)@@G@@                                                                        OZ
)@@G@@                                                                        PA
)@@G@@                                                                        PB
)@@G@@                                                                        PC
)@@G@@                                                                        PD
)@@G@@                                                                        PE
)@@G@@                                                                        PF
)@@G@@                                                                        PG
)@@G@@                                                                        PH
)@@G@@                                                                        PI
)@@G@@                                                                        PJ
)@@G@@                                                                        PK
)@@G@@                                                                        PL
)@@G@@                                                                        PM
)@@G@@                                                                        PN
)@@G@@                                                                        PO
)@@G@@                                                                        PP
)@@G@@                                                                        PQ
)@@G@@                                                                        PR
)@@G@@                                                                        PS
)@@G@@                                                                        PT
)@@G@@                                                                        PU
)@@G@@                                                                        PV
)@@G@@                                                                        PW
)@@G@@                                                                        PX
)@@G@@                                                                        PY
)@@G@@                                                                        PZ
)@@G@@                                                                        QA
)@@G@@                                                                        QB
)@@G@@                                                                        QC
)@@G@@                                                                        QD
)@@G@@                                                                        QE
)@@G@@                                                                        QF
)@@G@@                                                                        QG
)@@G@@                                                                        QH
)@@G@@                                                                        QI
)@@G@@                                                                        QJ
)@@G@@                                                                        QK
)@@G@@                                                                        QL
)@@G@@                                                                        QM
)@@G@@                                                                        QN
)@@G@@                                                                        QO
)@@G@@                                                                        QP
)@@G@@                                                                        QQ
)@@G@@                                                                        QR
)@@G@@                                                                        QS
)@@G@@                                                                        QT
)@@G@@                                                                        QU
)@@G@@                                                                        QV
)@@G@@                                                                        QW
)@@G@@                                                                        QX
)@@G@@                                                                        QY
)@@G@@                                                            [@@EU#@@A@@AQZ
)@@G@@@@@@@@[@@EUA@@A@@A@@@@@@[@@EUD@@A@@A@@@@@@]@@EUG@^?@@@                  RA
)@@G@@                                                                        RB
)@@G@@                                                                        RC
)@@G@@                                                                        RD
)@@G@@                                                                  [@@EV@RE
)@@G@@@@A@@A@@@@@[[@@EV#@@A@@A@@@@@@[@@EVA@@A@@A@@@@@@@@[EH<@@[@[]@@[EHE@@[@@#RF
)@@G@@]@@EV3@@@@@@[@@EV5@@A@@A@@@@@@]@@EV8@@@@@@]@@EV'[[*@@@]@@EV/@^?@@@]@@EV"RG
)@@G@@@^?@@@                                                                  RH
)@@G@@                                                                        RI
)@@G@@                                                                        RJ
)@@G@@                                                                        RK
)@@G@@                  @@[EV=@@[@[]@@[EVF@@[@@#P@@@@@@@@@@@@@@]8%PN@@@@@@@@@@RL
)@@G@@@@@]8\PR@@@@@@@@@@@@@]84PO@@@@@@@@@@@@@]89P.A@@@@@@@@@@@@]8"PN.A@@@@@@@@RM
)@@G@@@@@]9#PR.A@@@@@@@@@@@]9CPO.A@@@@@@@@@@@]9HNOFNC@@@@@@@@@@#HDIF@@@@@@@@@@RN
)@@G@@@@@#G*PRINT@@@@@@@@@@]_$LET@@@@@@@@@@@@#GGDISPLAY@@@@@@@@]_<L@@@@@@@@@@@RO
)@@G@@@@@]'#LO@@@@@@@@@@@@@]'CLCO@@@@@@@@@@@@]'MLC@@@@@@@@@@@@@]'HLR@@@@@@@@@@RP
)@@G@@@@@]'RLS@@@@@@@@@@@@@]'WLP@@@@@@@@@@@@@];HLCTL@@@@@@@@@@@]'-ARRAY@@@@@@@RQ
)@@G@@@@@#I1DOT@@@@@@@@@@@@#L2MONITOR@@@@@@@@]_YUSE@@@@@@@@@@@@]75@@@@@@@@@@@@RR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@RS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@=1EY>@BYF#/@BZFG@@J[FO RT
)@@G@@@-XF<?@A8G \@@9GHH@@;GI?@[YGKH)@&EX_)@&F#Q)@&FFU)@&FNZ)@&F<A)@&G D)@&GG$RU
)@@G@@)@&GIA)@&GJ$-APGL:@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___RV
)@@G@@]@@EY$@@@@@@[@@EY(@@A@@A@@@@@@]@@EY?@@@@@@]@@EY,@@G@@@            ]@@EY2RW
)@@G@@@@_@@@]@@EY4@>)@@@]@@EY6@@[@@@]@@EY8@@G@@@]@@EY'@@G@@@]@@EY/@>)@@@]@@EY"RX
)@@G@@@@A@@@]@@EZ@@@A@@@]@@EZ]@@[@@@]@@EZ^@@G@@@]@@EZA@@]@@@]@@EZC@>)@@@]@@EZERY
)@@G@@@@A@@@[@@EZG@@A@@A@@@@@@[@@EZJ@@A@@A@@@@@@[@@EZM@@A@@A@@@@@@]@@EZP@@A@@@RZ
)@@G@@      ]@@EZS@@A@@@      ]@@EZV@@A@@@      ]@@EZY@@A@@@      ]@@EZ-@@A@@@SA
)@@G@@      ]@@EZ=@@A@@@      ]@@EZ$@@Y@@@                              ]@@EZ,SB
)@@G@@@@Y@@@                              ]@@EZ5@@G@@@            ]@@EZ9@@[@@[SC
)@@G@@@     ]@@EZ/@@[@@[      [@@EZ_@@A@@A@@@@@@]@@E)]@@[@@[=     ]@@E) [F*@@@SD
)@@G@@                                                                        SE
)@@G@@                                                                        SF
)@@G@@                                                                        SG
)@@G@@                                                                        SH
)@@G@@                                                                        SI
)@@G@@                                                                        SJ
)@@G@@                                                                        SK
)@@G@@                                                                        SL
)@@G@@                                                                        SM
)@@G@@                                                                        SN
)@@G@@                                                                        SO
)@@G@@                                                                        SP
)@@G@@                                                                        SQ
)@@G@@                                                                        SR
)@@G@@                                                                        SS
)@@G@@                                                                        ST
)@@G@@                                                                        SU
)@@G@@                                                                        SV
)@@G@@                                                                        SW
)@@G@@                                                                        SX
)@@G@@                                                                        SY
)@@G@@                                                                        SZ
)@@G@@                                                                        TA
)@@G@@                                                                        TB
)@@G@@                                                                        TC
)@@G@@                                                                        TD
)@@G@@                                                                        TE
)@@G@@                                                                        TF
)@@G@@                                                                        TG
)@@G@@                                                                        TH
)@@G@@                                                                        TI
)@@G@@                                                                        TJ
)@@G@@                                                                        TK
)@@G@@                                                                        TL
)@@G@@                                                                        TM
)@@G@@                                                                        TN
)@@G@@                                                                        TO
)@@G@@                                                                        TP
)@@G@@                                                                        TQ
)@@G@@                                                                        TR
)@@G@@                                                                        TS
)@@G@@                                                                        TT
)@@G@@                                                                        TU
)@@G@@                                                                        TV
)@@G@@                                                                        TW
)@@G@@                                                                        TX
)@@G@@                                                                        TY
)@@G@@                                                                        TZ
)@@G@@                                                                        UA
)@@G@@                                                                        UB
)@@G@@                                                                        UC
)@@G@@                                                                        UD
)@@G@@                                                                        UE
)@@G@@                                                                        UF
)@@G@@                                                                        UG
)@@G@@                                                                        UH
)@@G@@                                                                        UI
)@@G@@                                                                        UJ
)@@G@@                                                                        UK
)@@G@@                                                                        UL
)@@G@@                                                                        UM
)@@G@@                                                                        UN
)@@G@@                                                                        UO
)@@G@@                                                                        UP
)@@G@@                                                                        UQ
)@@G@@                                                                        UR
)@@G@@                                                                        US
)@@G@@                  ]@@E?,@@[@@[.     ]@@E?1@@#@@#DOT   ]@@E?4@@ @@ NOFNC UT
)@@G@@]@@E?7@@Y@@Y                              ]@@E?"@@G@@G@GJ@@@G@@@@@]@@E!]UU
)@@G@@@@[@@[[     ]@@E! @@[@@[]     ]@@E!C@@[@@[#     ]@@E!F@@[@@[^     ]@@E!IUV
)@@G@@@@[@@[A     ]@@E!L@@[@@[B     ]@@E!O@@[@@[C     ]@@E!R@@#@@# 1    ]@@E!UUW
)@@G@@@@E@@E0123456789  ]@@E!Y@@G@@G            ]@@E!+@@]@@]@^    ]@@E!>@@D@@DUX
)@@G@@@@@#@@@@@   ]@@E!(@@^@@^AREA  ]@@E!?@@[@@[D     ]@@E!\@@A@@ADIRECT]@@E!2UY
)@@G@@@@[@@[E     ]@@E!5@@ @@ OWNER ]@@E!8@@[@@[F     ]@@E!;@@]@@]@]    ]@@E!"UZ
)@@G@@@@D@@D@@@[@@@@@   [@@E,]@@A@@A@@@@@[]@@E, @@G@@G@@B@@@[@@@@@]@@E,D[1C@@@VA
)@@G@@                                                                        VB
)@@G@@                                                                        VC
)@@G@@                                                                        VD
)@@G@@                                                                        VE
)@@G@@                                                                        VF
)@@G@@                                                                        VG
)@@G@@                                                                        VH
)@@G@@                                                                        VI
)@@G@@                                                                        VJ
)@@G@@                                                                        VK
)@@G@@                                                                        VL
)@@G@@                                                                        VM
)@@G@@                                                                        VN
)@@G@@                                                                        VO
)@@G@@                                                                        VP
)@@G@@                                                                        VQ
)@@G@@                                                                        VR
)@@G@@                                                                        VS
)@@G@@                                                                        VT
)@@G@@                                                                        VU
)@@G@@                                                                        VV
)@@G@@                                                                        VW
)@@G@@                                                                        VX
)@@G@@                                                                        VY
)@@G@@                                                                        VZ
)@@G@@                                                                        WA
)@@G@@                                                                        WB
)@@G@@                                                                        WC
)@@G@@                                                                        WD
)@@G@@                                                                        WE
)@@G@@                                                                        WF
)@@G@@                                                                        WG
)@@G@@                                                                        WH
)@@G@@                                                                        WI
)@@G@@                                                                        WJ
)@@G@@                                                                        WK
)@@G@@                                                                        WL
)@@G@@                                                                        WM
)@@G@@                                                                        WN
)@@G@@                                                                        WO
)@@G@@                                                                        WP
)@@G@@                                                                        WQ
)@@G@@                                                                        WR
)@@G@@                                                                        WS
)@@G@@                                                                        WT
)@@G@@                                                                        WU
)@@G@@                                                                        WV
)@@G@@                                                                        WW
)@@G@@                                                                        WX
)@@G@@                                                                        WY
)@@G@@                                                                        WZ
)@@G@@                                                                        XA
)@@G@@                                                                        XB
)@@G@@                                                                        XC
)@@G@@                                                                        XD
)@@G@@                                                                        XE
)@@G@@                                                                        XF
)@@G@@                                                                        XG
)@@G@@                                                                        XH
)@@G@@                                                                        XI
)@@G@@                                                                        XJ
)@@G@@                                                                        XK
)@@G@@                                                                        XL
)@@G@@                                                                        XM
)@@G@@                                                                        XN
)@@G@@                                                                        XO
)@@G@@                                                                        XP
)@@G@@                                                                        XQ
)@@G@@                                                                        XR
)@@G@@                                                                        XS
)@@G@@                                                                        XT
)@@G@@                                                                        XU
)@@G@@                                                                        XV
)@@G@@                                                                        XW
)@@G@@                                                                        XX
)@@G@@                                                                        XY
)@@G@@                                                                        XZ
)@@G@@                                                                        YA
)@@G@@                                                                        YB
)@@G@@                                                                        YC
)@@G@@                                                                        YD
)@@G@@                                                                        YE
)@@G@@                                                                        YF
)@@G@@                                                                        YG
)@@G@@                                                                        YH
)@@G@@                                                                        YI
)@@G@@                                                                        YJ
)@@G@@                                                                        YK
)@@G@@                                                                        YL
)@@G@@                                                                        YM
)@@G@@                                                                        YN
)@@G@@                                                                        YO
)@@G@@                                                                        YP
)@@G@@                                                                        YQ
)@@G@@                                                                        YR
)@@G@@                                                                        YS
)@@G@@                                                                        YT
)@@G@@                                                                        YU
)@@G@@                                                                        YV
)@@G@@                                                                        YW
)@@G@@                                          [@@F[]@@A@@A@@@@@A[@@F[ @@A@@AYX
)@@G@@@@@@@^[@@F[C@@A@@A@@@@@][@@F[F@@A@@A@@@@@@]@@F[I@@C@@C01234567    ]@@F[MYY
)@@G@@@@]@@]@@    ]@@F[P@@ @@       ]@@F[S@@D@@D@@@^@@@@@   ]@@F[W@@[@@['     YZ
)@@G@@[@@F[Z@@A@@A@@@@@@]@@F[+@@@@@@]@@F[=@@]@@]OF    ]@@F[$@@]@@] =    [@@F[%ZA
)@@G@@@@A@@A@@@@@@[@@F[!@@A@@A@@@@@#]@@F[0@@[@@[)     [@@F[3@@A@@A@@@@@@]@@F[6ZB
)@@G@@@@[@@[+     ]@@F[9@@[@@[-     ]@@F[/@@[@@[K     ]@@F[_@@[@@[/     ]@@F]]ZC
)@@G@@@@[@@[S     ]@@F] @@[@@[*     ]@@F]C@@ @@ @@@@@ [@@F]F@@A@@A@@@@@@[@@F]IZD
)@@G@@@@A@@A@@@@@ ]@@F]L@@D@@D@@@E@@@@@   ]@@F]P@@#@@# +=   [@@F]S@@A@@A@@@@@_ZE
)@@G@@]@@F]V@@G@@G@^A@@@G@@@@@]@@F]Z@@F@@F            ]@@F]<@@G@@G@@E@@@G@@@@@ZF
)@@G@@]@@F]$@@[@@[(     ]@@F]%@@[@@[,     ]@@F]!@@0@@0                        ZG
)@@G@@                        ]@@F]7@@A@@A@@@@@@[@@F]'@@A@@A@@@@@Y]@@F].@@^@@^ZH
)@@G@@@@#D  ]@@F#@@@A@@A@@[@@@]@@F##@@G@@G@##@@@E@@@@@]@@F#B@@M@@M@##@@@E@@@@@ZI
)@@G@@@@@@@@]@@F#G@@G@@G@]@@@@J@@@@@]@@F#K@@G@@G@]@@@@@@@@@@@@[EYS@@[@[]@@[EX_ZJ
)@@G@@@@[@@#]@@F#"@@@@@@[@@F^@@@A@@A@@@@@@]@@F^#@@@@@@]@@F^ @>)@@@]@@F^B@>)@@@ZK
)@@G@@]@@F^D@@G@@@            ]@@F^H@@G@@@            ]@@F^L@@G@@@            ZL
)@@G@@]@@F^P@@G@@@            ]@@F^T@@@@@@]@@F^V@@[@@[      ]@@F^Y@@]@@]      ZM
)@@G@@]@@F^-@@[@@[*     ]@@F^=@@[@@[.     ]@@F^$@@]@@]/     [@@F^%@@A@@A@@@@@[ZN
)@@G@@[@@F^!@@A@@A@@@@@@]@@F^0@&K@@@                                          ZO
)@@G@@                                                                        ZP
)@@G@@                                                                        ZQ
)@@G@@                                                                        ZR
)@@G@@                                                                        ZS
)@@G@@                                                                        ZT
)@@G@@                                                                        ZU
)@@G@@                                                                        ZV
)@@G@@                                                                        ZW
)@@G@@                                                                        ZX
)@@G@@                                                                        ZY
)@@G@@                                                                        ZZ
)@@G@@                                                                        AA
)@@G@@                                                                        AB
)@@G@@                                                                        AC
)@@G@@                                                                        AD
)@@G@@                                                                        AE
)@@G@@                                                                        AF
)@@G@@                                                                        AG
)@@G@@                                                                        AH
)@@G@@                                                                        AI
)@@G@@                                                                        AJ
)@@G@@                                                                        AK
)@@G@@                                                                        AL
)@@G@@                                                                        AM
)@@G@@                                                                        AN
)@@G@@                                                                        AO
)@@G@@                                                                        AP
)@@G@@                                                                        AQ
)@@G@@                                                                        AR
)@@G@@                                                                        AS
)@@G@@                                                                        AT
)@@G@@                                                                        AU
)@@G@@                                                                        AV
)@@G@@                              [@@FFE@@A@@A@@@@@@]@@FFH@@^@@^TPF$  ]@@FFKAW
)@@G@@@@G@@G            ]@@FFO@@G@@G@]@@@@@@@@@@@@[F#\@@[@[]@@[F#Q@@[@@#]@@FG]AX
)@@G@@@@@@@@[@@FG^@@A@@A@@@@@@]@@FGB@@@@@@]@@FGD@>)@@@]@@FGF@>)@@@]@@FGH@@[@@@AY
)@@G@@      ]@@FGK@@G@@@            ]@@FGO@@G@@@            ]@@FGS@@]@@@      AZ
)@@G@@]@@FGV@@[@@[      ]@@FGY@>?@@@                                          BA
)@@G@@                                                                        BB
)@@G@@                                                                        BC
)@@G@@                                                                        BD
)@@G@@                                                                        BE
)@@G@@                                                                        BF
)@@G@@                                                                        BG
)@@G@@                                                                        BH
)@@G@@                                                                        BI
)@@G@@                                                                        BJ
)@@G@@                                                                        BK
)@@G@@                                                                        BL
)@@G@@                                                                        BM
)@@G@@                                                                        BN
)@@G@@                                                                        BO
)@@G@@                                                                        BP
)@@G@@                                                                        BQ
)@@G@@                                                                        BR
)@@G@@                                                                        BS
)@@G@@                                                                        BT
)@@G@@                                                                        BU
)@@G@@                                                                        BV
)@@G@@                                                                        BW
)@@G@@                                                                        BX
)@@G@@                                                                        BY
)@@G@@                                                                        BZ
)@@G@@                                                                        CA
)@@G@@                                                                        CB
)@@G@@                                                                        CC
)@@G@@                                                                        CD
)@@G@@                                                                        CE
)@@G@@                                                                        CF
)@@G@@                                                                        CG
)@@G@@                                                                  [@@FM2CH
)@@G@@@@A@@A@@@@@@]@@FM5@@^@@^AREA  ]@@FM8@@A@@ADIRECT]@@FM;@@[@@[A     ]@@FM"CI
)@@G@@@@[@@[C     ]@@FN[@@M@@@                  ]@@FNA@@]@@]      ]@@FND@@D@@DCJ
)@@G@@   ]        [@@FNH@@A@@A@@@@@A[@@FNK@@A@@A@@@@@^[@@FNN@@A@@A@@@@@][@@FNQCK
)@@G@@@@A@@A@@@@@@]@@FNT@@G@@G@]@@@@@@@@@@@@[FF3@@[@[]@@[FFU@@[@@#]@@FOB@@@@@@CL
)@@G@@[@@FOD@@A@@A@@@@@@]@@FOG@@@@@@]@@FOI@>)@@@]@@FOK@@/@@@                  CM
)@@G@@                                          ]@@FOW@@A@@@      ]@@FOZ@@M@@@CN
)@@G@@                  ]@@FO=@[C@@@                                          CO
)@@G@@                              ]@@FO2@@/@@@                              CP
)@@G@@                              ]@@FO"@@/@@@                              CQ
)@@G@@                              ]@@FPE@@/@@@                              CR
)@@G@@                              ]@@FPQ@@[@@[      ]@@FPT@>+@@@            CS
)@@G@@                                                                        CT
)@@G@@                                                                        CU
)@@G@@                                                                        CV
)@@G@@                                                                        CW
)@@G@@                                                                        CX
)@@G@@                                                                        CY
)@@G@@                                                                        CZ
)@@G@@                                                                        DA
)@@G@@                                                                        DB
)@@G@@                                                                        DC
)@@G@@                                                                        DD
)@@G@@                                                                        DE
)@@G@@                                                                        DF
)@@G@@                                                                        DG
)@@G@@                                                                        DH
)@@G@@                                                                        DI
)@@G@@                                                                        DJ
)@@G@@                                                                        DK
)@@G@@                                                                        DL
)@@G@@                                                                        DM
)@@G@@                                                                        DN
)@@G@@                                                                        DO
)@@G@@                                                                        DP
)@@G@@                                                                        DQ
)@@G@@                                                                        DR
)@@G@@                                                                        DS
)@@G@@                                                                        DT
)@@G@@                                                                        DU
)@@G@@                                                                        DV
)@@G@@                                                                        DW
)@@G@@                                                                        DX
)@@G@@                                                                        DY
)@@G@@                                                                        DZ
)@@G@@                  ]@@FV?@@@@@@]@@FV,@@D@@D !,+<>=/*   [@@FV2@@A@@A@@@@@@EA
)@@G@@]@@FV5@@]@@]OF    ]@@FV8@@C@@C ,+<>=/*    ]@@FV/@@[@@[(     ]@@FV_@@[@@[EB
)@@G@@)     [@@FW]@@A@@A@@@@@[[@@FW @@A@@A@@@@@#]@@FWC@@#@@#@@@   ]@@FWF@@[@@[EC
)@@G@@N     ]@@FWI@@#@@#-@@   ]@@FWL@@[@@[O     ]@@FWO@@#@@#+@@   ]@@FWR@@[@@[ED
)@@G@@P     ]@@FWU@@#@@#<@@   ]@@FWX@&Y@@@                                    EE
)@@G@@                                                                        EF
)@@G@@                                                                        EG
)@@G@@                                                                        EH
)@@G@@                                                                        EI
)@@G@@                                                                        EJ
)@@G@@                                                                        EK
)@@G@@                                                                        EL
)@@G@@                                                                        EM
)@@G@@                                                                        EN
)@@G@@                                                                        EO
)@@G@@                                                                        EP
)@@G@@                                                                        EQ
)@@G@@                                                                        ER
)@@G@@                                                                        ES
)@@G@@                                                                        ET
)@@G@@                                                                        EU
)@@G@@                                                                        EV
)@@G@@                                                                        EW
)@@G@@                                                                        EX
)@@G@@                                                                        EY
)@@G@@                                                                        EZ
)@@G@@                                                                        FA
)@@G@@                                                                        FB
)@@G@@                                                                        FC
)@@G@@                                                                        FD
)@@G@@                                                                        FE
)@@G@@                                                                        FF
)@@G@@                                                                        FG
)@@G@@                                                                        FH
)@@G@@                                                                        FI
)@@G@@                                                                        FJ
)@@G@@                                                                        FK
)@@G@@                                                                        FL
)@@G@@                                                      [@@F+'@@A@@A@@@@@DFM
)@@G@@[@@F+.@@A@@A@@@@@A]@@F<@@@G@@G@@@@@@@@@@@@@@[FN8@@[@[]@@[FNZ@@[@@#]@@F<,FN
)@@G@@@@@@@@[@@F<0@@A@@A@@@@@@]@@F<3@@@@@@]@@F<5@@Z@@@]@@F<7@>)@@@]@@F<9@@[@@@FO
)@@G@@]@@F<;@@G@@@]@@F<.@@G@@@]@@F<_@>)@@@]@@F=[@@A@@@]@@F=#@@A@@@]@@F= @@[@@@FP
)@@G@@]@@F=B@@G@@@]@@F=D@@]@@@]@@F=F@>)@@@]@@F=H@@A@@@]@@F=J@@[@@[      ]@@F=MFQ
)@@G@@[FS@@@                                                                  FR
)@@G@@                                                                        FS
)@@G@@                                                                        FT
)@@G@@                                                                        FU
)@@G@@                                                                        FV
)@@G@@                                                                        FW
)@@G@@                                                                        FX
)@@G@@                                                                        FY
)@@G@@                                                                        FZ
)@@G@@                                                                        GA
)@@G@@                                                                        GB
)@@G@@                                                                        GC
)@@G@@                                                                        GD
)@@G@@                                                                        GE
)@@G@@                                                                        GF
)@@G@@                                                                        GG
)@@G@@                                                                        GH
)@@G@@                                                                        GI
)@@G@@                                                                        GJ
)@@G@@                                                                        GK
)@@G@@                                                                        GL
)@@G@@                                                                        GM
)@@G@@                                                                        GN
)@@G@@                                                                        GO
)@@G@@                                                                        GP
)@@G@@                                                                        GQ
)@@G@@                                                                        GR
)@@G@@                                                                        GS
)@@G@@                                                                        GT
)@@G@@                                                                        GU
)@@G@@                                                                        GV
)@@G@@                                                                        GW
)@@G@@                                                                        GX
)@@G@@                                                                        GY
)@@G@@                                                                        GZ
)@@G@@                                                                        HA
)@@G@@                                                                        HB
)@@G@@                                                                        HC
)@@G@@                                                                        HD
)@@G@@                                                                        HE
)@@G@@                                                                        HF
)@@G@@                                                                        HG
)@@G@@                                                                        HH
)@@G@@                                                                        HI
)@@G@@                                                                        HJ
)@@G@@                                                                        HK
)@@G@@                                                                        HL
)@@G@@                                                                        HM
)@@G@@                                                                        HN
)@@G@@                                                                        HO
)@@G@@                                                                        HP
)@@G@@                                                                        HQ
)@@G@@                                                                        HR
)@@G@@                                                                        HS
)@@G@@                                                                        HT
)@@G@@                                                                        HU
)@@G@@                                                                        HV
)@@G@@                                                                        HW
)@@G@@                                                                        HX
)@@G@@                                                                        HY
)@@G@@                                                                        HZ
)@@G@@                                                                        IA
)@@G@@                                                                        IB
)@@G@@                                                                        IC
)@@G@@                                                                        ID
)@@G@@                                                                        IE
)@@G@@                                                                        IF
)@@G@@      [@@F08@@A@@A@@@@@@]@@F0;@@[@@['     [@@F0"@@A@@A@@@@@@]@@F1[@@ @@ IG
)@@G@@      [@@F1^@@A@@A@@@@@A[@@F1B@@A@@A@@@@@@]@@F1E@@E@@E0123456789  [@@F1IIH
)@@G@@@@A@@A@@@@@#[@@F1L@@A@@A@@@@@[]@@F1O@@[@@[)     ]@@F1R@@[@@[=     ]@@F1UII
)@@G@@@@[@@[[     ]@@F1X@@[@@[>     ]@@F1)@@[@@[]     ]@@F1<@@[@@[!     ]@@F1&IJ
)@@G@@@@[@@[^     ]@@F1(@@[@@[<     ]@@F1?@@[@@[#     [@@F1\@@A@@A@@@@@@]@@F12IK
)@@G@@[0&@@@                                                                  IL
)@@G@@                                                                        IM
)@@G@@                                                                        IN
)@@G@@                                                                        IO
)@@G@@                                                                        IP
)@@G@@                                                                        IQ
)@@G@@                                                                        IR
)@@G@@                                                                        IS
)@@G@@                                                                        IT
)@@G@@                                                                        IU
)@@G@@                                                                        IV
)@@G@@                                                                        IW
)@@G@@                                                                        IX
)@@G@@                                                                        IY
)@@G@@                                                                        IZ
)@@G@@                                                                        JA
)@@G@@                                                                        JB
)@@G@@                                                                        JC
)@@G@@                                                                        JD
)@@G@@                                                                        JE
)@@G@@                                                                        JF
)@@G@@                                                                        JG
)@@G@@                                                                        JH
)@@G@@                                                                        JI
)@@G@@                                                                        JJ
)@@G@@                                                                        JK
)@@G@@                                                                        JL
)@@G@@                                                                        JM
)@@G@@                                                                        JN
)@@G@@                                                                        JO
)@@G@@                                                                        JP
)@@G@@                                                                        JQ
)@@G@@                                                                        JR
)@@G@@                                                                        JS
)@@G@@                                                                        JT
)@@G@@                                                                        JU
)@@G@@                                                                        JV
)@@G@@                                                                        JW
)@@G@@                                                                        JX
)@@G@@                                                                        JY
)@@G@@                                                                        JZ
)@@G@@                                                                        KA
)@@G@@                                                                        KB
)@@G@@                                                                        KC
)@@G@@                                                                        KD
)@@G@@                                                                        KE
)@@G@@                                                                        KF
)@@G@@                                                                        KG
)@@G@@                                                                        KH
)@@G@@                                                                        KI
)@@G@@                                                                        KJ
)@@G@@                                                                        KK
)@@G@@                                                                        KL
)@@G@@                                                                        KM
)@@G@@                                                                        KN
)@@G@@                                                                        KO
)@@G@@                                                                        KP
)@@G@@                                                                        KQ
)@@G@@                                                                        KR
)@@G@@                                                                        KS
)@@G@@                                                                        KT
)@@G@@                                                                        KU
)@@G@@                                                                        KV
)@@G@@                                                                        KW
)@@G@@                                                                        KX
)@@G@@                                                                        KY
)@@G@@                                                                        KZ
)@@G@@                                                                        LA
)@@G@@                                                                        LB
)@@G@@                                                                        LC
)@@G@@                                                                        LD
)@@G@@                                                                        LE
)@@G@@                                                                        LF
)@@G@@                                                                        LG
)@@G@@                                                                        LH
)@@G@@                                                                        LI
)@@G@@                                                                        LJ
)@@G@@                                                                        LK
)@@G@@                                                                        LL
)@@G@@                                                                        LM
)@@G@@                                                                        LN
)@@G@@                                                                        LO
)@@G@@                                                                        LP
)@@G@@                                                                        LQ
)@@G@@                                                                        LR
)@@G@@                                                                        LS
)@@G@@                                                                        LT
)@@G@@                                                                        LU
)@@G@@                                                                        LV
)@@G@@                                                                        LW
)@@G@@                                                                        LX
)@@G@@                                                                        LY
)@@G@@                                                                        LZ
)@@G@@                                                                        MA
)@@G@@                                                                        MB
)@@G@@                                                                        MC
)@@G@@                                                                        MD
)@@G@@                                                                        ME
)@@G@@                                                                        MF
)@@G@@                                                                        MG
)@@G@@            ]@@G^>@@^@@^GOTO  ]@@G^*@@]@@]@@    ]@@G^:@@D@@D@@@C@@@@@   MH
)@@G@@]@@G^\@@G@@G@#]@@@B@@@@@[@@G^3@@A@@A@@@@@^[@@G^6@@A@@A@@@@@]]@@G^9@@A@@AMI
)@@G@@RETURN]@@G^/@@G@@G@]@@@@D@@@@@]@@G @@@ @@ ABORT ]@@G #@@G@@G@][@@@D@@@@@MJ
)@@G@@@@[F<Z@@[@[]@@[F<A@@[@@#]@@G 1@@@@@@[@@G 3@@A@@A@@@@@@]@@G 6@@@@@@]@@G 8MK
)@@G@@@>)@@@[@@G '@@A@@A]@@G /@@A@@@      [@@G _@@A@@A@@@@@@]@@GA]@@[@@[0     ML
)@@G@@]@@GA @@[@@[      ]@@GAC@@ @@       ]@@GAF@>>@@@                        MM
)@@G@@                                                                        MN
)@@G@@                                                                        MO
)@@G@@                                                                        MP
)@@G@@                                                                        MQ
)@@G@@                                                                        MR
)@@G@@                                                                        MS
)@@G@@                                                                        MT
)@@G@@                                                                        MU
)@@G@@                                                                        MV
)@@G@@                                                                        MW
)@@G@@                                                                        MX
)@@G@@                                                                        MY
)@@G@@                                                                        MZ
)@@G@@                                                                        NA
)@@G@@                                                                        NB
)@@G@@                                                                        NC
)@@G@@                                                                        ND
)@@G@@                                                                        NE
)@@G@@                                                                        NF
)@@G@@                                                                        NG
)@@G@@                                                                        NH
)@@G@@                                                                        NI
)@@G@@                                                                        NJ
)@@G@@                                                                        NK
)@@G@@                                                                        NL
)@@G@@                                                                        NM
)@@G@@                                                                        NN
)@@G@@                                                                        NO
)@@G@@                                                                        NP
)@@G@@                                                                        NQ
)@@G@@                                                                        NR
)@@G@@                                                                        NS
)@@G@@                                                                        NT
)@@G@@      ]@@GGY@@E@@E0123456789  [@@GG+@@A@@A@@@@@@@@[G +@@[@[]@@[G D@@[@@#NU
)@@G@@]@@GHJ@@@@@@[@@GHL@@A@@A@@@@@@]@@GHO@@@@@@]@@GHQ@@M@@@]@@GHS@@]@@@      NV
)@@G@@]@@GHV@@S@@@                        [@@GH-@@A@@A@@@@@@]@@GH=@@E@@E012345NW
)@@G@@6789  [@@GH*@@A@@A@@@@@^[@@GH:@@A@@A@@@@@][@@GH,@@A@@A@@@@@@]@@GH1@@Y@@@NX
)@@G@@                              ]@@GH8@@ @@       [@@GH;@@A@@A@@@@@A[@@GH"NY
)@@G@@@@A@@A@@@@@@]@@GI[@@^@@^@@@)  @@[GH@@@[@[]@@[GG$@@[@@#]@@GI,@@@@@@[@@GI0NZ
)@@G@@@@A@@A@@@@@@]@@GI3@@@@@@]@@GI5@>)@@@]@@GI7@@A@@@      ]@@GI'@@/@@@      OA
)@@G@@                                                      [@@GJA@@A@@A@@@@@@OB
)@@G@@]@@GJD@@[@@['     [@@GJG@@A@@A@@@@@@]@@GJJ@[]@@@                        OC
)@@G@@                                          ]@@GJW@@ @@       [@@GJZ@@A@@AOD
)@@G@@@@@@@A[@@GJ+@@A@@A@@@@@@@@[GIZ@@[@[]@@[GIA@@[@@#]@@GKJ@@@@@@[@@GKL@@A@@AOE
)@@G@@@@@@@@]@@GKO@@@@@@]@@GKQ@@/@@@]@@GKS@@Z@@@]@@GKU@@A@@@      ]@@GKX@@[@@@OF
)@@G@@      ]@@GK)@@A@@@      ]@@GK<@@A@@@      ]@@GK&@@@@@@[@@GK*@@A@@A@@@@@@OG
)@@G@@]@@GK:@@[@@[$     ]@@GK,@@0@@0                                          OH
)@@G@@      ]@@GK8@[?@@@                                                      OI
)@@G@@                                                      [@@GLG@@A@@A@@@@@#OJ
)@@G@@[@@GLJ@@A@@A@@@@@[]@@GLM@@[@@[@     ]@@GLP@@A@@A@@@@@[]@@GLS@@A@@A@@@=@@OK
)@@G@@]@@GLV@@A@@A@@@@@@[@@GLY@@A@@A@@@@@Y]@@GL-@@M@@M@@#K@@@@[@@@@@@@@@]@@GL&OL
)@@G@@@@#@@#@@@   @@[GK@@@[@[]@@[GJ$@@[@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ON
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@MAIN        @@=@@^@@@@ DBLDTF       @@&@@^@@@@^'OO
)@@G@@BLDCTBL     @@*@@^@@@@^*BLDDF       @@%@@^@@@@^PPINIT       @@?@@^@@@@^AOP
)@@G@@PERF        @@,@@^@@@@#WPROC        @@0@@^@@@@#QED          @@2@@^@@@@@^OQ
)@@G@@DUMMY       @@4@@^@@@@@]@@@ @ @@@@ D@@@]@ @@@@^'@@@]@ @@@@^*@@@]@ @@@@^POR
)@@G@@@@@]@ @@@@^A@@@]@ @@@@#W@@@]@ @@@@#Q@@@]@ @@@@@^@@@]@ @@@@@]^@)^@)^@)^@)OS
)@@G@@AEDIT$      D,,]FEBLDD$F      C,O ^GBLDT$F      CY&^NGCALL$WK     CY%^NGOT
)@@G@@CF$AM       CY\^NGCHANGE      CY4^NGCOMMON      CZ]^NGDBP$APS     CZ4^NGOU
)@@G@@DEBUG       C)[^NGDF$AMR      C)K^NGDF$AMW      B+W ^GDUMMY       C):^NGOV
)@@G@@ED          C4&FAFEDIT$       D0)]FEEDIT$T      HJ\GC^EDIT$WK     C)6^NGOW
)@@G@@EQUATE      F%>^OGERU$        I9J#XGFDASC       NRQ^ DGETRSV      C-H^NGOX
)@@G@@GETSET      C-M^NGGETVAR      C-R^NGIDL$        E17EDBIFWKR       C-Z^NGOY
)@@G@@IIKED       C-(^NGINFOR$      DQD^KBINPUT       C-;^NGINSERT      G,7  GOZ
)@@G@@INTRP       C+-^NGKF$AM       C+3^NGLET         C<C^NGLOCATE      C<K^NGPA
)@@G@@MAINED      C<T^NGPERFORM     C=N^NGPINIT       C=-^NGPINPUT      C==^NGPB
)@@G@@PRINTL      C=?^NGPRINTV      C=5^NGPROC        C=9^NGRDCTBL      C=.^NGPC
)@@G@@SDFI        NRS^ DSDFO        D>G^X SNO         G$5^QGSYM$AM      C&U^NGPD
)@@G@@TF$C        C&X^NGTF$CPY      C&)^NGTF$DBP      C&>^NGTF$DLT      C&*^NGPE
)@@G@@TF$IA       C&?^NGTF$IB       C&\^NGTF$MVE      C&2^NGTF$RMR      C$ ^NGPF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@PG
)@@G@@$IBANK      @@@@@6$DBANK      @]+@@5@S@[[[^@)AC1A*1^@)^@)^@)^@)^@)^@)^@)PH
)@@G@@^@)AC(^[OD[DES)EL D- CDNC*)C9PDD^C*)DDN^[@C-JCS$C(^^[DD0)C1DD- ^@1AC)CDOPI
)@@G@@^@5AC)D-DD1 ES)E[ EK)E[[@@@@[FK@@[@^@#1@C@@@@@@%K@@[@^@[$@F1@@@@@$K@@[@^PJ
)@@G@@@]1@HS@@@@[]K@@[@^@@$@KD@@@@[)@@@[@^@#O@K0@@@@[C@@@[@^@#[@O^@@@@[U@@@[@^PK
)@@G@@@GR@R @@@@[X@@@[@^@BD@<W@@@@@J@@@[@^@#V@%>@@@@@/@@@[@^@]_@,@@@@@[?@@@#@^PL
)@@G@@@A]@0_@@@@[O@@@#@^@@0@7[@@@@[R@@@[@^@D:@71@@@@@D@@@#@^@[V[[W@@@@@S@@@[@^PM
)@@G@@@E%[]7@@@@@_@@@[@^@["[H-@@@@@9@@@[@^@]1[JZ@@@@@!@@@[@^@#+[MK@@@@][@@@[@^PN
)@@G@@@#/[P2@@@@@P@@@[@^@@;[T,@@@@@M@@@[@^@@![U(@@@@@M@@@#@^@@1[VQ@@@@[I@@@[@^PO
)@@G@@@[_[WB@@@@[L@@@[@^@LJ[YA@@@@]E@@@[@^@]J[\P@@@@]B@@@[@^@[@[1=@@@@]K@@@[@^PP
)@@G@@@#=[2=@@@@]T@@@[@^@J>[6C@@@@]N@@@[@^@@M] !@@@@]Q@@@[@^@[T] _@@@@]^@@@[@^PQ
)@@G@@@[Q]BS@@@@]H@@@[@^@[O]C,@@@@[\@@@#@^@AR]E]@@@@["@@@[@^[>@]KT@@@@["@@@#@^PR
)@@G@@[[Z#5T@@^@@A@@@[@^@@V^68@@^@@V@@@[@^@#0^7N@@K@[8K@@[@^@](^68@@K@[&@@@[@^PS
)@@G@@@]L^9-@@O@[(@@@[@^@]R^;2@@O@[ @@@#@^@]L^"D@@O@[<@@@#@^@EB @U@@S@[2@@@[@^PT
)@@G@@@[>^;2@@W@@6K@@[@^@]?^.R@@W@[;K@@[@^@[F @#@@W@@@K@@[@^@## [I@@W@@=@@@[@^PU
)@@G@@[[[ ^L@@W@@=@@@#@^@[NA M@@W@@=@@@P@^@@@AA>@@)@@-@@@[@^@@[^.R@@G@@#@@@[@^PV
)@@G@@@@W^68@@G@@Y@@@[@^@ 0^7O@@C@[5@@@[@^@[=^68@@C@@G@@@B@^@#C^8W@@@@[F0@@@@ PW
)@@G@@@@VC]W@@@@[))@@^@ @U*C]7@@@@[C)@@^@ @[&CXZ@@@@[U)@@^@ @ WCZ @@@@[X)@@^@ PX
)@@G@@@]"C=-@@@@@J)@@^@ @@%C$Z@@@@@/)@@^@ @@YC*D@@@@[?)@@^@ @[RC*$@@@@[O)@@^@ PY
)@@G@@@@YC("@@@@[R)@@@@ @C/C%W@@@@@D)@@^@ @@)C3S@@@@@S)@@^@ @RVC38@@@@@_)@@]@ PZ
)@@G@@@@SDFN@@@@@9)@@^@ @@:DF:@@@@@!)@@^@ @[UDGQ@@@@][)@@@@ @@TDH0@@@@][)@@^@ QA
)@@G@@@[NDID@@@@@P)@@^@ @@]DJW@@@@@M)@@]@ @@DDJY@@@@@M)@@^@ @@LDJ$@@@@[I)@@^@ QB
)@@G@@@@PDJ8@@@@[L)@@@@ @@CDKH@@@@[L)@@]@ @]HDKP@@@@[L)@@^@ @@ADM+@@@@]E)@@]@ QC
)@@G@@@@'DM*@@@@]B)@@]@ @@ADN+@@@@]K)@@@@ @@[DN*@@@@]K)@@]@ @@HDN(@@@@]T)@@@@ QD
)@@G@@@@[DN6@@@@]T)@@]@ @@6DN7@@@@]T)@@^@ @@MDO!@@@@]T)@@A@ @@GDO_@@@@]T)@@E@ QE
)@@G@@@@UDPF@@@@]N)@@]@ @@[DP>@@@@]Q)@@]@ @@LDP&@@@@]^)@@]@ @@BDP7@@@@]H)@@]@ QF
)@@G@@@@]DP"@@@@[\)@@^@ @["DQ@@@@@[")@@@@ ]9!DR"@@^@@A)@@^@ @@BGL:@@^@@V)@@^@ QG
)@@G@@@]3GL2@@K@[&)@@^@ @ETGL:@@O@[()@@^@ @@OGW^@@O@[ )@@^@ @@EGWS@@O@[<)@@^@ QH
)@@G@@@X%GW+@@S@[2)@@@@ @@]GW^@@S@[2)@@^@ @@?GWA@@W@@=)@@@@ @JIGW2@@W@@=)@@O@ QI
)@@G@@@(EG?@@@G@@#)@@^@ @@EGL:@@G@@Y)@@^@ @[;GL5@@C@[5)@@^@ @[EGL:@@C@@G)@@C@ QJ
)@@G@@@[RGM5^@)AC1A86^@)^@)^@)^@)^@)^@)^@)D([ETOC(M^[OCDKC*,@T@]L[^@)^@)^@)^@)QK
)@@G@@^@)^@)^@) 0)^@)^@)^@)^@)ACTII       @@J@@@AECHAR$     @]B@@9AECLR$      QL
)@@G@@@]B@[HAECOLN$     @]B@[CAECOL$      @]B@@/AEDCFZ$     @]B@]SAEDECF$     QM
)@@G@@@]B@]VAEDECV$     @]B@]UAEDITR$     @]B@@OAEDITX$     @]B@@>AEDIT$      QN
)@@G@@@]B@@@AEFD1$      @]B@[OAEFD2$      @]B@[QAEMSGR$     @]B@[,AEMSG$      QO
)@@G@@@]B@[1AEOCTF$     @]B@]NAEOCTV$     @]B@] AESKIP$     @]B@[]AREACODE    QP
)@@G@@@]>@HNAREANAME    @]>@HHARTKEY      @]>@HLASCFD       @][@[1ASGERR      QQ
)@@G@@@@_@@@BEGIN       @]E@@*BLDD$F      @]Q@@@BLDT$F      @[(@@@BOPT        QR
)@@G@@@]>@[OCALL$WK     @@$@@@CHANGE      @[<@-OCHANGE$     @@S@@@CURREC      QS
)@@G@@@#/@@KC1          @]>@[7C10         @]>@]@C11         @]>@][C12         QT
)@@G@@@]>@]]C13         @]>@]#C14         @]>@]^C15         @]>@] C16         QU
)@@G@@@]>@]AC17         @]>@]BC18         @]>@]CC2          @]>@[8C3          QV
)@@G@@@]>@[9C4          @]>@['C5          @]>@[;C6          @]>@[/C7          QW
)@@G@@@]>@[.C8          @]>@["C9          @]>@[_DBP$APS     @@9@@@DEBUG$      QX
)@@G@@@@%@@@DF$AMF      @]T@@1DF$AMR      @[?@@@DF$AMW      @]T@@@DUMMY       QY
)@@G@@@]N@@@ECHAR$      @@A@@(ECLR$       @@A@@8ECOLN$      @@A@@_ECOL$       QZ
)@@G@@@@A@@?ECOPY$      @@A@[LEDAY1$      @@#@@SEDAY2$      @@#@@$EDAY3$      RA
)@@G@@@@#@@6EDCFZ$      @@A@]EEDECF$      @@A@]HEDECV$      @@A@]GEDITR$      RB
)@@G@@@@A@@HEDITX$      @@A@@REDIT$       @@A@@@EDIT$T      @@A@@ZEDIT$WK     RC
)@@G@@@@3@@[EDPKT       @]>@@@EFD1$       @@A@[^EFD2$       @@A@[AELT$        RD
)@@G@@@]+@@HEMSGR$      @@A@[YEMSG$       @@A@[-EOCTF$      @@A@] EOCTV$      RE
)@@G@@@@A@[7EPACK$      @@A@[JESKIP$      @@A@@2ETIME$      @@#@@@EXITED      RF
)@@G@@@@3@@%EXPAND      @@S@]XFATAL       @]>@HKFATALSTP    @@G@]$FDASC       RG
)@@G@@@][@[@FD$BIN      @@/@@@FRMINX      @[L@[LFRSTED      @[L@E>GETLINE     RH
)@@G@@@@V@]2GETNUM      @@P@^]GETRSV      @@0@@@GETSET      @@V@@@GETSYM      RI
)@@G@@@[)@]<GETVAR      @@!@@@GETVARX     @@M@^$GETVX11     @]:@@AIAFPKT      RJ
)@@G@@@^C@@CIBIOW       @[L@H9IBNUMWO     @#9@@+IDJ$        @@D@@@IFNDOOVF    RK
)@@G@@@^]@@AIINAME      @]*@[LINBUF       @]>@HTINDEX       @#9@@2INDXUPD     RL
)@@G@@@[U@[EINFOR       @^?@@RINPUT       @[]@@@INSERT      @[ @@@INTRP       RM
)@@G@@@@-@@@INXBUF      @[L@G<INXPKT      @^]@@CINXREL      @^]@@EIOBFENT     RN
)@@G@@@#3@@@IOERR       @@_@@PIOVFRAD     @^]@@KIPUSH       @[X@[^IUPDAD      RO
)@@G@@@^]@@MIUPDPT1     @^]@@LKAFIRST     @].@A'KEYPKT      @#=@[VKF$AMA      RP
)@@G@@@@=@D+KF$AMF      @@=@A=KF$AMR      @@=@[;LAST$D      @]>@[3LAST$I      RQ
)@@G@@@]>@[5LCINXA      @^]@@ LET         @@M@@@LN          @]>@]JLOCATE      RR
)@@G@@@[<@=FLOCATE$     @@P@@@LOCINX      @[L@FQLOCREC      @[L@IELOPT        RS
)@@G@@@]>@[YMAINNAME    @]*@@>MOPT        @]>@[ZNAMED1      @^8@@ZNAMED2      RT
)@@G@@@^U@]EOLDPSR      @^?@@JPAGENUM     @]>@HOPARSE       @[<@CKPARSE0      RU
)@@G@@@[<[V0PBLOCK      @^&@@]PERFSW      @]>@HJPINITIAL    @[2@@@PINPUT      RV
)@@G@@@[5@@@POPT        @]>@[+PRCCNT      @^X@@@PRCTBL      @^X@@[PRINT       RW
)@@G@@@]>@@APRINTL      @@Y@@@PRINTV      @[)@@@PROCMC      @["@@@PRTPO       RX
)@@G@@@]1@@HRDA         @]>@]LRDALN       @]>@]KRDCTBL      @]W@@@RECADD      RY
)@@G@@@#9@@1RECLEN      @#9@@\RECLN1      @#9@@0RECNMC      @#9@@!REMINDX     RZ
)@@G@@@#3@@#RINF$       @@@@@@RMVPKT      @^C@@@RNDADD      @#9@@5RNDIDX      SA
)@@G@@@#9@@3RNDSAV      @^]@@BROPT        @]>@[=RTRANS      @[L@[8SAVEA0      SB
)@@G@@@^?@@ISDFI        @[\@@@SDFIC       @[\@]<SDFIO       @[\@]ISDFO        SC
)@@G@@@]^@@@SDFOC       @]^@@0SDFOO       @]^@@$SELT$       @@@@@:SENDEOF     SD
)@@G@@@@3@[[SETDBP      @]4@@KSETOWNER    @]4@@JSLOTNUM     @]>@HPSTATUS      SE
)@@G@@@]>@HMSW2         @#9@@ZSYMTRS      @@6@#FSYMTWS      @@6@#(SYM$TR      SF
)@@G@@@@6@[QSYM$TW      @@6@@GTBRELW      @#9@@(TBWRSW      @#9@@:TBWRT1      SG
)@@G@@@[L@],TEMPKT      @^]@@FTF$C        @[U@@@TF$CPY      @[F@@@TF$DBP      SH
)@@G@@@[C@@]TF$DBP1     @[C@@@TF$DLT      @[X@@@TF$IA       @[I@@@TF$MVE      SI
)@@G@@@[R@@@TF$RMR      @[L@E7TF$RMR1     @[L@FNTF$SQR      @[L@#KTF$SQW      SJ
)@@G@@@[L@@@TINIT       @[L@[ETOPT        @]>@[&TSPACE      @[L@]<TT1         SK
)@@G@@@]>@]DTT2         @]>@]ETWADDR      @#9@@%USENME      @]>@[1VARSW       SL
)@@G@@@]:@[YVARXVAL     @]:@[XWRKPKT      @]>@N(ZEROS       @#9@@4@@@@@@@@@@@@SM
)@@G@@BLKSZ       @@@@I@BLKSZ1      @@@@@)BUFSZ       @@@@X8C14SZ       @@@@")SN
)@@G@@C14SZX      @@@@B4C15SZ       @@@@ZKENTRY$      @@@@@@EXTRAW      @@@@@@SO
)@@G@@FRSTD$      @@@C@@IBNUM       @@@@@EIBSECT      @@@@[@IBSIZE      @@@@W@SP
)@@G@@IDBNUM      @@@@G)IFILL       @@@@[UINDNUM      @@@@H_IOVBUFF     @@@@8@SQ
)@@G@@IOVFNUM     @@@@@]LASTD$      @@@HPDLASTI$      @@@AA=MAXBLK      @@@[ICSR
)@@G@@NUMREC      @@@@[=SLT$        @@@C@@SNFLG$      @@@@@@SNOOPY      @@@@@@SS
)@@G@@SORTCORE    @@@[X0TBNUM       @@@@@#TBSECT      @@@@[@TBSIZE      @@@@W@ST
)@@G@@TT1SZ       @@@@B4TT2SZ       @@@@I^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@*[@@@@*SDFF*@[@@@@.     @B@@@@.              KEYSW
)@@G@@  FILE  ACCESS METHOD   @[@@@@.     @]@@@@ AXR$       @]@@@@$(1).       SX
)@@G@@@[@@@@.     @C@@@@.         ****    CREATE   KEY   FILE    ****   @[@@@@SY
)@@G@@.     @E@@@@.    INPUTS:  X10 - ADDRESS OF STANDARD KEY FILE PACKET     SZ
)@@G@@@A@@@@.             X11 - RETURN ADDRESS  @[@@@@.     @]@@@@KF$AMC*.    TA
)@@G@@@E@@@@         S     X8,KPSAVE,X10           . $  SAVE REGISTERS  @B@@@@TB
)@@G@@         S     X9,KPSAVE+1,X10         .  @B@@@@         S     X11,KPSAVTC
)@@G@@E+2,X10        .  @B@@@@         DS    A0,KPSAVE+3,X10         .  @B@@@@TD
)@@G@@         DS    A2,KPSAVE+5,X10         .  @B@@@@         DS    A4,KPSAVETE
)@@G@@+7,X10         .  @B@@@@         S     R1,KPSAVE+9,X10         .  @F@@@@TF
)@@G@@         L     A0,KPINIT,X10           . $  GET INIT INDICATOR    @G@@@@TG
)@@G@@         TE,U  A0,1                    . $  SKIP IF INIT ALREADY DONE   TH
)@@G@@@G@@@@         LMJ   X8,KCFIRST              . $  PERFORM INITIALIZATIONTI
)@@G@@      @G@@@@         DL    A2,KPOLDP,X10           . $  LOAD OLD DBP & BTJ
)@@G@@LK NUM      @F@@@@         L     X9,KCBUFF               . $  GET BUFFERTK
)@@G@@ ADDRESS    @G@@@@         A     X9,KCBUFWDS             . $  ADD DISP. TL
)@@G@@INTO BUFFER       @G@@@@         DS    A2,,X9                  . $  STORTM
)@@G@@E OLD DBP & 0 IN BUFFER @H@@@@         L     A1,KCBUFWDS             . $TN
)@@G@@  GET NUMBER OF WORDS IN BUFFER     @E@@@@         A,U   A1,2           TO
)@@G@@         . $  INCREMENT       @G@@@@         TNE,U A1,KCBUFL*28         TP
)@@G@@   . $  SKIP IF BUFFER IS NOT FULL  @F@@@@         LMJ   X9,KCWBUF      TQ
)@@G@@         . $  JUMP TO WRITE BUFFER  @G@@@@         S     A1,KCBUFWDS    TR
)@@G@@         . $  STORE NUMBER OF WORDS IN BUF@G@@@@         L     A3,KCIDCNTS
)@@G@@T              . $  GET WDS SINCE LAST IND ENTRY@G@@@@         TNZ   A3 TT
)@@G@@                     . $  SKIP IF THIS ISN'T FIRST    @G@@@@         LMJTU
)@@G@@   X9,KCSTID               . $  JUMP TO CREATE INDEX ENTRY  @E@@@@      TV
)@@G@@   A,U   A3,2                    . $  INCREMENT       @G@@@@         TNETW
)@@G@@,U A3,KBLOCK*28            . $  SKIP IF BLOCK NOT COMPLETED @F@@@@      TX
)@@G@@   SZ    A3                      . $  ZERO WDS IN BLOCK     @G@@@@      TY
)@@G@@   S     A3,KCIDCNT              . $  STORE NUMBER OF WRODS IN BLK@D@@@@TZ
)@@G@@         J     KRET                    . $  RETURN    @[@@@@.     @A@@@@UA
)@@G@@.  WRITE BUFFER CONTAINING KEY DATA @A@@@@.      INPUT: X9 - RETURN ADDRUB
)@@G@@ESS   @[@@@@.     @]@@@@KCWBUF.     @G@@@@         TP    KCBPKT+3       UC
)@@G@@         . $ SKIP IF PREVIOUS I/O COMPLETE@E@@@@         ER    WAIT$    UD
)@@G@@               . $  OTHERWISE WAIT  @G@@@@         TZ,S1 KCBPKT+3       UE
)@@G@@         . $  SKIP IF LAST I/O DID NOT ERR@G@@@@         J     KCWBER   UF
)@@G@@               . $  JUMP TO PRINT ERROR MESSAGE @F@@@@         L     A3,UG
)@@G@@KCBUFF               . $  GET BUFFER ADDRESS    @F@@@@         S,H2  A3,UH
)@@G@@KCBPKT+4             . $  STORE IT IN PACKET    @E@@@@         L     A3,UI
)@@G@@KCBPKT+5             . $  GET DRUM ADDRESS@E@@@@         A,U   A3,KCBUFLUJ
)@@G@@               . $  INCREMENT IT    @F@@@@         S     A3,KCBPKT+5    UK
)@@G@@         . $  STORE IT IN PACKET    @F@@@@         L,U   A0,KCBPKT      UL
)@@G@@         . $  GET PACKET ADDRESS    @F@@@@         ER    IO$            UM
)@@G@@         . $  PERFORM ASYNC WRITE   @[@@@@.     @^@@@@.  SWITCH TO NEW BUN
)@@G@@UFFER @[@@@@.     @G@@@@         L     A3,KCBUF                . $  GET UO
)@@G@@ADDRESS OF BUFFER 1     @G@@@@         TNE   A3,KCBUFF               . $UP
)@@G@@  SKIP IF IT'S NOT CURRECT BUF@G@@@@         L     A3,KCBUF+1           UQ
)@@G@@   . $  GET ADDRESS OF SECOND BUFFER@F@@@@         S     A3,KCBUFF      UR
)@@G@@         . $  SWITCH THE BUFFERS    @G@@@@         SZ    A1             US
)@@G@@         . $  ZERO WORDS IN NEW BUFFER    @D@@@@         J     0,X9     UT
)@@G@@               . $  RETURN    @[@@@@.     @^@@@@. A WRITE ERROR OCCURREDUU
)@@G@@@[@@@@.     @C@@@@KCWBER.  L     A1,X11                  . $  SAVE@C@@@@UV
)@@G@@         L     A0,X10                  . $  SAVE@E@@@@         L,U   X10UW
)@@G@@,KCBPKT              . $  PACKET ADDRESS  @F@@@@         LMJ   X11,IOERRUX
)@@G@@               . $  PRINT ERROR MESSAGE   @D@@@@         J     0,X8     UY
)@@G@@               . $  RETURN    @[@@@@.     @G@@@@. FIRST TIME THROUGH CREUZ
)@@G@@ATE.  ASSIGN KEY FILE AND OBTAIN BUFFERS.       @[@@@@.     @]@@@@KCFIRSVA
)@@G@@T.    @F@@@@         ER    DATE$                   . $  GET DATE AND TIMVB
)@@G@@E     @E@@@@         DS    A0,KFDATE               . $  STORE IN HEADER VC
)@@G@@@E@@@@          SZ        KAFIRST           . ZERO ADD FLAG       @E@@@@VD
)@@G@@          SZ        KFMFLG            . ZERO MOD FLAG       @E@@@@      VE
)@@G@@   L     A0,KPOLDP,X10           . $  GET OLD DBP     @G@[@@         AN,VF
)@@G@@U  A0,1                    . $  LESS 1 EQUALS LOW KEY       @G@@@@      VG
)@@G@@   S     A0,KFLKEY               . $  STORE AS LOW KEY IN HEADER  @E@@@@VH
)@@G@@         LMJ   X9,KF$AMU               . $  GO ASSIGN FILE  @G@@@@      VI
)@@G@@   L     A0,LAST$D               . $  GET LAST DBANK ADDRESS      @G@@@@VJ
)@@G@@         A,U   A0,1                    . $  STARTING ADDRESS OF BUFFER1 VK
)@@G@@@G@@@@         S     A0,KCBUFF               . $  STORE AS CURRENT BUFFEVL
)@@G@@R     @G@@@@         S     A0,KCBUF                . $  STORE FOR BUFFERVM
)@@G@@ SELECTION  @G@@@@         A,U   A0,KCBUFL*28            . $  STARTING AVN
)@@G@@DDRESS OF BUFFER 2@H@@@@         S     A0,KCBUF+1              . $  STORVO
)@@G@@E IT FOR BUFFER SELECTION     @F@@@@         A,U   A0,KCBUFL*28         VP
)@@G@@   . $  LAST DBANK ADDRESS    @G@@@@         S     A0,LAST$D            VQ
)@@G@@   . $  STORE HIGH DBANK ADDR       @F@@@@         ER    MCORE$         VR
)@@G@@         . $  GET ADDITIONAL CORE   @G@@@@         L,U   A0,1           VS
)@@G@@         . $  LOAD CREATE INIT INDICATOR  @E@@@@         S     A0,KPINITVT
)@@G@@,X10           . $  STORE INIT FLAG @D@@@@         J     0,X8           VU
)@@G@@         . $  RETURN    @[@@@@.     @E@@@@.             ASSIGN  A  NEW  VV
)@@G@@KEY  FILE    OPTIONS 'UP'     @[@@@@.     @]@@@@KF$AMU.     @E@@@@      VW
)@@G@@    L,U       A0,FACPKT         . PKT FOR FACIL$      @E@@@@          ERVX
)@@G@@        FACIL$            . SEE IF ASG'ED       @E@@@@          TZ      VY
)@@G@@  FACPKT+7          . SKIP IF NOT ASG'ED  @C@@@@          J         0,X9VZ
)@@G@@              . RETURN  @G@@@@         L,U   A0,KASGUP               . $WA
)@@G@@  ADDR OF ASG STATEMENT       @E@@@@         ER    CSF$                 WB
)@@G@@   . $  ASSIGN KEY FILE @E@@@@         TN    A0                      . $WC
)@@G@@  SKIP IF ERROR   @D@@@@         J     0,X9                    . $  RETUWD
)@@G@@RN    @[@@@@.     @E@@@@.             ASSIGN  AN  OLD  KEY  FILE   OPTIOWE
)@@G@@N  'A'      @[@@@@.     @]@@@@KF$AMAS.    @G@@@@         L,U   A0,KASGA WF
)@@G@@               . $  ADDR OF ASG STATEMENT       @E@@@@         ER    CSFWG
)@@G@@$                    . $  ASSIGN KEY FILE @E@@@@         TN    A0       WH
)@@G@@               . $  SKIP IF ERROR   @D@@@@         J     0,X9           WI
)@@G@@         . $  RETURN    @G@@@@         L,U   X10,KASGA               . $WJ
)@@G@@  ADDR OF ASG STATEMENT       @E@@@@         LMJ   X11,ASGERR           WK
)@@G@@   . $  ASSIGN ERROR    @[@@@@.     @^@@@@.  READ IN HEADER       @[@@@@WL
)@@G@@.     @G@@@@KF$RHD   L,U   A0,KF$PKT               . $  ADDRESS OF I/O PWM
)@@G@@ACKET       @E@@@@         ER    IOW$                    . $  READ HEADEWN
)@@G@@R     @E@@@@         TNZ,S1 KF$PKT+3               . $  SKIP IF READ OK WO
)@@G@@@D@@@@         J     0,X9                    . $  RETURN    @G@@@@      WP
)@@G@@   L,U   X10,KF$PKT              . $  ADDRESS OF I/O PACKET       @G@@@@WQ
)@@G@@         LMJ   X11,IOERR               . $  JP TO PRINT ERROR MESSAGE   WR
)@@G@@@[@@@@.     @A@@@@.  STORE A NEW ENTRY IN KFILE INDEX @D@@@@.       INPUWS
)@@G@@TS: X9 RETURN ADDRESS      OUTPUT: A3-0   @ @@@@.               A2 OLD DWT
)@@G@@BP    @[@@@@.     @]@@@@KCSTID.     @E@@@@         L     A1,KFIWDS      WU
)@@G@@         . $  GET WDS IN INDEX@E@@@@         A,U   A1,2                 WV
)@@G@@   . $  INCREMENT       @E@@@@         S     A1,KFIWDS               . $WW
)@@G@@  STORE IT BACK   @G@@@@         L      X8,KCIBUF              . $  GET WX
)@@G@@ADDRESS OF INDEX BUFFER @E@@@@         A      X8,KCIDWD              . $WY
)@@G@@  ADD DISPLACEMENT@G@@@@         L      A3,KCIBLOCK            . $  GET WZ
)@@G@@SECTOR WHERE DATA STARTS@G@@@@         DS     A2,,X8                 . $XA
)@@G@@  STORE ENTRY IN INDEX BUFFER @G@@@@         A,U    A3,KBLOCK           XB
)@@G@@   . $  INCREMENT BY BLOCK SIZE     @G@@@@         S      A3,KCIBLOCK   XC
)@@G@@         . $  STORE NEXT DATA SECTOR      @G@@@@         L      A3,KCIDWXD
)@@G@@D              . $  GET NUMBER OF WORDS IN BUFFR@E@@@@         A,U    A3XE
)@@G@@,2                   . $  INCREMENT       @G@@@@         TNE,U  A3,KCIDLXF
)@@G@@N*28           . $  SKIP IF BUFFER NOT FULL     @G@@@@         LMJ    X8XG
)@@G@@,KCWIND              . $  WRITE OUT INDEX BUFFER      @I@@@@         S  XH
)@@G@@    A3,KCIDWD              . $  STORE NUMBER OF ENTRIES IN BUFFER       XI
)@@G@@@G@@@@         SZ     A3                     . $  ZERO KEYS SINCE LAST IXJ
)@@G@@ND ENT@D@@@@         J      0,X9                   . $  RETURN    @[@@@@XK
)@@G@@.     @B@@@@.  WRITE BUFFER CONTAINING INDEX DATA     @ @@@@.      INPUTXL
)@@G@@: X8 - RETURN     @[@@@@.     @]@@@@KCWIND.     @H@@@@         TP    KCIXM
)@@G@@PKT+3                . $  SKIP IF PREVIOUS I/O COMPLETE     @E@@@@      XN
)@@G@@   ER    WAIT$                   . $  OTHERWISE WAIT  @H@@@@         TZ,XO
)@@G@@S1 KCIPKT+3                . $  SKIP IF OK STATUS ON LAST I/O     @G@@@@XP
)@@G@@         J     KCWIER                  . $  JUMP TO PRINT ERROR MESSAGE XQ
)@@G@@@G@@@@         L     A3,KCIBUF               . $  GET INDX BUFFER ADDRESXR
)@@G@@S     @F@@@@         S,H2  A3,KCIPKT+4             . $  STORE IT IN PACKXS
)@@G@@ET    @E@@@@         L     A3,KCIPKT+5             . $  GET DRUM ADDRESSXT
)@@G@@@E@@@@         A,U   A3,KCIDLN               . $  INCREMENT IT    @F@@@@XU
)@@G@@         S     A3,KCIPKT+5             . $  STORE IT IN PACKET    @F@@@@XV
)@@G@@         L,U   A0,KCIPKT               . $  GET PACKET ADDRESS    @F@@@@XW
)@@G@@         ER    IO$                     . $  PERFORM ASYNC WRITE   @[@@@@XX
)@@G@@.     @^@@@@. SWITCH INDEX BUFFERS  @[@@@@.     @G@@@@         L,U   A3,XY
)@@G@@KCIDX1               . $  GET ADDRESS OF BUFFER 1     @G@@@@         TNEXZ
)@@G@@   A3,KCIBUF               . $  SKIP IF IT'S NOT CURRENT BUF@G@@@@      YA
)@@G@@   L,U   A3,KCIDX2               . $  GET ADDRESS OF BUFFER 2     @F@@@@YB
)@@G@@         S     A3,KCIBUF               . $  STORE AS NEW BUFFER   @G@@@@YC
)@@G@@         SZ    A3                      . $  ZERO WDS IN CURRENT BUFFER  YD
)@@G@@@D@@@@         J     0,X8                    . $  RETURN    @[@@@@.     YE
)@@G@@@ @@@@.  A WRITE ERROR OCCURRED     @[@@@@.     @E@@@@KCWIER   L,U   X10YF
)@@G@@,KCBPKT              . $  PACKET ADDRESS  @E@@@@         LMJ   X11,IOERRYG
)@@G@@               . $  GO PRINT MESSAGE@[@@@@.     @A@@@@.       ****    RAYH
)@@G@@NDOM  READ    ****@[@@@@.     @]@@@@KF$AMR*.    @E@@@@         S     X8,YI
)@@G@@KPSAVE,X10           . $  SAVE REGISTERS  @B@@@@         S     X9,KPSAVEYJ
)@@G@@+1,X10         .  @B@@@@         S     X11,KPSAVE+2,X10        .  @B@@@@YK
)@@G@@         DS    A0,KPSAVE+3,X10         .  @B@@@@         DS    A2,KPSAVEYL
)@@G@@+5,X10         .  @B@@@@         DS    A4,KPSAVE+7,X10         .  @B@@@@YM
)@@G@@         S     R1,KPSAVE+9,X10         .  @G@@@@         TNZ   KPINIT,X1YN
)@@G@@0              . $  SKIP IF PACKET ALREADY INIT @G@@@@         J     KRFYO
)@@G@@IRST                 . $  GO PERFORM INITIALIZATION   @[@@@@.     @ @@@@YP
)@@G@@. CHECK GROSS RANGE OF KEY    @[@@@@.     @]@@@@KFR0.       @G@@@@      YQ
)@@G@@   SZ    KPSTATUS,X10            . $  ZERO STATUS INDICATOR       @D@[@@YR
)@@G@@          L         A0,KFLKEY         . LOW KEY - 1   @C@@@[          L YS
)@@G@@        A0,KFLKEY         . LOW KEY @E@@@@          AN        A0,3,X10  YT
)@@G@@        . SUBTRACT THIS KEY   @E@@@@          JZ        A0,KFR02        YU
)@@G@@  . JUMP IF EQUAL       @E@@@@          JC        KRNFND            . NOYV
)@@G@@T WITHIN RANGE    @C@@@@          L         A0,KFHKEY         . HIGH KEYYW
)@@G@@@E@@@@          AN        A0,3,X10          . SUBTRACT THIS KEY   @E@@@@YX
)@@G@@          JZ        A0,KFR02          . JUMP IF EQUAL       @E@@@@      YY
)@@G@@    JNC       KRNFND            . NOT WITHIN RANGE    @]@@@@KFR02.      YZ
)@@G@@@[@@@@.     @D@@@@. CHECK WHETHER KEY IS THE SAME KEY OR THE NEXT KEY   ZA
)@@G@@@B@@@@.  AS LAST KEY FOUND FOR THIS ACTIVITY    @[@@@@.     @G@@@@      ZB
)@@G@@   L     A2,KPOLAST,X10          . $  GET LAST FOUND OLD POINTER  @I@@@@ZC
)@@G@@         TNZ   A2                      . $  SKIP IF LAST OLD POINTER NOTZD
)@@G@@ ZERO       @E@@@@         J     KFR04                   . $  CHECK INDEZE
)@@G@@X     @G@@@@         TNE   A2,KPOLDP,X10           . $  SKIP IF NOT SAMEZF
)@@G@@ POINTER    @D@@@@         J     KRET                    . $  RETURN    ZG
)@@G@@@G@@@@         DL    A2,KPBLK,X10            . $  LOAD PREVIOUS BLOCK ANZH
)@@G@@D DISP@G@@@@         A,U   A3,2                    . $  INCREMENT DISPLAZI
)@@G@@CEMENT      @G@@@@         TNE,U A3,28*KBLOCK            . $  SKIP IF NOZJ
)@@G@@T END OF BLOCK    @E@@@@         J     KFR04                   . $  SEARZK
)@@G@@CH INDEX    @F@@@@         A     A2,A3                   . $  LOCATION OZL
)@@G@@F NEXT KEY  @E@@@@         DL    A4,,A2                  . $  GET NEXT KZM
)@@G@@EY    @G@@@@         TE    A4,KPOLDP,X10           . $  SKIP IF NEXT KEYZN
)@@G@@ = OLD DBP  @E@@@@         J     KFR04                   . $  GO SEARCH ZO
)@@G@@INDEX @F@@@@         S     A5,KPNEWP,X10           . $  STORE NEW POINTEZP
)@@G@@R     @G@@@@         DS    A4,KPOLAST,X10          . $  STORE AS LAST POZQ
)@@G@@INTER FOUND @G@@@@         S     A3,KPDISP,X10           . $  STORE NEW ZR
)@@G@@DISPLACEMENT      @D@@@@         J     KRET                    . $  RETUZS
)@@G@@RN    @[@@@@.     @ @@@@. SEARCH THE KEY-FILE INDEX   @[@@@@.     @]@@@@ZT
)@@G@@KFR04.      @G@@@@         L     A2,KRINDX               . $  GET LOCATIZU
)@@G@@ON OF INDEX       @G@@@@         L     A3,KFIWDS               . $  GET ZV
)@@G@@NUMBER OF WDS IN IDX    @G@@@@         LMJ   X9,KBIN                 . $ZW
)@@G@@  PERFORM BINARY SEARCH       @G@@@@         L     A1,A0                ZX
)@@G@@   . $  LOAD ADDRESS OF INDEX ENTRY @G@@@@         S     A0,KPTIND,X10  ZY
)@@G@@         . $  STORE TEMPORARILY IN PACKET @[@@@@.     @G@@@@. KEY MAY BEZZ
)@@G@@ IN BLOCK INDICATED BY INDEX ENTRY AT LOCATION IN A1.       @F@@@@.     AA
)@@G@@FIRST GAIN ACCESS TO THIS BLOCK.  IF BLOCK IS NOT IN CORE   @G@@@@.     AB
)@@G@@DETERMINE WHICH BLOCK TO SWAP OUT. IF BLOCK TO BE SWAPPED HAS     @G@@@@AC
)@@G@@.     BEEN MODIFIED IT MUST BE WRITTEN BEFORE IT CAN BE REFILLED.       AD
)@@G@@@[@@@@.     @G@@@@         TS    KRTCELL                 . $  GAIN EXCLUAE
)@@G@@SIVE USE OF TABLES@G@@@@         L,S2  A2,1,A1                 . $  GET AF
)@@G@@BLOCK FIELD OF INDEX    @F@@@@         TNE,U A2,077                  . $AG
)@@G@@  SKIP IF IN BUFFER     @G@@@@         LMJ   X9,KRFINDB              . $AH
)@@G@@  JP TO FIND A BUFFER FOR BLOC@G@@@@         TP    1,A1                 AI
)@@G@@   . $  SKIP IF I/O NOT IN PROGRESS @F@@@@         J     KFR6           AJ
)@@G@@         . $  JP  I/O IN PROGRESS   @F@@@@KFR3     L,S1  A5,1,A1        AK
)@@G@@         . $  GET NUMBER OF USERS   @H@@@@         TE    A1,KPIND,X10   AL
)@@G@@         . $ SKIP INC IF SAME BLOCK AS BEFORE   @E@@@@         A,U   A5,AM
)@@G@@1                    . $  INCREMENT IT    @E@@@@         S,S1  A5,1,A1  AN
)@@G@@               . $  STORE IT BACK   @E@@@@          L,S2      A2,1,A1   AO
)@@G@@        . $ BLOCK NUMBER      @F@@@@          S,H2      A2,KLSHIFT      AP
)@@G@@  . $ STORE IN LEFT SHIFT     @F@@@@          S,H2      A2,KRSHIFT      AQ
)@@G@@  . $ STORE IN RIGHT SHIFT    @F@@@@          L         A3,KRBUSE       AR
)@@G@@  . $ LOAD BUFFER USE WORD    @E@@@@          EX        KLSHIFT         AS
)@@G@@  . $ SHIFT IT LEFT     @E@@@@          LSSL      A3,1              . $ AT
)@@G@@SHIFT ONE BIT OFF @D@@@@          L,U       A2,1              . $ BIT 0 AU
)@@G@@= 1   @E@@@@          DSL       A2,1              . $ SHIFT INTO A3     AV
)@@G@@@E@@@@          EX        KRSHIFT           . $ UNSHIFT USE WORD  @E@@@@AW
)@@G@@          S         A3,KRBUSE         . $ STORE IT BACK     @E@@@@      AX
)@@G@@   C$TS  KRTCELL                 . $  CLEAR TEST & SET@[@@@@.     @G@@@@AY
)@@G@@. BLOCK CONTAINING KEYS MAY NOW BE ACCESSED.  PERFORM BINARY SEARCH ON  AZ
)@@G@@@#@@@@.    THE BLOCK    @[@@@@.     @]@@@@KFR4.       @E@@@@         L,SBA
)@@G@@2  A2,1,A1                 . $  GET BLOCK NUMBER@F@@@@         S     A2,BB
)@@G@@KPTBLKNO,X10         . $  STORE BLOCK NUMBER    @G@@@@         MSI,U A2,BC
)@@G@@28*KBLOCK            . $  CALCULATE DISP IN BUFFER    @H@@@@         A  BD
)@@G@@   A2,KRBUFF               . $  ADD STARTING ADDRESS OF BUFFER    @H@@@@BE
)@@G@@         S     A2,KPTBLOCK,X10         . $  STORE START OF BLOCK IN WKSPBF
)@@G@@C     @E@@@@         L,U   A3,28*KBLOCK            . $  LENGTH OF BUFFERBG
)@@G@@@E@@@@         LMJ   X9,KBIN                 . $  SEARCH BLOCK    @G@@@@BH
)@@G@@         TE    A2,KPOLDP,X10           . $  SKIP IF FIND OCCURRED       BI
)@@G@@@E@@@@         J     KRNFND                  . $  JP IF NO FIND   @[@@@@BJ
)@@G@@.     @A@@@@. OLD DBP WAS FOUND IN KEY FILE     @[@@@@.     @G@@@@      BK
)@@G@@   S     A3,KPNEWP,X10           . $  STORE NEW DBP IN PACKET     @F@@@@BL
)@@G@@         DS    A2,KPOLAST,X10          . $  STORE AS LAST FOUND   @E@@@@BM
)@@G@@         L     A4,KPTBLKNO,X10         . $  GET BLOCK NUMBER@G@@@@      BN
)@@G@@   S     A4,KPBLKNO,X10          . $  STORE AS LAST BLOCK NUMBER  @E@@@@BO
)@@G@@         L     A4,KPTBLOCK,X10         . $  GET BLOCK NUMBER@F@@@@      BP
)@@G@@   S     A4,KPBLK,X10            . $  STORE AS LAST BLOCK   @G@@@@      BQ
)@@G@@   AN    A0,KPTBLOCK,X10         . $  CALCULATE DISP IN BLOCK     @F@@@@BR
)@@G@@         S     A0,KPDISP,X10           . $  SOTRE IN USER PACKET  @G@@@@BS
)@@G@@         L     A4,KPTIND,X10           . $  LOAD ADDRESS OF INDEX ENTRY BT
)@@G@@@G@@@@         TNE   A4,KPIND,X10            . $  SKIP IF OLD INDEX .NE.BU
)@@G@@ NEW  @D@@@@         J     KRET                    . $  RETURN    @G@@@@BV
)@@G@@         TNZ   KPIND,X10               . $  SKIP IF OLD IND ADDR NOT 0  BW
)@@G@@@E@@@@         J     KFR5                    . $  JP TO CONTINUE  @F@@@@BX
)@@G@@         TS    KRTCELL                 . $  LOCK PGTBL AND IND    @G@@@@BY
)@@G@@         L     A3,KPIND,X10            . $  LOAD OLD INDEX LOCATION     BZ
)@@G@@@G@@@@         L,S1  A1,1,A3                 . $  GET NUMBER OF USERS FOCA
)@@G@@R IDX @E@@@@         AN,U  A1,1                    . $  DECREMENT IT    CB
)@@G@@@E@@@@         S,S1  A1,1,A3                 . $  STORE IT BACK   @G@@@@CC
)@@G@@         C$TS  KRTCELL                 . $  CLEAR LOCK ON PGTBL & IND   CD
)@@G@@@H@@@@KFR5     S     A4,KPIND,X10            . $  STORE A NEW LAST IND LCE
)@@G@@OCATION     @[@@@@.     @B@@@@. RESTORE REGISTERS AND RETURN TO USER    CF
)@@G@@@[@@@@.     @]@@@@KRET.       @F@@@@         L     X8,KPSAVE,X10        CG
)@@G@@   . $  RESTORE REGISTERS     @A@@@@         L     X9,KPSAVE+1,X10      CH
)@@G@@@A@@@@         L     X11,KPSAVE+2,X10     @A@@@@         DL    A0,KPSAVECI
)@@G@@+3,X10      @A@@@@         DL    A2,KPSAVE+5,X10      @A@@@@         DL CJ
)@@G@@   A4,KPSAVE+7,X10      @D@@@@         L     R1,KPSAVE+9,X10         . $CK
)@@G@@  RETURN    @^@@@@         J     0,X11    @[@@@@.     @^@@@@. KEY WAS NOCL
)@@G@@T FOUND     @[@@@@.     @]@@@@KRNFND.     @G@@@@         L,U   A2,1     CM
)@@G@@               . $  LOAD STATUS INDICATOR       @E@@@@         S     A2,CN
)@@G@@KPSTATUS,X10         . $  STORE IN PACKET @H@@@@         L     A3,KPTINDCO
)@@G@@,X10           . $  LOAD LOCATION OF THIS INDEX ENT   @I@@@@         TNECP
)@@G@@   A3,KPIND,X10            . $  SKIP IF A DIFFERENT BLOCK THAN LAST     CQ
)@@G@@@D@@@@         J     KRET                    . $  RETURN    @F@@@@      CR
)@@G@@   TS    KRTCELL                 . $  LOCK PAGETBL AND IDX  @F@@@@      CS
)@@G@@   L,S1  A4,1,A3                 . $  GET NUMBER OF USERS   @E@@@@      CT
)@@G@@   AN,U  A4,1                    . $  DECREMENT IT    @G@@@@         S,SCU
)@@G@@1  A4,1,A3                 . $  STORE IT BACK IN INDEX      @E@@@@      CV
)@@G@@   C$TS  KRTCELL                 . $  FREE LOCK       @D@@@@         J  CW
)@@G@@   KRET                    . $  RETURN    @[@@@@.     @B@@@@. I/O IN PROCX
)@@G@@GRESS. QUEUE UP AND WAIT.     @[@@@@.     @]@@@@KFR6.       @E@@@@      CY
)@@G@@    C$TS      KRTCELL           . $  CLEAR LOCK       @G@@@@         TS CZ
)@@G@@   KRPTBLTS,A2             . $  USE TEST AND SET TO QUEUE UP@G@@@@      DA
)@@G@@   C$TS  KRPTBLTS,A2             . $  DEQUEUE NEXT ACTIVITY       @E@@@@DB
)@@G@@          TS        KRTCELL           . $ LOCK TABLES       @D@@@@      DC
)@@G@@   J     KFR3                    . $  CONTINUE  @[@@@@.     @C@@@@. FINDDD
)@@G@@ A BUFFER AND PREPARE TO READ BLOCK.      @^@@@@.     INPUT: X9 - RETURNDE
)@@G@@@[@@@@.     @]@@@@KRFINDB.    @F@@@@         L     A2,KRBUSE            DF
)@@G@@   . $  LOAD BUFFER USE WORD  @G@@@@         TP    A2                   DG
)@@G@@   . $  SKIP IF BUFFER ZERO IS EMPTY@G@@@@         J     KRFIND1        DH
)@@G@@         . $  BUFFER ZERO NOT AVAIL       @D@@@@         SZ    A0       DI
)@@G@@               . $  SELECT 0  @C@@@@         OR    A2,KSETB35           DJ
)@@G@@   . $      @G@@@@         S     A3,KRBUSE               . $  STORE BUFFDK
)@@G@@ER CNTL WORD      @D@@@@         J     KRFIND2                 . $  CONTDL
)@@G@@INUE  @]@@@@KRFIND1.    @G@@@@         LSC   A2,KRBUSE               . $DM
)@@G@@  FIND FIRST AVAILABLE BUFFER @E@@@@         L     A0,A3                DN
)@@G@@   . $  SHIFT COUNT     @E@@@@         A,U   A0,1                    . $DO
)@@G@@  BUFFER TO TRY   @G@@@@         S,H2  A3,KRSHIFT              . $  STORDP
)@@G@@E COUNT IN UNSHIFT INSTR@G@@@@         TG,U  A0,36                   . $DQ
)@@G@@  SKIP IF BUFFER NUM < 36     @G@@@@         J     KRFIND3              DR
)@@G@@  . $  MAKE ALL BUFFERS APPEAR AVAIL@G@@@@         OR    A2,KSETB34     DS
)@@G@@         . $  SET BIT 34 IN CNTL WD       @E@@@@         EX    KRSHIFT  DT
)@@G@@               . $  UNSHIFT USE WORD@E@@@@         S     A3,KRBUSE      DU
)@@G@@         . $  STORE IT BACK   @[@@@@.     @E@@@@.  LEAST RECENTLY USED SDV
)@@G@@AYS CHECK BUFFER AT BLOCK IN A0.    @[@@@@.     @]@@@@KRFIND2.    @H@@@@DW
)@@G@@         L,H2  A3,KRPTBL,A0            . $  LOAD ADDR OF INDEX ENT FOR BDX
)@@G@@LOCK  @E@@@@         TZ,S1 1,A3                    . $  SKIP IF NO USERSDY
)@@G@@@E@@@@         J     KRFIND1                 . $  BLOCK NOT AVAIL @G@@@@DZ
)@@G@@         L,U   A4,077                  . $  LOAD BLOCK OUT INDICATOR    EA
)@@G@@@G@@@@         S,S2  A4,1,A3                 . $  STORE IT IN INDX CNTL EB
)@@G@@WD    @G@@@@         L,U   A4,1                    . $  LOAD MODIFIED INEC
)@@G@@DICATOR     @G@@@@         TNE,H1 A4,KRPTBL,A0           . $  SKIP IF BLED
)@@G@@OCK NOT MODIFIED  @G@@@@         J     KRMOD                   . $  GO PEE
)@@G@@ERFORM BLOCK WRITE      @G@@@@         S     A1,KRPTBL,A0            . $EF
)@@G@@  STORE ADDRESS OF IDX ENT IN @E@@@@                                    EG
)@@G@@   .    PAGE TABLE      @H@@@@         S,S2  A0,1,A1                 . $EH
)@@G@@  STORE BLOCK NUMBER IN IDX ENT     @F@@@@         L,U   A4,040         EI
)@@G@@         . $  LOAD I/O INDICATOR    @H@@@@         S,S1  A4,1,A1        EJ
)@@G@@         . $  SET I/O IN PROGRESS IN IDX ENT    @H@@@@         TS    KRPEK
)@@G@@TBLTS,A0             . $  TEST $ SET BUFFER SEGMENT LOCK    @G@@@@      EL
)@@G@@   C$TS  KRTCELL                 . $  RELEASE PGTBL AND INDEX     @H@@@@EM
)@@G@@         MSI,U A0,KBLOCK*28            . $  COMPUTE LOC OF BUFFER SEGMENEN
)@@G@@T     @F@@@@         A     A0,KRBUFF               . $  ADD START OF BUFEO
)@@G@@FER   @E@@@@         S,H2  A0,KPPKT+4,X10          . $  STORE IN PACKET EP
)@@G@@@E@@@@KRFIND22 L     A0,1,A1                 . $  LOAD IDX CNTL WD@F@@@@EQ
)@@G@@         S     A0,KPPKT+5,X10          . $  STORE IN I/O PACKET   @E@@@@ER
)@@G@@         SZ,T1 KPPKT+5,X10             . $  ZERO FIRST THIRD@G@@@@      ES
)@@G@@   L,U   A0,02000                . $  LOAD FUNCTION CODE FOR READ @E@@@@ET
)@@G@@         S,H1  A0,KPPKT+3,X10          . $  STORE IN PACKET @G@@@@      EU
)@@G@@   L     A0,X10                  . $  LOAD ADDRESS OF USER PACKET @G@@@@EV
)@@G@@         A,U   A0,KPPKT                . $  ADD DISPLACEMENT TO I/O PKT EW
)@@G@@@]@@@@ J XXXXXX   @]@@@@ S X8,S8    @]@@@@ S X9,S9    @]@@@@ S X10,S10  EX
)@@G@@@]@@@@ S X11,S11  @]@@@@ DS A0,S0   @]@@@@ DS A2,SS2  @]@@@@ DS A4,SS4  EY
)@@G@@@^@@@@ L,H2     A1,4,A0       @]@@@@ S A1,XBUF  @]@@@@ L A1,5,A0  @]@@@@EZ
)@@G@@ S A1,XSECT @]@@@@ E$DIT PKT  @#@@@@ E$OCTF 10,XSECT  @]@@@@ E$SKIP 2   FA
)@@G@@@#@@@@ E$OCTF 8,XBUF    @]@@@@ E$DITX     @]@@@@ L,U A0,LINE@]@@@@ ER PRFB
)@@G@@NTA$  @]@@@@ L X8,S8    @]@@@@ L X9,S9    @]@@@@ L X10,S10  @]@@@@ L X11FC
)@@G@@,S11  @]@@@@ DL A0,S0   @]@@@@ DL A2,SS2  @]@@@@ DL A4,SS4  @]@@@@XXXXXXFD
)@@G@@.     @G@@@@         ER    IOW$                    . $  READ BLOCK INTO FE
)@@G@@BUFFER      @G@@@@         TS    KRTCELL                 . $  GET CONTROFF
)@@G@@L OF PAGE TABLE   @F@@@@         L,S2  A0,1,A1                 . $  GET FG
)@@G@@SEGMENT NUMBER    @H@@@@         C$TS  KRPTBLTS,A0             . $  CLEAFH
)@@G@@R TEST AND SET ON SEGMENT     @E@@@@         SZ,S1 1,A1                 FI
)@@G@@   . $  ZERO USERS      @D@@@@         J     0,X9                    . $FJ
)@@G@@  RETURN    @[@@@@.     @F@@@@. CAN NOT FIND A FREE BUFFER. MAKE ALL BUFFK
)@@G@@FERS APPEAR AVAILABLE   @^@@@@.     AND RECHECK       @[@@@@.     @]@@@@FL
)@@G@@KRFIND3.    @G@@@@         SZ    KRBUSE                  . $  ZERO BUFFEFM
)@@G@@R CNTL WORD       @G@@@@         J     KRFINDB                 . $  CHECFN
)@@G@@K ALL BUFFER SEGMENTS   @[@@@@.     @G@@@@. BLOCK HAS BEEN MODIFED AND MFO
)@@G@@UST BE WRITTEN OUT BEFORE IT CAN BE       @#@@@@.    REFILLED.    @[@@@@FP
)@@G@@.     @]@@@@KRMOD.      @F@@@@         L     A2,A0                   . $FQ
)@@G@@  LOAD BLOCK NUMBER     @G@@@@         MSI,U A2,KBLOCK*28            . $FR
)@@G@@  COMPUTE DISP TO BLOCK       @F@@@@         A     A2,KRBUFF            FS
)@@G@@   . $  LOCATION OF BLOCK     @E@@@@         S,H2  A2,KPPKT+4,X10       FT
)@@G@@   . $  STORE IN PACKET @G@@@@         L,U   A2,01000                . $FU
)@@G@@  FUNCTION CODE OF WRITE      @E@@@@         S,H1  A2,KPPKT+3,X10       FV
)@@G@@   . $  STORE IN PACKET @H@@@@         L     A2,1,A3                 . $FW
)@@G@@  GET ADDRESS OF SECTOR ON DISC     @G@@@@         S     A2,KPPKT+5,X10 FX
)@@G@@         . $  STORE DRUM ADDR IN PICT     @G@@@@         SZ,T1 KPPKT+5,XFY
)@@G@@10             . $  ZERO MISC BITS IN PKT       @E@@@@         L,U   A2,FZ
)@@G@@040                  . $  I/O INDICATOR   @G@@@@         S,S1  A2,1,A1  GA
)@@G@@               . $  STORE I/O IN PROGRESS       @G@@@@         S,S2  A0,GB
)@@G@@1,A1                 . $  STORE BLOCK NUMBER IN INDEX @G@@@@         S,HGC
)@@G@@2  A1,KRPTBL,A0            . $  STORE ADDRESS OF IDX ENT IN @E@@@@      GD
)@@G@@                                 .    PAGE TABLE      @G@@@@         TS GE
)@@G@@   KRPTBLTS,A0             . $  TEST & SET SEGMENT LOCK     @F@@@@      GF
)@@G@@   C$TS  KRTCELL                 . $  CLEAR LOCK ON PGTBL   @F@@@@      GG
)@@G@@   L     A0,X10                  . $  ADDR OF USER PACKET   @G@@@@      GH
)@@G@@   A,U   A0,KPPKT                . $  ADDRESS OF I/O PACKET       @F@@@@GI
)@@G@@         ER    IOW$                    . $  WRITE BLOCK BACK OUT  @F@@@@GJ
)@@G@@         TNZ,S1 KPPKT+3,X10            . $  SKIP IF I/O ERROR     @D@@@@GK
)@@G@@         J     KRFIND22                . $  CONTINUE  @G@@@@         A,UGL
)@@G@@   X10,KPPKT               . $  ADDRESS OF I/O PACKET       @F@@@@      GM
)@@G@@   LMJ   X11,IOERR               . $  PRINT ERROR MESSAGE   @[@@@@.     GN
)@@G@@@A@@@@. INITIALIZE PACKET FOR RANDOM READ @[@@@@.     @]@@@@KRFIRST.    GO
)@@G@@@C@@@@          TS        KRFIRSTS          . $  CHECK@G@@@@         TNZGP
)@@G@@   KRFTTF                  . $  SKIP IF KF$AMR ALREADY INIT @F@@@@      GQ
)@@G@@   LMJ   X8,KRFTT                 . $  INITIALIZE KF$AMR    @C@@@@      GR
)@@G@@    C$TS      KRFIRSTS          . $  CLEAR@H@@@@         L,U   A0,2     GS
)@@G@@               . $  LOAD INIT INDICATOR FOR PACKET    @G@@@@         S  GT
)@@G@@   A0,KPINIT,X10           . $  STORE INIT FLAG IN PACKET   @G@@@@      GU
)@@G@@   ER    TSQRG$                  . $  REGISTER TEST & SET QUEUING @G@@@@GV
)@@G@@         SZ    KPIND,X10               . $  ZERO LAST IND LOCATION      GW
)@@G@@@G@@@@         SZ    KPOLAST,X10             . $  ZERO LAST OLD POINTER GX
)@@G@@      @G@@@@         DL    A4,KRBPKT               . $  COPY PACKET INTOGY
)@@G@@ WKSPC      @ @@@@         DS    A4,KPPKT,X10   @ @@@@         DL    A4,GZ
)@@G@@KRBPKT+2    @A@@@@         DS    A4,KPPKT+2,X10       @ @@@@         DL HA
)@@G@@   A4,KRBPKT+4    @A@@@@         DS    A4,KPPKT+4,X10       @F@@@@      HB
)@@G@@   J     KFR0                    . $  CONTINUE PROCESSING   @[@@@@.     HC
)@@G@@@A@@@@.   FIRST TIME THROUGH RANDOM READ  @ @@@@.      INPUT: X8 - RETURHD
)@@G@@N     @[@@@@.     @]@@@@KRFTT.      @G@@@@         S     X10,KRFTTF     HE
)@@G@@         . $  NON ZERO VALUE TO FLAG      @E@@@@         LMJ   X9,KF$AMAHF
)@@G@@S              . $  GO ASSIGN FILE  @E@@@@         LMJ   X9,KF$RHD      HG
)@@G@@         . $  READ IN HEADER  @G@@@@         L     A0,LAST$D            HH
)@@G@@   . $  GET LAST D-BANK ADDRESS     @G@@@@         A,U   A0,1           HI
)@@G@@         . $  FIRST ADDRESS OF INDEX      @D@@@@         S     A0,KRINDXHJ
)@@G@@               . $  STORE IT  @F@@@@         S,H2  A0,KRIPKT+4          HK
)@@G@@   . $  STORE IN I/O PACKET   @G@@@@         A     A0,KFIWDS            HL
)@@G@@   . $ COMPUTE BUFFER ADDRESS       @G@@@@         S     A0,KRBUFF      HM
)@@G@@         . $  STORE ADDRESS OF BUFFER     @F@@@@         A,U   A0,KBLOCKHN
)@@G@@*28*36         . $  ADD SIZE OF BUFFER    @G@@@@         S     A0,LAST$DHO
)@@G@@               . $  STORE HIGHEST D-BANK ADDRESS@G@@@@         ER    MCOHP
)@@G@@RE$                  . $  GET ADDITIONAL STORAGE      @E@@@@         L  HQ
)@@G@@   A1,KFIWDS               . $  SIZE OF INDEX   @E@@@@         S,H1  A1,HR
)@@G@@KRIPKT+4             . $  STORE IN PACKET @G@@@@         L,U   A0,KRIPKTHS
)@@G@@               . $  LOAD ADDRESS OF PACKET      @E@@@@         ER    IOWHT
)@@G@@$                    . $  READ INDEX      @E@@@@         TZ,S1 KRIPKT+3 HU
)@@G@@               . $  SKIP IF I/O OK  @F@@@@         J     KRIERR         HV
)@@G@@         . $  I/O ERROR OCCURRED    @C@@@@         SZ,H1 KRINDX         HW
)@@G@@         . $  ZERO@D@@@@         J     0,X8                    . $  RETUHX
)@@G@@RN    @[@@@@.     @C@@@@. AN I/O ERROR OCCURRED READING THE INDEX       HY
)@@G@@@[@@@@.     @]@@@@KRIERR.     @G@@@@         L,U   X10,KRIPKT           HZ
)@@G@@   . $  LOAD ADDRESS OF PACKET      @F@@@@         LMJ   X11,IOERR      IA
)@@G@@         . $  PRINT ERROR MESSAGE   @[@@@@.     @^@@@@.  BINARY SEARCH. IB
)@@G@@      @A@@@@.     EACH ENTRY IS TWO WORDS LONG. @#@@@@.     INPUTS:     IC
)@@G@@@ @@@@.             X9 - RETURN     @B@@@@.             X10 - POINTER TOID
)@@G@@ PACKET     @C@@@@.             A2 - START OF BLOCK TO BE SEARCHED@D@@@@IE
)@@G@@.             A3 - LENGTH OF BLOCK TO BE SEARCHED     @C@@@@.     OUTPUTIF
)@@G@@: A2 - OLD DBP <= SEARCH ARGUMENT   @E@@@@.             A3 - EITHER NEW IG
)@@G@@DBP OR CONTROL WORD OF INDEX  @A@@@@.             A0 - LOCATION OF FIND IH
)@@G@@@E@@@@.     NOTE: SEARCH ARGUMENT IS AT  KPOLDP WITHIN THE PACKET @[@@@@II
)@@G@@.     @]@@@@KBIN.       @E@@@@         SZ    A4                      . $IJ
)@@G@@  LOW VALUE       @E@@@@         SSL   A3,1                    . $  HIGHIK
)@@G@@ VALUE      @B@@@@         AN,U  A3,1                    .  @C@@@@      IL
)@@G@@   SZ    A1                      . $  ZERO@E@@@@KBIN2    A     A1,A4    IM
)@@G@@               . $  ADD LOW VALUE   @E@@@@         A     A1,A3          IN
)@@G@@         . $  ADD HIGH VALUE  @G@@@@         SSL   A1,1                 IO
)@@G@@   . $  DIVIDE BY 2 GIVING ENTRY NO.@E@@@@         L     A0,A1          IP
)@@G@@         . $  ENTRY NUMBER    @E@@@@         LSSL  A0,1                 IQ
)@@G@@   . $  ENTRY NUMBER * 2@G@@@@         A     A0,A2                   . $IR
)@@G@@  ADD START OF BLOCK TO SEARCH@G@@@@         TNE   A4,A3                IS
)@@G@@   . $  SKIP IF LOVAL .NE. HIVAL    @E@@@@         J     KBFOUND        IT
)@@G@@         . $  FOUND ENTRY     @F@@@@         L     A5,,A0               IU
)@@G@@   . $  GET ENTRY AT PROBE    @D@@@@          ANA       A5,KPOLDP,X10   IV
)@@G@@  . TEST GREATER  @C@@@@          JZ        A5,KBFOUND        . EQUAL   IW
)@@G@@@C@@@@          JC        KBLESS            . LESS    @E@@@@         L  IX
)@@G@@   A4,A1                   . $  LOVAL = MIDVAL  @F@@@@         L,U   A1,IY
)@@G@@1                    . $  ADD 1 FOR ROUND UP    @D@@@@         J     KBIIZ
)@@G@@N2                   . $  CONTINUE  @]@@@@KBLESS.     @F@@@@         L  JA
)@@G@@   A3,A1                   . $  HIVAL = MIDVAL - 1    @G@@@@         L,UJB
)@@G@@   A1,0                    . $  SET ZERO FOR NO ROUND UP    @B@@@@      JC
)@@G@@   AN,U  A3,1                    .  @D@@@@         J     KBIN2          JD
)@@G@@         . $  CONTINUE  @C@@@@KBFOUND  DL    A2,,A0                  . $JE
)@@G@@      @C@@@@         J     0,X9                    . $      @B@@@@.     JF
)@@G@@           ****    FLUSH    ****    @[@@@@.     @ @@@@.     CLEAN OUT ALJG
)@@G@@L BUFFERS.  @A@@@@.     INPUTS: X10 - USER PACKET     @ @@@@.           JH
)@@G@@    X11 - RETURN  @[@@@@.     @]@@@@KF$AMF*.    @E@@@@         S     X8,JI
)@@G@@KPSAVE,X10           . $  SAVE REGISTERS  @B@@@@         S     X9,KPSAVEJJ
)@@G@@+1,X10         .  @B@@@@         S     X11,KPSAVE+2,X10        .  @B@@@@JK
)@@G@@         DS    A0,KPSAVE+3,X10         .  @B@@@@         DS    A2,KPSAVEJL
)@@G@@+5,X10         .  @B@@@@         DS    A4,KPSAVE+7,X10         .  @B@@@@JM
)@@G@@         S     R1,KPSAVE+9,X10         .  @G@@@@         TNZ   KPINIT,X1JN
)@@G@@0              . $  SKIP IF INIT WAS PERFORMED  @H@@@@         J     KFDJO
)@@G@@ONE                  . $  RETURN IF INIT WAS NOT PERFORMED  @E@@@@      JP
)@@G@@   L     A1,KPINIT,X10          . $  LOAD INIT VALUE  @F@@@@         TNEJQ
)@@G@@,U A1,1                    . $  SKIP IF NOT CREATE    @G@@@@         J  JR
)@@G@@   KFFC                    . $  PERFORM FLUSH FOR CREATE    @G@@@@      JS
)@@G@@   TNE,U A1,2                    . $  SKIP IF NOT RANDOM READ     @H@@@@JT
)@@G@@         J     KFFR                    . $  PERFORM FLUSH FOR RANDOM REAJU
)@@G@@D     @[@@@@.     @A@@@@.    FLUSH FOR SEQUENTIAL READ      @[@@@@.     JV
)@@G@@@E@@@@         SZ    KPINIT,X10              . $  ZERO INIT FLAG  @D@@@@JW
)@@G@@         J     KRET                    . $  RETURN    @[@@@@.     @^@@@@JX
)@@G@@.   FLUSH FOR CREATE    @[@@@@.     @]@@@@KFFC.       @G@@@@         L  JY
)@@G@@   A2,(KMAX)               . $  GET MAXIMUM DBP VALUE       @F@@@@      JZ
)@@G@@   LMJ   X9,KCSTID               . $  STORE AN INDEX ENTRY  @I@@@@      KA
)@@G@@   TZ    KCIDWD                  . $  SKIP IF INDEX BUFFER JUST WRITTEN KB
)@@G@@      @E@@@@         LMJ   X8,KCWIND               . $  WRITE BUFFER    KC
)@@G@@@G@@@@         TNZ   KCBUFWDS                . $  SKIP IF BUFFER IS NOT KD
)@@G@@EMPTY @G@@@@         J     KFFC2                   . $  BUFFER IS ALREADKE
)@@G@@Y EMPTY     @C@@@@         SZ    A3                      . $  ZERO@H@@@@KF
)@@G@@KFFC1    L     A1,KCBUFF               . $  GET ADDRESS OF CURRENT BUFFEKG
)@@G@@R     @F@@@@         A     A1,KCBUFWDS             . $  ADD DISP INTO BUKH
)@@G@@FFER  @G@@@@         DS    A2,,A1                  . $  STORE MAX POINTEKI
)@@G@@R IN BUFFER @G@@@@         L     A1,KCBUFWDS             . $  GET LAST DKJ
)@@G@@ISP INTO BUFFER   @E@@@@         A,U   A1,2                    . $  INCRKK
)@@G@@EMENT IT    @E@@@@         S     A1,KCBUFWDS             . $  STORE IT BKL
)@@G@@ACK   @G@@@@         TE,U A1,KCBUFL*28             . $  SKIP IF BUFFER IKM
)@@G@@S FULL      @H@@@@         J     KFFC1                   . $  CONTINUE UKN
)@@G@@NTIL BUFFER IS FULL     @F@@@@         LMJ   X9,KCWBUF               . $KO
)@@G@@  WRITE OUT THE BUFFER  @]@@@@KFFC2.      @E@@@@         TP    KCBPKT+3 KP
)@@G@@               . $  SKIP IF I/O DONE@E@@@@         ER    WAIT$          KQ
)@@G@@         . $  ELSE WAIT       @E@@@@         TZ,S1 KCBPKT+3             KR
)@@G@@   . $  SKIP IF I/O OK  @G@@@@         J     KCWBER                  . $KS
)@@G@@  JP TO PRINT ERROR MESSAGE   @G@@@@         TP    KCIPKT+3             KT
)@@G@@   . $  SKIP IF PREVIOUS I/O DONE   @E@@@@         ER    WAIT$          KU
)@@G@@         . $  ELSE WAIT       @F@@@@         TZ,S1 KCIPKT+3             KV
)@@G@@   . $  SKIP IF I/O WAS OK    @E@@@@         J     KCWIER               KW
)@@G@@   . $  RECORD ERROR    @F@@@@         L,U   A1,KHDR                 . $KX
)@@G@@  ADDRESS OF HEADER     @E@@@@         S,H2  A1,KCIPKT+4             . $KY
)@@G@@  STORE IN PKT    @G@@@@         SZ    KCIPKT+5                . $  ZEROKZ
)@@G@@ DRUM ADDRESS IN PKT    @E@@@@         L     A0,KPOLDP,X10           . $LA
)@@G@@  GET LAST POINTER@F@@@@         S     A0,KFHKEY               . $  STORLB
)@@G@@E HIGH POINTER    @E@@@@         L,U   A0,KCIPKT               . $  GET LC
)@@G@@PACKET ADDR @E@@@@         ER    IOW$                    . $  WRITE HEADLD
)@@G@@ER    @E@@@@          TZ,S1     KCIPKT+3          . $ SKIP IF I/O OK    LE
)@@G@@@C@@@@          J         KFFCHD            . $ ERROR @F@@@@          SZLF
)@@G@@        KCBUFWDS          . $ REINIT CREATE PARAMS    @B@@@@          SZLG
)@@G@@        KCIDCNT           .   @B@@@@          L,U       A1,KCIBLK-KCBUFLLH
)@@G@@  .   @B@@@@          S         A1,KCBPKT+5       .   @B@@@@          SZLI
)@@G@@        KFIWDS            .   @B@@@@          SZ        KCIDWD          LJ
)@@G@@  .   @B@@@@          L         A1,(07700,KCIBLK) .   @B@@@@          S LK
)@@G@@        A1,KCIBLOCK       .   @B@@@@          L,U       A1,64-KCIDLN    LL
)@@G@@  .   @B@@@@          S         A1,KCIPKT+5       .   @C@@@@          J LM
)@@G@@        KRET              . $ RETURN@[@@@@.     @C@@@@. AN I/O ERROR OCCLN
)@@G@@URRED WRITING THE HEADER      @[@@@@.     @]@@@@KFFCHD.     @G@@@@      LO
)@@G@@   L,U   X10,KCIPKT              . $  LOAD ADDRESS OF PACKET      @F@@@@LP
)@@G@@         LMJ   X11,IOERR               . $  PRINT ERROR MESSAGE   @[@@@@LQ
)@@G@@.     @A@@@@. FLUSH FOR RANDOM READ AND WRITE   @[@@@@.     @]@@@@KFFR. LR
)@@G@@      @I@@@@         SZ    KRFTTF                  . $  FORCE NEW BUFFERLS
)@@G@@S TO BE ALLOCATED       @F@@@@         TS    KRTCELL                 . $LT
)@@G@@  LOCK PGTBL AND INDEX  @H@@@@         L     A1,KPIND,X10            . $LU
)@@G@@  GET ADDR OF IDX FOR CURRENT BLK   @G@@@@         L,S1  A2,1,A1        LV
)@@G@@         . $  GET NUMBER OF USERS FOR BLK @E@@@@         AN,U  A2,1     LW
)@@G@@               . $  DECREMENT IT    @E@@@@         S,S1  A2,1,A1        LX
)@@G@@         . $  STORE IT BACK   @G@@@@         L,U   A2,01000             LY
)@@G@@   . $  LOAD FUNCTION CODE FOR WRITE@E@@@@         S,H1  A2,KPPKT+3,X10 LZ
)@@G@@         . $  STORE IN I/O PKT@E@@@@         L     A3,(-1,35)           MA
)@@G@@   . $  LOOP CNTL       @[@@@@.     @D@@@@. WRITE ALL BUFFER SEGMENTS THMB
)@@G@@AT HAVE BEEN MODIFIED   @A@@@@. AND ARE NOT CURRENTLY IN USE      @[@@@@MC
)@@G@@.     @]@@@@KFFR1.      @G@@@@         L,H1  A4,KRPTBL,A3            . $MD
)@@G@@  LOAD MOD FIELD FOR SEG      @G@@@@         TE,U  A4,1                 ME
)@@G@@   . $  SKIP IF SEGMENT CHANGED     @E@@@@         J     KFFR2          MF
)@@G@@         . $  JP TO CONTINUE  @F@@@@         L,H2  A2,KRPTBL,A3         MG
)@@G@@   . $ GET ADDR OF INDEX ENT  @E@@@@         TZ,S1 1,A2                 MH
)@@G@@   . $  SKIP IF NO USERS@E@@@@         J     KFFR2                   . $MI
)@@G@@  JP TO CONTINUE  @G@@@@         L     A1,1,A2                 . $  GET MJ
)@@G@@DRUM ADDR FOR BLOCK     @E@@@@         S     A1,KPPKT+5,X10          . $MK
)@@G@@  STORE IN I/O PKT@E@@@@         SZ,T1 KPPKT+5,X10             . $  ZEROML
)@@G@@ MISC BITS  @E@@@@         L     A0,A3                   . $  BLOCK NUMBMM
)@@G@@ER    @E@@@@         LXI,U A0,0                    . $  ZERO INCREMENT  MN
)@@G@@@E@@@@         MSI,U A0,KBLOCK*28            . $  OFFSET TO BLOCK @F@@@@MO
)@@G@@         A     A0,KRBUFF               . $  LOCATION OF SEGMENT   @E@@@@MP
)@@G@@         S,H2  A0,KPPKT+4,X10          . $  STORE IN I/O PKT@F@@@@      MQ
)@@G@@   L     A0,X10                  . $  LOCATION OF USER PKT  @F@@@@      MR
)@@G@@   A,U   A0,KPPKT                . $  LOCATION OF I/O PKT   @F@@@@      MS
)@@G@@   ER    IOW$                    . $  WRITE OUT SEGMENT     @F@@@@      MT
)@@G@@   SZ,H1 KRPTBL,A3               . $  ZERO MOD INDICATOR    @]@@@@KFFR2.MU
)@@G@@      @E@@@@         JMGI  A3,KFFR1                . $  JP TO CONTINUE  MV
)@@G@@@F@@@@          SZ        KRBUSE            . $ USE FIRST BUFFER NEXT   MW
)@@G@@@G@@@@          L,U       A2,35             . $ 36 PGTBL ENTRIES TO CLEAMX
)@@G@@R     @G@@@@          L,U       A1,KRPTBLINIT     . $ ADDRESS OF DUMMY PMY
)@@G@@GBL ENTRY   @]@@@@KFFR25.     @E@@@@          S         A1,KRPTBL,A2    MZ
)@@G@@  . $ STORE IN PGTBL    @D@@@@          JGD       A2,KFFR25         . $ NA
)@@G@@CONTINUE    @G@@@@         C$TS  KRTCELL                 .  FREE LOCK ONNB
)@@G@@ PGTBL & IDX      @G@@@@         SZ    KPINIT,X10              . $  ZERONC
)@@G@@ INIT INDICATOR IN PKT  @[@@@@.     @D@@@@. IF PSEUDO DBP'S ARE TO BE ADND
)@@G@@DED TO THE KEY FILE     @D@@@@.   RECREATE KEY FILE FROM SCRATCH.  ELSE NE
)@@G@@RETURN.     @[@@@@.     @]@@@@KFDONE.     @G@@@@          TNZ       KAFINF
)@@G@@RST           . SKIP IF PSEUDO KEYS EXIST       @D@@@@          J       NG
)@@G@@  KRET              . ELSE RETURN   @[@@@@.     @C@@@@. PREPARE FILES FONH
)@@G@@R CREATION OF NEW KEY FILE.   @C@@@@.   NEW KEY FILE WILL BE IN A +1 F-CNI
)@@G@@YCLE.       @A@@@@.   OLD WILL REMAIN UNCHANGED.      @[@@@@.     @C@@@@NJ
)@@G@@          S         X10,KFDSVX10      . SAVE X10@B@@@@          L,U     NK
)@@G@@  A0,KFREE1         .   @D@@@@          ER        CSF$              . FRNL
)@@G@@EE K$FILE   @E@@@@          L,U       A0,KASG1          . ASG +1 F-CYCLENM
)@@G@@      @B@@@@          ER        CSF$              .   @B@@@@          L,NN
)@@G@@U       X10,KASG1         .   @E@@@@          TP        A0              NO
)@@G@@  . SKIP IF ASG WAS OK  @E@@@@          LMJ       X11,ASGERR        . ERNP
)@@G@@ROR ON ASSIGN     @G@@@@          TZ        KFMFLG            . SKIP IF NQ
)@@G@@MODIFY FLAG NOT SET     @B@@@@          J         KFDONE1           .   NR
)@@G@@@B@@@@          L,U       A0,KUSE1          .   @F@@@@          ER      NS
)@@G@@  CSF$              . USE K$FILET FOR K$FILE    @E@@@@          L,U     NT
)@@G@@  A0,KASG2          . ASSIGN K$FILET      @B@@@@          ER        CSF$NU
)@@G@@              .   @B@@@@          L,U       X10,KASG2         .   @F@@@@NV
)@@G@@          TP        A0                . SKIP IF ASSIGN WAS OK     @E@@@@NW
)@@G@@          LMJ       X11,ASGERR        . ERROR ON ASSIGN     @F@@@@KFDONENX
)@@G@@1   L,U       A0,KUSE2          . USE K$FILE,K$FILE(+1)     @B@@@@      NY
)@@G@@    ER        CSF$              .   @G@@@@          L         A1,KANUM  NZ
)@@G@@        . NUMBER OF PSEUDO POINTERS       @C@@@@          AN,U      A1,1OA
)@@G@@              . LESS 1  @E@@@@          L         A2,KAFIRST        . FIOB
)@@G@@RST PSEUDO POINTER@F@@@@          L,U       X10,KFPKT         . PKT ADDROC
)@@G@@ESS FOR CREATE    @[@@@@.     @E@@@@. ALL PSEUDO POINTERS HAVE BEEN PASSOD
)@@G@@ED TO NEW KEYFILE       @D@@@@. NOW READ VALUES FROM OLD KEYFILE AND PASOE
)@@G@@S TO NEW    @[@@@@.     @E@@@@          L,U       A0,KFHPKT         . REOF
)@@G@@AD OLD HEADER     @B@@@@          ER        IOW$              .   @E@@@@OG
)@@G@@          L         A0,LAST$D         . HIGH DBANK ADDRESS  @B@@@@      OH
)@@G@@    A,U       A0,1              .   @E@@@@          S,H2      A0,KFTPKT+OI
)@@G@@4       . STORE BUFFER ADDRESS@G@@@@          A,U       A0,1790         OJ
)@@G@@  . ADDRESS OF LAST ENTRY IN BUFFER @E@@@@          S         A0,KFTEND OK
)@@G@@        . STORE IT AWAY       @F@@@@          A,U       A0,2            OL
)@@G@@  . NEW HIGH DBANK ADDRESS    @C@@@@          S         A0,LAST$D       OM
)@@G@@  . STORE IT@C@@@@          ER        MCORE$            . GET CORE@]@@@@ON
)@@G@@KFDONE3.    @D@@@@          L,U       A0,KFTPKT         . PKT ADDRESS   OO
)@@G@@@F@@@@          ER        IOW$              . READ IN THE NEXT TRACK    OP
)@@G@@@D@@@@          L         A0,KFTPKT+5       . DRUM ADDRESS  @E@@@@      OQ
)@@G@@    A,U       A0,64             . NEXT DRUM ADDRESS   @E@@@@          S OR
)@@G@@        A0,KFTPKT+5       . STORE IT BACK IN PKT@E@@@@          L       OS
)@@G@@  A3,KFTPKT+4       . BUFFER ADDRESS      @E@@@@          LXI,U     A3,2OT
)@@G@@              . INCREMENT = 2       @]@@@@KFDONE4.    @E@@@@          DLOU
)@@G@@        A4,,A3            . DBP'S FROM OLD FILE @F@@@@          TNZ     OV
)@@G@@  KANUM             . SKIP IF PSEUDO POINTERS   @F@@@@          J       OW
)@@G@@  KFDONE45          . NO MORE PSEUDO POINTERS   @G@@@@          TLE     OX
)@@G@@  A4,A2             . SKIP IF PSEUDO POINTERS GO HERE @G@@@@          J OY
)@@G@@        KFDONE45          . INSERT NEXT DBP FROM OLD K$FILE @F@@@@KFDONEOZ
)@@G@@43  S         A2,KFPKT+KPOLDP   . STORE PSEUDO IN PACKET    @E@@@@      PA
)@@G@@    SZ        KFPKT+KPNEWP      . ZERO NEW POINTER    @E@@@@          LMPB
)@@G@@J       X11,KF$AMC        . CREATE NEW KEYFILE  @E@@@@          A,U     PC
)@@G@@  A2,1              . NEXT PSEUDO POINTER @C@@@@          JGD       A1,KPD
)@@G@@FDONE43       . CONTINUE@F@@@@          SZ        KANUM             . NOPE
)@@G@@ MORE PSEUDO POINTERS   @E@@@@KFDONE45  DS        A4,KFPKT+3        . STPF
)@@G@@ORE IN CREATE PKT @F@@@@          LMJ       X11,KF$AMC        . PASS IT PG
)@@G@@TO NEW KEYFILE    @F@@@@          TNE       A4,KFHSPC+5       . SKIP IF PH
)@@G@@NOT THE HIGH KEY  @E@@@@          J         KFDONE5           . LAST KEYPI
)@@G@@ WAS FOUND  @G@@@@          TLEM      A3,KFTEND         . SKIP IF  READYPJ
)@@G@@ FOR NEW BUFFER   @G@@@@          J         KFDONE4           . CONTINUEPK
)@@G@@ WITH THIS BUFFER       @E@@@@          J         KFDONE3           . REPL
)@@G@@AD IN NEXT BUFFER @]@@@@KFDONE5.    @C@@@@          LMJ       X11,KF$AMFPM
)@@G@@        . FLUSH   @E@@@@          L,U       A0,KFREE3         . FREE FORPN
)@@G@@ K$FILE     @B@@@@          ER        CSF$              .   @G@@@@      PO
)@@G@@    L,U       A0,KFREE3         . DO IT AGAIN (BOTH F-CYCLES)     @B@@@@PP
)@@G@@          ER        CSF$              .   @C@@@@          L         X10,PQ
)@@G@@KFDSVX10      . RESTORE @D@@@@         J     KRET                    . $PR
)@@G@@  RETURN    @[@@@@.     @A@@@@.             ****  WRITE  ****     @E@@@@PS
)@@G@@.   THIS FUNCTION PERFORMS A RANDOM READ FOLLOWED BY A WRITE@[@@@@.     PT
)@@G@@@A@@@@.        INPUTS: X10 - USER PACKET  @A@@@@.                X11 - RPU
)@@G@@ETURN       @[@@@@.     @]@@@@KF$AMW*.    @D@@@@         S     X11,KPSAVPV
)@@G@@X11,X10        . $  SAVE X11  @E@@@@         L     X11,KPNEWP,X10       PW
)@@G@@   . $  GET NEW POINTER @E@@@@         S     X11,KPSAVNEWP,X10       . $PX
)@@G@@  SAVE NEW POINTER@F@@@@         LMJ   X11,KF$AMR              . $  PERFPY
)@@G@@ORM RANDOM READ   @G@@@@         TZ    KPSTATUS,X10            . $  CHECPZ
)@@G@@K FOR GOOD STATUS       @G@@@@         J     KWRERR                  . $QA
)@@G@@  ERROR FROM RANDOM READ      @G@@@@         DL    A3,KPBLK,X10         QB
)@@G@@   . $  GET LOC OF BLK AND DISP     @G@@@@         A     A3,A4          QC
)@@G@@         . $  CALCULATE ADDRESS OF ENTRY  @E@@@@         L     A4,KPSAVNQD
)@@G@@EWP,X10        . $  GET NEW POINTER @F@@@@          S         A4,KPNEWP,QE
)@@G@@X10     . $ STORE BACK IN USER PKT  @F@@@@         S     A4,1,A3        QF
)@@G@@         . $  STORE NEW POINTER     @G@@@@         L     A3,KPBLKNO,X10 QG
)@@G@@         . $  GET BUFFER SEGMENT NUMBER   @F@@@@         L,U   A4,1     QH
)@@G@@               . $  MODIFIED INDICATOR    @F@@@@         TS    KRTCELL  QI
)@@G@@               . $  TEST & SET FOR PGTBL  @G@@@@         S,H1  A4,KRPTBLQJ
)@@G@@,A3            . $  STORE MODIFY INDICATOR      @F@@@@         DL    A3,QK
)@@G@@KPSAVE+6,X10         . $  RESTORE REGISTERS     @D@@@@         L     X11QL
)@@G@@,KPSAVX11,X10        . $  RESTORE   @E@@@@         C$TS  KRTCELL        QM
)@@G@@         . $  CLEAR TEST & SET@D@@@@         J     0,X11                QN
)@@G@@   . $  RETURN    @[@@@@.     @G@@@@. RANDOM READ COULD NOT FIND OLD DBPQO
)@@G@@ SO WRITE CAN NOT BE PERFORMED      @[@@@@.     @]@@@@KWRERR.     @F@@@@QP
)@@G@@         L     A0,KWRMSG               . $  LOAD ACW FOR PRINT    @F@@@@QQ
)@@G@@         ER    PRINT$                  . $  PRINT ERROR MESSAGE   @E@@@@QR
)@@G@@         ER    ERR$                    . $  ERROR OFF       @[@@@@.     QS
)@@G@@@E@@@@. ADD PSEUDO KEYS TO KEY FILE.  THESE KEYS HAVE VALUES LOWER@C@@@@QT
)@@G@@.     THAN ANY CURRENTLY IN THE KEY FILE.       @A@@@@. INPUT  : X10  PAQU
)@@G@@CKET ADDRESS      @A@@@@.          X11  RETURN ADDRESS      @[@@@@.     QV
)@@G@@@]@@@@KF$AMA*.    @C@@@@          S         A0,KPSAVE+3,X10   . SAVE    QW
)@@G@@@D@@@@          L         A0,KPOLDP,X10     . PSEUDO DBP    @F@@@@      QX
)@@G@@    TNZ       KAFIRST           . SKIP IF FIRST KEY THERE   @E@@@@      QY
)@@G@@    S         A0,KAFIRST        . STORE AS FIRST KEY  @E@@@@          L QZ
)@@G@@        A0,KANUM          . COUNT OF PSEUDO KEYS@E@@@@          A,U     RA
)@@G@@  A0,1              . INCREMENT BY 1      @E@@@@          S         A0,KRB
)@@G@@ANUM          . STORE IT BACK       @C@@@@          L         A0,KPSAVE+RC
)@@G@@3,X10   . RESTORE @C@@@@          J         0,X11             . RETURN  RD
)@@G@@@[@@@@$(0)  @ @@@@KFREE3    '@FREE K$FILE . '   @^@@@@FACPKT    'K$FILE RE
)@@G@@     '@^@@@@          RES       8   @^@@@@KFDSVX10  +         0   @^@@@@RF
)@@G@@KFPKT     RES       50  @A@@@@KFREE1    '@FREE,A K$FILE . '       @C@@@@RG
)@@G@@KASG1     '@ASG,CP K$FILE(+1),///10000 . '      @A@@@@KUSE1     '@USE K$RH
)@@G@@FILET,K$FILE . '  @A@@@@KASG2     '@ASG,A K$FILET . '       @B@@@@KUSE2 RI
)@@G@@    '@USE K$FILE,K$FILE(+1) . '     @C@@@@KFHPKT    I$OD      'K$FILET',RJ
)@@G@@R$ 10,KFHSPC      @^@@@@KFHSPC    RES       10  @C@@@@KFTPKT    I$OD    RK
)@@G@@  'K$FILET',R$ 1792,0 640     @^@@@@KFTEND    +         0   @^@@@@KFMFLGRL
)@@G@@    +         0   @B@@@@KASGUP   '@ASG,UP    K$FILE,///1000  . '  @A@@@@RM
)@@G@@KASGA    '@ASG,A     K$FILE . '     @ @@@@KWRMSG   +     0107,KWRMSG+1  RN
)@@G@@@D@@@@         'KEY FILE WRITE ERROR. OLD DBP NOT FOUND.'   @^@@@@KBLOCKRO
)@@G@@    EQU       32  @#@@@@KASGD    +     0  @E@@@@KBUF     +     0        RP
)@@G@@               . $  BUFFER ADDRESS  @E@@@@KINDL    +     0              RQ
)@@G@@         . $  BUFFER LENGTH   @B@@@@KF$PKT   I$OD  'K$FILE      ',R$ 28,RR
)@@G@@KHDR  @]@@@@KHDR.       @^@@@@KFNAME   'K$FILE'       @^@@@@KFDATE   '  RS
)@@G@@    '       @^@@@@KFTIME   '      '       @#@@@@KFIWDS   +     0  @#@@@@RT
)@@G@@KFLKEY   +     0  @#@@@@KFHKEY   +     0  @]@@@@KHDREND.    @B@@@@KPKT  RU
)@@G@@   EQU   0                       .  @E@@@@KPNAME   EQU   0              RV
)@@G@@         . NAME OF KEY FILE   @G@@@@KPBLK    EQU   1                    RW
)@@G@@   . ADDRESS OF BLOCK IN BUFFER     @G@@@@KPDISP   EQU   2              RX
)@@G@@         . DISPLACEMENT INTO LAST BLOCK   @F@@@@KPOLDP   EQU   3        RY
)@@G@@               . OLD DATA BASE POINTER    @F@@@@KPNEWP   EQU   4        RZ
)@@G@@               . NEW DATA BASE POINTER    @G@@@@KPSTATUS EQU   5        SA
)@@G@@               . STATUS RETURN 0=OK 1=BAD       @H@@@@KPINIT   EQU   6  SB
)@@G@@                     . INIT FLAG 1=CREATE 2=RREAD 4=SWRITE  @G@@@@KPBLKNSC
)@@G@@O  EQU   7                       .  NUMBER OF SEGMENT CONTROLLED  @G@@@@SD
)@@G@@KPSAVE   EQU   8                       . SAVE LOCATION FOR MINOR SET    SE
)@@G@@@F@@@@KPPKT    EQU   21                      . PACKET FOR BUFFER I/O    SF
)@@G@@@E@@@@KPOLAST  EQU   27                      . LAST OLD POINTER   @E@@@@SG
)@@G@@KPNLAST  EQU   28                      . LAST NEW POINTER   @E@@@@KPTBLOSH
)@@G@@CK EQU   29                      . TEMPORARY BLOCK * 2@G@@@@KPIND    EQUSI
)@@G@@   30                      . LOCATION OF LAST INDEX ENTRY   @H@@@@KPTINDSJ
)@@G@@   EQU   31                      . TEMPORARY LOACATION FOR LAST IND     SK
)@@G@@@F@@@@KPSAVX11 EQU   32                      . SAVE LOCATION FOR X11    SL
)@@G@@@F@@@@KPSAVNEWP      EQU 33                     . SAVE FOR NEW POINTER  SM
)@@G@@@E@@@@KPTBLKNO EQU   34                      . $  TEMPORARY BLKNO @ @@@@SN
)@@G@@KMAX     EQU   0777777777777  @^@@@@KCIDLN    EQU       5   @F@@@@KCINITSO
)@@G@@   +     0                       . ZERO IF INIT NOT DONE    @E@@@@KCIDX1SP
)@@G@@   RES   KCIDLN*28               . CREATE IND BUFFER 1@E@@@@KCIDX2   RESSQ
)@@G@@   KCIDLN*28               . CREATE IND BUFFER 2@E@@@@KCIBUF   +     KCISR
)@@G@@DX1                       . BUFFER IN USE @G@@@@KCIDWD   +     0        SS
)@@G@@               . NUMBER OF WORDS USED IN IDX BUF@G@@@@KCIDCNT  +     0  ST
)@@G@@                     . NUMBER OF WRODS SINCE LAST IDX @E@@@@KCIPKT   I$OSU
)@@G@@D  'K$FILE      ',W$ KCIDLN*28,KCIDX1 64-KCIDLN @H@@@@KCIBLK   EQU   640SV
)@@G@@                     . STARTING SECTOR ADDRESS FOR DATA     @ @@@@KCIBLOSW
)@@G@@CK +     07700,KCIBLK   @G@@@@KCBUFL   EQU   64                     . LESX
)@@G@@NGTH OF EACH BUFFER IN SECTOR @F@@@@KCBUF    +     0                    SY
)@@G@@   . ADDRESS OF FIRST BUFFER  @G@@@@         +     0                    SZ
)@@G@@   . ADDRESS OF SECOND BUFFER       @G@@@@KCBUFWDS +     0              TA
)@@G@@         . NUMBER OF WORDS IN BUFFER      @G@@@@KCBUFF   +     0        TB
)@@G@@               . ADDRESS OF BUFFER IN USE       @E@@@@KCBPKT   I$OD  'K$TC
)@@G@@FILE      ',W$ KCBUFL*28,0 KCIBLK-KCBUFL,0@E@@@@KCSORT*   +         KBLOTD
)@@G@@CK*28         . BLOCK SIZE FOR SORT @E@@@@KAFIRST*  +         0         TE
)@@G@@        . FIRST PSEUDO KEY    @F@@@@KANUM     +         0               TF
)@@G@@  . NUMBER OF PSEUDO KEYS     @E@@@@KSBUFF   +     0                    TG
)@@G@@   . BUFFER IN USE      @E@@@@KSBUF    RES   2                       . BTH
)@@G@@UFFER ADDRESSES   @E@@@@KRSHIFT  SSC   A3,1                    . UNSHIFTTI
)@@G@@ INSTRUCTION@E@@@@KLSHIFT   LSSC      A3,1              . SHIFT INSTRUCTTJ
)@@G@@ION   @C@@@@KRBPKT   I$OD  'K$FILE      ',R$ KBLOCK*28      @E@@@@KRBUFFTK
)@@G@@   +     0                       . LOCATION OF BUFFER @F@@@@KRIPKT   I$OTL
)@@G@@D  'K$FILE      ',R$ 0,0 64  . PACKET FOR INDEX READ  @E@@@@KRINDX   EQUTM
)@@G@@F  KRIPKT+4,,W             . LOCATION OF INDEX  @G@@@@KRFTTF   +     0  TN
)@@G@@                     . ZERO INDICATES FIRS TIME THRU  @H@@@@KRTCELL  T$CTO
)@@G@@ELL 1                      . TEST & SET CELL FOR TABLE AND INDX   @E@@@@TP
)@@G@@KRBUSE   +     0                       . BUFFER USAGE WORD  @#@@@@KRPTBLTQ
)@@G@@INIT +   0  @ @@@@           +   0,077,0,0,0,0  @D@@@@KRPTBL.           TR
)@@G@@                     . PAGE TABLE   @ @@@@         +     KRPTBLINIT     TS
)@@G@@@ @@@@         +     KRPTBLINIT     @ @@@@         +     KRPTBLINIT     TT
)@@G@@@ @@@@         +     KRPTBLINIT     @ @@@@         +     KRPTBLINIT     TU
)@@G@@@ @@@@         +     KRPTBLINIT     @ @@@@         +     KRPTBLINIT     TV
)@@G@@@ @@@@         +     KRPTBLINIT     @ @@@@         +     KRPTBLINIT     TW
)@@G@@@ @@@@         +     KRPTBLINIT     @ @@@@         +     KRPTBLINIT     TX
)@@G@@@ @@@@         +     KRPTBLINIT     @ @@@@         +     KRPTBLINIT     TY
)@@G@@@ @@@@         +     KRPTBLINIT     @ @@@@         +     KRPTBLINIT     TZ
)@@G@@@ @@@@         +     KRPTBLINIT     @ @@@@         +     KRPTBLINIT     UA
)@@G@@@ @@@@         +     KRPTBLINIT     @ @@@@         +     KRPTBLINIT     UB
)@@G@@@ @@@@         +     KRPTBLINIT     @ @@@@         +     KRPTBLINIT     UC
)@@G@@@ @@@@         +     KRPTBLINIT     @ @@@@         +     KRPTBLINIT     UD
)@@G@@@ @@@@         +     KRPTBLINIT     @ @@@@         +     KRPTBLINIT     UE
)@@G@@@ @@@@         +     KRPTBLINIT     @ @@@@         +     KRPTBLINIT     UF
)@@G@@@ @@@@         +     KRPTBLINIT     @ @@@@         +     KRPTBLINIT     UG
)@@G@@@ @@@@         +     KRPTBLINIT     @ @@@@         +     KRPTBLINIT     UH
)@@G@@@ @@@@         +     KRPTBLINIT     @ @@@@         +     KRPTBLINIT     UI
)@@G@@@ @@@@         +     KRPTBLINIT     @ @@@@         +     KRPTBLINIT     UJ
)@@G@@@ @@@@         +     KRPTBLINIT     @#@@@@KRFIRSTS  T$CELL  @]@@@@KRPTBLUK
)@@G@@TS.   @#@@@@         T$CELL   @#@@@@         T$CELL   @#@@@@         T$CUL
)@@G@@ELL   @#@@@@         T$CELL   @#@@@@         T$CELL   @#@@@@         T$CUM
)@@G@@ELL   @#@@@@         T$CELL   @#@@@@         T$CELL   @#@@@@         T$CUN
)@@G@@ELL   @#@@@@         T$CELL   @#@@@@         T$CELL   @#@@@@         T$CUO
)@@G@@ELL   @#@@@@         T$CELL   @#@@@@         T$CELL   @#@@@@         T$CUP
)@@G@@ELL   @#@@@@         T$CELL   @#@@@@         T$CELL   @#@@@@         T$CUQ
)@@G@@ELL   @#@@@@         T$CELL   @#@@@@         T$CELL   @#@@@@         T$CUR
)@@G@@ELL   @#@@@@         T$CELL   @#@@@@         T$CELL   @#@@@@         T$CUS
)@@G@@ELL   @#@@@@         T$CELL   @#@@@@         T$CELL   @#@@@@         T$CUT
)@@G@@ELL   @#@@@@         T$CELL   @#@@@@         T$CELL   @#@@@@         T$CUU
)@@G@@ELL   @#@@@@         T$CELL   @#@@@@         T$CELL   @#@@@@         T$CUV
)@@G@@ELL   @#@@@@         T$CELL   @#@@@@         T$CELL   @#@@@@         T$CUW
)@@G@@ELL   @ @@@@KSETB35  +     0400000000000  @ @@@@KSETB34  +     020000000UX
)@@G@@0000  @]@@@@LINE.       @]@@@@ + 0104,$+3 @#@@@@ 'PFILE       '   @]@@@@UY
)@@G@@ RES 4      @^@@@@PKT E$PKT 4,LINE+3      @]@@@@XBUF + 0    @]@@@@XSECT UZ
)@@G@@+ 0   @]@@@@S0 RES 2    @]@@@@SS2 RES 2   @]@@@@SS4 RES 4   @]@@@@S8 + 0VA
)@@G@@      @]@@@@S9 + 0      @]@@@@S10 + 0     @]@@@@S11 + 0     @[@@@@ END  VB
)@@G@@___                  . PACKET FOR BUFFER I/O    @E@@@@KPOLAST  EQU   27 VC
)@@G@@                     . L)@@[U@@[@@@@9?%@@#/,@@@0%8@@@[R#E@@A^@U@@L9(E@@JVD
)@@G@@9*%@@H9*E@@FA]'@@EA]U@@DA]E@@CAA@@@@)@F[F#@[#@@K0@[@K0@K0@@@R#0@A$A#K@A1VE
)@@G@@/,K@@V:8K@W@O;K@@]R#K@A19*(@@@O]K@A1R]K@A2AB@@@@)@O[EK@^G@^[#@[][@@@@@@@VF
)@@G@@'=@@@@0@@@A6/K@@#SA#0@A$ @@@@J:80@I@O;0@@]/,K@[R(@@@@JAC@@@@)@X[##@[@K0@VG
)@@G@@K0@K0@^G@]&@@@@@@@R;@@A3A#0@A8O;0@[@R#0@A8AB0@A7R#0@A2/K@@@?*4@@A6AD@@@@VH
)@@G@@)@>[F][ #@[#@[#@[#@@@()@R')@A3R#@@@E/KD@@@ @@@@HA#0@A2R#0@A0:@0@A2R#0@A\VI
)@@G@@'=@@@@AE@@@@)@,[#][CK)NK0@K0@K0@^G@@@@@@@@A#@@]ER#E@@# @@@[: @@@A'9*@@]BVJ
)@@G@@'=@@@@/KC@@@/,0@@@AF@@@@)@6[F@K)O^G@^G@[#@@K)O@@A#@@@@O;@@W@A#@@A0O;@@W@VK
)@@G@@A#@@A\A#@@A2O;@@@[R#@@@@/,K@[#AG@@@@)@_[F][O@()@-@?-)@ G@@@@R;@@[?/KD@@@VL
)@@G@@*@@@@E'=@@@@R;@@@#/KC@@@A#E@@AR;@@@['=@@@@AH@@@@)[C[F][W]&@]^]8 G@^CA@@@VM
)@@G@@/,0@@@R')@[1/KD@@@1@@@@G'=@@@@R;@@[1/KD@@@1@@@@G'=@@@@AI@@@@)[L[]()@-@2-VN
)@@G@@)@ G@^C^=G@@@@@@@@O;K@@]R#K@]D/,0@@@R')@]@/KD@@@(4@@]#'=@@@@R;@@]@AJ@@@@VO
)@@G@@)[T[F#@[#@[#@[#@@^G@^G@@O;0@@]R#0@A&A#0@A,O;0@@)9**@@@R#0@A,O]@@A&R]@@A>VP
)@@G@@A#K@]DAK@@@@)[+[EK^G@@K0@K)KK0@K@@@@/K@@[8*4@@A:'=@@@@0@@@A:/KD@@@ @@@@JVQ
)@@G@@A#0@A&/,@@[$:80@]GAL@@@@)[:[##@[#@[#@@K0@ES@CKC>G@@@@@R;0@]H'=@@@@R;@@A*VR
)@@G@@A#0@A!O;0@@ R#0@A!AB0@A?R#0@A>AM@@@@)[3[F#@@()@-)@[N@[][C@@@A]U@@DA]E@@CVS
)@@G@@/,0@@@R')@A3/KC@@@ @@@@JA#0@A>R;0@^T:@0@A>AN@@@@)[/[M@[@^G@@@@@@@@P#E@@#VT
)@@G@@R#@@]E @E@@ /K@@ +(@E@@A^@U@@L9(E@@J9*%@@H9*E@@FA]'@@EAO@@@@)]A[N@K^G@[@VU
)@@G@@K@K@@@:@%@@#/K@@]X(@@@@IR#%@@V//@@#)/@@@]GP#E@@#R#@@]F/8@@#)/@@@]GAP@@@@VV
)@@G@@)]K[V@@K@^@@9(E@@V[[U@@^/K@@]X%[E@@#9!I@@@O#)@@J/K@@]X:80@I@O;0@@]9?%@@[VW
)@@G@@/K@@#SAQ@@@@)]V[EK^G@^G@^@^G@@@@@@@@R3!@@[;/@@BJA#E@@ZR#K@@G/,K@AER#0@]DVX
)@@G@@R#)@BG/K@@#SA#'@@]AR@@@@)]=[MK[@@[#@@@@@@@AB)@B@R3!@@[[5X@@[G9K@@[%@U@@YVY
)@@G@@C5X@@[/K@@#!0@H@@[/,K@#6:8)@@_AS@@@@)],[F#@[#@[#@@[#@[#@[#@@ 4@@BJA#0@BKVZ
)@@G@@')@@A_;G)@@[R;)@@[;*0@@[')@@B@R#0@BKAB)@A_AT@@@@)]7[N#@[]@@[#@@^@@%@%@@#WA
)@@G@@/,K@AER;0@I@A#%@@XO#)@BBT8)@I@A#%@@+R3!@@['=@@@@*^@@BJAU@@@@)#[[V@@@@@@@WB
)@@G@@:[E@@YC[E@@ZA#E@@]P#E@@X[[E@@[C[E@@X[[E@@BC[E@@+9*%@@VA#'@@^/K@@#)AV@@@@WC
)@@G@@)#G[F@^[#@@@K0@@@@@@@@@@ 4@@BJA7Z@@[P;K@@[R7Z@@[R#'@@Y;/@@BJ/K@@#R(@E@@YWD
)@@G@@/K@@#SAW@@@@)#P[N#@[]@@@@@@@@@N@U@@L9!E@@J9?%@@H9?E@@FR]'@@ER]U@@DR]E@@CWE
)@@G@@[[E@@Y'=@@@@*^@@BJAX@@@@)#Z[M@^[#@@@@@@@@@[5J@@[H9@@@[C5J@@[;/@@BJ/K@@#SWF
)@@G@@:@'@@YR#'@@ZA#%@@ R;)@@[/KF@@@AY@@@@)#([##@[#@[]@[@K0@K0@K)@K0@@@@;/I@B8WG
)@@G@@'=@@@@*^@@BJ 4@@BJ/K@@#S'=@@@@*^@@BJ 4@@BJAZ@@@@)#1[F#@[#@[]@[#@[@K0@^@@WH
)@@G@@ @@@@G/K@@#.0@@@@IR#)@BK/K@@]*;/@@BJ'=@@@@*^I@B8 4I@B8BA@@@@)#'[F#@[#@[@WI
)@@G@@K0@[#@@K@@@@/K@@ C!8@@@=AB0@A_O;@@@[R#@@@J;S)@BK/K@@^AA#0@BK)@)@CWBB@@@@WJ
)@@G@@)^#[F#@[#@[#@[#@@K@@@@@@C9@@@[[1J@@[C9@@@_/K@@#.*4J@@[RB/@BNA#0@BK')@@A_WK
)@@G@@)@)@CXBC@@@@)^G[F#@[@K0@@K0@K0@K0@@@*^@@BJ 4@@BJ;/G@B8[5H@@[C9@@@)A3H@@[WL
)@@G@@A#W@BN/K@@ E:DG@BNBD@@@@)^P[N]@@K0@@@@@@@@R#@@@EAFE@@SR;@@K@ WE@@UA#E@@UWM
)@@G@@R#H@@[ABE@@TO#@@BBT8@@I@'=@@@@BE@@@@)^Z[]K^G@^G@^G@^G@^G@^G@@@@@@@9*)@C\WN
)@@G@@9*@@C!A]0@C8A])@C7A]K@C6A]@@C5/K@@ @O;@@@PBF@@@@)^$[F#@@K0@^G@]&@]^@MA@@WO
)@@G@@C8K@@EC@@@C?/,0@@@C/@@C>A#K@C?R#W@@ A#K@C:RBW@@^9(@@C1BG@@@@)^0[#]@)K)AKWP
)@@G@@0@^C]^C]2&@@@@@@@@R;@@CY/,0@@@/,0@@@C8K@@CC@@@C:/,0@@@C/@@@]/,0@@@BH@@@@WQ
)@@G@@)^8[#][(#@[#@[#@[#@[#@[#@[#@@@9!@@C19?)@C\9?@@C!R]0@C8R])@C7R]K@C6R]@@C5WR
)@@G@@'=@@@@BI@@@@) @[F][>#@@K0@K0@K)@[#@@ @@@BK/KD@@@ 4H@@['=@@@@*^G@B8 4G@B8WS
)@@G@@R3H@@[;/@@BJ'=@@@@BJ@@@@) D[N@[#@@@@@@@@@@ WE@@UA#%@@UR#\@@[AF%@@SR;)@C@WT
)@@G@@AB%@@TO#)@BBT8)@I@R#)@@G/K@@#6BK@@@@) N[E[#@[#@[#@[#@[]@@@@@R#@@@E'=@@@@WU
)@@G@@*^@@BJ 4@@BJ;/G@B8ABW@BNA3H@@[A7!@@[R;)@@)BL@@@@) W[EK)T^@K)MK0@K0@K@@@@WV
)@@G@@/,@@ 4(@@@BI;/@@B7/,0@@@O')@@P/K@@^T(4E@@S'=@@@@O;@@@PBM@@@@) >[F#@[#@[]WW
)@@G@@@@^CA0K0@@@@9!@@B[ @E@@V @E@@Y'=@@@@A#E@@AR;@@@]'=@@@@*^@@B7 4@@B7BN@@@@WX
)@@G@@) ,[EK0@^G@[@K0@K^@@@@@@/,K@[L/,K@[FA])@BI/K@@]#9(E@@T9!@@B 9(E@@R9!@@B#WY
)@@G@@9(E@@PBO@@@@) 7[#][KK0@K0@K0@K0@^C @@@@@@@A#@@@@O;@B8@A#@@BBO#@@]DAB@@BGWZ
)@@G@@A#@@BGO;@@@[R#@@@@BP@@@@) _[#][P#@[#@@()@-@2-)@)CS@@@@ C@@BG/K@@AC*4@@BFXA
)@@G@@'=@@@@R;@@BCAFK@BGR#K@]D'=@@@@BQ@@@@)AB[MES@CKD@@@@@@@;CK@@[O#K@@JO#K@@KXB
)@@G@@ @@@@HP;0@@[;C0@@[ @@@@K/,0@@@R')@BC/KC@@@BR@@@@)AL[U@K@K^@@R;K@@[C[@@@HXC
)@@G@@/8@@AX/[K@A-H[U@@#C[W@@@/K@@A-:[@@@JO#@@@I;*@@@[R#@@@HBS@@@@)AW[V@@K@@@@XD
)@@G@@9*E@@FA]'@@EA]U@@DA]E@@C/KD@@@9??@@@/K@@AIP;0@@[R;K@@@R#0@@H/K@@AIBT@@@@XE
)@@G@@)A$[U@K@K[@@ @E@@A/K@@B-:8K@@]/K@@A3:8K@@[R#U@@A/K@@CA(@E@@A^@U@@L9(E@@JXF
)@@G@@9*%@@HBU@@@@)A2[F@K0@K^G@^[#@[@^G@@@R#K@A2 @@@@J/K@@B#(@@@A1/,@@[$*@@@A&XG
)@@G@@/,K@[RR#)@C9/K@@#SBV@@@@)A;[F#@@K0@^G@[@K^G@@@@@0@@@A6/,K@@V/K@@A'%8K@W@XH
)@@G@@A#K@A1O;K@@]R#K@A19*!@@@O#K@A1BW@@@@)B^[#][[#@[@K0@K)KK0@K]&@@@@@@R;K@]AXI
)@@G@@/K@@[8*4@@A:'=@@@@0@@@A:/K@@@?*4@@A6'=@@@@BX@@@@)BG[##@[#@@K0@ES@CKG*S@CXJ
)@@G@@@@@@@@/K@@BZ*4@@A:'=@@@@R;@@A*A#@@]FR#E@@# @@@A!ABK@A?BY@@@@)BO[##@[#@@KXK
)@@G@@0@K0@K0@K0@K0@@@@@A#K@A,R#K@C' @@@A& @@@]DA#K@A8R;K@D@ @@@A$ @@@A1BZ@@@@XL
)@@G@@)BW[EK0@K]&@]^]MA@]A@@@@R7!@@[R#U@@Y;/@@BJ @@@BI/,0@@@R')@A*/K@@#SA#K@A!XM
)@@G@@R;K@@;CA@@@@)B>[M@K0@K0@^[#@@@*4I@@[RB\@BN/K@@B/%9@@@[CDJ@BNR#0@C;AF%@@SXN
)@@G@@R;)@C@A7!@@[P;)@@[CB@@@@)B\[N@@@K0@@@@@@@@R#@@@EABE@@TO#@@BBT8@@I@&;@@@@XO
)@@G@@R#@@@J WE@@UA#U@@UR#Y@@[/K@@B/CC@@@@)B9[EK)TK0@K^G@@()@-)@)@8#)@C@A#Y@BNXP
)@@G@@R;K@BLR;)@@< @@@BK/:0@B% CJ@BN'=@@@@O;@@@PCD@@@@)C][##@[#@[]@@K0@K^G@]&@XQ
)@@G@@@@@@@@R;@@[@A])@@H/K@@#S(@@@A' @E@@A'=@@@@*^@@BJ 4@@BJCE@@@@)CE[#][W()@-XR
)@@G@@@,O0@^CA^G@^@@@@@@/K@@CT*@@@[:/,0@@@0@@@@GR')@[#'=@@@@R;@@[#'=@@@@CF@@@@XS
)@@G@@)CM[]()@-@,O0@K)RES@]^#[N@@@@@R;@@[J/,0@@@0@@@@GR')@[G'=@@@@R;@@[G'=@@@@XT
)@@G@@R;@@[CCG@@@@)CU[#][X#@@K0@ES@ G@^CAOC @@@@R#@@@@'=@@@@R;@@[OR')@@IR#)@A'XU
)@@G@@P;K@@[R#K@A;'=@@@@CH@@@@)C+[EK0@^G@[][L][O()@-@2'=@@@@R;@@[='=@@@@A#@@@@XV
)@@G@@O;@@@]A#@@[%O;@@V"AB@@[*O;@@@[CI@@@@)C:[F#@@K0@K0@[#@[@@@@@@?[@@@I/K@@C;XW
)@@G@@(@@@A;9!J@@@&;0@@]R#0@[*A#@@[(O;@@[@R#@@[(CJ@@@@)C4[F@K0@K0@K[@K0@K0@K@@XX
)@@G@@/,0@@@9(@@@L @@@A;8#K@C5O;)@@[/,0@@@ @@@@MA#)@@L/K@@C;CK@@@@)C.[##@[@K0@XY
)@@G@@K^[@ES@CKF)@@@@@@@'=@@@@R;@@@@/,0@A</K@@C(/K@@C0$#0@[%/K@@D]:[@@[ZCL@@@@XZ
)@@G@@)D [E()@-@,-)@)@C@@@@@@@*@E@@ /,0@['A]'@@-R]'@@^A]'@@)/K@@#SR])@@H'=@@@@YA
)@@G@@R;@@@@CM@@@@)DI[N@@@^G@^G@@@@@[DJ@BN;/@@BJC9@@@[R#'@@B[[J@@[[[E@@^C[E@@-YB
)@@G@@O#0@@K9?'@@[/K@@DYCN@@@@)DS[E^G@^G@^C@[#@[][1][4'=@@@@'=@@@@R#@@[5/KF@@@YC
)@@G@@'=@@@@*^@@BJ 4@@BJR]'@@)9?'@@ICO@@@@)D-[E^G@^G@^G@[#@@@@@@@@/KF@@@R#E@@FYD
)@@G@@A#@@A;O;@@@[R#@@A;A#@@A'(@@@A'R#E@@#A#E@@FCP@@@@)@@@*@@@@@@@)@H@C@)[@@S@YE
)@@G@@LE .  A K$FI@FREE,@@@@@@      K$FILE .    K$FILE@FREE CQ@@@@)[#[S@@@@@@@YF
)@@G@@ K$FIL@ASG,AE .   ,K$FIL$FILET@USE K000 . ,///10LE(+1)P K$FI@ASG,CCR@@@@YG
)@@G@@)[I[K@@@/V]@8@@@@@@@@@@@@@@@@@T     K$FILE      (+1) .K$FILE$FILE,@USE KYH
)@@G@@ET .  CS@@@@)[S@K*@@@@@@)[=@8@/V]@8@@@@@@@@@@@E@@W@@@@@@@@@@@@@@@@T     YI
)@@G@@K$FILE@@@@@@@@E@[UCT@@@@)[:[S@@@E@@@@[B@[6.     $FILE      K@ASG,A0  .  YJ
)@@G@@///100$FILE,P    K@ASG,U@@@@@@CU@@@@)[6[S@@@@@@@K$FILE@@@@@@@@@@@@@@@@@@YK
)@@G@@UND.  NOT FOD DBP OR. OLTE ERRLE WRIKEY FICV@@@@)][[K#1?C#+)@@@@@@@@@@@@YL
)@@G@@@@@@@@            K$FILE@@@@@@@@W@]A@@@@@@@@@@@@      CW@@@@)]F@K@)A>@8/YM
)@@G@@S@@@/V]@/@@@@@@@@@@@@@@@      K$FILE@@@@@@@@@@@@@@@@]H@@@@@@@@@@@@CX@@@@YN
)@@G@@)A?[K*@@@@@@@@@@@@@@@@@@      K$FILE@@@@@@@@@@@@@@@@@@@@@@@@@_@@E@@@@@@;YO
)@@G@@@]G@]HCY@@@@)A6@8/V]@/@@)A_@S@K$FILE;)0@@[;@0@@[@@@@@@@@@@@@@@@@@@@@@@I@YP
)@@G@@@@@@D@@W@@@@@@@@@@CZ@@@@)B][K#1?C#)@#1?C#)@@@@@@@@@@@@      K$FILE@@@@@@YQ
)@@G@@@@@@@@@I@@@@@@@@@@@@@@@@      DA@@@@)BG[K@@JA@#1)@/S@@@@@@BL@@@@BL@@@@BLYR
)@@G@@@_@@@@@@@@@@@@@@@@@\[@@@@@@@@@@@@@[@@@@@@@DB@@@@)BQ@8/S@JA@#1)@/S@JA@#1)YS
)@@G@@@/S@@@@@@@@@@@@@BL@@@@BL@@@@BL@@@@BL@@@@BL@@@@BL@@@@BLDC@@@@)BX@8/S@JA@#YT
)@@G@@1)@/S@JA@#1)@/S@@@@@@@@@@@@@BL@@@@BL@@@@BL@@@@BL@@@@BL@@@@BL@@@@BLDD@@@@YU
)@@G@@)B=@8/S@JA@#1)@/S@JA@#1)@/S@@@@@@@@@@@@@BL@@@@BL@@@@BL@@@@BL@@@@BL@@@@BLYV
)@@G@@@@@@BLDE@@@@)B:@8/S@JA@#1)@/S@JA@#1)@/S@@@@@@@@@@@@@BL@@@@BL@@@@BL@@@@BLYW
)@@G@@@@@@BL@@@@BL@@@@BLDF@@@@)B2[C/S@JA@#1)@/S@JA@@@@@\@@@@@\@@@@@\@@@@@\@@@@YX
)@@G@@@@@@BL@@@@BL@@@@BL@@@@BL@@@@BLDG@@@@)B;[S@@@@@@@@\@@@@@\@@@@@\@@@@@\@@@@YY
)@@G@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@DH@@@@)CA[S@@@@@@@@\@@@@@\@@@@YZ
)@@G@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@DI@@@@)CL[S@@@@@@@ZA
)@@G@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@DJ@@@@ZB
)@@G@@)CW@*])@@@@@)C>@)*@@@@@@@@@@@@[[@@@@@@@@@@@&^@C-      PFILE @[^@C-K@@@@@ZC
)@@G@@)@@@@@DK@@@@)C(@)@@@@@@@)C5@*@@@@@@@______@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZD
)@@G@@@@@@@@@@@@@@@@@@@@DL@@@@)C'@K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZE
)@@G@@@@@@@@@@@@@@@@@@@@__"@@<@_@@E@DM@@@@@@@@@@[X#@@K0@ES@ G@^CAOC @@@@R#@@@@ZF
)@@G@@'=@@@@R;@@[OR')@@IR#)@A'P;K@@[R#K@A;'=@@@@CH@@@@@@^@@]@@A@@Y@[]@@B@[Y@@@ZG
)@@G@@@@@@C/@@@@D%CTS$        CTSA$       EDIT$       EDITR$      ECHAR$      ZH
)@@G@@ECOL$       ESKIP$      ECLR$       EOCTF$      EDECF$      EDCFZ$      ZI
)@@G@@EDITX$      ECOLN$      EMSGR$      R$          W$          WAIT$       ZJ
)@@G@@IO$         IOERR       DATE$       LAST$D      MCORE$      FACIL$      ZK
)@@G@@CSF$        ASGERR      IOW$        PRNTA$      TSQRG$      PRINT$      ZL
)@@G@@ERR$        KF$AMC      @@[@@@@@@@@@KF$AMR      @@[@@@@@@@['KF$AMF      ZM
)@@G@@@@[@@@@@@@A<KF$AMW      @@[@@@@@@@DDKF$AMA      @@[@@@@@@@D-KCSORT      ZN
)@@G@@@@@@@@@@@@A9KAFIRST     @@@@@@@@@@A'009989STEST       000018000015@L@[[@ZO
)@@G@@RR7513203   30050005/12/75049605/12/7504962 JLR 05/15/750499            ZP
)@@G@@======@@^@@ @@@@@@@@@@@@@@ @K0@@@@D,@@C@@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZQ
)@@G@@@@@@@@B71 CG70-1  @@@@@@@@@@HF@@@G8@@@@@@@@@@@@@@@@@@@@]VG8)@^?@@A@@0@]WZR
)@@G@@@I'@@@@][@@^@@@AF^@@@@@@@^@@D,@^@M@[@ @@D,K^@G[$ A CWO@H@[[@RR7513203   ZS
)@@G@@90080005/12/750496TO ADD A # GROUP & 1000 TELEPHONE MOD. REQUIRED @H@[[@ZT
)@@G@@RR7513203   90090005/12/7504967 RECLD OF TAPE IN@@[[C#@@@___@@@___@@@___ZU
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___ZV
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___ZW
)@@G@@/KF@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@FN[C#@@@___@@EH!>@[SH,;@@EH8B@@4H_/)[GH!\)B4H0NZZ
)@@G@@)B:H8L@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___AA
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___AA0H!$'^@[H4C#0H[#R#@H[JAB
)@@G@@A#@H[#'^@[H4[#0H[#'^@[KE @@H!*R;@@@[!8@@@P/K@[H1R#@H@/K8@@@[R;)@@2O;)@@AAC
)@@G@@T8)@@[R;0@@[T80@@#P;0@@[T80@@DO#)@@JO#@@@IA#@H@/'=@@@<N@K@@IR#0@@H&;0@@[AD
)@@G@@R#@H\DM#/)@@R;0@@[T80@@#P;0@@[8#0[C&/K@[C(A#ZH!%O;K@@D/K@[C=R;@@@2O;@@@AAE
)@@G@@R;0@@[8#0[C,/K@[C1A#ZH,>O#K@@G/K@[C?R;K@@@RF)H[]W8K@@D/@K[H,P;K@@[RAKH[]AF
)@@G@@&'K@@DR;)@@@RZD)@#;*@@@S;C@@@S?@)@@GR#)@@G8#K[C9R;0@@[T80@@#P;0@@[T8)@@EAG
)@@G@@O;)@[=R#@H@/O;@@@[R[\H!(ABA@@BAF&@@C 4A@@#O#@@@I8#0[DAP;@@@[A#@H@/'=@@@<AH
)@@G@@R;@PCH'=@@[&N])@@GR#@H0@'=@@@F'=@@[*'^@[K.(@@H!*/K@X!$R#@H0['=@@@IR#@H0]AI
)@@G@@'=@@@IR#@H0#'=@@@IR#@H0^'=@@@IR#@H0]'=@@@IR#@H0['=@@@I/K@X!$'=@@[LRB@H[[AJ
)@@G@@&;@@@[P;@@@[A#@H\^R;@@@[A#@H\ ;/@H\FR;0@@[P;0@@[R@0H0 R#@@@JT8@@@#R@K@@GAK
)@@G@@O;@@@]R@)@@GR[ZH,>R#@@@JO;@@@];*@@@AO;@@@[;*@@@MO;@[EG'=@@@F8#0[D\ 4@H\FAL
)@@G@@*^@H\F'=@@[NR;)@@[P;)@@[R#KH0A @@@@G;KY@@@;?I@@#'=@@[W'=@@[FR#@@[E'=@@[$AM
)@@G@@'=@@@DR[-H!(;/@H\F'^@[FT 4@H\F*^@H\F'=@@[N1@@@@[/K@[ER1@@@@#/K@[E%'=@@@DAN
)@@G@@R;K@@LA3Q@@#R])@@A;/@H\G'^@[K? 4@H\G*^@H\G'=@@[N/,0@9N1@@@@#/K@[E%0@A@@#AO
)@@G@@'=@@@A*4A@@#/,0@/!R@0@@[R@K@@]P8K@@[/K@[EGR[<H!( @@@@OCD&@@BC[K@@MH9K@@[AP
)@@G@@RAA@@BR])@@ /K@[GAOAA@@A8^K[E1R[+H!(0@A@@#'=@@@AR])@@A*4A@@#/,0@/!R[@@@]AQ
)@@G@@R@)@@#R[+H!(/]@[FBR;K@@DA3Q@@#R])@@A;/@H\G'^@[K? 4@H\G*^@H\G'=@@[N/,0@9NAR
)@@G@@0@@@@[/K@[FMR[-H!(0@A@@#'=@@@AR])@@A*4A@@#/,0@/!R@0@@[R@K@@^/K@[EGR[+H!(AS
)@@G@@0@A@@#'=@@@AR])@@A*4A@@#/,0@/!'=@@@D@@@@@@C]KH\AC[0H\BR[0H\CR#@@@N;*@@@MAT
)@@G@@/^@[F</]K[F5C[7)@@H'K@@[R#@@@N;*@@@M;C@@@M!8@@@ER;@@@EAFA@@BR#)@@N;C)@@MAU
)@@G@@AB&@@CH[0@@G;*@@@MG[0@@G9?@H,99*A@@@[]KH\A[[0H\BA[0H\C/K@LFTR#@H\ /^@[F/AV
)@@G@@[]KH\A[[0H\BA[0H\CR@KH0 /K@LFTR[0H\^O[0H\ A[0H\^CUR@@@RRB@@@A#@H\ 9?B@@[AW
)@@G@@9*@H,9O90@@#/K@[F)R#@@@COFC@@]P;@@@[PFC@@A&;@__"CDC@@#/K@[GPR#?)@@+@)H0BAX
)@@G@@*@@@@J/K@[GP;*)@@M;C)@@MO#)@@C/K@[GR8^@[GH/K@[E2RZY@@@R]KH0CN@KH0M2WT)@@AY
)@@G@@/K@[GPP'K@@[RAT@@@&'K@@[O'K@@[N#0@@HN@0@@G0@D@@@/K@[G:K)(@@@&;0@@[NV(@@@AZ
)@@G@@N#K@@DR3T)@@/!@[H^/K@[G+(0D@@@/K@[G.K)()@@&;0@@[C]\)@@+](@@@1@@@@R/]0[G.BA
)@@G@@R;)@@[/E)[G9R]0@@DO]0@@I/I0[G_O3;@@@;%)@@[;%0@@[O;)@@[/A0[G4R#@@[#/K@[GPBB
)@@G@@NV:@@@N#K@@FR3V@@@/!@[H^/K@[G9P;K@@[R#J)@@A#E@@#N@)@@HR#KH8B;CH@@@/@@[HJBC
)@@G@@R#KH0DN@KH_/2@H)@@/K@[H=R#K@[]/,0[@N*@E@@ /K@[HTRFE@@^/@@[HVR#E@@^P;0@@[BD
)@@G@@A#J)@@G'@@@[8#K[H /K^@@@;/@H\H'^@[LNR;@@@[A#@H!* 4@H\H*^@H\H'=@@[N @@@@GBE
)@@G@@/K@[HQR#K@[];/@H\I'^@[M-R;@@@[A#@H!* 4@H\I*^@H\I'=@@[N @@@@G/K@[HQR#@H0EBF
)@@G@@'=@@@I'=@@@)R#@H0F'=@@@I'=@@@)@@@@@@R#@H@/K8@@@[A#KH0IOF@H[[OF@H[#A#@H@/BG
)@@G@@'=@@@<&'K@@[QAKH[[RBKH[#A#KH0JR])H0I&')@@[AA)H[[R#KH0IR#)@@EL@)@@HAR.@@@BH
)@@G@@P;0@@#AV.@@@AA)H0I(C@H[[/K@[J&RZD@@@CTD@@@NO9@@@/[@[ITN8K@@#M]()@@R#KH0JBI
)@@G@@:WH@@@/K@[IZ(OH@@@/K@[IWORX@@@/K@[INO]K@[#A#KH0I/K@[J=N@K@@KM]()@@/K@[J=BJ
)@@G@@CTX@@@ WH@@@O;K@@#&;K@@[R'@@@@'^@[JJA#@H0K'^@[JPRF@H0L:C@H0K/K@[J#!C@H0KBK
)@@G@@/K@[I29?)H0K;^)@@=9*)H0KR#)@@C-8)@@[R]@@@JRF)H0KK^)H0K,C)H0L/K@[JARF)H0LBL
)@@G@@OB)H0L?@0@@I/K@[I/'^CX0G/K@[I2PF)H0KAB)H0KR#)@@C-8)@@[R]@@@J'^CX0G/K@[I2BM
)@@G@@RF)H0KK^)H0K/K@[I6R#@H0KA#E)@@R#@H0LA#@H0KR#)@@C-8)@@[R]@@@J'^CX0G/K@[I$BN
)@@G@@@@@@@@8^@[JM/K@[J)R#D)@@A#@H0L/K@LJJ@@@@@@8^K[JS/K@[JVR#H)@@A#@H0L/K@LJPBO
)@@G@@R#@H0KA#E)@@N@K@@KM]()@@/K@[J=R#@H0KA#E)@@N@K@@LM]!)@@R#@@[#/^@[I#R#KH0JBP
)@@G@@*WH@@@/K@[J!(OH@@@/K@[J"ORX@@@/K@[J$R#@H0IR#)@@EL@)@@GAR/@@@P;0@@#AV/@@@BQ
)@@G@@(SH@@@/K@[J(AA)H0IR#)@@H&;)@@[RVI@@@/@@[J(O;@@@#N@K@@GM],)@@/K@[J(R#)H0IBR
)@@G@@ OI@@@R#@@@E&;@@@@L^@H[[AFKH[[L@@@@IP;K@@#AVY@@@A#@H@/'=@@@=/K@LH4@@@@@@BS
)@@G@@R]@H_.R;)@@[RB@H[@RZW@@@AZS@@@ABC)@@(OG@@@/K@[KQORG@@@O;)@@[/K@[KIA#)H0MBT
)@@G@@R]@H_"(C@H[]/K@[K$RB@H[]R\?@@@O:?@@@A#)H8BR;)@@[R#W@@@;CK@@SA#S)@@(OG@@@BU
)@@G@@/K@[K%ORG@@@O;)@@[/K@[KZ @@H8B @@H8C @@@@IA#)H_//K@LKE@@@@@@9*@I@ER3U@@#BV
)@@G@@%8K@@D/K@[K8R#@H__O#@@@OA#@H__R#@I@[OFE@@BA#@I@[/K@[K;R#@I@@OFE@@BA#@I@@BW
)@@G@@9?@I@E/K@LK?@@@@@@C/@HA7/,0@HSC@@I@@/,0@J=C8@I@ C8K@@F/,0@I(C@@I@[/,0@J=BX
)@@G@@C8@I@BC8K@@I/,0@I(C@@H__/,0@J=C8@I@]C8K@@I/,0@I(/,0@H\R#@I@\'=@@@I/K@LK.BY
)@@G@@@@@@@@9*@I@E9*)I@GR;)@@FO;)@@[R#K@[HR7H@@@!@@@@I/K@[MYO;@@@[A7H@@@!@@@@IBZ
)@@G@@/K@[MFC/@HA7/,0@HSC8@I@IC8K@@)/,0@I(RZC@@[;*@@@S;C@@@S/,0@J=C8@I@OC8K@@^CA
)@@G@@/,0@I(RBC@@[/,0@J=C8@I@PC8K@@ /,0@I(R#K@[#;*K@@M;CK@@MO;K@@[P#K@@CRFC@@]CB
)@@G@@P#@@@H/,0@J=C8@I@QC8K@@C/,0@I(R#@@[J/,0@J=C8@I@SC8K@@C/,0@I(R#@@[I;*@@@SCC
)@@G@@;C@@@S/,0@J=C/@@@./,0@I[/,0@H\R#@I@\'=@@@I/K@[MYC/@HA7/,0@HSC8@I@UC8K@@?CD
)@@G@@/,0@I(R#@@[J/,0@J=C8@I@+C8K@@D/,0@I(R#@@[I;*@@@S;C@@@S/,0@J=C/@@@./,0@I[CE
)@@G@@/,0@H\R#@I@\'=@@@I9?@I@E9?)I@G/K@LLN@@@@@@9*@I@=9*)I@&C/@HA7/,0@HSC8@I@*CF
)@@G@@C8K@@X/,0@I(R#@I@=/,0@J=C8@I@!C8K@@C/,0@I(RZC@@[;*@@@S;C@@@S/,0@J=C8@I@OCG
)@@G@@C8K@@^/,0@I(RBC@@[/,0@J=C8@I@PC8K@@ /,0@I(R#K@[#;*K@@M;CK@@MO;K@@[P#K@@CCH
)@@G@@RFC@@]P#@@@H/,0@J=C8@I@QC8K@@C/,0@I(R#@@[J/,0@J=C8@I@SC8K@@C/,0@I(R#@@[ICI
)@@G@@;*@@@S;C@@@S/,0@J=C/@@@./,0@I[/,0@H\R#@I@\'=@@@I9?@I@=9?)I@&/K@LM-@@@@@@CJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@H,;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@H\ECL
)@@G@@@@@@@@@\@@@@@\@@@@@\@@@@@\@@@@PATCH FOUND NO C3 ENTRIES     ERROR: PATCHCM
)@@G@@ ATTEMPTED USING MORE THAN 20 ACTIVITIES (ACTNUM>20) - ERR$!************CN
)@@G@@*****************************************                               CO
)@@G@@       **********        PATCH MAY BE IN ERROR         **********      SCP
)@@G@@EE WARNINGS PRINTED ABOVE      *****@[[[D>@[CH\)@[CH\*@[CH\0@[CH\8_____"CQ
)@@G@@)@@@@@*@@@@@@@[H0N@@[H8C@[ H\J@[GH\O@@@[JP@@@[JJ@@@@@@@@@@@@@@@@@@@@@@@@CR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CS
)@@G@@@@[H0N@@[H8C@@@@@@@@@@@@@@@@@@ PTRS PATCHED.     PGS READ,   PGS WRITTENCT
)@@G@@,     @@@@@@@@@@@@@@@@@@@@@@@@WARNING: ZERO PTR STORED - AREA     ,PG   CU
)@@G@@,SLT  ,RECCDE     ,SETCDE     ZERO POINTER WARNINGS SUPPRESSED FOR RECCDCV
)@@G@@E     , SETCDE    @@@@@@@@@@@@@@@@@@@@@@@@WARNING: PTR TO UNKNOWN AREA  CW
)@@G@@ - AREA     @[GHA.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@6M[C#@@@___@@4H!>@]&H\6@@4I]^@FTI#]@@&II7@@EIJ2CY
)@@G@@@@,IKI)[XH,T)J*H2W)@EI]8)@WIIV)@PIJX)@MIJ/@@@___@@@___@@@___@@@___@@@___CZ
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___*@@H@)'^@@!9AA0H0K(C@H#QDA
)@@G@@/K@[CER')H0I/,0@%]'^@[!U @@@@M(C@H[^'^@[!.CC@H[^C@K@@GT8K@@]G@@@@HC@)H@/DB
)@@G@@G8)@@[[^)H!:G@@H@/[@@H@/'=@@@<C@@H@/C@K@@GG8K@@[[^KH!1G8@@DS[@@H@/'=@@@<DC
)@@G@@C@@H@/C@K@@GG8K@@[[^KH!?G8@@^?[@@H@/'=@@@<C@@H@/C@K@@GG8K@@[[^KH!!G8@@#CDD
)@@G@@[@@H@/'=@@@<C@@H@/C@K@@GG8K@@[[^KH!,G@@H,L[@@H@/'=@@@<R KH!:R^0H[^R[)@@ DE
)@@G@@R[@@@#RZN@@@R;@@@DO\#@@@O[@@@GO;@@@[C]=@@@T')@@^G])@@GN@K@@GR@K@@#R@)@@ DF
)@@G@@/,0[!P(S#@@[/K@[D"C#O@@@H;K@@[R#0@@^O;0@@[O[)@@G9,_@@@*@@H@</K@[DK(@@@@SDG
)@@G@@/K@[D:9%6@@@C]_@@][]6@@]C;@@@^[7A@@@A[)H,P @A@@#O7_@@@O5&@@@8AK[DFR]0H,PDH
)@@G@@ 4F@@@ @ @@] @ @@^ @ @@#(? @@@/K@[EV9,5@@BCBKIG^H;K@@[R;0IG 9"_@@@/K@[D*DI
)@@G@@/K@[EIO;0@@#8AK[D>'^@[,]9*@H\V9*)H\XCOZ@@@R')H[]/,0[Y_*@@@@I/K@[D8C;@@@[DJ
)@@G@@9%6@@@CE/@@^HA/@@ []6@@]/K@[D;C;@@@@9%6@@@ @A@@]9?@H\V9?)H\X/K@[DNC;K@@EDK
)@@G@@[VP@@[O[)@@GP9)@@[C;K@@[[#Q@@@O9)@@[ @A@@@ @A@@[ @A@@] @A@@#C;K@@^[7Q@@@DL
)@@G@@A[)H,PO5&@@@/K@[DURF\@@]AB>@@^R#0@@ O;0@@D&;0@@[C\>@@@H;)@@[C@)H!,G8)@@[DM
)@@G@@CB_@@@G#0@@I[B_)@@8A)[ERR[)@@ P9)@@[O[)@@GA^5@@]R')H#Q/,0[Y_A#)H\"/^)[FBDN
)@@G@@R]@@@GR]K@@CRVC@@@AZ @@[R#C@@[A# @@#CAC@@[(@@@@O/K@[FDH'@@@[O'K@@]&'K@@[DO
)@@G@@RRT)@@CA&@@@H')@@[R[@@@AO9@@@[:OO@@@/K@[F[O5^@@@8 )[E4C9@@@^[5^@@@O9@@@^DP
)@@G@@C A@@@G9@@@[[ A@@@ARO@@@C9@@@@[5^@@@CDD@@@[[^@@[C D)@@[[^@@]8 @[E\/K@[FDDQ
)@@G@@ W @@[ @ @@#CA&@@@H')@@[O9)@@[RRQ@@@R')H[]/,0[Y_/^)[F4R[0@@GR:B@@#A3A@@@DR
)@@G@@RFB@@AAVA@@@O5&@@@8 )[FGO9)@@^*@@H\"/K@[F(*^C@@[/K@[FY&'K@@[O'K@@](CC@@[DS
)@@G@@/K@[F(R#@@@AP#@@@ AF @@]&9)@@[CEC@@[H'@@@[R#D)@@A#A)@@8 @[F&&9K@@@&9)@@@DT
)@@G@@R#@@@AP#@@@ AR @@@G[)@@G(O#@@@/K@[F7OO3@@@OPP@@@/K@[C6 0A@@@ SA@@@/K@[FPDU
)@@G@@ O @@@[D)H!:R')H0J/,0@%]R#@H@/R#K@@GO;K@@[A#KH!0C@)H,KT8)@@ T8)@@OG@@@@IDV
)@@G@@A#@H@/'=@@@<R#@H@/R#K@@GO;K@@[A#KH!\C8)@@*G@@@@IA#@H@/'=@@@<9?@H,T9*@H,XDW
)@@G@@9?@H,V9*@H,Z @@H0, @@H,W @@H,I @@H0* @@H,E @@H,HR])H!,/,0['>R#@H\6C@KH!,DX
)@@G@@:@H@@@/K@[U5(@H@@@/K@[KHC@@H!,RZW@@[R')H!:/,0[Y_*@@@@I'^@[,BR[K@@GA[KH!/DY
)@@G@@C@@H!,R#G@@@'^@@=8/^K[G,(@@H,B'^@[,GC@KH,B9*KH!49*0H!6RF5@@#(@@@@J/K@[G"DZ
)@@G@@P;0@@[R[)@@ OD&@@]:SQ@@@/K@[G;O9)@@[8#0[G6/K@[G"COQ@@@C8@@@[[@@H,EC@@H!,EA
)@@G@@C!W@@[+[KH\7/ )[K;C@@H,E/^@[HB(@@H,B'^@[,LR#KH,BA#KH!8'^@[Y0/^@[X_A[)H!.EB
)@@G@@R')H[]/,0[Y_*@@@@I'^@[,QA#@H!;C@)H!/C*,@@@:8)@@[/K@[SI(@@H,S/K@[H* @@H,SEC
)@@G@@R#@H,QA#@H,FR#@H,RA#@H,G:@KH,F/K@[H%C@KH,F'^@[Y0/^@[H5A[)H!.R')H[]/,0[Y_ED
)@@G@@/@)[H>'^@[,Q[@@H!;[@KH!8/K@[H%%@KH,F/K@[H6RB&@@]R#@H,G!@)@@G/K@[H\/K@[H6EE
)@@G@@?^A@@[/K@[H6AFA@@#R;@@@[A#@H,H/K@[I#C@KH!8*^A@@#/K@[I#R')H,TR;@@@AABE@@@EF
)@@G@@AZU@@[R#@H!.ABE@@]/,0[="*C@H,T'^@[,%'^@[KB/K@[I %@KH,]/K@[I?R#KH,]A#KH!8EG
)@@G@@C@@H!,RZ?@@[:@)H,#/K@[IG[@)H,#*@@H,H/K@[JHRB6@@#%@0H,^/K@[I/R#0H,^A#0H!9EH
)@@G@@R]KH,ARED@@]O]@@@DP'@@@[PED@@AA]@H0BC@@H!,RR/@@[R#)H!/*WI@@[/K@[I%R]0H!.EI
)@@G@@CTF@@@/,0[ZJA#)H,J/^)[J(/,0[Z'A#KH!'Q@KH!,O8K@@[RRL@@@/,0[-$/K@[JJCXI@@[EJ
)@@G@@/K@[I)R')H,TAZU@@[*@@H,H/K@[I'RB&@@#AB%@@[R;@@@[ABE@@@A %@@]/,0[="*C@H,TEK
)@@G@@/K@[J*'^@[KB/K@[I RF&@@#/K@[I1R')H,TAZU@@[AB'@@[R;@@@[ABE@@@A %@@]/,0[="EL
)@@G@@*C@H,T'^@[,V%@0H,^'^@[,)'^@[KBR#@H,AO;@@@[*?G@@@'^@[,>/K@[ILRF6@@#/K@[IJEM
)@@G@@9?KH!8R#0H!''^@@>Q(@@@@G'^@[,\A#@H,DA#@H,,C@@H!,R#G@@@A#@H,!R')H,%/,0[B+EN
)@@G@@*@@H,\'^@[,4R#@H,^A#@H,GR#@H,]A#@H,FR#@H!"O;@@@[A#@H!"C@@H!_G8@@@[[@@H!_EO
)@@G@@/K@[GH'^@[,9R')H,TR#@H,]AZE@@[R#KH,^ABU@@[R;)@@BAB%@@@C@)H!.[^%@@]/,0[="EP
)@@G@@*C@H,T/K@[J7'^@[KB/K@[I C/@HA7/,0@HSC8@H1PC8K@@=/,0@I(C@@H,#/,0@J=C/@@@(EQ
)@@G@@/,0@I[C@@H,#/,0@JJC/@@@)/,0@I[R#@H!>'=@@@I'^@[,"@@@@@@C@@H,AC?G@@[%8@@@@ER
)@@G@@'^@[3L/K@LKBC@)H!,RZI@@[%8@@@[/K@[KOR#Y@@]A#KH,B/K@[GH%8@@@#/K@[K0R#Y@@]ES
)@@G@@A#KH,!R')H,%/,0[@N*@@H,\/K@[K!(C@H,,/K@[K!R#@H,,'^@@=8C]@@@HC[0@@I'^@[?-ET
)@@G@@:8)@@[/K@[K* @@H,R[]@H,Q/K@[K%[]@H,Q[[0H,RR;@@@[A#@H,S/K@[GHC@@H!,R#G@@]EU
)@@G@@/K@[KZ%8@@@^/K@[K8C8)@@[[0)H\;C@@H!,C@W@@][@KH\//K@[GH%8@@@]/K@[GH/K@[GHEV
)@@G@@RB>@@^AB)[LQR@)H!&R\ @@@(@@@@G'^@[\#P;@@@[R[)@@ O9)@@D&9)@@[R#Q)@@A#M)@@EW
)@@G@@8#@[L R#@[L+A#]@@@(@@H,B'^@[\CR#KH,BR')H[]/,0[Y_*@@@@I'^@[\HO;@@@[9??@@@EX
)@@G@@9*)H\8R')H\8R#)@@ /,0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EY
)@@G@@@@@@@@@@@@@@@@@@@@/K@[L<[B0H0M;F0@@M[B0H0L[B0H,G(C@H[]'^@[!.Q KH[]&9K@@DEZ
)@@G@@P9K@@D9?%@@@CC@H[];G@@@=W8@@@D*@@@@H'^@[3GN@K@@G2@>)@E'^@[\M%@5@@]/K@[L3FA
)@@G@@CWP@@@A[KH!;A#KH!8A#KH,FR[KH!/C@@H!,RZW@@[R[)@@ OT&@@[R@K@@AP8K@@[RB[@@@FB
)@@G@@P;@@@[R#KH!8:OQ@@@/K@[MEO5&@@@8#@[M '^@[\RA[)H!.R#0H0L/@0[YX?^6@@['^@[\WFC
)@@G@@C A@@]G9@@@[?@0@@K/K@[MO'^@[\-R#KH!8%@KH,]/K@[M-R#KH,]A#KH!8C@)H!,RZ,@@[FD
)@@G@@%@)H,#/K@[O-R#0H0L%@0H,^/K@[M-/K@[M!R')H,TR#KH!8AZU@@[AB'@@[R;@@@[ABE@@@FE
)@@G@@A %@@]/,0[="*C@H,T'^@[\&'^@[KB/K@[MRR#KH!8R#)H0LR#0H0M'^@@>Q(@@@@G'^@[\:FF
)@@G@@A#@H0NR]KH,A*@@H0M/K@[M'O'K@@BA]KH0Q/K@[M"RED@@]O]@@@DP]@H0MA]@H0QR]KH0QFG
)@@G@@P]KH,AA]KH0PR]KH,ARED@@]O]@@@DP'@@@[PED@@AA]@H0BC@)H!,RR"@@[R#)H!/*WI@@[FH
)@@G@@/K@[O<R]0H!.CTF@@@/,0[ZJA#)H,J*@@@@I/K@[OD/,0[Z'A#KH!'C@@H!,R@K@@GO8K@@[FI
)@@G@@RRW@@[/,0[-$R#KH,^A#KH!9A#KH0T9?KH!8R#0H!''^@@>Q(@@@@G'^@[\0A#@H,DA#@H,,FJ
)@@G@@C@@H!,R#G@@@A#@H,!R')H,%/,0[B+*@@H,\'^@[\5RB@H!'R]@H,AOEC@@]P]@@@GR[0H,AFK
)@@G@@O 8@@@R#K@@B!@K@@C'^@[\'RZR@@@'^@[=^*@@@@I'^@[\_A@KH0RO[0@@[R]0H0Q(@F@@@FL
)@@G@@/K@[O#R]0H0QC[F@@@[[B@@@C[KH,DR]0H0Q[[V@@@/K@[S@C[@H0N[[B@@@C[KH,DR]0H0QFM
)@@G@@[[V@@@/K@[S@C[KH,A[[KH0SC[)H,^[[)H0TR]0H0QC[;@@@[[0H0X(@@@@N/K@[QA[[0H0YFN
)@@G@@C8@@@[[@@H0&R#@@@N'^@@=89*KH0Z9*0H0-%@)H,^/K@[PEC[0H0Y:[0H0N/K@[O>'^@[+^FO
)@@G@@ @@H0&/K@[OQA#)H,#/K@[MXCXI@@[/K@[NIR;@@@[A#@H0=R')H,TC]KH,][YU@@[C')@@#FP
)@@G@@[A%@@@C]0H,^[A'@@[R[)H!.A %@@]/,0[="*C@H,T/K@[R_C]0H,^R]KH,AR\D@@[:8@@@[FQ
)@@G@@/K@[O.C8@@@@/^@[O;'^@[0^(^@H,W'^@[0^RED@@]O]@@@DP'@@@[PED@@AA]@H0BC@@H!,FR
)@@G@@RR/@@[C9@@[=/,0[ZJA#)H,J*@@@@I/K@[P8/K@[QDR#@H0)R')H,TRBKH0Z%@KH!8'^@[23FS
)@@G@@AZU@@[ABE@@[R;@@@ ABE@@@R#)H!.A %@@]/,0[="*C@H,T'^@[0DR]KH,AR\D@@[:8@@@[FT
)@@G@@/K@[PZC8@@@@/^@[PZ'^@[0IRED@@]O]@@@DP'@@@[PED@@AA]@H0BC@@H!,RR/@@[C9@@[=FU
)@@G@@/,0[ZJA#)H,J(@@@@I/K@[QD @@H0&R#0H0-'^@[+^'^@@=89*KH0Z9*0H0-:@)H,^/K@[P?FV
)@@G@@C[0H0Y%[0H0N/K@[PER;@@@[A#@H0=R')H,TC]KH!8[YU@@[C')@@][A%@@@C]0H,^[A'@@[FW
)@@G@@R[)H!.A %@@]/,0[="*C@H,T/K@[R_C]0H,^/K@[O4R;@@@[A#@H0>/K@[O$R]KH,ARED@@]FX
)@@G@@O]@@@DP'@@@[PED@@AA]@H0BR#@H,^A#@H!9C@@H!,RR/@@[C9@@[=/,0[Z'A#KH!'C@@H!,FY
)@@G@@Q8W@@[RRW@@[/,0[-$9?KH!8R#0H!''^@@>Q(@@@@G'^@[0NA#@H,D'^@[=LR#@H,DA#@H,,FZ
)@@G@@C@@H!,R#G@@@A#@H,!R')H,%/,0[B+*@@H,\'^@[0SC@KH!,RZX@@['^@[=^*@@@@I'^@[0XGA
)@@G@@A@KH0RR]KH,AR]@@@DOEC@@]P]@H!'OAS@@@A]KH0OO]KH0R(@@H0>/K@[RGR#@H0NA#D@@@GB
)@@G@@R')H,TR#KH!8R#0H0LAZU@@[AB'@@[R;@@@[ABE@@@R#@H!.ABE@@]/,0[="*C@H,T'^@[0+GC
)@@G@@R[KH,AO[KH0PR#@H,DA# @@@/K@[S@R]KH0OO]KH0R*@@H0&/K@[R7R#@H0YA#D@@@R')H,TGD
)@@G@@R#KH!8AZU@@[R;@@@ ABE@@@R#@H!.A#E@@]*@@H0</K@[R(R#0H0%AB'@@[/,0[="*C@H,TGE
)@@G@@'^@[0$R]KH,AR]@@@DOEC@@]P]@H0!OAS@@@O]KH0?R#@H,DA#D@@@/K@[S@R#0H0UA#'@@[GF
)@@G@@/,0[="*C@H,T'^@[0?R]KH,AR]@@@DOEC@@]P]@H0WO]S@@@O]KH0?R#@H,DA#D@@@/K@[S@GG
)@@G@@C@@H0QC@/@@@%@0H0X'^@[01[@9@@@C[@H,D[[G@@@/K@[S@'^@[06C@@H,@G8@@@[[@@H,@GH
)@@G@@R#@H!"O;@@@[A#@H!" @@H0< @@H0& @@H0= @@H0> @@H01 @@H0\ @@H00/K@[GH(0@H\;GI
)@@G@@'^@[4HR')H,TC@KH!8[WU@@[CC)H\/[^%@@[[@)H!9C8@@@[[^E@@@R[)H!.A %@@]/,0[="GJ
)@@G@@*C@H,T'^@[4M'^@[KBR@0H!,CW#@@[:@@H,#/K@[S<[@@H,#R]KH,A%^(@@['^@[4WRED@@]GK
)@@G@@O]@@@DP'@@@[PED@@AAA@H0BRR3@@[C@)H!/C9@@[=/,0[ZJ[@)H,J*@@@@I'^@[4RC^0H\/GL
)@@G@@R]@H0BR]KH,A(@@@@J'^@[1Y(CD@@#/K@[TZ/,0[-P/^)[TZ&'@@@@O'@@@[N@0@@CC@@H0BGM
)@@G@@G8@@@[P#@@@COFD@@AN[@@@GC]S@@@+]KH0H/])[TIR]KH,AC@KH0BG8K@@[P#K@[#OFT@@AGN
)@@G@@ @@@@IR]@@[#/K@[T+C8@@@[+]KH05/])[TM'^@[4-+]KH06/])[TP'^@[4-[?@H\;[@@H02GO
)@@G@@R]@H0BR]KH,A/,0[Z'[@0H\.C@@@[#C4?@@@[C/@@@[4?@@@R]KH,AR]@H0B/,0[Z'C^0H\/GP
)@@G@@[@KH!'C@@H!,R@K@@GO8K@@[COW@@[/,0[-$C@KH,^[@KH!99?KH!8R#0H!''^@@>Q(@@@@GGQ
)@@G@@'^@[\0[@@H,D[@@H,,C@@H!,C@G@@@[@@H,!R')H,%/,0[B+*@@H,\'^@[\5(?@H\;/K@[U?GR
)@@G@@C/@HA7/,0@HSC8@H1:C8K@@Y/,0@I(CA0H\/C@@@@R/,0@J=C8@H10C8K@@L/,0@I(C@@H!8GS
)@@G@@/,0@J=C8@H13C8K@@B/,0@I(C@@H!9/,0@J=R#@H!>'=@@@IC/@HA7/,0@HSC8@H15C8K@@QGT
)@@G@@/,0@I(C@@@[^/,0@J=C8@H19C8K@@L/,0@I(R]@@[#R]KH,AOAS@@@CZD@@@C@@@@S/,0@J=GU
)@@G@@C8@H1/C8K@@I/,0@I(CBKH\/C@@@@T/,0@J=C8@H1_C8K@@^/,0@I(C@@H\./,0@J=R#@H!>GV
)@@G@@'=@@@IC@@H,[G8@@@[[@@H,[C@@H!"G8@@@[[@@H!" @@H\/ @@H\;/K@[GHR')H,TR;K@@CGW
)@@G@@ABU@@@/,0[="*C@H,T'^@[0;R')H,%/,0[^/*@@H,\'^@[1@R')H0J/,0@%] @@@@MR KH!:GX
)@@G@@R]@H!1AA@H[#R[)@@ OT>@@[R[0@@AP90@@[RB7@@@P;0@@[*@A@@#/K@[VNO5&@@@8#0[VFGY
)@@G@@(O @@@/K@[X^OPP@@@/K@[V  @A@@# @@H!3RRQ@@@AZS@@@R')H[]/,0[Y_*@@@@I'^@[1 GZ
)@@G@@9!/@@[9(8@@[R]K@@C&'K@@[O'K@@#(@A@@['^@[1EAZKH!3R[@H!?&9@@@]9,Q@@[9%O)@@HA
)@@G@@RB@H!3?8@@]Q/K@[V:'^@[2PO;@@@[AB@H!3(O @@@/K@[WFR@)@@ OO+@@@R@0@@]OS2@@[HB
)@@G@@R[0@@#P90@@[CB7@@@H;0@@[:ON@@@/K@[V_O43@@@8A0[V7(O]@@@/K@[WFOO+@@@/K@[V1HC
)@@G@@(@#@@#/K@[V99,N@@[9%O)@@RB@H!3?8@@]Q/K@[WB'^@[2PO;@@@[AB@H!3 @#@@#/K@[V9HD
)@@G@@(@@H!2/K@[WOC[0H!2H90@@[R@KH!!:OL@@@/K@[W/O8K@@]8^0[WK @@@@L'^@[?C*@@@@IHE
)@@G@@'^@[1JCAW@@@[ET@@@CA?@@['^@[?C*@@@@I/K@[W??A?@@@/K@[W=!A?@@[/K@[W<CA?@@[HF
)@@G@@/K@[WVH])@@PG')@@[[A()@@G9K@@[CAW@@@[ET@@@CA?@@[/K@[WVH])@@PG')@@[[A()@@HG
)@@G@@G9K@@[[TS@@@Q#@@@D&'@@@@A]@H,OP#@@@CARC@@@G[)@@G?9)@DS/K@[W''^@[3BOQC@@@HH
)@@G@@/K@[VHCEL@@[[]O@@@CA-@@[[]=)@[RB@H!3O;@@@[AB@H!3/K@[WMC@@H,O OG@@@[D)H[#HI
)@@G@@(@@H02/K@[XYC/@HA7/,0@HSC8@H2@C8K@@%/,0@I(R#@H!>'=@@@IC/@HA7/,0@HSC8@H2BHJ
)@@G@@C8K@@%/,0@I(R#@H!>'=@@@IC/@HA7/,0@HSC8@H2@C8K@@%/,0@I(R#@H!>'=@@@IC/@HA7HK
)@@G@@/,0@HSC@@H!"/,0@J=C8@H07C8K@@L/,0@I(/,0@H\R#@H!>'=@@@IC/@HA7/,0@HSC@@H!_HL
)@@G@@/,0@J=C8@H0'C8K@@E/,0@I(C@@H,@/,0@J=C8@H0/C8K@@E/,0@I(C@@H,[/,0@J=C8@H0"HM
)@@G@@C8K@@B/,0@I(C8@H07C8K@@L/,0@I(R#@H!>'=@@@I/K@X0KC/@HA7/,0@HSC8@H1@C8K@@QHN
)@@G@@/,0@I(C@)H!,CW,@@[[@)H,#C@@H,#/,0@J=C/@@@(/,0@I[C@@H,#/,0@JJC/@@@)/,0@I[HO
)@@G@@C8@H1^C8K@@A/,0@I(C@@H,B/,0@J=C/@@@(/,0@I[C@@H,B/,0@JJC/@@@)/,0@I[R#@H!>HP
)@@G@@'=@@@I'^@[1OC/@HA7/,0@HSC8@H1 C8K@@?/,0@I(C@)H!,CW,@@[[@)H,#C@@H,#/,0@J=HQ
)@@G@@C/@@@(/,0@I[C@@H,#/,0@JJC/@@@)/,0@I[R#@H!>'=@@@I'^@[1T@@@@@@R[)H!/OT&@@[HR
)@@G@@R@K@@AP8K@@[RB[@@@P;@@@[:OQ@@@/K@[Y.O5&@@@8#@[Y7C8@@@[/K@LY0 @@@@G/K@[Y/HS
)@@G@@AA0H0 (CE@@@/K@[ZFRBE@@@:WW@@@/K@[ZH(OG@@@/K@[ZDORG@@@/K@[Z#R;)@@[/K@[ZIHT
)@@G@@R;)@@]/K@[ZIR;)@@@/K@X0 AA0H0^9*@H\WA@KH\TA@)H\UA@0H\V/,0@.D9?@H\WR@KH\THU
)@@G@@R@)H\UR@0H\VRBT@@](@@@@H/K@[Z8R;@@[=P#@@@KC[@@@GRFT@@]P;K@@ET@K@@K;GK@@=HV
)@@G@@W8K@[=(@@@@I/K@[Z$G8K@@[RBD@@]P#@@@HR#K@@G?8K@@[/K@[Z89*0H0EA#KH0D/,0[)"HW
)@@G@@9?0H0ER#KH0D(@@@@I/K@[Z4O;0@@[?@K@@J/K@[Z8R;)@@@/K@[Z9R;)@@[/K@X0^AA0H\_HX
)@@G@@(CD@@#/K@[)\R]@H0B/,0[)"(@@@@I/K@[)*R;)@@[R[0H0B&90__" @@H0CRFT@@#P;K@@[HY
)@@G@@RF7)@@;*0@@S;C0@@S!@0H0C/K@[)Z8#K[)B*4D@@@/K@[)=RFT@@#?@KH0C/K@[)N/K@[)=HZ
)@@G@@R#0H0CP;K@@[P;0@@[A#KH0G:80@@[/K@[)-/,0[-P*@@@@I/K@[)3R#KH0G8#K[)P'^@[1<IA
)@@G@@A#0H0C/K@[)GR;@@@[A7D@@@/K@[)TR#0H0CO;0@@[A#0H0C/K@[)3R;)@@@RF8@@@;*0@@SIB
)@@G@@;C0@@S(@@@@J/K@[)]/K@[)3R;)@@[R;0@@[A79@@@/K@[)3!80@@[/K@[)6'^@[1*R#C@@@IC
)@@G@@&'@@@@R#KH0B&;K@@@O;K@@[P#K@@COFT@@A/K@X\_AA0H0@*0D@@@/K@[-I&'@__"RFT@@#ID
)@@G@@(@@@@H/K@[-FP;K@@[R#8)@@+@0H0H*@@@@K/K@[-M8#K[-AR;)@@[A3D@@@/K@[-OR;)@@[IE
)@@G@@R]@H0BPED@@#/K@[-OR;)@@@O'@@@[/K@X0@AA0H0[R]@H0B&'@__"RFT@@#(@@@@H/K@[-&IF
)@@G@@P;K@@[RFC)@@;*@@@S;C@@@S:@0@@G/K@[-=8#K[-WR;)@@[/K@[->R;)@@@/K@X0['^@[1!IG
)@@G@@AA0H0]C D@@](@@@@I/K@[-\RFD@@#O;@@@[AFD@@#H9@@@[AF8@@@R^9@@#A^8@@@R@)@@#IH
)@@G@@O@)@@DN@K@@H/,0[!PR;@@@[A\D@@@H[@@@H(@@@@K/K@[+[[ D@@]O@0@@HA^9@@#O@0@@DII
)@@G@@[[#@@@/K@X0] ^D@@] ^D@@#/K@X0]@@@@@@ @@H0<R]KH,AR]@@@DOED@@]P]@@@JR#S@@@IJ
)@@G@@+@KH0H*@@@@I'^@[12+@KH06*@@@@I/K@[+-R[0@@DO 8@@@RZR@@@'^@[=^*@@@@I'^@[17IK
)@@G@@R#@H,^A#@H0%A[0H0:A@KH0?R#@H0-A#@H0!O[0@@[R#B@@@A#@H0Y/K@L+^ABKH0UR#@H0-IL
)@@G@@A#@H0!;*K@@A;CK@@SABKH0VC 8@@@C]@H,]C#0H,MH;0@@[R[@H!\:Y^@@@/K@[+1O9@@@]IM
)@@G@@8A0[+?/K@[+"?D4@@[/K@[+,CA=@@[!])@@N/K@[+7/K@[+,R#@@@NPF^@@[RBO@@@TCH@@]IN
)@@G@@O#K@@GR[0@@H/K@[<LR#@H!;9?W@@[R#0@@KR')H,-A3'@@#9*KH,-C9@@@[[DE@@BCXW@@#IO
)@@G@@[DU@@CC@0H03/^0[<F'^@[!\AB'@@B[ '@@C/,0@9N*4@H,=/K@[:QR[0H03R[)@@BOD$@@]IP
)@@G@@P9)@@[PD$@@ACF7@@#(@@@@V'^@[1/H;0@@[R#6@@@+@0H0H(@@@@K/K@[<)P9)@@[8A0[<TIQ
)@@G@@'^@[2[R#A@@@+@@H05(@@@@H/K@[<=;*@@@A;C@@@S%@@H0V/K@[<XR@)@@BO^&@@@R#]@@@IR
)@@G@@+@@H04(@@@@H'^@[2AR@0@@]OO2@@@P80@@[R##@@@%@@H0Y/K@[<XRZM@@@R[@@@]'^@[=^IS
)@@G@@(@@@@I'^@[2FA@KH0?R#@H03OFG@@]P#@@@AA#@H0WR;@@@[A#@H0<O[@@@[R#^@@@A#@H0YIT
)@@G@@/K@L+^@@@@@@NCKH[ R@)H!$Q^)H[ 2WM)@@/K@[=JP8)@@[ @@@@IROM@@@P8K@@[/K@[=KIU
)@@G@@R;)@@[/K@L=^@@@@@@C[0H,^C]@H,]'^@[?-:8)@@]/K@[=Z:8)@@#/K@[=<C8@@@@/^@[=WIV
)@@G@@'^@[2K%8)@@['^@[2K/K@[=.C[)@@LHDS@@ G9K@@[/K@[=&C[)@@JC[K@@KG9K@@[R#KH!2IW
)@@G@@(@@@@H/K@[=9P;K@@[R[@H!!:Q^@@@/K@[=;O9@@@]8#K[=:[Q^@@@[ =@@[[DO@@[R#@H!2IX
)@@G@@?8@@[=/K@[=6'^@[2PO;@@@[A#@H!2/K@[=.R[@H!!/K@[=\% =@@[/K@[=!/K@L=LAA0H0AIY
)@@G@@^@KH\SA@KH\TA@)H\UN8K@@TR@KH!*R@)H!(M@-)@@C %@@@:9)@@[/K@[>Q:9)@@A/K@[:BIZ
)@@G@@:9)@@B/K@[:[:9)@@#/K@[(\:9)@@]/K@[*A:9)@@ /K@[%P:9)@@C/K@[%T/K@[:'C '@@[JA
)@@G@@CYE@@[R^'@@](@#@@[/K@[X_?[3@@[/K@[>-C]N@@]!]K@@N/K@[>1/K@[>-RB@H,T%8@@@BJB
)@@G@@/K@[::C@#@@]G8@@@[%@@@@N/K@[::*@@H,I/K@[:,C^E@@[[@@H,IC8@@@A[^E@@@C^E@@[JC
)@@G@@[CE@@#/K@[:B'^@[?-:8)@@[/K@[&#:8)@@]/K@[>9:8)@@#/K@[&D'^@[2UR')H,TC %@@@JD
)@@G@@:9)@@[/K@[&#G9K@@[![@@@L/K@[&['^@[2ZC[0@@L/K@[>RC^@H,T%8@@@B/K@[&E:[0H0,JE
)@@G@@/K@[:,/K@[&E'^@[2=(@@H,M/K@[:EC#0H,MH;0@@[R[@H!\:Y^@@@/K@[&OO9@@@]8A0[&JJF
)@@G@@/K@[&U?D4@@[/K@[&LCA=@@[!])@@N/K@[:R/K@[&LC]0@@N;I0@@=W'0@@ (@@@@R/K@[&>JG
)@@G@@T'0@@ *@@@@S/K@[&<H'0@@ G'0@@[/K@[&&C'0@@[R[KH!\O[KH,N(W @@@/K@[$BR >@@@JH
)@@G@@&D&@@]R;@@@ P;@@@[ @A)@@8#@[&,RZP@@@R')H[]/,0[Y_*@@@@I'^@[2(9?W@@[R;0@@CJI
)@@G@@R')H,-A3'@@#9*KH,-C  @@[HD @@[G9@@@[[DE@@BRB @@@ABE@@BTDG@@][DE@@CCDP@@[JJ
)@@G@@[ U@@C/,0@9N*4@H,=/K@[:PR#@H!;9?W@@[R;0@@KR')H,-A3'@@#9*KH,-C9@@@ [DE@@BJK
)@@G@@CW/@@#T[@@@J[DE@@CRB5@@@AB'@@BA#0H, [A'@@C[E5@@[C#@@@NH#@@@R/,0@9NR7@H,=JL
)@@G@@/@@[$Y%8@@@%/K@[:QR#KH, &FX@@]R;@@@ P;@@@[ @H)@@8#@[$+R#@H!8AZ @@@A#@H,]JM
)@@G@@RBKH,=;GK@@=W^KH,$*@@@@I'^@[2,G]0@@HH'0@@[[A5@@[[[0H,^R#0H!.*@@H,H/K@[*^JN
)@@G@@[ _@@#RB5@@@TFJ@@]O#0@@SA#0H,AC[@H,NG9@@@]%9@@@*/K@[$. @@@@K[[@H,NR#@H,MJO
)@@G@@:8@@@O/K@[*#O;@@@[A#@H,M/K@[:*[D_@@#/K@[$4C '@@[CYE@@[R^'@@]'^@[?-:8)@@[JP
)@@G@@/K@[%F:8)@@^'^@[28:8)@@#/K@[(E:[0H0\/K@[*T:[0@@L/K@[*Z*@@H0\/K@[*R[[0H0\JQ
)@@G@@G90@@[/K@[&EC@@@@LPFC@@ G8@@@[:@@@@N/K@[*M/K@[*1*@@H01/K@[*(C@@@@LPFC@@ JR
)@@G@@G8@@@[[@@H01:[0@@G/K@[*1(@@H0\[[0H0\*@@H0*/K@[*6HDS@@ G9K@@[:[KH0\/K@[*1JS
)@@G@@C[0@@L/K@[&EC@@H01[@@H0\R;@@@[A#@H0*C[KH0(%[K@@K/K@[*_ @@@@LG S@@^G9K@@[JT
)@@G@@:[KH0\/K@[(WC[0@@L/K@[&EG9K@@[G S@@^![@@@L/K@[(^'^@[3]C[0@@L'^@[?-%8)@@]JU
)@@G@@'^@[3)C[K@@N/K@[*;(@@H0\[[0H0\%[0@@J/K@[(SC[0@@K*@@H00/K@[(PC@@@@NG8@@@[JV
)@@G@@[@@H00/K@[(SC@@H0L[^@H,U/K@[%FG90@@[:[0H0\/K@[(P/K@[&EC8@@@@(@@@@G'^@[2.JW
)@@G@@(^C@@ /K@[(&CD8@@^H 8@@ G90@@[[[0H0\/K@[&ER')H,TC^E@@[[CE@@#C@@H0L[^E@@[JX
)@@G@@C8@@@B[^E@@@[^E@@#/K@[:[C '@@[CYE@@[R^'@@]'^@[?-%8)@@['^@[3Q(^C@@^/K@[%#JY
)@@G@@G9K@@[*@@H0\/K@[(;[[KH0\![@@@L/K@[("'^@[3VC[0@@L'^@[?-%8)@@]'^@[3)/K@[&EJZ
)@@G@@(^C@@ /K@[%FC[0@@KG90@@[*@@H0\/K@[%E[[0H0\/K@[&EC8@@@@(@@@@G'^@[3>R')H,TKA
)@@G@@C^E@@@[CE@@#C8@@@B[^E@@@[^E@@#/K@[:[C '@@[CYE@@[R^'@@]/K@[&ER[KH!\C;0@@OKB
)@@G@@H;0@@[!;0@@@/K@[%Z'^@[3%(W @@@/K@[%"R >@@@&D&@@]R;@@@ P;@@@[ @A)@@8#@[%>KC
)@@G@@RZP@@@R')H[]/,0[Y_*@@@@I'^@[3\9?W@@[R;0@@CR')H,-A3'@@#9*KH,-C  @@[HD @@[KD
)@@G@@G9@@@[[DE@@BRB @@@ABE@@BTDG@@][DE@@CCDP@@[[ U@@C/,0@9N*4@H,=/K@[:PO9K@@]KE
)@@G@@8A0[%Z/K@[:*C '@@[*@@H0,/K@[: [[0H0,G90@@[/K@[>RR^'@@]C[3@@[/K@[>RR]@H!0KF
)@@G@@R]KH!\R;@@@OP;@@@[&'K@@]AAD)@@C]0H,KT'0@@ O]@@@R8#@[:J/K@[&U'^@[34'^@[39KG
)@@G@@[[0H,^[]@H,]R#KH!.*@@H,H/K@[:&[ .@@#R#@@@NPF^@@[A#@H,CRBO@@@A#KH, TCH@@]KH
)@@G@@O#K@@GA#KH,A/K@[:*[D.@@#/K@[:XR;@@@@AF@H,T/K@[?@R;@@@[AF@H,T/K@[?@R;@@@]KI
)@@G@@AF@H,TC/@HA7/,0@HSC8@H1PC8K@@=/,0@I(C@@H,#/,0@J=R#@H!>'=@@@I/K@[?@R;@@@#KJ
)@@G@@AF@H,T/K@[?@R;@@@^AF@H,T/K@[?@N8K@@TR@KH!(R@)H!*M@-)@@N@KH\SR@KH\TR@)H\UKK
)@@G@@/K@X0A@@@@@@C'0Z__RB)H!3P;)@@[R#@H!? @@@@TC7G@@@%;@@@B/K@[?WO;@@@]8#)[?IKL
)@@G@@(@@@@T/K@[?UC;@@@BR#@@@T[7G@@@ @@@@I/K@[?VR;)@@[/K@L?C?A/@@@/K@[?LCA/@@@KM
)@@G@@C#K@@G/K@[?L@@@@@@R#K@@OR')H[]/,0[Y_*@@@@I'^@[3"R]@@@GRF8@@^CDC@@^H C@@ KN
)@@G@@ @@@@L(^C@@^/K@[?_G S@@^:[@@@L/K@[! ?[@@@L'^@[4#?[K@@N/K@[?6/K@[!FGDS@@ KO
)@@G@@:[K@@K/K@[!C?[@@@L'^@[4C?[K@@N/K@[?"/K@[!H/K@[?,?[@@@N/K@[!]/K@[!F?@0@@NKP
)@@G@@/K@[!L/K@[!J?[K@@N/K@[!]/K@[!F?[K@@N/K@[!]/K@[!HR;)@@[/K@[!NR;)@@]/K@[!NKQ
)@@G@@R;)@@#/K@[!NR;)@@^/K@[!N[[KH0(/K@L?-AA0H0#&8K@@[&8)@@[M@-)@@/K@X0#@@@@@@KR
)@@G@@(C@H[]'^@[3" @@@@HC^@H[]C @H[]GD@H[]CW?@@#!@K@@I/K@[!>C@K@@I(OG@@@/K@[!:KS
)@@G@@GOG@@@!@@@@K'^@[3G/K@[!-(@@@@H'^@[3G[@KH,K/K@L!U@@@@@@9*@H\4R#@H!%'=@@@IKT
)@@G@@C@@H,KC@KH@/G8K@@[[@KH03C@0@@HG@@H@/[@@H@/'=@@@<9?@H\4/K@L!\@@@@@@C@@[!.KU
)@@G@@'^@[4&C8@@@['^@[4'@@@@@@C@@[,]'^@[4&C8@@@]'^@[4'@@@@@@C@@[,B'^@[4&C8@@@#KV
)@@G@@'^@[4'@@@@@@C@@[,G'^@[4&C8@@@^'^@[4'@@@@@@C@@[,L'^@[4&C8@@@ '^@[4'@@@@@@KW
)@@G@@C@@[,Q'^@[4&C8@@@A'^@[4'@@@@@@C@@[,V'^@[4&C8@@@B'^@[4'@@@@@@C@@[,)'^@[4&KX
)@@G@@C8@@@C'^@[4'@@@@@@C@@[,>'^@[4&C8@@@D'^@[4'@@@@@@C@@[,%'^@[4&C8@@@E'^@[4'KY
)@@G@@@@@@@@C@@[,\'^@[4&C8@@@F'^@[4'@@@@@@C@@[,4'^@[4&C8@@@G'^@[4'@@@@@@C@@[,9KZ
)@@G@@'^@[4&C8@@@H'^@[4'@@@@@@C@@[,"'^@[4&C8@@@I'^@[4'@@@@@@C@@[\#'^@[4&C8@@@JLA
)@@G@@'^@[4'@@@@@@C@@[\C'^@[4&C8@@@K'^@[4'@@@@@@C@@[\H'^@[4&C8@@@L'^@[4'@@@@@@LB
)@@G@@C@@[\M'^@[4&C8@@@M'^@[4'@@@@@@C@@[\R'^@[4&C8@@@N'^@[4'@@@@@@C@@[\W'^@[4&LC
)@@G@@C8@@@O'^@[4'@@@@@@C@@[\-'^@[4&C8@@@P'^@[4'@@@@@@C@@[\&'^@[4&C8@@@Q'^@[4'LD
)@@G@@@@@@@@C@@[\:'^@[4&C8@@@R'^@[4'@@@@@@C@@[\0'^@[4&C8@@@S'^@[4'@@@@@@C@@[\5LE
)@@G@@'^@[4&C8@@@T'^@[4'@@@@@@C@@[\''^@[4&C8@@@U'^@[4'@@@@@@C@@[\_'^@[4&C8@@@VLF
)@@G@@'^@[4'@@@@@@C@@[0^'^@[4&C8@@@W'^@[4'@@@@@@C@@[0D'^@[4&C8@@@X'^@[4'@@@@@@LG
)@@G@@C@@[0I'^@[4&C8@@@Y'^@[4'@@@@@@C@@[0N'^@[4&C8@@@Z'^@[4'@@@@@@C@@[0S'^@[4&LH
)@@G@@C8@@@)'^@[4'@@@@@@C@@[0X'^@[4&C8@@@-'^@[4'@@@@@@C@@[0+'^@[4&C8@@@+'^@[4'LI
)@@G@@@@@@@@C@@[0$'^@[4&C8@@@<'^@[4'@@@@@@C@@[0?'^@[4&C8@@@='^@[4'@@@@@@C@@[01LJ
)@@G@@'^@[4&C8@@@>'^@[4'@@@@@@C@@[06'^@[4&C8@@@&'^@[4'@@@@@@C@@[0;'^@[4&C8@@@$LK
)@@G@@'^@[4'@@@@@@C@@[1@'^@[4&C8@@@*'^@[4'@@@@@@C@@[1 '^@[4&C8@@@('^@[4'@@@@@@LL
)@@G@@C@@[1E'^@[4&C8@@@%'^@[4'@@@@@@C@@[1J'^@[4&C8@@@:'^@[4'@@@@@@C@@[1O'^@[4&LM
)@@G@@C8@@@?'^@[4'@@@@@@C@@[1T'^@[4&C8@@@!'^@[4'@@@@@@C@@[1Y'^@[4&C8@@@,'^@[4'LN
)@@G@@@@@@@@C@@[1<'^@[4&C8@@@\'^@[4'@@@@@@C@@[1*'^@[4&C8@@@0'^@[4'@@@@@@C@@[1!LO
)@@G@@'^@[4&C8@@@1'^@[4'@@@@@@C@@[12'^@[4&C8@@@2'^@[4'@@@@@@C@@[17'^@[4&C8@@@3LP
)@@G@@'^@[4'@@@@@@C@@[1/'^@[4&C8@@@4'^@[4'@@@@@@C@@[2['^@[4&C8@@@5'^@[4'@@@@@@LQ
)@@G@@C@@[2A'^@[4&C8@@@6'^@[4'@@@@@@C@@[2F'^@[4&C8@@@7'^@[4'@@@@@@C@@[2K'^@[4&LR
)@@G@@C8@@@8'^@[4'@@@@@@C@@[2P'^@[4&C8@@@9'^@[4'@@@@@@C@@[2U'^@[4&C8@@@''^@[4'LS
)@@G@@@@@@@@C@@[2Z'^@[4&C8@@@;'^@[4'@@@@@@C@@[2='^@[4&C8@@@/'^@[4'@@@@@@C@@[2(LT
)@@G@@'^@[4&C8@@@.'^@[4'@@@@@@C@@[2,'^@[4&C8@@@"'^@[4'@@@@@@C@@[23'^@[4&C8@@@_LU
)@@G@@'^@[4'@@@@@@C@@[28'^@[4&C8@@[@'^@[4'@@@@@@C@@[2.'^@[4&C8@@[['^@[4'@@@@@@LV
)@@G@@C@@[3]'^@[4&C8@@[]'^@[4'@@@@@@C@@[3B'^@[4&C8@@[#'^@[4'@@@@@@C@@[3G'^@[4&LW
)@@G@@C8@@[^'^@[4'@@@@@@C@@[3L'^@[4&C8@@[ '^@[4'@@@@@@C@@[3Q'^@[4&C8@@[A'^@[4'LX
)@@G@@@@@@@@C@@[3V'^@[4&C8@@[B'^@[4'@@@@@@C@@[3)'^@[4&C8@@[C'^@[4'@@@@@@C@@[3>LY
)@@G@@'^@[4&C8@@[D'^@[4'@@@@@@C@@[3%'^@[4&C8@@[E'^@[4'@@@@@@C@@[3\'^@[4&C8@@[FLZ
)@@G@@'^@[4'@@@@@@C@@[34'^@[4&C8@@[G'^@[4'@@@@@@C@@[39'^@[4&C8@@[H'^@[4'@@@@@@MA
)@@G@@C@@[3"'^@[4&C8@@[I'^@[4'@@@@@@C@@[4#'^@[4&C8@@[J'^@[4'@@@@@@C@@[4C'^@[4&MB
)@@G@@C8@@[K'^@[4'@@@@@@C@@[4H'^@[4&C8@@[L'^@[4'@@@@@@C@@[4M'^@[4&C8@@[M'^@[4'MC
)@@G@@@@@@@@C@@[4R'^@[4&C8@@[N'^@[4'@@@@@@C@@[4W'^@[4&C8@@[O'^@[4'@@@@@@C@@[4-MD
)@@G@@'^@[4&C8@@[P'^@[4'@@@@@@P;@@@[[@@H2KP;@[C#[@@H2LC/@HA7/,0@HSC8@H2MC8K@@-ME
)@@G@@/,0@I(C@@H2K/,0@JJC8@H2SC8K@@F/,0@I(C@@H2L/,0@JJR#@H2I'=@@@I/K@L4&@@@@@@MF
)@@G@@[@@H2JC/@HA7/,0@HSC8@H2UC8K@@G/,0@I(C@@H2J/,0@J=R#@H2I'=@@@I'=@@@)*@@H@)MG
)@@G@@'^@@!9AA0I#]R^KH[]C8@@@@?W[@@#CW[@@#(O[@@@/K@[5LOOL@@@/K@[5F @@I]7[@@I#^MH
)@@G@@T8@@@EC@KH@/G8K@@[[@KI]6G@@@@H'=@@@<[@@H@/N8K@@E @@@@GR8K@@GR@)I#RM@-)@@MI
)@@G@@'^@[5='^@[50'^@[59'^@[7F/K@[5Z@@@@@@R')H2W/,0['>C@@I#S:@@H2W/K@[82(@@H2WMJ
)@@G@@/K@[5>C@@I]BG8@@@[[@@I]B/K@L5=@@@@@@C@@H2W'^@@=8(@@@@H/K@[91[@KI]^[@)I] MK
)@@G@@[@0I]A/K@L50@@@@@@C@@I]^C@KI] ;*K@@M;?@@@MN8K@@ER@KI#R2@[)@@/K@[6DC8@@@EML
)@@G@@H@@@[[H8@@@[T@@I#^G@@I]6R]@@@G/K@L59C@@I]7*@GI]8'^@[6&CO@I]^'^@[6/(@@@@GMM
)@@G@@'=@@@)9*KI# [C@I#HC@@I] [^@I#HC@@I]7T@@I#^G@@I]6[^@I#GR')I# /,0@9N*4@I#CMN
)@@G@@'=@@@)C@@I]7C@KI]^[CWI]8C@KI] [^WI]8G8@@@[;G@@@=W8@@@E[@KI]7/K@[5'@@@@@@MO
)@@G@@R@KI]7CC[I]8'^@[6/(@@@@G'=@@@)9*KI#I[C@I#QR@KI]7C^[I]8[^@I#QC@@@@[T@@I#^MP
)@@G@@G@@I]6[^@I#PR')I#I/,0@9N*4@I#L'=@@@)R@KI]7 @[I]8/K@L6&@@@@@@CCKH[];GK@@=MQ
)@@G@@W8K@@DN@K@@HC^KH[]&;K@@D2WH)@@/K@[7DH8K@@DCWH@@#9?X@@[/K@L6/ @@@@G/K@[6/MR
)@@G@@@@@@@@CCC@@#GCC@@A?@@I]A/K@[95R[)@@COD*@@]P[)I]A(@A@@@/K@[950@A@@@/K@[95MS
)@@G@@C4A@@@+8@@@C*@@@@H/K@[7%R[0@@CO 6@@@CWB@@@%W@H2X/K@['A'^@[8QC^@H2X%^B@@@MT
)@@G@@/K@[99'^@[8<N^R@@@&90@@[R@KI#TM[1)@@/K@L7FC^@H2XG8@@@[[^@H2XC@KH2W[@WH2WMU
)@@G@@C?@H2X)8@@@K[?@H2XCCA@@@+8@@__[@KI##C^A@@@[@@I] CWC@@[[@@I]^'^@[59R[)@@CMV
)@@G@@OD*@@]PD*@@ANCS@@#P9)@@[8KK[8[/K@[9"0@A@@@/K@[7"C8@@@K+4A@@@/@K[7"CCA@@@MW
)@@G@@+8@@__%@KI##/K@[7"R[0@@CO 6@@@C8@@@K+?B@@@/@K[7"C^B@@@H8@@@[G@@@@BC@G@@@MX
)@@G@@%@@H2W/K@[7"/K@[7X@@@@@@RAKH[^:WD@@@/K@[8Y(OD@@@/K@[']OQT@@@/K@[8S(WD@@[MY
)@@G@@/K@L8QCWD@@[[W@H2X/K@L8Q@@@@@@COD@@[H8@@@[[@@I]CN@K@@GR@K@@BO8K@@[&8K@@[MZ
)@@G@@R@)I#U8KK[8,/K@L8<C@[)@@:@])@@/K@[8?/K@['E @@I]7R@KI]7*@[I]8'^@[6&C@@I]7NA
)@@G@@G8@@@[[@@I]7%8@@@E/K@[83C/@HA7/,0@HSC@@I]B/,0@J=C/@@@[/,0@IE9?@I#V/,0@IYNB
)@@G@@C/@@@[/,0@IE9?@I#X/,0@IY/,0@H\R#@I#Z'=@@@I/K@Y#]@@@@@@C/@HA7/,0@HS9?@I#)NC
)@@G@@/,0@IYC@@I#+/,0@IWC@@H2WC8K@@G/,0@JX9?@I#</,0@IYC@@H2XC8K@@G/,0@JX/,0@H\ND
)@@G@@R#@I#Z'=@@@I/K@L9F@@@@@@C/@HA7/,0@HS9?@I#>/,0@IYC@@I#+/,0@IWC@@H2WC8K@@GNE
)@@G@@/,0@JX9?@I#</,0@IYC@B@@@C8K@@G/,0@JX/,0@H\R#@I#Z'=@@@I/K@L9YR#@I#$'=@@@INF
)@@G@@'^@[9F/K@['=R#@I#*'=@@@I'^@[9F/K@['=R#@I#('=@@@I'^@[9F'^@[9Y/K@['=R#@I#%NG
)@@G@@'=@@@I'^@[9F/K@['=R#@I#:'=@@@I'^@[9F/K@['=R#@I#?'=@@@I'^@[9F/K@['=R#@I#!NH
)@@G@@'=@@@I'^@[9FC@@I]C[C@['O[@@['PC8@['N'=@@[Q/K@['QNEWPTR@@EH2Y@@@@@@'^@[9YNI
)@@G@@C@@I]C[C@['-C@@@@BO;@@@[[^@['-[@@['+C8@[')'=@@[Q/K@['<OLDPTR@@EH2W@@@@@@NJ
)@@G@@/K@['='=@@@)(@@IIO/K@[;:C@@IJ C@WIJA(CH@@@'^@['/C@@IJ R]GIJAC@KIJCG@K@@CNK
)@@G@@&;K@@[&')@@[CCH)@@N@K@@GN@0@@GG8@@@[G@@IJC[@@IJCM]!)@@CCC@@@H8@@@[[CC@@@NL
)@@G@@/KF@@@@@@@@@C@@IJ4/G@[/]/^@[;D0@@IJH'=@@@AC8@@@[[@@IJCH@@IJ [@@IJ C@@IK,NM
)@@G@@[@@IJ4/K@L'/'^@[;LC@@IJ4H8@@@[[@@IJ4/K@L'/C@@IK\[@E@@@/KF@@@@@@@@@0@@IJHNN
)@@G@@'=@@@A*@@IIP'^@["]C8@@@[H@@IJ R]GIJAC^S@@@ @@@@GW8@@@W*@@@@HG8@@@[G@@IJDNO
)@@G@@[@@IJD[@@IJJC@@IJ C@WIJA[^KIJIC8@@@[[@@IJCH@@IJ [@@IJ C8@IJE'=@@@[/K@L;LNP
)@@G@@C@@H@/K8@@@[[@KIJAG8K@I@[@KIJBG8@@I@G8@@I@[@@H@/'=@@@<C8@@@[[@@IIO(@@H[LNQ
)@@G@@/K@[/[RA@H[L&'@@@[NCKH[L8KK[;./K@[/[C8K@@EPRS)@@[4HIID/K@[;; @@IK!C@@IK!NR
)@@G@@G8@@@[[@@IK!:8@@@F/K@[;I(4GIID/K@[/]C^GIIDG@@@@G9?WIKN9*KIKK9*KIJE9*KIJKNS
)@@G@@ @@IJ C8@@@[[@@IJCC8@IKI'=@@@J/C@[/SR')IKI/,0@/S'=@@@)9?@IJK9*@II8C@@IK0NT
)@@G@@'=@@@U @@IIP @@@@HC8)@@JC8@@@[\4KII"[@@IIP(@@IIP/K@[/&C@@IK1'=@@[YC8@IJKNU
)@@G@@'=@@@#*4@IJN'=@@@)*@@IIP'^@[.1'^@[.]CC@IJR[C@IJIC@@IJA @G@@@C@@IJB @G@@@NV
)@@G@@ @@IJ C8@@@][@@IJD 4@IJH'^@[;L0@@IJH'=@@@A*4@IJH'=@@@)C@@IJ4H8@@@[[@@IJ4NW
)@@G@@'^@['/ @@IJ /K@['>@@@@@@A]0IK?*@@IIP/K@[.TC/@HA7/,0@HSC@@IJ4/,0@J=C8@IK$NX
)@@G@@C8K@@D/,0@I(C@@IJ5/,0@J=C8@IK(C8K@@G/,0@I(9?@IJE/,0@IY/,0@H\R#@IK2'=@@@INY
)@@G@@R]0IK?/K@L.]C/@HA7/,0@HS9?@IK3/,0@IYC/@@@[/,0@IE9?@IJE/,0@IYC/@@@[/,0@IENZ
)@@G@@C@@IK5/,0@IWC/@@@[/,0@IEC@@IK6/,0@IWC/@@@[/,0@IE9?@IK7/,0@IYC@@II7C8K@@#OA
)@@G@@/,0@J>/K@[.O@@@@@@C@@II7O;@@@[[@@II7%^@IJV'=@@@)C@@IJQ%@@IK9'=@@@)C8@]G*OB
)@@G@@[@@IJ4C8@IJK'=@@@#C4@IJN:8@@@[/K@L.1'=@@@)@@@@@@C4@IJH/@@L"]%8@@@['=@@@)OC
)@@G@@9?@IJE9*@IIQC8@IIQ'=@@@#*4@IIT'=@@@)C@@IIV:@@IK'/K@[/]%@@IK;'=@@@)C@@IK1OD
)@@G@@'=@@[X/K@[/&@[IHA.@@[[LR@@[@@@@@[@@#@@[H\V@[DH1V@@@@@@@@@@@@@@@@@@@@@@@@OE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@E/@@@@@@OH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@______@@@@@)@@@@@@@@@@@@@@@@@@@@@@@@OI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@@@@NC@@@@OC@@@@@@@@@@@@@@@@@@@@@@@@@@@@OK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@C@@@K@@@@@C@@@@@ RECORON
)@@G@@DS RELOADED  VIA SET,    CALC AND    DIRECT     NO PAGE RANGE, RECORD   OO
)@@G@@ AREA  PGE# RETURNED BY CALC IS 0,   RECORD CODE      CANNOT RELOAD IN AOP
)@@G@@REA RETURNED BY CALC, RECORD  NO MORE SPACE AVAILABLE,  RECORD:   FOREIGOQ
)@@G@@N RECORD ON CALC CHAIN, WILL MCORE FOR BUFFER   C TABLE SEARCH FAILURE FOR
)@@G@@OR CODE:     AREA WARNING: DIRECT RECORD NUMBER  COLLISION, AREA  , PAGEOS
)@@G@@      RECORD NUMBER OF SLOT    FOR RECORD CODE   CHANGED FROM      TO   OT
)@@G@@******************************************* WARNING: POSSIBLE RELOAD PROOU
)@@G@@CESS ERROR *@[IHA.@@@@@@@@@@@@@@@@@@RELOAD ERROR, ABSOLUTE LOCATION:    OV
)@@G@@ RELATIVE:  ERROR CODE: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@** RECORD DBP NOT OW
)@@G@@VALID ** RECORD DBP POINTS TO AN UNUSED SLOT    ** RECORD LENGTH NOT MATOX
)@@G@@CHED  ** SLOT IN FOREIGN PAGE CANNOT BE FOUND   ** RECORD CODE CANNOT BEOY
)@@G@@ IDENTIFIED ** RECORD CODE MUST BE MODIFIED BY RESTORE SUBCOMMAND.** SETOZ
)@@G@@/CALC POINTERS CANNOT BE CHANGED    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@PA
)@@G@@@@@@@@@@@@@@@K@@@@@@@@@@@@@@@@@@@@@@@@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@C@@@@PB
)@@G@@@@@@@@@@@@@@@@@@@@@@[@@@@@@@@@@@[I]8______@@[H2X@@[H2Y@@@@@RECORDS@@@@REPC
)@@G@@STORED@[GHA.@@@@@NEW-ID:@@DBP-@@@@,HEADER-@@@@@OLD-ID:@[^I]D@[BI]H@[ I]OPD
)@@G@@@[BI]T@[AI])@[DI]&@[BI]\*CALC*BF2-85C#0@@H;G@@@M @@@@UW#)@@G;CK@@MG#0@@HPE
)@@G@@ @@@@TW#K@@S;:)@@M;$)@@MC@F)@@/KF@@@ @@@@G @@@@S @@@@T @@@@U @@@@VC@K@@RPF
)@@G@@;?@@@GC@0@@G @@@@G;?@@@A;CK@@M @@@@M @@@@AH8@@@[')GI^:;(K@@Y;!@@@AG8@@@[PG
)@@G@@:8@@@A @@@@G(@@@@GG8K@@[G9)@@[:9)@@A/!KI^TH80@@[/^0I^E/!KI^T/KB@@@D[)@@MPH
)@@G@@G9)@@AT9)@@AR@0@@M @@@@M;(#@@@')AI^+O9)@@[/K @@@C#@@@KC#K@@KC#)@@KC#0@@KPI
)@@G@@N@)@@KN@0@@K/S@@@@/S@@@@/S@@@@C5X@@@C1X@@@C!X@@@C(X@@@C>X@@@C-X@@@C[K@@GPJ
)@@G@@C9)@@  @@@@H @@@@K;!@@@A/[@I^":9@@@ /K@I^"H9@@@0E@0@@K+80@@JT8K@@EG@K@@KPK
)@@G@@8^)I^4/KB@@@R]@@@ICTS@@[/[KI MO]@@@L/@@I F:OC@@@/K@I FC5S@@@/[KI MO]@@@LPL
)@@G@@/K@I  C[S@@]H[S@@[G9K@@[C@@@@L&#C@@[;@@@@M/KB@@@C@@I O/KB@@@@@[@@@CD@H[]PM
)@@G@@ @@@@JW80@@D/@0I >9!E@@@R^KH[]&8K@@D8#0I X9.[)@[8#0I X/G0I >P@KI *CW[@@@PN
)@@G@@[WE@@]A^U@@]/KB@@@C8@@__ @E@@]/KB@@@@@D@@D&'0@@[C];@@@/!0I#/C@@@@S/!0I^1PO
)@@G@@/!0I P/!0I @C#@I 5/K@I#0&'0@@]C];@@[/K@I :@@@@@ &'0@@[C];@@@/!0I#/C[K@@SPP
)@@G@@C8K@@# @@@@G @@@@K;!@@@AH9@@@AE@0@@KC[JIAAT8@@@HG@@@@K8#KI /C@K@@G/K@IA>PQ
)@@G@@@@@@@@@@@@@@@@@@@[@@@@@[@@@@@]@@@@@]@@@@@#@@@@@#@@@@@^@@@@@^@@@@@ @@@@@APR
)@@G@@@@@@@ @@@@@B@@@@@C@@@@@A@@@@@B@@@@@D@@@@@E@@@@@F@@@@@C@@@@@G@@@@@D@@@@@EPS
)@@G@@@@@@@F@@@@@G&'0@@[C];@@@/!0I#/C@@@@S/!0I^1/!0I P/!0I @C#@IA7/K@I#0&'0@@]PT
)@@G@@C];@@@/!0I#/C@@@@S/!0I^1C[0@@HC];@@[/!0I#/C@@@@S/!0I^1G90@@[G8K@@[T@K@@NPU
)@@G@@/K@IA>@@@@@ &'0@@[C];@@@/!0I#/C@@@@S/!0I^1/!0I P/!0I @C#@IB[/K@I#0@@@@@[PV
)@@G@@&'0@@[C];@@@/!0I#/C@@@@S/!0I^1/!0I P/!0I @C#@IB?/K@I#0/!0I P/!0I @R@K@@GPW
)@@G@@&'0@@]C];@@@/!0I#/C@@@@S/!0I^1C[0@@HC];@@[/!0I#/C@@@@S/!0I^1 @@@@GW8@@@OPX
)@@G@@T90@[=G@@@@NC[0@@H;G@@@=C[@@@[;H@@@M;DK@@MW@@@@KG@K@@LC#0@@HC@K@@N @@@@GPY
)@@G@@W@@IB?C#)@@H;:)@@M;$)@@MC@F)@@/KF@@@@@@@@#&'0@@[C];@@@/!0I#/C@@@@S/!0I^1PZ
)@@G@@/!0I P/!0I @C#@IDN/K@I#0&'0@@^C];@@[/!0I#/C@@@@S/!0I^1C[0@@HC@@@@T/!0I^1QA
)@@G@@/@KIC]!8K@@ET8K@@ET8K@@EG@K@@N/K@IB2&'0@@]C];@@@/!0I#/C@@@@S/!0I^1C[0@@HQB
)@@G@@C];@@[/!0I#/C@@@@S/!0I^1G@K@@N/K@IB2&'0@@[C];@@@/!0I#/C@@@@S/!0I^1/K@IB2QC
)@@G@@&'0@@]C];@@@/!0I#/;J@@@GC@@@@T/!0I^1C[0@@HC@@@@S/!0I^1 @@@@GW@@IDNG@K@@NQD
)@@G@@/K@IB2&'0@@[C];@@@/!0I#/C@K@@S;CK@@Y/K@IB2&'0@@[C];@@@/!0I#/C[K@@SC8K@@#QE
)@@G@@ @@@@G @@@@K;!@@@AH9@@@AE@0@@KC[JIC9T8@@@HG@@@@K8#KIC\C@K@@G/K@IB2@@@@@@QF
)@@G@@@@@@@@@@@@@[@@@@@[@@@@@]@@@@@]@@@@@#@@@@@#@@@@@^@@@@@^@@@@@ @@@@@A@@@@@ QG
)@@G@@@@@@@B@@@@@C@@@@@A@@@@@B@@@@@D@@@@@E@@@@@F@@@@@C@@@@@G@@@@@D@@@@@E@@@@@FQH
)@@G@@@@@@@G@@@@@#&'0@@[C];@@@/!0I#/C@@@@S/!0I^1/!0I P/!0I @C#@IDX/K@I#0@@@@@ QI
)@@G@@&'0@@[C];@@@/!0I#/C@K@@S/K@IDT&'0@@[C];@@@/!0I#/C@@@@S/!0I^1C[0@@HC@@@@TQJ
)@@G@@/!0I^1/@KID2!8K@J*T90@@E!8K@[=T90@@E!8K@@ET90@@EG@K@@N/K@IDT&'0@@]C];@@@QK
)@@G@@/!0I#/C@@@@S/!0I^1C[0@@HC];@@[/!0I#/C@@@@S/!0I^1/K@ID:&'0@@[/K@IDO&'0@@[QL
)@@G@@C];@@@/!0I#/C@@@@S;G@@@/W8@@@ET8@@@]%8K@@]P;@@@[C@K@@G/K@IDT&'0@@[C];@@@QM
)@@G@@/!0I#/C@@@@S;C@@@Y+8@@@J/K@IDT&'0@@[C];@@@/!0I#/C@K@@S;CK@@Y/K@IDT&'0@@^QN
)@@G@@C];@@@/!0I#/C@@@@S/!0I^1C[0@@HC];@@[/!0I#/C@@@@S/!0I^1T90@[=G[0@@HC];@@]QO
)@@G@@/!0I#/C@@@@S/!0I^1T90@@EG[0@@HC];@@#/!0I#/C@@@@S/!0I^1T90@@BO#K@@N/K@IDTQP
)@@G@@&'0@@[C];@@@/!0I#/C@K@[#C@@@[];*@@@[)@@@@HC@@@@V;*@@@])@@@@HC@@@@U;*@@@#QQ
)@@G@@)@@@@HC@@@@T;*@@@^)@@@@HC@@@@S;*@@@ )@@@@H @@@@G;?@@@M;CK@@MO#K@@G/K@IDTQR
)@@G@@&'0@@#C];@@]/!0I#/C@@@@S/!0I^1C[0@@HC@@@@T/!0I^1G[0@@HC@@@@U/!0I^1G[0@@HQS
)@@G@@C];@@[/!0I#/C@@@@S/!0I^1G[0@@HC];@@@/!0I#/C@@@@S/!0I^1O#K@@N/K@IDT&'0@@[QT
)@@G@@C];@@@/!0I#/C@@@@S/!0I^1/!0I P/!0I @C#@IF%/K@I#0@@@@@#&'0@@^C];@@#/!0I#/QU
)@@G@@;F@@@SC[0@@SC];@@#/!0I#/C]@@@S;!0@@GC];@@@/!0I#/C]@@@S;!0@@AC];@@]/!0I#/QV
)@@G@@;J@@@A;FK@@M-[0@@S-]@@@TC@K@@P/!0I P/!0I @C#@IG#/K@I#0@@@@@#G8@@@?CL1505QW
)@@G@@      I 6@@@CL0103      IDO@@@CL1604      ID_@@@CL1657      IB]@@@CL0281QX
)@@G@@      ID_@@@CL1229      ID4@@@CL0295      ID<@@@CL0298      IE2@@@CL0311QY
)@@G@@      IDY@@@CL1907      I (@@@CL1640      IB!@@@CL413       ICQ@@@CL415 QZ
)@@G@@      IC<@@@CL417       IF-@@@CL0721      IA)@@@CL0724      IA)@@@CL0231RA
)@@G@@      ID<@@@CL0008      I 2@@@CL0014      I (@@@CL0333      ID_@@@CL761 RB
)@@G@@      IA(@@@CL1522      IB6@@@CL893       IEG@@@CL895       IEG@@@CL897 RC
)@@G@@      IEG@@@CL1136      IET@@@CL1141      IEN@@@CL2022      IC^@@@CL0077RD
)@@G@@      ID4@@@CL1623      IBF@@@CL1042      IF:@@@CL1630      IB]@@@CL1500RE
)@@G@@      IA)@@@CL1713      IEG@@@CL1715      IEG@@@CL1717      IEG@@@CL1737RF
)@@G@@      IE[@@@CL210       ICK@@@CL0015      IA8@@@CL1815      IDO@@@CL1819RG
)@@G@@      IDO@@@CL1824      IC(@@@CL1530      IB]@@@CL1722      @@@@@@@@@@@@RH
)@@G@@@@@@@D@@@@@C@@@@@B@@@@@A@@@@@ @@@@@^@@@@@#@@@@@]@@@@@[[@@@@@@@@@@@@@@@@@RI
)@@G@@D$FILE0     @@@@@@@K@@@@@@WIIV@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@RJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@@@@]RK
)@@G@@D$FILE0     @@@@@@@K@@@@@I@@@@@@@@@]D$FILE0     @@@@@@@K@@@@@@8IJQ@@@@@@RL
)@@G@@HDRO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EOFO@@@@@@@@@@@@@@@@@@@@@@@@@@RM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ASG,A      D$FILE0      .    D$FILE0     RN
)@@G@@D$FILE1     D$FILE2     D$FILE3     D$FILE4     D$FILE5     D$FILE6     RO
)@@G@@D$FILE7     D$FILE8     D$FILE9      BLOCKS,     RECORDS IN       @@@@@@RP
)@@G@@@@@@@@_____"______@@HII8@@@II8@]IHA.@@@@@READING@@FROM@@TAPE@@@REEL-NO.:RQ
)@@G@@HDRO@@EOFO@@EORO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@RR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@RS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@[F_[C#@@@___@]HH!>@[AH\/@[SH1G@@"H4O@@EH6O@] H79RT
)@@G@@@@EH'W@@GH;H@@ZH;<@[[H/M@#SH_]@@]I#G)@EH\2)@EH1])[0H2=)[]H5M)[VH6Y)@YH9"RU
)@@G@@)@$H'&)@EH;T)@KH/])[\H.N)@2I]U@@@___@@@___@@@___R#0[D[C[@[D@/K@[CB9?0[D@RV
)@@G@@AB:@@ 9*;@@@Q;0[C"A#;@@][@V@@# @F@@^;@@@@<K8F@@CR;:@@A @I@@@G8)@@[%@)@@HRW
)@@G@@/K@[CK[CF@@D[@F@@B/K@[C/[^:@@ [^V@@D/\)[D]/K@[C/[^:@@ *@F@@^/K@[D#A];@@^RX
)@@G@@C@F@@C/^@[C;/G@[C;D/@@@@/\)[D]/K@[C+[@J@@@C@@@@HC@V@@DC[J@@[[@Z@@[[[F@@DRY
)@@G@@;C)@@];@)@@</@)[C'K8:@@CC@Z@@@/^VK@#/GK[C:[@J@@@C@F@@D[@J@@[C@F@@BG8@@@]RZ
)@@G@@[CF@@D[@F@@B/KFK@A[@F@@CC^V@@DC^:@@ /KI@@@C[F@@D?[J@@[/K@[C:/K@[C>AB:@@ASA
)@@G@@CC:@@D/^@[C:;C)@@];@)@@</@)[C'K8:@@CC@Z@@@/^K[C>/GK[D /K@[C2AA'@@@ CE@@@SB
)@@G@@C9@C@@R;K@@[/,0[9[/K@[DOC G@@@[[E@#HR#0H\?A#'@@#/,K[D)@@^@@_AF'@@]/,K[D)SC
)@@G@@@@B@[_AF'@@^O;0@]@AB'@@^/K@[D4RFT@@@Q;0@@@/,0[9[/KD@@[QB/@@@RBD@@@K@@@@JSD
)@@G@@AFX@@@8#@[D&R]0H\?R;J@@@C9@@M4K^J)@@%CX@@@/?K[9%AE.@@@$A9@@@/K@[D?Q#0@@GSE
)@@G@@/KD@@[ ^E@@]R;%@@ O#)H\!A#%@@[R;K@@#/,0[9[/K@[G%C9@@@1][I)@^8^@[D//K@[EISF
)@@G@@/,0[F<R;@[IZAFJ@@[C Z@@@G Z@@[0@J@@#G9K@@[C9@@M5![U@#H/?K[9%! U@@#[ U@@#SG
)@@G@@R;K@@#/,0[8_/K@[G(R'W@@@R7E@@@O;@@@[A7E@@@*OD@@@RRD@@@C9@@M3!8@@@3/?K[9%SH
)@@G@@T8@@@^OBE@@[!^E@@]ABE@@]R;/@@@RFD@@[+8@@__&\T@@@1@J@@@/K@[G/A#Z@@@RBD@@[SI
)@@G@@/@@[FZC1T@@@C9@@M0N8K@@DR#KH\?25X!!>/?K[9%/KHX!=(CE@@]/K@[D_/,0[FN/,0[F<SJ
)@@G@@/-@[E6;C@@@[O;@[I;;C)@@[P;)@@K]0\@@@/K@[E[/H@[F^;G@@@=P;K@@AK^T@@[W8@@@ASK
)@@G@@W8K@@AL8K@@[T@)@@H;C)@@[O#@@@IT8@@@#O#@@@HO;@[JY/K@[E[D^D@@[;K@@@[/K@[F]SL
)@@G@@C9@[IV[DJ@@[/,0[F<A3J@@@/K@[E]C9@[I2/K@[FCR;K[I$/,0[FN/,0[F-;D@@@A/K@[GFSM
)@@G@@C9@@@AC9K@@AAFZ@@[;G@@@=W@@@@K/^K[FZR:(@@@P;)@@[W@K@@KA3Z@@@?@K@@L/@:@@@SN
)@@G@@C9@@M2/?K[9%?8@@@]/K@[FZR:D@@@P;@@@[K^D@@[D9@@@@P;K@@=/GK[F?;GK@@=W8K@@=SO
)@@G@@/K@[F0RB(@@[C9K@@@; I@@=;GK@[C;DG@@@[[J@@]ABZ@@[D9K@@@;DY@@@][Z@@#/KF@@@SP
)@@G@@R;K[KH/,0[FN/K@[F"R;K[KQ?8@@@MR;K[KU/,0[G>O#K@@GP;K@@[;GK@@=W@K@@LA7\@@@SQ
)@@G@@:9K@@AA3\@@@/,0[F</K@[E]R;K[K9/,0[G>/,0[F-;D@@@D+[J@@][[Z@@]/K@[E](CE@@^SR
)@@G@@/K@[D_/,0[G>/,0[F</-@[GUT8@<<=T8)WWWO;)@@HA7\@@@A3J@@@R;@[L@/K@[E[/H@[G-SS
)@@G@@R;@@@$>9@@C@R;@@@+:9@_8@R;@@@:/K@[GRRBD@@[T8@WWWO;@@@)/K@[GRC9@@@DC9K@@^ST
)@@G@@[1U@@@/K@[FPRB%@@]O;)@@^A#)H9/R;K@@-/,0[9[/K@[G2RBG@@@A#@H9//KEK@@C9@@M1SU
)@@G@@(4E@@@/?K[9%&;)@@]&'0@@[R#'@@[C[@H\,&;@C[G&'KN@)/K@[H>C9@@M6/?K[9%0@J@@@SV
)@@G@@/K@[G/R\Z@@@C[KH\\:8K@@DG.K@@#QA_@@@N^Z@@[(@J@@]/K@[HLQ'Z@@]A]Y@@@O;)@@[SW
)@@G@@&;K<[HQ;F@@@Q;V)@@9*I)@@&;KC[X/K@[HT&;KC[X0@J@@]/K@[HQO'0@@[/K@[HUQ;F@@@SX
)@@G@@Q;V)@@9*I)@@9(I)@@8KK[HQ(@J@@#/K@[H>Q'Z@@#A]Y@@@O;)@@[&;K<[HQ;F@@@Q;V)@@SY
)@@G@@9*I)@@9(I)@@$B'@@]/K@[G"R#@H\0A#I@@@O;)@@[/KEK@@?[@@@L/KF@@@/KF@@[![@@@LSZ
)@@G@@/KF@@@/KF@@[(4E@@@/KF@@@AA'@@@R'0@@@ABE@@#/K@[H.(4E@@@/KF@@@AA'@@@R'0@@[TA
)@@G@@ABE@@#/\@[I#R#'@@[R;@)@[*0E@@@'=@@[\RFE@@]/K@[IZR#'@@[C[@H\1/K@[IMR#%@@#TB
)@@G@@OB\@@@E^Z@@[0@J@@#O;K@@[0@J@@]/K@[IJO;)@@[/K@[IL-[I@@@[[Y)@@8#K[IJ$B'@@]TC
)@@G@@/K@[IA/KG@@@RFZ@@[R2Z@@@R#%@@#OB\@@@N^Z@@[/KH@@@C9@@@[;[D@@[-[I@@@[[Y@@@TD
)@@G@@$B'@@]/K@[IP/KF[I+/\@[I#R;@@@[*0E@@@'=@@[\/KEK@@')D[K[%8K@@-/K@[IZC[J@@]TE
)@@G@@-[I@@@/K@[I,D[Y@@@[[Y)@@8KK[I!C[J@@#/K@[IXC9@@@[;[D@@[+[I@@@')F[I7/K@[I%TF
)@@G@@/[K[IX/ K[IXCDX@@@C X@@@K4I@@@')F[I9[5Y@@@K0I@@@')F[I9[1Y@@@K?I@@@')F[I9TG
)@@G@@[!Y@@@K*I@@@')F[I9[(Y@@@K=I@@@')F[I9[>Y@@@K)I@@@')F[I9[-Y)@@8KK[I;/KD[JITH
)@@G@@K=I@@@')F[I9[>Y@@@K*I@@@')F[I9[(Y@@@K?I@@@')F[I9[!Y@@@K0I@@@')F[I9[1Y@@@TI
)@@G@@K4I@@@')F[I9[5Y@@@/K@[IZK0I@@@')F[I9[1Y@@@/K@[IZK0I@@@')F[I9[1Y@@@K?I@@@TJ
)@@G@@')F[I9[!Y@@@/K@[IZK0I@@@')F[I9[1Y@@@K?I@@@')F[I9[!Y@@@K*I@@@')F[I9[(Y@@@TK
)@@G@@/K@[IZK0I@@@')F[I9[1Y@@@K?I@@@')F[I9[!Y@@@K*I@@@')F[I9[(Y@@@K=I@@@')F[I9TL
)@@G@@[>Y@@@/K@[IZR7Y@@@R3Y@@@R\Y@@@R:Y@@@R$Y@@@R<Y@@@[5Y@@@[1Y@@@[!Y@@@[(Y@@@TM
)@@G@@[>Y@@@[-Y@@@O#)@[[0@J@@#O;)@@[')D[K[')F[KO')D[KB/K@[K+CDXH!,C XH!,')D[K!TN
)@@G@@')F[K7')D[K2R6Z@@@O#)@[[0@J@@#O;)@@[')D[K(!8K@["/K@[IZ')F[K$')D[K2>9K@^@TO
)@@G@@/K@[IZR#%@@#OB\@@@/K@[I%CXXH!,CTXH!,RZY@@@RNY@@@RVY@@@RRY@@@CXI@@@CLI@@@TP
)@@G@@CTI@@@CPI@@@CXI@@[[XY@@@[LY@@@[TY@@@[PY@@@[XY@@[)9@@^@-9@@^@')D[K,')F[K7TQ
)@@G@@')D[K3')D[K(%8K@@!/K@[IZ/K@[I%RFE@@^/KD[L]KWI@@@')F[I9?^U@@^[XY@@@KKI@@@TR
)@@G@@')F[I9?^U@@^[LY@@@KSI@@@')F[I9?^U@@^[TY@@@KOI@@@')F[I9?^U@@^[PY@@@O;)@@[TS
)@@G@@8KK[L]R7Z@@@/KH[LPKSI@@@')F[I9?^U@@^[TY@@@KKI@@@')F[I9?^U@@^[LY@@@KWI@@@TT
)@@G@@')F[I9?^U@@^[XY@@@RFE@@]/K@[IZKKI@@@')F[I9?^U@@^[LY@@@/K@[L+KKI@@@')F[I9TU
)@@G@@?^U@@^[LY@@@KSI@@@')F[I9?^U@@^[TY@@@/K@[L+/K@[L2*@@H;]/K@[M#C[@H;#(@@@@KTV
)@@G@@C9@[Q^[ @[Q?C[@H'>[ @[NM[D@H0@9?@H0#R#)H0A9!@H0^[[@[QH[[K[RU9!@[NL/K@[MDTW
)@@G@@9?@H0BR#)H0H9!@H0F[[@[QH[[K[RU9!@H0DA#@[M.A#K[NGA#)H\8[[@[NK[[K[Q<C9@@@@TX
)@@G@@R;K@@0/,0[9[/K@[MQ&;0@@@C1G@@@%80H0KC(G@@@[1J@@] @J@@B/,0[MU/K@LL2CDJ@@DTY
)@@G@@[XJ@@#CDJ@@J[ J@@J @J@@F @J@@IR#J@@A'^@]B//KF@@@/K@[M<RZJ@@EAZ@H06R\J@@ETZ
)@@G@@AV@H0]RFJ@@CA#@H\6K@@H\8ABKH\/K^J@@DABKH\7OBZ@@DAFKH\7R;K@@#AFW@@[ C@H\4UA
)@@G@@R3J@@]AB@[N>9?J@@IA#@H\.ABKH\"/K@LM</K@[M9C[J@@FG9@@@[[[J@@FC[@H0@;D@@@MUB
)@@G@@N@K@@KKD@H\8R#KH\6GDX@@[! Z@@D: Z@@D/K@[NE/,0[NNC[@@[[KD@H\8G9K@@#[DX@@[UC
)@@G@@R#)H\//S@@@@&;@@@[M#?)@@A#)H\//K@LM9/K@LM9&;@@@@AB0[R'CD@H\4G9@@@[[D@H\4UD
)@@G@@9?KH\6[DH@@]CDX@@[;^K@@M;@K@@M9*KH\6%9@@@[/K@[N=R#)H\"C[@H\.[[I)@@A#)H\"UE
)@@G@@/K@[N/[ Y@@[*8@@@@/K@[N%/\0[O RB)H\7[[I@@@0@@H09'=@@@A*4@H09/K@[R9(^I@@[UF
)@@G@@/K@[N_&F,@@[R#0H\.9*)H0'R;)H06RV0H0]AR0H0]/\0[OG[[@H\.A#@H\9R;@H06'=@@@[UG
)@@G@@R#@H\9K@KH\8AB)H\//KF@@@CDY@@]%9K@@[/K@[N0R#0[R'&B\@@D/K@[N1 @@@@K&;)@@[UH
)@@G@@CDY@@[H9K@@]G[I)@[8^K[OD/KJ@@@CDI@@^CPKH0]/[K[OT%9K@@]/K@[OQG9@@[\;H@@@=UI
)@@G@@W9@@[0;(@@@]/K@[OTG9@@@V;H@@@=W9@@@WG[I@@ /KJ@@@/K@[OVCXJ@@#H9@@@[/H@[R/UJ
)@@G@@[XJ@@#/,0[NN CH@@[/,0[NOC9@@@#[DH@@[ C@H\40@@H09'=@@@A*4@H09/K@[R9/K@LOVUK
)@@G@@R#@H\6RFW@@[:8K@@#/K@[P@'^@[OVRB0[Q,R#@H;^*WJ@@#!4J@@[/K@[P@9!@H\.[[J@@IUL
)@@G@@[ Z@@J/K@]C?/K@[O9AB0[Q,(@J@@F/K@[R3C5J@@]:9@@@#/K@[O:RB_@@@'^@]CVRB0[Q,UM
)@@G@@C J@@@[ @[Q^C J@@E[ @H\_[[@H\5C1J@@][ @[RCCXJ@@E[X@H00R\J@@EAZ@H0]C J@@DUN
)@@G@@[ @[P5A@KH\'A@)H\;A@0H\9RC_@@JRCZ@@DPWZ@@#A^KH\4RA_@@CAA0[Q=R#@@@[R#KH9/UO
)@@G@@/\)[CAR#@@@[K@@@@[O;K@@CR@)@@HO]0@@HAA0[QTR#KH9//\)[CAO@)@@F ^@[RIR#)@@]UP
)@@G@@&B)[P5R#3@@@R#K@@#/,0[Q"/,0[R#RA0[QT/\)[CRRB@H04O#@H\8')@[Q<R#K@@#RA0[Q=UQ
)@@G@@/\)[CRO80@@[O8)@@@P8K@@[*@@@@[/K@[P&C9K[Q6[ K[Q( @@H0I @@H0JA^)[Q;R@KH\'UR
)@@G@@R@)H\;R@0H\9/K@[QTD/@@@@/K@[QSR;0@@@R#@H\5'^JK@#C[@H0IG9@@@[[[@H0IR#@H\2US
)@@G@@R#)H\_NCKH\2/S@@@@&;@@@[M#?)@@C @H\2% @H\3/K@[Q<RF0H\3(^J@@[/K@[Q]AB0[Q;UT
)@@G@@/,0[R#A#@H0[R'0@@@/\)[CV/G@[R>A#@H\3;C@@@M*^G@@[/,0[Q9RN@H0[/G@[Q=O#@H\8UU
)@@G@@&;@@@@R'0@@@/\)[CVA#@H\2&;@@@@RBKH\5/,0[Q6/K@[R"/K@[Q^/,0[Q^/K@[Q^R;0@@@UV
)@@G@@R#\@@HO#)H'>A#\@@HC[@H0JG9@@@[[[@H0J/K@[QEC[@H9/[ @[Q(/K@[QECDG@@][ @[RIUW
)@@G@@R;)@@@&B?@@[R#/@@@9*)H04R;@H00 ^@[RX'=@@@[/KF@@@0@@H03'=@@@A*4@H03/K@[S@UX
)@@G@@RB@H04*8@@@@/K@[RIR#)@@G/\0[O %[G@@@/K@[RXC9@@@@G9@@@[%DG@@]/K@[S^CDG@@[UY
)@@G@@R;)H00RZ0H0]AR0H0]/\0[OH[[G@@@OFG@@[PF@H\8PB@[NM&B@H04/KF@@@C9@@@@G9@@@[UZ
)@@G@@!9@@@E/K@[S][ @[RXR;@H00'=@@@[/K@[R#RB0[Q^R#@H\5'^JK@#RB0[Q,C[@H0IG9@@@[VA
)@@G@@K[@H0J%[Z@@F/K@[R/G[J@@B[[J@@B/,0[MURB0[Q^/K@]A_RB_@@@'^@]CVRB0[Q,C J@@@VB
)@@G@@[ @[Q^/K@[R0C9@@@5R;0@@@/?K[SBC9@@@0/?K[SAC9@@@4/?K[SAC9@@@5/?K[SAC9@@@6VC
)@@G@@/?K[SAC9@@@7/?K[SARB0[Q,GXJ@@^/K@[9%/?K@@@RB@H;]/^@[VLC8@[S,[^@H0"C8@[T[VD
)@@G@@[^@H0_C8@[U0[^@H1@C@@H;#/^@[SPR;@[T;AB@[T4C@@H9/[^@H1K[^@H1JAB@[THAB@[T1VE
)@@G@@C@@H'>[^@H1IG8@@@[C8K@@@C^)H1 W@K@@G[CKH1HG^KH1^[^KH1HC^@H1^[^@[TR[^@[TVVF
)@@G@@[^@[T)[^@[UF[^@[UJ[^@[UM[^@[U8[^@[U'/K@LSD/?K@@@N^KH1 C^@H1^K@@H1L @G@@@VG
)@@G@@M#W)@@C@@H1H[@@H1GR;@[TKAB@[TFR;@[T>AB@[TUR;@[V#AB@[U7C@@H1J[@@[TXC@@H1KVH
)@@G@@[@@[UL/K@LS,/K@[T[C@KH1GN@KH'>&;@@@[&;K@@[M#W)@@R#@H1GR])H9./,0[H1C@@H1GVI
)@@G@@/K@[TFC^KH1A/,0[TH/K@[U^/K@[TKCCKH1G+8KZ__C@KH1G/,0[TT/K@[TR/K@[TT/K@[TTVJ
)@@G@@[@Y@@@C@K@@G;C)@@[/@)[T>C@I@@@/@@[TZ/?K@@@/K@[TT/G@[TT[@Y@@@C@KH1GG@KH1IVK
)@@G@@[@KH1G/K@LT[[@KH1GR;@[TGAB@[TFR;@[T\AB@[TUC^0H0/'^@]CVR;@[VAAB@[U7/K@[U+VL
)@@G@@[@KH1GC^@H1A/,0[T1/K@[T;/K@[VJ/,0[T;/K@[T;C80H0/R#\@@HO#)H'>A#\@@H/K@[T=VM
)@@G@@C^0H0/'^JK@#C^@H1GC^KH1AN@KH'>&;@@@[&;K@@[M#W)@@/K@[T=CCKH1G+8KZ__-@@H1MVN
)@@G@@/,0[UH/K@[UF/K@[UH/K@[UH[@Y@@@C@K@@G;C)@@[/@)[UPC@I@@@/@@[UH/?K@@@[@Y@@@VO
)@@G@@C@K@@G/K@[TN[@KH1GC^0H0/C^@H1A'^JK@#C^0H0/'^JK@ C@@[TXC@K[UL[@K[TX[@@[ULVP
)@@G@@R#)H/4O;)@@[A#)H/4C^@H1GC^KH1AN@KH'>&;@@@[&;K@@[M#W)@@C^0H0/CWJ@@#%8@@@[VQ
)@@G@@/K@[T=C80H0/C8@@@@'^@]B$/K@[T=/S@@@@R;@[U3AB@[T[CCKH1G+8KZ__D/K@@@;C)@@[VR
)@@G@@/@)[V#C@I@@@/@@[V[[@Y@@@-@@H1G/CK[U_C@K@@G/K@[UBC@K@@G/K@[TN/G@[U6/K@[T)VS
)@@G@@R#0H0/'^@]CV/K@[VFR#0H0/R#@H1A'^JK@#R#0H0/'^JK@ R#0H0//K@]A_/?K@@@/K@LVHVT
)@@G@@C9@@P0/?K[9%AR@[WRAB@[WYAB@[W4AB@[XHAB@[YJAB@[Z=AB@[XBAB@[X5AB@[Y<AB@[Y3VU
)@@G@@AB@[Y8RB@H9/AB@[W;AB@[XCAB@[X:AB@[Y$RB@H1^AB@[X[AB@[X]AB@[X^AB@[X AB@[YXVV
)@@G@@AB@[YYAB@[Y)AB@[Y-AB@[Y!AB@[Y,AB@[Y0AB@[Y1R;@[V5AB@H0"R;@[WZAB@H0_R;@[ZZVW
)@@G@@AB@H1@/K@LSD/K@[V5R#@[XDA#@[W'R;@[XYAB@[W_R;@[V#AB@[YVR;@@@0A7@[Y3R;@@@1VX
)@@G@@A7@[XBR;@)@@A#@H1GR#)H;]O;)@@]R;@@@@RBKH1 W@@@@IAF@H1PK^@H1^ABKH1NAFKH1QVY
)@@G@@;@@@@MK@@@@GQB@H1NP;)@@[AB)H1QO#@@@IK@)H1L;@)@@MQB)H1NR]0H1LQ]0H1^ @F)@@VZ
)@@G@@A#I)@@O#@@@J!@K@@G/K@[WQP;)@@[ ^I@@@/K@LV5 ^H@@@/K@[WZA#@H1HRF0H1HP#0H;]WA
)@@G@@NCKH1H!80@@[N@KH;]AJ0H1OR#0H1LQ#0H1HR#)H1LQB)H1NAF)H1OM#\)@@AF0H1NRB@H1NWB
)@@G@@R])H9./,0[H1RB@H1NRFKH1H)CKH1GAF?@@@R;)@@@RB0H1NPF0H1QW^)H1QOF)H1P/K@[W"WC
)@@G@@/,0@@@/K@[Y6/S@@@@;G)@@[/@)[XY/C0[X^RNY@@@ABI@@@/K@[XARJY@@@AFI@@@/@K[W"WD
)@@G@@1@H@@@/,0@@@/K@[W"R#@@@H/K@[W"RBKH1NRB!@@@/@:@@@RJ0H1OAB)H1N?80@@[/K@[WYWE
)@@G@@P#0H;]NGKH1O!80@@[N@KH;]AJ0H1OO#)H1LR#0H1LQF0H1NM#\)@@AF0H1N/K@[XG/,0[XGWF
)@@G@@R;0[X(AB0[W_R#0[X3A#0[W'R;0[VAAB0[YVAB@H1PR#0H0/'^@]CV/K@[ZF/,0[XGRBKH1AWG
)@@G@@/,0@@@/K@[VJ/S@@@@AB@H1PR#0H0/R#@H1A'^JK@#R#KH1LQ#KH1ARB@H1PRF?@@@+8)Z__WH
)@@G@@AF0H1A:C@H1O/K@[ZNO#@H1L/K@[X"N@K@@J!^0H;]N^KH;]PB0H;]M#W)@@Q#G@@@!80@@[WI
)@@G@@/K@[X/RB)H1PRBKH1NAB)H1NRJ0H1O?80@@[/K@[WYP#0H;]NGKH1O!80@@[N@KH;]AJ0H1OWJ
)@@G@@AB!@@@O#)H1LR#0H1LQF0H1NM#\)@@AF0H1NRB0H1NR;)@@@PF0H1QW^)H1QOF)H1P;G)@@[WK
)@@G@@/@)[V#/C0[Y) ^I@@@RNI@@@/K@[Y+ CI@@@RJI@@@/@@[YUR#/@@@-@0H1G/D@[W"/K@[Y%WL
)@@G@@/,0@@@/K@[Y%R#@@@H;G)@@[/@)[Y'/C0[Y0RNY@@@ABI@@@/K@[Y2RJY@@@AFI@@@/@K[Y%WM
)@@G@@0@H@@@/K@[Y$/K@[XERF0H1H)^0H1G[DG@@@/K@[Y%/,0[XGAB@H1PR#0H0/R#@H1A'^JK@#WN
)@@G@@R#@[Y3R#K[XBA#K[Y3A#@[XBR#@H1G;@@@@MA#@H1GR#0H0/'^JK@ R#)H/4O;)@@[A#)H/4WO
)@@G@@RB0H0/RZJ@@#%8@@@[/K@[X2R;@@@@R;0H0/'^@]B$/K@[X2N@KH;]AB@H1NO#@H1LM#W)@@WP
)@@G@@P#0H;]?80@@[/K@LWZN@K@@JQ#@H1HO#@H;]M#W)@@/K@LWZ/K@[ZZ @@H1OR;@[Z<AB@[WZWQ
)@@G@@RB0H1N ^J@@@/K@[YQ/S@@@@RA0[Z&C[@H2TRB)H2O/S@@@@K@)@@K?^0H2P/K@[+]'^@[+QWR
)@@G@@/K@[Z*;^@@@=/,0X;#/K@[Z'RB0[&6R#\@@HO#)H'>A#\@@HR#@@@HO#@H2T/K@[) R#@@@HWS
)@@G@@/K@[)S/,0[Z*/K@[) C9@[)[[ @[)S/K@[)]'^@[+JRB)H2VC[@H2T/\0[+CR#KH2URF!@@SWT
)@@G@@O;)@@[AF!@@SRB.@@S:^\@@['^@[>GR'0H2=/\)[CV(@@@@G/K@[)JA#KH2U/K@[)LC9@[)PWU
)@@G@@[ @[)L/K@[)SRBKH2V/,0X9//K@[%*/K@[)S/K@[)T/S@@@@RA0[)UR#0@@G;C0@@M+@@H2YWV
)@@G@@)@0@@HP#@@@HRBKH2O[[H@@@K8K@@[K^!@@@O;0@@[?^0H2P/K@[-I[[@H2)K8)@@@O;0@@[WW
)@@G@@?^0H2P/K@[)3RB0X2Z;@0@@MA#.@@@'^@[+QC[@H2)/K@[)-L^)H2PO;0@@]K^0H2))[@H2YWX
)@@G@@[[KH2)H H@@@] H@@@(@@@@J/K@[-]E[@@@JRF0H2PO;0@@[AF0H2P/\0[+CP#)H2XRB.@@@WY
)@@G@@;@0@@MA#"@@@O;)@@['^@[+QC[@H2)[[H@@@K8K@@[K^)H2)O;0@@[!^0H2P/K@[)3ABKH2ZWZ
)@@G@@/K@[+]C9@[-N[ @[)S/K@[-O'^@[+JL8@@@[C H@@@RFX@@@RB)H2V/\0[+C/K@[-TP#@@@KXA
)@@G@@L8@@@[C[H@@@/,0[)-(^G@@@/K@[-+O;@@@[/K@[)GR#KH2URB.@@S'^@[>GL8@@@[*@@@@GXB
)@@G@@1@H@@@/K@[)GC H@@@[[@H2)R#KH2ZK H@@@[ X@@@RB)H2O/,0[-E/K@[-YAFKH2V(^G@@@XC
)@@G@@/K@[-6O;@@@[/K@[)GAB)[-"RBKH2URB.@@S'^@[>GL8@@@[*@@@@G1@H@@@/K@[)GR;)@@@XD
)@@G@@C H@@@/\0[+C/K@[-2RF0H2PO;0@@[AF0H2P/\0[+CAB)H2O/KF@@@O#@H2XO#)H2X+D@H2YXE
)@@G@@N@K@@LM#?)@@P#@H2X/KJ@@@/S@@@@AB@[+ORB0L&6R#@H2V'^JK@#R;@@@@/K@L+J/S@@@@XF
)@@G@@AB@[+'AA0[+;RBKH4PPB)H4PK8)@@[AF.@@@C @X2QG9@@@[[ @X2Q[ H@@@/K@[++RF@H2PXG
)@@G@@ABH@@[?80@[&R;0@[&AF0H4P*^@[&D/K@[+0P;)@@#O;K@@]O#KH2X @@@@KG[H)@@8#)[+!XH
)@@G@@[[H@@@'^@[< C[@H4PR#KH4Q[[@H4VAZKH4RR;@H4R'=@@@[RFKH2ORB)H4P/\@[+.R;@@@@XI
)@@G@@R'0@@@/K@L+QAF)H2OA#KH4PK8K@@@A#)H2P @H@@[O;K@@]ABKH2O/KG@@@/S@@@@0@@H4UXJ
)@@G@@'=@@@A(4@H4U/K@L< C9@@@]%5@H4U/K@[%5/K@[<H/S@@@@ @@H2URB)H4PR;0@@8A7"@@[XK
)@@G@@RB)H2O/K@[<ORB0X2Z;@0@@MA#"@@@O;)@@['^@[+Q/K@L<IRB!@@0P;)@@[AB!@@0*@@@@IXL
)@@G@@/K@[<=A#KH2RAA0[<</,0[&>R'0@@@D8@@@@/KF@@['^@[<IR#KH2QRB!@@0O;)@@[AB!@@0XM
)@@G@@:@KH2R/K@[=K'^@[< R#KH2Q/,0[&>R#KH2QR;)@@[%@!@@0/K@[=K(@@H2S/K@[%-R;KH5GXN
)@@G@@(^H@@0/K@[%-'^@[<_R;KH5G/K@[=-'^@[+JRB0L&6/K@]A_/S@@@@R#KH2RABK[=Z ^@H4)XO
)@@G@@R;0@@@AB0[>0R;0[)MAB0[)LR;@@@@RBKH9/R'0H3W/\)[CARB@[=BRBKH9/R'0H2=/\)[CAXP
)@@G@@/K@L<_'^@[<_R;KH5G:@KH2Q/K@[=S*CH@@0/K@[=**^H@@0'^@[=0O;K@@[!@KH4O:@KH4OXQ
)@@G@@/K@[=MR#KH2Q(^@H4)/K@[=?:8K@@@/K@[=&'^@[=0RBK[=ZRF!@@@A#KH2QA#)H4QR;K@@@XR
)@@G@@/K@[=1R#!@@0P#)H2XA#!@@0/K@[=SR#!@@0O#)H2XA#!@@0/K@[=L/S@@@@ABK[=_(^@H4)XS
)@@G@@/K@[>]'^@[>5/,0[>Z/S@@@@R#KH2UR'0H3W/\)[CRR#KH2UR'0H2=RBH@@SO;@@@@/\)[CRXT
)@@G@@R;K@@@(@@@@H/K@[>DA#KH2U'^@[>!RBK[>0OFKH4)ABK[>0R#KH2U/K@L=0R;)[)GA#)[>GXU
)@@G@@/K@[>P/S@@@@AB0[>0D8@@@@A#H@@S*4J@@[/K@L>G'^@[>5/,0[>Z/K@[>XR'0H3W/\)[CVXV
)@@G@@*@@@@G'^@[>!R#0H2UR#J@@SOB@[=./K@L>GR#KH2U/K@[>SR#KH2UA#!@@SR#@@@J*4I@@[XW
)@@G@@/K@[></K@[>=P#@H2TO;@@@[/KF@@[PFG@@@L8@@@[1@H@@@/KF@@[/KF@@@/S@@@@RF!@@@XX
)@@G@@AZ)H4WR;0@@@AB0H4)R;@H4W'=@@@[/K@L>!/S@@@@0@@H4Z'=@@@ARBKH4ZR7)H4Z/@)[&]XY
)@@G@@%8)@@^/K@[%2R\)H4Z/@)[&]%8)@@ /K@[%2P;K@@[RB)H4):CY@@@/K@[&D!CY@@@%8K@[&XZ
)@@G@@/K@[%?RFY@@@(8@@@@/K@[&IK@)@@HP;0@@]/K@[&QP;K@@^K8)@@[O#0H2X @@@@KG[J)@[YA
)@@G@@8#K[&M%[J@@[/K@[%,C @X2UG9@@@[% I@@@/K@[%_[ @X2U/K@L>5/S@@@@R;KH5GABK[&)YB
)@@G@@/,0[&>R;K@@@:@KH4O/K@L&WO;K@@[/K@[&YR;0@@)RF!@@@0@@H4='=@@@AAZ)H4- ^H@@@YC
)@@G@@A30H4=R;@H4-'=@@@[/KF@@@/S@@@@RBKH4PO;K@@]%^KH2O'^I@@@'^@[< R#@H;^R;0@@@YD
)@@G@@/K@L&\/S@@@@R;)[$N'^@[&\?4J@@[/K@]C?R#J@@A'^@]B/'^@[&W/,0[$@R#KH4OA#KH2QYE
)@@G@@A#KH2RRF!@@@A#)H4QR;)[<&AB)[)JR;KH5H/K@[<1/S@@@@R;)[$3'^@[&\!4J@@[:4J@@[YF
)@@G@@/K@]C?RB)[=BAZ\@@#/K@[%-/S@@@@'^@[<I(C@H2+/K@[$ZRF)H2+R;KH5G%^KH2+AF!@@0YG
)@@G@@O;K@@[%@KH4O/K@[$T C@H2+R#KH2QR#.@@0P#0H2XO;0@@[A#.@@0K8K@@[:@)H4OR;)H5GYH
)@@G@@%^)H2+/K@[$\(CH@@0/K@[$!O;)@@[/K@[$>A#KH2+AF0H2+A#)H2QCDI@@@[[@H4Q/K@L$NYI
)@@G@@/S@@@@R#J@@A'^@]B/'^@[<I'^@[< R#KH2QR;)@@[A#!@@0K8K@@[A#)H2QRF,@@@A#)H4QYJ
)@@G@@/,0[&>R;0H14RZZ@@#P;K@@[AZZ@@#(@@@@H/K@[$K/K@L$3/S@@@@'^@[*//K@L*B/S@@@@YK
)@@G@@/,0[%N0@@H2W/K@L*ER;KH5HK8K@@[:@)H4OR;)H5GO#)H2XA#)H2+/,0[%S/K@L*E/S@@@@YL
)@@G@@'^@[*/R;0H14RF\@@D:8)@@] @@H2S*@@H2SP;)@@[AB)[=BAZ\@@#/K@L*Q/S@@@@/,0[%NYM
)@@G@@0@@H2W/K@L*-R;KH5G*@@H2SO;K@@[/,0[%S/K@L*-/S@@@@ @@H2SR;K@@E/,0[9[/K@[*0YN
)@@G@@A#KH2SRF\@@DP;)@@[AB)[=BR;KH5FC9K@$C[DX@@[ @H@@1O;K@@[G9K@@[8#)[*5A#KH4OYO
)@@G@@/K@L*%/S@@@@'^@[(GAB0[&6C Z@@D[DKH4)[ K[+_C Z@@C[ K[=#C9K[<V[ K[><'^@[*%YP
)@@G@@R#J@@A'^@]B/'^@[&W @@H2W/K@L*//S@@@@R;K[++ABK[+-(@@H;]/K@[(ZC[KH;][[KH2TYQ
)@@G@@[ K[)(C9K[)S[ K[)TC[Z@@E[[KH2VR'0[)UR;@[<PR;K@@#R;)[>*C9@[% C9K[%@/K@[(:YR
)@@G@@C[KH'>[[KH2TC9K[)S*@@H;#C9K[Z0[ K[)TR'0[Z&R;@[<TR;K@@]R;)[>>C9@[(/C9K[(8YS
)@@G@@AB@[<OABK[=.AB)[>=[ @[%-[ K[$@AA_@@# ^@[&DR;K@@0/,0[9[/K@[(7*?G@@@ABK[&DYT
)@@G@@/K@L(GC9K[Z/C[@H2-[[@[Z%/K@[%#C[@[+Q[[@[Z%C9@[Z"/K@[%CC9@[-U[ @[-TC9K[-OYU
)@@G@@[ K[)S/KF@@@C9@[-1[ @[-TC9@[-KAA0[%M @@H2Q[ @[)SC9@[</[ @[)JRB0[&6C J@@EYV
)@@G@@[[@H2VR#_@@@'^@]CV/K@[%MRFZ@@CK^Z@@D/\@[+. 4@H4U/KF@@@A#KH2QCDKX2Q[[KH4QYW
)@@G@@C9K[%&[ K[<HCDKH4)[ K[+_]@KH2W/KF@@@/,0[%- @@H2WR#KH2QA#KH2R/K@[=KR;)@A0YX
)@@G@@/K@[%6R;)@A1C[@H49R#0H49/K@[%9R;)@A2/K@[%3R;)@A3/K@[%3R;)@A4/K@[%9R;)@A5YY
)@@G@@C9@@@@/K@[:[R;)@A6C5@H4URZ0H4R'^@[:(AR)H4"A#0H4'[T@H4;R;@H4%'=@@@C'=@@@)YZ
)@@G@@H I@@@R;)@A7[[@H48RZ0H4WAZ0H4>C5@H4Z'^@[:(E@KH48!8K@@A/K@[%0[T@H41A#0H40ZA
)@@G@@AR)H44R;@H4!'=@@@CRZKH47%8K@GO'=@@@)R;K[>6ABK[>!R#KH48P;K@@[(@@@@H/K@[>2ZB
)@@G@@#@KH4(R;)@@(1@@@@HR;)@@*A3)H4*R;@H4>'=@@@#(4@H4*/K@[:=R;)@A8C5@H4*RZ0H4>ZC
)@@G@@/K@[%8R#KH4(P;K@@[/@K[>2A#KH4(/K@[:X/S@@@@; @@@#'L@H95;(@@@#;!@@@#G9@@@0ZD
)@@G@@[T@H41AZ0H4_R;@H4_'=@@[<RZ@H5C/,0H1R[XKH40R\@H5C/,0H1R;-K@@A[ KH409?0H40ZE
)@@G@@/K@L:(/S@@@@C9@@@@R;K@@?/,0[9[/K@[?^C W@@@[ K[,Q/K@[?P ^@[,QR;KH6QO#KH2XZF
)@@G@@R;)@[+ @H)@@8#)[?CR;K@@E/,0[9[/K@[?PC[W@@@[XKH6QC9@@$CR;K@@H/,0[9[/K@[?PZG
)@@G@@9?WK@@/,0[\'[D@H5G'^@[(G ^@H5GR;K@@*/,0[9[/K@[?(C[G@@@+[@H96H9K@@[R;K@@%ZH
)@@G@@/,0[9[/K@[?YC G@@@H9@@@[R;K@@(/,0[9[/K@[,/R;0[6AR#)H96/K@[\KR;K@@:/,0[9[ZI
)@@G@@/K@[,QRB?@@@C[Y@@[H9K@@[[[KH7EAB)[?7R;K@@U/,0[9[/K@[?6'^@[\_/K@[?7'^@[86ZJ
)@@G@@R#K[?7A#KH7-RBKH4PABK[>0R;KH5GA#KH2U'^@[1GRFY@@ ABK[+_R#KH2U'^@[2[R#KH8BZK
)@@G@@A#KH8XR;@H9 '=@@@CR;K@@X/,0[9[/K@[!3RBKH4P(@H@@A/K@[!JR\!@@]%8)@@A/K@[!LZL
)@@G@@R;)@E3/K@[%(C H@@[H9@@@[*@@@@K/K@[!$R#!@@AA#!@@]C H@@ RZ!@@#P;)@@[AZ!@@#ZM
)@@G@@CPX@@#H9K@@[RZ.@@^P3.@@[1@@@@J/K@[!>CTX@@#O\.@@^R\!@@^AV!@@#[PX@@#AZ.@@^ZN
)@@G@@H9@@@[[ H@@[ @H@@AR#!@@BA#!@@C @H@@BRB!@@^AB)[8R/\0[8,R;K[8PABK[+-/K@[!7ZO
)@@G@@RBKH4PRB!@@[P;)@@[AB!@@[RB@H4PC9@@[>[DG@@@R;)H6O/\0[+CAB@[66'^@[60RFKH6QZP
)@@G@@P;K@@[ABK[5>R3KH6P%^K[=B/K@[8;(@@H6W/K@[07R\KH6WO;KH5GABK[8-RBKH6WABK[8+ZQ
)@@G@@RZKH6WABK[8>RBK[)SABK[8*R;K[8YABK[)SR;K[Z8*@@H;]R;K[8:ABK[8</K@[07(8@[,QZR
)@@G@@/K@[,(RB@[,QR;)H6OC9@@[>/\0[+CR;KH6O/\0[8,R;K@@V/,0[9[/K@[,<'^@[\_/K@[,=ZS
)@@G@@'^@[86R#KH6Q%@KH8=/K@[8./,0L%-/K@[,[R;K@@G/,0[9[/K@[,''^@[\_R;K@@V/,0[9[ZT
)@@G@@/K@[,4R#KH8=A#KH6Q/,0L%-/K@[07R#KH97O#KH6QA#KH6Q/,0[7&'^@[60/K@[07C9K@@@ZU
)@@G@@C9@@@@R;0[35R;K@@T/,0[9[/K@[\[/\)[\ZAB0[3%R;0[3+R;K@@D/,0[9[/K@[\DR#KH2EZV
)@@G@@T^W@@@A#KH2ER;K@@C/,0[9[/K@[?$R#G@@@+@@H96T@KH2T+@KH96A#)H2EAB0[3V[ @[2%ZW
)@@G@@[[KH6S/\)[\+R;0H2^R#@H2E'^@]B/R;K@@AAFKH6OR;K@@AA\KH6QR#K[+QA#K[7P/K@L:/ZX
)@@G@@R;0[6TAB0[3%/KI@@@C KH2HR;K@@F/,0[9[/K@[\*! W@@@C W@@@R#KH'>O;K@@#*@@H;]ZY
)@@G@@O;K@@]?8K@[&R;K@[&?[K@@H/K@[\8?8K@J*/K@[\4C[K@@H/K@[\6!9K@J*C9K@J*[DKH6TZZ
)@@G@@/KI@@@R;)@E0/K@[%(9*KH9[[>@H9@R#@H98'=@@@J/KF@@@/S@@@@C9@@$DR;0H5HR;K@@GAA
)@@G@@/,0[9[/K@[0]R#)H49AB@[0FR#WK@@A#Z@]P[DJ@@@/,0[\'R;@[0FR;K@@G/,0[8_/K@[0MAB
)@@G@@G9@@@[O;0@@[/K@[0AAB0H4OP;0H5GAB0[=BA30H6P'^@[0Y/\)[\Z/\0[0*'^@[23/,0L$@AC
)@@G@@C9K[3=[ K[)J/K@L\_/S@@@@R;KH2^ABK[&6R;K@[>AFKH6OR;K[2KABK[><R#KH99A#K[7PAD
)@@G@@/K@L0YRFKH2GR;@@@@RB)[=BO;)@@#W@@@@IAB@H2HAF@H4)P;)@@]T@@@@IOB@H2GAF@H2GAE
)@@G@@RB@H2GAB@[=#/\)[\+/KJ@@@'^@[<_ 4@H4ZR;KH5HRB)[=BP;)@@[0@@@@I/K@[=& ^H@@@AF
)@@G@@(@H@]P/K@[1EA#KH2UAB)[1D'^@[1GRBKH2UR;)@@@AB)H2U'^@[=0ABK[1 R;)@@@O;K@@[AG
)@@G@@/K@[0;/S@@@@RF.@@@'^@[:(A#0H8BRBKH2UR#H@["O;@@@[A#H@["R#!@]PA#)H8G/,0H1RAH
)@@G@@[ KH8E0@@H4Z'=@@@A9?KH4Z9*KH9#RZKH4WABK[15R;@H9C'=@@@CRBKH2U'^@[>!0@@H4ZAI
)@@G@@'=@@@ARB)H4)R#Y@@]A#KH8NRBI@@[/,0H1R[ KH8LR#KH8G%@KH8N/K@[1'RBKH8E%^KH8LAJ
)@@G@@/K@[1''^@[>5RF0H6TRB)H4)?C"@@ /K@[7=R;K@@@AZKH4W9?@H9#9*@H4Z/K@L1GR#KH8BAK
)@@G@@A#KH8HR#KH2U'^@[7DR;@H9F'=@@@C/K@[1Y/S@@@@C[H@]P[[@H8TR#H@["/,0H1R[ KH8RAL
)@@G@@R#KH2U'^@[7DRZ0H4-'^@[:(A#0H8OR;@H9I'=@@@CR#KH2U/K@L2[AA0[<<AB@[2ZC H@@@AM
)@@G@@[DH@@0'^@[2[RB!@@SC9@@@8:5I@@[/K@[<< CI@@[R;@H4-'=@@[XRBKH2U'^@[1GRA0[<<AN
)@@G@@R;@@@@/K@[>=/S@@@@'^@[23R#)H'8:@)H6S/K@L2-R#0H6SO;0@@[A#0H6RA#)H6SR;@@@@AO
)@@G@@O;@@@[AB@[2%O;@@J*/,0H1R[ KH6Q/,0[7&'^@[60/K@L2-/S@@@@RF)H6TAB)[+_RFKH2GAP
)@@G@@OF)H2G/\@[+. 4@H4U ^@H6PR;KH5GA#KH2QRFX@@@A#KH4QR;K[6UABK[<HR#KH'>ABK[)(AQ
)@@G@@/K@L23/S@@@@RBKH4PO;K@@]:^KH2O/K@[3S'^@[<I'^@[7HR#@H6R/,0H1R[ @H7.[[KH7"AR
)@@G@@R#@H'8A#@H6S/,0H1R[ @H7_[[KH8@RB@H6QAB@H7'R;@H9L'=@@@CR;0H2^R7J@@[?@@H;^AS
)@@G@@/K@[3VR#@H2E'^@]B/R;0H2^R#KH2TABK[)(/K@]C?C9K@@A/K@[3$'^@[<I'^@[7HC9K@@BAT
)@@G@@[-KH8<R;@H9O'=@@@C/K@[3%/S@@@@R;0H2^'^@[*%'^@[0YC9K[5.[ K[3%/,0L$@R;K[6]AU
)@@G@@ABK[)J/K@L3:'^@[3: @@H6U9?@H2GAB@[=#AFKH4)R;@H9R'=@@@CRFKH6QAFKH8. ^@[4MAV
)@@G@@ ^@[4XRFKH5GAVKH8/RBK[2%A#KH6RABK[5]C @[=B[1@H6PL9@@@[T @[=B!@K@@K/K@[4CAW
)@@G@@P#K@@KD8@@@@W@@@@LOBK[=BABK[5GABK[43 ^@[4,R;@@@@O;@@@[AB@[4M/,0H1R[>KH8%AX
)@@G@@;[K@@A[TKH8%R;@H9U'=@@@CR;@H9X'=@@@C*8@[4X/K@[4&RFKH8.AFKH8'O;K@@[AFKH8.AY
)@@G@@RBK[5]ABK[4( ^@[5]RB@[4XO;@@@[AB@[4X:8@[4( ^@[4XO;@@J*/,0H1R[ KH8'R;@[4,AZ
)@@G@@RFWH5HAVKH89O;@@@[AB@[4,:8@[43/K@[48R;@H9)'=@@@C/K@[4X(^@[4X*^@[5]/K@[5]BA
)@@G@@R#KH8=A#KH8.R;K@  AVKH8/R;@H9<'=@@@C/K@[5GR;@[5]O;@@@[AB@[5]O;@@J*/,0H1RBB
)@@G@@[ KH8.R;@H9&'=@@@CRBK[=B/K@[4KC9K@@@ @@H6S ^@H6PR;)H5H[ K[5* @I@["*W@H6SBC
)@@G@@/K@[5XRFKH6QABK[5>O;K@@[AFKH6QRVKH6RA\KH6SRRKH6RAVKH6R O@H6RRZ@H6SO;@@@[BD
)@@G@@AZ@H6S:S@H6R W@H6SO;@@J*/,0H1R[ Y@]PR;0[5>AF"@]PO;)@@[C9K[5*H9K@@[*@@@@LBE
)@@G@@/K@[5KRZ@H6RO;@@@[AZ@H6R/,0H1R[>KH8%;[K@@A[TKH8%*W@H6S/K@[57(O@H6R/K@[3&BF
)@@G@@RR@H6RO;@@@[AR@H6RO;@@J*/,0H1R[ KH6QR;@H9('=@@@C(O@H6R/K@[,0/K@[,7'^@[<IBG
)@@G@@'^@[7HC K[=B/K@[5IC9K@@A/K@[6QR;KH5GO;K@@[A#KH2U*^H@@@'^@[2[?@KH4O/K@[6DBH
)@@G@@'^@[7HRBKH6S:^K[8R/K@[6PR;)@E2/K@[%(C9K@@B[>KH8-R;@H9?'=@@@C/K@]E2RFKH2OBI
)@@G@@*4H@@[/K@L< RBKH4P*4H@@[/K@[+1R;)@@*A7!@@[RBK[+QABK[6\R;K[6:ABK[+QRB@[+'BJ
)@@G@@AB@[6!RA0[+;AA0[6,/K@[+1'^@[7H'^@[60R;@@@@R'0@@@/K@[6\/S@@@@R#KH2QRBKH6PBK
)@@G@@O;K@@[ABKH6PAFKH2PR;)@@@'^@[+QRF@H2OO;@@@7R;)H6XC9@@@,/\0[+C'^@[< RZ0H4RBL
)@@G@@'^@[:(A#0H8[R#KH6QA#KH8ARB@H6P/,0H1R[ KH8^R;@H9\'=@@@C/K@L60/S@@@@R;0@@-BM
)@@G@@/,0[&&/K@L7D/S@@@@C KH5G[PKH6SC KH6P[ KH6TR#KH6QA#KH6U/,0[7&/S@@@@'^@[< BN
)@@G@@R#KH2Q'^@[7DR#KH8[A#KH8OR#KH8^A#KH8RR#KH8AA#KH8TR;@H92'=@@@CR;@H4-'=@@[XBO
)@@G@@/K@L7HR;)@E1/K@[%(RB)H4PCD@H6OR;@H6O/\0[+CAB)[66/KF@@@/S@@@@R#0H6WA#0H6VBP
)@@G@@R#0H2UA#0H6W(@@@@J/K@[7/L80H5G[!@H6WC Z@@@?9K@@]CDZ@@0[ KH6WRB@[6!PBJ@@SBQ
)@@G@@AZ@H6WR;@H5HRBKH4PC[@H6VC[KH6W[[H@@B[[X@@CC[G@]PC[W@["(@@@@K/K@[8IRB/@@@BR
)@@G@@!80@@]/K@[8F*@@@@JH9K@@[H9K@@[(@G@@SC9@@@@[[H@[I[[X@@7:@@H4O/K@L7?O;@@@[BS
)@@G@@O;K@@[/K@[8]0@H@@[/K@[8V%9@@@@/K@[++C9@@@*[5H@@[C9@[6C[ @[+Q/K@[++C9K[8)BT
)@@G@@[ K[)LC X@@@:8K@@@%9K@@@/K@[8<C X@@SG9K@@@%[K@@G/K@[8<C9K@@@[ K[)S/K@[)MBU
)@@G@@L8@@@[OBH@@@/K@[-YR;)@@!C9@@@@C[X@@D[[H@@D[[X@@7O;K@@[8#)[80/KJ@@@/S@@@@BV
)@@G@@'^@[3:/\0[0*'^@[23/K@L86R;)@E4/K@[%(R;)@E5/K@[%(R#@H9'/K@[9]R#@H9;A<K[9CBW
)@@G@@R7W)@[:8K@@8/K@[9G:8K@@9/K@[9J%8K@@@/K@[9#A#@H9'/KF@@[ABGK@@Q#G@@@/K@[9#BX
)@@G@@RBW@@@:^KH9;/KF@@@Q#H@@@/K@[9#A^K[9XA@)H9_^@KH'T^@)H'U^@0H'VR@KH'+R@)H'<BY
)@@G@@N8K@@TM@-)@]R8K[9X/K[@@[/K@[9ZR@KH'+R@)H'<N8K@@TM@M)@]R@KH9"R@)H9_N@KH'TBZ
)@@G@@N@)H'UN@0H'V/K@[9Z[P@H'YR;@H'Z'=@@@C'=@@@)AB0H9;R8K]E9A^K]F*R#@H'CAB@]A)CA
)@@G@@R;K@@[/,0[9[/K@]E"RBW@@@A#KH'>?8K@@[/K@]E" @@H;]R;K@@]/,0[9[/K@['@RBW@@@CB
)@@G@@A#KH;]R;K@@K/,0[9[/K@]F]R7W@@[%8K@@_/K@]F@RBW@@[AFKH'&A#KH9.OBW@@@ABKH'&CC
)@@G@@RBW@@@AFKH'$?8K@J*/K@]FRP#KH'>ABKH'!R])H9./,0[DHAB)H'$RFKH'&PBKH'$]^KH'$CD
)@@G@@OBKH'!ABKH'!R;K@@JA#KH;<R;K@@A/,0[9[/K@[')RBW@@@A#KH;< @@H;#R;K@@)/,0[9[CE
)@@G@@/K@['&RBW@@@A#KH;#R;K@@+/,0[9[/K@[':R#W@@@ABK]A) ^@]DVR;K@@</,0[9[/K@['1CF
)@@G@@R#W@@@ABK]DVR;)]E8R;K@@=/,0[9[/K@['6R#?@@@AB)]E7 @@H;> @@H;(R;0$C,A#0H;?CG
)@@G@@R;K@@N/,0[9[/K@[.F9?WK@@9*KH;TR;@H;T'=@@[G(4G@@A/K@[/]R7W@@A?8K@@K/K@[;(CH
)@@G@@?8K@@Q/K@[;U?8K@@S/K@]F>!8K@@)/K@]F>RB?@@CT8)@W@*?G@@AT8)@[@!C)H'$:C)H'$CI
)@@G@@/K@[/]*@@H;>/K@[;W9*KH;=9?KH;T9*KH;&/K@[/]R#?@@C/K@[;L*@@H;(/K@[/]?@)H;>CJ
)@@G@@/K@[;=9*KH;*9?KH;T9*KH;%/K@[/]9?0H;=9*0H;*9?0H;&9*0H;%/K@[;QN8K@@JR]0H.ECK
)@@G@@24V!;?/K@]F>R3:H;:*4@H;?/K@[;3A7)H;/AA0H;//K@[;5%4)H;//K@[/AR7)H;?O;)@@[CL
)@@G@@!8)@@T/K@[/]A7)H;?RB)H;?AB)H;"O;)@[@AB)H;?9?0H;T9*0H;_R;@H;.'=@@@JR;K@@NCM
)@@G@@/,0[8_/K@[.F/K@['"R30H;?!80@@K/K@[/]C G@@@[[JH/]O;0@@[A30H;?/K@[/]R;@@@@CN
)@@G@@R#K@@LW@@@@IO;@@@]R#K@@JP;K@@G;GK@@=W@K@@GP;K@@B*@@H;]P;K@@[P;@@@[!@KH'>CO
)@@G@@/K@[/Z!8@@@#/K@[/M/KF@@@*@@H;]/K@[/4;GK@@=W@KH'>T@KH'>K8K@@#A#)@@J?9@@@XCP
)@@G@@/K@[/!O;0@[\;G0@@=W80@[0T80@[0/K@[.]?9@@@S/K@[.]O;0@@V;G0@@=W80@@WT80@@WCQ
)@@G@@/K@[.]O;K@@[R#)@@HL@)H'>?@0H'>;G)@@>K8K@@#R#K@@JO;0@@#?9@@@X/K@[.@O;0@[!CR
)@@G@@/K@[.]!9@@@SO;0@@TC9@@@@W[@@@JT[@@@HR;0@[0T@0@@GO#0@@IP#0@@LH[@@@J/KF@@[CS
)@@G@@ @@H;@R;K@@S/,0[9[/K@[.KAFKH;@R;K@@T/,0[9[/K@[.Q*C@H;@/K@]F-AFKH;@R;K@@UCT
)@@G@@/,0[9[/K@[.W*C@H;@/K@]F-AFKH;@R;K@@V/,0[9[/K@[.+*C@H;@/K@]F-AFKH;@R;K@@WCU
)@@G@@/,0[9[/K@[.&ABKH;@R;K@@X/,0[9[/K@[.?*^@H;@/K@]F-ABKH;@R;K@@Y/,0[9[/K@[.2CV
)@@G@@*^@H;@/K@]F-ABKH;@R;K@@Z/,0[9[/K@[.8*^@H;@/K@]F-ABKH;@R;K@@$/,0[9[/K@[."CW
)@@G@@*^@H;@/K@]F-ABKH;@RB0H;@CD@H;@C5KH;?:80@@W/K@["R:80@@Y/K@["R:80@@X/K@["MCX
)@@G@@:80@@Z/K@["M%80@@$/K@["):9@@@V/K@[">%9@@@S/K@]F-?9K@@#/K@]F-/K@[">:9@@@SCY
)@@G@@/K@["J:9@@@U/K@[">/K@]F-:9@@@S/K@["X%9@@@T/K@]F-/[K]F-/K@[_]?9K@@#/K@]F-CZ
)@@G@@/K@[_]*@@@@K:9@@@S/K@[_]:9@@@T/K@["VR#0H;L[DZ@@DR#KH;MABZ@@@RBKH'&PBKH'!DA
)@@G@@ABZ@@CP#KH'>ABZ@@ERBKH'!AFZ@@CR;)@@ZA#)H;^'^JK@[/K@["3RA0H;/S8)@@SRBFH;:DB
)@@G@@S8@@@#O#0@@HRBFH;:S?FH;:S8K[F@R;K@@@W@K@@JS8K@@DW8K@@ES@K@@L/K@["3C5KH;?DC
)@@G@@G1KH;? C@H'\/[K]@U*@@H;]/K@[_KR;K@#C;GK@@=W@KH'>*@@@@IO;K@@[T@KH'>O;K@@^DD
)@@G@@/K@[_OR#KH'>O;K@@A?8K@#CR;K@#CABK[_TG9K@@]RB@H'!;G@@@=W@@@@L!8@@@@/K@[_$DE
)@@G@@RB@H'!;G@@@=W^@[_TP;@@@]?4@H;?/K@[_=P7@H;?A3@H;?/K@[_&A7@H;? 0@H;?RB@[_TDF
)@@G@@R#KH'>O;K@@A?8K@J*/K@[_!R#@@@H/K@[_\!8@@J*R;@@J**@@H;]/K@[_6P;@@@^;G@@@=DG
)@@G@@W@@H'>T@@H'>O;@@@^AF@H'\R#)@@GC[K@@GH9K@@^*@@H;]H9K@@]'^@["3A#)H'0C[@H;(DH
)@@G@@/ @]@#C[@H;>(@@@@KC @H'!C5KH;?G1KH;?[PKH':?9K@@]/K@]@U%9K@@]/K@]@NRF0H;@DI
)@@G@@:80@@T/K@]@UR#)H'0O#)H'0![@@@I/K@]@URFKH;K/K@]@+H9K@@[?[@H'0/K@]@WR#)H'0DJ
)@@G@@T@)@@L?[@@@I/K@]@L @@H;J/K@]@2R#)@@KT@)@@L!@)H'0/K@]@LR#)H'0RBKH;KA#KH;JDK
)@@G@@A#)H';(0@H;?/K@]@2 @@@@I9?"X/]9*0H;_RB0H;?AB0H;"O;0@[@AB0H;?R;@H;.'=@@@JDL
)@@G@@O;)@@[%0)H;?/K@]@$ W@H': C@H'4RB0H'!PF0H'\PF0H'\C[KH;(/[K][L;DK@@[?[KH;>DM
)@@G@@[[KH;>R#)H;>RF@H'$T8@@@#?@)@@G/K@][89!@H;*/,0[/I/K@][/AZ@H':AF)H'1[[@H'%DN
)@@G@@9?@H;%9*@H;_R;K$B,ABKH;"R;@H;.'=@@@JRB0H'!T8)@@#P#0@@IPZ0H':AB0][%9!@H;=DO
)@@G@@/[K]["RB)H'!S@)H;<W8)@@FRB0][%/,0[/I/K@][6:C@H'4/K@][\AF@H'4AB)H'1[[@H'3DP
)@@G@@RB0H'!T8)@@#P#0@@IPZ0H':P#0@@GAF0H'2S@0H;<W80@@ET@0@@G!@0H'3/K@][\R;0@@@DQ
)@@G@@9!@H;=/,0[/L/K@][!/K@][U9?@H;&9*@H;_R;K$A,ABKH;"R;@H;.'=@@@J/K@][_(@@H;(DR
)@@G@@/K@]["9!@H;*9(@H;=9!@H;%9(@H;& @@H;(/K@][LAF0H'2C9K@@[[[KH/4R#0H;H[5Z@@[DS
)@@G@@R;@@@[A7J@@]RB@H'&PB@H'!RFKH'2ABZ@@DK@K@@GP#@H'>A#@H;AR;@@@@C[@H'>G9@@@[DT
)@@G@@W@@@@KS@@H'>A#Z@@AC9@@@](C@H'4/K@]]0R#@H;IABJ@@@A#0@@HA#@@@JAFZ@@@G9K@@[DU
)@@G@@[5Z@@[[5J@@]AF\@@CRB@H'1ABJ@@DRF@H'4AFJ@@DR#@H'3A#J@@ARB@H'&PZ@H':PF@H'4DV
)@@G@@AFJ@@J @@@@IR#KH;=!8K@@SR;)@@[!8K@@XR;)@@]A\\@@EG9@@@[(W@H':/K@]#JR;@H0)DW
)@@G@@ABJ@@@A#0@@HR#0@@GAFZ@@@G9K@@[[5Z@@[[5J@@]RB@H'&PZ@H':AFJ@@JRFKH'1ABZ@@DDX
)@@G@@T8K@@#P#@@@HAFJ@@CR#KH'%A#Z@@ARZKH':AFZ@@D @@@@IR#KH;*!8K@@SR;)@@[!8K@@XDY
)@@G@@R;)@@]A\\@@E%9@@@#C9@@@#R#@H;J(@@@@G/K@]#=R#@H;JABJ@@@A#0@@HA#@@@JAFZ@@@DZ
)@@G@@G9K@@[[5Z@@[[5J@@]RB)H'&PF)H'\PF)H'\AF\@@CRF@H'\ABJ@@DRR@H':AFJ@@DR#@H'0EA
)@@G@@A#J@@ARF@H;@R7)H;?:8@@@T/K@]#:!8)@@#%8@@@S/K@]^UR#@H;LABJ@@@A#0@@HA#@@@JEB
)@@G@@AFZ@@@RFKH;@%8K@@S/K@]#6AF\@@DR#@H;MABJ@@@G9K@@[[5KH'6[5Z@@[R;@@@#A7J@@]EC
)@@G@@R;K@@F/,0[9[/K@]^LRB?@@@!C)H'\/K@]^L(@@H;]/K@]^AL8)@@AA#0@@L/K@]^GP;)@@^ED
)@@G@@R;K@@@W@KH'>S@KH'>A#)@@LO;)@@^AB)H'\'^@["3R#0H;LRBKH'\/K@]^NRFKH'\R#)H'0EE
)@@G@@ABZ@@DA#)H'5RB)H'&PB\@@DPB\@@DAF\@@C/K@]^Y[5KH'6R#@H;MABJ@@@AF/@@@R#KH.FEF
)@@G@@A#KH''AB0H'/ @@H'9AB0H'6C[KH.F[[Z@@G @J@@H 0J@@[R#@H;AABJ@@EO#@H'>ABJ@@CEG
)@@G@@'^JK@[RB0H'6R7J@@[RF_@@@%8@@@[/K@]^+R#K]BK(^@H;@/K@] ER;K@@%/,0[9[/K@]F@EH
)@@G@@RR?@@@A#)H; R;K@@*/,0[9[/K@]F@R#W@@@A#KH'. 4@H'.C KH;@R#)H.F%9K@@W/K@] CEI
)@@G@@R;K@@(/,0[9[/K@]F@R#W@@@+@KH.GA#)H'"R#KH.HA#K]A$ @@H'((C@H;@/K@] QR;K@@CEJ
)@@G@@/,0[9[/K@] QR#W@@@A#KH'( 4@H'(R#KH'(A#KH'*RB@H'1/,0H1R[[KH/=RF@H'4/,0H1REK
)@@G@@[[KH/*RF@H'1/,0H1R[[KH/,RZ@H':/,0H1R[[KH/2R;@H/)'=@@@JR;@H/%'=@@@J'=@@@NEL
)@@G@@A#@H/Z @@H'8 @@H;CR8K[9OA^K]A+A^K]B+A^K]BWC9@@@@R;K@@1/,0[9[/K@] 3C G@@@EM
)@@G@@[ @H.DC9@@@@R;K@@2/,0[9[/K@] 9C G@@@[D@H.D ^@]AU(C@H'4/K@]A@RB@H'1R#KH;=EN
)@@G@@/,)]AA(W@H':/K@]AURF@H'1R#KH;*/,)]AA/K@]AU:8K@@S/K@]AN:8K@@T/K@]AN!^@H.DEO
)@@G@@/KE@@@/,0H1R[[KH.[/,0]FT@[AH//R;)@@[AB)]AU/KE@@@!C@H.D/KE@@@/,0H1R[[KH.CEP
)@@G@@/,0]FT@[BH.]/K@]AK*8@@@@'=@@@) @@H;^R#0H;H'^@]CV'^@[9Z/K@]A)A@KH9"/?K]E9EQ
)@@G@@RREL$ AA0]A)R#KH'8O;K@@[A#KH'8(@@H;]/K@]A,R#KH'>*C@H'D?CKH'D/K@]F<R#0H;HER
)@@G@@'^JK@#*@@H1D/K@]BCR#KH'>(@@H;]/K@]A7RFKH'DO;K@@[O#KH'9A#KH'9?@KH''/K@]BDES
)@@G@@R3@H'6A#@H;^R#0H;H'^JK@^RF\@@@(@I@@H/K@]BAR#Z@@HO#Y@@HA#Z@@H @I@@HR#@H;^ET
)@@G@@'^JK@^ @@H1D(@@H'(/K@]AZR#@H'*P;@@@[A#@H'*/^@]AZ/K@]BZA#KH'8?@KH'./K@]AZEU
)@@G@@!@KH'":@KH'"/K@]A*P;K@@[A#KH'8/K@]B>(C@H;@/KF@@@A@KH9"/?K]E9RENCY$AA0]A)EV
)@@G@@R7@H'6/K@]A/A@KH9"/?K]E9RSORT$AA0]DUR;@@@Z/K@]A//K@]B*O#@H'9A#0@@I/K@]B?EW
)@@G@@P#J@@AR7Z@@[:8K@@[/K@]B1RF_@@@/K@]B:R#0@@IA#J@@G?@@H''/K@]B6/K@]B$A#@H''EX
)@@G@@R7\@@[A3)H'6/K@]B$A#@H''A3)H'6/K@]B.O#@H'9/4@]C@R#@H.FA#J@@GR7\@@[RB0H'/EY
)@@G@@/K@]C^R7Z@@]?8K@@]/K@]B'?@J@@G/K@]CJ%@J@@G/K@]CH!4\@@[/K@]CJR#J@@GR7\@@[EZ
)@@G@@RF_@@@/K@]C^:4KH'6/K@]CPRB_@@@/K@]CXCD@H;@*^@H;@/K@]C$%9@@@TR#0H;M/K@]C$FA
)@@G@@/K@]CVRF\@@@R7Z@@[!@KH;^/K@]C$&;0@@@:@0H;I/K@]C$:80H0)/K@]C$(0J@@[/K@]CLFB
)@@G@@R;K@@[A3Z@@[AB"@@@'^JK@]/K@]CV(@J@@H/K@]C5R#J@@GP#@H'9O#J@@H @J@@HAB0]C4FC
)@@G@@'^@]B/R;0@@@(C@H;@/K@]AWR7J@@[%4@H'6/K@]C_R#KH'(A#KH'*R#KH; O;K@@[A#KH; FD
)@@G@@R#)@@JRF_@@@AB\@@@:80H0//K@]AW 0J@@[/K@]C_/K@]DARFKH;@!8K@@U/K@]DKC9@@B5FE
)@@G@@:8K@@T/K@]DJR;@@@Z%@@H;^/?K[9%R#@]DAA#@]DZR8K]E9A^K]A+A^K]B+A^K]BWR8K[9OFF
)@@G@@A^K]DX'^@[9Z(^@]DV/K@]DU/K@]DVA@KH9"/?K]E9RRET$ /K@]DZA#@H'DR])H9./,0[H7FG
)@@G@@R#)H;CO;)@@[A#)H;C'^@[9Z/KF@@[/K@]D*'=@@@NC[KH'8/ K]D!C9K@@[P#@H/ZT8@@@EFH
)@@G@@;G@@@=W@@@@L/,0H1R[!KH/S;DK@@A[5KH/S;DK@@A[PKH/RR#@H'8/,0H1R[[KH/U[P@H/TFI
)@@G@@R#@H;C/,0H1R[5KH/X;DK@@A[[KH/W[5@H/W;D@@@A[-@H/VR#)H'9;G)@@=(@@H'8/K@]EJFJ
)@@G@@W@)H'8O;)@@[RF0H'2;G0@@=W@0@@IC[@H/4%9@@@[/K@]ENC9@   [-@H/YC9KSEQ/K@]EYFK
)@@G@@R#@H'8;G@@@=W@@@@J*@@@@HO;@@@[T8@@@E;G@@@=W@@@@K/,0H1R[-KH/Y;DK@@A[TKH/YFL
)@@G@@;DK@@G[1KH/YR;K@@3/,0[9[/K@]E>/K@]E!C[@H.I[[@H/NR;@H/M'=@@@CC[@H.J[[@H/NFM
)@@G@@'=@@@C/K@]E\R#@H.K'=@@@JR]0H'CR#F@@@AB@]E7R;@]E9AB@]DXR;@[9OAB@]F*'^@[9ZFN
)@@G@@/K@]E7'=@@@DR#[@@@A#@H/5/,0]FT@[BH/5'=@@@)C9@@B1/?K[9%C9@@B2/?K[9%9?@H.LFO
)@@G@@9*@H;TR;@H;T'=@@[GR7W@@A;CK@@#%8K@@#/K@]FRRB?@@CT8)@J*R;@IK;K8@@@[AFKH'&FP
)@@G@@A#KH9.AF)H'$O#@@@IO#K@@IABKH'&'=@@@<RFKH'$/K@['HC9@@B3/?K[9%R#F@@@A#@H/NFQ
)@@G@@R\KH/NT8K@@AAFKH/NR;@H/M'=@@@C/KF@@[C9@@B6/?K[9%C9@@B7/?K[9%C9@@B8/?K[9%FR
)@@G@@A@KH9"/?K[9OROPN$ '=@@@3+8@@K@/@K[9,R]0H_(AA;)@@[^;@@@C8K@@8[4V)@@'^@]I0FS
)@@G@@'^@]H7+@)H_%:@0H_:/K@]JB:@0H_?/K@]JF:@0H_!/K@]J(:@0H_,/K@]J/:@0H_\/K@]KFFT
)@@G@@:@0H_0/K@]K>:@0H_1/K@]KO:@0H_2/K@]K<:@0H_3/K@]K1:@0H_4/K@]HI:@0H_5/K@]H]FU
)@@G@@:@0H_6/K@]H@:80IAS/K@]HR:80DRM/K@]HW:80FST/K@]H):80CON/K@]H=:80VOL/K@]H$FV
)@@G@@%@0H_7/K@]MAR'K@@@C8K@@[/,)]L9C8K@@]/,)]L9C8K@@ /,)]L9'^@]H7'^@]L)'^D]G6FW
)@@G@@&;)[@@[@:)@@'^@]H7'^@]L)'^D]G6&;)]@@[@:)@@'^@]H7'^@]L)'^D]G6G8) @@ @@H_=FX
)@@G@@[C)H_='^@]H7'^@]L)'^D]G6G@)H_=[@:)@@/K@]G%/K@]G6/K@]G6/K@]G8 @@@@HW8K@@AFY
)@@G@@;^K@@=/@K]G8G8)@@[ @@@@H/K@]G8R'K@@]/K@]GU[@)H_XC8)@@0 @@H_=[4)H_='^@]H7FZ
)@@G@@:8)@@D[0)H_=:8)@@T[?)H_=:8)@@F[*)H_=/K@]HAC8K@@S/,)]L9C8K@@C/,)]L9C8K@@DGA
)@@G@@/,)]L9C8K@@E/,)]L9/K@]F2'^@]H7'^@]L)&;)A@@A#:)@@/K@]F2'^@]H7'^@]L)&;)1@@GB
)@@G@@/K@]HU'^@]H7'^@]L)&;)2@@/K@]HUR;)@@3A7:)@@/K@]F2'^@]H7'^@]L)&;)4@@/K@]HUGC
)@@G@@R7?@@@R3?@@@R\?@@@R:?@@@R$?@@@R<?@@@/K@]H2$;@H.)/K@]H5/K@]F2Q'@@@[/K@]H8GD
)@@G@@/K@]H7')C+H%%8)@@ /K@]I[*@@H_Y/K@]I(*@@H_Z/K@]F2 @@H_)/K@]H8:8)@@'/K@]ILGE
)@@G@@:8)@@,/K@]IU:8)@@./K@]I$:8)@@;/K@]I, @@H_Z @@H_)[@0H_Y9!@H_+; @@[]9(@H_+GF
)@@G@@A<)H_</K@]H8*@@H_&/K@]IR[@0H_&[@0H_Z @@H_)/K@]H8 @@H_&[@0H_Z/K@]I((@@H_)GG
)@@G@@/K@]IZ @@@@H @@@@I/K@]H7[@0H_)*@@H_Z/K@]I>*@@H_Y/K@]I(/K@]H8 @@H_Z/K@]H8GH
)@@G@@(@@H_Y/K@]F29?KH_+ @@H_Y @@H_+ @@H_</K@]H7'^@]I0/K@]H8/K@]I0(@@H_X/K@]I6GI
)@@G@@ @@H_XC@)H_=[@:)@@R;F@@@!8@H_]/K@]MOR#@H_8R;KH_9N8K@@IM#H)@@C@@H_]'=@@@HGJ
)@@G@@ @@H_Y @@H_Z @@H_) @@H_+ @@H_<R]@H_'R#@H_8/K@]I0C8)@@S[4:)@@'^@]JP/K@]F2GK
)@@G@@C8)@@T[4:)@@'^@]JP'^@]H7(@@@@I/K@]F2'^@]L)&;)F@@[@:)@@/K@]F2/K@]JP'^@]J=GL
)@@G@@'^@]H7(@@@@I/K@]JX'^@]L)&;)C@@[@:)@@'^@]H7(@@@@I/K@]F2'^@]L)&;)D@@[@:)@@GM
)@@G@@/K@]JP/K@]J='^@]H7&;)E@@[@:)@@/K@]J=C8)@@U[4:)@@'^@]J='^@]H7[@KH_=*4@H_=GN
)@@G@@/K@]J3;?K@@AG8)@@ /K@]J!C^0H_#&;0H@@[@;)@@&;0@@[[@Z)@@[@\)@@[^0H_#'^@]K@GO
)@@G@@/K@]F2C8)@@V[4:)@@'^@]K@/K@]F2/K@]K@'^@]H7[@)H_WC^)H_#&;)G@@[@:)@@C@KH_#GP
)@@G@@C@)H_W[@!)@@[@KH_#/K@]K[C8)@@W[4:)@@'^@]KS'^@]H7'^@]L)A#:@@@R;)@@(A7:)@@GQ
)@@G@@/K@]F2C8)@@Y[4:)@@'^@]KS/K@]F2/K@]KS'^@]H7'^@]L)&;)%@@[@:)@@'^@]H7'^@]L)GR
)@@G@@A#:@@@R;)@@*A7:)@@/K@]KSC8)@@Z/K@]K&C8)@@X[4:)@@/K@]K*'^@]H7[@)H_$'^@]H7GS
)@@G@@'^@]L)[@)H_*C8)H_$&;):@@[@:)@@/K@]F2C8)@@$[4:)@@C8)H6O[@)H_>C^)H.O @@@@HGT
)@@G@@'^@]L)[@)H_^RFKH.ZA#KH_T @@H_UR#@H_UO;@@@[A#@H_UA]0H_V/,0H1RR]0H_V%XKH.)GU
)@@G@@/K@]LRR#)H_^R;K@@E!@KH_^/K@]LTH8)@@E[@)H_^N8K@@EC8KH.PC^)H_>G@KH_;G@)H_;GV
)@@G@@M#!)@@(@@H_^/K@]LW[@)H_>'^@]I0R#)H_T:C)H.Z/K@]K/C9@@K9/K@[9%N@K@@I @@H_^GW
)@@G@@/K@]LFC8)H6O&;)?@@[@:)@@/K@]F2/K@]L)[@@H_V[@K@@G[@)@@HC9@@@F;G)@[C;^@@[]GX
)@@G@@[@KH_-C))H_-:8)@@ /K@]L4(@@@@I/K@]L4H8)@@00@@@@I/K@]MA!8)@@E/K@]MAT80@@EGY
)@@G@@G@0@@I @@@@I8^@]L&C@)@@JC@@H_V/K@]L)[@@H_VA]0H_-C^@H..G@@H_;[^@H9;C8)@@'GZ
)@@G@@/,0[9]/K@]M#[4?@@@/K@]L_C@@H_VR]0H_-/KE@@@R;@H_K'=@@@C'=@@@)C@0H_([^;@@@HA
)@@G@@C8)@@9[4:@@@R;W@@@:8K@@A/K@]MMR;@H_N'=@@@CRB0H_(/K@[9,R;@H_Q'=@@@C'=@@@)HB
)@@G@@A]0I#GR;@I[X'=@@@JR;@I[-'=@@@J0@@@@G/,0@/SR;@I[='=@@@J0@@@@G/,0@/SR;@I[*HC
)@@G@@'=@@@J0@@@@G/,0@/SR;@I[?'=@@@J0@@@@G/,0@/SR;@I[O'=@@[GRB@I[WT8@@K@O#@H@/HD
)@@G@@O;@@@[A#@I]MAB@I]SO;@@8@A#@I]NO;@@8@O;@@@[A#@H@/'=@@@<R;0I[G/K@]F$R;@I[0HE
)@@G@@'=@@@#R#)I[9;C)@@[P;)@@[T@)H:+(@@@@I/K@]N3?8)@8@AF)I]SPF)I]SR;@I]O'=@@@[HF
)@@G@@0@@I]R'=@@@A*4@I]R/,0@/!(^@I]R/K@]B-RBKI]RP;K@@]&#KI#HRA@I]S(@@@@I/K@]N=HG
)@@G@@?8)@8@AF)I]SPF)I]SR#@I]TO;@@]@A#@I]TR#@I]M:^@I]SR#@I]NAB@I]SR;@I]O'=@@@[HH
)@@G@@R#@@@C/,0]A-O;@@@]/:K]N)/K@]NB ^@I]RR#@@@C/K@]N)/,0]DW@@@]N19?G@@@:@@I]LHI
)@@G@@/K@]N5A#@I]L9*@I]XR')I]U/,0@"T/K@]N$R')I]U/,0[^/R]0I#G/KF@@@:@@I]K/K@]N1HJ
)@@G@@C/@I]E/,0@HSC@@I]LC8K@@H/,0@JX/,0@H\R#@I[/'=@@@IR#@I]^'=@@@I'=@@@)B@@[FBHK
)@@G@@U@@[D_A@@[E:D@@[FIM@@[FGP@@[F7Q@@[F'R@@[GBS@@[GI])O5\*]*P57(]0Q5_%]8R6B:HL
)@@G@@#@S6J?#CT6R!#KF6Z,#SG6$\#)H6\0#*I0RM#0JA@0#8KAC1^@LAK2^CMAS3^KNA)4^Z7A*5HM
)@@G@@^$8A06^\9A87^7'B@8^_;BC9 B/@@@ J.@C[ R"@K] Z_@S# )U@)^ *V@*  0W@0S 8X@8THN
)@@G@@A@Y[@UACZ[CVAK)[KWAS-[SXA)+[)Y"0<[*ZA*=[0)A0>[8-A8&]@+B@$]C<BC*]K=BK(]S>HO
)@@G@@BS%])&B):]*$B*?]0*B0!]8(B8E#@%CB6#C:CC,#K,CK\#S\[KE#)@[SF#*@[)G#0@[*H#8@HP
)@@G@@[0I^@@[8J^K@]@K^S@]CL^)@]KM^*@]SN^0@D*'^8'D0; @;D8/ C/E@. K.EC" S"[K_ )_HQ
)@@G@@EK@ *@[S@ 0@[)@ 8@[*@@@@[0@@@@[8@@@@]@@@@@]C@@@@]K@@@@]S@@@@"8@@@@_@@@@@HR
)@@G@@_C@@@@_K@BK@_S@BS@_)@B)@_*@B*@_0@B0@_8@C@@ES@ES@E)@E)@E*@E*@E0@E0@E8@E8@HS
)@@G@@F@@F@@FC@FC@FK@FK@FS@FS@F)@F)@F*@F*@F0@F0@F8@F8@G@@G@@GC@GC@GK@GK@GS@GS@HT
)@@G@@G)@G)@G*@G*@G0@G0@G8@G8@H@@H@@HC@HC@HK@HK@HS@HS@H)@H)@H*@H*@H0@H0@H8@H8@HU
)@@G@@I@@I@@IC@IC@IK@IK@IS@IS@I)@I)@I*@I*@I0@I0@I8@I8@J@@J@@JC@JC@JK@JK@[K@@@@HV
)@@G@@J)@J)@"0@@@@@@[@@@@@#__/%[@@@L/K@[H:/KF@@])@@@@@@@[@@@@@@@@@@@[@@@@@[@@@HW
)@@G@@@@@@@@@@@@@@@@@@@@C[@H0@/S@@@@PB@[NM@@@@@#C[@@@G[ I)@@[DI@@@&BG)@@^CKH\5HX
)@@G@@PFG@@@@@[@@]@@@@@@@@@@@@@@@@@@@@@[L2@@@[M<@@@[M9D@@[O9@@@[OV@@@@@@@@@@@@HY
)@@G@@@@@@@@@@@@@@$A@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[L2@@@[M<@@@[M9HZ
)@@G@@F@@[O9@@@[OV@@@@@@@@@@@@@@@@@@@@@@@@$B@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IA
)@@G@@            @@@@@@@K@@@@@@@@@@@@@@@@            @@@@@@@C@@@@@@@@@@@@@@@@IB
)@@G@@@@@@@@@@@[SD@@@@@@@#@@@@@@@@@@@@@[VH@@@@@@@@@@@@@@[@@@/C@@@@/G@@@@@@[@@@IC
)@@G@@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@R;0@[C9!@H1+;G@@@=W8@@@EO;K@@:'TK@@H; @@@AID
)@@G@@P;0@@A/^@H1T; J@@@/KF@@@            @@@@@@@@@[*B@@@[*EZ_@@@@@@@[&8@@@[$NIE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[*QIF
)@@G@@@@@[*-@@@@@@@@@[$E@@@[$3@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IG
)@@G@@@@@@@@@@@@@@@@@@@@@@@[:/@@@[2-@[@@@@@@@[3^@@@[3^@@@@@@@@@@@@@@@@@@@@@@@@IH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@II
)@@G@@@@@@@@@@@@@@@@@@@@@@[@@@___@@@@@@@@@@@@@@@A#)H2V@@@@@@@@@@@@@@@@@@@@@@@@IJ
)@@G@@@@@@@@            @@@@@@@C@@@@@@@@@@            @@@@@@@K@@@@@@@@@@      IK
)@@G@@      @@@@@@@@@@@@            @@@@@@@@@@@@@@@@@@@[@@@@@@YH4'@@@@@@@[@@@@IL
)@@G@@@@%H40@@]H47  /         SORT READ ERROR A . (NO OR GO)@@@@@@@@@@@@      IM
)@@G@@            SORT ERROR CODE A             @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IO
)@@G@@@@@@@@C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CYC NO.     IP
)@@G@@. RECORD NOS.           -                 LABEL:    REEL      OF        IQ
)@@G@@      MOUNT     REEL      OF              LABEL ERROR:    REEL      OF  IR
)@@G@@            DISMOUNT  REEL      OF         + MOUNT BLANK           MOUNTIS
)@@G@@ BLANKEND  REDO   END   PART  FINAL MERGE(S) REQUIRED:START MRG NO.    :IT
)@@G@@ INPUT FILES       OUTPUT FILE             UNIT  LABEL       UNIT  LABELIU
)@@G@@                                          OUTPUT@USE     $ ,            IV
)@@G@@@@@@@@@@@@@@@[@@@@@@MH8X@@@@@@@[@@@@@@=H8B@@[H47@[@@@@@@%H8H@@@@@@@[@@@@IW
)@@G@@@@=H8O@@@@@@@[@@@@@@0H79@@@@@@@[@@@@@@GH8+@@@@@@@[@@@@@@MH8>@@@@@@@[@@@@IX
)@@G@@@@%H8(@@@@@@@[@@@@@@%H80@@@@@@@[@@@@@@SH87@@@@@@@[@@@@@@0H87@@@@@@@[@@@@IY
)@@G@@@@%H87@@@@@@@[@@@@@@MH8*@@@@@@@[@@@@@@GH8)@@@@@@@[@@@@@@=H8[@@@@@@@[@@@@IZ
)@@G@@@@2H8O@@[H47@@@@@0@B____@@B001@@^H8_'^@[7?@@[@@@@@[@@@@@@@@@@@@@@@SORT EJA
)@@G@@RROR CODE   @@@@@@@@MH'W@@@@@@@@[@@[@@[H9"022871@@@@@@@@@H0/@@@H0K@@@@@@JB
)@@G@@H14H1=@@@H2^@@@H;N@@@@@@@[@@@@@@@]DA@@@]DZ@@@]D*@@@]D*@@@@@@@@@@@@@@@@@@JC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[#S@G)]#S@G)# S@G)^ S@G) ^S@K*JD
)@@G@@A^S@K*B#S@G)C S@G)D#S@G)E#S@G)F^S@-OG^S@-OH^S@-OI]=@J*J[S@#'@@@@@@@USE  JE
)@@G@@     ,EXTERNALFILE .    @@@@@@@@@@@@@@@@@@@LOG  SORT: T/R=XXX.XMS, IC=XXJF
)@@G@@XXXXXX, OC=XXXXXXXX, BIA=XXX.X@@@@@@@LOG  M1  BLOCK  SIZE :          MERJG
)@@G@@GE  POWER :        .    @LOG  M2  BLOCK  SIZE :          MERGE  POWER : JH
)@@G@@       .    @@@@@[       SORT LINKAGE USED AT WRONG TIME    DRUM BLOCK SJI
)@@G@@IZE TOO SMALL =   @@@@@@FASTRAND BLOCK SIZE TOO SMALL =     @@@@@@@@@@@@JJ
)@@G@@@@[@@[Z_____@_____/K@]BK@@LH/Q@@=H/T@@EH/PR$CORE      ]MDH.N@@[H.+@@@@@@JK
)@@G@@PARAMETER CARD INCORRECTCARD TABLE OVERFLOWED   EOF CARD MISSING  @@@@@@JL
)@@G@@@@SH_ @@@@@@@@@@@@@@MH_H@@@@@@@@@@@@@@SH_D@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JN
)@@G@@@@[H./@@@___@@@MRG@@@RTA@@@RTB@@@RTC@@@DOA@@@DOB@@@NTA@@@NTB@@@NTC@@@ORTJO
)@@G@@@@@ECK@@@RSZ@@@SZW@@[H.N      @@[@@[@@[@@@@@@H_/N@@I@SN@@I@UN@@I@WN@@I@YJP
)@@G@@N@@I@)N@@I@+N@@I@=N@@I@&N@@I@*N@@I@%N@@I@?N@@I@,N@@I@0N@@I@2N@@I@4N@@I@6JQ
)@@G@@N@@I@8N@@I@'N@@I@/N@@I@"N@@I[@N@@I[]N@@I[^N@@I[AN@@I[CN@@I[E9@@H_/XA    JR
)@@G@@      XB          XC          XD          XE          XF          XG    JS
)@@G@@      XH          XI          XJ          XK          XL          XM    JT
)@@G@@      XN          XO          XP          XQ          XR          XS    JU
)@@G@@      XT          XU          XV          XW          XX          XY    JV
)@@G@@      XZ          @@@I[G[@@@@]#UA[@@_@@@@=+@@]M'<@@]N$8@@H_/9@@I[GR$COREJW
)@@G@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@USE K$FILE,*K$FILE .   JX
)@@G@@@ASG,A K$FILE .   @ASG,T R$CORE,///15 .   @ASG,T XA,F4/400 .      @ASG,TJY
)@@G@@ XB,F4/200 .      K$FILE      @@@@@@@K@@@@@@AI[6@@@@@@K$FILE            JZ
)@@G@@@@@@@@@@@@@@@@@@@@@[BI[.RECORD UNLOADED TWICE.                    @[ I] KA
)@@G@@REORG INVALID.  TERMINATING.  @&#I][@@@@@@[[@@@@@@@@@@@@@@@@@@@@@@______KB
)@@G@@@@@@@@@@@@@@@@@@@@K$FILE      @@@@@@@K@@@@@8@I]M@@@@E@@@@@@@_____.@@@@@@KC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@Z,[C#@@@___@@EH!>@@-H05KD
)@@G@@@@QH1%@@EH8K@@EH/.@[:I#V@@UI ,@[/IA*@@JIEC@[NIE=@@FIG )#AH!\)@OH1Q)AKH2@KE
)@@G@@)^<H8U)AOH.B)@*I A)@)IAC)[=IC=)@HIER)@IIF7@@@___@@@___@@@___@@@___@@@___KF
)@@G@@*@@H@)'^@@!9R#0H[]P;0@@D @@@@KO;0@@D?XJ@@#CXJ@@#*OJ@@@/K@[CC[[@H05T9@@@ KG
)@@G@@[D@I#>RB0H[@ @@@@IA]0I^<C[J@@@[[IH!!A:,H!!R#@H8KARIH!!AB/H2@R]K@@G @GH2[KH
)@@G@@O;@@@]A#@H8KR#K@@J&;K@@[1@H)@[/K@[CZCTX@@@[XTH2@+[@H/.(@@@@L/K@[DDC9@@@[KI
)@@G@@R#K@@JO;K@@[0@H@@@/K@[C\:5H@@@/K@[C5O;K@@[/K@[C(A#TH2[A#@H8KP#@@@DP;@@@]KJ
)@@G@@AFDH2[/K@[DDA#WH2@C9K@@CH9K@@[R]0H@/O'0@@[R])H/_AY?H2@R#KH05T8K@@ A]'H8LKK
)@@G@@ @EH8MO]0@@HO')@@]8^K[C"P'0@@[A]0H@/A])H/_G9@@@[O;@@@[/K@[C$O;)@@[CPJ@@@KL
)@@G@@O#0@@K*@@@@K/K@[CNA#)H1IR#KH@/O;K@@[A#KH[[A#KH08O;K@J*A#KH[#A#KH0/O;K@J*KM
)@@G@@A#KH06ABKH1BR#@H05T8@@@OAF@H1CO#K@@GA#KH07O#@@@HR;)@@E;*)@@[P;)@@]&#)I^5KN
)@@G@@R#KH05ABIH1RO#@@@H/:)[D=AFKH14A#@H@/'=@@@<RB0H[]A#0H!$R#)H08P#)H1LRA@H1LKO
)@@G@@AR*@@@P;)@@#AV*@@@R#)H08A#)H1LR#Z@@@;CK@@SARKH!(AFKH!%AFKH!:AZY@@@9!J@@[KP
)@@G@@9(@H1@9(I@@[O;)@@#A#)H08(4J@@C/K@[EBCDJ@@^G[@I^6[[I@@@O;)@@[A#)H08/K@[G[KQ
)@@G@@R#)H0/P#)H1MRA@H1MAR*@@@P;)@@#AV*@@@R#)H0/A#)H1MAZY@@@9(I@@[O;)@@#A#)H0/KR
)@@G@@R')@@[AA)H1CP')@@[AA)H!%O')@@OAA)H!:R')@@KA2)H1#R')H1@/,0@9NRB@H1AT8@@@OKS
)@@G@@A#@H1KRB@H1BR#KH!(R;)@@[(^@H1#/K@[H+R;@@@LA3@H1#RB@H1BA#@H1DR#@H06:@@H1DKT
)@@G@@R#@H07AB@H1BR#@H1CA#@H1EO;@@@OAB@H1CR')H1@RB@H1DR]@@@GOA@H1#A]@H1FA]@H.[KU
)@@G@@A]KH.]A])H.#A]0H.^9*@H. 9*)H.B9(@H.D/,0@9NR]@H.[R]KH.]R])H.#R]0H.^9?@H. KV
)@@G@@9?)H.B9!@H.DRB?@@[R#KH!((CG@@#/K@[G-REW@@]P'K@@[O]K@@GRE?@@AP]K@@ER;0@@[KW
)@@G@@0@D@@@/K@[F7C5D@@@+9@@@C*@@@@L/K@[H$RA(@@@O])@@GC!E@@@+9@@@C(@@@@L/K@[F7KX
)@@G@@CXE@@@:X@H1J/K@[H)N@KH1IR]0H1H2XF!!!/K@[F7P'0@@[C[FH!![[@H1JC[VH\LG9K@@[KY
)@@G@@[[VH\LC!@H1J+9@@@[*@@@@L/K@[HK[[@H0;C5D@@@+9@@@K*@@@@L/K@[F7C[@H1J+[@H/"KZ
)@@G@@OF/@@A:[KH/./,0[JXPF/@@A:C/@@#/K@[G-O;0@@[P'K@@[/K@[FJ @@H1GR')H08/,0[H#LA
)@@G@@R')H0//,0[H#(O@X!$/K@[GER#0H1PA#0H0'A#0H0"RR0X!$O#0H!$A#0H!$/K@[D?R#)H08LB
)@@G@@P#)H1LP;)@@#R]@H1LAV*@@@ OC@@@R#)H0/P#)H1MP;)@@#R]@H1MAV*@@@ OC@@@R#)H08LC
)@@G@@RB0H[[P#)@@JAF)H[[R#)H0/RB0H[#P#)@@JAF)H[#*@@H1O/,0[QI/K@Y^<(@@H0;/K@[G:LD
)@@G@@C9@@@ R')H08C[K@@IH[KH0'?[@@@L/,0[H#A#)H0' @@H0;(@@H0_/K@[G5C9@@@ C[K@@ILE
)@@G@@H[KH0"R')H0/?[@@@L/,0[H#A#)H0" @@H0_O#@H1AO;)@@[%@@H1F/K@[FB*@@H1G/K@[F/LF
)@@G@@0@@H1#'=@@@ARB@H1CP;@@@[AB@H!%O;@@@OAB@H!:/K@[E<0@E@@]/K@[HI9!E@@[R]E@@@LG
)@@G@@[DC@@@H[K@@KG9K@@[[ S@@@C[U@@@G9K@@[[[U@@@A#%@@[/KF@@@[[KH0_C5D@@@+9@@@KLH
)@@G@@*@@@@L/K@[F7(@@H1O/K@[F!C!@H1J;D@@@ *@@@@K/K@[F7C!@H1J+9@@@C[[KI#W/,0[PRLI
)@@G@@/K@[F!R%0H1J/K@[F>C5KH1#:9K@@M/K@[F/R')H1@/,0@/!(@@H1O/K@[F79*@I^U9*)I^WLJ
)@@G@@9(@I^YA]@I^)A]KI^-A])I^+OF/@@A9!@H1@9(@H1?C T@@@C @H!(;(K@@M;!@@@M/,0[IRLK
)@@G@@/K@[F7CXH@@@N@KH1IR]0H1H2XF!!!/K@[IKP'0@@[C!FH!!+9@@@[(@@@@L/K@[IC+9@@@CLL
)@@G@@[[KI#W+9@@@)R#)I^V(@@@@L/,0[QY+9@@@K(@@@@L/K@[IK9?@I^U9?)I^WOF/@@AC[FH!!LM
)@@G@@/,0[JX9?@I^U9?)I^W9!@I^YR]@I^)R]KI^-R])I^+/K@[F7A]0I^4N8K@@ER]0H1:2[F!1QLN
)@@G@@/K@[J]P'0@@]RA;H1RC[@@@FCDV@@]H9K@@[G[@@@LCDV@@AH[@@@L[ @H16R]@H16'^@@>QLO
)@@G@@C[D@@@;(@@@A;D@@@A)[@H17NCV@@#N@)H159[S)@@/K@[I9RBS@@[O#K@@FR])@@HRB!@@@LP
)@@G@@O#)@@HP;)@@[%@I@@@/K@[I!R]0I^4/KF@@[[@@[I_C8@[I.'=@@[Q/K@[J@FOREIG8@^I^ULQ
)@@G@@@@@@@@R]0I^4/KF@@@R#@H1%[[GH1Q[ @H14C GH1R[ @H13O;@@@]:8@@@E @@@@GA#@H1%LR
)@@G@@R')H1?A]@I^1A]KI^2A])I^39*@I^:9*)I^!9(@I^\/,0@9N*4@H1\/,0@/!RA0H139?@I^:LS
)@@G@@9?)I^!9!@I^\R]@I^2R]KI^2R])I^3/K@[IYA]@Y#VR]@I#VA]S@@[A]*@@]A]8@@#9*C@@^LT
)@@G@@9**@@A9(C@@C'^@@>Q(@@@@G/K@[O>A#@H1_A#C@@KC[C@@CR\S@@C;*K@@<;CK@@<A#S@@TLU
)@@G@@R#KH.@O;K@@[A#KH.@;H@@@G;DK@@S;D@@@G[[C@@FR#@@@LA#C@@GR#WH2@A#S@@HR#?H2[LV
)@@G@@A#*@@JA#*@@RR]K@@GO'K@@]&'K@@[RBTH2@RVX@@@A#S@@ERBDH2@R<G@@@O#@@@ER#G@@@LW
)@@G@@A#C@@Q:@C@@K/K@[M.'^@@=8(@@@@H/K@[OVA#S@@OA#*@@NA#8@@M[[C@@S;*)@@M;GK@@MLX
)@@G@@9?@H!%\@@@@I/K@[O]RZ9H2@C9K@@C;(K@@[G[K@@JR#JH8MP;@@@[R#K@@GO;K@@ \@@@@ILY
)@@G@@/K@[OCO;0@@]%@0@@L/K@[KUR#@@@K9?G@@[9*@I#XR#K@@I;*K@@M;CK@@M @@@@GC[K@@HLZ
)@@G@@W8@@@ H[K@@H(@@@@LC9K@@[[ KI#>RZDH2@C[WH8LR;K@@B;*K@@[N@K@@H&;@@@[R#K@@GMA
)@@G@@O;K@@]M#H!8L[[WH8LC KI#>[ WH8M;))@@MAF?H8MRBGH8LAB@I#=A]@H.[A]KH.]A])H.#MB
)@@G@@A]0H.^R')I#X/,0@9N(^@I#)/,0@/!R]@H.[R]KH.]R])H.#R]0H.^RB@I#=R#S@@NPBKI#>MC
)@@G@@T^KI#<O#@@@HCDG@@#GDG@@A?[C@@M/K@[O9R])@@GOE%@@]P]*@@M0@E@@@/K@[O9C5E@@@MD
)@@G@@+9@@@C*@@@@L/,0[N>RA%@@@O])@@GC!E@@@+9@@@C(@@@@L/K@[O\CXE@@@:XC@@P/K@[N<ME
)@@G@@N@KH1IR]0H1H2XF!!!/K@[PHP'0@@[C[FH!![[C@@PC!C@@P+9@@@-R#S@@O%9K@@-/K@[MKMF
)@@G@@RQ8@@PCXVH2@%[S@@E/K@[MK/K@[L'*@C@@T/K@[MH(@@H1_/K@[MHA]@H.[A]KH.]A])H.#MG
)@@G@@A]0H.^9*@H. 9*)H.B9(@H.DR')H1//,0[+[ @@H1_R]@H.[R]KH.]R])H.#R]0H.^9?@H. MH
)@@G@@9?)H.B9!@H.D+9@@@C[[KI#W/,0[Q%C[C@@PC[KI#VG9K@@2[[KI#V+[@H/.R#S@@OR#*@@NMI
)@@G@@R#8@@M*@@@@L/,0[JXC[KI#VH9K@@2[[KI#VRQ8@@PRA;H2@O'0@@[0@F@@@/K@[M(CTV@@@MJ
)@@G@@%[S@@E/K@[MZR<F@@@O#@@@ER#G@@@/K@[KBR#0@@FO;0@@]R<F@@@O#@@@EC[G@@@C[S@@EMK
)@@G@@O;@@@[(@@@@K/K@[P#1@@@@K/K@[M8RV\@@@:@)@@L/K@[M;O3J@@@O3_@@@;(@@@[/K@[M0ML
)@@G@@R#G@@@/K@[KBA]@I^=A]KI^>A])I^&A]0I^$9*@I^*9*)I^(9(@I^%R]*@@EAQ)H1;R')H18MM
)@@G@@*@@I^T/,0[+[R]@I^=R]KI^>R])I^&R]0I^$9?@I^*9?)I^(9!@I^%R]8@@GC[K@@D;DK@@MMN
)@@G@@:DVH2[/K@[NSO]KI^7R]*@@]/K@[K@R#@H.@P;@@@[A#@H.@R]S@@[R]*@@]R]8@@#9?C@@^MO
)@@G@@9?*@@A9!C@@CR]C@@@/KF@@@R%8@@P/K@[L?9*@I^U9*)I^W9(@I^YA]@I^)A]KI^-A])I^+MP
)@@G@@R]K@@ER#S@@OR#*@@NR#8@@MR]8@@S9!F@@[9(@H1?C T@@@C C@@O;(K@@M;!@@@M/,0[IRMQ
)@@G@@/K@[N_R])@@H9?@I^U9?)I^W9!@I^YR]@I^)R]KI^-/K@[L)R#@I#''=@@@I'=@@@)RB@H1DMR
)@@G@@RBS@@NPBKH1ET^KH1AO#@@@H/K@[LLR;K@@B;*K@@[OZTH2@P#K@@JN@K@@HR#ZH8LC[ZH8MMS
)@@G@@&;0@@[R#@@@JO;@@@]M#/!8LA#ZH8L[[ZH8MRBJH8LR#S@@NPBZH8MT^KI#<O#@@@H/K@[LLMT
)@@G@@[@@[O-C8@[OZ'=@@[Q/K@[O+DBPERR8@[I^U@@@@@@R#@I#&'=@@@I'=@@@)[@@[O:C8@[O(MU
)@@G@@'=@@[Q/K@[O?APSERR8@[I^U@@@@@@R#@I#!'=@@@I'=@@@)[@@[O5C8@[O3'=@@[Q/K@[O6MV
)@@G@@VACANT8@[I^U@@@@@@R#@I^]'=@@@I'=@@@)[@@[O_C8@[O.'=@@[Q/K@[P@SLOT  8@[I^UMW
)@@G@@@@@@@@R#@I^F'=@@@I'=@@@)[@@[PDC8@[PB'=@@[Q/K@[PEMANERR8@[I^U@@@@@@R#@I#4MX
)@@G@@'=@@@I'=@@@)[@@[PNC8@[PL'=@@[Q/K@[POBADREC8@[I^U@@@@@@R#@I^M'=@@@I'=@@@)MY
)@@G@@A]@IA[A]KIA]A])IA#A]0IA^9*@IA 9*)IAB9(@IADCDG@@AO#0@@K'^@@>QA#@I #A#@I ,MZ
)@@G@@A])I \:@KI^_/K@[P4A#KI^_R])H[]C[E@@@;D@@@S:[@@@H/K@[P0(OE@@@'=@@@)OQ%@@@NA
)@@G@@/K@[P*C5E@@C[[@I 0R')I^//,0[+[R]KIA]R#@IA *@@I 0/K@[QA*@@I#W/K@[Q3R')I ,NB
)@@G@@/,0[+[R#K@[JP;K@@[ @@@@GW8@@HMA#@I ^R')I @/,0@"TR]0I 1O'0@@[A]0I 1R]@IA[NC
)@@G@@R]KIA]R])IA#R]0IA^9?@IA 9?)IAB9!@IAD/KF@@@A]0IA^R')I @/,0[^//,0[+2C/@I 2ND
)@@G@@/,0@HSC@@I 1/,0@J=C8@I "C8K@@L/,0@I(/,0@H\R#@I 8'=@@@IR]0IA^/KF@@@A]@IA[NE
)@@G@@A]KIA]A])IA#A]0IA^9*@IA 9*)IAB9(@IADA#@I #A#KI \A#@I ,R#K@@I/K@[P=A]@IA[NF
)@@G@@A]KIA]A])IA#A]0IA^9*@IA 9*)IAB9(@IADR#C@@Q/K@[P-C5D@@@+9@@@K*@@@@L/K@[R@NG
)@@G@@C G@@[[D@I^;C[D@@@;(@@@A;D@@@S[ @I^;R')I^8/,0[+[/K@[P''^@@=8AF)I^;/K@[Q9NH
)@@G@@@@@@@@RAU@@[N^9@@@(@E@@@/K@LR#C@D@@@+@@IEG/@K[RMC^D@@@H8@@@[[^D@@@N@0@@GNI
)@@G@@C8@@@*+?D@@@[?T@@@(@@H[K/K@LR#CWD@@@'^@[WL(@@@@C/K@LR#R;@@@[&;@@@[R#KIEHNJ
)@@G@@N8K@@VM#W)@@*^@IEF/K@[R1R^KH[K @@@@GCWL@@[GSL@@[!@K@@GC@@@@H(O[@@@/K@[R(NK
)@@G@@OOL@@@/K@[R-O;@@@E[@@IAFC@@H@/K8@@@[[^KIEFG@@IAF[@@H@/'=@@@< @@@@GR8K@@GNL
)@@G@@R@)IEFN@KIAFM@-)@@R 0IEFR@K@@D&8K@@[R@)IEFN@K@[#M@-)@@C)C@@[[?B@@@CWD@@@NM
)@@G@@'^@[WVR[)@@[R@K@@AO*L@@@O8K@@[C31@@@/#0[SSR)-@@@O@)@@DC@M@@@8A0[SEO8K@@]NN
)@@G@@O8)@@[ @@@@G;?@@@[/@@[SQR@0@@]P@0@@DA)1@@@O0-@@@O8K@@[8A0[SG/K@[SS )[@@@NO
)@@G@@/K@[SNCWD@@@'^@[W=R[K@@[C:5@@@O9K@@[/#0[UE8A0[SZC= @@@;C@@@ /@@[TKCS @@@NP
)@@G@@'^@[V:(@@@@[/K@[S6C= @@@%=[@@@/K@[S"C)[@@@:) @@@/K@[S3O#@@@D&;@@@[R)5@@@NQ
)@@G@@O@0@@B&80@@[N0P@@@M@/)@@O9K@@[8A0[SZ/K@[UER@)@@E&8)@@@R)5@@@O@0@@B&80@@[NR
)@@G@@N0P@@@M@2)@@/K@[S3R)-@@@O@)@@DC]+@@@O8)@@[C8@@@[+=[@@@C]'@@@*@@@@HC]2@@@NS
)@@G@@R)5@@@O@0@@B[]<@@@O80@@[C8@@@[+= @@@*@@@@H[]3@@@/K@[S3CS @@@'^@[V'(@@@@[NT
)@@G@@/K@[T=()[@@@/K@[T=C= @@@%=[@@@/K@[T:C)[@@@:) @@@/K@[S3G@@@@D&;@@@[R)5@@@NU
)@@G@@O@0@@B&80@@[N0L@@@M@/)@@/K@[S3 @@@@GR80@@GR)>@@@O@)@@BN0P@@@M@<)@@/K@[S3NV
)@@G@@R)-@@@O@)@@DC]+@@@O;@@@[ @@@@R @@@@S(=[@@@/K@[T/C8@@@C+=[@@@/@K[T8C]2@@@NW
)@@G@@O8)@@[C8@@@[+=[@@@/@K[T/C#]@@@R)5@@@O@0@@B[]<@@@O80@@[C8@@@C+= @@@/@K[U NX
)@@G@@[]3@@@O80@@[C8@@@[+= @@@/@K[S3[##@@@/K@[S3C35@@@/#0[W!8A0[UHC$>@@@A[KIA*NY
)@@G@@(@@@@U/K@[V O9K@@]C@@IA*C)G@@@G@@@@B @G@@@CS @@@'^@[V'(@@@@[/K@[V]()[@@@NZ
)@@G@@/K@[V]R)-@@@O@)@@DC]+@@@ @@@@R @@@@S(=[@@@/K@[U!O8)@@[C8@@@C+=[@@@/@K[U(OA
)@@G@@C]2@@@O8)@@[C8@@@[+=[@@@/@K[U!C#]@@@C@@@@ H@@IA*H8@@@]'^@[VU[]-@@@O8K@@[OB
)@@G@@H;)@@[/J)[V C8@@@C+= @@@/@K[U/[]1@@@O8K@@[H;)@@[/J)[V C8@@@[+= @@@/@K[V]OC
)@@G@@[#[@@@H;)@@[/J)[V O9K@@[8A0[UQ/K@[W!C/@HA7/,0@HS9?@IEI/,0@IYCWD@@@/,0@J=OD
)@@G@@C/@@@(/,0@I[CWD@@@/,0@JJC/@@@)/,0@I[C/@@@[/,0@IEC8@IA(C8K@@6/,0@I(/,0@H\OE
)@@G@@R#@IEK'=@@@I'=@@@)@@@@@@R@KIA*R)L@@@O@K@@BC[[@@@)[GIA2[[L@@@O8K@@[/[@LVUOF
)@@G@@8#@[V=+[GIA2/[K[V(C@K@@GG@KIA*O0X@@]8#@[V=/K@LVU@@@@@@R@K@@AC%-@@@/])[V8OG
)@@G@@O8K@@[8 )[V1C=L@@@;CK@@ /@K[V6:S[@@@/K@LV:O8K@@[8 )[V1 @@@@[/K@LV:@@@@@@OH
)@@G@@R@K@@AC%-@@@/])[WA8 )[V_O8K@@[C=L@@@;CK@@ /^K[W :S[@@@/K@LV'8 )[V_O8K@@[OI
)@@G@@C2-@@@/])[WJ8 )[WEO8K@@[O8K@@[:S[@@@/K@LV'8 )[WF @@@@[/K@LV'@@@@@@RA@H[KOJ
)@@G@@:WC@@@/K@LWL(OC@@@/K@[WTOQC@@@/K@[WN @@@@C/K@LWL@@@@@@R^KH[@%W[@@@/K@[W)OK
)@@G@@/K@LWV(O[@@@'=@@@)OOL@@@/K@[WX@@@@@@R^KH[C%W[@@@/K@[W(/K@LW=(O[@@@'=@@@)OL
)@@G@@OOL@@@/K@[W&CV8@@@/#0[-(A]@IB*NTC@@[O'@@@]8A0[W3C8@@@ :*C@@@/K@[)^(WC@@@OM
)@@G@@/K@[XKC*C@@@C*S@@[;*K@@M;?@@@MN@KIB$R[@IEL2@^)@@'=@@@)P[@IEM'^@[XXC^^@@@ON
)@@G@@'^G@@@/K@[XH@@@@@@RPS@@[O[K@@BNXS@@[C?C@@[C*S@@['^@[XM/K@LX O'@@@]8A0[W3OO
)@@G@@/K@[-,'^@[X /K@[XH@@@@@@&9K@@[C5XIB(8LK[XQL8@@@[;GK@@=W8K@@A')IIB,G8@@@[OP
)@@G@@8LK[XQ/K@LXM@@@@@@C*S@@[ROS@@@O@K@@DC!8@@@RO*@@[O@)@@BC,C@@[NYC@@[NX8@@@OQ
)@@G@@/K@LXX@@@@@@N[K@[CC@@@[B!@@@[C/K@[X2R[K@@]C@@@@ON[K@[C'^@[XMN[K@[B&8K@@[OR
)@@G@@&8)@@[8LK[X5C@@@@NH8@@@[;G@@@=W8@@@A')HIB4G90@@[C@@@@OH8@@@[;G@@@=W8@@@AOS
)@@G@@')HIB'G'@@@[8LK[X5/K@LX*@@@@@@N[K@[CC@@@[B!@@@[C/K@[YHR[K@@]C@@@@ON[K@[COT
)@@G@@'^@[XMN[K@[BG[0@[BG]@@[CH90@@[H'@@@[C@@@@NH8@@@[;G@@@=W8@@@AO@K@@GC@@@@OOU
)@@G@@H8@@@[;G@@@=W8@@@AO@)@@G&8K__"&8)__"8LK[YYC@@@@NH8@@@[;G@@@=W8@@@A')HIC@OV
)@@G@@H90@@[C@@@@OH8@@@[;G@@@=W8@@@A')HICAH'@@@[8LK[YY/K@LY#@@@@@@&8K@@[ @@@@QOW
)@@G@@ @@@@R @@@@T @@@@S @@@@P8L0[Y4C@@@@NH8@@@[G90@@[;G@@@=W8@@@A')HICG+;@@@JOX
)@@G@@ @@@@SS')@@E9+)@@ST'K@@EG]K@@Q;,)@@=8L0[Y48M@[Z#G]@@[CC@@@@OH8@@@[;G@@@=OY
)@@G@@W8@@@AO@)@@G&8)__"C@@@@OH8@@@[H'@@@[;G@@@=W8@@@A')HICM;IK@@A8M@[ZE/K@LY?OZ
)@@G@@@@@@@@&8K@@[ @@@@P @@@@Q @@@@R8L0[ZTC@@@@NH8@@@[G90@@[;G@@@=W8@@@A;,K@@APA
)@@G@@')HICSC])@@R8L0[ZTW]KIEN @@@[BG]@@[CH'@@@[C@@@@OH8@@@[;G@@@=W8@@@AO@)@@GPB
)@@G@@C@@@[CH8@@@E/@@[Z1/G@[Z1N'@@@EN[0@@G&8)__"8M@[Z4/K@[Z"C@@@@OH8@@@[H'@@@[PC
)@@G@@;G@@@=W8@@@A;I)@@=W')@@E)'0@@0')HICY/K@[Z2(@@@[B/K@LZNN]@@[B @@@[BC])@@PPD
)@@G@@/K@[Z2R@K@@C&8K@@[R@)IEOC?C@@@T8@@@]G8@@@]N@K@@GM@-)@@H\8@@@C?C@@@T8@@@]PE
)@@G@@O]@@@G[#0IECA]@IEDCV)IC>8A)[)P/K@[-&R]@IB*CW@IC=/@@[)-GO@IC=H8@@@[;G@@@=PF
)@@G@@W8@@@A*@@@@HG8@@@[C^T@@@?@K@@G/K@[-ZCW@IC>GO@IC>H8@@@[;G@@@=W8@@@A*@@@@HPG
)@@G@@G8@@@[C@K@[^?@K@@G/K@[-ZR'@IC=C\0IC=8A0[)\/K@[-]O'@@@](WC@@@/K@[-@C*C@@@PH
)@@G@@C*S@@[;*K@@M;?@@@MN@KIB$R[@IEL/@@[)!2@^)@@'=@@@)P[@IEM'^@[XXC^^@@@'^G@@@PI
)@@G@@/K@[)!'^@[X /K@[)!CW@IC=CW0IC>KO@IC=[OKIC=KO0IC>[P@IC>C\0IC=R'@IC=8A0[-GPJ
)@@G@@/K@[)NO'@@@]K?C@@@/@K[-QH8K@@[;GK@@=W8K@@AG8)@@[[?*@@@GOS@@@[OS@@@K?8@@[PK
)@@G@@H9@@@[;H@@@=W9@@@AG9K@@[[!S@@[GPC@@[[PC@@[/K@[-ECO@IC>H8@@@[;G@@@=W8@@@APL
)@@G@@*@@@@HG8@@@[N[@@@GC#0IECR]@IED/K@[XHCWC@@[H@@@[#CSS@@[H@K@@GN[@@@HC@@@[^PM
)@@G@@[^B@@@N@K@[#K@@@[#N@0@@HG@@@@B&;@@@[C@K@@D&;K@@[M#H)@@R;@@@[&;@@@[R#KIEHPN
)@@G@@N8K@@VM#H)@@C@E@@@[@@IEER')IEE/K@LR#C@E@@[[@@IEPC@G@@@[@@IEQC8@@@@(@@@@GPO
)@@G@@'^@[R#AA0IF0A@KIFUA@)IFVA@0IFW(@@IE,'^@[<[(@E@@@/K@[+> @@@@H(@@H[L/K@[+WPP
)@@G@@R^KH[L&8K@@[NCKH[LC@E@@[CWG@@@2W[)@@/K@[+WP@KIG COL@@@R^XIE='^@[=4R@KIEPPQ
)@@G@@C@@IEQ[@[@@@R@KIFUR@)IFVR@0IFW/K@YF0N8)@@E8K)[+*/K@[+,R]@@[](4CIE=/K@[+&PR
)@@G@@R^SIE='^@[=4/K@[+&R@KIFUR@)IFVR@0IFW/K@YF0AA0IF0(@@IE,/K@[$,A@KIFUN8)@@EPS
)@@G@@8K)[+9/K@[+_R]@@[](4CIE=/K@[+7R^SIE='^@[>T/K@[+7R@KIFU/K@YF0@@@@@@C8@@@[PT
)@@G@@[@@IE,(@@H[L/K@[<IR^KH[L&8K@@[NCKH[L8KK[<F/K@[<ICOL)@@[4HIE=/K@[<DN8)@@EPU
)@@G@@8K)[<L/K@L<[R@0@[](4#IE=/K@[<JC@@@@#G@@@@G9?WIE49*KIE19*KIERC8@IE\'=@@@JPV
)@@G@@/C@[<3C/@IF1/,0@HSC/@@@@/,0@I[C@@IGA/,0@IWC/@@@[/,0@IE9?@IE1/,0@IY9?@IGBPW
)@@G@@/,0@IYC/@@@[/,0@IEC/@@@./,0@I[/,0@H\C8@IF7'=@@@J/C@[<3R')IF7/,0@/S'=@@@)PX
)@@G@@C@@H@/K8@@@[[^NIE=G8@@X8[@@H@/'=@@@<R^NIE= @@@@GR8)@@GR@0@@[&80@@[N8K@X8PY
)@@G@@M@2)@@C@@IGD'=@@@U 4[@[* 0[@[* @@@@HC8)@@JC8@@@[\4KIEX[4[@[*\4KIEX[0[@[*PZ
)@@G@@ ^[@@TC8@@@[[@[@@BC8@@@][@[@@CC@@IGE[@[@@OC@@IGF[@[@@0C@@IGG[@[@[GC8@@I@QA
)@@G@@[C[@@P[C[@@1[C[@[H[C[@@^C8@@@C[0[@@#'=@@@?[@[@@S[@[@@4[@[@[K @[@[J @[@@RQB
)@@G@@ @[@[(O@@@@@9?@IE19*[@@@C@@@@[G8@@[8C8K@I@[@[@@D[^W@@@G8@@I@[@[@@E[^W@@@QC
)@@G@@(4[@[*/K@[<JC@@IGH'=@@[Y/K@[<J@@@@@@R][@@D*@[@@AR][@@EC[@@[#G9@@@]C8@@I@QD
)@@G@@H@[@@B?@@@@K/K@[&YH9@@@[R]L@@BO]K@@C&'K@@[[DD@@@[ D)@@C@E@@@[@D)@@C^E@@[QE
)@@G@@&;@@@[N@K@[#M]W)@@P]K@@CAAL@@BCCC@@@G8@@@[[CC@@@C@[@@3G8@@@[[@[@@3N#0@@GQF
)@@G@@C^1@@P?[@@@J/K@[>S[ [@@P[ [@@1/K@L=4@@@@@@R][@@D*@[@@AR][@@E*CC@@@'^@[>;QG
)@@G@@0@[@@#'=@@@A9?[@@@9*@IF>9*@IFZ*4[@[*'^@[&0C@[@@C[@[@@6[@@IF%C@@@@[O;@@@0QH
)@@G@@[^@IF(C8@IF>'=@@@#*4[@[*/K@[&6C@@@@[G8@@@O[^@IF<C8@IFZ'=@@@#C@[@@2[@@IFXQI
)@@G@@C@[@@3[@@IFY'^@[$V/K@L>T@@@@@@*0[@[*'^@[&)0@[@@#'=@@@A*4[@@#'^@[$MAA[@@^QJ
)@@G@@C@[@@C[@[@@ G8@@@)[@[@@CC@@@@['=@@@[C8@@@[[@[@@BH@[@@A[@[@@AC@[@@2G8@@@[QK
)@@G@@[@[@@2*4[@[*'^@[&9C@[@@D*@[@@AC@[@@E&;@@@[C8K@I@[@W)@@H8K@@[N@K@@H @@@@IQL
)@@G@@C8K@@IM#H)@@/K@L>;'^@[>;/K@[=5@@@@@@ 0[@[*C8@@@[G^[@@T[^[@@TC@@@@[O;@@@OQM
)@@G@@[^@IFG9?[@@@9*@IFCC8@IFC'=@@@#*4@IFF'=@@@)'^@[&0/K@L&)@@@@@@9?[@@@9*@IFHQN
)@@G@@C8@IFH'=@@@#/K@L&0'^@[&0'^@[&0/K@[>5@@@@@@C@[@[(G8@@@[[@[@[(%8@[IC/K@L&9QO
)@@G@@0@[@@#'=@@@A'^@[&0 @[@[(C@@@@[O;@@[G[^@IFQ9?[@@@9*@IFMR;@IFM'=@@@#'^@[&0QP
)@@G@@'^@[&09?[@@@9*@IERR#@IGH'=@@[X'^@[&)/K@L&9@@@@@@(4[@[*'=@@@)C4[@@#%8@@@]QQ
)@@G@@'=@@@)C@@[$M[@@[&9/K@[$[@@@@@@C/@IF1/,0@HSC@@IFX/,0@J=C8@IF:C8K@@D/,0@I(QR
)@@G@@C@@IFY/,0@J=C8@IF!C8K@@G/,0@I(9?@IFZ/,0@IY/,0@H\R#@IGI'=@@@I/K@L$VR#@IGJQS
)@@G@@'=@@@I/K@YF0@@@@@@@@@H!*@@@@@@@[@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@QT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@___$>Z@@@@@@@@@@@@@@@@@@___$>Z@@@@@@@@@@@@QU
)@@G@@@@@@@@@@@@@@@K@@@@@@@@@@@@@@@@@@@@@@@@O@@@@@@@@[@@@@@@@@@@@@@@@@@@@@@@@@QV
)@@G@@@@[@@@@@@@@@@@@@@@@@@@@@@@@H1N@@@H1N@@@@@@@@@@@[____0R@@@@@@@@]@@@@@@@@@QW
)@@G@@@@@@@@@@@@@@@K@@@@@@@@@@@@@@@@@@@@@@@@[@@@@@@@@@K__@@@__"@@@K@@@@@@@@@@@QX
)@@G@@@@@H1'@]@@@]@@@@@@@@@@@@@@@H1"@#@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@QY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@K@@@@@0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@QZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@H.F@@@@@@@@@@@@@@@@@@@@@@@@@K@@@@@@@@@@@@@@@@@@@@@@RA
)@@G@@@@ @@@@@@@@@@[AI#$ERROR ENCOUNTERED COMPOSING A DBP   @[AI#,ERROR ENCOUNRB
)@@G@@TERED DECOMPOSING A DBP @[ I#5ERROR SCANNING A MANUAL SET   @[BI#;UNLOADRC
)@@G@@ VIA SET.  FOREIGN RECORD ERROR.    @[CI^#VACANCY ENTRY ENCOUNTERED WHILRD
)@@G@@E SCANNING SET.   @[AI^GSLOT NOT IN USE ON PAGE. SET SCAN.  @[AI^NRECORDRE
)@@G@@ TYPE NOT IN C1. SET SCAN.    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@RF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@RG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@_____.@@[@@@@@[@@[RH
)@@G@@@@@@@@@@@I^'@^@@@]@@@@@@@@@@@@@@@I^"@[@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@RI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@& I 9@@@@@@[[@@@@@@@@@@@@@@@@@@@@@@RJ
)@@G@@@[ I 9@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ RECORDS UNLOADED @@@@@@@@@@@@@@@@@@RK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DOES NOT HAVE ENOUGH RESERVE WORDS FOR MANRL
)@@G@@UAL SET PTRS)@@@@@K@@@@@C@@@@@^@@@@@]@@@@@[@@@@@@)@@@@@K@@@@@C@@@@@^@@@@RM
)@@G@@@]@@@@@[@@@@@@)@@@@@K@@@@@C@@@@@^@@@@@]@@@@@[@@@@@@)@@@@@K@@@@@C@@@@[@@[RN
)@@G@@@@@[X*@@]@@]@@@[Y#@@#@@#@@@[Y#@@^@@^@@@[X*@@[@@^@@@[X*@@^@@[@@@[X*@@[@@]RO
)@@G@@@@@[Y#@@[@@#@@@[Y#@@^@@]@@@[Y#@@^@@#@@@[Y#@@]@@[@@@[X*@@#@@[@@@[X*@@]@@^RP
)@@G@@@@@[X*@@#@@^@@@[X*@@]@@#@@@[Y?@@#@@]@@@[ZN@@@@@K@@@@@@_@@@@@ @@@@@0@@@@@RQ
)@@G@@@@@@@@ @@@@@[5P@@@[1P@@@[!P@@@[(P@@@[>P@@@[-P)@@C5L@@@C1L@@@C!L@@@C(L@@@RR
)@@G@@C>L@@@C-L)@@[5M@@@[1M@@@[!M@@@[(M@@@[>M@@@[-M)@@C5L)@@C1L@@@C!L@@@C(L@@@RS
)@@G@@C>L@@@C-L@@@[5M)@@[1M@@@[!M@@@[(M@@@[>M@@@[-M@@@C7[@@@C3[@@@C\[@@@C:[@@@RT
)@@G@@C$[@@@C<[)@@[6+)@@[2+@@@[,+@@@[%+@@@[&+@@@[++@@@)6-@@@)2-@@@),-@@@)%-@@@RU
)@@G@@)&-@@@)+-)@@[7])@@[3]@@@[\]@@@[:]@@@[$]@@@[<]@@@@@@@@@@@@@@@@@@@@@@@[@@@RV
)@@G@@@@K@@@@@[IAG@@@@@RECORD:@[IHA.@@]IBB@@]@@[DO]"K@@@[IC=@@@@@@@@@@@@[@@@@@RW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ASG,A      RX
)@@G@@D$FILE0         . D$FILE0     D$FILE1     D$FILE2     D$FILE3     D$FILERY
)@@G@@4     D$FILE5     D$FILE6     D$FILE7     D$FILE8     D$FILE9     D$FILERZ
)@@G@@0     @@@@@@@C@@@@@@W@@@D$FILE0     @@@@@@@D@@@@@@[@@@D$FILE0     @@@@@@SA
)@@G@@@C@@@@@@W@@@NO RECORD UNLOADED@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@D$FILE0     SB
)@@G@@@@@@@@@C@@@@@@8IFZ@@@@@@D$FILE0     @@@@@@@C@@@@@@WIF>@@@@@@ BLOCKS,    SC
)@@G@@ RECORDS IN       @@@@@@@&IIF7@@@@@@[[@@@@@@@@@@@@@@@@@@@@@@@@[@@[ASG,UPSD
)@@G@@@@.,//POS/20@@HIERHDRO@@EOFO@@EORO@@@@@IER@]IIF7@[#IFR@@@@@@@@@@@@@@@@@@SE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DX[C#@@@___@@TH!>@@PH5(SF
)@@G@@@@EH9H@@>H'9@@7H;*)B:H!")#JH5")[+H9R)@EH;Y@@@___@@@___@@@___@@@___@@@___SG
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___SH
)@@G@@*@@H@)'^@@!9A]0H!*R')H9J/,0[@N'^@[DTC@@H@/G8@@@[[^@H50C^@H[#[@@H!4 C@H!4SI
)@@G@@C^KH!4CC@H!4!SH@@@/K@[DMG8@@@[[C@H!4G8@@@]G@@@@HC@/@@@[@0H52CW.@@@[O0H!$SJ
)@@G@@9?.@@[9*0H5(C8@@@K[0@H5?CC@H52[^@H51G8@@@E[C@H52C^@H52?8@@@E/K@[C%H8@@@ESK
)@@G@@[^@H52C8@@@E/K@[C: ^@H52[C@H50C@@H!$'^@[D.(@@@@G'=@@@)[@@H!>TC@H50[C@H51SL
)@@G@@G^@H50[@@H5. @@H5;'=@@@<R')H5(/,0@9N*4@H5?/,0@/!NCKH508KK[C.C^@H51C^KH50SM
)@@G@@R@KH53[^L@@@[C[)@@G8@@@[G@KH!>8KK[D@CC@H50[C@H!([^@H!('^@[EI'^@[K, @@H!(SN
)@@G@@R@KH53R8)H!(N8K@@EMCM)@@*^@H52/K@[CX/K@[CJCOH@@@(@@@@G/K@[D%G@K@@G[@KH!4SO
)@@G@@ C@H!4/K@[CJ@@@@@@ @@H!5R^KH[^R@)H54CW[@@@[O]@@@C?[@@@[S])@@CW@H!5G8@@@[SP
)@@G@@[W@H!5!8@@B4'=@@@)CO[@@@/@@LDTO@K@@G/K@[DXR')H9J/,0[^/C/@HA7/,0@HSC@@H'9SQ
)@@G@@/,0@J=C/@@@[/,0@IE9?@H55/,0@IYC/@@@[/,0@IE9?@H57/,0@IY/,0@H\R#@H59'=@@@ISR
)@@G@@R]0H!*/KF@@@@@@@@@[@@H!&CO@H!&CCKH[];GK@@=W8K@@DN@K@@HC^KH[]&;K@@D2WH)@@SS
)@@G@@/K@[EGH8K@@DCWH@@#9?X@@[/K@LD. @@@@G/K@LD.@@@@@@CC@H!([C@H;?C^@H!%[^@H;?ST
)@@G@@RA@H;?(C@H;?/K@LEIR[)@@COD*@@]PD*@@AP9)@@[RES@@#(@@@@D/K@[F*8]K[EY @@H''SU
)@@G@@0@A@@@/K@[F&C@@H;1+@A@@@/^K[F&R 6@@@O[0@@CCWB@@@C@KH;2NWKH!52OH)@@/K@[F&SV
)@@G@@H@KH;3 @@H;!*SH@@@[@@H;!C@@H;4+@B@@@[@KH';/@K[E7C@@@@BG^B@@@H8@@@[C@G@@@SW
)@@G@@'^@[H1*@@H9O/K@[F&C8@@@[G@@H'9[@@H'9C@)H;5+@$@@@[@7@@@C^$@@@G^*@@][^*@@]SX
)@@G@@C@)H;6)@&@@@C@)H;7+@)@@J[@6@@@ @@H;0*@@H';'^@[F, @@H';C@@H;!/@@[F&C@@H;0SY
)@@G@@/^@[FTCWS@@[C^*@@[CC8@@]C[@@@AH[@@@CH@0@@K'^@@>Q(@@@@G'=@@@)R^KH[ &8K@@[SZ
)@@G@@CXR@@@NCKH[ 2XL)@@'=@@@)P@KH;3RO-@@@O@)@@BP8)@@[C@M@@@9*@H;,'^@[I^P9)@@[TA
)@@G@@8]K[EYOEC@@]AA@H;?CC@H;?H8@@@[[C@H;?/K@[EN@@@@@@C@@H;8C@KH;9N8K@@AM#W)@@TB
)@@G@@C@@@@BG^B@@@H8@@@[C@G@@@[@@H;0'^@@=8[@KH5'COKH5'/@K[GF%WS@@[/K@[GF'^@[G'TC
)@@G@@OEC@@]P]@@@JC@@H;6)@C@@@C@@H;'+@@@@H[@S@@@C@@H;8C@KH;9N8K@@AM#H)@@/K@LF,TD
)@@G@@[@@H;*CCC@@#H@@@@D[@@H;:C^C@@[[@@H;%CWC@@[[O@H;(C/@HA7/,0@HSC8@H'.C8K@@PTE
)@@G@@/,0@I(C@@H;(/,0@J=C8@H;[C8K@@B/,0@I(C@@H;%/,0@J=C8@H;#C8K@@B/,0@I(C@@H;:TF
)@@G@@/,0@J=/,0@H\R#@H;;'=@@@IR#@H;/'=@@@IC/@HA7/,0@HSC8@H; C8K@@M/,0@I(C@@H;*TG
)@@G@@C8K@@G/,0@JXC8@H;CC8K@@-/,0@I(/,0@H\R#@H;/'=@@@IR#@H;.'=@@@I/K@[GA@@@@@@TH
)@@G@@%OKH!$/K@[H#NCKH!(R@KH;"2C-)@[/K@[H#RA[@@@/K@LG';*)@@M;GK@@MN@KH5;R@KH;_TI
)@@G@@2@-)@]/K@[HFRA[@@[/K@LG'C@@H;8C@KH/@N8K@@AM#W)@@[@0H'/C@@H5;G8@@@[[@@H5;TJ
)@@G@@T8@@@]H8@@@]R]@@@G[@*H5/C^CH5/[^@H9ICCCH5/'^@[D.(@@@@G'=@@@)[C@H9I9*KH9ATK
)@@G@@C@SH5.[^KH9HO#@@@H'=@@@<[@CH5_C8@@@K[0@H9DR')H9A/,0@9N*4@H9D/,0@/!C@0H'/TL
)@@G@@C@@H;8C@KH/@N8K@@AM#H)@@RA@H9H/K@LG'@@@@@@*@@H';/K@[H_*@@H''/K@[H_C@@@@ATM
)@@G@@H@@@@CCC8@@]H@0@@GC^*@@[COKH!$'^@@>Q(@@@@G'=@@@)[@@H9M @@H9OR')H9J/,0[@NTN
)@@G@@/K@LH1@@@@@@C@@H/N[@@H''C@KH/ON8K@@AM#W)@@ @@H/GC@@H;\[@@H9M'^@[J@(@@@@BTO
)@@G@@/K@[I4NWKH!5R@KH/PCWB@@@2O[)@@/K@[I'C@@H9M'^@[H1*@@H9O/K@[I'C8@@@[G@@H'9TP
)@@G@@[@@H'9C@@H/Q+@B@@@[@R@@@C^B@@@G^C@@][^C@@]C@@H/R)@A@@@C@@H/S+@@@@H[@Q@@@TQ
)@@G@@(@@@@ /K@[I,C@@H/R)@ @@@C@@H/S+@@@@H[@P@@@'^@[KD*@@H/G/K@[KQC@[@@@[@@H;\TR
)@@G@@/K@[IGA]KH/GA]KH/EC@A@@@[@@H/FR@K@@A/K@[K<A]KH/GA]KH/E'^@[KDC@[@@@[@@H/FTS
)@@G@@/K@[K<@@@@@@ @@@@ R]K@@G'^@@=8(@@@@H'=@@@)'^@[G'CCC@@A!@@@@J/K@[J0R[)@@CTT
)@@G@@OD*@@]P[)@@J0@A@@@/,0[J8C@@H/T+@A@@@/@K[J!R[K@@AC^&@@@C@S@@[;CK@@S'^@[G'TU
)@@G@@R[)@@COD*@@]P9)@@[PD*@@A&9)__"NCS@@#C@ @@@N@)H/U9@A)@@/,0[J8C])H/V+]&@@[TV
)@@G@@/]0[JZR[0@@CO 6@@[CA$@@@H')@@[O[0@@QC]$@@@%])@@D/K@[JZO[)H/WR[0@@CO 6@@@TW
)@@G@@/K@LJ@ @@@@BR[)@@C/@0[J6OD*@@]P[)@@J/K@LJ@O9)@@B/K@LJ@C/@HA7/,0@HSC8@H/[TX
)@@G@@C8K@@M/,0@I(C@@H;,C8K@@G/,0@JXC/@@@)/,0@I[C8@H/^C8K@@+/,0@I(/,0@H\R#@H/XTY
)@@G@@'=@@@I'=@@@)@@@@@@CWB@@@R@KH[ &8K@@[NCKH[ 2W[)@@/,0[J8P@KH/WCO[@@@R@K@@GTZ
)@@G@@O@K@@BP8K@@[/K@LKDC@[@@@[@@H/FC@@H/E'^@[J@(@@@@B/K@[K)'^@[KDC@@H/F[@[@@@UA
)@@G@@/K@[K<R@K@@AC@@H/F[@[@@@%@@H;,/K@[IGC@@H;\[@[@@@:@@H/E @[@@@C@@H/NC@KH/OUB
)@@G@@N8K@@AM#H)@@/K@LI^@@@@@@CC@H!([@@H/YC@@H/Y/@@[K8H8@@@[[@@H/YRAWH!%/,0@.DUC
)@@G@@/K@[K1CC@H5;[@@H/YC@@H/Y/@@[L]H8@@@[[@@H/YT8@@@]RAWH5./,0@.D/K@[K'C8@@@CUD
)@@G@@[0@H5?R')H5(/,0@9N*4@H5?/,0@/!C8@@@C[0@H9DC@@H5;[@@H/YC@@H/Y/@@LK,H8@@@[UE
)@@G@@[@@H/YT8@@@]C^WH5/[^KH9IC@WH5.[^KH9HCCGH5/'^@[D.(@@@@G'=@@@)[C@H9I9*KH9AUF
)@@G@@R')H9A/,0@9N*4@H9D/,0@/!/K@[LG@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@[H!%@@[H!5@@@@@RECORDS@@@@@DELETED@[IHA.@@@@@@UJ
)@@G@@@@@@@@@@@@@@@@@@@@@@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@** WARNNING: ON AREA    , PAGE      , SLOTUL
)@@G@@      A FOREIGN POINTER() IN THE RECORD CAN NOT BE TRACED   @@@@@@@@@@@@UM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@* * * * * * * * * * * * * * * * * * * * * * * * UN
)@@G@@* * * * * * @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@C@@@@@UO
)@@G@@@@[H!5@@[@@[@@K@@@__7___)@@@@@___@@@@@[@@A@@[H;Y$__@@@@]EH;O@[IHA.@[EH;OUP
)@@G@@@@[H!(@@]H5'@@[H;IA CALC RECORD(DBP= PARTICIPATING IN A BAD CALC CHAIN  UQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@A@@[H/H@@[H!5UR
)@@G@@__7___)@@@@@$__@@@C@@@@@@__@@@K@@@@@@@[@@[@[IHA.@@@@@@@@@@@@@@@@@@@@@@@@US
)@@G@@@<6[C#@@@___@]]H!>@[[H0S@@ZI@'@[VI[0@[HI#R)@1H\$)J-H1T)@RI[T)@GI#F@@@___UT
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___UU
)@@G@@@@@___@@@___@@@___@@@___AA0H,AAA)[CJR#U@@@A#KH!&(@@H\['^@[KG @@@@B @@H,CUV
)@@G@@ @@H,D @@H\D @@H0'/,0[>1@@@@@@@@@@@@@@@H,C[CMH\I(@@LCJ/K@[GP(@@H\D'^@[L)UW
)@@G@@/,0[L.R]@[CKRRC@@[;*@@@S;C@@@SA#@H!$R#@[CKKWC@@^A#KH!:R7S@@#A7KH!:KSC@@^UX
)@@G@@A#KH!?R3S@@#A7KH!?KOC@@^A#KH!!R\S@@#A7KH!! 0@H!$R;@@@@'^@[D[R;@@@['^@[D[UY
)@@G@@R;@@@]'^@[D[*0@H!$/K@[C8R#0H!$;*0@@SA#0H!*R;K@@^'^@[D%R#@@@B:@@H@:/K@[C"UZ
)@@G@@R90@@[A[0H,C/K@[CI*@@H@:/,0[U,/K@X,A@@@@@@(4GH!:/K@LD[R;0@@[A30H!$C5?H!:VA
)@@G@@H9)@@[R ?H!:CPA@@@;(@@@S;D@@@S'^@[DKO5&@@@8^)[DD/K@LD[@@@@@@[[@H!( 4@H!$VB
)@@G@@/,0[$+@@@H!(@@@@@@@@@H,C[DRH\I/,0[PGR]K[DPR#D@@]A#@H!*R;K@@@'^@[D%R,D@@]VC
)@@G@@P'@@@[O'K@@CR#D@@@A#@H!*R;K@@['^@[D%OQT@@[8]@[D-(4@H!$/K@[GM/K@LDK@@@@@@VD
)@@G@@N[K@@CN[)@@DN[0@@HR#@H!*;C@@@SA#@H!%/,0[&^@@@H!%@@@@@@@@@H,C[D5H\IR#@[D3VE
)@@G@@R7G@@[ @@@[F:8@@@[N'0@@[R]@@[ R]K@[AR#K@[BR#)H!*NCRX!,N@)H\JR;@@@YO;@@@$VF
)@@G@@;*@@@MQBBX!,9@?)@@/K@[EEP;@@@YP;@@@$/K@[EVCFBX!,!;@@[=/K@[HE;C)@@S;*)@@#VG
)@@G@@O#)@[F;*)@@PA#?@@@R#0H\KO;@@@[A#/@@YO;@@@[ @G@@YP;@@@]R;0@@[OF7X!,AF7X!,VH
)@@G@@RZ)H!*:O)H!$/K@[E</@K[E-C9@@@^/K@[E*C9@@@]/K@[E*C9@@@[R;)@@[*@@@@H;*)@@[VI
)@@G@@A7)H!$)!G@@@[!W@@@:8K@@^/K@LD%:8K@@@/K@[F=R;)@@]!?)H!*/K@[F(O;@@@[*0G@@YVJ
)@@G@@/K@[FMO;@@@YAB@H!>R[K[D3RZ>@@AA<?@@@R\>@@AA$?@@@R\P@@#A3W@@@P;K@@[Q[@H!>VK
)@@G@@&9@@@[OPP@@^C[ @@@ @@@@J;(@@@A;?0@@A;(@@@A;?0@@A;-@@@M;G0@@[;D@@@];G0@@#VL
)@@G@@;C0@@];[@@@G;G0@@G[[^)@]O5P@@@8#K[F[P;@@@YC[@H\KO;@@@YAB@H!>&;@@@[R3W@@@VM
)@@G@@P;K@@[RV?)@];*)@@S;C)@@S:@)H!(/K@[F);D@@@[8#K[FS/K@[GMRB@H!>)[G@@[[[W@@[VN
)@@G@@/K@LD%R[K[D3R75@@#P;0@@[OXP@@^/K@[F!R[K[D3R35@@#OTP@@^P;0@@[RR>@@@;*)@@SVO
)@@G@@;C)@@S:@)H!(/K@[F5O5P@@@8#0[F!/K@[GMR#5@@@ @@@@I;*0@@A;?)@@M;)0@@M;G)@@[VP
)@@G@@;C0@@];G)@@#;C)@@];)0@@[(@@@@HO;0@@[;)0@@F;G)@@A;@0@@M;G)@@GN*W@@@Q])@@GVQ
)@@G@@&')@@[2@')@[/K@[GF/K@LD%R:W@@@A#'@@[O;K@@[!8K@@Y/K@[HHA:W@@@/K@LD%R#@H\LVR
)@@G@@'=@@@I'=@@@)R#KH!&A#KLCJR;@@@ A3@HA7*@@H@:/K@[G$C/@HA7/,0@HSC8@H!0C8K@@IVS
)@@G@@/,0@I(R#@[CJ/,0@I9C8@H,&C8K@@Q/,0@I(/,0@H\/K@[KB*@@H,D/K@[G"C/@HA7/,0@HSVT
)@@G@@C8@H!3C8K@@K/,0@I(R#@[CJ/,0@I9C8@H,!C8K@@K/,0@I(R#BH,0/,0@IWC8@H,2C8K@@BVU
)@@G@@/,0@I(/,0@H\R#@H\M'=@@@IR;@@@[A#@H,D/K@[C8C/@HA7/,0@HSC8@H!0C8K@@I/,0@I(VV
)@@G@@R#@[CJ/,0@I9C8@H,4C8K@@X/,0@I(/,0@H\/K@[KBR#@H\N'=@@@I'=@@@)C[W@@@;DK@@SVW
)@@G@@C/@HA7/,0@HSC8@H,@C8K@@I/,0@I(C@@@@L/,0@J=C8@H,#C8K@@M/,0@I(R;@@@Y/,0@J=VX
)@@G@@C/@@@!/,0@I[/,0@H\R#@H\M'=@@@I'=@@@)AA0H,AA])H,B @@@@B*CBX,G/K@[H2A[0H,CVY
)@@G@@/,0[*U@@@H,C[H(H\OR#BX,EO;@@@[ABBX,GR#@@@B:@@H@:/K@[H8R90@@[/K@[H=RBBX,GVZ
)@@G@@OFBX,GP;@@@DR;K@@DARW@@@/K@[H! @@@@B @@H,C @@H,DR])H,BR#E@@@:@@H,K/K@[JDWA
)@@G@@AA)[I#9?E@@@9*@H,I/,0[>^@@@@@@@@@H,L@@@H,C[IAH\O(@@LI#/K@[JOR#@H,L;)@@@GWB
)@@G@@;*@@@GO;@@@DA#@H,V9?@H,P9*@H,W @@@@GR#KH,R;?@@@M;*@@@AO<@H,O;G@@@MA#KH,YWC
)@@G@@9?@H,S9*@H,Z @@@@GR#KH,U;?@@@G;*K@@A;G@@@MA#KH,-R#@HB6A7@H,<R#BX,EK8@@@[WD
)@@G@@&;K@@[O;@@@DA#BX,E'=@@@<RZ)H,VRARX,G&'K@@D @@@@KCDRX,GW9@@@DN@K@@K5W()@@WE
)@@G@@/K@[I9R#0@[[O;0@@[T80@@DN@K@@J&;@__"L8@@@DM#H)@@O;K@@[&;K@@[R#@H\PN8K@@DWF
)@@G@@M#W)@@R;@@@DOFBX,GAFBX,GR#@@@B%@@H@:/K@[JARB@H,BOF@H,BAB@H,B/K@[H8R90@@[WG
)@@G@@A[0H,C/K@[I] @@@@B(CBX,G/K@[JJR#BX,EP;@@@C OG@@@R#@@@B:@@H@:/K@X,AR90@@[WH
)@@G@@/K@[JE*@@H@:/K@[J+C/@HA7/,0@HSC8@H,=C8K@@G/,0@I(9?@H,I/,0@IYC8@H,&C8K@@QWI
)@@G@@/,0@I(/,0@H\/K@[KB*@@H,D/K@[J/C/@HA7/,0@HSC8@H,%C8K@@I/,0@I(9?@H,I/,0@IYWJ
)@@G@@C8@H,!C8K@@K/,0@I(R#BH,0/,0@IWC8@H,2C8K@@B/,0@I(/,0@H\R#@H\M'=@@@IR])H,BWK
)@@G@@9?@H,I9*E@@@R;@@@[A#@H,D/K@[I_C/@HA7/,0@HSC8@H,=C8K@@G/,0@I(9?@H,I/,0@IYWL
)@@G@@C8@H,4C8K@@X/,0@I(/,0@H\R#@H\M'=@@@IR#@H\Q'=@@@I'=@@@D@@@@@@ @@@@BR#BX,EWM
)@@G@@O;@@@[A#BX!,O;@[:4A#BX\TO;@[8DA#BX0UO;@@[FA#BX0)O;@[$CA#BX\F*@@@@B/K@[KZWN
)@@G@@O;@@D4R;KG8@?@K@@G/K@[LKP;@@@[A#BX,E'=@@@<R#@@@B:@@H@:/K@[K$R90@@[/K@[KIWO
)@@G@@ @@H,C/,0[*U@@@H,C[K%H\R(@@H@:/K@[K2R;@@@[A#@H,C/,0[*U@@@H,C[K1H\R @@@@HWP
)@@G@@ @@@@I @@@@BR#BI^F?@K@@GR#K@@GR#BI^H?@)@@GR#)@@GR#@@@B:@@H@:/K@[L@R90@@[WQ
)@@G@@/K@[K5R#@H@/O;@@@[A#@[CKO#@@@HA#@[D3O#@@@HA#@[DPO#@@@IA#@H@/'=@@@</,0[OZWR
)@@G@@R;@@@WAF@H[BR;@@@[A#@H\[/K@LKGP#@@@HC[K@@GC/@HA7/,0@HSC8@H\]C8K@@B/,0@I(WS
)@@G@@C@@@@L/,0@JJC8@H\^C8K@@U/,0@I(/,0@H\R#@H\M'=@@@I'=@@@)@@@@@@R;@@@[A#@H\DWT
)@@G@@RF@H[BOB@H[BR]@[CKRRS@@[AZW@@@9?S@@B9*W@@[9?S@@D9*W@@#R#S@@FA#W@@ RF)H[BWU
)@@G@@O;)@@AAF)H[BP;)@@W @@@@HW8K@@AAVW@@@A#KH\E OG@@@?8K@@]/K@LL)P;@@@AR;K@@AWV
)@@G@@ARW@@@/K@LL)AA0H\SQ]@[CKRARX\TOERX\TA]KH\ZRRT@@@R#@@@DP#@@@HARW@@@&'K@@[WW
)@@G@@RRC@@[;*@@@SA#D@@@R7C@@[A#BI[@A:D)@@R#C@@#;*@@@S;C@@@SA#D@@@A#@H\)OBC@@AWX
)@@G@@AZD)@@9?C@@B9*D@@@9?C@@D9*D@@]R#C@@FA#D@@^O'K@@ R7S@@[+8K@@]/@)[M;9?C@@HWY
)@@G@@9*D@@@O'K@@]R])@@COY*@@ CUC@@ R[@@@CO9@@@JR3=@@@P;)@@[ @@@@QG')@@[ @@@@GWZ
)@@G@@R#K@@QW8@@@#O#@@@^')H[OW @@H\- @@@@ /,0[N88#)[M(R#@@@D;*@@@M;C@@@MP#@H\ZXA
)@@G@@P;@@@DR#KH\ZA\H@@@/K@[N@9?@H\+9*D@@@O'K@@]R#@H\Z ?G@@@RVC@@[ @@@@LR])@@DXB
)@@G@@O'K@@[/@@[N(O]@@@GR#K@@D&;K@@@R#@H\ZP#K@@GAVW@@[&'@@@[G9K@@[R;@@@#(4C@@@XC
)@@G@@ @@@@G;*@@@AAZD@@@RRC@@@ARD@@@C5C@@@R\*@@@R:8)@@:8)@@]/K@[N=:80@@]/K@[N=XD
)@@G@@%8)@@[/K@[N>R;@@[[AVD)@@R#C)@@A#D)@@R#C)@@A#D)@@/K@[N*O'@@@] SD)@@ @D)@@XE
)@@G@@ @D)@@/ @[NG[[U@@@R#@@@D;*@@@M;C@@@ML@@H\ZART@@@!^BX0U/K@[N5PBBX\TAFBX\TXF
)@@G@@/,0[Q(/K@X\SR#@H0%'=@@@I'=@@@)A]5H\$R#0@@MP;0@@[T80@@]O#0@@E?]@@@MR;0H\=XG
)@@G@@R# H\&/@@[OR!0J@@@/K@[OLR3J@@@A# H\*RBJ@@@R#Z@@[;*K@@J;CK@@#;G@@@GO#KH\)XH
)@@G@@A#T@@@C90@@[G9)@@[O9K@@]/,0[N8/K@[N_/[0[OOC90@@@O'K@@[R]5H\$P9K@@]/KF@@@XI
)@@G@@*@@H\-/K@[OLR;K@@[A#KH\-/K@[O[CX?@@@CT?@@@CP?@@@AA0H\SR )H[ &9)@@[ @@@@MXJ
)@@G@@ @@@@N @@H0TR#@[CKA#@[O:G9)@@[[[)H0S/,0[&L@@@H0S@@@@@@@@@H0T[O!H0:(@@H0SXK
)@@G@@/K@[O"R]K[O:R7D@@[:8@@@]/K@[O6%8@@@#/K@[O$RRD@@[AZA@@@RRD@@#ARA)@@!90@[FXL
)@@G@@/K@[PDG90@@[/K@[O$R#@H0T[D/X0U:@@H@:/K@X\SR )H[F&9)@@[ @@@@M @@@@NR;@@@[XM
)@@G@@A#@H0T/K@[O$R#@H0?'=@@@I'=@@@)AA0H\SR]@[DP(CBX0)/K@[PSRRC@@[RARX0):WD@@@XN
)@@G@@/K@[Q (OD@@@/K@[PSOQT@@@/K@[PMRARX0)OERX0)A]KH\ZRRT@@@R#@@@DP#@@@HARW@@@XO
)@@G@@&'K@@[R#C@@[;)@@@G;*@@@GA#D)@@9?C@@#9*D@@@9?C@@ 9*D@@]R#C@@BA#D@@^O'K@@ XP
)@@G@@RFC@@] @@@@H;G@@@A;@@@@M;?@@@A;)@@@GA#D)@@R\8@@]P;0@@[O'@@@CR\C@@@AZD@@@XQ
)@@G@@RZC@@@ARD)@@OQC@@[8#0[P5R#@@@D;*@@@M;C@@@ML@@H\ZART@@@!^BX\F/K@[QAPBBX0)XR
)@@G@@AFBX0)/,0[UT/K@X\SR#@H0!'=@@@I'=@@@)@@@@@@CDCX0*8^@[QH/K@LQDRB*X0*A#)H0$XS
)@@G@@&;)@@[R]K@@IR])H0$L@)@@EAR'@@@AB)H0$R:D@@@L8@@@Y]@KH0&O;@@@[N@K@@GM#()@@XT
)@@G@@OAKH0&R3D@@@L8@@@=]@KH0&O;@@@]N@K@@GM#()@@OAKH0&8^@[QLR])H0$ OE@@@PB*X0*XU
)@@G@@AF*X0*/K@LQDAA0H0,R#@@@B(@@@@G @@H0'*@@H00/K@[Q7R#@H@/K8@@@[A#K[Q_O;@@W@XV
)@@G@@A#@H@/'=@@@<R;@@@[A#@H00A[0H0\R#@[CKRRW@@[;*K@@S;CK@@SA#KH01/,0[$/@@@H01XW
)@@G@@@@@@@@@@@H0\[R[I[NC[0[Q_G90@@#R[)[CKRRA@@#A#@H04OBA@@AA#BH02R#@@@BO;@@@[XX
)@@G@@A\@H1HR#@H\EAZ@H1I @@@@QCT&@@ H9)@@[R[K@@AOX&@@  @@H05R#K@@N @@H0/ @@@@GXY
)@@G@@(?H@@[/K@[RWR;@@@[A#@H0//K@[R%C/@H1]/,0@HSC8@H0.C8K@@Y/,0@I(C/@@@@/,0@I^XZ
)@@G@@R#@@@NR:W@@@(0G@@@P;K@@[O;@@@]/,0@I(/,0@H\ @@@@J*@@H05/K@[T_RBA@@@AR@H1HYA
)@@G@@RBA@@[O#@H04AZ@H1HR\A@@[+8@@@BA\KH1IR7A@@@ @@@@H @@@@KR;)@@]\@K@@G/K@[S^YB
)@@G@@(@@@@GC9@@@[R;K@@#R3A@@@%8@@@[/K@[SIR;K@@] @@@@K/K@[SIR;K@@ :8@@@[/K@[SIYC
)@@G@@R\A@@@R;K@@^!8@@@#/K@[SIR;K@@A%8@@@[R;K@@#*WA@@[/K@[S:O#K@@JA:KH1H[(@H1JYD
)@@G@@*@@H0//K@[SSR')H1C/,0[-O/K@[ST @@@@GR3Q@@@%8K@@[/K@[S)A#@H0;(@@H0\A#@H0'YE
)@@G@@/K@[S=R#RH1KG')@@[O#K@@QA#H@@@O9)@@]R#@@@NG!/@@@8^)[ROR#RH1K[]!@@@/K@X0,YF
)@@G@@(@@H05/K@[S/R;K@@LA:KH1H *@H1JRZA@@[O#@@@ RBQ@@@T^W@@@ARKH1HR')H1C/,0[-OYG
)@@G@@R;K@@[A#KH06R3Q@@@A#KH08/K@[S)O;K@@BA:KH1H[(@H1JRZA@@[O#@@@ RFW@@@AZKH1JYH
)@@G@@RBW@@@ARKH1JR')H1C/,0[-O @@@@JRZKH1J:OKH1J/K@[T*R#0H0;RZQ@@[O#K@@ RRX@@[YI
)@@G@@P;K@@[O#RH1KR#X@@@R]K@@H?^KH[H/K@[TVL^KH[HR;K@@[;*)@@N;GK@@NAF\@@]/K@[TXYJ
)@@G@@PBKH[IAFZ@@]R#K@@J?^KH[H/K@[T&L^KH[HR;K@@[;*)@@N;GK@@NAF(@@]/K@[T*PBKH[IYK
)@@G@@AFT@@] @@H1JR;K@@[A#KH05AZKH1HR3Q@@@A#KH07A#KH09R#K@@G?^KH[H/K@[T'L^KH[HYL
)@@G@@R;K@@[;*)@@N;GK@@NAF)H1I*@@@@JAB\@@]/K@[S)PBKH[IAFKH1I*@@@@JABZ@@]/K@[S)YM
)@@G@@(@@H06/K@[U R#@H08?0A@@@/K@[S= @@H06R#@H07?0A@@@/K@[UGR#@H\EAZ@H1I @@H05YN
)@@G@@/K@[R!R;0@@IRZ@H1H;*@@@S;C@@@SR#KH09!0Q@@@OR@H1HAZ@H1HRBA@@@AR@H1HR3A@@@YO
)@@G@@A#@H09/K@[R5AA0H0,C/@H1]/,0@HSR#@[DPO;@@@#R;K@@Y/,0@I(/,0@H\ @@H1H @@H1IYP
)@@G@@R#@@@BO;@@@[A\@H1HR;@@@[A:@H1HR#@[DPRRG@@[AZ@H1IR')H1C/,0[-O/K@X0,AA0H0,YQ
)@@G@@(@@H0'/K@X0,Q@KH0'(^[@@[/K@X0,CA1@@['^@[XGR:]@@@%8@@@]/K@X0,(@@I@.'^@[X@YR
)@@G@@Q[)I@;&9)@@[RRKH01AZQ@@@ OA)@@ @@I@"RR@H02AZA@@@RR@H03AVA@@@R#@I[[R;)@@CYS
)@@G@@?8@@@]/K@[VF?8@@@^R;)@@*AR&)@@Q]@H[@Q]KH[CR;@@@YO;@@@$&]@@@G&]K@@GNCKH[@YT
)@@G@@2WS)@@/K@[- P]@@@GNCKH[C2WT)@@/K@[- P]K@@GC(8@@@%(9@@@/K@[V98^0[VZ/K@[V*YU
)@@G@@Q#@@@C&;@@@[Q#K@@D&;K@@[N*X@@@R#?)@[2@!)@[/K@[V98^0[V-Q#@@@CO;@@@YQ#K@@DYV
)@@G@@O;K@@YC1/@@[%1.@@[/K@[V9R$?@@[%=!@@[/K@[V98^0[V4/K@[V;R#?)@#%@!)@#/K@[V9YW
)@@G@@8^0[V4/K@[V;R;@@@[A#@I@"R]@I[OC[8)@@8^0[V_/K@[WI/,0[XQ/K@[WF(^@@@[/K@[WHYX
)@@G@@R:[@@@!8@@@B/K@[ZN**]@@]/K@[WH/,0[X;/K@[WH/,0[YCR;@@@[A#@I@"8^0[V_R]KI[PYY
)@@G@@R8KI[] @@@@UN@T)@@ @@@@G3@D)@@/K@[W)P'K@@[R@()@@**]@@]/K@[WMR:M@@@!8K@@BYZ
)@@G@@/K@[Y7/,0[YCR;K@@[A#KI@"/K@[WM(@@I@"/K@X0,R#0I@;R#@@@A&;@@@@L@@@@J;CK@@[ZA
)@@G@@P;K@@[AVZ@@@R#)I@/L@0@@I[PI@@@A#0I@/A#@I@;PB@H[KAF@H[KR;@@@ A3@HA7C/@HA7ZB
)@@G@@/,0@HSC8@I[EC8K@@K/,0@I(R#@[CJ/,0@I9C8@I[HC8K@@+/,0@I(/,0@H\R#@I[Q'=@@@IZC
)@@G@@/K@X0,@@@@@@R#@H@/K8@@@[A#KH[KA#KI@/A#KI@;O;@@W@A#@H@/'=@@@<R;@@@[A#@I@.ZD
)@@G@@/K@LX@@@@@@@ @@@@Q @@@@];,)@@N;E0@@NQ@)H[I*@@@@QQ@)H[HO@)@@R/K@LXG @@@@TZE
)@@G@@/K@[XTC;K@@[R@S)@@(^@@@[/KF@@[(^[@@[/KF@@@CA1@@['^@[XG/BK[X?RZ[@@[%W]@@[ZF
)@@G@@/KF@@@R]KI[PN@T)@@R#@@@]2@D)@@/KF@@[P'K@@[ @D)@@/KF@@[R#@@@]CE1@@['^@[XGZG
)@@G@@RZ+@@[R@)@@GC(M@@@?9K@@L/K@[X6CE2@@['^@[XGCXM@@[R@)@@G%@)@@L/KF@@@/K@[X=ZH
)@@G@@RB[@@@%^]@@@/KF@@[RZ[@@@%W]@@@/KF@@[R:[@@@!8@@@K/KF@@@R\[@@[%?]@@[/KF@@[ZI
)@@G@@/KF@@@9?[@@@'^@[YH9?]@@@'^@[YH/KF@@@@@@@@@;*K@@G;=@@@G;*K@@S;C@@@A;*@@@AZJ
)@@G@@;?@@@A;=@@@AP;K@@]!8K@@ P;K@@BA#A@@@A:Q)@@/K@LYHR#K@@[R#)@@U'^@[Y+R#K@@]ZK
)@@G@@R#)@@V'^@[Y+/KF@@@@@@@@@RRH@@@AZA@@@R:H@@@P;@@@K/G@[Y5A:A@@@R#X@@@;CK@@SZL
)@@G@@O#K@@IP;K@@[ @@@@GW8@@@A/^K[Y2R;K@@AP;@@@[ARA@@@A\Q)@@/K@LY+ @A)@@/K@LY+ZM
)@@G@@R#)@@]?8K@@L/K@[Y_R#@@@]CE2@@['^@[XGR#)@@]R@)@@GR#@I[RA#A)@@RRI@@@AZA@@@ZN
)@@G@@R#I@@@;C@@@ST8@@@AO\I@@[A#@@@VARA@@@RRI@@]AVA)@@!8K@@K/K@[ZJ/,0[YC/K@[ZKZO
)@@G@@/,0[YVR;K@@[A#KI@"/K@[WMR:]@@@!8@@@B/K@[ZTP'K@@[A@()@@/K@[WHA[)I@' @@I@_ZP
)@@G@@ @@@@OR#)@@[R:L@@@?8K@@L/K@[Z>R#@@@]CE1@@['^@[XGR#)@@]R@)@@GRRI@@@AZA@@@ZQ
)@@G@@C]K@@GR#I@@@;C@@@ST8@@@AO\I@@[A#@@@UARA@@@R;@@@ A:A)@@RRI@@]AVA@@@R#)@@]ZR
)@@G@@R:M@@@?8K@@L/K@[Z;R#@@@]CE2@@['^@[XGR#)@@]R@)@@GRRI@@@AZA@@@R;K@@[%@@@@PZS
)@@G@@A#KI@_R#I@@@;C@@@ST8@@@AO\I@@[A#@@@VARA@@@%@@@@UA#KI@_RVA@@@%OI@@]A#KI@_ZT
)@@G@@!OI@@]RRI@@]AVA)@@**]@@]/K@[)V/,0[X;/K@[)OR;@@@[A#@I@_R:M@@@!8K@@K/K@[)TZU
)@@G@@/,0[YC/K@[)U/,0[YVG'@@@[8^0[)X/K@[)'R#C@@@/@@[)+R:W@@@?8K@@L/K@[)'/,0[XSZV
)@@G@@/K@[)7(^@@@[/K@[)VR:]@@@!8@@@B/K@[)?P'K@@[A@()@@/K@[)7!8K@@K/K@[)I*@@I@_ZW
)@@G@@/K@[)2R[)I@'/K@[ZTR#@I@'[,G@@@R;@@@[A#@I@"/K@[ZTR;@@@[A#@I@_/K@[)V*@@I@_ZX
)@@G@@/K@[)"R[)I@'/K@[-]R#@I@'[,G@@@R;@@@[A#@I@"0@@@@N/K@[WI/K@[V_R#@I[S'=@@@IZY
)@@G@@'=@@@)R]0I[T9?KI[U9?0I[W9\)I[YN8K@@IR@KI[0R@)I[1M@M)@@(WF@@@/KF@@[OY;@@@ZZ
)@@G@@/KF@@@AA0I[3(@@H[H'^@[-8'^@[+C(@@@@[/K@[-?C?[@@ C?U@@ ;*K@@M;?@@@M:@@I]0AA
)@@G@@/K@[-+%@@I]1/K@[<^CC@H[I[^[@@AK8@@@#[CKH[IG^@H[I9?%@@ 9*?@@@C@%@@B[@?@@]AB
)@@G@@/KF@@@CC@H[HK8@@@C[CKH[HG^@H[HR@K@@G&8K@@[R@)@@E&8)@@[N8K@@CM@M)@@G8@@@ AC
)@@G@@/KF@@@@@@@@@C^@H@/G8@@@[[@@H[HG8@@")[@@H@/'=@@@<C^@H@"G8@@@[[@@H[IG8@@ZKAD
)@@G@@[@@H@"'=@@@<C8@@@[[C@H[I/K@L-8@@@@@@ @@@@[(C@H[H/K@L+CR^KH[H9?E@@@9/[@@@AE
)@@G@@/K@[+R9?E@@]9/[@@]/K@[+RC@E@@^%@[@@^/K@[+R/K@L+CO8K@@CC^@H[HGC@H[H%@@@@[AF
)@@G@@/K@[+H @@@@[/K@L+C(@@H[H'^@[+''^@[+C @@@@G(@@@@[/KF@@@O8K@@ C@@@@[C?L@@@AG
)@@G@@:8K@@]/KF@@@:8K@@#/KF@@@;*@@@M(^[@@[/KF@@@C^L@@[;GK@@L;C)@@NC @H[H(@@@@HAH
)@@G@@C @H[IG@)@@KC@K@@I;C@@@M;*K@@M;?@@@M/KF@@@@@@@@@A])I[2A]0I[3R')I]2/,0@%]AI
)@@G@@R')I]3/,0@%]R])I[2R]0I[3/K@L+'*@@I[4/K@[<VR#@I]4'=@@@IR#@I]5'=@@@IR#@I]6AJ
)@@G@@'=@@@IR#@I]7'=@@@IR#@I]8'=@@@IR#@I]9'=@@@IR#@I]''=@@@IR#@I];'=@@@IR#@I]5AK
)@@G@@'=@@@IR#@I]5'=@@@I[@@I[4R#@I]4'=@@@IC/@HA7/,0@HS9?@I]//,0@IYC/@@@[/,0@IEAL
)@@G@@9?@I]"/,0@IYC/@@@[/,0@IE9?E@@@/,0@IY9?E@@]/,0@IYC@E@@^/,0@IWC/@@@(/,0@I[AM
)@@G@@C8K@@@C@)I[7G8)@@[[@)I[7;G)@@=W8)@@C)80@@0[-HI[5;G)@@=W8)@@C)80@@0[>HI[5AN
)@@G@@;G)@@=W8)@@C)80@@0[(HI[5C@HI[5[@E@@@9?@I#@9*E@@[9*E@@#9?E@@@/,0@IY9?E@@]AO
)@@G@@/,0@IYC@E@@^/,0@IWC/@@@)/,0@I[/,0@H\R#@I#]'=@@@IR#@I]5'=@@@IR]0I[3/K@[-OAP
)@@G@@A]0I[T9*KI[U9*0I[W9:)I[YN8K@@IR@KI##R@)I#^M@-)@@RBF@@[R;K@@AABW@@[C^G@@@AQ
)@@G@@[@@I]!RA:@@@RA%@@@/,0[+Y[@@I],R@KI]! @[@@@C*G@@@C8K@@[:8@@@P[@L@@@R8KI],AR
)@@G@@A@KI[,C@@I]\[C@I[\[^@I[\R;@I[,/K@[-CA]0I[T9*KI[U9*0I[W9:)I[YN8K@@IR@KI##AS
)@@G@@R@)I#^M@-)@@RA:@@@RA%@@@/,0[-O[@@I],R8KI],A@KI[,C@@I]\[C@I[\[^@I[\R;@I[,AT
)@@G@@/K@[-CR#;K@](@JI^ '^@[*Z9?FK@@NCZI#_RAJI#_&'@@@E2@C)@^/K@[*XR]K@@CP'K@@EAU
)@@G@@%@T@@ /K@[>F/K@[>:R#;K@](@JI^ '^@[*ZR#FK@@NCZI#_RAJI#_&'@@@EN8)@__9@C)@@AV
)@@G@@/K@[*XR]K@@CP'K@@E/K@[>:R#;K@](@JI^ '^@[*ZR#FK@@P;@@@[0@@@@G/K@[*X!CJI#_AW
)@@G@@/K@[*XT8@@@ERAZI#_O]K@@GR]F@@[&'@@@[&'K@@[N8K@@EM]D)@@/KF@@^R#;K@](@JI^ AX
)@@G@@'^@[*ZR#FK@@R]F@@@9?S@@[9!C@@#NCZI^[RAJI^[&'@@@E2@C)@^/K@[*XR]K@@CP'K@@EAY
)@@G@@9/T@@ /K@[>;9.D@@B/K@[>;/K@[*DR#;K@](@JI^ '^@[*ZR#FK@@NCZI^[RAJI^[&'@@@EAZ
)@@G@@N8)@__9@C)@@/K@[*XR]K@@CP'K@@E/K@[*DR#;K@](@JI^ '^@[*ZR#FK@@P;@@@[0@@@@GBA
)@@G@@/K@[*X!CJI^[/K@[*XT8@@@ERAZI^[O]K@@GR#T@@[;*K@@G;CK@@G @@@@GW8@@[@T8@@[@BB
)@@G@@%@JI#9'^@[&1T8K@@WKWT@@[!8)@W@/K@[*DR#\I#;O#)@@HNWT@@[R#F@@[&;@@@[&;)@@[BC
)@@G@@M#I)@@/KF@@^@@@@@@A#JI#9R'@I#!9!JY#39(C@@@R;@@W@AFC@@^R#JI#;/^@[$#C[@@@HBD
)@@G@@R#@H@/K8@@@[A#ZI#;O;@@W@A#@H@/'=@@@<R#@@@HR#K@@KABC@@^R#JI#9O#JI^BA#C@@ BE
)@@G@@R;@I#!'=@@@#R7C@@#:8@@@  4C@@#*4C@@#/K@[:&/K@L&1R#;K@](@JI^ '^@[*ZR#FK@@BF
)@@G@@R]F@@@9?S@@[9!C@@#NCZI^#RAJI^#&'@@@D2@C)@^/K@[*XR]K@@CP'K@@D9/T@@ /K@[$TBG
)@@G@@9.D@@B/K@[$T/K@[*DR#;K@](@JI^ '^@[*ZR#FK@@NCZI^#RAJI^#&'@@@DN8)@__9@C)@@BH
)@@G@@/K@[*XR]K@@CP'K@@D/K@[*DR#;K@](@JI^ '^@[*ZR#FK@@P;@@@[0@@@@G/K@[*X!CJI^#BI
)@@G@@/K@[*XT8@@@DRAZI^#O]K@@G/K@[*DR#;K@](@JI^ '^@[*ZR#FK@@NCZI^[RAJI^[&'@@@EBJ
)@@G@@N8)@__9@C)@@/K@[*XR]K@@CP'K@@]/K@[*DR'@I#!9?JY#39*C@@@RZD@@[AFC@@^R#F@@[BK
)@@G@@ABC@@^R#D@@[;*@@@G;C@@@GO#JI^BA#C@@ R;@I#!'=@@@#*4C@@#/K@[:&/KF@@^R#;K@@BL
)@@G@@'^@[*Z/KF@@] @FK@@/KF@@^@@@@@@R;@@@^R#ZI#R;*K@@M;?@@@M'=@@@J/G@[:G9?JY#3BM
)@@G@@9*@I#-9*@I#!R;@I#-'=@@[ /^)[:TR#@I#:A#JI^BR#@H@/K8@@@[ABKI#1A#KI#.A#K@[#BN
)@@G@@O;@@@W'=@@@<R;@@@WAF@I#1R#@I#:A#@I#2R;@I#!'=@@@#*4@I#0/K@[:&R#H@@C;C@@@SBO
)@@G@@A#@I#"R#@I#2O;@@@[A#@I#2R#@H@/K8@@@[ABKI#1O#@I#"A#@H@/'=@@@<R#@I#"AF@I#1BP
)@@G@@R;@I#!'=@@@#*4@I#0/K@[:&(OH@@[/K@[(TR#@I#2O;@@@_A#@I#2RRH@@[;*@@@S;C@@@SBQ
)@@G@@A#@I#"/K@[(#R]KI#.R#)H@/O;)@@[R]@@@IAB\I#_R#T@@A;C@@@=;?@@@GAFJI#_T8@@@EBR
)@@G@@O#)@@GAB\I^[;C@@@=;?@@@GAFJI^[T8@@@EO#)@@GAB\I^#;C@@@=;?@@@GAFJI^#T8@@@DBS
)@@G@@O#)@@GA#)I#.R#@@@I'=@@@</K@[(8R#@@@C:^JI^[/K@[%AO'K@V=RU(@@CO])@@D&')@@[BT
)@@G@@&'@@@[RRD@@CT8@@@EN@K@@GM]E)@@&'@@@@/K@[(4R#@@@C:^JI^#/K@[%OO'K@V=RU(@@DBU
)@@G@@O])@@D&')@@[&'@@@[RRD@@DT8@@@EN@K@@GM]E)@@&'@@@@/K@[%]R#@@@C:^@I#./K@[%YBV
)@@G@@O'K@V=RU(@@EO])@@D&')@@[&'@@@[RRD@@ET8@@@DN@K@@GM]E)@@&'@@@@/K@[%KRBJI#_BW
)@@G@@R]@@@GP#@@[#L^JI#_]^ZI#_L^JI^[]^ZI^[L^JI^#]^ZI^#RB@I#.P#@@@CN@K@@GR]K@[#BX
)@@G@@&'@@@[&'K@@[M]S)@@R#@@@D;*@@@M;C@@@MA#@H@/'=@@@=R;@@@EA#JI^DNCZI^[RAJI^[BY
)@@G@@&'@@@E5WC)@[/K@[%"R#K@@CP;K@@ERZH@@[/K@[%8A#JI^FNCZI^#RAJI^#&'@@@D5WC)@[BZ
)@@G@@/K@[:CR#K@@CP;K@@DRZH@@[/K@[:]A#JI^HR;@@@[A#JI^ /K@L*ZA#@I#.C/@I# /,0@HSCA
)@@G@@C8@I^JC8K@@*/,0@I(C@@I#.C8K@@G/,0@JX/,0@H\R#@I^<'=@@@I'=@@@DA#)I#.C/@I# CB
)@@G@@/,0@HSC8@I^QC8K@@+/,0@I(C@@I#.C8K@@]/,0@JX/,0@H\R#@I^<'=@@@I'=@@@DC/@I# CC
)@@G@@/,0@HSC8@I^WC8K@@&/,0@I(R;K@@#R7@I#0/,0@JX/,0@H\R#@I^<'=@@@I[@@[:7C8@[:5CD
)@@G@@'=@@[Q/K@[:8IO PKT8@AI#!@@@@@@'=@@@D@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CE
)@@G@@@@@@@@@@@@@@@@@@@@@@@H[@@@@H[CERROR: RECORD     WARNING: RECORD   CONFIGCF
)@@G@@ INTERNAL SCHEMA TABLE ERROR  C1/C9 TABLE OVERFLOW!   ERROR: RECORD     CG
)@@G@@ EXCEEDS NUMOAP = @@@@@@@@@@@@@@@@@@@@@@@@@@@H@"@@@H@/@@@H[]@@@H[D@@@@@@CH
)@@G@@@@@@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ERROR: AREA  NOT DCJ
)@@G@@EFINED IN SCHEMA  WARNING: AREA      NOT DEFINED IN   FIRST SECOND SCHEMCK
)@@G@@A      NOT DEFINED IN EITHER SCHEMA REORGANIZATION TERMINATED DUE TO NAMCL
)@@G@@E ERROR.    @@@@@@ERROR:       WORDS MORE I-BANK NEEDED.    @@@@@@@@@@@@CM
)@@G@@@@@H[B@@@H\H@@@@@@@BLDC1__@@@@)@@@@@@[AH!6@[IHA.@[^H!/@BLDC3@@[H,V@[CH,9CN
)@@G@@CTINIT@@@@@@@@@H[^@@@H[EC5/C11 TABLE OVERFLOW!  @@@@@@@@@@@@@@@@@@      CO
)@@G@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@H[ @@@H[FC6/C12 TABLE OVERFLOW!  CP
)@@G@@@@@H[A@@@H[GC7/C13 TABLE OVERFLOW!  @@@@@@@@@@@@@@@H[@@@@H[C@[^H\V@BLDC6CQ
)@@G@@@[^H0W@[^H0+@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                              @& H1C@@@@@@CS
)@@G@@[[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CT
)@@G@@@@@H1M@@@H9A@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@]@@@@@@@@*** INTERNAL TABLE ERROR IN ARCV
)@@G@@TDEF *WARNING: RECORD    WILL BE TRANSFORMED DURING UNLOAD  BLDSMR@@[H1MCW
)@@G@@@@[H9A@[IHA.@@[ @@@[AI[^@@[@[]@@[I[)@@@@@@@@@@@@@@@@@@%0-000%1-000@@@@@@CX
)@@G@@******************************************************WARNING: DUPLICATECY
)@@G@@D SYMBOL(S) ENCOUNTERED.  ANY REFERENCE TO THESE SYMBOLS IN THE EDITING CZ
)@@G@@  PROCESS MAY YIELD INCORRECT RESULTS.      SPECIAL ATTENTION MUST BE GIDA
)@@G@@VEN WHEN      THE RECORDS ASSOCIATED WITH THESE SYMBOLS        ARE TRANSDB
)@@G@@FORMED BY THE ART PROCESS.    @@@@@@@@@@@@@@@@@A@@[@@]@@]@@[IK@@@@JK@@@@DC
)@@G@@@]DI[8@[DI[8@[BI][@[CI]C@[BI]K@[BI]R@[CI]Y@[BI]&@@DUPLICATED@@@@@SYMBOL:DD
)@@G@@            @[GHA.@@[@[]@@[I[)@.GI#F@@@@@@[[@@@@@@@@@@@@@@@@@@@@@@@@@I#TDE
)@@G@@@@@I#X@ASG,A OLDSCHEMA. .     @ASG,A NEWSCHEMA. .     XXXXXXXX    SCHEMADF
)@@G@@      @@@@@@@@A@@@                        @@@@@@@@@@@@XXXXXXXX    @@@@@@DG
)@@G@@@K@@@@@@@@@@@@@@@@@@@I#5@@@I#7OLDSCHEMA   NEWSCHEMA   _____"_____"@@@@@@DH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ERROR IN ASSIGNING SCHEMA FILEDJ
)@@G@@ - STATUS:  SCHEMA ELEMENT NOT FOUND - STATUS:  I/O ERROR READING ABS SCDK
)@@G@@HEMA - STATUS:    @[GI#F@1]@C@@I7@9G)@E@9]-J.[C#@@@___@B6G8@@[=H@G@]GH]SDL
)@@G@@@@KH^/@@GHA1@]UHBF@]2HD9@@OHIJ@B"HKB@@7HS\@@3H+"@[[H<_)@QG_6)@*H[0)@SH^=DM
)@@G@@)[>H G)@IHA.)@OHD>)[=HG:)[=HI<)@%HS )DSHT&)@IH<1[@@G_1C8W@@@KCKG_1H8)@@[DN
)@@G@@&;K@CQC@@@@H'=@@@HG8W@@@ @H@@@>@@@F%/K@@CN>@@@F:/KF@@[C8H@@@?8I@@@/K@@C DO
)@@G@@C@@@F(C8K@@#/KF@@@C@@@FYC8K@@[/KF@@@C@@@F=C8K@@]/KF@@@L8@@@[C@)G_1G8)@@[DP
)@@G@@*@I@@@?CY@@@/K@@C-G),@@@/K@@CV%CI@@@/KF@@@C)"@@@H80@@[T80@@AG="@@@9?I@@[DQ
)@@G@@?80@@BC@K@F?/KF@@[N8W@@@C^@G_1G8@@@[C9K@@[ @@G__N8)@@@(@G@@@/K@@DQ(4G@@@DR
)@@G@@/K@@DA%1W@@@/K@@DQC?W@@@!8K@@A/K@@DD%(KG__ @@G_"[(KG__9??@@[C-G@@@:9@@@[DS
)@@G@@C@0@F?')H@EAH9@@@[T9@@@AG>G@@@')H@EIG)G@@@G8@@@[/K@@C1:9K@@[/K@@DIC*?@@@DT
)@@G@@:8)@@.N8)@@[%[K@[[/K@@DA/K@@C.%@)@F?[5@G_":@)@F?[-KG_"/K@@DA(@@@[]:(KG__DU
)@@G@@/K@@DV[(KG__ @@G_":[K@[[/K@@D<G9K@@[*@G@@@/K@@C0 @@G_" @@G__/KF@@@:(KG__DV
)@@G@@ *@G__9?KG_"98V@@@C8@@@-[=@G__(?@G__/KF@@[C@@H@FD8)@@@C80@@@C!@G__8^@@D6DW
)@@G@@1@@@@I!8)@[@C80@@E[))G__[=0G__/KF@@[C8K@@@;=@@@A?8K@@'?8K@@0/K@@E[(@@@@JDX
)@@G@@C80@[@H8K@@0T8)@@EG8!@@@/K@@D\/^0@D2%8K@@+:8K@@-C8.@@@/@0@D2/K@@D\9*)H@@DY
)@@G@@9*)H@][@)H@^[@)H@ [@)H@A9*)H@B9*)H@D[@)H@F/K@@DL[1@G_"[!@G_"[(@G_"[>@G_"DZ
)@@G@@[5@G__[1@G__[!@G__C80@@F+8K@@_:8)@@ ;^@@@A8#0@ES9*@G_3C@@@F!C@K@F,C8)@@BEA
)@@G@@C@0@F?[@"G_68#)@E-N4KG_"9!@H@@/\)@FJC9K@@*(4@G_"*)@G_"')H)@@N0KG_"9!@H@]EB
)@@G@@*@@@[[/K@@E0C[@@F\N8K@@^/\)@FJN?KG_"(@@@[[/K@@E'C9K@@(')H)@@C[@H@^/\)@FJEC
)@@G@@C9K@@)')H)@@(*@G_"*=@G_"/K@@F@C@@@F0'=@@@J/KF@@@C9K@@/')H)@@N*KG_"C[@H@ ED
)@@G@@/\)@FJN=KG_"(@@@[[/K@@E.C9K@@/')H)@@C[@H@A/\)@FJ/K@@E.;>@@@A')H)@@8KK@FHEE
)@@G@@/KI@@@[5W@@@[1W@@@[!W@@@[(W@@@[>W@@@/\0@FR[-W)@@Q;K@FL/KJ@@@PROCESSOR CAEF
)@@G@@LL ERROR    @[^@FUABNORMAL RETURN FROM READ$    @[ @FZTOO MANY SPECIFICAEG
)@@G@@TIONS @[^@F>]@@@@@[@@@@@      @@[G_6@@[@FLTPF$  @@GG_2C8G@@@;G@@@=W8@@8KEH
)@@G@@C8?@@@C8H@@@/\K@G]C8)@@:')])H7;G@@@=W8@@@/C8?@@@C8H@@@/\K@G]C8)@@:')])H7EI
)@@G@@C8?@@@C8V@@@;G)@@=W8)@@EG8)@@0')])H7C8\@@0')])H7/KH@@@;C@@@M+8@_@@;GK@@0EJ
)@@G@@/\K@G]C8)@@/')])H7+8@@_@;GK@@%/\K@G]C8)@@/')])H7+8@@@_C8!@[@/\K@G]/KF@@@EK
)@@G@@;C@@@M+8@@_@;GK@@%/\K@G]+8@_@@;CK@@FC@!@G"C80@@^;@)@@Y')])H78#0@G)+8@@@_EL
)@@G@@C8!@[@/\K@G]/KF@@@AE1@@#;C@@@M[@@@[[+8@_@@;CK@@F9?H@G"/,0@IYC8)@@ ')])H7EM
)@@G@@C@K@[[+8K@_@;G)@@%W8)@@E/@)@G7G8)@@0')])H7C8\@@0')])H7C8)@@,')])H7+8K@@_EN
)@@G@@C8I@Y?C8K@@ RE1@@#/K@@J> JAN UARY    FEB RUARY   MAR CH      APR IL     EO
)@@G@@ MAY         JUN E       JUL Y       AUG UST     SEP TEMBER  OCT OBER   EP
)@@G@@ NOV EMBER   DEC EMBER  A^W@@#A@?@@^A@/@@ Q8W@@@N?L@@@R@)@KBR^1@@@&80@@[EQ
)@@G@@C8@@KCM@/)@@Q^1@@@ ?[@@]/KF@@@A^W@@#A@?@@^A@/@@ Q8W@@@&8)@@[Q4-@@[&80@@[ER
)@@G@@Q01@@[O^1@@@/KF@@@A4-@@[P^1@@@A01@@[C8[@@@Q^L@@#R@?@@^R@/@@ /KF@@@[4<@@@ES
)@@G@@[0<@@@[?<@@@[*<@@@[=<@@@/?)@H.[)<)@@A^-@@]Q8)@@@/K[K@]C8?@@@')])H7/KF@@@ET
)@@G@@;G@@@=W8@@@AG^[@@@Q8!@@@Q8/@@@/KF@@@G8]@@@C8N@@@H^L@@@T8K@@AG8H@@@/K@@I^EU
)@@G@@N?L@@@Q^1@@@C8@@KCM@/)@@Q8)@@@Q^1@@@/KF@@@C8#@@@H^[@@@T8@@@AG8]@@@/KF@@@EV
)@@G@@C80@@ /K@@IZC80@@F;^@@[]+8K@@_%8)@@ :8)@@@/K@@I>')])H78#0@IZ/KF@@@&"0__"EW
)@@G@@/K@@I%&'0@@@C8.@@@;G@@@M;CK@@M&;@@@[&;K@@[8#0@I1/KF@@@')G)J 0@@@@F%8)@@@EX
)@@G@@')])H7/K@@I\C?[@@[C^L@@[/K@@I;;G@@@M;CK@@M&;@@@[&;K@@[')G)J :0-@@@/K@@J]EY
)@@G@@')])H7/K@@I.[?[@@[[^L@@[/KF@@@C4!@@@C0!@@@C?!@@@C*!@@@C=!@@@/\@@JFC)!)@@EZ
)@@G@@[^[@@]Q;@@@@/K[K@]C80@@@;G@@@#/@@@JRG80@@[;G@@@#/^@@JMC8)@@0')])H7C8)@@@FA
)@@G@@;=K@@#G8)@@0')])H78#0@JR/KF@@@C8.@@@T8K@@#;GH@@@H80@@[/K@@JR&"0__"/K@@J&FB
)@@G@@C8K@@@&'0@@@N8X@@@C80@@@;O@@@=W8@@@EE/X@@@;?)@@AG8.@@08KK@J,/^@@J*/C@@J5FC
)@@G@@0@@@@F/K@@J5;?)@@AG80@@-8KK@J5C@K@@I0@@@@F1@@@@G/K@@J/R;)@@-')])H78KK@J/FD
)@@G@@C8)@@ 0@@@@FC8)@@0/K@@K[')])H78KK@K@C@)@@J')])H7;GK@@A/^)@K#/KF@@@@@[@@@FE
)@@G@@      @@@@@@9*@@K?RBK@KDRFH@@[AB@@KQRBH@@[;*@@@]1@GG8@/K@@KPRBH@@[R;K@KPFF
)@@G@@'=@@[D9?@@K?/K@@@@@@@@@@9*@@K?A#)@K,RB@KKR;*@@@]1@GG8@/K@@K-RB@KKRR;K@K-FG
)@@G@@'=@@[DRB@@KRP;@@@]RBW@@@R#)@K\A#?@@@RFG@@]ABW@@@O;@@@[AB@@KQR#)@K,/K@@KPFH
)@@G@@@@@@@@@@@@@@@@@@@@'^@@KDC/@HA7/,0@HSC8@HBFC8K@@X/,0@I('=@@@?/,0@G$C/@@@,FI
)@@G@@/,0@I['=@@@?/,0@F1C/@@@(/,0@I[C@@HBK/,0@IWC/@@@)/,0@I[C/@@@-/,0@I[/,0@H\FJ
)@@G@@R#@HB;'=@@@I'^@@)79?@H^/9*@H^"C@@H F[@@H @C@@HB//,0@C@/K@@O1C@@HB.'=@@@FFK
)@@G@@C@@HB"'=@@[[/K@@LX@@@@@@@@@@@@[@@@LVC8@@LT'=@@[Q/K@@LWBOMB!!8@]@LN@@@@@@FL
)@@G@@'=@@@Q'=@@@3C8K@@[N8K@@U;*@@@DR@KHB_8KK@L=/K@@L(;*@@@[0@@@@G[@L@@@O8K@@[FM
)@@G@@/K@@L+C8@@@[/,0@C:/K@@L!'^@@L2C8@@@]/,0@C:/K@@M)'^@@L2/K@@M)@@@@@@C/@HA7FN
)@@G@@/,0@HSC/@@@@/,0@I[C@@HC@/,0@IWC/@@@[/,0@IEC8@@@[G@@H@:[@@H@:T8@@@]G8@H@$FO
)@@G@@9?G@@@/,0@IYC/@@@,/,0@I[(4@G_"/K@@MF9?@H@@/,0@IYC/@@@*/,0@I[/K@@MJ()@G_"FP
)@@G@@/K@@MJC/@@@*/,0@I[(0@G_"/K@@MO9?@H@]/,0@IY/K@@MS(4@G__'=@@@)9?@H@B/,0@IYFQ
)@@G@@C/@@@[/,0@IEC/@@@./,0@I[/,0@H\C8@HA.'=@@@J/K@KL2'^@@-]C8@HA1C@KHC[N8K@@IFR
)@@G@@M#W)@@R#@HC]'=@@@IR')H@?/,0@+9'^@@+O;*@@@M/@@@M-Q;@HAD/,0@!E'^@@)7C@@H GFS
)@@G@@R@KHC#N@KHB\2@[)@@/K@@O5P@KHC^CC[@@@[@@HEGC8@@@[!C[@@@/K@@O;'^@@N!C8@@@]FT
)@@G@@:C[@@@/K@@O;'^@@OK/K@@O;0@@H@:/K@@NOC@@HA2:8@@@]/K@@NLR')H GA])H@,R])H@,FU
)@@G@@O')@@ A])H@,C@@HC :@E@@@/K@@M)/,0G8?C8@@@[[@@HA2/K@@NBR#@HCA'=@@@I'=@@@EFV
)@@G@@R#@HCB'=@@@I'=@@@E @@HB6C@@HCC:@@H G[@@HB60@@H@:/K@@NOC@@HA4:8@@@]/K@@NLFW
)@@G@@R')HCD(@@H[B/,0@%](@@H[B/K@@NLC8@@@][@@HA2R')H L&')@@ /,0G8\C8@@@[[@@HA4FX
)@@G@@/K@@M)@@@@@@C@@HA2%8@@@[/K@KN!R[@H[BN8K@@M&9@@@[R@)HCEM[])@@ @@@@VR')H@3FY
)@@G@@O])@@V/,0@%]G;0@@[:;0@@D/K@@O]*@@H@:/K@@N7:;0@@ /K@@O]/K@@N7R')HCF*C@H[HFZ
)@@G@@/,0@%]R')HCG*C@H[I/,0@%]R')HCH*@@H[K/,0@%]'^@@O=C8@@@][@@HA2/,0G9W/K@KN!GA
)@@G@@@@@@@@C@@HA4%8@@@[/K@KOKR')HCI/,0@%]R @H[BC@@H[][@^@@]C@@H[D[@^@@DR')HCJGB
)@@G@@/,0@%]R')HCK*@@H[D/,0@%]C8@@@][@@HA4'^@@O=/K@KOK@@@@@@C@@H@.[@@H@/'=@@@=GC
)@@G@@C@@H@_[@@H@"'=@@@=N8K@@M @@@@GR9@@@GR@)HCEM@=)@@/K@KO='=@@@I'=@@@E'^@@!9GD
)@@G@@/K@@M-R#@HCL'=@@@I/K@@M-C@@HCM[@@H G/K@@M\C^[@@@/KG@@@9?@H^"9*@H^/C@@H @GE
)@@G@@[@@H FC@@HCN[@@H^<'^@@-]C@@HEF'=@@@VR#@HCO'=@@@I'=@@@D* END DBREORG *   GF
)@@G@@R')HCD/,0@%]R^KH[B*C@H[B(C[@@#/K@@NLR')HB'/,0@%]R')HCP/,0@%]R')HCQ/,0@%]GG
)@@G@@R')HCR/,0@%]/,0@8</,0G'G'^@@O=/K@@M)R')HCD/,0@%]R^KH[B(C[@@[/K@@NL(C[@@JGH
)@@G@@/K@@NL*@[@@C/K@@P?R')HCS/,0@%]R')HCP/,0@%]/K@@P4R')HCT/,0@%]R')HCU/,0@%]GI
)@@G@@C@@H[C[@@H[@C@@H[D[@@H[]R')HB9/,0@%]R')HCV/,0@%]R')HCW/,0@%]/,0@8</,0G'@GJ
)@@G@@/K@@M)R')HCD/,0@%]R^KH[B*@[@@D/K@@QDR')HCP/,0@%]R')HCQ/,0@%]R')HCR/,0@%]GK
)@@G@@/K@@QPR')HCU/,0@%]R')HCX/,0@%]R')HCY/,0@%]C@@H[D[@@H[]C@@H[E[@@H[^C@@H[FGL
)@@G@@[@@H[ R')HCZ/,0@%]/,0@8<RAKH[^ WD@@[(OD@@@/K@@QYOQT@@@/K@@QTR#@HC)'=@@@IGM
)@@G@@R')H[R/,0@+9'^@@+O;*@@@M/@@@QYQ;@HAD/,0@!EC@@H G:@@HC-/K@@Q/C@@H L:@@HC+GN
)@@G@@/K@@Q0R#@HC<'=@@@I/K@@QY'^@@U1R]K@@[C@@H Q'^@@+ /@)@Q9!8)[@@/K@@Q9[W(@@[GO
)@@G@@/K@@QYR#@HC='=@@@I/K@@QY/,0G"L/K@@M)R')HCD/,0@%]R^KH[B*@[@@D/K@@RER')HCPGP
)@@G@@/,0@%]R')HCQ/,0@%]R')HCR/,0@%]/K@@RQR')HCU/,0@%]R')HCX/,0@%]R')HCY/,0@%]GQ
)@@G@@C@@H[D[@@H[]C@@H[E[@@H[^C@@H[F[@@H[ R')HCZ/,0@%]C@@H@/G8@[IC'=@@@<C@KH@/GR
)@@G@@[@@H@/G8K@@[[^KH#Q @@H#S C@H#Q @@@@JR8K@@JR@)H#Q&8)@@[N8K[ICM@-)@@R#@HC>GS
)@@G@@'=@@@IR')H[X/,0@+9'^@@+O;*@@@M/@@@R$Q;@HAD/,0@!EC@@H G:@@HC-/K@@R"C@@H LGT
)@@G@@:@@HC&/K@@S1:@@HC$/K@@S':@@HC*/K@@TWR#@HC('=@@@I/K@@R$ @@H#RC8@[IC[@@H#*GU
)@@G@@(@@H#S/K@@SYN@0H#S8K0@S^R^KH#Q&8K@@[C^[@@[T8@@@]GC[@@[G8@@@]CCKH#QG@K@@GGV
)@@G@@[CKH#QC@KH#*H@K@@G[@KH#*8K0@SM/K@@SY[O[@@@R@0@@[O@K@@GR@)@@[O80@@2C@@H@/GW
)@@G@@&;@@@[H@@@@#G8@@@[N@K@@GM@<)@@/K@@SAC@@H@/H@@H#*[@@H@/'=@@@=/,0@8</,0G'AGX
)@@G@@C@@H[#[@@H[JR^KH[B[@[@@JR')HCJ/,0@%]R')HC%/,0@%]'^@@-]'^@@O=*@@H#R/K@@M-GY
)@@G@@/K@@O8'^@@U1C@@H Q'^@@+ /@)@WF!8)@[>/K@@WF'^@@V2[S-@@@/K@@R$'^@@U1C@@H VGZ
)@@G@@%@@HC+/K@@WH9?@H Q:@@HC /K@@WH'^@@VQC#@@@T9?@H ):@@HC /K@@WH'^@@VQ*4D@@CHA
)@@G@@/K@@WN'^@@V2R@)@@[C^[@@[T8@@@]NCL@@[O@)@@GO8)@@](@]@@@/K@@TQ:V]@@@/K@@WJHB
)@@G@@O8)@@[/K@@TK[V]@@@[RM@@@C8@@@[GC[@@[[C[@@[/K@@R$'^@@U1*@@@@V/K@@W#C/@HA7HC
)@@G@@/,0@HSN80@@RR]KHC:9?D)@@/,0@IY8K0@T</,0@H\R@KHC?R@)HC!N8K@@IM@-)@@C/@HA7HD
)@@G@@/,0@HSC8@@@([0@HA7[4@H VC8@H G/,0@I9C^@HA8:8@H V/K@@W 9?@HA.'^@@VQ9?@HC,HE
)@@G@@9*@HA.C/@@@@/,0@I^C8@@@,[0@HA7[0@H V/,0@I6C^@HA8:8@H V/K@@W C@@HA.'^@@+ HF
)@@G@@C#@@@I9?@HC,9*@HA.C/@@@@/,0@I^C8@@@)[0@HA7[?@H V/,0@I6C^@HA8:8@H V/K@@W HG
)@@G@@C@@HA.'^@@+ ?@)@@S/K@@WBC]0@@I'^@@V2R@)@@[O8)@@](^[@@[/K@@U)N^1@@[8K0@UWHH
)@@G@@:RM@@@/K@@WDO8)@@]8K0@UW(C[@@[/K@@U%R@0@@]OC1@@[P80@@[&80__"R[@@@#O80@@]HI
)@@G@@NCL@@[M@4)@@[#M@@@[F]@@[[A2@@[C8@@@[G^[@@[[^[@@[/K@@R$@@@@@@R^KH[^9?[@@]HJ
)@@G@@9/@H G/K@@U_9?[@@^9/@H I/K@@U_C@[@@A%@@H K/K@@U_CZ-@@@C\1@@@/K@KU1(O[@@@HK
)@@G@@/K@@V#OOL@@@/K@@U3C/@HA7/,0@HS9?@HC0/,0@IYC/@@@[/,0@IEC8@@@ [0@HA7C8@H GHL
)@@G@@/,0@I9C/@@@[/,0@IEC8@H#KC8K@@</,0@I(/,0@H\R#@HB;'=@@@I/K@@O.@@@@@@RAKH[]HM
)@@G@@9/D@@[/K@@VWCZT@@@/K@KVQ(OD@@@/K@@V)OQT@@@/K@@VS9*@H#CC/@HA7/,0@HS9?@HC2HN
)@@G@@/,0@IYC/@@@[/,0@IE9?@H#C/,0@IYC/@@@[/,0@IEC8@H#EC8K@@-/,0@I(/,0@H\R#@HB;HO
)@@G@@'=@@@I/K@@R$@@@@@@R^KH#Q(@@H#S/K@@V/N@KH#S&8K@@22Z-)@@/K@@V/P8K@@2/K@KV2HP
)@@G@@C8@@@[G@@H#S[@@H#S @[@@@[Z-@@@ @[@@[/K@KV2C@@H#2/K@@WLC@@H#;/K@@WLC@@H^[HQ
)@@G@@/K@@WLC@@H^B/K@@WLC@@H^W/K@@WLC@@H^J/K@@WLC@@H^Q/K@@WL'=@@@I/K@@R$C/@HA7HR
)@@G@@/,0@HS9?D@@[/,0@IYC8@H^XC8K@@Z/,0@I(/,0@H\C@@HB;/K@@WL'^@@Y=/,0@8</,0G_NHS
)@@G@@'^@@YM/K@@M)'^@@Y=R#@HC4'=@@@IR')H[Z/,0@+9'^@@+O;*@@@M/@@@W<Q;@HAD/,0@!EHT
)@@G@@C@@H G:@@HC5/K@@W8C@@H L:@@HC6/K@@X<:@@HC+/K@@XFR#@HC7'=@@@I/K@@W< @@H[>HU
)@@G@@/,0@8</,0G_>'^@@YM*@@H]Y'^@@X@*@@H[>/K@@M)/K@@O.@@@@@@'^@@-]R#@HC8'=@@@IHV
)@@G@@'^@@)7C@@HC9[@@H^<C8@@@[[@@HEG/,0G_Q/K@KX@'^@@U1C@@H Q'^@@+  @@@@GC8K@@DHW
)@@G@@,@@@@I/K@@XW(@@H[L'^@@XZR^KH[LOCKH[L[Z-@@@[O-@@@CC@H[LG8@@@[[C@H[L/K@@W<HX
)@@G@@R#@HC''=@@@I/K@@W<@@@@@@R8KH[0A@KH[L/K@KXZ'^@@U1C@@@@U'^@@Y/A@KH]XN9K@@#HY
)@@G@@ @@H]2C8@H QC8K@@ T@K@[ G@@@@HC@W@@@:@KHC /K@@X'[@@H]2'^@@Z '^@@YAC@@@@UHZ
)@@G@@'^@@Y/A@KH]XC8@@@K)?[@@@[?L@@@'^@@)IA]0H]Y8LK@X(*@@H]2/K@@W<R#@HC;'=@@@IIA
)@@G@@/K@@W<R#@HC/'=@@@IR#@HC.'=@@@I'=@@@)@@@@@@R@KH]XC8@@@)+?[@@@/^K@Y[)?[@@@IB
)@@G@@[?L@@@O*L@@@1@[@@['=@@@)[V1@@[/K@KYA@@@@@@R^KH[BC@@H[[[@[@@[C@@H[#[@[@@#IC
)@@G@@C@@H[L[@[@@LR')HCJ/,0@%]R')HC"/,0@%]R')HC_/,0@%]R')HD@/,0@%]'^@@O=/K@KYMID
)@@G@@@@@@@@R')HCD/,0@%](@@H[B/K@@NLR^KH[B(@[@@]/K@@NL @@@@VR')H]3O])@@V/,0@%]IE
)@@G@@G;0@@[:;0@@ /K@@Y4/K@@Y!R^KH[B(@[@@K/K@KY=R')HD[/,0@%]R')HCT/,0@%]/K@KY=IF
)@@G@@@@@@@@R^KH[@%W[@@@/K@@Z[/K@KY/(O[@@@'=@@@)OOL@@@/K@@Y"@@@@@@R@)@@GR^KH[AIG
)@@G@@9?]@@@9/[@@[/K@@Z69?]@@]9/[@@#/K@@Z6C@]@@^%@[@@ /K@@Z6CZ1@@@O8K@@ANSL@@@IH
)@@G@@8KK@ZPC@@@@UCR-@@@%O[@@[/K@@ZU/K@KZ O8K@@[8KK@ZRR[K@@]C/@HA7/,0@HS9?@H GII
)@@G@@/,0@IY9?@H I/,0@IYC@@H K/,0@IWC8@H]8C8K@@T/,0@I(9? @@@/,0@IY9? @@]/,0@IYIJ
)@@G@@C@ @@^/,0@IWC/@@@[/,0@IEC@@HD]/,0@IW/,0@H\R#@HB;'=@@@I/K@@W<(O[@@@/K@@Z'IK
)@@G@@OOL@@@/K@@ZCR[K@@]C/@HA7/,0@HSC@@HD#/,0@IWC/@@@[/,0@IE9? @@@/,0@IY9? @@]IL
)@@G@@/,0@IYC@ @@^/,0@IWC8@H].C8K@@?/,0@I(/,0@H\R#@HB;'=@@@I/K@@W<@@@@@@ @@@@#IM
)@@G@@ @@@@GR@)@@[N*M@@@O8)@@[8KK@)Q/K@@)VG4]@@@:V2@@@R@0@@]O8)@@[8KK@)Q1@]@@@IN
)@@G@@/K@@)&N0M@@@8KK@))/K@@)&O8)@@]G4]@@@:V2@@@R@0@@]O8)@@[8KK@)-C8K@@[/@@@)?IO
)@@G@@H@@@@HG8K@@[/C@@)$'=@@@)(@@@@#'=@@@)(4#@@@[4N@@@/K@K)IC@@H L @@@@H%@@HD^IP
)@@G@@C8K@@[[@KH^+/K@@M-@@@@@@'=@@@?[@@H FC@@HD '=@@@4C@@H^'C@KH^?9*@H^/C@@H GIQ
)@@G@@[@@H^</K@K)7@@@@@@ @@HEG(@@H^+/K@K-]C/@HA7/,0@HSC/@@@A/,0@IEC8@H [C8K@@FIR
)@@G@@/,0@I(C8@H^<C8K@@A/,0@I(/,0@H\R#@HDA'=@@@IC/@HA7/,0@HSC/@@@A/,0@IEC8@H #IS
)@@G@@C8K@@F/,0@I('=@@@?H@@H F/,0@F1C/@@@[/,0@IEC/@@@(/,0@I[C@@H F/,0@F1C8@H  IT
)@@G@@C8K@@^/,0@I('=@@@?/,0@F1C/@@@)/,0@I[/,0@H\R#@HB;'=@@@IC@@HD '=@@@4C/@HA7IU
)@@G@@/,0@HSC/@@@A/,0@IEC8@H AC8K@@B/,0@I(C@@H^'H@@H^/;G@@@=W8@@@ /,0@J=C8@H CIV
)@@G@@C8K@@L/,0@I(C@@H^?H@@H^./,0@J=/,0@H\R#@HB;'=@@@I/K@K-]@@@@@@;G@@@= @@@@IIW
)@@G@@N;0@@  @@@@G;?@@@A:8@@@ /K@@+M:8@@@@/K@@+MH8@@@0T8)@@EG@)@@G8N0@+D/K@K+ IX
)@@G@@@@@@@@[@@H#BC8@HAD[^@H#AC@@HAC;G@@@=W8@@@A*@@@@HG8@@@[[^@H#BC@@HDB'=@@@4IY
)@@G@@C0@H =%8@@@^/K@@+&C@@HDC+@@H#B/@K@+7C^@H#B/@@@+7[@@H# C@@H# /@@@+7/G@@+7IZ
)@@G@@L8@@@G!8@@@GC8@@@G[?@H#A[@KH# C@@H#A'=@@@IC^@H#AG8@@@G[^@H#A/K@@+(C@@H#BJA
)@@G@@/K@K+OCCE@@[*@@HDG/KG@@@9?E@@@9*@HDDRA@HDE @C@@@C@@@@CG8@@@[[^@HDEC8@@@[JB
)@@G@@[@@HDG(?@HDD/K@@<FC8@HDD'=@@[][@@HDF/K@@<JC@@HDE'=@@@H[@@HDF/K@@<J @@HDGJC
)@@G@@;*@@@M;C@@@M/@@@=3C@K@@GG@K@@CC@X@@@:@KHDWH8@@@[/@@@=3N@0@@GG@@@@CC@G@@@JD
)@@G@@'^@@<.C@@@[#H8@@@[T8@@@AG@@@[[[^C@@@*@@HDV/K@@<>/K@@=3R#@HDX'=@@@H;*@@@MJE
)@@G@@;C@@@M/@@@=3C@K@@GH8K@@[C@XHDH:@KHDWH8@@@[/@@@=3N@0@@GH8@@@[C@GHDH'^@@<.JF
)@@G@@C@@@[#H8@@@[T8@@@AG@@@[[N@0@@G'^@@=G*@@HDV/K@@<>/K@@=3@@@@@@N8K@@A;G@@@AJG
)@@G@@;CK@@Y%8K@@ /K@@= 8KK@<_'=@@@) @@HDV%8K@@;/K@K<.[@KHDV8KK@=F'=@@@)/K@K<.JH
)@@G@@@@@@@@C C@@@K[@@[#[ S@@@C9K@@[ @@@@JW80@@AG@0@@CG80@@[R]K@@J&'K@@[G9@@@[JI
)@@G@@8K0@=U/K@K=GC@@@@LG9K@@[H8@@@[;G@@@=W8@@@A')H@=$C@@@@KG9@@@[H8@@@[;G@@@=JJ
)@@G@@W8@@@A')H@=!/K@@=SC4/HDHC0/HDHC?/HDHC*/HDHC=/HDHC)/HDH[49@@@[09@@@[?9@@@JK
)@@G@@[*9@@@[=9@@@[)9)@@C@@HDF/KF@@@C8@@@[[@@HDG/K@@=3@@@@@@N]@@@CR]@H[]&'@@@DJL
)@@G@@CD@H[];H@@@=W9@@@DN@K@@KC@K@@GC[K@@GC?C@@@G*C@@@;GW@@@2WS)@@/K@@>MP]@HDZJM
)@@G@@;G)@@=C?C@@@;??@@@;G0@@=C*C@@@;?/@@@C[@@@CC@@@@LR]@@[C/K@K=8R]@@[CC@@@@LJN
)@@G@@ @@@@H/K@K=8@@@@@@[@KHDYCOKHDYN]@@@CR]@H[]&'@@@DCD@H[];H@@@=W9@@@DN@K@@KJO
)@@G@@2WS)@@/K@@>0P]@HDZC?C@@@C[@@@H;(G@@@C[K@@I)[@@@LC*C@@@;(W@@@C[@@@J)[@@@LJP
)@@G@@C@@@@LC[@@@CR]@@[C/K@K>Q @@@@GR]@@[C/K@K>QC8@@II'=@@[&[@@HEFC@@HEH'=@@[[JQ
)@@G@@'=@@@R[@@HEEC@@HEI'=@@@4C/@HD9/,0@HSC/@@@]/,0@IEC/@@@%/,0@I[C/@@@[/,0@IEJR
)@@G@@C@@HEJ*@@HEGC@@H^</,0@IWC/@@@[/,0@IE9?@HEK/,0@IYC/@@@[/,0@IEC@@HEM/,0@IWJS
)@@G@@C/@@@[/,0@IE9?@HEN/,0@IYC/@@@[/,0@IEC@KH@" @@@@GW8@@C@*@@@@HG8@@@[C@)H@/JT
)@@G@@ @@@@HH@)HEPW8K@C@*@@@@IG8K@@[G@@@@HT8@@C@;G@@@=W8@@J**@@@@HG8@@@[/,0@J=JU
)@@G@@C/@@@K/,0@I[C/@@@[/,0@IEC@@HEM/,0@IWC/@@@[/,0@IEC@@HEQ/,0@IW/,0@H\'^@@(9JV
)@@G@@(@@HEG/K@@>8C/@HD9/,0@HSC/@@@]/,0@IEC/@@@%/,0@I[C/@@@[/,0@IE9?@HER/,0@IYJW
)@@G@@'=@@@?H@@H F/,0@F1C/@@@,/,0@I[C/@@@[/,0@IEC@@HET/,0@IWC@@HD6H@@H^/;G@@@=JX
)@@G@@W8@@@ /,0@J=C/@@@[/,0@IEC@@HEU/,0@IWC/@@@[/,0@IEC@@HEV/,0@IWC@@HD*H@@H^.JY
)@@G@@/,0@J=/,0@H\'^@@(9C@@HEG/KG@$X/K@@>8/K@@>8/K@@>8/K@@$>/K@@$"/K@@*V/K@@*8JZ
)@@G@@/K@@(PC/@HD9/,0@HSC/@@@]/,0@IEC/@@@%/,0@I[C/@@@[/,0@IE9?@HEW/,0@IYC/@@@[KA
)@@G@@/,0@IEC@@HEY/,0@IW9?@H1@/,0@IYC/@@@,/,0@I[C@@HEZ/,0@IWC^@H1C/,0@J=/,0@H\KB
)@@G@@'^@@(9/K@@>8C/@HD9/,0@HSC/@@@]/,0@IEC/@@@%/,0@I[C/@@@[/,0@IEC@@HE)/,0@IWKC
)@@G@@C/@@@[/,0@IEC@@HE-/,0@IWC/@@@[/,0@IE9?@HE+/,0@IYC/@@@[/,0@IE9?@HE=/,0@IYKD
)@@G@@C/@@@[/,0@IEC@@I]B/,0@J=/,0@H\'^@@(9/K@@>8C/@HD9/,0@HSC/@@@]/,0@IEC/@@@%KE
)@@G@@/,0@I[C/@@@[/,0@IEC@@HE)/,0@IWC/@@@[/,0@IEC@@HE-/,0@IWC/@@@[/,0@IE9?@HE+KF
)@@G@@/,0@IYC/@@@[/,0@IE9?@HE&/,0@IYC/@@@[/,0@IEC@@H'9/,0@J=/,0@H\'^@@(9/K@@>8KG
)@@G@@C/@HD9/,0@HSC/@@@]/,0@IEC/@@@%/,0@I[C/@@@[/,0@IEC@@HE)/,0@IWC/@@@[/,0@IEKH
)@@G@@C@@HE-/,0@IWC/@@@[/,0@IE9?@HE+/,0@IYC/@@@[/,0@IE9?@HE*/,0@IYC/@@@[/,0@IEKI
)@@G@@C@@H!"/,0@J=/,0@H\'^@@(9/K@@>8C/@HD9/,0@HSC/@@@]/,0@IEC/@@@%/,0@I[C/@@@[KJ
)@@G@@/,0@IEC@@H__/,0@J=C/@@@[/,0@IEC@@HE%/,0@IWC/@@@[/,0@IE9?@HE:/,0@IYC@@HE!KK
)@@G@@/,0@IWC/@@@[/,0@IEC^@H\#/,0@J=C/@@@//,0@I[9?@H,;/,0@IYC/@@@)/,0@I[/,0@H\KL
)@@G@@'^@@(9/K@@>8@@@@@@@@@@@@'=@@@D@@@@@@R#@HE,'=@@@IC0@HD8:8@@@^/K@K(9R;@HEBKM
)@@G@@'=@@@C/K@K(9AA0HF"R7%@@@R3'@@@?8)@@[/K@@?'!8)@@P/K@@?'R'@@@@:8)@@IR'@@@[KN
)@@G@@*@@HE1/K@@%SR#@HG['=@@@J/C@@%Q:80@@K/K@XF"R#@HG]'=@@@J/G@@?8R;@@@[A#@HE1KO
)@@G@@%80@@K/K@@:[R#YHE4A#KHFFC[@@@IR;@@@AAF@HFIR;@HFD'=@@[ :8)@@[/K@@%.*@@@@IKP
)@@G@@/K@@?.R#)@@K*W@HFI/K@@%.R#KHFNA#KHE3R#KHFLA#KHE2R#CXF_K8@@@[ABKHE2OF@HE2KQ
)@@G@@A#CXF_'=@@@<R#@HE2R#KHE39*@HFTR;@@@KA3@HFSRF@HE2/@@@%.R;@HFP'=@@@#'^@@?AKR
)@@G@@/K@@%" @@HE2R#KHE2')I@?</K@XF":8)@@[/K@@:::8)@@D/K@@:/%80@@C/K@@!B')I@?IKS
)@@G@@A#KHE2C[@@@IR;@HFD'=@@[C/^)@?.R#)@@KR#@HE2A#KHE39*@HFTR;@@@CA3@HFSRF@HE2KT
)@@G@@/@@@:SR;@HFP'=@@@#'^@@?AR#@HE2A#@HFL;G@@@6W8@@@W*@@@@HO;@@@[A#@HFMR;K@@AKU
)@@G@@AFKHFIR#YHE4A#KHFF @@HFOR#KHE3A#KHFNO#K@@GD8@HFD'=@@[^/^)@?./K@XF"%80@@DKV
)@@G@@/K@@: A#)HE\R;K@@AAFKHFI @@@@HO;K@@[R#HHE4A#@HFFR;@HFD'=@@[A!8)@@]/K@@?.KW
)@@G@@?8K@@O/K@@:1R#)HE\/K@@:"%80@@D/K@@:  @@@@C:8)@@DR'@@@[9*)HE\'^@G9.9?)HE\KX
)@@G@@R;0@@C/K@@: @@@@@@R')HFP*4@HFS/,0@/!RB@HFS%C@HE2/,0@/!/K@K?A @@@@HR#KH[@KY
)@@G@@R#KH[[R#KH[]R#KH[#R#KH[^R#KH[ R#KH[AR#KH[BR#KH[CR#KH[DR#KH[ER#KH[FR#KH[GKZ
)@@G@@R#KH[HR#KH[IR#KH[JR#KH[KR#KH[LR#KH#QR#KH!:/S@@@@A#KH[@A#KH[[A#KH[]A#KH[#LA
)@@G@@A#KH[^A#KH[ A#KH[AA#KH[BA#KH[CA#KH[DA#KH[EA#KH[FA#KH[GA#KH[HA#KH[IA#KH[JLB
)@@G@@A#KH[KA#KH[LA#KH#QA#KH!:R')HFZ/,0@/SR#@HG#'=@@@I'=@@@)R#@HG^'=@@@I[@@@! LC
)@@G@@C8@@!#'=@@[Q/K@@!APFPPKTK@GHFD@@@@@@'=@@@)R#@HG '=@@@I'=@@@)R;KHGAR;)H GLD
)@@G@@&;)@@[N8K@@2M#!)@@C[K@@GR80H G&80@@[R@)@@L&8)@@[;DK@@MT9K@@AH9K@@[ @@@@HLE
)@@G@@R#)HGBR#0HGBR@K@@#')I@!!$;)@@ /K@@!ZR#)HGB:8@@@ /K@@!*O;K@@[')J@!3$;0@@ LF
)@@G@@/K@@!&R#0HGB8^K@!V/K@@!?/@K@!:O80@@  @@@@H8^K@!T/KF@@@R7]@@@R3]@@@R\]@@@LG
)@@G@@R:]@@@R$]@@@R<])@@A7[@@@A3[@@@A\[@@@A:[@@@A$[@@@A<[)@@@@@@@@'^@@6$RB@@!9LH
)@@G@@A#@@,A/K@@,['^@@6$OY;@@@AA0@,AR#@HGC'=@@[[R#@H+"'=@@@I/K@@,W@@@@@@@@@@@@LI
)@@G@@'=@@[@'^@@6$C/@HIJ/,0@HSR\@@,ARBGHIQ/,0@I9C/@@@[/,0@IEC8@HGIC8K@@U/,0@I(LJ
)@@G@@RB@@,AR;K@@G/,0@JX/,0@H\R#@H+_'=@@@IR#@H<@'=@@@IC/@HIJ/,0@HS/,0@H\R#@H<[LK
)@@G@@'=@@@H/,0@77@@[HG:@@[HI<R#@HI<N@KHK<R@KH<]2@[)@[/K@@73R#@@@[;*@@@M;C@@@MLL
)@@G@@P;@@@]R#G@@@/KG@@@R8KHK=N8K@@!R#@H<#O#@@@['=@@@IO8K@@E8KK@,1'^@@2M/K@@,WLM
)@@G@@R[KH<^R#5)@@'^@@4G/[@@\#[[@HTYR#5)@@'^@@4G/[@@\#[[@HTZ'^@@4S/K@@,9'^@@2MLN
)@@G@@/K@@,WR#0HI>'^@@4GR#@@@K&;@[_@'=@@[,'^@@2M/K@@,WR;@@@[A:@@@@'^@@@@@@@@\GLO
)@@G@@'^@@2M/K@@,WR[KH<^R#5)@@'^@@4G/[@@\Y[[@HTYR#5)@@'^@@4L/[@@\YG[@HTY[[@HTZLP
)@@G@@'^@@4S/K@@\N'^@@2M/K@@,WR[KH<^R#5)@@'^@@4G/[@@\?[[@HTYR#5)@@'^@@4G(@@@@KLQ
)@@G@@C[@HTY[[@HTZ'^@@4V/K@@\-'^@@2M/K@@,WR[KH<^R#5)@@'^@@4G/[@@\/[[@HTYR#5)@@LR
)@@G@@'^@@4L(@@@@KG9@@@[G[@HTYH9@@@[[[@HTZ'^@@4V/K@@\\'^@@2M/K@@,WR[KH<^R#5)@@LS
)@@G@@'^@@4G/[@@0 [[@HTY'^@@4Y/K@@\_'^@@2M/K@@,WR[KH<^R#5)@@:@0H< /K@@0L'^@@4GLT
)@@G@@/[@@0O[[@HTY @@HTZ'^@@4//K@@0C @@HTY @@HTZ'^@@4/'^@@2M/K@@,WR[KH<^C[>@@@LU
)@@G@@;D)@@M:[)H<A/K@@0\:[)H<B/K@@1A'^@@6K/K@@0!C/@HIJ/,0@HSR#@@@M/,0@IWC/@@@[LV
)@@G@@/,0@IER#@H<C/,0@IWR;K@@GR#@@@N/,0@JX/,0@H\R#@H<D'=@@@IO9K@@]/K@@0RC[>)@@LW
)@@G@@:[)H<E/K@@0':[)H<F/K@@0":[)H<G/K@@1]R[)H<HN80@@('^@@7H/K@@0RR[)H<HN80@@JLX
)@@G@@'^@@7H/K@@0RR[)H<IN80@@E'^@@7H/K@@0RR[)H<JN80@@I'^@@7H/K@@0R'^@@2M/K@@,WLY
)@@G@@R[KH<^R#5)@@'^@@4G/[@@1P[[@HTYR#5@@@C[ )@['^@@7-[[@HT)R#@HTYR#KHT)A#W@@@LZ
)@@G@@/K@@1D'^@@2M/K@@,WR[KH<^C[>)@@:[)H<K/K@@2];D)@@M'^@@6K/K@@2@R#5@@@C[ )@[MA
)@@G@@'^@@7-[[@HT)C/@HIJ/,0@HSR#@@@M/,0@IWC/@@@]/,0@IE9?@H<L/,0@IYC/@@@[/,0@IEMB
)@@G@@R#@H<N/,0@IWC/@@@[/,0@IER#@H<O/,0@IWC/@@@[/,0@IER#@@@NR;K@@G/,0@JXC/@@@/MC
)@@G@@/,0@I[R#@HT)A#A@@@R;K@@G/,0@JX/,0@H\R#@H<P'=@@@IO9K@@]/K@@1S'^@@2M/K@@,WMD
)@@G@@R#@H<Q'=@@@I'^@@6; *@@@@/K@K,AR9KHI>R#5@@@'^@@4G/[@@2K[[@HTY'^@@6;/K@XTYME
)@@G@@'^@@2M/K@@,W@@@@@@R#@H<@'=@@@I/K@K2M@@@@@@N8K@@  @@@@K;G0@@A;D@@@Y%9@@@ MF
)@@G@@/K@@2)8KK@2S @@@@K/K@K2QR;@@@[ @@@@H;(@@@Y;?0@@A+80@@JT[@@@GO#K@@KT@@HT=MG
)@@G@@;C0@@A @@@@K8KK@2=C[@@@H/K@K2Q@@@@@@R#@HTZP#@HTYO;@@@[C#0@@G @@@@UW;)@@EMH
)@@G@@R[)HTY(@@@@U/K@@3CC/@HIJ/,0@HSC@@HTYC8K@@A/,0@JXC/@@@A/,0@IER#@@@AR;K@@/MI
)@@G@@/,0@I(/,0@H\R#@H<R'=@@@IO9)@@EA[)HTYH;)@@[/K@@25(@@@@V/K@K2!T;0@@AC/@HIJMJ
)@@G@@/,0@HSC@@HTYC8K@@A/,0@JXC/@@@A/,0@IER#K@@VR#@@@A/,0@I(/,0@H\R#@H<S'=@@@IMK
)@@G@@/K@K2!@@@@@@R#@HTZP#@HTYO;@@@[C#0@@G @@@@UW;)@@^R[)HTY&9)@@[(@@@@U/K@@38ML
)@@G@@C/@HIJ/,0@HSC@@HTYC8K@@A/,0@JXC/@@@A/,0@IEC;K@@#R#A)@@R;K@@G/,0@JXC/@@@^MM
)@@G@@/,0@IE8AK@3?/,0@H\R#@H<R'=@@@IA )HTYH;)@@[/K@@3+(@@@@V/K@K3TC/@HIJ/,0@HSMN
)@@G@@C@@HTYC8K@@A/,0@JXC/@@@A/,0@IER#A)@@R;K@@G/,0@JXC/@@@^/,0@IEH;0@@[/B0@4[MO
)@@G@@/,0@H\R#@H<R'=@@@I/K@K3T@@@@@@R;@@@CA#@HT='^@@2Q/K@K4G@@@@@@R;@@@EA#@HT=MP
)@@G@@'^@@2Q/K@K4L@@@@@@/K@K4Q@@@@@@'^@@2!/K@K4S@@@@@@'^@@3T/K@K4V@@@@@@R[)HTYMQ
)@@G@@R[0HT>&90@@[A[$)@@R[)HTYR#A@@@A#B)@@O9)@@[A )HR\R#@HR\A#B)@@O;@@@[A#B)@@MR
)@@G@@R#@HR0R#KHTYA#H@@@C/@HIJ/,0@HSC8@HR/C8K@@P/,0@I(R#@HTYR;K@@A/,0@JX/,0@H\MS
)@@G@@A[0HT>R#@H<S'=@@@I/K@K4Y@@@@@@(@@HTY/K@@5<R#@HT>;*@@@M;C@@@MP;@HT&;G@@@=MT
)@@G@@W8@@@^N@K@@GR@KH<TR#@HTY2@[)@@/K@@5NP@KH<UR#@HTYR#L@@[A#W@@@ @[@@@ @[@@[MU
)@@G@@ @[@@] @[@@#/K@K4/C/@HIJ/,0@HSC8@HR3C8K@@=/,0@I(C@@HTYC8K@@A/,0@JXC/@@@[MV
)@@G@@/,0@IEC/@@@*/,0@I[/,0@H\R#@H+_'=@@@I/K@K4/R[@HT>&9@__;$9@HT&/K@@5!R#^@@@MW
)@@G@@A#@HTYR#@HTYR#O@@[A#W@@@/K@@5>R[@H<VA[@HT>/K@K4/@@@@@@/K@K50@@@@@@ @@@,AMX
)@@G@@'^@@6$RB@@52P;@@@[AB@HTYRBKHT>P;KHT&O;K@@[;GK@@=W8K@@#N@K@@HR@0H<W2^#)@@MY
)@@G@@/K@@6[P@0H<XA^0@,AC/@HIJ/,0@HSC8@HR9C8K@@L/,0@I(C@@HTYC8K@@A/,0@JX/,0@H\MZ
)@@G@@R#@H<Y'=@@@I'^@@2M/K@@,W@@@@@@R[)H<HN8K@@%2D&)@@/K@@6TP[)H<ZR &@@@C[6@@@NA
)@@G@@/K@@6=C/@HIJ/,0@HSC8@HS[/,0@I9R#@@@M/,0@IW/,0@I6/,0@H\R#@H<S'=@@@I/K@K6KNB
)@@G@@R#@@6KO;@@@[/KG@@@@@@@@@9*@HS R;@@@[A:@@@@^@KHS)&;@@@[Q;@HSB&;K@@[Q;K@@INC
)@@G@@N8K@@IM#H)@@R#KH<ZN8K@@FM#H)@@O;@@@[&;K@@[Q;K@[]N8K@@IM#H)@@/K@K6$@@@@@@ND
)@@G@@&;@@@[Q;@HSB&;K@@[Q;K@@IN8K@@IM#W)@@R#KH<ZN8K@@FM#W)@@O;@@@[&;K@@[Q;K@[]NE
)@@G@@N8K@@IM#W)@@9?@HS N@KHS)/K@K6;@@@@@@R 6@@@C/@HIJ/,0@HSRFA)@@/,0@IWC/@@@[NF
)@@G@@/,0@IER#@H<C/,0@IWC/@@@[/,0@IER#B@@@R;K@@G/,0@JX/,0@H\R#@H<D'=@@@I8K0@7ING
)@@G@@/K@K7H@@@@@@R#@@@J+@@H<)R#0@@HR#@@@K+@@H<)C[@@@HN9@@@[C;0@@[ @@@@UC;K@@ NH
)@@G@@;H@@@#;D@@@#8AK@7?;G0@@=8L@@7:C[@@@L/K@K7-R#@H<-'=@@@I/K@@,W'=@@@DR#F@@[NI
)@@G@@R;KHR1N8K@[=M#H)@@N90@[BR@V@@@R@:@@[R@0H<+R[@H<+R[K@@] @@@@V&9K@@[')#@8RNJ
)@@G@@$80@@ /K@@8BR@0H<+:8)@@ /K@@8KG;0@@[')^@8X$9@@@ /K@@8IR[@H<+8L0@8#/K@@8QNK
)@@G@@*@@@@V/K@@8O8L0@8#/K@@8QO8)@@]8L0@7_/KF@@]R7-@@@R3-@@@R\-@@@R:-@@@R$-@@@NL
)@@G@@R<-)@@A7>@@@A3>@@@A\>@@@A:>@@@A$>@@@A<>)@@A]0@9MCD@H[];H@@@=W9@@@DRA@H[]NM
)@@G@@&'@@@D/[F@@@H9@@@[C/@@9G/,0@HSC/@@@@/,0@I[C@@H<</,0@IWC/@@@ /,0@I[9?C)@[NN
)@@G@@/,0@IYC/@@@ /,0@I[C/@@@./,0@I[/,0@H\C8@@9]'=@@@J/G@@9@8^@@8:R]0@9M/KF@@@NO
)@@G@@R')@9]/,0@/S@&E@9]@@@@@@[[@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@[# 4E@@# ^E@@#NP
)@@G@@9?E@@B9*E@@^*@@H@K/K@@;](@E@@@/K@@9*R]KH[]&'K@@DCC@H[];G@@@=W8@@@DH8@@@[NQ
)@@G@@9?U@@@9/T)@[8#@@9</G@@'8P]KH=^/K@@9;CC@H[];G@@@=W8@@@DN@K@@GR]KH[]&'K@@DNR
)@@G@@C?D@@@G*D@@@C[E@@[;HG@@@2XD)@@/K@@'8P]KH=^9?D@@[9*E@@@ @@@@KC?D@@@;!G@@@NS
)@@G@@[ E@@ (CE@@^/K@@''(CE@@ /K@@''(^E@@ /K@@'' ^E@@#CWD@@#[^E@@ACCE@@^G^E@@ NT
)@@G@@H8@@@[CDD@@^?[@@@G/K@@'(CCE@@^TWD@@#CDE@@ ?[@@@G/K@@'0[CE@@^C^E@@ H8@@@[NU
)@@G@@T^E@@A;G@@@=W8@@@W[@E@@ C0E@@#N8K@@^R]@H= 2OC)@@/K@@'/P]@H=ACSC@@@[0E@@#NV
)@@G@@*WC@@@/K@@'_C@@@@E'=@@@#*4E@@#/,0@/!(@@@[#/KF@@@C8@@@%[4E@@#/KF@@@C8@@@%NW
)@@G@@[@@@[#H E@@ /H@@'5G9@@@[[DE@@^/K@@'^ @@@@JWW9@@#[C'@@^/@0@'&/K@@'^C8@@@MNX
)@@G@@[4E@@#/KF@@@C8@@@!/K@@'.C8@@@?/K@@'.C8@@@:[4E@@#/K@@/!C@@@@E'=@@@[/KF@@@NY
)@@G@@;/@H=#A@KH<_A@)H=@A@0H=[A]0H=]C/@H<:/,0@HSC8E@@@C8K@@G/,0@I(C@@H=B/,0@IWNZ
)@@G@@C0E@@#C8K@@#/,0@JXC@@H=C/,0@IWC^E@@ C8K@@ /,0@J>9?@H=D/,0@IYCCE@@^C8K@@#OA
)@@G@@/,0@J>9?@H=F/,0@IYC^E@@^C8K@@A/,0@JX/,0@H\R;@H<*'=@@[=R@KH<_R@)H=@R@0H=[OB
)@@G@@R]0H=] 4@H=#*^@H=#'=@@[N/K@@9U@@@@@@9*)H=H[[@H=J @@@@@R#)@@HR#K@@GR#0@@HOC
)@@G@@;C0@@Y @@@@K%80@@0C9@@@[ @@@@J @@@@G;?@@@A%8@@@ /K@@;//K@@/G(@@@@G/K@@/DOD
)@@G@@P;@@@0/[@@/]T80@@E/K@@/B0@@@@G/K@@/K!8@@@C/K@@/K;*0@@#O#0@@G/K@@;7R#K@@IOE
)@@G@@R#)H=O/K@@;7R#@@@J9?)H=HC[@H=J/K@K;:*@@@@@/K@@/OR#@H=P'=@@@IR;@@@:A#@@@@OF
)@@G@@ @@@@G/K@K;:A])H=QA#@H=RR;@@@.A3@HA7C/@HA7/,0@HSC8@H=VC8K@@I/,0@I(R#@H=QOG
)@@G@@/,0@I9C8@H=YC8K@@E/,0@I(C@@H=RC8K@@G/,0@JX/,0@H\R#@H=&'=@@@I'=@@@)A]0H=QOH
)@@G@@C/@HA7/,0@HSC8@H=)C8K@@L/,0@I(9?E@@@/,0@IYC8@H=<C8K@@E/,0@I(R;K@@]R7E@@#OI
)@@G@@/,0@JXC8@H=>C8K@@A/,0@I(R;K@@]R3E@@#/,0@JX/,0@H\R#@H=&'=@@@IR]0H=QAA)H=TOJ
)@@G@@R;@H=S'=@@[Q'=@@@)&'K@@[(^D@@]/KF@@@C^D@@#G@@@@DC@G@@@:^D@@]/K@@"@CCD@@]OK
)@@G@@HCD@@#HCD@@AG@@@@D&;@@@[N#0@@GR@K@@D&8K@@[O8K@@ER@)@@[C@@@[J:@@@@]/K@@.6OL
)@@G@@C@@H=$+@]@@@/@K@.4N^M@@@N#K@@[N#)@@]M@M)@@R@0@@DOC9@@]PC9@@AP80@@[&80__"OM
)@@G@@C@@@[IH@@@@D&;@@@@NCT@@#2^#)@@'=@@@)C@@@[HH@@@@D[^#@@[/K@@.VO^+@@@/K@@.VON
)@@G@@C@@@@[H@@@@D[^D@@#C@@@@]H@@@@[[^D@@]N@K@@G @@@@GR80@@GM@N)@@(CD@@#/KF@@@OO
)@@G@@NF9@@#8N0@"^R@K@@DOCT@@]PCT@@APCT@@#&8K@@[C@@H=*+@[@@@/@K@"O @[)@@C8@@@[OP
)@@G@@G^D@@][^D@@]CCD@@#H8@@@[[CD@@#8N0@"DR@K@@DO^T@@#C^D@@][@[@@@/KF@@@A]E@@COQ
)@@G@@A]U@@DA]'@@E9*E@@F9*%@@H9(E@@J^@U@@LR#E@@A%8@@@[/,@@_D9?%@@#R]KH:VO]KH:UOR
)@@G@@9*(@@@R#KH:UO;K@@]:8K@W@/,K@"4A#KH:UR#0H:K(@@@@J/,K@_0O;0@@]:80@I@ @@@@JOS
)@@G@@A#0H:K/K@[[10@@H:Z'=@@@A*4@H:Z/K@@_ R#0H:VAB0H:)R#0H:-O;0@[@A#0H:-R;@H:WOT
)@@G@@'=@@@[R#0H:S:@0H:VR#0H:TA#0H:V @@@@H/KD@@@R#@@@ER')H:W/,0@/!/KC@@@'=@@@MOU
)@@G@@9*@H&0 @@H:< @@H&OR#E@@#A#@H&3/,K@_WR#@H@/O;@@@[A#@H:VA#@H:SO;@@W@A#@H:TOV
)@@G@@O;@@W@A#@H@/'=@@@<R;@@@[A#E@@A/KC@@@R;@H=?'=@@[G*@@H=3/KD@@@R;@H&P'=@@@JOW
)@@G@@1@@@@G/KD@@@R;@H&U'=@@@J1@@@@G/KD@@@R')H&U/,0@/SR;@H&('=@@@#(4@H&?/KD@@@OX
)@@G@@R')H&(/,0@/!R#KH&2O;K@@]A#KH&2R]@H:IO]@H:JR#0H:R9**@@@O;0@@)A#0H:RR#0H:JOY
)@@G@@O;0@@]:80@]G/,@[@@A#0H:J @@@@J/KD@@@0@@H:O'=@@@A*4@H:O/K@[@LR#0H:IAB0H:POZ
)@@G@@R#0H:QO;0@@ A#0H:QR;@H:L'=@@@[R;0H&6:@0H:IR;0H(]A#0H:I @@@@J/KC@@@R')H:WPA
)@@G@@/,0@/!A]E@@CA]U@@DA]'@@E9*E@@F9*%@@H9(E@@J^@U@@L(@E@@A/K@[#; @E@@ R#@H&3PB
)@@G@@P#E@@#/@@[@>/8@[[9R#@H&4P#E@@#/@@[@>//@[[9R#%@@V(@@@@I/K@[@6:@%@@#/K@[[1PC
)@@G@@9?%@@[O;0@@]:80@I@/K@[@6O#)@@J9!I@@@%[E@@#/K@[@6[[U@@^9(E@@VA#'@@]/K@[[1PD
)@@G@@R#)H:5R#0H&2/,K[^<R#K@@GA#E@@Z;/@H:8R3!@@[:8)@@_/,K[]J0@H@@[/K@[]AC5X@@[PE
)@@G@@%@U@@YG9K@@[[5X@@[R3!@@[AB)H:(AB)H:*R#0H:9')@H:(;*0@@[R;)@@[;G)@@[')@H:*PF
)@@G@@A#0H:9 4@H:8*^@H:8'=@@[NR3!@@[A#%@@+T8)@I@O#)H:0A#%@@XR;0@I@/,K[^<%@%@@#PG
)@@G@@/K@[[9A#'@@^9*%@@VC[E@@+[[E@@BC[E@@X[[E@@[P#E@@XA#E@@]C[E@@Z:[E@@Y/K@[[1PH
)@@G@@(@E@@Y/K@[[0;/@H:8R#'@@YR7Z@@[P;K@@[A7Z@@[ 4@H:8*^@H:8'=@@[N[[E@@YR]E@@CPI
)@@G@@R]U@@DR]'@@E9?E@@F9?%@@H9!E@@JN@U@@L/KF@@@R;)@@[A#%@@ R#'@@Z:@'@@Y/K@[[1PJ
)@@G@@;/@H:8C5J@@[H9@@@[[5J@@[ 4@H:8*^@H:8'=@@[N/K@[[1 4@H:8*^@H:8'=@@[N;/IH?-PK
)@@G@@ 4IH?-*^IH?-'=@@[N;/@H:8/K@[[[R#)H:90@@@@I/K@[]Q @@@@G)@)H! A#0H:9/K@[]ZPL
)@@G@@;S)H:9R#@@@JO;@@@[AB0H:*!8@@@=/K@[#-)@)H!A')@H:*A#0H:9RB/H:/*4J@@[/K@[]QPM
)@@G@@C9@@@_[1J@@[C9@@@[:DGH://K@[#<A#WH:/A3H@@[C9@@@)[5H@@[;/GH?- 4@H:8*^@H:8PN
)@@G@@'=@@[NT8@@I@O#@H:0ABE@@TR#H@@[A#E@@U WE@@UR;@@K@AFE@@SR#@@@EO;@@@P/K@[#TPO
)@@G@@A]@H!YA]KH!ZA])H!)A]0H!-9*@H!Q9*)H!S9(@H!URBW@@^A#KH!OR#W@@ A#KH!PC/@H!IPP
)@@G@@/,0@HSC@@H!PC8K@@E/,0@JXC/@@@]/,0@IEC@@H!OC8K@@C/,0@JX/,0@H\R;@H!B'=@@[=PQ
)@@G@@R]@H!YR]KH!ZR])H!)R]0H!-9?@H!Q9?)H!S9!@H!U'=@@@#;/@H:8R3H@@[ 4GH?-*^GH?-PR
)@@G@@'=@@[N 4H@@[/KD@@@ @@H:9/K@[]JR#)@@GT8)@I@O#)H:0AB%@@TR;)@C@AF%@@SR#\@@[PS
)@@G@@A#%@@U WE@@UR;)@@)A7!@@[A3H@@[ABWH:/;/GH?- 4@H:8*^@H:8'=@@[NR#@@@EO;@@@PPT
)@@G@@'=@@@#(4E@@S/K@[]2O')@@P/,0@/!;/@H?)(@@H:7/,@[^H 4@H?)*^@H?)'=@@[NR;@@@]PU
)@@G@@A#E@@A'=@@[L @E@@Y @E@@V9!@H:%9(E@@P9!@H:?9(E@@R9!@H:,9(E@@T/K@[@WA])H:7PV
)@@G@@/,K@_=/,K@_%R#@H@/O;@@@[A#@H:5AB@H:5O#@H&2A#@H:0O;@B8@A#@H@/'=@@@<R#KH&2PW
)@@G@@AFKH:5R;@H:1'=@@@#*4@H:4/K@[^- C@H:5/KC@@@R')H:1/,0@/! @@@@K;C0@@[P;0@@[PX
)@@G@@ @@@@HO#K@@KO#K@@J;CK@@[R#@@@H;*@@@[O#@@@I:[@@@J/K@[^'C[W@@@H[U@@#/[K[^'PY
)@@G@@/8@[^6C[@@@HR;K@@[/K@[^$R#0@@HR;K@@@P;0@@[/K@[^$9??@@@/KD@@@A]E@@CA]U@@DPZ
)@@G@@A]'@@E9*E@@F9*%@@H9(E@@J^@U@@L(@E@@A/K@[AZR#U@@A:8K@@[/K@[ G:8K@@]/K@[ 'QA
)@@G@@ @E@@A/K@[[1R#)H!+/,K@_0*@@H:J/,@[@@(@@H:U/K@[ W @@@@JR#KH:VO#KH:U9*!@@@QB
)@@G@@R#KH:UO;K@@]A#KH:U%8K@W@/K@[ N/,K@"40@@H:Z'=@@@A*4@H:Z/K@@_ 0@@H:O'=@@@AQC
)@@G@@*4@H:O/K@[@LR;KH&\ABKH:P @@H:QR#E@@#A#@H&4R;@H:L'=@@@#*4@H:O/K@[ 8 @@H:UQD
)@@G@@ @@H:KR;K@D@A#KH:- @@H&2 @@H:JR#KH!<A#KH:RR;K@@;A#KH:Q/K@[[1R')H:L/,0@/!QE
)@@G@@ @@H:7;/@H:8R#U@@YR7!@@[P;)@@[A7!@@[R;)@C@AF%@@SR#0H!=CDJH:/%9@@@[/K@[APQF
)@@G@@RB\H:/*4I@@[/K@[APR#Y@@[A#U@@U WE@@UR#@@@J&;@@@@T8@@I@O#@H:0ABE@@TR#@@@EQG
)@@G@@O;@@@P'=@@@# CJH://:0[A# @@H:9R;)@@<R;KH:'A#YH:/8#)[AT 4@H:8*^@H:8'=@@[NQH
)@@G@@ @E@@A(@@H:</K@[[1A])H=6R;@H>('=@@@JR;@H>?'=@@@JR')H>?0@@@@G/,0@/S*@@H&OQI
)@@G@@/K@[A2R;@H>1'=@@@JR;@H>5'=@@@JR')H>50@@@@G/,0@/SR;@H>8'=@@@JR#KH:=P;K@@[QJ
)@@G@@R#)H:<R')H=7R;@H>.'=@@@#R#@H@/O;@@@[AB@H&LO;@@V"A#@H&NO;@@@]A#@H@/'=@@@<QK
)@@G@@R;@H&H'=@@@#R#@H&MO;@@[@A#@H&MR#0H&L&;0@@]9!J@@@(@@H:=/K@[BO?[@@@I/K@[BOQL
)@@G@@A#)H=' @@H=;/,0@"TO;)@@[8#K[BI @@H:=9(@H='/,0@"T:[@H&C/K@[BV$#0H&N/K@[BDQM
)@@G@@/K@[B]/,0[^/R;@H=('=@@@JR;@H=('=@@@JR])H=6/K@[[1A]'@@)R]'@@^A]'@@-/,0[@NQN
)@@G@@*@E@@ /K@[B79?'@@[O#0@@KC[E@@-[[E@@^[[J@@[R#'@@BC9@@@[;/@H:8[DJH:/9?'@@IQO
)@@G@@R]'@@) 4@H:8*^@H:8'=@@[N/KF@@@R#@H&Y'=@@@I'=@@@)A#E@@FR#E@@#(@@H:<A#@H:<QP
)@@G@@R#@H:=O;@@@[A#@H:=R#E@@F/KF@@@@@@@@@[C]@C@H!=G_1@@@@D,)O@@@@[:8[C#I^<H!>QQ
)@@G@@@@@@CH)O@@@@[LZ[C#H/YH!>@@@@B1)O@@@@[$0[C#IGJH!>@@@@AR)O@@@@]O[[C#I#HH!>QR
)@@G@@@@@@#E)O@@@@["O[C#IK;H!>@@@@@>)O@@@@[NP[C#I@\H!>@@@@@^)O@@@@[C#[C#@@@@@@QS
)@@G@@@@@@@]'^@@KD'^@@KR[R#@@#'^@@KD'^@@KR[U,@@['^@@KD'^@@KR[M-@@A'^@@KD'^@@KRQT
)@@G@@[KE@@A'^@@KD'^@@KR[C#@@['^@@KD'^@@KR[H-@@['^@@KD'^@@KR[L.@@['^@@KD'^@@KRQU
)@@G@@[OZ@@['^@@KD'^@@KR[PG@@['^@@KD'^@@KR[Q(@@['^@@KD'^@@KR[UT@@['^@@KD'^@@KRQV
)@@G@@[H1@@]'^@@KD'^@@KR[K?@@A'^@@KD'^@@KR[K.@@A'^@@KD'^@@KR[K,@@]'^@@KD'^@@KRQW
)@@G@@[I^@@]'^@@KD'^@@KR[+2@@#'^@@KD'^@@KR['>@@ '^@@KD'^@@KR[+[@@#'^@@KD'^@@KRQX
)@@G@@[EI@@]'^@@KD'^@@KR[C#@@B'^@@KD'^@@KR[>^@@['^@@KD'^@@KR[*U@@['^@@KD'^@@KRQY
)@@G@@[$/@@['^@@KD'^@@KR[&^@@['^@@KD'^@@KR[>1@@['^@@KD'^@@KR[$+@@['^@@KD'^@@KRQZ
)@@G@@[&L@@['^@@KD'^@@KR[D.@@]'^@@KD'^@@KR[G'@@]'^@@KD'^@@KR[H4@@A'^@@KD'^@@KRRA
)@@G@@[QD@@['^@@KD'^@@KR[C#@@A'^@@KD'^@@KR[9,@@^'^@@KD'^@@KR[C#@@ '^@@KD'^@@KRRB
)@@G@@]A_@@^'^@@KD'^@@KR[C#@@]'^@@KD'^@@KR[9%@@^'^@@KD'^@@KR[!.@@ '^@@KD'^@@KRRC
)@@G@@[,]@@ '^@@KD'^@@KR[,B@@ '^@@KD'^@@KR[,G@@ '^@@KD'^@@KR[,L@@ '^@@KD'^@@KRRD
)@@G@@[,Q@@ '^@@KD'^@@KR[,V@@ '^@@KD'^@@KR[,)@@ '^@@KD'^@@KR[,>@@ '^@@KD'^@@KRRE
)@@G@@[,%@@ '^@@KD'^@@KR[,\@@ '^@@KD'^@@KR[,4@@ '^@@KD'^@@KR[,9@@ '^@@KD'^@@KRRF
)@@G@@[,"@@ '^@@KD'^@@KR[\#@@ '^@@KD'^@@KR[\C@@ '^@@KD'^@@KR[\H@@ '^@@KD'^@@KRRG
)@@G@@[\M@@ '^@@KD'^@@KR[\R@@ '^@@KD'^@@KR[\W@@ '^@@KD'^@@KR[\-@@ '^@@KD'^@@KRRH
)@@G@@[\&@@ '^@@KD'^@@KR[\:@@ '^@@KD'^@@KR[\0@@ '^@@KD'^@@KR[\5@@ '^@@KD'^@@KRRI
)@@G@@[\'@@ '^@@KD'^@@KR[\_@@ '^@@KD'^@@KR[0^@@ '^@@KD'^@@KR[0D@@ '^@@KD'^@@KRRJ
)@@G@@[0I@@ '^@@KD'^@@KR[0N@@ '^@@KD'^@@KR[0S@@ '^@@KD'^@@KR[0X@@ '^@@KD'^@@KRRK
)@@G@@[0+@@ '^@@KD'^@@KR[0$@@ '^@@KD'^@@KR[0?@@ '^@@KD'^@@KR[01@@ '^@@KD'^@@KRRL
)@@G@@[06@@ '^@@KD'^@@KR[0;@@ '^@@KD'^@@KR[1@@@ '^@@KD'^@@KR[1 @@ '^@@KD'^@@KRRM
)@@G@@[1E@@ '^@@KD'^@@KR[1J@@ '^@@KD'^@@KR[1O@@ '^@@KD'^@@KR[1T@@ '^@@KD'^@@KRRN
)@@G@@[1Y@@ '^@@KD'^@@KR[1<@@ '^@@KD'^@@KR[1*@@ '^@@KD'^@@KR[1!@@ '^@@KD'^@@KRRO
)@@G@@[12@@ '^@@KD'^@@KR[17@@ '^@@KD'^@@KR[1/@@ '^@@KD'^@@KR[2[@@ '^@@KD'^@@KRRP
)@@G@@[2A@@ '^@@KD'^@@KR[2F@@ '^@@KD'^@@KR[2K@@ '^@@KD'^@@KR[2P@@ '^@@KD'^@@KRRQ
)@@G@@[2U@@ '^@@KD'^@@KR[2Z@@ '^@@KD'^@@KR[2=@@ '^@@KD'^@@KR[2(@@ '^@@KD'^@@KRRR
)@@G@@[2,@@ '^@@KD'^@@KR[23@@ '^@@KD'^@@KR[28@@ '^@@KD'^@@KR[2.@@ '^@@KD'^@@KRRS
)@@G@@[3]@@ '^@@KD'^@@KR[3B@@ '^@@KD'^@@KR[3G@@ '^@@KD'^@@KR[3L@@ '^@@KD'^@@KRRT
)@@G@@[3Q@@ '^@@KD'^@@KR[3V@@ '^@@KD'^@@KR[3)@@ '^@@KD'^@@KR[3>@@ '^@@KD'^@@KRRU
)@@G@@[3%@@ '^@@KD'^@@KR[3\@@ '^@@KD'^@@KR[34@@ '^@@KD'^@@KR[39@@ '^@@KD'^@@KRRV
)@@G@@[3"@@ '^@@KD'^@@KR[4#@@ '^@@KD'^@@KR[4C@@ '^@@KD'^@@KR[4H@@ '^@@KD'^@@KRRW
)@@G@@[4M@@ '^@@KD'^@@KR[4R@@ '^@@KD'^@@KR[4W@@ '^@@KD'^@@KR[4-@@ '^@@KD'^@@KRRX
)@@G@@[5A@@ '^@@KD'^@@KR]E2@@^'^@@KD'^@@KR[9[@@^'^@@KD'^@@KR[8_@@^'^@@KD'^@@KRRY
)@@G@@[DH@@^'^@@KD'^@@KR[H1@@^'^@@KD'^@@KR[H7@@^'^@@KD'^@@KR[9Z@@^'^@@KD'^@@KRRZ
)@@G@@[CJ@@['^@@KD'^@@KR]CV@@^'^@@KD'^@@KR]F$@@^'^@@KD'^@@KR]C?@@^'^@@KD'^@@KRSA
)@@G@@]A-@@^'^@@KD'^@@KR]DW@@^'^@@KD'^@@KR[CA@@^'^@@KD'^@@KR[CR@@^'^@@KD'^@@KRSB
)@@G@@[CV@@^'^@@KD'^@@KR]B-@@^'^@@KD'^@@KR[9O@@^'^@@KD'^@@KR]B$@@^'^@@KD'^@@KRSC
)@@G@@]B/@@^'^@@KD'^@@KR[CK@@['^@@KD'^@@KR[C#@@#'^@@KD'^@@KR]MR@@^'^@@KD'^@@KRSD
)@@G@@[DP@@['^@@KD'^@@KR[-O@@['^@@KD'^@@KR[PR@@#'^@@KD'^@@KR[QI@@#'^@@KD'^@@KRSE
)@@G@@[C#@@#'^@@KD'^@@KR[Q%@@#'^@@KD'^@@KR[QY@@#'^@@KD'^@@KR[LN@@A@@@@@@@USE  SF
)@@G@@@@@@@@@@@@@@,     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OLDSCHEMA   NEWSCHEMA   _____"@@@@@@SI
)@@G@@@O8HAC@@@@@@NO SCHEMA FILE SPECIFIED[D@@@@ C@@@@AC@@@@BC@@@@CC@@@@DD@@@@SJ
)@@G@@FC@@@@GC@@@@HC@@@@@@@IK;@@@IK;@@@]O[@@@]O[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SL
)@@G@@@@@@@@READY.(FOR RESTORE SUBCOMMAND)@@@@@@@Q/HACILLEGAL RECORD CODE.    SM
)@@G@@@@@@@@@R.HAC@@@@@@@W7HACPROCESSING KEY FILE SORT@@@@@[INVALID UNLOAD SUBSN
)@@G@@COMMAND.    READY.(FOR UNLOAD SUBCOMMAND) FILE CODE MUST BE 1 THRU 9    SO
)@@G@@@@@@@@@@@@@@ERROR: LAST SUBCOMMAND CAUSED THAT AT LEAST     ONE RECORD TSP
)@@G@@O BE UNLOADED VIA MORE THAN ONE SET SET NAME MISSING  @@@@@@[K@@@@#K@@@@SQ
)@@G@@ K@@@@AK@@@@BK@@@@ DOES NOT ASSOCIATE WITH       IS NOT PATICIPATING IN SR
)@@G@@THIS REORGANIZATION.    @@@@@@@[@HAD@@@@@@@@@@@@@@@@@@NOT SPECIFIED IN TSS
)@@G@@HE AREA COMMAND   NOT SPECIFIED IN THE RECORD COMMAND @@@@@@@@@@@[@@@@@@ST
)@@G@@READY. (FOR RELOAD SUBCOMMAND)INVALID RELOAD SUBCOMMAND.    INVALID RESTSU
)@@G@@ORE SUBCOMMAND.   @@@@@@WARNING:PAGE RANGE ENTERED FOR A CALC RECORD - ISV
)@@G@@GNORED@[DH#(PAGE RANGE SUBCOMMAND FORMAT ERROR - IGNORED    @[CH#3PAGE RSW
)@@G@@ANGE INVALID - IGNORED  @[ H#/DUPLICATE PAGE RANGE - IGNORED@[ H^]FROM SSX
)@@G@@UBCOMMAND FORMAT ERROR - IGNORED    @[BH^CDULICATE FROM SUBCOMMAND - IGNSY
)@@G@@ORED  @[AH^KINVALID % VALUE - IGNORED     @[ H^R CAN BE PATCHED ONLY - ISZ
)@@G@@GNORED@@@@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@* COMMAND=  * ELAPSED=  TA
)@@G@@ TO   * CPU=       MS,  I/O COUNT=  @@@@@@      @@@@@@@@@@@@@@@@@@[K@@@@TB
)@@G@@#K@@@@@&IHA.@@@@@@[[@@@@@@@@@@@@@@@@@@@@@@-BELL LABS D.B. REORGANIZER:  TC
)@@G@@6,0   READY.REORG COMMAND SEQUENCE ERROR  TIME  @@@@)1RECORD@@[@N@AREA  TD
)@@G@@@@]@NRAREAP @@]@NRSCAN  @@#@WXUNLOAD@@#@W+RESTOR@@^@P.DELETE@@ @PGRELOADTE
)@@G@@@@A@Q"PATCH @@B@PYDEBUG @@@@O3END   @[<@O.@@@@@GILLEGAL REORGANIZATION CTF
)@@G@@OMMAND@@@@@@@@@@@@]C@@@@^C@@@@]K@@@@^K@@@@@[IHA.@@9H G@@[@>3DV@@LN@@[H@HTG
)@@G@@@@@USE@@[HAD@][HBL@@]HBR@@[@@[      @[ HBM@[^H@\AREAP CK@@@@@@[H[@IC@@@@TH
)@@G@@JC@@@@LC@@@@#C@@@@CC@@@@EC@@@@@[ HB0END    %END%@[#@PD#K@@@@ K@@@@AK@@@@TI
)@@G@@[K@@@@DK@@@@EK@@@@KK@@@@^K@@@@FK@@@@GK@@@@MK@@@@@[ H[MENDR  TO    @[ H#<TJ
)@@G@@@[^H[T@[ H#T%     FROM  IN    @[ H#YKC@@@@@@]H Q@@[HA.@@[H G            TK
)@@G@@RECORD-NAME:@@AREA-NAME:@[ H[:ENDU  VIA   @[ H[&@#^H[-SORT  @[ H]S@[#H]\TL
)@@G@@@[CH]Z@[CH]$]C@@@@^C@@@@MC@@@@LK@@@@@@SET.@@@SETOFF   @@SH^=@#IHA.@@TH GTM
)@@G@@K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @=5HDH@@@@@@@@D@@DTO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&CHD_@@@@@@[[@@@@@@@@@@@@@@@@@@@@@@@@@@@@TP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@0HD_@@@@@@@@@@@@@@@@@@TQ
)@@G@@@@@@@@K@[@(6@@THD)@@@@NO@@@@@COMMAND@@@@IN@@@PROGRESS,@@@G8@@@CORE@@@@ELTR
)@@G@@APSED=@@CPU=@@@MS,@@I/O=@@@@SCANNING@AREA:@PAGE:NUMBER@@@@OF@@@@@RECORDSTS
)@@G@@@@@RESTORED:@@@@DELETED:@@@RELOADED:@@PTRS@@@@PATCHED(@@@@PG@[CHD_@@@@@@TT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@XXXXXXC1    C2    C3    C4    C5    C6    C7    TU
)@@G@@C8    C9    C10   C11   C12   C13   C14   C15   C16   C17   C18   Z1    TV
)@@G@@Z2    C$FILE                  @@@@@@@@@@@@            @@@@@@@@@@@@@@@@@@TW
)@@G@@@@@@@@C$FILE      @@@@@@@@@@@@@@@@@@@@@@@@@ASG,AX  C$FILE. .      @ASG,UTX
)@@G@@P  C$FILE.,///300 .     *** ERROR - INVALID SEGMENT NUMBER PASSED TO CF$TY
)@@G@@AM ****** ERROR - C$FILE IS NOT A PROGRAM FILE ***    *** ERROR - INVALITZ
)@@G@@D FUNCTION CODE PASSED TO CF$AM *** @@@@@@@@@H@"@@@H@/@@^HFV@@ HFZ@[DHF=UA
)@@G@@@[CHF!@[DHF5      @@[@@@:Z@@,A* DEBUG READY *   * READY *   CONTINGENCY UB
)@@G@@AT LOCATION :     ILLEGAL OPERATION*GUARD MODE* FLOAT PT OVERFLOW*FLOAT UC
)@@G@@PT UNDERFLOW*     DIVIDE OVERFLOW*  ABORT$ OR EABT$*  II OR RBK KEYIN*  UD
)@@G@@ERR$ MODE*  TRAP* @*IHG:@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HGNUE
)@@G@@@@@HGQ@@@HGS@@@HGV@@@HGZ@@@@@@@@@HG+@@@HG>@@@@@@@@@HG*@@@@@@@@@HG%@@@@,\UF
)@@G@@HELP  @@@@,8PRINTA@@@@\MPRINTN@@@@\)DUMPA @@@@\,DUMPN @@@@\"BREAK @@@@0BUG
)@@G@@CBREAK@@@@0QCREGS @@@@1CPATCH @@@@2^EXIT  @@@@1RPATCHR@@@@2DGOTO  @@@@\GUH
)@@G@@SNOOPY@@@@\ TRAP  @@@@@I  THIS DEBUGGER SUPPORTS THE FOLLOWING COMMANDS:UI
)@@G@@                 1) HELP - DESCRIBES THE AVAILABLE                      UJ
)@@G@@               COMMANDS, AND THEIR FORMAT.                       2) PRINUK
)@@G@@TA ADDR1 ADDR2 ------- ADDRN                                  - PRINTS TUL
)@@G@@HE DATA BETWEEN A PAIR                                  OF ADDRESSES IN UM
)@@G@@FIELD DATA                   3) PRINTN ADDR N                           UN
)@@G@@                          - PRINTS N WORDS STARTING AT ADDR             UO
)@@G@@                    IN FIELD DATA                                4) DUMPUP
)@@G@@A  ADDR1 ADDR2 ADDR3 ------ ADDRN                             - DUMPS THUQ
)@@G@@E DATA BETWEEN A PAIR                               OF ADDRESSES IN OCTAUR
)@@G@@L, 4 WORDS                              TO A LINE                       US
)@@G@@                 5) DUMPN  ADDR N                                       UT
)@@G@@              - DUMPS N WORDS OF DATA STARTING                          UU
)@@G@@        AT ADDR IN OCTAL  4 WORDS                                   TO AUV
)@@G@@ LINE                                    6) BREAK  ADDR1 ADDR2 ADDR3 ---UW
)@@G@@--- ADDRN                             - SETS BREAK POINTS A ADDR1 THRU AUX
)@@G@@DDR N            7) CBREAK ADDR1 ADDR2 ----  ADDRN                      UY
)@@G@@              - CLEARS BREAK PTS AT ADDR1 THRU N                        UZ
)@@G@@        IF NO ADDRS ARE SPECIFIED, ALL BRK                          POINVA
)@@G@@TS ARE CLEARED                           8) CREGS  RN1 RN2 ---- RN2 OR AVB
)@@G@@LLA OR ALLX OR ALLR                   - DUMPS THE REGISTERS SPECIFIED   VC
)@@G@@                                BY RNI OR ALL A REGS IF ALLA            VD
)@@G@@                           OR ALL X REGS IF ALLX                        VE
)@@G@@               OR ALL R REGS IF ALLR                 9) PATCH  ADDR1 CONVF
)@@G@@T1 ADDR2 CONT2 ---- ADDRN CONTN                     REPLACES THE CONTENTVG
)@@G@@S OF ADDR1                                  THRU ADDRN WITH THE DATA    VH
)@@G@@                                CONT1 THRU CONTN RESPECTIVELY           VI
)@@G@@     10) EXIT - RETURN CONTROL TO NEXT INSTRUCTION                      VJ
)@@G@@                                                    11)  GOTO  ADDR     VK
)@@G@@                                            - PASS CONTROL TO THE LOCATIVL
)@@G@@ON                                    SPECIFIED BY ADDR                 VM
)@@G@@            OBTAINED FROM THE @MAP LISTING                              VN
)@@G@@ALL ADDRESSES MUST BE 6 DIGIT OCTAL NUMBERS- LJSF          ALL ADDRESSESVO
)@@G@@ MUST BE 12 DIGIT OCTAL NUMBERS            ** NOTE **                   VP
)@@G@@                                                                        VQ
)@@G@@                       ALL COUNTS MUST BE DECIMAL INTEGERS LESS THAN    VR
)@@G@@                999999                                                 AVS
)@@G@@T LEAST ONE BLANK MUST SEPARATE EACH ELEMENT                    ON A COMVT
)@@G@@MAND LINE                                 /K@@@@'^@@52            * NO BVU
)@@G@@REAK POINT SET AT LOCATION:   BREAK POINT AT :  BREAK POINT SET AT :    VV
)@@G@@      REGISTER * NOT DEFINED* A0 HS A1 HSAA2 HSBA3 HSCA4 HSDA5 HSEA6 HSFVW
)@@G@@A7 HSGA8 HSHA9 HSIA10HSJA11HSKA12HSLA13HSMA14HSNA15HSOX1 HSPX2 HSQX3 HSRVX
)@@G@@X4 HSSX5 HSTX6 HSUX7 HSVX8 HSWX9 HSXX10HSYX11HSZR1 HS)R2 HS-R3 HS+R4 HS<VY
)@@G@@R5 HS=R6 HS>R7 HS&R8 HS$R9 HS*R10HS(R11HS%R12HS:R13HS?R14HS!R15HS,* DEBUVZ
)@@G@@G EXIT *     ?? WHAT ?? @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[HT&WA
)@@G@@@[#HGD@[IHG:@[]HGG@76HG:@@]HKB@]E@@@@@]HI>ALL   @@@ALL@@@   VALUE:@[^HG:WB
)@@G@@ALLA  ALLX  ALLR  @@[HS\@@[HS_@@[HTE      OLD/NEW     VALUESARE:  @[CHG:WC
)@@G@@@[#HTT@[GHG:@[EHG:@@^HT&@@^@@^@@[HT&@@#HT&@@#@@]@[ HG:@@[@@[JJJJJJ@[]HTWWD
)@@G@@@@[@@@@ASG,A@@@C@C@@@K@K@[@C@D@[@K@L@[IH<1DB$AMPF     @&IH<1@@@@@@[[@@@@WE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@D@@D@@[H<=@@[@@[@FUNC=WF
)@@G@@,STPG=@@@@@,PGCNT=@@@@,BUFADD=@@@@@@@@@@@@@@@@@@BAD OCTAL STRING INPUT  WG
)@@G@@      @[^H=K@@@@@@@@@@@@IO PKT8@A@@@@@@@@@FAC REJECTED:       STATUS:   WH
)@@G@@I/O ERROR - FILE     STATUS:    FNC:@[IHA.@@C@@@)@@@@@@FREE K$FILE .    WI
)@@G@@K$FILE      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WL
)@@G@@@@UH>(@@(H&H@]RH:I)@(H>@)@EH&#)^SH&6)%VH!>@@@___@@@___@@@___@@@___@@@___WM
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___WN
)@@G@@@@@___@@@___@@@___@@@___@FREE,A K$FILE .  @ASG,CP K$FILE(+1),///10000 . WO
)@@G@@@USE K$FILET,K$FILE .   @ASG,A K$FILET .  @USE K$FILE,K$FILE(+1) .      WP
)@@G@@K$FILET     @@@@@@@K@@@@@@EH&#@@@@@@K$FILET     @@@@@@@K@@@@@W@@@@@@@@E@WQ
)@@G@@@@@@@@@@@@@@@ASG,UP    K$FILE,///1000  .  @ASG,A     K$FILE .     @[BH&ZWR
)@@G@@KEY FILE WRITE ERROR. OLD DBP NOT FOUND.  @@@@@@@@@@@@@@@@@@K$FILE      WS
)@@G@@@@@@@@@K@@@@@@WH&\@@@@@@K$FILE            @@@@@@@@@@@@@@@@@@@@@@@@@@@H&6WT
)@@G@@@@@@@@@@@@@@K$FILE      @@@@@@@C@@@@@]GH&6@@@@@;@_@@E@@@@@@@@@@@@@@@@@@@WU
)@@G@@@@@@@@K$FILE      @@@@@@@C@@@@@W@@@@@@@@D@@@@@I@@@@@@@@@@@@@@@@@@@@@@@@@WV
)@@G@@@@@@@@;@0@@[;)0@@[K$FILE      @@@@@@@K@@@@@I@@@@@@@@@@@@@@@@K$FILE      WW
)@@G@@@@@@@@@K@@@@@@@@@@@@@@[@@@@@@@@\[@@@@@@@@@@@@@@@@_@@@@@@@H:'@@@H:'@@@H:'WX
)@@G@@@@@H:'@@@H:'@@@H:'@@@H:'@@@H:'@@@H:'@@@H:'@@@H:'@@@H:'@@@H:'@@@H:'@@@H:'WY
)@@G@@@@@H:'@@@H:'@@@H:'@@@H:'@@@H:'@@@H:'@@@H:'@@@H:'@@@H:'@@@H:'@@@H:'@@@H:'WZ
)@@G@@@@@H:'@@@H:'@@@H:'@@@H:'@@@H:'@@@H:'@@@H:'@@@H:'@@@H:'@\@@@@@\@@@@@\@@@@XA
)@@G@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@XB
)@@G@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@XC
)@@G@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@@\@@@@)@@@@@K@@@@@XD
)@@G@@@[^H!EPFILE       @@@@@@@@@@@@@@@@@@@@@@@@@&^H!E@@@@@@[[@@@@@@@@@@@@@@@@XE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XF
)@@G@@@@@@@@@@@@@@@@@@@@______@_@@E@__"@@<@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XG
)@@G@@MAIN        @@)@@^@@@@D,CONF        @@+@@^@@@@CHDELETE      @@=@@^@@@@B1XH
)@@G@@SCAN        @@&@@^@@@@ARSORT        @@*@@^@@@@#ERELOAD      @@%@@^@@@@@>XI
)@@G@@PATCH       @@?@@^@@@@@^DUMMY       @@,@@^@@@@@]@@@ @ @@@@D,@@@]@ @@@@CHXJ
)@@G@@@@@]@ @@@@B1@@@]@ @@@@AR@@@]@ @@@@#E@@@]@ @@@@@>@@@]@ @@@@@^@@@]@ @@@@@]XK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ART         CY-^NGATMRG XL
)@@G@@      GS+[ DBCONSG      G<K[ DBKEYS       I)$[#DCALC        FP D FCF$AM XM
)@@G@@      CY\^NGCHKPT       CY'^NGCLSEG       D5Y^NGCOMMON      CZ]^NGCOMPACXN
)@@G@@T     CZA^NGCONF-1      CZR^NGCONF-2      CZZ^NGCONF-3      D5N^NGDBP$APXO
)@@G@@S     CZ4^NGDB$AM       CZ1^NGDEBUG       C)[^NGDECALC      C)B^NGDF$AMRXP
)@@G@@      C)K^NGDF$AMW      B+W ^GDLTPGE      C)*^NGDUMMY       C):^NGEDIT$ XQ
)@@G@@      D0)]FEEDIT$T      HJ\GC^EQUATE      F%>^OGERU$        I9J#XGF$ASG XR
)@@G@@      C-B^NGIDL$        E17EDBIIKREORG    C-6^NGINFOR$      DQD^KBINPUT XS
)@@G@@      C-;^NGKF$AM       B?5 CGKPARCD      IXR[#DKRFIND      IY [#DMAINREXT
)@@G@@ORG   C<0^NGMERGE       DBF^UGPACKPG      C<.^NGPARSE       C=@^NGPATCH XU
)@@G@@      C=B^NGPCORE       IZG[#DPRATTS      IZ*[#DRDFM$       J#K[#DREBD$ XV
)@@G@@      I)@[#DRELERR      C>D^NGRELOAD      C>%^NGREORDLT     C>,^NGRESTORXW
)@@G@@E     C>6^NGRSTD$       I)Q[#DSCAN        C&]^NGSF$AM       C&H^NGSORT  XX
)@@G@@      C&O^NGSYM$AM      C&U^NGUNLOAD      C$E^NG2ERRIM&N    N     (A7519XY
)@@G@@Q07   O0040007/21/75056607/21/75CURR-STAT       $IBANK      @@@@@\$DBANKXZ
)@@G@@      @]H@@5            ,SY   >     2ERRIM&N    N     (A7519Q07   O00500YA
)@@G@@07/17/75056207/17/75CURR-STAT             ISY                           YB
)@@G@@@@@@[OK@@[@^@#1@C@@@@@[]K@@[@^@[$@F1@@@@@_K@@[@^@]1@HS@@@@[IK@@[@^@@$@KDYC
)@@G@@@@@@[<@@@[@^@MD@K0@@@@[R@@@[@^@[_@+9@@@@@$@@@[@^@@;@=8@@@@[L@@@[@^@^J@>3YD
)@@G@@@@@@@J@@@B@^@#C@%]@@@@[?@@@[@^@@\@!E@@@@@!@@@[@^@E%@!9@@@@[F@@@[@^@@0@8<YE
)@@G@@@@@@@%@@@[@^@]S@9N@@@@@S@@@[@^@@!@;:@@@@@S@@@#@^@@1@/S@@@@[(@@@[@^@[K@.DYF
)@@G@@@@@@[U@@@[@^@D%@"T@@^@@Y@@@[@^@D'[C#@@^@@-@@@#@^@^?[L.@@^@@=@@@ @^@EZ[Q(YG
)@@G@@@@^@]Q@@@[@^@#/[-C@@^@]K@@@#@^@A5[>^@@W@@/@@@[@^@@[[C#@@C@]^@@@[@^@]F[C#YH
)@@G@@@@C@@9@@@[@^@#6[EI@@C@@0@@@[@^@]%[I^@@C@@V@@@[@^@@2[K,@@G@]H@@@[@^@HO[C#YI
)@@G@@@@G@]T@@@[@^@[?[PR@@G@@@@@@[@^@E"[R#@@G@@6@@@[@^@ 0[+[@@O@][@@@[@^@>'[C#YJ
)@@G@@@@O@["@@@[@^@BD[!.@@O@]B@@@[@^@ Z[5A@@O@@3@@@[@^@#0['>@@S@[\@@@ @^@ 1[C#YK
)@@G@@@@S@[&@@@ @^@]8[H4@@S@@M@@@ @^@]%[K?@@K@[5K@@[@^@[E[C#@@K@@DK@@[@^@C>[DHYL
)@@G@@@@K@[8K@@[@^@AR[L2@@K@[2K@@[@^@BX[SD@@K@@#K@@[@^@TT[Z&@@K@[)K@@[@^@@\[8_YM
)@@G@@@@K@@AK@@[@^@L9[9,@@K@[XK@@[@^@A0]F$@@K@]N@@@[@^@[:]MR@@@@[O0@@@@ @@VG_1YN
)@@G@@@@@@[<)@@^@ @C.H@G@@@@[R)@@^@ @@PHDD@@@@@$)@@^@ @@]HDY@@@@[L)@@^@ @[JHD)YO
)@@G@@@@@@@J)@@C@ @[RHE\@@@@[?)@@^@ @@]HGA@@@@@!)@@^@ @RVHGC@@@@[F)@@^@ @@[H<<YP
)@@G@@@@@@@%)@@^@ @@(H<=@@@@@S)@@]@ @@DH=H@@@@@S)@@^@ @@LH=Q@@@@[()@@^@ @@]H=$YQ
)@@G@@@@@@[U)@@@@ @C/H=(@@^@@Y)@@]@ @[3H!>@@^@@-)@@^@ @[QH\S@@^@@=)@@A@ @K:H0,YR
)@@G@@@@^@]Q)@@@@ @@TI[T@@^@]Q)@@^@ @[NI[2@@^@]K)@@^@ @[ZI# @@C@]^)@@^@ @CPH!>YS
)@@G@@@@C@@9)@@^@ @ABH5'@@C@@0)@@^@ @@XH/[@@C@@V)@@^@ @@[H/Y@@G@]H)@@@@ @RNH!>YT
)@@G@@@@G@]T)@@@@ @[NI^8@@G@@@)@@^@ @^EIAF@@G@@6)@@^@ @[;IEP@@O@][)@@@@ @@AH!>YU
)@@G@@@@O@][)@@]@ @[!H!:@@O@][)@@^@ @@<H\S@@O@][)@@A@ @@QH\;@@O@][)@@C@ @@&H0LYV
)@@G@@@@O@][)@@E@ @[RH07@@O@[")@@@@ @@[H2I@@O@[")@@]@ @@HH2J@@O@]B)@@^@ @LMH2WYW
)@@G@@@@O@@G)@@E@ @CQI#,@@O@@P)@@]@ @] IG^@@O@@3)@@^@ @]3IID@@S@[\)@@A@ @]$H!>YX
)@@G@@@@S@[&)@@A@ @J3H0G@@S@@M)@@A@ @@1H__@@K@@D0@@@@ @]HH!>@@K@[80@@@@ @[EH\2YY
)@@G@@@@K@[20@@@@ @@VH0/@@K@[;0@@@@ @@HH1R@@K@@#0@@@@ @CQH1=@@K@[)0@@@@ @@%H9'YZ
)@@G@@@@K@@A0@@@@ @]\H'=@@K@[X0@@@@ @](H.N@@K@]E0@@@@ @[KH_/@@K@]N)@@@@ @]]I[GZA
)@@G@@03/12/76080103/12/76DCRNUM                      ACTII       @@P@@@AFRCDTZB
)@@G@@      @^C@@BAPS$DBP     @@M@@YAREAP       @]K@B%ARECNT      @^C@J0ARETBLZC
)@@G@@      @^C@B/ART         @[R@@@ARTCNT      @^C@@AASGERR      @@%@@@ASHFT ZD
)@@G@@      @^C@B;BLDC1       @@3@@@BLDC3       @@3@ YCALCSW      @#G@ @CF$AM ZE
)@@G@@      @@S@@@CHKEY       @[C@#<CLSEG$      @#_@@@CL0008      @#/@]^CL0014ZF
)@@G@@      @#/@[;CL0015      @#/@#ECL0077      @#/@AACL0103      @#/@ &CL0231ZG
)@@G@@      @#/@ 5CL0281      @#/@ALCL0295      @#/@ 5CL0298      @#/@B^CL0311ZH
)@@G@@      @#/@ 0CL0333      @#/@ALCL0721      @#/@]2CL0724      @#/@]2CL1042ZI
)@@G@@      @#/@B.CL1136      @#/@A:CL1141      @#/@A>CL1229      @#/@AACL1500ZJ
)@@G@@      @#/@]2CL1505      @#/@]CCL1522      @#/@^CCL1530      @#/@#OCL1604ZK
)@@G@@      @#/@ALCL1623      @#/@#XCL1630      @#/@#OCL1640      @#/@#_CL1657ZL
)@@G@@      @#/@#OCL1713      @#/@AYCL1715      @#/@AYCL1717      @#/@AYCL1737ZM
)@@G@@      @#/@ANCL1815      @#/@ &CL1819      @#/@ &CL1824      @#/@^;CL1907ZN
)@@G@@      @#/@[;CL2022      @#/@^QCL210       @#/@^+CL413       @#/@^*CL415 ZO
)@@G@@      @#/@^5CL417       @#/@B3CL761       @#/@];CL893       @#/@AYCL895 ZP
)@@G@@      @#/@AYCL897       @#/@AYCMDLVL      @]T@@?CMDNAME     @]K@^RCN5   ZQ
)@@G@@      @]'@@[CN6         @]'@[]CN7         @]'@[CCN8         @]7@[&COMPACZR
)@@G@@T     @[I@@@CPUIN       @]K@^0CURREC      @].@@GC1          @]K@@4C10   ZS
)@@G@@      @]K@@.C11         @]K@@"C12         @]K@@_C13         @]K@[@C14   ZT
)@@G@@      @]K@[[C15         @]K@[]C16         @]K@[#C17         @]K@[^C18   ZU
)@@G@@      @]K@[ C2          @]K@@5C3          @]K@@6C4          @]K@@7C5    ZV
)@@G@@      @]K@@8C6          @]K@@9C7          @]K@@'C8          @]K@@;C8SEQNZW
)@@G@@      @]7@[>C9          @]K@@/DBP$APS     @@M@@@DBP1        @#G@ 4DBP2  ZX
)@@G@@      @#G@ 5DB$AM       @@=@@@DEBUG$      @@Y@@@DECALC      @[F@@@DF$AMFZY
)@@G@@      @[U@@1DF$AMR      @[&@@@DF$AMW      @[U@@@DLTAREA     @#D@@]DLTCNTZZ
)@@G@@      @#G@^_DLTC10      @#D@@KDLTPGE      @[C@@@DLTPKT      @#D@C^DOPT  AA
)@@G@@      @]K@@^DPGCNT      @#D@@^DPGTBL      @#D@@ DPKT1       @#D@CBDUMMY AB
)@@G@@      @[]@@@ECHAR$      @@A@@(ECLR$       @@A@@8ECOLN$      @@A@@_ECOL$ AC
)@@G@@      @@A@@?ECOPY$      @@A@[LEDAY1$      @@#@@SEDAY2$      @@#@@$EDAY3$AD
)@@G@@      @@#@@6EDCFZ$      @@A@]EEDECF$      @@A@]HEDECV$      @@A@]GEDITR$AE
)@@G@@      @@A@@HEDITX$      @@A@@REDIT$       @@A@@@EDIT$T      @@A@@ZEDPKT AF
)@@G@@      @]K@A:EFD1$       @@A@[^EFD2$       @@A@[AELT$        @]H@@HEMSGR$AG
)@@G@@      @@A@[YEMSG$       @@A@[-EOCTF$      @@A@] EOCTV$      @@A@[7EPACK$AH
)@@G@@      @@A@[JESKIP$      @@A@@2ETIME$      @@#@@@F$ASG       @@-@@@GETASIAI
)@@G@@ZE    @[ @['GETPG       @[C@]?IDJ$        @@D@@@IINAME      @]T@@:INPUT AJ
)@@G@@      @@J@@@IOERR       @@%@@PIOIN        @]K@^1KCSORT      @]4@A9KEYOK AK
)@@G@@      @#G@#UKFPKT       @#G@#PKF$AMC      @@0@@@KF$AMF      @@0@A<KF$AMRAL
)@@G@@      @@0@['KF$AMW      @@0@DDLAST$D      @]K@@0LAST$I      @]K@@2LOCMDEAM
)@@G@@      @].@KMMAXRDT      @#A@[AMAXSDT      @#A@[CNS$FLG      @]K@@ZOVFADDAN
)@@G@@R     @#G@@#OVFCNT      @#G@@[OVFPKT      @#G@#GOVFPKT1     @#G@#JOVFPKTAO
)@@G@@2     @#G@#NOVFPKT3     @#G@#OOVFTBL      @#G@@]PACKPG      @@!@@@PARSE AP
)@@G@@      @@V@@@PBUFR       @]K@ @PCNT        @^F@@@PDBPKT      @^ @[QPKTKEYAQ
)@@G@@      @#G@#SPRINT       @]K@A1RBIND$      @^)@@)RBPN$       @]^@@@RCITC$AR
)@@G@@      @^)@@ORCOMP$      @^X@@]RCORT$      @^O@@@RCOSG$      @^)@]KRDRMT$AS
)@@G@@      @^L@@YREBD$       @^R@@@RELNUM      @#=@@NRELOAD      @[X@@@RENDB$AT
)@@G@@      @]^@HLREORDLT     @[ @@@REPA$       @^)@@ZRERR$       @][@@:RER001AU
)@@G@@      @[)@@@RER002      @[)@@ RER003      @[)@@ERER004      @[)@@JRER005AV
)@@G@@      @[)@@ORER006      @[)@@TRER007      @[)@@YRER008      @[)@@<RER009AW
)@@G@@      @[)@@*RER010      @[)@@!RER011      @[)@@2RER012      @[)@@7RER013AX
)@@G@@      @[)@@/RER014      @[)@[[RER015      @[)@[ARER016      @[)@[FRER017AY
)@@G@@      @[)@[KRER018      @[)@[PRER019      @[)@[URER020      @[)@[ZRER021AZ
)@@G@@      @[)@[=RER022      @[)@[(RER023      @[)@[,RER024      @[)@[3RER025BA
)@@G@@      @[)@[8RER026      @[)@[.RER027      @[)@]]RER028      @[)@]BRER029BB
)@@G@@      @[)@]GRER030      @[)@]LRER031      @[)@]QRER032      @[)@]VRER033BC
)@@G@@      @[)@])RER034      @[)@]>RER035      @[)@]%RER036      @[)@]\RER037BD
)@@G@@      @[)@]4RER038      @[)@]9RER039      @[)@]"RER040      @[)@##RER041BE
)@@G@@      @[)@#CRER042      @[)@#HRER043      @[)@#MRER044      @[)@#RRER045BF
)@@G@@      @[)@#WRER046      @[)@#-RER047      @[)@#&RER048      @[)@#:RER049BG
)@@G@@      @[)@#0RER050      @[)@#5RER051      @[)@#'RER052      @[)@#_RER053BH
)@@G@@      @[)@^^RER054      @[)@^DRER055      @[)@^IRER056      @[)@^NRER057BI
)@@G@@      @[)@^SRER058      @[)@^XRER059      @[)@^+RER060      @[)@^$RER061BJ
)@@G@@      @[)@^?RER062      @[)@^1RER063      @[)@^6RER064      @[)@^;RER065BK
)@@G@@      @[)@ @RER066      @[)@  RER067      @[)@ ERER068      @[)@ JRER069BL
)@@G@@      @[)@ ORER070      @[)@ TRER071      @[)@ YRER072      @[)@ <RER073BM
)@@G@@      @[)@ *RER074      @[)@ !RER075      @[)@ 2RER076      @[)@ 7RER077BN
)@@G@@      @[)@ /RER078      @[)@A[RER079      @[)@AARER080      @[)@AFRER081BO
)@@G@@      @[)@AKRER082      @[)@APRER083      @[)@AURER084      @[)@AZRER085BP
)@@G@@      @[)@A=RESTCNT     @#9@J:RESTORE     @[<@@@REXIT$      @]^@L^RFIND$BQ
)@@G@@      @][@@]RFNDZ$      @][@@@RFSTR$      @^L@@,RGKTC$      @[5@@@RINF$ BR
)@@G@@      @@@@@@RKTI$       @[5@^=RKTO$       @[5@^%RLBLK$      @^U@^0RLNKS$BS
)@@G@@      @^)@@YRNEW1$      @^X@@^RNEW2$      @][@@)RNMPTR      @@3@@GROB$  BT
)@@G@@      @]^@I!ROPN$       @]B@@@RPARA$      @^X@@[RRCYC$      @]^@I"RRECS$BU
)@@G@@      @^)@@[RREL$       @]^@G3RRET$       @]^@J,RSELA$      @[2@@#RSELE$BV
)@@G@@      @[2@@ORSEL$       @[2@@SRSORT$      @]^@H3RSTD$       @^&@@@RSTRG$BW
)@@G@@      @][@@PRSVL1$      @]^@H9RSVL2$      @]^@IIRTABAD      @@3@@HRTMT$ BX
)@@G@@      @^U@@)RTPT$       @^U@@@RTST$       @^U@@KRWS$        @^X@@#SCAN  BY
)@@G@@      @[L@@@SCDIRECT    @#P@P7SCPKT       @#P@#VSELT$       @@@@@:SORTKEBZ
)@@G@@Y     @]E@@@STABAD      @@3@[MSYM$TW      @@/@@GTIMEST      @]K@^_TOPT  CA
)@@G@@      @]K@@OUNL         @[O@@@UNLF        @[O@@7UNLOAD      @[L@@@UNLS  CB
)@@G@@      @[O@[NUNL1        @[O@[BWOPT        @]K@@RZ1          @]K@#EZ2    CC
)@@G@@      @#=@@@C/@@@[H@@EDX]@@EDXN@0#N_/K@#O]@WAF)ZO/0@@[8N0#M%R]0F))9!)F-,CD
)@@G@@R@KF-0R@)F-1R@0F-2R[@F-3R[KF-4R[)F-5N#0F-6*4@V)X/K@V)X/K@]P5AA0F))9()F-,CE
)@@G@@A@KF-0A@)F-1A@0F-2A[@F-3ACTNUM      @@@@@[BFISIZ      @@@@@*BLKSZ       CF
)@@G@@@@@@I@BLKSZ1      @@@@@)BLSIZE      @@@@@ BUFSZ       @@@@X8C1SIZE      CG
)@@G@@@@@[:4C14SZ       @@@@")C15SZ       @@@@ZKC4OVEN      @@@@[=C4SIZE      CH
)@@G@@@@@@DSC5SIZE      @@@[8DC6SIZE      @@@@[FC7SIZE      @@@[$CC8SIZE      CI
)@@G@@@@@@D4DMSLEV5     @@@@@@FRSTD$      @@@G8@GAP         @@@@@ INDBLK      CJ
)@@G@@@@@@HMKF$WKS      @@@@@2LASTD$      @@@IK;LASTI$      @@@]O[MAXBLK      CK
)@@G@@@@@[ICMRGENT      @@@@]QMRGSIZ      @@@@^?MXRSIZ      @@@@E/NUMBLK      CL
)@@G@@@@@@@ONUMOAP      @@@@@YNUMREC      @@@@[=PGPBLK      @@@@@ERNGSIZ      CM
)@@G@@@@@@#CSCDBPGS     @@@@@OSCSBNO      @@@@@CSCSPGS      @@@@@ SLT$        CN
)@@G@@@@@G8@SNFLG$      @@@@@@SNOOPY      @@@@@@STDBP       @@@@@QZAP1        CO
)@@G@@@@@[ICZAP2        @@@@@2ZWRNCNT     @@@@@FZ2LINK      @@@@@^Z2MULT      CP
)@@G@@@@@@@]*@@@@K @@@@I+@@@@I/)K#QWN@0#QV/K@#RU@W/F)<C@@ED=H@@E 3(@@@@G/K@#Q<CQ
)@@G@@      @[L@]<TT1         @]>@]DTT2         @]>@]ETWADDR      @#9@@%USENMECR
)@@G@@      @]>@[1VARSW       @]:@[YVARXVAL     @]:@[XWRKPKT      @]>@N(ZEROS CS
)@@G@@      @#9@@4@@@@@@@@@@@@BLKSZ       @@@@I@BLKSZ1      @@@@@)BUFSZ       CT
)@@G@@@@@@X8C14SZ       @@@@")C14SZX      @@@@B4C15SZ       @@@@ZKENTRY$      CU
)@@G@@@@@@@@EXTRAW      @@@@@@FRSTD$      @@@C@@IBNUM       @@@@@EIBSECT      CV
)@@G@@@@@@[@IBSIZE      @@@@W@IDBNUM      @@@@G)IFILL       @@@@[UINDNUM      CW
)@@G@@@@@@H_IOVBUFF     @@@@8@IOVFNUM     @@@@@]LASTD$      @@@HPDLASTI$      CX
)@@G@@@@@AA=MAXBLK      @@@[ICNUMREC      @@@@[=SLT$        @@@C@@SNFLG$      CY
)@@G@@@@@@@@SNOOPY      @@@@@@SORTCORE    @@@[X0TBNUM       @@@@@#TBSECT      CZ
)@@G@@@@@@[@TBSIZE      @@@@W@TT1SZ       @@@@B4TT2SZ       @@@@I^@@@@@@@@@@@@DA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*[@@@@*SDFF*@[@@@@.     DC
)@@G@@@B@@@@.              KEY  FILE  ACCESS METHOD   @[@@@@.     @]@@@@ AXR$ DD
)@@G@@      @]@@@@$(1).       @[@@@@.     @C@@@@.         ****    CREATE   KEYDE
)@@G@@   FILE    ****   @[@@@@.     @E@@@@.    INPUTS:  X10 - ADDRESS OF STANDDF
)@@G@@ARD KEY FILE PACKET     @A@@@@.             X11 - RETURN ADDRESS  @[@@@@DG
)@@G@@.     @]@@@@KF$AMC*.    @E@@@@         S     X8,KPSAVE,X10           . $DH
)@@G@@  SAVE REGISTERS  @B@@@@         S     X9,KPSAVE+1,X10         .  @B@@@@DI
)@@G@@         S     X11,KPSAVE+2,X10        .  @B@@@@         DS    A0,KPSAVEDJ
)@@G@@+3,X10         .  @B@@@@         DS    A2,KPSAVE+5,X10         .  @B@@@@DK
)@@G@@         DS    A4,KPSAVE+7,X10         .  @B@@@@         S     R1,KPSAVEDL
)@@G@@+9,X10         .  @F@@@@         L     A0,KPINIT,X10           . $  GET DM
)@@G@@INIT INDICATOR    @G@@@@         TE,U  A0,1                    . $  SKIPDN
)@@G@@ IF INIT ALREADY DONE   @G@@@@         LMJ   X8,KCFIRST              . $DO
)@@G@@  PERFORM INITIALIZATION      @G@@@@         DL    A2,KPOLDP,X10        DP
)@@G@@   . $  LOAD OLD DBP & BLK NUM      @F@@@@         L     X9,KCBUFF      DQ
)@@G@@         . $  GET BUFFER ADDRESS    @G@@@@         A     X9,KCBUFWDS    DR
)@@G@@         . $  ADD DISP. INTO BUFFER       @G@@@@         DS    A2,,X9   DS
)@@G@@               . $  STORE OLD DBP & 0 IN BUFFER @H@@@@         L     A1,DT
)@@G@@KCBUFWDS             . $  GET NUMBER OF WORDS IN BUFFER     @E@@@@      DU
)@@G@@   A,U   A1,2                    . $  INCREMENT       @G@@@@         TNEDV
)@@G@@,U A1,KCBUFL*28            . $  SKIP IF BUFFER IS NOT FULL  @F@@@@      DW
)@@G@@   LMJ   X9,KCWBUF               . $  JUMP TO WRITE BUFFER  @G@@@@      DX
)@@G@@   S     A1,KCBUFWDS             . $  STORE NUMBER OF WORDS IN BUF@G@@@@DY
)@@G@@         L     A3,KCIDCNT              . $  GET WDS SINCE LAST IND ENTRYDZ
)@@G@@@G@@@@         TNZ   A3                      . $  SKIP IF THIS ISN'T FIREA
)@@G@@ST    @G@@@@         LMJ   X9,KCSTID               . $  JUMP TO CREATE IEB
)@@G@@NDEX ENTRY  @E@@@@         A,U   A3,2                    . $  INCREMENT EC
)@@G@@      @G@@@@         TNE,U A3,KBLOCK*28            . $  SKIP IF BLOCK NOED
)@@G@@T COMPLETED @F@@@@         SZ    A3                      . $  ZERO WDS IEE
)@@G@@N BLOCK     @G@@@@         S     A3,KCIDCNT              . $  STORE NUMBEF
)@@G@@ER OF WRODS IN BLK@D@@@@         J     KRET                    . $  RETUEG
)@@G@@RN    @[@@@@.     @A@@@@.  WRITE BUFFER CONTAINING KEY DATA @A@@@@.     EH
)@@G@@ INPUT: X9 - RETURN ADDRESS   @[@@@@.     @]@@@@KCWBUF.     @G@@@@      EI
)@@^@@   TP    KCBPKT+3                                                       EJ
@EOF
@COPY,IO  TEMP.1024-001-001,1024-001-001.
@FREE     TEMP.
