@CAT,P    1012-001-002.,///10000
@ASG,T    TEMP.,///10000
@ELT,OI   TEMP.1012-001-002,,,127762053241,000
)@@G@@**PF**@@@@ZD@@@@@@@@@@@[@]Q@@@]FE /^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@@@@@@@@@@@@@@@@@@@@@@@AB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AM
)@@G@@@@@@@@@@@@@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@E@@[AN
)@@G@@SALVAGE     @@@@@@@@A@@@            @"M[<*^@@@#D@@@@W@BM4 JD@@@@@@@@@@@@AO
)@@G@@@@@@@@%DH@@@@D-[@@@@@@@@____<6K@@@@@/,0@@@@D+[@@@@@@@[____<6K@@@@@C[H@@#AP
)@@G@@@D<[@@@@@@@@____<$K@@@@@[[]@]W@D=[@@@@@@@@____<6K@@@@@G;0@@[@D>[@@@@@@@@AQ
)@@G@@____N2K@@@@@8N0@DC@D&[@@@@@@@[@@@@@[K@@@@@/H)@D$@DB[@@@@@@@[@@@@@[K@@@@@AR
)@@G@@C[#@@ @D$[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@?[[]@[;@D*[@@@@@@@@AS
)@@G@@____<6K@@@@@[]D@[]@@P]@@@@@@@@@@@@@[K@@@@@C9)@@[@D([@@@@@@@@____<6K@@@@@AT
)@@G@@C[M@[.@D%[@@@@@@@@___";HK@@@@@%[N@@ @D:[@@@@@@@@@@@@@[K@@@@@ @@@@M@D?[@@AU
)@@G@@@@@@@@____<6K@@@@@R#M@[.@D,[@@@@@@@@@@@@@[K@@@@@CD]@[.@D\[@@@@@@@@___"'9AV
)@@G@@K@@@@@G9@@@[@D0[@@@@@@@@___";HK@@@@@%DH@@@@D1[@@@@@@@@____<6K@@@@@/,0@@@AW
)@@G@@@D2[@@@@@@@[____<6K@@@@@C[H@@#@D3[@@@@@@@@____<6K@@@@@[[]@[.@D4[@@@@@@@@AX
)@@G@@____<6K@@@@@/[)@D5@D![@@@@@@@[@@@@@[K@@@@@R#N@@ @D5[@@@@@@@@____<6K@@@@@AY
)@@G@@CD#@@ @D6[@@@@@@@@___";HK@@@@@G9@@@[@D7[@@@@@@@@____G_K@@@@@%DH@@@@D8[@@AZ
)@@G@@@@@@@@@@@@@@@@@@@@/,0@@@@D9[@@@@@@@[____<6K@@@@@R#+@]X@D'[@@@@@@@@@@@@@[BA
)@@G@@K@@@@@CD]@]X@D;[@@@@@@@@____<+K@@@@@G9@@@[@D/[@@@@@@@@____G^K@@@@@%DI@@@BB
)@@G@@@D.[@@@@@@@@@@@@@[K@@@@@/,0@@@@D"[@@@@@@@[____<6K@@@@@C[H@@#@D_[@@@@@@@@BC
)@@G@@___"'%K@@@@@[[I@@#@E@[@@@@@@@@____NGK@@@@@R#M@['@E[[@@@@@@@@@@@@@[M@@@@@BD
)@@G@@CD]@['@E][@@@@@@@@@@@@@[K@@@@@G9@@@[@E#[@@@@@@@@@@@@@[K@@@@@%DH@@@@E^[@@BE
)@@G@@@@@@@@___";HK@@@@@/,0@@@@E [@@@@@@@[____<6K@@@@@C[!@@B@EA[@@@@@@@@@@@@@@BF
)@@G@@@@@@@@G.)@@[@EB[@@@@@@@@___"'9K@@@@@R#M@['@EC[@@@@@@@@___";HK@@@@@CD]@['BG
)@@G@@@ED[@@@@@@@@___"'%K@@@@@G9@@@[@EE[@@@@@@@@____<$K@@@@@%DH@@@@EF[@@@@@@@@BH
)@@G@@@@@@@[M@@@@@/,0@@@@EG[@@@@@@@[____<6K@@@@@[[!@@B@EH[@@@@@@@@@@@@@@@@@@@@BI
)@@G@@@@@@@B@]\@@@@@@@@@___"'%K@@@@@/,0@@@@EI[@@@@@@@[___"'%K@@@@@@@@@@#@EJ[@@BJ
)@@G@@@@@@@@____<6K@@@@@@@#@EK@@>^@@@@@@@[@@@@@[M@@@@@D[PC1A@@TA@@@@@@@@____<6BK
)@@G@@K@@@@@@@@@@@@@@@@@@@@@@@@@ @@?@@^@@T@@&^@@@@@@@@___";HK@@@@@@].@]B@@$^@@BL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@E@@*^@@@@@@@@___";HK@@@@@/,0@@@@EK[@@@@@@@[___"'9BM
)@@G@@K@@@@@@@@@@#@EL[@@@@@@@@____<+K@@@@@C[+@[8@EM[@@@@@@@@___";HK@@@@@H.)@@[BN
)@@G@@@EN[@@@@@@@@____<6K@@@@@C_0@@[@EO[@@@@@@@@____<6K@@@@@H.)@@[@EP[@@@@@@@@BO
)@@G@@____G_K@@@@@N#0@@M@EQ[@@@@@@@@@@@@@[K@@@@@*@@@@M@ER[@@@@@@@@____G_K@@@@@BP
)@@G@@[#2@])@ET[@@@@@@@@____<6K@@@@@N90@@@@EU[@@@@@@@@@@@@@[K@@@@@N9)@@[@EV[@@BQ
)@@G@@@@@@@@____G_K@@@@@/,0@@@@EX[@@@@@@@[___"PFK@@@@@[@]@['@EY[@@@@@@@@____MWBR
)@@G@@K@@@@@N'@@@-@EW[@@@@@@@@@@@@@[K@@@@@GGJ]C@@@Q]@@@@@@@@@@@@@[K@@@@@F[SF[SBS
)@@G@@@]1@@@@@@@@@____G^K@@@@@F[SF[S@]2@@@@@@@@@____<6K@@@@@F[S^@)@]3@@@@@@@@@BT
)@@G@@@@@@@@@@@@@@R#M@['@EZ[@@@@@@@@@@@@@[M@@@@@CD]@['@E)[@@@@@@@@____<6K@@@@@BU
)@@G@@G9@@@[@E-[@@@@@@@@___"'%K@@@@@%DH@@@@E+[@@@@@@@@____G_K@@@@@/,0@@@@E<[@@BV
)@@G@@@@@@@[____<6K@@@@@9!]@]1@E=[@@@@@@@@___"'9K@@@@@9(H@@^@E>[@@@@@@@@@@@@@[BW
)@@G@@K@@@@@C[]@]3@E&[@@@@@@@@@@@@@@@@@@@@[[H@@A@E$[@@@@@@@@@@@@@[K@@@@@R#M@['BX
)@@G@@@E*[@@@@@@@@____<6K@@@@@CD]@['@E([@@@@@@@@@@@@@@@@@@@@G9@@@[@E%[@@@@@@@@BY
)@@G@@____<6K@@@@@%DH@@@@E:[@@@@@@@@@@@@@@@@@@@@/,0@@@@E?[@@@@@@@[____<6K@@@@@BZ
)@@G@@ @H@@B@E![@@@@@@@@@@@@@@@@@@@@^#3@@ @E,[@@@@@@@@____<6K@@@@@[#3@@A@E\[@@CA
)@@G@@@@@@@@____<6K@@@@@C8@@@B@E0[@@@@@@@@____<$K@@@@@/,0@@@@E1[@@@@@@@[___";HCB
)@@G@@K@@@@@/,)@C3@E2[@@@@@@@[@@@@@[K@@@@@N#3@@ @E3[@@@@@@@@@@@@@[K@@@@@C#3@@ACC
)@@G@@@E4[@@@@@@@@@@@@@[K@@@@@R#M@['@E5[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CD
)@@G@@@@ @@?CD]@['@E6[@@@@@@@@____<6K@@@@@G9@@@[@E7[@@@@@@@@@@@@@[K@@@@@%DH@@@CE
)@@G@@@E8[@@@@@@@@____<6K@@@@@/,0@@@@E9[@@@@@@@[____<6K@@@@@C[]@[;@E'[@@@@@@@@CF
)@@G@@@@@@@[K@@@@@[[H@@]@E;[@@@@@@@@____<6K@@@@@[ DABB@@R]@@@@@@@@@@@@@[K@@@@@CG
)@@G@@^#3@@ @E/[@@@@@@@@___"'9K@@@@@[#3@@A@E.[@@@@@@@@___";HK@@@@@C8@@@B@E"[@@CH
)@@G@@@@@@@@____<6K@@@@@/,0@@@@E_[@@@@@@@[___";HK@@@@@/,)@C3@F@[@@@@@@@[@@@@@[CI
)@@G@@K@@@@@N#3@@ @F[[@@@@@@@@____<6K@@@@@C#3@@A@F][@@@@@@@@@@@@@[K@@@@@R#M@['CJ
)@@G@@@F#[@@@@@@@@____<6K@@@@@CD]@['@F^[@@@@@@@@___";HK@@@@@G9@@@[@F [@@@@@@@@CK
)@@G@@____G_K@@@@@%DH@@@@FA[@@@@@@@@@@@@@@@@@@@@/,0@@@@FB[@@@@@@@[____<6K@@@@@CL
)@@G@@C[]@[;@FC[@@@@@@@@@@@@@[K@@@@@[[H@@[@FD[@@@@@@@@____<+K@@@@@R#M@]X@FE[@@CM
)@@G@@@@@@@@____G^K@@@@@CD]@]X@FF[@@@@@@@@@@@@@[K@@@@@G9@@@[@FG[@@@@@@@@____<6CN
)@@G@@K@@@@@%DH@@@@FH[@@@@@@@@___"'%K@@@@@/,0@@@@FI[@@@@@@@[____<6K@@@@@R#+@['CO
)@@G@@@FJ[@@@@@@@@@@@@@[M@@@@@CD]@['@FK[@@@@@@@@@@@@@[K@@@@@G9@@@[@FL[@@@@@@@@CP
)@@G@@@@@@@[K@@@@@%DI@@@@FM[@@@@@@@@___";HK@@@@@/,0@@@@FN[@@@@@@@[____<6K@@@@@CQ
)@@G@@C[H@@#@FO[@@@@@@@@@@@@@@@@@@@@[[I@@#@FP[@@@@@@@@___"'9K@@@@@R#M@]X@FQ[@@CR
)@@G@@@@@@@@___";HK@@@@@CD]@]X@FR[@@@@@@@@___"'%K@@@@@G9@@@[@FS[@@@@@@@@____<$CS
)@@G@@K@@@@@%DH@@@@FT[@@@@@@@@@@@@@[M@@@@@/,0@@@@FU[@@@@@@@[____<6K@@@@@C[]@['CT
)@@G@@@FV[@@@@@@@@@@@@@@@@@@@@[[H@@#@FW[@@@@@@@@___"'%K@@@@@G;0@@[@FX[@@@@@@@@CU
)@@G@@___"'%K@@@@@8N0@ET@FY[@@@@@@@[@@@@@[K@@@@@/H)@FZ@ES[@@@@@@@[@@@@@[K@@@@@CV
)@@G@@@@@@@C@]0@@@@@@@@@____<6K@@@@@@@@@@@@@@@@@@@@@@@@@ @@?/,0@@@@FZ[@@@@@@@[CW
)@@G@@___"'%K@@@@@@@@@@#@F)[@@@@@@@@@@@@@@@@@@@@@@]@F-@@(^@@@@@@@[@@@@@[M@@@@@CX
)@@G@@D[PC1A@@UA@@@@@@@@___"'9K@@@@@D([D0)@@VA@@@@@@@@____<+K@@@@@@@B@@U@@%^@@CY
)@@G@@@@@@@@___";HK@@@@@@#F@]P@@:^@@@@@@@@____<6K@@@@@@@B@@@@@?^@@@@@@@@____<6CZ
)@@G@@K@@@@@9?M@]4@F-[@@@@@@@@____G_K@@@@@OUTPUT@]4@@@@@@@@@@@@@@[K@@@@@      DA
)@@G@@@]5@@@@@@@@@____G_K@@@@@C8[@@K@F+[@@@@@@@@____<6K@@@@@C80@@@@F<[@@@@@@@[DB
)@@G@@____A=M@@@@@R])@@]@F=[@@@@@@@@____G_K@@@@@/,0@@@@F>[@@@@@@@[___";YK@@@@@DC
)@@G@@9?M@]6@F&[@@@@@@@@____MWK@@@@@INPUT @]6@@@@@@@@@@@@@@[K@@@@@      @]7@@@DD
)@@G@@@@@@@@@@@@@[K@@@@@C8[@@.@F$[@@@@@@@@____G^K@@@@@C80@@@@F*[@@@@@@@[____BVDE
)@@G@@M@@@@@R])@@]@F([@@@@@@@@@@@@@@@@@@@@/,0@@@@F%[@@@@@@@[___";YK@@@@@BBGD]EDF
)@@G@@@@S]@@@@@@@@____<6K@@@@@C8@@@D@F:[@@@@@@@@___"'%K@@@@@/,0@@@@F?[@@@@@@@[DG
)@@G@@___";HK@@@@@/,)@^&@F![@@@@@@@[@@@@@[K@@@@@C8[@@K@F,[@@@@@@@@___"'9K@@@@@DH
)@@G@@/,0@@@@F\[@@@@@@@[____ ^K@@@@@C.@@@[@F0[@@@@@@@@@@@@@@@@@@@@[[]@]V@F1[@@DI
)@@G@@@@@@@@@@@@@[K@@@@@C8@@@B@F2[@@@@@@@@____<6K@@@@@/,0@@@@F3[@@@@@@@[___";HDJ
)@@G@@K@@@@@C8]@[/@F4[@@@@@@@@____<6K@@@@@[@H@@ @F5[@@@@@@@@@@@@@@@@@@@@/,)@B,DK
)@@G@@@F6[@@@@@@@[@@@@@[K@@@@@R#M@[;@F7[@@@@@@@@@@@@@@@@@@@@CD]@[;@F8[@@@@@@@@DL
)@@G@@____<6K@@@@@G9@@@[@F9[@@@@@@@@____<6K@@@@@%DH@@@@F'[@@@@@@@@____<$K@@@@@DM
)@@G@@/,0@@@@F;[@@@@@@@[____<6K@@@@@C[]@[.@F/[@@@@@@@@@@@@@[K@@@@@[[H@@#@F.[@@DN
)@@G@@@@@@@@@@@@@[K@@@@@C8@@@C@F"[@@@@@@@@@@@@@[K@@@@@/,0@@@@F_[@@@@@@@[___";HDO
)@@G@@K@@@@@@@@@@@@@@@@@@@@@@@@@ @@?/,)@EK@G@[@@@@@@@[@@@@@[K@@@@@#]] B#@@T]@@DP
)@@G@@@@@@@@@@@@@[K@@@@@C8@@@B@G[[@@@@@@@@____<6K@@@@@/,0@@@@G][@@@@@@@[___";HDQ
)@@G@@K@@@@@C8]@]]@G#[@@@@@@@@@@@@@[K@@@@@[@H@@ @G^[@@@@@@@@____<6K@@@@@/,)@ QDR
)@@G@@@G [@@@@@@@[@@@@@[K@@@@@C8@@@B@GA[@@@@@@@@___"'9K@@@@@/,0@@@@GB[@@@@@@@[DS
)@@G@@___";HK@@@@@C8]@[.@GC[@@@@@@@@____<6K@@@@@[@H@@ @GD[@@@@@@@@___";HK@@@@@DT
)@@G@@/,)@ $@GE[@@@@@@@[@@@@@[K@@@@@C8@@@B@GF[@@@@@@@@____<6K@@@@@/,0@@@@GG[@@DU
)@@G@@@@@@@[___";HK@@@@@C8]@[/@GH[@@@@@@@@____<6K@@@@@[@H@@ @GI[@@@@@@@@___";HDV
)@@G@@K@@@@@/,)@@2@GJ[@@@@@@@[@@@@@[K@@@@@C9)@]V@GK[@@@@@@@@@@@@@@@@@@@@"P+@[8DW
)@@G@@@GL[@@@@@@@@____<6K@@@@@C'@@]V@GM[@@@@@@@@@@@@@[K@@@@@"Q]@[9@GN[@@@@@@@@DX
)@@G@@____<+K@@@@@"IK@@N@GO[@@@@@@@@____G^K@@@@@[]M@["@GP[@@@@@@@@@@@@@[K@@@@@DY
)@@G@@CDQC8,@]8@@@@@@@@@____<6K@@@@@^@<^[#@]9@@@@@@@@@___"'%K@@@@@D9HE[[@]'@@@DZ
)@@G@@@@@@@@____<6K@@@@@ELDETJ@];@@@@@@@@@@@@@@[M@@@@@D1N^@.@]/@@@@@@@@@@@@@@[EA
)@@G@@K@@@@@^@)^@)@].@@@@@@@@@@@@@@[K@@@@@C9K@@P@GQ[@@@@@@@@___";HK@@@@@N8)@@PEB
)@@G@@@GR[@@@@@@@@____<6K@@@@@C9]@]8@GS[@@@@@@@@@@@@@@@@@@@@C8[@@K@GT[@@@@@@@@EC
)@@G@@___"'9K@@@@@/,0@@@@GU[@@@@@@@[___"F2K@@@@@C9K@@G@GV[@@@@@@@@___"'%K@@@@@ED
)@@G@@C[]@["@GW[@@@@@@@@____<$K@@@@@C8[@@K@GX[@@@@@@@@@@@@@[M@@@@@/,0@@@@GY[@@EE
)@@G@@@@@@@[___"75K@@@@@C8[@@K@GZ[@@@@@@@@@@@@@@@@@@@@/,0@@@@G)[@@@@@@@[____^<EF
)@@G@@K@@@@@/,0@@@@G-[@@@@@@@[___"IOK@@@@@   AF[@@U]@@@@@@@@@@@@@[K@@@@@@@[@G+EG
)@@G@@@@!^@@@@@@@[@@@@@[M@@@@@@@@@@F@@@^@@@@@@@@____<6K@@@@@@@@@@@@@@@@@@@@@@@EH
)@@G@@@@ @@P@@@@@D@@@C@@@@@@@@___"'%K@@@@@@@]@@@@@B@@@@@@@@[@@@@@ M@@@@@@@F@@@EI
)@@G@@@@D@@@@@@@@[@@@@@^M@@@@@@]-@@@@@C@@@@@@@@[@@@@@]M@@@@@@@V@@@@@E@@@@@@@@[EJ
)@@G@@@@@@@AM@@@@@@@D@@@@@F@@@@@@@@[@@@@@CM@@@@@@]_@@@@@G@@@@@@@@@____<6K@@@@@EK
)@@G@@/K@@@@@@H@@@@@@@@[___"5%K@@@@@@@]@[_@@ @@@@@@@@@____G_K@@@@@@@@@@C@@A@@@EL
)@@G@@@@@@@@@@@@@[K@@@@@R8K@@@@G+[@@@@@@@[@@@@@@M@@@@@R8)@@@@G<[@@@@@@@[@@@@@@EM
)@@G@@M@@@@@C8@@@H@G=[@@@@@@@[@@@@@@M@@@@@[@@@@@@G>[@@@@@@@[___"EEK@@@@@C8@@@AEN
)@@G@@@G&[@@@@@@@[@@@@@@M@@@@@[@@@@@@G$[@@@@@@@[___"EDK@@@@@C@]@]"@G*[@@@@@@@@EO
)@@G@@@@@@@[K@@@@@[@@@@@@G([@@@@@@@[___"ECK@@@@@/,0@@@@G%[@@@@@@@[___"G3K@@@@@EP
)@@G@@/K@@F-@G:[@@@@@@@[@@@@@[K@@@@@@@@G[>@]"@@@@@@@@@@@@@@@@@@@@@/,0@@@@F%[@@EQ
)@@G@@@@@@@[___";YK@@@@@BBGD]E@@S]@@@@@@@@____<6K@@@@@C8@@@D@F:[@@@@@@@@___"'%ER
)@@G@@K@@@@@/,0@@@@F?[@@@@@@@[___";HK@@@@@/,)@^&@F![@@@@@@@[@@@@@[K@@@@@C8[@@KES
)@@G@@@F,[@@@@@@@@___"'9K@@@@@/,0@@@@F\[@@@@@@@[____ ^K@@@@@C.@@@[@F0[@@@@@@@@ET
)@@G@@@@@@@@@@@@@@[[]@]V@F1[@@@@@@@@@@@@@[K@@@@@C8@@@B@F2[@@@@@@@@____<6K@@@@@EU
)@@G@@/,0@@@@F3[@@@@@@@[___";HK@@@@@C8]@[/@F4[@@@@@@@@____<6K@@@@@[@H@@ @F5[@@EV
)@@G@@@@@@@@@@@@@@@@@@@@/,)@B,@F6[@@@@@@@[@@@@@[K@@@@@R#M@[;@F7[@@@@@@@@@@@@@@EW
)@@G@@@@@@@@CD]@[;@F8[@@@@@@@@____<6K@@@@@G9@@@[@F9[@@@@@@@@____<6K@@@@@%DH@@@EX
)@@G@@@F'[@@@@@@@@____<$K@@@@@/,0@@@@F;[@@@@@@@[____<6K@@@@@C[]@[.@F/[@@@@@@@@EY
)@@G@@@@@@@[K@@@@@[[H@@#@F.[@@@@@@@@@@@@@[K@@@@@C8@@@C@F"[@@@@@@@@@@@@@[K@@@@@EZ
)@@G@@/,0@@@@F_[@@@@@@@[___";HK@@@@@@@@@@@@@@@@@@@@@@@_____"/,)@EK@G@[@@@@@@@[FA
)@@G@@@@@@@[K@@@@@#]] B#@@T]@@@@@@@@@@@@@[K@@@@@C8@@@B@G[[@@@@@@@@____<6K@@@@@FB
)@@G@@/,0@@@@G][@@@@@@@[___";HK@@@@@C8]@]]@G#[@@@@@@@@@@@@@[K@@@@@[@H@@ @G^[@@FC
)@@G@@@@@@@@____<6K@@@@@/,)@ Q@G [@@@@@@@[@@@@@[K@@@@@C8@@@B@GA[@@@@@@@@___"'9FD
)@@G@@K@@@@@/,0@@@@GB[@@@@@@@[___";HK@@@@@C8]@[.@GC[@@@@@@@@____<6K@@@@@[@H@@ FE
)@@G@@@GD[@@@@@@@@___";HK@@@@@/,)@ $@GE[@@@@@@@[@@@@@[K@@@@@C8@@@B@GF[@@@@@@@@FF
)@@G@@____<6K@@@@@/,0@@@@GG[@@@@@@@[___";HK@@@@@C8]@[/@GH[@@@@@@@@____<6K@@@@@FG
)@@G@@[@H@@ @GI[@@@@@@@@___";HK@@@@@/,)@@2@GJ[@@@@@@@[@@@@@[K@@@@@C9)@]V@GK[@@FH
)@@G@@@@@@@@@@@@@@@@@@@@"P+@[8@GL[@@@@@@@@____<6K@@@@@C'@@]V@GM[@@@@@@@@@@@@@[FI
)@@G@@K@@@@@"Q]@[9@GN[@@@@@@@@____<+K@@@@@"IK@@N@GO[@@@@@@@@____G^K@@@@@[]M@["FJ
)@@G@@@GP[@@@@@@@@@@@@@[K@@@@@CDQC8,@]8@@@@@@@@@____<6K@@@@@^@<^[#@]9@@@@@@@@@FK
)@@G@@___"'%K@@@@@D9HE[[@]'@@@@@@@@@____<6K@@@@@ELDETJ@];@@@@@@@@@@@@@@[M@@@@@FL
)@@G@@D1N^@.@]/@@@@@@@@@@@@@@[K@@@@@^@)^@)@].@@@@@@@@@@@@@@[K@@@@@C9K@@P@GQ[@@FM
)@@G@@@@@@@@___";HK@@@@@N8)@@P@GR[@@@@@@@@____<6K@@@@@C9]@]8@GS[@@@@@@@@@@@@@@FN
)@@G@@@@@@@@C8[@@K@GT[@@@@@@@@___"'9K@@@@@/,0@@@@GU[@@@@@@@[___"F2K@@@@@C9K@@GFO
)@@G@@@GV[@@@@@@@@___"'%K@@@@@C[]@["@GW[@@@@@@@@____<$K@@@@@C8[@@K@GX[@@@@@@@@FP
)@@G@@@@@@@[M@@@@@/,0@@@@GY[@@@@@@@[___"75K@@@@@C8[@@K@GZ[@@@@@@@@@@@@@@@@@@@@FQ
)@@G@@/,0@@@@G)[@@@@@@@[____^<K@@@@@/,0@@@@G-[@@@@@@@[___"IOK@@@@@   AF[@@U]@@FR
)@@G@@@@@@@@@@@@@[K@@@@@@@[@G+@@!^@@@@@@@[@@@@@[M@@@@@@@@@@F@@@^@@@@@@@@____<6FS
)@@G@@K@@@@@@@@@@@@@@@@@@@@@@@      5- 14 @F@@@@  6.  INPUT/OUTPUT STATEMENTS FT
)@@G@@                              6-1   @G@@@@      6. 1.  BASIC (UNIT RECORFU
)@@G@@D) I/O                              6-  1 @G@@@@      6. 1. 1.  FREE-FORFV
)@@G@@MAT I/O                                   6-  2 @G@@@@      6. 1. 2.  DAFW
)@@G@@TA FORMAT SPECIFICATIONS                        6-  3 @G@@@@      6. 1. FX
)@@G@@3.  FORMATTED INPUT/OUTPUT.                           6-  4 @F@@@@  7.  FY
)@@G@@      FORMAT(1X,I1,I2,F4.2,A3)                        7-1   @F@@@@  8.  FZ
)@@G@@SUBROUTINE STATEMENTS                                 8-1   @G@@@@      GA
)@@G@@8. 1.  EXTERNAL SUBROUTINES                                 8-  1 @G@@@@GB
)@@G@@      8. 2.  INTERNAL SUBROUTINES                                 8-  4 GC
)@@G@@@G@@@@      8. 2. 1.  ONE-LINE INTERNAL FUNCTIONS                       GD
)@@G@@8-  4 @G@@@@      8. 2. 2.  MULTI-LINE INTERNAL SUBROUTINES             GE
)@@G@@      8-  4 @G@@@@      8. 3.  THE RETURN STATEMENTS                    GF
)@@G@@            8-  6 @G@@@@      8. 3. 1.  NORMAL RETURN                   GG
)@@G@@                  8-  6 @G@@@@      8. 3. 2.  ALTERNATE (ERROR) RETURNS GH
)@@G@@                        8-  6 @G@@@@      8. 4.  AUXILLIARY ENTRY POINTSGI
)@@G@@                              8-  8 @G@@@@      8. 5.  SPECIFYING THE MOGJ
)@@G@@DE OF A FUNCTION                    8- 10 @G@@@@      8. 6.  FUNCTION ANGK
)@@G@@D SUBROUTINE CALLS                        8- 11 @G@@@@      8. 6. 1.  GEGL
)@@G@@NERATED CALLING SEQUENCES                       8- 12 @G@@@@      8. 6. GM
)@@G@@2.  THE 'WALK-BACK' FEATURE                           8- 12 @F@@@@  9.  GN
)@@G@@DECLARATION STATEMENTS                                9-1   @G@@@@      GO
)@@G@@9. 1.  STORAGE ALLOCATION CONTROL                           9-  1 @G@@@@GP
)@@G@@      9. 1. 1.  THE 'DIMENSION' STATEMENT (FORTRAN AND MAD)       9-  1 GQ
)@@G@@@G@@@@      9. 1. 2.  THE 'EQUIVALENCE' STATEMENT (FORTRAN AND MAD)     GR
)@@G@@9-  4 @G@@@@      9. 1. 3.  COMMON-STORAGE DECLARATION                  GS
)@@G@@      9-  5 @G@@@@      9. 1. 4.  THE 'EXTERNAL' STATEMENT (FORTRAN)    GT
)@@G@@            9-  6 @G@@@@      9. 2.  MODE DECLARATIONS                  GU
)@@G@@                  9-  8 @G@@@@      9. 2. 1.  GLOBAL MODE DECLARATIONS  GV
)@@G@@                        9-  8 @G@@@@      9. 2. 2.  ITEMIZED MODE DECLARGW
)@@G@@ATIONS                        9-  9 @G@@@@      9. 2. 3.  MODE CORRESPONGX
)@@G@@DENCE                               9-  9 @G@@@@      9. 3.  DATA INTRODGY
)@@G@@UCTION                                    9- 11 @G@@@@      9. 3. 1.  THGZ
)@@G@@E 'DATA' STATEMENT (FORTRAN)                    9- 11 @G@@@@      9. 3. HA
)@@G@@2.  THE 'VECTOR VALUES' STATEMENT (MAD)               9- 14 @G@@@@      HB
)@@G@@9. 4.  THE 'PARAMETER' STATEMENT                            9- 16 @[@@@@HC
)@@G@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)   HD
)@@G@@       0-  6@[@@@@      @[@@@@      @[@@@@      @G@@@@      9. 4. 1.  OPHE
)@@G@@ERAND SUBSTITUTION PARAMETERS                   9- 17 @G@@@@      9. 4. HF
)@@G@@2.  EXPRESSION-ARITHMETIC PARAMETERS                  9- 18 @G@@@@      HG
)@@G@@9. 4. 3.  NULLIFYING A PARAMETER STATEMENT                  9- 19 @G@@@@HH
)@@G@@      9. 5.  THE 'DEFINE' STATEMENT.  MACROEXPRESSIONS            9- 20 HI
)@@G@@@G@@@@      9. 5. 1.  SIMPLE MACROEXPRESSIONS                           HJ
)@@G@@9- 20 @G@@@@      9. 5. 2.  PARAMETRIC MACROEXPRESSIONS                 HK
)@@G@@      9- 20 @G@@@@      9. 5. 3.  RULES FOR MACROEXPRESSION EXPANSION   HL
)@@G@@            9- 21 @G@@@@      9. 5. 4.  SUGGESTED APPLICATIONS OF MACROEHM
)@@G@@XPRESSIONS        9- 23 @G@@@@      9. 6.  COMPILER-CONTROL STATEMENTS  HN
)@@G@@                        9- 26 @G@@@@      9. 6. 1.  LISTING CONTROL     HO
)@@G@@                              9- 26 @G@@@@      9. 6. 2.  CROSS-REFERENCHP
)@@G@@E COLLECTION                        9- 27 @G@@@@      9. 6. 3.  CHANGE-OHQ
)@@G@@F-LANGUAGE CONTROL                        9- 27 @G@@@@      9. 6. 4.  GEHR
)@@G@@NERIC AND INTRINSIC FUNCTION CONTROL            9- 28 @G@@@@      9. 7. HS
)@@G@@ SOURCE STATEMENT CONTROL                             9- 30 @G@@@@      HT
)@@G@@9. 7. 1.  THE 'INCLUDE' STATEMENT (FORTRAN AND MAD)         9- 30 @G@@@@HU
)@@G@@      9. 7. 2.  THE 'DELETE' STATEMENT (FORTRAN AND MAD)          9- 30 HV
)@@G@@@G@@@@      9. 7. 3.  CODING A PROCEDURE FOR USE WITH 'INCLUDE'         HW
)@@G@@9- 32 @G@@@@      9. 7. 4.  AVAILABLE LIBRARY PROCEDURES                HX
)@@G@@      9- 33 @F@@@@ 10.  MISCELLANEOUS MACHINE-DEPENDENT STATEMENTS      HY
)@@G@@     10-1   @G@@@@     10. 1.  THE 'REQUEST' STATEMENT (FORTRAN AND MAD)HZ
)@@G@@           10-  1 @F@@@@ 11.  THE MECHANICS OF USING RALPH              IA
)@@G@@           11-1   @G@@@@     11. 1.  PROGRAM FILES                      IB
)@@G@@                 11-  1 @G@@@@     11. 1. 1.  TEMPORARY AND CATALOGUED FIC
)@@G@@ILES                   11-  1 @G@@@@     11. 1. 2.  INSERTING A PROGRAM ID
)@@G@@ELEMENT                      11-  2 @G@@@@     11. 1. 3.  COMPILING FROMIE
)@@G@@ A PROGRAM FILE                    11-  3 @G@@@@     11. 1. 4.  UPDATINGIF
)@@G@@ A PROGRAM IN A PROGRAM FILE.  CYCLES.   11-  3 @G@@@@     11. 1. 5.  ALIG
)@@G@@TERNATE VERSIONS                               11-  4 @G@@@@     11. 1. IH
)@@G@@6.  RELOCATABLE ELEMENTS                             11-  4 @G@@@@     1II
)@@G@@1. 1. 7.  SOURCE OUTPUT.  RENAMING AN UPDATE.              11-  5 @G@@@@IJ
)@@G@@     11. 1. 8.  FILE QUALIFIERS                                  11-  6 IK
)@@G@@@G@@@@     11. 1. 9.  ASSUMED ENTRIES FOR NULL FIELDS                  1IL
)@@G@@1-  7 @G@@@@     11. 1.10.  SOURCE MODIFICATION CARDS                   IM
)@@G@@     11-  8 @G@@@@     11. 2.  SOURCE STATEMENT FORMAT                  IN
)@@G@@           11- 10 @G@@@@     11. 2. 1.  PROGRAM STATEMENTS              IO
)@@G@@                 11- 10 @G@@@@     11. 2. 2.  REMARK (COMMENT) CARDS    IP
)@@G@@                       11- 10 @G@@@@     11. 2. 3.  CARD-TRUNCATION CHARIQ
)@@G@@ACTER                        11- 10 @G@@@@     11. 2. 4.  SOURCE LISTINGIR
)@@G@@ CONTROL                           11- 11 @G@@@@     11. 3.  PROCESSOR-CIS
)@@G@@ALL OPTIONS                              11- 12 @G@@@@     11. 3. 1.  ASIT
)@@G@@SUMED OPTIONS                                  11- 13 @G@@@@     11. 3. IU
)@@G@@2.  MISCELLANEOUS CONSIDERATIONS                     11- 13 @G@@@@     1IV
)@@G@@1. 4.  OVERALL DECK SETUP                                  11- 13 @F@@@@IW
)@@G@@ 12.  DIAGNOSTIC AND DEBUGGING FEATURES                    12-1   @G@@@@IX
)@@G@@     12. 1.  EXECUTION-TIME SUBSCRIPT CHECKING                   12-  1 IY
)@@G@@@G@@@@     12. 2.  STATEMENT TRACE                                     1IZ
)@@G@@2-  1 @G@@@@     12. 3.  ARGUMENT WALK-BACK                             JA
)@@G@@     12-  1 @G@@@@     12. 4.  SYMBOL ONE-LINK WARNING                  JB
)@@G@@           12-  2 @G@@@@     12. 5.  CONTINGENCY INTERCEPTION AND ANALYSJC
)@@G@@IS               12-  2 @G@@@@     12. 6.  DUMP SYMBOL TABLE            JD
)@@G@@                       12-  2 @G@@@@     12. 7.  'D'-OPTION COMPILE SWITJE
)@@G@@CH.                          12-  3 @F@@@@ 13.  ERROR MESSAGES          JF
)@@G@@                             13-1   @[@@@@*****^@G@@@@A GUIDE TO PROGRAMJG
)@@G@@MING WITH RALPH (DECEMBER 1971 VERSION)          0-  7@[@@@@      @[@@@@JH
)@@G@@      @[@@@@      @G@@@@     13. 1.  COMPILER ERROR MESSAGES            JI
)@@G@@                 13-  2 @G@@@@     13. 2.  EXECUTION-MONITOR ERROR MESSAJJ
)@@G@@GES                    13- 20 @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WJK
)@@G@@ITH RALPH (DECEMBER 1971 VERSION)          1-  1@[@@@@      @[@@@@      JL
)@@G@@@[@@@@      @ @@@@  1.   THE RALPH COMPILER     @[@@@@      @[@@@@      JM
)@@G@@@[@@@@      @[@@@@      @[@@@@      @B@@@@  1. 1.   OVERALL PHILOSOPHY AJN
)@@G@@ND DESIGN   @[@@@@      @[@@@@      @F@@@@       RALPH IS A DUAL-LANGUAGJO
)@@G@@E COMPILER DESIGNED TO OPERATE AT AN@F@@@@ EXTREMELY HIGH SPEED, WITH ASJP
)@@G@@ LITTLE SACRIFICE IN CODE EFFICIENCY@G@@@@ AS POSSIBLE.  RALPH CAN COMPIJQ
)@@G@@LE AN EXTENDED VERSION OF UNIVAC 1108     @F@@@@ FORTRAN V, AND A MODIFIJR
)@@G@@ED VERSION OF THE UNIVERSITY OF MICHIGAN'S@G@@@@ MAD LANGUAGE.  WHENEVERJS
)@@G@@ BASIC DIFFERENCES BETWEEN LANGUAGE CONVEN-     @F@@@@ TIONS PRESENTED OJT
)@@G@@THERWISE UNRESOLVABLE AMBIGUITIES, THE FORTRAN  @^@@@@ CONVENTION WAS ADJU
)@@G@@OPTED.@[@@@@      @F@@@@       PROGRAMS COMPILED BY RALPH ARE COMPLETELYJV
)@@G@@ OBJECT-COMPATIBLE@F@@@@ WITH THOSE COMPILED BY THE UNIVAC FOR/V COMPILEJW
)@@G@@R, AS OF LEVEL    @G@@@@ 00S7B.  AGAINST OUR BETTER JUDGEMENT, WE HAVE UJX
)@@G@@SED UNIVAC'S SUBROU-    @G@@@@ TINE CALLING SEQUENCE CONVENTIONS IN ORDEJY
)@@G@@R TO MAINTAIN COMPATIBILI-    @[@@@@ TY.  @[@@@@      @G@@@@       THE OJZ
)@@G@@BJECT CODE PRODUCED BY RALPH IS COMPARABLE IN EFFICIEN-     @G@@@@ CY TOKA
)@@G@@ THAT PRODUCED BY FOR/V IN ALL CASES EXCEPT LOOP AND MULTIPLE     @F@@@@KB
)@@G@@ SUBSCRIPT OPTIMIZATION.  NO ATTEMPT IS MADE TO ANALYZE PROGRAM   @F@@@@KC
)@@G@@ FLOW AND CORRECT BLUNDERS ON THE PART OF THE PROGRAMMER; RALPH'S @F@@@@KD
)@@G@@ MULTIPLE SUBSCRIPT OPTIMIZATION IS MINIMAL.  SAVE THESE TWO CON- @F@@@@KE
)@@G@@ FESSED SHORTCOMINGS, THE RALPH OBJECT PROGRAM IS MORE-OR-LESS    @B@@@@KF
)@@G@@ EQUIVALENT TO THAT PRODUCED BY FOR/V.    @[@@@@      @F@@@@       CONSIKG
)@@G@@DERABLE DIAGNOSTIC CAPABILITIES HAVE BEEN INCLUDED,   @F@@@@ CALLABLE WIKH
)@@G@@TH VARIOUS OPTIONS, IN THE HOPES THAT BEGINNING PRO-  @F@@@@ GRAMMERS WIKI
)@@G@@LL BE THEREBY BETTER EQUIPPED TO LEARN PROGRAMMING    @D@@@@ INSTEAD OF KJ
)@@G@@FIGHTING AN UNKNOWN OPERATING SYSTEM.     @[@@@@*****^@G@@@@A GUIDE TO PKK
)@@G@@ROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          1-  2@[@@@@      KL
)@@G@@@[@@@@      @[@@@@      @[@@@@      @B@@@@  1. 1. 1.   RALPH IN AN 1108 KM
)@@G@@INSTALLATION@[@@@@      @F@@@@       THE VALUE OF RALPH AS A MAD COMPILEKN
)@@G@@R IS OBVIOUS:  THERE IS @F@@@@ NO OTHER WAY TO COMPILE A MAD PROGRAM ON KO
)@@G@@THE 1108.  A DISTRIBUTED@F@@@@ FORTRAN COMPILER EXISTS; IT IS AN EXTREMEKP
)@@G@@LY POWERFUL AND FAST    @C@@@@ COMPILER, RELATIVELY RELIABLE, SO WHY RALKQ
)@@G@@PH?   @[@@@@      @C@@@@  1. 1. 1. 1.   SYSTEM THROUGHPUT EFFICIENCY    KR
)@@G@@@[@@@@      @G@@@@       RATHER EXTENSIVE TESTS USING A NUMBER OF DIFFERKS
)@@G@@ENT JOB MIXES     @G@@@@ HAVE BEEN MADE OF RALPH VS. FORTRAN V IN A PRODKT
)@@G@@UCTION ENVIRONMENT.     @F@@@@ THESE TESTS INDICATE AN AVERAGE THROUGHPUKU
)@@G@@T INCREASE FACTOR OF 12:@F@@@@ TWELVE TIMES AS MANY JOBS MAY BE RUN PER KV
)@@G@@UNIT TIME USING RALPH!  @F@@@@ LONGER PROGRAMS GIVE RALPH A GREATER EDGEKW
)@@G@@ IN COMPILATION TIME.   @F@@@@ THE RALPH COMPILER IS A SINGLE CORELOAD; KX
)@@G@@EVEN THOUGH IT MAKES 3  @F@@@@ PASSES DOWN THE CODE AND IS DIVIDED INTO KY
)@@G@@4 PHASES, THE ENTIRE    @D@@@@ COMPILER IS LOADED TOGETHER ON A SINGLE AKZ
)@@G@@CCESS WORD. @[@@@@      @B@@@@  1. 1. 1. 2.   COMPUTATIONAL ACCURACY    LA
)@@G@@@[@@@@      @F@@@@       RALPH TAKES GREAT CARE TO AVOID LOSS OF PRECISILB
)@@G@@ON, BOTH IN @F@@@@ THE COMPILER AND IN THE OBJECT CODE PRODUCED.  COMPUTLC
)@@G@@ATIONAL     @F@@@@ SHORTCUTS WHICH MIGHT CAUSE LOSS OF SIGNIFICANCE ARE LD
)@@G@@CAREFULLY   @G@@@@ AVOIDED. THE SOURCE-CONSTANT COLLECTION ALGORITHM USELE
)@@G@@D BY RALPH IS     @F@@@@ PROBABLY THE MOST ACCURATE AVAILABLE ON A 36-BILF
)@@G@@T MACHINE.  ALL   @F@@@@ NUMERIC TRANSLATION TABLES WERE GENERATED IN OCLG
)@@G@@TAL BY THE IBM    @F@@@@ 709/7090 MULTIPLE-PRECISION PACKAGE 'PRECISE', LH
)@@G@@AND COMPUTATIONAL @F@@@@ RESULTS SPOT-VERIFIED BY HAND AGAINST TRIPLE-PRLI
)@@G@@ECISION VALUES    @^@@@@ GENERATED BY 'PRECISE'.@[@@@@      @ @@@@  1. 1LJ
)@@G@@. 1. 3.   DEBUGGING AIDS@[@@@@      @F@@@@       THE RALPH COMPILER AND LK
)@@G@@SUPPORT LIBRARY INCLUDE A LARGE     @F@@@@ NUMBER OF DIAGNOSTIC FEATURESLL
)@@G@@ NOT AVAILABLE IN DISTRIBUTED UNIVAC@E@@@@ FORTRAN.  THIS DIAGNOSTIC SYSLM
)@@G@@TEM IS INVALUABLE IN LOCATING @G@@@@ HARD-TO-FIND BUGS, OR MERELY REDUCILN
)@@G@@NG THE PROGRAMMER TIME REQUIRED     @ @@@@ FOR DEVELOPMENT OF A PROGRAM.LO
)@@G@@@D@@@@ THESE DIAGNOSTIC AIDS ARE DOCUMENTED IN CHAPTER 11.  @[@@@@      LP
)@@G@@@A@@@@  1. 1. 1. 4.   ADVANCED PROGRAMS   @[@@@@      @F@@@@       BECAULQ
)@@G@@SE RALPH CONTAINS MANY FEATURES NOT AVAILABLE IN ANY  @F@@@@ OTHER FORTRLR
)@@G@@AN SYSTEM, MANY ALGORITHMS WHICH WOULD OTHERWISE BE   @F@@@@ PRACTICAL OLS
)@@G@@NLY IN MACHINE LANGUAGE MAY NOW BE CODED AT THE COMPI-@]@@@@ LER LEVEL. LT
)@@G@@@[@@@@      @A@@@@  1. 1. 1. 5.   DEMAND PROCESSING   @[@@@@      @F@@@@LU
)@@G@@       RALPH DETECTS WHEN IT IS BEING OPERATED IN 'DEMAND' MODE   @[@@@@LV
)@@G@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)   LW
)@@G@@       1-  3@[@@@@      @[@@@@      @[@@@@      @F@@@@ (FROM A TELETYPE)LX
)@@G@@ AND UNDERGOES A MODE CHANGE.  DEMAND RALPH IS  @G@@@@ PARTIALLY CONVERSLY
)@@G@@ATIONAL IN THAT IT PERMITS THE USER TO RE-ENTER A     @G@@@@ STATEMENT ILZ
)@@G@@F IT IS FOUND TO BE IN ERROR.  IN DEMAND MODE, RALPH IS     @E@@@@ CAREFMA
)@@G@@UL NOT TO FLOOD THE TELETYPE WITH UNWANTED PRINTING.  @[@@@@      @ @@@@MB
)@@G@@  1. 1. 1. 6.   RELIABILITY   @[@@@@      @G@@@@       BECAUSE OF ITS SIMC
)@@G@@MPLIFIED OPTIMIZATION ALGORITHMS, WHICH MAY     @G@@@@ BE TURNED OFF VIAMD
)@@G@@ THE 'O' OPTION IF DESIRED, RALPH IS FAR LESS APT     @E@@@@ TO OPTIMIZEME
)@@G@@ EXCESSIVELY TO THE POINT WHERE A PROGRAM IS    @D@@@@ MIS-COMPILED FROMMF
)@@G@@ OVER-OPTIMIZATION OF SOME KIND.    @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMG
)@@G@@MING WITH RALPH (DECEMBER 1971 VERSION)          1-  4@[@@@@      @[@@@@MH
)@@G@@      @[@@@@      @[@@@@      @[@@@@      @C@@@@  1. 2.   STATEMENT TYPEMI
)@@G@@S AND CLASSIFICATIONS   @[@@@@      @[@@@@      @F@@@@      THE STATEMENMJ
)@@G@@TS RECOGNIZED BY RALPH CAN BE GROUPED INTO 6    @]@@@@ CATEGORIES:@[@@@@MK
)@@G@@      @[@@@@      @[@@@@      @A@@@@       1)      ASSIGNMENT STATEMENTSML
)@@G@@@B@@@@       2)      PROGRAM CONTROL STATEMENTS @B@@@@       3)      INPMM
)@@G@@UT/OUTPUT STATEMENTS    @A@@@@       4)      SUBROUTINE STATEMENTS@B@@@@MN
)@@G@@       5)      DECLARATION STATEMENTS     @D@@@@       6)      MISCELLANMO
)@@G@@EOUS AND SPECIAL FEATURES     @[@@@@      @[@@@@      @[@@@@      @[@@@@MP
)@@G@@      @[@@@@      @A@@@@  1. 2. 1.   ASSIGNMENT STATEMENTS  @[@@@@      MQ
)@@G@@@F@@@@       AN ASSIGNMENT STATEMENT IS USED TO PERFORM ACTUAL CALCULA- MR
)@@G@@@F@@@@ TIONS.  ALL ASSIGNMENT STATEMENTS ASSIGN A VALUE TO A VARIABLE   MS
)@@G@@@B@@@@ BASED ON CALCULATIONS WITH EXISTING DATA.@[@@@@      @[@@@@      MT
)@@G@@@B@@@@  1. 2. 2.   PROGRAM CONTROL STATEMENTS   @[@@@@      @F@@@@      MU
)@@G@@ A PROGRAM CONTROL STATEMENT GOVERNS PROGRAM CONTROL AND    @F@@@@ FLOW.MV
)@@G@@  PROGRAM CONTROL STATEMENTS ('IF', 'GO TO', ETC.) CAN TEST @G@@@@ THE VMW
)@@G@@ALUES ASSIGNED TO VARIABLES AND CONDITIONALLY EXECUTE CERTAIN     @D@@@@MX
)@@G@@ SECTIONS OF THE PROGRAM DEPENDING UPON THESE VALUES. @[@@@@      @[@@@@MY
)@@G@@      @A@@@@  1. 2. 3.   INPUT/OUTPUT STATEMENTS@[@@@@      @G@@@@      MZ
)@@G@@ INPUT/OUTPUT STATEMENTS ARE USED TO GET DATA INTO THE COMPU-     @F@@@@NA
)@@G@@ TER AND TO OUTPUT THE RESULTS OF A PROGRAM.  BOTH SEQUENTIAL- AND@D@@@@NB
)@@G@@ RANDOM-ACCESS INPUT/OUTPUT CAPABILITIES ARE PROVIDED.@[@@@@      @[@@@@NC
)@@G@@      @A@@@@  1. 2. 4.   SUBROUTINE STATEMENTS  @[@@@@      @F@@@@      ND
)@@G@@ SUBROUTINE STATEMENTS ARE USED TO DEFINE AND CODE SUBROU-  @D@@@@ TINESNE
)@@G@@ AND FUNCTIONS, BOTH INTERNAL AND EXTERNAL.     @[@@@@      @[@@@@      NF
)@@G@@@A@@@@  1. 2. 5.   DECLARATION STATEMENTS @[@@@@*****^@G@@@@A GUIDE TO PNG
)@@G@@ROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          1-  5@[@@@@      NH
)@@G@@@[@@@@      @[@@@@      @[@@@@      @G@@@@       DECLARATION STATEMENTS NI
)@@G@@ARE USED TO ADJUST THE RALPH COMPILER     @F@@@@ ACTION ACCORDING TO SPENJ
)@@G@@CIFIC PROGRAM NEEDS.  DECLARATION STATE-  @F@@@@ MENTS CAN DECLARE THE MNK
)@@G@@ODE OF SPECIFIC PROGRAM VARIABLES, SET A  @ @@@@ GLOBAL IMPLICIT MODE, ENL
)@@G@@TC.   @[@@@@      @[@@@@      @E@@@@  1. 2. 6.   MISCELLANEOUS AND SPECINM
)@@G@@AL-PURPOSE STATEMENTS   @[@@@@      @F@@@@       THE MISCELLANEOUS STATENN
)@@G@@MENTS RECOGNIZED BY THE RALPH COMPI-@G@@@@ LER ARE DESIGNED TO ENABLE THNO
)@@G@@E RALPH USER TO TAKE ADVANTAGE OF THE     @F@@@@ CONSIDERABLE CAPABILITINP
)@@G@@ES OF THE 1108 HARDWARE AND EXECUTIVE     @#@@@@ SYSTEM SOFTWARE. @[@@@@NQ
)@@G@@      @[@@@@      @[@@@@      @[@@@@      @[@@@@      @[@@@@*****^@G@@@@NR
)@@G@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          1-  6NS
)@@G@@@[@@@@      @[@@@@      @[@@@@      @[@@@@      @[@@@@      @ @@@@  1. 3NT
)@@G@@.   RALPH UNDER EXEC 8  @[@@@@      @[@@@@      @F@@@@       THE 1108 ISNU
)@@G@@ UNDER CONTROL OF THE EXEC 8 MONITOR SYSTEM AT  @F@@@@ ALL TIMES.  RALPHNV
)@@G@@ OPERATES AS A GROUP OF INDEPENDENT 'USER' PRO- @F@@@@ GRAMS UNDER EXEC NW
)@@G@@8.  ONE OF THESE PROGRAMS IS LOADED EACH TIME A @G@@@@ USER WISHES TO CONX
)@@G@@MPILE A RALPH PROGRAM, WHILE THE OTHERS ARE LOADED    @F@@@@ ONLY ONCE FNY
)@@G@@OR ALL RALPH COMPILATIONS.  THE PERMANENTLY-RESIDENT  @G@@@@ SECTION CONNZ
)@@G@@TAINS THE ACTUAL CODE, OR INSTRUCTION BANK; THE SECTION     @F@@@@ LOADEOA
)@@G@@D EACH TIME CONTAINS THE DATA BANK.  THE INSTRUCTION BANK   @E@@@@ OCCUPOB
)@@G@@IES 19K(DECIMAL) LOCATIONS; THE DATA BANK CONTAINS    @F@@@@ 13K(DECIMALOC
)@@G@@) LOCATIONS.  THIS 'SPLIT' COMPILATION MODE IS CALLED @F@@@@ RE-ENTRANT OD
)@@G@@PROCESSING, AND IS DESIGNED TO CONSERVE CORE USAGE AND@]@@@@ LOAD TIME. OE
)@@G@@@[@@@@      @F@@@@       RALPH TRANSLATES SOURCE STATEMENTS INTO RELOCATOF
)@@G@@ABLE BINARY @F@@@@ TEXT IN MACHINE LANGUAGE (RELOCATABLE ELEMENTS).  ONEOG
)@@G@@ RELOCATABLE@G@@@@ ELEMENT IS PRODUCED FOR EACH RALPH COMPILATION.  THESOH
)@@G@@E RELOCATABLE     @F@@@@ ELEMENTS ARE GATHERED BY THE 'COLLECTOR' (TOGETOI
)@@G@@HER WITH NECESSARY@F@@@@ PROGRAMS FROM THE SYSTEM LIBRARY) TO FORM AN 'AOJ
)@@G@@BSOLUTE ELEMENT', @G@@@@ WHICH IS A PROGRAM READY FOR EXECUTION.  UNDER OK
)@@G@@MOST CIRCUMSTANCES,     @F@@@@ THE '@XQT' CARD IS THE SIGNAL TO FORM ANDOL
)@@G@@ EXECUTE THE ABSOLUTE   @]@@@@ ELEMENT.   @[@@@@      @[@@@@*****^@G@@@@OM
)@@G@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          2-  1ON
)@@G@@@[@@@@      @[@@@@      @[@@@@      @B@@@@  2.   COMPUTATION ON THE UNIVOO
)@@G@@AC 1108     @[@@@@      @[@@@@      @[@@@@      @[@@@@      @[@@@@      OP
)@@G@@@A@@@@  2. 1.   DESCRIPTION OF THE MACHINE@[@@@@      @[@@@@      @[@@@@OQ
)@@G@@      @A@@@@  2. 1. 1.   PROCESSOR AND MEMORY   @[@@@@      @F@@@@      OR
)@@G@@ THE UNIVAC 1108 IS A HIGH-SPEED BINARY THIRD-GENERATION    @F@@@@ SCIENOS
)@@G@@TIFICALLY-ORIENTED MACHINE.  IT HAS A BASIC MACHINE CYCLE OF@G@@@@ 750 NOT
)@@G@@ANOSECONDS, AND CAN HANDLE UP TO 262,144 WORDS OF 36-BIT CORE     @]@@@@OU
)@@G@@ MEMORY.    @[@@@@      @F@@@@       EACH COMPUTER WORD AND CONTROL REGIOV
)@@G@@STER HAS 36 BITS.  A    @G@@@@ NEGATIVE NUMBER IS REPRESENTED BY A FULLWOW
)@@G@@ORD BITWISE COMPLEMENT OF     @F@@@@ THE CORRESPONDING POSITIVE NUMBER, OX
)@@G@@THE LEFTMOST BIT IS TREATED AS@ @@@@ A SIGN BIT.  THUS, IN OCTAL  @[@@@@OY
)@@G@@      @A@@@@       THE NUMBER 9 IS 000000000011 @A@@@@       WHILE     -OZ
)@@G@@9 IS 777777777766 @[@@@@      @F@@@@       ALPHANUMERIC INFORMATION IS SPA
)@@G@@TORED INTERNALLY IN A 6-BIT   @F@@@@ CODE CALLED FIELDATA, WHICH IS DESIPB
)@@G@@GNED TO MAKE SORTING AND ALGE-@F@@@@ BRAIC OPERATIONS ON ALPHANUMERIC DAPC
)@@G@@TA MUCH EASIER THAN WITH CON- @#@@@@ VENTIONAL CODES. @[@@@@      @A@@@@PD
)@@G@@  2. 1. 2.   PERIPHERAL SUBSYSTEMS  @[@@@@      @F@@@@       AN 1108 HASPE
)@@G@@ BOTH SEQUENTIAL (TAPE) AND RANDOM (DRUM) EXTER-@F@@@@ NAL STORAGE CAPABPF
)@@G@@ILITIES.   A SEQUENTIAL FILE CAN BE SIMULATED ON@G@@@@ A RANDOM DEVICE. PG
)@@G@@ UP TO 16 DATA CHANNELS, WITH A MINIMUM OF 8, CAN     @F@@@@ BE CONNECTEPH
)@@G@@D, WITH NORMAL CONFIGURATIONS PLACING DEVICES OF DIF- @A@@@@ FERENT TYPEPI
)@@G@@S ON DIFFERENT CHANNELS.@[@@@@      @F@@@@       TAPE SUBSYSTEMS CAN TRAPJ
)@@G@@NSLATE THE IBM BCD TAPE CODE TO     @F@@@@ UNIVAC FIELDATA CODE, IF DESIPK
)@@G@@RED.  MOST TAPE SUBSYSTEMS HAVE BOTH@F@@@@ FORWARD AND BACKWARD READ CAPPL
)@@G@@ABILITIES, BUT THE READ-BACKWARD    @F@@@@ FEATURE IS NOT CURRENTLY AVAIPM
)@@G@@LABLE IN FORTRAN.  TAPE DENSITIES OF@F@@@@ 800, 556, AND 200 BPI ARE AVAPN
)@@G@@ILABLE.  9-TRACK AND 7-TRACK DRIVES @B@@@@ MAY BE CONNECTED TO THE SAME PO
)@@G@@CHANNEL.    @[@@@@      @G@@@@       DRUM SUBSYSTEMS ARE REFERENCED BY 'PP
)@@G@@SECTORS'.  A DRUM ADDRESS     @F@@@@ IS ALWAYS RELATIVE TO THE BEGINNINGPQ
)@@G@@ OF THE FILE, AND IS IN UNITS @F@@@@ OF SECTORS.  ONE SECTOR IS 28 WORDSPR
)@@G@@.  WORD-ADDRESSING HARDWARE IS@G@@@@ AVAILABLE, BUT FOR THE SAKE OF COMPPS
)@@G@@ATIBILITY, USER DRUM REFERENCES     @F@@@@ ARE CONVERTED BY THE EXECUTIVPT
)@@G@@E TO A 'LEAST COMMON DIVISOR' GRANU-@[@@@@*****^@G@@@@A GUIDE TO PROGRAMPU
)@@G@@MING WITH RALPH (DECEMBER 1971 VERSION)          2-  2@[@@@@      @[@@@@PV
)@@G@@      @[@@@@      @A@@@@ LARITY OF 28-WORD SECTOR ADDRESSES.@[@@@@      PW
)@@G@@@F@@@@       VARIOUS DRUM SPEEDS ARE AVAILABLE, THE FASTEST HAVING AN   PX
)@@G@@@F@@@@ AVERAGE ACCESS TIME OF 4 MILLISECONDS, TRANSFER RATE OF 260,000  PY
)@@G@@@F@@@@ WORDS/SECOND.  THE SLOWEST DEVICE, A 'FASTRAND' DRUM, HAS AN     PZ
)@@G@@@F@@@@ AVERAGE ACCESS TIME OF 90 MILLISECONDS AND A TRANSFER RATE OF    QA
)@@G@@@F@@@@ 110,000 WORDS PER SECOND.  A SINGLE FASTRAND DRUM HAS A CAPACITY QB
)@@G@@@F@@@@ OF ABOUT 22,000,000 36-BIT WORDS, WHICH IS APPROXIMATELY THE     QC
)@@G@@@G@@@@ EQUIVALENT OF FOUR HEAVILY-BLOCKED 800BPI 2400-FOOT REELS OF TAPEQD
)@@G@@.     @F@@@@ AS AN EXAMPLE OF ITS SIZE IN TERMS OF EVERYDAY OBJECTS, ONEQE
)@@G@@ FULL @F@@@@ FASTRAND DRUM CAN HOLD THE DATA FROM APPROXIMATELY 1,500,00QF
)@@G@@0     @#@@@@ PUNCHED CARDS.   @[@@@@      @ @@@@  2. 1. 3.   REMOTE COMPQG
)@@G@@UTING @[@@@@      @F@@@@       MOST 1108'S HAVE SOME SORT OF TELEPHONE-LQH
)@@G@@INE INTERFACE     @F@@@@ DEVICE CONNECTED TO ONE OR MORE OF THEIR DATA CQI
)@@G@@HANNELS; THE MOST @E@@@@ COMMON SUCH DEVICE IS THE 'COMMUNICATIONS TERMIQJ
)@@G@@NAL MODULE  @F@@@@ CONTROLLER', OR CTMC.  EACH CTMC CAN INTERFACE WITH UQK
)@@G@@P TO 32     @G@@@@ TELEPHONE LINES, ALLOWING A MULTITUDE OF REMOTE DEVICQL
)@@G@@ES TO BE USED     @#@@@@ WITH THE 1108.   @[@@@@      @F@@@@       ALMOSQM
)@@G@@T ANY SMALLER UNIVAC COMPUTER OR CARD PROCESSOR CAN BE@F@@@@ USED AS A RQN
)@@G@@EMOTE DEVICE; 1004 CARD PROCESSORS, 9200 AND 9300     @F@@@@ COMPUTERS, QO
)@@G@@AND DCT-2000 DATA COMMUNICATION TERMINALS ARE COMMONLY@ @@@@ USED AS BATQP
)@@G@@CH REMOTE DEVICES.@[@@@@      @F@@@@       A TELETYPE MAY ALSO BE CONNECQQ
)@@G@@TED TO THE CTMC.  THE TELETYPE@G@@@@ OPERATES IN A TOTALLY DIFFERENT MODQR
)@@G@@E, CALLED 'DEMAND'.  IN 'BATCH'     @F@@@@ MODE, AN ENTIRE DECK OF CARDSQS
)@@G@@ IS READ INTO A CARD READER, THE JOB@F@@@@ IS RUN, AND OUTPUT PRINTED ONQT
)@@G@@ A PRINTER.  IN 'DEMAND' MODE, INPUT@F@@@@ AND OUTPUT ARE INTERMIXED ON QU
)@@G@@THE SAME DEVICE, AND INPUT IS ACCEP-@F@@@@ TED AS THERE IS A DEMAND FOR QV
)@@G@@IT.  A DEMAND JOB HAS VASTLY HIGHER @G@@@@ PRIORITY WITH THE SYSTEM THANQW
)@@G@@ DOES THE COMPARABLE JOB SUBMITTED AS     @#@@@@ A BATCH JOB.     @[@@@@QX
)@@G@@      @F@@@@       ALMOST ALL OF THE FEATURES OF THE MONITOR SYSTEM ARE QY
)@@G@@AVAI- @F@@@@ LABLE TO THE DEMAND USER; THE ONLY ONES WHICH ARE NOT AVAILQZ
)@@G@@ABLE  @F@@@@ ARE THOSE CONCERNING DIRECT PRINT-FILE AND PUNCH-FILE MANIPRA
)@@G@@ULA-  @F@@@@ TION, FOR NO PRINT OR PUNCH FILES AS SUCH ARE GENERATED FORRB
)@@G@@ A    @]@@@@ DEMAND RUN.@[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RARC
)@@G@@LPH (DECEMBER 1971 VERSION)          2-  3@[@@@@      @[@@@@      @[@@@@RD
)@@G@@      @[@@@@      @[@@@@      @D@@@@  2. 2.   ARITHMETIC CAPABILITIES ANRE
)@@G@@D CHARACTERISTICS @[@@@@      @[@@@@      @[@@@@      @A@@@@  2. 2. 1.  RF
)@@G@@ INTEGER ARITHMETIC     @[@@@@      @[@@@@      @F@@@@       A SINGLEWORRG
)@@G@@D INTEGER ON THE 1108 OCCUPIES ONE 36-BIT COMPU-@G@@@@ TER WORD.  THE LERH
)@@G@@FTMOST BIT IS THE SIGN BIT, THE REMAINING 35 BITS     @F@@@@ REPRESENT TRI
)@@G@@HE MAGNITUDE.  AN INTEGER REPRESENTATION IS EXACT.    @[@@@@      @F@@@@RJ
)@@G@@       ON SOME MACHINES, INTEGER CALCULATIONS ARE PERFORMED USING @F@@@@RK
)@@G@@ ARITHMETIC MODULO THE WORD SIZE.  BECAUSE THE 1108 USES ONES'    @G@@@@RL
)@@G@@ COMPLEMENT NEGATIVE NOTATION, THE VALUE OF THE EXPRESSION   I+J IS     RM
)@@G@@@G@@@@ NOT DEFINED IF THE MAGNITUDE OF THE ALGEBRAIC SUM EXCEEDS 2**35  RN
)@@G@@-     @F@@@@ 1.  AS A COUNTEREXAMPLE, ON A SIGN-MAGNITUDE MACHINE (SUCH RO
)@@G@@AS THE@F@@@@ IBM 709/7090 SERIES), THE SUM  I+J  IS EVALUATED MODULO  2*RP
)@@G@@*35 - @[@@@@ 1.   @[@@@@      @F@@@@       THIS HARDWARE-LEVEL DIFFERENCRQ
)@@G@@E BETWEEN THE 1108 AND OTHER  @G@@@@ MACHINES IS ONE POSSIBLE REASON THARR
)@@G@@T A PROGRAM WRITTEN FOR ANOTHER     @F@@@@ MACHINE MIGHT NOT WORK PROPERRS
)@@G@@LY WITHOUT ALTERATION ON THE 1108.  @F@@@@ MOST RANDOM-NUMBER GENERATORSRT
)@@G@@, FOR EXAMPLE, USE SOME SORT OF     @F@@@@ MODULO ARITHMETIC.  UNLESS A RU
)@@G@@RANDOM NUMBER GENERATOR IS VERY     @F@@@@ CAREFULLY CODED TO BE MACHINERV
)@@G@@-INDEPENDENT, IT PROBABLY WILL NOT  @F@@@@ WORK ON THE 1108 WITHOUT ALTERW
)@@G@@RATIONS IF IT WORKED ON SOME OTHER  @]@@@@ MACHINE.   @[@@@@      @E@@@@RX
)@@G@@       AN INTEGER NUMBER MAY RANGE IN MAGNITUDE FROM 0 TO   @A@@@@ 34359RY
)@@G@@738367, WHICH IS 2**35  -  1. @[@@@@      @F@@@@ FOR INTEGERS, THE 36 BIRZ
)@@G@@TS OF A MACHINE WORD ARE PARTITIONED AS   @]@@@@ FOLLOWS:   @[@@@@      SA
)@@G@@@[@@@@      @B@@@@               SDDDDDDDDDDDDDDDDDDDDDDDDD @[@@@@      SB
)@@G@@@[@@@@      @C@@@@ WHERE         S        STANDS FOR THE SIGN BIT @C@@@@SC
)@@G@@       AND     D        STANDS FOR A DIGIT BIT  @[@@@@*****^@G@@@@A GUIDSD
)@@G@@E TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          2-  4@[@@@@SE
)@@G@@      @[@@@@      @[@@@@      @[@@@@      @[@@@@      @B@@@@  2. 2. 2.  SF
)@@G@@ FLOATING-POINT ARITHMETIC    @[@@@@      @F@@@@       A FLOATING-POINT SG
)@@G@@NUMBER IS AN APPROXIMATE REPRESENTATION OF@F@@@@ A REAL NUMBER IN TERMS SH
)@@G@@OF A CHARACTERISTIC (ALSO CALLED EXPONENT)@F@@@@ AND A FRACTION (ALSO CASI
)@@G@@LLED MANTISSA).  THE CHARACTERISTIC IS    @F@@@@ ALWAYS A POWER OF 2, ANSJ
)@@G@@D THE FRACTION IS ALWAYS BETWEEN 1/2 AND 1@C@@@@ FOR EXAMPLE, THE NUMBERSK
)@@G@@ 3.0 IS REPRESENTABLE AS@[@@@@      @^@@@@       0.75 * (2**2)    @[@@@@SL
)@@G@@      @F@@@@       27 BITS ARE DEVOTED TO THE MANTISSA, 8 TO THE CHARACTSM
)@@G@@ERI-  @F@@@@ STIC, AND 1 IS USED AS A SIGN BIT.  THE CHARACTERISTIC IS OSN
)@@G@@FFSET @F@@@@ BY OCTAL 0200.  FOR A COMPLETE DESCRIPTION OF FLOATING POINSO
)@@G@@T     @F@@@@ FORMAT AND PROCESSING, SEE THE SECTION ENTITLED 'FLOATING PSP
)@@G@@OINT  @F@@@@ ARITHMETIC' IN THE UNIVAC 1108 'PROCESSOR AND STORAGE' MANUSQ
)@@G@@AL,   @C@@@@ UNIVAC PUBLICATION UP-4053, SECTION 7 PAGE 21. @[@@@@      SR
)@@G@@@F@@@@       ONE IMPORTANT, OFTEN-MISUNDERSTOOD POINT ABOUT FLOATING    SS
)@@G@@@F@@@@ POINT NUMBERS HINGES ON THE CONSTRUCTION OF THE MANTISSA AS A    ST
)@@G@@@D@@@@ TERMINATING BINARY FRACTION, I.E., A SUM OF THE FORM @[@@@@      SU
)@@G@@@D@@@@       B1/2  +  B2/4  +  B3/8  + ... + B27/134217728  @[@@@@      SV
)@@G@@@F@@@@       WHERE THE BI ARE EITHER 0 OR 1.  ONLY A SMALL NUMBER OF    SW
)@@G@@@G@@@@ DECIMAL FRACTIONS CAN BE REPRESENTED EXACTLY AS TERMINATING BINARSX
)@@G@@Y     @F@@@@ FRACTIONS.  AS A SIMPLE EXAMPLE, THE DECIMAL FRACTION 0.1 HSY
)@@G@@AS NO @G@@@@ REPRESENTATION AS A TERMINATING BINARY FRACTION.  THUS, THESZ
)@@G@@ CALCU-     @]@@@@ LATION     @[@@@@      @^@@@@       Y = 10.0 * 0.1   TA
)@@G@@@[@@@@      @F@@@@ WILL NOT YIELD AN EXACT 1.0.  THE STUDY OF HOW TO BOUTB
)@@G@@ND AND AVOID@F@@@@ THIS 'ROUNDOFF' ERROR HAS TROUBLED MATHEMATICIANS FORTC
)@@G@@ CENTURIES. @[@@@@      @E@@@@       A FLOATING-POINT NUMBER MAY RANGE ITD
)@@G@@N MAGNITUDE FROM  @F@@@@ 1.469E-39 TO 1.701E+38, OR IT MAY BE 0.  THE 'ETE
)@@G@@' FOLLOWED BY A   @B@@@@ NUMBER MEANS 'TIMES TEN TO THE POWER'.   @[@@@@TF
)@@G@@      @[@@@@      @F@@@@ FOR (SINGLE-PRECISION) FLOATING-POINT NUMBERS, TG
)@@G@@THE 36 BITS OF A  @A@@@@ MACHINE WORD ARE INTERPRETED AS:   @[@@@@      TH
)@@G@@@D@@@@               SCCCCCCCCMMMMMMMMMMMMMMMMMMMMMMMMMMM   @[@@@@      TI
)@@G@@@B@@@@ WHERE         S        IS THE SIGN BIT   @C@@@@               C  TJ
)@@G@@      ARE CHARACTERISTIC BITS @B@@@@       AND     M        ARE MANTISSATK
)@@G@@ BITS.@[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971TL
)@@G@@ VERSION)          2-  5@[@@@@      @[@@@@      @[@@@@      @[@@@@      TM
)@@G@@@[@@@@      @B@@@@  2. 2. 3.   DOUBLE-PRECISION ARITHMETIC  @[@@@@      TN
)@@G@@@D@@@@       A DOUBLE-PRECISION NUMBER IS IDENTICAL TO A    @F@@@@ (SINGTO
)@@G@@LE-PRECISION) FLOATING-POINT NUMBER SAVE FOR THE NUMBER OF  @G@@@@ BITS TP
)@@G@@RESERVED FOR EACH FIELD.  THE NUMBER ITSELF OCCUPIES 2 COMPU-     @F@@@@TQ
)@@G@@ TER WORDS (HENCE THE NAME 'DOUBLE PRECISION'), ALLOWING 11 BITS  @G@@@@TR
)@@G@@ FOR CHARACTERISTIC, 60 FOR MANTISSA, AND STILL 1 FOR THE SIGN.  IT     TS
)@@G@@@F@@@@ YIELDS SLIGHTLY BETTER THAN TWICE THE PRECISION, COUPLED WITH A  TT
)@@G@@@C@@@@ CONSIDERABLE INCREASE IN MAGNITUDE LIMITS.     @[@@@@      @E@@@@TU
)@@G@@       A DOUBLE-PRECISION NUMBER MAY RANGE IN MAGNITUDE FROM@B@@@@ 2.781TV
)@@G@@E-309 TO 8.988E+307, OR IT MAY BE 0.@[@@@@      @F@@@@ FOR DOUBLE-PRECISTW
)@@G@@ION FLOATING POINT NUMBERS, THE 72 BITS OF TWO  @D@@@@ CONSECUTIVE MACHITX
)@@G@@NE WORDS ARE PARTITIONED AS FOLLOWS:@[@@@@      @[@@@@      @E@@@@      TY
)@@G@@ WORD 1:       SCCCCCCCCCCCMMMMMMMMMMMMMMMMMMMMMMMM   @[@@@@      @E@@@@TZ
)@@G@@       WORD 2:       MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM   @[@@@@      UA
)@@G@@@[@@@@      @B@@@@ WHERE         S        IS THE SIGN BIT   @C@@@@      UB
)@@G@@         C        ARE CHARACTERISTIC BITS @B@@@@       AND     M        UC
)@@G@@ARE MANTISSA BITS @[@@@@      @[@@@@      @G@@@@       NOTICE THAT THE FUD
)@@G@@IRST WORD OF A DOUBLE-PRECISION NUMBER DOES     @F@@@@ NOT HAVE THE SAMEUE
)@@G@@ FORM AS A SINGLE-PRECISION NUMBER, AS IS TRUE  @^@@@@ WITH SOME MACHINEUF
)@@G@@S.    @[@@@@      @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DUG
)@@G@@ECEMBER 1971 VERSION)          3-  1@[@@@@      @[@@@@      @[@@@@      UH
)@@G@@@D@@@@  3.   SYNTACTIC ELEMENTS OF RALPH SOURCE STATEMENTS  @[@@@@      UI
)@@G@@@[@@@@      @[@@@@      @G@@@@       THE RALPH COMPILER BREAKS SOURCE STUJ
)@@G@@ATEMENTS DOWN INTO SIMPLE     @F@@@@ COMBINATIONS OF TWO SYNTACTIC OPERAUK
)@@G@@NDS AND ONE OPERATOR.  THIS   @F@@@@ COMBINATION IS CALLED A TRIPLE.  ANUL
)@@G@@Y SOURCE STATEMENT, NO MATTER @F@@@@ HOW COMPLEX, CAN BE DISASSEMBLED INUM
)@@G@@TO A SEQUENCE OF TRIPLES.     @[@@@@      @[@@@@      @F@@@@       OPERAUN
)@@G@@TORS ARE OF TWO TYPES:  UNARY AND BINARY.  A UNARY    @F@@@@ OPERATOR HAUO
)@@G@@S A SINGLE OPERAND, WHILE A BINARY OPERATOR HAS TWO   @]@@@@ OPERANDS.  UP
)@@G@@@[@@@@      @[@@@@      @D@@@@       OPERANDS CAN BE CLASSIFIED INTO 5 BUQ
)@@G@@ASIC TYPES: @[@@@@      @[@@@@      @^@@@@       1)      CONSTANTS@^@@@@UR
)@@G@@       2)      VARIABLES@A@@@@       3)      SUBROUTINE PARAMETERS@A@@@@US
)@@G@@       4)      FUNCTION REFERENCES  @F@@@@       5)      COMPILER-GENERAUT
)@@G@@TED INTERNAL OPERANDS (TEMPORARIES) @[@@@@      @[@@@@      @[@@@@      UU
)@@G@@@F@@@@       EACH OPERAND HAS A UNIQUE MODE, EITHER IMPLICITLY ASSIGNED UV
)@@G@@@F@@@@ BY THE COMPILER OR EXPLICITLY SPECIFIED BY THE USER.  OPERATORS  UW
)@@G@@@F@@@@ ARE DEFINED TO OPERATE ONLY ON OPERANDS OF GIVEN MODES:  FOR     UX
)@@G@@@F@@@@ EXAMPLE, THE .GT. COMPARATIVE OPERATOR (GREATER THAN) IS NOT     UY
)@@G@@@E@@@@ DEFINED FOR OPERANDS OF COMPLEX MODE, BECAUSE THERE IS NO  @G@@@@UZ
)@@G@@ COMMONLY-RECOGNIZED PARTIAL ORDERING DEFINED ON THE COMPLEX FIELD.     VA
)@@G@@@F@@@@ MANY RALPH ERROR CONDITIONS RESULT FROM ILLEGAL OPERATOR-MODE    VB
)@@G@@@F@@@@ COMBINATIONS, SO THAT AN UNDERSTANDING OF THE 'TRIPLE' BREAKDOWN VC
)@@G@@@F@@@@ SYSTEM IS VITAL TO UNDERSTANDING ERROR MESSAGES AND TO CODING    VD
)@@G@@@ @@@@ EFFICIENT RALPH PROGRAMS.    @[@@@@      @[@@@@      @[@@@@      VE
)@@G@@@[@@@@      @[@@@@      @#@@@@  3. 1.   MODES   @[@@@@      @[@@@@      VF
)@@G@@@[@@@@      @[@@@@      @B@@@@       THE MODES  RECOGNIZED BY RALPH ARE VG
)@@G@@@[@@@@      @[@@@@      @A@@@@       MODE #           MODE NAME   @[@@@@VH
)@@G@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)   VI
)@@G@@       3-  2@[@@@@      @[@@@@      @[@@@@      @A@@@@       ======     VJ
)@@G@@      =========   @[@@@@      @[@@@@      @A@@@@         0              VK
)@@G@@MODELESS    @A@@@@         1              INTEGER     @C@@@@         2  VL
)@@G@@            REAL (FLOATING POINT)   @B@@@@         3              DOUBLEVM
)@@G@@ PRECISION  @A@@@@         4              COMPLEX     @B@@@@         5  VN
)@@G@@            LOGICAL (BOOLEAN) @B@@@@         6              FUNCTION-NAMVO
)@@G@@E     @B@@@@         7              STATEMENT-LABEL   @A@@@@         8  VP
)@@G@@            ALPHABETIC  @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RAVQ
)@@G@@LPH (DECEMBER 1971 VERSION)          3-  3@[@@@@      @[@@@@      @[@@@@VR
)@@G@@      @[@@@@      @[@@@@      @#@@@@  3. 2.   OPERANDS@[@@@@      @[@@@@VS
)@@G@@      @[@@@@      @^@@@@  3. 2. 1.   CONSTANTS  @[@@@@      @F@@@@      VT
)@@G@@ ANY CONSTANT HAS AN IMPLICIT MODE DETERMINED BY ITS STRUC- @^@@@@ TURE.VU
)@@G@@  FOR EXAMPLE     @[@@@@      @[@@@@      @A@@@@       23      IS IMPLICVV
)@@G@@ITLY INTEGER@D@@@@       23.0    IS IMPLICITLY REAL (FLOATING POINT)    VW
)@@G@@@[@@@@      @[@@@@      @F@@@@       ANY CONSTANT CAN BE ASSIGNED ANY MOVX
)@@G@@DE BY SUFFIXING IT WITH @F@@@@ THE LETTER 'M' FOLLOWED BY THE MODE NUMBEVY
)@@G@@R OF THE DESIRED MODE.  @E@@@@ FOR EXAMPLE,    23.0M1   WILL BE TREATED VZ
)@@G@@AS AN INTEGER.    @[@@@@      @[@@@@      @[@@@@      @[@@@@      @A@@@@WA
)@@G@@  3. 2. 1. 1.   INTEGER CONSTANTS   @[@@@@      @F@@@@ AN INTEGER CONSTAWB
)@@G@@NT CONSISTS OF A STRING OF DIGITS CONTAINING NO @F@@@@ DECIMAL POINT OR WC
)@@G@@EXPLICIT EXPONENT.  IT MAY BE EITHER OCTAL (BASE@ @@@@ 8) OR DECIMAL (BAWD
)@@G@@SE 10).     @[@@@@      @[@@@@      @F@@@@       A DECIMAL CONSTANT IS AWE
)@@G@@ STRING OF FROM 1 TO 11 DIGITS,     @F@@@@       OPTIONALLY PREFIXED BY WF
)@@G@@A SIGN ('+' OR '-'), WHOSE MAGNITUDE@D@@@@       MAY RANGE FROM 0 TO 343WG
)@@G@@59738367 (2**35 - 1).   @[@@@@      @[@@@@      @^@@@@               EXAWH
)@@G@@MPLES:@^@@@@               =========@[@@@@      @E@@@@               12 WI
)@@G@@      -32      12350219987      -23011114 @[@@@@      @[@@@@      @F@@@@WJ
)@@G@@       AN OCTAL CONSTANT IS AN UNSIGNED STRING OF FROM 1 TO 12    @F@@@@WK
)@@G@@       DIGITS FROM THE SET [0,1,2,3,4,5,6,7], FOLLOWED BY THE     @G@@@@WL
)@@G@@       LETTER 'K'.  IT MAY RANGE FROM 000000000000 TO 777777777777.     WM
)@@G@@@G@@@@       ANY 12-DIGIT OCTAL CONSTANT WHOSE LEADING DIGIT IS 4,5,6, OWN
)@@G@@R     @F@@@@       7 WILL BE TREATED AS NEGATIVE IF USED IN ARITHMETIC OWO
)@@G@@PERA- @G@@@@       TIONS.  A DECIMAL NUMBER FOLLOWING THE 'K' WILL BE INWP
)@@G@@TERPRE-     @G@@@@       TED AS THE NUMBER OF TRAILING OCTAL ZEROS TO BEWQ
)@@G@@ FILLED IN BY     @^@@@@       THE COMPILER.    @[@@@@*****^@G@@@@A GUIDWR
)@@G@@E TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          3-  4@[@@@@WS
)@@G@@      @[@@@@      @[@@@@      @^@@@@               EXAMPLES:@^@@@@      WT
)@@G@@         =========@[@@@@      @F@@@@               32K   477K   233K9 (=WU
)@@G@@233000000000K)   410113777000K@[@@@@      @[@@@@      @[@@@@      @[@@@@WV
)@@G@@      @C@@@@  3. 2. 1. 2.   REAL (FLOATING POINT) CONSTANTS @[@@@@      WW
)@@G@@@F@@@@       A REAL (FLOATING POINT) CONSTANT IS A STRING OF DIGITS     WX
)@@G@@@F@@@@ CONTAINING A DECIMAL POINT, AN EXPLICIT EXPONENT, OR BOTH.  AN   WY
)@@G@@@F@@@@ EXPLICIT EXPONENT IS REPRESENTED BY THE LETTER 'E' FOLLOWED BY ANWZ
)@@G@@@G@@@@ OPTIONALLY SIGNED INTEGER CONSTANT, AND STANDS FOR THE POWER OF 1XA
)@@G@@0     @F@@@@ BY WHICH THE REMAINDER OF THE CONSTANT IS TO BE MULTIPLIED.XB
)@@G@@  AN  @G@@@@ EXPLICIT EXPONENT IS ALWAYS PUNCHED AS A SUFFIX TO THE BODYXC
)@@G@@ OF THE     @]@@@@ CONSTANT.  @[@@@@      @[@@@@      @^@@@@            XD
)@@G@@   EXAMPLES:@^@@@@               =========@[@@@@      @D@@@@       THE FXE
)@@G@@OLLOWING REAL CONSTANTS ARE EQUIVALENT:   @[@@@@      @E@@@@       -2.44XF
)@@G@@   -.244E+1   -24.4E-1   -2.44E0  -000.0244E2   @[@@@@      @F@@@@      XG
)@@G@@ A REAL CONSTANT MAY RANGE IN MAGNITUDE FROM 1.469E-39 TO   @E@@@@ 1.701XH
)@@G@@E+38.  ANY PRECISION PAST 8 DIGITS WILL BE IGNORED.   @[@@@@      @[@@@@XI
)@@G@@      @B@@@@  3. 2. 1. 3.   DOUBLE-PRECISION CONSTANTS@[@@@@      @F@@@@XJ
)@@G@@       A DOUBLE-PRECISION CONSTANT IS A STRING OF DIGITS, POSSIBLY@F@@@@XK
)@@G@@ INCLUDING A DECIMAL POINT AND/OR A SIGN, FOLLOWED BY THE LETTER  @E@@@@XL
)@@G@@ 'D' FOLLOWED BY AN OPTIONALLY SIGNED INTEGER CONSTANT.     @[@@@@      XM
)@@G@@@[@@@@      @^@@@@               EXAMPLES:@^@@@@               =========XN
)@@G@@@[@@@@      @[@@@@      @D@@@@               2.431D291     -14D-3      -XO
)@@G@@9.44D+88    @[@@@@      @[@@@@      @[@@@@      @F@@@@       A DOUBLE-PRXP
)@@G@@ECISION CONSTANT MAY RANGE IN MAGNITUDE FROM    @F@@@@ 2.781D-309 TO 8.9XQ
)@@G@@88D+307.  ANY PRECISION PAST 19 DIGITS WILL BE  @]@@@@ IGNORED.   @[@@@@XR
)@@G@@      @A@@@@  3. 2. 1. 4.   COMPLEX CONSTANTS   @[@@@@*****^@G@@@@A GUIDXS
)@@G@@E TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          3-  5@[@@@@XT
)@@G@@      @[@@@@      @[@@@@      @[@@@@      @F@@@@       A COMPLEX CONSTANXU
)@@G@@T IS AN ORDERED PAIR OF REAL OR INTEGER   @F@@@@ CONSTANTS, ENCLOSED IN XV
)@@G@@PARENTHESES AND SEPARATED BY A COMMA.  THE@F@@@@ FIRST ELEMENT OF THE PAXW
)@@G@@IR IS THE REAL PART, THE SECOND ELEMENT IS@^@@@@ THE IMAGINARY PART.    XX
)@@G@@@[@@@@      @[@@@@      @^@@@@               EXAMPLES:@C@@@@       (2,4)XY
)@@G@@    (-1.0,1.0)   (3.8E10,-12.E-19)  @[@@@@      @F@@@@       EACH ELEMENXZ
)@@G@@T OF A COMPLEX CONSTANT HAS THE SAME RANGE AND  @B@@@@ ACCURACY LIMITATIYA
)@@G@@ONS AS A REAL CONSTANT. @[@@@@      @[@@@@      @C@@@@  3. 2. 1. 5.   LOYB
)@@G@@GICAL (BOOLEAN) CONSTANTS     @[@@@@      @F@@@@       A LOGICAL VARIABLYC
)@@G@@E CAN ASSUME ONE OF TWO VALUES:  TRUE OR  @D@@@@ FALSE.  THUS, THERE AREYD
)@@G@@ ONLY TWO  LOGICAL CONSTANTS. @[@@@@      @F@@@@       THE LOGICAL CONSTYE
)@@G@@ANT DENOTING 'TRUE' CAN BE REPRESENTED AS @F@@@@ EITHER .TRUE. OR BY THEYF
)@@G@@ DIGIT 1 SUFFIXED BY THE LETTER 'B' (FOR  @#@@@@ BOOLEAN):  1B.   @[@@@@YG
)@@G@@      @F@@@@       THE LOGICAL CONSTANT DENOTING 'FALSE' CAN BE REPRESENYH
)@@G@@TED AS@F@@@@ EITHER .FALSE. OR AS THE DIGIT 0 SUFFIXED BY THE LETTER 'B'YI
)@@G@@ (FOR @#@@@@ BOOLEAN):  0B.   @[@@@@      @[@@@@      @B@@@@  3. 2. 1. 6YJ
)@@G@@.   FUNCTION-NAME CONSTANTS   @[@@@@      @F@@@@       A FUNCTION-NAME CYK
)@@G@@ONSTANT IS SIMPLY A FUNCTION.  SEE SECTION@F@@@@ 3.2.4 FOR A DISCUSSION YL
)@@G@@OF FUNCTIONS AS OPERANDS.  THE DIFFERENCE @G@@@@ BETWEEN REFERENCING A FYM
)@@G@@UNCTION AS A FUNCTION OR AS A FUNCTION-NAME     @F@@@@ CONSTANT SHOWS UPYN
)@@G@@ AS WHETHER THE FUNCTION IS EVALUATED.  A RE-   @F@@@@ FERENCE TO A FUNCYO
)@@G@@TION AS A FUNCTION-REFERENCE OPERAND ACTUALLY   @F@@@@ CALLS THE FUNCTIOYP
)@@G@@N TO PERFORM WHATEVER CALCULATIONS THE FUNCTION @E@@@@ IS SUPPOSED TO PEYQ
)@@G@@RFORM.  A REFERENCE TO A FUNCTION AS A    @E@@@@ FUNCTION-NAME CONSTANT YR
)@@G@@DOES NOT ACTUALLY CALL THE FUNCTION.@F@@@@ SYNTACTICALLY, THIS DIFFERENCYS
)@@G@@E IS EXPRESSED BY THE PRESENCE OR   @F@@@@ ABSENCE OF CALLING ARGUMENTS.YT
)@@G@@  FOR EXAMPLE, THE FORTRAN STATEMENT@[@@@@      @#@@@@       Y = SQRT(X)YU
)@@G@@@[@@@@      @^@@@@ OR ITS MAD EQUIVALENT  @[@@@@      @^@@@@       Y = SYV
)@@G@@QRT.(X)     @[@@@@      @F@@@@       WILL CAUSE THE VARIABLE Y TO BE GIVYW
)@@G@@EN A VALUE WHICH IS THE @G@@@@ SQUARE ROOT OF X.  X AND Y ARE ASSUMED TOYX
)@@G@@ BE OF SOME COMPUTATIONAL     @F@@@@ MODE.  THIS IS A FUNCTION REFERENCEYY
)@@G@@.  ON THE OTHER HAND, THE     @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WYZ
)@@G@@ITH RALPH (DECEMBER 1971 VERSION)          3-  6@[@@@@      @[@@@@      ZA
)@@G@@@[@@@@      @#@@@@ FORTRAN SEQUENCE @[@@@@      @^@@@@       EXTERNAL SQZB
)@@G@@RT    @#@@@@       YY = SQRT  @[@@@@      @^@@@@ OR ITS MAD EQUIVALENT  ZC
)@@G@@@[@@@@      @#@@@@       YY = SQRT. @[@@@@      @E@@@@       WILL CAUSE ZD
)@@G@@THE VARIABLE YY, WHICH MUST BE DECLARED   @F@@@@ FUNCTION-NAME MODE, TO ZE
)@@G@@BE ASSIGNED A VALUE CORRESPONDING TO THE  @F@@@@ NAME 'SQRT' RATHER THANZF
)@@G@@ TO THE SQUARE ROOT OF ANY PARTICULAR     @G@@@@ NUMBER.  IN FORTRAN, THZG
)@@G@@E 'EXTERNAL' STATEMENT (SECTION 8.1.4) MUST     @F@@@@ BE USED TO DISTINZH
)@@G@@GUISH THE FUNCTION NAME 'SQRT' FROM A SIMPLE    @]@@@@ VARIABLE.  @[@@@@ZI
)@@G@@      @[@@@@      @B@@@@  3. 2. 1. 7.   STATEMENT-LABEL CONSTANTS @[@@@@ZJ
)@@G@@      @E@@@@       A STATEMENT-LABEL CONSTANT IS A STATEMENT LABEL.     ZK
)@@G@@@[@@@@      @F@@@@       IN FORTRAN A STATEMENT LABEL IS AN INTEGER FROMZL
)@@G@@ 1 TO 99999 @E@@@@ PUNCHED ANYWHERE IN COLUMNS 1 THROUGH 5 OF THE SOURCEZM
)@@G@@ CARD.@^@@@@ BLANKS ARE IGNORED.    @[@@@@      @G@@@@       WHEN A FORTZN
)@@G@@RAN STATEMENT NUMBER IS REFERENCED IN AN ARITHME-     @G@@@@ TIC CONTEXTZO
)@@G@@, IT MUST BE PREFIXED WITH A SENTINEL CHARACTER SO THAT     @G@@@@ THE CZP
)@@G@@OMPILER CAN DISTINGUISH IT FROM AN ORDINARY INTEGER CONSTANT.     @F@@@@ZQ
)@@G@@ LEGAL SENTINEL CHARACTERS ARE THE DOLLAR SIGN ($) AND THE AMPER- @]@@@@ZR
)@@G@@ SAND (&).  @[@@@@      @[@@@@      @^@@@@               EXAMPLES:@^@@@@ZS
)@@G@@               =========@[@@@@      @D@@@@               $13321 REFERS TZT
)@@G@@O STATEMENT NUMBER 13321@D@@@@               &2110 REFERS TO STATEMENT NZU
)@@G@@UMBER 2110  @[@@@@      @F@@@@       IN MAD, A STATEMENT LABEL IS A VARIZV
)@@G@@ABLE, POSSIBLY WITH A   @F@@@@ SINGLE CONSTANT SUBSCRIPT, WHICH IS PUNCHZW
)@@G@@ED IN COLUMNS 1 THROUGH @F@@@@ 10 OF THE SOURCE CARD.  IF A VARIABLE OCCZX
)@@G@@URS AS A STATEMENT LABEL@F@@@@ WITH CONSTANT SUBSCRIPT(S), IT WILL BE AUZY
)@@G@@TOMATICALLY DIMENSIONED @B@@@@ TO THE MAXIMUM OF THE PUNCHED SUBSCRIPTS.ZZ
)@@G@@@[@@@@      @[@@@@      @A@@@@  3. 2. 1. 8.   ALPHABETIC CONSTANTS@[@@@@AA
)@@G@@      @F@@@@       AN ALPHABETIC CONSTANT IS AN ARBITRARY-LENGTH STRING AB
)@@G@@OF    @F@@@@ CHARACTERS ENCLOSED IN THE ALPHABETIC-DELIMITER CHARACTER. AC
)@@G@@ IN   @F@@@@ FORTRAN, THE APOSTROPHE ('), AND IN MAD, THE DOLLAR SIGN ($AD
)@@G@@),    @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971AE
)@@G@@ VERSION)          3-  7@[@@@@      @[@@@@      @[@@@@      @F@@@@ SERVEAF
)@@G@@ AS ALPHABETIC DELIMITERS.  IF IT IS DESIRED TO INCLUDE A   @G@@@@ DELIMAG
)@@G@@ITER IN THE STRING, TWO CONSECUTIVE DELIMITERS WILL BE INTER-     @F@@@@AH
)@@G@@ PRETED AS A SINGLE CHARACTER AND WILL NOT TERMINATE THE STRING.  @[@@@@AI
)@@G@@      @F@@@@       INTERNAL REPRESENTATION OF ALPHABETIC INFORMATION IS AJ
)@@G@@6     @G@@@@ CHARACTERS PER COMPUTER WORD, 6 BITS PER CHARACTER, LEFT-JUAK
)@@G@@STIFIED     @G@@@@ WITH TRAILING BLANKS IF NOT AN EVEN MULTIPLE OF 6 CHAAL
)@@G@@RACTERS.  THE     @F@@@@ CONSTRUCTION  NHX  IS ALSO LEGAL, WHERE 'N' IS AM
)@@G@@THE NUMBER OF     @G@@@@ CHARACTERS IN THE STRING, 'H' IS THE LETTER H (AN
)@@G@@FOR HOLLERITH), AND     @C@@@@ X IS THE N CHARACTERS COMPRISING THE STRIAO
)@@G@@NG.   @[@@@@      @F@@@@       AN ALPHABETIC CONSTANT WHICH WILL BE USEDAP
)@@G@@ IN ARITHMETIC    @G@@@@ EXPRESSIONS IS LIMITED TO 6 OR FEWER CHARACTERSAQ
)@@G@@ (1 COMPUTER WORD).     @[@@@@      @[@@@@      @^@@@@               EXAAR
)@@G@@MPLES:@^@@@@               =========@[@@@@      @B@@@@       FORTRAN    AS
)@@G@@                     MAD@B@@@@       =======                         ===AT
)@@G@@@[@@@@      @F@@@@       '@ASG,T  FILE,F2 . '            $@USE  9,INPUTTAU
)@@G@@APE . $     @E@@@@       3HABC                           $1X,24I2,I6,E20AV
)@@G@@.15*$ @F@@@@        'AE47,23HGGG$'                 19HXYABXYAB..../\/\((AW
)@@G@@)     @[@@@@      @F@@@@       (THE FOLLOWING TWO STRINGS BOTH CONTAIN AAX
)@@G@@ PAIR OF APOSTRO- @]@@@@       PHES)@[@@@@      @C@@@@       ''''''     AY
)@@G@@                     $''$     @[@@@@      @F@@@@       (THE FOLLOWING TWAZ
)@@G@@O STRINGS BOTH CONTAIN A PAIR OF DOLLAR   @#@@@@       SIGNS)     @[@@@@BA
)@@G@@      @C@@@@       '$$'                            $$$$$$   @[@@@@      BB
)@@G@@@[@@@@      @[@@@@      @[@@@@      @[@@@@      @[@@@@      @^@@@@  3. 2BC
)@@G@@. 2.   VARIABLES  @[@@@@      @[@@@@      @[@@@@      @F@@@@       A VARBD
)@@G@@IABLE IS A STRING OF FROM 1 TO 6 CHARACTERS FROM THE  @F@@@@ SET [A,B,..BE
)@@G@@.,Z,0,1,...,9,^], WHICH BEGINS WITH A LETTER OR WITH A@]@@@@ DELTA (^). BF
)@@G@@@[@@@@      @[@@@@      @^@@@@               EXAMPLES:@[@@@@*****^@G@@@@BG
)@@G@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          3-  8BH
)@@G@@@[@@@@      @[@@@@      @[@@@@      @^@@@@               =========@[@@@@BI
)@@G@@      @A@@@@       A       X       B23     H^   @B@@@@       ^X      ARRBJ
)@@G@@AY   VARBLE  ^^^^^^     @[@@@@      @F@@@@       IF DESIRED, A VARIABLE BK
)@@G@@MAY BE USED WITH SUBSCRIPTS.  A     @F@@@@ SUBSCRIPT IS PLACED IN PARENTBL
)@@G@@HESES AND SUFFIXED TO THE ACTUAL    @F@@@@ VARIABLE.  IF MULTIPLE SUBSCRBM
)@@G@@IPTS ARE BEING USED ON ONE VARIABLE,@F@@@@ SUBSCRIPT EXPRESSIONS ARE SEPBN
)@@G@@ARATED BY COMMAS WITHIN THE PAREN-  @F@@@@ THESES.  A VARIABLE WITH NO SBO
)@@G@@UBSCRIPTS IS SOMETIMES CALLED A     @F@@@@ 'SCALAR', A VARIABLE WITH A SBP
)@@G@@INGLE SUBSCRIPT  IS SOMETIMES CALLED@F@@@@ A 'VECTOR'.  A SINGLE SUBSCRIBQ
)@@G@@PT IS REFERRED TO AS A LINEAR SUBS- @F@@@@ CRIPT.  ANY SUBSCRIPTED VARIABR
)@@G@@BLE MAY BE CALLED AN ARRAY.  MAXIMUM@F@@@@ SUBSCRIPT RANGE MUST BE SPECIBS
)@@G@@FIED IN ADVANCE THROUGH THE USE OF  @C@@@@ THE 'DIMENSION' STATEMENT (SEBT
)@@G@@E SECTION 7.1.1). @[@@@@      @G@@@@       THERE IS NO DESIGN LIMIT TO TBU
)@@G@@HE NUMBER OF SUBSCRIPTS WHICH A     @F@@@@ VARIABLE MAY HAVE.  SOME DIFFBV
)@@G@@ICULTY WILL BE ENCOUNTERED WITH MORE@G@@@@ THAN ABOUT 180 SUBSCRIPTS UNLBW
)@@G@@ESS THE USER TAKES CARE TO SET UP HIS     @G@@@@ OWN STRUCTURE VECTOR (SBX
)@@G@@EE SECTION 8.1.1.6).  THIS LIMITATION IS IN     @F@@@@ THE 'DIMENSION' SBY
)@@G@@TATEMENT, RATHER THAN IN THE SUBSCRIPT CALCULA- @F@@@@ TION ITSELF.  ONEBZ
)@@G@@ OF THE ARBITRARILY-SET INTERNAL LOOP-CHECKING  @F@@@@ PARAMETERS IN THECA
)@@G@@ RALPH COMPILER ITSELF WILL STOP COMPILATION IF @G@@@@ MORE THAN ABOUT 1CB
)@@G@@95 SUBSCRIPTS ARE SPECIFIED FOR A GIVEN VARIABLE.     @G@@@@ ALL OF THESCC
)@@G@@E NUMBERS ARE APPROXIMATE, AND DEPEND UPON THE COMPLEXI-    @ @@@@ TY OFCD
)@@G@@ THE STATEMENT INVOLVED.@[@@@@      @F@@@@       A LINEAR SUBSCRIPT MAY CE
)@@G@@BE ANY EXPRESSION OF REAL OR INTEGER@F@@@@ MODE; DOUBLE AND MULTIPLE SUBCF
)@@G@@SCRIPTS MUST BE OF INTEGER MODE, BUT@G@@@@ THERE IS NO LIMITATION ON WHACG
)@@G@@T SORT OF EXPRESSION MAY BE USED AS A     @]@@@@ SUBSCRIPT. @[@@@@      CH
)@@G@@@^@@@@               EXAMPLES:@^@@@@               =========@F@@@@      CI
)@@G@@ (THESE ARE ALL LEGAL SUBSCRIPT USAGES ASSUMING THAT THE    @E@@@@      CJ
)@@G@@ CORRECT 'DIMENSION' STATEMENTS HAVE BEEN INCLUDED)   @[@@@@      @[@@@@CK
)@@G@@      @[@@@@      @C@@@@       A(31)   B(3.0+24*SQRT(11/X)-ATAN2(X,Y))  CL
)@@G@@@E@@@@       C(1,3,1,4,9,1,-13,3,1,1,0,-2,11,4,3,3,3)    D(-3,-2) @[@@@@CM
)@@G@@      @[@@@@      @F@@@@       THE USE OF NEGATIVE SUBSCRIPTS ON VARIABLCN
)@@G@@ES DIMENSIONED FOR@F@@@@ ONLY ONE SUBSCRIPT IS NOT ALLOWED, BUT THERE ARCO
)@@G@@E NO SIGN RESTRIC-@D@@@@ TIONS ON DOUBLY- AND MULTIPLY-SUBSCRIPTED ARRAYCP
)@@G@@S.    @[@@@@      @[@@@@      @F@@@@       VARIABLE MODES ARE ASSIGNED OCQ
)@@G@@N AN IMPLICIT OR EXPLICIT     @F@@@@ BASIS.  SEE SECTION 7.2, 'MODE DECLCR
)@@G@@ARATIONS', FOR A DISCUSSION OF@[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WCS
)@@G@@ITH RALPH (DECEMBER 1971 VERSION)          3-  9@[@@@@      @[@@@@      CT
)@@G@@@[@@@@      @C@@@@ VARIABLE MODE DECLARATIONS AND CONVENTIONS.    @[@@@@CU
)@@G@@      @[@@@@      @[@@@@      @[@@@@      @A@@@@  3. 2. 3.   FUNCTION PACV
)@@G@@RAMETERS    @[@@@@      @[@@@@      @[@@@@      @E@@@@       A FUNCTION CW
)@@G@@PARAMETER IS SYNTACTICALLY EQUIVALENT TO A@E@@@@ VARIABLE, DIFFERING ONLCX
)@@G@@Y IN THAT IT IS NOT LOCALLY ASSIGNED@G@@@@ STORAGE, SO THAT IT CANNOT BECY
)@@G@@ REFERENCED IN SOME CONTEXTS.  EXCLU-     @F@@@@ SIONS OF THE USE OF FUNCZ
)@@G@@CTION PARAMETERS WILL BE MENTIONED ON AN  @F@@@@ INDIVIDUAL BASIS IN THEDA
)@@G@@ DISCUSSIONS OF PARTICULAR STATEMENTS.    @F@@@@ EXAMPLES OF ILLEGAL USEDB
)@@G@@S OF FUNCTION PARAMETERS ARE THE STORAGE  @G@@@@ EQUIVALENCE ASSIGNMENT DC
)@@G@@STATEMENT ('EQUIVALENCE'), AND AS STATEMENT     @F@@@@ LABELS.  A FUNCTIDD
)@@G@@ON PARAMETER IS SOMETIMES REFERRED TO AS A DUMMY@ @@@@ VARIABLE OR AS ANDE
)@@G@@ ARGUMENT.  @[@@@@      @[@@@@      @[@@@@      @[@@@@      @A@@@@  3. 2DF
)@@G@@. 4.   FUNCTION REFERENCES    @[@@@@      @[@@@@      @F@@@@       A FUNDG
)@@G@@CTION-REFERENCE OPERAND IS A CALL UPON SOME EXTERIOR  @F@@@@ SEGMENT OF DH
)@@G@@PROGRAM FROM AN ARITHMETIC STATEMENT OR EXPRESSION.   @F@@@@ THERE ARE SDI
)@@G@@EVERAL TYPES OF FUNCTIONS, ALL OF WHICH ARE DISCUSSED @#@@@@ IN CHAPTER DJ
)@@G@@7.    @[@@@@      @F@@@@       A FUNCTION NAME MAY CONSIST OF FROM 1 TO DK
)@@G@@6 LETTERS OR NUM- @F@@@@ BERS, BUT MUST BEGIN WITH A LETTER.  THE MODE ODL
)@@G@@F A FUNCTION RE-  @F@@@@ FERENCE IS THE MODE OF THE VALUE RETURNED BY THDM
)@@G@@AT REFERENCE.  A  @F@@@@ MODE DECLARATION IS MEANINGLESS FOR A FUNCTION DN
)@@G@@WHICH DOES NOT    @#@@@@ RETURN A VALUE.  @[@@@@      @[@@@@      @F@@@@DO
)@@G@@       FUNCTION REFERENCES CAN BE CLASSED INTO THREE CATEGORIES:  @[@@@@DP
)@@G@@      @A@@@@         1)  INTRINSIC FUNCTIONS    @C@@@@         2)  LIBRADQ
)@@G@@RY AND MATHEMATICAL FUNCTIONS @A@@@@         3)  USER-DEFINED FUNCTIONS DR
)@@G@@@[@@@@      @F@@@@       INTRINSIC FUNCTIONS ARE DISCUSSED IN THE NEXT SDS
)@@G@@ECTION.  THE@G@@@@ COMPLETE LIST OF LIBRARY FUNCTIONS VARIES FROM ONE INDT
)@@G@@STALLATION TO     @F@@@@ THE NEXT; THOSE WHICH FALL INTO THE CLASS OF MADU
)@@G@@THEMATICAL, OR    @E@@@@ 'GENERIC' FUNCTIONS, ARE DISCUSSED IN SECTION 3DV
)@@G@@.2.4.5.     @#@@@@ CHAPTER 7 IS     @C@@@@ DEVOTED ENTIRELY TO USER-DEFIDW
)@@G@@NED FUNCTIONS.    @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DDX
)@@G@@ECEMBER 1971 VERSION)          3- 10@[@@@@      @[@@@@      @[@@@@      DY
)@@G@@@D@@@@  3. 2. 4. 1.   INTRINSIC FUNCTIONS (FORTRAN ONLY)    @[@@@@      DZ
)@@G@@@F@@@@       AN INTRINSIC 'FUNCTION' IS NOT REALLY A FUNCTION, BUT IS   EA
)@@G@@@G@@@@ ACTUALLY AN OPERATOR, IN THAT IT COMPILES INLINE CODE EACH TIME IEB
)@@G@@T     @G@@@@ IS REFERENCED, RATHER THAN COMPILING A TRANSFER TO A SINGLEEC
)@@G@@ EXTER-     @F@@@@ NAL SEGMENT OF CODE.  THERE IS A TREMENDOUS NUMBER OFED
)@@G@@ ODDLY-NAMED@F@@@@ INTRINSIC FUNCTIONS, MOST OF WHICH ARE REMNANTS OF OLEE
)@@G@@DER VERSIONS@F@@@@ OF FORTRAN WHICH DID NOT HAVE AUTOMATIC MODE CONVERSIEF
)@@G@@ON, AND THUS@E@@@@ REQUIRED A SEPARATE INTRINSIC FUNCTION FOR EACH DIFFEEG
)@@G@@RENT  @F@@@@ OPERATOR-MODE COMBINATION!  ALL OF THESE 'VARIANTS' HAVE BEEH
)@@G@@EN    @F@@@@ INCLUDED FOR COMPATIBILITY'S SAKE.  MOST OF THEM WILL WORK EI
)@@G@@WITH  @F@@@@ NEARLY ANY MODES, BUT IT IS BEST TO STICK TO THE RULES TO AEJ
)@@G@@VOID  @A@@@@ THE HARD-TO-DEFINE EXCEPTIONS.     @[@@@@      @F@@@@      EK
)@@G@@ EACH INTRINSIC FUNCTION COMPILES INTO ONE OR MORE OPERATOR @D@@@@ REFEREL
)@@G@@ENCES.  FOR EXAMPLE, THE INTRINSIC FUNCTION CALL@[@@@@      @#@@@@      EM
)@@G@@ Y = ABS(X) @[@@@@      @D@@@@ WILL COMPILE INTO THE OPERATOR-REFERENCE EN
)@@G@@STATEMENT   @[@@@@      @#@@@@       Y = .ABS.X @[@@@@      @F@@@@      EO
)@@G@@ IF THE GENERIC NAME OF AN INTRINSIC FUNCTION IS USED, THE  @F@@@@ COMPIEP
)@@G@@LER WILL PICK THE SPECIFIC VARIANT TO USE CORRESPONDING TO  @F@@@@ THE MEQ
)@@G@@ODE.  THUS, TO TAKE A DOUBLE PRECISION ABSOLUTE VALUE, ONE  @^@@@@ WOULDER
)@@G@@ NORMALLY CODE    @[@@@@      @#@@@@       Y = DABS(X)@[@@@@      @B@@@@ES
)@@G@@ IF, HOWEVER, THE PROGRAMMER SIMPLY CODES @[@@@@      @#@@@@       Y = AET
)@@G@@BS(X) @[@@@@      @F@@@@ THEN THE COMPILER, UPON RECOGNIZING THAT 'X' ISEU
)@@G@@ INDEED DOUBLE    @F@@@@ PRECISION, WILL CONVERT THE 'ABS' TO A 'DABS'. EV
)@@G@@ THE NAME 'ABS' IS@F@@@@ CALLED A GENERIC FUNCTION NAME, WHILE THE NAME EW
)@@G@@'DABS' IS A SPECI-@F@@@@ FIC FUNCTION NAME.  IN CASE ITS ARGUMENT IS REAEX
)@@G@@L, THE GENERIC    @F@@@@ FUNCTION NAME FOR ABSOLUTE VALUE HAPPENS TO BE EY
)@@G@@THE SAME AS THE   @F@@@@ SPECIFIC FUNCTION NAME FOR REAL ABSOLUTE VALUE,EZ
)@@G@@ BUT THIS NEED NOT@F@@@@ BE TRUE.  CONVERSELY, A REQUEST TO USE AN IMPROFA
)@@G@@PER SPECIFIC FUNC-@G@@@@ TION WILL BE CONVERTED TO THE CORRECT SPECIFIC FB
)@@G@@FUNCTION:  IABS(X),     @F@@@@ WHERE X IS REAL, WILL BE CONVERTED BY THEFC
)@@G@@ COMPILER TO ABS(X).    @[@@@@      @G@@@@       ANY INTRINSIC FUNCTION FD
)@@G@@MAY BE REMOVED FROM THE TABLE VIA THE     @F@@@@ 'EXTERNAL' OR 'ABNORMALFE
)@@G@@' DECLARATIONS, BY DEFINING AN INTERNAL   @F@@@@ SUBROUTINE WITH THE SAMFF
)@@G@@E NAME, OR BY REFERENCING IT IN A MODE    @#@@@@ DECLARATION.     @[@@@@FG
)@@G@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)   FH
)@@G@@       3- 11@[@@@@      @[@@@@      @[@@@@      @[@@@@      @D@@@@ GENERFI
)@@G@@IC SPECIFIC    OPERAND  RESULT   REFERENCED     @C@@@@ NAME    NAME     FJ
)@@G@@   MODE(S)  MODES    OPERATOR @D@@@@ ======= ========    =======  ======FK
)@@G@@   ===========    @[@@@@      @C@@@@ ABS(B)              ALL      ALL   FL
)@@G@@   .ABS.B   @A@@@@         IABS(B)     INT      INT   @A@@@@         ABSFM
)@@G@@(B)      REAL     REAL  @A@@@@         DABS(B)     D.P.     D.P.  @A@@@@FN
)@@G@@         CABS(B)     COMPLX   REAL  @[@@@@      @C@@@@ INT(B)           FO
)@@G@@   ALL      ALL      .INT.B   @A@@@@         INT(B)      REAL     INT   FP
)@@G@@@A@@@@         AINT(B)     REAL     REAL  @A@@@@         DINT(B)     D.PFQ
)@@G@@.     D.P.  @D@@@@         IDINT(B)    D.P.     INT      .FIX..INT.B    FR
)@@G@@@[@@@@      @C@@@@ MOD(A,B)            ALL      ALL      A.MOD.B  @A@@@@FS
)@@G@@         MOD(A,B)    INT      INT   @A@@@@         AMOD(A,B)   REAL     FT
)@@G@@REAL  @A@@@@         DMOD(A,B)   D.P.     D.P.  @[@@@@      @E@@@@ MAX(AFU
)@@G@@,B,...)        ALL      ALL      A.MAX.B.MAX.C....    @A@@@@         AMAFV
)@@G@@X0()     INT      REAL  @A@@@@         AMAX1()     REAL     REAL  @A@@@@FW
)@@G@@         MAX0()      INT      INT   @A@@@@         MAX1()      REAL     FX
)@@G@@INT   @A@@@@         DMAX1()     D.P.     D.P.  @[@@@@      @E@@@@ MIN(AFY
)@@G@@,B,...)        ALL      ALL      A.MIN.B.MIN.C....    @A@@@@         AMIFZ
)@@G@@N0()     INT      REAL  @A@@@@         AMIN1()     REAL     REAL  @A@@@@GA
)@@G@@         MIN0        INT      INT   @A@@@@         DIM1()      REAL     GB
)@@G@@INT   @A@@@@         DMIN1()     D.P.     D.P.  @[@@@@      @[@@@@      GC
)@@G@@@C@@@@ FLOAT(B)            ALL      REAL     .FLOAT.B @A@@@@         FLOGD
)@@G@@AT(B)    INT      REAL  @A@@@@         SNGL(B)     D.P.     REAL  @[@@@@GE
)@@G@@      @C@@@@ FIX(B)              ALL      INT      .FIX.B   @A@@@@      GF
)@@G@@   IFIX(B)     REAL     INT   @A@@@@         IDFIX(B)    D.P.     INT   GG
)@@G@@@[@@@@      @C@@@@ DBLE(B)             ALL      D.P.     .DBLE.B  @A@@@@GH
)@@G@@         DFLOAT(B)   INT      D.P.  @A@@@@         DBLE(B)     REAL     GI
)@@G@@D.P.  @[@@@@      @C@@@@ CMPLX(A,B)          REAL/INT COMPLEX  A.CMPLX.BGJ
)@@G@@@[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSIGK
)@@G@@ON)          3- 12@[@@@@      @[@@@@      @[@@@@      @B@@@@         CMPGL
)@@G@@LX(A,B)  INT      COMPLEX     @B@@@@         CMPLX(A,B)  REAL     COMPLEGM
)@@G@@X     @[@@@@      @C@@@@ SIGN(A,B)           ALL      ALL      A.SIGN.B GN
)@@G@@@A@@@@         ISIGN(A,B)  INT      INT   @A@@@@         SIGN(A,B)   REAGO
)@@G@@L     REAL  @A@@@@         DSIGN(A,B)  D.P.     D.P.  @[@@@@      @C@@@@GP
)@@G@@ DIM(A,B)            ALL      ALL      A.DIM.B  @A@@@@         IDIM(A,B)GQ
)@@G@@   INT      INT   @A@@@@         DIM(A,B)    REAL     REAL  @A@@@@      GR
)@@G@@   DDIM(A,B)   D.P.     D.P.  @[@@@@      @C@@@@ REAL(B) REAL(B)     COMGS
)@@G@@PLEX  REAL     .REAL.B  @[@@@@      @C@@@@ IMAG(B)             COMPLEX  GT
)@@G@@REAL     .IMAG.B  @A@@@@         AIMAG(B)    COMPLEX  REAL  @[@@@@      GU
)@@G@@@C@@@@ CONJG(B)            COMPLEX  COMPLEX  .CONJ.B  @B@@@@         CONGV
)@@G@@JG(B)    COMPLEX  COMPLEX     @[@@@@      @F@@@@ SEE SECTION 3.3 FOR A DGW
)@@G@@ETAILED TREATMENT OF OPERATORS AND THEIR  @]@@@@ ACTION     @[@@@@*****^GX
)@@G@@@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         GY
)@@G@@ 3- 13@[@@@@      @[@@@@      @[@@@@      @F@@@@  3. 2. 4. 2.   THE INTRGZ
)@@G@@INSIC FUNCTIONS 'IND', 'LOC', AND 'FLD'   @[@@@@      @F@@@@       THEREHA
)@@G@@ ARE TWO INTRINSIC FUNCTIONS WHICH ARE BETTER NAMED   @F@@@@ PSEUDO-FUNCHB
)@@G@@TIONS BECAUSE OF THEIR UNIQUE PROPERTY OF BEING LEGAL @F@@@@ ON EITHER SHC
)@@G@@IDE OF AN EQUALS SIGN.  NORMALLY, ONLY VARIABLES AND  @F@@@@ FUNCTION PAHD
)@@G@@RAMETERS ARE PERMITTED ON THE LEFT SIDE OF AN EQUALS  @[@@@@ SIGN.@[@@@@HE
)@@G@@      @[@@@@      @[@@@@      @[@@@@      @D@@@@  3. 2. 4. 3.   THE 'LOCHF
)@@G@@' AND 'IND' PSEUDOFUNCTIONS   @[@@@@      @H@@@@       THE 'LOC' PSEUDOFHG
)@@G@@UNCTION PROVIDES A METHOD OF OBTAINING THE MACHINE    @F@@@@ ADDRESS OF HH
)@@G@@A VARIABLE OR EXPRESSION AS AN INTEGER VALUE IN THE   @E@@@@ PROGRAM.  IHI
)@@G@@T IS VERY USEFUL TO BE ABLE TO DETERMINE MACHINE@E@@@@ ADDRESSES WHEN ONHJ
)@@G@@E IS DEALING WITH COMPLEX DATA STRUCTURES.@[@@@@      @A@@@@       FOR EHK
)@@G@@XAMPLE, THE STATEMENT   @[@@@@      @]@@@@ (FORTRAN): @[@@@@      @#@@@@HL
)@@G@@       Y=LOC(P)   @[@@@@      @F@@@@ WILL SET THE VARIABLE 'Y', ASSUMED HM
)@@G@@TO HAVE BEEN DECLARED INTEGER,@F@@@@ TO AN INTEGER VALUE CORRESPONDING THN
)@@G@@O THE CORE LOCATION OF THE    @#@@@@ VARIABLE 'P'.    @F@@@@       THE 'HO
)@@G@@IND' PSEUDO-FUNCTION PROVIDES THE USER WITH A DIRECT  @G@@@@ WAY OF USINHP
)@@G@@G ADDRESS, OR POINTER VARIABLES.  IND(X) REFERENCES THE     @F@@@@ CORE HQ
)@@G@@LOCATION WHOSE ADDRESS IS GIVEN BY X, AND DERIVES ITS NAME  @F@@@@ FROM HR
)@@G@@THE 'INDIRECT ADDRESSING' FEATURE OF MOST COMPUTERS.  THUS, @#@@@@ THE SHS
)@@G@@TATEMENTS   @[@@@@      @]@@@@ (FORTRAN): @^@@@@       Y = IND(LOC(P))  HT
)@@G@@@[@@@@      @[@@@@ AND  @[@@@@      @]@@@@ (FORTRAN): @]@@@@       Y = PHU
)@@G@@@[@@@@      @#@@@@ ARE EQUIVALENT.  @[@@@@      @F@@@@       UNLIKE HARDHV
)@@G@@WARE INDIRECT ADDRESSING, THE PRESENCE OF AN    @F@@@@ 'INDIRECT' BIT ORHW
)@@G@@ SOME SUCH FLAG IN THE REFERENCED OPERAND WILL  @F@@@@ NOT CAUSE CASCADIHX
)@@G@@NG INDIRECT ADDRESSING.  THE 'I' BIT WILL BE    @G@@@@ INTERPRETED AS PAHY
)@@G@@RT OF THE ADDRESS, AND A STORAGE LIMITS VIOLATION     @F@@@@ WILL PROBABHZ
)@@G@@LY RESULT.  THE 'IND' PSEUDO-FUNCTION IS THE ONLY     @F@@@@ DIRECT WAY IA
)@@G@@OF REFERENCING MORE THAN 65535 WORDS OF DATA BANK IN A@#@@@@ GIVEN PROGRIB
)@@G@@AM.   @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971IC
)@@G@@ VERSION)          3- 14@[@@@@      @[@@@@      @[@@@@      @[@@@@      ID
)@@G@@@[@@@@      @#@@@@       EXAMPLES:  @#@@@@       =========  @[@@@@      IE
)@@G@@@]@@@@ (FORTRAN): @#@@@@       IND(Y) = 3 @[@@@@      @]@@@@ (MAD):     IF
)@@G@@@#@@@@       IND.(Y) = 3@[@@@@      @C@@@@ SETS THE CELL WHOSE ADDRESS IIG
)@@G@@S GIVEN AT Y TO 3.@[@@@@      @[@@@@      @]@@@@ (FORTRAN): @^@@@@      IH
)@@G@@ AREG1 = IND(11)  @[@@@@      @]@@@@ (MAD):     @^@@@@       AREG1 = INDII
)@@G@@.(11) @[@@@@      @F@@@@       SETS 'AREG1' TO THE CONTENTS OF CONTROL RIJ
)@@G@@EGISTER 11 (X11). @[@@@@      @[@@@@      @B@@@@  3. 2. 4. 4.   THE 'FLDIK
)@@G@@' PSEUDOFUNCTION  @[@@@@      @[@@@@      @F@@@@       THE 'FLD' PSEUDOFIL
)@@G@@UNCTION PROVIDES THE USER WITH A DIRECT   @F@@@@ METHOD OF REFERENCING AIM
)@@G@@RBITRARY PARTS OF COMPUTER WORDS.  AN     @F@@@@ ARBITRARY-LENGTH BIT STIN
)@@G@@RING IN AN ARBITRARY POSITION MAY BE RE-  @]@@@@ FERENCED.  @[@@@@      IO
)@@G@@@C@@@@       THE GENERAL FORM OF THE REFERENCE IS:    @[@@@@      @]@@@@IP
)@@G@@ (FORTRAN): @C@@@@               FLD(<START>,<LENGTH>,<WORD>)     @[@@@@IQ
)@@G@@      @]@@@@ (MAD):     @C@@@@               FLD.(<START>,<LENGTH>,<WORDIR
)@@G@@>)    @[@@@@      @[@@@@      @F@@@@ <START> IS THE STARTING BIT NUMBER IS
)@@G@@IN A BIT STRING OF LENGTH     @F@@@@       <LENGTH> TO BE REFERENCED.  BIT
)@@G@@ITS ARE NUMBERED FROM LEFT    @E@@@@       TO RIGHT, BEGINNING WITH BIT IU
)@@G@@'0'.  BIT '35' IS THE   @C@@@@       RIGHTMOST.  THERE ARE 36 BITS PER WIV
)@@G@@ORD.  @[@@@@      @F@@@@ <WORD> IS THE COMPUTER WORD FROM WHICH THIS BITIW
)@@G@@ STRING IS TO BE  @C@@@@       TAKEN, OR INTO WHICH IT IS TO BE PUT.    IX
)@@G@@@[@@@@      @[@@@@      @F@@@@       THE FLD PSEUDOFUNCTION ALWAYS ASSUMIY
)@@G@@ES THAT IT IS DEALING   @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RAIZ
)@@G@@LPH (DECEMBER 1971 VERSION)          3- 15@[@@@@      @[@@@@      @[@@@@JA
)@@G@@      @F@@@@ WITH A RIGHT-JUSTIFIED, UNSIGNED QUANTITY.  ON INSERT (LEFTJB
)@@G@@ SIDE @F@@@@ OF AN EQUALS SIGN), THE REMAINDER OF THE WORD IS NOT DISTURJC
)@@G@@BED.  @[@@@@      @]@@@@       THUS @[@@@@      @C@@@@ FLD(3,6,B) = 0   JD
)@@G@@      SETS BITS 3-8 OF B TO 0.@F@@@@ Q = FLD(0,18,R)        SETS Q TO THJE
)@@G@@E CONTENTS OF R'S LEFT HALF.  @[@@@@      @F@@@@ THE 3 ARGUMENTS OF THE JF
)@@G@@FLD MAY EACH BE ANY EXPRESSION; CONSTANTS @F@@@@ ARE USED IN THE EXAMPLEJG
)@@G@@S ONLY FOR PURPOSES OF CLARITY.  <START>  @F@@@@ AND <LENGTH> MUST BE INJH
)@@G@@TEGER, <WORD> MAY BE ANY SINGLEWORD MODE. @F@@@@ WHEN THE FLD FUNCTION IJI
)@@G@@S USED ON THE LEFT SIDE OF AN EQUALS SIGN,@F@@@@ <WORD> MUST BE INDEPENDJJ
)@@G@@ENTLY LEGAL ON THE LEFT SIDE OF AN EQUALS @[@@@@ SIGN.@[@@@@*****^@G@@@@JK
)@@G@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          3- 16JL
)@@G@@@[@@@@      @[@@@@      @[@@@@      @^@@@@               EXAMPLES:@^@@@@JM
)@@G@@               =========@[@@@@      @[@@@@      @E@@@@ SUPPOSE THAT THE JN
)@@G@@VARIABLE 'J' CONTAINS (IN OCTAL) THE VALUE@[@@@@      @^@@@@       21030JO
)@@G@@6613371     @[@@@@      @F@@@@ WHICH IN BINARY IS (WITH VERTICAL NUMBERSJP
)@@G@@ INDICATING BIT POSI-   @]@@@@ TIONS)     @[@@@@      @C@@@@       01000JQ
)@@G@@1000011000110110001011011111001     @[@@@@      @C@@@@ AND SUPPOSE THE VJR
)@@G@@ARIABLE 'K' CONTAINS IN OCTAL @[@@@@      @^@@@@       202600000000     JS
)@@G@@@[@@@@      @^@@@@ WHICH IN BINARY IS     @[@@@@      @C@@@@            JT
)@@G@@     1    1    2    2    3    3     @C@@@@       0    5    0    5    0  JU
)@@G@@  5    0    5     @C@@@@       010000010110000000000000000000000000     JV
)@@G@@@[@@@@      @F@@@@ THEN EXECUTING THE FOLLOWING STATEMENTS WILL HAVE THEJW
)@@G@@ INDICATED  @]@@@@ EFFECT:    @[@@@@      @^@@@@       R = FLD(18,6,J)  JX
)@@G@@@[@@@@      @E@@@@               WILL SET R TO           000000000061 OCJY
)@@G@@TAL   @[@@@@      @^@@@@       RR = FLD(25,2,J) @[@@@@      @D@@@@      JZ
)@@G@@         WILL SET RR TO          000000000003   @[@@@@      @^@@@@      KA
)@@G@@ FLD(18,3,K) = 7  @[@@@@      @D@@@@               WILL SET K TO        KB
)@@G@@   202600700000   @[@@@@      @^@@@@       FLD(6,12,K) = 0  @[@@@@      KC
)@@G@@@D@@@@               WILL SET K TO           200000000000   @[@@@@      KD
)@@G@@@A@@@@       FLD(24,7,K) = FLD(29,6,J)    @[@@@@      @D@@@@            KE
)@@G@@   WILL SET K TO           202600003600   @[@@@@      @[@@@@      @E@@@@KF
)@@G@@ ALL OF THE VALUES MENTIONED ABOVE ARE IN OCTAL.  ALL OF THE@F@@@@ EXAMPKG
)@@G@@LES ARE IN FORTRAN; IN MAD REPLACE FLD() BY FLD.() AND THE  @ @@@@ ACTIOKH
)@@G@@N WILL BE THE SAME.     @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RAKI
)@@G@@LPH (DECEMBER 1971 VERSION)          3- 17@[@@@@      @[@@@@      @[@@@@KJ
)@@G@@      @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971KK
)@@G@@ VERSION)          3- 18@[@@@@      @[@@@@      @[@@@@      @A@@@@  3. 2KL
)@@G@@. 4. 5.   GENERIC FUNCTIONS   @[@@@@      @F@@@@       THE COMPILER KEEPKM
)@@G@@S A TABLE OF MATHEMATICAL FUNCTIONS WHOSE @F@@@@ NAME AND MODE IT KNOWS,KN
)@@G@@ SUCH THAT A REFERENCE TO THE GENERIC NAME@F@@@@ OF THE FUNCTION WILL CAKO
)@@G@@USE THE COMPILER TO SUBSTITUTE THE CORRECT@D@@@@ SPECIFIC NAME, DEPENDINKP
)@@G@@G UPON MODE.  THUS, A CALL TO @[@@@@      @#@@@@       SQRT(P)    @[@@@@KQ
)@@G@@      @A@@@@ WILL BECOME IN THE OBJECT PROGRAM  @[@@@@      @#@@@@      KR
)@@G@@ DSQRT(P)   @[@@@@      @B@@@@ IF P IS DOUBLE PRECISION, BUT WILL BECOMEKS
)@@G@@@[@@@@      @#@@@@       CSQRT(P)   @[@@@@      @ @@@@ IF P IS COMPLEX, KT
)@@G@@AND EVEN    @[@@@@      @^@@@@       SQRT(FLOAT(P))   @[@@@@      @#@@@@KU
)@@G@@ IF P IS INTEGER. @[@@@@      @F@@@@       ANY GENERIC FUNCTION CAN BE RKV
)@@G@@EMOVED FROM THE TABLE BY DEC- @F@@@@ LARING IT TO BE 'EXTERNAL' OR 'ABNOKW
)@@G@@RMAL', OR BY REFERENCING IT IN@F@@@@ A MODE DECLARATION; THE USER MAY THKX
)@@G@@IS WAY USE A GENERIC FUNCTION @F@@@@ NAME FOR OTHER PURPOSES.  THE GENERKY
)@@G@@IC NAME OF A FUNCTION GROUP IS@D@@@@ ALMOST ALWAYS THE NAME OF THE REAL-KZ
)@@G@@VALUED FUNCTION.  @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DLA
)@@G@@ECEMBER 1971 VERSION)          3- 19@[@@@@      @[@@@@      @[@@@@      LB
)@@G@@@B@@@@  3. 2. 4. 6.   TABLE OF GENERIC FUNCTIONS@[@@@@      @A@@@@ GENERLC
)@@G@@IC     ARGUMENT   SPECIFIC    @E@@@@  NAME         MODE       NAME      LD
)@@G@@           FUNCTION     @F@@@@ =======     ========   ========       ===LE
)@@G@@===================     @E@@@@ ACOS(X)       INTEGER  ACOS(X)        ARCLF
)@@G@@COSINE OF ARGUMENT@A@@@@               REAL     ACOS(X)     @A@@@@      LG
)@@G@@         D.P.     DACOS(X)    @[@@@@      @E@@@@ ASIN(X)       INTEGER  LH
)@@G@@ASIN(X)        ARCSIN OF ARGUMENT   @A@@@@               REAL     ASIN(XLI
)@@G@@)     @A@@@@               D.P.     DACOS(X)    @[@@@@      @F@@@@ ATAN(LJ
)@@G@@X)       INTEGER  ATAN(X)        ARCTANGENT OF ARGUMENT     @A@@@@      LK
)@@G@@         REAL     ATAN(X)     @A@@@@               D.P.     DATAN(X)    LL
)@@G@@@E@@@@ ATAN2(X,Y)    REAL     ATAN2(X,Y)     ARCTANGENT OF X/Y    @A@@@@LM
)@@G@@               D.P.     DATAN2(X,Y) @[@@@@      @E@@@@ CBRT(X)       INTLN
)@@G@@EGER  CBRT(X)        CUBE ROOT OF ARGUMENT@A@@@@               REAL     LO
)@@G@@CBRT(X)     @A@@@@               D.P.     DCBRT(X)    @A@@@@            LP
)@@G@@   COMPLEX  CCBRT(X)    @[@@@@      @E@@@@ COS(X)        INTEGER  COS(X)LQ
)@@G@@         COSINE OF ARGUMENT   @ @@@@               REAL     COS(X)@A@@@@LR
)@@G@@               D.P.     DCOS(X)     @A@@@@               COMPLEX  CCOS(XLS
)@@G@@)     @[@@@@      @E@@@@ COSH(X)       INTEGER  COSH(X)        HYPERBOLILT
)@@G@@C COSINE(X) @A@@@@               REAL     COSH(X)     @A@@@@            LU
)@@G@@   D.P.     DCOSH(X)    @A@@@@               COMPLEX  CCOSH(X)    @[@@@@LV
)@@G@@      @F@@@@ EXP(X)        INTEGER  EXP(X)         EXPONENTIATION:  E TOLW
)@@G@@ THE  @C@@@@               REAL     EXP(X)         X POWER. @A@@@@      LX
)@@G@@         D.P.     DEXP(X)     @A@@@@               COMPLEX  CEXP(X)     LY
)@@G@@@[@@@@      @F@@@@ LOG(X)        INTEGER  LOG(X)         NATURAL (BASE ELZ
)@@G@@) LOGARITHM @A@@@@               REAL     ALOG(X)     @A@@@@            MA
)@@G@@   D.P.     DLOG(X)     @A@@@@               COMPLEX  CLOG(X)     @[@@@@MB
)@@G@@      @F@@@@ LOG10(X)      INTEGER  LOG10(X)       COMMON (BASE 10) LOGAMC
)@@G@@RITHM @A@@@@               REAL     ALOG10(X)   @A@@@@               D.PMD
)@@G@@.     DLOG10(X)   @[@@@@      @E@@@@ SIN(X)        INTEGER  SIN(X)      ME
)@@G@@   SINE OF ARGUMENT     @ @@@@               REAL     SIN(X)@[@@@@*****^MF
)@@G@@@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         MG
)@@G@@ 3- 20@[@@@@      @[@@@@      @[@@@@      @A@@@@               D.P.     MH
)@@G@@DSIN(X)     @A@@@@               COMPLEX  CSIN(X)     @[@@@@      @E@@@@MI
)@@G@@ SINH(X)       INTEGER  SINH(X)        HYPERBOLIC SINE(X)   @A@@@@      MJ
)@@G@@         REAL     SINH(X)     @A@@@@               D.P.     DSINH(X)    MK
)@@G@@@A@@@@               COMPLEX  CSINH(X)    @[@@@@      @D@@@@ SQRT       ML
)@@G@@   INTEGER  SQRT           SQUARE ROOT    @A@@@@               REAL     MM
)@@G@@SQRT(X)     @A@@@@               D.P.     DSQRT(X)    @A@@@@            MN
)@@G@@   COMPLEX  CSQRT(X)    @[@@@@      @D@@@@ TAN(X)        INTEGER  TAN(X)MO
)@@G@@         TANGENT OF X   @ @@@@               REAL     TAN(X)@A@@@@      MP
)@@G@@         D.P.     DTAN(X)     @A@@@@               COMPLEX  CTAN(X)     MQ
)@@G@@@[@@@@      @F@@@@ TANH(X)       INTEGER  TANH(X)        HYPERBOLIC TANGMR
)@@G@@ENT OF X    @A@@@@               REAL     TANH(X)     @A@@@@            MS
)@@G@@   D.P.     DTANH(X)    @A@@@@               COMPLEX  CTANH(X)    @[@@@@MT
)@@G@@      @[@@@@      @[@@@@      @G@@@@ EXCEPT WHERE THE ARGUMENT IS INTEGEMU
)@@G@@R, THE RESULT MODE OF A MATHEMA-    @F@@@@ TICAL FUNCTION IS THE SAME ASMV
)@@G@@ THE MODE OF THE ARGUMENT.  WHEN AN @E@@@@ INTEGER IS USED AS AN ARGUMENMW
)@@G@@T, THE RESULT IS ALWAYS REAL. @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WMX
)@@G@@ITH RALPH (DECEMBER 1971 VERSION)          3- 21@[@@@@      @[@@@@      MY
)@@G@@@[@@@@      @[@@@@      @[@@@@      @^@@@@  3. 3.   OPERATORS     @[@@@@MZ
)@@G@@      @[@@@@      @F@@@@       AN OPERATOR OPERATES ON 1 OR 2 OPERANDS TNA
)@@G@@O PRODUCE A SPECI-@E@@@@ FIC RESULT OR ACTION.  FOR EXAMPLE, THE '+' OPENB
)@@G@@RATOR ADDS 2@F@@@@ OPERANDS; THE '=' OPERATOR SETS ONE OPERAND EQUAL TO NC
)@@G@@ANOTHER.  AN@F@@@@ OPERATOR REQUIRING 2 OPERANDS IS CALLED A BINARY OPERND
)@@G@@ATOR, WHILE @E@@@@ ONE REQUIRING ONLY ONE OPERAND IS CALLED A UNARY OPERNE
)@@G@@ATOR. @[@@@@      @^@@@@               EXAMPLES:@[@@@@      @B@@@@      NF
)@@G@@ *       IS A BINARY OPERATOR:   A*B@C@@@@       .ABS.   IS A UNARY OPERNG
)@@G@@ATOR:    .ABS.B   @[@@@@      @F@@@@       OPERATORS ARE BROADLY CATEGORNH
)@@G@@IZED INTO 5 GROUPS:  COMPUTA- @E@@@@ TIONAL, CONVERSION, MANIPULATIVE, CNI
)@@G@@OMPARATIVE, AND LOGICAL.@ @@@@ SOME DEFY CATEGORIZATION.    @[@@@@*****^NJ
)@@G@@@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         NK
)@@G@@ 3- 22@[@@@@      @[@@@@      @[@@@@      @[@@@@      @A@@@@  3. 3. 1.  NL
)@@G@@ COMPUTATIONAL OPERATORS@[@@@@      @F@@@@       COMPUTATIONAL OPERATORSNM
)@@G@@ ARE USED TO PERFORM STANDARD ALGE- @G@@@@ BRAIC COMPUTATIONS, AND ARE INN
)@@G@@NTENDED FOR USE IN ARITHMETIC EXPRES-     @F@@@@ SIONS.  THE CURRENTLY ANO
)@@G@@VAILABLE COMPUTATIONAL OPERATORS ARE:     @[@@@@      @D@@@@       SYMBONP
)@@G@@L  ACTION                  DESCRIPTION    @D@@@@       ======  ======   NQ
)@@G@@               ===========    @[@@@@      @F@@@@       +       ADDITION NR
)@@G@@               A+B YIELDS SUM OF A AND B  @E@@@@       -       SUBTRACTINS
)@@G@@ON             A-B GIVES A LESS B   @G@@@@               NEGATION       NT
)@@G@@         -B (EQUIVALENT TO .NEG.B) IS     @F@@@@                        NU
)@@G@@               THE ALGEBRAIC NEGATION OF B@G@@@@       *       MULTIPLICNV
)@@G@@ATION          A*B GIVES PRODUCT OF A AND B     @F@@@@       /       DIVNW
)@@G@@ISION                A/B GIVES A DIVIDED BY B   @F@@@@                  NX
)@@G@@                     (WHICH IS TRUNCATED IF BOTH@D@@@@                  NY
)@@G@@                     ARE INTEGERS)  @F@@@@       //      COVERED QUOTIENNZ
)@@G@@T        A//B IS A/B ROUNDED UP TO  @F@@@@                              OA
)@@G@@         THE NEXT INTEGER INSTEAD OF@C@@@@                              OB
)@@G@@         TRUNCATED@ @@@@       **      EXPONENTIATION @F@@@@       .P.  OC
)@@G@@   EXPONENTIATION          A**B = A.P.B GIVES A TO    @C@@@@            OD
)@@G@@                           POWER B  @G@@@@       .ABS.   ABSOLUTE VALUE OE
)@@G@@         .ABS. A IS ABSOLUTE VALUE OF     @F@@@@       .MOD.   MODULO   OF
)@@G@@               A.MOD.B GIVES A MODULO B   @F@@@@       .INT.   TRUNCATIOOG
)@@G@@N              .INT.B IS B TRUNCATED TO   @D@@@@                        OH
)@@G@@               INTEGER PART   @G@@@@       .CONJ.  COMPLEX CONJUGATE    OI
)@@G@@   .CONJ.A IS COMPLEX CONJUGATE     @C@@@@                              OJ
)@@G@@         OF A     @F@@@@       .MIN.   MINIMUM                 A.MIN.B IOK
)@@G@@S MINIMUM OF A AND@B@@@@                                       B  @F@@@@OL
)@@G@@       .MAX.   MAXIMUM                 A.MAX.B IS MAXIMUM OF A AND@B@@@@OM
)@@G@@                                       B  @F@@@@       .SIGN.  SIGN TRANON
)@@G@@SFER           A.SIGN.B IS MAGNITUDE OF A @E@@@@                        OO
)@@G@@               WITH THE SIGN OF B.  @[@@@@      @[@@@@      @F@@@@      OP
)@@G@@ ANY COMPUTATIONAL OPERATOR EXCEPT // AND .CONJ. MAY BE USED@F@@@@ WITH OQ
)@@G@@ANY COMPUTATIONAL MODES IN ANY COMBINATION.  // IS ONLY     @G@@@@ DEFINOR
)@@G@@ED FOR INTEGERS.  .CONJ. IS ONLY DEFINED FOR COMPLEX OPERANDS     @E@@@@OS
)@@G@@ A NUMBER RAISED TO A NON-INTEGRAL POWER MUST BE POSITIVE.  @[@@@@*****^OT
)@@G@@@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         OU
)@@G@@ 3- 23@[@@@@      @[@@@@      @[@@@@      @[@@@@      @A@@@@  3. 3. 2.  OV
)@@G@@ CONVERSION OPERATORS   @[@@@@      @E@@@@       CONVERSION OPERATORS FOOW
)@@G@@RCE MODE CONVERSIONS OF THEIR @F@@@@ OPERANDS.  ALL CONVERSION OPERATORSOX
)@@G@@ EXCEPT .CMPLX. ARE UNARY     @C@@@@ OPERATORS.  AVAILABLE CONVERSION OPOY
)@@G@@ERATORS ARE:@[@@@@      @[@@@@      @A@@@@       SYMBOL           DESCRIOZ
)@@G@@PTION @A@@@@       ======           =========== @[@@@@      @B@@@@      PA
)@@G@@ .FIX.            CONVERT TO INTEGER@D@@@@       .FLOAT.          CONVERPB
)@@G@@T TO FLOATING POINT     @D@@@@       .DBLE.           CONVERT TO DOUBLE-PC
)@@G@@PRECISION   @B@@@@       .CMPLX.          CONVERT TO COMPLEX@E@@@@      PD
)@@G@@ .REAL.           EXTRACT REAL PART OF COMPLEX NUMBER @F@@@@       .IMAGPE
)@@G@@.           EXTRACT IMAGINARY PART OF COMPLEX NUMBER  @E@@@@       .BIT.PF
)@@G@@            CONVERT TO MODELESS (BIT-STRING)    @[@@@@      @[@@@@      PG
)@@G@@@[@@@@      @A@@@@  3. 3. 3.   MANIPULATIVE OPERATORS @[@@@@      @F@@@@PH
)@@G@@       MANIPULATIVE OPERATORS TREAT COMPUTER WORDS AS BIT PATTERNS@G@@@@PI
)@@G@@ RATHER THAN AS NUMBERS.  DATA INPUTS TO MANIPULATIVE OPERATORS MAY     PJ
)@@G@@@F@@@@ BE OF ANY MODE, SHIFT COUNTS (IF APPLICABLE) ARE IN BITS AND MUSTPK
)@@G@@@F@@@@ BE INTEGRAL.  THE OUTPUT OF A MANIPULATIVE OPERATOR IS ALWAYS    PL
)@@G@@@F@@@@ MODELESS.  A MODELESS OPERAND MAY BE COMBINED WITH AN OPERAND OF PM
)@@G@@@F@@@@ ANY SINGLEWORD MODE WITHOUT CONVERSION.  ANY COMPUTATIONS ON     PN
)@@G@@@E@@@@ PURELY MODELESS OPERANDS WILL BE PERFORMED IN INTEGER MODE.@B@@@@PO
)@@G@@ AVAILABLE MANIPULATIVE OPERATORS ARE     @[@@@@      @[@@@@      @A@@@@PP
)@@G@@       SYMBOL           DESCRIPTION @A@@@@       ======           ======PQ
)@@G@@===== @[@@@@      @[@@@@      @B@@@@       .A.              BITWISE 'ANDPR
)@@G@@'     @A@@@@       .V.              BITWISE 'OR'@F@@@@       .N.        PS
)@@G@@      BITWISE COMPLEMENTATION (INVERT EACH BIT) @C@@@@       .EV.       PT
)@@G@@      BITWISE EXCLUSIVE OR    @B@@@@       .LS.             BITWISE LEFTPU
)@@G@@ SHIFT@C@@@@       .RS.             BITWISE RIGHT SHIFT     @D@@@@      PV
)@@G@@ .LSC.            BITWISE LEFT SHIFT CIRCULAR   @D@@@@       .RSC.      PW
)@@G@@      BITWISE RIGHT SHIFT CIRCULAR  @[@@@@      @[@@@@      @[@@@@*****^PX
)@@G@@@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         PY
)@@G@@ 3- 24@[@@@@      @[@@@@      @[@@@@      @[@@@@      @A@@@@  3. 3. 4.  PZ
)@@G@@ COMPARATIVE OPERATORS  @[@@@@      @F@@@@       COMPARATIVE OPERATORS AQA
)@@G@@RE USED TO COMPARE TWO OPERANDS AND @G@@@@ PRODUCE A LOGICAL 'TRUE' OR 'QB
)@@G@@FALSE' AS OUTPUT FROM THE COMPARISON.     @[@@@@      @G@@@@ THE FOLLOWIQC
)@@G@@NG COMPARATIVE OPERATORS ARE DEFINED FOR INTEGER, REAL,     @A@@@@ AND DQD
)@@G@@OUBLE-PRECISION OPERANDS:     @[@@@@      @E@@@@       SYMBOL           QE
)@@G@@A.OPERATOR.B TRUE IF AND ONLY IF    @E@@@@       ======           ======QF
)@@G@@==========================    @[@@@@      @#@@@@       .GT.    )  @C@@@@QG
)@@G@@       .G.     )--      A IS GREATER THAN B     @#@@@@       >       )  QH
)@@G@@@[@@@@      @#@@@@       .LT.    )  @B@@@@       .L.     )--      A IS LQI
)@@G@@ESS THAN B  @#@@@@       <       )  @[@@@@      @#@@@@       <=      )  QJ
)@@G@@@D@@@@       .LE.    )--      A IS LESS THAN OR EQUAL TO B  @#@@@@      QK
)@@G@@ =<      )  @[@@@@      @#@@@@       >=      )  @E@@@@       .GE.    )--QL
)@@G@@      A IS GREATER THAN OR EQUAL TO B     @#@@@@       =>      )  @[@@@@QM
)@@G@@      @F@@@@  THE FOLLOWING COMPARATIVE OPERATORS ARE DEFINED FOR ALL MOQN
)@@G@@DES:  @[@@@@      @A@@@@       .EQ.             A EQUAL TO B@A@@@@      QO
)@@G@@ .E.              A EQUAL TO B@B@@@@       .NE.             A NOT EQUAL QP
)@@G@@TO B  @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971QQ
)@@G@@ VERSION)          3- 25@[@@@@      @[@@@@      @[@@@@      @[@@@@      QR
)@@G@@@ @@@@  3. 3. 5.   LOGICAL OPERATORS@[@@@@      @F@@@@       LOGICAL OPEQS
)@@G@@RATORS ARE BOOLEAN OPERATORS WHICH OPERATE ON   @F@@@@ BOOLEAN OPERANDS QT
)@@G@@TO PRODUCE A BOOLEAN RESULT.  AVAILABLE RELA-   @^@@@@ TIONAL OPERATORS QU
)@@G@@ARE:  @[@@@@      @E@@@@       SYMBOL           A.OPERATOR.B TRUE IF ANDQV
)@@G@@ ONLY IF    @E@@@@       ======           ==============================QW
)@@G@@==    @[@@@@      @C@@@@       .AND.            BOTH A TRUE AND B TRUE  QX
)@@G@@@E@@@@       .OR.             EITHER A TRUE OR B TRUE OR BOTH     @D@@@@QY
)@@G@@       .NOT.            B FALSE  (UNARY OPERATOR)     @D@@@@       .EXORQZ
)@@G@@.           A TRUE OR B TRUE BUT NOT BOTH @D@@@@       .THEN.           RA
)@@G@@TRUE UNLESS A TRUE AND B FALSE@F@@@@       .EQV.            A AND B ARE RB
)@@G@@BOTH EITHER TRUE OR FALSE     @[@@@@      @A@@@@  3. 3. 6.   MISCELLANEORC
)@@G@@US OPERATORS@[@@@@      @F@@@@       THE FOLLOWING TWO MISCELLANEOUS OPERD
)@@G@@RATORS WERE INSTALLED TO@G@@@@ ALLOW THE USER TO TAKE ADVANTAGE OF THE HRE
)@@G@@IGH-SPEED REPEATED SEARCH     @F@@@@ INSTRUCTIONS IN THE 1108 HARDWARE. RF
)@@G@@ BOTH OF THESE OPERATORS COM- @^@@@@ PILE INLINE SEARCHES.  @[@@@@      RG
)@@G@@@[@@@@      @F@@@@       .FIND.           RETURN INDEX OF ITEM IN STACK.RH
)@@G@@  ASSUMES   @F@@@@                        A(0) IS THE SIZE OF THE ARRAY RI
)@@G@@A IN WORDS, @F@@@@                        AND THAT A(1)...A(A(0)) CONTAIRJ
)@@G@@N DATA.  THE@A@@@@                        CONSTRUCTION@[@@@@      @A@@@@RK
)@@G@@                         A(14) = X  @A@@@@                         I=A.FRL
)@@G@@IND.X @[@@@@      @F@@@@                        RETURNS I=14.  AN ATTEMPRM
)@@G@@T TO FIND AN ITEM @F@@@@                        NOT IN THE LIST RETURNS RN
)@@G@@A VALUE OF 0.     @[@@@@      @[@@@@      @F@@@@       .LOCATE.         RO
)@@G@@FIND ITEM IN SORTED LIST.  A(0) CONTAINS  @F@@@@                        RP
)@@G@@ARRAY SIZE AS ABOVE.  FOR .LOCATE., THE   @F@@@@                        RQ
)@@G@@ADDITIONAL RESTRICTION ON DATA ITEMS IS   @E@@@@                        RR
)@@G@@ADDED THAT IF I>J THEN A(I)>A(J).   @F@@@@                        A.LOCARS
)@@G@@TE.B WILL RETURN THE INDEX IN THE   @G@@@@                        ARRAY RT
)@@G@@WHERE B IS LOCATED OR WHERE IT SHOULD     @C@@@@                        RU
)@@G@@BE IF IT IS NOT THERE.  @[@@@@      @[@@@@      @F@@@@ THE NEXT OPERATORRV
)@@G@@ IS NOT REALLY IN ANY CATEGORY; ITS PRIMARY USE @F@@@@ IS IN ACCOMPANYINRW
)@@G@@G VARIOUS FUNCTIONS PECULIAR TO EXEC 8 OR TO AN @[@@@@ 1108.@[@@@@*****^RX
)@@G@@@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         RY
)@@G@@ 3- 26@[@@@@      @[@@@@      @[@@@@      @F@@@@       .LOC.            RZ
)@@G@@RETURN THE CORE LOCATION AT WHICH THE     @F@@@@                        SA
)@@G@@OPERAND IS STORED (UNARY OPERATOR).  FOR  @A@@@@                        SB
)@@G@@EXAMPLE,    @[@@@@      @A@@@@                        Y = .LOC. X @[@@@@SC
)@@G@@      @G@@@@                        WILL SET Y TO AN INTEGER NUMBER WHOSSD
)@@G@@E VALUE     @F@@@@                        IS THE CORE ADDRESS AT WHICH XSE
)@@G@@ IS STORED. @[@@@@      @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RASF
)@@G@@LPH (DECEMBER 1971 VERSION)          3- 27@[@@@@      @[@@@@      @[@@@@SG
)@@G@@      @[@@@@      @E@@@@  3. 3. 7.   TABLE OF OPERATORS, PRECEDENCES, ANSH
)@@G@@D TYPES     @[@@@@      @C@@@@  OPERATOR     PRECEDENCE              TYPSI
)@@G@@E     @C@@@@  ========     ==========              ====     @C@@@@  .EQVSJ
)@@G@@.        2                       LOGICAL  @C@@@@  .THEN.       3        SK
)@@G@@               LOGICAL  @C@@@@  .EXOR.       4                       LOGSL
)@@G@@ICAL  @C@@@@  .OR.         4                       LOGICAL  @C@@@@  .ANDSM
)@@G@@.        5                       LOGICAL  @C@@@@  .NOT.        6        SN
)@@G@@               LOGICAL  @D@@@@  .E.          7                       COMSO
)@@G@@PARATIVE    @D@@@@  .EQ.         7                       COMPARATIVE    SP
)@@G@@@D@@@@  .G.          7                       COMPARATIVE    @D@@@@  .GE.SQ
)@@G@@         7                       COMPARATIVE    @D@@@@  .GT.         7  SR
)@@G@@                     COMPARATIVE    @D@@@@  .L.          7              SS
)@@G@@         COMPARATIVE    @D@@@@  .LE.         7                       COMST
)@@G@@PARATIVE    @D@@@@  .LT.         7                       COMPARATIVE    SU
)@@G@@@D@@@@  .NE.         7                       COMPARATIVE    @D@@@@   +  SV
)@@G@@         8                       COMPUTATIONAL  @D@@@@   -           8  SW
)@@G@@                     COMPUTATIONAL  @D@@@@   *           9              SX
)@@G@@         COMPUTATIONAL  @D@@@@   /           9                       COMSY
)@@G@@PUTATIONAL  @D@@@@   //          9                       COMPUTATIONAL  SZ
)@@G@@@D@@@@  .MOD.        9                       COMPUTATIONAL  @D@@@@  .NEGTA
)@@G@@.        10                      COMPUTATIONAL  @D@@@@   **          11 TB
)@@G@@                     COMPUTATIONAL  @D@@@@  .P.          11             TC
)@@G@@         COMPUTATIONAL  @D@@@@  .DIM.        12                      COMTD
)@@G@@PUTATIONAL  @D@@@@  .EV.         12                      MANIPULATIVE   TE
)@@G@@@D@@@@  .FIND.       12                      MISCELLANEOUS  @D@@@@  .LOCTF
)@@G@@ATE.     12                      MISCELLANEOUS  @D@@@@  .MAX.        12 TG
)@@G@@                     COMPUTATIONAL  @D@@@@  .MIN.        12             TH
)@@G@@         COMPUTATIONAL  @D@@@@  .V.          12                      MANTI
)@@G@@IPULATIVE   @D@@@@  .A.          13                      MANIPULATIVE   TJ
)@@G@@@D@@@@  .ABS.        14                      COMPUTATIONAL  @D@@@@  .CONTK
)@@G@@J.       14                      COMPUTATIONAL  @D@@@@  .INT.        14 TL
)@@G@@                     COMPUTATIONAL  @D@@@@  .LS.         14             TM
)@@G@@         MANIPULATIVE   @D@@@@  .LSC.        14                      MANTN
)@@G@@IPULATIVE   @D@@@@  .N.          14                      MANIPULATIVE   TO
)@@G@@@D@@@@  .NABS.       14                      COMPUTATIONAL  @D@@@@  .RS.TP
)@@G@@         14                      MANIPULATIVE   @D@@@@  .RSC.        14 TQ
)@@G@@                     MANIPULATIVE   @D@@@@  .SIGN.       14             TR
)@@G@@         COMPUTATIONAL  @D@@@@  .BOOL.       15                      CONTS
)@@G@@VERSION     @D@@@@  .CMPLX.      15                      CONVERSION     TT
)@@G@@@D@@@@  .DOUBLE.     15                      CONVERSION     @[@@@@*****^TU
)@@G@@@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         TV
)@@G@@ 3- 28@[@@@@      @[@@@@      @[@@@@      @D@@@@  .FIX.        15       TW
)@@G@@               CONVERSION     @D@@@@  .FLOAT.      15                   TX
)@@G@@   CONVERSION     @D@@@@  .IMAG.       15                      CONVERSIOTY
)@@G@@N     @D@@@@  .REAL.       15                      CONVERSION     @D@@@@TZ
)@@G@@  .SINGLE.     15                      CONVERSION     @D@@@@  .LOC.     UA
)@@G@@   16                      MISCELLANEOUS  @[@@@@*****^@G@@@@A GUIDE TO PUB
)@@G@@ROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          3- 29@[@@@@      UC
)@@G@@@[@@@@      @[@@@@      @[@@@@      @[@@@@      @^@@@@  3. 4.   EXPRESSIUD
)@@G@@ONS   @[@@@@      @[@@@@      @F@@@@       EXPRESSIONS CAN BE GROUPED INUE
)@@G@@TO THREE CATEGORIES:  SIMPLE  @F@@@@ EXPRESSIONS, ALTERNATIVE EXPRESSIONUF
)@@G@@S, AND ITERATIVE EXPRESSIONS. @F@@@@ UNDER 'SIMPLE EXPRESSIONS' FALL ALLUG
)@@G@@ LEGAL COMBINATIONS OF OPERA- @G@@@@ TORS AND OPERANDS AS DESCRIBED IN TUH
)@@G@@HE PRECEDING TWO SECTIONS.  THE     @F@@@@ ALTERNATIVE EXPRESSION AND THUI
)@@G@@E ITERATIVE EXPRESSION ARE SPECIAL  @F@@@@ COMMA-PUNCTUATED COMPOUND FORUJ
)@@G@@MS.  THERE ARE NO INSTANCES IN RALPH@F@@@@ WHERE ONE TYPE OF EXPRESSION UK
)@@G@@IS CONTEXTUALLY LEGAL AND ANOTHER IS@[@@@@ NOT. @[@@@@      @A@@@@  3. 4UL
)@@G@@. 1.   SIMPLE EXPRESSIONS     @[@@@@      @F@@@@       A SIMPLE EXPRESSIUM
)@@G@@ON IS A COMBINATION OF OPERATOR(S) AND    @]@@@@ OPERANDS.  @[@@@@      UN
)@@G@@@D@@@@               EXAMPLES:  (ALL OF THE FOLLOWING ARE   @C@@@@      UO
)@@G@@                    SIMPLE EXPRESSIONS)   @[@@@@      @E@@@@       A+B  UP
)@@G@@ B*C+D   A+B.P.C   P+(Q+R*(S.LS.T))   SQRT.(A-B)@[@@@@      @F@@@@      UQ
)@@G@@ A SIMPLE EXPRESSION IS BROKEN DOWN BY THE COMPILER INTO A  @F@@@@ SEQUEUR
)@@G@@NCE OF OPERAND-OPERATOR-OPERAND TRIPLES.  FOR EXAMPLE, THE  @]@@@@ STATEUS
)@@G@@MENT  @[@@@@      @A@@@@       A = B + C * D + ( E / F + G )@[@@@@      UT
)@@G@@@F@@@@       WILL BE BROKEN DOWN INTO THE FOLLOWING 'SUBSTATEMENTS'     UU
)@@G@@@[@@@@      @[@@@@      @ @@@@               TEMP1 = E / F  @A@@@@      UV
)@@G@@         TEMP2 = TEMP1 + G    @ @@@@               TEMP3 = C * D  @A@@@@UW
)@@G@@               TEMP4 = B + TEMP3    @A@@@@               TEMP5 = TEMP4 +UX
)@@G@@ TEMP2@^@@@@               A = TEMP5@[@@@@      @[@@@@      @[@@@@      UY
)@@G@@@F@@@@       THE ORDER OF THE SUBEXPRESSION BREAKDOWN BY THE COMPILER   UZ
)@@G@@@G@@@@ DEPENDS UPON PARENTHESIS USE AND OPERATOR PRECEDENCE.  'TEMP1' ANVA
)@@G@@D     @F@@@@ SO ON ARE SPECIAL TEMPORARY-STORAGE SPOTS GENERATED BY THE VB
)@@G@@COMPI-@[@@@@ LER. @[@@@@      @[@@@@      @B@@@@  3. 4. 2.   THE ALTERNAVC
)@@G@@TIVE EXPRESSION   @[@@@@      @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WVD
)@@G@@ITH RALPH (DECEMBER 1971 VERSION)          3- 30@[@@@@      @[@@@@      VE
)@@G@@@[@@@@      @F@@@@       THE ALTERNATIVE EXPRESSION IS A COMBINED BOOLEAVF
)@@G@@N/ARITHMETIC@F@@@@ EXPRESSION WHICH CAN SELECT ONE OF TWO VALUES DEPENDIVG
)@@G@@NG UPON A   @A@@@@ BOOLEAN CONDITION.  IT HAS THE FORM@[@@@@      @D@@@@VH
)@@G@@       [<BOOLEAN EXPRESSION>,<VALUE-1>,<VALUE-2>]     @[@@@@      @F@@@@VI
)@@G@@ WHERE THE VALUE-I CAN BE ANY EXPRESSIONS.  THE ENTIRE EXPRESSION @F@@@@VJ
)@@G@@ IS EQUAL TO <VALUE-1> IF <BOOLEAN EXPRESSION> IS TRUE, AND IS    @D@@@@VK
)@@G@@ EQUAL TO <VALUE-2> IF <BOOLEAN EXPRESSION> IS FALSE. @[@@@@      @^@@@@VL
)@@G@@               EXAMPLES:@^@@@@               =========@[@@@@      @ @@@@VM
)@@G@@       X = [A.G.B,A(I),A(I-1)]@C@@@@                        WILL SET X=AVN
)@@G@@(I) IF A>B  @D@@@@                                 X=A(I-1) OTHERWISE   VO
)@@G@@@[@@@@      @B@@@@       TRANSFER TO [A.GT.J,AGAIN,BEFORE]  @C@@@@      VP
)@@G@@         WILL TRANSFER TO AGAIN IF A>J    @D@@@@                        VQ
)@@G@@        BEFORE OTHERWISE.     @[@@@@      @[@@@@      @F@@@@       AN ALVR
)@@G@@TERNATIVE EXPRESSION MAY BE USED IN ANY CONTEXT WHERE @F@@@@ AN ARITHMETVS
)@@G@@IC EXPRESSION IS LEGAL, EXCEPT IN THE 'PARAMETER'     @]@@@@ STATEMENT. VT
)@@G@@@[@@@@      @B@@@@  3. 4. 3.   THE ITERATIVE EXPRESSION     @[@@@@      VU
)@@G@@@F@@@@       THE ITERATIVE EXPRESSION IS A MEANS OF INCLUDING AN ITERA- VV
)@@G@@@F@@@@ TION OR ITERATION-DRIVEN CALCULATION IN ANY ARITHMETIC CONTEXT.  VW
)@@G@@@E@@@@ THE GENERAL FORM OF AN ITERATIVE ARITHMETIC EXPRESSION IS: @[@@@@VX
)@@G@@      @E@@@@ (<VARIABLE>=<INIT>,<ITERATION CONTROL>,<EXP1>,<EXP2>,...)  VY
)@@G@@@[@@@@      @[@@@@      @F@@@@       <ITERATION CONTROL> IS A THREE-FIELVZ
)@@G@@D ITEM DEFINED EXACTLY  @F@@@@ THE SAME AS THE ITERATED I/O LISTS IN SECWA
)@@G@@TION A.B.  AN ITERATIVE @B@@@@ EXPRESSION IS INTERPRETED AS FOLLOWS:    WB
)@@G@@@[@@@@      @F@@@@       THE <VARIABLE> UPON WHICH THE ITERATIVE EXPRESSWC
)@@G@@ION IS BASED@F@@@@ IS GIVEN ITS INITIAL VALUE, <INIT>.  FOR EACH TIME THWD
)@@G@@E ITERATION @F@@@@ IS PERFORMED, THE ENTIRE STRING OF EXPRESSIONS AND STWE
)@@G@@ATEMENTS IS @ @@@@ SCANNED, FROM LEFT TO RIGHT. @[@@@@      @F@@@@      WF
)@@G@@ IF AN EXPRESSION IS INCLUDED IN THE <EXPI> IN THE LIST, THE@B@@@@ VARIAWG
)@@G@@BLE IS SET EQUAL TO THE EXPRESSION. @[@@@@      @F@@@@       IF A SIMPLEWH
)@@G@@ ARITHMETIC STATEMENT IS INCLUDED IN THE <EXPI>,@F@@@@ IT IS PROCESSED, WI
)@@G@@THE VARIABLE IS NOT CHANGED, AND THE NEXT <EXPI>@]@@@@ TAKEN.     @[@@@@WJ
)@@G@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)   WK
)@@G@@       3- 31@[@@@@      @[@@@@      @[@@@@      @[@@@@      @F@@@@      WL
)@@G@@ THE VALUE OF AN ITERATIVE EXPRESSION IS DEFINED TO BE THE  @D@@@@ VALUEWM
)@@G@@ OF <VARIABLE> WHEN THE ITERATION TERMINATES.   @[@@@@      @F@@@@      WN
)@@G@@ IF DESIRED, THE INITIAL VALUE ASSIGNED TO THE ITERATION    @F@@@@ VARIAWO
)@@G@@BLE MAY BE OMITTED:  THE FOLLOWING CONSTRUCTION IS LEGAL--  @[@@@@      WP
)@@G@@@D@@@@ (<VARIABLE>,<ITERATION CONTROL>,<EXP1>,<EXP2>,...)   @[@@@@      WQ
)@@G@@@F@@@@ THE BEHAVIOR OF THIS FORM IS EXACTLY THE SAME AS THAT OF THE ONE WR
)@@G@@@F@@@@ DISCUSSED ABOVE SAVE THAT THERE IS NO INITIAL VALUE ASSIGNED TO  WS
)@@G@@@#@@@@ THE <VARIABLE>.  @[@@@@      @^@@@@               EXAMPLES:@^@@@@WT
)@@G@@               =========@[@@@@      @B@@@@       MEAN=(SUM=0,I=1,1,I.G.NWU
)@@G@@,SUM+X(I))/N@[@@@@      @E@@@@       STDEV=SQRT.((SUM=0,I=1,1,I.G.N,SUM+WV
)@@G@@(X(I)-MEAN)**2)/N)@[@@@@      @E@@@@       A=(X(J)=23,I=-3,4,I.G.PP,X(I)WW
)@@G@@=X(I-1)*I,X(J)+SIN(I))  @[@@@@      @D@@@@       ANSWER = (ANSWER,I=1,1,WX
)@@G@@I.G.N,ANSWER+OB(I,J))   @[@@@@      @[@@@@      @F@@@@       AN ITERATIVWY
)@@G@@E EXPRESSION IS LEGAL IN ANY CONTEXT WHERE AN   @F@@@@ EXPRESSION IS LEGWZ
)@@G@@AL.  IF AN ITERATIVE EXPRESSION IS USED IN A    @F@@@@ FORTRAN I/O LIST,XA
)@@G@@ IT MUST BE ENCLOSED IN AN EXTRA SET OF PAREN-  @F@@@@ THESES TO ENABLE XB
)@@G@@THE COMPILER TO DISTINGUSH IT FROM AN ITERATIVE @[@@@@ LIST.@[@@@@      XC
)@@G@@@B@@@@  3. 4. 4.   OPERATOR-MODE COMBINATIONS   @[@@@@      @F@@@@      XD
)@@G@@ THE OPERANDS OF ALL OPERATORS MUST BE OF APPROPRIATE MODE. @F@@@@ AN ERXE
)@@G@@ROR MESSAGE WILL BE GENERATED, AND THE COMPUTATION IGNORED, @F@@@@ IF ANXF
)@@G@@ OPERATOR IS USED WITH OPERANDS OF ILLEGAL MODE.  FOR THE   @F@@@@ 'COMPXG
)@@G@@UTATIONAL' OPERATORS, IF THE LEFT AND RIGHT OPERAND MODES   @F@@@@ DIFFEXH
)@@G@@R, THE OPERAND WHOSE MODE NUMBER IS LOWER WILL BE CONVERTED @F@@@@ TO THXI
)@@G@@E HIGHER MODE (SEE SECTION 3.1 FOR A TABLE OF MODE NUMBERS).@F@@@@ THOSEXJ
)@@G@@ MODES WHOSE NUMBER IS 4 OR LESS ARE DENOTED 'COMPUTATIONAL'@]@@@@ MODESXK
)@@G@@.     @[@@@@      @ @@@@  3. 4. 5.   MODE CONVERSION  @[@@@@      @F@@@@XL
)@@G@@       AT THE TIME THAT RALPH IS BREAKING AN EXPRESSION DOWN INTO @F@@@@XM
)@@G@@ TRIPLES, MODES ARE IGNORED.  IN A LATER PASS OF THE COMPILER,    @F@@@@XN
)@@G@@ MODES ARE TAKEN INTO CONSIDERATION AND CODE PRODUCED.  IF DEFINED@F@@@@XO
)@@G@@ FOR THE OPERATOR AT HAND (COMPUTATIONAL OPERATORS), A TRIPLE IS  @F@@@@XP
)@@G@@ EVALUATED IN THE HIGHER OF ITS TWO MODES, AND ITS OUTPUT IS ALSO @A@@@@XQ
)@@G@@ DEFINED TO BE OF THIS HIGHER MODE. @[@@@@*****^@G@@@@A GUIDE TO PROGRAMXR
)@@G@@MING WITH RALPH (DECEMBER 1971 VERSION)          3- 32@[@@@@      @[@@@@XS
)@@G@@      @[@@@@      @[@@@@      @F@@@@       FOR EXAMPLE, THE TRIPLE 1+2.0XT
)@@G@@ WILL BE EVALUATED IN FLOATING@F@@@@ POINT AND PRODUCE A FLOATING-POINT XU
)@@G@@3.0 FOR A RESULT.  THE TRIPLE @C@@@@ 1+2, HOWEVER, WILL BE EVALUATED IN XV
)@@G@@INTEGER.    @[@@@@      @F@@@@       ALTHOUGH THE COMPILER WILL READILY XW
)@@G@@CONVERT MODES AS NEEDED,@F@@@@ THE OBJECT CODE PRODUCED IS LESS EFFICIENXX
)@@G@@T WHEN LARGE NUMBERS OF @F@@@@ MODE CONVERSIONS ARE BEING MADE.  IT IS GXY
)@@G@@OOD PROGRAMMING PRACTICE@F@@@@ TO AVOID MIXED-MODE EXPRESSIONS WHERE POSXZ
)@@G@@SIBLE.  MODE CONVERSIONS@E@@@@ ON CONSTANTS ARE MADE BY THE OPTIMIZER, AYA
)@@G@@ND WILL NOT AFFECT@F@@@@ GENERATED OBJECT CODE, SO ONE NEED NOT WORRY ABYB
)@@G@@OUT MODES OF CON- @A@@@@ STANTS IN COMPUTATIONAL USAGE.     @[@@@@      YC
)@@G@@@F@@@@       IT IS IMPORTANT TO NOTE THAT THE PRESENCE OF A HIGHER-MODE YD
)@@G@@@F@@@@ OPERAND IN AN EXPRESSION DOES NOT FORCE ANY COMPUTATIONS TO TAKE YE
)@@G@@@G@@@@ PLACE IN THAT MODE UNTIL THE OPERAND IS ACTUALLY REFERENCED.  SOMYF
)@@G@@E     @G@@@@ COMPILERS IMMEDIATELY UPGRADE ALL ELEMENTS OF AN EXPRESSIONYG
)@@G@@ TO THE     @G@@@@ HIGHEST MODE.  IN ORDER TO MINIMIZE EXECUTION TIME, RYH
)@@G@@ALPH DOES NOT     @F@@@@ UPGRADE THE MODE OF A CALCULATION UNTIL IT IS FYI
)@@G@@ORCED TO DO SO.   @[@@@@      @A@@@@  3. 4. 6.   OPERATOR PRECEDENCE    YJ
)@@G@@@[@@@@      @[@@@@      @G@@@@       EACH OPERATOR IS ASSIGNED A PRECEDEYK
)@@G@@NCE VALUE; IN THE ABSENCE     @F@@@@ OF PARENTHESES, OPERATORS WITH HIGHYL
)@@G@@ER PRECEDENCE ARE EVALUATED   @F@@@@ FIRST.  IN GENERAL, AN EXPRESSION IYM
)@@G@@NSIDE PARENTHESES IS EVALUATED@F@@@@ BEFORE ANY EXPRESSION OUTSIDE PARENYN
)@@G@@THESES.  WITHIN A PARENTHESIS @G@@@@ GROUP, NORMAL PRECEDENCE RULES APPLYO
)@@G@@Y.  DISTINCT PARENTHESIS GROUPS     @F@@@@ ARE EVALUATED IN RIGHT-TO-LEFYP
)@@G@@T ORDER NORMALLY.  FOR A COMPLETE   @G@@@@ DISCUSSION OF THE SCANNING PRYQ
)@@G@@OCESS FOR ARITHMETIC EXPRESSIONS, SEE     @F@@@@ THE SECTION OF 'PROGRAMYR
)@@G@@MING SYSTEMS AND LANGUAGES' (SAUL ROSEN,  @E@@@@ ED:  MCGRAW-HILL & CO. YS
)@@G@@C. 1967) ENTITLED 'BOUNDED-CONTEXT  @#@@@@ TRANSLATION'.    @[@@@@      YT
)@@G@@@[@@@@      @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBEYU
)@@G@@R 1971 VERSION)          4-  1@[@@@@      @[@@@@      @[@@@@      @ @@@@YV
)@@G@@  4.   ASSIGNMENT STATEMENTS  @[@@@@      @[@@@@      @[@@@@      @F@@@@YW
)@@G@@       ASSIGNMENT STATEMENTS PERFORM CALCULATIONS.  THERE ARE TWO @G@@@@YX
)@@G@@ TYPES OF ASSIGNMENT STATEMENTS:  SIMPLE AND ITERATIVE.  THE SIMPLE     YY
)@@G@@@F@@@@ ASSIGNMENT STATEMENT IS THE ONE MOST COMMONLY USED; THE ITERATIVEYZ
)@@G@@@F@@@@ ASSIGNMENT STATEMENT IS A LUXURY GLEANED FROM ALGOL 60 AND COU-  ZA
)@@G@@@F@@@@ SINS, AND IS SIMPLY A COMPACT WAY OF DOING A LOT OF THINGS AT    ZB
)@@G@@@[@@@@ ONCE.@[@@@@      @[@@@@      @B@@@@  4. 1.   SIMPLE ASSIGNMENT STZC
)@@G@@ATEMENTS    @[@@@@      @[@@@@      @[@@@@      @[@@@@      @E@@@@      ZD
)@@G@@         A SIMPLE ASSIGNMENT STATEMENT IS OF THE FORM @[@@@@      @[@@@@ZE
)@@G@@      @A@@@@       <VARIABLE> = <EXPRESSION>    @[@@@@      @E@@@@      ZF
)@@G@@         (AN ALTERNATE MULTIPLE FORM IS ALLOWED):     @[@@@@      @E@@@@ZG
)@@G@@       <VARIABLE-1> = <VARIABLE-2> = ... = <EXPRESSION>     @[@@@@      ZH
)@@G@@@[@@@@      @F@@@@       THE EXAMPLE OF THE FIRST CASE SETS THE VARIABLEZI
)@@G@@ ON THE LEFT@F@@@@ SIDE OF THE EQUALS SIGN TO THE VALUE COMPUTED IN THE ZJ
)@@G@@EXPRESSION  @F@@@@ WHICH IS ON THE RIGHT SIDE OF THE EQUALS SIGN.  THE SZK
)@@G@@ECOND FORM  @F@@@@ SETS ALL OF THE VARIABLES-I TO THE VALUE COMPUTED FORZL
)@@G@@ THE EXPRES-@E@@@@ SION, IN ORDER FROM RIGHT TO LEFT.  THUS, THE STATEMEZM
)@@G@@NT    @[@@@@      @ @@@@       A(N) = N = A(K) = K = 7@[@@@@      @E@@@@ZN
)@@G@@       WILL SET K=7, THEN A(7)=7, THEN N=7, THEN A(7)=7.    @[@@@@      ZO
)@@G@@@^@@@@               EXAMPLES:@[@@@@      @]@@@@       X = Y@#@@@@      ZP
)@@G@@ A(3,1) = 0 @A@@@@       X(4) = B = C = D(1,1) = 2+H  @E@@@@       A(Y,IZQ
)@@G@@+Y*SIN(9)) = 24.2//MIN(A,B,C)**MAX(D,E,F/G)     @[@@@@      @[@@@@      ZR
)@@G@@@B@@@@  4. 2.   ITERATIVE ASSIGNMENT STATEMENTS @[@@@@      @[@@@@      ZS
)@@G@@@[@@@@      @E@@@@       AN ITERATIVE ASSIGNMENT STATEMENT IS OF THE FORZT
)@@G@@M     @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971ZU
)@@G@@ VERSION)          4-  2@[@@@@      @[@@@@      @[@@@@      @[@@@@      ZV
)@@G@@@B@@@@ (<ITERATION CONTROL>,<BODY OF ITERATION>)@[@@@@      @F@@@@      ZW
)@@G@@ WHERE <BODY OF ITERATION> IS EITHER A STRING OF SIMPLE     @G@@@@ ASSIGZX
)@@G@@NMENT STATEMENTS SEPARATED BY COMMAS, OR A COMPLETE ITERATIVE     @F@@@@ZY
)@@G@@ ASSIGNMENT STATEMENT.  THIS LAST CONSTRUCTION PERMITS NESTING OF @^@@@@ZZ
)@@G@@ ITERATION CONTROL.     @[@@@@      @F@@@@       THE <ITERATION CONTROL>AA
)@@G@@ IS OF EXACTLY THE SAME FORM AS THE @F@@@@ ITERATION CONTROL DISCUSSED IAB
)@@G@@N SECTION A.B FOR THE 'ITERATED I/O @G@@@@ LIST'.  EFFECTIVELY, THE ITERAC
)@@G@@ATIVE ASSIGNMENT STATEMENT SETS UP AN     @F@@@@ IMPLIED LOOP STRUCTURE,AD
)@@G@@ WITH AN EVENTUAL STRING OF SIMPLE ASSIGN-@C@@@@ MENT STATEMENTS FORMINGAE
)@@G@@ THE BODY OF THE LOOP.  @[@@@@      @^@@@@               EXAMPLES:@[@@@@AF
)@@G@@      @D@@@@       (I=1,1,I.G.N,A(I)=B(I)=C(I)=0,A(J-I)=B(JI+1))) @[@@@@AG
)@@G@@      @E@@@@       (J=1,1,J.G.4,(K=1,1,K.G.4,X(J,K)=A(K,L)*B(L,J)))     AH
)@@G@@@[@@@@      @[@@@@      @F@@@@       NOTE:  IF X IS A VALID ITERATIVE ASAI
)@@G@@SIGNMENT STATEMENT, THEN@F@@@@ (ITERATION CONTROL,(X)) IS ALSO A VALID IAJ
)@@G@@TERATIVE ASSIGNMENT     @F@@@@ STATEMENT.  HOWEVER, (ITERATION CONTROL, AK
)@@G@@(X),OTHER STATEMENT) IS @C@@@@ *NOT*  A VALID ITERATIVE ASSIGNMENT STATEAL
)@@G@@MENT!!@[@@@@      @[@@@@      @B@@@@  4. 3.   THE OPERAND REVERSAL STATEAM
)@@G@@MENT  @[@@@@      @[@@@@      @G@@@@       OFTEN IT IS NICE TO BE ABLE TAN
)@@G@@O SWITCH TWO VARIABLES; SORTING     @G@@@@ AND COLLATING GIVE RISE TO THAO
)@@G@@IS SORT OF NEED.  THE REVERSAL STATE-     @[@@@@ MENT @[@@@@      @B@@@@AP
)@@G@@               <VARIABLE>==<VARIABLE>     @[@@@@      @G@@@@ WILL SWAP TAQ
)@@G@@HE TWO OPERANDS.  EACH <VARIABLE> MAY BE ANY ITEM WHICH     @F@@@@ IS INAR
)@@G@@ ITSELF LEGAL ON THE LEFT HALF OF AN EQUALS SIGN.  BOTH LEFT@C@@@@ AND RAS
)@@G@@IGHT OPERANDS MUST BE OF THE SAME MODE.   @[@@@@      @[@@@@      @[@@@@AT
)@@G@@      @D@@@@  4. 4.   MODE CONVERSION IN ASSIGNMENT STATEMENTS    @[@@@@AU
)@@G@@      @[@@@@      @[@@@@      @E@@@@       WHEN A SIMPLE ASSIGNMENT STATAV
)@@G@@EMENT IS PROCESSED, THE @G@@@@ RIGHT-HAND SIDE IS EVALUATED COMPLETELY AAW
)@@G@@CCORDING TO THE RULES FOR     @G@@@@ EVALUATION OF EXPRESSIONS AS SET FOAX
)@@G@@RTH IN SECTION 3.4.  AFTER THIS     @G@@@@ EXPRESSION HAS BEEN EVALUATEDAY
)@@G@@, WITH MODE CONVERSIONS AS NECESSARY,     @[@@@@*****^@G@@@@A GUIDE TO PAZ
)@@G@@ROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          4-  4@[@@@@      BA
)@@G@@@[@@@@      @[@@@@      @F@@@@ THE RIGHT-HAND EXPRESSION IS THEN CONVERTBB
)@@G@@ED TO THE MODE OF THE   @ @@@@ LEFT OPERAND AND STORED.     @[@@@@      BC
)@@G@@@ @@@@       THUS, THE STATEMENT    @[@@@@      @#@@@@       X = 3 / 5  BD
)@@G@@@[@@@@      @B@@@@       WILL BE EQUIVALENT TO THE STATEMENT@[@@@@      BE
)@@G@@@#@@@@       X = 0.     @[@@@@      @G@@@@       BECAUSE THE DIVISION WIBF
)@@G@@LL BE EVALUATED IN INTEGER ARITHMETIC     @C@@@@ AND WILL YIELD ZERO BY BG
)@@G@@TRUNCATION.  HOWEVER,   @[@@@@      @#@@@@       X = 3. / 5 @[@@@@      BH
)@@G@@@B@@@@       WILL BE EQUIVALENT TO THE STATEMENT@[@@@@      @#@@@@      BI
)@@G@@ X = 0.6    @[@@@@      @G@@@@       BECAUSE THE PRESENCE OF THE FLOATINBJ
)@@G@@G POINT OPERAND (3.) WILL     @F@@@@ FORCE THE ENTIRE DIVISION TO BE CARBK
)@@G@@RIED OUT IN FLOATING POINT.   @[@@@@      @[@@@@*****^@G@@@@A GUIDE TO PBL
)@@G@@ROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          5-  1@[@@@@      BM
)@@G@@@[@@@@      @[@@@@      @ @@@@  5.   CONTROL STATEMENTS     @[@@@@      BN
)@@G@@@[@@@@      @[@@@@      @G@@@@       CONTROL STATEMENTS GOVERN PROGRAM FBO
)@@G@@LOW, I.E. THE TRANSFER OF     @G@@@@ CONTROL FROM ONE SECTION OF THE PROBP
)@@G@@GRAM TO ANOTHER, THE REPETITION     @A@@@@ OF SECTIONS OF THE PROGRAM, EBQ
)@@G@@TC.   @[@@@@      @[@@@@      @ @@@@  5. 1.   TRANSFER OF CONTROL @[@@@@BR
)@@G@@      @[@@@@      @F@@@@       RALPH-COMPILED STATEMENTS ARE NORMALLY EXBS
)@@G@@ECUTED SEQUENTIAL-@F@@@@ LY.  ANY DEVIATION FROM THIS PATTERN MUST BE ACBT
)@@G@@COMPLISHED THROUGH@F@@@@ THE USE OF A 'TRANSFER OF CONTROL' STATEMENT.  BU
)@@G@@PROGRAM EXECUTION @F@@@@ IS RESUMED AT THE NEW STATEMENT, THUS THE NEXT BV
)@@G@@EXECUTABLE STATE- @F@@@@ MENT AFTER A TRANSFER OF CONTROL STATEMENT MUSTBW
)@@G@@ HAVE A STATEMENT @F@@@@ LABEL, ELSE THERE WILL BE NO POSSIBLE WAY FOR TBX
)@@G@@HE PROGRAM EVER TO@^@@@@ REACH THAT STATEMENT.  @[@@@@      @A@@@@  5. 1BY
)@@G@@. 1.   UNCONDITIONAL TRANSFER @[@@@@      @G@@@@       AN UNCONDITIONAL BZ
)@@G@@TRANSFER STATEMENT CAUSES PROGRAM EXECUTION     @F@@@@ TO BE TRANSFERREDCA
)@@G@@ TO ANOTHER PART OF THE PROGRAM.  THE GENERAL   @E@@@@ FORM OF THE ABSOLCB
)@@G@@UTE (UNCONDITIONAL) TRANSFER STATEMENT IS:@[@@@@      @B@@@@       (FORTCC
)@@G@@RAN):       GO TO  <LABEL>    @[@@@@      @C@@@@       (MAD):           CD
)@@G@@TRANSFER TO <LABEL>     @[@@@@      @F@@@@       IN FORTRAN, <LABEL> IS CE
)@@G@@A 5-DIGIT INTEGER CORRESPONDING TO A@F@@@@ 5-DIGIT STATEMENT NUMBER PUNCCF
)@@G@@HED SOMEWHERE IN THE PROGRAM.  IN   @F@@@@ MAD, <LABEL> IS ANY EXPRESSIOCG
)@@G@@N OF STATEMENT LABEL MODE.  IN ITS  @F@@@@ SIMPLEST FORM, THE MAD <LABELCH
)@@G@@> IS SIMPLY A STATEMENT LABEL AS    @F@@@@ PUNCHED ON SOME STATEMENT ELSCI
)@@G@@EWHERE IN THE PROGRAM.  SEE SECTION @D@@@@ 3.2.1.7 FOR FURTHER DISCUSSIOCJ
)@@G@@N OF STATEMENT LABELS.  @[@@@@      @[@@@@      @#@@@@       EXAMPLES:  CK
)@@G@@@#@@@@       =========  @[@@@@      @#@@@@       (FORTRAN): @^@@@@      CL
)@@G@@         GO TO 3  @ @@@@               GO TO 23355    @[@@@@      @#@@@@CM
)@@G@@       (MAD):     @A@@@@               TRANSFER TO GRONK    @B@@@@      CN
)@@G@@         TRANSFER TO IDENT(J,K)     @C@@@@               TRANSFER TO [DACO
)@@G@@TA>0,START,STOP]  @[@@@@      @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WCP
)@@G@@ITH RALPH (DECEMBER 1971 VERSION)          5-  2@[@@@@      @[@@@@      CQ
)@@G@@@[@@@@      @E@@@@       THE LAST EXAMPLE ILLUSTRATES A USE OF THE ALTERCR
)@@G@@NATIVE@A@@@@ EXPRESSION.  SEE SECTION 3.4.2.    @[@@@@      @ @@@@  5. 1CS
)@@G@@. 2.   INDEXED TRANSFER @[@@@@      @F@@@@       AN INDEXED TRANSFER STACT
)@@G@@TEMENT SELECTS ONE OF A GROUP OF    @F@@@@ STATEMENT LABELS DEPENDING UPCU
)@@G@@ON THE VALUE OF AN INDEX VARIABLE.  @C@@@@ IN FORTRAN, AN INDEXED TRANSFCV
)@@G@@ER HAS THE FORM:  @[@@@@      @C@@@@       GO TO (<L1>,<L2>,...,<LN>),<ECW
)@@G@@XPRESSION>  @[@@@@      @G@@@@       THE <EXPRESSION> IS ARBITRARY OF INCX
)@@G@@TEGER MODE.  THE <LI> ARE     @F@@@@ FORTRAN STATEMENT NUMBERS.  CONTROLCY
)@@G@@ WILL GO TO <L1> IF THE VALUE @F@@@@ OF <EXPRESSION> IS 1, TO <L2> IF THCZ
)@@G@@E VALUE OF <EXPRESSION> IS 2, @F@@@@ ETC.  IF <EXPRESSION> IS NEGATIVE, DA
)@@G@@ZERO, OR GREATER THAN 'N', AN @C@@@@ IMMEDIATE ERROR TERMINATION WILL BEDB
)@@G@@ GENERATED. @[@@@@      @F@@@@       IN MAD, THERE IS NO EXPLICIT FORM ODC
)@@G@@F AN INDEXED TRANSFER,  @F@@@@ BUT IT MAY BE EFFECTED VIA SUBSCRIPTED STDD
)@@G@@ATEMENT LABELS:  THE    @]@@@@ STATEMENT  @[@@@@      @ @@@@       TRANSDE
)@@G@@FER TO LABEL(I)   @[@@@@      @F@@@@       IS FOR ALL PRACTICAL PURPOSESDF
)@@G@@ AN INDEXED TRANSFER ON I.    @[@@@@      @^@@@@               EXAMPLES:DG
)@@G@@@^@@@@               ======== @[@@@@      @#@@@@       (FORTRAN)  @C@@@@DH
)@@G@@               GO TO (10,20,20,30,40,10,100),I+J@A@@@@               GO DI
)@@G@@TO (21,999),ISLITE@[@@@@      @]@@@@       (MAD)@B@@@@               TRADJ
)@@G@@NSFER TO PROCES(K,L)    @B@@@@               TRANSFER TO GROUP(J*23-JP) DK
)@@G@@@[@@@@      @[@@@@      @B@@@@  5. 1. 3.   STATEMENT-LABEL VARIABLES    DL
)@@G@@@[@@@@      @F@@@@       IN FORTRAN, A STATEMENT NUMBER IS AN INTEGER PUDM
)@@G@@NCHED SOME- @G@@@@ WHERE IN COLUMNS 1 THROUGH 5 OF THE INPUT CARD, IN MADN
)@@G@@D A STATEMENT     @F@@@@ LABEL IS A SYMBOL, POSSIBLY WITH SUBSCRIPTS, INDO
)@@G@@ COLUMNS 1 THROUGH@F@@@@ 10.  THESE, ALTHOUGH TREATED AS VARIABLES BY THDP
)@@G@@E COMPILER, ARE   @F@@@@ ACTUALLY CONSTANTS; ANY ATTEMPT TO CHANGE THE VDQ
)@@G@@ALUE OF AN UNSUBS-@F@@@@ CRIPTED STATEMENT LABEL WILL RESULT IN UTTER DEDR
)@@G@@STRUCTION OF THE  @F@@@@ OBJECT PROGRAM.  BUT OCCASIONALLY IT IS NICE TODS
)@@G@@ BE ABLE TO TRANS-@F@@@@ FER TO A VARIABLE, WITHOUT RESORTING TO AN INDEDT
)@@G@@XED TRANSFER.     @G@@@@ ENTER THE STATEMENT-LABEL VARIABLE.  A STATEMENDU
)@@G@@T-LABEL VARIABLE IS     @G@@@@ A VARIABLE OF STATEMENT-LABEL MODE.  ONE DV
)@@G@@DOES NOT COMPUTE WITH IT,     @F@@@@ BUT TRANSFERS TO IT.  STATEMENT-LABDW
)@@G@@EL VARIABLES MUST BE DIMEN-   @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WDX
)@@G@@ITH RALPH (DECEMBER 1971 VERSION)          5-  3@[@@@@      @[@@@@      DY
)@@G@@@[@@@@      @F@@@@ SIONED, ELSE THEY CANNOT BE ASSIGNED STORAGE BY THE CDZ
)@@G@@OMPILER.    @[@@@@      @F@@@@       IN FORTRAN, A VARIABLE IS AUTOMATICEA
)@@G@@ALLY DECLARED TO BE OF  @F@@@@ STATEMENT-LABEL MODE IF IT APPEARS IN AN EB
)@@G@@'ASSIGN' STATEMENT.  IN @F@@@@ MAD A STATEMENT-LABEL VARIABLE MUST BE DEEC
)@@G@@CLARED AND DIMENSIONED. @[@@@@      @F@@@@       TO SET THE VALUE OF A SED
)@@G@@TATEMENT-LABEL VARIABLE, AN ORDINARY@ @@@@ ARITHMETIC STATEMENT IS USED:EE
)@@G@@@[@@@@      @C@@@@       <VARIABLE> = <STATEMENT LABEL EXPRESSION>@[@@@@EF
)@@G@@      @F@@@@       WHERE THE <STATEMENT LABEL EXPRESSION> MAY BE EITHER EG
)@@G@@A     @F@@@@ STATEMENT LABEL, A STATEMENT-LABEL VARIABLE, OR AN ALTERNATEH
)@@G@@IVE   @G@@@@ EXPRESSION (CONCEIVABLY NESTED) WHICH HAS A STATEMENT LABELEI
)@@G@@ VALUE.     @ @@@@ IN FORTRAN, THE STATEMENT    @[@@@@      @D@@@@      EJ
)@@G@@ ASSIGN <LABEL> TO <STATEMENT-LABEL VARIABLE>   @[@@@@      @F@@@@      EK
)@@G@@ IS ALSO PERMITTED:  <LABEL> MUST BE A VALID FORTRAN STATE- @F@@@@ MENT EL
)@@G@@NUMBER.  THE 'ASSIGN' STATEMENT WILL AUTOMATICALLY DECLARE  @F@@@@ THE VEM
)@@G@@ARIABLE TO BE OF STATEMENT-LABEL MODE AND DIMENSION IT FOR 1@F@@@@ LOCATEN
)@@G@@ION.  THIS AUTOMATIC DIMENSIONING CAN BE OVERRIDDEN BY AN   @D@@@@ EXPLIEO
)@@G@@CIT DIMENSION STATEMENT (SEE SECTION 8.1.1).    @[@@@@      @[@@@@      EP
)@@G@@@A@@@@  5. 1. 4.   ASSIGNED TRANSFERS     @[@@@@      @F@@@@       AN ASEQ
)@@G@@SIGNED TRANSFER IS A TRANSFER TO A STATEMENT-LABEL    @ @@@@ VARIABLE.  ER
)@@G@@ONE SIMPLY WRITES:@[@@@@      @^@@@@       GO TO <VARIABLE> @[@@@@  OR  ES
)@@G@@@ @@@@       TRANSFER TO <VARIABLE> @[@@@@      @D@@@@       WHERE <VARIET
)@@G@@ABLE> IS OF STATEMENT-LABEL MODE.   @[@@@@      @F@@@@       IN FORTRAN,EU
)@@G@@ ONE MAY APPEND A LIST OF POSSIBLE DESTINATIONS @A@@@@ TO THE END OF AN EV
)@@G@@ASSIGNED TRANSFER:@[@@@@      @E@@@@       GO TO <VARIABLE>,(<LAB1>,<LABEW
)@@G@@2>,<LAB3>,...,<LABN>)   @[@@@@      @F@@@@       THE PARENTHESIZED GROUPEX
)@@G@@ IS IGNORED BY THE COMPILER EXCEPT  @G@@@@ THAT IT MUST CONTAIN NO ILLEGEY
)@@G@@AL SYNTACTIC ITEMS.  IT IS SCANNED BY     @F@@@@ THE SYNTAX SCANNER FOR EZ
)@@G@@ERRORS, BUT IS NEVER LOOKED AT BY THE     @#@@@@ COMPILER PROPER. @[@@@@FA
)@@G@@      @^@@@@               EXAMPLES:@^@@@@               ======== @[@@@@FB
)@@G@@      @#@@@@       (FORTRAN)  @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WFC
)@@G@@ITH RALPH (DECEMBER 1971 VERSION)          5-  4@[@@@@      @[@@@@      FD
)@@G@@@[@@@@      @A@@@@               ASSIGN 100 TO ISL    @^@@@@            FE
)@@G@@   . . .    @^@@@@               GO TO ISL@^@@@@               . . .    FF
)@@G@@@B@@@@               GO TO ISL,(100,200,500)    @[@@@@      @ @@@@      FG
)@@G@@         JSL = $232     @^@@@@               . . .    @B@@@@            FH
)@@G@@   GO TO JSL,(300,400,500,232)@^@@@@               . . .    @^@@@@      FI
)@@G@@         GO TO JSL@[@@@@      @]@@@@       (MAD)@ @@@@               KSLFJ
)@@G@@ = LABEL    @^@@@@               . . .    @ @@@@               TRANSFER FK
)@@G@@TO KSL@[@@@@      @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DFL
)@@G@@ECEMBER 1971 VERSION)          5-  5@[@@@@      @[@@@@      @[@@@@      FM
)@@G@@@[@@@@      @[@@@@      @D@@@@  5. 2.   THE 'CONTINUE' STATEMENT (FORTRAFN
)@@G@@N AND MAD)  @[@@@@      @[@@@@      @F@@@@       THE 'CONTINUE' STATEMENFO
)@@G@@T IS USED AS A CONVENIENT WAY TO DO @G@@@@ NOTHING.  ITS USUAL EMPLOYMENFP
)@@G@@T IS AS SOMEPLACE TO HANG A STATEMENT     @F@@@@ LABEL.  THE 'CONTINUE' FQ
)@@G@@STATEMENT SIMPLY CONTINUES TO THE NEXT    @F@@@@ STATEMENT.  THE EFFECT FR
)@@G@@OF A 'CONTINUE' STATEMENT WITHOUT A STATE-@E@@@@ MENT LABEL IS ROUGHLY TFS
)@@G@@HE SAME AS THAT OF A BLANK CARD.    @[@@@@      @^@@@@               EXAFT
)@@G@@MPLES:@^@@@@               =========@[@@@@      @#@@@@       (FORTRAN): FU
)@@G@@@ @@@@               12    CONTINUE @ @@@@               288   CONTINUE FV
)@@G@@@[@@@@      @#@@@@       (MAD):     @A@@@@               LABEL      CONTFW
)@@G@@INUE  @A@@@@               LOOP       CONTINUE  @[@@@@      @[@@@@      FX
)@@G@@@[@@@@      @A@@@@  5. 3.   CONDITIONAL STATEMENTS    @[@@@@      @[@@@@FY
)@@G@@      @F@@@@       CONDITIONAL STATEMENTS TEST PROGRAM VARIABLES AND PROFZ
)@@G@@CEED  @F@@@@ ACCORDING TO THE RESULT OF THE TEST.  THERE ARE 3 TYPES OF GA
)@@G@@CONDI-@F@@@@ TIONAL CONTROL STATEMENTS , BUT ONE IS UNIQUE TO FORTRAN, AGB
)@@G@@ND ONE@#@@@@ UNIQUE TO MAD.   @[@@@@      @D@@@@  5. 3. 1.   SIMPLE CONDGC
)@@G@@ITIONALS (MAD AND FORTRAN)    @[@@@@      @F@@@@       A SIMPLE CONDITIOGD
)@@G@@NAL WILL ALLOW A SINGLE STATEMENT TO BE   @B@@@@ CONDITIONALLY EXECUTED.GE
)@@G@@  THE FORM IS     @[@@@@      @#@@@@       (FORTRAN): @D@@@@            GF
)@@G@@   IF (<LOGICAL EXPRESSION>) <STATEMENT>  @#@@@@       (MAD):     @E@@@@GG
)@@G@@               WHENEVER <BOOLEAN EXPRESSION>,<STATEMENT>    @[@@@@      GH
)@@G@@@F@@@@       THE <BOOLEAN EXPRESSION> OR <LOGICAL EXPRESSION> MAY BE ANYGI
)@@G@@@F@@@@ VALID BOOLEAN (LOGICAL) EXPRESSION, THE <STATEMENT> MAY BE ANY   GJ
)@@G@@@G@@@@ EXECUTABLE STATEMENT EXCEPT ANOTHER SIMPLE OR COMPOUND CONDITIONAGK
)@@G@@L     @[@@@@ AND  @[@@@@      @ @@@@       (FORTRAN):  'DO', 'END'@[@@@@GL
)@@G@@      @B@@@@       (MAD):  'THROUGH', 'END OF PROGRAM'@[@@@@*****^@G@@@@GM
)@@G@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          5-  6GN
)@@G@@@[@@@@      @[@@@@      @[@@@@      @[@@@@      @G@@@@       THE ARITHMEGO
)@@G@@TIC CONDITIONAL (SECTION 5.3.2) IS PERMITTED AS A     @F@@@@ <STATEMENT>GP
)@@G@@ INSIDE A SIMPLE CONDITIONAL, BUT THE COMPOUND CONDI- @A@@@@ TIONAL (SECGQ
)@@G@@TION 5.3.3) IS NOT.     @[@@@@      @G@@@@       IF THE <BOOLEAN EXPRESSGR
)@@G@@ION> IS TRUE, THE <STATEMENT> WILL BE     @F@@@@ EXECUTED.  IF THE <BOOLGS
)@@G@@EAN EXPRESSION> IS FALSE, CONTROL PRO-    @B@@@@ CEEDS TO THE NEXT SEQUEGT
)@@G@@NTIAL STATEMENT.  @[@@@@      @^@@@@               EXAMPLES:@^@@@@      GU
)@@G@@         =========@[@@@@      @#@@@@       (FORTRAN): @D@@@@            GV
)@@G@@   IF (A.GT.B.OR. B/6 < 8.33) S = S + 1   @A@@@@               IF (RR.NEGW
)@@G@@.0) GO TO 4 @A@@@@               IF(LOGVAR)  STOP     @[@@@@      @#@@@@GX
)@@G@@       (MAD):     @E@@@@               WHENEVER A.G.B .OR. B/6 < 8.33, SGY
)@@G@@ = S + 1    @C@@@@               WHENEVER RR.NE.0, TRANSFER TO &4 @C@@@@GZ
)@@G@@               WHENEVER LOGVAR, EXECUTE EXIT.   @[@@@@      @[@@@@      HA
)@@G@@@D@@@@  5. 3. 2.   ARITHMETIC CONDITIONALS (FORTRAN ONLY)   @[@@@@      HB
)@@G@@@F@@@@       AN ARITHMETIC CONDITIONAL IS A 3-WAY CONDITIONAL TRANSFER, HC
)@@G@@@F@@@@ TAKING ONE OF 3 EXITS DEPENDING UPON WHETHER THE QUANTITY BEING  HD
)@@G@@@E@@@@ TESTED IS NEGATIVE, ZERO, OR POSITIVE.  THE GENERAL FORM IS@[@@@@HE
)@@G@@      @D@@@@       IF (<EXPRESSION>) <LABEL-1>,<LABEL-2>,<LABEL-3>@[@@@@HF
)@@G@@      @G@@@@       <EXPRESSION> IS ANY EXPRESSION IN A COMPUTATIONAL MODHG
)@@G@@E.  THE     @G@@@@ <LABEL-I> ARE FORTRAN STATEMENT NUMBERS, OR VARIABLESHH
)@@G@@ OF STATEMENT     @]@@@@ LABEL MODE.@[@@@@      @F@@@@       IF <EXPRESSHI
)@@G@@ION> IS NEGATIVE, CONTROL GOES TO <LABEL-1>     @F@@@@                  HJ
)@@G@@        ZERO                      <LABEL-2>     @F@@@@                  HK
)@@G@@        POSITIVE                  <LABEL-3>     @[@@@@      @F@@@@      HL
)@@G@@ FOR THE PURPOSES OF AN ARITHMETIC CONDITIONAL, A VALUE OF  @F@@@@ NEGATHM
)@@G@@IVE ZERO (BIT PATTERN OF ALL 1-BITS) WILL BE TREATED AS ZERO@F@@@@ AND NHN
)@@G@@OT NEGATIVE.  IF ANY OF THE <LABEL-I> IS NOT PRESENT, THEN  @D@@@@ THE RHO
)@@G@@EPRESENTED FIELD IS TREATED AS 'NEXT STATEMENT'.@[@@@@      @^@@@@      HP
)@@G@@         EXAMPLES:@^@@@@               ======== @[@@@@      @D@@@@      HQ
)@@G@@         STATEMENT               TRANSFERS TO   @[@@@@      @D@@@@      HR
)@@G@@                                 ( 20 IF A-B < 0@[@@@@*****^@G@@@@A GUIDHS
)@@G@@E TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          5-  7@[@@@@HT
)@@G@@      @[@@@@      @[@@@@      @D@@@@               IF (A-B) 20,30,40    HU
)@@G@@   ( 30 IF A-B = 0@D@@@@                                       ( 40 IF AHV
)@@G@@-B > 0@[@@@@      @E@@@@                                       (20 IF B+HW
)@@G@@C/3.2-X < 0 @E@@@@               IF(B+C/3.2-X) 20,,      ( NEXT STATEMENHX
)@@G@@T = 0 @E@@@@                                       ( NEXT STATEMENT > 0 HY
)@@G@@@[@@@@      @F@@@@                                       ( NEXT STATEMENHZ
)@@G@@T IF Q<0    @F@@@@               IF (Q)  ,,40            ( NEXT STATEMENIA
)@@G@@T IF Q=0    @F@@@@                                       ( 40           IB
)@@G@@     Q>0    @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBEIC
)@@G@@R 1971 VERSION)          5-  8@[@@@@      @[@@@@      @[@@@@      @[@@@@ID
)@@G@@      @C@@@@  5. 3. 3.   COMPOUND CONDITIONALS  (MAD ONLY)  @[@@@@      IE
)@@G@@@F@@@@       THE COMPOUND CONDITIONAL IS FAR AND AWAY THE MOST POWERFUL IF
)@@G@@@F@@@@ CONDITIONAL STATEMENT IN RALPH.  IN FULL FORM, IT IS A GROUP OF  IG
)@@G@@@^@@@@ STATEMENTS OF THE FORM @[@@@@      @^@@@@       WHENEVER <EXP-1> IH
)@@G@@@A@@@@               (GROUP OF STATEMENTS)@ @@@@       OR WHENEVER <EXP-II
)@@G@@2>    @B@@@@               ( GROUP OF STATEMENTS)     @ @@@@       OR WHIJ
)@@G@@ENEVER <EXP-3>    @#@@@@               .  @#@@@@               .  @#@@@@IK
)@@G@@               .  @#@@@@       OTHERWISE  @A@@@@               (GROUP OFIL
)@@G@@ STATEMENTS)@ @@@@       END OF CONDITIONAL     @[@@@@      @F@@@@      IM
)@@G@@ THE STATEMENTS BETWEEN THE INITIAL 'WHENEVER' STATEMENT AND@F@@@@ THE NIN
)@@G@@EXT 'OR WHENEVER' STATEMENT WILL BE EXECUTED IF AND ONLY IF @F@@@@ THE BIO
)@@G@@OOLEAN EXPRESSION <EXP-1> IS TRUE.  THE STATEMENTS BETWEEN  @F@@@@ THE FIP
)@@G@@IRST 'OR WHENEVER' STATEMENT AND THE SECOND 'OR WHENEVER'   @F@@@@ STATEIQ
)@@G@@MENT WILL BE EXECUTED IF AND ONLY IF THE BOOLEAN EXPRESSION @E@@@@ <EXP-IR
)@@G@@2> IS TRUE.  THE ABOVE STRUCTURE IS EQUIVALENT TO THE @ @@@@ SIMPLE-CONDIS
)@@G@@ITIONAL STURCTURE:@[@@@@      @C@@@@       WHENEVER .NOT.<EXP-1>, TRANSFIT
)@@G@@ER TO L1    @A@@@@               (GROUP OF STATEMENTS)@^@@@@       TRANSIU
)@@G@@FER TO XL   @C@@@@ L1    WHENEVER .NOT.<EXP-2>, TRANSFER TO L2    @A@@@@IV
)@@G@@               (GROUP OF STATEMENTS)@^@@@@       TRANSFER TO XL   @C@@@@IW
)@@G@@ L2    WHENEVER .NOT.<EXP-3>, TRANSFER TO L3    @#@@@@               .  IX
)@@G@@@#@@@@               .  @#@@@@               .  @#@@@@ LN    CONTINUE   IY
)@@G@@@A@@@@               (GROUP OF STATEMENTS)@#@@@@ XL    CONTINUE   @[@@@@IZ
)@@G@@      @F@@@@       ONLY THE INITIAL 'WHENEVER' AND THE TERMINAL 'END OF JA
)@@G@@CONDI-@G@@@@ TIONAL' ARE REQUIRED--THE 'OR WHENEVER' AND 'OTHERWISE' STAJB
)@@G@@TEMENTS     @E@@@@ MAY BE USED OR OMITTED AS DESIRED.  A COMPOUND-CONDITJC
)@@G@@IONAL @F@@@@ 'WHENEVER' IS DISTINGUISHED FROM A SIMPLE-CONDITIONAL 'WHENJD
)@@G@@EVER' @B@@@@ BY THE ABSENCE OF THE SEPARATING COMMA.  @[@@@@      @E@@@@JE
)@@G@@       COMPOUND CONDITIONALS MAY BE NESTED TO A DEPTH OF 30.@[@@@@*****^JF
)@@G@@@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         JG
)@@G@@ 5-  9@[@@@@      @[@@@@      @[@@@@      @^@@@@               EXAMPLES:JH
)@@G@@@^@@@@               =========@[@@@@      @A@@@@       WHENEVER (B.P.2 -JI
)@@G@@ 4*A*C)<0   @C@@@@               PRINT REMARK $ NO REAL ROOTS$    @B@@@@JJ
)@@G@@       OR WHENEVER (B.P.2 - 4*A*C).E.0    @D@@@@               PRINT REMJK
)@@G@@ARK $ ROOTS ARE IDENTICAL$    @#@@@@       OTHERWISE  @C@@@@            JL
)@@G@@   PRINT REMARK $ TWO REAL ROOTS$   @ @@@@       END OF CONDITIONAL     JM
)@@G@@@[@@@@      @[@@@@      @[@@@@      @ @@@@       WHENEVER X(I).G.X(J)   JN
)@@G@@@A@@@@           WHENEVER Y(I).L.Y(J)     @A@@@@               WHENEVER JO
)@@G@@Z(I).EQ.Z(J)@C@@@@                   PRINT REMARK $ BAD DATA SET$ @B@@@@JP
)@@G@@                   TRANSFER TO BLOWUP     @A@@@@               END OF COJQ
)@@G@@NDITIONAL   @ @@@@           END OF CONDITIONAL @ @@@@       END OF CONDJR
)@@G@@ITIONAL     @[@@@@      @[@@@@      @[@@@@      @F@@@@       THE INDENTAJS
)@@G@@TION OF STATEMENTS INSIDE IS FOR GRAPHIC EFFECT @F@@@@ ONLY, AND LIKE ALJT
)@@G@@L OTHER BLANKS WITHIN A  STATEMENT THE INDENTED @G@@@@ BLANKS ARE IGNOREJU
)@@G@@D BY THE COMPILER.  IT IS HIGHLY RECOMMENDED THAT     @F@@@@ THE USER INJV
)@@G@@DENT STATEMENTS INSIDE COMPOUND CONDITIONALS FOR EASE @ @@@@ IN READING JW
)@@G@@AND DEBUGGING.    @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DJX
)@@G@@ECEMBER 1971 VERSION)          5- 10@[@@@@      @[@@@@      @[@@@@      JY
)@@G@@@[@@@@      @[@@@@      @A@@@@  5. 4.   TERMINATION OF PROGRAM    @[@@@@JZ
)@@G@@      @[@@@@      @G@@@@       ONE MAY TERMINATE EXECUTION OF A  PROGRAMKA
)@@G@@ BY TRANSFERRING TO     @F@@@@ THE END OF THE PROGRAM,  VIA THE STATEMENKB
)@@G@@T 'STOP' IN FORTRAN, OR @A@@@@ VIA A CALL TO A SYSTEM EXIT POINT: @[@@@@KC
)@@G@@      @#@@@@       (FORTRAN): @]@@@@       STOP @[@@@@  OR  @^@@@@      KD
)@@G@@ STOP <STRING>    @[@@@@      @F@@@@       WHERE <STRING> IS AN OPTIONALKE
)@@G@@ STRING OF UP TO 6 CHARACTERS @F@@@@ NOT INCLUDING AN EQUALS SIGN (=).  KF
)@@G@@IF THIS STRING IS PRESENT, THE@]@@@@ MESSAGE    @[@@@@      @^@@@@      KG
)@@G@@ ''STOP <STRING>''@[@@@@      @G@@@@       WILL BE PRINTED ON THE OPERATKH
)@@G@@OR'S CONSOLE AND ENTERED IN THE     @E@@@@ PROGRAM LOG FOR THE RUN.  THEKI
)@@G@@ ALTERNATIVE CONSTRUCTIONS    @[@@@@      @A@@@@       (FORTRAN):       KJ
)@@G@@CALL EXIT   @A@@@@                        CALL SYSTEM @[@@@@      @B@@@@KK
)@@G@@       (MAD):           EXECUTE EXIT.     @ @@@@                        KL
)@@G@@EXIT. @B@@@@                        EXECUTE SYSTEM.   @A@@@@            KM
)@@G@@            SYSTEM.     @[@@@@      @E@@@@       ARE PERMITTED.  SEE SECKN
)@@G@@TION 6.6, 'SUBROUTINE CALLS'. @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WKO
)@@G@@ITH RALPH (DECEMBER 1971 VERSION)          5- 11@[@@@@      @[@@@@      KP
)@@G@@@[@@@@      @[@@@@      @[@@@@      @ @@@@  5. 5.   ITERATION STATEMENTSKQ
)@@G@@@[@@@@      @[@@@@      @F@@@@       AN ITERATION STATEMENT CAUSES THOSEKR
)@@G@@ STATEMENTS WHICH FALL  @F@@@@ BETWEEN IT AND A SENTINEL STATEMENT TO BEKS
)@@G@@ EXECUTED REPEATEDLY.   @F@@@@ THERE ARE THREE FORMS OF ITERATION STATEMKT
)@@G@@ENTS IN MAD, AND ONE IN @]@@@@ FORTRAN.   @[@@@@      @[@@@@      @B@@@@KU
)@@G@@  5. 5. 1.   'DO' STATEMENT   (FORTRAN)   @[@@@@      @E@@@@       THE GKV
)@@G@@ENERAL FORM OF A FORTRAN ITERATION STATEMENT IS:@[@@@@      @E@@@@      KW
)@@G@@ DO <LABEL> <VARIABLE> = <START>,<STOP>,<INCREMENT>   @[@@@@      @F@@@@KX
)@@G@@       ALL STATEMENTS FROM THE 'DO' THROUGH AND INCLUDING THE     @E@@@@KY
)@@G@@ STATEMENT WITH STATEMENT LABEL <LABEL> WILL BE EXECUTED    @[@@@@      KZ
)@@G@@@B@@@@       (<STOP> - <START>)/<INCREMENT> + 1 @[@@@@      @]@@@@ TIMESLA
)@@G@@.     @[@@@@      @F@@@@       THE <VARIABLE> WILL BE INITIALIZED TO THELB
)@@G@@ VALUE <START> AND@C@@@@ INCREMENTED BY THE VALUE <INCREMENT> EACH TIME.LC
)@@G@@@[@@@@      @C@@@@       <START> MAY BE ANY INTEGER EXPRESSION    @C@@@@LD
)@@G@@       <STOP> MAY BE ANY INTEGER EXPRESSION     @E@@@@       <INCREMENT>LE
)@@G@@ MAY BE ANY INTEGER EXPRESSION OR NULL.   @F@@@@       <VARIABLE> MAY BELF
)@@G@@ ANY NONSUBSCRIPTED INTEGER VARIABLE.     @[@@@@      @G@@@@       THERELG
)@@G@@ ARE NO RESTRICTIONS ON THE SIGN OR MAGNITUDE OF ANY OF     @F@@@@ THE ILH
)@@G@@TERATION PARAMETERS OTHER THAN THOSE STANDARD FOR INTEGERS, @F@@@@ BUT ILI
)@@G@@T IS GENERALLY CONSIDERED GOOD FORM TO KEEP THE VALUE OF    @F@@@@ <VARILJ
)@@G@@ABLE> WITHIN DIMENSION LIMITS IF IT IS BEING USED AS A SUBS-@]@@@@ CRIPTLK
)@@G@@.     @[@@@@      @F@@@@       IF THE VALUE OF <INCREMENT> IS NOT SPECIFLL
)@@G@@IED, IT IS ASSUMED@F@@@@ TO BE +1.  IF THE LOOP IS GOING BACKWARDS, IT ILM
)@@G@@S NECESSARY TO    @F@@@@ PUNCH AN INCREMENT:  ONE FINDS IT DIFFICULT TO LN
)@@G@@STEP FROM 14 TO 2 @#@@@@ IN STEPS OF +1.  @[@@@@      @F@@@@       TRANSLO
)@@G@@FERS FROM OUTSIDE THE RANGE OF A 'DO' STATEMENT INTO  @F@@@@ THE RANGE OLP
)@@G@@F THE 'DO' ARE NOT PERMITTED.  ALTERING THE VALUE OF  @F@@@@ THE <VARIABLQ
)@@G@@LE> WITHIN THE RANGE OF A <DO> IS NOT PERMITTED.  THIS@F@@@@ IS BECAUSE LR
)@@G@@ALL OF THE PARAMETERS WHICH CONTROL THE 'DO' LOOP ARE @G@@@@ NOT IN CORELS
)@@G@@ AS ONE MIGHT EXPECT, BUT ARE PLACED BY THE COMPILER IN     @F@@@@ INTERLT
)@@G@@NAL COMPUTATION REGISTERS WHICH ARE NOT AVAILABLE TO THE    @G@@@@ USER.LU
)@@G@@  THUS, EVEN IF ONE WERE TO CHANGE THE VALUE OF A DO VARIABLE     @[@@@@LV
)@@G@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)   LW
)@@G@@       5- 12@[@@@@      @[@@@@      @[@@@@      @F@@@@ WITHIN THE LOOP, LX
)@@G@@THE NEXT ITERATION WOULD RESTORE IT FROM THE    @F@@@@ REGISTER TO ITS NLY
)@@G@@ORMAL VALUE, THEREBY CONFUSING EVERYTHING.  TO  @F@@@@ PROTECT THE SANITLZ
)@@G@@Y OF THE USER, HE IS FORBIDDEN TO ATTEMPT TO    @C@@@@ CHANGE THE VALUE MA
)@@G@@OF THE DO INDEX VARIABLE.     @[@@@@      @[@@@@      @^@@@@            MB
)@@G@@   EXAMPLES:@^@@@@               =========@[@@@@      @^@@@@       DO 10MC
)@@G@@1 J = 1,14  @A@@@@       IF(CARD(J).NE.' ') GO TO 201 @#@@@@ 101   CONTIMD
)@@G@@NUE   @D@@@@ 201   GO TO (1,2,3,4,586,7,8,9,10,11,12,13,14),J     @[@@@@ME
)@@G@@      @ @@@@       DO 200 IXXX = 988,-3,-4@D@@@@       IF(ABS(X(IXXX)-Y(MF
)@@G@@IXXX)).GE.EPSLON) I = I + 1   @#@@@@ 200   CONTINUE   @[@@@@      @[@@@@MG
)@@G@@      @^@@@@       DO 10 I = 1,N    @^@@@@       DO 10 J = 1,N    @^@@@@MH
)@@G@@       DO 10 K = 1,N    @^@@@@       ARRAY(I,J,K) = 0 @#@@@@ 10    CONTIMI
)@@G@@NUE   @[@@@@      @[@@@@      @B@@@@  5. 5. 2.   'THROUGH' STATEMENT   (MJ
)@@G@@MAD)  @[@@@@      @G@@@@       THERE ARE 3 TYPES OF ITERATION STATEMENTSMK
)@@G@@ IN MAD.  THE FIRST     @F@@@@ AND FASTEST IS EQUIVALENT TO THE FORTRAN ML
)@@G@@'DO' STATEMENT.  THE    @G@@@@ SECOND TYPE IS A COMPLETELY GENERAL CALCUMM
)@@G@@LATED-LOOP ITERATION, THE     @C@@@@ THIRD IS A SPECIAL SPARSE-DISTRIBUTMN
)@@G@@ION TYPE.   @[@@@@      @B@@@@  5. 5. 2. 1.   THE 'WITH INDEX' LOOP     MO
)@@G@@@[@@@@      @F@@@@       THE 'WITH INDEX' FORM OF THE THROUGH STATEMENT MP
)@@G@@IS THE FA-  @F@@@@ STEST TYPE OF ITERATION AVAILABLE TO THE MAD PROGRAMMMQ
)@@G@@ER.  LOOP   @E@@@@ OVERHEAD IS ABOUT 2 MICROSECONDS PER ITERATION.  IT HMR
)@@G@@AS THE@#@@@@ GENERAL FORM     @[@@@@      @F@@@@   THROUGH <LABEL>,WITH MS
)@@G@@INDEX <VARIABLE>=<START>,<STOP>,<INCR>    @[@@@@      @F@@@@       EXACTMT
)@@G@@LY THE SAME DEFINITIONS AND RESTRICTIONS APPLY FOR THE@G@@@@ 'WITH INDEXMU
)@@G@@' FORM OF THE THROUGH STATEMENT AS FOR THE FORTRAN 'DO'     @F@@@@ STATEMV
)@@G@@MENT DISCUSSED IN THE PREVIOUS SECTION.  REFER TO THE PRE-  @ @@@@ VIOUSMW
)@@G@@ SECTION FOR DETAILS.   @[@@@@      @ @@@@  5. 5. 2. 2.   THE 'FOR' LOOPMX
)@@G@@@[@@@@      @D@@@@       THE GENERAL FORM OF THE 'FOR' LOOP IN MAD IS:  MY
)@@G@@@[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSIMZ
)@@G@@ON)          5- 13@[@@@@      @[@@@@      @[@@@@      @[@@@@      @G@@@@NA
)@@G@@  THROUGH <LABEL>,FOR<VARIABLE>=<START>,<INCREMENT>,<END CONDITION>     NB
)@@G@@@[@@@@      @G@@@@       ALL STATEMENTS BETWEEN THE 'THROUGH' UP TO AND NC
)@@G@@INCLUDING THE     @E@@@@ INDICATED STATEMENT LABEL WILL BE EXECUTED.  THND
)@@G@@E VARIABLE  @G@@@@ <VARIABLE> WILL BE GIVEN THE INITIAL VALUE <START> ANNE
)@@G@@D EACH ITERA-     @F@@@@ TION WILL HAVE THE CURRENT VALUE OF <INCREMENT>NF
)@@G@@ ADDED.  THE LOOP @F@@@@ WILL BE TERMINATED WHEN THE BOOLEAN EXPRESSION NG
)@@G@@<END CONDITION> IS@[@@@@ TRUE.@[@@@@      @G@@@@       <LABEL> MAY BE ANNH
)@@G@@Y STATEMENT LABEL, POSSIBLY WITH A CONSTANT     @G@@@@ SINGLE SUBSCRIPT.NI
)@@G@@  <VARIABLE> MAY BE ANY VARIABLE, POSSIBLY WITH A     @F@@@@ CONSTANT SUNJ
)@@G@@BSCRIPT OR SUBSCRIPTS.  <START> MAY BE ANY EXPRESSION.@F@@@@ <INCREMENT>NK
)@@G@@ MAY BE ANY EXPRESSION.  <END CONDITION> MAY BE ANY   @F@@@@ BOOLEAN EXPNL
)@@G@@RESSION.  LOOP OVERHEAD TIME IS ABOUD 12 MICROSECONDS @F@@@@ PLUS THE TINM
)@@G@@ME TO CALCULATE <INCREMENT> AND <END CONDITION> FOR   @#@@@@ EACH ITERATNN
)@@G@@ION.  @[@@@@      @F@@@@       THE EXPRESSION <INCREMENT> IS RE-EVALUATENO
)@@G@@D WITH EACH ITERA-@G@@@@ TION, SO IT MAY CHANGE DURING THE LOOP.  THERE NP
)@@G@@ARE NO RESTRICTIONS     @F@@@@ ON TRANSFERRING INTO THE LOOP, OR ON ALTENQ
)@@G@@RING THE VALUE OF ANY-  @G@@@@ THING INSIDE THE LOOP.  THE 'THROUGH' STANR
)@@G@@TEMENT OUTLINED ABOVE MAY     @F@@@@ BE CONSIDERED AS EQUIVALENT TO THE NS
)@@G@@FOLLOWING SEQUENCE OF MAD     @]@@@@ STATEMENTS:@[@@@@      @[@@@@      NT
)@@G@@@A@@@@               VARIABLE = <START>   @A@@@@               TRANSFER NU
)@@G@@TO BACK2    @D@@@@ BACK1         <VARIABLE> = <VARIABLE> + <INCREMENT>  NV
)@@G@@@C@@@@ BACK2         WHENEVER .NOT.<END CONDITION>    @A@@@@            NW
)@@G@@    (ANY STATEMENTS)    @A@@@@ <LABEL>       TRANSFER TO BACK1    @A@@@@NX
)@@G@@               END OF CONDITIONAL   @[@@@@      @[@@@@      @[@@@@      NY
)@@G@@@C@@@@  5. 5. 2. 3.   THE 'FOR VALUES OF' ITERATION.  @[@@@@      @D@@@@NZ
)@@G@@       A THIRD FORM OF ITERATION IS AVAILABLE IN MAD: @[@@@@      @F@@@@OA
)@@G@@       THROUGH <LABEL>,FOR VALUES OF <VARIABLE>=<VAL1>,<VAL2>, ...@[@@@@OB
)@@G@@      @F@@@@       THIS WILL LOOP N TIMES, WHERE N IS THE NUMBER OF <VALOC
)@@G@@(K)>. @F@@@@ THE FIRST ITERATION WILL SET <VARIABLE> = <VAL1>, THE SECONOD
)@@G@@D     @F@@@@ ITERATION WILL SET <VARIABLE> = <VAL2>, ETC.  LOOP OVERHEADOE
)@@G@@ TIME @F@@@@ IS NOT REALLY OF ANY CONCERN BECAUSE THE 'FOR VALUES OF' LOOF
)@@G@@OP IS @C@@@@ NEVER USED FOR LARGE NUMBERS OF ITERATIONS.    @[@@@@*****^OG
)@@G@@@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         OH
)@@G@@ 5- 14@[@@@@      @[@@@@      @[@@@@      @[@@@@      @C@@@@  5. 5. 3.  OI
)@@G@@ NESTING OF ITERATION STATEMENTS    @[@@@@      @G@@@@       ITERATION SOJ
)@@G@@TATEMENTS MAY BE NESTED TO A DEPTH OF 50 DEEP.  A     @F@@@@ NEST IS DEFOK
)@@G@@INED AS ONE ITERATION STATEMENT COMPLETELY WITHIN THE @G@@@@ RANGE OF ANOL
)@@G@@OTHER.  IF [X] DENOTES THE SET OF STATEMENTS WITHIN THE     @F@@@@ SCOPEOM
)@@G@@ OF AN ITERATION, AND [Y] THE SET OF STATEMENTS WITHIN ANO- @F@@@@ THER ON
)@@G@@ITERATION, AND IF ANY ELEMENT OF [Y] IS CONTAINED IN [X],   @F@@@@ THEN OO
)@@G@@ALL ELEMENTS OF [Y] MUST BE CONTAINED IN [X].  MORE THAN ONE@D@@@@ ITERAOP
)@@G@@TION STATEMENT MAY END ON THE SAME STATEMENT.   @[@@@@      @[@@@@      OQ
)@@G@@@F@@@@       TO ASSIST THE USER IN DIAGNOSING PROGRAM ILLS, AND AS A    OR
)@@G@@@F@@@@ VISUAL AID FOR THOSE NOT FAMILIAR WITH THE PROGRAM, THE ITERATIONOS
)@@G@@@F@@@@ NESTING DEPTH IS ALWAYS PRINTED AS A TWO-DIGIT NUMBER IN THE     OT
)@@G@@@#@@@@ LEFT-HAND MARGIN.@[@@@@      @[@@@@      @[@@@@      @[@@@@      OU
)@@G@@@^@@@@               EXAMPLES:@^@@@@               =========@[@@@@      OV
)@@G@@@D@@@@               THROUGH RABBIT, FOR M = 6,1,FP(M).GT.0 @#@@@@      OW
)@@G@@         .  @#@@@@               .  @#@@@@               .  @^@@@@ RABBIOX
)@@G@@T        CONTINUE @[@@@@      @[@@@@      @ @@@@               BOOLEAN AOY
)@@G@@,B,C  @D@@@@               THROUGH TRUTH, FOR VALUES OF A = 0B,1B @D@@@@OZ
)@@G@@               THROUGH TRUTH, FOR VALUES OF B = 0B,1B @D@@@@            PA
)@@G@@   THROUGH TRUTH, FOR VALUES OF C = 0B,1B @B@@@@               TABLE = APB
)@@G@@.AND.B.THEN.C.OR.D@B@@@@               PRINT RESULTS A,B,C,TABLE  @^@@@@PC
)@@G@@ TRUTH         CONTINUE @[@@@@      @[@@@@      @C@@@@               THRPD
)@@G@@OUGH END, FOR I = 1,1,I.G.N   @^@@@@               X(I) = 0 @^@@@@ END  PE
)@@G@@         CONTINUE @[@@@@      @[@@@@      @C@@@@               THROUGH HPF
)@@G@@OLE, WITH INDEX J = 1,N @#@@@@               .  @#@@@@               .  PG
)@@G@@@#@@@@               .  @^@@@@ HOLE          CONTINUE @[@@@@*****^@G@@@@PH
)@@G@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          6-  1PI
)@@G@@@[@@@@      @[@@@@      @[@@@@      @ @@@@  6.   INPUT/OUTPUT STATEMENTSPJ
)@@G@@@[@@@@      @[@@@@      @[@@@@      @F@@@@       IT WOULD BE FRUSTRATINGPK
)@@G@@, INDEED, IF AFTER THE LABORIOUS    @G@@@@ CALCULATION OF SOME ANSWER, OPL
)@@G@@NE HAD NO MEANS OF PRINTING IT OUT FOR    @F@@@@ EXAMINATION.  EQUALLY WPM
)@@G@@OEFUL WOULD BE A PROGRAM WITH NO WAY OF   @G@@@@ ACCESSING RAW DATA.  THPN
)@@G@@E INPUT/OUTPUT STATEMENTS RECOGNIZED BY RALPH   @G@@@@ PROVIDE THE PROGRPO
)@@G@@AMMER WITH CHANNELS THROUGH WHICH INFORMATION PASSES  @ @@@@ TO AND FROMPP
)@@G@@ HIS PROGRAM.     @[@@@@      @G@@@@       FOR PURPOSES OF DESCRIPTION, PQ
)@@G@@LET US GROUP ALL INPUT/OUTPUT INTO  @#@@@@ THREE CATEGORIES:@[@@@@      PR
)@@G@@@F@@@@       1)  BASIC I/O (CARD-READER, PRINTER, AND PUNCH).  SOMETIMESPS
)@@G@@@A@@@@           CALLED 'UNIT RECORD' I/O.@[@@@@      @G@@@@       2)  FPT
)@@G@@ILE I/O.  REFERENCE TAPE AND DRUM FILES.  MOST LARGE-SCALE  @ @@@@      PU
)@@G@@     I/O IS FILE I/O.   @[@@@@      @G@@@@       3)  COMMUNICATIONS (REAPV
)@@G@@L-TIME) I/O.  TRANSMIT DATA TO COMPUTER   @H@@@@           OPERATOR, TO PW
)@@G@@OTHER TELETYPES, TO COMPUTER-CONTROLLED MACHINES,     @#@@@@           EPX
)@@G@@TC.   @[@@@@      @G@@@@       RALPH HAS NO DIRECT PROVISIONS FOR REAL-TPY
)@@G@@IME I/O--IT IS MENTIONED@A@@@@ MOSTLY FOR THE SAKE OF CONTRAST.   @[@@@@PZ
)@@G@@      @[@@@@      @[@@@@      @A@@@@  6. 1.   BASIC (UNIT RECORD) I/O   QA
)@@G@@@[@@@@      @[@@@@      @G@@@@       IN BLOCK FORM, MOST PROGRAMS CAN BEQB
)@@G@@ CONSIDERED AS SOME VARIANT   @ @@@@ OF THE FOLLOWING SCHEME:     @[@@@@QC
)@@G@@      @ @@@@       1)  READ A DATA CARD   @C@@@@       2)  CALCULATE RESQD
)@@G@@ULTS BASED ON THE DATA  @A@@@@       3)  PRINT OUT THE ANSWERS    @ @@@@QE
)@@G@@       4)  GO BACK TO STEP 1  @[@@@@      @F@@@@       STEP 1) CAN BE FUQF
)@@G@@RTHER SPLIT INTO TWO DISTINCT PHASES:     @[@@@@      @B@@@@       1)  AQG
)@@G@@)  FIND THE DATA ON THE CARD  @E@@@@           B)  AFTER FINDING THE DATQH
)@@G@@A, CONVERT IT FROM ITS  @G@@@@               EXTERNAL FORMAT INTO A BINAQI
)@@G@@RY NUMBER AND STORE IT INTO   @A@@@@               A PROGRAM VARIABLE.  QJ
)@@G@@@[@@@@      @B@@@@       STEP 3) CAN BE SIMILARLY SEPARATED:@[@@@@      QK
)@@G@@@F@@@@       3)  A)  CONVERT THE BINARY PROGRAM VARIABLES TO DIGITS,    QL
)@@G@@@[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSIQM
)@@G@@ON)          6-  2@[@@@@      @[@@@@      @[@@@@      @B@@@@            QN
)@@G@@   LETTERS, AND PUNCTUATION.  @G@@@@           B)  CAUSE THE CONVERTED DQO
)@@G@@IGITS TO BE PRINTED IN APPROPRIATE  @C@@@@               PLACES ON THE OQP
)@@G@@UTPUT DEVICE.     @[@@@@      @ @@@@  6. 1. 1.   FREE-FORMAT I/O  @[@@@@QQ
)@@G@@      @G@@@@       THE SIMPLEST METHOD FOR READING AND PRINTING SMALL AMQR
)@@G@@OUNTS OF    @F@@@@ DATA IS CALLED FREE-FORMAT INPUT/OUTPUT--SO CALLED BEQS
)@@G@@CAUSE THERE @F@@@@ IS NO FIXED FORMAT TO WHICH THE DATA MUST CONFORM ON QT
)@@G@@INPUT, AND  @F@@@@ NO FIXED FORMAT TO WHICH IT DOES CONFORM ON OUTPUT.  QU
)@@G@@FREE-FORMAT @A@@@@ I/O IS INVALUABLE IN TWO DOMAINS:  @[@@@@      @E@@@@QV
)@@G@@       1)  PROGRAMS WHICH NEED ONLY A SMALL AMOUNT OF DATA. @D@@@@      QW
)@@G@@ 2)  PROGRAMS DESIGNED TO RUN ON A TELETYPE.    @[@@@@      @G@@@@      QX
)@@G@@ WHEN READING ONLY A FEW NUMBERS AS DATA, IT IS INCONVENIENT TO   @E@@@@QY
)@@G@@ SET UP ELABORATE DATA FORMAT SPECIFICATIONS FOR THE DATA.  @^@@@@ IT ISQZ
)@@G@@ MUCH EASIER TO   @F@@@@ READ THE DATA VIA THE FREE-FORMAT I/O STATEMENTRA
)@@G@@S AND COMPUTE.    @E@@@@ SIMILARLY, WHEN OPERATING ON A TELETYPE, IT IS RB
)@@G@@VERY PAINFUL@F@@@@ TO ADHERE TO COLUMN AND FORMAT RESTRICTIONS, SO THAT RC
)@@G@@FREE-FORMAT @ @@@@ I/O IS ALMOST A NECESSITY.   @[@@@@      @D@@@@  6. 1RD
)@@G@@. 1. 1.   THE 'INPUT' AND 'DISPLAY' STATEMENTS  @[@@@@      @G@@@@      RE
)@@G@@ THE 'INPUT' AND 'DISPLAY' STATEMENTS PROVIDE THE RALPH USER WITH @D@@@@RF
)@@G@@ A MEANS OF READING SMALL AMOUNTS OF DATA AND PRINTING@F@@@@ ANSWERS WITRG
)@@G@@H AS LITTLE PAIN AS POSSIBLE.  IDEAL FOR THE BEGINNER,@E@@@@ THEY ARE PARH
)@@G@@TTERNED AFTER THE I/O FEATURES DESIGNED FOR THE @ @@@@ 'BASIC' PROGRAMMIRI
)@@G@@NG LANGUAGE.@[@@@@      @G@@@@       TO READ IN A NUMBER OR NUMBERS VIA RJ
)@@G@@THE 'INPUT' STATEMENT, ONE    @D@@@@ SIMPLY WRITES 'INPUT' FOLLOWED BY TRK
)@@G@@HE VARIABLE LIST: @[@@@@      @^@@@@       INPUT A,B,I,K(I) @[@@@@      RL
)@@G@@@G@@@@ FOR EXAMPLE, THE STATEMENT ABOVE WILL CAUSE VALUES FOR THE VARIABRM
)@@G@@LES   @G@@@@ 'A', 'B', 'I', AND THE I'TH ELEMENT OF THE ARRAY 'K' TO BE RN
)@@G@@READ FROM   @#@@@@ A DATA CARD.     @F@@@@ THE NUMBERS ON THE DATA CARD RO
)@@G@@ARE SEPARATED BY COMMAS, BUT ASIDE  @G@@@@ OF THIS RESTRICTION THEY NEEDRP
)@@G@@ NOT HAVE ANY PARTICULAR FORMAT.  THERE   @G@@@@ MAY BE INTERVENING BLANRQ
)@@G@@KS, DECIMAL POINTS OR NOT AS THE USER SEES FIT, @F@@@@ ETC.  THE NUMBERSRR
)@@G@@ WILL BE CONVERTED TO THE PROPER MODE REGARDLESS@F@@@@ OF HOW THEY ARE TRS
)@@G@@YPED:  A VALUE OF 5.2 SPECIFIED FOR AN INTEGER  @G@@@@ VARIABLE WILL BE RT
)@@G@@TRANSMITTED AS AN INTEGER VALUE OF 5, WHILE LEAVING   @F@@@@ THE DECIMALRU
)@@G@@ POINT FROM A FLOATING-POINT NUMBER WILL NOT CAUSE    @B@@@@ IT TO BE TRRV
)@@G@@ANSMITTED AS AN INTEGER, ETC. @[@@@@      @[@@@@      @#@@@@       EXAMPRW
)@@G@@LES:  @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971RX
)@@G@@ VERSION)          6-  3@[@@@@      @[@@@@      @[@@@@      @#@@@@      RY
)@@G@@ =========  @[@@@@      @#@@@@       INPUT A,B  @B@@@@                  RZ
)@@G@@                     2,3@C@@@@                                       4.,SA
)@@G@@6.1   @C@@@@                                       1E-2,1E+2@[@@@@      SB
)@@G@@@^@@@@       INPUT I,A(I)     @B@@@@                                    SC
)@@G@@   2,4@[@@@@      @[@@@@      @B@@@@  6. 1. 2.   DATA FORMAT SPECIFICATISD
)@@G@@ONS   @[@@@@      @H@@@@       STEP (1A) IN 6.1 ABOVE DICTATES THAT THE SE
)@@G@@PROGRAM MUST FIND THE DATA    @F@@@@ ON THE PUNCHED CARD.  AT FIRST GLANSF
)@@G@@CE, THIS DOES NOT SEEM TO BE A@F@@@@ DIFFICULTY, IN FACT, THE 'INPUT' STSG
)@@G@@ATEMENT SIMPLY SEARCHES FOR   @G@@@@ DATA ON THE CARD AND INPUTS IT AS DSH
)@@G@@IRECTED.  THIS SEARCHING, HOWEVER,  @G@@@@ TAKES TIME, AND REQUIRES THATSI
)@@G@@ SEPARATOR CHARACTERS (COMMAS) BE USED    @F@@@@ TO SPECIFY THE END OF OSJ
)@@G@@NE NUMBER AND THE BEGINNING OF THE NEXT.  @F@@@@ SUPPOSE THAT ALPHABETICSK
)@@G@@ DATA WERE TO BE INPUT, DATA WHICH WOULD  @G@@@@ INCLUDE COMMAS?  WHAT ISL
)@@G@@F ONE WISHES TO USE ALL 80 COLUMNS OF A CARD    @F@@@@ OR TELETYPE LINE SM
)@@G@@TO CONTAIN DATA?  SOME AGREEMENT MUST BE REACHED@F@@@@ BETWEEN PROGRAMMESN
)@@G@@R AND PROGRAM AS TO WHAT KIND OF INFORMATION IS @F@@@@ EXPECTED, WHICH CSO
)@@G@@ARD COLUMNS CONTAIN THE INFORMATION, ETC.  ENTER@^@@@@ THE 'FORMAT' STATSP
)@@G@@EMENT.@C@@@@  6. 1. 2. 1.   INPUT DATA FORMAT DESCRIPTION   @G@@@@      SQ
)@@G@@ AS AN EXAMPLE OF THE TYPE OF INFORMATION WHICH MAY BE PUT INTO   @G@@@@SR
)@@G@@ A FORMAT DEFINITION STATEMENT (CALLED A FORMAT STATEMENT FOR SHORT),   SS
)@@G@@@G@@@@ CONSIDER THE FOLLOWING VERBAL DESCRIPTION OF AN INPUT DATA FORMATST
)@@G@@.     @[@@@@      @B@@@@       THE FIRST SIX COLUMNS ARE BLANK.   @G@@@@SU
)@@G@@       THE NEXT THREE COLUMNS CONTAIN A RIGHT-JUSTIFIED INTEGER NUMBER  SV
)@@G@@@D@@@@       IGNORE ALL DATA UP TO AND INCLUDING COLUMN 19  @F@@@@      SW
)@@G@@ FIND A 10-DIGIT (OR SMALLER) FLOATING-POINT NUMBER, WITH   @D@@@@      SX
)@@G@@ FOUR DECIMAL PLACES, STARTING IN COLUMN 20     @^@@@@       SKIP SIX COSY
)@@G@@LUMNS @F@@@@       FIND AN ALPHANUMERIC ITEM WHICH CONSISTS OF 4 CHARACTSZ
)@@G@@ERS.  @[@@@@      @I@@@@       IF ALL DATA FORMATS HAD TO BE WRITTEN THATA
)@@G@@T WAY, MOST FORTRAN PROGRAMMERS     @G@@@@ WOULD LONG SINCE HAVE BEEN PRTB
)@@G@@IME CANDIDATES FOR A LOONEY BIN.  THE     @G@@@@ RALPH SYSTEM (LIKE ALL TC
)@@G@@FORTRAN SYSTEMS) ALLOWS A SHORTHAND METHOD OF   @F@@@@ WRITING DATA FORMTD
)@@G@@AT DESCRIPTIONS.  IN THIS SHORTHAND (WHICH WAS  @F@@@@ DEVELOPED FOR THETE
)@@G@@ IBM 704 COMPUTER FOR USE WITH FORTRAN 1), THE  @D@@@@ ABOVE DESCRIPTIVETF
)@@G@@ PARAGRAPH WOULD BE REDUCED TO:     @[@@@@      @ @@@@       (6X,I3,T20,TG
)@@G@@F10.4,6X,A4)@[@@@@      @G@@@@       ANALYTICALLY FROM THIS EXAMPLE, THITH
)@@G@@S SHORTHAND CONSISTS OF A     @E@@@@ STRING OF CODES SEPARATED BY COMMASTI
)@@G@@, WITH THE ENTIRE STRING@F@@@@ ENCLOSED IN PARENTHESES.  THE COMPLETE STTJ
)@@G@@RUCTURE IS EXACTLY THAT:@[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RATK
)@@G@@LPH (DECEMBER 1971 VERSION)          6-  4@[@@@@      @[@@@@      @[@@@@TL
)@@G@@      @G@@@@ A STRING OF FIELD DESCRIPTORS SEPARATED BY COMMAS.  EACH DETM
)@@G@@SCRIPTOR,   @F@@@@ SUCH AS 'F10.4' OR '6X', IS CALLED A 'DATA FORMAT SPETN
)@@G@@CIFIER', OR @G@@@@ SIMPLY A 'SPECIFIER'.  THUS, TO WRITE A DATA FORMAT DTO
)@@G@@ESCRIPTION SO     @F@@@@ THAT HE CAN READ (OR PRINT) DATA, ONE SIMPLY ASTP
)@@G@@SEMBLES A STRING  @G@@@@ OF FORMAT SPECIFIERS WHICH DESCRIBE THE EXPECTETQ
)@@G@@D FORMAT OF THE DATA.   @G@@@@ THE DESCRIPTION PROGRESSES FROM LEFT TO RTR
)@@G@@IGHT STARTING IN COLUMN 1,    @G@@@@ WITH EACH SPECIFIER DESCRIBING A 'FTS
)@@G@@IELD' IN WHICH A SINGLE ITEM IS     @#@@@@ TO BE FOUND.     @[@@@@      TT
)@@G@@@G@@@@       AN IMPORTANT POINT ABOUT SPECIFIERS IS THEIR ONE-TO-ONE RELTU
)@@G@@ATION-@F@@@@ SHIP MATCHING THEM WITH DATA ITEMS:  EXACTLY ONE ITEM (NUMBTV
)@@G@@ER OR @G@@@@ WORD) IS DESCRIBED BY ONE SPECIFIER.  FOR EXAMPLE, IF WE ARTW
)@@G@@E EXPECTING @G@@@@ TEN NUMBERS OF TWO DIGITS EACH, THE SPECIFIER CANNOT TX
)@@G@@BE 'I20' (TWENTY  @G@@@@ COLUMNS OF INTEGERS), BUT MUST BE I2,I2,I2,I2,ITY
)@@G@@2,I2,I2,I2,I2,I2.  FOR  @G@@@@ THE SAKE OF PROGRAMMER SANITY, ONE MAY ABTZ
)@@G@@BREVIATE SAME BY PUTTING A    @G@@@@ MULTIPLIER IN FRONT OF IT:  10I2.  UA
)@@G@@NOTE, HOWEVER, THAT IN EITHER CASE  @D@@@@ A SEPARATE SPECIFIER IS PROVIUB
)@@G@@DED FOR EACH NUMBER.    @[@@@@      @H@@@@       NOT ALL SPECIFIERS DESCUC
)@@G@@RIBE NUMBERS--SOME DESCRIBE A LACK OF NUMBERS,  @G@@@@ I.E. A SPACE TO BUD
)@@G@@E IGNORED.  THUS, THE 'X' SPECIFIER IS A NON-DATA     @G@@@@ SPECIFIER, UE
)@@G@@USED TO IGNORE UNWANTED COLUMNS.  ALL AVAILABLE SPECIFIERS, @G@@@@ BOTH UF
)@@G@@DATA-DESCRIBING AND DATA-IGNORING, ARE DOCUMENTED IN SECTION A.B. @[@@@@UG
)@@G@@      @C@@@@  6. 1. 2. 2.   OUTPUT DATA FORMAT DESCRIPTION  @[@@@@      UH
)@@G@@@H@@@@       THE SAME SHORTHAND NOTATION AS DESCRIBED ABOVE FOR INPUT ISUI
)@@G@@ USED FOR   @H@@@@ OUTPUT DATA FORMAT DESCRIPTION.  ITS MEANING IS SLIGHUJ
)@@G@@TLY DIFFERENT:  FOR     @G@@@@ EXAMPLE, THE SAME FORMAT DESCRIPTION USEDUK
)@@G@@ IN THE PREVIOUS SECTION:     @[@@@@      @ @@@@       (6X,I3,T20,F10.4,UL
)@@G@@6X,A4)@[@@@@      @F@@@@ MAY BE USED AS AN OUTPUT DATA FORMAT DESCRIPTIOUM
)@@G@@N.  EACH SPECIFIER@G@@@@ DICTATES NOT WHERE TO FIND A NUMBER, BUT WHERE UN
)@@G@@TO PUT IT:  I.E. INTO   @F@@@@ WHICH COLUMNS ON THE PRINTED PAGE (OR PUNUO
)@@G@@CHED CARD) IS THE EDITED@H@@@@ NUMBER TO BE PLACED.  THUS, THE SPECIFIERUP
)@@G@@ 'I3' MEANS 'PRINT A RIGHT-JUSTIFIED@A@@@@ INTEGER UP TO THREE DIGITS LOUQ
)@@G@@NG.'  @G@@@@ THERE IS AN IMPLICIT PROMISE MADE WITH AN OUTPUT SPECIFIER UR
)@@G@@THAT THE    @G@@@@ PROGRAM WILL NEVER PROVIDE A NUMBER WHICH IS TOO LARGUS
)@@G@@E TO FIT INTO     @G@@@@ THE REQUESTED NUMBER OF COLUMNS.  IF A FORMAT SUT
)@@G@@PECIFIER PROVIDES, FOR  @F@@@@ EXAMPLE, FOR A 4-COLUMN WORD, AND THE PROUU
)@@G@@GRAM ATTEMPTS TO PRINT  @G@@@@ '757332' THROUGH THAT SPECIFIER, THE END UV
)@@G@@RESULT WILL NOT BE '7573'     @G@@@@ OR '7332' BUT '****'.  THE ASTERISKUW
)@@G@@S ARE PRINTED WHENEVER A NUMBER     @B@@@@ IS TOO LARGE FOR THE FORMAT SUX
)@@G@@PECIFIER.   @[@@@@      @A@@@@  6. 1. 3.   FORMATTED INPUT/OUTPUT.@[@@@@UY
)@@G@@      @G@@@@       FORMATTED I/O COMBINES A FORMAT STATEMENT WITH AN I/OUZ
)@@G@@ STATEMENT. @F@@@@ TO READ, PRINT, OR PUNCH CARDS VIA FORMATTED I/O, ONEVA
)@@G@@ WRITES:    @[@@@@      @ @@@@       READ <FORMAT>,<LIST>   @[@@@@*****^VB
)@@G@@@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         VC
)@@G@@ 6-  5@[@@@@      @[@@@@      @[@@@@      @ @@@@       PRINT <FORMAT>,<LVD
)@@G@@IST>  @ @@@@       PUNCH <FORMAT>,<LIST>  @[@@@@      @F@@@@       IN EAVE
)@@G@@CH CASE, <FORMAT> IS A FORMAT STATEMENT NUMBER OR A   @F@@@@ VARIABLE COVF
)@@G@@NTAINING FORMAT INFORMATION, AND <LIST> IS A LIST     @G@@@@ OF VARIABLEVG
)@@G@@S AS DESCRIBED IN SECTION X.Y.  IN THE CASE OF THE 'READ'   @G@@@@ STATEVH
)@@G@@MENT, A CARD WILL BE READ AND THE DATA FROM THE CARD UNPACKED     @G@@@@VI
)@@G@@ ACCORDING TO THE <FORMAT> AND STORED SEQUENTIALLY IN THE VARIABLES     VJ
)@@G@@@G@@@@ NAMED IN <LIST>.  FOR THE 'PRINT' AND 'PUNCH' STATEMENTS, THE DATVK
)@@G@@A     @F@@@@ CONTAINED IN THE VARIABLES SPECIFIED BY <LIST> WILL BE COMPVL
)@@G@@OSED  @E@@@@ ACCORDING TO <FORMAT> AND SENT TO THE PRINTER OR PUNCH.    VM
)@@G@@@[@@@@      @[@@@@      @^@@@@           EXAMPLES:    @^@@@@           =VN
)@@G@@=======     @[@@@@      @ @@@@ (DATA CARD: '1234.56789')    @[@@@@      VO
)@@G@@@^@@@@       READ 1,A,B,C     @ @@@@ 1     FORMAT(I3,F4.2,I3)     @[@@@@VP
)@@G@@      @B@@@@               SETS A=123, B=4.56, C=789  @[@@@@      @[@@@@VQ
)@@G@@      @^@@@@       READ 2,J,K,A(J,K)@^@@@@ 2     FORMAT(2I1,F8.5) @[@@@@VR
)@@G@@      @C@@@@               SETS J=1, K=2, A(1,2) = 34.56789 @[@@@@      VS
)@@G@@@[@@@@      @#@@@@       READ 3,I   @^@@@@ 3     FORMAT(8X,I2)    @^@@@@VT
)@@G@@               SETS I=89@B@@@@ (NOW ASSUME A=1, B=89, C=6.63, D='DOG')  VU
)@@G@@@[@@@@      @^@@@@       PRINT 4,A,B,C,D  @[@@@@*****^@G@@@@A GUIDE TO PVV
)@@G@@ROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          7-  1@[@@@@      VW
)@@G@@@[@@@@      @[@@@@      @B@@@@  7.         FORMAT(1X,I1,I2,F4.2,A3)     VX
)@@G@@@[@@@@      @[@@@@      @[@@@@      @[@@@@      @B@@@@               PROVY
)@@G@@DUCES '   *  6.6DO'     @[@@@@ ===  @[@@@@*****^@G@@@@A GUIDE TO PROGRAMVZ
)@@G@@MING WITH RALPH (DECEMBER 1971 VERSION)          8-  1@[@@@@      @[@@@@WA
)@@G@@      @[@@@@      @ @@@@  8.   SUBROUTINE STATEMENTS  @[@@@@      @[@@@@WB
)@@G@@      @[@@@@      @F@@@@       SUBROUTINE STATEMENTS ENABLE THE USER TO WC
)@@G@@DEFINE AND CONTROL@F@@@@ FUNCTIONS AND SUBROUTINES.  THERE ARE FOUR BASIWD
)@@G@@C KINDS OF FUNC-  @F@@@@ TIONS, TWO OF WHICH ARE PREDEFINED BY THE COMPIWE
)@@G@@LER.  THESE ARE   @[@@@@      @B@@@@       (1)  EXTERNAL SUBROUTINES/FUNWF
)@@G@@CTIONS@B@@@@       (2)  INTERNAL SUBROUTINES/FUNCTIONS@A@@@@       (3)  WG
)@@G@@INTRINSIC 'FUNCTIONS'   @ @@@@       (4)  GENERIC FUNCTIONS @[@@@@      WH
)@@G@@@F@@@@       TYPES (3) AND (4) ARE PREDEFINED BY THE COMPILER, WHILE    WI
)@@G@@@C@@@@ TYPES (1) AND (2) MAY BE DEFINED BY THE USER.  @[@@@@      @[@@@@WJ
)@@G@@      @G@@@@       THE RULES FOR THE NAME OF A FUNCTION ARE EXACTLY THE WK
)@@G@@SAME AS     @G@@@@ THOSE FOR THE NAME OF A VARIABLE:  FROM 1 TO 6 CHARACWL
)@@G@@TERS FROM THE     @G@@@@ SET [A,B,...,Z, 0,1,...,9,^], AND BEGINNING WITWM
)@@G@@H A LETTER.  IF THE     @F@@@@ NAME OF A FUNCTION IS THE SAME AS ONE OF WN
)@@G@@THE IMPLICIT OR GENERIC @F@@@@ FUNCTIONS, THEN IT MUST BE TYPED 'ABNORMAWO
)@@G@@L' OR 'EXTERNAL' TO     @F@@@@ CIRCUMVENT THE NORMAL COMPILER ACTION OF WP
)@@G@@CALLING THE INTRINSIC OR@#@@@@ GENERIC FUNCTION.@[@@@@      @[@@@@      WQ
)@@G@@@ @@@@  8. 1.   EXTERNAL SUBROUTINES@[@@@@      @[@@@@      @F@@@@      WR
)@@G@@ AN EXTERNAL SUBROUTINE IS A SEPARATE, INDEPENDENT COMPILA- @G@@@@ TION,WS
)@@G@@ REQUIRING A SEPARATE CALL TO THE COMPILER.  IT MAY THUS HAVE     @F@@@@WT
)@@G@@ TOTALLY INDEPENDENT VARIABLES WITH THE SAME NAME.  AN EXTERNAL   @F@@@@WU
)@@G@@ SUBROUTINE CAN COMMUNICATE WITH THE CALLING PROGRAM ONLY THROUGH @F@@@@WV
)@@G@@ ITS ARGUMENT LIST AND THROUGH COMMON STORAGE.  EXTERNAL SUBROU-  @F@@@@WW
)@@G@@ TINES ARE LINKED BY NAME TO THE CALLING PROGRAM BY THE COLLECTOR @F@@@@WX
)@@G@@ WHEN A '@MAP' OR '@XQT' CONTROL STATEMENT IS ENCOUNTERED.  AN    @G@@@@WY
)@@G@@ EXTERNAL SUBROUTINE MAY CONTAIN FOR ITS OWN USE ONE OR MORE INTER-     WZ
)@@G@@@F@@@@ NAL SUBROUTINES, WHICH ARE INTERNAL TO THE EXTERNAL SUBROUTINE.  XA
)@@G@@@[@@@@      @F@@@@       THE STATEMENT DECLARING AN EXTERNAL SUBROUTINE XB
)@@G@@MUST BE THE @F@@@@ FIRST STATEMENT IN THE PROGRAM WHICH IS NOT OF THE 'CXC
)@@G@@OMPILER     @#@@@@ CONTROL' VARIETY.@[@@@@      @G@@@@       SOME EXAMPLXD
)@@G@@ES OF EXTERNAL SUBROUTINE AND FUNCTION DEFINITIONS    @D@@@@ FOLLOW AT TXE
)@@G@@HE END OF THIS SECTION.  THE GENERAL FORM @ @@@@ DEFINITION STRUCTURE ISXF
)@@G@@:     @[@@@@      @]@@@@ (FORTRAN): @^@@@@       SUBROUTINE <NAME>@D@@@@XG
)@@G@@       SUBROUTINE <NAME> (<ARG1>,<ARG2>,...,<ARGN>)   @[@@@@*****^@G@@@@XH
)@@G@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          8-  2XI
)@@G@@@[@@@@      @[@@@@      @[@@@@      @C@@@@       FUNCTION <NAME>(<ARG1>,XJ
)@@G@@<ARG2>,...,<ARGN>)@[@@@@      @]@@@@ (MAD):     @A@@@@       EXTERNAL FUXK
)@@G@@NCTION <NAME>.    @D@@@@       EXTERNAL FUNCTION (<ARG1>,<ARG2>,...,<ARGXL
)@@G@@N>)   @E@@@@       EXTERNAL FUNCTION <NAME>.(<ARG1>,<ARG2>,...,<ARGN>)  XM
)@@G@@@[@@@@      @[@@@@      @F@@@@       IN MAD, THE BODY OF THE SUBROUTINE XN
)@@G@@DETERMINES WHETHER IT IS@F@@@@ A FUNCTION OR A SUBROUTINE.  IN FORTRAN, XO
)@@G@@ONE MUST SPECIFY IN     @G@@@@ ADVANCE, VIA A 'FUNCTION' OR 'SUBROUTINE'XP
)@@G@@ STATEMENT.  OPERATIONAL-     @F@@@@ LY, THE ONLY DIFFERENCE BETWEEN A FXQ
)@@G@@UNCTION AND A SUBROUTINE IS   @F@@@@ THAT A FUNCTION HAS THE ABILITY TO XR
)@@G@@RETURN A VALUE ASSOCIATED WITH@C@@@@ ITS NAME, WHILE A SUBROUTINE DOES NXS
)@@G@@OT.  THUS   @[@@@@      @#@@@@       X = P(X,Y) @[@@@@      @D@@@@ REFERXT
)@@G@@ENCES A FUNCTION P WITH ARGUMENTS X AND Y, BUT  @[@@@@      @#@@@@      XU
)@@G@@ CALL P(X,Y)@[@@@@      @G@@@@ REFERENCES A SUBROUTINE P WITH ARGUMENTS XV
)@@G@@X AND Y.  IN EITHER CASE,     @F@@@@ THE VALUE OF EITHER ARGUMENT MIGHT XW
)@@G@@BE CHANGED; THIS MIGHT BE     @F@@@@ CONSTRUED AS 'RETURNING A VALUE', BXX
)@@G@@UT FOR THE PURPOSES OF THIS   @F@@@@ DISCUSSION IS NOT.  A FUNCTION MAY XY
)@@G@@BE REFERENCED AS A SUBROUTINE,@G@@@@ BUT A SUBROUTINE MAY NOT BE REFERENXZ
)@@G@@CED AS A FUNCTION.  NOTICE THAT     @F@@@@ THE NAME OF A FUNCTION OR SUBYA
)@@G@@ROUTINE IN MAD IS ALWAYS FOLLOWED BY@]@@@@ A PERIOD.  @[@@@@      @G@@@@YB
)@@G@@       <NAME> IS THE NAME BY WHICH THE SUBROUTINE OR FUNCTION IS TO     YC
)@@G@@@F@@@@ BE ERENCED.  THE DUMMY ARGUMENTS <ARGI> ARE THE SYMBOLIC NAMES BYYD
)@@G@@@F@@@@ WHICH ONE REFERENCES THE CALLING ARGUMENTS, OR ELSE (FORTRAN     YE
)@@G@@@F@@@@ ONLY) A SPECIAL SYMBOL (*) OR (&) DENOTING AN ALTERNATE RETURN   YF
)@@G@@@F@@@@ (SEE SECTION 7.3.2). THUS, INSIDE A FORTRAN SUBROUTINE DEFINED BYYG
)@@G@@@#@@@@ THE STATEMENT    @[@@@@      @ @@@@       SUBROUTINE HDIAG(A,B)  YH
)@@G@@@[@@@@      @B@@@@ THEN IF IT IS CALLED BY THE STATEMENT,   @[@@@@      YI
)@@G@@@ @@@@       CALL HDIAG(BB,X+Y)     @[@@@@      @F@@@@ THE DUMMY ARGUMENYJ
)@@G@@T 'A' STANDS FOR BB, AND THE DUMMY ARGUMENT 'B' @E@@@@ STANDS FOR X+Y.  YK
)@@G@@NOTE THAT IT WOULD BE TOTALLY MEANINGLESS,@F@@@@ ALTHOUGH SYNTACTICALLY YL
)@@G@@LEGAL, TO CHANGE THE VALUE OF THE DUMMY   @F@@@@ ARGUMENT 'B', AS BY REFYM
)@@G@@ERENCING IT ON THE LEFT SIDE OF AN EQUALS @F@@@@ SIGN:  ASSIGNING A VALUYN
)@@G@@E TO THE SUM OF X AND Y DOES NOTHING DE-  @]@@@@ FINABLE.   @[@@@@      YO
)@@G@@@F@@@@       FOR COMPATIBILITY WITH OTHER VERSIONS OF FORTRAN, AN ARGU- YP
)@@G@@@[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSIYQ
)@@G@@ON)          8-  3@[@@@@      @[@@@@      @[@@@@      @F@@@@ MENT IN A 'YR
)@@G@@SUBROUTINE' STATEMENT MAY BE ENCLOSED IN SLASHES:     @ @@@@ /<ARG>/.  TYS
)@@G@@HEY ARE IGNORED.  @[@@@@      @F@@@@       IF THE CALLING ARGUMENT IS ANYT
)@@G@@ ARRAY NAME WITHOUT CONSTANT  @F@@@@ SUBSCRIPT, AND THE DUMMY ARGUMENT IYU
)@@G@@N THE FUNCTION DEFINITION IS  @F@@@@ NEVER REFERENCED WITH A SUBSCRIPT, YV
)@@G@@THEN THE SUBROUTINE, HAVING NO@F@@@@ WAY OF KNOWING THAT IT WAS BEING CAYW
)@@G@@LLED WITH AN ENTIRE ARRAY AS A@F@@@@ CALLING ARGUMENT, WILL PICK UP AND YX
)@@G@@USE THE ADDRESS PROVIDED.  IF @F@@@@ THE CALLING ARGUMENT ARRAY HAS NO ZYY
)@@G@@ERO ELEMENT, NO HARM IS DONE, @F@@@@ FOR THE BASE OF THE ARRAY IS ARRAY(YZ
)@@G@@1), WHICH IS TRANSMITTED.  IF,@F@@@@ HOWEVER, THE CALLING ARRAY DOES HAVZA
)@@G@@E A ZERO ELEMENT, THE ADDRESS @G@@@@ TRANSMITTED WILL STILL BE ARRAY(1),ZB
)@@G@@ WHICH IS NO LONGER THE BASE OF     @F@@@@ THE ARRAY.  THUS, THE UNSUBSCZC
)@@G@@RIPTED NAME OF THE ARRAY WILL STAND @F@@@@ FOR ARRAY(0) IN THE CALLING PZD
)@@G@@ROGRAM AND ARRAY(1) IN THE SUBROU-  @F@@@@ TINE, WITH POSSIBLY DISASTROUZE
)@@G@@S RESULTS.  THE PROGRAMMER MAY AVOID@F@@@@ THIS DIFFICULTY BY ENSURING TZF
)@@G@@HAT EITHER (1) A CONSTANT SUBSCRIPT @F@@@@ IS ALWAYS INCLUDED ON ARRAY NZG
)@@G@@AMES WHEN CALLING A SUBROUTINE WHICH@F@@@@ PLANS TO USE THEM AS UNDIMENSZH
)@@G@@IONED VARIABLES, OR (2) A SUBROUTINE@F@@@@ WHICH EXPECTS TO BE CALLED WIZI
)@@G@@TH AN UNSUBSCRIPTED ARRAY NAME AS AN@F@@@@ ARGUMENT ALWAYS DIMENSIONS THZJ
)@@G@@E DUMMY ARGUMENT, USES IT WITH SUBS-@#@@@@ CRIPTS, OR BOTH. @[@@@@      ZK
)@@G@@@G@@@@       IF THE USER IS NOT EMPLOYING THE ZERO-ELEMENT FEATURE OF THZL
)@@G@@E     @F@@@@ COMPILER, HE NEED NOT CONCERN HIMSELF WITH THE ABOVE PARAGRZM
)@@G@@APH.  @[@@@@      @F@@@@       THE SECOND FORM OF EXTERNAL FUNCTION DECLZN
)@@G@@ARATION LISTED FOR@F@@@@ MAD DOES NOT SPECIFY AN ENTRY POINT, ONLY AN ARZO
)@@G@@GUMENT LIST.  THIS@G@@@@ ARGUMENT LIST WILL BE TACKED ONTO ANY SUBSEQUENZP
)@@G@@T 'ENTRY TO' STATE-     @C@@@@ MENT WHICH HAS NO ARGUMENT LIST OF ITS OWZQ
)@@G@@N.    @[@@@@      @[@@@@      @#@@@@       EXAMPLES:  @#@@@@       =====ZR
)@@G@@====  @[@@@@      @]@@@@ (FORTRAN): @^@@@@       SUBROUTINE GLOTCH@A@@@@ZS
)@@G@@       SUBROUTINE BOOL(I,H,T,S)     @A@@@@       FUNCTION PSI(ALPHA,/OMEZT
)@@G@@GA/)  @A@@@@       SUBROUTINE SQUARE(R,S,*)     @[@@@@      @]@@@@ (MAD)ZU
)@@G@@:     @A@@@@       EXTERNAL FUNCTION GLOTCH.    @B@@@@       EXTERNAL FUZV
)@@G@@NCTION BOOL.(I,H,T,S)   @B@@@@       EXTERNAL FUNCTION PSI.(ALPHA,OMEGA)ZW
)@@G@@@B@@@@       EXTERNAL FUNCTION SQUARE.(R,S,T)   @A@@@@       EXTERNAL FUZX
)@@G@@NCTION (B,C,Q,R)  @[@@@@      @[@@@@      @ @@@@  8. 2.   INTERNAL SUBROZY
)@@G@@UTINES@[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971ZZ
)@@G@@ VERSION)          8-  4@[@@@@      @[@@@@      @[@@@@      @G@@@@      AA
)@@G@@ AN INTERNAL SUBROUTINE IS A SUBROUTINE TOTALLY CONTAINED IN,     @F@@@@AB
)@@G@@ AND REFERENCED ONLY FROM, THE CALLING PROGRAM.  AN INTERNAL SU-  @G@@@@AC
)@@G@@ BROUTINE HAS ACCESS TO ALL VARIABLES IN THE CALLING PROGRAM EXCEPT     AD
)@@G@@@F@@@@ THOSE WHICH MIGHT HAVE THE SAME NAME AS ONE OF THE DUMMY ARGU-   AE
)@@G@@@G@@@@ MENTS.  IF THE PROGRAMMER AVOIDS DUPLICATING THE NAME OF A PROGRAAF
)@@G@@M     @F@@@@ VARIABLE WITH THAT OF A DUMMY ARGUMENT, THEN HE HAS ACCESS AG
)@@G@@TO ALL@B@@@@ OF THE CALLING PROGRAM VARIABLES BY NAME.@[@@@@      @F@@@@AH
)@@G@@       THERE ARE TWO TYPES OF INTERNAL SUBROUTINES:  THE ONE-LINE @E@@@@AI
)@@G@@ INTERNAL SUBROUTINE, WHICH IS ACTUALLY A FUNCTION, AND THE @F@@@@ MULTIAJ
)@@G@@-LINE INTERNAL SUBROUTINE.  THE ONE-LINE INTERNAL SUBROUTINE@D@@@@ IS ALAK
)@@G@@SO CALLED AN ARITHMETIC STATEMENT FUNCTION.     @[@@@@      @[@@@@      AL
)@@G@@@B@@@@  8. 2. 1.   ONE-LINE INTERNAL FUNCTIONS  @[@@@@      @F@@@@      AM
)@@G@@ A ONE-LINE INTERNAL FUNCTION DEFINITION TAKES THE FORM:    @[@@@@      AN
)@@G@@@]@@@@ (FORTRAN): @C@@@@       <NAME>(<ARG1>,...,<ARGN>) = <EXPRESSION> AO
)@@G@@@[@@@@      @]@@@@ (MAD):     @F@@@@       INTERNAL FUNCTION <NAME>.(<ARAP
)@@G@@G1>,...,<ARGN>) = <EXPRESSION>@[@@@@      @[@@@@      @F@@@@       A FORAQ
)@@G@@TRAN ONE-LINE INTERNAL FUNCTION IS DISTINGUISHED FROM @F@@@@ AN ORDINARYAR
)@@G@@ ASSIGNMENT STATEMENT BY THE REQUIREMENT THAT IT OCCUR@F@@@@ BEFORE ANY AS
)@@G@@EXECUTABLE STATEMENT IN THE PROGRAM.  THE MAD ONE-LINE@D@@@@ INTERNAL FUAT
)@@G@@NCTION MAY APPEAR ANYWHERE IN THE PROGRAM.@[@@@@      @F@@@@       <NAMEAU
)@@G@@> IS DEFINED EXACTLY AS FOR AN EXTERNAL FUNCTION OR   @F@@@@ SUBROUTINE.AV
)@@G@@  THE DUMMY ARGUMENTS <ARGI> ARE DEFINED AS FOR THE   @F@@@@ EXTERNAL SUAW
)@@G@@BROUTINE, WITH THE EXCEPTION THAT THE ALTERNATE-RETURN@F@@@@ ARGUMENTS (AX
)@@G@@*) AND (&) ARE NOT MEANINGFUL.  IF MODE DECLARATIONS  @F@@@@ ARE MADE INAY
)@@G@@VOLVING THE DUMMY ARGUMENTS OF A ONE-LINE INTERNAL    @E@@@@ FUNCTION, TAZ
)@@G@@HEN THE ARGUMENT NAME CANNOT BE THE SAME AS ANY @G@@@@ VARIABLE NAME WHIBA
)@@G@@CH HAS OCCURRED PREVIOUS TO THE ONE-LINE INTERNAL     @F@@@@ FUNCTION, EBB
)@@G@@LSE THERE IS AN AMBIGUITY AS TO WHICH SYMBOL IS BEING @F@@@@ REFERENCED BC
)@@G@@BY THE MODE DECLARATION.  ALL MODE DECLARATIONS RE-   @F@@@@ FERENCING DBD
)@@G@@UMMY ARGUMENTS OF A ONE-LINE INTERNAL FUNCTION MUST   @A@@@@ APPEAR BEFOBE
)@@G@@RE THE FUNCTION ITSELF. @[@@@@      @[@@@@      @C@@@@  8. 2. 2.   MULTIBF
)@@G@@-LINE INTERNAL SUBROUTINES    @[@@@@      @[@@@@      @F@@@@       THE SBG
)@@G@@TATEMENT DEFINING THE BEGINNING OF A MULTI-LINE INTER-@F@@@@ NAL SUBROUTBH
)@@G@@INE (HEREAFTER REFERRED TO AS SIMPLY AN INTERNAL SU-  @E@@@@ BROUTINE UNBI
)@@G@@LESS OTHERWISE NOTED) TAKES THE GENERAL FORM    @[@@@@      @[@@@@*****^BJ
)@@G@@@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         BK
)@@G@@ 8-  5@[@@@@      @[@@@@      @[@@@@      @]@@@@ (FORTRAN): @^@@@@      BL
)@@G@@ SUBROUTINE <NAME>@D@@@@       SUBROUTINE <NAME>(<ARG1>,<ARG2>,...,<ARGNBM
)@@G@@>)    @D@@@@       FUNCTION <NAME> (<ARG1>,<ARG2>,...,<ARGN>)     @[@@@@BN
)@@G@@      @]@@@@ (MAD):     @A@@@@       INTERNAL FUNCTION <NAME>.    @D@@@@BO
)@@G@@       INTERNAL FUNCTION (<ARG1>,<ARG2>,...,<ARGN>)   @E@@@@       INTERBP
)@@G@@NAL FUNCTION <NAME>.(<ARG1>,<ARG2>,...,<ARGN>)  @[@@@@      @F@@@@      BQ
)@@G@@ IN FORTRAN, AN INTERNAL SUBROUTINE IS DETERMINED BY THE    @E@@@@ POSITBR
)@@G@@ION OF THE STATEMENT DECLARING THE SUBROUTINE.  IF A  @G@@@@ 'SUBROUTINEBS
)@@G@@' OR 'FUNCTION' STATEMENT OCCURS AS THE FIRST STATEMENT     @F@@@@ IN THBT
)@@G@@E COMPILATION WHICH IS NOT A 'COMPILER CONTROL' STATEMENT,  @F@@@@ THEN BU
)@@G@@IT IS TREATED AS AN EXTERNAL SUBROUTINE DEFINITION; OTHER-  @G@@@@ WISE,BV
)@@G@@ IT IS TREATED AS AN INTERNAL SUBROUTINE DEFINITION.  IN MAD,     @D@@@@BW
)@@G@@ AS NOTED, ONE MUST SPECIFY 'EXTERNAL' OR 'INTERNAL'. @[@@@@      @F@@@@BX
)@@G@@       THE BODY OF AN INTERNAL SUBROUTINE MAY, AS NOTED ABOVE,    @F@@@@BY
)@@G@@ REFERENCE BY NAME ANY VARIABLE IN THE CALLING PROGRAM.  IF THE   @F@@@@BZ
)@@G@@ NAME OF AN INTERNAL SUBROUTINE DUMMY ARGUMENT IS THE SAME AS THE @F@@@@CA
)@@G@@ NAME OF A VARIABLE IN THE CALLING PROGRAM, THEN THE VARIABLE NAME@F@@@@CB
)@@G@@ WILL BE 'DEACTIVATED' IN FAVOR OF THE DUMMY ARGUMENT NAME FOR THE@F@@@@CC
)@@G@@ DURATION OF THE INTERNAL SUBROUTINE.  IF A DUMMY ARGUMENT OCCURS @F@@@@CD
)@@G@@ ONLY IN AN 'ENTRY' OR 'ENTRY TO' STATEMENT, AND A VARIABLE WITH  @F@@@@CE
)@@G@@ THE SAME NAME IS REFERENCED PRIOR TO THE ENTRY STATEMENT WITHIN  @F@@@@CF
)@@G@@ THE INTERNAL SUBROUTINE, THEN IT WILL BE AS THE VARIABLE AND NOT @F@@@@CG
)@@G@@ AS THE DUMMY ARGUMENT.  'DEACTIVATION' DOES NOT OCCUR UNTIL THE  @F@@@@CH
)@@G@@ DUMMY ARGUMENT IS FIRST ENCOUNTERED IN AN ARGUMENT LIST, AND IS  @#@@@@CI
)@@G@@ NOT RETROACTIVE. @[@@@@      @[@@@@      @#@@@@       EXAMPLES:  @#@@@@CJ
)@@G@@       =========  @[@@@@      @ @@@@ ONE-LINE INTERNAL FUNCTIONS: @[@@@@CK
)@@G@@      @]@@@@ (FORTRAN): @ @@@@       SUM(A,B,C,D) = A+B+C+D @D@@@@      CL
)@@G@@ ROOT1(A,B,C) = (-B+SQRT(B**2 - 4*A*C))/(2.*A)  @D@@@@       ROOT2(A,B,CCM
)@@G@@) = (-B-SQRT(B**2 - 4*A*C))/(2.*A)  @[@@@@      @[@@@@      @]@@@@ (MAD)CN
)@@G@@:     @D@@@@       INTERNAL FUNCTION SUM.(A,B,C,D) = A + B + C + D@E@@@@CO
)@@G@@       INTERNAL FUNCTION GAG.(CHOKE) = SQRT.(.NABS.CHOKE)   @[@@@@      CP
)@@G@@@[@@@@      @C@@@@ MULTI-LINE INTERNAL SUBROUTINE DEFINITIONS:    @[@@@@CQ
)@@G@@      @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971CR
)@@G@@ VERSION)          8-  6@[@@@@      @[@@@@      @[@@@@      @]@@@@ (FORTCS
)@@G@@RAN): @^@@@@       SUBROUTINE MERD  @A@@@@       SUBROUTINE CLOCK(TIME1,CT
)@@G@@TIME2)@A@@@@       FUNCTION NSQRT(ARG,ERRVAL)   @[@@@@      @[@@@@      CU
)@@G@@@A@@@@  8. 3.   THE RETURN STATEMENTS     @[@@@@      @[@@@@      @[@@@@CV
)@@G@@      @ @@@@  8. 3. 1.   NORMAL RETURN    @[@@@@      @F@@@@       WHEN CW
)@@G@@A SUBROUTINE OR FUNCTION IS FINISHED PROCESSING, AND  @F@@@@ WOULD LIKE CX
)@@G@@TO RETURN CONTROL TO THE CALLING PROGRAM, A RETURN    @B@@@@ STATEMENT ICY
)@@G@@S USED.  THE GENERAL FORM IS  @[@@@@      @]@@@@ (FORTRAN): @#@@@@      CZ
)@@G@@ RETURN     @[@@@@      @]@@@@ (MAD):     @^@@@@       FUNCTION RETURN  DA
)@@G@@@ @@@@       FUNCTION RETURN <VALUE>@[@@@@      @F@@@@ IN FORTRAN, IF A DB
)@@G@@VALUE IS TO BE RETURNED VIA THE NAME OF THE     @F@@@@ FUNCTION, THIS FUDC
)@@G@@NCTIONAL VALUE IS SPECIFIED ELSEWHERE IN THE    @F@@@@ PROGRAM BY REFEREDD
)@@G@@NCING THE FUNCTION NAME ON THE LEFT SIDE OF AN  @#@@@@ EQUALS SIGN:     DE
)@@G@@@[@@@@      @#@@@@ <NAME> = <VALUE> @[@@@@      @F@@@@ IN MAD, THE VALUEDF
)@@G@@ TO BE RETURNED MUST BE SPECIFIED EXPLICITLY ON @F@@@@ THE RETURN LINE. DG
)@@G@@ THE MODE OF <VALUE> WILL BE CONVERTED TO THE   @F@@@@ DECLARED MODE OF DH
)@@G@@THE FUNCTION.  THE SIMPLE 'FUNCTION RETURN' WITH@F@@@@ NO ATTACHED VALUEDI
)@@G@@ IS USED WHERE NO RETURNED VALUE IS EXPECTED,   @F@@@@ I.E. WHERE THE REDJ
)@@G@@FERENCE WAS AS A SUBROUTINE RATHER THAN AS A    @]@@@@ FUNCTION.  @[@@@@DK
)@@G@@      @F@@@@       EITHER FORM OF RETURN STATEMENT WILL CAUSE EXECUTION DL
)@@G@@TO BE @D@@@@ RESUMED WHERE IT LEFT OFF IN THE CALLING PROGRAM.    @[@@@@DM
)@@G@@      @B@@@@  8. 3. 2.   ALTERNATE (ERROR) RETURNS    @[@@@@      @[@@@@DN
)@@G@@      @F@@@@       SOMETIMES A SUBROUTINE OR FUNCTION WILL DETERMINE THADO
)@@G@@T IT  @G@@@@ HAS ENCOUNTERED AN ERROR CONDITION WHICH FORCES AN ABNORMALDP
)@@G@@ RETURN     @F@@@@ (TO OVERRIDE THE STANDARD ACTION OF RESUMING EXECUTIODQ
)@@G@@N WHERE LEFT@F@@@@ OFF).  A STATEMENT IS AVAILABLE WHICH WILL TRANSFER CDR
)@@G@@ONTROL TO AN@F@@@@ ARGUMENT IN THE CALLING LIST, WHICH MUST BE A STATEMEDS
)@@G@@NT LABEL!.  @[@@@@      @]@@@@ (FORTRAN): @[@@@@*****^@G@@@@A GUIDE TO PDT
)@@G@@ROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          8-  7@[@@@@      DU
)@@G@@@[@@@@      @[@@@@      @A@@@@       RETURN <INTEGER EXPRESSION>  @[@@@@DV
)@@G@@      @]@@@@ (MAD):     @^@@@@       ERROR RETURN     @[@@@@      @[@@@@DW
)@@G@@      @F@@@@       THE FORTRAN FORM IS CALLED A 'VARIABLE RETURN', AND WDX
)@@G@@ILL   @F@@@@ RETURN TO THE I'TH CALLING PARAMETER, WHERE 'I' IS THE POSIDY
)@@G@@TIVE  @F@@@@ VALUE OF <INTEGER EXPRESSION>.  IF <INTEGER EXPRESSION> IS DZ
)@@G@@TOO   @G@@@@ LARGE, NEGATIVE, OR INDICATES AN ARGUMENT WHICH IS NOT A STEA
)@@G@@ATEMENT     @F@@@@ LABEL, THEN THE PROGRAM WILL BE TERMINATED IN ERROR BEB
)@@G@@Y THE EXECU-@F@@@@ TION MONITOR.  IF <INTEGER EXPRESSION> IS 0, THEN THEEC
)@@G@@ RETURN WILL@F@@@@ BE MADE INTO A NORMAL RETURN.  ALL VARIABLE RETURN ARED
)@@G@@GUMENTS     @F@@@@ SHOULD BE INDICATED ON THE 'SUBROUTINE' OR 'FUNCTION'EE
)@@G@@ CARD AS AN @C@@@@ ASTERISK (*) AMPERSAND (&), OR DOLLAR SIGN ($).@[@@@@EF
)@@G@@      @G@@@@       MAD SYNTAX ALLOWS ONLY ONE ALTERNATE RETURN.  TO USE EG
)@@G@@THE MAD     @F@@@@ ALTERNATE RETURN FEATURE, THE SUBROUTINE OR FUNCTION EH
)@@G@@SHOULD BE   @F@@@@ CALLED WITH AN EXTRA ARGUMENT OF STATEMENT-LABEL MODEEI
)@@G@@.  IF THIS  @F@@@@ EXTRA ARGUMENT IS PRESENT, THEN 'ERROR RETURN' WILL CEJ
)@@G@@AUSE CONTROL@G@@@@ TO BE TRANSFERRED TO THAT LABEL.  IF THIS ARGUMENT ISEK
)@@G@@ NOT PRESENT,     @F@@@@ THEN CONTROL WILL GO TO THE EXECUTION MONITOR, EL
)@@G@@WHICH WILL PRINT  @]@@@@ THE MESSAGE@[@@@@      @^@@@@ UNDEFINED ERROR REM
)@@G@@ETURN.@[@@@@      @D@@@@ FOLLOWED BY A WALK-BACK AND AN ERROR TERMINATIOEN
)@@G@@N.    @[@@@@      @F@@@@       IN THE ORIGINAL UNIVERSITY OF MICHIGAN MAEO
)@@G@@D TRANSLATOR, ANY @F@@@@ NUMBER OF ALTERNATE RETURNS COULD BE EFFECTED BEP
)@@G@@Y SIMPLY TRANSFER-@F@@@@ RING TO A PARAMETER WHICH WAS A STATEMENT LABELEQ
)@@G@@.  THIS CONSTRUC- @F@@@@ TION, ALONG WITH THE PARALLEL FORTRAN CONSTRUCTER
)@@G@@ION OF DOING AN   @F@@@@ ASSIGNED TRANSFER TO AN ARGUMENT, CAN LEAD TO TES
)@@G@@ROUBLE BECAUSE IT @F@@@@ DOES NOT PERMIT THE PROGRAM'S RETURN CODE TO REET
)@@G@@STORE REGISTERS TO@G@@@@ THEIR EXPECTED STATE FOR THE CALLING PROGRAM.  EU
)@@G@@IT IS NOT RECOMMEN-     @F@@@@ DED THAT THE PROGRAMMER EMPLOY ARGUMENT (EV
)@@G@@OR COMMON) TRANSFERS    @G@@@@ UNLESS HE UNDERSTANDS WHY THEY ARE DANGEREW
)@@G@@OUS GIVEN ONLY THE INFOR-     @F@@@@ MATION IN THIS PARAGRAPH.  (I.E. IFEX
)@@G@@ YOU HAVE READ THIS PARAGRAPH @F@@@@ AND CANNOT SEE HOW TRANSFERRING TO EY
)@@G@@AN ARGUMENT OR TO A COMMON    @D@@@@ VARIABLE CAN GET YOU INTO TROUBLE, EZ
)@@G@@THEN DON'T DO IT!)@[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DFA
)@@G@@ECEMBER 1971 VERSION)          8-  8@[@@@@      @[@@@@      @[@@@@      FB
)@@G@@@[@@@@      @[@@@@      @A@@@@  8. 4.   AUXILLIARY ENTRY POINTS   @[@@@@FC
)@@G@@      @[@@@@      @F@@@@       A SUBROUTINE OR FUNCTION MAY HAVE ANY NUMFD
)@@G@@BER OF NAMES BY   @F@@@@ WHICH IT MAY BE CALLED; EACH NAME MAY BE ASSOICFE
)@@G@@ATED WITH ANY     @F@@@@ DESIRED SECTION OF THE SUBROUTINE, AND MAY HAVEFF
)@@G@@ ITS OWN ARGUMENT @F@@@@ LIST SEPARATE FROM THAT OF THE MAIN ENTRY POINTFG
)@@G@@ DECLARED ON THE  @G@@@@ 'SUBROUTINE' OR 'FUNCTION' LINE.  AN AUXILLIARYFH
)@@G@@ ENTRY POINT MAY BE     @G@@@@ PLACED ANYWHERE IN AN INTERNAL OR EXTERNAFI
)@@G@@L SUBROUTINE, EXCEPT THAT     @G@@@@ AN AUXILLIARY ENTRY TO AN EXTERNAL FJ
)@@G@@SUBROUTINE MAY NOT OCCUR INSIDE     @F@@@@ AN INTERNAL SUBROUTINE, ELSE FK
)@@G@@IT WILL BE TAKEN AS AN ENTRY TO THE @^@@@@ INTERNAL SUBROUTINE.   @[@@@@FL
)@@G@@      @ @@@@       THE GENERAL FORM IS    @[@@@@      @]@@@@ (FORTRAN): FM
)@@G@@@^@@@@       ENTRY <NAME>     @C@@@@       ENTRY <NAME>(<ARG1>,<ARG2>,..FN
)@@G@@.,<ARGN>)   @[@@@@      @]@@@@ (MAD):     @^@@@@       ENTRY TO <NAME>. FO
)@@G@@@D@@@@       ENTRY TO <NAME>.(<ARG1>,<ARG2>,...,<ARGN>)     @[@@@@      FP
)@@G@@@F@@@@       EXCEPT FOR A SPECIAL CASE IN MAD WHICH WILL BE DISCUSSED INFQ
)@@G@@@F@@@@ A LATER PARAGRAPH, THE FIRST FORM IN EITHER LANGUAGE SPECIFIES ANFR
)@@G@@@F@@@@ ENTRY WITH NO ARGUMENTS, WHILE THE SECOND FORM SPECIFIES AN ENTRYFS
)@@G@@@F@@@@ WITH ARGUMENTS.  THE RULES FOR <NAME> AND <ARG1>...<ARGN> ARE    FT
)@@G@@@F@@@@ EXACTLY THE SAME AS THOSE GIVEN IN SECTION 7.0 FOR FUNCTIONS OR  FU
)@@G@@@#@@@@ SUBROUTINES.     @[@@@@      @F@@@@       IF ANY ENTRY TO A SUBROFV
)@@G@@UTINE IS MODE WITH A DIFFERENT ARGU-@F@@@@ MENT LIST THAN SOME OTHER ENTFW
)@@G@@RY, THEN ONE MUST BE CAREFUL IF     @G@@@@ REFERENCING AN ARGUMENT TO ANFX
)@@G@@ ENTRY POINT OTHER THAN THE ONE USED.     @#@@@@ FOR EXAMPLE:     @[@@@@FY
)@@G@@      @]@@@@ (FORTRAN): @^@@@@       SUBROUTINE P(A,B)@]@@@@       .    FZ
)@@G@@@]@@@@       .    @]@@@@       .    @^@@@@       ENTRY Y(C,A)     @#@@@@GA
)@@G@@       B = A+C    @#@@@@       RETURN     @]@@@@       END  @F@@@@      GB
)@@G@@ THE ADDRESS USED FOR 'B' WILL BE THE ADDRESS USED IN THE   @F@@@@ LAST GC
)@@G@@CALL TO 'P'.  IF A CALL TO 'Y' IS MADE BEFORE A CALL TO 'P',@F@@@@ THEN GD
)@@G@@THE FUNCTION PARAMETER 'B' WILL NOT EVER HAVE BEEN DEFINED, @F@@@@ AND NGE
)@@G@@OTHING MEANINGFUL WILL HAPPEN.  IN GENERAL, A FUNCTION PARA-@[@@@@*****^GF
)@@G@@@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         GG
)@@G@@ 8-  9@[@@@@      @[@@@@      @[@@@@      @F@@@@ METER WILL HAVE THE SAMGH
)@@G@@E MEANING IT HAD FOR THE LAST CALL TO A   @F@@@@ NAME CONTAINING THAT FUGI
)@@G@@NCTION PARAMETER IN ITS ARGUMENT LIST     @F@@@@ REGARDLESS OF THE NUMBEGJ
)@@G@@R OF INTERVENING CALLS TO OTHER ENTRY     @F@@@@ POINTS NOT REFERENCING GK
)@@G@@THAT FUNCTION PARAMETER.  LET'S REPHRASE  @F@@@@ THAT LAST SENTENCE:  IFGL
)@@G@@ A CALL TO AN ENTRY OR A SUBROUTINE IS    @F@@@@ MADE, AND THE STATEMENTGM
)@@G@@S WHICH ARE EXECUTED REFERENCE A FUNCTION @G@@@@ PARAMETER WHICH DID NOTGN
)@@G@@ HAPPEN TO BE INCLUDED IN THE ARGUMENT LIST     @F@@@@ TO THE ENTRY POINGO
)@@G@@T WHICH WAS CALLED, THEN THE DEFINITION IS RE-  @F@@@@ TAINED FROM THE LGP
)@@G@@AST CALL WHICH DID REFERENCE IT,  *IF ANY*.  IF @F@@@@ NO CALL HAS REFERGQ
)@@G@@ENCED IT, THE THEN IT IS NOT DEFINED.  THIS     @G@@@@ CONDITION IS HEAVGR
)@@G@@ILY DEPENDENT UPON PROGRAM LOGIC, AND THUS IS NOT     @G@@@@ CHECKED BY GS
)@@G@@THE COMPILER OR EXECUTION MONITOR.  NO ERROR MESSAGE OR     @F@@@@ WARNIGT
)@@G@@NG OF ANY KIND CAN BE PRINTED FOR AN UNDEFINED FUNCTION     @C@@@@ PARAMGU
)@@G@@ETER, EVEN THOUGH IT IS A LOGICAL ERROR.  @[@@@@      @F@@@@       A SPEGV
)@@G@@CIAL FORM OF ALTERNATE ENTRY IS PERMITTED IN MAD:  IF @G@@@@ THE FUNCTIOGW
)@@G@@N DECLARATION CARD DID NOT SPECIFY AN ENTRY POINT NAME,     @F@@@@ BUT OGX
)@@G@@NLY ARGUMENTS, THEN THESE ARGUMENTS WILL BE USED FOR ANY    @G@@@@ 'ENTRGY
)@@G@@Y TO' STATEMENT WITH NO ARGUMENTS OF ITS OWN.  THUS, ASSUMING     @#@@@@GZ
)@@G@@ THE STATEMENT    @[@@@@      @ @@@@ INTERNAL FUNCTION (A,B,C)    @[@@@@HA
)@@G@@      @B@@@@ THEN AN AUXILLIARY ENTRY OF THE FORM:    @[@@@@      @]@@@@HB
)@@G@@ ENTRY TO X.@[@@@@      @^@@@@ WILL BE EQUIVALENT TO  @[@@@@      @^@@@@HC
)@@G@@ ENTRY TO X.(A,B,C)     @[@@@@      @G@@@@ THIS FORM HAS BEEN INCLUDED FHD
)@@G@@OR THE SAKE OF COMPATIBILITY WITH THE     @E@@@@ ORIGINAL MAD LANGUAGE, HE
)@@G@@AT THE EXPENSE OF TOTAL GENERALITY. @[@@@@*****^@G@@@@A GUIDE TO PROGRAMHF
)@@G@@MING WITH RALPH (DECEMBER 1971 VERSION)          8- 10@[@@@@      @[@@@@HG
)@@G@@      @[@@@@      @[@@@@      @[@@@@      @C@@@@  8. 5.   SPECIFYING THEHH
)@@G@@ MODE OF A FUNCTION     @[@@@@      @[@@@@      @[@@@@      @G@@@@      HI
)@@G@@ IT IS MEANINGLESS TO SPECIFY THE MODE FOR A PURE SUBROUTINE,     @F@@@@HJ
)@@G@@ BUT A MODE DECLARATION FOR A FUNCTION REFERS TO THE MODE OF THE  @F@@@@HK
)@@G@@ VALUE RETURNED BY THAT FUNCTION.  THE MODE OF A FUNCTION MUST BE @F@@@@HL
)@@G@@ SPECIFIED BOTH IN THE FUNCTION ITSELF, AND IN ALL PROGRAMS WHERE @F@@@@HM
)@@G@@ THE FUNCTION IS REFERENCED.  STANDARD DEFAULT MODES ARE HONORED  @F@@@@HN
)@@G@@ FOR FUNCTIONS AS WELL AS FOR VARIABLES:  IN FORTRAN, THOSE FUNC- @F@@@@HO
)@@G@@ TIONS WHOSE NAMES BEGIN WITH THE LETTERS I,J,K,L,M, OR N ARE     @F@@@@HP
)@@G@@ INTEGER, ALL OTHERS ARE REAL.  IN MAD, ALL FUNCTIONS ARE FLOATING@A@@@@HQ
)@@G@@ POINT UNLESS OTHERWISE DECLARED.   @[@@@@      @G@@@@       THERE ARE THR
)@@G@@WO WAYS THAT THE MODE OF A FUNCTION MAY BE SPECI-     @G@@@@ FIED WITHINHS
)@@G@@ THAT FUNCTION.  THE FIRST IS TO REFERENCE THE FUNCTION     @E@@@@ NAME HT
)@@G@@IN A MODE-DECLARATION STATEMENT WITHIN THE FUNCTION:  @[@@@@      @]@@@@HU
)@@G@@ (FORTRAN): @ @@@@       <MODE NAME> <NAME>     @[@@@@      @]@@@@ (MAD)HV
)@@G@@:     @ @@@@       <MODE NAME> <NAME>.    @[@@@@      @E@@@@ (REFERENCE HW
)@@G@@SECTION 8.2 FOR A DEFINITION OF <MODE NAME>).   @[@@@@      @F@@@@      HX
)@@G@@ THE SECOND METHOD, AVAILABLE ONLY IN FORTRAN, IS TO SPECIFY@D@@@@ THE MHY
)@@G@@ODE OF THE FUNCTION ON THE DEFINITION STATEMENT:@[@@@@      @]@@@@ (FORTHZ
)@@G@@RAN): @D@@@@       <MODE NAME> FUNCTION <NAME> (<ARG1>,...,<ARGN>)@[@@@@IA
)@@G@@      @F@@@@       WHERE <MODE NAME> IS DEFINED AS IN SECTION 3.1, AND AIB
)@@G@@S     @]@@@@ ABOVE.     @[@@@@      @[@@@@      @#@@@@       EXAMPLES:  IC
)@@G@@@#@@@@       =========  @[@@@@      @]@@@@ (MAD):     @A@@@@       EXTERID
)@@G@@NAL FUNCTION P.(Q,R)    @^@@@@       INTEGER P.,R     @[@@@@      @B@@@@IE
)@@G@@       INTERNAL FUNCTION SMR.(ONE,TWO)    @ @@@@       DOUBLE PRECISION IF
)@@G@@SMR.  @#@@@@       BOOLEAN TWO@[@@@@      @]@@@@ (FORTRAN): @[@@@@*****^IG
)@@G@@@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         IH
)@@G@@ 8- 11@[@@@@      @[@@@@      @[@@@@      @ @@@@       FUNCTION GREEN (GII
)@@G@@RASS) @^@@@@       REAL GREEN, GRASS@[@@@@      @A@@@@       COMPLEX FUNIJ
)@@G@@CTION IMAG(P1,P2) @[@@@@      @A@@@@       LOGICAL FUNCTION TRUTH(X)    IK
)@@G@@@[@@@@      @^@@@@       FUNCTION H(I)    @#@@@@       INTEGER H  @[@@@@IL
)@@G@@      @[@@@@      @B@@@@  8. 6.   FUNCTION AND SUBROUTINE CALLS   @[@@@@IM
)@@G@@      @[@@@@      @F@@@@       AS DEFINED IN SECTION 3.2.4, A FUNCTION IIN
)@@G@@S AN EXTERIOR     @F@@@@ SEGMENT OF CODE TO WHICH ONE TRANSFERS WITH THEIO
)@@G@@ INTENT THAT IT   @F@@@@ RETURN AFTER PERFORMING ITS ASSIGNED TASK.  A FIP
)@@G@@UNCTION WHICH DOES@E@@@@ NOT RETURN A VALUE, BUT MERELY PERFORMS A TASK,IQ
)@@G@@ IS CALLED A@F@@@@ 'SUBROUTINE'.  A 'FUNCTION' PERFORMS A TASK, THEN RETIR
)@@G@@URNS A VALUE@F@@@@ BASED ON SAME.  THUS, A HYPOTHETICAL FUNCTION TO INVEIS
)@@G@@RT A MATRIX @B@@@@ MIGHT RETURN AS A VALUE ITS DETERMINANT: @[@@@@      IT
)@@G@@@]@@@@ FORTRAN):  @^@@@@       DET = INVERT(A,N)@[@@@@      @]@@@@ (MAD)IU
)@@G@@:     @ @@@@       DET = INVERT.(A,N)     @[@@@@      @D@@@@ BUT ANOTHERIV
)@@G@@ FUNCTION MIGHT SIMPLY INVERT THE MATRIX: @[@@@@      @]@@@@ FORTRAN):  IW
)@@G@@@^@@@@       CALL INVRSE(A,N) @[@@@@      @]@@@@ (MAD):     @ @@@@      IX
)@@G@@ EXECUTE INVRSE.(A,N)   @[@@@@      @ @@@@ THE ABBREVIATED CONSTRUCTION IY
)@@G@@@[@@@@      @]@@@@ (MAD):     @^@@@@       INVRSE.(A,N)     @[@@@@      IZ
)@@G@@@^@@@@ IS ALSO PERMITTED.     @[@@@@      @F@@@@       A REFERENCE TO A JA
)@@G@@VALUE-RETURNING FUNCTION CAN, AS NOTED IN @G@@@@ SECTION 3.2.4, BE INCLUJB
)@@G@@DED AS AN OPERAND IN ANY EXPRESSION WHERE AN    @F@@@@ OPERAND OF THAT MJC
)@@G@@ODE IS LEGAL.  A SUBROUTINE REFERENCE MUST STAND@F@@@@ BY ITSELF.  BOTH JD
)@@G@@TYPES WILL CAUSE A TRANSFER OF CONTROL TO THE   @F@@@@ INDICATED FUNCTIOJE
)@@G@@N.  IT IS UP TO THE FUNCTION TO RETURN AT THE   @#@@@@ PROPER TIME.     JF
)@@G@@@[@@@@      @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBEJG
)@@G@@R 1971 VERSION)          8- 12@[@@@@      @[@@@@      @[@@@@      @B@@@@JH
)@@G@@  8. 6. 1.   GENERATED CALLING SEQUENCES  @[@@@@      @F@@@@       EACH JI
)@@G@@ARGUMENT TO A FUNCTION OR SUBROUTINE CALL IS OUTPUT AS@D@@@@ A SEPARATE JJ
)@@G@@WORD IN THE CALLING SEQUENCE.  RULES FOR  @C@@@@ ARGUMENT-PARAMETER FORMJK
)@@G@@ATION ARE AS FOLLOWS.   @[@@@@      @F@@@@       1)  IF AN ARGUMENT IS AJL
)@@G@@ CONSTANT, UNDIMENSIONED VARIABLE,  @F@@@@           ARRAY VARIABLE WITHJM
)@@G@@ CONSTANT SUBSCRIPT, OR TEMPORARY   @F@@@@           RESULT, THEN THE ADJN
)@@G@@DRESS OF THE ARGUMENT IS PASSED.    @[@@@@      @F@@@@       2)  IF AN AJO
)@@G@@RGUMENT IS THE NAME OF AN ARRAY DIMENSIONED FOR @F@@@@           LINEAR JP
)@@G@@SUBSCRIPTING, THEN THE ADDRESS OF ARRAY(1) IS   @G@@@@           PASSED,JQ
)@@G@@ REGARDLESS OF WHETHER OR NOT THE ZERO ELEMENT IS     @F@@@@           PJR
)@@G@@RESENT.  THUS, IF THE ZERO ELEMENT IS PRESENT, AND IF @F@@@@           TJS
)@@G@@HE ARRAY NAME WITHOUT SUBSCRIPTS IS USED AS AN ARGU-  @F@@@@           MJT
)@@G@@ENT, THE  *SECOND*  WORD OF THE ARRAY IS PASSED.  THIS@G@@@@           IJU
)@@G@@S COMPLETELY COMPATIBLE WITH ALL FORTRAN OR MAD SUBROU-     @G@@@@      JV
)@@G@@     TINES, REGARDLESS OF THE PRESENCE OR ABSENCE OF THE ZERO     @G@@@@JW
)@@G@@           ELEMENT IN THE SUBROUTINE, PROVIDED THAT THE ARGUMENT IS     JX
)@@G@@@G@@@@           REFERENCED AS AN ARRAY IN THE CALLED SUBROUTINE.  IF THJY
)@@G@@E     @F@@@@           SUBROUTINE REFERENCES THE ARGUMENT AS AN UNDIMENSJZ
)@@G@@IONED @G@@@@           VARIABLE, IT MUST REALIZE THAT IT IS GETTING THE KA
)@@G@@ADDRESS     @F@@@@           OF ARRAY(1) THROUGH THE CALLING SEQUENCE, WKB
)@@G@@HICH IS NOT @B@@@@           NECESSARILY THE ARRAY BASE.    @[@@@@      KC
)@@G@@@E@@@@       3)  IF AN ARGUMENT IS THE UNSUBSCRIPTED NAME OF A    @F@@@@KD
)@@G@@           MULTIPLY-DIMENSIONED ARRAY, THEN THE ADDRESS OF A 'DOPE@F@@@@KE
)@@G@@           VECTOR' ENTRY IS PASSED.  THIS 'DOPE VECTOR' CONTAINS  @G@@@@KF
)@@G@@           DIMENSION INFORMATION AND A POINTER TO THE 1-SUBSCRIPTED     KG
)@@G@@@F@@@@           ENTRY OF THE ARRAY.  ALL OF THE RULES IN 2) ALSO APPLY.KH
)@@G@@@[@@@@      @F@@@@       WHENEVER A SYSTEM ROUTINE LOCATES AN ERROR IN AKI
)@@G@@ FORTRAN    @^@@@@           PROGRAM, A   @G@@@@ WALK-BACK TRACE IS PRINKJ
)@@G@@TED.  THE WALK-BACK TRACE IS A TABLE OF THE     @F@@@@ SUBROUTINE CALLS KK
)@@G@@MADE, WITH DECK NAME AND LINE NUMBER, WHICH LED @#@@@@           TO THE KL
)@@G@@@]@@@@ ERROR.     @[@@@@      @A@@@@  8. 6. 2.   THE 'WALK-BACK' FEATUREKM
)@@G@@@[@@@@      @[@@@@      @D@@@@  8. 6. 2. 1.   THE WALK-BACK WORD IN SUBRKN
)@@G@@OUTINE CALLS@[@@@@      @F@@@@       ALL SUBROUTINE CALLING SEQUENCES, IKO
)@@G@@NCLUDING THOSE AUTOMATI-@F@@@@ CALLY GENERATED BY THE COMPILER, HAVE A 'KP
)@@G@@WALK-BACK' WORD AS THE  @G@@@@ LAST ARGUMENT.  THIS 'WALK-BACK' WORD IS KQ
)@@G@@NOT DIRECTLY AVAILABLE TO     @F@@@@ THE PROGRAMMER; IT IS USED BY THE MKR
)@@G@@ONITOR SYSTEM TO TRACE ERRORS,@F@@@@ AND BY SOME LIBRARY SUBROUTINES TO KS
)@@G@@LOCATE THE SYMBOL TABLE IN THE@#@@@@ CALLING PROGRAM. @[@@@@      @[@@@@KT
)@@G@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)   KU
)@@G@@       8- 13@[@@@@      @[@@@@      @[@@@@      @E@@@@       THE INFORMAKV
)@@G@@TION CONTAINED IN THE WALKBACK WORD IS:   @[@@@@      @E@@@@            KW
)@@G@@   1)  THE LINE NUMBER IN THE SOURCE PROGRAM    @F@@@@               2) KX
)@@G@@ THE ADDRESS OF A WALK-BACK PACKET OF INFORMA-  @^@@@@                  KY
)@@G@@ TION.@[@@@@      @[@@@@      @A@@@@  8. 6. 2. 2.   THE WALK-BACK PACKETKZ
)@@G@@@[@@@@      @G@@@@       THE WALK-BACK PACKET IS A 3-WORD PACKET OF INFOLA
)@@G@@RMATION WHICH     @F@@@@ IS REFERENCED BY ALL OF THE VARIOUS WALK-BACK WLB
)@@G@@ORDS IN A GIVEN   @F@@@@ PROGRAM.  A UNIQUE WALK-BACK PACKET IS GENERATELC
)@@G@@D FOR EACH SUBROU-@F@@@@ TINE, EITHER INTERNAL OR EXTERNAL, AND FOR THE LD
)@@G@@MAIN PROGRAM.     @F@@@@ DURING EXECUTION, THE 3-WORD WALK-BACK PACKET CLE
)@@G@@ONTAINS THE FOLLO-@#@@@@ WING INFORMATION:@[@@@@      @[@@@@      @D@@@@LF
)@@G@@       1)  A HOLLERITH (FIELDATA) 6-CHARACTER DECKNAME@F@@@@       2)  TLG
)@@G@@HE POINT FROM WHICH THIS SUBROUTINE WAS LAST CALLED   @F@@@@       3)  TLH
)@@G@@HE NUMBER OF ARGUMENTS EXPECTED FOR THE CALL IN 2)    @C@@@@       4)  TLI
)@@G@@HE ADDRESS OF THE SYMBOL TABLE.     @F@@@@       5)  AN INDICATION OF WHLJ
)@@G@@ETHER THE SOURCE PROGRAM IS CODED IN@A@@@@              MAD OR IN FORTRALK
)@@G@@N     @[@@@@      @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DLL
)@@G@@ECEMBER 1971 VERSION)          9-  1@[@@@@      @[@@@@      @[@@@@      LM
)@@G@@@ @@@@  9.   DECLARATION STATEMENTS @[@@@@      @[@@@@      @[@@@@      LN
)@@G@@@G@@@@       DECLARATION STATEMENTS ARE USED TO ADJUST THE RALPH COMPILELO
)@@G@@R     @F@@@@ ACTION ACCORDING TO SPECIFIC PROGRAM NEEDS.  DECLARATION STLP
)@@G@@ATE-  @F@@@@ MENTS CAN BE GROUPED INTO THE CATEGORIES OF STORAGE ALLOCATLQ
)@@G@@ION   @F@@@@ CONTROL, MODE DECLARATIONS, DATA INTRODUCTION, PARAMETER DELR
)@@G@@FINI- @E@@@@ TION, MACROEXPRESSION DEFINITION, AND COMPILER CONTROL.    LS
)@@G@@@[@@@@      @[@@@@      @A@@@@  9. 1.   STORAGE ALLOCATION CONTROL@[@@@@LT
)@@G@@      @[@@@@      @F@@@@       STORAGE ALLOCATION CONTROL STATEMENTS DEFLU
)@@G@@INE AND REGULATE  @A@@@@ DATA STORAGE ALLOCATION BY RALPH.  @[@@@@      LV
)@@G@@@E@@@@  9. 1. 1.   THE 'DIMENSION' STATEMENT (FORTRAN AND MAD)    @[@@@@LW
)@@G@@      @E@@@@       THE DIMENSION STATEMENT SPECIFIES SUBSCRIPT RANGE ANDLX
)@@G@@@G@@@@ ASSIGNS STORAGE ACCORDINGLY, AND IF MULTIPLE SUBSCRIPTING IS BEINLY
)@@G@@G     @F@@@@ SPECIFIED, ALSO SETS UP A 'STRUCTURE VECTOR'.  IN SIMPLEST LZ
)@@G@@FORM, @ @@@@ THE DIMENSION STATEMENT IS   @[@@@@      @A@@@@       DIMENMA
)@@G@@SION <VARIABLE> (<SIZE>)@[@@@@      @[@@@@      @F@@@@      THIS SPECIFIMB
)@@G@@ES A MAXIMUM SUBSCRIPT RANGE OF <SIZE> FOR THE  @F@@@@ VARIABLE <VARIABLMC
)@@G@@E>.  DEPENDING UPON WHETHER OR NOT THE 'Z' CAL- @F@@@@ LING OPTION IS INMD
)@@G@@ EFFECT, THE MINIMUM LEGAL SUBSCRIPT WILL BE    @#@@@@ EITHER 0 OR 1.   ME
)@@G@@@[@@@@      @A@@@@       FOR EXAMPLE, THE STATEMENT   @[@@@@      @^@@@@MF
)@@G@@       DIMENSION X(20)  @[@@@@      @B@@@@       WILL HAVE THE FOLLOWINGMG
)@@G@@ EFFECTS:   @[@@@@      @^@@@@ 'Z' OPTION IN EFFECT:  @B@@@@       -RESEMH
)@@G@@RVES 21 WORDS OF CORE STORAGE @C@@@@       -ALLOWS SUBSCRIPT RANGE OF X(MI
)@@G@@0),...,X(20)@[@@@@      @ @@@@ 'Z' OPTION NOT IN EFFECT:    @B@@@@      MJ
)@@G@@ -RESERVES 20 WORDS OF CORE STORAGE @C@@@@       -ALLOWS SUBSCRIPT RANGEMK
)@@G@@ OF X(1),...,X(20)@[@@@@      @C@@@@  9. 1. 1. 1.   MULTIPLE-SUBSCRIPT DML
)@@G@@IMENSIONING @[@@@@      @F@@@@       FOR MULTIPLE-SUBSCRIPT DIMENSIONINGMM
)@@G@@, THERE ARE A FEW MORE  @B@@@@ THINGS GOING ON:  THE GENERAL FORM IS    MN
)@@G@@@[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSIMO
)@@G@@ON)          9-  2@[@@@@      @[@@@@      @[@@@@      @[@@@@      @#@@@@MP
)@@G@@       (FORTRAN): @[@@@@      @E@@@@       DIMENSION <VARIABLE>(<SIZE-1>MQ
)@@G@@,<SIZE-2>,...,<SIZE-N>) @[@@@@      @#@@@@       (MAD):     @[@@@@      MR
)@@G@@@E@@@@       DIMENSION <VARIABLE>(<SIZE-1>*<SIZE-2>*...*<SIZE-N>) @[@@@@MS
)@@G@@      @G@@@@       REGARDLESS OF THE SETTING OF THE 'Z' OPTION, THIS WILMT
)@@G@@L ALLOW     @F@@@@ A SUBSCRIPT RANGE OF 1 TO <SIZE-K> FOR THE K'TH SUBSCMU
)@@G@@RIPT.  FOR  @^@@@@ EXAMPLE, THE STATEMENT @[@@@@      @]@@@@ (FORTRAN): MV
)@@G@@@ @@@@       DIMENSION P(3,4,5)     @[@@@@      @]@@@@ (MAD):     @ @@@@MW
)@@G@@       DIMENSION P(3*4*5)     @[@@@@      @F@@@@       WILL ALLOW A SUBSMX
)@@G@@CRIPT RANGE OF P(1,1,1) TO P(3,4,5).  IF  @F@@@@ THE 'Z' OPTION IS SET, MY
)@@G@@THEN AN ADDITIONAL ELEMENT, P(0), WILL BE @F@@@@ ASSIGNED, ALLOTTING 3*4MZ
)@@G@@*5 + 1 WORDS, OR 61 WORDS OF CORE STORAGE @G@@@@ FOR THE ARRAY P.  IF THNA
)@@G@@E 'Z' OPTION IS NOT SET, THEN ONLY 60 WORDS     @F@@@@ WILL BE ASSIGNED,NB
)@@G@@ AND THE BASE OF THE ARRAY WILL BE P(1,1,1).    @[@@@@      @D@@@@  9. 1NC
)@@G@@. 1. 2.   STORAGE OF MULTIPLY-SUBSCRIPTED ARRAYS@[@@@@      @F@@@@      ND
)@@G@@ MULTIPLY-SUBSCRIPTED ARRAYS CAN BE STORED IN ONE OF TWO    @F@@@@ WAYS,NE
)@@G@@ BY COLUMNS OR BY ROWS.  IF X(I,J,K) IS STORED BY ROWS, THEN@G@@@@ SEQUENF
)@@G@@NTIAL CORE CELLS ARE OCCUPIED BY X(I,J,K) AND X(I,J,K+1).  IF     @F@@@@NG
)@@G@@ X(I,J,K) IS STORED BY COLUMNS, THEN SEQUENTIAL CORE CELLS ARE    @B@@@@NH
)@@G@@ OCCUPIED BY X(I,J,K) AND X(I+1,J,K).     @[@@@@      @#@@@@       EXAMPNI
)@@G@@LES:  @#@@@@       =========  @[@@@@      @ @@@@       SUPPOSE THE STATENJ
)@@G@@MENT  @[@@@@      @^@@@@       DIMENSION P(3,5) @[@@@@      @F@@@@ HAS BNK
)@@G@@EEN PUNCHED.  THEN IF P IS STORED BY COLUMNS, THE CELLS     @^@@@@ ALLOTNL
)@@G@@TED ARE, IN ORDER,@[@@@@      @G@@@@ P(1,1),P(2,1),P(3,1),P(1,2),P(2,2),NM
)@@G@@...,P(3,4),P(1,5),P(2,5),P(3,5)     @[@@@@      @F@@@@       IF P IS STONN
)@@G@@RED BY ROWS, THEN THE CELLS ALLOTTED ARE, IN    @]@@@@ ORDER,     @[@@@@NO
)@@G@@      @D@@@@ P(1,1),P(1,2),P(1,3),P(1,4),P(1,5),...,P(3,4),P(3,5) @[@@@@NP
)@@G@@      @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971NQ
)@@G@@ VERSION)          9-  3@[@@@@      @[@@@@      @[@@@@      @F@@@@ IN MANR
)@@G@@THEMATICS IT IS CUSTOMARY TO THINK OF A MATRIX IN TERMS OF  @F@@@@ ITS RNS
)@@G@@OWS, BUT THE ASA FORTRAN STANDARDS SPECIFY STORAGE BY CO-   @F@@@@ LUMNSNT
)@@G@@.  RALPH CAN STORE EITHER BY ROWS OR BY COLUMNS.  IF THE    @F@@@@ INITINU
)@@G@@AL COMPILATION MODE IS FORTRAN, THEN STORAGE WILL BE BY     @F@@@@ COLUMNV
)@@G@@NS.  IF THE INITIAL COMPILATION MODE IS MAD, THEN STORAGE   @#@@@@ WILL NW
)@@G@@BE BY ROWS. @[@@@@      @F@@@@       IN MAD, ONE MAY SPECIFY ARBITRARY RNX
)@@G@@ANGES FOR MULTIPLE SUBS-@F@@@@ CRIPTS, RATHER THAN JUST A RANGE OF 1 TO NY
)@@G@@N.  THE GENERAL FORM IS @[@@@@      @F@@@@  DIMENSION <VARIABLE>((<LOW1>NZ
)@@G@@...<HIGH1>)*(<LOW2>...<HIGH2>)*...) @[@@@@      @F@@@@       WHERE <LOW1OA
)@@G@@> AND <HIGH1> ARE THE LOWER AND UPPER LIMITS    @F@@@@ RESPECTIVELY OF TOB
)@@G@@HE LEGAL SUBSCRIPT RANGE BEING SPECIFIED FOR THE@C@@@@ FIRST SUBSCRIPT. OC
)@@G@@ FOR EXAMPLE, THE STATEMENT   @[@@@@      @]@@@@ (MAD):     @C@@@@      OD
)@@G@@ DIMENSION B((-8...2)*(5...7)*(-19...-3)) @[@@@@      @ @@@@ ALLOWS A SUOE
)@@G@@BSCRIPT RANGE OF  @ @@@@       B(-8,I,J) TO B(2,I,J)  @ @@@@       B(I,5OF
)@@G@@,J) TO B(I,7,J)   @ @@@@       B(I,J,-19) TO B(I,J,-3)@[@@@@      @F@@@@OG
)@@G@@ THE NUMBER OF WORDS OF CORE ALLOCATED INDEPENDENT OF A POSSIBLE  @#@@@@OH
)@@G@@ ZERO ELEMENT IS  @[@@@@      @E@@@@       N = (2-(-8)+1)*(7-5+1)*(-3-(-OI
)@@G@@19)+1) =  561 WORDS.    @[@@@@      @F@@@@       IF THE 'Z' OPTION IS SEOJ
)@@G@@T, THEN 562 WORDS WILL BE ALLOCATED.@[@@@@      @A@@@@  9. 1. 1. 3.   GROK
)@@G@@OUP DIMENSIONING  @[@@@@      @F@@@@       IN MAD, IF IT IS DESIRED TO DOL
)@@G@@IMENSION A NUMBER OF VARIABLES@B@@@@ WITH THE SAME LIMITS, THEN THE NOTAOM
)@@G@@TION  @[@@@@      @E@@@@ DIMENSION (<VAR1>,<VAR2>,<VAR3>,...,<VARN>)(<DION
)@@G@@MENSIONS>)  @[@@@@      @G@@@@       WILL GIVE EACH OF THE <VARI> THE SAOO
)@@G@@ME DIMENSIONING AS SPECI-     @[@@@@ FIED.@[@@@@      @^@@@@            OP
)@@G@@   EXAMPLES:@^@@@@               =========@[@@@@      @ @@@@       DIMENOQ
)@@G@@SION (A,B,C)(100) @A@@@@       DIMENSION (X,Y,Z)(25*20)     @[@@@@      OR
)@@G@@@C@@@@  9. 1. 1. 4.   DIMENSIONING FUNCTION PARAMETERS@[@@@@      @F@@@@OS
)@@G@@       THE DIMENSION STATEMENT AS APPLIED TO FUNCTION PARAMETERS  @[@@@@OT
)@@G@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)   OU
)@@G@@       9-  4@[@@@@      @[@@@@      @[@@@@      @F@@@@ DOES NOT ASSIGN SOV
)@@G@@TORAGE, FOR THEY ARE STORED IN THE CALLING PRO- @A@@@@ GRAM.  IT SERVES OW
)@@G@@TWO PURPOSES:     @[@@@@      @A@@@@       SPECIFYING SUBSCRIPT RANGE   OX
)@@G@@@E@@@@       DISTINGUISHING DIMENSIONED ARRAYS FROM FUNCTIONS.    @[@@@@OY
)@@G@@      @G@@@@       IN FORTRAN, IF A FUNCTION PARAMETER IS USED WITH SUBSOZ
)@@G@@CRIPTS,     @F@@@@ BUT IS NOT DIMENSIONED, IT WILL PROBABLY BE TREATED APA
)@@G@@S A FUNCTION@G@@@@ INSTEAD OF A VARIABLE.  THE PRESENCE OF A DIMENSION SPB
)@@G@@TATEMENT WILL     @F@@@@ CLEARLY ANNOUNCE ONE'S INTENTION TO USE A FUNCTPC
)@@G@@ION PARAMETER AS A@A@@@@ VARIABLE RATHER THAN AS A FUNCTION.@[@@@@      PD
)@@G@@@F@@@@       IF A FUNCTION PARAMETER IS USED WITH MULTIPLE SUBSCRIPTS,  PE
)@@G@@@F@@@@ BUT DIMENSIONED WITH ONLY A SINGLE SUBSCRIPT, THEN THE SUBSCRIPT PF
)@@G@@@F@@@@ RANGE SPECIFIED IN THE CALLING PROGRAM IS USED.  IF IT IS DIMEN- PG
)@@G@@@F@@@@ SIONED WITH MULTIPLE SUBSCRIPTS, THEN THIS WILL OVERRIDE THE     PH
)@@G@@@D@@@@ SUBSCRIPT RANGE SPECIFIED IN THE CALLING PROGRAM.    @[@@@@      PI
)@@G@@@C@@@@  9. 1. 1. 5.   VARIABLE-LIMIT DIMENSIONING     @[@@@@      @F@@@@PJ
)@@G@@       SOMETIMES A FUNCTION PARAMETER'S DIMENSIONS ARE VARIABLE;  @G@@@@PK
)@@G@@ FOR EXAMPLE, A SUBROUTINE TO INVERT AN N X N MATRIX MUST ALTER THE     PL
)@@G@@@F@@@@ DIMENSION OF THE ARRAY TO N X N DEPENGING UPON THE VALUE OF N.   PM
)@@G@@@[@@@@      @]@@@@ (FORTRAN): @^@@@@       DIMENSION A(N,N) @[@@@@      PN
)@@G@@@F@@@@       IF VARIABLE DIMENSIONING IS USED, THE ARRAY WHICH IS DIMEN-PO
)@@G@@@G@@@@ SIONED AND ALL OF THE VARIABLE LIMITS MUST BE FUNCTION PARAMETERSPP
)@@G@@.     @F@@@@ VARIABLE DIMENSIONING DOES NOT ALTER STORAGE ALLOCATION, ONPQ
)@@G@@LY    @^@@@@ SUBSCRIPT STRUCTURE.   @[@@@@      @E@@@@  9. 1. 2.   THE 'PR
)@@G@@EQUIVALENCE' STATEMENT (FORTRAN AND MAD)  @[@@@@      @F@@@@       THE EPS
)@@G@@QUIVALENCE STATEMENT CAUSES THE STORAGE ALLOCATOR TO  @F@@@@ ASSIGN MOREPT
)@@G@@ THAN ONE VARIABLE TO THE SAME STORAGE LOCATION.  IT  @F@@@@ CAN BE USEDPU
)@@G@@ FOR CONSERVING STORAGE, OR FOR PROGRAMMING 'TRICKS'  @G@@@@ INVOLVING MPV
)@@G@@ODE FAKERY.  IN GENERAL FORM, THE EQUIVALENCE STATEMENT     @[@@@@ IS   PW
)@@G@@@[@@@@      @E@@@@  EQUIVALENCE (<V1>,<V2>),(<V3>,<V4>,<V5>,...),(...),.PX
)@@G@@..    @[@@@@      @F@@@@ WHERE THE <VI> ARE VARIABLES, POSSIBLY WITH CONPY
)@@G@@STANT SUBSCRIPTS. @F@@@@ AN EQUIVALENCE GROUP IS ONE OF THE OUTERMOST, CPZ
)@@G@@OMMA-SEPARATED    @G@@@@ PARENTHESIS GROUPS.  ALL VARIABLES IN AN EQUIVAQA
)@@G@@LENCE GROUP WILL BE     @B@@@@ ASSIGNED TO THE SAME STORAGE LOCATION.   QB
)@@G@@@[@@@@      @F@@@@       IF ONE OF THE VARIABLES IN AN EQUIVALENCE GROUPQC
)@@G@@ IS DECLARED@F@@@@ TO BE IN COMMON STORAGE, THEN ALL OF THE VARIABLES INQD
)@@G@@ THE EQUIVA-@F@@@@ LENCE GROUP WILL BE IN COMMON STORAGE.  MORE THAN ONEQE
)@@G@@ DECLARED   @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBEQF
)@@G@@R 1971 VERSION)          9-  5@[@@@@      @[@@@@      @[@@@@      @F@@@@QG
)@@G@@ COMMON VARIABLE IN AN EQUIVALENCE GROUP IS NOT PERMITTED.  IF A  @F@@@@QH
)@@G@@ SUBSCRIPTED VARIABLE IS INCLUDED IN AN EQUIVALENCE DECLARATION,  @C@@@@QI
)@@G@@ THEN THE ENTIRE ARRAY IS CARRIED ALONG.  THUS: @[@@@@      @B@@@@      QJ
)@@G@@         EQUIVALENCE (A(1),B(5))    @[@@@@      @F@@@@       WILL FORCE QK
)@@G@@INTO EQUIVALENCE A(2) AND B(6), A(3) AND B(7),  @F@@@@ ETC.  IF AN ARRAYQL
)@@G@@ EQUIVALENCE OF THIS SORT IS BEING DONE INSIDE  @F@@@@ COMMON STORAGE, CQM
)@@G@@ARE MUST BE TAKEN TO ENSURE THAT AN EQUIVALENCE @F@@@@ STATEMENT DOES NOQN
)@@G@@T FORCE AN ARRAY OFF THE LOWER END OF THE BLOCK.@F@@@@ IF AN ARRAY EQUIVQO
)@@G@@ALENCE FORCES THE ARRAY OFF THE UPPER END OF A  @D@@@@ COMMON BLOCK, THEQP
)@@G@@N THE COMMON BLOCK WILL BE EXPANDED.@[@@@@      @F@@@@       IF DOUBLE-PQQ
)@@G@@RECISION OR COMPLEX VARIABLES ARE BEING EQUIVA- @F@@@@ LENCED, NOTE THATQR
)@@G@@ TWO WORDS ARE ALLOCATED FOR EACH VARIABLE OF   @G@@@@ THESE MODES.  THUQS
)@@G@@S, IF 'A' IS DOUBLE PRECISION, THEN EQUIVALENCING     @F@@@@ B(3) AND A(QT
)@@G@@4) WILL BRING INTO EQUIVALENCE B(5) AND A(5), B(7) AND@]@@@@ A(6), ETC. QU
)@@G@@@[@@@@      @B@@@@  9. 1. 3.   COMMON-STORAGE DECLARATION   @[@@@@      QV
)@@G@@@F@@@@       WHEN SUBROUTINES ARE USED TO ANY LARGE EXTENT, IT OFTEN IS QW
)@@G@@@F@@@@ DESIRED TO TRANSMIT BLOCKS OF DATA BETWEEN SUBROUTINES.  COMMON  QX
)@@G@@@G@@@@ STORAGE PROVIDES A METHOD OF HAVING STORAGE SHARED BY SUBROUTINESQY
)@@G@@.     @A@@@@ THE DECLARATION TAKES THE FORM     @[@@@@      @]@@@@ (FORTQZ
)@@G@@RAN): @E@@@@       COMMON/<NAME>/<VAR1>,<VAR2>,.../<NAME1>/<VARK>,...   RA
)@@G@@@[@@@@      @G@@@@       WHERE <NAME> IS THE POSSIBLY-BLANK NAME OF THE RB
)@@G@@COMMON BLOCK.     @F@@@@ ANY SYMBOL WHICH WOULD BE LEGAL AS A VARIABLE NRC
)@@G@@AME IS LEGAL AS A @G@@@@ COMMON-BLOCK NAME.  IT IS QUITE LEGAL TO HAVE ARD
)@@G@@ COMMON BLOCK AND A     @ @@@@ VARIABLE WITH THE SAME NAME. @[@@@@      RE
)@@G@@@F@@@@       THE <VARI> ARE VARIABLES, POSSIBLY WITH DIMENSION INFORMA- RF
)@@G@@@F@@@@ TION, TO BE STORED IN THE COMMON BLOCK.  IF <NAME>, THE NAME OF  RG
)@@G@@@F@@@@ THE BLOCK, IS OMITTED OR IS BLANK, THE NAME 'BLANK$COMMON' IS    RH
)@@G@@@E@@@@ FILLED IN FOR BOOKKEEPING PURPOSES BY THE COLLECTOR.  IT IS@C@@@@RI
)@@G@@ OBVIOUSLY ILLEGAL TO USE THIS NAME DIRECTLY.   @[@@@@      @F@@@@      RJ
)@@G@@ WHEN AN OBJECT PROGRAM IS COLLECTED, ALL BLOCKS WITH THE   @G@@@@ SAME RK
)@@G@@NAME ARE ASSIGNED THE SAME STORAGE, THE TOTAL AMOUNT ASSIGNED     @F@@@@RL
)@@G@@ WILL BE THE MAXIMUM OF THE BLOCK SIZES.  THERE ARE NO SPECIAL    @F@@@@RM
)@@G@@ CONSIDERATIONS FOR DOUBLE-PRECISION OR COMPLEX VARIABLES OTHER   @F@@@@RN
)@@G@@ THAN REMEMBERING THAT EACH IS ASSIGNED TWO WORDS OF CORE STORAGE.@G@@@@RO
)@@G@@ SOME COMPUTERS REQUIRE THAT THE CORE ADDRESS OF A DOUBLE-PRECISION     RP
)@@G@@@F@@@@ OR COMPLEX OPERAND BE AN EVEN NUMBER; NO SUCH RESTRICTION EXISTS RQ
)@@G@@@#@@@@ ON THE 1108.     @[@@@@      @^@@@@               EXAMPLES:@[@@@@RR
)@@G@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)   RS
)@@G@@       9-  6@[@@@@      @[@@@@      @[@@@@      @^@@@@               ===RT
)@@G@@======@[@@@@      @]@@@@ (FORTRAN): @#@@@@       PROGRAM 1--@B@@@@      RU
)@@G@@         COMMON /ABC/BLOCK(25),X(75)@#@@@@       PROGRAM 2--@B@@@@      RV
)@@G@@         DIMENSION PP(75),RAIL(25)  @A@@@@               COMMON /ABC/ PPRW
)@@G@@,RAIL @[@@@@      @]@@@@ (MAD):     @#@@@@       PROGRAM 1--@D@@@@      RX
)@@G@@         PROGRAM COMMON /ABC/BLOCK(25),X(75)    @#@@@@       PROGRAM 2--RY
)@@G@@@B@@@@               PROGRAM COMMON /ABC/PP,RAIL@B@@@@               DIMRZ
)@@G@@ENSION PP(75),RAIL(25)  @[@@@@      @F@@@@       THIS CONSTRUCTION WILL SA
)@@G@@CAUSE A COMMON BLOCK NAMED 'ABC' TO @F@@@@ BE GENERATED.  IF THE 'Z' OPTSB
)@@G@@ION IS IN EFFECT, THE BLOCK WILL    @F@@@@ CONTAIN 102 WORDS, IF THE 'Z'SC
)@@G@@ OPTION IS NOT IN EFFECT, IT WILL   @F@@@@ CONTAIN 100 WORDS.  AN EFFECTSD
)@@G@@IVE EQUIVALENCE IS SET UP BETWEEN   @F@@@@ PP(1) AND BLOCK(1), AND BETWESE
)@@G@@EN X(1) AND PP(26).  NOTICE THAT    @C@@@@ NAMES AND EVEN LENGTHS DO NOTSF
)@@G@@ HAVE TO MATCH.   @[@@@@      @C@@@@  9. 1. 4.   THE 'EXTERNAL' STATEMENSG
)@@G@@T (FORTRAN) @[@@@@      @F@@@@       OCCASIONALLY IT IS DESIRED TO REFERSH
)@@G@@ENCE A FUNCTION NAME,   @E@@@@ RATHER THAN THE FUNCTION ITSELF, AS PER SSI
)@@G@@ECTION 3.2.1.6,   @F@@@@ 'FUNCTION-NAME CONSTANTS'.  A FORTRAN FUNCTION SJ
)@@G@@NAME IS DISTIN-   @F@@@@ GUISHED FROM AN ORDINARY VARIABLE VIA THE 'EXTESK
)@@G@@RNAL' STATEMENT:  @[@@@@      @C@@@@       EXTERNAL <NAME1>,<NAME2>,...,SL
)@@G@@<NAMEN>     @[@@@@      @F@@@@ WILL DECLARE <NAME1>,<NAME2>, ETC., TO BESM
)@@G@@ EXTERNAL.  THE COMPILER@A@@@@ ACTION ON EACH LIST ITEM <NAME> IS @[@@@@SN
)@@G@@      @F@@@@       1)  SUPPRESS LOCAL ASSIGNMENT OF STORAGE TO <NAME>.  SO
)@@G@@(I.E. @A@@@@           STORAGE IS 'EXTERNAL')   @[@@@@      @F@@@@      SP
)@@G@@ 2)  DECLARE <NAME> TO BE OF FUNCTION-NAME MODE.  AS AN     @D@@@@      SQ
)@@G@@     OPERAND, <NAME> IS EFFECTIVELY A CONSTANT. @[@@@@      @G@@@@      SR
)@@G@@ THE 'EXTERNAL' STATEMENT, IF APPLIED TO A GENERIC OR INTRIN-     @E@@@@SS
)@@G@@ SIC FUNCTION, WILL BE TREATED AS AN 'ABNORMAL' DECLARATION @G@@@@ (SECTST
)@@G@@ION 8.6.4.1).  IN MAD, THERE IS NO NEED FOR THE EXTERNAL DECLARA- @F@@@@SU
)@@G@@ TION:  THE PRESENCE OF THE SUFFIXED PERIOD ON FUNCTION NAMES IS  @F@@@@SV
)@@G@@ SUFFICIENT TO DISTINGUISH A FUNCTION NAME FROM A VARIABLE NAME.  @F@@@@SW
)@@G@@ THIS CONSTRUCTION IS ALSO LEGAL IN FORTRAN; UPON RECOGNITION OF A@F@@@@SX
)@@G@@ NAME FOLLOWED BY A PERIOD, THE SYNTAX SCANNER DOES NOT BOTHER TO @E@@@@SY
)@@G@@ CHECK WHETHER IT IS COMPILING A MAD OR FORTRAN PROGRAM.    @[@@@@*****^SZ
)@@G@@@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         TA
)@@G@@ 9-  7@[@@@@      @[@@@@      @[@@@@      @^@@@@               EXAMPLES:TB
)@@G@@@^@@@@               =========@[@@@@      @ @@@@       EXTERNAL SIN,COS,TC
)@@G@@TAN   @ @@@@       EXTERNAL FOFX,FOFX^X   @^@@@@       EXTERNAL A,B     TD
)@@G@@@^@@@@       EXTERNAL MMM     @[@@@@      @[@@@@*****^@G@@@@A GUIDE TO PTE
)@@G@@ROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          9-  8@[@@@@      TF
)@@G@@@[@@@@      @[@@@@      @[@@@@      @[@@@@      @ @@@@  9. 2.   MODE DECTG
)@@G@@LARATIONS   @[@@@@      @[@@@@      @G@@@@       MODE-DECLARATION STATEMTH
)@@G@@ENTS SET MODES OF ALL OPERANDS EXCEPT     @F@@@@ CONSTANTS.  THERE ARE TTI
)@@G@@WO TYPES OF MODE DECLARATIONS:  GLOBAL AND@]@@@@ ITEMIZED.  @[@@@@      TJ
)@@G@@@B@@@@  9. 2. 1.   GLOBAL MODE DECLARATIONS     @[@@@@      @G@@@@      TK
)@@G@@ ALL OPERANDS MUST HAVE AN ASSIGNED MODE.  THOSE OPERANDS NOT     @F@@@@TL
)@@G@@ MENTIONED EXPLICITLY IN AN ITEMIZED MODE DECLARATION ARE ASSIGNED@F@@@@TM
)@@G@@ AN IMPLICIT MODE BASED UPON GLOBAL MODE DECLARATIONS CUMULATIVELY@B@@@@TN
)@@G@@ IN EFFECT AT THE END OF THE PROGRAM.     @[@@@@      @F@@@@       IN MATO
)@@G@@D, ALL MODE-DECLARABLE OPERANDS (VARIABLES, FUNCTION  @G@@@@ PARAMETERS,TP
)@@G@@ AND FUNCTION REFERENCES) ARE ASSUMED TO BE IN FLOATING     @F@@@@ POINTTQ
)@@G@@ UNLESS OTHERWISE DECLARED.  IN FORTRAN, THOSE OPERANDS     @F@@@@ BEGINTR
)@@G@@NING WITH THE LETTERS I,J,K,L,M, OR N ARE ASSUMED TO BE OF  @E@@@@ INTEGTS
)@@G@@ER MODE; ALL OTHERS ARE ASSUMED TO BE FLOATING POINT. @[@@@@      @F@@@@TT
)@@G@@       THE GLOBAL MODE ASSUMPTIONS CAN BE CHANGED:  THE GENERAL   @]@@@@TU
)@@G@@ FORM IS    @[@@@@      @]@@@@ (FORTRAN): @F@@@@       IMPLICIT <MODE-NATV
)@@G@@ME>(<F1>-<L1>,<F2>-<L2>)<MODE-NAME>(...)  @[@@@@      @]@@@@ (MAD):     TW
)@@G@@@A@@@@       NORMAL MODE IS <MODE-NAME>   @[@@@@      @B@@@@       WHERETX
)@@G@@ <MODE-NAME> IS ONE OF THE SET@[@@@@      @A@@@@       INTEGER          TY
)@@G@@     REAL   @C@@@@       FLOATING POINT        DOUBLE PRECISION   @A@@@@TZ
)@@G@@       COMPLEX               BOOLEAN@C@@@@       LOGICAL               SUA
)@@G@@TATEMENT LABEL    @^@@@@       FUNCTION NAME    @[@@@@      @E@@@@ <F1> UB
)@@G@@<L1>, ETC. ARE LETTERS DENOTING IMPLICIT RANGE.  THUS @[@@@@      @]@@@@UC
)@@G@@ (FORTRAN): @F@@@@       IMPLICIT REAL (A-H,S-Z),INTEGER(I-O),DOUBLE PREUD
)@@G@@CISION(P-R) @[@@@@      @G@@@@       WILL SPECIFY THAT ANY UNDECLARED OPUE
)@@G@@ERANDS BEGINNING WITH THE     @F@@@@ LETTERS A THROUGH H OR S THROUGH Z UF
)@@G@@WILL BE AUTOMATICALLY TYPED   @G@@@@ REAL, THOSE BEGINNING WITH I THROUGUG
)@@G@@H O WILL BE AUTOMATICALLY TYPED     @F@@@@ INTEGER, AND THOSE BEGINNING UH
)@@G@@WITH THE LETTERS P THROUGH R WILL BE@^@@@@ TYPED DOUBLE PRECISION.@[@@@@UI
)@@G@@      @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971UJ
)@@G@@ VERSION)          9-  9@[@@@@      @[@@@@      @[@@@@      @F@@@@      UK
)@@G@@ IN MAD, THERE IS NO WAY TO SET A PARTIAL GLOBAL MODE (AS   @F@@@@ ABOVEUL
)@@G@@), ALL LETTERS A TO Z ARE ASSIGNED THE SAME IMPLICIT MODE.  @#@@@@ FOR EUM
)@@G@@XAMPLE:     @[@@@@      @]@@@@ (MAD):     @ @@@@       NORMAL MODE IS INUN
)@@G@@TEGER @[@@@@      @F@@@@       WILL CAUSE ALL UNDECLARED OPERANDS TO BE UO
)@@G@@TYPED INTEGER.    @[@@@@      @B@@@@  9. 2. 2.   ITEMIZED MODE DECLARATIUP
)@@G@@ONS   @[@@@@      @F@@@@       SPECIFIC OPERANDS CAN BE DECLARED INDEPENUQ
)@@G@@DENTLY OF ANY     @B@@@@ GLOBAL MODE DECLARATIONS.  THE FORM IS   @[@@@@UR
)@@G@@      @D@@@@       <MODE-NAME> <VAR1>,<VAR2>,<VAR3>,...,<VARN>    @[@@@@US
)@@G@@      @B@@@@       IN THIS CASE, <MODE-NAME> MAY BE   @B@@@@       FORTRUT
)@@G@@AN                         MAD@B@@@@       =======                      UU
)@@G@@   ===@[@@@@      @C@@@@       INTEGER                         INTEGER  UV
)@@G@@@D@@@@       REAL                            FLOATING POINT @E@@@@      UW
)@@G@@ DOUBLE PRECISION                DOUBLE PRECISION     @C@@@@       COMPLUX
)@@G@@EX                         COMPLEX  @C@@@@       LOGICAL                UY
)@@G@@         BOOLEAN  @D@@@@                                       FUNCTION UZ
)@@G@@NAME  @D@@@@                                       STATEMENT LABEL@[@@@@VA
)@@G@@      @[@@@@      @F@@@@       <VAR-I> IS A VARIABLE, POSSIBLY WITH DIMEVB
)@@G@@NSION INFORMATION,@F@@@@ A FUNCTION PARAMETER, POSSIBLY WITH DIMENSION IVC
)@@G@@NFORMATION, OR A  @G@@@@ FUNCTION NAME.  AN ITEMIZED MODE DECLARATION CAVD
)@@G@@N TAKE THE PLACE OF     @F@@@@ A DIMENSION STATEMENT.  SPECIFYING A FUNCVE
)@@G@@TION NAME IN A MODE     @F@@@@ DECLARATION SPECIFIES THE MODE OF THE VALVF
)@@G@@UE RETURNED BY THE FUNC-@G@@@@ TION.  A MODE DECLARATION IS MEANINGLESS VG
)@@G@@FOR A FUNCTION WHICH DOES     @F@@@@ IF A MODE DECLARATION REFERENCES ANVH
)@@G@@ IMPLICIT OR GENERIC FUNCTION @F@@@@ NAME, THEN THAT NAME IS REMOVED FROVI
)@@G@@M THE TABLE; IT IS NO LONGER  @F@@@@ TREATED AS A GENERIC OR INTRINSIC FVJ
)@@G@@UNCTION.  THE NAME CAN ALSO BE@F@@@@ REMOVED FROM THE TABLE VIA THE 'EXTVK
)@@G@@ERNAL' OR 'ABNORMAL' DECLARA- @G@@@@ TIONS, OR BY NAMING AN INTERNAL SUBVL
)@@G@@ROUTINE ENTRY POINT THE SAME AS     @F@@@@ THAT OF AN INTRINSIC OR GENERVM
)@@G@@IC FUNCTION.  IN ANY CASE, THE DEC- @D@@@@ LARATION MUST PRECEDE THE FIRVN
)@@G@@ST USE OF THE FUNCTION. @[@@@@      @A@@@@  9. 2. 3.   MODE CORRESPONDENVO
)@@G@@CE    @[@@@@      @F@@@@       THE RALPH COMPILER CAREFULLY KEEPS TRACK VP
)@@G@@OF ALL OPERAND    @F@@@@ MODES WITHIN A GIVEN COMPILATION AND PERFORMS AVQ
)@@G@@LL NECESSARY CON- @F@@@@ VERSIONS IF MIXED MODES ARE USED.  IT CANNOT, HVR
)@@G@@OWEVER, REMEMBER  @F@@@@ MODES FROM ONE SUBROUTINE TO THE NEXT; THE PROGVS
)@@G@@RAMMER MUST BE    @F@@@@ CAREFUL TO ENSURE THAT MODES OF FUNCTION PARAMEVT
)@@G@@TERS CORRESPOND TO@[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DVU
)@@G@@ECEMBER 1971 VERSION)          9- 10@[@@@@      @[@@@@      @[@@@@      VV
)@@G@@@F@@@@ THE MODES OF THE CALLING ARGUMENTS; THAT THE MODE DECLARED FOR A VW
)@@G@@@F@@@@ FUNCTION IS THE SAME AS THE MODE DECLARED WITHIN THAT FUNCTION,  VX
)@@G@@@F@@@@ AND THAT THE MODES OF VARIABLES IN A COMMON BLOCK ARE CONSISTENT.VY
)@@G@@@F@@@@ UNPREDICTABLY HIDEOUS THINGS WILL HAPPEN TO COMPUTED VALUES IF   VZ
)@@G@@@A@@@@ MODES DO NOT CORRESPOND EXACTLY.   @[@@@@*****^@G@@@@A GUIDE TO PWA
)@@G@@ROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          9- 11@[@@@@      WB
)@@G@@@[@@@@      @[@@@@      @[@@@@      @[@@@@      @ @@@@  9. 3.   DATA INTWC
)@@G@@RODUCTION   @[@@@@      @[@@@@      @F@@@@       NORMALLY, WHEN A PROGRAWD
)@@G@@M BEGINS EXECUTION, THE VALUE OF ALL@G@@@@ VARIABLES WILL BE ZERO.  IT IWE
)@@G@@S OFTEN USEFUL TO PRESET THE VALUE OF     @F@@@@ A VARIABLE TO SOME NON-WF
)@@G@@ZERO VALUE.  FOR EXAMPLE, AN ENTIRE ARRAY @G@@@@ COULD BE PRESET TO CONTWG
)@@G@@AIN MOLECULAR WEIGHTS, OR A TABLE, A RACING     @F@@@@ FORM, OR ANYTHINGWH
)@@G@@ ELSE.  IN MAD, BECAUSE INPUT-OUTPUT FORMATS ARE@G@@@@ ALWAYS VARIABLES,WI
)@@G@@ THE MAD DATA-INTRODUCTION STATEMENT MUST BE USED     @D@@@@ UNLESS FORMWJ
)@@G@@ATS ARE TO BE READ IN AT EXECUTION TIME.  @[@@@@      @C@@@@  9. 3. 1.  WK
)@@G@@ THE 'DATA' STATEMENT (FORTRAN)     @[@@@@      @G@@@@       THE 'DATA' WL
)@@G@@STATEMENT IS USED TO SPECIFY THE INITIAL VALUE(S)     @F@@@@ OF A VARIABWM
)@@G@@LE OR VARIABLES.  THE BASIC NON-ITERATIVE FORM IS:    @[@@@@      @E@@@@WN
)@@G@@       DATA <VAR1>/<VAL1>/,<VAR2>,<VAR3>/<VAL2>,<VAL3>/,... @[@@@@      WO
)@@G@@@F@@@@       THE VARIABLE <VAR1> WILL BE ASSIGNED THE INITIAL VALUE     WP
)@@G@@@F@@@@ <VALUE-1>.  THE VARIABLE <VAR-2> WILL BE ASSIGNED THE INITIAL    WQ
)@@G@@@^@@@@ VALUE <VAL2>, ETC.     @[@@@@      @F@@@@       A STRING OF THE FWR
)@@G@@ORM  <VAR1>,<VAR2>,...,<VARN> IS CALLED A @E@@@@ 'VARIABLE GROUP', OR 'VWS
)@@G@@ARIABLE LIST'; A STRING OF THE FORM @F@@@@ <VAL1>,<VAL2>,...,<VALN> IS CWT
)@@G@@ALLED A 'LITERAL GROUP' OR 'LITERAL @F@@@@ LIST', AND THE INDIVIDUAL <VAWU
)@@G@@LUE-I> ARE CALLED 'DATA LITERALS'.  @F@@@@ ALL DATA LITERALS MUST BE CONWV
)@@G@@STANTS OR CONSTANT PARAMETERS (SEE  @F@@@@ SECTION 8.4).  THERE MUST BE WW
)@@G@@A 1-TO-1 CORRESPONDENCE BETWEEN     @G@@@@ ELEMENTS IN A VARIABLE GROUP WX
)@@G@@AND THE ELEMENTS IN THE CORRESPONDING     @F@@@@ LITERAL GROUP.  THE LITWY
)@@G@@ERAL GROUP REFERRING TO A GIVEN VARIABLE  @F@@@@ GROUP IS ENCLOSED IN SLWZ
)@@G@@ASHES (/) AND PLACED IMMEDIATELY AFTER THE@B@@@@ VARIABLE, WITH NO SEPARXA
)@@G@@ATING PUNCTUATION:@[@@@@      @D@@@@       DATA <VARIABLE GROUP>/<LITERAXB
)@@G@@L GROUP>/, ETC.   @[@@@@      @F@@@@       NOTICE THE COMMA, OFTEN FORGOXC
)@@G@@TTEN, SEPARATING THE FIRST    @C@@@@ LITERAL GROUP FROM THE SECOND VARIAXD
)@@G@@BLE GROUP.  @[@@@@      @C@@@@  9. 3. 1. 1.   REPETITION OF DATA LITERALXE
)@@G@@S     @[@@@@      @F@@@@       IF IT IS DESIRED TO INCLUDE SEVERAL CONSEXF
)@@G@@CUTIVE DATA LI-   @F@@@@ TERALS WITH THE SAME VALUE, THEN A CONSTANT MULXG
)@@G@@TIPLIER CAN BE    @F@@@@ PLACED IN FRONT OF ONE, CAUSING IT TO BE REPEATXH
)@@G@@ED:  THE CONSTRUC-@[@@@@ TION @[@@@@      @^@@@@               N*<VALUE>XI
)@@G@@@[@@@@      @F@@@@       WHEN USED IN A LITERAL GROUP IS EQUIVALENT TO TXJ
)@@G@@HE CONSTRUC-@[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBEXK
)@@G@@R 1971 VERSION)          9- 12@[@@@@      @[@@@@      @[@@@@      @[@@@@XL
)@@G@@ TION @[@@@@      @D@@@@               <VALUE>,<VALUE>,...,<VALUE>  (N TXM
)@@G@@ERMS) @[@@@@      @F@@@@       IF N IS AN INTEGER CONSTANT OR PARAMETER XN
)@@G@@WITH INTEGER CON- @#@@@@ STANT VALUE.     @[@@@@      @[@@@@      @^@@@@XO
)@@G@@               EXAMPLES:@^@@@@               =========@[@@@@      @A@@@@XP
)@@G@@       DATA X/0.0/, Y/1.0/, Z/2.0/  @[@@@@      @B@@@@       DATA A,B,GRXQ
)@@G@@X,PPP/2.0,4.1,4.1,4.1/  @[@@@@      @C@@@@       DATA AX,BX,CX/3*4.8/, PXR
)@@G@@,Q,R,S/4*2.0/     @[@@@@      @C@@@@       DATA  IH/'ABC'/, JP,LP,MP/2HJXS
)@@G@@P,2HLP,2HMP/@[@@@@      @[@@@@      @E@@@@  9. 3. 1. 2.   MODE CORRESPONXT
)@@G@@DENCE IN 'DATA' STATEMENTS    @[@@@@      @G@@@@       THE MODE OF A DATXU
)@@G@@A LITERAL MUST MATCH THE MODE OF THE CORRES-    @G@@@@ PONDING VARIABLE.XV
)@@G@@  IF A MODE DOES NOT MATCH, NO CONVERSION WILL BE     @^@@@@ MADE:  THE XW
)@@G@@STATEMENT   @[@@@@      @ @@@@               DATA I/2.0/    @[@@@@      XX
)@@G@@@E@@@@       WILL CAUSE THE INTEGER VARIABLE I TO BE ASSIGNED THE @G@@@@XY
)@@G@@ FLOATING-POINT VALUE 2.0, WITH POSSIBLY DISASTROUS RESULTS.  RALPH     XZ
)@@G@@@F@@@@ PERMITS MISMATCHED MODES IN DATA STATEMENTS, BUT ISSUES A WARNINGYA
)@@G@@@]@@@@ MESSAGE.   @[@@@@      @[@@@@      @B@@@@  9. 3. 1. 3.   ITERATEDYB
)@@G@@ VARIABLE LISTS   @[@@@@      @F@@@@       WHEN INTRODUCING DATA INTO ANYC
)@@G@@ ARRAY, IT IS CONVENIENT TO BE@F@@@@ ABLE TO SPECIFY ITERATION.  THE FORYD
)@@G@@MAT OF THE FORTRAN 'DO' STATE-@E@@@@ MENT IS USED, ALTHOUGH IT MUST BE EYE
)@@G@@NCLOSED IN PARENTHESES: @[@@@@      @E@@@@       (<VARIABLE LIST>,<INDEXYF
)@@G@@>=<START>,<STOP>,<INCREMENT>) @[@@@@      @F@@@@       THE VALUES <STARTYG
)@@G@@>, <STOP>, AND <INCREMENT> MUST BE EXPRES-@G@@@@ SIONS INVOLVING ONLY INYH
)@@G@@TEGER CONSTANTS OR INTEGER CONSTANT PARAME-     @F@@@@ TERS.  <INDEX> MUYI
)@@G@@ST BE AN UNSUBSCRIPTED INTEGER VARIABLE, WHICH  @F@@@@ WILL BE TEMPORARIYJ
)@@G@@LY (FOR THE PURPOSES OF THE CURRENT STATEMENT)  @F@@@@ TREATED AS A PARAYK
)@@G@@METER OF INTEGER VALUE.  THE <VARIABLE LIST>,   @E@@@@ WHICH MAY ITSELF YL
)@@G@@BE AN ITERATED VARIABLE LIST (PROVIDED, OF@G@@@@ COURSE, THAT IT USES A YM
)@@G@@DIFFERENT VARIABLE FOR ITS <INDEX> THAN THE     @G@@@@ ONE USED IN THE OYN
)@@G@@UTER LOOP) MAY CONTAIN VARIABLES WITH A SUBSCRIPT     @[@@@@*****^@G@@@@YO
)@@G@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          9- 13YP
)@@G@@@[@@@@      @[@@@@      @[@@@@      @F@@@@ INCLUDING <INDEX>.  THE ENTIRYQ
)@@G@@E VARIABLE LIST WILL BE EFFECTIVELY @]@@@@ REPEATED   @[@@@@      @B@@@@YR
)@@G@@       (<STOP> - <START>)/<INCREMENT> + 1 @[@@@@      @F@@@@       TIMESYS
)@@G@@, VARYING <INDEX> AS INDICATED, FROM <START> TO <STOP>@ @@@@ IN STEPS OFYT
)@@G@@ <INCREMENT>.     @[@@@@      @[@@@@      @^@@@@               EXAMPLES:YU
)@@G@@@^@@@@               =========@[@@@@      @A@@@@       DATA (X(I),I=1,10YV
)@@G@@0)/100*0.0/ @[@@@@      @F@@@@       DATA ((A(I,J),B(I,J),J=1,3),I=1,20)YW
)@@G@@/20*1.,20*2.,20*3./     @[@@@@      @[@@@@      @B@@@@  9. 3. 1. 4.   IMYX
)@@G@@PLIED-ITERATIVE LISTS   @[@@@@      @F@@@@       IF THE NAME OF A DIMENSYY
)@@G@@IONED ARRAY OCCURS IN A VARIABLE    @F@@@@ GROUP, FREE-STANDING, WITH NOYZ
)@@G@@ SUBSCRIPT, THEN IT IS ASSUMED TO BE@G@@@@ A SHORT-FORM NOTATION FOR AN ZA
)@@G@@ITERATION INVOLVING THE ENTIRE ARRAY:     @#@@@@ THE SEQUENCE     @[@@@@ZB
)@@G@@      @^@@@@       DIMENSION B(30)  @^@@@@       DATA B/30*4./    @[@@@@ZC
)@@G@@      @ @@@@ IS EQUIVALENT TO THE SEQUENCE@[@@@@      @^@@@@       DIMENZD
)@@G@@SION B(30)  @A@@@@       DATA (B(I),I=1,30)/30*4./    @[@@@@      @[@@@@ZE
)@@G@@      @B@@@@  9. 3. 1. 5.   HOLLERITH-STRING DATA     @[@@@@      @G@@@@ZF
)@@G@@       IF IT IS DESIRED TO ENTER A CHARACTER STRING INTO SUCCESSIVE     ZG
)@@G@@@F@@@@ POSITIONS IN AN ARRAY, THE STRING WILL BE GROUPED TO 6 CHARACTERSZH
)@@G@@@]@@@@ PER WORD:  @[@@@@      @E@@@@       DATA (ST(I),I=1,5)/'THIS IS AZI
)@@G@@ CHARACTER STRING'/     @[@@@@      @E@@@@ IS EQUIVALENT TO ALL THREE OFZJ
)@@G@@ THE FOLLOWING CONSTRUCTIONS: @[@@@@      @G@@@@       DATA (ST(I),I=1,5ZK
)@@G@@)/'THIS I','S A CH','ARACTE','R STRI','NG'/     @[@@@@      @C@@@@      ZL
)@@G@@ DATA ST/26HTHIS IS A CHARACTER STRING/   @[@@@@      @E@@@@       DATA ZM
)@@G@@ST/6HTHIS I,6HS A CH,6HARACTE,6HR STRI,2HNG/    @[@@@@      @C@@@@  9. 3ZN
)@@G@@. 2.   THE 'VECTOR VALUES' STATEMENT (MAD)@[@@@@*****^@G@@@@A GUIDE TO PZO
)@@G@@ROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          9- 14@[@@@@      ZP
)@@G@@@[@@@@      @[@@@@      @[@@@@      @F@@@@       IN MAD, THE 'VECTOR VALZQ
)@@G@@UES' STATEMENT IS USED TO ASSIGN AN @G@@@@ INITIAL VALUE TO THE ELEMENTSZR
)@@G@@ OF A VECTOR, OR ARRAY.  (SEE SECTION     @F@@@@ 3.2.2 FOR A DISCUSSION ZS
)@@G@@OF THE TERMS 'VECTOR' AND 'ARRAY', ETC.). @F@@@@ THE 'VECTOR VALUES' STAZT
)@@G@@TEMENT WILL AUTOMATICALLY DIMENSION THE   @G@@@@ VARIABLE INVOLVED, IF NZU
)@@G@@ECESSARY.  THERE ARE TWO BASIC FORMS OF THE     @F@@@@ 'VECTOR VALUES' SZV
)@@G@@TATEMENT:  BLOCK FORM AND SEQUENTIAL FORM.  BOTH@F@@@@ FORMS AUTOMATICALZW
)@@G@@LY ASSIGN THE MODE OF THE REFERENCED VARIABLE TO@A@@@@ MATCH THE MODE OFZX
)@@G@@ THE PRESET VALUE.@[@@@@      @B@@@@  9. 3. 2. 1.   BLOCK-FORM VECTOR VAZY
)@@G@@LUES  @[@@@@      @F@@@@       THE BLOCK-FORM VECTOR VALUES STATEMENT ISZZ
)@@G@@ USED TO ASSIGN A @F@@@@ SINGLE VALUE TO A BLOCK OF CONSECUTIVE VARIABLEAA
)@@G@@S:  THE GENERAL   @]@@@@ FORM IS    @[@@@@      @F@@@@       VECTOR VALUAB
)@@G@@ES <VARIABLE(SUB1)>...<VARIABLE(SUB2)>=<VALUE>  @[@@@@      @D@@@@ THIS AC
)@@G@@STATEMENT WILL PERFORM THE FOLLOWING ACTIONS:   @[@@@@      @C@@@@      AD
)@@G@@ 1)  DIMENSION <VARIABLE> AT SIZE 'SUB2'  @[@@@@      @F@@@@       2)  DAE
)@@G@@ECLARE <VARIABLE> TO BE OF THE SAME MODE AS <VALUE>   @[@@@@      @G@@@@AF
)@@G@@       3)  ASSIGN THE INITIAL VALUE <VALUE> TO EACH OF THE CELLS IN     AG
)@@G@@@^@@@@            THE BLOCK.  @[@@@@      @F@@@@       THE '...' NOTATIOAH
)@@G@@N IS A 'BLOCK OPERATOR', AND MAY ALSO BE  @F@@@@ PUNCHED AS ',...,'.  ITAI
)@@G@@ MEANS 'EVERYTHING BETWEEN' AND ASSUMES A @F@@@@ STEP OF 1.  <VALUE> MUSAJ
)@@G@@T BE A CONSTANT OR CONSTANT PARAMETER.    @[@@@@      @^@@@@            AK
)@@G@@   EXAMPLES:@^@@@@               =========@[@@@@      @B@@@@       VECTOAL
)@@G@@R VALUES X(0)...X(1000) = 1.0 @[@@@@      @C@@@@       VECTOR VALUES P(0AM
)@@G@@)...P(50) = (2.,5.)     @[@@@@      @D@@@@       VECTOR VALUES LINE(20).AN
)@@G@@..LINE(60) = $. . . $   @[@@@@      @[@@@@      @C@@@@  9. 3. 2. 2.   SEAO
)@@G@@QUENTIAL-FORM VECTOR VALUES   @[@@@@      @F@@@@       THE SEQUENTIAL-FOAP
)@@G@@RM VECTOR VALUES STATEMENT IS USED TO     @G@@@@ ASSIGN DIFFERENT VALUESAQ
)@@G@@ TO SEQUENTIAL CORE CELLS IN AN ARRAY.  THE     @#@@@@ GENERAL FORM IS  AR
)@@G@@@[@@@@      @F@@@@  VECTOR VALUES <VARIABLE(SUB)> = <VAL-1>,<VAL-2>,...,AS
)@@G@@<VAL-N>     @[@@@@      @E@@@@       THIS STATEMENT WILL PERFORM THE FOLAT
)@@G@@LOWING ACTIONS.   @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DAU
)@@G@@ECEMBER 1971 VERSION)          9- 15@[@@@@      @[@@@@      @[@@@@      AV
)@@G@@@[@@@@      @C@@@@       1)  DIMENSION <VARIABLE> AT SIZE SUB+N-1 @[@@@@AW
)@@G@@      @F@@@@       2)  DECLARE <VARIABLE> TO BE OF THE SAME MODE AS <VALAX
)@@G@@UE>.  @[@@@@      @C@@@@       3)  ASSIGN INITIAL VALUES AS FOLLOWS:    AY
)@@G@@@B@@@@               <VAL-1> TO <VARIABLE(SUB)> @C@@@@               <VAAZ
)@@G@@L-2> TO <VARIABLE(SUB+1)>     @#@@@@               .  @#@@@@            BA
)@@G@@   .  @#@@@@               .  @C@@@@               <VAL-N> TO <VARIABLE(BB
)@@G@@SUB+N-1)>   @[@@@@      @G@@@@       FOR THE PURPOSES OF THE SEQUENTIAL-BC
)@@G@@FORM VECTOR VALUES STATE-     @F@@@@ MENT, AN ALPHABETIC CONSTANT IS CONBD
)@@G@@SIDERED TO BE A STRING OF     @E@@@@ 6-CHARACTER ALPHABETIC CONSTANTS SEBE
)@@G@@PARATED BY COMMAS:  FOR @^@@@@ EXAMPLE, THE STATEMENT @[@@@@      @D@@@@BF
)@@G@@       VECTOR VALUES LINE = $H,,,THIS IS A HEADING$   @[@@@@      @A@@@@BG
)@@G@@ IS EQUIVALENT TO THE STATEMENT     @E@@@@       VECTOR VALUES LINE = $HBH
)@@G@@,,,TH$,$IS IS $,$A HEAD$,$ING$@[@@@@      @F@@@@       AN ALPHABETIC CONBI
)@@G@@STANT IS CONSIDERED TO BE OF TYPE INTEGER @B@@@@ WHEN USED IN A VECTOR VBJ
)@@G@@ALUES STATEMENT.  @[@@@@      @C@@@@  9. 3. 2. 3.   THE UNDIMENSIONED DIBK
)@@G@@MINUTIVE    @[@@@@      @G@@@@       WHEN PRESETTING UNDIMENSIONED VARIABL
)@@G@@BLES WITH A VECTOR VALUES     @A@@@@ STATEMENT, ONE SIMPLY PUNCHES:     BM
)@@G@@@[@@@@      @B@@@@       VECTOR VALUES <VARIABLE> = <VALUE> @[@@@@      BN
)@@G@@@G@@@@       <VARIABLE> WILL NOT BE DIMENSIONED.  IT WILL BE ASSIGNED THBO
)@@G@@E     @D@@@@ MODE OF <VALUE> AND GIVEN THE INITIAL VALUE <VALUE>. @[@@@@BP
)@@G@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)   BQ
)@@G@@       9- 16@[@@@@      @[@@@@      @[@@@@      @[@@@@      @[@@@@      BR
)@@G@@@A@@@@  9. 4.   THE 'PARAMETER' STATEMENT @[@@@@      @[@@@@      @G@@@@BS
)@@G@@       THE 'PARAMETER' STATEMENT IS USED TO REDEFINE THE MEANING OF     BT
)@@G@@@F@@@@ A SYMBOL.  THIS REDEFINITION TAKES PLACE AT COMPILATION TIME, ANDBU
)@@G@@@F@@@@ THE REDEFINITION IS KEPT UNTIL NULLIFIED.  THE SYMBOL IS VALID INBV
)@@G@@@F@@@@ ANY CONTEXT WHERE THE VALUE TO WHICH IT IS PARAMETERIZED WOULD BEBW
)@@G@@@]@@@@ VALID.     @[@@@@      @C@@@@  9. 4. 1.   OPERAND SUBSTITUTION PABX
)@@G@@RAMETERS    @[@@@@      @F@@@@       THE OPERAND SUBSTITUTION PARAMETER BY
)@@G@@STATEMENT HAS THE FORM  @[@@@@      @A@@@@       PARAMETER <NAME>(<OPERABZ
)@@G@@ND>)  @[@@@@      @F@@@@       THIS CONSTRUCTION WILL DEFINE THE SYMBOL CA
)@@G@@<NAME> TO BE THE  @G@@@@ <OPERAND>, PROVIDED THAT <NAME> IS AN UNSUBSCRICB
)@@G@@PTED VARIABLE NAME,     @F@@@@ AND <OPERAND> IS A CONSTANT, FUNCTION NAMCC
)@@G@@E, OR VARIABLE WITH A   @A@@@@ POSSIBLE CONSTANT SUBSCRIPT.  THUS,@[@@@@CD
)@@G@@      @ @@@@       PARAMETER PI(3.14159)  @[@@@@      @F@@@@ DEFINES THECE
)@@G@@ SYMBOL 'PI' TO BE THE CONSTANT  3.14159.  THERE IS NO@F@@@@ VARIABLE NACF
)@@G@@MED 'PI'; IT IS NOW A CONSTANT AS FAR AS THE COMPILER @C@@@@ IS CONCERNECG
)@@G@@D.  PARAMETERS MAY BE OF ANY MODE.  @[@@@@      @F@@@@       AS AN EXAMPCH
)@@G@@LE OF THE POWER OF A SIMPLE PARAMETER STATEMENT,@#@@@@ THE CONSTRUCTION CI
)@@G@@@[@@@@      @ @@@@       PARAMETER NDIM(500)    @[@@@@      @A@@@@ PERMICJ
)@@G@@TS THE DIMENSION CONSTRUCTION @[@@@@      @A@@@@       DIMENSION X(NDIM)CK
)@@G@@,Y(NDIM)    @[@@@@      @F@@@@ AND SO FORTH.  THIS WAY, IF ALL DIMENSIONCL
)@@G@@ STATEMENTS USE PARAME- @G@@@@ TERS, THE SIZE OF THE PROGRAM CAN BE ADJUCM
)@@G@@STED BY CHANGING ONLY THE     @#@@@@ PARAMETER CARDS. @[@@@@      @[@@@@CN
)@@G@@      @F@@@@       ANOTHER USE OF A SIMPLE OPERAND SUBSTITUTION PARAMETECO
)@@G@@R     @F@@@@ STATEMENT IS TO CHANGE THE NAME OF A FUNCTION REFERENCED THCP
)@@G@@ROU-  @F@@@@ GHOUT A PROGRAM.  SUPPOSE THAT A FORTRAN PROGRAM HAS BEEN BCQ
)@@G@@ROUGHT@F@@@@ FROM ANOTHER INSTALLATION, WHERE THE ARCCOSINE ROUTINE IS NCR
)@@G@@AMED  @F@@@@ ARCCOS.  ON THE 1108 UNDER EXEC8 THIS FUNCTION IS NAMED 'ACCS
)@@G@@OS'.  @#@@@@ THE STATEMENT    @[@@@@      @ @@@@       PARAMETER ARCCOS(CT
)@@G@@ACOS) @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971CU
)@@G@@ VERSION)          9- 18@[@@@@      @[@@@@      @[@@@@      @[@@@@      CV
)@@G@@@F@@@@ WILL CAUSE THE COMPILER TO COMPILE A REFERENCE TO 'ACOS' WHEREVERCW
)@@G@@@^@@@@ 'ARCCOS' IS REFERENCED.@[@@@@      @C@@@@  9. 4. 2.   EXPRESSION-CX
)@@G@@ARITHMETIC PARAMETERS   @[@@@@      @F@@@@       A VASTLY MORE POWERFUL CY
)@@G@@FORM OF THE PARAMETER STATEMENT IS  @]@@@@ ALLOWED:   @[@@@@      @E@@@@CZ
)@@G@@       PARAMETER <NAME> = <EXPRESSION INVOLVING CONSTANTS>  @[@@@@      DA
)@@G@@@G@@@@ WHERE <NAME> IS DEFINED AS ABOVE.  <EXPRESSION> MAY BE ANY EXPRESDB
)@@G@@-     @F@@@@ SION IN ANY MODE OR COMBINATION OF MODES WHICH INVOLVES ONLDC
)@@G@@Y     @G@@@@ CONSTANTS, CONSTANT PARAMETERS, AND THE LEGAL OPERATORS.  TDD
)@@G@@HERE IS     @D@@@@ NO LIMIT OF COMPLEXITY OR PARENTHESIS STRUCTURE.     DE
)@@G@@@[@@@@      @[@@@@      @[@@@@      @F@@@@ THE OPERATORS WHICH ARE LEGALDF
)@@G@@ IN 'PARAMETER' STATEMENTS ARE:     @[@@@@      @^@@@@       +       *  DG
)@@G@@     -@ @@@@       /       //      **     @ @@@@       .P.     .LS.    .DH
)@@G@@RS.   @ @@@@       .V.     .A.     .EV.   @ @@@@       .N.     .MIN.   .DI
)@@G@@MAX.  @ @@@@       .MOD.   FLD     .LSC.  @ @@@@       .RSC.   .FLOAT. .DJ
)@@G@@FIX.  @ @@@@       .DBLE.  .CONJ.  .CMPLX.@ @@@@       .ABS.   .NABS.  .DK
)@@G@@SIGN. @]@@@@       .DIM.@[@@@@      @G@@@@       THE DIVISION OPERATOR (DL
)@@G@@/) MAY NOT BE USED WITH AN OPERAND OF     @G@@@@ COMPLEX MODE.  THE EXPODM
)@@G@@NENTIATION OPERATORS (.P.) AND (**) MAY NOT     @F@@@@ BE USED WITH AN EDN
)@@G@@XPONENT OF OTHER THAN INTEGER MODE.  ANY OTHER  @E@@@@ OPERATOR MAY BE UDO
)@@G@@SED WITH ANY MODE FOR WHICH IT IS DEFINED.@[@@@@      @^@@@@            DP
)@@G@@   EXAMPLES:@^@@@@               =========@[@@@@      @^@@@@       PARAMDQ
)@@G@@ETER A(20)  @^@@@@       PARAMETER B=3.0D5@^@@@@       PARAMETER C=A+B  DR
)@@G@@@ @@@@       PARAMETER D=MIN(A,B,C) @ @@@@       PARAMETER E=A+(3.LS.7) DS
)@@G@@@^@@@@       PARAMETER F=(2,5)@A@@@@       PARAMETER G=(F+E)*MOD(A,3)   DT
)@@G@@@A@@@@       PARAMETER H=FLD(0,6,'*')     @ @@@@       PARAMETER ACOS(ARDU
)@@G@@CCOS) @[@@@@      @C@@@@  9. 4. 3.   NULLIFYING A PARAMETER STATEMENT   DV
)@@G@@@[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSIDW
)@@G@@ON)          9- 19@[@@@@      @[@@@@      @[@@@@      @[@@@@      @F@@@@DX
)@@G@@       A PARAMETER STATEMENT CAN BE 'TURNED OFF' VIA THE STATEMENT@[@@@@DY
)@@G@@      @B@@@@               PARAMETER <NAME>(<NAME>)   @[@@@@      @E@@@@DZ
)@@G@@ WHICH REMOVES ANY PREVIOUS PARAMETER DEFINITION FOR <NAME> @[@@@@*****^EA
)@@G@@@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         EB
)@@G@@ 9- 20@[@@@@      @[@@@@      @[@@@@      @[@@@@      @[@@@@      @D@@@@EC
)@@G@@  9. 5.   THE 'DEFINE' STATEMENT.  MACROEXPRESSIONS   @[@@@@      @[@@@@ED
)@@G@@      @F@@@@       A MACROEXPRESSION IS A SKELETAL EXPRESSION WHICH WILLEE
)@@G@@ BE   @E@@@@ FILLED IN PLACE OF ITS NAME WHEREVER THE NAME APPEARS.  FOREF
)@@G@@@G@@@@ EXAMPLE, SUPPOSE THAT A MACROEXPRESSION NAMED 'SUBS' IS DEFINED AEG
)@@G@@S     @]@@@@ FOLLOWS:   @[@@@@      @A@@@@               DEFINE SUBS = AEH
)@@G@@,B,C,D@[@@@@      @G@@@@       THEN ANY OCCURRENCE OF THE SYMBOL 'SUBS' EI
)@@G@@WILL BE REPLACED BY     @ @@@@ THE STRING 'A,B,C,D'.  THUS, @[@@@@      EJ
)@@G@@@D@@@@       XA(SUBS)    WILL BE EXPANDED TO    XA(A,B,C,D) @[@@@@      EK
)@@G@@@A@@@@  9. 5. 1.   SIMPLE MACROEXPRESSIONS@[@@@@      @E@@@@       THE BEL
)@@G@@ASIC FORM OF A MACROEXPRESSION DEFINITION IS    @[@@@@      @C@@@@      EM
)@@G@@         DEFINE <NAME> = <EXPRESSION>     @[@@@@      @G@@@@       WHEREEN
)@@G@@ <NAME> IS ANY LEGAL VARIABLE NAME, AND <EXPRESSION> IS     @F@@@@ NEARLEO
)@@G@@Y ANY CHARACTER COMBINATION.  <EXPRESSION> HAS THE FOLLOWING@#@@@@ CONSTEP
)@@G@@RAINTS.     @[@@@@      @[@@@@      @E@@@@       1)  IT MUST CONTAIN ONLEQ
)@@G@@Y LEGAL OPERANDS AND OPERATORS@[@@@@      @F@@@@       2)  IT MUST CONTAER
)@@G@@IN BALANCED PARENTHESES, BRACKETS, AND    @D@@@@           ALPHABETIC DEES
)@@G@@LIMITERS IF IT CONTAINS ANY.  @[@@@@      @G@@@@       3)  IF IT REFERENET
)@@G@@CES ANOTHER MACROEXPRESSION, THE REFERENCED     @G@@@@           MACROEXEU
)@@G@@PRESSION DEFINITION MUST PRECEDE THIS DEFINITION.     @[@@@@      @[@@@@EV
)@@G@@      @[@@@@      @[@@@@      @[@@@@      @B@@@@  9. 5. 2.   PARAMETRIC EW
)@@G@@MACROEXPRESSIONS  @[@@@@      @F@@@@       A MORE GENERAL FORM OF THE MAEX
)@@G@@CRO-EXPRESSION DEFINITION     @^@@@@ INVOLVES PARAMETERS:   @[@@@@      EY
)@@G@@@F@@@@       DEFINE <NAME>(<PAR-1>,<PAR-2>,...,<PAR-N>)=<EXPRESSION>    EZ
)@@G@@@[@@@@      @F@@@@       THE PAR-I MUST BE UNSUBSCRIPTED VARIABLE NAMES.FA
)@@G@@  <NAME> AND@F@@@@ <EXPRESSION> ARE DEFINED AS ABOVE.  THE EXPANSION OF FB
)@@G@@THIS FORM OF@B@@@@ MACROEXPRESSION PROCEEDS AS FOLLOWS:     @[@@@@*****^FC
)@@G@@@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         FD
)@@G@@ 9- 21@[@@@@      @[@@@@      @[@@@@      @[@@@@      @[@@@@      @F@@@@FE
)@@G@@       1)  THE <EXPRESSION> IS SUBSTITUTED FOR <NAME> IN THE CARD @B@@@@FF
)@@G@@           IMAGE BEING EXPANDED, AS ABOVE.@[@@@@      @F@@@@       2)  EFG
)@@G@@ACH <PAR-I> IS TREATED AS A TEMPORARY MACRO-EXPRESSION@F@@@@           FFH
)@@G@@OR THE CALLING EXPRESSION, AND IS EXPANDED IN THE     @A@@@@           EFI
)@@G@@XPANSION OF <NAME>.     @[@@@@      @[@@@@      @A@@@@       THUS, SUPPOFJ
)@@G@@SE THE DEFINITION @[@@@@      @C@@@@       DEFINE P(A,B,C) = SIN(3.0*B)-FK
)@@G@@A/B+C(A,3)  @[@@@@      @F@@@@ HAS BEEN PROCESSED.  WHEN THE COMPILER ENFL
)@@G@@COUNTERS THE EXPRESSION @[@@@@      @ @@@@       P(2,24.0*SQRT(X+Y),R)  FM
)@@G@@@[@@@@      @E@@@@ IT WILL REPLACE THIS EXPRESSION AS A MACROEXPRESSION FN
)@@G@@WITH  @[@@@@      @E@@@@       SIN(3.0*(24.0*SQRT(X+Y))-2/(24.0*SQRT(X+YFO
)@@G@@)+R(2,3)    @[@@@@      @F@@@@       IF 'R' HAS BEEN DIMENSIONED, R(2,3)FP
)@@G@@ WILL BE TREATED AS A   @E@@@@ SUBSCRIPTED VARIABLE; OTHERWISE IT WILL BFQ
)@@G@@E A FUNCTION CALL.@F@@@@ NOTICE THAT IN EXPANDING EACH PARAMETER AS A TEFR
)@@G@@MPORARY MACROEX-  @F@@@@ PRESSION IN ITS OWN RIGHT, THE COMPILER WILL FIFS
)@@G@@LL IN PARENTHESES @F@@@@ IF NECESSARY TO PRESERVE THE ARITHMETIC PRECEDEFT
)@@G@@NCES.  IF THE     @F@@@@ ENTIRE MACROEXPRESSION IS INVOLVED IN AN EXPRESFU
)@@G@@SION, THE COMPILER@B@@@@ WILL FILL IN PARENTHESES IF NECESSARY.   @[@@@@FV
)@@G@@      @C@@@@  9. 5. 3.   RULES FOR MACROEXPRESSION EXPANSION@[@@@@      FW
)@@G@@@F@@@@       WHEN A MACROEXPRESSION IS EXPANDED AND INSERTED INTO THE   FX
)@@G@@@F@@@@ SOURCE STATEMENT, CERTAIN RULES INVOLVING PUNCTUATION APPLY.     FY
)@@G@@@[@@@@      @F@@@@       1)  IF THE SUBSTITUTION BEING MADE IS A TEMPORAFZ
)@@G@@RY PARAMETER@F@@@@           MACROEXPRESSION EXPANSION, AND THE ITEM BEIGA
)@@G@@NG SUBSTITU-@F@@@@           TED IS A SINGLE ITEM, NO CHECKING IS DONE: GB
)@@G@@ THE ITEM IS@ @@@@           INSERTED DIRECTLY. @[@@@@      @F@@@@      GC
)@@G@@ 2)  IF THE MACROEXPRESSION-CALLING NAME IS BOUNDED ON BOTH @G@@@@      GD
)@@G@@     SIDES BY SEPARATOR CHARACTERS, THEN THE EXPANDED MACROEX-    @F@@@@GE
)@@G@@           PRESSION IS INSERTED WITHOUT ALTERATION.  SEPARATOR    @ @@@@GF
)@@G@@           CHARACTERS ARE:    @A@@@@               ()    PARENTHESES    GG
)@@G@@@ @@@@               []    BRACKETS @ @@@@               ,     COMMA    GH
)@@G@@@A@@@@               ...   BLOCK OPERATOR @C@@@@               /     SLAGI
)@@G@@SH (DATA STATEMENT ONLY)@A@@@@               =     EQUALS SIGN    @[@@@@GJ
)@@G@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)   GK
)@@G@@       9- 22@[@@@@      @[@@@@      @[@@@@      @C@@@@                  GL
)@@G@@   (END OR BEGINNING OF CARD) @[@@@@      @F@@@@       3)  IF NEITHER COGM
)@@G@@NDITION 1) OR 2) IS MET, THEN THE MACROEX-@F@@@@           PRESSION EXPAGN
)@@G@@NSION IS ENCLOSED IN PARENTHESES BEFORE   @ @@@@           BEING INSERTEGO
)@@G@@D.    @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971GP
)@@G@@ VERSION)          9- 23@[@@@@      @[@@@@      @[@@@@      @[@@@@      GQ
)@@G@@@E@@@@  9. 5. 4.   SUGGESTED APPLICATIONS OF MACROEXPRESSIONS     @[@@@@GR
)@@G@@      @F@@@@       THE MACROEXPRESSION IS AN IMMENSELY POWERFUL FEATURE GS
)@@G@@OF THE@F@@@@ RALPH COMPILER, AND CAN BE USED FOR LIMITLESS APPLICATIONS.GT
)@@G@@  HERE@B@@@@ ARE A FEW WHICH ONE MIGHT FIND USEFUL.   @[@@@@      @[@@@@GU
)@@G@@      @[@@@@      @[@@@@      @[@@@@      @D@@@@  9. 5. 4. 1.   SYMMETRIGV
)@@G@@C-MATRIX SUBSCRIPT DEFINITION @[@@@@      @[@@@@      @F@@@@       A SYMGW
)@@G@@METRIC MATRIX IS A 2-DIMENSIONAL SQUARE MATRIX A(I,J) @F@@@@ WITH THE PRGX
)@@G@@OPERTY THAT  A(I,J) = A(J,I) EVERYWHERE.  THUS, FOR A @F@@@@ 100 BY 100 GY
)@@G@@SYMMETRIC MATRIX, 10000 WORDS OF MEMORY ARE REQUIRED. @F@@@@ WITH THE USGZ
)@@G@@E OF A MACROEXPRESSION TO DEFINE THE ACCESS SUBSCRIPT,@F@@@@ THIS REQUIRHA
)@@G@@EMENT CAN BE REDUCED TO 5150 WORDS, A SAVING OF 4850! @[@@@@      @[@@@@HB
)@@G@@      @D@@@@       NORMALLY A MATRIX WOULD BE SET UP AS FOLLOWS   @[@@@@HC
)@@G@@      @D@@@@       DIMENSION X(100,100)     REFERENCING X(I,J)    @[@@@@HD
)@@G@@      @[@@@@      @#@@@@ REPLACE THIS WITH@[@@@@      @C@@@@       PARAMHE
)@@G@@ETER XDIM = (100*100-100)/2+100     @ @@@@       DIMENSION XX(XDIM)     HF
)@@G@@@^@@@@       DEFINE X(I,J)=   @F@@@@        X(MAX(I,J)-MIN(I,J)+((2*(100HG
)@@G@@+1)-MIN(I,J))*(MIN(I,J)-1)/2) @[@@@@      @[@@@@      @G@@@@ A REFERENCEHH
)@@G@@ TO X(I,J) WILL PRODUCE THE PROPER LINEAR SUBSCRIPT FOR     @^@@@@ THE SHI
)@@G@@YMMETRIC MATRIX.  @[@@@@      @[@@@@      @D@@@@  9. 5. 4. 2.   LIST DEFHJ
)@@G@@INITIONS FOR INPUT/OUTPUT     @[@@@@      @[@@@@      @F@@@@       IT ISHK
)@@G@@ VERY COMMON IN A PROGRAMMING PROBLEM TO HAVE NEED TO @A@@@@ MAKE MANY SHL
)@@G@@TATEMENTS OF THE FORM   @[@@@@      @B@@@@       WRITE(4) (A(I),I=1,N),(HM
)@@G@@B(I),I=1,N) @[@@@@      @E@@@@ THIS CAN BE SHORTENED CONSIDERABLY VIA A HN
)@@G@@MACROEXPRESSION:  @[@@@@      @A@@@@       DEFINE LIST1=(A(I),I=1,N)    HO
)@@G@@@A@@@@       DEFINE LIST2=(B(I),I=1,N)    @[@@@@*****^@G@@@@A GUIDE TO PHP
)@@G@@ROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          9- 24@[@@@@      HQ
)@@G@@@[@@@@      @[@@@@      @[@@@@      @G@@@@ WITH THESE DEFINITIONS AT HANHR
)@@G@@D, THEN THE ABOVE WRITE STATEMENT CAN     @#@@@@ BE SHORTENED TO  @[@@@@HS
)@@G@@      @A@@@@               WRITE(4) LIST1,LIST2 @[@@@@      @A@@@@ A FURHT
)@@G@@THER IMPROVEMENT MIGHT BE     @[@@@@      @B@@@@       DEFINE LIST(BB) =HU
)@@G@@ (BB(I),I=1,N)    @[@@@@      @]@@@@ PERMITTING @[@@@@      @B@@@@      HV
)@@G@@         WRITE(4) LIST(A),LIST(B)   @[@@@@      @[@@@@      @[@@@@      HW
)@@G@@@C@@@@  9. 5. 4. 3.   PARTWORD STORAGE ALLOCATION     @[@@@@      @F@@@@HX
)@@G@@       VERY OFTEN A LARGE-SCALE PROGRAMMING APPLICATION WILL DEAL @F@@@@HY
)@@G@@ WITH QUANTITIES THAT DO NOT NEED AN ENTIRE 36-BIT COMPUTER WORD  @F@@@@HZ
)@@G@@ FOR STORAGE, AND WHICH WOULD NOT FIT INTO AVAILABLE MEMORY UNLESS@F@@@@IA
)@@G@@ SOME SORT OF 'PACKING', OR COMPRESSING SEVERAL ITEMS INTO ONE    @F@@@@IB
)@@G@@ WORD, IS DONE.  A MACROEXPRESSION PROVIDES A PAINLESS METHOD OF  @F@@@@IC
)@@G@@ DEFINING A 'VARIABLE' TO OCCUPY LESS THAN A FULL WORD OF STORAGE.@[@@@@ID
)@@G@@      @F@@@@       AS A SIMPLE EXAMPLE, SUPPOSE THAT A BIT PLANE, SUCH AIE
)@@G@@S IS  @F@@@@ USED IN A 'PICTURE' PROCESSING PROGRAM, IS BEING MANIPULATEIF
)@@G@@D.  A @F@@@@ CONSERVATIVE SIZE FOR A BIT PLANE MIGHT BE 144 BY 144 BITS,IG
)@@G@@ OR A @F@@@@ TOTAL OF 20736.  IF A REGULAR DIMENSION STATEMENT IS USED, IH
)@@G@@THIS  @F@@@@ PLANE WILL REQUIRE 20736 WORDS OF CORE.  BY PARTWORD STORAGII
)@@G@@E     @G@@@@ MACROEXPRESSION USAGE, THIS CAN BE REDUCED TO 576 WORDS BY IJ
)@@G@@PACKING     @^@@@@ 36 BITS TO A WORD!     @[@@@@      @ @@@@       NORMAIK
)@@G@@LLY, ONE WOULD PUT@[@@@@      @A@@@@       DIMENSION IPLANE(144,144)    IL
)@@G@@@[@@@@      @F@@@@ AND REFERENCE IPLANE(I,J) AS A BIT.  INSTEAD, INSERT IM
)@@G@@THE STATE-  @]@@@@ MENTS:     @[@@@@      @A@@@@       PARAMETER NDIM = IN
)@@G@@144*144/36  @ @@@@       DIMENSION BUF(NDIM)    @F@@@@       DEFINE IPLAIO
)@@G@@NE(I,J)=FLD(MOD(J-1,36),1,BUF(4*(I-1)+J//36))   @[@@@@      @G@@@@ IPLANIP
)@@G@@E(I,J) NOW REFERENCES ONLY A SINGLE BIT!   SUBSCRIPTION IS BY     @F@@@@IQ
)@@G@@ ROWS OF 144 BITS EACH, IN 4 CONSECUTIVE COMPUTER WORDS.  IN THIS @F@@@@IR
)@@G@@ INSTANCE A 'STACK' OF PLANES MAY BE EFFECTED BY ADDING ANOTHER   @^@@@@IS
)@@G@@ DIMENSION TO 'BUF'     @[@@@@      @[@@@@      @[@@@@*****^@G@@@@A GUIDIT
)@@G@@E TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          9- 25@[@@@@IU
)@@G@@      @[@@@@      @[@@@@      @F@@@@       ASSIGNING STORAGE TO 6-BIT, 1IV
)@@G@@2-BIT, OR 18-BIT ITEMS WILL   @F@@@@ CAUSE THE OPTIMIZER TO INSERT THE AIW
)@@G@@PPROPRIATE PARTWORD OPERATORS,@ @@@@ CAUSING NO DECREASE IN SPEED.@[@@@@IX
)@@G@@      @[@@@@      @F@@@@       TO ASSIGN AN ARRAY WITH 6 BITS PER ITEM (IY
)@@G@@CHARACTER ARRAY), @C@@@@ USE THE FOLLOWING MACROEXPRESSION DEFINITION:  IZ
)@@G@@@[@@@@      @ @@@@       PARAMETER NCARD=80//6  @ @@@@       DIMENSION CJA
)@@G@@ARD(NCARD)  @D@@@@       DEFINE COLUMN(J)=FLD(6*MOD(J-1,6),6,CARD(J//6))JB
)@@G@@@[@@@@      @F@@@@ A REFERENCE TO COLUMN(12) WILL REFERENCE THE 12'TH COJC
)@@G@@LUMN OF THE @F@@@@ CARD IMAGE IN THE ARRAY 'CARD', WHICH IS THE 6TH CHARJD
)@@G@@ACTER OF THE@#@@@@ SECOND WORD.     @[@@@@      @[@@@@      @[@@@@      JE
)@@G@@@ @@@@  9. 5. 4. 4.   VARIABLE TRACE@[@@@@      @F@@@@       A GIVEN VARJF
)@@G@@IABLE MAY BE 'TRACED' FOR DIAGNOSTIC PURPOSES   @F@@@@ USING A DEFINED FJG
)@@G@@UNCTION:  SUPPOSE IT IS DESIRED TO TRACE ALL    @D@@@@ OCCURRENCES OF THJH
)@@G@@E VARIABLE 'X'.  DEFINE A TRACER:   @[@@@@      @A@@@@       DEFINE X = JI
)@@G@@IND(VTRACE(X))    @[@@@@      @F@@@@ WHERE 'VTRACE' IS A FUNCTION WHICH JJ
)@@G@@PRINTS THE ARGUMENT AND RE-   @F@@@@ TURNS.  IF VTRACE DOES NOT WISH TO JK
)@@G@@TAKE THE TIME TO EXTRACT THE  @F@@@@ NAME AND MODE OF THE CALLING ARGUMEJL
)@@G@@NT, A SECOND ARGUMENT MAY BE  @A@@@@ ADDED, AND ANOTHER ENTRY CALLED:   JM
)@@G@@@[@@@@      @A@@@@       DEFINE X = IND(XTRACE(X,'X'))@[@@@@      @F@@@@JN
)@@G@@ THE 'IND' PSEUDOFUNCTION IS USED IN BOTH CASES BECAUSE IT MAY    @B@@@@JO
)@@G@@ OCCUR ON EITHER SIDE ON AN EQUALS SIGN.  @[@@@@      @F@@@@       A SLIJP
)@@G@@GHTLY MORE SOPHISTICATED DEFINITION MAY BE USED TO    @F@@@@ TRACE A SINJQ
)@@G@@GLE ELEMENT OF AN ARRAY VARIABLE:  THE DEFINITION     @[@@@@      @E@@@@JR
)@@G@@       DEFINE R(I) = IND([I.EQ.7,LOC(R(I)),VTRACE(R(I))])   @[@@@@      JS
)@@G@@@E@@@@ WILL TRACE R(7) WITHOUT TRACING ANY OTHER ELEMENT OF R.    @[@@@@JT
)@@G@@      @[@@@@      @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DJU
)@@G@@ECEMBER 1971 VERSION)          9- 26@[@@@@      @[@@@@      @[@@@@      JV
)@@G@@@[@@@@      @[@@@@      @B@@@@  9. 6.   COMPILER-CONTROL STATEMENTS     JW
)@@G@@@[@@@@      @[@@@@      @F@@@@       COMPILER-CONTROL STATEMENTS ARE USEJX
)@@G@@D TO MODIFY STANDARD    @G@@@@ COMPILER UTILITY ACTIONS, SUCH AS PRINTINJY
)@@G@@G OF THE PROGRAM, COLLEC-     @ @@@@ TION OF REFERENCES, ETC.     @[@@@@JZ
)@@G@@      @ @@@@  9. 6. 1.   LISTING CONTROL  @[@@@@      @F@@@@       LISTIKA
)@@G@@NG-CONTROL STATEMENTS CONTROL THE PRINTING OF SOURCE  @^@@@@ CARDS AND OKB
)@@G@@BJECT CODE. @[@@@@      @B@@@@  9. 6. 1. 1.   SOURCE LISTING CONTROL    KC
)@@G@@@[@@@@      @C@@@@       TO START A LISTING OF THE SOURCE PROGRAM:@[@@@@KD
)@@G@@      @#@@@@       (FORTRAN): @A@@@@               START EDIT SOURCE    KE
)@@G@@@[@@@@      @#@@@@       (MAD):     @ @@@@               LISTING ON     KF
)@@G@@@A@@@@               START EDIT SOURCE    @[@@@@      @[@@@@      @C@@@@KG
)@@G@@       TO TURN OFF THE SOURCE-PROGRAM LISTING:  @[@@@@      @#@@@@      KH
)@@G@@ (FORTRAN): @A@@@@               STOP EDIT SOURCE     @[@@@@      @#@@@@KI
)@@G@@       (MAD):     @ @@@@               LISTING OFF    @A@@@@            KJ
)@@G@@   STOP EDIT SOURCE     @[@@@@      @[@@@@      @G@@@@ THE 'STOP EDIT SOKK
)@@G@@URCE' OR 'LISTING OFF' CARD WILL BE THE LAST CARD     @F@@@@ PRINTED UNTKL
)@@G@@IL THE CARD AFTER THE NEXT 'START EDIT SOURCE' OR     @G@@@@ 'LISTING ONKM
)@@G@@' CARD, IF ANY.  IF NO CARD TO TURN THE LISTING BACK ON     @D@@@@ APPEAKN
)@@G@@RS, THEN THE STORAGE MAP WILL NOT BE PRINTED.   @[@@@@      @B@@@@  9. 6KO
)@@G@@. 1. 2.   OBJECT LISTING CONTROL    @[@@@@      @D@@@@       TO START LIKP
)@@G@@STING OF OBJECT CODE GENERATED:     @[@@@@      @ @@@@       (FORTRAN ANKQ
)@@G@@D MAD):     @ @@@@               START EDIT CODE@[@@@@      @F@@@@      KR
)@@G@@ TO TERMINATE THE LISTING OF GENERATED OBJECT CODE, THE     @]@@@@ STATEKS
)@@G@@MENT: @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971KT
)@@G@@ VERSION)          9- 27@[@@@@      @[@@@@      @[@@@@      @[@@@@      KU
)@@G@@@ @@@@       (FORTRAN AND MAD):     @ @@@@               STOP EDIT CODE KV
)@@G@@@[@@@@      @[@@@@      @F@@@@ WILL START OR STOP OBJECT LISTING EFFECTIKW
)@@G@@VE AS OF THE CARD AFTER @^@@@@ THE STATEMENT ITSELF.  @[@@@@      @B@@@@KX
)@@G@@  9. 6. 2.   CROSS-REFERENCE COLLECTION   @[@@@@      @F@@@@       RALPHKY
)@@G@@ CAN GENERATE A TABLE OF CROSS-REFERENCES TO ALL SYM- @G@@@@ BOLS BY STAKZ
)@@G@@TEMENT NUMBER.  TO INITIATE THE CROSS-REFERENCE COLLEC-     @[@@@@ TION,LA
)@@G@@@[@@@@      @ @@@@       (FORTRAN AND MAD):     @ @@@@               REFLB
)@@G@@ERENCES ON  @[@@@@      @C@@@@       TO TURN OFF CROSS-REFERENCE COLLECTLC
)@@G@@ION:  @[@@@@      @ @@@@       (FORTRAN AND MAD):     @ @@@@            LD
)@@G@@   REFERENCES OFF @[@@@@      @[@@@@      @F@@@@       THE TABLE OF CROSLE
)@@G@@S REFERENCES WILL BE PRINTED AT THE END OF@E@@@@ PHASE 1, AFTER THE LASTLF
)@@G@@ SOURCE CARD PRINTED, BUT BEFORE THE@#@@@@ STORAGE MAP.     @[@@@@      LG
)@@G@@@B@@@@  9. 6. 3.   CHANGE-OF-LANGUAGE CONTROL   @[@@@@      @F@@@@      LH
)@@G@@ RALPH CAN COMPILE BOTH FORTRAN AND MAD PROGRAMS.  IF IT IS @G@@@@ DESIRLI
)@@G@@ED TO SWITCH LANGUAGES IN THE MIDDLE, THERE ARE STATEMENTS TO     @F@@@@LJ
)@@G@@ CAUSE RALPH TO SWITCH COMPILATION MODES IN THE MIDDLE OF A PRO-  @[@@@@LK
)@@G@@ GRAM.@[@@@@      @#@@@@       (FORTRAN): @^@@@@               ENTER MADLL
)@@G@@@[@@@@      @#@@@@       (MAD):     @ @@@@               ENTER FORTRAN  LM
)@@G@@@[@@@@      @F@@@@       THESE STATEMENTS CAUSE THE COMPILER TO BEGIN ACLN
)@@G@@CEPTING     @F@@@@ SOURCE STATEMENTS WRITTEN IN THE INDICATED LANGUAGE WLO
)@@G@@ITH THE NEXT@[@@@@ CARD.@[@@@@      @F@@@@       BECAUSE OF DIFFERENT COLP
)@@G@@NVENTIONS FOR CONTINUATION STATE-   @F@@@@ MENTS, THE CHANGE-OF-LANGUAGELQ
)@@G@@ CARD SHOULD ALWAYS BE FOLLOWED BY A@F@@@@ NULL 'CONTINUE' CARD, WITHOUTLR
)@@G@@ A STATEMENT LABEL, WITH THE 'C' IN @]@@@@ COLUMN 12: @[@@@@      @^@@@@LS
)@@G@@               EXAMPLES:@[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALT
)@@G@@LPH (DECEMBER 1971 VERSION)          9- 28@[@@@@      @[@@@@      @[@@@@LU
)@@G@@      @^@@@@               ======== @[@@@@      @^@@@@               ENTLV
)@@G@@ER MAD@ @@@@                    CONTINUE  @A@@@@                    (MADLW
)@@G@@ STATEMENTS)@A@@@@                    ENTER FORTRAN   @ @@@@            LX
)@@G@@        CONTINUE  @A@@@@               (FORTRAN STATEMENTS) @[@@@@      LY
)@@G@@@D@@@@  9. 6. 4.   GENERIC AND INTRINSIC FUNCTION CONTROL   @[@@@@      LZ
)@@G@@@[@@@@      @F@@@@       IF A USER HAS CODED HIS OWN FUNCTION WHOSE NAMEMA
)@@G@@ MATCHES    @F@@@@ THE NAME OF A GENERIC OR INTRINSIC FUNCTION, OR WHICHMB
)@@G@@ IS APT     @F@@@@ TO CAUSE DIFFICULTY WITH THE OPTIMIZER, HE MAY WARN TMC
)@@G@@HE COMPILER @F@@@@ THAT THIS FUNCTION IS NOT THE NORMALLY EXPECTED VARIEMD
)@@G@@TY VIA THE  @^@@@@ 'ABNORMAL' STATEMENT.  @[@@@@      @B@@@@  9. 6. 4. 1ME
)@@G@@.   THE 'ABNORMAL' STATEMENT  @[@@@@      @F@@@@       THE 'ABNORMAL' STMF
)@@G@@ATEMENT ENABLES THE USER TO REMOVE A FUNC-@F@@@@ TION FROM THE TABLE OF MG
)@@G@@GENERIC OR INTRINSIC FUNCTIONS.  THUS, THE@]@@@@ STATEMENT  @[@@@@      MH
)@@G@@@#@@@@       Y = LOG(X) @[@@@@      @F@@@@ WILL NORMALLY COMPILE A REFERMI
)@@G@@ENCE TO 'ALOG', 'DLOG', OR 'CLOG',  @F@@@@ DEPENDING UPON THE MODE OF X.MJ
)@@G@@  FURTHER, THE OPTIMIZER WILL CON-  @F@@@@ DENSE REFERENCES TO THIS FUNCMK
)@@G@@TION, IF NECESSARY, AND CAN OPTIMIZE@F@@@@ AROUND THE FUNCTION CALL, TRUML
)@@G@@STING THAT NO MATHEMATICAL LIBRARY  @F@@@@ FUNCTION WILL CHANGE ITS ARGUMM
)@@G@@MENT(S) OR CHANGE ANY COMMON-STORAGE@]@@@@ VARIABLES. @[@@@@      @F@@@@MN
)@@G@@       IF, FOR SOME REASON, THE PROGRAMMER WISHES TO USE THE FUNC-@F@@@@MO
)@@G@@ TION 'LOG' FOR SOME OTHER PURPOSE, IT MAY BE DEACTIVATED AS A    @F@@@@MP
)@@G@@ GENERIC FUNCTION VIA THE 'ABNORMAL' STATEMENT.  THE GENERAL FORM @[@@@@MQ
)@@G@@ IS   @[@@@@      @C@@@@       ABNORMAL <NAME1>,<NAME2>,...,<NAMEN>     MR
)@@G@@@[@@@@      @F@@@@       <NAME1>, ETC., ARE THE FUNCTIONS TO BE DECLAREDMS
)@@G@@ ABNORMAL.  @F@@@@ THIS DECLARATION IS NOT RETROACTIVE; IT MUST OCCUR BEMT
)@@G@@FORE THE    @F@@@@ FUNCTION-CALL WHOSE MEANING IS TO BE ALTERED.  IF <NAMU
)@@G@@ME> IS NOT A@F@@@@ GENERIC OR INTRINSIC FUNCTION, THEN THE 'ABNORMAL' DEMV
)@@G@@CLARATION   @G@@@@ WILL BE TREATED AS 'EXTERNAL' BY THE COMPILER.  (SEE MW
)@@G@@SECTION 8.1.4     @C@@@@ FOR A DISCUSSION OF THE 'EXTERNAL' STATEMENT). MX
)@@G@@@[@@@@      @F@@@@       AS A PRECAUTIONARY MEASURE, THE 'EXTERNAL' STATMY
)@@G@@EMENT, THE  @F@@@@ 'DIMENSION' STATEMENT, OR ANY MODE DECLARATION WILL AMZ
)@@G@@LSO REMOVE A@F@@@@ REFERENCED FUNCTION FROM THE GENERAL OR IMPLICIT FUNCNA
)@@G@@TION TABLE. @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBENB
)@@G@@R 1971 VERSION)          9- 29@[@@@@      @[@@@@      @[@@@@      @[@@@@NC
)@@G@@      @^@@@@               EXAMPLES:@^@@@@               =========@ @@@@ND
)@@G@@       ABNORMAL SIN,FLOAT,SQRT@#@@@@       ABNORMAL X @[@@@@      @[@@@@NE
)@@G@@      @D@@@@  9. 6. 4. 2.   CONTROL VIA DECLARATION STATEMENTS.   @[@@@@NF
)@@G@@      @[@@@@      @G@@@@       IF A GENERIC OR INTRINSIC FUNCTION IS REFNG
)@@G@@ERENCED IN A DECLARATION@G@@@@ STATEMENT, THEN IT IS CONSIDERED ABNORMALNH
)@@G@@ FOR OPTIMIZATION PURPOSES.   @E@@@@ FOR A COMPLETE DISCUSSION OF THIS ANI
)@@G@@CTION, SEE SECTION 8.2.2@ @@@@ (ITEMIZED MODE DECLARATIONS) @[@@@@*****^NJ
)@@G@@@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         NK
)@@G@@ 9- 30@[@@@@      @[@@@@      @[@@@@      @[@@@@      @[@@@@      @A@@@@NL
)@@G@@  9. 7.   SOURCE STATEMENT CONTROL  @[@@@@      @[@@@@      @[@@@@      NM
)@@G@@@D@@@@  9. 7. 1.   THE 'INCLUDE' STATEMENT (FORTRAN AND MAD)@[@@@@      NN
)@@G@@@[@@@@      @G@@@@       THE 'INCLUDE' STATEMENT PROVIDES THE PROGRAMMERNO
)@@G@@ WITH A MEANS     @F@@@@ OF ADDING PRE-CODED STATEMENTS, EITHER FROM THENP
)@@G@@ SYSTEM LIBRARY OR@F@@@@ HIS OWN LIBRARY, TO HIS PROGRAM.  IN SIMPLEST FNQ
)@@G@@ORM, THE INCLUDE  @#@@@@ STATEMENT IS     @[@@@@      @A@@@@       INCLUNR
)@@G@@DE <PROCEDURE-NAME>     @[@@@@      @A@@@@ OR    INCLUDE <PROCEDURE-NAMENS
)@@G@@>,LIST@[@@@@      @F@@@@       THE SECOND FORM WILL PROVIDE A LISTING OFNT
)@@G@@ THE INCLUDED     @F@@@@ STATEMENTS.  THE INCLUDE WILL CAUSE THE COMPILENU
)@@G@@R TO TRY TO FIND A@F@@@@ FORTRAN PROCEDURE NAMED <PROCEDURE-NAME>.  IT WNV
)@@G@@ILL FIRST SEARCH  @F@@@@ THE SOURCE INPUT FILE, THEN THE TEMPORARY PROGRNW
)@@G@@AM FILE TPF$, AND @F@@@@ FINALLY THE SYSTEM LIBRARY RLIB$.  IF A PROCEDUNX
)@@G@@RE WITH THE SPECI-@G@@@@ FIED NAME IS NOT FOUND, THE INCLUDE STATEMENT INY
)@@G@@S DECLARED TO BE IN     @]@@@@ ERROR.     @[@@@@      @F@@@@       WHEN NZ
)@@G@@THE SPECIFIED PROCEDURE HAS BEEN FOUND, THE CARDS ARE @F@@@@ ADDED TO THOA
)@@G@@E TOMPILATION IMMEDIATELY AFTER THE INCLUDE STATEMENT.@[@@@@      @F@@@@OB
)@@G@@       AN ALTERNATE FORM OF 'INCLUDE' IS PROVIDED, WHICH PERMITS  @D@@@@OC
)@@G@@ THE INCLUSTION OF A PROCEDURE FROM AN ARBITRARY FILE:@[@@@@      @B@@@@OD
)@@G@@       INCLUDE <FILE>(<PROCEDURE-NAME>)   @C@@@@ OR    INCLUDE <FILE>(PROE
)@@G@@OCEDURE-NAME>),LIST     @[@@@@      @F@@@@ WILL CAUSE THE COMPILER TO SEOF
)@@G@@ARCH ONLY THE SPECIFIED FILE INSTEAD@F@@@@ OF THE NORMAL SEQUENCE.  THE OG
)@@G@@LIMITATIONS OF THE SYNTAX SCANNER   @E@@@@ FORBID FILE NAMES OF MORE THAOH
)@@G@@N 6 CHARACTERS, OR THOSE WHICH@^@@@@ INCLUDE A DOLLAR SIGN. @[@@@@      OI
)@@G@@@F@@@@       IF THE FILE NAME 'FOR$PF' IS ASSIGNED, EITHER AS A FILE    OJ
)@@G@@@F@@@@ IN ITS OWN RIGHT OR AS A '@USE' ASSOCIATION TO ANOTHER FILE,     OK
)@@G@@@F@@@@ THEN THIS FILE WILL BE SEARCHED INSTEAD OF THE SOURCE INPUT FILE OL
)@@G@@@A@@@@ WHEN LOOKING FOR THE PROCEDURE.    @[@@@@      @D@@@@  9. 7. 2.  OM
)@@G@@ THE 'DELETE' STATEMENT (FORTRAN AND MAD) @[@@@@      @F@@@@       THE 'ON
)@@G@@DELETE' STATEMENT PROVIDES THE PROGRAMMER WITH A MEANS@G@@@@ OF CONDITIOOO
)@@G@@NALLY SKIPPING SECTIONS OF THE SOURCE STATEMENTS DEPEN-     @D@@@@ DING OP
)@@G@@UPON COMPILATION PARAMETERS.  IT TAKES THE FORM @[@@@@*****^@G@@@@A GUIDOQ
)@@G@@E TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          9- 31@[@@@@OR
)@@G@@      @[@@@@      @[@@@@      @[@@@@      @ @@@@       DELETE <LABEL>,<VOS
)@@G@@ALUE> @[@@@@      @F@@@@       <LABEL> IS A STATEMENT LABEL, AND <VALUE>OT
)@@G@@ IS A CONSTANT OR @F@@@@ CONSTANT PARAMETER.  IF <VALUE> IS ZERO, THE COOU
)@@G@@MPILER IGNORES THE@F@@@@ 'DELETE' STATEMENT.  IF <VALUE> IS NON-ZERO, THOV
)@@G@@E COMPILER WILL   @F@@@@ IGNORE ALL SOURCE STATEMENTS UNTIL IT ENCOUNTEROW
)@@G@@S ONE WITH THE    @G@@@@ STATEMENT LABEL <LABEL>.  IT IS IMPERATIVE THATOX
)@@G@@ <LABEL> BE PUNCHED     @G@@@@ STARTING IN COLUMN 1 OF THE TERMINATION COY
)@@G@@ARD.  THE CARD WITH LABEL     @E@@@@ <LABEL> IS THE FIRST CARD WHICH WILOZ
)@@G@@L BE PROCESSED AFTER THE@#@@@@ 'DELETE' ITSELF. @[@@@@      @G@@@@      PA
)@@G@@ IF A 'DELETE' STATEMENT OCCURS INSIDE AN INCLUDED PROCEDURE,     @D@@@@PB
)@@G@@ IT MAY NOT REFER TO A LABEL OUTSIDE THAT PROCEDURE.  @[@@@@      @[@@@@PC
)@@G@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)   PD
)@@G@@       9- 32@[@@@@      @[@@@@      @[@@@@      @[@@@@      @D@@@@  9. 7PE
)@@G@@. 3.   CODING A PROCEDURE FOR USE WITH 'INCLUDE'@[@@@@      @G@@@@      PF
)@@G@@ THE PROCEDURE DEFINITION PROCESSOR (PDP) IS USED TO SET UP A     @F@@@@PG
)@@G@@ PROCEDURE FOR USE WITH THE 'INCLUDE' STATEMENT.  FOR A COMPLETE  @F@@@@PH
)@@G@@ DISCUSSION OF THE PROCEDURE DEFINITION PROCESSOR, SEE UNIVAC     @E@@@@PI
)@@G@@ MANUAL UP-4144 (PROGRAMMERS' REFERENCE MANUAL), SECTION    @[@@@@ 15.2.PJ
)@@G@@@[@@@@      @F@@@@       THE STANDARD PROCESSOR-CALL OPTIONS 'I','U','W'PK
)@@G@@, AND 'L'   @F@@@@ APPLY TO THE PROCEDURE DEFINITION PROCESSOR, 'N' IS APL
)@@G@@SSUMED.  SEE@F@@@@ SECTION 10.3 FOR A DISCUSSION OF OPTIONS.  FOR THE PUPM
)@@G@@RPOSES OF   @G@@@@ THIS EXAMPLE, ASSUME THAT ONE IS INSERTING A NEW PROCPN
)@@G@@EDURE ELEMENT     @#@@@@ ('I' OPTION):    @[@@@@      @B@@@@ @PDP,<OPTIOPO
)@@G@@NS>  <ELEMENT DESCRIPTOR>     @#@@@@ <NAME>  PROC     @B@@@@       (    PP
)@@G@@                           )  @B@@@@       (                            PQ
)@@G@@   )  @B@@@@       (   BODY OF PROCEDURE           )  @B@@@@       (    PR
)@@G@@                           )  @B@@@@       (                            PS
)@@G@@   )  @[@@@@  END @#@@@@ <NAME1>   PROC   @ @@@@       (                PT
)@@G@@)     @ @@@@       (   ETC          )     @ @@@@       (                PU
)@@G@@)     @[@@@@  END @[@@@@      @F@@@@       <OPTIONS> IS THE SET OF CALLIPV
)@@G@@NG OPTIONS, WHICH MUST INCLUDE@F@@@@ 'F' (FOR FORTRAN).  <ELEMENT DESCRIPW
)@@G@@PTOR> CONTAINS FILE, ELEMENT, @F@@@@ VERSION, ETC., AS IN SECTION 10.1.9PX
)@@G@@.  <NAME> IS THE NAME OF THE  @G@@@@ PROCEDURE, WHICH MUST BEGIN IN COLUPY
)@@G@@MN 1, AND BE SEPARATED FROM THE     @F@@@@ WORD 'PROC' BY AT LEAST ONE BPZ
)@@G@@LANK.  THE STATEMENTS WHICH FORM THE@F@@@@ BODY OF THE PROCEDURE FOLLOW,QA
)@@G@@ AND ARE TERMINATED BY THE 'END'    @F@@@@ CARD.  THE 'END' CARD  *MUST*QB
)@@G@@  HAVE THE 'E' IN COLUMN 2, AND NO  @F@@@@ OTHER CHARACTERS IN THE FIRSTQC
)@@G@@ 6 COLUMNS SAVE THE LETTERS 'E',    @F@@@@ 'N','D' IN COLUMNS 2,3,4.  ASQD
)@@G@@ MANY PROCEDURES AS DESIRED MAY BE  @E@@@@ PUT INTO ONE CALL TO THE PROCQE
)@@G@@EDURE DEFINITION PROCESSOR.   @[@@@@      @G@@@@       WHEN CODING PROCEQF
)@@G@@DURES FOR THE ASSEMBLER, IT IS NECESSARY TO     @F@@@@ SUFFIX EACH ENTRYQG
)@@G@@ NAME <NAME> WITH AN ASTERISK.  FOR THIS READON,@E@@@@ THE FORTRAN PROCEQH
)@@G@@DURE SCANNER WILL ACCEPT FORTRAN PROCEDURE@E@@@@ ENTRY NAMES WITH ASTERIQI
)@@G@@SKS AFTER THE NAME, BUT THEY ARE NOT@]@@@@ REQUIRED.  @[@@@@*****^@G@@@@QJ
)@@G@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          9- 33QK
)@@G@@@[@@@@      @[@@@@      @[@@@@      @[@@@@      @B@@@@  9. 7. 4.   AVAILQL
)@@G@@ABLE LIBRARY PROCEDURES @[@@@@      @F@@@@       SOME OFTEN-USED PROCEDUQM
)@@G@@RES HAVE BEEN PLACED IN THE SYSTEM  @D@@@@ LIBRARY RLIB$ FOR REFERENCE BQN
)@@G@@Y THE USER.  A SIMPLE   @[@@@@      @^@@@@       INCLUDE  <NAME>  @[@@@@QO
)@@G@@      @C@@@@ WILL INCLUDE THE LIBRARY PROCEDURE <NAME>.     @[@@@@      QP
)@@G@@@[@@@@      @B@@@@  9. 7. 4. 1.   MATHEMATICAL CONSTANTS    @[@@@@      QQ
)@@G@@@G@@@@       'PI' IS THE NAME OF A PROCEDURE WHICH WILL DEFINE THE SYMBOQR
)@@G@@L     @F@@@@               PI TO THE BEST DOUBLE-PRECISION VALUE OF PI AQS
)@@G@@VAI-  @^@@@@               LABLE.   @[@@@@      @[@@@@      @[@@@@      QT
)@@G@@@F@@@@       'CONST' IS THE NAME OF A PROCEDURE WHICH WILL DEFINE A     QU
)@@G@@@F@@@@               NUMBER OF DOUBLE-PRECISION MATHEMATICAL CONSTANTS: QV
)@@G@@@[@@@@      @A@@@@               NAME     MEANING     @A@@@@            QW
)@@G@@   ====     =======     @[@@@@      @B@@@@               SQRT2    SQUAREQX
)@@G@@ ROOT OF 2  @B@@@@               SQRT3    SQUARE ROOT OF 3  @D@@@@      QY
)@@G@@         E        BASE OF NATURAL LOGARITHMS    @C@@@@               LN1QZ
)@@G@@0     NATURAL LOGARITHM OF TEN@D@@@@               DEGREE   NUMBER OF RARA
)@@G@@DIANS PER DEGREE  @D@@@@               RADIAN   NUMBER OF DEGREES PER RARB
)@@G@@DIAN  @[@@@@      @[@@@@      @[@@@@      @[@@@@      @A@@@@  9. 7. 4. 2RC
)@@G@@.   PHYSICAL CONSTANTS  @[@@@@      @[@@@@      @G@@@@       A NUMBER OFRD
)@@G@@ OFTEN-USED PHYSICAL CONSTANTS HAVE BEEN PROVIDED     @D@@@@ IN THEIR MKRE
)@@G@@S AND CGS VALUES.  THESE CONSTANTS ARE:   @[@@@@      @[@@@@      @A@@@@RF
)@@G@@               NAME     MEANING     @A@@@@               ====     ======RG
)@@G@@=     @[@@@@      @D@@@@               C        VELOCITY OF LIGHT IN A VRH
)@@G@@ACUUM @C@@@@               EQ       CHARGE ON AN ELECTRON   @C@@@@      RI
)@@G@@         ME       MASS OF AN ELECTRON     @B@@@@               MP       RJ
)@@G@@MASS OF A PROTON  @B@@@@               H        PLANCK'S CONSTANT @[@@@@RK
)@@G@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)   RL
)@@G@@       9- 34@[@@@@      @[@@@@      @[@@@@      @ @@@@               HBARM
)@@G@@R     H/2PI @B@@@@               NZERO    AVOGADRO'S NUMBER @C@@@@      RN
)@@G@@         K        BOLTZMANN'S CONSTANT    @A@@@@               R        RO
)@@G@@GAS CONSTANT@[@@@@      @[@@@@      @F@@@@       THE NAMES OF THE 'INCLURP
)@@G@@DE' PROCEDURES FOR DEFINING THESE   @G@@@@ QUANTITIES IN CGS AND MKS UNIRQ
)@@G@@TS ARE 'CGS' AND 'MKS', RESPECTIVELY.     @[@@@@ THUS,@[@@@@      @#@@@@RR
)@@G@@       INCLUDE MKS@[@@@@      @F@@@@ WILL INCLUDE THE DEFINITIONS OF THERS
)@@G@@ CONSTANTS AS DESCRIBED ABOVE,@#@@@@ IN MKS UNITS.    @[@@@@      @H@@@@RT
)@@G@@       THE VALUES OF THESE PHYSICAL CONSTANTS HAVE NOT EVER BEEN MEASURERU
)@@G@@D     @F@@@@ TO A PRECISION GREATER THAN (AT BEST) 8 DECIMAL PLACES.  FORV
)@@G@@R THIS@F@@@@ REASON, IT WOULD BE IDIOTIC TO INCLUDE THEIR VALUES IN DOUBRW
)@@G@@LE    @G@@@@ PRECISION--AN ACT SOMEWHAT AKIN TO SURVEYING A FOOTBALL FIERX
)@@G@@LD WITH     @^@@@@ AN INTERFEROMETER.     @[@@@@*****^@G@@@@A GUIDE TO PRY
)@@G@@ROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          9- 35@[@@@@      RZ
)@@G@@@[@@@@      @[@@@@      @C@@@@  9. 7. 4. 3.   NONSTANDARD MATRIX SUBSCRISA
)@@G@@PTION @[@@@@      @F@@@@       'SYMMTX' IS A PROCEDURE CONTAINING TWO MASB
)@@G@@CROEXPRESSION     @F@@@@               DEFINITIONS WHICH WILL ALLOW THE SC
)@@G@@USER TO DEFINE A  @G@@@@               SYMMETRIC MATRIX, AS IN SECTION 8SD
)@@G@@.5.4.1.  THE MACROEX-   @ @@@@               PRESSIONS:     @[@@@@      SE
)@@G@@@B@@@@               'SYMM' DEFINES THE ARRAY   @B@@@@               'SYSF
)@@G@@MDIM' DIMENSIONS IT.    @[@@@@      @A@@@@               THUS, THE SEQUESG
)@@G@@NCE   @[@@@@      @ @@@@               INCLUDE SYMMTX @B@@@@            SH
)@@G@@   DIMENSION X(SYMDIM(100))   @C@@@@               DEFINE X(A,B) = SYMM(SI
)@@G@@X,A,B,100)  @[@@@@      @F@@@@               WILL DEFINE 'X' EXACTLY AS SJ
)@@G@@IN SECTION 8.5.4.3.  THE@ @@@@               GENERAL FORM IS@[@@@@      SK
)@@G@@@F@@@@               SYMDIM(<SIZE>) TO PRODUCE CORRECT ARRAY DIMENSION. SL
)@@G@@@C@@@@               SYMM(<BASE>,<SUB1>,<SUB2>,<SIZE>)@[@@@@      @F@@@@SM
)@@G@@               TO DEFINE THE MATRIX.  <BASE> IS THE ARRAY DIMEN-  @F@@@@SN
)@@G@@               SIONED WITH 'SYMDIM', <SUB1> AND <SUB2> ARE THE TWO@G@@@@SO
)@@G@@               SUBSCRIPTS USED IN THE DEFINITION, AND <SIZE> IS THE     SP
)@@G@@@D@@@@               ROW OR COLUMN OF THE SQUARE MATRIX.    @[@@@@      SQ
)@@G@@@[@@@@      @C@@@@  9. 7. 4. 4.   PARTWORD STORAGE DEFINITION     @[@@@@SR
)@@G@@      @F@@@@       'PARTWD' IS A PROCEDURE CONTAINING TWO MACROEXPRESSIOSS
)@@G@@N     @F@@@@               DEFINITIONS WHICH ALLOW THE USER TO DEFINE PAST
)@@G@@RTWORD@F@@@@               STORAGE ALLOCATION, AS IN SECTION 8.5.4.3.  TSU
)@@G@@HE    @^@@@@               MACROEX- @ @@@@               PRESSIONS ARE  SV
)@@G@@@[@@@@      @G@@@@               'PARTSZ' TO DIMENSION THE ARRAY 'PART' SW
)@@G@@TO DEFINE THE     @^@@@@               ARRAY.   @[@@@@      @A@@@@      SX
)@@G@@         THUS, THE SEQUENCE:  @[@@@@      @ @@@@               INCLUDE PSY
)@@G@@ARTWD @B@@@@               DIMENSION B(PARTSZ(80,6))  @C@@@@            SZ
)@@G@@   DEFINE COLUMN(K)=PART(B,K,6)     @[@@@@      @F@@@@               WILTA
)@@G@@L DEFINE 'COLUMN' EXACTLY AS IN SECTION 8.5.4.3.@[@@@@      @A@@@@      TB
)@@G@@         THE GENERAL FORM IS  @[@@@@      @F@@@@               PARTSZ(<STC
)@@G@@IZE>,<BITS>)   TO DIMENSION THE BASE.     @[@@@@*****^@G@@@@A GUIDE TO PTD
)@@G@@ROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)          9- 36@[@@@@      TE
)@@G@@@[@@@@      @[@@@@      @F@@@@                   <SIZE> IS THE NUMBER OFTF
)@@G@@ 'CELLS' WITH <BITS>    @B@@@@                   NUMBER OF BITS EACH.   TG
)@@G@@@[@@@@      @F@@@@               PART(<BASE>,<INDEX>,<BITS>) TO DEFINE TTH
)@@G@@HE ARRAY.   @F@@@@                   <BASE> IS THE ARRAY DIMENSIONED ABOTI
)@@G@@VE.  <INDEX>@F@@@@                   IS THE SYMBOL USED IN THE 'DEFINE'.TJ
)@@G@@  <BITS> IS @F@@@@                   THE NUMBER OF BITS PER ENTRY.  IF <TK
)@@G@@BITS> DOES  @F@@@@                   NOT DIVIDE 36, THE BITS AT THE RIGHTL
)@@G@@THAND END OF@C@@@@                   EACH WORD WILL BE WASTED; NO @E@@@@TM
)@@G@@                   ACROSS-WORD-BOUNDARY ALLOCATION IS DONE. @[@@@@      TN
)@@G@@@[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSITO
)@@G@@ON)         10-  1@[@@@@      @[@@@@      @[@@@@      @D@@@@ 10.   MISCETP
)@@G@@LLANEOUS MACHINE-DEPENDENT STATEMENTS     @[@@@@      @[@@@@      @[@@@@TQ
)@@G@@      @F@@@@       THE EXEC 8 MONITOR SYSTEM IS A VERY POWERFUL SYSTEM, TR
)@@G@@WHICH @F@@@@ PROVIDES AN INCREDIBLE NUMBER OF SERVICES TO THE USER.  SOMTS
)@@G@@E     @F@@@@ STATEMENTS HAVE BEEN ADDED TO THE MAD LANGUAGE TO ALLOW THETT
)@@G@@ USER @F@@@@ TO TAKE ADVANTAGE OF THEM DIRECTLY FROM A COMPILER-LEVEL PRTU
)@@G@@OGRAM.@F@@@@ A PASSING FAMILIARITY WITH THE EXEC 8 SYSTEM AND THE 1108 MTV
)@@G@@ACHINE@#@@@@ CODE IS ASSUMED. @[@@@@      @[@@@@      @D@@@@ 10. 1.   THTW
)@@G@@E 'REQUEST' STATEMENT (FORTRAN AND MAD)   @[@@@@      @[@@@@      @F@@@@TX
)@@G@@       THE 'REQUEST' STATEMENT COMPILES INTO AN 'EXECUTIVE RETURN'@F@@@@TY
)@@G@@ (ER) INSTRUCTION.  THERE ARE THREE FORMS OF THIS STATEMENT; ONLY @E@@@@TZ
)@@G@@ ONE FORM IS VALID FOR A GIVEN EXECUTIVE REQUEST FUNCTION.  @[@@@@      UA
)@@G@@@[@@@@      @A@@@@       (A)     REQUEST <ER-NAME>    @[@@@@      @B@@@@UB
)@@G@@       (B)     REQUEST <ER-NAME>,<PACKET> @[@@@@      @C@@@@       (C)  UC
)@@G@@   REQUEST <ER-NAME>,*<CONTROL WORD>@[@@@@      @[@@@@      @G@@@@      UD
)@@G@@ THE CLAUSE ',ASSIGN TO <VARIABLE>' MAY BE APPENDED TO ANY OF     @G@@@@UE
)@@G@@ THE THREE FORMS.  IF <VARIABLE> IS OF ANY SINGLEWORD MODE, IT WILL     UF
)@@G@@@F@@@@ BE GIVEN THE CONTENTS OF REGISTER A0 AFTER THE 'ER' INSTRUCTION  UG
)@@G@@@F@@@@ RETURNS.  IF <VARIABLE> IS OF COMPLEX OR DOUBLE-PRECISION MODE,  UH
)@@G@@@D@@@@ THE CONTENTS OF REGISTERS A0 AND A1 WILL BE STORED.  @[@@@@      UI
)@@G@@@G@@@@       <ER-NAME> IS THE SYMBOLIC NAME, LESS THE DOLLAR SIGN, OF THUJ
)@@G@@E     @F@@@@ EXECUTIVE REQUEST FUNCTION.  CONSTRUCTION (A) GENERATES AN UK
)@@G@@'ER'  @F@@@@ INSTRUCTION WITHOUT ANY PACKET LOAD PREVIOUSLY.  CONSTRUCTIUL
)@@G@@ON (B)@F@@@@ GENERATES AN ADDRESS LOAD (IMMEDIATE LOAD) OF THE ADDRESS OUM
)@@G@@F     @E@@@@ <PACKET> INTO REGISTER A0, FOLLOWED BY THE 'ER' INSTRUCTIONUN
)@@G@@@F@@@@ ITSELF.  CONSTRUCTION (C) GENERATES A FULLWORD LOAD OF <CONTROL  UO
)@@G@@@F@@@@ WORD> INTO REGISTER A0, FOLLOWED BY THE 'ER' INSTRUCTION ITSELF. UP
)@@G@@@F@@@@ THE <PACKET> IN CONSTRUCTION (B) SHOULD BE A POSSIBLY-SUBSCRIPTEDUQ
)@@G@@@D@@@@ VARIABLE NAME, A CONSTANT, OR A FUNCTION PARAMETER.  @[@@@@      UR
)@@G@@@[@@@@      @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBEUS
)@@G@@R 1971 VERSION)         10-  2@[@@@@      @[@@@@      @[@@@@      @^@@@@UT
)@@G@@               EXAMPLES:@^@@@@               =========@[@@@@      @#@@@@UU
)@@G@@       TYPE (A):  @C@@@@               REQUEST DATE, ASSIGN TO TODAY(1) UV
)@@G@@@ @@@@               REQUEST ABORT  @ @@@@               REQUEST SWAIT  UW
)@@G@@@[@@@@      @#@@@@       TYPE (B):  @A@@@@               REQUEST IO,PACKUX
)@@G@@ET    @C@@@@               REQUEST CSF,VR,ASSIGN TO STATUS  @C@@@@      UY
)@@G@@         REQUEST CSF,$@ASG,T  TAPE,8C . $ @A@@@@               REQUEST FUZ
)@@G@@ACIL,ID(0)  @B@@@@               REQUEST TSWAP,$9      $    @[@@@@      VA
)@@G@@@#@@@@       TYPE (C):  @E@@@@               REQUEST READ,*.LOC.RTN.LS.1VB
)@@G@@8.V..LOC.CARDIM   @D@@@@               REQUEST PRINT,*0102K6.V.LOC.($MESVC
)@@G@@SAGE$)@C@@@@               REQUEST FORK,*1K6.V..LOC.LABEL   @[@@@@      VD
)@@G@@@[@@@@      @F@@@@       ALL OF THE ABOVE EXAMPLES ARE FROM MAD.  IN FORVE
)@@G@@TRAN, SIMPLY@F@@@@ REPLACE ANY OCCURRENCE OF $ BY '.  THERE IS CURRENTLYVF
)@@G@@ NO GUARAN- @C@@@@ TEED WAY TO LOAD REGISTER A1 BEFORE AN 'ER'.   @[@@@@VG
)@@G@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)   VH
)@@G@@      11-  1@[@@@@      @[@@@@      @[@@@@      @A@@@@ 11.   THE MECHANIVI
)@@G@@CS OF USING RALPH @[@@@@      @[@@@@      @[@@@@      @G@@@@       THE FVJ
)@@G@@IRST STEP IN COMPILING A PROGRAM UNDER RALPH IS TO CALL     @F@@@@ THE RVK
)@@G@@ALPH COMPILER WITH A VALID PROCESSOR-CALL CARD.  THE ONLY   @F@@@@ REQUIVL
)@@G@@RED FIELD ON THE PROCESSOR-CALL CARD IS THE NAME 'RALPH':   @[@@@@      VM
)@@G@@@]@@@@ @RALPH     @[@@@@      @E@@@@ A LANGUAGE SPECIFICATION (FORTRAN OVN
)@@G@@R MAD) CAN BE ADDED:    @[@@@@      @ @@@@ @RALPH,F        . FORTRAN    VO
)@@G@@@[@@@@      @^@@@@ @RALPH,M        . MAD  @[@@@@      @E@@@@ IF DESIRED,VP
)@@G@@ ONE MAY ADD A DECKNAME TO THE COMPILATION:     @[@@@@      @^@@@@ @RALPVQ
)@@G@@H,MI  <DECKNAME>  @[@@@@      @F@@@@ AND SO ON.  THE COMPLETE STRUCTURE VR
)@@G@@OF THE RALPH PROCESSOR-CONTROL@]@@@@ CARD IS    @[@@@@      @B@@@@ @RALPVS
)@@G@@H<OPTIONS>  <ELEMENT SPECIFICATIONS>@[@@@@      @F@@@@ WHERE <OPTIONS> IVT
)@@G@@S THE POSSIBLY NULL SET OF CALLING OPTIONS, AND @B@@@@ <ELEMENT SPECIFICVU
)@@G@@ATIONS> IS THE DES-     @G@@@@ CRIPTOR FOR THE LOCATION, NAME, VERSION, VV
)@@G@@ETC. OF THE SOURCE INPUT,     @F@@@@ RELOCATABLE OUTPUT, AND UPDATED SOUVW
)@@G@@RCE OUTPUT ELEMENT.  A DISCUS-@F@@@@ SION OF THESE TERMS IS POSTPONED FOVX
)@@G@@R A BRIEF DESCRIPTION OF THE  @^@@@@ 'PROGRAM FILE' CONCEPT.@[@@@@      VY
)@@G@@@[@@@@      @^@@@@ 11. 1.   PROGRAM FILES @[@@@@      @[@@@@      @F@@@@VZ
)@@G@@       ALL INTERMEDIATE STORAGE OF 'BULK MEDIA' ON THE 1108 UNDER @F@@@@WA
)@@G@@ EXEC 8 IS ON DRUM STORAGE.  ALL DRUM STORAGE IS DONE THROUGH     @F@@@@WB
)@@G@@ 'FILES'.  A 'FILE' ON DRUM IS A GROUP OF DRUM TRACKS WHICH HAS   @F@@@@WC
)@@G@@ BEEN ASSIGNED A NAME SO THAT IT MAY BE REFERENCED BY THE USER.   @F@@@@WD
)@@G@@ FOR SECURITY REASONS, IT IS NOT POSSIBLE TO REFERENCE A DRUM FILE@F@@@@WE
)@@G@@ EXCEPT THROUGH THE FILE HANDLER, WHICH CAN KEEP 'PRIVATE' VS.    @F@@@@WF
)@@G@@ 'PUBLIC' DISTINCTIONS ON FILES, AND WHICH CAN DEMAND 'PASSWORDS' @D@@@@WG
)@@G@@ IN ORDER TO PERMIT REFERENCE TO A PRIVILEGED FILE.   @[@@@@      @C@@@@WH
)@@G@@ 11. 1. 1.   TEMPORARY AND CATALOGUED FILES     @[@@@@      @F@@@@      WI
)@@G@@ THERE ARE TWO TYPES OF DRUM FILES:  TEMPORARY AND CATALO-  @F@@@@ GUED.WJ
)@@G@@  A TEMPORARY FILE IS DISCARDED AFTER USE; A CATALOGUED FILE@F@@@@ IS REWK
)@@G@@TAINED UNTIL EXPLICITLY REMOVED.  AS AN EXAMPLE, THE RALPH  @[@@@@*****^WL
)@@G@@@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         WM
)@@G@@11-  2@[@@@@      @[@@@@      @[@@@@      @F@@@@ PROCESSOR IS STORED IN WN
)@@G@@A CATALOGUED DRUM FILE NAMED 'LIB$', AND  @F@@@@ THE LIBRARY SUBROUTINESWO
)@@G@@ NECESSARY TO RUN A RALPH PROGRAM ARE     @F@@@@ STORED IN A CATALOGUED WP
)@@G@@DRUM FILE NAMED 'RLIB$'.  BOTH OF THESE   @G@@@@ FILES ARE PROTECTED BY WQ
)@@G@@PASSWORDS AND WRITE LOCKOUT AGAINST ALTERA-     @F@@@@ TION BY A MISGUIDWR
)@@G@@ED OR MALEVOLENT USER.  ALL FURTHER DISCUSSION  @A@@@@ WILL ASSUME TEMPOWS
)@@G@@RARY FILE USAGE.  @[@@@@      @F@@@@       TO CREATE A FILE THE '@ASG' CWT
)@@G@@ARD IS USED.  THE 'ASG' IS    @F@@@@ MNEMONIC FOR 'ASSIGN'; ONE ASSIGNS WU
)@@G@@A FILE AS NECESSARY.  IN SIMP-@B@@@@ LEST FORM, THE '@ASG' CARD IS SIMPLWV
)@@G@@Y     @[@@@@      @ @@@@ @ASG          <FILENAME>     @[@@@@      @G@@@@WW
)@@G@@ WHICH WILL ASSIGN A FILE NAMED <FILENAME>.  TO ENSURE THAT THIS IS     WX
)@@G@@@A@@@@ A TEMPORARY FILE, ADD A 'T' OPTION:@[@@@@      @ @@@@ @ASG,T     WY
)@@G@@   <FILENAME>     @[@@@@      @G@@@@ FOR A COMPLETE DISCUSSION OF ALL OFWZ
)@@G@@ THE MANY OPTIONS AVAILABLE FOR     @G@@@@ THE '@ASG' CARD AND ITS MANY XA
)@@G@@VARIATIONS, SEE CHAPTER 5 OF THE EXEC     @B@@@@ 8 PROGRAMMERS' REFERENCXB
)@@G@@E MANUAL, UP-4144.@[@@@@      @[@@@@      @F@@@@       A SPECIFIC USE OFXC
)@@G@@ A DRUM FILE IS TO DEDICATE IT TO HOLDING @F@@@@ PROGRAMS AND DATA CARD XD
)@@G@@IMAGES FOR THOSE PROGRAMS.  A PROGRAM     @F@@@@ STORED IN A PROGRAM FILXE
)@@G@@E IS CALLED AN 'ELEMENT' OF THAT PROGRAM  @F@@@@ FILE, OR SIMPLY A 'PROGXF
)@@G@@RAM ELEMENT'.  EVERY RUN IS ASSIGNED ONE  @E@@@@ PROGRAM FILE BY THE EXEXG
)@@G@@CUTIVE.  THIS FILE IS NAMED 'TPF$'  @E@@@@ (TEMPORARY PROGRAM FILE); ITSXH
)@@G@@ PURPOSE IS TO SERVE AS A     @F@@@@ BEHIND-THE-SCENES PROGRAM FILE FOR XI
)@@G@@PEOPLE WHO EITHER DON'T KNOW  @F@@@@ WHAT A PROGRAM FILE IS, OR WHO FOR XJ
)@@G@@REASONS OF PERSONAL PREFERENCE@G@@@@ OR ABHORRENCE OF KEYPUNCHING CHOOSEXK
)@@G@@ NOT TO USE REGULAR FILES.  THE     @F@@@@ CONCEPT OF A PROGRAM FILE HASXL
)@@G@@ PROVEN TO BE A DIFFICULT ONE TO    @F@@@@ CONVEY, AND COMPREHENSION OF XM
)@@G@@THE 'TPF$' MORE OFTEN THAN NOT LEADS@F@@@@ TO A PLATEAU OF UNDERSTANDINGXN
)@@G@@ SATISFACTORY TO THE CASUAL USER,   @F@@@@ WITH CONCORDANT UNWILLINGNESSXO
)@@G@@ TO LEARN ENOUGH TO GREATLY SIMPLIFY@F@@@@ THE AMOUNT OF WORK REQUIRED TXP
)@@G@@O PRODUCE A GIVEN PROGRAM.  THIS    @F@@@@ EXPLANATION IN THE FOLLOWING XQ
)@@G@@SECTIONS IS BASED ON THE PEDAGOGIC  @G@@@@ THEORY THAT IT IS EASIER TO AXR
)@@G@@BBREVIATE THAN TO EXTEND; THE TPF$ IS     @D@@@@ INTRODUCED AS A SPECIALXS
)@@G@@ CASE INSTEAD OF A FIRST CASE.@[@@@@      @B@@@@ 11. 1. 2.   INSERTING AXT
)@@G@@ PROGRAM ELEMENT  @[@@@@      @F@@@@       THE FIRST STEP IN USING YOUR XU
)@@G@@SHINY NEW PROGRAM FILE IS TO  @F@@@@ PUT A PROGRAM INTO IT.  THIS IS DONXV
)@@G@@E USING THE 'I' OPTION ON THE @F@@@@ PROCESSOR-CALL CARD.  A PROGRAM MUSXW
)@@G@@T BE GIVEN A NAME IF IT IS TO @F@@@@ BE PUT INTO A PROGRAM FILE, SO THATXX
)@@G@@ IT MAY BE RETRIEVED BY NAME. @#@@@@ THE CONSTRUCTION @[@@@@      @^@@@@XY
)@@G@@       <FILE>.<ELEMENT> @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RAXZ
)@@G@@LPH (DECEMBER 1971 VERSION)         11-  3@[@@@@      @[@@@@      @[@@@@YA
)@@G@@      @[@@@@      @F@@@@ MEANS A PROGRAM ELEMENT NAMED <ELEMENT> IN A FIYB
)@@G@@LE NAMED <FILE>.  @F@@@@ THE '<FILE>.' CONSTRUCTION IS SOMEWHAT LIKE AN YC
)@@G@@ADJECTIVE OF LOCA-@F@@@@ TION MODIFYING THE 'NOUN' <ELEMENT>.  BOTH <FILYD
)@@G@@E> AND <ELEMENT>  @A@@@@ MAY BE UP TO 12 CHARACTERS LONG.   @[@@@@      YE
)@@G@@@F@@@@       ASSEMBLING SEVERAL CONCEPTS TOGETHER FOR AN EXAMPLE, THE   YF
)@@G@@@[@@@@ CARD @[@@@@      @ @@@@ @RALPH,I   MYFILE.EIGENVALUE @[@@@@      YG
)@@G@@@E@@@@ WILL CAUSE THE CARDS FOLLOWING TO BE WRITTEN INTO THE FILE @F@@@@YH
)@@G@@ 'MYFILE' AND GIVEN THE NAME 'EIGENVALUE'.  THIS OUTPUT TO DRUM IS@D@@@@YI
)@@G@@ DONE IN ADDITION TO COMPILING THE CARDS AS A PROGRAM.@[@@@@      @B@@@@YJ
)@@G@@ 11. 1. 3.   COMPILING FROM A PROGRAM FILE@[@@@@      @F@@@@       A PROYK
)@@G@@GRAM MAY BE COMPILED FROM THE DRUM, PROVIDED THAT IT  @F@@@@ HAS PREVIOUYL
)@@G@@SLY BEEN PUT THERE.  THE REFERENCE IS THE SAME, ONLY  @A@@@@ OMIT THE 'IYM
)@@G@@' OPTION:  THE CARD     @[@@@@      @A@@@@ @RALPH        MYFILE.EIGENVALYN
)@@G@@UE    @[@@@@      @F@@@@ WILL CAUSE THE PROGRAM SAVED INTO THE FILE 'MYFYO
)@@G@@ILE' BY THE NAME  @F@@@@ 'EIGENVALUE' TO BE COMPILED WITH NO FURTHER ADOYP
)@@G@@.  IT CAN BE TEM- @F@@@@ PORARILY MODIFIED (FOR THE PURPOSES OF THE PRESYQ
)@@G@@ENT COMPILATION   @F@@@@ ONLY) BY USING SOURCE MODIFICATION CARDS.  SOURYR
)@@G@@CE MODIFICATION   @F@@@@ CARDS ENABLE THE PROGRAMMER TO MODIFY, EITHER TYS
)@@G@@EMPORARILY OR     @F@@@@ PERMANENTLY, A PROGRAM WHICH IS SAVED ON THE DRYT
)@@G@@UM.  SEE SECTION  @F@@@@ 10.1.10 FOR A COMPLETE DESCRIPTION OF SOURCE MOYU
)@@G@@DIFICATION CARDS. @[@@@@      @E@@@@ 11. 1. 4.   UPDATING A PROGRAM IN AYV
)@@G@@ PROGRAM FILE.  CYCLES. @[@@@@      @G@@@@       IF IT IS DESIRED TO MAKYW
)@@G@@E THE SOURCE UPDATES A PERMANENT PART     @F@@@@ OF THE SAVED PROGRAM, IYX
)@@G@@.E. TO UPDATE THE PROGRAM ITSELF RATHER   @F@@@@ THAN JUST UPDATE TEMPORYY
)@@G@@ARILY FOR ONE COMPILATION, USE THE 'U'    @A@@@@ OPTION ON THE PROCESSORYZ
)@@G@@-CALL CARD: @[@@@@      @ @@@@ @RALPH,U  MYFILE.EIGENVALUE  @[@@@@      ZA
)@@G@@@F@@@@ THIS WILL CAUSE A NEW 'CYCLE' OF THE SAVED PROGRAM TO BE GENERA- ZB
)@@G@@@F@@@@ TED.  A 'CYCLE' IS A SAFETY FEATURE:  IF AN UPDATE TO A PROGRAM  ZC
)@@G@@@G@@@@ MAKES IT STOP WORKING, THEN IT IS POSSIBLE TO EXTRACT THE PREVIOUZD
)@@G@@S     @F@@@@ CYCLE, WHICH IS THE PROGRAM BEFORE MODIFICATION, AND TRY AGZE
)@@G@@AIN.  @F@@@@ THE 'BASE LEVEL' UNUPDATED ELEMENT INPUT VIA THE 'I' OPTIONZF
)@@G@@ IS   @F@@@@ CYCLE 0, THE FIRST UPDATE TO THIS PROGRAM ELEMENT PRODUCES ZG
)@@G@@CYCLE @F@@@@ 1, AND SO ON.  FIVE CYCLES ARE RETAINED, SO THAT IF A PROGRZH
)@@G@@AM HAS@F@@@@ BEEN UPDATED 12 TIMES, PRODUCING CYCLE 12, CYCLES 8,9,10,11ZI
)@@G@@, AND @F@@@@ 12 ARE AVAILABLE.  IF NO CYCLE IS SPECIFIED, THE LATEST CYCZJ
)@@G@@LE IS @F@@@@ ALWAYS ASSUMED.  TO COMPILE AN OLDER CYCLE AND TRY AGAIN, PZK
)@@G@@LACE  @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971ZL
)@@G@@ VERSION)         11-  4@[@@@@      @[@@@@      @[@@@@      @E@@@@ THE CZM
)@@G@@YCLE NUMBER IN PARENTHESES AFTER THE ELEMENT NAME:    @[@@@@      @A@@@@ZN
)@@G@@       <FILE>.<ELEMENT>(<CYCLE>)    @[@@@@      @F@@@@ SO THAT TO GO BACZO
)@@G@@K TO CYCLE 11 OF OUR PROGRAM 'EIGENVALUE', ONE  @]@@@@ WOULD PUNCH@[@@@@ZP
)@@G@@      @A@@@@ @RALPH        MYFILE.EIGENVALUE(11)@[@@@@      @[@@@@      ZQ
)@@G@@@A@@@@ 11. 1. 5.   ALTERNATE VERSIONS     @[@@@@      @F@@@@       SEVERZR
)@@G@@AL 'VERSIONS' OF A PROGRAM MAY BE KEPT AS TOTALLY     @F@@@@ SEPARATE ENZS
)@@G@@TITIES WITH THE SAME NAME, IF THE 'VERSION' QUALIFIER @ @@@@ IS USED ON ZT
)@@G@@AN ELEMENT NAME:  @[@@@@      @A@@@@       <FILE>.<ELEMENT>/<VERSION>   ZU
)@@G@@@B@@@@ OR    <FILE>.<ELEMENT>/<VERSION>(<CYCLE>)@[@@@@      @F@@@@ THE VZV
)@@G@@ERSION NAME <VERSION> MAY BE UP TO 12 CHARACTERS LONG.  A   @F@@@@ PROGRZW
)@@G@@AM WITH A NON-NULL VERSION MAY BE CREATED FROM AN EXISTING  @F@@@@ PROGRZX
)@@G@@AM EITHER VIA THE SOURCE-OUTPUT FIELD (DESCRIBED LATER IN   @F@@@@ THIS ZY
)@@G@@SECTION), OR VIA ONE OF THE PROGRAM-UTILITY STATEMENTS DES- @F@@@@ CRIBEZZ
)@@G@@D IN CHAPTER 13 OF THE EXEC 8 PROGRAMMERS' REFERENCE MANUAL,@F@@@@ UP-41AA
)@@G@@44.  A PROGRAM WITH A VERSION SPECIFIED MAY ALSO BE INSERTED@^@@@@ DIRECAB
)@@G@@TLY FROM CARDS:   @[@@@@      @A@@@@ @RALPH,I  MYFILE.EIGENVALUE/NEW    AC
)@@G@@@[@@@@      @F@@@@ WHICH WILL BE KEPT DISTINCT FROM 'MYFILE.EIGENVALUE',AD
)@@G@@ ALLOWING   @C@@@@ BOTH PROGRAMS TO BE DEVELOPED INDEPENDENTLY.   @[@@@@AE
)@@G@@      @A@@@@ 11. 1. 6.   RELOCATABLE ELEMENTS   @[@@@@      @F@@@@      AF
)@@G@@ THE OUTPUT OF A COMPILATION IS A 'RELOCATABLE ELEMENT', OR @F@@@@ 'OBJEAG
)@@G@@CT PROGRAM', WHICH IS A PROGRAM IN A BINARY MACHINE LANGUAGE@G@@@@ TOGETAH
)@@G@@HER WITH ENOUGH 'RELOCATION INFORMATION' TO ALLOW THE PROGRAM     @E@@@@AI
)@@G@@ TO BE LINKED UP WITH OTHER SUBROUTINES TO FORM AN 'ABSOLUTE@E@@@@ ELEMEAJ
)@@G@@NT', WHICH IS A PROGRAM READY FOR EXECUTION.  THE NAME@F@@@@ 'RELOCATABLAK
)@@G@@E' MEANS THAT THE PROGRAM MAY BE LOADED ANYWHERE IN   @F@@@@ MEMORY, ALLAL
)@@G@@ OF ITS REFERENCES TO ITSELF ARE RELATIVE WITH RESPECT@A@@@@ TO THE BEGIAM
)@@G@@NNING OF THE PROGRAM.   @[@@@@      @F@@@@       A RELOCATABLE ELEMENT IAN
)@@G@@S ALSO KEPT IN A PROGRAM FILE; TO   @G@@@@ DISTINGUISH IT FROM A CARD-IMAO
)@@G@@AGE SOURCE PROGRAM ELEMENT THE LATTER     @F@@@@ IS BETTER CALLED A 'SYMAP
)@@G@@BOLIC ELEMENT'.  A SYMBOLIC ELEMENT CON-  @G@@@@ SISTS OF CARD IMAGES, AAQ
)@@G@@ RELOCATABLE ELEMENT IS THE CODED OUTPUT OF     @F@@@@ THE COMPILATION OAR
)@@G@@F A SYMBOLIC ELEMENT.  RELOCATABLE ELEMENTS ARE @F@@@@ NAMED IN EXACTLY AS
)@@G@@THE SAME WAY AS SYMBOLIC ELEMENTS; IN FACT,     @F@@@@ UNLESS SPECIFIED AT
)@@G@@EXPLICITLY, THE SAME NAME AND FILE ARE USED FOR @[@@@@*****^@G@@@@A GUIDAU
)@@G@@E TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         11-  5@[@@@@AV
)@@G@@      @[@@@@      @[@@@@      @F@@@@ THE RELOCATABLE ELEMENT AS FOR THE AW
)@@G@@SYMBOLIC.  ONE SPECIFIES THE  @F@@@@ RELOCATABLE ELEMENT NAME, IF DESIREAX
)@@G@@D, VIA A SECOND FIELD ON THE  @^@@@@ PROCESSOR-CALL CARD:   @[@@@@      AY
)@@G@@@E@@@@ @RALPH  <SYMBOLIC ELEMENT NAME>,<RELOCATABLE ELEMENT NAME> @[@@@@AZ
)@@G@@      @C@@@@ WHERE <RELOCATABLE ELEMENT NAME> CONSISTS OF   @[@@@@      BA
)@@G@@@ @@@@       <FILE>.<NAME>/<VERSION>@[@@@@      @F@@@@ BECAUSE IT IS NOTBB
)@@G@@ FEASIBLE TO UPDATE A RELOCATABLE ELEMENT, NO   @E@@@@ CYCLES OR CYCLE LBC
)@@G@@EVELS ARE KEPT OR PERMITTED IN THE NAME.  @[@@@@      @F@@@@       BECAUBD
)@@G@@SE A MISSING RELOCATABLE OUTPUT FIELD WILL BE COPIED  @F@@@@ FROM THE FIBE
)@@G@@RST, OR 'SOURCE INPUT' FIELD, THE FOLLOWING TWO CON-  @A@@@@ STRUCTIONS BF
)@@G@@ARE EQUIVALENT EXAMPLES:@[@@@@      @ @@@@ @RALPH  MYFILE.EIGENVALUE/NEWBG
)@@G@@@D@@@@ @RALPH  MYFILE.EIGENVALUE/NEW,MYFILE.EIGENVALUE/NEW  @[@@@@      BH
)@@G@@@F@@@@ THE SECOND FORM EXPLICITLY SPECIFIES A RELOCATABLE NAME, BUT IT  BI
)@@G@@@G@@@@ SPECIFIED THE SAME NAME WHICH WOULD BE ASSUMED FROM THE FIRST.  TBJ
)@@G@@O     @D@@@@ PUT THE RELOCATABLE OUTPUT OF THE COMPILATION OF     @F@@@@BK
)@@G@@ MYFILE.EIGENVALUE/NEW INTO 'OTHERFILE' AND NAME IT 'PROG1', ONE  @#@@@@BL
)@@G@@ WOULD PUNCH:     @[@@@@      @C@@@@ @RALPH  MYFILE.EIGENVALUE/NEW,OTHERBM
)@@G@@FILE.PROG1  @[@@@@      @F@@@@ IF THE PROGRAM IS BEING INPUT INITIALLY FBN
)@@G@@ROM CARDS, ONE MAY IF   @E@@@@ DESIRED SAVE ONLY THE RELOCATABLE OUTPUT:BO
)@@G@@  THE STATEMENT   @[@@@@      @ @@@@ @RALPH,I  ,OTHERFILE.PROG1   @[@@@@BP
)@@G@@      @F@@@@ WILL INPUT AN ELEMENT FROM CARDS WITHOUT SAVING IT ANYWHEREBQ
)@@G@@,     @B@@@@ SAVING ONLY THE RELOCATABLE ELEMENT.     @[@@@@      @C@@@@BR
)@@G@@ 11. 1. 7.   SOURCE OUTPUT.  RENAMING AN UPDATE.@[@@@@      @F@@@@      BS
)@@G@@ IT IS OFTEN CONVENIENT TO HAVE THE ABILITY TO CHANGE A     @E@@@@ PROGRBT
)@@G@@AM, BUT ASSIGN THE NEW VERSION A SEPARATE NAME WITHOUT@A@@@@ ALTERING THBU
)@@G@@E OLDER VERSION.  THUS, @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RABV
)@@G@@LPH (DECEMBER 1971 VERSION)         11-  6@[@@@@      @[@@@@      @[@@@@BW
)@@G@@      @ @@@@ @RALPH,U  <PROGRAM-NAME>     @[@@@@      @F@@@@ WILL UPDATEBX
)@@G@@ <PROGRAM-NAME> ACCORDING TO THE SOURCE  MODIFICATION @F@@@@ CARDS WHICHBY
)@@G@@ FOLLOW.  THE ADDITION OF A THIRD FIELD, PAST THE     @F@@@@ RELOCATABLEBZ
)@@G@@ OUTPUT FIELD, PERMITS THIS UPDATE TO BE MADE AND     @G@@@@ RENAMED WITCA
)@@G@@HOUT ALTERING THE ORIGINAL.  THIS THIRD FIELD IS CALLED     @C@@@@ THE 'CB
)@@G@@SOURCE OUTPUT' FIELD:  THE CONSTRUCTION   @[@@@@      @C@@@@ @RALPH  <PRCC
)@@G@@OGRAM-NAME>,,<OUTPUT-PROGRAM-NAME>  @[@@@@      @G@@@@ WILL CAUSE A NEW CD
)@@G@@PROGRAM TO BE GENERATED FROM THE EXISTING PROGRAM     @F@@@@ <PROGRAM-NACE
)@@G@@ME>.  THE SOURCE MODIFICATION CARDS WHICH FOLLOW ARE  @G@@@@ APPLIED TO CF
)@@G@@<PROGRAM-NAME> TO PRODUCE <OUTPUT-PROGRAM-NAME> WITHOUT     @F@@@@ ALTERCG
)@@G@@ING THE ORIGINAL <PROGRAM-NAME>.  FOR EXAMPLE, THE STATEMENT@[@@@@      CH
)@@G@@@D@@@@ @RALPH  MYFILE.EIGENVALUE,,MYFILE.EIGENVALUE/NEW     @[@@@@      CI
)@@G@@@F@@@@ WILL PRODUCE A PROGRAM ELEMENT NAMED 'EIGENVALUE/NEW' IN THE FILECJ
)@@G@@@F@@@@ 'MYFILE' BY APPLYING THE SOURCE MODIFICATION CARDS TO THE ELEMENTCK
)@@G@@@F@@@@ 'EIGENVALUE' IN FILE 'MYFILE'.  THE ORIGINAL, 'EIGENVALUE', WILL CL
)@@G@@@#@@@@ NOT BE ALTERED.  @[@@@@      @F@@@@       THE SOURCE OUTPUT FIELDCM
)@@G@@ MAY NOT BE USED IN CONJUNCTION WITH@F@@@@ THE 'I' OR 'U' OPTIONS.  IN TCN
)@@G@@HE ABOVE EXAMPLE, IF ONE WISHES TO  @]@@@@ SPECIFY A  @G@@@@ SOURCE OUTPCO
)@@G@@UT FIELD WITHOUT A RELOCATABLE OUTPUT FIELD, TWO CONSE-     @F@@@@ CUTIVCP
)@@G@@E COMMAS DENOTE A NULL RELOCATABLE OUTPUT FIELD.  REGARDLESS@F@@@@ OF THCQ
)@@G@@E CYCLE LEVEL OF THE SOURCE INPUT ELEMENT, THE SOURCE OUTPUT@^@@@@ ELEMECR
)@@G@@NT IS CYCLE 0.    @[@@@@      @ @@@@ 11. 1. 8.   FILE QUALIFIERS  @[@@@@CS
)@@G@@      @F@@@@       IN ORDER TO PREVENT CONFLICT BETWEEN USERS WHO HAVE UCT
)@@G@@NKNO- @F@@@@ WINGLY CREATED FILES WITH THE SAME NAME, THE UP-TO-12 CHARACU
)@@G@@CTER  @E@@@@ 'PROJECT' OR 'NAME' FIELD FROM THE '@RUN' CARD IS USED AS ACV
)@@G@@@F@@@@ 'QUALIFIER' FOR ALL FILES CREATED OR RE REFERENCED WITHIN THAT   CW
)@@G@@@F@@@@ RUN.  IF ANOTHER USER HAS DECLARED HIS CATALOGUED FILE TO BE     CX
)@@G@@@F@@@@ 'PUBLIC', THEN IT MAY BE REFERENCED REGARDLESS OF ONES' OWN PRO- CY
)@@G@@@E@@@@ JECT QUALIFIER BY ADDING A QUALIFIER TO THE FILE REFERENCE:@[@@@@CZ
)@@G@@      @C@@@@       <QUALIFIER>*<FILE>.<ELEMENT>/<VERSION>   @[@@@@      DA
)@@G@@@F@@@@ FOR EXAMPLE, IF A USER NAMED 'JONES' HAS CATALOGUED A PUBLIC FILEDB
)@@G@@@F@@@@ NAMED 'LIBRARY', AND IT IS DESIRED TO COMPILE A PROGRAM NAMED    DC
)@@G@@@G@@@@ 'ANALYZE' FROM THIS FILE, THE CORRECT PROCESSOR-CALL CARD WOULD BDD
)@@G@@E     @]@@@@ OF THE FORM@[@@@@      @C@@@@ @RALPH  JONES*LIBRARY.ANALYZEDE
)@@G@@,FILE.ANALYZE     @[@@@@      @F@@@@ BECAUSE MR. JONES MIGHT HAVE TAKEN DF
)@@G@@THE PRECAUTION OF ADDING A    @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WDG
)@@G@@ITH RALPH (DECEMBER 1971 VERSION)         11-  7@[@@@@      @[@@@@      DH
)@@G@@@[@@@@      @F@@@@ 'WRITE KEY' TO HIS FILE TO FORBID THOSE WHO CANNOT PRDI
)@@G@@OVIDE THE   @F@@@@ PASSWORD FROM WRITING INTO IT, THE RELOCATABLE OUTPUTDJ
)@@G@@ SHOULD BE  @A@@@@ DIRECTED TO ANOTHER FILE AS SHOWN. @[@@@@      @F@@@@DK
)@@G@@       ALL SYSTEM LIBRARY FILES ARE PUBLIC FILES, AND GENERALLY   @F@@@@DL
)@@G@@ HAVE A 'WRITE KEY' IN ADDITION TO BEING 'READ ONLY' FILES, FOR   @G@@@@DM
)@@G@@ EXTRA PROTECTION.  THE USUAL QUALIFIER FOR SYSTEM LIBRARY FILES IS     DN
)@@G@@@#@@@@ 'SYS$':  THUS    @[@@@@      @#@@@@       SYS$*LIB$. @#@@@@ AND  DO
)@@G@@ SYS$*RLIB$.@[@@@@      @F@@@@ ARE THE COMPLETE NAMES OF THE SYSTEM PROCDP
)@@G@@ESSOR AND SUBROUTINE    @ @@@@ LIBRARIES, RESPECTIVELY.     @[@@@@      DQ
)@@G@@@C@@@@ 11. 1. 9.   ASSUMED ENTRIES FOR NULL FIELDS    @[@@@@      @G@@@@DR
)@@G@@       INCLUDING READ-KEY, WRITE-KEY, AND FILE CYCLE, NONE OF WHICH     DS
)@@G@@@F@@@@ IS DISCUSSED IN THIS MANUAL, THE COMPLETE REFERENCE TO AN ARBI-  DT
)@@G@@@#@@@@ TRARY ELEMENT IS @[@@@@      @G@@@@ <QUALIFIER>*<FILE>(<F-CYCLE>)DU
)@@G@@/<READ>/<WRITE>.<ELEMT>/<VERS>(<CYC>)     @[@@@@      @F@@@@ WHICH IS INDV
)@@G@@CREDIBLY LONG.  ANY OR ALL OF THESE FIELDS MAY BE     @F@@@@ OMITTED, ASDW
)@@G@@ MAY THE PUNCTUATION ASSOCIATED WITH DEFINING THE     @B@@@@ OMITTED FIEDX
)@@G@@LD.  THE ASSUMED ENTRIES ARE: @[@@@@      @D@@@@       <QUALIFIER>      DY
)@@G@@(PROJECT FIELD FROM RUN CARD) @ @@@@       <FILE>           TPF$  @ @@@@DZ
)@@G@@       <FCYCLE>         0     @A@@@@       <READ>            (BLANK)    EA
)@@G@@@A@@@@       <WRITE>           (BLANK)    @ @@@@       <ELEMT>          EB
)@@G@@NAME$ @A@@@@       <VERSION>         (BLANK)    @E@@@@       <CYC>      EC
)@@G@@       (CURRENT CYCLE OF THE ELEMENT)     @[@@@@      @[@@@@      @G@@@@ED
)@@G@@       THE FILE NAMED 'TPF$' IS ASSIGNED TO EVERY RUN BY THE EXECU-     EE
)@@G@@@F@@@@ TIVE; THUS IT IS ALWAYS SAFE TO ASSUME 'TPF$' BECAUSE IT WILL    EF
)@@G@@@F@@@@ ALWAYS BE THERE.  THE BASIC 'ALL FIELDS VOID' PROCESSOR CALL     EG
)@@G@@@[@@@@      @]@@@@ @RALPH     @[@@@@      @B@@@@ IS EQUIVALENT TO (FOR AEH
)@@G@@ MAIN PROGRAM)    @[@@@@      @^@@@@ @RALPH,SI  ,TPF$.NAME$ @[@@@@      EI
)@@G@@@G@@@@       NOTICE THAT THE ONLY ELEMENT ACTUALLY GENERATED IN THIS CASEJ
)@@G@@E     @F@@@@ IS THE RELOCATABLE ELEMENT.  IF THE 'ALL FIELDS VOID' FEATUEK
)@@G@@RE IS @F@@@@ USED ON A SUBROUTINE, THE NAME OF THE FIRST ENTRY TO THE SUEL
)@@G@@BROU- @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971EM
)@@G@@ VERSION)         11-  8@[@@@@      @[@@@@      @[@@@@      @C@@@@ TINE EN
)@@G@@IS USED IN PLACE OF THE NAME 'NAME$'.     @[@@@@      @F@@@@       A FUREO
)@@G@@THER TYPE OF ABBREVIATION IS ALLOWED:  IF THE RELOCA- @F@@@@ TABLE OUTPUEP
)@@G@@T FIELD REFERS TO THE SAME FILE AS THE SOURCE INPUT   @F@@@@ FIELD, THE EQ
)@@G@@R.O. FIELD MAY BE BEGUN WITH A PERIOD, AND THE FILE   @D@@@@ NAME WILL BER
)@@G@@E CARRIED OVER FROM THE PREVIOUS FIELD:   @[@@@@      @B@@@@ @RALPH  <FIES
)@@G@@LE>.<ELEMENT>,<FILE>.<ELEMENT>@[@@@@      @ @@@@ MAY BE WRITTEN AS SIMPLET
)@@G@@Y     @[@@@@      @A@@@@ @RALPH  <FILE>.<ELEMENT>,.<ELEMENT>@[@@@@      EU
)@@G@@@F@@@@ AND THE LEADING PERIOD IS SUFFICIENT TO INDICATE THE ABBREVIATIONEV
)@@G@@@[@@@@ HERE.@[@@@@      @E@@@@       ASSUMED OPTIONS ARE DISCUSSED IN LAEW
)@@G@@TER SECTIONS.     @[@@@@      @B@@@@ 11. 1.10.   SOURCE MODIFICATION CAREX
)@@G@@DS    @[@@@@      @F@@@@       DIRECT MODIFICATION OF A SYMBOLIC PROGRAMEY
)@@G@@ ELEMENT WHICH HAS@G@@@@ BEEN STORED ON DRUM MAY BE EFFECTED VIA THE TEXEZ
)@@G@@T EDITOR, '@ED', AS     @F@@@@ DISCUSSED IN SECTION 15.3 OF THE PROGRAMMFA
)@@G@@ERS' REFERENCE MANUAL,  @F@@@@ UP-4144.  MINOR MODIFICATIONS MAY BE MADEFB
)@@G@@ AS THE PROGRAM IS BEING@]@@@@ COMPILED.  @[@@@@      @F@@@@       WHEN FC
)@@G@@A PROGRAM LISTING IS PRINTED BY RALPH, THE CARD NUMBER@F@@@@ OF EACH CARFD
)@@G@@D IS PRINTED IN THE LEFT MARGIN.  ALL MODIFICATIONS   @F@@@@ MADE VIA THFE
)@@G@@E COMPILER MUST BE MADE BY CARD NUMBER.  MODIFICATIONS@F@@@@ MUST BE MADFF
)@@G@@E IN STRICTLY INCREASING ORDER:  ANY CHANGE TO CARD 1 @F@@@@ MUST BE PHYFG
)@@G@@SICALLY BEFORE A CHANGE TO CARD 2 IN THE MODIFICATION @]@@@@ CARD DECK. FH
)@@G@@@[@@@@      @F@@@@       A SOURCE MODIFICATION CARD IS DISTINGUISHED FROFI
)@@G@@M A SOURCE  @F@@@@ PROGRAM CARD BY THE PRESENCE OF A HYPHEN (-) IN COLUMFJ
)@@G@@N 1.  SINCE @F@@@@ NO SYNTACTICALLY CORRECT SOURCE CARD MAY CONTAIN A HYFK
)@@G@@PHEN IN     @F@@@@ COLUMN 1, THIS WILL CAUSE NO AMBIGUITY.  ALL MODIFICAFL
)@@G@@TIONS ARE ON@G@@@@ A COMPLETE CARD-BY-CARD BASIS; NO PARTIAL CARD IMAGE FM
)@@G@@MODIFICATIONS     @#@@@@ MAY BE MADE.     @[@@@@      @A@@@@ 11. 1.10. 1FN
)@@G@@.   INSERTING NEW CARDS @[@@@@      @E@@@@       THE FORM OF AN 'INSERT'FO
)@@G@@ SOURCE MODIFICATION CARD IS: @[@@@@      @#@@@@ -<CARD NUMBER>   @[@@@@FP
)@@G@@      @F@@@@       ALL OF THE CARDS UNTIL THE NEXT '-' CARD OR '@' CARD FQ
)@@G@@ARE   @B@@@@ ADDED *FOLLOWING*  CARD <CARD NUMBER>.   @[@@@@      @B@@@@FR
)@@G@@ 11. 1.10. 2.   DELETING EXISTING CARDS   @[@@@@*****^@G@@@@A GUIDE TO PFS
)@@G@@ROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         11-  9@[@@@@      FT
)@@G@@@[@@@@      @[@@@@      @[@@@@      @E@@@@       THE FORM OF A 'DELETE' FU
)@@G@@SOURCE MODIFICATION CARD IS:  @[@@@@      @ @@@@ -<START DELETE>,<STOP DFV
)@@G@@ELETE>@[@@@@      @G@@@@       ALL CARDS FROM CARD NUMBER <START DELETE>FW
)@@G@@ THROUGH AND INCLU-     @C@@@@ DING CARD NUMBER <STOP DELETE> ARE DELETEFX
)@@G@@D.    @[@@@@      @A@@@@ 11. 1.10. 3.   DELETE WITH INSERT  @[@@@@      FY
)@@G@@@F@@@@       IF SOURCE CARDS FOLLOW A 'DELETE' CARD, THEY WILL BE INSER-FZ
)@@G@@@G@@@@ TED IN PLACE OF THE DELETED LINE IMAGES.  THERE NEED BE NO CORRESGA
)@@G@@PON-  @G@@@@ DENCE OF COUNT; AS MANY IMAGES AS DESIRED MAY BE INSERTED IGB
)@@G@@N PLACE     @B@@@@ OF ONE DELETED IMAGE, OR VICE VERSA.     @[@@@@      GC
)@@G@@@C@@@@ 11. 1.10. 4.   MISCELLANEOUS CONSIDERATIONS    @[@@@@      @F@@@@GD
)@@G@@       WHEN OPERATING FROM A TELETYPE, ONE MUST SIGNAL THE END OF @F@@@@GE
)@@G@@ THE MODIFICATION CARD STREAM BY AN END-OF-FILE (ANY CARD WITH THE@F@@@@GF
)@@G@@ MASTER SPACE CHARACTER '@' IN COLUMN 1 IS AN END-OF-FILE).  IT IS@F@@@@GG
)@@G@@ CONSIDERED AN ERROR TO UPDATE PAST THE END OF THE DECK, OR TO    @F@@@@GH
)@@G@@ DELETE THE SAME CARD TWICE, OR TO MODIFY IN OTHER THAN STRICTLY  @F@@@@GI
)@@G@@ INCREASING CARD NUMBER ORDER.  THE 'W' OPTION WILL CAUSE THE     @F@@@@GJ
)@@G@@ SOURCE MODIFICATIONS TO BE INDICATED ON THE SOURCE LISTING IN THE@#@@@@GK
)@@G@@ LEFT MARGIN.     @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DGL
)@@G@@ECEMBER 1971 VERSION)         11- 10@[@@@@      @[@@@@      @[@@@@      GM
)@@G@@@[@@@@      @[@@@@      @A@@@@ 11. 2.   SOURCE STATEMENT FORMAT   @[@@@@GN
)@@G@@      @[@@@@      @[@@@@      @A@@@@ 11. 2. 1.   PROGRAM STATEMENTS     GO
)@@G@@@[@@@@      @F@@@@       FORTRAN SOURCE STATEMENTS ARE PUNCHED IN COLUMNGP
)@@G@@S 1 TO 72 OF@F@@@@ THE SOURCE CARD, WITH COLUMNS 1 TO 5 RESERVED FOR THEGQ
)@@G@@ STATEMENT  @F@@@@ LABEL.  COLUMNS 73 TO 80 ARE IGNORED, AND MAY CONTAINGR
)@@G@@ ANY SORT OF@F@@@@ IDENTIFICATION INFORMATION.  IF A STATEMENT IS TOO LOGS
)@@G@@NG TO FIT ON@F@@@@ ONE CARD, IT MAY BE CONTINUED STARTING IN COLUMN 7 OFGT
)@@G@@ THE NEXT   @G@@@@ CARD IF A NONBLANK, NONZERO CHARACTER IS PLACED IN COGU
)@@G@@LUMN 6 OF THE     @]@@@@ NEXT CARD. @[@@@@      @G@@@@       MAD SOURCE GV
)@@G@@STATEMENTS ARE PUNCHED IN COLUMNS 12 TO 72 OF THE     @F@@@@ SOURCE CARDGW
)@@G@@, WITH COLUMNS 1 THROUGH 10 RESERVED FOR A STATEMENT  @F@@@@ LABEL.  IF GX
)@@G@@A STATEMENT IS TOO LONG TO FIT ON ONE CARD, IT MAY BE @F@@@@ CONTINUED SGY
)@@G@@TARTING IN COLUMN 12 OF THE NEXT CARD IF A DIGIT PUNCH@F@@@@ (0 TO 9) ISGZ
)@@G@@ PLACED IN COLUMN 11 OF THE NEXT CARD.  IF MORE THAN 1@F@@@@ CONTINUATIOHA
)@@G@@N CARD IS USED, THE CONTINUATION DIGITS NEED NOT BE   @]@@@@ DIFFERENT. HB
)@@G@@@[@@@@      @F@@@@       UP TO 660 NON-BLANK CHARACTERS OVER ANY NUMBER HC
)@@G@@OF SOURCE   @F@@@@ CARDS MAY BE INCLUDED; THIS IS THE EQUIVALENT OF 20 FHD
)@@G@@ULLY-PACKED @F@@@@ CONTINUATION CARDS.  IF CARDS ARE NOT FULLY PACKED, MHE
)@@G@@ORE MAY BE  @F@@@@ USED.  THERE IS NO INSTANCE IN EITHER THE FORTRAN OR HF
)@@G@@MAD LANGUAGE@F@@@@ WHERE MORE CARDS CAN BE REQUIRED; SIMPLIFICATION OF LHG
)@@G@@OCAL CODING @F@@@@ TO MORE THAN 1 STATEMENT CAN ALWAYS PERFORM THE EQUIVHH
)@@G@@ALENT FUNC- @D@@@@ TION OF A LONG STATEMENT WITH SEVERAL SHORT ONES.    HI
)@@G@@@[@@@@      @[@@@@      @A@@@@ 11. 2. 2.   REMARK (COMMENT) CARDS @[@@@@HJ
)@@G@@      @[@@@@      @F@@@@       A REMARK (COMMENT) CARD IS INCLUDED IN A HK
)@@G@@SOURCE PROGRAM FOR@F@@@@ DOCUMENTATION PURPOSES.  IN FORTRAN, THE CHARACHL
)@@G@@TER 'C' IN COLUMN @F@@@@ 1, OR IN MAD AN 'R' IN COLUMN 11, WILL CAUSE THHM
)@@G@@E REMAINDER OF THE@A@@@@ CARD TO BE PRINTED AND IGNORED.    @[@@@@      HN
)@@G@@@B@@@@ 11. 2. 3.   CARD-TRUNCATION CHARACTER    @[@@@@      @F@@@@      HO
)@@G@@ IF IT IS DESIRED TO PUT A COMMENT AT THE END OF THE STATE- @F@@@@ MENT HP
)@@G@@TO WHICH IT REFERES, RATHER THAN PLACING IT ON A SEPARATE   @F@@@@ CARD,HQ
)@@G@@ THE CHARACTER (@) WILL CAUSE THE COMPILER TO TREAT THE REST@D@@@@ OF THHR
)@@G@@E STATEMENT IN WHICH IT OCCURS AS A COMMENT.    @[@@@@      @A@@@@ 11. 2HS
)@@G@@. 4.   SOURCE LISTING CONTROL @[@@@@      @[@@@@*****^@G@@@@A GUIDE TO PHT
)@@G@@ROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         11- 11@[@@@@      HU
)@@G@@@[@@@@      @[@@@@      @F@@@@       THE CHARACTER '-' IN COLUMN 11 OF AHV
)@@G@@ MAD SOURCE STATEMENT   @F@@@@ WILL CAUSE THE LISTING TO BE DOUBLE-SPACEHW
)@@G@@D BEFORE THAT CARD.  THE@G@@@@ CHARACTER '.' IN COLUMN 11 OF A MAD SOURCHX
)@@G@@E STATEMENT IS EQUIVALENT     @F@@@@ TO THE 'R' EXCEPT THAT A PAGE-UP WIHY
)@@G@@LL OCCUR BEFORE PRINTING THE  @F@@@@ CARD.  THE CHARACTER 'H' IN COLUMN HZ
)@@G@@11 OF A MAD SOURCE STATEMENT  @F@@@@ WILL CAUSE COLS 12 TO 72 TO BE TAKEIA
)@@G@@N AS A NEW HEADING FOR THE    @#@@@@ OUTPUT LISTING.  @[@@@@*****^@G@@@@IB
)@@G@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         11- 12IC
)@@G@@@[@@@@      @[@@@@      @[@@@@      @[@@@@      @[@@@@      @A@@@@ 11. 3ID
)@@G@@.   PROCESSOR-CALL OPTIONS    @[@@@@      @[@@@@      @G@@@@       THE OIE
)@@G@@PTIONS USED ON A CALL TO THE RALPH COMPILER ARE USED TO     @F@@@@ MODIFIF
)@@G@@Y STANDARD COMPILER ACTION.  AVAILABLE OPTIONS, AND THEIR   @ @@@@ MEANIIG
)@@G@@NGS, ARE LISTED BELOW.  @[@@@@      @[@@@@      @F@@@@ A     ALLOW COMPIIH
)@@G@@LATION TO CONTINUE REGARDLESS OF THE NUMBER OF  @#@@@@       ERRORS.    II
)@@G@@@G@@@@ C     CHECK ALL SUBSCRIPTS AT EXECUTION TIME, AND TERMINATE EXECUIJ
)@@G@@-     @D@@@@       TION WITH A MESSAGE IF THE RANGE IS EXCEEDED.  @D@@@@IK
)@@G@@ D     TURN ON THE DIAGNOSTIC SYSTEM.  SEE SEC. 11.6  @E@@@@ E     TERMIIL
)@@G@@NATE THE RUN IN ERROR IF THIS COMPILATION IS NOT@#@@@@       ERROR-FREE.IM
)@@G@@@A@@@@ F     COMPILE A FORTRAN PROGRAM.   @E@@@@ G*    INPUT FROM COMPREIN
)@@G@@SSED SYMBOLIC CARDS (COLS 1-80)     @D@@@@ H*    INPUT FROM COMPRESSED SIO
)@@G@@YMBOLIC (COLS 1-72)     @B@@@@ I*    INPUT A NEW PROGRAM FROM CARDS     IP
)@@G@@@D@@@@ J*    OUTPUT COMPRESSED SYMBOLIC TO PROGRAM FILE     @F@@@@ K*   IQ
)@@G@@ CHECK SEQUENCE NUMBERS OF CC73-80.  MUST BE USED WITH 'H'  @#@@@@      IR
)@@G@@ OPTION.    @B@@@@ L*    LIST THE OBJECT PROGRAM GENERATED. @ @@@@ M    IS
)@@G@@ COMPILE A MAD PROGRAM. @ @@@@ N*    GIVE NO PROGRAM LISTING@A@@@@ O    IT
)@@G@@ SUPPRESS ALL OPTIMIZATION.   @D@@@@ R     INVERT STATUS OF REMOTE FLAG IU
)@@G@@(BATCH VS. DEMAND)@C@@@@ S*    PROVIDE A COMPLETE SOURCE PROGRAM LISTINGIV
)@@G@@@B@@@@ T     LIST COMPILER TIMES BY PASS NUMBER.@B@@@@ U*    UPDATE THE IW
)@@G@@SOURCE INPUT ELEMENT.   @F@@@@ V     OUTPUT AN ASSEMBLY-LANGUAGE SYMBOLIIX
)@@G@@C OBJECT ELEMENT TO THE @F@@@@       SOURCE OUTPUT FIELD (WHICH MUST SPEIY
)@@G@@CIFY A DIFFERENT FILE   @ @@@@       THAN THE REL.OUT.)     @F@@@@ W*   IZ
)@@G@@ LIST SOURCE MODIFICATION CARDS WITH SOURCE PROGRAM LISTING @E@@@@ X*   JA
)@@G@@ ABORT THE RUN IF THE COMPILATION IS NOT ERROR-FREE   @G@@@@ Y     PROVIJB
)@@G@@DE AN EXECUTION-TIME STATEMENT TRACE (SEE SECTION 11.3)     @C@@@@ Z    JC
)@@G@@ ALLOW ZERO ELEMENT IN FORTRAN PROGRAM    @[@@@@      @[@@@@      @D@@@@JD
)@@G@@ *     CONSIDERED A 'STANDARD' PROCESSOR-CALL OPTION. @[@@@@*****^@G@@@@JE
)@@G@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         11- 13JF
)@@G@@@[@@@@      @[@@@@      @[@@@@      @[@@@@      @ @@@@ 11. 3. 1.   ASSUMJG
)@@G@@ED OPTIONS  @[@@@@      @E@@@@       THE 'F' OPTION IS ASSUMED IF THE COJH
)@@G@@RRESPONDING 'M'   @F@@@@ NEGATIVE OPTION IS NOT SPECIFIED.  THE 'M' OPTIJI
)@@G@@ON CARRIES ALONG  @^@@@@ THE 'Z' OPTION WITH IT.@[@@@@      @G@@@@      JJ
)@@G@@ IF INITIAL COMPILATION MODE IS MAD, THEN ARRAY STORAGE IS BY     @F@@@@JK
)@@G@@ ROWS; IF INITIAL COMPILATION MODE IS FORTRAN, THEN ARRAY STORAGE @F@@@@JL
)@@G@@ IS BY COLUMNS.  IF INITIAL COMPILATION MODE IS FORTRAN, THEN AN  @F@@@@JM
)@@G@@ IMPLICIT INTEGER TYPE FOR NAMES BEGINNING WITH THE LETTERS 'I'   @ @@@@JN
)@@G@@ THROUGH 'N' IS GENERATED.    @[@@@@      @F@@@@ IF NEITHER THE 'N' NOR JO
)@@G@@THE 'S' OPTION IS SPECIFIED, THE ONLY     @F@@@@ LISTED CARDS WILL BE THJP
)@@G@@OSE IN WHICH AN ERROR HAS BEEN DETECTED.  @F@@@@ THE CARD(S) IN ERROR WIJQ
)@@G@@LL BE PRINTED IMMEDIATELY ABOVE THE ERROR @]@@@@ MESSAGE.   @[@@@@      JR
)@@G@@@B@@@@ 11. 3. 2.   MISCELLANEOUS CONSIDERATIONS @[@@@@      @F@@@@      JS
)@@G@@ WHEN THE 'V' OPTION IS USED, THE ASSEMBLY LISTING PRODUCED @F@@@@ BY THJT
)@@G@@E 'L' OPTION IS EXPANDED TO INCLUDE STORAGE ALLOCATION.  THE@F@@@@ STORAJU
)@@G@@GE ALLOCATION IS IN INCLUDED IN THE OUTPUT SYMBOLIC ELEMENT.@F@@@@ VARIAJV
)@@G@@BLE NAMES WHICH MATCH REGISTER OR J-DESIGNATOR NAMES DEFINED@F@@@@ BY 'AJW
)@@G@@XR$' WILL CAUSE 'T' OR 'D' FLAGS IN THE ASSEMBLY OF THE     @G@@@@ SOURCJX
)@@G@@E OUTPUT.  BECAUSE THE RELOCATABLE OUTPUT AND ASSEMBLY SOURCE     @F@@@@JY
)@@G@@ OUTPUT ARE BOTH GENERATED IN PASS 4 OF THE COMPILER, THEY MUST BE@F@@@@JZ
)@@G@@ OUTPUT TO SEPARATE FILES.  IF THE 'V' OPTION SPECIFIES SOURCE    @F@@@@KA
)@@G@@ OUTPUT TO THE SAME FILE AS THE RELOCATABLE OUTPUT DESTINATION, IT@#@@@@KB
)@@G@@ WILL BE IGNORED. @[@@@@      @[@@@@      @ @@@@ 11. 4.   OVERALL DECK SKC
)@@G@@ETUP  @[@@@@      @[@@@@      @G@@@@       THE CONTROL CARDS REFERENCED KD
)@@G@@IN THIS SECTION ARE ALL INDEXED     @E@@@@ AND DISCUSSED IN THE PROGRAMMKE
)@@G@@ERS' REFERENCE MANUAL, UNIVAC @F@@@@ UP-4144.  A PASSING KNOWLEDGE OF THKF
)@@G@@EIR FUNCTION IS REQUIRED FOR  @F@@@@ THE UNDERSTANDING, BUT NOT THE ROTEKG
)@@G@@ DUPLICATION, OF THIS SECTION.@[@@@@      @F@@@@       THE GENERAL FORM KH
)@@G@@OF A 'DECK', OR 'RUN DECK', IS LISTED     @E@@@@ IN THE CHART ON THE NEXKI
)@@G@@T PAGE.  IT IS RECOMMENDED THAT     @E@@@@ BEGINNING USERS USE THE 'SIMPKJ
)@@G@@LIFIED DECK SETUP' IN THE     @#@@@@ SECOND PICTURE.  @[@@@@*****^@G@@@@KK
)@@G@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         12-  1KL
)@@G@@@[@@@@      @[@@@@      @[@@@@      @B@@@@ 12.   DIAGNOSTIC AND DEBUGGINKM
)@@G@@G FEATURES  @[@@@@      @[@@@@      @[@@@@      @F@@@@       THE RALPH SKN
)@@G@@YSTEM PROVIDES SEVERAL DIAGNOSTIC FEATURES DE-  @F@@@@ SIGNED TO MAKE DEKO
)@@G@@BUGGING EASIER, FOR BOTH NOVICE AND VETERAN     @]@@@@ ALIKE.     @[@@@@KP
)@@G@@      @[@@@@      @C@@@@ 12. 1.   EXECUTION-TIME SUBSCRIPT CHECKING     KQ
)@@G@@@[@@@@      @[@@@@      @F@@@@       IF THE 'C' OPTION IS USED ON THE PRKR
)@@G@@OCESSOR-CALL CARD, ALL  @F@@@@ SUBSCRIPTS WILL BE CHECKED AGAINST LEGAL KS
)@@G@@MAXIMUM, AND IN THE CASE@F@@@@ OF NEGATIVE SUBSCRIPTS, LEGAL MINIMUM.  IKT
)@@G@@F A SUBSCRIPT IS EXCEE- @#@@@@ DED, THE MESSAGE @[@@@@      @C@@@@      KU
)@@G@@ SUBSCRIPT OUT OF RANGE:  <SUBSCRIPT>     @[@@@@      @F@@@@ FOLLOWED BYKV
)@@G@@ AN ERROR TRACE, WILL BE PRINTED.  <SUBSCRIPT> IS THE @B@@@@ LINEAR SUBSKW
)@@G@@CRIPT WHICH WAS OUT OF RANGE. @[@@@@      @[@@@@      @[@@@@      @ @@@@KX
)@@G@@ 12. 2.   STATEMENT TRACE     @[@@@@      @[@@@@      @G@@@@       IF THKY
)@@G@@E 'Y' OPTION IS USED WHEN COMPILING A RALPH SUBROUTINE,     @F@@@@ THEN KZ
)@@G@@WHILE THAT SUBROUTINE IS EXECUTING, AN ALTERNATE PRINT FILE @F@@@@ WILL LA
)@@G@@BE AUTOMATICALLY GENERATED AND PRINTED.  THIS FILE WILL     @F@@@@ CONTALB
)@@G@@IN A STATEMENT-BY-STATEMENT TRACE OF THE PROGRAM EXECUTION  @F@@@@ FLOW,LC
)@@G@@ WITH PRINTOUT IN THE FORM OF 20 OCTAL STATEMENT NUMBERS PER@F@@@@ LINE,LD
)@@G@@ WITH THE DECK NAME PRINTED WHENEVER IT CHANGES.  THE NUMBER@F@@@@ PRINTLE
)@@G@@ED IS THE NUMBER CORRESPONDING TO THE SECOND COLUMN OF NUM- @C@@@@ BERS LF
)@@G@@PRINTED ON THE SOURCE PROGRAM LISTING.    @[@@@@      @[@@@@      @ @@@@LG
)@@G@@ 12. 3.   ARGUMENT WALK-BACK  @[@@@@      @[@@@@      @F@@@@       WHENELH
)@@G@@VER A FATAL ERROR IS MADE AND IT IS POSSIBLE FOR THE  @F@@@@ MONITOR TO LI
)@@G@@DETERMINE THE EXECUTION FLOW WHICH LED TO THE ERROR, A@F@@@@ COMPLETE 'WLJ
)@@G@@ALK-BACK', OR SUBROUTINE-CALL TRACE, WILL BE PRINTED  @#@@@@ WHICH INCLULK
)@@G@@DES   @[@@@@      @#@@@@       DECK NAME  @A@@@@       RELATIVE LOCATIONLL
)@@G@@ OF CALL    @A@@@@       LINE NUMBER IN SOURCE PROGRAM@C@@@@       OCTALLM
)@@G@@ VALUES OF ALL ARGUMENTS TO CALL    @[@@@@      @[@@@@*****^@G@@@@A GUIDLN
)@@G@@E TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         12-  2@[@@@@LO
)@@G@@      @[@@@@      @[@@@@      @F@@@@ IF AN ARGUMENT IS DOUBLE-PRECISION LP
)@@G@@OR COMPLEX, BOTH OCTAL WORDS  @#@@@@ WILL BE PRINTED  @[@@@@      @[@@@@LQ
)@@G@@      @A@@@@ 12. 4.   SYMBOL ONE-LINK WARNING   @[@@@@      @[@@@@      LR
)@@G@@@G@@@@       WHENEVER A PROGRAM VARIABLE OCCURS ONLY ONCE IN THE PROGRAMLS
)@@G@@,     @F@@@@ THE COMPILER ASSUMES THAT A SPELLING OR KEYPUNCHING ERROR HLT
)@@G@@AS    @C@@@@ OCCURRED AND PRINTS AN ERROR (WARNING) MESSAGE.@F@@@@ SIMILLU
)@@G@@ARLY, IF THE COMPILER HAS NOT DETECTED A VALUE ASSIGNED TO A@F@@@@ VARIALV
)@@G@@BLE, EITHER BY READING A VALUE IN WITH A 'READ' STATEMENT,  @G@@@@ REFERLW
)@@G@@ENCING IT ON THE LEFT SIDE OF AN EQUALS SIGN, OR INCLUDING IT     @F@@@@LX
)@@G@@ IN A 'COMMON' OR DATA-INTRODUCTION STATEMENT OF SOME KIND, A     @ @@@@LY
)@@G@@ MESSAGE WILL BE PRINTED.     @[@@@@      @[@@@@      @C@@@@ 12. 5.   COLZ
)@@G@@NTINGENCY INTERCEPTION AND ANALYSIS @[@@@@      @[@@@@      @F@@@@      MA
)@@G@@ WHENEVER AN ERROR OCCURS WHOSE 'FATALITY LEVEL' IS HIGH    @G@@@@ ENOUGMB
)@@G@@H TO WARRANT IMMEDIATE TERMINATION OF THE PROGRAM, A STATE OF     @F@@@@MC
)@@G@@ 'PROGRAM CONTINGENCY' IS DECLARED AND AN ERROR TYPE CODE IS PRIN-@F@@@@MD
)@@G@@ TED AFTER RETURNING CONTROL TO THE EXECUTIVE.  NORMALLY, THESE   @F@@@@ME
)@@G@@ HIEROGLYPHIC MESSAGES MUST BE LOOKED UP IN THE PROGRAMMERS' RE-  @F@@@@MF
)@@G@@ FERENCE MANUAL.  THE RALPH EXECUTION MONITOR WILL INTERCEPT AND  @F@@@@MG
)@@G@@ INTERPRET ALL PROGRAM CONTINGENCIES, PRINTING THE APPROPRIATE    @G@@@@MH
)@@G@@ 1-LINE MESSAGE FROM A DICTIONARY OF OVER 50 DIFFERENT MESSAGES.  A     MI
)@@G@@@F@@@@ GREAT DEAL OF CARE IS TAKEN TO ENSURE THAT THESE MESSAGES ARE    MJ
)@@G@@@G@@@@ APPROPRIATE TO THE ERROR CONDITION, BUT OCCASIONALLY THE INTERPREMK
)@@G@@-     @E@@@@ TER WILL BE OUTFOXED.  SEE SECTION 12.2 FOR A DISCUSSION OFML
)@@G@@@A@@@@ EXECUTION-MONITOR ERROR MESSAGES.  @[@@@@      @[@@@@      @[@@@@MM
)@@G@@      @ @@@@ 12. 6.   DUMP SYMBOL TABLE   @[@@@@      @[@@@@      @G@@@@MN
)@@G@@       THE CONVERSATIONAL PMD PROCESSOR (CPMD) CAN WORK IN CONJUNCTION  MO
)@@G@@@E@@@@ WITH THE RALPH COMPILER TO ALLOW A VARIABLE-NAME DUMP MODE @F@@@@MP
)@@G@@ FOR DUMPING RALPH PROGRAMS.  THE NAME-MODE DUMP REQUIRES THAT    @F@@@@MQ
)@@G@@ RALPH GENERATE A SYMBOL TABLE DESCRIBING THE NAME, ADDRESS, MODE,@F@@@@MR
)@@G@@ DIMENSIONALITY, ETC. OF PROGRAM VARIABLES, AND THAT THIS TABLE BE@F@@@@MS
)@@G@@ CONTAINED IN THE OBJECT PROGRAM SO THAT IT MAY BE FOUND BY THE   @F@@@@MT
)@@G@@ DUMP PROCESSOR.  COMPILING A RALPH PROGRAM WITH THE 'D' OPTION   @C@@@@MU
)@@G@@ SET WILL CAUSE THIS TABLE TO BE GENERATED.     @[@@@@      @[@@@@      MV
)@@G@@@A@@@@ 12. 7.   'D'-OPTION COMPILE SWITCH.@[@@@@*****^@G@@@@A GUIDE TO PMW
)@@G@@ROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         12-  3@[@@@@      MX
)@@G@@@[@@@@      @[@@@@      @F@@@@       NORMALLY, ANY CARD WITH THE LETTER MY
)@@G@@'D' IN COLUMN 1 WILL    @E@@@@ BE TREATED AS IF IT HAD A 'C' IN COLUMN 1MZ
)@@G@@--I.E. IT WILL    @D@@@@ BE IGNORED BY THE COMPILER AND PRINTED AS A COMNA
)@@G@@MENT. @D@@@@ IF THE 'D' OPTION (DIAGNOSTIC) IS SPECIFIED ON THE   @D@@@@NB
)@@G@@ PROCESSOR-CALL CARD, HOWEVER, THE 'D' WILL BE IGNORED@E@@@@ AND THE STANC
)@@G@@TEMENT WILL BE COMPILED.  THIS FEATURE PERMITS  @D@@@@ THE PROGRAMMER TOND
)@@G@@ INSERT DIAGNOSTIC PRINT AND DUMP   @E@@@@ STATEMENTS INTO HIS PROGRAM FNE
)@@G@@OR USE WITH THE 'D' OPTION,   @E@@@@ AND THEN TO HAVE THEM MAGICALLY VANNF
)@@G@@ISH (UNTIL NEEDED AGAIN)@A@@@@ WHEN THE 'D' OPTION IS REMOVED.    @[@@@@NG
)@@G@@      @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971NH
)@@G@@ VERSION)         13-  1@[@@@@      @[@@@@      @[@@@@      @^@@@@ 13.  NI
)@@G@@ ERROR MESSAGES   @[@@@@      @[@@@@      @[@@@@      @[@@@@      @[@@@@NJ
)@@G@@      @A@@@@ 13. 1.   COMPILER ERROR MESSAGES   @[@@@@      @[@@@@      NK
)@@G@@@G@@@@       FOR REASONS OF INTERNAL EFFICIENCY, THE COMPILER PRINTS ONLNL
)@@G@@Y     @F@@@@ A BRIEF 1-LINE ERROR MESSAGE WHEN AN ERROR IS ENCOUNTERED. NM
)@@G@@ EVERY@F@@@@ ATTEMPT HAS BEEN MADE TO KEEP THE MESSAGES WITHIN THE BOUNDNN
)@@G@@S OF  @F@@@@ SOBER LITERACY WHILE DRAWING FROM A VOCABULARY OF LESS THANNO
)@@G@@ 200  @F@@@@ WORDS.  THE STILTED GRAMMAR OF SOME OF THE MESSAGES IS NOT NP
)@@G@@DUE TO@F@@@@ THE IGNORANCE OF THEIR WRITER (WHO IS ALSO THE AUTHOR OF THNQ
)@@G@@IS    @F@@@@ MANUAL) BUT TO THE SEVERELY LIMITED VOCABULARY FROM WHICH ONR
)@@G@@NE IS @F@@@@ FORCED TO DRAW.  THIS CHAPTER HAS BEEN INCLUDED TO AID THE NS
)@@G@@BEGIN-@C@@@@ NING OR BAFFLED USER IN DEBUGGING HIS PROGRAMS.@[@@@@      NT
)@@G@@@B@@@@       THE FORMAT OF AN ERROR MESSAGE IS  @[@@@@      @C@@@@ <<< LNU
)@@G@@EVEL  LOCATION .... TEXT OF ERROR MESSAGE @[@@@@      @F@@@@       THE LNV
)@@G@@OCATION IS THE ABSOLUTE CORE LOCATION WITHIN THE RALPH@E@@@@ COMPILER WHNW
)@@G@@ERE THE ERROR WAS CALLED.  THERE THREE LEVELS OF@]@@@@ ERRORS.    @[@@@@NX
)@@G@@      @F@@@@       A 'WARNING' IS INSERTED AS A SUGGESTION THAT THERE MINY
)@@G@@GHT BE@G@@@@ SOMETHING WRONG, ALTHOUGH THE COMPILER IS PERFECTLY WILLINGNZ
)@@G@@ TO LET     @F@@@@ IT PASS.  AN 'ERROR' IS JUST THAT:  SOMETHING IS WRONOA
)@@G@@G WITH THE  @F@@@@ SOURCE CODE.  A 'DISASTER' IS AN ERROR FROM WHICH THEOB
)@@G@@ COMPILER   @F@@@@ CANNOT RECOVER, OR WHICH WOULD MAKE EXECUTION MEANINGOC
)@@G@@LESS.  A    @F@@@@ 'DISASTER' WILL TERMINATE THE COMPILATION AT THE END OD
)@@G@@OF THE CUR- @^@@@@ RENT COMPILER PHASE.   @[@@@@      @F@@@@       ALL POE
)@@G@@ASS 1 ERROR MESSAGES ARE PRINTED IMMEDIATELY AFTER THE@F@@@@ STATEMENT (OF
)@@G@@AND ASSOCIATED COMMENT CARDS) TO WHICH THEY APPLY.    @[@@@@      @F@@@@OG
)@@G@@       THESE MESSAGES WILL EVENTUALLY BE IN ALPHABETICAL ORDER;   @F@@@@OH
)@@G@@ RIGHT NOW THEY ARE IN THE SAME ORDER AS OUR INTERNAL TABLES SO   @C@@@@OI
)@@G@@ THAT WE CAN FIND THEM.  PLEASE BEAR WITH US.   @[@@@@*****^@G@@@@A GUIDOJ
)@@G@@E TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         13-  3@[@@@@OK
)@@G@@      @[@@@@      @[@@@@      @D@@@@ ILLEGAL STATEMENT IN SCOPE OF SIMPLOL
)@@G@@E CONDITIONAL.    @[@@@@      @F@@@@           (PASS 1).  A SIMPLE CONDIOM
)@@G@@TIONAL MAY NOT CONTAIN CERTAIN@F@@@@       TYPES OF STATEMENTS.  SEE SECON
)@@G@@TION 5.3.1 FOR A DISCUSSION OF@ @@@@       SIMPLE CONDITIONALS.   @[@@@@OO
)@@G@@      @[@@@@      @A@@@@ CORRECTION CARD SEQUENCE ERROR.    @[@@@@      OP
)@@G@@@F@@@@           (PASS 1).  WHEN CORRECTION CARDS ARE BEING USED TO     OQ
)@@G@@@E@@@@       UPDATE A PROGRAM FROM A PROGRAM FILE, THEY MUST BE IN@F@@@@OR
)@@G@@       STRICTLY INCREASING ORDER NUMERICALLY BY LINE NUMBER.  ANY @D@@@@OS
)@@G@@       ATTEMPT TO BACK UP FOR A CORRECTION IS ILLEGAL.@[@@@@      @[@@@@OT
)@@G@@      @ @@@@ ILLEGAL STATEMENT FORMATION. @[@@@@      @F@@@@           (OU
)@@G@@PASS 1).  SOMEWHAT GENERAL ERROR MESSAGE.  USUALLY,   @F@@@@       THIS OV
)@@G@@ERROR IS CALLED WHEN AN ERROR IN PUNCTUATION PREVENTS @F@@@@       THE EOW
)@@G@@XACT ANALYSIS OF WHAT IS WRONG WITH A STATEMENT.  SEE @F@@@@       THE DOX
)@@G@@ESCRIPTION OF THE PARTICULAR STATEMENT AT HAND FOR    @ @@@@       FURTHOY
)@@G@@ER INFORMATION.   @[@@@@      @[@@@@      @ @@@@ INTERNAL COMPILER ERROROZ
)@@G@@.     @[@@@@      @F@@@@           (ALL PASSES).  RALPH NEEDS ITS HEAD EPA
)@@G@@XAMINED.  SEE YOUR@D@@@@       FRIENDLY LOCAL SYSTEMS-STAFF PROGRAM DOCTPB
)@@G@@OR.   @[@@@@      @[@@@@      @^@@@@ TOO MANY PARAMETERS.   @G@@@@      PC
)@@G@@     (PASS 1).  THE PARAMETER TABLE HAS BEEN EXCEEDED.  THERE     @F@@@@PD
)@@G@@       IS NO CURE FOR THIS PROBLEM EXCEPT TO USE FEWER 'PARAMETER'@#@@@@PE
)@@G@@       STATEMENTS.@[@@@@      @[@@@@      @B@@@@ ILLEGAL USE OF DUMMY VAPF
)@@G@@RIABLE '---'.     @[@@@@      @F@@@@           (PASS 1).  A DUMMY VARIABPG
)@@G@@LE IS A FUNCTION PARAMETER.   @F@@@@       THERE ARE CERTAIN CONTEXTS INPH
)@@G@@ WHICH IT IS ILLEGAL TO USE A @F@@@@       FUNCTION PARAMETER, SUCH AS SPI
)@@G@@TATEMENT LABELS, FUNCTION     @D@@@@       NAMES, EQUIVALENCE DECLARATIOPJ
)@@G@@NS, AND SUCH.     @[@@@@      @[@@@@      @A@@@@ TABLE SIZE EXCEEDED IN PK
)@@G@@'---' TABLE.@[@@@@      @F@@@@           (ALL PASSES).  AN INTERNAL TABLPL
)@@G@@E HAS BEEN FILLED TO    @F@@@@       OVERFLOWING.  FOR PROGRAMS OF MODERPM
)@@G@@ATE SIZE, THIS IS DUE TO@G@@@@       SLOPPY PROGRAMMING HABITS.  THE TABPN
)@@G@@LES IN RALPH WHICH CAN BE     @ @@@@       OVERFLOWN (?) ARE:     @[@@@@PO
)@@G@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)   PP
)@@G@@      13-  4@[@@@@      @[@@@@      @[@@@@      @[@@@@      @G@@@@      PQ
)@@G@@ MST--   MAIN SYMBOL TABLE.  ALL VARIABLES, STATEMENT LABELS,     @F@@@@PR
)@@G@@               FUNCTION PARAMETERS, ETC. GO IN THE MST.  THE ABC  @G@@@@PS
)@@G@@               COMES IN FROM THE BACK OF THE MST, SO IT IS POSSIBLE     PT
)@@G@@@F@@@@               TO EXCEED THE SIZE OF THE MST BECAUSE THE ABC WAS  PU
)@@G@@@A@@@@               TOO BIG.  SEE BELOW. @[@@@@      @F@@@@       ABC--PV
)@@G@@   ABSOLUTE CONSTANT TABLE.  ALL CONSTANTS GO IN THE  @G@@@@            PW
)@@G@@   ABC.  THE ABC COMES IN FROM THE BACK END OF THE MST,     @F@@@@      PX
)@@G@@         SO THAT IT IS POSSIBLE TO HAVE AN ABC OVERFLOW     @E@@@@      PY
)@@G@@         CAUSED BY TOO MUCH IN THE MST.  SEE ABOVE.   @[@@@@      @G@@@@PZ
)@@G@@       DIM--   DIMENSION TABLE.  ALL 'DIMENSION' STATEMENTS PRODUCE     QA
)@@G@@@F@@@@               ENTRIES IN THE DIM TABLE.  IF IT IS EXCEEDED, THEN QB
)@@G@@@F@@@@               THERE ARE TOO MANY SUBSCRIPTS ON TOO MANY VARIABLESQC
)@@G@@@G@@@@               AS DIMENSIONED.  ONLY THE NUMBER OF DIMENSION STATEQD
)@@G@@-     @F@@@@               MENTS, AND NOT THE SIZE, HAS ANY EFFECT ON THQE
)@@G@@E     @B@@@@               OVERFLOW OF THIS TABLE.    @[@@@@      @F@@@@QF
)@@G@@       ET--    EQUIVALENCE TABLE.  ALL 'EQUIVALENCE' STATEMENTS   @G@@@@QG
)@@G@@               MAKE ENTRIES IN THE ET.  AN ET OVERFLOW IS CAUSED BY     QH
)@@G@@@D@@@@               HAVING SIMPLY TOO MANY EQUIVALENCES.   @[@@@@      QI
)@@G@@@F@@@@       PCT--   PROGRAM COMMON TABLE.  ALL 'COMMON' DECLARATIONS   QJ
)@@G@@@F@@@@               MAKE ENTRIES IN THE PCT.  AN OVERFLOW IS CAUSED BY QK
)@@G@@@F@@@@               TOO MANY SEPARATE VARIABLES BEING DECLARED IN COM- QL
)@@G@@@^@@@@               MON.     @[@@@@      @F@@@@       CDIC--  CONTROL DQM
)@@G@@ICTIONARY.  ALL ENTRY POINTS, 'EXTERNAL'  @G@@@@               DECLARATIQN
)@@G@@ONS, FUNCTION NAMES, AND INTERNAL FUNCTIONS     @ @@@@               GO QO
)@@G@@IN THE CDIC.@[@@@@      @F@@@@       PL--    PARAMETER LIST.  ALL INTERNQP
)@@G@@AL FUNCTION PARAMETERS  @B@@@@               ARE ENTERED IN THE PL.     QQ
)@@G@@@[@@@@      @F@@@@       XPL--   EXTERNAL PARAMETER LIST.  ALL EXTERNAL QR
)@@G@@FUNCTION    @F@@@@               PARAMETERS ARE ENTERED IN THE XPL.  THEQS
)@@G@@ PL AND XPL @F@@@@               ARE OVERFLOWED IF THERE ARE TOO MANY DIQT
)@@G@@STINCT PARA-@C@@@@               METERS OF THE RESPECTIVE TYPE.   @[@@@@QU
)@@G@@      @F@@@@       MT--    MODE TABLE.  ALL OUTSTANDING MODE DECLARATIONQV
)@@G@@S     @F@@@@               (THOSE FOR WHICH THE DECLARED ITEM HAS NOT YEQW
)@@G@@T BEEN@F@@@@               ENCOUNTERED FOR THE FIRST TIME) ARE KEPT IN TQX
)@@G@@HE MT.@G@@@@               MIXING MODE AND DIMENSION STATEMENTS WILL OFTQY
)@@G@@EN CURE     @ @@@@               AN MT OVERFLOW.@[@@@@      @G@@@@      QZ
)@@G@@ ERS--   ERASABLE TABLE.  ALL 'ERASABLE' DECLARATIONS ARE PUT     @F@@@@RA
)@@G@@               IN THE 'ERS' TABLE.  IT IS OVERFLOWED IF TOO MANY  @E@@@@RB
)@@G@@               VARIABLES ARE DECLARED TO BE IN ERASABLE.    @[@@@@      RC
)@@G@@@[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSIRD
)@@G@@ON)         13-  5@[@@@@      @[@@@@      @[@@@@      @F@@@@       FLAD-RE
)@@G@@-  FLOATING ADDRESS TABLE.  A FLOATING ADDRESS IS A   @F@@@@            RF
)@@G@@   FORWARD TRANSFER OR OCCASIONALLY BACK TRANSFER TO A@E@@@@            RG
)@@G@@   COMPILER-GENERATED LABEL.  A 'THROUGH' LOOP  @G@@@@               GENRH
)@@G@@ERATES 3 FLOATING ADDRESSES, A SIMPLE CONDITIONAL     @F@@@@            RI
)@@G@@   GENERATES 1, A COMPOUND CONDITIONAL GENERATES 3 + 1@F@@@@            RJ
)@@G@@   FOR EACH 'OR WHENEVER' OR 'OTHERWISE'.  A FUNCTION @F@@@@            RK
)@@G@@   CALL WITH A SUBSCRIPTED VARIABLE AS AN ARGUMENT    @F@@@@            RL
)@@G@@   GENERATES 1 FLOATING ADDRESS; EACH ENTRY GENERATES @#@@@@            RM
)@@G@@   3. @[@@@@      @F@@@@       PARUSE-PARAMETER USE TABLE.  EACH REFERENRN
)@@G@@CE TO AN INTERNAL @G@@@@               OR EXTERNAL FUNCTION PARAMETER GERO
)@@G@@NERATES AN ENTRY IN     @F@@@@               THE APPROPRIATE PARAMETER URP
)@@G@@SE TABLE.  THE EXTERNAL @F@@@@               PARAMETER USE TABLE IS DYNARQ
)@@G@@MICALLY ASSIGNED FROM   @E@@@@               CODE BUFFER SPACE, AND SHOURR
)@@G@@LD NEVER OVERFLOW.@[@@@@      @[@@@@      @ @@@@ ILLEGAL OR INCONSISTENTRS
)@@G@@ MODE.@[@@@@      @F@@@@           (PASS 1).  A MODE DECLARATION CONFLICRT
)@@G@@TS WITH A PREVIOUS@F@@@@       ONE, OR AN ATTEMPT TO PRESET A VARIABLE TRU
)@@G@@O A VALUE IN A    @ @@@@       DIFFERENT MODE, ETC.   @[@@@@      @[@@@@RV
)@@G@@      @A@@@@ ILLEGAL USE OF CONTINUATION CARD.  @[@@@@      @F@@@@      RW
)@@G@@    (PASS 1).  A CONTINUATION CARD MAY NOT BE THE FIRST     @E@@@@      RX
)@@G@@ NON-COMMENT CARD IN THE PROGRAM, THE FIRST CARD IN AN@E@@@@       'INCLRY
)@@G@@UDE', OR THE FIRST CARD AFTER AN 'INCLUDE'.     @[@@@@      @[@@@@      RZ
)@@G@@@A@@@@ END OF PROGRAM ASSUMED BY COMPILER.@[@@@@      @F@@@@           (SA
)@@G@@PASS 1).  A MISSING 'END' CARD WAS FILLED IN BY RALPH.@[@@@@      @[@@@@SB
)@@G@@      @C@@@@ ILLEGAL CHARACTER '-' IN COLUMN '--' ON CARD.  @[@@@@      SC
)@@G@@@F@@@@           (PASS 1).  THE CHARACTER '-' IS ILLEGAL AS USED.  THIS SD
)@@G@@@F@@@@       IS USUALLY BECAUSE A STATEMENT HAS STARTED IN THE WRONG    SE
)@@G@@@G@@@@       COLUMN, AND AN ILLEGAL CONTINUATION CHARACTER (MAD ONLY) HASF
)@@G@@S     @#@@@@       BEEN FOUND.@[@@@@      @[@@@@      @D@@@@ THE VARIABLSG
)@@G@@E NAME BEGINNING '------' IS TOO LONG.    @[@@@@      @F@@@@           (SH
)@@G@@PASS 1).  VARIABLE NAMES ARE LIMITED TO 6 CHARACTERS. @G@@@@       THERESI
)@@G@@ IS A CHARACTER COMBINATION LONGER THAN 6 CHARACTERS IN     @F@@@@      SJ
)@@G@@ A CONTEXT WHERE A VARIABLE NAME IS EXPECTED.  THE COMPILER @D@@@@      SK
)@@G@@ WILL TRUNCATE TO 6 CHARACTERS AND CONTINUE.    @[@@@@*****^@G@@@@A GUIDSL
)@@G@@E TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         13-  6@[@@@@SM
)@@G@@      @[@@@@      @[@@@@      @[@@@@      @[@@@@      @A@@@@ UNRECOGNIZASN
)@@G@@BLE STATEMENT IGNORED.  @[@@@@      @F@@@@           (PASS 1).  THE STATSO
)@@G@@EMENT COULD NOT BE IDENTIFIED AS    @F@@@@       VALID.  PROBABLY A MISSSP
)@@G@@PELLING OR KEYPUNCHING ERROR.  THE  @F@@@@       STATEMENT WILL BE REPLASQ
)@@G@@CED WITH A CALL TO AN ERROR SUBROU- @ @@@@       TINE IN THE MONITOR.   SR
)@@G@@@[@@@@      @[@@@@      @C@@@@ NON-ALPHABETIC CHARACTER IN OPERATOR ILLESS
)@@G@@GAL.  @[@@@@      @F@@@@           (PASS 1).  ANY SYMBOL OF THE FORM .XXST
)@@G@@X. IN A CONTEXT   @F@@@@       WHERE AN OPERATOR IS EXPECTED IS ASSUMED SU
)@@G@@TO BE AN OPERATOR.@E@@@@       ONLY LETTERS ARE LEGAL CHARACTERS INSIDE SV
)@@G@@OPERATORS.  @[@@@@      @[@@@@      @A@@@@ ILLEGAL FORMATION OR PUNCTUATSW
)@@G@@ION.  @[@@@@      @F@@@@           (PASS 1).  THIS ERROR CAN MEAN ALMOSTSX
)@@G@@ ANYTHING.  EITHER@F@@@@       THE ERROR IS SO BLATANTLY OBVIOUS AS TO RSY
)@@G@@EMOVE THE NEED FOR@G@@@@       ELUCIDATION OF THE COMPLAINT, OR, QUITE HSZ
)@@G@@ONESTLY, THE COMPI-     @F@@@@       LER KNOWS SOMETHING IS WRONG BUT HATA
)@@G@@SN'T THE SLIGHTEST IDEA @^@@@@       EXACTLY WHAT.    @[@@@@      @[@@@@TB
)@@G@@      @C@@@@ MISSING END OF CONDITIONAL OR ILLEGAL NESTING. @[@@@@      TC
)@@G@@@F@@@@           (PASS 1).  A COMPOUND CONDITIONAL WAS NOT CLOSED OR WASTD
)@@G@@@G@@@@       CLOSED INSIDE AN INTERNAL FUNCTION BUT STARTED OUTSIDE.  ANTE
)@@G@@Y     @F@@@@       REFERENCE TO THIS 'END OF CONDITIONAL' WILL BE SHUNTETF
)@@G@@D TO A@ @@@@       SYSTEM ERROR CALL.     @[@@@@      @[@@@@      @D@@@@TG
)@@G@@ THROUGH/DO STATEMENT ENDING '------' IS MISSING.     @[@@@@      @F@@@@TH
)@@G@@           (PASS 1).  THE INDICATED LABEL WAS NOT FOUND TO CLOSE A@F@@@@TI
)@@G@@       LOOP.  IF AN OUTER LOOP IS 'CLOSED' BEFORE AN INNER LOOP,  @F@@@@TJ
)@@G@@       THE LABEL WILL NEVER BE FOUND.  THE LAST 'THROUGH' OR 'DO' @D@@@@TK
)@@G@@       STATEMENT BEGUN MUST BE THE FIRST ONE ENDED.   @[@@@@      @[@@@@TL
)@@G@@      @D@@@@ INTERNAL FUNCTION NOT TERMINATED OR ILLEGAL NESTING. @[@@@@TM
)@@G@@      @F@@@@           (PASS 1).  AN INTERNAL FUNCTION WAS NEVER CLOSED,TN
)@@G@@ AND  @F@@@@       EITHER ANOTHER INTERNAL FUNCTION OR THE END OF PROGRATO
)@@G@@M HAS @^@@@@       BEEN ENCOUNTERED.@[@@@@      @[@@@@      @ @@@@ TOO MTP
)@@G@@ANY EQUIVALENCE GROUPS. @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RATQ
)@@G@@LPH (DECEMBER 1971 VERSION)         13-  7@[@@@@      @[@@@@      @[@@@@TR
)@@G@@      @[@@@@      @F@@@@           (PASS 1).  TOO MANY THINGS HAVE BEEN TS
)@@G@@EQUIVALENCED TO   @F@@@@       EACH OTHER.  THIS CONDITION IS CHECKED ATTT
)@@G@@ THE END OF PASS 1@F@@@@       TO AVOID BLOWING UP UTTERLY IN THE EQUIVATU
)@@G@@LENCE PROCESSOR IN@#@@@@       PASS 2.    @[@@@@      @[@@@@      @B@@@@TV
)@@G@@ MISSING OPERATOR OR ILLEGAL PUNCTUATION. @[@@@@      @F@@@@           (TW
)@@G@@PASS 1).  THE COMPILER HAS ENCOUNTERED TWO SUCCESSIVE @G@@@@       OPERATX
)@@G@@NDS.  THIS ERROR CONDITION IS USUALLY CAUSED BY FORGET-     @G@@@@      TY
)@@G@@ TING AN ASTERISK (*) FOR SPECIFYING MULTIPLICATION OF PAREN-     @^@@@@TZ
)@@G@@       THESIZED ITEMS.  @[@@@@      @[@@@@      @#@@@@ MISSING OPERAND. UA
)@@G@@@[@@@@      @F@@@@           (PASS 1).  THE COMPILER HAS ENCOUNTERED TWOUB
)@@G@@ SUCCESSIVE @F@@@@       OPERATORS IN AN ILLEGAL CONTEXT.  THE ONLY TIMEUC
)@@G@@ A CONSECU- @E@@@@       TIVE CHAIN OF OPERATORS IS LEGAL IS WHEN ALL BUUD
)@@G@@T THE @D@@@@       LEFT-MOST OF THE CHAIN ARE UNARY OPERATORS.    @[@@@@UE
)@@G@@      @[@@@@      @^@@@@ STATEMENT TOO LONG.    @[@@@@      @F@@@@      UF
)@@G@@     (PASS 1).  THERE ARE TOO MANY CONTINUATION CARDS FOR   @^@@@@      UG
)@@G@@ THIS STATEMENT.  @[@@@@      @[@@@@      @A@@@@ CONDITIONAL NESTING DEPUH
)@@G@@TH EXCEEDED.@[@@@@      @G@@@@           (PASS 1).  COMPOUND CONDITIONALUI
)@@G@@S CAN ONLY BE NESTED TO A     @C@@@@       DEPTH OF 30 DEEP.  SORRY ABOUUJ
)@@G@@T THAT.     @[@@@@      @[@@@@      @ @@@@ MISSING FUNCTION DECLARATION.UK
)@@G@@@[@@@@      @G@@@@           (PASS 1).  A STATEMENT BELONGING INSIDE A FUL
)@@G@@UNCTION (SUCH     @F@@@@       AS 'RETURN') HAS BEEN ENCOUNTERED OUTSIDEUM
)@@G@@ OF ANY FUNCTION, @F@@@@       OR ELSE THE NAME IS MISSING ON A 'SUBROUTUN
)@@G@@INE' OR 'FUNCTION'@]@@@@       CARD.@[@@@@      @[@@@@      @A@@@@ TOO MUO
)@@G@@ANY STATEMENT LABEL VECTORS.  @[@@@@      @F@@@@           (PASS 1).  WHUP
)@@G@@EN SUBSCRIPTED STATEMENT LABELS ARE USED, @F@@@@       THEY ARE TALLIED UQ
)@@G@@IN A TABLE ACCORDING TO MAXIMUM SUBSCRIPT @F@@@@       ON EACH DISTINCT UR
)@@G@@VARIABLE, SO THAT THE PROPER 'DIMENSION'  @F@@@@       STATEMENT CAN BE US
)@@G@@GENERATED AT THE END OF PROGRAM.  TOO MANY@F@@@@       DISTINCT VARIABLEUT
)@@G@@ NAMES WITH CONSTANT SUBSCRIPTS USED AS   @[@@@@*****^@G@@@@A GUIDE TO PUU
)@@G@@ROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         13-  8@[@@@@      UV
)@@G@@@[@@@@      @[@@@@      @C@@@@       STATEMENT LABELS WILL CAUSE THIS MEUW
)@@G@@SSAGE.@[@@@@      @[@@@@      @^@@@@ CONSTANT OUT OF RANGE. @[@@@@      UX
)@@G@@@F@@@@           (PASS 1 AND 3).  A CONSTANT IS TOO LARGE FOR AN 1108   UY
)@@G@@@F@@@@       COMPUTER WORD.  SEE SECTION 3.2.1 FOR A DISCUSSION OF CON- UZ
)@@G@@@ @@@@       STANTS AND ALLOWED     @[@@@@      @[@@@@      @A@@@@ ILLEGVA
)@@G@@AL NESTING OF PARENTHESES.    @[@@@@      @F@@@@           (PASS 1).  A VB
)@@G@@RIGHT PARENTHESIS OCCURRED BEFORE ITS     @F@@@@       CORRESPONDING LEFVC
)@@G@@T PARENTHESIS.  FOR EXAMPLE, ')(' IS ILLE-@A@@@@       GAL NESTING OF PAVD
)@@G@@RENTHESES.  @[@@@@      @[@@@@      @A@@@@ THIS STATEMENT CANNOT BE REACVE
)@@G@@HED.  @[@@@@      @F@@@@           (PASS 1).  THE PREVIOUS STATEMENT WASVF
)@@G@@ AN UNCONDITIONAL @F@@@@       TRANSFER OR A 'RETURN', AND THERE IS NO SVG
)@@G@@TATEMENT LABEL ON @^@@@@       THIS STATEMENT . @[@@@@      @[@@@@      VH
)@@G@@@A@@@@ ILLEGAL SYMBOL AS STATEMENT LABEL. @[@@@@      @F@@@@           (VI
)@@G@@PASS 1).  ONLY LEGAL VARIABLE NAMES, POSSIBLY WITH    @F@@@@       SINGLVJ
)@@G@@E CONSTANT SUBSCRIPTS, ARE LEGAL AS STATEMENT LABELS. @F@@@@       THUS,VK
)@@G@@ ONLY LETTERS, NUMBERS, AND PARENTHESES ARE PERMITTED @ @@@@       IN THVL
)@@G@@E LABEL FIELD.    @[@@@@      @[@@@@      @ @@@@ THIS FUNCTION HAS NO ENVM
)@@G@@TRY.  @[@@@@      @F@@@@           (PASS 1).  THE MAD EXTERNAL FUNCTION VN
)@@G@@DID NOT HAVE AN   @F@@@@       'ENTRY TO' STATEMENT, AND THE 'EXTERNAL FVO
)@@G@@UNCTION' STATEMENT@E@@@@       SPECIFIED ONLY ARGUMENTS, AND NOT AN ENTRVP
)@@G@@Y POINT.    @[@@@@      @[@@@@      @ @@@@ ILLEGAL INPUT PARAMETERS.    VQ
)@@G@@@[@@@@      @F@@@@           (PASS 1).  THE PROCESSOR-CALL CARD IS IN ERVR
)@@G@@ROR.  COMMON@F@@@@       CAUSES ARE MISSING SECOND FIELD WHEN 'I' OPTIONVS
)@@G@@ NOT SET,   @A@@@@       MISSPELLED ELEMENT NAME, ETC.@[@@@@      @[@@@@VT
)@@G@@      @^@@@@ ILLEGAL ABBREVIATION.  @[@@@@      @F@@@@           (PASS 1VU
)@@G@@).  THE STATEMENT ABBREVIATION IS NOT IN THE    @F@@@@       ABBREVIATIOVV
)@@G@@N DICTIONARY.  IN MAD, ANY OCCURRENCE OF AN     @[@@@@*****^@G@@@@A GUIDVW
)@@G@@E TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         13-  9@[@@@@VX
)@@G@@      @[@@@@      @[@@@@      @G@@@@       APOSTROPHE, OR IN FORTRAN ANYVY
)@@G@@ OCCURRENCE OF A CROSSHATCH (#)     @C@@@@       IS ASSUMED TO BE PART OVZ
)@@G@@F AN ABBREVIATION.@[@@@@      @[@@@@      @C@@@@ THIS STATEMENT PRODUCESWA
)@@G@@ TOO MUCH OBJECT CODE.  @[@@@@      @E@@@@           (PASS 1).  THE STATWB
)@@G@@EMENT, ALTHOUGH IT FITS IN THE@F@@@@       ALLOWED SPACE ON THE ALLOWED WC
)@@G@@NUMBER OF CONTINUATION CARDS, @F@@@@       GENERATES TOO MUCH OBJECT CODWD
)@@G@@E FOR THE OPTIMIZER TO HANDLE.@D@@@@       THERE IS A LIMIT OF 200 TRIPLWE
)@@G@@ES PER STATEMENT. @[@@@@      @[@@@@      @F@@@@ ILLEGAL USE OF STATEMENWF
)@@G@@T OUTSIDE RANGE OF COMPOUND CONDITIONAL.  @[@@@@      @G@@@@           (WG
)@@G@@PASS 1).  THE MAD STATEMENTS 'OTHERWISE','OR WHENEVER',     @G@@@@      WH
)@@G@@ AND 'END OF CONDITIONAL' CANNOT BE USED MEANINGFULLY OUTSIDE     @A@@@@WI
)@@G@@       OF A COMPOUND CONDITIONAL.   @[@@@@      @[@@@@      @ @@@@ ILLEGWJ
)@@G@@AL OPERATOR DELIMITER.  @[@@@@      @F@@@@           (PASS 1).  AN OPERAWK
)@@G@@TOR MUST BE OF THE FORM .XXX., WHERE@F@@@@       'XXX' IS A STRING OF FRWL
)@@G@@OM 1 TO 6 LETTERS. ANY PUNCTUATION  @C@@@@       MARK OTHER THAN THE PERWM
)@@G@@IOD IS ILLEGAL.   @[@@@@      @[@@@@      @B@@@@ ILLEGAL USE OF EQUAL SIWN
)@@G@@GN.  .E. ASSUMED. @[@@@@      @G@@@@           (PASS 1).  THE ONLY VALIDWO
)@@G@@ USE OF THE CHARACTER '=' IS IN     @F@@@@       AN ARITHMETIC ASSIGNMENWP
)@@G@@T STATEMENT.  A COMMON MISTAKE IS TO@G@@@@       USE '=' INSTEAD OF .E. WQ
)@@G@@OR .EQ. WHEN TESTING FOR THE EQUALITY     @F@@@@       OF TWO NUMBERS.  WR
)@@G@@RALPH ASSUMES THAT THE INTENT WAS .E. AND @^@@@@       FILLS IT IN.     WS
)@@G@@@[@@@@      @[@@@@      @C@@@@ UNRECOGNIZABLE ALTERNATE EXIT -- ERR ASSUWT
)@@G@@MED.  @[@@@@      @G@@@@           (PASS 1).  IN A FORTRAN 'READ' OR 'WRWU
)@@G@@ITE' STATEMENT, THE     @F@@@@       CLAUSES 'ERR=' AND 'END=' ARE PERMIWV
)@@G@@TTED TO SPECIFY ERROR   @G@@@@       EXITS AND END-OF-FILE EXITS.  IF A WW
)@@G@@'XXX=' CLAUSE APPEARS AND     @F@@@@       'XXX' DOES NOT MAKE SENSE, THWX
)@@G@@E COMPILER WILL ASSUME 'END'  @B@@@@       AND MAKE IT AN END-OF-FILE EXWY
)@@G@@IT.   @[@@@@      @[@@@@      @ @@@@ UNNECESSARY COMMA IGNORED.   @[@@@@WZ
)@@G@@      @F@@@@           (PASS 1).  CONSECUTIVE COMMAS IN I/O LISTS ARE TOXA
)@@G@@LERA- @F@@@@       TED, BUT A WARNING FOR THE SAKE OF ELEGANCY IS ISSUEDXB
)@@G@@.     @[@@@@      @[@@@@      @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WXC
)@@G@@ITH RALPH (DECEMBER 1971 VERSION)         13- 10@[@@@@      @[@@@@      XD
)@@G@@@[@@@@      @A@@@@ ITERATION NESTING DEPTHS EXCEEDED. @[@@@@      @F@@@@XE
)@@G@@           (PASS 1).  TOO MANY 'THROUGH' OR 'DO' STATEMENTS HAVE  @G@@@@XF
)@@G@@       BEEN NESTED.  A LIMIT OF 30 'DO' NESTS OR 45 'THROUGH' NESTS     XG
)@@G@@@#@@@@       IS KEPT.   @[@@@@      @[@@@@      @ @@@@ TOO MANY LEFT PARXH
)@@G@@ENTHESES.   @[@@@@      @F@@@@           (PASS 1).  THE STATEMENT CONTAIXI
)@@G@@NS TOO MANY LEFT PAREN- @F@@@@       THESES.  A COMMON CAUSE FOR THIS ERXJ
)@@G@@ROR IS MISCOUNTING OF A @F@@@@       COUNTED HOLLERITH STRING, OFTEN IN XK
)@@G@@A FORMAT STATEMENT,     @E@@@@       CAUSING IT TO INCLUDE A PARENTHESISXL
)@@G@@ NOT INTENDED.    @[@@@@      @[@@@@      @ @@@@ TOO MANY RIGHT PARENTHEXM
)@@G@@SES.  @[@@@@      @F@@@@           (PASS 1).  THE STATEMENT CONTAINS TOOXN
)@@G@@ MANY RIGHT PAREN-@ @@@@       THESES.  SEE ABOVE.    @[@@@@      @[@@@@XO
)@@G@@      @A@@@@ ILLEGAL ALPHABETIC DELIMITER USE.  @[@@@@      @F@@@@      XP
)@@G@@     (PASS 1).  AN ALPHABETIC DELIMITER IS THE CHARACTER (')@F@@@@      XQ
)@@G@@ OR ($) WHICH IS USED TO CONTAIN ALPHABETIC CONSTANTS.  EACH@E@@@@      XR
)@@G@@ UNCOUNTED-FORM ALPHABETIC CONSTANT MUST BEGIN AND END@G@@@@       WITH XS
)@@G@@THE APPROPRIATE ALPHABETIC DELIMITER.  FAILURE TO END A     @F@@@@      XT
)@@G@@ STRING WHICH WAS BEGUN IS AN ILLEGAL USE OF AN ALPHABETIC  @#@@@@      XU
)@@G@@ DELIMITER. @[@@@@      @[@@@@      @B@@@@ NON-NUMERIC IN FORTRAN STATEMXV
)@@G@@ENT LABEL.  @[@@@@      @F@@@@           (PASS 1).  A FORTRAN STATEMENT XW
)@@G@@LABEL MUST BE A PURE    @F@@@@       INTEGER OF FROM 1 TO 5 DIGITS.  ANYXX
)@@G@@ CHARACTER BESIDES THE  @ @@@@       DIGITS 0-9 IS ILLEGAL. @[@@@@      XY
)@@G@@@[@@@@      @A@@@@ TOO MANY REFERENCES TO SYMBOLS.    @[@@@@      @F@@@@XZ
)@@G@@           (PASS 1).  THE SYMBOL CROSS-REFERENCE TABLE IS FULL.   @F@@@@YA
)@@G@@       CROSS-REFERENCE TABULATION IS TURNED OFF AT THIS POINT.    @[@@@@YB
)@@G@@      @[@@@@      @ @@@@ TOO MANY SYMBOLS REFERENCED. @[@@@@      @F@@@@YC
)@@G@@           (PASS 1).  THE CROSS-REFERENCE BASE TABLE IS FULL.  NO @F@@@@YD
)@@G@@       MORE NEW VARIABLES WILL BE REFERENCED, BUT CROSS-REFERENCE @F@@@@YE
)@@G@@       TABULATION WILL CONTINUE UNTIL THE REFERENCE TABLE IS FULL.@[@@@@YF
)@@G@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)   YG
)@@G@@      13- 11@[@@@@      @[@@@@      @[@@@@      @ @@@@ ALPHABETIC CONSTAYH
)@@G@@NT TOO LONG.@[@@@@      @F@@@@           (PASS 1).  AN ALPHABETIC CONSTAYI
)@@G@@NT IN AN ARITHMETIC     @B@@@@       CONTEXT IS LIMITED TO 6 CHARACTERS.YJ
)@@G@@@[@@@@      @[@@@@      @^@@@@ ILLEGAL FUNCTION NAME. @[@@@@      @F@@@@YK
)@@G@@           (PASS 1).  AN ILLEGAL ITEM OR EXPRESSION HAS BEEN USED @F@@@@YL
)@@G@@       AS THE NAME OF A FUNCTION.  ONLY SYMBOLS CONSISTING OF FROM@F@@@@YM
)@@G@@       1 TO 6 LETTERS AND NUMBERS AND BEGINNING WITH A LETTER ARE @#@@@@YN
)@@G@@       LEGAL.     @[@@@@      @[@@@@      @^@@@@ TOO MANY LEFT BRACKETS.YO
)@@G@@@[@@@@      @F@@@@           (PASS 1).  THE STATEMENT CONTAINS TOO MANY YP
)@@G@@LEFT BRAC-  @G@@@@       KETS.  EACH LEFT BRACKET MUST HAVE A MATCHING RYQ
)@@G@@IGHT BRACKET.     @[@@@@      @[@@@@      @ @@@@ TOO MANY RIGHT BRACKETSYR
)@@G@@.     @[@@@@      @F@@@@           (PASS 1).  THE STATEMENT CONTAINS TOOYS
)@@G@@ MANY RIGHT BRAC- @G@@@@       KETS.  EACH RIGHT BRACKET MUST HAVE A MATYT
)@@G@@CHING LEFT BRACKET.     @[@@@@      @[@@@@      @ @@@@ ILLEGAL NESTING OYU
)@@G@@F BRACKETS. @[@@@@      @F@@@@           (PASS 1).  THE RIGHT BRACKET OCYV
)@@G@@CURS BEFORE ITS CORRES- @ @@@@       PONDING LEFT BRACKET.  @[@@@@      YW
)@@G@@@[@@@@      @A@@@@ COMPILER EXPECTS END OF STATEMENT. @[@@@@      @F@@@@YX
)@@G@@           (PASS 1).  THERE ARE SOME EXTRANEOUS PUNCHINGS TO THE  @E@@@@YY
)@@G@@       RIGHT OF THE NATURAL END OF THE STATEMENT, WHICH ARE @#@@@@      YZ
)@@G@@ IGNORED.   @[@@@@      @[@@@@      @A@@@@ ILLEGAL NESTING OF THROUGH/DOZA
)@@G@@.     @[@@@@      @F@@@@           (PASS 1).  A LOOP BEGUN IN THE MAIN PZB
)@@G@@ART OF THE PROGRAM@E@@@@       MAY NOT END IN AN INTERNAL FUNCTION, OR VZC
)@@G@@ICE VERSA.  @[@@@@      @[@@@@      @A@@@@ ILLEGAL PARAMETER STRING FORMZD
)@@G@@ATION.@[@@@@      @F@@@@           (PASS 1).  THE 'PARAMETER' STATEMENT ZE
)@@G@@MAY NOT HAVE AN   @F@@@@       EXPRESSION INVOLVING OTHER THAN CONSTANTSZF
)@@G@@ OR VARIABLES     @E@@@@       CONSTANT PARAMETERS WITH THE ALLOWABLE OPZG
)@@G@@ERATORS.    @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBEZH
)@@G@@R 1971 VERSION)         13- 12@[@@@@      @[@@@@      @[@@@@      @[@@@@ZI
)@@G@@      @[@@@@      @ @@@@ CONFLICT IN NAME OF BLOCK.   @[@@@@      @F@@@@ZJ
)@@G@@           (PASS 1).  THE '...' BLOCK OPERATOR HAS BEEN USED ILLE-@F@@@@ZK
)@@G@@       GALLY.  THE USUAL CAUSES OF THIS ERROR ARE OMISSION OF THE @G@@@@ZL
)@@G@@       VARIABLE NAME, I.E. A(1)...(10), OR CHANGE OF VARIABLE NAME,     ZM
)@@G@@@ @@@@       I.E. A(1)...B(12).     @[@@@@      @[@@@@      @ @@@@ VARIAZN
)@@G@@BLE GROUP TOO LONG.     @[@@@@      @F@@@@           (PASS 1).  IN A FORZO
)@@G@@TRAN 'DATA' STATEMENT, THE VARIABLE @F@@@@       GROUP MUST MATCH ONE-TOZP
)@@G@@-ONE WITH THE LITERAL LIST.  THIS   @F@@@@       MESSAGE WILL ARISE IF TZQ
)@@G@@HERE ARE MORE VARIABLES THAN LI-    @#@@@@       TERALS.    @[@@@@      ZR
)@@G@@@[@@@@      @C@@@@ REDEFINITION OF DIMENSION VECTORS NOT ALLOWED. @[@@@@ZS
)@@G@@      @F@@@@           (PASS 1).  A 'DIMENSION' STATEMENT SPECIFYING MULZT
)@@G@@TIPLE @F@@@@       SUBSCRIPTS, AND THUS SETTING UP A DIMENSION VECTOR, MZU
)@@G@@AY NOT@D@@@@       BE GIVEN MORE THAN ONCE FOR THE SAME VARIABLE. @[@@@@ZV
)@@G@@      @[@@@@      @ @@@@ ILLEGAL SUBSCRIPT FORMATION. @[@@@@      @F@@@@ZW
)@@G@@           (PASS 1).  A NONSTANDARD-BASE DIMENSION STATEMENT MUST @F@@@@ZX
)@@G@@       SPECIFY THE SMALLER SUBSCRIPT OF A RANGE FIRST.  THE ORDER @C@@@@ZY
)@@G@@       IS REVERSED INTERNALLY BY THE COMPILER.  @[@@@@      @[@@@@      ZZ
)@@G@@@ @@@@ CONSTANT GROUP TOO LONG.     @[@@@@      @F@@@@           (PASS 1AA
)@@G@@).  IN A FORTRAN 'DATA' STATEMENT, THE VARIABLE @F@@@@       GROUP MUST AB
)@@G@@MATCH ONE-TO-ONE WITH THE LITERAL LIST.  THIS   @E@@@@       MESSAGE WILAC
)@@G@@L ARISE IF THERE ARE MORE LITERALS THAN   @#@@@@       VARIABLES. @[@@@@AD
)@@G@@      @[@@@@      @E@@@@ ARITHMETIC IF HAS MISSING LABEL OR ILLEGAL PUNCAE
)@@G@@TUATION.    @[@@@@      @F@@@@           (PASS 1).  THE ARITHMETIC 3-WAYAF
)@@G@@ IF STATEMENT MUST HAVE @G@@@@       THREE FIELDS, EACH EITHER NULL OR CAG
)@@G@@ONTAINING A VALID FORTRAN     @^@@@@       STATEMENT NUMBER.@[@@@@      AH
)@@G@@@[@@@@      @ @@@@ THIS FORMAT HAS NO LABEL.    @[@@@@      @F@@@@      AI
)@@G@@     (PASS 1).  A FORMAT STATEMENT CANNOT POSSIBLY BE RE-   @[@@@@*****^AJ
)@@G@@@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBER 1971 VERSION)         AK
)@@G@@13- 13@[@@@@      @[@@@@      @[@@@@      @B@@@@       FERENCED UNLESS IAL
)@@G@@T HAS A LABEL.    @[@@@@      @[@@@@      @A@@@@ THIS LABEL HAS BEEN USEAM
)@@G@@D BEFORE.   @[@@@@      @F@@@@           (PASS 1).  THE STATEMENT LABEL AN
)@@G@@HAS ALREADY BEEN USED ON@E@@@@       EITHER A FORMAT STATEMENT OR AN EXEAO
)@@G@@CUTABLE STATEMENT.@[@@@@      @[@@@@      @B@@@@ '---' HAS BEEN USED AS AP
)@@G@@A STATEMENT LABEL.@[@@@@      @G@@@@           (PASS 1).  A FORMAT STATEAQ
)@@G@@MENT MUST HAVE A LABEL WHICH IS     @F@@@@       UNIQUE.  FORMAT NUMBERSAR
)@@G@@ MAY NOT BE USED FOR EXECUTABLE     @ @@@@       STATEMENT NUMBERS.     AS
)@@G@@@[@@@@      @[@@@@      @C@@@@ ILLEGAL CHARACTER IN PARENTHESES GROUP IGAT
)@@G@@NORED.@[@@@@      @F@@@@           (PASS 1).  AN I/O STATEMENT PARENTHESAU
)@@G@@IS GROUP GIVING   @F@@@@       UNIT AND FORMAT OR UNIT CONTAINED AN ILLEAV
)@@G@@GAL CHARACTER.    @F@@@@       THIS ERROR CAN COME FROM COMPILING NON-STAW
)@@G@@ANDARD FORTRAN    @E@@@@       READ/WRITE RANDOM CALLS, OR FROM KEYPUNCHAX
)@@G@@ING ERRORS. @[@@@@      @[@@@@      @A@@@@ UNRECOGNIZABLE OPERATOR '---'AY
)@@G@@.     @[@@@@      @F@@@@           (PASS 1).  THE INDICATED OPERATOR WASAZ
)@@G@@ NOT FOUND IN THE @F@@@@       OPERATOR TABLE.  CHECK KEYPUNCHING, THEN BA
)@@G@@CHECK THE TABLE OF@B@@@@       LEGAL OPERATORS IN CHAPTER THREE.  @[@@@@BB
)@@G@@      @[@@@@      @A@@@@ VALUE ASSIGNED TO ILLEGAL ITEM.    @[@@@@      BC
)@@G@@@F@@@@           (PASS 1).  ONLY VARIABLES, FUNCTION PARAMETERS, AND THEBD
)@@G@@@F@@@@       TWO SPECIAL PSEUDO-FUNCTIONS IND AND FLD CAN OCCUR ON THE  BE
)@@G@@@A@@@@       LEFT HALF OF AN EQUALS SIGN. @[@@@@      @[@@@@      @A@@@@BF
)@@G@@ REDEFINITION OF DO INDEX ILLEGAL.  @[@@@@      @F@@@@           (PASS 1BG
)@@G@@).  INSIDE A DO LOOP, THE INDEX VARIABLE MAY NOT@F@@@@       BE CHANGED.BH
)@@G@@  THIS INCLUDES HAVING A SECOND LOOP INSIDE WITH@^@@@@       THE SAME INBI
)@@G@@DEX.  @[@@@@      @[@@@@      @A@@@@ STATEMENT ILLEGAL IN BLOCK DATA.   BJ
)@@G@@@[@@@@      @G@@@@           (PASS 1).  IN A BLOCK DATA SUBPROGRAM, ONLYBK
)@@G@@ THOSE STATE-     @E@@@@       MENTS PERTAINING TO DATA INTRODUCTION AREBL
)@@G@@ LEGAL.     @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RALPH (DECEMBEBM
)@@G@@R 1971 VERSION)         13- 14@[@@@@      @[@@@@      @[@@@@      @F@@@@BN
)@@G@@ DEFINED FUNCTION USED WITH INCONSISTENT NUMBER OF PARAMETERS.    @[@@@@BO
)@@G@@      @E@@@@           (PASS 1).  IF A FUNCTION HAS BEEN DEFINED VIA THEBP
)@@G@@@F@@@@       'DEFINE' STATEMENT, OR VIA THE FORTRAN ARITHMETIC STATEMENTBQ
)@@G@@@F@@@@       FUNCTION DEFINITION, IT MUST HAVE THE PROPER NUMBER OF     BR
)@@G@@@E@@@@       ARGUMENTS, I.E. THE SAME NUMBER AS THE DEFINITION.   @[@@@@BS
)@@G@@      @[@@@@      @B@@@@ NESTING OF INCLUDE STATEMENT ILLEGAL.    @[@@@@BT
)@@G@@      @F@@@@           (PASS 1).  THE CODE INCLUDED FROM A FORTRAN PROCEBU
)@@G@@DURE  @E@@@@       VIA THE 'INCLUDE' STATEMENT MAY NOT CONTAIN ANOTHER  BV
)@@G@@@#@@@@       'INCLUDE'. @[@@@@      @[@@@@      @A@@@@ UNRECOGNIZABLE ITBW
)@@G@@EM.  LIST ASSUMED.@[@@@@      @G@@@@           (PASS 1).  THE 'INCLUDE' BX
)@@G@@STATEMENT HAS BEEN USED WITH AN     @E@@@@       UNKNOWN PARAMETER.  IT BY
)@@G@@HAS BEEN CONVERTED TO 'INCLUDE@#@@@@       XXX,LIST'. @[@@@@      @[@@@@BZ
)@@G@@      @ @@@@ '---' CANNOT BE ASSIGNED.    @[@@@@      @F@@@@           (CA
)@@G@@PASS 1).  THE COMPILER ENCOUNTERED A FILE-ASSIGNMENT  @F@@@@       ERRORCB
)@@G@@ WHILE TRYING TO ASSIGN THE FILE FOR AN 'INCLUDE'     @#@@@@       PROCECC
)@@G@@DURE. @[@@@@      @[@@@@      @A@@@@ ERROR ENCOUNTERED READ ALTERNATE.  CD
)@@G@@@[@@@@      @F@@@@           (PASS 1).  THE 'INCLUDE' PROCEDURE BEING RECE
)@@G@@AD HAS AN   @F@@@@       INPUT-OUTPUT ERROR.  THIS IS USUALLY DUE TO INCCF
)@@G@@ORRECTLY    @C@@@@       SPECIFYING THE END OF THE PROCEDURE.     @[@@@@CG
)@@G@@      @[@@@@      @^@@@@ '---' CANNOT BE FOUND. @[@@@@      @F@@@@      CH
)@@G@@     (PASS 1).  THE 'INCLUDE' PROCEDURE NAME CANNOT BE FOUND@F@@@@      CI
)@@G@@ BY THE COMPILER.  IT HAS SEARCHED SOURCE INPUT, TPF$, AND  @F@@@@      CJ
)@@G@@ RLIB$ IN THAT ORDER IF NO ALTERNATE FILE WAS SPECIFIED, OR @F@@@@      CK
)@@G@@ THE SPECIFIED FILE IF ONE WAS GIVEN, AND COULD NOT LOCATE  @G@@@@      CL
)@@G@@ THE PROCEDURE.  CHECK SPELLING, THEN CHECK PROCEDURE DEFINI-     @]@@@@CM
)@@G@@       TION.@[@@@@      @[@@@@      @B@@@@ DEFINED FUNCTION PRODUCES TOOCN
)@@G@@ MUCH CODE. @[@@@@      @F@@@@           (PASS 1).  THIS INVOCATION OF ACO
)@@G@@ 'DEFINE' OR FORTRAN    @F@@@@       ARITHMETIC STATEMENT FUNCTION HAS CCP
)@@G@@AUSED THE EXPANSION     @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RACQ
)@@G@@LPH (DECEMBER 1971 VERSION)         13- 15@[@@@@      @[@@@@      @[@@@@CR
)@@G@@      @F@@@@       BUFFER TO OVERFLOW.  BECAUSE THE EXPANSION BUFFER IS CS
)@@G@@BOR-  @F@@@@       ROWED FROM THE END OF THE CODE BUFFER, THE AMOUNT OF CT
)@@G@@CODE  @F@@@@       NECESSARY TO OVERFLOW IT VARIES.  REDUCE THE COMPLEXICU
)@@G@@TY OF @B@@@@       THE DEFINITION, OR OF THE CALL.    @[@@@@      @[@@@@CV
)@@G@@      @#@@@@ LABEL NOT FOUND. @[@@@@      @F@@@@           (PASS 1).  THCW
)@@G@@E TERMINATION LABEL FOR A 'DELETE' STATE- @E@@@@       MENT WAS NOT FOUNCX
)@@G@@D.  THE REMAINDER OF THE PROGRAM IS @#@@@@       IGNORED.   @[@@@@      CY
)@@G@@@[@@@@      @E@@@@ THERE IS A TRANSFER TO THIS LABEL OUTSIDE THE LOOP RACZ
)@@G@@NGE.  @[@@@@      @F@@@@           (PASS 1).  IT IS ILLEGAL TO TRANSFER DA
)@@G@@TO A DO LOOP FROM @F@@@@       OUTSIDE THE LOOP.  IF THE TRANSFER STATEMDB
)@@G@@ENT OCCURS AFTER  @G@@@@       THE LABEL, THEN THE TRANSFER WILL BE FLAGDC
)@@G@@GED.  IF THE TRANS-     @G@@@@       FER OCCURS BEFORE THE LABEL, THEN TDD
)@@G@@HE LABEL WILL BE FLAGGED.     @[@@@@      @[@@@@      @C@@@@ THIS IS A TDE
)@@G@@RANSFER INTO THE RANGE OF A DO.     @[@@@@      @F@@@@           (PASS 1DF
)@@G@@).  IT IS ILLEGAL TO TRANSFER TO A DO LOOP FROM @F@@@@       OUTSIDE THEDG
)@@G@@ LOOP.  IF THE TRANSFER STATEMENT OCCURS AFTER  @G@@@@       THE LABEL, DH
)@@G@@THEN THE TRANSFER WILL BE FLAGGED.  IF THE TRANS-     @G@@@@       FER ODI
)@@G@@CCURS BEFORE THE LABEL, THEN THE LABEL WILL BE FLAGGED.     @[@@@@      DJ
)@@G@@@[@@@@      @F@@@@ LOOP ENDING IS A TRANSFER -- ITERATION CODE CANNOT BEDK
)@@G@@ REACHED.   @[@@@@      @F@@@@           (PASS 1).  A LOOP MAY NOT END WDL
)@@G@@ITH AN UNCONDITIONAL    @F@@@@       TRANSFER STATEMENT, AN ARITHMETIC 'DM
)@@G@@IF', OR A 'RETURN'.     @[@@@@      @[@@@@      @B@@@@ THE CHARACTER '-'DN
)@@G@@ IS ILLEGAL AS USED.    @[@@@@      @F@@@@           (PASS 1).  THE INDIDO
)@@G@@CATED CHARACTER IS NOT LEGAL IN THE @A@@@@       CONTEXT IN WHICH IT IS DP
)@@G@@FOUND.@[@@@@      @[@@@@      @B@@@@ ILLEGAL PUNCTUATION USED IN A CONSTDQ
)@@G@@ANT.  @[@@@@      @F@@@@           (PASS 1).  THERE IS A CONSTANT WHICH DR
)@@G@@CONTAINS TOO MAY  @F@@@@       DECIMAL POINTS, OR SOME OTHER SUCH NONSENDS
)@@G@@SE PUNCTUATION.   @[@@@@      @[@@@@      @A@@@@ CONFLICT IN MODE FOR CODT
)@@G@@NSTANT.     @[@@@@      @F@@@@           (PASS 1).  A CONSTANT OTHER THADU
)@@G@@N 0 OR 1 HAS BEEN DEC-  @[@@@@*****^@G@@@@A GUIDE TO PROGRAMMING WITH RADV
)@@G@@LPH (DECEMBER 1971 VERSION)         13- 16@[@@@@      @[@@@@      @[@@@@DW
)@@G@@      @^@@@@       LARED BOOLEAN.   @[@@@@      @[@@@@      @B@@@@ ILLEGDX
)@@G@@AL PUNCTUATION FOR COMPLEX CONSTANT.@[@@@@      @E@@@@           (PASS 1DY
)@@G@@).  A COMPLEX CONSTANT MUST BE TWO NUMBERS@F@@@@       ENCLOSED IN PARENDZ
)@@G@@THESES SEPARATED BY A COMMA.  ANY OTHER   @ @@@@       PUNCTUATION IS ILEA
)@@G@@LEGAL.@[@@@@      @[@@@@      @ @@@@ ILLEGAL MODE FOR SUBSCRIPT.  @[@@@@EB
)@@G@@      @F@@@@           (PASS 3).  DOUBLE AND MULTIPLE SUBSCRIPTS MUST BEEC
)@@G@@ OF   @F@@@@       INTEGER MODE.  SINGLE SUBSCRIPTS MUST BE FLOATING POIED
)@@G@@NT OR @#@@@@       INTEGER.   @[@@@@      @[@@@@      @D@@@@ ILLEGAL OPEEE
)@@G@@RAND MODES X,Y USED WITH OPERATOR '--'.   @[@@@@      @F@@@@           (EF
)@@G@@PASS 3).  THE OPERATOR '--' IS NOT DEFINED FOR THE    @E@@@@       MODESEG
)@@G@@ AT HAND.  SEE CHAPTER 3 FOR A DISCUSSION OF    @A@@@@       OPERATOR-MOEH
)@@G@@DE COMBINATIONS.  @[@@@@      @[@@@@      @C@@@@ TEMPORARY '-' NOT DEFINEI
)@@G@@ED AT '-' USED TO '-'.  @[@@@@      @F@@@@           (PASS 3).  THIS IS EJ
)@@G@@AN ERROR IN THE OPTIMIZER, WHICH    @G@@@@       SOULD NEVER HAPPEN IF TEK
)@@G@@HE COMPILER IS WORKING PROPERLY.  THE     @F@@@@       OPTIMIZER HAS FLAEL
)@@G@@GGED A TEMPORARY RESULT TO BE SAVED FOR   @G@@@@       LATER USE, BUT SOEM
)@@G@@MEHOW IN THE INTERIM THE TEMPORARY HAS BEEN     @C@@@@       LOST.  THISEN
)@@G@@ ERROR SHOULD NEVER OCCUR.    @[@@@@      @[@@@@      @E@@@@ THE VARIABLEO
)@@G@@E '---' HAS TOO LARGE A CONSTANT SUBSCRIPT.     @[@@@@      @F@@@@      EP
)@@G@@     (PASS 3).  THE CONSTANT SUBSCRIPT EXCEEDS THE DIMENSION@D@@@@      EQ
)@@G@@ LIMITS FOR THE INDICATED VARIABLE.  SHAME.     @[@@@@      @[@@@@      ER
)@@G@@@F@@@@ THE VARIABLE '--' HAS A SUBSCRIPT AND NO DIMENSION STATEMENT.    ES
)@@G@@@[@@@@      @F@@@@           (PASS 3).  A VARIABLE MAY NOT BE SUBSCRIPTEET
)@@G@@D UNLESS IT @^@@@@       IS DIMENSIONED.  @[@@@@      @[@@@@      @E@@@@EU
)@@G@@ THE STATEMENT LABEL '--@@@[R/[AL@C@ <$^@@[AL <$@@@@"$@@@@@[@@@@@@@@@@]8EV
)@@G@@@BW@@W@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LMSC25@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"M@C@@@E^@@@@E^@W@AB^[[EX
)@@G@@@@E^BT@@2^B6@@2^+_@[S U]@#? V!@@? Z<@#  )V@@@___@@@___@@@___@@@___@@@___EY
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___EZ
)@@G@@C^F@@#[C@@CMC^F@@@[^@@CLC@FK@[[?@@CLC@F@@][^@@CEC8K@@PC@)^@@[@!@@@8#K@CEFA
)@@G@@C^F@@][^@@CMR;@@CL'=@@[]/KF@@ @[0@@@@@@@@@C@@@[Y;*@@@S;C@@@Y[)FK@@/KF@@]FB
)@@G@@[@@^@[C8W@@@KCK^@[H8)@@[&;K@C,C@@@@H'=@@@HG8W@@@ @H@@@>@@@G]/K@@C:>@@@G#FC
)@@G@@/KF@@[C8H@@@?8I@@@/K@@CXC@@@G[C8K@@#/KF@@@C@@@F6C8K@@[/KF@@@C@@@F/C8K@@]FD
)@@G@@/KF@@@L8@@@[C@)^@[G8)@@[*@I@@@?CY@@@/K@@C9G),@@@/K@@C3%CI@@@/KF@@@C)"@@@FE
)@@G@@H80@@[T80@@AG="@@@9?I@@[?80@@BC@K@G^/KF@@[N8W@@@C^@^@[G8@@@[C9K@@[ @@^@JFF
)@@G@@N8)@@@(@G@@@/K@@D,(4G@@@/K@@DY%1W@@@/K@@D,C?W@@@!8K@@A/K@@D-%(K^@J @@^@IFG
)@@G@@[(K^@J9??@@[C-G@@@:9@@@[C@0@G^')H@EYH9@@@[T9@@@AG>G@@@')H@E&G)G@@@G8@@@[FH
)@@G@@/K@@DD:9K@@[/K@@D&C*?@@@:8)@@.N8)@@[%[K@[[/K@@DY/K@@DP%@)@G^[5@^@I:@)@G^FI
)@@G@@[-K^@I/K@@DY(@@@[]:(K^@J/K@@D3[(K^@J @@^@I:[K@[[/K@@D;G9K@@[*@G@@@/K@@DCFJ
)@@G@@ @@^@I @@^@J/KF@@@:[K@[[ *@^@J9?K^@I98V@@@C8@@@-[=@^@J(?@^@J/KF@@[C@@^@VFK
)@@G@@D8)@@@C80@@@C!@^@J8^@@EI1@@@@I!8)@[@C80@@E[))^@J[=0^@J/KF@@[C8K@@@;=@@@AFL
)@@G@@?8K@@'?8K@@0/K@@ET(@@@@JC80@[@H8K@@0T8)@@EG8!@@@/K@@EB/^0@EE%8K@@+:8K@@-FM
)@@G@@C8.@@@/@0@EE/K@@EB9*)^@K9*)^@M[@)^@O[@)^@P[@)^@Q9*)^@R9*)^@T[@)^@V/K@@D(FN
)@@G@@[1@^@I[!@^@I[(@^@I[>@^@I[5@^@J[1@^@J[!@^@JC80@@F+8K@@_:8)@@ ;^@@@A8#0@E0FO
)@@G@@9*@^@#C@@@G C@K@GAC8)@@BC@0@G^[@"^@A8#)@E9N4K^@I9!@^@K/\)@F$C9K@@*(4@^@IFP
)@@G@@*)@^@I')H)@@N0K^@I9!@^@M*@@@[[/K@@FCC[@@GBN8K@@^/\)@F$N?K^@I(@@@[[/K@@FMFQ
)@@G@@C9K@@(')H)@@C[@^@O/\)@F$C9K@@)')H)@@(*@^@I*=@^@I/K@@FSC@@@GC'=@@@J/KF@@@FR
)@@G@@C9K@@/')H)@@N*K^@IC[@^@P/\)@F$N=K^@I(@@@[[/K@@FPC9K@@/')H)@@C[@^@Q/\)@F$FS
)@@G@@/K@@FP;>@@@A')H)@@8KK@F>/KI@@@[5W@@@[1W@@@[!W@@@[(W@@@[>W@@@/\0@F\[-W)@@FT
)@@G@@Q;K@F(/KJ@@@PROCESSOR CALL ERROR    @[^@F2ABNORMAL RETURN FROM READ$    FU
)@@G@@@[ @F7TOO MANY SPECIFICATIONS @[^@F.]@@@@@[@@@@@      @@[^@A@@[@F(TPF$  FV
)@@G@@@@G^@]R;@@@[A#@^[FA#@^[G/K@@GNR;@@@[A#@^[G @@^[F/K@@GN @@^[F @@^[GA@K^[]FW
)@@G@@A@)^[#A@0^[^A]0^[ *@@^[F/K@@G=R@V@@[&8K@@[R8)@@FR#@^[[A#[)@@8@)@GXQ@V@@]FX
)@@G@@R8)@@B @[)@@8@)@G- @FK@#R#@^@>/^@@G%R#@^@=/,0@CS/K@@HTR]0^[ R#FK@@/,0@D#FY
)@@G@@/K@@H[R]0^[ *@@^[F/K@@H[R;@@@[A#FK@#R@V@@[&8K@@[R8)^@K&8)@@[R80@@FR#])@@FZ
)@@G@@/^@@G'R#@^[[A#[)@@8@0@G7Q@V@@]R8)@@B')]^@WA#[)@@8@)@G"R]0^[ (@@^[G/K@@HKGA
)@@G@@R#@^[F/^@@HC9?FK@^/K@@HD9?FK@[R3)^@I/^)@HJ9?)^@R9*)^@MR7)^@JA3)^@I/,0@E\GB
)@@G@@R@K^[]R@)^[#R@0^[^R]0^[ *@@^[F/KF@@#*@@^[G/KF@@A/KF@@ '=@@@I[@@^[EC8@^[CGC
)@@G@@'=@@[Q'=@@@DC@VK@[H8K@@[S@K^[HG@V@@@;C)@@-')I@H>/KF@@#C4H@@@C0H@@@C?H@@@GD
)@@G@@@@@@@@C*H@@@C=H@@@C)H@@@C@VK@[H8K@@[S@K^[HG@V@@@;C)@@-')I@H>[4@^[IC@@^[IGE
)@@G@@/KF@@#C@VK@]H8K@@[S@K^[HG@V@@[;C)@@-C)FK@@')I@H./KF@@^[4H@@@[0H@@@[?H@@@GF
)@@G@@@@@@@@[*H@@@[=H@@@[)H@@@C8@@@@C@VK@@H8K@@[W@FK@[G8@@@[[@FK@]G8K@@[[@VK@#GG
)@@G@@/KF@@ C8@@@@C@VK@@H8K@@[W@FK@[G8@@@[[@FK@]S8K@@A[@:K@#/KF@@ **PF**@@@@W@GH
)@@G@@@@@@@ @@@@@ @@@@@[@@@@J@@@@@L@@@@@N@@@@@P@            C9K@@K[XW@@#K@@@J#GI
)@@G@@A#W@@^ @G@@ '=@@@#C5W@@#:9K@@ /K@@I4/ K@I_&;K@@[N8K@@W3[X)@@/K@@I8C[@@IQGJ
)@@G@@:[G@@A/KF@@[R;@@@]/KF@@@R;)@@T&;K@@[ @H)@]8#)@I69!@@IQ9(G@@AC9K@@C[XW@@#GK
)@@G@@'=@@@#C5W@@#/[V@@[R;@@@_;@@@@AO#@@@L/KF@@@@@W@@AR;/@@D/K@@JHR;/@@G/K@@JHGL
)@@G@@R;/@@J/K@@JHR;/@@M/K@@JHR;/@@PC[K@IQ%[W@@A/K@@KW;@K@@MABW@@^ABZ@@[;GK@@6GM
)@@G@@W8K@@WT8K@@WAFW@@^?8K@#^/K@@KUK^W@@^AB\@@]C J@@@/[@@J$K9@@@ [[G@@ [XZ@@@GN
)@@G@@RFZ@@[?CW@@^AFW@@^:8K@]G/K@@KJC9K@@K/K@@I;R;?@@AR#K@IU;DK@@=O;)@@#:@)@@JGO
)@@G@@/K@@J3(^I@@@/K@@J%RBY@@@CDY@@[G9K@@8/K@@J%;D@@@=W9@@@WG[@@@HC[K@IR:8?@@PGP
)@@G@@/K@@J/O;)@@#C Y@@@/[K@J6R#K@@JP;W@@D;GK@@=W8K@@#?[H@IUC[H@IUH9K@@B![@@@LGQ
)@@G@@/K@@KSC9K@@E/@K@KCC9K@@^[!Z@@][ J@@@C9K@]G[DZ@@[C9K@]F[XZ@@]/K@@JXR;)@]FGR
)@@G@@RBZ@@[&;K@@[ @H)@@8#)@KMP;K@@[C!Z@@][DX@@@/KF@@[R;@@@=/KF@@@R;@@@O/KF@@@GS
)@@G@@R;@@@E/KF@@@R;/@@D/K@@K$R;/@@G/K@@K$R;/@@J/K@@K$R;/@@M/K@@K$R;/@@P'^@@QQGT
)@@G@@RB\@@[RB,@]F?@)@@H/K@@K0C[K@@H'^@@P,A#)@@G/KF@@[R;@@@G/KF@@@R;/@@D/K@@K;GU
)@@G@@R;/@@G/K@@K;R;/@@J/K@@K;R;/@@M/K@@K;R;/@@P'^@@QQC[@@QO[[G@@ RBK@Q+L@K@QPGV
)@@G@@AB?@@^C[K@QPG!Z@@]R;)@@K=4!@@#G!Z@@]R;K@@W!9K@@WR;K@@8AFW@@^/K@@I'R;/@@DGW
)@@G@@/K@@LOR;/@@G/K@@LOR;/@@J/K@@LOR;/@@M/K@@LOR;/@@P'^@@QQC9K@@C*?J@@@'^@@Q!GX
)@@G@@C Z@@[[ W@@^C9K@]G[DW@@^:DZ@@[ @J@@@C Z@@@[[W@@  ^J@@[ WJ@@@/[V@@[/K@@I'GY
)@@G@@R;/@@D/K@@L!R;/@@G/K@@L!R;/@@J/K@@L!R;/@@M/K@@L!R;/@@P'^@@QQ @@@QM'^@@M7GZ
)@@G@@C Y@@@/-@@L3CDY@@@;D@@@=/[K@L;'^@@P,AE0@QZ/,0@MD/K@@M RE0@QZ/ K@L5R#@@@KHA
)@@G@@AF@@QN;*@@@#:8@@@SR;@@@);CK@@=O;@@@[AB)@QNR#)@QM/KF@@@RE0@QZRB@@Q+9?K@QMHB
)@@G@@/KF@@[9!H@@@9.I@@@/K@@M4%8/@@D/K@@M<C!X@@#%!Y@@#/K@@MV9!H@@^99@@MP9.I@@^HC
)@@G@@/K@@MS1@H@@#1@I@@#/KF@@@CDY@@]C9@@@#/KF@@[!9K@@ /K@@M)C9K@@^!!Y@@#/K@@MLHD
)@@G@@C9@@@]C Y@@#/KF@@[%8/@@J/K@@M1C5H@@#-5I@@#=9K@@K/K@@M4>9@@@K/K@@M19!I@@^HE
)@@G@@9.H@@^/K@@M4C[I@@B%[H@@B/K@@M40@I@@#0@H@@#/KF@@@C9@@@[C Y@@]/KF@@[/K@@@@HF
)@@G@@C[X@@@G[X@@[;D@@@=W9@@]FG Z@@[R#)@@L/K@@M7R;/@@G/K@@NER;/@@J/K@@NER;/@@MHG
)@@G@@/K@@NER;/@@P/K@@NDR;/@@D CH@@] ^H@@# ^H@@]AA0@QZ9!H@@]9(@@P#%8/@@D/K@@NNHH
)@@G@@9!@@IZ(@H@@^9(H@@^R;\@@@O;)@@#C Y@@@:8?@@SC[K@IR/[K@NOH Z@@@T9K@@W[DK@Q+HI
)@@G@@CDJ@@[G!J@@]C9K@@K=5X@@#G9@@@^!D@@Q+/K@@KS[D@@Q+RB\@@[C I@]FG9@@@[[[@@P]HJ
)@@G@@=5X@@#G9@@@[[ I@]FC5H@@#)9@@@):8/@@P[5X@@#/,0@L!/K@@OGR#)@@G9?@@Q)C[@@P]HK
)@@G@@%8/@@D/K@@N'CDY@@][DX@@][DI@@]/K@@O#C Y@@][ X@@][ I@@]%8/@@P/K@@O#C Y@@#HL
)@@G@@[ X@@#[ I@@#/K@@OV'^@@Q(1@I@@#/K@@OE'^@@P,0@I@@#/K@@OW/,0@MD'^@@Q</K@@OWHM
)@@G@@RA0@QZ/G@@I3/)@@I39?@@Q)RA0@QNRF)@QNC[K@P]/^)@O.'^@@M7C[K@P]/>@@OT[ Y@@@HN
)@@G@@/K@@OW[DY@@@/K@@OW'^@@Q(C[K@P]RA0@QZ'^@@P,'^@@Q(&;K@@[&;)@@[C5H@@#+9@@@ZHO
)@@G@@[5X@@#N?Z@@]C9K@@K=5X@@#N8K@@CM#!)@@RB)@Q+:8/@@D*@I@@D/K@@O1'=@@@?;@@@@MHP
)@@G@@A#I@@D9?@@Q)9!@@P#9(H@@]CDK@Q+[DZ@@[R#K@P]C9@@@A:8/@@D%!I@@#/K@@O/A#W@@THQ
)@@G@@/K@@MA')I@O"/K@@OV[ V@@][ V@@#[DV@@]@@@@@@@@@@@@@@@@@@R;/@@D/K@@PIR;/@@GHR
)@@G@@/K@@PIR;/@@J/K@@PIR;/@@M/K@@PIR;/@@PAA0@QZ/,0@L!/K@@PVRA0@QZR#)@@G9?@@Q)HS
)@@G@@'^@@Q<%8/@@D/K@@MAC[K@QM:[W@@T @G@@T/K@@MARA0@QZ/KF@@@R;/@@AO;0@@#CDZ@@[HT
)@@G@@%9K@]G/K@@P= ^J@@[ @J@@@*^J@@[/K@@P?%8/@@P/K@@PY @G@@ K@@@J#A#W@@^/K@@I'HU
)@@G@@R;@@@+/KF@@@/K@@P,[D@@QNR#)@QM[[K@QMAB)@QNH9K@@[T!Z@@]G9K@]G;D@@@=W9@@@WHV
)@@G@@G J@@@9(@@QO?XJ@@@/K@@QDHXJ@@@T9@@@WG J@@[G9@@]GG[@@@L[[@@@I[ @@Q+G!J@@]HW
)@@G@@:8/@@JG9@@@^C Z@@]![K@@K/K@@P,C9K@@C*?J@@@'^@@Q!C[@@QO[XJ@@@C9K@@K'^@@Q!HX
)@@G@@9!@@QO/K@@P/@@@@@@@@@@@@@@@@@@@@@@@@/K@@@@9*@@Q)C[K@IQ%[W@@A/K@@KW*^J@@[HY
)@@G@@/K@@QQR;@@@M/KF@@@@@@@@@@@@@@@@@@@@@@@@@@@/K@@@@C5I@@#)9@@@)[5Y@@#'^@@Q(HZ
)@@G@@/K@@Q</K@@@@C9@@@[[!J@@@/K@@Q(/K@@@@[XW@@#CXJ@@@[[G@@ L J@@@T9K@@WCDJ@@[IA
)@@G@@H[@@@L[DG@@^D J@@[H9@@]G] G@@^G J@@]?DG@@^[DG@@^*CG@@^'=@@@#C5W@@#/ K@I_IB
)@@G@@ ?J@@@/K@@Q!@@@@@@@@@@@@A#@^^<R\@@R]%8@@@E/K@@R1R7@@R]:8@@@[/K@@R;'^@@V,IC
)@@G@@AF@^^%R3@@R]'^@@V,AF@^^?RB@@R]'^@@V,A#@^^\R#@^^Z'=@@@I(^@@RU/K@@R% ^@@R(ID
)@@G@@(8@@RS/K@@R$R;@@@@P;@@@[R#G@@@%@@^^)/K@@R>RA0@RU ^@@RUAA0@R+/,0@@@/S@@@@IE
)@@G@@/K@@R%R#@^^-'=@@@I ^@@RU/K@@R%/S@@R(/S@@@@/S@@@@(^@@R:'^@@V8RB@@R: ^@@R:IF
)@@G@@/KG@@@'=@@[@P;@@@^')G^^>RB@@R]O;@@@[AB@@R'R#@^^<*^@@R9/K@@@@/K@@@@RBK@R#IG
)@@G@@*@@@@H(?H@@]/K@@RF(8@@@@/K@@RFR#@@@H/K@KR_9(@^^7^@K^^9^@)^^'^@0^^;R#@^^+IH
)@@G@@'=@@[[/KF@@['^@@V)R;F@@@L8@@@[RB!@@@?@)^AW/K@@SMP#)^AWRB,@@@P;)@@[RB,@@@II
)@@G@@N@"@@@R#K@@GRF!@@@/^)@SUO;K@@[/K@@SQ:@)^AX/K@@SSP#K@@GABK@SE/K@@S:'^@@V)IJ
)@@G@@C@@^AY/K@@S$'^@@V)C@@^AZ/K@@S$'^@@V)C@@^A)'=@@@I/K@@SF/K@@SE'^@@V)R;V@@@IK
)@@G@@OBKKS(A#K^^"^@0^ N^@0^ QR#@^A-'=@@@IR;;@@@N80@@]8K0@S6/K@@T[RFJK@@'^@@V,IL
)@@G@@A#@^ HR#JK@@'^@@V,A#@^ IR#@^A+'=@@@IO;0@@[?@0^^"/K@@S4R#K^^"RFH@@@N80@#CIM
)@@G@@'^@@V,A#@^ WRBK^^"9!@^^_0@H@@@/K@@TW(^H@@@/K@@T7RBH@@@RF/@@[?80@[@9!@^ [IN
)@@G@@9(@^ TR#G@@@A#@^ YR#@^A<'=@@@IR#@^ YA#@^ QRBK^^"RBX@@@'^@@T)A#K^^"/K@@T^IO
)@@G@@9!@^ [9(@^ TR#@^A=/K@@T;/K@@@@RFH@@[?8@@[@/K@@T,R#@@@HP;@@@]RBG@@@P;@@@[IP
)@@G@@O;K@@[RBX@@@O#K@@GRFH@@@8K0KT)/K@@T.8#@@T*O;K@@[R#X@@@RFH@@@/@@@T5%@@^AXIQ
)@@G@@/K@@T:O;K@@[/K@@T19(@^ TR#@^A>A#@^ YR#@^A&'=@@@I'^@@U0 @@@V7'^@@V8/K@@@@IR
)@@G@@'^@@V)RF@KT_'^@@V,A#@^ ?R#@^A$RBKKT_/@K@UJ'=@@@IL8K@@]N@.@@@RA.@@[RB,@@@IS
)@@G@@P;)@@[AB)@SE/K@@S:&;@@]K/K@@T;'^@@V)/\0@VLA#@^ 6A#@^^.R#@^A*'=@@@I/K@@U=IT
)@@G@@'^@@V)/\0@VLA#@^ "9?@^ _/K@@U-'^@@V)/\0@VLA#@^ "9?@^A[9*@^ 7R#@^A('=@@@IIU
)@@G@@(^@^^"/K@@T8R#@^A%'=@@@I'^@@U0R#@^ YA#@^ QN80@#C*@@^^./K@@VARBK^^"/K@@TTIV
)@@G@@/K@@@@RB@@U7/@@KU0AB@@U0 ^@@U7'^@@V$/K@KU0/S@@@@'^@@V)RB@^A\(CG@@@P;@@@[IW
)@@G@@OF@^A\R#K^A:N@/@@@/\0@VM/K@@U=/K@@V#N@0KV['^@@V)R#K^A?/K@@U_R]0^ # @@^^.IX
)@@G@@*CF@@@*4F@@@/K@@VJR;V@@@RFF@@@A#K^^"/K@@T^O'0@@[/K@@VCR#K^A!A#K^ QR#@^A,IY
)@@G@@(^@@U7'=@@@I^@0^^"RF@^^"'^@@V,A#@^ WR#@^A>RBK^^"*@@@@HR#H@@@A#@^ Y/KJ@@@IZ
)@@G@@/K@@@@A]0^ #9*@^ ^9*)^ A9(@^ C^@0^ E/K@@V)/K@@@@R]0^ #9?@^ ^9?)^ A9!@^ CJA
)@@G@@N@0^ E/K@@V$/K@@@@;G@@@MR;)@@ Q;K@@A;@K@@#;?@@@A8#)@V1/K@@V,/S@@@@/S@@@@JB
)@@G@@/S@@@@(^@@R:/K@@V.*^@@V8/K@@W^/S@@@@(^@@V8'=@@@D'=@@@6)8@@K@R#@@@H'=@@@5JC
)@@G@@R#@^A0C8K@@[[@K^A0/^@@WG*^@@RU/K@@WI*^@@R:/K@@WI @@@@G'=@@[[(@@@V7'^@@V$JD
)@@G@@*^@@R:/K@@WN'=@@@)R#@^A1A#@@V7/K@@@@/KF@@['=@@@M[@FK@@[@VK@[/KF@@#'=@@@3JE
)@@G@@[@FK@@/KF@@]9*@^A49*)^A6R#:K@@9?@^A2R;0@@G8#0@W*9*FK@[9?@^A49?)^A6/KF@@#JF
)@@G@@;=@@@A;CK@@#;=K@@#/K@@W<9*@^A'9*)^A/A@K^A"R8K@[C9?)^A8E@FK@@;G@@@=W8@@@EJG
)@@G@@O;.@@:;^)@@AP8K@@A/^@@W2R#FK@@/C@@W//@@@W/O;0@@W;^-@@@9*:K@[9?@^A'9?)^A/JH
)@@G@@R@K^A"/KF@@#A#FK@@/KF@@]A#VK@@/KF@@]A#:K@@/KF@@]D@@@@@G@FK@][@@ UDC@@ U]JI
)@@G@@R@K UC[@[@@@ @@@@@ @@@@@C#)@@@N[@ UD[#) UK/,0@H?@@@@@@@@@ UK@[F U :@@ U]JJ
)@@G@@/K@@XWC@@ UK[@@@@@/K@@XZG_)@@[8L@@XM/K@@Y^C@@@@@G@@ UEG/@__"[@@ ULC@@ UFJK
)@@G@@H@@ UL*@@@@G1@@@@G/K@@X%C@@ UF[@@ ULD@@@@@G@@ ULC#)@@@[@@@[^[#) UK/,0@HYJL
)@@G@@@@@@@@@@@ UK@[T U [@@ UMH@@@@@(@@@@G/K@@Y^C@@ UM:/@@@ /K@@Y^C@@@@@G/@@@[JM
)@@G@@[@@@@@/,0@H5@@@ UM@@@@@@@@@@@@@[Z U G_)@@[8L@@X,N@0@YA/K@@YB@[< U RA0 UAJN
)@@G@@C#) UGR@K UHN[@ UI/K@PU#AA0 UA[#) UGA@K UH^[@ UIC8FK@@[^@@XO[^@@X0C8FK@[JO
)@@G@@[^@@XC[^@@XKC@VK@][@K UFC@VK@#[@K UEC8FK@^[^@@X4C8FK@ [^@@X_[@@ UCC8FK@AJP
)@@G@@[^@@XI[^@@Y@[^@@X/[^@@X'C8FK@B[^@@XJ[^@@X?[^@@XZ[^@@X%[^@@XU/K@@XCC@@ U-JQ
)@@G@@G/@__"[@@ U+/,0@CN@@@ U>@[< UY:/@@@A/K@@ZT/,0@C@@@@@@@@@@@@@@@@^BV/K@@Y3JR
)@@G@@@[> UY/,0@YG@@@^BV@@@ UN@@@ UO@@@ UP@@@ UQ@@@ U&@@@ U>@@@ U$@[& UY(@@ U>JS
)@@G@@/K@@Y3C@@ U&:@@ UR/K@@ZPC@@ U&:@@ US/K@@ZLC@@ U&:@@ UT/K@@ZPC@@ U&%@@ UUJT
)@@G@@/K@@Y3C8)@@#N@0@ZO/K@@Z$@[1 UYC8)@@^N@0@ZS/K@@Z$@[2 UYR@K U+O@K@@@C/@@@YJU
)@@G@@[)[@@@C@)@@@;@)@@MG@) UVG@) U-C@@@@I'=@@@I/K@@ZLN@0@Z&/K@@Z:@]] UY!^) UWJV
)@@G@@/K@@USH8)@@[[^) UWRA0 UZR@K U</K@PUWC8@@@ AA0 UZ[^@ UWA@K U<C8FK@@[^@@Y4JW
)@@G@@[@@ U-C8FK@[[^@@Y5[^@@ZX[^@@ZU/K@@Y: @@@@@C@@^+8G/@@@[R@K U4R@) U4Q@)@@GJX
)@@G@@N.@@@DC@]=<\[@[>VA8L@@)[D@) U5)@) VD[@0 VDD@@^BA*@@@@G1@@@@G/K@@)L/,0@;_JY
)@@G@@@@@ U6@@@ U*@@@ U7@@@ VA@[6 U'C8@^+_C8K VA/,0@L=/K@@-$[@@ V^/,0@X^@@@@@@JZ
)@@G@@@[8 U'C@@ V^H@@ U.G/@@@[[@@ V^R@K V^CC[^<2[@@ V D@@ V *@@@@G1@@@@G/K@@-BKA
)@@G@@C8@^+_C@K V /,0@KY/K@@-$[@@ V^H@@ U"G/@@@[[@@ V^R@) V^C@+^<0H@) VA*@@@@IKB
)@@G@@/K@@)XR@K V^C@-^<1H@) VB*@@@@I/K@@)XR@) V^C@+^<4H@) VE*@@@@I/K@@)XR@K V^KC
)@@G@@C@) VFH@-^<5*@@@@I/K@@)XC@)@@@H@) V (@@@@I/K@@-BC@) V [@)@@@/K@@)XC@@@@@KD
)@@G@@H@@@@@*@@@@G/K@@-G @@@@@D@@^BA*@@@@G1@@@@G/K@@-$/,0@(4@]K U'/,0@()@@@ U:KE
)@@G@@@]L U'/,0@&$@@@ VA@]M U'/,0@()@@@ U,@]N U'/,0@()@@@ U1@]O U'/,0@W?@@@@@@KF
)@@G@@@@@^B2@]P U'/,0@()@@@^B2@]Q U'/,0@(#@]R U'N@0@-(/K@@-%@]S U'RA0 U;R@K U_KG
)@@G@@R@) V@N[@ V[/K@PU8AA0 U;A@K U_A@) V@^[@ V[C8FK@@[^@@-@[^@@-BC8FK@[[^@@-FKH
)@@G@@[^@@-C[^@@- [^@@-Z[^@@)R[^@@Z'/K@@Z' @@@@@R@K VRC@[@@@[@@ V<C@-@@[[@) V=KI
)@@G@@C8@ V<'=@@[<C4@ V([@@ VX(@@ VX/K@@<1C/@@@[C@) VXG/)__Z*@@@@I1@@@@I @@@@GKJ
)@@G@@C/)@@[C.@@@JH[@ VX*@@@@K1@@@@K @@@@I+@@@@I/)K@<4C@@ V<[@@ V!C@) V=[@) V,KK
)@@G@@C.@@W@[D@ V1C.)@@N[1) V0CA@ V?[]@ VYC,@ V([]@ VZ(@@ VZ/K@@<BC]@ VY;]@@@SKL
)@@G@@[]@ VYC@@ VY[@@ V2C8@ V!'=@@@#C4@ V0[@@ V)C/@@@[*@@ V) @@@@GC/)@@[C[@ V)KM
)@@G@@%.@@@  @@@@I)@@@@I/)K@<,C@@ VYG/@_>_[@@ VYD@@ VZ*@@@@G1@@@@G/K@@<]C@@ VYKN
)@@G@@H@@ VK[@@ VYD@@ VY/G@@<A*@@@@G/K@@<6/K@@+(C@@ VYG/@@@[[@@ VY;O@@@=W/@@@UKO
)@@G@@[@@ V-T/@@@UH@@ VY]@@ V+C@) V-T/)@U@[@) VY(@@@@G/K@@<>[@) V2T/@@W@]C@ V1KP
)@@G@@C8@ V!'=@@@#C4@ V0[@@ V)C/@@@[*@@ V) @@@@GC/)@@[C[@ V)%.@@@  @@@@I)@@@@IKQ
)@@G@@/)K@<,C@@ VYG/@_>_[@@ VY/C@@<:*@@@@G/K@@<6C@@ VL[C@ V1/K@@+(C/@@@[[@@@@@KR
)@@G@@/K@@<6C/@@@][@@@@@/K@@<6C/@@@#[@@@@@N@0@<8/K@@<9@]S VORA0 VPC[) VSC]@ VTKS
)@@G@@R@K VU/K@PVMAA0 VP[[) VS[]@ VTA@K VUC8FK@@[@@ VRC8FK@[[^@@<\[^@@<5[^@@<2KT
)@@G@@[^@@-"/K@@-"/,0@WR@@@ V/@@@ V.@[& V6C@@ V9[@@ V_C4) V/[0) W@C0) V/[?) W@KU
)@@G@@C?) V/[=) W@C*) V/[)) W@C4) V.[0) W[C0) V.[?) W[C?) V.[=) W[C*) V.[)) W[KV
)@@G@@C@) V'G@) V3C@@@@I'=@@@IN@0@=&/K@@=$@[" V6RA0 V7/K@PV4AA0 V7C@VK@@[@K V9KW
)@@G@@/K@@=E/,0@(4@[+ WE/,0@$4@@@@@@@[< WE/,0@$G@@@ WA@@@ W]@[= WE/,0@@@@@@ WBKX
)@@G@@@[> WE[@@ WHC4) WH[@)^B1/,0@WY@@@^B1@@@^B2@[& WE/,0@()@@@^B2@[$ WE/,0@(#KY
)@@G@@@[* WEN@0@>B/K@@>C@[( WERA0 WF/K@PWCAA0 WFC8FK@@[^@@=0C8FK@[[^@@=6/K@@=!KZ
)@@G@@C8@ WJG@@ WW[@@ W+C@@ W+'=@@@I/,0@(4@[P WZ/,0@$4@@@@@@@[Q WZ/,0@()@@@ WQLA
)@@G@@@[R WZ/,0@*>@@@@@@@[S WZ/,0@()@@@ WT@[T WZ/,0@W?@@@@@@@@@^B2@[U WZ/,0@()LB
)@@G@@@@@^B2@[V WZ/,0@(#@[W WZN@0@>,/K@@>\@[X WZRA0 W)/K@PWXAA0 W)C8FK@@[^@@>YLC
)@@G@@C8FK@[[^@@>=C8FK@][^@@>S/K@@>KR@K W7C?[@@#[@@ W'C@@ W'G/@__'/@@@&^/C@@&CLD
)@@G@@/,0@()@@@ W=@[$ W4/K@@&F/,0@()@@@ W$@[( W4/K@@&F/,0@()@@@ W%@[: W4/,0@()LE
)@@G@@@@@ W!@[? W4/,0@()@@@@@@@[! W4C@@^BTR@K W7H@[@@^(@@@@G/K@@&Y/,0@*A@@@ W0LF
)@@G@@@[0 W4N8L@@^^^K@&W/,0@()@@@@&W@[1 W4/,0@*A@@@^BT@[2 W4N@0@&</K@@&=@[3 W4LG
)@@G@@RA0 W5R@K W8/K@PW2AA0 W5A@K W8C8FK@@[^@@&J[@@ W7/K@@>9C@FK@@T/@@@A[@@ X LH
)@@G@@G/@__"C_)@@[[@@@[^[#) XA/,0@HY@@@@@@@@@ XA@[D W_[@@ XB:@@ W;/K@@$#C@@ XBLI
)@@G@@%@@ W//K@@$@C@@ W;[@@ XB/,0@*A@@@ XB@[I W_G_)@@[8L@@&3N@0@$B/K@@$C@[L W_LJ
)@@G@@RA0 X@C#) X]N[@ X#/K@PW.AA0 X@[#) X]^[@ X#C8FK@[[^@@&5/K@@&!C/@@@[C@)^BTLK
)@@G@@R@K XLH@-@@^*@@@@I @@@@GC/)@@[*@[@@^ @@@@I)@@@@I/=K@$>N8L@@^^^K@$)/,0@()LL
)@@G@@@@@@$)@[C XI/,0@*A@@@ XC@[D XIR@K XLN8L@@]^^K@$(/,0@()@@@@$(@[E XI/,0@*>LM
)@@G@@@@@ XE@[F XIN@0@$0/K@@$1@[G XIRA0 XJR@K XM/K@PXGAA0 XJA@K XMC8FK@@[@@ XLLN
)@@G@@/K@@$M/,0@H5@@@@@@@@@^BV@@@^BU@[  XQC@@^BUG/@@@[[@@^BUN@0@*#/K@@*^@[B XQLO
)@@G@@RA0 XR/K@PXOAA0 XRC8FK@@[^@@$'/K@@$9C_)@@[N.@@@ [#) X=/,0@HY@@@@@@@@@ X=LP
)@@G@@@[B XY[@@ X>:@@ XU/K@@*WC@@ X>%@@ XV/K@@*TC@@ XU[@@ X>/,0@*A@@@ X>@[G XYLQ
)@@G@@G_)@@[8L@@*GN@0@*)/K@@*-@[J XYRA0 XZC#) X-N[@ X+/K@PXWAA0 XZ[#) X-^[@ X+LR
)@@G@@C8FK@@[^@@*I/K@@*EC@@^BU;O@@@=W/@@@A[@@ X\C@@ X\T/@@@AH@@^BU(@@@@G/K@@*7LS
)@@G@@C@@ X\G/@@@[[@@ X\C@@ X\;@@@@MG@@ X&G@@ X?[@@ X!C@@ X!'=@@@IN@0@(@/K@@([LT
)@@G@@@[P X(RA0 X%/K@PX$AA0 X%/K@@*:C_)@@[N.@@@F[#) X'/,0@HY@@@@@@@@@ X'@[C X4LU
)@@G@@[@@ X;:@@ X0/K@@(RC@@ X;%@@ X1/K@@(OC@@ X0[@@ X;/,0@*A@@@ X;@[H X4G_)@@[LV
)@@G@@8L@@(BN@0@(V/K@@(W@[K X4RA0 X5C#) X7N[@ X8/K@PX2AA0 X5[#) X7^[@ X8C8FK@@LW
)@@G@@[^@@(D/K@@( C/@@@[[@@^BUR@K X/N.@@@PC@@^BT[@[=BU8L@@(%N@0@(\/K@@(0@[F X_LX
)@@G@@RA0 Y@R@K Y]N[@ Y#/K@PX.AA0 Y@A@K Y]^[@ Y#/K@@(&C@@^+8[@@ ZQC@)^BD[@) ZRLY
)@@G@@C[@^+"G.@__'/D@@%[*@@@@K/K@@%Z/,0@(4@[3 ZF/,0@$G@@@ Y.@@@ YA@[4 ZF/,0@&$LZ
)@@G@@@@@^BJ@[5 ZF/,0@(#@[6 ZFC/@@@[[@@ ZSC@@^+"%/@@@ /K@@%NC/@@@][@@ ZSC/@@@ MA
)@@G@@H@@^+"*@@@@G1@@@@G/K@@%UC/@@@#[@@ ZSR@K ZSC@[^B[G/@@@[[@[^B[/K@@\6/,0@-\MB
)@@G@@@@@ ZR@@@ ZT@[" ZFD@@ ZT/C@@%$*@@@@G/K@@%!C8@ YEG@@ Y"[@@ ZIC@@ ZI'=@@@IMC
)@@G@@/K@@:</,0@(4@]L ZFC@@^BDH@@ ZR(@@@@G/K@@%6/,0@()@@@ YL@]N ZF/,0@$G@@@ Y_MD
)@@G@@@@@ YO@]O ZF/,0@(#@]P ZF/,0@Z,@@@ YX@@@ Z@/K@@:]/K@@:<@]Q ZFC@@ ZT[@@ ZRME
)@@G@@C@) Z[[@)^BCC8@^+_C@K ZR/,0@KY/K@@\9[@@ ZQH@@ ZJG/@@@[[@@ ZQG/@@@[R@K Z]MF
)@@G@@R@) Z#Q@)@@GN.@@@DC@]=<\[@[=BI8L@@:N/,0@;[@@@ ZR/K@@:V@]) ZF/K@@!*/,0@-\MG
)@@G@@@@@ ZR@@@ ZT@]+ ZFD@@ ZT/C@@:<*@@@@G/K@@%!D@@^BI*@@@@G1@@@@G/K@@%[/,0@Z,MH
)@@G@@@@@ Y>@@@ Z^/K@@:!/K@@%[@]$ ZFC^@^BR[@@^+9CG@^BQ[@@^+'C@@^+9G@@^+'[@@^+/MI
)@@G@@ @@ ZV @@ ZW @@ ZXC/)@@[[@) ZYC@@ ZV[@@ ZW/,0@7C/K@@?4@]0 ZF(@@ ZY/K@@?IMJ
)@@G@@ @@ ZYC4@^"[:/@@@*/K@@?D @@^"[C/@@@*[4@^"[C/@@@[[0@^"[C@@^"]:@@ Z /K@@?IMK
)@@G@@C@@ Z [@@^"]C@@ ZWG/@@@[[@@ ZWR@K ZWC0-^"@[@) ZZG@@ ZZ[@@ ZWR@) ZWC@+^"@ML
)@@G@@:@) Z /K@@?Z(@@ ZZ/K@@?ZC@) ZXG/)@@[[@) ZXC@@ ZWH@@^+./C@@?=*@@@@G/K@@?\MM
)@@G@@C@@^+.H@@ ZW]@@ ZVC@)^BIH@) ZX(@@@@I/K@@?4/,0@5,/K@@0K@#C ZF/K@@:9C@@^BIMN
)@@G@@H@@ ZX(@@@@G/K@@?9/K@@?IC@@ ZWG/@_<_*@@@@G1@@@@G/K@@!LC@@ ZWG/@@@[[@@ ZWMO
)@@G@@R@K ZWC/)@@_[4-^"@;O@@@=W/@@@W[@@ Z)C@@ Z)T/@@@WH@@ ZW(@@@@G/K@@!EC@@ Z)MP
)@@G@@G/@@@[[@@ Z)C@@ Z)T/@@@W[@@^+./,0@5,/K@@0K@#P ZF/K@@!'C/@@W@[@@^+./,0@5,MQ
)@@G@@/K@@0K@#S ZFR/)@@[N.@@@VA@) ZU @]^"@C@@ ZVH@@ ZU/C@@!Z*@@@@G/K@@!-C@@^BTMR
)@@G@@[@]^"@O/)@@[8L@@!SC@@ ZV[@@ ZWC/)@@W[@)^+./K@@?9C^@^BR[@@^+9CG@^BQ[@@^+'MS
)@@G@@C@@^+9G@@^+'[@@^+//,0@7C/K@@0F@#$ ZF/,0@5,/K@@0K@#* ZFC@@^+;H@@^+//C@@!'MT
)@@G@@*@@@@G/K@@!\C@@^B.[^@^BRH@@^B5E@@@@G[^@^BQC@@^B5[@@ Z-C@)^+"%/)@@ /K@@,VMU
)@@G@@C^)^BP[@)^+9CK)^BQ[@)^+'C@)^+9G@)^+'[@)^+//,0@7C/K@@0F@#3 ZF/,0@5,/K@@0KMV
)@@G@@@#4 ZFC@@^+;H@@^+//C@@,Q*@@@@G/K@@,FC@@ Z-[^@^BPH@@^B5E@@@@G[C@^BQ 4@^BMMW
)@@G@@ @@^BLC@@^BEG/@@@[[@@^BED@@^BA*@@@@G1@@@@G/K@@,%/,0@;_@@@ ZA@@@ Y\@@@ ZBMX
)@@G@@@@@^BJ@#. ZFC@@ ZC[@@^BCC8@^B6C8K^BJ/,0@NB/K@@0]/,0@(4@^@ ZF/,0@()@@@ Y2MY
)@@G@@@^[ ZFC@@^+8H@@ ZQ(@@@@G/K@@,//,0@()@@@ Y5@^# ZF/,0@&$@@@^BJ@^^ ZFC@@^+"MZ
)@@G@@G/@__'*@@@@G1@@@@G/K@@\L/,0@W?@@@^BI@@@^B2@^B ZF/,0@*>@@@ Y8@^C ZF/,0@()NA
)@@G@@@@@^B2@^D ZF/,0@()@@@ Y'@^E ZF/,0@(#@^F ZFC/@@@[[@@ ZSC@@^+"%/@@@ /K@@\UNB
)@@G@@C/@@@][@@ ZSC/@@@ H@@^+"*@@@@G1@@@@G/K@@\-C/@@@#[@@ ZSR@K ZSO/K__"C@[^A_NC
)@@G@@G/@@@[[@[^A_C@)^+8[@) Z+C[@^BD[[@ Z)C[) ZR[[)^BDC]@ ZQ[]@^+8/,0@4%@^Q ZFND
)@@G@@C@@ Z)[@@^BDC@) Z+[@)^+8C[@^B5[[@^B.N@0@\8/K@@0S@^U ZF/,0@X]@@@^BG@^V ZFNE
)@@G@@/,0@>1@@@^BC@@@^BG@@@^<-@^W ZF/K@@0E/,0@X]@@@^BG@^Y ZF/,0@>1@@@^BC@@@^BGNF
)@@G@@@@@^CS@^Z ZF'=@@@)/,0@>E@@@^<-@@@^<:@^- ZF/K@@%[/,0@>E@@@^CS@@@^C+@^< ZFNG
)@@G@@/K@@%[N@0@0R/K@@0S@^= ZFRA0 ZGC[) ZKC]@ ZLR@K ZMR@) ZNN[@ ZO/K@PZDAA0 ZGNH
)@@G@@[[) ZK[]@ ZLA@K ZMA@) ZN^[@ ZO/K@@(8C/@@@[C/)@@^H@)^+"*@@@@I1@@@@I @@@@GNI
)@@G@@C/)@@[C[@^+"G.@__.*@@@@K1@@@@K @@@@I)@@@@I/=K@4HC@@ ) ;@@@@MG/@@E/[@@ )GNJ
)@@G@@C@) )A;@)@@MG/)@E/[@) )HC[@^+"G.@__//[@@1F/D@@1QC[@ Z0[[@^BCC8@^+_C@K )GNK
)@@G@@/,0@JA/K@@4KC8@^B6C@K )H/,0@JA/K@@4T/K@@1)C@@ Z1[@@^BCC8@^+_C@K )G/,0@JCNL
)@@G@@/K@@4KC8@^B6C@K )H/,0@JC/K@@4T/K@@1)C@@ Z2[@@^BCC8@^+_C@K )G/,0@JE/K@@4KNM
)@@G@@C8@^B6C@K )H/,0@JE/K@@4T @@^BFC@@^BFG/@@@[[@@^BFC@)^+"G/)__//@)@10/C)@18NN
)@@G@@C@) Z3[@)^BCC8@^+_C@K^BF/,0@K)/K@@32[@@ )I/K@@1_C@@ Z4[@@^BCC8@^+_C@K^BFNO
)@@G@@/,0@K+/K@@32[@@ )I/K@@1_C@@ Z5[@@^BCC8@^+_C@K^BF/,0@K=/K@@32[@@ )IC@@ )INP
)@@G@@H@@ )BG/@@@[[@@ )IG/@@@[R@K Z6R@) Z6Q@)@@GN.@@@BC@]=3#[@[>)N8L@@2C 4@ )QNQ
)@@G@@C@)^BD%C) )P/K@@3=D@@^BA*@@@@G1@@@@G/K@@2T/,0@;_@@@ Z7@@@ Z<@@@ Z8@@@ )NNR
)@@G@@@]U )]R@K^+8C^[^<8[@@ )KC@@ )KT/@@@WH@@ )Q]@@ )LC^)^BQT/)@@WG@@@@I/C@@2&NS
)@@G@@*@@@@G/K@@3= @@ )P @@ )QC@@^BE[C@ )PC@@^B.T/@@@WG@@ )L[@@ )QC@)^+"G/)__/NT
)@@G@@/@)@3#/C)@3OC@) Z9[@)^BCD@@^BA*@@@@G1@@@@G/K@@2"/,0@;_@@@ Z'@@@ Z$@@@ Z8NU
)@@G@@@@@ )N@]* )]C8@^B6C8K )N/,0@M_/K@@4T/K@@3=C@@ Z;[@@^BCD@@^BA*@@@@G1@@@@GNV
)@@G@@/K@@3J/,0@;_@@@ Z'@@@ Z%@@@ Z8@@@ )N@]! )]C8@^B6C8K )N/,0@N[/K@@4T/K@@3=NW
)@@G@@C@@ Z/[@@^BCD@@^BA*@@@@G1@@@@G/K@@3)/,0@;_@@@ Z'@@@ Z!@@@ Z8@@@ )N@]2 )]NX
)@@G@@C8@^B6C8K )N/,0@N#/K@@4TR@) )IC4]^3B[@@ )MC/@@@K+@@ )M[@K )MD@@ )M*@@@@GNY
)@@G@@1@@@@G/K@@31C@@^BFG/@@@[[@@^BF/K@@1-/,0@X]@@@^BG@]9 )]C@@^BG%/@@@G/K@@4KNZ
)@@G@@C@@^+"G/@__//@@@4]/C@@4CC@@ Z.[@@^BCC8@^B6/,0@LH/K@@4T/K@@4HC@@ Z"[@@^BCOA
)@@G@@C8@^B6/,0@LJ/K@@4T/K@@4HC@@ Z_[@@^BCC8@^B6/,0@LL/K@@4TN@0@4J/K@@4>@#B )]OB
)@@G@@/,0@X]@@@^BG@#C )]/,0@>1@@@^BC@@@^BG@@@^<-@#D )]/K@@4-/,0@X]@@@^BG@#F )]OC
)@@G@@/,0@>1@@@^BC@@@^BG@@@^CS@#G )]'=@@@)N@0@4=/K@@4>@#H )]RA0 )#R@K )CR@) )DOD
)@@G@@N[@ )E/K@P)@AA0 )#A@K )CA@) )D^[@ )E/K@@0&C@@^+.[C@^C&C@)^B5[^)^C$D@@^+.OE
)@@G@@/C@@47*@@@@G/K@@4'N@0@49/K@@5?@[\ )+C8@^C+'=@@@#D4@^C>*@@@@G1@@@@G/K@@5^OF
)@@G@@C8)@@[N@0@5#/K@@5*@[2 )+C@@^+.;O@@@=W/@@@WG@@^B5[@@^B5D@)^BB*@@@@I1@@@@IOG
)@@G@@/K@@5>/,0@(4@[6 )+/,0@()@@@ )V@[7 )+/,0@W?@@@^C$@@@^B2@[8 )+/,0@()@@@^B2OH
)@@G@@@[9 )+/,0@*A@@@ )Y@[' )+/,0@W?@@@^+.@@@^B2@[; )+/,0@()@@@^B2@[/ )+/,0@(#OI
)@@G@@@[. )+N@0@5$/K@@5?@[" )+!^) ))/K@@USH8)@@[[^) ))RA0 )</K@P))C8@@@]AA0 )<OJ
)@@G@@[^@ ))/K@@4\C@@^+9G/@@[@[@@^+;C@@^+/H@@^+;*@@@@G1@@@@G/K@@5/C@@^+/[@@^+;OK
)@@G@@C@@^+9H@@^+;T/@@@W]@@^+.]C@^<\C@)^+9[^)^<0D@@^+./C@@6B*@@@@G/K@@6EN@0@6DOL
)@@G@@/K@@7A@[3 )!C8@^<:'=@@@#D4@^<,*@@@@G1@@@@G/K@@6OC8)@@[N@0@6N/K@@7]@[6 )!OM
)@@G@@C^@^<,[@@^+.D@@^+./C@@6U*@@@@G/K@@6YC8)@@[N@0@6X/K@@7]@[9 )!C@@^+.;O@@@=ON
)@@G@@W/@@@WG@@^+9[@@^+9D@)^BB*@@@@I1@@@@I/K@@6_/,0@(4@[. )!/,0@()@@@ )&@[" )!OO
)@@G@@/,0@W?@@@^<0@@@^B2@[_ )!/,0@()@@@^B2@]@ )!/,0@*A@@@ )(@][ )!/,0@W?@@@^+.OP
)@@G@@@@@^B2@]] )!/,0@()@@@^B2@]# )!/,0@(#@]^ )!N@0@7[/K@@7A@]  )!!^) ):/K@@USOQ
)@@G@@H8)@@[[^) ):RA0 ),/K@P):C8@@@]AA0 ),[^@ ):/K@@52 @@ -E @@^BI @@ -F @@^BHOR
)@@G@@C^@^BR[@@^+9CG@^BQ[@@^+'C@@^+9G@@^+'[@@^+/C/)@@[[@) -G/,0@7C/K@@7;@[5 -]OS
)@@G@@C@@^+"G/@__'/C@@7-*@@@@G/K@@7_C@@^+;H@@^+//C@@7&*@@@@G/K@@7TC@@^+"G/@__'OT
)@@G@@/@@@7:/G@@91/K@@'7C^@^BP[@@^+9CK@^BQ[@@^+'C@@^+9G@@^+'[@@^+//,0@7C/K@@7;OU
)@@G@@@]@ -]C@@^+;H@@^+//C@@7'*@@@@G/K@@72/K@@'7C4@^<,[@@^BG @@^BH/K@@97C@@ -FOV
)@@G@@[@@ -H(@@ -G/K@@8L @@ -GC4)^"[:/)@@*/K@@8G @@^"[C/)@@*[4)^"[C/)@@[[0)^"[OW
)@@G@@C@@^"]:@@ )//K@@8LC@@ )/[@@^"]C@@ -HG/@@@[[@@ -HR@K -HC4-^"@[@) -IC@) -IOX
)@@G@@G/)__Z/C)@8W*@@@@I/K@@9LC@) -I:/)@@_/K@@9IC/@@@[C/)@@<H@) -I/C)@8>*@@@@IOY
)@@G@@ @@@@GC/)@@[C[@ -IG.@__Z/D@@8:*@@@@K @@@@I+@@@@I/=K@9LC/@@@[C@) -I%/)@@(OZ
)@@G@@ @@@@GC/)@@[C[@ -I%.@@@* @@@@I)@@@@I/=K@9LC@@ -I:/@@@?/K@@9LC/@@@[C/)@@0PA
)@@G@@H@) -I/C)@9@*@@@@I @@@@GC/)@@[C[@ -IG.@__L/D@@9A*@@@@K @@@@I+@@@@I/=K@9LPB
)@@G@@C@@ -I:/@@@"/K@@9LC/@@@][@@^BH/K@@97C/@@@[[@@ -E/K@@'7R@K -HC0[^"@[@@ -JPC
)@@G@@C/@@@WH@@ -J/C@@9T*@@@@G/K@@9,C@@ -HG@@ -J[@@ -HR@K -HC@-^"@:@) )//K@@9>PD
)@@G@@(@@ -J/K@@9>C@)^BIG/)@@[[@)^BIC@@ -HH@@^+./C@@9%*@@@@G/K@@8LC@@^+.H@@ -HPE
)@@G@@]@@ -F/K@@7-C/@@@#[@@^BH/K@@97D@@ -E/C@@95*@@@@G/K@@'7C/@@@[[@@^BH/,0@(4PF
)@@G@@@]8 -]C@@@@@H@@^BD*@@@@G/K@@'#C@@ - G@@ ).[@@ -AC@@ -A'=@@@I/K@@'A/,0@()PG
)@@G@@@@@ )1@#E -]/,0@&$@@@^BJ@#F -]/,0@*>@@@ )4@#G -]C@@^BHT/@@@#N8W -K^^K@'MPH
)@@G@@/,0@$G@@@ )"@@@@'M@#H -]*@@^BH/K@@'X/,0@W?@@@^BG@@@^B2@#K -]/,0@()@@@^B2PI
)@@G@@@#L -]/,0@(#@#M -]C@@^+"G/@__'*@@@@G1@@@@G/K@@'3/,0@(4@#P -]/,0@$G@@@ )_PJ
)@@G@@@@@ )6@#Q -]/,0@W?@@@^BI@@@^B2@#R -]/,0@()@@@^B2@#S -]/,0@(#@#T -]C8)@@]PK
)@@G@@N@0@'6/K@@''@#U -]N@0@'9/K@@'"@#V -]!^) -@/K@@USH8)@@[[^) -@RA0 -#R@K -BPL
)@@G@@/K@P-@C8@@@#AA0 -#[^@ -@A@K -BC8FK@@[^@@99/K@@7GD@@@@@*@@@@G1@@@@G/K@@;7PM
)@@G@@C@@@@@;@@@@MG@@ -WG@@ -<[@@ -=C@@ -='=@@@I/,0@(4@[Q -ZC@@@@@G/@__"C_)@@[PN
)@@G@@R@K -+[@@@[^[#) -(N8L@@@^^K@;Y/,0@WY@@@@;Y@@@^B2@[U -Z/,0@()@@@^B2@[V -ZPO
)@@G@@/,0@*A@@@^BT@[W -ZC@@ -(H@@@@@(@@@@G/K@@;0C@@^BUG/@__H/C@@;0*@@@@G/K@@;4PP
)@@G@@/,0@(#@[- -Z/,0@(4@[+ -ZO/K@@[G_)@@[8L@@;UN@0@;9/K@@;'@[> -ZRA0 -)C#) ->PQ
)@@G@@R@K -&N[@ -$/K@P-XAA0 -)[#) ->A@K -&^[@ -$C8FK@@[^@@;GC8FK@[[@@ -<C8FK@]PR
)@@G@@[^@@;P[^@@;*[^@@;CC8FK@#[@@ -+/K@@;C/,0@GD@@@@@@@@@@@@@[% -'[@@ + *@@@@GPS
)@@G@@1@@@@G/K@@/3/,0@(4@[! -'C@@ -4[@@^BVC@) -5[@)^BWR@K -.C[[@@@[[@^BXC@@ -"PT
)@@G@@G@@ -6[@@ -_C@@ -_'=@@@I/,0@(4@[_ -'/,0@()@@@ -%@]@ -'/,0@WY@@@ + @@@^B2PU
)@@G@@@][ -'/,0@()@@@^B2@]] -'/,0@(#@]# -''=@@@)C@@ -.'=@@[<R@K -.C4[@@A[@@ +APV
)@@G@@ @@@@@D@@ +A/C@@/.*@@@@G/K@@.>C/@@@[[@@@@@/,0@(4@]F -'/,0@*>@@@ -!@]G -'PW
)@@G@@D@@ +[*@@@@G1@@@@G/K@@.F/,0@*A@@@ -0@]I -'/,0@*A@@@^BT@]J -'/,0@()@@@@@@PX
)@@G@@@]K -'/,0@*>@@@ -2@]L -'C@@ +@G@@ -7[@@ -_C@@ -_'=@@@J/,0@X]@@@ + @]N -'PY
)@@G@@D@@ + /G@@.)*@@@@G/K@@/ZC@@ -.'=@@[<R@K -.C4[@@A[@@ +AC@@@@@G/@__./@@@.'PZ
)@@G@@/C@@"KC/@@@[C/)@@ZH@) +A/C)@.\*@@@@I @@@@GC/)@@[C[@ +AG.@__\/D@@.5*@@@@KQA
)@@G@@ @@@@I+@@@@I/=K@"KC/@@@[[@@ +B/K@@"[C/@@@JH@@ +A*@@@@G1@@@@G/K@@"KC/@@@#QB
)@@G@@[@@ +B/,0@(4@]+ -'/,0@$4@@@@@@@]< -'R@K +BO/K__"N8L +C^^K@"F/,0@()@@@@"FQC
)@@G@@@]= -'/,0@(#@]> -'/K@@/2N@0@"M/K@@"N@]$ -'RA0 -;R@K +]/K@P-8AA0 -;A@K +]QD
)@@G@@C8FK@@[^@@/JC8FK@[[^@@.>C@VK@][@K +[C8FK@#[^@@/8[^@@/"C8FK@^[^@@"^[^@@/KQE
)@@G@@[^@@.J[@@ -./K@@/I/,0@S#@@@@@@/,0@=(@@@ +G@]B@@@/,0@WV@@@ <Z@]C@@@[@@ <)QF
)@@G@@C/@@@[+@@ <)*@@@@H0@@@@H/K@@"7C/@@@[[@@^BBC/@@@]+@@ <)*@@@@H0@@@@H/K@@""QG
)@@G@@C/@@@[[@@^BAC/@@@^+@@ <)*@@@@H0@@@@H/K@@_ C/@@@[[@@^B /,0@"Q@@@ <^@@@ <^QH
)@@G@@@@@ < @@@ <-@@@^<-@]J@@@/,0@"Q@@@ <A@@@ <^@@@ <^@@@ <+@@@^CS@]K@@@R/K@@#QI
)@@G@@N.@@@#A@K <<C@[^CRH@[^<)*@@@@G/K@@_*O/K@@[8L@@_P/,0@(4@]S@@@/,0@$4@@@^<-QJ
)@@G@@@]T@@@/,0@$G@@@ <B@@@ +I@]U@@@/,0@(#@]V@@@/K@[ ;/,0@<"@@@^CS@@@^BG@]X@@@QK
)@@G@@C@@ <C[@@^BCC8@^+_/,0@I-/K@[ %C8@^B6/,0@I-/K@[ 3C@@ <D[@@^BCC@) <Q;@)@@MQL
)@@G@@G/)@JOC@K@@IC8@^+_/,0@J^/K@[ %C@@ <R;@@@@MG/@@JO[@@ <SC@K <SC8@^B6/,0@J^QM
)@@G@@/K@[ 3C/@@@K[0@^<,C/)@W@[C)^<\C[@ <T[ @^<\C.)@@C[1)^C>C]@^<\[]@^C& @@^BDQN
)@@G@@ @@^BEC@@^BDG/@@@[[@@^BDC@) <E[@)^BCC8@^+_C@K^BD/,0@KY/K@[#H[@@^+8H@@ <UQO
)@@G@@G/@@@[[@@^+8G/@@@[R@K <FR@) <GQ@)@@GN.@@@DC@]=<\[@[=BI8L@[@<D@@^BA*@@@@GQP
)@@G@@1@@@@G/K@[@0/,0@;_@@@ <A@@@ +O@@@ <H@@@^BJ@]5@@@(@@^B /K@[[@/,0@(4@]8@@@QQ
)@@G@@/,0@&$@@@^BJ@]9@@@D@@^BM*@@@@G0@@@@G/K@[@"/,0@()@@@ +R@];@@@/,0@(#@]/@@@QR
)@@G@@D@@^BM/G@[[^*@@@@G/K@[@LC?@^BM[@@^+"C@@^B.[@@^B5/,0@;[@@@^BD/K@[AG@#]@@@QS
)@@G@@C^@^BR[@@^+9CG@^BQ[@@^+'C@@^+9G@@^+'[@@^+/C/)@@[[@) <=/,0@7C/K@[AG@#B@@@QT
)@@G@@C@@^+"G/@__'*@@@@G1@@@@G/K@[[!(@@ <=/K@[[! @@ <=C4@^"[:/@@@*/K@[[* @@^"[QU
)@@G@@C/@@@*[4@^"[C/@@@[[0@^"[C@@^"]:@@ <I/K@[[!C@@ <I[@@^"]/,0@5,/K@[ /@#O@@@QV
)@@G@@C@@^+;H@@^+//C@[[5*@@@@G/K@[[PC@@^B.[^@^BRH@@^B5E@@@@G[^@^BQC@@^+"%/@@@ QW
)@@G@@/K@[]QC^@^BP[@@^+9CK@^BQ[@@^+'C@@^+9G@@^+'[@@^+/C@)^B5[@) <>/,0@7C/K@[AGQX
)@@G@@@#Z@@@/,0@5,/K@[ /@#)@@@C@@^+;H@@^+//C@[]L*@@@@G/K@[]AC@@ <>[^@^BPH@@^B5QY
)@@G@@E@@@@G[C@^BQC@@^BEG/@@@[[@@^BED@@^BA*@@@@G1@@@@G/K@[]</,0@;_@@@ <A@@@ +UQZ
)@@G@@@@@ <H@@@^BJ@#$@@@C@@ <J[@@^BCC8@^B6C8K^BJ/,0@NB/K@[ 3/,0@4%@#%@@@C@@^B5RA
)@@G@@[@@^B.C/)@@[[@) <&C@@^+"%/@@@ /K@[]4C/@@@][@@ <&C/@@@ H@@^+"*@@@@G1@@@@GRB
)@@G@@/K@[];C/@@@#[@@ <&R@K <&O/K__"C@[^A_G/@@@[[@[^A_(@@^B /K@[@L/,0@(4@#4@@@RC
)@@G@@/,0@*>@@@ +X@#5@@@/,0@&$@@@^BJ@#6@@@/,0@(#@#7@@@/K@[@L/,0@X]@@@^BG@#9@@@RD
)@@G@@C@@^BG%/@@@G/K@[ %C@@ <K[@@^BCC8@^B6/,0@LF/K@[ 3C@@ <L[@@^BCC8@^B6/,0@PXRE
)@@G@@/K@[ 3C8@ +ZG@@ <M[@@ <SC@@ <S'=@@@IC/@@@[D@) <+*@@@@I1@@@@I @@@@GC/)@@[RF
)@@G@@D[@ <-*@@@@K1@@@@K @@@@IC9@^BVG[@ <NC_)@@[N.@@@[[@@ <S[@) <V[[@ <W[#) <&RG
)@@G@@/,0@(4@^N@@@/,0@()@@@ +>@^O@@@C@@ <&:/@@@[/K@[^CC@@ <S/)@[^[/,0@*A@@@ +*RH
)@@G@@@^S@@@/,0@*>@@@ +%@^T@@@/,0@()@@@^CS@^U@@@/K@[^NC@@ <V/)@[^H/,0@*A@@@ +?RI
)@@G@@@^X@@@/,0@*A@@@^BT@^Y@@@/,0@()@@@^<-@^Z@@@/,0@*>@@@ +,@^)@@@C@@ <W'=@@@JRJ
)@@G@@C/@@@[C@) <&%/)@@] @@@@G[@@ <X/,0@(4@^+@@@/,0@()@@@ +0@^<@@@C@@ <X/)@[^$RK
)@@G@@/,0@*>@@@ +3@^>@@@/,0@()@@@ +5@^&@@@ @@ <=R/)@@[R/K@@@N.K@@]A@) <$C@@ <XRL
)@@G@@/=@[^/D@[^A_*@@@@G1@@@@G/K@[ UN8L^A_^^K[^8/,0@W?@@@[^8@@@^B2@^\@@@/K@[ ARM
)@@G@@D@]^B[*@@@@G1@@@@G/K@[ UN8M^B[^^K[ #/,0@W?@@@[ #@@@^B2@^3@@@C/@@@[[@@ <=RN
)@@G@@/,0@()@@@^B2@^5@@@C@@ <$G/@__./@@[ N/C@[ R/,0@*>@@@ +8@^9@@@/K@[ U/,0@*>RO
)@@G@@@@@ +'@^;@@@/K@[ U/,0@*>@@@ +/@^.@@@O/)@@[O/K@@[8LK[^,D@@ <=/C@[ -*@@@@GRP
)@@G@@/K@[ =/,0@*>@@@ +"@ ]@@@/,0@(#@ #@@@G_)@@[8L@[#3/,0@V8@ A@@@/,0@X]@@@^BGRQ
)@@G@@@ B@@@/,0@>1@@@^BC@@@^BG@@@^<-@ C@@@/K@[ ;/,0@X]@@@^BG@ E@@@/,0@>1@@@^BCRR
)@@G@@@@@^BG@@@^CS@ F@@@'=@@@)/,0@>E@@@^CS@@@^C+@ H@@@/,0@(4@ I@@@/,0@$G@@@ <ORS
)@@G@@@@@ <@@ J@@@/,0@&$@@@^BJ@ K@@@/,0@(#@ L@@@/K@[@L/,0@0Z@ N@@@/K@[@L/,0@V6RT
)@@G@@@@@ <P@ O@@@      @@@@@@@USE  @@@@@@@@@@@@,     @@@@@@@@@@@@@@@@@@@@@@@@RU
)@@G@@R\@^@JR3@^@JR7@^@JR$@^@IR:@^@IR\@^@IR3@^@IR7@^@I@@W^@>@@@@@@      @@@@@@RV
)@@G@@@@@@@@@@@@@@@@@@@@@@@[[@@@@@@@INFOR 8@X^@=@@@@@@@@@@@@@@@@@@E%%%%:@     RW
)@@G@@@@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@@@@=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@RX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@RY
)@@G@@@-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@RZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SB
)@@G@@@@@@@@@@@@@@@@@@@@@@<@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SC
)@@G@@@@@@@@@@@@@@@@@@@@@@+@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SD
)@@G@@@@@@@@@@@@@@@@@@@@@@-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SE
)@@G@@@@@@@@@@@@@@@@@@@@@@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SF
)@@G@@@@@@@@@@@@@@@@@@@@@@Z@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SG
)@@G@@@@@@@@@@@@@@@@@@@@@@Y@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SH
)@@G@@@@@@@@@@@@@@@@@@@@@@X@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SI
)@@G@@@@@@@@@@@@@@@@@@@@@@W@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SJ
)@@G@@@@@@@@@@@@@@@@@@@@@@V@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SK
)@@G@@@@@@@@@@@@@@@@@@@@@@U@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SL
)@@G@@@@@@@@@@@@@@@@@@@@@@T@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SM
)@@G@@@@@@@@@@@@@@@@@@@@@@S@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SN
)@@G@@@@@@@@@@@@@G^]G^^X@@@@@Z@]D^^$PLTST$@]B^^0CO@@R]@@@@@@#C@^^//S@@@@#^@^^/SO
)@@G@@ERROR MODE:  TYPE=   ,   CODE=   , ERR.ADDRESS=         ERROR - PLOT TERSP
)@@G@@MINATION CODE NOT INTACT@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SQ
)@@G@@ SEQUENCE  N   LINE    N@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SR
)@@G@@ARGUMENT                   ERROR TERMINATION IN        ROUTINE          SS
)@@G@@ CALLED  AT  SEQUENCE  NUMBER         OF        ROGRAMA COMPUTED GO TO TST
)@@G@@HAT WAS OUT OF RANGE WAS DETECTED AT SEQUENCE NUMBER         OF MAIN PROSU
)@@G@@GRAM. ILLEGAL OP AT SPECIFIED RETURN FROM                    RETURN VARISV
)@@G@@ABLE SPECIFIED IN       OUT OF RANGE    NEGATIVEFORTRAN V ERROR TERMINATSW
)@@G@@ION:  ARGUMENT UNNORMALIZED OR OUTSIDE ALLOWABLE RANGE CAUSING    ARGUMESX
)@@G@@NT OUTSIDE ALLOWABLE RANGE CAUSING  OVERFLOW CAUSED   @@@K@@@@@/K@@]E^ACSY
)@@G@@@]B^AM@]#^AT@]B^ J@[^^ F@]D^ Q@]B^ QMAIN P@[E^ Q@]H^ )@]B^ 0@]C^ 7@[D^ QSZ
)@@G@@  I/O RETN 0RETN K@] ^A#@@@@@@@@@@@@/S@@@@000000000000@@@@@@@@@@@@@@@@@@TA
)@@G@@@@@@@@            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TC
)@@G@@@@@@@@@@@@@@@@@@@@F$ILE2      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TF
)@@G@@@@@@@@F$ILE2      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@F$ILE2TG
)@@G@@      @@@@@@@@@@@@@@@@@@@@@@@@F$ILE1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TJ
)@@G@@@@@@@@@@@@@@@@@@@@F$ILE1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TK
)@@G@@@@@@@@F$ILE1      @@@@@@@@@@@@@@@@@@@@@@@@      @#;@@D@#;@@DGROUP @[<@@@TL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TM
)@@G@@@@@@@[@@@@@Y@@@@@A@@@@@,N     Y     NO    YES   @[@@@@@#;@@@@#;@@@YESNO TN
)@@G@@@]]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SEARCH PACKT______TO
)@@G@@SEARCH#FOR# ______FOUND#SEQUEN______CE#NO.=#    ______@@[@@@Z_____@@@@@]TP
)@@G@@@@@@@E@#;@@#@#;@@#ELFIND@]S@@@@@@@@@@@@^<1@@@^<1@@@@@@@@@@@@@@@@@@@@@@@@TQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TR
)@@G@@@@@@@@@@@@&@@@@FS@@#;@@#@#;@@#PFERS @]S@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[#@@@@#;@@]@#;@@]PDATE @["@@@@@@@@@@@@@@@TT
)@@G@@@@@ V_@@@@@@            @@@@@@       MM/DD-HH:MMI/O#ERROR.#STATUS=______TU
)@@G@@@@@@@#@@@@@^@#;@@#@#;@@#PIOER @[(@@@@@@@@@@@@@@@@@@@@@BASIC SERVICE PACKTV
)@@G@@AGE ERROR (BSP).  ______BSP#ROUTINE=______###STATUS=# ______@[A@@@@#;@@^TW
)@@G@@@#;@@^ERBSP @[X@@@@@@@@@@@@@@@@@@@@@SYMBOLIC#   ______RELOCATABLE#______TX
)@@G@@ABSOLUTE#   ______ELEMENT#    ______     /______@#;@@]@#;@@]BLDEL @[3@@@TY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@#@#;@@#@#;@@#INSLOT@[L@@@@@@@@@TZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@     *______.#    ______@#;@@]@#;@@]UA
)@@G@@BLDFN @[G@@@@@@@@@@@@@@@@@@@@@@@@@@@@#;@@]@#;@@]INCHAR@[B@@@@@@@@@@@@@@@UB
)@@G@@@@@@@ @@@@@#@#;@@]@#;@@]INSONE@[J@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UC
)@@G@@@[@@@@@#;@@[@#;@@[PRTLN @[P@@@@@@@@@@@@^BV@@@@@@@@@@@@@@@@@@@@@@@ @@@@@#UD
)@@G@@@#;@@]@#;@@]INSTWO@[K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@[@#;@@[UE
)@@G@@@#;@@[CLRLN @[F@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CANNOT#SALVAGE#   ______UF
)@@G@@NO BACKUP (DELETED) ELEMENT IN FILE.______BACKUP#     ______ELEMENT#IN#EUG
)@@G@@RROR#HAS#BACKUP#(DELETED)#ELEMENT.  ______DO YOU WANT BACKUP ELEMENT? ANUH
)@@G@@S Y OR N.   ______DO YOU WANT IMAGES UP TO POINT OF ERROR? ANS Y OR N.  UI
)@@G@@______ADD PACKET  ______SALVAGED#   ______BACKUP#     ______##-#  ______UJ
)@@G@@#IMAGE(S).  ______@@@@@#@[A@@@@@@@@C@@@@@BETNL  @@[@@[@@[@@@@@@@@D*SDFF*UK
)@@G@@@@@@@]@@@@@EETIA  @#;@@[@#;@@[ERSYM @^=@@@@@@@@@@@@@@@@@@^<1@@@@@@@@@@@@UL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@INPUT PROC PACKET ______ADD ASUM
)@@G@@M PROC______ADD COB PROC______ADD FOR PROC______RPFAPTRPFCPTRPFFPTAPTNL UN
)@@G@@CPTNL FPTNL @@[@@@@@@@@#@@@@@^APTIA @@@@@]CPTIA FPTIA WPFAPTWPFCPTWPFFPTUO
)@@G@@@#;@@[@#;@@[TPROC @#H@@@@@@@@@@@@^3 @@@^R/@@@^3 @@@@@@@@@@@@@@@@@@@@@@@@UP
)@@G@@@@@@@@@@@@@@@@@@@@OUT#LOC,NUM=______     ,______@#;@@@@#;@@@RITE  @["@@@UQ
)@@G@@@@@@@@@@@@@@IN#LOC,NUM= ______     ,______@#;@@@@#;@@@REED  @] @@@@@@@@@UR
)@@G@@@@@@@@BACKUP#     ______HAD#  ______NUMBER#OF#IMAGE(S)#TO#ERROR=  ______US
)@@G@@*SDFF*@[[@@@@@@@@#@@@@@ @#;@@@@#;@@@ELCHK @#V@@@@@@@@@@@@^BT@@@@@@@@@@@@UT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@I/O#ERROR.#STATUS=NO#ENDUU
)@@G@@#OF#IMAGES. BAD#CONTROL#WORD. BAD#IMAGE#LENGTH. @[@@@@@#;@@ @#;@@ DMPIT UV
)@@G@@@[>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FAC#REJECT:#UW
)@@G@@______@ASG,A      ______     X______.##.# ______@USE EERROR.@[E@@@@@ @@@UX
)@@G@@@#;@@A@#;@@AEQUATE@]$@@@@@@@@@@@@@@@@@@^BV@@@@@@@@@^BV@@@@@@@@@@@@@@@@@@UY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@NOT#FASTRANDNOT#TAPE.   SALVAG______FILE#NAMES#MUZ
)@@G@@UST#BE#DIFFERENT. ______INPUT PACKET______(DELETED)   ______ ADD PACKET VA
)@@G@@______ADDED#______ALL THRU. SALVAGE SUMMARY.    ______@FREE,A     ______VB
)@@G@@     R______X#    ______     R______.#.## ______ELEMENT(S)# ______NOT#  VC
)@@G@@______SALVAGED=   ______#SYM##______#REL##______#ABS##______NONE. ______VD
)@@G@@CANNOT#SALVAGE#   ______@@@@@[@@@@@@@@@@@]@@@@@ RFTI  RPFET ETNL  @@[@@[VE
)@@G@@@@[@@@@@@@@E*SDFF*ETIA  WPFET WFTI  @] @@@@@ @@@@@@@@#ENDPRG@@@^<1@@@^C*VF
)@@G@@@@@@@@@@@^"[@@@^<1@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@VG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@VH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MAIN        @A.@@@@@@@@[VI
)@@G@@                  8MK^L(     40     @M@[E@;&I@@@   41*   C        8M0^L\VJ
)@@G@@                  ;AI@@@                  /KF@@@                  []0^MZVK
)@@G@@TRD         @@]@@AGY; CC@@[^@@@@N@C@IRUNT       @@]@@GH[][ND@@@@@@@@ @CNVL
)@@G@@INFOR$      K@]@@MI$L^QA@@V^@[@#1@CSINFOR       @@]@@SBMP JD@@1^@W@[P@GDVM
)@@G@@ASMBL       K@]@@YF8] RB@@]^[H@@8@HYBSP         K@]@@=ON&[D^@@@@@@@C?@IQVN
)@@G@@SCD01       K@#@@:E+Z#]D@@@@@@@ P@R]@ <^[JERU$        K@@@@\H-B^HDDATE  VO
)@@G@@      @@]@@5G'@[ND@@@@@@@@^@WRIOPT        @@]@@;G';[ND@@@@@@@@#@WVBTOCT VP
)@@G@@      @@]@[[G\ODVC@@A^A2@@I@WYITF         @@]@[BG;K[QD@@B^A8@@Q@W?REG$A0VQ
)@@G@@      @@]@[HG"%[ND@@@@@@@@A@X]ESUMY       C@[@[MBM? JD@@A^A_DBUG        VR
)@@G@@C@[@[RBM? JD@@#^B BSPC        C@[@[WBM? JD@@L^BCIMAGE       C@[@[-BM? JDVS
)@@G@@@@S^BTCONV        C@[@[&BM? JD@@#^B1F2B         C@[@[:BM? JD@@]^B4F2A   VT
)@@G@@      C@[@[0BM? JD@V]^B6F1B         C@[@[5BM? JD@@B^+8F1A         C@[@['VU
)@@G@@BM? JD@7]^+_F$3         C@[@[_BM? JD@@[ U[BLANK$COMMONC@[@]^BM? JD@@@ U]VV
)@@G@@GROUP       @@A@]IMHCEYC@@I U]@[<@XC@@# UK@@@@@@@@@@@@)[5@@@YESNO       VW
)@@G@@@@C@]UBDP^VD@@M UN@[J@Y:@@# U>@@@@@@@@@@@@)[5@@@)[1@@@)[T@@@ELFIND      VX
)@@G@@@@J@]!BB,^VD@@V U*@]^@Z'@@# V#@@@@@@@@E VA)[5@@@)[1@@@)[!@@@)[(@@@)[>@@@VY
)@@G@@)[-@@@)[X@@@)[T@@@)[P@@@)[L@@@PFERS       @@B@]8B:D[^D@@G VK@]G@-"@@B VWVZ
)@@G@@@@@@@@@@K V<)[5@@@)[1@@@PDATE       @@B@##I"YEDC@@D V3@@<@=E@@# V/@@@@@@WA
)@@G@@@@# V_)[5@@@)[1@@@PIOER       @@C@#JDJQ[DD@@H W]@@<@=!@@@@@@@@@@@@@@@@@@WB
)@@G@@)[5@@@)[1@@@)[X@@@ERBSP       @@C@#VDFI[DD@@P WJ@@(@>K@@@@@@@@@@@@@@@@@@WC
)@@G@@)[5@@@)[T@@@)[X@@@BLDEL       @@C@#$B"F[JD@@Q W=@@4@>9@@[ W'@@@@@@@@@@@@WD
)@@G@@)[5@@@)[T@@@)[1@@@INSLOT      @@A@#1B&J[CC@@E W;@@>@&!@@# X @@@@@@@@@@@@WE
)@@G@@)[5@@@BLDFN       @@B@#/D[ [DD@@G XC@@$@$M@@@@@@@@@@@@@@@@@@)[5@@@)[T@@@WF
)@@G@@INCHAR      @@B@^BD%1GIC@@A XO@@L@$9@@@@@@@@@@@@@@@@@@)[5@@@)[T@@@INSONEWG
)@@G@@      @@A@^LB< [CC@@E XU@@-@*E@@] X=@@@@@@@@@@@@)[5@@@PRTLN       @@B@^WWH
)@@G@@D?9GIC@@D X&@@U@*:@@[ X\@@@@@@@@@@@@)[5@@@)[T@@@INSTWO      @@A@^&DG[[DDWI
)@@G@@@@E X0@@-@( @@] X'@@@@@@@@@@@@)[5@@@CLRLN       @@B@^1DX+GIC@@D X/@@M@(&WJ
)@@G@@@@[ Y @@@@@@@@@@@@)[5@@@)[T@@@ERSYM       @@K@  DOP [D@[K YA@A,@(8@@H ZQWK
)@@G@@@@@@@@@@@@@@)[5@@@)[1@@@)[!@@@)[(@@@)[>@@@)[-@@@)[X@@@)[T@@@)[P@@@)[L@@@WL
)@@G@@)[H@@@TPROC       @@J@ SBDC^VD@@( Z<@^D@0&@@B )G@@@@@@@@C )N)[5@@@)[1@@@WM
)@@G@@)[!@@@)[(@@@)[>@@@)[-@@@)[X@@@)[T@@@)[P@@@)[L@@@RITE        @@J@ :IQG^YDWN
)@@G@@@@F )V@[#@4\@@@@@@@@@@@@@@@@@@)[5@@@)[1@@@)[!@@@)[(@@@)[>@@@)[-@@@)[X@@@WO
)@@G@@)[T@@@)[P@@@)[L@@@REED        @@J@ "I:> [D@@F )&@[U@52@@@@@@@@@@@@@@@@@@WP
)@@G@@)[5@@@)[1@@@)[!@@@)[(@@@)[>@@@)[-@@@)[X@@@)[T@@@)[P@@@)[L@@@ELCHK       WQ
)@@G@@@@I@AKDKR [D@@S )1@#/@7G@@B -D@@@@@@@@G -K)[5@@@)[1@@@)[!@@@)[(@@@)[>@@@WR
)@@G@@)[-@@@)[X@@@)[T@@@)[P@@@DMPIT       @@C@AWBBL^VD@@H -W@[A@;C@@[ -(@@@@@@WS
)@@G@@@@@@@@)[5@@@)[X@@@)[T@@@EQUATE      @@D@A(H0] ID@@U -%@]T@/I@@^ +^@@@@@@WT
)@@G@@@@^ +C)[5@@@)[1@@@)[X@@@)[T@@@MAIN        @@K@@@DQ% [D@[M +G@B:@"$@@E <YWU
)@@G@@@@@@@@@@@@@@)[5@@@)[1@@@)[!@@@)[(@@@)[>@@@)[-@@@)[X@@@)[T@@@)[P@@@)[L@@@WV
)@@G@@)[H@@@  ,6H7065  ,6H7069(049H0***** TROUBLE LOADING DUMP FILE.  SEE CONSWW
)@@G@@ULTANT/(I10))     @@F@@ZS22OUT@EP@@]@@F@@ RVSTAT@FI@@]@@F@@DSETCON@F%@@]WX
)@@G@@@@F@@CCOORD @G @@]@@F@@ SUMPRM@GV@@]@@F@@ SUMPLN@G2@@]@@F@@ CONOUT@H @@]WY
)@@G@@PRIMARY CATEGORY TOTAL  ______ALL CATEGORY TOTAL      ______@@F@@FPLANESWZ
)@@G@@@J?@@]@@F@@#SAVLAB@J7@@]@@F@@ LOCATE@KG@@]@@@@@ @@@@@A@@@@@^@@@@@]@@@@@[XA
)@@G@@      @@[@@@PRINT @@@___@@@@@@@@@@@W@@[@@[PUNCH @@@B____"@@@@@^@@@   TOTXB
)@@G@@AL    DSL   ______DATE  ______NTCDS ______EPDUMP______IDMAT ______CTRL  XC
)@@G@@______-     ______                                                      XD
)@@G@@                                                                        XE
)@@G@@                        (038H0SAVEDATA OUTPUT SUMMARY - OUTPUT SET ,A3/0XF
)@@G@@35H0CARD IMAGES LISTED BELOW HAVE BEEN)   (001H+,35X,010HPUNCHED---)    XG
)@@G@@(001H+,35X,016HWRITTEN ON FILE ,2A6)(087H0         1         2         3XH
)@@G@@         4         5         6         7         8  CARD/090H 1234567890XI
)@@G@@1234567890123456789012345678901234567890123456789012345678901234567890  XJ
)@@G@@COLUMNS/)   (3HTAB,I6,I4,I3,1X,A6,A2,1X,7A6,A4) PRT   ______(007HENTRIESXK
)@@G@@,I4)  PRT   ______PRT   ______ROWS  ______COLS  ______\3H2X]J.BB(I\3H<]@XL
)@@G@@J.AV&_\3HRW"J.AV&_\3HN&]J.AV&_\3G/X]J.AV&_\3G08@@=0]=+@=0#DM@[?BOA@@8BR@XM
)@@G@@@@SBR'@@[B-2@@[BSM@@[B-3@@#BSN@@[B-4@@[BSQ@[0BY@@@[B+X@@#B+Z@@#B+<@@#B+$XN
)@@G@@@@#B+:@@#B+\@@]B+3@@HBZ0@@[B+8@@]B+'@[ABU-@@GBZ.@@[B<@@@#B<]@@]B<A@@GB)DXO
)@@G@@C8)@@@+@@@@I/=K]*YR[@BM[N8O@@#^^K]=(/,0#SC@@@]=(@@@BG<@@@BGB@ITBI>/K@]*YXP
)@@G@@C/@__"G@@BFJC@)BL;G/)__/C[@BM@G.@__/C[)BL9G.)__;C]@BL/G"@__/R[K@@IR[)@@KXQ
)@@G@@[@@@[^[[)BM[[]@BM C@A@@#[@ @@#*@ @@#/K@]>#C/@@@[[@ @@#O.K@@[O.)@@[8L@]=.XR
)@@G@@/,0]:5@@@BG$@@@@@@@@@@@@@@@@@@@I<BI>C/@__"G@@BF*R[0BH.Q[0BM [@@@[^R@)BG$XS
)@@G@@O@)BM[C@]@@#[@B)@#C/)@@[G@)BG$[@)BG$8L@]>LC/@__"G@@BFJC@)BL;G/)__/C[@BL.XT
)@@G@@G.@__/C[)BM@G.)__/C_)@@[R@0@@MR@K@@KR[@@@I[@@@[^[#)BG+*@#@@#/K@]>2C@^@@#XU
)@@G@@G/@@@[[@^@@#H@[@@#*@@@@G0@@@@G/K@]&.C/@@@[[@^@@#O/0@@[O/K@@[O.@@@[G_)@@[XV
)@@G@@8L@]>&R[KBF1O[KBL6R[)BE)O[)BL7R@)BE8O@)BL6R[0BF0O[0BL6A@)BM[A[KBM A[)BM^XW
)@@G@@A[0BM#D@@BF;*@@@@G0@@@@G/K@]&\R@KBM[N8L@@#^^K]&>R@0BM^N8N@@#^^K]&$R[@BM#XX
)@@G@@N8O@@#^^K]&?R@)BM N8M@@#^^K]&!/,0[&[@@@BF;@@@BE+@@@BGB@@@BFB@@@BFV@@@BFWXY
)@@G@@@@@BFX@@@BFY@@@BFZ@@@BFU@@@BFE@@@BF)@@@BF-@@@BF+@@@BF<@@@BF=@@@BF/@@@]&>XZ
)@@G@@@@@BEZ@@@]&$@@@@@@@@@@@@@@@@@@@@@@@@@@@]&?@@@]&!@I6BI>C/@@@[(@@BGBC8@@@@YA
)@@G@@C/)@@[*@@BE+C8)@@@+@@@@I/=K]*Y/,0#SC@@@@@@@@@BH;@@@BGB@I9BI>/K@]*Y/,0]:5YB
)@@G@@@@@BG$@@@@@@@@@@@@@@@@@@@I;BI>C/@@@[G@@BE)[@@BG(C/)__"G@)BF>C.@__"G[@BEZYC
)@@G@@C[)BL/G.)__;C]@BL9G"@__;C_)@@[[[@@[^[@)BM [[)BM#[]@BM^[#)BG%R[KBG(O[KBL7YD
)@@G@@A[KBM[R[)BM[C@A@@#G/@__;[@@BG:C@)BG$[@)BE?C[@BG%[[@BE7N[KBM R[0BE7O[0BM#YE
)@@G@@R@KBE?O@KBM^A@KBM]A[0BMAC@@BG:/@@]$\/C@]$_R@0BMAC@<@@#R[@BM]"@=@@#[@<@@#YF
)@@G@@/K@]*IR@)BE7O@)BM#R[KBE?O[KBM^A@)BMBA[KBMCR[)BMCC@A@@#R@KBMB"^[@@#*@@@@GYG
)@@G@@1@@@@G/K@]$"C@A@@#[@[@@#/K@]*IR[0BE7O[0BM#R[@BE?O[@BM^A[@BMBA[0BMCR@0BMCYH
)@@G@@C@#@@#R@)BMB"^]@@#*@@@@G1@@@@G/K@]*IC@]@@#[@#@@#C@@BE?G@@BEZ[@@BE?C@)BE7YI
)@@G@@G@)BEZ[@)BE78LK]$)C.@@@[G[@BG$[[@BG$C.)@@]G[)BG([[)BG(G_)@@[8L@]$N/K@]>TYJ
)@@G@@*@@BFJ/K@]*<N@0]*+/K@](P@JSBI>C/@__"G@@BFJC@)BM@G/)__/C[@BL.G.@__/C[)BL"YK
)@@G@@G.)__/C]@BL_G"@__/C_)@@[R[K@@OR[)@@MR@K@@KR[@BH.Q[@@@I[@@@[^[#)BG+*@^@@#YL
)@@G@@/K@]*;C@[@@#G/@@@[[@^@@#/K@](AC@^@@#H@[@@#*@@@@G/K@](#(@A@@#/K@](# @^@@#YM
)@@G@@/K@]-EC@^@@#G/@@@[[@^@@#C@ @@#H@^@@#*@@@@G1@@@@G/K@]-EC/@@@[[@^)@#O.K@@[YN
)@@G@@O.)@@[O/K@@[G_)@@[8L@]*4N@0](O/K@](P@J?BI>R]0BI&9!)BMD9,@BMF9,)BMH9\)BMJYO
)@@G@@R@KBMLR@)BMMR@0BMNR[@BMOR[KBMPR[)BMQR[0BMRN[@BMSN[KBMT*4@RI</K@RI</K@@%VYP
)@@G@@AA0BI&9()BMD9%@BMF9%)BMH9:)BMJA@KBMLA@)BMMA@0BMNA[@BMOA[KBMPA[)BMQA[0BMRYQ
)@@G@@^[@BMS^[KBMTC8FK@@[@@BL9C8FK@[[@@BM@[^@]<UC8FK@][^@]>C[^@]&_[@@BL;C8FK@#YR
)@@G@@[^@]<V[^@]>D[^@]$@C8FK@^[@@BL_C8FK@ [@@BL.C8FK@A[@@BL"C8FK@B[^@]>E[@@BL8YS
)@@G@@[^@]<W[^@]$[C8FK@C[@@BL'C8FK@D[^@]&8[^@]&*[@@BL//K@])YC@@BMWG/@__/C@)BMVYT
)@@G@@G/)__/R@KBH.Q@K@@GR@)BH.Q@)@@IN.@@@#C@[)@#[@])@#8L@]%WN@0]%-/K@]%+@J7BI(YU
)@@G@@R]0BI%R@KBMXR@)BMYN[@BMZ*4@RI$/K@RI$/K@@%VAA0BI%A@KBMXA@)BMY^[@BMZC8FK@@YV
)@@G@@[@@BMVC8FK@[[@@BMW/K@]%NC@@BLJG/@__;[@@BM-C@@BF*[@@BG!C/)@@[[@)@@@C[@BM=YW
)@@G@@G.@__/C[)BM<G.)__/C]@BM+G"@__/[[@BM>[[)BM&[]@BM$*@@BFJ/K@]:BN@0]:A/K@]:%YX
)@@G@@@K@BI!C/@__"G@@BFJR@KBM$R@)BM&R@0BH.Q@0BM>[@@@[^C@[@@#G/@__"[@@BG\D@+@@#YY
)@@G@@/C)]:P*@@@@I/K@]:XD@+@@#[@)BG0R[@BG\O[@BG0O[@BM-C[^@@#G.@__"[[@BG\C@@BG\YZ
)@@G@@T@@BG!G@@@@@[@@@@@C@<)@#T@)BG![@)BG!O/K@@[O/)@@[8L@]:IN@0]:(/K@]:%@KGBI!ZA
)@@G@@R]0BI,9!)BM*9,@BM%R@KBM?R@)BM!R@0BM,R[@BM\N[@BM0*4@RI:/K@RI:/K@@%VAA0BI,ZB
)@@G@@9()BM*9%@BM%A@KBM?A@)BM!A@0BM,A[@BM\^[@BM0C8FK@@[^@]%8[^@]:Z[^@]:)C8FK@[ZC
)@@G@@[@@BM+C8FK@][@@BM=C8FK@#[@@BM</K@]%2C8FK@@[@@BK,C8FK@[[@@BK:C8FK@][@@BK?ZD
)@@G@@C8FK@#[^@]C.[^@]ONC8FK@^[@@BKF[^@]# C8FK@ [@@BK\C8FK@A[@@BK%C8FK@B[@@BK!ZE
)@@G@@C8FK@C[@@BLJ[^@]&:[^@]NT[^@]=T[^@]L4C8FK@D[@@BI6C8FK@E[@@BI8C8FK@F[@@BI.ZF
)@@G@@C8FK@G[@@BI'C8FK@H[@@BI2C8FK@I[@@BI7C8FK@J[@@BI1C8FK@K[@@BI4C8FK@L[@@BI5ZG
)@@G@@C8FK@M[@@BJ@C8FK@N[^@]&([^@]NR[^@]L2[@@BK([^@]=RC8FK@O[^@]=S[^@]&%[^@]NSZH
)@@G@@[@@BLZ[^@]L3C8FK@P[@@BI0C8FK@Q[@@BI"C8FK@R[@@BI_C8FK@S[@@BI3C8FK@T[^@] 2ZI
)@@G@@C8FK@U[@@BI;[^@]DHC8FK@V[@@BI/C8FK@W[@@BI9C8FK@X[^@[7T/K@[6Q @@BM/C/@@[=ZJ
)@@G@@[@@BM./,0[G*@@@BW>@@@BM"@@@BM_@@@BM_/K@#Q4@[EB+Z/,0[G*@@@BW$@@@BN@@@@BM_ZK
)@@G@@@@@BM_/K@#Q4@[FB+Z @@BN[/,0[G4@@@BW(@@@BN[/K@]!?/K@]!?@[HB+Z @@BN]/,0[G4ZL
)@@G@@@@@BW:@@@BN]/K@]!3/K@]!3@[JB+ZR@KB>@C@[@@@[@@BN#/,0[G*@@@BW!@@@BN^@@@BM_ZM
)@@G@@@@@BM_/K@#Q4@[LB+ZC_)@@[N.@@@D[#)BN /,0[E5@@@BM1@@@BN @@@@@@@[PB+Z/,0[E5ZN
)@@G@@@@@BM3@@@BN @@@@@@@[QB+ZG_)@@[8L@]!_/,0[E5@@@BM5@@@B-5@@@@@@@[SB+Z/,0[E5ZO
)@@G@@@@@BM7@@@B-5@@@@@@@[TB+ZN@0],S/K@#Q"@[UB+Z/,0[6]@@@@@@@@@BN @@@B-6@@@B-6ZP
)@@G@@@@@B-5@[YB+Z/,0[6L@@@BNA@[ZB+ZC@@B-7[@@BM8C@)B-8[@)BM9C.@@@BH[@BNA[[@B>]ZQ
)@@G@@/,0[D2@@@BN @@@B>]@@@BM8@@@B-9@@@BNA@[+B+ZC/@@@ G@@BNA[@@BNBN@0],6/K@#Q"ZR
)@@G@@@[=B+ZN@0],9/K@#Q"@[*B+ZC/@@@[G@@BNC[@@BNCR/K__4O@KB>#O@KBNCC@-@@E[@)BN ZS
)@@G@@ @@BNA(@@B> /K@]\BC/@@@[[@@BNAC@@@@@H@@B>A]@@B>]/,0^-.@@@BW\@@@BN @@@@@@ZT
)@@G@@@@@BNA@@@B>]@@@@@@@@@@@@@@@@@@@[1B+ZC@@B>AG@@BNAT@@BND[@@BNDN@0]\U/K@#Q"ZU
)@@G@@@[3B+ZN@0]\X/K@#Q"@[7B+ZC@@B-8[@@BM'[@@BM;*@@@@@/K@]\&N@0]\>/K@#Q"@["B+ZZV
)@@G@@C/@@@[H@@@@@*@@@@G/K@]\?C/@@[=[@@BM.C@@B-'[@@BM'/,0[6]@@@@@@@@@BN @@@B-6ZW
)@@G@@@@@B-6@@@B-5@]]B+Z/,0[6L@@@BNA@]#B+ZC/@@@BH@@BNA[@@B>]/,0[D2@@@BN @@@B>]ZX
)@@G@@@@@BM;@@@B-5@@@BNA@]^B+ZN@0]0^/K@#Q"@] B+ZN@0]0B/K@#Q"@]DB+Z*@@@@@/K@]0HZY
)@@G@@N@0]0G/K@#Q"@]HB+Z/,0[6]@@@@@@@@@BN @@@B-6@@@B-6@@@B-5@]IB+Z/,0[6L@@@BNAZZ
)@@G@@@]JB+Z/,0[E5@@@BM8@@@BNB@@@BW1@]KB+ZC/@@@BH@@BNA[@@B>]C/@@@[G@@BNB[@@B>EAA
)@@G@@/,0[D2@@@BN @@@B>]@@@BM8@@@B>E@@@BNA@]LB+ZN@0]0:/K@#Q"@]MB+ZN@0]0,/K@#Q"AB
)@@G@@@]QB+ZN@0]01/K@#Q"@]UB+ZN@0]04/K@#Q"@]YB+ZN@0]07/K@#Q"@]*B+Z @@BNC @@BN)AC
)@@G@@ @@BN(C/@@@[C/)@@[H@)BM.*@@@@I1@@@@IC8@@@@C/)@@[C.@@@[H[@B>K*@@@@K1@@@@KAD
)@@G@@C8)@@@)@@@@I/)K]1FC/@@@[[@@BN(C@@B>K[@@BM.C/)__"G@)@@@C[@B>BG.@__4C[)B>MAE
)@@G@@G.)__4C]@B>BG"@__6C])B>CG")__6C#@B>HG_@__5[@)B>E[[@B>][[)B>N[]@B>O[])B>PAF
)@@G@@[#@B>QD@@@@@/G@]1<*@@@@G/K@]1>C/@@[=[@@BM. @@BN% @@BN:C/@__"[@@BN  @@BN?AG
)@@G@@ @@BN!C_0@@[R@KB>QR@)B>PN[@B>E[#0BNAC/@__"G@@@@@[@@B>EC@]@@EG/@__"/C@]18AH
)@@G@@*@@@@G/K@]4NC/@@@[G@@BN?[@@BN?(@]@@D/K@]2@C/@@@[G@@BN![@@BN!C@]@@DH@@BN AI
)@@G@@(@@@@G/K@]22C@]@@D[@@BN C_)@@[R@0B>ON[KB>E[#)BN,C@#@@DH@@BN (@@@@G/K@]2LAJ
)@@G@@O/0@@]G_)@@[8LK]2DR@0B-;N.K@@^C@@B-/[@#$N)8LK]2NC@@BN,;@@@@<G@@B>]C@?@@EAK
)@@G@@[@)BN0R@0BN0C@@BN,[@#BN)G/@@@[[@@BN,H@@@@@/G@]2=*@@@@G/K@]2?C@@BN,;@@@@<AL
)@@G@@R@0B>]O@0@@GC@#@@DH@@BN (@@@@G/K@]2QC@@BN-H@@B-/*@@@@G/K@]22C/@@@[[@@BN-AM
)@@G@@C@@BN-[@@BN1 @@BN2[@@BN3 @@BN4C@+@@E[@)BN\G/)__:/G)]2.*@@@@I/K@]3TC/@@@EAN
)@@G@@H@@BN\*@@@@G1@@@@G/K@]3^C@@BN+[@@BN1C/@@@[C/)@@MH@)BN\(@@@@IC8@@@@C/)@@[AO
)@@G@@C.@@@BH[@BN\(@@@@KC8)@@@+@@@@I/=K]4EC/@@@[G@@BN:[@@BN:R@0BN:O@0B>N[@@BN2AP
)@@G@@C@)BN1[@<@@E/K@]4EC/@@@MH@@BN\;K@@@[]@@BN0RA0BN0$'0@@D8];]3-'^@@%D@#,B+ZAQ
)@@G@@/K@]3%/K@]31/K@]34/K@]37/K@]37/K@]3//K@]3_/K@]37C/@@@OH@@BN\(@@@@G/K@]4EAR
)@@G@@C@@BN+[@@BN1/K@]4[C@@BN+[@@BN1/K@]4[C@@BN<[@@BN1/K@]4[C@@BN+[@@BN2C@)BN<AS
)@@G@@[@)BN1/K@]4[C@@BN=[@@BN1/K@]4[C@@BN>[@@BN1C@@BN\;O@@@=W/@@@](@@@@H/K@]4EAT
)@@G@@C/@@@[G@@BN%[@@BN%[@@BN4N8L@@E^^K]4H/,0#VQ@@@]4H@@@BN1@@@BN2@@@BN3@@@BN4AU
)@@G@@@^[B+ZO/K@@[O/)@@]G_0@@[8L@]1\D@@@@@*@@@@G0@@@@G/K@]4YN@0]4X/K@#Q"@^ B+ZAV
)@@G@@C/@@@[[@@BN5[@@BN6C@@@@@H@@@@@*@@@@G/K@]4& @@BN5C@@@@@H@@@@@*@@@@G/K@]4:AW
)@@G@@ @@BN6C/@@@]G@@@@@[@@BN7[@@BN8C/)@@]G@)@@@[@)BN9/K@]9< @@BN' @@BN; @@BN/AX
)@@G@@C/@__"G@@@@@C@)B>CG/)__6C[@B>DG.@__5C_)@@[R@0@@I[@@@[^[[@B>][#)BN C@#@@EAY
)@@G@@[@@BN.G/@__"/C@]5B*@@@@G/K@]5NC@#@@D[@@BN"/,0#*N@@@BN,@^VB+ZC@@BN/H@@BN,AZ
)@@G@@*@@@@G1@@@@G/K@]5NC@@BN,[@@BN/O/0@@]G_)@@[8L@]5@R@KB-;N.@@@PC@@B-8[@[$NDBA
)@@G@@8L@]5SC/)@['H@)BN/;O)@@=W/)@@D[@)BN9*@@@@@/K@]5>C/@@@[G@@BN9[@@BN9 @@BN6BB
)@@G@@C@@@@@[@@BN,C/@@@[H@@BN,*@@@@G1@@@@G/K@]50C/@@@[G@@BN,[@@BN,C@@@@@H@@@@@BC
)@@G@@;O@@@=W@@BN9C@)BN,;O)@@=W@)BN9H@0BN9G/0@@[H@0@@H/G0]5.*@@@@J/K@]5_C/@@@[BD
)@@G@@[@@BN6C@@@@@H@@@@@;O@@@=W@@BN9*@@@@H/K@]6A @@BN6C@@BN,;O@@@=W@@BN9*@@@@HBE
)@@G@@/K@]6G @@BN6C/@@@[G@@BN?C@)@@GG/)__;0@@@@IC/@@@^[@@BN *@@@@@/K@]6SC/@@@]BF
)@@G@@G@@BN?[@@BN *@@@@@/K@]6WC/@@@[[@@BN C/@@@4H@@BN[H@@@@@H@@@@@[@@BN_*@@@@@BG
)@@G@@/K@]6&C/@@@[G@@BN_[@@BN_*@@@@@/K@]6:C/@@@]G@@BN_[@@BN_C@@@@@T@@BN G/@@@^BH
)@@G@@[@@BNAC@@@@@H@@@@@*@@@@G1@@@@G/K@]67C/@@@#G@@BNA[@@BNAC/@@@[D@)@@@*@@@@IBI
)@@G@@1@@@@IC8@@@@C/)@@[C.@@@[H[@@@@*@@@@K1@@@@KC8)@@@+@@@@I/)K]7BC@@BNAG@@BN BJ
)@@G@@[@@BNAC@@@@@G@@BNAG/@@@][@@BO@*@@@@@/K@]7KC/@@@[H@@BO@]@@BO@(@@@@@/K@]8^BK
)@@G@@C/@@@[G@@@@@[@@BO[C@@@@@H@@@@@(@@@@G/K@]7WC/@@@]G@@@@@[@@BO[C@@BN9H@@BO[BL
)@@G@@*@@@@G1@@@@G/K@]7<C/@@[=[@@BO@(@@@@@/K@]8IC/@@@]G@@BO@[@@BO@C/)__"G@)@@@BM
)@@G@@R@)B>][@)@[^C/@@@^+@]@@E(@@@@H/K@]73C/@@@#G@@BO@[@@BO@C/@@@C+@]@@E(@@@@HBN
)@@G@@/K@]7'C/@@@[G@@BO@[@@BO@C/@@@K+@]@@E(@@@@H/K@]8[C/@@@[G@@BO@[@@BO@O/)@@[BO
)@@G@@8L@]7?/K@]8IC/@@@]H@@BO@]@@BO@C/@@@CH@@BN?*@@@@G1@@@@G/K@]8IC/@@[=[@@BO@BP
)@@G@@C@@BN_;O@@@=W@@BNA[@@BO#C@@BO#G/@__"*@@@@G1@@@@G/K@]8TC/@@@[[@@BO#C/@@@BBQ
)@@G@@H@@BN_]@@BN_C@@BN_;O@@@=W@@BN [@@BN7C/)@@]H@)BN_;O)@@=W@)BN ]@)BN8/C)]8*BR
)@@G@@*@@@@I/K@]8?C/)@[]G@)BN_[@)BN_/K@]8W @@BN5C@@@@@"^@B-.(@@@@G/K@]9RC@@@@@BS
)@@G@@[@@BN,C/@@@[H@@BN,*@@@@G1@@@@G/K@]8;C/@@@[G@@BN,[@@BN,C@@@@@H@@@@@;O@@@=BT
)@@C@@W@@BN7C@)BN,;O)@@=W@)BN7H@0BN8H@0@@H/G0]9B*@@@@J                        BU
@EOF
@COPY,IO  TEMP.1012-001-002,1012-001-002.
@FREE     TEMP.
