<HTML><!--This file created 4/28/98 7:39 PM by Claris Home Page version 3.0--><HEAD>   <TITLE>TOCED 10R8</TITLE>   <META NAME=GENERATOR CONTENT="Claris Home Page 3.0">   <X-CLARIS-WINDOW TOP=90 BOTTOM=768 LEFT=12 RIGHT=542>   <X-CLARIS-TAGVIEW MODE=minimal></HEAD><BODY BGCOLOR="#FFFFFF"><CENTER><B>TOCED<BR>Table of Contents Editor</B><BR><B>Version 11R2</B></CENTER><H1>1. Use of TOCED.</H1><H2>1.1. Purpose.</H2><P>The TOCED processor is used to conversationally edit the table ofcontents of a program file. It allows all or portions of the table ofcontents to be edited, program elements to be deleted, and anyelements deleted after the last @PACK of the file to berecovered.</P><P>TOCED will also allow read-only access to the Master FileDirectory (MFD) and the system print queues. It also allows access tothe TIP directories.</P><P>The TOCED command structure is modeled on the original @ED texteditor. All of the @ED commands have not been implemented, (INSERT,APPEND, etc.) and some of the TOCED commands are unique (e.g., SAVE).However, users familiar with @ED commands should find TOCED easy tolearn.</P><P>New features in 9R4 are:</P><UL>   <LI>The FC and LC commands now support the '*' and ',' formats.   See the 'FIND AND COUNT' and 'LOCATE AND COUNT' command   documentation for details.</LI>   <LI>A new mode has been added: MFD (Master File Directory). Users   may now examine the Master File Directory via the MFD and MFD!   commands.</LI>   <LI>In conjunction with the new MFD mode, users may now switch to   another file via the TOC! command.</LI>   <LI>A new ON/OFF mode, ROLLBK, was added for use with the TOC!   command.</LI>   <LI>While in MFD mode, users may request information about a file   similar to that supplied by the @PRT,F command. See the SHOW   command for details.</LI>   <LI>The ELT command will now work on ABSOLUTE elements. Entering   ELT on an absolute element will show a MAP of the relocatable   elements which built the absolute.</LI>   <LI>TOCED can now be directed to start in the Assembler, COBOL, or   FORTRAN procedure tables, the Entry Point Table, or the Master   File Directory instead of the Table of Contents. See the   'Processor Call Options' section for details.</LI></UL><P>New features in 9R6 are:</P><UL>   <LI>The FILE command was added.</LI></UL><P>New features in 10R0 are:</P><UL>   <LI>A bug triggered by long lines in elements was corrected.</LI>   <LI>TOCED will now operate on SDF (PRINT$, etc.) files.</LI>   <LI>A new ON/OFF mode, ECHO, was added.</LI>   <LI>A new ON/OFF mode, LONG, was added.</LI>   <LI>The SHOW command was enhanced to allow ranges of files to be   displayed.</LI>   <LI>The VERBOSE command was added. This essentially replaces the   SHOW command, which was retained for compatibility.</LI>   <LI>The TFUR and TREG modes were added, along with the related   update commands (REG, DREG, TPASG, TPFREE, RV, CG, etc.)</LI></UL><P>New features in 10R3 are:</P><UL>   <LI>TOCED is now compatible with BSP$ for SB5R2+. This includes   limited support for the large program file (LPF) format.</LI>   <LI>The VERBOSE file display now shows the file owner.</LI>   <LI>The TOC display now distinguishes between ABSOLUTE, ZOOM,   OBJ-MODULE, and BOUND-OM element types.</LI></UL><P>New features in 10R6 are:</P><UL>   <LI>The QUE commands allow access to the system print queues.</LI>   <LI>In QUE mode, the FILE command will switch to the queued   file.</LI>   <LI>In MFD or QUE mode, the FILE command now accepts line   numbers.</LI>   <LI>The VERBOSE command works in QUE mode.</LI>   <LI>The HELP command was added.</LI></UL><P>New features in 10R8 are:</P><UL>   <LI>The DELETE command works in QUE mode.</LI>   <LI>The QTO command works in QUE mode.</LI>   <LI>The SYSTEM command was added.</LI></UL><P>If you have any problems, contact Michael Darnell at</P><P>Unisys Corporation<BR>801 East Park Drive<BR>Harrisburg, PA 17111 or 717-772-1240 ext. 251</P><H2>1.2. Calling Format.</H2><P>To call the TOCED processor:</P><P><CODE>@TOCED&#91;,OPTION&#93; FILENAME. </CODE></P><H3>1.2.1 Parameters.</H3><P>FILENAME may be any legitimate file name of the form:</P><PRE> QUALIFIER*FILE(F-CYCLE)/READ-KEY/WRITE-KEY.</PRE><P>If no FILENAME is specified, TPF$ is assumed.</P><H3>1.2.2 Processor Call Options</H3><P>OPTION, if specified, directs TOCED to begin processing in theAssembler, COBOL, or FORTRAN procedure table, the Entry Point Table,or the Master File Directory.</P><P>OPTION Initial Table</P><P>A Assembler Procedure Table (APT!)</P><P>C COBOL Procedure Table (CPT!)</P><P>E Entry Point Table (EPT!)</P><P>F FORTRAN Procedure Table (FPT!)</P><P>M Master File Directory (MFD)</P><P>Q Print QUEUE</P><P>TF TFUR (the 'I', 'U', and 'X' options are required for some TFURfunctions)</P><P>TRU TREG (the 'U' option is required for TREG functions)</P><H1>2. TOCED Commands.</H1><P>The following is an alphabetic list of the commands available tothe user of the TOCED processor. Note that all the arguments enclosedin brackets &#91;&#93; are optional and may be omitted.</P><P>NOTE: TOCED will perform limited integer arithmetic. Any referenceto numbers (e.g., 'N', 'NUM1') may be replaced by a numericexpression. For example, the statements:<BR></P><PRE>  PRINT 5,7</PRE><P>and</P><PRE>  PRINT 3+2,11-4</PRE><P>are equivalent. Note that the arithmetic performed is INTEGERarithmetic. All results are truncated. Thus, 5/2 is equal to 2instead of 2.5, and (10/3)*3 will equal 9, not 10.<BR></P><H2>2.1. The 'APT' Command.</H2><PRE>APT &#91;NUM1&#93;APT!  </PRE><P>This command switches TOCED into 'APT' mode. In this mode, TOCEDwill operate in the lines of the Assembler Procedure Table. All TOCEDinquiry and display commands ('LOCATE', 'FIND', etc.) will work. Ifno number is given on the APT command, APT mode will be entered onthe current element. If an element number is given, APT mode will beentered on the element on line NUM1. When TOCED enters APT mode, theline pointer will automatically be positioned to the first entry inthe assembler procedure table which relates to the current element(or element NUM1, if specified). Because of this, the specifiedelement MUST be an assembler (or MASM) procedure element.</P><P>If the form 'APT!' is used, TOCED will switch to APT mode, andposition the line pointer to the TOP of the assembler proceduretable. This form of the APT command is not dependent on the type ofthe current TOC element. See also the 'CPT', 'ELT', 'EPT', 'FPT', and'TOC' commands.<BR></P><H2>2.2. The 'CHANGE' Command.</H2><P><CODE>CHANGE \STRING1\STRING2\&#91;N&#93; &#91;G&#93;<BR>C \STRING1\STRING2\&#91;N&#93; &#91;G&#93;<BR>C?</CODE></P><P>This command is used to change element names, versions, andcycles, processor types for symbolic and omnibus elements, and thedate and time of creation for any element. If no number is given inthe N field, the change will only be applied to the current line. Ifa number is given in the N field, then the change will be applied tothe current line, and N-1 following lines. If an 'A' is given in theN field, then the change will be applied to the current line, and toall following lines. If the global indicator 'G' is present, then thechange will be applied to all occurances of STRING1. Otherwise, onlythe first occurrence will be changed.</P><P>If only the 'C' or 'CHANGE' is input, and a previous CHANGE hasbeen performed, the previous CHANGE will be reexecuted.</P><P>The 'C?' form of the CHANGE command will print out the last CHANGEcommand entered.</P><H2>2.3. The 'CPT' Command.</H2><P><CODE>CPT &#91;NUM1&#93; CPT!</CODE></P><P>This command switches TOCED into 'CPT' mode. In this mode, TOCEDwill operate in the lines of the COBOL Procedure Table. All TOCEDinquiry and display commands ('LOCATE', 'FIND', etc.) will work. Ifno number is given on the CPT command, CPT mode will be entered onthe current element. If an element number is given, CPT mode will beentered on the element on line NUM1. When TOCED enters CPT mode, theline pointer will automatically be positioned to the first entry inthe COBOL procedure table which relates to the current element (orelement NUM1, if specified). Because of this, the specified elementMUST be a COBOL procedure element.</P><P>If the form 'CPT!' is used, TOCED will switch to CPT mode, andposition the line pointer to the TOP of the COBOL procedure table.This form of the CPT command is not dependent on the type of thecurrent TOC element. See also the 'APT', 'ELT', 'EPT', 'FPT', and'TOC' commands.<BR></P><H2>2.4. The 'CTS' Command.</H2><P><CODE>CTS &#91;NUM1&#93;</CODE></P><P>This command will cause @CTS to be called, and an 'OLD' to be doneon the specified element. If no number is given on the CTS command,the current element will be 'OLD'ed. If an element number is given,the element on line number NUM1 will be 'OLD'ed. Note that CTS isonly valid for non-deleted, symbolic or proc elements. See also the'ED' and 'IPF' commands.<BR></P><H2>2.5. The 'DELETE' Command.</H2><P><CODE>DELETE &#91;NUM1&#93;&#91;,NUM2&#93;<BR>D &#91;NUM1&#93;&#91;,NUM2&#93;<BR>D+ &#91;NUM1&#93;&#91;,NUM2&#93;</CODE></P><P>This is the command used to delete an element or elements. If nonumbers are given, the current line will be deleted. If one number isgiven, the current line and NUM1-1 following lines will be deleted.If two numbers are given, lines NUM1 thru NUM2 will be deleted. Ifthe form 'DELETE' or 'D' is used, the current line will be the lastdeleted line. If the form 'D+' is used, the current line will be theline after the last deleted line.</P><P>In QUE mode, this command may be used to delete print or punchqueue entries. A user with access to the privileged SMOQUE$ functionscan delete their own queued files. The ability to delete entriesqueued by other users is limited to those users with the SSLASH(bypass ER MSCON$ key slashing) privilege. If a site wants to tiethis capability to another privilege, make the appropriate change tothe SUVAL$ packet in the TOCED data bank.<BR></P><H2>2.6. The 'DREG' Command.</H2><P><CODE>DREG&#91;,K&#93;&#91;QUALIFIER*&#93;FILENAME&#91;/READKEY&#93;&#91;/WRITEKEY&#93;<BR></CODE><BR>This command will deregister an Executive file from TIP and releasethe file back to the operating system. If the QUALIFIER is missing,the default value of TIP$* is assumed. The 'K' option indicates thatprocessing should continue even if an error occurs during a batchexecution. The 'DREG' command may only be issued in TREG mode.<BR></P><H2>2.7. The 'ED' Command.</H2><P><CODE>ED &#91;NUM1&#93;</CODE></P><P>This command will cause the editor (@ED) to be called on thespecified element. If no number is given on the ED command, @ED willbe entered with the current element. If an element number is given,@ED will be entered on the element on line number NUM1. If the fileis in read-only mode, an @ED,R will be done. If the file iswrite-enabled for the executing run, an @ED,U will be done. Note thatED is only valid for non-deleted, symbolic or proc elements. See alsothe 'CTS' and 'IPF' commands.<BR></P><H2>2.8. The 'ELT' Command.</H2><P><CODE>ELT &#91;NUM1&#93;</CODE></P><P>This command switches TOCED into 'ELT' mode. In this mode, TOCEDwill display the lines of a symbolic element, or a map of therelocatables which built an absolute element. All TOCED inquiry anddisplay commands ('LOCATE', 'FIND', etc.) will work.</P><P>If no number is given on the ELT command, ELT mode will be enteredon the current element. If an element number is given, ELT mode willbe entered on the element on line NUM1. See also the 'APT', 'CPT','EPT', 'FPT', and 'TOC' commands.<BR></P><H2>2.9. The 'EPT' Command.</H2><P><CODE>EPT &#91;NUM1&#93;<BR>EPT!</CODE></P><P>This command switches TOCED into 'EPT' mode. In this mode, TOCEDwill operate on the lines of the Entry Point Table. All TOCED inquiryand display commands ('LOCATE', 'FIND', etc.) will work. If no numberis given on the EPT command, EPT mode will be entered on the currentelement. If an element number is given, EPT mode will be entered onthe element on line NUM1. When TOCED enters EPT mode, the linepointer will automatically be positioned to the first entry in theentry point table which relates to the current element (or elementNUM1, if specified). Because of this, the specified element MUST be aRELOCATABLE element.</P><P>If the form 'EPT!' is used, TOCED will switch to EPT mode, andposition the line pointer to the TOP of the entry point table. Thisform of the EPT command is not dependent on the type of the currentTOC element. See also the 'APT', 'CPT', 'ELT', 'FPT', and 'TOC'commands.<BR></P><H2>2.10. The 'EXIT' Command.</H2><P><CODE>EXIT<BR>EXI</CODE></P><P>This is the command used to take a normal exit from the TOCEDprocessor. All the changes made will be applied to the file, and anormal EXIT will be taken.<BR></P><H2>2.11. The 'FILE' Command.</H2><P><CODE>FILE &#91;NEWFILENAME&#93;<BR>FILE &#91;NUM1&#93;<BR>FIL &#91;NEWFILENAME&#93;<BR>FIL &#91;NUM1&#93;</CODE></P><P>This command will switch TOCED from one file to another withoutthe necessity of exiting first. Any updates which have been made tothe current file will be applied.</P><P>NEWFILENAME may be any valid OS1100 file name. If NEWFILENAME isomitted, the FILE command will assume the file name currentlyindicated, i.e., in MFD or QUEUE mode, FILE will assume the currentline. In all other modes FILE will assume the current file.</P><P>If the FILE command is issued while in MFD or QUE mode, a filenumber may be given instead of a file name.<BR></P><H2>2.12. The 'FIND' Command.</H2><P><CODE>FIND &#91;S&#93;<BR>FIND &#91;'S'&#93;<BR>F &#91;S&#93;<BR>F &#91;'S'&#93;<BR>F?</CODE></P><P>This command searches for an image which matches exactly columnfor column, starting at column one, with the string S. If no quotes(') surround the string, it is assumed to start in column 6 for theFIND command, and in column 3 for the F command. The search beginswith the line following the current line, and proceeds until a matchis found, or the end of the table is encountered.</P><P>If no string is input, and a previous FIND or FC has been entered,a FIND will be done on the previous string.</P><P>The 'F?' form of the FIND command will print out the last FINDcommand entered.<BR></P><H2>2.13. The 'FIND AND COUNT' Command.</H2><P><CODE>FC &#91;S&#93;<BR>FC &#91;'S'&#93;<BR>FC*N &#91;S&#93;<BR>FC*N &#91;'S'&#93;<BR>FC,N &#91;S&#93;<BR>FC,N &#91;'S'&#93;</CODE></P><P>This command searches for all images which match exactly columnfor column with the string S. If no quotes (') surround the string,it is assumed to start in column 4. The search begins at the linefollowing the current line, and continues until the end of the tableof contents is encountered.</P><P>The 'FC*N' form will limit the number of finds to N. E.G., thecommand 'FC*5 ASTRING' will find five occurances of the string'ASTRING' and stop.</P><P>The 'FC,N' form will limit the number of lines searched to N.E.G., the command 'FC,5 ASTRING' will find all occurances of thestring 'ASTRING' on the following five lines and then stop.</P><P>If no string is input, and a previous FIND or FC has been entered,a FC will be done on the previous string.<BR></P><H2>2.14. The 'FPT' Command.</H2><P><CODE>FPT &#91;NUM1&#93;<BR>FPT!</CODE></P><P>This command switches TOCED into 'FPT' mode. In this mode, TOCEDwill operate on the lines of the FORTRAN Procedure Table. All TOCEDinquiry and display commands ('LOCATE', 'FIND', etc.) will work. Ifno number is given on the FPT command, FPT mode will be entered onthe current element. If an element number is given, FPT mode will beentered on the element on line NUM1. When TOCED enters FPT mode, theline pointer will automatically be positioned to the first entry inthe FORTRAN procedure table which relates to the current element (orelement NUM1, if specified). Because of this, the specified elementMUST be a FORTRAN procedure element.</P><P>If the form 'FPT!' is used, TOCED will switch to FPT mode, andposition the line pointer to the TOP of the FORTRAN procedure table.This form of the FPT command is not dependent on the type of thecurrent TOC element. See also the 'APT', 'CPT', 'ELT', 'EPT', and'TOC' commands.<BR></P><H2>2.15. The 'HELP' Command.</H2><P><CODE>H&#91;ELP&#93; ?</CODE></P><P>This command will cause TOCED to display a list of all validcommands.<BR></P><H2>2.16. The 'IPF' Command.</H2><P><CODE>IPF &#91;NUM1&#93;</CODE></P><P>This command will cause @IPF to be called, and an 'OLD' to be doneon the specified element. If no number is given on the IPF command,the current element will be 'OLD'ed. If an element number is given,the element on line number NUM1 will be 'OLD'ed. Note that IPF isonly valid for non-deleted, symbolic or proc elements. See also the'CTS' and 'ED' commands.<BR></P><H2>2.17. The 'LAST' Command.</H2><P><CODE>LAST<BR>LAS</CODE></P><P>This command directs TOCED to move to the last line in the currenttable (TOC, APT, CPT, EPT, or FPT), or element (ELT).<BR></P><H2>2.18. The 'LIMIT' Command.</H2><P><CODE>LIMIT CHANGE &#91;NUM1&#93;&#91;,NUM2&#93;<BR>LIMIT C &#91;NUM1&#93;&#91;,NUM2&#93;<BR>LIMIT FIND &#91;NUM1&#93;&#91;,NUM2&#93;<BR>LIMIT F &#91;NUM1&#93;&#91;,NUM2&#93;<BR>LIMIT LOCATE &#91;NUM1&#93;&#91;,NUM2&#93;<BR>LIMIT L &#91;NUM1&#93;&#91;,NUM2&#93;<BR>LIM CHANGE &#91;NUM1&#93;&#91;,NUM2&#93;<BR>LIM C &#91;NUM1&#93;&#91;,NUM2&#93;<BR>LIM FIND &#91;NUM1&#93;&#91;,NUM2&#93;<BR>LIM F &#91;NUM1&#93;&#91;,NUM2&#93;<BR>LIM LOCATE &#91;NUM1&#93;&#91;,NUM2&#93;<BR>LIM L &#91;NUM1&#93;&#91;,NUM2&#93;</CODE></P><P>This is the command to set the column limits for the CHANGE, FIND,and LOCATE commands. The default values for NUM1 and NUM2 are 1 and80. Thus, the command:</P><P>LIM C will set the column limits for the CHANGE command to 1 and80. If only one value is specified, it is assumed to be NUM2, andNUM1 is assumed to be 1. The command:</P><P>LIM L 5 will set the column limits for the LOCATE command to 1 and5.<BR></P><H2>2.19. The 'LNO' Command.</H2><P><CODE>LNO &#91;NUM1&#93;</CODE></P><P>This command behaves exactly like the OUTPUT command, except thateach line is preceded by its line number.</P><H2>2.20. The 'LNP' Command.</H2><P><CODE>LNP &#91;NUM1&#93;&#91;,NUM2&#93;<BR>LNP! LNP+ &#91;NUM1&#93;</CODE></P><P>This command behaves exactly like the PRINT command, except thateach line is preceded by its line number.</P><H2>2.21. The 'LNSITE' Command.</H2><P><CODE>LNSITE &#91;NUM1&#93;&#91;,NUM2&#93; &#91;PRID&#93;<BR>LNS &#91;NUM1&#93;&#91;,NUM2&#93; &#91;PRID&#93;</CODE></P><P>This command behaves exactly like the SITE command, except thateach line is preceded by its line number.<BR></P><H2>2.22. The 'LNV' Command.</H2><P><CODE>LNV &#91;NUM1&#93;&#91;,NUM2&#93;<BR>LNV!<BR>LNV+ &#91;NUM1&#93;</CODE></P><P>This command behaves exactly like the VERBOSE command, except thateach line is preceded by its line number.</P><H2>2.23. The 'LOCATE' Command.</H2><P><CODE>LOCATE &#91;S&#93;<BR>LOCATE &#91;'S'&#93;<BR>L &#91;S&#93;<BR>L &#91;'S'&#93;<BR>L?</CODE></P><P>This is the command to search the table of contents for a givenstring of characters. The search begins at the line following thecurrent line and proceeds sequentially through the table until a findis made, or the end of the table is encountered. The first formignores leading and trailing blanks. The second form accepts blanksas valid search characters.</P><P>If no string is input, and a previous LOCATE or LC has beenentered, a LOCATE will be done on the previous string.</P><P>The L? form of the LOCATE command will print out the last LOCATEcommand entered.<BR></P><H2>2.24. The 'LOCATE AND COUNT' Command.</H2><P><CODE>LC &#91;S&#93;<BR>LC &#91;'S'&#93;<BR>LC*N &#91;S&#93;<BR>LC*N &#91;'S'&#93;<BR>LC,N &#91;S&#93;<BR>LC,N &#91;'S'&#93;</CODE></P><P>This is the command to search the table of contents for alloccurances of a given string of characters. The search begins at theline following the current line and proceeds sequentially through thetable until the end of the table is encountered. The first formignores leading and trailing blanks. The second form accepts blanksas valid search characters.</P><P>The 'LC*N' form will limit the number of locates to N. E.G., thecommand 'LC*5 ASTRING' will locate five occurances of the string'ASTRING' and stop.</P><P>The 'LC,N' form will limit the number of lines searched to N.E.G., the command 'LC,5 ASTRING' will locate all occurances of thestring 'ASTRING' on the following five lines and then stop.</P><P>If no string is input, and a previous LOCATE or LC has beenentered, a LC will be done on the previous string.</P><H2>2.25. The 'LOOP' Commands.</H2><P><CODE>LOOP &#91;NUM1&#93;<BR>LOO &#91;NUM1&#93;</CODE></P><P>This command directs TOCED to enter LOOP mode. All commandsentered after the LOOP command will be stored, until an @EOF is read.At this time, the input commands will be executed NUM1 times, oruntil the end of the table of contents is encountered, whicheveroccurs first.</P><P><CODE>LOOP?<BR>LOO?</CODE></P><P>This command will print the currently stored LOOP (if any).</P><P><CODE>LOOP! &#91;NUM1&#93;<BR>LOO! &#91;NUM1&#93;</CODE></P><P>This command will execute the currently stored LOOP (if any) NUM1times.</P><H2>2.26. The 'MFD' Command.</H2><P><CODE>MFD<BR>MFD!</CODE></P><P>This command switches TOCED into 'MFD' mode. In this mode, TOCEDwill operate on the lines of the Master File Directory. All TOCEDinquiry and display commands ('LOCATE', 'FIND', 'PRINT', 'SITE',etc.) will work. Update commands ('DELETE', 'SAVE', etc.) are notallowed.</P><P>If the 'MFD' form of the command is used, the line pointer willautomatically be positioned to the entry in the MFD corresponding tothe current TOC file (if it exists). When the MFD command is entered,TOCED will check to see if a MFD checkpoint file is available. If acheckpoint file is found, TOCED will request permission to use theexisting information. If no checkpoint is found, or if TOCED isdirected not to use the existing checkpoint file, a currentcheckpoint will be taken. NOTE!! On a large system , this can take avery long time! If TOCED is unable to find the current TOC file inthe Master File Directory checkpoint file, or if the 'MFD!' form ofthe command is used, the line pointer will be positioned to the topof the Master File Directory checkpoint. See also the 'APT', 'CPT','ELT', 'EPT', and 'TOC' commands.<BR></P><H2>2.27. The 'TERMINATE LOOP' Command.</H2><P><CODE>LPX</CODE></P><P>This command directs TOCED to leave LOOP mode. All commandsentered in the LOOP will be ignored, and the LOOP will not beexecuted.<BR></P><H2>2.28. The 'NEXT' Command.</H2><P><CODE>NEXT<BR>N</CODE></P><P>This command directs TOCED to move to the next line in the currenttable (TOC, APT, CPT, EPT, or FPT) or element (ELT).<BR></P><H2>2.29. The 'OMIT' Command.</H2><P><CODE>OMIT<BR>OMI</CODE></P><P>This is the command used if the user does not want his changes tobe applied to the file on exit. The file will remain as it was beforeTOCED was called.<BR></P><H2>2.30. The 'ON' and 'OFF' Commands.</H2><P><CODE>OFF SPECIAL MODE<BR>ON SPECIAL MODE</CODE></P><P>This command is used to define some special modes within TOCED. ONturns the mode on, OFF turns it off. The special modes availableare:</P><P>BRIEF - Do not print lines for CHANGE, DELETE, FIND, LOCATE, andSAVE.</P><P>ECHO - Print all input commands before executing them. Useful forbatch executions.</P><P>LONG - Print as much information as possible. When this mode isON, the PRINT command becomes VERBOSE.</P><P>Also the LOCATE and FIND commands will locate data in the extendedinformation. NOTE: Using the LOCATE or FIND command on the MFD withLONG on can take a LONG time!</P><P>NUMBER - Precede each line printed out with its line number.</P><P>ROLLBK - Wait for unloaded file to roll back in. Only used by theTOC! command. Default is OFF (do not wait).</P><H2>2.31. The 'OUTPUT' Command.</H2><P><CODE>OUTPUT &#91;NUM1&#93;<BR>OUT &#91;NUM1&#93;<BR>O &#91;NUM1&#93;</CODE></P><P>This is the command used to print out NUM1 lines following thecurrent line. If no number is given, one (1) is assumed.</P><H2>2.32. The 'PRINT' Command.</H2><P><CODE>PRINT &#91;NUM1&#93;&#91;,NUM2&#93;<BR>P &#91;NUM1&#93;&#91;,NUM2&#93;<BR>PRINT!<BR>P!<BR>PRINT+ &#91;NUM1&#93;<BR>P+ &#91;NUM1&#93;</CODE></P><P>This is the command used to print lines of the current table (orthe current element if in ELT mode). If two numbers are given, linesNUM1 thru NUM2 will be printed. If one number is given, the presentline and NUM1-1 following lines will be printed. If no numbers aregiven, one (1) is assumed, and only the current line is printed.PRINT! and P! cause the entire table of contents (or element if TOCEDis in ELT mode) to be printed.</P><P>PRINT+ and P+ work exactly like the 'OUTPUT' command.<BR></P><H2>2.33. The 'QTO' Command.</H2><P><CODE>QTO NEWQUE &#91;NUM1&#93;&#91;,NUM2&#93;</CODE></P><P>This command will mode print/punch queue entries from the currentqueue to the NEWQUE queue. If two numbers are given, given, linesNUM1 thru NUM2 will be moved. If one number is given, the presentline and NUM1-1 following lines will be moved. If no numbers aregiven, one (1) is assumed, and only the current line is moved.</P><P>This may only be done while in QUE mode. If the user does not havethe SSLASH privilege, only queue entries made by the user may berequeued.</P><H2>2.34. The 'QUEUE' Command.</H2><P><CODE>QUEUE &#91;QUENAME&#93;<BR>QUE &#91;QUENAME&#93;<BR>Q &#91;QUENAME&#93;<BR>QUEUE! &#91;QUENAME&#93;<BR>QUE! &#91;QUENAME&#93;<BR>Q! &#91;QUENAME&#93;<BR></CODE><BR>This is the command used to examine print queues on the system Onceyou have retrieved a list of queued print files, subsequent QUEUEcommands with no QUENAME specified will switch back to the last listof queued files.</P><P>Use the QUEUE! command to re-retrieve a list of all the queuedprint files on the system.<BR></P><H2>2.35. The 'RE' Command.</H2><P><CODE>RE&#91;,OPTIONS&#93;&#91;TIP-FILE-NUMBER&#93;&#91;,TIP-FILE-NAME&#93;</CODE></P><P>NOTE!!! The 'RE' command supports the Unisys TFUR syntax. However,some TOCED-unique extensions to the capabilities of this command havebeen added. Review the syntax carefully!</P><P>This command will delete a TIP temporary, permanent, or TIP/DMSfile which has been previously reserved (see 'RV') or assigned (see'AS'). If TIP-FILE-NUMBER is present, then the specified TIP filewill be released. If the 'M' option is present, then TIP-FILE-NUMBERis assumed to be a DMS area number. If TIP-FILE-NUMBER is omitted,then the current file will be deleted.</P><P>TIP-FILE-NAME, if present, must match the TIP file name given onthe 'RV' command. If omitted, the file will be released using the TIPfile name from the TIP file directory entry. This is useful toprevent inadvertent deletion of the wrong file, especially in a batchexecution.</P><P>The 'K' option indicates that processing should continue even ifan error occurs during a batch execution.</P><P>The 'R' option indicates that mass-storage granules will bereleased back to the initial reserve of the Exec file. The 'RE'command may only be issued in TFUR mode.<BR></P><H2>2.36. The 'REG' Command.</H2><P><CODE>REG&#91;,K&#93;&#91;QUALIFIER*&#93;FILENAME&#91;/READKEY&#93;&#91;/WRITEKEY&#93;,FILE-TYPE</CODE></P><P>This command will register a cataloged Executive file with TIP. Ifno QUALIFIER is given, TIP$* is assumed. FILE-TYPE may be FIX forfixed, SCR for scratch, or TMP for temporary. Keys that are presenton the REG command must be present on all subsequent TREG commandsthat specify the file name as a parameter. The 'K' option indicatesthat processing should continue even if an error occurs during abatch execution. The 'REG' command may only be issued in TREGmode.<BR></P><H2>2.37. The 'RV' Command.</H2><P><CODE>RV&#91;,OPTIONS&#93;TIP-FILE-NUMBER,NUMBER-OF-RECORDS,RECORD-LENGTH,<BR>&#91;FCSS-FILENAME&#93;,EXEC-FILENAME-LEG1&#91;/EXEC-FILENAME-LEG2&#93;,<BR>&#91;PLACEMENT-LEG1&#93;&#91;/PLACEMENT-LEG2&#93;,<BR>&#91;STATUS-LEG1&#93;&#91;/STATUS-LEG2&#93;,&#91;FALLBACK-INDICATORS&#93;,<BR>&#91;AUDIT #&#93;</CODE></P><P>or</P><P><CODE>RV,T&#91;OPTIONS&#93;TRAINING-FILE-NUMBER,LIVE-FILE-NUMBER,<BR>&#91;FCSS-FILENAME&#93;,EXEC-FILENAME-LEG1&#91;/EXEC-FILENAME-LEG2&#93;,<BR>&#91;PLACEMENT-LEG1&#93;&#91;/PLACEMENT-LEG2&#93;,<BR>&#91;STATUS-LEG1&#93;&#91;/STATUS-LEG2&#93;,&#91;FALLBACK-INDICATORS&#93;,<BR>&#91;AUDIT #&#93;</CODE></P><P>This command will define a TIP training, permanent, or TIP/DMSfile. Format 1 is for permanent and TIP/DMS files. Format 2 is forTIP training files. If the 'M' option is present, thenTIP-FILE-NUMBER is assumed to be a DMS area number.</P><P>The 'D' option indicates that the file being defined is a duplexfile. If the 'D' option is not present, LEG2 fields are ignored, anda simplex file will be created.</P><P>The 'K' option indicates that processing should continue even ifan error occurs during a batch execution. The 'RV' command may onlybe issued in TFUR mode.</P><H2>2.38. The 'SAVE' Command.</H2><P><CODE>SAVE &#91;NUM1&#93;&#91;,NUM2&#93;<BR>S &#91;NUM1&#93;&#91;,NUM2&#93;<BR>S+ &#91;NUM1&#93;&#91;,NUM2&#93;</CODE></P><P>This is the command used to un-DELETE an element or elements. Ifno numbers are given, the current line will be un-DELETEd. If onenumber is given, the current line and NUM1-1 following lines will beun-DELETEd. If two numbers are given, lines NUM1 thru NUM2 will beun-DELETEd. If the form 'SAVE' or 'S' is used, the current line willbe the last un-DELETEd line. If the form 'S+' is used, the currentline will be the line after the last un-DELETEd line.</P><H2>2.39. The 'SCALE' Command.</H2><P><CODE>SCALE<BR>SCA</CODE></P><P>This is the command to display a sixty-four column scale. This isuseful in setting the column limits for the CHANGE, FIND, and LOCATEcommands. See the 'LIMIT' command for further discussion on commandlimits.<BR></P><H2>2.40. The 'SHOW' Command.</H2><P><CODE>SHOW &#91;NUM1&#93;&#91;,NUM2&#93;<BR>SHO &#91;NUM1&#93;&#91;,NUM2&#93;</CODE></P><P>This command displays information about a file similar to thatgiven by the @PRT,F command. SHOW can only be used in MFD mode. Iftwo numbers are given, files NUM1 thru NUM2 will be shown. If onenumber is given, the present file and NUM1-1 following files will beshown. If no numbers are given, one (1) is assumed and only thecurrent file is shown.</P><H2>2.41. The 'SITE' Command.</H2><P><CODE>SITE &#91;NUM1&#93;&#91;,NUM2&#93; &#91;PRID&#93;<BR>SIT &#91;NUM1&#93;&#91;,NUM2&#93; &#91;PRID&#93;</CODE></P><P>This command will send a copy of whatever is being examined byTOCED (either a table or a symbolic element) to the onsite printer,or to printer PRID if an alternate printer ID is supplied. If nonumbers are given on the command, the entire table (or element) willbe printed. If one number is specified, the current line and NUM1-1following lines will be printed. If two numbers are given, lines NUM1thru NUM2 inclusive will be printed. The line pointer will be left atthe last line printed, or at the top line if the end-of-file isencountered.</P><H2>2.42. The 'SPLIT' Command.</H2><P>S<CODE>PLIT FILE.<BR>SPLIT FILE.ELT<BR>SPLIT FILE. NUM1,NUM2<BR>SPLIT FILE.ELT NUM1,NUM2<BR>SPLIT! FILE.<BR>SPLIT! FILE.ELT</CODE></P><P>This command will copy whatever is being examined by TOCED (eithera table or a symbolic element) to a SDF data file (if the form 'SPLITFILE.' is used) or to a symbolic element (if the form 'SPLITFILE.ELT' is used). If line numbers are given, then lines NUM1 thruNUM2 will be copied. If no line numbers are specified on the SPLITcommand, then all lines preceding the current line will be copied.Obviously, this form cannot be used at the TOP, nor at line one. Theform 'SPLIT!' will copy the entire table (or symbolic element if inELT mode).</P><P>**NOTE** The FILE. or FILE.ELT that TOCED writes will be ASCII,even if the element being SPLIT from is FIELDATA.</P><P>Due to the fact that TOCED will overwrite the table of contents ofthe working file when an 'EXIT' is done, SPLIT may not be done to thecurrent working file (the file specified on the @TOCED processorcall).</P><P>Note also that SPLIT, unlike most other commands, does NOT supportthe 'SPLIT FILE.ELT NUM1' format. This was done to remain consistentwith @ED, after which TOCED is modeled.<BR></P><H2>2.43. The 'STATUS' Command.</H2><P><CODE>STATUS<BR>STA</CODE></P><P>This is the command to display the settings on the various TOCEDvariables. This command will display the current TCHAR and TCCHARcharacters, the column limits for the CHANGE, FIND, and LOCATEcommands, and the status of the BRIEF, ECHO, NUMBER, and ROLLBKmodes.<BR></P><H2>2.44. The 'SYSTEM' Command.</H2><P><CODE>SYSTEM<BR>SYS</CODE></P><P>This command displays one line of information about the systemthat TOCED is executing on.<BR></P><H2>2.45. The 'TCCHAR' Command.</H2><P><CODE>TCCHAR &#91;CHAR&#93;<BR>TCCHAR SP<BR>TCCHAR</CODE></P><P>This command sets the transparent character for the CHANGEcommand. The transparent character is one which will match anycharacter. For example, the commands:</P><P><CODE>TCCHAR *</CODE></P><P>C /*A*/XYZ/ will change any three characters of the form&#91;CHAR&#93;A&#91;CHAR&#93; to XYZ. To set the transparentcharacter to a SPACE, the second form,</P><P>TCCHAR SP is used. To disable this feature, the last form,</P><P>TCCHAR with no arguments is used. This feature is initiallydisabled.</P><H2>2.46. The 'TCHAR' Command.</H2><P><CODE>TCHAR &#91;CHAR&#93;<BR>TCHAR SP<BR>TCHAR</CODE></P><P>This command sets the transparent character for the FIND andLOCATE commands. It operates like the TCCHAR command described above.This is initially set to SPACE.</P><H2>2.47. The 'TFUR' Command.</H2><P><CODE>TF<BR>TFU<BR>TFUR</CODE></P><P>This command switches TOCED into 'TFUR' mode. In this mode, TOCEDwill operate on the TIP file directory. All TOCED inquiry and displaycommands ('LOCATE', 'FIND', 'PRINT', etc.) will work. In addition,TFUR update commands ('AS', 'CG', 'COPY', 'RE', and 'RV') will workin this mode.</P><P>Although TOCED emulates the commands used by the Unisys TFURutility, note that there are SIGNIFICANT differences in the way thesefunctions are performed. The Unisys TFUR utility is a batch-orientedprogram, while TOCED is conversational. TFUR pre-validates the entirecommand stream for an execution, and terminates if a syntax error isencountered. TOCED performs each command before validating the nextcommand. Thus, a set of commands which would have no effect ifentered into TFUR, may have entirely different results if enteredinto TOCED.</P><P>For this reason (if no others) it is advisable to thoroughly testany batch maintenance of the TIP directories with TOCED.</P><H2>2.48. The 'TIME' Command.</H2><P><CODE>TIME<BR>TIM</CODE></P><P>This command prints out the date, time, and the file currentlybeing edited. It is useful to clock watchers, and people with badmemories.<BR></P><H2>2.49. The 'TOC' Command.</H2><P><CODE>TOC &#91;NUM1&#93;<BR>TOC! &#91;READKEY&#91;/WRITEKEY&#93;&#93;</CODE></P><P>This command switches TOCED back into 'TOC' mode from 'APT','CPT', 'ELT', 'EPT', 'FPT' or 'MFD' mode. TOC mode is the normaloperating mode of TOCED. If no number is given on the TOC command,TOC mode will be entered on the current element. If an element numberis given, TOC mode will be entered on the element on line NUM1.</P><P>The 'TOC!' form is only meaningful from MFD mode. TOC! will causeTOCED to close the current file (applying any updates which have beenmade), and open the file currently pointed to in the Master FileDirectory checkpoint file. If the file has read- and/or write-keys,they may be given on the TOC! command. If the file is rolled-out,TOCED will reject the TOC! command, unless ROLLBK (see the ON and OFFcommands) is on. See also the 'APT', 'CPT', 'ELT', 'EPT', 'FPT' and'MFD' commands.</P><H2>2.50. The 'TOP' Command.</H2><P><CODE>TOP<BR>T</CODE></P><P>This command directs TOCED to move to the top of the current table(or element if in ELT mode). This will position the line pointerbefore the first line.</P><H2>2.51. The 'TPASG' Command.</H2><P><CODE>TPASG&#91;,K&#93;&#91;QUALIFIER*&#93;FILENAME&#91;/READKEY&#93;&#91;/WRITEKEY&#93;</CODE></P><P>This command will assign an executive file back to TIP that waspreviously registered and freed via TPFREE. If the QUALIFIER ismissing, the default value of TIP$* is assumed. The 'K' optionindicates that processing should continue even if an error occursduring a batch execution. The 'TPASG' command may only be issued inTREG mode.<BR></P><H2>2.52. The 'TPFREE' Command.</H2><P><CODE>TPFREE&#91;,K&#93;&#91;QUALIFIER*&#93;FILENAME&#91;/READKEY&#93;&#91;/WRITEKEY&#93;</CODE></P><P>This command will free an Executive file from TIP. All TIP fileinformation is retained for the next TPFREE. If the QUALIFIER ismissing, the default value of TIP$* is assumed. The 'K' optionindicates that processing should continue even if an error occursduring a batch execution. The 'TPFREE' command may only be issued inTREG mode.</P><H2>2.53. The 'TREG' Command.</H2><P><CODE>TR<BR>TRE<BR>TREG</CODE></P><P>This command switches TOCED into 'TREG' mode. In this mode, TOCEDwill operate on the TIP EXEC file directory. All TOCED inquiry anddisplay commands ('LOCATE', 'FIND', 'PRINT', 'SITE', etc.) will work.In addition, TREG update commands ('REG', 'DREG', 'TPASG', 'TPFREE','UPDIR') will work in this mode.</P><H2>2.54. The 'UP' Command</H2><P><CODE>UP</CODE></P><P>This command will clear read-only mode and allow updates to thetable of contents. This is used if TOCED was entered in in read-onlymode.</P><H2>2.55. The 'UPDIR' Command.</H2><P><CODE>UPDIR&#91;,OPTIONS&#93;&#91;QUALIFIER*&#93;FILENAME&#91;/READKEY&#93;&#91;/WRITEKEY&#93;</CODE></P><P>This command will update the directory of a file located on aremovable pack when a user causes the Device Area Descriptor (DAD)structure of a TIP file to be modified. You can also use UPDIR toupdate directory information about the treatment of file segmentslost because of lost disk units or information that inhibits DADtable paging. If no OPTIONS are present, UPDIR will only update thedirectory items of a file located on a removable disk pack. Ifpresent, OPTIONS may be:</P><P>C - Cause unallocated DADs created by file recovery to be createdwith normal status. Applies only to integrated recovery. See the 'D'option.</P><P>D - Cause unallocated DADs created by file recovery to be markedDNR/DNW (do-not-read/do-not-write). Applies only to integratedrecovery. See the 'C' option.</P><P>K - Do not terminate even if errors are encountered in a batchexecution.</P><P>N - Inhibit DAD table paging.</P><P>P - Permit DAD table paging. The 'UPDIR' command may only beissued in TREG mode.</P><H2>2.56. The 'VERBOSE' Command.</H2><P><CODE>VERBOS &#91;NUM1&#93;&#91;,NUM2&#93;<BR>VER &#91;NUM1&#93;&#91;,NUM2&#93;<BR>V &#91;NUM1&#93;&#91;,NUM2&#93;<BR>V!<BR>V+ &#91;NUM1&#93;</CODE></P><P>This command works exactly like the PRINT command, except thatLONG mode is assumed. That is, if TOCED is displaying the MFD or aprint queue, @PRT,F-style displays will be produced instead of thenormal one-line entries.</P><H2>2.57. The 'XCTS' Command.</H2><P><CODE>XCTS<BR>XCT</CODE></P><P>This command may be used to take a normal exit from the TOCEDprocessor. It operates exactly like the EXIT command, except that theCTS reload flag is cleared.</P><H2>2.58. The '@@X C' Command</H2><P><CODE>@@X C</CODE></P><P>This command will interrupt the current TOCED command, and solicitthe next command.</P><H2>2.59. The Line Positioning Commands.</H2><P><CODE>NUMBER<BR>+NUMBER<BR>-NUMBER</CODE></P><P>These commands are used to position TOCED at a desired line in thetable or element. The first form directs TOCED to line 'NUMBER'. Thesecond form directs TOCED to move to the position 'CURRENT LINE PLUSNUMBER'. The third form directs TOCED to move to the position'CURRENT LINE MINUS NUMBER'. If no number is specified in the secondand third forms, one (1) is assumed.</P><H1>3. Installation Notes</H1><P>The TIP modes (TFUR and TREG) are controlled by a securitysubroutine. This subroutine should be supplied by your siteadministrator. The TIP update commands (REG, RV, etc.) are usuallyrestricted to certain user I.D.s, account numbers, etc.</P><P>The SECURITY subroutine should return with 0 in A0 if the user isNOT allowed to manipulate the TIP directories. Any positive, non-zerovalue in A0 will allow the user to update the TIP directories. TheSECURITY subroutine should return ALL other registers unchanged. Theshell of the SECURITY subroutine should be:</P><P><CODE>SECURITY*</CODE></P><P>&#91;save registers that are used by this code&#93;<BR>&#91;validate this user for TIP updates&#93;</P><P><CODE>LA,U A0,0 . DENY TIP UPDATES</CODE></P><P>or</P><P><CODE>LA,U A0,1 . ALLOW USER TO UPDATE TIP</CODE></P><P>&#91;restore any modified registers&#93;<BR><CODE><BR>J 0,X11 . RETURN</CODE></P><P>An example of the SECURITY subroutine based on the user's accountnumber is:</P><P><CODE>.**********************************************************************<BR>. * *<BR>. * This routine determines whether the user is allowed to *<BR>. * access the TREG and TFUR update functions (REG, DREG, *<BR>. * RV, RE, etc.) in TOCED. The DELETE function in QUE mode *<BR>. * is also controlled by this routine. *<BR>. * *<BR>.**********************************************************************<BR>.<BR>.</CODE></P><P><CODE>$INCLUDE 'MAXR$/' . STANDARD REGISTER DEFINITIONS<BR>$INCLUDE 'TOCED$/' . TOCED PROC $(1) . SECURITY* .<BR>LA,U A0,ACCT . GET ACCT ADDRESS<BR>LA A1,(2,023) . GET ACCT PCT ADDRESS<BR>ER PCT$ . DO THE PCT$<BR>LXM,U A0,AUTHLST . GET AUTHORIZED ACCOUNT LIST<BR>LXI,U A0,2 . SET INCREMENT<BR>DL A1,ACCT . GET ACCOUNT IN A1, A2 AUTHLOOP .<BR>TNZ 0,A0 . END OF THE LIST ?<BR>J NOTAUTH . YES - NOT ALLOWED<BR>DTE A1,0,*A0 . NO. IS THIS A MATCH ?<BR>J AUTHLOOP . NO. KEEP LOOKING<BR>LA,U A0,1 . YES - AUTHORIZE THEM<BR>J 0,X11 . RETURN NOTAUTH .<BR>LA,U A0,0 . NOT ALLOWED<BR>J 0,X11 . RETURN $(0) . AUTHLST .<BR>'OPER ' . OPER ACCOUNT IS PRIVILEGED<BR>'SYSSUP ' . SYSSUP ACCOUNT IS PRIVILEGED<BR>+ 0 .<BR>ACCT $RES 2 .<BR>$END . </CODE></P></BODY></HTML>