@CAT,P    1067-006-061.,///10000
@ASG,T    TEMP.,///10000
@ELT,OI TEMP.1067-006-061,,,145041053441,000
)@@G@@**PF**@@@['3@@@@@@@@@@@[@GG@@@]FE@@@@@@@J@@U^@@@]F^@@@@@@@@@@@@@@@@@@@@@AA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@P@@4=@@@]F^A^K@@,@@@@@@@@_@@@@W@@@@@@@@@@@@@@@@@@@AB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@@@@@@@@@@@@@@@@@@@@@@Z@@@@@@AC
)@@G@@@@@@@@@@@@@@@@@@@A@@]@@@@@@@@@@@@@@@@@@@@@@@?@@@@@@@@@@@@@@ @@@@@D@@@@@@AD
)@@G@@@@@@@P@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AE
)@@G@@@@@@@@@@@@@^@@@@@O@@>@@@@@@@@@@@@@@@@@@@@@@@Y@@#@@@@@@@@@@@@@@N@@@@@+@@@AF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@<@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@X@@T@@@AG
)@@G@@@@@@@@@@@@@K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AH
)@@G@@@@@@@E@@@@@@@@@@@$@@@@@@@@@@@@@@@@@L@@@@@S@@@@@Q@@@@@@@@@@@@@@@@@@@@@@@@AI
)@@G@@@@@@@B@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@C@@H@@@@@@@@@@@@@@RAJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@!@@@@@@@@M@@@@@@@@@AK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@@@@@@@I@@@@@@@@@@@@@@U@@@@@@@@@@@@AM
)@@G@@@@@@@G@@@@@@@@@@@@@@:@@@@@*@@F@@V@@@@@@@@@@@@@@J@@@@@@@@@@@@@@@@@@@@E@[@AN
)@@G@@E$CHAR      @@@@@@@@[@@6            @ @@@[N@@@]K@@@@W@P 8DFGMATCH       AO
)@@G@@@@@@@@@@[@@9            @ @[@]N@@@@$@@@@YK]&VDIGDOWNPCF     @@@@@%@@[@@2AP
)@@G@@            @ @@@[N@@@]U@@@@Y7C)NDRGDOWNTOC     @@@@@@@@[@@4            AQ
)@@G@@@ @@@[N@@@#Y@@@@-LJ,!]EHDOWNTCF     @@@@@@@@[@@3            @ @A@ N@@@#PAR
)@@G@@@@@@=\IQ^#AKCHECK       @@@@@@@@[@@\            @ @[@]N@@@]D@@@@*^DLP#TLAS
)@@G@@ERROR       @@@@@@@@[@@5            @ @D@ N@@@[5@@@@%HDW)^]LGET         AT
)@@G@@@@@@@@@@[@@7            @ @#@^N@@@@8@@@@?]E0%GELPAGED-IO    @@@@@@@@[@@'AU
)@@G@@            @ @#@^N@@@#C@@@@?'C?3]UMCOMPARE     @@@@@@@@[@@0            AV
)@@G@@@ @@@[N@@@@9@@@@0]I!)CZMDOWN        @@@@@@@@[@@1            @ @D@ N@@@ HAW
)@@G@@@@@@0;EI$D#MISDFI       @@@@@@@@[@@8            @ @A@ N@@@^=@@@@6CG:XD#MAX
)@@G@@SCAN        @@@@@@@@[@@;            @ @#@^N@@@ )@@@@'?HS DCMUTILITY     AY
)@@G@@@@@@@@@@[@@"            @ @ @ N@@@[N@@@[@GHT[DCMSFIASG      @@@@@@@@[@@/AZ
)@@G@@            @ @@@[N@@@#]@@@[[ZG%SDDMTBTREE      @@@@@@@@[@@.            BA
)@@G@@@ @ @ N@@@[7@@@[^-G@4DIMEDIT$S      @@@@@@@@ @@@UOM         @@@[AT@@]@@[BB
)@@G@@@@@[ASKV$EWLEDIT$ASC    @@@@@@@@ @@@UOM         @@@[AY@@[@@#@@@[AVKO?EWLBC
)@@G@@EDIT$AEDIT  @@@@@@@@ @@@UOM         @@@[A<@@]@@^@@@[AZKF>EWLEDIT$PRT    BD
)@@G@@@@@@@@@@ @@@UOM         @@@[A$@@]@@]@@@[A>KV-EWLSDFO        @@@@@@@@ @@@BE
)@@G@@UOM         @@@[A\@@]@@A@@@[A(JKVEULEDIT$UOM    @@@@@@@@ @@@UOM         BF
)@@G@@@@@[A6@@]@@ @@@[A1K)7EWLEDIT$ALF    @@@@@@@@ @@@UOM         @@@[A.@@#@@ BG
)@@G@@@@@[A8KK\EWLEDIT$T      @@@@@@@@ @@@UOM         @@@[BB@@#@@B@@@[B@KWQEWLBH
)@@G@@INFOR$      @@@@@@@@ @@@UOM         @@@[BR@@]@@H@@@[BEJJZEULEDIT$INT    BI
)@@G@@@@@@@@@@ @@@UOM         @@@[BZ@@#@@A@@@[BTKR9EWLCERU$       @@@@@W@@ @@@BJ
)@@G@@UOM         @@@[B+@@%@@@@@@[B+CZ=#XMERU$        @@@@@=@@ @@@UOM         BK
)@@G@@@@@[CG@@,@@@@@@[CGG#:^EMEDIT$       @@@@@(@@ @@@UOM         @@@[C"@@]@@^BL
)@@G@@@@@[C'KD&EWLMAP         @@@@@@@@[@@@            @ @@@[A@@@@[@@@[D@@30DGGBM
)@@G@@STRUC$      @@@@@@@@B@@,UOM         @@@@@@O@@@ Y@@@[D[JQ8EWLDOWNDOC     BN
)@@G@@@@@@@@@@B@@-            @@@@@@5@@@#O@@@[IZI#@DKMDOWNDOC     @@@@@@@K[@@@BO
)@@G@@DOC         @ @@@[B@@@]8@@@[L3ICEDKMPRINTDOC    @@@@[@@@[@@@DOC         BP
)@@G@@@ @@@[[@@@@[@@@[O:C!W^QLOUT$$$      @@@@@@@@[@@@            @ @@@[[@@@@IBQ
)@@G@@@@@[O?I);DKMRUN         @@@@@@@@[@@@            @ @@@[[@@@@E@@@[O'I+EDKMBR
)@@G@@AXR$        @@@@@@@@]@@@UOM         @ @@@[@@@@@W@@@[P^I+2DKMDOWNDEF     BS
)@@G@@@@@@@@@K]@@@            @ @@@[@@@@@-@@@[P)I+2DKMEDIT$P      @@@@@@@@]@@@BT
)@@G@@UOM         @ @@@[@@@@^I@@@[Q[I+5DKMED$PROCS    @@@@@@@K]@@@            BU
)@@G@@@ @@@[@@@@]X@@@[UJI+7DKMFIDEF$      @@@@@@@@]@@@            @ @@@[@@@@@;BV
)@@G@@@@@[W?I+9DKMM$TIME      @@@@@@@@]@@@UOM         @ @@@[@@@@@%@@@[X$I+'DKMBW
)@@G@@PROCS-FIASG @@@@@@@@]@@@UOM         @ @@@[@@@@@0@@@[YLI+;DKMPROC$       BX
)@@G@@@@@@@@@@]@@@UOM         @ @@@[@@@@^K@@@[Z[I+"DKMSAXR$       @@@@@@@@]@@@BY
)@@G@@UOM         @ @@@[@@@@@(@@@[<LI+_DKMSTRUC$      @@@@@@@@]@@@UOM         BZ
)@@G@@@ @@@[@@@@G,@@@[<'I<CDKMCHECK       @@@@@@@@ @@@            @@@[09@@]@@LCA
)@@G@@@@@[0*I<CDKMCOMPARE     @@@@@@@@ @@@            @@@[1[@@[@@A@@@[0;I<%DKMCB
)@@G@@DOWN        @@@@@@@@ @@_            @@@[1/@@E@@'@@@[1]I<5DKMDOWNPCF     CC
)@@G@@@@@@@@@@ @@@            @@@[2S@@#@@M@@@[2AI=8DKMDOWNTCF     @@@@@@@@ @@@CD
)@@G@@            @@@[26@@#@@V@@@[2VI>MDKMDOWNTOC     @@@@@@@@ @@@            CE
)@@G@@@@@[3P@@^@@W@@@[29I>2DKMERROR       @@@@@@@@ @@@            @@@[4^@@]@@:CF
)@@G@@@@@[3TI&TDKME$CHAR      @@@@@@@@ @@@            @@@[4P@@]@@J@@@[4AI&;DKMCG
)@@G@@GET         @@@@@@@@ @@@            @@@[4V@@[@@^@@@[4RI$FDKMISDFI       CH
)@@G@@@@@@@@@@ @@@            @@@[4?@@]@@K@@@[4WI$UDKMMATCH       @@@@@@@@ @@@CI
)@@G@@            @@@[41@@[@@#@@@[4,I$YDKMPAGED-IO    @@@@@@@@ @@@            CJ
)@@G@@@@@[47@@[@@ @@@[42I$?DKMSCAN        @@@@@@@@ @@@            @@@[5Y@@A@@&CK
)@@G@@@@@[48I$\DKMSFIASG      @@@@@@@@ @@@            @@@[57@@]@@N@@@[5=I*6DKMCL
)@@G@@TBTREE      @@@@@@@@ @@@            @@@[6]@@]@@D@@@[59I(ODKMUTILITY     CM
)@@G@@@@@@@@@@ @@@            @@@[6J@@#@@F@@@[6^I(-DKMDOWN        @@@@@@@@A@@@CN
)@@G@@            )@@]@[@@@@^K@@@[6MI(5DKMCHECK$$SUM$$@@@@@@@@B@@@            CO
)@@G@@@ @@@[@@@@@L@@@['+G<2DXMGET         @@@@@@@@ @@@            @@@]J_@@[@@^CP
)@@G@@@@@]J;I$FDKMISDFI       @@@@@@@@ @@@            @@@]KK@@]@@K@@@]K@I$UDKMCQ
)@@G@@MATCH       @@@@@@@@ @@@            @@@]KP@@[@@#@@@]KMI$YDKMPAGED-IO    CR
)@@G@@@@@@@@@@ @@@            @@@]KV@@[@@ @@@]KQI$?DKMSCAN        @@@@@@@@ @@@CS
)@@G@@            @@@]L]@@A@@&@@@]KWI$\DKMSFIASG      @@@@@@@@ @@@            CT
)@@G@@@@@]LV@@]@@N@@@]LCI*6DKMTBTREE      @@@@@@@@ @@@            @@@]L&@@]@@DCU
)@@G@@@@@]LXI(ODKMUTILITY     @@@@@@@@ @@@            @@@]L3@@#@@F@@@]L*I(-DKMCV
)@@G@@DOWN        @@@@@@@@A@@@            )@@]@[@@@@^K@@@]L6I(5DKMCOMPARE     CW
)@@G@@@@@@@@@@ @@@            @@@]MJ@@[@@A@@@]MDIGCDKMDOWN        @@@@@@@@ @@@CX
)@@G@@            @@@]NE@@E@@'@@@]MKIGTDKMDOWNPCF     @@@@@@@@ @@@            CY
)@@G@@@@@]N&@@#@@M@@@]NOIHSDKMDOWNTCF     @@@@@@@@ @@@            @@@]O^@@#@@VCZ
)@@G@@@@@]N(IH3DKMDOWNTOC     @@@@@@@@ @@@            @@@]O<@@^@@W@@@]OBII=DKMDA
)@@G@@ERROR       @@@@@@@@ @@@            @@@]PM@@]@@:@@@]O$IJ&DKME$CHAR      DB
)@@G@@@@@@@@@@ @@@            @@@]P<@@]@@J@@@]POIJ;DKMGET         @@@@@@@@ @@@DC
)@@G@@            @@@]P(@@[@@^@@@]P>IK DKMISDFI       @@@@@@@@ @@@            DD
)@@G@@@@@]P'@@]@@K@@@]P%IKHDKMMATCH       @@@@@@@@ @@@            @@@]P_@@[@@#DE
)@@G@@@@@]P/IKMDKMPAGED-IO    @@@@@@@@ @@@            @@@]Q @@[@@ @@@]Q@IKTDKMDF
)@@G@@SCAN        @@@@@@@@ @@@            @@@]Q?@@A@@&@@@]QAIKXDKMSFIASG      DG
)@@G@@@@@@@@@@ @@@            @@@]R @@]@@N@@@]Q2ILXDKMTBTREE      @@@@@@@@ @@@DH
)@@G@@            @@@]RK@@]@@D@@@]RBIL;DKMUTILITY     @@@@@@@@ @@@            DI
)@@G@@@@@]RX@@#@@F@@@]RMIMBDKMDOWN        @@@@@@@@A@@@            )@@]@[@@@@^KDJ
)@@G@@@@@]R)IMODKM LUCIA       1    @ @[@@  OE     AUSTRIA         1    @ @[@@DK
)@@G@@  OZ     DENMARK         1    @ @[@@  PJ5    SINT MAARTEN    1    @ @[@@DL
)@@G@@  VP2K   ST. KITTS       1    @ @[@@  9Y     TRINIDAD        1    @@__@@DM
)@@G@@@@@[@@@Q@[@@     CQ WW PHONE - N3GB - 40                                DN
)@@G@@                                                       PAGE  3 OF  3    DO
)@@G@@@@@[@@@@@[@@@[@[@@      (H@@@@    ALPHABETICAL LISTING OF LOG           DP
)@@G@@                      PAGE  1 OF  1 @@@[@@@@@[@@@@@[@@@#@[@@            DQ
)@@G@@CT2AK @#@[@@            C6A/W4@#@[@@            DJ3JD @#@[@@            DR
)@@G@@DL0PG @#@[@@            DL0WV @#@[@@            EA1PT @#@[@@            DS
)@@G@@F3TV  @#@[@@            F6DFH @#@[@@            GI3PDN@#@[@@            DT
)@@G@@GW6GW @#@[@@            HH2T  @#@[@@            HI8XWP@#@[@@            DU
)@@G@@IT9SKO@#@[@@            IZ3MAU@#@[@@            J6LGL @#@[@@            DV
)@@G@@KL7GKY@#@[@@            KP2A  @#@[@@            OE5CWL@#@[@@            DW
)@@G@@OZ5KF @#@[@@            PJ7/K1@#@[@@            VE1DXA@#@[@@            DX
)@@G@@VE2NL @#@[@@            VE3UOT@#@[@@            VP2KC @#@[@@            DY
)@@G@@W3AU  @#@[@@            9Y4FRC@@@[@@@I@[@@          40  METER TOTALS    DZ
)@@G@@  26 CONTACTS AND  0 DUPLICATES      21 COUNTRIES     @@__@@@@@[@@@Q@[@@EA
)@@G@@     CQ WW PHONE - N3GB - 20                                            EB
)@@G@@                                           PAGE  1 OF  4    @@@[@@@@@[@@EC
)@@G@@@A@[@@    CHRONOLOGICAL LISTING OF LOG    @@@[@@@@@[@@@K@[@@ PAGE  1    ED
)@@G@@                                PAGE  2                                 EE
)@@G@@   PAGE  3  @P@[@@ TIME  CALL    COUNTRY          POINTS      TIME  CALLEF
)@@G@@    COUNTRY          POINTS      TIME  CALL    COUNTRY          POINTS  EG
)@@G@@@@@[@@@E@[@@ 0304  IZ3MAU  ITALY          1             0351  UK2BAS    EH
)@@G@@(B@@@@                           0716  I5UA     @L@[@@       YU7GMN  YUGEI
)@@G@@OSLAVIA     2                   YW1AVO  VENEZUELA     24                EJ
)@@G@@   VE6ABC   @L@[@@       OH2BC   FINLAND        3                   SP9KEK
)@@G@@PT                                     UY5OO    @L@[@@       UK2PAP  LITEL
)@@G@@HUANIA      4                   OH0/OH  ALAND IS.     25                EM
)@@G@@   F9GL     @L@[@@       UK6FAA  GEORGIA        5                   6Y5/EN
)@@G@@N2  JAMAICA       26                   DJ6TK    @L@[@@       UK2BBB     EO
)@@G@@                                LZ1KPG  BULGARIA      27                EP
)@@G@@   SK6AW    @L@[@@       UA6HZ   RUSSIA         6                   UB5WEQ
)@@G@@E                                      I7WL     @O@[@@       I1KN       ER
)@@G@@                                DK8FS                                   ES
)@@G@@   G4ANT   ENGLAND       42   @L@[@@       I8KPV                        ET
)@@G@@        0408  UA1DZ                                      G4FRV    @L@[@@EU
)@@G@@       HA1ZD   HUNGARY        7             0445  VP2KT   ST. KITTS     EV
)@@G@@28                   LX/GM3   @@@[@@@L@[@@       HA6NW                  EW
)@@G@@                    ZS6ABO  SOUTH AFRICA  29                   LA2ZN    EX
)@@G@@@L@[@@       K3IU    USA            8                   EA6DX           EY
)@@G@@                           I3ON     @H@[@@       UB5MEB  UKRAINE        EZ
)@@G@@9                   UA6HAC                      (^@@@@               DM2FA
)@@G@@GYL   @L@[@@       UK5FBA                                     UB5MCS    FB
)@@G@@                                 F6CRS    @L@[@@       UK2GCF  LATVIA   FC
)@@G@@     10                   K5TM                                       UK4FD
)@@G@@WAR   @O@[@@       HA5NP                                      4X4VE   ISFE
)@@G@@RAEL        30                   OK1KPO  CZECHOSLOVAK  43   @L@[@@      FF
)@@G@@ EM6A    LIBERIA       11                   M1Y     SAN MARINO    31    FG
)@@G@@               UK2PCR   @L@[@@       SK4EA   SWEDEN        12           FH
)@@G@@        UB5LAW                                     DK3KD    @O@[@@      FI
)@@G@@ SM0AGD                                     VE7IG   CANADA        32    FJ
)@@G@@               OZ5KF   DENMARK       44   @O@[@@       UK8JAA  TADZHIK  FK
)@@G@@     13                   XE2MX   MEXICO        33                   HB7FL
)@@G@@H    SWITZERLAND   45   @@@[@@@O@[@@       VP5MRX  TURKS         14     FM
)@@G@@              LA5X                                       VP2VFK  BR VIRGFN
)@@G@@IN IS  46   @L@[@@       IS0VMB  SARDINIA      15                   OH1BFO
)@@G@@R                                      I1YK     @L@[@@       SP9PDF  POLFP
)@@G@@AND        16                   LU7M    ARGENTINA     34                FQ
)@@G@@   SP8KAF   @L@[@@       OH4TO                                      UW1AFR
)@@G@@E                                      I2BVG    @B@[@@       UR2QD   ESTFS
)@@G@@ONIA       17                               .   @B@@@[   ENDIF          FT
)@@G@@                    .   @E@@@[   L         A0,A5                    . PAFU
)@@G@@SS BACK CONDITION @B@@@[ ENDBEG                               .   @[@@@[FV
)@@G@@/.    @[@@@[ .    @[@@@[ .    @F@@@[ . THIS IS THE INSERTION ROUTINE.  IFW
)@@G@@T USES THE RESULTS OF SEARCH  @F@@@[ .      TO FIND THE PROPER PLACE IN FX
)@@G@@THE TREE AND TO DECIDE WHAT   @E@@@[ .      TO DO.  ON ENTRY A0 CONTAINSFY
)@@G@@ THE ADDR OF THE INFO TO@F@@@[ .      BE INSERTED, A1 CONTAINS THE LENGTFZ
)@@G@@H OF NODE FOR INSERTION.@F@@@[ .      NOTE: SEARCH EXPECTS AN INFO FIELDGA
)@@G@@ OF FOUR WORDS, HOWEVER,@F@@@[ .      BY PROVIDING THE LENGTH MORE INFORGB
)@@G@@MATION CAN BE APPENDED  @F@@@[ .      TO THE NODE AT NO EXTRA COST.  ON GC
)@@G@@EXIT A0 CONTAINS THE    @G@@@[ .      STATUS OF THE INSERTION, 0 - NORMAGD
)@@G@@L, 1 - NODE ALREADY EXISTS,   @ @@@[ .      -1 - STORAGE OVERFLOW.@[@@@[GE
)@@G@@ .    @[@@@[ .    @[@@@[ .    @[@@@[$(0). @D@@@[X         +0            GF
)@@G@@              . ADDR OF X     @F@@@[LENGTH    +0                        GG
)@@G@@  . SAVE AREA FOR NODE LENGTH @G@@@[CONDITION +0                        GH
)@@G@@  . SAVE AREA FOR SEARCH CONDITION  @[@@@[ .    @[@@@[ .    @[@@@[ .    GI
)@@G@@@[@@@[$(1). @]@@@[INSERT*.    @B@@@[ BEGIN SUBROUTINE                   GJ
)@@G@@  .   @G@@@[   S         A0,X                     . SAVE ADDR OF INFO TOGK
)@@G@@ INSERT     @F@@@[   S         A1,LENGTH                . SAVE AREA FOR GL
)@@G@@NODE LENGTH @E@@@[   CALL      SEARCH                   . SEE WHERE TO PGM
)@@G@@UT IT @G@@@[   IF A0,NEQ,1,,U THEN                . 1 MEANS NODE ALREADYGN
)@@G@@ EXISTS     @G@@@[      S         A0,CONDITION          . SAVE SEARCH COGO
)@@G@@NDITION FOR LATER @G@@@[      L         A0,LENGTH             . GET LENGGP
)@@G@@TH OF NODE TO INSERT    @E@@@[      A,U       A0,1                  . INGQ
)@@G@@C FOR LINK WORD   @D@@@[      CALL      AVAIL                 . GET SPACGR
)@@G@@E     @E@@@[      IF A0,IS,POS THEN               . MAYBE NO MORE SPACE GS
)@@G@@@F@@@[         L         P,Q                . OK - NEED ADDR OF PARENT  GT
)@@G@@@F@@@[         L         Q,A0               . Q IS NOW ADDR OF NEW NODE GU
)@@G@@@G@@@[         L         A0,CONDITION       . HAVE TO KNOW HOW TO SET LIGV
)@@G@@NKS   @B@@@[         CASENTRY A0                  .   @F@@@[         CASGW
)@@G@@E 0                       . THIS IS 1ST LINK OF TREE  @E@@@[            GX
)@@G@@S         Q,LLINK(P)      . PARENT IS ROOT NODE @G@@@[            SZ    GY
)@@G@@    RLINK(Q)        . ZERO LINKS - NO OTHER NODES     @B@@@[            GZ
)@@G@@SZ        LLINK(Q)        .   @D@@@[         CASE 2                     HA
)@@G@@  . LESS THAN     @E@@@[            L         A0,LLINK(P)     . PRESERVEHB
)@@G@@ LEFT THREAD@D@@@[            S         A0,LLINK(Q)     . INTO NEW NODE HC
)@@G@@@F@@@[            S         Q,LLINK(P)      . PARENT POINTS TO LSON     HD
)@@G@@@F@@@[            SN        P,RLINK(Q)      . RIGHT LINK IS NEG THREAD  HE
)@@G@@@D@@@[         CASE 3                       . GREATER THAN  @F@@@[      HF
)@@G@@      L         A0,RLINK(P)     . PRESERVE RIGHT THREADS    @B@@@[      HG
)@@G@@      S         A0,RLINK(Q)     .   @F@@@[            S         Q,RLINK(HH
)@@G@@P)      . PARENT POINTS TO RSON     @E@@@[            SN        P,LLINK(HI
)@@G@@Q)      . NEQ LEFT THREAD     @B@@@[         ENDCASE                    HJ
)@@G@@  .   @E@@@[         L         A0,X               . GET POINTER TO INFO HK
)@@G@@@G@@@[         A,U       Q,1                . INC POINTER TO NODE IN TREHL
)@@G@@E     @F@@@[         LXI,U     A0,1               . SET FOR BLOCK TRANSFHM
)@@G@@ER    @C@@@[         LXI,U     Q,1                . THIS TO @D@@@[      HN
)@@G@@   L         R1,LENGTH          . AMOUNT TO MOVE@C@@@[         BT       HO
)@@G@@ Q,0,*A0            . MOVE IT @E@@@[         SZ        A0               HP
)@@G@@  . NORMAL STATUS RETURN@B@@@[      ENDIF                           .   HQ
)@@G@@@B@@@[   ENDIF                              .   @F@@@[   A,U       P,1  HR
)@@G@@                    . BUMP PAST LINKS TO INFO   @B@@@[ ENDBEG           HS
)@@G@@                    .   @[@@@[/.    @[@@@[ .    @[@@@[ .    @E@@@[ . THIHT
)@@G@@S IS THE DELETION ROUTINE FOR A THREADED BINARY TREE. @E@@@[ .      ONLYHU
)@@G@@ RIGHT THREADS ARE PRESERVED, THEY ARE ALL THAT @D@@@[ .      ARE NECESSHV
)@@G@@ARY FOR A POSTORDER TRANSVERSAL.    @E@@@[ .      ON ENTRY A0 POINTS TO HW
)@@G@@INFO TO BE DELETED FROM TREE. @E@@@[ .      ON EXIT A0 RETURNS STATUS OFHX
)@@G@@ DELETE, 0 - NORMAL,    @A@@@[ .      -1 - NODE DID NOT EXIST.    @[@@@[HY
)@@G@@ .    @[@@@[ .    @[@@@[ .    @F@@@[          ON        DEL             HZ
)@@G@@  . MUST SPECIFY FOR DELETE   @[@@@[$(0). @D@@@[PQ        +0D           IA
)@@G@@              . SAVE AREA     @D@@@[RETURN    +0                        IB
)@@G@@  . RETURN FLAG   @[@@@[ .    @[@@@[ .    @[@@@[ .    @[@@@[$(1). @]@@@[IC
)@@G@@DELETE*.    @B@@@[ BEGIN SUBROUTINE                     .   @G@@@[   S  ID
)@@G@@       A0,X                     . SAVE ADDR OF INFO TO BE DELETED @E@@@[IE
)@@G@@   SZ        RETURN                   . INIT RETURN FLAG    @D@@@[   CALIF
)@@G@@L      SEARCH                   . FIND NODE     @D@@@[   DSL       A6,72IG
)@@G@@                    . CLEAR A6,A7   @#@@@[   CASENTRY A0    @F@@@[   CASIH
)@@G@@E 0,2,3                         . THESE ARE ALL NOFINDS     @E@@@[      II
)@@G@@LN,U      A0,1                  . RETURN A -1 STATUS  @D@@@[   CASE 1   IJ
)@@G@@                          . THIS IS A FIND@H@@@[      L         A0,CONDIIK
)@@G@@TION          . RETREIVE CONDITION OF FATHER NODE     @F@@@[      IF A0,IL
)@@G@@EQ,2,,U OR Q,EQ,ROOT,,U THEN . WHICH SUBTREE ARE WE   @D@@@[         L,UIM
)@@G@@       A0,0               . SET FOR TEST  @F@@@[         IF A0,GEQ,RLINKIN
)@@G@@(P) THEN      . WAS THERE A RIGHT THREAD  @F@@@[            L         A0IO
)@@G@@,LLINK(P)     . NO - RESET LEFT LINKS     @B@@@[            S         A0IP
)@@G@@,LLINK(Q)     .   @E@@@[            SZ        A0              . SET FOR IQ
)@@G@@TEST AGAIN  @H@@@[            IF Q,EQ,ROOT,,U AND A0,LT,LLINK(Q) THEN . IR
)@@G@@IS THERE A LEFT SUBTREE @E@@@[               L         T,LLINK(Q)   . YEIS
)@@G@@S - WALK DOWN IT  @F@@@[               REPEAT WHILE A0,LT,RLINK(T) . LOOIT
)@@G@@KING FOR THREAD   @D@@@[                  L         T,RLINK(T)  . NOT YEIU
)@@G@@T     @B@@@[               ENDREP                 .   @D@@@[            IV
)@@G@@   L         A0,RLINK(P)  . GET THREAD    @D@@@[               S        IW
)@@G@@ A0,RLINK(T)  . UPDATE THREAD @B@@@[            ENDIF                   IX
)@@G@@  .   @F@@@[            L         A0,P            . TRY TO RELEASE STORAIY
)@@G@@GE    @B@@@[            CALL      RELEASE         .   @E@@@[            IZ
)@@G@@S         X11,RETURN      . SET RETURN FLAG_    @B@@@[         ENDIF    JA
)@@G@@                    .   @B@@@[      ELSE                            .   JB
)@@G@@@D@@@[         L,U       A0,0               . SET FOR TEST  @D@@@[      JC
)@@G@@   IF A0,GEQ,RLINK(P) THEN      . IS IT A THREAD@G@@@[            IF A0,JD
)@@G@@LT,LLINK(P) THEN    . YES - IS THERE A LEFT SUBTREE   @E@@@[            JE
)@@G@@   L         A0,LLINK(P)  . YES - WALK DOWN IT  @F@@@[               S  JF
)@@G@@       A0,RLINK(Q)  . BUT FIRST DELETE NODE     @E@@@[               L  JG
)@@G@@       T,LLINK(P)   . WALK DOWN IT NOW    @D@@@[               SZ       JH
)@@G@@ A0           . SET FOR TEST  @F@@@[               REPEAT WHILE A0,LT,RLJI
)@@G@@INK(T) . LOOK FOR RIGHT THREAD@D@@@[                  L         T,RLINK(JJ
)@@G@@T)  . NOT YET     @B@@@[               ENDREP                 .   @D@@@[JK
)@@G@@               L         A0,RLINK(P)  . UPDATE THREAD @B@@@[            JL
)@@G@@   S         A0,RLINK(T)  .   @B@@@[            ELSE                    JM
)@@G@@  .   @F@@@[               L         A0,RLINK(P)  . ALL WE DO IS DELETE JN
)@@G@@NODE  @B@@@[               S         A0,RLINK(Q)  .   @B@@@[            JO
)@@G@@ENDIF                     .   @F@@@[            L         A0,P          JP
)@@G@@  . TRY TO RELEASE STORAGE    @E@@@[            CALL      RELEASE       JQ
)@@G@@  . TAG FOR ROUTINE     @E@@@[            S         X11,RETURN      . SEJR
)@@G@@T RETURN FLAG     @B@@@[         ENDIF                        .   @B@@@[JS
)@@G@@      ENDIF                           .   @E@@@[      IF ZERO,IN,RETURN JT
)@@G@@THEN          . NOT FINISHED YET    @G@@@[         L         T,P        JU
)@@G@@        . HAVE TO RESET SOME OTHER THREADS@F@@@[         L         R,RLIJV
)@@G@@NK(T)         . MUST FIND THREADS POINTING@G@@@[         SZ        A5   JW
)@@G@@              .      TO NODE WHICH WAS DELETED  @G@@@[         IF A5,GEQJX
)@@G@@,LLINK(R) THEN      . IF LEFT LINK IS A THREAD THEN   @F@@@[            JY
)@@G@@L         A5,LLINK(T)     .     WE'LL PRESERVE IT     @H@@@[            JZ
)@@G@@S         A5,LLINK(R)     . BUT WE ONLY REALLY NEED THE RIGHT ONES@H@@@[KA
)@@G@@            L         P,R             . NO LONGER NEED LOC OF DELETED NOKB
)@@G@@DE    @B@@@[         ELSE                         .   @H@@@[            KC
)@@G@@L         S,LLINK(R)      . HAVE TO DO ALL OF THIS TO UPDATE RIGHT@F@@@[KD
)@@G@@            REPEAT WHILE A5,LT,LLINK(S) .      THREADS PROPERLY   @E@@@[KE
)@@G@@               L         R,S          . LOOK FOR LEST THREAD@E@@@[      KF
)@@G@@         L         S,LLINK(R)   . WALK DOWN CHAIN     @B@@@[            KG
)@@G@@ENDREP                    .   @E@@@[            L         A5,LLINK(T)   KH
)@@G@@  . THIS MUST BE IT     @H@@@[            S         A5,LLINK(S)     . UPKI
)@@G@@DATING THREADS POINTING TO OLD NODE @C@@@[            L         A5,RLINKKJ
)@@G@@(S)     . HERE TOO@B@@@[            S         A5,LLINK(R)     .   @H@@@[KK
)@@G@@            L         A5,RLINK(T)     . CAN'T HAVE ANY BLANKS IN THE CHAKL
)@@G@@IN    @B@@@[            S         A5,RLINK(S)     .   @G@@@[            KM
)@@G@@L         P,S             . P IS NOW END OF LEFT SUBTREE    @B@@@[      KN
)@@G@@   ENDIF                        .   @D@@@[         SZ        A5         KO
)@@G@@        . SET FOR TEST  @G@@@[         IF A5,LT,LLINK(P)            . CAKP
)@@G@@N 'T BE SURE HOW WE GOT HERE  @G@@@[            L         R,LLINK(P)    KQ
)@@G@@  . IF NOT END WE WANT RIGHT SUBTREE@F@@@[            REPEAT WHILE A5,LTKR
)@@G@@,RLINK(R) . WALK DOWN RIGHT SUBTREE @E@@@[               L         R,RLIKS
)@@G@@NK(R)   . LOOKING FOR THREAD  @B@@@[            ENDREP                  KT
)@@G@@  .   @E@@@[            LN        A5,P            . MAKE THE NEW THREAD KU
)@@G@@@G@@@[            S         A5,RLINK(R)     . OLD ONE POINTS TO DELETED KV
)@@G@@NODE  @B@@@[         ENDIF                        .   @G@@@[         L  KW
)@@G@@       A0,CONDITION       . GET CONDITION OF FATHER NODE    @G@@@[      KX
)@@G@@   IF A0,EQ,2,,U OR Q,EQ,ROOT,,U THEN . WE'VE DONE THIS BEFORE    @F@@@[KY
)@@G@@            S         P,LLINK(Q)      . BUT P WAS DIFFERENT THEN  @D@@@[KZ
)@@G@@         ELSE                         . UNFORTUNATELY @E@@@[            LA
)@@G@@S         P,RLINK(Q)      . LINK UP SUBTREE     @B@@@[         ENDIF    LB
)@@G@@                    .   @G@@@[         L         A0,T               . HALC
)@@G@@VEN'T RELEASED OLD NODE YET   @D@@@[         CALL      RELEASE          LD
)@@G@@  . GIVE IT A TRY @E@@@[         SZ        A0                 . NORMAL RLE
)@@G@@ETURN CODE  @B@@@[      ENDIF                           .   @B@@@[   ENDLF
)@@G@@CASE                            .   @B@@@[ ENDBEG                       LG
)@@G@@        .   @B@@@[          OFF       DEL               .   @[@@@[/.    LH
)@@G@@@[@@@[ .    @[@@@[ .    @[@@@[ .    @F@@@[ . THIS ROUTINE IS PROVIDED ASLI
)@@G@@ A ARBITATY DUMP ROUTINE, DESIGNED  @F@@@[ .     TO TRANSVERSE THE THREALJ
)@@G@@DED TREE IN SYMMETRIC ORDER WHILE   @G@@@[.      RETURNING TO CALLER WITLK
)@@G@@H THE ADDRESS OF THE NEXT NODE IN A1.     @[@@@[ .    @[@@@[ .    @[@@@[LL
)@@G@@ .    @[@@@[$(0). @F@@@[PREGSAVE* +         0                 . SAVE LINLM
)@@G@@K ACROSS RETURN   @[@@@[ .    @[@@@[ .    @[@@@[$(1). @[@@@[DUMP*.@B@@@[LN
)@@G@@ BEGIN CYCLIC                         .   @F@@@[   IF NONZ,IN,ROOT THEN LO
)@@G@@              . DON'T CONSIDER NULL TREE  @E@@@[      L,U       P,ROOT  LP
)@@G@@              . START AT BEGINNING  @G@@@[      REPEAT WHILE NONZ,IN,LLILQ
)@@G@@NK(P)   . WALK DOWN LEFT SIDE OF TREE     @D@@@[         L         P,LLILR
)@@G@@NK(P)         . NOT DONE YET  @B@@@[      ENDREP                        LS
)@@G@@  .   @D@@@[      REPEAT WHILE P,IS,NONZ          . SYMMETRIC LOOP@E@@@[LT
)@@G@@         L         A0,P               . POINT TO INFO FIELDS@F@@@[      LU
)@@G@@   S         P,PREGSAVE         . SAVE LINK ACROSS RETURN   @E@@@[      LV
)@@G@@   A,U       A0,1               . SKIP LINK FIELDS    @F@@@[         CALLW
)@@G@@L,X7   0,X7               . RETURN WITH NEXT NODE     @G@@@[         L  LX
)@@G@@       P,PREGSAVE         . RESTORE WHERE WE WERE - BE SAFE @F@@@[      LY
)@@G@@   L         Q,RLINK(P)         . RIGHT LINK IS THE KEY     @D@@@[      LZ
)@@G@@   IF Q,LE,0,,U THEN            . IS IT A THREAD@E@@@[            LN    MA
)@@G@@    P,Q             . YES - TAKE SHORT CUT@D@@@[         ELSE           MB
)@@G@@              . NO THREAD     @D@@@[            SZ        A0            MC
)@@G@@  . SET FOR TEST  @G@@@[            REPEAT WHILE A0,LT,LLINK(Q) . LOOK FMD
)@@G@@OR END OF LEFT SUB TREE @C@@@[               L         Q,LLINK(Q)   . NOME
)@@G@@T YET @B@@@[            ENDREP                    .   @F@@@[            MF
)@@G@@L         P,Q             . P POINTS TO CURRENT NODE  @B@@@[         ENDMG
)@@G@@IF                        .   @B@@@[      ENDREP                        MH
)@@G@@  .   @B@@@[   ENDIF                              .   @E@@@[   LN,U     MI
)@@G@@ A0,1                     . END OF TREE FLAG    @C@@@[   CALL,X7   0,X7 MJ
)@@G@@                    . RETURN  @B@@@[ ENDBEG                             MK
)@@G@@  .   @[@@@[/.    @[@@@[ .    @[@@@[ .    @[@@@[ .    @G@@@[ . THIS IS AML
)@@G@@ VERY SIMPLE MINDED AVAIL ROUTINE DESIGNED SPECIFICALLY     @D@@@[ .    MM
)@@G@@ FOR THE DOWNDATER WHERE NO RELEASE IS REQUIRED.@[@@@[ .    @[@@@[ .    MN
)@@G@@@[@@@[ .    @[@@@[$(0). @E@@@[OVERFLOW* +0                          . OVMO
)@@G@@ERFLOW INDICATOR  @F@@@[LAST      +LASTD$+1                   . LAST LOCMP
)@@G@@ATION IN D BANK   @F@@@[FIRST*    +LASTD$+1                   . FIRST AVMQ
)@@G@@AILABLE STORAGE   @F@@@[BLOCK     +1024                       . INCREMENMR
)@@G@@TS FOR MCORE$     @E@@@[TEMP      +0                          . TEMPORARMS
)@@G@@Y STORAGE   @F@@@[LIMIT     +LASTD$+20000               . NO MCORE$ BEYOMT
)@@G@@ND THIS     @[@@@[ .    @[@@@[ .    @[@@@[ .    @[@@@[$(1). @]@@@[AVAIL*MU
)@@G@@.     @B@@@[ BEGIN  SUBROUTINE                    .   @E@@@[   SZ       MV
)@@G@@ OVERFLOW                 . RESET INDICATOR     @H@@@[   AU        A0,FIMW
)@@G@@RST                 . A0 HAS AMOUNT OF STORAGE REQUESTED    @E@@@[   IF MX
)@@G@@A1,GT,LAST THEN                 . MUST GET MORE CORE  @F@@@[      S     MY
)@@G@@    A0,TEMP               . SAVE REQUESTED LENGTH     @E@@@[      L     MZ
)@@G@@    A0,LAST               . GET END OF D-BANK   @D@@@[      A         A0NA
)@@G@@,BLOCK              . ADD MCORE$ INC@F@@@[      IF A0,GT,LIMIT THEN     NB
)@@G@@        . MAYBE WE WANT TOO MUCH    @D@@@[         S         X11,OVERFLONC
)@@G@@W       . 'FRAID SO!    @B@@@[      ELSE                            .   ND
)@@G@@@E@@@[         ER        MCORE$             . GO TRY AND GET IT   @E@@@[NE
)@@G@@         S         A0,LAST            . UPDATE END FO D-BANK@B@@@[      NF
)@@G@@ENDIF                           .   @B@@@[   ENDIF                      NG
)@@G@@        .   @E@@@[   IF NONZ,IN,OVERFLOW THEN           . DID WE GO TOO NH
)@@G@@FAR   @F@@@[      LN,U      A0,1                  . YES - SET RETURN FLANI
)@@G@@G     @B@@@[   ELSE                               .   @F@@@[      L     NJ
)@@G@@    A0,FIRST              . GET STARTING ADDR OF NODE @F@@@[      S     NK
)@@G@@    A1,FIRST              . UPDATE NEXT STARTING ADDR @F@@@[      L     NL
)@@G@@    A1,TEMP               . PASS BACK LENGTH ALSO     @B@@@[   ENDIF    NM
)@@G@@                          .   @B@@@[ ENDBEG                             NN
)@@G@@  .   @[@@@[ .    @[@@@[ .    @B@@@[ END                                NO
)@@G@@  .   ___@@@@E@@@[               L         R,RLINK(R)   . LOOKING FOR THNP
)@@G@@READ  @B@@@[            ENDREP                  )@@[M@K)@^C@@@@@@@/KF@@@NQ
)@@G@@:@@@@HG@@@@HH^Z@@EG8M@@@T*Z@@CH^L@@@C*1@@]C8N@@@C8@@@@AA@@@@)@E[N@@K)@[]NR
)@@G@@@@@@@@/KF@@@Q8!@@@G^Z@@EQ8/@@@G^[@@@W*J@@CC*1@@]"K@@@GC8@@@@/C@@@GAB@@@@NS
)@@G@@@@^@@^@@C@@[@@E@@A@@+@@]@@E@@@@@@@@O)@@@@@@@@@@@E$CHAR$     AECOLN$     NT
)@@G@@@@[@@@@@@@@@AECOL$      @@[@@@@@@@@EAESKIP$     @@[@@@@@@@@[ECOLN$      NU
)@@G@@@@[@@@@@@@@@ECOL$       @@[@@@@@@@@EESKIP$      @@[@@@@@@@@[@@@@@@@@@@@@NV
)@@G@@D@@@@@@[@@@@@@@@@@@@@@@@D@@@@@@#@@@@)@X[U[@[@@@@[@)@@KC80@@0/KF@@@RE1@@[NW
)@@G@@/K@@@G')])@@C@)@@L/@0@@=')])@@C8?@@0;C@@@<AD@@@@)@@@;@K)@K)@@K@@@@)@A@M@NX
)@@G@@C=1@@][@1@@G/K@@@A/G\@@@C/,@@@@@@@@@/K@@@]/K@@@[/K@@@QAA@@@@)@C[UK@K@^@@NY
)@@G@@/KJ@@@C@1@@G')J@@NIG-@@EH8)@[@C80@@]/K@@@J0G[@@E!8)@[@/K@@@L:*1@@]AB@@@@NZ
)@@G@@)@N[U@@@@@@@[?1@@FQ'0@@@;C0@@MC@0@@I @[@@BAE1@@D[^1@@CN8)@@@C0,@@@C4,@@@OA
)@@G@@CO,@@@AC@@@@)@Y[U@E@)@O@*4[@@FC80@@AQC-@@CA^-@@C/?)@@>/?+@@@Q'0@@1Q^-@@COB
)@@G@@A21@@FC=1@@]AC-@@CAD@@@@)@([E[@K)[[@K@@@@@@@@@@@/K@@@1/K@@@Y')])@@AC1@@BOC
)@@G@@%)\@@H8K)@@!C*1@@]/\_@@@C@1@@HAE@@@@)@1@%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OD
)@@G@@@@@@@@@@@@@@/KF@@@CC[@@BQC-@@CD@K@[]QE1@@DAF@@@@@@^@@^@@C@@]@@G@@]@@O@@]OE
)@@G@@@@E@@@@@@@@6)@@@@@@@@@@@E$ASC$      E$CHAR$     E$ARTN$     @@[@@@@@@@@:OF
)@@G@@E$ASCII$    @@[@@@@@@@@@@@@@@@@@@@@@D@@@@@@[@@@@@@@@@@@@@@@@D@@@@@@#@@@@OG
)@@G@@)@@[MK^@])@@@@@@@@[=/@@][*/@@]C80@@[[C/@@ C80@@@@@@@@@@@@@@@/K@@@I/K@@@POH
)@@G@@@@@@@@AA@@@@)@E[F]@@*]^@D80^@M@@@@@@B0H@@@G8K@@CB4@@@H/K@@@O(S@@@G/K@@@@OI
)@@G@@[C/@@ C80@@@/K@@@@AB@@@@)@N[U@K@^[@@;=@@@D/K@@@-9?H@@&R';@@@%8K@@MN8K@@COJ
)@@G@@/K@@@V1@@@@F[@)@@J/KI@@@[)L@@]AC@@@@)@Y[UK[@@@@@DL[D1P/KI@@@C80@@[C@)@@JOK
)@@G@@')])@@0@@@@FC8)@[M8KK@@X')])@@/@)@@++8K@B_AD@@@@)@([U@@@@@@@@@)^@)DLPD1 OL
)@@G@@^@)^@)D([FC@D)@^@)CDKELDD@@^@)D([EL#E([ELTC1 CLMCDMFC@AE@@@@)@4[U@@@@@@@OM
)@@G@@C- CT D(]C(MD1JE1 CL EK@D9#E-JC(HCL ET E[OETO@@)CDPC9P@@)^@)DLPD-TAF@@@@ON
)@@G@@)@_@E@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OO
)@@G@@D(]C(MAG@@@@@@@@@@[@K@K@)@>@M@R@?@@^9?K@@]/K@@@>Q^L@@#C8[@@@/\0@@:/K@@@>OP
)@@G@@/\0@@2Q8W@@@A^W@@#AD@@@@@@^@@^@@C@@#@@I@@#@@U@@]@@E@@@@@@@[@)@@@@@@@@@@@OQ
)@@G@@EDIT$       EDITR$      E$CHAR$     AEDITR$     @@[@@@@@@@@FAEDIT$      OR
)@@G@@@@[@@@@@@@@ E$ASC$      @@[@@@@@@@@@@@@@@@@@@@@@D@@@@@@[@@@@@@@@@@@@@@@@OS
)@@G@@D@@@@@@#@@@@[O<@@@/KF@@@')])@@E/,@@@/\_@@^*^[@@]C@1@@FAG@@@@)[C[UK@@@K@@OT
)@@G@@/?)@[E[=<@@@[*<@@@[?<@@@[0<@@@[4<@@@/?+@@@O80@@[[)<@@@/?)@[#[S<@@@AH@@@@OU
)@@G@@)@@[MK^[]@[]@^K@@@C8)@@E')])@@C8)@@H/K@@@F(*[@@]/K@@@@'=@@@@/\)@@S/K@@@FOV
)@@G@@(*[@@]AA@@@@)@E[EK^C@=C@L@K)#^C@K@@@/,0@@@[@[@@['=@@@@/\)@@R&';@@@/K@@@@OW
)@@G@@'=@@@@/\)@@S')])@@AB@@@@)@N[M@@@@@@@@@@@@@/KI@@@G^[@@@;*@@@MG?[@@@;*@@@AOX
)@@G@@C8@@@@/KH@@@;CK@@MC@K@@FC@[@@[AC@@@@@@@@@@K@@@@@"KK@@IC@0@@HC@@@@J;?"@@]OY
)@@G@@C80@@@;SK@@J/G0@@U[@@@@K[@)@@J)8K@@[[@)@@LAB@@@@@@^@@^@@C@@^@@K@@C@@0@@]OZ
)@@G@@@@E@@@@@@@@X)@@@@@@@@@@@APRINT$     ERASE$      PRINT$      CSF$        PA
)@@G@@EAPRTI$     @@[@@@@@@@@#EAPRT$      @@[@@@@@@@@]ECSF$       @@[@@@@@@@@IPB
)@@G@@EPRTA$      @@[@@@@@@@@BEPRTGA$     @@[@@@@@@@@ EPRTG$      @@[@@@@@@@@@PC
)@@G@@EPRTI$      @@[@@@@@@@@GEPRT$       @@[@@@@@@@@F@@@@@@@@@@@@D@@@@@@[@@@@PD
)@@G@@@@@@@@@@@@@@D@@@@@@#@@@@)@@[U@K@@@@@G G@@BC G@@D[@W@@DC@?@@C[^?@@BC0?@@EPE
)@@G@@/C)@@A;K)@@S[@!)@@C@?@@EC@W@@DAA@@@@)@F[U[@@@@@@N@K@@LH[K@@KC W@@B/KF@@[PF
)@@G@@[@W@@DM#Y)@@N^W@@B/D@@@NH[@@@LGDW@@^C W@@AAB@@@@)@Q[U[]@@@@@[ W@@^C[W@@APG
)@@G@@/ V@@@C5W@@#[[W@@ GDW@@BC[W@@ '=@@@@0@G@@#[ G@@BM#Y)@@AC@@@@)@-[M[]@^^@@PH
)@@G@@@@@@@@T9@@@WKDG@@BC G@@]/K@@@D(^G@@]C@W@@D'=@@@@[ W@@D[[W@@A;[K@@MAD@@@@PI
)@@G@@)@:[M@[]@@^@@@@@@@/K@@@D[DG@@^[[W@@ '=@@@@0@G@@# ^G@@]GDG@@^H W@@]C[W@@ PJ
)@@G@@[DW@@BAE@@@@)@5[U@@^@@@@9??@@@C@K@@G/@)@[L(@@@@J+8K@@#+8)@@#CCW@@BC@?@@ PK
)@@G@@ ^G@@][^W@@DC^W@@AAF@@@@)[@[M^C@)[@@@@@@@@?8)@@^CC?@@B/K@@[L!8)@@)!8)@@SPL
)@@G@@C@@@@HC4?@@A'=@@@@9*?@@@C^G@@AAG@@@@)[E[V@@@@@@@CDW@@B[[W@@ HDW@@BC[W@@ PM
)@@G@@[C/@@BH@0@@I[^?@@]+8K@@#C@W@@ +/)__//K@@[LAH@@@@)[P[U@K)@@@@C^W@@A/ V@@@PN
)@@G@@C5W@@#[[W@@ GDW@@BC[W@@ '=@@@@0@G@@#/KF@@@[DW@@^T9K@@WAI@@@@)[)[U^@@^@@@PO
)@@G@@K8K@@#G8K@@[/@)@[%W8K@@W;GK@@=G8K@@[H^W@@A[@!@@@C@)@[7C^W@@D[^W@@^AJ@@@@PP
)@@G@@)[:[U@@K)#@@/ V@@@C5W@@#[@W@@ '=@@@@G@W@@ [C?@@^T8)@@WCC?@@B!C?@@BC@)@@JPQ
)@@G@@+/)__/AK@@@@)[6@M@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@PR
)@@G@@@@@@@@_@@@@@/KF@@[AL@@@@@@^@@]@@A@@^@@I@@^@@Y@@[@@E@@@@@@@[8WAIT$       PS
)@@G@@IO$         FACIL$      IOW$        SDFOC$      @@[@@@@@@@[SSDFOEOF$    PT
)@@G@@@@[@@@@@@@@ZSDFOO$      @@[@@@@@@@@5SDFO$       @@[@@@@@@@@@@@@@@@@@@@@@PU
)@@G@@D@@@@@@[@@@@[C@ 8LC@@ 8M/K@]GHC@@ 8F9?K 59C^0 53:80@@W9/K]#E/K@]GHCC0 5"PV
)@@G@@+80@@_9?K 5;?9@@@ 9/T@@#/K@]GH9?K 5_%9@@@@9/T@@B/K@]GH[C9@@A9?@ 6[9*D@@DPW
)@@G@@)@@[M@@K^C@@@@@@@@9?@@@]/,0@@@/C@@@EAE1@@[[G[@@[E/,@@@/\_@@^*^[@@]C@1@@FPX
)@@G@@C@)@@HAA@@@@)@E[U^@K[@@@/KF@@@RE1@@[Q@0@@H[@@@@]/K@@@N1G[@@[8KK@@H')])@@PY
)@@G@@/K@@@IN@K@@JEG1@@[AB@@@@)@P[M[]@^@K@@@@@@@N?L@@@/GK@@+N8K@@@/KF@@@H^[@@@PZ
)@@G@@H8@@@[:^Z@@EC8M@@@C*1@@]C8#@@[AC@@@@)@Z[N@[]@C^@^C@0@@C8\@@@CCL@@##@@@[]QA
)@@G@@')J@[IC=1@@]^@-@@[/K@@@@N8N@@[P^1@@@/^K@@+AD@@@@)@([N@K@[@[@@@@@@@/K@@@0QB
)@@G@@%@)@[[')G)@@/K@@@3&FY@@@'KI@@@C?[@@]H8K@@[C8\@[K/C@@@?AE@@@@)@3[N@^@^[]@QC
)@@G@@H@K@@@[?[@@]'OJ@[K/CK@@/'OJ@@@/GK@@'[CL@@#G8K@@[/C@@@7N@-@@[8K)@@0AF@@@@QD
)@@G@@)@.[MK@@]))@@@@@@@/K@@@1Q;@@[#C=!@@[C*!@@[C?!@@[C0!@@[C4!@@[C)!@@@/:K@[^QE
)@@G@@/KF@@@AG@@@@)[B[N@@]))@O@@@@@@__"@@"NOL@@AN0L@@@/K@@@1Q;@@[ECS!@@[CK!@@[QF
)@@G@@CW!@@[CO!@@@/:K@[FAH@@@@)[L@E*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@QG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@__"@[BAI@@@@@@@@@@@@@@@@W@@@@@V@@@@@U@@@@@T@@@@@QH
)@@G@@S@@@@@R@@@@@Q@@@@@P@@@@@O@@@@@N@@@@@M@@@@@AH@@@@@@^@@^@@C@@^@@K@@^@@)@@]QI
)@@G@@@@E@@@@@@@[M)@@@@@@@@@@@ESKIP$      E$CHAR$     ECLR$$      E$PTRL$     QJ
)@@G@@EMSKP$      @@[@@@@@@@@<EPAD$       @@[@@@@@@@@@ERASE$      @@[@@@@@@@@WQK
)@@G@@EWRDN$      @@[@@@@@@@@P@@@@@@@@@@@@D@@@@@@[@@@@@@@@@@@@@@@@D@@@@@@#@@@@QL
)@@G@@N@@@@@AK@@@@)[9@'@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@_@@@@@^@@@@@]@@@@@\@@@@@QM
)@@G@@[@@@@@Z@@@@@Y@@@@@AL@@@@)@@@'^@K[@@@)@A@M@@@@@@@C8:@@@C=1@@]/K@@@A&'0@@[QN
)@@G@@/K@@@AR';@@@/K@@@A[@-@@[&"0__"AA@@@@)@C[F]@@K)@K)@K^[]@@K)@@+OZ@@#;^I@@@QO
)@@G@@CO\@@]/K@@@O/\)@[QC@)@@GN*Z@@C:@)@@FN=Z@@CAB@@@@)@L[N@K)@^@K[]@@@@R';@@@QP
)@@G@@C@[@@[N*Y@@CC=-@@]/K@@@W1@@@@F8KK@@I')])@@%)\@@H/@)@@OAC@@@@)@V[#@@^@K@@QQ
)@@G@@)@+@F@@@@@@@/CK@@&/K@@@+R';@@@/K@@@+&"0__"[C-@@[ @@@@I/KF@@@/K@@@HAD@@@@QR
)@@G@@)@<[M^C@[@K@@@@@@@')])@@1@@@@F:C-@@[')G)@@/K@@@!/\)@[KN8X@@@T*Z@@CC=1@@]QS
)@@G@@E@K@@HAE@@@@)@![V@@@K@@@C4!@@@/\G@@@C)!)@@/\@@@\CS!@@@CK!@@@CW!@@@/\G@@@QT
)@@G@@CO!)@@/KF@@@8KK@@(AF@@@@)@8[M@K])O@K@@@@@@')J@[I')G)@@')])@@@@[@@1@@[@@7QU
)@@G@@/\@@@5C=!@@@C*!@@@C?!@@@C0!@@@AG@@@@)[][N@^@@K^[@@@@@@/\)@[K/K@@[G/\)@[MQV
)@@G@@C?[@@]CCL@@#/KF@@@[?[@@]'OJ@@.[CL@@#/K@@@_AH@@@@)[G@'K@[@@@@)[M@MK@@@@@@QW
)@@G@@'KJ@@.C=1@@]/K@@[M;C@@@MC8W@@@%O-@@A%0-@@@/K@@[@N8K@J*AI@@@@)[O@UK)@K@@@QX
)@@G@@)[Q@%K@@@@@@@@@@@@/KI@@@/\1K@F ?[@@F/K@@[U:*1@@]/K@@[Q'KK@@GC8,@@@AJ@@@@QY
)@@G@@@@^@@^@@C@@[@@E@@J@[A@@]@@E@@@@@@@[V)@@@@@@@@@@@E$CHAR$     AECOPY$     QZ
)@@G@@@@[@@@@@@@@-AEFD1$      @@[@@@@@@@@#AEFD2$      @@[@@@@@@@@ AEMSGR$     RA
)@@G@@@@[@@@@@@@[BAEMSG$      @@[@@@@@@@[FAEPACK$     @@[@@@@@@@@XECOPY$      RB
)@@G@@@@[@@@@@@@@-EFD1$       @@[@@@@@@@@#EFD2$       @@[@@@@@@@@ EFD3$       RC
)@@G@@@@[@@@@@@@@@EMSGR$      @@[@@@@@@@[BEMSG$       @@[@@@@@@@[FEPACKC$     RD
)@@G@@@@[@@@@@@@@YEPACK$      @@[@@@@@@@@XE$PTRL$     @@[@@@@@@@@.@@@@@@@@@@@@RE
)@@G@@D@@@@@@[@@@@@@@@@@@@@@@@D@@@@@@#@@@@/[@]8L?[@C&Z/K@]8>C[[C&-(@@C&Z/[@]9RRF
)@@G@@)@@@'@^C@^@@)@A@U@;?K@@V;?)@@V;*0@@V/K@@@AN*W@@^W8K@@/W8)@@/;GK@[CC*[@@]RG
)@@G@@C8/@@@AA@@@@)@D[M[@K[@^@@@@@@@/KF@@@8#@@@E')])@@/@)@@LC@)@[[/@@@@M/\K@@NRH
)@@G@@;=K@@DC8)@@@R;@@@]AB@@@@)@N[U@@@@@@@;GK@@GC*[@@];G@@@6/KH@@@C*1@@]')])@@RI
)@@G@@C8\@@0')])@@G8)@@0W8)@@E;G)@@=AC@@@@)@Y[M[]@[@@K^C@@@@C)\@@H/\K@@N;GK@@%RJ
)@@G@@+8@@_@;C@@@M/K@@@AN0W@@]G80@[@;C0@@Y;G)@@YAD@@@@)@*[U[@[@@@@;G@@@0[G[@@[RK
)@@G@@[C-@@[/KF@@@/\K@@NG8)@[@+8K@@_/\)@@0R';@@@N8K@@#')])@@AE@@@@)@3[M^@K^[@[RL
)@@G@@@@@@@@/@)@@_+8K@@_;=@@@A/K@@@"9?H@[V/K@@@_/\,@@[/@0@@8CC-@@ ;*K@@[AF@@@@RM
)@@G@@)@.[MK^C@@@@@@@@@@N8K@@D&"0__"C*1@@]/KI@@@CGL@@[CC-@@[')])@@C)\@@H8KK@@'RN
)@@G@@')])@@AG@@@@)[B[UK@[@@K@C@/@[VC8\@@0')])@@G8)@@0/@)@[KW8)@@E;G)@@%C@@@@JRO
)@@G@@+8K@_@/\)@@0;C@@@MAH@@@@)[M[N]@@[@[@@@@@@@, 19  /KF@@@/\K@@NG8)@[@+8K@@_RP
)@@G@@8KK@[O;^?@@@')])@@N8K@@^COG@@]AI@@@@)[W[U@@@@@@@      MAY@        APRIL@RQ
)@@G@@      MARCH@RY@   FEBRUAY@    JANUAR ))AC9AJ@@@@)[$[U@@@@@@@NOVEMBR@    RR
)@@G@@OCTOBEBER@  SEPTEM@     AUGUST      JULY@       JUNE@ AK@@@@)[2@2@K^@@@@RS
)@@G@@)[7@U@@@@@@@G8K@[@C?L@@[[@[@@[/K@@[7/\K@@NC8)@@NER@   DECEMBER@   AL@@@@RT
)@@G@@)['@+[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/K@@@AN8K@@@C01@@[RU
)@@G@@C4-@@[AM@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/KF@@@CC[@@BRV
)@@G@@QC-@@CD@K@[]QE1@@DAF@@@@@@^@@^@@C@@[@@E@@G@@'@@]@@E@@@@@@@[")@@@@@@@@@@@RW
)@@G@@E$CHAR$     AEDAY1$     @@[@@@@@@@@VAEDAY2$     @@[@@@@@@@@<AEDAY3$     RX
)@@G@@@@[@@@@@@@[^AEDAY4$     @@[@@@@@@@[5AEDAY5$     @@[@@@@@@@[7AETIME$     RY
)@@G@@@@[@@@@@@@@@EDAY1$      @@[@@@@@@@@VEDAY2$      @@[@@@@@@@@<EDAY3$      RZ
)@@G@@@@[@@@@@@@[^EDAY4$      @@[@@@@@@@[5EDAY5$      @@[@@@@@@@[7ETIME$      SA
)@@G@@@@[@@@@@@@@@@@@@@@@@@@@@D@@@@@@[@@@@@@@@@@@@@@@@D@@@@@@#@@@@@@@@@@@@@@@@SB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[N[^ [KL[])@@@@C@@@@H&;K@@WH8)@@VKCK@@@C8W@@@SD
)@@G@@ @@@@[[@@@@@ @@@@[/KF@@[*@@@@@AA@@@@)@E[N]@[[KKK^[@@@@C8H@@@/KF@@[>@@@#"SE
)@@G@@/K@@@T>@@@#. @H@@@G8W@@@[@@@@[(@@@@['=@@@@AB@@@@)@O[MK^@^@^ @@@@@@C@@@#7SF
)@@G@@[@@@@[/KF@@@C8K@@[C@@@#1/KF@@@C8K@@#C@@@#//K@@@D?8I@@@AC@@@@)@Y[U[[@K[@@SG
)@@G@@%CI@@@/K@@@+G),@@@/K@@@*?CY@@@*@I@@@G8)@@[C@)@@@L8@@@[/KF@@@C8K@@]AD@@@@SH
)@@G@@)@([U@@K@@@@;^@@@%;CK@@=/KF@@[C@K@#_?80@@B9?I@@[G="@@@T80@@AH80@@[C)"@@@SI
)@@G@@/KF@@@AE@@@@)@4[U@^^^^@@C@W@@@N8)@@@ @@@@JC9K@@[G8@@@[C^@@@@[@@@[[;C@@@YSJ
)@@G@@[@K@[#G8K@@[(@@@@HAF@@@@)@_[N@@K[@^@@@@@@@C?W@@@/K@@[$%1W@@@/K@@[$%@K@[#SK
)@@G@@/K@@[R?@K@[#*@@@@H;CK@@Y/@K@[$AG@@@@)[D[MK^ [KK^[@@@@@')H@]TC@0@#_:9@@@[SL
)@@G@@C-G@@@9??@@[[(K@@J @@@@I%(K@@J/K@@[U!8K@@AAH@@@@)[N[U[@[@^@@:8)@@.C*?@@@SM
)@@G@@/K@@[Z:9K@@[/K@@@"G8@@@[G)G@@@')H@]-G>G@@@T9@@@AH9@@@[AI@@@@)[Y[M^[@K^ @SN
)@@G@@KO@@@@(@@@[]/K@@[R[-K@@I:@)@#_[5@@@I%@)@#_/K@@[I/K@@[R%[K@[[N8)@@[AJ@@@@SO
)@@G@@)[*[N[K^ [^@^@@@@@!4W@@@/K@@[3(@G@@@G9K@@[/K@@[6:[K@[[ @@@@I[(K@@J/K@@[?SP
)@@G@@:(K@@JAK@@@@)[2[N@KO^KO [[[@@@[=@@@JC8@@@-98V@@@9?K@@I *@@@J:(K@@J/KF@@@SQ
)@@G@@ @@@@J @@@@I/K@@@.AL@@@@)[/[N[^^^ @@@@@@@@C80@@E!8)@[@1@@@@I8^@@]DC!@@@JSR
)@@G@@C80@@@D8)@@@C@@@@V/KF@@[(?@@@JAM@@@@)]A[V[KK@K@@H8K@@0C80@[@(@@@@J/K@@]OSS
)@@G@@?8K@@0?8K@@';=@@@AC8K@@@/KF@@[[=0@@J[))@@JAN@@@@)]L[M^[@@K^[[@@@@@9*)@@KST
)@@G@@/K@@]]/@0@] C8.@@@:8K@@-%8K@@+/^0@] /K@@]]G8!@@@T8)@@EAO@@@@)]V[F[KO [KOSU
)@@G@@ [K^^@@@@@@@[1@@@I/K@@[+[@)@@V9*)@@T9*)@@R[@)@@Q[@)@@P[@)@@O9*)@@MAP@@@@SV
)@@G@@)]=[N[KO [KO^@@@@@;^@@@A:8)@@ +8K@@_C80@@F[!@@@J[1@@@J[5@@@J[>@@@I[(@@@ISW
)@@G@@[!@@@IAQ@@@@)],[N@KO[@^[[K^ [@9!@@@KN4K@@I8#)@]4[@"@@AC@0@#_C8)@@BC@K@^[SX
)@@G@@C@@@^@9*@@@#8#0@]:AR@@@@)]8[N@^ [^ [^[@@@@C[@@^]/K@@##*@@@[[9!@@@MN0K@@ISY
)@@G@@')H)@@*)@@@I(4@@@IC9K@@*/\)@#+AS@@@@)#][MK^^K@KO@@@@@@C9K@@)/\)@#+C[@@@OSZ
)@@G@@')H)@@C9K@@(/K@@#H(@@@[[N?K@@I/\)@#+N8K@@^AT@@@@)#G[MKO @K^C@K^^@@N*K@@ITA
)@@G@@')H)@@C9K@@//KF@@@'=@@@@C@@@^#/K@@#N*=@@@I(*@@@I')H)@@AU@@@@)#Q[N[K^^K@KTB
)@@G@@O[@@@@/K@@#K/\)@#+C[@@@Q')H)@@C9K@@//K@@#K(@@@[[N=K@@I/\)@#+C[@@@PAV@@@@TC
)@@G@@)#)[U^@@[@@@[-W)@@/\0@#%[>W@@@[(W@@@[!W@@@[1W@@@[5W@@@/KI@@@8KK@#)')H)@@TD
)@@G@@;>@@@AAW@@@@)#:[U*@@O@@@OM REAURN FRAL RETABNORM@[^@#!OR    LL ERRSOR CATE
)@@G@@PROCES/KJ@@@Q;K@#=AX@@@@)#6@'E@@O@@@)@@@W@@USE  @@@@@@@@@@@@@[^@#8TIONS TF
)@@G@@CIFICANY SPETOO MA@[ @#2D$    AY@@@@)@#@W@)#.@'@*>@EC@@@G@@]TPF$  @@[@#=TG
)@@G@@@@[@@A      [@@@@@]@@@@@,     @@@@@@@@@@@@AZ@@@@@@^@@#@@B@@]@@F@@B@@$@@[TH
)@@G@@@@E@@@@@@@^^@@@@@WREAD$       CSF$        DUSE$       @@[@@@@@@@]%ELT$  TI
)@@G@@      @@]@@@@@@@@IFILE$       @@]@@@@@@@@AINFOR$      @@]@@@@@@@@@RINF$ TJ
)@@G@@      @@[@@@@@@@@@SELT$       @@[@@@@@@@@2SINF$       @@[@@@@@@@@)@@@@@@TK
)@@G@@@@@@@@D@@@@@@[@@@@[@K^/G(4@^;5/K@@%Y'^@@_<'^@[@@'^@[I?'^@@9_'^@[[L*4@^8[TL
)@@G@@/K@@%<C@@ QZ'=@@@I'^@@M,)@@[U[@[@[@@C8)@@0/^@@@BG80@@[;G@@@#/@@@@G;G@@@#TM
)@@G@@C80@@[/K@@@G;GH@@@T8K@@#C8.@@@AA@@@@)@F@MK@@@@@@)@G@;@@^@@@@/KF@@@8#0@@HTN
)@@G@@')])@@G8)@@0;=K@@#C8)@@@/K@@@L/K@@@G')])@@AB@@@@)@N[M@K@K@@@@@@@@@[C-@@[TO
)@@G@@(C[@@[/\)@@_;*)@@MC8)@@0/K@@@TE/,@@@/\_@@^*^[@@]C@1@@FAC@@@@)@X[N]@@@K[@TP
)@@G@@@@@@@@[C-@@[(C[@@[/\)@@_C8K@@@/K@@@*R';@@@;C)@@M')])@@0@@@@FQ3:@@^AD@@@@TQ
)@@G@@)@$@N]@[@@@@)@*@3@^[]@@@@@@@@@')])@@0@@@@FC0:@@^8#K@@(')])@@/K@@@%/K@@@*TR
)@@G@@C):@@HAE@@@@)@,[#]@[]@[@K)@@K@@@@@@@@@@@@@/K@@@5H8X@@@;?I@@@RE1@@[9)@@@@TS
)@@G@@S@J@[RC?\@@]G4J@@@AF@@@@)@5[V@@@^@@@AE1@@[/KF@@@8KK@@6H8X@@@')])@@K8K@@0TT
)@@G@@9)@@@I;=@@@]9?)@@G;=@@@[/K@@@.AG@@@@)[@[U[@K@@@@N/Z@@[Q%1@@]H8K@@[0@@@@FTU
)@@G@@H8Z@@[/SJ)@@5@J)[HC@0@[+E@@@@GR]0@@GN8K@@EAH@@@@)[F[U@@@@@@@DO]"K@@;&?*@TV
)@@G@@@ .Y^@@@&DU@@@#4D@@@@SU)@@@]WK@@@@J*@@@@[=@@@@@E/KI@@@AI@@@@)[Q[U@@@@@@@TW
)@@G@@VZH_T5LF)\*DPYS;+GU5_EU\K1\Y)!O"FQC8UH,F:BKS=7M/OY, B:T&T&T&Z_____AJ@@@@TX
)@@G@@)[-@M@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[__"TY
)@@G@@P_R_-ZAK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@^@@C@@[@@E@@K@[E@@]@@E@@@@@@@[<)@@@@@@@@@@@UA
)@@G@@E$CHAR$     AEDCFZ$     @@[@@@@@@@@SAEDECF$     @@[@@@@@@@@=AEDECV$     UB
)@@G@@@@[@@@@@@@@<AEOCTF$     @@[@@@@@@@@@AEOCTV$     @@[@@@@@@@@^EDCFZ$      UC
)@@G@@@@[@@@@@@@@SEDECFL$     @@[@@@@@@@@NEDECFZ$     @@[@@@@@@@@SEDECF$      UD
)@@G@@@@[@@@@@@@@=EDECV$      @@[@@@@@@@@<EOCTF$      @@[@@@@@@@@@EOCTV$      UE
)@@G@@@@[@@@@@@@@^E$DECM$     @@[@@@@@@@@_E$DEC$      @@[@@@@@@@@>E$DEC0$     UF
)@@G@@@@[@@@@@@@@VE$DEC2$     @@[@@@@@@@@5@@@@@@@@@@@@D@@@@@@[@@@@@@@@@@@@@@@@UG
)@@G@@D@@@@@@#@@@@@@@@@@@@@@@@@@^@@@@@^@@@@@^@^)@M^@@@ACOB$E      @C@@@@@@@)^EUH
)@@G@@ACOB$1      @C@@@@@@@)[ZACOB$2      @C@@@@@@@)[)ACOB$3      @C@@@@@@@)[-UI
)@@G@@ACOB$4      @C@@@@@@@)[+ACOB$5A     @C@@@@@@@)[<ACOB$5L     @C@@@@@@@)[=UJ
)@@G@@ACOB$6      @C@@@@@@@)[>ACTCDB$     @C@@@@@@@)@6APLREP$     @C@@@@@@@)@2UK
)@@G@@APL$        @C@@@@@@@)]OAPL$B       @C@@@@@@@)]RAPL$D       @C@@@@@@@)]PUL
)@@G@@APL$D4      @C@@@@@@@)]TAPL$ERR$    @C@@@@@@@)@4APL$M1      @C@@@@@@@)@5UM
)@@G@@APL$M2      @C@@@@@@@)[MAPL$SY      @C@@@@@@@)^[APL$T       @C@@@@@@@)]QUN
)@@G@@APL$U       @C@@@@@@@)]SAPL$XQ      @C@@@@@@@)^@ASETCB$     @C@@@@@@@)#BUO
)@@G@@ASM$        @C@@@@@@@)@ BCOB$I      @C@@@@@@@)@3BDI1$       @C@@@@@@@)]YUP
)@@G@@BDI10$      @C@@@@@@@)]>BDI11$      @C@@@@@@@)]&BDI2$       @C@@@@@@@)]ZUQ
)@@G@@BDI3$       @C@@@@@@@)])BDI4$       @C@@@@@@@)]-BDI5$       @C@@@@@@@)]XUR
)@@G@@BDI6$       @C@@@@@@@)]WBDI7$       @C@@@@@@@)]VBDI8$       @C@@@@@@@)]UUS
)@@G@@BDI9$       @C@@@@@@@)]=BFOR$I      @C@@@@@@@)@JBFTN$I      @C@@@@@@@)@ZUT
)@@G@@BLD$BK      @C@@@@@@@)]2BSCAN$      @C@@@@@@@)@ICDMATH$     @C@@@@@@@)@YUU
)@@G@@CKFUL$      @C@@@@@@@)['CKPAR$      @C@@@@@@@)[8CMATH$      @C@@@@@@@)@#UV
)@@G@@CMP$BK      @C@@@@@@@)]/COMPEX$     @C@@@@@@@)[(CONTB$      @C@@@@@@@)]$UW
)@@G@@CPBBNK$     @C@@@@@@@)[QCTS$ALT     @C@@@@@@@)[.CTS$ED      @C@@@@@@@)["UX
)@@G@@CTS$I       @C@@@@@@@)@HCTS$MDS     @C@@@@@@@)[_C$ACS       @C@@@@@@@)[@UY
)@@G@@C$ANS       @C@@@@@@@)@*C$BK1       @C@@@@@@@)#;C$BK2       @C@@@@@@@)#/UZ
)@@G@@C$CFH       @C@@@@@@@)@?C$CONV      @C@@@@@@@)[]C$DIAG      @C@@@@@@@)@>VA
)@@G@@C$DML       @C@@@@@@@)[AC$FORM      @C@@@@@@@)@.C$IBM       @C@@@@@@@)@;VB
)@@G@@C$INITIAL   @C@@@@@@@)[#C$LABEL     @C@@@@@@@)@"C$LION      @C@@@@@@@)@/VC
)@@G@@C$MASS      @C@@@@@@@)@(C$MCS       @C@@@@@@@)[^C$RPW       @C@@@@@@@)@_VD
)@@G@@C$SDF       @C@@@@@@@)@:C$SIIOB     @C@@@@@@@)@$C$SISAM     @C@@@@@@@)@&VE
)@@G@@C$STRING    @C@@@@@@@)[[C$SYMBIONT  @C@@@@@@@)[ C$TAPE      @C@@@@@@@)@%VF
)@@G@@C2A$        @C@@@@@@@)@KC2D$        @C@@@@@@@)@MC2E$        @C@@@@@@@)@NVG
)@@G@@C2F$        @C@@@@@@@)@PC2I$        @C@@@@@@@)@OC2M$        @C@@@@@@@)@QVH
)@@G@@C2PP$       @C@@@@@@@)[/C2S$        @C@@@@@@@)@LDBP$DB11    @C@@@@@@@)#-VI
)@@G@@DBP$DB12    @C@@@@@@@)#+DBP$DB13    @C@@@@@@@)#<DBP$DB14    @C@@@@@@@)#=VJ
)@@G@@DBP$DB15    @C@@@@@@@)#>DBP$DB21    @C@@@@@@@)#&DBP$DB22    @C@@@@@@@)#$VK
)@@G@@DBP$DB23    @C@@@@@@@)#*DBP$DB24    @C@@@@@@@)#(DBP$DB25    @C@@@@@@@)#%VL
)@@G@@DBP$DB31    @C@@@@@@@)#:DBP$DB32    @C@@@@@@@)#?DBP$DB33    @C@@@@@@@)#!VM
)@@G@@DBP$DB34    @C@@@@@@@)#,DBP$DB35    @C@@@@@@@)#\DBP$DB41    @C@@@@@@@)#0VN
)@@G@@DBP$DB42    @C@@@@@@@)#1DBP$DB43    @C@@@@@@@)#2DBP$DB44    @C@@@@@@@)#3VO
)@@G@@DBP$DB45    @C@@@@@@@)#4DBP$DB51    @C@@@@@@@)#5DBP$DB52    @C@@@@@@@)#6VP
)@@G@@DBP$DB53    @C@@@@@@@)#7DBP$DB54    @C@@@@@@@)#8DBP$DB55    @C@@@@@@@)#9VQ
)@@G@@DBP$IB1     @C@@@@@@@)#WDBP$IB2     @C@@@@@@@)#XDBP$IB3     @C@@@@@@@)#YVR
)@@G@@DBP$IB4     @C@@@@@@@)#ZDBP$IB5     @C@@@@@@@)#)DIAG$       @C@@@@@@@)]*VS
)@@G@@DMATH$      @C@@@@@@@)@]DMRCTR$     @C@@@@)[T@C@DMRMB$      @C@@@@)[XP@@VT
)@@G@@DMRMB2$     @C@@@@)[YP@@DMRMT$      @C@@@@)@9@C@DMR$        @C@@@@@@@)@9VU
)@@G@@DMR1$       @C@@@@@@@)[TDMR2$       @C@@@@@@@)[UDMR3$       @C@@@@@@@)[VVV
)@@G@@DMR4$       @C@@@@@@@)[WDMR5$       @C@@@@@@@)[XDMR6$       @C@@@@@@@)[YVW
)@@G@@DPY$BK      @C@@@@@@@)]\DRU$DB1     @C@@@@@@@)^ODRU$DB10    @C@@@@@@@)^XVX
)@@G@@DRU$DB2     @C@@@@@@@)^PDRU$DB3     @C@@@@@@@)^QDRU$DB4     @C@@@@@@@)^RVY
)@@G@@DRU$DB5     @C@@@@@@@)^SDRU$DB6     @C@@@@@@@)^TDRU$DB7     @C@@@@@@@)^UVZ
)@@G@@DRU$DB8     @C@@@@@@@)^VDRU$DB9     @C@@@@@@@)^WDST$BK      @C@@@@@@@)]6WA
)@@G@@DUMDB$      @C@@@@@@@)# DUMLK$      @C@@@@@@@)#^ED$         @C@@@@@@@)@BWB
)@@G@@ERRMSGBDI$  @C@@@@@@@)]<E$RROR$     @C@@@@@@@)#@FFL$BK      @C@@@@@@@)]4WC
)@@G@@FI$HBK      @C@@@@@@@)#.FLIT$       @C@@@@@@@)@CFMS8BDI$    @C@@@@@@@)]+WD
)@@G@@FRM$BK      @C@@@@@@@)]_FTN$CHKU    @C@@@@@@@)[PFTN$E       @C@@@@@@@)@XWE
)@@G@@FTN$U       @C@@@@@@@)@VFTN$XI      @C@@@@@@@)[OFTN$XR      @C@@@@@@@)@WWF
)@@G@@FTN$YI      @C@@@@@@@)[NFTN$1       @C@@@@@@@)@RFTN$2       @C@@@@@@@)@SWG
)@@G@@FTN$3       @C@@@@@@@)@TFTN$4       @C@@@@@@@)@UFTN$4S      @C@@@@@@@)]!WH
)@@G@@FURPR$      @C@@@@@@@)@DHLP$BK      @C@@@@@@@)#OHPLAR$      @C@@@@@@@)[$WI
)@@G@@HVTS$AC1    @C@@@@@@@)[JHVTS$AC2    @C@@@@@@@)]@HVTS$APL    @C@@@@@@@)#UWJ
)@@G@@HVTS$BCOM   @C@@@@@@@)][HVTS$BFTN   @C@@@@@@@)^2HVTS$BRUN   @C@@@@@@@)]]WK
)@@G@@HVTS$BSCN   @C@@@@@@@)]#HVTS$CB     @C@@@@@@@)[DHVTS$CON    @C@@@@@@@)^1WL
)@@G@@HVTS$CRE    @C@@@@@@@)]^HVTS$DAT    @C@@@@@@@)] HVTS$EXP    @C@@@@@@@)]AWM
)@@G@@HVTS$FCOM   @C@@@@@@@)#RHVTS$FIN    @C@@@@@@@)]BHVTS$FRUN   @C@@@@@@@)#SWN
)@@G@@HVTS$FSCN   @C@@@@@@@)#THVTS$FTNBE  @C@@@@@@@)^!HVTS$FTNB1  @C@@@@@@@)^(WO
)@@G@@HVTS$FTNB2  @C@@@@@@@)^%HVTS$FTNB4  @C@@@@@@@)^:HVTS$FTNHELP@C@@@@@@@)^?WP
)@@G@@HVTS$FTNL   @C@@@@@@@)^\HVTS$FTNLR  @C@@@@@@@)^0HVTS$FTN4YI @C@@@@@@@)^,WQ
)@@G@@HVTS$HEL    @C@@@@@@@)]CHVTS$HELP   @C@@@@@@@)]DHVTS$II     @C@@@@@@@)]EWR
)@@G@@HVTS$LIS    @C@@@@@@@)]FHVTS$LOC    @C@@@@@@@)]GHVTS$MAS    @C@@@@@@@)]HWS
)@@G@@HVTS$MSG    @C@@@@@@@)]IHVTS$OLD    @C@@@@@@@)]JHVTS$PUN    @C@@@@@@@)]NWT
)@@G@@HVTS$SAV    @C@@@@@@@)]KHVTS$SNP    @C@@@@@@@)]LHVTS$STA    @C@@@@@@@)]MWU
)@@G@@IDX$BK      @C@@@@@@@)].ISICB$      @C@@@@@@@)@GLOG$BK      @C@@@@@@@)],WV
)@@G@@LUT$BK      @C@@@@@@@)]'MAR$BK      @C@@@@@@@)#PMASM$       @C@@@@@@@)[SWW
)@@G@@MCH$BK      @C@@@@@@@)];MCSNCB$BDI  @C@@@@@@@)#"MCSUCB$BDI  @C@@@@@@@)#_WX
)@@G@@MDC$        @C@@@@@@@)[KMDEF$       @C@@@@@@@)^*MDP$        @C@@@@@@@)[LWY
)@@G@@MINT$       @C@@@@@@@)^$MSG$BK      @C@@@@@@@)]0NIOCB$      @C@@@@@@@)@^WZ
)@@G@@NUALG$I12   @C@@@@@@@)@+NUALG$I3    @C@@@@@@@)@<NUALG$I4    @C@@@@@@@)@=XA
)@@G@@NWBCB$      @C@@@@@@@)@AOPN$BK      @C@@@@@@@)]1PAS$        @C@@@@@@@)#CXB
)@@G@@PIRCB$      @C@@@@@@@)[3PLS$E       @C@@@@@@@)[IPLS$R       @C@@@@@@@)[GXC
)@@G@@PLS$U       @C@@@@@@@)[BPLS$1       @C@@@@@@@)[CPLS$2       @C@@@@@@@)[EXD
)@@G@@PLS$3       @C@@@@@@@)[FPLS$4       @C@@@@@@@)[HPLUM$BANK4  @C@@@@@@@)#JXE
)@@G@@PLUM$BANK6  @C@@@@@@@)#KPL1$E       @C@@@@@@@)[?PL1$R       @C@@@@@@@)[0XF
)@@G@@PL1$1       @C@@@@@@@)[!PL1$2A      @C@@@@@@@)[:PL1$2B      @C@@@@@@@)[,XG
)@@G@@PL1$2C      @C@@@@@@@)#QPL1$3       @C@@@@@@@)[\PL1$4       @C@@@@@@@)[1XH
)@@G@@PL1$5       @C@@@@@@@)[2PRMCDB$     @C@@@@@@@)^YPRMG$2      @C@@@@@@@)^ZXI
)@@G@@PRMG$3      @C@@@@@@@)^)PRT$BK      @C@@@@@@@)]9QEDIT$      @C@@@@@@@)@0XJ
)@@G@@QPABK$      @C@@@@@@@)]%QPRBK$      @C@@@@@@@)](RALPH$      @C@@@@@@@)[&XK
)@@G@@RMATH$      @C@@@@@@@)@[RPG$1       @C@@@@@@@)@!RPG$2       @C@@@@@@@)@,XL
)@@G@@RPG$3       @C@@@@@@@)@\RSFUL$      @C@@@@@@@)[;RSPAR$      @C@@@@@@@)[9XM
)@@G@@SCANNER$    @C@@@@@@@)[*SCHBNK$     @C@@@@@@@)[RSCPAR$      @C@@@@@@@)@)XN
)@@G@@SFLIT$      @C@@@@@@@)@8SM$ERR      @C@@@@@@@)^NSM$EST      @C@@@@@@@)^MXO
)@@G@@SM$INIT     @C@@@@@@@)^JSM$MERGE    @C@@@@@@@)^LSM$SORT     @C@@@@@@@)^KXP
)@@G@@SNO$C       @C@@@@@@@)#LSNO$X       @C@@@@@@@)#MSPICB$      @C@@@@@@@)@EXQ
)@@G@@SRC$BK      @C@@@@@@@)]5SRTINIT$    @C@@@@@@@)]:SRTUB$      @C@@@@@@@)]?XR
)@@G@@SRT$BK      @C@@@@@@@)]8STAT$       @C@@@@@@@)@'S$ML        @C@@@@@@@)#DXS
)@@G@@S$RT0       @C@@@@@@@)#ES$R1        @C@@@@@@@)#FS$R2        @C@@@@@@@)#GXT
)@@G@@S$R3        @C@@@@@@@)#HS$R4        @C@@@@@@@)#ITASKS$      @C@@@@@@@)#VXU
)@@G@@TASK$       @C@@@@@@@)@-TELNET$     @C@@@@@@@)#[TFC$IO      @C@@@@@@@)[4XV
)@@G@@TFLIT$      @C@@@@@@@)@7TFR$BK      @C@@@@@@@)]7TUT$BK      @C@@@@@@@)]"XW
)@@G@@T$SCRN      @C@@@@@@@)@FUMEDD$      @C@@@@@@@)#]UMEDI$      @C@@@@@@@)#NXX
)@@G@@UMEDL$      @C@@@@@@@)##USR$BK      @C@@@@@@@)]3UTILITY$    @C@@@@@@@)[%XY
)@@G@@UTS4CB$     @C@@@@@@@)^FWHURP$BDI   @C@@@@@@@)#A@F@]@@'QUESTIONS THAT CAXZ
)@@G@@N BE COMPRESSED INTO "WHAT TO PRODUCE".  THE'   @F@@@]QUESTIONS THAT CANYA
)@@G@@ BE COMPRESSED INTO "WHA@@^@@@@@^@@@@@^@^.@N8@@@ABORT$      @C@@@@@@@@@EYB
)@@G@@ABR$        @C@@@@@@@@@RABSAD$      @C@@@@@@@@@SABSR$       @C@@@@@@@@@$YC
)@@G@@ABSW$       @C@@@@@@@@@JACCNT$      @C@@@@@@@@[3ACLIST$     @C@@@@@@@@[-YD
)@@G@@ACQ$        @C@@@@@@@@@IACSF$       @C@@@@@@@@[)ACT$        @C@@@@@@@@[$YE
)@@G@@AC$NIT      @C@@@@@@@@KSADACT$      @C@@@@@@@@[?ADED$       @C@@@@@@@@[1YF
)@@G@@APCHCA$     @C@@@@@@@@@_APCHCN$     @C@@@@@@@@@.APNCHA$     @C@@@@@@@@@;YG
)@@G@@APRINT$     @C@@@@@@@@@8APRNTA$     @C@@@@@@@@@9APRNT$      @C@@@@@@@@@8YH
)@@G@@APRTCA$     @C@@@@@@@@@"APRTCN$     @C@@@@@@@@@/APUNCH$     @C@@@@@@@@@'YI
)@@G@@APU$        @C@@@@@@@@]LAREADA$     @C@@@@@@@@[7AREAD$      @C@@@@@@@@[6YJ
)@@G@@ASCII$      @C@@@@@@@@@[ATREAD$     @C@@@@@@@@[8AWAIT$      @C@@@@@@@@[WYK
)@@G@@BANK$       @C@@@@@@@@[0BBEOF$      @C@@@@@@@@@YBDR$        @C@@@@@@@@@?YL
)@@G@@BDSPT$      @C@@@@@@@@[HBDW$        @C@@@@@@@@@^BRD$        @C@@@@@@@@@OYM
)@@G@@BSD$        @C@@@@@@@@@XBSF$        @C@@@@@@@@@:BSRD$       @C@@@@@@@@@ZYN
)@@G@@BT$DIS      @C@@@@@@@@K?BT$ENA      @C@@@@@@@@K!CADD$       @C@@@@@@@@@\YO
)@@G@@CALL$       @C@@@@@@@@K6CA$ASG      @C@@@@@@@@KDCA$REL      @C@@@@@@@@KEYP
)@@G@@CEND$       @C@@@@@@@@[@CGET$       @C@@@@@@@@@,CJOIN$      @C@@@@@@@@[(YQ
)@@G@@CKRS$       @C@@@@@@@@]^CLIST$      @C@@@@@@@@[:CMD$        @C@@@@@@@@@(YR
)@@G@@CMH$        @C@@@@@@@@@%CMI$        @C@@@@@@@@@$CMO$        @C@@@@@@@@@*YS
)@@G@@CMSA$       @C@@@@@@@@@:CMS$        @C@@@@@@@@@>CMT$        @C@@@@@@@@@&YT
)@@G@@COM$        @C@@@@@@@@@CCOND$       @C@@@@@@@@@6CO$MIT      @C@@@@@@@@K/YU
)@@G@@CPOOL$      @C@@@@@@@@@!CQUE$       @C@@@@@@@@[JCREG$       @C@@@@@@@@]EYV
)@@G@@CREL$       @C@@@@@@@@[%CRTN$       @C@@@@@@@@@XCR$ELG      @C@@@@@@@@KLYW
)@@G@@CR$LGR      @C@@@@@@@@KKCR$LOG      @C@@@@@@@@KJCR$PHS      @C@@@@@@@@KGYX
)@@G@@CR$VAL      @C@@@@@@@@KUCSF$        @C@@@@@@@@@JCSF$$       @C@@@@@@@@C#YY
)@@G@@CS$LOG      @C@@@@@@@@KHCS$OVR      @C@@@@@@@@KICS$PHS      @C@@@@@@@@KFYZ
)@@G@@CTSA$       @C@@@@@@@@[OCTSQ$       @C@@@@@@@@[MCTS$        @C@@@@@@@@[NZA
)@@G@@CW$         @C@@@@@@@@@ECYCLIM$     @C@@@@@@@@@ DACT$       @C@@@@@@@@[*ZB
)@@G@@DADD$       @C@@@@@@@@@-DATE$       @C@@@@@@@@@MDBACK$      @C@@@@@@@@@TZC
)@@G@@DBB$        @C@@@@@@@@@YDBITS$      @C@@@@@@@@@SDCYC$       @C@@@@@@@@@WZD
)@@G@@DGETP$      @C@@@@@@@@@IDGET$       @C@@@@@@@@@HDKEY$       @C@@@@@@@@@XZE
)@@G@@DK$ONS      @C@@@@@@@@K'DLAPS$      @C@@@@@@@@@UDLINK$      @C@@@@@@@@@)ZF
)@@G@@DMBTS$      @C@@@@@@@@@MDMBT$       @C@@@@@@@@@LDM$EOS      @C@@@@@@@@K_ZG
)@@G@@DM$FAC      @C@@@@@@@@K*DM$IO       @C@@@@@@@@K(DM$IOW      @C@@@@@@@@K%ZH
)@@G@@DM$RBK      @C@@@@@@@@L@DM$SOS      @C@@@@@@@@K"DM$WT       @C@@@@@@@@K:ZI
)@@G@@DNLOD$      @C@@@@@@@@]QDREAD$      @C@@@@@@@@@KDREG$       @C@@@@@@@@@ZZJ
)@@G@@DUNLD$      @C@@@@@@@@@VEABT$       @C@@@@@@@@@QEACQ$       @C@@@@@@@@@JZK
)@@G@@EDJS$       @C@@@@@@@@@^EDLOAD$     @C@@@@@@@@C@EQUIP$      @C@@@@@@@@@FZL
)@@G@@ERROR$$     @C@@@@@@@@C[ERRPR$      @C@@@@@@@@]]ERR$        @C@@@@@@@@@)ZM
)@@G@@EXIT$       @C@@@@@@@@@DEXSNP$      @C@@@@@@@@[UEX$CRD      @C@@@@@@@@K$ZN
)@@G@@FACIL$      @C@@@@@@@@[GFACIT$      @C@@@@@@@@[<FAC$$       @C@@@@@@@@C@ZO
)@@G@@FBLKSX$     @C@@@@@@@@@ FCREG$      @C@@@@@@@@K>FC$SSN      @C@@@@@@@@K<ZP
)@@G@@FEQP$       @C@@@@@@@@@CFFILEX$     @C@@@@@@@@@^FFORK$      @C@@@@@@@@[TZQ
)@@G@@FITEM$      @C@@@@@@@@@UFL$BOX      @C@@@@@@@@K,FORK$       @C@@@@@@@@@FZR
)@@G@@FREELX$     @C@@@@@@@@@AFSF$        @C@@@@@@@@@%FS$REC      @C@@@@@@@@K;ZS
)@@G@@GW$         @C@@@@@@@@@HIALL$       @C@@@@@@@@[[IALL$$      @C@@@@@@@@C]ZT
)@@G@@IDENT$      @C@@@@@@@@@WII$         @C@@@@@@@@@RIMI$        @C@@@@@@@@[9ZU
)@@G@@INFILE$     @C@@@@@@@@@#INFO$       @C@@@@@@@@[IINT$        @C@@@@@@@@@VZV
)@@G@@IOADH$      @C@@@@@@@@]AIOARB$      @C@@@@@@@@@LIOAXI$      @C@@@@@@@@@KZW
)@@G@@IODYA$      @C@@@@@@@@@ IOI$        @C@@@@@@@@@]IOLNK$      @C@@@@@@@@] ZX
)@@G@@IOWI$       @C@@@@@@@@@OIOW$        @C@@@@@@@@@#IOXI$       @C@@@@@@@@@PZY
)@@G@@IO$         @C@@@@@@@@@[LABEL$      @C@@@@@@@@@TLCORE$      @C@@@@@@@@@=ZZ
)@@G@@LEVEL$      @C@@@@@@@@]BLNAME$      @C@@@@@@@@@DLOAD$       @C@@@@@@@@[DAA
)@@G@@LOG$        @C@@@@@@@@]CMB$         @C@@@@@@@@@(MCORE$      @C@@@@@@@@@<AB
)@@G@@MCSTAT$     @C@@@@@@@@@GMCT$        @C@@@@@@@@@-ME$GET      @C@@@@@@@@K3AC
)@@G@@MF$         @C@@@@@@@@@*MODE$       @C@@@@@@@@@EMSALL$      @C@@@@@@@@@0AD
)@@G@@MSCON$      @C@@@@@@@@[PMSSUM$      @C@@@@@@@@[0MS$         @C@@@@@@@@@!AE
)@@G@@MUSER$      @C@@@@@@@@@)NAME$       @C@@@@@@@@[&NRT$        @C@@@@@@@@@2AF
)@@G@@OPT$        @C@@@@@@@@@3PB$CON      @C@@@@@@@@K]PB$DIS      @C@@@@@@@@K#AG
)@@G@@PCHCA$      @C@@@@@@@@[5PCHCN$      @C@@@@@@@@[4PCTBD$      @C@@@@@@@@@[AH
)@@G@@PCT$        @C@@@@@@@@@4PFD$        @C@@@@@@@@[APFI$        @C@@@@@@@@[^AI
)@@G@@PFS$        @C@@@@@@@@[ PFTEXT$     @C@@@@@@@@W@PFUWL$      @C@@@@@@@@[BAJ
)@@G@@PFWL$       @C@@@@@@@@[CPI$NIT      @C@@@@@@@@K@PNCHA$      @C@@@@@@@@[>AK
)@@G@@PRINT$      @C@@@@@@@@@IPRIV$       @C@@@@@@@@]OPRMDB$      @C@@@@@@@@]KAL
)@@G@@PRMGA$      @C@@@@@@@@]JPRNTA$      @C@@@@@@@@[=PRTCA$      @C@@@@@@@@[!AM
)@@G@@PRTCN$      @C@@@@@@@@[ZPSA$        @C@@@@@@@@@UPSF$        @C@@@@@@@@@VAN
)@@G@@PSR$        @C@@@@@@@@[\PTTRAP$     @C@@@@@@@@)^PT$MN8      @C@@@@@@@@@DAO
)@@G@@PUALT$      @C@@@@@@@@@CPUNCH$      @C@@@@@@@@[SRB$         @C@@@@@@@@@LAP
)@@G@@RDL$        @C@@@@@@@@@PREADA$      @C@@@@@@@@@+READ$       @C@@@@@@@@@HAQ
)@@G@@RECEV$      @C@@@@@@@@)#REL$        @C@@@@@@@@@NREP$BIT     @C@@@@@C@@@@AR
)@@G@@REWI$       @C@@@@@@@@@-REW$        @C@@@@@@@@@)RLIB$       @C@@@@041082AS
)@@G@@RL$BAK      @C@@@@@@@@K.ROUTE$      @C@@@@@@@@[VRPCTA$      @C@@@@@@@_8@AT
)@@G@@RR$         @C@@@@@@@@@MRSAGAW$     @C@@@@@@@@@&RSBAT$      @C@@@@@@@@@)AU
)@@G@@RSCNTL$     @C@@@@@@@@@DRSDEM$      @C@@@@@@@@@*RSGAW$      @C@@@@@@@@@/AV
)@@G@@RSGDEM$     @C@@@@@@@@@=RSGET$      @C@@@@@@@@@KRSGIO$      @C@@@@@@@@@.AW
)@@G@@RSGPR$      @C@@@@@@@@@MRSGPU$      @C@@@@@@@@@LRSGTA$      @C@@@@@@@@@8AX
)@@G@@RSGTI$      @C@@@@@@@@@3RSGTW$      @C@@@@@@@@@4RSI$        @C@@@@@@@@[EAY
)@@G@@RSNOT$      @C@@@@@@@@@5RSPLST$     @C@@@@@@@@@>RSPUN$      @C@@@@@@@@@-AZ
)@@G@@RSPUT$      @C@@@@@@@@@CRSTRA$      @C@@@@@@@@@1RSTRD$      @C@@@@@@@@@#BA
)@@G@@RSTRM$      @C@@@@@@@@@0RSTRO$      @C@@@@@@@@@]RSTRY$      @C@@@@@@@@@[BB
)@@G@@RSWAP$      @C@@@@@@@@[XRTN$        @C@@@@@@@@K7RT$         @C@@@@@@@@@1BC
)@@G@@RT$INT      @C@@@@@@@@K^RT$OUT      @C@@@@@@@@K RT$PSD      @C@@@@@@@@K1BD
)@@G@@RT$PSI      @C@@@@@@@@K0RT$PSS      @C@@@@@@@@L[RT$SCH      @C@@@@@@@@K)BE
)@@G@@RT$TRS      @C@@@@@@@@KBR$          @C@@@@@@@@@KSABORT$     @C@@@@@@@@]PBF
)@@G@@SCRB$       @C@@@@@@@@@=SCR$        @C@@@@@@@@@<SDEL$       @C@@@@@@@@]MBG
)@@G@@SD$         @C@@@@@@@@@WSEND$       @C@@@@@@@@)]SETBP$      @C@@@@@@@@[,BH
)@@G@@SETC$       @C@@@@@@@@@5SIO$        @C@@@@@@@@][SITID$      @C@@@@@@@@@]BI
)@@G@@SMU$        @C@@@@@@@@]DSM$         @C@@@@@@@@@+SNAP$       @C@@@@@@@@[QBJ
)@@G@@SPRNT$      @C@@@@@@@@]NSRD$        @C@@@@@@@@@YSREG$       @C@@@@@@@@]FBK
)@@G@@STAB$       @C@@@@@@@@]ISTATUS$     @C@@@@@@@@)DSUMOD$      @C@@@@@@@@]HBL
)@@G@@SUP$        @C@@@@@@@@@BSUVAL$      @C@@@@@@@@]GSWAIT$      @C@@@@@@@@[#BM
)@@G@@SWTCH$      @C@@@@@@@@[RSW$         @C@@@@@@@@@FSYMB$       @C@@@@@@@@]@BN
)@@G@@SYSBAL$     @C@@@@@@@@["SYSER$      @C@@@@@@@@]#TCORE$      @C@@@@@@@@K8BO
)@@G@@TDATE$      @C@@@@@@@@@?TFORK$      @C@@@@@@@@@GTIME$       @C@@@@@@@@@NBP
)@@G@@TINTL$      @C@@@@@@@@[YTLBL$       @C@@@@@@@@[+TPFLG$      @C@@@@@@@@K2BQ
)@@G@@TPLIB$      @C@@@@@@@@K4TPLOG$      @C@@@@@@@@KVTREAD$      @C@@@@@@@@[]BR
)@@G@@TRMRG$      @C@@@@@@@@[KTRTIM$      @C@@@@@@@@K\TRUN$       @C@@@@@@@@@]BS
)@@G@@TSA$        @C@@@@@@@@@STSF$        @C@@@@@@@@@TTSQCL$      @C@@@@@@@@[FBT
)@@G@@TSQRG$      @C@@@@@@@@[LTSWAP$      @C@@@@@@@@[XTWAIT$      @C@@@@@@@@@0BU
)@@G@@UK$ONS      @C@@@@@@@@KWUNLCK$      @C@@@@@@@@@7UNL$        @C@@@@@@@@@QBV
)@@G@@UNTR$       @C@@@@@@@@@^UO$AND      @C@@@@@@@@KXUO$GET      @C@@@@@@@@KYBW
)@@G@@UO$OR       @C@@@@@@@@KZUSER$       @C@@@@@@@@[_USRID$      @C@@@@@@@@@[BX
)@@G@@UT$DEL      @C@@@@@@@@KQUT$EAQ      @C@@@@@@@@KMUT$ERQ      @C@@@@@@@@KNBY
)@@G@@UT$TIM      @C@@@@@@@@KRUT$UPA      @C@@@@@@@@KOUT$UPR      @C@@@@@@@@KPBZ
)@@G@@WAIT$       @C@@@@@@@@@AWALL$       @C@@@@@@@@@ZWANY$       @C@@@@@@@@@BCA
)@@G@@WEF$        @C@@@@@@@@@DWML$        @C@@@@@@@@)@W$          @C@@@@@@@@@CCB
)@@G@@W$R$        @C@@@@@@@@@>XCTS$       @C@@@@@@@@[2XFR$        @C@@@@@@@@K5CC
)@@G@@XRS$        @C@@@@@@@@K9OG ENTRY (FIXED DECIMAL) ;    @^@@@@-0/164,164  CD
)@@G@@ CU2800-AN  @A@@@@ DECLARE 1 LOG STATIC EXTERNAL)@@[U@@@E@@@@FC@[H[#F^C@CE
)@@G@@[ IAG@[:M?@@[+P,[@[!S'@@[-W:B_@\Z,@_@/+.[]@@@@__@@@@@@AA@@@@)@F[M*@@@)@@CF
)@@G@@@@@@@@/K@@@ON?L@@@Q8W@@@A^/@@ A@?@@^A^W@@#^@)^@)      @@[@@@@B^@[AAB@@@@CG
)@@G@@)@O[N@^@K[@@@@@@@@/KF@@@M#/)@@&;0@@[O@)@@GC@0@@#C8J@@HQ^1@@@R^\@@EC*1@@]CH
)@@G@@/\0@@2AC@@@@)@Y[]^[@K@K@)@>@M@R@?@@^9?K@@]/K@@@>Q^L@@#C8[@@@/\0@@:/K@@@>CI
)@@G@@/\0@@2Q8W@@@A^W@@#AD@@@@)@$[U@@K)@@@/KJ@@@C@[@@[ )[@@]'=@@@@*)[@@]C8@@@[CJ
)@@G@@[@[@@[/KF@@@[^?@@ [@W@@^Q^/@@ AE@@@@)@2[UK[@@[@@C@)@@G/K@@@ON?L@@@/KJ@@@CK
)@@G@@/\,@@][C-@@ C@-@@F/^)@@8CC-@@ /K@@@9(^[@@]AF@@@@)@.[U@@@@@@@[K<@@@[W<@@@CL
)@@G@@/?+@@@O80@@[[O<@@@/KF@@@')])@@E/,@@@/\_@@^*^[@@]C@1@@FAG@@@@)[C[UK@@@K@@CM
)@@G@@/?)@[E[=<@@@[*<@@@[?<@@@[0<@@@[4<@@@/?+@@@O80@@[[)<@@@/?)@[#[S<@@@AH@@@@CN
)@@G@@@@^@@^@@C@@[@@E@@D@@,@@]@@E@@@@@@@[N)@@@@@@@@@@@PSR$        AECHAR$     CO
)@@G@@@@[@@@@@@@@/AEDITX$     @@[@@@@@@@@+ECHAR$      @@[@@@@@@@@/ECLEAR$     CP
)@@G@@@@[@@@@@@@@'ECLR$$      @@[@@@@@@@@OEDITR$      @@[@@@@@@@@YEDITX$      CQ
)@@G@@@@[@@@@@@@@+EDIT$       @@[@@@@@@@@JE$CHAR$     @@[@@@@@@@@@@@@@@@@@@@@@CR
)@@G@@D@@@@@@[@@@@@@@@@@@@@@@@D@@@@@@#@@@@E LEVEL     *[S@@@*SDFF*@#@@@@NOT SYCS
)@@G@@S$*RLIB$.   ___@@@@@@@@@@@@@@@@@@@@@@@C@@@SAVE$LOAD   @@@@@]@@@@@@@@@@@@CT
)@@G@@@@@@@@@@@[F7@@@[F7@@@[B^@@@^PQ@@@@@@@@@@@@@@@[A,TPF$        ADDIT       CU
)@@G@@*MASM*[@^DA!#@@@@@LIJSUBMH@__SC)E@@@[@]DA!@@@K@BK@D@@@[@ADX0D@@C9'G$$DIACV
)@@G@@#@#@[6@^A@[6K @@@@C)E@@@[@]DX0@@@K@BK@D@@@[@AC71D@@@@@G$$R59#@#@]&@#D@]*CW
)@@G@@K @@@@[@^D]##@@@@@UNTIL MH@__8[@ DVY#)@C71OUTIDLE     K @@@^C)E@@@[@]DVYCX
)@@G@@@@@K@BK@D@@@[@AC9]D@@@@@REPEAT#@#@]&@@6@]&K @@@@[@^C'!#@@@@@SIGNALMH@__>CY
)@@G@@[@^C9)#@@C9]GEQ   K @@@^[@^C7T#@@@@@NOSAVEMH@__Y[@^C8%#@@@@@IN    MH@__"CZ
)@@G@@[@ C;D#)@C7TSUBROUTINE  MH@__%[@^D#U#@@C8%EVENP K @@@D[@^D$<#@@@@@G$JMSKDA
)@@G@@LBI@@@C)E@@@[@]D$<@@@K@BK@D@@@[@AC75D@@D#UG$$T15#@#@#]@]N@# K @@@@[@^DDJDB
)@@G@@#@@@@@VARY  MH@__7C)E@@@[@]DDJ@@@K@BK@D@@@[@AD=RD@@C75BEGIN #@#@[;@@6@[;DC
)@@G@@K @@@@C)E@@@[@]D=R@@@K@BK@D@@@[@AC96D@@DDJAREAD$#@#@]9@@6@]9K @@[6[@^DLADD
)@@G@@#@@@@@DBANK MH@__TC)E@@@[@]DLA@@@K@BK@D@@@[@ADNOD@@C96G$$I05#@#@]I@[B@]JDE
)@@G@@K @@@@C)E@@@[@]DNO@@@K@BK@D@@@[@AD=:D@@DLAG$$I20#@#@]N@]!@]OK @@@@C)E@@@DF
)@@G@@[@]D=:@@@K@BK@D@@@[@AC;[D@@DNOG$$D10#@#@]9@^W@]9K @@@@[@^DJP#@@@@@SPANS DG
)@@G@@K @@@BC)E@@@[@]DJP@@@K@BK@D@@@[@ADS_D@@C;[G$$B10#@#@[;@#X@][K @@@@C)E@@@DH
)@@G@@[@]DS_@@@K@BK@D@@@[@AD#=D@@DJPG$$C40#@#@]R@^H@]WK @@@@C)C@@@[@[D#=@@@@@BDI
)@@G@@[@ C./A@@@@@G$NOFO0@@@@#@@@@@[[@^D=L#@@D#=POS   K @@@[C)E@@@[@]D=L@@@K@BDJ
)@@G@@K@D@@@[@AC8ID@@@@@TREAD$#@#@]9@@6@]9K @@[][@^C;H#@@@@@BY    MH@__1[@^D#YDK
)@@G@@#@@C8IODDP  K @@@E[@ADTL#@@@@@G$UMSKL^@@@@@@@___[^LK@[C)E@@@[@]DTL@@@K@BDL
)@@G@@K@D@@@[@AC'.D@@D#YG$$PJT#@#@]+@@6@]+K @@@@[@^DAP#@@@@@LEQ   K @@@AC)E@@@DM
)@@G@@[@]DAP@@@K@BK@D@@@[@AD>$D@@C'.G$$IFL#@#@[6@[\@[6K @@@#C)E@@@[@]D>$@@@K@BDN
)@@G@@K@D@@@[@AD$(D@@DAPG$$COD#@#@]_@@6@]_K @@@@C)E@@@[@]D$(@@@K@BK@D@@@[@AC9MDO
)@@G@@D@@@@@G$$T16#@#@#]@#8@# K @@@@[@ C7P#)@@@@CHANNEL     MH@__-[@^C7-#@@@@@DP
)@@G@@G$UOM K @@@[[@^D$\#@@@@@THEN  MH@__/C)E@@@[@]D$\@@@K@BK@D@@@[@ADZOD@@C7-DQ
)@@G@@G$$T20#@#@#]@ S@# K @@@@C)E@@@[@]DZO@@@K@BK@D@@@[@AD= D@@@@@ESCAPE#@#@]?DR
)@@G@@@@6@]?K @@@@C)E@@@[@]D= @@@K@BK@D@@@[@AD>!D@@@@@READ$ #@#@]9@@6@]9K @@@HDS
)@@G@@C)E@@@[@]D>!@@@K@BK@D@@@[@AD%ND@@D= G$$G10#@#@]_@[;@#[K @@@@C)E@@@[@]D%NDT
)@@G@@@@@K@BK@D@@@[@AD0JD@@D>!G$$T99#@#@#]@ C@#BK @@@@C)E@@@[@]D0J@@@K@BK@D@@@DU
)@@G@@[@AD\DD@@D%NG$$L40#@#@#D@@+@#MK @@@@C)E@@@[@]D\D@@@K@BK@D@@@[@AC;TD@@@@@DV
)@@G@@G$$L39#@#@#D@^"@#LK @@@@[@^D@U#@@@@@DNEQ  K @@@G[@^DS9#@@C;TOFLO  K @@@[DW
)@@G@@C)E@@@[@]DS9@@@K@BK@D@@@[@ADJ4D@@D@UG$$C29#@#@]R@#U@]WK @@@@C)E@@@[@]DJ4DX
)@@G@@@@@K@BK@D@@@[@AD%ZD@@@@@BASE  #@#@]D@@6@]DK @@@@C)E@@@[@]D%Z@@@K@BK@D@@@DY
)@@G@@[@AC84D@@DJ4G$$L01#@#@#D@#'@#EK @@@@[@ D[6#)@@@@CONTINGENCY MH@__*[@^DA$DZ
)@@G@@#@@C84INBUSYK @@@[C)E@@@[@]DA$@@@K@BK@D@@@[@AD[RD@@D[6G$$TFL#@#@[6@#$@[6EA
)@@G@@K @@@^[@^C'P#@@@@@SHIFT K @@@[[@^D&R#@@D[REQ    K @@@[C)E@@@[@]D&R@@@K@BEB
)@@G@@K@D@@@[@AD,.D@@C'PG$$T13#@#@#]@^D@#^K @@@@C)E@@@[@]D,.@@@K@BK@D@@@[@AD==EC
)@@G@@D@@D&RG$$L34#@#@#D@]I@#LK @@@@C)F@@@[@]D==@@@K@DK@F@@@[@BC;>D)@@@@ATREADED
)@@G@@$     #@#@]9@@6@]9K @@[8[@^C"@#@@@@@ALT   K @@@I[@^C8E#@@C;>NEG   K @@@]EE
)@@G@@[@^DJV#@@@@@TO    MH@__2C)E@@@[@]DJV@@@K@BK@D@@@[@ADNCD@@C8EENDBEG#@#@]#EF
)@@G@@@@6@]#K @@@@C)E@@@[@]DNC@@@K@BK@D@@@[@AC7JD@@DJVELSE  #@#@]M@@6@]MK @@@@EG
)@@G@@C)E@@@[@]C7J@@@K@DK@F@@@[@AD@YD)@@@@STRUC$OMN   @@]@[2@@6@[2[@^D@+#@@C7JEH
)@@G@@NOFLO K @@@][@^C7.#@@D@YCARRY K @@@#[@^DZ3#@@@@@TLEM  MH@__5C)E@@@[@]DZ3EI
)@@G@@@@@K@BK@D@@@[@AC7XD@@C7.G$$Z10#@#@]\@[[@]0K @@@@[@^D#Q#@@@@@IS    MH@__.EJ
)@@G@@[@^C'(#@@C7XG$JXMALBI/@@[@^D4S#@@D#QGE    K @@@^C)E@@@[@]D4S@@@K@BK@D@@@EK
)@@G@@[@ADTFD@@C'(G$$L70#@#@#R@[_@#TK @@@@C)E@@@[@]DTF@@@K@BK@D@@@[@AC8.D@@@@@EL
)@@G@@G$$C60#@#@]Y@[,@]ZK @@@@[@ DNU#)@@@@POINTER     MH@__&C)F@@@[@]DNU@@@K@DEM
)@@G@@K@F@@@[@BD5!D)@C8.CASENTRY    #@#@]R@@6@]RK @@@@C)F@@@[@]D5!@@@K@DK@F@@@EN
)@@G@@[@BD%>D)@DNUG$$DCU1     #@#@#W@[S@#ZK @@@@C)E@@@[@]D%>@@@K@BK@D@@@[@ADT EO
)@@G@@D@@@@@G$$L02#@#@#D@]J@#FK @@@@C)E@@@[@]DT @@@K@BK@D@@@[@ADZCD@@@@@CASE  EP
)@@G@@#@#@]Y@@6@]YK @@@@C)E@@@[@]DZC@@@K@BK@D@@@[@AD5-D@@DT G$$R69#@#@]&@],@](EQ
)@@G@@K @@@@C)E@@@[@]D5-@@@K@BK@D@@@[@AC8YD@@DZCG$$DCU#@#@#W@@6@#WK @@@@[@^C9"ER
)@@G@@#@@@@@WHEN  MH@__![@^C".#@@C8YLDJSUBMH@__R[@^B8Q#@@C9"ODD   K @@@AC)B@@@ES
)@@G@@[@[B8Q@@@C@B[@^DAV]@@C".G$FJ  @@@B8UC)B@@@[@]B8U@@@C@#C@ @@@#)#B.G@@@B8XET
)@@G@@@@AB8QC)B@@@[@]B.G@@@C@#C@ @@@]@#B/,+@AB8U@@@B.JC)B@@@[@]B.J@@@C@#C@ @@@EU
)@@G@@#)#B.0@@@B.M@@AB.GC)B@@@[@]B.0@@@C@#C@ @@@]@#B.%+@AB.J@@@B.3C)B@@@[@]B.3EV
)@@G@@@@@C@#C@ @@@#)#D##@@@D##@@[B.0C)A@@@[@[D##@@@C@#]@#B.%<@[B.3K @@JUC)B@@@EW
)@@G@@[@]B.%@@@C@#C@ @@@]@#B.=+@ B.0@@@B.!C)B@@@[@]B.!@@@C@#C@ @@@#)#D#@@@@D#@EX
)@@G@@@@[B.%C)A@@@[@[D#@@@@C@#]@#B.=<@[B.!K @@JUC)B@@@[@]B.=@@@C@#C@ @@@]@#B.YEY
)@@G@@+@^B.%@@@B.$C)B@@@[@]B.$@@@C@#C@ @@@#)#D].@@@D].@@[B.=C)A@@@[@[D].@@@C@#EZ
)@@G@@]@#B.Y<@[B.$K @@JQC)B@@@[@]B.Y@@@C@#C@ @@@]@#B.S+@#B.=@@@B.-C)B@@@[@]B.-FA
)@@G@@@@@C@#C@ @@@#)#D]'@@@D]'@@[B.YC)A@@@[@[D]'@@@C@#]@#B.S<@[B.-K @@JQC)B@@@FB
)@@G@@[@]B.S@@@C@#C@ @@@]@#B.M+@]B.Y@@@B.VC)B@@@[@]B.V@@@C@#C@ @@@#)#D]7@@@D]7FC
)@@G@@@@[B.SC)A@@@[@[D]7@@@C@#]@#B.M<@[B.VK @@JMC)B@@@[@]B.M@@@C@#C@ @@@]@#B/,FD
)@@G@@+@[B.S@@@B.PC)B@@@[@]B.P@@@C@#C@ @@@#)#D]4@@@D]4@@[B.MC)A@@@[@[D]4@@@C@#FE
)@@G@@]@#B/,<@[B.PK @@JMC)B@@@[@]B/,@@@C@#C@ @@@]@#B/^+@ B.G@@@B/1C)B@@@[@]B/1FF
)@@G@@@@@C@#C@ @@@#)#B/'@@@B/4@@]B/,C)B@@@[@]B/'@@@C@#C@ @@@]@#B/4+@]B/1@@@B/.FG
)@@G@@C)B@@@[@]B/.@@@C@#C@ @@@#)#D[%@@@D[%@@[B/'C)A@@@[@[D[%@@@C@#]@#B/4<@[B/.FH
)@@G@@K @@@]C)B@@@[@]B/4@@@C@#C@ @@@]@#B/^+@[B/'@@@B/7C)B@@@[@]B/7@@@C@#C@ @@@FI
)@@G@@#)#D[$@@@D[$@@[B/4C)A@@@[@[D[$@@@C@#]@#B/^<@[B/7K @@@#C)B@@@[@]B/^@@@C@#FJ
)@@G@@C@ @@@]@#B;]+@^B/,@@@B/BC)B@@@[@]B/B@@@C@#C@ @@@#)#B/W@@@B/E@@^B/^C)B@@@FK
)@@G@@[@]B/W@@@C@#C@ @@@]@#B/Q+@^B/B@@@B/ZC)B@@@[@]B/Z@@@C@#C@ @@@#)#D[F@@@D[FFL
)@@G@@@@[B/WC)A@@@[@[D[F@@@C@#]@#B/Q<@[B/ZK @@@IC)B@@@[@]B/Q@@@C@#C@ @@@]@#B/KFM
)@@G@@+@#B/W@@@B/TC)B@@@[@]B/T@@@C@#C@ @@@#)#D[C@@@D[C@@[B/QC)A@@@[@[D[C@@@C@#FN
)@@G@@]@#B/K<@[B/TK @@@JC)B@@@[@]B/K@@@C@#C@ @@@]@#B/E+@]B/Q@@@B/NC)B@@@[@]B/NFO
)@@G@@@@@C@#C@ @@@#)#D[ @@@D[ @@[B/KC)A@@@[@[D[ @@@C@#]@#B/E<@[B/NK @@@GC)B@@@FP
)@@G@@[@]B/E@@@C@#C@ @@@]@#B;]+@[B/K@@@B/HC)B@@@[@]B/H@@@C@#C@ @@@#)#D[]@@@D[]FQ
)@@G@@@@[B/EC)A@@@[@[D[]@@@C@#]@#B;]<@[B/HK @@@HC)B@@@[@]B;]@@@C@#C@ @@@]@#B'SFR
)@@G@@+@#B/^@@@B; C)B@@@[@]B; @@@C@#C@ @@@#)#B;2@@@B;O@@CB;]C)B@@@[@]B;2@@@C@#FS
)@@G@@C@ @@@]@#B;?+@CB; @@@B;5C)B@@@[@]B;5@@@C@#C@ @@@#)#D@I@@@D@I@@[B;2C)A@@@FT
)@@G@@[@[D@I@@@C@#]@#B;?<@[B;5K @@IYC)B@@@[@]B;?@@@C@#C@ @@@]@#B;&+@BB;2@@@B;\FU
)@@G@@C)B@@@[@]B;\@@@C@#C@ @@@#)#D@F@@@D@F@@[B;?C)A@@@[@[D@F@@@C@#]@#B;&<@[B;\FV
)@@G@@K @@IYC)B@@@[@]B;&@@@C@#C@ @@@]@#B;)+@AB;?@@@B;(C)B@@@[@]B;(@@@C@#C@ @@@FW
)@@G@@#)#D@C@@@D@C@@[B;&C)A@@@[@[D@C@@@C@#]@#B;)<@[B;(K @@@CC)B@@@[@]B;)@@@C@#FX
)@@G@@C@ @@@]@#B;I+@ B;&@@@B;<C)B@@@[@]B;<@@@C@#C@ @@@#)#D@ @@@D@ @@[B;)C)A@@@FY
)@@G@@[@[D@ @@@C@#]@#B;I<@[B;<K @@@DC)B@@@[@]B;I@@@C@#C@ @@@]@#B;C+@^B;)@@@B;LFZ
)@@G@@C)B@@@[@]B;L@@@C@#C@ @@@#)#C_/@@@C_/@@[B;IC)A@@@[@[C_/@@@C@#]@#B;C<@[B;LGA
)@@G@@K @@@@C)B@@@[@]B;C@@@C@#C@ @@@]@#B;U+@#B;I@@@B;FC)B@@@[@]B;F@@@C@#C@ @@@GB
)@@G@@#)#C_9@@@C_9@@[B;CC)A@@@[@[C_9@@@C@#]@#B;U<@[B;FK @@@[C)B@@@[@]B;U@@@C@#GC
)@@G@@C@ @@@]@#B;O+@]B;C@@@B;XC)B@@@[@]B;X@@@C@#C@ @@@#)#D@]@@@D@]@@[B;UC)A@@@GD
)@@G@@[@[D@]@@@C@#]@#B;O<@[B;XK @@@]C)B@@@[@]B;O@@@C@#C@ @@@]@#B'S+@[B;U@@@B;RGE
)@@G@@C)B@@@[@]B;R@@@C@#C@ @@@#)#C__@@@C__@@[B;OC)A@@@[@[C__@@@C@#]@#B'S<@[B;RGF
)@@G@@K @@@#C)B@@@[@]B'S@@@C@#C@ @@@]@#B8X+@]B;]@@@B'VC)B@@@[@]B'V@@@C@#C@ @@@GG
)@@G@@#)#B'=@@@B'%@@^B'SC)B@@@[@]B'=@@@C@#C@ @@@]@#B'Y+@^B'V@@@B'$C)B@@@[@]B'$GH
)@@G@@@@@C@#C@ @@@#)#C"$@@@C"$@@[B'=C)A@@@[@[C"$@@@C@#]@#B'Y<@[B'$K @@@(C)B@@@GI
)@@G@@[@]B'Y@@@C@#C@ @@@]@#B'0+@#B'=@@@B'-C)B@@@[@]B'-@@@C@#C@ @@@#)#C"=@@@C"=GJ
)@@G@@@@[B'YC)A@@@[@[C"=@@@C@#]@#B'0<@[B'-K @@@*C)B@@@[@]B'0@@@C@#C@ @@@]@#B'%GK
)@@G@@+@]B'Y@@@B'3C)B@@@[@]B'3@@@C@#C@ @@@#)#C"!@@@C"!@@[B'0C)A@@@[@[C"!@@@C@#GL
)@@G@@]@#B'%<@[B'3K @@@1C)B@@@[@]B'%@@@C@#C@ @@@]@#B8X+@[B'0@@@B'!C)B@@@[@]B'!GM
)@@G@@@@@C@#C@ @@@#)#C"%@@@C"%@@[B'%C)A@@@[@[C"%@@@C@#]@#B8X<@[B'!K @@@0C)B@@@GN
)@@G@@[@]B8X@@@C@#C@ @@@]@#DAV+@[B'S@@@B8)C)B@@@[@]B8)@@@C@#C@ @@@#)#B91@@@B8<GO
)@@G@@@@IB8XC)B@@@[@]B91@@@C@#C@ @@@]@#B9:+@IB8)@@@B94C)B@@@[@]B94@@@C@#C@ @@@GP
)@@G@@#)#C.0@@@C.0@@[B91C)A@@@[@[C.0@@@C@#]@#B9:<@[B94K @@@1C)B@@@[@]B9:@@@C@#GQ
)@@G@@C@ @@@]@#B9>+@HB91@@@B9,C)B@@@[@]B9,@@@C@#C@ @@@#)#C.!@@@C.!@@[B9:C)A@@@GR
)@@G@@[@[C.!@@@C@#]@#B9><@[B9,K @@@0C)B@@@[@]B9>@@@C@#C@ @@@]@#B9Z+@GB9:@@@B9*GS
)@@G@@C)B@@@[@]B9*@@@C@#C@ @@@#)#C.%@@@C.$@@]B9>C)A@@@[@[C.%@@@C@#]@#C.$<@]B9*GT
)@@G@@K @@@@C)A@@@[@[C.$@@@C@#]@#B9Z<@[C.%K @@IZC)B@@@[@]B9Z@@@C@#C@ @@@]@#B9TGU
)@@G@@+@FB9>@@@B9+C)B@@@[@]B9+@@@C@#C@ @@@#)#C.=@@@C.-@@]B9ZC)A@@@[@[C.=@@@C@#GV
)@@G@@]@#C.-<@]B9+K @@@@C)A@@@[@[C.-@@@C@#]@#B9T<@[C.=K @@IZC)B@@@[@]B9T@@@C@#GW
)@@G@@C@ @@@]@#B9N+@EB9Z@@@B9WC)B@@@[@]B9W@@@C@#C@ @@@#)#C.Y@@@C.Y@@[B9TC)A@@@GX
)@@G@@[@[C.Y@@@C@#]@#B9N<@[B9WK @@@>C)B@@@[@]B9N@@@C@#C@ @@@]@#B9H+@DB9T@@@B9QGY
)@@G@@C)B@@@[@]B9Q@@@C@#C@ @@@#)#C.V@@@C.V@@[B9NC)A@@@[@[C.V@@@C@#]@#B9H<@[B9QGZ
)@@G@@K @@@=C)B@@@[@]B9H@@@C@#C@ @@@]@#B9B+@CB9N@@@B9KC)B@@@[@]B9K@@@C@#C@ @@@HA
)@@G@@#)#C.S@@@C.S@@[B9HC)A@@@[@[C.S@@@C@#]@#B9B<@[B9KK @@@\C)B@@@[@]B9B@@@C@#HB
)@@G@@C@ @@@]@#B85+@BB9H@@@B9EC)B@@@[@]B9E@@@C@#C@ @@@#)#C.P@@@C.P@@[B9BC)A@@@HC
)@@G@@[@[C.P@@@C@#]@#B85<@[B9EK @@@,C)B@@@[@]B85@@@C@#C@ @@@]@#B8\+@AB9B@@@B88HD
)@@G@@C)B@@@[@]B88@@@C@#C@ @@@#)#C.G@@@C.D@@]B85C)A@@@[@[C.G@@@C@#]@#C.D<@]B88HE
)@@G@@K @@@:C)A@@@[@[C.D@@@C@#]@#B8\<@[C.GK @@@!C)B@@@[@]B8\@@@C@#C@ @@@]@#B9[HF
)@@G@@+@ B85@@@B82C)B@@@[@]B82@@@C@#C@ @@@#)#C.A@@@C.#@@]B8\C)A@@@[@[C.A@@@C@#HG
)@@G@@]@#C.#<@]B82K @@@:C)A@@@[@[C.#@@@C@#]@#B9[<@[C.AK @@@!C)B@@@[@]B9[@@@C@#HH
)@@G@@C@ @@@]@#B8;+@^B8\@@@B9^C)B@@@[@]B9^@@@C@#C@ @@@#)#C.M@@@C.M@@[B9[C)A@@@HI
)@@G@@[@[C.M@@@C@#]@#B8;<@[B9^K @@@?C)B@@@[@]B8;@@@C@#C@ @@@]@#B8(+@#B9[@@@B8"HJ
)@@G@@C)B@@@[@]B8"@@@C@#C@ @@@#)#C.J@@@C.J@@[B8;C)A@@@[@[C.J@@@C@#]@#B8(<@[B8"HK
)@@G@@K @@@!C)B@@@[@]B8(@@@C@#C@ @@@]@#B8<+@]B8;@@@B8?C)B@@@[@]B8?@@@C@#C@ @@@HL
)@@G@@#)#C.@@@@C.@@@[B8(C)A@@@[@[C.@@@@C@#]@#B8<<@[B8?K @@@:C)B@@@[@]B8<@@@C@#HM
)@@G@@C@ @@@]@#DAV+@[B8(@@@B8&C)B@@@[@]B8&@@@C@#C@ @@@#)#C/.@@@C/.@@[B8<C)A@@@HN
)@@G@@[@[C/.@@@C@#]@#DAV<@[B8&K @@@%C)E@@@[@]DAV@@@K@BK@D@@@[@AC8 D@@@@@G$$EFLHO
)@@G@@#@#@[6@]A@[6K @@@[[@ D5U#)@@@@LOOKFOR     MH@__3[@BB.6#)@C8 G$HBITS     HP
)@@G@@L^@@@@@@@)@@[^LK@[C)B@@@[@[B.6@@@C@B[@^C'B]@@@@@G$LCTR@@@B.'C)B@@@[@]B.'HQ
)@@G@@@@@C@#C@ @@@#)#D#J@@@D#J@@[B.6C)A@@@[@[D#J@@@C@#]@#C'B<@[B.'K @@@][@^DURHR
)@@G@@#@@@@@VIA   MH@__PC)F@@@[@]DUR@@@K@DK@F@@@[@BD%BD)@@@@ENDCASE     #@#@]<HS
)@@G@@@@6@]<K @@@@C)E@@@[@]D%B@@@K@BK@D@@@[@AD4YD@@DURG$$T25#@#@#]@]F@#BK @@@@HT
)@@G@@C)E@@@[@]D4Y@@@K@BK@D@@@[@AC9=D@@D%BG$$L80#@#@#R@#3@#TK @@@@[@ C'9#)@@@@HU
)@@G@@EXECSUB     MH@__X[@^D>J#@@C9=LE    K @@@AC)E@@@[@]D>J@@@K@BK@D@@@[@AD EHV
)@@G@@D@@C'9G$$CAN#@#@];@@6@];K @@@@C)C@@@[@[D E@@@@@B[@ D=1A@@@@@G$ERFO0@@@@#HW
)@@G@@CD@[@[C)E@@@[@]D=1@@@K@BK@D@@@[@ADO$D@@D EG$$D20#@#@]9@@<@]'K @@@@C)E@@@HX
)@@G@@[@]DO$@@@K@BK@D@@@[@AC'5D@@@@@G$$C10#@#@]R@^Q@]SK @@@@[@^DCD#@@@@@GT    HY
)@@G@@K @@@ C)E@@@[@]DCD@@@K@BK@D@@@[@AD=7E@@C'5G$$INC#@#@['@@6@['K @@@@C)E@@@HZ
)@@G@@[@]D=7@@@K@BK@D@@@[@AD>PD@@DCDG$$D99#@#@]9@[8@]'K @@@@C)E@@@[@]D>P@@@K@BIA
)@@G@@K@D@@@[@AC79D@@D=7G$$A10#@#@];@^S@].K @@@@[@^D=F#@@@@@JGD   MH@__6C)E@@@IB
)@@G@@[@]D=F@@@K@BK@D@@@[@AB97D@@C79READA$#@#@]9@@6@]9K @@@+C)B@@@[@[B97@@@C@BIC
)@@G@@[@^DJ-]@@@@@G$KSF @@@B9;C)B@@@[@]B9;@@@C@#C@ @@@#)#D#A@@@C.3@@AB97C)A@@@ID
)@@G@@[@[D#A@@@C@#]@#D[!<@AB9;K @@@#C)A@@@[@[D[!@@@C@#]@#D[I<@ D#AK @@@#C)A@@@IE
)@@G@@[@[D[I@@@C@#]@#D@L<@^D[!K @@@[C)A@@@[@[D@L@@@C@#]@#C"0<@#D[IK @@@#C)A@@@IF
)@@G@@[@[C"0@@@C@#]@#C.3<@]D@LK @@@[C)A@@@[@[C.3@@@C@#]@#DJ-<@[C"0K @@@]C)E@@@IG
)@@G@@[@]DJ-@@@K@BK@D@@@[@AD!1D@@B97G$$X01#@#@]#@@,@]AK @@@@C)E@@@[@]D!1@@@K@BIH
)@@G@@K@D@@@[@AC9AD@@DJ-G$$L21#@#@#D@#R@#KK @@@@[@^DX/#@@@@@STACK MH@__=C)E@@@II
)@@G@@[@]DX/@@@K@BK@D@@@[@AD$XD@@C9AG$$R61#@#@]&@ (@]*K @@@@C)E@@@[@]D$X@@@K@BIJ
)@@G@@K@D@@@[@AC9,D@@@@@G$$T14#@#@#]@@,@# K @@@@[@^DA-#@@@@@BASINGMH@__VC)E@@@IK
)@@G@@[@]DA-@@@K@BK@D@@@[@ADJ'D@@C9,G$$DFL#@#@[6@]Z@[6K @@@@C)E@@@[@]DJ'@@@K@BIL
)@@G@@K@D@@@[@AD%HD@@DA-G$$CLD#@#@]F@@6@]FK @@@@C)E@@@[@]D%H@@@K@BK@D@@@[@AD4GIM
)@@G@@D@@@@@G$$T26#@#@#]@#'@#BK @@@@C)E@@@[@]D4G@@@K@BK@D@@@[@AD#MD@@D%HG$$L53IN
)@@G@@#@#@#D@[;@#QK @@@@[@^D ^#@@@@@G$DFLGMH@__"C)E@@@[@]D ^@@@K@BK@D@@@[@AD-9IO
)@@G@@D@@@@@STRUC$#@#@[4@@6@[4K @@@@C)E@@@[@]D-9@@@K@BK@D@@@[@AD%TD@@D ^G$$Z30IP
)@@G@@#@#@]\@@?@]2K @@@@C)E@@@[@]D%T@@@K@BK@D@@@[@AC'KD@@D-9G$$LAN#@#@#D@@6@#DIQ
)@@G@@K @@@@[@ C7(#)@@@@NOCHECKING  MH@__N[@^C"9#@@@@@OR    MH@__'[@^D>3#@@C7(IR
)@@G@@EVEN  K @@@ C)E@@@[@]D>3@@@K@BK@D@@@[@ADW%D@@C"9G$$G20#@#@]_@^\@#[K @@@@IS
)@@G@@C)E@@@[@]DW%@@@K@BK@D@@@[@AC'-D@@@@@G$$R50#@#@]&@ Y@]$K @@@@[@^DJ$#@@DW%IT
)@@G@@LT    K @@@#C)E@@@[@]DJ$@@@K@BK@D@@@[@AC9ID@@@@@G$$X02#@#@]#@[O@]BK @@@@IU
)@@G@@[@^D#(#@@@@@OFFSETMH@__+C)C@@@[@[D#(@@@@@B[@ DZ]A@@C9IG$$FJA0@@@@#[@LK@[IV
)@@G@@C)E@@@[@]DZ]@@@K@BK@D@@@[@AD&FD@@D#(G$$R62#@#@]&@[F@](K @@@@C)E@@@[@]D&FIW
)@@G@@@@@K@BK@D@@@[@ADK@D@@@@@G$$T11#@#@#]@ G@##K @@@@C)E@@@[@]DK@@@@K@BK@D@@@IX
)@@G@@[@AC;PD@@@@@IF    #@#@]I@@6@]IK @@@@[@^D*;#@@DK@DNE   K @@@GC)E@@@[@]D*;IY
)@@G@@@@@K@BK@D@@@[@AD4MD@@@@@G$$T23#@#@#]@#$@#AK @@@@C)E@@@[@]D4M@@@K@BK@D@@@IZ
)@@G@@[@AD5'D@@D*;G$$LGE#@#@#R@@6@#RK @@@@C)E@@@[@]D5'@@@K@BK@D@@@[@ADAJD@@D4MJA
)@@G@@G$$PRB#@#@#-@]K@#-K @@@@C)E@@@[@]DAJ@@@K@BK@D@@@[@AC5HD@@@@@G$$GFL#@#@[6JB
)@@G@@@@6@[6K @@@]C)B@@@[@[C5H@@@C@B[@^C7>]@@@@@G$JBIT@@@C5LC)B@@@[@]C5L@@@C@#JC
)@@G@@C@ @@@#)#D46@@@D4%@@^C5HC)B@@@[@[D46@@@C@#]@^D42<@^C5LK#@@@@@^@@@@C)B@@@JD
)@@G@@[@[D42@@@C@#]@^D4,<@#D46K#@@@@@C@@@@C)B@@@[@[D4,@@@C@#]@^D4%<@]D42K#@@@@JE
)@@G@@@K@@@@C)B@@@[@[D4%@@@C@#]@^C7><@[D4,K#@@@@@)@@@@[@^C"C#@@@@@AND   MH@__;JF
)@@G@@[@^C;-#@@C7>NONZ  K @@@^[@^DZ!#@@@@@AGEQ  K @@@HC)E@@@[@]DZ!@@@K@BK@D@@@JG
)@@G@@[@AC'1D@@@@@ENDREP#@#@]\@@6@]\K @@@][@^C-)#@@@@@GTE   K @@@^C)B@@@[@[C-)JH
)@@G@@@@@C@B[@^D>9]@@C'1G$ALTT@@@C-=C)B@@@[@]C-=@@@C@#C@ @@@#)#D>#@@@D>@@@AC-)JI
)@@G@@C)A@@@[@[D>#@@@C@#]@#D>A<@GC-=K @@@CC)A@@@[@[D>A@@@C@#]@#D>G<@FD>#K @@@BJJ
)@@G@@C)A@@@[@[D>G@@@C@#]@#D>D<@^D>AK @@@[C)A@@@[@[D>D@@@C@#]@#D=.<@#D>GK @@@]JK
)@@G@@C)A@@@[@[D=.@@@C@#]@#D>@<@]D>DK @@@^C)A@@@[@[D>@@@@C@#]@#D>9<@[D=.K @@@#JL
)@@G@@C)E@@@[@]D>9@@@K@BK@D@@@[@AC5OD@@C-)G$$TST#@#@#]@@6@#]K @@@@C)B@@@[@[C5OJM
)@@G@@@@@C@B[@^C']]@@D>9G$XBIT@@@C5SC)B@@@[@]C5S@@@C@#C@ @@@#)#D5A@@@D4'@@^C5OJN
)@@G@@C)B@@@[@[D5A@@@C@#]@^D5]<@^C5SK#@@@@@@[@@@C)B@@@[@[D5]@@@C@#]@^D4"<@#D5AJO
)@@G@@K#@@@@@@]@@@C)B@@@[@[D4"@@@C@#]@^D4'<@]D5]K#@@@@@@^@@@C)B@@@[@[D4'@@@C@#JP
)@@G@@]@^C']<@[D4"K#@@@@@@C@@@[@ D>-#)@@@@REMOTESUB   MH@__QC)E@@@[@]D>-@@@K@BJQ
)@@G@@K@D@@@[@AD&LD@@C']G$$A30#@#@];@]>@]"K @@@@C)E@@@[@]D&L@@@K@BK@D@@@[@ADNIJR
)@@G@@D@@D>-G$$T12#@#@#]@]"@#^K @@@@C)E@@@[@]DNI@@@K@BK@D@@@[@AB9"D@@@@@ENDIF JS
)@@G@@#@#@]N@@6@]NK @@@@C)B@@@[@[B9"@@@C@B[@^D>_]@@@@@G$FCF @@@B']C)B@@@[@]B']JT
)@@G@@@@@C@#C@ @@@#)#D#D@@@C.6@@AB9"C)A@@@[@[D#D@@@C@#]@#D[0<@AB']K @@@_C)A@@@JU
)@@G@@[@[D[0@@@C@#]@#D[L<@ D#DK @@@'C)A@@@[@[D[L@@@C@#]@#D@O<@^D[0K @@@/C)A@@@JV
)@@G@@[@[D@O@@@C@#]@#C"3<@#D[LK @@@/C)A@@@[@[C"3@@@C@#]@#C.6<@]D@OK @@@@C)A@@@JW
)@@G@@[@[C.6@@@C@#]@#D>_<@[C"3K @@@@C)E@@@[@]D>_@@@K@BK@D@@@[@AB7/D@@B9"G$$T01JX
)@@G@@#@#@#]@ #@#]K @@@@C)B@@@[@[B7/@@@C@B[@^C7!]@@@@@G$WS  @@@B8@C)B@@@[@]B8@JY
)@@G@@@@@C@#C@ @@@#)#B.@@@@B8#@@AB7/C)B@@@[@]B.@@@@C@#C@ @@@]@#B/++@AB8@@@@B.#JZ
)@@G@@C)B@@@[@]B.#@@@C@#C@ @@@#)#D]Z@@@D]K@@AB.@C)A@@@[@[D]Z@@@C@#]@#D]W<@AB.#KA
)@@G@@K @@@@C)A@@@[@[D]W@@@C@#]@#D]T<@ D]ZK @@@[C)A@@@[@[D]T@@@C@#]@#D]Q<@^D]WKB
)@@G@@K @@@@C)A@@@[@[D]Q@@@C@#]@#D]N<@#D]TK @@@[C)A@@@[@[D]N@@@C@#]@#D]K<@]D]QKC
)@@G@@K @@@@C)A@@@[@[D]K@@@C@#]@#B/+<@[D]NK @@@[C)B@@@[@]B/+@@@C@#C@ @@@]@#B;8KD
)@@G@@+@ B.@@@@B/>C)B@@@[@]B/>@@@C@#C@ @@@#)#D[Y@@@D[V@@]B/+C)A@@@[@[D[Y@@@C@#KE
)@@G@@]@#D[V<@]B/>K @@@@C)A@@@[@[D[V@@@C@#]@#B;8<@[D[YK @@@@C)B@@@[@]B;8@@@C@#KF
)@@G@@C@ @@@]@#B'6+@^B/+@@@B;;C)B@@@[@]B;;@@@C@#C@ @@@#)#D@3@@@D@%@@^B;8C)A@@@KG
)@@G@@[@[D@3@@@C@#]@#D@0<@^B;;K @@@@C)A@@@[@[D@0@@@C@#]@#D@!<@#D@3K @@@@C)A@@@KH
)@@G@@[@[D@!@@@C@#]@#D@%<@]D@0K @@@@C)A@@@[@[D@%@@@C@#]@#B'6<@[D@!K @@@@C)B@@@KI
)@@G@@[@]B'6@@@C@#C@ @@@]@#B'G+@#B;8@@@B'9C)B@@@[@]B'9@@@C@#C@ @@@#)#C_Y@@@C_JKJ
)@@G@@@@CB'6C)A@@@[@[C_Y@@@C@#]@#C_V<@CB'9K @@@@C)A@@@[@[C_V@@@C@#]@#C_S<@BC_YKK
)@@G@@K @@@[C)A@@@[@[C_S@@@C@#]@#C_P<@AC_VK @@@@C)A@@@[@[C_P@@@C@#]@#C_G<@ C_SKL
)@@G@@K @@@@C)A@@@[@[C_G@@@C@#]@#C_D<@^C_PK @@@@C)A@@@[@[C_D@@@C@#]@#C_M<@#C_GKM
)@@G@@K @@@@C)A@@@[@[C_M@@@C@#]@#C_J<@]C_DK @@@@C)A@@@[@[C_J@@@C@#]@#B'G<@[C_MKN
)@@G@@K @@@@C)B@@@[@]B'G@@@C@#C@ @@@]@#B8#+@]B'6@@@B'JC)B@@@[@]B'J@@@C@#C@ @@@KO
)@@G@@#)#C"J@@@C"M@@^B'GC)A@@@[@[C"J@@@C@#]@#C"G<@^B'JK @@@]C)A@@@[@[C"G@@@C@#KP
)@@G@@]@#C"P<@#C"JK @@@]C)A@@@[@[C"P@@@C@#]@#C"M<@]C"GK @@@]C)A@@@[@[C"M@@@C@#KQ
)@@G@@]@#B8#<@[C"PK @@@]C)B@@@[@]B8#@@@C@#C@ @@@]@#C7!+@[B'G@@@B8AC)B@@@[@]B8AKR
)@@G@@@@@C@#C@ @@@#)#C/K@@@C;(@@IB8#C)A@@@[@[C/K@@@C@#]@#C/H<@IB8AK @@@]C)A@@@KS
)@@G@@[@[C/H@@@C@#]@#C/E<@HC/KK @@@]C)A@@@[@[C/E@@@C@#]@#C/B<@GC/HK @@@#C)A@@@KT
)@@G@@[@[C/B@@@C@#]@#C/^<@FC/EK @@@]C)A@@@[@[C/^@@@C@#]@#C/[<@EC/BK @@@]C)A@@@KU
)@@G@@[@[C/[@@@C@#]@#C;"<@DC/^K @@@]C)A@@@[@[C;"@@@C@#]@#C;;<@CC/[K @@@]C)A@@@KV
)@@G@@[@[C;;@@@C@#]@#C;2<@BC;"K @@@]C)A@@@[@[C;2@@@C@#]@#C;\<@AC;;K @@@#C)A@@@KW
)@@G@@[@[C;\@@@C@#]@#C;8<@ C;2K @@@]C)A@@@[@[C;8@@@C@#]@#C;5<@^C;\K @@@]C)A@@@KX
)@@G@@[@[C;5@@@C@#]@#C;?<@#C;8K @@@]C)A@@@[@[C;?@@@C@#]@#C;(<@]C;5K @@@]C)A@@@KY
)@@G@@[@[C;(@@@C@#]@#C7!<@[C;?K @@@][@^D['#@@@@@WHILE MH@__9[@^D5K#@@@@@INIDLEKZ
)@@G@@K @@@][@ C9W#)@@@@G$JBITS     LBJ@@@[@^DZ$#@@@@@NOT   MH@__ZC)E@@@[@]DZ$LA
)@@G@@@@@K@BK@D@@@[@AC'>D@@@@@ATEND #@#@]\@@6@]\K @@@[[@^DO-#@@@@@LTE   K @@@#LB
)@@G@@C)E@@@[@]DO-@@@K@BK@D@@@[@AD!7D@@C'>G$$C05#@#@]R@]A@]SK @@@@C)E@@@[@]D!7LC
)@@G@@@@@K@BK@D@@@[@AD5PD@@DO-G$$L30#@#@#D@^I@#KK @@@@[@ D=X#)@D!7G$XBITS     LD
)@@G@@LB@/@@C)F@@@[@]D=X@@@K@DK@F@@@[@BD>VD)@@@@AREADA$     #@#@]9@@6@]9K @@[7LE
)@@G@@C)E@@@[@]D>V@@@K@BK@D@@@[@AC8[D@@D=XG$$A20#@#@];@] @]"K @@@@[@^D#"#@@@@@LF
)@@G@@JMGI  MH@__4C)E@@@[@]D#"@@@K@DK@F@@@[@AC'XD)@C8[STRUC$DEF   @@]@[3@@6@[3LG
)@@G@@[@^D2V#@@@@@NEQ   K @@@]C)E@@@[@]D2V@@@K@BK@D@@@[@AC8&D@@@@@G$$L49#@#@#DLH
)@@G@@@]/@#OK @@@@[@^D([#@@@@@MASKEDMH@__:C)E@@@[@]D([@@@K@BK@D@@@[@AD3-D@@C8&LI
)@@G@@G$$T24#@#@#]@ 6@#AK @@@@C)E@@@[@]D3-@@@K@BK@D@@@[@ADZID@@D([G$$L51#@#@#DLJ
)@@G@@@[?@#PK @@@@C)E@@@[@]DZI@@@K@BK@D@@@[@AC"^D@@@@@G$$R80#@#@]&@#!@](K @@@@LK
)@@G@@[@^DX6#@@DZIZERO  K @@@#C)E@@@[@]DX6@@@K@BK@D@@@[@AC8QD@@@@@G$$R60#@#@]&LL
)@@G@@@#D@]*K @@@@[@^C9R#@@@@@UP    MH@__\[@ B' #)@C8QSTARTIO     MH@__)C)B@@@LM
)@@G@@[@[B' @@@C@B[@^DN]]@@C9RG$ASF @@@B'DC)B@@@[@]B'D@@@C@#C@ @@@#)#D#G@@@C.9LN
)@@G@@@@AB' C)A@@@[@[D#G@@@C@#]@#D[3<@AB'DK @@@]C)A@@@[@[D[3@@@C@#]@#D[O<@ D#GLO
)@@G@@K @@@[C)A@@@[@[D[O@@@C@#]@#D@R<@^D[3K @@@@C)A@@@[@[D@R@@@C@#]@#C"6<@#D[OLP
)@@G@@K @@@[C)A@@@[@[C"6@@@C@#]@#C.9<@]D@RK @@@@C)A@@@[@[C.9@@@C@#]@#DN]<@[C"6LQ
)@@G@@K @@@[C)E@@@[@]DN]@@@K@BK@D@@@[@AC92D@@B' G$$I10#@#@]I@[/@]LK @@@@[@^D*5LR
)@@G@@#@@@@@IBANK MH@__UC)E@@@[@]D*5@@@K@BK@D@@@[@AC; D@@C92G$$T21#@#@#]@[Y@#ALS
)@@G@@K @@@@[@^D4A#@@@@@NOSPANK @@@CC)E@@@[@]D4A@@@K@BK@D@@@[@AC7FD@@C; G$$L52LT
)@@G@@#@#@#D@@0@#QK @@@@[@^D["#@@@@@G$OMN K @@@[[@ D0P#)@@@@OUTBUSY     K @@@#LU
)@@G@@C)E@@@[@]D0P@@@K@BK@D@@@[@AD]CD@@D["G$$L41#@#@#D@[:@#MK @@@@[@^C_[#@@@@@LV
)@@G@@LOADEDK @@@ [@^C89#@@@@@DZERO K @@@B[@^D]G#@@@@@CYCLICMH@__$[@^C;X#@@@@@LW
)@@G@@EMPTY K @@@A[@^D@&#@@@@@AGE   K @@@H[@^B8D#@@C;XNOCARYK @@@^C)B@@@[@[B8DLX
)@@G@@@@@C@B[@^DS!]@@D@&G$IV  @@@B8HC)B@@@[@]B8H@@@C@#C@ @@@#)#B.A@@@B8K@@AB8DLY
)@@G@@C)B@@@[@]B.A@@@C@#C@ @@@]@#B/*+@AB8H@@@B.DC)B@@@[@]B.D@@@C@#C@ @@@#)#D]1LZ
)@@G@@@@@D]+@@AB.AC)A@@@[@[D]1@@@C@#]@#D],<@AB.DK @@@ C)A@@@[@[D],@@@C@#]@#D]:MA
)@@G@@<@ D]1K @@@AC)A@@@[@[D]:@@@C@#]@#D]*<@^D],K @@@#C)A@@@[@[D]*@@@C@#]@#D]>MB
)@@G@@<@#D]:K @@@^C)A@@@[@[D]>@@@C@#]@#D]+<@]D]*K @@@[C)A@@@[@[D]+@@@C@#]@#B/*MC
)@@G@@<@[D]>K @@@]C)B@@@[@]B/*@@@C@#C@ @@@]@#B;"+@ B.A@@@B/:C)B@@@[@]B/:@@@C@#MD
)@@G@@C@ @@@#)#D[=@@@D[-@@]B/*C)A@@@[@[D[=@@@C@#]@#D[-<@]B/:K @@@[C)A@@@[@[D[-ME
)@@G@@@@@C@#]@#B;"<@[D[=K @@@]C)B@@@[@]B;"@@@C@#C@ @@@]@#B'/+@^B/*@@@B/[C)B@@@MF
)@@G@@[@]B/[@@@C@#C@ @@@#)#D@_@@@D@6@@^B;"C)A@@@[@[D@_@@@C@#]@#D@/<@^B/[K @@@#MG
)@@G@@C)A@@@[@[D@/@@@C@#]@#D@9<@#D@_K @@@^C)A@@@[@[D@9@@@C@#]@#D@6<@]D@/K @@@[MH
)@@G@@C)A@@@[@[D@6@@@C@#]@#B'/<@[D@9K @@@]C)B@@@[@]B'/@@@C@#C@ @@@]@#B'M+@#B;"MI
)@@G@@@@@B'_C)B@@@[@]B'_@@@C@#C@ @@@#)#C_6@@@C_$@@CB'/C)A@@@[@[C_6@@@C@#]@#C_3MJ
)@@G@@<@CB'_K @@@BC)A@@@[@[C_3@@@C@#]@#C_0<@BC_6K @@@CC)A@@@[@[C_0@@@C@#]@#C_!MK
)@@G@@<@AC_3K @@@ C)A@@@[@[C_!@@@C@#]@#C_=<@ C_0K @@@AC)A@@@[@[C_=@@@C@#]@#C_-ML
)@@G@@<@^C_!K @@@#C)A@@@[@[C_-@@@C@#]@#C_%<@#C_=K @@@^C)A@@@[@[C_%@@@C@#]@#C_$MM
)@@G@@<@]C_-K @@@[C)A@@@[@[C_$@@@C@#]@#B'M<@[C_%K @@@]C)B@@@[@]B'M@@@C@#C@ @@@MN
)@@G@@]@#B8K+@]B'/@@@B'PC)B@@@[@]B'P@@@C@#C@ @@@#)#C"V@@@C"Y@@^B'MC)A@@@[@[C"VMO
)@@G@@@@@C@#]@#C"S<@^B'PK @@@#C)A@@@[@[C"S@@@C@#]@#C"-<@#C"VK @@@^C)A@@@[@[C"-MP
)@@G@@@@@C@#]@#C"Y<@]C"SK @@@[C)A@@@[@[C"Y@@@C@#]@#B8K<@[C"-K @@@]C)B@@@[@]B8KMQ
)@@G@@@@@C@#C@ @@@]@#DS!+@[B'M@@@B8NC)B@@@[@]B8N@@@C@#C@ @@@#)#C/'@@@C/N@@IB8KMR
)@@G@@C)A@@@[@[C/'@@@C@#]@#C/7<@IB8NMH@__"C)A@@@[@[C/7@@@C@#]@#C/4<@HC/'MH@__"MS
)@@G@@C)A@@@[@[C/4@@@C@#]@#C/1<@GC/7K @@@FC)A@@@[@[C/1@@@C@#]@#C/,<@FC/4K @@@GMT
)@@G@@C)A@@@[@[C/,@@@C@#]@#C/:<@EC/1K @@@DC)A@@@[@[C/:@@@C@#]@#C/*<@DC/,K @@@EMU
)@@G@@C)A@@@[@[C/*@@@C@#]@#C/><@CC/:K @@@BC)A@@@[@[C/>@@@C@#]@#C/W<@BC/*K @@@CMV
)@@G@@C)A@@@[@[C/W@@@C@#]@#C/T<@AC/>K @@@ C)A@@@[@[C/T@@@C@#]@#C/+<@ C/WK @@@AMW
)@@G@@C)A@@@[@[C/+@@@C@#]@#C/Z<@^C/TK @@@#C)A@@@[@[C/Z@@@C@#]@#C/Q<@#C/+K @@@^MX
)@@G@@C)A@@@[@[C/Q@@@C@#]@#C/N<@]C/ZK @@@[C)A@@@[@[C/N@@@C@#]@#DS!<@[C/QK @@@]MY
)@@G@@C)E@@@[@]DS!@@@K@BK@D@@@[@AD& D@@B8DG$$C25#@#@]R@@_@]WK @@@@C)E@@@[@]D& MZ
)@@G@@@@@K@BK@D@@@[@AD\#D@@DS!G$$T10#@#@#]@@=@##K @@@@C)E@@@[@]D\#@@@K@BK@D@@@NA
)@@G@@[@ADW=D@@D& G$$L35#@#@#D@]!@#LK @@@@C)E@@@[@]DW=@@@K@BK@D@@@[@AD<_D@@@@@NB
)@@G@@G$$R10#@#@]&@^.@]$K @@@@C)E@@@[@]D<_@@@K@BK@D@@@[@AC;LD@@DW=G$$Z50#@#@]\NC
)@@G@@@@+@]4K @@@@[@^D5$#@@@@@DEQ   K @@@FC)E@@@[@]D5$@@@K@BK@D@@@[@AD54D@@C;LND
)@@G@@G$$DC1#@#@#W@#/@#YK @@@@C)E@@@[@]D54@@@K@BK@D@@@[@AC5VD@@D5$G$$PRA#@#@#-NE
)@@G@@@@6@#-K @@@@C)B@@@[@[C5V@@@C@B[@^DZ)]@@@@@G$HIBI@@@C5ZC)B@@@[@]C5Z@@@C@#NF
)@@G@@C@ @@@#)#D5H@@@D5E@@]C5VC)A@@@[@[D5H@@@C@#]@#D5E<@]C5ZK @K@@C)A@@@[@[D5ENG
)@@G@@@@@C@#]@#DZ)<@[D5HK @)@@C)F@@@[@]DZ)@@@K@DK@F@@@[@BC8MD)@@@@OTHERWISE   NH
)@@G@@#@#@]\@@6@]\K @@@@[@^C'T#@@@@@FOR   MH@__0[@^D::#@@C8MNE    K @@@]C)E@@@NI
)@@G@@[@]D::@@@K@BK@D@@@[@ADB3D@@C'TG$$L03#@#@#D@ <@#IK @@@@C)E@@@[@]DB3@@@K@BNJ
)@@G@@K@D@@@[@ADJ!D@@@@@G$DBUG#@#@[8@@6@[8K @@@@C)F@@@[@]DJ!@@@K@DK@F@@@[@BC8\NK
)@@G@@D)@@@@SWITCHTO    #@#@]C@@6@]CK @@@@[@ C9E#)@@@@MAINPROGRAM MH@__([@^DS3NL
)@@G@@#@@C8\SAVE  MH@__<C)E@@@[@]DS3@@@K@BK@D@@@[@AC_ D@@C9EG$$C26#@#@]R@[Z@]WNM
)@@G@@K @@@@[@^D4=#@@DS3DNONZ K @@@CC)E@@@[@]D4=@@@K@BK@D@@@[@AC8UD@@C_ G$$SVANN
)@@G@@#@#@#V@@6@#VK @@@@[@^C'F#@@@@@DOWN  MH@__,[@ DZU#)@@@@NOFINDEXIT  MH@__ONO
)@@G@@C)E@@@[@]DZU@@@K@BK@D@@@[@AC8+D@@C'FG$$E10#@#@]?@]'@],K @@@@[@^C9(#@@@@@NP
)@@G@@FROM  MH@__?[@ D#,#)@C8+CALLING     MH@__WC)C@@@[@[D#,@@@@@B[@ @@@A@@C9(NQ
)@@G@@G$$IMU0@@@@#[^L@@[C)1@@@]@@@#V@@@K@F#@,C^,@#V@@@@@@@@[[C,@@@K@@@@@@@@@@@NR
)@@G@@@@@@@@$LABL(K,2)T]M&2)KK EQU G$CTR(3)+1*KG$CTR**(3) EQU K*OG$ARGS**(K) ENS
)@@G@@QU +P-1*<N DO P-1 ,G$ARGS**(K,N) EQU +0+P(N)*0N DO P-1 ,M DO P(N) ,G$ARGNT
)@@G@@S**(K,N,M) EQU +P(N,M)*_N DO P-1 ,M DO P(N) , DO P(N,*M) ,G$ARGS**(K,N,MNU
)@@G@@) EQU *0+P(N,M)*^ END@EQC)N@@@]@@@]C@@@K@F#@KDA3@]C@@@@@@@@[[CK@@@M@@@@@NV
)@@G@@@@[@@@@@@@@@P           MGI)A RES 1*F G$$GFL 3,1*B RES -1T])^ END@C-#@@@NW
)@@G@@]@[@[8@@@K@B]-@D#3@[8@@@@@@@@[[D@@[9U@@@@@@J$@@@@@@@@@P           MC>)JINX
)@@G@@(1) EQU I(1)+1*N DO P(I(1))=0 , END*U DO P(I(1))=1 , +P(I(1),1)*= DO P(INY
)@@G@@(1))=2 , +P(I(1),1),P(I(1),2)*, DO P(I(1))=3 , +P(I(1),1),P(I(1),2),P(I(NZ
)@@G@@1),3)*8 DO P(I(1))=4 , +P(I(1),1),P(I(1),2),P(I(1),3),P(I(1),4)(G DO P(IOA
)@@G@@(1))>4 , +P(I(1),1),P(I(1),2),P(I(1),3),P(I(1),4),P(I(1),5),P(I(1),6)*B OB
)@@G@@RES -1*Q DO I(1)<P , GO G$DBUG8# ENCC)I@@@]@@@[3@@@K@F#@FC5"@[3@@@@@@@@[OC
)@@G@@[CF@@@U@@@@@@@@@@@@@@@@@STRUC$DEF   M ;)^ END@@@C-@@@@]@@@#-@@@K@F#@.D^^OD
)@@G@@@#-@@@@@@@@][C.@@@U@@@@@@@[@@@@@@@@@P           M*=)$ DO G$MASM=0 ,P(1,1OE
)@@G@@) EQU G$BSEQ(P(1,1))*? DO G$MASM=1 ,P(1,1) EQU G$BSEQ($AP(P(1,1)))M*$)GKOF
)@@G@@ EQU P(1,1)*$ISRB EQU (K>0)**(G$FLAG(K,3)=REMOTESUB)*R DO ISRB=0 , G$$GFOG
)@@G@@L 2,6*K DO ISRB=0 , END*SG$LABL**(K,4) EQU P(1,2)*R DO G$LABL(K,1)>$ , EOH
)@@G@@NDT^)EHERE EQU $*M RES G$LABL(K,5)-$*D J P(1,2)*F RES HERE-$*^ END@IB(1)OI
)@@G@@C-#@@@]@[@[4@@@K@B]-@C 6@[4@@@@@@@@[[D@@[5M@@@@@@@]@@@@@@@@@P           OJ
)@@G@@M _)P DO 0=0=0 , STRUC$OMN*P DO 0=0=1 , STRUC$DEF*- DO P(1)>0 ,G$LCTR*(1OK
)@@G@@) EQU P(1,1)TG)RK DO 5 ,G$CTR*(K) EQU 0T^)SG$CTR*(6) EQU 1-G$CTR(6)*SG$COL
)@@G@@TR*(7) EQU 1-G$CTR(6)*O DO G$CTR(7) , BRIEF*M DO G$CTR(7) , ENDT )LG$MASOM
)@@G@@M* EQU 0=0=0*- DO G$MASM=0 ,G$AMPR* EQU #(5)=-2*V DO G$MASM=1 ,G$AMPR* EON
)@@G@@QU 1T])B G$$CLD8S DO G$MASM , $INSERT 'G$CC-#@@@]@[@]F@@@K@B]-@DB9@]F@@@OO
)@@G@@@@@@@[[D@@]GK@@@@@@@@@@@@@@@@@+I-1MF+)MG$LMG5)DP PROC *2*GCALL*** NAME*MOP
)@@G@@RAD(1) EQU +(0,-1)*IP11 EQU P(1,1)*Y DO G$MASM=1 ,P11 EQU $AP(P11)*: DO OQ
)@@G@@P(1)=1 , DO P11<0400000 ,RAD(1) EQU P11T#)OK EQU G$BSEQ(RAD(1))*, DO K>0OR
)@@G@@ , DO G$FLAG(K,3)=REMOTESUB , GO G$$CL1T^)YXREG EQU P(0,1)+(P(0,1)=0)*X1OS
)@@G@@1*SBANKSW EQU P(2,1)=BASING*)K DO P(2)*(1-BANKSW) , SZ P(2,K)T#0M DO 1-(OT
)@@G@@BANKSW**(P(CC)N@@@]@@@['@@@K@F#@KC))@['@@@@@@@@[[CK@@@M@@@@@@@@@@@@@@@@@OU
)@@G@@F           MDF)OIII*(1) EQU III(1)+1*F END III(1)@@@@C-#@@@]@[@];@@@K@BOV
)@@G@@]-@DTR@];@@@@@@@@^[D@@]/M@@@@@@@[@@@@@@@@@Z           MWI)GI EQU Z(1,1)*OW
)@@G@@GK EQU Z(1,2)T])S DO P(I,2)>0 ,N(1) EQU 1*T DO P(I,2)=IN ,N(1) EQU 2*= DOX
)@@G@@O P(I,2)=IS ,N(1) EQU 3+2*(P(I)=4)*Q DO P(I)=1 ,N(1) EQU 4*Y DO P(I,1)=COY
)@@G@@HANNEL ,N(1) EQU 6*R DO N(1)<1 , G$$EFL 1,1*T DO N(1)<3 , G$$DCU,2 I,3T^OZ
)@@G@@)) DO (N(1)=2)**G$AMPR , GO G$$A10*2U16 EQU (P(I,5)<016)++(P(I,4)>0)++P(PA
)@@G@@I,*3)++P(I,*4)8B DO (N(CC-#@@@]@[@]<@@@K@B]-@C4H@]<@@@@@@@@[[D@@]=M@@@@@PB
)@@G@@@@@@@@@@@@@@P           MN")IM EQU G$CTR(5)*JK EQU G$SEQN(M)*) DO (G$TYPPC
)@@G@@E(M)=3)=0 , G$$GFL 1,3T^)SCALOPT EQU G$FLAG(K,3)<0*QNUMCA EQU +G$FLAG(K,PD
)@@G@@1)*SCMAX(1) EQU -34359738367(@L DO NUMCA , DO G$FLAG(K,4,L)>CMAX(1) ,CMAPE
)@@G@@X(1) EQU G$FLAG(K,4,L)*TCMIN(1) EQU 0377777777777(@L DO NUMCA , DO G$FLAPF
)@@G@@G(K,4,L)<CMIN(1) ,CMIN(1) EQU G$FLAG(K,4,L)8OJTS(1) EQU CMAX(1)-CCC-#@@@PG
)@@G@@]@[@#W@@@K@B]-@CHB@#W@@@@@@@@#[D@@#XM@@@@@@@]@@@@@@@@@Q           M$O)GIPH
)@@G@@ EQU Q(1,1)*GJ EQU Q(1,2)*GN EQU Q(0,1)T#)S DO G$MASM , $GO G$$DCU1T^)GJPI
)@@G@@AY(1) EQU 0*GXRG(1) EQU 0*GHIB(1) EQU 0*LIV(1) EQU +P(I,J)(W DO IV(1)>03PJ
)@@G@@77777777 ,K DO 4 , DO (IV(1)-JAY(1))>(G$JBIT(K)-1) ,JAY(1) EQU JAY(1)++GPK
)@@G@@$JBIT(K)T^)QIV(1) EQU IV(1)-JAY(1)*)JAY(1) EQU P(I,J+2)++JAY(1)*/-268> DPL
)@@G@@O IV(1)>0777777 ,K DO 4 , DO (IV(1)CC-#@@@]@[@]Y@@@K@B]-@C!A@]Y@@@@@@@@]PM
)@@G@@[D@@]ZM@@@@@@@]@@@@@@@@@P           MM5)IM EQU G$CTR(5)*JK EQU G$SEQN(M)PN
)@@G@@*) DO (G$TYPE(M)=3)=0 , G$$GFL 1,3*R DO G$FLAG(K,3)>0 , ENDT])NJJ EQU +GPO
)@@G@@$FLAG(K,1)*W DO JJ=0 ,G$LABL*(K,2) EQU $** DO (JJ>0)++(G$FLAG(K,3)>-1) ,PP
)@@G@@ GO G$$C60TC)Y DO $>G$LABL(K,1) , G$$GFL 2,5*LMAX(1) EQU P(1,1)*\N DO P(PQ
)@@G@@1) , DO P(1,N)>MAX(1) ,MAX(1) EQU P(1,N)*HIMAX(1) EQU 18ON DO P(1) , DO PR
)@@G@@P(1,NCC-#@@@]@[@#R@@@K@B]-@CPX@#R@@@@@@@@#[D@@#SM@@@@@@@]@@@@@@@@@Q     PS
)@@G@@      M>4)HVI EQU Q(1,1)*HTI EQU Q(1,2)*HBI EQU Q(1,3)*HF EQU P(VI,1)*KAPT
)@@G@@TTOP EQU Q(2,2)T])T DO F=LOOKFOR , GO G$$L80*$ DO F=JGD , G$$FJA 070,P(VPU
)@@G@@I,2),,,Q(2,1)*J DO F=JGD , ENDT^)IJMF EQU F=JMGI*OOLAP EQU P(VI,2)>X11*ZPV
)@@G@@SENU EQU (P(VI,3)=0)**(ATTOP=0)T])( DO SENU**1-OLAP , I$ 060+JMF,,,,,P(VPW
)@@G@@I,2)8( DO SENU , I$ 074,04-OLAP*(JMF+1),0+OLAP*CC-#@@@]@[@]\@@@K@B]-@C6;PX
)@@G@@@]\@@@@@@@@A[D@@]0M@@@@@@@[@@@@@@@@@Y           MS))IM EQU G$CTR(5)*JK EPY
)@@G@@QU G$SEQN(M)*) DO (G$TYPE(M)=4)=0 , G$$GFL 1,3*> DO G$LABL(K,5)=0 ,G$LABPZ
)@@G@@L*(K,5) EQU $T^)? DO G$FLAG(K,13) , I$ 074,04,,,,G$LABL(K,10)*<G$CTR*(2)QA
)@@G@@ EQU G$CTR(2)+G$FLAG(K,13)*NG$FLAG*(K,13) EQU 0T^)S DO Y(0,0)>0 , GO G$$QB
)@@G@@Z10*Y DO G$LABL(K,4)=0 , G$$GFL 2,284 DO G$CTR(7) , DO (G$LABL(K,6)=$)=0QC
)@@G@@ , G$$DFL G$LABL(CC)N@@@]@@@[2@@@K@F#@KCB.@[2@@@@@@@@[[CK@@@M@@@@@@@@@@@QD
)@@G@@@@@@@@STRUC$OMN   LD)Z DO G$OMN=0 , $INCLUDE 'STRUC$'*^ END@C)/@@@]@@@]MQE
)@@G@@@@@K@F#@9B"1@]M@@@@@@@@[[C9@@@K@@@@@@@@@@@@@@@@@P           MJ])IM EQU GQF
)@@G@@$CTR(5)*JK EQU G$SEQN(M)*) DO (G$TYPE(M)=2)=0 , G$$GFL 1,3T])8 DO G$CTR(QG
)@@G@@7) , DO (G$LABL(K,3)=$)=0 , G$$DFL G$LABL(K,3)*MG$LABL*(K,3) EQU $*R DO QH
)@@G@@G$LABL(K,2)=$ , ENDT])? DO G$FLAG(K,4)=0 , I$ 074,04,,,,G$LABL(K,5)*+G$CQI
)@@G@@TR*(2) EQU G$CTR(2)+G$FLAG(K,4)*MG$LABL*(K,4) EQU $*^ END@IFC-#@@@]@[@]#QJ
)@@G@@@@@K@B]-@C^"@]#@@@@@@@@#[D@@]^M@@@@@@@[@@@@@@@@@P           ME;)IM EQU GQK
)@@G@@$CTR(5)*JK EQU G$SEQN(M)*S DO (M=1)=0 , G$$GFL 1,1*) DO (G$TYPE(M)=1)=0 QL
)@@G@@, G$$GFL 1,3*JG$CTR*(5) EQU 0*% DO (G$CTR(2)=(0-G$CTR(7)))=0 , G$$GFL 1,QM
)@@G@@2*JG$CTR*(2) EQU 0*LT EQU G$FLAG(K,3)T])J RES 0-G$CTR(6)*8 DO G$CTR(7) ,QN
)@@G@@ DO (G$LABL(K,2)=$)=0 , G$$DFL G$LABL(K,2)*MG$LABL*(K,2) EQU $T]0< DO T=QO
)@@G@@CYCLIC , I$ 074,04,,,,G$LABL(CC)4@@@]@]@]D@@@K@BK@F@@@#@0C*A@]D@@@@@@@@[QP
)@@G@@[C0@]EM@@@@@@@[@]E@@@@@@P           MGY)YXREG EQU P(0,1)+X11*(P(0,1)=0)TQQ
)@@G@@#)P DO P(1)<2 , GO NOLXI(# DO P(1,4)<016 , I$ 046,P(1,4),XREG,P(1,3),2*PQR
)@@G@@(1,*3)+P(1,*2),P(1,2)*5 DO P(1,4)>015 , G$$IMU 046,P(1,4),XREG,P(1,3),P(QS
)@@G@@1,2)MG>)= I$ 07,012+(P(1,1)=IBANK),XREG,,,$+1*^ END@G$C)G@@@]@]@]E@@@K@HQT
)@@G@@K@J@@@#@CC8:@]E@@@@@@@@[@CC@@@NOLXI       ]@#@]D@#,@]DC-#@@@]@[@#D@@@K@BQU
)@@G@@]-@CM9@#D@@@@@@@@J[D@@#EK@@@@@@@@@@@@@@@@@ DO 2 ,II(K)M-Z)IW(1) EQU KW(1QV
)@@G@@)TA)2K3 EQU MASKED*(W(1)=LOOKFOR)+TO*((W(1)=LOOKFOR)=0)([FI*(1) EQU VI+(QW
)@@G@@P(VI+1,1)=FOR)+2*(P(VI+2,1)=FOR)+3*(P(VI+3,1)=FOR)(^FI*(2) EQU VI+(P(VI+QX
)@@G@@1,1)=FROM)+2*(P(VI+2,1)=FROM)+3*(P(VI+3,1)=FROM)(JFI*(3) EQU VI+(P(VI+1,QY
)@@G@@1)=K3)+2*(P(VI+2,1)=K3)+3*(P(VI+3,1)=K3)+4*(P(VI+4,1)=K3)T]0+FI*(4) EQU QZ
)@@G@@VI+(P(VI+1,1)=BY)+2*(P(CC-#@@@]@[@]?@@@K@B]-@C-$@]?@@@@@@@@][D@@]!M@@@@@RA
)@@G@@@@^@@@@@@@@@P           MR*)IM EQU G$CTR(5)*JK EQU G$SEQN(M)*) DO (G$TYPRB
)@@G@@E(M)=4)=0 , G$$GFL 1,3T])8 DO G$CTR(7) , DO (G$LABL(K,4)=$)=0 , G$$DFL GRC
)@@G@@$LABL(K,4)*MG$LABL*(K,4) EQU $T])QTBOT EQU G$FLAG(K,6)>0*(TTOP EQU (G$FLRD
)@@G@@AG(K,1)>0)++(G$FLAG(K,4)>0)*V DO TTOP**TBOT , G$$GFL 2,1*&G$FLAG*(K,8) ERE
)@@G@@QU G$FLAG(K,8)**(P(1)=0)8$ DO G$FLAG(K,8) , I$ 074,04,,,,G$LABL(KCC-#@@@RF
)@@G@@]@[@]_@@@K@B]-@C&$@]_@@@@@@@@#[D@@#@M@@@@@@@]@@@@@@@@@Q           MXV)GIRG
)@@G@@ EQU Q(1,1)*HNN EQU Q(1,2)*HN EQU TP$(NN)T])OCGISF EQU G$FCF(N)=0*LJI(1)RH
)@@G@@ EQU KE$(NN)*RJI(2) EQU G$IV(N,JI(1))*WWOK EQU Q(1,3)=G$WS(N,JI(1))T])(ARI
)@@G@@AA EQU 0+(G$ASF(N)>0)*(P(I,G$ASF(N))-A0)*OJJJ EQU CGISF*P(I,5)*OXXX EQU RJ
)@@G@@CGISF*P(I,4)*)HI EQU CGISF*(2*P(I,*4)+P(I,*3))*(U18 EQU (JJJ>015)**(XXX=RK
)@@G@@0)**(N<3)**(HI=0)8KUUU EQU CGISF*P(CC)M@@@]@@@]+@@@K@F#@JCG[@]+@@@@@@@@[RL
)@@G@@[CJ@@@U@@@@@@@[@@@@@@@@@P           MN\)H RES P(1,1)-$*D J P(1,2)*^ END@RM
)@@G@@C-#@@@]@[@]R@@@K@B]-@CC6@]R@@@@@@@@B[D@@]SM@@@@@@@A@@@@@@@@@P           RN
)@@G@@MK5)KK EQU G$CTR(1)+1*JG$CTR*(1) EQU K*KM EQU G$CTR(5)+1*JG$CTR*(5) EQU RO
)@@G@@M*KG$SEQN*(M) EQU K*KG$TYPE*(M) EQU 3T^)TCALOPT EQU P(1,1)=CALLING(FN DORP
)@@G@@ (P-2)*(P>2) , DO P(N+1)=1 , DO P(N+1,1)=NOCHECKING ,G$FLAG*(K,6) EQU 1TRQ
)@@G@@^)9N DO (P-2)*(P>2) , DO P(N+1,1)=NOFINDEXIT ,NFI(1) EQU N+1T^)S DO CALORR
)@@G@@PT=0 , GO G$$C058RBANKSW EQU P(3,1)=BASINCC-#@@@]@[@]N@@@K@B]-@C#,@]N@@@RS
)@@G@@@@@@@][D@@]OK@@@@@@@@@@@@@@@@@OT*G +P(THF+MJS)IM EQU G$CTR(5)*JK EQU G$SRT
)@@G@@EQN(M)*) DO (G$TYPE(M)=2)=0 , G$$GFL 1,3T])8 DO G$CTR(7) , DO (G$LABL(K,RU
)@@G@@5)=$)=0 , G$$DFL G$LABL(K,5)*MG$LABL*(K,5) EQU $*LG$CTR*(5) EQU M-1T^)9GRV
)@@G@@$CTR*(2) EQU G$CTR(7)*(G$CTR(2)-G$FLAG(K,5)-G$FLAG(K,4))*M DO G$CTR(7) ,RW
)@@G@@ ENDT^)SG$CTR*(3) EQU G$CTR(3)-1T^0\G$FLAG*(K,4) EQU 0-((G$LABL(K,3)>0)*RX
)@@G@@*(G$LABL(K,CC-#@@@]@[@]I@@@K@B]-@CWA@]I@@@@@@@@#[D@@]JM@@@@@@@A@@@@@@@@@RY
)@@G@@P           MH1)<LOOF EQU (P(1)=1)**(P(1,1)=LOOKFOR)*O DO LOOF , GO G$$IRZ
)@@G@@05T^)DL EQU P-1*YL1 EQU (P(L)=1)**(P(L,1)=THEN)*+L2 EQU (P(L-1)=1)**(P(LSA
)@@G@@-1,1)=THEN)*PFLT EQU L1*L+L2*(L-1)*PTHF EQU FLT+(FLT=0)*P*)IFNOT EQU (P(SB
)@@G@@1)=1)**(P(1,1)=NOT)*\ DO (THF=IFNOT+2)++(THF=IFNOT+4)=0 , G$$EFL 3,3*NCXSC
)@@G@@F EQU THF=IFNOT+4*R DO P<THF+2 , GO G$$I05T^0B G$$TSTCC-#@@@]@[@]9@@@K@BSD
)@@G@@]-@DCJ@]9@@@@@@@@D[D@@]'M@@@@@@@[@@@@@@@@@P           MVS): DO (P(0,0)=0SE
)@@G@@15)++(P(0,0)=0166) , GO G$$D20*$PKTOFF EQU (P(0,0)=0102)++(P(0,0)=0170)*SF
)@@G@@Q DO P(1)=0 , GO G$$D10T^)G LA,U A0,$+5*( I$ 06,H1,A0,P(1,2),P(1,*1),P(1SG
)@@G@@,1)+PKTOFF*? I$ 026,U,A0,P(1,2),2*P(1,*2)+P(1,*1),P(1,1)*E GO G$$D99MV&)SH
)@@G@@I LXI,U A0,0,A1*H LXM,U A1,$+7*N SA,H1 A1,PKTOFF,A0*F LSSC A0,18*I LXM,USI
)@@G@@ A1,0,A0*E SSL A0,188[ CC-#@@@]@[@[;@@@K@B]-@C=$@[;@@@@@@@@][D@@[/M@@@@@SJ
)@@G@@@@#@@@@@@@@@P           MDL)Z DO (G$CTR(5)=0)=0 , G$$GFL 1,1*BM EQU 1*JGSK
)@@G@@$CTR*(5) EQU M*Z DO (G$CTR(2)=0)=0 , G$$GFL 1,2T])KK EQU G$CTR(1)+1*JG$CSL
)@@G@@TR*(1) EQU K*KG$TYPE*(M) EQU 1*KG$SEQN*(M) EQU K*Y DO G$MASM=0 ,G$BSEQ*(SM
)@@G@@$) EQU K*< DO G$MASM=1 ,G$BSEQ*($AP($)) EQU KT])-T EQU P(1,1)+(P(1)=0)*MSN
)@@G@@AINPROGRAM*MG$FLAG*(K,3) EQU T8-ISSUB EQU (T=SUBROUTINE)++(T=LIJSCC-#@@@SO
)@@G@@]@[@#]@@@K@B]-@DUY@#]@@@@@@@@K[D@@##M@@@@@@@]@@@@@@@@@R           MYP)MTSP
)@@G@@TL EQU G$CTR(4)+1*^ORIG*MG$CTR**(4) EQU TTL*&G$TLBL**(TTL) EQU G$TLBL(TTSQ
)@@G@@L)+G$CTR(2)*ILIF EQU R(2)=0*=FA(1) EQU R(2,1)+LIF*(G$TLBL(TTL)+1)*IDTH ESR
)@@G@@QU R(1,3)T#)Q DO R(1,2) , GO G$$T10T^)K G$$CAN R(1,1),1*S DO WA$(1)>1 , SS
)@@G@@GO G$$T01*S G$$COD R(1,1),1,0 FA(1)*E GO G$$T99MY*)Q G$$COD R(1,1),1,2+LST
)@@G@@IF*Y DO 1-LIF , I$ 074,04,,,,FA(1)CCC-#@@@]@[@]&@@@K@B]-@D J@]&@@@@@@@@DSU
)@@G@@[D@@]$M@@@@@@@G@@@@@@@@@P           MP6)KK EQU G$CTR(1)+1*JG$CTR*(1) EQUSV
)@@G@@ K*KM EQU G$CTR(5)+1*JG$CTR*(5) EQU M*KG$SEQN*(M) EQU K*KG$TYPE*(M) EQU SW
)@@G@@4T^)S DO G$CTR(6) , GO G$$R10T])UG$FLAG*(K,20) EQU G$CTR(2)*OESCF EQU G$SX
)@@G@@LABL(K,4)*:FALLF EQU (G$FLAG(K,21)>0)*(1-G$FLAG(K,21))*;N DO 10 ,G$LABL*SY
)@@G@@(K,N) EQU G$LABL(K,N)+G$CTR(2)+G$FLAG(K,10)8)N DO 9 ,G$LABL*(K,N+1) EQU SZ
)@@G@@G$LABCC-#@@@]@[@[6@@@K@B]-@@@@@[6@@@@@@@@A[D@@[7M@@@@@@@]@@@@@@@@@P     TA
)@@G@@      MB0)  PROC*HG$$FRG** NAME*E GO G$$DIA*^ ENDT^)E GO G$$FRGMB;)A RESTB
)@@G@@ 1*E GO G$$DIAMB_)CA EQU +)*E GO G$$DIAMC#)EG$DFLG*****KG$DFLG**** EQU 0TC
)@@G@@*T DO P(1)>0 , RES P(1,1)-$*E GO G$$DIAMCD)UA EQU + (I$ 0,0,0,0,077,0)MCTD
)@@G@@P)B RES -1*MK EQU 1+(P(0,0)=0)*IM EQU G$CTR(5)** G$ERFO G$TYPE(M),M,P(0,TE
)@@G@@0),P(K,1),P(K,2)*B UNLIST*D G$$IFLAG*B RES -2C@@C-#@@@]@[@]@@@@K@B]-@DIPTF
)@@G@@@]@@@@@@@@@[@-@@][)QOLINK*(1-(T=EXECSUB)))(]I DO KL-1 ,FNC(I) EQU 1+5*(GTG
)@@G@@$FLAG(K,2,I)<A0)+3*(G$FLAG(K,2,I)>A15)(#I DO KL-1 ,AFL(I) EQU G$FLAG(K,2TH
)@@G@@,I)-A0*(FNC(I)=1)-(R1-1)*(FNC(I)=4)(JI DO KL-1 , DO FNC(I)=1 ,FNC(I) EQUTI
)@@G@@ (FNC(I-1)<071)* (070*(AFL(I+1)=AFL(I)+1)+1)T])S DO ST=STACK , GO G$$B10TJ
)@@G@@*Q DO G$MASM=0 ,IC EQU #*T DO G$MASM=1 ,IC EQU $LCN*G$(G$LCTR(1))8Q DO GTK
)@@G@@$MASM=0 , DO (#=ICC-#@@@]@[@][@@@K@B]-@B"*@][@@@@@@@@[@-@@]])NC)**(KL>1)TL
)@@G@@ , J $+KL*? DO G$MASM=1 , DO ($LCN=IC)**(KL>1) , J $+KL*MG$LABL*(K,3) EQTM
)@@G@@U $*D RES KL-1* $(IC)(HI DO KL-1 , DO FNC(I)>0 , I$ FNC(I),012*(FNC(I)=0TN
)@@G@@71),AFL(I),,,G$LABL(K,3)+I-1*F DO 1 , ENDME%)ROI EQU P(SI+1,1)=OFFSET*NATO
)@@G@@I EQU P(SI,*KLX+2)*.OSV EQU + (I$ 0,OI*P(SI+1,3),0,P(SI,KLX+2),2*AI,OI*PTP
)@@G@@(SI+1,2))*?I DO KL-1 , S G$FLAG(K,2,I),OSV+(1-AI)*(I-1)8]G$CC)G@@@]@@@]]TQ
)@@G@@@@@@@@#@DB_1@]]@@@@@@@@[@)D@@@)OLABL*(K,3) EQU 0-OSV*^ END@ C-#@@@]@[@]^TR
)@@G@@@@@K@B]-@C@1@]^@@@@@@@@[@-@@] )^K,1)*M DO T=CYCLIC , ENDT^)X DO G$FLAG(KTS
)@@G@@,2)=0 , GO G$$X01*ONRR EQU +G$FLAG(K,2)*VLINK(1) EQU G$FLAG(K,2,NRR)*QNRTT
)@@G@@ EQU NRR-(LINK(1)<0)*) DO NRR>NR ,LINK(1) EQU -LINK(1)(AI DO NR ,FNC(I) TU
)@@G@@EQU 010+017*(G$FLAG(K,2,I)<A0)+013*(G$FLAG(K,2,I)>A15)( I DO NR ,AFL(I) TV
)@@G@@EQU G$FLAG(K,2,I)-A0*(FNC(I)=010)-(R1-1)*(FNC(I)=023)8,I DO NR , DO FNC(TW
)@@G@@I)=010 ,FNC(I) EQU (FNC(I-1)<CC-#@@@]@[@] @@@K@B]-@C[1@] @@@@@@@@[@-@@]ATX
)@@G@@)<071)* (061*(AFL(I+1)=AFL(I)+1)+010)T])+ DO G$MASM=0 ,SR EQU 0-G$LABL(KTY
)@@G@@,3)*$ DO G$MASM=1 ,SR EQU $AP(0-G$LABL(K,3))(T DO (SR>0)=0 ,I DO NR , DOTZ
)@@G@@ FNC(I)>0 , I$ FNC(I),013*(FNC(I)=071),AFL(I),,,G$LABL(K,3)+I-1T])S DO (UA
)@@G@@SR>0)=0 , GO G$$X01T])NINC EQU SR**0400000*UXSR EQU (017000000**SR)*/4*(UB
)@@G@@ DO INC>0 , ANX,U 0,NR+(017000000**SR)*/48WI DO NR , L G$FLAG(K,2,I),(SCUC
)@@G@@C-#@@@]@[@]A@@@K@B]-@C]1@]A@@@@@@@@[@-@@]B)OR**007777177777)+I-1MF+)MG$LUD
)@@G@@ABL*(K,5) EQU $*: DO T=LIJSUB , I$ 07,013,LINK(1),LINK(1),,0*: DO T=LDJSUE
)@@G@@UB , I$ 07,012,LINK(1),LINK(1),,0*Y DO T=SUBROUTINE , J 0,LINK(1)*, DO (UF
)@@G@@T=EXECSUB)++(T=REMOTESUB) , J G$LABL(K,4)*R DO $>G$LABL(K,5) , ENDT^)OXRUG
)@@G@@EG EQU G$FLAG(K,1)*Q DO XREG>0 , GO G$$X02*W DO T=MAINPROGRAM , ER EXIT$UH
)@@G@@*> DO T=CONTINGENCY , SZ,H1 G$LABL(K,4)CNCC-@@@@]@@@]B@@@@@@#@.CA6@]B@@@UI
)@@G@@@@@@@[@).@@@*! DO T=CONTINGENCY , I$ 074,04,,,1,G$LABL(K,4)*F DO 1 , ENDUJ
)@@G@@MF2)? DO T=CONTINGENCY , I$ 051,H1,,,,G$LABL(K,4)*! DO T=CONTINGENCY , IUK
)@@G@@$ 074,04,,,1,G$LABL(K,4)*9 DO G$MASM=0 , DO (G$LABL(K,4)<0)=0 , LX XREG,UL
)@@G@@G$LABL(K,4)*9 DO G$MASM , DO $AP(G$LABL(K,4))>=0 , LX XREG,G$LABL(K,4)*PUM
)@@G@@ I$ 074,04,,XREG,,$+1*B ER 011*B ER 040*B ER 026*B ER 012*^ END@ GC-#@@@UN
)@@G@@]@[@]G@@@K@B]-@CB6@]G@@@@@@@@[@-@@]H)L2)>2)) , GO NOLXI(# DO P(2,5)<016 UO
)@@G@@, I$ 046,P(2,5),XREG,P(2,4),2*P(2,*4)+P(2,*3),P(2,3)*5 DO P(2,5)>015 , GUP
)@@G@@$$IMU 046,P(2,5),XREG,P(2,4),P(2,3)*ENOLXI NAME*QFUN EQU 074-BANKSW*065*UQ
)@@G@@-JAY EQU 013-BANKSW*(P(2,2)=DBANK)*0 I$ FUN,JAY,XREG,P(1,2),2*P(1,*2)+P(UR
)@@G@@1,*1),P(1,1)*>K DO P(2)*(1-BANKSW) , SX XREG,P(2,K)*F DO 1 , ENDT])IG$$CUS
)@@G@@L1*** NAME*D J P(1,1)*F G$$PRB K,$CCC)E@@@]@@@]H@@@@@@#@BDKA@]H@@@@@@@@[UT
)@@G@@@)B@@@*^ END*^ END@ NOLXC-#@@@]@[@]J@@@K@B]-@DLG@]J@@@@@@@@[@-@@]K)M 1+IUU
)@@G@@FNOT,CXF,IFNOT*G +P(THF+1,1)*F DO 1 , ENDMID)KK EQU G$CTR(1)+1*JG$CTR*(1UV
)@@G@@) EQU K*SG$CTR*(5) EQU G$CTR(5)+1*IM EQU G$CTR(5)*KG$TYPE*(M) EQU 2*KG$SUW
)@@G@@EQN*(M) EQU KT^)>G$LABL*(K,1) EQU G$LABL(K,1)+G$CTR(2)*+G$CTR*(2) EQU G$UX
)@@G@@CTR(2)+G$FLAG(K,5)*1N DO 2 ,G$LABL*(K,N+1) EQU G$LABL(K,N+1)+G$CTR(2)*.NUY
)@@G@@ DO 2 ,G$LABL*(K,N+3) EQU G$LABL(K,N+3)+G$CTR(2)+G$FLAG(K,4)T]0[ CC-#@@@UZ
)@@G@@]@[@]K@@@K@B]-@DMG@]K@@@@@@@@[@-@@]L)7DO G$CTR(7) , DO (G$LABL(K,1)=$)=0VA
)@@G@@ , G$$DFL G$LABL(K,1)*MG$LABL*(K,1) EQU $*O DO LOOF , GO G$$I10T])?NOGENVB
)@@G@@ EQU G$CTR(7)*(G$LABL(K,5)=G$LABL(K,1))*WG$CTR*(4) EQU G$CTR(4)+NOGEN*J VC
)@@G@@DO NOGEN , ENDT])QG$FLAG*(K,1) EQU IFNOT*OG$FLAG*(K,6) EQU CXF*P DO G$CTVD
)@@G@@R(6) , G$$SVAT])URVF EQU IFNOT--G$FLAG(K,2)*NLIG EQU G$FLAG(K,3)8( DO 1-VE
)@@G@@LIG , G$$TST 1+IFNOT,CXF,RVF G$LABLCC)9@@@]@@@]L@@@@@@#@6CD6@]L@@@@@@@@[VF
)@@G@@@)6@@@) (K,4)*) DO LIG , G$$TST 1+IFNOT,CXF,RVF*SG$FLAG*(K,2) EQU SIDE(1VG
)@@G@@)*MG$LABL*(K,2) EQU $*F DO 1 , ENDMI,)+ DO (P(3,1)=VARY)=0 , G$$EFL 2,01VH
)@@G@@0*CVI EQU 3*MP(3,1) EQU LOOKFOR*LKW(1) EQU LOOKFOR*MG$LABL*(K,2) EQU $*BVI
)@@G@@ G$$LAN*< G$$LGE 3,FI(3),FI(4) G$LABL(K,4),1*ZG$CTR*(3) EQU G$CTR(3)+G$CVJ
)@@G@@TR(6)T])^ END@@@@@C-#@@@]@[@]O@@@K@B]-@CE6@]O@@@@@@@@[@-@@]P)A4)=$))*K RVK
)@@G@@ES G$FLAG(K,4)T^)? DO ($>G$LABL(K,2))++G$FLAG(K,2) , GO G$$I20**G$FLAG*(VL
)@@G@@K,5) EQU G$LABL(K,1)-G$LABL(K,2)*M RES G$LABL(K,1)-$*F DO 1 , ENDMJ8)> DVM
)@@G@@O G$LABL(K,4)=0 ,G$LABL*(K,4) EQU $T])*G$FLAG*(K,2) EQU G$LABL(K,3)=G$LAVN
)@@G@@BL(K,2)*)G$FLAG*(K,3) EQU $-G$LABL(K,2)=1*= DO G$FLAG(K,2)++G$FLAG(K,3)=VO
)@@G@@0 , ENDTB)LKK EQU G$CTR(3)+18XI DO G$ARGS(KK) ,J DO G$ARGS(CC-#@@@]@[@]PVP
)@@G@@@@@K@B]-@CF6@]P@@@@@@@@[@-@@]Q)-KK,I) ,P(I,J) EQU +G$ARGS(KK,I,J)(FI DO VQ
)@@G@@G$ARGS(KK) ,J DO G$ARGS(KK,I) , DO G$ARGS(KK,I,*J) ,P(I,J) EQU *P(I,J)T]VR
)@@G@@)PIFNOT EQU G$FLAG(K,1)*NCXF EQU G$FLAG(K,6)*URVF EQU IFNOT--G$FLAG(K,2)VS
)@@G@@* START*\ DO 1-G$FLAG(K,3) , G$$TST 1+IFNOT,CXF,RVF $+10** DO G$FLAG(K,3VT
)@@G@@) , G$$TST 1+IFNOT,CXF,RVF*SG$CTR*(4) EQU G$CTR(4)-1T^))SIZE EQU G$LABL(VU
)@@G@@K,2)-G$LABL(K,1)8FG$FLAG*(K,5CC)I@@@]@@@]Q@@@@@@#@FDN-@]Q@@@@@@@@[@)F@@@VV
)@@G@@)M) EQU $-START-SIZE*F RES 0-SIZE*^ END@ABC-#@@@]@[@]S@@@K@B]-@DO!@]S@@@VW
)@@G@@@@@@@[@-@@]T)[G*YXREG EQU P(1,2)+X11*(P(1,2)=0)(D DO BANKSW**(P(3)>2) , VX
)@@G@@I$ 046,P(3,5),XREG,P(3,4),3*P(3,*4)+P(3,*3),P(3,3)MLH)>G$LABL*(K,0) EQU VY
)@@G@@G$LABL(K,0)+G$CTR(2)*8 DO G$CTR(7) , DO (G$LABL(K,0)=$)=0 , G$$DFL G$LABVZ
)@@G@@L(K,0)*MG$LABL*(K,0) EQU $T])O RES CALOPT*G$CTR(6)MLO)S DO G$CTR(6) , GOWA
)@@G@@ G$$C40T^)7 DO 1-CALOPT , DO (P(1,1)<A0)++(P(1,1)>A3) , G$$EFL 3,1T 0HNUWB
)@@G@@MCA EQU +G$CC-#@@@]@[@]T@@@K@B]-@DP!@]T@@@@@@@@[@-@@]U)DFLAG(K,1)*SCMAX(WC
)@@G@@1) EQU -34359738367(@L DO NUMCA , DO G$FLAG(K,4,L)>CMAX(1) ,CMAX(1) EQU WD
)@@G@@G$FLAG(K,4,L)*TCMIN(1) EQU 0377777777777(@L DO NUMCA , DO G$FLAG(K,4,L)<WE
)@@G@@CMIN(1) ,CMIN(1) EQU G$FLAG(K,4,L)*LOFF EQU 1-CMIN(1)*PJTSIZ EQU CMAX(1)WF
)@@G@@+OFF*6JTL EQU JTSIZ-(G$FLAG(K,3)=-1)*(G$FLAG(K,4,1)=CMAX(1))*% DO CALOPTWG
)@@G@@ , DO (CMIN(1)=0)=0 , G$$EFL 3,5T^0LG$LABL*(K,3) EQU CC-#@@@]@[@]U@@@K@BWH
)@@G@@]-@DQ!@]U@@@@@@@@[@-@@]V)OG$LABL(K,3)+G$CTR(2)*&PRSIZ EQU (CALOPT=0)*(4-WI
)@@G@@3*G$FLAG(K,6))*2G$CTR*(2) EQU G$CTR(2)+(G$FLAG(K,3)<1)*(PRSIZ+JTL)*!N DOWJ
)@@G@@ 2 ,G$LABL*(K,N) EQU G$LABL(K,N)+G$CTR(2)*R DO G$FLAG(K,3)>0 , ENDT^))ISWK
)@@G@@NF EQU G$LABL(K,2)>G$LABL(K,1)*+ DO (NFI(1)>0)**ISNF , G$$EFL 3,07*XNFA(WL
)@@G@@1) EQU G$LABL(K,3-2*ISNF)*= DO NFI(1)>0 ,NFA(1) EQU P(NFI(1),2)T])T DO CWM
)@@G@@ALOPT ,NFA(1) EQU -1T]C@C-#@@@]@[@]V@@@K@B]-@DR!@]V@@@@@@@@[@-@@]W)WN DOWN
)@@G@@ JTSIZ ,JT(N) EQU NFA(1)T])/N DO NUMCA ,JT(G$FLAG(K,4,N)+OFF) EQU G$LABLWO
)@@G@@(K,4,N)+G$CTR(2)T#)5N DO JTSIZ , DO JT(N)=G$CTR(2) ,JT(N) EQU G$LABL(K,3WP
)@@G@@)T#)?N DO CALOPT*JTSIZ , DO JT(N)=-1 , G$$EFL 3,6T^)ROSADR EQU G$LABL(K,WQ
)@@G@@3)+1*2N DO JTSIZ , DO JT(N)=OSADR ,JT(N) EQU G$LABL(K,3)TA)Q DO CALOPT ,WR
)@@G@@ GO G$$C26*X DO G$FLAG(K,6)>0 , GO G$$C258Q TLE,XU P(1,1),CMAX(1)CC-#@@@WS
)@@G@@]@[@]W@@@K@B]-@CH[@]W@@@@@@@@[@-@@]X)]+1*Q TLE,XU P(1,1),CMIN(1)*D J NFAWT
)@@G@@(1)MML)J J $+OFF,P(1,1)*E GO G$$C29MMO)QFUN EQU 074-BANKSW*065*-JAY EQU WU
)@@G@@013-BANKSW*(P(3,2)=DBANK)*SHI EQU 2*P(2,*2)+P(2,*1)*- I$ FUN,JAY,XREG,P(WV
)@@G@@2,2),HI,P(2,1)MMW)UG$LABL*(K,6) EQU $-CMIN(1)*MN DO JTL , J JT(N)MM<)TG$WW
)@@G@@FLAG*(K,3) EQU 0-CALOPT*MG$LABL*(K,1) EQU $*MG$FLAG*(K,1) EQU 0*OG$LABL*WX
)@@G@@(K,4,0) EQU $*MG$FLAG*(K,2) EQU 0C@@C)D@@@]@@@]X@@@@@@#@ACIB@]X@@@@@@@@[WY
)@@G@@@)A@@@*^ END@@A@@@C-#@@@]@[@]Z@@@K@B]-@CJB@]Z@@@@@@@@[@-@@]))R)=MAX(1) ,WZ
)@@G@@IMAX(1) EQU N*KMTEMP EQU P(1,1)*LP(1,1) EQU MAX(1)*QP(1,IMAX(1)) EQU MTEXA
)@@G@@MPMNK)RREDUN EQU $=G$LABL(K,3)*VGOTSOM EQU $>G$LABL(K,4,JJ)*6 DO (G$FLAGXB
)@@G@@(K,3)<0)**(JJ=1) ,G$FLAG*(K,3) EQU GOTSOM-2T]), DO GOTSOM**1-REDUN , I$ XC
)@@G@@074,04,,,,G$LABL(K,3)*Y DO GOTSOM ,G$LABL*(K,5) EQU $*<G$CTR*(2) EQU G$CXD
)@@G@@TR(2)-REDUN*GOTSOM8$N DO (1-GOTSOM)*G$FLAG(K,2) ,G$LABL*(K,CC-#@@@]@[@])XE
)@@G@@@@@K@B]-@CKB@])@@@@@@@@[@-@@]-)J4,JJ+1-N) EQU 0T^)SG$FLAG*(K,1) EQU JJ+PXF
)@@G@@(1)*QG$FLAG*(K,2) EQU +P(1)*%N DO P(1) ,G$FLAG*(K,4,JJ+N) EQU +(P(1,N))(XG
)@@G@@0 DO G$CTR(7) , DO (G$LABL(K,4,JJ+1)=0)=0 , DO (G$LABL(K,4,JJ+1)+G$CTR(2XH
)@@G@@)=$)=0 , G$$DFL G$LABL(K,4,JJ+1)+G$CTR(2)T])+N DO P(1) ,G$LABL*(K,4,JJ+NXI
)@@G@@) EQU $*Y DO (P(2,1)=REMOTESUB)=0 , ENDT])>G$FLAG*(K,5) EQU G$FLAG(K,5)+XJ
)@@G@@G$CTR(6)*M DO G$CTR(6) , ENDCCC)Y@@@]@@@]-@@@@@@#@VCK+@]-@@@@@@@@[@)V@@@XK
)@@G@@*U G$$PRA P(2,2),G$LABL(K,3)*- DO P(2,3)=VIA ,P(2,2) EQU P(2,4)*^HERE*?NXL
)@@G@@ DO P(1) , G$$PJT G$LABL(K,6)+P(1,N),P(2,2)T])F RES HERE-$*^ END@,C-#@@@XM
)@@G@@]@[@]=@@@K@B]-@CL+@]=@@@@@@@@[@-@@]>)CMIN(1)+1*. DO G$FLAG(K,3)=-1 ,JTS(XN
)@@G@@1) EQU JTS(1)-(CMAX(1)=G$FLAG(K,4,1))T])8 DO G$LABL(K,0)=$ , DO G$FLAG(KXO
)@@G@@,5)=0 ,G$FLAG*(K,3) EQU 1T#)RREDUN EQU G$LABL(K,5)=$*&PRSIZ EQU (CALOPT=XP
)@@G@@0)*(4-3*G$FLAG(K,6))*,FLOAT EQU (G$FLAG(K,3)<1)*(PRSIZ+JTS(1)-REDUN)*N RXQ
)@@G@@ES FLOAT*G$CTR(6)*>G$CTR*(2) EQU G$CTR(2)-FLOAT*G$CTR(7)T]0\ DO G$CTR(7)XR
)@@G@@ , DO (G$LABL(K,3)=$)=0 , G$$DFL G$CC)L@@@]@@@]>@@@@@@#@IDV=@]>@@@@@@@@[XS
)@@G@@@)I@@@)DLABL(K,3)*MG$LABL*(K,3) EQU $*LG$CTR*(5) EQU M-1T])^ END@GC-#@@@XT
)@@G@@]@[@]$@@@K@B]-@DW0@]$@@@@@@@@[@-@@]*)VL(K,N+1)+G$FLAG(K,16)+FALLF*5N DO XU
)@@G@@6 ,G$LABL*(K,N+4) EQU G$LABL(K,N+4)+G$FLAG(K,17)*5N DO 5 ,G$LABL*(K,N+5)XV
)@@G@@ EQU G$LABL(K,N+5)+G$FLAG(K,13)([N DO 4 ,G$LABL*(K,N+6) EQU G$LABL(K,N+6XW
)@@G@@)+G$FLAG(K,14)+G$FLAG(K,5)*5N DO 3 ,G$LABL*(K,N+7) EQU G$LABL(K,N+7)+G$FXX
)@@G@@LAG(K,18)*Y DO ESCF=0 ,G$LABL*(K,4) EQU 0MQL)EC(1) EQU 1*KKW(1) EQU P(1,XY
)@@G@@1)MQR)MWI EQU KW(1)=WHILE8CG$FLAG*(CC-#@@@]@[@]*@@@K@B]-@DY]@]*@@@@@@@@[XZ
)@@G@@@-@@]()FK,4) EQU WI*O DO WI=0 , GO G$$R59*)WYNOT EQU (P(2)=1)**(P(2,1)=NYA
)@@G@@OT)*"WC EQU ((P(3+WYNOT,1)=OR)++(P(3+WYNOT,1)=AND))**(P(3+WYNOT)=1)*PC(1YB
)@@G@@) EQU 3+WYNOT+2*WC*NKW(1) EQU P(C(1),1)MQ*)- DO (KW(1)=LOOKFOR)=0 , GO GYC
)@@G@@$$R61*HVI EQU C(1)+2*4 DO (P(VI,1)>VARY)++(P(VI,1)<LOOKFOR) , G$$EFL 2,0YD
)@@G@@10*NP(VI,1) EQU LOOKFOR*MG$FLAG*(K,8) EQU 1*E GO G$$R62MQ00LVI EQU C(1)*YE
)@@G@@((KW(CC-#@@@]@[@](@@@K@B]-@CL0@](@@@@@@@@[@-@@]%)V1)>JMGI-1)**(KW(1)<VARYF
)@@G@@Y+1))*O DO VI=0 , GO G$$R69MQ4)B G$$LAN*QG$FLAG*(K,2) EQU FI(5)*QG$FLAG*YG
)@@G@@(K,3) EQU FI(3)*KC(1) EQU FI(7)+1*NKW(1) EQU P(C(1),1)MQ')NG$FLAG*(K,1) YH
)@@G@@EQU VIT^)<G$FLAG*(K,6) EQU C(1)*(KW(1)=UNTIL)MR#): DO G$FLAG(K,10) , I$ YI
)@@G@@074,04,,,,G$LABL(K,7)*<G$CTR*(2) EQU G$CTR(2)+G$FLAG(K,10)T])MG$LABL*(K,YJ
)@@G@@1) EQU $8> DO (WI>0)**1-G$FLAG(K,11) , G$$TST 2CC-#@@@]@[@]%@@@K@B]-@CM0YK
)@@G@@@]%@@@@@@@@[@-@@]:)V+WYNOT,WC,WYNOT G$LABL(K,9)*!G$CTR*(4) EQU G$CTR(4)+YL
)@@G@@((WI>0)**G$FLAG(K,11))*<G$CTR*(2) EQU G$CTR(2)+G$FLAG(K,16)T^)MG$LABL*(KYM
)@@G@@,2) EQU $(S DO VI>0 , DO (P(VI,1)=LOOKFOR)++((FI(5)=FI(6))=0) , G$$LGE VYN
)@@G@@I,FI(3),FI(4) G$LABL(K,9),1T#)& DO G$LABL(K,2)<$ ,G$FLAG*(K,21) EQU 0T^)YO
)@@G@@B G$$SVA*MG$FLAG*(K,9) EQU 0*8 DO G$CTR(7) , DO (G$LABL(K,3)=$)=0 , G$$DYP
)@@G@@FL G$LABL(K,3)8[GCC)G@@@]@@@]:@@@@@@#@DCN9@]:@@@@@@@@[@)D@@@)L$LABL*(K,3YQ
)@@G@@) EQU $T])^ END@F*C-#@@@]@[@]!@@@K@B]-@CO9@]!@@@@@@@@[@-@@],)^,10)*V DO YR
)@@G@@G$FLAG(K,8) , GO G$$E10T])) DO (P(1,1)=WHEN)=0 , G$$EFL 3,4*-WHENOT EQU YS
)@@G@@(P(2)=1)**(P(2,1)=NOT)*NCFLG EQU P>3+WHENOTTA-N DO G$CTR(6)++G$FLAG(K,12YT
)@@G@@) , G$$TST 2+WHENOT,CFLG,WHENOT G$LABL(K,1+5*G$FLAG(K,19))T])QSIZE EQU $YU
)@@G@@-G$LABL(K,4)*O RES 0-G$CTR(6)*SIZE*:G$CTR*(4) EQU G$CTR(4)+G$CTR(7)+G$FLYV
)@@G@@AG(K,7)82 DO G$FLAG(K,12)++G$FLAG(K,7)=0 , G$$TST 2+WHENOT,CC)$@@@]@@@],YW
)@@G@@@@@@@@#@=CRW@],@@@@@@@@[@)=@@@)UCFLG,1-WHENOT G$LABL(K,10)T])QWIZE EQU $YX
)@@G@@-G$LABL(K,4)T])& DO G$CTR(6) ,G$FLAG*(K,7) EQU SIDE(1)*<G$CTR*(2) EQU G$YY
)@@G@@CTR(2)+G$FLAG(K,17)*VG$FLAG*(K,17) EQU SIZE-WIZEMSG)MG$LABL*(K,5) EQU $*YZ
)@@G@@^ END@C-#@@@]@[@]0@@@K@B]-@DZ9@]0@@@@@@@@[@-@@]1)AK,6) 1*MG$LABL*(K,6) EZA
)@@G@@QU $*F DO 1 , ENDMS8)V DO G$FLAG(K,9) , GO G$$Z50*MG$FLAG*(K,9) EQU 1*> ZB
)@@G@@DO G$LABL(K,6)=0 ,G$LABL*(K,6) EQU $*JKK EQU G$CTR(3)*"I DO G$ARGS(KK) ,ZC
)@@G@@J DO G$ARGS(KK,I) ,P(I,J) EQU +G$ARGS(KK,I,J)(FI DO G$ARGS(KK) ,J DO G$AZD
)@@G@@RGS(KK,I) , DO G$ARGS(KK,I,*J) ,P(I,J) EQU *P(I,J)T])MG$CTR*(3) EQU KK-1ZE
)@@G@@*: DO (Y(0,0)=1)**(G$ARGS(KK)=0) , G$$GFL 2,3C,CC-#@@@]@[@]1@@@K@B]-@D)9ZF
)@@G@@@]1@@@@@@@@[@-@@]2*MLL EQU G$FLAG(K,2)*WDFER EQU LL++(G$FLAG(K,4)>0)TA) ZG
)@@G@@UNORG*MUN EQU G$FLAG(K,6)*O DO UN=0 , GO G$$Z30*YKILL EQU G$CTR(7)**G$FLZH
)@@G@@AG(K,7)*+G$CTR*(2) EQU G$CTR(2)+G$FLAG(K,5)*VG$CTR*(4) EQU G$CTR(4)+KILLZI
)@@G@@*O DO KILL , GO G$$Z30*=UNN EQU (P(UN+1)=1)**(P(UN+1,1)=NOT)(]UNC EQU (PZJ
)@@G@@(UN+UNN+2)=1)**((P(UN+UNN+2,1)=OR)++(P(UN+UNN+2,1)=AND))8Z G$$TST UN+UNNZK
)@@G@@+1,UNC,DFER--UNN CC-#@@@]@[@]2@@@K@B]-@D-_@]2@@@@@@@@[@-@@]3)MG$LABL(K,1ZL
)@@G@@+9*DFER)MTQ)SG$FLAG*(K,5) EQU UNORG-$*: DO G$FLAG(K,14) , I$ 074,04,,,,GZM
)@@G@@$LABL(K,1)*<G$CTR*(2) EQU G$CTR(2)+G$FLAG(K,14)*NG$FLAG*(K,14) EQU 0TB)MZN
)@@G@@G$LABL*(K,7) EQU $T]))WYNOT EQU (P(2)=1)**(P(2,1)=NOT)*"WC EQU ((P(3+WYNZO
)@@G@@OT,1)=OR)++(P(3+WYNOT,1)=AND))**(P(3+WYNOT)=1)(L DO (G$FLAG(K,4)>0)**1-GZP
)@@G@@$FLAG(K,15) , G$$TST 2+WYNOT,WC,LL=WYNOT G$LABL(K,2+7*LL)T]CC-#@@@]@[@]3ZQ
)@@G@@@@@K@B]-@D+_@]3@@@@@@@@[@-@@]4)<G$CTR*(4) EQU G$CTR(4)+G$FLAG(K,15)*<G$CZR
)@@G@@TR*(2) EQU G$CTR(2)+G$FLAG(K,18)T^)MG$LABL*(K,8) EQU $*; DO G$CTR(6) ,G$ZS
)@@G@@FLAG*(K,7) EQU G$FLAG(K,7)++(G$FLAG(K,1)>0)*3 DO LL , G$$LGE G$FLAG(K,1)ZT
)@@G@@,G$FLAG(K,3) G$LABL(K,3)T])3 DO G$CTR(6) ,G$FLAG*(K,7) EQU G$FLAG(K,7)++ZU
)@@G@@SIDE(1)*' DO G$CTR(7) , DO (G$LABL(K,9)=$)=0 , G$$DFL G$LABL(K,9) 2*MG$LZV
)@@G@@ABL*(K,9) EQU $T^0E DO Y(0,0)CC-#@@@]@[@]4@@@K@B]-@CSW@]4@@@@@@@@[@-@@]5ZW
)@@G@@)C=1 , ENDMT')/ DO G$CTR(7) , DO (G$LABL(K,10)=$)=0 , G$$DFL G$LABL(K,10ZX
)@@G@@) 3*NG$LABL*(K,10) EQU $*UG$CTR*(2) EQU G$FLAG(K,20)*LG$CTR*(5) EQU M-1*ZY
)@@G@@M DO G$CTR(7) , ENDTB)SESCAPP EQU G$LABL(K,4)>0*$RVAC EQU G$LABL(K,3)=G$ZZ
)@@G@@LABL(K,5-ESCAPP)*)EVAC EQU G$LABL(K,5)=G$LABL(K,6)*!UOVAC EQU G$LABL(K,6AA
)@@G@@)=G$LABL(K,7)+G$FLAG(K,5)*)OVAC EQU G$LABL(K,6)=G$LABL(K,7)8EAVAC EQU GCAB
)@@G@@C-#@@@]@[@]5@@@K@B]-@CTW@]5@@@@@@@@[@-@@]6)R$LABL(K,9)=G$LABL(K,10)T])3NAC
)@@G@@OKILL EQU G$FLAG(K,7)++1-(RVAC**EVAC**UOVAC**AVAC)T])QVATBOT EQU G$FLAG(AD
)@@G@@K,2)*TLOOBOT EQU VATBOT++1-OVAC*TEFOLLO EQU LOOBOT++1-AVACT^)SWHSPEC EQUAE
)@@G@@ G$FLAG(K,4)>0*<WONET EQU 1=G$LABL(K,2)-G$LABL(K,1)*<WONEB EQU 1=G$LABL(AF
)@@G@@K,8)-G$LABL(K,7)T])>WHIBOT EQU (EFOLLO++1-ESCAPP)**NOKILL*TWHISBO EQU WHAG
)@@G@@SPEC**WHIBOT8VWHITOP EQU (WONET**WONEB**1CC-#@@@]@[@]6@@@K@B]-@CUW@]6@@@AH
)@@G@@@@@@@[@-@@]7)U-VATBOT++1-WHIBOT)**NOKILLT^)+G$FLAG*(K,11) EQU WHSPEC**1-AI
)@@G@@WHITOP*8G$FLAG*(K,16) EQU (G$LABL(K,1)-G$LABL(K,2))*G$FLAG(K,11)*+G$FLAGAJ
)@@G@@*(K,15) EQU WHSPEC**1-WHIBOT*8G$FLAG*(K,18) EQU (G$LABL(K,7)-G$LABL(K,8)AK
)@@G@@)*G$FLAG(K,15)T^))G$FLAG*(K,19) EQU LOOBOT++WHISBO*0G$FLAG*(K,12) EQU (GAL
)@@G@@$FLAG(K,19)**EVAC=0)**NOKILL*:G$FLAG*(K,17) EQU G$FLAG(K,17)*G$FLAG(K,12AM
)@@G@@)8C DO 1-NOCC-#@@@]@[@]7@@@K@B]-@CVW@]7@@@@@@@@[@-@@]8)8KILL ,G$FLAG*(K,AN
)@@G@@17) EQU ESCAPP*(G$LABL(K,4)-G$LABL(K,5))(@G$FLAG*(K,13) EQU NOKILL**ESCAAO
)@@G@@PP**G$FLAG(K,12)**(EFOLLO++WHISBO)T^)4G$FLAG*(K,10) EQU (VATBOT++1-WHITOAP
)@@G@@P**WHSPEC)**NOKILLTD)>CANFAL EQU 1-WHSPEC**(G$FLAG(K,21)>0)*Z DO CANFAL AQ
)@@G@@,G$FLAG*(K,10) EQU 0*- DO 1-CANFAL ,G$FLAG*(K,21) EQU 0T^)!UNTOP EQU (G$AR
)@@G@@FLAG(K,6)>0)**(VATBOT++WHSPEC=0)8NG$FLAG*(K,14) EQU (CC)!@@@]@@@]8@@@@@@AS
)@@G@@#@%CXA@]8@@@@@@@@[@)%@@@),OVAC**ESCAPP++WHISBO++VATBOT++UNTOP=0)**NOKILLAT
)@@G@@*$G$FLAG*(K,5) EQU G$FLAG(K,5)*(1-NOKILL)T^)TG$FLAG*(K,7) EQU 1-NOKILL(ZAU
)@@G@@ RES G$FLAG(K,5)+G$FLAG(K,10)+G$FLAG(K,16)+G$FLAG(K,17)+ G$FLAG(K,13)+G$AV
)@@G@@FLAG(K,14)+G$FLAG(K,18)T])^ END@+WYNC)-@@@]@@@]'@@@@@@#@YCX=@]'@@@@@@@@[AW
)@@G@@@)Y@@@)DGO G$$D99MV1)Q LXI,U A0,$+(P(1)>0)+3*8 DO P(1)>0 , I$ 026,U,A0,PAX
)@@G@@(1,2),2*P(1,*2)+P(1,*1),P(1,1)MV5)E ER P(0,0)*L I$ 074,04,,,,$+2*K AA,U AY
)@@G@@A0,0400000*^ END@7C-#@@@]@[@]/@@@K@B]-@CY=@]/@@@@@@@@[@-@@].)Q1)>1)++U16AZ
)@@G@@ , GO G$$A30T^)IPI3 EQU P(I,3)*Y DO G$MASM=1 ,PI3 EQU $AP(PI3)*&NEGEQU EBA
)@@G@@QU (P(I,5)=017)**(PI3>0377777)*0OFVAL EQU 0377777+0400000*((P(I,5)=016)+BB
)@@G@@+NEGEQU)(@FUDGE EQU ((LT-LE)*(P(I,2)=LE)+(GE-GT)*(P(I,2)=GT))* (PI3<OFVABC
)@@G@@L)T])TP**(I,2) EQU P(I,2)+FUDGE*ZP**(I,3) EQU P(I,3)+1-(FUDGE=0)*" DO ((BD
)@@G@@P(I,3)=0)**(P(I,4)=0)=0)++(G$ALTT(P(I,2))=0) , GO G$$A30T CCC-#@@@]@[@].BE
)@@G@@@@@K@B]-@CZ=@].@@@@@@@@[@-@@]")S DO 1-G$AMPR , GO G$$A30*, DO G$MASM=0 ,BF
)@@G@@ DO (#(P(I,3))=-2)=0 , GO G$$A30*\ DO G$MASM=1 , DO ($BA(P(I,3))=0)=0 , BG
)@@G@@GO G$$A30*VP**(I,3) EQU G$ALTT(P(I,2))*U DO G$MASM=0 ,P**(I) EQU 3*Y DO BH
)@@G@@G$MASM=1 ,P**(I,4) $DELETE*Y DO G$MASM=1 ,P**(I,5) $DELETE*E GO G$$A20MWBI
)@@G@@')Q DO P(I)>3 , GO G$$A30*IREG EQU P(I,3)*? DO G$MASM=1 , DO ($BA(REG)=0BJ
)@@G@@)=0 , GO G$$A308G DO G$MASM=0CC)_@@@]@@@]"@@@@@@#@/C+$@]"@@@@@@@@[@)/@@@BK
)@@G@@)Z , DO (#(REG)=-2)=0 , GO G$$A30*< DO (REG<A0)++(REG>A15) , GO G$$A30*NBL
)@@G@@P**(I,3) EQU P(I,1)*KP**(I,1) EQU REGMX#)JP**(I,2) EQU IS*EN(1) EQU 3MXBBM
)@@G@@)TJ(1) EQU P(I,G$KSF(N(1)))*- DO DTH ,J(1) EQU G$IV(N(1),J(1))*R DO J(1)BN
)@@G@@<1 , G$$EFL 1,2*VNI$*(K) EQU G$FJ(N(1),J(1))*VWA$*(K) EQU G$WS(N(1),J(1)BO
)@@G@@)*KKE$*(K) EQU J(1)*KTP$*(K) EQU N(1)*^ END@PEC=C-#@@@]@[@#@@@@K@B]-@C<$BP
)@@G@@@#@@@@@@@@@[@-@@#[)PI,3)+(1-CGISF)*Q(2,1)*=SIDE**(1) EQU SIDE(1)++(N=5)+BQ
)@@G@@+(HI>0)*< DO G$FJ(N,JI(1),1)>077 , GO G$$G10T^)LJIU EQU JI(2-WOK)*QNUMINBR
)@@G@@S EQU G$FJ(N,JIU)*4K DO NUMINS ,FUN(K) EQU G$FCF(N)+CGISF*G$FJ(N,JIU,K)*BS
)@@G@@3K DO NUMINS ,JAY(K) EQU JJJ+(1-CGISF)*G$FJ(N,JIU,K)*5K DO NUMINS*(1-U18BT
)@@G@@) , I$ FUN(K),JAY(K),AAA,XXX,HI,UUU*2K DO NUMINS*U18 , G$$IMU FUN(K),JAYBU
)@@G@@(K),AAA,XXX,UUUCC^C-#@@@]@@@#[@@@@@@]-@C>$@#[@@@@@@@@[@-@@@@*?REVER**(1)BV
)@@G@@ EQU G$FJ(N,JI(1))*G$FJ(N,JI(2))=1*& DO REVER(1)++WOK=0 , I$ 074,04,,,,$BW
)@@G@@+2*F DO 1 , ENDMX/)RFUN EQU G$FJ(N,JI(1),1)*T DO FUN=01637 , GO G$$G20T#BX
)@@G@@)VAREG EQU AAA+A0*(FUN>01700)*1 I$ FUN*/-4,FUN**017,AREG,,,WOK*UUU+(WOK=BY
)@@G@@0)*($+2)*W DO WOK=0 , I$ 074,04,,,,UUU*F DO 1 , ENDMYA)< I$ FUN*/-4,FUN*BZ
)@@G@@*017,AAA,XXX,HI,UUU*W DO WOK=0 , I$ 074,04,,,,$+2*^ END@M=0CC-#@@@]@[@##CA
)@@G@@@@@K@B]-@C&6@##@@@@@@@@[@-@@#^*E GO G$$T99MY\))K DO 2 ,II(K) EQU R(1,1)+CB
)@@G@@2*(K=2)*RK DO 2 , G$$CAN II(K),K*:K DO 2 ,IX(K) EQU K+(WA$(2)<WA$(1))*(3CC
)@@G@@-2*K)T])YWOVR EQU (WA$(1)>1)+(WA$(2)>1)*( DO (P(R(1,1)+1,1)=AND)=1-DTH ,CD
)@@G@@ GO G$$T20T^)Q DO WOVR>0 , GO G$$T11T])> G$$COD II(IX(1)),IX(1),1 G$TLBLCE
)@@G@@(TTL)*Z G$$COD II(IX(2)),IX(2),0 FA(1)*E GO G$$T99MY")Q DO WOVR>1 , GO GCF
)@@G@@$$T13TB0O DO (WA$(IX(1))=0)++CC-#@@@]@[@#^@@@K@B]-@D&X@#^@@@@@@@@[@-@@# CG
)@@G@@)0(G$FJ(TP$(IX(1)),KE$(IX(1)),1)<0100) , GO G$$T12T])> G$$COD II(IX(1)),CH
)@@G@@IX(1),1 G$TLBL(TTL)*X G$$COD II(IX(2)),IX(2),2+LIF*Y DO 1-LIF , I$ 074,0CI
)@@G@@4,,,,FA(1)*E GO G$$T99MZH)T G$$COD II(IX(2)),IX(2),2*Z G$$COD II(IX(1)),CJ
)@@G@@IX(1),0 FA(1)*E GO G$$T99MZM)N DO LIF , GO G$$T14*T G$$COD II(IX(1)),IX(CK
)@@G@@1),3*T I$ 074,04,,,,G$TLBL(TTL)*T G$$COD II(IX(2)),IX(2),28F I$ 074,04,CCL
)@@G@@C-#@@@]@[@# @@@K@B]-@D$5@# @@@@@@@@[@-@@#A)C,,,FA(1)*E GO G$$T99MZU)W DOCM
)@@G@@ NI$(IX(1))>1 , GO G$$T15T])T G$$COD II(IX(2)),IX(2),2*T G$$COD II(IX(1)CN
)@@G@@),IX(1),3*E GO G$$T99MZ-)W DO NI$(IX(2))>1 , GO G$$T16T])T G$$COD II(IX(CO
)@@G@@1)),IX(1),2*T G$$COD II(IX(2)),IX(2),3*E GO G$$T99MZ*)T G$$COD II(IX(1))CP
)@@G@@,IX(1),3*T I$ 074,04,,,,G$TLBL(TTL)*T G$$COD II(IX(2)),IX(2),3*E GO G$$TCQ
)@@G@@99MZ2)Q DO WOVR>0 , GO G$$T21T]0C G$$COD CC-#@@@]@[@#A@@@K@B]-@D(B@#A@@@CR
)@@G@@@@@@@[@-@@#B)RII(IX(1)),IX(1),0 FA(1)*Z G$$COD II(IX(2)),IX(2),0 FA(1)*ECS
)@@G@@ GO G$$T99MZ9)Q DO WOVR>1 , GO G$$T23T])Z G$$COD II(IX(1)),IX(1),0 FA(1)CT
)@@G@@*X G$$COD II(IX(2)),IX(2),2+LIF*Y DO 1-LIF , I$ 074,04,,,,FA(1)*E GO G$$CU
)@@G@@T99M)[)N DO LIF , GO G$$T26*W DO NI$(IX(1))>1 , GO G$$T24T])T G$$COD II(CV
)@@G@@IX(2)),IX(2),3*T G$$COD II(IX(1)),IX(1),2*N I$ 074,04,,,,FA(1)*E GO G$$TCW
)@@G@@99M)E0^ DO CC-#@@@]@[@#B@@@K@B]-@C$6@#B@@@@@@@@[@-@@#C)SNI$(IX(2))>1 , GCX
)@@G@@O G$$T25T])T G$$COD II(IX(1)),IX(1),3*T G$$COD II(IX(2)),IX(2),2*N I$ 07CY
)@@G@@4,04,,,,FA(1)*E GO G$$T99M)M)T G$$COD II(IX(1)),IX(1),2*N I$ 074,04,,,,FCZ
)@@G@@A(1)*T G$$COD II(IX(2)),IX(2),2*N I$ 074,04,,,,FA(1)*E GO G$$T99M)T)T G$DA
)@@G@@$COD II(IX(1)),IX(1),2*N I$ 074,04,,,,FA(1)*T G$$COD II(IX(2)),IX(2),3M)DB
)@@G@@Y)R DO $=ORIG , G$$EFL 1,18T DO G$CTR(7) , DO (G$TLBLCC)N@@@]@@@#C@@@@@@DC
)@@G@@#@KC(A@#C@@@@@@@@[@)K@@@)&(TTL)=$)=0 , G$$DFL G$TLBL(TTL) 0,0777*NG$TLBLDD
)@@G@@**(TTL) EQU $*^ END@(4) C-#@@@]@[@#E@@@K@B]-@C%A@#E@@@@@@@@[@-@@#F)WVI+2DE
)@@G@@,1)=BY)+3*(P(VI+3,1)=BY)*KFI*(7) EQU FI(4)*(I DO 3 , DO FI(I)>FI(7) ,FI*DF
)@@G@@(7) EQU FI(I)*HLF(1) EQU 0+PT^)$ DO (K3=MASKED)++(FI(3)>VI) , GO G$$L01*DG
)@@G@@KFI*(3) EQU LF(1)*MP*(FI(3),1) EQU TO*MP*(FI(3),4) EQU XU*LLF(1) EQU LF(DH
)@@G@@1)+1M-;)S DO FI(4)=VI , GO G$$L02*= DO P(FI(4),4)=U ,P*(FI(4),4) EQU XU*DI
)@@G@@LNB EQU 0+P(FI(4))8! DO G$MASM=0 , DO (P(FI(4),NB)>0)++(NB=5) , GCC-#@@@DJ
)@@G@@]@[@#F@@@K@B]-@C:A@#F@@@@@@@@[@-@@#G)CO G$$L02*' DO G$MASM=1 , DO ($AP(PDK
)@@G@@(FI(4),NB))>0)++(NB=5) , GO G$$L02*VP*(FI(4),5) EQU P(FI(4),NB)*MP*(FI(4DL
)@@G@@),NB) EQU 0M+F)G ON G$MASM=0T^-=I DO 4 , DO FI(I)>VI ,UV(I) EQU +(I$ 0,PDM
)@@G@@(FI(I),4),0,P(FI(I),3),2*P(FI(I),*3)+P(FI(I),*2),P(FI(I),2))T#-LI DO 4 ,DN
)@@G@@ DO P(FI(I),2)>0777777 ,IM(I) EQU 07017000000**(G$NOFO UV(I))=0700000000DO
)@@G@@0T]0YI DO 4 , DO P(FI(I),2)<0100000CC-#@@@]@[@#G@@@K@B]-@C?A@#G@@@@@@@@[DP
)@@G@@@-@@#H)20 ,IM(I) EQU (P(FI(I),3)=0)**(016=P(FI(I),4)**016)T])"I DO 4 , DDQ
)@@G@@O IM(I)**(P(FI(I),2)<01000000) ,IV(I) EQU P(FI(I),2)T]-FI DO 4 , DO IM(IDR
)@@G@@)**(P(FI(I),2)>0777777) ,IV(I) EQU + (G$NOFO UV(I)**G$UMSK)T])9I DO 4 , DS
)@@G@@DO IV(I)>0377777 ,IV(I) EQU IV(I)++0777777000000*XI DO 2 ,APIV(I+1) EQU DT
)@@G@@IV(I+1)*^ OFFT])G ON G$MASM=1T])FI $REPEAT 4*RAPU EQU $AP(P(FI(I),2))T^0DU
)@@G@@^ DO CC-#@@@]@[@#H@@@K@B]-@D%:@#H@@@@@@@@[@-@@#I-SFI(I)>VI ,UV(I) EQU +(DV
)@@G@@I$ 0,P(FI(I),4),0,P(FI(I),3),2*P(FI(I),*3)+P(FI(I),*2),P(FI(I),2))T])NAPDW
)@@G@@UV EQU $AP(UV(I))T]->IM(I) EQU APU>0777777-> 07017000000**(G$NOFO APUV)=DX
)@@G@@07000000000! (P(FI(I),3)=0)**(016=P(FI(I),4)**016)T#- IV(I) EQU IM(I)**(DY
)@@G@@APU<01000000)-> P(FI(I),2)! + (G$NOFO APUV**G$UMSK)T#)2 DO $AP(IV(I))>03DZ
)@@G@@77777 ,IV(I) EQU -(0777777-IV(I))8GAPIV(I) EQU CC-#@@@]@[@#I@@@K@B]-@D:1EA
)@@G@@@#I@@@@@@@@[@-@@#J)E$AP(IV(I))*A $ENDR*^ OFFTH)S DO FI(4)>VI , GO G$$L03EB
)@@G@@*KFI*(4) EQU LF(1)*! DO (W(1)=VARY)++(W(1)=LOOKFOR)=0 , GO G$$L03*FIV(4)EC
)@@G@@ EQU 1(  DO ((W(1)=LOOKFOR)=0)**IM(2)**IM(3) ,IV(4) EQU 1-2*(APIV(2)>APIED
)@@G@@V(3))T]), DO (IV(4)=1)**(P(FI(4),5)=DOWN) ,IV(4) EQU -1*PP*(FI(4),2) EQUEE
)@@G@@ IV(4)*MP*(FI(4),4) EQU XU*OUV(4) EQUF IV(4),,XU*FIM(4) EQU 1M<F0R DO P(EF
)@@G@@FI(4),5)=0 ,P*(FICC-#@@@]@[@#J@@@K@B]-@D?1@#J@@@@@@@@[@-@@#K)M(4),5) EQUEG
)@@G@@ P(VI,3)T#)) DO (W(1)=LOOKFOR)=0 , GO G$$L30T )GFI*(5) EQU 0T^)0 DO (FI(EH
)@@G@@3)>VI)**(P(FI(3))>1) , I$ 023,,2,,,UV(3)*) DO FI(1)>VI , I$ 023,,1,,,UV(EI
)@@G@@1)T^)! DO (P(FI(4),5)=OFFSET)**1-IM(4) , G$$EFL 2,1*$OFV EQU IM(4)*(P(FIEJ
)@@G@@(4),5)=OFFSET)*IV(4)*IFI*(6) EQU OFV*M DO FI(2)=VI , END*T DO FI(4)=VI ,EK
)@@G@@ G$$EFL 2,2*W DO IM(2)**IM(4) , GO G$$L218K I$ 027,,P(VI,2)CC-#@@@]@[@#KEL
)@@G@@@@@K@B]-@D!.@#K@@@@@@@@[@-@@#L)C,,,UV(2)*< DO OFV=0 , I$ 046,,P(VI,2),,,EM
)@@G@@UV(4)*J DO OFV=0 , END** DO P(VI,2)>X11 , AH P(VI,2),(+OFV,-OFV)*+ DO P(EN
)@@G@@VI,2)<A0 , ANX,U P(VI,2),OFV*+ DO P(VI,2)<A0 , LXI,U P(VI,2),OFV*F DO 1 EO
)@@G@@, ENDM<%)> I$ 027,,P(VI,2),,,(+IV(4),IV(2)-OFV)*F DO 1 , ENDM<1)KORIGOP EP
)@@G@@EQU +W(1)T])S DO FI(1)>VI , GO G$$L34*> DO IM(2)**IM(3)**IM(4)=0 , GO G$EQ
)@@G@@$L358R DO (APIV(2)>0)**(IV(3)CC-#@@@]@[@#L@@@K@B]-@D\J@#L@@@@@@@@[@-@@#MER
)@@G@@)X=0)**(IV(4)=-1)=0 , GO G$$L35*KFI*(1) EQU FI(2)*HFI*(2) EQU VI*LIV(1) ES
)@@G@@EQU IV(2)+1*FIM(1) EQU 1*OUV(1) EQUF IV(1),,XUM</)IW(1) EQU 0+JGD*E GO GET
)@@G@@$$L39M=@)Z DO (VARY=ORIGOP)=0 , GO G$$L40*3 DO (FI(2)=VI)++(FI(3)=VI)++(EU
)@@G@@FI(4)=VI) , G$$EFL 2,3*JW(1) EQU 0+TLEM*> DO IM(3)**(IV(3)=0) ,W(1) EQU EV
)@@G@@0+JMGIM=A)LP*(VI,1) EQU W(1)8( DO (VARY=ORIGOP)++(W(1)=ORIGOP)=0 , G$$ECEW
)@@G@@C-#@@@]@[@#M@@@K@B]-@D0V@#M@@@@@@@@[@-@@#N)CFL 2,011M=G)W DO (W(1)=JGD)=EX
)@@G@@0 , GO G$$L41*GFI*(6) EQU 1*GFI*(5) EQU 1*E GO G$$L49M=O)(USS EQU (P(FI(EY
)@@G@@4),5)=UP)-(P(FI(4),5)=DOWN)*XBYS EQU IM(4)*(1-2*(IV(4)<0))*,FTS EQU (IM(EZ
)@@G@@2)**IM(3))*(1-2*(APIV(2)>APIV(3)))*V DO FTS*BYS=-1 , G$$EFL 2,5*JMYS EQUFA
)@@G@@ FTS+BYS*V DO MYS*USS=-1 , G$$EFL 2,6*KSIGN EQU MYS+USS*PFI*(6) EQU (SIGFB
)@@G@@N=0)=0*LP*(VI,3) EQU SIGN8IFI*(5) EQU (SICC-#@@@]@[@#N@@@K@B]-@D1V@#N@@@FC
)@@G@@@@@@@[@-@@#O)3GN=0)++(W(1)=TLEM)**(SIGN>0)++(W(1)=JMGI)**(SIGN<0)T^)4 DOFD
)@@G@@ 1-((W(1)=TLEM)**IM(2)**IM(3)**IM(4)) , GO G$$L49T])JVV(1) EQU IV(2)*PVVFE
)@@G@@(2) EQU IV(3)+IV(4)*G ON G$MASM=0(] DO G$AMPR ,VK DO 2 , DO 1-(#(VV(VK))FF
)@@G@@=-2) ,VV(VK) EQU VV(VK)+01000T^)3VK DO 2 ,VV(VK) EQU (1-(VV(VK)=0))*(1-2FG
)@@G@@*(VV(VK)<0))T])Y DO VV(1)*VV(2)<1 , G$$EFL 2,4*^ OFF*G ON G$MASM=18J DO FH
)@@G@@G$AMPR ,VK CC-#@@@]@[@#O@@@K@B]-@D2-@#O@@@@@@@@[@-@@#P)4DO 2 , DO 1-($BAFI
)@@G@@(VV(VK))=0) ,VV(VK) EQU VV(VK)+01000T^)8VK DO 2 ,VV(VK) EQU (1-(VV(VK)=0FJ
)@@G@@))*(1-2*($AP(VV(VK))<0))T])* DO $AP(VV(1))*$AP(VV(2))<1 , G$$EFL 2,4*^ OFK
)@@G@@FFM=/-[I DO 3 , DO (IM(I+1)=1)**(IV(I+1)<0) ,UV(I+1) EQUF *IV(I+1),*0,XUFL
)@@G@@T )RIMOP EQU G$FLAG(K,21)>0*S DO FI(1)=VI , GO G$$L51*%RR EQU 027*(P(VI,FM
)@@G@@2)<A4)+023*(P(VI,2)>R1-1)8URA EQU 077**(0+P(VI,2)-(RRCC-#@@@]@[@#P@@@K@BFN
)@@G@@]-@D3$@#P@@@@@@@@[@-@@#Q)B=0)*A0)*+ I$ RR+010*(RR=0),,RA,,,UV(1)-IMOP*SGFO
)@@G@@$FLAG**(K,21) EQU IM(1)*F DO 1 , ENDM>E)M DO FI(2)=VI , END*T DO FI(4)=VFP
)@@G@@I , G$$EFL 2,7TF)R DO IM(4)=0 , GO G$$L52*" DO (W(1)=JMGI)**IM(2)**1-G$FFQ
)@@G@@LAG(K,4) , DO IV(4)<0 , GO G$$L53T])! DO IM(2) , LX P(VI,2),(+IV(4),0+IVFR
)@@G@@(2)-IV(4))*J DO IM(2) , END*U DO P(VI,2)<A0 , GO G$$L52*W LX P(VI,2),(+IFS
)@@G@@V(4),0-IV(4))8C AH P(VICC)+@@@]@@@#Q@@@@@@#@ZC,A@#Q@@@@@@@@[@)Z@@@)D,2),FT
)@@G@@UV(2)*F DO 1 , ENDM>))L LX P(VI,2),UV(2)*M ANX P(VI,2),UV(4)*M LXI P(VI,FU
)@@G@@2),UV(4)*F DO 1 , ENDM>&)U LX P(VI,2),(+IV(4),IV(2))*OG$FLAG**(K,21) EQUFV
)@@G@@ 1*^ END@@@@C-#@@@]@[@#S@@@K@B]-@C\A@#S@@@@@@@@[@-@@#T)U(P(VI,2)-A0),,,GFW
)@@G@@$LABL(K,2)T])N DO JMF , GO G$$L70*KPTI2 EQU P(TI,2)*KPBI2 EQU P(BI,2)*) FX
)@@G@@DO G$MASM=1 ,PTI2 EQU $AP(PTI2)*) DO G$MASM=1 ,PBI2 EQU $AP(PBI2)*$TUHI FY
)@@G@@EQU 3*(PTI2<0)+2*P(TI,*3)+P(TI,*2)*!TU EQU + (I$ 0,P(TI,4),,P(TI,3),TUHIFZ
)@@G@@,P(TI,2))*$BUHI EQU 3*(PBI2<0)+2*P(BI,*3)+P(BI,*2)*!BU EQU + (I$ 0,P(BI,GA
)@@G@@4),,P(BI,3),BUHI,P(BI,2))8U DO ATTOP , I$ 074,06,0,P(CC-#@@@]@[@#T@@@K@BGB
)@@G@@]-@C3A@#T@@@@@@@@[@-@@#U)DVI,2),2,0*P I$ 047,,P(VI,2),,,TU*O I$ 074,04,,GC
)@@G@@,,Q(2,1)*) DO ATTOP , I$ 025,,P(VI,2),,,BU*F DO 1 , ENDM&T)< DO ATTOP , GD
)@@G@@I$ 051,017,0,P(VI,2),,0*Z DO ATTOP , I$ 074,04,,,,Q(2,1)*W I$ 074,012,P(GE
)@@G@@VI,2),,,Q(2,1)*F DO 1 , ENDM&<)FIC EQU VI-1*JKWD EQU P(IC,2)*KMSF EQU FIGF
)@@G@@(3)>VI*(FUN EQU G$FJ(1,KWD,1)+010*(1-MSF)-052*MSF8? DO MSF , I$ 071,FUN,GG
)@@G@@P(IC,1)-A0,P(VI,2),2+P(CC)W@@@]@@@#U@@@@@@#@TC0A@#U@@@@@@@@[@)T@@@)OIC,*GH
)@@G@@3),P(IC,3)+FI(6)(A DO 1-MSF , I$ FUN,P(IC,5),P(IC,1)-A0,P(VI,2),2+P(IC,*GI
)@@G@@3),P(IC,3)+FI(6)*O I$ 074,04,,,,Q(2,1)T])^ END@FC-#@@@]@[@#X@@@K@B]-@C1AGJ
)@@G@@@#X@@@@@@@@[@-@@#Y)4-XRG(1))>(G$XBIT(K)-1) ,XRG(1) EQU XRG(1)++G$XBIT(K)GK
)@@G@@T^)QIV(1) EQU IV(1)-XRG(1)*)XRG(1) EQU P(I,J+1)++XRG(1)*/-18*4U16 EQU (JGL
)@@G@@AY(1)<016)++(XRG(1)>0)++P(I,*J)++P(I,*J+1)(X DO IV(1)>0177777 ,K DO 2*U1GM
)@@G@@6 , DO (IV(1)-HIB(1))>(G$HIBI(K)-1) ,HIB(1) EQU HIB(1)++G$HIBI(K)T^)QIV(GN
)@@G@@1) EQU IV(1)-HIB(1)*QHIB(1) EQU HIB(1)*/-16*)HBIT EQU P(I,*J+1)++(HIB(1)GO
)@@G@@*/-1)8EIBIT EQU PCC-#@@@]@[@#Y@@@K@B]-@C2A@#Y@@@@@@@@[@-@@#Z)N(I,*J)++(HGP
)@@G@@IB(1)**1)T])N DO N=2 , GO G$$DC1*IP**(I) EQU J+2*Y DO 1-IBIT ,P**(I,J) EGQ
)@@G@@QU IV(1)*X DO IBIT ,P**(I,J) EQU *IV(1)*- DO 1-HBIT ,P**(I,J+1) EQU XRG(GR
)@@G@@1)*) DO HBIT ,P**(I,J+1) EQU *XRG(1)*PP**(I,J+2) EQU JAY(1)*F DO 1 , ENDGS
)@@G@@M*@)JP***(I) EQU J+2*Z DO 1-IBIT ,P***(I,J) EQU IV(1)*Y DO IBIT ,P***(I,GT
)@@G@@J) EQU *IV(1)*+ DO 1-HBIT ,P***(I,J+1) EQU XRG(1)8C DO HBITCC-#@@@]@[@#ZGU
)@@G@@@@@K@B]-@C5+@#Z@@@@@@@@[@-@@#))T ,P***(I,J+1) EQU *XRG(1)*QP***(I,J+2) EGV
)@@G@@QU JAY(1)*F DO 1 , ENDM*G)MIV EQU $AP(P(I,J))*XJAY2 EQU (IV>0)*(IV**G$JBGW
)@@G@@ITS)*WJAY1 EQU P(I,J+2)++JAY2*/-26*XXRG2 EQU (IV>0)*(IV**G$XBITS)*WXRG1 GX
)@@G@@EQU P(I,J+1)++XRG2*/-18*0U16 EQU (JAY1<016)++(XRG1>0)++P(I,*J)++P(I,*J+1GY
)@@G@@)*UHIB1 EQU U16*(IV**G$HBITS)*ZHBIT EQU P(I,*J+1)++(HIB1*/-17)*+IBIT EQUGZ
)@@G@@ P(I,*J)++((HIB1*/-16)**1)T]CCC)Z@@@]@@@#)@@@@@@#@WB..@#)@@@@@@@@[@)W@@@HA
)@@G@@)J $LEVEL 0,N+1,0*,P(I,J) EQU [IBIT->'*'!'']P(I,J)-JAY2-XRG2-HIB1*ZP(I,JHB
)@@G@@+1) EQU [HBIT->'*'!'']XRG1*LP(I,J+2) EQU JAY1*H $LEVEL 0,1,0*^ END@1) EQHC
)@@G@@C)-@@@]@@@[5@@@@@@#@YB"V@[5@@@@@@@@[@)Y@@@)<$CLD* $DELETE','STRUC$DEF* $HD
)@@G@@DELETE'T])L DO G$UOM=1 , END*) DO (G$MASM=0)**(G$AMPR=1) , ENDT])FP PROCHE
)@@G@@ *0,0*HRESUME** NAME*GBRIEF** NAME*^ ENDT])^ END@(6) EC)F@@@]@@@[7@@@@@@HF
)@@G@@#@CB"<@[7@@@@@@@@[@)C@@@*# +0*  LIST*^ END@     C)C@@@]@@@[9@@@@@@#@ DDPHG
)@@G@@@[9@@@@@@@@[@) @@@)[D@@@C-#@@@]@[@[/@@@K@B]-@DEP@[/@@@@@@@@[@-@@[.)JUB)+HH
)@@G@@+(T=LDJSUB)T^):NOSDEF EQU ISSUB**(P(1)=2)**(P(1,2)=NOSAVE)*X DO NOSDEF ,HI
)@@G@@P(1,3) EQU NOSAVE*S DO NOSDEF ,P(1,2) EQU 0*= DO G$MASM=0 , DO NOSDEF ,PHJ
)@@G@@(1) EQU 3T])8 DO G$CTR(7) , DO (G$LABL(K,1)=$)=0 , G$$DFL G$LABL(K,1)*MGHK
)@@G@@$LABL*(K,1) EQU $T])H RES G$CTR(6)*SG$CTR*(2) EQU 0-G$CTR(7)T])M DO T=CYHL
)@@G@@CLIC , END*R DO T=CONTINGENCY , +0DT^0UGI EQU (P(1,1)=SIGNAL)+2*(CC-#@@@HM
)@@G@@]@[@[.@@@K@B]-@DFP@[.@@@@@@@@[@-@@["))P(2,1)=SIGNAL)+3*(P(3,1)=SIGNAL)T]HN
)@@G@@)3G$FLAG*(K,1) EQU (GI>0)*(P(1,2)+(P(1)<2)*A0)-(GI=0)(B DO (T=REMOTESUB)HO
)@@G@@=0 ,G$LABL*(K,4) EQU (T=CONTINGENCY)*G$LABL(K,1)-ISSUBT#)% DO (T=EXECSUBHP
)@@G@@)**(P(1)=1) ,P(1,2) EQU DISPT])& DO T=EXECSUB ,G$LABL*(K,4) EQU P(1,2)(YHQ
)@@G@@ DO GI>0 , DO P(GI)>1 ,G$LABL*(K,4) EQU + (I$ 0,P(GI,4),,P(GI,3),2*P(GI,HR
)@@G@@*3)+P(GI,*2),P(GI,2) )T 0D DO ISSUBCC-#@@@]@[@["@@@K@B]-@DGP@["@@@@@@@@[HS
)@@G@@@-@@[_)W**(P(1,2)=0) ,P(1,2) EQU X11(:SII EQU ((P(1,1)=STACK)++(P(1,1)=SHT
)@@G@@AVE))+2*((P(2,1)=STACK)++(P(2,1)=SAVE))+3*((P(3,1)=STACK)++(P(3,1)=SAVE)HU
)@@G@@)T])SSI EQU SII+(SII=0)*ISSUB*I DO SI=0 , ENDT])IST EQU P(SI,1)*Y DO ISSHV
)@@G@@UB=0 ,P(1,3) EQU NOSAVET])PI DO 3 ,Q(I) EQU P(I)*SNOLINK EQU P(1,3)=NOSAHW
)@@G@@VE*Y DO NOLINK ,P(1,2) EQU -P(1,2)*R DO NOLINK ,Q(1) EQU +28KKLX EQU Q(SHX
)@@G@@I)-2*CC-#@@@]@[@[_@@@K@B]-@@@@@[_@@@@@@@@[@-@@]@)E(ST=STACK)**I DO KLX ,HY
)@@G@@RSAV(P(SI,I+1)**0777777) EQU 1*GIII(1) EQU 1*?I DO 128 , DO RSAV(I) ,P(SHZ
)@@G@@I,G$$INC(1)) EQU I*7 DO KLX<Q(SI) , DO (P(SI,KLX+1)=POINTER)=0 , G$$EFL IA
)@@G@@3,2*3SEX EQU (ST=SUBROUTINE)++(ST=LIJSUB)++(ST=LDJSUB)=0*HSLI EQU ISSUB*IB
)@@G@@= DO SEX**SLI ,P(SI,KLX+1) EQU P(1,2)*QKLR EQU KLX+(SEX**SLI)*(I DO KLR-IC
)@@G@@1 ,G$FLAG*(K,2,I) EQU +P(SI,I+1)8HKL EQU KLR-(NC@@@___@@@___@@@___@@@___ID
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___IE
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@______@@@*DPS**@@ @#)@@@@#GIF
)@@G@@@@@@@^@@@@@@@@@@@@@@@@@@@@@@@[@@@@#N@@@@@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IH
)@@G@@@^@@@]@^@G@[@ @@@]K^@W@)#@@@@@CT D1NE[[CS)@O@O=@AK6BC2A@0^@)^@)^@0A*)EL[II
)@@G@@A@0E-[CK2A@)^@) 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)IJ
)@@G@@^@)^@)^@)^@)CT D1NE[[CS)[T0@C@)AK[-0@@@___@@=^@@@@)^[C@ V^[7@#<^B*@@0^J<IK
)@@G@@@@3^K$@@E^M0@@*^?N@@*A[E@@_BQ[@@EBR:@@HBSG@@GBS5)@=^@=)@J^[*)@Q^BM)^S^FFIL
)@@G@@)@O^KN)[Q^LU)TT^M'-OJ^?;-OJA[2)@:BR@)@RBR5)@WBSTA]0^@F/@K@C#9*KBQ*/^@@CAIM
)@@G@@C8K@@@/K@@CK9*0BQF9(KBQJC8@BQ*'=@@[C/@)@CJC8KBQ*C8@@@#/,0@>//K@@CK[@KBQNIN
)@@G@@[@KBQ!C8@BQ*/,0[YAC8@^@B[^@BQ0C8@*[S;*@@@M[@@BQ2C8@BQ*/,0[XL/K@@CW/K@@CZIO
)@@G@@_________________________________0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O@@@@@@@^@@@@ 1OFDKJH
)@@G@@C(NDDUC*)AC0 )6^@)@A@@@@ 1#D9IE-MD9G^[OCD]^@$^C$ )5 )1A@)^@)@H@@@@ 00 -KJI
)@@G@@^@$E(,HD6G(2IT(I-9^[\G0)D(-IL9H--H1=^[^H97H1=GD4G(2^@!^[GG(6G(?^@3 00^8)JJ
)@@G@@@ @@@@ 01^@$DDIE-MD9^E(#E-DD9I^8)^@)@ @@@@^DOH[>^[@C-JE9I^[0IL\GT>IT3H92JK
)@@G@@@G@@@@HD3^[0IL(H(-IL(H-9^[-^[3JD!GL\H-(GS)GT\H(0GD2GD4H92 0)^[DI))HD3^[5JL
)@@G@@IT>G))@J@@@@I-\^[<H9!I[-IL>^[3JD!GL\H-(GS)I->J[4IS) [5IT5GD?H-9 ))GL5I))JM
)@@G@@H1\I))H-(H((I->G))I-\ ))ET^C0)@E@@@@G1\IL!GD4 C)GD&I->IK)I9*HD<H@)HD4^[<JN
)@@G@@GD,^[0IL\G-5GT>^[-^[NDDM@G@@@@GT\IL2G(<I-(H9,^[=G(<HS)GT-I[-GL?G*)H9&^[4JO
)@@G@@IL-H13G1\IL!HD,G8)H9,G*)I->J[4@^@@@@HD,I-\^[4H[>^[\I-*G(2 0)@G@@@@C[^D9RJP
)@@G@@D0)I9(H-?^[-GT<G(0I))I[2H9$IL-H*)G1(H->IS?^[=GD4GC)G1(H->IS)H92^@)@F@@@@JQ
)@@G@@I[2H9$IL-H*)G1(H->^[>H->H(>H14IS)GD3^[(H10I(4^[-H1=^[<GD,^[-H-3H8)@D@@@@JR
)@@G@@H(-HT>^[<G(2I--HD,^[3I(0G(2G1(GT(GD?^[<H9!I[-IL(IT\H13@H@@@@IL>G9-IL=HD,JS
)@@G@@G8)I-*G*)I--GL?G*)H9&^[<H9,I->H14IS)H9&^[0IL\G92GD!^[&HD?G(3 0)^@)@C@@@@JT
)@@G@@^DOH[>^[0IL\GT>IT3H92^[(IS)HD,I1-H-5GD+H->^[(H0)@F@@@@H--IL$G*)GD0I[?HD<JU
)@@G@@GD4HD\H13^[7H[>IL>^[!GD,JC)I[2H9$IL-H(!G(2IS)^@)@K@@@@H(-JC)GL>^[(H14G(2JV
)@@G@@GD<I-(H1$^[\H0)I-*G*)IT-H(>^[+GD3G*)IT9H(+H9?HD<IS,^@)^[DI))HD3^[-H-3H8)JW
)@@G@@H9&^@)@H@@@@G92G(-I))H[>H-0^[7H[>H0)I-*G*)I(3G(2^[7HD3H[>IS)H92^[(IS)IL>JX
)@@G@@ID5HD2G(=^[4H8)^@)@I@@@@H(-HD,I--HD,^[-H1=^[5I[=GD4G*)GT5IL2G(,I))IT9H(+JY
)@@G@@H9?HD<IS)I9(I-*^[4H[>^[3I--H1=GD2G))@K@@@@IT9IT4G(!^[NDDM^[!G(<H[-H1(IT!JZ
)@@G@@IS,^@)C1(H1-H-?JC?^[4H[>@@G@@W@@@S**^[=H97H1=GD4G(2^[(IS)GD?IT\^@)I1-H-5KA
)@@G@@GD+H->@O@@@@HD,^[0IL\G92GD!^[4G(3I-(H1$^[-H1=^[=G(+I($G9(H1$^[4H[2H95G9*KB
)@@G@@^[(I-3^[-GL(H-(I-9^[4H8)GT\H(0GD2G*)GT\IL2G(3I[\H1=HD,G8)^@)@^@@@@H95I-0KC
)@@G@@I(4^[3I-2G(-H(3 0)@K@@@@^DDH0)G9>H1>IL-H)?^[4H[>IL>^[-IL>^[4I9\^[!GD(H0)KD
)@@G@@H(\G->IS)H9&^[=H97H1=GD4G(2^[\I[>IL-I-(H9, ))^@)@G@@@@I-*H95G9* ))I(,G->KE
)@@G@@IK)H90I-(H9,^[<H9,I-2H9? ))H9,G*)H(-JC)GT*GD,G9>^[4H[>@L@@@@GT*GD2GD<I->KF
)@@G@@IL(IT4HD<IS)H9&^[4H[>^[>J[0G(<I->G))HD,I[5I))H92^[\I(4I[5I))GT\H13HD=G(2KG
)@@G@@GD+H-9 0)^[OH[>^@)@H@@@@G1(IL3I))H(\G->^[!GD9^[+G*)GT-H-?G(=^[>H->H(>H14KH
)@@G@@^[\IK)G--I--^[&HD?G*)H(\G-> 0)@G@@@@E-*HD3^[<H9!I[-IL>IS)GC)IT(H1$H->^[3KI
)@@G@@I-2G(-H*)H9&^[3JD!GL\H-(GS)HD,I[5I))@G@@@@I9(I-*^[-^[3G(<H9,G))IT4IL>GD!KJ
)@@G@@^[4H8)G->I->IL!HD,G*)G-(G1&G(2G(,GT>IS,^@)@H@@@@E-*H95G9*^[4H[>^[\I(4I[5KK
)@@G@@I))HD3^[(H0)ETDEK)I-9I[>^[<H92IL>GT4HD\H0)HD!GD$G(3 ))@D@@@@HD4IS)H(>GD,KL
)@@G@@HD,G8)HD3^@)GT?G(-IK;^@)GC)I(3G(2^[,G(>G-3@F@@@@H1\^[3I[>GT(GD?^[4IL-HD,KM
)@@G@@HD,G8)HD,^[\IL=G(2^[4H8)G->GT(I[*G(2^[(I),@G@@@@E-*G*)IT>GT\H1=^[!H9=G*)KN
)@@G@@H9&^[=H97H1=GD4G*)HD3^[<GD?H->G))I[2H9$IL-H*)^@)@E@@@@G1(H->^[!H9=G*,^@)KO
)@@G@@DD,^[4H[(IS)GT-IT> ))I-7H8)G-(IT4HD,GT4^@)@G@@@@I[2H9$IL-H*)G1(H->IS)GD2KP
)@@G@@G*)IT0G(<HD&HD>G))GD,G))I-*G*)G-\I9,G--I->IK?^@)@H@@@@GD$GD(H0)I(,G->IK)KQ
)@@G@@H90I-(H9,^[<H9,I-2H9? ))GT\H(0GD2G(3^[<H92IL>IT0H9,G-(H1$^@)@F@@@@G(?G(!KR
)@@G@@G(,I-3^[\G0)GL\I-*^[&HD?G(3 0)^[DH0)I-*G*)IT(H(0H->IT4^[-H1=@E@@@@G->G1-KS
)@@G@@@@O@@=@@@@@@I(?I))GT-IT> ))^[>GD<H@)IT9H(+H9?HD<^[>H->H(>H14^[\G0)@E@@@@KT
)@@G@@H9,G*)I[2H9$IL-H*)G1(H->^[7HD?H))GL>^[<H9!I[-IL>G))I9(I-*^[-@G@@@@GT\IL2KU
)@@G@@G(3I[\H1=HD,G8)G(?G(!G(,I))H9&^[4H[>^[3GD!G*)H1-H(>^[(H0)I-*G*)^@)@A@@@@KV
)@@G@@H90I[\IT(H1$^[0IL\G92GD!^[&HD?G*,^@)@E@@@@^DII(!G(2H95IS)H90I-(H9,IS)GD2KW
)@@G@@G*)GD6GD(H--GL?G*)I-\^[-H-?H97@F@@@@I-*G*)I(3G(2^[$IL>GD4G(2^[&H->J[(GL(KX
)@@G@@H-(I-9^[(H0)I(3HD,G8)C[^D9RD0,@D@@@@D9,G*)H(-JC)GT\H(0GD2G*)I-*G*)GT\H14KY
)@@G@@G(,I-3^[\G0)H9,G*)@I@@@@I[2H9$IL-H*)G1(H->^93^[4GD+H->^[\G0)GT\H14G(,I-3KZ
)@@G@@^@*E-JCS(^[-G9-HD,IT4^[-H1\I-*G(2BS)@F@@@@I[2H9=I(<G*)GC)E[#C0)H92^[OCTALA
)@@G@@^@*I[>IL!GD,G(,I))H92^[4G(!I[\IL-IL9@L@@@@GT\IL2G(<I-(H9,^[&HD?G*(^[0IL\LB
)@@G@@G92GD!^[&HD?G*?^[=GD4GC)G1(H-> ))H92^[0IL\G92GD!^[&HD?G*)G(?G(!G(,I);^@)LC
)@@G@@@I@@@@H-(H((I))I-*G*)G-\I9,G--I->^[4H8)GC)GT>IL4GD(H0)GD2G(-^[\G0)I-*G*)LD
)@@G@@HD,I[5I))HD!GD$G*;@G@@@@HD$H1\IL>^[!I(?I-(I[?G*)GL?GD,HT3BS)I[2H9=I(<G*)LE
)@@G@@G(8I[-H1=G(=^[KELDD1O^))@H@@@@H-(IT4HD,G93BS)G-\I9,G--I->^[,H9, (3I--H1=LF
)@@G@@GD2G))ET^C0)I-9I[>^[&HD?G(3BS)GD,G))@I@@@@GT\H14IL\H))H95I-0I(4^[\I[4HD!LG
)@@G@@HD'GD4HD\H0)I[-IL-H(>I->IL3 0)^[DH0)GD=G-(I-(H9, ))^@)@H@@@@I-*G*)HD,I[5LH
)@@G@@I))GT*GD2GD<I->IK)H(\G->^[\G0)G(-GT*^[3JD!GL\H-(GS) [7H[>I-*G(2^@)@I@@@@LI
)@@G@@C1DC(GC-[E-[^[\IK)CDNCTDDC(^[(IS)G(&G1>GT4HD6G(?JC)I-2GD,IT0GD2G(,I);^[(LJ
)@@G@@G0)H((J[>G))@H@@@@H(\G->^[2G(<H92G-3^[\GT<I(2 ))C1DC(GC-[E-[^@)HD3^[4H[>LK
)@@G@@^[<H[\IT>H0)H(>G-(I(!^@)@^@@@@G1\IK)GT\H(0GD2HD3@@W@@?@@@S**H9, 0)@F@@@@LL
)@@G@@^DDH0)IT5H(!GD2JC?^[4H[>^[@C-JE9I^[0IL\GT>IT3H92^[<GD,^[0IL\I1>^@)@F@@@@LM
)@@G@@GD,^[(H1=HD3I[>H13GD+H->^[4H9\H))HD,^[!GD,JC)IT(I-5GD4HD\H13 0)^@)@C@@@@LN
)@@G@@C-(IT<G(2H1(H1$^[=HD&G1>IL>H1<G(3^[+G(4I9>G(,^@)@I@@@@I->J[4IS?^[!GD(H14LO
)@@G@@GD(H1(H1$^[0IL\G92GD!IS) [0G(2H[-I[3^[&H92^[=HD3I-2HD+I(4HD\H0)^@)@K@@@@LP
)@@G@@I-\^[\I-*G(2^[3HD4G(3 C?^[\IK)G->GL5G9$HD,G8)GL9^[<H9!I[-IL(IT\H0)H9&^[4LQ
)@@G@@G(3I))IL5H0)H95I-0I(4IS)@M@@@@GD$GD(H13I))GC)GT\IL2G(<I))GL-IT>BK)I-*G(3LR
)@@G@@G*)GD2G*)H9,H-9^[-^[&G(7^[\G0)HD4IS)I1-IL(G(=^[<GD0GD+HD?HD4HD>IS,@A@@@@LS
)@@G@@ 01^@$E[MD9#C(NETJEK)CT[D-G^[#CDMC)$@#@@@@ 1JD0?E))CT D1OC(M@D@@@@C[^D9RLT
)@@G@@D0?B-JE[ODDJD1NB0)^@/ETKC(#AC" ), 0, )/ETKC(#A*"@]@@@@ 1NDTDE@)AC)@#@@@@LU
)@@G@@ 02^@$D9KE-DD9IES$@]@@@@^9[^8) *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@I@@@@^C-HD3LV
)@@G@@^[5IT>G))HD,^[0IL\G92GD!^[&HD?G*)H(\G-> 0)^[DI))G1\IL<G(3^[-^[<H9!I[-IL(LW
)@@G@@IT\H0)@G@@@@H9&^[OD9#IS)G1\IK)I-*G*)H9<GT5IL2G(,GT>^[\G0)CD]ETJD-PE- ^[>LX
)@@G@@H->H(>H14IS,@J@@@@C-(G1&G(2G(,GT>IS)GL>I-7G(>H0)I-*G*)HD,G1\IL!GD4HD\H0)LY
)@@G@@GT\H-?G(<I->G))G12H9!^[>GD<H@)E-JCS)@K@@@@GT\H1<G(2H1(H1$^[-GL3H9?I(4G*)LZ
)@@G@@G(?G(!G(,I-3^[7HD?H))GL>^[3I(!H(-IL(JL>G))HD,^[4H[>^[KELDD1O^))^@)@H@@@@MA
)@@G@@H95I-0I(4 0) [-H-3H8)IT>G*)^9^^8?^9J^8?^9M^8?^9N^8)H90I-(H9,IS)IL>G9-IL=MB
)@@G@@HD,G8)@^@@@@E-JCS)IT5H(!GD2HD>IS(^@)@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)MC
)@@G@@@]@@@@^9]^8) *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@I@@@@^C-HD3^[5IT>G))I-\^[<H9!MD
)@@G@@I[2G(3IS)H95I))GD?H))H9<@@=@@4@@@@@@GT5IL2G(,GT>IS)H9&^[!I(?I-(I[?G*)^@)ME
)@@G@@@J@@@@GL?GD,HT3^[+G(&H92G*)IL>GT\IL=IS)GD2G*)GT\H(0GD2G(= 0) [-H-3H8)IT>MF
)@@G@@G*)^9L^8)H90I-(H9, C)^@)@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@]@@@@^9^^8)MG
)@@G@@ *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@J@@@@^C-HD3^[5IT>G))I9(I-*^[4H[>^@$CC$ )$MH
)@@G@@D8$ )$EK$ )$ES$^[\I[4HD\H13^[4H8)GD<ID5HD2G*)E-JCS)^@)@K@@@@IT5H(!GD2HD>MI
)@@G@@IS)H9&^[0IL\G92GD!^[&HD?G(3 0)^[DI))G1\IL<G(3^[4H[>^[<H9,IT(G->IL-I-(H9,MJ
)@@G@@^[\G0)I-*G*)@F@@@@I-(H(> (-H1= (=GD4G*)H9&^[<IL>GD4HD\H0)HD,^[4H[>^[<H9!MK
)@@G@@I[-IL(IT\H0,@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@]@@@@^9 ^8) *)^@)@#@@@@ML
)@@G@@ 1DD1^C(IE))A*)^@)@H@@@@^C-G1\IL<G(3^[\I(4I[5I))G1\IK)G(6G(2JC)I[-HD2^[\MM
)@@G@@G0)^[(H10I(4^[3G(1I(>H1<G(3^@)@H@@@@G-\I9,G--I->G),^@*E-*G*)H((H1(H(5H*)MN
)@@G@@H95I-0I(4^[(IS)GC) L D- D( D1O^[<GD2G))^@)@L@@@@H92^[<H92IL>IT0H9,G-(H1$MO
)@@G@@^[,I(?H))G(,I-2JC)HD,^[4H[>^[\I(4I[5I))I[2H9$IL-H*)G1(H-> ))G->I[>H1=HD,MP
)@@G@@G8)^@)@B@@@@H9,^[4H[>^[!H9=G*)H9&^[=H97H1=GD4G*, C)^@)@]@@@@ 1NDTDE@)AC)MQ
)@@G@@@]@@@@ 1MC(NC(O^@)@]@@@@^9G^8) *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@I@@@@^C-I[2MR
)@@G@@H96HD=G(3^[-H0)G(8I[-H1=G(=^[KELDD1O^))H-(IT4HD,G8)H9&^[4H[>^[=H97H1=GD4MS
)@@G@@G*,^@)@L@@@@DD4^[$HD6G(3^[=G(?G(4G(=^[(H(-G9>IS)GD,G))H-(H1>^[,I(!GL>IL3MT
)@@G@@^[\G0)GD?H))GT\IL2G(<I-(H9,IS)I[2HD,I->G))@E@@@@GT\IL2G(3I[\H1=HD,G8)I-\MU
)@@G@@^[4H[>HD2^[2G(3I[>GT4HD6G*)G1(H->IS,@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)MV
)@@G@@@]@@@@^9I^8) *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@J@@@@^C-HD3^[5IT>G))I-\^[(H1*MW
)@@G@@@@?@@/@@@S**HD+HD4^[KELDD1O^))H9&^[=H97H1=GD4G*,^@)DD&^[4H[>^@$D0$^[\I[4MX
)@@G@@HD\H0)@K@@@@HD3^[3I[>GT(G1(G(=^[-H1=^[4H[>IL>^[(IS)H1\^@/ETKC(#AS"^@*H92MY
)@@G@@^[\I(4I[5I))G1(H-> C?^[,H8)GD<I-5GD?@K@@@@IT9H(+H9?HD<^[=H97H1=GD4G*)HD3MZ
)@@G@@^[=H9,G*,^@)E-JCS)IT5H(!GD2HD>IS)GD2G*)GD?H-\I9>G),^@*IT>G*)^9^^8?@B@@@@NA
)@@G@@^9[^8?^9J^8?^9M^8)GD,G))^9N^8)H90I-(H9,IS(@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NNB
)@@G@@C(O^@)@]@@@@^9J^8) *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@I@@@@^C-HD3^[5IT>G))HD,NC
)@@G@@^[0IL\G92GD!^[&HD?G*)H(\G-> 0)^[DI))G1\IL<G(3^[-^[<H9!I[-IL(IT\H0)@G@@@@ND
)@@G@@H9&^[OD9#IS)G1\IK)I-*G*)H9<GT5IL2G(,GT>^[\G0)D9HD1DCLPES)G(?G(!G(,I-3 0)NE
)@@G@@@^@@@@ [3G(>^@$CC$^[\I[4HD\H0(@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@]@@@@NF
)@@G@@^9K^8) *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@K@@@@^C-HD3^[5IT>G))I-\^[<IL>GD4G*)NG
)@@G@@GC)I[2H9$IL-H*)G1(H->^[KCTA^[\IK)^[OCTA^@*IT>G*)^9O^8)H90I-(H9, C,@K@@@@NH
)@@G@@DD&^[4H[>^@$E@$^[\I[4HD\H0)HD3^[3I[>GT(G1(G(= ))GC)I[2H9$IL-H*)G1(H->^[!NI
)@@G@@I(3I))GL>^[$HD6G(,^[(H0)@L@@@@B-NE[ CS3B0,^@)DD4^[!GD9^[+G*)I(3G(=^[(H0)NJ
)@@G@@G((I-*G(2^[>H->H(>H14^[!H9=G*)H92^[0IL\G92GD!^[&HD?G*)H(\G->@I@@@@G-\I9,NK
)@@G@@G--I->IS)I[2H96HD=HD,G8)I-*G(2G*)HD3^[-H0)G(?G(!G(,I))H1-H(>^[?H9$HD<GD?NL
)@@G@@H-9^@)@I@@@@GD6GD(H--GL?G*)G1\IK)GD,JC)H95I-0I(4^[>H->H(>H14^@*IT>G*)E-CNM
)@@G@@C*)^9K^8)D9KE-DD9I^[&H92@A@@@@G15IL4H[>IK)G(8I[?GD,GD4HD\H0( 0)^@)@L@@@@NN
)@@G@@DD&^[\H1>^[-I-4G(!I[4IS)I-\^[=H97H1=GD4G*)I-7H8)G--I--^[&HD?G(3^[5H1=G(2NO
)@@G@@^[4H[>^@$E@$^[\I[4HD\H0?^[-H0)@H@@@@G(2IL\IK)I9(@@4@[^@@@@@@H-?^[+G*)H1\NP
)@@G@@I->G))IT(H1<G*)I-*G(2G*)HD3^[,H8)H-\G9(GT-H))H1-H(>^@)@E@@@@GD6GD(H--GL?NQ
)@@G@@G*)I-\^[$HD6G*)I-\^[4H[>^[\I(4I[5I))G(?G(!G(,I),@]@@@@ 1NDTDE@)AC)@]@@@@NR
)@@G@@ 1MC(NC(O^@)@]@@@@^9L^8) *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@L@@@@^C-HD3^[5IT>NS
)@@G@@G))HD,^[<H9,HL5H1<I-(H9,^[7HD4H@)I-*G*)^9]^8)H90I-(H9,^[4H8)G1\IL<G*)GT\NT
)@@G@@H13HD=G(2GD4HD\H0)@K@@@@H9&^[!I(?I-(I[?G*)GL?GD,HT3^[+G(4I9>G(,^[=G(?HD!NU
)@@G@@HD4G(=^[<H[-IL-GT4G(2^[3I-2HD,G93^@*I-*GD4^[(IS?@K@@@@I-*H93G*)IT4IL(H1$NV
)@@G@@IS)G->H-(H((I->G))GL9^[4H[>^@/EDPD9OC*)CTCCDMB0)H92^[+JC)I-*G*)G->G1-I(?NW
)@@G@@I)?^@)@^@@@@I-*G*)GD0H93I-2H90H[> C,@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)NX
)@@G@@@]@@@@^9M^8) *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@I@@@@^C-HD3^[5IT>G))HD,^[0IL\NY
)@@G@@G92GD!^[&HD?G*)H(\G-> 0)^[DI))G1\IL<G(3^[-^[<H9!I[-IL(IT\H0)@F@@@@H9&^[ONZ
)@@G@@D9#IS)G1\IK)I-*G*)H9<GT5IL2G(,GT>^[\G0)EL D-JCT[E-[CLGC*)^@)@B@@@@G(?G(!OA
)@@G@@G(,I-3 0) [3G(>^@$CC$^[\I[4HD\H0(^@)@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)OB
)@@G@@@]@@@@^9N^8) *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@I@@@@^C-HD3^[5IT>G))HD,^[0IL\OC
)@@G@@G92GD!^[&HD?G*)H(\G-> 0)^[DI))G1\IL<G(3^[-^@)GT\H(0GD2HD3H9,@E@@@@H9&^[OOD
)@@G@@D9#IS)G1\IK)I-*G*)H9<GT5IL2G(,GT>^[\G0)ETTD(]D9GDD#^@)@B@@@@G(?G(!G(,I-3OE
)@@G@@ 0) [3G(>^@$CC$^[\I[4HD\H0(^@)@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@]@@@@OF
)@@G@@^9O^8) *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@J@@@@^C-HD3^[5IT>G))I-\^[=H97H1=GD4OG
)@@G@@G*)E[#C0)G(?G(!G(,I-3 ))G--I--^[&HD?G(3^[\IK)I[2H9$IL-H*)^@)@I@@@@G1(H->OH
)@@G@@IS)I-\^[0IL\G-5GT>^[4H[>@@/@[G@@@S**^[-I[0IL\I[2HD-I->^[OCTA 0) [3G(>^@$OI
)@@G@@E@$^[\I[4HD\H0(^@)@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@]@@@@^9Q^8) *)^@)OJ
)@@G@@@#@@@@ 1DD1^C(IE))A*)^@)@I@@@@^C-HD3^[5IT>G))HD,^[<H9,HL5H1<I-(H9,^[7HD4OK
)@@G@@H@)I-*G*)^9G^8)H90I-(H9,^[4H8)GT2G(-I->^@)@F@@@@GL-I-<H@)H-(IT4HD,G93^@*OL
)@@G@@AC3AK)GT\H-5H(,IS(^[&IL\H*)G->H(-H1= 0)^@)@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NOM
)@@G@@C(O^@)@]@@@@^9S^8) *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@J@@@@^C-HD3^[5IT>G))I-\ON
)@@G@@^[&H92GT>^[4H[>^[0IL\GT>IT3H92^[4H8)HD$H1\IL>^[-H19^[>H->H(>H14^[<JD<H->OO
)@@G@@@K@@@@HD,G1\IL!GD4HD\H0,^@)E-*HD3^[(IS)I[2H96HD=G(=^[-IS)GC)H--IT4^[2G(3OP
)@@G@@H92I))HD,^[-H0)GD4I->H(0I))I-\@M@@@@G-\I9,G--I->^[,H9, (3I--H1=GD2G))ET^OQ
)@@G@@C0)G1\IL!GD4^[&HD?G(3 0) [IH94G*'^[@C-JE9I^[7HD?H))GD5I-\H(-I-(GT-H-?JC)OR
)@@G@@@K@@@@IL>GT\G9,HD'G*)E[MDDIE)= ))C1JELOEL[D0)GD,G))E[#DDJES)G1(H->IS)GD,OS
)@@G@@G))I[2H9<G(3IS)GT\H14IL\H))^@)@B@@@@HD,G1\IL!GD4HD\H0)GD<GT\IL=HD,G9?JC,OT
)@@G@@ C)^@)@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@]@@@@^9U^8) *)^@)@#@@@@ 1DD1^OU
)@@G@@C(IE))A*)^@)@I@@@@^C-G1\IL<G(3^[-^[=H97H1=GD4G*)H9&^@)G(6G(2JC)G(?G(!G(,OV
)@@G@@I))H92^[KCTA^[3G(1I(>H1<G*)^@)@M@@@@G(,GT\I(,I->IL>G))HD,^[>HD4H[>IK)HD,OW
)@@G@@I[5I))IT4IL>GD! 0)^[DG0)I-*G*)G(?G(!G(,I))H92^[3G(1I(>H1<G*)H[-IS)H1\^@)OX
)@@G@@@L@@@@GT\I(,I->IL0GD2I))HD,^[4H[>^[\I[0H93HD,G8)IT4IL>GD! ))HD4^[(IS)G-\OY
)@@G@@I9,G--I->G))GD$GD(H13I))GC)H15H-?^@)@ @@@@G(?G(!G(,I))H92^[3G(1I(>H1<G*,OZ
)@@G@@@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@^@@@@ 02^@$ETKC(#^[ADD D-^ES$@#@@@@PA
)@@G@@@[^@[O@@@@@@B-NE[ CS1B0) *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@F@@@@GT-H0)GL>^[-PB
)@@G@@^[=GD4GC)G1(H-> ))I[2H9$IL-H*)G1(H->^[\IK)I[2H9$IL-H*)@G@@@@G1(H->^[>H->PC
)@@G@@H(>H14 0)^[DG0)H1\^[&HD?G*)H1-H(>^[(IS)G9(I1>H0?^[OE[A^))HD3@J@@@@GD3IT5PD
)@@G@@H(>G),^@)B-NE[ CS1B0)HD3^[4H[>^[>H->H(>H14^[\IK)G1(H->^[4H8)I9*HD<H@)I-*PE
)@@G@@G*)H95I-0I(4@J@@@@GT\IL2G(<I-(H9,IS)GD2G*)I-\^[+G*)GD0I[?HD>G)?^[(H0)H92PF
)@@G@@G->IK)I-\^[<H[-H1$G*)HD4^[(H14H8)^@)@]@@@@B-NE[ CS2B0,@]@@@@ 1NDTDE@)AC)PG
)@@G@@@]@@@@ 1MC(NC(O^@)@#@@@@B-NE[ CS2B0) *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@F@@@@PH
)@@G@@^@)^[!GD9^[-H-3H8)GL>^[-^[=GD4GC)G1(H-> ))I[2H9$IL-H*)G1(H->^[\IK)@I@@@@PI
)@@G@@I[2H9$IL-H*)G1(H->^[>H->H(>H14 0)^[DG0)H1\^[&HD?G*)H1-H(>^[(IS)G9(I1>H0?PJ
)@@G@@^[OE[A^))^@)@H@@@@HD3^[-IT3I(!G(= 0)^[DG0)GD,^[>H->H(>H14^[,GD!G*)HD3^[$PK
)@@G@@HD6G(,^[(H0)B-NE[ CS1B0)@I@@@@GD,G))H1\H1>^[(IS)G9(I1>H0)HD,^@/ETKC(#AK"PL
)@@G@@ ))I-*G*)H1-H(>^[&IL\H*)B-NE[ CS1B0)HD3^@)@I@@@@GD3IT5H(>G),^@)DD&^[+H94PM
)@@G@@H@)B-NE[ CS1B0)GD,G))B-NE[ CS2B0)G->IT(G9,GD4G*)I[2H9$IL-H*)@H@@@@G1(H->PN
)@@G@@IS?^[-^[0IL\G92GD!^[&HD?G*)H(\G->^[=H97H1=GD4G*)HD3^[(H1(I-(GD4G(= 0)^@)PO
)@@G@@@J@@@@E[2H9$IL-H*)G1(H->^[>H->H(>H14IS)H(-JC)GL>^[=H97H1=GD4G(=^[-G9-HD,PP
)@@G@@IT4^[4G(8I))G1(H->IS,^@)@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@#@@@@B-NE[ PQ
)@@G@@CS3B0) *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@E@@@@^@)^[(IS)I-*G*)H95I-0I(4^[&HD?PR
)@@G@@G*)G1(G(?G),^@)DD&^[>H(0I-9 ))@H@@@@HD4^[(IS)GD3IT5H(>G))H1\^[\I(4I[5I))PS
)@@G@@IT4IL>GD!^[(IS)G->IT(IL>G),^@)DD&^[(I))^@)@G@@@@@[G@[W@@@S**G(8HD3I-3 ))PT
)@@G@@HD4^[!GD9^[-H-3H8)GL>^[-^[=GD4GC)G1(H-> ))I[2H9$IL-H*)G1(H->@I@@@@G(?G(!PU
)@@G@@G(,I))H92^[0IL\G92GD!^[&HD?G*,^@)DD& ))H[\I9>I1>IK?^[(I))HD3^[-^[0IL\G92PV
)@@G@@GD!^@)@K@@@@G1(H-> ))I-*G*)^9K^8)H90I-(H9,^[!I(3I))GD?IT\^[+G*)I[2G(3G(,PW
)@@G@@I),^@)E-*HD3^[(IS)H1>GT>IT3GD2JC)I-\@L@@@@HD,G-(GT-I->^[=G(&GD5H-4^[>H->PX
)@@G@@H(>H14^[,GD!G(3 0)CD,^[>IL2H92^[7HD?H))GL>^[,H94G(=^[\I-*G(2I9(IT> 0)^@)PY
)@@G@@@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@#@@@@B-NE[ CS4B0) *)^@)@#@@@@ 1DD1^PZ
)@@G@@C(IE))A*)^@)@ @@@@^@)^[*GD3^[4H[>^[&H92H(-I)'^@)@]@@@@ 1NDTDE@)AC)@#@@@@QA
)@@G@@ 1JD0?E))CT D1OC(M@F@@@@B-#D9GAC" 8/CTJD-IB0\B-LE(JE- ^[#D[[EK" 0/CTJD)1QB
)@@G@@B0\B-#D9GD0"^@!^@)@]@@@@ 1NDTDE@)AC)@F@@@@CD?H))G1(G(?G-3^[-IL>^[\I[4HD\QC
)@@G@@H1-H),^@)E-*G*)^[2G(=I(,G--H1<JC)^@)@H@@@@HD3^[0IL\I1(G->G))GD3^[-H0)GD(QD
)@@G@@G))I-\^[4H[>^[5IT>IK?^[4H[>^@/EDPD9OC*)CTCCDMB0)@H@@@@HD3^[&H92GT>G))I-\QE
)@@G@@^[4H[>^[7IL(I->^[:G(9^[&HD>H-=^[4H8)GD?H-\I8)HD,I[5I))H9&^@)@G@@@@IT0G(<QF
)@@G@@HD-H))GT*GD2GD<I->IL3 0)^[DG0)GL\I-*^[&HD?G(,GD!G*!IL>GD= (:G(9^@)@G@@@@QG
)@@G@@GD,G))G(?G(!G(,I)!I1>IL3HD\H0!H1-H(>^[<H9!GL(H1-I-(H9,IS)GD2G*)G9(I1>H0?QH
)@@G@@@G@@@@I-*G*)G(?G(!G(,I)!I1>IL3HD\H0!H1-H(>^[0GD2GD!G(4G(2IS)GD2G*)I(3G(=QI
)@@G@@ 0)^@)@]@@@@ 1NDTDE@)AC)@^@@@@B-#D9GAC" 8/CTJD-IB0) *)@#@@@@ 1DD1^C(IE))QJ
)@@G@@AS)^@)@F@@@@HD3^[4H[>^@$E9DD1^D9R^8)H90I-(H9,^[3I[>GT(G1(GT-I-(H9, 0)^[DQK
)@@G@@I))^@)@F@@@@GD?H-\I93^[4H[>^[5IT>IK)I-\^[=H97H1=GD4G*)H96G(2^[3I[>GT(G1(QL
)@@G@@G(=^@)@H@@@@GT\H-5H(,IS)@[O@[=@@@@@@H9&^[4H[>^[(H10I(4^[(H(-G9> 0)^[AH92QM
)@@G@@^[>J[-H(0H-> ))I-\^[(G9,H92G*)@H@@@@I[\IT3HD+H->^[<GD2G))IT>ID5G(,GT>^[,QN
)@@G@@I(!GL>IL3 ))H9,G*)H((G9*I))I[2H96HD=G*)^@)@G@@@@^81 87AK$ 0)^[OH[>^[\H1?QO
)@@G@@JC)IL>IT4IL(GT4HD\H0)HD3^[4H[-I)?^[(G0)G9(I1>H0?@G@@@@B-#D9GD0"^[!I(3I))QP
)@@G@@GL>^[$IL>GD4G(2^[4H[-H0)H92^[>ID5GD?^[4H8)B-#D9GAC" 0)@]@@@@ 1NDTDE@)AC)QQ
)@@G@@@^@@@@^C/EDPD9OC*)CTCCDMB0) *)@]@@@@ 1NDTDE@)^@)@G@@@@HD3^[0IL\I1(G->G))QR
)@@G@@G1\IK)I-*G*)^9]EC$^[\I[4HD\H0)G-\I9,G--I-> 0)^[OH[>^@)@F@@@@G->G1-I(?I))QS
)@@G@@B-LE(JE- ^[#D[[EK"^[(IS)I-*G*)GD0H93I-2H90H[>^@*^8( 0)@I@@@@E-*HD3^[&HD>QT
)@@G@@H-=^[(IS)I[2H96HD=G(=^[(H0)I-*G*)G(6G(,I))I-*GD4^[4H[>^@$CLL^8)H90I-(H9,QU
)@@G@@@H@@@@HD3^[=G(3HD2G(=^[&H92^[3H9!G*)H--H1$I(-G9>^[7H[(GT*^[5IT>IS)IT\H(>QV
)@@G@@^[\I-*G(2^@)@G@@@@GT*GD2GD<I->IK)I-\^[=G(?HD!HD4^[?HD4G(2GD?^[<H[-IL-GT4QW
)@@G@@G(2^[3I-2HD,G93 0)@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@#@@@@B-NE[ CS5B0)QX
)@@G@@ *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@^@@@@H[-IS)I-*G*)G1\IL!GD4BK)@]@@@@ 1NDTDQY
)@@G@@E@)AC)@#@@@@ 1JD0?E))CT D1OC(M@I@@@@B-KC( DS" 8/D-JD9F^[[D[ CD^B0\B-#D9MQZ
)@@G@@EK)CTCCDMB0,B-KC( DS" 8/D-JD9F^[[D[ CD^B0) *)^@)@]@@@@ 1NDTDE@)AC)@I@@@@RA
)@@G@@H-(HT>^@/ETKC(#A)"^[4H[>^[2G(=I(,G--H1<JC)HD3^[0IL\I1(G->G))I-\^[-HD=^[4RB
)@@G@@H[>^[5IT>IK,@]@@@@ 1NDTDE@)AC)@A@@@@B-KC( DS" 8/D-JD9F^[[D[ CD^B0) *)^@)RC
)@@G@@@#@@@@ 1DD1^C(IE))AS)^@)@G@@@@GD2G*)I[2H9$IL-H*)H90I-(H((JL-I-(H9,^[0GD2RD
)@@G@@GD!G(4G(2IS)GD,G))GL9^[4H[>HD2@I@@@@H1-I-5IL>^[-IL>^[3H9!G(7H[-I))GD2GL(RE
)@@G@@@[W@[?@@@S**I-2GD2JC,^@)E-*G(9^[=G(&GD5H-4^[4H8)A*\A)0A@,^@)@J@@@@E-*G(3RF
)@@G@@G*)H[-I1>^[+G(>H0)G1\I(,G))I-\^[+G*)IL>GD3H9,GD+H->^[6GD?I(>IS)HD,^@)I-*RG
)@@G@@G*)I1-IT4^@)@I@@@@H(-HL\IL(I-9^[\G0)GT-IT>IS,^@)E-*G*)B-KC( DS"^[&GD<I-\RH
)@@G@@IK)HD3^[=G(&HD,G(=^[-IS)I-*G*)@I@@@@H15H(+G(2^[\G0)IT>ID5G(,I-(GD?H-9^[<RI
)@@G@@H92IL>IT0H9,G-(H1$^[2G(<H92G-3^[,G(<G(3IT-IL9^@)@J@@@@I-\^[<H9,G1(IL!^[-RJ
)@@G@@^[!GD4GT* 0)^[OH[>^@/D-JD9F^[[D[ CD^B0)G1-GT4H92^[(IS)I-*G*)H(-J[(H(5H*)RK
)@@G@@@J@@@@H15H(+G(2^[\G0)HD!GD$G(3^[3G(1I(>H14HD-H-?JC)IT>GD2GT*G(=^[(H0)H92RL
)@@G@@G->IK)I-\^[-I-4G(!I[4^@)@I@@@@I-\^[3GD4HD3G19^[4H[>^@/E[ C(FB0)G1-GT4H92RM
)@@G@@ 0) [3G(>^[JE[ODDHDDUDDIC8)E[[EL[D( E- ELN@B@@@@CDIC))E-CC*)C-JE9IC-[E- RN
)@@G@@EK)CDGC9JELDE-CD*(@]@@@@ 1NDTDE@)AC)@^@@@@^C/CTJELM^[#D[[EK"^@!^@)@]@@@@RO
)@@G@@ 1NDTDE@)^@)@I@@@@HD3^[4H[>^[<H92IL>GT4HD\H0)GT-IL=^[0IL>G1(J@)GT*GD2GD<RP
)@@G@@I->IK)I9*HD<H@)ETDEK)GD?H-\I93@I@@@@I-\^[+G*)IL>G->G1(H1>G),^@)DD4IS)G->RQ
)@@G@@G1-I(?I))HD3^[4H[>^[5IT5GD?^[=GD3H@)H92^[!HD,I(3@I@@@@IT(G9,^@* *( 0)^[GRR
)@@G@@HD:G*)I-*G*)B-LE(JE- ^[#D[[EK" ))HD4^[5IT>IS)I-*G*)I92HD4G*)HT>JC)@I@@@@RS
)@@G@@H9&^[4H[>^[3I[>GS)G1(G(?G))I-\^[-H-?H97^[4H[>^[(H14IL\G-5GT4HD\H0)H9&^[3RT
)@@G@@I[>GT(GD?^@)@#@@@@GT*GD2GD<I->IL3 0)@]@@@@ 1MC(NC(O^@)@E@@@@ 01^@$D1JE- RU
)@@G@@ES)D9I^[DD(KD- D( D1OCDODDJD0)CDIC))E(NCDBC*$^@)@A@@@@ 02^@$E[MD9BEL[D*)RV
)@@G@@C1DD- ^[HD9^C*$^@)@G@@@@^D[IS)IT4GD4G(=^[>GD2H-(G(2 ))I9*G(,^@/ETKC(#AC"RW
)@@G@@^[-H1=^@/ETKC(#AK"^[-IL>@L@@@@GL\I-*^[0IL\G92GD!@[=@[4@@@@@@^[&HD?G(3 ))RX
)@@G@@I[2H9$IL-H*)G1(H->^[!H9=G*)HD3^[(H1(I-(GD4G(= 0)^[OH[>^[5IT>IK)H[-IS)^@)RY
)@@G@@@E@@@@IT\H(>^[<H9,I-2H9?^[\I1>IK)I9*GD4^[(IS)G-\I9,G--I->G))GD,G))@I@@@@RZ
)@@G@@I-*G*)IT5GL3G(1I(>H14^[\I(4I[5I))I1(GC)I-*G*)^9 ^8)GD,G))^9U^8)H90I-(H9,SA
)@@G@@IS,^@)E9*G(,@J@@@@H1>HD4H[>IK)H9&^[4H[>IT>^[(IS)IT0G(<HD&HD>G)?^[\H1?JC)SB
)@@G@@IT9H(+H9?HD<^[>H->H(>H14IS)I9*HD<H@)@G@@@@H[-I1>^[,GD!G(3^[<H9!H(\H0)I-\SC
)@@G@@^[+H94H@)G1(H->IS)GD2G*)GT\H(0GD2G(= 0)^@)@K@@@@ET5GL3G(1I(>H14^[\I(4I[5SD
)@@G@@I))I9(H-?^[\H1?JC)H9<GT5IK)HD&^[3H9!G*)G-(G1&G(2G(,GT>^[(IS)G1\I(,G))^@)SE
)@@G@@@H@@@@GL>I-7G(>H0)GC)GT\H(0GD2G(=^[0GD(IK)H9&^[>H->H(>H14IS,^@)E-*G*)^9 SF
)@@G@@^8)H90I-(H9,@C@@@@HD3^[0IL\I1(G->G))I-\^[&H92GT>^@)GC)H((H1(H(5H*)@G@@@@SG
)@@G@@^9,I(?H))H95I-0I(4^8)G(6G(,^[(G0)GL\I-*^[>H->H(>H14IS)GT\H(0GD2G(=^[-IL>SH
)@@G@@@G@@@@HD=G(,I-(GT-H),^@)E-*HD3^@$H15H-?^[\I(4I[5I)$^[!GD9^[3HD!I[?JC)GL>SI
)@@G@@^[(H0)@G@@@@I-*G*)G1\IL!^[\G0)GC) L D- D( D1O^[<GD2G))HD,^[4H[>^[\I(4I[5SJ
)@@G@@I))IT4IL>GD!@K@@@@H92^[-^[,I(?H))G(,I-2JC)I9(I-*^[-^[<H92IL>IT0H9,G-(H1$SK
)@@G@@^[>H->H(>H14^[,GD!G*)HD,^[4H[>^[\I(4I[5I))@A@@@@^9K^8)H90I-(H9,^[0IL\G92SL
)@@G@@GD!^[&HD?G*)@A@@@@ [3G(>^[OD[ ^@$E@$^[JE[ODDJD0( 0)^@)@G@@@@E-*HD3^[!GD9SM
)@@G@@^[3G(>H*)I-2HD6HD-H))GD4^[&HD2IT4^[$H--H1<G*?^[+I(4^[(I))^@)@G@@@@HD3^[\SN
)@@G@@G14G(,^[=G(3HD2G(=^[(H0)I-*G*)GT2G(-I-(H9,^[\G0)E[#C0)H92^[OCTA^@)@C@@@@SO
)@@G@@I[2H9$IL-H*)G1(H->IS)I-\^[+G*)I(3G(=^[+JC)ETNC8,@J@@@@E-*G*)^9U^8)H90I-(SP
)@@G@@H9,^[&H92GT>IS)H95I-0I(4@[?@[/@@@S**^[&H92^[-H-?^[>H14IL(G(3^[>H14G(2G(=SQ
)@@G@@^[(H0)GL\I-*@G@@@@I[2H9$IL-H*)G1(H->IS,^@)DD&^[-H0)G(,I-2JC)HD3^[>H1<H95SR
)@@G@@H14G(2G(=^[7H[(GT*@G@@@@H[-IS)H1\^[<H95H14G(2I[-IL4^[(H0)I-*G*)H90I[\IT(SS
)@@G@@H1$^[0IL\G92GD!^[&HD?G*?@C@@@@I(,G->IK)I-*G*)^9U^8)H90I-(H9, ))HD4^[7HD?ST
)@@G@@H))^@)@D@@@@GL>^[>G1&G(<I-(I1>H-9^[=H97H1=GD4G(=^[-G9-HD,IT4^[-^@)@F@@@@SU
)@@G@@H15H-?^[>H->H(>H14 0)^[RHD4H@)I-*G*)^9U^8)H90I-(H9, ))H9,G*)GT-H0)@E@@@@SV
)@@G@@GT2G(-I->^[-^[KCTA^[\IK)E-#C0)^[7H[(GT*^[7HD?H))^[!GD0^[-H-?@G@@@@I-*G*)SW
)@@G@@IT9H(+H9?HD<^[>H->H(>H14IS)H9&^@/ETKC(#AC"^[(H14H8)IT9H(+H9?HD<^@)@I@@@@SX
)@@G@@G(?G(!G(,I-3^[\G0)B-NE[ CS2B0,^@)D95I-0I(4 ))IL>G9-IL=H->IT3^[\G0)H90I-(SY
)@@G@@H9,IS?^[(IS)@G@@@@GD?I9-JD3^[(H0)IT\IL4^[\IL=G(2 ))HC,G*,^[4H[>^[\IL=G(2SZ
)@@G@@^[\G0)H95I-0I(4^@)@J@@@@IT>ID5G(,GT>IS)I9(H-?^[-H-7GD9IS)H9+G(9^[4H[>^[,TA
)@@G@@GD4I(2GD?^[ADD D-^CDOCC)GT\H-?GD4HD,G8)^@)@#@@@@IT>ID5G(,GT> 0)^@)@]@@@@TB
)@@G@@ 1NDTDE@)AC)@ @@@@ 02^@$ETPD(HCDMFC)D9KE-DD9IES$@J@@@@^DOH[>^[3I(!H(-IL9TC
)@@G@@^[\I[4HD\H13^@$C)$ ))^9[^8?^@$D8$ ))^9M^8?^[-H1=^@$ES$^[-H-?H97^[\H1>^@)TD
)@@G@@@H@@@@I-\^[?H9\HS)G1\IK)G-(G1&G(2G(,GT>IS)HD,^[4H[>^[>H14IL(G(3^[\G0)I[2TE
)@@G@@H9$IL-H*)^@)@G@@@@G1(H->^[OD9#IS,^@)E-*G(9^[-IL>^[-^[,GD4I(2GD?^[>J[4G(,TF
)@@G@@IT(H9,^[\G0)I-*G*)@F@@@@I-2G(>^[*GD,G-?HD,G8)H(>GT*GD,HD3H(3^[5IT>G))I-\TG
)@@G@@^[0IL\GT>IT3^[-H1=@E@@@@IT\IL4^[>H14IL(G(3^[&H92^[0IL\G92GD!^[&HD?G*)G-\TH
)@@G@@I9,G--I->IS,@F@@@@E-*G(9^[3I(0I[?JC)GC)H1\H((H1-H))GD!H95H14^[\G0)HD,G1\TI
)@@G@@@[4@]^@@@@@@IL!GD4HD\H0)@H@@@@IL>G9-IL=HD,G8)I-*G*)G-(G1&G(2G(,GT>IS)GL>TJ
)@@G@@I-7G(>H0)I[2H9$IL-H*)G1(H->^[OD9#IS,@]@@@@ 1NDTDE@)AC)@ @@@@ 02^@$D-DETOTK
)@@G@@DDIC8)CTJD1OELJD)$@H@@@@^DOH[>^@$D0$ ))^9G^8?^[-H1=^@$E0$^[\I[4HD\H13^[0TL
)@@G@@IL\I1(G->^[4H[>^[5IT>IK)I9(I-*@J@@@@IT\H(>^[=G($IL>G*)H9&^[<H9,I-2H9?^[\TM
)@@G@@I1>IK)I-*G*)E[MDDIE)=^[?HD3I-(H1$^[\G0)G-\I9,G--I->G))@I@@@@H95I-0I(4 0)TN
)@@G@@^[OH[>^@$D0$^[\I[4HD\H0)HD3^[0IL\I1(G->G))I-\^[3I(0I[2G(3IS)E[MDDIE)=^@)TO
)@@G@@@I@@@@H95I-0I(4^[\G0)I-*G*)GD<I-5GD?^[=H97H1=GD4G*,^@)DD4^[=H9>IS)H1\I)?TP
)@@G@@^[*H97G(6G(2 ))^@)@I@@@@GD&G1>GT4^[4H[>^[0IL(H14HD,G8)H9&^[>IL2H92^[!G(3TQ
)@@G@@IT-G9>IS)H92^[3I(!H(-IL9^[\I[4HD\H0)@H@@@@HD,G1\IL!GD4HD\H0)I9*HD<H@)H(5TR
)@@G@@IT4^[+G*)IT0G(<HD&HD<GD?H-9^[2G(1I(>IT4G(= 0)^@)@C@@@@DD&^[4H[>^@$D0$^[\TS
)@@G@@I[4HD\H0)HD3^[3I[>GT(G1(G(=^@)@H@@@@GD,G))H1\^@/ETKC(#AS"^[(IS)G9(I1>H0?TT
)@@G@@^[,H8)GD<I-5GD?^[3JD!GL\H-(GS)G-\I9,G--I->@I@@@@HD3^[-I-4G(!I[4G(= ))GD?TU
)@@G@@I-*H95G9*^[3I(!H(-IL9^[\I[4HD\H13^[-IL>^[-H-?H97G(= 0)^[DG0)@D@@@@H1\^[3TV
)@@G@@I(!H(-IL9^[\I[4HD\H13^[*GD6G*)GL>G(,^[$HD6G(, ))@I@@@@I-*G*)G(8G(<I(4HD\TW
)@@G@@H0)HD3^[=G(4G(2H((H1>G))I-\^[+G*)I(3G(?G(3IS)GD,G))GD,^[>IL2H92^@)@E@@@@TX
)@@G@@HD3^[,H94G(= 0)^[DG0)H9,H-9^[3I(!H(-IL9^[(H1&H92H(-I-(H9,^@)@H@@@@HD3^[=TY
)@@G@@G(3HD2G(= ))HD4^[(IS)IL>GT\H(!G(,G->G))I-*GD4^[4H[>^@$D0$^[\I[4HD\H0)^@)TZ
)@@G@@@H@@@@I9(I-*^[,H8)B-NE[ CS3B0)GD?IT\^[+G*)IT0G(<HD&HD>G)?^[4H[5IS)HD,H[(UA
)@@G@@GL(I-(H1$^@)@J@@@@G(8GT>IT3HD6G*)^[\I(4I[5I),^@)@[/@]G@@@S**^@)E-*G*)^9GUB
)@@G@@^8)H90I-(H9,^[(IS)I[2H96HD=G(=^[4H8)G9(I1>^[4H[>@F@@@@I(3G(2^[4H[>^[!GD8UC
)@@G@@HD!I(!^[-H(\I(,I))H9&^[(H1&H92H(-I-(H9,^[\H0)^@)@J@@@@GC)I[-IL4HD<I(?GD2UD
)@@G@@^[3JD!GL\H-(GS)G-\I9,G--I-> 0)^[DI))IT5I[0H-(G(3^[4H[>^[=HD&G1>IL(H1$^@)UE
)@@G@@@G@@@@HD!GD$G(3^[\G0)GL\I-*^[&HD?G(3^[-H-\H1$^[7HD4H@)I-*G((IK)IL>IT0G(<UF
)@@G@@I-(I1>@H@@@@H-(H1>^[,I(!GL>IL3 0)^[OH[>^[\I(4I[5I))HD3^[&H92H(-I-4G(=^[4UG
)@@G@@H8)A82^[\IK)AC3AK)@L@@@@GT*GD2GD<I->IL3^[=G(0G(,G-(H1$^[\H0)G->H(-H1=^[\UH
)@@G@@IK)GL-I-<H@)GD,G))GL2G(-HT0H9(H14^[>J[>GT5I-(H9, 0)^@)@C@@@@DD&^[\H1>^[(UI
)@@G@@IS)G(8G(<I(4HD,G8)G12H9!^[=G(!GD,G))@G@@@@GD,G))I9(IT*G(3^[-^[+GD4GT*^[?UJ
)@@G@@HD3I-(H1$ ))I-*G*)^9Q^8)H90I-(H9,^[(IS)^@)@H@@@@IT5I[0H-(G(= 0)^[DG0)I-*UK
)@@G@@G*)^9G^8)H90I-(H9,^[(IS)H1\I))IT0G(<HD&HD>G))I-*G*)^@)@H@@@@H95I-0I(4^[(UL
)@@G@@IS)I[2HD,I->G)?^[5H1&H92H(-I-4G(= ))I(0^[4H8)AC3AK)GT*GD2GD<I->IL3@B@@@@UM
)@@G@@GD,G))I-2I(,GT-I->G))GD&I->IK)I-*GD4 0)^@)@]@@@@ 1NDTDE@)AC)@ @@@@ 02^@$UN
)@@G@@E[#C0)C-JE9IC-[E- ^8)^@)@I@@@@^DOH[>^[KCTA^[=H97H1=GD4G*)HD3^[4IL(G9$G(2UO
)@@G@@G(=^[+JC)I-*G*)I[2G(3G(,GT>^[\G0)I-*G*)^@)@G@@@@^9O^8)H90I-(H9, 0)^[OH[>UP
)@@G@@^[\I(4I[5I))HD3^[(H0)I-*G*)G1\IL!^[\G0)GC)E-#C0?@I@@@@GT-I[-GL?G*)I1(GC)UQ
)@@G@@ETNC8?^[\G0)I-2GD,IT&H92H((H1$^[4H[>^[KCTA^[\G0)B-NE[ CS1B0)HD,I-\@I@@@@UR
)@@G@@I-*G*)E[#C0)H9&^@/ETKC(#AK" 0)^[OH[>IL>^[-IL>^[,H8)H-\G9(GT-H))IL>IT4IL(US
)@@G@@GT4HD\H13^@)@I@@@@I-\^[4H[>^[&HD?G*)I-9I[>IS)HD,^@/ETKC(#AC"^[\IK)B-NE[ UT
)@@G@@CS2B0)H94H[>IK)I-*GD,^[4@]^@]O@@@@@@H[\IT>@G@@@@I[2G(6HD\I(3H-9^[3I--I->UU
)@@G@@G),^@)E-*G*)^9K^8)H90I-(H9,^[(IS)GD?IT\^[6GD?HD=@H@@@@GD,G)?^[(G0)I[2H90UV
)@@G@@G(2H-9^[5IT>G)?^[2G(3I(?I-3^[(H0)GC)E-#C0)I[2H9$IL-H*)G1(H->@F@@@@GD3^[\UW
)@@G@@I(4I[5I),^@)DD&^[(H10I(4^[(IS)HD,^[4H[>^[&H92H*)H9&^[-^[KCTA@L@@@@G(?G(!UX
)@@G@@G(,I))H92^[=GD4GC)G1(H->^[<H9,I--HD,HD,G8) L D- D( D1O^[3G(1I(>H1<G(3 ))UY
)@@G@@^[(I))HD3^[4IL>GD4G(=^@)@D@@@@GD3^[-H0)G(?G(!G(,I))I9(I-*HD,^[-^[0IL\G92UZ
)@@G@@GD!^[&HD?G*,@H@@@@E9(I-*^[4H[(IS)H(\G->^[\G0)H[-H1=H-(H1$ ))I-*G*)^9 ^8)VA
)@@G@@GD,G))^9U^8)H90I-(H9,IS)@C@@@@H[-I1>^[-^[!G(-H1(H1$^[-IS)G->IT<IL(GL>G))VB
)@@G@@HD,^@)@C@@@@E[MD9BEL[D*)C1DD- ^[HD9^C*,^@)E-*G(9^[0IL\G-5GT>@F@@@@I-*G*)VC
)@@G@@IT-H(>^[>G1&G(<I))GD3^[(G0)I-*G*)E[#C0)HD,I[5I))IT4IL>GD!IS)@E@@@@H[-I1>VD
)@@G@@^[-GT4I(-H-?JC)GL>G(,^[KCTA^[0IL\G92GD!^[&HD?G(3 0)^@)@G@@@@^DOH[>^[0H9(VE
)@@G@@H14^[3H[\I(?G))GL>^[!GD=G*)I-*GD4^[4H[>^@$E)$^[\I[4HD\H0)HD3@E@@@@I[2H96VF
)@@G@@HD=G(=^[4H8)G-\I9,G--I->^[KCTAIS)H1\I))E-#C13 0)^[OH[>@G@@@@G-(IT4HD,GT4VG
)@@G@@HD\H0)HD3^[4H[(IS;^[OCTAIS)H(-JC)GT\H14GD(H0)IL>H--I-(I1>^@)@J@@@@E[#C0)VH
)@@G@@GT\IL2G(<I-(H9,^[(H(-G9>IS)I9*HD<H@)GD2G*)I-*G(!IT>H-6G(3^[5H1<H92IL>GT4VI
)@@G@@GD+H-> 0)^@)@K@@@@DD&^[@C-JE9I^[(IS)HD,^@$E)$^[\I[4HD\H0)H(\G->^[-H1=^[>VJ
)@@G@@H1<H95H14G(2IS)IT5GT*^[-H0)HD!GD$G*?^[-^@)@F@@@@G1\IL!GD4^[>IL2H92^[(IS)VK
)@@G@@H1\I->G)?^[4H[>^[<GD2G))HD3^[4IL>GD4G(=^@)@F@@@@GD3^[-^@) L D- D( D1O^[<VL
)@@G@@GD2G))H92^[-H0)C(JC0)G->H-(H((I->IK)GD,G))@C@@@@G(8G(<I(4HD\H0)GT\H14HD,VM
)@@G@@@]G@]W@@@S**I(>IS,^@)DD,^[3H[\IL4 ))@G@@@@H9,G*)H(-JC)G-\I9,G--I->^[OCTAVN
)@@G@@IS)HD,^[4H[(IS)H(-H1,G(2 0)^@)CT?H93G*)^@)@I@@@@GD4I->H14HD\H0)IT*H95H-=VO
)@@G@@^[+G*)I[-HD=^[4H8)GD,JC)I[2HD,I->G))G(2IL\IK)H(>IT3GD$G(3 ))@G@@@@H[\I9>VP
)@@G@@I1>IK?^[+G(<GD5IT>^[>IL2H9,G(\I(3^[\I(4I[5I))H(-JC)G1\H-?H97 0)^@)@]@@@@VQ
)@@G@@ 1NDTDE@)AC)@A@@@@ 02^@$E-CC*)^8$E@$^8)D9KE-DD9I^8)^@)@E@@@@^DDH0)I-*G*)VR
)@@G@@G9>H1>IL-H))GT-IT> ))I-*G*)^9K^8)H90I-(H9,^[(IS)@H@@@@H(>GD,I))I-\^[+G*)VS
)@@G@@I(3G(=^[(H0)I-*G*)I[2H9$IL-H*)G1(H->^[!H9=G*,^@)E-*I(3 ))^@)@E@@@@I-*G*)VT
)@@G@@H1-H(>^[&H92^[>GD<H@)H95I-0I(4^[>H->H(>H14^@)GT\H(>IS)@H@@@@G12H9!^[4H[>VU
)@@G@@^[,GD!G*)H9&^[4H[>^[>H->H(>H14IS)GL>HD,G8)GT\H(0GD2G(=^[7HD4H[(H0)@I@@@@VV
)@@G@@H90I[\IT(H1$^[0IL\G92GD!^[&HD?G(3 0)^[OH[>^@$E@$^[\I[4HD\H0)HD3^[,H94 ))VW
)@@G@@H[\I9>I1>IK?@H@@@@H-(H((I->G))I-\^@)I[2H9$IL-H*)G1(H->^[!H9=G*,^@)E-*G*)VX
)@@G@@H9,H-9^[2G(3I-2HD<I-(H9,@G@@@@HD3^[4H[-I))I-*G(2G*)H(5IT4^[+G*)IT\H(>^[?VY
)@@G@@H9$HD<GD?^[=G(&GD5H-4^[,GD!G*)@G@@@@I-\^[+G*)G9(I1>H0)I-\^[-H19^[0H94G(,VZ
)@@G@@I-(GD?^[\I(4I[5I))G(?G(!G(,I),^@)CD3@G@@@@GC)H--IT4^[2G(3H92I)?^[4H[>^[>WA
)@@G@@H->H(>H14^[,GD!G*)HD3^[4GD:G(,^[&IL\H*)^@)@G@@@@I-*G*)G(?G(!G(,I))H9&^@/WB
)@@G@@ETKC(#AC" ))HD&^[(I))G(8HD3I-3 0)^[DG0)H1\I)?^@)@G@@@@GD,^[>IL2H92^[(IS)WC
)@@G@@H1\I->G))GD,G))I-*G*)I[2H9$IL-H*)I->IL!HD,GD4G(3 0)^@)@I@@@@DD&^[4H[>^[0WD
)@@G@@IL\GT>IT3H92^[(IS)H1\I))HD,^[0IL\G92GD!^[&HD?G*)H(\G->^[+I(4^[4H[>^@$E)$WE
)@@G@@@J@@@@H90I-(H9,^[(IS)IT0G(<HD&HD>G)?^[-H1=^[4H[>@]O@]=@@@@@@^[(H10I(4^[3WF
)@@G@@I-2G(-H(3^[<H9,I--HD,^@%C(GC(HC(IE))@D@@@@GT-IL=IS?^@)I-*G(3G*)GT-IL=IS)WG
)@@G@@H1-H(>^[4H[>^[\I(4I[5I))@G@@@@G(?G(!G(,I-3 0)^[[^[0IL\GL?G(!^[-IL(IT>IS)WH
)@@G@@I9*G(,^[4H[>IL>^[(IS)GC)G--I--@I@@@@G1(H->^[(H0)B-NE[ CS1B0)I9(I-*^[,H8)WI
)@@G@@^9O^8)H90I-(H9, ))H92^[7HD4H@)GC)^9O^8)H90I-(H9,@I@@@@GL5I))H1\^@%C(GC(HWJ
)@@G@@C(IE))GT-IL=IS)HD,^[4H[>^[=GD4GC)IT4IL>GD! 0)^[DH0)I-*HD3^[<GD3G*?@J@@@@WK
)@@G@@I-*G(2G*)HD3^[,H8)H-\G9(GT-H))H95I-0I(4^[>H->H(>H14^[,GD!G*)I-\^[+G*)I(3WL
)@@G@@G(=BS)I-*I(3 ))^@)@F@@@@GD,^[>IL2H92^[(IS)H1\I->G),^@)E-*G*)^9K^8)H90I-(WM
)@@G@@H9,^[(IS)H(>GD,I))@I@@@@I-\^[<IL>GD4G*)E[#C0)H92^[OCTA^[0IL\G92GD!^[&HD?WN
)@@G@@G(3^[&H92^[3I(+IT>ID5G(,I))I(3G*)^@)@]@@@@GL9^[NETB 0)@]@@@@ 1NDTDE@)AC)WO
)@@G@@@H@@@@ 02^@$E-CC*)^8$CLL^8$^[JE[ODDJD0?^[RDDIC-JE8)ETKC(# ))CDIC))E-MCDIWP
)@@G@@ETGCDODDJD0$@D@@@@DD&^[<H9!I[-IL>G))IL>GT\IL=IS)GD2G*)H9&^[=HD&G1>IL>H14WQ
)@@G@@@G@@@@H(\G->IS?^[4IL-H13H--I-(H9,^[(IS)GD5I-\H(-I-(GT-H-?JC)H(-G-> 0)^[OWR
)@@G@@H[>^@)@I@@@@G-(IL>GT4HD\H0)H9&^[4IL-H13H--I-(H9,^[(IS)GD?I9-JD3^[[ET#DDDWS
)@@G@@^@!B0)C1DC(GC-[E-[ 0)^@)@G@@@@E-*HD3^[<H[\HD<G*)I9-IS)H(-G->^[&H92^[(H14WT
)@@G@@G(2H1-H))GT\H16G(,HD>H1<G*?^@)@F@@@@GL5I))HD4^[*GD3^[9G(4^[4H8)GL>^[3H[\WU
)@@G@@I9,^[4H[-I))I-*G*)HD,I1>IL3G*)@D@@@@I-2GD,IT?GD4HD\H0)HD3^[-H19^[!H92G*)WV
)@@G@@H(>GD,HD,G9&I(? 0)@E@@@@^DDI))IT*H95H-=^[+G*)H1\I->G))I-*GD4^[-H-?^[<H[-WW
)@@G@@IL-GT4G(2^@)@I@@@@H(-H1(I[5H--I-(H9, ))I9*G(4H[>IK)HD4^[+G*)I-*G*)G(?HD!WX
)@@G@@HD,GD4HD\H0)H9&^[!I(?I-(@]W@]?@@@S**I[?G*)@J@@@@GL?GD,HT3 ))I-*G*)HD,I1\WY
)@@G@@GT-I-(H9,^[\G0)I9(H1=H97^[3I[>GT(G1(GT-I-(H9, ))H92^[<H[-IL-GT4G(2@K@@@@WZ
)@@G@@I-2GD,IT?GD4HD\H0?^[(IS)G-\H1>^[-I))I-*G*)I-(H(>^[\G0)G(-GT*^[2G(1I((IL>XA
)@@G@@G))GT\H(0GD2HD3H9, 0)^@)@F@@@@E-*HD3^[!GD9^[-I))G1(IL3I))G9?GD,GT>^[-I[0XB
)@@G@@G(-IK)HD,G(&G1(GT(G(,I)?@G@@@@GL5I))I-*G(2G*)GD2G*)IT>I1>IL-H))IL>GD3H9,XC
)@@G@@IS)G1\IK)I-*HD3^[-I[0IL\GD<H@,@G@@@@C1(IL3I)?^[(I))HD3^[&G(?I))I-*GD4^[4XD
)@@G@@H[>IT>^[!G(<H[-H1(IT!IS)G->H1\I->^@)@G@@@@IT0G(<HD-H))I[5IL0H93G*)I(3GD$XE
)@@G@@G*)GD,G)?^[-IS)IT5GT* ))I9(H-?^[+G*)I(3G(=@G@@@@HD,G12G(1I(>H14H-9 0)^[OXF
)@@G@@H[(IS)HD!I[?G(!G(,I--I-(H9,^[0IL>IT>IL6G(3^[4H[>@G@@@@GL-IT(GS)DC\D8)IT4XG
)@@G@@IL5GT4I(2G*)I9*HD<H@)H(-HT>IS)I-*G*)G-\I9,G--I->IK)^@)@J@@@@GD3^[>G1&HD<XH
)@@G@@HD>H14^[-IS)HD4^[(IS)GD,G))JD>I))H(-HT>IS)I-*G*)GD<I-5GD?^[(H10I(4^[2G(<XI
)@@G@@H92G))@F@@@@G1\IL!IS)I-2GD,IT0GD2G(,I))I-\^[4H[>^[!GD(H0)H-(H1>^[2H95I-(XJ
)@@G@@H1>IS,@H@@@@ET>GT\H1= ))HD,^[4H[>^[$G(,G(2GD?^[-I[0H-(GT-I-(H9, ))I-*G*)XK
)@@G@@G->H13HD4JC)H9&^@)@J@@@@G-(G1&G(2G(,GT>IS)HD3^[&GD2^[3H(-H-?G(2^[4H[-H0)XL
)@@G@@I-*G*)IT(JL>^[\G0)I-*G*)I-\I--H))G1(H-> 0)@J@@@@E-*HD3^[!G(4H[\G))HD3^@)XM
)@@G@@I[2H9+GD+H-9^[!H92G*)G(&G1(GT(G(,I))HD,^[3I(<H@)GT-IT>IS)I-*GD,^@)@A@@@@XN
)@@G@@IL>GT2G(-I-(H1$^[>GD<H@)^[&HD?G*)HD,@E@@@@H(\G-(G1(G(=^[&H92H*)GD,G))G-\XO
)@@G@@I9,G--I-(H1$^[4H[>^[2G(3I(?I),@H@@@@D--IT4H-9 ))HD,^[!GD,JC)GD0I[?HD<GD4XP
)@@G@@HD\H13^[4H[>^[=H97H1=GD4G(2^[(IS)IT4HD?H))@D@@@@DC\D8)GL\I(,G),^@)E(3HD,XQ
)@@G@@@]=@]4@@@@@@G8)H(\IL>^[\G0)I-*G*)CTKE*)^@)@H@@@@G-5IL(H1$^[\I1>IL?GD0I[>XR
)@@G@@G))DC\D8)G-\G(3^[,H94^[-I[0IL>GT(GD+H-9^[=G($IL-G->^@)@ @@@@I[2H9$IL-H*)XS
)@@G@@I[>IL&H92H(-H1<G*,@]@@@@ 1NDTDE@)AC)@I@@@@ 02^@$D9KE-DD(DFLDD1B^[KCDMCDHXT
)@@G@@C(OC(MES)CDIC))E-CC*)C-JE9IC-[E- EK)CDGC9JELDE-CD*'^8)@F@@@@^D[IS)IT4GD4XU
)@@G@@G(=^[>GD2H-(G(2 ))I-*G*)B-KC( DS"^[&GD<I-\IK)GD,G))^@)@K@@@@B-GD9JDS)CDCXV
)@@G@@C([C)"^[&GD<I-\IK)GD2G*)H90I-(H((JL(H1$^[0GD2GD!G(4G(2IS,^@)E-*G*)G-\I9,XW
)@@G@@G--I->IK)^@)@I@@@@HD3^[-^[3G(1I(>H14HD-H-?JC)H92HD>H14G(=^[<H9!I[-IL-I-\XX
)@@G@@IK)GD,G))GD3^[3I(<H@)HD3^[,H94@I@@@@G->G1(H1>G))I-\^[0IL\I1(G->^[4H[>^[\XY
)@@G@@I[4HD!I(!^[3G(4^[\G0)GT\IL2G(<I-(H9,^[<GD2G-3 0)@F@@@@E-*G*)H90I-(H(5H*)XZ
)@@G@@HD3^[=G(&HD,G(=^[-IS)I-*G*)H((H1(H(5H*)H15H(+G(2@K@@@@H9&^[0H93IT(GL?G*)YA
)@@G@@GT\IL2G(<I-(H9,^[<GD2G-3^[4H8)GT*GD,G9>^[\H1>^[&HD?G*)HD,I-\^[-H1\I-*G(2YB
)@@G@@ 0)^@)@J@@@@DD,IT4G(-G)?^[4H[>^[=H97H1=GD4G(2^[0IL\G-5GT>IS)GC)IT>I))H9&YC
)@@G@@^[<H92IL>GT4HD\H0)GT-IL=IS)^@)@G@@@@IT5G1&HD<HD>H14^[4H8)GD<H[(G(6G*)I-*YD
)@@G@@G*)IT-H(>^[>H1= 0)^[DI))HD3^[4H[>^@)@G@@@@HD,I->IL-GT4HD\H0)H9&^[4H[>IT>YE
)@@G@@^[0GD2GD!G(4G(2IS)GD,G))I-*G*)I[*JD3HD<GD?@F@@@@H1-I-5IL>^[\G0)I-*G*)G1(YF
)@@G@@H->IS)GL>HD,G8)GT\H13HD=G(2G(=^[7H[(GT*^@)@G@@@@G->I->IL!HD,G*)I-*G*)GT?YG
)@@G@@H93G(,G(3IS)H9&^[4H[>^[0IL\G-5GT4^[4H8)I-*GD4^@)@G@@@@H90I-(H(5H*)IT>I),YH
)@@G@@^@)DD,^[&GD<I)?^[4H[>^[=H97H1=GD4G(2^[-H-$H92HD4H[!^@)@F@@@@G-\G(3^[-^[6YI
)@@G@@G(2JC)G9\H9=^[%H9+^[-I))GD0I[2H98HD!GD4HD,G8)I-*@]?@]/@@@S**G*)^@)@E@@@@YJ
)@@G@@H90I-(H(5H*)^[(H0)I-*G*)I1-IT4^[!GD%H92HD4JC)H9&^[<GD3G(3 0)@B@@@@DD4^[(YK
)@@G@@IS)IL>H--I-(I1>H-9^[(H13G(,IT(I-(I1>@G@@@@I-\^[<H[-H1$G(3^[(H0)I-*G*)H90YL
)@@G@@I-(H((JL(H1$^[0GD2GD!G(4G(2IS,^@)E-*G(2G*)@H@@@@GD2G*?^[*H97G(6G(2 ))GT*YM
)@@G@@GD2GD<I->IL(IT4HD<IS)H9&^[(H10I(4^[=GD4GC)I9*HD<H@)^@)@H@@@@H(-JC)I->H1=YN
)@@G@@^[4H8)G->G92GD=G*)I-*G*)IL>IT5H-4^[-H1=^[3H[\I(?G))GL>^[,H94G(= 0)@I@@@@YO
)@@G@@C1\IK)G(8GD!I[?G*?^[(G0)H9,G*)HD3^[=H97H1=GD4HD,G8)I-7H8)G1(H->IS)I9*HD<YP
)@@G@@H@)H[-I1>^@)@G@@@@IL>I[>I-(I-(I1>^[+H-\GT:IS)H9&^[4H[>^[3GD!G*)HD!GD$G(3YQ
)@@G@@ ))I-*G*)B-KC( DS"@G@@@@G1-GT4H92^[3H[\I(?G))GL>^[3G(4^[$IL>GD4G(2^[4H[-YR
)@@G@@H0)I-*G*)IT(JL>^[\G0)^@)@F@@@@GC)IL>I[>GD4G(=^[+H-\GT: 0)^[[H1-H-\G9\I(3YS
)@@G@@H-9 ))HD&^[(H(-G9>IS)^@)@G@@@@I9(I-*HD,^[-^[&HD?G*)H[-I1>^[-^[=HD3I[?GD<YT
)@@G@@G(!G(,I))G92G(-I->IK)I-*GD,^@)@I@@@@A)0A@)IL>GT\IL=IS?^[4H[>^@/D-JD9F^[[YU
)@@G@@D[ CD^B0)IT*H95H-=^[-H-3H8)GL>^[(H1<IL>GD3G(= 0)@G@@@@E-*G(3G*)GT*GD,G9>YV
)@@G@@IS)^[>G1&G(<I-(I1>H-9^[\I[4HD!HD'G*)I-*G*)H95I-0I(4 ))@E@@@@GL5I))I-*G(9YW
)@@G@@^@)GD?IT\^[=G($IL-G->^[4H[>^[3I[>G(=^[\G0)I-*G*)@F@@@@I[2H9<G(3IT\IK,^@)YX
)@@G@@E[2H9<G(3IT\IK)IT0G(>G))GT-H0)GL>^[(H(0IL\I1>G))@G@@@@GL9^[?H97G(2HD,G8)YY
)@@G@@I-*G*)H90I-(H((JL-I-(H9,^[0GD2GD!G(4G(2IS)GL5I))GD4^[-@H@@@@H-(HT>H-9^[<YZ
)@@G@@H93I))H9&^[$G(,G(2GD4HD,G8)H--IL$G(2^[<H92IL>GT4HD\H0)G->GT:IS,^@)@I@@@@ZA
)@@G@@^DAHD,GD?H-9 ))GC)GT\H(!G(,I))H9,^[(H10I(4^[(H(-G9>^[?G(,G94H@)HD3^[,G(<ZB
)@@G@@G(3IT-IL9 0)@I@@@@DD,^[4@]4@@@@@@@@@H[>H92JC)I-*G(2G*)HD3^[,H8)H-(H((I))ZC
)@@G@@I-\^[4H[>^[(H10I(4^[(H(-G9>^[?G(,G94H@)^@)@B@@@@ [7HD4H[(H0)ET^C0)G->G1(ZD
)@@G@@H1>G))G1\IL!GD4 C,@H@@@@D[\I9>I1>IK?^[-H0)HD,I->IL,GD?^[+I(&G1>IK)H(5IT4ZE
)@@G@@^[+G*)H(-HD,I--HD,G(=^[&H92^@)@H@@@@HD!GD$G(3^[7H[(GT*^[3I[-H0)HD,I->IL,ZF
)@@G@@GD?^[0GD$G*)GL\I(,G--IL(G(3 0)^[OH[(IS)^@)@G@@@@HD,I->IL,GD?^[+I(&G1>IK)ZG
)@@G@@HD3^[,H97^[3G(4^[-I))A00^[7H92G-3 ))I-*GD4^[(IS)@J@@@@AK4A@)GT*GD2GD<I->ZH
)@@G@@IL3^[[ET#DDD ))H92^@3A00^[<H[-IL-GT4G(2IS)^[ADD D-^CDOCC,^@)DD!GD$G(3^@)ZI
)@@G@@@G@@@@G(8GT>G(=HD,G8)I-*HD3^[?G(,G94H@)GD,G))G1-H-?HD,G8)I-\I--H-?JC)I9(ZJ
)@@G@@I-*HD,@I@@@@GC)I[-G9>^[+H95H1=GD2JC) @4A)8^[7H92G-3 C)I9(H-?^[+G*)GT\H(0ZK
)@@G@@GD2G(=^[,H92H(-H-?JC,^@)@H@@@@DD&^[(I))HD3^[,G(<G(3IT-IL9^[4H8)H(\I1>^@)ZL
)@@G@@GD,^[(H(-G9>^[4H8)I-*G*)HD,I->IL,GD?@L@@@@GL5G1&G(2 ))HD4^[7HD?H))GL>^[4ZM
)@@G@@IL5H1<GD4G(=^[4H8)A00^[7H92G-3^[+I(4^[ID8)G(2IL\IK)I9(H-?^[+G*)H1\I->G),ZN
)@@G@@@I@@@@DD&^[4H[>^[5IT>IK)I9(IT*G(3^[4H8)I(3G*)I-*G*)I[2H9<G(3IT\IK)H9,^[&ZO
)@@G@@HD?G(3^[7HD4H@)^@)@G@@@@IL>GT\IL=IS)G92G(-I->IK)I-*GD,^@6A@)I9\IL=IS)HD,ZP
)@@G@@^[?G(,G94H@?^[*G*)G-\G(3@B@@@@IT\^[7HD4H@)I-*HD3^[5H1=G(2IT4GD,G-(H1$ 0)ZQ
)@@G@@@A@@@@ 1OD9#^@$E--GL?G*)H9&^[#H9,I->H14IS$_____"G(2G(=^[7H[(GT*^@)@G@@@@ZR
)@@G@@G->I->IL!HD,G*)I-*G*)GT?H93G(,G(3IS)H9&^[4H[>^[0IL\G-5GT4^[4H8)I-*GD4^@)ZS
)@@G@@@G@@@@H90I-(H(5H*)IT>I),^@)DD,^[&GD<I)?^[4H[>^[=H97H1=GD4G(2^[-H-$H92HD4ZT
)@@G@@H[!^@)@F@@@@G-\G(3^[-^[6G(2JC)G9\H9=^[%H9+^[-I))GD0I[2H98HD!GD4HD,G8)I-*ZU
)@@G@@@@@@@@@@@S**@]@@@@@@E@@@@@@@@[@]@@@@@@G@@@@@@@@@@]@@@@@@P@@@@@@@@@@]@@@@ZV
)@@G@@@@R@@@@@@@@@@]@@@@@@U@@@@@@@@]@]@@@@@@V@@@@@@@@]@]@@@@@@F@@@@@@@@@@]@@@@ZW
)@@G@@@@L@@@@@X8)@@]@@@@@@M@@@@@&:@@@]@@@@@@N@@@@@@WC@@]@@@@@@T@@@@@@@@@@]@@@@ZX
)@@G@@@@,@@@@@@@@@@]@@@@@@W@@@@@@@@@@]@@@@@@8@@@@@@@@@@]@@@@@@9@@@@@@@@@@]@@@@ZY
)@@G@@@@'@@@@@@@@@@]@@@@@@;@@@@@@@@@@]@@@@@@/@@@@@@@@@@]@@@@@@.@@@@@@@@@@]@@@@ZZ
)@@G@@@@"@@@@@@@@@@]@@@@@@_@@@@@@@@@@E@@@@@@O@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@U@@@@@@Q@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@U@@@@@@S@@@@@@@@@@@@@@@@@@@@@AD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@]@@@@@@X@@@AF
)@@G@@@@@@@[@]@@@@@@Z@@@@@@@@[@]@@@@@@Y@@@@@@@@@@]@@@@@@)@@@@@@@@@@]@@@@@@-@@@AG
)@@G@@@@@@@@@]@@@@@@\@@@@@@@@@@]@@@@@@3@@@@@Z(@@@]@@@@@@4@@@@@Q6)@@]@@@@@@5@@@AH
)@@G@@@@@@@@@]@@@@@@6@@@@@#-@@@]@@@@@@7@@@@@#-@@@]@@@@@@H@@@@@#-@@@]@@@@@@I@@@AI
)@@G@@@@#-@@@]@@@@@@0@@@@@#-@@@]@@@@@@1@@@@@#-@@@]@@@@@@+@@@@@@@@@@]@@@@@@<@@@AJ
)@@G@@@@@@@@@]@@@@@@=@@@@@@@@[@]@@@@@@>@@@@@@@@[@]@@@@@@&@@@@@@@@[@]@@@@@@$@@@AK
)@@G@@@@@@@@@]@@@@@@*@@@@@@@@[@]@@@@@@2@@@@@@@@@@]@@@@@@(@@@@@@@@@@]@@@@@@%@@@AL
)@@G@@@@@@@@@]@@@@@@!@@@@@@@@@@[@@@@@@B@@@@[@@@@@@[@@@@[@@@@@@#@@@@[@@@@@@[@@@AM
)@@G@@_____"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@C@@@@@@@@@@@@@@@@G@@@@#^@@@@@@@@@@@@@@@@@@@@@@@@AO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@*[S@@[*SDFF*@G@@@@^[PH1(I1>IL3HD4JC)H9&^[HGD2JD?BG
)@@G@@GD,G))C-\I9,G--I->IK) *)D->I1>H))AS,A@)^@)@^@@@@ADDD1OELJC-PCTODDJD0'^@)BH
)@@G@@@]@@@@IT0GD<G*)AC)@B@@@@^@)^@)^@)E-*G*)C[^D9RD0)I[2H9<G(3IT\IK)^@)@G@@@@BI
)@@G@@^[(IS)I[2HD!GD2HD?JC)GC)IT9H(+H9?HD<^[<H9!I[-IL-I-\IK,^@)DD4^[(IS)I(3G(=BJ
)@@G@@@J@@@@^[4H8)GT\H(0GD2G*)IT9H(+H9?HD<^[4G(8I-3^@*I(3I(-H-?JC?^[+I(4^[,H94BK
)@@G@@^[?HD!HD4G(=^[4H8?^[NC-A@F@@@@^[&H92H(-I)(^[-G14G(2^[7H[(GT*^[(I))GT-H0)BL
)@@G@@I[2H9=I(<G*)GC)ETDEK)^@)@H@@@@^[<H92IL>GT4HD\H0)G->GT:^[<GD0GD+H->^[\G0)BM
)@@G@@I-2GD,IT&H92H((H1$^[\H1>^[4G(8I))^@)@^@@@@^[(H14H8)I-*G*)H94H[>IK,@G@@@@BN
)@@G@@^[@C-JE9I^[7HD?H))GD<GT>I[4^[0IL\G92GD!^[&HD?G(3 ))G--I--^[&HD?G(3^[\IK)BO
)@@G@@@E@@@@^[0IL\G92GD!^[&HD?G*)G(?G(!G(,I-3^[-IS)HD,I[5I))GD,G))GT-H0)@F@@@@BP
)@@G@@^[-H-3H8)H(-HT>^[<G(2I--HD,^[3I(0G(2G1(GT(GD?^[<H9!I[-IL(IT\H13^@)@H@@@@BQ
)@@G@@^[2G($GD2G-(H1$^[4H[>^[4GD+H->^[\G0)GT\H14G(,I-3^[\G0)I[2H9$IL-H*)G1(H->BR
)@@G@@IS,^@)@D@@@@^@)^@)^@)E-*G*)I[2H9<G(3IT\IK)HD3^[(H16GD?I(-GL?G*)HD,@F@@@@BS
)@@G@@^[?GD2G9>^[-I[0H-(GT-I-(H9,IS)I9*G(2G*)H(-H19^[0IL\G92GD!H(>IL3^@)@K@@@@BT
)@@G@@^[!GD9^[+G*)HD,I->IL-GT4HD,G8)H9,^[4H[>^[3GD!G*)GL-IT>^[3JD!GL\H-(GT3 0)BU
)@@G@@^@)DD4^[(IS)GD?IT\^[\G0)@H@@@@^[$IL>GD4^[5IT>^[7H[>H0)I-*G*)I(3G(2^[7HD3BV
)@@G@@H[>IS)H92^[(IS)IL>ID5HD2G(=^[4H8)^@)@I@@@@^[!GD(H14GD(H0)GD,G))I(0G--I->BW
)@@G@@^[<I(2IL>H14^[3JD!GL\H-(GT3^[7HD4H@)I-*G*)IT4GD,G--IL=@L@@@@^[3JD3I->H*)BX
)@@G@@ETDEK)H(>GT*GD,HD3H(3 0)^[AHD,GD?H-9 ))I-*G*)G-\I9,G--I->IK)HD3^[-H-3H8)BY
)@@G@@^[6GD?I(-GL?G*)^@)@O@@@@^[(H0)I[2H9$IL-H*)I->IT4HD,G8)GD,G))G->GL5G9$HD,BZ
)@@G@@G8)I-*IL\I($H@)HD4IS)GD+HD?HD4JC)I-\^[<H9!I[-IL>^[<H92IL>IT0H9,G-(H1$^@)CA
)@@G@@@^@@@@^[\I(4I[5I))IT4IL>GD!IS,@L@@@@^@)^@)^@)DD,^[$G(,G(2GD? ))I-*G(2G*)CB
)@@G@@GD2G*)I-7H8)H(-HD,^[!H9=G(3^[\G0)G-\I9,G--I->IK)H90G(2GD4HD\H0?^@)@H@@@@CC
)@@G@@^[4H[\I($H@?^[5H1=G(2^[\I[4HD\H0)GT\H14IL\H)?^[\H1>^[!GD9^[<H[-H1$G*)I-*CD
)@@G@@G*)^@)@L@@@@^[<H[-IL-GT4G(2HD3I-(GT3^[\G0)I-*G*)G(8I[>GT4G(=^[(H10I(4^[\CE
)@@G@@IK)H95I-0I(4^[<H9,IT(G->IL-GL?JC,^@)E-*G*)@H@@@@^[&HD2IT4^[!H9=G*)H(-JC)CF
)@@G@@GL>^[<GD?H->G))G(?G(!G(,I))H92^[=GD4GC)G1(H->^[!H9=G*,@G@@@@^[OH[(IS)GT\CG
)@@G@@H(0GD2G(3^[-^[3HD,G9?G*)IT4IL>GD!^[\G0)IT9H(+H9?HD<^[(H10I(4@G@@@@^[7HD4CH
)@@G@@H@)GC)IT>GT\H1=^[3I-2G(-H*)I-\^[=G(4G(2H((H1>^[=HD&G1>IL>H1<G(3 0)@H@@@@CI
)@@G@@^[OH[\I($H@)I-*G*)H95I-0I(4^[(IS)HD,^[NDDM^[4JD0G*)GT\IL2G(<I-(H9,^[(H(-CJ
)@@G@@G9>IS?@E@@@@^[(I-3^[!G(-H1(H1$^[(IS)^[<H->GD2BS)^[-^[5IT>IK)H1>G(=IS)^@)CK
)@@G@@@G@@@@^[,H8)IT0G(<HD-H))I-2GD(H1(H1$^[(H0)H92G->IK)I-\^[=G(<HD0H[>IK)HD4CL
)@@G@@ 0)^@)@G@@@@^[OH[>^[3G(<H9,G))H(\G->^[\G0)G-\I9,G--I->^[(IS)GT-H-?G(=^[0CM
)@@G@@IL\G92GD!^@)@E@@@@^[&HD?G*)H(\G-> 0)^[DH0)I-*HD3^[<GD3G*?^[4I9\^[=HD3I-(CN
)@@G@@H1<I))@G@@@@^[0IL\G92GD!^[&HD?G(3^[-IL>^[3I[>GT(G1(G(=^[-H1=^[4H[>^[=H97CO
)@@G@@H1=GD4G(2 ))@H@@@@^[-G9-HD,^[5H1=G(2^[\I[4HD\H0)GT\H14IL\H)?^[<H9!I[-IL>CP
)@@G@@IS)GT\IL2G(3I[\H1=HD,G8)@G@@@@^[>H->H(>H14IS)H9&^[+H94H@)G1(H->IS,^@)DD,CQ
)@@G@@^[4H[>^[3HD!I[?G(3I))GD,G))^@)@E@@@@^[=G(&GD5H-4^[<GD3G*?^@)G(-GT*^[3JD!CR
)@@G@@GL\H-(GS)G(?G(!G(,I))H9&@F@@@@^[\H1>^[0IL\G92GD!^[&HD?G*)I9(H-?^[+G*)GT\CS
)@@G@@H(0GD2G(=^[7HD4H@)GC)^@)@G@@@@^[<H92IL>IT0H9,G-(H1$^[>H->H(>H14^[\G0)I-*CT
)@@G@@G*)IT-H(>^[,GD!G*)HD,^[4H[>^@)@A@@@@^[\I[0H93HD,G8)I[2H9$IL-H*)G1(H-> 0)CU
)@@G@@@G@@@@^@)^@)^@)D15H(>IL\I(3^[\I[4HD\H13^[-IL>^[-I1-HD?GD+H->^[4H8)GD?H-\CV
)@@G@@I8)^@)@G@@@@^[4H[>^[5IT>IK)G92G(-I->IK)G1?G(8HD+HD?HD4JC)HD,^[5IT(H1$^[@CW
)@@G@@C-JE9I 0)^@)@D@@@@^[JH1>^[!GD9^[<H9!I[-IL>^[4H[>^[<H9,I->H14IS)H9&^[\H1>CX
)@@G@@@I@@@@^[0IL\G92GD!^[&HD?G*$IS)I--GL?G*)H9&^[<H9,I->H14IS) [OD9# C)GD$GD(CY
)@@G@@H13I))GD,H94H[>IK;@G@@@@^[0IL\G-5GT>^[-^[KCTA^[\IK)E-#C0) [0G(2H(-H1>H14CZ
)@@G@@^[\IK)I->H(0H92GD2JC)^@)@L@@@@^[<H92IL>GT4HD\H0)G1(H-> C)I[2H9$IL-H*)G1(DA
)@@G@@H-> ))G--I--^[&HD?G*?^[\IK)I[2H9$IL-H*)G1(H->^[>H->H(>H14BS)@J@@@@^[?HD!DB
)@@G@@HD4^[4H[>^[=H97H1=GD4G*)I-\^[-^[<G(2I--HD,^[-IL>GC)H9&^[4H[>^[(H10I(4^[(DC
)@@G@@H(-G9>BS)^@)@G@@@@^[(G9,H92G*)H(5H-4HD0H->^[+H--H1:IS;^[0IL\G-5GT>^[>J[0DD
)@@G@@GD,G->G))E[MDDIE)=@H@@@@^[?HD3I-(H1$IS;^[=H97H1=GD4G*)H1\H0!IT4GD,G--IL=DE
)@@G@@^[NC-A^[4JD0G*)G1(H->IS;^[-H1=@I@@@@^[<H9,I-2H9?^[\I(4I[5I))H90I-(H((JL-DF
)@@G@@I-(H9,^[0GD2GD!G(4G(2IS,^@)DD,^[-G-=HD4HD\H0?^@)@H@@@@^[4H[>^[(H10I(4^[<DG
)@@G@@H[-IL-GT4G(2^[!H9=G*)H9&^[>GD<H@)IT9H(+H9?HD<^@*I9*G(4H[>IK)@I@@@@^[ADD DH
)@@G@@D-^CDOCC)H92^[[ET#DDD C)HD3^[>G1&G(<I-(I1>H-9^[4IL-H13I[-IL>H14BS)HD&^[!DI
)@@G@@HD8G(=@H@@@@^[!H9=G*)IL>GT\IL=IS)H9<GT5IK?^[ADD D-^CDOCC)^[(IS)I-*G*)GT*DJ
)@@G@@H93G(,^[!G(=HD5H*)@^@@@@^[&H92^[<H9!I[-IL(IT\H0,@G@@@@^@)^@)^@)DD,^[3I(!DK
)@@G@@H(-IL9 ))I-*G*)C[^D9RD0)I[2H9<G(3IT\IK)GT-H0)I[2H96G*)@F@@@@^[-H0)HD,G-(DL
)@@G@@IT0G(,IT-GL?G*)I-\H9?^[(H0)H(-H19^[3HD4I(-I-(H9,IS,^@)@C@@@@^[^HD3GT>IL,DM
)@@G@@HD,G8)G-(G1&G(2G(,GT>IS)GL>I-7G(>H0)@I@@@@^[4G(8I-3 ))H(-HD,I--HD,HD,G8)DN
)@@G@@I[2H9$IL-H(3^@*I[>IL*GD0IS)G1\IK)G-(IT4IL(GL5I-(H9,^@)@K@@@@^[4H8)H94H[>DO
)@@G@@IK)IT(I->IS( ))H92^[=G(+I($G9(H1$^[+JC)GT\H(0GD2HD3H9,^[\G0)I->IT4^[2I(,DP
)@@G@@^[\I(4I[5I-3@N@@@@^[-G9-HD,IT4^[-^[<H92IL>GT4^[+GD3G*'^[4H[>IT>^[-IL>^[\DQ
)@@G@@H1?JC)GC)G1>I8)H9&^[(I-3^[6GD2HD>G))GT-I[-GL(H-(I-(G(3 0)^@)@A@@@@ADKELJDR
)@@G@@CT ETND9M^[#CDGD))CT[EL^BK)^@)@]@@@@IT0GD<G*)AC)@F@@@@GT>H14G(2^[@C-JE9IDS
)@@G@@ )/D9KE-DD9IES"^@)B-NE[ CS1B0? 0, 0?B-NE[ CS5B0)@]@@@@IT0GD<G*)AC)@#@@@@DT
)@@G@@ALJE[ODDJD1NBK)^@)@]@@@@GT\H-5H(,^@5@]@@@@IT0GD<G*)AC)@]@@@@^@$CC$^@!^@)DU
)@@G@@@J@@@@^@)^@)^@)^[(IS)I(3G(=^[(H0)I[2H9$IL-H*)G1(H->^[!H9=G*,^@)DD4^[&H92DV
)@@G@@GT>IS)GC)GT\H(0GD2HD3H9,@H@@@@^@)^@)H9&^[OD9#IS)G1\IK)I-*G*)H9<GT5IL2G(,DW
)@@G@@GT>^[\G0)CD]ETJD-PE- ^[>H->H(>H14IS,@K@@@@^@)^@)C-(G1&G(2G(,GT>IS)GL>I-7DX
)@@G@@G(>H0)I-*G*)HD,G1\IL!GD4HD\H0)GT\H-?G(<I->G))G12H9!^[>GD<H@)E-JCS)@L@@@@DY
)@@G@@^@)^@)GT\H1<G(2H1(H1$^[-GL3H9?I(4G*)G(?G(!G(,I-3^[7HD?H))GL>^[3I(!H(-IL(DZ
)@@G@@JL>G))HD,^[4H[>^[KELDD1O^))^@)@I@@@@^@)^@)H95I-0I(4 0) [-H-3H8)IT>G*)^9^EA
)@@G@@^8?^9J^8?^9M^8?^9N^8)H90I-(H9,IS)IL>G9-IL=HD,G8)@ @@@@^@)^@)E-JCS)IT5H(!EB
)@@G@@GD2HD>IS(^@)@]@@@@IT0GD<G*)AC)@]@@@@^@$CK$^@!^@)@J@@@@^@)^@)^@)^[(IS)I(3EC
)@@G@@G(=^[4H8)GT\H(0IL>IT3^[\I(4^[-H-?^[\GT<I(2IL>H1<G(3^[\G0)H(5H-4HD0H->^@)ED
)@@G@@@K@@@@^@)^@)GL?GD,HT3^[+G(&H92G*)IL>GT\IL=IS)GD2G*)GT\H(0GD2G(= 0) [-H-3EE
)@@G@@H8)IT>G*)^9L^8)H90I-(H9, C)^@)@]@@@@IT0GD<G*)AC)@]@@@@^@$C)$^@!^@)@K@@@@EF
)@@G@@^@)^@)^@)^[(IS)I(3G(=^[7HD4H@)I-*G*)^9[^8?^9J^8?^9M^8?^9N^8)H90I-(H9,IS)EG
)@@G@@I-\^[-GT1I((IL>^[OD9#^@)@L@@@@^@)^@)IT5H(!GD2HD>IS)H9&^[0IL\G92GD!^[&HD?EH
)@@G@@G(3 0)^[DI))G1\IL<G(3^[4H[>^[<H9,IT(G->IL-I-(H9,^[\G0)I-*G*)@G@@@@^@)^@)EI
)@@G@@I-(H(> (-H1= (=GD4G*)H9&^[<IL>GD4HD\H0)HD,^[4H[>^[<H9!I[-IL(IT\H0,@]@@@@EJ
)@@G@@IT0GD<G*)AC)@]@@@@^@$C*$^@!^@)@I@@@@^@)^@)^@)^[&H92GT>IS)H95I-0I(4^[&H92EK
)@@G@@^[>I1>IL9^[0GD(IK)H9&^@)HD,I[5I))IT>ID5G(,GT>IS)@I@@@@^@)^@)G-\I9,G--I->EL
)@@G@@G),^@*E-*G*)H((H1(H(5H*)H95I-0I(4^[(IS)GC) L D- D( D1O^[<GD2G))^@)@M@@@@EM
)@@G@@^@)^@)H92^[<H92IL>IT0H9,G-(H1$^[,I(?H))G(,I-2JC)HD,^[4H[>^[\I(4I[5I))I[2EN
)@@G@@H9$IL-H*)G1(H-> ))G->I[>H1=HD,G8)^@)@C@@@@^@)^@)H9,^[4H[>^[!H9=G*)H9&^[=EO
)@@G@@H97H1=GD4G*, C)^@)@]@@@@IT0GD<G*)AC)@]@@@@^@$D)$^@!^@)@J@@@@^@)^@)^@)^[0EP
)@@G@@IL\I1(G->IS)GD,^[>J[0GD,G->G))E[MDDIE)=^[?HD3I-(H1$^[\G0)I-*G*)G-\I9,G--EQ
)@@G@@I-> 0)@M@@@@^@)^@)DD4^[$HD6G(3^[=G(?G(4G(=^[(H(-G9>IS)GD,G))H-(H1>^[,I(!ER
)@@G@@GL>IL3^[\G0)GD?H))GT\IL2G(<I-(H9,IS)I[2HD,I->G))@F@@@@^@)^@)GT\IL2G(3I[\ES
)@@G@@H1=HD,G8)I-\^[4H[>HD2^[2G(3I[>GT4HD6G*)G1(H->IS,@]@@@@IT0GD<G*)AC)@]@@@@ET
)@@G@@^@$D0$^@!^@)@K@@@@^@)^@)^@)^[(IS)I(3G(=^[4H8)HD,H[(GL(I))E[MDDIE)=^[\G0)EU
)@@G@@G-\I9,G--I-> 0)^[DG0)I-*G*)^9I^8)H90I-(H9,@L@@@@^@)^@)HD3^[3I[>GT(G1(G(=EV
)@@G@@^[-H1=^[4H[>IL>^[(IS)H1\^@/ETKC(#AS"^@*H92^[\I(4I[5I))G1(H-> C?^[,H8)GD<EW
)@@G@@I-5GD?@L@@@@^@)^@)IT9H(+H9?HD<^[=H97H1=GD4G*)HD3^[=H9,G*,^@)E-JCS)IT5H(!EX
)@@G@@GD2HD>IS)GD2G*)GD?H-\I9>G),^@*IT>G*)^9^^8?@C@@@@^@)^@)^9[^8?^9J^8?^9M^8)EY
)@@G@@GD,G))^9N^8)H90I-(H9,IS(@]@@@@IT0GD<G*)AC)@]@@@@^@$D8$^@!^@)@J@@@@^@)^@)EZ
)@@G@@^@)^[(IS)I(3G(=^[(H0)I[2H9$IL-H*)G1(H->^[!H9=G*,^@)DD4^[&H92GT>IS)GC)GT\FA
)@@G@@H(0GD2HD3H9,@H@@@@^@)^@)H9&^[OD9#IS)G1\IK)I-*G*)H9<GT5IL2G(,GT>^[\G0)D9HFB
)@@G@@D1DCLPES)G(?G(!G(,I-3 0)@ @@@@^@)^@) [3G(>^@$CC$^[\I[4HD\H0(@]@@@@IT0GD<FC
)@@G@@G*)AC)@]@@@@^@$E@$^@!^@)@M@@@@^@)^@)^@)^[(IS)I(3G(=^[4H8)GT2G(-I->^[-^[0FD
)@@G@@IL\G92GD!^[&HD?G*)E[#C0)H92^@)E-#C0) [3G(>^@$E)$^[\I[4HD\H0( 0)^@)@L@@@@FE
)@@G@@^@)^@)DD&^[4H[>^@$E@$^[\I[4HD\H0)HD3^[3I[>GT(G1(G(= ))GC)I[2H9$IL-H*)G1(FF
)@@G@@H->^[!I(3I))GL>^[$HD6G(,^[(H0)@M@@@@^@)^@)B-NE[ CS3B0,^@)DD4^[!GD9^[+G*)FG
)@@G@@I(3G(=^[(H0)G((I-*G(2^[>H->H(>H14^[!H9=G*)H92^[0IL\G92GD!^[&HD?G*)H(\G->FH
)@@G@@@J@@@@^@)^@)G-\I9,G--I->IS)I[2H96HD=HD,G8)I-*G(2G*)HD3^[-H0)G(?G(!G(,I))FI
)@@G@@H1-H(>^[?H9$HD<GD?H-9^@)@J@@@@^@)^@)GD6GD(H--GL?G*)G1\IK)GD,JC)H95I-0I(4FJ
)@@G@@^[>H->H(>H14^@*IT>G*)E-CC*)^9K^8)D9KE-DD9I^[&H92@C@@@@^@)^@)G15IL4H[>IK)FK
)@@G@@G(8I[?GD,GD4HD\H0( 0)^[DG0)^@)@L@@@@^@)^@)H9,G*)GD4I->H(0I-3^[4H8)G-\I9,FL
)@@G@@G--I->^[4I9\^[=GD4GC)G1(H->IS)I(,G->IK)I-*G*)^9K^8)H90I-(H9, ))GD,@I@@@@FM
)@@G@@^@)^@)G(2IL\IK)I9(H-?^[+G*)H1\I->G))IT(H1<G*)I-*G(2G*)HD3^[,H8)H-\G9(GT-FN
)@@G@@H))H1-H(>^@)@F@@@@^@)^@)GD6GD(H--GL?G*)I-\^[$HD6G*)I-\^[4H[>^[\I(4I[5I))FO
)@@G@@G(?G(!G(,I),@]@@@@IT0GD<G*)AC)@]@@@@^@$EC$^@!^@)@M@@@@^@)^@)^@)^[(IS)I(3FP
)@@G@@G(=^[(H0)GT\H1%I(,GT4HD\H0)I9(I-*^[4H[>^@$CK$^[\I[4HD\H0)I-\^[&H92GT>^[<FQ
)@@G@@H9,IT(G->IL-I-(H9,@L@@@@^@)^@)H9&^[!I(?I-(I[?G*)GL?GD,HT3^[+G(4I9>G(,^[=FR
)@@G@@G(?HD!HD4G(=^[<H[-IL-GT4G(2^[3I-2HD,G93^@*I-*GD4^[(IS?@L@@@@^@)^@)I-*H93FS
)@@G@@G*)IT4IL(H1$IS)G->H-(H((I->G))GL9^[4H[>^@/EDPD9OC*)CTCCDMB0)H92^[+JC)I-*FT
)@@G@@G*)G->G1-I(?I)?^@)@ @@@@^@)^@)I-*G*)GD0H93I-2H90H[> C,@]@@@@IT0GD<G*)AC)FU
)@@G@@@]@@@@^@$EK$^@!^@)@J@@@@^@)^@)^@)^[(IS)I(3G(=^[(H0)I[2H9$IL-H*)G1(H->^[!FV
)@@G@@H9=G*,^@)DD4^[&H92GT>IS)GC)GT\H(0GD2HD3H9,@G@@@@^@)^@)H9&^[OD9#IS)G1\IK)FW
)@@G@@I-*G*)H9<GT5IL2G(,GT>^[\G0)EL D-JCT[E-[CLGC*)^@)@C@@@@^@)^@)G(?G(!G(,I-3FX
)@@G@@ 0) [3G(>^@$CC$^[\I[4HD\H0(^@)@]@@@@IT0GD<G*)AC)@]@@@@^@$ES$^@!^@)@K@@@@FY
)@@G@@^@)^@)^@)^[(IS)I(3G(=^[(H0)I[2H9$IL-H*)G1(H->^[!H9=G*,^@)DD4^[&H92GT>IS)FZ
)@@G@@GC)^[<H9!I[-IL(IT\H0)^@)@F@@@@^@)^@)H9&^[OD9#IS)G1\IK)I-*G*)H9<GT5IL2G(,GA
)@@G@@GT>^[\G0)ETTD(]D9GDD#^@)@C@@@@^@)^@)G(?G(!G(,I-3 0) [3G(>^@$CC$^[\I[4HD\GB
)@@G@@H0(^@)@]@@@@IT0GD<G*)AC)@]@@@@^@$E)$^@!^@)@K@@@@^@)^@)^@)^[(IS)I(3G(=^[4GC
)@@G@@H8)G-\I9,G--I->^[KCTA^[>H->H(>H14IS?^[=GD4GC)G1(H->IS)H92^[0IL\G92GD!^@)GD
)@@G@@@J@@@@^@)^@)G1(H->IS)I-\^[0IL\G-5GT>^[4H[>^[-I[0IL\I[2HD-I->^[OCTA 0) [3GE
)@@G@@G(>^@$E@$^[\I[4HD\H0(^@)@]@@@@IT0GD<G*)AC)@]@@@@^@$E0$^@!^@)@J@@@@^@)^@)GF
)@@G@@^@)^[(IS)I(3G(=^[(H0)GT\H1%I(,GT4HD\H0)I9(I-*^[4H[>^@$D)$^[\I[4HD\H0)I-\GG
)@@G@@^[<IL>GD4G*)@G@@@@^@)^@)GL-I-<H@)H-(IT4HD,G93^@*AC3AK)GT\H-5H(,IS(^[&IL\GH
)@@G@@H*)G->H(-H1= 0)^@)@]@@@@IT0GD<G*)AC)@]@@@@^@$F@$^@!^@)@L@@@@^@)^@)^@)^[(GI
)@@G@@IS)I(3G(=^[4H8)G1\IL<G*)I-*G*)I[2H9<G(3IT\IK)I-\^[(G9,H92G*)GD,JC)G(?G(!GJ
)@@G@@G(,I))GT9GT?G*)^@)@L@@@@^@)^@)HD,G1\IL!GD4HD\H0,^@)E-*HD3^[(IS)I[2H96HD=GK
)@@G@@G(=^[-IS)GC)H--IT4^[2G(3H92I))HD,^[-H0)GD4I->H(0I))I-\@N@@@@^@)^@)G-\I9,GL
)@@G@@G--I->^[,H9, (3I--H1=GD2G))ET^C0)G1\IL!GD4^[&HD?G(3 0) [IH94G*'^[@C-JE9IGM
)@@G@@^[7HD?H))GD5I-\H(-I-(GT-H-?JC)@L@@@@^@)^@)IL>GT\G9,HD'G*)E[MDDIE)= ))C1JGN
)@@G@@ELOEL[D0)GD,G))E[#DDJES)G1(H->IS)GD,G))I[2H9<G(3IS)GT\H14IL\H))^@)@C@@@@GO
)@@G@@^@)^@)HD,G1\IL!GD4HD\H0)GD<GT\IL=HD,G9?JC, C)^@)@]@@@@IT0GD<G*)AC)@]@@@@GP
)@@G@@^@$FK$^@!^@)@J@@@@^@)^@)^@)^[&H92GT>IS)GC)G-\I9,G--I->^[\G0)^[>I1>IL9^[>GQ
)@@G@@H->H(>H14^[\IK)E[#C0)IT>ID5G(,GT>^@)@N@@@@^@)^@)G(,GT\I(,I->IL>G))HD,^[>GR
)@@G@@HD4H[>IK)HD,I[5I))IT4IL>GD! 0)^[DG0)I-*G*)G(?G(!G(,I))H92^[3G(1I(>H1<G*)GS
)@@G@@H[-IS)H1\^@)@M@@@@^@)^@)GT\I(,I->IL0GD2I))HD,^[4H[>^[\I[0H93HD,G8)IT4IL>GT
)@@G@@GD! ))HD4^[(IS)G-\I9,G--I->G))GD$GD(H13I))GC)H15H-?^@)@A@@@@^@)^@)G(?G(!GU
)@@G@@G(,I))H92^[3G(1I(>H1<G*,@]@@@@IT0GD<G*)AC)@^@@@@ALNE[ CS)C1DC(GC-NBK)^@)GV
)@@G@@@]@@@@IT0GD<G*)AC)@#@@@@^@/ETKC(#AC"^@!^@)@G@@@@A@)^@)GT-H0)GL>^[-^[=GD4GW
)@@G@@GC)G1(H-> ))I[2H9$IL-H*)G1(H->^[\IK)I[2H9$IL-H*)@H@@@@^@)^@)G1(H->^[>H->GX
)@@G@@H(>H14 0)^[DG0)H1\^[&HD?G*)H1-H(>^[(IS)G9(I1>H0?^[OE[A^))HD3@K@@@@^@)^@)GY
)@@G@@GD3IT5H(>G),^@)B-NE[ CS1B0)HD3^[4H[>^[>H->H(>H14^[\IK)G1(H->^[4H8)I9*HD<GZ
)@@G@@H@)I-*G*)H95I-0I(4@K@@@@^@)^@)GT\IL2G(<I-(H9,IS)GD2G*)I-\^[+G*)GD0I[?HD>HA
)@@G@@G)?^[(H0)H92G->IK)I-\^[<H[-H1$G*)HD4^[(H14H8)^@)@#@@@@^@)^@)B-NE[ CS2B0,HB
)@@G@@@]@@@@IT0GD<G*)AC)@#@@@@^@/ETKC(#AK"^@!^@)@F@@@@A@)^@)H(-JC)GD?IT\^[+G*)HC
)@@G@@GC)G--I--^[&HD?G*?^[0IL\G92GD!^[&HD?G*)H92@J@@@@^@)^@)I[2H9$IL-H*)G1(H->HD
)@@G@@^[>H->H(>H14 0)^[DG0)H1\^[&HD?G*)H1-H(>^[(IS)G9(I1>H0?^[OE[A^))^@)@I@@@@HE
)@@G@@^@)^@)HD3^[-IT3I(!G(= 0)^[DG0)GD,^[>H->H(>H14^[,GD!G*)HD3^[$HD6G(,^[(H0)HF
)@@G@@B-NE[ CS1B0)@J@@@@^@)^@)GD,G))H1\H1>^[(IS)G9(I1>H0)HD,^@/ETKC(#AK" ))I-*HG
)@@G@@G*)H1-H(>^[&IL\H*)B-NE[ CS1B0)HD3^@)@J@@@@^@)^@)GD3IT5H(>G),^@)DD&^[+H94HH
)@@G@@H@)B-NE[ CS1B0)GD,G))B-NE[ CS2B0)G->IT(G9,GD4G*)I[2H9$IL-H*)@I@@@@^@)^@)HI
)@@G@@G1(H->IS?^[-^[0IL\G92GD!^[&HD?G*)H(\G->^[=H97H1=GD4G*)HD3^[(H1(I-(GD4G(=HJ
)@@G@@ 0)^@)@K@@@@^@)^@)E[2H9$IL-H*)G1(H->^[>H->H(>H14IS)H(-JC)GL>^[=H97H1=GD4HK
)@@G@@G(=^[-G9-HD,IT4^[4G(8I))G1(H->IS,^@)@]@@@@IT0GD<G*)AC)@#@@@@^@/ETKC(#AS"HL
)@@G@@^@!^@)@E@@@@A@)^@)HD3^[4H[>^[\I(4I[5I))G1(H->^[&HD>H-= 0)^[DG0)G(!I[4JC?HM
)@@G@@@I@@@@^@)^@)HD4^[(IS)GD3IT5H(>G))H1\^[\I(4I[5I))IT4IL>GD!^[(IS)G->IT(IL>HN
)@@G@@G),^@)DD&^[(I))^@)@H@@@@^@)^@)G(8HD3I-3 ))HD4^[!GD9^[-H-3H8)GL>^[-^[=GD4HO
)@@G@@GC)G1(H-> ))I[2H9$IL-H*)G1(H->@J@@@@^@)^@)G(?G(!G(,I))H92^[0IL\G92GD!^[&HP
)@@G@@HD?G*,^@)DD& ))H[\I9>I1>IK?^[(I))HD3^[-^[0IL\G92GD!^@)@L@@@@^@)^@)G1(H->HQ
)@@G@@ ))I-*G*)^9K^8)H90I-(H9,^[!I(3I))GD?IT\^[+G*)I[2G(3G(,I),^@)E-*HD3^[(IS)HR
)@@G@@H1>GT>IT3GD2JC)I-\@M@@@@^@)^@)HD,G-(GT-I->^[=G(&GD5H-4^[>H->H(>H14^[,GD!HS
)@@G@@G(3 0)CD,^[>IL2H92^[7HD?H))GL>^[,H94G(=^[\I-*G(2I9(IT> 0)^@)@]@@@@IT0GD<HT
)@@G@@G*)AC)@#@@@@^@/ETKC(#A)"^@!^@)@ @@@@A@)^@)H[-IS)I-*G*)G1\IL!GD4BK)@H@@@@HU
)@@G@@GT>H14G(2^@/CTJD)1B0\B-#D9GD0" 8/EDPD9OC*)CTCCDMB0,B-#D9GAC" 8/CTJD-IB0)HV
)@@G@@ *)^@)@G@@@@^@)^@)CD?H))G1(G(?G-3^[-IL>^[\I[4HD\H1-H),^@)E-*G*)^[2G(=I(,HW
)@@G@@G--H1<JC)^@)@I@@@@^@)^@)HD3^[0IL\I1(G->G))GD3^[-H0)GD(G))I-\^[4H[>^[5IT>HX
)@@G@@IK?^[4H[>^@/EDPD9OC*)CTCCDMB0)@I@@@@^@)^@)HD3^[&H92GT>G))I-\^[4H[>^[7IL(HY
)@@G@@I->^[:G(9^[&HD>H-=^[4H8)GD?H-\I8)HD,I[5I))H9&^@)@H@@@@^@)^@)IT0G(<HD-H))HZ
)@@G@@GT*GD2GD<I->IL3 0)^[DG0)GL\I-*^[&HD?G(,GD!G*!IL>GD= (:G(9^@)@H@@@@^@)^@)IA
)@@G@@GD,G))G(?G(!G(,I)!I1>IL3HD\H0!H1-H(>^[<H9!GL(H1-I-(H9,IS)GD2G*)G9(I1>H0?IB
)@@G@@@H@@@@^@)^@)I-*G*)G(?G(!G(,I)!I1>IL3HD\H0!H1-H(>^[0GD2GD!G(4G(2IS)GD2G*)IC
)@@G@@I(3G(= 0)^@)@]@@@@GT\H-5H(,^@8@]@@@@IT0GD<G*)AC)@ @@@@^@)^@)B-#D9GAC" 8/ID
)@@G@@@[(@#@@@@@ @@@@@@S@@@@ T@@@@@Q@^N@][@ 7@^P@[H@ X@]F@@P@ K@]4@^!@@V@@@@@@IE
)@@G@@@^7@ B@[G@##@@@@[D@@@@[C@@@@#L@]C@[S@@@@#<@]3@ L@@@@@5@@@@@8@@@@@R@#;@@'IF
)@@G@@@#_@[J@@@@#(@]7@[$@^C@[&@ ?@@K@[-@@@@[T@]Q@@T@@@@ !@[O@[7@ F@@-@#)@@[@#/IG
)@@G@@@@@@@>@ \@@@@@@@ $@@@@[>@@@@[0@#?@[!@^I@^U@#C@^"@^5@@@@@L@[%@[I@@J@@@@^%IH
)@@G@@@@@@ R@@@@@1@@@@@@@]M@@@@#A@@G@]:@@F@^]@]L@#E@[9@^/@[N@@@@@@@@@@]W@] @@DII
)@@G@@@@O@]#@[,@@H@^-@]J@^&@[*@@@@]5@#]@@@@@@@@&@#P@^[@@@@@:@@B@@@@ 8@#>@#*@ <IJ
)@@G@@@@@@@Y@]\@ >@@@@]K@]B@ H@]"@@@@@@@]P@[Z@@@@^,@@@@^\@^K@#K@@@@@@@@?@@,@[/IK
)@@G@@@@2@@M@[1@[#@^_@@6@@@@@9@#[@[A@[Q@@@@@)@^?@@I@[M@ 0@@@@^(@ A@@ @@@@#U@@@IL
)@@G@@@@;@@@@@A@]1@@@@@@@@#@@@@]$@]T@[W@@@@@@@^B@@C@]X@@E@ :@@*@]H@]N@[U@ &@@]IM
)@@G@@@@@@]@@]*@@4@@@@@(@@@@@@@@@@^H@#$@@@@@@@#X@#V@ ^@@\@@@@^<@@@@@@@]^@@=@@XIN
)@@G@@@@0@[=@@!@[<@^$@@^@[8@#B@@3@["@@@@#6@#^@@/@@@@@.@@@@@"@]S@@_@@@@@U@[_@^@IO
)@@G@@@[L@#,@[Y@[+@]A@@%@@@@[?@[.@#2@#I@^Z@@@@^9@@^@ "AXR$        @@>@]U@@@>K-IP
)@@G@@DOWNDEF     @@&@[VC@@>UBE$DEF       @@$@@@@@@>!CE$FIELDS    @@$@[5@@@>.RIQ
)@@G@@E$APROC     @@$@@+@@@&[KE$AD        @@$@]!@@@& EE$AD0       @@$@@@@@@& EIR
)@@G@@E$APRT      @@$@@@@@@&J]E$PRTG      @@$@# @@@&J]E$PRTGA     @@$@  @@@&J]IS
)@@G@@E$PRTA      @@$@[X@@@&J]E$PRT       @@$@@$@@@&J]E$PRTI      @@$@[R@@@&J]IT
)@@G@@E$APRTI     @@$@^E@@@&J]E$CSF       @@$@[[@@@&J]E$DITX      @@$@@N@@@&LFIU
)@@G@@E$COLN      @@$@]I@@@&LFE$WRDN      @@$@[]@@@&LFE$MSGR      @@$@@@@@@&LFIV
)@@G@@E$CLEAR     @@$@@@@@@&LFE$PAD       @@$@@Z@@@&NIE$DIT       @@$@@W@@@&OLIW
)@@G@@E$DITR      @@$@@7@@@&OLE$CHAR      @@$@#O@@@&OLE$COL       @@$@@<@@@&OLIX
)@@G@@E$SKIP      @@$@[@@@@&OLE$MSG       @@$@@@@@@&OLE$MSKP      @@$@ U@@@&OLIY
)@@G@@E$RASE      @@$@@@@@@&R#E$FD3       @@$@^^@@@&R7E$FD2       @@$@]2@@@&R7IZ
)@@G@@E$PACKC     @@$@[:@@@&TPE$COPY      @@$@@@@@@&U!E$PACK      @@$@@@@@@&U!JA
)@@G@@E$FW        @@$@^Q@@@&WQE$MSKPR     @@$@@@@@@&XCE$DECFL     @@$@[3@@@&YBJB
)@@G@@E$OCTF      @@$@^:@@@&ZRE$DECF      @@$@@@@@@&ZRE$HEXF      @@$@#W@@@&ZRJC
)@@G@@E$DECFZ     @@$@@@@@@&ZRE$DCFZ      @@$@[\@@@&ZRE$DECV      @@$@]?@@@&-?JD
)@@G@@E$OCTV      @@$@]9@@@&-?E$HEXV      @@$@#N@@@&-?E$FD1       @@$@[B@@@&-?JE
)@@G@@E$FORMC     @@$@]E@@@&<>E$FORM      @@$@@@@@@&<>E$FDECFL    @@$@@@@@@&>[JF
)@@G@@E$FDECF     @@$@#.@@@&>[E$FDECFZ    @@$@@@@@@&>[E$FDECV     @@$@#'@@@&>[JG
)@@G@@E$FLS1      @@$@[E@@@&*[E$FLG1      @@$@[^@@@&*[E$FLF1      @@$@],@@@&*[JH
)@@G@@E$FLS2      @@$@@@@@@&*[E$FLG2      @@$@[ @@@&*[E$FLF2      @@$@[P@@@&*[JI
)@@G@@E$TIME      @@$@@@@@@&%WE$DAY1      @@$@[)@@@&%WE$DAY2      @@$@^W@@@&%WJJ
)@@G@@E$DAY3      @@$@[F@@@&%WE$DAY4      @@$@]'@@@&%WE$DAY5      @@$@[2@@@&%WJK
)@@G@@E$TD        @@$@^4@@@&?BE$DAT1      @@$@^X@@@&?BE$DAT2      @@$@@@@@@&?BJL
)@@G@@E$DAT3      @@$@#5@@@&?BE$DAT4      @@$@@@@@@&?BE$DAT5      @@$@#D@@@&?BJM
)@@G@@E$PKTXA     @@$@#+@@@&!6E$PKTA      @@$@]%@@@&!6E$PKT       @@$@#:@@@&!6JN
)@@G@@E$PKTF      @@$@#F@@@&!6E$TBL       @@$@#&@@@&2"E$TBLX      @@$@^J@@@&2"JO
)@@G@@EDIT$PROC   @@$@](@@@&.'A$EFIELDS   @@$@].@@@$B?A$EDITX     @@$@[K@@@$EWJP
)@@G@@A$ECOLN     @@$@@@@@@$EWA$EMSGR     @@$@[6@@@$EWA$ECLEAR    @@$@]O@@@$EWJQ
)@@G@@A$EDIT      @@$@@@@@@$GFA$EDITR     @@$@@@@@@$GFA$ECHAR     @@$@]]@@@$GFJR
)@@G@@A$ECOL      @@$@[;@@@$GFA$ESKIP     @@$@@@@@@$GFA$EMSG      @@$@^V@@@$GFJS
)@@G@@A$EFD2      @@$@@@@@@$I0A$ECOPY     @@$@]_@@@$J$A$EPACK     @@$@#%@@@$J$JT
)@@G@@A$EOCTF     @@$@]G@@@$LKA$EDECF     @@$@@@@@@$LKA$EDCFZ     @@$@@@@@@$LKJU
)@@G@@A$EDECV     @@$@@@@@@$LKA$EOCTV     @@$@@@@@@$LKA$EFD1      @@$@#7@@@$LKJV
)@@G@@A$EFLS1     @@$@]D@@@$OKA$EFLG1     @@$@@@@@@$OKA$EFLF1     @@$@^G@@@$OKJW
)@@G@@A$EFLS2     @@$@]V@@@$OKA$EFLG2     @@$@@@@@@$OKA$EFLF2     @@$@]R@@@$OKJX
)@@G@@A$ETIME     @@$@^1@@@$Q,A$EDAY1     @@$@ I@@@$Q,A$EDAY2     @@$@@@@@@$Q,JY
)@@G@@A$EDAY3     @@$@@@@@@$Q,A$EDAY4     @@$@ 6@@@$Q,A$EDAY5     @@$@@@@@@$Q,JZ
)@@G@@A$ETD       @@$@['@@@$SWA$EDAT1     @@$@]8@@@$SWA$EDAT2     @@$@]6@@@$SWKA
)@@G@@A$EDAT3     @@$@#Y@@@$SWA$EDAT4     @@$@[4@@@$SWA$EDAT5     @@$@@@@@@$SWKB
)@@G@@A$EPKT      @@$@]/@@@$UIA$EPKTF     @@$@@@@@@$UIED$PROCS    @@*@#3C@@$Y:KC
)@@G@@PRINT       @@*@ ,C@@$0!CSF         @@*@#QC@@$0!OPENMESSAGE @@*@@@C@@$0!KD
)@@G@@REOPEN      @@*@^)C@@$0!MESTERM     @@*@@@C@@$7%ENDMESSAGE  @@*@ MC@@$7%KE
)@@G@@ENDPRINT    @@*@@@C@@$'6ENDCSF      @@*@@@C@@$'6E$GET       @@*@@@C@@*J:KF
)@@G@@E$PUT       @@*@@@C@@*J:E$LOOK      @@*@ VC@@*J:E$SAVE      @@*@@@C@@*J:KG
)@@G@@E$BLK       @@*@@@C@@*J:E$OUT       @@*@#1*@@*J:E$NEXT      @@*@^6C@@*J:KH
)@@G@@E$RECALL    @@*@@@C@@*J:E$STORE     @@*@#ZC@@*J:E$REOPEN    @@*@@@C@@*J:KI
)@@G@@E$CLOSE     @@*@@@C@@*J:E$ALLIGN    @@*@#4C@@*J:E$OFFSET    @@*@ NC@@*J:KJ
)@@G@@E$WORDS     @@*@ 2C@@*J:E$FDASTRANS @@*@@@C@@*J:E$ASFDTRANS @@*@#MC@@*J:KK
)@@G@@LOAD        @@*@@@C@@*)USTORE       @@*@#GC@@*)UFIDEF$      @@(@#8@@@*<UKL
)@@G@@FIASG       @@(@]Y)@@*!&FIDIAG      @@(@]Z)@@*1>FIFREE      @@(@]))@@*2&KM
)@@G@@FIFRIM      @@(@]-)@@*2&FIPFIL      @@(@]+)@@*5/FIPELT      @@(@]<)@@*5/KN
)@@G@@FISCAN      @@(@]=)@@*9>FIW2        @@(@]>)@@*;MFIW1        @@(@]&)@@*;MKO
)@@G@@M$TIME      @@%@@@@@@(@5M$TIMX      @@%@#\@@@(@5FIBITS      @@:@@@@@@(K!KP
)@@G@@FIASG       @@:@#9@@@(MHFIDIAG      @@:@@@@@@(TMFIFREE      @@:@@@@@@(UNKQ
)@@G@@FIFRIM      @@:@@@@@@(UNFIPFIL      @@:@#H@@@(X$FIPELT      @@:@@@@@@(X$KR
)@@G@@FISCAN      @@:@@@@@@(-KFIW2        @@:@^M@@@(+.FIW1        @@:@]0@@@(+.KS
)@@G@@SLJ$TARG    @@?@@@@@@(>(LBJ         @@?@];@@@(%ABRIEF       @@?@@@@@@(:\KT
)@@G@@RESUME      @@?@@@@@@(:\TYPE        @@?@@@@@@(!ST$CELL      @@?@ -@@@(0PKU
)@@G@@C$TS        @@?@@@@@@(0.C$TSA       @@?@^R@@@(0.C$TSQ       @@?@@@@@@(15KV
)@@G@@C$OM        @@?@@@@@@(3DC$OMPK      @@?@#R@@@(32R$EAD       @@?@^=@@@(43KW
)@@G@@A$READ      @@?@ C@@@(5ER$EADA      @@?@ Z@@@(5+A$READA     @@?@#T@@@(5'KX
)@@G@@T$READ      @@?@^F@@@(6MA$TREAD     @@?@@@@@@(6%P$RINT      @@?@@@@@@(7]KY
)@@G@@A$PRINT     @@?@^#@@@(7UP$RNTA      @@?@^8@@@(72A$PRNTA     @@?@@@@@@(8EKZ
)@@G@@P$UNCH      @@?@@@@@@(8+A$PUNCH     @@?@@@@@@(8'P$NCHA      @@?@@@@@@(9MLA
)@@G@@A$PNCHA     @@?@^A@@@(9%P$RTCN      @@?@@@@@@(']A$PRTCN     @@?@@@@@@('ULB
)@@G@@P$CHCN      @@?@#J@@@('2A$PCHCN     @@?@@@@@@(;EP$RTCA      @@?@@@@@@(;+LC
)@@G@@A$PRTCA     @@?@@@@@@(;'P$CHCA      @@?@^3@@@(/MA$PCHCA     @@?@ [@@@(/%LD
)@@G@@S$YMBPK     @@?@@@@@@("WS$YMB       @@?@^+@@@%ISL$OAD       @@?@^;@@@%J'LE
)@@G@@D$REL       @@?@ 5@@@%K7D1          @@?@ #@@@%K7D$LOAD      @@?@@@@@@%L(LF
)@@G@@I$OD        @@?@@@@@@%M5I$OT        @@?@#-@@@%M5I$OA        @@?@#!@@@%M5LG
)@@G@@I$O         @@?@^>@@@%P;I$OI        @@?@@@@@@%QQI$OW        @@?@@@@@@%Q1LH
)@@G@@I$OWI       @@?@@@@@@%RGI$OXI       @@?@#S@@@%R$I$OARB      @@?@^O@@@%S]LI
)@@G@@I$OAXI      @@?@@@@@@%SXI$OADH      @@?@@@@@@%TBS$ETBP      @@?@#=@@@%VXLJ
)@@G@@E$C         @@?@#"@@@%Y,E$A         @@?@ *@@@%Y,E$B         @@?@@@@@@%Y,LK
)@@G@@E$O         @@?@^T@@@%Y,E$D         @@?@#0@@@%Y,E$E         @@?@^ @@@%Y,LL
)@@G@@E$W         @@?@@@@@@%Y,E$F         @@?@ E@@@%Y,E$WT        @@?@^0@@@%Y,LM
)@@G@@E$WS        @@?@ 3@@@%Y,E$SCL       @@?@@@@@@%Y,E$PNT       @@?@ +@@@%Y,LN
)@@G@@E$FLD       @@?@^D@@@%Y,E$INDX      @@?@@@@@@%Y,E$OVRP      @@?@@@@@@%Y,LO
)@@G@@E$TERM      @@?@@@@@@%Y,E$LINK      @@?@@@@@@%Y,E$JUMP      @@?@^L@@@%Y,LP
)@@G@@E$RPT       @@?@@@@@@%Y,E$CLR       @@?@@@@@@%Y,E$DE        @@?@@@@@@%Y,LQ
)@@G@@E$DF        @@?@@@@@@%Y,E$CENT      @@?@@@@@@%-BE$OUT       @@?@@@@@@%-<LR
)@@G@@E$OUTR      @@?@@@@@@%-0X$MARK      @@?@@@@@@%+RX$BACK      @@?@ (@@@%+=LS
)@@G@@X$BUFR      @@?@ D@@@%+1X$SIZE      @@?@@@@@@%<AX$IF        @@?@@@@@@%<:LT
)@@G@@X$OR        @@?@@@@@@%<:X$AND       @@?@@@@@@%<:X$TALY      @@?@@@@@@%>8LU
)@@G@@X$FRMT      @@?@^*@@@%&6X$MESG      @@?@@@@@@%$FX$CREG      @@?@^Y@@@%$ZLV
)@@G@@X$DUMP      @@?@@@@@@%$.X$CORE      @@?@@@@@@%:NX$DRUM      @@?@ P@@@%:9LW
)@@G@@X$TAPE      @@?@ )@@@%?SX$FILE      @@?@^'@@@%?1X$CW        @@?@@@@@@%!ZLX
)@@G@@X$ON        @@?@ =@@@%!/X$OFF       @@?@@@@@@%,:N$TAB       @@?@@@@@@%22LY
)@@G@@N$BF1       @@?@@@@@@%5+N$BF2       @@?@@@@@@%62L$SNAP      @@?@@@@@@%8)LZ
)@@G@@ELT$        @@?@@@@@@%;^SN$DEF      @@?@^S@@@:[DA$SCTRL     @@?@@@@@@:^!MA
)@@G@@ASCII       @@?@@@@@@:E\FIELDATA    @@?@@@@@@:GIFDATA       @@?@ ]@@@:GIMB
)@@G@@D$          @@?@@@@@@:H)JREG        @@?@@@@@@:J]SAXR$       @@!@@@@@@:V+MC
)@@G@@STRUC$OMN   @@,@@@@@@:!1STRUC$DEF   @@,@ "@@@:\ASTRUC$      @@,@ W@@@?N2MD
)@@G@@G$$GFL      @@,@@@@@@?+4G$$IFL      @@,@@@@@@?+4G$$EFL      @@,@ J@@@?+4ME
)@@G@@G$$DFL      @@,@@@@@@?+4G$$TFL      @@,@@@@@@?+4G$$DIA      @@,@ 9@@@?+4MF
)@@G@@G$DBUG      @@,@@@@@@?(*BEGIN       @@,@ G@@@?!7G$$B10      @@,@@@@@@?!7MG
)@@G@@ENDBEG      @@,@@@@@@?_=G$$X01      @@,@ O@@@?_=G$$X02      @@,@@@@@@?_=MH
)@@G@@SWITCHTO    @@,@@@@@@!F]BASE        @@,@ %@@@!H0G$$CLD      @@,@ Y@@@!KWMI
)@@G@@IF          @@,@@@@@@!TVG$$I05      @@,@^.@@@!TVG$$I10      @@,@ .@@@!TVMJ
)@@G@@ELSE        @@,@^2@@@!=UENDIF       @@,@ 1@@@!$AG$$I20      @@,@@@@@@!$AMK
)@@G@@CASENTRY    @@,@@@@@@!3AG$$C05      @@,@@@@@@!3AG$$C10      @@,@@@@@@!3AML
)@@G@@G$$C25      @@,@ S@@@!3AG$$C26      @@,@@@@@@!3AG$$C29      @@,@@@@@@!3AMM
)@@G@@G$$C40      @@,@@@@@@!3ACASE        @@,@@@@@@,AKG$$C60      @@,@@@@@@,AKMN
)@@G@@G$$PJT      @@,@@@@@@,JJENDCASE     @@,@@@@@@,K9REPEAT      @@,@@@@@@,<RMO
)@@G@@G$$R10      @@,@@@@@@,<RG$$R50      @@,@@@@@@,<RG$$R59      @@,@@@@@@,<RMP
)@@G@@G$$R60      @@,@@@@@@,<RG$$R61      @@,@@@@@@,<RG$$R62      @@,@ Q@@@,<RMQ
)@@G@@G$$R69      @@,@@@@@@,<RG$$R80      @@,@@@@@@,<RESCAPE      @@,@@@@@@,2SMR
)@@G@@G$$E10      @@,@@@@@@,2SOTHERWISE   @@,@@@@@@,94ATEND       @@,@@@@@@,94MS
)@@G@@ENDREP      @@,@@@@@@,94G$$Z10      @@,@@@@@@,94G$$Z30      @@,@ /@@@,94MT
)@@G@@G$$Z50      @@,@@@@@@,94READ$       @@,@@@@@@\N)READA$      @@,@@@@@@\N)MU
)@@G@@TREAD$      @@,@@@@@@\N)AREAD$      @@,@@@@@@\N)AREADA$     @@,@@@@@@\N)MV
)@@G@@ATREAD$     @@,@@@@@@\N)G$$D10      @@,@@@@@@\N)G$$D20      @@,@@@@@@\N)MW
)@@G@@G$$D99      @@,@@@@@@\N)G$$CAN      @@,@@@@@@\UCG$$A10      @@,@ 4@@@\UCMX
)@@G@@G$$A20      @@,@@@@@@\UCG$$A30      @@,@@@@@@\UCG$$COD      @@,@@@@@@\&EMY
)@@G@@G$$G10      @@,@@@@@@\&EG$$G20      @@,@@@@@@\&EG$$TST      @@,@@@@@@\,MMZ
)@@G@@G$$T01      @@,@@@@@@\,MG$$T10      @@,@@@@@@\,MG$$T11      @@,@@@@@@\,MNA
)@@G@@G$$T12      @@,@@@@@@\,MG$$T13      @@,@@@@@@\,MG$$T14      @@,@@@@@@\,MNB
)@@G@@G$$T15      @@,@@@@@@\,MG$$T16      @@,@@@@@@\,MG$$T20      @@,@@@@@@\,MNC
)@@G@@G$$T21      @@,@@@@@@\,MG$$T23      @@,@@@@@@\,MG$$T24      @@,@@@@@@\,MND
)@@G@@G$$T25      @@,@@@@@@\,MG$$T26      @@,@@@@@@\,MG$$T99      @@,@@@@@@\,MNE
)@@G@@G$$LAN      @@,@@@@@@0C=G$$L01      @@,@@@@@@0C=G$$L02      @@,@@@@@@0C=NF
)@@G@@G$$L03      @@,@@@@@@0C=G$$L21      @@,@@@@@@0C=G$$L30      @@,@@@@@@0C=NG
)@@G@@G$$L34      @@,@@@@@@0C=G$$L35      @@,@@@@@@0C=G$$L39      @@,@@@@@@0C=NH
)@@G@@G$$L40      @@,@@@@@@0C=G$$L41      @@,@ ;@@@0C=G$$L49      @@,@@@@@@0C=NI
)@@G@@G$$L51      @@,@@@@@@0C=G$$L52      @@,@@@@@@0C=G$$L53      @@,@@@@@@0C=NJ
)@@G@@G$$LGE      @@,@@@@@@03OG$$L70      @@,@@@@@@03OG$$L80      @@,@ '@@@03ONK
)@@G@@G$$SVA      @@,@@@@@@0/#G$$DCU      @@,@@@@@@0"GG$$DC1      @@,@@@@@@0"GNL
)@@G@@G$$DCU1     @@,@@@@@@0"GG$$PRA      @@,@@@@@@1E!G$$PRB      @@,@@@@@@1E!NM
)@@G@@FIDIAG      @@:@@@@@@(TMFIFREE      @@:@@@@@@(UNFIFRIM      @@:@@@@@@(UNNN
)@@G@@E$FIELDS    @@1@[5@@@2[BE$APROC     @@1@@+@@@2 @E$AD        @@1@]!@@@2C'NO
)@@G@@E$AD0       @@1@@@@@@2C'E$APRT      @@1@@@@@@2M2E$PRTG      @@1@# @@@2M2NP
)@@G@@E$PRTGA     @@1@  @@@2M2E$PRTA      @@1@[X@@@2M2E$PRT       @@1@@$@@@2M2NQ
)@@G@@E$PRTI      @@1@[R@@@2M2E$APRTI     @@1@^E@@@2M2E$CSF       @@1@[[@@@2M2NR
)@@G@@E$DITX      @@1@@N@@@2O;E$COLN      @@1@]I@@@2O;E$WRDN      @@1@[]@@@2O;NS
)@@G@@E$MSGR      @@1@@@@@@2O;E$CLEAR     @@1@@@@@@2O;E$PAD       @@1@@Z@@@2Q"NT
)@@G@@E$DIT       @@1@@W@@@2S[E$DITR      @@1@@7@@@2S[E$CHAR      @@1@#O@@@2S[NU
)@@G@@E$COL       @@1@@<@@@2S[E$SKIP      @@1@[@@@@2S[E$MSG       @@1@@@@@@2S[NV
)@@G@@E$MSKP      @@1@ U@@@2S[E$RASE      @@1@@@@@@2U3E$FD3       @@1@^^@@@2V$NW
)@@G@@E$FD2       @@1@]2@@@2V$^[4H[>IL>^[!I(3I))GL>^[3H9!G*)H-\G9(GT-H))G->G1-NX
)@@G@@I(?I))H1-H(>@H@@@@^[4H8)GL>^[$HD6G(,^[4H8)GD,JC)I[\I->H14HD-H))H95I-0I(4NY
)@@G@@^[>H->H(>H14 0)^[[IS)^@)@G@@@@^[-^[?GD3I))IL>IT\IL4 ))I-*G*)G(?G(!G(,I))NZ
)@@G@@H1-H(>^[(IS)I--HT>H0)G12H9!^@)@G@@@@^[4H[>^[>H->H(>H14^[\G0)B-NE[ CS1B0?OA
)@@G@@^[(G0)HD4^[>J[(IT4IS,^@)DD&^[,H94 ))@G@@@@^[-H0)G(2IL\IK)HD3^[,H94G(=^[-OB
)@@G@@H1=^[4H[>^[0IL\G92GD!^[4G(2H((H1-I->IS,^@)@J@@@@^[DG0)I-*G*)I[2H9<G(3IT\OC
)@@G@@IK)HD3^[,H94^[(H0)I[2H9$IL-H*)G1(H->^[!H9=G*)GL5I))I-*G*)^9O^8)^@)@J@@@@OD
)@@G@@^[\I[4HD\H0)HD3^[3I[>GT(G1(G(= ))GD,G))I-*G*)HD,I[5I))IT4IL>GD!IS)GT\H14OE
)@@G@@GD(H0) L D- D( D1O@D@@@@^[<GD2G-3 ))^[4H[>IT>^[<GD2G-3^[,GD!G*)I-*G*)H95OF
)@@G@@I-0I(4@H@@@@^[>H->H(>H14IS,^@)CC)I[2H9+H->H*)GD2HD3G(3^[7H[>H0)I-*G(2G*)OG
)@@G@@HD3^[-^[=GD4GC)^@)@J@@@@^[&HD?G*)HD,^@/ETKC(#AC"^[7HD4H@)H1\^@$E)$^[\I[4OH
)@@G@@HD\H0?^[\IK)I9(I-*^[-^@$E)$^[\I[4HD\H0)^@)@J@@@@^[+I(4^[,H8) L D- D( D1OOI
)@@G@@^[<GD2G-3^[(H0)I-*G*)G--I--^[3I-2G(-H*,^@)DD,^[4H[(IS)GT-IT> ))^@)@J@@@@OJ
)@@G@@^[4H[>IL>^[(IS)H1\^[?H9$HD<GD?^[\I(4I[5I))G(?G(!G(,I))H1-H(>^[4H8)GL>^[5OK
)@@G@@IT>G);^[4H[5IS?^@)@F@@@@^[-H0)G(2IL\IK)HD3^[,H94G(= 0)^[OH[>^@$E@$^[\I[4OL
)@@G@@HD\H0)HD3^[!G(-H14@I@@@@^[4H8)GT2G(-I->^[KCTA^[\IK)E-#C0)I[2H9$IL-H*)G1(OM
)@@G@@H->IS)G1\IK)IT5GL3G(1I(>H14^[5IT>^@)@]@@@@^[+JC)ETNC8,@]@@@@IT0GD<G*)AC)ON
)@@G@@@G@@@@ALOD[ ^@$CLL^8)D9KE-DD9I ))E9DD1^D9R^[NE[ CS?^[[D1^^[OEL[D1ND-[E-DOO
)@@G@@D9IBK)@]@@@@IT0GD<G*)AC)@E@@@@^[DG0)GT\H(0GD2G(=^[2G(<H92G-3^[-IL>^[\G0)OP
)@@G@@G-(G1&G(2G(,I))^@)@G@@@@^[!H9=G(3 ))I-2GD,IT?GD4HD\H0)HD3^[-I(4H9!GD4HD<OQ
)@@G@@GD?H-9^[!GD=G*,^@)E-*G*)@I@@@@^[=HD2G(<I-(H9,^[\G0)I-2GD,IT?GD4HD\H0)HD3OR
)@@G@@^[-H-7GD9IS)CDNCTDDC) *"^[ADD D-^CDOCC,^@)@G@@@@^[OH[(IS)GT*H9(GT>^[7GD3OS
)@@G@@^[!GD=G*)G1\IK)HD,I->IL,GD?^[<H9,I1>H1(G(,GT> ))@F@@@@^[+I(4^[(I))H[-IS)OT
)@@G@@JD>I))I-\^[+G*)IT*H97H0)I-*GD4^[4H[>^[(H16G(2IT>@D@@@@^[4IL-H13H--I-(H9,OU
)@@G@@^[(IS)GD,JC)H(\IL>^[!G(-H1(H1$G15H),@F@@@@^@)^@)DD4^[3H[\I(?G))GL>^[,H94OV
)@@G@@G(=^[4H[-I))GD?H))GT*GD2GD<I->IK)^@)@I@@@@^[!GD,HD0I(?GD4HD\H0?^[7H[>I-*OW
)@@G@@G(2^[(I))GL>^[4H[>^[>H-(H((H1-I-(H9,^[\G0)H(5H-4HD0H->@K@@@@^[+H--H1:IS?OX
)@@G@@^[4H[>^[(H16H9<GD4HD\H0)H9&^[7HD,G-\I8)IT0G(<HD&HD<GD4HD\H0?^[\IK)GT*GD2OY
)@@G@@GD<I->IK)^@)@K@@@@^[4IL-H13H--I-(H9, ))HD3^[=H9,G*)GD4^[4H[>^[4HD!G*)H9&OZ
)@@G@@^[>GD<H@)IL>ID5HD2G(=^[<H9!I[-IL(IT\H0,^@)@G@@@@^[OH[(IS)H(-JC)GD4^[&HD2PA
)@@G@@IT4^[$H--H1<G*)GD0I[>GD2^[(H1>G1&HD<HD>H14 ))^@)@H@@@@^[+I(4^[4H[>IL>^[-PB
)@@G@@IL>^[3G(6G(2GD?^[2G(-IT\H13^[&H92^[4H[(IS)GD0I[2H9-GT* 0)^@)@G@@@@^[AHD2PC
)@@G@@IT4 ))HD4^[(IS)G1>H-4^[4H[-I))I-*G(3G*)H(>GT*GD,HD3H(3^[=G(,H94G*)@H@@@@PD
)@@G@@^[3I[>GT(GD?^[0I(2I[\IT>^[5IT-G9>^[-H1= ))GD3^[3I(<H@?^[7HD?H))GL>^[5IT>PE
)@@G@@G))^@)@H@@@@^[(H1&IL>ID5G(,I-?JC,^@)E-*HD3^[(H(0H->H(>H14GD4HD\H0)I[2G(3PF
)@@G@@G(2I1>IS)I-*G*)^@)@G@@@@^[+GD3HD<^[D 9J^[3I-2I(<I-5IL>^[7H[(GT*^[!GD:G(3PG
)@@G@@^[4H[>^[=H97H1=GD4G(2^@)@J@@@@^[-IS)G(&G1(GT(G(,I))GD3^[(I))HD3^[-H1=^[9PH
)@@G@@G(4^[!GD:G(3^[4H[>^[-GT4I(-H))HD,I[5I))IL>GT\IL=@G@@@@^[&H92H(3^[4IL-H13PI
)@@G@@I[-IL>H14^[4H8)I-*G*)H(-HD,^[?HD,G*)IL\I(4HD,G(3 0)^@)@H@@@@^[NG(<H9,G)?PJ
)@@G@@^[(H0)I-*G*)G9>H1>IL-H))GD0I[?HD<GD4HD\H0?^[4H[>^[=G(,IT(I-9^[\G0)@J@@@@PK
)@@G@@^[=HD&G1>IL>H1<G(3^[(IS)G1-IK)IT!GD?H->IK)I-*GD,^[4H[>^[3HD'G*)H9&^[4H[>PL
)@@G@@^[4H94GD?^[&HD?G*,@J@@@@^[OH[(IS)H(>I-*H9=^[(IS)^[0IL\GL-GL?JC)H(\IL>^[>PM
)@@G@@G1&HD<HD>H14^[(H0)IT5GT*^[<GD3G(3^[4H[-H0)@B@@@@^[2G(<IL>GD4HD,G8)G(-GT*PN
)@@G@@^@)G1(H->^[(H0)^@)@F@@@@^[!H9=HD&HD>G))G1\IL!^[-H1=^[=H97H1=GD4HD,G8)I-*PO
)@@G@@G*)IL>IT5H-4 0)^@)@H@@@@^[GGD3I-?JC?^[(H0)H(-H19^[-I[0H-(GT-I-(H9,IS)I-*PP
)@@G@@G*)G-\I9,G--I->IK)HD3^[3I-(H-?@D@@@@^[D 9J^[+H95H1= 0)^[PIT(H1$^[!H92G*)PQ
)@@G@@H9&^[4H[>^[#E[P^@)@H@@@@^[=I(2HD,G8)H96G(2H--I[0G(=^[D 9J^[=H9>IS)H1\I))PR
)@@G@@GD0I[2G(<HD-GL?JC)G->G92GD=G*)@A@@@@^[0IL\G92GD!^[0G(2G1\IL!GD,GT> 0)^@)PS
)@@G@@@]@@@@IT0GD<G*)AC)@H@@@@ALJE[ODDHDDUDDIC8)E[[EL[D( E- ELN^[[D1^^[OD[ ^[^PT
)@@G@@D9RD1^CDOC(M^[[D-BD9MDDOD[HBK)@]@@@@IT0GD<G*)AC)@F@@@@^@)^@)CD3^[3I--I->PU
)@@G@@G))G(-IL?HD>IK?^[4H[>^@/E[ C(FB0)G1-GT4H92^[-H1=@K@@@@^@/D-JD9F^[[D[ CD^PV
)@@G@@B0)G1-GT4H92^[-IL>^[\I[4HD!HD'HD,G8)I[-IL-H(>I->IL3 0)^[OH[>^[=H97H1=GD4PW
)@@G@@G(2^@)@J@@@@^[(IS)GC)IT>ID5G(,I-(GD?H-9^[\IL(G(,I->G))GT\H(0GD2GD4H92^[-PX
)@@G@@H1=^[-IS)IT5GT*^[(IS)H1\I))^@)@I@@@@^[=G(&HD,G(=^[4H8)I[2H96HD=G*)I-*G*)PY
)@@G@@H90I-(H(5H*)IT>I))H9&^[<H92IL>GT4HD\H0)GT-IL=IS,@G@@@@^[OH[>^[\I[4HD!I(!PZ
)@@G@@^[(IS)G->G1(H1>G))GD3^[4H[>^[!HD,HD!I(!^[,I(!GL>IK)^@)@K@@@@^[\G0)I[\IT3QA
)@@G@@HD+H->^[<H92IL>GT4HD\H0)GT-IL=IS)I-\^[<H[-H1$G*)H9,G*)G1(H->^[(H14H8)GD,QB
)@@G@@H94H[>IK,^@)@J@@@@^[DH13I->GD= ))I-*G*)G-\I9,G--I->IK)I[2H9=I(<G(3^[-^[3QC
)@@G@@G(4^[\G0)GT\IL2G(<I-(H9,^[<GD2G-3^@)@G@@@@^[3I(&G1(GT(G(,I))I-\^[-GT*HD>QD
)@@G@@I1>^[4H[>^[3GD!G*)G(,G),^@)DD4^[(IS)I-*G*)@H@@@@^[(H14G(2GD<I-(H9,^[\G0)QE
)@@G@@I-*G(3G*)I[-IL-H(>I->IL3^[-H1=^[4H[>^[0H[9IT(GT-H))^@)@F@@@@^[,GD4I(2G*)QF
)@@G@@H9&^[4H[>^[&HD?G(3^[+G((H1$^[<H9,IT(G->IL>G))I9*HD<H@)@G@@@@^[=G(4G(2H((QG
)@@G@@H1>^[4H[>^[<H-\IT>H1>IT3^[\G0)I-*G*)I[2H9=I(<I))I-\^[4H[-I))@G@@@@^[\I[4QH
)@@G@@HD!I(!^[3G(4 0)^[DH0)G1-GT4 ))I-*G*)G-\I9,G--I->IK)GD?G9\IL(I-*H*)@F@@@@QI
)@@G@@^[=H9>IS)GC)I1>IL9^[$H9\G))HL\GK)GD4^[-I[0IL\J[(H(-I-(H1$^[4H[>^@)@E@@@@QJ
)@@G@@^[\I[4HD!I(!^@)HD,^[4H[>^[6GD3I))H(-HL\IL(I-9^[\G0)GT-IT>IS,@C@@@@^[DI))QK
)@@G@@HD3^[2G(?GD4HD6G(?JC)HD,IT>H13HD4HD6G*)^@)@G@@@@^[4H8)GT*GD,G9>IS)HD,^[4QL
)@@G@@H[>^[\I[4HD!HD'HD,G8)I[-IL-H(>I->IL3 0)^[OH[>IL>@H@@@@^[-IL> ))H[\I9>I1>QM
)@@G@@IK?^[<H[-IL-GT4G(2HD3I-(GT3^[\G0)HD,I[5I))G--I--^[7H[(GT*^@)@H@@@@^[!GD9QN
)@@G@@^[4G(,G))I-\^[=G($IL-G->^[4H[>^[2G(3I(?I))GD,G))IT*H95H-=^[+G*)H1\I->G),QO
)@@G@@@I@@@@^[AH92^[>J[-H(0H-> ))HD&^[\H1>^[(IS)G-\I9,G--I-(H1$^[4I9\^[&HD?G(3QP
)@@G@@^[7H[(GT*^[*GD6G*)@H@@@@^[2G(0G(4HD4HD6G*)GL?H9<HT3^[\G0)I-*G*)IT-H(>^[(QQ
)@@G@@H(-G9>IS?^[4H[>^@/E[ C(FB0)^@)@G@@@@^[&GD<I-\IK)IT*H95H-=^[+G*)IT>I))G92QR
)@@G@@G(-I->IK)I-*GD,^[4H[>^[3HD'G*)H9&^@)@F@@@@^[-^[2G(0G(-I->G))GL?H9<HS,^@)QS
)@@G@@CD,GD?H9$H95IT?JC?^[(G0)HD!GD$G(3^@)@G@@@@^[7HD4H[(H0)GC)G1(H->^[*GD6G*)QT
)@@G@@GC)G-(IT0H--GT>H(>H14^[$IL>GD4G(2^[4H[-H0)@I@@@@^@4A@0^[2G(<H92G-3 ))I-*QU
)@@G@@G*)B-GD9JDS)CDCC([C)"^[3H[\I(?G))GD?IT\^[+G*)HD,GT2G(-IT>G),@G@@@@^[OH[>QV
)@@G@@IT>^[<H[-H1$G(3^@)G(&G1>GT4HD6G(?JC)H90I-(H((JL>^[4H[>^[\I(4I[5I)?@E@@@@QW
)@@G@@^[+I(4^[4H[>JC)^[-H-3H8)G->G92GD=G*)I-*G*)IT0G(>G))H9&^[4H[>@F@@@@^[0IL\QX
)@@G@@GT>IT3H92 0)^[KIL\GT>IT3H92^[3I[>G(=^[<GD,^[+G*)HD!I[2H96G(=@H@@@@^[+JC)QY
)@@G@@H-\I9>IL(H1$^[4H[>^[\I[4HD!HD'GD4HD\H0)I[-IL-H(>I->IL3^[+I(4^[-I))GC)^@)QZ
)@@G@@@H@@@@^[?HD:G(?JC)GT\IT4^[\G0)G9>H1>IL-I-(H1$^[?GD2G9>IK)GT\IL2G(<I-(H9,RA
)@@G@@^[=G(<HT3 0)@J@@@@^@)^@)C1(H1-H-?JC?^[-^[<H9!H(>H14^[\H0)HD,I[5I))HD!GD$RB
)@@G@@G*)H->H1$I-*^[(IS)H1>GT>IT3GD2JC,^@)@I@@@@^[DH0)I-*G(\IL9^[4H[>IL>^[(IS)RC
)@@G@@H1\^[?HD!HD4^[4H8)I-*G*)HD,I[5I))HD!GD$G*)H->H1$I-*^@)@C@@@@^@*I9(I-*HD,RD
)@@G@@^[NC-A^[=G(&HD,G(=^[&H92H(-I)( 0)^@)@H@@@@^[CH97G(6G(2 ))GD,^[(H14G(2H1-RE
)@@G@@H))GL5G1&G(2^[!I(3I))GL>^[!GD(H14GD(H1>G))G1\IK)@H@@@@^[(H(-G9>IS)I9*HD<RF
)@@G@@H@)IT0GD,^[(H14G(2H1-H))I[-G9>^[+H95H1=GD2HD>IS,^@)E-*HD3^@)@G@@@@^[(H14RG
)@@G@@G(2H1-H))GL5G1&G(2^[(IS)H1\I8)IT>I))GD4^@6A@)I9\IL=IS?^[4H[-I))HD3@J@@@@RH
)@@G@@^@2A)0^[<H[-IL-GT4G(2IS)CDNCTDDC?^[\IK)AS6A@)GT*GD2GD<I->IL3^@)C1DC(GC-[RI
)@@G@@E-[ 0)^[DH(-G9>IS)@H@@@@^[>J[<G(>G-(H1$^[4H[(IS)H->H1$I-*^[-H1=^[&GD?H-(RJ
)@@G@@H1$^[4H94GD?H-9^[7HD4H[(H0)^@)@I@@@@^[-^[0GD$G*)GL\I(,G--IL9^@*A)4B@)I9\RK
)@@G@@IL=IS(^[7HD?H))GL>^[<H9!I[-IL>G))H1\IL!GD?H-9 0)@I@@@@^[DG0)HD4^[(IS)H1>RL
)@@G@@GT>IT3GD2JC)I-\^[!H96G*)^[-H0)HD!GD$G*)I-\^[4H[>^[(H14G(2H1-H))^@)@M@@@@RM
)@@G@@^[+I(&G1>IK?^[(I))I9(H-?^[+G*)I-2I(,GT-I->G))I-\^@6A@)I9\IL=IS)GL5I))D1JRN
)@@G@@^[>IL2H92^[7HD?H))GL>^[,H94G(= 0)^@)@I@@@@^[DG0)I-*G*)I(3G(2^[7HD3H[>IS)RO
)@@G@@I-\^[5IT>^[4H[>^[0IL\GT>IT3H92^[\H0)G1(H->IS)I9(I-*^@)@H@@@@^[2G(<H92G-3RP
)@@G@@^[$IL>GD4G(2^[4H[-H0)A00^[7H92G-3^[(H0)H->H1$I-* ))H[>^[=H9>IS)^@)@B@@@@RQ
)@@G@@^[3H8)I9(I-*^[4H[(IS)I(,G->IL3I--H1=HD,G8,___@@@H0)I[-IL-H(>I->IL3^[+I(4RR
)@@G@@^[-I))GC)^@)@H@@@@^[?HD:G(?JC)GT\IT4^[\G0)G9>H1>IL-I-(H1$^[?GD2G9>IK)GT\RS
)@@G@@IL2G(<I-(H9,^[=G(<HT3 0)@J@@@@^@)^@)C1(H1-H-?JC?*[S@@@*SDFF*@#@@@@@HDG,NRT
)@@G@@ .M,66,6,6  @A@@@@@DOC,DER DOWNDOC/DOC,,,FORM,,49     @[@@@@@EOF  ___@@@RU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@RV
)@@G@@*[S@@@*SDFF*@A@@@@@HDG,P  ******  DOWNDOC/DOC  ****** @#@@@@@DOC,R DOWNDRW
)@@G@@OC/DOC@ @@@@@HDG,P  ******  OUT$$$  ******@#@@@@@ELT,L OUT$$$     @A@@@@RX
)@@G@@@HDG,P  ******  PRINTDOC/DOC  ******@^@@@@@ELT,L PRINTDOC/DOC     @ @@@@RY
)@@G@@@HDG,P  ******  RUN  ******   @]@@@@@ELT,L RUN  @A@@@@@HDG,P  ******  AXRZ
)@@G@@R$/UOM  ******    @ @@@@@PDP,ML AXR$/UOM,AXR$/UOM     @A@@@@@HDG,P  ****SA
)@@G@@**  DOWNDEF  ******     @^@@@@@PDP,ML DOWNDEF,DOWNDEF @A@@@@@HDG,P  ****SB
)@@G@@**  EDIT$P/UOM  ******  @ @@@@@PDP,ML EDIT$P/UOM,EDIT$P/UOM @A@@@@@HDG,PSC
)@@G@@  ******  ED$PROCS  ******    @ @@@@@PDP,ML ED$PROCS,ED$PROCS     @ @@@@SD
)@@G@@@HDG,P  ******  FIDEF$  ******@^@@@@@PDP,ML FIDEF$,FIDEF$   @A@@@@@HDG,PSE
)@@G@@  ******  M$TIME/UOM  ******  @ @@@@@PDP,ML M$TIME/UOM,M$TIME/UOM @B@@@@SF
)@@G@@@HDG,P  ******  PROCS-FIASG/UOM  ******   @B@@@@@PDP,ML PROCS-FIASG/UOM,SG
)@@G@@PROCS-FIASG/UOM   @A@@@@@HDG,P  ******  PROC$/UOM  ******   @ @@@@@PDP,MSH
)@@G@@L PROC$/UOM,PROC$/UOM   @A@@@@@HDG,P  ******  SAXR$/UOM  ******   @ @@@@SI
)@@G@@@PDP,ML SAXR$/UOM,SAXR$/UOM   @A@@@@@HDG,P  ******  STRUC$/UOM  ******  SJ
)@@G@@@ @@@@@PDP,ML STRUC$/UOM,STRUC$/UOM @ @@@@@HDG,P  ******  CHECK  ****** SK
)@@G@@@^@@@@@MASM,S CHECK,CHECK     @A@@@@@HDG,P  ******  COMPARE  ******     SL
)@@G@@@^@@@@@MASM,S COMPARE,COMPARE @ @@@@@HDG,P  ******  DOWN  ******  @#@@@@SM
)@@G@@@MASM,S DOWN,DOWN @A@@@@@HDG,P  ******  DOWNPCF  ******     @^@@@@@MASM,SN
)@@G@@S DOWNPCF,DOWNPCF @A@@@@@HDG,P  ******  DOWNTCF  ******     @^@@@@@MASM,SO
)@@G@@S DOWNTCF,DOWNTCF @A@@@@@HDG,P  ******  DOWNTOC  ******     @^@@@@@MASM,SP
)@@G@@S DOWNTOC,DOWNTOC @ @@@@@HDG,P  ******  ERROR  ****** @^@@@@@MASM,S ERROSQ
)@@G@@R,ERROR     @ @@@@@HDG,P  ******  E$CHAR  ******@^@@@@@MASM,S E$CHAR,E$CSR
)@@G@@HAR   @ @@@@@HDG,P  ******  GET  ******   @#@@@@@MASM,S GET,GET   @ @@@@SS
)@@G@@@HDG,P  ******  ISDFI  ****** @^@@@@@MASM,S ISDFI,ISDFI     @ @@@@@HDG,PST
)@@G@@  ******  MATCH  ****** @^@@@@@MASM,S MATCH,MATCH     @A@@@@@HDG,P  ****SU
)@@G@@**  PAGED-IO  ******    @ @@@@@MASM,S PAGED-IO,PAGED-IO     @ @@@@@HDG,PSV
)@@G@@  ******  SCAN  ******  @#@@@@@MASM,S SCAN,SCAN @ @@@@@HDG,P  ******  SFSW
)@@G@@IASG  ******@^@@@@@MASM,S SFIASG,SFIASG   @ @@@@@HDG,P  ******  TBTREE  SX
)@@G@@******@^@@@@@MASM,S TBTREE,TBTREE   @A@@@@@HDG,P  ******  UTILITY  *****SY
)@@G@@*     @^@@@@@MASM,S UTILITY,UTILITY @ @@@@@HDG,P  ******  MAP  ******   SZ
)@@G@@@#@@@@@MAP,AS MAP,DOWN  @I@@@@@HDG,N                                    TA
)@@G@@                                          ___@@@                        TB
)@@G@@                                    ___@@@@@@@@@*[S@@@*SDFF*@ @@@@@RUN,ATC
)@@G@@ JAY777,,JAY,20,1000    @^@@@@@HDG,N  .M,66,6,6 .     @]@@@@@FREE TPF$. TD
)@@G@@@#@@@@@ASG,T TPF$,///999@]@@@@@COPY DOWN. @A@@@@@HDG  ******  DOWNDEF  *TE
)@@G@@***** .L,1 .@^@@@@@PDP,LM DOWNDEF,DOWNDEF @B@@@@@HDG  ******  ED$PROCS  TF
)@@G@@****** .L,1 .     @ @@@@@PDP,LM ED$PROCS,ED$PROCS     @A@@@@@HDG  ******TG
)@@G@@  FIDEF$  ****** .L,1 . @^@@@@@PDP,LM FIDEF$,FIDEF$   @A@@@@@HDG  ******TH
)@@G@@  CHECK  ****** .L,1 .  @^@@@@@MASM,SE CHECK,CHECK    @A@@@@@HDG  ******TI
)@@G@@  COMPARE  ****** .L,1 .@^@@@@@MASM,SE COMPARE,COMPARE@A@@@@@HDG  ******TJ
)@@G@@  DOWN  ****** .L,1 .   @#@@@@@MASM,SE DOWN,DOWN@A@@@@@HDG  ******  DOWNTK
)@@G@@PCF  ****** .L,1 .@^@@@@@MASM,SE DOWNPCF,DOWNPCF@A@@@@@HDG  ******  DOWNTL
)@@G@@TCF  ****** .L,1 .@^@@@@@MASM,SE DOWNTCF,DOWNTCF@A@@@@@HDG  ******  DOWNTM
)@@G@@TOC  ****** .L,1 .@^@@@@@MASM,SE DOWNTOC,DOWNTOC@A@@@@@HDG  ******  ERROTN
)@@G@@R  ****** .L,1 .  @^@@@@@MASM,SE ERROR,ERROR    @A@@@@@HDG  ******  E$CHTO
)@@G@@AR  ****** .L,1 . @^@@@@@MASM,SE E$CHAR,E$CHAR  @A@@@@@HDG  ******  GET TP
)@@G@@ ****** .L,1 .    @#@@@@@MASM,SE GET,GET  @A@@@@@HDG  ******  ISDFI  ***TQ
)@@G@@*** .L,1 .  @^@@@@@MASM,SE ISDFI,ISDFI    @A@@@@@HDG  ******  MATCH  ***TR
)@@G@@*** .L,1 .  @^@@@@@MASM,SE MATCH,MATCH    @B@@@@@HDG  ******  PAGED-IO  TS
)@@G@@****** .L,1 .     @ @@@@@MASM,SE PAGED-IO,PAGED-IO    @A@@@@@HDG  ******TT
)@@G@@  SCAN  ****** .L,1 .   @#@@@@@MASM,SE SCAN,SCAN@A@@@@@HDG  ******  SFIATU
)@@G@@SG  ****** .L,1 . @^@@@@@MASM,SE SFIASG,SFIASG  @A@@@@@HDG  ******  TBTRTV
)@@G@@EE  ****** .L,1 . @^@@@@@MASM,SE TBTREE,TBTREE  @A@@@@@HDG  ******  UTILTW
)@@G@@ITY  ****** .L,1 .@^@@@@@MASM,SE UTILITY,UTILITY@[@@@@@HDG,N@#@@@@@MAP,STX
)@@G@@ MAP,DOWN   @]@@@@@CULL,IE    ___@@@LITY,UTILITY@[@@@@@HDG,N@#@@@@@MAP,STY
)@@G@@ MAP,DOWN   @]@@@@@CULL,IE    ___@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TZ
)@@G@@*[S@@@*SDFF*@[@@@@.     @H@@@@.         THE FOLLOWING USAGE OF DEF, FOLLUA
)@@G@@OWED BY EQU'S (WITHOUT ASTERISKS ON @H@@@@.         THE LABELS), FOLLOWEUB
)@@G@@D BY A SINGLE ASTERISKED PROC ENTRANCE LINE,    @G@@@@.         OFFERS TUC
)@@G@@IME AND SPACE EFFICIENCIES TO THE 1108/1110 ASSEMBLER.@G@@@@.         SEUD
)@@G@@E DOCUMENTATION ON THIS IN 1100 SERIES SYSTEMS MEMORANDUM,  @G@@@@.     UE
)@@G@@    REVISION 10, PARAGRAPH 6.1.6, 'THE DEF DIRECTIVE IN PDP'.     @[@@@@UF
)@@G@@.     @H@@@@.         THIS ELEMENT EQUATES THE PROPER NUMERIC VALUES TO UG
)@@G@@THE FULL SET OF   @H@@@@.         MNEMONICS FOR THE USER SET OF REGISTERUH
)@@G@@S (INCLUDING THOSE FOR 1110   @H@@@@.         'J-REGISTER MODE' CHARACTEUI
)@@G@@R EDITING), AND FOR ALL WHOLE AND PARTIAL @ @@@@.         WORD REFERENCEUJ
)@@G@@S.    @[@@@@.     @H@@@@.         THE MNEMONICS X12 THROUGH X15 ARE PURPUK
)@@G@@OSELY NOT INCLUDED.  THIS IS  @H@@@@.         TO ENCOURAGE THE USE OF THUL
)@@G@@E MNEMONICS A0 THROUGH A3, CONSISTENTLY   @H@@@@.         THROUGHOUT 110UM
)@@G@@0 SERIES CODE, WHEN REFERENCING THESE FOUR OVERLAPPED @ @@@@.         (XUN
)@@G@@ OR A) REGISTERS. @[@@@@.     @#@@@@          DEF     @I@@@@.           UO
)@@G@@                                                            . UOMMOD    UP
)@@G@@@I@@@@. UOMMOD - WE HAVE REMOVED THE DEFINITION OF 'X0' WHICH, IF USED, UQ
)@@G@@      . UOMMOD    @I@@@@. USUALLY LEADS TO TROUBLE.                     UR
)@@G@@                        . UOMMOD    @I@@@@.                             US
)@@G@@                                          . UOMMOD    @^@@@@X1        EQUT
)@@G@@U       1   @^@@@@X2        EQU       2   @^@@@@X3        EQU       3   UU
)@@G@@@^@@@@X4        EQU       4   @^@@@@X5        EQU       5   @^@@@@X6    UV
)@@G@@    EQU       6   @^@@@@X7        EQU       7   @^@@@@X8        EQU     UW
)@@G@@  010 @^@@@@X9        EQU       011 @^@@@@X10       EQU       012 @^@@@@UX
)@@G@@X11       EQU       013 @^@@@@A0        EQU       014 @^@@@@A1        EQUY
)@@G@@U       015 @^@@@@A2        EQU       016 @^@@@@A3        EQU       017 UZ
)@@G@@@^@@@@A4        EQU       020 @^@@@@A5        EQU       021 @^@@@@A6    VA
)@@G@@    EQU       022 @^@@@@A7        EQU       023 @^@@@@A8        EQU     VB
)@@G@@  024 @^@@@@A9        EQU       025 @^@@@@A10       EQU       026 @^@@@@VC
)@@G@@A11       EQU       027 @^@@@@A12       EQU       030 @^@@@@A13       EQVD
)@@G@@U       031 @^@@@@A14       EQU       032 @^@@@@A15       EQU       033 VE
)@@G@@@^@@@@R1        EQU       0101@^@@@@R2        EQU       0102@^@@@@R3    VF
)@@G@@    EQU       0103@^@@@@R4        EQU       0104@^@@@@R5        EQU     VG
)@@G@@  0105@^@@@@R6        EQU       0106@^@@@@R7        EQU       0107@^@@@@VH
)@@G@@R8        EQU       0110@^@@@@R9        EQU       0111@^@@@@R10       EQVI
)@@G@@U       0112@^@@@@R11       EQU       0113@^@@@@R12       EQU       0114VJ
)@@G@@@^@@@@R13       EQU       0115@^@@@@R14       EQU       0116@^@@@@R15   VK
)@@G@@    EQU       0117@^@@@@SR1       EQU       0103@^@@@@SR2       EQU     VL
)@@G@@  0104@^@@@@SR3       EQU       0105@^@@@@J0        EQU       0106@^@@@@VM
)@@G@@J1        EQU       0107@^@@@@J2        EQU       0110@^@@@@J3        EQVN
)@@G@@U       0111@^@@@@W         EQU       0   @^@@@@H2        EQU       1   VO
)@@G@@@^@@@@H1        EQU       2   @^@@@@XH2       EQU       3   @^@@@@XH1   VP
)@@G@@    EQU       4   @^@@@@T3        EQU       5   @^@@@@T2        EQU     VQ
)@@G@@  6   @^@@@@T1        EQU       7   @^@@@@S6        EQU       010 @^@@@@VR
)@@G@@S5        EQU       011 @^@@@@S4        EQU       012 @^@@@@S3        EQVS
)@@G@@U       013 @^@@@@S2        EQU       014 @^@@@@S1        EQU       015 VT
)@@G@@@^@@@@U         EQU       016 @^@@@@XU        EQU       017 @^@@@@Q2    VU
)@@G@@    EQU       4   @^@@@@Q4        EQU       5   @^@@@@Q3        EQU     VV
)@@G@@  6   @^@@@@Q1        EQU       7   @I@@@@.                             VW
)@@G@@                                          . UOMMOD    @I@@@@. UOMMOD - DVX
)@@G@@EFINE TYPE$REP TO DESIGNATE BANKS AS WRITE-PROTECTED        . REPBIT    VY
)@@G@@@I@@@@.                                                                 VZ
)@@G@@      . UOMMOD    @I@@@@TYPE$REP  EQU       0100              . 'TYPE TYWA
)@@G@@PE$REP' => NO IBANK ST  . REPBIT    @I@@@@.                             WB
)@@G@@                                          . UOMMOD    @I@@@@. UOMMOD - TWC
)@@G@@O SAVE PAPER DURING VOLUMINOUS ASSEMBLER LISTINGS,          . UOMMOD    WD
)@@G@@@I@@@@.  INVOKING AXR$ AUTOMATICALLY SETS BRIEF MODE (ONE OUTPUT LINE   WE
)@@G@@      . UOMMOD    @I@@@@.  PER SOURCE LINE). BRIEF MODE DISABLED VIA  AXWF
)@@G@@R$,ANYTHING .           . UOMMOD    @I@@@@.                             WG
)@@G@@                                          . UOMMOD    @I@@@@P         PRWH
)@@G@@OC      1                 . TO REFERENCE P(0,1), MUST HAVE  . UOMMOD    WI
)@@G@@@I@@@@AXR$*     NAME      0                 . LINE TO ENTER ON. SORRY.  WJ
)@@G@@      . UOMMOD    @I@@@@ DO P(0,1)=0 , BRIEF       . UNLESS SPECIFIED, TWK
)@@G@@URN ON UOM BRIEF MODE   . UOMMOD    @#@@@@          END     ___       EQWL
)@@G@@U       021 @^@@@@A6        EQU       022 @^@@@@A7        EQU       023 WM
)@@G@@@^@@@@A8        EQU     *[S@@[*SDFF*@^@@@@^@)^@)^@)^@)^@)C- C0)^@)@[@@@@WN
)@@G@@ 0)^@)@G@@@@ 0)E-*G(3G*)GD2G*)HD,HD4HD-H))GT\H1&HD$I(2GD4HD\H0)I[-IL-H(>WO
)@@G@@I->IL3 0)^@)@[@@@@ 0)^@)@J@@@@D- E1 D))^@)^@)C(LE*)^@)^@)^@)AS)^@)^@)^@)WP
)@@G@@^@)^@)^@)^@)^@) 0)GT5IL2G(,I))H->I1>H))G(1I(-I->@K@@@@E1 ELNDDJD0)^@)C(LWQ
)@@G@@E*)^@)^@)^@)AK)^@)^@)^@)^@)^@)^@)^@)^@) 0)GT5IL2G(,I))I1>IL3HD\H0)G(1I(-WR
)@@G@@I->^@)@K@@@@D-[D[ CD^^@)^@)C(LE*)^@)^@)^@)A)0A@)^@)^@)^@)^@)^@)^@)^@) 0)WS
)@@G@@G->G1-I(?I))H-\H9:^[-H[>GD=^[3I[>GS)@M@@@@CLPC1ID8)^@)^@)C(LE*)^@)^@)^@)WT
)@@G@@AC2^@)^@)^@)^@)^@)^@)^@)^@) 0)H15H(+G(2^[\G0)GL5G1&G(2IS)I[>IK)HD,I[5I))WU
)@@G@@G1(H->@M@@@@CLPC1GC(I^@)^@)C(LE*)^@)^@)^@)A)4B@)^@)^@)^@)^@)^@)^@)^@) 0)WV
)@@G@@IT(H1$H->^[+I(&G1>IK)H->H1$I-*^[&H92^[(H10I(4^@)@M@@@@DDID- D0)^@)^@)C(LWW
)@@G@@E*)^@)^@)^@)A*1AK)^@)^@)^@)^@)^@)^@)^@) 0)HD,G->J@)H->H1$I-*^[&H92^[DET^WX
)@@G@@C1D^[-GT<G(3IS)^@)@I@@@@DDHD- D0)^@)^@)C(LE*)^@)^@)^@)AS3^@)^@)^@)^@)^@)WY
)@@G@@^@)^@)^@) 0)H95I-0I(4^[-IL>GC)IT0G(<@M@@@@DD[CLGC(I^@)^@)C(LE*)^@)^@)^@)WZ
)@@G@@A00^@)^@)^@)^@)^@)^@)^@)^@) 0)H(-J@)HD!GD$G*)GD2G(-^[?G(,G94H@)G1\IK)HD,XA
)@@G@@I[5I))@K@@@@E[ C(FEC)^@)^@)C(LE*)^@)^@)^@)A0)^@)^@)^@)^@)^@)^@)^@)^@) 0)XB
)@@G@@G->G1-I(?I))I[>G(:^[0GD2GD!G(4G(2^@)@I@@@@E9FCDMC([^@)^@)C(LE*)^@)^@)^@)XC
)@@G@@CLPC1ID8%CLPC1GC(I^@)^@)^@) 0)I9\IL:^[-IL>GC)H->H1$I-*@L@@@@C-ODDHC*)^@)XD
)@@G@@^@)C(LE*)^@)^@)^@)A*%B@%B@)^@)^@)^@)^@)^@)^@) 0)H(-G9(GS)I1-H-5G*)G1\IK)XE
)@@G@@H(>H(\IL9^[4HD!G*)@A@@@@CTJE[O^@)^@)^@)C(LE*)^@)^@)^@)A@)^@)@[@@@@ 0)^@)XF
)@@G@@@H@@@@ 0)E-*G*)G1\H-?H97HD,G8)GD2G*)G(2IL\IK)GT\G->^[=G(3HD$H1-I-(H9,IS)XG
)@@G@@G1\IK)I-*G*)@H@@@@ 0)^@)^@)^[3I(+IL\I(4HD,G*)C(MELJEK,^@)CD?H))GT-H-?IS)XH
)@@G@@I-\^[ ELMD9M^[2G(3I(?I))@A@@@@ 0)^@)^@)^[(H0)I->IL!HD,GD4HD\H0,^@)@[@@@@XI
)@@G@@ 0)^@)@M@@@@DDNC-ADD ELM^@)C(LE*)^@)^@)^@)AC)^@)^@)^@)^@)^@)^@)^@)^@) 0)XJ
)@@G@@G(2IL\IK)IL>I-5IL,^[&IL\H*)DDNC-ADC)GT\H(0H->J@)@M@@@@ET^C1JC(MEK)^@)C(LXK
)@@G@@E*)^@)^@)^@)AK)^@)^@)^@)^@)^@)^@)^@)^@) 0)G(2IL\IK)IL>I-5IL,^[&IL\H*)GC)XL
)@@G@@ET^C1J^[2H95I-(H1>@N@@@@E[AE[ ELM^@)^@)C(LE*)^@)^@)^@)AS)^@)^@)^@)^@)^@)XM
)@@G@@^@)^@)^@) 0)H1\H1'^[[AK)IL>I-5IL,G(=^[&IL\H*)E[AE@)G15H1<I-(H9,^@)@I@@@@XN
)@@G@@D9QC1GC(MEK)^@)C(LE*)^@)^@)^@)A))^@)^@)^@)^@)^@)^@)^@)^@) 0)IT4H92GD$G*)XO
)@@G@@H96G(2G1?H97@K@@@@C9 E- ELM^@)^@)C(LE*)^@)^@)^@)A*)^@)^@)^@)^@)^@)^@)^@)XP
)@@G@@^@) 0)IL>GD?H-9^[-H0)DDNC-ADC)G(2IL\IK)^@)@N@@@@E-JCT ELM^@)^@)C(LE*)^@)XQ
)@@G@@^@)^@)A0)^@)^@)^@)^@)^@)^@)^@)^@) 0)G(2IL\IK)HD,^[0IL\GT>IT3HD,G8)I[2H9$XR
)@@G@@^[&HD?G*)E-JCS)^@)@P@@@@C(GC-PE[ ELM^@)C(LE*)^@)^@)^@)A8)^@)^@)^@)^@)^@)XS
)@@G@@^@)^@)^@) 0)G-5I[?HD<GD4G*)G(?I))H1-H(>^[(H0)I-2G(>^@)^@)^@)^@)^@)^@)^@)XT
)@@G@@I@)^@)@O@@@@D(DF[HD9^C(MEK)C(LE*)^@)^@)^@)B@)^@)^@)^@)^@)^@)^@)^@)^@) 0)XU
)@@G@@GD4I->H(0I))I-\^[^D9RD0)I[2H9$IL-H*)GD,G))G--I--^[&HD?G*)^@)@O@@@@D1JE(NXV
)@@G@@C(MEK)^@)C(LE*)^@)^@)^@)BC)^@)^@)^@)^@)^@)^@)^@)^@) 0)G15IL4H[>IK)G(8G(<XW
)@@G@@I(4HD\H0)I(3G(?G(3IS)^@)^@)^@)^@)^@)^@)^@)@J@@@@C1DD- ELM^@)^@)C(LE*)^@)XX
)@@G@@^@)^@)AC0^@)^@)^@)^@)^@)^@)^@)^@) 0)HD?H->G9-H))G1(H->^[4JD0G*)^@)@L@@@@XY
)@@G@@CTTCT ELM^@)^@)C(LE*)^@)^@)^@)AC1^@)^@)^@)^@)^@)^@)^@)^@) 0)HD?H->G9-H))XZ
)@@G@@GT9GT?G*)IT0G(<HD&HD<GD4HD\H0)@J@@@@ETDFL ELM^@)^@)C(LE*)^@)^@)^@)AC2^@)YA
)@@G@@^@)^@)^@)^@)^@)^@)^@) 0)JL>IL\^[?G(,G94H@)G(?G(!G(,I))@O@@@@D1JC(GE- ELMYB
)@@G@@^@)C(LE*)^@)^@)^@)AC3^@)^@)^@)^@)^@)^@)^@)^@) 0)H1\^[>H-4^[,GD!G*)GD6GD(YC
)@@G@@H--GL?G*)G1\IK)E@!H90I))G-\I9,G--I->@N@@@@DDJC(MEK)^@)^@)C(LE*)^@)^@)^@)YD
)@@G@@AC4^@)^@)^@)^@)^@)^@)^@)^@) 0)DC\D8)G(2IL\IK)HD,^[(H1(I-(GD?^[4G(3I))H9&YE
)@@G@@^[&HD?G(3^@)@N@@@@D9KD1 ELM^@)^@)C(LE*)^@)^@)^@)AC5^@)^@)^@)^@)^@)^@)^@)YF
)@@G@@^@) 0)G(2IL\IK)IL>I-5IL,^[&IL\H*)DDNC-ADDJCC) *)H9,^[\I[>H0)@M@@@@D9PE-AYG
)@@G@@DDGC(MEK)C(LE*)^@)^@)^@)AC6^@)^@)^@)^@)^@)^@)^@)^@) 0)HD!I[2H90G(2^[&HD?YH
)@@G@@G*)I-9I[>^[&H92^[\I(4I[5I))^@)@N@@@@C1[E-[D))^@)^@)C(LE*)^@)^@)^@)AC7^@)YI
)@@G@@^@)^@)^@)^@)^@)^@)^@) 0)H(3G8)I[2HD,I->G)) *)G1-I--H))G(8HD4^[\H0)G(2IL\YJ
)@@G@@IK)^@)@[@@@@ 0)^@)@H@@@@ 0)E-*G*)G1\H-?H97HD,G8)GD2G*)G(2IL\IK)GT\G->^[=YK
)@@G@@G(3HD$H1-I-(H9,IS)G1\IK)I-*G*)@I@@@@ 0)^@)^@)^[>IL2H92^[3I(+IL\I(4HD,G*)YL
)@@G@@E[#C1 ELMD9M 0)^@)^[HH93I))GT-H-?IS)I-\^[4H[(IS)@I@@@@ 0)^@)^@)^[3I(+IL\YM
)@@G@@I(4HD,G*)G-\^[,H94^[2G(3I(?I))HD,^[4G(2H((H1-I-(H9, ))HD,IT4G(-G))@G@@@@YN
)@@G@@ 0)^@)^@)^[-I[0IL\I[2HD-I->^[-GT4HD\H0)HD3^[4GD:G(, ))GC)I9-IL,HD,G8)HD3YO
)@@G@@@F@@@@ 0)^@)^@)^[0IL(H14G(=^[-H1=^[2G(<H96G(2JC)HD3^[-I-4G(!I[4G(= 0)^@)YP
)@@G@@@[@@@@ 0)^@)@M@@@@ETOCDMC(MEK1^@)C(LE*)^@)^@)^@)AC)^@)^@)^@)^@)^@)^@)^@)YQ
)@@G@@^@) 0)G--I--^[\GT<I(2IS)GL>G1\IL>^@%^[<GD2G))HD,^[KCTA@L@@@@ETOCDMC(MEK2YR
)@@G@@^@)C(LE*)^@)^@)^@)AK)^@)^@)^@)^@)^@)^@)^@)^@) 0) K)GT-IL=^[(IS)AD3I))HD,YS
)@@G@@^[K (\I[4^[KCTA^@)@N@@@@ETOCDMC(MEK3^@)C(LE*)^@)^@)^@)AS)^@)^@)^@)^@)^@)YT
)@@G@@^@)^@)^@) 0) K)GT-IL=^[\I-*G(2^[4H[-H0)AD3I))HD,^[K (\I[4^[KCTA^@)@M@@@@YU
)@@G@@C-PE[ ELM^@)^@)C(LE*)^@)^@)^@)A))^@)^@)^@)^@)^@)^@)^@)^@) 0)I-2G(>^[<H9,YV
)@@G@@I--HD,IS)G-5I[?HD<GD4G*)G(,I-2HD>IS)@L@@@@E-#C1 ELM^@)^@)C(LE*)^@)^@)^@)YW
)@@G@@A*)^@)^@)^@)^@)^@)^@)^@)^@) 0)G(2IL\IK)HD,^[&H92H((H1$^[OCTA^[3I-2G(-H*)YX
)@@G@@@J@@@@ET ED ELM^@)^@)C(LE*)^@)^@)^@)A*)^@)^@)^@)^@)^@)^@)^@)^@) 0)IL-H1$YY
)@@G@@G*)GT*G(<HS)G(2IL\IK)^@)@M@@@@E-TE[ ELM^@)^@)C(LE*)^@)^@)^@)A0)^@)^@)^@)YZ
)@@G@@^@)^@)^@)^@)^@) 0)G1\IL!GD4^[>IL2H92^[(H0)E[#C0)GT\IL2^[<GD2G))^@)@[@@@@ZA
)@@G@@ 0)^@)@J@@@@ 0)E-*G*)G1\H-?H97HD,G8)GD2G*)G(?G(!G(,I))I-9I[>^[=G(3HD$H1-ZB
)@@G@@I-\IL3^[-H1=^[-IL>^[5IT>G))I-\@K@@@@ 0)^@)^@)IT0G(<HD&JC)I-*G*)I-9I[>^[\ZC
)@@G@@G0)I-2G(>^[4H8)GT2G(-I->^[\IK)IT5H(!GD2JC)I-\^[0IL\G-5GT> 0)@[@@@@ 0)^@)ZD
)@@G@@@I@@@@ETTD(]^@)^@)^@)C(LE*)^@)^@)^@)AC)^@)^@)^@)^@)^@)^@)^@)^@) 0)IT9H(+ZE
)@@G@@H9?HD<^[4JD0G*)^@)@I@@@@EL D-JCS)^@)^@)C(LE*)^@)^@)^@)AK)^@)^@)^@)^@)^@)ZF
)@@G@@^@)^@)^@) 0)IL>H-\GT-I--GL?G*)I-9I[>@I@@@@CD]ES)^@)^@)^@)C(LE*)^@)^@)^@)ZG
)@@G@@AS)^@)^@)^@)^@)^@)^@)^@)^@) 0)GD+IT\H-5I->^[4JD0G*)^@)@H@@@@D9HD1D^@)^@)ZH
)@@G@@^@)C(LE*)^@)^@)^@)A))^@)^@)^@)^@)^@)^@)^@)^@) 0)H9!HD+I(3^[4JD0G*)@[@@@@ZI
)@@G@@ 0)^@)@E@@@@C-JE9IC- C0%^@)E[MD9#^@)^@)^@) K0^@)^@)^@)^@)^@)^@)^@)^@)^@)ZJ
)@@G@@@E@@@@^@)^@)^@)^@)^@)C(IC))^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)___^@)ZK
)@@G@@^@)^@)^@) 0)HD?H->G9-H))GT9GT?G*)IT0G(<HD&HD<GD4HD\H0)@J@@@@ETDFL ELM^@)ZL
)@@G@@^@)C(LE*)^@)^@)^@)AC2^@)*[S@@@*SDFF*@[@@@@.     @A@@@@. UNIVERSITY OF MAZM
)@@G@@RYLAND EDIT$ PROCS@F@@@@. MODIFIED BY JEFF JEWETT FROM THE ORIGINAL CLASZN
)@@G@@SIC BY D. ZAVE.   @[@@@@.     @ @@@@. REASONS FOR MODIFICATIONS:  @[@@@@ZO
)@@G@@.     @A@@@@. 1) TO ALLOW 18 BIT UFIELDS. E.G.  @[@@@@.     @D@@@@.     ZP
)@@G@@    E$FD1     'RES',,U          . I$ OR BUST    @C@@@@.   GENERATES A 'TZQ
)@@G@@' FLAG WHEN USING STOCK EDIT$P@[@@@@.     @B@@@@. 2) TO ALLOW EQUF'D J-DZR
)@@G@@ESIGNATOR. E.G.   @[@@@@.     @ @@@@.   A     EQUF      BLIP,,S3  @B@@@@ZS
)@@G@@.         E$COL     BLIP              .   @[@@@@.     @F@@@@.   STOCK EDZT
)@@G@@IT$P GENERATES A 'T' FLAG. SOUND INCREDIBLE, BUT IT'S @G@@@@.   TRUE. WHZU
)@@G@@AT PAIN EXISTS IS DUE ALMOST ENTIRELY TO THE ILL-CONSIDERED @G@@@@.   (SZV
)@@G@@ORRY, DAREK) 'U' DEFAULT J-DESIGNATOR. IN THE ABOVE EXAMPLE THE   @F@@@@ZW
)@@G@@.   STOCK EDIT$P 'SEES' NO EXPLICIT J-DESIG (E.G. BLIP,,J) AND SO @ @@@@ZX
)@@G@@.   TRIES TO FORCE A 'U' IN.  @[@@@@.     @G@@@@. 3) EXTENSIONS TO HANDLZY
)@@G@@E OUR ADDITIONAL ROUTINES AND PACKET FIELDS.    @[@@@@.     @G@@@@. NOTEZZ
)@@G@@ THAT MODIFICATIONS (1) AND (3) ARE REFLECTED IN A SIGNIFICANTLY  @F@@@@AA
)@@G@@. LARGER E$AD. IF THE STOCK ASSEMBLER ALLOWED ONE TO 'OR' OFF     @H@@@@AB
)@@G@@. NON-RELOCATABLE FIELDS (A PERFECTLY REASONABLE REQUEST, WE THINK), THEAC
)@@G@@N     @B@@@@. THE PROC WOULD BE SUBSTANTIALLY SMALLER.@[@@@@.     @F@@@@AD
)@@G@@. NOTE: WE BELIEVE THAT THIS PROC IS COMPATIBLE WITH STOCK UNIVAC @F@@@@AE
)@@G@@. ASM AND MASM. WE MIGHT BE WRONG. ANY COMPLAINTS, SUGGESTIONS, OR@E@@@@AF
)@@G@@. EFFUSIVE DEMOSTRATIONS OF PRAISE SHOULD BE FORWARDED TO:  @[@@@@.     AG
)@@G@@@^@@@@.         JEFF JEWETT   @^@@@@.         SYSTEMS STAFF @A@@@@.     AH
)@@G@@    COMPUTER SCIENCE CENTER   @A@@@@.         UNIVERSITY OF MARYLAND    AI
)@@G@@@B@@@@.         COLLEGE PARK, MARYLAND   20742  @[@@@@/.    @F@@@@.     AJ
)@@G@@    INTERNAL PACKET DEFINITIONS FOR USE BY EDIT$ ROUTINES   @[@@@@.     AK
)@@G@@@#@@@@          DEF     @G@@@@E$VER$$   EQU       '010176'          . UOAL
)@@G@@M VERSION (FIELDATA DATE)     @E@@@@A$EDIT$   EQU       1               AM
)@@G@@  . SIMULATE AEDIT$.    @D@@@@PX        EQU        1                . PAAN
)@@G@@CKET POINTER@E@@@@CX        EQU        2                . CHARACTER POINAO
)@@G@@TER   @D@@@@WX        EQU        3                . WORD POINTER  @]@@@@AP
)@@G@@          . @E@@@@PKT       EQUF      0,PX                PACKET LOCATIOAQ
)@@G@@N     @E@@@@CI        EQUF      0,CX                CHARACTER INDEX     AR
)@@G@@@D@@@@WI        EQUF      0,WX                WORD INDEX    @E@@@@QT    AS
)@@G@@    EQU       5                 . THIS IS Q4 OR T3    @]@@@@          . AT
)@@G@@@F@@@@EMSGC     EQUF      PKT,,S2             EMSG$ SIGNAL CHARACTER    AU
)@@G@@@D@@@@IL        EQUF      PKT,,S3             IMAGE LENGTH  @D@@@@ILOC  AV
)@@G@@    EQUF      PKT,,H2             IMAGE LOCATION@E@@@@SAV1W     EQU     AW
)@@G@@  PKT+1             . FULLWORD SAVE AREA  @F@@@@SAV1H1    EQUF      SAV1AX
)@@G@@W,,H1           SAVE AREA FOR RETURN POINT@F@@@@SAV1H2    EQUF      SAV1AY
)@@G@@W,,XH2        . ANCILLARY RETURN SAVE     @G@@@@FPS       EQUF      PKT+AZ
)@@G@@2,,S1           SCALE FOR FLOATING POINT EDIT   @G@@@@FPR       EQUF    BA
)@@G@@  PKT+2,,S2           FLOATING POINT ROUNDING OPTION  @H@@@@CIM       EQBB
)@@G@@UF      PKT+2,,S3           SAVE AREA FOR EMSG$ CHARACTER INDEX   @G@@@@BC
)@@G@@EASCII    EQUF      PKT+2,,H2         . SOMETHING ASCII:QWM,EASC,EASCIN BD
)@@G@@@F@@@@EASC      EQUF      PKT+2,,S4         . ASCII (QUARTERWORD) FLAG  BE
)@@G@@@E@@@@EASCIN    EQUF      PKT+2,,S5         . ASCII INPUT FLAG    @E@@@@BF
)@@G@@QWM       EQUF      PKT+2,,S6         . QUARTERWORD MODE    @G@@@@WIM   BG
)@@G@@    EQUF      PKT+3,,H1           SAVE AREA FOR EMSG$ WORD INDEX  @E@@@@BH
)@@G@@SAVE1     EQUF      PKT+3,,H2           SAVE AREA FOR PX    @E@@@@SAVE2 BI
)@@G@@    EQU       PKT+4               SAVE AREA FOR CX    @G@@@@ADRASC    EQBJ
)@@G@@UF      PKT+5,,H1         . NON-XLATING ASCII ENTRY POINT   @H@@@@SAVE3 BK
)@@G@@    EQUF      PKT+5,,H2           SAVE AREA FOR WX (RIGHT HALF ONLY)    BL
)@@G@@@H@@@@DPC       EQUF      PKT+6,,S1           CHARACTER FOR DOUBLE PRECIBM
)@@G@@SION SCALE  @H@@@@SPC       EQUF      PKT+6,,S2           CHARACTER FOR BN
)@@G@@SINGLE PRECISION SCALE  @D@@@@SIGN      EQUF      PKT+6,,S3           SIBO
)@@G@@GN INDICATOR@G@@@@NDP       EQUF      PKT+6,,S4         . DIGITS BEFORE BP
)@@G@@DECIMAL POINT     @G@@@@EMSGCA    EQUF      PKT+6,,QT         . EMSG$ ASBQ
)@@G@@CII SIGNAL CHARACTER    @G@@@@FZERO     EQUF      PKT+7,,S1           FLBR
)@@G@@OATING POINT ZERO INDICATOR   @E@@@@FCOL      EQUF      PKT+7,,S2       BS
)@@G@@    FINAL COLUMN OR ZERO@G@@@@NDF       EQUF      PKT+7,,S3           DIBT
)@@G@@GITS FOLLOWING DECIMAL POINT  @D@@@@SCALE     EQUF      PKT+7,,XH2      BU
)@@G@@    POWER OF TEN  @G@@@@VALUE     EQU       PKT+8             . DBLWRD SBV
)@@G@@AVE AREA FOR DIGITS     @I@@@@DPCA      EQUF      PKT+10,,Q1        . ASBW
)@@G@@CII CHARACTER FOR DOUBLE PRECISION SCA    @I@@@@SPCA      EQUF      PKT+BX
)@@G@@10,,Q2        . ASCII CHARACTER FOR SINGLE PRECISION SCA    @E@@@@ETBL  BY
)@@G@@    EQUF      PKT+10,,XH2       . CONVERSION TABLE    @G@@@@ADRASCX   EQBZ
)@@G@@U       PKT+11            . FD/ASCII XLATING ENTRY POINT    @G@@@@XAF   CA
)@@G@@    EQUF      ADRASCX,,S1       . EXTENDED ASCII-FD TRANSLATION   @F@@@@CB
)@@G@@SAV12W    EQUF      PKT+12            . ASCII ROUTINE SAVE AREA   @G@@@@CC
)@@G@@ADRXALF   EQU       PKT+13            . CASE-PRESRVNG XLATING E. P.     CD
)@@G@@@]@@@@          . @B@@@@E$DEF*    PROC      *0,0              .   @H@@@@CE
)@@G@@ DO 0=0=0 ,     $INFO     9 1,3             . OUR GUARENTEE: NO IBANK STCF
)@@G@@ORES  @D@@@@STORE*    EQUF      0,*CX             . STORE CHAR    @B@@@@CG
)@@G@@          END                         .   @[@@@@/.    @^@@@@.   THE UOM CH
)@@G@@EDIT$ PACKET@[@@@@.     @F@@@@.    THE SIX TO FOURTEEN WORD EDIT$ PACKETCI
)@@G@@ CONTAINS USER-DEFINED  @F@@@@.    PARAMETERS, AND INTERNAL FLAGS USED BCJ
)@@G@@Y THE EDIT$ ROUTINES.   @[@@@@.     @F@@@@.    EDIT$ USES THE FOLLOWING CK
)@@G@@PACKET. WORDS 6 THROUGH 9 ARE NEEDED@G@@@@.    BY THE FLOATING POINT ROUCL
)@@G@@TINES. WORDS 6 THROUGH 12 ARE REQUIRED    @E@@@@.    FOR ASCII CAPABILITCM
)@@G@@IES. EXTENDED ASCII DEMANDS WORD 13.@[@@@@.     @F@@@@.   ..............CN
)@@G@@............................................... @F@@@@. 0 :         : *ECO
)@@G@@MSGC  :   *IL   :            *ILOC            : @F@@@@.   ..............CP
)@@G@@............................................... @F@@@@. 1 :            SCQ
)@@G@@AV1H1           :           SAV1H2            : @F@@@@.   ..............CR
)@@G@@............................................... @F@@@@. 2 :  *FPS   :  *CS
)@@G@@FPR   :   CIM   :  *EASC  : *EASCIN :   QWM   : @F@@@@.   ..............CT
)@@G@@............................................... @F@@@@. 3 :             CU
)@@G@@WIM             :            SAVE1            : @F@@@@.   ..............CV
)@@G@@............................................... @F@@@@. 4 :             CW
)@@G@@              SAVE2                           : @F@@@@.   ..............CX
)@@G@@............................................... @F@@@@. 5 :            ACY
)@@G@@DRASC           :            SAVE3            : @F@@@@.   ..............CZ
)@@G@@............................................... @F@@@@. 6 :  *DPC   :  *DA
)@@G@@SPC   :  SIGN   :   NDP   :      *EMSGCA      : @F@@@@.   ..............DB
)@@G@@............................................... @F@@@@. 7 :  ZERO   :  FDC
)@@G@@COL   :   NDF   :            SCALE            : @F@@@@.   ..............DD
)@@G@@............................................... @F@@@@. 8 :             DE
)@@G@@                                              : @F@@@@.   .             DF
)@@G@@              VALUE                           . @F@@@@. 9 :             DG
)@@G@@                                              : @F@@@@.   ..............DH
)@@G@@............................................... @F@@@@. 10:    *DPCA    DI
)@@G@@ :    *SPCA     :            *ETBL            : @F@@@@.   ..............DJ
)@@G@@............................................... @F@@@@. 11:  *XAF   : NODK
)@@G@@T USED:    0    :           ADRASCX           : @F@@@@.   ..............DL
)@@G@@............................................... @F@@@@. 12:             DM
)@@G@@              SAV12W                          : @F@@@@.   ..............DN
)@@G@@............................................... @F@@@@. 13: NOT USED: NODO
)@@G@@T USED:    0    :           ADRXALF           : @F@@@@.   ..............DP
)@@G@@............................................... @[@@@@.     @F@@@@.    TDQ
)@@G@@HE STARRED PACKET FIELDS ARE SET BY THE USER; THE OTHERS ARE@ @@@@.    UDR
)@@G@@SED INTERNALLY BY EDIT$.@[@@@@.     @[@@@@/.    @G@@@@.   EXTERNAL DEFINDS
)@@G@@ITIONS  (FOR JOE USER). JOE SUPPLIES PACKET ADDRESS.  @[@@@@.     @F@@@@DT
)@@G@@P$        PROC      *1                . FIELD IS ADDR OF PACKET   @B@@@@DU
)@@G@@E$FIELDS* NAME                        .   @[@@@@.     @D@@@@PKT       EQDV
)@@G@@UF      P$(1,1),P$(1,2)   . DEFINE STUFF  @[@@@@.     @C@@@@QT        EQDW
)@@G@@U       05                . Q4 OR T3@F@@@@EMSGC*    EQUF      PKT,,12   DX
)@@G@@          EMSG$ SIGNAL CHARACTER    @D@@@@IL*       EQUF      PKT,,11   DY
)@@G@@          IMAGE LENGTH  @D@@@@ILOC*     EQUF      PKT,,01             IMDZ
)@@G@@AGE LOCATION@G@@@@FPS*      EQUF      PKT+2,,13           SCALE FOR FLOAEA
)@@G@@TING POINT EDIT   @G@@@@FPR*      EQUF      PKT+2,,12           FLOATINGEB
)@@G@@ POINT ROUNDING OPTION  @F@@@@EASC*     EQUF      PKT+2,,10         . ASEC
)@@G@@CII (QUARTERWORD) FLAG  @E@@@@EASCIN*   EQUF      PKT+2,,9          . ASED
)@@G@@CII INPUT FLAG    @H@@@@DPC*      EQUF      PKT+6,,13           CHARACTEEE
)@@G@@R FOR DOUBLE PRECISION SCALE  @H@@@@SPC*      EQUF      PKT+6,,12       EF
)@@G@@    CHARACTER FOR SINGLE PRECISION SCALE  @G@@@@EMSGCA*   EQUF      PKT+EG
)@@G@@6,,QT         . EMSG$ ASCII SIGNAL CHARACTER    @I@@@@DPCA*     EQUF    EH
)@@G@@  PKT+10,,07        . ASCII CHARACTER FOR DOUBLE PRECISION SC     @I@@@@EI
)@@G@@SPCA*     EQUF      PKT+10,,04        . ASCII CHARACTER FOR SINGLE PRECIEJ
)@@G@@SION SC     @E@@@@ETBL*     EQUF      PKT+10,,003       . CONVERSION TABEK
)@@G@@LE    @G@@@@XAF*      EQUF      PKT+11,,13        . EXTENDED ASCII-FD TREL
)@@G@@ANSLATION   @D@@@@          END                         . ALL FOR YOU   EM
)@@G@@@[@@@@.     @B@@@@.   ASCII XLATION DEFS. CALL AFTER E$DEF. @[@@@@.     EN
)@@G@@@B@@@@          DEF                         .   @D@@@@LAHEAD(WX) EQUF   EO
)@@G@@  PKT+13,,H1        . LOOKAHEAD     @C@@@@LAHEAD(CX) EQUF     PKT+7,,H2 EP
)@@G@@        . FOR XAF @E@@@@CHARPT    EQUF      VALUE,,H1         . CHARACTEEQ
)@@G@@R POINTER   @D@@@@CXRET     EQUF      VALUE,,H2         . CX RETURN     ER
)@@G@@@E@@@@FINRET    EQUF      VALUE+1,,H1       . FINAL X11 RETURN    @G@@@@ES
)@@G@@BLNKADR   EQUF      PKT+7,,H1         . ADDR OF LAST NON-BLANK CHAR     ET
)@@G@@@D@@@@IMGMD     EQUF      PKT+11,,S2        . IMAGE MODE    @E@@@@EFDFG EU
)@@G@@    EQUF      PKT+11,,S3        . EFD[1,2,3]$ FLAG    @B@@@@E$APROC*  PREV
)@@G@@OC      *0,0              .   @B@@@@          END                       EW
)@@G@@  .   @[@@@@/.    @F@@@@. ORIGINAL GENERALIZED ADDRESSING PROC, INCLUDEDEX
)@@G@@ FOR COMPLETENESS.@[@@@@.     @G@@@@.  +(E$AD S,T U) SCANS P$(S,T) FOR UEY
)@@G@@FIELD, P$(S,T+1) FOR EXPLICIT XREG, @G@@@@.         P$(S,T+2) FOR EXPLICEZ
)@@G@@IT J-DESIGNATOR. UFIELD MAY BE EQUFFED. IF@D@@@@.         NO J-DESIG FOUFA
)@@G@@ND, THEN DEFAULT U IS USED.   @F@@@@.  +(E$AD0 S,T U) PERFORMS AS ABOVE,FB
)@@G@@ BUT ONLY P$(S,T) IS SCANNED. @E@@@@.         THERE ARE NO EXPLICIT XREGFC
)@@G@@ OR J-DESIG FIELDS.     @[@@@@.     @F@@@@. DECODE A U-FIELD INTO ITS COFD
)@@G@@NSTITUENT ELEMENTS. THIS PROC USES  @G@@@@. SUBTRACTION TO AVOID SPURIOUFE
)@@G@@S R-FLAGS WHICH MIGHT OTHERWISE ARISE.    @F@@@@. IN ADDITION, IT DOES NFF
)@@G@@OT ALTER THE FORM OF THE ORIGINAL U-FIELD,@F@@@@. SINCE IT IS UNKNOWN WHFG
)@@G@@ETHER THE U FIELD ALREADY HAS FORM OR NOT.@[@@@@.     @E@@@@. I HAVE NO FH
)@@G@@SCRUPLES, SO MUCH OF THIS PROC WAS SNARFED FROM @^@@@@. PAT HAGERTY'S STFI
)@@G@@RUC$. @[@@@@.     @]@@@@        DEF @E@@@@G$JBIT(1) EQU 1*/29           FJ
)@@G@@        . J-DESIGNATOR BITS   @^@@@@G$JBIT(2) EQU 1*/28     @^@@@@G$JBITFK
)@@G@@(3) EQU 1*/27     @^@@@@G$JBIT(4) EQU 1*/26     @D@@@@G$XBIT(1) EQU 1*/2FL
)@@G@@1                   . XREG BITS     @^@@@@G$XBIT(2) EQU 1*/20     @^@@@@FM
)@@G@@G$XBIT(3) EQU 1*/19     @^@@@@G$XBIT(4) EQU 1*/18     @C@@@@G$HIBI(1) EQFN
)@@G@@U 1*/17                   . HBIT    @C@@@@G$HIBI(2) EQU 1*/16           FO
)@@G@@        . IBIT    @[@@@@.     @[@@@@.     @B@@@@Q         PROC      *2,0FP
)@@G@@              .   @G@@@@E$AD*     NAME      1                 . COMPUTE FQ
)@@G@@GENERALIZED ADDRESS     @F@@@@E$AD0*    NAME      0                 . PRFR
)@@G@@OCESS ONE FIELD ONLY    @F@@@@MF   EQU  Q(0,0)                      . TRFS
)@@G@@UE IF MANY-SUBFIELDS    @C@@@@S    EQU  Q(1,1)                      . FIFT
)@@G@@ELD   @C@@@@T    EQU  Q(1,2)                      . SUBFIELD@H@@@@HBIT EFU
)@@G@@QU P$(S,*T+1)*MF                . ON IF UFIELD,*XREG : ZERO IF E$AD0    FV
)@@G@@@H@@@@IBIT EQU P$(S,*T)*MF                  . ON IF *UFIELD      : ZERO FW
)@@G@@IF E$AD0    @G@@@@. NOTE THAT WE CAN'T PROCESS THE NEXT 4 LINES AS P$(S,FX
)@@G@@T+1)*(EXISTENCE=1)@G@@@@. BECAUSE OF PROPAGATION OF FORMS. E.G. A*0 => ZFY
)@@G@@ERO WITH FORM OF C.     @#@@@@. UGLY BUT TRUE.  @E@@@@ DO MF=0 ,XREG EQUFZ
)@@G@@  0                 . EXPLICIT XREG SET 0 @F@@@@ DO MF=0 ,EXPJ EQU  0   GA
)@@G@@              . EXPLICIT J-DESIG SET 0    @H@@@@ DO MF ,XREG EQU  P$(S,TGB
)@@G@@+1)           . IF NOT E$$A0 ,FETCH EXPLICIT XREG     @H@@@@ DO MF ,EXPJGC
)@@G@@ EQU  P$(S,T+2)           . IF NOT E$$A0 ,FETCH EXPLICIT J-DESIG  @C@@@@GD
)@@G@@. OBTAIN MANIPULATABLE UFIELD FROM ASM OR MASM. @D@@@@     ON   1-(+3>2>GE
)@@G@@1)                  . ON IF @ASM    @D@@@@IV(1) EQU +(P$(S,T))          GF
)@@G@@        . NO *'S, PLEASE@D@@@@     OFF                              . ENGG
)@@G@@D OF @ASM   @D@@@@     ON   +3>2>1                      . ON IF @MASM   GH
)@@G@@@F@@@@IV(1) EQU $AP(P$(S,T))                . ONLY THE NON-REL PART     GI
)@@G@@@D@@@@     OFF                              . END OF @MASM  @[@@@@.     GJ
)@@G@@@F@@@@JAY(1)  EQU     0                     . ASSUME NO EQUF'D J-SPEC   GK
)@@G@@@F@@@@ DO IV(1)>0377777777                  ; IF VALUE HAS EQUF'D J     GL
)@@G@@@D@@@@  ,K DO 4                             ; FOR ALL J-BITS@E@@@@    , GM
)@@G@@DO (IV(1)-JAY(1))>(G$JBIT(K)-1) ; IF CURRENT BIT ON   @E@@@@       ,JAY(GN
)@@G@@1) EQU JAY(1)++G$JBIT(K)  . FOLD INTO RESULT    @G@@@@IV(1)   EQU     IVGO
)@@G@@(1)-JAY(1)          . STRIP EQUF'D J FROM OPERAND     @E@@@@JAY(2)  EQU GP
)@@G@@    EXPJ++JAY(1)*/-26     . GET COMPLETE J-SPEC @F@@@@XRG(1)  EQU     0 GQ
)@@G@@                    . ASSUME NO EQUF'D X-SPEC   @F@@@@ DO IV(1)>0777777 GR
)@@G@@                    ; IF VALUE HAS EQUF'D X     @D@@@@  ,K DO 4         GS
)@@G@@                    ; FOR ALL X-BITS@E@@@@    , DO (IV(1)-XRG(1))>(G$XBIGT
)@@G@@T(K)-1) ; IF CURRENT BIT ON   @E@@@@       ,XRG(1) EQU XRG(1)++G$XBIT(K)GU
)@@G@@  . FOLD INTO RESULT    @G@@@@IV(1)   EQU     IV(1)-XRG(1)          . STGV
)@@G@@RIP EQUF'D X FROM OPERAND     @E@@@@XRG(2)  EQU     XREG++XRG(1)*/-18   GW
)@@G@@  . GET COMPLETE X-SPEC @G@@@@ DO MF=1 , DO (JAY(2)=0)**(P$(S)<(T+2)) ,JGX
)@@G@@AY(2) EQU Q(2,1) . SET DEFALT @G@@@@ DO MF=0 , DO JAY(2)=0              GY
)@@G@@    ,JAY(2) EQU Q(2,1) . SET DEFALT @F@@@@HIB(1)  EQU     0             GZ
)@@G@@        . ASSUME NO EQUF'D H/I BITS @F@@@@ DO  IV(1)>0177777            HA
)@@G@@        ; IF VALUE HAS EQUF'D H OR I@G@@@@  ,K DO 2                     HB
)@@G@@        ; FOR BOTH BITS (OF I$ FORM INSTR)@E@@@@    , DO (IV(1)-HIB(1))>HC
)@@G@@(G$HIBI(K)-1) ; IF CURRENT BIT ON   @E@@@@       ,HIB(1) EQU HIB(1)++G$HHD
)@@G@@IBI(K)  . FOLD INTO RESULT    @F@@@@UF EQU +(P$(S,T))-HIB(1)-XRG(1)-JAY(HE
)@@G@@1) . STRIP OFF J,X,HI BITS    @F@@@@HIB(1) EQU (HBIT*2)++IBIT++(HIB(1)*/HF
)@@G@@-16) . ALIGN H AND I BITS     @G@@@@ DO IV(1)<0 ,HIB(1) EQU 3           HG
)@@G@@  . IF UFIELD IS NEG, H,I ARE BOTH 1@[@@@@.     @F@@@@  I$  0,JAY(2),0,XHH
)@@G@@RG(2),HIB(1),UF . GENERATE THE EFFECTIVE UFIELD @D@@@@          END     HI
)@@G@@                    . END OF E$AD   @[@@@@/.    @#@@@@. BEGIN USER PROCSHJ
)@@G@@@[@@@@.     @B@@@@P$        PROC      *1                .   @C@@@@E$APRTHK
)@@G@@*   NAME      EAPRT$            . APRINT$ @E@@@@E$PRTG*   NAME      EPRTHL
)@@G@@G$            . PRINT$ OR APRINT$   @F@@@@E$PRTGA*  NAME      EPRTGA$   HM
)@@G@@        . ASCII OR FIELDATA PRINT$  @D@@@@E$PRTA*   NAME      EPRTA$    HN
)@@G@@        . ASCII PRINT$  @G@@@@E$PRT*    NAME      EPRT$             . PRHO
)@@G@@ODUCE LITERAL, PRINT, CLEAR   @C@@@@E$PRTI*   NAME      EPRTI$          HP
)@@G@@  . PRINT   @D@@@@E$APRTI*  NAME      EAPRTI$           . ASCII PRINT   HQ
)@@G@@@D@@@@E$CSF*    NAME      ECSF$             . CSF$ THINGIE  @H@@@@ DO P$HR
)@@G@@(1)>1 , LA    12,+(E$AD 1,2 15) . LA[,XU]  A0,P$(1,2),P$(1,3),P$(1,4)   HS
)@@G@@@E@@@@ DO P$(1)>0 , LA    13,+(E$AD0 1,1 15) . LA,U  A1,P$(1,1)   @B@@@@HT
)@@G@@          LMJ       11,P$(0,0)        .   @B@@@@          END           HU
)@@G@@              .   @[@@@@.     @[@@@@.     @B@@@@P$        PROC      *0,1HV
)@@G@@              .   @E@@@@E$DITX*   NAME      0                 . CLOSE EDHW
)@@G@@IT$ PACKET  @F@@@@E$COLN*   NAME      1                 . RETURN WITH COHX
)@@G@@L NUM IN A0 @F@@@@E$WRDN*   NAME      2                 . RETURN WITH WOHY
)@@G@@RD NUM IN A0@F@@@@E$MSGR*   NAME      3                 . REENTER MESSAGHZ
)@@G@@E EDITOR    @H@@@@E$CLEAR*  NAME      4                 . CLEAR OUTPUT BIA
)@@G@@UFFER, SET COL TO 0     @D@@@@J         EQU       P$(0,0)           . TAIB
)@@G@@RGET ADDRESS@B@@@@ DO J=0 , LMJ       11,EDITX$         .   @B@@@@ DO J=IC
)@@G@@1 , LMJ       11,ECOLN$         .   @B@@@@ DO J=2 , LMJ       11,EWRDN$ ID
)@@G@@        .   @B@@@@ DO J=3 , LMJ       11,EMSGR$         .   @B@@@@ DO J=IE
)@@G@@4 , LMJ       11,ECLEAR$        .   @B@@@@          END                 IF
)@@G@@        .   @[@@@@.     @[@@@@.     @B@@@@P$        PROC      *2        IG
)@@G@@        .   @E@@@@E$PAD*    NAME      0                 . PAD OUT CHARACIH
)@@G@@TERS  @H@@@@ DO P$(1)>0 , LA    12,+(E$AD 1,1 15) . LA[,XU]  A0,P$(1,1),II
)@@G@@P$(1,2),P$(1,3)   @H@@@@ DO P$(2)>0 , LA    13,+(E$AD 2,1 15) . LA[,XU] IJ
)@@G@@ A1,P$(2,1),P$(2,2),P$(2,3)   @B@@@@          LMJ       11,EPAD$        IK
)@@G@@  .   @B@@@@          END                         .   @[@@@@.     @[@@@@IL
)@@G@@.     @B@@@@P$        PROC      *1                .   @G@@@@E$DIT*    NAIM
)@@G@@ME      1                 . ENTER AND OPEN EDIT$ PACKET     @H@@@@E$DITRIN
)@@G@@*   NAME      2                 . REENTER EDIT$ PACKET AFTER E$DITX     IO
)@@G@@@E@@@@E$CHAR*   NAME      3                 . INSERT 1 CHARACTER  @F@@@@IP
)@@G@@E$COL*    NAME      4                 . MOVE TO SPECIFIED COL     @F@@@@IQ
)@@G@@E$SKIP*   NAME      5                 . SKIP SPECIFIED NUM OF COLS@E@@@@IR
)@@G@@E$MSG*    NAME      6                 . ENTER MESSAGE EDITOR@E@@@@E$MSKPIS
)@@G@@*   NAME      7                 . SKIP MSG FIELDS     @B@@@@ DO P$(1)>0 IT
)@@G@@, LA    12,+(E$AD 1,1 15) .   @D@@@@J         EQU       P$(0,0)         IU
)@@G@@  . TARGET ADDRESS@B@@@@ DO J=1 , LMJ       11,EDIT$          .   @B@@@@IV
)@@G@@ DO J=2 , LMJ       11,EDITR$         .   @B@@@@ DO J=3 , LMJ       11,EIW
)@@G@@CHAR$         .   @B@@@@ DO J=4 , LMJ       11,ECOL$          .   @B@@@@IX
)@@G@@ DO J=5 , LMJ       11,ESKIP$         .   @B@@@@ DO J=6 , LMJ       11,EIY
)@@G@@MSG$          .   @B@@@@ DO J=7 , LMJ       11,EMSKP$         .   @B@@@@IZ
)@@G@@          END                         .   @[@@@@.     @[@@@@.     @B@@@@JA
)@@G@@P$        PROC      *1                .   @D@@@@E$RASE*   NAME      0   JB
)@@G@@              . CLEAR BUFFER  @H@@@@ DO P$(1)>0 , LA    13,+(E$AD 1,1 15JC
)@@G@@) . LA[,XU]  A1,P$(1,1),P$(1,2),P$(1,3)   @B@@@@          LMJ       11,EJD
)@@G@@RASE$         .   @B@@@@          END                         .   @[@@@@JE
)@@G@@/.    @[@@@@.     @B@@@@P$        PROC      *1                .   @D@@@@JF
)@@G@@E$FD3*    NAME      0                 . INSERT 3 WORDS@H@@@@ DO P$(1)>0 JG
)@@G@@, LA  14,+(E$AD 1,1)+2    . LA       A2,P$(1,1)+2,P$(1,2),P$(1,3) @E@@@@JH
)@@G@@E$FD2*    NAME      1                 . INSERT TWO WORDS    @G@@@@ DO P$JI
)@@G@@(1)>0 , DL    12,+(E$AD 1,1)    . DL       A0,P$(1,1),P$(1,2)     @D@@@@JJ
)@@G@@J         EQU       P$(0,0)           . TARGET ADDRESS@B@@@@ DO J=0 , LMJK
)@@G@@J       11,EFD3$          .   @B@@@@ DO J=1 , LMJ       11,EFD2$        JL
)@@G@@  .   @B@@@@          END                         .   @[@@@@.     @[@@@@JM
)@@G@@.     @B@@@@P$        PROC      *2                .   @C@@@@E$PACKC*  NAJN
)@@G@@ME      0                 . PACK    @H@@@@ DO P$(1)>1 , LA    12,+(E$AD JO
)@@G@@1,2 15) . LA[,XU]  A0,P$(1,2),P$(1,3),P$(1,4)   @F@@@@ DO P$(0)>1 , LXI JP
)@@G@@  12,+(E$AD0 0,1 15) . LXI[,XU]  A0,P$(0,1)     @E@@@@ DO P$(1)>0 , LA  JQ
)@@G@@  13,+(E$AD0 1,1 15) . LA[,XU]  A1,P$(1,1)@H@@@@ DO P$(2)>0 , LA    14,+JR
)@@G@@(E$AD 2,1 15) . LA[,XU]  A2,P$(2,1),P$(2,2),P$(2,3)   @B@@@@          LMJS
)@@G@@J       11,EPACKC$        .   @B@@@@          END                       JT
)@@G@@  .   @[@@@@.     @[@@@@.     @B@@@@P$        PROC      *1              JU
)@@G@@  .   @D@@@@E$COPY*   NAME      1                 . STRING COPY   @F@@@@JV
)@@G@@E$PACK*   NAME      2                 . STRING COPY WITH PACKING  @H@@@@JW
)@@G@@ DO P$(1)>1 , LA    12,+(E$AD 1,2 15) . LA[,XU]  A0,P$(1,2),P$(1,3),P$(1JX
)@@G@@,4)   @F@@@@ DO P$(0)>1 , LXI   12,+(E$AD0 0,1 15) . LXI[,XU]  A0,P$(0,1JY
)@@G@@)     @E@@@@ DO P$(1)>0 , LA    13,+(E$AD0 1,1 15) . LA[,XU]  A1,P$(1,1)JZ
)@@G@@@D@@@@J         EQU       P$(0,0)           . TARGET ADDRESS@B@@@@ DO J=KA
)@@G@@1 , LMJ       11,ECOPY$         .   @B@@@@ DO J=2 , LMJ       11,EPACK$ KB
)@@G@@        .   @B@@@@          END                         .   @[@@@@.     KC
)@@G@@@[@@@@.     @B@@@@P$        PROC      *1,1              .   @D@@@@E$FW* KD
)@@G@@    NAME      0                 . EFORM$ WORD   @F@@@@I         DO      KE
)@@G@@  P$(1) ,P$(0,0) EQU (P$(0,0)*/P$(1,I))++1 .    @B@@@@          +       KF
)@@G@@  P$(0,0)           .   @B@@@@          END                         .   KG
)@@G@@@[@@@@.     @[@@@@.     @B@@@@P$        PROC      *1                .   KH
)@@G@@@D@@@@E$MSKPR*  NAME      0                 . SKIP AND COPY @H@@@@ DO P$KI
)@@G@@(1)>0 , LA    12,+(E$AD 1,1 15) . LA[,XU]  A0,P$(1,1),P$(1,2),P$(1,3)   KJ
)@@G@@@D@@@@          LMJ       11,EMSKP$         . SKIP MSG FIELD@C@@@@      KK
)@@G@@    LMJ       11,EMSGR$         . AND COPY@B@@@@          END           KL
)@@G@@              .   @[@@@@.     @[@@@@.     @B@@@@P$        PROC      *2  KM
)@@G@@              .   @G@@@@E$DECFL*  NAME      0                 . LEADING KN
)@@G@@CHARS - FIXED FORMAT    @H@@@@ DO P$(1)>1 , LA 12,+(E$AD 1,2)     . LA[,KO
)@@G@@XU]  A0,P$(1,1+I),P$(1,2+I),P$(1,3+I@E@@@@ DO P$(1)>0 , LA    13,+(E$AD0KP
)@@G@@ 1,1 15) . LA[,XU]  A1,P$(1,1)@H@@@@ DO P$(2)>0 , LA    14,+(E$AD 2,1 15KQ
)@@G@@) . LA[,XU]  A2,P$(2,1),P$(2,2),P$(2,3)   @B@@@@          LMJ       11,EKR
)@@G@@DECFL$        .   @B@@@@          END                         .   @[@@@@KS
)@@G@@.     @[@@@@.     @B@@@@P$        PROC      *1                .   @E@@@@KT
)@@G@@E$OCTF*   NAME      1                 . FIXED FORMAT OCTAL  @E@@@@E$DECFKU
)@@G@@*   NAME      2                 . FIXED FORMAT DECIMAL@F@@@@E$HEXF*   NAKV
)@@G@@ME      3                 . FIXED FORMAT HEXADECIMAL  @H@@@@E$DECFZ*  NAKW
)@@G@@ME      4                 . FIXED FORMAT DECIMAL-LEADING ZEROES   @H@@@@KX
)@@G@@E$DCFZ*   NAME      4                 . FIXED FORMAT DECIMAL-LEADING ZERKY
)@@G@@OES   @H@@@@ DO P$(1)>1 , LA    12,+(E$AD 1,2)    . LA[,XU]  A0,P$(1,2),KZ
)@@G@@P$(1,3),P$(1,4)   @E@@@@ DO P$(1)>0 , LA    13,+(E$AD0 1,1 15) . LA[,XU]LA
)@@G@@  A1,P$(1,1)@D@@@@J         EQU       P$(0,0)           . TARGET ADDRESSLB
)@@G@@@B@@@@ DO J=1 , LMJ       11,EOCTF$         .   @B@@@@ DO J=2 , LMJ     LC
)@@G@@  11,EDECF$         .   @B@@@@ DO J=3 , LMJ       11,EHEXF$         .   LD
)@@G@@@B@@@@ DO J=4 , LMJ       11,EDECFZ$        .   @B@@@@          END     LE
)@@G@@                    .   @[@@@@/.    @[@@@@.     @B@@@@P$        PROC    LF
)@@G@@  *1                .   @E@@@@E$DECV*   NAME      5                 . FRLG
)@@G@@EE FORMAT DECIMAL @E@@@@E$OCTV*   NAME      6                 . FREE FORLH
)@@G@@MAT OCTAL   @E@@@@E$HEXV*   NAME      7                 . FREE FORMAT HELI
)@@G@@X     @F@@@@E$FD1*    NAME      8                 . INSERT 6 CHARS (1 WOLJ
)@@G@@RD)   @H@@@@ DO P$(1)>0 , LA    12,+(E$AD 1,1)    . LA[,XU]  A0,P$(1,1),LK
)@@G@@P$(1,2),P$(1,3)   @D@@@@J         EQU       P$(0,0)           . TARGET ALL
)@@G@@DDRESS@B@@@@ DO J=5 , LMJ       11,EDECV$         .   @B@@@@ DO J=6 , LMLM
)@@G@@J       11,EOCTV$         .   @B@@@@ DO J=7 , LMJ       11,EHEXV$       LN
)@@G@@  .   @B@@@@ DO J=8 , LMJ       11,EFD1$          .   @B@@@@          ENLO
)@@G@@D                         .   @[@@@@.     @[@@@@.     @B@@@@P$        PRLP
)@@G@@OC      *2                .   @G@@@@E$FORMC*  NAME      EFORMC$         LQ
)@@G@@  . FORM EDITING - SPECIFY CHARACTER@H@@@@ DO P$(2)>0 , LA    14,+(E$AD LR
)@@G@@2,1 15) . LA[,XU]  A2,P$(2,1),P$(2,2),P$(2,3)   @F@@@@E$FORM*   NAME    LS
)@@G@@  EFORM$            . FORM EDITING - BLANKS USED@E@@@@ DO P$(1)>0 , LA  LT
)@@G@@  13,+(E$AD0 1,1)    . LA[,XU]  A1,P$(1,1)@H@@@@ DO P$(1)>1 , LA    12,+LU
)@@G@@(E$AD 1,2)    . LA[,XU]  A0,P$(1,2),P$(1,3),P$(1,4)   @B@@@@          LMLV
)@@G@@J       11,P$(0,0)        .   @B@@@@          END                       LW
)@@G@@  .   @[@@@@.     @[@@@@.     @^@@@@P$        PROC      *3  @D@@@@E$FDECLX
)@@G@@FL* NAME      0                 . LEADING CHARS @H@@@@ DO P$(3)>0 , LA  LY
)@@G@@  15,+(E$AD 3,1 15) . LA[,XU]  A3,P$(3,1),P$(3,2),P$(3,3)   @F@@@@E$FDECLZ
)@@G@@F*  NAME      1                 . FIXED FORMAT DECIMAL FORM @I@@@@E$FDECMA
)@@G@@FZ* NAME      2                 . FIXED FORMAT DECIMAL FORM-LEADING ZEROMB
)@@G@@ES    @E@@@@ DO P$(1)>0 , LA    13,+(E$AD0 1,1 15) . LA[,XU]  A1,P$(1,1)MC
)@@G@@@D@@@@P$(9)     EQU       1                 . SUBFIELD FLAG @F@@@@E$FDECMD
)@@G@@V*  NAME      3                 . FREE FORMAT DECIMAL FORM  @B@@@@I     ME
)@@G@@    EQU       P$(9)             .   @I@@@@ DO P$(1)>I , LA    12,+(E$AD MF
)@@G@@1,1+I)  . LA[,XU]  A0,P$(1,1+I),P$(1,2+I),P$(1,3+I    @H@@@@ DO P$(2)>1 MG
)@@G@@, LA    14,+(E$AD 2,2 15) . LA[,XU]  A2,P$(2,2),P$(2,3),P$(2,4)   @F@@@@MH
)@@G@@ DO P$(2)>0 , LXI   14,+(E$AD0 2,1 15) . LXI[,XU]  A2,P$(2,1)     @D@@@@MI
)@@G@@J         EQU       P$(0,0)           . TARGET ADDRESS@B@@@@ DO J=0 , LMMJ
)@@G@@J       11,EFDECFL$       .   @B@@@@ DO J=1 , LMJ       11,EFDECF$      MK
)@@G@@  .   @B@@@@ DO J=2 , LMJ       11,EFDECFZ$       .   @B@@@@ DO J=3 , LMML
)@@G@@J       11,EFDECV$        .   @B@@@@          END                       MM
)@@G@@  .   @[@@@@.     @[@@@@.     @^@@@@P$        PROC      *1  @H@@@@E$FLS1MN
)@@G@@*   NAME      EFLS1$            . SINGLE PRECISION SCIENTIFIC FORMAT    MO
)@@G@@@H@@@@E$FLG1*   NAME      EFLG1$            . SINGLE PRECISION GENERALIZMP
)@@G@@ED FORMAT   @H@@@@E$FLF1*   NAME      EFLF1$            . SINGLE PRECISIMQ
)@@G@@ON FIXED POINT FORMAT   @E@@@@P$(9)     EQU       1                 . INMR
)@@G@@STRUCTION FLAG    @H@@@@E$FLS2*   NAME      EFLS2$            . DOUBLE PMS
)@@G@@RECISION SCIENTIFIC FORMAT    @H@@@@E$FLG2*   NAME      EFLG2$          MT
)@@G@@  . DOUBLE PRECISION GENERALIZED FORMAT   @H@@@@E$FLF2*   NAME      EFLFMU
)@@G@@2$            . DOUBLE PRECISION FIXED POINT FORMAT   @G@@@@ DO P$(9)=0 MV
)@@G@@, DO P$(1)>1 , DL 13,+(E$AD 1,2) . DL    A1,P$(1,2),P$(1,3) @I@@@@ DO P$MW
)@@G@@(9)=1 , DO P$(1)>1 , LA 13,+(E$AD 1,2) . LA    A1,P$(1,2),P$(1,3),P$(1,4MX
)@@G@@)     @E@@@@ DO P$(1)>0 , LA    12,+(E$AD0 1,1 15) . LA[,XU]  A0,P$(1,1)MY
)@@G@@@B@@@@          LMJ       11,P$(0,0)        .   @#@@@@          END     MZ
)@@G@@@[@@@@.     @[@@@@.     @^@@@@P$        PROC      *1  @F@@@@E$TIME*   NANA
)@@G@@ME      ETIME$            . EDIT A TIME (HH:MM:SS)    @F@@@@E$DAY1*   NANB
)@@G@@ME      EDAY1$            . EDIT A DATE (MM/DD/YY)    @F@@@@E$DAY2*   NANC
)@@G@@ME      EDAY2$            . EDIT A DATE (DD MMM YY)   @G@@@@E$DAY3*   NAND
)@@G@@ME      EDAY3$            . EDIT A DATE (MONTH DD, YEAR)    @F@@@@E$DAY4NE
)@@G@@*   NAME      EDAY4$            . EDIT A DATE (YYYYMMDD)    @E@@@@E$DAY5NF
)@@G@@*   NAME      EDAY5$            . EDIT A DATE (YYMMDD)@H@@@@ DO P$(1)>0 NG
)@@G@@, LA    12,+(E$AD 1,1)    . LA[,XU]  A0,P$(1,1),P$(1,2),P$(1,3)   @B@@@@NH
)@@G@@          LMJ       11,P$(0,0)        .   @#@@@@          END     @[@@@@NI
)@@G@@.     @[@@@@.     @^@@@@P$        PROC      *0,2@G@@@@E$TD*     NAME    NJ
)@@G@@  ETIME$            . EDIT CURRENT TIME (HH:MM:SS)    @G@@@@E$DAT1*   NANK
)@@G@@ME      EDAY1$            . EDIT CURRENT DATE (MM/DD/YY)    @G@@@@E$DAT2NL
)@@G@@*   NAME      EDAY2$            . EDIT CURRENT DATE (DD MMM YY)   @H@@@@NM
)@@G@@E$DAT3*   NAME      EDAY3$            . EDIT CURRENT DATE (MONTH DD, YEANN
)@@G@@R)    @G@@@@E$DAT4*   NAME      EDAY4$            . EDIT CURRENT DATE (YNO
)@@G@@YYYMMDD)    @F@@@@E$DAT5*   NAME      EDAY5$            . EDIT CURRENT DNP
)@@G@@ATE (YYMMDD)@ @@@@          ER        TDATE$    @B@@@@          LMJ     NQ
)@@G@@  11,P$(0,0)        .   @#@@@@          END     @[@@@@/.    @ @@@@.   PANR
)@@G@@CKET GENERATING PROCS   @[@@@@.     @#@@@@P$        PROC    @E@@@@E$PKTXNS
)@@G@@A*  NAME      3                 . EXTENDED ASCII ALPHA@D@@@@E$PKTA*   NANT
)@@G@@ME      2                 . ASCII FLAG    @F@@@@E$PKT*    NAME      1   NU
)@@G@@              . GENERATE SMALL PACKET     @E@@@@E$PKTF*   NAME      0   NV
)@@G@@              . GENERATE BIG PACKET @^@@@@A('MSG')  EQU       '&' @^@@@@NW
)@@G@@A('FPS')  EQU       1   @^@@@@A('FPR')  EQU       1   @^@@@@A('DPC')  EQNX
)@@G@@U       0   @^@@@@A('SPC')  EQU       0   @^@@@@A('XAF')  EQU       0   NY
)@@G@@@B@@@@A('ASC')  EQU       0                 .   @E@@@@A('ASI')  EQU     NZ
)@@G@@  0                 . INPUT ASCII FLAG    @B@@@@A('MGA')  EQU       '&' OA
)@@G@@              .   @B@@@@A('DPA')  EQU       0                 .   @B@@@@OB
)@@G@@A('SPA')  EQU       0                 .   @B@@@@A('TBL')  EQU       1*/1OC
)@@G@@7             .   @C@@@@ DO P$>2 ,I DO P$-2 ,A(P$(I+1,1)) EQU P$(I+1,2) OD
)@@G@@@ @@@@Z         FORM      6,6,6,18  @ @@@@Z1        FORM      6,6,6,6,12OE
)@@G@@@B@@@@Z2        FORM      9,9,18            .   @C@@@@          Z       OF
)@@G@@  0,A('MSG'),P$(1,1),P$(1,2)  @^@@@@          +         0,0 @F@@@@      OG
)@@G@@    +         A('FPS'),A('FPR'),0,A('ASC'),A('ASI'),0 .     @^@@@@      OH
)@@G@@    +         0,0 @^@@@@          +         0   @E@@@@ DO P$(0,0)>1 , + OI
)@@G@@E$ASC$,0            . ASCII ENTRY POINT   @D@@@@ DO P$(0,0)<2 , + 0,0   OJ
)@@G@@              . FIELDATA ONLY @^@@@@ DO P$(0,0)=1 , END     @D@@@@      OK
)@@G@@    Z1        A('DPC'),A('SPC'),0,0,A('MGA')    @B@@@@          Z       OL
)@@G@@  0,0,0,0           .   @^@@@@          +         0   @^@@@@          + OM
)@@G@@        0   @ @@@@ DO P$(0,0)=0 , END          .@E@@@@ DO +(P$(0,0)>1)**ON
)@@G@@(A('TBL')=1*/17) ,A('TBL') EQU -E$DTBL$ . @D@@@@          Z2        A('DOO
)@@G@@PA'),A('SPA'),A('TBL') ..     @D@@@@          Z         A('XAF')*(P$(0,0OP
)@@G@@)=3),0,0,E$ASCII$.@B@@@@          +         0                 .   @^@@@@OQ
)@@G@@ DO P$(0,0)=2 , END .   @B@@@@          +         0,E$XALF$         .   OR
)@@G@@@B@@@@          END                         .   @[@@@@/.    @D@@@@.   ASOS
)@@G@@CII-FIELDATA CONVERSION TABLE GENERATING PROC   @[@@@@.     @B@@@@P$    OT
)@@G@@    PROC                        .   @D@@@@E$TBL*    NAME      0         OU
)@@G@@        . 64 WORD TABLE @D@@@@E$TBLX*   NAME      1                 . 12OV
)@@G@@8 WORD TABLE@[@@@@.     @^@@@@.   FIELDATA TO ASCII   @[@@@@.     @B@@@@OW
)@@G@@F('@')    EQU       0100              .   @B@@@@F('[')    EQU       0133OX
)@@G@@              .   @B@@@@F(']')    EQU       0135              .   @B@@@@OY
)@@G@@F('#')    EQU       0043              .   @B@@@@F('^')    EQU       0136OZ
)@@G@@              .   @B@@@@F(' ')    EQU       0040              .   @C@@@@PA
)@@G@@I DO 26 ,F(5+I)  EQU  0100+I          . LETTERS @B@@@@F(')')    EQU     PB
)@@G@@  0051              .   @B@@@@F('-')    EQU       0055              .   PC
)@@G@@@B@@@@F('+')    EQU       0053              .   @C@@@@I DO 3 ,F(042+I)  PD
)@@G@@EQU  073+I          . <=>     @B@@@@F('&')    EQU       0046            PE
)@@G@@  .   @B@@@@F('$')    EQU       0044              .   @B@@@@F('*')    EQPF
)@@G@@U       0052              .   @B@@@@F('(')    EQU       0050            PG
)@@G@@  .   @B@@@@F('%')    EQU       0045              .   @B@@@@F(':')    EQPH
)@@G@@U       0072              .   @B@@@@F('?')    EQU       0077            PI
)@@G@@  .   @B@@@@F('!')    EQU       0041              .   @B@@@@F(',')    EQPJ
)@@G@@U       0054              .   @B@@@@F('\')    EQU       0134            PK
)@@G@@  .   @C@@@@I DO 10 ,F(057+I) EQU 057+I           . DIGITS  @B@@@@F(072)PL
)@@G@@    EQU       0047              .   @B@@@@F(';')    EQU       0073      PM
)@@G@@        .   @B@@@@F('/')    EQU       0057              .   @B@@@@F('.')PN
)@@G@@    EQU       0056              .   @B@@@@F('"')    EQU       0042      PO
)@@G@@        .   @B@@@@F(077)    EQU       0137              .   @B@@@@ DO P$PP
)@@G@@(0,0) ,I DO 64 ,F(I+63) EQU 0   .   @[@@@@/.    @^@@@@.   ASCII TO FIELDPQ
)@@G@@ATA   @[@@@@.     @D@@@@I DO 040 ,A(I-1)  EQU  '?'            . CHARACTEPR
)@@G@@RS    @[@@@@.     @B@@@@A(040)    EQU       ' '               .   @B@@@@PS
)@@G@@A(041)    EQU       '!'               .   @B@@@@A(042)    EQU       '"' PT
)@@G@@              .   @B@@@@A(043)    EQU       '#'               .   @B@@@@PU
)@@G@@A(044)    EQU       '$'               .   @B@@@@A(045)    EQU       '%' PV
)@@G@@              .   @B@@@@A(046)    EQU       '&'               .   @B@@@@PW
)@@G@@A(047)    EQU       ''''              .   @B@@@@A(050)    EQU       '(' PX
)@@G@@              .   @B@@@@A(051)    EQU       ')'               .   @B@@@@PY
)@@G@@A(052)    EQU       '*'               .   @B@@@@A(053)    EQU       '+' PZ
)@@G@@              .   @B@@@@A(054)    EQU       ','               .   @B@@@@QA
)@@G@@A(055)    EQU       '-'               .   @B@@@@A(056)    EQU       '.' QB
)@@G@@              .   @B@@@@A(057)    EQU       '/'               .   @C@@@@QC
)@@G@@I DO 10 ,A(057+I) EQU 057+I           . DIGITS  @B@@@@A(072)    EQU     QD
)@@G@@  ':'               .   @B@@@@A(073)    EQU       ';'               .   QE
)@@G@@@B@@@@A(074)    EQU       '<'               .   @B@@@@A(075)    EQU     QF
)@@G@@  '='               .   @B@@@@A(076)    EQU       '>'               .   QG
)@@G@@@B@@@@A(077)    EQU       '?'               .   @B@@@@A(0100)   EQU     QH
)@@G@@  '@'               .   @C@@@@I DO 26 ,A(0100+I) EQU 5+I            . LEQI
)@@G@@TTERS @B@@@@A(0133)   EQU       '['               .   @B@@@@A(0134)   EQQJ
)@@G@@U       '\'               .   @B@@@@A(0135)   EQU       ']'             QK
)@@G@@  .   @B@@@@A(0136)   EQU       '^'               .   @B@@@@A(0137)   EQQL
)@@G@@U       077               .   @D@@@@I DO 040 ,A(0137+I) EQU A(077+I)    QM
)@@G@@  . FOLD OVER     @[@@@@.     @B@@@@.   PROC TO INSERT NEW CONVERSION VAQN
)@@G@@LUES  @[@@@@.     @B@@@@Q$        PROC      *1,0              .   @B@@@@QO
)@@G@@GETIT*    NAME                        .   @G@@@@ DO        Q$(1,1)='FD' QP
)@@G@@@@@@G>@A#@G<@A[@GZ@ "@@@@ .@GQ@ ;@GO@ 8@GK@ 4@GJ@ 2@GF@ !@GE@ %@G@@ >@@@QQ
)@@G@@@@@@F/@@@@F;@ <@F7@ W@F6@@@@F0@ T@@@@ R@F*@ N@@@@@@@F+@ J@F)@ H@FZ@ F@FYQR
)@@G@@@ C@FS@ ]@FR@ [@FM@ @@@@@^/@FJ@^9@@@@^7@FB@^4@FA@^2@E"@^,@E6@@@@E1@^(@E0QS
)@@G@@@@@@E\@^&@@@@@@@E?@^=@E:@^+@E&@^Y@@@@^X@E-@^S@EZ@^R@@@@^P@@@@^O@ES@^J@ERQT
)@@G@@@@@@EP@^F@EN@^E@EJ@^B@EH@@@@ED@^[@EC@#"@E^@#7@@@@#5@E@@#\@D_@#,@D'@#:@@@QU
)@@G@@@#(@D4@#<@D2@#)@D\@#V@D,@@@@D=@#M@@@@@@@DW@#G@DU@#F@DO@#A@DM@#^@DJ@#[@@@QV
)@@G@@@@@@DB@].@DA@@@@D@@]6@@@@]5@C'@]1@C9@],@C5@](@@@@]*@C?@]>@C:@]=@C>@]Z@@@QW
)@@G@@@@@@C-@]R@CY@@@@CX@]Q@CU@]P@CP@]L@CO@]K@CJ@]F@CI@]D@CF@]@@CE@[_@C @[7@C]QX
)@@G@@@[4@C[@[0@B"@[\@B'@[&@@@@@@@B5@[Y@@@@[X@B1@[U@@@@[S@B,@[N@@@@[M@B(@[F@B*QY
)@@G@@@[E@B<@[^@B-@@@@BW@@"@BV@@@@BS@@'@@@@@@@BO@@5@BN@@4@BG@@0@BB@@@@B#@@(@B]QZ
)@@G@@@@@@A_@@&@A"@@@@A;@@)@A9@@Y@A6@@W@A3@@U@A1@@S@A\@@Q@A%@@J@A*@@I@A=@@F@A+RA
)@@G@@@@D@AZ@@B@AY@@A@AU@@#@@@@@@@AO@@]@AN@@[@AD@@^@G&C$SIIOB     @@V@@@@@@@@@RB
)@@G@@ABSW$       @@W@@@@@@@@@SWTCH$      @@W@@^@@@@@@RSGAW$      @@W@@ @@@@@@RC
)@@G@@C$BK2       @@V@@@@@@@@@DRU$DB7     @@V@@@@@@@@@PI$NIT      @@W@@C@@@@@@RD
)@@G@@PLS$U       @@V@@@@@@@@@MSG$BK      @@V@@E@@@@@@SDFOEOF$    @@P@@@@@@@@@RE
)@@G@@MASTERPKT   @@1@@G@@@@@@SUVAL$      @@W@@H@@@@@@NRT$        @@W@@@@@@@@@RF
)@@G@@APRTCA$     @@W@@@@@@@@@DUMPTREEPCF @@2@@K@@@@@@IOI$        @@W@@L@@@@@@RG
)@@G@@FACIL$      @@W@@M@@@@@@BBEOF$      @@W@@N@@@@@@PLS$4       @@V@@O@@@@@@RH
)@@G@@EDECFL$     @@U@@P@@@@@@ERASE$      @@Q@@@@@@@@@SPECPOPT    @@1@@R@@@@@@RI
)@@G@@MONSTER     @@1@@@@@@@@@PFS$        @@W@@T@@@@@@BDI8$       @@V@@@@@@@@@RJ
)@@G@@OPN$BK      @@V@@V@@@@@@BFOR$I      @@V@@@@@@@@@DNLOD$      @@W@@X@@@@@@RK
)@@G@@ADED$       @@W@@@@@@@@@HVTS$CB     @@V@@Z@@@@@@C$STRING    @@V@@@@@@@@@RL
)@@G@@XCTS$       @@W@@-@@@@@@IOWI$       @@W@@+@@@@@@NWBCB$      @@V@@<@@@@@@RM
)@@G@@HPLAR$      @@V@@=@@@@@@FTN$CHKU    @@V@@>@@@@@@C$INITIAL   @@V@@@@@@@@@RN
)@@G@@PGOPN$      @@'@@$@@@@@@APU$        @@W@@*@@@@@@DMR$        @@V@@@@@@@@@RO
)@@G@@OPENSDFO    @@"@@%@@@@@@USER$       @@W@@:@@@@@@RSTRA$      @@W@@?@@@@@@RP
)@@G@@RSGTW$      @@W@@!@@@@@@II$         @@W@@,@@@@@@C2I$        @@V@@\@@@@@@RQ
)@@G@@ECOLN$      @@L@@@@@@@@@OUTEOF      @@;@@1@@@@@@REWI$       @@W@@2@@@@@@RR
)@@G@@AWAIT$      @@W@@3@@@@@@PIRCB$      @@V@@@@@@@@@BLD$BK      @@V@@@@@@@@@RS
)@@G@@RPCTA$      @@W@@6@@@@@@ERROR$$     @@W@@7@@@@@@CREL$       @@W@@8@@@@@@RT
)@@G@@STAT$       @@V@@9@@@@@@AEOCTV$     @@U@@@@@@@@@NAME$       @@W@@;@@@@@@RU
)@@G@@IOXI$       @@W@@/@@@@@@DREG$       @@W@@.@@@@@@EWRDN$      @@Q@@@@@@@@@RV
)@@G@@UNTR$       @@W@@_@@@@@@PRTCA$      @@W@[@@@@@@@ACT$        @@W@[[@@@@@@RW
)@@G@@MASM$       @@V@[]@@@@@@FURPR$      @@V@[#@@@@@@SDFO$       @@P@@@@@@@@@RX
)@@G@@PRTCN$      @@W@[ @@@@@@LCORE$      @@W@[A@@@@@@IODYA$      @@W@[B@@@@@@RY
)@@G@@IALL$$      @@W@[C@@@@@@DM$WT       @@W@[D@@@@@@CSF$        @@W@@@@@@@@@RZ
)@@G@@CR$PHS      @@W@@@@@@@@@BUILDNODE   @@2@[G@@@@@@PEEK        @@1@[H@@@@@@SA
)@@G@@TSQCL$      @@W@[I@@@@@@SCR$        @@W@[J@@@@@@FBLKSX$     @@W@[K@@@@@@SB
)@@G@@C$SYMBIONT  @@V@[L@@@@@@SDFOC$      @@P@@@@@@@@@FIDIAG      @@1@@@@@@@@@SC
)@@G@@FSF$        @@W@[O@@@@@@DADD$       @@W@[P@@@@@@FTN$3       @@V@[Q@@@@@@SD
)@@G@@FTN$XR      @@V@[R@@@@@@DBP$DB15    @@V@@@@@@@@@DM$SOS      @@W@[T@@@@@@SE
)@@G@@USR$BK      @@V@@@@@@@@@SEARCH      @@.@[V@@@@@@INT$        @@W@[W@@@@@@SF
)@@G@@HVTS$LIS    @@V@@@@@@@@@BT$ENA      @@W@@@@@@@@@W$          @@W@[Z@@@@@@SG
)@@G@@RSGTA$      @@W@[)@@@@@@PCHCA$      @@W@[-@@@@@@AC$NIT      @@W@[+@@@@@@SH
)@@G@@DBP$DB45    @@V@[<@@@@@@APL$T       @@V@[=@@@@@@AEDECV$     @@U@[>@@@@@@SI
)@@G@@ECSF$       @@O@@@@@@@@@ASGET       @@6@[$@@@@@@TDATE$      @@W@[*@@@@@@SJ
)@@G@@SRD$        @@W@[(@@@@@@PCHCN$      @@W@[%@@@@@@S$R1        @@V@[:@@@@@@SK
)@@G@@HVTS$FTNB1  @@V@[?@@@@@@FMS8BDI$    @@V@[!@@@@@@DBP$IB3     @@V@[,@@@@@@SL
)@@G@@AEOCTF$     @@U@@@@@@@@@TELNET$     @@V@@@@@@@@@COM$        @@W@[1@@@@@@SM
)@@G@@CMSA$       @@W@[2@@@@@@EFD3$       @@R@[3@@@@@@AECOL$      @@L@@@@@@@@@SN
)@@G@@FTN$XI      @@V@[5@@@@@@CMP$BK      @@V@[6@@@@@@APL$XQ      @@V@@@@@@@@@SO
)@@G@@INSERT      @@.@[8@@@@@@SABORT$     @@W@[9@@@@@@RSGPR$      @@W@['@@@@@@SP
)@@G@@MCT$        @@W@[;@@@@@@CRTN$       @@W@[/@@@@@@QEDIT$      @@V@[.@@@@@@SQ
)@@G@@HVTS$FTNHELP@@V@["@@@@@@DBP$DB24    @@V@@@@@@@@@BFTN$I      @@V@@@@@@@@@SR
)@@G@@SWAIT$      @@W@][@@@@@@SREG$       @@W@]]@@@@@@REL$        @@W@]#@@@@@@SS
)@@G@@IOLNK$      @@W@]^@@@@@@DBB$        @@W@] @@@@@@UMEDI$      @@V@]A@@@@@@ST
)@@G@@PL1$3       @@V@]B@@@@@@DMR2$       @@V@]C@@@@@@RINF$       @@T@@@@@@@@@SU
)@@G@@FIFREE$     @@/@]E@@@@@@E$DEC2$     @@U@@@@@@@@@PCT$        @@W@]G@@@@@@SV
)@@G@@CO$MIT      @@W@]H@@@@@@DBP$DB54    @@V@]I@@@@@@C$CONV      @@V@]J@@@@@@SW
)@@G@@ELT$        @@T@@@@@@@@@E$DEC0$     @@U@@@@@@@@@SCAN        @@;@]M@@@@@@SX
)@@G@@PUNCH$      @@W@]N@@@@@@RPG$1       @@V@]O@@@@@@BDI1$       @@V@@@@@@@@@SY
)@@G@@ERRMSGBDI$  @@V@@@@@@@@@BDSPT$      @@W@@@@@@@@@FIASG$      @@/@]S@@@@@@SZ
)@@G@@BUFFCHECK   @@;@]T@@@@@@FACIT$      @@W@]U@@@@@@DBITS$      @@W@]V@@@@@@TA
)@@G@@QPRBK$      @@V@]W@@@@@@DBP$DB33    @@V@]X@@@@@@AEDECF$     @@U@]Y@@@@@@TB
)@@G@@EDAY2$      @@S@@@@@@@@@RSWAP$      @@W@])@@@@@@CALL$       @@W@]-@@@@@@TC
)@@G@@RALPH$      @@V@]+@@@@@@MINT$       @@V@]<@@@@@@HVTS$FSCN   @@V@@@@@@@@@TD
)@@G@@PRT$BK      @@V@@@@@@@@@SNAP$       @@W@]&@@@@@@ACLIST$     @@W@]$@@@@@@TE
)@@G@@ED$         @@V@@@@@@@@@APNCHA$     @@W@@@@@@@@@DCYC$       @@W@]%@@@@@@TF
)@@G@@HVTS$BSCN   @@V@]:@@@@@@DBP$DB12    @@V@]?@@@@@@C2M$        @@V@]!@@@@@@TG
)@@G@@C$DML       @@V@@@@@@@@@FIFRIM$     @@/@]\@@@@@@PFSPKT2     @@1@]0@@@@@@TH
)@@G@@SRT$BK      @@V@@@@@@@@@E$TABLE     @@6@]2@@@@@@DBACK$      @@W@]3@@@@@@TI
)@@G@@CMD$        @@W@]4@@@@@@CA$REL      @@W@@@@@@@@@MCH$BK      @@V@@@@@@@@@TJ
)@@G@@IALL$       @@W@]7@@@@@@DGET$       @@W@]8@@@@@@WHURP$BDI   @@V@]9@@@@@@TK
)@@G@@DMR6$       @@V@]'@@@@@@DIAG$       @@V@];@@@@@@DBP$DB42    @@V@]/@@@@@@TL
)@@G@@EPRTA$      @@O@@@@@@@@@SYMB$       @@W@]"@@@@@@C$IBM       @@V@]_@@@@@@TM
)@@G@@C$CFH       @@V@#@@@@@@@EOCTF$      @@U@@@@@@@@@SMU$        @@W@#]@@@@@@TN
)@@G@@C$BK1       @@V@##@@@@@@BDI5$       @@V@@@@@@@@@CREATETCF   @@3@# @@@@@@TO
)@@G@@PB$DIS      @@W@@@@@@@@@PCFERROR    @@5@#B@@@@@@DGETP$      @@W@#C@@@@@@TP
)@@G@@APCHCN$     @@W@#D@@@@@@HVTS$HELP   @@V@#E@@@@@@DBP$DB21    @@V@@@@@@@@@TQ
)@@G@@RT$PSS      @@W@@@@@@@@@TSQRG$      @@W@#H@@@@@@PTTRAP$     @@W@#I@@@@@@TR
)@@G@@PRINT$      @@W@#J@@@@@@PFTEXT$     @@W@#K@@@@@@EQUIP$      @@W@#L@@@@@@TS
)@@G@@E$PTRL$     @@R@@@@@@@@@SDEL$       @@W@#N@@@@@@FCREG$      @@W@#O@@@@@@TT
)@@G@@DMBTS$      @@W@#P@@@@@@CTSA$       @@W@#Q@@@@@@AREAD$      @@W@#R@@@@@@TU
)@@G@@TASKS$      @@V@#S@@@@@@PLS$3       @@V@#T@@@@@@DBP$DB51    @@V@#U@@@@@@TV
)@@G@@C$MCS       @@V@@@@@@@@@WML$        @@W@#W@@@@@@SUMOD$      @@W@#X@@@@@@TW
)@@G@@RSDEM$      @@W@#Y@@@@@@CW$         @@W@#Z@@@@@@PRMG$3      @@V@@@@@@@@@TX
)@@G@@OUTBLOCK    @@;@#-@@@@@@PRMG$2      @@V@#+@@@@@@APL$SY      @@V@@@@@@@@@TY
)@@G@@AEDITX$     @@X@#=@@@@@@DREAD$      @@W@#>@@@@@@CSF$$       @@W@#&@@@@@@TZ
)@@G@@CR$LGR      @@W@#$@@@@@@APL$B       @@V@#*@@@@@@AEMSGR$     @@R@@@@@@@@@UA
)@@G@@RL$BAK      @@W@#%@@@@@@E$DECM$     @@U@@@@@@@@@TRTIM$      @@W@#?@@@@@@UB
)@@G@@RSI$        @@W@#!@@@@@@PRIV$       @@W@@@@@@@@@RT$PSI      @@W@@@@@@@@@UC
)@@G@@NRA         @@1@#0@@@@@@UT$UPR      @@W@#1@@@@@@STAB$       @@W@#2@@@@@@UD
)@@G@@RSGTI$      @@W@#3@@@@@@NIOCB$      @@V@#4@@@@@@CTS$MDS     @@V@@@@@@@@@UE
)@@G@@APCHCA$     @@W@#6@@@@@@SCANNER$    @@V@@@@@@@@@FDGET       @@6@#8@@@@@@UF
)@@G@@SITID$      @@W@#9@@@@@@PFUWL$      @@W@#'@@@@@@CKRS$       @@W@#;@@@@@@UG
)@@G@@HVTS$FRUN   @@V@#/@@@@@@INFOR$      @@T@#.@@@@@@AEDITR$     @@N@@@@@@@@@UH
)@@G@@CR$ELG      @@W@#_@@@@@@HVTS$SAV    @@V@^@@@@@@@EAPRTI$     @@O@@@@@@@@@UI
)@@G@@AUXBUF      @@3@^]@@@@@@RT$PSD      @@W@^#@@@@@@RSTRM$      @@W@^^@@@@@@UJ
)@@G@@MB$         @@W@^ @@@@@@DRU$DB3     @@V@^A@@@@@@BDI9$       @@V@@@@@@@@@UK
)@@G@@UMEDD$      @@V@^C@@@@@@MDP$        @@V@^D@@@@@@HVTS$BRUN   @@V@@@@@@@@@UL
)@@G@@HVTS$EXP    @@V@@@@@@@@@UT$DEL      @@W@^G@@@@@@PSA$        @@W@^H@@@@@@UM
)@@G@@HVTS$LOC    @@V@^I@@@@@@DRU$DB6     @@V@@@@@@@@@NRB         @@1@^K@@@@@@UN
)@@G@@FINISH      @@1@^L@@@@@@UTILITY$    @@V@^M@@@@@@ETIME$      @@S@^N@@@@@@UO
)@@G@@E$ASC$      @@N@@@@@@@@@CYCLIM$     @@W@@@@@@@@@CONTIN      @@1@^Q@@@@@@UP
)@@G@@TFORK$      @@W@@@@@@@@@WORDOUT     @@;@@@@@@@@@CHAR        @@1@^T@@@@@@UQ
)@@G@@PUALT$      @@W@^U@@@@@@DACT$       @@W@^V@@@@@@CR$VAL      @@W@^W@@@@@@UR
)@@G@@CKFUL$      @@V@@@@@@@@@DMRMB2$     @@V@@@@@@@@@RSPUT$      @@W@^Z@@@@@@US
)@@G@@CEND$       @@W@^)@@@@@@FTN$2       @@V@^-@@@@@@SDFOO$      @@P@@@@@@@@@UT
)@@G@@UT$UPA      @@W@^<@@@@@@DRU$DB8     @@V@@@@@@@@@EDTPKT      @@1@^>@@@@@@UU
)@@G@@TPFLG$      @@W@@@@@@@@@EDITR$      @@X@^$@@@@@@CMH$        @@W@^*@@@@@@UV
)@@G@@CTS$ALT     @@V@@@@@@@@@OVERFLOW    @@.@^%@@@@@@AECHAR$     @@X@^:@@@@@@UW
)@@G@@XRS$        @@W@^?@@@@@@TPLOG$      @@W@^!@@@@@@COND$       @@W@@@@@@@@@UX
)@@G@@RSTRD$      @@W@^\@@@@@@MSSUM$      @@W@^0@@@@@@CLIST$      @@W@^1@@@@@@UY
)@@G@@HVTS$FCOM   @@V@@@@@@@@@PL1$2C      @@V@^3@@@@@@HVTS$STA    @@V@@@@@@@@@UZ
)@@G@@BSRD$       @@W@^5@@@@@@PL1$2B      @@V@^6@@@@@@EPRTI$      @@O@@@@@@@@@VA
)@@G@@PL1$2A      @@V@^8@@@@@@C$FORM      @@V@@@@@@@@@FORK$       @@W@^'@@@@@@VB
)@@G@@BRD$        @@W@^;@@@@@@HVTS$BCOM   @@V@@@@@@@@@DM$EOS      @@W@^.@@@@@@VC
)@@G@@HVTS$II     @@V@^"@@@@@@ACOB$6      @@V@^_@@@@@@EPACKC$     @@R@@@@@@@@@VD
)@@G@@CMI$        @@W@@@@@@@@@ACOB$4      @@V@@@@@@@@@PRNTA$      @@W@ #@@@@@@VE
)@@G@@T$SCRN      @@V@ ^@@@@@@S$R2        @@V@  @@@@@@ISICB$      @@V@ A@@@@@@VF
)@@G@@HVTS$FTNB2  @@V@ B@@@@@@ACOB$3      @@V@@@@@@@@@EDITCORR    @@;@ D@@@@@@VG
)@@G@@CS$PHS      @@W@ E@@@@@@ACOB$2      @@V@@@@@@@@@ACTCDB$     @@V@ G@@@@@@VH
)@@G@@ACOB$1      @@V@@@@@@@@@HVTS$MAS    @@V@ I@@@@@@HVTS$APL    @@V@@@@@@@@@VI
)@@G@@SFLIT$      @@V@ K@@@@@@CMATH$      @@V@ L@@@@@@EDAY1$      @@S@ M@@@@@@VJ
)@@G@@EMSG$       @@R@@@@@@@@@READA$      @@W@ O@@@@@@IMI$        @@W@ P@@@@@@VK
)@@G@@DMR3$       @@V@ Q@@@@@@C2S$        @@V@@@@@@@@@OUTSTAT     @@;@ S@@@@@@VL
)@@G@@UK$ONS      @@W@@@@@@@@@RT$         @@W@ U@@@@@@DUNLD$      @@W@ V@@@@@@VM
)@@G@@ACCNT$      @@W@@@@@@@@@LA          @@1@ X@@@@@@DEMAND      @@1@ Y@@@@@@VN
)@@G@@R$          @@W@ Z@@@@@@MS$         @@W@ )@@@@@@MCORE$      @@W@ -@@@@@@VO
)@@G@@S$ML        @@V@ +@@@@@@BDI2$       @@V@@@@@@@@@DM$IOW      @@W@ =@@@@@@VP
)@@G@@DST$BK      @@V@@@@@@@@@MATCH       @@9@ &@@@@@@DLINK$      @@W@ $@@@@@@VQ
)@@G@@DBP$DB25    @@V@ *@@@@@@ACOB$5L     @@V@ (@@@@@@EDECF$      @@U@@@@@@@@@VR
)@@G@@STARTCOL    @@;@ :@@@@@@TUT$BK      @@V@ ?@@@@@@EPRTGA$     @@O@@@@@@@@@VS
)@@G@@SETBP$      @@W@ ,@@@@@@RSGPU$      @@W@ \@@@@@@E$RROR$     @@V@ 0@@@@@@VT
)@@G@@DBP$IB1     @@V@ 1@@@@@@ASETCB$     @@V@@@@@@@@@SCHBNK$     @@V@ 3@@@@@@VU
)@@G@@C$SISAM     @@V@@@@@@@@@RECMODE     @@;@ 5@@@@@@ASCII$      @@W@ 6@@@@@@VV
)@@G@@UMEDL$      @@V@ 7@@@@@@DBP$DB55    @@V@@@@@@@@@COMPKTUPDATE@@;@ 9@@@@@@VW
)@@G@@CR$LOG      @@W@ '@@@@@@LOG$BK      @@V@@@@@@@@@SUP$        @@W@ /@@@@@@VX
)@@G@@DBP$IB4     @@V@@@@@@@@@ISDFIO      @@8@@@@@@@@@SQUEEZ      @@1@ _@@@@@@VY
)@@G@@E$CHAR$     @@X@A@@@@@@@RSPAR$      @@V@@@@@@@@@UT$EAQ      @@W@A]@@@@@@VZ
)@@G@@CA$ASG      @@W@@@@@@@@@PGRD$       @@'@A^@@@@@@WANY$       @@W@A @@@@@@WA
)@@G@@CQUE$       @@W@AA@@@@@@RMATH$      @@V@AB@@@@@@PLS$2       @@V@AC@@@@@@WB
)@@G@@DBP$DB34    @@V@@@@@@@@@WORDT       @@;@AE@@@@@@TWAIT$      @@W@AF@@@@@@WC
)@@G@@SYSBAL$     @@W@AG@@@@@@PSF$        @@W@AH@@@@@@PFWL$       @@W@AI@@@@@@WD
)@@G@@PFD$        @@W@AJ@@@@@@APRINT$     @@W@AK@@@@@@SINF$       @@T@AL@@@@@@WE
)@@G@@EDAY5$      @@S@AM@@@@@@ESKIP$      @@L@@@@@@@@@STATUS$     @@W@@@@@@@@@WF
)@@G@@DUMP        @@.@AP@@@@@@TINTL$      @@W@AQ@@@@@@ROUTE$      @@W@AR@@@@@@WG
)@@G@@PLUM$BANK6  @@V@AS@@@@@@BDI6$       @@V@AT@@@@@@EMSKP$      @@Q@@@@@@@@@WH
)@@G@@MF$         @@W@AV@@@@@@IDENT$      @@W@AW@@@@@@APUNCH$     @@W@AX@@@@@@WI
)@@G@@DBP$DB13    @@V@@@@@@@@@APRNTA$     @@W@@@@@@@@@RT$OUT      @@W@A)@@@@@@WJ
)@@G@@RSBAT$      @@W@A-@@@@@@CTSQ$       @@W@@@@@@@@@ISDFIC      @@8@A<@@@@@@WK
)@@G@@RSGDEM$     @@W@@@@@@@@@DM$IO       @@W@A>@@@@@@PAS$        @@V@A&@@@@@@WL
)@@G@@DBP$DB43    @@V@A$@@@@@@BSCAN$      @@V@@@@@@@@@ISDFIA      @@8@A(@@@@@@WM
)@@G@@AETIME$     @@S@@@@@@@@@CONVERT     @@"@A:@@@@@@ISDFI       @@8@A?@@@@@@WN
)@@G@@TIME$       @@W@A!@@@@@@RT$INT      @@W@A,@@@@@@IOW$        @@W@@@@@@@@@WO
)@@G@@HLP$BK      @@V@A0@@@@@@AEPACK$     @@R@@@@@@@@@RSTRY$      @@W@A2@@@@@@WP
)@@G@@SM$EST      @@V@@@@@@@@@PREGSAVE    @@.@A4@@@@@@FDASGET     @@6@A5@@@@@@WQ
)@@G@@RT$TRS      @@W@@@@@@@@@PREFIX      @@;@A7@@@@@@DBP$DB22    @@V@A8@@@@@@WR
)@@G@@EOCTV$      @@U@@@@@@@@@PFSPKT3     @@1@A'@@@@@@ACOB$E      @@V@@@@@@@@@WS
)@@G@@REW$        @@W@A/@@@@@@FTN$E       @@V@A.@@@@@@FLIT$       @@V@@@@@@@@@WT
)@@G@@SM$INIT     @@V@@@@@@@@@ROOT        @@.@B@@@@@@@MSALL$      @@W@B[@@@@@@WU
)@@G@@DBP$DB52    @@V@@@@@@@@@FRM$BK      @@V@@@@@@@@@OUTPUT      @@;@B^@@@@@@WV
)@@G@@FIELDPKT1   @@1@B @@@@@@MUSER$      @@W@BA@@@@@@EDJS$       @@W@@@@@@@@@WW
)@@G@@ASFDGET     @@6@BC@@@@@@INFOBITS    @@1@BD@@@@@@UT$ERQ      @@W@BE@@@@@@WX
)@@G@@REP$BIT     @@W@BF@@@@@@UTS4CB$     @@V@@@@@@@@@ASSIGN      @@1@BH@@@@@@WY
)@@G@@UO$GET      @@W@BI@@@@@@CPOOL$      @@W@BJ@@@@@@QPABK$      @@V@BK@@@@@@WZ
)@@G@@HVTS$FTNLR  @@V@BL@@@@@@FTN$1       @@V@BM@@@@@@EDCFZ$      @@U@@@@@@@@@XA
)@@G@@APL$M2      @@V@@@@@@@@@MCSTAT$     @@W@BP@@@@@@DBP$DB31    @@V@BQ@@@@@@XB
)@@G@@APL$M1      @@V@BR@@@@@@ECOL$       @@L@@@@@@@@@CONTINCHAR  @@;@BT@@@@@@XC
)@@G@@RSCNTL$     @@W@BU@@@@@@LNAME$      @@W@@@@@@@@@HVTS$OLD    @@V@@@@@@@@@XD
)@@G@@FFORK$      @@W@BX@@@@@@PL1$E       @@V@BY@@@@@@NUALG$I3    @@V@BZ@@@@@@XE
)@@G@@MCSUCB$BDI  @@V@B)@@@@@@ECOPY$      @@R@@@@@@@@@CARDBUF     @@3@B+@@@@@@XF
)@@G@@SRC$BK      @@V@@@@@@@@@FIPKT$      @@/@B=@@@@@@FIELDPKT2   @@1@B>@@@@@@XG
)@@G@@PNCHA$      @@W@B&@@@@@@PCTBD$      @@W@B$@@@@@@PL1$R       @@V@@@@@@@@@XH
)@@G@@WINDOW      @@1@@@@@@@@@PB$CON      @@W@B%@@@@@@CMO$        @@W@B:@@@@@@XI
)@@G@@NUALG$I12   @@V@B?@@@@@@COMPEX$     @@V@B!@@@@@@EFD1$       @@R@@@@@@@@@XJ
)@@G@@GW$         @@W@B\@@@@@@PL1$1       @@V@B0@@@@@@DRU$DB10    @@V@@@@@@@@@XK
)@@G@@EXSNP$      @@W@B2@@@@@@ABORT$      @@W@B3@@@@@@HVTS$FTN4YI @@V@B4@@@@@@XL
)@@G@@DRU$DB1     @@V@@@@@@@@@WEF$        @@W@B6@@@@@@SNO$C       @@V@B7@@@@@@XM
)@@G@@MDEF$       @@V@B8@@@@@@HVTS$FIN    @@V@B9@@@@@@DMRCTR$     @@V@@@@@@@@@XN
)@@G@@FIELDPKT3   @@1@B;@@@@@@ECLEAR$     @@X@B/@@@@@@EABT$       @@W@B.@@@@@@XO
)@@G@@DRU$DB4     @@V@@@@@@@@@STARTIME    @@1@B_@@@@@@C$LABEL     @@V@C@@@@@@@XP
)@@G@@APL$D4      @@V@@@@@@@@@ASPSR       @@"@@@@@@@@@UT$TIM      @@W@C#@@@@@@XQ
)@@G@@C$TAPE      @@V@C^@@@@@@C$DIAG      @@V@@@@@@@@@EDTXFN      @@1@CA@@@@@@XR
)@@G@@SM$         @@W@CB@@@@@@MODE$       @@W@CC@@@@@@EDLOAD$     @@W@CD@@@@@@XS
)@@G@@HVTS$PUN    @@V@@@@@@@@@C$MASS      @@V@@@@@@@@@FEQP$       @@W@CG@@@@@@XT
)@@G@@BDR$        @@W@CH@@@@@@BANK$       @@W@@@@@@@@@EDITPKT     @@1@@@@@@@@@XU
)@@G@@TSA$        @@W@CK@@@@@@ABSR$       @@W@CL@@@@@@S$R3        @@V@CM@@@@@@XV
)@@G@@SRTUB$      @@V@CN@@@@@@HVTS$HEL    @@V@@@@@@@@@HVTS$CON    @@V@@@@@@@@@XW
)@@G@@GET         @@7@CQ@@@@@@SW$         @@W@CR@@@@@@RSNOT$      @@W@CS@@@@@@XX
)@@G@@PFI$        @@W@CT@@@@@@ASM$        @@V@@@@@@@@@INFILE$     @@W@CV@@@@@@XY
)@@G@@DK$ONS      @@W@CW@@@@@@FI$HBK      @@V@@@@@@@@@TREAD$      @@W@@@@@@@@@XZ
)@@G@@TFC$IO      @@V@CZ@@@@@@HVTS$AC1    @@V@C)@@@@@@DRU$DB9     @@V@@@@@@@@@YA
)@@G@@BSD$        @@W@C+@@@@@@ATREAD$     @@W@C<@@@@@@DMR4$       @@V@C=@@@@@@YB
)@@G@@C$LION      @@V@@@@@@@@@SIGNON      @@1@C&@@@@@@OUTFIL      @@1@C$@@@@@@YC
)@@G@@FFILEX$     @@W@C*@@@@@@PL1$5       @@V@C(@@@@@@PLS$E       @@V@C%@@@@@@YD
)@@G@@C2PP$       @@V@@@@@@@@@FS$REC      @@W@@@@@@@@@ERROR       @@5@C!@@@@@@YE
)@@G@@XFR$        @@W@C,@@@@@@SETC$       @@W@C\@@@@@@FREELX$     @@W@C0@@@@@@YF
)@@G@@CJOIN$      @@W@C1@@@@@@PLS$R       @@V@C2@@@@@@CTS$ED      @@V@C3@@@@@@YG
)@@G@@BDI3$       @@V@C4@@@@@@E$DEC$      @@U@@@@@@@@@RPG$3       @@V@C6@@@@@@YH
)@@G@@EAPRT$      @@O@C7@@@@@@E$ARTN$     @@M@C8@@@@@@AECOLN$     @@L@@@@@@@@@YI
)@@G@@DPY$BK      @@V@@@@@@@@@ASPUT       @@6@C;@@@@@@INQUOTE     @@1@C/@@@@@@YJ
)@@G@@DATA        @@1@C.@@@@@@ABR$        @@W@C"@@@@@@PLS$1       @@V@C_@@@@@@YK
)@@G@@AEMSG$      @@R@@@@@@@@@WORDS       @@;@D[@@@@@@RSPUN$      @@W@D]@@@@@@YL
)@@G@@RSPLST$     @@W@D#@@@@@@DUMDB$      @@V@D^@@@@@@EDAY4$      @@S@D @@@@@@YM
)@@G@@AEFD2$      @@R@@@@@@@@@E$ASCII$    @@M@@@@@@@@@AVAIL       @@.@DC@@@@@@YN
)@@G@@EDITADD     @@;@DD@@@@@@INFO$       @@W@DE@@@@@@ADACT$      @@W@DF@@@@@@YO
)@@G@@MCSNCB$BDI  @@V@DG@@@@@@C$SDF       @@V@DH@@@@@@APL$        @@V@DI@@@@@@YP
)@@G@@ACOB$5A     @@V@@@@@@@@@FAC$$       @@W@DK@@@@@@DMRMT$      @@V@DL@@@@@@YQ
)@@G@@AEDIT$      @@N@@@@@@@@@EDITDEL     @@;@DN@@@@@@IDX$BK      @@V@@@@@@@@@YR
)@@G@@SWAP        @@;@DP@@@@@@COMPARE     @@0@DQ@@@@@@CREG$       @@W@DR@@@@@@YS
)@@G@@HVTS$DAT    @@V@DS@@@@@@BDI11$      @@V@DT@@@@@@EPRT$       @@O@@@@@@@@@YT
)@@G@@LUT$BK      @@V@DV@@@@@@AECOPY$     @@R@@@@@@@@@SIGNOFF     @@1@DX@@@@@@YU
)@@G@@SEND$       @@W@DY@@@@@@OPT$        @@W@DZ@@@@@@CMS$        @@W@D)@@@@@@YV
)@@G@@TFLIT$      @@V@D-@@@@@@HVTS$FTNBE  @@V@D+@@@@@@DMATH$      @@V@D<@@@@@@YW
)@@G@@C$ANS       @@V@@@@@@@@@DOPFS       @@1@D>@@@@@@SCRB$       @@W@D&@@@@@@YX
)@@G@@RTN$        @@W@D$@@@@@@RSGET$      @@W@D*@@@@@@FITEM$      @@W@D(@@@@@@YY
)@@G@@DKEY$       @@W@D%@@@@@@BSF$        @@W@D:@@@@@@PRMCDB$     @@V@D?@@@@@@YZ
)@@G@@APLREP$     @@V@D!@@@@@@FILE$       @@T@@@@@@@@@CPBBNK$     @@V@@@@@@@@@ZA
)@@G@@RT$SCH      @@W@D0@@@@@@BDI7$       @@V@D1@@@@@@EDECV$      @@U@@@@@@@@@ZB
)@@G@@FILESCAN    @@2@D3@@@@@@CS$LOG      @@W@@@@@@@@@FIFOPT$     @@/@D5@@@@@@ZC
)@@G@@CADD$       @@W@D6@@@@@@ACSF$       @@W@D7@@@@@@SM$MERGE    @@V@D8@@@@@@ZD
)@@G@@SM$ERR      @@V@D9@@@@@@C2A$        @@V@@@@@@@@@DATE        @@1@D;@@@@@@ZE
)@@G@@UO$OR       @@W@D/@@@@@@HVTS$FTNL   @@V@D.@@@@@@DUMLK$      @@V@D"@@@@@@ZF
)@@G@@EPACK$      @@R@@@@@@@@@GETSPECS    @@1@@@@@@@@@PCTBUF      @@1@E[@@@@@@ZG
)@@G@@IOADH$      @@W@E]@@@@@@CMT$        @@W@E#@@@@@@DBP$DB35    @@V@@@@@@@@@ZH
)@@G@@EDIT$       @@X@E @@@@@@SNO$X       @@V@EA@@@@@@DBP$IB2     @@V@EB@@@@@@ZI
)@@G@@CTS$I       @@V@@@@@@@@@CLOSESDFO   @@"@@@@@@@@@FDPSR       @@"@EE@@@@@@ZJ
)@@G@@TRMRG$      @@W@EF@@@@@@TCORE$      @@W@EG@@@@@@SYSER$      @@W@@@@@@@@@ZK
)@@G@@BUILDPCFTREE@@2@EI@@@@@@PT$MN8      @@W@@@@@@@@@SIO$        @@W@EK@@@@@@ZL
)@@G@@DBP$IB5     @@V@EL@@@@@@DBP$DB14    @@V@EM@@@@@@APL$D       @@V@@@@@@@@@ZM
)@@G@@ISDFIOA     @@8@EO@@@@@@FTN$4S      @@V@@@@@@@@@ISDFIPKT1   @@1@EQ@@@@@@ZN
)@@G@@RLIB$       @@W@@@@@@@@@FILEOUT     @@;@@@@@@@@@FIMAG$      @@/@ET@@@@@@ZO
)@@G@@CCNT        @@1@EU@@@@@@W$R$        @@W@EV@@@@@@RR$         @@W@EW@@@@@@ZP
)@@G@@RSFUL$      @@V@EX@@@@@@DBP$DB44    @@V@EY@@@@@@C$ACS       @@V@@@@@@@@@ZQ
)@@G@@OPNSTARCARD @@"@E)@@@@@@SRTINIT$    @@V@@@@@@@@@RSTRO$      @@W@E+@@@@@@ZR
)@@G@@EXIT$       @@W@E<@@@@@@BDW$        @@W@E=@@@@@@MDC$        @@V@E>@@@@@@ZS
)@@G@@EPRTG$      @@O@@@@@@@@@TSF$        @@W@E$@@@@@@ME$GET      @@W@E*@@@@@@ZT
)@@G@@ERRPR$      @@W@E(@@@@@@S$RT0       @@V@E%@@@@@@DBP$DB23    @@V@@@@@@@@@ZU
)@@G@@TFR$BK      @@V@@@@@@@@@ISDFIPKT2   @@1@E!@@@@@@RDL$        @@W@E,@@@@@@ZV
)@@G@@DLAPS$      @@W@@@@@@@@@DBP$DB53    @@V@@@@@@@@@DOWNDATE    @@1@@@@@@@@@ZW
)@@G@@TSWAP$      @@W@E2@@@@@@FC$SSN      @@W@E3@@@@@@CTS$        @@W@E4@@@@@@ZX
)@@G@@FTN$U       @@V@E5@@@@@@CONTB$      @@V@@@@@@@@@E$PARAMS    @@6@E7@@@@@@ZY
)@@G@@DOWNTOC     @@4@E8@@@@@@PCFDOWN     @@2@E9@@@@@@PFSPKT1     @@1@E'@@@@@@ZZ
)@@G@@DM$RBK      @@W@E;@@@@@@AREADA$     @@W@E/@@@@@@HVTS$MSG    @@V@E.@@@@@@AA
)@@G@@BCOB$I      @@V@@@@@@@@@FDPUT       @@6@E_@@@@@@PRMDB$      @@W@F@@@@@@@AB
)@@G@@IO$         @@W@F[@@@@@@EACQ$       @@W@F]@@@@@@SPICB$      @@V@F#@@@@@@AC
)@@G@@APL$ERR$    @@V@F^@@@@@@EFD2$       @@R@F @@@@@@EPAD$       @@Q@@@@@@@@@AD
)@@G@@HVTS$SNP    @@V@@@@@@@@@LEVEL$      @@W@FC@@@@@@IOAXI$      @@W@FD@@@@@@AE
)@@G@@EX$CRD      @@W@FE@@@@@@CGET$       @@W@FF@@@@@@FTN$4       @@V@FG@@@@@@AF
)@@G@@DMRMB$      @@V@FH@@@@@@DBP$DB32    @@V@FI@@@@@@C2D$        @@V@@@@@@@@@AG
)@@G@@UNL$        @@W@FK@@@@@@DMR1$       @@V@FL@@@@@@AEDCFZ$     @@U@@@@@@@@@AH
)@@G@@IOARB$      @@W@FN@@@@@@APRNT$      @@W@FO@@@@@@NUALG$I4    @@V@FP@@@@@@AI
)@@G@@CDMATH$     @@V@FQ@@@@@@APL$U       @@V@@@@@@@@@FFL$BK      @@V@@@@@@@@@AJ
)@@G@@TLBL$       @@W@FT@@@@@@PRMGA$      @@W@FU@@@@@@ERR$        @@W@FV@@@@@@AK
)@@G@@DBP$DB11    @@V@FW@@@@@@AEDAY5$     @@S@FX@@@@@@AESKIP$     @@L@@@@@@@@@AL
)@@G@@AEDAY4$     @@S@@@@@@@@@AEDAY3$     @@S@@@@@@@@@FTN$YI      @@V@F-@@@@@@AM
)@@G@@AEDAY2$     @@S@@@@@@@@@USRID$      @@W@F<@@@@@@TPLIB$      @@W@F=@@@@@@AN
)@@G@@CS$OVR      @@W@F>@@@@@@DBP$DB41    @@V@F&@@@@@@C2E$        @@V@F$@@@@@@AO
)@@G@@AEDAY1$     @@S@@@@@@@@@FIRST       @@.@F(@@@@@@FREE1       @@1@F%@@@@@@AP
)@@G@@RECEV$      @@W@F:@@@@@@PSR$        @@W@F?@@@@@@DMBT$       @@W@F!@@@@@@AQ
)@@G@@ABSAD$      @@W@F,@@@@@@TASK$       @@V@F\@@@@@@PL1$4       @@V@@@@@@@@@AR
)@@G@@GETOPN      @@7@F1@@@@@@SUMMARY     @@4@F2@@@@@@TRUN$       @@W@F3@@@@@@AS
)@@G@@SD$         @@W@F4@@@@@@S$R4        @@V@F5@@@@@@HVTS$FTNB4  @@V@@@@@@@@@AT
)@@G@@DM$FAC      @@W@@@@@@@@@NOSTARTCF   @@2@F8@@@@@@LOAD$       @@W@F9@@@@@@AU
)@@G@@RPG$2       @@V@F'@@@@@@SELT$       @@T@@@@@@@@@BT$DIS      @@W@@@@@@@@@AV
)@@G@@ECLR$$      @@X@F.@@@@@@READ$       @@W@F"@@@@@@FL$BOX      @@W@F_@@@@@@AW
)@@G@@HVTS$BFTN   @@V@@@@@@@@@COMPARED    @@1@G[@@@@@@CHECK       @@\@G]@@@@@@AX
)@@G@@WALL$       @@W@G#@@@@@@LABEL$      @@W@G^@@@@@@DATE$       @@W@G @@@@@@AY
)@@G@@SM$SORT     @@V@GA@@@@@@DMR5$       @@V@GB@@@@@@C2F$        @@V@GC@@@@@@AZ
)@@G@@EDAY3$      @@S@GD@@@@@@AEFD1$      @@R@@@@@@@@@SDFOPKT     @@1@@@@@@@@@BA
)@@G@@ECHAR$      @@X@GG@@@@@@UO$AND      @@W@GH@@@@@@DRU$DB2     @@V@GI@@@@@@BB
)@@G@@DUSE$       @@T@@@@@@@@@HVTS$CRE    @@V@@@@@@@@@MSCON$      @@W@GL@@@@@@BC
)@@G@@LOG$        @@W@GM@@@@@@PLUM$BANK4  @@V@GN@@@@@@BDI4$       @@V@@@@@@@@@BD
)@@G@@STARCARD    @@"@GP@@@@@@MAR$BK      @@V@@@@@@@@@EDITX$      @@X@GR@@@@@@BE
)@@G@@WAIT$       @@W@GS@@@@@@RSGIO$      @@W@GT@@@@@@APRTCN$     @@W@GU@@@@@@BF
)@@G@@DRU$DB5     @@V@GV@@@@@@C$RPW       @@V@GW@@@@@@BDI10$      @@V@GX@@@@@@BG
)@@G@@EDECFZ$     @@U@GY@@@@@@EMSGR$      @@R@@@@@@@@@UNLCK$      @@W@G)@@@@@@BH
)@@G@@SPRNT$      @@W@G-@@@@@@ACQ$        @@W@G+@@@@@@SCPAR$      @@V@@@@@@@@@BI
)@@G@@RSAGAW$     @@W@G=@@@@@@HVTS$AC2    @@V@@@@@@@@@RB$         @@W@G&@@@@@@BJ
)@@G@@CKPAR$      @@V@@@@@@@@@^[II(!GL>IK)IT<GD,H1>G))GL9^[HC(IE(OETODC)^@)^@)BK
)@@G@@^@)^@)^@)^[.@[@@@@^@)^@)@O@@@@JS)E1-IL(GD+H->IS)I(3G(=^[4H8)GT\H(!I(,HD<BL
)@@G@@GD4G*)I9(I-*^[4G(2H((H1-H),^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BM
)@@G@@^@)^[.@[@@@@^@)^@)@O@@@@^@)^@)^@)CTPELME-OFDKBK)E- ELHE-TE[ BS)^@)^@)^@)BN
)@@G@@^@)^@)^@)^[;^[KIL\G92GD!^[(IS)I--H-:HD,G8)I-\^[4H[(IS)I-9I[>^[,H97^@)^[.BO
)@@G@@@O@@@@^@)^@)^@)E-AE(IC-[E-#BK)CTCCDMBS)^@)^@)^@)^@)^@)^@)^@)^@)^[;^[#H[-BP
)@@G@@IL-GT4G(2^[4H8)GL>^[\I(4I[5I))GL9^[4G(2H((H1-H))^@)^[.@O@@@@^@)^@)^@)E-ABQ
)@@G@@E(IE1KD9NBK)A@, 1NCTMD1CDDOC*;^@)^@)^@)^@)^@)^[;^[MG(?GD4HD6G*)E10H93^[&BR
)@@G@@H92^[!H96G(3^@)^@)^@)^@)^@)^@)^@)^[.@O@@@@^@)^@)^@)E-AE(ID[KD9NBK)A@, 1NBS
)@@G@@CTMD1RDD^C*;^@)^@)^@)^@)^@)^[;^[MG(?GD4HD6G*)D[0H93^[&H92^[!H96G(3^@)^@)BT
)@@G@@^@)^@)^@)^@)^@)^[.@O@@@@^@)^@)^@)C(NDDICTCCDMBK)CTCCDMBS)^@)^@)^@)^@)^@)BU
)@@G@@^@)^@)^@)^[;^[#H[-IL-GT4G(2^[4JD0G(=^[(H0)G12H9!^[4G(2H((H1-H))^@)^@)^[.BV
)@@G@@@O@@@@^@)^@)^@)C(NDDIC1PD1#BK)E-AE(IE-TE[ BS)^@)^@)^@)^@)^@)^@)^[;^[#H9,BW
)@@G@@I-2H9?^[-IT0G(<I))H9&^[ ETDD1#D[[EK) [OCTJD(FCLDD0(^[.@[@@@@^@)^@)@O@@@@BX
)@@G@@JS)E1-IL(GD+H->IS)IT>I))GL9^[*GD,G-?G(2^[(H1(I-(GD?HD'GD4HD\H0)I-\^[?G(4BY
)@@G@@^[ ES)HT,H97^[7H94IS)H[-I@$H1(H0-^@)^@)^@)^@)^[.@[@@@@^@)^@)@O@@@@^@)^@)BZ
)@@G@@^@)E-CC1GC( D9GBK)CLJD9GC([D0;^@)^@)^@)^@)^@)^@)^@)^[;^[OG(2H((H1-H))H[-CA
)@@G@@IS)C(2GD3G*)I-\^[ H1=^[\G0)D-(H1>^@)^@)^[.@O@@@@^@)^@)^@)E-CC1GET#ELGBK)CB
)@@G@@CLJD9GC([D0;^@)^@)^@)^@)^@)^@)^@)^[;^[PH1<H9,G-(EDP^@)^@)^@)^))^@)^@)^@)CC
)@@G@@^@)^@)^@)^@)^@) 0)GL>G9(H1,HD,G8)H9&^[+I(&G1>IK)GD=G-2G(3IS)@J@@@@^@)^@)CD
)@@G@@^@)^@)^@)F-H^)=C(A *"^- D1^^@)^@)^@)^@)^@)^@)^@)^@) 0)ID5HD4^[(G0)H1\^[ CE
)@@G@@C-DE))G1?GD$@J@@@@E[FE))^@)^@)^@)^- EDP^@)^@)^@)A@)^@)^@)^@)^@)^@)^@)^@)CF
)@@G@@^@) 0)HD,HD4HD-H-?JC?^[,H8)I[-GT:G(4@L@@@@DC)^-^D8)AC?E@!AC) ))^-^D8)E@*CG
)@@G@@DC?AC(B(KCD#DT E)) -KDTO^@=C(LE*)DC) 0)IT<GD,^[&H92^[0HT4^[3HD$H1-H))^@)CH
)@@G@@@L@@@@^@)^@)^@)^@)^@)^-DC0)^@)^@)^@)D*=^-KC0!B00^DWE[FE))^@)^@) 0)G9>H1>CI
)@@G@@IL-I->^@1^[0HT4^[0G(2^[-IT3G(!GL?JC)@J@@@@D*=^-KC0%^@)^@)^- EDP^@)^@)^@)CJ
)@@G@@AC)^@)^@)^@)^@)^@)^@)^@)^@) 0)I[\IT4^[0GD<HT>I))G9>H0)G1?GD$@H@@@@D*=^-]CK
)@@G@@CC%^@)^@)^-MC(N^@)^@)^@)AK2^@)^@)^@)^@)^@)^@)^@)^@) 0)HD!GD$G*)GD2G(-^@)CL
)@@G@@@I@@@@D*=^-KCC%^@)^@)C*=E[FE))^@)^@)AK2 -H^)=CL[^@)^@)^@)^@)^@) 0)GT2G(-CM
)@@G@@I->^[ C-DE)=^[0HT4@^@@@@^@)^@)^@)^@)^@)^- D1^C0)@]@@@@^)*D*=^-GCS(@I@@@@CN
)@@G@@^@=C-J^[WE[FE)) ))D-[ -P^@)^@)CC0 -H^)=E[[^@)^@)^@)^@)^@) 0)G9>I))I[-GT:CO
)@@G@@G(4^[-G-=IK)@C@@@@^@=C-J^[WF-KDTO^@?^[GD9[C))^@)CC0 -K [KDTO C?AK)@H@@@@CP
)@@G@@^@)^@)^@)^@)^@)D-HDK)^@)^@)^@)F@1AC?C(^DDO^))^@)^@)^@)^@) 0)H90G(,^[ C-DCQ
)@@G@@E)=^@)@J@@@@^@)^@)^@)^@)^@)E@*A@?AC(B00 *"^- D1^^@)^@)^@)^@)^@)^@)^@) 0)CR
)@@G@@E[MDDIE)?C(^DDO^@!^[1I((I))^@)@^@@@@EL D9KC(I K)^@)^-ICDHC*)@K@@@@^)*E[MCS
)@@G@@CK=D-# C)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)IT7HD4GT*^[GCS)GL-CT
)@@G@@GT:^[4H8)GL5G1&G(2@L@@@@^@=C-J^[H^)=C(A^@?D*=^-]CK%^@=C(LE*)^))^@)^@)^@)CU
)@@G@@^@)^@)^@) 0)IT>I))H1>I8)GL5G1&G(2^[+G($HD,^[-G-=IK)^@)@^@@@@^@)^@)^@)^@)CV
)@@G@@^@)^- D1^^@)@A@@@@E@)^@)^@)^@)^@)^-KELJCS)^@)^@) K2^@)@A@@@@D( ETOC(MD*%CW
)@@G@@^@)^-ICDHC*)^@)^@)^8% K$@A@@@@C(IC-HC(NET[C9  K)^-ICDHC*)^@)^8%^8)@K@@@@CX
)@@G@@^@)^@)^@)^@)^@)D*=^-GCS.^-GCTI *"^- D1^^@)^@)^@)^@)^@)^@) 0)ID5HD4^[(G0)CY
)@@G@@H1\I))HD,^[+I(&G1>IK)D-#@I@@@@D*=^-]C(VE@*A@?A@(F*)^- EDP^@)^)*E[MCK=D-#CZ
)@@G@@ C)^@)^@)^@)^@) 0)H(-IL:^[+I(&G1>IK)G(,G))@K@@@@^)*D*=^-GCS(^@)^@)^@)^@)DA
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)IL>IT>I))I-\^[<H9=G*)H-\GS)GT,I-2^@)DB
)@@G@@@J@@@@^@)^@)^@)^@)^@)F-H^)=C(A *"^- D1^^@)^@)^@)^@)^@)^@)^@)^@) 0)HD&^[,DC
)@@G@@H94^[ C-DE)) *)ID5HD4^@)@K@@@@DC)^-^D8)A@?E@!AC) ))^-^D8)E@*DC?AC(B(#D9KDD
)@@G@@FC) ))^-BD8)CTJE[T^@,^[(G0)CTJE[T^[3G(4 ))G9\^[=H8)HD4@K@@@@^@)^@)^@)^@)DE
)@@G@@^@)D-[ -P^@)^@)^@)CC0 -H^)=CL]^@)^@)^@)^@)^@) 0)G9>I))GL>G9(H1,HD,G8)H9&DF
)@@G@@^[!G(3IT-G9>@H@@@@^@)^@)^@)^@)^@)D-HDK)^@)^@)^@)F@1AC?C(HETB^))^@)^@)^@)DG
)@@G@@^@) 0)GT\I[9^[!G(3IT-G9>@F@@@@^@)^@)^@)^@)^@)AC!B0=C(IC))^@)^@)^@)^@)^@)DH
)@@G@@^@)^@)^@)^@)^@) 0)ID5HD4@^@@@@CTJE[T^@)^@)^@)^-ICDHC*)@M@@@@^@)^@)^@)^@)DI
)@@G@@^@)D-I -P^@)^@)^@)CC1 ): [H^)=CL  (H^)=CL] C) 0)H-\GD=^[,G($GD4HD6G*)H->DJ
)@@G@@H1$I-*^[(H0)I9\IL=IS)^@)@J@@@@^@)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC0 -H^)=CL]DK
)@@G@@^@)^@)^@)^@)^@) 0)G9>I))GL5G1&G(2^[+G($HD,H1(H1$@G@@@@^@)^@)^@)^@)^@)D-HDL
)@@G@@DK)^@)^@)^@)F@1AC?C(#D9KFC=^@)^@)^@)^@) 0)GT\I[9^[(I))@^@@@@^@)^@)^@)^@)DM
)@@G@@^@)^- D1^^@)@A@@@@E@)^@)^@)^@)^@)^-KELJCS)^@)^@) K2^@)@I@@@@C(IC-KELDD1ODN
)@@G@@ K)^-ICDHC*)^@)^@)AC)^@)^@)^@)^@)^@)^@)^@)^@) 0)I[2HD,I))H(>IT3GD$G*)^@)DO
)@@G@@@H@@@@C(IC-#ETA K)^@)^-ICDHC*)^@)^@)A@)^@)^@)^@)^@)^@)^@)^@)^@) 0)G-\^[ DP
)@@G@@EK)CTNC0=^@)@H@@@@E[ME-A^@)^@)^@)^- EDP^@)^@)^@)E@*A@?A@(^@)^@)^@)^@)^@)DQ
)@@G@@^@) 0)I[2HD,I))G1?GD$^@)@M@@@@ETFDDKCS)^@)^@)^- EDP^@)^@)^@)E[ME-A^@)^@)DR
)@@G@@^@)^@)^@)^@)^@) 0)G->G1-I(?I))IT:HD0^[<H95H14^[(IS)I[2HD,I))G1?GD$@L@@@@DS
)@@G@@DC)^-^D8)A@?E@!AC) ))^-^D8)E@*DC?AC(B(NDTDE@) -NDTDE[#^@=C(LE*)E@*DC?AK(DT
)@@G@@^@,^[3G(4^[3HT(I@)GT\I(,I))^@)@K@@@@^@)^@)^@)^@)^@)D( ETOC(MD*)^@)^@)^@)DU
)@@G@@^@)^@)^@)^@)^@)^@)^@) 0)I->IL!HD,GD4G*)I-*G*)H(>IT3GD$G*)^@)@G@@@@^@)^@)DV
)@@G@@^@)^@)^@)^-DC0)^@)^@)^@)D*=^- C0)^@)^@)^@)^@)^@)^@) 0)HD&^[ C-DE))@I@@@@DW
)@@G@@^@=C-J^[KELOC0) ))D-[ -P^@)^@)CC0 -NDTDE[#^@)^@)^@)^@)^@) 0)IT>I))IT:HD0DX
)@@G@@^[<H95H14^@)@L@@@@^@)^@)^@)^@)^@)D-HDK)^@)^@)^@)F@1AC?E[ME-A *"C(KELO^)-DY
)@@G@@C(#ETA^)) 0)GT-H-?^[-I[0IL\I[2HD-I->^[2H95I-(H1>@G@@@@^@)^@)^@)^@)^@)^- DZ
)@@G@@D-NC*)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)I(3G*)C(M^@)@N@@@@^@)^@)^@)^@)EA
)@@G@@^@)D-[^@)^@)^@)^@)CC0 )*^-BC1JELH^@1AK?ETFDDKCS?A0?D*=^-]C*!D*=^-]CK?AC8EB
)@@G@@ -H^)=CL] C) 0)G9>I))E[#E8)^@)@J@@@@^@)^@)^@)^@)^@)C(M^@)^@)^@)^@)E[ME-AEC
)@@G@@ *"E[MDDIE)=^D#ETA^)) 0)IL>ID5G(3I))IT\H(>^[3G(2I1(GT>@^@@@@^@)^@)^@)^@)ED
)@@G@@^@)^- D1^C0)@G@@@@DC)^-^D8)A@?E@!AC) ))^-^D8)E@*DC?AC(B(NC(O^@?^[NE-JEL EE
)@@G@@^[[A@?E@*DC( )2^@)@H@@@@^@=C-J^[H^)=C(A^@?^[GD(E^@)^@)F@1AC?C(^DDOF@=^@)EF
)@@G@@^@)^@)^@) 0)GT?H93G*)C(^DDO^))@^@@@@^@)^@)^@)^@)^@)^- D1^^@)@[@@@@ 0)^@)EG
)@@G@@@D@@@@ 0)CT*GD2GD<I->IK)IL\I(4HD,G*)E[MD9#^[(H14G(2G1-GT>^@!@J@@@@ 0)^@)EH
)@@G@@^@)E-*G*)G1\H-?H97HD,G8)I[2H9<IS)GD2G*)I[2H96HD=G(=^[-IS)GD,^[>GD3JC)HD,EI
)@@G@@I->IL&GD<G*)@I@@@@ 0)^@)^@)I9(I-*^[4H[>^[<H[-IL-GT4G(2^[&G(4GT*^[-H1=^[3EJ
)@@G@@I-\IL>^[2H95I-(H1>IS,^@)E-*G(9@K@@@@ 0)^@)^@)GD2G*)G->IT(G9,G(=^[4H8)I--EK
)@@G@@HT>^[-G-6GD,I--G9>^[\G0)I-*G*)GD=G->G))G1?G(8HD+HD?HD4JC)^@)@F@@@@ 0)^@)EL
)@@G@@^@)I[2H96HD=G(=^[+JC)I-*G*)IT*HD&I))I--GL?G*)GD0I[2H9-GT* 0)@[@@@@ 0)^@)EM
)@@G@@@^@@@@ 0)HD,I[5I))E[MD9#ES) *)@[@@@@ 0)^@)@^@@@@ 0)^@)^@)C*=C9 E)) *)^@)EN
)@@G@@@K@@@@ 0)^@)^@)^@)^@)^[OH[(IS)E[MD9#^[7HD?H))H-\GD=^[[AS)I9(I-*^[4H[>^[,EO
)@@G@@G(8I))GT*GD2^[&IL\H*)I-*G*)^@)@K@@@@ 0)^@)^@)^@)^@)^[(H10I(4^[7H92G))GD,EP
)@@G@@G))G(8G(<I(4G*)I-*G*)IT*HD&I))I--GL?G*)I-\^[2G(-G-9^[4H[>^@)@K@@@@ 0)^@)EQ
)@@G@@^@)^@)^@)^[&H9?H-\I9(H1$^[<H[-IL-GT4G(2^[&H92^[3I(+IT>ID5G(,I))HD,I[5I),ER
)@@G@@^@)C9>H1>IL-I->IS)@B@@@@ 0)^@)^@)^@)^@)^[4I9\^[(H13I-2I(<I-(H9,IS,@^@@@@ES
)@@G@@ 0)^@)^@)C*=D-JD9F^@!^@)@L@@@@ 0)^@)^@)^@)^@)^[7HD?H))H-\GD=^[[AS)I9(I-*ET
)@@G@@^[4H[>^[,G(8I))GT*GD2GD<I->IK)G12H9!^[4H[>^[(H10I(4^[7H92G))@K@@@@ 0)^@)EU
)@@G@@^@)^@)^@)^[+I(4^[7HD?H))G(8G(<I(4G*)H1\^[3H[(G14 ))H(-HD,I--HD,HD,G8)I-*EV
)@@G@@GD4^[<H[-IL-GT4G(2@I@@@@ 0)^@)^@)^@)^@)^[-IS)I-*G*)H1>J[4^[\H1> 0)^[BG(,EW
)@@G@@G(2GD4G(3^[\H1>^[(H13I-2I(<I-(H9, 0)@^@@@@ 0)^@)^@)C*=D1 F[O^@!^@)@L@@@@EX
)@@G@@ 0)^@)^@)^@)^@)^[7HD?H))G(8G(<I(4G*)I-*G*)IT*HD&I))H9,^[4H[>^[,G(8I))GT*EY
)@@G@@GD2GD<I->IK)H9&^[4H[>^[(H10I(4@M@@@@ 0)^@)^@)^@)^@)^[7H92G))G-\HD,G8)GD,EZ
)@@G@@^[>G1&G(<I-(I1>^[3HT(I@)H9&^[4H[-I))GT*GD2GD<I->IK,^@)D1\^[<H[-IL-GT4G(2FA
)@@G@@@H@@@@ 0)^@)^@)^@)^@)^[(IS)G1>I-<H[>G),^@)C9>H1>IL-I->IS)H9,G*)HD,IT4IL5FB
)@@G@@GT4HD\H0,^@)@^@@@@ 0)^@)^@)C*=EL D9KC(I^@!@L@@@@ 0)^@)^@)^@)^@)^[7HD?H))FC
)@@G@@G1>I-<H@)I-*G*)H1>J[4^[7H92G))I[\HD,I->G))I-\^[+JC)CC0^[-IS)I-*G*)GT5IL2FD
)@@G@@G(,I))@L@@@@ 0)^@)^@)^@)^@)^[(H10I(4^[7H92G))GD,G))IT>I))I-\^[&G(4GT*^[4FE
)@@G@@H[>^[&HD2IT4^[<H[-IL-GT4G(2^[\G0)I-*GD4^@)@L@@@@ 0)^@)^@)^@)^@)^[7H92G),FF
)@@G@@^@)E-*G*)GT\H14G(,I-3^[-H1=^[3I--I-5IS)H9&^[-H19^[0IL>I1(H95IS)HD,I[5I))FG
)@@G@@I9\IL=@I@@@@ 0)^@)^@)^@)^@)^@*CC2 C)GD2G*)H-\IT4 0)^[BG(,G(2GD4G(3^[4I9\FH
)@@G@@^[(H13I-2I(<I-(H9,IS,^@)@I@@@@ 0)^@)^@)C*=D9AC1NC(O^[]FC?B-?H9<^[7HD4H@)FI
)@@G@@^S)H9&^[\G1&IT>I))GT*GD2GD<I->IL3B0) *)^@)@J@@@@ 0)^@)^@)^@)^@)^[&H92GT>FJ
)@@G@@IS)G1(IL3I))GT*GD2GD<I->IK)I-\^[+G*)G1>I-<H[>G))I-\^[+G*)H14H@)^@)@J@@@@FK
)@@G@@ 0)^@)^@)^@)^@)^[<H[-IL-GT4G(2^@*I-*HD3^[(IS)I-*G*)H9&G13G(4 C)H9&^[4H[>FL
)@@G@@^[(H10I(4^[7H92G),@J@@@@ 0)^@)^@)^@)^@)^[DI))GD3IT5H(>IS)I-*GD4^[4H[>^[(FM
)@@G@@H10I(4^[2H95I-(H1>^[*GD3^[%I(3I))GL>G(,^@)@J@@@@ 0)^@)^@)^@)^@)^[(H1(I-(FN
)@@G@@GD?HD'G(=^[\IK)I-*GD4^[-^[MC(JE[ D0)H[-IS)HL5IT4^[+G(>H0)G-\H1> 0)@E@@@@FO
)@@G@@ 0)^@)^@)^@)^@)^[BG(,G(2GD4G(3^[&H95IK)HD,IT4IL5GT4HD\H13 0)@[@@@@ 0)^@)FP
)@@G@@@^@@@@ 0)D9PE-KE(O^[KELJCTN^@!@[@@@@ 0)^@)@^@@@@ 0)^@)^@)C*=E[PE)) *)^@)FQ
)@@G@@@K@@@@ 0)^@)^@)^@)^@)^[3I-\IL>IS)GT*GD2GD<I->IK)HD,^[[AS)HD,^[\I(4I[5I))FR
)@@G@@I9\IL=^[-H1=^[>J[>GT5I->IS)^@)@J@@@@ 0)^@)^@)^@)^@)^[3H[(G14^[4H8)IL>GD=FS
)@@G@@JC)G1\IK)H1>J[4^[<H[-IL-GT4G(2 0)^[BG(,G(2GD4G(3^[4I9\@A@@@@ 0)^@)^@)^@)FT
)@@G@@^@)^[(H13I-2I(<I-(H9,IS,@^@@@@ 0)^@)^@)C*=ET[E1 ^@!^@)@J@@@@ 0)^@)^@)^@)FU
)@@G@@^@)^[3I-\IL>IS)GT*GD2GD<I->IK)HD,I-\^[\I(4I[5I))I9\IL=^[+I(4^[>J[>GT5I->FV
)@@G@@IS)H1\@L@@@@ 0)^@)^@)^@)^@)^[3H[(G14 0)^[MG(0G(4HD4HD6G*)C*=ET[E1 ^93^[\FW
)@@G@@IK)GC)IT5GL3G(1I(>H14^[ ^-KE(O^[7HD?H))^@)@L@@@@ 0)^@)^@)^@)^@)^[\I1>IL7FX
)@@G@@IL(I->^[4H[(IS)GT*GD2GD<I->IK)I(,H->IT3^[(I))H[-IS)GL>G(,^[>J[0H-(GT(I-?FY
)@@G@@JC)^@)@H@@@@ 0)^@)^@)^@)^@)^[3H[(G14G(=^[\I(4 0)^[BG(,G(2GD4G(3^[\H1>^[(FZ
)@@G@@H13I-2I(<I-(H9, 0)@^@@@@ 0)^@)^@)C*=EL CT[D-G^@!@K@@@@ 0)^@)^@)^@)^@)^[?GA
)@@G@@H9-G-3^[(H14H8)CC3^[4H[>^[<H[-IL-GT4G(2^[,H97^[7GD(I-(H1$^[&H92^[\I(4I[5GB
)@@G@@I),^@)@K@@@@ 0)^@)^@)^@)^@)^[DG0)GD,^[ ^-NCDQC*)I9-IS)G-\H1>^[?GD3I)) *)GC
)@@G@@I-*GD4^[<H[-IL-GT4G(2^[7HD?H))GL>^@)@K@@@@ 0)^@)^@)^@)^@)^[2G(4IL(G(6G(=GD
)@@G@@^@!^[(I))I9(H-?^[,H94^[+G*)IL>H(\I1>G))G12H9!^[4H[>^[\I(4I[5I))^@)@K@@@@GE
)@@G@@ 0)^@)^@)^@)^@)^[7H92G),^@)DD&^[-H0)C*=ET[E1 ^[7GD3^[,H94^[4H[>^[?GD3I))GF
)@@G@@H95I-0I(4^[\I[>IL-I-(H9,@J@@@@ 0)^@)^@)^@)^@)^[=H9,G*?^[-^[+H--H1:^[<H[-GG
)@@G@@IL-GT4G(2^[7HD?H))GL>^[&G(4GT*G(=^[&IL\H*)I-*G*)@J@@@@ 0)^@)^@)^@)^@)^[\GH
)@@G@@I(4I[5I))I9\IL= 0)^[OH[(IS)HD3^[+G(<GD5IT>^[4H[>^[\I(4I[5I))I9\IL=^[(IS)GI
)@@G@@@J@@@@ 0)^@)^@)^@)^@)^[0IL>H-\GD=G(=^[7HD4H@)GL?GD,HT3^[7H[(GT*^[-IL>^[2GJ
)@@G@@G(4GD(H1>G))I(,I-(H))^@)@I@@@@ 0)^@)^@)^@)^@)^[\I1>IL7IL(I-4G(,^[+JC)GD,GK
)@@G@@^[>J[0H-(GT(I))H95I-0I(4^[\I[>IL-I-(H9, 0)@E@@@@ 0)^@)^@)^@)^@)^[BG(,G(2GL
)@@G@@GD4G(3^[4H[2G(>^[(H13I-2I(<I-(H9,IS,@^@@@@ 0)^@)^@)C*=D9PE)) *)^@)@L@@@@GM
)@@G@@ 0)^@)^@)^@)^@)^[OH[(IS)I9(H-?^[>J[>GT5I->^[-^[3H[(G14^[\H0)I-*G*)H95I-0GN
)@@G@@I(4^[7H92G),^[[H0)C*=ET[E1 ^@)@J@@@@ 0)^@)^@)^@)^@)^[&H9?H-\I9>G))GL9^[-GO
)@@G@@H0)C*=D9PE))HD3^[>IT3G(,I-(GD?H-9^[(G->H14HD<GD?^[4H8)@G@@@@ 0)^@)^@)^@)GP
)@@G@@^@)^[-H0)C*=E[PE),^@)C9>H1>IL-I->IS)H9,G*)HD,IT4IL5GT4HD\H0,@^@@@@ 0)^@)GQ
)@@G@@^@)C*=CLGDS) *)^@)@K@@@@ 0)^@)^@)^@)^@)^[OH[(IS)HD3^[2G(-H-?JC)I-*G*)IT-GR
)@@G@@H(>^[-IS)C*=D9PE))GL5I))HD3^[0IL\I1(G->G))G1\IK)@K@@@@ 0)^@)^@)^@)^@)^[<GS
)@@G@@H--IL(I-9 0)^[NHD,GT>^[4H[>^[\I(4I[5I))I9\IL=^[(IS)H92HD$HD,GD?H-9^[+H--GT
)@@G@@H1:^@)@J@@@@ 0)^@)^@)^@)^@)^[&HD?H->G)?^[-^[ ^-]D-F^@*H92^[ ^-JE(O C)I9*GU
)@@G@@HD<H@)G-\G(3^[,H94^[&H9?H-\I8)@J@@@@ 0)^@)^@)^@)^@)^[-^[ ^-NCDQC*)I[2H9=GV
)@@G@@I(<G(3^[-^[+H--H1:^[(H0)I-*G*)H95I-0I(4^[3I-2HD,G8,^@)@E@@@@ 0)^@)^@)^@)GW
)@@G@@^@)^[BG(,G(2GD4G(3^[\H1>^[(H13I-2I(<I-(H9, 0)^@)@^@@@@ 0)^@)^@)C*=ETOD9MGX
)@@G@@C*) *)@L@@@@ 0)^@)^@)^@)^@)^[&H92GT>IS)GD,^[(H(!G(=HD-I->^[3I-\IL>^[\G0)GY
)@@G@@I-*G*)H95I-0I(4^[7H92G),^@)D1\^[?G(&I))^@)@J@@@@ 0)^@)^@)^@)^@)^[\IK)IL(GZ
)@@G@@G9*I))HL5IT4HD&HD<GD4HD\H0)HD3^[=H9,G*,^@)DD4^[-IT3I(!G(3^[4H[>^@)@J@@@@HA
)@@G@@ 0)^@)^@)^@)^@)^[5IT>IK)HT,H97IS)I9*GD4^[*G*)H[-IS)GD,G))I9-H14IS)HD4^[(HB
)@@G@@H0)I-*G*)H95I-0I(4@G@@@@ 0)^@)^@)^@)^@)^[3I-2HD,G8,^@)C9>H1>IL-I->IS)H9,HC
)@@G@@G*)HD,IT4IL5GT4HD\H0,^@)@^@@@@ 0)^@)^@)C*=CDGD-DC9I^@!@L@@@@ 0)^@)^@)^@)HD
)@@G@@^@)^[#H->GD2IS)H95I-0I(4^[7H92G))I-\^[+H--H1:IS) *)H1\^[3I-\IL>^@!^[?G(-HE
)@@G@@I1>IS)IT*HD&I))^@)@K@@@@ 0)^@)^@)^@)^@)^[4GD+H->^[2G(-G-9^[&H92^[&HD2IT4HF
)@@G@@^[<H[-IL-GT4G(2^[4H8)H95I-0I(4 0)^[BG(,G(2GD4G(3@B@@@@ 0)^@)^@)^@)^@)^[4HG
)@@G@@I9\^[(H13I-2I(<I-(H9,IS,@^@@@@ 0)^@)^@)C*=CTGD9NC*) *)@J@@@@ 0)^@)^@)^@)HH
)@@G@@^@)^[$G(,G(2GD?H-9^[4H[>^[3GD!G*)GD3^[ ^-[D-GDDBD0)G(8GT>I[4^[4H[>^[<I(2HI
)@@G@@IL>H14@J@@@@ 0)^@)^@)^@)^@)^[\I(4I[5I))I9\IL=^[(IS)H->G14^[%I(3I-(G1(G(=HJ
)@@G@@ ))GL?GD,HS)G1(H-?G(=^[-H1=^@)@I@@@@ 0)^@)^@)^@)^@)^[3I-\IL>G))HD,I-\^[4HK
)@@G@@H[>^[\I(4I[5I))IT4IL(H1$ 0)^[BG(,G(2GD4G(3^[4I9\@A@@@@ 0)^@)^@)^@)^@)^[(HL
)@@G@@H13I-2I(<I-(H9,IS,@F@@@@ 0)^@)^@)C*=E9JEL^ES)CLT )/^S)H9&^[7H92G-3^[4H8)HM
)@@G@@I-2GD,IT&G(2B0) *)@J@@@@ 0)^@)^@)^@)^@)^[=H9>IS)GC)IT(H(0H->^[+H-\GT:^[4HN
)@@G@@IL-H13G1>IK)G12H9!^[(H10I(4^[?H9<^[4H8)^@)@J@@@@ 0)^@)^@)^@)^@)^[\I(4I[5HO
)@@G@@I))H-\GS)GD3^[=G(&HD,G(=^[+JC)CC0^[-H1=^[[AC)IL>IT0G(<I-(I1>H-9 0)@K@@@@HP
)@@G@@ 0)^@)^@)^@)^@)^[OH[>^[<H9,I->H14IS)H9&^[[A@)HD3^[(H1(I-(GD?H-9^[=G(<IL>HQ
)@@G@@H(>H14G(=^[3H8)I-*GD4^@)@K@@@@ 0)^@)^@)^@)^@)^[4H[>^[<I(2IL>H14^[(H10I(4HR
)@@G@@^[7H92G))HD3^[(H1<H-5G->G))HD,^[4H[>^[4IL-H13G1>IK,^@)@E@@@@ 0)^@)^@)^@)HS
)@@G@@^@)^[BG(,G(2GD4G(3^[4H[2G(>^[(H13I-2I(<I-(H9,IS,@[@@@@ 0)^@)@^@@@@^@)^@)HT
)@@G@@^@)^@)^@)C- C0)^@)@K@@@@C*=DDICLGDTREL^^[ EDPC0)^@)^@)C*=E[[EL[D(N^@)^@)HU
)@@G@@^@)^@)^@) 0)HD,I[5I))GL?GD,HS)I9\IL=^[-IL>GC)^@)@K@@@@C*=DDICLGDS)^@)C(LHV
)@@G@@E(A^@)^@)^@)C*=E[[EL[D(N S1 )?D@1^@)^@) 0)IT(H1$H->^[+H--H1:^[&H92^[(H10HW
)@@G@@I(4^@)@K@@@@C*=DDICLDE-N^@)C(LE(A^@)^@)^@)C*=E[[EL[D(N S1 )?ES4^@)^@) 0)HX
)@@G@@^S)H9&^[+HD4IS)I[>IK)GT*GD2^[\G0)DC)@L@@@@C*=DDICTIE))^@)C(LE(A^@)^@)^@)HY
)@@G@@C*=E[[EL[D(N S1 )?ES5^@)^@) 0)^S)H9&^[<H[-IL3^[0G(2^[(H10I(4^[7H92G))^@)HZ
)@@G@@@K@@@@C*=D9PE-]D-FE9MC))C(LE(A^@)^@)C*=E[[EL[D(N S2^@)^@)^@)^@) 0)H95I-0IA
)@@G@@I(4^[+H--H1:^[7H92G))GD2G(-^@)@K@@@@C*=D9PE-]D-F^@)C(LE(A^@)^@)^@)C*=E[[IB
)@@G@@EL[D(N S3 )?D@1^@)^@) 0)IT(H1$H->^[+H--H1:^[&H92^[\I(4I[5I))@K@@@@C*=D9PIC
)@@G@@E-]DDOES)C(LE(A^@)^@)^@)C*=E[[EL[D(N S3 )?ES4^@)^@) 0)^S)H9&^[+HD4IS)I[>ID
)@@G@@IK)GT*GD2^[\G0)D8)@K@@@@C*=D9PE-#D1O^@)C(LE(A^@)^@)^@)C*=E[[EL[D(N S3 )?IE
)@@G@@ES5^@)^@) 0)^S)H9&^[<H[-IL3^[0G(2^[\I(4I[5I))E8)@[@@@@ 0)^@)@G@@@@ 0)I(4IF
)@@G@@HD?HD4JC)G15H1<I-(H9,^[4H8)GT-H-<I(?GD4G*)GD+IT\H-5I->^[6GD?I(>^@,@[@@@@IG
)@@G@@ 0)^@)@A@@@@C0)^@)^@)^@)^@)C1PD1#^@)^@)^@) K1^@)@M@@@@CD]ES%^@)^@)^@)D1[IH
)@@G@@D( ^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)IT(H(0H->^[-GL3H9?I(4G*)I1-H-5II
)@@G@@G*)G15H1<I-(H9,^@)@F@@@@^@)^@)^@)^@)^@)C-J^@)^@)^@)^@)C0*AC(B)0^@?C0*AC(IJ
)@@G@@^[ EDP^@!C0*AC(^@)@A@@@@^@)^@)^@)^@)^@)C(IC))^@)^@)^@)C0*AC(@[@@@@ 0)^@)IK
)@@G@@@A@@@@E@)^@)^@)^@)^@)E[MD9#^@)^@)^@) K1^@)@M@@@@C*=C9 E)%^@)^@)D1[D( ^@)IL
)@@G@@^@)^@)F@9^@)^@)^@)^@)^@)^@)^@)^@) 0)G1>I-<H@)GT*GD2GD<I->IK)G12H9!^[(H10IM
)@@G@@I(4^[7H92G))@M@@@@C*=E[PE)%^@)^@)D1[D( ^@)^@)^@)F@1A@)^@)^@)^@)^@)^@)^@)IN
)@@G@@^@) 0)I[5I))GT*GD2GD<I->IK)HD,I-\^[\I(4I[5I))I9\IL=^@)@M@@@@C*=D-JD9F K)IO
)@@G@@^@)D1[D( ^@)^@)^@) (SBC)^@)^@)^@)^@)^@)^@)^@) 0)D-JD9F^[-I))H1>J[4^[<H[-IP
)@@G@@IL-GT4G(2^[(H0)HD,I[5I))@K@@@@C*=ET[E1  K)^@)D1[D( ^@)^@)^@) (SAC0^@)^@)IQ
)@@G@@^@)^@)^@)^@)^@) 0)ET[E1 ^[<H[-IK)HD,^[\I(4I[5I))I9\IL=@M@@@@^@)^@)^@)^@)IR
)@@G@@^@)C-J^@)^@)^@)^@)CD]ES*E@*A@?A@( C.F@9^@?^[[D1^^[[AK?EK3^@) 0)G9>I))HD,IS
)@@G@@I[5I))GT*GD2GD<I->IK)^@)@M@@@@^@)^@)^@)^@)^@)C-J^@)^@)^@)^@)CD]ES*E@*A@?IT
)@@G@@A@( C.F@1A@) ))D(GE*)CC3 -[A))^@,^[3I-5G1&^[(H0)H95I-0I(4^[7H92G))@J@@@@IU
)@@G@@^@)^@)^@)^@)^@)C-J^@)^@)^@)^@)E@*A@?A@(B)0^@?^[ D1^^@)^@) 0)G((I-*G(2^[GIV
)@@G@@D9JDS)H92^[NCDQC*)@H@@@@C*=CLGDS%^@)^@)D1[D( ^@)^@)^@)F@1A@)^@)^@)^@)^@)IW
)@@G@@^@)^@)^@) 0)HD,IT>IL4^[+H--H1:@K@@@@C*=D9PE)%^@)^@)D1[D( ^@)^@)^@)F@1A@)IX
)@@G@@^@)^@)^@)^@)^@)^@)^@) 0)H95I-0I(4^[NCDQC*$G))GT*GD2GD<I->IK)@L@@@@C*=D1 IY
)@@G@@F[O K)^@)D1[D( ^@)^@)^@)F@9^@)^@)^@)^@)^@)^@)^@)^@) 0)IT:HD0^[,G(8I))HD,IZ
)@@G@@I[5I))GT*GD2GD<I->IK)^@)@J@@@@^@)^@)^@)^@)^@)C(S^@)^@)^@)^@)A@? LK @0 )0JA
)@@G@@ C)^@)^@)^@)^@) 0)G(8G(<I(4G*)IT*HD&I))I--GL?G(3@B@@@@^@)^@)^@)^@)^@)C-JJB
)@@G@@^@)^@)^@)^@)AC) ))C(IC))@J@@@@C*=EL CT[D-G K)D1[D( ^@)^@)^@)^@)^@)^@)^@)JC
)@@G@@^@)^@)^@)^@)^@) 0)G9>I))H--IT4^[NCDQC*$G))GT*GD2@I@@@@^@)^@)^@)^@)^@)D))JD
)@@G@@^@)^@)^@)^@)CC3 -[A))^@)^@)^@)^@)^@)^@) 0)G9>I))H95I-0I(4^[7H92G))@J@@@@JE
)@@G@@^@)^@)^@)^@)^@)D(GE*?E*)^@)^@)CC3 )0^@)^@)^@)^@)^@)^@)^@) 0)IT4IL(I@)H95JF
)@@G@@I))H--IT4^[<H[-IK)@J@@@@^@)^@)^@)^@)^@)C-NCS)^@)^@)^@)CC3 )3A0)^@)^@)^@)JG
)@@G@@^@)^@)^@) 0)IL>I1>IL3G*)IL>G9(IT4G(2IS)^@)@B@@@@^@)^@)^@)^@)^@)C-J^@)^@)JH
)@@G@@^@)^@)AC) ))C(IC))@L@@@@C*=ETOD9MC*%^@)D1[D( ^@)^@)^@)^@)^@)^@)^@)^@)^@)JI
)@@G@@^@)^@)^@) 0)G1\IL<G*)H95I-0I(4^[\G0)H95I-0I(4^[7H92G))@O@@@@^@)^@)^@)^@)JJ
)@@G@@^@)ES)^@)^@)^@)^@)CC4 )0 )%CC1^@)^@)^@)^@)^@) 0)I-*HD3^[(IS)I9*GD4^[4H[>JK
)@@G@@^[3H[(G14^[2H95I-(H1>IS)I9\I(?G))G-\@B@@@@^@)^@)^@)^@)^@)C-J^@)^@)^@)^@)JL
)@@G@@AC) ))C(IC))@J@@@@C*=EL D9KC(I K)D1[D( ^@)^@)^@)F@9^@)^@)^@)^@)^@)^@)^@)JM
)@@G@@^@) 0)G1\IL<G*)I-\^[,G(7^[7H92G))^@)@M@@@@C*=CTGD9NC*%^@)D1[D( ^@)^@)^@)JN
)@@G@@F@1A@)^@)^@)^@)^@)^@)^@)^@) 0)GD?H-(G9,^[\I(4I[5I))I9\IL=^[-H1=^[\I(4I[5JO
)@@G@@I))^@)@K@@@@C*=CDGD-DC9I K)D1[D( ^@)^@)^@) (SAC0^@)^@)^@)^@)^@)^@)^@) 0)JP
)@@G@@IL>HD,HD4^[\I(4I[5I)) *)H1\^[3I-\IL>@M@@@@^@)^@)^@)^@)^@)CT[D-G -[CLN [KJQ
)@@G@@ @0 )0 C(^@)^@)^@)^@)^@)^@)A@?CD]ES*E@*A@?A@( C) 0)G(8G(<I(4G*)IL>H*)IT*JR
)@@G@@HD&I-3@J@@@@CC)^@)^@)^@)^@)C(LE*)^@)^@)^@) S*E@*A@?AC(B00 C: S*E@*A@?A@(JS
)@@G@@B)0 C) 0)IT>I))G1\IK)I->IT4^@)@P@@@@^@)^@)^@)^@)^@)C-J^@)^@)^@)^@)CC) ))JT
)@@G@@CT[D-G -[CLN [K @0 )0 C(^@1 -[CLN [K @0 )0 C(^@,^[3HT(I@)IT4H92G*)H92^[(JU
)@@G@@H1(I))IT7HD4GT*^@)@I@@@@^@)^@)^@)^@)^@)C-J^@)^@)^@)^@)CC.A@) ))CT[D-G -[JV
)@@G@@CLN [K @0 )0 C(^@0 -[CLN [K @0 )0 C(@B@@@@^@)^@)^@)^@)^@)C-J^@)^@)^@)^@)JW
)@@G@@AC) ))C(IC))@L@@@@C*=D9AC1NC(O K)D1[D( ^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)JX
)@@G@@^@) 0)GT2G(-I->^[\G1&IT>I))HD,^[(H10I(4^[7H92G))@H@@@@^@=C-J^[K @1 )1 C.JY
)@@G@@CLT^@?^[GD9[C))CC3 -K @1 C?AK)^@)^@)^@) 0)G9>I))H9&G13G(4^@)@I@@@@^@)^@)JZ
)@@G@@^@)^@)^@)D9I^@)^@)^@)^@)E@*A@?AC(^@)^@)^@)^@)^@)^@) 0)I-*HD3^[&H92^[AC-[KA
)@@G@@ETBC(O@M@@@@^@)^@)^@)^@)^@)CDI -P^@)^@)^@)CC3 )1^@)^@)^@)^@)^@)^@)^@) 0)KB
)@@G@@H9,G*)H->IT3^[&H92^[+H94I-\H*)H9&^[?H9\I@)I->IT4@J@@@@^@)^@)^@)^@)^@)C*=KC
)@@G@@D1 F[O^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)H9,G*)GT*GD2^[-I))GC)I-(H(>^@)KD
)@@G@@@G@@@@C0)^@)^@)^@)^@)C1JELH^@)^@)^@)A0?B@?A)?AK?AC6^@)^@)^@)^@) 0)DLBC))KE
)@@G@@G1\IL!@H@@@@^@)^@)^@)^@)^@) S*C0)^@)^@)^@)A@7A@?A@1A8? )?^)!AC(^@)^@) 0)KF
)@@G@@DLBC))I-\^@= *1^@)@^@@@@^@)^@)^@)^@)^@)D9AC0)^@)@K@@@@^@)^@)^@)^@)^@)D9IKG
)@@G@@^@)^@)^@)^@)E@*A@?AC(B*0^@)^@)^@)^@)^@) 0)I-*HD3^[&H92^[,H92H(-H))H9&G13KH
)@@G@@G(4^@)@J@@@@^@)^@)^@)^@)^@)CC)^@)^@)^@)^@)F@9 -[AS)^@)^@)^@)^@)^@)^@) 0)KI
)@@G@@GD=HL5IT4^[3H[(G14^[(H1=G(8^@)@K@@@@^@)^@)^@)^@)^@)D(NDC)^@)^@)^@)CC3 - KJ
)@@G@@^-DD1]DDOES)^@)^@)^@) 0)GT-H-<^@<^[\G0)GL(I-3^[4H8)H9&G13G(4@J@@@@^@)^@)KK
)@@G@@^@)^@)^@)D-NET#^@)^@)^@)CC2 )?CC3^@)^@)^@)^@)^@)^@) 0)GD=HL5IT4^[(H10I(4KL
)@@G@@^[7H92G))^@)@^@@@@^@)^@)^@)^@)^@)D9AC0)^@)@B@@@@^@)^@)^@)^@)^@)C-J^@)^@)KM
)@@G@@^@)^@)AC) ))C(IC))@J@@@@C*=E9JEL^ES%^@)D1[D( ^@)^@)^@)^@)^@)^@)^@)^@)^@)KN
)@@G@@^@)^@)^@) 0)GL?H9<HS)I-2GD,IT&G(2^[(H(-G9>@H@@@@^@=C-J^[K @1 )1 C.CLT^@?KO
)@@G@@^[GD9[C))EK1 -K @1 C?AK)^@)^@)^@) 0)I9\IL=^[<H95H14^@)@K@@@@^@)^@)^@)^@)KP
)@@G@@^@)CDI -P^@)^@)^@)CC0 )1^@)^@)^@)^@)^@)^@)^@) 0)GL-GT:^[5I@)G1\IK)HD,I[5KQ
)@@G@@I))I9\IL=^@)@B@@@@^@)^@)^@)^@)^@)CLO^@)^@)^@)^@)CC1 )0 )%CC0@B@@@@^@)^@)KR
)@@G@@^@)^@)^@)C-J^@)^@)^@)^@)AC) ))C(IC))@M@@@@C*=C1^CDNE-MCDIES%^[ICDHC*)^@)KS
)@@G@@D@2^@)^@)^@)^@)^@)^@)^@)^@) 0)C1DC(GC-[E-[^[4H8)CDNCTDDC)I-2GD,IT?GD4HD\KT
)@@G@@H0)^@)@M@@@@C*=CDNC1^E-MCDIES%^[ICDHC*)^@)ES1^@)^@)^@)^@)^@)^@)^@)^@) 0)KU
)@@G@@CDNCTDDC)I-\^[ADD D-^CDOCC)I-2GD,IT?GD4HD\H0)^@)@L@@@@^@)^@)^@)^@)^@)D)?KV
)@@G@@E@*A@?A@(^@)CC3 - ^-OCD]D-  -[AS)^@)^@) 0)HD,G->J@)HD,I-\^[4GD+H->^[-H1=KW
)@@G@@^[&G(4GT*^@)@^@@@@^@)^@)^@)^@)^@)C(IC))^@)@[@@@@ 0)^@)@]@@@@ 0)D-JCD^^@!KX
)@@G@@@#@@@@ 0)ETOD9MC*) *)^@)@L@@@@ 0)^@)^@)^@)^@)E[2H9<^[4H8)G9>H1>IL-I->^[-KY
)@@G@@^[G [\GD= C)H92^[N [4H92G*(^[(H13I-2I(<I-(H9,^[&IL\H*\I-\^[-@D@@@@ 0)^@)KZ
)@@G@@^@)^@)^@)G9(I1>H0)G1(G(?G))GD,G))IT5GL&HD>H-= 0)@^@@@@ 0)^@)^@)^@)^@)E(3LA
)@@G@@GD$G*'@[@@@@ 0)^@)@C@@@@ 0)^@)^@)^@)^@)D-JCD^^@)^@)^@)CC0 -K [& C?IS)^@)LB
)@@G@@@[@@@@ 0)^@)@N@@@@ 0)^@)^@)^@)^@)I9*G(2G*)E@)HD3^[4H[>^[<GD?H-(H1$^[0IL\LC
)@@G@@GS$IS)^-KELJCS)H--GL>H)?^[&^[(IS)I-*G*)G1(G(?G))H15H(+G(2^@)@L@@@@ 0)^@)LD
)@@G@@^@)^@)^@)H9&^[4H[>^[-G-=IL>IT3^[4H8)G1>I-<H@?^[-H1=^[3^[(IS)I-*G*)HD,HD4LE
)@@G@@HD-H))IT5GL&HD>H-= 0)^@)@[@@@@ 0)^@)@A@@@@E@)^@)^@)^@)^@)^-KELJCS)^@)^@)LF
)@@G@@ K1^@)@K@@@@D-JCD^ K)^@)^@)D1[D( ^@)^@)^@) 9G^@)^@)^@)^@)^@)^@)^@)^@) 0)LG
)@@G@@G9>H1>IL-I->^[G^[(H13I-2I(<I-(H9,^@)@K@@@@ETOD9MC*%^@)^@)D1[D( ^@)^@)^@)LH
)@@G@@ 9N^@)^@)^@)^@)^@)^@)^@)^@) 0)G9>H1>IL-I->^[N^[(H13I-2I(<I-(H9,^@)@J@@@@LI
)@@G@@CC)^@)^@)^@)^@)^- EDP^@)^@)^@)E@*AC?AC(^@)^@)^@)^@)^@)^@) 0)CC)G1(G(?G))LJ
)@@G@@ [2G($HD3I->IK(^@)@J@@@@E*)^@)^@)^@)^@)^- EDP^@)^@)^@)E@*AC?AK(^@)^@)^@)LK
)@@G@@^@)^@)^@) 0)E*)G1(G(?G)) [-G-=IL>IT3 C)^@)@L@@@@ES)^@)^@)^@)^@)^- EDP^@)LL
)@@G@@^@)^@)E@*AC?AS(^@)^@)^@)^@)^@)^@) 0)HD,HD4HD-H))IT5GL&HD>H-=^[\G0)E*)G1(LM
)@@G@@G(?G))@J@@@@C1A K)^@)^@)^@)^-AE(ICS)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)LN
)@@G@@C1?GD$G9>G))G1(G(?G))G15H1<^@)@J@@@@E))^@)^@)^@)^@)^- EDP^@)^@)^@)C1A @1LO
)@@G@@ C)^@)^@)^@)^@)^@)^@) 0)C9>I))H1>J[4^[3I(+G1(G(?G))^S)@J@@@@^@)^@)^@)^@)LP
)@@G@@^@)^- D1^^@)^@)^@)E*/E)!B0$^8-^8?^8' [P @%E)( *"^8%^8(BK$E**^8'^-#C)*E)(LQ
)@@G@@BK$ C$@[@@@@ 0)^@)@L@@@@^@)^@)^@)^@)^@)E@*A@?A@(^@)^@)CDVC1A [N C'C1A [NLR
)@@G@@ S1 C'C1A [N S2 DX^@,^[BG(,G(2GD4G*)HD,IT4IL5GT4HD\H0)@^@@@@^@)^@)^@)^@)LS
)@@G@@^@)^- D1^^@)___H))H9&G13G(4^@)@J@@@@^@)^@)^@)^@)^@)CC)^@)^@)^@)^@)F@9 -[LT
)@@G@@AS)^@)^@)^@)^@)^@)^@) 0)GD=HL5IT4^[3H[(G14^[(H1=*[S@@@*SDFF*@B@@@@      LU
)@@G@@  DEF                           .   @[@@@@.     @E@@@@. DEFINE FIELDS ANLV
)@@G@@D BITS FOR FIASG$ FAMILY OF SUBROUTINES.  @[@@@@.     @A@@@@. FIELDS IN LW
)@@G@@FITEM$ PACKET FIPKT$.   @[@@@@.     @E@@@@FINAME  EQUF    FIPKT$+0      LX
)@@G@@        . INTERNAL FILE NAME  @E@@@@FXFILE  EQUF    FIPKT$+2            LY
)@@G@@  . EXTERNAL FILE NAME  @D@@@@FXQUAL  EQUF    FIPKT$+4              . QULZ
)@@G@@ALIFIER     @D@@@@FXEQUP  EQUF    FIPKT$+6,,S1          . EQUIPMENT CODEMA
)@@G@@@E@@@@FXFLAG  EQUF    FIPKT$+6,,S2          . PERMISSIONS FLAGS   @E@@@@MB
)@@G@@FXFRCY  EQUF    FIPKT$+6,,S4          . RELATIVE F CYCLE    @G@@@@FXFCYCMC
)@@G@@  EQUF    FIPKT$+6              . ABSOLUTE FCYCLE (ACTUALLY T3)   @[@@@@MD
)@@G@@.     @#@@@@. BITS FOR FXFLAG @[@@@@.     @E@@@@FXBXCL  EQU     040     ME
)@@G@@              . HAVE EXCLUSIVE USE  @E@@@@FXBRKN  EQU     020           MF
)@@G@@        . READ KEY NEEDED     @E@@@@FXBWKN  EQU     010                 MG
)@@G@@  . WRITE KEY NEEDED    @D@@@@FXBWIN  EQU     004                   . WRMH
)@@G@@ITE INHIBIT @D@@@@FXBRIN  EQU     002                   . READ INHIBIT  MI
)@@G@@@C@@@@FXBWAD  EQU     001                   . WAD FILE@[@@@@.     @B@@@@MJ
)@@G@@. DEFINE BITS PASSED BY USER IN UPPER A0. @[@@@@.     @E@@@@FIUFOR  EQU MK
)@@G@@    001                   . USE NAME FORCED     @F@@@@FIUGIV  EQU     00ML
)@@G@@2                   . USE NAME PASSED IN A1-A2  @G@@@@FIUXCL  EQU     00MM
)@@G@@4                   . USER REQUIRES EXCLUSIVE USE     @G@@@@FIUPRD  EQU MN
)@@G@@    010                   . USER REQUIRES READ PERMISSION   @G@@@@FIUPWRMO
)@@G@@  EQU     020                   . USER REQUIRES WRITE PERMISSION  @F@@@@MP
)@@G@@FIUOPT  EQU     040                   . USER PASSES OPTIONS IN A3 @[@@@@MQ
)@@G@@.     @E@@@@. DEFINE FREE BITS.  NOTE THAT THESE DETERMINE THE ORDER    MR
)@@G@@@F@@@@. OF THE FREE OPTIONS VECTOR, AND THAT SOME PEOPLE DO ODD/EVEN    MS
)@@G@@@ @@@@. TESTS TO TEST FOR FIFUSE.   @[@@@@.     @D@@@@FIFUSE  EQU     00MT
)@@G@@1                   . FREE USE NAME @D@@@@FIFASG  EQU     002           MU
)@@G@@        . FREE FILE     @E@@@@FIFXCL  EQU     004                   . FRMV
)@@G@@EE EXCLUSIVE USE  @F@@@@FIFUIF  EQU     010                   . FREE FILMW
)@@G@@E THRU USENAME    @[@@@@.     @B@@@@. THE ABOVE ARE CALLED IN BY: FIDEF$MX
)@@G@@.     @D@@@@. IF ARGUMENT IS GIVEN PRODUCE ELT$ PACKET EQUFS.     @[@@@@MY
)@@G@@.     @B@@@@P         PROC      *1                .   @B@@@@FIDEF$*   NAMZ
)@@G@@ME      0                 .   @D@@@@          ON        P(1)>0          NA
)@@G@@  . IF ARG GIVEN  @[@@@@.     @D@@@@ELT$*     EQUF      P(1,1),P(1,2)   NB
)@@G@@  . OFFSET,INDEX  @[@@@@.     @F@@@@FQL*      EQUF      ELT$,,S1        NC
)@@G@@  . FILE QUALIFIER LENGTH     @E@@@@FNL*      EQUF      ELT$,,S2        ND
)@@G@@  . FILE NAME LENGTH    @D@@@@FCL*      EQUF      ELT$,,S3          . F-NE
)@@G@@CYCLE LENGTH@E@@@@RKL*      EQUF      ELT$,,S4          . READ KEY LENGTNF
)@@G@@H     @E@@@@WKL*      EQUF      ELT$,,S5          . WRITE KEY LENGTH    NG
)@@G@@@F@@@@IQF*      EQUF      ELT$,,S6          . IMPLIED QUALIFIER FLAG    NH
)@@G@@@E@@@@ENL*      EQUF      ELT$+1,,S1        . ELEMENT NAME LENGTH @F@@@@NI
)@@G@@EVL*      EQUF      ELT$+1,,S2        . ELEMENT VERSION LENGTH    @E@@@@NJ
)@@G@@ECL*      EQUF      ELT$+1,,S3        . ELEMENT CYCLE LENGTH@G@@@@CFN*  NK
)@@G@@    EQUF      ELT$+1,,S4        . CONTINUATION FILE FIELD NUMBER  @G@@@@NL
)@@G@@ECC*      EQUF      ELT$+1,,S5        . ELEMENT CYCLE SIGNAL CHARACTER  NM
)@@G@@@E@@@@BEC*      EQUF      ELT$+1,,S6        . BINARY ELEMENT CYCLE@[@@@@NN
)@@G@@.     @D@@@@FQUAL*    EQUF      ELT$+2            . FILE QUALIFIER@D@@@@NO
)@@G@@FNAME*    EQUF      ELT$+4            . FILE NAME     @C@@@@FCYC*     EQNP
)@@G@@UF      ELT$+6            . F-CYCLE @C@@@@RKEY*     EQUF      ELT$+7    NQ
)@@G@@        . READ KEY@D@@@@WKEY*     EQUF      ELT$+8            . WRITE KENR
)@@G@@Y     @D@@@@ENAME*    EQUF      ELT$+9            . ELEMENT NAME  @E@@@@NS
)@@G@@EVER*     EQUF      ELT$+11           . ELEMENT VERSION     @D@@@@ECYC* NT
)@@G@@    EQUF      ELT$+13           . ELEMENT CYCLE @[@@@@.     @B@@@@      NU
)@@G@@    OFF       P(1)>0            .   @B@@@@          END                 NV
)@@G@@        .   @[@@@@/.    @[@@@@.     @#@@@@. TO ASSIGN A FILE@[@@@@.     NW
)@@G@@@B@@@@.         FIASG,'OPTS' PACKET,BITS NAME   @[@@@@.     @B@@@@P     NX
)@@G@@    PROC      *2                .   @B@@@@FIASG*    NAME                NY
)@@G@@        .   @D@@@@FB('F')   $EQU      1                 . USENAME FORCEDNZ
)@@G@@@F@@@@FB('U')   $EQU      2                 . USENAME GIVEN IN A1,A2    OA
)@@G@@@G@@@@FB('X')   $EQU      4                 . EXCLUSIVE ASSIGNMENT REQUIOB
)@@G@@RED   @F@@@@FB('R')   $EQU      8                 . READ PERMISSION REQUOC
)@@G@@IRED  @F@@@@FB('W')   $EQU      16                . WRITE PERMISSION REQOD
)@@G@@UIRED @E@@@@FB('O')   $EQU      32                . OPTIONS PASSED IN A3OE
)@@G@@@F@@@@ML        $EQU      P(1,2)            . MODE LETTERS 'FXR' ETC.   OF
)@@G@@@D@@@@BITS      $EQU      0                 . INITIAL VALUE @F@@@@I     OG
)@@G@@    $DO       $SL(ML) ,;        . FOR EACH LETTER GIVEN...  @F@@@@BITS  OH
)@@G@@    $EQU      BITS++FB($SS(ML,I)) . ACCUMULATE MODE BITS    @E@@@@BITS  OI
)@@G@@    $EQU      BITS++(P(2)>0->2!0)++(P(0)>1->32!0)     @D@@@@          $IOJ
)@@G@@F       P(1)>0            . ANY SPEC 1?   @G@@@@ $DO \BITS , LA,U   A0,POK
)@@G@@(1,1)         . NO BITS, GET PACKET ADDR ONLY   @G@@@@ $DO \\BITS , LA  OL
)@@G@@  A0,(BITS,P(1,1))  . GET BOTH BITS AND PACKET ADDR   @#@@@@          $EOM
)@@G@@NDF   @D@@@@ $DO P(2)>0 , DL    A1,[P(2,*1)->'*']P(2,1),P(2,2)    @D@@@@ON
)@@G@@ $DO P(0)>1 , LA    A3,($CFS(P(0,1))LS) . GET OPTIONS @D@@@@          LMOO
)@@G@@J       X11,FIASG$        . ASSIGN FILE   @#@@@@          $END    @[@@@@OP
)@@G@@.     @F@@@@. THIS PROCEDURE IS USED TO CALL THE DIAGNOSTIC ROUTINE FIDIOQ
)@@G@@AG$   @F@@@@. IF A CSF$ ERROR IS DETECTED THE ERROR$ REP IS CALLED.  IF OR
)@@G@@THE   @D@@@@. ERROR IS PERMISSIONS FIDIAG PRINTS THE MESSAGE.     @[@@@@OS
)@@G@@.     @B@@@@P         PROC      *0,1              .   @B@@@@FIDIAG*   NAOT
)@@G@@ME      FIDIAG$           .   @D@@@@          LMJ       X11,P(0,0)      OU
)@@G@@  . CALL ROUTINE  @B@@@@          END                         .   @[@@@@OV
)@@G@@.     @F@@@@. THIS PROCEDURE IS CALLED TO FREE A FILE WHICH HAS BEEN ASSOW
)@@G@@IGNED @ @@@@. VIA FIASG$. THE CALL IS:    @[@@@@.     @A@@@@.         FIOX
)@@G@@FREE    NAME FREECODE   @[@@@@.     @B@@@@P         PROC                OY
)@@G@@        .   @D@@@@FIFREE*   NAME      FIFREE$           . NORMAL FREE   OZ
)@@G@@@E@@@@FIFRIM*   NAME      FIFRIM$           . RETURN FREE IMAGE   @[@@@@PA
)@@G@@.     @D@@@@ DO P(1)>0 , DL A1,P(1,1),P(1,2)      . GET FILE NAME @E@@@@PB
)@@G@@ DO P(2)>0 , L  A0,P(2,1),P(2,2),P(2,3) . GET FREE CODE     @F@@@@      PC
)@@G@@    LMJ       X11,P(0,0)        . CALL SELECTED ROUTINE     @[@@@@.     PD
)@@G@@@B@@@@          END                         .   @[@@@@/.    @[@@@@.     PE
)@@G@@@B@@@@. GENERATE FIASG$ PACKET.  THE CALLS ARE: @[@@@@.     @C@@@@.     PF
)@@G@@    FIPFIL    'Q','QUAL' 'F','FILE' ....  @[@@@@.     @F@@@@. THE FIRST PG
)@@G@@SUBFIELD OF EACH FIELD IS A CODE LETTER, IN QUOTES :  @[@@@@.     @ @@@@PH
)@@G@@.         'Q' - QUALIFIER     @^@@@@.         'F' - FILENAME@^@@@@.     PI
)@@G@@    'R' - READKEY @^@@@@.         'W' - WRITEKEY@ @@@@.         'C' - FIPJ
)@@G@@LECYCLE     @[@@@@.     @F@@@@. IF THE PROCEDURE FIPELT IS CALLED THE FUPK
)@@G@@LL 14 WORD ELT$ PACKET  @F@@@@. IS GENERATED AND THE FOLLOWING ADDITION PL
)@@G@@FIELDS ARE ALLOWED.     @[@@@@.     @ @@@@.         'E' - ELEMENT NAME  PM
)@@G@@@ @@@@.         'V' - VERSION NAME  @[@@@@.     @F@@@@. THE SECOND SUBFIPN
)@@G@@ELD OF EACH FIELD IS A STRING OF NOT MORE THAN  @F@@@@. 6 OR 12 LETTERS PO
)@@G@@(DEPENDING ON THE NORMAL LENGTH OF THAT FIELD)  @ @@@@. ENCLOSED IN QUOTPP
)@@G@@ATION MARKS.@[@@@@.     @B@@@@P         PROC      *8                .   PQ
)@@G@@@E@@@@FIPFIL*   NAME      0                 . ONLY FILE PORTION   @G@@@@PR
)@@G@@FIPELT*   NAME      1                 . BOTH FILE AND ELEMENT PORTIONS  PS
)@@G@@@[@@@@.     @F@@@@B(1)      EQU       0D                . PRESENCE BITS PT
)@@G@@(2 WORDS)   @D@@@@Q(1)      EQU       0D                . QUALIFIER (2) PU
)@@G@@@D@@@@F(1)      EQU       0D                . FILENAME (2)  @D@@@@R(1)  PV
)@@G@@    EQU       0                 . READKEY (1)   @D@@@@W(1)      EQU     PW
)@@G@@  0                 . WRITEKEY (1)  @D@@@@C(1)      EQU       0         PX
)@@G@@        . CYCLE (1)     @E@@@@E(1)      EQU       0D                . ELPY
)@@G@@EMENT NAME (2)    @E@@@@V(1)      EQU       0D                . VERSION PZ
)@@G@@NAME(2)     @[@@@@.     @^@@@@I DO P-1 , FISCAN   .   @[@@@@.     @B@@@@QA
)@@G@@          +         B(1)              .   @B@@@@          +         Q(1)QB
)@@G@@              .   @B@@@@          +         F(1)              .   @B@@@@QC
)@@G@@          +         C(1)              .   @B@@@@          +         R(1)QD
)@@G@@              .   @B@@@@          +         W(1)              .   @B@@@@QE
)@@G@@          ON        P(0,0)            .   @B@@@@          +         E(1)QF
)@@G@@              .   @B@@@@          +         V(1)              .   @B@@@@QG
)@@G@@          +         0                 .   @B@@@@          OFF       P(0,QH
)@@G@@0)            .   @[@@@@.     @^@@@@          END       .   @[@@@@.     QI
)@@G@@@A@@@@. PROCEDURE TO PROCESS EACH FIELD.  @[@@@@.     @F@@@@FISCAN*   PRQJ
)@@G@@OC      *0,0              . SECOND GLOBAL PASS ONLY   @[@@@@.     @A@@@@QK
)@@G@@ DO P(I,1)='Q' ,Q*(1) FIW2 66 .     @A@@@@ DO P(I,1)='F' ,F*(1) FIW2 60 QL
)@@G@@.     @A@@@@ DO P(I,1)='C' ,C*(1) FIW1 54 .     @A@@@@ DO P(I,1)='R' ,R*QM
)@@G@@(1) FIW1 48 .     @A@@@@ DO P(I,1)='W' ,W*(1) FIW1 42 .     @B@@@@      QN
)@@G@@    ON        P(0,0)            .   @A@@@@ DO P(I,1)='E' ,E*(1) FIW2 30 QO
)@@G@@.     @A@@@@ DO P(I,1)='V' ,V*(1) FIW2 24 .     @B@@@@          OFF     QP
)@@G@@  P(0,0)            .   @B@@@@ DO FOUND(1)=0 , +09                  .   QQ
)@@G@@@B@@@@          END                         .   @[@@@@.     @D@@@@. PROCQR
)@@G@@EDURE TO LEFT JUSTIFY AND STORE THE COMPONENT.  @[@@@@.     @B@@@@Z     QS
)@@G@@    PROC      *1,0              .   @B@@@@FIW2*     NAME                QT
)@@G@@        .   @B@@@@P**(I,2)  EQU       P(I,2)++0D        .   @F@@@@ DO 12QU
)@@G@@ , DO (P(I,2)*/-66)**077=0 ,P**(I,2) EQU P(I,2)*/6+05 .     @B@@@@FIW1* QV
)@@G@@    NAME                        .   @F@@@@ DO 06 , DO (P(I,2)*/-30)**077QW
)@@G@@=0 ,P**(I,2) EQU P(I,2)*/6+05 .     @B@@@@*         EQU       P(I,2)    QX
)@@G@@        .   @B@@@@B**(1)    EQU       B(1)++1D*/Z(1,1)   .  @B@@@@FOUND*QY
)@@G@@(1) EQU       1                 .   @B@@@@          END                 QZ
)@@G@@        .   ___ LETTERS (DEPENDING ON THE NORMAL LENGTH OF THAT FIELD)  RA
)@@G@@@ @@@@. ENCLOSED IN QUOTATION MARKS.@[@@@@.     @B@@@@P         PROC    RB
)@@G@@  *8                .   *[S@@@*SDFF*@[@@@@.     @F@@@@. THIS PROC DOES ARC
)@@G@@ PCT$, AND RETURNS A0=CPU TIME, A1=MEM TIME.    @F@@@@. PLACE ACCESS WORRD
)@@G@@D FOR PCT$ IN A0, WHICH MUST BE AT LEAST THE    @D@@@@. SIZE DESCRIBED BRE
)@@G@@ELOW.  TRASHES A0,A1,A3, AND A4 .   @F@@@@. NOTE- CALLING ROUTINES RELY RF
)@@G@@ON THE FACT THAT A2 IS PRESERVED    @[@@@@.     @F@@@@. THE FIRST PARAMERG
)@@G@@TER FIELD INDICATES UNDER WHICH LEVEL OF EXEC 8 @F@@@@. THIS PROC SHOULDRH
)@@G@@ WORK.  MORE THAN ONE LEVEL MAY BE SPECIFIED    @E@@@@. (I.E. M$TIME 27,RI
)@@G@@31), IN WHICH CASE THE GENERATED CODE WILL@E@@@@. DETERMINE AT EXECUTIONRJ
)@@G@@ TIME WHICH LEVEL OF THE EXEC IT IS @F@@@@. ACTUALLY RUNNING UNDER.  IF RK
)@@G@@NO LEVEL IS SPECIFIED, THE CURRENT  @F@@@@. EXEC LEVEL IS ASSUMED. (31 ARL
)@@G@@T THE TIME, BUT THAT MAY CHANGE).   @[@@@@.     @F@@@@. THE ENTRY 'M$TIMRM
)@@G@@X' GENERATES ABBREVIATED CODE FOR PEOPLE WHO    @F@@@@. HAVE ALREADY GOTRN
)@@G@@TEN THE PCT.  REGISTER CONTENTS MUST BE: A0=PCT @F@@@@. ADDR, A1=RESULT RO
)@@G@@OF TIME$ DONE JUST BEFORE ER PCT$ (27 AND 27/31 @F@@@@. ONLY), A4=POSITIRP
)@@G@@VE FOR LEVEL 27, NEGATIVE FOR LEVEL 31 (27/31   @#@@@@. VERSION ONLY).  RQ
)@@G@@@[@@@@.     @F@@@@. THE ARRAY MTIMESIZE STATES HOW LARGE THE PCT BUFFER RR
)@@G@@HAS TO BE   @E@@@@. FOR THE VARIOUS LEVELS, MTIMESIZE(0) CONTAINS THE PCRS
)@@G@@T SIZE@B@@@@. NECESSARY FOR THE CURRENT EXEC LEVEL.   @[@@@@.     @F@@@@RT
)@@G@@. THE FOLLOWING LEVELS AND COMBINATIONS ARE CURRENTLY IMPLEMENTED:@^@@@@RU
)@@G@@. 27, 31, 27/31, 32, 33 @A@@@@. LEVEL 32 IS SUPPORTED AS LEVEL31  @[@@@@RV
)@@G@@.     @#@@@@          DEF     @^@@@@MTIMESIZE(0)  EQU   027 @^@@@@MTIMESRW
)@@G@@IZE(27) EQU   0110@^@@@@MTIMESIZE(31) EQU   027 @B@@@@MTIMESIZE(32) EQU RX
)@@G@@  MTIMESIZE(31)     .   @B@@@@MTIMESIZE(33) EQU   MTIMESIZE(31)     .   RY
)@@G@@@^@@@@P         PROC      1   @^@@@@M$TIME*   NAME      1   @D@@@@M$TIMXRZ
)@@G@@*   NAME      0          . ABBREVIATED ENTRY    @F@@@@PCT       EQUF    SA
)@@G@@  0,A0       . PCT ACCESS WD IS USED AS INDEX   @D@@@@  DO  P(1)=0  ,P(1SB
)@@G@@,1)  EQU  33  . ASSUMED EXEC LEVEL  @A@@@@I DO P(1) ,GENFLG(P(1,I)) EQU SC
)@@G@@1     @ @@@@   DO  P(0,0)=0  ,  GO M$TIMY @D@@@@      ON        GENFLG(2SD
)@@G@@7)        . LEVEL 27 CODE     @E@@@@      LA        A1,A0             . SE
)@@G@@PRESERVE PCT ACCESS WORD@E@@@@         ON        GENFLG(31)        . LEVSF
)@@G@@EL 27/31 ONLY     @G@@@@         SZ        0,A0              . CLEAR 1STSG
)@@G@@ WORD OF PCT BUFFER     @G@@@@         ER        MSCON$            . DO SH
)@@G@@MSCON$ WITH INVALID FUNCT (0) @G@@@@         LSSL      A0,1             SI
)@@G@@ . ALIGN STATUS TO SEE IF S1=020    @E@@@@         SA        A0,A4      SJ
)@@G@@       . AND STASH THE P1 BIT @ @@@@         OFF       GENFLG(31) @F@@@@SK
)@@G@@      ER        TIME$             . FIND OUT WHAT TIME IT IS NOW  @F@@@@SL
)@@G@@      LDSC      A0,36             . RECOVER PCT ACW, HIDE TIME$   @ @@@@SM
)@@G@@      OFF       GENFLG(27)    @E@@@@          ON        1-GENFLG(33)    SN
)@@G@@  . IF NOT LEVEL 33     @D@@@@   ER        PCT$              . THEN GLOMSO
)@@G@@B UP THE PCT@E@@@@          OFF       1-GENFLG(33)      . END OF NON-33 SP
)@@G@@CODE  @^@@@@M$TIMY    NAME      .   @D@@@@      ON        GENFLG(27)    SQ
)@@G@@    . LEVEL 27 CODE     @D@@@@      .         COMPUTE ACCURATE LEVEL 27 SR
)@@G@@MEMORY TIME @E@@@@      LA        A3,PCT+030        . GET CURRENT CORE SSS
)@@G@@IZE   @E@@@@         ON        GENFLG(31)        . LEVEL 27/31 ONLY     ST
)@@G@@@F@@@@         TP        A4                . IS THIS REALLY LEVEL 27    SU
)@@G@@@G@@@@         LA,U      A3,0              . NO, 31. MAKE CALCULATION VASV
)@@G@@CUOUS @ @@@@         OFF       GENFLG(31) @E@@@@      AND,U     A3,07777SW
)@@G@@          . ACTUAL SIZE IS IN T3    @G@@@@      MSI,U     A1,5          SX
)@@G@@    . CONVERT TIME (MSEC) TO CLOCK TICKS  @F@@@@      ANA       A1,PCT+0SY
)@@G@@107       . LESS TIME OF LAST PCT UPDATE  @D@@@@      LA,H1     A3,PCT+0SZ
)@@G@@25        . GET QUANTUM USED  @E@@@@      TN        A1                . TA
)@@G@@WAS PCT UP-TO-DATE?     @F@@@@      AA        A3,A1             . NO, BUTB
)@@G@@MP BY TIME SINCE UPDATE @F@@@@      MSI       A3,A4             . QUANTUTC
)@@G@@M (A3) BY CORE SIZE (A4)@ @@@@      OFF       GENFLG(27)    @E@@@@      TD
)@@G@@    ON        1-GENFLG(33)      . IF NOT LEVEL 33     @F@@@@   LA       TE
)@@G@@ A1,PCT+014        . PLUS RUN ACCUMULATION SO FAR     @D@@@@      ON    TF
)@@G@@    GENFLG(27)        . LEVEL 27 CODE     @D@@@@      AA        A1,A3   TG
)@@G@@          . PUT IN EXIT REG   @ @@@@      OFF       GENFLG(27)    @G@@@@TH
)@@G@@. NOTE: EXEC8 KEEPS TIME NORMALIZED TO CORE BLOCKS. TO GET IN UNITS     TI
)@@G@@@G@@@@. USED FOR UOM ACCOUNTING (32K) SHIFT RESULT RIGHT 6 BITS (DIV BY TJ
)@@G@@64)   @E@@@@   LA        A0,PCT+026        . FOR GOOD LUCK, GET CPU TIMETK
)@@G@@@E@@@@          OFF       1-GENFLG(33)      . END OF NON-33 CODE  @[@@@@TL
)@@G@@.     @E@@@@. FOR LEVEL 33, WE TEST FOR OPERATION ON 1110-TYPE MACHINE  TM
)@@G@@@E@@@@. VIA THE HIGHLY USEFUL TSS INSTRUCTION AND COMPUTE THE CPU @E@@@@TN
)@@G@@. TIME FROM THE SRC'S. ELSE WE FETCH CPU TIME FROM PCT+026. @[@@@@.     TO
)@@G@@@E@@@@          ON        GENFLG(33)        . BEGIN LEVEL 33 CODE @F@@@@TP
)@@G@@          SZ        A3                . SET MACHINE FLAG (1=>1108)@H@@@@TQ
)@@G@@          SZ        PCT               . CLEAR TEST-SET CELL IN PCT BUFFETR
)@@G@@R     @G@@@@          TSS       PCT               . IF 1110, SKIP NEXT ITS
)@@G@@NSTRUCTION  @F@@@@          J         A(1108)           . IF HERE, WE ARTT
)@@G@@E ON 1108   @[@@@@.     @^@@@@. BEGIN 1140/1110 CODE. @G@@@@. CPU TIME ITU
)@@G@@S COMPUTED DIRECTLY FROM THE SRC'S BY THE FOLLOWING FORMULA:@[@@@@.     TV
)@@G@@@G@@@@.         CPU (200 USECS) = (TOTAL SRC'S)*(AVE. INSTRUCTION/1.6 SRTW
)@@G@@C)    @G@@@@.                            *(700NS/AVE.INSTRUCTION)*(SUP/2TX
)@@G@@00USECS)    @[@@@@.     @D@@@@.                         = (TOTAL SRC'S)*TY
)@@G@@(7/3200)    @[@@@@.     @G@@@@. UOM MOD EFFECTIVE 7/1/78. TO EQUALIZE CPTZ
)@@G@@U TIME (AND HENCE CB-SUBS)    @E@@@@. ON OUR 1108 AND 1140 (WELL, AS MUCUA
)@@G@@H AS POSSIBLE), WE HAVE @D@@@@. DOUBLED THE CPU CALCULATION. E.G. CPU=SRUB
)@@G@@C(14/3200)  @[@@@@.     @G@@@@          LA        A3,A0             . WEUC
)@@G@@ ARE 1110. SAVE USERS PCT ACW @F@@@@          LA,U      A0,PCT          UD
)@@G@@  . CLEAR INCREMENT OF A0     @G@@@@          LA        A1,(4,0223)     UE
)@@G@@  . GET SRC'S (***NOTE: A LITERAL**)@H@@@@          ER        PCT$      UF
)@@G@@        . SRC'S INTO PCT BUFFER (2 DBLWORDS)    @F@@@@          LA      UG
)@@G@@  A0,A3             . RELOAD USER'S PCT ACW     @E@@@@          DL      UH
)@@G@@  A3,PCT            . LOAD SRC/PRIMARY    @G@@@@          DA        A3,PUI
)@@G@@CT+2          . ADD SRC/EXTENDED. SUM IN A3     @E@@@@          DS      UJ
)@@G@@  A3,PCT+0          . SAVE SUM IN PCT     @E@@@@          LDSL      A3,3UK
)@@G@@              . MULTIPLY SUM BY 8   @H@@@@          DAN       A3,PCT+0  UL
)@@G@@        . MINUS 1*SUM = 7*SUM (DBLWORD MULTIPLY)@F@@@@          LDSL    UM
)@@G@@  A3,1              . UOMMOD. TIMES TWO = 14*SUM@E@@@@          DI,U    UN
)@@G@@  A3,3200           . DIVIDE MEMTIME BY 64@A@@@@A(1108) . COME HERE FOR UO
)@@G@@1108 CODE   @E@@@@          ER        PCT$              . LOAD 027 WORD UP
)@@G@@BUFFER@E@@@@          LA        A1,PCT+014        . LOAD MEMTIME INTO A1UQ
)@@G@@@F@@@@          LA        A0,PCT+026        . LOAD A0 WITH 1108 CPU TIMEUR
)@@G@@@F@@@@          JZ        A3,$+2            . BUT IF A3 IS NONZ, THEN   US
)@@G@@@F@@@@          LA        A0,A3             . IT CONTAINS 1140 CPU TIME UT
)@@G@@@E@@@@          OFF       GENFLG(33)        . END OF LEVEL 33 CODE@#@@@@UU
)@@G@@   END       .    ___BY 64)   @E@@@@   LA        A0,PCT+026        . FORUV
)@@G@@ GOOD LUCK, GET CPU TIME*[S@@@*SDFF*@[@@@@.     @D@@@@. PROCEDURES TO CAUW
)@@G@@LL FIASG$ AND FIFREE$ ROUTINES.     @A@@@@. FIBITS WRITTEN BY MIKE MCAMIUX
)@@G@@S     @A@@@@. FIASG  WRITTEN BY ALAN STEBBENS   @A@@@@. FIFREE WRITTEN BUY
)@@G@@Y BEN CRANSTON    @A@@@@. FIPFIL WRITTEN BY BEN CRANSTON    @A@@@@. FIPEUZ
)@@G@@LT WRITTEN BY BEN CRANSTON    @[@@@@.     @E@@@@. FIASG UPDATED TO WORK VA
)@@G@@IN ASCII OR FIELDATA - 2/11/76, AKS.@[@@@@.     @A@@@@.         DEFINE BVB
)@@G@@ITS FOR FIASG$    @[@@@@.     @B@@@@          DEF                       VC
)@@G@@  .   @D@@@@FBIT      EQU       001               . FORCE USE NAME@D@@@@VD
)@@G@@UBIT      EQU       002               . USE NAME GIVEN@D@@@@XBIT      EQVE
)@@G@@U       004               . GET ASG,AX    @E@@@@RBIT      EQU       010 VF
)@@G@@              . GET READ PERMISSION @E@@@@WBIT      EQU       020       VG
)@@G@@        . GET WRITE PERMISSION@D@@@@OBIT      EQU       040             VH
)@@G@@  . OPTIONS IN A3 @B@@@@FIBITS*   PROC      0,0               .   @B@@@@VI
)@@G@@          END                         .   @[@@@@.     @#@@@@. TO ASSIGN VJ
)@@G@@A FILE@[@@@@.     @B@@@@.         FIASG,'OPTS' PACKET,BITS NAME   @[@@@@VK
)@@G@@.     @B@@@@P         PROC      *2                .   @B@@@@FIASG*    NAVL
)@@G@@ME                        .   @E@@@@N         EQU       6+3*(' '=040)   VM
)@@G@@  . # OF BITS PER CHAR  @E@@@@C         EQU       077+0700*(N=9)    . SEVN
)@@G@@T PROPER MASK     @D@@@@          ON        P(1)>0            . ANY SPECVO
)@@G@@1 ?   @[@@@@.     @B@@@@. FUNCTION TO GET BIT FOR 'BITS' LETTER.  @[@@@@VP
)@@G@@.     @B@@@@F         FUNC      *                 .   @B@@@@PBIT*     NAVQ
)@@G@@ME                        .   @E@@@@I         DO      6 , DO M(0)*/(N-N*VR
)@@G@@I)**C=F(1) , END F(2)   @D@@@@          END       +0                . STVS
)@@G@@RANGE BITS  @[@@@@.     @E@@@@M(0)      EQU       P(1,2)+0D         . PIVT
)@@G@@CK UP MODE LETTERS@F@@@@B(0)      EQU       PBIT('F',1)+PBIT('U',2)+PBITVU
)@@G@@('X',4)+; F,U,X   @F@@@@                    PBIT('R',8)+PBIT('W',16)+PBIVV
)@@G@@T('O',32)++; R,W,O@G@@@@                    2*(P(2)>0)+32*(P(0)>1) . FORVW
)@@G@@CE BITS IF NECESSARY    @[@@@@.     @^@@@@. NOW GENERATE CODE     @[@@@@VX
)@@G@@.     @B@@@@          LA,U      A0,P(1,1)         .   @B@@@@          DOVY
)@@G@@ (B(0)=0)=0 , LXI,U A0,B(0) . @D@@@@          OFF       P(1)>0          VZ
)@@G@@  . ANY SPEC1 ?   @[@@@@.     @D@@@@ DO P(2)>0 , DL A1,P(2,1),P(2,2)    WA
)@@G@@  . GET FILENAME  @[@@@@.     @D@@@@          ON        P(0)>1          WB
)@@G@@  . ANY OPTIONS ? @E@@@@          ON        P(0,1)=0=0        . SOMETHINWC
)@@G@@G THERE?    @E@@@@          ON        N=9               . ASCII CHARACTEWD
)@@G@@RSET? @G@@@@F         FUNC      *                 . ASCII TO FIELDATA MAWE
)@@G@@PPING FUNC  @B@@@@ATOF*     NAME                        .   @D@@@@      WF
)@@G@@  DO (F(1)=' ')++(F(1)=0) , END +0 . ABLANK     @F@@@@          DO      WG
)@@G@@  (F(1)<'A')++(F(1)>'Z') , END +09) . BAD NEWS  @F@@@@          END     WH
)@@G@@  F(1)-'A'+6        . CHANGE TO FIELDATA   A    @E@@@@I         DO      WI
)@@G@@  6 ,;                MAXIMUM OF 6 CHARS  @I@@@@P(0,1)    EQU       (P(0WJ
)@@G@@,1)**-(C*/(I*9-9)))+ATOF(P(0,1)*/(9-9*I)**C)*/(I*6-6) .     @E@@@@      WK
)@@G@@    OFF       N=9               . ASCII CHARACTERSET? @G@@@@I DO 6 , DO WL
)@@G@@P(0,1)**C*/30=0 ,P(0,1) EQU P(0,1)*/6+5 . FILL THE FIELDATA @F@@@@G     WM
)@@G@@    FORM      36                . WE WANT ONLY ONE WORD     @D@@@@      WN
)@@G@@    L         A3,(G P(0,1))       . LOAD LITERAL@B@@@@          OFF     WO
)@@G@@  P(0,1)=0=0        .   @F@@@@          DO        P(0,1)=0 , LA,U   A3,0WP
)@@G@@ . CLEAR OPTIONS REG    @D@@@@          OFF       P(0)>1            . ANWQ
)@@G@@Y OPTIONS ? @[@@@@.     @ @@@@. FINALLY, CALL SUBROUTINE    @[@@@@.     WR
)@@G@@@D@@@@          LMJ       X11,FIASG$        . ASSIGN FILE   @[@@@@.     WS
)@@G@@@B@@@@          END                         .   @[@@@@.     @F@@@@. THISWT
)@@G@@ PROCEDURE IS USED TO CALL THE DIAGNOSTIC ROUTINE FIDIAG$   @F@@@@. IF AWU
)@@G@@ CSF$ ERROR IS DETECTED THE ERROR$ REP IS CALLED.  IF THE   @D@@@@. ERROWV
)@@G@@R IS PERMISSIONS FIDIAG PRINTS THE MESSAGE.     @[@@@@.     @B@@@@P     WW
)@@G@@    PROC      *0,1              .   @B@@@@FIDIAG*   NAME      FIDIAG$   WX
)@@G@@        .   @D@@@@          LMJ       X11,P(0,0)        . CALL ROUTINE  WY
)@@G@@@B@@@@          END                         .   @[@@@@.     @F@@@@. THISWZ
)@@G@@ PROCEDURE IS CALLED TO FREE A FILE WHICH HAS BEEN ASSIGNED @ @@@@. VIA XA
)@@G@@FIASG$. THE CALL IS:    @[@@@@.     @A@@@@.         FIFREE    NAME FREECXB
)@@G@@ODE   @[@@@@.     @B@@@@P         PROC      *2                .   @D@@@@XC
)@@G@@FIFREE*   NAME      FIFREE$           . NORMAL FREE   @E@@@@FIFRIM*   NAXD
)@@G@@ME      FIFRIM$           . RETURN FREE IMAGE   @[@@@@.     @D@@@@ DO P(XE
)@@G@@1)>0 , DL A1,P(1,1),P(1,2)      . GET FILE NAME @E@@@@ DO P(2)>0 , L  A0XF
)@@G@@,P(2,1),P(2,2),P(2,3) . GET FREE CODE     @F@@@@          LMJ       X11,XG
)@@G@@P(0,0)        . CALL SELECTED ROUTINE     @[@@@@.     @B@@@@          ENXH
)@@G@@D                         .   @[@@@@.     @B@@@@. GENERATE FIASG$ PACKETXI
)@@G@@.  THE CALLS ARE: @[@@@@.     @C@@@@.         FIPFIL    'Q','QUAL' 'F','XJ
)@@G@@FILE' ....  @[@@@@.     @F@@@@. THE FIRST SUBFIELD OF EACH FIELD IS A COXK
)@@G@@DE LETTER, IN QUOTES :  @[@@@@.     @ @@@@.         'Q' - QUALIFIER     XL
)@@G@@@^@@@@.         'F' - FILENAME@^@@@@.         'R' - READKEY @^@@@@.     XM
)@@G@@    'W' - WRITEKEY@ @@@@.         'C' - FILECYCLE     @[@@@@.     @F@@@@XN
)@@G@@. IF THE PROCEDURE FIPELT IS CALLED THE FULL 14 WORD ELT$ PACKET  @F@@@@XO
)@@G@@. IS GENERATED AND THE FOLLOWING ADDITION FIELDS ARE ALLOWED.     @[@@@@XP
)@@G@@.     @ @@@@.         'E' - ELEMENT NAME  @ @@@@.         'V' - VERSION XQ
)@@G@@NAME  @[@@@@.     @F@@@@. THE SECOND SUBFIELD OF EACH FIELD IS A STRING XR
)@@G@@OF NOT MORE THAN  @F@@@@. 6 OR 12 LETTERS (DEPENDING ON THE NORMAL LENGTXS
)@@G@@H OF THAT FIELD)  @ @@@@. ENCLOSED IN QUOTATION MARKS.@[@@@@.     @B@@@@XT
)@@G@@P         PROC      *8                .   @E@@@@FIPFIL*   NAME      0   XU
)@@G@@              . ONLY FILE PORTION   @G@@@@FIPELT*   NAME      1         XV
)@@G@@        . BOTH FILE AND ELEMENT PORTIONS  @[@@@@.     @F@@@@B(1)      EQXW
)@@G@@U       0D                . PRESENCE BITS (2 WORDS)   @D@@@@Q(1)      EQXX
)@@G@@U       0D                . QUALIFIER (2) @D@@@@F(1)      EQU       0D  XY
)@@G@@              . FILENAME (2)  @D@@@@R(1)      EQU       0               XZ
)@@G@@  . READKEY (1)   @D@@@@W(1)      EQU       0                 . WRITEKEYYA
)@@G@@ (1)  @D@@@@C(1)      EQU       0                 . CYCLE (1)     @E@@@@YB
)@@G@@E(1)      EQU       0D                . ELEMENT NAME (2)    @E@@@@V(1)  YC
)@@G@@    EQU       0D                . VERSION NAME(2)     @[@@@@.     @^@@@@YD
)@@G@@I DO P-1 , FISCAN   .   @[@@@@.     @B@@@@          +         B(1)      YE
)@@G@@        .   @B@@@@          +         Q(1)              .   @B@@@@      YF
)@@G@@    +         F(1)              .   @B@@@@          +         C(1)      YG
)@@G@@        .   @B@@@@          +         R(1)              .   @B@@@@      YH
)@@G@@    +         W(1)              .   @B@@@@          ON        P(0,0)    YI
)@@G@@        .   @B@@@@          +         E(1)              .   @B@@@@      YJ
)@@G@@    +         V(1)              .   @B@@@@          +         0         YK
)@@G@@        .   @B@@@@          OFF       P(0,0)            .   @[@@@@.     YL
)@@G@@@^@@@@          END       .   @[@@@@.     @A@@@@. PROCEDURE TO PROCESS EYM
)@@G@@ACH FIELD.  @[@@@@.     @F@@@@FISCAN*   PROC      *0,0              . SEYN
)@@G@@COND GLOBAL PASS ONLY   @[@@@@.     @A@@@@ DO P(I,1)='Q' ,Q*(1) FIW2 66 YO
)@@G@@.     @A@@@@ DO P(I,1)='F' ,F*(1) FIW2 60 .     @A@@@@ DO P(I,1)='C' ,C*YP
)@@G@@(1) FIW1 54 .     @A@@@@ DO P(I,1)='R' ,R*(1) FIW1 48 .     @A@@@@ DO P(YQ
)@@G@@I,1)='W' ,W*(1) FIW1 42 .     @B@@@@          ON        P(0,0)          YR
)@@G@@  .   @A@@@@ DO P(I,1)='E' ,E*(1) FIW2 30 .     @A@@@@ DO P(I,1)='V' ,V*YS
)@@G@@(1) FIW2 24 .     @B@@@@          OFF       P(0,0)            .   @B@@@@YT
)@@G@@ DO FOUND(1)=0 , +09                  .   @B@@@@          END           YU
)@@G@@              .   @[@@@@.     @D@@@@. PROCEDURE TO LEFT JUSTIFY AND STORYV
)@@G@@E THE COMPONENT.  @[@@@@.     @B@@@@Z         PROC      *1,0            YW
)@@G@@  .   @B@@@@FIW2*     NAME                        .   @B@@@@P**(I,2)  EQYX
)@@G@@U       P(I,2)++0D        .   @F@@@@ DO 12 , DO (P(I,2)*/-66)**077=0 ,P*YY
)@@G@@*(I,2) EQU P(I,2)*/6+05 .     @B@@@@FIW1*     NAME                      YZ
)@@G@@  .   @F@@@@ DO 06 , DO (P(I,2)*/-30)**077=0 ,P**(I,2) EQU P(I,2)*/6+05 ZA
)@@G@@.     @B@@@@*         EQU       P(I,2)            .   @B@@@@B**(1)    EQZB
)@@G@@U       B(1)++1D*/Z(1,1)   .  @B@@@@FOUND*(1) EQU       1               ZC
)@@G@@  .   @^@@@@          END       .   ___N  @F@@@@. 6 OR 12 LETTERS (DEPENZD
)@@G@@DING ON THE NORMAL LENGT*[S@@@*SDFF*@I@@@@.                             ZE
)@@G@@                                          . UOMMOD    @I@@@@. PROC TO INZF
)@@G@@SURE THAT SLJ'S PERFORM *NO* IBANK STORES.                  . UOMMOD    ZG
)@@G@@@I@@@@.                                                                 ZH
)@@G@@      . UOMMOD    @I@@@@.      SLJ$TARG   [DBANK-LC]  . DEFAULT IS $(2) ZI
)@@G@@                        . UOMMOD    @I@@@@.                             ZJ
)@@G@@                                          . UOMMOD    @I@@@@P       PROCZK
)@@G@@    *0                                                      . UOMMOD    ZL
)@@G@@@I@@@@SLJ$TARG* NAME                                                    ZM
)@@G@@      . UOMMOD    @I@@@@ DO 0=0=1 ,OLDLC EQU &                . SAVE CURZN
)@@G@@RENT LOCN CTR (@ASM)    . UOMMOD    @I@@@@ DO 0=0=0 ,OLDLC EQU $LCN     ZO
)@@G@@        . SAVE CURRENT LOCN CTR (@MASM)   . UOMMOD    @I@@@@NEWLC     EQZP
)@@G@@U       2*(P(1,1)/2)+(2*P(1)=0) . $(2) OR WHAT'S GIVEN      . UOMMOD    ZQ
)@@G@@@I@@@@$(NEWLC)                              . INTO THE DBANK            ZR
)@@G@@      . UOMMOD    @I@@@@*       NOP     0                     . GENERATEZS
)@@G@@ THE SLJ TARGET         . UOMMOD    @I@@@@ DO 1-(OLDLC=NEWLC) , J $(OLDLZT
)@@G@@C)      . IF LC CHG, JUMP BACK TO OLD LC  . UOMMOD    @I@@@@$(OLDLC)    ZU
)@@G@@                          . AND HERE WE ARE.                . UOMMOD    ZV
)@@G@@@I@@@@        END                           . END SLJTARGET             ZW
)@@G@@      . UOMMOD    @I@@@@.                                               ZX
)@@G@@                        . UOMMOD    @I@@@@. THE FOLLOWING PROC IS COURTEZY
)@@G@@SY OF  QUALIFICATION DOCUMENTATION        . UOMMOD    @I@@@@. FOR LEVEL ZZ
)@@G@@33R1 OF THE EXEC. PAGE 12-25                                . UOMMOD    AA
)@@G@@@I@@@@.                                                                 AB
)@@G@@      . UOMMOD    @I@@@@. ASSEMBLER LEVELS UP TO AND INCLUDING 13B DO NOAC
)@@G@@T RECOGNIZE THE         . UOMMOD    @I@@@@. LBJ MNEMONIC; IT WILL BE INCAD
)@@G@@LUDED IN THE  ASSEMBLER RELEASE           . UOMMOD    @I@@@@. FOLLOWING AE
)@@G@@13B. MEANWHILE, THE FOLLOWING PROC CAN BE USED TO           . UOMMOD    AF
)@@G@@@I@@@@. DEFINE LBJ:                                                     AG
)@@G@@      . UOMMOD    @I@@@@.                                               AH
)@@G@@                        . UOMMOD    @I@@@@LBJ*      PROC      *1,1      AI
)@@G@@        .                                 . UOMMOD    @I@@@@F         FOAJ
)@@G@@RM      6,4,4,4,2,16      .                                 . UOMMOD    AK
)@@G@@@I@@@@     F         7,017,LBJ(1,1),LBJ(1,3),2*LBJ(1,*3)+LBJ(1,*2),LBJ(1AL
)@@G@@,2)   . UOMMOD    @I@@@@          END                         . END OF LAM
)@@G@@BJ PROC                 . UOMMOD    @I@@@@.                             AN
)@@G@@                                          . UOMMOD    @I@@@@. MASM PROCSAO
)@@G@@ TO PLACATE THE SAVAGE BEAST.                               . UOMMOD    AP
)@@G@@@I@@@@.                                                                 AQ
)@@G@@      . UOMMOD    @I@@@@P         PROC      *0,0              .         AR
)@@G@@                        . UOMMOD    @I@@@@BRIEF*    NAME      0         AS
)@@G@@        . DISABLE COMMON @ASM DIRECTIVES. . UOMMOD    @I@@@@RESUME*   NAAT
)@@G@@ME      0                 . SO @MASM WON'T GET I-FLAGS      . UOMMOD    AU
)@@G@@@I@@@@          END                         .                           AV
)@@G@@      . UOMMOD    @I@@@@.                                               AW
)@@G@@                        . UOMMOD    @I@@@@. XFORM @ASM 'TYPE' DIRECTIVE AX
)@@G@@TO @MASM 'INFO 3'                         . UOMMOD    @I@@@@.           AY
)@@G@@                                                            . UOMMOD    AZ
)@@G@@@I@@@@TYPE*     PROC      *1,0              . TYPE(1,1) IS TYPE TYPE    BA
)@@G@@      . UOMMOD    @I@@@@INFO(0)   EQU       010               . ACFM SENBB
)@@G@@SITIVITY UNKNOWN        . UOMMOD    @I@@@@INFO(1)   EQU       030       BC
)@@G@@        . SETAFCM - D20 IS SET            . UOMMOD    @I@@@@INFO(2)   EQBD
)@@G@@U       050               . CLRAFCM - D20 IS CLEARED        . UOMMOD    BE
)@@G@@@I@@@@INFO(3)   EQU       070               . INSENSITIVE               BF
)@@G@@      . UOMMOD    @I@@@@INFO(0100) EQU      0100              . 'TYPE TYBG
)@@G@@PE$REP' => NO IBANK STOR. UOMMOD    @I@@@@          ON        +3>2>1    BH
)@@G@@        . ON ONLY IF @MASM                . UOMMOD    @I@@@@INF       EQBI
)@@G@@U       INFO(TYPE(1,1))   . ZERO IF NOT DEFINED             . UOMMOD    BJ
)@@G@@@I@@@@ DO INF>0 , INFO     1 INFO(TYPE(1,1)) . HOT STUFF                BK
)@@G@@      . UOMMOD    @I@@@@ DO INF=0 , $DISPLAY *'ILLEGAL TYPE SPECIFICATIOBL
)@@G@@N' . COMPLAIN           . UOMMOD    @I@@@@          OFF                 BM
)@@G@@        . END OF @MASM CODE.              . UOMMOD    @I@@@@          ENBN
)@@G@@D                         . END OF TYPE-INFO                . UOMMOD    BO
)@@G@@@A@@@@. EXEC TEST & SET QUEUING PROCS     @[@@@@.     @B@@@@P$        PRBP
)@@G@@OC      1,1               .   @B@@@@T$CELL*   NAME                      BQ
)@@G@@  .   @B@@@@F         FORM      6,6,6,18          .   @B@@@@          F BR
)@@G@@        0,057,P$(1,1),0   .   @B@@@@          END                       BS
)@@G@@  .   @B@@@@P$        PROC      1,3               .   @B@@@@C$TS*     NABT
)@@G@@ME      CTS$              .   @B@@@@C$TSA*    NAME      CTSA$           BU
)@@G@@  .   @B@@@@          SZ,015    P$(1,1),P$(1,2)   .   @B@@@@          TZBV
)@@G@@,01     P$(1,1),P$(1,2)   .   @B@@@@          ER        P$(0,0)         BW
)@@G@@  .   @B@@@@          END                         .   @B@@@@P$        PRBX
)@@G@@OC      1,2               .   @B@@@@C$TSQ*    NAME                      BY
)@@G@@  .   @B@@@@          NOP       0,P$(1,1),P$(1,2) .   @B@@@@          ERBZ
)@@G@@        CTSQ$             .   @B@@@@          END                       CA
)@@G@@  .   @[@@@@.     @[@@@@.     @H@@@@. **********************************CB
)@@G@@*************************************     @A@@@@. EXEC CONSOLE COMMUNICACC
)@@G@@TION PROCS  @[@@@@.     @I@@@@.                   PROCEDURE TO GENERATE CD
)@@G@@CONSOLE COMMUNICATIONS CALLING SEQUENC    @[@@@@.     @^@@@@P         PRCE
)@@G@@OC      1,2 @#@@@@C$OM*     NAME    @ @@@@          L,016     A0,P(1,1) CF
)@@G@@@^@@@@          ER        COM$@#@@@@          END     @[@@@@.     @G@@@@CG
)@@G@@.                   PROCEDURE TO GENERATE CONSOLE COMMUNICATIONS PACKET CH
)@@G@@@[@@@@.     @^@@@@P         PROC      1,3 @#@@@@C$OMPK*   NAME    @ @@@@CI
)@@G@@F         FORM      6,6,6,18  @B@@@@          F         0,P(0,1),P(0,2),CJ
)@@G@@0     @A@@@@          +         P(1,1),P(1,2)   @A@@@@          +       CK
)@@G@@  P(1,3),P(1,4)   @#@@@@          END     @[@@@@.     @[@@@@.     @G@@@@CL
)@@G@@. **********************************************************************CM
)@@G@@@^@@@@. EXEC SYMBIONT PROCS   @[@@@@.     @^@@@@P$       PROC      1,2  CN
)@@G@@@#@@@@R$EAD*   NAME     @ @@@@         L         12,P$(1,1) @^@@@@      CO
)@@G@@   ER        READ$@]@@@@         END@^@@@@P$       PROC      1,2  @#@@@@CP
)@@G@@A$READ*  NAME     @ @@@@         L         12,P$(1,1) @ @@@@         ER CQ
)@@G@@       AREAD$     @]@@@@         END@^@@@@P$       PROC      1,2  @#@@@@CR
)@@G@@R$EADA*  NAME     @ @@@@         L,016     12,P$(1,1) @ @@@@         ER CS
)@@G@@       READA$     @]@@@@         END@^@@@@P$       PROC      1,2  @#@@@@CT
)@@G@@A$READA* NAME     @ @@@@         L,016     12,P$(1,1) @ @@@@         ER CU
)@@G@@       AREADA$    @]@@@@         END@^@@@@P$       PROC      1,2  @#@@@@CV
)@@G@@T$READ*  NAME     @ @@@@         L,016     12,P$(1,1) @ @@@@         ER CW
)@@G@@       TREAD$     @]@@@@         END@^@@@@P$       PROC      1,2  @#@@@@CX
)@@G@@A$TREAD* NAME     @ @@@@         L,016     12,P$(1,1) @ @@@@         ER CY
)@@G@@       ATREAD$    @]@@@@         END@^@@@@P$       PROC      1,2  @#@@@@CZ
)@@G@@P$RINT*  NAME     @ @@@@         L         12,P$(1,1) @ @@@@         ER DA
)@@G@@       PRINT$     @]@@@@         END@^@@@@P$       PROC      1,2  @#@@@@DB
)@@G@@A$PRINT* NAME     @ @@@@         L         12,P$(1,1) @ @@@@         ER DC
)@@G@@       APRINT$    @]@@@@         END@^@@@@P$       PROC      1,2  @#@@@@DD
)@@G@@P$RNTA*  NAME     @ @@@@         L,016     12,P$(1,1) @ @@@@         ER DE
)@@G@@       PRNTA$     @]@@@@         END@^@@@@P$       PROC      1,2  @#@@@@DF
)@@G@@A$PRNTA* NAME     @ @@@@         L,016     12,P$(1,1) @ @@@@         ER DG
)@@G@@       APRNTA$    @]@@@@         END@^@@@@P$       PROC      1,2  @#@@@@DH
)@@G@@P$UNCH*  NAME     @ @@@@         L         12,P$(1,1) @ @@@@         ER DI
)@@G@@       PUNCH$     @]@@@@         END@^@@@@P$       PROC      1,2  @#@@@@DJ
)@@G@@A$PUNCH* NAME     @ @@@@         L         12,P$(1,1) @ @@@@         ER DK
)@@G@@       APUNCH$    @]@@@@         END@^@@@@P$       PROC      1,2  @#@@@@DL
)@@G@@P$NCHA*  NAME     @ @@@@         L,016     12,P$(1,1) @ @@@@         ER DM
)@@G@@       PNCHA$     @]@@@@         END@^@@@@P$       PROC      1,2  @#@@@@DN
)@@G@@A$PNCHA* NAME     @ @@@@         L,016     12,P$(1,1) @ @@@@         ER DO
)@@G@@       APNCHA$    @]@@@@         END@^@@@@P$       PROC      1,2  @#@@@@DP
)@@G@@P$RTCN*  NAME     @ @@@@         L         12,P$(1,1) @ @@@@         ER DQ
)@@G@@       PRTCN$     @]@@@@         END@^@@@@P$       PROC      1,2  @#@@@@DR
)@@G@@A$PRTCN* NAME     @ @@@@         L         12,P$(1,1) @ @@@@         ER DS
)@@G@@       APRTCN$    @]@@@@         END@^@@@@P$       PROC      1,2  @#@@@@DT
)@@G@@P$CHCN*  NAME     @ @@@@         L         12,P$(1,1) @ @@@@         ER DU
)@@G@@       PCHCN$     @]@@@@         END@^@@@@P$       PROC      1,2  @#@@@@DV
)@@G@@A$PCHCN* NAME     @ @@@@         L         12,P$(1,1) @ @@@@         ER DW
)@@G@@       APCHCN$    @]@@@@         END@^@@@@P$       PROC      1,2  @#@@@@DX
)@@G@@P$RTCA*  NAME     @ @@@@         L         12,P$(1,1) @ @@@@         ER DY
)@@G@@       PRTCA$     @]@@@@         END@^@@@@P$       PROC      1,2  @#@@@@DZ
)@@G@@A$PRTCA* NAME     @ @@@@         L         12,P$(1,1) @ @@@@         ER EA
)@@G@@       APRTCA$    @]@@@@         END@^@@@@P$       PROC      1,2  @#@@@@EB
)@@G@@P$CHCA*  NAME     @ @@@@         L         12,P$(1,1) @ @@@@         ER EC
)@@G@@       PCHCA$     @]@@@@         END@^@@@@P$       PROC      1,2  @#@@@@ED
)@@G@@A$PCHCA* NAME     @ @@@@         L         12,P$(1,1) @ @@@@         ER EE
)@@G@@       APCHCA$    @]@@@@         END%I@@@@-156  PROC$ 73                EF
)@@G@@                                             00185    @I@@@@.           EG
)@@G@@                                                               00185    EH
)@@G@@@I@@@@. PROCS FOR ER SYMB$ (S$YMB) AND PACKET (S$YMBPK)                 EI
)@@G@@         00185    @I@@@@. AVAILABLE WITH EXEC 35R1                      EJ
)@@G@@                           00185    @I@@@@.                             EK
)@@G@@                                             00185    @I@@@@          DEEL
)@@G@@F                                                              00185    EM
)@@G@@@I@@@@ASCII$    EQU       01                                            EN
)@@G@@         00185    @I@@@@TRUN$     EQU       02                          EO
)@@G@@                           00185    @I@@@@UNTR$     EQU       04        EP
)@@G@@                                             00185    @I@@@@PUALT$    EQEQ
)@@G@@U       010                                                    00185    ER
)@@G@@@I@@@@W$        EQU       010                                           ES
)@@G@@         00185    @I@@@@R$        EQU       020                         ET
)@@G@@                           00185    @I@@@@SM$       EQU       042       EU
)@@G@@                        *[S@@@*SDFF*@[@@@@ .    @[@@@@ .    @[@@@@ .    EV
)@@G@@@B@@@@          AXR$                        .   @B@@@@          STRUC$  EW
)@@G@@                    .   @B@@@@          RESUME                      .   EX
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@ .    EY
)@@G@@@ @@@@ . CHARACTER FETCH ROUTINES - @E@@@@ .     THIS IS A COMPLEX OF VEEZ
)@@G@@RY GENERAL PSR INSENSITIVE    @E@@@@ .     CHARACTER ROUTINES.  THE BASIFA
)@@G@@C DIFFERENCE IS THE     @E@@@@ .     USE OF SHIFT TABLES INSTEAD OF THE FB
)@@G@@USUAL LOAD AND    @G@@@@ .     STORE TABLES.  THUS THERE ARE NO QUARTER FC
)@@G@@WORD FETCHES NECESSARY. @F@@@@ .     THEY ADD NEGLIGABLE OVERHEAD WHEN CFD
)@@G@@OMPARED TO EQUIVALENT   @F@@@@ .     LOAD AND STORE ROUTINES.  THEIR MAJFE
)@@G@@OR FLAW IS THAT THEY    @C@@@@ .     REQUIRE A LARGER THAN USUAL REGISTEFF
)@@G@@R SET.@[@@@@ .    @#@@@@ .     REGISTERS -@B@@@@ .          X9 => INPUT FG
)@@G@@EXECUTE REGISTER  @B@@@@ .          X10 => OUTPUT EXECUTE REGISTER@C@@@@FH
)@@G@@ .          A0 => INPUT BUFFER POINTER REGISTER @C@@@@ .          A1 => FI
)@@G@@OUTPUT BUFFER POINTER REGISTER@A@@@@ .          A2 => INPUT WORD AREA   FJ
)@@G@@@A@@@@ .          A3 => CHARACTER REGISTER@A@@@@ .          A4 => OUTPUTFK
)@@G@@ WORD AREA  @C@@@@ .          R2 => OUTPUT CHARACTER MASK REGISTER@C@@@@FL
)@@G@@ .          R3 => INPUT CHARACTER MASK REGISTER @[@@@@ .    @A@@@@ .    FM
)@@G@@ GLOBAL VARIABLES MAINTAINED -@F@@@@ .          (IN THE FOLLOWING NAMES FN
)@@G@@'XX' WILL REFER TO EITHER     @F@@@@ .           'IN' OR 'OUT' DENOTING FO
)@@G@@INPUT OR OUTPUT, RESPECTIVELY)@[@@@@ .    @G@@@@ .          E$XXBLKWRD =FP
)@@G@@> A WORD OF BLANKS  DEPENDING ON CHARACTER TYPE @C@@@@ .                FQ
)@@G@@        OF ROUTINE OPENED.    @F@@@@ .          E$XXBLK    => A BLANK CHFR
)@@G@@ARACTER DEPENDING ON ROUTINES @B@@@@ .                        CHARACTER FS
)@@G@@TYPE. @D@@@@ .          E$XXBITS   => NUMBER OF BITS PER CHARACTER@E@@@@FT
)@@G@@ .          E$XXCNT    => NUMBER OF CHARACTERS PER WORD.    @[@@@@ .    FU
)@@G@@@F@@@@ .     THESE VARIABLES ARE SET WHEN A SET OF INPUT AND OUTPUT     FV
)@@G@@@E@@@@ .     ROUTINES ARE OPENED AND ARE IN EFFECT THROUGH OUT THE@A@@@@FW
)@@G@@ .     MANIPULATION OF THAT RECORD. @[@@@@ .    @[@@@@ .    @[@@@@ .    FX
)@@G@@@B@@@@ . CHARACTER ROUTINE PROC INTERFACE -     @E@@@@ .     THE FOLLOWIFY
)@@G@@NG PROCS ARE PROVIDED AS AN EASY INTERFACE@E@@@@ .     WITH THE CHARACTEFZ
)@@G@@R FETCH AND STORE ROUTINES.  THEY   @F@@@@ .     ARE DESIGNED TO TAKE ADGA
)@@G@@VANTAGE OF THE ADDED FLEXIBILITY    @C@@@@ .     PROVIDED BY THE SHIFT TGB
)@@G@@ABLE APPROACH.    @[@@@@ .    @#@@@@ . INPUT PROCS -  @[@@@@ .    @#@@@@GC
)@@G@@ .     E$GET -    @F@@@@ .          THIS PROC WILL LOAD A3 WITH THE NEXTGD
)@@G@@ CHAR FROM THE    @F@@@@ .          INPUT WORD AND EXECUTE THE SHIFT TABGE
)@@G@@LE TO READY THE   @F@@@@ .          FOLLOWING CHARACTER FOR SUBSEQUENT IGF
)@@G@@NPUT.  GENERATES  @ @@@@ .          TWO INSTRUCTIONS. @#@@@@ .     E$LOOGG
)@@G@@K -   @G@@@@ .          WILL LOAD A3 WITH THE NEXT CHARACTER FROM THE INGH
)@@G@@PUT WORD    @F@@@@ .          BUT WILL EXECUTE NO SHIFT, MAINTAINING THAGI
)@@G@@T CHARACTER @E@@@@ .          AS THE NEXT ONE.  GENERATES ONE INSTRUCTIOGJ
)@@G@@N.    @#@@@@ .     E$NEXT -   @G@@@@ .          WILL EXECUTE THE SHIFT OGK
)@@G@@N THE NEXT CHARACTER OF THE INPUT   @H@@@@ .          WORD DOING AN EFFEGL
)@@G@@CTIVE SKIP OF THAT CHARACTER.  NO CHARACTER     @D@@@@ .          IS FETGM
)@@G@@CHED.  GENERATES ONE INSTRUCTION.   @#@@@@ .     E$REOPEN - @G@@@@ .    GN
)@@G@@      WILL FETCH THE NEXT WORD POINTED TO BY A0 AS THE CURRENT    @G@@@@GO
)@@G@@ .          INPUT WORD AND SET TO FETCH THE FIRST CHARACTER OF THAT     GP
)@@G@@@G@@@@ .          WORD.  THE CONTENTS AND STATUS OF ANY PREVIOUS INPUT WGQ
)@@G@@ORD   @E@@@@ .          (A2) ARE LOST.  GENERATES TWO INSTRUCTIONS.     GR
)@@G@@@D@@@@ .     E$OFFSET BY,<LOC WITH # OF OFFSET CHARACTERS> -@E@@@@ .    GS
)@@G@@      FORCES FIRST CHARACTER TO BE FETCHED TO BE NTH  @F@@@@ .          GT
)@@G@@CHARACTER (THIS IS THE OFFSET) OF THE INPUT WORD.     @E@@@@ .          GU
)@@G@@IT ASSUMES THAT THE INPUT ROUTINE HAS JUST BEEN @E@@@@ .          INITIAGV
)@@G@@LIZED OR THAT A REOPEN HAS JUST BEEN DONE.@B@@@@ .          GENERATES FOGW
)@@G@@UR INSTRUCTIONS.  @[@@@@ .    @[@@@@ .    @#@@@@ . OUTPUT PROCS - @[@@@@GX
)@@G@@ .    @#@@@@ .     E$PUT -    @F@@@@ .          STORES CHARACTER IN A3 IGY
)@@G@@N OUTPUT WORD AND EXECUTES    @F@@@@ .          SHIFT TO READY FOR NEXT GZ
)@@G@@CHARACTER.  GENERATES TWO     @ @@@@ .          INSTRUCTIONS.     @#@@@@HA
)@@G@@ .     E$SAVE -   @F@@@@ .          STORES CHARACTER INTO OUTPUT WORD BUHB
)@@G@@T EXECUTES NO     @F@@@@ .          SHIFT.  REPETITIVE E$SAVE'S OR A SUBHC
)@@G@@SEQUENT E$PUT WILL@F@@@@ .          OVERWRITE THIS CHARACTER UNLESS IT HHD
)@@G@@AS BEEN EXPLICITLY@D@@@@ .          SHIFTED OUT.  GENERATES ONE INSTRUCTHE
)@@G@@ION.  @#@@@@ .     E$RECALL - @F@@@@ .          LOADS INTO A3 THE CHARACHF
)@@G@@TER NOW WAITING FOR OOUTPUT.  @F@@@@ .          IF A E$SAVE WAS DONE LASHG
)@@G@@T - THAT CHARACTER WILL BE    @F@@@@ .          RETRIEVED - IT WILL NOT HH
)@@G@@BE REMOVED FROM THE OUTPUT    @F@@@@ .          WORD.  IF A E$SAVE WAS NHI
)@@G@@OT THE LAST OUTPUT OPERATION  @E@@@@ .          DONE, A BLANK CHARACTER HJ
)@@G@@WILL BE FETCHED FROM THE@E@@@@ .          OUTPUT WORD.  THIS IS BECAUSE HK
)@@G@@THE OUTPUT WORD IS@E@@@@ .          PRELOADED WITH BLANKS WHICH ARE RETAHL
)@@G@@INED UNTILL @E@@@@ .          OVERWRITTEN BY AN EXPLICIT OUTPUT OPERATIOHM
)@@G@@N.    @B@@@@ .          GENERATES THREE INSTRUCTIONS. @#@@@@ .     E$OUTHN
)@@G@@ -    @F@@@@ .          THIS WILL EXECUTE A SHIFT ON THE OUTPUT WORD. A HO
)@@G@@E$SAVE@E@@@@ .          FOLLOWED BY A E$OUT IS ESSENTIALLY IDENTICAL TO HP
)@@G@@@C@@@@ .          A E$PUT.  GENERATES ONE INSTRUCTION.@#@@@@ .     E$BLKHQ
)@@G@@ -    @F@@@@ .          THIS IS REALLY THE SAME AS E$OUT BUT IS PROVIDEDHR
)@@G@@ FOR  @F@@@@ .          CLARITY.  SINCE THE OUTPUT WORD IS ORIGINALLY BLHS
)@@G@@ANK   @F@@@@ .          FILLED, A E$BLK (OR E$OUT$) WHICH DOES NOT FOLLOHT
)@@G@@W     @E@@@@ .          A E$SAVE PRODUCES A BLANK IN THE OUTPUT STRING. HU
)@@G@@@B@@@@ .          GENERATES ONE INSTRUCTION.    @#@@@@ .     E$STORE -  HV
)@@G@@@F@@@@ .          FORCES AN IMMEDIATE STORE OF THE OUTPUT WORD.  NO LEFTHW
)@@G@@@E@@@@ .          OR RIGHT JUSTIFICATION IS DONE.  IT ASSUMES THE @F@@@@HX
)@@G@@ .          USER KNOWS WHAT HE HAS AND WANTS IT IN THE OUTPUT     @C@@@@HY
)@@G@@ .          STRING.  GENERATES ONE INSTRUCTION. @#@@@@ .     E$ALLIGN - HZ
)@@G@@@F@@@@ .          CLEARS OUTPUT WORD TO BLANKS - NO STORE - LEAVES SHIFTIA
)@@G@@@F@@@@ .          TABLE READY FOR FIRST CHARACTER TO OUTPUT.  GENERATES IB
)@@G@@@ @@@@ .          TWO INSTRUCTIONS. @#@@@@ .     E$CLOSE -  @F@@@@ .    IC
)@@G@@      GENERALLY THE SAME AS E$ALLIGN EXCEPT THE CURRENT     @E@@@@ .    ID
)@@G@@      OUTPUT WORD IS LEFT JUSTIFIED, BLANK FILLED AND @E@@@@ .          IE
)@@G@@STORED INTO THE OUTPUT STRING. GENERATES TWO    @ @@@@ .          INSTRUIF
)@@G@@CTIONS.     @C@@@@ .     E$WORDS BY,<# OF WORDS TO TRANSFER> -    @E@@@@IG
)@@G@@ .          DOES A SIMPLE BLOCK TRANSFER FROM INPUT LOC TO  @E@@@@ .    IH
)@@G@@      OUTPUT LOC AS DEFINED BY A0 AND A1 RESPECTIVELY.@F@@@@ .          II
)@@G@@THE CONTENTS OF A0 IS INTIALLY DECREMENTED SO THAT    @F@@@@ .          IJ
)@@G@@THE CURRENT INPUT WORD IS INCLUDED IN THE TRANSFER.   @B@@@@ .          IK
)@@G@@GENERATES THREE INSTRUCTIONS. @[@@@@$(0). @F@@@@E$PARAMS* RES       4   IL
)@@G@@              . CHARACTER PARAMETER AREA  @F@@@@E$TABLE*  E$TBLX        IM
)@@G@@              . USE EDIT$ TRANSLATE TABLE @[@@@@ .    @[@@@@ .    @B@@@@IN
)@@G@@$(1)      LIT                         .   @[@@@@ .    @D@@@@ .     FOLLOIO
)@@G@@WING ARE THE INPUT AND OUTPUT SHIFT TABLES@E@@@@ .     IMBEDDED IN CYCLIIP
)@@G@@C ROUTINES.  THEY ARE PLACED IN THE @E@@@@ .     D-BANK TO TAKE ADVANTAGIQ
)@@G@@E OF ALTERNATE BANK TIMING.   @[@@@@ .    @[@@@@ .    @[@@@@/.    @[@@@@IR
)@@G@@ .    @[@@@@ .    @[@@@@ .    @]@@@@ . FDGET -  @E@@@@ .     THIS IS THEIS
)@@G@@ FIELDATA INPUT CHARACTER SHIFT SEQUENCE. @C@@@@ .     IT IS A COROUTINEIT
)@@G@@ WHICH IS OPENED BY:    @ @@@@ .          CALL,X9 FDGET .   @F@@@@ .    IU
)@@G@@ THIS SETS ALL FLAGS AND DATA WORDS, FETCHES FIRST INPUT    @E@@@@ .    IV
)@@G@@ WORD, SHIFTS 1ST CHARACTER INTO POSITION, AND EXITS  @E@@@@ .     POINTIW
)@@G@@ING INTO THE SHIFT TABLE.  SUBSEQUENT CHARACTERS@B@@@@ .     ARE SHIFTEDIX
)@@G@@ INTO POSITION VIA:     @^@@@@ .          EX 0,*X9 .  @[@@@@ .    @[@@@@IY
)@@G@@ .    @[@@@@ .    @[@@@@$(2). @]@@@@FDGET*.     @B@@@@ BEGIN CYCLIC     IZ
)@@G@@                    .   @F@@@@   L,U       R3,077                   . SEJA
)@@G@@T FIELDATA FETCH MASK   @F@@@@   LXI,U     X9,1                     . SEJB
)@@G@@T INC IN EXECUTE REG    @G@@@@   LXI,U     A0,1                     . SEJC
)@@G@@T INC IN BUFFER POINTER REG   @E@@@@   L,U       A3,6                   JD
)@@G@@  . FETCH # OF CHAR/WORD@F@@@@   S         A3,E$INCNT               . MAJE
)@@G@@Y WANT TO KNOW LATER    @F@@@@   S         A3,E$INBITS              . ISJF
)@@G@@ ALSO # OF BITS/CHAR    @E@@@@   L,U       A3,05                    . FEJG
)@@G@@TCH FIELDATA BLANK@E@@@@   S         A3,E$INBLK               . SAVE SO JH
)@@G@@WE'LL KNOW  @G@@@@   L         A3,(050505050505)        . GET WORD OF FIJI
)@@G@@ELDATA BLANKS     @F@@@@   S         A3,E$INBLKWRD            . MAY NEEDJJ
)@@G@@ THIS LATER TOO   @H@@@@   REPEAT                             . EXTRA NEJK
)@@G@@ST FOR FDASGET COMPATABILITY  @F@@@@      REPEAT                        JL
)@@G@@  . NOW TO INIT SHIFT TABLE   @E@@@@         L         A2,0,*A0         JM
)@@G@@  . FETCH INPUT WRD     @F@@@@         LSSC      A2,6               . SHJN
)@@G@@IFT OVER 1ST CHARACTER  @E@@@@         CALL,X9   0,X9               . TRJO
)@@G@@ANSFER CONTROL    @E@@@@         LSSC      A2,6               . SHIFT INJP
)@@G@@ SECOND CHAR@E@@@@         LSSC      A2,6               . SHIFT IN THIRDJQ
)@@G@@ CHAR @E@@@@         LSSC      A2,6               . SHIFT IN FORTH CHAR JR
)@@G@@@E@@@@         LSSC      A2,6               . SHIFT IN FIFTH CHAR @E@@@@JS
)@@G@@         LSSC      A2,6               . SHIFT IN SIXTH CHAR @F@@@@      JT
)@@G@@   CALL,X9   0,X9               . TIME TO FETCH NEXT WORD   @C@@@@      JU
)@@G@@ENDREP                          . LOOP    @B@@@@   ENDREP               JV
)@@G@@              .   @B@@@@ ENDBEG                               .   @[@@@@JW
)@@G@@/.    @[@@@@ .    @[@@@@ .    @[@@@@ .    @]@@@@ . ASGET -  @E@@@@ .    JX
)@@G@@ ASCII INPUT CHARACTER SHIFT ROUTINE, ESSENTIALLY SAME@C@@@@ .     AS FDJY
)@@G@@GET ACCEPT FOR ASCII CHARACTERS.    @#@@@@ .     TO OPEN:   @ @@@@ .    JZ
)@@G@@      CALL,X9 ASGET .   @A@@@@ .     TO SHIFT IN NEXT CHARACTER:  @^@@@@KA
)@@G@@ .          EX 0,*X9 .  @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(2). KB
)@@G@@@]@@@@ASGET*.     @B@@@@ BEGIN CYCLIC                         .   @E@@@@KC
)@@G@@   L,U       R3,0177                  . GET ASCII FETCH MASK@F@@@@   LXIKD
)@@G@@,U     X9,1                     . SET INC IN EXECUTE REG    @G@@@@   LXIKE
)@@G@@,U     A0,1                     . SET INC IN INPUT BUFFER REG     @E@@@@KF
)@@G@@   L,U       A3,4                     . GET # OF CHARS/WORD @D@@@@   S  KG
)@@G@@       A3,E$INCNT               . SAVE FOR LATER@F@@@@   L,U       A3,9 KH
)@@G@@                    . GET # OF BITS/CHARACTER   @C@@@@   S         A3,E$KI
)@@G@@INBITS              . SAVE    @E@@@@   L,U       A3,040                 KJ
)@@G@@  . GET PROPER BLANK    @C@@@@   S         A3,E$INBLK               . SAKK
)@@G@@VE    @F@@@@   L         A3,(040040040040)        . GET PROPER WORD OF BKL
)@@G@@LANKS @C@@@@   S         A3,E$INBLKWRD            . SAVE    @G@@@@   REPKM
)@@G@@EAT                             . EXTRA NEST FOR FDASGET COMPAT   @B@@@@KN
)@@G@@      REPEAT                          .   @E@@@@         L         A2,0,KO
)@@G@@*A0           . GET  INPUT WORD     @E@@@@         LSSC      A2,9       KP
)@@G@@        . SHIFT IN FIRST CHAR @E@@@@         CALL,X9   0,X9             KQ
)@@G@@  . TRANSFER CONTROL    @E@@@@         LSSC      A2,9               . SHKR
)@@G@@IFT IN SECOND CHAR@E@@@@         LSSC      A2,9               . SHIFT INKS
)@@G@@ THIRD CHAR @E@@@@         LSSC      A2,9               . SHIFT IN FORTHKT
)@@G@@ CHAR @E@@@@         CALL,X9   0,X9               . MUST FETCH NEXT WORDKU
)@@G@@@C@@@@      ENDREP                          . LOOP    @B@@@@   ENDREP   KV
)@@G@@                          .   @B@@@@ ENDBEG                             KW
)@@G@@  .   @[@@@@/.    @[@@@@ .    @[@@@@ .    @[@@@@ .    @]@@@@ . FDPUT -  KX
)@@G@@@E@@@@ .     THIS IS THE FIELDATA OUTPUT CHARACTER SHIFT ROUTINE. @#@@@@KY
)@@G@@ .     TO OPEN:   @ @@@@ .          CALL,X10 FDPUT .  @ @@@@ .     TO SHKZ
)@@G@@IFT OUT CHARACTER:@^@@@@ .          EX 0,*X10 . @[@@@@ .    @[@@@@ .    LA
)@@G@@@[@@@@ .    @[@@@@$(2). @]@@@@FDPUT*.     @B@@@@ BEGIN CYCLIC           LB
)@@G@@              .   @G@@@@   L,XU      R2,-077                  . FETCH OULC
)@@G@@TPUT CHARACTER MASK     @F@@@@   LXI,U     X10,1                    . SELD
)@@G@@T INC IN EXECUTE REG    @G@@@@   LXI,U     A1,1                     . SELE
)@@G@@T INC IN OUTPUT BUFFER WRD    @F@@@@   L,U       A3,6                   LF
)@@G@@  . FETCH # OF CHARS/WORD     @E@@@@   S         A3,E$OUTCNT            LG
)@@G@@  . SAVE IT FOR LATER   @F@@@@   S         A3,E$OUTBITS             . ISLH
)@@G@@ SAME FOR BITS/CHAR     @E@@@@   L,U       A3,05                    . GELI
)@@G@@T FIELDATA BLANK  @C@@@@   S         A3,E$OUTBLK              . SAVE    LJ
)@@G@@@G@@@@   L         A3,(050505050505)        . GET WORD OF FIELDATA BLANKLK
)@@G@@S     @D@@@@   S         A3,E$OUTBLKWRD           . SAVE IT TOO   @B@@@@LL
)@@G@@   REPEAT                             .   @F@@@@      L         A4,E$OUTLM
)@@G@@BLKWRD        . PRELOAD OUTPUT WITH BLANKS@E@@@@      CALL,X10  0,X10   LN
)@@G@@              . TRANSFER CONTROL    @E@@@@      LSSC      A4,6          LO
)@@G@@        . SHIFT OUT FIRST CHAR@F@@@@      LSSC      A4,6                LP
)@@G@@  . SHIFT OUT SECOND CHAR     @E@@@@      LSSC      A4,6                LQ
)@@G@@  . SHIFT OUT THIRD CHAR@E@@@@      LSSC      A4,6                  . SHLR
)@@G@@IFT OUT FORTH CHAR@E@@@@      LSSC      A4,6                  . SHIFT OULS
)@@G@@T FIFTH CHAR@F@@@@      CALL,X10  0,X10                 . TRANSFER CONTRLT
)@@G@@OL TO HERE  @D@@@@      S         A4,0,*A1              . OUTPUT WORD   LU
)@@G@@@C@@@@   ENDREP                             . LOOP    @B@@@@ ENDBEG     LV
)@@G@@                          .   @[@@@@/.    @[@@@@ .    @[@@@@ .    @[@@@@LW
)@@G@@ .    @]@@@@ . ASPUT -  @E@@@@ .     THIS IS THE ASCII CHARACTER OUTPUT LX
)@@G@@SHIFT ROUTINE.    @#@@@@ .     TO OPEN:   @ @@@@ .          CALL,X10 ASPLY
)@@G@@UT .  @A@@@@ .     TO SHIFT OUT NEXT CHARACTER: @^@@@@ .          EX 0,*LZ
)@@G@@X10 . @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(2). @]@@@@ASPUT*.     MA
)@@G@@@B@@@@ BEGIN CYCLIC                         .   @E@@@@   L,XU      R2,-0MB
)@@G@@177                 . GET OUTPUT CHAR MASK@F@@@@   LXI,U     X10,1      MC
)@@G@@              . SET INC IN EXECUTE REG    @G@@@@   LXI,U     A1,1       MD
)@@G@@              . SET INC IN OUTPUT BUFFER REG    @F@@@@   L,U       A3,4 ME
)@@G@@                    . FETCH # OF CHARS/WORD     @D@@@@   S         A3,E$MF
)@@G@@OUTCNT              . SAVE FOR LATER@E@@@@   L,U       A3,9             MG
)@@G@@        . GET # OF BITS/CHAR  @C@@@@   S         A3,E$OUTBITS           MH
)@@G@@  . SAVE    @E@@@@   L,U       A3,040                   . GET ASCII BLANMI
)@@G@@K     @E@@@@   S         A3,E$OUTBLK              . MAY NEED IT TOO     MJ
)@@G@@@G@@@@   L         A3,(040040040040)        . GET FULL WORD OF ASCII BLAMK
)@@G@@NKS   @E@@@@   S         A3,E$OUTBLKWRD           . AND SAVE IT TOO     ML
)@@G@@@B@@@@   REPEAT                             .   @E@@@@      L         A4MM
)@@G@@,E$OUTBLKWRD        . PRELOAD OUTPUT WORD @E@@@@      CALL,X10  0,X10   MN
)@@G@@              . TRANSFER CONTROL    @E@@@@      LSSC      A4,9          MO
)@@G@@        . SHIFT OUT FIRST CHAR@F@@@@      LSSC      A4,9                MP
)@@G@@  . SHIFT OUT SECOND CHAR     @E@@@@      LSSC      A4,9                MQ
)@@G@@  . SHIFT OUT THIRD CHAR@E@@@@      CALL,X10  0,X10                 . TRMR
)@@G@@ANSFER CONTROL    @D@@@@      S         A4,0,*A1              . OUTPUT WMS
)@@G@@ORD   @C@@@@   ENDREP                             . LOOP    @B@@@@ ENDBEMT
)@@G@@G                               .   @[@@@@ .    @[@@@@ .    @[@@@@/.    MU
)@@G@@@[@@@@ .    @[@@@@ .    @E@@@@ . THE FOLLOWING ARE INPUT CHARACTER FETCHMV
)@@G@@ AND TRANSLATION  @E@@@@ .     ROUTINES.  IT SHOULD BE NOTED, HOWEVER, TMW
)@@G@@HAT THEY ARE@A@@@@ .     FAR LESS EFFICIENT THAN THE: @#@@@@ .          MX
)@@G@@E$GET @^@@@@ .          E$XXXXTRANS @#@@@@ .          E$PUT @[@@@@ .    MY
)@@G@@@E@@@@ .     SEQUENCE.  THERE ARE, HOWEVER, SITUATIONS WHERE ONE  @E@@@@MZ
)@@G@@ .     WOULD LIKE TO BE CONCERNED WITH INPUT AND OUTPUT     @E@@@@ .    NA
)@@G@@ CHARACTER MODES ONLY AT RECORD INITIALIZATION TIME.  @E@@@@ .     OTHERNB
)@@G@@WISE CHECKING OF MODE FLAGS THROUGH OUT THE REST@F@@@@ .     OF THE CODENC
)@@G@@ WHICH MANIPULATES THAT RECORD IS NECESSARY.    @E@@@@ .     IF THAT MANND
)@@G@@IPULATION IS SIMPLE THE FLAG CHECK IS MORE@E@@@@ .     THAN ACCEPTABLE, NE
)@@G@@BUT IF THAT MANIPULATION IS COMPLEX,@F@@@@ .     BETTER INITIALIZATION INF
)@@G@@S PROBABLY DESIRABLE.  OF COURSE,   @E@@@@ .     ANOTHER ALTERNATIVE IS NG
)@@G@@TO ALWAYS TRANSLATE RECORDS TO@F@@@@ .     SOME COMMON MODE AT INTIALIZANH
)@@G@@TION TIME.  THESE ROUTINES    @F@@@@ .     ARE MEANT AS A SIMPLE ALTERNANI
)@@G@@TIVE TO CONSTANT TRANSLATION. @F@@@@ .     THEY ARE PROBABLY MOST VALUEBNJ
)@@G@@LE IN THE CASE WHERE RECORD   @F@@@@ .     MANIPULATION IS COMPLEX AND TNK
)@@G@@HE INPUT MEDIUM IS OF MIXED   @G@@@@ .     MODE WHERE TRANSLATION IS OFTNL
)@@G@@EN NOT REQUIRED.  THEY MAY SEEM     @G@@@@ .     SLIGHTLY GROSS BUT SIMINM
)@@G@@LAR ROUTINES ARE USED IN TIDE$, USING     @G@@@@ .     LOAD AND STORE TANN
)@@G@@BLES INSTEAD OF THE SHIFT APPROACH, AND THESE   @C@@@@ .     ARE SOMEWHANO
)@@G@@T MORE EFFICIENT THAN THOSE.  @[@@@@ .    @F@@@@ .     SIMILAR ROUTINES NP
)@@G@@COULD BE CONCIEVED FOR OUTPUT BUT AT THIS @C@@@@ .     WRITING HAVE NOT NQ
)@@G@@PROVEN TO BE USEFUL.    @[@@@@ .    @F@@@@ .     IF THE ROUTINE 'FDASGETNR
)@@G@@' IS TO BE POTENTIALLY CALLED, THE  @G@@@@ .     PROC CALLS E$OFFSET,<NONS
)@@G@@NZERO VALUE> AND E$REOPEN,<NONZERO VALUE> @G@@@@ .     INSTEAD OF THEIR NT
)@@G@@SIMPLAR COUNTERPARTS MUST BE USED.  THIS WILL   @F@@@@ .     GENERATE CONU
)@@G@@DE COMPATABLE WITH THE TRANSLATING ROUTINES AS  @G@@@@ .     WELL AS THENV
)@@G@@ REST OF THE COMPLEX.  THIS CODE IS NOT AS EFFICIENT  @G@@@@ .     AS THNW
)@@G@@E STANDARD CALL AND SHOULD NOT BE USED UNLESS 'FDASGET'     @D@@@@ .    NX
)@@G@@ MAY BE OPENED AT THE CHARACTER FETCH ROUTINE.  @[@@@@ .    @F@@@@ .    NY
)@@G@@ THESE ROUTINES BEHAVE IN ALL WAYS CONSISTENT WITH THE REST @E@@@@ .    NZ
)@@G@@ OF THE CHARACTER MANIPULATION COMPLEX WITH THESE     @#@@@@ .     EXCEPOA
)@@G@@TIONS:@F@@@@ .          1. E$OFFSET,<NONZ VALUE> MUST BE USED IF FDASGETOB
)@@G@@ CAN  @ @@@@ .             BE CALLED.     @F@@@@ .          2. E$REOPEN,OC
)@@G@@<NONZ VALUE> MUST BE USED IF FDASGET CAN  @ @@@@ .             BE CALLEDOD
)@@G@@.     @E@@@@ .          3. X8 BECOMES PART OF THE REQUIRED REGISTER SET.OE
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@/.    @[@@@@ .    @]@@@@ . FDAOF
)@@G@@SGET -@F@@@@ .     FIELDATA TO ASCII INPUT CHARACTER TRANSLATION ROUTINEOG
)@@G@@.     @ @@@@ .     ROUTINE IS OPENED BY:  @ @@@@ .          CALL,X9 FDASOH
)@@G@@GET . @E@@@@ .     WITH THIS STANDARD INITIALIZATION TAKES PLACE AND    OI
)@@G@@@G@@@@ .     THE FIRST CHARACTER IS TRANSLATED AND SHIFTED INTO POSITIONOJ
)@@G@@.     @E@@@@ .     SUBSEQUENT CHARACTERS ARE SHIFTED AND TRANSLATED VIA:OK
)@@G@@@^@@@@ .          EX 0,*X9 .  @[@@@@ .    @[@@@@ .    @[@@@@$(0). @G@@@@OL
)@@G@@SWITCH    +         0                 . FOR FDASGET TO MAINTAIN BOUNDARYOM
)@@G@@@H@@@@CHARSAVE  +         0                 . USED BY BOTH TO SAVE CONTEON
)@@G@@NTS OF A3   @[@@@@ .    @[@@@@ .    @[@@@@$(2). @]@@@@FDASGET*.   @B@@@@OO
)@@G@@ BEGIN CYCLIC                         .   @E@@@@   L,U       R3,0177    OP
)@@G@@              . INIT INPUT MASK     @D@@@@   LXI,U     X9,1             OQ
)@@G@@        . SET EX REG INC@F@@@@   LXI,U     A0,1                     . SEOR
)@@G@@T INPUT BUF PTR INC     @G@@@@   L,U       A3,6                     . # OS
)@@G@@OF CHARS PER WORD INPUT STRING@G@@@@   S         A3,E$INCNT             OT
)@@G@@  . NOTE INPUT STRING IS REALLY FD  @F@@@@   S         A3,E$INBITS      OU
)@@G@@        . ALSO # BITS PER INPUT CHAR@E@@@@   L,U       A3,040           OV
)@@G@@        . THIS IS ASCII BLANK @H@@@@   S         A3,E$INBLK             OW
)@@G@@  . USE ASCII BECAUSE ITS WHAT IS SEEN    @D@@@@   L         A3,(0400400OX
)@@G@@40040)        . ASCII BLK WORD@G@@@@   S         A3,E$INBLKWRD          OY
)@@G@@  . AGAIN ASCII IS WHAT WE WANT     @B@@@@   REPEAT                     OZ
)@@G@@        .   @F@@@@      SZ        SWITCH                . START ON WORD PA
)@@G@@BOUNDARY    @B@@@@      REPEAT                          .   @E@@@@      PB
)@@G@@   IF ZERO,IN,SWITCH THEN       . ON WORD BOUNDARY    @F@@@@            PC
)@@G@@L         A2,,A0          . CAN USE ONLY 1ST 4 CHARS  @F@@@@            PD
)@@G@@S         X11,SWITCH      . SET SWITCH TO PICK UP REST@B@@@@         ELSPE
)@@G@@E                         .   @F@@@@            IF POS,IN,SWITCH THEN   PF
)@@G@@  . GET MID 4 CHARS 2 WRD GRP @E@@@@               S         A3,CHARSAVEPG
)@@G@@  . SAVE CONTENTS OF A3 @F@@@@               L         A2,,*A0      . GEPH
)@@G@@T LAST 2 CHARS AND BUMP @E@@@@               L         A3,,A0       . ANPI
)@@G@@D NEXT 2 CHARS    @E@@@@               LDSL      A2,24        . SHIFT FOPJ
)@@G@@R 1ST CHAR  @G@@@@               SN        A0,SWITCH    . SET SWITCH TO PK
)@@G@@PICK UP LAST 4    @E@@@@               L         A3,CHARSAVE  . GET CONTPL
)@@G@@ENTS OF A3  @B@@@@            ELSE                      .   @G@@@@      PM
)@@G@@         L         A2,,*A0      . NEED LAST 4 CHARS OF THIS WRD   @E@@@@PN
)@@G@@               LSSL      A2,12        . SHIFT TO 1ST OF 4   @D@@@@      PO
)@@G@@         SZ        SWITCH       . RESTART CYCLE @B@@@@            ENDIF PP
)@@G@@                    .   @B@@@@         ENDIF                        .   PQ
)@@G@@@F@@@@         CALL,X8   ASFETCH            . SHIFT AND TRANS 1ST CHAR  PR
)@@G@@@F@@@@         CALL,X9   0,X9               . RETURN TO CALLING ROUTINE PS
)@@G@@@F@@@@         CALL,X8   ASFETCH            . SHIFT AND TRANS 2ND CHAR  PT
)@@G@@@F@@@@         CALL,X8   ASFETCH            . SHIFT AND TRANS 3RD CHAR  PU
)@@G@@@F@@@@         CALL,X8   ASFETCH            . SHIFT AND TRAND 4TH CHAR  PV
)@@G@@@G@@@@         CALL,X9   0,X9               . RETURN CONTROL TO THIS ROUPW
)@@G@@TINE  @B@@@@      ENDREP                          .   @B@@@@   ENDREP   PX
)@@G@@                          .   @B@@@@ ENDBEG                             PY
)@@G@@  .   @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(1). @]@@@@ASFETCH.    PZ
)@@G@@@B@@@@ BEGIN SUBROUTINE,X8,NOSAVE           .   @E@@@@   S         A3,CHQA
)@@G@@ARSAVE              . SAVE CONTENTS OF A3 @E@@@@   LSSC      A2,6       QB
)@@G@@              . SHIFT OVER CHAR     @C@@@@   AND,U     A2,077           QC
)@@G@@        . INTO A3 @D@@@@   E$FDASTRANS                         . TRANSLAQD
)@@G@@TE    @D@@@@   DSC       A2,9                     . BACK TO A2    @E@@@@QE
)@@G@@   LSSC      A2,9                     . READY FOR FETCH     @F@@@@   L  QF
)@@G@@       A3,CHARSAVE              . RESTORE CONTENTS OF A3    @B@@@@ ENDBEQG
)@@G@@G                               .   @[@@@@/.    @[@@@@ .    @[@@@@ .    QH
)@@G@@@]@@@@ . ASFDGET -@F@@@@ .     ASCII TO FIELDATA CHARACTER FETCH AND TRAQI
)@@G@@NSLATION ROUTINE. @E@@@@ .     TO OPEN AND SHIFT IN AND TRANSLATE FIRST QJ
)@@G@@CHARACTER:  @ @@@@ .          CALL,X9 ASFDGET . @D@@@@ .     TO SHIFT ANQK
)@@G@@D TRANSLATE SUBSEQUENT CHARACTERS:  @^@@@@ .          EX 0,*X9 .  @[@@@@QL
)@@G@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(2). @]@@@@ASFDGET*.   @B@@@@ BEGINQM
)@@G@@ CYCLIC                         .   @E@@@@   L,U       R3,077           QN
)@@G@@        . INIT INPUT MASK     @D@@@@   LXI,U     X9,1                   QO
)@@G@@  . AND EX REG INC@E@@@@   LXI,U     A0,1                     . INIT BUFQP
)@@G@@ PTR INC    @G@@@@   L,U       A3,4                     . # OF CHAR/WRD QQ
)@@G@@OF INPUT STRING   @F@@@@   S         A3,E$INCNT               . INPUT ISQR
)@@G@@ REALLY ASCII     @F@@@@   L,U       A3,9                     . GET # OFQS
)@@G@@ BITS/INPUT CHAR  @F@@@@   S         A3,E$INBITS              . INPUT ISQT
)@@G@@ AT ASCII LEVEL   @G@@@@   L,U       A3,05                    . BUT WE WQU
)@@G@@ANT TO SEE FIELDATA     @E@@@@   S         A3,E$INBLK               . SOQV
)@@G@@ USE FD BLANK     @F@@@@   L         A3,(050505050505)        . ALSO WORQW
)@@G@@D OF FD BLANKS    @E@@@@   S         A3,E$INBLKWRD            . MAY NEEDQX
)@@G@@ THIS LATER @H@@@@   REPEAT                             . NEST TO BE CONQY
)@@G@@SISTENT WITH FDASGET    @D@@@@      REPEAT                          . REQZ
)@@G@@AL LOOP     @D@@@@         L         A2,,*A0            . GET INPUT WORDRA
)@@G@@@E@@@@         CALL,X8   FDFETCH            . SHIFT AND TRANSLATE @F@@@@RB
)@@G@@         CALL,X9   0,X9               . RETURN TO CALLING ROUTINE @F@@@@RC
)@@G@@         CALL,X8   FDFETCH            . SHIFT AND TRANS 2ND CHAR  @F@@@@RD
)@@G@@         CALL,X8   FDFETCH            . SHIFT AND TRANS 3RD CHAR  @F@@@@RE
)@@G@@         CALL,X8   FDFETCH            . SHIFT AND TRANS 4TH CHAR  @E@@@@RF
)@@G@@         CALL,X9   0,X9               . RETURN CONTROL HERE @C@@@@      RG
)@@G@@ENDREP                          . LOOP    @B@@@@   ENDREP               RH
)@@G@@              .   @B@@@@ ENDBEG                               .   @[@@@@RI
)@@G@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(1). @]@@@@FDFETCH.    @B@@@@ BEGINRJ
)@@G@@ SUBROUTINE,X8,NOSAVE           .   @E@@@@   S         A3,CHARSAVE      RK
)@@G@@        . SAVE CONTENTS OF A3 @E@@@@   LSSC      A2,9                   RL
)@@G@@  . SHIFT OVER CHARACTER@E@@@@   AND,U     A2,0177                  . OMRM
)@@G@@MIT GARBAGE BITS  @D@@@@   E$ASFDTRANS                         . TRANSLARN
)@@G@@TE    @D@@@@   DSC       A2,9                     . BACK TO A2    @E@@@@RO
)@@G@@   LSSC      A2,9                     . READY FOR FETCH     @F@@@@   L  RP
)@@G@@       A3,CHARSAVE              . RESTORE CONTENTS OF A3    @B@@@@ ENDBERQ
)@@G@@G                               .   @[@@@@ .    @B@@@@ END              RR
)@@G@@                    .   ___    A3,040                   . THIS IS ASCII RS
)@@G@@BLANK @H@@@@   S        *[S@@@*SDFF*@[@@@@.     @[@@@@.     @[@@@@.     RT
)@@G@@@B@@@@. THIS ROUTINE PROVIDES THE ABILITY TO    @B@@@@.         SEARCH TRU
)@@G@@HE SPECIFIED NUMBER     @B@@@@.         OF RECORDS OF B FILE FOR A BLOCKRV
)@@G@@@C@@@@.         COMPARISON WHICH IS GREATER THAN THE  @C@@@@.         PERW
)@@G@@EK FACTOR.  IT RETURNS WITH THE     @C@@@@.         COMPARE PACKET UPDATRX
)@@G@@ED TO REFLECT     @C@@@@.         THE LARGEST  NUMBER OF SEQUENTIALLY   RY
)@@G@@@C@@@@.         COMPARED RECORDS AVAILABLE WITHIN THE @ @@@@.         LORZ
)@@G@@OK AHEAD FACTOR.  @B@@@@.         USES X1,2,11 A0-5,13-15 R1-8    @ @@@@SA
)@@G@@.         CALLING SEQUENCE:   @B@@@@.                   L,U   A0,PKT ADDSB
)@@G@@R     @A@@@@.                   CALL  MATCH     @A@@@@.                 SC
)@@G@@  <NORMAL RETURN> @[@@@@.     @[@@@@.     @[@@@@.     @A@@@@. THIS IS THSD
)@@G@@E RESPECTIVE PACKET:    @[@@@@.     @[@@@@.     @I@@@@.                 SE
)@@G@@ .............................................................    @I@@@@SF
)@@G@@.       PKT+0      :         *LA FACTOR          :          #SIG RECS   SG
)@@G@@       :    @I@@@@.                  ...................................SH
)@@G@@..........................    @I@@@@.                  :      *A FIELD PSI
)@@G@@KT ADDR      :      *B FIELD PKT ADDR      :    @I@@@@.                 SJ
)@@G@@ .............................................................    @I@@@@SK
)@@G@@.                  :      *A ISDFI PKT ADDR      :      *B ISDFI PKT ADDSL
)@@G@@R      :    @I@@@@.                  ...................................SM
)@@G@@..........................    @I@@@@.                  :            ARECSN
)@@G@@#            :            BREC#            :    @I@@@@.                 SO
)@@G@@ .............................................................    @I@@@@SP
)@@G@@.                  :            #RECA            :            #RECB     SQ
)@@G@@       :    @I@@@@.                  ...................................SR
)@@G@@..........................    @I@@@@.                  :        #SIG RECSS
)@@G@@ TEMP        :        SIG REC TOTAL        :    @I@@@@.                 ST
)@@G@@ .............................................................    @I@@@@SU
)@@G@@.                  :              0              :         # REC TEMP   SV
)@@G@@       :    @I@@@@.                  ...................................SW
)@@G@@..........................    @[@@@@.     @[@@@@.     @B@@@@          AXSX
)@@G@@R$                        .   @B@@@@          STRUC$                    SY
)@@G@@  .   @B@@@@          DOWNDEF                     .   @B@@@@          EDSZ
)@@G@@$PROCS                    .   @B@@@@          RESUME                    TA
)@@G@@  .   @[@@@@.     @[@@@@.     @[@@@@.     @E@@@@ARECNO    EQUF      3,A0TB
)@@G@@,H1           . RECORD # OF FILE A  @E@@@@BRECNO    EQUF      3,A0,H2   TC
)@@G@@        . RECORD # OF FILE B  @F@@@@NORECA    EQUF      4,A0,H1         TD
)@@G@@  . # OF RECORDS OF FILE A    @F@@@@NORECB    EQUF      4,A0,H2         TE
)@@G@@  . # OF RECORDS OF FILE B    @F@@@@SIGREC    EQUF      0,A0,H2         TF
)@@G@@  . # OF ACTUAL RECORDS PASSED@F@@@@SIGTEMP   EQUF      5,A0,H1         TG
)@@G@@  . TEMP STORAGE FOR SIGREC   @F@@@@RECTEMP   EQUF      6,A0,H2         TH
)@@G@@  . TEMP STORAGE FOR #RECA    @E@@@@LAFAC     EQUF      0,A0,H1         TI
)@@G@@  . LOOK AHEAD FACTOR   @F@@@@SIGTOT    EQUF      5,A0,H2           . TOTJ
)@@G@@TAL OF RECS ASSED B FILE@G@@@@SIGT      EQUF      5,A0              . COTK
)@@G@@MBINED SIGTEMP AND SIGTOT     @[@@@@.     @[@@@@.     @[@@@@.     @[@@@@TL
)@@G@@/.    @[@@@@.     @[@@@@.     @[@@@@.     @[@@@@$(0). @D@@@@DONE      + TM
)@@G@@        0                 . EXIT FLAG     @[@@@@ .    @[@@@@ .    @[@@@@TN
)@@G@@ .    @[@@@@$(1). @]@@@@MATCH*.     @B@@@@ BEGIN SUBROUTINE             TO
)@@G@@        .   @F@@@@   SZ        SIGT                     . ZERO TEMP REC TP
)@@G@@COUNTERS    @F@@@@   L         A1,BRECNO                . INC START REC#TQ
)@@G@@ ON 'B' FILE@G@@@@   A,U       A1,1                     .    BECAUSE ON TR
)@@G@@ENTRY 'A' NOT     @E@@@@   S         A1,BRECNO                .    EQUALTS
)@@G@@ TO 'B'.    @D@@@@   SZ        DONE                     . INIT EXIT FLAGTT
)@@G@@@B@@@@   REPEAT UNTIL NONZ,IN,DONE          .   @B@@@@      CASENTRY CALTU
)@@G@@LING COMPARE        .   @F@@@@      CASE 0,1                        . EOTV
)@@G@@FS ON ONE OR THE OTHER  @E@@@@         L         A1,SIGREC          . CHTW
)@@G@@ECK FOR UPDATE    @D@@@@         IF A1,LT,PEEK THEN           . IF NOT GTX
)@@G@@ET OUT@E@@@@            IF A1,IS,NONZ THEN        . IF ZERO NO NEED     TY
)@@G@@@F@@@@               S         A1,SIGTEMP   . SET AS NUMBER OF RECS     TZ
)@@G@@@B@@@@            ENDIF                     .   @E@@@@            L     UA
)@@G@@    A1,SIGTEMP      . GET MAX REC COUNT   @F@@@@            S         A1UB
)@@G@@,SIGREC       . SET AS # OF RECS PASSED   @B@@@@         ENDIF          UC
)@@G@@              .   @D@@@@         S         X11,DONE           . SET EXITUD
)@@G@@ FLAG @D@@@@      CASE 2                          . NORMAL RETURN @F@@@@UE
)@@G@@         L         A1,SIGREC          . GET NUMBER OF REC PASSED  @G@@@@UF
)@@G@@         IF A1,GE,PEEK THEN           . IS BLOCK CONSIDERED SIGNIFICANT UG
)@@G@@@G@@@@            S         X11,DONE        . YES - SET EXIT FLAG AND GEUH
)@@G@@T OUT @B@@@@         ELSE                         .   @G@@@@            UI
)@@G@@IF A1,IS,NONZ THEN        . SIGTEMP HOLDS LAST BLK COUNT    @E@@@@      UJ
)@@G@@         S         A1,SIGTEMP   . UPDATE ONLY IF NONZ @B@@@@            UK
)@@G@@ENDIF                     .   @F@@@@            L         A1,NORECB     UL
)@@G@@  . GET # RECS PASSED ON 'B'  @E@@@@            IF A1,IS,ZERO THEN      UM
)@@G@@  . ZERO ASSUMES ONE REC@E@@@@               L,U       A1,1         . REUN
)@@G@@SET TO ON REC     @B@@@@            ENDIF                     .   @F@@@@UO
)@@G@@            A         A1,BRECNO       . INC CURRENT 'B' REC #     @C@@@@UP
)@@G@@            S         A1,BRECNO       . UPDATE  @E@@@@            L     UQ
)@@G@@    A1,SIGREC       . GET # OF RECS PASSED@E@@@@            IF A1,IS,ZERUR
)@@G@@O THEN        . ZERO INPLIES ONE    @D@@@@               A,U       A1,1 US
)@@G@@        . SET AS ONE    @B@@@@            ENDIF                     .   UT
)@@G@@@G@@@@            A         A1,SIGTOT       . KEEP TRK OF HOW FAR WE'VE UU
)@@G@@GONE  @G@@@@            S         A1,SIGTOT       . UPDATE TOTAL RECS PAUV
)@@G@@SSED COUNT  @F@@@@            IF A1,GE,LAFAC THEN       . ARE WE PASSED UW
)@@G@@LOOK AHEAD  @F@@@@               L         A1,SIGTEMP   . YES - GET LASTUX
)@@G@@ BLOCK COUNT@G@@@@               S         A1,SIGREC    . SET AS NUMBER UY
)@@G@@OF REC PASSED     @D@@@@               S         X11,DONE     . SET EXITUZ
)@@G@@ FLAG @B@@@@            ENDIF                     .   @B@@@@         ENDVA
)@@G@@IF                        .   @B@@@@      ENDCASE                       VB
)@@G@@  .   @B@@@@   ENDREP                             .   @B@@@@ ENDBEG     VC
)@@G@@                          .   @B@@@@ END                                VD
)@@G@@  .   ___    ...........................................................VE
)@@G@@..    @I@@@@.                  :      *A FIELD PKT ADDR      :      *B FVF
)@@G@@IELD PKT ADDR      :    *[S@@@*SDFF*@[@@@@ .    @[@@@@ .    @B@@@@      VG
)@@G@@    AXR$                        .   @B@@@@          DOWNDEF             VH
)@@G@@        .   @B@@@@          ED$PROCS                    .   @B@@@@      VI
)@@G@@    STRUC$,'OLD PROGRAM'        .   @B@@@@          RESUME              VJ
)@@G@@        .   @[@@@@ .    @[@@@@ .    @F@@@@AIPADR    EQUF      2,X10,H1  VK
)@@G@@        . ISDFI PKT ADDR FOR 'A'    @F@@@@AFPADR    EQUF      1,X10,H1  VL
)@@G@@        . FIELD PKT ADDR FOR 'A'    @F@@@@BIPADR    EQUF      2,X10,H2  VM
)@@G@@        . ISDFIPKT ADDR FOR 'B'     @F@@@@BFPADR    EQUF      1,X10,H2  VN
)@@G@@        . FIELD PKT ADDR FOR 'B'    @F@@@@RECNO     EQUF      3,X10     VO
)@@G@@        . A&B REC #'SOF MASTERPKT   @G@@@@FIELD     EQUF      0,A0,S1   VP
)@@G@@        . FIELD DESIGNATOR (1=ADD, 2=DEL) @E@@@@PFSPKT    EQUF      8,A0VQ
)@@G@@              . START OF PFS PKT    @E@@@@SDFCW     EQUF      16,A0     VR
)@@G@@        . ISDFI CONTROL WORD  @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@VS
)@@G@@ .    @]@@@@ . PCFDOWN -@D@@@@ .      THIS IS REALLY THE DRIVING ROUTINEVT
)@@G@@ FOR THE PCF@D@@@@ .      DOWNDATING COMPLEX.  IT DOES NOTHING MORE THANVU
)@@G@@@E@@@@ .      CALL THE VARIOUS ROUTINES TO PREFORM THE APPROPRIATE@#@@@@VV
)@@G@@ .      ACTIONS.  @[@@@@ .    @[@@@@ .    @[@@@@$(0). @G@@@@NOSTARTCF*  VW
)@@G@@        +                 0 . IF 0 - NO STARS EITHER FILE   @F@@@@NOSTARVX
)@@G@@1   EQUF      NOSTARTCF,,H1     .  FLAG FOR STAR IN FILE 1  @F@@@@NOSTARVY
)@@G@@2   EQUF      NOSTARTCF,,H2     . FLAG FOR STAR IN FILE 2   @[@@@@ .    VZ
)@@G@@@[@@@@ .    @[@@@@$(1). @]@@@@PCFDOWN*.   @B@@@@ BEGIN SUBROUTINE       WA
)@@G@@              .   @G@@@@   S         X11,NOSTAR1              . INIT ADDWB
)@@G@@ FILE FOR STAR FOUND    @F@@@@   S         X11,NOSTAR2              . INWC
)@@G@@IT DEL FOR STAR FOUND   @D@@@@   L,U       A0,'&'                   . MEWD
)@@G@@SG STOP CHAR@F@@@@   S,S1      A0,CARDBUF               . INIT BUFFER JUWE
)@@G@@ST IN CASE  @G@@@@   S,S1      A0,AUXBUF                . INIT PREFIX BUWF
)@@G@@F JUST IN CASE    @H@@@@   CALL      BUILDPCFTREE             . BUILD TRWG
)@@G@@EE FORM FILES IN MASTERPKT    @G@@@@   L,U       X7,DUMP                WH
)@@G@@  . INIT FOR TREE DUMPING ROUTINE   @F@@@@   REPEAT                     WI
)@@G@@        . LOOP UNTIL NO MORE NODES  @E@@@@      CALL      DUMPTREEPCF   WJ
)@@G@@        . GET A NODE AND INIT @D@@@@   ESCAPE WHEN A0,IS,NEG            WK
)@@G@@  . NO MORE NODES @B@@@@   OTHERWISE                          .   @E@@@@WL
)@@G@@      CALL      CREATETCF             . GO DOWNDATE PCF     @D@@@@      WM
)@@G@@L         A0,INFOBITS           . GET OPTIONS   @F@@@@      IF A0,ODDP,OWN
)@@G@@PT('P') THEN        . IS THERE SDFO TO CLOSE?   @F@@@@         L,U      WO
)@@G@@ A1,' '             . MAYBE - CHECK CARDBUF     @B@@@@         IF A1,EQ,WP
)@@G@@CARDBUF,,S1 THEN    .   @H@@@@            S         X11,A0          . HAWQ
)@@G@@D OUTPUT - SET FLAG FOR PROG FILE   @C@@@@            CALL      CLOSESDFWR
)@@G@@O       . GO CLOSE@B@@@@         ENDIF                        .   @B@@@@WS
)@@G@@      ENDIF                           .   @B@@@@   ENDREP               WT
)@@G@@              .   @B@@@@ ENDBEG                               .   @[@@@@WU
)@@G@@/.    @[@@@@ .    @[@@@@ .    @#@@@@ . BUILDPCFTREE - @F@@@@ .      THISWV
)@@G@@ ROUTINE IS THE CSECT FOR THE TREE CREATION MECHANISM @G@@@@ .      OF 'WW
)@@G@@PCFSCAN'.  EACH ENTRY INTO THE TREE REPRESENTS A POTENTIAL  @F@@@@ .    WX
)@@G@@  TCF OUTPUT SEQUENCE, DEPENDING ON INPUT PARAMETERS AND    @G@@@@ .    WY
)@@G@@  OPTIONS.  THE ROUTINE USES TWO MAJOR SUBROUTINES TO ANALIZE     @G@@@@WZ
)@@G@@ .      EACH PROSPECTIVE INPUT PCF STREAM AND CREATE THE APPROPRIATE    XA
)@@G@@@G@@@@ .      NODES IN THE PCF TREE WHICH IS USED AS INPUT TO DIRECT SUBXB
)@@G@@-     @ @@@@ .      SEQUENT DOWNDATING.   @[@@@@ .    @[@@@@ .    @[@@@@XC
)@@G@@ .    @[@@@@$(0). @G@@@@EOF1      +         0                 . GLOBAL LXD
)@@G@@OC FOR EOF REC# FILE 1  @G@@@@EOF2      +         0                 . GLXE
)@@G@@OBAL LOC FOR EOF REC# FILE 2  @G@@@@CFIELD    +         0               XF
)@@G@@  . FLAG FOR WHICH FILE TO PROCESS  @D@@@@BDDONE    +         0         XG
)@@G@@        . LOOP EXIT FLG @H@@@@BDSAVE    RES       4                 . SAXH
)@@G@@VE FOR FILESCAN INFO CASE ERROR     @[@@@@ .    @[@@@@ .    @[@@@@$(1). XI
)@@G@@@#@@@@BUILDPCFTREE*.    @B@@@@ BEGIN SUBROUTINE                     .   XJ
)@@G@@@F@@@@   L,U       X10,MASTERPKT            . GET ADDR OF CONTROL PKT   XK
)@@G@@@G@@@@   L         A0,AFPADR                . WILL USE FIELDPKT ADDR HERXL
)@@G@@E     @F@@@@   L         A1,FIELD                 . PUT PKT IN PRESET ORXM
)@@G@@DER   @E@@@@   IF A1,NE,1,,U THEN                 . WANT DEL-ADD FORMAT XN
)@@G@@@E@@@@      CALL      SWAP                  . PUT PKT IN ORDER    @B@@@@XO
)@@G@@   ENDIF                              .   @F@@@@   SZ        CFIELD     XP
)@@G@@              . MEANS PROCESS DEL FIRST   @F@@@@   L         A0,AIPADR  XQ
)@@G@@              . GET ISDFI ADDR OF ADD     @F@@@@   CALL,X7   FILESCAN   XR
)@@G@@              . OPEN ROUTINE TO SCAN FILE @E@@@@   L,U       R10,2      XS
)@@G@@              . TO FILES TO PROCESS @E@@@@   REPEAT JGD,R10             XT
)@@G@@        . LOOP FOR BOTH FILES @E@@@@      SZ        BDDONE              XU
)@@G@@  . AND INNER LOOP FLAG @F@@@@      CALL,X7   0,X7                  . SCXV
)@@G@@AN FOR 1ST *ELNAME CARD @E@@@@      L         A5,INFOBITS           . GEXW
)@@G@@T INPUT OPTIONS   @E@@@@      IF A0,IS,ZERO THEN              . MAY BE NXX
)@@G@@O *EL CARDS @G@@@@         IF ZERO,IN,CFIELD THEN       . THERE ISN'T - XY
)@@G@@WE HAVE A EOF     @G@@@@            SZ        NOSTAR1         . REMOVE SXZ
)@@G@@TAR FOUND FLG THIS FILE @F@@@@            S         A1,EOF1         . SAYA
)@@G@@VE REC # OF EOF FILE 1  @E@@@@            L,U       A1,1            . STYB
)@@G@@ART WITH REC # 1  @D@@@@            CALL      BUILDNODE       . CREATE NYC
)@@G@@ODE   @B@@@@         ELSE                         .   @G@@@@            YD
)@@G@@SZ        NOSTAR2         . REMOVE STAR FOUND FLG THIS FILE @F@@@@      YE
)@@G@@      S         A1,EOF2         . SAVE REC # OF EOF FILE 2  @H@@@@      YF
)@@G@@      IF ZERO,IN,MONSTER AND ZERO,IN,NOSTARTCF THEN . ARE WE  EL PCF    YG
)@@G@@@H@@@@               L,H1      A0,ROOT      . YES - USE NODE CREATED BYDYH
)@@G@@ELETE FILE  @E@@@@               L         A1,INFOBITS  . GET INPUT OPTIYI
)@@G@@ONS   @I@@@@               IF ZERO,IN,1,A0 AND A1,ODDP,OPT('P') THEN . IYJ
)@@G@@S THERE AN ELT NAME?    @F@@@@                  L,U       A0,NOELTERR  .YK
)@@G@@ NO - GET ERROR CODE    @H@@@@                  DL        A1,SDFOPKT  . YL
)@@G@@GET INTERNAL NAME SPEC 3 - IF ANY   @E@@@@                  CALL      ERYM
)@@G@@ROR     . PRINT ERROR AND TERM@B@@@@               ENDIF                YN
)@@G@@  .   @F@@@@               L,U       A1,1         . START AGAIN WITH RECYO
)@@G@@ # 1  @H@@@@               S,H2      A1,5,A0      . STUFF IN ONLY NODE IYP
)@@G@@N TREE - I HOPE   @E@@@@            ELSE                      . NOT IN EYQ
)@@G@@LEMENT MODE @E@@@@               L,U       A1,1         . START WITH RECYR
)@@G@@ # 1  @E@@@@               CALL      BUILDNODE    . INSERT NODE IN TREE YS
)@@G@@@B@@@@            ENDIF                     .   @B@@@@         ENDIF    YT
)@@G@@                    .   @E@@@@         S         X11,BDDONE         . PAYU
)@@G@@SS INNER LOOP     @B@@@@      ELSE                            .   @F@@@@YV
)@@G@@         IF ZERO,IN,MONSTER OR A5,EVENP,OPT('P') . MAY NOT WANT IT@E@@@@YW
)@@G@@            IF A1,NE,1,,U THEN        . WAS IT FIRST REC    @F@@@@      YX
)@@G@@         DS        A1,BDSAVE    . SAVECURRENT REC FOR LATER @G@@@@      YY
)@@G@@         DS        A3,BDSAVE+2  . SAVE RESR OF INFO FORM FILESCAN @F@@@@YZ
)@@G@@               L,U       A1,PFSPKT1   . GET SPEC 1 PFS PKT ADDR   @E@@@@ZA
)@@G@@               IF NONZ,IN,CFIELD THEN . WHAT SPEC ARE WE?   @G@@@@      ZB
)@@G@@            L,U       A1,PFSPKT2  . GET ADDR OF SPEC 2 PFS PKT    @B@@@@ZC
)@@G@@               ENDIF                  .   @E@@@@               L,U      ZD
)@@G@@ A0,STARERR1  . LOAD ERROR CODE     @G@@@@               CALL      PCFERZE
)@@G@@ROR     . PROCESS ERROR - TRY TO CONTINUE @F@@@@               DL       ZF
)@@G@@ A1,BDSAVE    . RESTORE RECORD POSITION   @F@@@@               DL       ZG
)@@G@@ A3,BDSAVE+2  . AND REST OF FILESCAN INFO @B@@@@            ENDIF       ZH
)@@G@@              .   @B@@@@         ELSE                         .   @G@@@@ZI
)@@G@@            IF A1,EQ,1,,U THEN        . DON'T NEED ANY STAR CARDS HERE  ZJ
)@@G@@@F@@@@               L,U       A1,PFSPKT1   . GET SPEC 1 PFS PKT ADDR   ZK
)@@G@@@E@@@@               IF NONZ,IN,CFIELD THEN . WHAT SPEC ARE WE?   @G@@@@ZL
)@@G@@                  L,U       A1,PFSPKT2  . GET ADDR OF SPEC 2 PFS PKT    ZM
)@@G@@@B@@@@               ENDIF                  .   @D@@@@               L,UZN
)@@G@@       A0,STARERR2  . SET ERROR CODE@D@@@@               CALL      PCFERZO
)@@G@@ROR     . PROCESS ERROR @G@@@@               L,U       A1,2         . REZP
)@@G@@SET REC # TO IGNORE * CARD    @B@@@@            ELSE                    ZQ
)@@G@@  .   @F@@@@               L,U       A1,PFSPKT1   . GET SPEC 1 PFS PKT AZR
)@@G@@DDR   @E@@@@               IF NONZ,IN,CFIELD THEN . WHAT SPEC ARE WE?   ZS
)@@G@@@G@@@@                  L,U       A1,PFSPKT2  . GET ADDR OF SPEC 2 PFS PZT
)@@G@@KT    @B@@@@               ENDIF                  .   @D@@@@            ZU
)@@G@@   L,U       A0,STARERR3  . GET ERROR CODE@D@@@@               CALL     ZV
)@@G@@ PCFERROR     . PROCESS ERROR @G@@@@               L,U       A1,1       ZW
)@@G@@  . RECOVER AND START WITH REC # 1  @B@@@@            ENDIF             ZX
)@@G@@        .   @F@@@@            SZ        A0              . USE PFP PKT TOZY
)@@G@@ BUILD NODE @E@@@@            CALL      BUILDNODE       . INSERT NODE INZZ
)@@G@@ TREE @D@@@@            S         X11,BDDONE      . BYPAS LOOP    @B@@@@AA
)@@G@@         ENDIF                        .   @B@@@@      ENDIF             AB
)@@G@@              .   @F@@@@      REPEAT WHILE ZERO,IN,BDDONE     . INSERT NAC
)@@G@@ODES FOR THIS FILE@F@@@@         CALL      BUILDNODE          . BUILD ANAD
)@@G@@D INSERT NODE     @E@@@@         CALL,X7   0,X7               . GET NEXTAE
)@@G@@ *EL CARD   @E@@@@      ESCAPE WHEN A0,IS,ZERO          . GET OUT ON REAAF
)@@G@@L EOF @D@@@@         IF ZERO,IN,CFIELD THEN       . SET EOF REC # @E@@@@AG
)@@G@@            S         A1,EOF1         . WE'RE ON FILE 1     @B@@@@      AH
)@@G@@   ELSE                         .   @C@@@@            S         A1,EOF2 AI
)@@G@@        . FILE 2  @B@@@@         ENDIF                        .   @B@@@@AJ
)@@G@@      OTHERWISE                       .   @B@@@@      ENDREP            AK
)@@G@@              .   @E@@@@      S         X11,CFIELD            . ON FILE AL
)@@G@@TWO NOW     @E@@@@      L,U       X10,MASTERPKT         . GET CONTROL PKAM
)@@G@@T ADDR@G@@@@      L         A0,BIPADR             . GET ISDFI PKT ADDR OAN
)@@G@@F ADD FILE  @E@@@@      CALL,X7   FILESCAN              . OPEN FILE SCANAO
)@@G@@NER   @C@@@@   ENDREP                             . LOOP    @B@@@@ ENDBEAP
)@@G@@G                               .   @[@@@@/.    @[@@@@ .    @[@@@@ .    AQ
)@@G@@@#@@@@ . FILESCAN -     @E@@@@ .      THIS IS A CYCLIC COROUTINE DESIGNEAR
)@@G@@D TO SCAN A GIVEN @ @@@@ .      FILE FOR *EL CARDS.   @#@@@@ .      TO OAS
)@@G@@PEN:  @E@@@@ .           L    A0,<ISDFI PKT ADDR OF FILE TO BE SCANNED> AT
)@@G@@@ @@@@ .           CALL,X7 FILESCAN @^@@@@ .      SUBSEQUENTLY:   @E@@@@AU
)@@G@@ .           CALL,X7 0,X7 . WILL SCAN FOR SUCCESSIVE * CARDS@^@@@@ .    AV
)@@G@@       ON RETURN: @^@@@@ .                A0 =  @B@@@@ .                AW
)@@G@@      0 => REAL EOF     @C@@@@ .                      1 => *EL CARD FOUNAX
)@@G@@D     @B@@@@ .                A1 = REC # OF *EL OR EOF@B@@@@ .          AY
)@@G@@      A2 = LOC OF REC IN CORE @E@@@@ .                A3 = CHARACTER MODAZ
)@@G@@E FLAG (1=>ASCII, 0=>FD)@A@@@@ .                A4 = LENGTH OF REC@[@@@@BA
)@@G@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(0). @F@@@@PACKETSAVE          +   BB
)@@G@@              0 . STUFF PKT ADDR ON OPEN  @F@@@@RECNOSAVE +         0   BC
)@@G@@              . SAVE WHERE WE LEFT OFF    @D@@@@FLDONE    +         0   BD
)@@G@@              . LOOP EXIT FLAG@[@@@@ .    @[@@@@ .    @[@@@@$(1). @]@@@@BE
)@@G@@FILESCAN*.  @B@@@@ BEGIN CYCLIC                         .   @F@@@@   S  BF
)@@G@@       A0,PACKETSAVE            . THIS IS OPEN SEQUENCE     @E@@@@   L,UBG
)@@G@@       A0,1                     . START WITH 1ST REC  @C@@@@   S        BH
)@@G@@ A0,RECNOSAVE             . INIT    @E@@@@   CALL,X7   0,X7             BI
)@@G@@        . RETURN FROM OPEN    @B@@@@   REPEAT                           BJ
)@@G@@  .   @G@@@@      L         A0,PACKETSAVE         . RESTORE CURRENT FILEBK
)@@G@@ PKT ADDR   @D@@@@      L         A1,RECNOSAVE          . AND NEXT REC #BL
)@@G@@@F@@@@      SZ        FLDONE                . INIT INNER LOOP EXIT FLAG BM
)@@G@@@E@@@@      REPEAT UNTIL NONZ,IN,FLDONE     . LOOP FOR * CARD     @D@@@@BN
)@@G@@         CASENTRY CALLING ISDFI       . GET NEXT REC  @E@@@@         CASBO
)@@G@@E 0                       . THIS IS ERROR RETURN@D@@@@            L     BP
)@@G@@    A1,A0           . GET PKT ADDR  @D@@@@            L,U       A0,ISDFIBQ
)@@G@@ERR     . SET ERROR CODE@F@@@@            CALL      ERROR           . PRBR
)@@G@@OCESS ERROR AND TERM    @E@@@@         CASE 1                       . THBS
)@@G@@IS IS EOF RETURN  @G@@@@            S         A1,RECNOSAVE    . MAKE SURBT
)@@G@@E WE DON'T PASS EOF     @D@@@@            S         X11,FLDONE      . EXBU
)@@G@@IT LOOP     @E@@@@            SZ        A0              . RETURN EOF CODBV
)@@G@@E     @D@@@@         CASE 2                       . NORMAL RETURN @E@@@@BW
)@@G@@            SSC       A1,18           . SHIFT IN MODE FLG   @C@@@@      BX
)@@G@@      L,U       A3,,A1          . INTO A3 @F@@@@            SSL       A1BY
)@@G@@,18           . SHIFT OVER REC # (NEXT)   @E@@@@            S         A1BZ
)@@G@@,RECNOSAVE    . SAVE IN CASE WE EXIT@E@@@@            L         A4,,A2  CA
)@@G@@        . GET 1ST WORD OF REC @D@@@@            IF A3,IS,ZERO THEN      CB
)@@G@@  . FD OF ASCII?  @F@@@@               SSL       A4,24        . FD - NEECC
)@@G@@D FIRST TWO CHARS @F@@@@               OR,U      A4,077       . 2ND ANYTCD
)@@G@@HING BUT BLANK    @E@@@@               IF A5,EQ,05077,,U THEN . POSSIBLECE
)@@G@@ STAR CARD  @I@@@@                  IF A4,NE,05005,,U AND A4,NE,05050,,UCF
)@@G@@ THEN . TEST SEC CHAR FOR     @G@@@@                     L,T1      A4,SDCG
)@@G@@FCW  . GOT A *EL CARD - GET LENGTH  @D@@@@                     L,U      CH
)@@G@@ A0,1   . *EL STATUS    @D@@@@                     S         X11,FLDONE CI
)@@G@@ . EXIT LOOP@B@@@@                  ENDIF               .   @B@@@@      CJ
)@@G@@         ENDIF                  .   @C@@@@            ELSE              CK
)@@G@@        . ASCII   @F@@@@               SSL       A4,18        . GET FIRSCL
)@@G@@T TWO ASCII CHARS @F@@@@               AND,U     A4,0177177   . DON'T WACM
)@@G@@NT GARBAGE BITS   @D@@@@               L         A4,A5        . BACK TO CN
)@@G@@A4    @E@@@@               OR,U      A4,0777      . ANY CHAR WILL DO    CO
)@@G@@@E@@@@               IF A5,EQ,052777,,U THEN . POSSIBLE STAR CARD?@I@@@@CP
)@@G@@                  IF A4,NE,052040,,U AND A4,NE,052052,,U THEN . TEST SECCQ
)@@G@@ CHAR FO    @F@@@@                     L,T1      A4,SDFCW  . GET LENGTH CR
)@@G@@OF *EL CARD @F@@@@                     L,U       A0,1   . RETURN STATUS CS
)@@G@@FOR *EL     @D@@@@                     S         X11,FLDONE  . EXIT LOOPCT
)@@G@@@B@@@@                  ENDIF               .   @B@@@@               ENDCU
)@@G@@IF                  .   @B@@@@            ENDIF                     .   CV
)@@G@@@B@@@@         ENDCASE                      .   @B@@@@      ENDREP      CW
)@@G@@                    .   @E@@@@   ESCAPE WHEN A0,IS,ZERO             . QUCX
)@@G@@ICK EXIT FOR EOF  @C@@@@      CALL,X7   0,X7                  . RETURN  CY
)@@G@@@B@@@@   OTHERWISE                          .   @G@@@@      AN,U      A1CZ
)@@G@@,1                  . WANT CURRENT REC # NOT NEXT     @C@@@@      CALL,XDA
)@@G@@7   0,X7                  . RETURN  @B@@@@   ENDREP                     DB
)@@G@@        .   @B@@@@ ENDBEG                               .   @[@@@@/.    DC
)@@G@@@[@@@@ .    @[@@@@ .    @#@@@@ . BUILDNODE -    @E@@@@ .      THIS ROUTIDD
)@@G@@NE IS RESPONSIBLE FOR CREATING THE NODE   @D@@@@ .      WITH THE PROPER DE
)@@G@@INFORMATION AND INSETING IT IN@^@@@@ .      THE PCF TREE.   @#@@@@ .    DF
)@@G@@  ON ENTRY: @D@@@@ .           A0 = 0 => USE PFP PKT INFO TO BUILD NODE DG
)@@G@@@F@@@@ .              > 0 => USE *EL CARD AS RETURNED FROM FILESCAN     DH
)@@G@@@G@@@@ .                     REGISTERS A1 -> A4 AS RETURNED FROM FILESCADI
)@@G@@N.    @B@@@@ .                     EG. A1 = REC #     @B@@@@ .          DJ
)@@G@@               A2 = REC LOC   @B@@@@ .                         A3 = MODEDK
)@@G@@ FLAG @B@@@@ .                         A4 = REC LENGTH@[@@@@ .    @[@@@@DL
)@@G@@ .    @[@@@@ .    @[@@@@$(0). @F@@@@NODE      RES       5               DM
)@@G@@  . CREATION AREA FOR NODE    @G@@@@RECNUMBER +         0               DN
)@@G@@  . SAVE REC # CROSS CHAR ROUTINES  @[@@@@ .    @[@@@@ .    @F@@@@NRECNODO
)@@G@@1   EQUF      NODE+4,,H1        . EQUFS FOR STARTING REC #'S@B@@@@NRECNODP
)@@G@@2   EQUF      NODE+4,,H2        .   @F@@@@XRECNO1   EQUF      4,A1,H1   DQ
)@@G@@        . FOR NODE ALREADY IN TREE  @B@@@@XRECNO2   EQUF      4,A1,H2   DR
)@@G@@        .   @[@@@@ .    @[@@@@ .    @[@@@@$(1). @]@@@@BUILDNODE*. @B@@@@DS
)@@G@@ BEGIN SUBROUTINE                     .   @D@@@@   IF A0,IS,ZERO THEN   DT
)@@G@@              . USE PFP PKT   @E@@@@      L,U       X10,MASTERPKT       DU
)@@G@@  . GET MASTERPKT ADDR  @G@@@@      S         A1,RECNUMBER          . SADV
)@@G@@VE START OF BLK FOR LATER     @F@@@@      SZ        NODE+4              DW
)@@G@@  . INIT STARTING REC #'S     @E@@@@      IF ZERO,IN,CFIELD THEN        DX
)@@G@@  . WHICH FILE IS THIS? @E@@@@         L         A0,AFPADR          . GEDY
)@@G@@T FIELD PKT ADDR  @D@@@@         S         A1,NRECNO1         . FILE 1 -DZ
)@@G@@ DEL  @B@@@@      ELSE                            .   @E@@@@         L  EA
)@@G@@       A0,BFPADR          . GET FIELD PKT ADDR  @D@@@@         S        EB
)@@G@@ A1,NRECNO2         . FILE 2 - ADD  @B@@@@      ENDIF                   EC
)@@G@@        .   @E@@@@      DL        A3,PFSPKT+2           . GET ELEMENT NAED
)@@G@@ME    @D@@@@      DS        A3,NODE               . INTO NODE     @E@@@@EE
)@@G@@      DL        A3,PFSPKT+6           . GET VERSION NAME    @C@@@@      EF
)@@G@@DS        A3,NODE+2             . INTO PKT@B@@@@   ELSE                 EG
)@@G@@              .   @F@@@@      A,U       A1,1                  . BUMP PASEH
)@@G@@T * CARD REC #    @G@@@@      S         A1,RECNUMBER          . SAVE RECEI
)@@G@@ # CROSS CHAR ROUTINES  @E@@@@      L         A0,A2                 . GEEJ
)@@G@@T ADDR OF * CARD  @D@@@@      IF A3,IS,ZERO THEN              . 0=FD  1=EK
)@@G@@ASCII @F@@@@         MSI,U     A4,6               . CALC # OF CHARS IN REL
)@@G@@EC    @F@@@@         CALL,X9   FDGET              . OPEN FD FETCH ROUTINEM
)@@G@@E     @B@@@@      ELSE                            .   @F@@@@         MSIEN
)@@G@@,U     A4,4               . GET # OF CHARS IN REC     @F@@@@         CALEO
)@@G@@L,X9   ASFDGET            . ALWAYS LOOK AT FIELDATA   @B@@@@      ENDIF EP
)@@G@@                          .   @D@@@@      E$NEXT                        EQ
)@@G@@  . SKIP * CHAR   @E@@@@      ANU,U     A4,1                  . DECREMENER
)@@G@@T COUNT     @F@@@@      L,U       A1,NODE               . DESTINATION FOES
)@@G@@R OUTPUT    @F@@@@      CALL,X10  FDPUT                 . WANT NAME IN FET
)@@G@@IELDATA     @D@@@@      L,U       R1,4                  . BLANK OUT NODEEU
)@@G@@@F@@@@      L,U       A3,E$OUTBLKWRD        . LOC OF OUTPUT BLANK WORD  EV
)@@G@@@D@@@@      BT        A1,,*A3               . BLANK NODE    @G@@@@      EW
)@@G@@LXM,U     A1,NODE               . RESTORE START ADDR FOR OUTPUT   @E@@@@EX
)@@G@@      REPEAT JGD,A5                   . GET ELEMENT NAME    @E@@@@      EY
)@@G@@   E$GET                        . FETCH CHARACTER     @F@@@@      ESCAPEEZ
)@@G@@ WHEN A3,EQ,'/',,U OR A3,EQ,' ',,U . OK - I HOPE!     @F@@@@         E$CFA
)@@G@@LOSE                      . BLANK FILL AND OUTPUT     @E@@@@         IF FB
)@@G@@A3,EQ,'/',,U THEN         . IS THERE A VERSION? @H@@@@            LXM,U FC
)@@G@@    A1,NODE+2       . GUESS SO - RESET OUTPUT DESTINATION   @E@@@@      FD
)@@G@@      REPEAT JGD,A5             . LOOP FOR VERSION    @E@@@@            FE
)@@G@@   E$GET                  . FETCH CHARACTER     @G@@@@            ESCAPEFF
)@@G@@ WHEN A3,EQ,' ',,U  . BLK OR JGD SHOULD GET US OUT    @F@@@@            FG
)@@G@@   E$CLOSE                . BLANK FILL AND OUTPUT     @B@@@@            FH
)@@G@@OTHERWISE                 .   @E@@@@               E$PUT                FI
)@@G@@  . INTO OUTPUT STRING  @B@@@@            ATEND                     .   FJ
)@@G@@@F@@@@               E$CLOSE                . BLANK FILL AND OUTPUT     FK
)@@G@@@B@@@@            ENDREP                    .   @B@@@@         ENDIF    FL
)@@G@@                    .   @B@@@@      OTHERWISE                       .   FM
)@@G@@@E@@@@         E$PUT                        . INTO ELEMENT NAME   @B@@@@FN
)@@G@@      ATEND                           .   @F@@@@         E$CLOSE        FO
)@@G@@              . BLANK FILL AND OUTPUT     @B@@@@      ENDREP            FP
)@@G@@              .   @E@@@@      SZ        NODE+4                . INIT RECFQ
)@@G@@ # WORD     @F@@@@      L         A1,RECNUMBER          . GET SAVED REC FR
)@@G@@# OF * CARD @E@@@@      IF ZERO,IN,CFIELD THEN          . WHICH FILE IS FS
)@@G@@THIS? @D@@@@         S         A1,NRECNO1         . FILE 1 - DEL  @B@@@@FT
)@@G@@      ELSE                            .   @D@@@@         S         A1,NRFU
)@@G@@ECNO2         . FILE 2 - ADD  @B@@@@      ENDIF                         FV
)@@G@@  .   @B@@@@   ENDIF                              .   @F@@@@   L,U      FW
)@@G@@ A0,NODE                  . GET LOC OF NODE TO INSERT @D@@@@   L,U      FX
)@@G@@ A1,5                     . LENGTH OF NODE@D@@@@   CALL      INSERT     FY
)@@G@@              . INTO TREE     @E@@@@   IF A0,EQ,1,,U THEN               FZ
)@@G@@  . 1 => ALREADY THERE  @E@@@@      L         A2,RECNUMBER          . AGGA
)@@G@@AIN NEED REC #    @E@@@@      IF ZERO,IN,CFIELD THEN          . WHICH FIGB
)@@G@@LE IS THIS  @F@@@@         IF ZERO,IN,XRECNO1 THEN      . IS THERE ANYTHGC
)@@G@@ING HERE?   @E@@@@            S         A2,XRECNO1      . NO - OK TO UPDGD
)@@G@@ATE   @B@@@@         ELSE                         .   @F@@@@            GE
)@@G@@L,U       A1,PFSPKT1      . GET SPEC 1 PFS PKT ADDR   @E@@@@            GF
)@@G@@IF NONZ,IN,CFIELD THEN    . WHAT SPEC ARE WE?   @F@@@@               L,UGG
)@@G@@       A1,PFSPKT2   . GET ADDR OF SPEC 2 PFS PKT@B@@@@            ENDIF GH
)@@G@@                    .   @D@@@@            L,U       A0,DUPERR       . GEGI
)@@G@@T ERROR CODE@E@@@@            CALL      PCFERROR        . PRINT ERROR MEGJ
)@@G@@SSAGE @B@@@@         ENDIF                        .   @B@@@@      ELSE  GK
)@@G@@                          .   @G@@@@         IF ZERO,IN,XRECNO2 THEN    GL
)@@G@@  . IF WE HAVE SOMETHING - FORGET IT@E@@@@            S         A2,XRECNGM
)@@G@@O2      . INTO NODE IN TREE   @B@@@@         ELSE                       GN
)@@G@@  .   @F@@@@            L,U       A1,PFSPKT1      . GET SPEC 1 PFS PKT AGO
)@@G@@DDR   @E@@@@            IF NONZ,IN,CFIELD THEN    . WHAT SPEC ARE WE?   GP
)@@G@@@F@@@@               L,U       A1,PFSPKT2   . GET ADDR OF SPEC 2 PFS PKTGQ
)@@G@@@B@@@@            ENDIF                     .   @D@@@@            L,U   GR
)@@G@@    A0,DUPERR       . ERROR CODE    @B@@@@            CALL      PCFERRORGS
)@@G@@        .   @B@@@@         ENDIF                        .   @B@@@@      GT
)@@G@@ENDIF                           .   @B@@@@   ELSE                       GU
)@@G@@        .   @E@@@@      IF A0,IS,NEG THEN               . DID INSERT ERRGV
)@@G@@OR?   @F@@@@         L,U       A0,OVFLERR         . STORAGE OVERFLOW - FGW
)@@G@@ATAL  @F@@@@         CALL      ERROR              . PROCESS ERROR AND TEGX
)@@G@@RM    @B@@@@      ENDIF                           .   @B@@@@   ENDIF    GY
)@@G@@                          .   @B@@@@ ENDBEG                             GZ
)@@G@@  .   @[@@@@/.    @[@@@@ .    @[@@@@ .    @#@@@@ . DUMPTREEPCF -  @F@@@@HA
)@@G@@ .      THIS ROUTINE IS CALLED WITHIN THE LOOP WHICH PROCESSES    @F@@@@HB
)@@G@@ .      THE PCF TREE.  BEFORE ENTRANCE TO THAT LOOP THE REGISTER  @G@@@@HC
)@@G@@ .      X8 MUST BE INITIALIZED WITH THE ADDRESS OF 'DUMP'.  THIS IS     HD
)@@G@@@F@@@@ .      THE CYCLIC ROUTINE OF THE THREADED BINARY TREE COMPLEX    HE
)@@G@@@G@@@@ .      WHICH WILL SEQUENTIALLY FETCH NODES FROM THE TREE POINTED HF
)@@G@@TO    @G@@@@ .      BY THE EXTERNAL LOCATION 'ROOT'.  'DUMPTREEPCF' USESHG
)@@G@@ 'DUMP'     @F@@@@ .      TO OBTAIN A NODE, IT THEN CHECKS THE 'E','P', HH
)@@G@@AND 'Z'     @E@@@@ .      TO DETERMINE WHAT SHOULD BE DONE WITH THAT NODHI
)@@G@@E.  IF@F@@@@ .      THE NODE IS TO BE PROCESSED, 'MASTERPKT' IS INITALIZHJ
)@@G@@ED    @F@@@@ .      WITH THE PROPER STARTING RECORD NUMBERS OBTAINED FROHK
)@@G@@M     @F@@@@ .      THAT NODE.  THE PREFIX BUFFER IS ALSO INTIALIZED IN HL
)@@G@@CASE  @A@@@@ .      A -0 CARD MAY BE REQUIRED.  @D@@@@ .      ON ENTRY -HM
)@@G@@ X7 MUST BE PROPERLY SET FOR 'DUMP' @B@@@@ .      ON EXIT - A0 = -1 => NHN
)@@G@@O MORE NODES@E@@@@ .                   =  0 => NODE FETCHED AND INTIALIZHO
)@@G@@ED    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(0). @D@@@@DUDONE    + HP
)@@G@@        0                 . LOOP EXIT FLAG@[@@@@ .    @[@@@@ .    @[@@@@HQ
)@@G@@$(1). @#@@@@DUMPTREEPCF*.     @B@@@@ BEGIN SUBROUTINE                   HR
)@@G@@  .   @E@@@@   SZ        DUDONE                   . INIT LOOP EXIT FLAG HS
)@@G@@@D@@@@   REPEAT UNTIL NONZ,IN,DUDONE        . GET A NODE    @G@@@@      HT
)@@G@@L,U       X10,MASTERPKT         . WILL USE MASTERPKT ADDR HERE    @F@@@@HU
)@@G@@      CALL,X7   0,X7                  . FETCH A NODE FROM TREE    @E@@@@HV
)@@G@@      L         A1,A0                 . USE A1 IF POINTER   @D@@@@   ESCHW
)@@G@@APE WHEN A0,IS,NEG              . NO MORE NODES @B@@@@   OTHERWISE      HX
)@@G@@                    .   @D@@@@      L         A2,INFOBITS           . GEHY
)@@G@@T OPTIONS   @F@@@@      IF ZERO,IN,XRECNO1 OR ZERO,IN,XRECNO2 THEN . IS HZ
)@@G@@IT IN BOTH  @G@@@@         IF A2,ODDP,OPT('Z') THEN     . NO - BUT Z MEAIA
)@@G@@NS PROCESS ANYWAY @E@@@@            IF ZERO,IN,XRECNO1 THEN   . IS IT THIB
)@@G@@E DEL FILE? @G@@@@               L         A4,EOF1      . YES - FAKE EXIIC
)@@G@@STENCE WITH EOF   @I@@@@               S         A4,XRECNO1   . THIS WAYID
)@@G@@ THE ADD FILE WILL BE PROCESSED     @E@@@@            ELSE              IE
)@@G@@        . MUST BE ADD FILE    @F@@@@               L         A4,EOF2    IF
)@@G@@  . GET EOF REC # FOR FAKE    @F@@@@               S         A4,XRECNO2 IG
)@@G@@  . AND USE AS START OF BLOCK @B@@@@            ENDIF                   IH
)@@G@@  .   @F@@@@            S         X11,DUDONE      . WE HAVE A NODE - GETII
)@@G@@ OUT  @B@@@@         ENDIF                        .   @B@@@@      ELSE  IJ
)@@G@@                          .   @D@@@@         S         X11,DUDONE       IK
)@@G@@  . SET EXIT FLAG @B@@@@      ENDIF                           .   @B@@@@IL
)@@G@@   ENDREP                             .   @E@@@@   IF A0,IS,POS THEN    IM
)@@G@@              . NEG MEANS NO NODE   @E@@@@      CALL      OPNSTARCARD   IN
)@@G@@        . GO CREATE STAR CARD @G@@@@      L         A0,AFPADR           IO
)@@G@@  . GET FIELD PKT ADDR OF 'A' FILE  @G@@@@      L         A0,FIELD      IP
)@@G@@        . PUT IN PREDEFINED DEL-ADD ORDER @E@@@@      IF A0,NE,1,,U THENIQ
)@@G@@              . MAY HAVE TO SWAP    @C@@@@         CALL      SWAP       IR
)@@G@@        . SWAP PKT@B@@@@      ENDIF                           .   @F@@@@IS
)@@G@@      L         A1,4,X9               . GET REC #'S FROM NODE     @E@@@@IT
)@@G@@      S         A1,RECNO              . PUT IN MASTERPKT    @F@@@@      IU
)@@G@@L,U       A0,'0/&'              . INIT PREFIX BUFF FOR -0   @F@@@@      IV
)@@G@@S,H1      A0,AUXBUF             . NEEDED IN OUTPUT OF SCAN  @F@@@@      IW
)@@G@@SZ        A0                    . RETURN NODE INIT STATUS   @B@@@@   ENDIX
)@@G@@IF                              .   @B@@@@ ENDBEG                       IY
)@@G@@        .   @[@@@@ .    @B@@@@ END                                  .   IZ
)@@G@@___ NETO TREE     @D@@@@   L,U       A1,5                     . LENGTH OJA
)@@G@@F NODE@E@S@R   IF A0,EQ,1,,U THEN               *[S@@@*SDFF*@[@@@@ .    JB
)@@G@@@[@@@@ .    @E@@@@ . THIS SEQUENCE OF ROUTINES ARE INVOKED WHEN A PROGRAJC
)@@G@@M FILE@G@@@@ .     DOWNDATE IS REQUIRED.  THEY ARE RESPONSIBLE FOR SCANNJD
)@@G@@ING THE     @F@@@@ .     TOCS, BUILDING THE REPECTIVE TREE AND USING THAJE
)@@G@@T TREE TO   @F@@@@ .     DRIVE THE SUBSEQUENT DOWNDATE.  BY APPROPRIATE JF
)@@G@@CHOICE OF   @F@@@@ .     OPTIONS THE ACTUAL DOWNDATE OF THE INDIVIDUAL EJG
)@@G@@LEMENTS     @E@@@@ .     CAN BE BY PASSED AND A SIMPLE ANALYSIS OF ONE TJH
)@@G@@OC VS @F@@@@ .     CAN BE OBTAINED.  THIS SAME SUMMARY MAY ALSO BE REQUEJI
)@@G@@STED  @F@@@@ .     VIA OPTIONS TO BE OUTPUT AT THE END OF THE NORMAL DOWJJ
)@@G@@NDATE.@[@@@@ .    @[@@@@ .    @[@@@@ .    @B@@@@          AXR$          JK
)@@G@@              .   @B@@@@          STRUC$,'OLD PROGRAM'         .  @B@@@@JL
)@@G@@          DOWNDEF                     .   @B@@@@          ED$PROCS      JM
)@@G@@              .   @B@@@@          RESUME                      .   @[@@@@JN
)@@G@@ .    @[@@@@ .    @[@@@@ .    @]@@@@ . DOWNTOC -@E@@@@ .     THIS IS THEJO
)@@G@@ DRIVING ROUTINE FOR THIS COMPLEX.  IT    @F@@@@ .     IS RESPONSIBLE FOJP
)@@G@@R CALLING THE ROUTINES TO BUILD THE TREE  @F@@@@ .     AND THEN DUMP ITSJQ
)@@G@@ CONTENTS.  IT WILL ALSO THEN, DEPENDING  @E@@@@ .     GIVEN OPTIONS, CAJR
)@@G@@LL THE SUMMARY ROUTINE TO OUTPUT THE@B@@@@ .     REQUESTED DIFFERENCES BJS
)@@G@@ETWEEN TOCS.@[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(0). @F@@@@SAVEROJT
)@@G@@OT  +         0                 . USED IN CASE OF T-OPT     @H@@@@SAVEX7JU
)@@G@@    +         0                 . ALSO IN CASE OF T-OPT FOR CYCLIC DUMP JV
)@@G@@@H@@@@SAVEPTR   +         0                 . ALSO FOR T-OPT, SAVE NEXT JW
)@@G@@NODE LOC    @[@@@@ .    @[@@@@ .    @F@@@@RECNO     EQUF      3,A0      JX
)@@G@@        . MASTERPKT LOC OF REC #'S  @[@@@@ .    @[@@@@ .    @[@@@@ .    JY
)@@G@@@[@@@@$(1). @]@@@@DOWNTOC*.   @B@@@@ BEGIN SUBROUTINE                   JZ
)@@G@@  .   @E@@@@   L         A14,INFOBITS             . GET INPU OPTIONS    KA
)@@G@@@F@@@@   AND       A14,OPT('S','R','A','O')  . GET SUMMARY OPTIONS MASK KB
)@@G@@@E@@@@   A         A15,SDFOPKT              . WAS OUTPUT SPECIFIED@F@@@@KC
)@@G@@   IF A14,ODDP,OPT('N') AND A15,IS,ZERO THEN . DON'T DO UNNEC WORK@F@@@@KD
)@@G@@      L,U       A0,NOUSERR            . NO REASON TO CONTINUE     @F@@@@KE
)@@G@@      CALL      ERROR                 . PRINT MESSAGE AND TERM    @B@@@@KF
)@@G@@   ELSE                               .   @G@@@@      L,U       A0,SYMB KG
)@@G@@              . GET FLAG FOR BUILDING SYMB TREE @H@@@@      CALL      BUKH
)@@G@@ILDTOCTREE          . CREATE TREE FROM TOCS OF INPUT FILES  @E@@@@      KI
)@@G@@IF ZERO,IN,MONSTER THEN         . MAY BE A DATA FILE  @F@@@@         S  KJ
)@@G@@       X11,DATA           . MARK AS DATA FILE DOWNDATE@H@@@@         L  KK
)@@G@@       A0,(FIELDPKT1,ISDFIPKT1)  . GET PKT ADDRS TO OPEN FILE     @C@@@@KL
)@@G@@         CALL      GETOPN             . GO OPEN @F@@@@         L        KM
)@@G@@ A0,(FIELDPKT2,ISDFIPKT2)  . ALSO SECOND FILE   @C@@@@         CALL     KN
)@@G@@ GETOPN             . DO IT   @E@@@@         IF A14,ODDP,OPT('T') THEN  KO
)@@G@@  . IS THIS A PCF FILE  @E@@@@            CALL      PCFDOWN         . YEKP
)@@G@@S DOWNDATE AS PCF @B@@@@         ELSE                         .   @G@@@@KQ
)@@G@@            L,U       A0,MASTERPKT    .  PREPARE FOR SCAN THIS ELEMENT  KR
)@@G@@@E@@@@            L         A1,(1,1)        . SET STARTING REC #'S@D@@@@KS
)@@G@@            S         A1,RECNO        . PUT IN PKT    @D@@@@            KT
)@@G@@CALL      SCAN            . DO DOWNDATE   @B@@@@         ENDIF          KU
)@@G@@              .   @B@@@@      ELSE                            .   @G@@@@KV
)@@G@@         IF A14,EVENP,OPT('N') OR NONZ,IN,SDFOPKT THEN . DUMP TREE?     KW
)@@G@@@E@@@@            L,U       X7,DUMP         . INIT TO DUMP TREE   @F@@@@KX
)@@G@@            REPEAT                    . LOOP TILLL TREE EMPTY     @E@@@@KY
)@@G@@               CALL      DUMPTOCTREE  . GO GET NODE AND INIT@D@@@@      KZ
)@@G@@      ESCAPE WHEN A0,IS,NEG     . NO MORE NODES @B@@@@            OTHERWLA
)@@G@@ISE                 .   @E@@@@               IF A14,ODDP,OPT('T') THEN .LB
)@@G@@ IS THIS PCF FILE?@F@@@@                  S         X7,SAVEX7  . YES MUSLC
)@@G@@T SAVE SOME THINGS@F@@@@                  L         A0,ROOT   . GET ROOTLD
)@@G@@ FOR TOC TREE     @F@@@@                  L         A1,PREGSAVE  . ALSO LE
)@@G@@NEXT NODE POINTER @D@@@@                  S         A0,SAVEROOT  . SAVE LF
)@@G@@IT    @F@@@@                  S         A1,SAVEPTR  . SAVE ACROSS PCF DOLG
)@@G@@WNDATE@F@@@@                  SZ        ROOT      . PCFDOWN CREATES OWN LH
)@@G@@TREE  @D@@@@                  CALL      PCFDOWN   . GO DO DOWNDATE@E@@@@LI
)@@G@@                  L         X7,SAVEX7  . RESTORE PARAMETERS @F@@@@      LJ
)@@G@@            L         A0,SAVEROOT  . AND ROOT OF TOC TREE   @E@@@@      LK
)@@G@@            L         A1,SAVEPTR  . GET NEXT NODE PTR @F@@@@            LL
)@@G@@      S         A0,ROOT   . SO WE CAN CONTINUE DUMP   @G@@@@            LM
)@@G@@      S         A1,PREGSAVE  . RESTORE SO DUMP CAN CONTINUE @H@@@@      LN
)@@G@@            L         A14,INFOBITS . RESTORE OPTIONS ZAPPED BY COMPARE  LO
)@@G@@@C@@@@               ELSE                   . NO T-OPT@E@@@@            LP
)@@G@@      L,U       A0,MASTERPKT  . GET ADDR OF PKT @E@@@@                  LQ
)@@G@@L         A1,(1,1)  . SET STARTING REC #'S@D@@@@                  S     LR
)@@G@@    A1,RECNO  . PUT IN PKT    @D@@@@                  CALL      SCAN    LS
)@@G@@  . DO DOWNDATE   @E@@@@                  L         A14,INFOBITS  . GET LT
)@@G@@OPTIONS     @G@@@@                  IF A14,ODDP,OPT('P') THEN . DO WE CRLU
)@@G@@EAT PROG FILE?    @F@@@@                     L,U       A1,' '  . YES - GLV
)@@G@@ET BLANK FOR TEST @F@@@@                     IF A1,EQ,CARDBUF,,S1 THEN .LW
)@@G@@ DID WE DO OUTPUT @H@@@@                        S         X11,A0  . YES LX
)@@G@@- SET FLAG FOR PROG FILE EL   @F@@@@                        CALL      CLLY
)@@G@@OSESDFO  . COLSE OUTPUT EL    @B@@@@                     ENDIF          LZ
)@@G@@  .   @B@@@@                  ENDIF               .   @B@@@@            MA
)@@G@@   ENDIF                  .   @B@@@@            ENDREP                  MB
)@@G@@  .   @B@@@@         ENDIF                        .   @E@@@@         L  MC
)@@G@@       A14,INFOBITS       . GET INPUT OPTIONS   @F@@@@         IF A14,ODMD
)@@G@@DP,OPT('S') THEN    . SYMBOLIC TOC SUMMARY?     @E@@@@            L,U   ME
)@@G@@    A0,SYMB         . YES GET INDICATOR   @G@@@@            CALL      SUMF
)@@G@@MMARY         . DO SUMMARY - TRREE ALREADY BUILT@B@@@@         ENDIF    MG
)@@G@@                    .   @E@@@@         IF A14,ODDP,OPT('R') THEN    . REMH
)@@G@@LOC TOC SUMMARY?  @F@@@@            L,U       A0,RELOC        . YES - GEMI
)@@G@@T FLAR FOR RELOC  @E@@@@            CALL      BUILDTOCTREE    . GO BUILDMJ
)@@G@@ RELOC TREE @E@@@@            L,U       A0,RELOC        . GET INDICATOR MK
)@@G@@AGAIN @E@@@@            CALL      SUMMARY         . DO RELOC SUMMARY    ML
)@@G@@@B@@@@         ENDIF                        .   @F@@@@         IF A14,ODMM
)@@G@@DP,OPT('A') THEN    . ABSOLUTE TOC SUMMARY?     @F@@@@            L,U   MN
)@@G@@    A0,ABS          . YES - GET ABSOLUTE FLAG   @D@@@@            CALL  MO
)@@G@@    BUILDTOCTREE    . CREATE TREE   @D@@@@            L,U       A0,ABS  MP
)@@G@@        . GET FLAG AGAIN@E@@@@            CALL      SUMMARY         . DOMQ
)@@G@@ ABSOLUTE SUMMARY @B@@@@         ENDIF                        .   @F@@@@MR
)@@G@@         IF A14,ODDP,OPT('O') THEN    . OMNIBUS TOC SUMMARY ?     @D@@@@MS
)@@G@@            L,U       A0,OMNI         . YES - GET FLAG@G@@@@            MT
)@@G@@CALL      BUILDTOCTREE    . BUILD TREE FOR OMNIBUS ELTS     @D@@@@      MU
)@@G@@      L,U       A0,OMNI         . GET FLAG AGAIN@E@@@@            CALL  MV
)@@G@@    SUMMARY         . DO OMNI SUMMARY     @B@@@@         ENDIF          MW
)@@G@@              .   @B@@@@      ENDIF                           .   @B@@@@MX
)@@G@@   ENDIF                              .   @B@@@@ ENDBEG                 MY
)@@G@@              .   @[@@@@/.    @[@@@@ .    @[@@@@ .    @[@@@@ .    @#@@@@MZ
)@@G@@ . BUILDTOCTREE - @F@@@@ .     THIS ROUTINE IS RESPONSIBLE FOR BUILDING NA
)@@G@@THE TREE FROM     @E@@@@ .     THE CONTENTS OF THE TWO INPUT TOCS.  IF UNB
)@@G@@SES THE     @E@@@@ .     CYCLIC ROUTINE TOCSCAN TO FETCH SEQUENTIAL ENTRNC
)@@G@@IES   @F@@@@ .     FROM EACH TOC.  TOCSCAN FIRST CHECKS THAT THE RESPECTND
)@@G@@IVE   @E@@@@ .     IS INDEED A PROGRAM FILE.  IT MAY BE THAT WE HAVE    NE
)@@G@@@E@@@@ .     REACHED THIS POINT WITH TWO DATA FILES, IN WHICH CASE@F@@@@NF
)@@G@@ .     THE SITUATION IS HANDLED PROPERLY BY RESETING THE MONSTER  @F@@@@NG
)@@G@@ .     FLAG AND TELLIN DOWNTOC TO OPEN THE FILES ACCORDINGLY.     @F@@@@NH
)@@G@@ .     IF ONE FILE IS A PROGRAM FILE AND THE OTHER A DATA FILE    @F@@@@NI
)@@G@@ .     THIS IS CLEARLY AN ERROR AND THE PROGRAM IS SO TERMINATED. @F@@@@NJ
)@@G@@ .     THE TYPE TREE BUILT, EG. SYMB, RELOC, ABS, OMNI, IS DEPEND-@C@@@@NK
)@@G@@ .     ENT ON THE FLAG PASS FROM DOWNTOC IN A0. @[@@@@ .    @[@@@@ .    NL
)@@G@@@[@@@@ .    @[@@@@$(0). @H@@@@NODETYPE  +         0                 . SANM
)@@G@@VE FOR TYPE FLAG PASSEDBY DOWNTOC   @H@@@@FILEIND   +         0         NN
)@@G@@        . INDICATES WHICH TOC BEING PROCESSED   @[@@@@ .    @[@@@@ .    NO
)@@G@@@[@@@@ .    @[@@@@$(1). @#@@@@BUILDTOCTREE.     @B@@@@ BEGIN SUBROUTINE NP
)@@G@@                    .   @G@@@@   S         A0,NODETYPE              . SANQ
)@@G@@VE NODE TYPE FOR LATER TEST   @G@@@@   SZ        ROOT                   NR
)@@G@@  . INIT ROOT TO BUILD FREE TREE    @H@@@@   L,U       A1,LASTD$+1      NS
)@@G@@        . GET LAST MAPPED ADDR (THIS MAY CHANGE)@H@@@@   S         A1,FINT
)@@G@@RST                 . RESET FIRST POINTER INTO TREE STORAGE @G@@@@   DL NU
)@@G@@       A1,ISDFIPKT1             . GET INTERNAL NAME FOR FILE #1   @H@@@@NV
)@@G@@   CALL,X6   TOCSCAN                  . INIT SCAN OF TOC & MAKE SURE PRONW
)@@G@@G FILE@F@@@@   IF A0,IS,NEG THEN                  . NEG MEANS NOT A PROGNX
)@@G@@ FILE @E@@@@      SZ        MONSTER               . RESET PROG FILE FLAGNY
)@@G@@@E@@@@      DL        A1,ISDFIPKT2          . CHECK OTHER FILE    @G@@@@NZ
)@@G@@      CALL,X6   TOCSCAN               . CAN'T DOWN A PROG WITH A DATA   OA
)@@G@@@F@@@@      IF A0,IS,POS THEN               . IF POS THEN A PROG FILE   OB
)@@G@@@D@@@@         L,U       A0,MIXMODERR       . SET ERROR CODE@D@@@@      OC
)@@G@@   CALL      ERROR              . AND ERROR OFF @B@@@@      ENDIF       OD
)@@G@@                    .   @G@@@@   ELSE                               . ATOE
)@@G@@ LEAST FIRST FILE IS PROG     @E@@@@      SZ        FILEIND             OF
)@@G@@  . FLAG AS FILE # 1    @E@@@@      L,U       R10,2                 . THOG
)@@G@@IS IS # OF FILE   @F@@@@      REPEAT JGD,R10                  . OUTER LOOH
)@@G@@OP - TWO FILES    @H@@@@         REPEAT                       . INNER LOOI
)@@G@@OP - ONE TOC ENT AT A TIME    @H@@@@            CALL,X6   0,X6          OJ
)@@G@@  . FETCH NEXT TOC ENTRY FROM TOC SCAN    @D@@@@         ESCAPE WHEN A0,OK
)@@G@@IS,NEG        . NO MORE TOC   @#@@@@         OTHERWISE@E@@@@            OL
)@@G@@L,S3      A1,3,A0         . GET ELEMENT TYPE    @G@@@@            L     OM
)@@G@@    A2,NODETYPE     . GET INDICATOR FOR WHAT WE WANT  @E@@@@            ON
)@@G@@CASENTRY A1               . CHECK ELEMENT TYPE  @E@@@@               L,UOO
)@@G@@       A1,IOPKT     . GET INT FILE NAME   @E@@@@               L,U      OP
)@@G@@ A0,TOCERR    . IMPROPER TYPE SPEC  @D@@@@               CALL      ERROROQ
)@@G@@        . PRINT AND TERM@E@@@@            CASE 1,2,3,4              . SYOR
)@@G@@MBOLIC ELEMENTS   @E@@@@               IF A2,EQ,SYMB,,U THEN  . IS THIS OS
)@@G@@WHAT WE WANT@E@@@@                  CALL      BUILDELNODE  . CREATE SYMBOT
)@@G@@ TREE @B@@@@               ENDIF                  .   @D@@@@            OU
)@@G@@CASE 5                    . RELOC ELEMENTS@D@@@@               IF A2,EQ,OV
)@@G@@RELOC,,U THEN . DO WE WANT IT @E@@@@                  CALL      BUILDELNOW
)@@G@@ODE  . CREATE RELOC TREE@B@@@@               ENDIF                  .   OX
)@@G@@@E@@@@            CASE 6                    . ABSOLUTE ELEMENTS   @D@@@@OY
)@@G@@               IF A2,EQ,ABS,,U THEN   . DO WE WANT ABS@E@@@@            OZ
)@@G@@      CALL      BUILDELNODE  . CREATE ABS TREE  @B@@@@               ENDPA
)@@G@@IF                  .   @E@@@@            CASE 7                    . OMPB
)@@G@@NIBUS ELEMENTS    @D@@@@               IF A2,EQ,OMNI,,U THEN   . WHAT WEPC
)@@G@@ WANT?@F@@@@                  CALL      BUILDELNODE  . CREATE AOMNIBUS TPD
)@@G@@REE   @B@@@@               ENDIF                  .   @B@@@@            PE
)@@G@@ENDCASE                   .   @B@@@@         ENDREP                     PF
)@@G@@  .   @E@@@@         DL        A1,ISDFIPKT2       . PRODESS 2ND FILE    PG
)@@G@@@E@@@@         CALL,X6   TOCSCAN            . OPEN TOC SCANNER    @E@@@@PH
)@@G@@         IF A0,IS,NEG THEN            . NEG IS NOT PROG     @D@@@@      PI
)@@G@@      L,U       A0,MIXMODERR    . SET ERROR CODE@D@@@@            CALL  PJ
)@@G@@    ERROR           . PRINT AND TERM@B@@@@         ENDIF                PK
)@@G@@        .   @E@@@@         S         X11,FILEIND        . SET FLAG - 2NDPL
)@@G@@ FILE @B@@@@      ENDREP                          .   @B@@@@   ENDIF    PM
)@@G@@                          .   @B@@@@ ENDBEG                             PN
)@@G@@  .   @[@@@@/.    @[@@@@ .    @[@@@@ .    @]@@@@ . TOCSCAN -@F@@@@ .    PO
)@@G@@ THIS IS A CYCLIC ROUTINE DESIGNED TO SCAN THE TOC OF A     @F@@@@ .    PP
)@@G@@ GIVEN PROGRAM FILE AND PASS BACK TO THE CALLING ROUTINE    @F@@@@ .    PQ
)@@G@@  A POINTER TO EACH TEN WORD UNDELETED ENTRY IT ENCOUNTERS. @#@@@@ .    PR
)@@G@@ TO OPEN:   @ @@@@ .          CALL,X6 TOCSCAN . @A@@@@ .     TO FETCH NEPS
)@@G@@XT TOC ENTRY:     @ @@@@ .          CALL,X6 0,X6 .    @[@@@@ .    @F@@@@PT
)@@G@@ .     DURING THE OPEN SEQUENCE THE FILE IS CHECKED TO INSURE     @D@@@@PU
)@@G@@ .     IT IS A PROGRAM FILE, IF NOT  A NEGATIVE ONE IS@E@@@@ .     RETURPV
)@@G@@NED IN A0.  SUBSEQUENTLY EACH CALL WILL RETURN  @E@@@@ .     WITH THE NEPW
)@@G@@XT POINTER IN A0 OR -1 IF NO MORE ENTRIES.@[@@@@ .    @[@@@@ .    @[@@@@PX
)@@G@@ .    @[@@@@$(0). @C@@@@IOPKT     +         0D                . IO$ PKT PY
)@@G@@@B@@@@          +         0                 .   @B@@@@          +       PZ
)@@G@@  R$,0,0            .   @B@@@@          +         0,BUFFER          .   QA
)@@G@@@B@@@@          +         0                 .   @B@@@@BUFFER    RES     QB
)@@G@@  280               .   @E@@@@COUNT     +         0                 . FOQC
)@@G@@R # OF TOC ENTRIES@[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(1). @]@@@@QD
)@@G@@TOCSCAN.    @B@@@@ BEGIN CYCLIC                         .   @G@@@@   DS QE
)@@G@@       A1,IOPKT                 . PUT INTERNAL FILENAME IN PKT    @E@@@@QF
)@@G@@   SZ        IOPKT+2                  . INIT ALL OF IOPKT   @B@@@@   L  QG
)@@G@@       A0,(+R$,0,0)             .   @B@@@@   S         A0,IOPKT+3       QH
)@@G@@        .   @F@@@@   L,U       A0,28                    . GET # WORDS FOQI
)@@G@@R 1ST SECTOR@G@@@@   S,H1      A0,IOPKT+4               .  PUT IN PKT FOQJ
)@@G@@R ONE SEC READ    @E@@@@   SZ        IOPKT+5                  . WANT FIRQK
)@@G@@ST SECTOR   @E@@@@   L,U       A0,IOPKT                 . GET ADDR OF PKQL
)@@G@@T     @E@@@@   ER        IOW$                     . MIGHT AS WELL WAIT  QM
)@@G@@@F@@@@   IF NONZ,IN,IOPKT+3,,S1 THEN        . WAS THERE ANY TROUBLE?    QN
)@@G@@@E@@@@      L,U       A1,IOPKT              . GET INT FILE NAME   @E@@@@QO
)@@G@@      L,U       A0,TOCERR             . YES - SET ERROR CODE@E@@@@      QP
)@@G@@CALL      ERROR                 . PRINT ERROR AND TERM@B@@@@   ENDIF    QQ
)@@G@@                          .   @D@@@@   L         A0,BUFFER              QR
)@@G@@  . GET 1ST WORD  @E@@@@   IF A0,EQ,('**PF**') THEN           . IS THIS QS
)@@G@@A PROG FILE @F@@@@      L,H2      A0,BUFFER+3           . GET LOC OF ELEQT
)@@G@@MENT TABLE  @D@@@@      S         A0,IOPKT+5            . PUT INTO PKT  QU
)@@G@@@F@@@@      L,U       A1,280                . SET TO READ 10 SECTORS    QV
)@@G@@@C@@@@      S,H1      A1,IOPKT+4            . INTO PKT@D@@@@      L,U   QW
)@@G@@    A0,IOPKT              . GET PKT ADDR  @D@@@@      ER        IOW$    QX
)@@G@@              . GET HASH TABLE@E@@@@      IF NONZ,IN,IOPKT+3,,S1 THEN   QY
)@@G@@  . IS THERE ANY ERROR  @E@@@@         L,U       A1,IOPKT           . GEQZ
)@@G@@T INT FILE NAME   @D@@@@         L,U       A0,TOCERR          . SET ERRORA
)@@G@@R CODE@E@@@@         CALL      ERROR              . PRINT ERROR AND TERMRB
)@@G@@@B@@@@      ENDIF                           .   @H@@@@      L,H2      A0RC
)@@G@@,BUFFER+139         . GET # OF ENTRIES IN ELEMENT TABLE     @C@@@@      RD
)@@G@@S         A0,COUNT              . SAVE    @F@@@@      L         A1,IOPKTRE
)@@G@@+5            . GET CURRENT SECOR ADDR    @E@@@@      AN,U      A1,5    RF
)@@G@@              . PREPARE FOR LOOP    @G@@@@      S         A1,IOPKT+5    RG
)@@G@@        . UPDATE SECTOR ADDR FOR NEXT READ@D@@@@      SZ        A0      RH
)@@G@@              . RETURN STATUS @E@@@@      CALL,X6   0,X6                RI
)@@G@@  . RETURN TO CALLER    @E@@@@      REPEAT                          . LORJ
)@@G@@OP TO READ TOC    @F@@@@         L,U       R15,28             . # OF EL RK
)@@G@@ENTRIES PER BUF   @F@@@@         L         A0,IOPKT+5         . GET CURRRL
)@@G@@ENT SECTOR ADDR   @G@@@@         A,U       A0,10              . SET TO RRM
)@@G@@EAD NEX TTEN SECTORS    @D@@@@         S         A0,IOPKT+5         . UPRN
)@@G@@DATE PKT    @G@@@@         L         X5,(10,BUFFER)     . POINTER INTO BRO
)@@G@@UFFER 10 WRDS PER @D@@@@         L,U       A0,IOPKT           . GET PKT RP
)@@G@@ADDR  @E@@@@         ER        IOW$               . GET NEXT 10 SECTORS RQ
)@@G@@@E@@@@         IF NONZ,IN,IOPKT+3,,S1 THEN  . WAS THER ANY TROUBLE@D@@@@RR
)@@G@@            L,S1      A0,IOPKT+3      . GET STATUS    @E@@@@            RS
)@@G@@IF A0,NE,05,,U THEN       . WE'LL ACCEPT IO-5'S @E@@@@               L,URT
)@@G@@       A1,IOPKT     . GET INT FILE NAME   @D@@@@               L,U      RU
)@@G@@ A0,TOCERR    . SET ERROR CODE@E@@@@               CALL      ERROR      RV
)@@G@@  . PRINT ERROR AND TERM@B@@@@            ENDIF                     .   RW
)@@G@@@B@@@@         ENDIF                        .   @G@@@@         REPEAT JGRX
)@@G@@D,R15               . INNER LOOP TO PROCESS BUFFER    @G@@@@            RY
)@@G@@L         A0,COUNT        . GET CURRENT # OF TOC ENTRIES    @E@@@@      RZ
)@@G@@   ESCAPE WHEN A0,IS,ZERO       . NO MORE ENTRIES?    @F@@@@            SA
)@@G@@LN,U      A0,1            . RETURN END OF TOC FLAG    @C@@@@            SB
)@@G@@CALL,X6   0,X6            . RETURN  @B@@@@         OTHERWISE            SC
)@@G@@        .   @E@@@@            AN,U      A0,1            . DECREMENT COUNSD
)@@G@@T     @C@@@@            S         A0,COUNT        . UPDATE  @F@@@@      SE
)@@G@@      L,U       A0,,*X5         . GET NEXT BUFFER ENTRY     @F@@@@      SF
)@@G@@      IF  POS,IN,3,A0    THEN   . WAS THIS ELEMENT DELETED? @F@@@@      SG
)@@G@@         CALL,X6   0,X6         . NO - RETURN WITH POINTER  @B@@@@      SH
)@@G@@      ENDIF                     .   @B@@@@         ENDREP               SI
)@@G@@        .   @B@@@@      ENDREP                          .   @E@@@@   ELSSJ
)@@G@@E                               . NOT A PROG FILE     @F@@@@      LN,U  SK
)@@G@@    A0,1                  . SET ERROR RETURN FLAG     @C@@@@      CALL,XSL
)@@G@@6   0,X6                  . RETURN  @B@@@@   ENDIF                      SM
)@@G@@        .   @B@@@@ ENDBEG                               .   @[@@@@/.    SN
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@ .    @#@@@@ . BUILDELNODE -  @F@@@@ .    SO
)@@G@@ THIS ROUTINE IS RESPONSIBLE FOR BUILDING THE NODE FROM     @F@@@@ .    SP
)@@G@@ THE INFORMATION IN THAT TEN WORD TOC ENTRY WHOSE POINTER   @E@@@@ .    SQ
)@@G@@ IS PASSED IN A0.  IT THEN INSERTS THAT NODE INTO THE @^@@@@ .     BINARSR
)@@G@@Y TREE.     @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(0). @F@@@@ELNODESS
)@@G@@    RES       9                 . AREA TO BUILD TEMP NODE   @[@@@@ .    ST
)@@G@@@[@@@@ .    @F@@@@ENAME     EQUF      0,A1              . ELEMENT NAME ISU
)@@G@@S 1ST 2 WRDS@G@@@@VNAME     EQUF      2,A1              . VERSION NAME ISV
)@@G@@S WORDS 3 AND 4   @E@@@@SECLEN1   EQUF      4,A1,H1           . SEC LENGSW
)@@G@@TH OF FILE 1@E@@@@SECLEN2   EQUF      4,A1,H2           . SEC LENGTH OF SX
)@@G@@FILE2 @F@@@@SECADDR1  EQUF      5,A1              . LOC IN FILE 1 OF ELESY
)@@G@@MENT  @F@@@@SECADDR2  EQUF      6,A1              . LOC IN FILE 2 OF ELESZ
)@@G@@MENT  @G@@@@DATE1     EQUF      7,A1              . TDATE WORD OF ELT OFTA
)@@G@@ FILE 1     @G@@@@DATE2     EQUF      8,A1              . TDATE WORD OF TB
)@@G@@ELT OF FILE 2     @[@@@@ .    @F@@@@TENAME    EQUF      0,A0            TC
)@@G@@  . LOC OF ELNAME FROM TOC ENT@G@@@@TVNAME    EQUF      4,A0            TD
)@@G@@  . LOC OF VERSION FROM TOC ENT     @F@@@@TSECLEN   EQUF      7,A0,H2   TE
)@@G@@        . LOC OF SEC LEN IN TOC ENT @F@@@@TSECADDR  EQUF      8,A0      TF
)@@G@@        . LOC OF EL ADDR IN TOC ENT @G@@@@TDATE     EQUF      9,A0      TG
)@@G@@        . LOC OF TDATE WRD IN TOC ENT     @[@@@@ .    @[@@@@ .    @[@@@@TH
)@@G@@ .    @[@@@@$(1). @]@@@@BUILDELNODE.@B@@@@ BEGIN SUBROUTINE             TI
)@@G@@        .   @G@@@@   L,U       A2,ELNODE+8              . SET POINTER TOTJ
)@@G@@ END OF TEMP AREA @F@@@@   LXI,XU    A2,-1                    . SET TO ITK
)@@G@@NIT BY BACKING UP @E@@@@   L,U       A1,(+0)                  . SET TO TTL
)@@G@@RANSFER ZERO@E@@@@   L,U       R1,5                     . ZERO LAST 5 WOTM
)@@G@@RDS   @D@@@@   BT        A2,,*A1                  . OF TEMP NODE  @F@@@@TN
)@@G@@   L,U       A1,ELNODE                . GET START OF TEMP NODE    @E@@@@TO
)@@G@@   DL        A3,TENAME                . GET ELNAME FROM TOC @E@@@@   DS TP
)@@G@@       A3,ENAME                 . PUT INTO TEMP NODE  @E@@@@   DL       TQ
)@@G@@ A3,TVNAME                . GET VERSION FROM TOC@E@@@@   DS        A3,VNTR
)@@G@@AME                 . PUT IN TEMP NODE    @F@@@@   L         A3,TSECLEN TS
)@@G@@              . GET SEC LENGTH OF TEXT    @G@@@@   DL        A4,TSECADDRTT
)@@G@@              . GET ADDR OF ELT AND TDATE WORD  @F@@@@   IF ZERO,IN,FILETU
)@@G@@IND THEN            . WHICH FILE ARE WE ON?     @E@@@@      S         A3TV
)@@G@@,SECLEN1            . MUST BE FIRST FILE  @F@@@@      S         A4,SECADTW
)@@G@@DR1           . PUT IN LENGTH AND ADDR    @F@@@@      S         A5,DATE1TX
)@@G@@              . ALSO TIME-DATE OF CREATION@E@@@@   ELSE                 TY
)@@G@@              . MUST BE 2ND FILE    @E@@@@      S         A3,SECLEN2    TZ
)@@G@@        . PUT IN SEC LENGTH   @F@@@@      S         A4,SECADDR2         UA
)@@G@@  . THEN SEC ADDR IN FILE     @E@@@@      S         A5,DATE2            UB
)@@G@@  . THEN TDATE WORD     @B@@@@   ENDIF                              .   UC
)@@G@@@G@@@@   L,U       A0,ELNODE                . GET ADDR OF TEMP FOR INSERUD
)@@G@@T     @E@@@@   L,U       A1,7                     . MIN LEN IS 7 WORDS  UE
)@@G@@@E@@@@   L         A2,INFOBITS              . GET INPU OPTIONS    @D@@@@UF
)@@G@@   IF A2,ODDP,OPT('D') THEN           . IS D-OPT ON?  @F@@@@      A,U   UG
)@@G@@    A1,2                  . YES - INCLUDE TDATE WORDS @B@@@@   ENDIF    UH
)@@G@@                          .   @F@@@@   CALL      INSERT                 UI
)@@G@@  . TRY TO INSERT IN TREE     @F@@@@   IF A0,EQ,1,,U THEN               UJ
)@@G@@  .  IF 1 THEN NODE EXITS     @E@@@@      L         A6,INFOBITS         UK
)@@G@@  . GET INPUT OPTIONS   @F@@@@      L,U       A2,ELNODE             . ANUL
)@@G@@D ADDR OF TEMP NODE     @F@@@@      DSC       A1,36                 . GEUM
)@@G@@T TEMP NODE ADDR IN A1  @E@@@@      IF ZERO,IN,FILEIND THEN         . FIUN
)@@G@@RST FILE OR 2ND   @E@@@@         L         A3,SECLEN1         . 1ST FILEUO
)@@G@@ GET LENGTH @E@@@@         L         A4,SECADDR1        . AND ADDR IN FIUP
)@@G@@LE    @E@@@@         L         A5,DATE1           . ALSO TDATE WORD     UQ
)@@G@@@G@@@@         DSC       A1,36              . GET ADDR OF NODE IN TREE IUR
)@@G@@N A1  @F@@@@         IF ZERO,IN,SECADDR1 THEN     . HAVE WE BEEN HERE YEUS
)@@G@@T     @F@@@@            S         A3,SECLEN1      . PUT LENGTH IN TREE NUT
)@@G@@ODE   @E@@@@            S         A4,SECADDR1     . ALSO ADDR OF ELT    UU
)@@G@@@F@@@@            IF A6,ODDP,OPT('D') THEN  . IS THERE ROOM FOR DATE    UV
)@@G@@@E@@@@               S         A5,DATE1     . YES - PUT IT IN     @B@@@@UW
)@@G@@            ENDIF                     .   @E@@@@         ELSE           UX
)@@G@@              . MUST BE DUPLICATION @E@@@@            L,U       A0,ELDUPUY
)@@G@@ERR     . BLEW IT SOMEWHERE   @E@@@@            CALL      ERROR         UZ
)@@G@@  . PRINT ERROR AND TERM@B@@@@         ENDIF                        .   VA
)@@G@@@E@@@@      ELSE                            . MUST BE ON 2ND FILE @E@@@@VB
)@@G@@         L         A3,SECLEN2         . GET LENGTH OF TEXT  @E@@@@      VC
)@@G@@   L         A4,SECADDR2        . AND ADDR IN ELT     @E@@@@         L  VD
)@@G@@       A5,DATE2           . ALSO TDATE WORD     @G@@@@         DSC      VE
)@@G@@ A1,36              . GET ADDR OF TREE NODE IN A1     @F@@@@         IF VF
)@@G@@ZERO,IN,SECADDR2 THEN     . HAVE WE BEEN HERE BEFORE  @F@@@@            VG
)@@G@@S         A3,SECLEN2      . PUT IN LENGTH OF 2ND ELT  @D@@@@            VH
)@@G@@S         A4,SECADDR2     . ALSO ADDRESS  @G@@@@            IF A6,ODDP,OVI
)@@G@@PT('D') THEN  . DO WE HAVE ROOM FOR TDATE WORD? @E@@@@               S  VJ
)@@G@@       A5,DATE2     . YES - SHOVE IT!     @B@@@@            ENDIF       VK
)@@G@@              .   @B@@@@         ELSE                         .   @G@@@@VL
)@@G@@            L,U       A0,ELDUPERR     . CAN'T BE DUPLICATE EL NAMES     VM
)@@G@@@E@@@@            CALL      ERROR           . PRINT ERROR AND TERM@B@@@@VN
)@@G@@         ENDIF                        .   @B@@@@      ENDIF             VO
)@@G@@              .   @B@@@@   ELSE                               .   @G@@@@VP
)@@G@@      IF A0,IS,NEG THEN               . OVERFLOW INDICATION FROM INSERT VQ
)@@G@@@D@@@@         L,U       A0,OVFLERR         . SET ERROR CODE@F@@@@      VR
)@@G@@   CALL      ERROR              . PRINT MESSAGE AND TERM    @B@@@@      VS
)@@G@@ENDIF                           .   @B@@@@   ENDIF                      VT
)@@G@@        .   @B@@@@ ENDBEG                               .   @[@@@@/.    VU
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@ .    @#@@@@ . DUMPTOCTREE -  @E@@@@ .    VV
)@@G@@ THIS ROUTINE IS ESSENTIALLY USED TO DUMP THE CONTENTS@E@@@@ .     OF THVW
)@@G@@E TREE BUILT FROM THE TOCS OF THE REPECTIVE     @E@@@@ .     PROGRAM FILVX
)@@G@@ES.  IT FETCHES A NODE FROM THE TREE AND  @F@@@@ .     INITIALIZES IT INVY
)@@G@@ ACCORDENCE WITH THE SPECIFIED OPTIONS.   @F@@@@ .     IT MUST BE INITIAVZ
)@@G@@LIZED VIA 'L,U X7,DUMP' BECAUSE IT USES   @F@@@@ .     THE DUMP ROUTINE WA
)@@G@@OF THE BINARY TREE COMPLEX AND ASSUMES    @G@@@@ .     X7 TO BE ALREADY WB
)@@G@@SET.  IT SIGNALS THE REACHING OF THE END OF     @C@@@@ .     TREE BY A NWC
)@@G@@EGATIVE RETURN STATUS IN A0.  @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@WD
)@@G@@$(0). @H@@@@DONEFLG   +         0                 . FLAG FOR THE FIND OFWE
)@@G@@ USEABLE NODE     @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(1). @]@@@@WF
)@@G@@DUMPTOCTREE.@B@@@@ BEGIN SUBROUTINE                     .   @F@@@@   SZ WG
)@@G@@       DONEFLG                  . INIT PROPER NODE FOUND FG @F@@@@   REPWH
)@@G@@EAT UNTIL NONZ,IN,DONEFLG       . LOOP TILL PROPER NODE     @D@@@@      WI
)@@G@@CALL,X7   0,X7                  . FETCH A NODE  @D@@@@   ESCAPE WHEN A0,WJ
)@@G@@IS,NEG              . NO MORE NODES @B@@@@   OTHERWISE                  WK
)@@G@@        .   @G@@@@      L         A1,A0                 . GET ADDR OF NOWL
)@@G@@DE IN A1 FOR EQUFS@E@@@@      L         A2,INFOBITS           . GET INPUWM
)@@G@@T OPTIONS   @F@@@@      L         A3,SECLEN1            . GET LENGTH OF WN
)@@G@@1ST FILE    @F@@@@      L         A4,SECLEN2            . GET LENGTH OF WO
)@@G@@2ND FILE    @F@@@@      DL        A5,SECADDR1           . GET BOTH FILE WP
)@@G@@ADDRESSES   @F@@@@      S,H2      A3,PFSPKT1+9          . PUT ELT 1 LEN WQ
)@@G@@IN PFP PKT  @F@@@@      S,H2      A4,PFSPKT2+9          . PUT ELT 2 LEN WR
)@@G@@IN PFP PKT  @F@@@@      S         A5,PFSPKT1+10         . PUT SEC ADDR IWS
)@@G@@N PFP PKT 1 @G@@@@      S         A6,PFSPKT2+10         . AND ADDR OF 2NWT
)@@G@@D ELT IN PKT 2    @F@@@@      DL        A3,ENAME              . GET ELEMWU
)@@G@@ENT NAME FROM NODE@E@@@@      DL        A5,VNAME              . ALSO VERWV
)@@G@@SION NAME   @G@@@@      DS        A3,PFSPKT1+2          . ELEMENT NAME IWW
)@@G@@NTO BOTH PKTS     @F@@@@      DS        A3,PFSPKT2+2          . SAME NAMWX
)@@G@@E IN BOTH FILES   @F@@@@      DS        A5,PFSPKT1+6          . ALSO STUWY
)@@G@@FF IN VERSION NAME@D@@@@      DS        A5,PFSPKT2+6          . INTO BOTWZ
)@@G@@H PKTS@G@@@@      IF ZERO,IN,SECADDR1 OR ZERO,IN,SECADDR2 THEN . ELT IN XA
)@@G@@BOTH FILES? @G@@@@         IF A2,ODDP,OPT('Z') THEN     . NO - BUT DOES XB
)@@G@@Z-OPT SAY PROCESS @F@@@@            S         X11,DONEFLG     . YES - SEXC
)@@G@@T FLAG FOR RETURN @B@@@@         ENDIF                        .   @B@@@@XD
)@@G@@      ELSE                            .   @F@@@@         S         X11,DXE
)@@G@@ONEFLG        . HAVE BOTH ELTS - ET OUT   @B@@@@      ENDIF             XF
)@@G@@              .   @B@@@@   ENDREP                             .   @E@@@@XG
)@@G@@   IF A0,IS,POS THEN                  . WAS THERE A NODE?   @F@@@@      XH
)@@G@@IF A2,EVENP,OPT('T') THEN       . IF T-OPT LET IT DO IT     @G@@@@      XI
)@@G@@   CALL      OPNSTARCARD        . NO T-OPT - CREATE STAR CARD     @B@@@@XJ
)@@G@@      ENDIF                           .   @D@@@@      IF NONZ,IN,PFSPKT1XK
)@@G@@+10 THEN      . OPEN FILES    @F@@@@         L         A0,(FIELDPKT1,ISDXL
)@@G@@FIPKT1)  . GET PKT POINTERS   @F@@@@         CALL      GETOPN           XM
)@@G@@  . OPEN INPUT FOR THIS ELT   @E@@@@      ELSE                          XN
)@@G@@  . THERE IS NO ELT     @E@@@@         L,U       A0,ISDFIPKT1       . BUXO
)@@G@@T Z-OPT ON SO FAKE@E@@@@         CALL      CREATENULL         . FAKE A NXP
)@@G@@ULL FILE    @B@@@@      ENDIF                           .   @D@@@@      XQ
)@@G@@IF NONZ,IN,PFSPKT2+10 THEN      . OPEN 2ND ELT  @F@@@@         L        XR
)@@G@@ A0,(FIELDPKT2,ISDFIPKT2)  . GET PKT POINTERS   @F@@@@         CALL     XS
)@@G@@ GETOPN             . OPEN INPUT FOR THIS ELT   @D@@@@      ELSE        XT
)@@G@@                    . NO SECOND ELT @E@@@@         L,U       A0,ISDFIPKTXU
)@@G@@2       . MUST FAKE FOR Z-OPT @D@@@@         CALL      CREATENULL       XV
)@@G@@  . FAKE NULL FILE@B@@@@      ENDIF                           .   @G@@@@XW
)@@G@@      SZ        A0                    . INSURE PROPER STATUS RETURN     XX
)@@G@@@B@@@@   ENDIF                              .   @B@@@@ ENDBEG           XY
)@@G@@                    .   @[@@@@/.    @[@@@@ .    @[@@@@ .    @[@@@@ .    XZ
)@@G@@@#@@@@ . CREATENULL -   @G@@@@ .     THIS ROUTINE IS PROVIDED SPECIFICALYA
)@@G@@LY FOR THE Z OPTION.  THE     @F@@@@ .     Z OPTION FORCES OUTPUT FOR 'AYB
)@@G@@LL' ELEMENTS ENCOUNTERED,     @F@@@@ .     REGUARDLESS OF THE FACT THEIRYC
)@@G@@ COUNTERPARTS MAY NOT RESIDE  @E@@@@ .     IN THE OPPOSING FILE.  IN THEYD
)@@G@@ EVENT AN ELEMENT HAS   @F@@@@ .     NO COUNTERPART A DOWNDATE IS ACHIEVYE
)@@G@@ED BY MATCHING IT WITH  @F@@@@ .     AN EMPTY FILE.  THE PURPOSE OF THISYF
)@@G@@ ROUTINE IS TO SIMULATE @F@@@@ .     INTERNALLY THE CREATION OF THAT EMPYG
)@@G@@TY FILE.  IT DOES THIS  @F@@@@ .     BY PROPERLY SETTING THE APPROPRIATEYH
)@@G@@ FIELDS IN THE ISDFI    @F@@@@ .     PACKET, IT'S INPUT BUFFER AND IT'S YI
)@@G@@PAGE TABLE.  WHEN CALLED@F@@@@ .     THE ADDRESS OF THE APPROPRIATE ISDFYJ
)@@G@@I PACKET IS EXPECTED    @#@@@@ .     IN A0.     @[@@@@ .    @[@@@@ .    YK
)@@G@@@[@@@@ .    @G@@@@INLOC     EQUF      14,A0,H2          . INDEX LOCATIONYL
)@@G@@ IN ISDFI PKT     @E@@@@PGTBL     EQUF      9,A0,H2           . PAGE TABYM
)@@G@@LE LOCATION @F@@@@NREC      EQUF      13,A0,H2          . NEXT REC INDICYN
)@@G@@ATOR LOC    @G@@@@MRPREF    EQUF      15,A0,H2          . # OF MOST RECEYO
)@@G@@NT PAGE REFERENCED@G@@@@WAREA     EQUF      9,A0,H1           . LOCATIONYP
)@@G@@ OF START OF BUFFER AREA@E@@@@BILOC     EQUF      12,A0,H2          . BUYQ
)@@G@@FFER IMAGE LOCATOR@[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(1). @]@@@@YR
)@@G@@CREATENULL. @B@@@@ BEGIN SUBROUTINE                     .   @E@@@@   L  YS
)@@G@@       A1,INLOC                 . GET ADDR OF INDEX   @F@@@@   SZ       YT
)@@G@@ 0,A1                     . INIT INDEX CONTROL WORD   @F@@@@   L        YU
)@@G@@ A1,PGTBL                 . GET ADDR OF THE PAGE TABLE@E@@@@   L,U      YV
)@@G@@ A2,1                     . 1ST PAGE 1ST REC    @G@@@@   S         A2,MRYW
)@@G@@PREF                . PUT AS MOST RECENT PAGE REFF'ED @E@@@@   S        YX
)@@G@@ A2,NREC                  . ALSO INIT NEXT REC #@F@@@@   L         A2,WAYY
)@@G@@REA                 . GET ADDRESS OF BUFFER AREA@H@@@@   LXI,U     A2,1 YZ
)@@G@@                    . CREATE PAGE TABLE ENT FOR 1ST PAGE    @F@@@@   S  ZA
)@@G@@       A2,,A1                   . STORE AS 1ST PAGE IN TABLE@F@@@@   LN,ZB
)@@G@@U      A3,1                     . THIS WILL SIMULATE A EOF  @G@@@@   S  ZC
)@@G@@       A3,,A2                   . SET EOF AS 1ST WORD IN 1ST BUF  @G@@@@ZD
)@@G@@   S         A2,BILOC                 . SET BUFFER PTR TO POINT AT EOF  ZE
)@@G@@@E@@@@   L,U       A1,1                     . SET TO FETCH 1ST REC@B@@@@ZF
)@@G@@ ENDBEG                               .   @[@@@@/.    @[@@@@ .    @[@@@@ZG
)@@G@@ .    @[@@@@ .    @]@@@@ . SUMMARY -@F@@@@ .     THIS ROUTINE SCANS THE ZH
)@@G@@TREE IT IS GIVEN WHICH WAS CREATED  @E@@@@ .     FROM TWO PROGRAM FILE TZI
)@@G@@OCS AND CONTAINS INFORMATION  @F@@@@ .     ON A SPECIFIC TYPE OF ELEMENTZJ
)@@G@@, EG. SYMBOLIC, RELOCATABLE   @F@@@@ .     ABSOLUTE, OR OMNIBUS.  THE PAZK
)@@G@@RAMETER PASSED INITIALLY IN   @F@@@@ .     A0 INDICATES THE TYPE OF TREEZL
)@@G@@.  THE TREE IS EXAMINED FOR   @F@@@@ .     DIFFERENCES BETWEEN THE TWO RZM
)@@G@@ESPECTIVE FILES.  THE D-OPTION@F@@@@ .     FORCES CONSIDERATION OF TDATEZN
)@@G@@ WORDS IN DETERMINING THESE   @F@@@@ .     DIFFERENCES.  THE DIFFERENCESZO
)@@G@@ ARE PRINTED OUT IN THE FORM  @F@@@@ .     OF WHAT APPEARS IN ONE FILE BZP
)@@G@@UT DOES NOT APPEAR IN THE     @#@@@@ .     OTHER. .   @[@@@@ .    @[@@@@ZQ
)@@G@@ .    @[@@@@$(0). @G@@@@PRINTIT   +         0                 . FLAG WORZR
)@@G@@D FOR PRINT THIS NODE   @F@@@@TDATEWRD  +         0                 . SAZS
)@@G@@VE FOR ONE ELEMENT TDATE@I@@@@SHEADER   +         0                 . SAZT
)@@G@@VE FOR ADDR OF NODE UNDER CONSIDERATIO    @H@@@@STABLE    +         0   ZU
)@@G@@              . SAAVE FOR INC INTO FOLLOWING TABLE    @E@@@@          'SZV
)@@G@@YMBOLIC'                   . TYPE IS SYMBOLIC   @E@@@@          'RELOCATZW
)@@G@@ABLE'                . TYPE IS RELOCATABLE@E@@@@          'ABSOLUTE'    ZX
)@@G@@               . TYPE IS ABSOLUTE   @E@@@@          'OMNIBUS'           ZY
)@@G@@        . TYPE IS OMNIBUS     @B@@@@NOTFOUND  ' NOT IN &'               ZZ
)@@G@@.     @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(1). @]@@@@SUMMARY*.   AA
)@@G@@@B@@@@ BEGIN SUBROUTINE                     .   @H@@@@   S         X11,CAB
)@@G@@OMPARED             . SET FLAG THAT SOME COMAPRISON WAS DONE@D@@@@   AN,AC
)@@G@@U      A0,1                     . TYPES GO 1-4  @G@@@@   LSSL      A0,1 AD
)@@G@@                    . MULTIPLY BY 2 TO FIND OFFSET    @F@@@@   S        AE
)@@G@@ A0,STABLE                . INTO TYPE KEYWORD TABLE   @G@@@@   L        AF
)@@G@@ A14,INFOBITS             . PUT OPTIONS HERE FOR LATER CHECK@G@@@@   L,UAG
)@@G@@       R12,2                    . USE R12 AS JGD REG - 2 PASSES   @E@@@@AH
)@@G@@   REPEAT JGD,R12                     . PROCESS TOC TWICE   @F@@@@      AI
)@@G@@SZ        SHEADER               . INIT HEADER PRINED FLG    @E@@@@      AJ
)@@G@@L,U       X7,DUMP               . INIT TO DUMP TREE   @H@@@@      REPEATAK
)@@G@@                          . INNER LOOP TO PROCESS TREE ONE TIME   @D@@@@AL
)@@G@@         CALL,X7   0,X7               . FETCH NODE    @D@@@@      ESCAPEAM
)@@G@@ WHEN A0,IS,NEG           . NO MORE NODES @B@@@@      OTHERWISE         AN
)@@G@@              .   @G@@@@         L         A1,A0              . SET NODEAO
)@@G@@ ADDR IN A1 FOR TEST    @F@@@@         SZ        PRINTIT            . INAP
)@@G@@IT PRINT THIS NODE FLG  @G@@@@         IF ZERO,IN,SECADDR1 AND ZERO,IN,RAQ
)@@G@@12 THEN . FILE 1 ON PASS 2?   @D@@@@            S         X11,PRINTIT   AR
)@@G@@  . SET PRINT FLAG@B@@@@         ELSE                         .   @H@@@@AS
)@@G@@            IF ZERO,IN,SECADDR2 AND NONZ,IN,R12 THEN .  PAS 1 NOT IN FILAT
)@@G@@E2    @E@@@@               S         X11,PRINTIT  . SET PRINT NODE FLAG AU
)@@G@@@B@@@@            ELSE                      .   @E@@@@               IF AV
)@@G@@A14,ODDP,OPT('D') THEN . IS D-OPTION ON   @I@@@@                  IF NONAW
)@@G@@Z,IN,SECADDR1 AND NONZ,IN,SECADDR2 THEN . MAY BE ALREADY    @F@@@@      AX
)@@G@@               L         A0,DATE1  . YES - GET ONE TDATE WRD@F@@@@      AY
)@@G@@               IF A0,NE,DATE2 THEN . SEE IF TDATES MATCH    @H@@@@      AZ
)@@G@@                  S         X11,PRINTIT  . NO MATCH - PRINT THIS NODE   BA
)@@G@@@B@@@@                     ENDIF            .   @B@@@@                  BB
)@@G@@ENDIF               .   @B@@@@               ENDIF                  .   BC
)@@G@@@B@@@@            ENDIF                     .   @B@@@@         ENDIF    BD
)@@G@@                    .   @D@@@@         IF NONZ,IN,PRINTIT THEN      . DOBE
)@@G@@ WE PRINT   @G@@@@            L         X8,A1           . GET NODE ADDR BF
)@@G@@- SAVE FROM EDIT  @F@@@@            IF ZERO,IN,SHEADER THEN   . HAVE WE BG
)@@G@@PRINTED HEADER YET@F@@@@               S         X11,SHEADER  . NO - SETBH
)@@G@@ PRINTED FLAG     @G@@@@               PRINT,EDIT             PACKET,EDTBI
)@@G@@PKT,,U  . OPEN EDIT     @G@@@@               L         A0,STABLE    . GEBJ
)@@G@@T INDEX INTO KEYWRD TABLE     @D@@@@               E$FD2     STABLE+1,A0BK
)@@G@@  . PUT IN TYPE   @B@@@@               REOPEN                 .   @D@@@@BL
)@@G@@               ' ELEMENTS IN &'       . NEXT WORD     @B@@@@            BM
)@@G@@   ENDMESSAGE              .  @E@@@@               IF NONZ,IN,R12 THEN  BN
)@@G@@  . WHICH PASS IS THIS  @F@@@@                  DL        A0,PFSPKT1  . BO
)@@G@@GET INTERNAL FILE NAME  @F@@@@                  CALL      EDTXFN    . EDBP
)@@G@@IT IN EXTERNAL FILE NAME@B@@@@                  E$MSG     NOTFOUND  .   BQ
)@@G@@@F@@@@                  DL        A0,PFSPKT2  . GET INTERNAL FILE NAME  BR
)@@G@@@F@@@@                  CALL      EDTXFN    . EDIT IN EXTERNAL FILE NAMEBS
)@@G@@@B@@@@               ELSE                   .   @F@@@@                  BT
)@@G@@DL        A0,PFSPKT2  . GET INTERNAL FILE NAME  @F@@@@                  BU
)@@G@@CALL      EDTXFN    . EDIT IN EXTERNAL FILE NAME@B@@@@                  BV
)@@G@@E$MSG     NOTFOUND  .   @F@@@@                  DL        A0,PFSPKT1  . BW
)@@G@@GET INTERNAL FILE NAME  @F@@@@                  CALL      EDTXFN    . EDBX
)@@G@@IT IN EXTERNAL FILE NAME@B@@@@               ENDIF                  .   BY
)@@G@@@D@@@@               E$CHAR    ':'          . DELIMIT HEADER@C@@@@      BZ
)@@G@@         ENDPRINT  SKIP,2       . PRINT IT@B@@@@            ENDIF       CA
)@@G@@              .   @G@@@@            PRINT,EDIT                PACKET,EDTCB
)@@G@@PKT,,U  . OPEN EDIT$    @D@@@@            E$SKIP    1               . INCC
)@@G@@DENT ONE    @E@@@@            E$FD2     0,X8            . PUT IN ELEMENTCD
)@@G@@ NAME @E@@@@            L         A0,('      ')   . GET WORD OF BLANKS  CE
)@@G@@@F@@@@            IF A0,NE,2,X8 THEN        . IS THERE A VERSION NAME   CF
)@@G@@@F@@@@               E$CHAR    '/'          . YES - PUT IN SEPARATOR    CG
)@@G@@@E@@@@               E$FD2     2,X8         . AND VERSION NAME    @B@@@@CH
)@@G@@            ENDIF                     .   @E@@@@            IF A14,ODDP,CI
)@@G@@OPT('D') THEN . IS D- OPTION ON     @G@@@@               E$SKIP    1    CJ
)@@G@@        . YES - PRINT TIME AND DATE ALSO  @D@@@@               E$CHAR   CK
)@@G@@ '('          . IN PARENS     @F@@@@               L         A0,7,X8    CL
)@@G@@  . GET TDATE FOR FIRST FILE  @F@@@@               IF ZERO,IN,R12 THEN  CM
)@@G@@  . BUT IS THIS FIRST PASS    @G@@@@                  L         A0,8,X8 CN
)@@G@@  . NO GET TDATE FOR SECOND FILE    @B@@@@               ENDIF          CO
)@@G@@        .   @F@@@@               SSC       A0,18        . MAKE INTO REALCP
)@@G@@ TDATE WORD @C@@@@               S         A0,TDATEWRD  . SAVE IT @F@@@@CQ
)@@G@@               E$TIME                 . PUT TIME POTION IN STRING @C@@@@CR
)@@G@@               E$SKIP    1            . SPACE   @D@@@@               E$DCS
)@@G@@AY2    TDATEWRD     . THEN DATE     @C@@@@               E$CHAR    ')'  CT
)@@G@@        . DELIMIT @B@@@@            ENDIF                     .   @D@@@@CU
)@@G@@            ENDPRINT                  . PRINT ELT NAME@B@@@@         ENDCV
)@@G@@IF                        .   @B@@@@      ENDREP                        CW
)@@G@@  .   @B@@@@   ENDREP                             .   @B@@@@ ENDBEG     CX
)@@G@@                          .   @[@@@@ .    @[@@@@ .    @B@@@@ END        CY
)@@G@@                          .   ___Z,IXT WORD     *[S@@@*SDFF*@[@@@] .    CZ
)@@G@@@[@@@] .    @B@@@]          AXR$                        .   @B@@@]      DA
)@@G@@    DOWNDEF                     .   @B@@@]          ED$PROCS            DB
)@@G@@        .   @B@@@]          STRUC$,'OLD PROGRAM'         .  @B@@@]      DC
)@@G@@    RESUME                      .   @[@@@] .    @[@@@] .    @[@@@] .    DD
)@@G@@@[@@@] .    @G@@@]AUXLENGTH EQU       10                . LENGTH OF TEMPDE
)@@G@@ CHAR BUFFERS     @E@@@]ARECNO    EQUF      3,A0,H1           . MASTERPKDF
)@@G@@T EQUF'S    @B@@@]BRECNO    EQUF      3,A0,H2           .   @B@@@]RECNO DG
)@@G@@    EQUF      3,A0              .   @B@@@]NORECA    EQUF      4,A0,H1   DH
)@@G@@        .   @B@@@]NORECB    EQUF      4,A0,H2           .   @B@@@]NOREC DI
)@@G@@    EQUF      4,A0              .   @B@@@]AFPADR    EQUF      1,A0,H1   DJ
)@@G@@        .   @B@@@]BFPADR    EQUF      1,A0,H2           .   @B@@@]AIPADRDK
)@@G@@    EQUF      2,A0,H1           .   @B@@@]BIPADR    EQUF      2,A0,H2   DL
)@@G@@        .   @[@@@] .    @E@@@]SDFCW     EQUF      16,A0             . ISDM
)@@G@@DFI PKT EQUF'S    @[@@@] .    @E@@@]FIELD     EQUF      0,A0,S2         DN
)@@G@@  . FIELD PKT EQUF'S    @[@@@] .    @[@@@] .    @[@@@] .    @[@@@] .    DO
)@@G@@@[@@@]/.    @[@@@] .    @[@@@] .    @[@@@] .    @#@@@] . CREATETCF -    DP
)@@G@@@G@@@] .         THIS ROUTINE IS THE CONTROL SECTION FOR THE TCF DOWNDATDQ
)@@G@@E     @G@@@] .         COMPLEX.  TO OVERSIMPLIFY, THIS ROUTINE USES REPEDR
)@@G@@ATED CALLS  @G@@@] .         TO SCAN IN ORDER TO DOWNDATE CORRESPONDING DS
)@@G@@SECTIONS OF TEXT. @F@@@] .         THE SIGNIFICANT DIFFERENCE BETWEEN CODT
)@@G@@NTROL OF A NORMAL @G@@@] .         DOWNDATE AND A TCF DOWNDATE IS FOUND DU
)@@G@@IN THE RECORD FETCH     @G@@@] .         ROUTINE 'GET'.  UNDER THE INFLUDV
)@@G@@ENCE OF THE 'T' OPTION, GET   @G@@@] .         WILL PRODUCE PSUEDO-EOF RDW
)@@G@@ETURNS WHEN EVER AN APPROPRIATE TEXT@G@@@] .         DELIMITER IS ENCOUNDX
)@@G@@TERED (EG. '*' CARD, '(-)' CORR CARD).    @D@@@] .         EACH FILE HASDY
)@@G@@ BEEN PRESCANNED FOR *ELEMENT @E@@@] .         SEQUENCES AND CORRESPONDIDZ
)@@G@@NG GROUPS HAVE BEEN     @E@@@] .         IDENTIFIED.  THIS ROUTINE IS CAEA
)@@G@@LLED FOR EACH     @E@@@] .         SUBSEQUENT GROUP TO BE COMPARED.  THEEB
)@@G@@ 'DRIVER'   @G@@@] .         EXPECTS ONLY THAT INITIAL RECORD ORIGINS HAEC
)@@G@@VE BEEN PRELOADED @ @@@] .         INTO THE MASTERPKT.@[@@@] .    @[@@@]ED
)@@G@@ .    @[@@@] .    @[@@@]$(0). @H@@@]TCFSTATUS RES       1               EE
)@@G@@  . SAVE AREA FOR STATUS RET FROM TCFTYPE @F@@@]ASTAT     EQUF      TCFSEF
)@@G@@TATUS,,T1     . TCFTYPE STATUS FROM FILE A@F@@@]BSTAT     EQUF      TCFSEG
)@@G@@TATUS,,T2     . TCFTYPE STATUS FROM FILE B@E@@@]RSTAT     EQUF      TCFSEH
)@@G@@TATUS,,T3     . RANGE CHECK STATUS  @D@@@]PCFDONE   +         0         EI
)@@G@@        . LOOP EXIT FLAG@E@@@]AUXBUF*   '&&&&&&'                    . COEJ
)@@G@@RR CARD PREFIX BUF@D@@@]          RES       AUXLENGTH-1       . REST OF EK
)@@G@@BUFFER@[@@@] .    @[@@@] .    @[@@@] .    @[@@@]$(1). @]@@@]CREATETCF*. EL
)@@G@@@B@@@] BEGIN SUBROUTINE                     .   @D@@@]   SZ        PCFDOEM
)@@G@@NE                  . INIT FLGS     @F@@@]   REPEAT UNTIL NONZ,IN,PCFDONEN
)@@G@@E       . LOOP TO PROCESS THIS PCF  @D@@@]      L,U       A0,MASTERPKT  EO
)@@G@@        . GET PKT ADDR  @D@@@]      CALL      SCAN                  . DOEP
)@@G@@WNDATE TEXT @F@@@]      L,U       A0,MASTERPKT          . MAKE SURE WE HEQ
)@@G@@AVE PKT ADDR@H@@@]      L         X10,A0                . WILL NEED MASTER
)@@G@@ERPKT HERE FOR SWAP     @H@@@]      L         A0,AFPADR             . WHES
)@@G@@ICH FILE IS IN THE 'A' POSITION     @E@@@]      L         A1,FIELD      ET
)@@G@@        . 1=ADD  2=DELETE     @F@@@]      L         A0,X10              EU
)@@G@@  . RESTORE MASTERPKT ADDR    @E@@@]      IF A1,NE,2,,U THEN            EV
)@@G@@  . WANT PKT IN FORM 2,1@D@@@]         CALL      SWAP               . MUEW
)@@G@@ST SWAP IT  @B@@@]      ENDIF                           .   @F@@@]      EX
)@@G@@L         A1,BRECNO             . TYPE EOF ON B FILE FIRST  @F@@@]      EY
)@@G@@L         A0,BIPADR             . ISDFI PKT ADDR FOR B FILE @C@@@]      EZ
)@@G@@CALL      TCFTYPE               . TYPE EOF@E@@@]      DL        A1,N    FA
)@@G@@              . GET RANGE #'S IF ANY@D@@@]      DS        A1,N2         FB
)@@G@@        . AND STORE THEM@F@@@]      S         A0,BSTAT              . ALFC
)@@G@@SO SAVE RETURN STATUS   @F@@@]      L,U       A0,MASTERPKT          . NOFD
)@@G@@W TYPE EOF ON A FILE    @F@@@]      L         A1,ARECNO             . GEFE
)@@G@@T REC # OF PSUEDO-EOF   @E@@@]      L         A0,AIPADR             . ALFF
)@@G@@SO ISDFI PKT ADDF @C@@@]      CALL      TCFTYPE               . TYPE EOFFG
)@@G@@@F@@@]      DL        A1,N                  . MAY NEED FOR RANGE CHECK  FH
)@@G@@@F@@@]      DS        A1,N1                 . N1,M1=DELETE  N2,M2=ADD   FI
)@@G@@@E@@@]      S         A0,ASTAT              . SAVE RETURN STATUS  @H@@@]FJ
)@@G@@      L,U       A0,TYPEBUFF           . MUST ALSO SAVE CONTENTS OF BUFFEFK
)@@G@@R     @E@@@]      L,U       A1,AUXBUF             . DESTINATION LOCATIONFL
)@@G@@@H@@@]      L         A2,LENGTH             . # OF CHAR TO MOVE MINUS STFM
)@@G@@OP CHAR     @F@@@]      A,U       A2,1                  . ADD ONE FOR STFN
)@@G@@OP CHAR     @E@@@]      SZ        A3                    . MUST BE FIELDAFO
)@@G@@TA    @D@@@]      CALL      FDMOVE                . MOVE STRING   @F@@@]FP
)@@G@@      L         A0,ASTAT              . RESTORE TCFTYPE STATUS    @E@@@]FQ
)@@G@@      IF A0,IS,NONZ THEN              . MUST BE A (-) CARD  @G@@@]      FR
)@@G@@   L         A0,BSTAT           . GET TCFTYPE STATUS ON B FILE    @F@@@]FS
)@@G@@         IF A0,IS,NONZ THEN           . (-) CARD MUST CHECK RANGES@E@@@]FT
)@@G@@            DL        A1,N1           . A1-A4  N2,M2,N1,M1  @F@@@]      FU
)@@G@@      DL        A3,N2           . HAVEN'T MOVES THESE YET   @E@@@]      FV
)@@G@@      CALL      RANGE           . CHECK FOR OVERLAP   @E@@@]            FW
)@@G@@CASENTRY A0               . INTERROGATE STATUS  @G@@@]               L,UFX
)@@G@@       A0,MASTERPKT  . GET MASTER CONTROL PKT ADDR    @E@@@]            FY
)@@G@@   L         A2,RECNO     . GET BOTH REC NUMBERS@F@@@]               LXIFZ
)@@G@@       A1,AFPADR    . GET ONE FIELD CONTROL PKT @D@@@]               LXMGA
)@@G@@       A1,BFPADR    . GET OTHER     @F@@@]               L,U       A0,SEGB
)@@G@@QERR    . SOME SORT OF RANGE ERROR  @D@@@]               CALL      PCFERGC
)@@G@@ROR     . PROCESS ERROR @D@@@]               L         A1,(1,1)     . INGD
)@@G@@C PAST EOF'S@G@@@]               L,U       A0,MASTERPKT  . GET ADDR OF MGE
)@@G@@ASTER CONTROL PKT @D@@@]               AH        A1,RECNO     . INC PASTGF
)@@G@@ EOF  @G@@@]               S         A1,RECNO     . UPDATE PKT TO CONTINGG
)@@G@@UE SCAN     @D@@@]            CASE 1                    . < CONDITION   GH
)@@G@@@F@^@]               L,U       A0,2         . MUST OUTPUT (-) CARD IMAGEGI
)@@G@@@E@A@^                     L         A1,ASTAT . NEED DOUBLE TEST  @E@@@AGJ
)@@G@@               L         A1,ASTAT     . NEED DOUBLE TEST    @E@A@^      GK
)@@G@@               IF A1,EQ,2,,U THEN . A FILE IS -N,M-   @E@@@A            GL
)@@G@@   IF A1,EQ,2,,U THEN     . A FILE IS -N,M-     @F@A@^                  GM
)@@G@@     L,U       A0,8 . DELETE ON A FILE -N,M-/0,0@F@@@A                 LGN
)@@G@@,U       A0,8       . DELETE ON A FILE -N,M-/0,0@B@A@^                  GO
)@@G@@   ELSE             .   @B@@@A               ELSE                   .   GP
)@@G@@@F@A@^                       L,U       A0,2 . DELETE ON A FILE -N,M/0,0 GQ
)@@G@@@F@@@A                 L,U       A0,2       . DELETE ON A FILE -N,M/0,0 GR
)@@G@@@B@A@^                     ENDIF            .   @B@@@A               ENDGS
)@@G@@IF                  .   @G@@@]               CALL      CARDOUT      . SCGT
)@@G@@AN CANNOT OUTPUT PSUDO-EOF    @F@@@]               L,U       A0,MASTERPKGU
)@@G@@T  . USE SCAN TO DO OUTPUT    @D@@@]               L         A1,ARECNO  GV
)@@G@@  . INC A PAST EOF@B@@@]               A,U       A1,1         .   @E@@@]GW
)@@G@@               S         A1,ARECNO    . B STILL SITS ON EOF @D@@@]      GX
)@@G@@      CASE 2                    . > CONDITION   @E@@@]               L,UGY
)@@G@@       A0,'&'       . MUST NULL OUT AUXBUF@B@@@]               S,S1     GZ
)@@G@@ A0,AUXBUF    .   @G@@@]               L         A0,BSTAT     . MUST FINHA
)@@G@@D OUT WHAT KIND BLOCK   @G@@@]               IF A0,EQ,2,,U THEN     . IFHB
)@@G@@ 3 BLOCK WAS CHANGE CARDS     @E@@@]                  L,U       A0,5    HC
)@@G@@  . 5 MEANS -N,M- CARD  @B@@@]               ELSE                   .   HD
)@@G@@@E@@@]                  L,U       A0,3      . 3 MEANS -N,M CARD   @B@@@]HE
)@@G@@               ENDIF                  .   @B@@@]               CALL     HF
)@@G@@ CARDOUT      .   @F@@@]               L,U       A0,MASTERPKT  . USE SCAHG
)@@G@@N TO DO OUTPUT    @E@@@]               L         A1,BRECNO    . THIS TIMHH
)@@G@@E ON B FILE @D@@@]               A,U       A1,1         . INC PAST EOF  HI
)@@G@@@D@@@]               S         A1,BRECNO    . BACK INTO PKT @F@@@]      HJ
)@@G@@      CASE 3                    . <> CONDITION - OVERLAP    @G@@@]      HK
)@@G@@         L         A0,BSTAT     . RETRIEVE TYPE STAT FROM B FILE  @E@#@]HL
)@@G@@               AND       A2,A4        . IS M1 OR M2 = 0     @F@@@#      HM
)@@G@@         IF A2,IS,ZERO OR A4,IS,ZERO THEN . IS M1 OR M2 = 0 @B@@@#      HN
)@@G@@           L,U       A3,0       .   @B@@@#               ELSE           HO
)@@G@@        .   @B@@@#                 L,U       A3,1       .   @B@@@#      HP
)@@G@@         ENDIF                  .   @G@@@]               IF A0,NE,ASTAT HQ
)@@G@@AND A3,IS,ZERO THEN . SAME TYPE CORRECTION@E@@@]                  IF A0,HR
)@@G@@EQ,2,,U THEN  . NO - IS B THE -N,M- @F@@@]                     L,U      HS
)@@G@@ A0,'&'  . NULL OUT PREFIX BUFFER   @F@@@]                     S,S1     HT
)@@G@@ A0,AUXBUF  . NO PREFIX FOR ADD     @F@@@]                     L,U      HU
)@@G@@ A0,5   . YES - OUTPUT -N,M- CARD   @B@@@]                     CALL     HV
)@@G@@ CARDOUT  . @H@@@]                     L,U       A0,MASTERPKT  . PREPAREHW
)@@G@@ FOR OUTPUT ON B FILE   @D@@@]                     L         A1,BRECNO  HX
)@@G@@. INC BREC# @E@@@]                     A,U       A1,1   . OUTPUT ON NEXTHY
)@@G@@ SCAN @D@@@]                     S         A1,BRECNO  . UPDATE    @B@@@]HZ
)@@G@@                  ELSE                .   @E@@@#                     L  IA
)@@G@@       A1,ASTAT . NEED DOUBLE TEST  @E@@@#                     IF A1,EQ,IB
)@@G@@2,,U THEN . A FILE IS -N,M-   @F@@@#                       L,U       A0,IC
)@@G@@8 . DELETE ON A FILE -N,M-/0,0@B@@@#                     ELSE           ID
)@@G@@  .   @F@#@]                     L,U       A0,2   . DELETE ON A FILE -N,IE
)@@G@@M/0,0 @F@@@#                       L,U       A0,2 . DELETE ON A FILE -N,IF
)@@G@@M/0,0 @B@@@#                     ENDIF            .   @D@@@]            IG
)@@G@@         CALL      CARDOUT  .   WILL DO IT@G@@@]                     L,UIH
)@@G@@       A0,MASTERPKT  . MUST SET UP FOR OUTPUT   @E@@@]                  II
)@@G@@   L         A1,ARECNO  . A FILE THIS TIME@D@@@]                     A,UIJ
)@@G@@       A1,1   . INC PAST EOF  @G@@@]                     S         A1,ARIK
)@@G@@ECNO  . UPDATE FOR OUTPUT NEXT SCAN @B@@@]                  ENDIF       IL
)@@G@@        .   @B@@@]               ELSE                   .   @G@@@]      IM
)@@G@@            L         A0,BSTAT  . WHAT TYPE CARD DO WE OUTPUT     @G@@@]IN
)@@G@@                  L         A1,ASTAT  . NEED DOUBLE TEST FOR CHG IMAGES IO
)@@G@@@E@@@]                  IF A0,EQ,2,,U THEN  . 2 MEANS CHG CARDS   @G@@@]IP
)@@G@@                     L,U       A0,4   . 4 MEANS -N1,M1/0,0/N2,M2- CARD  IQ
)@@G@@@F@@@]                     IF A1,EQ,2,,U THEN . SEE IF A IS CHG CARD TOOIR
)@@G@@@H@@@]                        L,U       A0,7  . YES - MEANS -N1,M1-/0,0/IS
)@@G@@N2,M2- CARD @B@@@]                     ENDIF            .   @B@@@]      IT
)@@G@@            ELSE                .   @G@@@]                     L,U      IU
)@@G@@ A0,1   . 1 MEANS -N1,M1/0,0/N2,M2 CARD   @F@@@]                     IF IV
)@@G@@A1,EQ,2,,U THEN . CHECK TYPE OF OTHER CARD@G@@@]                        IW
)@@G@@L,U       A0,6  . MEANS -N1,M1-/0,0/N2,M2 CARD  @B@@@]                  IX
)@@G@@   ENDIF            .   @B@@@]                  ENDIF               .   IY
)@@G@@@D@@@]                  CALL      CARDOUT   . OUTPUT CARD   @E@@@]      IZ
)@@G@@            L         A1,(1,1)  . INC FOR LOOP TO SCAN@D@@@]            JA
)@@G@@      L,U       A0,MASTERPKT  . PKT ADDR  @F@@@]                  AH    JB
)@@G@@    A1,RECNO  . ADD TO REC #'S IN PKT     @F@@@]                  S     JC
)@@G@@    A1,RECNO  . UPDATE PKT FOR RESCAN     @B@@@]               ENDIF    JD
)@@G@@              .   @G@@@]            CASE 4                    . = CONDITJE
)@@G@@ION - RANGES IDENTICAL  @F@@@]               L         A0,BSTAT     . GEJF
)@@G@@T TYPE STATUS OF B EOF  @D@@@]               IF A0,NE,ASTAT THEN    . ARJG
)@@G@@E EOFS SAME @G@@@]                  L         A1,ASTAT  . NEED DOUBLE TEJH
)@@G@@ST FOR CHG IMAGES @E@@@]                  IF A0,EQ,2,,U THEN  . 2 MEANS JI
)@@G@@CHG CARDS   @G@@@]                     L,U       A0,4   . 4 MEANS -N1,M1JJ
)@@G@@/0,0/N2,M2- CARD  @F@@@]                     IF A1,EQ,2,,U THEN . SEE IFJK
)@@G@@ A IS CHG CARD TOO@H@@@]                        L,U       A0,7  . YES - JL
)@@G@@MEANS -N1,M1-/0,0/N2,M2- CARD @B@@@]                     ENDIF          JM
)@@G@@  .   @B@@@]                  ELSE                .   @G@@@]            JN
)@@G@@         L,U       A0,1   . 1 MEANS -N1,M1/0,0/N2,M2 CARD   @F@@@]      JO
)@@G@@               IF A1,EQ,2,,U THEN . CHECK TYPE OF OTHER CARD@G@@@]      JP
)@@G@@                  L,U       A0,6  . MEANS -N1,M1-/0,0/N2,M2 CARD  @B@@@]JQ
)@@G@@                     ENDIF            .   @B@@@]                  ENDIF JR
)@@G@@              .   @D@@@]                  CALL      CARDOUT   . OUTPUT CJS
)@@G@@ARD   @B@@@]               ENDIF                  .   @E@@@]            JT
)@@G@@   L         A1,(1,1)     . INC FOR LOOP TO SCAN@D@@@]               L,UJU
)@@G@@       A0,MASTERPKT  . PKT ADDR     @F@@@]               AH        A1,REJV
)@@G@@CNO     . ADD TO REC #'S IN PKT     @F@@@]               S         A1,REJW
)@@G@@CNO     . UPDATE PKT FOR RESCAN     @B@@@]            ENDCASE           JX
)@@G@@        .   @E@@@]         ELSE                         . REAL EOF OR *CJY
)@@G@@ARD   @H@@@]            L         A0,ASTAT        . GET TCFTYPE STATUS OJZ
)@@G@@N OUTPUT FILE     @F@@@]            CALL      BLOCKOUT        . OUTPUT 'KA
)@@G@@A' TILL NEXT '*'  @B@@@]         ENDIF                        .   @E@@@]KB
)@@G@@      ELSE                            . MUST BE REAL EOF    @G@@@]      KC
)@@G@@   L         A0,BSTAT           . GET TCFTYPE STATUS OF B FILE EOF@F@@@]KD
)@@G@@         IF A0,IS,NONZ THEN           . (-) CARD MEANS OUTPUT     @G@@@]KE
)@@G@@            L,U       X10,MASTERPKT   . PREPARE FOR OUTPUT ON B FILE    KF
)@@G@@@G@@@]            CALL      SWAP            . B FILE INTO OUTPUT POSITIOKG
)@@G@@N     @G@@@]            DL        A1,N2           . BLOCKOUT EXPECTS PRIKH
)@@G@@OR TCFTYPE  @E@@@]            DS        A1,N            .    TO BE ON B KI
)@@G@@FILE  @H@@@]            CALL      BLOCKOUT        . OUTPUT B TIL NEXT '*KJ
)@@G@@' OR REAL EOF     @F@@@]            L,U       X10,MASTERPKT   . PUT PKT KK
)@@G@@BACK AS IT WAS    @B@@@]            CALL      SWAP            .   @B@@@]KL
)@@G@@         ENDIF                        .   @D@@@]         S         X11,PKM
)@@G@@CFDONE        . SET EXIT FLAG @B@@@]      ENDIF                         KN
)@@G@@  .   @B@@@]   ENDREP                             .   @B@@@] ENDBEG     KO
)@@G@@                          .   @[@@@] .    @[@@@]/.    @[@@@] .    @]@@@]KP
)@@G@@ . RANGE -  @G@@@] .         THIS ROUTINE IS USED FOR ANALIZING THE RESPKQ
)@@G@@ECTIVES RANGES    @E@@@] .         REFERENCED BY TWO CORRESPONDING CORREKR
)@@G@@CTION CARDS.@E@@@] .         ASSUME THAT N1,M1 IS THE RANGE CORRESPONDINKS
)@@G@@G TO A@A@@@] .         FILE AND N2,M2 TO B FILE.@^@@@] .            ON IKT
)@@G@@NPUT -@^@@@] .               A1 - N1@^@@@] .               A2 - M1@^@@@]KU
)@@G@@ .               A3 - N2@^@@@] .               A4 - M2@^@@@] .          KV
)@@G@@  ON RETURN @A@@@] .               A0 - -1= ERROR     @ @@@] .          KW
)@@G@@           1= <   @ @@@] .                     2= >   @C@@@] .          KX
)@@G@@           3= <> (RANGES OVERLAP)   @C@@@] .                     4= <> (KY
)@@G@@RANGES IDENTICAL) @[@@@] .    @[@@@] .    @[@@@] .    @[@@@]$(1). @[@@@]KZ
)@@G@@RANGE.@B@@@] BEGIN SUBROUTINE                     .   @E@@@]   LN,U     LA
)@@G@@ A0,1                     . PRELOAD ERROR STATUS@E@@@]   IF A2,IS,ZERO OLB
)@@G@@R A1,LE,A2 THEN     . TEST NATURE OF N1,N2@D@@@]      IF A4,IS,ZERO OR ALC
)@@G@@3,LE,A4 THEN  . NOW TEST N2,M2@D@@@]         IF A1,LT,A3 AND A3,GT,A2 THLD
)@@G@@EN . TEST IF A<B  @G@@@]            L,U       A0,1            . YES - RELE
)@@G@@TURN 1 AS FLAG FOR <    @B@@@]         ELSE                         .   LF
)@@G@@@E@@@]            IF A3,LT,A1 AND A1,GT,A4 THEN . NO - MAYBE A>B  @C@@@]LG
)@@G@@               L,U       A0,2         . A>B     @B@@@]            ELSE  LH
)@@G@@                    .   @G@@@]               L,U       A0,4         . PRLI
)@@G@@ELOAD  - RANNGES IDENTICAL    @G@@@]               IF A1,NE,A3 OR A2,NE,LJ
)@@G@@A4 THEN . SEE IF RANGES IDENTICAL   @F@@@]                  L,U       A0LK
)@@G@@,3      . NO - BUT DEFINITE OVERLAP @B@@@]               ENDIF          LL
)@@G@@        .   @B@@@]            ENDIF                     .   @B@@@]      LM
)@@G@@   ENDIF                        .   @B@@@]      ENDIF                   LN
)@@G@@        .   @B@@@]   ENDIF                              .   @B@@@] ENDBELO
)@@G@@G                               .   @@@@@]@[@@@]/.    @[@@@] .    @[@@@]LP
)@@G@@ .    @]@@@] . TCFOUT - @E@@@] .         THIS ROUTINE IS USED TO OUTPUT LQ
)@@G@@RECS BETWEEN TWO  @G@@@] .         RESPECTIVE PSUEDO EOFS.  IT USES SCANLR
)@@G@@ WHICH EFFECTIVELY,     @F@@@] .         DOWNDATES THE FILE TO BE OUTPUTLS
)@@G@@ AGAINST A EMPTY FILE.  @F@@@] .          'A' FILE IS ALWAYS THE ONE TO LT
)@@G@@BE OUTPUT.  ON RETURN   @F@@@] .         FROM SCAN TCFTYPE IS USED TO TYLU
)@@G@@PE THE NEW PSUEDO EOF   @E@@@] .         ON 'A' FILE. A0 IS RETURNED WITLV
)@@G@@H THE EOF STATUS  @A@@@] .         RETURNED FROM TCFTYPE.   @[@@@] .    LW
)@@G@@@[@@@] .    @[@@@] .    @[@@@]$(0). @G@@@]TSWITCH   RES       1         LX
)@@G@@        . TEMP STORE FOR ADD-DELETE FLAG  @[@@@] .    @[@@@] .    @[@@@]LY
)@@G@@$(1). @]@@@]TCFOUT.     @B@@@] BEGIN SUBROUTINE                     .   LZ
)@@G@@@G@@@]   L,U       A0,MASTERPKT             . NEED REC #'S AND ISDFI PKTMA
)@@G@@ ADDR @E@@@]   L         A0,AFPADR                . GET A FIELD PKT ADDRMB
)@@G@@@G@@@]   L         A0,FIELD                 . GET ADD-DELETE FLG FOR THIMC
)@@G@@S FILE@E@@@]   S         A0,TSWITCH               . SAVE FOR LATER CHECKMD
)@@G@@@E@@@]   L,U       A0,MASTERPKT             . RESTORE PKT TO A0   @G@@@]ME
)@@G@@   L         A1,ARECNO                . THIS IS CURRENT REC # OF A FILE MF
)@@G@@@E@@@]   A,U       A1,1                     . INC PAST PSUEDO EOF @D@@@]MG
)@@G@@   S         A1,ARECNO                . RETURN TO PKT @F@@@]   CALL     MH
)@@G@@ SCAN                     . READY TO DO FAKE SCAN     @F@@@]   L,U      MI
)@@G@@ A0,MASTERPKT             . MAKE SURE WE HAVE PKT ADDR@G@@@]   L        MJ
)@@G@@ A0,AFPADR                . SEE IF PKT HAS BEEN SWAPPED     @F@@@]   L  MK
)@@G@@       A0,FIELD                 . NEED ADD-DELETE FLG FOR A @E@@@]   IF ML
)@@G@@A0,NE,TSWITCH THEN              . IF NOT EQUAL - SWAP @B@@@]      CALL  MM
)@@G@@    SWAP                  .   @B@@@]   ENDIF                            MN
)@@G@@  .   @E@@@]   L,U       A0,MASTERPKT             . RESTORE PKT ADDR    MO
)@@G@@@F@@@]   L         A1,ARECNO                . MUST FIND TYPE OF EOF     MP
)@@G@@@D@@@]   L         A0,AIPADR                . ISDFI PKT ADDR@D@@@]   CALMQ
)@@G@@L      TCFTYPE                  . NATURE OF EOF @B@@@] ENDBEG           MR
)@@G@@                    .   @[@@@]/.    @[@@@] .    @[@@@] .    @[@@@] .    MS
)@@G@@@]@@@] . FDMOVE - @G@@@] .          THIS ROUTINE IS DESIGNED TO MOVE AN MT
)@@G@@IMAGE FROM ONE AREA TO  @H@@@] .          ANOTHER ON A CHARACTER BY CHARMU
)@@G@@ACTER BASIS.  THE RESULING IMAGE IS @H@@@] .          ALWAYS FIELDATA.  MV
)@@G@@THE LAST WORD OF THE BUFFER IS ALWAYS BLANK     @^@@@] .          FILLEDMW
)@@G@@.     @^@@@] .            ON ENTRY -@B@@@] .                A0 - FROM ARMX
)@@G@@EA ADDR     @A@@@] .                A1 - TO AREA ADDR @D@@@] .          MY
)@@G@@      A2 - LENGTH OF AREA IN CHARACTERS   @D@@@] .                A3 - AMZ
)@@G@@SCII FLG ( NONZ = ASCII )     @[@@@] .    @[@@@] .    @[@@@] .    @[@@@]NA
)@@G@@$(1). @[@@@]FDMOVE@B@@@] BEGIN SUBROUTINE                     .   @F@@@]NB
)@@G@@   L         A5,A2                    . PUT CHAR LENGTH IN A5     @E@@@]NC
)@@G@@   IF A3,IS,ZERO THEN                 . IS IT ASCII OF FD?  @E@@@]      ND
)@@G@@CALL,X9   FDGET                 . OPEN FD ROUTINE     @B@@@]   ELSE     NE
)@@G@@                          .   @H@@@]      CALL,X9   ASFDGET             NF
)@@G@@  . OPEN ASCII-FD TRANSLATION ROUTINE     @B@@@]   ENDIF                NG
)@@G@@              .   @F@@@]   CALL,X10  FDPUT                    . OPEN FD NH
)@@G@@OUTPUT ROUTINE    @E@@@]   REPEAT JGD,A5                      . TRANSFERNI
)@@G@@ CHARACTERS @C@@@]      E$GET                           . FETCH   @E@@@]NJ
)@@G@@      E$PUT                           . STORE IN STRING     @B@@@]   ATENK
)@@G@@ND                              .   @F@@@]      E$CLOSE                 NL
)@@G@@        . OUTPUT WRD AND BLANK FILL @B@@@]   ENDREP                     NM
)@@G@@        .   @B@@@] ENDBEG                               .   @[@@@]/.    NN
)@@G@@@[@@@] .    @[@@@] .    @[@@@] .    @]@@@] . TCFTYPE -@G@@@] .         TNO
)@@G@@HIS ROUTINE IS RESPONSIBLE FOR FETCHING THE APPROPRIATE     @G@@@] .    NP
)@@G@@     PART OF A PSUEDO EOF AND TYPING THE IMAGE.  SINCE THERE ARE  @G@@@]NQ
)@@G@@ .         NOW THREE TYPES OF POTENTIAL EOFS, THIS MECHANISM WAS NEEDED NR
)@@G@@@A@@@] .         FOR DIFFERENTIATION.     @^@@@] .            ON ENTRY -NS
)@@G@@@A@@@] .               A0 - ISDFI PKT ADDR@B@@@] .               A1 - RENT
)@@G@@C# OF PSUEDO EOF  @ @@@] .            ON RETURN -     @^@@@] .          NU
)@@G@@     A0 -   @E@@@] .                     0 = '*' CARD ENCOUNTERED  OR RENV
)@@G@@AL EOF@F@@@] .                     1 = '-' CARD ( CORRECTION CARD IMAGE NW
)@@G@@)     @B@@@] .                     2 = '-N,M-' CARD   @[@@@] .    @[@@@]NX
)@@G@@ .    @[@@@] .    @[@@@]$(0). @F@@@]TYPEBUFF  RES       AUXLENGTH       NY
)@@G@@  . TEMP CHAR STORE BUFFER    @I@@@]LENGTH    +         0               NZ
)@@G@@  . LENGTH OF IMAGE IN TYPEBUFF LESS STOP CH    @F@@@]N         +       OA
)@@G@@  0                 . TEMP STORE FOR N OF -N,M  @F@@@]M         +       OB
)@@G@@  0                 . TEMP STORE FOR M OF SAME  @G@@@]CHGCRD    +       OC
)@@G@@  0                 . FLG FOR CHG CARD PROCESSING     @E@@@]TCFNULL   + OD
)@@G@@        0                 . FLAG FOR NULL OUTPUT@F@@@]SAVENUM   +       OE
)@@G@@  0                 . SAVE FOR REC # CASE OF ERR@G@@@]SAVEPKT   +       OF
)@@G@@  0                 . SAVE FOR PKT ADDR CASE OF ERR   @[@@@] .    @[@@@]OG
)@@G@@ .    @[@@@] .    @[@@@]$(1). @]@@@]TCFTYPE.    @B@@@] BEGIN SUBROUTINE OH
)@@G@@                    .   @F@@@]   S         A1,SAVENUM               . SAOI
)@@G@@VE REC # CASE OF ERROR  @D@@@]   S         A0,SAVEPKT               . SAOJ
)@@G@@VE PKT ADDR @D@@@]   SZ        TCFNULL                  . INIT ERROR FLGOK
)@@G@@@D@@@]   CASENTRY CALLING ISDFI             . GET PSUEDO EOF@E@@@]   CASOL
)@@G@@E 0                             . ERROR ENCOUNTERED   @E@@@]      L     OM
)@@G@@    A1,SAVEPKT            . GET IO PKT ADDR     @D@@@]      L         A0ON
)@@G@@,ISDFIERR           . GET ERROR CODE@D@@@]      CALL      ERROR         OO
)@@G@@        . PROCESS ERROR @E@@@]   CASE 1                             . THOP
)@@G@@IS IS REAL EOF    @E@@@]      S         X11,TCFNULL           . SET NULLOQ
)@@G@@ OUTPUT FLAG@D@@@]   CASE 2                             . NORMAL RETURN OR
)@@G@@@E@@@]      L,T1      A8,SDFCW              . NEED LENGTH OF REC  @D@@@]OS
)@@G@@      L         A3,A1                 . WANT ASCII FLG@F@@@]      SSL   OT
)@@G@@    A3,18                 . AND THATS ALL WE WANT     @E@@@]      L     OU
)@@G@@    A0,A2                 . THIS IS INPUT BUFFER@E@@@]      L,U       A1OV
)@@G@@,TYPEBUFF           . THIS IS DESTINATION @G@@@]      IF A3,IS,ZERO THENOW
)@@G@@              . OPEN PROPER CHAR FETCH ROUTINE  @E@@@]         MSI,U    OX
)@@G@@ A8,6               . THIS MANY FD CHARS  @E@@@]         CALL,X9   FDGETOY
)@@G@@              . FIELDATA CHARACTERS @B@@@]      ELSE                    OZ
)@@G@@        .   @F@@@]         MSI,U     A8,4               . THIS MANY ASCIPA
)@@G@@I CHARS     @G@@@]         CALL,X9   ASFDGET            . ASCII - FIELDAPB
)@@G@@TA TRANSLATION    @B@@@]      ENDIF                           .   @E@@@]PC
)@@G@@      CALL,X10  FDPUT                 . ONLY STORE FIELDATA @D@@@]      PD
)@@G@@E$GET                           . GET FIRST CHAR@F@@@]      AN,U      A8PE
)@@G@@,1                  . WE'VE GOT A CHAR SO BUMP  @F@@@]      IF A3,EQ,CHAPF
)@@G@@R,,S6 THEN          . CHECK FOR (-) CORR CARD   @E@@@]         SZ       PG
)@@G@@ CHGCRD             . INIT CHG CARD FLG   @E@@@]         L,U       A5,0 PH
)@@G@@              . INIT COUNT TO 1     @B@@@]         CALL      NUMBER     PI
)@@G@@        .   @F@@@]         S         A7,N               . STORE 1ST NUMBPJ
)@@G@@ER IN BINARY@E@@@]         SZ        M                  . INIT IN CASE NPK
)@@G@@O 'M' @E@@@]         IF A3,EQ,',',,U THEN         . CHECK DELIMITER     PL
)@@G@@@E@@@]            E$PUT                     . PLACE IN TYPEBUFF   @D@@@]PM
)@@G@@            A,U       A5,1            . INC CHR COUNT @F@@@]            PN
)@@G@@CALL      NUMBER          . MUST BE SECOND ## FIELD   @E@@@]            PO
)@@G@@S         A7,M            . TUCK AWAY VALUE     @G@@@]            IF A3,PP
)@@G@@EQ,'-',,U THEN      . MAY BE A CHG CARD CORR IMAGE    @F@@@]            PQ
)@@G@@   E$PUT                  . INSERT IN PREFIX BUFFER   @D@@@]            PR
)@@G@@   A,U       A5,1         . INC CHR COUNT @F@@@]               L,U      PS
)@@G@@ A3,' '       . YES - FAKE TERMINATOR     @D@@@]               S        PT
)@@G@@ X11,CHGCRD   . AND SET FLG   @#@@@]            ENDIF @B@@@]         ENDPU
)@@G@@IF                        .   @C@@@]         IF A3,NE,' ',,U AND A3,NE,'PV
)@@G@@.',,U THEN .@D@@@]            L,U       A0,TYPERR       . GET ERROR FLAGPW
)@@G@@@D@@@]            L         A1,SAVENUM      . GET REC #     @E@@@]      PX
)@@G@@      L         A2,SAVEPKT      . GET IO PKT ADDR     @D@@@]            PY
)@@G@@CALL      PCFERROR        . PROCESS ERROR @E@@@]            S         X1PZ
)@@G@@1,TCFNULL     . TRY TO CONTINUE     @B@@@]         ELSE                 QA
)@@G@@        .   @H@@@]            L,U       A3,'/'          . SET UP FOR CREQB
)@@G@@ATION OF CORR IMAGES    @E@@@]            E$PUT                     . INQC
)@@G@@SERT IN TYPEBUFF  @F@@@]            L,U       A3,'&'          . ALSO NEEQD
)@@G@@D MSG STOP CHAR   @D@@@]            E$PUT                     . INSERT IQE
)@@G@@T     @B@@@]            E$CLOSE                   .   @D@@@]            QF
)@@G@@A,U       A5,1            . INC COUNT     @D@@@]            S         A5QG
)@@G@@,LENGTH       . SAVE IN LENGTH@G@@@]            L,U       A0,N          QH
)@@G@@  . CHANGE N FROM FIELDATA TO BINARY@C@@@]            CALL      CONVERT QI
)@@G@@        . DO IT   @C@@@]            S         A3,N            . INTO N  QJ
)@@G@@@D@@@]            L,U       A0,M            . SAME WITH M   @B@@@]      QK
)@@G@@      CALL      CONVERT         .   @D@@@]            S         A3,M    QL
)@@G@@        . SAVE FOR LATER@F@@@]            IF ZERO,IN,CHGCRD THEN    . CHQM
)@@G@@G OR REGULAR CORR IMAGE @E@@@]               L,U       A0,1         . REQN
)@@G@@GULAR CORR IMAGE  @B@@@]            ELSE                      .   @E@@@]QO
)@@G@@               L,U       A0,2         . MUST BE CHG CARD    @B@@@]      QP
)@@G@@      ENDIF                     .   @B@@@]         ENDIF                QQ
)@@G@@        .   @B@@@]      ELSE                            .   @E@@@]      QR
)@@G@@   S         X11,TCFNULL        . TRY TO KEEP GOING   @B@@@]      ENDIF QS
)@@G@@                          .   @B@@@]   ENDCASE                          QT
)@@G@@  .   @E@@@]   IF NONZ,IN,TCFNULL THEN            . IN CASE OF ERROR    QU
)@@G@@@D@@@]      L,U       A3,'&'                . STOP CHAR     @E@@@]      QV
)@@G@@S,S1      A3,TYPEBUFF           . NULL OUT MSG STRING @C@@@]      SZ    QW
)@@G@@    LENGTH                . NO IMAGE@C@@@]      SZ        N             QX
)@@G@@        . NO N    @C@@@]      SZ        M                     . NO M    QY
)@@G@@@E@@@]      L,U       A0,0                  . TREAT AS REAL EOF   @B@@@]QZ
)@@G@@   ENDIF                              .   @B@@@] ENDBEG                 RA
)@@G@@              .   @[@@@]/.    @[@@@]   .  @#@@@]   . NUMBER -     @G@@@]RB
)@@G@@   .         THIS REMOVES A STRING OF NUMBERS FROM THE INPUT STRING,    RC
)@@G@@@G@@@]   .         TESTS THEM FOR VALIDITY, PASSES THEM TO THE OUTPUT BURD
)@@G@@FFER  @G@@@]   .         AND LOADS THEM SEQUENTIALLY INTO A4.  IT ASSUMERE
)@@G@@S THAT THE  @G@@@]   .         GET AND PUT ROUTINES HAVE BEEN INITIALIZERF
)@@G@@D AND THAT THE    @G@@@]   .         NUMBER STRING WILL BE NO LONGER THARG
)@@G@@N SIX CHARACTERS.  THE  @D@@@]   .         RESULT IN A4 IS ALWAYS LEFT JRH
)@@G@@USTIFIED.   @[@@@]   .  @[@@@]   .  @[@@@]   .  @[@@@]   .  @[@@@]   .  RI
)@@G@@@[@@@]$(1). @]@@@]NUMBER.     @B@@@]   BEGIN SUBROUTINE                 RJ
)@@G@@  .   @C@@@]   SZ        A7                       . INIT A7 @E@@@]   REPRK
)@@G@@EAT JGD,A8                      . CHAR COUNT IN A8    @D@@@]      E$GET RL
)@@G@@                          . FETCH A CHAR  @E@@@]   ESCAPE WHEN A3,LT,'0'RM
)@@G@@,,U OR A3,GT,'9',,U . ONLY NUMBERS  @B@@@]   OTHERWISE                  RN
)@@G@@        .   @E@@@]      E$PUT                           . INTO OUTPUT STRO
)@@G@@RING  @G@@@]      A,U       A5,1                  . # OF CHARS IN OUTPUTRP
)@@G@@ STRING     @C@@@]      L         A6,A3                 . GET CHAR@F@@@]RQ
)@@G@@      LSSL      A6,30                 . CREATE STRING OF ONE WORD @E@@@]RR
)@@G@@      LDSC      A6,6                  . A7 IS 'NUMBER' WORD @B@@@]   ATERS
)@@G@@ND                              .   @F@@@]      L,U       A3,' '        RT
)@@G@@        . FAKE LAST CHAR AS BLK     @B@@@]   ENDREP                     RU
)@@G@@        .   @G@@@]   IF A7,IS,NONZ  THEN                . ONLY IF THERE RV
)@@G@@ARE ANY CHARS     @D@@@]      REPEAT WHILE A7,IS,POS          . LEFT JUSRW
)@@G@@TIFY  @D@@@]         LSSL      A7,6               . FIELDATA CHARS@B@@@]RX
)@@G@@      ENDREP                          .   @B@@@]   ENDIF                RY
)@@G@@              .   @B@@@] ENDBEG                               .   @[@@@]RZ
)@@G@@/.    @[@@@] .    @[@@@] .    @[@@@] .    @#@@@] . BLOCKOUT -     @H@@@]SA
)@@G@@ .          HERE WE WISH TO OUTPUT A BLOCK OF TEXT POSITIONED IN 'A' FILSB
)@@G@@E     @G@@@] .          UNTILL WE ENCOUNTER A *ELNAME CARD OR A REAL EOFSC
)@@G@@.  ON ENTRY @H@@@] .          A 'TCFTYPE' HAS ALREADY BEEN EXECUTED AND SD
)@@G@@A PSUEDO-EOF IS WAITING @^@@@] .          OUTPUT.     @[@@@] .    @[@@@]SE
)@@G@@ .    @[@@@] .    @[@@@]$(0). @H@@@]SWITCH    RES       1               SF
)@@G@@  . FILE TYPE INDICATOR ADD OR DELETE     @G@@@]TYPE      EQUF      SWITSG
)@@G@@CH,,H1        . SAVE AREA FOR TCFTYPE STATUS    @H@@@]FILE      EQUF    SH
)@@G@@  SWITCH,,H2        . SAVE AREA FOR ADD OR DELETE INDICATOR @[@@@] .    SI
)@@G@@@[@@@] .    @[@@@] .    @[@@@]$(1). @]@@@]BLOCKOUT.   @B@@@] BEGIN SUBROSJ
)@@G@@UTINE                     .   @E@@@]   S         A0,TYPE                SK
)@@G@@  . SAVE TCFTYPE STATUS @F@@@]   L,U       A0,MASTERPKT             . NESL
)@@G@@ED TO KNOW TYPE OF FILE @E@@@]   L         A0,AFPADR                . FOSM
)@@G@@UND IN FIELD PKT  @E@@@]   L         A0,FIELD                 . PICK UP SN
)@@G@@INDICATOR   @E@@@]   S         A0,FILE                  . STORE FOR REFESO
)@@G@@RENCE @H@@@]   L         A0,TYPE                  . RESTORE TCFTYPE STATSP
)@@G@@US FOR LOOP TEST  @E@@@]   REPEAT WHILE A0,IS,NONZ             . ONLY FOSQ
)@@G@@R (-) CARDS @F@@@]      L         A0,FILE               . GET FILE TYPE SR
)@@G@@INDICATOR   @F@@@]      L         A1,N                  . ALSO VALUES TOSS
)@@G@@ BUILD CARD @B@@@]      L         A2,M                  .   @E@@@]      ST
)@@G@@IF A0,EQ,1,,U THEN              . THIS IS A ADD FILE  @F@@@]         L,USU
)@@G@@       A0,'&'             . MUST NULL OUT PREFIX BUFF @F@@@]         S,SSV
)@@G@@1      A0,AUXBUF          . THIS IS OUTPUT ON ADD FILE@E@@@]         S  SW
)@@G@@       A1,N2              . WHERE IT WILL LOOK  @B@@@]         S        SX
)@@G@@ A2,M2              .   @E@@@]         L         A0,TYPE            . GESY
)@@G@@T TCFTYPE STATUS  @G@@@]         IF A0,EQ,1,,U THEN           . COULD BESZ
)@@G@@ REG OR CHG CORR IMAGE  @F@@@]            L,U       A0,3            . THTA
)@@G@@IS IS REG CORR IMAGE    @B@@@]         ELSE                         .   TB
)@@G@@@F@@@]            L,U       A0,5            . THIS IS CHG CORR IMAGE    TC
)@@G@@@B@@@]         ENDIF                        .   @B@@@]      ELSE        TD
)@@G@@                    .   @F@@@]         S         A1,N1              . THTE
)@@G@@IS IS A DELETE FILE     @G@@@]         S         A2,M1              . DITF
)@@G@@FFERENT OUTPUT CARD FORMAT    @G@@@]         L,U       A0,TYPEBUFF      TG
)@@G@@  . MUST MOVE PREFIX IMAGE TO OUTPUT@E@@@]         L,U       A1,AUXBUF  TH
)@@G@@        . DESTINATION AREA    @F@@@]         L         A2,LENGTH        TI
)@@G@@  . CHAR LENGTH OF STRING     @F@@@]         A,U       A2,1             TJ
)@@G@@  . ADD ONE FOR STOP CHAR     @G@@@]         SZ        A3               TK
)@@G@@  . DEFINITELY A FIELDATA IMAGE     @D@@@]         CALL      FDMOVE     TL
)@@G@@        . MOVE IMAGE    @F@@@]         L,U       A0,2               . DETM
)@@G@@FINED BY THIS PARAMETER @B@@@]      ENDIF                           .   TN
)@@G@@@E@@@]      CALL      CARDOUT               . OUTPUT (-) CARD     @G@@@]TO
)@@G@@      CALL      TCFOUT                . AND REST OF TEXT IN 'A' FILE    TP
)@@G@@@B@@@]   ENDREP                             .   @B@@@] ENDBEG           TQ
)@@G@@                    .   @[@@@]/.    @[@@@] .    @[@@@] .    @[@@@] .    TR
)@@G@@@]@@@] . CARDOUT -@G@@@] .         THIS ROUTINE IS RESPONSIBLE FOR PASSITS
)@@G@@NG (-) CARDS TO THE     @G@@@] .         OUTPUT STREAM IN THE APPROPRIATTT
)@@G@@E READJUSTED FORMAT.  IF THE  @G@@@] .         CARD IS FROM A DELETE FILTU
)@@G@@E THEN IT MUST REFLECT A DELETE, IF @G@@@] .         IT IS FROM A ADD FITV
)@@G@@LE THEN IT IS PASSED AS IT EXISTS.  THE   @G@@@] .         INPUT FLG IN TW
)@@G@@A0 DETERMINES THE TYPE OF CARD TO BE OUTPUT.    @^@@@] .            ON ETX
)@@G@@NTRY -@B@@@] .               A0 - 1 = -N1,M1/0,0/N2,M2@A@@@] .          TY
)@@G@@          2 = -N1,M1/0,0@A@@@] .                    3 = -N2,M2    @C@@@]TZ
)@@G@@ .                    4 = -N1,M1/0,0/N2,M2-     @A@@@] .                UA
)@@G@@    5 = -N2,M2-   @C@@@] .                    6 = -N1,M1-/0,0/N2,M2     UB
)@@G@@@C@@@] .                    7 = -N1,M1-/0,0/N2,M2-    @B@@@#.           UC
)@@G@@          8 = -N1,M1-/0,0     @[@@@] .    @[@@@] .    @[@@@] .    @[@@@]UD
)@@G@@$(0). @F@@@]N1        +         0                 . SEE DESCRIPTION ABOVUE
)@@G@@E     @B@@@]M1        +         0                 .   @B@@@]N2        + UF
)@@G@@        0                 .   @B@@@]M2        +         0               UG
)@@G@@  .   @D@@@]CARDBUF*  '&&&&&&'  . TEMP STORE FOR CURRENT ELNAMES  @B@@@]UH
)@@G@@          RES       AUXLENGTH-1       .   @[@@@] .    @[@@@] .    @[@@@]UI
)@@G@@ .    @[@@@]$(1). @]@@@]CARDOUT.    @B@@@] BEGIN SUBROUTINE             UJ
)@@G@@        .   @E@@@]   S         A0,A6                    . SAVE INPUT FLAUK
)@@G@@G     @G@@@]   L,U       X10,MASTERPKT            . EDIT$ PKT BASED ON MUL
)@@G@@ASTERPKT    @F@@@]   IF ZERO,IN,MONSTER THEN            . IS THIS ELEMENUM
)@@G@@T MODE?     @G@@@]      IF NONZ,IN,NOSTARTCF THEN       . WERE THERE ANYUN
)@@G@@ STAR CARDS FOUND?@F@@@]         CALL      STARCARD           . YES - MUUO
)@@G@@ST OUTPUT ONE     @F@@@]      ELSE                            . IF NOT JUP
)@@G@@UST ZAP BUFFER    @D@@@]         L,U       A1,' '             . GET BLANUQ
)@@G@@K     @E@@@]         S,S1      A1,CARDBUF         . SET BUFFER AS OUTPUTUR
)@@G@@@B@@@]      ENDIF                           .   @E@@@]   ELSE           US
)@@G@@                    . IN PROGRAM FILE MODE@G@@@]      CALL      STARCARDUT
)@@G@@              . ALWAYS TRY TO OUTPUT STAR CARD  @B@@@]   ENDIF          UU
)@@G@@                    .   @E@@@]   E$DIT     EDTPKT                   . OPUV
)@@G@@EN EDIT$ SEQUENCE @H@@@]   E$CHAR    CHAR,,S6                 . INSERT CUW
)@@G@@ORRECTION CHAR INTO STRING    @C@@@]   IF A6,NE,3,,U AND A6,NE,5,,U THENUX
)@@G@@  . N1 OR N2@E@@@]      E$DECV    N1                    . PUT N1 INTO STUY
)@@G@@RING  @E@@@]      IF NONZ,IN,M1 THEN              . MAY NOT NEED THIS   UZ
)@@G@@@F@@@]         E$CHAR    ','                . MUST SLUG IN SECOND NUMBERVA
)@@G@@@E@@@]         E$DECV    M1                 . PUT INTO STRING     @E@@@]VB
)@@G@@         IF A6,GT,5,,U THEN           . WAS IMAGE CHG CARD  @G@@@]      VC
)@@G@@      E$CHAR    '-'             . YES - INSERT INDICATOR CARACTER @B@@@]VD
)@@G@@         ENDIF                        .   @B@@@]      ENDIF             VE
)@@G@@              .   @E@@@]      E$FD1     ('/0,0  ')            . SET TO DVF
)@@G@@ELETE IMAGE @F@@@]      L         A0,A6                 . GET CARD TYPE VG
)@@G@@IN INDEX REG@D@@@]      CASENTRY A0                     . MAY BE A RESETVH
)@@G@@@F@@@]      CASE 1,4,6,7                    . THESE TYPES ARE CONTINUED VI
)@@G@@@E@@@]         E$CHAR    '/'                . SET IN DELIMITER    @B@@@]VJ
)@@G@@      ENDCASE                         .   @B@@@]   ENDIF                VK
)@@G@@              .   @E@ @]   IF A6,NE,2,,U THEN                 . MUST WE VL
)@@G@@INSERT N2   @E@@@    IF A6,NE,2,,U AND A6,NE,8,,U THEN  . MUST WE INSERTVM
)@@G@@ N2   @D@@@]      E$DECV    N2                    . N2 INTO STRING@G@@@]VN
)@@G@@      IF NONZ,IN,M2 THEN              . DON'T WANT TO IF DON'T HAVE TO  VO
)@@G@@@E@@@]         E$CHAR    ','                . COMMA SEPARATOR     @E@@@]VP
)@@G@@         E$DECV    M2                 . NOW SECOND NUMBER   @B@@@]      VQ
)@@G@@ENDIF                           .   @F@#@]      IF A6,GT,3,,U AND A6,NE,VR
)@@G@@6,,U THEN . GENERATE A CHG CARD     @B@@@#      L         A0,A6         VS
)@@G@@        .   @B@@@#      CASENTRY A0                      .  @^@@@#      VT
)@@G@@CASE      4,5,7   @F@@@]         E$CHAR    '-'                . '-' TO EVU
)@@G@@ND OF NUMBER FIELD@B@#@]      ENDIF                           .   @B@@@#VV
)@@G@@      ENDCASE                         .   @B@@@]   ENDIF                VW
)@@G@@              .   @G@@@]   E$SKIP    2                        . TWO SPACVX
)@@G@@ES BEFORE ELEMENT NAME  @D@@@]   E$MSG     CARDBUF                  . COVY
)@@G@@PY IT IN    @D@@@]   CALL      WORDS                    . OUTPUT IMAGE  VZ
)@@G@@@B@@@] ENDBEG                               .   @#@@@]          END     WA
)@@G@@___@@@         S         A1,N1              . THIS IS A DELETE FILE     WB
)@@G@@@G@@@]         S         A2,M1              . DI*[S@@@*SDFF*@[@@@@ .    WC
)@@G@@@[@@@@ .    @B@@@@          AXR$                        .   @B@@@@      WD
)@@G@@    STRUC$                      .   @B@@@@          DOWNDEF             WE
)@@G@@        .   @B@@@@          ED$PROCS                    .   @B@@@@      WF
)@@G@@    RESUME                      .   @[@@@@ .    @[@@@@ .    @[@@@@ .    WG
)@@G@@@[@@@@ .    @[@@@@ .    @]@@@@ . CHECK -  @G@@@@ .       THIS ROUTINE ISWH
)@@G@@ RESPONSIBLE FOR CHECKING ANY CURRENT OPTIONS   @F@@@@ .       AND THE SWI
)@@G@@TATUS OF BOTH RECORDS THAT HAVE BEEN FETCHED AND@G@@@@ .       INITIATINWJ
)@@G@@G ANY IMPLIED ACTIONS.  THE OCCURANCE OF A WINDOW     @F@@@@ .       SPEWK
)@@G@@C, A 'B' OPTION, OR MIXED MODE RECORDS, ALL IMPLY SOME@F@@@@ .       TYPWL
)@@G@@E OF RECORD MANIPULATION.  THE BASIC CHECK SEQUENCE   @F@@@@ .       PLAWM
)@@G@@CES, AT MOST, EIGHT CYCLES OF OVERHEAD ON THE PREVIOUS@F@@@@ .       COMWN
)@@G@@PARE LOGIC FOR ALL PREVIOS APPLICATIONS.  IN ADDITION @F@@@@ .       IT WO
)@@G@@ALLOWS THE DOWNDATE OF MIXED MODE FILES IN A VIRTUALLY@F@@@@ .       TRAWP
)@@G@@NSPARENT MANNER, AS WELL AS THE INCLUDSION OF THE 'B' @F@@@@ .       ANDWQ
)@@G@@ WINDOW OPTIONS.  EVERYTHING IS HANDLED ON A RECORD BY@G@@@@ .       RECWR
)@@G@@ORD BASIS, IF TRANSLATION IS IMPLIED, IT IS DONE DYNAMICALLY@H@@@@ .    WS
)@@G@@   FROM ASCII TO FIELDATA IN ACCORDENCE WITH ANY SPECIFIED OPTIONS.     WT
)@@G@@@[@@@@ .    @^@@@@ .       ON ENTRY -     @A@@@@ .          A1 = A REC LWU
)@@G@@OCATION     @A@@@@ .          A2 = B REC LOCATION     @B@@@@ .          WV
)@@G@@A3 = NUMBER OF WORDS IN A REC @B@@@@ .          A4 = NUMBER OF WORDS IN WW
)@@G@@B REC @B@@@@ .          A13 = A REC # AND MODE FLAG   @B@@@@ .          WX
)@@G@@A14 = B REC # AND MODE FLAG   @[@@@@ .    @#@@@@ .       ON EXIT -@F@@@@WY
)@@G@@ .          THE MEANING OF INDICATED REGS AT ENTRY REMAIN THE SAME@F@@@@WZ
)@@G@@ .          THOUGH THE LOCATION AND PHYSICAL NATURE OF THE RECORDS@ @@@@XA
)@@G@@ .          MAY HAVE CHANGED. @[@@@@ .    @[@@@@ .    @E@@@@ . THE FOLLOXB
)@@G@@WING PARAMETER IS FOR OPTIMIZATION.  IN THEORY  @E@@@@ .    AN OUTPUT CHXC
)@@G@@ARACTER COUNT LESS THAN THIS WILL MAKE    @D@@@@ .    THE CHARACTER BY CXD
)@@G@@HARACTER OUTPUT ROUTINES MORE @D@@@@ .    EFFICIENT THAN THE BLOCK TRANSXE
)@@G@@FER AND SUBSEQUENT@ @@@@ .    BOUNDARY ALLIGNMENT.    @[@@@@ .    @E@@@@XF
)@@G@@MAX       EQU       8                 . AT LEAST WE HOPE    @[@@@@ .    XG
)@@G@@@E@@@@AIPADR    EQUF      2,X1,H1           . AREC ISDFI PKT ADDR @E@@@@XH
)@@G@@BIPADR    EQUF      2,X1,H2           . BREC ISDFI PKT ADDR @E@@@@IALOC XI
)@@G@@    EQUF      11,A0,H2          . IMAGE AREA ADDR     @E@@@@COL1      EQXJ
)@@G@@UF      WINDOW,,H1        . 1ST COLUMN SPEC     @E@@@@COLN      EQUF    XK
)@@G@@  WINDOW,,H2        . LAST COLUMN SPEC    @[@@@@ .    @[@@@@$(0). @B@@@@XL
)@@G@@ALOC      +         0                 .   @F@@@@BLOC      +         0   XM
)@@G@@              . SAVE AREAS FOR INPUT INFO @B@@@@AWORDS    +         0   XN
)@@G@@              .   @B@@@@BWORDS    +         0                 .   @[@@@@XO
)@@G@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(1). @]@@@@CHECK*.     @B@@@@ BEGINXP
)@@G@@ SUBROUTINE                     .   @F@@@@   L         A5,A13           XQ
)@@G@@        . GET AREC # AND MODE FLAG  @F@@@@   XOR       A5,A14           XR
)@@G@@        . COMPARE A AND B MODE FLAGS@E@@@@   LDSL      A5,17            XS
)@@G@@        . MAKE RESULT OBVIOUS @D@@@@   L         A0,SQUEEZ              XT
)@@G@@  . GET 'B' OPTION@F@@@@   A         A0,WINDOW                . INCLUDE XU
)@@G@@WINDOW SPEC AS FLG@F@@@@   IF A0,IS,NONZ OR A6,IS,NEG THEN    . SEE IF AXV
)@@G@@NY IMPLIED ACTION @F@@@@      DS        A1,ALOC               . MUST NEEXW
)@@G@@D TO DO SOMETHING @E@@@@      DS        A3,AWORDS             . SAVE INPXX
)@@G@@UT VALUES   @E@@@@      IF NONZ,IN,AWORDS THEN          . MAY BE NULL REXY
)@@G@@C     @G@@@@         L         A0,AIPADR          . NEED IMAGE AREA ADDRXZ
)@@G@@ FOR AREC   @C@@@@         L         A0,IALOC           . GET IT  @H@@@@YA
)@@G@@         L         A1,ALOC            . JUST IN CASE ACTION IMPLIED ON AYB
)@@G@@ REC  @E@@@@         L         A2,A3              . # OF WORDS OF A REC YC
)@@G@@@F@@@@         L         A3,A13             . NEED MODE FLG OF A REC    YD
)@@G@@@D@@@@         SSL       A3,18              . ISOLATE IT    @E@@@@      YE
)@@G@@   IF A6,IS,NEG AND A3,IS,NONZ THEN . ANY TRANSLATION?@F@@@@            YF
)@@G@@LN        A3,A3           . YES - SET FLG FOR MOVEREC @B@@@@         ENDYG
)@@G@@IF                        .   @F@@@@         CALL      MOVEREC          YH
)@@G@@  . DO WHAT HAS TO BE DONE    @F@@@@         S         A1,ALOC          YI
)@@G@@  . MAYBE NEW AREC LOCATION   @D@@@@         S         A2,AWORDS        YJ
)@@G@@  . AND LENGTH    @B@@@@      ENDIF                           .   @D@@@@YK
)@@G@@      IF NONZ,IN,BWORDS THEN          . COULD BE NULL @D@@@@         L  YL
)@@G@@       A0,BIPADR          . NOW TO B REC  @E@@@@         L         A0,IAYM
)@@G@@LOC           . GET BUFFER ADDR     @E@@@@         L         A1,BLOC    YN
)@@G@@        . CURRENT BREC ADDR   @D@@@@         L         A2,BWORDS        YO
)@@G@@  . AND LENGTH    @F@@@@         L         A3,A14             . NEED CHAYP
)@@G@@RACTER MODE OF REC@C@@@@         SSL       A3,18              . ISOLATE YQ
)@@G@@@E@@@@         IF A6,IS,NEG AND A3,IS,NONZ THEN . DO WE TRANSLATE?@D@@@@YR
)@@G@@            LN        A3,A3           . YES - SET FLG @B@@@@         ENDYS
)@@G@@IF                        .   @F@@@@         CALL      MOVEREC          YT
)@@G@@  . DO WHAT HAS TO BE DONE    @E@@@@         S         A1,BLOC          YU
)@@G@@  . RESTORE BREC ADDR   @F@@@@         S         A2,BWORDS          . ANYV
)@@G@@D WORD COUNT OF REC     @B@@@@      ENDIF                           .   YW
)@@G@@@E@@@@      DL        A1,ALOC               . RESTORE LOCATIONS   @D@@@@YX
)@@G@@      DL        A3,AWORDS             . AND LENGTHS   @B@@@@   ENDIF    YY
)@@G@@                          .   @B@@@@ ENDBEG                             YZ
)@@G@@  .   @[@@@@/.    @[@@@@ .    @[@@@@ .    @[@@@@ .    @]@@@@ . MOVEREC -ZA
)@@G@@@E@@@@ .       THIS ROUTINE CONTINUES THE SHAKE DOWN SEQUENCE AND @E@@@@ZB
)@@G@@ .       INITIATES ANY ACTION THAT MUST BE DONE ON A SINGLE @^@@@@ .    ZC
)@@G@@   RECORD BASIS.  @[@@@@ .    @^@@@@ .       ON ENTRY -     @A@@@@ .    ZD
)@@G@@      A0 = DESTINATION ADDRESS@A@@@@ .          A1 = CURRENT RECORD LOC ZE
)@@G@@@B@@@@ .          A2 = NUMBER OF WORDS IN RECORD@A@@@@ .          A3 = TZF
)@@G@@RANSLATE FLAG     @[@@@@ .    @#@@@@ .       ON EXIT -@A@@@@ .          ZG
)@@G@@A1 = ADDRESS OF REC     @B@@@@ .          A2 = NUMBER OF WORDS IN REC   ZH
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(0). @E@@@@MFLAG     +       ZI
)@@G@@  0                 . RECORD MODE TYPE    @E@@@@MCOUNT    +         0   ZJ
)@@G@@              . SAVE FOR CHAR COUNT @F@@@@MTOLOC    +         0         ZK
)@@G@@        . TEMP FOR DESTIONATION ADDR@G@@@@MWORDS    +         0         ZL
)@@G@@        . TEMP FOR REG LENGTH IN WORDS    @F@@@@MFMLOC    +         0   ZM
)@@G@@              . TEMP FOR ORIG REC LOC     @E@@@@MOFFSET   +         0   ZN
)@@G@@              . CHARACTER OFFSET    @D@@@@MOFFCOUNT +         0         ZO
)@@G@@        . WORD OFFSET   @F@@@@MTEMP1    +         0                 . ANZP
)@@G@@YTHING COULD END UP HERE@C@@@@MTEMP2    +         0                 . HEZQ
)@@G@@RE TOO@D@@@@MTEMP3    +         0                 . HERE THREE    @[@@@@ZR
)@@G@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(1). @]@@@@MOVEREC.    @B@@@@ BEGINZS
)@@G@@ SUBROUTINE                     .   @E@@@@   L         A4,SQUEEZ        ZT
)@@G@@        . CHECK OPTIONS AGAIN @E@@@@   A         A4,WINDOW              ZU
)@@G@@  . ONE OR THE OTHER    @F@@@@   IF A4,IS,NONZ OR A3,IS,NEG THEN    . DOZV
)@@G@@ WE MESS WITH THIS REC? @F@@@@      S         A0,MTOLOC             . YEZW
)@@G@@S - SAVE INPUT VALUES   @E@@@@      S         A1,MFMLOC             . CUZX
)@@G@@RRENT REC LOC     @D@@@@      S         A2,MWORDS             . AND LENGZY
)@@G@@TH    @E@@@@      S         A3,MFLAG              . MODE IN DESGUISE    ZZ
)@@G@@@E@@@@      LM        A4,A3                 . GET ABSOLUTE VALUE  @E@@@@AA
)@@G@@      IF NONZ,IN,WINDOW THEN          . MUST BE WINDOW SPEC @F@@@@      AB
)@@G@@   IF A4,IS,ZERO THEN           . A4 IS THE MODE OF REC     @E@@@@      AC
)@@G@@      L,U       A0,6            . MODE IS FIELDATA    @B@@@@         ELSAD
)@@G@@E                         .   @D@@@@            L,U       A0,4          AE
)@@G@@  . MODE IS ASCII @B@@@@         ENDIF                        .   @ @@@@AF
)@@G@@         CALL      CALC$CHARS @B@@@@      ELSE                          AG
)@@G@@  .   @H@@@@         SZ        MOFFSET            . NO CALL TO CALC$CHARAH
)@@G@@S - MUST INIT     @E@@@@         L         A5,A2              . A2 IS WOAI
)@@G@@RD COUNT    @D@@@@         IF A4,IS,ZERO THEN           . MODE CHECK    AJ
)@@G@@@F@@@@            MSI,U     A5,6            . GET # OF FIELDATA CHARS   AK
)@@G@@@B@@@@         ELSE                         .   @E@@@@            MSI,U AL
)@@G@@    A5,4            . GET # ASCII CHARS   @B@@@@         ENDIF          AM
)@@G@@              .   @H@@@@         S         A5,MCOUNT          . SAVE RESAN
)@@G@@ULT - # CHARS OF INPUT REC    @B@@@@      ENDIF                         AO
)@@G@@  .   @D@@@@      L         A0,MFMLOC             . RECORD ORIGIN @D@@@@AP
)@@G@@      L         A1,MTOLOC             . DESTINATION   @F@@@@      IF  A4AQ
)@@G@@,IS,ZERO  THEN            . OPEN PROPER CHAR ROUTINES @E@@@@         CALAR
)@@G@@L,X9   FDGET              . INPUT IS FIELDATA   @F@@@@         E$OFFSET AS
)@@G@@ BY,MOFFSET         . BUMP BY WORD CHAR OFFSET  @E@@@@         CALL,X10 AT
)@@G@@ FDPUT              . FIELDATA OUTPUT     @B@@@@      ELSE              AU
)@@G@@              .   @D@@@@         CALL,X9   ASGET              . INPUT ISAV
)@@G@@ ASCII@C@@@@         E$OFFSET  BY,MOFFSET         . OFFSET  @F@@@@      AW
)@@G@@   IF POS,IN,MFLAG THEN         . IS THERE TRANSLATION?     @E@@@@      AX
)@@G@@      CALL,X10  ASPUT           . NO - ASCII OUTPUT   @B@@@@         ELSAY
)@@G@@E                         .   @G@@@@            CALL,X10  FDPUT         AZ
)@@G@@  . YES - ALWAYS ASCII--FIELDATA    @B@@@@         ENDIF                BA
)@@G@@        .   @B@@@@      ENDIF                           .   @F@@@@      BB
)@@G@@IF ZERO,IN,SQUEEZ THEN          . DO WE SQUEEZ OUT BLANKS?  @E@@@@      BC
)@@G@@   ON        MAX=0              . USE THE EASY CODE   @G@@@@         IF BD
)@@G@@ A6,IS,NEG   THEN         . NO - HOW 'BOUT TRANSLATION?     @F@@@@      BE
)@@G@@      CALL      TRANSREC        . YES - MOVE WITH TRANSLATE @B@@@@      BF
)@@G@@   ELSE                         .   @G@@@@            CALL      BTREC   BG
)@@G@@        . MOVE IT AS FAST AS POSSIBLE     @B@@@@         ENDIF          BH
)@@G@@              .   @B@@@@         OFF       MAX=0              .   @H@@@@BI
)@@G@@         ON        MAX>0              . THIS MAY BE GROSS BUT MORE EFFICBJ
)@@G@@IENT  @H@@@@         IF A6,IS,POS AND A5,GE,MAX,,U THEN . A6=POS->SAME MBK
)@@G@@ODE, A5=CHAR COUNT@F@@@@            CALL      BTREC           . ALWAYS BBL
)@@G@@LOCK TRANSFER     @B@@@@         ELSE                         .   @G@@@@BM
)@@G@@            IF NEG,IN,MFLAG OR A5,LT,MAX,,U THEN . MFLAG=MODE THIS REC  BN
)@@G@@@F@@@@               IF NONZ,IN,WINDOW THEN . ONLY OFFSET ON WINDOW     BO
)@@G@@@F@@@@                  L         A7,COL1   . GET STARTING COL NUMBER   BP
)@@G@@@G@@@@                  DSL       A7,36     . NEED TO KNOW TRANSLATED OFBQ
)@@G@@FSET  @G@@@@                  DI        A7,E$OUTCNT  . DIVID BY OUTPUT CBR
)@@G@@HAR CNT/WRD @C@@@@                  REPEAT JGD,A8       . LOOP    @D@@@@BS
)@@G@@                     E$BLK            . TO BLANK FILL @B@@@@            BT
)@@G@@      ENDREP              .   @B@@@@               ENDIF                BU
)@@G@@  .   @G@@@@               CALL      TRANSREC     . EITHER TRANSLATION OBV
)@@G@@R SHORT REC @B@@@@            ELSE                      .   @F@@@@      BW
)@@G@@         CALL      BTREC        . NO TRANS AND > THAN MAX   @B@@@@      BX
)@@G@@      ENDIF                     .   @B@@@@         ENDIF                BY
)@@G@@        .   @B@@@@         OFF       MAX>0              .   @B@@@@      BZ
)@@G@@ELSE                            .   @H@@@@         CALL      SQREC      CA
)@@G@@        . THIS COVERS ALL OTHER COMBINATIONS    @B@@@@      ENDIF       CB
)@@G@@                    .   @B@@@@   ENDIF                              .   CC
)@@G@@@B@@@@ ENDBEG                               .   @[@@@@/.    @[@@@@ .    CD
)@@G@@@[@@@@ .    @[@@@@ .    @#@@@@ . CALC$CHARS -   @F@@@@ .       THIS ROUTCE
)@@G@@INE IS CALL IN THE EVENT OF A WINDOW SPEC.  ITS @F@@@@ .       JOB IS TOCF
)@@G@@ CALCULATE THE PROPER POINTERS AND OFFSETS AS   @C@@@@ .       REQUIRED CG
)@@G@@BY THE WINDOW SPECIFICATION.  @C@@@@ .       ON ENTRY - A0 = # OF CHARS CH
)@@G@@PER WORD    @[@@@@ .    @E@@@@ .       UPDATES - MFMLOC,MOFFSET,MOFFCOUNCI
)@@G@@T,MWORDS,MCOUNT   @[@@@@ .    @A@@@@ .       ON EXIT - MCOUNT IN A5     CJ
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(1). @]@@@@CALC$CHARS. @B@@@@CK
)@@G@@ BEGIN SUBROUTINE                     .   @F@@@@   L         A1,COL1    CL
)@@G@@              . GET FIRST COLUMN SPEC     @G@@@@   DSL       A1,36      CM
)@@G@@              . NEED TO KNOW CHARACTER OFFSET   @G@@@@   DI        A1,A0CN
)@@G@@                    . A0 CONTAINS # OF CHARS/WORD     @E@@@@   S        CO
)@@G@@ A1,A5                    . USE A5 AS TEMPORARY @F@@@@   A         A1,MFCP
)@@G@@MLOC                . INC TO FIRST WORD OF REC  @C@@@@   S         A1,MFCQ
)@@G@@MLOC                . UPDATE  @G@@@@   S         A2,MOFFSET             CR
)@@G@@  . REMAINDER IS CHARACTER OFFSET   @F@@@@   L         A1,MWORDS        CS
)@@G@@        . GET ORIG # OF WRDS IN REC @E@@@@   AN        A1,A5            CT
)@@G@@        . A5 IS WORD OFFSET   @G@@@@   MSI       A1,A0                  CU
)@@G@@  . FIND TOTAL CHARACTERS NOW IN REC@F@@@@   AN        A1,MOFFSET       CV
)@@G@@        . NOT REALLY IN 'WINDOW'    @F@@@@   IF A1,IS,NEG THEN          CW
)@@G@@        . DON'T WANT NEG NUMBERS    @E@@@@      L,U       A1,0          CX
)@@G@@        . ZERO GOOD ENOUGH    @B@@@@   ENDIF                            CY
)@@G@@  .   @E@@@@   L         A5,COLN                  . GET LAST COL SPEC   CZ
)@@G@@@F@@@@   AN        A5,COL1                  . GET # OF WINDOWN CHARS    DA
)@@G@@@D@@@@   IF A5,GT,A1 THEN                   . WANT MINIMUM  @D@@@@      DB
)@@G@@L         A5,A1                 . A1 IS LESS    @B@@@@   ELSE           DC
)@@G@@                    .   @D@@@@      L         A1,A5                 . A5DD
)@@G@@ IS LESS    @B@@@@   ENDIF                              .   @F@@@@   S  DE
)@@G@@       A5,MCOUNT                . THE # OF CHARS TO LOOK AT @D@@@@   IF DF
)@@G@@A1,IS,NONZ THEN                 . JUST IN CASE  @F@@@@      A         A1DG
)@@G@@,MOFFSET            . NEED # OF WRDS TO FETCH   @F@@@@      DSL       A1DH
)@@G@@,36                 . APPLY UPPER SHELF FUNCTION@F@@@@      DI        A1DI
)@@G@@,A0                 . A0 IS STILL CHARS PER WORD@E@@@@      IF A2,IS,NONDJ
)@@G@@Z THEN              . IS THERE REMAINDER? @D@@@@         A,U       A1,1 DK
)@@G@@              . ONE MORE WORD @D@@@@         LN        A2,A2            DL
)@@G@@  . COMPLIMENT    @F@@@@         A         A2,A0              . OFFSET ADM
)@@G@@T END OF IMAGE    @B@@@@      ENDIF                           .   @F@@@@DN
)@@G@@      S         A2,MOFFCOUNT          . GETS END-OF-IMAGE OFFSET  @B@@@@DO
)@@G@@   ELSE                               .   @D@@@@      SZ        MOFFCOUNDP
)@@G@@T             . NO NEGATIVES  @B@@@@   ENDIF                            DQ
)@@G@@  .   @E@@@@   S         A1,MWORDS                . NEW IMAGE WORD COUNTDR
)@@G@@@B@@@@ ENDBEG                               .   @[@@@@/.    @[@@@@ .    DS
)@@G@@@[@@@@ .    @[@@@@ .    @]@@@@ . BTREC -  @E@@@@ .     THIS ROUTINE IS UDT
)@@G@@SED WHEN THERE IS ONLY A WINDOW SPEC@E@@@@ .     AND NO TRANSLATE IS IMPDU
)@@G@@LIED.  IT BLOCK TRANSFERS THE @D@@@@ .     IMAGE AND FUDGES THE BOUNDRIEDV
)@@G@@S ACCORDING TO THE@ @@@@ .     CALCULATED OFFSETS.    @[@@@@ .    @[@@@@DW
)@@G@@ .    @[@@@@ .    @[@@@@$(1). @[@@@@BTREC.@B@@@@ BEGIN SUBROUTINE       DX
)@@G@@              .   @F@@@@   IF NONZ,IN,MWORDS THEN             . MAY BE WDY
)@@G@@ASTING OUR TIME   @E@@@@      E$WORDS   BY,MWORDS             . TRANSFERDZ
)@@G@@ REC IMAGE  @F@@@@      S         A1,MTEMP2             . SAVE LOC OF LAEA
)@@G@@ST WRD + 1  @F@@@@      LXM       A1,MTOLOC             . RESET TO STARTEB
)@@G@@ OF BUFFER  @E@@@@      IF NONZ,IN,MOFFSET THEN         . DON'T WASTE TIEC
)@@G@@ME    @F@@@@         L         A7,E$INCNT         . GET # OF CHARS PER WED
)@@G@@ORD   @G@@@@         AN        A7,MOFFSET         . WANT # OF REAL CHARSEE
)@@G@@ IN 1ST WORD@D@@@@         REPEAT JGD,A7                . FETCH AND FILLEF
)@@G@@@F@@@@            E$GET                     . FETCH FIRST CHAR OF IMAGE EG
)@@G@@@G@@@@            E$SAVE                    . INTO STRING BUT DON'T SHIFEH
)@@G@@T OUT @F@@@@            IF A7,IS,NONZ THEN        . WANT IT RIGHT JUSTIFEI
)@@G@@IED   @E@@@@               E$OUT                  . OK TO SHIFT SO FAR  EJ
)@@G@@@B@@@@            ENDIF                     .   @B@@@@         ATEND    EK
)@@G@@                    .   @B@@@@            E$STORE                   .   EL
)@@G@@@B@@@@         ENDREP                       .   @B@@@@      ENDIF       EM
)@@G@@                    .   @F@@@@      IF NONZ,IN,MOFFCOUNT THEN       . DOEN
)@@G@@N'T WASTE TIME ON ZERO  @F@@@@         L         A1,MOFFCOUNT       . GEEO
)@@G@@T END-OF-IMAGE OFFSET   @E@@@@         MSI       A1,E$INBITS        . # EP
)@@G@@OF NO-COUNT BITS  @E@@@@         L         A2,MTEMP2          . LOC OF LEQ
)@@G@@AST WORD + 1@C@@@@         AN,U      A2,1               . BACKUP  @D@@@@ER
)@@G@@         L         A3,E$INBLKWRD      . BLANK FILL    @D@@@@         L  ES
)@@G@@       A4,0,A2            . GET LAST WORD @F@@@@         DSL       A3,0,ET
)@@G@@A1            . SHIFT OUT UNWANTED BITS   @D@@@@         LN        A1,A1EU
)@@G@@              . COMPLIMENT    @D@@@@         A,U       A1,36            EV
)@@G@@  . WANT 36-A1    @E@@@@         SSC       A4,0,A1            . PUT ORDEEW
)@@G@@R RIGHT     @G@@@@         S         A4,0,A2            . RESTORE LAST WEX
)@@G@@ORD OF BUFFER     @B@@@@      ENDIF                           .   @B@@@@EY
)@@G@@   ENDIF                              .   @E@@@@   L         A1,MTOLOC  EZ
)@@G@@              . GET NEW BUFFER ADDR @E@@@@   L         A2,MWORDS        FA
)@@G@@        . AND IMAGE LENGTH    @B@@@@ ENDBEG                             FB
)@@G@@  .   @[@@@@/.    @[@@@@ .    @[@@@@ .    @[@@@@ .    @#@@@@ . TRANSREC FC
)@@G@@-     @F@@@@ .     THIS ROUTINE IS USED WHEN ONLY TRANSLATION IS IMPLIEDFD
)@@G@@.     @F@@@@ .     CHARACTER ROUTINES HAVE ALREADY BEEN OPENED.  IT CAN FE
)@@G@@ALSO  @E@@@@ .     BE USED TO TRANSFER A RECORD WITHOUT TRANSLATION WHENFF
)@@G@@@F@@@@ .     THE CHARACTER LENGTH OF THAT RECORD IS LESS THAN 'MAX'     FG
)@@G@@@G@@@@ .     (ASSUMING OPTIMIZATION CODE IS CONFIGURED) INDICATION USE OFH
)@@G@@F     @G@@@@ .     OF THIS ROUTINE TO BE MORE EFFICIENT THAN THE BTREC RFI
)@@G@@OUTINE.     @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(1). @]@@@@TRANSRFJ
)@@G@@EC.   @B@@@@ BEGIN SUBROUTINE                     .   @F@@@@   REPEAT JGFK
)@@G@@D,A5                      . A5 IS CHAR COUNT IN IMAGE @E@@@@      E$GET FL
)@@G@@                          . FETCH CHARACTER     @F@@@@      IF  NEG,IN,MFM
)@@G@@FLAG                . MAY NOT NEED TRANSLATION  @D@@@@         E$ASFDTRAFN
)@@G@@NS                   . TRANSLATE    @B@@@@      ENDIF                   FO
)@@G@@        .   @C@@@@      E$PUT                           . OUTPUT  @B@@@@FP
)@@G@@   ATEND                              .   @G@@@@      E$CLOSE           FQ
)@@G@@              . ZERO FILL AND OUTPUT FINAL WORD @B@@@@   ENDREP         FR
)@@G@@                    .   @D@@@@   LXI,U     A1,0                     . REFS
)@@G@@MOVE INC    @E@@@@   ANU,H2    A1,MTOLOC                . NEW IMAGE LENGFT
)@@G@@TH    @E@@@@   L         A1,MTOLOC                . NEW IMAGE LOCATION  FU
)@@G@@@B@@@@ ENDBEG                               .   @[@@@@/.    @[@@@@ .    FV
)@@G@@@[@@@@ .    @[@@@@ .    @]@@@@ . SQREC -  @F@@@@ .     GENERAL ROUTINE FFW
)@@G@@OR USE WHEN SQUEEZ SPECIFIED. TRANSFERS   @D@@@@ .     CHARACTER BY CHARFX
)@@G@@ACTER CHECKING FOR BLANKS.    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@FY
)@@G@@$(0). @F@@@@QUOTE     +         0                 . SAVE FOR Q-OPT QUOTEFZ
)@@G@@ CHAR @G@@@@TOGGLE    +         0                 . SWITCH FOR QUOTE STRGA
)@@G@@ING PROCESS @[@@@@ .    @[@@@@ .    @[@@@@$(1). @[@@@@SQREC.@B@@@@ BEGINGB
)@@G@@ SUBROUTINE                     .   @[@@@@   .  @B@@@@   . SET UP FOR POGC
)@@G@@SSIBLE Q-OPTION SQUEEZ. @[@@@@   .  @E@@@@   L         A7,INFOBITS      GD
)@@G@@        . GET INPUT OPTIONS   @E@@@@   IF A7,ODDP,OPT('Q') THEN         GE
)@@G@@  . DON'T WASTE TIME    @F@@@@      L,S6      A3,INQUOTE            . GEGF
)@@G@@T PROVIDED QUOTE CHAR   @H@@@@      L         A8,E$OUTBLK           . INGG
)@@G@@QUOTE IS FD - SEE WHAT OUTBLK IS    @E@@@@      IF A8,EQ,040,,U THEN    GH
)@@G@@        . OUTPUT IS ASCII?    @F@@@@         E$FDASTRANS                GI
)@@G@@   . TRANSLATE QUOTE CHAR     @B@@@@      ENDIF                         GJ
)@@G@@  .   @E@@@@      S         A3,QUOTE              . SAVE FOR LOCAL USE  GK
)@@G@@@B@@@@   ENDIF                              .   @[@@@@   .  @B@@@@   . NGL
)@@G@@OW COMPRESS OUT ONLY MULTIPLE BLANKS@[@@@@   .  @E@@@@   REPEAT JGD,A5  GM
)@@G@@                    . A5 IS CHARS IN IMAGE@E@@@@      E$GET             GN
)@@G@@              . FETCH CHARACTER     @F@@@@      IF NEG,IN,MFLAG THEN    GO
)@@G@@        . IS TRANSLATION IMPLIED?   @E@@@@         E$ASFDTRANS          GP
)@@G@@         . YES - TRANSLATE    @B@@@@      ENDIF                         GQ
)@@G@@  .   @E@@@@      E$PUT                           . OUTPUT CHARACTER    GR
)@@G@@@E@@@@      IF A3,EQ,E$OUTBLK THEN          . DID WE HAVE A BLANK @F@@@@GS
)@@G@@         E$LOOK                       . YES LOOK AHEAD FOR OTHERS @E@@@@GT
)@@G@@         REPEAT WHILE A3,EQ,E$INBLK JGD,A5 . BYPASS REST    @C@@@@      GU
)@@G@@      E$NEXT                    . SKIP    @E@@@@            E$LOOK      GV
)@@G@@              . LOOK AT NEXT CHAR   @B@@@@         ENDREP               GW
)@@G@@        .   @D@@@@      ELSE                            . SEE IF Q-OPT  GX
)@@G@@@G@@@@         IF A7,ODDP,OPT('Q') AND A3,EQ,QUOTE THEN . CONSIDER BLKS GY
)@@G@@IN ''?@F@@@@            S         X11,TOGGLE      . GOT A QUOTE - SET TOGZ
)@@G@@GGLE  @F@@@@            REPEAT WHILE A3,EQ,QUOTE JGD,A5 . PASS STRING INHA
)@@G@@TACT  @D@@@@               E$GET                  . GET NEXT CHAR @E@@@@HB
)@@G@@               IF NEG,IN,MFLAG THEN   . TEST FOR TRANSLATE  @F@@@@      HC
)@@G@@            E$ASFDTRANS          . TRANSLATE ASCII TO FD    @B@@@@      HD
)@@G@@         ENDIF                  .   @D@@@@               E$PUT          HE
)@@G@@        . OUTPU CHAR    @D@@@@               IF A3,EQ,QUOTE THEN    . WAHF
)@@G@@S IT A QUOTE@E@@@@                  IF ZERO,IN,TOGGLE THEN . REVERSE TOGHG
)@@G@@GLE   @D@@@@                     S         X11,TOGGLE  . SET NONZ @B@@@@HH
)@@G@@                  ELSE                .   @C@@@@                     SZ HI
)@@G@@       TOGGLE  . RESET  @B@@@@                  ENDIF               .   HJ
)@@G@@@B@@@@               ENDIF                  .   @F@@@@            ESCAPEHK
)@@G@@ WHEN ZERO,IN,TOGGLE . ALWAYS FINISH ON RESET   @B@@@@            OTHERWHL
)@@G@@ISE                 .   @E@@@@               E$LOOK                 . PEHM
)@@G@@EK AT NEXT CHAR   @F@@@@               IF NEG,IN,MFLAG THEN   . CHECK FOHN
)@@G@@R TRANSLATION     @D@@@@                  E$ASFDTRANS          . ASCII -HO
)@@G@@ FD   @B@@@@               ENDIF                  .   @F@@@@            HP
)@@G@@   REPEAT WHILE A3,NE,QUOTE JGD,A5 . SEARCH FOR QUOTE @D@@@@            HQ
)@@G@@      E$PUT               . OUTPUT CHAR   @D@@@@                  E$NEXTHR
)@@G@@              . SKIP TO NEXT  @E@@@@                  E$LOOK            HS
)@@G@@  . JUST LOOK AT IT     @F@@@@                  IF NEG,IN,MFLAG THEN . THT
)@@G@@RANSLATE IF WE MUST     @D@@@@                     E$ASFDTRANS       . AHU
)@@G@@SCII - FD   @B@@@@                  ENDIF               .   @B@[@@      HV
)@@G@@         ATEND                  .   @B@@@[.              ATEND          HW
)@@G@@        .   @G@[@@                  SZ        TOGGLE    . IF WE HAVE A QHX
)@@G@@UOTE RESET TOGGLE @G@@@[.                 SZ        TOGGLE    . IF WE HAHY
)@@G@@VE A QUOTE RESET TOGGLE @B@@@@               ENDREP                 .   HZ
)@@G@@@B@@@@            ENDREP                    .   @B@@@@         ENDIF    IA
)@@G@@                    .   @B@@@@      ENDIF                           .   IB
)@@G@@@B@@@@   ATEND                              .   @G@@@@      E$CLOSE     IC
)@@G@@                    . BLANK FILL AND OUTPUT LAST WORD @B@@@@   ENDREP   ID
)@@G@@                          .   @D@@@@   LXI,U     A1,0                   IE
)@@G@@  . GET RID OF INC@F@@@@   ANU,H2    A1,MTOLOC                . CALC NEWIF
)@@G@@ IMAGE LENGTH     @F@@@@   L         A1,MTOLOC                . AND GET IG
)@@G@@NEW BUFFER LOC    @B@@@@ ENDBEG                               .   @B@@@@IH
)@@G@@          END                         .   ___@@@                        II
)@@G@@  . FETCH CHARACTER     @F@@@@      IF  NEG,IN,MFLAG                . MAIJ
)@@G@@Y NOT NEED TRANSLATION  *[S@@@*SDFF*@[@@@  .    @[@@@  .    @[@@@  .    IK
)@@G@@@[@@@  .    @F@@@  . THIS ELEMENT CONTAINS ALL ERROR HANDLING ROUTINES. IL
)@@G@@ MOST ERROR @G@@@  .     DETECTED BY THE PROGRAM WILL RESULT IN IMMEDIATIM
)@@G@@E TERMINATION     @G@@@  .     AFTER AN ERROR MESSAGE IS PRINTED.  SOME,IN
)@@G@@ HOWEVER, ARE DEFINED   @F@@@  .     AS ONLY WARNINGS AND A LOGICAL ATTEIO
)@@G@@MP TO CONTINUE IS MADE. @[@@@  .    @[@@@  .    @[@@@  .    @B@@@       IP
)@@G@@    AXR$                        .   @B@@@           STRUC$,'OLD PROGRAM'IQ
)@@G@@         .  @B@@@           DOWNDEF                     .   @B@@@       IR
)@@G@@    ED$PROCS                    .   @[@@@  .    @[@@@  .    @[@@@  .    IS
)@@G@@@[@@@  .    @[@@@  .    @]@@@  . ERROR -  @#@@@  . PCFERROR -     @F@@@ IT
)@@G@@ .     THIS IS A VERY SIMPLE MINDED ERROR HANDLER .  IT WILL BE   @F@@@ IU
)@@G@@ .     UPDATED TO PRINT MORE MEANINGFUL ERROR MESSAGES WHEN WE    @E@@@ IV
)@@G@@ .     HAVE A INFOR CAPABLE OF PROVIDING REAL FILENAMES.    @[@@@  .    IW
)@@G@@@[@@@  .    @[@@@ $(0). @E@@@ ERRCODE   RES       1                 . SAIX
)@@G@@VE FOR ERROR CODE @G@@@ ERRSAVE   RES       2                 . GENERAL IY
)@@G@@PURPOSE SAVE FOR REGS   @[@@@  .    @[@@@  .    @[@@@  .    @[@@@ $(1). IZ
)@@G@@@]@@@ ERROR*.     @B@@@  BEGIN SUBROUTINE                     .   @E@@@ JA
)@@G@@   S         A0,ERRCODE               . SAVE ERROR CODE     @D@@@    DS JB
)@@G@@       A1,ERRSAVE               . AND OTHER INFO@D@@@    CASENTRY A0    JC
)@@G@@                    . STATUS IN A0  @D@@@       PRINT                   JD
)@@G@@        . SET FOR PRINT$@C@@@       ' *** UNDEFINED ERROR CODE PASSED **JE
)@@G@@* ' . @C@@@       ENDPRINT  SKIP,2                . PRINT IT@D@@@    CASJF
)@@G@@E ISDFIERR,GETERR,SDFOERR,IOERR,TOCERR,OPNERR . @F@@@       L         X1JG
)@@G@@0,ERRSAVE           . GET CONTENTS OF A1 PASSED @D@@@       PRINT,EDIT  JH
)@@G@@                     . OPEN EDIT$   @B@@@       E$MSG     (' I/O ERROR &JI
)@@G@@')      .   @F@@@       IF NONZ,IN,3,X10,S1 THEN        . IS THERE AN IOJJ
)@@G@@ ERR CODE   @E@@@          E$OCTV    3,X10,S1           . YES - EDIT IT JK
)@@G@@IN MSG@D@@@          E$SKIP    1                  . MAKE SPACE    @B@@@ JL
)@@G@@      ENDIF                           .   @B@@@       E$MSG     ('FROM &JM
)@@G@@')            .   @F@@@       DL        A0,,X10               . GET INTEJN
)@@G@@RNAL FILE NAME    @F@@@       CALL      EDTXFN                . EDIT IN JO
)@@G@@EXTERNAL FILE NAME@E@@@       ENDPRINT  SKIP,2                . PRINT ERJP
)@@G@@ROR MESSAGE @F@@@    CASE PFPERR                        . ERR RETURN FROJQ
)@@G@@M PFP PKG   @F@@@       L         X10,ERRSAVE           . GET PASSED A1 JR
)@@G@@- PKT ADDR  @D@@@       PRINT,EDIT                       . OPEN EDIT$   JS
)@@G@@@F@@@       CASENTRY A2                     . BRANCH ON PFP ERROR CODE  JT
)@@G@@@B@@@          E$MSG     (' UNDEFINED &')   .   @B@@@          E$COPY   JU
)@@G@@ -2,('RETURN CODE ')  . @B@@@       CASE 1                          .   JV
)@@G@@@B@A@          E$MSG     ('NO FIND&    ')   .   @B@@@A         E$MSG    JW
)@@G@@ ('ELEMENT &   ')   .   @F@@@A         IF NONZ,IN,2,X10 THEN        . ISJX
)@@G@@ THERE AN ELT NAME?     @D@@@A            E$FD2     2,X10           . YEJY
)@@G@@S - GET IT  @C@@@A            DL        A0,('            ') .     @H@@@AJZ
)@@G@@            IF NONZ,IN,6,X10 AND A0,DNE,6,X10 THEN . HOW 'BOUT VERSION NKA
)@@G@@AME   @B@@@A               E$CHAR    '/'          .   @E@@@A            KB
)@@G@@   E$FD2     6,X10        . YES - GET IT TOO    @B@@@A            ENDIF KC
)@@G@@                    .   @B@@@A         ENDIF                        .   KD
)@@G@@@B@@@A         E$MSG     (' ''NO-FIND'' &') .   @B@@@       CASE 2      KE
)@@G@@                    .   @B@@@          E$MSG     ('I/O ERROR&  ')   .   KF
)@@G@@@B@@@       CASE 3                          .   @A@@@          E$MSG    KG
)@@G@@ ('NOT PROGRAM&') @B@@@          E$MSG     ('FILE& ')         .   @B@@@ KH
)@@G@@      CASE 5                          .   @B@@@          E$MSG     ('PROKI
)@@G@@GRAM FIL&')   .   @B@@@          E$MSG     ('E OVERFLOW& ')   .   @B@@@ KJ
)@@G@@      CASE 6                          .   @B@@@          E$MSG     ('ILLKK
)@@G@@EGAL PFP&')   .   @B@@@          E$SKIP    1                  .   @B@@@ KL
)@@G@@         E$MSG     ('PACKET ADDR&')   .   @B@@@       ENDCASE           KM
)@@G@@              .   @B@@@       REOPEN                          .   @C@A@ KN
)@@G@@      ' STATUS FOR PFP REQUEST  ON FILE:&' .    @E@@@A      ' STATUS FORKO
)@@G@@ PROGRAM FILE PACKAGE REQUEST ON FILE:&' .@B@@@A      ENDMESSAGE        KP
)@@G@@               .  @B@A@       ENDPRINT  SKIP,2                .   @B@A@ KQ
)@@G@@      PRINT,EDIT                       .  @B@@@       E$SKIP    1       KR
)@@G@@              .   @F@@@       DL        A0,,X10               . GET INTEKS
)@@G@@RNAL FILE NAME    @F@@@       CALL      EDTXFN                . EDIT IN KT
)@@G@@EXTERNAL FILE NAME@B@A@       ENDPRINT                        .   @B@@@AKU
)@@G@@      ENDPRINT            SKIP,2      .   @E@@@    CASE OVFLERR         KV
)@@G@@              . CAN'T GET ANY BIGGER@B@@@       PRINT                   KW
)@@G@@        .   @A@@@       ' INTERNAL STORAGE  OVERFLOW '@B@@@       ENDPRIKX
)@@G@@NT  SKIP,2                .   @G@@@    CASE ELDUPERR                    KY
)@@G@@  . CAN'T HAVE DUP ENTRIES IN TREE  @B@@@       PRINT                   KZ
)@@G@@        .   @C@@@       ' DUPLICATE ELEMENT NAMES FOUND IN TOC '  @B@@@ LA
)@@G@@      ENDPRINT  SKIP,2                .   @E@@@    CASE MIXMODERR       LB
)@@G@@              . NO PROG VS DATA     @B@@@       PRINT                   LC
)@@G@@        .   @D@@@       ' CANNOT DOWN A PROG FILE WITH A DATA FILE '    LD
)@@G@@@B@@@       ENDPRINT  SKIP,2                .   @F@@@    CASE NOUSERR   LE
)@@G@@                    . FURTHER EXECUTION USELESS @B@@@       PRINT       LF
)@@G@@                    .   @D@@@       ' OPTION CONFLICT - FURTHER EXECUTIOLG
)@@G@@N USELESS ' @B@@@       ENDPRINT  SKIP,2                .   @E@@@    CASLH
)@@G@@E FILERR                        . NO FASTRAN ERROR    @F@@@       L     LI
)@@G@@    X10,ERRSAVE           . GET PKT ADDR PASSED IN A1 @D@@@       PRINT,LJ
)@@G@@EDIT                       . OPEN EDIT$   @B@@@       E$SKIP    1       LK
)@@G@@              .   @F@@@       DL        A0,,X10               . GET INTELL
)@@G@@RNAL FILE NAME    @F@@@       CALL      EDTXFN                . EDIT IN LM
)@@G@@EXTERNAL FILE NAME@B@@@       E$SKIP    1                     .   @B@@@ LN
)@@G@@      REOPEN                          .   @B@@@       'ON ILLEGAL DEVICELO
)@@G@@&'            .   @B@@@       ENDPRINT  SKIP,2                .   @G@B@ LP
)@@G@@   CASE CYCERR                        . IMPROPER CYCLE SPECIFICATION    LQ
)@@G@@@F@@@B   CASE CYCERR,SIZERR                 . CYCLE OR LENGTH ERROR     LR
)@@G@@@G@@@       L         X10,ERRSAVE           . GET ADDR OF FIELD CONTROL LS
)@@G@@PKT   @E@@@       A,U       X10,8                 . POINT TO PFP PKT    LT
)@@G@@@F@@@B      IF A0,EQ,CYCERR                 . IF IMPROPER CYCLE SPEC    LU
)@@G@@@E@B@       PRINT     EDIT                  . OPEN EDIT$ COMPLEX  @E@@@BLV
)@@G@@         PRINT EDIT                   . OPEN EDIT$ COMPLEX  @C@B@       LW
)@@G@@' ILLEGAL OR UNDEFINED CYCLE FOR: &' .    @C@@@B         ' ILLEGAL OR UNLX
)@@G@@DEFINED CYCLE FOR: &' . @B@B@       ENDMESSAGE                       .  LY
)@@G@@@B@@@B         ENDMESSAGE                   .   @E@@@B      ELSE        LZ
)@@G@@                    . ZERO LENGTH ELEMENT @B@@@B         PRINT EDIT     MA
)@@G@@              .   @B@C@B         ' ZERO LENGTH ELEMENT: &'    .   @C@@@CMB
)@@G@@         ' ERROR - ZERO LENGTH ELEMENT: &'    . @^@@@B         ENDMESSAGMC
)@@G@@E     @B@@@B      ENDIF                           .   @F@@@       DL    MD
)@@G@@    A0,,X10               . GET INTERNAL FILE NAME    @F@@@       CALL  ME
)@@G@@    EDTXFN                . EDIT IN EXTERNAL FILE NAME@F@@@       IF NONMF
)@@G@@Z,IN,2,X10 THEN           . IS THERE AN ELT NAME?     @D@@@          E$FMG
)@@G@@D2     2,X10              . YES - GET IT  @B@@@A         DL        A0,('MH
)@@G@@            ') .  @F@A@          IF NONZ,IN,6,X10 THEN        . HOW 'BOUMI
)@@G@@T VERSION NAME    @G@@@A         IF NONZ,IN,6,X10 AND A0,DNE,6,X10 THEN MJ
)@@G@@. HOW 'BOUT VERSION NAME@B@@@             E$CHAR    '/'             .   MK
)@@G@@@E@@@             E$FD2     6,X10           . YES - GET IT TOO    @B@@@ ML
)@@G@@         ENDIF                        .   @B@@@       ENDIF             MM
)@@G@@              .   @D@@@       ENDPRINT  SKIP,2                . PRINT MEMN
)@@G@@SSAGE @F@@@    CASE NOELTERR                      . NO ELT SPEC AVAILABLMO
)@@G@@E     @B@@@       PRINT                           .   @E@@@       ' NO EMP
)@@G@@LEMENT NAME AVAILABLE FOR P-OPTION OUTPUT' .    @B@@@       ENDPRINT  SKMQ
)@@G@@IP,2                .   @F@@@    CASE OUTFILERR                     . WRMR
)@@G@@ONG TYPE OUTPUT FILE    @B@@@       PRINT                           .   MS
)@@G@@@D@@@       ' IMPROPER FILE TYPE SPECIFIED FOR OUTPUT' .    @B@@@       MT
)@@G@@ENDPRINT  SKIP,2                .   @G@@@    CASE FATAL                 MU
)@@G@@        . NO - MESSAGE JUST ERROR EXIT    @B@@@    ENDCASE              MV
)@@G@@              .   @[@@@    .  @B@@@    . NOW TRY TO CLEAN UP BEFORE WE EMW
)@@G@@XIT   @[@@@    .  @D@@@    S         X11,MONSTER              . MINIMUM MX
)@@G@@OUTPUT@F@@@    IF ZERO,IN,DATA THEN               . DID WE OPEN A DATA FMY
)@@G@@ILE   @F@@@       SZ        SDFOPKT               . NO DON'T CLOSE OUTPUMZ
)@@G@@T     @E@@@       CALL      FREE1                 . FREE ANY USE NAMES  NA
)@@G@@@B@@@    ELSE                               .   @G@@@       CALL      FINB
)@@G@@NISH                . PUT AN EOF IN THE DATA FILE     @B@@@    ENDIF    NC
)@@G@@                          .   @B@D@C   P$RINT (0101,('**   '))          ND
)@@G@@  .   @D@@@    ER        EXIT$                    . FIN PROGRAM   @B@@@ NE
)@@G@@ ENDBEG                               .   @[@@@  .    @[@@@  .    @[@@@ NF
)@@G@@ .    @[@@@ $(1). @]@@@ PCFERROR*.  @B@@@  BEGIN SUBROUTINE             NG
)@@G@@        .   @E@@@    S         A0,ERRCODE               . SAVE ERROR CODNH
)@@G@@E     @E@@@    DS        A1,ERRSAVE               . SAVE ANY PASSED INFONI
)@@G@@@B@@@    CASENTRY A0                        .   @E@@@       PRINT       NJ
)@@G@@                    . SHOULD NOT GET HERE @G@@@       ' *** UNDEFINED ERNK
)@@G@@ROR CODE PASED - RECOVERY ATTEMPTED *** ' .     @B@@@       ENDPRINT    NL
)@@G@@                    .   @B@@@    CASE STARERR1                      .   NM
)@@G@@@B@@@       PRINT                           .   @G@@@       ' <<WARNING>NN
)@@G@@> FIRST STAR CARD FOUND NOT FIRST RECORD OF PCF - '   @B@@@       ENDPRINO
)@@G@@NT                        .   @E@@@       L         X10,ERRSAVE         NP
)@@G@@  . GET PFP PKT ADDR    @E@@@       PRINT     EDIT                  . OPNQ
)@@G@@EN EDIT$ COMPLEX  @B@@@       '        *** FILE IN ERROR IS: &' . @B@@@ NR
)@@G@@      ENDMESSAGE                       .  @F@@@       DL        A0,,X10 NS
)@@G@@              . GET INTERNAL FILE NAME    @F@@@       CALL      EDTXFN  NT
)@@G@@              . EDIT IN EXTERNAL FILE NAME@F@@@       IF NONZ,IN,2,X10 TNU
)@@G@@HEN           . IS THERE AN ELT NAME?     @C@@@          E$FD2     2,X10NV
)@@G@@              . GET IT  @E@@@          L         A0,('      ')      . GENW
)@@G@@T WORD OF BLANKS  @F@@@          IF A0,NE,6,X10 THEN          . HOW 'BOUNX
)@@G@@T A VERSION NAME  @B@@@             E$CHAR    '/'             .   @D@@@ NY
)@@G@@            E$FD2     6,X10           . GET IT TOO    @B@@@          ENDNZ
)@@G@@IF                        .   @B@@@       ENDIF                         OA
)@@G@@  .   @D@@@       E$MSG     (' ***& ')            . FINISH MESSAGE@#@@@ OB
)@@G@@      ENDPRINT    @]@@@       PRINT.@E@@@       '        *** RECORDS PRIOC
)@@G@@OR TO STAR ARE IGNORED *** '  @B@@@       ENDPRINT                      OD
)@@G@@  .   @E@@@       S         X11,A0                . MAKE SURE NONZ A0   OE
)@@G@@@B@@@    CASE STARERR2                      .   @B@@@       PRINT       OF
)@@G@@                    .   @H@@@       ' <<WARNING>> STAR CARD 1ST RECORD IOG
)@@G@@N ELEMENT OF P-OPT DOWNDATE - '     @B@@@       ENDPRINT                OH
)@@G@@        .   @E@@@       L         X10,ERRSAVE           . GET PFP PKT ADOI
)@@G@@DR    @E@@@       PRINT     EDIT                  . OPEN EDIT$ COMPLEX  OJ
)@@G@@@B@@@       '        *** FILE IN ERROR IS: &' . @B@@@       ENDMESSAGE  OK
)@@G@@                     .  @F@@@       DL        A0,,X10               . GEOL
)@@G@@T INTERNAL FILE NAME    @F@@@       CALL      EDTXFN                . EDOM
)@@G@@IT IN EXTERNAL FILE NAME@F@@@       IF NONZ,IN,2,X10 THEN           . ISON
)@@G@@ THERE AN ELT NAME?     @C@@@          E$FD2     2,X10              . GEOO
)@@G@@T IT  @E@@@          L         A0,('      ')      . GET WORD OF BLANKS  OP
)@@G@@@F@@@          IF A0,NE,6,X10 THEN          . HOW 'BOUT A VERSION NAME  OQ
)@@G@@@B@@@             E$CHAR    '/'             .   @D@@@             E$FD2 OR
)@@G@@    6,X10           . GET IT TOO    @B@@@          ENDIF                OS
)@@G@@        .   @B@@@       ENDIF                           .   @D@@@       OT
)@@G@@E$MSG     (' ***& ')            . FINISH MESSAGE@#@@@       ENDPRINT    OU
)@@G@@@B@@@       PRINT                           .   @C@@@       '        ***OV
)@@G@@ STAR CARD IS IGNORED *** '   @B@@@       ENDPRINT                      OW
)@@G@@  .   @B@@@    CASE STARERR3                      .   @B@@@       PRINT OX
)@@G@@                          .   @G@@@       ' <<WARNING>> STAR CARD FOUND OY
)@@G@@IN ELEMENT OF P-OPT DOWNDATE - '    @B@@@       ENDPRINT                OZ
)@@G@@        .   @E@@@       L         X10,ERRSAVE           . GET PFP PKT ADPA
)@@G@@DR    @E@@@       PRINT     EDIT                  . OPEN EDIT$ COMPLEX  PB
)@@G@@@B@@@       '        *** FILE IN ERROR IS: &' . @B@@@       ENDMESSAGE  PC
)@@G@@                     .  @F@@@       DL        A0,,X10               . GEPD
)@@G@@T INTERNAL FILE NAME    @F@@@       CALL      EDTXFN                . EDPE
)@@G@@IT IN EXTERNAL FILE NAME@F@@@       IF NONZ,IN,2,X10 THEN           . ISPF
)@@G@@ THERE AN ELT NAME?     @C@@@          E$FD2     2,X10              . GEPG
)@@G@@T IT  @E@@@          L         A0,('      ')      . GET WORD OF BLANKS  PH
)@@G@@@F@@@          IF A0,NE,6,X10 THEN          . HOW 'BOUT A VERSION NAME  PI
)@@G@@@B@@@             E$CHAR    '/'             .   @D@@@             E$FD2 PJ
)@@G@@    6,X10           . GET IT TOO    @B@@@          ENDIF                PK
)@@G@@        .   @B@@@       ENDIF                           .   @D@@@       PL
)@@G@@E$MSG     (' ***& ')            . FINISH MESSAGE@#@@@       ENDPRINT    PM
)@@G@@@]@@@       PRINT @E@@@       '        *** STAR CARD BECOMES EFFECTIVE EPN
)@@G@@OF *** '    @B@@@       ENDPRINT                        .   @B@@@    CASPO
)@@G@@E DUPERR                        .   @B@@@       PRINT                   PP
)@@G@@        .   @F@@@       ' <<WARNING>> DUPLICATE STAR CARD FOUND IN SAME PQ
)@@G@@FILE - '    @B@@@       ENDPRINT                        .   @E@@@       PR
)@@G@@L         X10,ERRSAVE           . GET PFP PKT ADDR    @E@@@       PRINT PS
)@@G@@    EDIT                  . OPEN EDIT$ COMPLEX  @B@@@       '        ***PT
)@@G@@ FILE IN ERROR IS: &' . @B@@@       ENDMESSAGE                       .  PU
)@@G@@@F@@@       DL        A0,,X10               . GET INTERNAL FILE NAME    PV
)@@G@@@F@@@       CALL      EDTXFN                . EDIT IN EXTERNAL FILE NAMEPW
)@@G@@@F@@@       IF NONZ,IN,2,X10 THEN           . IS THERE AN ELT NAME?     PX
)@@G@@@C@@@          E$FD2     2,X10              . GET IT  @E@@@          L  PY
)@@G@@       A0,('      ')      . GET WORD OF BLANKS  @F@@@          IF A0,NE,PZ
)@@G@@6,X10 THEN          . HOW 'BOUT A VERSION NAME  @B@@@             E$CHARQA
)@@G@@    '/'             .   @D@@@             E$FD2     6,X10           . GEQB
)@@G@@T IT TOO    @B@@@          ENDIF                        .   @B@@@       QC
)@@G@@ENDIF                           .   @D@@@       E$MSG     (' ***& ')    QD
)@@G@@        . FINISH MESSAGE@#@@@       ENDPRINT    @B@@@       PRINT       QE
)@@G@@                    .   @C@@@       '        *** DUPLICATE IS IGNORED **QF
)@@G@@* '   @B@@@       ENDPRINT                        .   @B@@@    CASE TCFEQG
)@@G@@RR                        .   @B@@@       PRINT                         QH
)@@G@@  .   @D@@@       ' <<WARNING>> ERROR IN FORMATING TCF STREAM - ' @B@@@ QI
)@@G@@      ENDPRINT                        .   @B@@@       PRINT             QJ
)@@G@@              .   @D@@@       '        *** PROBABLE SEQUENCE ERROR *** 'QK
)@@G@@ .    @B@@@       ENDPRINT                        .   @B@@@       PRINT,QL
)@@G@@EDIT                       .  @C@@@       E$SKIP    8                   QM
)@@G@@  . SPACE   @C@@@       E$COPY    -2,('*** AT REC #')   . PREFIX  @E@@@ QN
)@@G@@      LXM,H1    X10,ERRSAVE           . GET FIELD PKT ADDR  @E@@@       QO
)@@G@@A,U       X10,8                 . POINT TO PFP PKT    @B@@@       E$SKIPQP
)@@G@@    1                     .   @F@@@       E$DECV    ERRSAVE+1,,H1       QQ
)@@G@@  . EDIT IN REC # THIS FILE   @B@@@       E$MSG     (' OF & ')          QR
)@@G@@  .   @E@@@       DL        A0,,X10               . GET INTERNAL NAME   QS
)@@G@@@F@@@       CALL      EDTXFN                . EDIT IN EXTERNAL FILE NAMEQT
)@@G@@@F@@@       IF NONZ,IN,2,X10 THEN           . IS THERE AN ELT NAME?     QU
)@@G@@@C@@@          E$FD2     2,X10              . GET IT  @E@@@          L  QV
)@@G@@       A0,('      ')      . GET WORD OF BLANKS  @F@@@          IF A0,NE,QW
)@@G@@6,X10 THEN          . HOW 'BOUT A VERSION NAME  @B@@@             E$CHARQX
)@@G@@    '/'             .   @D@@@             E$FD2     6,X10           . GEQY
)@@G@@T IT TOO    @B@@@          ENDIF                        .   @B@@@       QZ
)@@G@@ENDIF                           .   @D@@@       E$MSG     (' ***& ')    RA
)@@G@@        . FINISH MESSAGE@#@@@       ENDPRINT    @D@@@       PRINT,EDIT  RB
)@@G@@                     . OPEN EDIT$   @C@@@       E$SKIP    8             RC
)@@G@@        . SPACE   @B@@@       E$MSG     ('*** & ')            .   @B@@@ RD
)@@G@@      E$MSG     ('AND REC # & ')      .   @B@@@       E$DECV    ERRSAVE+RE
)@@G@@1,,H2         .   @E@@@       LXM,H2    X10,ERRSAVE           . GET FIELRF
)@@G@@D PKT ADDR  @E@@@       A,U       X10,8                 . POINT TO PFP PRG
)@@G@@KT    @B@@@       E$MSG     (' OF & ')            .   @F@@@       DL    RH
)@@G@@    A0,,X10               . GET INTERNAL FILE NAME    @F@@@       CALL  RI
)@@G@@    EDTXFN                . EDIT IN EXTERNAL FILE NAME@F@@@       IF NONRJ
)@@G@@Z,IN,2,X10 THEN           . IS THERE AN ELT NAME?     @C@@@          E$FRK
)@@G@@D2     2,X10              . GET IT  @E@@@          L         A0,('      RL
)@@G@@')      . GET WORD OF BLANKS  @F@@@          IF A0,NE,6,X10 THEN        RM
)@@G@@  . HOW 'BOUT A VERSION NAME  @B@@@             E$CHAR    '/'           RN
)@@G@@  .   @D@@@             E$FD2     6,X10           . GET IT TOO    @B@@@ RO
)@@G@@         ENDIF                        .   @B@@@       ENDIF             RP
)@@G@@              .   @D@@@       E$MSG     (' ***& ')            . FINISH MRQ
)@@G@@ESSAGE@#@@@       ENDPRINT    @B@@@       PRINT                         RR
)@@G@@  .   @D@@@       '        *** CONTINUATION IS ATTEMPTED *** '    @B@@@ RS
)@@G@@      ENDPRINT                        .   @B@@@    CASE TYPERR          RT
)@@G@@              .   @B@@@       PRINT                           .   @E@@@ RU
)@@G@@      ' <<WARNING>> FORMAT ERROR IN PCF CORRECTION CARD - ' @B@@@       RV
)@@G@@ENDPRINT                        .   @B@@@       PRINT,EDIT              RW
)@@G@@         .  @B@@@       E$SKIP    8                     .   @B@@@       RX
)@@G@@E$COPY    -2,('*** AT REC #')   .   @B@@@       E$SKIP    1             RY
)@@G@@        .   @D@@@       E$DECV    ERRSAVE               . EDIT IN REC # RZ
)@@G@@@G@@@       L,U       A0,MASTERPKT          . GET ADDR OF MASTER CONTROLSA
)@@G@@ PKT  @E@@@       L         A1,ERRSAVE+1          . GET ISDFI PKT ADDR  SB
)@@G@@@F@@@       LXI,U     A1,0                  . JUST IN CASE ANY GARBAGE  SC
)@@G@@@D@@@       L,H1      X10,1,A0              . GET AFPADR    @F@@@       SD
)@@G@@IF A1,NE,2,A0,H1 THEN           . BUT DO WE HAVE AIPADR     @G@@@       SE
)@@G@@   L,H2      X10,1,A0           . GET BFPADR . NO - MUST BE OTHER @B@@@ SF
)@@G@@      ENDIF                           .   @G@@@       A,U       X10,8   SG
)@@G@@              . INC TO POINT OT PFP PKT ADDR    @B@@@       E$MSG     ('SH
)@@G@@ OF & ')            .   @F@@@       DL        A0,,X10               . GESI
)@@G@@T INTERNAL FILE NAME    @F@@@       CALL      EDTXFN                . EDSJ
)@@G@@IT IN ESTERNAL FILE NAME@F@@@       IF NONZ,IN,2,X10 THEN           . ISSK
)@@G@@ THERE AN ELT NAME?     @C@@@          E$FD2     2,X10              . GESL
)@@G@@T IT  @E@@@          L         A0,('      ')      . GET WORD OF BLANKS  SM
)@@G@@@F@@@          IF A0,NE,6,X10 THEN          . HOW 'BOUT A VERSION NAME  SN
)@@G@@@B@@@             E$CHAR    '/'             .   @D@@@             E$FD2 SO
)@@G@@    6,X10           . GET IT TOO    @B@@@          ENDIF                SP
)@@G@@        .   @B@@@       ENDIF                           .   @B@@@       SQ
)@@G@@E$MSG     (' ***& ')            .   @B@@@       ENDPRINT                SR
)@@G@@        .   @B@@@       PRINT                           .   @D@@@       SS
)@@G@@'        *** CONTINUATION IS ATTEMPTED *** '    @B@@@       ENDPRINT    ST
)@@G@@                    .   @B@@@    ENDCASE                            .   SU
)@@G@@@B@@@  ENDBEG                               .   @[@@@  .    @[@@@  .    SV
)@@G@@@B@@@  END                                  .   ___@@@THEN          . HOSW
)@@G@@W 'BOUT A VERSION NAME  *[S@@@*SDFF*@[@@@@.     @[@@@@.     @C@]@@. THESSX
)@@G@@E ROUTINES PROVIDE THE MECHANISM TO 'GET' @C@@@]. THIS ROUTINE PROVIDES SY
)@@G@@THE MECHANISM TO 'GET'  @D@]@@.         THE APPROPRIATE RECORD FROM THE SZ
)@@G@@APPROPRIATE @B@@@].         THE APPROPRIATE RECORD FROM THE @D@]@@.     TA
)@@G@@    ISDFI INPUT FILE.  IT USES THE INFORMATION  @C@@@].         ISDFI INTB
)@@G@@PUT FILE.  IT USES INFORMATION@C@]@@.         IN THE RESPECTIVE FIELD PATC
)@@G@@CKET TO PASS+@@@@[@G@]@@ 0)^@)^@)^@)^@)DDI^[OD[ ^[MC(NE[ CTODDQC*)C1DC(GTD
)@@G@@C))E[[CTFC(O^[OD8)E[[ETN@G@]@@ 0)^@)^@)^@)^@)DDI^[OD[ ^[MC(NE[ CTODDQC*)TE
)@@G@@C1DC(GC))E[[CTFC(O^[OD8)E[[ETN+@@@@@@D@@@].         IN THE FIELD PACKET TF
)@@G@@TO PASS BACK RECORDS    @D@]@@.         BACK RECORDS CONTAINING ONLY THETG
)@@G@@ PROPER     +@@@@[@H@]@@ 0)^@)^@)^@)^@)CL[CTF^[MC(#D9MC-N^[#D9IE-[DDIDDITH
)@@G@@C8)D9ID-T^[OD[ ^[KELJE[ EK)^@)@H@]@@ 0)^@)^@)^@)^@)CL[CTF^[MC(#D9MC-N^[#TI
)@@G@@D9IE-[DDIDDIC8)D9ID-T^[OD[ ^[KELJE[ EK)^@)@F@]@@ 0)^@)^@)^@)^@)EL CTJEL^TJ
)@@G@@ES)CTJD1OCDDD1DD1B^[JD1GFC)E-CC*)E[MD9KC(M@F@]@@ 0)^@)^@)^@)^@)EL CTJEL^TK
)@@G@@ES)CTJD1OCDDD1DD1B^[JD1GFC)E-CC*)E[MD9KC(M+@@@@@@C@@@].         CONTAINITL
)@@G@@NG ONLY THE PROPER ELEMENT    @C@@@@.         CYCLE INFORMATION.  GIVEN TM
)@@G@@A RELATIVE  @C@@@@.         RECORD NUMBER IN THE SDF FILE BEING   @C@]@@TN
)@@G@@.         ACCESSED, IT WILL CONTINUE TO FETCH   @B@@@].         ACCESSEDTO
)@@G@@, IT CONTINUES TO FETCH @C@@@@.         RECORDS SEQUENTIALLY UNTIL IT FITP
)@@G@@NDS   @E@@@@.         A DATA IMAGE WITH THE PROPER CYCLE INFORMATION.   TQ
)@@G@@@D@@@@.         IT THEN RETURNS WITH THE NEXT RECORD NUMBER @C@@@@.     TR
)@@G@@    CONTAINED IN A1 AND THE ADDRESS OF THE@^@@@@.         IMAGE IN A2.  TS
)@@G@@@[@@@@.     @[@@@@.     @[@@@@.     @B@@@@          AXR$                TT
)@@G@@        .   @B@@@@          DOWNDEF                     .   @B@@@@      TU
)@@G@@    ED$PROCS                    .   @B@@@@          STRUC$,'OLD PROGRAM'TV
)@@G@@         .  @B@@@@          RESUME                      .   @[@@@@.     TW
)@@G@@@[@@@@.     @[@@@@.     @F@@@@SDFCW     EQUF      15,A0             . ADTX
)@@G@@DR OF SDF CONTROL WD    @E@@@@FILLOC    EQUF      18,X2             . SETY
)@@G@@CTOR LOC OF FILE  @E@[@@STARTL    EQUF      6,A0,H1           . STARTINGTZ
)@@G@@ SECTOR LOC @E@@@[STARTL    EQUF      6,A0              . STARTING SECTOUA
)@@G@@R LOC @F@@@@DADDR     EQUF      5,A0              . NEXT SECTOR ADDR TO UB
)@@G@@FETCH @E@@@@FILLTH    EQUF      17,X2,H2          . TEXT LENGTH OF FILE UC
)@@G@@@E@[@@DLENTH    EQUF      6,A0,H2           . LAST SEC ADDR +1    @E@@@[UD
)@@G@@DLENTH    EQUF      19,A0             . LAST SEC ADDR +1    @E@@@@FACITPUE
)@@G@@KT  EQUF      20,X2             . ADDR FACIT$ PKT     @F@@@@HITRK     EQUF
)@@G@@UF      29,X2,H1          . HIGHEST TRACK WRITTEN     @F@@@@CYC       EQUG
)@@G@@UF      1,X2              . CYCLE INFO IN FIELD PKT   @F@@@@CYCN      EQUH
)@@G@@UF      18,A0,S2          . DESIRED CYCLE # FOR ISDFI @G@@@@CYCIND    EQUI
)@@G@@UF      18,A0,S1          . INDICATOR THAT ABS CYC EXITS    @F@@@@BUFSIZUJ
)@@G@@E   EQUF      7,A0,H1           . BUFFER SIZE IN SECTORS    @[@@@@/.    UK
)@@G@@@[@@@@.     @[@@@@.     @C@@@@. THIS ROUTINE OPENS THE SDF FILE FOR INPUUL
)@@G@@T     @ @@@@.         USES X2,11 A0,1 R6  @ @@@@.         CALLING SEQUENUM
)@@G@@CE:   @E@@@@.                   L     A0,(FIELD PKT ADDR,ISDFI PKT ADDR)UN
)@@G@@@A@@@@.                   CALL  GETOPN    @A@@@@.                   <NORUO
)@@G@@MAL RETURN> @[@@@@.     @[@@@@.     @[@@@@.     @[@@@@$(0). @F@@@@PKTSAVUP
)@@G@@E   +         0                 . SAVE FOR ISDFI PKT ADDR   @[@@@@ .    UQ
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@$(1). @]@@@@GETOPN*.    @B@@@@ BEGIN SUBROUR
)@@G@@UTINE                     .   @F@@@@   LSSC      A0,18                  US
)@@G@@  . GET FIELD CONTROL PKT ADDR@F@@@@   L,U       X2,,A0                 UT
)@@G@@  . PUT WHERE WE CAN USE IT   @E@@@@   SSL       A0,18                  UU
)@@G@@  . GET ISDFI PKT ADDR  @E@@@@   S         A0,PKTSAVE               . SAUV
)@@G@@VE ISDFI PKT ADDR @E@@@@   L         A1,FILLOC                . GET SEC UW
)@@G@@ADDR OF FILE@E@]@@   SZ        A2                       . INIT A1 JUST IUX
)@@G@@N CASE@E@@@]   SZ        A2                       . INIT A1 JUST IN CASEUY
)@@G@@@F@@@@   L         A3,BUFSIZE               . GET SEC SIZE OF BUFFERS   UZ
)@@G@@@G@@@@   IF A3,GE,4,,U THEN                 . CAN WE ADJ TO 4 SEC BOUNDAVA
)@@G@@RY?   @E@@@@      DSL       A1,2                  . YES - DIVIDE BY 4   VB
)@@G@@@D@@@@      SSL       A2,34                 . GET REMAINDER @D@@@@      VC
)@@G@@LSSL      A1,2                  . MULT BY 4     @B@@@@   ENDIF          VD
)@@G@@                    .   @F@@@@   S         A1,STARTL                . PUVE
)@@G@@T SEC START IN ISDFI PKT@F@@@@   S         A1,DADDR                 . ISVF
)@@G@@ ALSO DEVISE START ADDR @G@@@@   A         A1,FILLTH                . ADVG
)@@G@@D LENGTH OF FILE IN SECTORS   @F@@@@   A         A1,A2                  VH
)@@G@@  . INC BY REMAINDER OFFSET   @F@@@@   S         A1,DLENTH              VI
)@@G@@  . STORE AS LAST SEC ADDR +1 @G@@@@   L         A1,CYC                 VJ
)@@G@@  . GET CYCLE WORD FROM CONTROL PKT @E@@@@   S         A1,CYCIND        VK
)@@G@@        . SET ABS CYC IND FLG @E@@@@   SSL       A1,18                  VL
)@@G@@  . GET ABS CYC IF ANY  @G@@@@   S         A1,CYCN                  . SEVM
)@@G@@T IN ISDFI PKT AS ABS CYC     @F@@@@   LDSL      A1,36                  VN
)@@G@@  . MOVE OFFSET TO A1 CLEAR A2@F@@@@   MSI,U     A1,28                  VO
)@@G@@  . CALC WORD OFFSET IN BUFFER@E@#@]   L         A2,DATA                VP
)@@G@@  . IS THIS A DATA FILE?+@@@@[@ @]@@^@)^[DC0)CC2 - EC?A@)E-CC(I^@)+@@@@@VQ
)@@G@@@#@#@]   IF A2,EQ,0 THEN+@@@@[@F@]@@^@)^@)^@)ETU^@)^@)^[[AK)^@)^@)^@)^@)VR
)@@G@@^@) 0)CTGC([EK)CTTCTGC*)C1GCDB@F@]@@^@)^@)^@)ETU^@)^@)^[[AK)^@)^@)^@)^@)VS
)@@G@@^@) 0)CTGC([EK)CTTCTGC*)C1GCDB+@@@@@@D@#@]      SZ        A2            VT
)@@G@@        . CLEAR FLAG    @]@#@]   ELSE     @F@#@]      L,U       A2,2    VU
)@@G@@              . ELSE, SET TO IGNORE CYCLES@]@#@]   ENDIF    @E@@@@   L  VV
)@@G@@       A3,INFOBITS              . GET INPUT OPTIONS   @E@@@@   IF A3,ODDVW
)@@G@@P,OPT('X') THEN           . DO WE PROCESS CYCLES@E@@@@      L,U       A2VX
)@@G@@,2                  . NO - SET INPUT FLG  @B@@@@   ENDIF                VY
)@@G@@              .   @D@@@@   CASENTRY CALLING ISDFIOA           . GO OPEN VZ
)@@G@@ISDFI @D@@@@   CASE 0                             . ERROR RETURN  @F@@@@WA
)@@G@@      L         A1,PKTSAVE            . GET PKT ADDR IN ERROR     @D@@@@WB
)@@G@@      L,U       A0,OPNERR             . GET ERROR CODE@E@@@@      CALL  WC
)@@G@@    ERROR                 . PRINT ERROR AND TERM@D@@@@   CASE 1         WD
)@@G@@                    . NORMAL RETURN @B@@@@   ENDCASE                    WE
)@@G@@        .   @G@@@@   LXI       A0,X2                    . REPLACE FIELDPWF
)@@G@@KT CONTROL ADDR   @B@@@@ ENDBEG                               .   @[@@@@WG
)@@G@@/.    @[@@@@.     @[@@@@.     @B@@@@. THIS ROUTINE DOES THE ACTUAL FETCHWH
)@@G@@ING OF@A@@@@.         THE APPROPRIATE RECORD    @ @@@@.         USES X2,WI
)@@G@@11 A0-5 R1-6@ @@@@.         CALLING SEQQUENCE:  @E@@@@.                 WJ
)@@G@@  L     A0,(FIELD PKT ADDR,ISDFI PKT ADDR)@B@@@@.                   L   WK
)@@G@@  A1,DESIRED REC #@ @@@@.                   CALL  GET @A@@@@.           WL
)@@G@@        <EOF RETURN>    @A@@@@.                   <NORMAL RETURN> @[@@@@WM
)@@G@@.     @[@@@@.     @[@@@@.     @[@@@@GET*. @B@@@@ BEGIN SUBROUTINE,NOSAVEWN
)@@G@@              .   @E@@@@   L,U       R6,1,X11                 . SAVE RETWO
)@@G@@URN LINK    @D@@@@   CASENTRY CALLING ISDFI             . GO GET REC    WP
)@@G@@@E@@@@   CASE 0                             . THIS IS ERROR RETURN@D@@@@WQ
)@@G@@      L         A1,A0                 . GET PKT ADDR  @D@@@@      L,U   WR
)@@G@@    A0,ISDFIERR           . GET ERROR CODE@D@@@@      CALL      ERROR   WS
)@@G@@              . ERROR OFF     @D@@@@   CASE 1                           WT
)@@G@@  . EOF RETURN    @F@@@@      JGD       R6,$+1                . PREPARE WU
)@@G@@FOR PROPER RETURN @D@@@@   CASE 2                             . NORMAL RWV
)@@G@@ETURN @E@@@@      L         A3,INFOBITS           . GET INPUT OPTIONS   WW
)@@G@@@F@@@@      IF A3,ODDP,OPT('T') THEN        . IS THIS PCF DOWNDATE?     WX
)@@G@@@G@@@@         L         A4,A1              . YES - MUST CHECK FOR ASCIIWY
)@@G@@ REC  @D@@@@         SSL       A4,18              . SHIFT FOR TEST@E@@@@WZ
)@@G@@         IF A4,IS,ODD THEN            . IS ASCII BIT SET?   @F@@@@      XA
)@@G@@      L         A3,,A2          . YES GET FIRST WORD OF REC @E@@@@      XB
)@@G@@      DSL       A3,27           . ISSOLATE FIRST CHAR @E@@@@            XC
)@@G@@SSL       A4,27           . ALSO SECOND CHAR    @E@@@@            E$ASFDXD
)@@G@@TRANS                . TRANSLATE TO FD    @E@@@@            LDSC      A3XE
)@@G@@,36           . REVERSE REGISTERS   @E@@@@            E$ASFDTRANS       XF
)@@G@@         . TRANSLATE 2ND CHAR @D@@@@         ELSE                       XG
)@@G@@  . REC IS FD     @D@@@@            L,S1      A4,,A2          . GET 1ST XH
)@@G@@CHAR  @D@@@@            L,S2      A3,,A2          . GET 2ND CHAR  @B@@@@XI
)@@G@@         ENDIF                        .   @F@@@@         IF A4,EQ,CHAR,,XJ
)@@G@@S6 THEN       . IS 1ST CHAR CORR CHAR     @F@@@@            JGD       R6XK
)@@G@@,$+1          . YES - TREAT AS PSUEDO EOF @D@@@@            AN,U      A1XL
)@@G@@,1            . POINT TO EOF  @B@@@@         ELSE                       XM
)@@G@@  .   @E@@@@            IF A4,EQ,'*',,U THEN      . DO WE HAVE A * CARD XN
)@@G@@@G@@@@               IF A3,NE,' ',,U AND A3,NE,'*',,U THEN . IS IT REALLXO
)@@G@@Y     @F@@@@                  JGD       R6,$+1    . YES - TREAT AS PSUEDXP
)@@G@@O EOF @F@@@@                  AN,U      A1,1      . BACK UP TO POINT TO XQ
)@@G@@EOF   @B@@@@               ENDIF                  .   @B@@@@            XR
)@@G@@ENDIF                     .   @B@@@@         ENDIF                      XS
)@@G@@  .   @B@@@@      ENDIF                           .   @B@@@@   ENDCASE  XT
)@@G@@                          .   @E@@@@   L         X11,R6                 XU
)@@G@@  . RESTORE RETURN LINK @B@@@@ ENDBEG                               .   XV
)@@G@@@B@@@@ END                                  .   ___@@@   IF A3,GE,4,,U TXW
)@@G@@HEN                 . CAN WE ADJ TO 4 SEC BOUNDARY?   @E@@@@      DSL   XX
)@@G@@*[S@@@*SDFF*@[@@@@/.    @[@@@@.     @[@@@@.     @F@@@@. THESE ARE THE INXY
)@@G@@FAMOUS HAGERTY PAGING ROUTINES FARBLES OVER     @F@@@@.         IN ORDERXZ
)@@G@@ TO BE MORE GENERAL AS WELL AS BEING ,ORE EASILY@F@@@@.         CONFIGURYA
)@@G@@ABLE TO THE USER'S NEEDS.  APPROPRIATE ONS AND  @F@@@@.         OFFS AREYB
)@@G@@ PROVIDED TO ALLOW THE USER THE ABILITY FO ONLY @G@@@@.         USING THYC
)@@G@@E READ SEGMENT, THE MULTIACTIVITY SEGMENT, OR THE     @G@@@@.         WRYD
)@@G@@ITE SEGMENT, OR ANY COMBINATION THERE OF.  ALSO A CHOICE    @G@@@@.     YE
)@@G@@    OF ALWAYS PREFETCHING THE NEXT SEQUENTIAL BUFFER OR REQUIRING @E@@@@YF
)@@G@@.         TWO SEQUENTIAL CALLS IS PROVIDED.  IT IS, HOWEVER,@F@@@@.     YG
)@@G@@    ASSUMED THAT THE READ SEGMENT WILL ALWAYS BE REQUIRED.  @F@@@@.     YH
)@@G@@    THEREFORE, IT MAY BE CONSIDERED THE ROOT SEGMENT ONTO   @C@@@@.     YI
)@@G@@    WHICH ALL COMPOSIT ROUTINES ARE BUILT.@[@@@@.     @[@@@@.     @[@@@@YJ
)@@G@@.     @B@@@@          AXR$                        .   @[@@@@.     @[@@@@YK
)@@G@@.     @F@@@@WRITE     EQU       0                 . TO GENERATE OUTPUT CYL
)@@G@@ODE   @G@@@@MULTI     EQU       0                 . TO GENERATE MULTI-ACYM
)@@G@@TIVITY CODE @G@@@@SEQ       EQU       0                 . TO FORCE SEQUEYN
)@@G@@NTIAL BUF PREFETCH@[@@@@.     @[@@@@.     @G@@@@PG$SIP    EQUF      0,A3YO
)@@G@@              . FWA OF SWAPI  PACKET (FILENAME) @E@@@@PG$IFC    EQUF    YP
)@@G@@  3,A3,S2           . INPUT FUNCTION CODE @F@@@@PG$SIB    EQUF      4,A3YQ
)@@G@@,H2           . CURRENT SWAPIN BUF ADDR   @H@@@@PG$TSW    EQUF      1,A2YR
)@@G@@              . TS LOCK AGAINST MULTI ACTS IN PKT     @F@@@@PG$TSL    EQYS
)@@G@@UF      1,A2,S1           . USE THIS ONE TO CLEAR LOCK@G@@@@PG$LOK    EQYT
)@@G@@UF      1,A2,H2           . ADDR OF LOCK SECTOR (INPUT FILE)@F@@@@PG$SOPYU
)@@G@@    EQUF      8,A3,H2           . FWA OF SWAPOUT PACKET     @F@@@@PG$RDLYV
)@@G@@    EQUF      8,A3,H1           . ADDR OF MULTI ACT SUB PKT @F@@@@PG$SOBYW
)@@G@@    EQUF      4,A1,H2           . CURRENT SWAPOUT BUFFER    @E@@@@PG$OFCYX
)@@G@@    EQUF      3,A1,S2           . I/O PKT FINC CODE   @E@@@@PG$NPB    EQYY
)@@G@@UF      7,A3,H2           . # OF PAGE BUFFERS   @E@@@@PG$SIZ    EQUF    YZ
)@@G@@  7,A3,H1           . # OF DRUM SECTORS   @G@@@@PG$SLP    EQUF      0,X1ZA
)@@G@@1             . SLOP WRD - RDL$ - MASTER LOC SEC@E@@@@PG$TBL    EQUF    ZB
)@@G@@  9,A3,H2           . START OF PAGE TABLE @E@@@@PG$BUF    EQUF      9,A3ZC
)@@G@@,H1           . START OF BUFFER AREA@[@@@@.     @[@@@@.     @A@@@@. THESZD
)@@G@@E ARE I/O PACKETS EQUF'S.     @[@@@@.     @[@@@@.     @F@@@@FT$FLN    EQZE
)@@G@@UF      0,A0              . FILENAME ID 1ST 2 WRDS    @E@@@@FT$STU    EQZF
)@@G@@UF      3,A0              . FOR NEG STATUS CHECK@C@@@@FT$STA    EQUF    ZG
)@@G@@  3,A0,S1           . STATUS  @D@@@@FT$FNC    EQUF      3,A0,S2         ZH
)@@G@@  . FINCTION CODE @E@@@@FT$AFC    EQUF      3,A0,S3           . ABNORMALZI
)@@G@@ FRAME COUNT@E@@@@FT$IWC    EQUF      3,A0,H2           . INPUT WORD COUZJ
)@@G@@NT    @E@@@@FT$WDC    EQUF      4,A0,H1           . XFER COUNT (WORDS)  ZK
)@@G@@@D@@@@FT$BAD    EQUF      4,A0,H2           . BUFFER ADDR   @D@@@@FT$DADZL
)@@G@@    EQUF      5,A0              . DRUM ADDRESS  @F@]@@FT$FSA    EQUF    ZM
)@@G@@  6,A0,H1           . FIRST DATA PAGE SEC #     @F@@@]FT$FSA    EQUF    ZN
)@@G@@  6,A0              . FIRST DATA PAGE SEC #     @F@]@@FT$LSA    EQUF    ZO
)@@G@@  6,A0,H2           . LAST SEC NUM+1 (FOR EOF)  @F@@@]FT$LSA    EQUF    ZP
)@@G@@  19,A0             . LAST SEC NUM+1 (FOR EOF)  @[@@@@.     @[@@@@.     ZQ
)@@G@@@[@@@@.     @[@@@@/.    @[@@@@.     @[@@@@.     @]@@@@. PGOPN$ -  @E@@@@ZR
)@@G@@.          THIS ROUTINE IS CALLED TO INITIALIZE THE PAGED   @C@@@@.     ZS
)@@G@@    ACCESS ROUTINES.  CALLING SEQUENCE IS:@B@@@@.              L A1,(PGTZT
)@@G@@BLSIZ,BUFFSIZ)    @ @@@@.              L,U A0,PKTADDR @ @@@@.           ZU
)@@G@@   CALL PGOPN$    @^@@@@.              J ERROR  @#@@@@.         WHERE:  ZV
)@@G@@@F@@@@.              PGTBLSIZ = SIZE OF AREA PROVIDED FOR PAGE TABLE    ZW
)@@G@@@F@@@@.                         (PGTBLSIZ MAY BE ZERO IN WHIXH CASE THE ZX
)@@G@@@G@@@@.                         PROVIDED AREA IS ASSUMED TO BE LARGE ENOZY
)@@G@@UGH)  @F@@@@.              BUFFSIZ  = SIZE OF AREA PROVIDED FOR APGE BUFZZ
)@@G@@FERS, @E@@@@.                         THIS PARAMETER MUST BE PTOVIDED.  AA
)@@G@@@D@@@@.              PKTADDR  = ADDR OF PAGE ROUTINE PACKET.@H@@@@.     AB
)@@G@@         ERROR    = ADDR OF ERROR ROUTINE IN CASE OF BUFFER OVERFLOW    AC
)@@G@@@E@@@@.                         OR OTHER INITIALIZATION CONFLICT. @[@@@@AD
)@@G@@.     @[@@@@.     @G@@@@.         IT SHOULD BE NOTED THAT THIS COMPLEX IAE
)@@G@@S CONSTRUCTED TO BE     @F@@@@.         USED IN THREE RELATED YET NECESSAF
)@@G@@ARILY DIVERSESITUATIONS.@F@@@@.         THEY ARE READ, WRITE, AND MULTI-AG
)@@G@@ACTIVITY APPLICATIONS.  @G@@@@.         THE CENTRAL DRIVING CODE IS THE AH
)@@G@@READ FUNCTION, THEREFORE IT   @F@@@@.         IS REASONABLE THAT THE DRIAI
)@@G@@VING PACKET IS THE INPUT IO$  @H@@@@.         PACKET PLUS FOUR WORDS OF AJ
)@@G@@AUXILARY INFORMATION (PKTADDR REFFERED    @F@@@@.         TO ABOVE IS THAK
)@@G@@E ADDRESS OF THIS TEN WORD PACKET).  THE  @G@@@@.         MULTI-ACTIVITYAL
)@@G@@ AND WRITE FUNCTIONS REQUIRE ASSOCIATED SUB     @G@@@@.         PACKETS AM
)@@G@@WHOSE POINTERS MUST APPEAR IN WORD EIGHT OF THE DRIVER@H@@@@.         PAAN
)@@G@@CKET.  OF COURSE, IF THE ASSOCIATED CODE HAS NOT BEEN GENERATED   @G@@@@AO
)@@G@@.         THE VALUES IN THIS LOCATION ARE MEANINGLESS.  THE WRITE SUB   AP
)@@G@@@G@@@@.         PACKET IS IDENTICAL IN FORM TO THE FIRST SEVEN WORDS OF AQ
)@@G@@THE   @G@@@@.         DRIVER OF READ PACKET, EXCEPT THE PROVIDED INFORMAAR
)@@G@@TION IS     @G@@@@.         TO PERTAIN TO THE OUTPUT SWAP FILE.  THE MULAS
)@@G@@TI-ACTIVITY SUB   @F@@@@.         PACKET IS THREE WORDS LONG CONTAINING AT
)@@G@@TEST AND SET AND  @H@@@@.         LOCKSECTOR INFORMATION.  IT IS ASSUMEDAU
)@@G@@ THAT THE INPUT AND OUTPUT    @G@@@@.         SWAPFILES HAVE BEEN ASSIGNAV
)@@G@@ED AND THEIR CORRESPONDING INTERNAL @G@@@@.         NAMES HAVE BEEN PLACAW
)@@G@@ED IN THE PTOPER PACKETS.  IN ADDITION,   @G@@@@.         THE SEVENTH WOAX
)@@G@@RD OF EACH FCT (READ OR WRITE PKT+6) SHOULD BE  @H@@@@.         SET TO TAY
)@@G@@HE SECTOR NUMBER OF PAGE ZERO (H1), AND THE LAST SECTOR     @H@@@@.     AZ
)@@G@@    OF THE FILE PLUS ONE (H2).  IF THE SIZE OF THE FILE IS UNKNOWN,     BA
)@@G@@@G@@@@.         H2 MAY BE 0377777, HOWEVER, CAUTION SHOULD BE OBSERVER HBB
)@@G@@ERE.  @G@@@@.         IF THE FILE IS READ IN PAGE SIZES OTHER THAN WERE BC
)@@G@@USED TO     @G@@@@.         CREATE THE FILE, PRENATURE IO-5'S MAY MAKE NBD
)@@G@@ORMAL ACCESS OF   @C@@@@.         INFORMATION AT END OF FILE IMPOSSIBLE.BE
)@@G@@@[@@@@.     @F@@@@.         WORD ONE OF THE MULTI-ACTIVETY SUB PACKET MUBF
)@@G@@ST BE THE   @G@@@@.         ADDRESS OF THE LOCKSECTOR.  THE LOCKSECTOR IBG
)@@G@@S IN THE SWAPIN   @F@@@@.         FILE, AND MAY NOT BE USED FOR DATA.  TBH
)@@G@@HE EIGHTH WORD OF @F@@@@.         THE DRIVER OR READ PACKET MUST CONTAINBI
)@@G@@ THE NUMBER OF    @F@@@@.         PAGE BUFFERS (H1), AND THE NUMBER OF SBJ
)@@G@@ECTORS PER PAGE.  @F@@@@.         OBVIOUSLY PAGES MUST ALWAYS BE IN INTEBK
)@@G@@GRAL NUMBERS OF 28@^@@@@.         WORD SECTORS. @[@@@@.     @[@@@@.     BL
)@@G@@@[@@@@.     @[@@@@.     @[@@@@/.    @[@@@@.     @[@@@@.     @[@@@@.     BM
)@@G@@@B@@@@$(1)      LIT                         .   @]@@@@PGOPN$*.    @F@@@@BN
)@@G@@          L         A3,A0             . PKT POINTER TO WORK REG   @B@@@@BO
)@@G@@          ON        MULTI             .   @F@@@@          L         A2,PBP
)@@G@@G$RDL         . GER ADDR OF MULTI-ACT PKT @G@@@@          TZ        PG$TBQ
)@@G@@SL            . IS TS LOCK PROPERLY CLEARES     @E@@@@          J       BR
)@@G@@  0,X11             . NO - ERROR EXIT     @B@@@@          OFF       MULTBS
)@@G@@I             .   @B@@@@          ON        WRITE             .   @G@@@@BT
)@@G@@          L,U       A4,W$             . PRELOAD WRITE FUNCTION CODE     BU
)@@G@@@E@@@@          L         A1,PG$SOP         . GET WRITE PKT ADDR  @F@@@@BV
)@@G@@          S         A4,PG$OFC         . PUT WRITE FUNC IN PKT     @B@@@@BW
)@@G@@          OFF       WRITE             .   @B@@@@          ON        WRITBX
)@@G@@E++MULTI=0    .   @F@@@@          L,U       A4,R$             . PRELOAD BY
)@@G@@READ FUNCTION CODE@D@@@@          S         A4,PG$IFC         . INTO REABZ
)@@G@@D PKT @B@@@@          OFF       WRITE++MULTI=0    .   @F@@@@PO0010    L CA
)@@G@@        A4,PG$SIZ         . FETCH PAGE SIZE (SECTORS) @G@@@@          MSCB
)@@G@@I,U     A4,28             . TIMES WORDS/SEC=BUF SIZE (WORDS)@G@@@@      CC
)@@G@@    L         R1,PG$NPB         . # OF PAGE BUFFS TO BE INIT'ED   @F@@@@CD
)@@G@@          DSL       A1,18             . ISOLATE PAGE TABLE SIZE   @F@@@@CE
)@@G@@          SSL       A2,18             .   AND TOTAL BUFFER SIZE   @G@@@@CF
)@@G@@          JZ        A1,PO0015         . IF ZERO - ASSUME USER 'KNOWS'   CG
)@@G@@@F@@@@          TLE       A1,R1             . IS THERE ENOUGH BUFFER?   CH
)@@G@@@E@@@@          J         0,X11             . N0 - ERROR RETURN   @E@@@@CI
)@@G@@PO0015    JZ        A2,0,X11          . NO BUFFSIZE - ERROR @H@@@@      CJ
)@@G@@    L         A0,A2             . USE TOTAL BUFF SIZE FOR CHECK HERE    CK
)@@G@@@F@@@@          L         A1,PG$TBL         . GET ADDR OF PAGE TABLE    CL
)@@G@@@G@@@@          L         A2,PG$BUF         . GET ADDR OF MAIN BUFFER ARCM
)@@G@@EA    @E@@@@          LXI,XU    A2,-1             . SET BACKWARD INC    CN
)@@G@@@E@@@@          LXI,U     A1,1              . AND INC FOR BUFFER  @F@@@@CO
)@@G@@          JGD       R1,PO0020         . PROCESS ONE PAGE AT A TIME@H@@@@CP
)@@G@@          J         0,X11             . ERROR IN NUMBER OF PAGES PROVIDECQ
)@@G@@D     @G@@@@PO0020    S         A2,,*A1           . STORE BUFFER ADDR INCR
)@@G@@ PAGE TBL   @F@@@@          AH        A2,A4             . BUMP BY # OF WCS
)@@G@@ORD/PAGE    @F@@@@          JGD       R1,PO0020         . LOOP TO FINISHCT
)@@G@@ PAGE LIST  @F@@@@          A         A0,PG$BUF         . FIND END OF BUCU
)@@G@@FFER ADDR   @E@@@@          TLE,U     A0,,A2            . HAVE WE GONE PCV
)@@G@@AST IT@E@@@@          J         0,X11             . YESERROR RETURN     CW
)@@G@@@E@@@@          J         1,X11             . NO - NORMAL RETURN  @[@@@@CX
)@@G@@/.    @[@@@@.     @[@@@@.     @[@@@@.     @]@@@@. PGRD$ -   @G@@@@.     CY
)@@G@@    THIS IS THE FETCH A PAGE ROUTINE.  ITS CALLING SEQUENCE IS:   @ @@@@CZ
)@@G@@.              L,U A0,TABLADR @ @@@@.              L   A1,PAGENUM @ @@@@DA
)@@G@@.              CALL PGRD$     @ @@@@.              J    ERROR     @#@@@@DB
)@@G@@.         WHERE - @E@@@@.              TABLADR = ADDRESS OF DRIVER OF REDC
)@@G@@AD PACKET   @D@@@@.              PAGENUM = DESIRED PAGE TO BE FETCHED   DD
)@@G@@@D@@@@.              ERROR   = ERROR EXIT ROUTINE ADDRESS   @[@@@@.     DE
)@@G@@@[@@@@.     @[@@@@.     @[@@@@$(1). @]@@@@PGRD$*.     @G@@@@          L DF
)@@G@@        A3,A0             . PKT POINTER TO WHERE ITS USED   @B@@@@      DG
)@@G@@    ON        MULTI             .   @F@@@@          L         A2,PG$RDL DH
)@@G@@        . GET ADDR OF MULTI-ACT PKT @H@@@@          TS        PG$TSW    DI
)@@G@@        . WAIT ( IN CASE OTHER ACTIVITY HERE)   @B@@@@          OFF     DJ
)@@G@@  MULTI             .   @E@@@@          S         X11,R3            . SADK
)@@G@@VE RETURN ADDR    @F@@@@          L         X11,PG$TBL        . GET ADDRDL
)@@G@@ OF PAGE TABLE    @E@@@@          TNE,H1    A1,,X11           . IS THIS DM
)@@G@@THE MRU PAGE@F@@@@          J         PG0010            . UEW - WE'VE ALDN
)@@G@@READY BOT IT@B@@@@          ON        WRITE++MULTI      .   @G@@@@      DO
)@@G@@    L,U       A4,R$             . PRELOAD NORMAL READ FUNCTION    @B@@@@DP
)@@G@@          OFF       WRITE++MULTI      .   @E@@@@          LMJ       X11,DQ
)@@G@@SWAPIN        . GO GET THE PAGE     @D@@@@          JGD       R3,PG0030 DR
)@@G@@        . ERROR RETURN  @F@@@@          L         X11,PG$TBL        .GETDS
)@@G@@ ADDR OF PAGE TABLE     @E@@@@PG0010    LMA,H2    A1,,X11           . GEDT
)@@G@@T ITS BUFFER ADDR @F@@@@          TE        A1,PG$SIB         . IS IT BEDU
)@@G@@ING SWAPPED IN?   @B@@@@          J         PG0020            . NO@E@@@@DV
)@@G@@          L,U       A0,PG$SIP         . GET ADDR OF READ PKT@E@@@@      DW
)@@G@@    TP        FT$STU            . HAS I/O COMPLETED?  @E@@@@          ERDX
)@@G@@        WAIT$             . HOLD ON FOR A WHILE @F@@@@PG0020    L,H1    DY
)@@G@@  A2,,X11           . ADDR OF PAGE TBL TO A2    @F@@@@          ON      DZ
)@@G@@  SEQ=0             .   FETCH NEXT SEQ BUF CODE @G@@@@          AN,U    EA
)@@G@@  A2,1              . LESS 1 GIVES PRECEDING PAGE #   @G@@@@          TEEB
)@@G@@,H1     A2,1,X11          . WAS THAT THE LAST PAGE LOADED   @E@@@@      EC
)@@G@@    J         PG0030            . NO - DON'T PRELOAD  @G@@@@          L,ED
)@@G@@U       A1,2,A2           . YES - GET # OF NEXT SEQ PAGE    @B@@@@      EE
)@@G@@    OFF       SEQ=0             .   @B@@@@          ON        SEQ       EF
)@@G@@        .   @E@@@@          L,U       A1,1,A2           . NEXT SEQ PAGE EG
)@@G@@#     @B@@@@          OFF       SEQ               .   @B@@@@          ONEH
)@@G@@        WRITE++MULTI      .   @G@@@@          L,U       A4,R$           EI
)@@G@@  . PREFETCH NORMAL READ FUNCTION   @B@@@@          OFF       WRITE++MULEJ
)@@G@@TI      .   @E@@@@          LMJ       X11,SWAPIN        . GO FETCH NEXT EK
)@@G@@PAGE  @D@@@@          JGD       R3,PG0030         . ERROR OFF     @F@@@@EL
)@@G@@          L         X11,PG$TBL        . GET PAGE TABLE ADDR AGAIN @G@@@@EM
)@@G@@          LM,H2     A1,1,X11          . GET BUF ADDR OF ORIG REQ PAGE   EN
)@@G@@@]@@@@PG0030.     @B@@@@          ON        MULTI             .   @F@@@@EO
)@@G@@          L         A2,PG$RDL         . FETCH MULTI-ACT PKT ADDR  @D@@@@EP
)@@G@@          SZ        PG$TSL            . CLEAR TS CELL @B@@@@          OFEQ
)@@G@@F       MULTI             .   @F@@@@          L         A0,A3           ER
)@@G@@  . RESTORE DRIVER PKT ADDR   @E@@@@          L         X11,R3          ES
)@@G@@  . AND RETURN LINK     @E@@@@          J         1,X11             . ANET
)@@G@@D RETURN NORMALLY @[@@@@/.    @[@@@@.     @[@@@@.     @[@@@@.     @]@@@@EU
)@@G@@. PGRDL$ -  @G@@@@.         THIS ROUTINE IS USED TO READ AND LOCK DESIREEV
)@@G@@D PAGES.  IT'S    @ @@@@.         CALLING SEQUENCE IS:@A@@@@.           EW
)@@G@@   L,U   A0,TABLADR     @A@@@@.              L     A1,(N,LIST)    @ @@@@EX
)@@G@@.              CALL  PGRDL$   @ @@@@.              J     ERROR    @#@@@@EY
)@@G@@.         WHERE-  @E@@@@.              TABLADR = ADDRESS OF DRIVER OF REEZ
)@@G@@AD PACKET   @C@@@@.              N       = NUMBER OF DESIRED PAGES@E@@@@FA
)@@G@@.              LIST    = ADDRESS OF LIST OF PAGE NUMBERS    @F@@@@.     FB
)@@G@@         ERROR   = ADDRESS OF ERROR TERMINATION ROUTINE     @[@@@@.     FC
)@@G@@@H@@@@.         NO MORE THAN M-1 PAGES MAY BE LOCKED AT ANY ONE TIME.  TFD
)@@G@@O PREVENT   @G@@@@.         EMBRACE CONDITIONS WHEN SEVERAL RUNS ARE ACCFE
)@@G@@ESSING THE FILE,  @F@@@@.         A LARGE AMOUNT OF EXTRA FARBLING INVOLFF
)@@G@@VING CONSEDERABLE @G@@@@.         EXTRA I/O REFERENCES IS DONE.  HENCE AFG
)@@G@@ LOCK SHOULD NOT BE     @F@@@@.         PUT ON A PAGE UNLESS THAT PAGE WFH
)@@G@@ILL BE WRITTEN INTO.  TO@F@@@@.         ABOID THIS, THE NORMAL MODE OF FFI
)@@G@@ILE UPDATING SHOULD BE  @H@@@@.         EXCLUSIVE USE FO THE FILE.  WHENFJ
)@@G@@ LOCKING IS USED, IT IS ASSUMED     @F@@@@.         THAT THE USER IS SMAFK
)@@G@@RT ENOUGH TO HAVE LOCKED THE PAGES  @G@@@@.         HE IS MODIFYING.  PAFL
)@@G@@GES NOT READ WITH A LOCK WILL NEVER BE    @F@@@@.         WRITTEN BACK TFM
)@@G@@O THE FILE (UNLESS, OFCOURSE IT IS BEING  @G@@@@.         CREATED, AND NFN
)@@G@@O PAGES ARE EVER READ).  IN ADDITION, EHENEVER  @F@@@@.         LOCKING FO
)@@G@@IS TO BE USED FOR A FILE, A MASTER LOCK SECTOR  @G@@@@.         MUST BE FP
)@@G@@DESIGNATED, AND IT MAY NOT BE USED TO CONTAIN ANY     @#@@@@.         DAFQ
)@@G@@TA.   @[@@@@.     @[@@@@.     @[@@@@.     @[@@@@$(1). @[@@@@.     @B@@@@FR
)@@G@@          ON        MULTI**WRITE      .   @[@@@@.     @]@@@@PGRDL$*.    FS
)@@G@@@E@@@@          S         X11,R3            . SAVE RETURN LINK    @F@@@@FT
)@@G@@          L         A3,A0             . PUT PKT ADDR WHERE USED   @H@@@@FU
)@@G@@          S         A1,R2             . REMP SAVE PTR TO PAGE LIST FOR LFV
)@@G@@OCK   @[@@@@.     @F@@@@.         PREVENT ENBRACE CONDITIONS BY UNLOCKINFW
)@@G@@G ALL PRESENTLY   @^@@@@.         LOCKED PAGES. @[@@@@.     @F@@@@PG0110FX
)@@G@@    L         A2,PG$TBL         . GET POINTER TO PAGE TABLE @G@@@@      FY
)@@G@@    AN,U      A2,1              . WANT TO END UP AT LAST PAGE     @G@@@@FZ
)@@G@@          LXI,U     A2,1              . SET INC TO CHECK PAGE LOCKS     GA
)@@G@@@E@@@@          L         R1,PG$NPB         . GET NUMBER OF PAGES @E@@@@GB
)@@G@@PG0120    JGD       R1,$+2            . MORE BUFFS TO CHECK?@D@@@@      GC
)@@G@@    J         PG0130            . NO - CONTINUE @G@@@@          L       GD
)@@G@@  A0,PG$SOP         . SET UP PKT ADDR FOR SWAPOUT     @E@@@@          TNGE
)@@G@@,XH2    1,*A2             . NEG MEANS A LOCK    @F@@@@          J       GF
)@@G@@  PG0120            . NO LOCK - GO TO NEXT PAGE @G@@@@          LMJ     GG
)@@G@@  X11,SWPOUT        . LOCK - SWAP OUT (AND UNLOCK)    @E@@@@          JGGH
)@@G@@D       R3,PG0220         . SOMETHING WENT WRONG@F@@@@          J       GI
)@@G@@  PG0120            . LOOP TILL END FO LIST     @[@@@@.     @E@@@@.     GJ
)@@G@@    NOW THAT ALL PAGES ARE UNLOCKED, QUEUE UP ON THE  @ @@@@.         MAGK
)@@G@@STER LOCK SECTOR. @[@@@@.     @F@@@@PG0130    L,U       A4,RDL$         GL
)@@G@@  . PRELOAD I/O FUNCTION CODE @G@@@@          LMJ       X11,PGLUNL      GM
)@@G@@  . GO TAKE CARE OF LOCK SECTOR     @E@@@@          JGD       R3,PG0225 GN
)@@G@@        . ERROR - GET OUT     @[@@@@.     @F@@@@.         HAVING TAKEN CGO
)@@G@@ARE OF THE MASTER LOCK, WE CAN NOW LOCK   @ @@@@.         THE DESIRED PAGP
)@@G@@GES.  @[@@@@.     @G@@@@PG0200    L         A1,R2             . RECOVER GQ
)@@G@@PTR TO PAGE LIST TO LOCK@E@@@@          DSL       A1,18             . SPGR
)@@G@@LIT OFF COUNT     @F@@@@          SSL       A2,18             . AND ALLIGS
)@@G@@GN ADDR OF LIST   @G@@@@          LXI,U     A2,1              . SET INC GT
)@@G@@TO STEP THROUGH LIST    @E@@@@PG0210    JGD       A1,$+2            . TOGU
)@@G@@P OF LOOP TEST    @D@@@@          J         PG0220            . NO MORE GV
)@@G@@LOCK  @F@@@@          L         X11,PG$RDL        . GET ADDR OF MULTI-ACGW
)@@G@@T PKT @F@@@@          DS        A1,PG$SLP         . SAVE CNT, ADDR OF LIGX
)@@G@@ST    @E@@@@          L,H1      A1,,A2            . GET DESIRED PAGE #  GY
)@@G@@@D@@@@          LMJ       X11,SWAPIN        . LOAD PAGE     @E@@@@      GZ
)@@G@@    JGD       R3,PG0220         . SOMETHING WENT WRONG@F@@@@          L HA
)@@G@@        X11,PG$RDL        . GET MULT - ACT PKT AGSIN  @G@@@@          DLHB
)@@G@@        A1,PG$SLP         . RESTORE LIST ADDR AND COUNT     @F@@@@      HC
)@@G@@    L         A0,PG$TBL         . GET ADDR OF PAGE TABLE    @F@@@@      HD
)@@G@@    LM,H2     A0,,A0            . GET BUFFER ADDR FROM TOP  @F@@@@      HE
)@@G@@    S,H2      A0,,*A2           . AND PUT IN USER'S TABLE   @F@@@@      HF
)@@G@@    J         PG0210            . AND LOOP FOR NEXT PAGE    @[@@@@.     HG
)@@G@@@F@@@@.         ALL PAGE REQUESTS FOR LOCKED PAGES HAVE BEEN ISSUED,    HH
)@@G@@@A@@@@.         NOW CLEAR MASTER LOCK.    @[@@@@.     @F@@@@PG0220    L,HI
)@@G@@U       A4,UNL$           . MAKE SURE WE HAVE FUNCTION@D@@@@          LMHJ
)@@G@@J       X11,PGLUNL        . DO UNLOCK     @D@@@@          JGD       R3,$HK
)@@G@@+1            . ERROR OFF     @F@@@@PG0225    L         A0,A3           HL
)@@G@@  . RESTORE DRIVER PKT POINTER@E@@@@          L         X11,R3          HM
)@@G@@  . AND RETURN ADDRESS  @D@@@@          J         1,X11             . ANHN
)@@G@@D RETURN    @[@@@@/.    @[@@@@.     @[@@@@.     @[@@@@.     @]@@@@. PGLUHO
)@@G@@NL -  @F@@@@.         THIS IS A INTERNAL ROUTINE USED TO EITHER CLEAR ORHP
)@@G@@ LOCK @F@@@@.         THE MASTER LOCK SECTOR.  IT'S CALLING SEQUENCE IS HQ
)@@G@@:     @E@@@@.              L,U  A4,FUNC . WHERE FUNC=<RDL$ OR UNK$>     HR
)@@G@@@ @@@@.              LMJ  X11,PGLUNL@ @@@@.              J    ERROR     HS
)@@G@@@[@@@@.     @[@@@@.     @[@@@@.     @[@@@@$(1). @]@@@@PGLUNL.     @F@@@@HT
)@@G@@          L         A2,X11            . SAVE RETURN ADDR HERE     @E@@@@HU
)@@G@@          L,U       A0,PG$SIP         . GET ADDR OF I/O PKT @E@@@@      HV
)@@G@@    TP        FT$STU            . IS LAST I/O COMPLETE@E@@@@          ERHW
)@@G@@        WAIT$             . NO - WAIT FOR IT    @E@@@@          S       HX
)@@G@@  A4,FT$FNC         . STORE FUNCTION CODE @F@@@@          L         X11,HY
)@@G@@PG$RDL        . GET ADDR OF MULTI-ACT PKT @D@@@@          L,U       A1,PHZ
)@@G@@G$SLP         . GET SLOP WORD @D@@@@          S         A1,FT$BAD       IA
)@@G@@  . AS BUFFER ADDR@F@@@@          L,U       A1,0200001        . OTHER HAIB
)@@G@@LF OF ACCESS WORD @D@@@@          S         A1,FT$WDC         . INTO IO IC
)@@G@@PKT   @F@@@@          L         A1,X11            . GET MULTI-ACT PKT ADID
)@@G@@DR    @F@@@@          L         A1,PG$LOK         . FETCH DRUM SECTOR ADIE
)@@G@@DR    @E@@@@          S         A1,FT$DAD         . USE AS DRUM ADDR    IF
)@@G@@@C@@@@          ER        IOW$              . DO I/O  @E@@@@          L IG
)@@G@@        X11,A2            . RESTORE RETURN LINK @D@@@@          TP      IH
)@@G@@  FT$STU            . STATUS OK?    @D@@@@          J         0,X11     II
)@@G@@        . ERROR RETURN  @D@@@@          J         1,X11             . NOIJ
)@@G@@RMAL RETURN @[@@@@.     @B@@@@          OFF       MULTI**WRITE      .   IK
)@@G@@@[@@@@/.    @[@@@@.     @[@@@@.     @[@@@@.     @]@@@@. PGWRA$ -  @F@@@@IL
)@@G@@.         THIS ROUTINE IS CALLED TO WRITE ANY UNWRITTER PAGES.    @A@@@@IM
)@@G@@.         IT'S CALLING SEQUENCE IS :@F@@@@.              L,U  A0,TABLADRIN
)@@G@@ . WHERE TABLADR=DRIVER PKT ADDR    @ @@@@.              CALL PGWRA$    IO
)@@G@@@[@@@@.     @F@@@@.         IT IS PROVIDED AS A CLEAN UP OR CHECK POINT IP
)@@G@@ROUTINE, IN @E@@@@.         ORDER TO FORCE THE WRITING OF ANY UPDATED PAIQ
)@@G@@GESL  @[@@@@.     @[@@@@.     @[@@@@.     @B@@@@          ON        WRITIR
)@@G@@E             .   @[@@@@.     @[@@@@$(1). @]@@@@PGWRA$*.    @F@@@@      IS
)@@G@@    L         A3,A0             . PUT PKT ADDR WHERE USED   @E@@@@      IT
)@@G@@    S         X11,R3            . SAVE RETURN LINK    @B@@@@          ONIU
)@@G@@        MULTI             .   @F@@@@          L         A2,PG$RDL       IV
)@@G@@  . GET MULTI-ACT PKT ADDR    @G@@@@          TS        PG$TSW          IW
)@@G@@  . ONLY ONE ACTIVITY AT A TIME     @B@@@@          OFF       MULTI     IX
)@@G@@        .   @[@@@@.     @G@@@@.         START SWAPS WITH LRU, IN CASE ITIY
)@@G@@ IS ALREADY BEING SWAPPED.    @[@@@@.     @G@@@@PW0010    L         R1,PIZ
)@@G@@G$NPB         . LOOP THRU ALL PG TBL ENTRIES    @F@@@@          L       JA
)@@G@@  A2,PG$TBL         . GET ADDR OF PAGE TABLE    @F@@@@          A       JB
)@@G@@  A2,PG$NPB         . PLUS# ENTRIES = LAST + 1  @E@@@@PW0020    JGD     JC
)@@G@@  R1,$+2            . TOP OF LOOP TEST    @F@@@@          J         PW00JD
)@@G@@30            . NO MORE ENTRIES - GET OUT @D@@@@          AN,U      A2,1JE
)@@G@@              . NEXT ENTRY    @D@@@@          LMJ       X11,SWPOUT      JF
)@@G@@  . SWAP IT OUT   @D@@@@          JGD       R3,PW0030         . ERROR OFJG
)@@G@@F     @E@@@@          J         PW0020            . LOOP FOR NEXT PAGE  JH
)@@G@@@]@@@@PW0030.     @B@@@@          ON        MULTI             .   @F@@@@JI
)@@G@@          L         A2,PG$RDL         . GET MULTI-ACT PKT ADDR    @E@@@@JJ
)@@G@@          SZ        PG$TSL            . CLEAT LOCK ON PACKET@B@@@@      JK
)@@G@@    OFF       MULTI             .   @F@@@@          L         A0,A3     JL
)@@G@@        . RESTORE DRIVER PKT ADDR   @E@@@@          L         X11,R3    JM
)@@G@@        . ALSO RETURN SDDR    @C@@@@          J         1,X11           JN
)@@G@@  . RETURN  @[@@@@.     @B@@@@          OFF       WRITE             .   JO
)@@G@@@[@@@@.     @[@@@@/.    @[@@@@.     @[@@@@.     @[@@@@.     @]@@@@. PGRLJP
)@@G@@S$ -  @F@@@@.         THIS ROUTINE IS USED TO RELEASE A PAGE.  IT'S CALLJQ
)@@G@@ING   @^@@@@.         SEQUENCE IS : @G@@@@.              L,U  A0,TABLADRJR
)@@G@@ . WHERE TABLADR=DRIVER OF READ PKT ADDR  @H@@@@.              L    A1,PJS
)@@G@@AGENUM . WHERE PAGENUM=PAGE NUMBER TO BE RELEASED     @ @@@@.           JT
)@@G@@   CALL PGRLS$    @B@@@@.              J    ERROR             .   @[@@@@JU
)@@G@@.     @F@@@@.         THE SPECIFIED PAGE IS MOVED TO THE BOTTOM OF THE PJV
)@@G@@AGE   @D@@@@.          TABLE AND A IMMEDIATE SWAPOUT IS INITIATER.@[@@@@JW
)@@G@@.     @[@@@@.     @[@@@@.     @B@@@@          ON        MULTI**WRITE    JX
)@@G@@  .   @[@@@@.     @[@@@@$(1). @]@@@@PGRLS$*.    @F@@@@          L       JY
)@@G@@  A3,A0             . PUT PKT ADDR WHERE USED   @E@@@@          S       JZ
)@@G@@  X11,R3            . SAVE RETURN ADDR    @F@@@@          L         A2,PKA
)@@G@@G$RDL         . GET ADDR OF MULTI-ACT PKT @F@@@@          TS        PG$TKB
)@@G@@SW            . WAIT FOR ANYONE ELSE HERE @[@@@@.     @B@@@@.         SEKC
)@@G@@ARCH FOR THE REQUESTER PAGE   @[@@@@.     @E@@@@          L         R1,PKD
)@@G@@G$NPB         . GET # OF PAGE BUFFS @F@@@@          L         A2,PG$TBL KE
)@@G@@        . GET ADDR OF PAGE TABLE    @G@@@@          AN,U      A2,1      KF
)@@G@@        . SO WE DON'T HAVE TO BACKUP LATER@C@@@@          LXI,U     A2,1KG
)@@G@@              . SET INC @F@@@@          SE,H1     A1,1,*A2          . LOKH
)@@G@@OK FOR DESIRED PAGE     @F@@@@          J         LR0030            . NOKI
)@@G@@FIND - MUST BE RELEASED @[@@@@.     @E@@@@.         MAKE A2 PAGE THE LRUKJ
)@@G@@ <-> R1 = # OF OLDER ENTRIES  @[@@@@.     @G@@@@LRUPGE    JGD       R1,$KK
)@@G@@+2            . ARE THERE ANY OLDER ENTRIES?    @E@@@@          J       KL
)@@G@@  LR0020            . DESIRED PAGE IS LRU @E@@@@          L         A4,,KM
)@@G@@A2            . SAVE THIS PAGE #    @D@@@@          LXM,U     A1,1,A2   KN
)@@G@@        . 'FROM' ADDRESS@F@@@@          LXI,U     A1,1              . SEKO
)@@G@@T INC TO MOVE UP TABLE  @D@@@@          BT        A2,,*A1           . MOKP
)@@G@@VE UP TABLE @F@@@@          S         A4,,A2            . PUT ORIG ENTRYKQ
)@@G@@ IN LRU SLOT@G@@@@LR0020    LMJ       X11,SWPOUT        . START SWAP OUTKR
)@@G@@ OF THIS PAGE     @E@@@@          JGD       R3,LR0030         . SOMETHINKS
)@@G@@G WENT WRONG@F@@@@LR0030    L         S2,PG$RDL         . GET ADDR OF MUKT
)@@G@@LTI-ACT PKT @E@@@@          SZ        PG$TSL            . CLEAR LOCK ON KU
)@@G@@PACKET@F@@@@          L         A0,A3             . RESTORE DRIVER PKT AKV
)@@G@@DDR   @E@@@@          L         X11,R3            . AND RETURN ADDR     KW
)@@G@@@C@@@@          J         1,X11             . RETURN  @[@@@@.     @B@@@@KX
)@@G@@          OFF       MULTI**WRITE      .   @[@@@@.     @[@@@@/.    @[@@@@KY
)@@G@@.     @[@@@@.     @[@@@@.     @]@@@@. SWAPIN -  @F@@@@.         THIS IS KZ
)@@G@@AN INTERNALLY CALLED ROUTINE TO FETCH A DESIRED @B@@@@.         PAGE.  ILA
)@@G@@T'S CALLING SEQUENCE IS:@F@@@@.              L    A1,PAGENUM . WHERE PAGLB
)@@G@@ENUM=DESIRED PAGE NUMBER@D@@@@.              L,U  A4,FUNC . WHERE FUNC=(LC
)@@G@@R$ OF RDL$) @ @@@@.              CALL SWAPIN    @ @@@@.              J  LD
)@@G@@  ERROR     @[@@@@.     @F@@@@.         IF CONFIGURED, SWAPIN WILL ALSO LE
)@@G@@INITIATE A SWAP OUT     @G@@@@.         OF THE LRU.  AT EXIT I/O HAS BEELF
)@@G@@N INITIATER ON THE REQUESTED  @G@@@@.         PAGE AND IT'S POINTER HAS LG
)@@G@@BEEN PLACED AT THE TOP OF THE PAGE  @G@@@@.         TABLE.  IT IS THE CALH
)@@G@@LLING ROUTINES RESPONSIBILITY TO CHECK ON @G@@@@.         I/O COMPLETIONLI
)@@G@@ BEFORE PASSING PAG BUFFER BACK TO WSER.  THIS  @F@@@@.         METHOD ILJ
)@@G@@S USED TO ALLOW THE CALLING ROUTIEN TO INITIATE @E@@@@.         PREFETCHLK
)@@G@@ED I/O ON SEQUENTIAL BUFFERS IF DESIRED.  @[@@@@.     @[@@@@.     @]@@@@LL
)@@G@@. SWPOUT -  @G@@@@.         THIS IS A SECOND ENTRY POINT TO SWAPIN.  IT LM
)@@G@@IS RESPONSIBLE    @G@@@@.         FOR ALLOWING EXPLICIT OUTPUT OF DESIRELN
)@@G@@D BUFFERS.  IT IS USED  @D@@@@.         BY SWAPIN TO FORCE THE OUTPUT OFLO
)@@G@@ THE LRU.   @A@@@@.         IT'S CALLING SEQUENCE IS: @A@@@@.           LP
)@@G@@   L,U  A2,PGTBLENT .   @ @@@@.              CALL SWPOUT .  @ @@@@.     LQ
)@@G@@         J    ERROR .   @#@@@@.         WHERE - @G@@@@.              PGTLR
)@@G@@BLENT = THE ADDRESS OF THE ENTRY OF THE PAGE TABLE    @B@@@@.           LS
)@@G@@              TO BE OUTPUT.   @[@@@@.     @[@@@@.     @[@@@@.     @[@@@@LT
)@@G@@$(1). @]@@@@SWAPIN.     @G@@@@          L         R1,PG$NPB         . GELU
)@@G@@T # OF ENTRIES IN PAGE TBL    @F@@@@          L         A2,PG$TBL       LV
)@@G@@  . AND GET ADDR OF PAGE TBL  @G@@@@          AN,U      A2,1            LW
)@@G@@  . BACKUP TO FINISH WITH PROPER PTR@C@@@@          LXI,U     A2,1      LX
)@@G@@        . SET INC @G@@@@          SE,H1     A1,1,*A2          . SEARCH FLY
)@@G@@OR ENTRY IN PAGE TBL    @E@@@@          J         SI0010            . NOLZ
)@@G@@ FIND - GO DO IO  @B@@@@          ON        MULTI             .   @F@@@@MA
)@@G@@          TE,U      A4,RDL$           . IS THIS A READ AND LOCK   @B@@@@MB
)@@G@@          OFF       MULTI             .   @F@@@@          J         SI01MC
)@@G@@00            . GO MOVE TO TOP OF TABLE   @C@@@@SI0010    L,H1      A0,,MD
)@@G@@A2            . GET LRU @H@@@@          S,H1      A1,,A2            . SEME
)@@G@@T THIS BUFFER TO REQUESTED PAGE     @B@@@@          ON        MULTI     MF
)@@G@@        .   @E@@@@          LM,H2     A1,,A2            . GET BUFFER ADDMG
)@@G@@R     @B@@@@          OFF       MULTI             .   @B@@@@          ONMH
)@@G@@        WRITE             .   @E@@@@          JN        A0,SI0020       MI
)@@G@@  . MAY BE AN EMPTY PAGE@F@@@@          TE        A1,PG$SOB         . ORMJ
)@@G@@ IS IT BEING SWAPPED OUT@D@@@@          J         SI0020            . OKMK
)@@G@@ - CONTINUE @F@@@@          L,U       A0,PG$SIP         . GET ADDR OF INML
)@@G@@PUT I/O PKT @E@@@@          TP        FT$STU            . HAS I/O COMPLEMM
)@@G@@TED   @E@@@@          ER        WAIT$             . NO - WAIT FOR IT    MN
)@@G@@@B@@@@          OFF       WRITE             .   @]@@@@SI0020.     @B@@@@MO
)@@G@@          ON        MULTI             .   @F@@@@          S,H2      A1,,MP
)@@G@@A2            . MAKE AVILABLE FOR SWAPOUT @E@@@@          TE,U      A4,RMQ
)@@G@@$             . WAS THIS R$ OR RDL$ @F@@@@          SN,H2     A1,,A2    MR
)@@G@@        . RDL$ FLAG PAGE AS LOCKED  @B@@@@          OFF       MULTI     MS
)@@G@@        .   @F@@@@          L,U       A0,PG$SIP         . GET ADDR OF INMT
)@@G@@PUT I/O PKT @B@@@@          ON        WRITE++MULTI      .   @F@@@@      MU
)@@G@@    S         A4,FT$FNC         . SET FUNCTION CODE IN PKT  @B@@@@      MV
)@@G@@    OFF       WRITE++MULTI      .   @C@@@@          LMJ       A1,IOXFER MW
)@@G@@        . GO DO IO@D@@@@          J         0,X11             . ERROR REMX
)@@G@@TURN  @G@@@@SI0100    L         A4,,A2            . WANT TO MOVE THIS ENMY
)@@G@@TRY TO TOP  @G@@@@          LXI,XU    A2,-1             . BACKUP THRU TBMZ
)@@G@@L AND PUSH DOWN   @G@@@@          L         A1,A2             . A1 WILL NA
)@@G@@BE OUR 'TO' POINTER     @F@@@@          ANH       A2,(+0,1)         . A2NB
)@@G@@ WILL BE OUR 'FROM' LOC @F@@@@          LN        A0,R1             . CANC
)@@G@@LC DISTANCE INTO TABLE  @G@@@@          A         A0,PG$NPB         . SUND
)@@G@@BTRACT SEARCH REM FROM TABLE #@F@@@@          AN,U      A0,1            NE
)@@G@@  . ONE MORE FOR ONE WE GOT   @E@@@@          L         R1,A0           NF
)@@G@@  . PUSH DOWN THIS MANY @F@@@@          BT        A1,,*A2           . PUNG
)@@G@@SH DOWN TABLE ENTRIES   @F@@@@          L         A2,PG$TBL         . GENH
)@@G@@T START OF TBL ADDR     @E@@@@          S         A4,,A2            . PUNI
)@@G@@T THIS ONE ON TOP @]@@@@SI0200.     @B@@@@          ON        WRITE=0   NJ
)@@G@@        .   @E@@@@          J         1,X11             . READ ONLY - ALNK
)@@G@@L DONE@B@@@@          OFF       WRITE=0           .   @B@@@@          ONNL
)@@G@@        WRITE             .   @F@@@@          AN,U      A2,1            NM
)@@G@@  . GET ADDR OF LAST TBL ENTRY@D@@@@          A         A2,PG$NPB       NN
)@@G@@  . ADD TABLE SIZE@[@@@@/.    @[@@@@.     @F@@@@.         ENTER HERE TO NO
)@@G@@ONLY SWAPOUT PAGE POINTED TO BY PAGE TABLE@^@@@@.         INDEX IN A2.  NP
)@@G@@@[@@@@.     @]@@@@SWPOUT.     @G@@@@          TZ        PG$SOP          NQ
)@@G@@  . IS THERE REALLY AN OUTPUT PKT   @G@@@@          TP        0,A2      NR
)@@G@@        . IS THIS PAGE FREE TO SWAPOUT    @D@@@@          J         1,X1NS
)@@G@@1             . NO - RETURN   @E@@@@          LM,H2     A4,,A2          NT
)@@G@@  . GET ADDR OF BUFFER  @F@@@@          TNE       A4,PG$SOB         . ISNU
)@@G@@ IT BEING SWAPPED OUT   @D@@@@          J         1,X11             . YENV
)@@G@@S - GET OUT @B@@@@          ON        MULTI             .   @E@@@@      NW
)@@G@@    L         A5,A2             . SAVE TABLE POINTER  @F@@@@          L NX
)@@G@@        A2,PG$RDL         . GET MULTI-ACT PKT PTR     @E@@@@          TPNY
)@@G@@,XH2    PG$TSW            . IS THE FILE LOCKED  @F@@@@          J       NZ
)@@G@@  SO0010            . YES - GO WAIT AND TRY     @F@@@@          L       OA
)@@G@@  A2,A5             . RECOVER TABLE POINTER     @F@@@@          TN,XH2  OB
)@@G@@  0,A2              . WAS THIS PAGE LOCKED?     @D@@@@          J       OC
)@@G@@  1,X11             . NO - GET OUT  @]@@@@SO0010.     @G@@@@          L OD
)@@G@@        A2,A5             . MAKE SURE WE HAVE TABLE POINTER @F@@@@      OE
)@@G@@    S,H2      A4,,A2            . MAKE SURE PAGE IS UNLOCKED@B@@@@      OF
)@@G@@    OFF       MULTI             .   @G@@@@          L         A0,PG$SOP OG
)@@G@@        . GET ADDR OF SWOP OUT PACKET     @D@@@@          LMJ       A1,IOH
)@@G@@OXFER         . DO THE IO     @D@@@@          J         0,X11           OI
)@@G@@  . ERROR RETURN  @G@@@@          ON        MULTI             .  L A5,A2OJ
)@@G@@ . SAVE TABLE POINTER   @F@@@@          L         A2,PG$RDL         . GEOK
)@@G@@T MULTI-ACT PKT PTR     @D@@@@          TP,XH2    PG$TSW            . ISOL
)@@G@@ FILE LOCKED@D@@@@          J         1,X11             . YES - GET OUT OM
)@@G@@@E@@@@          L         A2,A5             . RESTORE TBL PTR     @B@@@@ON
)@@G@@          OFF       MULTI             .   @F@@@@          LN,U      A1,1OO
)@@G@@              . MARK THIS PAGE AS VOID    @E@@@@          S,H1      A1,,OP
)@@G@@A2            . IN TO PAGE TABLE    @C@@@@          J         1,X11     OQ
)@@G@@        . RETURN  @B@@@@          OFF       WRITE             .   @[@@@@OR
)@@G@@/.    @[@@@@.     @]@@@@. IOXFER -  @C@@@@.         INITIATES I/O TRANSFOS
)@@G@@ER. ON ENTRY:     @ @@@@.              A0 = FCT ADDR  @B@@@@.           OT
)@@G@@   A2 = PAGE TABLE POINTER    @B@@@@.         THIS ROUTINE ALTERS ONLY AOU
)@@G@@4.    @[@@@@.     @]@@@@IOXFER.     @E@@@@          TP        3,A0      OV
)@@G@@        . IS PACKET CLEAR?    @E@@@@          ER        WAIT$           OW
)@@G@@  . NO - WAIT FOR IT    @D@[@@          TZ        FT$STA            . ISOX
)@@G@@ STATUS OK? @D@@@[          L         A4,FT$STA         . IS STATUS OK? OY
)@@G@@@C@@@[          JZ        A4,IOXOK          . YES     @E@@@[          TEOZ
)@@G@@,U      A4,05             . IS IT JUST IO 05?   @D@[@@          J       PA
)@@G@@  0,A1              . ERROR RETURN  @E@@@[          J         0,A1      PB
)@@G@@        . NO - ERROR RETURN   @E@[@@          LM,H2     A4,,A2          PC
)@@G@@  . GET BUFFER ADDR     @E@@@[IOXOK     LM,H2     A4,,A2            . GEPD
)@@G@@T BUFFER ADDR     @D@@@@          S         A4,FT$BAD         . IN TO PAPE
)@@G@@CKET  @G@@@@          L,H1      A4,,A2            . USE PAGE # TO CALC FPF
)@@G@@ILE POS     @E@@@@          AN,U      A4,1              . BACKUP FOR PAGPG
)@@G@@E '0' @G@@@@          MSI       A4,PG$SIZ         . TIMES SIZE IN SECTORPH
)@@G@@S=DRUM ADDR @E@@@@          A         A4,FT$FSA         . PLUS 1ST SEC API
)@@G@@DDR   @E@@@@          S         A4,FT$DAD         . DRUM ADDR TO PACKET PJ
)@@G@@@E@@@@          A         A4,PG$SIZ         . CALC END OF PAGE    @F@@@@PK
)@@G@@          TG        A4,FT$LSA         . ARE WE OFF END OF FILE?   @E@@@@PL
)@@G@@          L         A4,FT$LSA         . YES - ADJUST ADDR   @G@@@@      PM
)@@G@@    AN        A4,FT$DAD         . LAST+1 LESS 1ST=# SEC TO DO     @G@@@@PN
)@@G@@          JN        A4,1,A1           . THIS MAY BE ONE PAGE TOO FAR    PO
)@@G@@@E@@@@          JZ        A4,1,A1           . NO ZERO I/OS EITHER @F@@@@PP
)@@G@@          MSI,U     A4,28             . CONVERT TO WORD COUNT     @F@@@@PQ
)@@G@@          S         A4,FT$WDC         . SET IN PKT TO XFER WORDS  @E@@@@PR
)@@G@@          ER        IO$               . DO I/O DON'T WAIT   @C@@@@      PS
)@@G@@    J         1,A1              . RETURN  @[@@@@.     @[@@@@.     @B@@@@PT
)@@G@@          END                         .   ___@@@TURN  @G@@@@SI0100    L PU
)@@G@@        A4,,A2            . WANT TO MOVE THIS ENTRY TO TOP  @G@@@@      PV
)@@G@@    LXI,XU    A2,-1             . BACKUP THRU TB*[S@@@*SDFF*@[@@@@ .    PW
)@@G@@@[@@@@ .    @[@@@@ .    @C@@@@ . THIS ROUTINE IS USED TO SEQUENTIALLY COPX
)@@G@@MPARE @D@@@@ .         CORRESPONDING RECORDS OF CORRESPONDING     @D@@@@PY
)@@G@@ .         FILES.  IT STARTS AT THE RECORDS DENOTED   @C@@@@ .         BPZ
)@@G@@Y AREC# AND BREC#, AND CONTINUES    @C@@@@ .         UNTIL IT FINDS CORRQA
)@@G@@ESPONDING RECORDS @D@@@@ .         WHICH DO NOT MATCH.  IN THE PROCESS IQB
)@@G@@T     @C@@@@ .         STRIPS OUT ANY RECORDS OF IMPROPER   @C@@@@ .    QC
)@@G@@     CYCLE SPECIFICATION IN ACCORDANCE    @C@@@@ .         WITH THE INFOQD
)@@G@@RMATION FOUND IN THE    @C@@@@ .         RESPECTIVE FIELD PACKET.  ANY CQE
)@@G@@ONTROL@C@@@@ .         IMAGES ARE ALSO STRIPPED OUT.  ANY   @C@@@@ .    QF
)@@G@@     TRAILING WORDS OF BLANKS ARE STRIPPED@D@@@@ .         FROM THE RECOQG
)@@G@@RD BEFORE COMPARISON IS MADE. @C@@@@ .         IT WILL ALSO EXIT IF IT FQH
)@@G@@INDS IT HAS @C@@@@ .         GONE BEYOND THE LOOK AHEAD RECORD    @ @@@@QI
)@@G@@ .         SPECIFICATION.     @[@@@@ .    @[@@@@ .    @[@@@@ .    @B@@@@QJ
)@@G@@        AXR$                          .   @B@@@@        STRUC$          QK
)@@G@@              .   @#@@@@        RESUME    @[@@@@ .    @[@@@@ .    @A@@@@QL
)@@G@@ . THIS IS THE REQUIRED PACKET*     @[@@@@ .    @[@@@@ .    @H@@@@ .    QM
)@@G@@              ......................................................... QN
)@@G@@@G@@@@ .       PKT+0      :         *LA FACTOR          :          #SIG QO
)@@G@@RECS  @H@@@@ .                  ........................................QP
)@@G@@................. @H@@@@ .                  :      *A FIELD PKT ADDR    QQ
)@@G@@  :      *B FIELD PKT ADDR    @H@@@@ .                  ................QR
)@@G@@......................................... @H@@@@ .                  :   QS
)@@G@@   *A ISDFI PKT ADDR      :      *B ISDFI PKT ADDR    @H@@@@ .          QT
)@@G@@        ......................................................... @G@@@@QU
)@@G@@ .                  :            AREC#            :            BREC#    QV
)@@G@@@H@@@@ .                  ..............................................QW
)@@G@@........... @G@@@@ .                  :            #RECA            :   QX
)@@G@@         #RECB    @H@@@@ .                  ............................QY
)@@G@@............................. @[@@@@ .    @[@@@@ .    @[@@@@ .    @E@@@@QZ
)@@G@@ARECNO  EQUF    3,X1,H1               . START REC# OF FILE A@E@@@@BRECNORA
)@@G@@  EQUF    3,X1,H2               . START REC# OF FILE B@G@@@@NORECA  EQUFRB
)@@G@@    4,X1,H1               . DISPLACEMENT IN A FILE PROCESSED@G@@@@NORECBRC
)@@G@@  EQUF    4,X1,H2               . DISPLACEMENT IN B FILE PROCESSED@E@@@@RD
)@@G@@AFPADR  EQUF    1,X1,H1               . A FIELD PKT ADDR    @E@@@@BFPADRRE
)@@G@@  EQUF    1,X1,H2               . B FIELD PACKET ADDR @G@@@@AIPADR  EQUFRF
)@@G@@    2,X1,H1               . WD CONTAINING A FILE PKT ADDR'S @G@@@@BIPADRRG
)@@G@@  EQUF    2,X1,H2               . WD CONTAINING B FILE PKT ADDR'S @F@@@@RH
)@@G@@LAFAC   EQUF    0,X1,H1               . LOOK AHEAD LIMIT FACTOR   @F@@@@RI
)@@G@@SIGREC  EQUF    0,X1,H2               . # OF ACTUAL RECORDS PASSED@F@@@@RJ
)@@G@@SDFLTH  EQUF    16,A0,T1              . LENGTH OF SDF DATA IMAGE  @E@@@@RK
)@@G@@IALOC   EQUF    11,A0,H2              . IMAGE AREA LOCATION @[@@@@$(0). RL
)@@G@@@B@@@@DONE    +0                            .   @[@@@@ .    @[@@@@$(1). RM
)@@G@@@]@@@@COMPARE*.   @F@@@@ BEGIN SUBROUTINE,NOSAVE              . LOOK FIRRN
)@@G@@ NEXT NO-MATCH    @D@@@@   L,U       X11,2,X11                . INC FOR RO
)@@G@@RETURN@I@@@@   L         R7,X11                   . SAVE RETURN IN REG WRP
)@@G@@HERE WE CAN DECREMEN    @F@@@@   L         X1,A0                    . MORQ
)@@G@@VE FAC ADDR WHERE USED  @E@@@@   SZ        A15                      . INRR
)@@G@@IT REC COUNT REG  @D@@@@   SZ        DONE                     . INIT EXIRS
)@@G@@T FLAG@E@@@@   L         A13,ARECNO               . GET STARTING REC# A RT
)@@G@@@E@@@@   L         A14,BRECNO               . BET STARTING REC# B @F@@@@RU
)@@G@@   REPEAT WHILE A15,LEQ,LAFAC  UNTIL NONZ,IN,DONE . LOOP TO COMPAR@F@@@@RV
)@@G@@      L         A0,AIPADR             . GET ISDFI PKT ADDR FOR A  @E@@@@RW
)@@G@@      L         A1,A13                . GET REC# WE WANT    @C@@@@      RX
)@@G@@CASENTRY CALLING    GET         . FITCH IT@E@@@@      CASE 1            RY
)@@G@@              . THIS NORMAL RETURN  @E@@@@         S         A1,A13     RZ
)@@G@@        . RESTORE FOR NEXT REC@G@@@@         S         A2,A8            SA
)@@G@@  . SAVE AREC LOC ACROSS NEXT GET   @F@@@@         L         A0,BIPADR  SB
)@@G@@        . GET ISDFI PKT ADDR FOR B  @E@@@@         L         A1,A14     SC
)@@G@@        . GET REC# WE NEED    @C@@@@         CASENTRY CALLING    GET    SD
)@@G@@  . FETCH IT@F@@@@         CASE 1                       . THIS IS NORMALSE
)@@G@@ RETURN     @E@@@@            S         A1,A14          . RESTORE FOR NESF
)@@G@@ZT REC@E@@@@            L         A0,AIPADR       . GET LENGTH OF A-REC SG
)@@G@@@B@@@@            L         A3,SDFLTH       .   @E@@@@            L     SH
)@@G@@    A0,BIPADR       . GET LENGTH OF B-REC @B@@@@            L         A4SI
)@@G@@,SDFLTH       .   @E@@@@            L         A1,A8           . GET LOC SJ
)@@G@@OF A-REC    @H@@@@            IF A3,IS,NONZ AND A4,IS,NONZ THEN . IF ONESK
)@@G@@ IS NULL DON'T CHECK    @F@@@@               CALL      CHECK        . SESL
)@@G@@E WHAT NEEDS BE DONE    @E@@@@               L         A9,A13       . GESM
)@@G@@T AREC # AND FLAG @D@@@@               SSL       A9,18        . ISSOLATESN
)@@G@@ FLAG @F@@@@               IF A6,IS,NEG OR A9,IS,ZERO THEN . WAS IT MIXESO
)@@G@@D MODE@F@@@@                  L         A9,(050505050505)  . MUST BE FIESP
)@@G@@LDATA @B@@@@               ELSE                   .   @D@@@@            SQ
)@@G@@      L         A9,(040040040040)  . ASCII@B@@@@               ENDIF    SR
)@@G@@              .   @B@@@@            ELSE                      .   @F@@@@SS
)@@G@@               DL        A5,A13       . GET REC NUMS AND FLAGS    @F@@@@ST
)@@G@@               DSL       A5,18        . SET TO TEST ASCII FLAGS   @F@@@@SU
)@@G@@               L         A9,(050505050505)  . ASSUME FD FIRST     @F@@@@SV
)@@G@@               IF A3,IS,NONZ THEN     . MAYBE ONE IS NOT NULL     @E@@@@SW
)@@G@@                  IF A5,IS,ODD THEN   . LOW BIT MEANS ASCII @G@@@@      SX
)@@G@@               L         A9,(040040040040)  . GET ASCII BLK WORD  @B@@@@SY
)@@G@@                  ENDIF               .   @F@@@@               ELSE     SZ
)@@G@@              . MAYBE OTHER IS NOT NULL   @F@@@@                  IF A6,TA
)@@G@@IS,ODD THEN   . TEST LOW BIT FOR ASCII    @G@@@@                     L  TB
)@@G@@       A9,(040040040040)  . GET ASCII BLK WORD  @B@@@@                  TC
)@@G@@ENDIF               .   @B@@@@               ENDIF                  .   TD
)@@G@@@B@@@@            ENDIF                     .   @G@@@@            A     TE
)@@G@@    A1,A3           . OK - SET INDEX  TO COMPARE RECS @B@@@@            TF
)@@G@@AN,U      A1,1            .   @F@@@@            LXI,XU    A1,-1         TG
)@@G@@  . GOING TO BACK THROUGH     @D@@@@            A         A2,A4         TH
)@@G@@  . SAME FOR B-REC@B@@@@            AN,U      A2,1            .   @B@@@@TI
)@@G@@            LXI,XU    A2,-1           .   @E@@@@            IF A3,IS,NONTJ
)@@G@@Z THEN        . STRIP OFF BLANKS    @E@@@@               REPEAT WHILE A9TK
)@@G@@,EQ,0,*A1 . STRIP OFF BLANKS  @E@@@@                  AN,U      A3,1    TL
)@@G@@  . DECREMENT COUNT     @D@@@@               ESCAPE WHEN A3,IS,ZERO . CRTM
)@@G@@EATED A NULL@B@@@@               ENDREP                 .   @B@@@@      TN
)@@G@@      ENDIF                     .   @E@@@@            IF A4,IS,NONZ THENTO
)@@G@@        . STRIP OFF BLANKS    @F@@@@               REPEAT WHILE A9,EQ,0,TP
)@@G@@*A2 . BLANKS OFF THIS ONE TOO @E@@@@                  AN,U      A4,1    TQ
)@@G@@  . DECREMENT COUNT     @D@@@@               ESCAPE WHEN A4,IS,ZERO . CRTR
)@@G@@EATED A NULL@B@@@@               ENDREP                 .   @B@@@@      TS
)@@G@@      ENDIF                     .   @G@@@@            IF A3,EQ,A4 THEN  TT
)@@G@@        . UNEQUAL LENGTHS MEANS NO-MATCH  @E@@@@               IF A3,IS,TU
)@@G@@NONZ THEN     . MAYBE BOTH NULL     @E@@@@                  REPEAT JGD,ATV
)@@G@@3       . JGD THROUGH COMPARE @F@@@@                     L         A4,1,TW
)@@G@@*A1  . GET WORD FROM AREC     @D@@@@                  ESCAPE WHEN A4,NEQTX
)@@G@@,1,*A2 . TEST IT  @D@@@@                     AN,U      A13,1  . RESET COTY
)@@G@@UNTERS@B@@@@                     AN,U      A14,1  .   @F@@@@            TZ
)@@G@@         S         X11,DONE  . YOU LOSE - NO MATCH    @B@@@@            UA
)@@G@@      ATEND               .   @F@@@@                     A,U       A15,1UB
)@@G@@  . MADE IT - INC SIGREC COUNT@B@@@@                  ENDREP            UC
)@@G@@  .   @B@@@@               ELSE                   .   @F@@@@            UD
)@@G@@      A,U       A15,1     . TWO NULLS ARE A MATCH     @B@@@@            UE
)@@G@@   ENDIF                  .   @B@@@@            ELSE                    UF
)@@G@@  .   @E@@@@               AN,U      A13,1        . BACK UP POINTERS    UG
)@@G@@@B@@@@               AN,U      A14,1        .   @F@@@@               S  UH
)@@G@@       X11,DONE     . UNEQUAL LENGTHS - NO MATCH@B@@@@            ENDIF UI
)@@G@@                    .   @B@@@@         CASE 0                       .   UJ
)@@G@@@E@@@@            AN,U      A13,1           . EOF ON B - BACK UP A@D@@@@UK
)@@G@@            S         X11,DONE        . TERMINATE LOOP@E@@@@            UL
)@@G@@JGD       R7,$+1          . BUMP FOR RETURN     @C@@@@            JGD   UM
)@@G@@    R7,$+1          . AGAIN   @#@@@@         ENDCASE  @D@@@@      CASE  UN
)@@G@@0                         . EOF ON A FILE @E@@@@         S         X11,DUO
)@@G@@ONE           . SET FLAG TO GET OUT @E@@@@         JGD       R7,$+1     UP
)@@G@@        . BUMP FOR RETURN     @#@@@@      ENDCASE     @]@@@@   ENDREP   UQ
)@@G@@@B@@@@   AN        A14,BRECNO               .   @G@@@@   AN        A13,AUR
)@@G@@RECNO               . SET PACKET VALUES FOR RETURN    @B@@@@   S        US
)@@G@@ A14,NORECB               .   @B@@@@   S         A13,NORECA             UT
)@@G@@  .   @B@@@@   S         A15,SIGREC               .   @B@@@@   L        UU
)@@G@@ A0,X1                    .   @E@@@@   L         X11,R7                 UV
)@@G@@  . RESTORE RETURN LINK @B@@@@ ENDBEG                               .   UW
)@@G@@@[@@@@ .    @B@@@@ END                                  .   ___@@@      UX
)@@G@@___@@@GET   @F@@@@         L         A0,BIPADR          . GET ISDFI PKT UY
)@@G@@ADDR FOR B  @E@@@@         L         A1,A14     *[S@@@*SDFF*@[@@@  .    UZ
)@@G@@@B@@@           AXR$                        .   @B@@@           DOWNDEF VA
)@@G@@                    .   @B@@@           ED$PROCS                    .   VB
)@@G@@@B@@@           STRUC$,'OLD PROGRAM'         .  @B@@@           RESUME  VC
)@@G@@                    .   @B@@@           ELT$                        .   VD
)@@G@@@[@@@  .    @[@@@  .    @[@@@  .    @^@@@ INFOBITS* RES       82  @E@@@ VE
)@@G@@P         FORM      12,6,18           . PRINT$ CONTROL WD   @F@@@ Q     VF
)@@G@@    FORM      12,6,18           . ITS CALLED COMPATIBILITY  @E@@@ LA*   VG
)@@G@@    +         LAHEAD            . LOOK AHEAD FACTOR   @D@@@ PEEK*     + VH
)@@G@@        PEEKQ             . PEEK FACTOR   @E@@@ CCNT*     +         0   VI
)@@G@@              . OUTPUT CARD COUNTER @E@@@ CHAR*     '     -'            VJ
)@@G@@        . CORRECTION CHARACTER@F@@@ INQUOTE*  +         072             VK
)@@G@@  . DEFAULT QUOTE CHAR (FD ') @E@@@ NRA*      +         0               VL
)@@G@@  . A FILE REC COUNTER  @E@@@ NRB*      +         0                 . B VM
)@@G@@FILE REC COUNTER  @F@@@ SQUEEZ*   +         0                 . SQUEEZE VN
)@@G@@OUT BLANKS FLAG   @G@@@ WINDOW*   +         0                 . WINDOW SVO
)@@G@@PEC - 4TH SPEC FIELD    @E@D@ COL1*     EQUF      WINDOW,,H1        . STVP
)@@G@@ARTING COLUMN SPEC@E@@@DCOL1      EQUF      WINDOW,,H1        . STARTINGVQ
)@@G@@ COLUMN SPEC@E@D@ COLN*     EQUF      WINDOW,,H2        . ENDING COLUMN VR
)@@G@@SPEC  @E@@@DCOLN      EQUF      WINDOW,,H2        . ENDING COLUMN SPEC  VS
)@@G@@@H@@@ COMPARED* +         0                 . FLAG TO ENSURE COMPARISON VT
)@@G@@WAS MADE    @[@@@ .     @[@@@ .     @E@@@ LINE      RES       IMLEN     VU
)@@G@@        . EDIT$ BUILDING AREA @F@@@ IAREA1    RES       IABLEN          VV
)@@G@@  . IMAGE AREA FOR INPUT 1    @F@@@ IAREA2    RES       IABLEN          VW
)@@G@@  . IMAGE AREA FOR INPUT 2    @D@@@ INDEX1    RES       INLEN           VX
)@@G@@  . INDEX AREA 1  @D@@@ INDEX2    RES       INLEN             . INDEX ARVY
)@@G@@EA 2  @E@@@ BUF1      RES       224               . SDFO OUTPUT BUFFER  VZ
)@@G@@@E@@@ BUF2      RES       224               . SDFO OUTPUT BUFFER  @[@@@ WA
)@@G@@.     @]@@@ FIELDPKT1*. @B@@@           +         010200,0          .   WB
)@@G@@@B@@@           DO 7 ,    + 0               .   @B@@@ PFSPKT1*  'FUNNYFIWC
)@@G@@LE1'                 .  @B@@@           +         0D                .   WD
)@@G@@@B@@@           +         0                 .   @B@@@           +       WE
)@@G@@  1,0               .   @B@@@           +         0D                .   WF
)@@G@@@B@@@           RES       4                 .   @B@@@ ISDFIPKT1* 'FUNNYFWG
)@@G@@ILE1'                 . @B@@@           +         0                 .   WH
)@@G@@@B@@@           +         020,0,0           .   @B@@@           +       WI
)@@G@@  BUFLEN,0          .   @B@@@           +         0                 .   WJ
)@@G@@@B@@@           +         0,0377777         .   @B@@@           +       WK
)@@G@@  BUFLEN//28,BUFNO  .   @B@@@           +         0                 .   WL
)@@G@@@B@@@           +         WKLOC1,PGTBL1     .   @B@@@           +       WM
)@@G@@  BUFLEN,IABLEN     .   @B@@@           +         0,IAREA1          .   WN
)@@G@@@B@@@           +         0D                .   @B@@@           +       WO
)@@G@@  INLEN,INDEX1      .   @B@@@           +         WKAREA,0          .   WP
)@@G@@@B@@@           +         0D                .   @B@@@C          +       WQ
)@@G@@  0D                .   @E@@@           RES       3                 . JUWR
)@@G@@ST TO BE SAFE     @B@@@ PGTBL1    RES       BUFNO             .   @B@@@ WS
)@@G@@WKLOC1    RES       BUFNO*BUFLEN      .   @[@@@ .     @]@@@ FIELDPKT2*. WT
)@@G@@@B@@@           +         020100,0          .   @B@@@           DO 7 ,  WU
)@@G@@  + 0               .   @B@@@ PFSPKT2*  'FUNNYFILE2'                .   WV
)@@G@@@B@@@           +         0D                .   @B@@@           +       WW
)@@G@@  0                 .   @B@@@           +         1,0               .   WX
)@@G@@@B@@@           +         0D                .   @B@@@           RES     WY
)@@G@@  4                 .   @B@C@ ISDFIPKT2* 'FUNNYFILE2'                .  WZ
)@@G@@@B@@@CISDFIPKT2* 'FUNNYFILE2'               .   @B@@@           +       XA
)@@G@@  0                 .   @B@@@           +         020,0,0           .   XB
)@@G@@@B@@@           +         BUFLEN,0          .   @B@@@           +       XC
)@@G@@  0                 .   @B@@@           +         0,0377777         .   XD
)@@G@@@B@@@           +         BUFLEN//28,BUFNO  .   @B@@@           +       XE
)@@G@@  0                 .   @B@@@           +         WKLOC2,PGTBL2     .   XF
)@@G@@@B@@@           +         BUFLEN,IABLEN     .   @B@@@           +       XG
)@@G@@  0,IAREA2          .   @B@@@           +         0D                .   XH
)@@G@@@B@@@           +         INLEN,INDEX2      .   @B@@@           +       XI
)@@G@@  WKAREA,0          .   @B@@@           +         0D                .   XJ
)@@G@@+@@@@[@E@C@ ^@)^@)^@)^@)^@) S)^@)^@)^@)^@)A[^^@)^@)^@)^@)^@)^@)^@)^@) 0)XK
)@@G@@+@@@@@@B@@@C          +         0D                .   @E@@@           REXL
)@@G@@S       3                 . JUST TO BE SAFE     @B@@@ PGTBL2    RES     XM
)@@G@@  BUFNO             .   @B@@@ WKLOC2    RES       BUFNO*BUFLEN      .   XN
)@@G@@@]@@@ FIELDPKT3*. @B@@@           +         030300,0          .   @B@@@ XO
)@@G@@          DO 7 ,    + 0               .   @B@@@ PFSPKT3*  'FUNNYFILE3'  XP
)@@G@@              .   @B@@@           +         0D                .   @B@@@ XQ
)@@G@@          +         0                 .   @B@@@           +         1,0 XR
)@@G@@              .   @B@@@           +         0D                .   @B@@@ XS
)@@G@@          RES       4                 .   @[@@@ .     @]@@@ MASTERPKT*. XT
)@@G@@@B@@@           +         0377777,0         .   @B@@@           +       XU
)@@G@@  FIELDPKT1,FIELDPKT2 . @B@@@           +         ISDFIPKT1,ISDFIPKT2 . XV
)@@G@@@B@@@           RES       9                 .   @B@@@           +       XW
)@@G@@  LAHEAD,0          .   @B@@@           RES       6                 .   XX
)@@G@@@B@@@ SDFOPKT*  +         0D                .   @B@@@           +       XY
)@@G@@  0                 .   @B@@@           +         010,0,0           .   XZ
)@@G@@@B@@@           +         224,0             .   @B@@@           +       YA
)@@G@@  0                 .   @B@@@           +         BUF1,BUF2         .   YB
)@@G@@@B@@@           +         8,0               .   @B@@@           +       YC
)@@G@@  01,0              .   @B@@@           +         01,0              .   YD
)@@G@@@B@@@           +         0                 .   @D@@@ EDTPKT*   E$PKTA  YE
)@@G@@  IMLEN,EDBUF 'TBL',E$TABLE      .  @E@@@ EDBUF     RES       IMLEN     YF
)@@G@@        . MASTER EDIT PKT BUF @G@@@           RES       10              YG
)@@G@@  . SAFTY SPACE INCASE OF OVERFLOW  @B@@@ EDITPKT*  E$PKT     IMLEN,LINEYH
)@@G@@        .   @[@@@ .     @[@@@ /.    @[@@@  .    @[@@@  .    @]@@@  . DOWYI
)@@G@@N -   @F@@@  .        THIS IS THE CSECT FOR THE DOWNDATER.  IT IS RESPONYJ
)@@G@@SIBLE @F@@@  .        FOR CALLING ROUTINES TO DO INTIALIZATION, INFOR HAYK
)@@G@@NDLING@C@@@  .        DOWNDATING, AND CLEANING UP TASKS.    @[@@@  .    YL
)@@G@@@[@@@  .    @F@@@ FLDPKT    EQUF      0,A0              . ADDR OF FIELD YM
)@@G@@CONTROL PKT @F@@@ SPEC      EQUF      0,A0,S1           . SPEC FIELD OF YN
)@@G@@FIELDPKT    @F@@@ FFREE     EQUF      6,A0              . FREE CODES FROYO
)@@G@@M FIASG     @E@@@ QUAL      EQUF      2,A0              . QUALIFIER OF FYP
)@@G@@ILE   @C@@@ NAME      EQUF      4,A0              . FILENAME@E@@@ FABS  YQ
)@@G@@    EQUF      0,A0,H2           . ABS F-CYCLE OF FILE @G@@@ HTRK      EQYR
)@@G@@UF      7,A0              . HIGHEST TRK ALLOCATED OF FILE   @E@@@ INTF  YS
)@@G@@    EQUF      8,A0              . INTERNAL FILE NAME  @F@@@ PFPPKT    EQYT
)@@G@@UF      8,A0              . START OF PFP PKT AREA     @D@@@ CYCLE     EQYU
)@@G@@UF      1,A0              . CYCLE WORD    @F@@@ CYCN      EQUF      1,A0YV
)@@G@@,XH1          . ABS CYC OF ELT IF ANY     @F@@@ CYCNIND   EQUF      1,A0YW
)@@G@@,XH2          . ABS CYC INDICATOR FLG     @[@@@  .    @[@@@  .    @[@@@ YX
)@@G@@ .    @[@@@ $(1). @]@@@ DOWNDATE*.  @B@@@  BEGIN MAINPROGRAM            YY
)@@G@@        .   @E@@@    CALL      SIGNON                   . GO PRINT SIGNOYZ
)@@G@@N LINE@F@@@    S         X11,R15                  . IN CASE WE USE AS SEZA
)@@G@@T REG @F@@@    L,U       A0,INFOBITS              . GET INFOR BUFFER ADDZB
)@@G@@R     @D@@@    CASENTRY CALLING RINF$             . READ INFOR    @E@@@ ZC
)@@G@@   CASE 0                             . THIS ERROR RETURN   @G@@@       ZD
)@@G@@ER        PRINT$                . PRINT$ CONTROL WORD IS SUPPLIED @E@@@ ZE
)@@G@@      L,U       A0,FATAL              . SET FATAL ERROR FLAG@E@@@       ZF
)@@G@@CALL      ERROR                 . ERROR TERMININATE   @F@@@    CASE 1   ZG
)@@G@@                          . THIS IS NORMAL RETURN     @F@@@    ENDCASE  ZH
)@@G@@                          . NOACTION FOR NORMAL CASE  @E@@@    L,U      ZI
)@@G@@ A0,'&'                   . GET MSG STOP CHAR   @E@@@    S,S1      A0,AUZJ
)@@G@@XBUF                . INIT SPECIAL BUFFER @E@@@    L         A7,INFOBITSZK
)@@G@@              . GET INPUT OPTIONS   @E@@@    IF A7,ODDP,OPT('B') THEN   ZL
)@@G@@        . WAS B-OPT SPECIFIED @G@@@       S         X11,SQUEEZ          ZM
)@@G@@  . YES - SET SQUEEZ OUT BLKS FLG   @B@@@    ENDIF                      ZN
)@@G@@        .   @F@@@    CALL      GETSPECS                 . GET INPUT SPECZO
)@@G@@ FIELDS     @F@@@    L         A0,(P 0200,0,CONTIN)     . SET FOR II CONZP
)@@G@@TING ROUTINE@G@@@    ER        IALL$                    . REGISTER CONTEZQ
)@@G@@NGENCY ROUTINE    @G@@@    L,U       A0,MASTERPKT             . GET ADDRZR
)@@G@@ OF THE MASTER PACKET   @F@@@    L         A1,(1,1)                 . STZS
)@@G@@ART WITH FIRST RECS     @F@@@    S         A1,3,A0                  . PLZT
)@@G@@ACE IN MASTER PACKET    @E@@@    L         A7,INFOBITS              . GEZU
)@@G@@T OPTIONS AGAIN   @F@@@    IF NONZ,IN,MONSTER THEN            . IS PROGRZV
)@@G@@AM FILE FLAG SET  @G@@@       CALL      DOWNTOC               . YES - DOZW
)@@G@@WNDATE PROGRAM FILES    @B@@@    ELSE                               .   ZX
)@@G@@@G@@@       IF A7,ODDP,OPT('N') AND ZERO,IN,SDFOPKT THEN . MUST WE CONTIZY
)@@G@@NUE?  @F@@@          L,U       A0,NOUSERR         . NO - NO USE PROCEEDIZZ
)@@G@@NG    @E@@@          CALL      ERROR              . PRINT ERROR AND TERMAA
)@@G@@@B@@@       ELSE                            .   @E@@@          IF A7,ODDAB
)@@G@@P,OPT('T') THEN     . IS THIS PCF DOWNDATE@F@@@             CALL      PCAC
)@@G@@FDOWN         . YES - GO DOWNDATE PCFS    @B@@@          ELSE           AD
)@@G@@              .   @F@@@             CALL      SCAN            . DO SIMPLAE
)@@G@@E ELEMENT DOWNDATE@B@@@          ENDIF                        .   @B@@@ AF
)@@G@@      ENDIF                           .   @B@@@    ENDIF                AG
)@@G@@              .   @D@@@    CALL      FINISH                   . GO FREE AH
)@@G@@FILES @E@@@    CALL      SIGNOFF                  . LEAVE GRACEFULLY    AI
)@@G@@@B@@@  ENDBEG                               .   @[@@@ /.    @[@@@  .    AJ
)@@G@@@[@@@  .    @]@@@  . SIGNON - @G@@@  .        THIS ROUTINE IS PROVIDED TAK
)@@G@@O CREATE AND PRINT THE DOWNDATER    @G@@@  .        SIGNON LINE PLUS EXEAL
)@@G@@CUTE OTHER SIGNON TIME ACTIVITIES.  THIESE@G@@@  .        INCLUDE OBTAINAM
)@@G@@ING THE INITIAL CORE SUPS FROM THE USER PCT AND @B@@@  .        SETTING AN
)@@G@@THE DEMAND STATUS FLAG. @[@@@  .    @[@@@  .    @[@@@  .    @[@@@ $(0). AO
)@@G@@@D@@@ MAPD      EQUF      $,,S5             . DAY OF MONTH  @D@@@ MAPM  AP
)@@G@@    EQUF      $,,S4             . MONTH OF YEAR @E@@@ MAPY      EQUF    AQ
)@@G@@  $,,S6             . YEAR OF TDATE WORD  @G@@@           +         D$ATAR
)@@G@@E             . TDATE WORD SUPPIED BY MAPPER    @[@@@  .    @E@@@ DEMANDAS
)@@G@@*   +         0                 . DEMAND STATUS FLAG  @E@@@ STARTIME* + AT
)@@G@@        0                 . SAVE FOR CORE TIME  @F@@@ DATE*     +       AU
)@@G@@  0                 . SAVE FOR CURRENT DATE     @E@@@ PCTBUF*   RES     AV
)@@G@@  027               . BUFFER FOR PCT$     @[@@@  .    @[@@@  .    @[@@@ AW
)@@G@@$(1). @]@@@ SIGNON*.    @B@@@  BEGIN SUBROUTINE                     .   AX
)@@G@@@H@@@    IF A4,EQ,4,,U THEN                 . A4 SET WITH PROG STATUS ONAY
)@@G@@ PROG LOAD  @E@@@       S         X11,DEMAND            . THIS IS A DEMAAZ
)@@G@@ND RUN@B@@@    ENDIF                              .   @F@@@A   IF A5,ODDBA
)@@G@@P,(1*/34)                 . A5 HAS STATUS OF BRKPT    @E@@@A      SZ    BB
)@@G@@    DEMAND                . BREAKPOINTED OUTPUT @B@@@A   ENDIF          BC
)@@G@@                    .   @E@@@    L         A0,(027,PCTBUF)          . GEBD
)@@G@@T PCT$ ACCESS WORD@G@@@    M$TIME                             . USE GENEBE
)@@G@@RAL PROC TO FETCH SUPS  @E@@@    S         A1,STARTIME              . SABF
)@@G@@VE FOR SIGNOFF    @F@@@    S         R2,DATE                  . SAVE CURBG
)@@G@@RENT DATE OF RUN  @G@@@    PRINT,EDIT                         PACKET,EDIBH
)@@G@@TPKT,,U  . OPEN EDIT$   @E@@@    E$FD1     ('DOWN')                 . PRBI
)@@G@@OCESSOR IDENTIFIER@E@@@    E$SKIP    3                        . LEAVE SOBJ
)@@G@@ME ROOM     @E@@@    E$DECV    (LEVEL)                  . CURRENT LEVEL BK
)@@G@@IS EQU@D@@@    E$CHAR    '.'                      . SEPARATOR     @E@@@ BL
)@@G@@   E$DECV    (VERSION)                . VERSION IS EQU'ED   @D@@@    E$CBM
)@@G@@HAR    '-'                      . SEPARATOR     @E@@@    L         A0,MABN
)@@G@@PY                  . GET YEAR OF MAP     @E@@@    MI,U      A0,12      BO
)@@G@@              . MAKE ROOM FOR MONTH @E@@@    A         A1,MAPM          BP
)@@G@@        . ADD IN MONTH OF MAP @D@@@    AN,U      A1,1                   BQ
)@@G@@  . MONTH 0-11    @E@@@    MI,U      A1,31                    . MAKE ROOBR
)@@G@@M FOR DAY   @D@@@    A         A2,MAPD                  . ADD IN DAY    BS
)@@G@@@D@@@    AN,U      A2,1                     . ADJ FOR ZERO  @E@@@    DI,BT
)@@G@@U      A1,26                    . GET LAST ID CHAR    @E@@@    DI,U     BU
)@@G@@ A0,26                    . GET FIRST ID CHAR   @F@@@    LSSL      A2,30BV
)@@G@@                    . PREPARE TO CREATE CHAR ID @E@@@    DSL       A1,30BW
)@@G@@                    . FOR THIS MAP TIME   @E@@@    A,U       A2,'AA'    BX
)@@G@@              . CONVERT TO FIEDATA  @E@@@    L         A0,A2            BY
)@@G@@        . PUT WHERE NEEDED    @E@@@    E$FD1                            BZ
)@@G@@  . SET IN SIGNON STRING@E@@@    E$SKIP    2                        . LECA
)@@G@@AVE SOME ROOM     @E@@@    E$DAY1    DATE                     . SET IN CCB
)@@G@@URRENT DATE @E@@@    E$SKIP    -3                       . DON'T WANT LASCC
)@@G@@T PART@D@@@    E$CHAR    '-'                      . SEPARATOR     @G@@@ CD
)@@G@@   E$TIME    DATE                     . SET CURRENT TIME OF EXECUTION   CE
)@@G@@@D@@@    ENDPRINT                           . PRINT LINE    @B@@@  ENDBECF
)@@G@@G                               .   @[@@@ /.    @[@@@  .    @[@@@  .    CG
)@@G@@@#@@@  . GETSPECS -     @G@@@  .        THIS ROUTINE IS RESPONSIBLE FOR CH
)@@G@@RETRIEVING AND ANALIZING THE  @G@@@  .        PROCESSOR CARD SPEC FIELDSCI
)@@G@@.  EACH FIELD IS EVALUATED SEQUEN-  @H@@@  .        TIALLY, NORMAL PROCECJ
)@@G@@SSOR CALL DEFAULTS ARE CONSIDERED.  FILES ARE   @F@@@  .        ASSIGNEDCK
)@@G@@ AND READ LOCATIONS WITHIN THOSE FILES LOCATED. @[@@@  .    @[@@@  .    CL
)@@G@@@[@@@  .    @[@@@ $(0). @E@@@ FILETYPE  +         0                 . SACM
)@@G@@VE FORFILE TYPE ID@F@@@ MONSTER*  +         0                 . PROG FILCN
)@@G@@E DOWNDATE FLAG   @F@@@ DATA*     +         0                 . DATA FILCO
)@@G@@E DOWNDATE FLAG   @F@@@ SPECPOPT* +         0                 . ELT TYPECP
)@@G@@ P-OPT DOWNDATE   @G@@@ OUTFIL*   +         0                 . FLAG TO CQ
)@@G@@INSURE OUTPUT NECESSARY @G@@@ OUTFILTYP +         0                 . FLCR
)@@G@@AG TO TYPE OUTPUT FILE OR ELT @[@@@  .    @[@@@  .    @[@@@  .    @[@@@ CS
)@@G@@$(1). @]@@@ GETSPECS*.  @B@@@  BEGIN SUBROUTINE                     .   CT
)@@G@@@[@@@    .  @^@@@    . DO FIRST SPEC FIELD@[@@@    .  @G@@@    L,U      CU
)@@G@@ A0,FIELDPKT1             . GET ADDR OF FIRST CONTROL PKT   @E@@@    CALCV
)@@G@@L      ASSIGN                   . HANDLE FILE ASSIGN  @F@@@    S        CW
)@@G@@ A0,FILETYPE              . RETURN CODE IS FILE TYPE  @G@@@    L,U      CX
)@@G@@ A0,FIELDPKT1             . AGAIN GET SPEC 1 CONTROL PKT    @F@@@    DL CY
)@@G@@       A1,INTF                  . GET INTERNAL FILE NAME    @E@@@    DS CZ
)@@G@@       A1,ISDFIPKT1             . SET IN ISDFI PKT    @F@@@    CALL     DA
)@@G@@ DOPFS                    . HANDLE ANY PROG FILE ELTS @E@@@    IF A0,IS,DB
)@@G@@NEG THEN                  . WAS THER AN ELT?    @F@@@       IF NONZ,IN,FDC
)@@G@@ILETYPE THEN        . WAS THE FILE A PROG FILE? @G@@@          S        DD
)@@G@@ X11,MONSTER        . YES - SET PROG FILE DOWNDATE FLG@B@@@       ELSE  DE
)@@G@@                          .   @F@@@          S         X11,DATA         DF
)@@G@@  . MUST BE DATA FILE DOWNDATE@H@@@          L,U       A0,FIELDPKT1     DG
)@@G@@  . GET ADDR OF CONTROL PKT THIS SPEC     @F@@@          L         A1,HTDH
)@@G@@RK            . GET HIGHEST TRK ALLOCATED @E@@@          A,U       A1,1 DI
)@@G@@              . ADJ FOR TRK ZERO    @F@@@          MSI,U     A1,64      DJ
)@@G@@        . WANT SECTOR SIZE OF FILE  @F@@@          S,H2      A1,PFPPKT+9DK
)@@G@@        . FAKE ENTRY IN PFS PKT     @B@@@       ENDIF                   DL
)@@G@@        .   @B@@@    ELSE                               .   @F@@@       DM
)@@G@@IF ZERO,IN,FILETYPE THEN        . WAS THIS A DATA FILE?     @F@@@       DN
)@@G@@   L,U       A0,MIXMODERR       . YES - ELT NAME ILLEGAL    @G@@@       DO
)@@G@@   L,U       A1,FIELDPKT1       . GET ADDR OF CONT OF ERROR FIELD @D@@@ DP
)@@G@@         CALL      ERROR              . ERROR OFF     @B@@@       ENDIF DQ
)@@G@@                          .   @B@@@    ENDIF                            DR
)@@G@@  .   @F@@@    IF ZERO,IN,MONSTER THEN            . MUST WE OPEN FILE FODS
)@@G@@R READ@G@@@       L         A0,(FIELDPKT1,ISDFIPKT1)  . YES - NO IN PROGDT
)@@G@@ FILE MODE  @E@@@       CALL      GETOPN                . GO OPEN ISDFI DU
)@@G@@INPUT @B@@@    ENDIF                              .   @[@@@    .  @ @@@ DV
)@@G@@   . DO SECOND SPEC FIELD     @[@@@    .  @G@@@    L,U       A0,FIELDPKTDW
)@@G@@2             . GET ADDR OF CONTROL PKT SPEC 2  @G@@@    CALL      ASSIGDX
)@@G@@N                   . HANDLE ANY FILE ASSIGNMENTS     @F@@@    S        DY
)@@G@@ A0,FILETYPE              . SAVE TYPE OF FILE FLAG    @G@@@    L,U      DZ
)@@G@@ A0,FIELDPKT2             . GET ADDR OF CONTROL PKT AGAIN   @F@@@    DL EA
)@@G@@       A1,INTF                  . GET INTERNAL FILENAME     @E@@@    DS EB
)@@G@@       A1,ISDFIPKT2             . SET IN ISDFI PKT    @F@@@    CALL     EC
)@@G@@ DOPFS                    . HANDLE ANY ELT FIELDS     @E@@@    IF A0,IS,ED
)@@G@@NEG THEN                  . WAS THER AN ELT?    @F@@@       IF ZERO,IN,FEE
)@@G@@ILETYPE THEN        . NO - MUST BE DATA FILE    @G@@@          S        EF
)@@G@@ X11,DATA           . SET DATA FILE FLAG JUST IN CASE @F@@@          L,UEG
)@@G@@       A0,FIELDPKT2       . GET FIELD CONTROL PKT ADDR@F@@@          L  EH
)@@G@@       A1,HTRK            . GET HIGEST TRK ALLOCATED  @E@@@          A,UEI
)@@G@@       A1,1               . ADJ FOR ZERO TRK    @F@@@          MSI,U    EJ
)@@G@@ A1,64              . CALC FILE SIZE IN SECTORS @G@@@          S,H2     EK
)@@G@@ A1,PFPPKT+9        . FAKE ENTRY IN PFS PKT FOR ISDFI @G@@@          IF EL
)@@G@@       NONZ,IN,MONSTER THEN . BUT WAS PROG FILE DONDATE SET @E@@@       EM
)@@G@@      L,U       A0,MIXMODERR    . YES - CONFUSED SPECS@G@@@             EN
)@@G@@L,U       A1,FIELDPKT2    . THIS IS ADDR OF OFFENDING PKT   @D@@@       EO
)@@G@@      CALL      ERROR           . ERROR OFF     @B@@@          ENDIF    EP
)@@G@@                    .   @B@@@       ELSE                            .   EQ
)@@G@@@F@@@          IF NONZ,IN,DATA THEN         . THIS FIELD IS PROGFILE    ER
)@@G@@@E@@@             L,U       A0,MIXMODERR    . MIXED SPEC FIELDS   @F@@@ ES
)@@G@@            L,U       A1,FIELDPKT2    . ADDR OF OFFENDING PKT     @D@@@ ET
)@@G@@            CALL      ERROR           . ERROR OFF     @B@@@          ELSEU
)@@G@@E                         .   @F@@@             IF ZERO,IN,MONSTER THEN EV
)@@G@@  . NOT REALLY PROG FILE MODE @G@@@                L,U       A0,1       EW
)@@G@@  . HAVE TO GET ELT$ FROM SPEC ONE  @E@@@                CASENTRY CALLINEX
)@@G@@G SELT$ . FILE PKT AS BEFORE  @I@@@                CASE 0,1             EY
)@@G@@  . ANY ERRORS SHOULD HAVE ALREADY BEEN CAUG    @B@@@                ENDEZ
)@@G@@CASE                .   @G@@@                L,U       A0,FIELDPKT2  . GFA
)@@G@@ET SPEC 2 CONTROL PKT ADDR    @F@@@                CALL      DOPFS      FB
)@@G@@  . TRY FOR PFS ON THIS ELT   @B@@@             ENDIF                   FC
)@@G@@  .   @B@@@          ENDIF                        .   @B@@@       ENDIF FD
)@@G@@                          .   @B@@@    ELSE                             FE
)@@G@@  .   @F@@@       SZ        DATA                  . RESET DATA FILE FLG FF
)@@G@@IF SET@E@@@       IF ZERO,IN,FILETYPE THEN        . WAS IT A DATA FILE? FG
)@@G@@@D@@@          L,U       A0,MIXMODERR       . YES - MISTAKE!@F@@@       FH
)@@G@@   L,U       A1,FIELDPKT2       . GET OFFENDING PKT ADDR    @D@@@       FI
)@@G@@   CALL      ERROR              . ERROR OFF     @B@@@       ENDIF       FJ
)@@G@@                    .   @G@@@       IF NONZ,IN,MONSTER THEN         . BUFK
)@@G@@T WAS THERE AN ELT IN SPEC 1? @I@@@          SZ        MONSTER          FL
)@@G@@  . NO - BUT WE'RE GOING TO GIVE IT THIS ONE    @G@@@          L,U      FM
)@@G@@ A0,FIELDPKT1       . GET CONTROL PKT FOR FIELD 1     @E@@@          CALFN
)@@G@@L      DOPFS              . DO FOR SAME ELT NAME@F@@@          L        FO
)@@G@@ A0,(FIELDPKT1,ISDFIPKT1)  . GO OPEN SDFI INPUT @D@@@          CALL     FP
)@@G@@ GETOPN             . OPEN ISDFI    @B@@@       ENDIF                   FQ
)@@G@@        .   @B@@@    ENDIF                              .   @F@@@    IF FR
)@@G@@ZERO,IN,MONSTER THEN            . DO WE OPEN FOR READ YET   @G@@@       FS
)@@G@@L         A0,(FIELDPKT2,ISDFIPKT2)  . YES - OPEN ISDFI SPEC 2     @B@@@ FT
)@@G@@      CALL      GETOPN                .   @B@@@    ENDIF                FU
)@@G@@              .   @[@@@    .  @^@@@    . DO THIRD SPEC FIELD@[@@@    .  FV
)@@G@@@H@@@    L,U       A0,FIELDPKT3             . GET CONTROL PKT FOR THIRD FW
)@@G@@SPEC FIELD  @F@@@    CALL      ASSIGN                   . GO TRY FOR FILFX
)@@G@@E ASSIGN    @E@@@    S         A0,FILETYPE              . SAVE FILE TYPEFY
)@@G@@ FLAG @F@@@    L,U       A0,FIELDPKT3             . GET ADDR OF CONTROL FZ
)@@G@@PKT   @F@@@    DL        A1,INTF                  . GET INTERNAL FILE NAGA
)@@G@@ME    @E@@@    DS        A1,SDFOPKT               . PUT IN SDFO PKT     GB
)@@G@@@F@@@    SZ        A0                       . PRELOAD WITH SDF FILE FLAGGC
)@@G@@@E@@@    L         A7,INFOBITS              . GET INPUT OPTIONS   @E@@@ GD
)@@G@@   IF NONZ,IN,ENL THEN                . IS THERE AN ELT NAME@F@@@       GE
)@@G@@IF A7,ODDP,OPT('P') THEN        . OBVIOUS OPTION CONFLICT   @E@@@       GF
)@@G@@   L,U       A0,NOUSERR         . LOAD ERROR CODE     @^@@@          CALGG
)@@G@@L      ERROR@B@@@       ENDIF                           .   @E@@@       GH
)@@G@@L,U       A0,1                  . SET PROG FILE FLAG  @F@@@       IF ZERGI
)@@G@@O,IN,FILETYPE THEN        . CHECK FOR POSSIBLE ERROR  @D@@@          L,UGJ
)@@G@@       A0,OUTFILERR       . GET ERROR CODE@F@@@          L,U       A1,FIGK
)@@G@@ELDPKT3       . AND OFFENDING PKT ADDR    @D@@@          CALL      ERRORGL
)@@G@@              . ERROR OFF     @B@@@       ENDIF                         GM
)@@G@@  .   @D@@@       DL        A3,ENAME              . GET ELTNAME   @E@@@ GN
)@@G@@      DL        A5,('            ')   . POSSIBLE NO VERSION @F@@@       GO
)@@G@@IF NONZ,IN,EVL THEN             . WAS THERE A VERSION NAME? @D@@@       GP
)@@G@@   DL        A5,EVER            . YES - GET IT  @B@@@       ENDIF       GQ
)@@G@@                    .   @B@@@    ELSE                               .   GR
)@@G@@@E@@@       IF ZERO,IN,FILETYPE THEN        . IS IT A DATA FILE   @G@@@ GS
)@@G@@         IF A7,ODDP,OPT('P') THEN     . YES - BUT DO THEY WANT ONE?     GT
)@@G@@@E@@@             L,U       A0,OUTFILERR    . NO - GET ERROR FLAG @F@@@ GU
)@@G@@            L,U       A1,FIELDPKT3    . AND FIELD CONTROL PKT ADDR@E@@@ GV
)@@G@@            CALL      ERROR           . PRINT ERROR AND TERM@B@@@       GW
)@@G@@   ENDIF                        .   @B@@@       ELSE                    GX
)@@G@@        .   @E@@@          IF POS,IN,FILETYPE THEN      . WAS THERE ANY GY
)@@G@@SPEC? @G@@@             IF A7,EVENP,OPT('P') THEN . WE HAVE PROG FILE NOGZ
)@@G@@ ELT NAME   @H@@@                L,U       A0,OUTFILERR  . THEY DIDN'T AHA
)@@G@@SK FOR DEFAULT NAMES    @G@@@                L,U       A1,FIELDPKT3  . GHB
)@@G@@ET FIELD CONTROL PKT ADDR     @D@@@                CALL      ERROR      HC
)@@G@@  . ERROR OFF     @B@@@             ELSE                      .   @F@@@ HD
)@@G@@               IF ZERO,IN,MONSTER THEN . IS IT PROG FILE DOWNDATE?@H@@@ HE
)@@G@@                  L,U       A0,FIELDPKT1  . NO - SEE IF WE HAVE A ELT NAHF
)@@G@@ME    @H@@@                   IF ZERO,IN,PFPPKT+2 THEN . MUST HAVE ELT NHG
)@@G@@AME FROM 2ND FIELD@F@@@                      L,U       A0,NOELTERR  . NOHH
)@@G@@ NAME - ERROR     @H@@@                      DL        A1,SDFOPKT  . GETHI
)@@G@@ INTERNAL FILE NAME IN ERROR  @D@@@                      CALL      ERRORHJ
)@@G@@  . ERROR OFF     @B@@@                   ELSE                .   @H@@@ HK
)@@G@@                     DL        A3,PFPPKT+2  . WE'LL USE ELT NAME OF SPECHL
)@@G@@ 1    @G@@@                      DL        A5,PFPPKT+6  . GET VERSION NAHM
)@@G@@ME ALSO     @G@@@                      L,U       A0,1   . SET FLAG FOR PHN
)@@G@@ROG FILE ELT OPEN @H@@@                      IF A7,EVENP,OPT('T') THEN .HO
)@@G@@ T-OPT TAKES CARE OF ITS OWN  @H@@@                         S         X1HP
)@@G@@1,SPECPOPT  . SET FLAG FOR ELT MODE P-OPT @B@@@                      ENDHQ
)@@G@@IF            .   @B@@@                   ENDIF               .   @B@@@ HR
)@@G@@               ENDIF                  .   @B@@@             ENDIF       HS
)@@G@@              .   @B@@@          ELSE                         .   @G@@@ HT
)@@G@@            IF A7,ODDP,OPT('P') THEN  . IS THERE P-OPT WITH NO FIELD    HU
)@@G@@@F@@@                L,U       A0,NOUSERR   . YES - OPTION CONFLICT     HV
)@@G@@@E@@@                CALL      ERROR        . PRINT AND ERROR OFF @B@@@ HW
)@@G@@            ENDIF                     .   @B@@@          ENDIF          HX
)@@G@@              .   @B@@@       ENDIF                           .   @B@@@ HY
)@@G@@   ENDIF                              .   @F@@@    SZ        A1         HZ
)@@G@@              . FILE NAME ALREADY IN PKT  @B@@@    IF NONZ,IN,SDFOPKT THIA
)@@G@@EN            .   @I@@@       IF        A7,EVENP,OPT('P')  OR NONZ,IN,SPIB
)@@G@@ECPOPT THEN . DO WE OPEN OUTPUT     @E@@@          S         A0,OUTFILTYIC
)@@G@@P       . SAVE TYPE OUT OUTPUT@F@@@          CALL      OPENSDFO         ID
)@@G@@  . YES - NO REASON NOT TO    @I@@@          IF ZERO,IN,SPECPOPT OR A7,OIE
)@@G@@DDP,OPT('E') THEN . DO WE WANT TO CLOSE TOO?    @F@@@             S     IF
)@@G@@    X11,OUTFIL      . INSURE OUTPUT ELT CLOSED  @B@@@          ENDIF    IG
)@@G@@                    .   @B@@@       ENDIF                           .   IH
)@@G@@@B@@@    ENDIF                              .   @[@@@    .  @ @@@    . GII
)@@G@@ET FOURTH SPEC FIELD    @[@@@    .  @G@@@    L,U       A0,4             IJ
)@@G@@        . HAVE TO DO THE SELT$ OUTSELVES  @F@@@    CASENTRY CALLING SELTIK
)@@G@@$             . GET FOURTH SPEC FIELD     @E@@@    CASE 0               IL
)@@G@@              . NO FIELD - NO ACTION@D@@@    CASE 1                     IM
)@@G@@        . NORMAL RETURN @E@@@       IF NONZ,IN,WKL THEN             . GEIN
)@@G@@T QUOTE CHAR FIRST@G@@@          L,S1      A0,WKEY            . IS FOUNDIO
)@@G@@ IN WRITE KEY FIELD     @E@@@          S,S6      A0,INQUOTE         . UPIP
)@@G@@DATE DEFALUT LOC  @B@@@       ENDIF                           .   @F@@@ IQ
)@@G@@      IF NONZ,IN,ENL OR NONZ,IN,FNL THEN . IS THERE COLUMN NUMBERS@G@@@ IR
)@@G@@         L,U       A0,FNAME           . PRELOAD FOR POSS FILENAME FIELD IS
)@@G@@@E@@@          IF NONZ,IN,ENL THEN          . EL NAME HAS PRIORITY@E@@@ IT
)@@G@@            L,U       A0,ENAME        . GET COLUMN 1 SPEC   @B@@@       IU
)@@G@@   ENDIF                        .   @E@@@          CALL      CONVERT    IV
)@@G@@        . CONVERT TO BINARY   @E@@@          AN,U      A3,1             IW
)@@G@@  . SET FOR ZERO OFFSET @F@@@          S         A3,COL1            . THIX
)@@G@@IS IS OUR NEW COL 1 SPEC@B@@@       ENDIF                           .   IY
)@@G@@@F@@@       IF NONZ,IN,RKL OR NONZ,IN,EVL THEN . NOW HOW BOUT COLUMN 'N'IZ
)@@G@@@H@@@          L,U       A0,RKEY            . PRELOAD FOR POSSIBLE READ JA
)@@G@@KEY FIELD   @F@@@          IF NONZ,IN,EVL THEN          . VERSION NAME HJB
)@@G@@AS PRIORITY @G@@@             L,U       A0,EVER         . USE VALUE IN VJC
)@@G@@ERSION NAME FIELD @B@@@          ENDIF                        .   @E@@@ JD
)@@G@@         CALL      CONVERT            . CONVERT TO BINARY   @F@@@       JE
)@@G@@   S         A3,COLN            . THIS IS THE NEW COLUMN 'N'@B@@@       JF
)@@G@@ENDIF                           .   @E@@@       L         A0,COLN       JG
)@@G@@        . GET LAST COL SPEC   @E@@@       IF A0,LT,COL1 THEN            JH
)@@G@@  . IS SPEC STILL LEGAL @F@@@          L,U       A0,NOUSERR         . GEJI
)@@G@@T OPTIONS CONFLICT FLAG @D@@@          CALL      ERROR              . ERJJ
)@@G@@ROR OFF     @B@@@       ENDIF                           .   @B@@@    ENDJK
)@@G@@CASE                            .   @[@@@    .  @ @@@    . GET FIFTH SPEJL
)@@G@@C FIELD     @[@@@    .  @F@@@    L,U       A0,5                     . MUJM
)@@G@@ST AGAIN DO OWN SELT$   @E@@@    CASENTRY CALLING SELT$             . GEJN
)@@G@@T FIFTH SPEC FIELD@E@@@    CASE 0                             . NO FIELDJO
)@@G@@ - NO ACTION@D@@@    CASE 1                             . FIELD PRESENT JP
)@@G@@@F@@@       IF NONZ,IN,WKL THEN             . LOOK FOR CORR CHAR FIRST  JQ
)@@G@@@H@@@          L,S1      A0,WKEY            . IT WILL BE IN THE WRITE KEJR
)@@G@@Y FIELD     @G@@@          S,S6      A0,CHAR            . UPDATE WITH NEJS
)@@G@@W CORR CHARACTER  @B@@@       ENDIF                           .   @G@@@ JT
)@@G@@      IF NONZ,IN,ENL OR NONZ,IN,FNL THEN . IS THERE A PEEK FACTOR GIVEN JU
)@@G@@@G@@@          L,U       A0,FNAME           . PRELOAD FOR POSS FILENAME JV
)@@G@@FIELD @G@@@          IF NONZ,IN,ENL THEN          . ELT NAME FIELD HAS PJW
)@@G@@RIORITY     @D@@@             L,U       A0,ENAME        . GET PEEK SPEC JX
)@@G@@@B@@@          ENDIF                        .   @E@@@          CALL     JY
)@@G@@ CONVERT            . CONVERT TO BINARY   @E@@@          S         A3,PEJZ
)@@G@@EK            . UPDATE PEEK FACTOR  @B@@@       ENDIF                   KA
)@@G@@        .   @G@@@       IF NONZ,IN,EVL OR NONZ,IN,RKL THEN . IS THERE A KB
)@@G@@LOOK AHEAD SPEC   @H@@@          L,U       A0,RKEY            . PRELOAD KC
)@@G@@FOR POSSIBLE READ KEY FIELD   @F@@@          IF NONZ,IN,EVL THEN        KD
)@@G@@  . VERSION NAME HAS PRIORITY @F@@@             L,U       A0,EVER       KE
)@@G@@  . GET LOOK AHEAD FACTOR     @B@@@          ENDIF                      KF
)@@G@@  .   @E@@@          CALL      CONVERT            . CONVERT TO BINARY   KG
)@@G@@@F@@@          S         A3,LA              . UPDATE LOOK AHEAD DEFAULT KH
)@@G@@@G@@@          S,H1      A3,MASTERPKT+12    . ALSO SET IN CURRENT MASTERKI
)@@G@@PKT   @B@@@       ENDIF                           .   @B@@@    ENDCASE  KJ
)@@G@@                          .   @B@@@  ENDBEG                             KK
)@@G@@  .   @[@@@ /.    @[@@@  .    @[@@@  .    @]@@@  . ASSIGN - @F@@@  .    KL
)@@G@@    THIS ROUTINE IS CALLED FOR EACH OF THE FIRST THREE SPEC @G@@@  .    KM
)@@G@@    FIELDS.  IT USES THE ROUTINE 'FIASG$' TO ASSIGN EACH RESPEC-  @G@@@ KN
)@@G@@ .        TIVE FILE.  IT ALSO TRANSFERS APPROPRIATE INFORMATION FROM    KO
)@@G@@@G@@@  .        'FIPKT', THE FITEM$ PKT USED BY FIASG$, TO THE USER SPECKP
)@@G@@ FIELD@F@@@  .        CONTROL PKT WHOSE ADDRESS IS PASSED INITIALLY IN AKQ
)@@G@@0.  ON@G@@@  .        RETURN A0 CONTAINS A FLAG DENOTING WHETHER THIS WAKR
)@@G@@S A PROGRAM @F@@@  .        OR DATA FILE (A0=0 => DATA, A0=NONZERO => PRKS
)@@G@@OGRAM).     @[@@@  .    @[@@@  .    @[@@@  .    @[@@@ $(0). @G@@@ FIELDPKT
)@@G@@KT  +         0                 . SAVE FOR PASSED CONTROL PKT ADDR@F@@@ KU
)@@G@@IOPKT     +         0D                . IO PKT TO TEST FILE TYPE  @B@@@ KV
)@@G@@          +         0                 .   @B@@@           +         R$,0KW
)@@G@@,0            .   @B@@@           +         28,BUFFER         .   @B@@@ KX
)@@G@@          +         0                 .   @B@@@ BUFFER    RES       28  KY
)@@G@@              .   @E@@@ OUTFLG    +         0                 . QUICK EXKZ
)@@G@@IT FLAG     @[@@@  .    @[@@@  .    @[@@@  .    @[@@@ $(1). @]@@@ ASSIGNLA
)@@G@@*.    @B@@@  BEGIN SUBROUTINE                     .   @F@@@    S        LB
)@@G@@ A0,FIELDPKT              . SAVE CONTROL PKT ADDR     @E@@@    L        LC
)@@G@@ A0,SPEC                  . GET SPEC FIELD #    @F@@@    CASENTRY CALLINLD
)@@G@@G SELT$             . GET INFOR FOR THIS SPEC   @E@@@    CASE 0         LE
)@@G@@                    . NO FIELD PRESENT    @E@@@       L         A0,FIELDLF
)@@G@@PKT           . GET CONTROL PKT ADDR@F@@@       L         A1,SPEC       LG
)@@G@@        . WHAT SPEC FIELD WAS THIS  @E@@@       IF A1,EQ,3,,U THEN      LH
)@@G@@        . THIRD IS SPECIAL    @H@@@          SZ        INTF             LI
)@@G@@  . MAKE SURE INTERNAL FILE NAME IS ZERO  @B@@@          SZ        INTF+LJ
)@@G@@1             .   @E@@@          S         X11,OUTFLG         . TAKE QUILK
)@@G@@CK EXIT     @F@@@          LN,U      A0,1               . SET RETURN FLALL
)@@G@@G - NO SPEC @B@@@       ELSE                            .   @F@@@       LM
)@@G@@   DL        A1,('TPF$        ')  . DEFAULT IS WORKSPACE    @D@@@       LN
)@@G@@   DS        A1,FNAME           . FAKE ELT$ PKT @E@@@          L,U      LO
)@@G@@ A1,4               . 4 CHAR FILE NAME    @E@@@          S         A1,FNLP
)@@G@@L             . SET FLAG FOR FIELD  @B@@@       ENDIF                   LQ
)@@G@@        .   @D@@@    CASE 1                             . FIELD EXISTS  LR
)@@G@@@E@@@       SZ        OUTFLG                . NO - QUICK WAY OUT  @B@@@ LS
)@@G@@   ENDCASE                            .   @F@@@    IF ZERO,IN,OUTFLG THELT
)@@G@@N             . MAKE SURE WE HAVE A SPEC  @G@@@       L         A0,FIELDLU
)@@G@@PKT           . GET ADDR OF FIELD CONTROL PKT   @E@@@       L         A1LV
)@@G@@,SPEC               . WHAT FIELD IS THIS? @H@@@       IF A1,EQ,3,,U THENLW
)@@G@@              . WILL NEED TO WRITE IN THIRD FIELD     @E@@@          FIALX
)@@G@@SG     ELT$,'XWR'         . ASSIGN WITH X OPTION@B@@@       ELSE        LY
)@@G@@                    .   @F@@@          FIASG     ELT$,'R'           . ONLZ
)@@G@@LY NEED READ PERMISSION @B@@@       ENDIF                           .   MA
)@@G@@@F@@@       L         A0,FIELDPKT           . GET CONTROL PKT ADDR AGAINMB
)@@G@@@E@@@       DS        A1,INTF               . SAVE INTERNAL NAME  @D@@@ MC
)@@G@@      S         A4,FFREE              . ALSO FREE CODE@G@@@       DS    MD
)@@G@@    A1,IOPKT              . SET INTERNAL NAME IN LOCAL IOPKT@H@@@       ME
)@@G@@CALL      FIDIAG                . DIAGNOSE ANY POSSIBLE ERROR CONDITIONSMF
)@@G@@@E@@@       L,S1      A0,FIPKT$+6           . GET EQUIPMENT CODE  @F@@@ MG
)@@G@@      IF A0,LT,030,,U OR A0,GE,040,,U THEN . TEST FOR FASTRAN FILE@G@@@ MH
)@@G@@         L,U       A1,IOPKT           . GET PKT ADDR WITH INTERNAL NAME MI
)@@G@@@E@@@          L,U       A0,FILERR          . NOT FASTRAN FORMAT  @E@@@ MJ
)@@G@@         CALL      ERROR              . PRINT ERROR AND EXIT@B@@@       MK
)@@G@@ENDIF                           .   @F@@@       L         A0,FIELDPKT   ML
)@@G@@        . GET ADDR OF CONTROL PKT   @E@@@       L,T3      A1,FIPKT$+6   MM
)@@G@@        . GET ABSOLUTE F-CYCLE@E@@@       S         A1,FABS             MN
)@@G@@  . SAVE IN CONTROL PKT @F@@@       L,H2      A1,FIPKT$+9           . GEMO
)@@G@@T HIGHEST TRK ASSIGNED  @E@@@       S         A1,HTRK               . SAMP
)@@G@@VE IN CONTROL PKT @D@@@       DL        A1,FIPKT$+4           . GET QUALMQ
)@@G@@IFIER @E@@@       DS        A1,QUAL               . STORE IN CONTROL PKTMR
)@@G@@@D@@@       DL        A1,FIPKT$+2           . GET FILE NAME @E@@@       MS
)@@G@@DS        A1,NAME               . STORE IN CONTROL PKT@E@@@       SZ    MT
)@@G@@    IOPKT+2               . INIT ALL OF IOPKT   @D@@@       L         A0MU
)@@G@@,(+R$,0,0)          . ALSO WORD 3   @B@@@       S         A0,IOPKT+3    MV
)@@G@@        .   @G@@@       L,U       A0,IOPKT              . SEE WHAT TYPE MW
)@@G@@OF FILE WE HAVE   @E@@@       ER        IOW$                  . GET FIRSMX
)@@G@@T SECTOR    @D@@@       L         A0,BUFFER             . GET FIRST WORDMY
)@@G@@@E@@@       IF ZERO,IN,IOPKT+3,,S1 THEN     . IS STATUS CLEAR?    @G@@@ MZ
)@@G@@         IF A0,EQ,('**PF**')  THEN    . YES - DO WE HAVE A PROG FILE?   NA
)@@G@@@G@@@             L,U       A0,1            . SET RETURN CODE FOR PROG FNB
)@@G@@ILE   @B@@@          ELSE                         .   @F@@@             NC
)@@G@@SZ        A0              . RETURN CODE FOR DATA FILE @B@@@          ENDND
)@@G@@IF                        .   @B@@@       ELSE                          NE
)@@G@@  .   @F@@@          L,S1      A1,IOPKT+3         . GET RETURNED ERROR SNF
)@@G@@TATUS @E@@@          L         A0,FIELDPKT        . GET CONTROL PKT ADDRNG
)@@G@@@F@@@          L         A0,SPEC            . GET NUMBER OF SPEC FIELD  NH
)@@G@@@E@@@          IF A0,EQ,3,,U AND A1,EQ,5,,U THEN . SPECIAL CASE   @G@@@ NI
)@@G@@            SZ        A0              . PRESET RETURN FLAG FOR DATA     NJ
)@@G@@@E@@@             L         A3,INFOBITS     . GET INPUT OPTIONS   @H@@@ NK
)@@G@@            IF A3,ODDP,OPT('P') OR NONZ,IN,ENL THEN . DO THEY WANT A PRONL
)@@G@@G FILE@G@@@                L,U       A0,1         . YES - TELL' EM THATSNM
)@@G@@ WHAT IT IS @B@@@             ENDIF                     .   @B@@@       NN
)@@G@@   ELSE                         .   @D@@@             L,U       A0,IOERRNO
)@@G@@        . SET ERROR CODE@E@@@             L,U       A1,IOPKT        . ANNP
)@@G@@D THIS IO PKT     @F@@@             CALL      ERROR           . PRINT ERNQ
)@@G@@ROR AND GET OUT   @B@@@          ENDIF                        .   @B@@@ NR
)@@G@@      ENDIF                           .   @B@@@    ENDIF                NS
)@@G@@              .   @B@@@  ENDBEG                               .   @[@@@ NT
)@@G@@/.    @[@@@  .    @[@@@  .    @]@@@  . FIDIAG - @F@@@  .        THIS IS NU
)@@G@@AN ERROR ANALYSIS ROUTINE WHICH LOOKS AT THE    @F@@@  .        STATUS RNV
)@@G@@ETURNED FROM FIASG$ AND PRINTS AN APPROPRIATE   @G@@@  .        MESSAGE NW
)@@G@@IF AN ERROR HAS OCCURED.  IT IS CALLED FROM ASSIGN    @G@@@  .        WINX
)@@G@@TH THE REGISTERS RETURNED FROM FIASG$ INTACT.  IF THE FLAG  @F@@@  .    NY
)@@G@@    'UOM' IS SET AND THERE IS AN ERROR THE PROGRAM WILL LIJ @G@@@  .    NZ
)@@G@@    TO THE ERROR$ COMMON BANK TO ANALIZE THE CSF RETURN BITS.     @[@@@ OA
)@@G@@ .    @[@@@  .    @[@@@  .    @F@@@ UOM       EQU       1               OB
)@@G@@  . SET FOR UOM EXECUTION     @[@@@  .    @[@@@ $(0). @F@@@ FIDFIL    REOC
)@@G@@S       2                 . SAVE FOR INT FILE NAME    @F@@@ FIDBIT    REOD
)@@G@@S       1                 . SAVE FOR CSF BITS RETURNED@H@@@ FIFLG     REOE
)@@G@@S       1                 . SAVE FOR PERMISSIONS  PASSED IN A5    @[@@@ OF
)@@G@@ .    @[@@@  .    @[@@@  .    @[@@@ $(1). @]@@@ FIDIAG*.    @B@@@  BEGINOG
)@@G@@ SUBROUTINE                     .   @E@@@    IF A3,IS,NEG THEN          OH
)@@G@@        . WAS IT FAC REJECT?  @E@@@       DS        A1,FIDFIL           OI
)@@G@@  . YES - SAVE INT NAME @D@@@       S         A3,FIDBIT             . ANOJ
)@@G@@D FAC BITS  @D@@@       PRINT     EDIT PACKET,EDITPKT,,U  . OPEN EDIT$  OK
)@@G@@@B@@@       'UNABLE TO ASSIGN FILE: &'      .   @B@@@       ENDMESSAGE  OL
)@@G@@                     .  @F@@@       DL        A0,FIDFIL             . GEOM
)@@G@@T INTERNAL FILENAME     @G@@@       CALL      EDTXFN                . GOON
)@@G@@ DO FITEM TO GET FILE NAME    @B@@@       REOPEN                        OO
)@@G@@  .   @B@@@       ' BECAUSE: &'                   .   @B@@@       ENDPRIOP
)@@G@@NT                        .   @B@@@       ON        UOM=0               OQ
)@@G@@  .   @B@@@       PRINT     EDIT PACKET,EDITPKT,,U    @B@@@       'FAC SOR
)@@G@@TATUS = &'                .   @B@@@       ENDMESSAGE                    OS
)@@G@@   .  @E@@@       E$OCTV    FIDBIT                . EDIT IN FAC BITS    OT
)@@G@@@D@@@       ENDPRINT                        . PRINT MESSAGE @B@@@       OU
)@@G@@OFF       UOM=0                 .   @B@@@       ON        UOM           OV
)@@G@@        .   @D@@@       L         A0,FIDBIT             . GET FAC BITS  OW
)@@G@@@E@@@       LXI,U     X11,E$RROR$           . GET BDI OF ERROR$   @F@@@ OX
)@@G@@      LIJ       X11,FAC$$             . LET IT ANALIZE FAC BITS   @B@@@ OY
)@@G@@      OFF       UOM                   .   @E@@@       L,U       A0,FATALOZ
)@@G@@              . GET FATAL ERROR CODE@D@@@       CALL      ERROR         PA
)@@G@@        . JUST ERROR OFF@B@@@    ELSE                               .   PB
)@@G@@@G@@@       IF A5,IS,NONZ THEN              . WAS THERE A PERMISSIONS PRPC
)@@G@@OBLEM @E@@@          DS        A1,FIDFIL          . SAVE INT FILE NAME  PD
)@@G@@@E@@@          S         A5,FIFLG           . ALSO PERMISSION BITS@G@@@ PE
)@@G@@         PRINT,EDIT                   PACKET,EDITPKT,,U  . OPEN EDIT$   PF
)@@G@@@E@@@          L         A0,FIFLG           . GET PERMISSION BITS @F@@@ PG
)@@G@@         IF A0,EQ,1,,U THEN           . WHICH ONE COULDN'T WE GET @D@@@ PH
)@@G@@            E$FD1     ('READ  ')      . MUST BE READ  @B@@@          ELSPI
)@@G@@E                         .   @C@@@             E$FD1     ('WRITE ')    PJ
)@@G@@  . NO WRITE@B@@@          ENDIF                        .   @B@@@       PK
)@@G@@   REOPEN                       .   @D@@@          ' PERMISSION NOT AVAIPL
)@@G@@LABLE ON FILE: &' .     @B@@@          ENDMESSAGE                    .  PM
)@@G@@@E@@@          DL        A0,FIDFIL          . GET INT FILE NAME   @F@@@ PN
)@@G@@         CALL      EDTXFN             . EDIT IN EXTER FILE NAME   @F@@@ PO
)@@G@@         ENDPRINT                     . PRINT NON-FATAL MESSAGE   @E@@@ PP
)@@G@@         L,U       A0,FATAL           . GET FATAL ERROR CODE@D@@@       PQ
)@@G@@   CALL      ERROR              . ERROR OFF     @B@@@       ENDIF       PR
)@@G@@                    .   @B@@@    ENDIF                              .   PS
)@@G@@@B@@@  ENDBEG                               .   @[@@@  .    @[@@@  .    PT
)@@G@@@]@@@  . EDTXFN - @G@@@  .        SUBROUTINE TO EDIT IN THE ACTUAL EXTERPU
)@@G@@NAL FILENAME GIVEN THE  @A@@@  .        INTERNAL NAME IN A0,A1.   @[@@@ PV
)@@G@@ .    @[@@@  .    @[@@@  .    @[@@@ $(1). @]@@@ EDTXFN*.    @B@@@  BEGINPW
)@@G@@ SUBROUTINE                     .   @E@@@    DS        A0,FIPKT$        PX
)@@G@@        . USE FIASG$ FITEM PKT@E@@@    L,U       A0,FIPKT$              PY
)@@G@@  . GET ADDR OF PKT     @G@@@    ER        FITEM$                   . DOPZ
)@@G@@ FITEM TO GET EXTERNAL NAME   @G@A@    DL        A0,FIPKT$              QA
)@@G@@  . GET INTERNAL NAME JUST IN CASE  @F@@@    IF NONZ,IN,FIPKT$+2 THEN   QB
)@@G@@        . IS THERE AN EXTERNAL NAME @E@@@       E$FD2     FIPKT$+4      QC
)@@G@@        . YES - GET QUALIFIER @C@@@       E$CHAR    '*'                 QD
)@@G@@  . DELIMIT @D@@@A      E$FD2     FIPKT$+2              . GET FILE NAME QE
)@@G@@@D@@@A      E$CHAR    '('                   . PUNCTUATION   @D@@@A      QF
)@@G@@L         A0,FIPKT$+6           . GET FCYCLE    @D@@@A      LSSL      A0QG
)@@G@@,24                 . ISOLATE IT    @D@@@A      SSL       A0,24         QH
)@@G@@        . IN A0 LOWER   @#@@@A      E$DECV    . @D@@@A      E$CHAR    ')QI
)@@G@@'                   . PUNCTUATION   @B@@@A   ELSE                       QJ
)@@G@@        .   @F@@@A      E$FD2     FIPKT$                . GET INTERNAL FQK
)@@G@@ILE NAME    @D@A@       DL        A0,FIPKT$+2           . GET FILENAME  QL
)@@G@@@B@@@    ENDIF                              .   @E@A@    E$FD2          QM
)@@G@@                    . EDIT IN FILE NAME   @C@@@    E$CHAR    '.'        QN
)@@G@@              . DELIMIT @C@@@  ENDBEG                               . REQO
)@@G@@TURN  @[@@@ /.    @[@@@  .    @[@@@  .    @]@@@  . DOPFS -  @F@@@  .    QP
)@@G@@    THIS ROUTINE IS CALLED FOLLOWING ASSIGN TO DO THE PFS ON@G@@@  .    QQ
)@@G@@    THE ELT NAME IF ANY EXISTS.  ON ENTRY A0=ADDR OF FIELD CONTROL@F@@@ QR
)@@G@@ .        PACKET JUST ASSIGNED, ON EXIT A0<0 MEANS NO ELT FIELD   @D@@@ QS
)@@G@@ .        WAS PRESENT - A0=0 MEANS PFS HAS BEEN DONE. @[@@@  .    @[@@@ QT
)@@G@@ .    @[@@@  .    @[@@@ $(0). @G@@@ PKT       +         0               QU
)@@G@@  . SAVE FOR PASSED PACKET ADDR     @[@@@  .    @[@@@  .    @[@@@  .    QV
)@@G@@@[@@@ $(1). @]@@@ DOPFS*.     @B@@@  BEGIN SUBROUTINE                   QW
)@@G@@  .   @F@@@    S         A0,PKT                   . SAVE FIELD CONTROL PQX
)@@G@@KT PTR@E@@@    IF ZERO,IN,ENL THEN                . IS THERE A ELT NAME?QY
)@@G@@@E@@@       LN,U      A0,1                  . NO - RETURN STATUS  @B@@@ QZ
)@@G@@   ELSE                               .   @D@@@       DL        A1,ENAMERA
)@@G@@              . GET ELT NAME  @E@@@       DS        A1,PFPPKT+2         RB
)@@G@@  . PUT INTO PFS PKT    @F@@@       DL        A1,('            ')   . GERC
)@@G@@T BLANKS CASE NO VERSION@F@@@       IF NONZ,IN,EVL THEN             . ISRD
)@@G@@ THERE A VERSION NAME?  @E@@@          DL        A1,EVER            . YERE
)@@G@@S - GO GET IT     @B@@@       ENDIF                           .   @D@@@ RF
)@@G@@      DS        A1,PFPPKT+6           . INTO PFS PKT  @E@@@       L,U   RG
)@@G@@    A1,1                  . GET SYM TYPE CODE   @D@@@       S,S3      A1RH
)@@G@@,PFPPKT+5           . SET IN PKT    @E@@@       L,U       A0,PFPPKT     RI
)@@G@@        . GET PFS PKT ADDR    @C@@@       ER        PFS$                RJ
)@@G@@  . DO PFS  @E@@@       IF A2,IS,NONZ THEN              . WAS THERE AN ERK
)@@G@@RROR  @E@@@          L         A0,PKT             . GET CONTROL PKT ADDRRL
)@@G@@@G@@@          L,U       A1,PFPPKT          . GET ADDR OF PFS PKT WITH IRM
)@@G@@NTF   @E@@@          L,U       A0,PFPERR          . YES - GET ERROR CODERN
)@@G@@@D@@@          CALL      ERROR              . PRINT AND EXIT@B@@@       RO
)@@G@@ENDIF                           .   @F@@@       L         A0,PKT        RP
)@@G@@        . RESTORE CONTROL PKT PTR   @E@@@       IF ZERO,IN,ECL THEN     RQ
)@@G@@        . WAS THERE ANY CYCLE @F@@@          SZ        CYCLE            RR
)@@G@@  . NO - JUST CLEAR CYCLE WORD@B@@@       ELSE                          RS
)@@G@@  .   @F@@@          L         A1,ECC             . GET POSSIBLE PREFIX RT
)@@G@@CHAR  @E@@@          L,U       A2,1               . PRESET WITH ABS CODERU
)@@G@@@E@@@          IF A1,EQ,'-',,U THEN         . WAS IT - RELATIVE   @D@@@ RV
)@@G@@            L,U       A2,2            . YES - SET CODE@B@@@          ELSRW
)@@G@@E                         .   @E@@@             IF A1,EQ,'+',,U THEN    RX
)@@G@@  . HOW 'BOUT + RELATIVE@D@@@                L,U       A2,3         . YERY
)@@G@@S - SET CODE@B@@@             ENDIF                     .   @B@@@       RZ
)@@G@@   ENDIF                        .   @E@@@          S         A2,CYCNIND SA
)@@G@@        . SET CYCLE INDICATOR @E@@@          L         A3,BEC           SB
)@@G@@  . GET BINARY CYCLE    @G@@@          CASENTRY A2                  . COSC
)@@G@@DE DETERMINES PROPER ACTION   @E@@@          CASE 1                     SD
)@@G@@  . THIS IS ABSOLUTE    @F@@@             S         A3,CYCN         . SESE
)@@G@@T IN ABSOLUTE CYCLE     @E@@@          CASE 2                       . THSF
)@@G@@IS IS '-' RELATIVE@E@@@             L,S4      A4,PFPPKT+8     . GET LATESG
)@@G@@ST CYCLE    @G@@@             AN        A4,A3           . REDUCE BY '-' SH
)@@G@@RELATIVE CYCLE    @F@@@             S         A4,CYCN         . SET IN ASI
)@@G@@S ABSOLUTE CYCLE #@E@@@          CASE 3                       . '+' RELASJ
)@@G@@TIVE CASE   @E@@@             L,S4      A4,PFPPKT+8     . GET LATEST CYCSK
)@@G@@LE    @E@@@             ANU,S6    A4,PFPPKT+8     . GET LOWEST CYCLE #  SL
)@@G@@@F@@@             A,U       A5,1            . THIS IS REAL LOWEST CYC   SM
)@@G@@@E@@@             A         A5,A3           . ADD IN '+' OFFSET   @F@@@ SN
)@@G@@            S         A5,CYCN         . SET IN AS ABSOLUTE CYCLE  @B@@@ SO
)@@G@@         ENDCASE                      .   @E@@@          L,S4      A4,PFSP
)@@G@@PPKT+8        . GET LATEST CYC #    @F@@@          L         A2,CYCN    SQ
)@@G@@        . GET ABS CYC WE CALC'ED    @F@@@          ANU,S6    A4,PFPPKT+8SR
)@@G@@        . GET LOWEST CYCLE # -1     @H@@@          DSC       A4,36      SS
)@@G@@        . SWITCH REGS FOR TEST NOT IN RANGE     @F@@@          IF A2,IS,ST
)@@G@@NEG OR A4,NOSPAN,A2 THEN . DO WE HAVE THE CYC?  @E@@@             L,U   SU
)@@G@@    A0,CYCERR       . NO - GET ERROR CODE @D@@@             L         A1SV
)@@G@@,PKT          . AND PKT ADDR  @D@@@             CALL      ERROR         SW
)@@G@@  . ERROR OFF     @B@@@          ENDIF                        .   @B@@@ SX
)@@G@@      ENDIF                           .   @E@B@A      L,H2       PFPPKT+SY
)@@G@@9             . GET ELEMENT SIZE    @E@@@B      L,H2       A0,PFPPKT+9  SZ
)@@G@@        . GET ELEMENT SIZE    @C@@@A      IF A0,EQ,0,,U                 TA
)@@G@@  . ZERO?   @E@@@A         L,U      A0,SIZERR           . YES, SIZE ERROTB
)@@G@@R     @E@@@A         L     A1,PKT                 . GET PKT ADDRESS     TC
)@@G@@@D@@@A         CALL     ERROR               . ERROR OFF     @B@@@A      TD
)@@G@@ENDIF                           .   @E@@@       SZ        A0            TE
)@@G@@        . RETURN NORMAL STATUS@B@@@    ENDIF                            TF
)@@G@@  .   @B@@@  ENDBEG                               .   @[@@@ /.    @[@@@ TG
)@@G@@ .    @[@@@  .    @]@@@  . CONTIN - @H@@@  .        THIS IS THE II CONTITH
)@@G@@NGENTCY ROUTINE.  IT ATTEMPTS TO PRINT THE ELT  @H@@@  .        NAME THATI
)@@G@@T IS CURRENTLY BEING PROCESSED ALONG WITH THE CURRENT LINE  @I@@@  .    TJ
)@@G@@    NUMBERS OF THE VARIOUS SPEC FIELDS.  IF II'D FROM THE CONSOLE IT WILTK
)@@G@@L     @G@@@  .        RESPOND TO THE CONSOLE, IF @@X C'D FROM DEMAND IT TL
)@@G@@WILL RESPOND@ @@@  .        TO THE TERMINAL.    @[@@@  .    @[@@@  .    TM
)@@G@@@[@@@  .    @F@@@ AFPADR    EQUF      1,A0,H1           . 'A' FIELD CONTTN
)@@G@@ROL PKT ADDR@F@@@ FIELD     EQUF      0,X10,S2          . DEL OR ADD FIETO
)@@G@@LD INDICATOR@F@@@ ARECNO    EQUF      3,A0,H1           . CURRENT REC # TP
)@@G@@FOR 'A' FILE@F@@@ BRECNO    EQUF      3,A0,H2           . CURRENT REC # TQ
)@@G@@FOR 'B' FILE@G@@@ PFSPKT    EQUF      8,X10             . PFPPKT RELATIVTR
)@@G@@E TO FIELD PKT    @[@@@  .    @[@@@  .    @[@@@  .    @[@@@ $(0). @F@@@ TS
)@@G@@EPKT      E$PKT     10,BUFF           . CREATE UNIQUE EDIT PKT    @E@@@ TT
)@@G@@BUFF      RES       10                . THIS IS MESSAGE BUFF@D@@@ COMPKTTU
)@@G@@    +         0                 . CONM$ PKT     @B@@@           +       TV
)@@G@@  50,BUFF           .   @B@@@           +         0                 .   TW
)@@G@@@[@@@  .    @[@@@  .    @[@@@  .    @[@@@ $(1). @]@@@ CONTIN*.    @D@@@ TX
)@@G@@ BEGIN CONTINGENCY SAVE,X10,X11,A0,A1,A2,A3,A4,A5,R1 .@E@@@    L,U      TY
)@@G@@ A0,MASTERPKT             . GET MAIN PKT ADDR   @G@@@    L         X10,ATZ
)@@G@@FPADR               . GET FIELD CONTROL PKT ADDR FOR A@E@@@    L        UA
)@@G@@ A2,FIELD                 . GET FIELD DESCRIPTOR@E@@@    L         A3,BRUB
)@@G@@ECNO                . GET CURRENT REC #'S @B@@@    L         A4,ARECNO  UC
)@@G@@              .   @F@@@    IF A2,EQ,1,,U THEN                 . WAS THISUD
)@@G@@ THE ADD FILE     @F@@@       DSC       A3,36                 . YES - SWUE
)@@G@@ITHCH REGISTERS   @B@@@    ENDIF                              .   @H@@@ UF
)@@G@@   S         A3,NRA                   . USE THESE LOCS TO FETCH FROM LATUG
)@@G@@ER    @B@@@    S         A4,NRB                   .   @E@@@    PRINT,EDIUH
)@@G@@T PACKET,EPKT,,U           . OPEN EDIT$ PKT     @F@@@    IF ZERO,IN,DATAUI
)@@G@@ THEN               . GET ELT NAME IF POSSIBLE  @E@@@       E$FD2     PFUJ
)@@G@@SPKT+2              . ELT NAME IS HERE    @G@@@       L         A2,('   UK
)@@G@@   ')         . GET BLANKS TO TEST FOR VERSION  @F@@@       IF A2,NE,PFSUL
)@@G@@PKT+6 THEN          . IS THERE A VERSION NAME?  @C@@@          E$CHAR   UM
)@@G@@ '/'                . DELIMIT @E@@@          E$FD2     PFSPKT+6         UN
)@@G@@  . PUT IN VERSION NAME @B@@@       ENDIF                           .   UO
)@@G@@@B@@@    ENDIF                              .   @E@@@    E$MSG     (' SPUP
)@@G@@EC 1: &  ')         . PREFIX FOR SPEC 1   @E@@@    E$DECV    NRB        UQ
)@@G@@              . PUT IN REC NUMBER   @E@@@    E$MSG     (' 2: & ')       UR
)@@G@@        . PREFIX FOR SPEC 2   @D@@@    E$DECV    NRA                    US
)@@G@@  . PUT IN COUNT  @F@@@    E$MSG     (' 3: & ')               . PREFIX FUT
)@@G@@OR OUTPUT ELT     @D@@@    E$DECV    CCNT                     . EDIT IN UU
)@@G@@COUNT @E@@@    L,H2      A0,CONTIN                . UPDATE RETURN ADDR  UV
)@@G@@@E@@@    A,U       A0,1                     . POINT AFTER INTERUPT@E@@@ UW
)@@G@@   S,H2      A0,CONTIN                . SAVE FOR RETURN     @E@@@    L,SUX
)@@G@@1      A1,CONTIN                . GET SOME STATUS BITS@E@@@    IF A1,EQ,UY
)@@G@@1,,U THEN                 . II FROM CONSOLE     @D@@@       E$COLN      UZ
)@@G@@                    . GET CHAR COUNT@D@@@       S,H1      A0,COMPKT+1   VA
)@@G@@        . INTO COM$ PKT @D@@@       E$DITX                          . CLVB
)@@G@@OSE EDIT$   @E@@@       L,U       A0,COMPKT             . GET ADDR OF COVC
)@@G@@M$ PKT@C@@@       ER        COM$                  . DO IT   @B@@@    ELSVD
)@@G@@E                               .   @D@@@       ENDPRINT  SKIP,2        VE
)@@G@@        . JUST PRINT IT @B@@@    ENDIF                              .   VF
)@@G@@@B@@@  ENDBEG                               .   @[@@@ /.    @[@@@  .    VG
)@@G@@@[@@@  .    @]@@@  . SIGNOFF -@F@@@  .        THIS ROUTINE IS RESPONSIBLVH
)@@G@@E FOR PRINTING THE SIGN OFF   @F@@@  .        INFORMATION.  THIS INFORMAVI
)@@G@@TION CONSISTS OF ELT CYCLE    @G@@@  .        NUMBERS AND CARD COUNTS IFVJ
)@@G@@ IN ELEMENT MODE DOWNDATE, AND/OR   @F@@@  .        (IF NOT IN ELT MODE)VK
)@@G@@ THE CYCLE # AND CARD COUNTS OF ANY @G@@@  .        OUTPUT ELEMENTS.  COVL
)@@G@@RE TIME IS CALCULATED AND PRINTED IN THE  @ @@@  .        FINAL SIGNOFF VM
)@@G@@LINE. @[@@@  .    @[@@@  .    @[@@@  .    @F@@@ CYC1IND   EQUF      FIELVN
)@@G@@DPKT1+1,,XH2  . ABS CYC FLG FOR SPEC 1    @F@@@ CYC2IND   EQUF      FIELVO
)@@G@@DPKT2+1,,XH2  . ABS CYC FLG FOR SPEC 2    @E@@@ CYC1      EQUF      FIELVP
)@@G@@DPKT1+1,,XH1  . ABS CYC FOR SPEC 1  @E@@@ CYC2      EQUF      FIELDPKT2+VQ
)@@G@@1,,XH1  . ABS CYC FOR SPEC 2  @[@@@  .    @[@@@  .    @[@@@  .    @[@@@ VR
)@@G@@$(1). @]@@@ SIGNOFF*.   @B@@@  BEGIN SUBROUTINE                     .   VS
)@@G@@@G@@@    IF ZERO,IN,COMPARED THEN           . DID WE REALLY COMPARE ANYTVT
)@@G@@HING  @D@@@       PRINT                           . NO - TELL USER@C@@@ VU
)@@G@@      ' NO ACTUAL COMPARISONS ACCOMPLISHED!!' . @B@@@       ENDPRINT  SKVV
)@@G@@IP,2                .   @B@@@    ENDIF                              .   VW
)@@G@@@E@@@    L         A1,INFOBITS              . GET INPUT OPTIONS   @G@@@ VX
)@@G@@   IF A1,EVENP,OPT('T') THEN          . ARE IND CARD COUNT RELEVANT?    VY
)@@G@@@G@@@       IF NONZ,IN,DATA OR ZERO,IN,MONSTER THEN . MAKE SURE OF ELT MVZ
)@@G@@ODE   @E@@@          L         A0,CYC1IND         . GET ABS CYC FLG     WA
)@@G@@@F@@@          L         A11,CYC1           . GET POTENTIAL ABS CYC     WB
)@@G@@@H@@@          IF A0,IS,ZERO THEN           . IF NO CYC INFO GET CYC FROWC
)@@G@@M PFS PKT   @G@@@             L,S4      A11,PFSPKT1+8   . GET CURRENT CYWD
)@@G@@C FOR FIRST SPEC  @B@@@          ENDIF                        .   @G@@@ WE
)@@G@@         L,U       A0,MASTERPKT       . GET ADDR OF MASTER CONTROL PKT  WF
)@@G@@@F@@@          L         X10,AFPADR         . GET 'A' FILE CONTROL PKT  WG
)@@G@@@F@@@          L         A2,FIELD           . GET DEL - ADD IDENTIFIER  WH
)@@G@@@E@@@          L         A3,BRECNO          . PRELOAD REC #'S     @B@@@ WI
)@@G@@         L         A4,ARECNO          .   @E@@@          IF A2,EQ,1,,U TWJ
)@@G@@HEN           . DID WE LOAD RIGHT?  @E@@@             DSC       A3,36   WK
)@@G@@        . NO - REVERSE COUNTS @B@@@          ENDIF                      WL
)@@G@@  .   @F@@@          AN,U      A3,1               . DECREMENT FOR REAL CWM
)@@G@@OUNT  @B@@@          AN,U      A4,1               .   @F@@@          S  WN
)@@G@@       A3,NRA             . SAVE HERE TEMPORARILY     @B@@@          S  WO
)@@G@@       A4,NRB             .   @E@@@          PRINT,EDIT                 WP
)@@G@@  PACKET,EDITPKT,,U  .  @D@@@          E$COPY    -2,('SPEC 1 CYCLE')  . WQ
)@@G@@GET PREFIX  @D@@@          E$SKIP    1                  . MAKE SOME ROOMWR
)@@G@@@E@@@          E$DECF    2,A11              . PUT IN CYC NUMBER   @C@@@ WS
)@@G@@         E$COPY    -2,(' CARD COUNT ')  . INSERT@F@@@          E$DECV   WT
)@@G@@ NRB                . GET # OF RECS THIS ELT    @C@@@          ENDPRINT WU
)@@G@@ SKIP,2             . PRINT IT@G@@@          L         A11,CYC2         WV
)@@G@@  . DO SAME THING FOR SECOND ELT    @F@@@          IF ZERO,IN,CYC2IND THWW
)@@G@@EN      .  DID WE HAVE CYC INFO     @F@@@             L,S4      A11,PFSPWX
)@@G@@KT2+8   . NO - GET CYC FROM PFS PKT @B@@@          ENDIF                WY
)@@G@@        .   @G@@@          PRINT,EDIT                   PACKET,EDITPKT,,WZ
)@@G@@U  . OPEN EDIT$   @C@@@          E$COPY    -2,('SPEC 2 CYCLE')  . PREFIXXA
)@@G@@@E@@@          E$SKIP    1                  . GIVE SOME SPACE     @D@@@ XB
)@@G@@         E$DECF    2,A11              . PUT IN CYC #  @C@@@          E$CXC
)@@G@@OPY    -2,(' CARD COUNT ')  . INSERT@F@@@          E$DECV    NRA        XD
)@@G@@        . GET CARD COUNT THIS ELT   @C@@@          ENDPRINT             XE
)@@G@@        . PRINT IT@B@@@       ENDIF                           .   @B@@@ XF
)@@G@@   ENDIF                              .   @D@@@    PRINT     EDIT PACKETXG
)@@G@@,EDITPKT,,U   . OPEN FOR EDIT @B@@@    'SPEC 3 CYCLE  0 CARD COUNT &'   XH
)@@G@@  .   @B@@@    ENDMESSAGE                          .  @F@@@    E$DECV   XI
)@@G@@ CCNT                     . GET OUTPUT ELT CARD COUNT @F@@@    IF NONZ,IXJ
)@@G@@N,SDFOPKT THEN            . WAS THERE AN OUTPUT ELT?  @E@@@       ENDPRIXK
)@@G@@NT                        . YES - PRINT COUNT   @B@@@    ENDIF          XL
)@@G@@                    .   @E@@@    L         A0,(+027,INFOBITS)       . GEXM
)@@G@@T BUFFER FOR PCT$ @C@@@    M$TIME                             . GET SUPSXN
)@@G@@@G@@@    AN        A1,STARTIME              . DEDUCT WHAT WE STARTED WITXO
)@@G@@H     @E@@@    L         A11,A1                   . WILL USE IT HERE    XP
)@@G@@@E@@@    DSA       A11,36                   . PREPARE FOR DIVIDE  @B@@@ XQ
)@@G@@   DI,U      A11,DTIME                .   @D@@@    PRINT     EDIT PACKETXR
)@@G@@,EDITPKT,,U   . OPEN FOR EDIT @B@@@    'TOTAL PROCESSING TIME: &'       XS
)@@G@@  .   @B@@@    ENDMESSAGE                          .  @H@@@    E$DECV   XT
)@@G@@ A11                      . PUT IN CALC CORE TIME IN MILLISECS    @^@@@ XU
)@@G@@   E$SKIP    1  ROOM    @C@@@    E$COPY    -2,('MILLISECONDS')      . DEXV
)@@G@@LIMIT @C@@@    ENDPRINT  SKIP,2                   . PRINT   @B@@@  ENDBEXW
)@@G@@G                               .   @[@@@ /.    @[@@@  .    @[@@@  .    XX
)@@G@@@]@@@  . FINISH - @F@@@  .        THIS IS THE WRAP UP ROUTINE, IT CLOSESXY
)@@G@@ THE OUTPUT ELT IF@E@@@  .        NECESSARY AND THE CALLS 'FREE1' TO FREXZ
)@@G@@E ALL FILES.@[@@@  .    @[@@@  .    @[@@@  .    @[@@@ $(1). @]@@@ FINISHYA
)@@G@@*.    @B@@@  BEGIN SUBROUTINE                     .   @E@@@    L        YB
)@@G@@ A7,INFOBITS              . GET INPUT OPTIONS   @G@@@    IF        NONZ,YC
)@@G@@IN,SDFOPKT             THEN . DO WE CLOSE OUTPUT?     @F@@@       IF A7,YD
)@@G@@EVENP,OPT('P') OR NONZ,IN,SPECPOPT THEN . MAKE SURE!! @G@@@          IF YE
)@@G@@NONZ,IN,OUTFIL    THEN    . HAVE WE OUTPUT ANYTHING YET?    @E@@@       YF
)@@G@@      L         A0,OUTFILTYP    . GET OUTPUT TYPE     @D@@@             YG
)@@G@@CALL      CLOSESDFO       . GO DO CLOSE   @B@@@          ENDIF          YH
)@@G@@              .   @B@@@       ENDIF                           .   @B@@@ YI
)@@G@@   ENDIF                              .   @D@@@    CALL      FREE1      YJ
)@@G@@              . FREE FILES    @B@@@  ENDBEG                             YK
)@@G@@  .   @[@@@  .    @[@@@  .    @]@@@  . FREE1 -  @G@@@  .        THIS ROUYL
)@@G@@TINE USES THE FREE ROUTINE OF FIASG TO FREE ALL FILES.@[@@@  .    @[@@@ YM
)@@G@@ .    @[@@@  .    @[@@@ $(1). @]@@@ FREE1*.     @B@@@  BEGIN SUBROUTINE YN
)@@G@@                    .   @F@@@    L,U       A0,FIELDPKT1             . GEYO
)@@G@@T SPEC 1 CONTROL PKT    @C@@@    FIFREE    INTF FFREE                . DYP
)@@G@@O FREE@F@@@    L,U       A0,FIELDPKT2             . GET SPEC 2 CONTROL PYQ
)@@G@@KT    @C@@@    FIFREE    INTF FFREE                . DO FREE@F@@@    L,UYR
)@@G@@       A0,FIELDPKT3             . GET SPEC 3 CONTROL PKT    @C@@@    FIFYS
)@@G@@REE    INTF FFREE               . DO FREE @B@@@  ENDBEG                 YT
)@@G@@              .   @[@@@  .    @[@@@  .    @C@@@           END       DOWNYU
)@@G@@DATE              .     ___@@@OUNT RELEVANT?    @G@@@       IF NONZ,IN,DYV
)@@G@@ATA OR ZERO,IN,MONSTER THEN . MAKE SURE OF ELT M*[S@@@*SDFF*@[@^@].     YW
)@@G@@@[@^@].     @[@@@].     @[@^@].     @[@^@].     @C@@@]. INDEX SEQUENTIALYX
)@@G@@ ACCESS ROUTINES FOR SDF FILES@[@@@].     @[@^@].     @[@^@].     @E@@@]YY
)@@G@@.             IN GENERAL, THESE ROUTINES ARE A TAKE-OFF     @D@@@].     YZ
)@@G@@    ON THE STANDARD SDFI COMPLEX.  IN FACT,     @E@@@].         SOME OF ZA
)@@G@@THE CODE IS VIRTUALLY IDENTICAL.  THE     @D@@@].         MAJOR DIFFERENZB
)@@G@@CES BEING THAT THESE ROUTINES @D@@@].         USE A PAGING ACCESS METHODZC
)@@G@@ TO BUFFER THE    @D@@@].         FILE, AND LOGIC IS PROVIDED TO BUILD AZD
)@@G@@ND    @D@@@].         APPROPRIATELY ACCESS THE REQUIRED INDEX.    @C@@@]ZE
)@@G@@.         THE INDEX CAN BE ANY LENGTH SPECIFIED @C@@@].         BY THE PZF
)@@G@@ROGRAMMER, HOWEVER, AS IT IS  @C@@@].         FILLED IT IS COMPRESSED BYZG
)@@G@@ HALVING    @D@@@].         ITS RESPECTIVE ENTRIES.  THUS, IF A SMALL   ZH
)@@G@@@D@@@].         INDEX AREA IS PROVIDED TO ACCESS A LARGE    @D@@@].     ZI
)@@G@@    FILE, A GREAT DEAL OF TIME WILL BE LOST IN  @C@@@].         SEQUENTIZJ
)@@G@@AL ACCESS OF THOSE RECORDS NOT@C@@@].         PROVIDED WITH ENTRIES IN TZK
)@@G@@HE INDEX.   @C@@@].         FOR INSTANCE, IF 10 WORDS OF INDEX ARE@D@@@]ZL
)@@G@@.         PROVIDED ( 512 ARE RECOMMENDED ) AND THE    @C@@@].         FIZM
)@@G@@LE IS 500 RECORDS LONG, THEN AFTER  @E@@@].         THE 1ST PASS THERE WZN
)@@G@@ILL BE APPROXIMATELY 1 ENTRY  @B@@@].         PER 50 RECORDS, THUS IF THZO
)@@G@@E 49TH@D@@@].         RECORD WERE TO BE RANDOMLY ACCESSED THE     @D@@@]ZP
)@@G@@.         ROUTINE WOULD FETCH THE LOCATION OF THE     @E@@@].         1SZQ
)@@G@@T RECORD AND SEQUENTIALLY PROCESS THE NEXT 48   @E@@@].         TO REACHZR
)@@G@@ RECORD 49.  OBVIOUSLY, IF A 500 WORD     @E@@@].         INDEX WERE PROZS
)@@G@@VIDED INITIALLY, THE 49TH RECORD    @E@@@].         WOULD BE ALMOST IMMEZT
)@@G@@DIATELY AVAILABLE BECAUSE     @E@@@].         IT WOULD HAVE AN ENTRY IN ZU
)@@G@@THE INDEX.  IF ACCESS   @E@@@].         IS SEQUENTIAL NO TABLE LOOK UP IZV
)@@G@@S DONE.  THUS,    @C@@@].         IN THE PREVIOUS EXAMPLE, IF ACCESS IS ZW
)@@G@@@C@@@].         PRIMARILY SEQUENTIAL A SMALL INDEX MAY@ @@@].         VEZX
)@@G@@RY WELL SUFFICE.  @E@@@].             IF A PARTICULAR CYCLE IS ALL THAT ZY
)@@G@@IS REQUIRED,@F@@@].         THE APPROPRIATE CYCLE INFORMATION SHOULE BE ZZ
)@@G@@PROVIDED    @E@@@].         AS WORD 18 OF THE PACKET.  IF ALL CYCLES AREAA
)@@G@@ TO BE@F@@@].         ACCESSED, THIS WORD SHOULD BE NEGATIVE (BIT 35 SETAB
)@@G@@).    @F@@@].             WITHIN THE OPEN SEQUENCE (ISDFIO OR ISDFIOA) TAC
)@@G@@HE    @F@@@].         FIRST WORD OF THE FILE WILL BE QUIZED TO DETERMINEAD
)@@G@@ THE  @F@@@].         NATURE OF THE FILE (EG. PRINT$, FORTRAN, SYMBOLIC AE
)@@G@@OR    @G@@@].         UNDEFINED).  IF THE FILE IS FOUND TO BE PRINT$ OR AF
)@@G@@FORTRAN     @F@@@].         THE FLAG 'FILEFLG' WILL BE SET WHICH WILL IGAG
)@@G@@NORE ALL    @F@@@].         POTENTIAL CYCLE INFORMATION.  THE SETTING OFAH
)@@G@@ THIS FLAG  @G@@@].         HAS THE SAME EFFECT AS THE USER SETTING BIT AI
)@@G@@35 OF THE CYCLE   @F@@@].         WORD, HOWEVER THIS FLAG WILL OVERRIDE AJ
)@@G@@ANY PROVIDED CYCLE@G@@@].         INFORMATION.  WHEN THE OPEN ROUTINE ISAK
)@@G@@ CALLED A2 IS A FLAG    @F@@@].         WORD AND CONTAINS USER INITIALIZAL
)@@G@@ATION OF CERTAIN IN-    @G@@@].         TERNALLY DEFINED FLAGS.  THESE FAM
)@@G@@LAGS IMPLY THE INITIAL NATURE @F@@@].         AND METHOD OF PROCESSING OAN
)@@G@@F THE PROVIDED FILE.  AT THIS @G@@@].         WRITING THERE ARE THREE SUAO
)@@G@@CH FLAGS, CORRESPONDING TO BITS     @F@@@].         0-2 OF A2: ASCFLG, FAP
)@@G@@ILEFLG, AND CONTFLG RESPECTIVELY.   @F@@@].         'ASCFLG' SETS THE INAQ
)@@G@@ITIAL CHARACTER MODE OF THE FILE    @F@@@].         (ASCII=1, FIEDATA=0)AR
)@@G@@.  IF THE FILE IS A PROGRAM FILE    @G@@@].         THIS VALUE MAY BE OBAS
)@@G@@TAINED FROM THE TOC ENTRY.  IT SHOULD     @F@@@].         BE MENTIONED HAT
)@@G@@OWEVER, IF THE FILE WAS PROPERLY CREATED  @F@@@].         (REF PRM) IT CAU
)@@G@@HOULD CONTAIN THE APPROPRIATE MODE SETTING@G@@@].         INFORMATION INAV
)@@G@@ EITHER THE LABEL CONTROL WORD OR A FOLLOWING   @F@@@].         TYPE 42 AW
)@@G@@CONTROL IMAGE.  SINCE ISDFI USES TYPE 50 AND 42 @E@@@].         CONTROL AX
)@@G@@WORDS AS SWITCHES (AS PER PRM) AND HAS THE@G@@@].         CAPABILITY TO AY
)@@G@@HANDLE MIXED MODE FILES, THE TOC INFORMATION    @G@@@].         SHOULD BAZ
)@@G@@E SUPERFULOUS.  THE USER IS PROVIDED THE MECHANISM    @F@@@].         TOBA
)@@G@@ INITIALIZE - JUST IN CASE.  'FILEFLG' WAS MENTIONED  @F@@@].         PRBB
)@@G@@EVIOUSLY AND MAY BE UTILIZED BY THE USER TO IGNORE    @F@@@].         CYBC
)@@G@@CLE INFORMATION INSTEAD OF NEGATING WORD 18 OF THE    @F@@@].         PABD
)@@G@@CKET.  'CONTFLG' IF SET FORCES THE INCLUSIN OF CONTROL@F@@@].         IMBE
)@@G@@AGES IN THE INDEX, THUS ALLOWING THE USER TO RETRIEVE @F@@@].         THBF
)@@G@@EM.  TYPICALLY ON AN OPEN CALL A2 SHOULD BE ZERO,     @E@@@].         EGBG
)@@G@@. INITIAL CHARACTER MODE IS FIELDATA, USE CYCLE @F@@@].         INFORMATBH
)@@G@@ION IF PROVIDED, DON'T PASS BACK CONTROL IMAGES.@[@@@].     @D@@@].     BI
)@@G@@        THE TABLE SHOULD BE SELF EXPLAINATORY.  @C@@@].         CALLING BJ
)@@G@@INFORMATION IS PROVIDED IN THE@E@@@].         HEADER TO THE RESPECTIVE RBK
)@@G@@OUTINE.  IN GENERAL,    @D@@@].         THESE ROUTINES USE REGS X11, A1-BL
)@@G@@5, R1-5.    @[@@@].     @[@^@].     @[@^@].     @B@^@]          AXR$    BM
)@@G@@                    .   @#@@@^          AXR$    @B@^@]P         PROC    BN
)@@G@@                    .   @#@@@^P         PROC    @B@^@]CALL*     NAME    BO
)@@G@@                    .   @#@@@^CALL*     NAME    @B@^@]          LMJ     BP
)@@G@@  X11,P(1,1)        .   @ @@@^          LMJ       X11,P(1,1)@B@^@]      BQ
)@@G@@    END                         .   @#@@@^          END     @[@@@].     BR
)@@G@@@[@^@].     @[@^@].     @D@@@].         THIS IS THE TABLE USED BY THESE BS
)@@G@@ROUTINES    @[@@@].     @[@^@].     @[@^@].     @I@^@].                 BT
)@@G@@ .............................................................    @I@@@^BU
)@@G@@.                 ......................................................BV
)@@G@@.......     @I@^@].       PKT+0      :                  1ST 6-WORDS OF SBW
)@@G@@DFI PKT                  :    @I@@@^.      PKT+0      :                 BX
)@@G@@ 1ST 6-WORDS OF SDFI PKT                  :     @I@^@].                 BY
)@@G@@ .............................................................    @I@@@^BZ
)@@G@@.                 ......................................................CA
)@@G@@.......     @I@#@].       PKT+6      :     *START LOC OF FILE      :    CB
)@@G@@    *LAST SEC+1          :    @I@^@#.       PKT+6      :              *SCC
)@@G@@TARTING LOCATION OF FILE                   :    @I@@@^.      PKT+6      CD
)@@G@@:              *STARTING LOCATION OF FILE                   :     @I@^@]CE
)@@G@@.                  .....................................................CF
)@@G@@........    @I@@@^.                 ....................................CG
)@@G@@.........................     @I@^@].       PKT+7      :       *BUFLENGTCH
)@@G@@H/SEC        :        *# OF BUFFERS        :    @I@@@^.      PKT+7      CI
)@@G@@:       *BUFLENGTH/SEC        :        *# OF BUFFERS        :     @I@^@]CJ
)@@G@@.                  .....................................................CK
)@@G@@........    @I@@@^.                 ....................................CL
)@@G@@.........................     @I@^@].       PKT+8      :                CM
)@@G@@             0                             :    @I@@@^.      PKT+8      CN
)@@G@@:                             0                             :     @I@^@]CO
)@@G@@.                  .....................................................CP
)@@G@@........    @I@@@^.                 ....................................CQ
)@@G@@.........................     @I@^@].       PKT+9      :     *WKAREA    CR
)@@G@@             :         *PGTBL              :    @I@@@^.      PKT+9      CS
)@@G@@:     *WKAREA                 :         *PGTBL              :     @I@^@]CT
)@@G@@.                  .....................................................CU
)@@G@@........    @I@@@^.                 ....................................CV
)@@G@@.........................     @I@^@].      PKT+10      :      *BUFFER LECW
)@@G@@NGTH/WD      :     *IMAGE AREA LENGTH      :    @I@@@^.     PKT+10      CX
)@@G@@:      *BUFFER LENGTH/WD      :     *IMAGE AREA LENGTH      :     @I@^@]CY
)@@G@@.                  .....................................................CZ
)@@G@@........    @I@@@^.                 ....................................DA
)@@G@@.........................     @I@^@].      PKT+11      :     IMAGE AREA DB
)@@G@@POINTER      :       *IMAGE AREA LOC       :    @I@@@^.     PKT+11      DC
)@@G@@:     IMAGE AREA POINTER      :       *IMAGE AREA LOC       :     @I@^@]DD
)@@G@@.                  .....................................................DE
)@@G@@........    @I@@@^.                 ....................................DF
)@@G@@.........................     @I@^@].      PKT+12      :     CURRENT BUFDG
)@@G@@FER BASE     :      BUFFER IMAGE LOC       :    @I@@@^.     PKT+12      DH
)@@G@@:     CURRENT BUFFER BASE     :      BUFFER IMAGE LOC       :     @I@^@]DI
)@@G@@.                  .....................................................DJ
)@@G@@........    @I@@@^.                 ....................................DK
)@@G@@.........................     @I@^@].      PKT+13      :       REQUESTEDDL
)@@G@@ REC #       :    NEXT SEQUENTIAL REC #    :    @I@@@^.     PKT+13      DM
)@@G@@:       REQUESTED REC #       :    NEXT SEQUENTIAL REC #    :     @I@^@]DN
)@@G@@.                  .....................................................DO
)@@G@@........    @I@@@^.                 ....................................DP
)@@G@@.........................     @I@^@].      PKT+14      :        *INDEX LDQ
)@@G@@ENGTH        :         *INDEX LOC          :    @I@@@^.     PKT+14      DR
)@@G@@:        *INDEX LENGTH        :         *INDEX LOC          :     @I@^@]DS
)@@G@@.                  .....................................................DT
)@@G@@........    @I@@@^.                 ....................................DU
)@@G@@.........................     @I@^@].      PKT+15      :      *WORK AREADV
)@@G@@ LENGTH      :     LAST PAGE # REF'ED      :    @I@@@^.     PKT+15      DW
)@@G@@:      *WORK AREA LENGTH      :     LAST PAGE # REF'ED      :     @I@^@]DX
)@@G@@.                  .....................................................DY
)@@G@@........    @I@@@^.                 ....................................DZ
)@@G@@.........................     @I@^@].      PKT+16      :                EA
)@@G@@     SDF CONTROL WORD                      :    @I@@@^.     PKT+16      EB
)@@G@@:                     SDF CONTROL WORD                      :     @I@^@]EC
)@@G@@.                  .....................................................ED
)@@G@@........    @I@@@^.                 ....................................EE
)@@G@@.........................     @I@^@].      PKT+17      :   OVFL  :      EF
)@@G@@ FLAGS       :          BUFPTR             :    @I@@@^.     PKT+17      EG
)@@G@@:   OVFL  :       FLAGS       :          BUFPTR             :     @I@^@]EH
)@@G@@.                  .....................................................EI
)@@G@@.......     @H@@@^.                 ....................................EJ
)@@G@@........................@I@^@].      PKT+18      : *CYCNIND:   *CYCN  : EK
)@@G@@       :            OFFSET           :    @I@@@^.     PKT+18      : *CYCEL
)@@G@@NIND:   *CYCN  :        :            OFFSET           :     +@@@@[@O@#@]EM
)@@G@@ 0)^@)^@)^@)^@)^@)^@)^@)^@)^@, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,EN
)@@G@@ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)+@@@@@@I@^@#.           EO
)@@G@@       ............................................................     EP
)@@G@@@H@@@^.                 ................................................EQ
)@@G@@............+@@@@[@O@#@] 0)^@)^@)^[KDTO S1B@)^@)^@)^@'^@%CTTCTIDDIC)'^@)ER
)@@G@@^@%CTTCTI^@)BK)^@)^@)^@)^@'^@)^@)^@)^@)^@)^@)D9AC1NC(O^@)^@)^@)^@)^@)^@'ES
)@@G@@+@@@@@@I@^@#.      PKT+19      :                    *LAST SECTOR + 1    ET
)@@G@@                   :    @I@@@^.     PKT+19      :                    *LAEU
)@@G@@ST SECTOR + 1                       :     @H@#@].                  .....EV
)@@G@@......................................................@I@^@#.           EW
)@@G@@       ............................................................     EX
)@@G@@@H@@@^.                 ................................................EY
)@@G@@............@[@@@].     @[@^@].     @[@^@].     @[@^@].     @[@^@].     EZ
)@@G@@@F@^@]BUFLTH    EQUF     10,A0,H1           . BUFFER LENGTH IN WORDS    FA
)@@G@@@F@@@^BUFLTH    EQUF      10,A0,H1          . BUFFER LENGTH IN WORDS    FB
)@@G@@@E@#@]WKAREA    EQUF      15,A0,H1          .WORK AREA LENGTH     @E@@@#FC
)@@G@@WKAREA    EQUF      15,A0,H1          . WORK AREA LENGTH    @F@^@]IALTH FD
)@@G@@    EQUF     10,A0,H2           . USER IMAGE AREA LENGTH    @F@@@^IALTH FE
)@@G@@    EQUF      10,A0,H2          . USER IMAGE AREA LENGTH    @F@@@]IAPNTRFF
)@@G@@    EQUF      11,A0,H1          . USER INAGE AREA POINTER   @E@@@]IALOC FG
)@@G@@    EQUF      11,A0,H2          . USER IMAGE AREA LOC @E@@@]CBBASE    EQFH
)@@G@@UF      12,A0,H1          . CURRENT BUFFER BASE @E@@@]BILOC     EQUF    FI
)@@G@@  12,A0,H2          . BUFFER IMAGE LOC    @F@@@]RREC      EQUF      13,AFJ
)@@G@@0,H1          . CURRENT REQUESTED RECORD  @H@@@]NREC      EQUF      13,AFK
)@@G@@0,H2          . NEXT SEQUENTIAL REC TO BE REFERENCED  @D@@@]INLTH     EQFL
)@@G@@UF      14,A0,H1          . INDEX LINGTH  @D@@@]INLOC     EQUF      14,AFM
)@@G@@0,H2          . INDEX LOC     @E@@@]SDFCW     EQUF      16,A0           FN
)@@G@@  . SDF CONTROL WORD    @G@@@]MRPREF    EQUF      15,A0,H2          . MOFO
)@@G@@ST RECENT PAGE REFERENCED     @E@@@]LTENT     EQUF      0,A1,H2         FP
)@@G@@  . LAST INDEX ENTRY #  @H@@@]BUFPTR    EQUF      17,A0,H2          . TEFQ
)@@G@@MP STORAGE STORE FOR TRANS FLAG     @G@@@]CYCLE     EQUF      18,A0     FR
)@@G@@        . MUST BE NEG IF NO CYCLE CHECK   @E@@@]CYCN      EQUF      18,AFS
)@@G@@0,S2          . PROVIDED CYCLE #    @E@@@]CYCNIND   EQUF      18,A0,S1  FT
)@@G@@        . CYCLE INDICATOR     @F@@@]WKLOC     EQUF      9,A0,H1         FU
)@@G@@  . LOCATION OF WORK AREA     @F@@@]PGTBL     EQUF      9,A0,H2         FV
)@@G@@  . LOCATION OF PAGE TABLE    @F@@@]OVERFLOW  EQUF      17,A0,S1        FW
)@@G@@  . BUFFER OVERFLOW INDICATOR @F@@@]OFFSET    EQUF      18,A0,H2        FX
)@@G@@  . BUFFER OFFSET FOR ISDFIOA @E@@@]FLAGS     EQUF      17,A0,XH1       FY
)@@G@@  . INTERNAL MODE FLAGS @F@@@]ASCFLG    EQUF      1,,U              . CUFZ
)@@G@@RRENT CHAR MODE OF REC  @H@@@]FILEFLG   EQUF      2,,U              . INGA
)@@G@@HIBITS PROCESSING OF CYCLE INFO     @G@@@]CONTFLG   EQUF      4,,U      GB
)@@G@@        . FORCES RETURN OF CONTROL IMAGES @[@^@]/.    @[@@@^/     @[@@@]GC
)@@G@@.     @[@^@].     @[@^@].     @D@^@].         THIS IS THE ROUTINE USED TGD
)@@G@@O OPEN THE ISDFI  @C@@@^.    THIS IS THE ROUTINE USED TO OPEN THE ISDFI GE
)@@G@@@E@^@].                   COMPLEX.  IT SERVES THE PURPOSE OF:     @D@@@^GF
)@@G@@.              COMPLEX.  IT SERVES THE PURPOSE OF:    @F@^@].           GG
)@@G@@        CHECKING APPROPRIATE INFORMATION PROVIDED     @E@@@^.           GH
)@@G@@   CHECKING APPROPRIATE INFORMATION PROVIDED    @E@^@].                 GI
)@@G@@  IN THE TABLE, FILLING IN OTHER NECESSARY@E@@@^.              IN THE TAGJ
)@@G@@BLE, FILLING IN OTHER NECESSARY     @F@^@].                   INFORMATIOGK
)@@G@@N, INITIALLIZING THE WORK AREA AND  @E@@@^.              INFORMATION, INGL
)@@G@@ITIALLIZING THE WORK AREA AND @F@^@].                   INDEX AREA, AND GM
)@@G@@FILLING THE FIRST BUFFER WITH @E@@@^.              INDEX AREA, AND FILLIGN
)@@G@@NG THE FIRST BUFFER WITH@F@^@].                   THE FIRST PART OF THE GO
)@@G@@RESPECTIVE INPUT FILE.  @E@@@^.              THE FIRST PART OF THE RESPEGP
)@@G@@CTIVE INPUT FILE. @F@^@].                   BITS PASSED IN A2 ARE USED FGQ
)@@G@@OR FLAG INITIAL-  @E@@@^.              BITS PASSED IN A2 ARE USED FOR FLGR
)@@G@@AG INITIAL- @F@^@].                   IZATION.  IF 'FILEFLG' IS SET NO CGS
)@@G@@HECK IS MADE@F@@@^.              IZATION.  IF 'FILEFLG' IS SET NO CHECK GT
)@@G@@IS MADE     @G@^@].                   ON THE 1ST WORD OF THE FILE - IT IGU
)@@G@@S ASSUMED THE     @F@@@^.              ON THE 1ST WORD OF THE FILE - IT GV
)@@G@@IS ASSUMED THE    @C@^@].                   USER KNOWS WHAT HE IS DOING.GW
)@@G@@@C@@@^.              USER KNOWS WHAT HE IS DOING.     @[@@@].     @^@@@]GX
)@@G@@.         ISDFIOA -     @E@^@].                   THIS IS AN ALTERNATE EGY
)@@G@@NTRY TO THE OPEN  @D@@@^.              THIS IS AN ALTERNATE ENTRY TO THEGZ
)@@G@@ OPEN @E@^@].                   ROUTINE.  IT ALLOWS THE USER TO SPECIFY HA
)@@G@@@D@@@^.              ROUTINE.  IT ALLOWS THE USER TO SPECIFY@E@^@].     HB
)@@G@@              A STARTING OFFSET.  THE OFFSET IS PASSED@E@@@^.           HC
)@@G@@   A STARTING OFFSET.  THE OFFSET IS PASSED     @E@^@].                 HD
)@@G@@  IN A1 AND MUST BE THE EFFECTIVE LOCATION@E@@@^.              IN A1 ANDHE
)@@G@@ MUST BE THE EFFECTIVE LOCATION     @E@^@].                   WITHIN THEHF
)@@G@@ 1ST PAGE OF THE 1ST RECORD TO@E@@@^.              WITHIN THE 1ST PAGE OHG
)@@G@@F THE 1ST RECORD TO     @A@^@].                   BE FETCHED.     @ @@@^HH
)@@G@@.              BE FETCHED.    @B@^@].                   CALLING SEQUENCEHI
)@@G@@:     @A@@@^.              CALLING SEQUENCE:    @E@^@].                 HJ
)@@G@@                    L    A2,<FLAGBITS> .  @D@@@^.                       HK
)@@G@@         L    A2,<FLAGBITS> . @E@^@].                                   HL
)@@G@@  L    A1,<OFFSET> .    @D@@@^.                                L    A1,<HM
)@@G@@OFFSET> .   @E@^@].                                     L    A0,<PKT ADDHN
)@@G@@R> .  @D@@@^.                                L    A0,<PKT ADDR> . @D@^@]HO
)@@G@@.                                     CALL ISDFIOA .  @C@@@^.           HP
)@@G@@                     CALL ISDFIOA . @D@^@].                             HQ
)@@G@@        J    ERROR .    @C@@@^.                                J    ERROHR
)@@G@@R .   @E@^@].                                     < NORMAL RETURN >     HS
)@@G@@@D@@@^.                                < NORMAL RETURN >    @[@@@].     HT
)@@G@@@#@@@].         ISDFIO -@D@^@].                   THIS IS THE NORMAL OPEHU
)@@G@@NING ENTRY. @C@@@^.              THIS IS THE NORMAL OPENING ENTRY.@B@^@]HV
)@@G@@.                   CALLING SEQUENCE IS:  @A@@@^.              CALLING SHW
)@@G@@EQUENCE IS: @E@^@].                                     L    A2,<FLAGBITHX
)@@G@@S> .  @D@@@^.                                L    A2,<FLAGBITS> . @E@^@]HY
)@@G@@.                                     L    A0,<PKT ADDR> .  @D@@@^.     HZ
)@@G@@                           L    A0,<PKT ADDR> . @D@^@].                 IA
)@@G@@                    CALL ISDFIO .   @C@@@^.                             IB
)@@G@@   CALL ISDFIO .  @D@^@].                                     J    ERRORIC
)@@G@@ .    @C@@@^.                                J    ERROR .   @E@^@].     ID
)@@G@@                                < NORMAL RETURN >     @D@@@^.           IE
)@@G@@                     < NORMAL RETURN >    @[@@@].     @[@^@].     @[@^@]IF
)@@G@@.     @[@^@].     @B@^@]$(1)      LIT                         .   @#@@@^IG
)@@G@@$(1)      LIT     @]@^@]ISDFIOA*.   @]@@@^ISDFIOA*    @E@@@]          S IH
)@@G@@        A1,OFFSET         . TEMP STOR FOR OFFSET@E@@@]          J       II
)@@G@@  $+2               . OVER OTHER ENTRY    @]@^@]ISDFIO*.    @]@@@^ISDFIOIJ
)@@G@@*     @F@@@]          SZ        OFFSET            . INIT POTENTIAL OFFSEIK
)@@G@@T     @E@@@]          L         A1,OFFSET         . GET POSSIBLE OFFSET IL
)@@G@@@E@@@]          L,U       R4,1,X11          . SAVE NORMAL RET ADDR@F@@@]IM
)@@G@@          TG        A1,BUFLTH         . MUST BE WITHIN 1ST PAGE   @E@@@]IN
)@@G@@          JGD       R4,ISDFIORT       . OUT OF PAGE - ERROR @E@@@]      IO
)@@G@@    L         A1,INLOC          . GET ADDR OF INDEX   @E@@@]          S IP
)@@G@@        A2,FLAGS          . INIT MODE FLAGS     @E@@@]          L,U     IQ
)@@G@@  A2,1              . SET (1) AS NEXT REC#@B@^@]          S         A2,NIR
)@@G@@REC           .   @ @@@^          S         A2,NREC   @F@@@]          TZIS
)@@G@@        A1                . DID WE HAVE AN INDEX?     @F@@@]          SZIT
)@@G@@        0,A1              . INIT INDEX CONTROL WORD   @F@@@]          L IU
)@@G@@        A1,WKAREA         . GET LENGTH OF WORK AREA   @D@@@]          A,IV
)@@G@@U       A1,15             . ADD FAC LENGTH@F@@@]          LXI       A0,AIW
)@@G@@1             . SET IN UPPER WORD OF A0   @F@@@]          L         A1,WIX
)@@G@@KAREA         . GET LENGTH OF BUFFER AREA @F@@@]          CALL      PGOPIY
)@@G@@N$            . CALL PAGE OPEN ROUTINE    @D@@@]          JGD       R4,IIZ
)@@G@@SDFIORT       . ERROR RETURN  @E@@@]          LXM       A0,A3           JA
)@@G@@  . RESET A0 TO FAC ADDR@E@@@]          L,U       A1,1              . SEJB
)@@G@@T TO 1ST PAGE     @E@@@]          S         A1,MRPREF         . SAVE CURJC
)@@G@@RENT PAGE # @C@@@]          CALL      PGRD$             . READ IT @D@@@]JD
)@@G@@          JGD       R4,ISDFIORT       . ERROR RETURN  @E@@@]          S JE
)@@G@@        A1,CBBASE         . SET BUF BASE ADDR   @D@@@]          A       JF
)@@G@@  A1,OFFSET         . ADD IN OFFSET @E@@@]          S         A1,BILOC  JG
)@@G@@        . SET ADDR OF 1ST REC @D@@@]          L         A2,FLAGS        JH
)@@G@@  . GET MODE FLAGS@F@@@]          TEP       A2,FILEFLG        . IF USER JI
)@@G@@SET USER KNOWS    @C@@@]          J         ISDFIORT          . RETURN  JJ
)@@G@@@E@@@]          OR        A2,FILEFLG        . SET JUST IN CASE    @D@@@]JK
)@@G@@          L         A1,,A1            . GET 1ST WORD  @E@@@]          JPJL
)@@G@@        A1,ISDFIORT       . HOPE THIS IS DATA CW@G@@@]          TNE     JM
)@@G@@  A1,('**PF**')     . MAY REALLY BE IN WRONG PLACE    @C@@@]          JGJN
)@@G@@D       R4,ISDFIORT       . ERROR   @F@@@]          SSL       A1,18     JO
)@@G@@        . LOOK AT 1ST HALF OF LABEL @G@@@]          OR,U      A1,07700  JP
)@@G@@        . MUST SEE IF MAYBE A PRINT FILE  @F@@@]          TE,U      A2,0JQ
)@@G@@507713        . MAYBE A FORTRAN SDF FILE  @E@@@]          TNE,U     A2,0JR
)@@G@@507725        . HOPE ISN'T **PF**   @D@@@]          S         A3,FLAGS  JS
)@@G@@        . IGNORE CYCLES @E@@@#          TNE,U     A2,0507735        . HOJT
)@@G@@W ABOUT PCIOS?    @E@@@#          S         A3,FLAGS          . YES, IGNJU
)@@G@@ORE CYCLES  @]@^@]ISDFIORT.   @]@@@^ISDFIORT    @E@@@]          L       JV
)@@G@@  X11,R4            . RESTORE RETURN LINK @C@@@]          J         0,X1JW
)@@G@@1             . RETURN  @[@^@]/.    @[@@@^/     @[@@@].     @[@^@].     JX
)@@G@@@[@^@].     @[@^@].     @]@@@]. ISDFI -   @[@@@].     @E@@@].         THJY
)@@G@@IS IS THE MAIN ROUTINE OF THE ISDFI COMPLEX.    @F@@@].                 JZ
)@@G@@  IT IS CAPABLE OF READING, IN A DIRECT ACCESS  @F@@@].                 KA
)@@G@@  MANNER, ANY RECORD OF A SDF FILE, WHILE AT    @E@@@].                 KB
)@@G@@  THE SAME TIME BUILDING THE APPROPRIATE  @G@@@].                   INDEKC
)@@G@@X INFORMATION WHEN NECESSARY. NO INDEX ENTRY    @F@@@].                 KD
)@@G@@  IS BUILT TWICE, THUS, AT THE END OF ONE PASS  @F@@@].                 KE
)@@G@@  THROUGH THE FILE THE INDEX HAS BEEN COMPLETED.@E@@@].                 KF
)@@G@@  IF ISDFIA IS THE ENTRY POINT IT WILL    @E@@@].                   BT IKG
)@@G@@MAGE TO USER AREA IN EVERY CASE.    @E@@@].                   IF ISDFI IKH
)@@G@@S THE ENTRY, TRANSFER WILL    @D@@@].                   BE MADE ONLY IF KI
)@@G@@THE IMAGE SPANS A @E@@@].                   BUFFER BOUNDRY.  IN EVERY CAKJ
)@@G@@SE IT PASSES@D@@@].                   THE IMAGE LOCATION BACK IN A2.    KK
)@@G@@@B@@@].                     USES X11 A0-5 R1-5  @E@@@].                 KL
)@@G@@                    RETURNS A0 AS IT WAS  @F@@@].                       KM
)@@G@@              RETURNS A1 WITH NEXT REC #  @G@@@].                       KN
)@@G@@              RETURNS H2 OF A1 WITH NEXT REC #  @H@@@].                 KO
)@@G@@                    RETURNS H1 OF A1 WITH CHAR MODE FLG     @F@@@].     KP
)@@G@@                                     (EG. 1=>ASCII, 0=>FD)  @G@@@].     KQ
)@@G@@                                RETURNS A2 WITH ADDR OF IMAGE     @G@@@]KR
)@@G@@.                                     ON EOF RETURN A1 WITH REC # OF EOFKS
)@@G@@@[@@@].     @B@@@].                   CALLING SEQUENCE:     @E@@@].     KT
)@@G@@                                L,U   A0,FAC ADDR     @F@@@].           KU
)@@G@@                          L     A1,REQUESTED REC #    @F@@@].           KV
)@@G@@                          LMJ   X11,ISDFI (OR ISDFIA) @D@@@].           KW
)@@G@@                          < ERROR RETURN >@D@@@].                       KX
)@@G@@              < EOF RETURN >  @[@@@].     @]@@@]. ISDFIA -  @E@@@].     KY
)@@G@@    SAME AS ABOVE BUT WILL ALWAYS TRANSFER IMAGE TO   @C@@@].           KZ
)@@G@@        BUFFER PROVIDED BY USER.    @[@@@].     @G@@@].                 LA
)@@G@@  NOTE: IF INDEX ADDRESS PROVIDED IN PKT IS ZERO, NO  @G@@@].           LB
)@@G@@              INDEX IS BUILT - THUS THE ROUTINE DEFAULTS TO @G@@@].     LC
)@@G@@                    AN EFFECTIVE SDFI WITH SOME ADDED OVERHEAD.   @F@@@]LD
)@@G@@.                         IN THIS CASE A NON-SEQUENTIAL FETCH WILL@C@@@]LE
)@@G@@.                         CAUSE AN ERROR RETURN.@[@@@].     @[@^@].     LF
)@@G@@@[@^@].     @[@^@].     @B@^@]$(1)      LIT                         .   LG
)@@G@@@#@@@^$(1)      LIT     @]@^@]ISDFIA*.    @]@@@^ISDFIA*     @F@@@]      LH
)@@G@@    L         A2,IALOC          . PRELOAD IMAGE AREA LOC    @E@@@]      LI
)@@G@@    J         $+2               . SKIP ISDFI ENTRY    @]@^@]ISDFI*.     LJ
)@@G@@@[@@@^ISDFI*@E@@@]          SZ        A2                . SET AS FLAG FOLK
)@@G@@R BT  @G@@@]          SZ        OVERFLOW          . INIT OVERFLOW IND FOLL
)@@G@@R THIS FETCH@E@@@]          S         A1,RREC           . SAVE DESIRED RLM
)@@G@@EC#   @E@@@]          L         R4,X11            . SAVE RETURN LINK    LN
)@@G@@@G@@@]          L,U       R5,1              . SET COUNTER TO FETCH NEXT LO
)@@G@@REC   @F@@@]          TNE       A1,NREC           . IS IT A SEQUENTIAL ALP
)@@G@@CCESS @F@@@]          J         ILOOP1            . YES - WE'RE THERE ALLQ
)@@G@@READY @E@@@]          TNZ       INLOC             . IS THERE AN INDEX?  LR
)@@G@@@E@@@]          JGD       R4,ISDFEOF        . NO - EROR RETURN    @E@@@]LS
)@@G@@          CALL      IFETCH            . NO - GO LOOK UP REC @E@@@]      LT
)@@G@@    JGD       R4,ISDFEOF        . ERROR IN PAGE FETCH @E@@@]          J LU
)@@G@@        ILOOP1            . NO CONTINUATION YET @E@@@]ILOOP     LXM     LV
)@@G@@  A1,BILOC          . GET BUFFER IMAGE LOC@E@@@]          L,S1      A5,0LW
)@@G@@,A1           . CONTROL WD INTO A5  @E@@@]          TE,U      A5,051    LX
)@@G@@        . IS IT A CONTINUATION@D@@@]          J         ILOOP1          LY
)@@G@@  . NO - FORGET IT@G@@@]          TNZ       R5                . YES - MULZ
)@@G@@ST TRY TO STRING IT OUT @E@@@]          TNE       A2,IALOC          . DIMA
)@@G@@D WE TRANSFER REC @E@@@]          J         ISDFCT            . YES - GEMB
)@@G@@T REST OF IT@G@@@]          S         A2,BILOC          . NO - BACKUP ANMC
)@@G@@D TRANSFER IT     @F@@@]          LXM       A1,A2             . SET UP RMD
)@@G@@EGS TO FAKE IT    @E@@@]          L         A2,IALOC          . FLAG FORME
)@@G@@ TRANSFER   @C@@@]          J         ILOOP5            . GO TO IT@[@@@]MF
)@@G@@.     @E@@@].         WE ARE IN THE PROCESS OF FETCHING A RECORD WITH   MG
)@@G@@@E@@@].         AT LEAST ONE CONTINUATION IMAGE.  WE APPEND THE   @E@@@]MH
)@@G@@.         REMAINING IMAGE TO THE END OF THE CURRENT RECORD  @C@@@].     MI
)@@G@@    UNTIL THE USER BUFFER IS EXHAUSTED.   @[@@@].     @H@@@]ISDFCT    L,MJ
)@@G@@S2      A5,0,*A1          . EITHER WE HAVE IT WHERE WE WANT IT    @E@@@]MK
)@@G@@          L         A3,SDFCW          . GET CONTROL WORD    @D@@@]      ML
)@@G@@    SSA       A3,24             . NEED LENGTH   @F@@@]          TP      MM
)@@G@@  A3                . NEG MEANS A CONTROL IMAGE @G@@@]          L,S2    MN
)@@G@@  A3,SDFCW          .     THEY CAN ONLY BE MAX 64     @E@@@]          S MO
)@@G@@        A3,A4             . NEED HERE FOR LATER @F@@@]          AN      MP
)@@G@@  A3,IALTH          . SEE IF THERE'S ENOUGH BUF @E@@@]          TN      MQ
)@@G@@  A3                . YES - OK SO FAR     @F@@@]          L,U       A3,0MR
)@@G@@              . NO - RESET LENGTH TO ZERO @E@@@]          A         A4,AMS
)@@G@@5             . CALC REAL REC LENGTH@E@@@]          TG        A4,IALTH  MT
)@@G@@        . WILL WE OVERFLOW?   @H@@@]          L         A5,A3           MU
)@@G@@  . YES - TRANSFER ONLY REMAINING BUFFER  @G@@@]          SZ        A3  MV
)@@G@@              . INIT A3 FOR POSSIBLE SHIFT INDEX@H@@@]          TP      MW
)@@G@@  SDFCW             . MAY NEVER HAVE A CONT CONTROL IMAGE   @H@@@]      MX
)@@G@@    L,U       A3,6              . BUT WILL TRY TO PLUG WHOLE ANYWAY     MY
)@@G@@@G@ @]          L         R2,(-07777*/24)   . MASK FOR DATA IMAGE CONT WMZ
)@@G@@RD    @G@@@           L         R2,(077777777)    . MASK FOR DATA IMAGE NA
)@@G@@CONT WRD    @F@@@]          TP        SDFCW             . IS THIS A CONTNB
)@@G@@OL IMAGE?   @G@ @]          L         R2,(-077*/24)     . YES - ONLY S2 NC
)@@G@@CAN BE LENGTH     @G@@@           L         R2,(0770077777777) . YES - OND
)@@G@@NLY S2 CAN BE LENGTH    @F@@@]          LSSL      A4,24,A3          . SHNE
)@@G@@IFT TO CHECK OVERFLOW   @H@@@]          TP        A4                . NENF
)@@G@@G MEANS IMAGE TOO LONG FOR LEGAL SDF@H@@@]          JGD       R4,ISDFEOFNG
)@@G@@        . TAKE ERROR EXIT - NOTHING ELSE TO DO  @H@@@]          SSL     NH
)@@G@@  A4,18,A3          . NEED TO JUSTIFY IN CASE OF CONTROL    @G@@@]      NI
)@@G@@    LXI       A3,A4             . PREPARE TO FIT IN CONTROL WRD   @F@@@]NJ
)@@G@@          MLU       A3,SDFCW          . MERGE WITH CONTROL WRD    @C@@@]NK
)@@G@@          S         A4,SDFCW          . UPDATE  @F@@@]          TNZ     NL
)@@G@@  R5                . ARE WE TRANSFERING IMAGE? @G@@@]          L       NM
)@@G@@  A2,IAPNTR         . YES - GET POINTER INTO BUFFER   @D@@@]          J NN
)@@G@@        ISDFXF            . GO TRANSFER   @[@@@].     @E@@@].         THNO
)@@G@@IS IS THE MAIN CONTROL LOOP.  A NORMAL RETURN IS@F@@@].         ALWAYS MNP
)@@G@@ADE FROM THIS POINT.  TESTS ARE MADE FOR SWITCH @F@@@].         IMAGES ANQ
)@@G@@ND EOFS.  IF ALL IS SATISFACTORY WE PREPARE     @D@@@].         POINTERSNR
)@@G@@ FOR POSSIBLE TRANSFER OF RECORD.   @[@@@].     @F@@@]ILOOP1    TZ      NS
)@@G@@  R5                . ROUTINE IS FOR NEXT IMAGE @G@@@]          CALL    NT
)@@G@@  ISDFCN            . BRANCH TO CONTROL IMAGE ROUTINE @E@@@]          J NU
)@@G@@        ISDFRT            . GOT THE ONE WE WANT @E@@@]          L       NV
)@@G@@  A1,BILOC          . GET BUFFER IMAGE LOC@D@@@]          LXI,U     A1,1NW
)@@G@@              . SET TO INDEX  @F@@@]          L         A5,0,*A1        NX
)@@G@@  . GET CONTROL WORD AND INC  @E@@@]          S         A5,SDFCW        NY
)@@G@@  . STORE IN PACKET     @F@@@]          S         A1,BILOC          . UPNZ
)@@G@@DATE BUFFER IMAGE LOC   @F@@@]          JP        A5,ILOOP5         . ONOA
)@@G@@LY TEST CONTROL IMAGES  @E@@@]          SSL       A5,30             . SHOB
)@@G@@IFT TO TEST S1    @E@@@]          TNE,U     A5,077            . CHECK FOOC
)@@G@@R EOF FIRST @C@@@]          J         ISDFEOF           . GO IT   @D@@@]OD
)@@G@@          L,S6      A3,SDFCW          . JUST IN CASE  @F@@@]          L OE
)@@G@@        A4,FLAGS          . GET FLAGS JUST IN CASE    @F@@@]          L,OF
)@@G@@XU      R2,-1             . SET MASK CASE OF SWITCH   @E@@@]          TEOG
)@@G@@,U      A5,050            . IS IT A LABEL IMAGE @F@@@]          TNE,U   OH
)@@G@@  A5,042            . OR MAYBE A SWITCH IMAGE   @D@@@]          MLU     OI
)@@G@@  A3,A4             . SET ASCFLG BIT@E@@@]          S         A4,FLAGS  OJ
)@@G@@        . RESTORE FLAG WORD   @E@@@]ILOOP5    L         A5,SDFCW        OK
)@@G@@  . GET CONTROL WORD    @F@@@]          SSA       A5,24             . SHOL
)@@G@@IFT TO GET LENGTH OF REC@F@@@]          TP        A5                . NEOM
)@@G@@G MEANS CONTROL IMAGE   @D@@@]          L,S2      A5,SDFCW          . GEON
)@@G@@T REC LENGTH@H@@@]          TG        A5,IALTH          . IS IT LARGER TOO
)@@G@@HAN USER IMAGE AREA     @G@@@]          L         A5,IALTH          . YEOP
)@@G@@S - USE IMAGE AREA LENGTH     @E@@@]ISDFXF    L         A4,BILOC        OQ
)@@G@@  . GET BUFFER IMAGE LOC@D@@@]          A         A4,A5             . ADOR
)@@G@@D REC LENGTH@D@@@]          L         A3,CBBASE         . GET BUFFER LOCOS
)@@G@@@E@@@]          A         A3,BUFLTH         . ADD BUFFER LENGTH   @F@@@]OT
)@@G@@          AN        A4,A3             . IS ALL OF REC IN BUFFER   @E@@@]OU
)@@G@@          JP        A4,ISDFRD         . N0 - GET NEXT BUFFER@[@@@].     OV
)@@G@@@E@@@].         WE'RE HERE TO SEE IF WE MUST MOVE RECORD OR SIMPLY@^@@@]OW
)@@G@@.         FAKE INDEXES. @[@@@].     @F@@@]ISDFBT    TZ        R5        OX
)@@G@@        . IS THIS  THE REC WE WANT  @G@@@]          J         $+3       OY
)@@G@@        . NO - UPDATE BUFFER POINTER ONLY @F@@@]          JNZ       A2,IOZ
)@@G@@SDFTF         . YES - JUMP IF RET LOC SET @H@@@]          L,U       A2,,PA
)@@G@@A1            . GET LOC OF IMAGE IN BUFFER FOR RET    @F@@@]          A PB
)@@G@@        A1,A5             . UPDATE BUFFER POINTER     @D@@@]          J PC
)@@G@@        ISDFSP            . SKIP TRANSFER @D@@@]ISDFTF    LXI,U     A2,1PD
)@@G@@              . SET TO INDEX  @F@@@]          L         R1,A5           PE
)@@G@@  . LOAD #WORDS TO TRANSFER   @F@@@]          BT        A2,0,*A1        PF
)@@G@@  . TRANSFER REC TO USER AREA @H@@@]          S         A2,IAPNTR       PG
)@@G@@  . UPDATE INCASE WE TRANSFERED ANYTHING  @G@@@]          L         A2,IPH
)@@G@@ALOC          . IMAGE NOW IN USER AREA BUFFER   @F@@@]ISDFSP    S       PI
)@@G@@  A1,BILOC          . UPDATE BUFFER IMAGE LOC   @E@@@]          L       PJ
)@@G@@  A5,SDFCW          . GET CONTROL WORD    @F@@@]          SSA       A5,2PK
)@@G@@4             . SHIFT TO FIND LENGTH AGAIN@G@@@]          TP        A5  PL
)@@G@@              . SEE IF DATA OR CONTROL IMAGE    @G@@@]          L,S2    PM
)@@G@@  A5,SDFCW          . GET LENGTH FROM CONTROL IMAGE   @G@@@]          ANPN
)@@G@@        A5,IALTH          . IS REC LONGER THAN USER AREA    @D@@@]      PO
)@@G@@    JN        A5,ILOOP          . NO - LOOP     @[@@@].     @[@^@].     PP
)@@G@@@[@^@].     @F@@@].         WE HAVE OVER FLOWED THE USER BUFFER BUT MUSTPQ
)@@G@@ STILL FIND @B@@@].         THE START OF THE NEXT IMAGE.    @[@@@].     PR
)@@G@@@F@@@].         NOTE: AN OVERFLOW HERE IS NOT MARKED AS AN ERROR. IN    PS
)@@G@@@F@@@].               FACT, IT SHOULD BE BUT THIS TECHNIQUE IS CON-     PT
)@@G@@@F@@@].               SISTENT WITH THE ORIGINAL SDFI ROUTINE AND THE    PU
)@@G@@@F@@@].               ONLY HARM DONE IS A POSSIBLY TRUNCATED RECORD.    PV
)@@G@@@F@@@].               (THE LENGTH LEFT IN THE CONTROL WORD, HOWEVER,    PW
)@@G@@@E@@@].               IS THAT OF THE USER BUFFER! - ALSO OVERFLOW @D@@@]PX
)@@G@@.               FLAG IS LEFT SET IN PACKET ON RETURN.)@[@@@].     @[@^@]PY
)@@G@@.     @E@@@]ISDFED    L,U       A4,077            . GET OVERFLOW FLAG   PZ
)@@G@@@G@@@]          TNZ       R5                . BUT DO WE REALLY WANT THISQA
)@@G@@ REC? @D@@@]          S         A4,OVERFLOW       . YES - SET FLAG@E@@@]QB
)@@G@@          L         A4,BILOC          . GET BUFFER IMAGE LOC@F@@@]      QC
)@@G@@    A         A4,A5             . MUST GET PAST REST OF REC @F@@@]      QD
)@@G@@    S         A4,BILOC          . UPDATE BUFFER IMAGE LOC   @F@@@]      QE
)@@G@@    L         A3,CBBASE         . GET CURRENT BUFFER BASE   @E@@@]      QF
)@@G@@    A         A3,BUFLTH         . ADD BUFFER LENGTH   @F@@@]          ANQG
)@@G@@        A4,A3             . ARE WE STILL IN BUFFER    @D@@@]          JNQH
)@@G@@        A4,ILOOP          . YES - LOOP    @[@@@].     @E@@@].         STQI
)@@G@@ILL IN A OVERFLOW SITUATION BUT HAVE RUN OUT OFF@F@@@].         BUFFER -QJ
)@@G@@ MUST FETCH NEXT SEQUENTIAL PAGE AND SEARCH     @A@@@].         FOR STARQK
)@@G@@T OF NEXT RECORD. @[@@@].     @F@@@]ISDFOV    AN        A5,A4           QL
)@@G@@  . NO - GET # OVERFLOW WORDS @F@@@]          L         A1,MRPREF       QM
)@@G@@  . GET LAST PAGE # REFERENCED@E@@@]          A,U       A1,1            QN
)@@G@@  . INC TO NEXT PAGE    @E@@@]          S         A1,MRPREF         . SAQO
)@@G@@VE CURRENT PAGE # @E@@@]          S         A2,IAPNTR         . SAVE VALQP
)@@G@@UE IN A2    @D@@@]          CALL      PGRD$             . GO READ PAGE  QQ
)@@G@@@D@@@]          JGD       R4,ISDFEOF        . ERROR RETURN  @F@@@]      QR
)@@G@@    S         A1,BILOC          . UPDATE BUFFER IMAGE LOC   @F@@@]      QS
)@@G@@    S         A1,CBBASE         . UPDATE CURRENT BUFFER BASE@D@@@]      QT
)@@G@@    L         A2,IAPNTR         . RESTORE A2    @G@@@]          LXI,U   QU
)@@G@@  A1,1              . SET BUFFER POINTER TO INDEX     @G@@@]          J QV
)@@G@@        ISDFED            . GO SEE IF WE CAN LEAVE THIS MESS@F@@@]ISDFRDQW
)@@G@@    AN        A5,A4             . SUBRRACT OVERFLOW WORDS   @[@@@].     QX
)@@G@@@F@@@].         HERE WE HAVE EXHAUSTED THE CURRENT PAGE AND REQUIRE THE QY
)@@G@@@F@@@].         NEXT SEQUENTIAL PAGE.  IF NECESSARY THE PART OF THE     QZ
)@@G@@@F@@@].         RECORD WE NOW HAVE IS TRANSFERED TO THE USER BUFFER.    RA
)@@G@@@[@@@].     @E@@@]          TZ        R5                . DO WE TRANSFERRB
)@@G@@ YET  @B@^@]          J         ISDFSK            .   @ @@@^          J RC
)@@G@@        ISDFSK    @F@@@]          L         A2,IALOC          . MUST PUTRD
)@@G@@ IN USER AREA     @G@@@]          LXI,U     A2,1              . RECORD BRE
)@@G@@RIDGES BUFFER BOUNDRY   @F@@@]          L         R1,A5             . YERF
)@@G@@S - LOAD REPEAT COUNT   @C@@@]          BT        A2,0,*A1          . TRRG
)@@G@@ANSFER@E@@@]ISDFSK    L         A5,A4             . GET OVERFLOW COUNT  RH
)@@G@@@F@@@]          S         A2,IAPNTR         . SAVE IMAGE AREA POINTER   RI
)@@G@@@F@@@]          L         A1,MRPREF         . GET LAST PAGE # REFERENCEDRJ
)@@G@@@E@@@]          A,U       A1,1              . SET TO NEXT PAGE    @E@@@]RK
)@@G@@          S         A1,MRPREF         . SAVE CURRENT PAGE # @D@@@]      RL
)@@G@@    CALL      PGRD$             . GO READ PAGE  @D@@@]          JGD     RM
)@@G@@  R4,ISDFEOF        . ERROR OFF     @F@@@]          S         A1,BILOC  RN
)@@G@@        . RESET BUFFER IMAGE LOC    @F@@@]          S         A1,CBBASE RO
)@@G@@        . RESET CURRENT BUFFER BASE @D@@@]          LXI,U     A1,1      RP
)@@G@@        . SET TO INDEX  @F@@@]          L         A2,IAPNTR         . RERQ
)@@G@@STORE IMAGE AREA POINTER@E@@@]          J         ISDFXF            . GORR
)@@G@@ TRY TO FINISH    @G@@@]ISDFEOF   AN,U      A1,1              . YES - RERS
)@@G@@SET BUFFER IMAGE LOC    @[@@@].     @E@@@].         EOF RETURN - ALSO USRT
)@@G@@ED IN CASE OF ERROR AFTER     @ @@@].         DECREMENTING R4.    @[@@@]RU
)@@G@@.     @B@^@]          S         A1,BILOC          .   @ @@@^          S RV
)@@G@@        A1,BILOC  @E@@@]          L         A1,NREC           . RESET NERW
)@@G@@XT REC#     @G@@@]          JGD       R4,ISDFRL         . RETURN AFTER RRX
)@@G@@ESTORING LINK     @F@@@]ISDFRT    L         A1,NREC           . RETURN NRY
)@@G@@EXT REC# IN A1    @[@@@].     @A@@@].         NORMAL RETURN SEQUENCE    RZ
)@@G@@@[@@@].     @H@@@]          TNZ       OVERFLOW          . HAVE WE OVERFLSA
)@@G@@OWED THE USER BUFFER    @E@@@]          J         ISDFNO            . NOSB
)@@G@@ - JUST GET OUT   @G@A@]          L         R2,(-07777*/24)   . GET DATASC
)@@G@@ IMAGE CONT WRD MASK    @G@@@A          L         R2,(077777777)    . GESD
)@@G@@T DATA IMAGE CONT WRD MASK    @F@@@]          TP        SDFCW           SE
)@@G@@  . WAS THIS A CONTROL IMAGE? @F@A@]          L         R2,(-077*/24)   SF
)@@G@@  . YES - LENGTH ONLY IN S2   @F@@@A          L         R2,(077007777777SG
)@@G@@7) . YES - LENGTH ONLY IN S2  @G@@@]          L,U       A3,63           SH
)@@G@@  . GET MAX LENGTH FOR CONTROL IMAGE@F@@@]          TLE       A3,IALTH  SI
)@@G@@        . IS USER BUFFER SMALLER    @F@@@]          TN        SDFCW     SJ
)@@G@@        . IS THIS A CONTROL IMAGE   @F@@@]          L         A3,IALTH  SK
)@@G@@        . USER BUFFER LENGTH WILL DO@G@@@]          LSSL      A3,24     SL
)@@G@@        . SET TO INSERT INTO CONTOL WRD   @F@@@]          MLU       A3,SSM
)@@G@@DFCW          . MERGE WITH CONTROL WRD    @G@@@]          S         A4,SSN
)@@G@@DFCW          . UPDATE - SO USER PROG WON'T BLOW@E@@@]ISDFNO    LXI     SO
)@@G@@  A1,FLAGS          . MUST FETCH CHAR MODE@F@@@]          LSSL      A1,1SP
)@@G@@7             . CLEAR OUT ANY OTHER FLAGS @G@@@]          SSL       A1,1SQ
)@@G@@7             . AND RETURN AS O/1 IN H1 OF A1   @E@@@]ISDFRL    L       SR
)@@G@@  X11,R4            . RESTORE RETURN LINK @C@@@]          J         2,X1SS
)@@G@@1             . RETURN  @[@^@]/.    @[@@@^/     @[@@@].     @[@^@].     ST
)@@G@@@[@^@].     @C@@@]. THIS ROUTINE DOES THE PAGE TABLE LOOKUP OF ANY@C@@@]SU
)@@G@@.         NONSEQUENTIALLY REFERENCED RECORD FOR @B@@@].         WHICH ANSV
)@@G@@ ENTRY ALREADY EXISTS.  @[@@@].     @D@@@].         IF THE RECORD NUMBERSW
)@@G@@ REQUESTED IS GREATER   @D@@@].         THAN THAT OF THE LAST ENTRY OF TSX
)@@G@@HE INDEX THE@E@@@].         LAST KNOW ENTRY IS FETCHED AND A REPEAT COUNSY
)@@G@@T     @E@@@].         IS CREATED.  IN THIS WAY WE FETCH THE RECORD WHICHSZ
)@@G@@@E@@@].         IS KNOWN AND PROCEED SEQUENTIALLY TO THE RECORD   @#@@@]TA
)@@G@@.         WE WANT.@[@@@].     @[@@@].     @[@@@].     @]@^@]IFETCH.     TB
)@@G@@@[@@@^IFETCH@E@@@]          S         A2,BUFPTR         . SAVE TRANSFER TC
)@@G@@FLAG  @E@@@]          SZ        R5                . CLEAR LOOP COUNTER  TD
)@@G@@@F@@@]          AN        A1,NREC           . DO WE HAVE AN INDEX ENTRY TE
)@@G@@@G@@@]          JN        A1,IFET05         . YES - GO FIND IT WHERE IT TF
)@@G@@IS    @D@@@]          L         A1,INLOC          . GET INDEX LOC @E@@@]TG
)@@G@@          L         A2,LTENT          . GET # OF LAST ENTRY @F@@@]      TH
)@@G@@    AN        A2,RREC           . IS THERE AN INDEX ENTRY   @E@@@]      TI
)@@G@@    JP        A2,IFET05         . YES - GO GET IT     @H@@@]          SNTJ
)@@G@@        A2,R5             . NO - SET LOOP COUNTER, GET LAST ENTRY @F@@@]TK
)@@G@@          L         A2,LTENT          . FETCH LAST REC ENTRY #    @E@@@]TL
)@@G@@          J         $+2               . GO FIND INDEX ENTRY @E@@@]IFET05TM
)@@G@@    L         A2,RREC           . GET REQUESTED REC#  @E@@@]          L TN
)@@G@@        A4,A2             . SET TO GO FIND IT   @E@@@]          L       TO
)@@G@@  A1,INLOC          . GET ADDR OF INDEX   @G@@@]          L,S3      A3,,TP
)@@G@@A1            . GET INDEX COMPRESSION FACTOR    @G@@@]          SZ      TQ
)@@G@@  A1                . REMOVE POSSIBLE GARBAGE BITS    @E@@@]          DSTR
)@@G@@C       A1,36,A3          . DIVIDE A2 BY FACTOR @E@@@]          LN      TS
)@@G@@  A3,A3             . NEGATE COMP FACTOR  @G@@@]          A,U       A3,3TT
)@@G@@6             . NEED TO RIGHT JUSTIFY REMAINDER @F@@@]          SSL     TU
)@@G@@  A2,,A3            . JUSTIFICATION IS 36-FACTOR@F@@@]          AN      TV
)@@G@@  A4,A2             . CALC PROPER NEXT REC VALUE@C@@@]          S       TW
)@@G@@  A4,NREC           . UPDATE  @G@@@]          A,U       A2,1            TX
)@@G@@  . SET LOOP COUNT TO ACCESS REC    @E@@@]          A         A2,R5     TY
)@@G@@        . APPLY PREVIOUS COUNT@F@@@]          JNZ       A1,IFET10       TZ
)@@G@@  . HAVE WE BACKED UP TOO FAR @G@@@]          L         A1,OFFSET       UA
)@@G@@  . GET 1ST BUFFER OFFSET IF ANY    @H@@@]          LXI,U     A1,1      UB
)@@G@@        . YES - SET TO REF 1ST PAGE, OFFSET     @E@@@]          L,U     UC
)@@G@@  A4,1              . THERE IS NO REC 0   @E@@@]          S         A4,NUD
)@@G@@REC           . SO - SET NREC TO 1  @E@@@]          AN,U      A2,1      UE
)@@G@@        . RESET LOOP COUNTER  @F@@@]          J         $+3             UF
)@@G@@  . DON'T BOTHER TO REF INDEX @E@@@]IFET10    A         A1,INLOC        UG
)@@G@@  . INDEX INTO 'INDEX'  @D@@@]          L         A1,0,A1           . GEUH
)@@G@@T INDEX WORD@H@@@]          S         A1,BILOC          . STORE OFFSET AUI
)@@G@@S TEMP BUF IMAGE LOC    @D@@@]          L         R5,A2             . SEUJ
)@@G@@T LOOP COUNT@F@@@]          SZ        A2                . FETCH CHAR MODUK
)@@G@@E OF REC    @D@@@]          LDSC      A1,1              . FLAG TO A2    UL
)@@G@@@C@@@]          L,XU      R2,-1             . SET MASK@D@@@]          MLUM
)@@G@@U       A2,FLAGS          . INSERT FLAG   @C@@@]          S         A3,FUN
)@@G@@LAGS          . UPDATE  @E@@@]          SSL       A1,19             . ROUO
)@@G@@TATE PAGE # OVER  @E@@@]          S         A1,MRPREF         . SAVE CURUP
)@@G@@RENT PAGE # @E@@@]          L         A5,X11            . SAVE RETURN LIUQ
)@@G@@NK    @E@@@]          CALL      PGRD$             . GET PROPER PAGE     UR
)@@G@@@E@@@]          JGD       A5,$+1            . TAKE ERROR EXIT     @E@@@]US
)@@G@@          L         X11,A5            . RESTORE RETURN LINK @F@@@]      UT
)@@G@@    S         A1,CBBASE         . RESET CURRENT BUFFER BASE @D@@@]      UU
)@@G@@    A         A1,BILOC          . ADD OFFSET    @F@@@]          S       UV
)@@G@@  A1,BILOC          . UPDATE BUFFER IMAGE LOC   @F@@@]          L       UW
)@@G@@  A2,BUFPTR         . RESTORE TRANSFER FLAG     @E@@@]          J       UX
)@@G@@  1,X11             . GO GET PROPER REC   @[@^@]/.    @[@@@^/     @[@@@]UY
)@@G@@.     @[@^@].     @[@^@].     @D@@@]. THIS ROUTINE HAS THE RESPONSIBILITUZ
)@@G@@Y OF CREATING     @D@@@].         THE INDEX FOR THE INDEX SEQUENTIAL ACCVA
)@@G@@ESS   @C@@@].         ROUTINE DURING THE FIRST COMPLETE PASS@B@@@].     VB
)@@G@@    THROUGH THE RESPECTIVE FILE.    @[@@@].     @D@@@].         EACH TIMVC
)@@G@@E WE OVERFLOW THE INDEX WE COMPRESS @D@@@].         THE EXISTING INDEX BVD
)@@G@@Y HALF AND DELETE EVERY @D@@@].         OTHER ENTRY.  'S3' OF THE INDEX VE
)@@G@@CONTOL WORD @C@@@].         (THAT'S THE FIRST WORD OF THE INDEX)  @D@@@]VF
)@@G@@.         CONTAINS THE 'COMPRESSION FACTOR' OR THE    @E@@@].         NUVG
)@@G@@MBER OF TIMES THE INDEX HAS BEEN COMPRESSED.    @E@@@].         SINCE HAVH
)@@G@@LF WORDS ARE USED FOR RECORD NUMBERS,     @E@@@].         WE CAN HANDLE VI
)@@G@@A FILE OF UP TO 256K OF RECORDS     @C@@@].         REGUARDLESS OF THE SVJ
)@@G@@IZE OF THE INDEX. @[@@@].     @[@^@].     @[@^@].     @]@^@]ISBLDI.     VK
)@@G@@@[@@@^ISBLDI@E@@@]          S         A2,BUFPTR         . SAVE TRANSFER VL
)@@G@@FLAG  @E@@@]          L         A1,INLOC          . GET LOC OF INDEX    VM
)@@G@@@F@@@]          L         A3,LTENT          . GET LAST INDEX ENTRY #    VN
)@@G@@@C@@@]          A,U       A3,1              . INC     @E@@@]          S VO
)@@G@@        A3,LTENT          . PUT BACK IN INDEX   @F@@@]ISBLD2    L,S3    VP
)@@G@@  A2,,A1            . GET COMPRESSION FACTOR    @G@@@]          L,U     VQ
)@@G@@  A4,0              . INIT POSSIBLE REMAINDER TO ZERO @D@@@]          DSVR
)@@G@@L       A3,,A2            . DIVIDE BY IT  @G@@@]          JNZ       A4,IVS
)@@G@@SBLD7         . REM => NO ENTRY FOR THIS REC    @F@@@]          TLE     VT
)@@G@@  A3,INLTH          . IS THERE ROOM IN INDEX?   @E@@@]          J       VU
)@@G@@  ISBLD5            . YES - GO PUT IT IN  @E@@@]          L         A2,AVV
)@@G@@1             . NO - GET INDEX LOC  @E@@@]          A,U       A2,1      VW
)@@G@@        . POINT TO 1ST ENTRY  @G@@@]          L         A3,A2           VX
)@@G@@  . THIS IS WHERE WE TRANSFER TO    @D@@@]          LXI,U     A3,1      VY
)@@G@@        . SET INDEX     @E@@@]          A,U       A2,1              . POVZ
)@@G@@INT TO 2ND ENTRY  @H@@@]          LXI,U     A2,2              . SET INDEWA
)@@G@@X TO COMPRESS EVEN ENTRIES    @F@@@]          L         A5,INLTH        WB
)@@G@@  . GET INDEX LENGTH AGAIN    @G@@@]          SSL       A5,1            WC
)@@G@@  . HALVE TABLE FOR REPEAT COUNT    @E@@@]          L         R1,A5     WD
)@@G@@        . SET REPEAT COUNT    @D@@@]          BT        A3,0,*A2        WE
)@@G@@  . COMPRESS INDEX@F@@@]          L,S3      A2,,A1            . GET COMPWF
)@@G@@RESSION FACTOR    @G@@@]          A,U       A2,1              . INC - REWG
)@@G@@PRESENTS POWER OF 2     @C@@@]          S,S3      A2,,A1            . UPWH
)@@G@@DATE  @G@@@]          L         A3,LTENT          . GET UPDATED LAST INDWI
)@@G@@EX VALUE    @G@@@]          J         ISBLD2            . GO SEE IF IT DWJ
)@@G@@ESERVES AN ENTRY  @F@@@]ISBLD5    L         A2,A3             . GET INDEWK
)@@G@@X OFFSET IN A2    @E@@@]          LXI       A3,MRPREF         . GET CURRWL
)@@G@@ENT PAGE #  @E@@@]          L         A4,BILOC          . GET BUFFER IMAWM
)@@G@@GE LOC@D@@@]          AN        A4,CBBASE         . CREATE OFFSET @E@@@]WN
)@@G@@          LXM       A3,A4             . FINISH INDEX ENTRY  @F@@@]      WO
)@@G@@    L         A4,FLAGS          . GET CURRENT CHARACTER MODE@E@@@]      WP
)@@G@@    LSSL      A4,35             . SHIFT TO BIT 35     @F@@@]          ORWQ
)@@G@@        A3,A4             . USE TO FLAG TABLE ENTRY   @D@@@]          A WR
)@@G@@        A1,A2             . INC INTO INDEX@E@@@]          S         A4,0WS
)@@G@@,A1           . PLACE ENRTY IN INDEX@F@@@]ISBLD7    L         A2,BUFPTR WT
)@@G@@        . RESTORE TRANSFER FLAG     @D@@@]          J         0,X11     WU
)@@G@@        . RETURN TO LOOP@[@^@]/.    @[@@@^/     @[@@@].     @[@^@].     WV
)@@G@@@[@^@].     @E@@@]. THIS ROUTINE IS PROVIDED PRIMARILY TO HANDLE CONTROLWW
)@@G@@ IMAGE@F@@@].         CYCLE INFORMATION, IF THE PACKET SO SPECIFIES.  HOWX
)@@G@@WEVER,@F@@@].         BECAUSE OF IT'S LOGICAL LOCATION IN THE PROGRAM, IWY
)@@G@@T     @F@@@].         ALSO DOES SUCH THINGS AS: DECIDE WHETHER OR NOT TOWZ
)@@G@@ CALL @F@@@].         THE INDEX BUIDING ROUTINE FOR A PARTICULAR IMAGE, XA
)@@G@@MAKE  @G@@@].         THE PRINT$ FILE DETERMINATION, AND PERFORM THE PROXB
)@@G@@PER RECORD  @A@@@].         COUNTER INCREMENTATION.   @[@@@].     @[@^@]XC
)@@G@@.     @[@^@].     @]@^@]ISDFCN.     @[@@@^ISDFCN@F@@@]          L       XD
)@@G@@  A1,BILOC          . GET ADDR OF CONTROL WD    @D@@@]          L       XE
)@@G@@  A3,FLAGS          . GET MODE FLAGS@F@@@]          TN        0,A1      XF
)@@G@@        . IS IT A CONTROL IMAGE     @F@@@]          J         ISDFCL    XG
)@@G@@        . NO - GO CHECK FOR CYCLE   @E@@@]          TEP       A3,CONTFLGXH
)@@G@@        . YES - DO WE WANT IT @E@@@]          J         ISDFCR          XI
)@@G@@  . YES - PASS IT BACK  @D@@@]          J         ISDFCS            . NOXJ
)@@G@@ FORGET IT  @E@@@]ISDFCL    TOP       A3,FILEFLG        . PROCESS CYCLE XK
)@@G@@INFO? @G@@@]          TP        CYCLE             . NO - DO WE PROCESS CXL
)@@G@@YCLE INFO   @F@@@]          J         ISDFCR            . UPDATE COUNTS XM
)@@G@@AND RETURN  @E@@@]          L,S4      A4,0,A1           . GET CYCLE FIELXN
)@@G@@D     @E@@@]          L         A3,CYCN           . GET PROVIDED CYCLE  XO
)@@G@@@H@@@]          OR        A4,CYCNIND        . PREPARE TO TEST WITH CYCLEXP
)@@G@@ INDICATOR  @F@@@]          JZ        A5,ISDFCR         . NO CYCLE - NO XQ
)@@G@@DELETION    @F@@@]          TNZ       CYCNIND           . DID WE HAVE A XR
)@@G@@INDICATOR   @D@@@]          J         ISDFCS            . NO GET OUT    XS
)@@G@@@E@@@]          TZ        A4                . HAS REC BEEN DELETED@E@@@]XT
)@@G@@          TLE       A3,A4             . YES - IS IT VALID   @E@@@]      XU
)@@G@@    TLE,S6    A3,0,A1           . IS START CYCLE VALID@D@@@]          J XV
)@@G@@        ISDFCS            . NO - GET OUT  @E@@@]ISDFCR    JGD       R5,$XW
)@@G@@+2            . REDUCE FETCH COUNT  @E@@@]          JGD       X11,ISDFCSXX
)@@G@@        . THAT'S ALL - GET OUT@D@@@]          L         A1,INLOC        XY
)@@G@@  . GET INDEX LOC @E@@@]          JZ        A1,ISDFCM         . NO INDEXXZ
)@@G@@ - NO BUILD @F@@@]          L         A1,LTENT          . WHAT'S THE LASYA
)@@G@@T ENTRY     @F@@@]          AN        A1,NREC           . COMPARE IT TO YB
)@@G@@THIS REC #  @G@@@]          JP        A1,ISDFCM         . ALREADY HAVE AYC
)@@G@@N INDEX ENTRY     @E@@@]          LXI,U     X11,0,X11         . SAVE RETYD
)@@G@@URN LINK    @E@@@]          CALL      ISBLDI            . GO BUILD INDEXYE
)@@G@@ ENTRY@E@@@]          L         A1,X11            . GOT TO RESTOE LINK  YF
)@@G@@@G@@@]          SSL       A1,18             . RETRIEVE IT FROM INDEX PORYG
)@@G@@TION  @D@@@]          S         A1,X11            . RESTORE IT    @F@@@]YH
)@@G@@ISDFCM    L         A1,NREC           . UPDATE NEXT REC COUNTER   @C@@@]YI
)@@G@@          A,U       A1,1              . INC     @C@@@]          S       YJ
)@@G@@  A1,NREC           . UPDATE  @E@@@]ISDFCS    J         1,X11           YK
)@@G@@  . RETURN TO ISDFI     @[@^@]/.    @[@@@^/     @[@@@].     @[@^@].     YL
)@@G@@@[@^@].     @D@@@]. THIS ROUTINE IS USED TO CLOSE THE ISDFI COMPLEX     YM
)@@G@@@C@@@].         ITS SOLE PURPOSE IS TO CLEAN UP ANY IO@D@@@].         STYN
)@@G@@ILL IN PROGRESS AND UPDATE THE PACKET     @C@@@].         TO THE NEXT SEYO
)@@G@@QUENTIAL FILE LOCATION  @[@@@].     @ @@@].           USES X11 A0-1     YP
)@@G@@@[@@@].     @ @@@].         CALLING SEQUENCE:   @B@@@].                 YQ
)@@G@@  L,U   A0,FAC ADDR     @A@@@].                   LMJ   X11,ISDFIC@B@@@]YR
)@@G@@.                   < NORMAL RETURN >     @[@@@].     @[@^@].     @[@^@]YS
)@@G@@.     @]@^@]ISDFIC*.    @]@@@^ISDFIC*     @G@@@]          TP        3,A0YT
)@@G@@              . CK PKT  - SEE IF IO IN PROGRESS @F@@@]          ER      YU
)@@G@@  WAIT$             . YES - WAIT FOR FINISH     @F@@@]          L       YV
)@@G@@  A1,5,A0           . NO UPDATE SECTOR ADDR     @G@@@]          A,H1    YW
)@@G@@  A1,7,A0           . GET BUFFER LENGTH IN SECTORS    @F@@@]          S YX
)@@G@@        A1,5,A0           . THIS IS AS FAR AS WE WENT @C@@@]          J YY
)@@G@@        0,X11             . RETURN  @B@^@]          END                 YZ
)@@G@@        .   @#@@@^          END     ___@@@5             . SET REPEAT COUZA
)@@G@@NT    @D@@@]          BT        A3,0,*A2          . COMPRESS INDEX@F@@@]ZB
)@@G@@*[S@@@*SDFF*@[@@@@ .    @[@@@@ .    @[@@@@ .    @D@@@@ . THIS COMPLEX OFZC
)@@G@@ ROUTINES ARE RESPONSIBLE FOR DOING @D@@@@ .         THE ACTUAL DOWNDATIZD
)@@G@@NG, THAT IS, ONE FILE   @D@@@@ .         (OR FILE ELEMENT) IS COMPARED AZE
)@@G@@GAINST THE  @D@@@@ .         OTHER AND THE NECESSARY OUTPUT IS PRODUCED ZF
)@@G@@@E@@@@ .         WHICH IS REQUIRED TO TRANSFORM ONE FILE INTO     @E@@@@ZG
)@@G@@ .         THE OTHER.  THE ROUTINE IS NOT FOOL PROOF, AS IT @E@@@@ .    ZH
)@@G@@     SEEMS VIRTUALLY IMPOSSIBLE FOR ANY SEQUENTIALLY  @E@@@@ .         PZI
)@@G@@ROCESSING ROUTINE TO BE TOTALLY FOOL PROOF.     @E@@@@ .         IN OTHEZJ
)@@G@@R WORDS, UNDER CERTAIN SPECIAL CONDI-     @D@@@@ .         TIONS MORE OUZK
)@@G@@TPUT MAY BE PRODUCED THAN WAS @E@@@@ .         ACTUALLY CHANGED IN THE OZL
)@@G@@RIGINAL FILE.  THIS     @E@@@@ .         'OVERHEAD' HOWEVER, IN COMPARISZM
)@@G@@ON WITH PREVIOUS  @E@@@@ .         ROUTINES IS MINIMAL.  THE PROBLEM STEZN
)@@G@@MS FROM     @D@@@@ .         THE INABILITY TO ACCURATELY DECIDE ON THE  ZO
)@@G@@@E@@@@ .         DISPOSITION OF VERY SMALL BLOCKS OF COMPARING    @E@@@@ZP
)@@G@@ .         DATA WHILE PROCESSING IN A SEQUENTIAL MANNER.    @E@@@@ .    ZQ
)@@G@@     OBVIOUSLY, THE PROPER DECISIONS WOULD MEAN A     @F@@@@ .         MZR
)@@G@@INIMUM OF OUTPUT CORRECTIONS TO THE UPDATED FILE.     @E@@@@ .         TZS
)@@G@@HIS DOES NOT MEAN THAT THE CORRECTIONS PRO-     @E@@@@ .         DUCED WZT
)@@G@@ILL NOT EFFECTIVELY DOWNDATE THE RESPEC-  @E@@@@ .         TIVE FILE.  IZU
)@@G@@N POINT OF FACT, IT WILL, BUT IT    @D@@@@ .         DOES MEAN THAT THE ZV
)@@G@@OUTPUT PRODUCED WILL NOT@D@@@@ .         EXACTLY REFLECT THE PRECISE METZW
)@@G@@HOD USED TO @E@@@@ .         UPDATE THE ORIGINAL FILE IN THE FIRST PLACEZX
)@@G@@.     @F@@@@ .         COMPARED TO THE PREVIOUS VERSION OF THE DOWNDATERZY
)@@G@@,     @E@@@@ .         THIS ROUTINE GOES TO GREAT PAINS TO PRODUCE A    ZZ
)@@G@@@E@@@@ .         MORE EXACTING OUTPUT IN A MUCH LARGER NUMBER     @E@@@@AA
)@@G@@ .         OF CASES.  THIS IS REASONABLY IMPORTANT BECAUSE  @F@@@@ .    AB
)@@G@@     A LARGE APPLICATION OF THIS ROUTINE IS TO DETERMINE    @E@@@@ .    AC
)@@G@@     THE DIFFERENCES BETWEEN TWO FILES, RATHER THAN   @E@@@@ .         BAD
)@@G@@EING CONCERNED WITH ACTUALLY PRODUCING ONE FILE @F@@@@ .         FROM THAE
)@@G@@E OTHER.  ALL SEQUENTIAL OUTPUT IS CONDENSED,   @E@@@@ .         SO THATAF
)@@G@@, WITHIN THE LIMITATIONS OF THE PROGRAM,  @E@@@@ .         A MINIMUM OF AG
)@@G@@OUTPUT CARDS ARE PRODUCED.  IF NO   @D@@@@ .         SPEC 3 WAS PROVIDEDAH
)@@G@@ ON THE PROCESSOR CALL  @F@@@@ .         CARD, NO SDF OUTPUT ELEMENT IS AI
)@@G@@PRODUCED.  ASSUMING     @E@@@@ .         THAT THE N OPTION WAS NOT ALSO AJ
)@@G@@SPECIFIED, THIS   @E@@@@ .         MEANS ONLY THE PRINT$ OUTPUT WILL BE AK
)@@G@@PRODUCED.   @E@@@@ .         THIS IS IN DIFFERENCE WITH THE PREVIOUS VERAL
)@@G@@SION  @ @@@@ .         OF THE DOWNDATER.  @[@@@@ .    @[@@@@ .    @[@@@@AM
)@@G@@ .    @ @@@@ . THE CALLING PACKET IS:     @[@@@@ .    @[@@@@ .    @[@@@@AN
)@@G@@ .    @H@@@@ .                  ........................................AO
)@@G@@................. @G@@@@ .       PKT+0      :          *0377777         AP
)@@G@@  :          #SIG RECS  @H@@@@ .                  ......................AQ
)@@G@@................................... @H@@@@ .                  :      *A AR
)@@G@@FIELD PKT ADDR      :      *B FIELD PKT ADDR    @H@@@@ .                AS
)@@G@@  ......................................................... @H@@@@ .    AT
)@@G@@              :      *A ISDFI PKT ADDR      :      *B ISDFI PKT ADDR    AU
)@@G@@@H@@@@ .                  ..............................................AV
)@@G@@........... @G@@@@ .                  :            AREC#            :   AW
)@@G@@         BREC#    @H@@@@ .                  ............................AX
)@@G@@............................. @G@@@@ .                  :            #REAY
)@@G@@CA            :            #RECB    @H@@@@ .                  ..........AZ
)@@G@@............................................... @G@@@@ .                BA
)@@G@@  :           ASIGREC           :           BSIGREC   @H@@@@ .          BB
)@@G@@        ......................................................... @G@@@@BC
)@@G@@ .                  :          ARECREF#           :          BRECREF#   BD
)@@G@@@H@@@@ .                  ..............................................BE
)@@G@@........... @D@@@@ .                  :                             0   BF
)@@G@@@H@@@@ .                  ..............................................BG
)@@G@@........... @G@@@@ .                  :          1ST REC#A          :   BH
)@@G@@       1ST REC#B  @H@@@@ .                  ............................BI
)@@G@@............................. @G@@@@ .                  :         LAST RBJ
)@@G@@EC#A          :         LAST REC#B  @H@@@@ .                  ..........BK
)@@G@@............................................... @G@@@@ .                BL
)@@G@@  :        RTOTAL REF A         :        RTOTAL REF B @H@@@@ .          BM
)@@G@@        ......................................................... @G@@@@BN
)@@G@@ .                  :         A#RECS-OUT          :         B#RECS-OUT  BO
)@@G@@@H@@@@ .                  ..............................................BP
)@@G@@........... @G@@@@ .                  :         *LA FACTOR          :   BQ
)@@G@@       #SIG RECS  @H@@@@ .                  ............................BR
)@@G@@............................. @H@@@@ .                  :      A FIELD PBS
)@@G@@KT ADDR       :      B FIELD PKT ADDR     @H@@@@ .                  ....BT
)@@G@@..................................................... @H@@@@ .          BU
)@@G@@        :      A ISDFI PKT ADDR       :      B ISDFI PKT ADDR     @H@@@@BV
)@@G@@ .                  ....................................................BW
)@@G@@..... @G@@@@ .                  :            AREC#            :         BX
)@@G@@   BREC#    @H@@@@ .                  ..................................BY
)@@G@@....................... @G@@@@ .                  :            #RECA    BZ
)@@G@@        :            #RECB    @H@@@@ .                  ................CA
)@@G@@......................................... @G@@@@ .                  :   CB
)@@G@@     #SIG REC TEMP        :        SIG REC TOTAL@H@@@@ .                CC
)@@G@@  ......................................................... @G@@@@ .    CD
)@@G@@              :       RTOTAL(SIGRECS)       :         # REC TEMP  @H@@@@CE
)@@G@@ .                  ....................................................CF
)@@G@@..... @^@@@@ .      SDFOPKT     :   @^@@@@ .                  :   @E@@@@CG
)@@G@@ .                  :                        SDFO PACKET    @^@@@@ .    CH
)@@G@@              :   @^@@@@ .                  :   @H@@@@ .                CI
)@@G@@  ......................................................... @^@@@@ .    CJ
)@@G@@  EDTPKT      :   @E@@@@ .                  :                       EDITCK
)@@G@@$ PACKET    @^@@@@ .                  :   @^@@@@ .                  :   CL
)@@G@@@[@@@@ .    @[@@@@ .    @B@@@@          AXR$                        .   CM
)@@G@@@B@@@@          DOWNDEF                     .   @B@@@@          ED$PROCSCN
)@@G@@                    .   @B@@@@          STRUC$,'OLD PROGRAM'         .  CO
)@@G@@@B@@@@          RESUME                      .   @[@@@@ .    @[@@@@ .    CP
)@@G@@@E@@@@READY     EQU       1                 . TURN ON P-OPT CODE  @[@@@@CQ
)@@G@@ .    @[@@@@ .    @[@@@@ .    @F@@@@SIGREC    EQUF      0,X10,H2        CR
)@@G@@  . # OF ACTUAL RECS PASSED   @E@@@@AFPADR    EQUF      1,X10,H1        CS
)@@G@@  . A FIELD PKT ADDR    @E@@@@BFPADR    EQUF      1,X10,H2          . B CT
)@@G@@FIELD PKT ADDR    @E@@@@AIPADR    EQUF      2,X10,H1          . A ISDFI CU
)@@G@@PKT ADDR    @E@@@@BIPADR    EQUF      2,X10,H2          . B ISDFI PKT ADCV
)@@G@@DR    @E@@@@ARECNO    EQUF      3,X10,H1          . REC # IN FILE A     CW
)@@G@@@E@@@@BRECNO    EQUF      3,X10,H2          . REC # IN FILE B     @E@@@@CX
)@@G@@RECNO     EQUF      3,X10             . REC #S FILES A AND B@E@@@@NORECACY
)@@G@@    EQUF      4,X10,H1          . # OF RECS OF FILE A @E@@@@NORECB    EQCZ
)@@G@@UF      4,X10,H2          . # OF RECS OF FILE B @F@@@@NOREC     EQUF    DA
)@@G@@  4,X10             . # OF RECS FILES A AND B   @F@@@@ASIGREC   EQUF    DB
)@@G@@  5,X10,H1          . OUTSTANDING SIGRECS FILE A@F@@@@BSIGREC   EQUF    DC
)@@G@@  5,X10,H2          . OUTSTANDING SIGRECS FILE B@F@@@@ABSIGREC  EQUF    DD
)@@G@@  5,X10             . INIT SIGRECS FILES A AND B@C@@@@ABRECREF  EQUF    DE
)@@G@@  6,X10             . FOR INIT@F@@@@ARECREF   EQUF      6,X10,H1        DF
)@@G@@  . OUTSTANDING REF REC # A   @F@@@@BRECREF   EQUF      6,X10,H2        DG
)@@G@@  . OUTSTANDING REF REC #B    @E@@@@FRECNO    EQUF      8,X10,H1        DH
)@@G@@  . 1ST OUTPUT REC #    @E@@@@LRECNO    EQUF      9,X10,H1          . LADI
)@@G@@ST OUTPUT REC #   @E@@@@RTOTREF   EQUF      10,X10,H1         . # SIGRECDJ
)@@G@@S FOR OUTPUT@F@@@@RECSOUT   EQUF      11,X10,H1         . RECS DISPLACE DK
)@@G@@FOR OUTPUT  @G@@@@SIGRECT   EQUF      12,X10,H2         . TEMP STORE FORDL
)@@G@@ MATCH SIGRECS    @F@@@@ARECNOT   EQUF      15,X10,H1         . TEMP STODM
)@@G@@RE MATCH AREC#    @F@@@@NORECAT   EQUF      16,X10,H1         . TEMP STODN
)@@G@@RE MATCH #RECA    @F@@@@RTOTAL    EQUF      18,X10,H1         . RECS PASDO
)@@G@@SED IN OUTPUT FILE@E@@@@SDFCW     EQUF      SDFOPKT+10        . SDF CONTDP
)@@G@@ROL WORD    @B@@@@EASCIN    EQUF      EDTPKT+2,,S5      .   @F@@@@EASC  DQ
)@@G@@    EQUF      EDTPKT+2,,S4      . IN/OUT CHAR MODE FLGS     @D@@@@PFSPKTDR
)@@G@@    EQUF      8,X9              . ADDR PFS$ PKT @E@@@@FIELD     EQUF    DS
)@@G@@  0,X9,S2           . FIELD # OF RESP FILE@D@@@@MATCHPKT  EQUF      12,XDT
)@@G@@10            . ADDR MATCH PKT@E@@@@RECSOUT1  EQUF      11,X10,H1       DU
)@@G@@  . OUTPUT RECS FILE 1  @E@@@@RECSOUT2  EQUF      11,X10,H2         . OUDV
)@@G@@TPUT RECS FILE 2  @F@@@@RTOTREF12 EQUF      10,X10            . USED FORDW
)@@G@@ INITIALIZATION   @E@@@@RTOTREF1  EQUF      10,X10,H1         . # SIGRECDX
)@@G@@ FOR FILE 1 @E@@@@RTOTREF2  EQUF      10,X10,H2         . #SIGRECS FOR FDY
)@@G@@ILE 2 @E@@@@FRECNOS   EQUF      8,X10             . FOR HEADER CARD TESTDZ
)@@G@@@E@@@@LRECNOS   EQUF      9,X10             . TO ZERO FOR INIT    @D@@@@EA
)@@G@@ABRECSOUT EQUF      11,X10            . ZERO FOR INIT @H@@@@COMPAREPKT  EB
)@@G@@        EQUF              0,X10  . START OF COMPARE PKT IN MASTER @[@@@@EC
)@@G@@/.    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(0). @B@@@@X10SAVE   +0ED
)@@G@@                          .   @B@@@@SDONE     +0                        EE
)@@G@@  .   @B@@@@MDONE     +0                          .   @[@@@@ .    @[@@@@EF
)@@G@@ .    @[@@@@$(1). @[@@@@SCAN*.@B@@@@ BEGIN SUBROUTINE                   EG
)@@G@@  .   @H@@@@   S         X11,COMPARED             . SET FLAG THAT SOME CEH
)@@G@@OMPARISON WAS DONE@F@@@@   L         X10,A0                   . PUT PKT EI
)@@G@@ADDR WHERE USED   @F@@@@   SZ        SDONE                    . INIT ENDEJ
)@@G@@ OF SCAN FLAG     @E@@@@   SZ        RTOTAL                   . INIT PACEK
)@@G@@KET STORAGE @F@@@@   SZ        ABSIGREC                 . OUTSTANDING REEL
)@@G@@C COUNTS    @E@@@@   SZ        FRECNOS                  . OUTPUT PARAMETEM
)@@G@@ERS   @B@@@@   SZ        LRECNOS                  .   @E@@@@   SZ       EN
)@@G@@ RTOTREF12                . INIT REC OUTPUT REF @G@@@@   SZ        ABRECEO
)@@G@@REF                 . INIT WAITING REC REFFERENCE     @B@@@@   SZ       EP
)@@G@@ ABRECSOUT                .   @D@@@@   REPEAT UNTIL NONZ,IN,SDONE       EQ
)@@G@@  . SCAN LOOP     @F@@@@      IF ZERO,IN,BSIGREC THEN         . IS THEREER
)@@G@@ BLK OUTSTANDING  @D@@@@         CALL      SWAP               . NO WE CAES
)@@G@@N SWAP@B@@@@      ENDIF                           .   @F@@@@      L     ET
)@@G@@    A0,X10                . GET PKT ADDR FOR COMPARE  @D@@@@      CASENTEU
)@@G@@RY CALLING COMPARE        . COMPARE RECS  @F@@@@      CASE 0            EV
)@@G@@              . THIS IS A EOF ON FILE B   @F@@@@         L,XU      A3,-1EW
)@@G@@              . SET TO CLEAN UP A FILE    @D@@@@         CALL      OUTEOEX
)@@G@@F             . GO CLEAN UP   @F@@@@         S         X11,SDONE        EY
)@@G@@  . WE'RE FINISHED THIS SCAN  @D@@@@      CASE 1                        EZ
)@@G@@  . EOF ON FILE A @F@@@@         SZ        A3                 . SET TO CFA
)@@G@@LEAN UP B FILE    @D@@@@         CALL      OUTEOF             . GO CLEANFB
)@@G@@ UP   @E@@@@         S         X11,SDONE          . SET ALL DONE FLAG   FC
)@@G@@@D@@@@      CASE 2                          . NORMAL RETURN @E@@@@      FD
)@@G@@   CALL      COMPKTUPDATE       . UPDATE COMPARE PKT  @E@@@@         SZ FE
)@@G@@       MDONE              . INIT INNER LOOP FLG @F@@@@         REPEAT UNFF
)@@G@@TIL NONZ,IN,MDONE   . TRY TO MATCH BOTH WAYS    @D@@@@            DL    FG
)@@G@@    A1,COMPAREPKT+1  . GET PKT ADDRS@E@@@@            DS        A1,MATCHFH
)@@G@@PKT+1   . INTO MATCH PACKET   @E@@@@            L         A1,RECNO      FI
)@@G@@  . GET CURRENT REC #'S @F@@@@            S         A1,MATCHPKT+3   . ALFJ
)@@G@@SO INTO MATCH PACKET    @E@@@@            S         X10,X10SAVE     . SAFK
)@@G@@VE MASTER PKT ADDR@E@@@@            L,U       A0,MATCHPKT     . GET MATCFL
)@@G@@H PKT ADDR  @E@@@@            CALL      MATCH           . SEARCH FOR MATFM
)@@G@@CH    @E@@@@            L         X10,X10SAVE     . RESTORE PKT ADDR    FN
)@@G@@@F@@@@            L         A6,SIGRECT      . GET RESULTS OF SEARCH     FO
)@@G@@@F@@@@            L         A7,ARECNOT      . AND RESULTANT REC NOS     FP
)@@G@@@F@@@@            IF A6,IS,ZERO THEN        . NO MATCH=>IMMEDIATE OUTPUTFQ
)@@G@@@E@@@@               L,U       A6,1         . OUTPUT MISMATCH     @D@@@@FR
)@@G@@               S         A6,ASIGREC   . 1 REC BLK     @D@@@@            FS
)@@G@@   S         A7,ARECREF   . THIS REC #    @H@@@@               S        FT
)@@G@@ X11,MDONE    . SET FLAG TO FINISH MATCH & OUTPUT     @B@@@@            FU
)@@G@@ELSE                      .   @F@@@@               IF A6,LT,PEEK THEN   FV
)@@G@@  . WAS IT A REAL COMPARE     @G@@@@                  L,U       A6,1    FW
)@@G@@  . NO - WORK ONE REC AT A TIME     @B@@@@               ENDIF          FX
)@@G@@        .   @E@@@@               S         A6,ASIGREC   . SET AS WAITINGFY
)@@G@@ BLOCK@E@@@@               S         A7,ARECREF   . STARTS WITH THIS RECFZ
)@@G@@@F@@@@               IF ZERO,IN,BSIGREC THEN . IS THERE A WAITING BLK   GA
)@@G@@@F@@@@                  CALL      SWAP      . NO - DON'T OUTPUT YET     GB
)@@G@@@B@@@@               ELSE                   .   @G@@@@                  GC
)@@G@@IF A6,GE,BSIGREC THEN . YES - OUTPUT SMALLEST BLK     @E@@@@            GD
)@@G@@         CALL      SWAP   . SWAP FOR SMALLEST   @B@@@@                  GE
)@@G@@ENDIF               .   @F@@@@                  S         X11,MDONE  . FGF
)@@G@@INISH LOOP AND OUTPUT   @B@@@@               ENDIF                  .   GG
)@@G@@@B@@@@            ENDIF                     .   @F@@@@         ATEND    GH
)@@G@@                    . AT END OF MATCH WE OUTPUT @C@@@@            CALL  GI
)@@G@@    OUTPUT          . DO IT!  @B@@@@         ENDREP                     GJ
)@@G@@  .   @B@@@@      ENDCASE                         .   @B@@@@   ENDREP   GK
)@@G@@                          .   @B@@@@ ENDBEG                             GL
)@@G@@  .   @[@@@@ .    @[@@@@ .    @[@@@@ .    @D@@@@ . THIS ROUTINE IS ENTERGM
)@@G@@ED WHEN AN EOF IS ENCOUNTERED @E@@@@ .         ON EITHER FILE DURING SEQGN
)@@G@@UENTIAL PROCESSING.     @E@@@@ .         ITS PURPOSE IS TO CLEANUP ANY NGO
)@@G@@ECESSARY OUTPUT   @D@@@@ .         AND APPROPRIATELY EXIT THE SCAN ROUTIGP
)@@G@@NE.   @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(0). @F@@@@BLKDONE   + GQ
)@@G@@        0                 . REC COUNTER DONE FLAG     @[@@@@ .    @[@@@@GR
)@@G@@ .    @[@@@@$(1). @]@@@@OUTEOF*.    @B@@@@ BEGIN SUBROUTINE             GS
)@@G@@        .   @E@@@@   CALL      COMPKTUPDATE             . UPDATE COMPAREGT
)@@G@@ PKT  @E@@@@   IF A3,IS,POS THEN                  . EOF ON WHICH FILE?  GU
)@@G@@@H@@@@      CALL      SWAP                  . ON 'A' FILE - MUST FIND EOGV
)@@G@@F ON 'B'    @B@@@@   ENDIF                              .   @E@@@@   L  GW
)@@G@@       A0,AIPADR                . GET ISDFI PKT ADDR  @F@@@@   L        GX
)@@G@@ A1,ARECNO                . AND REC # OF FILE 'A'     @D@@@@   SZ       GY
)@@G@@ BLKDONE                  . INIT FIN FLG  @D@@@@   REPEAT UNTIL NONZ,IN,GZ
)@@G@@BLKDONE       . LOOP FOR EOF  @D@@@@      CASENTRY CALLING GET          HA
)@@G@@  . GET NEXT REC  @D@@@@      CASE 0                          . EOF RETUHB
)@@G@@RN    @D@@@@         S         X11,BLKDONE        . SET EXIT FLAG @E@@@@HC
)@@G@@      CASE 1                          . NORMAL RET - IGNORE @B@@@@      HD
)@@G@@ENDCASE                         .   @B@@@@   ENDREP                     HE
)@@G@@        .   @E@@@@   LXI,U     A1,0                     . CLEAR REC MODEHF
)@@G@@ FLAG @D@@@@   ANU       A1,ARECNO                . CALC BLK SIZE @E@@@@HG
)@@G@@   L         A1,ARECNO                . GET BLK START REC # @E@@@@   S  HH
)@@G@@       A1,ARECREF               . SET 1ST REC # OF BLK@D@@@@   S        HI
)@@G@@ A2,ASIGREC               . AND BLK SIZE  @F@@@@   IF A2,GE,BSIGREC  THEHJ
)@@G@@N             . OUTPUT SMALLEST FIRST     @C@@@@      CALL      SWAP    HK
)@@G@@              . SWAP PKT@B@@@@   ENDIF                              .   HL
)@@G@@@D@@@@   L,U       R11,2                    . SET REP COUNT @D@@@@   REPHM
)@@G@@EAT JGD,R11                     . LOOP TWICE    @F@@@@      IF NONZ,IN,AHN
)@@G@@SIGREC THEN         . IS THERE A WAITING BLK    @D@@@@         CALL     HO
)@@G@@ OUTPUT             . YES - OUTPUT  @B@@@@      ENDIF                   HP
)@@G@@        .   @D@@@@      CALL      SWAP                  . TRY OTHER FILEHQ
)@@G@@@B@@@@   ENDREP                             .   @E@@@@   L,U       R11,2HR
)@@G@@                    . RELOAD REP COUNT    @D@@@@   REPEAT JGD,R11       HS
)@@G@@              . TWICE AGAIN   @F@@@@      IF NONZ,IN,RECSOUT THEN       HT
)@@G@@  . IS OUTPUT IN OUTPUT AREA  @E@@@@         CALL      OUTPUT           HU
)@@G@@  . YES - GET RID OF IT @B@@@@      ENDIF                           .   HV
)@@G@@@F@@@@      CALL      SWAP                  . TRY OTHER FILE IF ANY LEFTHW
)@@G@@@B@@@@   ENDREP                             .   @B@@@@ ENDBEG           HX
)@@G@@                    .   @[@@@@/.    @[@@@@ .    @[@@@@ .    @[@@@@ .    HY
)@@G@@@B@@@@ . THE PURPOSE OF THIS ROUTINE IS TO SWAP @D@@@@ .         THE REPHZ
)@@G@@RESENTATIVE FILE INFORMATION IN     @D@@@@ .         THE MASTER PKT.  THIA
)@@G@@E PARTICULAR POSITION   @C@@@@ .         OF FILE INFORMATION WITHIN THE IB
)@@G@@PACKET@D@@@@ .         DICTATES A CERTAIN TYPE OF PROCESSING,     @C@@@@IC
)@@G@@ .         THUS, THE SWAP, EFFECTIVELY REVERSES @C@@@@ .         THE NATID
)@@G@@URE OF PROCESSING ON EACH     @ @@@@ .         RESPECTIVE FILE.   @[@@@@IE
)@@G@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(1). @[@@@@SWAP*.@^@@@@ BEGIN SUBROIF
)@@G@@UTINE,NOSAVE@C@@@@   LXI,U     A2,1                     . SET INC @E@@@@IG
)@@G@@   LXM       A2,X10                   . POINT TO MASTERPKT  @F@@@@   L,UIH
)@@G@@       R10,11                   . WANT TO REVERSE 11 LOCS   @C@@@@   REPII
)@@G@@EAT JGD,R10                     . LOOP    @C@@@@      L         A3,1,A2 IJ
)@@G@@              . GET WORD@D@@@@      LSSC      A3,18                 . SWIK
)@@G@@AP HALVES   @E@@@@      S         A3,1,*A2              . RESTORE AND INIL
)@@G@@C     @B@@@@   ENDREP                             .   @B@@@@ ENDBEG     IM
)@@G@@                          .   @[@@@@ .    @[@@@@ .    @F@@@@ . THIS IS SIN
)@@G@@IMPLY A PACKET UPDATE ROUTINE USED ON A NORMAL RETURN @C@@@@ .         FIO
)@@G@@ROM COMPARE OR POSSIBLY ON AN EOF.  @[@@@@ .    @[@@@@ .    @[@@@@ .    IP
)@@G@@@[@@@@$(1). @#@@@@COMPKTUPDATE*.    @B@@@@ BEGIN SUBROUTINE             IQ
)@@G@@        .   @G@@@@   L         X10,A0                   . MAKE SURE PKT IR
)@@G@@ADDR WHERE USED   @G@@@@   L         A1,RECNO                 . UPDATE RIS
)@@G@@EC #'S IN COMPARE PKT   @G@@@@   AH        A1,NOREC                 . BYIT
)@@G@@ # RECS PASSED IN COMPARE     @C@@@@   S         A1,RECNO               IU
)@@G@@  . UPDATE  @H@@@@   L         A1,RTOTAL                . ALSO KEEP TRACIV
)@@G@@K OF COUNT ON DEL FILE  @E@@@@   A         A1,SIGREC                . BYIW
)@@G@@ # RECS PASSED    @C@@@@   S         A1,RTOTAL                . UPDATE  IX
)@@G@@@G@@@@   L         A1,BRECREF               . GET 1ST REC # OF WAITTING IY
)@@G@@BLK   @F@@@@   IF A1,LT,BRECNO THEN               . HAVE WE INC'ED INTO IZ
)@@G@@BLK   @F@@@@      SZ        BSIGREC               . YES - ZAP WAITING BLJA
)@@G@@K     @B@@@@   ENDIF                              .   @B@@@@ ENDBEG     JB
)@@G@@                          .   @[@@@@/.    @[@@@@ .    @[@@@@ .    @[@@@@JC
)@@G@@ .    @E@@@@ . THIS ROUTINE PERFORMS THE NECESSARY OUTPUT FUNCTIONS     JD
)@@G@@@E@@@@ .         FOR THE SCAN ROUTINE.  IF THE FILE NAME IN THE   @E@@@@JE
)@@G@@ .         SDFO PKT IS ZEROED , THE ONLY OUTPUT PRODUCED    @F@@@@ .    JF
)@@G@@     IS PRINT$, ASSUMING THAT THE N OPTION IS NOT REQUESTED @E@@@@ .    JG
)@@G@@     ALSO.  IT MAINTAINS THE SAME PRINTING FORMAT     @D@@@@ .         AJH
)@@G@@S THE PREVIOUS DOWNDATER, AND THEREFORE IS@E@@@@ .         CONSISTENT WIJI
)@@G@@TH THE UPDATING CHARACTERISTICS     @D@@@@ .         OF THE SYSTEM.  ACTJJ
)@@G@@UAL OUTPUT IS ALWAYS    @D@@@@ .         DELAYED BY ONE CALL TO THE OUTPJK
)@@G@@UT ROUTINE. @D@@@@ .         THIS IS TO ALLOW THE POTENTIAL CONDENSING  JL
)@@G@@@C@@@@ .         OF SEQUENTIAL OUTPUT.  THIS WAS NOT A@D@@@@ .         PJM
)@@G@@ROBLEM IN THE PREVIOUS DOWNDATER BECAUSE  @D@@@@ .         OF THE LOGICAJN
)@@G@@L ADVANTAGE OF HOLDING ONE    @D@@@@ .         FILE AS A FIXED REFERENCEJO
)@@G@@.  HOWEVER, THIS  @E@@@@ .         HAS THE INHERENT INABILITY TO DETERMIJP
)@@G@@NE WHEN     @D@@@@ .         BLOCKS OF DATA HAVE BEEN MOVED WITHIN THE  JQ
)@@G@@@ @@@@ .         REPECTIVE FILE.    @[@@@@ .    @[@@@@ .    @[@@@@ .    JR
)@@G@@@[@@@@ .    @[@@@@$(1). @]@@@@OUTPUT*.    @B@@@@ BEGIN SUBROUTINE       JS
)@@G@@              .   @G@@@@   L         X9,AFPADR                . PUT FIELJT
)@@G@@D PKT ADDR WHERE USED   @G@@@@   IF NONZ,IN,FRECNOS                 . ISJU
)@@G@@ THIS THE 1ST TIME CALLED?    @F@@@@      IF ZERO,IN,RECSOUT            JV
)@@G@@  . NO - BUT IS THERE OUTPUT  @F@@@@         L,U       A0,1             JW
)@@G@@  . NO FLAG TO UPDATE PKT     @B@@@@      ELSE                          JX
)@@G@@  .   @G@@@@         L,U       A0,2               . YES FLAG FOR POTENTIJY
)@@G@@AL OUTPUT   @B@@@@      ENDIF                           .   @B@@@@   ELSJZ
)@@G@@E                               .   @G@@@@      S         X11,OUTFIL    KA
)@@G@@        . SET FLAG FOR POSS OUTPUT FILE   @E@@@@      L         A0,INFOBKB
)@@G@@ITS           . GET INPUT OPTIONS   @F@@@@      IF ZERO,IN,MONSTER THEN KC
)@@G@@        . IS THIS ELEMENT MODE?     @F@@@@         IF A0,ODDP,OPT('T') AKD
)@@G@@ND NONZ,IN,NOSTARTCF THEN . *CARD?  @G@@@@            CALL      STARCARDKE
)@@G@@        . YES - TRY TO OUTPUT A STAR CARD @F@@@@         ELSE           KF
)@@G@@              . NO * CARD - ZAP BUFFER    @H@@@@            L,U       A1KG
)@@G@@,' '          . GET BLANK TO CLEAR 1ST CHAR OF BUF    @D@@@@            KH
)@@G@@S,S1      A1,CARDBUF      . JUST IN CASE  @B@@@@         ENDIF          KI
)@@G@@              .   @E@@@@      ELSE                            . IN PROGRKJ
)@@G@@AM FILE MODE@G@@@@         ON        READY              . WHEN CONTROL IKK
)@@G@@S MOD WE USE THIS @F@@@@         CALL      STARCARD           . TRY TO OKL
)@@G@@UTPUT STAR CARD   @B@@@@         OFF       READY              .   @F@@@@KM
)@@G@@         ON        READY=0            . MUST USE THIS CODE FOR NOW@D@@@@KN
)@@G@@         IF ZERO,IN,DATA THEN         . DOWUBLE CHAECK@E@@@@            KO
)@@G@@IF A0,ODDP,OPT('T') THEN  . ARE WE IN PCF MODE  @F@@@@               CALKP
)@@G@@L      STARCARD     . YES - NO SWEAT - TRY IT   @G@@@@            ELSE  KQ
)@@G@@                    . NO REGULAR MONSTER DOWNDATE     @E@@@@            KR
)@@G@@   E$DIT     EDTPKT       . OPEN EDIT$ SEQUENCE @D@@@@               E$CKS
)@@G@@HAR    '*'          . INTO STRING   @E@@@@               E$FD2     PFSPKKT
)@@G@@T+2     . GET ELEMENT NAME    @F@@@@               L         A0,PFSPKT+6KU
)@@G@@  . IS THERE A VERSION NAME?  @E@@@@               IF A0,NE,('      ') TKV
)@@G@@HEN . BLANK - FORGET IT @D@@@@                  E$CHAR    '/'       . ELKW
)@@G@@NAME/VERSION@E@@@@                  E$FD2     PFSPKT+6  . VERSION INTO SKX
)@@G@@TRING @B@@@@               ENDIF                  .   @D@@@@            KY
)@@G@@   CALL      WORDS        . OUTPUT IMAGE  @B@@@@            ENDIF       KZ
)@@G@@              .   @B@@@@         ENDIF                        .   @B@@@@LA
)@@G@@         OFF       READY=0            .   @B@@@@      ENDIF             LB
)@@G@@              .   @E@@@@      L,U       A0,1                  . FLAG TO LC
)@@G@@UPDATE PKT  @B@@@@   ENDIF                              .   @F@@@@   CALLD
)@@G@@L      OUTSTAT                  . DO UPDATE AND/OR OUTPUT   @B@@@@ ENDBELE
)@@G@@G                               .   @[@@@@/.    @[@@@@ .    @[@@@@ .    LF
)@@G@@@E@@@@ . THIS ROUTINE IS TO UPDATE MASTERPKT STATISTICS AND FORCE @C@@@@LG
)@@G@@ .     ACTUAL OUTPUT OF BLOCK IF NECESSARY.     @[@@@@ .    @[@@@@ .    LH
)@@G@@@[@@@@$(0). @D@@@@OUTEND    +         0                 . EXIT FLAG     LI
)@@G@@@F@@@@NOUPDATE  +         0                 . NO NEED TO UPDATE  FLAG   LJ
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@$(1). @]@@@@OUTSTAT*.   @B@@@@ BEGIN SUBROLK
)@@G@@UTINE                     .   @E@@@@   SZ        NOUPDATE               LL
)@@G@@  . INIT EXIT FLAGS     @C@@@@   SZ        OUTEND                   . HELM
)@@G@@RE TOO@F@@@@   REPEAT UNTIL NONZ,IN,OUTEND        . MIGHT BE DOUBLE ITERLN
)@@G@@ATION @F@@@@      IF A0,EQ,1,,U THEN              . DO WE JUST UPDATE PKLO
)@@G@@T?    @E@@@@         L         A2,ARECREF         . YES - GET 1ST REC # LP
)@@G@@@F@@@@         L         A1,ASIGREC         . AND # RECS IN THIS BLOCK  LQ
)@@G@@@G@@@@         S         A2,FRECNO          . BECOMES 1ST REC# OF OUTPUTLR
)@@G@@ AREA @G@@@@         L         A3,RTOTAL          . GET RUNNING TOTAL INLS
)@@G@@ DEL FILE   @E@@@@         S         A3,RTOTREF         . IS NOW A REF CLT
)@@G@@OUNT  @E@@@@         S         X11,OUTEND         . NO NEED TO LOOP     LU
)@@G@@@B@@@@      ELSE                            .   @F@@@@         L        LV
)@@G@@ A2,LRECNO          . MUST WE REALLY OUTPUT?    @F@@@@         IF A2,LT,LW
)@@G@@ARECREF OR ZERO,IN,ASIGREC THEN . MAYBE NOT     @F@@@@            CALL  LX
)@@G@@    OUTBLOCK        . YES - OUTPUT WHAT WE HAVE @G@@@@            IF ZERLY
)@@G@@O,IN,ASIGREC THEN   . IS THERE SOMETHING TO UPDATE    @E@@@@            LZ
)@@G@@   S         X11,NOUPDATE  . NO - JUST GET OUT  @B@@@@            ENDIF MA
)@@G@@                    .   @B@@@@         ELSE                         .   MB
)@@G@@@G@@@@            L         A1,RECSOUT      . ONLY NEED TO UPDATE OUTPUTMC
)@@G@@ STATS@F@@@@            A         A1,ASIGREC      . COULD HAVE BEEN SEQUMD
)@@G@@ENTIAL@E@@@@            L         A2,ARECREF      . USED TO CALC LRECNO ME
)@@G@@@E@@@@            L         A3,RTOTAL       . WILL NEED FOR UPDATE@F@@@@MF
)@@G@@            S         X11,OUTEND      . GO UPDATE OUTPUT AREA     @B@@@@MG
)@@G@@         ENDIF                        .   @B@@@@      ENDIF             MH
)@@G@@              .   @E@@@@   ESCAPE WHEN NONZ,IN,NOUPDATE       . DON'T MEMI
)@@G@@SS WITH PKT @B@@@@   OTHERWISE                          .   @F@@@@      MJ
)@@G@@L,U       A0,1                  . MAKE SURE WE UPDATE PKT   @B@@@@   ATEMK
)@@G@@ND                              .   @F@@@@      L         A0,FIELD      ML
)@@G@@        . IS THIS ADD OR DEL FILE   @E@@@@      IF A0,EQ,2,,U THEN      MM
)@@G@@        . ONLY UPDATE ON DEL  @F@@@@         A         A3,ASIGREC       MN
)@@G@@  . UPDATE DEL FILE TOTAL     @B@@@@      ENDIF                         MO
)@@G@@  .   @F@@@@      S         A3,RTOTAL             . AS A RUNNING REFERENMP
)@@G@@CE    @F@@@@      S         A1,RECSOUT            . THIS IS SIZE OF OUTPMQ
)@@G@@UT BLK@E@@@@      A         A2,ASIGREC            . CALC LAST REC #     MR
)@@G@@@D@@@@      S         A2,LRECNO             . AND UPDATE    @F@@@@      MS
)@@G@@L         A1,ARECNO             . UPDATE COMPARE PKT REC #'S@E@@@@      MT
)@@G@@A         A1,ASIGREC            . BUMP BY RECS PASSED @C@@@@      S     MU
)@@G@@    A1,ARECNO             . UPDATE  @G@@@@      SZ        ASIGREC       MV
)@@G@@        . RESET WAITING BLOCK INDICATOR   @B@@@@   ENDREP               MW
)@@G@@              .   @B@@@@ ENDBEG                               .   @[@@@@MX
)@@G@@/.    @[@@@@ .    @[@@@@ .    @E@@@@ . THIS ROUTINE SHOULD ONLY BE CALLEMY
)@@G@@D IF THE OUTPUT AREA OF @E@@@@ .     'A' FILE MUST BE CLEARED IN ORDER TMZ
)@@G@@O MOVE DOWN THE   @E@@@@ .     WAITING BLOCK, OR DURING CLEANUP WHEN ALLNA
)@@G@@ OUTPUT     @E@@@@ .     MUST BE DUMPED.  SINCE OUTPUT ON 'A' FILE MAY BNB
)@@G@@E IM- @E@@@@ .     PLICITLY BE EFFECTED BY POTENTIAL OUTPUT IN 'B' FILE.NC
)@@G@@@F@@@@ .     BOTH AREAS ARE EXAMINED AND THE MINIMUM AMOUNT OF OUTPUT   ND
)@@G@@@^@@@@ .     IS PERFORMED.    @[@@@@ .    @[@@@@ .    @[@@@@$(0). @E@@@@NE
)@@G@@ENDRECNO  +         0                 . END OF  DEL BLK SAVE@B@@@@      NF
)@@G@@    ON        COPT              .   @F@@@@COPTFLG   +         0         NG
)@@G@@        . FORMAT REL CORR SEQUENCE  @B@@@@          OFF       COPT      NH
)@@G@@        .   @[@@@@ .    @[@@@@ .    @[@@@@$(1). @]@@@@OUTBLOCK*.  @B@@@@NI
)@@G@@ BEGIN SUBROUTINE                     .   @E@@@@   L         A11,FIELD  NJ
)@@G@@              . GET OUTPUT FIELD #  @F@@@@   IF ZERO,IN,RECSOUT2 THEN   NK
)@@G@@        . IS THERE 2ND FILE OUTPUT? @F@@@@      L         A9,A11        NL
)@@G@@        . NO - OUTPUT ONLY 'A' FILE @E@@@@      L         A10,1         NM
)@@G@@        . WITH A CORR CARD    @C@@@@      CALL      FILEOUT             NN
)@@G@@  . DO IT   @E@@@@      SZ        A11                   . INSURE NO 'RESNO
)@@G@@WAP'  @B@@@@   ELSE                               .   @F@@@@      AN,U  NP
)@@G@@    A11,1                 . ZERO TEST MORE EFFICIENT  @F@@@@      IF A11NQ
)@@G@@,IS,NONZ THEN             . MUST ORDER AS ADD-DEL     @E@@@@         CALNR
)@@G@@L      SWAP               . 'A' FILE WAS 'DEL'  @D@@@@      ENDIF       NS
)@@G@@                    . NOW ADD-DELETE@G@@@@      L         A0,RTOTREF1   NT
)@@G@@        . GET 1ST REC# FOR FILE 'A' FILE  @D@@@@      IF A0,LT,RTOTREF2 NU
)@@G@@THEN          . RANGE CHECK   @G@@@@         L,U       A9,1             NV
)@@G@@  . SET TO OUTPUT FILE #1 (ADD)     @F@@@@         L,U       A10,1      NW
)@@G@@        . PREFIX WITH CORR CARD     @C@@@@         CALL      FILEOUT    NX
)@@G@@        . OUTPUT  @F@@@@         IF A11,IS,NONZ THEN          . MAY HAVENY
)@@G@@ TO OUTPUT DEL    @F@@@@            CALL      SWAP            . YES - SWNZ
)@@G@@AP PKT FOR OUTPUT @D@@@@            L,U       A9,2            . FLG FOR OA
)@@G@@DELETE@F@@@@            CALL      FILEOUT         . AND OUTPUT WITH CORROB
)@@G@@ CARD @G@@@@            CALL      SWAP            . RESTORE PKT TO ADD-DOC
)@@G@@EL FORMAT   @B@@@@         ENDIF                        .   @B@@@@      OD
)@@G@@ELSE                            .   @B@@@@         ON        COPT       OE
)@@G@@        .   @E@@@@         SZ        COPTFLG            . INIT REL FORMAOF
)@@G@@T FLG @E@@@@         L         A1,INFOBITS        . GET OPTIONS WORD    OG
)@@G@@@F@@@@         IF A1,ODDP,OPT('C') THEN     . IS REL-FORMAT REQUESTED   OH
)@@G@@@G@@@@            L         A1,RECSOUT1     . YES - SEE IF WE HAVE A -N,OI
)@@G@@M-    @F@@@@            IF A0,EQ,RTOTREF2 AND A1,EQ,RECSOUT2 THEN . MAYBOJ
)@@G@@E     @F@@@@               S         X11,COPTFLG  . YES CREATE -N,M- OUTOK
)@@G@@PUT   @B@@@@            ENDIF                     .   @B@@@@         ENDOL
)@@G@@IF                        .   @B@@@@         OFF       COPT             OM
)@@G@@  .   @G@@@@         L         A1,RTOTREF2        . IS IT REALLY IN MIDDON
)@@G@@LE OF DELETE@D@@@@         A         A1,RECSOUT2        . CALC DEL RANGEOO
)@@G@@@E@@@@         S         A1,ENDRECNO        . SAVE LAST REC #     @E@@@@OP
)@@G@@         CALL      SWAP               . MUST OUTPUT DEL 1ST @E@@@@      OQ
)@@G@@   L,U       A9,2               . FLAG AS DEL FILE    @D@@@@         L,UOR
)@@G@@       A10,1              . WITH CORR CARD@C@@@@         CALL      FILEOOS
)@@G@@UT            . OUTPUT  @F@@@@         CALL      SWAP               . REOT
)@@G@@STORE PKT AS IT WAS     @G@@@@         L,U       A9,1               . PROU
)@@G@@EPARE FOR POSSIBLE ADD OUTPUT @E@@@@         L         A1,ENDRECNO      OV
)@@G@@  . GET END DEL BLK #   @E@@@@         IF A1,GE,RTOTREF1 THEN       . ISOW
)@@G@@ THERE OVERLAP?   @E@@@@            L,U       A10,0           . NO CORR OX
)@@G@@CARD FOR ADD@B@@@@            ON        COPT            .   @E@@@@      OY
)@@G@@      IF ZERO,IN,COPTFLG THEN   . IF -N,M- WE'RE DONE @B@@@@            OZ
)@@G@@   OFF       COPT         .   @C@@@@               CALL      FILEOUT    PA
)@@G@@  . OUTPUT  @B@@@@               ON        COPT         .   @B@@@@      PB
)@@G@@      ENDIF                     .   @B@@@@            OFF       COPT    PC
)@@G@@        .   @B@@@@         ELSE                         .   @F@@@@      PD
)@@G@@      IF A11,IS,ZERO THEN       . WAS ADD FILE THE REQUEST  @G@@@@      PE
)@@G@@         CALL      FILEOUT      . YES - OUTPUT WITH CORR CARD     @B@@@@PF
)@@G@@            ENDIF                     .   @B@@@@         ENDIF          PG
)@@G@@              .   @B@@@@      ENDIF                           .   @B@@@@PH
)@@G@@   ENDIF                              .   @F@@@@   IF A11,IS,NONZ THEN  PI
)@@G@@              . MUST RESTORE PKT AS IT WAS@F@@@@      CALL      SWAP    PJ
)@@G@@              .  MUST HAVE BEEN DEL-ADD   @B@@@@   ENDIF                PK
)@@G@@              .   @B@@@@ ENDBEG                               .   @[@@@@PL
)@@G@@ .    @[@@@@/.    @[@@@@ .    @D@@@@ . THIS ROUTINE HANDLES THE OUTPUT OPM
)@@G@@F THE APPROPRIATE @E@@@@ .         FILE IN ACCORDANCE WITH THE INFORMATIPN
)@@G@@ON PASSED   @D@@@@ .         IT IN THE CURRENT A PORTION OF THE PACKET  PO
)@@G@@@E@@@@ .         AND THE PARAMETERS PASSED IN REGISTERS A9,10     @E@@@@PP
)@@G@@ .         AT THE TIME OF CALL.  A9 DESIGNATES THE FIELD    @D@@@@ .    PQ
)@@G@@     NUMBER OF THE FILE IN THE A PACKET AREA    @D@@@@ .         AND A10PR
)@@G@@ IS A FLAG WHICH DICTATES WHETHER   @E@@@@ .         OR NOT A HEADER CARPS
)@@G@@D (CORRECTION CARD) SHOULD    @^@@@@ .         BE PRODUCED. @[@@@@ .    PT
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@$(1). @]@@@@FILEOUT*.   @B@@@@ BEGIN SUBROPU
)@@G@@UTINE                     .   @E@@@@   IF NONZ,IN,RECSOUT THEN          PV
)@@G@@  . ANY REAL OUTPUT?    @F@@@@      L         A1,RTOTREF            . GEPW
)@@G@@T REF TOTAL FOR THIS BLK@F@@@@      IF A9,EQ,2,,U THEN              . ISPX
)@@G@@ THIS DELETE OR ADD?    @E@@@@         A,U       A1,1               . DEPY
)@@G@@LETE BUMP BY ONE  @C@@@@         S         A1,RTOTREF         . UPDATE  PZ
)@@G@@@B@@@@      ENDIF                           .   @F@@@@      L,S1      A2QA
)@@G@@,AUXBUF             . IS THERE A PREFIX WAITING?@G@@@@      IF A1,IS,ZERQB
)@@G@@O AND A2,EQ,'&',,U THEN . MAY BE PREFIX FOR T-OPT     @E@@@@         CALQC
)@@G@@L      EDITADD            . GO PRINT ADD STREAM @]@@@@      ELSE  @F@@@@QD
)@@G@@         IF A10,IS,ZERO THEN          . FLAG TO MAKE CORR CARD    @F@@@@QE
)@@G@@            CALL      EDITADD         . NO CARD OUTPUT ADD STREAM @B@@@@QF
)@@G@@         ELSE                         .   @E@@@@            CALL      EDQG
)@@G@@ITCORR        . CREAT CORR CARD     @B@@@@         ENDIF                QH
)@@G@@        .   @B@@@@      ENDIF                           .   @G@@@@      QI
)@@G@@SZ        RECSOUT               . MAKE SURE NOT THIS ONE AGAIN    @B@@@@QJ
)@@G@@   ENDIF                              .   @B@@@@ ENDBEG                 QK
)@@G@@              .   @[@@@@/.    @[@@@@ .    @[@@@@ .    @[@@@@ .    @#@@@@QL
)@@G@@ . EDITCORR -     @G@@@@ .         CREATE CORRECTION CARD AND OUTPUT, THQM
)@@G@@EN PROCESS ANY REMAINING@A@@@@ .         OUTPUT CARD STREAMS.     @[@@@@QN
)@@G@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(1). @]@@@@EDITCORR*.  @B@@@@ BEGINQO
)@@G@@ SUBROUTINE                     .   @E@@@@   E$DIT     EDTPKT           QP
)@@G@@        . OPEN EDIT$ SEQUENCE @F@@@@   L         A0,CHAR                QQ
)@@G@@  . GET CORRECTION CHARACTER  @E@@@@   E$CHAR                           QR
)@@G@@  . PUT IN OUTPUT IMAGE @F@@@@   E$MSG     AUXBUF                   . ADQS
)@@G@@D ANY PREFIX WAITING    @E@@@@   E$DECV    RTOTREF                  . EDQT
)@@G@@IT IN FIRST #     @C@@@@   IF A9,NE,1,,U THEN                 . 1 => ADDQU
)@@G@@@F@@@@      E$CHAR    ','                   . START DELETE SEQUENCE     QV
)@@G@@@D@@@@      L         A0,RTOTREF            . CALC END REC #@E@@@@      QW
)@@G@@A         A0,RECSOUT            . THIS MANY TO DELETE @D@@@@      AN,U  QX
)@@G@@    A0,1                  . BACK UP ONE   @D@@@@      E$DECV            QY
)@@G@@              . OUTPUT NUMBER @B@@@@      ON        COPT                QZ
)@@G@@  .   @F@@@@      IF NONZ,IN,COPTFLG THEN         . IS THIS REL-CORR SEQRA
)@@G@@UENCE @G@@@@         E$CHAR    '-'                . YES - ADD TRAILING IRB
)@@G@@NDICATIOR   @B@@@@      ENDIF                           .   @B@@@@      RC
)@@G@@OFF       COPT                  .   @B@@@@   ENDIF                      RD
)@@G@@        .   @F@@@@   L         A0,INFOBITS              . GET CALL CARD RE
)@@G@@OPTIONS     @E@@@@   IF A0,ODDP,OPT('T') THEN           . IF T OPT DON'TRF
)@@G@@ FUSS @F@@@@      E$SKIP    2                     . JUST LEAVE TWO BLANKRG
)@@G@@S     @F@@@@      E$MSG     CARDBUF               . AND STICK IN ELEMENTRH
)@@G@@ NAME @B@@@@   ELSE                               .   @E@@@@      E$COLNRI
)@@G@@                          . GET CURRENT COLUMN #@D@@@@      IF A0,GT,13,RJ
)@@G@@,U THEN             . 13 IS MINIMUM @F@@@@         A,U       A0,1       RK
)@@G@@        . LEAVE AT LEAST ONE BLANK  @B@@@@      ELSE                    RL
)@@G@@        .   @E@@@@         L,U       A0,13              . USE 13 AS 'TABRM
)@@G@@'     @B@@@@      ENDIF                           .   @E@@@@      E$COL RN
)@@G@@                          . SET THE COLUMN #    @G@@@@      IF A9,EQ,1,,RO
)@@G@@U THEN              . NEED TO KNOW WHAT SIDE OF PKT   @D@@@@         L  RP
)@@G@@       X4,BFPADR          .   WE IS ON!   @B@@@@      ELSE              RQ
)@@G@@              .   @G@@@@         L         X4,AFPADR          . GETTING RR
)@@G@@ELNAME FROM PFP PKT     @B@@@@      ENDIF                           .   RS
)@@G@@@E@@@@      E$FD2     10,X4                 . FETCH ELEMENT NAME  @E@@@@RT
)@@G@@      L         A0,('      ')         . GET WORD OF SPACES  @G@@@@      RU
)@@G@@IF A0,NE,14,X4 AND NONZ,IN,14,X4 THEN . IS THERE A VERSION NAME?  @D@@@@RV
)@@G@@         E$CHAR    '/'                . YES - DELIMIT @E@@@@         E$FRW
)@@G@@D2     14,X4              . PUT IN VERSION NAME @B@@@@      ENDIF       RX
)@@G@@                    .   @B@@@@   ENDIF                              .   RY
)@@G@@@E@@@@   CALL      WORDS                    . OUTPUT CORR CARD    @B@@@@RZ
)@@G@@   ON        COPT                     .   @E@@@@   IF NONZ,IN,COPTFLG THSA
)@@G@@EN            . IS THIS -N,M- SEQ   @E@@@@      CALL      EDITREL       SB
)@@G@@        . YES - PROPER ROUTINE@B@@@@   ELSE                             SC
)@@G@@  .   @B@@@@      OFF       COPT                  .   @E@@@@      IF A9,SD
)@@G@@NE,2,,U THEN              . WAS IT ADD OR DEL?  @F@@@@         CALL     SE
)@@G@@ EDITADD            . GENERATE THE ADD STREAM   @B@@@@      ELSE        SF
)@@G@@                    .   @G@@@@         CALL      EDITDEL            . SESG
)@@G@@E IF WE NEED TO GEN DEL STREAM@B@@@@      ENDIF                         SH
)@@G@@  .   @B@@@@      ON        COPT                  .   @B@@@@   ENDIF    SI
)@@G@@                          .   @B@@@@   OFF       COPT                   SJ
)@@G@@  .   @B@@@@ ENDBEG                               .   @[@@@@/.    @[@@@@SK
)@@G@@ .    @[@@@@ .    @]@@@@ . EDITADD -@F@@@@ .         THIS ROUTINE GENERASL
)@@G@@TES THE STREAM OF IMAGES TO BE ADDED@F@@@@ .         AT THIS POINT.  IF SM
)@@G@@THE L OPTION HAS BEEN SPECIFIED IT  @F@@@@ .         WILL ALSO PREFIX THSN
)@@G@@E PRINT$ OUTPUT WITH APPROPRIATE    @^@@@@ .         LINE NUMBERS.@[@@@@SO
)@@G@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(0). @B@@@@INFOSAVE  +0            SP
)@@G@@              .   @B@@@@LFLAG     +0                          .   @F@@@@SQ
)@@G@@ASTRING   ' &    '                    . THIS IS REALLY THE PREFIX @[@@@@SR
)@@G@@ .    @[@@@@ .    @[@@@@$(1). @]@@@@EDITADD*.   @B@@@@ BEGIN SUBROUTINE SS
)@@G@@                    .   @E@@@@   SZ        LFLAG                    . INST
)@@G@@IT LOPTION FLAG   @E@@@@   L         A0,INFOBITS              . GET INPUSU
)@@G@@T OPTIONS   @E@@@@   IF A0,ODDP,OPT('L') AND A0,EVENP,OPT('N') THEN . OUSV
)@@G@@TPUT  @G@@@@      S         A0,INFOSAVE           . MUST PREVENT WORDT FSW
)@@G@@OR PRINT$   @F@@@@      OR        A0,OPT('N')           . FAKE N OPTION SX
)@@G@@FOR NOW     @E@@@@      S         A1,INFOBITS           . UPDATE OPTIONSSY
)@@G@@ WORD @F@@@@      S         X11,LFLAG             . SET FLAG TO RESET LASZ
)@@G@@TER   @E@@@@      L         A0,ASTRING            . GET 'PREFIX' STRING TA
)@@G@@@H@@@@      S         A0,PREFIX             . STORE AS PREFIX IN CASE OFTB
)@@G@@ OVERFLOW   @H@@@@      L,U       A1,'-'                . USE THIS AS A TC
)@@G@@CONTINUATION INDICATOR  @F@@@@      S         A1,CONTINCHAR         . SETD
)@@G@@T FOR POSSIBLE OVERFLOW @B@@@@   ENDIF                              .   TE
)@@G@@@F@@@@   L         A6,RECSOUT               . GET # IMAGES TO OUTPUT    TF
)@@G@@@E@@@@   L         A0,AIPADR                . AND ISDFI PKT ADDR  @E@@@@TG
)@@G@@   L         A1,FRECNO                . AND STARTING REC #  @D@@@@   REPTH
)@@G@@EAT JGD,A6                      . OUTPUT IMAGES @D@@@@      CASENTRY CALTI
)@@G@@LING GET            . FETCH RECORD  @F@@@@      CASE 0                  TJ
)@@G@@        . ERROR RETURN ON INPUT     @F@@@@         L         A1,A0      TK
)@@G@@        . GET PKT ADDR IN ERROR     @D@@@@         L,U       A0,GETERR  TL
)@@G@@        . SET ERROR CODE@F@@@@         CALL      ERROR              . PRTM
)@@G@@OCESS ERROR AND TERM    @D@@@@      CASE 1                          . NOTN
)@@G@@RMAL RETURN @F@@@@         DL        A7,A0              . SAVE PKT ADDR,TO
)@@G@@ NEXT REC # @E@@@@         L         A9,A2              . ALSO IMAGE ADDTP
)@@G@@RESS  @G@@@@         CALL      WORDT              . PROCESS OUTPUT IMAGETQ
)@@G@@ NORMALLY   @E@@@@         IF NONZ,IN,LFLAG THEN        . MUST WE EDIT PTR
)@@G@@RINT$?@F@@@@            L         A0,A8           . NEED CHAR TYPE OF RETS
)@@G@@C     @D@@@@            SSL       A0,18           . SHIFT IN FLAG @F@@@@TT
)@@G@@            S         A0,EASC         . PUT IN EDTPKT FOR OUTPUT  @F@@@@TU
)@@G@@            E$DIT     EDTPKT          . YES - OPEN EDIT SEQUENCE  @D@@@@TV
)@@G@@            E$SKIP    1               . INDENT ONE    @E@@@@            TW
)@@G@@L         A1,INFOBITS     . GET INPUT OPTIONS   @H@@@@            IF ZERTX
)@@G@@O,IN,DEMAND OR A1,ODDP,OPT('V') THEN . EXPANDED OUTPUT?     @D@@@@      TY
)@@G@@         E$SKIP    4            . LINE UP COLUMN@D@@@@               CALTZ
)@@G@@L      JUSTIFY      . ALLIGN IMAGES @B@@@@            ELSE              UA
)@@G@@        .   @E@@@@               E$CHAR    '['          . RECORD # DELIMUB
)@@G@@ITER  @D@@@@               LXI,U     A0,0         . CLEAR UPPER A0@D@@@@UC
)@@G@@               LXM       A0,A8        . GET REC #     @F@@@@            UD
)@@G@@   AN,U      A0,1         . BACKUP FOR THIS REC #     @E@@@@            UE
)@@G@@   E$DECV                 . OUTPUT INTO STRING  @B@@@@            ENDIF UF
)@@G@@                    .   @C@@@@            E$CHAR    ']'             . DEUG
)@@G@@LIMIT @F@@@@            E$COLN                    . GET CURRENT COLUMN NUH
)@@G@@UMBER @H@@@@            S         A0,STARTCOL     . GIVE IT TO OVERFLOW UI
)@@G@@- JUST IN CASE    @D@@@@            E$SKIP    1               . LEAVE A UJ
)@@G@@SPACE @E@@@@            L         A0,EASC         . GET CHAR MODE OF RECUK
)@@G@@@F@@@@            S         A0,EASCIN       . SET INPUT FLG IN EDIT$ PKTUL
)@@G@@@F@@@@            L         A0,A7           . NOW WE NEED THE LENGTH    UM
)@@G@@@G@@@@            LN        A1,16,A0        . FETCH LENGTH FROM CONTROL UN
)@@G@@WRD   @D@@@@            SSA       A1,24           . ONLY IN T1    @E@@@@UO
)@@G@@            L         A0,A9           . AND IMAGE LOCATIONS @B@@@@      UP
)@@G@@      E$COPY                    .   @F@@@@            CALL      BUFFCHECUQ
)@@G@@K       . GO CHECK FOR OVERFLOW     @F@@@@            E$PRTG    -1,1    UR
)@@G@@        . DON'T CLEAR BUF, SKIP ONE @G@@@@            E$DITX            US
)@@G@@        . CLOSE EDIT IN CASE QUARTER WORD @F@@@@            SZ        EAUT
)@@G@@SCIN          . INITIAL STATE MUST BE FD  @E@@@@            SZ        EAUU
)@@G@@SC            . FOR INPUT AND OUTPUT@G@@@@            CALL      FDPSR   UV
)@@G@@        . RETURN PSR TO THIRD WORD IF NEC @B@@@@         ENDIF          UW
)@@G@@              .   @G@@@@         DL        A0,A7              . RESTORE UX
)@@G@@ISDFI PKT ADDR AND REC #@B@@@@      ENDCASE                         .   UY
)@@G@@@B@@@@   ENDREP                             .   @F@@@@   IF NONZ,IN,LFLAUZ
)@@G@@G THEN              . RESTORE OPTIONS WORD?     @D@@@@      L         A0VA
)@@G@@,INFOSAVE           . YES - FETCH IT@D@@@@      S         A0,INFOBITS   VB
)@@G@@        . RESTORE IT    @B@@@@   ENDIF                              .   VC
)@@G@@@B@@@@ ENDBEG                               .   @[@@@@/.    @[@@@@ .    VD
)@@G@@@[@@@@ .    @]@@@@ . EDITDEL -@G@@@@ .         IN THE CASE OF A SPECIFIEVE
)@@G@@D L OPTION WITH NO ACCOMPANYING     @G@@@@ .         N OPTION THIS ROUTIVF
)@@G@@NE IS USED TO OUTPUT LISTS OF DELETED     @F@@@@ .         RECORDS PREFIVG
)@@G@@XED BY THEIR RESPECTIVE RECORD NUMBERS.   @[@@@@ .    @[@@@@ .    @[@@@@VH
)@@G@@ .    @[@@@@$(0). @F@@@@ESTRING   '************'              . DELETE SVI
)@@G@@EQUENCE DELIMITER @E@@@@PSTRING   ' ****&'                    . DELETE RVJ
)@@G@@ECORD PREFIX@[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(1). @]@@@@EDITDEVK
)@@G@@L*.   @B@@@@ BEGIN SUBROUTINE                     .   @E@@@@   L        VL
)@@G@@ A0,INFOBITS              . GET INPUT OPTIONS   @E@@@@   IF A0,ODDP,OPT(VM
)@@G@@'L') AND A0,EVENP,OPT('N') THEN . L OPT?  @D@@@@      DL        A0,PSTRIVN
)@@G@@NG            . GET PREFIX    @F@@@@      DS        A0,PREFIX           VO
)@@G@@  . SET FOR POSSIBLE OVERFLO  @G@@@@      L,U       A1,'-'              VP
)@@G@@  . USE THIS FOR A CONTINUATION CHAR@E@@@@      S         A1,CONTINCHAR VQ
)@@G@@        . USE FOR OVERFLOW    @F@@@@      E$DIT     EDTPKT              VR
)@@G@@  . YES - OPEN EDIT SEQUENCE  @G@@@@      E$SKIP    1                   VS
)@@G@@  . INDENT ALL BUT CORR CARD FOR L  @F@@@@      E$FD2     ESTRING       VT
)@@G@@        . GET INITIAL DELIMITER     @G@@@@      E$PRTG    -1,1          VU
)@@G@@        . PRINT$ BUT DON'T CLEAR BUFF     @E@@@@      E$DITX            VV
)@@G@@              . ONLY FOR 'NEATNESS' @E@@@@      L         A6,RECSOUT    VW
)@@G@@        . GET OUTPUT REC COUNT@E@@@@      L         A0,AIPADR           VX
)@@G@@  . GET ISDFI PKT ADDR  @E@@@@      L         A1,FRECNO             . ANVY
)@@G@@D STARTING REC NO @D@@@@      REPEAT JGD,A6                   . LOOP TO VZ
)@@G@@OUTPUT@D@@@@         CASENTRY CALLING GET         . FETCH RECORD  @D@@@@WA
)@@G@@         CASE 0                       . ERROR RETURN  @F@@@@            WB
)@@G@@L         A1,A0           . GET PKT ADDR IN ERROR     @D@@@@            WC
)@@G@@L,U       A0,GETERR       . SET ERROR CODE@F@@@@            CALL      ERWD
)@@G@@ROR           . PROCESS ERROR AND TERM    @B@@@@         CASE 1         WE
)@@G@@              .   @F@@@@            DL        A7,A0           . SAVE PKTWF
)@@G@@ ADDR AND REC #   @E@@@@            L         A9,A2           . ALSO RECWG
)@@G@@ LOCATION   @F@@@@            L         A0,A8           . NEED CHAR MODEWH
)@@G@@ OF REC     @D@@@@            SSL       A0,18           . SHIFT IN FLAG WI
)@@G@@@G@@@@            S         A0,EASC         . INTO EDTPKT AS OUTPUT CHARWJ
)@@G@@ FLG  @H@@@@            E$DIT     EDTPKT          . MUST REINIT IN CASE WK
)@@G@@OF MODE CHANGE    @D@@@@            E$MSG     PSTRING         . INSERT PWL
)@@G@@REFIX @E@@@@            L         A1,INFOBITS     . GET INPUT OPTIONS   WM
)@@G@@@G@@@@            IF ZERO,IN,DEMAND OR A1,ODDP,OPT('V') THEN . IN BATCH WN
)@@G@@MODE? @E@@@@               CALL      JUSTIFY      . YES - LINE UP IMAGESWO
)@@G@@@B@@@@            ELSE                      .   @G@@@@               E$SWP
)@@G@@KIP    1            . NO - MAKE MOST USE OF SPACE     @D@@@@            WQ
)@@G@@   E$CHAR    '['          . DELIMIT REC # @C@@@@               LXI,U    WR
)@@G@@ A0,0         . CLEAR A0@E@@@@               LXM       A0,A8        . ANWS
)@@G@@D GET REC NUMBER  @F@@@@               AN,U      A0,1         . BACKUP FWT
)@@G@@OR THIS REC #     @F@@@@               E$DECV                 . EDIT RECWU
)@@G@@ # INTO STRING    @B@@@@            ENDIF                     .   @C@@@@WV
)@@G@@            E$CHAR    ']'             . DELIMIT @F@@@@            E$COLNWW
)@@G@@                    . GET CURRENT COLUMN NUMBER @F@@@@            S     WX
)@@G@@    A0,STARTCOL     . SET IN CASE OF OVERFLOW   @D@@@@            E$SKIPWY
)@@G@@    1               . AND SPACE     @E@@@@            L         A0,EASC WZ
)@@G@@        . GET MODE OF REC     @D@@@@            S         A0,EASCIN     XA
)@@G@@  . INTO EDIT$ PKT@E@@@@            L         A0,A7           . NEED LENXB
)@@G@@GTH OF REC  @G@@@@            LN        A1,16,A0        . GET LENGTH FORXC
)@@G@@M CONTROL WRD     @H@@@@            SSA       A1,24           . MUST SHIXD
)@@G@@FT FOR T1 IN CASE QUARTER WRD @E@@@@            L         A0,A9         XE
)@@G@@  . LOCATION OF REC     @D@@@@            E$COPY                    . INXF
)@@G@@TO STRING   @E@@@@            CALL      BUFFCHECK       . GO CHECK OVERFXG
)@@G@@LOW   @E@@@@            E$PRTG    -1,1            . CLEAR BUF, SKIP ONE XH
)@@G@@@H@@@@            E$DITX                    . EXIT EDIT MODE - (LEAVE QUXI
)@@G@@ARTER WRD)  @E@@@@            SZ        EASCIN          . ALWAYS INIT TOXJ
)@@G@@ FD   @F@@@@            SZ        EASC            . BOTH INPUT AND OUTPUXK
)@@G@@T     @G@@@@            CALL      FDPSR           . RETURN PSR TO THIRD XL
)@@G@@WORD IF NEC @B@@@@         ENDCASE                      .   @E@@@@      XM
)@@G@@   DL        A0,A7              . RESTORE REGS FOR GET@B@@@@      ENDREPXN
)@@G@@                          .   @G@@@@      E$DIT     EDTPKT              XO
)@@G@@  . REINIT IN CASE WE WERE ASCII    @G@@@@      E$SKIP    1             XP
)@@G@@        . INDENT TRAILING DELIMITER ALSO  @F@@@@      E$FD2     ESTRING XQ
)@@G@@              . DELIMIT END OF SEQUENCE   @B@@@@      E$PRTG    -1,1    XR
)@@G@@              .   @E@@@@      E$DITX                          . JUST TO XS
)@@G@@BE NEAT     @B@@@@   ENDIF                              .   @B@@@@ ENDBEXT
)@@G@@G                               .   @[@@@@/.    @[@@@@ .    @[@@@@ .    XU
)@@G@@@#@@@@ . BUFFCHECK -    @F@@@@ .      THIS ROUTINE IS USED BY THE L-OPTIXV
)@@G@@ON EDIT SEQUENCES TO    @F@@@@ .      CHECK FOR POSSIBLE OVERFLOW OF A LXW
)@@G@@EGAL PRINT$ BUFFER.  IF @F@@@@ .      OVERFLOW IS THE CASE THE BUFFER ISXX
)@@G@@ SPLIT AND PRINTED IN   @ @@@@ .      LEGAL LENGTH SEGMENTS.@[@@@@ .    XY
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@$(0). @H@@@@STARTCOL* +0                  XZ
)@@G@@        . COLUMN TO PUT CONTINUATION CHAR + REC @I@@@@CONTINCHAR*       YA
)@@G@@  +0                 . S6 MUST CONTAIN A CHAR IF ONE IS TO BE     @I@@@@YB
)@@G@@LASTCOL   +0                          . DYNAMICALLY SET ON BASIS OF DEMAYC
)@@G@@ND OR BA    @G@@@@PREFIX*   RES       3                 . ANY PREFIX MUSYD
)@@G@@T BE MOVED HERE   @F@@@@OVFLSAVE  RES       4                 . GENERAL YE
)@@G@@SAVE LOCATIONS    @[@@@@ .    @[@@@@ .    @[@@@@$(1). @]@@@@BUFFCHECK*. YF
)@@G@@@B@@@@ BEGIN SUBROUTINE                     .   @G@@@@   L,U       A0,13YG
)@@G@@2                   . GET PRINT$ MAX IMAGE LENGTH     @E@@@@   L        YH
)@@G@@ A1,INFOBITS              . GET INPUT OPTIONS   @F@@@@   IF NONZ,IN,DEMAYI
)@@G@@ND AND A1,EVENP,OPT('V') THEN . MAY SHORTEN     @F@@@@      L,U       A0YJ
)@@G@@,72                 . USE LENGTH FOR DEMAND     @B@@@@   ENDIF          YK
)@@G@@                    .   @D@@@@   S         A0,LASTCOL               . SEYL
)@@G@@T FOR LATER @E@@@@   REPEAT                             . LOOP TO BREAK YM
)@@G@@UP REC@F@@@@      E$COLN                          . GET CURRENT CHAR POSYN
)@@G@@ITION @D@@@@   ESCAPE WHEN A0,LE,LASTCOL          . NO OVERFLOW   @B@@@@YO
)@@G@@   OTHERWISE                          .   @E@@@@      S         A0,OVFLSYP
)@@G@@AVE+3         . SAVE PTR TO LAST COL@F@@@@      E$WRDN                  YQ
)@@G@@        . GET TOTAL WORD LENGTH     @F@@@@      S         A0,OVFLSAVE   YR
)@@G@@        . SAVE FINAL COL FOR LATER  @D@@@@      L         A0,LASTCOL    YS
)@@G@@        . GET LASTCOL # @F@@@@      AN,U      A0,1                  . BAYT
)@@G@@CKUP OVER WORD BOUNDRY  @G@@@@      E$COL                           . REYU
)@@G@@SET COL PTR FOR NO OVERFLOW   @F@@@@      E$WRDN                        YV
)@@G@@  . GET IMAGE WORD LENGTH     @C@@@@      S         A0,OVFLSAVE+1       YW
)@@G@@  . AND SAVE@F@@@@      L,S3      A1,EDTPKT             . GET CURRENT BUYX
)@@G@@FFER LENGTH @H@@@@      S         A1,OVFLSAVE+2         . SAVE - WE MUSTYY
)@@G@@ KLUDGE FOR DUMB EPRTG$ @G@@@@      S,S3      A0,EDTPKT             . USYZ
)@@G@@E IMAGE WRD LENGTH FOR BUFF   @F@@@@      E$PRTG    0,1                 ZA
)@@G@@  . PRINT CURRENT SEGMENT     @F@@@@      L         A0,OVFLSAVE+2       ZB
)@@G@@  . GET REAL BUFFER LENGTH    @E@@@@      S,S3      A0,EDTPKT           ZC
)@@G@@  . RESTORE TO EDIT PKT @E@@@@      SZ        EASCIN                . SEZD
)@@G@@T INPUT TO FD     @D@@@@      E$MSG     PREFIX                . ADD PREFZE
)@@G@@IX    @F@@@@      E$COL     STARTCOL,,W           . SET COL TO START POSZF
)@@G@@ITION @E@@@@      E$CHAR    CONTINCHAR,,S6        . PUT IN CONTIN CHAR  ZG
)@@G@@@E@@@@      L         A0,EASC               . GET OUTPUT CHAR MODE@E@@@@ZH
)@@G@@      S         A0,EASCIN             . NOW IS ALSO INPUT   @F@@@@      ZI
)@@G@@L,H2      A0,EDTPKT             . GET START OF BUF ADDR     @G@@@@      ZJ
)@@G@@A         A0,OVFLSAVE+1         . FIND START OF REST OF IMAGE     @G@@@@ZK
)@@G@@      LN        A1,OVFLSAVE           . FETCH AND NEG ORIG IMAGE LEN    ZL
)@@G@@@G@@@@      A         A1,OVFLSAVE+1         . ACTUALLY SUBTRACT PART PRIZM
)@@G@@NTED  @G@@@@      E$COPY                          . TRANSFER TO START OFZN
)@@G@@ BUFFER     @F@@@@      E$COLN                          . GET CURRENT COZO
)@@G@@LUMN NUMBER @G@@@@      AN        A0,OVFLSAVE+3         . GET NEG OFFSETZP
)@@G@@ TO ORIG LAST COL @G@@@@      S         A0,OVFLSAVE           . SAVE WHIZQ
)@@G@@LE WE RESET THE PTR     @F@@@@      L         A0,OVFLSAVE+3         . GEZR
)@@G@@T LAST COL ORIGINALLY   @E@@@@      E$COL                           . REZS
)@@G@@SET TO THAT NOW   @D@@@@      L,U       A1,05                 . GET FD BZT
)@@G@@LK    @F@@@@      IF NONZ,IN,EASC THEN            . IS OUTPUT ASCII OR FZU
)@@G@@D?    @C@@@@         L,U       A1,040             . ASCII   @B@@@@      ZV
)@@G@@ENDIF                           .   @D@@@@      L         A0,OVFLSAVE   ZW
)@@G@@        . GET NEG OFFSET@E@@@@      E$PAD                           . GRZX
)@@G@@OSS BUT EFFECTIVE @B@@@@   ENDREP                             .   @B@@@@ZY
)@@G@@ ENDBEG                               .   @[@@@@/.    @[@@@@ .    @[@@@@ZZ
)@@G@@ .    @[@@@@ .    @]@@@@ . JUSTIFY -@G@@@@ .        THIS ROUTINE IS CALLAA
)@@G@@ED IN BATCH MODE TO INSURE HTE PROPER     @B@@@@ .        ALLIGNMENT OF AB
)@@G@@OUTPUT IMAGES.    @[@@@@ .    @[@@@@ .    @[@@@@ .    @[@@@@$(0). @E@@@@AC
)@@G@@SAVEX9    +         0                 . NOT TO VIOLATE X9   @E@@@@SAVEX1AD
)@@G@@0   +         0                 . NOT TO VIOLATE X10  @[@@@@ .    @[@@@@AE
)@@G@@ .    @[@@@@$(1). @]@@@@JUSTIFY.    @B@@@@ BEGIN SUBROUTINE             AF
)@@G@@        .   @E@@@@   LXI,U     A0,0                     . CLEAR UPPER PAAG
)@@G@@RT A0 @E@@@@   LXM       A0,A8                    . GET NEXT REC NUMBER AH
)@@G@@@G@@@@   AN,U      A0,1                     . DECREMENT FOR PROPER OUTPUAI
)@@G@@T     @G@@@@   L,U       A1,5                     . FIXED FORMAT OUTPUT AJ
)@@G@@5 COLUMNS   @F@@@@   E$DECF                             . EDIT INTO OUTPAK
)@@G@@UT STRING   @F@@@@   L,H2      A0,EDTPKT                . GET ADDR OF EDAL
)@@G@@IT BUFFER   @H@@@@   L         A1,A0                    . USE FOR INPUT AM
)@@G@@AND OUTPUT ROUTINES     @F@@@@   S         X9,SAVEX9                . MUAN
)@@G@@ST SAVE FIELD PKT ADDR  @F@@@@   S         X10,SAVEX10              . MUAO
)@@G@@ST SAVE MASTERPKT ADDR  @F@@@@   IF NONZ,IN,EASC THEN               . ISAP
)@@G@@ BUFFER IN ASCII MODE   @F@@@@      CALL,X9   ASGET                 . YEAQ
)@@G@@S - OPEN ASCII ROUTINES @D@@@@      CALL,X10  ASPUT                 . ASAR
)@@G@@CII OUTPUT  @B@@@@   ELSE                               .   @E@@@@      AS
)@@G@@CALL,X9   FDGET                 . MUST BE FIELDATA    @G@@@@      CALL,XAT
)@@G@@10  FDPUT                 . OPEN INPUT AND OUTPUT ROUTINES  @B@@@@   ENDAU
)@@G@@IF                              .   @E@@@@   E$GET                      AV
)@@G@@        . PRE FETCH FIRST CHAR@F@@@@   E$SAVE                           AW
)@@G@@  . TEMP SAVE IN OUTPUT STRING@F@@@@   REPEAT                           AX
)@@G@@  . LOOP TO FIND LINE NUMBER  @E@@@@      E$LOOK                        AY
)@@G@@  . LOOK AT NEXT CHAR   @F@@@@   ESCAPE WHEN A3,GE,060,,U AND A3,LE,071,AZ
)@@G@@,U . LOOK FOR NUMBER    @F@@@@      L,U       A3,'['                . PRBA
)@@G@@ELOAD WITH FIELDATA CHAR@D@@@@      IF NONZ,IN,EASC                 . ISBB
)@@G@@ IMAGE ASCII@H@@@@         L,U       A3,0133            . YES - GET CORRBC
)@@G@@ESPONDING ASCII CODE    @B@@@@      ENDIF                           .   BD
)@@G@@@E@@@@      E$PUT                           . PUT IN OUTPUT STRING@I@@@@BE
)@@G@@      L,U       A5,6                  . SET UP TO MAKE SURE WE OUTPUT FUBF
)@@G@@LL WORD     @F@@@@      REPEAT JGD,A5                   . LOOP FOR WORD BG
)@@G@@OF FD CHARS @D@@@@         E$GET                        . FETCH CHAR    BH
)@@G@@@E@@@@         E$PUT                        . PUT IN OUTPUT STRING@B@@@@BI
)@@G@@      ENDREP                          .   @B@@@@   OTHERWISE            BJ
)@@G@@              .   @G@@@@      E$OUT                           . OUTPUT SBK
)@@G@@AVED SHAR INTO STRING   @E@@@@      E$SAVE                          . SABL
)@@G@@VE CURRENT CHAR   @F@@@@      E$NEXT                          . SHIFT INBM
)@@G@@ NEXT INPUT CHAR  @B@@@@   ENDREP                             .   @F@@@@BN
)@@G@@   L         X9,SAVEX9                . RESTORE FIELD PKT ADDR    @F@@@@BO
)@@G@@   L         X10,SAVEX10              . RESTORE MASTER PKT ADDR   @B@@@@BP
)@@G@@ ENDBEG                               .   @[@@@@/.    @[@@@@   .  @[@@@@BQ
)@@G@@   .  @[@@@@   .  @D@@@@   . THIS ROUTINE IS RESPONSIBLE FOR DOING THE ABR
)@@G@@CTUAL @D@@@@   .         SDFO OR PRINT$ OUTPUT OF WHAT EVER IMAGE @B@@@@BS
)@@G@@   .         RESIDES IN THE OUTPUT BUFFER.@[@@@@   .  @[@@@@   .  @[@@@@BT
)@@G@@   .  @[@@@@   .  @[@@@@$(0). @F@@@@RECMODE*  +         0               BU
)@@G@@  . CHARACTER MODE OF LAST REC@F@@@@CMODE     +         0               BV
)@@G@@  . CHARACTER MODE OF THIS REC@F@@@@SWITCH    +         0420,0,0,0      BW
)@@G@@  . SWITCH IMAGE CONTROL WD   @D@@@@SAVER     +         0D              BX
)@@G@@  . SAVE AREA     @[@@@@   .  @[@@@@   .  @[@@@@   .  @[@@@@$(1). @]@@@@BY
)@@G@@WORDT*.     @B@@@@ BEGIN SUBROUTINE                     .   @D@@@@   SSLBZ
)@@G@@       A1,18                    . GET CHAR MODE @E@@@@   S         A1,CMCA
)@@G@@ODE                 . SET FOR THIS RECORD @E@@@@   L         A3,AIPADR  CB
)@@G@@              . GET ISDFI PKT ADDR  @E@@@@   L,T1      A0,16,A3         CC
)@@G@@        . GET LENGTH OF IMAGE @C@@@@   CALL      WORDOUT                CD
)@@G@@  . OUTPUT  @B@@@@ ENDBEG                               .   @[@@@@ .    CE
)@@G@@@[@@@@ .    @[@@@@ .    @[@@@@$(1). @]@@@@WORDS*.     @B@@@@ BEGIN SUBROCF
)@@G@@UTINE                     .   @E@@@@   SZ        CMODE                  CG
)@@G@@  . CORR CARDS ALWAYS FD@G@@@@   E$WRDN                             . GECH
)@@G@@T WORD LENGTH OF IMAGE IN A0  @E@@@@   L,H2      A2,EDTPKT              CI
)@@G@@  . GET IMAPGE LOCATION @C@@@@   CALL      WORDOUT                  . OUCJ
)@@G@@TPUT  @B@@@@ ENDBEG                               .   @[@@@@/.    @[@@@@CK
)@@G@@ .    @[@@@@ .    @ @@@@ . THIS IS THE REAL THING!    @[@@@@ .    @[@@@@CL
)@@G@@ .    @[@@@@$(1). @]@@@@WORDOUT*.   @B@@@@ BEGIN SUBROUTINE             CM
)@@G@@        .   @F@@@@   L         A1,CMODE                 . GET CURRENT CHCN
)@@G@@AR MODE     @F@@@@   IF A1,NE,RECMODE THEN              . IS IT SAME AS CO
)@@G@@LAST OUT    @G@@@@      S         A1,RECMODE            . NO - UPDATE LACP
)@@G@@ST OUTPUT MOCE    @D@@@@      IF NONZ,IN,SDFOPKT THEN         . DO WE SDCQ
)@@G@@FO?   @G@@@@         A         A1,SWITCH          . YES - NEED SWITCH IMCR
)@@G@@AGE FIRST   @F@@@@         S         A1,SDFCW           . INTO SDFO CONTCS
)@@G@@ROL WORD    @E@@@@         S         A0,SAVER           . SAVE IMPORTANTCT
)@@G@@ REGS @B@@@@         S         A2,SAVER+1         .   @D@@@@         L,UCU
)@@G@@       A0,SDFOPKT         . GET PKT ADDR  @D@[@@         CASENTRY CALLINCV
)@@G@@G SDFO        . OUTPUT SWITCH @D@]@[         CASENTRY CALLING SDFO$     CW
)@@G@@  . OUTPUT SWITCH @D@#@]         CASENTRY CALLING SDFO        . OUTPUT SCX
)@@G@@WITCH @D@@@#         CASENTRY CALLING SDFO$       . OUTPUT SWITCH @D@@@@CY
)@@G@@         CASE 0                       . ERROR RETURN  @F@@@@            CZ
)@@G@@L,U       A1,SDFOPKT      . GET PKT ADDR IN ERROR     @D@@@@            DA
)@@G@@L,U       A0,SDFOERR      . SET ERROR CODE@F@@@@            CALL      ERDB
)@@G@@ROR           . PROCESS ERROR AND TERM    @D@@@@         CASE 1         DC
)@@G@@              . NORMAL RETURN @D@@@@            L         A0,SAVER      DD
)@@G@@  . RESTORE REGS  @B@@@@            L         A2,SAVER+1      .   @B@@@@DE
)@@G@@         ENDCASE                      .   @B@@@@      ENDIF             DF
)@@G@@              .   @B@@@@   ENDIF                              .   @F@@@@DG
)@@G@@   SZ        SDFCW                    . NO- CLEAR CONTROL WORD    @G@@@@DH
)@@G@@   S,T1      A0,SDFCW                 . PUT LENGTH INTO CONTROL WORD    DI
)@@G@@@F@@@@   S,H2      A2,SDFOPKT+8             . AND IMAGE LOCATION IN PKT DJ
)@@G@@@D@@@@   IF NONZ,IN,SDFOPKT THEN            . DO WE OUTPUT? @D@@@@      DK
)@@G@@L,U       A0,SDFOPKT            . YES - DO SDFO @D@[@@      CASENTRY CALDL
)@@G@@LING SDFO           . OUTPUT REC    @D@]@[      CASENTRY CALLING SDFO$  DM
)@@G@@        . OUTPUT REC    @D@#@]      CASENTRY CALLING SDFO           . OUDN
)@@G@@TPUT REC    @D@@@#      CASENTRY CALLING SDFO$          . OUTPUT REC    DO
)@@G@@@D@@@@      CASE 0                          . ERROR RETURN  @F@@@@      DP
)@@G@@   L,U       A1,SDFOPKT         . GET PKT ADDR IN ERROR     @D@@@@      DQ
)@@G@@   L,U       A0,SDFOERR         . SET ERROR CODE@F@@@@         CALL     DR
)@@G@@ ERROR              . PROCESS ERROR AND TERM    @D@@@@      CASE 1      DS
)@@G@@                    . NORMAL RETURN @G@@@@         L         A0,CCNT    DT
)@@G@@        . INCREMENT OUTPUT CARD COUNT     @C@@@@         A,U       A0,1 DU
)@@G@@              . INC     @C@@@@         S         A0,CCNT            . UPDV
)@@G@@DATE  @B@@@@      ENDCASE                         .   @B@@@@   ENDIF    DW
)@@G@@                          .   @D@@@@   L         A0,INFOBITS            DX
)@@G@@  . DO WE PRINT$  @D@@@@   IF A0,EVENP,OPT('N') THEN          . IS N OPTDY
)@@G@@ ON?  @G@@@@      L,T1      A0,SDFCW              . NO CREATE PRINT CONTDZ
)@@G@@ROL WRD     @E@@@@      IF ZERO,IN,RECMODE THEN         . IS THIS ASCII EA
)@@G@@OR FD?@E@@@@         IF A0,GT,22,,U THEN          . SEE IF LEGAL PRINT$ EB
)@@G@@@F@@@@            L,U       A0,22           .  TUNCATE REC FOR PRINT$   EC
)@@G@@@B@@@@         ENDIF                        .   @D@@@@      ELSE        ED
)@@G@@                    . MUST BE ASCII @E@@@@         IF A0,GT,33,,U THEN  EE
)@@G@@        . SEE IF LEGAL APRINT$@E@@@@            L,U       A0,33         EF
)@@G@@  . TUNC REC FOR APRINT$@B@@@@         ENDIF                        .   EG
)@@G@@@B@@@@      ENDIF                           .   @D@@@@      LSSL      A0EH
)@@G@@,12                 . SHIFT LENGTH  @C@@@@      LXI,U     A0,1          EI
)@@G@@        . SKIP 1  @E@@@@      LSSL      A0,6                  . SHIFT INEJ
)@@G@@TO PLACE    @E@@@@      LXM,H2    A0,SDFOPKT+8          . PUT IN LOCATIOEK
)@@G@@N     @D@@@@      IF ZERO,IN,RECMODE THEN         . ASCII OR FD?  @B@@@@EL
)@@G@@         ER        PRINT$             . FD@B@@@@      ELSE              EM
)@@G@@              .   @C@@@@         ER        APRINT$            . ASCII   EN
)@@G@@@B@@@@      ENDIF                           .   @B@@@@   ENDIF          EO
)@@G@@                    .   @B@@@@ ENDBEG                               .   EP
)@@G@@@B@@@@          END                         .   ___@@@@[@@@@   .  @[@@@@EQ
)@@G@@$(0). @F@@@@RECMODE*  + *[S@@@*SDFF*@[@@@[ .    @[@@@[ .    @[@@@[ .    ER
)@@G@@@G@@@[ . THIS IS A UTILITY ELEMENT CONTAINING ROUTINES THAT MAY BE CALLEES
)@@G@@D     @G@@@[ .     BY MORE THAN ONE SEQMENT.  THIS WAY WE KEEP THE AMOUNET
)@@G@@T OF CODE   @G@@@[ .     THAT IS PLACED BY THE MAPPER IN THE MAIN SEGMENEU
)@@G@@T TO A MAINIMUM.  @[@@@[ .    @[@@@[ .    @[@@@[ .    @B@@@[          AXEV
)@@G@@R$                        .   @B@@@[          STRUC$,'OLD PROGRAM'      EW
)@@G@@   .  @B@@@[          DOWNDEF                     .   @B@@@[          EDEX
)@@G@@$PROCS                    .   @B@@@[          RESUME                    EY
)@@G@@  .   @[@@@[ .    @[@@@[ .    @[@@@[ .    @[@@@[/.    @[@@@[ .    @[@@@[EZ
)@@G@@ .    @#@@@[ . OPENSDFO -     @E@@@[ .      GENERAL UTILITY ROUTINE TO FFA
)@@G@@ACILITATE INITIALIZING  @A@@@[ .      SDFO FILES OR ELEMENTS.     @#@@@[FB
)@@G@@ .      ON ENTRY -@C@@@[ .           A0 = 0 => SDF FILE TO BE OPENED    FC
)@@G@@@D@@@[ .              > 0 => OPEN SDF PROGRAM FILE ELEMENT  @B@@@[ .    FD
)@@G@@       A1 = 0 => FILENAME IN PKT    @B@@@[ .              <>0 => FILENAMFE
)@@G@@E IN A1,A2  @C@@@[ .           A3-A6  => ELEMENT - VERSION NAMES  @[@@@[FF
)@@G@@ .    @[@@@[ .    @[@@@[$(1). @]@@@[OPENSDFO*.  @B@@@[ BEGIN SUBROUTINE FG
)@@G@@                    .   @E@@@[   IF A1,IS,NONZ THEN                 . ISFH
)@@G@@ THERE A FILENAME?@E@@@[      DS        A1,SDFOPKT            . YES - PUFI
)@@G@@T IN PKT    @B@@@[   ENDIF                              .   @G@@@[   IF FJ
)@@G@@A0,IS,ZERO THEN                 . IS THIS FILE ELEMENT OR FILE?   @C@@@[FK
)@@G@@      L,U       A1,0                  . FILE    @E@@@[   ELSE           FL
)@@G@@                    . PROGRAM FILE ELEMENT@G@@@[      DS        A3,PFSPKFM
)@@G@@T3+2          . STORE ELEMENT NAME IN PFPPKT    @E@@@[      DS        A5FN
)@@G@@,PFSPKT3+6          . STORE VERSION NAME  @F@@@[      L,U       A0,SDFOPFO
)@@G@@KT            . NEED ADD OF FILE NAME     @E@@@[      ER        PFWL$   FP
)@@G@@              . GET NEXT WRITE ADDR @E@@@[      IF A2,IS,NONZ THEN      FQ
)@@G@@        . MAYBE PFP ERROR     @F@@@[         L,U       A1,SDFOPKT       FR
)@@G@@  . GET INT FILE NAME IN ERROR@F@@@[         L,U       A0,PFPERR        FS
)@@G@@  . PRINT PFP ERROR AND TERM  @G@@@[         CALL      ERROR            FT
)@@G@@  . THIS ROUTINE DOES THE DIRTY WORK@B@@@[      ELSE                    FU
)@@G@@        .   @F@@@[         S         A1,PFSPKT3+10      . PUT NEXT WRITEFV
)@@G@@ IN PFP PKT @B@@@[      ENDIF                           .   @B@@@[   ENDFW
)@@G@@IF                              .   @E@@@[   S         A1,SDFOPKT+5     FX
)@@G@@        . PUT LOC IN SDFO PKT @D@@@[   L,U       A0,SDFOPKT             FY
)@@G@@  . GET LOC OF PKT@E@#@[   CALL      SDFOO                    . OPEN SDFFZ
)@@G@@O COMPLEX   @E@^@#   CALL      SDFOO$                   . OPEN SDFO COMPGA
)@@G@@LEX   @E@ @^   CALL      SDFOO                    . OPEN SDFO COMPLEX   GB
)@@G@@@E@@@    CALL      SDFOO$                   . OPEN SDFO COMPLEX   @F@@@[GC
)@@G@@   L,U       A0,('*SDFF*')            . OUTPUT *SDFF* LABEL IMAGE @F@@@[GD
)@@G@@   S,H2      A0,SDFOPKT+8             . THIS IS IMAGE AREA ADDR   @H@@@[GE
)@@G@@   L,U       A0,0500130               . CREATE SYMBOLIC ELEMENT CONTR WRGF
)@@G@@D     @D@@@[   LSSL      A0,18                    . ZERO FILL     @G@@@[GG
)@@G@@   S         A0,SDFOPKT+10            . INTO CONTROL WRD LOC OF PKT     GH
)@@G@@@E@@@[   L,U       A0,SDFOPKT               . GET ADDR OF PKT     @D@#@[GI
)@@G@@   CASENTRY CALLING SDFO              . OUTPUT LABEL  @D@^@#   CASENTRY GJ
)@@G@@CALLING SDFO$             . OUTPUT LABEL  @D@ @^   CASENTRY CALLING SDFOGK
)@@G@@              . OUTPUT LABEL  @D@@@    CASENTRY CALLING SDFO$           GL
)@@G@@  . OUTPUT LABEL  @D@@@[   CASE 0                             . ERROR REGM
)@@G@@TURN  @F@@@[      L,U       A1,SDFOPKT            . GET INT FILE NAME INGN
)@@G@@ ERROR@D@@@[      L,U       A0,SDFOERR            . GET ERROR CODE@D@@@[GO
)@@G@@      CALL      ERROR                 . PRINT AND TERM@D@@@[   CASE 1   GP
)@@G@@                          . NORMAL RETURN @B@@@[   ENDCASE              GQ
)@@G@@              .   @G@@@[   SZ        RECMODE                  . INIT CHAGR
)@@G@@R MODE INDICATOR TO FD  @B@@@[ ENDBEG                               .   GS
)@@G@@@[@@@[ .    @[@@@[ .    @#@@@[ . CLOSESDFO -    @E@@@[ .      GENERAL ROGT
)@@G@@UTINE TO CLOSE A SDF FILE OR ELEMENT.     @#@@@[ .      ON ENTRY -@A@@@[GU
)@@G@@ .           A0 = 0 => DATA FILE    @C@@@[ .              > 0 => PROGRAMGV
)@@G@@ FILE ELEMENT     @[@@@[ .    @[@@@[ .    @[@@@[ .    @[@@@[$(0). @F@@@[GW
)@@G@@FILETYPE  +         0                 . SAVE FOR FILE TYPE FLAG   @[@@@[GX
)@@G@@ .    @[@@@[ .    @[@@@[$(1). @]@@@[CLOSESDFO*. @B@@@[ BEGIN SUBROUTINE GY
)@@G@@                    .   @E@@@[   S         A0,FILETYPE              . SAGZ
)@@G@@VE INPUT FILE FLAG@D@@@[   L,U       A0,SDFOPKT               . CLOSE SDHA
)@@G@@FO    @C@#@[   CASENTRY CALLING SDFOC             . TRY IT  @C@^@#   CASHB
)@@G@@ENTRY CALLING SDFOC$            . TRY IT  @C@ @^   CASENTRY CALLING SDFOHC
)@@G@@C             . TRY IT  @C@@@    CASENTRY CALLING SDFOC$            . TRHD
)@@G@@Y IT  @D@@@[   CASE 0                             . ERROR RETURN  @F@@@[HE
)@@G@@      L,U       A1,SDFOPKT            . GET ADDR OF IO PKT IN ERR @D@@@[HF
)@@G@@      L,U       A0,SDFOERR            . GET ERROR CODE@E@@@[      CALL  HG
)@@G@@    ERROR                 . PRINT ERROR AND TERM@D@@@[   CASE 1         HH
)@@G@@                    . NORMAL RETURN @F@@@[      L         A1,SDFOPKT+5  HI
)@@G@@        . GET LAST SECTOR WRITTEN   @B@@@[   ENDCASE                    HJ
)@@G@@        .   @F@@@[   IF NONZ,IN,FILETYPE THEN           . IF ELEMENT - CHK
)@@G@@ONTINUE     @F@@@]      IF NONZ,IN,RECMODE THEN         . SET ELT MODE THL
)@@G@@O ASCII     @F@@@]          L,U       A0,020            . PUT HEADER MASHM
)@@G@@K IN A0     @F@@@]          S,T1      A0,PFSPKT3+5      . ..AND THEN INTHN
)@@G@@O PACKET    @]@@@]      ELSE  @G@@@]          SZ,T1     PFSPKT3+5       HO
)@@G@@  . ELSE SET ELT MODE TO FIELDATA   @]@@@]      ENDIF @E@@@[      A,U   HP
)@@G@@    A1,1                  . LAST SECTOR + 1     @F@@@[      ANU       A1HQ
)@@G@@,PFSPKT3+10         . MINUS STARTING SECTOR     @F@@@[      S,H2      A2HR
)@@G@@,PFSPKT3+9          . IS SECTOR LENGTH OF TEXT  @D@@@[      L         A3HS
)@@G@@,(5,0,1)            . GET CYCLE WORD@E@@@[      S         A3,PFSPKT3+8  HT
)@@G@@        . AND STORE IN PKT    @I@@@[      LN,U      A0,PFSPKT3          HU
)@@G@@  . GET ADDR OF PKT (NEG TO UPDATE NEXT WRIT    @H@@@[      ER        PFHV
)@@G@@I$                  . INSERT IN TOC AND UPDATE LAST WRITE   @B@@@[   ENDHW
)@@G@@IF                              .   @B@@@[ ENDBEG                       HX
)@@G@@        .   @[@@@[/.    @[@@@[ .    @[@@@[ .    @#@@@[ . OPNSTARCARD -  HY
)@@G@@@F@@@[ .     THIS ROUTINE IS PROVIDED TO DO STAR CARD INTIALIZATION.  ITHZ
)@@G@@@G@@@[ .     ALSO CHECK OPTIONS DOES ANY NECESSARY INIT OF OUTPUT REQUIRIA
)@@G@@ED    @^@@@[ .     AT THIS TIME.    @[@@@[ .    @[@@@[ .    @[@@@[ .    IB
)@@G@@@[@@@[$(0). @E@@@[DUSAVE    +         0                 . GENERAL SAVE LIC
)@@G@@OC    @H@@@[NODELOC   +         0                 . SAVE FOR ADDR OF NODID
)@@G@@E RET FROM DUMP   @[@@@[ .    @[@@@[ .    @[@@@[ .    @[@@@[$(1). @#@@@[IE
)@@G@@OPNSTARCARD*.     @B@@@[ BEGIN SUBROUTINE                     .   @E@@@[IF
)@@G@@   S         A1,NODELOC               . SAVE LOC OF NODE    @F@@@[   S  IG
)@@G@@       A1,X9                    . WILL TRY TO USE FROM HERE @G@@@[   L  IH
)@@G@@       A3,EDTPKT                . SAVE CURRENT EDIT BUFFER ADDR   @F@@@[II
)@@G@@   S         A3,DUSAVE                . WANT TO USE OTHER BUFFER  @G@@@[IJ
)@@G@@   L,U       A2,CARDBUF               . THE OTHER BUFFER IS CARDBUF     IK
)@@G@@@E@@@[   S,H2      A2,EDTPKT                . PUT IN EDIT$ PKT    @F@@@[IL
)@@G@@   L,U       A1,10                    . GET LENGTH OF CARDBUF     @E@@@[IM
)@@G@@   S,S3      A1,EDTPKT                . PUT IN EDIT PKT     @E@@@[   E$DIN
)@@G@@IT     EDTPKT                   . OPEN EDIT SEQUENCE  @G@@@[   E$CHAR   IO
)@@G@@ '*'                      . PREFIX WITH STAR (CREATE * CARD)@G@@@[   IF IP
)@@G@@NONZ,IN,0,X9                    . IS THERE REALLY AN ELT NAME?    @F@@@[IQ
)@@G@@      E$FD2     0,X9                  . PUT ELEMENT NAME IN STRING@E@@@[IR
)@@G@@      L         A2,('      ')         . GET WORD OF BLANKS  @F@@@[      IS
)@@G@@IF A2,NE,2,X9 THEN              . IS THERE A VERSION NAME?  @E@@@[      IT
)@@G@@   E$CHAR    '/'                . YES PUT IN SEPARATOR@E@@@[         E$FIU
)@@G@@D2     2,X9               . PUT IN VERSION NAME @B@@@[      ENDIF       IV
)@@G@@                    .   @B@@@[   ENDIF                              .   IW
)@@G@@@G@@@[   E$CHAR    '&'                      . BPUT IN MESSAGE STRING TERIX
)@@G@@M     @E@@@[   E$DITX                             . LEAVE EDIT MODE     IY
)@@G@@@F@@@[   L         A2,DUSAVE                . RESTORE ORIG BUFFER ADDR  IZ
)@@G@@@D@@@[   S         A2,EDTPKT                . IN EDIT$ PKT  @D@@@[   L  JA
)@@G@@       A7,INFOBITS              . GET OPTIONS   @E@@@[   IF A7,ODDP,OPT(JB
)@@G@@'P') THEN           . IS P-OPT SPECIFIED? @G@@@[      SZ        A1      JC
)@@G@@              . YES - OPEN SDFO JUST IN CASE    @F@@@[      S         X1JD
)@@G@@1,A0                . FLAG FOR PROG FILE ELEMENT@F@@@[      DL        A3JE
)@@G@@,,X9                . GET ELEMENT NAME FROM NODE@H@@@[      DL        A5JF
)@@G@@,2,X9               . AND VERSION NAME TO UPDATE PFP PKT    @D@@@[      JG
)@@G@@CALL      OPENSDFO              . OPEN SDFO     @B@@@[   ENDIF          JH
)@@G@@                    .   @E@@@[   IF A7,ODDP,OPT('E') THEN           . WAJI
)@@G@@S E-OPT GIVEN     @E@@@[      E$DIT     EDTPKT                . OPEN EDIJJ
)@@G@@T SEQUENCE  @G@@@[      E$MSG     CARDBUF               . GET * CARD FORJK
)@@G@@ POSSIBLE OUTPUT  @F@@@[      IF A7,ODDP,OPT('P') THEN        . YES - ALJL
)@@G@@ONG WITH P-OPT?   @E@@@[         IF A7,EVENP,OPT('N') THEN    . WAS PRINJM
)@@G@@T$ WANTED   @F@@@[            E$PRT     0,1             . YES - PRINT STJN
)@@G@@AR CARD     @B@@@[         ENDIF                        .   @B@@@[      JO
)@@G@@ELSE                            .   @G@@@[         CALL      WORDS      JP
)@@G@@        . NO P-OPT FORCE NORMAL OUTPUT    @B@@@[      ENDIF             JQ
)@@G@@              .   @G@@@[      L,U       A1,' '                . RESET '*JR
)@@G@@' TO INDICATE ALREADY   @E@@@[      S,S1      A1,CARDBUF            .   JS
)@@G@@HAS BEEN OUTPUT   @B@@@[   ENDIF                              .   @B@@@[JT
)@@G@@ ENDBEG                               .   @[@@@[/.    @[@@@[ .    @[@@@[JU
)@@G@@ .    @#@@@[ . STARCARD -     @F@@@[ .      GENERAL SUBROUTINE TO CHECK JV
)@@G@@THE STATUS OF CARDBUF TO SEE  @F@@@[ .      IF A *ELNAME CARD IS STILL WJW
)@@G@@AITING TO BE OUTPUT.  IF SO,  @G@@@[ .      THE APPROPRIATE ACTION IS TAJX
)@@G@@KEN.  THIS ROUTINE IS ALSO USED     @ @@@[ .      BY OUTPUT OF SCAN.    JY
)@@G@@@[@@@[ .    @[@@@[ .    @[@@@[ .    @[@@@[$(1). @]@@@[STARCARD*.  @#@@@[JZ
)@@G@@ BEGIN SUBROUTINE @E@@@[   E$DIT     EDTPKT                   . OPEN EDIKA
)@@G@@T$ SEQUENCE @E@@@[   L         A0,INFOBITS              . GET INPUT OPTIKB
)@@G@@ONS   @E@@@[   L,U       A1,' '                   . GET BLANK FOR TEST  KC
)@@G@@@F@@@[   IF A1,NE,CARDBUF,,S1 THEN          . HAS THIS CARD BEEN OUTPUT?KD
)@@G@@@F@@@[      IF A0,ODDP,OPT('P') THEN        . DO WE HAVE THE P-OPT?     KE
)@@G@@@E@@@[         IF A0,EVENP,OPT('N') THEN    . HOW 'BOUT N-OPT?    @F@@@[KF
)@@G@@            E$MSG     CARDBUF         . NO - JUST PRINT$ IMAGE    @F@@@[KG
)@@G@@            E$PRT     0,1             . PRINT AND CLEAR BUFFER    @B@@@[KH
)@@G@@         ENDIF                        .   @C@@@[      ELSE              KI
)@@G@@              . NO P-OPT@F@@@[         E$MSG     CARDBUF            . USKJ
)@@G@@E NORMAL OUTPUT ROUTINE @D@@@[         CALL      WORDS              . OUKK
)@@G@@TPUT IMAGE  @B@@@[      ENDIF                           .   @F@@@[      KL
)@@G@@L,U       A1,' '                . ZAP BUFFER TO SHOW OUTPUT @F@@@[      KM
)@@G@@S,S1      A1,CARDBUF            . BY BLANKING FIRST CHAR    @B@@@[   ENDKN
)@@G@@IF                              .   @E@@@[   E$DITX                     KO
)@@G@@        . LEAVE EDIT MODE     @B@@@[ ENDBEG                             KP
)@@G@@  .   @[@@@[ .    @[@@@[ .    @[@@@[/.    @[@@@[ .    @[@@@[ .    @]@@@[KQ
)@@G@@ . CONVERT -@G@@@[.         THIS SUBROUTINE IS USED TO CONVERT UP TO A SKR
)@@G@@IX DIGIT FIELDATA @E@@@[ .        NUMBER INTO BINARY. ROUTINE USES REGS KS
)@@G@@A0->A4 .    @F@@@[ .        ON ENTRY A0 CONTAINS POINTER TO FD WORD, 6 DKT
)@@G@@IGIT MAX    @A@@@[ .        ON EXIT A3 CONTAINS RESULT@[@@@[ .    @[@@@[KU
)@@G@@ .    @[@@@[ .    @[@@@[$(1). @]@@@[CONVERT*.   @B@@@[ BEGIN SUBROUTINE,KV
)@@G@@NOSAVE              .   @F@@@[   L         A1,,A0                   . GEKW
)@@G@@T FD WORD TO CONVERT    @F@@@[   L,U       A0,6                     . NOKX
)@@G@@ MORE THAN 6 DIGITS     @E@@@[   DSL       A2,72                    . CLKY
)@@G@@EAR A2 AND A3     @E@@@[   REPEAT JGD,A0                      . LOOP FORKZ
)@@G@@ DIGITS     @E@@@[      LDSC      A1,6                  . SHIFT IN FIRSTLA
)@@G@@ DIGIT@F@@@[   ESCAPE WHEN A2,GE,072,,U OR A2,LT,060,,U . MAKE SURE IT'SLB
)@@G@@ A NUM@B@@@[   OTHERWISE                          .   @F@@@[      MI,U  LC
)@@G@@    A3,10                 . THIS WAS A DECIMAL NUMBER @F@@@[      AND,U LD
)@@G@@    A2,017                . GET BIN VALUE THIS DIGIT  @D@@@[      A     LE
)@@G@@    A3,A4                 . ADD IT IN     @F@@@[      SZ        A2      LF
)@@G@@              . CLEAR TO GET NEXT CHAR    @C@@@[   ENDREP               LG
)@@G@@              . LOOP    @B@@@[ ENDBEG                               .   LH
)@@G@@@[@@@[/.    @[@@@[ .    @[@@@[ .    @E@@@[ . THESE ROUTINES TEST AND SETLI
)@@G@@ THE PSR FOR QUARTER WORD OR  @C@@@[ .        THIRD WORD SENSITIVITY, RELJ
)@@G@@SPECTIVELY. @[@@@[ .    @[@@@[ .    @[@@@[ .    @[@@@[$(0). @G@@@[PSRTESLK
)@@G@@T   +         1,0,0             . TO DETERMINE QUARTER OR THIRD   @D@@@[LL
)@@G@@PSRSET    +         0,0400001         . SET TO QUATER @C@@@[PSRSAVE   + LM
)@@G@@        0D                . REG SAVE@[@@@[ .    @[@@@[ .    @[@@@[ .    LN
)@@G@@@[@@@[$(1). @]@@@[ASPSR*.     @G@@@[ BEGIN SUBROUTINE,NOSAVE            LO
)@@G@@  . SET TO QUARTER WORD ROUTINE     @D@@@[   IF NONZ,IN,PSRTEST,,Q1 THENLP
)@@G@@        . WHAT ARE WE?  @D@@@[      DS        A0,PSRSAVE            . SALQ
)@@G@@VE REGS     @F@@@[      L         A0,PSRSET             . GET TO SET TO LR
)@@G@@QUARTER WORD@C@@@[      ER        PSR$                  . SET PSR @D@@@[LS
)@@G@@      DL        A0,PSRSAVE            . RESTORE REGS  @B@@@[   ENDIF    LT
)@@G@@                          .   @B@@@[ ENDBEG                             LU
)@@G@@  .   @[@@@[ .    @[@@@[ .    @[@@@[ .    @]@@@[FDPSR*.     @F@@@[ BEGINLV
)@@G@@ SUBROUTINE,NOSAVE              . SET TO THIRD WORD ROUTINE @D@@@[   IF LW
)@@G@@ZERO,IN,PSRTEST,,T1 THEN        . WHAT ARE WE?  @D@@@[      DS        A0LX
)@@G@@,PSRSAVE            . SAVE REGS     @E@@@[      L,S6      A0,PSRSET     LY
)@@G@@        . SET TO CLEAR BIT    @B@@@[      ER        PSR$                LZ
)@@G@@  .   @D@@@[      DL        A0,PSRSAVE            . RESTORE REGS  @B@@@[MA
)@@G@@   ENDIF                              .   @B@@@[ ENDBEG                 MB
)@@G@@              .   @B@@@[ END                                  .   ___@@@MC
)@@G@@*[S@@@*SDFF*@G@@@@DEBUG   EQU     0                     . PRINT$ CSF ANDMD
)@@G@@ FITEM$ IMAGES    @E@@@@GENUSE  EQU     1                     . GENERATEME
)@@G@@ @USE NAMES @[@@@@ .    @F@@@@ .   *************************************MF
)@@G@@*******************     @F@@@@ .   *                                    MG
)@@G@@                  *     @F@@@@ .   *                  COPYRIGHT 1975    MH
)@@G@@                  *     @F@@@@ .   *      COMPUTER SCIENCE CENTER, UNIV MI
)@@G@@OF MARYLAND       *     @F@@@@ .   *           COLLEGE PARK, MARYLAND, 2MJ
)@@G@@0742              *     @F@@@@ .   *                                    MK
)@@G@@                  *     @F@@@@ .   *************************************ML
)@@G@@*******************     @[@@@@ .    @D@@@@ . IMPLEMENTED BY BEN CRANSTONMM
)@@G@@ UOM*CSC/YFNSS.SBOCF    @[@@@@ .    @[@@@@ .    @G@@@@ . LOCATION COUNTEMN
)@@G@@R CONTROL DISCONTINUED BECAUSE ASSIGN CALLS FREE.     @[@@@@ .    @[@@@@MO
)@@G@@ .    @B@@@@        SAXR$                         .   @B@@@@        STRUMP
)@@G@@C$  2                     .   @[@@@@ .    @G@@@@ . THIS SUBROUTINE WAS WMQ
)@@G@@RITTEN TO PROVIDE A MINIMUM OVERHEAD ASSIGN     @G@@@@ . OF A FILE.  IF MR
)@@G@@THE FILE IS ALREADY ASSIGNED AND THE 12 CHARACTER     @G@@@@ . FILENAME MS
)@@G@@IS UNIQUE, NO CSF$ ARE DONE.  IF THE FILE IS ASSIGNED, BUT  @G@@@@ . THEMT
)@@G@@ NAME IS NOT UNIQUE, ONLY ONE CSF$ WILL BE DONE, AN @USE OF AN    @F@@@@MU
)@@G@@ . INTERNAL NAME TO THE FILE. IF THE FILE CAN BE ASSIGNED, AND THE@D@@@@MV
)@@G@@ . 12 CHARACTER NAME IS UNIQUE, NO USE WILL BE DONE.  @[@@@@ .    @G@@@@MW
)@@G@@ . THIS SUBROUTINE RUNS FROM A CORE PACKET WHICH DESCRIBES THE NAME     MX
)@@G@@@G@@@@ . OF THE FILE TO BE ASSIGNED.  THE FORMAT OF THIS PACKET IS IDENTMY
)@@G@@ICAL  @H@@@@ . TO THE ELT$ PACKET OF INFOR$.  THE ELT$ PACKET MAY BE, INMZ
)@@G@@ FACT, PASSED     @D@@@@ . TO THIS ROUTINE.  THE FORMAT OF THE PACKET ISNA
)@@G@@:     @[@@@@ .    @H@@@@ .             ---------------------------------NB
)@@G@@----------------------------  @H@@@@ .  ELT$       :  FQL    :  FNL    :NC
)@@G@@  FCL    :  RKL    :  WKL    :   IQF   :  @H@@@@ .             ---------ND
)@@G@@----------------------------------------------------  @H@@@@ . ELT$+1   NE
)@@G@@   :                    NOT CURRENTLY USED                     :  @H@@@@NF
)@@G@@ .             ---------------------------------------------------------NG
)@@G@@----  @H@@@@ . ELT$+2      :                         QUALIFIER          NH
)@@G@@               :  @H@@@@ .             ---------------------------------NI
)@@G@@----------------------------  @H@@@@ .             :                    NJ
)@@G@@     .........                         :  @H@@@@ .             ---------NK
)@@G@@----------------------------------------------------  @H@@@@ . ELT$+4   NL
)@@G@@   :                         FILE NAME                         :  @H@@@@NM
)@@G@@ .             ---------------------------------------------------------NN
)@@G@@----  @H@@@@ .             :                         .........          NO
)@@G@@               :  @H@@@@ .             ---------------------------------NP
)@@G@@----------------------------  @H@@@@ . ELT$+6      :                    NQ
)@@G@@    FILE CYCLE                         :  @H@@@@ .             ---------NR
)@@G@@----------------------------------------------------  @H@@@@ . ELT$+7   NS
)@@G@@   :                         READ KEY                          :  @H@@@@NT
)@@G@@ .             ---------------------------------------------------------NU
)@@G@@----  @H@@@@ . ELT$+8      :                         WRITE KEY          NV
)@@G@@               :  @H@@@@ .             ---------------------------------NW
)@@G@@----------------------------  @[@@@@/.    @[@@@@ .    @A@@@@ .  THE FIELNX
)@@G@@DS IN THE PACKET ARE :  @[@@@@ .    @H@@@@ .    FQL   -  THESE ARE, IN INY
)@@G@@NFOR$, THE ACTUAL LENGTHS IN CHARACTERS OF THE  @H@@@@ .    FNL   -  ITENZ
)@@G@@MS DESCRIBED.  FOR THE PURPOSES OF FIASG$, HOWEVER, THEY    @H@@@@ .    OA
)@@G@@FCL   -  ARE MERELY USED AS FLAGS SIGNIFYING THAT THE DESCRIBED ITEMS   OB
)@@G@@@F@@@@ .    RKL   -  ARE PRESENT.  IF FNL IS ZERO 'TPF$' IS ASSUMED.    OC
)@@G@@@#@@@@ .    WKL   -     @[@@@@ .    @H@@@@ .    IQF   -  THIS FLAG IS SEOD
)@@G@@T IF AN IMPLIED QUALIFIER IS SPECIFIED.  ON A   @F@@@@ .             PROOE
)@@G@@CESSOR CALL THIS IS SPECIFIED BY *FILENAME.     @[@@@@ .    @F@@@@ . SEVOF
)@@G@@ERAL ADDITIONAL MODE BITS MAY BE SET IN H1 OF A0 TO CAUSE   @C@@@@ . FIAOG
)@@G@@SG$ TO MODIFY ITS BEHAVIOR.  THEY ARE :   @[@@@@ .    @G@@@@ .    01   -OH
)@@G@@  FORCES FIASG TO DO @USE ON FILE.  THIS SHOULD BE USED IF  @G@@@@ .    OI
)@@G@@        CONTROL EVER RETURNS TO THE USER, AS HE MAY DESTROY THE   @G@@@@OJ
)@@G@@ .            UNIQUENESS OF THE 12 CHARACTER FILE NAME IF IT IS USED.   OK
)@@G@@@[@@@@ .    @G@@@@ .    02   -  INFORMS FIASG$ THAT A USE NAME HAS BEEN OL
)@@G@@PASSED IN A1-A2.  @G@@@@ .            NOTE THAT THIS DOES NOT FORCE @USEOM
)@@G@@, USE BIT 1 FOR THIS.   @[@@@@ .    @C@@@@ .    04   -  OBTAIN EXCLUSIVEON
)@@G@@ USE ON THE FILE. @[@@@@ .    @C@@@@ .    10   -  REQUIRE READ PERMISSIOOO
)@@G@@N ON FILE.  @[@@@@ .    @C@@@@ .    20   -  REQUIRE WRITE PERMISSION ON OP
)@@G@@FILE. @[@@@@ .    @F@@@@ .    40   -  INFORMS FIASG$ THAT ADDITIONAL ASSOQ
)@@G@@IGN OPTIONS HAVE  @F@@@@ .            BEEN PASSED IN A3.  THESE REPLACE OR
)@@G@@THE IMPLIED 'A'   @E@@@@ .            OPTION, ONLY IF AN ASSIGN IS ACTUAOS
)@@G@@LLY DONE.   @[@@@@ .    @C@@@@ . THE CALLING SEQUENCE TO ASSIGN A FILE IOT
)@@G@@S :   @[@@@@ .    @B@@@@ .         L         A0,(BITS,PKT)     .  @F@@@@OU
)@@G@@ .         [DL       A1,INTNAME]       . IF OPTION BIT 2 IS SET   @F@@@@OV
)@@G@@ .         [L        A3,OPTIONS]       . IF OPTION BIT 040 IS SET @B@@@@OW
)@@G@@ .         LMJ       X11,FIASG$        .  @B@@@@ .         <NORMAL RETUROX
)@@G@@N>             .  @[@@@@ .    @A@@@@ . IN ALL CASES REGISTERS CONTAIN:  OY
)@@G@@@[@@@@ .    @A@@@@ . A0 - ORIGINAL A0 (BITS,PACKET)   @D@@@@ . A1A2-12 COZ
)@@G@@HARACTER NAME FILE CAN BE REFERENCED BY   @C@@@@ . A3 - CSF$ STATUS BITSPA
)@@G@@ OR ZERO IF NOT DONE    @A@@@@ . A4 - FREE CODE FOR FREE ROUTINE  @^@@@@PB
)@@G@@ . A5 - ERROR CODE:     @^@@@@ .   0 - NORMAL RETURN  @D@@@@ .   1 - REAPC
)@@G@@D  PERMISSION DESIRED BUT NOT AVAILABLE   @D@@@@ .   2 - WRITE PERMISSIOPD
)@@G@@N DESIRED BUT NOT AVAILABLE   @B@@@@ .   3 - COMBINATION OF ABOVE TWO ERPE
)@@G@@RORS  @C@@@@ .   4 - FILE COULD NOT BE ASSIGNED - SEE A3    @[@@@@/.    PF
)@@G@@@[@@@@ .    @B@@@@P       PROC                          .   @B@@@@CSF*  PG
)@@G@@  NAME                          .   @[@@@@ .    @D@@@@        ON      DEPH
)@@G@@BUG                 . DUMP CSF IMAGE@B@@@@        AH      A0,(0100,0)   PI
)@@G@@        .   @B@@@@        ER      PRINT$                .   @B@@@@      PJ
)@@G@@  ANH     A0,(0100,0)           .   @B@@@@        OFF     DEBUG         PK
)@@G@@        .   @[@@@@ .    @F@@@@        ER      CSF$                  . COPL
)@@G@@NTROL STATEMENT FORMAT  @B@@@@        END                           .   PM
)@@G@@@[@@@@ .    @B@@@@P       PROC                          .   @B@@@@FITEM*PN
)@@G@@  NAME                          .   @E@@@@        SZ      FIPKT$+6      PO
)@@G@@        . CLEAR PERMS BITS    @B@@@@        L       A0,(0377777,FIPKT$) PP
)@@G@@  .   @B@@@@        ER      FITEM$                .   @[@@@@ .    @B@@@@PQ
)@@G@@        ON      DEBUG                 .   @E@@@@        L       A0,(0107PR
)@@G@@,FIPKT$)      . DUMP FITEM$ PACKET  @B@@@@        ER      PRINT$        PS
)@@G@@        .   @B@@@@        OFF     DEBUG                 .   @[@@@@ .    PT
)@@G@@@B@@@@        END                           .   @[@@@@ .    @B@@@@P     PU
)@@G@@  PROC                          .   @B@@@@ECHAR*  NAME                  PV
)@@G@@        .   @B@@@@        DO      P(1)>0 , L,U A5,P(1,1)  . @D@@@@      PW
)@@G@@  CALL,A1 0,A1                  . COROUTINE CALL@B@@@@        END       PX
)@@G@@                    .   @[@@@@ .    @]@@@@$(2)    .   @[@@@@ .    @E@@@@PY
)@@G@@ . THE ORDER OF THE FOLLOWING DATA AREAS SHOULD *NOT* BE    @A@@@@ . ALTPZ
)@@G@@ERED.  SEE CODE FOR FIFREE.   @[@@@@ .    @D@@@@DXQUAL  RES     2       QA
)@@G@@              . QUALIFIER     @D@@@@DXFILE  RES     2                   QB
)@@G@@  . FILE NAME     @D@@@@ASG     '@ASG,-------'                . FILLED IQC
)@@G@@N     @E@@@@UINAME  RES     2                     . USER INTERNAL NAME  QD
)@@G@@@D@@@@FIPKT$* RES     14                    . FITEM$ PACKET @E@@@@FIMAG$QE
)@@G@@* RES     14                    . EDIT BUFFER FOR CSF$@[@@@@ .    @C@@@@QF
)@@G@@ . NOW DEFINE FIELDS IN THE ABOVE DATA AREAS.   @[@@@@ .    @E@@@@      QG
)@@G@@  FIDEF$  0,A2                  . ELT$ PACKET IN A2   @[@@@@/.    @[@@@@QH
)@@G@@ .    @B@@@@$(1)    LIT                           .   @[@@@@ .    @C@@@@QI
)@@G@@ . DEFINE WORDS TO TOP/TEP ON FOR COMMAND BITS. @[@@@@ .    @E@@@@WDUFORQJ
)@@G@@  +       FIUFOR,0              . USE NAME FORCED     @D@@@@WDUGIV  +   QK
)@@G@@    FIUGIV,0              . USE NAME GIVEN@F@@@@WDUPRD  +       FIUPRD,0QL
)@@G@@              . READ PERMISSION REQUIRED  @F@@@@WDUPWR  +       FIUPWR,0QM
)@@G@@              . WRITE PERMISSION REQUIRED @F@@@@WDUXCL  +       FIUXCL,0QN
)@@G@@              . EXCLUSIVE USE REQUIRED    @E@@@@WDUOPT  +       FIUOPT,0QO
)@@G@@              . USER OPTIONS PASSED @[@@@@ .    @E@@@@WDUGAF  +       FIQP
)@@G@@UGIV+FIUFOR,0       . USE GIVEN AND FORCED@[@@@@ .    @E@@@@ . THIS SUBRQQ
)@@G@@OUTINE IS USED TO EDIT (R1) CHARACTERS FROM THE @F@@@@ . WORD IN A3-A4. QR
)@@G@@IT USES A0,A1 AS CHAR POINTERS AND A5 AS A TEMP.@[@@@@ .    @B@@@@EDIT  QS
)@@G@@                                .   @B@@@@ BEGIN SUBROUTINE,NOSAVE      QT
)@@G@@        .   @B@@@@   REPEAT JGD,R1,DOWN                 .   @F@@@@      QU
)@@G@@LDSC    A3,6                    . MOVE LEFTMOST CHAR TO A4  @C@@@@      QV
)@@G@@AND,U   A4,077                  . GET IT  @D@@@@      IF A5,NE,' ',,U   QW
)@@G@@              . IF NONBLANK   @E@@@@         ECHAR                      QX
)@@G@@  . STORE CHARACTER     @B@@@@      ENDIF                           .   QY
)@@G@@@B@@@@   ENDREP                             .   @B@@@@ ENDBEG           QZ
)@@G@@                    .   @[@@@@ .    @E@@@@ . STORE COROUTINES.  INCREMENRA
)@@G@@T OF WORD POINTER IS ON S1 SO @C@@@@ . WORD COUNTER IS ALWAYS CORRECT IMRB
)@@G@@AGE LEN.    @[@@@@ .    @B@@@@STCOR                                 .   RC
)@@G@@@B@@@@ BEGIN CYCLIC,NOSAVE                  .   @E@@@@   LSSL    A5,30  RD
)@@G@@                    . MOVE CHAR TO S1     @D@@@@   A       A5,('@     ')RE
)@@G@@              . BLANK FILL    @C@@@@   S       A5,1,*A0                 RF
)@@G@@  . STORE IT@D@@@@   CALL,A1 0,A1                       . COROUTINE     RG
)@@G@@@E@@@@   S,S2    A5,0,A0                    . STORE CHARACTER     @D@@@@RH
)@@G@@   CALL,A1 0,A1                       . COROUTINE     @E@@@@   S,S3    ARI
)@@G@@5,0,A0                    . STORE CHARACTER     @D@@@@   CALL,A1 0,A1   RJ
)@@G@@                    . COROUTINE     @E@@@@   S,S4    A5,0,A0            RK
)@@G@@        . STORE CHARACTER     @D@@@@   CALL,A1 0,A1                     RL
)@@G@@  . COROUTINE     @E@@@@   S,S5    A5,0,A0                    . STORE CHRM
)@@G@@ARACTER     @D@@@@   CALL,A1 0,A1                       . COROUTINE     RN
)@@G@@@E@@@@   S,S6    A5,0,A0                    . STORE CHARACTER     @D@@@@RO
)@@G@@   CALL,A1 0,A1                       . COROUTINE     @B@@@@ ENDBEG     RP
)@@G@@                          .   @[@@@@ .    @B@@@@TPFNAM  'TPF$   '       RQ
)@@G@@              .   @D@@@@FIAIND  +       1,FIMAG$-1            . WORD POIRR
)@@G@@NTER  @E@@@@        +       STCOR                 . COROUTINE POINTER   RS
)@@G@@@[@@@@/.    @B@@@@FIASG$*                               .   @B@@@@ BEGINRT
)@@G@@ SUBROUTINE                     .   @G@@@@   DS      A1,UINAME          RU
)@@G@@        . SAVE POSSIBLE USER INTERNAL NAME@E@@@@   L       A2,A0        RV
)@@G@@              . GET PACKET ADDRESS  @[@@@@   .  @D@@@@   . BUILD ASSIGN RW
)@@G@@OPTIONS AND INSERT INTO ASSIGN IMAGE@[@@@@   .  @E@@@@   IF A2,EVENP,WDURX
)@@G@@OPT                 . USER OPTIONS IN A3 ?@D@@@@      L       A3,('A    RY
)@@G@@ ')           . NO - DO @ASG,A@B@@@@   ENDIF                            RZ
)@@G@@  .   @E@@@@   S       A3,ASG+1                   . SET SECOND WORD     SA
)@@G@@@E@@@@   L,U     A3,' '                     . SPACE FOR 'X' OPTION@G@@@@SB
)@@G@@   IF A2,ODDP,WDUXCL                  . UNLESS HE WANTS EXCLUSIVE USE   SC
)@@G@@@F@@@@      L,U     A3,'X'                  . IN WHICH CASE HE GETS IT  SD
)@@G@@@B@@@@   ENDIF                              .   @D@@@@   S,S6    A3,ASG SE
)@@G@@                    . SAVE X OPTION @[@@@@   .  @D@@@@   . NOW DECIDE IFSF
)@@G@@ USE NAME IS TO BE PLACED ON FILE.  @D@@@@   . IF USE IS TO BE DONE A4 WSG
)@@G@@ILL BE SET TO FIFUSE.   @[@@@@   .  @E@@@@   L,U     A4,0               SH
)@@G@@        . CLEAR FREE CODE     @E@@@@   DL      A0,FNAME                 SI
)@@G@@  . GET FILE NAME GIVEN @E@@@@   IF ZERO,IN,FNL                     . IFSJ
)@@G@@ NO FILE USE TPF$ @D@@@@      DL      A0,TPFNAM               . NO USE TSK
)@@G@@PF$   @E@@@@      DS      A0,FNAME                . RESET FILE NAME     SL
)@@G@@@B@@@@   ENDIF                              .   @E@@@@   IF NONZ,IN,FCL SM
)@@G@@                    . IF FILE CYCLE GIVEN @E@@@@      L       A4,U(FIFUSSN
)@@G@@E)            . SET FLAG TO DO USE  @E@@@@   ELSE                       SO
)@@G@@        . CHECK INTERNAL NAME @E@@@@      DS      A0,FINAME             SP
)@@G@@  . SEARCH PCT FOR A    @E@@@@      FITEM                           .  FSQ
)@@G@@ILE WITH SAME NAME@F@@@@      IF ZERO,IN,FXFILE               . IF NO FISR
)@@G@@LE NAME WAS FOUND @D@@@@         IF A2,ODDP,WDUFOR            . IF USE FSS
)@@G@@ORCED @E@@@@            L       A4,U(FIFUSE)      . SET FLAG FOR USE    ST
)@@G@@@F@@@@         ENDIF                        . ELSE UNIQUE WHEN ASSIGNED SU
)@@G@@@F@@@@      ELSE                            . FILE NAME FOUND IN PCT    SV
)@@G@@@F@@@@         CALL    GETNAME              . GET QUAL DESIRED FOR FILE SW
)@@G@@@G@@@@         AND     A2,WDUGAF            . IF USENAME GIVEN AND FORCESX
)@@G@@D     @G@@@@         IF A4,EVENP,U(FIFUIF) OR A3,EQ,WDUGAF . IF NOT USE SY
)@@G@@OR USE BAD  @E@@@@            L       A5,FXFRCY         . GET RELATIVE FSZ
)@@G@@CYCLE @E@@@@            LSSL    A5,31             . STRIP OFF SIGN BIT  TA
)@@G@@@F@@@@            DL      A0,DXQUAL         . GET DESIRED QUALIFIER     TB
)@@G@@@G@@@@            IF A0,DNEQ,FXQUAL OR A2,ODDP,WDUFOR . IF BAD QUAL OR FTC
)@@G@@ORCED @E@@@@               L,U     A5,1           . ABORT FOLLOWING TESTTD
)@@G@@@D@@@@            ENDIF                     . IF USE FORCED @E@@@@      TE
)@@G@@      DL      A0,DXFILE         . GET QUAL DESIRED    @F@@@@            TF
)@@G@@IF A0,DNEQ,FXFILE OR A5,IS,NONZ . IF NOT CORRECT FILE @E@@@@            TG
)@@G@@   IF A2,EVENP,WDUGIV     . IF NO USE NAME GIVEN@F@@@@                  TH
)@@G@@L       A4,U(FIFUSE) . SET BIT TO FORCE USE     @G@@@@               ELSTI
)@@G@@E                   . CHECK USE NAME FOR ATTACHED     @E@@@@            TJ
)@@G@@      DL      A0,UINAME   . GET HIS USE NAME    @D@@@@                  TK
)@@G@@DS      A0,FINAME   . STORE IT AWAY @E@@@@                  FITEM       TL
)@@G@@        . SEARCH PCT FOR FILE @E@@@@                  L       A5,FXFRCY TM
)@@G@@  . GET RELATIVE FCYCLE @E@@@@                  LSSL    A5,31       . STTN
)@@G@@RIP OFF SIGN BIT  @E@@@@                  DL      A0,DXQUAL   . GET DESITO
)@@G@@RED QUAL    @E@@@@                  IF A0,DNEQ,FXQUAL   . IF NOT DESIREDTP
)@@G@@ FILE @E@@@@                     L,U     A5,1     . ABORT FOLLOWING TESTTQ
)@@G@@@E@@@@                  ENDIF               . IF NOT DESIRED FILE @E@@@@TR
)@@G@@                  DL      A0,DXFILE   . GET DESIRED FILE    @G@@@@      TS
)@@G@@            IF A0,DNEQ,FXFILE OR A5,IS,NONZ . IF NOT DESIRED FILE @F@@@@TT
)@@G@@                     L       A4,U(FIFUSE) . SET FLAG TO DO @USE   @E@@@@TU
)@@G@@                  ENDIF               . IF NOT DESIRED FILE @E@@@@      TV
)@@G@@         ENDIF                  . IF USE NAME GIVEN   @F@@@@            TW
)@@G@@ENDIF                     . IF FILE NAME ACCESS WRONG @F@@@@         ENDTX
)@@G@@IF                        . IF FILE NAME IS USE NAME  @F@@@@      ENDIF TY
)@@G@@                          . IF INITIAL FITEM$ ZERO    @E@@@@   ENDIF    TZ
)@@G@@                          . INITIAL TEST ON FCL @[@@@@   .  @D@@@@   . IUA
)@@G@@F BIT FIFUSE OF A4 IS SET THEN USE MUST BE DONE @[@@@@   .  @D@@@@   IF UB
)@@G@@A4,IS,ODD                       . CHECK BIT 1   @F@@@@      CALL    DOUSUC
)@@G@@E                   . PLACE USE NAME ON FILE    @D@@@@   ENDIF          UD
)@@G@@                    . CHECK BIT 1   @[@@@@/.    @[@@@@   .  @B@@@@   . NUE
)@@G@@OW DECIDE WHETHER TO ASSIGN FILE.   @[@@@@   .  @E@@@@   . IF FILE IS ASUF
)@@G@@SIGNED A5 IS SET TO DO ANOTHER FITEM$.    @E@@@@   . IF FILE MUST BE FREUG
)@@G@@ED AND REASSIGNED A3 WILL BE SET.   @[@@@@   .  @E@@@@   L,U     A3,0   UH
)@@G@@                    . CLEAR FREASG FLAG   @E@@@@   L,U     A5,0         UI
)@@G@@              . CLEAR FITEM$ FLAG   @F@@@@   L       A1,FXFLAG          UJ
)@@G@@        . GET FILE PERMISSONS FLAGS @C@@@@   IF A2,ODDP,WDUPRD AND A1,ODUK
)@@G@@DP,U(FXBRIN) .    @G@@@@      L,U     A3,1                    . IF NEED UL
)@@G@@AND DONT HAVE READ PERM @B@@@@   ELSE                               .   UM
)@@G@@@C@@@@      IF A2,ODDP,WDUPWR AND A1,ODDP,U(FXBWIN) . @G@@@@         L,UUN
)@@G@@     A3,1                 . IF NEED AND DONT HAVE WRIT PERM @E@@@@      UO
)@@G@@ENDIF                           . WRITE PERM TEST     @D@@@@   ENDIF    UP
)@@G@@                          . READ PERM TEST@E@@@@   IF A3,IS,NONZ AND NONUQ
)@@G@@Z,IN,ASG+1    . THEN FREE AND ASSIGN@E@@@@      S       A2,DXFILE       UR
)@@G@@        . SAVE ARG POINTER    @D@@@@      S       A4,DXFILE+1           US
)@@G@@  . SAVE FREE CODE@D@@@@      L       A0,U(FIFASG)            . FREE FILUT
)@@G@@E ONLY@D@@@@      DL      A1,FINAME               . GET FILE NAME @D@@@@UU
)@@G@@      CALL    FIFREE$                 . FREE FILE     @E@@@@      L     UV
)@@G@@  A4,DXFILE+1             . RECOVER FREE CODE   @E@@@@      L       A2,DUW
)@@G@@XFILE               . RECOVER ARG POINTER @D@@@@      CALL    DOASG     UX
)@@G@@              . ASSIGN FILE   @B@@@@   ELSE                             UY
)@@G@@  .   @C@@@@      IF A2,ODDP,WDUXCL AND A1,EVENP,U(FXBXCL) .@G@@@@      UZ
)@@G@@   CALL    DOASG                . DONT HAVE AND WANT EXCLUSIVE USE@]@@@@VA
)@@G@@      ELSE  @E@@@@         IF ZERO,IN,FXEQUP            . IF FILE NOT ASVB
)@@G@@SIGNED@C@@@@            CALL    DOASG             . DO @ASG @E@@@@      VC
)@@G@@   ENDIF                        . IF FILE NOT ASSIGNED@E@@@@      ENDIF VD
)@@G@@                          . EXCLUSIVE USE TEST  @E@@@@   ENDIF          VE
)@@G@@                    . IF A3 IS NONZERO    @[@@@@   .  @C@@@@   . IF ASSIVF
)@@G@@GN WAS NEEDED IT HAS BEEN DONE.     @E@@@@   . NOTE FITEM$ HAS NOT BEEN VG
)@@G@@DONE SO SET FREE CODES BASED  @A@@@@   . ON VALUE IN OLD FITEM$ PACKET. VH
)@@G@@@[@@@@   .  @G@@@@   IF A3,IS,POS                       . IF FILE WAS REVI
)@@G@@ALLY ASSIGNED     @E@@@@      IF ZERO,IN,FXEQUP               . IF WE ASVJ
)@@G@@SIGNED FILE @F@@@@         A       A4,U(FIFASG)         . SET FLAG TO FRVK
)@@G@@EE FILE     @E@@@@      ENDIF                           . IF WE ASSIGNEDVL
)@@G@@ FILE @D@@@@      L       A1,FXFLAG               . GET PERMS BITS@C@@@@VM
)@@G@@      IF A2,ODDP,WDUXCL AND A1,EVENP,U(FXBXCL) .@F@@@@         A       AVN
)@@G@@4,U(FIFXCL)         . WE PUT ON EXCLUSIVE USE   @E@@@@      ENDIF       VO
)@@G@@                    . EXCLUSIVE USE TEST  @E@@@@      IF A5,IS,NONZ     VP
)@@G@@              . IF ASSIGN WAS DONE  @F@@@@         FITEM                VQ
)@@G@@        . GET NEW FILE PERMISSIONS  @E@@@@         L,U     A5,0         VR
)@@G@@        . CLEAR RETURN CODE   @E@@@@      ENDIF                         VS
)@@G@@  . IF ASSIGN WAS DONE  @D@@@@      L       A1,FXFLAG               . GEVT
)@@G@@T PERMS BITS@C@@@@      IF A2,ODDP,WDUPRD AND A1,ODDP,U(FXBRIN) . @G@@@@VU
)@@G@@         A,U     A5,1                 . WANT AND NOT HAVE READ PERM     VV
)@@G@@@D@@@@      ENDIF                           . READ PERM TEST@C@@@@      VW
)@@G@@IF A2,ODDP,WDUPWR AND A1,ODDP,U(FXBWIN) . @G@@@@         A,U     A5,2   VX
)@@G@@              . WANT AND NOT HAVE WRITE PERM    @E@@@@      ENDIF       VY
)@@G@@                    . WRITE PERM TEST     @B@@@@   ELSE                 VZ
)@@G@@              .   @F@@@@      L,U     A5,4                    . IF NO ASWA
)@@G@@SIGN SET FLAG     @B@@@@   ENDIF                              .   @F@@@@WB
)@@G@@   L       A0,A2                      . RECOVER PACKET ADDRESS    @E@@@@WC
)@@G@@   DL      A1,FINAME                  . GET INTERNAL NAME   @B@@@@ ENDBEWD
)@@G@@G                               .   @[@@@@/.    @B@@@@GETNAME           WE
)@@G@@                    .   @B@@@@ BEGIN SUBROUTINE,NOSAVE              .   WF
)@@G@@@D@@@@   IF NONZ,IN,IQF                     . IF *FILENAME  @]@@@@      WG
)@@G@@.     @B@@@@      . *FILENAME - USE CURRENT QUALIFIER @]@@@@      .     WH
)@@G@@@E@@@@      L,U     A0,DXQUAL               . GET IT FROM THE PCT @B@@@@WI
)@@G@@      L       A1,(2,021)              .   @F@@@@      ER      PCT$      WJ
)@@G@@              . REQUEST DATA FROM PCT     @D@@@@      DL      A0,FNAME  WK
)@@G@@              . GET FILE NAME @B@@@@   ELSE                             WL
)@@G@@  .   @E@@@@      IF NONZ,IN,FQL                  . IF QUALIFIER GIVEN  WM
)@@G@@@]@@@@         .  @D@@@@         . QUALIFIER*FILENAME. . . SET INTERNAL WN
)@@G@@NAMES.@]@@@@         .  @D@@@@         DL      A0,FQUAL             . MOWO
)@@G@@VE QUAL     @D@@@@         DS      A0,DXQUAL            . TO INTERNAL   WP
)@@G@@@C@@@@         DL      A0,FNAME             . GET FILE@B@@@@      ELSE  WQ
)@@G@@                          .   @]@@@@         .  @G@@@@         . JUST FIWR
)@@G@@LENAME . . . IF INTERNAL AND EXTERNAL NAMES FROM USER @G@@@@         . RWS
)@@G@@EQUEST ARE NOT THE SAME, IT IS A USENAME AND MAY BE USED    @G@@@@      WT
)@@G@@   . ON I/O. IF THEY ARE THE SAME WE MUST CHECK TO SEE IF THE     @ @@@@WU
)@@G@@         . QUALIFIERS MATCH.  @]@@@@         .  @E@@@@         DL      AWV
)@@G@@0,FINAME            . GET INTERNAL NAME   @E@@@@         IF A0,DEQ,FXFILWW
)@@G@@E             . IS IT A USENAME     @#@@@@            .     @H@@@@      WX
)@@G@@      . NOTE THAT IT COULD STILL BE A USENAME, BUT SAME AS FILENAME.    WY
)@@G@@@G@@@@            . AS THERE IS NO WAY TO DETECT THIS CASE , WE WILL DO WZ
)@@G@@AN    @H@@@@            . UNNECCESARY @USE IF THE QUALIFIER OF THE FILE XA
)@@G@@IS NOT THE SAME   @H@@@@            . AS THE PROJECT OF THE RUN.  THIS IXB
)@@G@@S BECAUSE THERE IS NO WAY     @E@@@@            . TO DETECT IF IT IS USEXC
)@@G@@NAME ACCESS OR NOT.     @#@@@@            .     @E@@@@            L,U   XD
)@@G@@  A0,DXQUAL         . GET IT FROM THE PCT @F@@@@            L       A1,(XE
)@@G@@1,05)         . GET LINK TO QUAL BUFFERS  @D@@@@            ER      PCT$XF
)@@G@@              . PICK UP LINK  @E@@@@            LXM,H1  A1,DXQUAL       XG
)@@G@@  . GET LINK TO QUAL BUF@B@@@@            AH      A1,(1,1)          .   XH
)@@G@@@C@@@@            ER      PCT$              . GET QUAL@E@@@@            XI
)@@G@@DL      A0,FNAME          . AND LOAD FILE NAME  @#@@@@         ELSE     XJ
)@@G@@@#@@@@            .     @F@@@@            . THE ONLY WAY THIS COULD HAPPXK
)@@G@@EN IS IF THERE IS A     @E@@@@            . USENAME SPECIFIED ON THE CALXL
)@@G@@L.  IT IS SAFE TO @F@@@@            . SET THE QUALIFIER TO THE QUAL OF TXM
)@@G@@HE FILE SO THAT   @A@@@@            . THE TEST WILL SUCCEED.@#@@@@      XN
)@@G@@      .     @G@@@@            L       A4,U(FIFUIF)      . SET FLAG CAN FXO
)@@G@@REE THRU USENAME  @D@@@@            DL      A0,FXQUAL         . MOVE FILXP
)@@G@@E QUAL@E@@@@            DS      A0,DXQUAL         . TO INTERNAL BUFFER  XQ
)@@G@@@D@@@@            DL      A0,FXFILE         . LOAD FILE NAME@E@@@@      XR
)@@G@@   ENDIF                        . TEST ON USE NAME    @E@@@@      ENDIF XS
)@@G@@                          . TEST ON QUAL GIVEN  @D@@@@   ENDIF          XT
)@@G@@                    . TEST ON IQF   @E@@@@   DS      A0,DXFILE          XU
)@@G@@        . SET INTERNAL COPY   @B@@@@ ENDBEG                             XV
)@@G@@  .   @[@@@@/.    @[@@@@ .    @F@@@@ . CONTROL PASSES HERE WHEN EITHER TXW
)@@G@@HE 12 CHARACTER INTERNAL NAME @G@@@@ . IS NOT UNIQUE OR A USENAME IS FORXX
)@@G@@CED.  USENAME IS PLACED ON FILE.    @[@@@@ .    @B@@@@DOUSE             XY
)@@G@@                    .   @B@@@@ BEGIN SUBROUTINE                     .   XZ
)@@G@@@F@@@@   IF A2,ODDP,WDUGIV                  . IF USER GAVE USE NAME     YA
)@@G@@@D@@@@      DL      A0,UINAME               . GET HIS NAME  @F@@@@      YB
)@@G@@DS      A0,FINAME               . SAVE IT IN FITEM$ PACKET  @E@@@@   ELSYC
)@@G@@E                               . IF USENAME NOT GIVEN@G@@@@      ON    YD
)@@G@@  GENUSE                  . IF GENERATING UNIQUE USE NAMES  @]@@@@      YE
)@@G@@.     @A@@@@      . CREATE USENAME FIA$$A<TIME> @]@@@@      .     @E@@@@YF
)@@G@@      REPEAT UNTIL ZERO,IN,FXFILE     . FIND UNIQUE NAME    @B@@@@      YG
)@@G@@   L       A0,('FIA$$A')        .   @B@@@@         REPEAT UNTIL A0,EQ,('YH
)@@G@@FIA$$)') .  @B@@@@            S       A0,FINAME         .   @E@@@@      YI
)@@G@@      ER      DATE$             . GET DATE A0 TIME A1 @D@@@@            YJ
)@@G@@S       A1,FINAME+1       . SAVE USE NAME @B@@@@            FITEM       YK
)@@G@@              .   @B@@@@         ESCAPE WHEN ZERO,IN,FXFILE   .   @B@@@@YL
)@@G@@         OTHERWISE                    .   @#@@@@            .     @C@@@@YM
)@@G@@            . IF NOT UNIQUE INCREMENT LETTER.   @#@@@@            .     YN
)@@G@@@C@@@@            L       A0,FINAME         . GET NAME@B@@@@            YO
)@@G@@A,U     A0,1              .   @B@@@@         ENDREP                     YP
)@@G@@  .   @B@@@@      ENDREP                          .   @G@@@@      OFF   YQ
)@@G@@  GENUSE                  . END GENERATING UNIQUE USENAMES  @]@@@@      YR
)@@G@@.     @E@@@@      ON      1-GENUSE                . IF CODE TURNED OFF  YS
)@@G@@@E@@@@      ER      ERR$                    . EAT FLAMING DEATH   @E@@@@YT
)@@G@@      OFF     1-GENUSE                . IF CODE TURNED OFF  @B@@@@   ENDYU
)@@G@@IF                              .   @E@@@@   DL      A0,FIAIND          YV
)@@G@@        . GET STORE POINTERS  @D@@@@   L       A3,('@USE  ')            YW
)@@G@@  . GET @USE IMAGE@B@@@@   L,U     R1,4                       .   @D@@@@YX
)@@G@@   CALL    EDIT                       . EDIT @USE     @D@@@@   ECHAR   'YY
)@@G@@ '                        . EDIT SPACE    @F@@@@   DL      A3,FINAME    YZ
)@@G@@              . GET USENAME FROM WHEREVER @D@@@@   L,U     R1,12        ZA
)@@G@@              . EDIT IT IN    @E@@@@   CALL    EDIT                     ZB
)@@G@@  . EDIT INTERNAL NAME  @D@@@@   ECHAR   ','                        . EDZC
)@@G@@IT COMMA    @D@@@@   CALL    EDFILE                     . EDIT FILE NAMEZD
)@@G@@@E@@@@   AN,H2   A0,FIAIND                  . COMPUTE WORD COUNT  @B@@@@ZE
)@@G@@   LXI,U   A0,0,A0                    .   @B@@@@   LXM,U   A0,FIMAG$    ZF
)@@G@@              .   @E@@@@   CSF                                . ATTACH UZG
)@@G@@SE NAME     @F@@@@   FITEM                              . SEARCH PCT FORZH
)@@G@@ FILE ITEM  @E@@@@   L       A4,U(FIFUSE)               . SET FLAG USE DZI
)@@G@@ONE   @B@@@@ ENDBEG                               .   @[@@@@/.    @[@@@@ZJ
)@@G@@ .    @C@@@@ . MUST ASSIGN THE FILE. OPTIONS ARE IN ASG.    @[@@@@ .    ZK
)@@G@@@B@@@@DOASG                                 .   @B@@@@ BEGIN SUBROUTINE ZL
)@@G@@                    .   @F@@@@   IF ZERO,IN,ASG+1                   . IFZM
)@@G@@ ZERO OPTIONS PASSED    @F@@@@      L       A3,(0400000000000)      . SAZN
)@@G@@Y FILE NOT ASSIGNED     @D@@@@   ELSE                               . ASZO
)@@G@@SIGN FILE   @E@@@@      S       A4,R2                   . SAVE @FREE CODZP
)@@G@@E     @E@@@@      DL      A0,FIAIND               . GET STORE INDIX     ZQ
)@@G@@@D@@@@      DL      A3,ASG                  . GET @ASG IMAGE@D@@@@      ZR
)@@G@@L,U     R1,12                   . SET CHAR COUNT@D@@@@      CALL    EDITZS
)@@G@@                    . EDIT IT IN    @D@@@@      ECHAR   ' '             ZT
)@@G@@        . EDIT SPACE    @E@@@@      CALL    EDFILE                  . EDZU
)@@G@@IT IN FILE NAME   @D@@@@      ECHAR   '/'                     . EDIT SLAZV
)@@G@@SH    @E@@@@      IF NONZ,IN,RKL                  . IF READ KEY GIVEN   ZW
)@@G@@@B@@@@         L       A3,RKEY              .   @B@@@@         L,U     RZX
)@@G@@1,6                 .   @E@@@@         CALL    EDIT                 . EDZY
)@@G@@IT IN READ KEY    @B@@@@      ENDIF                           .   @D@@@@ZZ
)@@G@@      ECHAR   '/'                     . EDIT SLASH    @E@@@@      IF NONAA
)@@G@@Z,IN,WKL                  . IF WRITE KEY PASSED @^@@@@         L       AAB
)@@G@@3,WKEY@B@@@@         L,U     R1,6                 .   @E@@@@         CALAC
)@@G@@L    EDIT                 . EDIT IN WRITE KEY   @B@@@@      ENDIF       AD
)@@G@@                    .   @E@@@@      AN      A0,FIAIND               . COAE
)@@G@@MPUTE WORD COUNT  @B@@@@      LXI,U   A0,0,A0                 .   @E@@@@AF
)@@G@@      LXM,U   A0,FIMAG$               . POINT TO BUFFER     @C@@@@      AG
)@@G@@CSF                             . ASSIGN  @D@@@@      S       A0,A3     AH
)@@G@@              . SAVE CSF$ BITS@E@@@@      L       A4,R2                 AI
)@@G@@  . RECOVER @FREE CODE  @F@@@@      L,U     A5,1                    . ANAJ
)@@G@@D SET FLAG ASSIGN DONE  @D@@@@   ENDIF                              . TEAK
)@@G@@ST ON ASG+1 @B@@@@ ENDBEG                               .   @[@@@@/.    AL
)@@G@@@[@@@@ .    @E@@@@ . THIS SUBROUTINE IS USED TO EDIT A FILE NAME INTO ANAM
)@@G@@ IMAGE@ @@@@ . FOR POSSIBLE @ASG/@USE     @[@@@@ .    @B@@@@EDFILE      AN
)@@G@@                          .   @B@@@@ BEGIN SUBROUTINE                   AO
)@@G@@  .   @E@@@@   IF NONZ,IN,IQF                     . IF IMPLIED QUAL     AP
)@@G@@@D@@@@      ECHAR   '*'                     . EDIT STAR     @B@@@@   ELSAQ
)@@G@@E                               .   @D@@@@      IF NONZ,IN,FQL          AR
)@@G@@        . IF QUAL GIVEN @E@@@@         DL      A3,FQUAL             . EDAS
)@@G@@IT IN QUALIFIER   @B@@@@         L,U     R1,12                .   @B@@@@AT
)@@G@@         CALL    EDIT                 .   @D@@@@         ECHAR   '*'    AU
)@@G@@              . EDIT STAR     @B@@@@      ENDIF                         AV
)@@G@@  .   @B@@@@   ENDIF                              .   @D@@@@   DL      AAW
)@@G@@3,FNAME                   . EDIT FILE NAME@B@@@@   L,U     R1,12        AX
)@@G@@              .   @B@@@@   CALL    EDIT                       .   @D@@@@AY
)@@G@@   IF NONZ,IN,FCL                     . IF CYCLE GIVEN@E@@@@      ECHAR AZ
)@@G@@  '('                     . EDIT OPEN PAREN     @B@@@@      L       A3,FBA
)@@G@@CYC                 .   @B@@@@      L,U     R1,6                    .   BB
)@@G@@@E@@@@      CALL    EDIT                    . EDIT FILE CYCLE     @E@@@@BC
)@@G@@      ECHAR   ')'                     . STORE CLOSE PAREN   @B@@@@   ENDBD
)@@G@@IF                              .   @B@@@@ ENDBEG                       BE
)@@G@@        .   @[@@@@/.    @[@@@@ .    @[@@@@ .    @B@@@@FIFOPT$*          BF
)@@G@@                    .   @E@@@@        'A     '                      . FRBG
)@@G@@EE ONLY USENAME   @D@@@@        'R     '                      . FREE ONLBH
)@@G@@Y FILE@F@@@@        'AR    '                      . FREE FILE AND USE NABI
)@@G@@ME    @E@@@@        'X     '                      . FREE EXCLUSIVE USE  BJ
)@@G@@@G@@@@        'XA    '                      . FREE EXCLUSIVE USE AND USEBK
)@@G@@NAME  @D@@@@        'R     '                      . FREE FILE     @F@@@@BL
)@@G@@        'RA    '                      . FREE FILE AND USENAME     @[@@@@BM
)@@G@@ .    @G@@@@ . THIS SUBROUTINE MAY BE CALLED TO FREE A FILE ASSIGNED BY BN
)@@G@@FIASG$.     @E@@@@ . THE 12 CHARACTER INTERNAL NAME AND FREE CODE ARE PABO
)@@G@@SSED :@[@@@@ .    @A@@@@ .         L         A0,FREE CODE   @A@@@@ .    BP
)@@G@@     DL        A1,FILENAME    @B@@@@ .         LMJ       X11,FIFREE$    BQ
)@@G@@   .  @ @@@@ .         <NORMAL RETURN>    @[@@@@ .    @B@@@@FIFREE$*    BR
)@@G@@                          .   @B@@@@ BEGIN SUBROUTINE                   BS
)@@G@@  .   @F@@@@   CALL    FIFRIM$                    . GET IMAGE TO FREE FIBT
)@@G@@LE    @D@@@@   IF A0,IS,NONZ                      . IF FREE TO DO @C@@@@BU
)@@G@@      CSF                             . DO IT   @B@@@@   ENDIF          BV
)@@G@@                    .   @B@@@@ ENDBEG                               .   BW
)@@G@@@[@@@@/.    @[@@@@ .    @E@@@@ . THIS SUBROUTINE MAY BE CALLED TO GET A BX
)@@G@@ACCESS WORD FOR   @E@@@@ . AN IMAGE TO FREE THE FILE.  IF A0 RETURNS ZERBY
)@@G@@O THEN THERE@^@@@@ . IS NO FREE REQUIRED. @[@@@@ .    @B@@@@FIFRIM$*    BZ
)@@G@@                           .  @B@@@@ BEGIN SUBROUTINE                   CA
)@@G@@  .   @F@@@@   DS      A1,FINAME                  . SAVE INTERNAL FILE NCB
)@@G@@AME   @E@@@@   DS      A1,FIMAG$+2                . IN FIPKT AND IMAGE  CC
)@@G@@@E@@@@   DSL     A0,36                      . SAVE FREE CODE IN A1@E@@@@CD
)@@G@@   AND,U   A1,07                      . ISOLATE INDEX BITS  @F@@@@   IF CE
)@@G@@A2,IS,NONZ                      . IF FREE HAS TO BE DONE    @F@@@@      CF
)@@G@@L,U     A0,4                    . SET WORD COUNT FOR NO EDIT@F@@@@      CG
)@@G@@IF A1,IS,EVEN AND A1,EVENP,U(FIFUIF) . IF NO USE WAS DONE   @]@@@@      CH
)@@G@@   .  @G@@@@         . IF THE 'A' BIT IS NOT SET, NO @USE WAS DONE BY FICI
)@@G@@ASG$, SO THE@C@@@@         . FILE MUST BE FREED BY ITS FULL NAME. @]@@@@CJ
)@@G@@         .  @D@@@@         FITEM                        . GET FILE NAME CK
)@@G@@@E@@@@         DL      A0,FIAIND            . GET STORE INDICES   @E@@@@CL
)@@G@@         A,U     A0,2                 . ALLOW FOR @FREE     @C@@@@      CM
)@@G@@   DL      A3,FXQUAL            . GET QUAL@B@@@@         L,U     R1,12  CN
)@@G@@              .   @D@@@@         CALL    EDIT                 . EDIT QUACO
)@@G@@LIFIER@D@@@@         ECHAR   '*'                  . EDIT STAR     @D@@@@CP
)@@G@@         DL      A3,FXFILE            . GET FILE NAME @B@@@@         L,UCQ
)@@G@@     R1,12                .   @D@@@@         CALL    EDIT               CR
)@@G@@  . EDIT FILE NAME@E@@@@         ECHAR   '('                  . EDIT OPECS
)@@G@@N PAREN     @E@@@@         L       A3,FXFCYC            . GET ABSOLUTE FCT
)@@G@@CYCLE @E@@@@         LSSL    A3,24                . IN QUARTER-WORD     CU
)@@G@@@E@@@@         SSL     A3,24                . INDEPENDENT MANNER  @E@@@@CV
)@@G@@         L       A5,(')     ')        . GET CLOSE PAREN     @E@@@@      CW
)@@G@@   REPEAT UNTIL A3,IS,ZERO      . LOOP OVER DIGITS    @E@@@@            CX
)@@G@@DSA     A3,36             . PREPARE FOR DIVIDE  @E@@@@            DI,U  CY
)@@G@@  A3,10             . COMPUTE NEXT DIGIT  @D@@@@            A,U     A4,'CZ
)@@G@@0'            . MAKE FIELDATA @E@@@@            DSL     A4,6            DA
)@@G@@  . PACK DIGIT INTO A5  @C@@@@         ENDREP                       . ENDB
)@@G@@D LOOP@D@@@@         L,U     R1,6                 . EDIT 6 CHARS  @C@@@@DC
)@@G@@         L       A3,A5                . FROM A5 @E@@@@         CALL    EDD
)@@G@@DIT                 . CALL EDIT ROUTINE   @E@@@@         AN      A0,FIAIDE
)@@G@@ND            . GET WORD LENGTH     @B@@@@      ENDIF                   DF
)@@G@@        .   @E@@@@      L       A1,('@FREE,')           . GET @FREE IMAGDG
)@@G@@E     @D@@@@      S       A1,FIMAG$               . INTO BUFFER   @E@@@@DH
)@@G@@      L       A1,FIFOPT$-1,A2         . GET FREE OPTIONS    @D@@@@      DI
)@@G@@S       A1,FIMAG$+1             . INTO BUFFER   @D@@@@      LXI,U   A0,0DJ
)@@G@@,A0                 . GET WORD COUNT@B@@@@      LXM,U   A0,FIMAG$       DK
)@@G@@        .   @B@@@@   ENDIF                              .   @B@@@@ ENDBEDL
)@@G@@G                               .   @[@@@@ .    @B@@@@        END       DM
)@@G@@                    .   ___@@@   ENDIF          *[S@@@*SDFF*@[@@@[ .    DN
)@@G@@@[@@@[ .    @E@@@[ . THESE ROUTINES ARE A COMPLEX DESIGNED TO FACILITATEDO
)@@G@@ THE  @E@@@[ .     CREATION AND MAINTENENCE OF THREADED BINARY TREES.   DP
)@@G@@@F@@@[ .     ROUTINES ARE PROVIDED FOR SEARCHING, INSERTING, DUMPING    DQ
)@@G@@@E@@@[ .     AND DELETING.  IN THE CASE OF DELETION ONLY THE RIGHT@E@@@[DR
)@@G@@ .     THREADS ARE PRESERVED, IT IS ASSUMED ONLY SYMMETRIC  @F@@@[ .    DS
)@@G@@ TRANSVERSALS ARE DESIRED.  THERE ARE TAGS PROVIDED FOR     @E@@@[ .    DT
)@@G@@ RELATED ROUTINES, EG. STORAGE MAINTENENCE ROUTINES.  @E@@@[ .     A VERDU
)@@G@@Y SIMPLE TYPE OF AVAIL ROUTINE IS PROVIDED, NOT @E@@@[ .     DESIGNED FODV
)@@G@@R RECOVERY OF RELEASED STORAGE.  SINCE    @F@@@[ .     MUCH OF THE LOGICDW
)@@G@@ HAS BEEN TAKEN FROM KNUTH, AN ATTEMPT    @E@@@[ .     HAS BEEN MADE TO DX
)@@G@@PRESERVE AS MUCH OF HIS NOTATION AS @#@@@[ .     POSSIBLE.  @[@@@[ .    DY
)@@G@@@[@@@[ .    @[@@@[ .    @#@@@[          AXR$.   @#@@@[          STRUC$. DZ
)@@G@@@[@@@[ .    @[@@@[ .    @[@@@[ .    @^@@@^DEL       EQU       0   @G@@@[EA
)@@G@@R         EQU       A0                . REGISTER EQUATE TO PRESERVE     EB
)@@G@@@H@@@[P         EQU       A1                .    SOME SEMBLENCE OF KNUTHEC
)@@G@@ NOTATION   @B@@@[Q         EQU       A2                .   @B@@@[T     ED
)@@G@@    EQU       A3                .   @B@@@[S         EQU       X10       EE
)@@G@@        .   @B@ @[F         FUNC      *1                .   @B@@@ F     EF
)@@G@@    FUNC                            @E@]@[LLINK*    NAME     XH1        EG
)@@G@@        . LEFT HALF OF WORD   @E@ @]LLINK     NAME     XH1              EH
)@@G@@  . LEFT HALF OF WORD   @E@@@ LLINK*    NAME     XH1                . LEEI
)@@G@@FT HALF OF WORD   @D@]@[RLINK*    NAME     XH2                . RIGHT HAEJ
)@@G@@LF    @D@ @]RLINK     NAME     XH2                . RIGHT HALF    @D@@@ EK
)@@G@@RLINK*    NAME     XH2                . RIGHT HALF    @^@#@]DEL       EQEL
)@@G@@U       0   @^@^@#DEL*      EQU       0   @E@ @[          END       +(EQEM
)@@G@@UF 0,F(1),F(0))  . F(1) IS INDEX REG@A@@@ A         EQUF      0,F(1),F(0EN
)@@G@@)     @^@@@           END       A   @B@@@[INFO(1)   EQUF      1,P       EO
)@@G@@        .   @B@@@[INFO(2)   EQUF      2,P               .   @B@@@[INFO(3EP
)@@G@@)   EQUF      3,P               .   @B@@@[INFO(4)   EQUF      4,P       EQ
)@@G@@        .   @B@@@[X(1)      EQUF      0,A0              .   @B@@@[X(2)  ER
)@@G@@    EQUF      1,A0              .   @B@@@[X(3)      EQUF      2,A0      ES
)@@G@@        .   @B@@@[X(4)      EQUF      3,A0              .   @[@@@[ .    ET
)@@G@@@[@@@[ .    @[@@@[ .    @[@@@[$(0). @B@@@[ROOT*     +0                  EU
)@@G@@        .   @B@@@[DONE      +0                          .   @[@@@[ .    EV
)@@G@@@[@@@[ .    @[@@@[ .    @F@@@[ . THIS ROUTINE DOES A SEARCH OF A THREADEEW
)@@G@@D BINARY TREE.  BECAUSE @F@@@[ .     OF THE THREADEDS NO STACKS ARE NEEDEX
)@@G@@ED.  ON ENTRY TO VALUE  @F@@@[ .     TO BE SEACHED FOR IS POINTED TO BY EY
)@@G@@A0.  ON EXIT A0 CONTAINS@G@@@[ .     THE RESULTENT CONDITION, A1 HAS THEEZ
)@@G@@ ADDR OF THE DESIRED NODE     @E@@@[ .     IF ONE EXISTS AND A2 HAS THE FA
)@@G@@ADDR OF ITS PARENT NODE.@[@@@[ .    @[@@@[ .    @[@@@[ .    @[@@@[$(1). FB
)@@G@@@]@@@[SEARCH*.    @#@@@[ BEGIN SUBROUTINE @E@@@[   SZ        A5         FC
)@@G@@              . INIT CONDITION REG  @D@@@[   SZ        DONE             FD
)@@G@@        . INIT EXIT FLAG@G@@@[   L,U       P,ROOT                   . FIFE
)@@G@@ND OUT WHERE TO START SEARCH  @F@@@[   L         Q,P                    FF
)@@G@@  . SET AS PARENT NODE ALSO   @F@@@[   IF NONZ,IN,LLINK(P) THEN         FG
)@@G@@  . THERE IS NO TREE - FOLKS  @F@@@[      L         P,LLINK(P)          FH
)@@G@@  . AT LEAST THERE IS A TREE  @F@@@[      REPEAT WHILE P,GT,0,,U UNTIL NFI
)@@G@@ONZ,IN,DONE . TRY AND FIND IT @F@@@[         L         A3,X(1)          FJ
)@@G@@  . 1ST WORD OF INFO FIELD    @E@@@[         L         A4,INFO(1)       FK
)@@G@@  .    SND ONE OF TREE  @F@@@[         IF A3,EQ,A4 THEN             . MAFL
)@@G@@YBE 1ST NODES MATCH     @E@@@[            L         A3,X(2)         . YEFM
)@@G@@S - TRY FOR TWO   @B@@@[            L         A4,INFO(2)      .   @D@@@[FN
)@@G@@            IF A3,EQ,A4 THEN          . DO THEY MATCH @E@@@[            FO
)@@G@@   L         A3,X(3)      . YES - TRY FOR THREE @B@@@[               L  FP
)@@G@@       A4,INFO(3)   .   @D@@@[               IF A3,EQ,A4 THEN       . DOFQ
)@@G@@ THEY MATCH @E@@@[                  L         A3,X(4)   . ALMOST HAVE A FR
)@@G@@WINNER@B@@@[                  L         A4,INFO(4)  . @C@@@[            FS
)@@G@@      IF A3,EQ,A4 THEN    . DO THESE@G@@@[                     S        FT
)@@G@@ A5,CONDITION  . SAVE PREVIOUS CONDITION  @H@@@[                     L,UFU
)@@G@@       A5,1   . WHEW! FINALLY MADE IT - SET CONDITION @E@@@[            FV
)@@G@@         S         X11,DONE  . ALSO EXIT FLAG   @^@@@[                  FW
)@@G@@ENDIF @^@@@[               ENDIF    @#@@@[            ENDIF @#@@@[      FX
)@@G@@   ENDIF    @F@@@[         IF ZERO,IN,DONE THEN         . MAYBE NOT THROFY
)@@G@@UGH YET     @E@@@[            L         Q,P             . MOVE TO NEXT NFZ
)@@G@@ODE   @F@@@[            AN        A3,A4           . DECIDE WHICH WAY TO GA
)@@G@@GO    @E@@@[            IF NOCARY THEN            . MUST DO LOGICAL <   GB
)@@G@@@E@@@[               L         P,LLINK(P)   . LEFT SIDE OF TREE   @F@@@[GC
)@@G@@               L,U       A5,2         . SET CONDITION JUST IN CASE@B@@@[GD
)@@G@@            ELSE                      .   @D@@@[               L        GE
)@@G@@ P,RLINK(P)   . RIGHT WAY     @E@@@[               L,U       A5,3       GF
)@@G@@  . MAY NEED CONDITION  @B@@@[            ENDIF                     .   GG
)@@G@@@B@@@[         ENDIF                        .   @B@@@[      ENDREP      GH
)@@G@@                    .   @B@@@[   ENDIF                              .   GI
)@@G@@@E@@@[   L         A0,A5                    . PASS BACK CONDITION @B@@@[GJ
)@@G@@ ENDBEG                               .   @[@@@[/.    @[@@@[ .    @[@@@[GK
)@@G@@ .    @F@@@[ . THIS IS THE INSERTION ROUTINE.  IT USES THE RESULTS OF SEGL
)@@G@@ARCH  @F@@@[ .      TO FIND THE PROPER PLACE IN THE TREE AND TO DECIDE WGM
)@@G@@HAT   @E@@@[ .      TO DO.  ON ENTRY A0 CONTAINS THE ADDR OF THE INFO TOGN
)@@G@@@F@@@[ .      BE INSERTED, A1 CONTAINS THE LENGTH OF NODE FOR INSERTION.GO
)@@G@@@F@@@[ .      NOTE: SEARCH EXPECTS AN INFO FIELD OF FOUR WORDS, HOWEVER,GP
)@@G@@@F@@@[ .      BY PROVIDING THE LENGTH MORE INFORMATION CAN BE APPENDED  GQ
)@@G@@@F@@@[ .      TO THE NODE AT NO EXTRA COST.  ON EXIT A0 CONTAINS THE    GR
)@@G@@@G@@@[ .      STATUS OF THE INSERTION, 0 - NORMAL, 1 - NODE ALREADY EXISGS
)@@G@@TS,   @ @@@[ .      -1 - STORAGE OVERFLOW.@[@@@[ .    @[@@@[ .    @[@@@[GT
)@@G@@ .    @[@@@[$(0). @D@@@[X         +0                          . ADDR OF GU
)@@G@@X     @F@@@[LENGTH    +0                          . SAVE AREA FOR NODE LGV
)@@G@@ENGTH @G@@@[CONDITION +0                          . SAVE AREA FOR SEARCHGW
)@@G@@ CONDITION  @[@@@[ .    @[@@@[ .    @[@@@[ .    @[@@@[$(1). @]@@@[INSERTGX
)@@G@@*.    @B@@@[ BEGIN SUBROUTINE                     .   @G@@@[   S        GY
)@@G@@ A0,X                     . SAVE ADDR OF INFO TO INSERT     @F@@@[   S  GZ
)@@G@@       A1,LENGTH                . SAVE AREA FOR NODE LENGTH @E@@@[   CALHA
)@@G@@L      SEARCH                   . SEE WHERE TO PUT IT @G@@@[   IF A0,NEQHB
)@@G@@,1,,U THEN                . 1 MEANS NODE ALREADY EXISTS     @G@@@[      HC
)@@G@@S         A0,CONDITION          . SAVE SEARCH CONDITION FOR LATER @G@@@[HD
)@@G@@      L         A0,LENGTH             . GET LENGTH OF NODE TO INSERT    HE
)@@G@@@E@@@[      A,U       A0,1                  . INC FOR LINK WORD   @D@@@[HF
)@@G@@      CALL      AVAIL                 . GET SPACE     @E@@@[      IF A0,HG
)@@G@@IS,POS THEN               . MAYBE NO MORE SPACE @F@@@[         L        HH
)@@G@@ P,Q                . OK - NEED ADDR OF PARENT  @F@@@[         L        HI
)@@G@@ Q,A0               . Q IS NOW ADDR OF NEW NODE @G@@@[         L        HJ
)@@G@@ A0,CONDITION       . HAVE TO KNOW HOW TO SET LINKS   @B@@@[         CASHK
)@@G@@ENTRY A0                  .   @F@@@[         CASE 0                     HL
)@@G@@  . THIS IS 1ST LINK OF TREE  @E@@@[            S         Q,LLINK(P)    HM
)@@G@@  . PARENT IS ROOT NODE @G@@@[            SZ        RLINK(Q)        . ZEHN
)@@G@@RO LINKS - NO OTHER NODES     @B@@@[            SZ        LLINK(Q)      HO
)@@G@@  .   @D@@@[         CASE 2                       . LESS THAN     @E@@@[HP
)@@G@@            L         A0,LLINK(P)     . PRESERVE LEFT THREAD@D@@@[      HQ
)@@G@@      S         A0,LLINK(Q)     . INTO NEW NODE @F@@@[            S     HR
)@@G@@    Q,LLINK(P)      . PARENT POINTS TO LSON     @F@@@[            SN    HS
)@@G@@    P,RLINK(Q)      . RIGHT LINK IS NEG THREAD  @D@@@[         CASE 3   HT
)@@G@@                    . GREATER THAN  @F@@@[            L         A0,RLINKHU
)@@G@@(P)     . PRESERVE RIGHT THREADS    @B@@@[            S         A0,RLINKHV
)@@G@@(Q)     .   @F@@@[            S         Q,RLINK(P)      . PARENT POINTS HW
)@@G@@TO RSON     @E@@@[            SN        P,LLINK(Q)      . NEQ LEFT THREAHX
)@@G@@D     @B@@@[         ENDCASE                      .   @E@@@[         L  HY
)@@G@@       A0,X               . GET POINTER TO INFO @G@@@[         A,U      HZ
)@@G@@ Q,1                . INC POINTER TO NODE IN TREE     @F@@@[         LXIIA
)@@G@@,U     A0,1               . SET FOR BLOCK TRANSFER    @C@@@[         LXIIB
)@@G@@,U     Q,1                . THIS TO @D@@@[         L         R1,LENGTH  IC
)@@G@@        . AMOUNT TO MOVE@C@@@[         BT        Q,0,*A0            . MOID
)@@G@@VE IT @E@@@[         SZ        A0                 . NORMAL STATUS RETURNIE
)@@G@@@B@@@[      ENDIF                           .   @B@@@[   ENDIF          IF
)@@G@@                    .   @F@@@[   A,U       P,1                      . BUIG
)@@G@@MP PAST LINKS TO INFO   @B@@@[ ENDBEG                               .   IH
)@@G@@@[@@@[/.    @[@@@[ .    @[@@@[ .    @E@@@[ . THIS IS THE DELETION ROUTINII
)@@G@@E FOR A THREADED BINARY TREE. @E@@@[ .      ONLY RIGHT THREADS ARE PRESEIJ
)@@G@@RVED, THEY ARE ALL THAT @D@@@[ .      ARE NECESSARY FOR A POSTORDER TRANIK
)@@G@@SVERSAL.    @E@@@[ .      ON ENTRY A0 POINTS TO INFO TO BE DELETED FROM IL
)@@G@@TREE. @E@@@[ .      ON EXIT A0 RETURNS STATUS OF DELETE, 0 - NORMAL,    IM
)@@G@@@A@@@[ .      -1 - NODE DID NOT EXIST.    @[@@@[ .    @[@@@[ .    @[@@@[IN
)@@G@@ .    @F@@@[          ON        DEL               . MUST SPECIFY FOR DELIO
)@@G@@ETE   @[@@@[$(0). @D@@@[PQ        +0D                         . SAVE AREIP
)@@G@@A     @D@@@[RETURN    +0                          . RETURN FLAG   @[@@@[IQ
)@@G@@ .    @[@@@[ .    @[@@@[ .    @[@@@[$(1). @]@@@[DELETE*.    @B@@@[ BEGINIR
)@@G@@ SUBROUTINE                     .   @G@@@[   S         A0,X             IS
)@@G@@        . SAVE ADDR OF INFO TO BE DELETED @E@@@[   SZ        RETURN     IT
)@@G@@              . INIT RETURN FLAG    @D@@@[   CALL      SEARCH           IU
)@@G@@        . FIND NODE     @D@@@[   DSL       A6,72                    . CLIV
)@@G@@EAR A6,A7   @#@@@[   CASENTRY A0    @F@@@[   CASE 0,2,3                 IW
)@@G@@        . THESE ARE ALL NOFINDS     @E@@@[      LN,U      A0,1          IX
)@@G@@        . RETURN A -1 STATUS  @D@@@[   CASE 1                           IY
)@@G@@  . THIS IS A FIND@H@@@[      L         A0,CONDITION          . RETREIVEIZ
)@@G@@ CONDITION OF FATHER NODE     @F@@@[      IF A0,EQ,2,,U OR Q,EQ,ROOT,,U JA
)@@G@@THEN . WHICH SUBTREE ARE WE   @D@@@[         L,U       A0,0             JB
)@@G@@  . SET FOR TEST  @F@@@[         IF A0,GEQ,RLINK(P) THEN      . WAS THERJC
)@@G@@E A RIGHT THREAD  @F@@@[            L         A0,LLINK(P)     . NO - RESJD
)@@G@@ET LEFT LINKS     @B@@@[            S         A0,LLINK(Q)     .   @E@@@[JE
)@@G@@            SZ        A0              . SET FOR TEST AGAIN  @H@@@[      JF
)@@G@@      IF Q,EQ,ROOT,,U AND A0,LT,LLINK(Q) THEN . IS THERE A LEFT SUBTREE JG
)@@G@@@E@@@[               L         T,LLINK(Q)   . YES - WALK DOWN IT  @F@@@[JH
)@@G@@               REPEAT WHILE A0,LT,RLINK(T) . LOOKING FOR THREAD   @D@@@[JI
)@@G@@                  L         T,RLINK(T)  . NOT YET     @B@@@[            JJ
)@@G@@   ENDREP                 .   @D@@@[               L         A0,RLINK(P)JK
)@@G@@  . GET THREAD    @D@@@[               S         A0,RLINK(T)  . UPDATE TJL
)@@G@@HREAD @B@@@[            ENDIF                     .   @F@@@[            JM
)@@G@@L         A0,P            . TRY TO RELEASE STORAGE    @B@@@[            JN
)@@G@@CALL      RELEASE         .   @E@@@[            S         X11,RETURN    JO
)@@G@@  . SET RETURN FLAG_    @B@@@[         ENDIF                        .   JP
)@@G@@@B@@@[      ELSE                            .   @D@@@[         L,U      JQ
)@@G@@ A0,0               . SET FOR TEST  @D@@@[         IF A0,GEQ,RLINK(P) THJR
)@@G@@EN      . IS IT A THREAD@G@@@[            IF A0,LT,LLINK(P) THEN    . YEJS
)@@G@@S - IS THERE A LEFT SUBTREE   @E@@@[               L         A0,LLINK(P)JT
)@@G@@  . YES - WALK DOWN IT  @F@@@[               S         A0,RLINK(Q)  . BUJU
)@@G@@T FIRST DELETE NODE     @E@@@[               L         T,LLINK(P)   . WAJV
)@@G@@LK DOWN IT NOW    @D@@@[               SZ        A0           . SET FOR JW
)@@G@@TEST  @F@@@[               REPEAT WHILE A0,LT,RLINK(T) . LOOK FOR RIGHT JX
)@@G@@THREAD@D@@@[                  L         T,RLINK(T)  . NOT YET     @B@@@[JY
)@@G@@               ENDREP                 .   @D@@@[               L        JZ
)@@G@@ A0,RLINK(P)  . UPDATE THREAD @B@@@[               S         A0,RLINK(T)KA
)@@G@@  .   @B@@@[            ELSE                      .   @F@@@[            KB
)@@G@@   L         A0,RLINK(P)  . ALL WE DO IS DELETE NODE  @B@@@[            KC
)@@G@@   S         A0,RLINK(Q)  .   @B@@@[            ENDIF                   KD
)@@G@@  .   @F@@@[            L         A0,P            . TRY TO RELEASE STORAKE
)@@G@@GE    @E@@@[            CALL      RELEASE         . TAG FOR ROUTINE     KF
)@@G@@@E@@@[            S         X11,RETURN      . SET RETURN FLAG     @B@@@[KG
)@@G@@         ENDIF                        .   @B@@@[      ENDIF             KH
)@@G@@              .   @E@@@[      IF ZERO,IN,RETURN THEN          . NOT FINIKI
)@@G@@SHED YET    @G@@@[         L         T,P                . HAVE TO RESET KJ
)@@G@@SOME OTHER THREADS@F@@@[         L         R,RLINK(T)         . MUST FINKK
)@@G@@D THREADS POINTING@G@@@[         SZ        A5                 .      TO KL
)@@G@@NODE WHICH WAS DELETED  @G@@@[         IF A5,GEQ,LLINK(R) THEN      . IFKM
)@@G@@ LEFT LINK IS A THREAD THEN   @F@@@[            L         A5,LLINK(T)   KN
)@@G@@  .     WE'LL PRESERVE IT     @H@@@[            S         A5,LLINK(R)   KO
)@@G@@  . BUT WE ONLY REALLY NEED THE RIGHT ONES@H@@@[            L         P,KP
)@@G@@R             . NO LONGER NEED LOC OF DELETED NODE    @B@@@[         ELSKQ
)@@G@@E                         .   @H@@@[            L         S,LLINK(R)    KR
)@@G@@  . HAVE TO DO ALL OF THIS TO UPDATE RIGHT@F@@@[            REPEAT WHILEKS
)@@G@@ A5,LT,LLINK(S) .      THREADS PROPERLY   @E@@@[               L        KT
)@@G@@ R,S          . LOOK FOR LEST THREAD@E@@@[               L         S,LLIKU
)@@G@@NK(R)   . WALK DOWN CHAIN     @B@@@[            ENDREP                  KV
)@@G@@  .   @E@@@[            L         A5,LLINK(T)     . THIS MUST BE IT     KW
)@@G@@@H@@@[            S         A5,LLINK(S)     . UPDATING THREADS POINTING KX
)@@G@@TO OLD NODE @C@@@[            L         A5,RLINK(S)     . HERE TOO@B@@@[KY
)@@G@@            S         A5,LLINK(R)     .   @H@@@[            L         A5KZ
)@@G@@,RLINK(T)     . CAN'T HAVE ANY BLANKS IN THE CHAIN    @B@@@[            LA
)@@G@@S         A5,RLINK(S)     .   @G@@@[            L         P,S           LB
)@@G@@  . P IS NOW END OF LEFT SUBTREE    @B@@@[         ENDIF                LC
)@@G@@        .   @D@@@[         SZ        A5                 . SET FOR TEST  LD
)@@G@@@G@@@[         IF A5,LT,LLINK(P)            . CAN 'T BE SURE HOW WE GOT LE
)@@G@@HERE  @G@@@[            L         R,LLINK(P)      . IF NOT END WE WANT RLF
)@@G@@IGHT SUBTREE@F@@@[            REPEAT WHILE A5,LT,RLINK(R) . WALK DOWN RILG
)@@G@@GHT SUBTREE @E@@@[               L         R,RLINK(R)   . LOOKING FOR THLH
)@@G@@READ  @B@@@[            ENDREP                    .   @E@@@[            LI
)@@G@@LN        A5,P            . MAKE THE NEW THREAD @G@@@[            S     LJ
)@@G@@    A5,RLINK(R)     . OLD ONE POINTS TO DELETED NODE  @B@@@[         ENDLK
)@@G@@IF                        .   @G@@@[         L         A0,CONDITION     LL
)@@G@@  . GET CONDITION OF FATHER NODE    @G@@@[         IF A0,EQ,2,,U OR Q,EQLM
)@@G@@,ROOT,,U THEN . WE'VE DONE THIS BEFORE    @F@@@[            S         P,LN
)@@G@@LLINK(Q)      . BUT P WAS DIFFERENT THEN  @D@@@[         ELSE           LO
)@@G@@              . UNFORTUNATELY @E@@@[            S         P,RLINK(Q)    LP
)@@G@@  . LINK UP SUBTREE     @B@@@[         ENDIF                        .   LQ
)@@G@@@G@@@[         L         A0,T               . HAVEN'T RELEASED OLD NODE LR
)@@G@@YET   @D@@@[         CALL      RELEASE            . GIVE IT A TRY @E@@@[LS
)@@G@@         SZ        A0                 . NORMAL RETURN CODE  @B@@@[      LT
)@@G@@ENDIF                           .   @B@@@[   ENDCASE                    LU
)@@G@@        .   @B@@@[ ENDBEG                               .   @B@@@[      LV
)@@G@@    OFF       DEL               .   @[@@@[/.    @[@@@[ .    @[@@@[ .    LW
)@@G@@@[@@@[ .    @F@@@[ . THIS ROUTINE IS PROVIDED AS A ARBITATY DUMP ROUTINELX
)@@G@@, DESIGNED  @F@@@[ .     TO TRANSVERSE THE THREADED TREE IN SYMMETRIC ORLY
)@@G@@DER WHILE   @G@@@[.      RETURNING TO CALLER WITH THE ADDRESS OF THE NEXLZ
)@@G@@T NODE IN A1.     @[@@@[ .    @[@@@[ .    @[@@@[ .    @[@@@[$(0). @F@@@[MA
)@@G@@PREGSAVE* +         0                 . SAVE LINK ACROSS RETURN   @[@@@[MB
)@@G@@ .    @[@@@[ .    @[@@@[$(1). @[@@@[DUMP*.@B@@@[ BEGIN CYCLIC           MC
)@@G@@              .   @F@@@[   IF NONZ,IN,ROOT THEN               . DON'T COMD
)@@G@@NSIDER NULL TREE  @E@@@[      L,U       P,ROOT                . START ATME
)@@G@@ BEGINNING  @G@@@[      REPEAT WHILE NONZ,IN,LLINK(P)   . WALK DOWN LEFTMF
)@@G@@ SIDE OF TREE     @D@@@[         L         P,LLINK(P)         . NOT DONEMG
)@@G@@ YET  @B@@@[      ENDREP                          .   @D@@@[      REPEATMH
)@@G@@ WHILE P,IS,NONZ          . SYMMETRIC LOOP@E@@@[         L         A0,P MI
)@@G@@              . POINT TO INFO FIELDS@F@@@[         S         P,PREGSAVE MJ
)@@G@@        . SAVE LINK ACROSS RETURN   @E@@@[         A,U       A0,1       MK
)@@G@@        . SKIP LINK FIELDS    @F@@@[         CALL,X7   0,X7             ML
)@@G@@  . RETURN WITH NEXT NODE     @G@@@[         L         P,PREGSAVE       MM
)@@G@@  . RESTORE WHERE WE WERE - BE SAFE @F@@@[         L         Q,RLINK(P) MN
)@@G@@        . RIGHT LINK IS THE KEY     @D@@@[         IF Q,LE,0,,U THEN    MO
)@@G@@        . IS IT A THREAD@E@@@[            LN        P,Q             . YEMP
)@@G@@S - TAKE SHORT CUT@D@@@[         ELSE                         . NO THREAMQ
)@@G@@D     @D@@@[            SZ        A0              . SET FOR TEST  @G@@@[MR
)@@G@@            REPEAT WHILE A0,LT,LLINK(Q) . LOOK FOR END OF LEFT SUB TREE MS
)@@G@@@C@@@[               L         Q,LLINK(Q)   . NOT YET @B@@@[            MT
)@@G@@ENDREP                    .   @F@@@[            L         P,Q           MU
)@@G@@  . P POINTS TO CURRENT NODE  @B@@@[         ENDIF                      MV
)@@G@@  .   @B@@@[      ENDREP                          .   @B@@@[   ENDIF    MW
)@@G@@                          .   @E@@@[   LN,U      A0,1                   MX
)@@G@@  . END OF TREE FLAG    @C@@@[   CALL,X7   0,X7                     . REMY
)@@G@@TURN  @B@@@[ ENDBEG                               .   @[@@@[/.    @[@@@[MZ
)@@G@@ .    @[@@@[ .    @[@@@[ .    @G@@@[ . THIS IS A VERY SIMPLE MINDED AVAINA
)@@G@@L ROUTINE DESIGNED SPECIFICALLY     @D@@@[ .     FOR THE DOWNDATER WHERENB
)@@G@@ NO RELEASE IS REQUIRED.@[@@@[ .    @[@@@[ .    @[@@@[ .    @[@@@[$(0). NC
)@@G@@@E@@@[OVERFLOW* +0                          . OVERFLOW INDICATOR  @F@@@[ND
)@@G@@LAST      +LASTD$+1                   . LAST LOCATION IN D BANK   @F@@@[NE
)@@G@@FIRST*    +LASTD$+1                   . FIRST AVAILABLE STORAGE   @F@@@[NF
)@@G@@BLOCK     +1024                       . INCREMENTS FOR MCORE$     @E@@@[NG
)@@G@@TEMP      +0                          . TEMPORARY STORAGE   @F@@@[LIMIT NH
)@@G@@    +LASTD$+20000               . NO MCORE$ BEYOND THIS     @[@@@[ .    NI
)@@G@@@[@@@[ .    @[@@@[ .    @[@@@[$(1). @]@@@[AVAIL*.     @B@@@[ BEGIN  SUBRNJ
)@@G@@OUTINE                    .   @E@@@[   SZ        OVERFLOW               NK
)@@G@@  . RESET INDICATOR     @H@@@[   AU        A0,FIRST                 . A0NL
)@@G@@ HAS AMOUNT OF STORAGE REQUESTED    @E@@@[   IF A1,GT,LAST THEN         NM
)@@G@@        . MUST GET MORE CORE  @F@@@[      S         A0,TEMP             NN
)@@G@@  . SAVE REQUESTED LENGTH     @E@@@[      L         A0,LAST             NO
)@@G@@  . GET END OF D-BANK   @D@@@[      A         A0,BLOCK              . ADNP
)@@G@@D MCORE$ INC@F@@@[      IF A0,GT,LIMIT THEN             . MAYBE WE WANT NQ
)@@G@@TOO MUCH    @D@@@[         S         X11,OVERFLOW       . 'FRAID SO!    NR
)@@G@@@B@@@[      ELSE                            .   @E@@@[         ER       NS
)@@G@@ MCORE$             . GO TRY AND GET IT   @E@@@[         S         A0,LANT
)@@G@@ST            . UPDATE END FO D-BANK@B@@@[      ENDIF                   NU
)@@G@@        .   @B@@@[   ENDIF                              .   @E@@@[   IF NV
)@@G@@NONZ,IN,OVERFLOW THEN           . DID WE GO TOO FAR   @F@@@[      LN,U  NW
)@@G@@    A0,1                  . YES - SET RETURN FLAG     @B@@@[   ELSE     NX
)@@G@@                          .   @F@@@[      L         A0,FIRST            NY
)@@G@@  . GET STARTING ADDR OF NODE @F@@@[      S         A1,FIRST            NZ
)@@G@@  . UPDATE NEXT STARTING ADDR @F@@@[      L         A1,TEMP             OA
)@@G@@  . PASS BACK LENGTH ALSO     @B@@@[   ENDIF                            OB
)@@G@@  .   @B@@@[ ENDBEG                               .   @[@@@[ .    @[@@@[OC
)@@G@@ .    @B@@@[ END                                  .   ___@@@@E@@@[      OD
)@@G@@         L         R,RLINK(R)   . LOOKING FOR THREAD  @B@@@[            OE
)@@G@@ENDREP                  )@@[M@K)@^C@@@@@@@/KF@@@:@@@@HG@@@@HH^Z@@EG8M@@@OF
)@@G@@T*Z@@CH^L@@@C*1@@]C8N@@@C8@@@@AA@@@@)@E[N@@K)@[]@@@@@@/KF@@@Q8!@@@G^Z@@EOG
)@@G@@Q8/@@@G^[@@@W*J@@CC*1@@]"K@@@GC8@@@@/C@@@GAB@@@@@@^@@^@@C@@[@@E@@A@@+@@]OH
)@@G@@@@E@@@@@@@@O)@@@@@@@@@@@E$CHAR$     AECOLN$     @@[@@@@@@@@@AECOL$      OI
)@@G@@@@[@@@@@@@@EAESKIP$     @@[@@@@@@@@[ECOLN$      @@[@@@@@@@@@ECOL$       OJ
)@@G@@@@[@@@@@@@@EESKIP$      @@[@@@@@@@@[@@@@@@@@@@@@D@@@@@@[@@@@@@@@@@@@@@@@OK
)@@G@@D@@@@@@#@@@@)@X[U[@[@@@@[@)@@KC80@@0/KF@@@RE1@@[/K@@@G')])@@C@)@@L/@0@@=OL
)@@G@@')])@@C8?@@0;C@@@<AD@@@@)@@@;@K)@K)@@K@@@@)@A@M@C=1@@][@1@@G/K@@@A/G\@@@OM
)@@G@@C/,@@@@@@@@@/K@@@]/K@@@[/K@@@QAA@@@@)@C[UK@K@^@@/KJ@@@C@1@@G')J@@NIG-@@EON
)@@G@@H8)@[@C80@@]/K@@@J0G[@@E!8)@[@/K@@@L:*1@@]AB@@@@)@N[U@@@@@@@[?1@@FQ'0@@@OO
)@@G@@;C0@@MC@0@@I @[@@BAE1@@D[^1@@CN8)@@@C0,@@@C4,@@@CO,@@@AC@@@@)@Y[U@E@)@O@OP
)@@G@@*4[@@FC80@@AQC-@@CA^-@@C/?)@@>/?+@@@Q'0@@1Q^-@@CA21@@FC=1@@]AC-@@CAD@@@@OQ
)@@G@@)@([E[@K)[[@K@@@@@@@@@@@/K@@@1/K@@@Y')])@@AC1@@B%)\@@H8K)@@!C*1@@]/\_@@@OR
)@@G@@C@1@@HAE@@@@)@1@%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/KF@@@CC[@@BOS
)@@G@@QC-@@CD@K@[]QE1@@DAF@@@@@@^@@^@@C@@]@@G@@]@@O@@]@@E@@@@@@@@6)@@@@@@@@@@@OT
)@@G@@E$ASC$      E$CHAR$     E$ARTN$     @@[@@@@@@@@:E$ASCII$    @@[@@@@@@@@@OU
)@@G@@@@@@@@@@@@@@D@@@@@@[@@@@@@@@@@@@@@@@D@@@@@@#@@@@)@@[MK^@])@@@@@@@@[=/@@]OV
)@@G@@[*/@@]C80@@[[C/@@ C80@@@@@@@@@@@@@@@/K@@@I/K@@@P@@@@@@AA@@@@)@E[F]@@*]^@OW
)@@G@@D80^@M@@@@@@B0H@@@G8K@@CB4@@@H/K@@@O(S@@@G/K@@@@[C/@@ C80@@@/K@@@@AB@@@@OX
)@@G@@)@N[U@K@^[@@;=@@@D/K@@@-9?H@@&R';@@@%8K@@MN8K@@C/K@@@V1@@@@F[@)@@J/KI@@@OY
)@@G@@[)L@@]AC@@@@)@Y[UK[@@@@@DL[D1P/KI@@@C80@@[C@)@@J')])@@0@@@@FC8)@[M8KK@@XOZ
)@@G@@')])@@/@)@@++8K@B_AD@@@@)@([U@@@@@@@@@)^@)DLPD1 ^@)^@)D([FC@D)@^@)CDKELDPA
)@@G@@D@@^@)D([EL#E([ELTC1 CLMCDMFC@AE@@@@)@4[U@@@@@@@C- CT D(]C(MD1JE1 CL EK@PB
)@@G@@D9#E-JC(HCL ET E[OETO@@)CDPC9P@@)^@)DLPD-TAF@@@@)@_@E@@@@@@@@@@@@@@@@@@@PC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@D(]C(MAG@@@@@@@@@@[@K@K@PD
)@@G@@)@>@M@R@?@@^9?K@@]/K@@@>Q^L@@#C8[@@@/\0@@:/K@@@>/\0@@2Q8W@@@A^W@@#AD@@@@PE
)@@G@@@@^@@^@@C@@#@@I@@#@@U@@]@@E@@@@@@@[@)@@@@@@@@@@@EDIT$       EDITR$      PF
)@@G@@E$CHAR$     AEDITR$     @@[@@@@@@@@FAEDIT$      @@[@@@@@@@@ E$ASC$      PG
)@@G@@@@[@@@@@@@@@@@@@@@@@@@@@D@@@@@@[@@@@@@@@@@@@@@@@D@@@@@@#@@@@[O<@@@/KF@@@PH
)@@G@@')])@@E/,@@@/\_@@^*^[@@]C@1@@FAG@@@@)[C[UK@@@K@@/?)@[E[=<@@@[*<@@@[?<@@@PI
)@@G@@[0<@@@[4<@@@/?+@@@O80@@[[)<@@@/?)@[#[S<@@@AH@@@@)@@[MK^[]@[]@^K@@@C8)@@EPJ
)@@G@@')])@@C8)@@H/K@@@F(*[@@]/K@@@@'=@@@@/\)@@S/K@@@F(*[@@]AA@@@@)@E[EK^C@=C@PK
)@@G@@L@K)#^C@K@@@/,0@@@[@[@@['=@@@@/\)@@R&';@@@/K@@@@'=@@@@/\)@@S')])@@AB@@@@PL
)@@G@@)@N[M@@@@@@@@@@@@@/KI@@@G^[@@@;*@@@MG?[@@@;*@@@AC8@@@@/KH@@@;CK@@MC@K@@FPM
)@@G@@C@[@@[AC@@@@@@@@@@K@@@@@"KK@@IC@0@@HC@@@@J;?"@@]C80@@@;SK@@J/G0@@U[@@@@KPN
)@@G@@[@)@@J)8K@@[[@)@@LAB@@@@@@^@@^@@C@@^@@K@@C@@0@@]@@E@@@@@@@@X)@@@@@@@@@@@PO
)@@G@@APRINT$     ERASE$      PRINT$      CSF$        EAPRTI$     @@[@@@@@@@@#PP
)@@G@@EAPRT$      @@[@@@@@@@@]ECSF$       @@[@@@@@@@@IEPRTA$      @@[@@@@@@@@BPQ
)@@G@@EPRTGA$     @@[@@@@@@@@ EPRTG$      @@[@@@@@@@@@EPRTI$      @@[@@@@@@@@GPR
)@@G@@EPRT$       @@[@@@@@@@@F@@@@@@@@@@@@D@@@@@@[@@@@@@@@@@@@@@@@D@@@@@@#@@@@PS
)@@G@@)@@[U@K@@@@@G G@@BC G@@D[@W@@DC@?@@C[^?@@BC0?@@E/C)@@A;K)@@S[@!)@@C@?@@EPT
)@@G@@C@W@@DAA@@@@)@F[U[@@@@@@N@K@@LH[K@@KC W@@B/KF@@[[@W@@DM#Y)@@N^W@@B/D@@@NPU
)@@G@@H[@@@LGDW@@^C W@@AAB@@@@)@Q[U[]@@@@@[ W@@^C[W@@A/ V@@@C5W@@#[[W@@ GDW@@BPV
)@@G@@C[W@@ '=@@@@0@G@@#[ G@@BM#Y)@@AC@@@@)@-[M[]@^^@@@@@@@@T9@@@WKDG@@BC G@@]PW
)@@G@@/K@@@D(^G@@]C@W@@D'=@@@@[ W@@D[[W@@A;[K@@MAD@@@@)@:[M@[]@@^@@@@@@@/K@@@DPX
)@@G@@[DG@@^[[W@@ '=@@@@0@G@@# ^G@@]GDG@@^H W@@]C[W@@ [DW@@BAE@@@@)@5[U@@^@@@@PY
)@@G@@9??@@@C@K@@G/@)@[L(@@@@J+8K@@#+8)@@#CCW@@BC@?@@  ^G@@][^W@@DC^W@@AAF@@@@PZ
)@@G@@)[@[M^C@)[@@@@@@@@?8)@@^CC?@@B/K@@[L!8)@@)!8)@@SC@@@@HC4?@@A'=@@@@9*?@@@QA
)@@G@@C^G@@AAG@@@@)[E[V@@@@@@@CDW@@B[[W@@ HDW@@BC[W@@ [C/@@BH@0@@I[^?@@]+8K@@#QB
)@@G@@C@W@@ +/)__//K@@[LAH@@@@)[P[U@K)@@@@C^W@@A/ V@@@C5W@@#[[W@@ GDW@@BC[W@@ QC
)@@G@@'=@@@@0@G@@#/KF@@@[DW@@^T9K@@WAI@@@@)[)[U^@@^@@@K8K@@#G8K@@[/@)@[%W8K@@WQD
)@@G@@;GK@@=G8K@@[H^W@@A[@!@@@C@)@[7C^W@@D[^W@@^AJ@@@@)[:[U@@K)#@@/ V@@@C5W@@#QE
)@@G@@[@W@@ '=@@@@G@W@@ [C?@@^T8)@@WCC?@@B!C?@@BC@)@@J+/)__/AK@@@@)[6@M@@@@@@@QF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@_@@@@@/KF@@[AL@@@@QG
)@@G@@@@^@@]@@A@@^@@I@@^@@Y@@[@@E@@@@@@@[8WAIT$       IO$         FACIL$      QH
)@@G@@IOW$        SDFOC$      @@[@@@@@@@[SSDFOEOF$    @@[@@@@@@@@ZSDFOO$      QI
)@@G@@@@[@@@@@@@@5SDFO$       @@[@@@@@@@@@@@@@@@@@@@@@D@@@@@@[@@@@[C@ 8LC@@ 8MQJ
)@@G@@/K@]GHC@@ 8F9?K 59C^0 53:80@@W9/K]#E/K@]GHCC0 5"+80@@_9?K 5;?9@@@ 9/T@@#QK
)@@G@@/K@]GH9?K 5_%9@@@@9/T@@B/K@]GH[C9@@A9?@ 6[9*D@@D)@@[M@@K^C@@@@@@@@9?@@@]QL
)@@G@@/,0@@@/C@@@EAE1@@[[G[@@[E/,@@@/\_@@^*^[@@]C@1@@FC@)@@HAA@@@@)@E[U^@K[@@@QM
)@@G@@/KF@@@RE1@@[Q@0@@H[@@@@]/K@@@N1G[@@[8KK@@H')])@@/K@@@IN@K@@JEG1@@[AB@@@@QN
)@@G@@)@P[M[]@^@K@@@@@@@N?L@@@/GK@@+N8K@@@/KF@@@H^[@@@H8@@@[:^Z@@EC8M@@@C*1@@]QO
)@@G@@C8#@@[AC@@@@)@Z[N@[]@C^@^C@0@@C8\@@@CCL@@##@@@[]')J@[IC=1@@]^@-@@[/K@@@@QP
)@@G@@N8N@@[P^1@@@/^K@@+AD@@@@)@([N@K@[@[@@@@@@@/K@@@0%@)@[[')G)@@/K@@@3&FY@@@QQ
)@@G@@'KI@@@C?[@@]H8K@@[C8\@[K/C@@@?AE@@@@)@3[N@^@^[]@H@K@@@[?[@@]'OJ@[K/CK@@/QR
)@@G@@'OJ@@@/GK@@'[CL@@#G8K@@[/C@@@7N@-@@[8K)@@0AF@@@@)@.[MK@@]))@@@@@@@/K@@@1QS
)@@G@@Q;@@[#C=!@@[C*!@@[C?!@@[C0!@@[C4!@@[C)!@@@/:K@[^/KF@@@AG@@@@)[B[N@@]))@OQT
)@@G@@@@@@@@__"@@"NOL@@AN0L@@@/K@@@1Q;@@[ECS!@@[CK!@@[CW!@@[CO!@@@/:K@[FAH@@@@QU
)@@G@@)[L@E*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@QV
)@@G@@__"@[BAI@@@@@@@@@@@@@@@@W@@@@@V@@@@@U@@@@@T@@@@@S@@@@@R@@@@@Q@@@@@P@@@@@QW
)@@G@@O@@@@@N@@@@@M@@@@@AH@@@@@@^@@^@@C@@^@@K@@^@@)@@]@@E@@@@@@@[M)@@@@@@@@@@@QX
)@@G@@ESKIP$      E$CHAR$     ECLR$$      E$PTRL$     EMSKP$      @@[@@@@@@@@<QY
)@@G@@EPAD$       @@[@@@@@@@@@ERASE$      @@[@@@@@@@@WEWRDN$      @@[@@@@@@@@PQZ
)@@G@@@@@@@@@@@@@@D@@@@@@[@@@@@@@@@@@@@@@@D@@@@@@#@@@@N@@@@@AK@@@@)[9@'@@@@@@@RA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@_@@@@@^@@@@@]@@@@@\@@@@@[@@@@@Z@@@@@Y@@@@@AL@@@@RB
)@@G@@)@@@'^@K[@@@)@A@M@@@@@@@C8:@@@C=1@@]/K@@@A&'0@@[/K@@@AR';@@@/K@@@A[@-@@[RC
)@@G@@&"0__"AA@@@@)@C[F]@@K)@K)@K^[]@@K)@@+OZ@@#;^I@@@CO\@@]/K@@@O/\)@[QC@)@@GRD
)@@G@@N*Z@@C:@)@@FN=Z@@CAB@@@@)@L[N@K)@^@K[]@@@@R';@@@C@[@@[N*Y@@CC=-@@]/K@@@WRE
)@@G@@1@@@@F8KK@@I')])@@%)\@@H/@)@@OAC@@@@)@V[#@@^@K@@)@+@F@@@@@@@/CK@@&/K@@@+RF
)@@G@@R';@@@/K@@@+&"0__"[C-@@[ @@@@I/KF@@@/K@@@HAD@@@@)@<[M^C@[@K@@@@@@@')])@@RG
)@@G@@1@@@@F:C-@@[')G)@@/K@@@!/\)@[KN8X@@@T*Z@@CC=1@@]E@K@@HAE@@@@)@![V@@@K@@@RH
)@@G@@C4!@@@/\G@@@C)!)@@/\@@@\CS!@@@CK!@@@CW!@@@/\G@@@CO!)@@/KF@@@8KK@@(AF@@@@RI
)@@G@@)@8[M@K])O@K@@@@@@')J@[I')G)@@')])@@@@[@@1@@[@@7/\@@@5C=!@@@C*!@@@C?!@@@RJ
)@@G@@C0!@@@AG@@@@)[][N@^@@K^[@@@@@@/\)@[K/K@@[G/\)@[MC?[@@]CCL@@#/KF@@@[?[@@]RK
)@@G@@'OJ@@.[CL@@#/K@@@_AH@@@@)[G@'K@[@@@@)[M@MK@@@@@@'KJ@@.C=1@@]/K@@[M;C@@@MRL
)@@G@@C8W@@@%O-@@A%0-@@@/K@@[@N8K@J*AI@@@@)[O@UK)@K@@@)[Q@%K@@@@@@@@@@@@/KI@@@RM
)@@G@@/\1K@F ?[@@F/K@@[U:*1@@]/K@@[Q'KK@@GC8,@@@AJ@@@@@@^@@^@@C@@[@@E@@J@[A@@]RN
)@@G@@@@E@@@@@@@[V)@@@@@@@@@@@E$CHAR$     AECOPY$     @@[@@@@@@@@-AEFD1$      RO
)@@G@@@@[@@@@@@@@#AEFD2$      @@[@@@@@@@@ AEMSGR$     @@[@@@@@@@[BAEMSG$      RP
)@@G@@@@[@@@@@@@[FAEPACK$     @@[@@@@@@@@XECOPY$      @@[@@@@@@@@-EFD1$       RQ
)@@G@@@@[@@@@@@@@#EFD2$       @@[@@@@@@@@ EFD3$       @@[@@@@@@@@@EMSGR$      RR
)@@G@@@@[@@@@@@@[BEMSG$       @@[@@@@@@@[FEPACKC$     @@[@@@@@@@@YEPACK$      RS
)@@G@@@@[@@@@@@@@XE$PTRL$     @@[@@@@@@@@.@@@@@@@@@@@@D@@@@@@[@@@@@@@@@@@@@@@@RT
)@@G@@D@@@@@@#@@@@/[@]8L?[@C&Z/K@]8>C[[C&-(@@C&Z/[@]9R)@@@'@^C@^@@)@A@U@;?K@@VRU
)@@G@@;?)@@V;*0@@V/K@@@AN*W@@^W8K@@/W8)@@/;GK@[CC*[@@]C8/@@@AA@@@@)@D[M[@K[@^@RV
)@@G@@@@@@@@/KF@@@8#@@@E')])@@/@)@@LC@)@[[/@@@@M/\K@@N;=K@@DC8)@@@R;@@@]AB@@@@RW
)@@G@@)@N[U@@@@@@@;GK@@GC*[@@];G@@@6/KH@@@C*1@@]')])@@C8\@@0')])@@G8)@@0W8)@@ERX
)@@G@@;G)@@=AC@@@@)@Y[M[]@[@@K^C@@@@C)\@@H/\K@@N;GK@@%+8@@_@;C@@@M/K@@@AN0W@@]RY
)@@G@@G80@[@;C0@@Y;G)@@YAD@@@@)@*[U[@[@@@@;G@@@0[G[@@[[C-@@[/KF@@@/\K@@NG8)@[@RZ
)@@G@@+8K@@_/\)@@0R';@@@N8K@@#')])@@AE@@@@)@3[M^@K^[@[@@@@@@/@)@@_+8K@@_;=@@@ASA
)@@G@@/K@@@"9?H@[V/K@@@_/\,@@[/@0@@8CC-@@ ;*K@@[AF@@@@)@.[MK^C@@@@@@@@@@N8K@@DSB
)@@G@@&"0__"C*1@@]/KI@@@CGL@@[CC-@@[')])@@C)\@@H8KK@@'')])@@AG@@@@)[B[UK@[@@K@SC
)@@G@@C@/@[VC8\@@0')])@@G8)@@0/@)@[KW8)@@E;G)@@%C@@@@J+8K@_@/\)@@0;C@@@MAH@@@@SD
)@@G@@)[M[N]@@[@[@@@@@@@, 19  /KF@@@/\K@@NG8)@[@+8K@@_8KK@[O;^?@@@')])@@N8K@@^SE
)@@G@@COG@@]AI@@@@)[W[U@@@@@@@      MAY@        APRIL@      MARCH@RY@   FEBRUASF
)@@G@@Y@    JANUAR ))AC9AJ@@@@)[$[U@@@@@@@NOVEMBR@    OCTOBEBER@  SEPTEM@     SG
)@@G@@AUGUST      JULY@       JUNE@ AK@@@@)[2@2@K^@@@@)[7@U@@@@@@@G8K@[@C?L@@[SH
)@@G@@[@[@@[/K@@[7/\K@@NC8)@@NER@   DECEMBER@   AL@@@@)['@+[@@@@@@@@@@@@@@@@@@SI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/K@@@AN8K@@@C01@@[C4-@@[AM@@@@@@@@@@@@@@@@SJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/KF@@@CC[@@BQC-@@CD@K@[]QE1@@DAF@@@@SK
)@@G@@@@^@@^@@C@@[@@E@@G@@'@@]@@E@@@@@@@[")@@@@@@@@@@@E$CHAR$     AEDAY1$     SL
)@@G@@@@[@@@@@@@@VAEDAY2$     @@[@@@@@@@@<AEDAY3$     @@[@@@@@@@[^AEDAY4$     SM
)@@G@@@@[@@@@@@@[5AEDAY5$     @@[@@@@@@@[7AETIME$     @@[@@@@@@@@@EDAY1$      SN
)@@G@@@@[@@@@@@@@VEDAY2$      @@[@@@@@@@@<EDAY3$      @@[@@@@@@@[^EDAY4$      SO
)@@G@@@@[@@@@@@@[5EDAY5$      @@[@@@@@@@[7ETIME$      @@[@@@@@@@@@@@@@@@@@@@@@SP
)@@G@@D@@@@@@[@@@@@@@@@@@@@@@@D@@@@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SR
)@@G@@)@@[N[^ [KL[])@@@@C@@@@H&;K@@WH8)@@VKCK@@@C8W@@@ @@@@[[@@@@@ @@@@[/KF@@[SS
)@@G@@*@@@@@AA@@@@)@E[N]@[[KKK^[@@@@C8H@@@/KF@@[>@@@#"/K@@@T>@@@#. @H@@@G8W@@@ST
)@@G@@[@@@@[(@@@@['=@@@@AB@@@@)@O[MK^@^@^ @@@@@@C@@@#7[@@@@[/KF@@@C8K@@[C@@@#1SU
)@@G@@/KF@@@C8K@@#C@@@#//K@@@D?8I@@@AC@@@@)@Y[U[[@K[@@%CI@@@/K@@@+G),@@@/K@@@*SV
)@@G@@?CY@@@*@I@@@G8)@@[C@)@@@L8@@@[/KF@@@C8K@@]AD@@@@)@([U@@K@@@@;^@@@%;CK@@=SW
)@@G@@/KF@@[C@K@#_?80@@B9?I@@[G="@@@T80@@AH80@@[C)"@@@/KF@@@AE@@@@)@4[U@^^^^@@SX
)@@G@@C@W@@@N8)@@@ @@@@JC9K@@[G8@@@[C^@@@@[@@@[[;C@@@Y[@K@[#G8K@@[(@@@@HAF@@@@SY
)@@G@@)@_[N@@K[@^@@@@@@@C?W@@@/K@@[$%1W@@@/K@@[$%@K@[#/K@@[R?@K@[#*@@@@H;CK@@YSZ
)@@G@@/@K@[$AG@@@@)[D[MK^ [KK^[@@@@@')H@]TC@0@#_:9@@@[C-G@@@9??@@[[(K@@J @@@@ITA
)@@G@@%(K@@J/K@@[U!8K@@AAH@@@@)[N[U[@[@^@@:8)@@.C*?@@@/K@@[Z:9K@@[/K@@@"G8@@@[TB
)@@G@@G)G@@@')H@]-G>G@@@T9@@@AH9@@@[AI@@@@)[Y[M^[@K^ @KO@@@@(@@@[]/K@@[R[-K@@ITC
)@@G@@:@)@#_[5@@@I%@)@#_/K@@[I/K@@[R%[K@[[N8)@@[AJ@@@@)[*[N[K^ [^@^@@@@@!4W@@@TD
)@@G@@/K@@[3(@G@@@G9K@@[/K@@[6:[K@[[ @@@@I[(K@@J/K@@[?:(K@@JAK@@@@)[2[N@KO^KO TE
)@@G@@[[[@@@[=@@@JC8@@@-98V@@@9?K@@I *@@@J:(K@@J/KF@@@ @@@@J @@@@I/K@@@.AL@@@@TF
)@@G@@)[/[N[^^^ @@@@@@@@C80@@E!8)@[@1@@@@I8^@@]DC!@@@JC80@@@D8)@@@C@@@@V/KF@@[TG
)@@G@@(?@@@JAM@@@@)]A[V[KK@K@@H8K@@0C80@[@(@@@@J/K@@]O?8K@@0?8K@@';=@@@AC8K@@@TH
)@@G@@/KF@@[[=0@@J[))@@JAN@@@@)]L[M^[@@K^[[@@@@@9*)@@K/K@@]]/@0@] C8.@@@:8K@@-TI
)@@G@@%8K@@+/^0@] /K@@]]G8!@@@T8)@@EAO@@@@)]V[F[KO [KO [K^^@@@@@@@[1@@@I/K@@[+TJ
)@@G@@[@)@@V9*)@@T9*)@@R[@)@@Q[@)@@P[@)@@O9*)@@MAP@@@@)]=[N[KO [KO^@@@@@;^@@@ATK
)@@G@@:8)@@ +8K@@_C80@@F[!@@@J[1@@@J[5@@@J[>@@@I[(@@@I[!@@@IAQ@@@@)],[N@KO[@^[TL
)@@G@@[K^ [@9!@@@KN4K@@I8#)@]4[@"@@AC@0@#_C8)@@BC@K@^[C@@@^@9*@@@#8#0@]:AR@@@@TM
)@@G@@)]8[N@^ [^ [^[@@@@C[@@^]/K@@##*@@@[[9!@@@MN0K@@I')H)@@*)@@@I(4@@@IC9K@@*TN
)@@G@@/\)@#+AS@@@@)#][MK^^K@KO@@@@@@C9K@@)/\)@#+C[@@@O')H)@@C9K@@(/K@@#H(@@@[[TO
)@@G@@N?K@@I/\)@#+N8K@@^AT@@@@)#G[MKO @K^C@K^^@@N*K@@I')H)@@C9K@@//KF@@@'=@@@@TP
)@@G@@C@@@^#/K@@#N*=@@@I(*@@@I')H)@@AU@@@@)#Q[N[K^^K@KO[@@@@/K@@#K/\)@#+C[@@@QTQ
)@@G@@')H)@@C9K@@//K@@#K(@@@[[N=K@@I/\)@#+C[@@@PAV@@@@)#)[U^@@[@@@[-W)@@/\0@#%TR
)@@G@@[>W@@@[(W@@@[!W@@@[1W@@@[5W@@@/KI@@@8KK@#)')H)@@;>@@@AAW@@@@)#:[U*@@O@@@TS
)@@G@@OM REAURN FRAL RETABNORM@[^@#!OR    LL ERRSOR CAPROCES/KJ@@@Q;K@#=AX@@@@TT
)@@G@@)#6@'E@@O@@@)@@@W@@USE  @@@@@@@@@@@@@[^@#8TIONS CIFICANY SPETOO MA@[ @#2TU
)@@G@@D$    AY@@@@)@#@W@)#.@'@*>@EC@@@G@@]TPF$  @@[@#=@@[@@A      [@@@@@]@@@@@TV
)@@G@@,     @@@@@@@@@@@@AZ@@@@@@^@@#@@B@@]@@F@@B@@$@@[@@E@@@@@@@^^@@@@@WREAD$ TW
)@@G@@      CSF$        DUSE$       @@[@@@@@@@]%ELT$        @@]@@@@@@@@IFILE$ TX
)@@G@@      @@]@@@@@@@@AINFOR$      @@]@@@@@@@@@RINF$       @@[@@@@@@@@@SELT$ TY
)@@G@@      @@[@@@@@@@@2SINF$       @@[@@@@@@@@)@@@@@@@@@@@@D@@@@@@[@@@@[@K^/GTZ
)@@G@@(4@^;5/K@@%Y'^@@_<'^@[@@'^@[I?'^@@9_'^@[[L*4@^8[/K@@%<C@@ QZ'=@@@I'^@@M,UA
)@@G@@)@@[U[@[@[@@C8)@@0/^@@@BG80@@[;G@@@#/@@@@G;G@@@#C80@@[/K@@@G;GH@@@T8K@@#UB
)@@G@@C8.@@@AA@@@@)@F@MK@@@@@@)@G@;@@^@@@@/KF@@@8#0@@H')])@@G8)@@0;=K@@#C8)@@@UC
)@@G@@/K@@@L/K@@@G')])@@AB@@@@)@N[M@K@K@@@@@@@@@[C-@@[(C[@@[/\)@@_;*)@@MC8)@@0UD
)@@G@@/K@@@TE/,@@@/\_@@^*^[@@]C@1@@FAC@@@@)@X[N]@@@K[@@@@@@@[C-@@[(C[@@[/\)@@_UE
)@@G@@C8K@@@/K@@@*R';@@@;C)@@M')])@@0@@@@FQ3:@@^AD@@@@)@$@N]@[@@@@)@*@3@^[]@@@UF
)@@G@@@@@@@@')])@@0@@@@FC0:@@^8#K@@(')])@@/K@@@%/K@@@*C):@@HAE@@@@)@,[#]@[]@[@UG
)@@G@@K)@@K@@@@@@@@@@@@@/K@@@5H8X@@@;?I@@@RE1@@[9)@@@@S@J@[RC?\@@]G4J@@@AF@@@@UH
)@@G@@)@5[V@@@^@@@AE1@@[/KF@@@8KK@@6H8X@@@')])@@K8K@@09)@@@I;=@@@]9?)@@G;=@@@[UI
)@@G@@/K@@@.AG@@@@)[@[U[@K@@@@N/Z@@[Q%1@@]H8K@@[0@@@@FH8Z@@[/SJ)@@5@J)[HC@0@[+UJ
)@@G@@E@@@@GR]0@@GN8K@@EAH@@@@)[F[U@@@@@@@DO]"K@@;&?*@@ .Y^@@@&DU@@@#4D@@@@SU)UK
)@@G@@@@@]WK@@@@J*@@@@[=@@@@@E/KI@@@AI@@@@)[Q[U@@@@@@@VZH_T5LF)\*DPYS;+GU5_EU\UL
)@@G@@K1\Y)!O"FQC8UH,F:BKS=7M/OY, B:T&T&T&Z_____AJ@@@@)[-@M@@@@@@@@@@@@@@@@@@@UM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[__"P_R_-ZAK@@@@@@@@@@@@@@@@UN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UO
)@@G@@@@^@@^@@C@@[@@E@@K@[E@@]@@E@@@@@@@[<)@@@@@@@@@@@E$CHAR$     AEDCFZ$     UP
)@@G@@@@[@@@@@@@@SAEDECF$     @@[@@@@@@@@=AEDECV$     @@[@@@@@@@@<AEOCTF$     UQ
)@@G@@@@[@@@@@@@@@AEOCTV$     @@[@@@@@@@@^EDCFZ$      @@[@@@@@@@@SEDECFL$     UR
)@@G@@@@[@@@@@@@@NEDECFZ$     @@[@@@@@@@@SEDECF$      @@[@@@@@@@@=EDECV$      US
)@@G@@@@[@@@@@@@@<EOCTF$      @@[@@@@@@@@@EOCTV$      @@[@@@@@@@@^E$DECM$     UT
)@@G@@@@[@@@@@@@@_E$DEC$      @@[@@@@@@@@>E$DEC0$     @@[@@@@@@@@VE$DEC2$     UU
)@@G@@@@[@@@@@@@@5@@@@@@@@@@@@D@@@@@@[@@@@@@@@@@@@@@@@D@@@@@@#@@@@@@@@@@@@@@@@UV
)@@G@@@@^@@@@@^@@@@@^@^)@M^@@@ACOB$E      @C@@@@@@@)^EACOB$1      @C@@@@@@@)[ZUW
)@@G@@ACOB$2      @C@@@@@@@)[)ACOB$3      @C@@@@@@@)[-ACOB$4      @C@@@@@@@)[+UX
)@@G@@ACOB$5A     @C@@@@@@@)[<ACOB$5L     @C@@@@@@@)[=ACOB$6      @C@@@@@@@)[>UY
)@@G@@ACTCDB$     @C@@@@@@@)@6APLREP$     @C@@@@@@@)@2APL$        @C@@@@@@@)]OUZ
)@@G@@APL$B       @C@@@@@@@)]RAPL$D       @C@@@@@@@)]PAPL$D4      @C@@@@@@@)]TVA
)@@G@@APL$ERR$    @C@@@@@@@)@4APL$M1      @C@@@@@@@)@5APL$M2      @C@@@@@@@)[MVB
)@@G@@APL$SY      @C@@@@@@@)^[APL$T       @C@@@@@@@)]QAPL$U       @C@@@@@@@)]SVC
)@@G@@APL$XQ      @C@@@@@@@)^@ASETCB$     @C@@@@@@@)#BASM$        @C@@@@@@@)@ VD
)@@G@@BCOB$I      @C@@@@@@@)@3BDI1$       @C@@@@@@@)]YBDI10$      @C@@@@@@@)]>VE
)@@G@@BDI11$      @C@@@@@@@)]&BDI2$       @C@@@@@@@)]ZBDI3$       @C@@@@@@@)])VF
)@@G@@BDI4$       @C@@@@@@@)]-BDI5$       @C@@@@@@@)]XBDI6$       @C@@@@@@@)]WVG
)@@G@@BDI7$       @C@@@@@@@)]VBDI8$       @C@@@@@@@)]UBDI9$       @C@@@@@@@)]=VH
)@@G@@BFOR$I      @C@@@@@@@)@JBFTN$I      @C@@@@@@@)@ZBLD$BK      @C@@@@@@@)]2VI
)@@G@@BSCAN$      @C@@@@@@@)@ICDMATH$     @C@@@@@@@)@YCKFUL$      @C@@@@@@@)['VJ
)@@G@@CKPAR$      @C@@@@@@@)[8CMATH$      @C@@@@@@@)@#CMP$BK      @C@@@@@@@)]/VK
)@@G@@COMPEX$     @C@@@@@@@)[(CONTB$      @C@@@@@@@)]$CPBBNK$     @C@@@@@@@)[QVL
)@@G@@CTS$ALT     @C@@@@@@@)[.CTS$ED      @C@@@@@@@)["CTS$I       @C@@@@@@@)@HVM
)@@G@@CTS$MDS     @C@@@@@@@)[_C$ACS       @C@@@@@@@)[@C$ANS       @C@@@@@@@)@*VN
)@@G@@C$BK1       @C@@@@@@@)#;C$BK2       @C@@@@@@@)#/C$CFH       @C@@@@@@@)@?VO
)@@G@@C$CONV      @C@@@@@@@)[]C$DIAG      @C@@@@@@@)@>C$DML       @C@@@@@@@)[AVP
)@@G@@C$FORM      @C@@@@@@@)@.C$IBM       @C@@@@@@@)@;C$INITIAL   @C@@@@@@@)[#VQ
)@@G@@C$LABEL     @C@@@@@@@)@"C$LION      @C@@@@@@@)@/C$MASS      @C@@@@@@@)@(VR
)@@G@@C$MCS       @C@@@@@@@)[^C$RPW       @C@@@@@@@)@_C$SDF       @C@@@@@@@)@:VS
)@@G@@C$SIIOB     @C@@@@@@@)@$C$SISAM     @C@@@@@@@)@&C$STRING    @C@@@@@@@)[[VT
)@@G@@C$SYMBIONT  @C@@@@@@@)[ C$TAPE      @C@@@@@@@)@%C2A$        @C@@@@@@@)@KVU
)@@G@@C2D$        @C@@@@@@@)@MC2E$        @C@@@@@@@)@NC2F$        @C@@@@@@@)@PVV
)@@G@@C2I$        @C@@@@@@@)@OC2M$        @C@@@@@@@)@QC2PP$       @C@@@@@@@)[/VW
)@@G@@C2S$        @C@@@@@@@)@LDBP$DB11    @C@@@@@@@)#-DBP$DB12    @C@@@@@@@)#+VX
)@@G@@DBP$DB13    @C@@@@@@@)#<DBP$DB14    @C@@@@@@@)#=DBP$DB15    @C@@@@@@@)#>VY
)@@G@@DBP$DB21    @C@@@@@@@)#&DBP$DB22    @C@@@@@@@)#$DBP$DB23    @C@@@@@@@)#*VZ
)@@G@@DBP$DB24    @C@@@@@@@)#(DBP$DB25    @C@@@@@@@)#%DBP$DB31    @C@@@@@@@)#:WA
)@@G@@DBP$DB32    @C@@@@@@@)#?DBP$DB33    @C@@@@@@@)#!DBP$DB34    @C@@@@@@@)#,WB
)@@G@@DBP$DB35    @C@@@@@@@)#\DBP$DB41    @C@@@@@@@)#0DBP$DB42    @C@@@@@@@)#1WC
)@@G@@DBP$DB43    @C@@@@@@@)#2DBP$DB44    @C@@@@@@@)#3DBP$DB45    @C@@@@@@@)#4WD
)@@G@@DBP$DB51    @C@@@@@@@)#5DBP$DB52    @C@@@@@@@)#6DBP$DB53    @C@@@@@@@)#7WE
)@@G@@DBP$DB54    @C@@@@@@@)#8DBP$DB55    @C@@@@@@@)#9DBP$IB1     @C@@@@@@@)#WWF
)@@G@@DBP$IB2     @C@@@@@@@)#XDBP$IB3     @C@@@@@@@)#YDBP$IB4     @C@@@@@@@)#ZWG
)@@G@@DBP$IB5     @C@@@@@@@)#)DIAG$       @C@@@@@@@)]*DMATH$      @C@@@@@@@)@]WH
)@@G@@DMRCTR$     @C@@@@)[T@C@DMRMB$      @C@@@@)[XP@@DMRMB2$     @C@@@@)[YP@@WI
)@@G@@DMRMT$      @C@@@@)@9@C@DMR$        @C@@@@@@@)@9DMR1$       @C@@@@@@@)[TWJ
)@@G@@DMR2$       @C@@@@@@@)[UDMR3$       @C@@@@@@@)[VDMR4$       @C@@@@@@@)[WWK
)@@G@@DMR5$       @C@@@@@@@)[XDMR6$       @C@@@@@@@)[YDPY$BK      @C@@@@@@@)]\WL
)@@G@@DRU$DB1     @C@@@@@@@)^ODRU$DB10    @C@@@@@@@)^XDRU$DB2     @C@@@@@@@)^PWM
)@@G@@DRU$DB3     @C@@@@@@@)^QDRU$DB4     @C@@@@@@@)^RDRU$DB5     @C@@@@@@@)^SWN
)@@G@@DRU$DB6     @C@@@@@@@)^TDRU$DB7     @C@@@@@@@)^UDRU$DB8     @C@@@@@@@)^VWO
)@@G@@DRU$DB9     @C@@@@@@@)^WDST$BK      @C@@@@@@@)]6DUMDB$      @C@@@@@@@)# WP
)@@G@@DUMLK$      @C@@@@@@@)#^ED$         @C@@@@@@@)@BERRMSGBDI$  @C@@@@@@@)]<WQ
)@@G@@E$RROR$     @C@@@@@@@)#@FFL$BK      @C@@@@@@@)]4FI$HBK      @C@@@@@@@)#.WR
)@@G@@FLIT$       @C@@@@@@@)@CFMS8BDI$    @C@@@@@@@)]+FRM$BK      @C@@@@@@@)]_WS
)@@G@@FTN$CHKU    @C@@@@@@@)[PFTN$E       @C@@@@@@@)@XFTN$U       @C@@@@@@@)@VWT
)@@G@@FTN$XI      @C@@@@@@@)[OFTN$XR      @C@@@@@@@)@WFTN$YI      @C@@@@@@@)[NWU
)@@G@@FTN$1       @C@@@@@@@)@RFTN$2       @C@@@@@@@)@SFTN$3       @C@@@@@@@)@TWV
)@@G@@FTN$4       @C@@@@@@@)@UFTN$4S      @C@@@@@@@)]!FURPR$      @C@@@@@@@)@DWW
)@@G@@HLP$BK      @C@@@@@@@)#OHPLAR$      @C@@@@@@@)[$HVTS$AC1    @C@@@@@@@)[JWX
)@@G@@HVTS$AC2    @C@@@@@@@)]@HVTS$APL    @C@@@@@@@)#UHVTS$BCOM   @C@@@@@@@)][WY
)@@G@@HVTS$BFTN   @C@@@@@@@)^2HVTS$BRUN   @C@@@@@@@)]]HVTS$BSCN   @C@@@@@@@)]#WZ
)@@G@@HVTS$CB     @C@@@@@@@)[DHVTS$CON    @C@@@@@@@)^1HVTS$CRE    @C@@@@@@@)]^XA
)@@G@@HVTS$DAT    @C@@@@@@@)] HVTS$EXP    @C@@@@@@@)]AHVTS$FCOM   @C@@@@@@@)#RXB
)@@G@@HVTS$FIN    @C@@@@@@@)]BHVTS$FRUN   @C@@@@@@@)#SHVTS$FSCN   @C@@@@@@@)#TXC
)@@G@@HVTS$FTNBE  @C@@@@@@@)^!HVTS$FTNB1  @C@@@@@@@)^(HVTS$FTNB2  @C@@@@@@@)^%XD
)@@G@@HVTS$FTNB4  @C@@@@@@@)^:HVTS$FTNHELP@C@@@@@@@)^?HVTS$FTNL   @C@@@@@@@)^\XE
)@@G@@HVTS$FTNLR  @C@@@@@@@)^0HVTS$FTN4YI @C@@@@@@@)^,HVTS$HEL    @C@@@@@@@)]CXF
)@@G@@HVTS$HELP   @C@@@@@@@)]DHVTS$II     @C@@@@@@@)]EHVTS$LIS    @C@@@@@@@)]FXG
)@@G@@HVTS$LOC    @C@@@@@@@)]GHVTS$MAS    @C@@@@@@@)]HHVTS$MSG    @C@@@@@@@)]IXH
)@@G@@HVTS$OLD    @C@@@@@@@)]JHVTS$PUN    @C@@@@@@@)]NHVTS$SAV    @C@@@@@@@)]KXI
)@@G@@HVTS$SNP    @C@@@@@@@)]LHVTS$STA    @C@@@@@@@)]MIDX$BK      @C@@@@@@@)].XJ
)@@G@@ISICB$      @C@@@@@@@)@GLOG$BK      @C@@@@@@@)],LUT$BK      @C@@@@@@@)]'XK
)@@G@@MAR$BK      @C@@@@@@@)#PMASM$       @C@@@@@@@)[SMCH$BK      @C@@@@@@@)];XL
)@@G@@MCSNCB$BDI  @C@@@@@@@)#"MCSUCB$BDI  @C@@@@@@@)#_MDC$        @C@@@@@@@)[KXM
)@@G@@MDEF$       @C@@@@@@@)^*MDP$        @C@@@@@@@)[LMINT$       @C@@@@@@@)^$XN
)@@G@@MSG$BK      @C@@@@@@@)]0NIOCB$      @C@@@@@@@)@^NUALG$I12   @C@@@@@@@)@+XO
)@@G@@NUALG$I3    @C@@@@@@@)@<NUALG$I4    @C@@@@@@@)@=NWBCB$      @C@@@@@@@)@AXP
)@@G@@OPN$BK      @C@@@@@@@)]1PAS$        @C@@@@@@@)#CPIRCB$      @C@@@@@@@)[3XQ
)@@G@@PLS$E       @C@@@@@@@)[IPLS$R       @C@@@@@@@)[GPLS$U       @C@@@@@@@)[BXR
)@@G@@PLS$1       @C@@@@@@@)[CPLS$2       @C@@@@@@@)[EPLS$3       @C@@@@@@@)[FXS
)@@G@@PLS$4       @C@@@@@@@)[HPLUM$BANK4  @C@@@@@@@)#JPLUM$BANK6  @C@@@@@@@)#KXT
)@@G@@PL1$E       @C@@@@@@@)[?PL1$R       @C@@@@@@@)[0PL1$1       @C@@@@@@@)[!XU
)@@G@@PL1$2A      @C@@@@@@@)[:PL1$2B      @C@@@@@@@)[,PL1$2C      @C@@@@@@@)#QXV
)@@G@@PL1$3       @C@@@@@@@)[\PL1$4       @C@@@@@@@)[1PL1$5       @C@@@@@@@)[2XW
)@@G@@PRMCDB$     @C@@@@@@@)^YPRMG$2      @C@@@@@@@)^ZPRMG$3      @C@@@@@@@)^)XX
)@@G@@PRT$BK      @C@@@@@@@)]9QEDIT$      @C@@@@@@@)@0QPABK$      @C@@@@@@@)]%XY
)@@G@@QPRBK$      @C@@@@@@@)](RALPH$      @C@@@@@@@)[&RMATH$      @C@@@@@@@)@[XZ
)@@G@@RPG$1       @C@@@@@@@)@!RPG$2       @C@@@@@@@)@,RPG$3       @C@@@@@@@)@\YA
)@@G@@RSFUL$      @C@@@@@@@)[;RSPAR$      @C@@@@@@@)[9SCANNER$    @C@@@@@@@)[*YB
)@@G@@SCHBNK$     @C@@@@@@@)[RSCPAR$      @C@@@@@@@)@)SFLIT$      @C@@@@@@@)@8YC
)@@G@@SM$ERR      @C@@@@@@@)^NSM$EST      @C@@@@@@@)^MSM$INIT     @C@@@@@@@)^JYD
)@@G@@SM$MERGE    @C@@@@@@@)^LSM$SORT     @C@@@@@@@)^KSNO$C       @C@@@@@@@)#LYE
)@@G@@SNO$X       @C@@@@@@@)#MSPICB$      @C@@@@@@@)@ESRC$BK      @C@@@@@@@)]5YF
)@@G@@SRTINIT$    @C@@@@@@@)]:SRTUB$      @C@@@@@@@)]?SRT$BK      @C@@@@@@@)]8YG
)@@G@@STAT$       @C@@@@@@@)@'S$ML        @C@@@@@@@)#DS$RT0       @C@@@@@@@)#EYH
)@@G@@S$R1        @C@@@@@@@)#FS$R2        @C@@@@@@@)#GS$R3        @C@@@@@@@)#HYI
)@@G@@S$R4        @C@@@@@@@)#ITASKS$      @C@@@@@@@)#VTASK$       @C@@@@@@@)@-YJ
)@@G@@TELNET$     @C@@@@@@@)#[TFC$IO      @C@@@@@@@)[4TFLIT$      @C@@@@@@@)@7YK
)@@G@@TFR$BK      @C@@@@@@@)]7TUT$BK      @C@@@@@@@)]"T$SCRN      @C@@@@@@@)@FYL
)@@G@@UMEDD$      @C@@@@@@@)#]UMEDI$      @C@@@@@@@)#NUMEDL$      @C@@@@@@@)##YM
)@@G@@USR$BK      @C@@@@@@@)]3UTILITY$    @C@@@@@@@)[%UTS4CB$     @C@@@@@@@)^FYN
)@@G@@WHURP$BDI   @C@@@@@@@)#A@F@]@@'QUESTIONS THAT CAN BE COMPRESSED INTO "WHYO
)@@G@@AT TO PRODUCE".  THE'   @F@@@]QUESTIONS THAT CAN BE COMPRESSED INTO "WHAYP
)@@G@@@@^@@@@@^@@@@@^@^.@N8@@@ABORT$      @C@@@@@@@@@EABR$        @C@@@@@@@@@RYQ
)@@G@@ABSAD$      @C@@@@@@@@@SABSR$       @C@@@@@@@@@$ABSW$       @C@@@@@@@@@JYR
)@@G@@ACCNT$      @C@@@@@@@@[3ACLIST$     @C@@@@@@@@[-ACQ$        @C@@@@@@@@@IYS
)@@G@@ACSF$       @C@@@@@@@@[)ACT$        @C@@@@@@@@[$AC$NIT      @C@@@@@@@@KSYT
)@@G@@ADACT$      @C@@@@@@@@[?ADED$       @C@@@@@@@@[1APCHCA$     @C@@@@@@@@@_YU
)@@G@@APCHCN$     @C@@@@@@@@@.APNCHA$     @C@@@@@@@@@;APRINT$     @C@@@@@@@@@8YV
)@@G@@APRNTA$     @C@@@@@@@@@9APRNT$      @C@@@@@@@@@8APRTCA$     @C@@@@@@@@@"YW
)@@G@@APRTCN$     @C@@@@@@@@@/APUNCH$     @C@@@@@@@@@'APU$        @C@@@@@@@@]LYX
)@@G@@AREADA$     @C@@@@@@@@[7AREAD$      @C@@@@@@@@[6ASCII$      @C@@@@@@@@@[YY
)@@G@@ATREAD$     @C@@@@@@@@[8AWAIT$      @C@@@@@@@@[WBANK$       @C@@@@@@@@[0YZ
)@@G@@BBEOF$      @C@@@@@@@@@YBDR$        @C@@@@@@@@@?BDSPT$      @C@@@@@@@@[HZA
)@@G@@BDW$        @C@@@@@@@@@^BRD$        @C@@@@@@@@@OBSD$        @C@@@@@@@@@XZB
)@@G@@BSF$        @C@@@@@@@@@:BSRD$       @C@@@@@@@@@ZBT$DIS      @C@@@@@@@@K?ZC
)@@G@@BT$ENA      @C@@@@@@@@K!CADD$       @C@@@@@@@@@\CALL$       @C@@@@@@@@K6ZD
)@@G@@CA$ASG      @C@@@@@@@@KDCA$REL      @C@@@@@@@@KECEND$       @C@@@@@@@@[@ZE
)@@G@@CGET$       @C@@@@@@@@@,CJOIN$      @C@@@@@@@@[(CKRS$       @C@@@@@@@@]^ZF
)@@G@@CLIST$      @C@@@@@@@@[:CMD$        @C@@@@@@@@@(CMH$        @C@@@@@@@@@%ZG
)@@G@@CMI$        @C@@@@@@@@@$CMO$        @C@@@@@@@@@*CMSA$       @C@@@@@@@@@:ZH
)@@G@@CMS$        @C@@@@@@@@@>CMT$        @C@@@@@@@@@&COM$        @C@@@@@@@@@CZI
)@@G@@COND$       @C@@@@@@@@@6CO$MIT      @C@@@@@@@@K/CPOOL$      @C@@@@@@@@@!ZJ
)@@G@@CQUE$       @C@@@@@@@@[JCREG$       @C@@@@@@@@]ECREL$       @C@@@@@@@@[%ZK
)@@G@@CRTN$       @C@@@@@@@@@XCR$ELG      @C@@@@@@@@KLCR$LGR      @C@@@@@@@@KKZL
)@@G@@CR$LOG      @C@@@@@@@@KJCR$PHS      @C@@@@@@@@KGCR$VAL      @C@@@@@@@@KUZM
)@@G@@CSF$        @C@@@@@@@@@JCSF$$       @C@@@@@@@@C#CS$LOG      @C@@@@@@@@KHZN
)@@G@@CS$OVR      @C@@@@@@@@KICS$PHS      @C@@@@@@@@KFCTSA$       @C@@@@@@@@[OZO
)@@G@@CTSQ$       @C@@@@@@@@[MCTS$        @C@@@@@@@@[NCW$         @C@@@@@@@@@EZP
)@@G@@CYCLIM$     @C@@@@@@@@@ DACT$       @C@@@@@@@@[*DADD$       @C@@@@@@@@@-ZQ
)@@G@@DATE$       @C@@@@@@@@@MDBACK$      @C@@@@@@@@@TDBB$        @C@@@@@@@@@YZR
)@@G@@DBITS$      @C@@@@@@@@@SDCYC$       @C@@@@@@@@@WDGETP$      @C@@@@@@@@@IZS
)@@G@@DGET$       @C@@@@@@@@@HDKEY$       @C@@@@@@@@@XDK$ONS      @C@@@@@@@@K'ZT
)@@G@@DLAPS$      @C@@@@@@@@@UDLINK$      @C@@@@@@@@@)DMBTS$      @C@@@@@@@@@MZU
)@@G@@DMBT$       @C@@@@@@@@@LDM$EOS      @C@@@@@@@@K_DM$FAC      @C@@@@@@@@K*ZV
)@@G@@DM$IO       @C@@@@@@@@K(DM$IOW      @C@@@@@@@@K%DM$RBK      @C@@@@@@@@L@ZW
)@@G@@DM$SOS      @C@@@@@@@@K"DM$WT       @C@@@@@@@@K:DNLOD$      @C@@@@@@@@]QZX
)@@G@@DREAD$      @C@@@@@@@@@KDREG$       @C@@@@@@@@@ZDUNLD$      @C@@@@@@@@@VZY
)@@G@@EABT$       @C@@@@@@@@@QEACQ$       @C@@@@@@@@@JEDJS$       @C@@@@@@@@@^ZZ
)@@G@@EDLOAD$     @C@@@@@@@@C@EQUIP$      @C@@@@@@@@@FERROR$$     @C@@@@@@@@C[AA
)@@G@@ERRPR$      @C@@@@@@@@]]ERR$        @C@@@@@@@@@)EXIT$       @C@@@@@@@@@DAB
)@@G@@EXSNP$      @C@@@@@@@@[UEX$CRD      @C@@@@@@@@K$FACIL$      @C@@@@@@@@[GAC
)@@G@@FACIT$      @C@@@@@@@@[<FAC$$       @C@@@@@@@@C@FBLKSX$     @C@@@@@@@@@ AD
)@@G@@FCREG$      @C@@@@@@@@K>FC$SSN      @C@@@@@@@@K<FEQP$       @C@@@@@@@@@CAE
)@@G@@FFILEX$     @C@@@@@@@@@^FFORK$      @C@@@@@@@@[TFITEM$      @C@@@@@@@@@UAF
)@@G@@FL$BOX      @C@@@@@@@@K,FORK$       @C@@@@@@@@@FFREELX$     @C@@@@@@@@@AAG
)@@G@@FSF$        @C@@@@@@@@@%FS$REC      @C@@@@@@@@K;GW$         @C@@@@@@@@@HAH
)@@G@@IALL$       @C@@@@@@@@[[IALL$$      @C@@@@@@@@C]IDENT$      @C@@@@@@@@@WAI
)@@G@@II$         @C@@@@@@@@@RIMI$        @C@@@@@@@@[9INFILE$     @C@@@@@@@@@#AJ
)@@G@@INFO$       @C@@@@@@@@[IINT$        @C@@@@@@@@@VIOADH$      @C@@@@@@@@]AAK
)@@G@@IOARB$      @C@@@@@@@@@LIOAXI$      @C@@@@@@@@@KIODYA$      @C@@@@@@@@@ AL
)@@G@@IOI$        @C@@@@@@@@@]IOLNK$      @C@@@@@@@@] IOWI$       @C@@@@@@@@@OAM
)@@G@@IOW$        @C@@@@@@@@@#IOXI$       @C@@@@@@@@@PIO$         @C@@@@@@@@@[AN
)@@G@@LABEL$      @C@@@@@@@@@TLCORE$      @C@@@@@@@@@=LEVEL$      @C@@@@@@@@]BAO
)@@G@@LNAME$      @C@@@@@@@@@DLOAD$       @C@@@@@@@@[DLOG$        @C@@@@@@@@]CAP
)@@G@@MB$         @C@@@@@@@@@(MCORE$      @C@@@@@@@@@<MCSTAT$     @C@@@@@@@@@GAQ
)@@G@@MCT$        @C@@@@@@@@@-ME$GET      @C@@@@@@@@K3MF$         @C@@@@@@@@@*AR
)@@G@@MODE$       @C@@@@@@@@@EMSALL$      @C@@@@@@@@@0MSCON$      @C@@@@@@@@[PAS
)@@G@@MSSUM$      @C@@@@@@@@[0MS$         @C@@@@@@@@@!MUSER$      @C@@@@@@@@@)AT
)@@G@@NAME$       @C@@@@@@@@[&NRT$        @C@@@@@@@@@2OPT$        @C@@@@@@@@@3AU
)@@G@@PB$CON      @C@@@@@@@@K]PB$DIS      @C@@@@@@@@K#PCHCA$      @C@@@@@@@@[5AV
)@@G@@PCHCN$      @C@@@@@@@@[4PCTBD$      @C@@@@@@@@@[PCT$        @C@@@@@@@@@4AW
)@@G@@PFD$        @C@@@@@@@@[APFI$        @C@@@@@@@@[^PFS$        @C@@@@@@@@[ AX
)@@G@@PFTEXT$     @C@@@@@@@@W@PFUWL$      @C@@@@@@@@[BPFWL$       @C@@@@@@@@[CAY
)@@G@@PI$NIT      @C@@@@@@@@K@PNCHA$      @C@@@@@@@@[>PRINT$      @C@@@@@@@@@IAZ
)@@G@@PRIV$       @C@@@@@@@@]OPRMDB$      @C@@@@@@@@]KPRMGA$      @C@@@@@@@@]JBA
)@@G@@PRNTA$      @C@@@@@@@@[=PRTCA$      @C@@@@@@@@[!PRTCN$      @C@@@@@@@@[ZBB
)@@G@@PSA$        @C@@@@@@@@@UPSF$        @C@@@@@@@@@VPSR$        @C@@@@@@@@[\BC
)@@G@@PTTRAP$     @C@@@@@@@@)^PT$MN8      @C@@@@@@@@@DPUALT$      @C@@@@@@@@@CBD
)@@G@@PUNCH$      @C@@@@@@@@[SRB$         @C@@@@@@@@@LRDL$        @C@@@@@@@@@PBE
)@@G@@READA$      @C@@@@@@@@@+READ$       @C@@@@@@@@@HRECEV$      @C@@@@@@@@)#BF
)@@G@@REL$        @C@@@@@@@@@NREP$BIT     @C@@@@@C@@@@REWI$       @C@@@@@@@@@-BG
)@@G@@REW$        @C@@@@@@@@@)RLIB$       @C@@@@041082RL$BAK      @C@@@@@@@@K.BH
)@@G@@ROUTE$      @C@@@@@@@@[VRPCTA$      @C@@@@@@@_8@RR$         @C@@@@@@@@@MBI
)@@G@@RSAGAW$     @C@@@@@@@@@&RSBAT$      @C@@@@@@@@@)RSCNTL$     @C@@@@@@@@@DBJ
)@@G@@RSDEM$      @C@@@@@@@@@*RSGAW$      @C@@@@@@@@@/RSGDEM$     @C@@@@@@@@@=BK
)@@G@@RSGET$      @C@@@@@@@@@KRSGIO$      @C@@@@@@@@@.RSGPR$      @C@@@@@@@@@MBL
)@@G@@RSGPU$      @C@@@@@@@@@LRSGTA$      @C@@@@@@@@@8RSGTI$      @C@@@@@@@@@3BM
)@@G@@RSGTW$      @C@@@@@@@@@4RSI$        @C@@@@@@@@[ERSNOT$      @C@@@@@@@@@5BN
)@@G@@RSPLST$     @C@@@@@@@@@>RSPUN$      @C@@@@@@@@@-RSPUT$      @C@@@@@@@@@CBO
)@@G@@RSTRA$      @C@@@@@@@@@1RSTRD$      @C@@@@@@@@@#RSTRM$      @C@@@@@@@@@0BP
)@@G@@RSTRO$      @C@@@@@@@@@]RSTRY$      @C@@@@@@@@@[RSWAP$      @C@@@@@@@@[XBQ
)@@G@@RTN$        @C@@@@@@@@K7RT$         @C@@@@@@@@@1RT$INT      @C@@@@@@@@K^BR
)@@G@@RT$OUT      @C@@@@@@@@K RT$PSD      @C@@@@@@@@K1RT$PSI      @C@@@@@@@@K0BS
)@@G@@RT$PSS      @C@@@@@@@@L[RT$SCH      @C@@@@@@@@K)RT$TRS      @C@@@@@@@@KBBT
)@@G@@R$          @C@@@@@@@@@KSABORT$     @C@@@@@@@@]PSCRB$       @C@@@@@@@@@=BU
)@@G@@SCR$        @C@@@@@@@@@<SDEL$       @C@@@@@@@@]MSD$         @C@@@@@@@@@WBV
)@@G@@SEND$       @C@@@@@@@@)]SETBP$      @C@@@@@@@@[,SETC$       @C@@@@@@@@@5BW
)@@G@@SIO$        @C@@@@@@@@][SITID$      @C@@@@@@@@@]SMU$        @C@@@@@@@@]DBX
)@@G@@SM$         @C@@@@@@@@@+SNAP$       @C@@@@@@@@[QSPRNT$      @C@@@@@@@@]NBY
)@@G@@SRD$        @C@@@@@@@@@YSREG$       @C@@@@@@@@]FSTAB$       @C@@@@@@@@]IBZ
)@@G@@STATUS$     @C@@@@@@@@)DSUMOD$      @C@@@@@@@@]HSUP$        @C@@@@@@@@@BCA
)@@G@@SUVAL$      @C@@@@@@@@]GSWAIT$      @C@@@@@@@@[#SWTCH$      @C@@@@@@@@[RCB
)@@G@@SW$         @C@@@@@@@@@FSYMB$       @C@@@@@@@@]@SYSBAL$     @C@@@@@@@@["CC
)@@G@@SYSER$      @C@@@@@@@@]#TCORE$      @C@@@@@@@@K8TDATE$      @C@@@@@@@@@?CD
)@@G@@TFORK$      @C@@@@@@@@@GTIME$       @C@@@@@@@@@NTINTL$      @C@@@@@@@@[YCE
)@@G@@TLBL$       @C@@@@@@@@[+TPFLG$      @C@@@@@@@@K2TPLIB$      @C@@@@@@@@K4CF
)@@G@@TPLOG$      @C@@@@@@@@KVTREAD$      @C@@@@@@@@[]TRMRG$      @C@@@@@@@@[KCG
)@@G@@TRTIM$      @C@@@@@@@@K\TRUN$       @C@@@@@@@@@]TSA$        @C@@@@@@@@@SCH
)@@G@@TSF$        @C@@@@@@@@@TTSQCL$      @C@@@@@@@@[FTSQRG$      @C@@@@@@@@[LCI
)@@G@@TSWAP$      @C@@@@@@@@[XTWAIT$      @C@@@@@@@@@0UK$ONS      @C@@@@@@@@KWCJ
)@@G@@UNLCK$      @C@@@@@@@@@7UNL$        @C@@@@@@@@@QUNTR$       @C@@@@@@@@@^CK
)@@G@@UO$AND      @C@@@@@@@@KXUO$GET      @C@@@@@@@@KYUO$OR       @C@@@@@@@@KZCL
)@@G@@USER$       @C@@@@@@@@[_USRID$      @C@@@@@@@@@[UT$DEL      @C@@@@@@@@KQCM
)@@G@@UT$EAQ      @C@@@@@@@@KMUT$ERQ      @C@@@@@@@@KNUT$TIM      @C@@@@@@@@KRCN
)@@G@@UT$UPA      @C@@@@@@@@KOUT$UPR      @C@@@@@@@@KPWAIT$       @C@@@@@@@@@ACO
)@@G@@WALL$       @C@@@@@@@@@ZWANY$       @C@@@@@@@@@BWEF$        @C@@@@@@@@@DCP
)@@G@@WML$        @C@@@@@@@@)@W$          @C@@@@@@@@@CW$R$        @C@@@@@@@@@>CQ
)@@G@@XCTS$       @C@@@@@@@@[2XFR$        @C@@@@@@@@K5XRS$        @C@@@@@@@@K9CR
)@@G@@OG ENTRY (FIXED DECIMAL) ;    @^@@@@-0/164,164   CU2800-AN  @A@@@@ DECLACS
)@@G@@RE 1 LOG STATIC EXTERNAL)@@[U@@@E@@@@FC@[H[#F^C@[ IAG@[:M?@@[+P,[@[!S'@@CT
)@@G@@[-W:B_@\Z,@_@/+.[]@@@@__@@@@@@AA@@@@)@F[M*@@@)@@@@@@@@/K@@@ON?L@@@Q8W@@@CU
)@@G@@A^/@@ A@?@@^A^W@@#^@)^@)      @@[@@@@B^@[AAB@@@@)@O[N@^@K[@@@@@@@@/KF@@@CV
)@@G@@M#/)@@&;0@@[O@)@@GC@0@@#C8J@@HQ^1@@@R^\@@EC*1@@]/\0@@2AC@@@@)@Y[]^[@K@K@CW
)@@G@@)@>@M@R@?@@^9?K@@]/K@@@>Q^L@@#C8[@@@/\0@@:/K@@@>/\0@@2Q8W@@@A^W@@#AD@@@@CX
)@@G@@)@$[U@@K)@@@/KJ@@@C@[@@[ )[@@]'=@@@@*)[@@]C8@@@[[@[@@[/KF@@@[^?@@ [@W@@^CY
)@@G@@Q^/@@ AE@@@@)@2[UK[@@[@@C@)@@G/K@@@ON?L@@@/KJ@@@/\,@@][C-@@ C@-@@F/^)@@8CZ
)@@G@@CC-@@ /K@@@9(^[@@]AF@@@@)@.[U@@@@@@@[K<@@@[W<@@@/?+@@@O80@@[[O<@@@/KF@@@DA
)@@G@@')])@@E/,@@@/\_@@^*^[@@]C@1@@FAG@@@@)[C[UK@@@K@@/?)@[E[=<@@@[*<@@@[?<@@@DB
)@@G@@[0<@@@[4<@@@/?+@@@O80@@[[)<@@@/?)@[#[S<@@@AH@@@@@@^@@^@@C@@[@@E@@D@@,@@]DC
)@@G@@@@E@@@@@@@[N)@@@@@@@@@@@PSR$        AECHAR$     @@[@@@@@@@@/AEDITX$     DD
)@@G@@@@[@@@@@@@@+ECHAR$      @@[@@@@@@@@/ECLEAR$     @@[@@@@@@@@'ECLR$$      DE
)@@G@@@@[@@@@@@@@OEDITR$      @@[@@@@@@@@YEDITX$      @@[@@@@@@@@+EDIT$       DF
)@@G@@@@[@@@@@@@@JE$CHAR$     @@[@@@@@@@@@@@@@@@@@@@@@D@@@@@@[@@@@@@@@@@@@@@@@DG
)@@G@@D@@@@@@#@@@@E LEVEL     *[S@@@*SDFF*@#@@@@NOT SYS$*RLIB$.   ___@@@@@@@@@DH
)@@G@@@@@@@@@@@@@@@@C@@@SAVE$LOAD   @@@@@]@@@@@@@@@@@@@@@@@@@@@[F7@@@[F7@@@[B^DI
)@@G@@@@@^PQ@@@@@@@@@@@@@@@[A,TPF$        ADDIT       *MASM*[@^DA!#@@@@@LIJSUBDJ
)@@G@@MH@__SC)E@@@[@]DA!@@@K@BK@D@@@[@ADX0D@@C9'G$$DIA#@#@[6@^A@[6K @@@@C)E@@@DK
)@@G@@[@]DX0@@@K@BK@D@@@[@AC71D@@@@@G$$R59#@#@]&@#D@]*K @@@@[@^D]##@@@@@UNTIL DL
)@@G@@MH@__8[@ DVY#)@C71OUTIDLE     K @@@^C)E@@@[@]DVY@@@K@BK@D@@@[@AC9]D@@@@@DM
)@@G@@REPEAT#@#@]&@@6@]&K @@@@[@^C'!#@@@@@SIGNALMH@__>[@^C9)#@@C9]GEQ   K @@@^DN
)@@G@@[@^C7T#@@@@@NOSAVEMH@__Y[@^C8%#@@@@@IN    MH@__"[@ C;D#)@C7TSUBROUTINE  DO
)@@G@@MH@__%[@^D#U#@@C8%EVENP K @@@D[@^D$<#@@@@@G$JMSKLBI@@@C)E@@@[@]D$<@@@K@BDP
)@@G@@K@D@@@[@AC75D@@D#UG$$T15#@#@#]@]N@# K @@@@[@^DDJ#@@@@@VARY  MH@__7C)E@@@DQ
)@@G@@[@]DDJ@@@K@BK@D@@@[@AD=RD@@C75BEGIN #@#@[;@@6@[;K @@@@C)E@@@[@]D=R@@@K@BDR
)@@G@@K@D@@@[@AC96D@@DDJAREAD$#@#@]9@@6@]9K @@[6[@^DLA#@@@@@DBANK MH@__TC)E@@@DS
)@@G@@[@]DLA@@@K@BK@D@@@[@ADNOD@@C96G$$I05#@#@]I@[B@]JK @@@@C)E@@@[@]DNO@@@K@BDT
)@@G@@K@D@@@[@AD=:D@@DLAG$$I20#@#@]N@]!@]OK @@@@C)E@@@[@]D=:@@@K@BK@D@@@[@AC;[DU
)@@G@@D@@DNOG$$D10#@#@]9@^W@]9K @@@@[@^DJP#@@@@@SPANS K @@@BC)E@@@[@]DJP@@@K@BDV
)@@G@@K@D@@@[@ADS_D@@C;[G$$B10#@#@[;@#X@][K @@@@C)E@@@[@]DS_@@@K@BK@D@@@[@AD#=DW
)@@G@@D@@DJPG$$C40#@#@]R@^H@]WK @@@@C)C@@@[@[D#=@@@@@B[@ C./A@@@@@G$NOFO0@@@@#DX
)@@G@@@@@@@[[@^D=L#@@D#=POS   K @@@[C)E@@@[@]D=L@@@K@BK@D@@@[@AC8ID@@@@@TREAD$DY
)@@G@@#@#@]9@@6@]9K @@[][@^C;H#@@@@@BY    MH@__1[@^D#Y#@@C8IODDP  K @@@E[@ADTLDZ
)@@G@@#@@@@@G$UMSKL^@@@@@@@___[^LK@[C)E@@@[@]DTL@@@K@BK@D@@@[@AC'.D@@D#YG$$PJTEA
)@@G@@#@#@]+@@6@]+K @@@@[@^DAP#@@@@@LEQ   K @@@AC)E@@@[@]DAP@@@K@BK@D@@@[@AD>$EB
)@@G@@D@@C'.G$$IFL#@#@[6@[\@[6K @@@#C)E@@@[@]D>$@@@K@BK@D@@@[@AD$(D@@DAPG$$CODEC
)@@G@@#@#@]_@@6@]_K @@@@C)E@@@[@]D$(@@@K@BK@D@@@[@AC9MD@@@@@G$$T16#@#@#]@#8@# ED
)@@G@@K @@@@[@ C7P#)@@@@CHANNEL     MH@__-[@^C7-#@@@@@G$UOM K @@@[[@^D$\#@@@@@EE
)@@G@@THEN  MH@__/C)E@@@[@]D$\@@@K@BK@D@@@[@ADZOD@@C7-G$$T20#@#@#]@ S@# K @@@@EF
)@@G@@C)E@@@[@]DZO@@@K@BK@D@@@[@AD= D@@@@@ESCAPE#@#@]?@@6@]?K @@@@C)E@@@[@]D= EG
)@@G@@@@@K@BK@D@@@[@AD>!D@@@@@READ$ #@#@]9@@6@]9K @@@HC)E@@@[@]D>!@@@K@BK@D@@@EH
)@@G@@[@AD%ND@@D= G$$G10#@#@]_@[;@#[K @@@@C)E@@@[@]D%N@@@K@BK@D@@@[@AD0JD@@D>!EI
)@@G@@G$$T99#@#@#]@ C@#BK @@@@C)E@@@[@]D0J@@@K@BK@D@@@[@AD\DD@@D%NG$$L40#@#@#DEJ
)@@G@@@@+@#MK @@@@C)E@@@[@]D\D@@@K@BK@D@@@[@AC;TD@@@@@G$$L39#@#@#D@^"@#LK @@@@EK
)@@G@@[@^D@U#@@@@@DNEQ  K @@@G[@^DS9#@@C;TOFLO  K @@@[C)E@@@[@]DS9@@@K@BK@D@@@EL
)@@G@@[@ADJ4D@@D@UG$$C29#@#@]R@#U@]WK @@@@C)E@@@[@]DJ4@@@K@BK@D@@@[@AD%ZD@@@@@EM
)@@G@@BASE  #@#@]D@@6@]DK @@@@C)E@@@[@]D%Z@@@K@BK@D@@@[@AC84D@@DJ4G$$L01#@#@#DEN
)@@G@@@#'@#EK @@@@[@ D[6#)@@@@CONTINGENCY MH@__*[@^DA$#@@C84INBUSYK @@@[C)E@@@EO
)@@G@@[@]DA$@@@K@BK@D@@@[@AD[RD@@D[6G$$TFL#@#@[6@#$@[6K @@@^[@^C'P#@@@@@SHIFT EP
)@@G@@K @@@[[@^D&R#@@D[REQ    K @@@[C)E@@@[@]D&R@@@K@BK@D@@@[@AD,.D@@C'PG$$T13EQ
)@@G@@#@#@#]@^D@#^K @@@@C)E@@@[@]D,.@@@K@BK@D@@@[@AD==D@@D&RG$$L34#@#@#D@]I@#LER
)@@G@@K @@@@C)F@@@[@]D==@@@K@DK@F@@@[@BC;>D)@@@@ATREAD$     #@#@]9@@6@]9K @@[8ES
)@@G@@[@^C"@#@@@@@ALT   K @@@I[@^C8E#@@C;>NEG   K @@@][@^DJV#@@@@@TO    MH@__2ET
)@@G@@C)E@@@[@]DJV@@@K@BK@D@@@[@ADNCD@@C8EENDBEG#@#@]#@@6@]#K @@@@C)E@@@[@]DNCEU
)@@G@@@@@K@BK@D@@@[@AC7JD@@DJVELSE  #@#@]M@@6@]MK @@@@C)E@@@[@]C7J@@@K@DK@F@@@EV
)@@G@@[@AD@YD)@@@@STRUC$OMN   @@]@[2@@6@[2[@^D@+#@@C7JNOFLO K @@@][@^C7.#@@D@YEW
)@@G@@CARRY K @@@#[@^DZ3#@@@@@TLEM  MH@__5C)E@@@[@]DZ3@@@K@BK@D@@@[@AC7XD@@C7.EX
)@@G@@G$$Z10#@#@]\@[[@]0K @@@@[@^D#Q#@@@@@IS    MH@__.[@^C'(#@@C7XG$JXMALBI/@@EY
)@@G@@[@^D4S#@@D#QGE    K @@@^C)E@@@[@]D4S@@@K@BK@D@@@[@ADTFD@@C'(G$$L70#@#@#REZ
)@@G@@@[_@#TK @@@@C)E@@@[@]DTF@@@K@BK@D@@@[@AC8.D@@@@@G$$C60#@#@]Y@[,@]ZK @@@@FA
)@@G@@[@ DNU#)@@@@POINTER     MH@__&C)F@@@[@]DNU@@@K@DK@F@@@[@BD5!D)@C8.CASENTFB
)@@G@@RY    #@#@]R@@6@]RK @@@@C)F@@@[@]D5!@@@K@DK@F@@@[@BD%>D)@DNUG$$DCU1     FC
)@@G@@#@#@#W@[S@#ZK @@@@C)E@@@[@]D%>@@@K@BK@D@@@[@ADT D@@@@@G$$L02#@#@#D@]J@#FFD
)@@G@@K @@@@C)E@@@[@]DT @@@K@BK@D@@@[@ADZCD@@@@@CASE  #@#@]Y@@6@]YK @@@@C)E@@@FE
)@@G@@[@]DZC@@@K@BK@D@@@[@AD5-D@@DT G$$R69#@#@]&@],@](K @@@@C)E@@@[@]D5-@@@K@BFF
)@@G@@K@D@@@[@AC8YD@@DZCG$$DCU#@#@#W@@6@#WK @@@@[@^C9"#@@@@@WHEN  MH@__![@^C".FG
)@@G@@#@@C8YLDJSUBMH@__R[@^B8Q#@@C9"ODD   K @@@AC)B@@@[@[B8Q@@@C@B[@^DAV]@@C".FH
)@@G@@G$FJ  @@@B8UC)B@@@[@]B8U@@@C@#C@ @@@#)#B.G@@@B8X@@AB8QC)B@@@[@]B.G@@@C@#FI
)@@G@@C@ @@@]@#B/,+@AB8U@@@B.JC)B@@@[@]B.J@@@C@#C@ @@@#)#B.0@@@B.M@@AB.GC)B@@@FJ
)@@G@@[@]B.0@@@C@#C@ @@@]@#B.%+@AB.J@@@B.3C)B@@@[@]B.3@@@C@#C@ @@@#)#D##@@@D##FK
)@@G@@@@[B.0C)A@@@[@[D##@@@C@#]@#B.%<@[B.3K @@JUC)B@@@[@]B.%@@@C@#C@ @@@]@#B.=FL
)@@G@@+@ B.0@@@B.!C)B@@@[@]B.!@@@C@#C@ @@@#)#D#@@@@D#@@@[B.%C)A@@@[@[D#@@@@C@#FM
)@@G@@]@#B.=<@[B.!K @@JUC)B@@@[@]B.=@@@C@#C@ @@@]@#B.Y+@^B.%@@@B.$C)B@@@[@]B.$FN
)@@G@@@@@C@#C@ @@@#)#D].@@@D].@@[B.=C)A@@@[@[D].@@@C@#]@#B.Y<@[B.$K @@JQC)B@@@FO
)@@G@@[@]B.Y@@@C@#C@ @@@]@#B.S+@#B.=@@@B.-C)B@@@[@]B.-@@@C@#C@ @@@#)#D]'@@@D]'FP
)@@G@@@@[B.YC)A@@@[@[D]'@@@C@#]@#B.S<@[B.-K @@JQC)B@@@[@]B.S@@@C@#C@ @@@]@#B.MFQ
)@@G@@+@]B.Y@@@B.VC)B@@@[@]B.V@@@C@#C@ @@@#)#D]7@@@D]7@@[B.SC)A@@@[@[D]7@@@C@#FR
)@@G@@]@#B.M<@[B.VK @@JMC)B@@@[@]B.M@@@C@#C@ @@@]@#B/,+@[B.S@@@B.PC)B@@@[@]B.PFS
)@@G@@@@@C@#C@ @@@#)#D]4@@@D]4@@[B.MC)A@@@[@[D]4@@@C@#]@#B/,<@[B.PK @@JMC)B@@@FT
)@@G@@[@]B/,@@@C@#C@ @@@]@#B/^+@ B.G@@@B/1C)B@@@[@]B/1@@@C@#C@ @@@#)#B/'@@@B/4FU
)@@G@@@@]B/,C)B@@@[@]B/'@@@C@#C@ @@@]@#B/4+@]B/1@@@B/.C)B@@@[@]B/.@@@C@#C@ @@@FV
)@@G@@#)#D[%@@@D[%@@[B/'C)A@@@[@[D[%@@@C@#]@#B/4<@[B/.K @@@]C)B@@@[@]B/4@@@C@#FW
)@@G@@C@ @@@]@#B/^+@[B/'@@@B/7C)B@@@[@]B/7@@@C@#C@ @@@#)#D[$@@@D[$@@[B/4C)A@@@FX
)@@G@@[@[D[$@@@C@#]@#B/^<@[B/7K @@@#C)B@@@[@]B/^@@@C@#C@ @@@]@#B;]+@^B/,@@@B/BFY
)@@G@@C)B@@@[@]B/B@@@C@#C@ @@@#)#B/W@@@B/E@@^B/^C)B@@@[@]B/W@@@C@#C@ @@@]@#B/QFZ
)@@G@@+@^B/B@@@B/ZC)B@@@[@]B/Z@@@C@#C@ @@@#)#D[F@@@D[F@@[B/WC)A@@@[@[D[F@@@C@#GA
)@@G@@]@#B/Q<@[B/ZK @@@IC)B@@@[@]B/Q@@@C@#C@ @@@]@#B/K+@#B/W@@@B/TC)B@@@[@]B/TGB
)@@G@@@@@C@#C@ @@@#)#D[C@@@D[C@@[B/QC)A@@@[@[D[C@@@C@#]@#B/K<@[B/TK @@@JC)B@@@GC
)@@G@@[@]B/K@@@C@#C@ @@@]@#B/E+@]B/Q@@@B/NC)B@@@[@]B/N@@@C@#C@ @@@#)#D[ @@@D[ GD
)@@G@@@@[B/KC)A@@@[@[D[ @@@C@#]@#B/E<@[B/NK @@@GC)B@@@[@]B/E@@@C@#C@ @@@]@#B;]GE
)@@G@@+@[B/K@@@B/HC)B@@@[@]B/H@@@C@#C@ @@@#)#D[]@@@D[]@@[B/EC)A@@@[@[D[]@@@C@#GF
)@@G@@]@#B;]<@[B/HK @@@HC)B@@@[@]B;]@@@C@#C@ @@@]@#B'S+@#B/^@@@B; C)B@@@[@]B; GG
)@@G@@@@@C@#C@ @@@#)#B;2@@@B;O@@CB;]C)B@@@[@]B;2@@@C@#C@ @@@]@#B;?+@CB; @@@B;5GH
)@@G@@C)B@@@[@]B;5@@@C@#C@ @@@#)#D@I@@@D@I@@[B;2C)A@@@[@[D@I@@@C@#]@#B;?<@[B;5GI
)@@G@@K @@IYC)B@@@[@]B;?@@@C@#C@ @@@]@#B;&+@BB;2@@@B;\C)B@@@[@]B;\@@@C@#C@ @@@GJ
)@@G@@#)#D@F@@@D@F@@[B;?C)A@@@[@[D@F@@@C@#]@#B;&<@[B;\K @@IYC)B@@@[@]B;&@@@C@#GK
)@@G@@C@ @@@]@#B;)+@AB;?@@@B;(C)B@@@[@]B;(@@@C@#C@ @@@#)#D@C@@@D@C@@[B;&C)A@@@GL
)@@G@@[@[D@C@@@C@#]@#B;)<@[B;(K @@@CC)B@@@[@]B;)@@@C@#C@ @@@]@#B;I+@ B;&@@@B;<GM
)@@G@@C)B@@@[@]B;<@@@C@#C@ @@@#)#D@ @@@D@ @@[B;)C)A@@@[@[D@ @@@C@#]@#B;I<@[B;<GN
)@@G@@K @@@DC)B@@@[@]B;I@@@C@#C@ @@@]@#B;C+@^B;)@@@B;LC)B@@@[@]B;L@@@C@#C@ @@@GO
)@@G@@#)#C_/@@@C_/@@[B;IC)A@@@[@[C_/@@@C@#]@#B;C<@[B;LK @@@@C)B@@@[@]B;C@@@C@#GP
)@@G@@C@ @@@]@#B;U+@#B;I@@@B;FC)B@@@[@]B;F@@@C@#C@ @@@#)#C_9@@@C_9@@[B;CC)A@@@GQ
)@@G@@[@[C_9@@@C@#]@#B;U<@[B;FK @@@[C)B@@@[@]B;U@@@C@#C@ @@@]@#B;O+@]B;C@@@B;XGR
)@@G@@C)B@@@[@]B;X@@@C@#C@ @@@#)#D@]@@@D@]@@[B;UC)A@@@[@[D@]@@@C@#]@#B;O<@[B;XGS
)@@G@@K @@@]C)B@@@[@]B;O@@@C@#C@ @@@]@#B'S+@[B;U@@@B;RC)B@@@[@]B;R@@@C@#C@ @@@GT
)@@G@@#)#C__@@@C__@@[B;OC)A@@@[@[C__@@@C@#]@#B'S<@[B;RK @@@#C)B@@@[@]B'S@@@C@#GU
)@@G@@C@ @@@]@#B8X+@]B;]@@@B'VC)B@@@[@]B'V@@@C@#C@ @@@#)#B'=@@@B'%@@^B'SC)B@@@GV
)@@G@@[@]B'=@@@C@#C@ @@@]@#B'Y+@^B'V@@@B'$C)B@@@[@]B'$@@@C@#C@ @@@#)#C"$@@@C"$GW
)@@G@@@@[B'=C)A@@@[@[C"$@@@C@#]@#B'Y<@[B'$K @@@(C)B@@@[@]B'Y@@@C@#C@ @@@]@#B'0GX
)@@G@@+@#B'=@@@B'-C)B@@@[@]B'-@@@C@#C@ @@@#)#C"=@@@C"=@@[B'YC)A@@@[@[C"=@@@C@#GY
)@@G@@]@#B'0<@[B'-K @@@*C)B@@@[@]B'0@@@C@#C@ @@@]@#B'%+@]B'Y@@@B'3C)B@@@[@]B'3GZ
)@@G@@@@@C@#C@ @@@#)#C"!@@@C"!@@[B'0C)A@@@[@[C"!@@@C@#]@#B'%<@[B'3K @@@1C)B@@@HA
)@@G@@[@]B'%@@@C@#C@ @@@]@#B8X+@[B'0@@@B'!C)B@@@[@]B'!@@@C@#C@ @@@#)#C"%@@@C"%HB
)@@G@@@@[B'%C)A@@@[@[C"%@@@C@#]@#B8X<@[B'!K @@@0C)B@@@[@]B8X@@@C@#C@ @@@]@#DAVHC
)@@G@@+@[B'S@@@B8)C)B@@@[@]B8)@@@C@#C@ @@@#)#B91@@@B8<@@IB8XC)B@@@[@]B91@@@C@#HD
)@@G@@C@ @@@]@#B9:+@IB8)@@@B94C)B@@@[@]B94@@@C@#C@ @@@#)#C.0@@@C.0@@[B91C)A@@@HE
)@@G@@[@[C.0@@@C@#]@#B9:<@[B94K @@@1C)B@@@[@]B9:@@@C@#C@ @@@]@#B9>+@HB91@@@B9,HF
)@@G@@C)B@@@[@]B9,@@@C@#C@ @@@#)#C.!@@@C.!@@[B9:C)A@@@[@[C.!@@@C@#]@#B9><@[B9,HG
)@@G@@K @@@0C)B@@@[@]B9>@@@C@#C@ @@@]@#B9Z+@GB9:@@@B9*C)B@@@[@]B9*@@@C@#C@ @@@HH
)@@G@@#)#C.%@@@C.$@@]B9>C)A@@@[@[C.%@@@C@#]@#C.$<@]B9*K @@@@C)A@@@[@[C.$@@@C@#HI
)@@G@@]@#B9Z<@[C.%K @@IZC)B@@@[@]B9Z@@@C@#C@ @@@]@#B9T+@FB9>@@@B9+C)B@@@[@]B9+HJ
)@@G@@@@@C@#C@ @@@#)#C.=@@@C.-@@]B9ZC)A@@@[@[C.=@@@C@#]@#C.-<@]B9+K @@@@C)A@@@HK
)@@G@@[@[C.-@@@C@#]@#B9T<@[C.=K @@IZC)B@@@[@]B9T@@@C@#C@ @@@]@#B9N+@EB9Z@@@B9WHL
)@@G@@C)B@@@[@]B9W@@@C@#C@ @@@#)#C.Y@@@C.Y@@[B9TC)A@@@[@[C.Y@@@C@#]@#B9N<@[B9WHM
)@@G@@K @@@>C)B@@@[@]B9N@@@C@#C@ @@@]@#B9H+@DB9T@@@B9QC)B@@@[@]B9Q@@@C@#C@ @@@HN
)@@G@@#)#C.V@@@C.V@@[B9NC)A@@@[@[C.V@@@C@#]@#B9H<@[B9QK @@@=C)B@@@[@]B9H@@@C@#HO
)@@G@@C@ @@@]@#B9B+@CB9N@@@B9KC)B@@@[@]B9K@@@C@#C@ @@@#)#C.S@@@C.S@@[B9HC)A@@@HP
)@@G@@[@[C.S@@@C@#]@#B9B<@[B9KK @@@\C)B@@@[@]B9B@@@C@#C@ @@@]@#B85+@BB9H@@@B9EHQ
)@@G@@C)B@@@[@]B9E@@@C@#C@ @@@#)#C.P@@@C.P@@[B9BC)A@@@[@[C.P@@@C@#]@#B85<@[B9EHR
)@@G@@K @@@,C)B@@@[@]B85@@@C@#C@ @@@]@#B8\+@AB9B@@@B88C)B@@@[@]B88@@@C@#C@ @@@HS
)@@G@@#)#C.G@@@C.D@@]B85C)A@@@[@[C.G@@@C@#]@#C.D<@]B88K @@@:C)A@@@[@[C.D@@@C@#HT
)@@G@@]@#B8\<@[C.GK @@@!C)B@@@[@]B8\@@@C@#C@ @@@]@#B9[+@ B85@@@B82C)B@@@[@]B82HU
)@@G@@@@@C@#C@ @@@#)#C.A@@@C.#@@]B8\C)A@@@[@[C.A@@@C@#]@#C.#<@]B82K @@@:C)A@@@HV
)@@G@@[@[C.#@@@C@#]@#B9[<@[C.AK @@@!C)B@@@[@]B9[@@@C@#C@ @@@]@#B8;+@^B8\@@@B9^HW
)@@G@@C)B@@@[@]B9^@@@C@#C@ @@@#)#C.M@@@C.M@@[B9[C)A@@@[@[C.M@@@C@#]@#B8;<@[B9^HX
)@@G@@K @@@?C)B@@@[@]B8;@@@C@#C@ @@@]@#B8(+@#B9[@@@B8"C)B@@@[@]B8"@@@C@#C@ @@@HY
)@@G@@#)#C.J@@@C.J@@[B8;C)A@@@[@[C.J@@@C@#]@#B8(<@[B8"K @@@!C)B@@@[@]B8(@@@C@#HZ
)@@G@@C@ @@@]@#B8<+@]B8;@@@B8?C)B@@@[@]B8?@@@C@#C@ @@@#)#C.@@@@C.@@@[B8(C)A@@@IA
)@@G@@[@[C.@@@@C@#]@#B8<<@[B8?K @@@:C)B@@@[@]B8<@@@C@#C@ @@@]@#DAV+@[B8(@@@B8&IB
)@@G@@C)B@@@[@]B8&@@@C@#C@ @@@#)#C/.@@@C/.@@[B8<C)A@@@[@[C/.@@@C@#]@#DAV<@[B8&IC
)@@G@@K @@@%C)E@@@[@]DAV@@@K@BK@D@@@[@AC8 D@@@@@G$$EFL#@#@[6@]A@[6K @@@[[@ D5UID
)@@G@@#)@@@@LOOKFOR     MH@__3[@BB.6#)@C8 G$HBITS     L^@@@@@@@)@@[^LK@[C)B@@@IE
)@@G@@[@[B.6@@@C@B[@^C'B]@@@@@G$LCTR@@@B.'C)B@@@[@]B.'@@@C@#C@ @@@#)#D#J@@@D#JIF
)@@G@@@@[B.6C)A@@@[@[D#J@@@C@#]@#C'B<@[B.'K @@@][@^DUR#@@@@@VIA   MH@__PC)F@@@IG
)@@G@@[@]DUR@@@K@DK@F@@@[@BD%BD)@@@@ENDCASE     #@#@]<@@6@]<K @@@@C)E@@@[@]D%BIH
)@@G@@@@@K@BK@D@@@[@AD4YD@@DURG$$T25#@#@#]@]F@#BK @@@@C)E@@@[@]D4Y@@@K@BK@D@@@II
)@@G@@[@AC9=D@@D%BG$$L80#@#@#R@#3@#TK @@@@[@ C'9#)@@@@EXECSUB     MH@__X[@^D>JIJ
)@@G@@#@@C9=LE    K @@@AC)E@@@[@]D>J@@@K@BK@D@@@[@AD ED@@C'9G$$CAN#@#@];@@6@];IK
)@@G@@K @@@@C)C@@@[@[D E@@@@@B[@ D=1A@@@@@G$ERFO0@@@@#CD@[@[C)E@@@[@]D=1@@@K@BIL
)@@G@@K@D@@@[@ADO$D@@D EG$$D20#@#@]9@@<@]'K @@@@C)E@@@[@]DO$@@@K@BK@D@@@[@AC'5IM
)@@G@@D@@@@@G$$C10#@#@]R@^Q@]SK @@@@[@^DCD#@@@@@GT    K @@@ C)E@@@[@]DCD@@@K@BIN
)@@G@@K@D@@@[@AD=7E@@C'5G$$INC#@#@['@@6@['K @@@@C)E@@@[@]D=7@@@K@BK@D@@@[@AD>PIO
)@@G@@D@@DCDG$$D99#@#@]9@[8@]'K @@@@C)E@@@[@]D>P@@@K@BK@D@@@[@AC79D@@D=7G$$A10IP
)@@G@@#@#@];@^S@].K @@@@[@^D=F#@@@@@JGD   MH@__6C)E@@@[@]D=F@@@K@BK@D@@@[@AB97IQ
)@@G@@D@@C79READA$#@#@]9@@6@]9K @@@+C)B@@@[@[B97@@@C@B[@^DJ-]@@@@@G$KSF @@@B9;IR
)@@G@@C)B@@@[@]B9;@@@C@#C@ @@@#)#D#A@@@C.3@@AB97C)A@@@[@[D#A@@@C@#]@#D[!<@AB9;IS
)@@G@@K @@@#C)A@@@[@[D[!@@@C@#]@#D[I<@ D#AK @@@#C)A@@@[@[D[I@@@C@#]@#D@L<@^D[!IT
)@@G@@K @@@[C)A@@@[@[D@L@@@C@#]@#C"0<@#D[IK @@@#C)A@@@[@[C"0@@@C@#]@#C.3<@]D@LIU
)@@G@@K @@@[C)A@@@[@[C.3@@@C@#]@#DJ-<@[C"0K @@@]C)E@@@[@]DJ-@@@K@BK@D@@@[@AD!1IV
)@@G@@D@@B97G$$X01#@#@]#@@,@]AK @@@@C)E@@@[@]D!1@@@K@BK@D@@@[@AC9AD@@DJ-G$$L21IW
)@@G@@#@#@#D@#R@#KK @@@@[@^DX/#@@@@@STACK MH@__=C)E@@@[@]DX/@@@K@BK@D@@@[@AD$XIX
)@@G@@D@@C9AG$$R61#@#@]&@ (@]*K @@@@C)E@@@[@]D$X@@@K@BK@D@@@[@AC9,D@@@@@G$$T14IY
)@@G@@#@#@#]@@,@# K @@@@[@^DA-#@@@@@BASINGMH@__VC)E@@@[@]DA-@@@K@BK@D@@@[@ADJ'IZ
)@@G@@D@@C9,G$$DFL#@#@[6@]Z@[6K @@@@C)E@@@[@]DJ'@@@K@BK@D@@@[@AD%HD@@DA-G$$CLDJA
)@@G@@#@#@]F@@6@]FK @@@@C)E@@@[@]D%H@@@K@BK@D@@@[@AD4GD@@@@@G$$T26#@#@#]@#'@#BJB
)@@G@@K @@@@C)E@@@[@]D4G@@@K@BK@D@@@[@AD#MD@@D%HG$$L53#@#@#D@[;@#QK @@@@[@^D ^JC
)@@G@@#@@@@@G$DFLGMH@__"C)E@@@[@]D ^@@@K@BK@D@@@[@AD-9D@@@@@STRUC$#@#@[4@@6@[4JD
)@@G@@K @@@@C)E@@@[@]D-9@@@K@BK@D@@@[@AD%TD@@D ^G$$Z30#@#@]\@@?@]2K @@@@C)E@@@JE
)@@G@@[@]D%T@@@K@BK@D@@@[@AC'KD@@D-9G$$LAN#@#@#D@@6@#DK @@@@[@ C7(#)@@@@NOCHECJF
)@@G@@KING  MH@__N[@^C"9#@@@@@OR    MH@__'[@^D>3#@@C7(EVEN  K @@@ C)E@@@[@]D>3JG
)@@G@@@@@K@BK@D@@@[@ADW%D@@C"9G$$G20#@#@]_@^\@#[K @@@@C)E@@@[@]DW%@@@K@BK@D@@@JH
)@@G@@[@AC'-D@@@@@G$$R50#@#@]&@ Y@]$K @@@@[@^DJ$#@@DW%LT    K @@@#C)E@@@[@]DJ$JI
)@@G@@@@@K@BK@D@@@[@AC9ID@@@@@G$$X02#@#@]#@[O@]BK @@@@[@^D#(#@@@@@OFFSETMH@__+JJ
)@@G@@C)C@@@[@[D#(@@@@@B[@ DZ]A@@C9IG$$FJA0@@@@#[@LK@[C)E@@@[@]DZ]@@@K@BK@D@@@JK
)@@G@@[@AD&FD@@D#(G$$R62#@#@]&@[F@](K @@@@C)E@@@[@]D&F@@@K@BK@D@@@[@ADK@D@@@@@JL
)@@G@@G$$T11#@#@#]@ G@##K @@@@C)E@@@[@]DK@@@@K@BK@D@@@[@AC;PD@@@@@IF    #@#@]IJM
)@@G@@@@6@]IK @@@@[@^D*;#@@DK@DNE   K @@@GC)E@@@[@]D*;@@@K@BK@D@@@[@AD4MD@@@@@JN
)@@G@@G$$T23#@#@#]@#$@#AK @@@@C)E@@@[@]D4M@@@K@BK@D@@@[@AD5'D@@D*;G$$LGE#@#@#RJO
)@@G@@@@6@#RK @@@@C)E@@@[@]D5'@@@K@BK@D@@@[@ADAJD@@D4MG$$PRB#@#@#-@]K@#-K @@@@JP
)@@G@@C)E@@@[@]DAJ@@@K@BK@D@@@[@AC5HD@@@@@G$$GFL#@#@[6@@6@[6K @@@]C)B@@@[@[C5HJQ
)@@G@@@@@C@B[@^C7>]@@@@@G$JBIT@@@C5LC)B@@@[@]C5L@@@C@#C@ @@@#)#D46@@@D4%@@^C5HJR
)@@G@@C)B@@@[@[D46@@@C@#]@^D42<@^C5LK#@@@@@^@@@@C)B@@@[@[D42@@@C@#]@^D4,<@#D46JS
)@@G@@K#@@@@@C@@@@C)B@@@[@[D4,@@@C@#]@^D4%<@]D42K#@@@@@K@@@@C)B@@@[@[D4%@@@C@#JT
)@@G@@]@^C7><@[D4,K#@@@@@)@@@@[@^C"C#@@@@@AND   MH@__;[@^C;-#@@C7>NONZ  K @@@^JU
)@@G@@[@^DZ!#@@@@@AGEQ  K @@@HC)E@@@[@]DZ!@@@K@BK@D@@@[@AC'1D@@@@@ENDREP#@#@]\JV
)@@G@@@@6@]\K @@@][@^C-)#@@@@@GTE   K @@@^C)B@@@[@[C-)@@@C@B[@^D>9]@@C'1G$ALTTJW
)@@G@@@@@C-=C)B@@@[@]C-=@@@C@#C@ @@@#)#D>#@@@D>@@@AC-)C)A@@@[@[D>#@@@C@#]@#D>AJX
)@@G@@<@GC-=K @@@CC)A@@@[@[D>A@@@C@#]@#D>G<@FD>#K @@@BC)A@@@[@[D>G@@@C@#]@#D>DJY
)@@G@@<@^D>AK @@@[C)A@@@[@[D>D@@@C@#]@#D=.<@#D>GK @@@]C)A@@@[@[D=.@@@C@#]@#D>@JZ
)@@G@@<@]D>DK @@@^C)A@@@[@[D>@@@@C@#]@#D>9<@[D=.K @@@#C)E@@@[@]D>9@@@K@BK@D@@@KA
)@@G@@[@AC5OD@@C-)G$$TST#@#@#]@@6@#]K @@@@C)B@@@[@[C5O@@@C@B[@^C']]@@D>9G$XBITKB
)@@G@@@@@C5SC)B@@@[@]C5S@@@C@#C@ @@@#)#D5A@@@D4'@@^C5OC)B@@@[@[D5A@@@C@#]@^D5]KC
)@@G@@<@^C5SK#@@@@@@[@@@C)B@@@[@[D5]@@@C@#]@^D4"<@#D5AK#@@@@@@]@@@C)B@@@[@[D4"KD
)@@G@@@@@C@#]@^D4'<@]D5]K#@@@@@@^@@@C)B@@@[@[D4'@@@C@#]@^C']<@[D4"K#@@@@@@C@@@KE
)@@G@@[@ D>-#)@@@@REMOTESUB   MH@__QC)E@@@[@]D>-@@@K@BK@D@@@[@AD&LD@@C']G$$A30KF
)@@G@@#@#@];@]>@]"K @@@@C)E@@@[@]D&L@@@K@BK@D@@@[@ADNID@@D>-G$$T12#@#@#]@]"@#^KG
)@@G@@K @@@@C)E@@@[@]DNI@@@K@BK@D@@@[@AB9"D@@@@@ENDIF #@#@]N@@6@]NK @@@@C)B@@@KH
)@@G@@[@[B9"@@@C@B[@^D>_]@@@@@G$FCF @@@B']C)B@@@[@]B']@@@C@#C@ @@@#)#D#D@@@C.6KI
)@@G@@@@AB9"C)A@@@[@[D#D@@@C@#]@#D[0<@AB']K @@@_C)A@@@[@[D[0@@@C@#]@#D[L<@ D#DKJ
)@@G@@K @@@'C)A@@@[@[D[L@@@C@#]@#D@O<@^D[0K @@@/C)A@@@[@[D@O@@@C@#]@#C"3<@#D[LKK
)@@G@@K @@@/C)A@@@[@[C"3@@@C@#]@#C.6<@]D@OK @@@@C)A@@@[@[C.6@@@C@#]@#D>_<@[C"3KL
)@@G@@K @@@@C)E@@@[@]D>_@@@K@BK@D@@@[@AB7/D@@B9"G$$T01#@#@#]@ #@#]K @@@@C)B@@@KM
)@@G@@[@[B7/@@@C@B[@^C7!]@@@@@G$WS  @@@B8@C)B@@@[@]B8@@@@C@#C@ @@@#)#B.@@@@B8#KN
)@@G@@@@AB7/C)B@@@[@]B.@@@@C@#C@ @@@]@#B/++@AB8@@@@B.#C)B@@@[@]B.#@@@C@#C@ @@@KO
)@@G@@#)#D]Z@@@D]K@@AB.@C)A@@@[@[D]Z@@@C@#]@#D]W<@AB.#K @@@@C)A@@@[@[D]W@@@C@#KP
)@@G@@]@#D]T<@ D]ZK @@@[C)A@@@[@[D]T@@@C@#]@#D]Q<@^D]WK @@@@C)A@@@[@[D]Q@@@C@#KQ
)@@G@@]@#D]N<@#D]TK @@@[C)A@@@[@[D]N@@@C@#]@#D]K<@]D]QK @@@@C)A@@@[@[D]K@@@C@#KR
)@@G@@]@#B/+<@[D]NK @@@[C)B@@@[@]B/+@@@C@#C@ @@@]@#B;8+@ B.@@@@B/>C)B@@@[@]B/>KS
)@@G@@@@@C@#C@ @@@#)#D[Y@@@D[V@@]B/+C)A@@@[@[D[Y@@@C@#]@#D[V<@]B/>K @@@@C)A@@@KT
)@@G@@[@[D[V@@@C@#]@#B;8<@[D[YK @@@@C)B@@@[@]B;8@@@C@#C@ @@@]@#B'6+@^B/+@@@B;;KU
)@@G@@C)B@@@[@]B;;@@@C@#C@ @@@#)#D@3@@@D@%@@^B;8C)A@@@[@[D@3@@@C@#]@#D@0<@^B;;KV
)@@G@@K @@@@C)A@@@[@[D@0@@@C@#]@#D@!<@#D@3K @@@@C)A@@@[@[D@!@@@C@#]@#D@%<@]D@0KW
)@@G@@K @@@@C)A@@@[@[D@%@@@C@#]@#B'6<@[D@!K @@@@C)B@@@[@]B'6@@@C@#C@ @@@]@#B'GKX
)@@G@@+@#B;8@@@B'9C)B@@@[@]B'9@@@C@#C@ @@@#)#C_Y@@@C_J@@CB'6C)A@@@[@[C_Y@@@C@#KY
)@@G@@]@#C_V<@CB'9K @@@@C)A@@@[@[C_V@@@C@#]@#C_S<@BC_YK @@@[C)A@@@[@[C_S@@@C@#KZ
)@@G@@]@#C_P<@AC_VK @@@@C)A@@@[@[C_P@@@C@#]@#C_G<@ C_SK @@@@C)A@@@[@[C_G@@@C@#LA
)@@G@@]@#C_D<@^C_PK @@@@C)A@@@[@[C_D@@@C@#]@#C_M<@#C_GK @@@@C)A@@@[@[C_M@@@C@#LB
)@@G@@]@#C_J<@]C_DK @@@@C)A@@@[@[C_J@@@C@#]@#B'G<@[C_MK @@@@C)B@@@[@]B'G@@@C@#LC
)@@G@@C@ @@@]@#B8#+@]B'6@@@B'JC)B@@@[@]B'J@@@C@#C@ @@@#)#C"J@@@C"M@@^B'GC)A@@@LD
)@@G@@[@[C"J@@@C@#]@#C"G<@^B'JK @@@]C)A@@@[@[C"G@@@C@#]@#C"P<@#C"JK @@@]C)A@@@LE
)@@G@@[@[C"P@@@C@#]@#C"M<@]C"GK @@@]C)A@@@[@[C"M@@@C@#]@#B8#<@[C"PK @@@]C)B@@@LF
)@@G@@[@]B8#@@@C@#C@ @@@]@#C7!+@[B'G@@@B8AC)B@@@[@]B8A@@@C@#C@ @@@#)#C/K@@@C;(LG
)@@G@@@@IB8#C)A@@@[@[C/K@@@C@#]@#C/H<@IB8AK @@@]C)A@@@[@[C/H@@@C@#]@#C/E<@HC/KLH
)@@G@@K @@@]C)A@@@[@[C/E@@@C@#]@#C/B<@GC/HK @@@#C)A@@@[@[C/B@@@C@#]@#C/^<@FC/ELI
)@@G@@K @@@]C)A@@@[@[C/^@@@C@#]@#C/[<@EC/BK @@@]C)A@@@[@[C/[@@@C@#]@#C;"<@DC/^LJ
)@@G@@K @@@]C)A@@@[@[C;"@@@C@#]@#C;;<@CC/[K @@@]C)A@@@[@[C;;@@@C@#]@#C;2<@BC;"LK
)@@G@@K @@@]C)A@@@[@[C;2@@@C@#]@#C;\<@AC;;K @@@#C)A@@@[@[C;\@@@C@#]@#C;8<@ C;2LL
)@@G@@K @@@]C)A@@@[@[C;8@@@C@#]@#C;5<@^C;\K @@@]C)A@@@[@[C;5@@@C@#]@#C;?<@#C;8LM
)@@G@@K @@@]C)A@@@[@[C;?@@@C@#]@#C;(<@]C;5K @@@]C)A@@@[@[C;(@@@C@#]@#C7!<@[C;?LN
)@@G@@K @@@][@^D['#@@@@@WHILE MH@__9[@^D5K#@@@@@INIDLEK @@@][@ C9W#)@@@@G$JBITLO
)@@G@@S     LBJ@@@[@^DZ$#@@@@@NOT   MH@__ZC)E@@@[@]DZ$@@@K@BK@D@@@[@AC'>D@@@@@LP
)@@G@@ATEND #@#@]\@@6@]\K @@@[[@^DO-#@@@@@LTE   K @@@#C)E@@@[@]DO-@@@K@BK@D@@@LQ
)@@G@@[@AD!7D@@C'>G$$C05#@#@]R@]A@]SK @@@@C)E@@@[@]D!7@@@K@BK@D@@@[@AD5PD@@DO-LR
)@@G@@G$$L30#@#@#D@^I@#KK @@@@[@ D=X#)@D!7G$XBITS     LB@/@@C)F@@@[@]D=X@@@K@DLS
)@@G@@K@F@@@[@BD>VD)@@@@AREADA$     #@#@]9@@6@]9K @@[7C)E@@@[@]D>V@@@K@BK@D@@@LT
)@@G@@[@AC8[D@@D=XG$$A20#@#@];@] @]"K @@@@[@^D#"#@@@@@JMGI  MH@__4C)E@@@[@]D#"LU
)@@G@@@@@K@DK@F@@@[@AC'XD)@C8[STRUC$DEF   @@]@[3@@6@[3[@^D2V#@@@@@NEQ   K @@@]LV
)@@G@@C)E@@@[@]D2V@@@K@BK@D@@@[@AC8&D@@@@@G$$L49#@#@#D@]/@#OK @@@@[@^D([#@@@@@LW
)@@G@@MASKEDMH@__:C)E@@@[@]D([@@@K@BK@D@@@[@AD3-D@@C8&G$$T24#@#@#]@ 6@#AK @@@@LX
)@@G@@C)E@@@[@]D3-@@@K@BK@D@@@[@ADZID@@D([G$$L51#@#@#D@[?@#PK @@@@C)E@@@[@]DZILY
)@@G@@@@@K@BK@D@@@[@AC"^D@@@@@G$$R80#@#@]&@#!@](K @@@@[@^DX6#@@DZIZERO  K @@@#LZ
)@@G@@C)E@@@[@]DX6@@@K@BK@D@@@[@AC8QD@@@@@G$$R60#@#@]&@#D@]*K @@@@[@^C9R#@@@@@MA
)@@G@@UP    MH@__\[@ B' #)@C8QSTARTIO     MH@__)C)B@@@[@[B' @@@C@B[@^DN]]@@C9RMB
)@@G@@G$ASF @@@B'DC)B@@@[@]B'D@@@C@#C@ @@@#)#D#G@@@C.9@@AB' C)A@@@[@[D#G@@@C@#MC
)@@G@@]@#D[3<@AB'DK @@@]C)A@@@[@[D[3@@@C@#]@#D[O<@ D#GK @@@[C)A@@@[@[D[O@@@C@#MD
)@@G@@]@#D@R<@^D[3K @@@@C)A@@@[@[D@R@@@C@#]@#C"6<@#D[OK @@@[C)A@@@[@[C"6@@@C@#ME
)@@G@@]@#C.9<@]D@RK @@@@C)A@@@[@[C.9@@@C@#]@#DN]<@[C"6K @@@[C)E@@@[@]DN]@@@K@BMF
)@@G@@K@D@@@[@AC92D@@B' G$$I10#@#@]I@[/@]LK @@@@[@^D*5#@@@@@IBANK MH@__UC)E@@@MG
)@@G@@[@]D*5@@@K@BK@D@@@[@AC; D@@C92G$$T21#@#@#]@[Y@#AK @@@@[@^D4A#@@@@@NOSPANMH
)@@G@@K @@@CC)E@@@[@]D4A@@@K@BK@D@@@[@AC7FD@@C; G$$L52#@#@#D@@0@#QK @@@@[@^D["MI
)@@G@@#@@@@@G$OMN K @@@[[@ D0P#)@@@@OUTBUSY     K @@@#C)E@@@[@]D0P@@@K@BK@D@@@MJ
)@@G@@[@AD]CD@@D["G$$L41#@#@#D@[:@#MK @@@@[@^C_[#@@@@@LOADEDK @@@ [@^C89#@@@@@MK
)@@G@@DZERO K @@@B[@^D]G#@@@@@CYCLICMH@__$[@^C;X#@@@@@EMPTY K @@@A[@^D@&#@@@@@ML
)@@G@@AGE   K @@@H[@^B8D#@@C;XNOCARYK @@@^C)B@@@[@[B8D@@@C@B[@^DS!]@@D@&G$IV  MM
)@@G@@@@@B8HC)B@@@[@]B8H@@@C@#C@ @@@#)#B.A@@@B8K@@AB8DC)B@@@[@]B.A@@@C@#C@ @@@MN
)@@G@@]@#B/*+@AB8H@@@B.DC)B@@@[@]B.D@@@C@#C@ @@@#)#D]1@@@D]+@@AB.AC)A@@@[@[D]1MO
)@@G@@@@@C@#]@#D],<@AB.DK @@@ C)A@@@[@[D],@@@C@#]@#D]:<@ D]1K @@@AC)A@@@[@[D]:MP
)@@G@@@@@C@#]@#D]*<@^D],K @@@#C)A@@@[@[D]*@@@C@#]@#D]><@#D]:K @@@^C)A@@@[@[D]>MQ
)@@G@@@@@C@#]@#D]+<@]D]*K @@@[C)A@@@[@[D]+@@@C@#]@#B/*<@[D]>K @@@]C)B@@@[@]B/*MR
)@@G@@@@@C@#C@ @@@]@#B;"+@ B.A@@@B/:C)B@@@[@]B/:@@@C@#C@ @@@#)#D[=@@@D[-@@]B/*MS
)@@G@@C)A@@@[@[D[=@@@C@#]@#D[-<@]B/:K @@@[C)A@@@[@[D[-@@@C@#]@#B;"<@[D[=K @@@]MT
)@@G@@C)B@@@[@]B;"@@@C@#C@ @@@]@#B'/+@^B/*@@@B/[C)B@@@[@]B/[@@@C@#C@ @@@#)#D@_MU
)@@G@@@@@D@6@@^B;"C)A@@@[@[D@_@@@C@#]@#D@/<@^B/[K @@@#C)A@@@[@[D@/@@@C@#]@#D@9MV
)@@G@@<@#D@_K @@@^C)A@@@[@[D@9@@@C@#]@#D@6<@]D@/K @@@[C)A@@@[@[D@6@@@C@#]@#B'/MW
)@@G@@<@[D@9K @@@]C)B@@@[@]B'/@@@C@#C@ @@@]@#B'M+@#B;"@@@B'_C)B@@@[@]B'_@@@C@#MX
)@@G@@C@ @@@#)#C_6@@@C_$@@CB'/C)A@@@[@[C_6@@@C@#]@#C_3<@CB'_K @@@BC)A@@@[@[C_3MY
)@@G@@@@@C@#]@#C_0<@BC_6K @@@CC)A@@@[@[C_0@@@C@#]@#C_!<@AC_3K @@@ C)A@@@[@[C_!MZ
)@@G@@@@@C@#]@#C_=<@ C_0K @@@AC)A@@@[@[C_=@@@C@#]@#C_-<@^C_!K @@@#C)A@@@[@[C_-NA
)@@G@@@@@C@#]@#C_%<@#C_=K @@@^C)A@@@[@[C_%@@@C@#]@#C_$<@]C_-K @@@[C)A@@@[@[C_$NB
)@@G@@@@@C@#]@#B'M<@[C_%K @@@]C)B@@@[@]B'M@@@C@#C@ @@@]@#B8K+@]B'/@@@B'PC)B@@@NC
)@@G@@[@]B'P@@@C@#C@ @@@#)#C"V@@@C"Y@@^B'MC)A@@@[@[C"V@@@C@#]@#C"S<@^B'PK @@@#ND
)@@G@@C)A@@@[@[C"S@@@C@#]@#C"-<@#C"VK @@@^C)A@@@[@[C"-@@@C@#]@#C"Y<@]C"SK @@@[NE
)@@G@@C)A@@@[@[C"Y@@@C@#]@#B8K<@[C"-K @@@]C)B@@@[@]B8K@@@C@#C@ @@@]@#DS!+@[B'MNF
)@@G@@@@@B8NC)B@@@[@]B8N@@@C@#C@ @@@#)#C/'@@@C/N@@IB8KC)A@@@[@[C/'@@@C@#]@#C/7NG
)@@G@@<@IB8NMH@__"C)A@@@[@[C/7@@@C@#]@#C/4<@HC/'MH@__"C)A@@@[@[C/4@@@C@#]@#C/1NH
)@@G@@<@GC/7K @@@FC)A@@@[@[C/1@@@C@#]@#C/,<@FC/4K @@@GC)A@@@[@[C/,@@@C@#]@#C/:NI
)@@G@@<@EC/1K @@@DC)A@@@[@[C/:@@@C@#]@#C/*<@DC/,K @@@EC)A@@@[@[C/*@@@C@#]@#C/>NJ
)@@G@@<@CC/:K @@@BC)A@@@[@[C/>@@@C@#]@#C/W<@BC/*K @@@CC)A@@@[@[C/W@@@C@#]@#C/TNK
)@@G@@<@AC/>K @@@ C)A@@@[@[C/T@@@C@#]@#C/+<@ C/WK @@@AC)A@@@[@[C/+@@@C@#]@#C/ZNL
)@@G@@<@^C/TK @@@#C)A@@@[@[C/Z@@@C@#]@#C/Q<@#C/+K @@@^C)A@@@[@[C/Q@@@C@#]@#C/NNM
)@@G@@<@]C/ZK @@@[C)A@@@[@[C/N@@@C@#]@#DS!<@[C/QK @@@]C)E@@@[@]DS!@@@K@BK@D@@@NN
)@@G@@[@AD& D@@B8DG$$C25#@#@]R@@_@]WK @@@@C)E@@@[@]D& @@@K@BK@D@@@[@AD\#D@@DS!NO
)@@G@@G$$T10#@#@#]@@=@##K @@@@C)E@@@[@]D\#@@@K@BK@D@@@[@ADW=D@@D& G$$L35#@#@#DNP
)@@G@@@]!@#LK @@@@C)E@@@[@]DW=@@@K@BK@D@@@[@AD<_D@@@@@G$$R10#@#@]&@^.@]$K @@@@NQ
)@@G@@C)E@@@[@]D<_@@@K@BK@D@@@[@AC;LD@@DW=G$$Z50#@#@]\@@+@]4K @@@@[@^D5$#@@@@@NR
)@@G@@DEQ   K @@@FC)E@@@[@]D5$@@@K@BK@D@@@[@AD54D@@C;LG$$DC1#@#@#W@#/@#YK @@@@NS
)@@G@@C)E@@@[@]D54@@@K@BK@D@@@[@AC5VD@@D5$G$$PRA#@#@#-@@6@#-K @@@@C)B@@@[@[C5VNT
)@@G@@@@@C@B[@^DZ)]@@@@@G$HIBI@@@C5ZC)B@@@[@]C5Z@@@C@#C@ @@@#)#D5H@@@D5E@@]C5VNU
)@@G@@C)A@@@[@[D5H@@@C@#]@#D5E<@]C5ZK @K@@C)A@@@[@[D5E@@@C@#]@#DZ)<@[D5HK @)@@NV
)@@G@@C)F@@@[@]DZ)@@@K@DK@F@@@[@BC8MD)@@@@OTHERWISE   #@#@]\@@6@]\K @@@@[@^C'TNW
)@@G@@#@@@@@FOR   MH@__0[@^D::#@@C8MNE    K @@@]C)E@@@[@]D::@@@K@BK@D@@@[@ADB3NX
)@@G@@D@@C'TG$$L03#@#@#D@ <@#IK @@@@C)E@@@[@]DB3@@@K@BK@D@@@[@ADJ!D@@@@@G$DBUGNY
)@@G@@#@#@[8@@6@[8K @@@@C)F@@@[@]DJ!@@@K@DK@F@@@[@BC8\D)@@@@SWITCHTO    #@#@]CNZ
)@@G@@@@6@]CK @@@@[@ C9E#)@@@@MAINPROGRAM MH@__([@^DS3#@@C8\SAVE  MH@__<C)E@@@OA
)@@G@@[@]DS3@@@K@BK@D@@@[@AC_ D@@C9EG$$C26#@#@]R@[Z@]WK @@@@[@^D4=#@@DS3DNONZ OB
)@@G@@K @@@CC)E@@@[@]D4=@@@K@BK@D@@@[@AC8UD@@C_ G$$SVA#@#@#V@@6@#VK @@@@[@^C'FOC
)@@G@@#@@@@@DOWN  MH@__,[@ DZU#)@@@@NOFINDEXIT  MH@__OC)E@@@[@]DZU@@@K@BK@D@@@OD
)@@G@@[@AC8+D@@C'FG$$E10#@#@]?@]'@],K @@@@[@^C9(#@@@@@FROM  MH@__?[@ D#,#)@C8+OE
)@@G@@CALLING     MH@__WC)C@@@[@[D#,@@@@@B[@ @@@A@@C9(G$$IMU0@@@@#[^L@@[C)1@@@OF
)@@G@@]@@@#V@@@K@F#@,C^,@#V@@@@@@@@[[C,@@@K@@@@@@@@@@@@@@@@@$LABL(K,2)T]M&2)KKOG
)@@G@@ EQU G$CTR(3)+1*KG$CTR**(3) EQU K*OG$ARGS**(K) EQU +P-1*<N DO P-1 ,G$ARGOH
)@@G@@S**(K,N) EQU +0+P(N)*0N DO P-1 ,M DO P(N) ,G$ARGS**(K,N,M) EQU +P(N,M)*_OI
)@@G@@N DO P-1 ,M DO P(N) , DO P(N,*M) ,G$ARGS**(K,N,M) EQU *0+P(N,M)*^ END@EQOJ
)@@G@@C)N@@@]@@@]C@@@K@F#@KDA3@]C@@@@@@@@[[CK@@@M@@@@@@@[@@@@@@@@@P           OK
)@@G@@MGI)A RES 1*F G$$GFL 3,1*B RES -1T])^ END@C-#@@@]@[@[8@@@K@B]-@D#3@[8@@@OL
)@@G@@@@@@@[[D@@[9U@@@@@@J$@@@@@@@@@P           MC>)JI(1) EQU I(1)+1*N DO P(I(OM
)@@G@@1))=0 , END*U DO P(I(1))=1 , +P(I(1),1)*= DO P(I(1))=2 , +P(I(1),1),P(I(ON
)@@G@@1),2)*, DO P(I(1))=3 , +P(I(1),1),P(I(1),2),P(I(1),3)*8 DO P(I(1))=4 , +OO
)@@G@@P(I(1),1),P(I(1),2),P(I(1),3),P(I(1),4)(G DO P(I(1))>4 , +P(I(1),1),P(I(OP
)@@G@@1),2),P(I(1),3),P(I(1),4),P(I(1),5),P(I(1),6)*B RES -1*Q DO I(1)<P , GO OQ
)@@G@@G$DBUG8# ENCC)I@@@]@@@[3@@@K@F#@FC5"@[3@@@@@@@@[[CF@@@U@@@@@@@@@@@@@@@@@OR
)@@G@@STRUC$DEF   M ;)^ END@@@C-@@@@]@@@#-@@@K@F#@.D^^@#-@@@@@@@@][C.@@@U@@@@@OS
)@@G@@@@[@@@@@@@@@P           M*=)$ DO G$MASM=0 ,P(1,1) EQU G$BSEQ(P(1,1))*? DOT
)@@G@@O G$MASM=1 ,P(1,1) EQU G$BSEQ($AP(P(1,1)))M*$)GK EQU P(1,1)*$ISRB EQU (KOU
)@@G@@>0)**(G$FLAG(K,3)=REMOTESUB)*R DO ISRB=0 , G$$GFL 2,6*K DO ISRB=0 , END*OV
)@@G@@SG$LABL**(K,4) EQU P(1,2)*R DO G$LABL(K,1)>$ , ENDT^)EHERE EQU $*M RES GOW
)@@G@@$LABL(K,5)-$*D J P(1,2)*F RES HERE-$*^ END@IB(1)C-#@@@]@[@[4@@@K@B]-@C 6OX
)@@G@@@[4@@@@@@@@[[D@@[5M@@@@@@@]@@@@@@@@@P           M _)P DO 0=0=0 , STRUC$OOY
)@@G@@MN*P DO 0=0=1 , STRUC$DEF*- DO P(1)>0 ,G$LCTR*(1) EQU P(1,1)TG)RK DO 5 ,OZ
)@@G@@G$CTR*(K) EQU 0T^)SG$CTR*(6) EQU 1-G$CTR(6)*SG$CTR*(7) EQU 1-G$CTR(6)*O PA
)@@G@@DO G$CTR(7) , BRIEF*M DO G$CTR(7) , ENDT )LG$MASM* EQU 0=0=0*- DO G$MASMPB
)@@G@@=0 ,G$AMPR* EQU #(5)=-2*V DO G$MASM=1 ,G$AMPR* EQU 1T])B G$$CLD8S DO G$MPC
)@@G@@ASM , $INSERT 'G$CC-#@@@]@[@]F@@@K@B]-@DB9@]F@@@@@@@@[[D@@]GK@@@@@@@@@@@PD
)@@G@@@@@@@@+I-1MF+)MG$LMG5)DP PROC *2*GCALL*** NAME*MRAD(1) EQU +(0,-1)*IP11 PE
)@@G@@EQU P(1,1)*Y DO G$MASM=1 ,P11 EQU $AP(P11)*: DO P(1)=1 , DO P11<0400000 PF
)@@G@@,RAD(1) EQU P11T#)OK EQU G$BSEQ(RAD(1))*, DO K>0 , DO G$FLAG(K,3)=REMOTEPG
)@@G@@SUB , GO G$$CL1T^)YXREG EQU P(0,1)+(P(0,1)=0)*X11*SBANKSW EQU P(2,1)=BASPH
)@@G@@ING*)K DO P(2)*(1-BANKSW) , SZ P(2,K)T#0M DO 1-(BANKSW**(P(CC)N@@@]@@@['PI
)@@G@@@@@K@F#@KC))@['@@@@@@@@[[CK@@@M@@@@@@@@@@@@@@@@@F           MDF)OIII*(1)PJ
)@@G@@ EQU III(1)+1*F END III(1)@@@@C-#@@@]@[@];@@@K@B]-@DTR@];@@@@@@@@^[D@@]/PK
)@@G@@M@@@@@@@[@@@@@@@@@Z           MWI)GI EQU Z(1,1)*GK EQU Z(1,2)T])S DO P(IPL
)@@G@@,2)>0 ,N(1) EQU 1*T DO P(I,2)=IN ,N(1) EQU 2*= DO P(I,2)=IS ,N(1) EQU 3+PM
)@@G@@2*(P(I)=4)*Q DO P(I)=1 ,N(1) EQU 4*Y DO P(I,1)=CHANNEL ,N(1) EQU 6*R DO PN
)@@G@@N(1)<1 , G$$EFL 1,1*T DO N(1)<3 , G$$DCU,2 I,3T^)) DO (N(1)=2)**G$AMPR ,PO
)@@G@@ GO G$$A10*2U16 EQU (P(I,5)<016)++(P(I,4)>0)++P(I,*3)++P(I,*4)8B DO (N(CPP
)@@G@@C-#@@@]@[@]<@@@K@B]-@C4H@]<@@@@@@@@[[D@@]=M@@@@@@@@@@@@@@@@@P           PQ
)@@G@@MN")IM EQU G$CTR(5)*JK EQU G$SEQN(M)*) DO (G$TYPE(M)=3)=0 , G$$GFL 1,3T^PR
)@@G@@)SCALOPT EQU G$FLAG(K,3)<0*QNUMCA EQU +G$FLAG(K,1)*SCMAX(1) EQU -3435973PS
)@@G@@8367(@L DO NUMCA , DO G$FLAG(K,4,L)>CMAX(1) ,CMAX(1) EQU G$FLAG(K,4,L)*TPT
)@@G@@CMIN(1) EQU 0377777777777(@L DO NUMCA , DO G$FLAG(K,4,L)<CMIN(1) ,CMIN(1PU
)@@G@@) EQU G$FLAG(K,4,L)8OJTS(1) EQU CMAX(1)-CCC-#@@@]@[@#W@@@K@B]-@CHB@#W@@@PV
)@@G@@@@@@@#[D@@#XM@@@@@@@]@@@@@@@@@Q           M$O)GI EQU Q(1,1)*GJ EQU Q(1,2PW
)@@G@@)*GN EQU Q(0,1)T#)S DO G$MASM , $GO G$$DCU1T^)GJAY(1) EQU 0*GXRG(1) EQU PX
)@@G@@0*GHIB(1) EQU 0*LIV(1) EQU +P(I,J)(W DO IV(1)>0377777777 ,K DO 4 , DO (IPY
)@@G@@V(1)-JAY(1))>(G$JBIT(K)-1) ,JAY(1) EQU JAY(1)++G$JBIT(K)T^)QIV(1) EQU IVPZ
)@@G@@(1)-JAY(1)*)JAY(1) EQU P(I,J+2)++JAY(1)*/-268> DO IV(1)>0777777 ,K DO 4 QA
)@@G@@, DO (IV(1)CC-#@@@]@[@]Y@@@K@B]-@C!A@]Y@@@@@@@@][D@@]ZM@@@@@@@]@@@@@@@@@QB
)@@G@@P           MM5)IM EQU G$CTR(5)*JK EQU G$SEQN(M)*) DO (G$TYPE(M)=3)=0 , QC
)@@G@@G$$GFL 1,3*R DO G$FLAG(K,3)>0 , ENDT])NJJ EQU +G$FLAG(K,1)*W DO JJ=0 ,G$QD
)@@G@@LABL*(K,2) EQU $** DO (JJ>0)++(G$FLAG(K,3)>-1) , GO G$$C60TC)Y DO $>G$LAQE
)@@G@@BL(K,1) , G$$GFL 2,5*LMAX(1) EQU P(1,1)*\N DO P(1) , DO P(1,N)>MAX(1) ,MQF
)@@G@@AX(1) EQU P(1,N)*HIMAX(1) EQU 18ON DO P(1) , DO P(1,NCC-#@@@]@[@#R@@@K@BQG
)@@G@@]-@CPX@#R@@@@@@@@#[D@@#SM@@@@@@@]@@@@@@@@@Q           M>4)HVI EQU Q(1,1)QH
)@@G@@*HTI EQU Q(1,2)*HBI EQU Q(1,3)*HF EQU P(VI,1)*KATTOP EQU Q(2,2)T])T DO FQI
)@@G@@=LOOKFOR , GO G$$L80*$ DO F=JGD , G$$FJA 070,P(VI,2),,,Q(2,1)*J DO F=JGDQJ
)@@G@@ , ENDT^)IJMF EQU F=JMGI*OOLAP EQU P(VI,2)>X11*ZSENU EQU (P(VI,3)=0)**(AQK
)@@G@@TTOP=0)T])( DO SENU**1-OLAP , I$ 060+JMF,,,,,P(VI,2)8( DO SENU , I$ 074,QL
)@@G@@04-OLAP*(JMF+1),0+OLAP*CC-#@@@]@[@]\@@@K@B]-@C6;@]\@@@@@@@@A[D@@]0M@@@@@QM
)@@G@@@@[@@@@@@@@@Y           MS))IM EQU G$CTR(5)*JK EQU G$SEQN(M)*) DO (G$TYPQN
)@@G@@E(M)=4)=0 , G$$GFL 1,3*> DO G$LABL(K,5)=0 ,G$LABL*(K,5) EQU $T^)? DO G$FQO
)@@G@@LAG(K,13) , I$ 074,04,,,,G$LABL(K,10)*<G$CTR*(2) EQU G$CTR(2)+G$FLAG(K,1QP
)@@G@@3)*NG$FLAG*(K,13) EQU 0T^)S DO Y(0,0)>0 , GO G$$Z10*Y DO G$LABL(K,4)=0 ,QQ
)@@G@@ G$$GFL 2,284 DO G$CTR(7) , DO (G$LABL(K,6)=$)=0 , G$$DFL G$LABL(CC)N@@@QR
)@@G@@]@@@[2@@@K@F#@KCB.@[2@@@@@@@@[[CK@@@M@@@@@@@@@@@@@@@@@STRUC$OMN   LD)Z DQS
)@@G@@O G$OMN=0 , $INCLUDE 'STRUC$'*^ END@C)/@@@]@@@]M@@@K@F#@9B"1@]M@@@@@@@@[QT
)@@G@@[C9@@@K@@@@@@@@@@@@@@@@@P           MJ])IM EQU G$CTR(5)*JK EQU G$SEQN(M)QU
)@@G@@*) DO (G$TYPE(M)=2)=0 , G$$GFL 1,3T])8 DO G$CTR(7) , DO (G$LABL(K,3)=$)=QV
)@@G@@0 , G$$DFL G$LABL(K,3)*MG$LABL*(K,3) EQU $*R DO G$LABL(K,2)=$ , ENDT])? QW
)@@G@@DO G$FLAG(K,4)=0 , I$ 074,04,,,,G$LABL(K,5)*+G$CTR*(2) EQU G$CTR(2)+G$FLQX
)@@G@@AG(K,4)*MG$LABL*(K,4) EQU $*^ END@IFC-#@@@]@[@]#@@@K@B]-@C^"@]#@@@@@@@@#QY
)@@G@@[D@@]^M@@@@@@@[@@@@@@@@@P           ME;)IM EQU G$CTR(5)*JK EQU G$SEQN(M)QZ
)@@G@@*S DO (M=1)=0 , G$$GFL 1,1*) DO (G$TYPE(M)=1)=0 , G$$GFL 1,3*JG$CTR*(5) RA
)@@G@@EQU 0*% DO (G$CTR(2)=(0-G$CTR(7)))=0 , G$$GFL 1,2*JG$CTR*(2) EQU 0*LT EQRB
)@@G@@U G$FLAG(K,3)T])J RES 0-G$CTR(6)*8 DO G$CTR(7) , DO (G$LABL(K,2)=$)=0 , RC
)@@G@@G$$DFL G$LABL(K,2)*MG$LABL*(K,2) EQU $T]0< DO T=CYCLIC , I$ 074,04,,,,G$RD
)@@G@@LABL(CC)4@@@]@]@]D@@@K@BK@F@@@#@0C*A@]D@@@@@@@@[[C0@]EM@@@@@@@[@]E@@@@@@RE
)@@G@@P           MGY)YXREG EQU P(0,1)+X11*(P(0,1)=0)T#)P DO P(1)<2 , GO NOLXIRF
)@@G@@(# DO P(1,4)<016 , I$ 046,P(1,4),XREG,P(1,3),2*P(1,*3)+P(1,*2),P(1,2)*5 RG
)@@G@@DO P(1,4)>015 , G$$IMU 046,P(1,4),XREG,P(1,3),P(1,2)MG>)= I$ 07,012+(P(1RH
)@@G@@,1)=IBANK),XREG,,,$+1*^ END@G$C)G@@@]@]@]E@@@K@HK@J@@@#@CC8:@]E@@@@@@@@[RI
)@@G@@@CC@@@NOLXI       ]@#@]D@#,@]DC-#@@@]@[@#D@@@K@B]-@CM9@#D@@@@@@@@J[D@@#ERJ
)@@G@@K@@@@@@@@@@@@@@@@@ DO 2 ,II(K)M-Z)IW(1) EQU KW(1)TA)2K3 EQU MASKED*(W(1)RK
)@@G@@=LOOKFOR)+TO*((W(1)=LOOKFOR)=0)([FI*(1) EQU VI+(P(VI+1,1)=FOR)+2*(P(VI+2RL
)@@G@@,1)=FOR)+3*(P(VI+3,1)=FOR)(^FI*(2) EQU VI+(P(VI+1,1)=FROM)+2*(P(VI+2,1)=RM
)@@G@@FROM)+3*(P(VI+3,1)=FROM)(JFI*(3) EQU VI+(P(VI+1,1)=K3)+2*(P(VI+2,1)=K3)+RN
)@@G@@3*(P(VI+3,1)=K3)+4*(P(VI+4,1)=K3)T]0+FI*(4) EQU VI+(P(VI+1,1)=BY)+2*(P(CRO
)@@G@@C-#@@@]@[@]?@@@K@B]-@C-$@]?@@@@@@@@][D@@]!M@@@@@@@^@@@@@@@@@P           RP
)@@G@@MR*)IM EQU G$CTR(5)*JK EQU G$SEQN(M)*) DO (G$TYPE(M)=4)=0 , G$$GFL 1,3T]RQ
)@@G@@)8 DO G$CTR(7) , DO (G$LABL(K,4)=$)=0 , G$$DFL G$LABL(K,4)*MG$LABL*(K,4)RR
)@@G@@ EQU $T])QTBOT EQU G$FLAG(K,6)>0*(TTOP EQU (G$FLAG(K,1)>0)++(G$FLAG(K,4)RS
)@@G@@>0)*V DO TTOP**TBOT , G$$GFL 2,1*&G$FLAG*(K,8) EQU G$FLAG(K,8)**(P(1)=0)RT
)@@G@@8$ DO G$FLAG(K,8) , I$ 074,04,,,,G$LABL(KCC-#@@@]@[@]_@@@K@B]-@C&$@]_@@@RU
)@@G@@@@@@@#[D@@#@M@@@@@@@]@@@@@@@@@Q           MXV)GI EQU Q(1,1)*HNN EQU Q(1,RV
)@@G@@2)*HN EQU TP$(NN)T])OCGISF EQU G$FCF(N)=0*LJI(1) EQU KE$(NN)*RJI(2) EQU RW
)@@G@@G$IV(N,JI(1))*WWOK EQU Q(1,3)=G$WS(N,JI(1))T])(AAA EQU 0+(G$ASF(N)>0)*(PRX
)@@G@@(I,G$ASF(N))-A0)*OJJJ EQU CGISF*P(I,5)*OXXX EQU CGISF*P(I,4)*)HI EQU CGIRY
)@@G@@SF*(2*P(I,*4)+P(I,*3))*(U18 EQU (JJJ>015)**(XXX=0)**(N<3)**(HI=0)8KUUU ERZ
)@@G@@QU CGISF*P(CC)M@@@]@@@]+@@@K@F#@JCG[@]+@@@@@@@@[[CJ@@@U@@@@@@@[@@@@@@@@@SA
)@@G@@P           MN\)H RES P(1,1)-$*D J P(1,2)*^ END@C-#@@@]@[@]R@@@K@B]-@CC6SB
)@@G@@@]R@@@@@@@@B[D@@]SM@@@@@@@A@@@@@@@@@P           MK5)KK EQU G$CTR(1)+1*JGSC
)@@G@@$CTR*(1) EQU K*KM EQU G$CTR(5)+1*JG$CTR*(5) EQU M*KG$SEQN*(M) EQU K*KG$TSD
)@@G@@YPE*(M) EQU 3T^)TCALOPT EQU P(1,1)=CALLING(FN DO (P-2)*(P>2) , DO P(N+1)SE
)@@G@@=1 , DO P(N+1,1)=NOCHECKING ,G$FLAG*(K,6) EQU 1T^)9N DO (P-2)*(P>2) , DOSF
)@@G@@ P(N+1,1)=NOFINDEXIT ,NFI(1) EQU N+1T^)S DO CALOPT=0 , GO G$$C058RBANKSWSG
)@@G@@ EQU P(3,1)=BASINCC-#@@@]@[@]N@@@K@B]-@C#,@]N@@@@@@@@][D@@]OK@@@@@@@@@@@SH
)@@G@@@@@@@@OT*G +P(THF+MJS)IM EQU G$CTR(5)*JK EQU G$SEQN(M)*) DO (G$TYPE(M)=2SI
)@@G@@)=0 , G$$GFL 1,3T])8 DO G$CTR(7) , DO (G$LABL(K,5)=$)=0 , G$$DFL G$LABL(SJ
)@@G@@K,5)*MG$LABL*(K,5) EQU $*LG$CTR*(5) EQU M-1T^)9G$CTR*(2) EQU G$CTR(7)*(GSK
)@@G@@$CTR(2)-G$FLAG(K,5)-G$FLAG(K,4))*M DO G$CTR(7) , ENDT^)SG$CTR*(3) EQU G$SL
)@@G@@CTR(3)-1T^0\G$FLAG*(K,4) EQU 0-((G$LABL(K,3)>0)**(G$LABL(K,CC-#@@@]@[@]ISM
)@@G@@@@@K@B]-@CWA@]I@@@@@@@@#[D@@]JM@@@@@@@A@@@@@@@@@P           MH1)<LOOF EQSN
)@@G@@U (P(1)=1)**(P(1,1)=LOOKFOR)*O DO LOOF , GO G$$I05T^)DL EQU P-1*YL1 EQU SO
)@@G@@(P(L)=1)**(P(L,1)=THEN)*+L2 EQU (P(L-1)=1)**(P(L-1,1)=THEN)*PFLT EQU L1*SP
)@@G@@L+L2*(L-1)*PTHF EQU FLT+(FLT=0)*P*)IFNOT EQU (P(1)=1)**(P(1,1)=NOT)*\ DOSQ
)@@G@@ (THF=IFNOT+2)++(THF=IFNOT+4)=0 , G$$EFL 3,3*NCXF EQU THF=IFNOT+4*R DO PSR
)@@G@@<THF+2 , GO G$$I05T^0B G$$TSTCC-#@@@]@[@]9@@@K@B]-@DCJ@]9@@@@@@@@D[D@@]'SS
)@@G@@M@@@@@@@[@@@@@@@@@P           MVS): DO (P(0,0)=015)++(P(0,0)=0166) , GO ST
)@@G@@G$$D20*$PKTOFF EQU (P(0,0)=0102)++(P(0,0)=0170)*Q DO P(1)=0 , GO G$$D10TSU
)@@G@@^)G LA,U A0,$+5*( I$ 06,H1,A0,P(1,2),P(1,*1),P(1,1)+PKTOFF*? I$ 026,U,A0SV
)@@G@@,P(1,2),2*P(1,*2)+P(1,*1),P(1,1)*E GO G$$D99MV&)I LXI,U A0,0,A1*H LXM,U SW
)@@G@@A1,$+7*N SA,H1 A1,PKTOFF,A0*F LSSC A0,18*I LXM,U A1,0,A0*E SSL A0,188[ CSX
)@@G@@C-#@@@]@[@[;@@@K@B]-@C=$@[;@@@@@@@@][D@@[/M@@@@@@@#@@@@@@@@@P           SY
)@@G@@MDL)Z DO (G$CTR(5)=0)=0 , G$$GFL 1,1*BM EQU 1*JG$CTR*(5) EQU M*Z DO (G$CSZ
)@@G@@TR(2)=0)=0 , G$$GFL 1,2T])KK EQU G$CTR(1)+1*JG$CTR*(1) EQU K*KG$TYPE*(M)TA
)@@G@@ EQU 1*KG$SEQN*(M) EQU K*Y DO G$MASM=0 ,G$BSEQ*($) EQU K*< DO G$MASM=1 ,TB
)@@G@@G$BSEQ*($AP($)) EQU KT])-T EQU P(1,1)+(P(1)=0)*MAINPROGRAM*MG$FLAG*(K,3)TC
)@@G@@ EQU T8-ISSUB EQU (T=SUBROUTINE)++(T=LIJSCC-#@@@]@[@#]@@@K@B]-@DUY@#]@@@TD
)@@G@@@@@@@K[D@@##M@@@@@@@]@@@@@@@@@R           MYP)MTTL EQU G$CTR(4)+1*^ORIG*TE
)@@G@@MG$CTR**(4) EQU TTL*&G$TLBL**(TTL) EQU G$TLBL(TTL)+G$CTR(2)*ILIF EQU R(2TF
)@@G@@)=0*=FA(1) EQU R(2,1)+LIF*(G$TLBL(TTL)+1)*IDTH EQU R(1,3)T#)Q DO R(1,2) TG
)@@G@@, GO G$$T10T^)K G$$CAN R(1,1),1*S DO WA$(1)>1 , GO G$$T01*S G$$COD R(1,1TH
)@@G@@),1,0 FA(1)*E GO G$$T99MY*)Q G$$COD R(1,1),1,2+LIF*Y DO 1-LIF , I$ 074,0TI
)@@G@@4,,,,FA(1)CCC-#@@@]@[@]&@@@K@B]-@D J@]&@@@@@@@@D[D@@]$M@@@@@@@G@@@@@@@@@TJ
)@@G@@P           MP6)KK EQU G$CTR(1)+1*JG$CTR*(1) EQU K*KM EQU G$CTR(5)+1*JG$TK
)@@G@@CTR*(5) EQU M*KG$SEQN*(M) EQU K*KG$TYPE*(M) EQU 4T^)S DO G$CTR(6) , GO GTL
)@@G@@$$R10T])UG$FLAG*(K,20) EQU G$CTR(2)*OESCF EQU G$LABL(K,4)*:FALLF EQU (G$TM
)@@G@@FLAG(K,21)>0)*(1-G$FLAG(K,21))*;N DO 10 ,G$LABL*(K,N) EQU G$LABL(K,N)+G$TN
)@@G@@CTR(2)+G$FLAG(K,10)8)N DO 9 ,G$LABL*(K,N+1) EQU G$LABCC-#@@@]@[@[6@@@K@BTO
)@@G@@]-@@@@@[6@@@@@@@@A[D@@[7M@@@@@@@]@@@@@@@@@P           MB0)  PROC*HG$$FRGTP
)@@G@@** NAME*E GO G$$DIA*^ ENDT^)E GO G$$FRGMB;)A RES 1*E GO G$$DIAMB_)CA EQUTQ
)@@G@@ +)*E GO G$$DIAMC#)EG$DFLG*****KG$DFLG**** EQU 0*T DO P(1)>0 , RES P(1,1TR
)@@G@@)-$*E GO G$$DIAMCD)UA EQU + (I$ 0,0,0,0,077,0)MCP)B RES -1*MK EQU 1+(P(0TS
)@@G@@,0)=0)*IM EQU G$CTR(5)** G$ERFO G$TYPE(M),M,P(0,0),P(K,1),P(K,2)*B UNLISTT
)@@G@@T*D G$$IFLAG*B RES -2C@@C-#@@@]@[@]@@@@K@B]-@DIP@]@@@@@@@@@[@-@@][)QOLINTU
)@@G@@K*(1-(T=EXECSUB)))(]I DO KL-1 ,FNC(I) EQU 1+5*(G$FLAG(K,2,I)<A0)+3*(G$FLTV
)@@G@@AG(K,2,I)>A15)(#I DO KL-1 ,AFL(I) EQU G$FLAG(K,2,I)-A0*(FNC(I)=1)-(R1-1)TW
)@@G@@*(FNC(I)=4)(JI DO KL-1 , DO FNC(I)=1 ,FNC(I) EQU (FNC(I-1)<071)* (070*(ATX
)@@G@@FL(I+1)=AFL(I)+1)+1)T])S DO ST=STACK , GO G$$B10*Q DO G$MASM=0 ,IC EQU #TY
)@@G@@*T DO G$MASM=1 ,IC EQU $LCN*G$(G$LCTR(1))8Q DO G$MASM=0 , DO (#=ICC-#@@@TZ
)@@G@@]@[@][@@@K@B]-@B"*@][@@@@@@@@[@-@@]])NC)**(KL>1) , J $+KL*? DO G$MASM=1 UA
)@@G@@, DO ($LCN=IC)**(KL>1) , J $+KL*MG$LABL*(K,3) EQU $*D RES KL-1* $(IC)(HIUB
)@@G@@ DO KL-1 , DO FNC(I)>0 , I$ FNC(I),012*(FNC(I)=071),AFL(I),,,G$LABL(K,3)UC
)@@G@@+I-1*F DO 1 , ENDME%)ROI EQU P(SI+1,1)=OFFSET*NAI EQU P(SI,*KLX+2)*.OSV UD
)@@G@@EQU + (I$ 0,OI*P(SI+1,3),0,P(SI,KLX+2),2*AI,OI*P(SI+1,2))*?I DO KL-1 , SUE
)@@G@@ G$FLAG(K,2,I),OSV+(1-AI)*(I-1)8]G$CC)G@@@]@@@]]@@@@@@#@DB_1@]]@@@@@@@@[UF
)@@G@@@)D@@@)OLABL*(K,3) EQU 0-OSV*^ END@ C-#@@@]@[@]^@@@K@B]-@C@1@]^@@@@@@@@[UG
)@@G@@@-@@] )^K,1)*M DO T=CYCLIC , ENDT^)X DO G$FLAG(K,2)=0 , GO G$$X01*ONRR EUH
)@@G@@QU +G$FLAG(K,2)*VLINK(1) EQU G$FLAG(K,2,NRR)*QNR EQU NRR-(LINK(1)<0)*) DUI
)@@G@@O NRR>NR ,LINK(1) EQU -LINK(1)(AI DO NR ,FNC(I) EQU 010+017*(G$FLAG(K,2,UJ
)@@G@@I)<A0)+013*(G$FLAG(K,2,I)>A15)( I DO NR ,AFL(I) EQU G$FLAG(K,2,I)-A0*(FNUK
)@@G@@C(I)=010)-(R1-1)*(FNC(I)=023)8,I DO NR , DO FNC(I)=010 ,FNC(I) EQU (FNC(UL
)@@G@@I-1)<CC-#@@@]@[@] @@@K@B]-@C[1@] @@@@@@@@[@-@@]A)<071)* (061*(AFL(I+1)=AUM
)@@G@@FL(I)+1)+010)T])+ DO G$MASM=0 ,SR EQU 0-G$LABL(K,3)*$ DO G$MASM=1 ,SR EQUN
)@@G@@U $AP(0-G$LABL(K,3))(T DO (SR>0)=0 ,I DO NR , DO FNC(I)>0 , I$ FNC(I),01UO
)@@G@@3*(FNC(I)=071),AFL(I),,,G$LABL(K,3)+I-1T])S DO (SR>0)=0 , GO G$$X01T])NIUP
)@@G@@NC EQU SR**0400000*UXSR EQU (017000000**SR)*/4*( DO INC>0 , ANX,U 0,NR+(UQ
)@@G@@017000000**SR)*/48WI DO NR , L G$FLAG(K,2,I),(SCC-#@@@]@[@]A@@@K@B]-@C]1UR
)@@G@@@]A@@@@@@@@[@-@@]B)OR**007777177777)+I-1MF+)MG$LABL*(K,5) EQU $*: DO T=LUS
)@@G@@IJSUB , I$ 07,013,LINK(1),LINK(1),,0*: DO T=LDJSUB , I$ 07,012,LINK(1),LUT
)@@G@@INK(1),,0*Y DO T=SUBROUTINE , J 0,LINK(1)*, DO (T=EXECSUB)++(T=REMOTESUBUU
)@@G@@) , J G$LABL(K,4)*R DO $>G$LABL(K,5) , ENDT^)OXREG EQU G$FLAG(K,1)*Q DO UV
)@@G@@XREG>0 , GO G$$X02*W DO T=MAINPROGRAM , ER EXIT$*> DO T=CONTINGENCY , SZUW
)@@G@@,H1 G$LABL(K,4)CNCC-@@@@]@@@]B@@@@@@#@.CA6@]B@@@@@@@@[@).@@@*! DO T=CONTUX
)@@G@@INGENCY , I$ 074,04,,,1,G$LABL(K,4)*F DO 1 , ENDMF2)? DO T=CONTINGENCY ,UY
)@@G@@ I$ 051,H1,,,,G$LABL(K,4)*! DO T=CONTINGENCY , I$ 074,04,,,1,G$LABL(K,4)UZ
)@@G@@*9 DO G$MASM=0 , DO (G$LABL(K,4)<0)=0 , LX XREG,G$LABL(K,4)*9 DO G$MASM VA
)@@G@@, DO $AP(G$LABL(K,4))>=0 , LX XREG,G$LABL(K,4)*P I$ 074,04,,XREG,,$+1*B VB
)@@G@@ER 011*B ER 040*B ER 026*B ER 012*^ END@ GC-#@@@]@[@]G@@@K@B]-@CB6@]G@@@VC
)@@G@@@@@@@[@-@@]H)L2)>2)) , GO NOLXI(# DO P(2,5)<016 , I$ 046,P(2,5),XREG,P(2VD
)@@G@@,4),2*P(2,*4)+P(2,*3),P(2,3)*5 DO P(2,5)>015 , G$$IMU 046,P(2,5),XREG,P(VE
)@@G@@2,4),P(2,3)*ENOLXI NAME*QFUN EQU 074-BANKSW*065*-JAY EQU 013-BANKSW*(P(2VF
)@@G@@,2)=DBANK)*0 I$ FUN,JAY,XREG,P(1,2),2*P(1,*2)+P(1,*1),P(1,1)*>K DO P(2)*VG
)@@G@@(1-BANKSW) , SX XREG,P(2,K)*F DO 1 , ENDT])IG$$CL1*** NAME*D J P(1,1)*F VH
)@@G@@G$$PRB K,$CCC)E@@@]@@@]H@@@@@@#@BDKA@]H@@@@@@@@[@)B@@@*^ END*^ END@ NOLXVI
)@@G@@C-#@@@]@[@]J@@@K@B]-@DLG@]J@@@@@@@@[@-@@]K)M 1+IFNOT,CXF,IFNOT*G +P(THF+VJ
)@@G@@1,1)*F DO 1 , ENDMID)KK EQU G$CTR(1)+1*JG$CTR*(1) EQU K*SG$CTR*(5) EQU GVK
)@@G@@$CTR(5)+1*IM EQU G$CTR(5)*KG$TYPE*(M) EQU 2*KG$SEQN*(M) EQU KT^)>G$LABL*VL
)@@G@@(K,1) EQU G$LABL(K,1)+G$CTR(2)*+G$CTR*(2) EQU G$CTR(2)+G$FLAG(K,5)*1N DOVM
)@@G@@ 2 ,G$LABL*(K,N+1) EQU G$LABL(K,N+1)+G$CTR(2)*.N DO 2 ,G$LABL*(K,N+3) EQVN
)@@G@@U G$LABL(K,N+3)+G$CTR(2)+G$FLAG(K,4)T]0[ CC-#@@@]@[@]K@@@K@B]-@DMG@]K@@@VO
)@@G@@@@@@@[@-@@]L)7DO G$CTR(7) , DO (G$LABL(K,1)=$)=0 , G$$DFL G$LABL(K,1)*MGVP
)@@G@@$LABL*(K,1) EQU $*O DO LOOF , GO G$$I10T])?NOGEN EQU G$CTR(7)*(G$LABL(K,VQ
)@@G@@5)=G$LABL(K,1))*WG$CTR*(4) EQU G$CTR(4)+NOGEN*J DO NOGEN , ENDT])QG$FLAGVR
)@@G@@*(K,1) EQU IFNOT*OG$FLAG*(K,6) EQU CXF*P DO G$CTR(6) , G$$SVAT])URVF EQUVS
)@@G@@ IFNOT--G$FLAG(K,2)*NLIG EQU G$FLAG(K,3)8( DO 1-LIG , G$$TST 1+IFNOT,CXFVT
)@@G@@,RVF G$LABLCC)9@@@]@@@]L@@@@@@#@6CD6@]L@@@@@@@@[@)6@@@) (K,4)*) DO LIG ,VU
)@@G@@ G$$TST 1+IFNOT,CXF,RVF*SG$FLAG*(K,2) EQU SIDE(1)*MG$LABL*(K,2) EQU $*F VV
)@@G@@DO 1 , ENDMI,)+ DO (P(3,1)=VARY)=0 , G$$EFL 2,010*CVI EQU 3*MP(3,1) EQU VW
)@@G@@LOOKFOR*LKW(1) EQU LOOKFOR*MG$LABL*(K,2) EQU $*B G$$LAN*< G$$LGE 3,FI(3)VX
)@@G@@,FI(4) G$LABL(K,4),1*ZG$CTR*(3) EQU G$CTR(3)+G$CTR(6)T])^ END@@@@@C-#@@@VY
)@@G@@]@[@]O@@@K@B]-@CE6@]O@@@@@@@@[@-@@]P)A4)=$))*K RES G$FLAG(K,4)T^)? DO ($VZ
)@@G@@>G$LABL(K,2))++G$FLAG(K,2) , GO G$$I20**G$FLAG*(K,5) EQU G$LABL(K,1)-G$LWA
)@@G@@ABL(K,2)*M RES G$LABL(K,1)-$*F DO 1 , ENDMJ8)> DO G$LABL(K,4)=0 ,G$LABL*WB
)@@G@@(K,4) EQU $T])*G$FLAG*(K,2) EQU G$LABL(K,3)=G$LABL(K,2)*)G$FLAG*(K,3) EQWC
)@@G@@U $-G$LABL(K,2)=1*= DO G$FLAG(K,2)++G$FLAG(K,3)=0 , ENDTB)LKK EQU G$CTR(WD
)@@G@@3)+18XI DO G$ARGS(KK) ,J DO G$ARGS(CC-#@@@]@[@]P@@@K@B]-@CF6@]P@@@@@@@@[WE
)@@G@@@-@@]Q)-KK,I) ,P(I,J) EQU +G$ARGS(KK,I,J)(FI DO G$ARGS(KK) ,J DO G$ARGS(WF
)@@G@@KK,I) , DO G$ARGS(KK,I,*J) ,P(I,J) EQU *P(I,J)T])PIFNOT EQU G$FLAG(K,1)*WG
)@@G@@NCXF EQU G$FLAG(K,6)*URVF EQU IFNOT--G$FLAG(K,2)* START*\ DO 1-G$FLAG(K,WH
)@@G@@3) , G$$TST 1+IFNOT,CXF,RVF $+10** DO G$FLAG(K,3) , G$$TST 1+IFNOT,CXF,RWI
)@@G@@VF*SG$CTR*(4) EQU G$CTR(4)-1T^))SIZE EQU G$LABL(K,2)-G$LABL(K,1)8FG$FLAGWJ
)@@G@@*(K,5CC)I@@@]@@@]Q@@@@@@#@FDN-@]Q@@@@@@@@[@)F@@@)M) EQU $-START-SIZE*F RWK
)@@G@@ES 0-SIZE*^ END@ABC-#@@@]@[@]S@@@K@B]-@DO!@]S@@@@@@@@[@-@@]T)[G*YXREG EQWL
)@@G@@U P(1,2)+X11*(P(1,2)=0)(D DO BANKSW**(P(3)>2) , I$ 046,P(3,5),XREG,P(3,4WM
)@@G@@),3*P(3,*4)+P(3,*3),P(3,3)MLH)>G$LABL*(K,0) EQU G$LABL(K,0)+G$CTR(2)*8 DWN
)@@G@@O G$CTR(7) , DO (G$LABL(K,0)=$)=0 , G$$DFL G$LABL(K,0)*MG$LABL*(K,0) EQUWO
)@@G@@ $T])O RES CALOPT*G$CTR(6)MLO)S DO G$CTR(6) , GO G$$C40T^)7 DO 1-CALOPT WP
)@@G@@, DO (P(1,1)<A0)++(P(1,1)>A3) , G$$EFL 3,1T 0HNUMCA EQU +G$CC-#@@@]@[@]TWQ
)@@G@@@@@K@B]-@DP!@]T@@@@@@@@[@-@@]U)DFLAG(K,1)*SCMAX(1) EQU -34359738367(@L DWR
)@@G@@O NUMCA , DO G$FLAG(K,4,L)>CMAX(1) ,CMAX(1) EQU G$FLAG(K,4,L)*TCMIN(1) EWS
)@@G@@QU 0377777777777(@L DO NUMCA , DO G$FLAG(K,4,L)<CMIN(1) ,CMIN(1) EQU G$FWT
)@@G@@LAG(K,4,L)*LOFF EQU 1-CMIN(1)*PJTSIZ EQU CMAX(1)+OFF*6JTL EQU JTSIZ-(G$FWU
)@@G@@LAG(K,3)=-1)*(G$FLAG(K,4,1)=CMAX(1))*% DO CALOPT , DO (CMIN(1)=0)=0 , G$WV
)@@G@@$EFL 3,5T^0LG$LABL*(K,3) EQU CC-#@@@]@[@]U@@@K@B]-@DQ!@]U@@@@@@@@[@-@@]VWW
)@@G@@)OG$LABL(K,3)+G$CTR(2)*&PRSIZ EQU (CALOPT=0)*(4-3*G$FLAG(K,6))*2G$CTR*(2WX
)@@G@@) EQU G$CTR(2)+(G$FLAG(K,3)<1)*(PRSIZ+JTL)*!N DO 2 ,G$LABL*(K,N) EQU G$LWY
)@@G@@ABL(K,N)+G$CTR(2)*R DO G$FLAG(K,3)>0 , ENDT^))ISNF EQU G$LABL(K,2)>G$LABWZ
)@@G@@L(K,1)*+ DO (NFI(1)>0)**ISNF , G$$EFL 3,07*XNFA(1) EQU G$LABL(K,3-2*ISNFXA
)@@G@@)*= DO NFI(1)>0 ,NFA(1) EQU P(NFI(1),2)T])T DO CALOPT ,NFA(1) EQU -1T]C@XB
)@@G@@C-#@@@]@[@]V@@@K@B]-@DR!@]V@@@@@@@@[@-@@]W)WN DO JTSIZ ,JT(N) EQU NFA(1)XC
)@@G@@T])/N DO NUMCA ,JT(G$FLAG(K,4,N)+OFF) EQU G$LABL(K,4,N)+G$CTR(2)T#)5N DOXD
)@@G@@ JTSIZ , DO JT(N)=G$CTR(2) ,JT(N) EQU G$LABL(K,3)T#)?N DO CALOPT*JTSIZ ,XE
)@@G@@ DO JT(N)=-1 , G$$EFL 3,6T^)ROSADR EQU G$LABL(K,3)+1*2N DO JTSIZ , DO JTXF
)@@G@@(N)=OSADR ,JT(N) EQU G$LABL(K,3)TA)Q DO CALOPT , GO G$$C26*X DO G$FLAG(KXG
)@@G@@,6)>0 , GO G$$C258Q TLE,XU P(1,1),CMAX(1)CC-#@@@]@[@]W@@@K@B]-@CH[@]W@@@XH
)@@G@@@@@@@[@-@@]X)]+1*Q TLE,XU P(1,1),CMIN(1)*D J NFA(1)MML)J J $+OFF,P(1,1)*XI
)@@G@@E GO G$$C29MMO)QFUN EQU 074-BANKSW*065*-JAY EQU 013-BANKSW*(P(3,2)=DBANKXJ
)@@G@@)*SHI EQU 2*P(2,*2)+P(2,*1)*- I$ FUN,JAY,XREG,P(2,2),HI,P(2,1)MMW)UG$LABXK
)@@G@@L*(K,6) EQU $-CMIN(1)*MN DO JTL , J JT(N)MM<)TG$FLAG*(K,3) EQU 0-CALOPT*XL
)@@G@@MG$LABL*(K,1) EQU $*MG$FLAG*(K,1) EQU 0*OG$LABL*(K,4,0) EQU $*MG$FLAG*(KXM
)@@G@@,2) EQU 0C@@C)D@@@]@@@]X@@@@@@#@ACIB@]X@@@@@@@@[@)A@@@*^ END@@A@@@C-#@@@XN
)@@G@@]@[@]Z@@@K@B]-@CJB@]Z@@@@@@@@[@-@@]))R)=MAX(1) ,IMAX(1) EQU N*KMTEMP EQUXO
)@@G@@ P(1,1)*LP(1,1) EQU MAX(1)*QP(1,IMAX(1)) EQU MTEMPMNK)RREDUN EQU $=G$LABXP
)@@G@@L(K,3)*VGOTSOM EQU $>G$LABL(K,4,JJ)*6 DO (G$FLAG(K,3)<0)**(JJ=1) ,G$FLAGXQ
)@@G@@*(K,3) EQU GOTSOM-2T]), DO GOTSOM**1-REDUN , I$ 074,04,,,,G$LABL(K,3)*Y XR
)@@G@@DO GOTSOM ,G$LABL*(K,5) EQU $*<G$CTR*(2) EQU G$CTR(2)-REDUN*GOTSOM8$N DOXS
)@@G@@ (1-GOTSOM)*G$FLAG(K,2) ,G$LABL*(K,CC-#@@@]@[@])@@@K@B]-@CKB@])@@@@@@@@[XT
)@@G@@@-@@]-)J4,JJ+1-N) EQU 0T^)SG$FLAG*(K,1) EQU JJ+P(1)*QG$FLAG*(K,2) EQU +PXU
)@@G@@(1)*%N DO P(1) ,G$FLAG*(K,4,JJ+N) EQU +(P(1,N))(0 DO G$CTR(7) , DO (G$LAXV
)@@G@@BL(K,4,JJ+1)=0)=0 , DO (G$LABL(K,4,JJ+1)+G$CTR(2)=$)=0 , G$$DFL G$LABL(KXW
)@@G@@,4,JJ+1)+G$CTR(2)T])+N DO P(1) ,G$LABL*(K,4,JJ+N) EQU $*Y DO (P(2,1)=REMXX
)@@G@@OTESUB)=0 , ENDT])>G$FLAG*(K,5) EQU G$FLAG(K,5)+G$CTR(6)*M DO G$CTR(6) ,XY
)@@G@@ ENDCCC)Y@@@]@@@]-@@@@@@#@VCK+@]-@@@@@@@@[@)V@@@*U G$$PRA P(2,2),G$LABL(XZ
)@@G@@K,3)*- DO P(2,3)=VIA ,P(2,2) EQU P(2,4)*^HERE*?N DO P(1) , G$$PJT G$LABLYA
)@@G@@(K,6)+P(1,N),P(2,2)T])F RES HERE-$*^ END@,C-#@@@]@[@]=@@@K@B]-@CL+@]=@@@YB
)@@G@@@@@@@[@-@@]>)CMIN(1)+1*. DO G$FLAG(K,3)=-1 ,JTS(1) EQU JTS(1)-(CMAX(1)=GYC
)@@G@@$FLAG(K,4,1))T])8 DO G$LABL(K,0)=$ , DO G$FLAG(K,5)=0 ,G$FLAG*(K,3) EQU YD
)@@G@@1T#)RREDUN EQU G$LABL(K,5)=$*&PRSIZ EQU (CALOPT=0)*(4-3*G$FLAG(K,6))*,FLYE
)@@G@@OAT EQU (G$FLAG(K,3)<1)*(PRSIZ+JTS(1)-REDUN)*N RES FLOAT*G$CTR(6)*>G$CTRYF
)@@G@@*(2) EQU G$CTR(2)-FLOAT*G$CTR(7)T]0\ DO G$CTR(7) , DO (G$LABL(K,3)=$)=0 YG
)@@G@@, G$$DFL G$CC)L@@@]@@@]>@@@@@@#@IDV=@]>@@@@@@@@[@)I@@@)DLABL(K,3)*MG$LABYH
)@@G@@L*(K,3) EQU $*LG$CTR*(5) EQU M-1T])^ END@GC-#@@@]@[@]$@@@K@B]-@DW0@]$@@@YI
)@@G@@@@@@@[@-@@]*)VL(K,N+1)+G$FLAG(K,16)+FALLF*5N DO 6 ,G$LABL*(K,N+4) EQU G$YJ
)@@G@@LABL(K,N+4)+G$FLAG(K,17)*5N DO 5 ,G$LABL*(K,N+5) EQU G$LABL(K,N+5)+G$FLAYK
)@@G@@G(K,13)([N DO 4 ,G$LABL*(K,N+6) EQU G$LABL(K,N+6)+G$FLAG(K,14)+G$FLAG(K,YL
)@@G@@5)*5N DO 3 ,G$LABL*(K,N+7) EQU G$LABL(K,N+7)+G$FLAG(K,18)*Y DO ESCF=0 ,GYM
)@@G@@$LABL*(K,4) EQU 0MQL)EC(1) EQU 1*KKW(1) EQU P(1,1)MQR)MWI EQU KW(1)=WHILYN
)@@G@@E8CG$FLAG*(CC-#@@@]@[@]*@@@K@B]-@DY]@]*@@@@@@@@[@-@@]()FK,4) EQU WI*O DOYO
)@@G@@ WI=0 , GO G$$R59*)WYNOT EQU (P(2)=1)**(P(2,1)=NOT)*"WC EQU ((P(3+WYNOT,YP
)@@G@@1)=OR)++(P(3+WYNOT,1)=AND))**(P(3+WYNOT)=1)*PC(1) EQU 3+WYNOT+2*WC*NKW(1YQ
)@@G@@) EQU P(C(1),1)MQ*)- DO (KW(1)=LOOKFOR)=0 , GO G$$R61*HVI EQU C(1)+2*4 DYR
)@@G@@O (P(VI,1)>VARY)++(P(VI,1)<LOOKFOR) , G$$EFL 2,010*NP(VI,1) EQU LOOKFOR*YS
)@@G@@MG$FLAG*(K,8) EQU 1*E GO G$$R62MQ00LVI EQU C(1)*((KW(CC-#@@@]@[@](@@@K@BYT
)@@G@@]-@CL0@](@@@@@@@@[@-@@]%)V1)>JMGI-1)**(KW(1)<VARY+1))*O DO VI=0 , GO G$$YU
)@@G@@R69MQ4)B G$$LAN*QG$FLAG*(K,2) EQU FI(5)*QG$FLAG*(K,3) EQU FI(3)*KC(1) EQYV
)@@G@@U FI(7)+1*NKW(1) EQU P(C(1),1)MQ')NG$FLAG*(K,1) EQU VIT^)<G$FLAG*(K,6) EYW
)@@G@@QU C(1)*(KW(1)=UNTIL)MR#): DO G$FLAG(K,10) , I$ 074,04,,,,G$LABL(K,7)*<GYX
)@@G@@$CTR*(2) EQU G$CTR(2)+G$FLAG(K,10)T])MG$LABL*(K,1) EQU $8> DO (WI>0)**1-YY
)@@G@@G$FLAG(K,11) , G$$TST 2CC-#@@@]@[@]%@@@K@B]-@CM0@]%@@@@@@@@[@-@@]:)V+WYNYZ
)@@G@@OT,WC,WYNOT G$LABL(K,9)*!G$CTR*(4) EQU G$CTR(4)+((WI>0)**G$FLAG(K,11))*<ZA
)@@G@@G$CTR*(2) EQU G$CTR(2)+G$FLAG(K,16)T^)MG$LABL*(K,2) EQU $(S DO VI>0 , DOZB
)@@G@@ (P(VI,1)=LOOKFOR)++((FI(5)=FI(6))=0) , G$$LGE VI,FI(3),FI(4) G$LABL(K,9ZC
)@@G@@),1T#)& DO G$LABL(K,2)<$ ,G$FLAG*(K,21) EQU 0T^)B G$$SVA*MG$FLAG*(K,9) EZD
)@@G@@QU 0*8 DO G$CTR(7) , DO (G$LABL(K,3)=$)=0 , G$$DFL G$LABL(K,3)8[GCC)G@@@ZE
)@@G@@]@@@]:@@@@@@#@DCN9@]:@@@@@@@@[@)D@@@)L$LABL*(K,3) EQU $T])^ END@F*C-#@@@ZF
)@@G@@]@[@]!@@@K@B]-@CO9@]!@@@@@@@@[@-@@],)^,10)*V DO G$FLAG(K,8) , GO G$$E10TZG
)@@G@@])) DO (P(1,1)=WHEN)=0 , G$$EFL 3,4*-WHENOT EQU (P(2)=1)**(P(2,1)=NOT)*NZH
)@@G@@CFLG EQU P>3+WHENOTTA-N DO G$CTR(6)++G$FLAG(K,12) , G$$TST 2+WHENOT,CFLGZI
)@@G@@,WHENOT G$LABL(K,1+5*G$FLAG(K,19))T])QSIZE EQU $-G$LABL(K,4)*O RES 0-G$CZJ
)@@G@@TR(6)*SIZE*:G$CTR*(4) EQU G$CTR(4)+G$CTR(7)+G$FLAG(K,7)82 DO G$FLAG(K,12ZK
)@@G@@)++G$FLAG(K,7)=0 , G$$TST 2+WHENOT,CC)$@@@]@@@],@@@@@@#@=CRW@],@@@@@@@@[ZL
)@@G@@@)=@@@)UCFLG,1-WHENOT G$LABL(K,10)T])QWIZE EQU $-G$LABL(K,4)T])& DO G$CTZM
)@@G@@R(6) ,G$FLAG*(K,7) EQU SIDE(1)*<G$CTR*(2) EQU G$CTR(2)+G$FLAG(K,17)*VG$FZN
)@@G@@LAG*(K,17) EQU SIZE-WIZEMSG)MG$LABL*(K,5) EQU $*^ END@C-#@@@]@[@]0@@@K@BZO
)@@G@@]-@DZ9@]0@@@@@@@@[@-@@]1)AK,6) 1*MG$LABL*(K,6) EQU $*F DO 1 , ENDMS8)V DZP
)@@G@@O G$FLAG(K,9) , GO G$$Z50*MG$FLAG*(K,9) EQU 1*> DO G$LABL(K,6)=0 ,G$LABLZQ
)@@G@@*(K,6) EQU $*JKK EQU G$CTR(3)*"I DO G$ARGS(KK) ,J DO G$ARGS(KK,I) ,P(I,JZR
)@@G@@) EQU +G$ARGS(KK,I,J)(FI DO G$ARGS(KK) ,J DO G$ARGS(KK,I) , DO G$ARGS(KKZS
)@@G@@,I,*J) ,P(I,J) EQU *P(I,J)T])MG$CTR*(3) EQU KK-1*: DO (Y(0,0)=1)**(G$ARGZT
)@@G@@S(KK)=0) , G$$GFL 2,3C,CC-#@@@]@[@]1@@@K@B]-@D)9@]1@@@@@@@@[@-@@]2*MLL EZU
)@@G@@QU G$FLAG(K,2)*WDFER EQU LL++(G$FLAG(K,4)>0)TA) UNORG*MUN EQU G$FLAG(K,6ZV
)@@G@@)*O DO UN=0 , GO G$$Z30*YKILL EQU G$CTR(7)**G$FLAG(K,7)*+G$CTR*(2) EQU GZW
)@@G@@$CTR(2)+G$FLAG(K,5)*VG$CTR*(4) EQU G$CTR(4)+KILL*O DO KILL , GO G$$Z30*=ZX
)@@G@@UNN EQU (P(UN+1)=1)**(P(UN+1,1)=NOT)(]UNC EQU (P(UN+UNN+2)=1)**((P(UN+UNZY
)@@G@@N+2,1)=OR)++(P(UN+UNN+2,1)=AND))8Z G$$TST UN+UNN+1,UNC,DFER--UNN CC-#@@@ZZ
)@@G@@]@[@]2@@@K@B]-@D-_@]2@@@@@@@@[@-@@]3)MG$LABL(K,1+9*DFER)MTQ)SG$FLAG*(K,5AA
)@@G@@) EQU UNORG-$*: DO G$FLAG(K,14) , I$ 074,04,,,,G$LABL(K,1)*<G$CTR*(2) EQAB
)@@G@@U G$CTR(2)+G$FLAG(K,14)*NG$FLAG*(K,14) EQU 0TB)MG$LABL*(K,7) EQU $T]))WYAC
)@@G@@NOT EQU (P(2)=1)**(P(2,1)=NOT)*"WC EQU ((P(3+WYNOT,1)=OR)++(P(3+WYNOT,1)AD
)@@G@@=AND))**(P(3+WYNOT)=1)(L DO (G$FLAG(K,4)>0)**1-G$FLAG(K,15) , G$$TST 2+WAE
)@@G@@YNOT,WC,LL=WYNOT G$LABL(K,2+7*LL)T]CC-#@@@]@[@]3@@@K@B]-@D+_@]3@@@@@@@@[AF
)@@G@@@-@@]4)<G$CTR*(4) EQU G$CTR(4)+G$FLAG(K,15)*<G$CTR*(2) EQU G$CTR(2)+G$FLAG
)@@G@@AG(K,18)T^)MG$LABL*(K,8) EQU $*; DO G$CTR(6) ,G$FLAG*(K,7) EQU G$FLAG(K,AH
)@@G@@7)++(G$FLAG(K,1)>0)*3 DO LL , G$$LGE G$FLAG(K,1),G$FLAG(K,3) G$LABL(K,3)AI
)@@G@@T])3 DO G$CTR(6) ,G$FLAG*(K,7) EQU G$FLAG(K,7)++SIDE(1)*' DO G$CTR(7) , AJ
)@@G@@DO (G$LABL(K,9)=$)=0 , G$$DFL G$LABL(K,9) 2*MG$LABL*(K,9) EQU $T^0E DO YAK
)@@G@@(0,0)CC-#@@@]@[@]4@@@K@B]-@CSW@]4@@@@@@@@[@-@@]5)C=1 , ENDMT')/ DO G$CTRAL
)@@G@@(7) , DO (G$LABL(K,10)=$)=0 , G$$DFL G$LABL(K,10) 3*NG$LABL*(K,10) EQU $AM
)@@G@@*UG$CTR*(2) EQU G$FLAG(K,20)*LG$CTR*(5) EQU M-1*M DO G$CTR(7) , ENDTB)SEAN
)@@G@@SCAPP EQU G$LABL(K,4)>0*$RVAC EQU G$LABL(K,3)=G$LABL(K,5-ESCAPP)*)EVAC EAO
)@@G@@QU G$LABL(K,5)=G$LABL(K,6)*!UOVAC EQU G$LABL(K,6)=G$LABL(K,7)+G$FLAG(K,5AP
)@@G@@)*)OVAC EQU G$LABL(K,6)=G$LABL(K,7)8EAVAC EQU GCC-#@@@]@[@]5@@@K@B]-@CTWAQ
)@@G@@@]5@@@@@@@@[@-@@]6)R$LABL(K,9)=G$LABL(K,10)T])3NOKILL EQU G$FLAG(K,7)++1AR
)@@G@@-(RVAC**EVAC**UOVAC**AVAC)T])QVATBOT EQU G$FLAG(K,2)*TLOOBOT EQU VATBOT+AS
)@@G@@+1-OVAC*TEFOLLO EQU LOOBOT++1-AVACT^)SWHSPEC EQU G$FLAG(K,4)>0*<WONET EQAT
)@@G@@U 1=G$LABL(K,2)-G$LABL(K,1)*<WONEB EQU 1=G$LABL(K,8)-G$LABL(K,7)T])>WHIBAU
)@@G@@OT EQU (EFOLLO++1-ESCAPP)**NOKILL*TWHISBO EQU WHSPEC**WHIBOT8VWHITOP EQUAV
)@@G@@ (WONET**WONEB**1CC-#@@@]@[@]6@@@K@B]-@CUW@]6@@@@@@@@[@-@@]7)U-VATBOT++1AW
)@@G@@-WHIBOT)**NOKILLT^)+G$FLAG*(K,11) EQU WHSPEC**1-WHITOP*8G$FLAG*(K,16) EQAX
)@@G@@U (G$LABL(K,1)-G$LABL(K,2))*G$FLAG(K,11)*+G$FLAG*(K,15) EQU WHSPEC**1-WHAY
)@@G@@IBOT*8G$FLAG*(K,18) EQU (G$LABL(K,7)-G$LABL(K,8))*G$FLAG(K,15)T^))G$FLAGAZ
)@@G@@*(K,19) EQU LOOBOT++WHISBO*0G$FLAG*(K,12) EQU (G$FLAG(K,19)**EVAC=0)**NOBA
)@@G@@KILL*:G$FLAG*(K,17) EQU G$FLAG(K,17)*G$FLAG(K,12)8C DO 1-NOCC-#@@@]@[@]7BB
)@@G@@@@@K@B]-@CVW@]7@@@@@@@@[@-@@]8)8KILL ,G$FLAG*(K,17) EQU ESCAPP*(G$LABL(KBC
)@@G@@,4)-G$LABL(K,5))(@G$FLAG*(K,13) EQU NOKILL**ESCAPP**G$FLAG(K,12)**(EFOLLBD
)@@G@@O++WHISBO)T^)4G$FLAG*(K,10) EQU (VATBOT++1-WHITOP**WHSPEC)**NOKILLTD)>CABE
)@@G@@NFAL EQU 1-WHSPEC**(G$FLAG(K,21)>0)*Z DO CANFAL ,G$FLAG*(K,10) EQU 0*- DBF
)@@G@@O 1-CANFAL ,G$FLAG*(K,21) EQU 0T^)!UNTOP EQU (G$FLAG(K,6)>0)**(VATBOT++WBG
)@@G@@HSPEC=0)8NG$FLAG*(K,14) EQU (CC)!@@@]@@@]8@@@@@@#@%CXA@]8@@@@@@@@[@)%@@@BH
)@@G@@),OVAC**ESCAPP++WHISBO++VATBOT++UNTOP=0)**NOKILL*$G$FLAG*(K,5) EQU G$FLABI
)@@G@@G(K,5)*(1-NOKILL)T^)TG$FLAG*(K,7) EQU 1-NOKILL(Z RES G$FLAG(K,5)+G$FLAG(BJ
)@@G@@K,10)+G$FLAG(K,16)+G$FLAG(K,17)+ G$FLAG(K,13)+G$FLAG(K,14)+G$FLAG(K,18)TBK
)@@G@@])^ END@+WYNC)-@@@]@@@]'@@@@@@#@YCX=@]'@@@@@@@@[@)Y@@@)DGO G$$D99MV1)Q LBL
)@@G@@XI,U A0,$+(P(1)>0)+3*8 DO P(1)>0 , I$ 026,U,A0,P(1,2),2*P(1,*2)+P(1,*1),BM
)@@G@@P(1,1)MV5)E ER P(0,0)*L I$ 074,04,,,,$+2*K AA,U A0,0400000*^ END@7C-#@@@BN
)@@G@@]@[@]/@@@K@B]-@CY=@]/@@@@@@@@[@-@@].)Q1)>1)++U16 , GO G$$A30T^)IPI3 EQU BO
)@@G@@P(I,3)*Y DO G$MASM=1 ,PI3 EQU $AP(PI3)*&NEGEQU EQU (P(I,5)=017)**(PI3>03BP
)@@G@@77777)*0OFVAL EQU 0377777+0400000*((P(I,5)=016)++NEGEQU)(@FUDGE EQU ((LTBQ
)@@G@@-LE)*(P(I,2)=LE)+(GE-GT)*(P(I,2)=GT))* (PI3<OFVAL)T])TP**(I,2) EQU P(I,2BR
)@@G@@)+FUDGE*ZP**(I,3) EQU P(I,3)+1-(FUDGE=0)*" DO ((P(I,3)=0)**(P(I,4)=0)=0)BS
)@@G@@++(G$ALTT(P(I,2))=0) , GO G$$A30T CCC-#@@@]@[@].@@@K@B]-@CZ=@].@@@@@@@@[BT
)@@G@@@-@@]")S DO 1-G$AMPR , GO G$$A30*, DO G$MASM=0 , DO (#(P(I,3))=-2)=0 , GBU
)@@G@@O G$$A30*\ DO G$MASM=1 , DO ($BA(P(I,3))=0)=0 , GO G$$A30*VP**(I,3) EQU BV
)@@G@@G$ALTT(P(I,2))*U DO G$MASM=0 ,P**(I) EQU 3*Y DO G$MASM=1 ,P**(I,4) $DELEBW
)@@G@@TE*Y DO G$MASM=1 ,P**(I,5) $DELETE*E GO G$$A20MW')Q DO P(I)>3 , GO G$$A3BX
)@@G@@0*IREG EQU P(I,3)*? DO G$MASM=1 , DO ($BA(REG)=0)=0 , GO G$$A308G DO G$MBY
)@@G@@ASM=0CC)_@@@]@@@]"@@@@@@#@/C+$@]"@@@@@@@@[@)/@@@)Z , DO (#(REG)=-2)=0 , BZ
)@@G@@GO G$$A30*< DO (REG<A0)++(REG>A15) , GO G$$A30*NP**(I,3) EQU P(I,1)*KP**CA
)@@G@@(I,1) EQU REGMX#)JP**(I,2) EQU IS*EN(1) EQU 3MXB)TJ(1) EQU P(I,G$KSF(N(1CB
)@@G@@)))*- DO DTH ,J(1) EQU G$IV(N(1),J(1))*R DO J(1)<1 , G$$EFL 1,2*VNI$*(K)CC
)@@G@@ EQU G$FJ(N(1),J(1))*VWA$*(K) EQU G$WS(N(1),J(1))*KKE$*(K) EQU J(1)*KTP$CD
)@@G@@*(K) EQU N(1)*^ END@PEC=C-#@@@]@[@#@@@@K@B]-@C<$@#@@@@@@@@@[@-@@#[)PI,3)CE
)@@G@@+(1-CGISF)*Q(2,1)*=SIDE**(1) EQU SIDE(1)++(N=5)++(HI>0)*< DO G$FJ(N,JI(1CF
)@@G@@),1)>077 , GO G$$G10T^)LJIU EQU JI(2-WOK)*QNUMINS EQU G$FJ(N,JIU)*4K DO CG
)@@G@@NUMINS ,FUN(K) EQU G$FCF(N)+CGISF*G$FJ(N,JIU,K)*3K DO NUMINS ,JAY(K) EQUCH
)@@G@@ JJJ+(1-CGISF)*G$FJ(N,JIU,K)*5K DO NUMINS*(1-U18) , I$ FUN(K),JAY(K),AAACI
)@@G@@,XXX,HI,UUU*2K DO NUMINS*U18 , G$$IMU FUN(K),JAY(K),AAA,XXX,UUUCC^C-#@@@CJ
)@@G@@]@@@#[@@@@@@]-@C>$@#[@@@@@@@@[@-@@@@*?REVER**(1) EQU G$FJ(N,JI(1))*G$FJ(CK
)@@G@@N,JI(2))=1*& DO REVER(1)++WOK=0 , I$ 074,04,,,,$+2*F DO 1 , ENDMX/)RFUN CL
)@@G@@EQU G$FJ(N,JI(1),1)*T DO FUN=01637 , GO G$$G20T#)VAREG EQU AAA+A0*(FUN>0CM
)@@G@@1700)*1 I$ FUN*/-4,FUN**017,AREG,,,WOK*UUU+(WOK=0)*($+2)*W DO WOK=0 , I$CN
)@@G@@ 074,04,,,,UUU*F DO 1 , ENDMYA)< I$ FUN*/-4,FUN**017,AAA,XXX,HI,UUU*W DOCO
)@@G@@ WOK=0 , I$ 074,04,,,,$+2*^ END@M=0CC-#@@@]@[@##@@@K@B]-@C&6@##@@@@@@@@[CP
)@@G@@@-@@#^*E GO G$$T99MY\))K DO 2 ,II(K) EQU R(1,1)+2*(K=2)*RK DO 2 , G$$CANCQ
)@@G@@ II(K),K*:K DO 2 ,IX(K) EQU K+(WA$(2)<WA$(1))*(3-2*K)T])YWOVR EQU (WA$(1CR
)@@G@@)>1)+(WA$(2)>1)*( DO (P(R(1,1)+1,1)=AND)=1-DTH , GO G$$T20T^)Q DO WOVR>0CS
)@@G@@ , GO G$$T11T])> G$$COD II(IX(1)),IX(1),1 G$TLBL(TTL)*Z G$$COD II(IX(2))CT
)@@G@@,IX(2),0 FA(1)*E GO G$$T99MY")Q DO WOVR>1 , GO G$$T13TB0O DO (WA$(IX(1))CU
)@@G@@=0)++CC-#@@@]@[@#^@@@K@B]-@D&X@#^@@@@@@@@[@-@@# )0(G$FJ(TP$(IX(1)),KE$(ICV
)@@G@@X(1)),1)<0100) , GO G$$T12T])> G$$COD II(IX(1)),IX(1),1 G$TLBL(TTL)*X G$CW
)@@G@@$COD II(IX(2)),IX(2),2+LIF*Y DO 1-LIF , I$ 074,04,,,,FA(1)*E GO G$$T99MZCX
)@@G@@H)T G$$COD II(IX(2)),IX(2),2*Z G$$COD II(IX(1)),IX(1),0 FA(1)*E GO G$$T9CY
)@@G@@9MZM)N DO LIF , GO G$$T14*T G$$COD II(IX(1)),IX(1),3*T I$ 074,04,,,,G$TLCZ
)@@G@@BL(TTL)*T G$$COD II(IX(2)),IX(2),28F I$ 074,04,CC-#@@@]@[@# @@@K@B]-@D$5DA
)@@G@@@# @@@@@@@@[@-@@#A)C,,,FA(1)*E GO G$$T99MZU)W DO NI$(IX(1))>1 , GO G$$T1DB
)@@G@@5T])T G$$COD II(IX(2)),IX(2),2*T G$$COD II(IX(1)),IX(1),3*E GO G$$T99MZ-DC
)@@G@@)W DO NI$(IX(2))>1 , GO G$$T16T])T G$$COD II(IX(1)),IX(1),2*T G$$COD II(DD
)@@G@@IX(2)),IX(2),3*E GO G$$T99MZ*)T G$$COD II(IX(1)),IX(1),3*T I$ 074,04,,,,DE
)@@G@@G$TLBL(TTL)*T G$$COD II(IX(2)),IX(2),3*E GO G$$T99MZ2)Q DO WOVR>0 , GO GDF
)@@G@@$$T21T]0C G$$COD CC-#@@@]@[@#A@@@K@B]-@D(B@#A@@@@@@@@[@-@@#B)RII(IX(1)),DG
)@@G@@IX(1),0 FA(1)*Z G$$COD II(IX(2)),IX(2),0 FA(1)*E GO G$$T99MZ9)Q DO WOVR>DH
)@@G@@1 , GO G$$T23T])Z G$$COD II(IX(1)),IX(1),0 FA(1)*X G$$COD II(IX(2)),IX(2DI
)@@G@@),2+LIF*Y DO 1-LIF , I$ 074,04,,,,FA(1)*E GO G$$T99M)[)N DO LIF , GO G$$DJ
)@@G@@T26*W DO NI$(IX(1))>1 , GO G$$T24T])T G$$COD II(IX(2)),IX(2),3*T G$$COD DK
)@@G@@II(IX(1)),IX(1),2*N I$ 074,04,,,,FA(1)*E GO G$$T99M)E0^ DO CC-#@@@]@[@#BDL
)@@G@@@@@K@B]-@C$6@#B@@@@@@@@[@-@@#C)SNI$(IX(2))>1 , GO G$$T25T])T G$$COD II(IDM
)@@G@@X(1)),IX(1),3*T G$$COD II(IX(2)),IX(2),2*N I$ 074,04,,,,FA(1)*E GO G$$T9DN
)@@G@@9M)M)T G$$COD II(IX(1)),IX(1),2*N I$ 074,04,,,,FA(1)*T G$$COD II(IX(2)),DO
)@@G@@IX(2),2*N I$ 074,04,,,,FA(1)*E GO G$$T99M)T)T G$$COD II(IX(1)),IX(1),2*NDP
)@@G@@ I$ 074,04,,,,FA(1)*T G$$COD II(IX(2)),IX(2),3M)Y)R DO $=ORIG , G$$EFL 1DQ
)@@G@@,18T DO G$CTR(7) , DO (G$TLBLCC)N@@@]@@@#C@@@@@@#@KC(A@#C@@@@@@@@[@)K@@@DR
)@@G@@)&(TTL)=$)=0 , G$$DFL G$TLBL(TTL) 0,0777*NG$TLBL**(TTL) EQU $*^ END@(4) DS
)@@G@@C-#@@@]@[@#E@@@K@B]-@C%A@#E@@@@@@@@[@-@@#F)WVI+2,1)=BY)+3*(P(VI+3,1)=BY)DT
)@@G@@*KFI*(7) EQU FI(4)*(I DO 3 , DO FI(I)>FI(7) ,FI*(7) EQU FI(I)*HLF(1) EQUDU
)@@G@@ 0+PT^)$ DO (K3=MASKED)++(FI(3)>VI) , GO G$$L01*KFI*(3) EQU LF(1)*MP*(FIDV
)@@G@@(3),1) EQU TO*MP*(FI(3),4) EQU XU*LLF(1) EQU LF(1)+1M-;)S DO FI(4)=VI , DW
)@@G@@GO G$$L02*= DO P(FI(4),4)=U ,P*(FI(4),4) EQU XU*LNB EQU 0+P(FI(4))8! DO DX
)@@G@@G$MASM=0 , DO (P(FI(4),NB)>0)++(NB=5) , GCC-#@@@]@[@#F@@@K@B]-@C:A@#F@@@DY
)@@G@@@@@@@[@-@@#G)CO G$$L02*' DO G$MASM=1 , DO ($AP(P(FI(4),NB))>0)++(NB=5) ,DZ
)@@G@@ GO G$$L02*VP*(FI(4),5) EQU P(FI(4),NB)*MP*(FI(4),NB) EQU 0M+F)G ON G$MAEA
)@@G@@SM=0T^-=I DO 4 , DO FI(I)>VI ,UV(I) EQU +(I$ 0,P(FI(I),4),0,P(FI(I),3),2EB
)@@G@@*P(FI(I),*3)+P(FI(I),*2),P(FI(I),2))T#-LI DO 4 , DO P(FI(I),2)>0777777 ,EC
)@@G@@IM(I) EQU 07017000000**(G$NOFO UV(I))=07000000000T]0YI DO 4 , DO P(FI(I)ED
)@@G@@,2)<0100000CC-#@@@]@[@#G@@@K@B]-@C?A@#G@@@@@@@@[@-@@#H)20 ,IM(I) EQU (P(EE
)@@G@@FI(I),3)=0)**(016=P(FI(I),4)**016)T])"I DO 4 , DO IM(I)**(P(FI(I),2)<010EF
)@@G@@00000) ,IV(I) EQU P(FI(I),2)T]-FI DO 4 , DO IM(I)**(P(FI(I),2)>0777777) EG
)@@G@@,IV(I) EQU + (G$NOFO UV(I)**G$UMSK)T])9I DO 4 , DO IV(I)>0377777 ,IV(I) EH
)@@G@@EQU IV(I)++0777777000000*XI DO 2 ,APIV(I+1) EQU IV(I+1)*^ OFFT])G ON G$MEI
)@@G@@ASM=1T])FI $REPEAT 4*RAPU EQU $AP(P(FI(I),2))T^0^ DO CC-#@@@]@[@#H@@@K@BEJ
)@@G@@]-@D%:@#H@@@@@@@@[@-@@#I-SFI(I)>VI ,UV(I) EQU +(I$ 0,P(FI(I),4),0,P(FI(IEK
)@@G@@),3),2*P(FI(I),*3)+P(FI(I),*2),P(FI(I),2))T])NAPUV EQU $AP(UV(I))T]->IM(EL
)@@G@@I) EQU APU>0777777-> 07017000000**(G$NOFO APUV)=07000000000! (P(FI(I),3)EM
)@@G@@=0)**(016=P(FI(I),4)**016)T#- IV(I) EQU IM(I)**(APU<01000000)-> P(FI(I),EN
)@@G@@2)! + (G$NOFO APUV**G$UMSK)T#)2 DO $AP(IV(I))>0377777 ,IV(I) EQU -(07777EO
)@@G@@77-IV(I))8GAPIV(I) EQU CC-#@@@]@[@#I@@@K@B]-@D:1@#I@@@@@@@@[@-@@#J)E$AP(EP
)@@G@@IV(I))*A $ENDR*^ OFFTH)S DO FI(4)>VI , GO G$$L03*KFI*(4) EQU LF(1)*! DO EQ
)@@G@@(W(1)=VARY)++(W(1)=LOOKFOR)=0 , GO G$$L03*FIV(4) EQU 1(  DO ((W(1)=LOOKFER
)@@G@@OR)=0)**IM(2)**IM(3) ,IV(4) EQU 1-2*(APIV(2)>APIV(3))T]), DO (IV(4)=1)**ES
)@@G@@(P(FI(4),5)=DOWN) ,IV(4) EQU -1*PP*(FI(4),2) EQU IV(4)*MP*(FI(4),4) EQU ET
)@@G@@XU*OUV(4) EQUF IV(4),,XU*FIM(4) EQU 1M<F0R DO P(FI(4),5)=0 ,P*(FICC-#@@@EU
)@@G@@]@[@#J@@@K@B]-@D?1@#J@@@@@@@@[@-@@#K)M(4),5) EQU P(VI,3)T#)) DO (W(1)=LOEV
)@@G@@OKFOR)=0 , GO G$$L30T )GFI*(5) EQU 0T^)0 DO (FI(3)>VI)**(P(FI(3))>1) , IEW
)@@G@@$ 023,,2,,,UV(3)*) DO FI(1)>VI , I$ 023,,1,,,UV(1)T^)! DO (P(FI(4),5)=OFEX
)@@G@@FSET)**1-IM(4) , G$$EFL 2,1*$OFV EQU IM(4)*(P(FI(4),5)=OFFSET)*IV(4)*IFIEY
)@@G@@*(6) EQU OFV*M DO FI(2)=VI , END*T DO FI(4)=VI , G$$EFL 2,2*W DO IM(2)**EZ
)@@G@@IM(4) , GO G$$L218K I$ 027,,P(VI,2)CC-#@@@]@[@#K@@@K@B]-@D!.@#K@@@@@@@@[FA
)@@G@@@-@@#L)C,,,UV(2)*< DO OFV=0 , I$ 046,,P(VI,2),,,UV(4)*J DO OFV=0 , END**FB
)@@G@@ DO P(VI,2)>X11 , AH P(VI,2),(+OFV,-OFV)*+ DO P(VI,2)<A0 , ANX,U P(VI,2)FC
)@@G@@,OFV*+ DO P(VI,2)<A0 , LXI,U P(VI,2),OFV*F DO 1 , ENDM<%)> I$ 027,,P(VI,FD
)@@G@@2),,,(+IV(4),IV(2)-OFV)*F DO 1 , ENDM<1)KORIGOP EQU +W(1)T])S DO FI(1)>VFE
)@@G@@I , GO G$$L34*> DO IM(2)**IM(3)**IM(4)=0 , GO G$$L358R DO (APIV(2)>0)**(FF
)@@G@@IV(3)CC-#@@@]@[@#L@@@K@B]-@D\J@#L@@@@@@@@[@-@@#M)X=0)**(IV(4)=-1)=0 , GOFG
)@@G@@ G$$L35*KFI*(1) EQU FI(2)*HFI*(2) EQU VI*LIV(1) EQU IV(2)+1*FIM(1) EQU 1FH
)@@G@@*OUV(1) EQUF IV(1),,XUM</)IW(1) EQU 0+JGD*E GO G$$L39M=@)Z DO (VARY=ORIGFI
)@@G@@OP)=0 , GO G$$L40*3 DO (FI(2)=VI)++(FI(3)=VI)++(FI(4)=VI) , G$$EFL 2,3*JFJ
)@@G@@W(1) EQU 0+TLEM*> DO IM(3)**(IV(3)=0) ,W(1) EQU 0+JMGIM=A)LP*(VI,1) EQU FK
)@@G@@W(1)8( DO (VARY=ORIGOP)++(W(1)=ORIGOP)=0 , G$$ECC-#@@@]@[@#M@@@K@B]-@D0VFL
)@@G@@@#M@@@@@@@@[@-@@#N)CFL 2,011M=G)W DO (W(1)=JGD)=0 , GO G$$L41*GFI*(6) EQFM
)@@G@@U 1*GFI*(5) EQU 1*E GO G$$L49M=O)(USS EQU (P(FI(4),5)=UP)-(P(FI(4),5)=DOFN
)@@G@@WN)*XBYS EQU IM(4)*(1-2*(IV(4)<0))*,FTS EQU (IM(2)**IM(3))*(1-2*(APIV(2)FO
)@@G@@>APIV(3)))*V DO FTS*BYS=-1 , G$$EFL 2,5*JMYS EQU FTS+BYS*V DO MYS*USS=-1FP
)@@G@@ , G$$EFL 2,6*KSIGN EQU MYS+USS*PFI*(6) EQU (SIGN=0)=0*LP*(VI,3) EQU SIGFQ
)@@G@@N8IFI*(5) EQU (SICC-#@@@]@[@#N@@@K@B]-@D1V@#N@@@@@@@@[@-@@#O)3GN=0)++(W(FR
)@@G@@1)=TLEM)**(SIGN>0)++(W(1)=JMGI)**(SIGN<0)T^)4 DO 1-((W(1)=TLEM)**IM(2)**FS
)@@G@@IM(3)**IM(4)) , GO G$$L49T])JVV(1) EQU IV(2)*PVV(2) EQU IV(3)+IV(4)*G ONFT
)@@G@@ G$MASM=0(] DO G$AMPR ,VK DO 2 , DO 1-(#(VV(VK))=-2) ,VV(VK) EQU VV(VK)+FU
)@@G@@01000T^)3VK DO 2 ,VV(VK) EQU (1-(VV(VK)=0))*(1-2*(VV(VK)<0))T])Y DO VV(1FV
)@@G@@)*VV(2)<1 , G$$EFL 2,4*^ OFF*G ON G$MASM=18J DO G$AMPR ,VK CC-#@@@]@[@#OFW
)@@G@@@@@K@B]-@D2-@#O@@@@@@@@[@-@@#P)4DO 2 , DO 1-($BA(VV(VK))=0) ,VV(VK) EQU FX
)@@G@@VV(VK)+01000T^)8VK DO 2 ,VV(VK) EQU (1-(VV(VK)=0))*(1-2*($AP(VV(VK))<0))FY
)@@G@@T])* DO $AP(VV(1))*$AP(VV(2))<1 , G$$EFL 2,4*^ OFFM=/-[I DO 3 , DO (IM(IFZ
)@@G@@+1)=1)**(IV(I+1)<0) ,UV(I+1) EQUF *IV(I+1),*0,XUT )RIMOP EQU G$FLAG(K,21GA
)@@G@@)>0*S DO FI(1)=VI , GO G$$L51*%RR EQU 027*(P(VI,2)<A4)+023*(P(VI,2)>R1-1GB
)@@G@@)8URA EQU 077**(0+P(VI,2)-(RRCC-#@@@]@[@#P@@@K@B]-@D3$@#P@@@@@@@@[@-@@#QGC
)@@G@@)B=0)*A0)*+ I$ RR+010*(RR=0),,RA,,,UV(1)-IMOP*SG$FLAG**(K,21) EQU IM(1)*GD
)@@G@@F DO 1 , ENDM>E)M DO FI(2)=VI , END*T DO FI(4)=VI , G$$EFL 2,7TF)R DO IMGE
)@@G@@(4)=0 , GO G$$L52*" DO (W(1)=JMGI)**IM(2)**1-G$FLAG(K,4) , DO IV(4)<0 , GF
)@@G@@GO G$$L53T])! DO IM(2) , LX P(VI,2),(+IV(4),0+IV(2)-IV(4))*J DO IM(2) , GG
)@@G@@END*U DO P(VI,2)<A0 , GO G$$L52*W LX P(VI,2),(+IV(4),0-IV(4))8C AH P(VICGH
)@@G@@C)+@@@]@@@#Q@@@@@@#@ZC,A@#Q@@@@@@@@[@)Z@@@)D,2),UV(2)*F DO 1 , ENDM>))L GI
)@@G@@LX P(VI,2),UV(2)*M ANX P(VI,2),UV(4)*M LXI P(VI,2),UV(4)*F DO 1 , ENDM>&GJ
)@@G@@)U LX P(VI,2),(+IV(4),IV(2))*OG$FLAG**(K,21) EQU 1*^ END@@@@C-#@@@]@[@#SGK
)@@G@@@@@K@B]-@C\A@#S@@@@@@@@[@-@@#T)U(P(VI,2)-A0),,,G$LABL(K,2)T])N DO JMF , GL
)@@G@@GO G$$L70*KPTI2 EQU P(TI,2)*KPBI2 EQU P(BI,2)*) DO G$MASM=1 ,PTI2 EQU $AGM
)@@G@@P(PTI2)*) DO G$MASM=1 ,PBI2 EQU $AP(PBI2)*$TUHI EQU 3*(PTI2<0)+2*P(TI,*3GN
)@@G@@)+P(TI,*2)*!TU EQU + (I$ 0,P(TI,4),,P(TI,3),TUHI,P(TI,2))*$BUHI EQU 3*(PGO
)@@G@@BI2<0)+2*P(BI,*3)+P(BI,*2)*!BU EQU + (I$ 0,P(BI,4),,P(BI,3),BUHI,P(BI,2)GP
)@@G@@)8U DO ATTOP , I$ 074,06,0,P(CC-#@@@]@[@#T@@@K@B]-@C3A@#T@@@@@@@@[@-@@#UGQ
)@@G@@)DVI,2),2,0*P I$ 047,,P(VI,2),,,TU*O I$ 074,04,,,,Q(2,1)*) DO ATTOP , I$GR
)@@G@@ 025,,P(VI,2),,,BU*F DO 1 , ENDM&T)< DO ATTOP , I$ 051,017,0,P(VI,2),,0*GS
)@@G@@Z DO ATTOP , I$ 074,04,,,,Q(2,1)*W I$ 074,012,P(VI,2),,,Q(2,1)*F DO 1 , GT
)@@G@@ENDM&<)FIC EQU VI-1*JKWD EQU P(IC,2)*KMSF EQU FI(3)>VI*(FUN EQU G$FJ(1,KGU
)@@G@@WD,1)+010*(1-MSF)-052*MSF8? DO MSF , I$ 071,FUN,P(IC,1)-A0,P(VI,2),2+P(CGV
)@@G@@C)W@@@]@@@#U@@@@@@#@TC0A@#U@@@@@@@@[@)T@@@)OIC,*3),P(IC,3)+FI(6)(A DO 1-GW
)@@G@@MSF , I$ FUN,P(IC,5),P(IC,1)-A0,P(VI,2),2+P(IC,*3),P(IC,3)+FI(6)*O I$ 07GX
)@@G@@4,04,,,,Q(2,1)T])^ END@FC-#@@@]@[@#X@@@K@B]-@C1A@#X@@@@@@@@[@-@@#Y)4-XRGGY
)@@G@@(1))>(G$XBIT(K)-1) ,XRG(1) EQU XRG(1)++G$XBIT(K)T^)QIV(1) EQU IV(1)-XRG(GZ
)@@G@@1)*)XRG(1) EQU P(I,J+1)++XRG(1)*/-18*4U16 EQU (JAY(1)<016)++(XRG(1)>0)++HA
)@@G@@P(I,*J)++P(I,*J+1)(X DO IV(1)>0177777 ,K DO 2*U16 , DO (IV(1)-HIB(1))>(GHB
)@@G@@$HIBI(K)-1) ,HIB(1) EQU HIB(1)++G$HIBI(K)T^)QIV(1) EQU IV(1)-HIB(1)*QHIBHC
)@@G@@(1) EQU HIB(1)*/-16*)HBIT EQU P(I,*J+1)++(HIB(1)*/-1)8EIBIT EQU PCC-#@@@HD
)@@G@@]@[@#Y@@@K@B]-@C2A@#Y@@@@@@@@[@-@@#Z)N(I,*J)++(HIB(1)**1)T])N DO N=2 , GHE
)@@G@@O G$$DC1*IP**(I) EQU J+2*Y DO 1-IBIT ,P**(I,J) EQU IV(1)*X DO IBIT ,P**(HF
)@@G@@I,J) EQU *IV(1)*- DO 1-HBIT ,P**(I,J+1) EQU XRG(1)*) DO HBIT ,P**(I,J+1)HG
)@@G@@ EQU *XRG(1)*PP**(I,J+2) EQU JAY(1)*F DO 1 , ENDM*@)JP***(I) EQU J+2*Z DHH
)@@G@@O 1-IBIT ,P***(I,J) EQU IV(1)*Y DO IBIT ,P***(I,J) EQU *IV(1)*+ DO 1-HBIHI
)@@G@@T ,P***(I,J+1) EQU XRG(1)8C DO HBITCC-#@@@]@[@#Z@@@K@B]-@C5+@#Z@@@@@@@@[HJ
)@@G@@@-@@#))T ,P***(I,J+1) EQU *XRG(1)*QP***(I,J+2) EQU JAY(1)*F DO 1 , ENDM*HK
)@@G@@G)MIV EQU $AP(P(I,J))*XJAY2 EQU (IV>0)*(IV**G$JBITS)*WJAY1 EQU P(I,J+2)+HL
)@@G@@+JAY2*/-26*XXRG2 EQU (IV>0)*(IV**G$XBITS)*WXRG1 EQU P(I,J+1)++XRG2*/-18*HM
)@@G@@0U16 EQU (JAY1<016)++(XRG1>0)++P(I,*J)++P(I,*J+1)*UHIB1 EQU U16*(IV**G$HHN
)@@G@@BITS)*ZHBIT EQU P(I,*J+1)++(HIB1*/-17)*+IBIT EQU P(I,*J)++((HIB1*/-16)**HO
)@@G@@1)T]CCC)Z@@@]@@@#)@@@@@@#@WB..@#)@@@@@@@@[@)W@@@)J $LEVEL 0,N+1,0*,P(I,JHP
)@@G@@) EQU [IBIT->'*'!'']P(I,J)-JAY2-XRG2-HIB1*ZP(I,J+1) EQU [HBIT->'*'!'']XRHQ
)@@G@@G1*LP(I,J+2) EQU JAY1*H $LEVEL 0,1,0*^ END@1) EQC)-@@@]@@@[5@@@@@@#@YB"VHR
)@@G@@@[5@@@@@@@@[@)Y@@@)<$CLD* $DELETE','STRUC$DEF* $DELETE'T])L DO G$UOM=1 ,HS
)@@G@@ END*) DO (G$MASM=0)**(G$AMPR=1) , ENDT])FP PROC *0,0*HRESUME** NAME*GBRHT
)@@G@@IEF** NAME*^ ENDT])^ END@(6) EC)F@@@]@@@[7@@@@@@#@CB"<@[7@@@@@@@@[@)C@@@HU
)@@G@@*# +0*  LIST*^ END@     C)C@@@]@@@[9@@@@@@#@ DDP@[9@@@@@@@@[@) @@@)[D@@@HV
)@@G@@C-#@@@]@[@[/@@@K@B]-@DEP@[/@@@@@@@@[@-@@[.)JUB)++(T=LDJSUB)T^):NOSDEF EQHW
)@@G@@U ISSUB**(P(1)=2)**(P(1,2)=NOSAVE)*X DO NOSDEF ,P(1,3) EQU NOSAVE*S DO NHX
)@@G@@OSDEF ,P(1,2) EQU 0*= DO G$MASM=0 , DO NOSDEF ,P(1) EQU 3T])8 DO G$CTR(7HY
)@@G@@) , DO (G$LABL(K,1)=$)=0 , G$$DFL G$LABL(K,1)*MG$LABL*(K,1) EQU $T])H REHZ
)@@G@@S G$CTR(6)*SG$CTR*(2) EQU 0-G$CTR(7)T])M DO T=CYCLIC , END*R DO T=CONTINIA
)@@G@@GENCY , +0DT^0UGI EQU (P(1,1)=SIGNAL)+2*(CC-#@@@]@[@[.@@@K@B]-@DFP@[.@@@IB
)@@G@@@@@@@[@-@@["))P(2,1)=SIGNAL)+3*(P(3,1)=SIGNAL)T])3G$FLAG*(K,1) EQU (GI>0IC
)@@G@@)*(P(1,2)+(P(1)<2)*A0)-(GI=0)(B DO (T=REMOTESUB)=0 ,G$LABL*(K,4) EQU (T=ID
)@@G@@CONTINGENCY)*G$LABL(K,1)-ISSUBT#)% DO (T=EXECSUB)**(P(1)=1) ,P(1,2) EQU IE
)@@G@@DISPT])& DO T=EXECSUB ,G$LABL*(K,4) EQU P(1,2)(Y DO GI>0 , DO P(GI)>1 ,GIF
)@@G@@$LABL*(K,4) EQU + (I$ 0,P(GI,4),,P(GI,3),2*P(GI,*3)+P(GI,*2),P(GI,2) )T IG
)@@G@@0D DO ISSUBCC-#@@@]@[@["@@@K@B]-@DGP@["@@@@@@@@[@-@@[_)W**(P(1,2)=0) ,P(IH
)@@G@@1,2) EQU X11(:SII EQU ((P(1,1)=STACK)++(P(1,1)=SAVE))+2*((P(2,1)=STACK)+II
)@@G@@+(P(2,1)=SAVE))+3*((P(3,1)=STACK)++(P(3,1)=SAVE))T])SSI EQU SII+(SII=0)*IJ
)@@G@@ISSUB*I DO SI=0 , ENDT])IST EQU P(SI,1)*Y DO ISSUB=0 ,P(1,3) EQU NOSAVETIK
)@@G@@])PI DO 3 ,Q(I) EQU P(I)*SNOLINK EQU P(1,3)=NOSAVE*Y DO NOLINK ,P(1,2) EIL
)@@G@@QU -P(1,2)*R DO NOLINK ,Q(1) EQU +28KKLX EQU Q(SI)-2*CC-#@@@]@[@[_@@@K@BIM
)@@G@@]-@@@@@[_@@@@@@@@[@-@@]@)E(ST=STACK)**I DO KLX ,RSAV(P(SI,I+1)**0777777)IN
)@@G@@ EQU 1*GIII(1) EQU 1*?I DO 128 , DO RSAV(I) ,P(SI,G$$INC(1)) EQU I*7 DO IO
)@@G@@KLX<Q(SI) , DO (P(SI,KLX+1)=POINTER)=0 , G$$EFL 3,2*3SEX EQU (ST=SUBROUTIP
)@@G@@INE)++(ST=LIJSUB)++(ST=LDJSUB)=0*HSLI EQU ISSUB*= DO SEX**SLI ,P(SI,KLX+IQ
)@@G@@1) EQU P(1,2)*QKLR EQU KLX+(SEX**SLI)*(I DO KLR-1 ,G$FLAG*(K,2,I) EQU +PIR
)@@G@@(SI,I+1)8HKL EQU KLR-(NC@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___IS
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___IT
)@@G@@@@@___@@@___@@@___@@@______@@@*DPS**@@ @#)@@@@#G@@@@@^@@@@@@@@@@@@@@@@@@IU
)@@G@@@@@@@[@@@@#N@@@@@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@@]@^@G@[@ @@@]K^@W@)IW
)@@G@@#@@@@@CT D1NE[[CS)@O@O=@AK6BC2A@0^@)^@)^@0A*)EL[A@0E-[CK2A@)^@) 0)^@)^@)IX
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)CT D1NE[[CS)IY
)@@G@@[T0@C@)AK[-0@@@___@@=^@@@@)^[C@ V^[7@#<^B*@@0^J<@@3^K$@@E^M0@@*^?N@@*A[EIZ
)@@G@@@@_BQ[@@EBR:@@HBSG@@GBS5)@=^@=)@J^[*)@Q^BM)^S^FF)@O^KN)[Q^LU)TT^M'-OJ^?;JA
)@@G@@-OJA[2)@:BR@)@RBR5)@WBSTA]0^@F/@K@C#9*KBQ*/^@@CAC8K@@@/K@@CK9*0BQF9(KBQJJB
)@@G@@C8@BQ*'=@@[C/@)@CJC8KBQ*C8@@@#/,0@>//K@@CK[@KBQN[@KBQ!C8@BQ*/,0[YAC8@^@BJC
)@@G@@[^@BQ0C8@*[S;*@@@M[@@BQ2C8@BQ*/,0[XL/K@@CW/K@@CZ________________________JD
)@@G@@_________0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O@@@@@@@^@@@@ 1OFDKC(NDDUC*)AC0 )6^@)@A@@@@JW
)@@G@@ 1#D9IE-MD9G^[OCD]^@$^C$ )5 )1A@)^@)@H@@@@ 00 -K^@$E(,HD6G(2IT(I-9^[\G0)JX
)@@G@@D(-IL9H--H1=^[^H97H1=GD4G(2^@!^[GG(6G(?^@3 00^8)@ @@@@ 01^@$DDIE-MD9^E(#JY
)@@G@@E-DD9I^8)^@)@ @@@@^DOH[>^[@C-JE9I^[0IL\GT>IT3H92@G@@@@HD3^[0IL(H(-IL(H-9JZ
)@@G@@^[-^[3JD!GL\H-(GS)GT\H(0GD2GD4H92 0)^[DI))HD3^[5IT>G))@J@@@@I-\^[<H9!I[-KA
)@@G@@IL>^[3JD!GL\H-(GS)I->J[4IS) [5IT5GD?H-9 ))GL5I))H1\I))H-(H((I->G))I-\ ))KB
)@@G@@ET^C0)@E@@@@G1\IL!GD4 C)GD&I->IK)I9*HD<H@)HD4^[<GD,^[0IL\G-5GT>^[-^[NDDMKC
)@@G@@@G@@@@GT\IL2G(<I-(H9,^[=G(<HS)GT-I[-GL?G*)H9&^[4IL-H13G1\IL!HD,G8)H9,G*)KD
)@@G@@I->J[4@^@@@@HD,I-\^[4H[>^[\I-*G(2 0)@G@@@@C[^D9RD0)I9(H-?^[-GT<G(0I))I[2KE
)@@G@@H9$IL-H*)G1(H->IS?^[=GD4GC)G1(H->IS)H92^@)@F@@@@I[2H9$IL-H*)G1(H->^[>H->KF
)@@G@@H(>H14IS)GD3^[(H10I(4^[-H1=^[<GD,^[-H-3H8)@D@@@@H(-HT>^[<G(2I--HD,^[3I(0KG
)@@G@@G(2G1(GT(GD?^[<H9!I[-IL(IT\H13@H@@@@IL>G9-IL=HD,G8)I-*G*)I--GL?G*)H9&^[<KH
)@@G@@H9,I->H14IS)H9&^[0IL\G92GD!^[&HD?G(3 0)^@)@C@@@@^DOH[>^[0IL\GT>IT3H92^[(KI
)@@G@@IS)HD,I1-H-5GD+H->^[(H0)@F@@@@H--IL$G*)GD0I[?HD<GD4HD\H13^[7H[>IL>^[!GD,KJ
)@@G@@JC)I[2H9$IL-H(!G(2IS)^@)@K@@@@H(-JC)GL>^[(H14G(2GD<I-(H1$^[\H0)I-*G*)IT-KK
)@@G@@H(>^[+GD3G*)IT9H(+H9?HD<IS,^@)^[DI))HD3^[-H-3H8)H9&^@)@H@@@@G92G(-I))H[>KL
)@@G@@H-0^[7H[>H0)I-*G*)I(3G(2^[7HD3H[>IS)H92^[(IS)IL>ID5HD2G(=^[4H8)^@)@I@@@@KM
)@@G@@H(-HD,I--HD,^[-H1=^[5I[=GD4G*)GT5IL2G(,I))IT9H(+H9?HD<IS)I9(I-*^[4H[>^[3KN
)@@G@@I--H1=GD2G))@K@@@@IT9IT4G(!^[NDDM^[!G(<H[-H1(IT!IS,^@)C1(H1-H-?JC?^[4H[>KO
)@@G@@@@G@@W@@@S**^[=H97H1=GD4G(2^[(IS)GD?IT\^@)I1-H-5GD+H->@O@@@@HD,^[0IL\G92KP
)@@G@@GD!^[4G(3I-(H1$^[-H1=^[=G(+I($G9(H1$^[4H[2H95G9*^[(I-3^[-GL(H-(I-9^[4H8)KQ
)@@G@@GT\H(0GD2G*)GT\IL2G(3I[\H1=HD,G8)^@)@^@@@@H95I-0I(4^[3I-2G(-H(3 0)@K@@@@KR
)@@G@@^DDH0)G9>H1>IL-H)?^[4H[>IL>^[-IL>^[4I9\^[!GD(H0)H(\G->IS)H9&^[=H97H1=GD4KS
)@@G@@G(2^[\I[>IL-I-(H9, ))^@)@G@@@@I-*H95G9* ))I(,G->IK)H90I-(H9,^[<H9,I-2H9?KT
)@@G@@ ))H9,G*)H(-JC)GT*GD,G9>^[4H[>@L@@@@GT*GD2GD<I->IL(IT4HD<IS)H9&^[4H[>^[>KU
)@@G@@J[0G(<I->G))HD,I[5I))H92^[\I(4I[5I))GT\H13HD=G(2GD+H-9 0)^[OH[>^@)@H@@@@KV
)@@G@@G1(IL3I))H(\G->^[!GD9^[+G*)GT-H-?G(=^[>H->H(>H14^[\IK)G--I--^[&HD?G*)H(\KW
)@@G@@G-> 0)@G@@@@E-*HD3^[<H9!I[-IL>IS)GC)IT(H1$H->^[3I-2G(-H*)H9&^[3JD!GL\H-(KX
)@@G@@GS)HD,I[5I))@G@@@@I9(I-*^[-^[3G(<H9,G))IT4IL>GD!^[4H8)G->I->IL!HD,G*)G-(KY
)@@G@@G1&G(2G(,GT>IS,^@)@H@@@@E-*H95G9*^[4H[>^[\I(4I[5I))HD3^[(H0)ETDEK)I-9I[>KZ
)@@G@@^[<H92IL>GT4HD\H0)HD!GD$G(3 ))@D@@@@HD4IS)H(>GD,HD,G8)HD3^@)GT?G(-IK;^@)LA
)@@G@@GC)I(3G(2^[,G(>G-3@F@@@@H1\^[3I[>GT(GD?^[4IL-HD,HD,G8)HD,^[\IL=G(2^[4H8)LB
)@@G@@G->GT(I[*G(2^[(I),@G@@@@E-*G*)IT>GT\H1=^[!H9=G*)H9&^[=H97H1=GD4G*)HD3^[<LC
)@@G@@GD?H->G))I[2H9$IL-H*)^@)@E@@@@G1(H->^[!H9=G*,^@)DD,^[4H[(IS)GT-IT> ))I-7LD
)@@G@@H8)G-(IT4HD,GT4^@)@G@@@@I[2H9$IL-H*)G1(H->IS)GD2G*)IT0G(<HD&HD>G))GD,G))LE
)@@G@@I-*G*)G-\I9,G--I->IK?^@)@H@@@@GD$GD(H0)I(,G->IK)H90I-(H9,^[<H9,I-2H9? ))LF
)@@G@@GT\H(0GD2G(3^[<H92IL>IT0H9,G-(H1$^@)@F@@@@G(?G(!G(,I-3^[\G0)GL\I-*^[&HD?LG
)@@G@@G(3 0)^[DH0)I-*G*)IT(H(0H->IT4^[-H1=@E@@@@G->G1-@@O@@=@@@@@@I(?I))GT-IT>LH
)@@G@@ ))^[>GD<H@)IT9H(+H9?HD<^[>H->H(>H14^[\G0)@E@@@@H9,G*)I[2H9$IL-H*)G1(H->LI
)@@G@@^[7HD?H))GL>^[<H9!I[-IL>G))I9(I-*^[-@G@@@@GT\IL2G(3I[\H1=HD,G8)G(?G(!G(,LJ
)@@G@@I))H9&^[4H[>^[3GD!G*)H1-H(>^[(H0)I-*G*)^@)@A@@@@H90I[\IT(H1$^[0IL\G92GD!LK
)@@G@@^[&HD?G*,^@)@E@@@@^DII(!G(2H95IS)H90I-(H9,IS)GD2G*)GD6GD(H--GL?G*)I-\^[-LL
)@@G@@H-?H97@F@@@@I-*G*)I(3G(2^[$IL>GD4G(2^[&H->J[(GL(H-(I-9^[(H0)I(3HD,G8)C[^LM
)@@G@@D9RD0,@D@@@@D9,G*)H(-JC)GT\H(0GD2G*)I-*G*)GT\H14G(,I-3^[\G0)H9,G*)@I@@@@LN
)@@G@@I[2H9$IL-H*)G1(H->^93^[4GD+H->^[\G0)GT\H14G(,I-3^@*E-JCS(^[-G9-HD,IT4^[-LO
)@@G@@H1\I-*G(2BS)@F@@@@I[2H9=I(<G*)GC)E[#C0)H92^[OCTA^@*I[>IL!GD,G(,I))H92^[4LP
)@@G@@G(!I[\IL-IL9@L@@@@GT\IL2G(<I-(H9,^[&HD?G*(^[0IL\G92GD!^[&HD?G*?^[=GD4GC)LQ
)@@G@@G1(H-> ))H92^[0IL\G92GD!^[&HD?G*)G(?G(!G(,I);^@)@I@@@@H-(H((I))I-*G*)G-\LR
)@@G@@I9,G--I->^[4H8)GC)GT>IL4GD(H0)GD2G(-^[\G0)I-*G*)HD,I[5I))HD!GD$G*;@G@@@@LS
)@@G@@HD$H1\IL>^[!I(?I-(I[?G*)GL?GD,HT3BS)I[2H9=I(<G*)G(8I[-H1=G(=^[KELDD1O^))LT
)@@G@@@H@@@@H-(IT4HD,G93BS)G-\I9,G--I->^[,H9, (3I--H1=GD2G))ET^C0)I-9I[>^[&HD?LU
)@@G@@G(3BS)GD,G))@I@@@@GT\H14IL\H))H95I-0I(4^[\I[4HD!HD'GD4HD\H0)I[-IL-H(>I->LV
)@@G@@IL3 0)^[DH0)GD=G-(I-(H9, ))^@)@H@@@@I-*G*)HD,I[5I))GT*GD2GD<I->IK)H(\G->LW
)@@G@@^[\G0)G(-GT*^[3JD!GL\H-(GS) [7H[>I-*G(2^@)@I@@@@C1DC(GC-[E-[^[\IK)CDNCTDLX
)@@G@@DC(^[(IS)G(&G1>GT4HD6G(?JC)I-2GD,IT0GD2G(,I);^[(G0)H((J[>G))@H@@@@H(\G->LY
)@@G@@^[2G(<H92G-3^[\GT<I(2 ))C1DC(GC-[E-[^@)HD3^[4H[>^[<H[\IT>H0)H(>G-(I(!^@)LZ
)@@G@@@^@@@@G1\IK)GT\H(0GD2HD3@@W@@?@@@S**H9, 0)@F@@@@^DDH0)IT5H(!GD2JC?^[4H[>MA
)@@G@@^[@C-JE9I^[0IL\GT>IT3H92^[<GD,^[0IL\I1>^@)@F@@@@GD,^[(H1=HD3I[>H13GD+H->MB
)@@G@@^[4H9\H))HD,^[!GD,JC)IT(I-5GD4HD\H13 0)^@)@C@@@@C-(IT<G(2H1(H1$^[=HD&G1>MC
)@@G@@IL>H1<G(3^[+G(4I9>G(,^@)@I@@@@I->J[4IS?^[!GD(H14GD(H1(H1$^[0IL\G92GD!IS)MD
)@@G@@ [0G(2H[-I[3^[&H92^[=HD3I-2HD+I(4HD\H0)^@)@K@@@@I-\^[\I-*G(2^[3HD4G(3 C?ME
)@@G@@^[\IK)G->GL5G9$HD,G8)GL9^[<H9!I[-IL(IT\H0)H9&^[4G(3I))IL5H0)H95I-0I(4IS)MF
)@@G@@@M@@@@GD$GD(H13I))GC)GT\IL2G(<I))GL-IT>BK)I-*G(3G*)GD2G*)H9,H-9^[-^[&G(7MG
)@@G@@^[\G0)HD4IS)I1-IL(G(=^[<GD0GD+HD?HD4HD>IS,@A@@@@ 01^@$E[MD9#C(NETJEK)CT[MH
)@@G@@D-G^[#CDMC)$@#@@@@ 1JD0?E))CT D1OC(M@D@@@@C[^D9RD0?B-JE[ODDJD1NB0)^@/ETKMI
)@@G@@C(#AC" ), 0, )/ETKC(#A*"@]@@@@ 1NDTDE@)AC)@#@@@@ 02^@$D9KE-DD9IES$@]@@@@MJ
)@@G@@^9[^8) *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@I@@@@^C-HD3^[5IT>G))HD,^[0IL\G92GD!MK
)@@G@@^[&HD?G*)H(\G-> 0)^[DI))G1\IL<G(3^[-^[<H9!I[-IL(IT\H0)@G@@@@H9&^[OD9#IS)ML
)@@G@@G1\IK)I-*G*)H9<GT5IL2G(,GT>^[\G0)CD]ETJD-PE- ^[>H->H(>H14IS,@J@@@@C-(G1&MM
)@@G@@G(2G(,GT>IS)GL>I-7G(>H0)I-*G*)HD,G1\IL!GD4HD\H0)GT\H-?G(<I->G))G12H9!^[>MN
)@@G@@GD<H@)E-JCS)@K@@@@GT\H1<G(2H1(H1$^[-GL3H9?I(4G*)G(?G(!G(,I-3^[7HD?H))GL>MO
)@@G@@^[3I(!H(-IL(JL>G))HD,^[4H[>^[KELDD1O^))^@)@H@@@@H95I-0I(4 0) [-H-3H8)IT>MP
)@@G@@G*)^9^^8?^9J^8?^9M^8?^9N^8)H90I-(H9,IS)IL>G9-IL=HD,G8)@^@@@@E-JCS)IT5H(!MQ
)@@G@@GD2HD>IS(^@)@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@]@@@@^9]^8) *)^@)@#@@@@MR
)@@G@@ 1DD1^C(IE))A*)^@)@I@@@@^C-HD3^[5IT>G))I-\^[<H9!I[2G(3IS)H95I))GD?H))H9<MS
)@@G@@@@=@@4@@@@@@GT5IL2G(,GT>IS)H9&^[!I(?I-(I[?G*)^@)@J@@@@GL?GD,HT3^[+G(&H92MT
)@@G@@G*)IL>GT\IL=IS)GD2G*)GT\H(0GD2G(= 0) [-H-3H8)IT>G*)^9L^8)H90I-(H9, C)^@)MU
)@@G@@@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@]@@@@^9^^8) *)^@)@#@@@@ 1DD1^C(IE))MV
)@@G@@A*)^@)@J@@@@^C-HD3^[5IT>G))I9(I-*^[4H[>^@$CC$ )$D8$ )$EK$ )$ES$^[\I[4HD\MW
)@@G@@H13^[4H8)GD<ID5HD2G*)E-JCS)^@)@K@@@@IT5H(!GD2HD>IS)H9&^[0IL\G92GD!^[&HD?MX
)@@G@@G(3 0)^[DI))G1\IL<G(3^[4H[>^[<H9,IT(G->IL-I-(H9,^[\G0)I-*G*)@F@@@@I-(H(>MY
)@@G@@ (-H1= (=GD4G*)H9&^[<IL>GD4HD\H0)HD,^[4H[>^[<H9!I[-IL(IT\H0,@]@@@@ 1NDTDMZ
)@@G@@E@)AC)@]@@@@ 1MC(NC(O^@)@]@@@@^9 ^8) *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@H@@@@NA
)@@G@@^C-G1\IL<G(3^[\I(4I[5I))G1\IK)G(6G(2JC)I[-HD2^[\G0)^[(H10I(4^[3G(1I(>H1<NB
)@@G@@G(3^@)@H@@@@G-\I9,G--I->G),^@*E-*G*)H((H1(H(5H*)H95I-0I(4^[(IS)GC) L D- NC
)@@G@@D( D1O^[<GD2G))^@)@L@@@@H92^[<H92IL>IT0H9,G-(H1$^[,I(?H))G(,I-2JC)HD,^[4ND
)@@G@@H[>^[\I(4I[5I))I[2H9$IL-H*)G1(H-> ))G->I[>H1=HD,G8)^@)@B@@@@H9,^[4H[>^[!NE
)@@G@@H9=G*)H9&^[=H97H1=GD4G*, C)^@)@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@]@@@@NF
)@@G@@^9G^8) *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@I@@@@^C-I[2H96HD=G(3^[-H0)G(8I[-H1=NG
)@@G@@G(=^[KELDD1O^))H-(IT4HD,G8)H9&^[4H[>^[=H97H1=GD4G*,^@)@L@@@@DD4^[$HD6G(3NH
)@@G@@^[=G(?G(4G(=^[(H(-G9>IS)GD,G))H-(H1>^[,I(!GL>IL3^[\G0)GD?H))GT\IL2G(<I-(NI
)@@G@@H9,IS)I[2HD,I->G))@E@@@@GT\IL2G(3I[\H1=HD,G8)I-\^[4H[>HD2^[2G(3I[>GT4HD6NJ
)@@G@@G*)G1(H->IS,@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@]@@@@^9I^8) *)^@)@#@@@@NK
)@@G@@ 1DD1^C(IE))A*)^@)@J@@@@^C-HD3^[5IT>G))I-\^[(H1*@@?@@/@@@S**HD+HD4^[KELDNL
)@@G@@D1O^))H9&^[=H97H1=GD4G*,^@)DD&^[4H[>^@$D0$^[\I[4HD\H0)@K@@@@HD3^[3I[>GT(NM
)@@G@@G1(G(=^[-H1=^[4H[>IL>^[(IS)H1\^@/ETKC(#AS"^@*H92^[\I(4I[5I))G1(H-> C?^[,NN
)@@G@@H8)GD<I-5GD?@K@@@@IT9H(+H9?HD<^[=H97H1=GD4G*)HD3^[=H9,G*,^@)E-JCS)IT5H(!NO
)@@G@@GD2HD>IS)GD2G*)GD?H-\I9>G),^@*IT>G*)^9^^8?@B@@@@^9[^8?^9J^8?^9M^8)GD,G))NP
)@@G@@^9N^8)H90I-(H9,IS(@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@]@@@@^9J^8) *)^@)NQ
)@@G@@@#@@@@ 1DD1^C(IE))A*)^@)@I@@@@^C-HD3^[5IT>G))HD,^[0IL\G92GD!^[&HD?G*)H(\NR
)@@G@@G-> 0)^[DI))G1\IL<G(3^[-^[<H9!I[-IL(IT\H0)@G@@@@H9&^[OD9#IS)G1\IK)I-*G*)NS
)@@G@@H9<GT5IL2G(,GT>^[\G0)D9HD1DCLPES)G(?G(!G(,I-3 0)@^@@@@ [3G(>^@$CC$^[\I[4NT
)@@G@@HD\H0(@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@]@@@@^9K^8) *)^@)@#@@@@ 1DD1^NU
)@@G@@C(IE))A*)^@)@K@@@@^C-HD3^[5IT>G))I-\^[<IL>GD4G*)GC)I[2H9$IL-H*)G1(H->^[KNV
)@@G@@CTA^[\IK)^[OCTA^@*IT>G*)^9O^8)H90I-(H9, C,@K@@@@DD&^[4H[>^@$E@$^[\I[4HD\NW
)@@G@@H0)HD3^[3I[>GT(G1(G(= ))GC)I[2H9$IL-H*)G1(H->^[!I(3I))GL>^[$HD6G(,^[(H0)NX
)@@G@@@L@@@@B-NE[ CS3B0,^@)DD4^[!GD9^[+G*)I(3G(=^[(H0)G((I-*G(2^[>H->H(>H14^[!NY
)@@G@@H9=G*)H92^[0IL\G92GD!^[&HD?G*)H(\G->@I@@@@G-\I9,G--I->IS)I[2H96HD=HD,G8)NZ
)@@G@@I-*G(2G*)HD3^[-H0)G(?G(!G(,I))H1-H(>^[?H9$HD<GD?H-9^@)@I@@@@GD6GD(H--GL?OA
)@@G@@G*)G1\IK)GD,JC)H95I-0I(4^[>H->H(>H14^@*IT>G*)E-CC*)^9K^8)D9KE-DD9I^[&H92OB
)@@G@@@A@@@@G15IL4H[>IK)G(8I[?GD,GD4HD\H0( 0)^@)@L@@@@DD&^[\H1>^[-I-4G(!I[4IS)OC
)@@G@@I-\^[=H97H1=GD4G*)I-7H8)G--I--^[&HD?G(3^[5H1=G(2^[4H[>^@$E@$^[\I[4HD\H0?OD
)@@G@@^[-H0)@H@@@@G(2IL\IK)I9(@@4@[^@@@@@@H-?^[+G*)H1\I->G))IT(H1<G*)I-*G(2G*)OE
)@@G@@HD3^[,H8)H-\G9(GT-H))H1-H(>^@)@E@@@@GD6GD(H--GL?G*)I-\^[$HD6G*)I-\^[4H[>OF
)@@G@@^[\I(4I[5I))G(?G(!G(,I),@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@]@@@@^9L^8)OG
)@@G@@ *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@L@@@@^C-HD3^[5IT>G))HD,^[<H9,HL5H1<I-(H9,OH
)@@G@@^[7HD4H@)I-*G*)^9]^8)H90I-(H9,^[4H8)G1\IL<G*)GT\H13HD=G(2GD4HD\H0)@K@@@@OI
)@@G@@H9&^[!I(?I-(I[?G*)GL?GD,HT3^[+G(4I9>G(,^[=G(?HD!HD4G(=^[<H[-IL-GT4G(2^[3OJ
)@@G@@I-2HD,G93^@*I-*GD4^[(IS?@K@@@@I-*H93G*)IT4IL(H1$IS)G->H-(H((I->G))GL9^[4OK
)@@G@@H[>^@/EDPD9OC*)CTCCDMB0)H92^[+JC)I-*G*)G->G1-I(?I)?^@)@^@@@@I-*G*)GD0H93OL
)@@G@@I-2H90H[> C,@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@]@@@@^9M^8) *)^@)@#@@@@OM
)@@G@@ 1DD1^C(IE))A*)^@)@I@@@@^C-HD3^[5IT>G))HD,^[0IL\G92GD!^[&HD?G*)H(\G-> 0)ON
)@@G@@^[DI))G1\IL<G(3^[-^[<H9!I[-IL(IT\H0)@F@@@@H9&^[OD9#IS)G1\IK)I-*G*)H9<GT5OO
)@@G@@IL2G(,GT>^[\G0)EL D-JCT[E-[CLGC*)^@)@B@@@@G(?G(!G(,I-3 0) [3G(>^@$CC$^[\OP
)@@G@@I[4HD\H0(^@)@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@]@@@@^9N^8) *)^@)@#@@@@OQ
)@@G@@ 1DD1^C(IE))A*)^@)@I@@@@^C-HD3^[5IT>G))HD,^[0IL\G92GD!^[&HD?G*)H(\G-> 0)OR
)@@G@@^[DI))G1\IL<G(3^[-^@)GT\H(0GD2HD3H9,@E@@@@H9&^[OD9#IS)G1\IK)I-*G*)H9<GT5OS
)@@G@@IL2G(,GT>^[\G0)ETTD(]D9GDD#^@)@B@@@@G(?G(!G(,I-3 0) [3G(>^@$CC$^[\I[4HD\OT
)@@G@@H0(^@)@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@]@@@@^9O^8) *)^@)@#@@@@ 1DD1^OU
)@@G@@C(IE))A*)^@)@J@@@@^C-HD3^[5IT>G))I-\^[=H97H1=GD4G*)E[#C0)G(?G(!G(,I-3 ))OV
)@@G@@G--I--^[&HD?G(3^[\IK)I[2H9$IL-H*)^@)@I@@@@G1(H->IS)I-\^[0IL\G-5GT>^[4H[>OW
)@@G@@@@/@[G@@@S**^[-I[0IL\I[2HD-I->^[OCTA 0) [3G(>^@$E@$^[\I[4HD\H0(^@)@]@@@@OX
)@@G@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@]@@@@^9Q^8) *)^@)@#@@@@ 1DD1^C(IE))A*)^@)OY
)@@G@@@I@@@@^C-HD3^[5IT>G))HD,^[<H9,HL5H1<I-(H9,^[7HD4H@)I-*G*)^9G^8)H90I-(H9,OZ
)@@G@@^[4H8)GT2G(-I->^@)@F@@@@GL-I-<H@)H-(IT4HD,G93^@*AC3AK)GT\H-5H(,IS(^[&IL\PA
)@@G@@H*)G->H(-H1= 0)^@)@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@]@@@@^9S^8) *)^@)PB
)@@G@@@#@@@@ 1DD1^C(IE))A*)^@)@J@@@@^C-HD3^[5IT>G))I-\^[&H92GT>^[4H[>^[0IL\GT>PC
)@@G@@IT3H92^[4H8)HD$H1\IL>^[-H19^[>H->H(>H14^[<JD<H->@K@@@@HD,G1\IL!GD4HD\H0,PD
)@@G@@^@)E-*HD3^[(IS)I[2H96HD=G(=^[-IS)GC)H--IT4^[2G(3H92I))HD,^[-H0)GD4I->H(0PE
)@@G@@I))I-\@M@@@@G-\I9,G--I->^[,H9, (3I--H1=GD2G))ET^C0)G1\IL!GD4^[&HD?G(3 0)PF
)@@G@@ [IH94G*'^[@C-JE9I^[7HD?H))GD5I-\H(-I-(GT-H-?JC)@K@@@@IL>GT\G9,HD'G*)E[MPG
)@@G@@DDIE)= ))C1JELOEL[D0)GD,G))E[#DDJES)G1(H->IS)GD,G))I[2H9<G(3IS)GT\H14IL\PH
)@@G@@H))^@)@B@@@@HD,G1\IL!GD4HD\H0)GD<GT\IL=HD,G9?JC, C)^@)@]@@@@ 1NDTDE@)AC)PI
)@@G@@@]@@@@ 1MC(NC(O^@)@]@@@@^9U^8) *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@I@@@@^C-G1\PJ
)@@G@@IL<G(3^[-^[=H97H1=GD4G*)H9&^@)G(6G(2JC)G(?G(!G(,I))H92^[KCTA^[3G(1I(>H1<PK
)@@G@@G*)^@)@M@@@@G(,GT\I(,I->IL>G))HD,^[>HD4H[>IK)HD,I[5I))IT4IL>GD! 0)^[DG0)PL
)@@G@@I-*G*)G(?G(!G(,I))H92^[3G(1I(>H1<G*)H[-IS)H1\^@)@L@@@@GT\I(,I->IL0GD2I))PM
)@@G@@HD,^[4H[>^[\I[0H93HD,G8)IT4IL>GD! ))HD4^[(IS)G-\I9,G--I->G))GD$GD(H13I))PN
)@@G@@GC)H15H-?^@)@ @@@@G(?G(!G(,I))H92^[3G(1I(>H1<G*,@]@@@@ 1NDTDE@)AC)@]@@@@PO
)@@G@@ 1MC(NC(O^@)@^@@@@ 02^@$ETKC(#^[ADD D-^ES$@#@@@@@[^@[O@@@@@@B-NE[ CS1B0)PP
)@@G@@ *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@F@@@@GT-H0)GL>^[-^[=GD4GC)G1(H-> ))I[2H9$PQ
)@@G@@IL-H*)G1(H->^[\IK)I[2H9$IL-H*)@G@@@@G1(H->^[>H->H(>H14 0)^[DG0)H1\^[&HD?PR
)@@G@@G*)H1-H(>^[(IS)G9(I1>H0?^[OE[A^))HD3@J@@@@GD3IT5H(>G),^@)B-NE[ CS1B0)HD3PS
)@@G@@^[4H[>^[>H->H(>H14^[\IK)G1(H->^[4H8)I9*HD<H@)I-*G*)H95I-0I(4@J@@@@GT\IL2PT
)@@G@@G(<I-(H9,IS)GD2G*)I-\^[+G*)GD0I[?HD>G)?^[(H0)H92G->IK)I-\^[<H[-H1$G*)HD4PU
)@@G@@^[(H14H8)^@)@]@@@@B-NE[ CS2B0,@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@#@@@@PV
)@@G@@B-NE[ CS2B0) *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@F@@@@^@)^[!GD9^[-H-3H8)GL>^[-PW
)@@G@@^[=GD4GC)G1(H-> ))I[2H9$IL-H*)G1(H->^[\IK)@I@@@@I[2H9$IL-H*)G1(H->^[>H->PX
)@@G@@H(>H14 0)^[DG0)H1\^[&HD?G*)H1-H(>^[(IS)G9(I1>H0?^[OE[A^))^@)@H@@@@HD3^[-PY
)@@G@@IT3I(!G(= 0)^[DG0)GD,^[>H->H(>H14^[,GD!G*)HD3^[$HD6G(,^[(H0)B-NE[ CS1B0)PZ
)@@G@@@I@@@@GD,G))H1\H1>^[(IS)G9(I1>H0)HD,^@/ETKC(#AK" ))I-*G*)H1-H(>^[&IL\H*)QA
)@@G@@B-NE[ CS1B0)HD3^@)@I@@@@GD3IT5H(>G),^@)DD&^[+H94H@)B-NE[ CS1B0)GD,G))B-NQB
)@@G@@E[ CS2B0)G->IT(G9,GD4G*)I[2H9$IL-H*)@H@@@@G1(H->IS?^[-^[0IL\G92GD!^[&HD?QC
)@@G@@G*)H(\G->^[=H97H1=GD4G*)HD3^[(H1(I-(GD4G(= 0)^@)@J@@@@E[2H9$IL-H*)G1(H->QD
)@@G@@^[>H->H(>H14IS)H(-JC)GL>^[=H97H1=GD4G(=^[-G9-HD,IT4^[4G(8I))G1(H->IS,^@)QE
)@@G@@@]@@@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@#@@@@B-NE[ CS3B0) *)^@)@#@@@@ 1DD1^QF
)@@G@@C(IE))A*)^@)@E@@@@^@)^[(IS)I-*G*)H95I-0I(4^[&HD?G*)G1(G(?G),^@)DD&^[>H(0QG
)@@G@@I-9 ))@H@@@@HD4^[(IS)GD3IT5H(>G))H1\^[\I(4I[5I))IT4IL>GD!^[(IS)G->IT(IL>QH
)@@G@@G),^@)DD&^[(I))^@)@G@@@@@[G@[W@@@S**G(8HD3I-3 ))HD4^[!GD9^[-H-3H8)GL>^[-QI
)@@G@@^[=GD4GC)G1(H-> ))I[2H9$IL-H*)G1(H->@I@@@@G(?G(!G(,I))H92^[0IL\G92GD!^[&QJ
)@@G@@HD?G*,^@)DD& ))H[\I9>I1>IK?^[(I))HD3^[-^[0IL\G92GD!^@)@K@@@@G1(H-> ))I-*QK
)@@G@@G*)^9K^8)H90I-(H9,^[!I(3I))GD?IT\^[+G*)I[2G(3G(,I),^@)E-*HD3^[(IS)H1>GT>QL
)@@G@@IT3GD2JC)I-\@L@@@@HD,G-(GT-I->^[=G(&GD5H-4^[>H->H(>H14^[,GD!G(3 0)CD,^[>QM
)@@G@@IL2H92^[7HD?H))GL>^[,H94G(=^[\I-*G(2I9(IT> 0)^@)@]@@@@ 1NDTDE@)AC)@]@@@@QN
)@@G@@ 1MC(NC(O^@)@#@@@@B-NE[ CS4B0) *)^@)@#@@@@ 1DD1^C(IE))A*)^@)@ @@@@^@)^[*QO
)@@G@@GD3^[4H[>^[&H92H(-I)'^@)@]@@@@ 1NDTDE@)AC)@#@@@@ 1JD0?E))CT D1OC(M@F@@@@QP
)@@G@@B-#D9GAC" 8/CTJD-IB0\B-LE(JE- ^[#D[[EK" 0/CTJD)1B0\B-#D9GD0"^@!^@)@]@@@@QQ
)@@G@@ 1NDTDE@)AC)@F@@@@CD?H))G1(G(?G-3^[-IL>^[\I[4HD\H1-H),^@)E-*G*)^[2G(=I(,QR
)@@G@@G--H1<JC)^@)@H@@@@HD3^[0IL\I1(G->G))GD3^[-H0)GD(G))I-\^[4H[>^[5IT>IK?^[4QS
)@@G@@H[>^@/EDPD9OC*)CTCCDMB0)@H@@@@HD3^[&H92GT>G))I-\^[4H[>^[7IL(I->^[:G(9^[&QT
)@@G@@HD>H-=^[4H8)GD?H-\I8)HD,I[5I))H9&^@)@G@@@@IT0G(<HD-H))GT*GD2GD<I->IL3 0)QU
)@@G@@^[DG0)GL\I-*^[&HD?G(,GD!G*!IL>GD= (:G(9^@)@G@@@@GD,G))G(?G(!G(,I)!I1>IL3QV
)@@G@@HD\H0!H1-H(>^[<H9!GL(H1-I-(H9,IS)GD2G*)G9(I1>H0?@G@@@@I-*G*)G(?G(!G(,I)!QW
)@@G@@I1>IL3HD\H0!H1-H(>^[0GD2GD!G(4G(2IS)GD2G*)I(3G(= 0)^@)@]@@@@ 1NDTDE@)AC)QX
)@@G@@@^@@@@B-#D9GAC" 8/CTJD-IB0) *)@#@@@@ 1DD1^C(IE))AS)^@)@F@@@@HD3^[4H[>^@$QY
)@@G@@E9DD1^D9R^8)H90I-(H9,^[3I[>GT(G1(GT-I-(H9, 0)^[DI))^@)@F@@@@GD?H-\I93^[4QZ
)@@G@@H[>^[5IT>IK)I-\^[=H97H1=GD4G*)H96G(2^[3I[>GT(G1(G(=^@)@H@@@@GT\H-5H(,IS)RA
)@@G@@@[O@[=@@@@@@H9&^[4H[>^[(H10I(4^[(H(-G9> 0)^[AH92^[>J[-H(0H-> ))I-\^[(G9,RB
)@@G@@H92G*)@H@@@@I[\IT3HD+H->^[<GD2G))IT>ID5G(,GT>^[,I(!GL>IL3 ))H9,G*)H((G9*RC
)@@G@@I))I[2H96HD=G*)^@)@G@@@@^81 87AK$ 0)^[OH[>^[\H1?JC)IL>IT4IL(GT4HD\H0)HD3RD
)@@G@@^[4H[-I)?^[(G0)G9(I1>H0?@G@@@@B-#D9GD0"^[!I(3I))GL>^[$IL>GD4G(2^[4H[-H0)RE
)@@G@@H92^[>ID5GD?^[4H8)B-#D9GAC" 0)@]@@@@ 1NDTDE@)AC)@^@@@@^C/EDPD9OC*)CTCCDMRF
)@@G@@B0) *)@]@@@@ 1NDTDE@)^@)@G@@@@HD3^[0IL\I1(G->G))G1\IK)I-*G*)^9]EC$^[\I[4RG
)@@G@@HD\H0)G-\I9,G--I-> 0)^[OH[>^@)@F@@@@G->G1-I(?I))B-LE(JE- ^[#D[[EK"^[(IS)RH
)@@G@@I-*G*)GD0H93I-2H90H[>^@*^8( 0)@I@@@@E-*HD3^[&HD>H-=^[(IS)I[2H96HD=G(=^[(RI
)@@G@@H0)I-*G*)G(6G(,I))I-*GD4^[4H[>^@$CLL^8)H90I-(H9,@H@@@@HD3^[=G(3HD2G(=^[&RJ
)@@G@@H92^[3H9!G*)H--H1$I(-G9>^[7H[(GT*^[5IT>IS)IT\H(>^[\I-*G(2^@)@G@@@@GT*GD2RK
)@@G@@GD<I->IK)I-\^[=G(?HD!HD4^[?HD4G(2GD?^[<H[-IL-GT4G(2^[3I-2HD,G93 0)@]@@@@RL
)@@G@@ 1NDTDE@)AC)@]@@@@ 1MC(NC(O^@)@#@@@@B-NE[ CS5B0) *)^@)@#@@@@ 1DD1^C(IE))RM
)@@G@@A*)^@)@^@@@@H[-IS)I-*G*)G1\IL!GD4BK)@]@@@@ 1NDTDE@)AC)@#@@@@ 1JD0?E))CT RN
)@@G@@D1OC(M@I@@@@B-KC( DS" 8/D-JD9F^[[D[ CD^B0\B-#D9MEK)CTCCDMB0,B-KC( DS" 8/RO
)@@G@@D-JD9F^[[D[ CD^B0) *)^@)@]@@@@ 1NDTDE@)AC)@I@@@@H-(HT>^@/ETKC(#A)"^[4H[>RP
)@@G@@^[2G(=I(,G--H1<JC)HD3^[0IL\I1(G->G))I-\^[-HD=^[4H[>^[5IT>IK,@]@@@@ 1NDTDRQ
)@@G@@E@)AC)@A@@@@B-KC( DS" 8/D-JD9F^[[D[ CD^B0) *)^@)@#@@@@ 1DD1^C(IE))AS)^@)RR
)@@G@@@G@@@@GD2G*)I[2H9$IL-H*)H90I-(H((JL-I-(H9,^[0GD2GD!G(4G(2IS)GD,G))GL9^[4RS
)@@G@@H[>HD2@I@@@@H1-I-5IL>^[-IL>^[3H9!G(7H[-I))GD2GL(@[W@[?@@@S**I-2GD2JC,^@)RT
)@@G@@E-*G(9^[=G(&GD5H-4^[4H8)A*\A)0A@,^@)@J@@@@E-*G(3G*)H[-I1>^[+G(>H0)G1\I(,RU
)@@G@@G))I-\^[+G*)IL>GD3H9,GD+H->^[6GD?I(>IS)HD,^@)I-*G*)I1-IT4^@)@I@@@@H(-HL\RV
)@@G@@IL(I-9^[\G0)GT-IT>IS,^@)E-*G*)B-KC( DS"^[&GD<I-\IK)HD3^[=G(&HD,G(=^[-IS)RW
)@@G@@I-*G*)@I@@@@H15H(+G(2^[\G0)IT>ID5G(,I-(GD?H-9^[<H92IL>IT0H9,G-(H1$^[2G(<RX
)@@G@@H92G-3^[,G(<G(3IT-IL9^@)@J@@@@I-\^[<H9,G1(IL!^[-^[!GD4GT* 0)^[OH[>^@/D-JRY
)@@G@@D9F^[[D[ CD^B0)G1-GT4H92^[(IS)I-*G*)H(-J[(H(5H*)@J@@@@H15H(+G(2^[\G0)HD!RZ
)@@G@@GD$G(3^[3G(1I(>H14HD-H-?JC)IT>GD2GT*G(=^[(H0)H92G->IK)I-\^[-I-4G(!I[4^@)SA
)@@G@@@I@@@@I-\^[3GD4HD3G19^[4H[>^@/E[ C(FB0)G1-GT4H92 0) [3G(>^[JE[ODDHDDUDDISB
)@@G@@C8)E[[EL[D( E- ELN@B@@@@CDIC))E-CC*)C-JE9IC-[E- EK)CDGC9JELDE-CD*(@]@@@@SC
)@@G@@ 1NDTDE@)AC)@^@@@@^C/CTJELM^[#D[[EK"^@!^@)@]@@@@ 1NDTDE@)^@)@I@@@@HD3^[4SD
)@@G@@H[>^[<H92IL>GT4HD\H0)GT-IL=^[0IL>G1(J@)GT*GD2GD<I->IK)I9*HD<H@)ETDEK)GD?SE
)@@G@@H-\I93@I@@@@I-\^[+G*)IL>G->G1(H1>G),^@)DD4IS)G->G1-I(?I))HD3^[4H[>^[5IT5SF
)@@G@@GD?^[=GD3H@)H92^[!HD,I(3@I@@@@IT(G9,^@* *( 0)^[GHD:G*)I-*G*)B-LE(JE- ^[#SG
)@@G@@D[[EK" ))HD4^[5IT>IS)I-*G*)I92HD4G*)HT>JC)@I@@@@H9&^[4H[>^[3I[>GS)G1(G(?SH
)@@G@@G))I-\^[-H-?H97^[4H[>^[(H14IL\G-5GT4HD\H0)H9&^[3I[>GT(GD?^@)@#@@@@GT*GD2SI
)@@G@@GD<I->IL3 0)@]@@@@ 1MC(NC(O^@)@E@@@@ 01^@$D1JE- ES)D9I^[DD(KD- D( D1OCDOSJ
)@@G@@DDJD0)CDIC))E(NCDBC*$^@)@A@@@@ 02^@$E[MD9BEL[D*)C1DD- ^[HD9^C*$^@)@G@@@@SK
)@@G@@^D[IS)IT4GD4G(=^[>GD2H-(G(2 ))I9*G(,^@/ETKC(#AC"^[-H1=^@/ETKC(#AK"^[-IL>SL
)@@G@@@L@@@@GL\I-*^[0IL\G92GD!@[=@[4@@@@@@^[&HD?G(3 ))I[2H9$IL-H*)G1(H->^[!H9=SM
)@@G@@G*)HD3^[(H1(I-(GD4G(= 0)^[OH[>^[5IT>IK)H[-IS)^@)@E@@@@IT\H(>^[<H9,I-2H9?SN
)@@G@@^[\I1>IK)I9*GD4^[(IS)G-\I9,G--I->G))GD,G))@I@@@@I-*G*)IT5GL3G(1I(>H14^[\SO
)@@G@@I(4I[5I))I1(GC)I-*G*)^9 ^8)GD,G))^9U^8)H90I-(H9,IS,^@)E9*G(,@J@@@@H1>HD4SP
)@@G@@H[>IK)H9&^[4H[>IT>^[(IS)IT0G(<HD&HD>G)?^[\H1?JC)IT9H(+H9?HD<^[>H->H(>H14SQ
)@@G@@IS)I9*HD<H@)@G@@@@H[-I1>^[,GD!G(3^[<H9!H(\H0)I-\^[+H94H@)G1(H->IS)GD2G*)SR
)@@G@@GT\H(0GD2G(= 0)^@)@K@@@@ET5GL3G(1I(>H14^[\I(4I[5I))I9(H-?^[\H1?JC)H9<GT5SS
)@@G@@IK)HD&^[3H9!G*)G-(G1&G(2G(,GT>^[(IS)G1\I(,G))^@)@H@@@@GL>I-7G(>H0)GC)GT\ST
)@@G@@H(0GD2G(=^[0GD(IK)H9&^[>H->H(>H14IS,^@)E-*G*)^9 ^8)H90I-(H9,@C@@@@HD3^[0SU
)@@G@@IL\I1(G->G))I-\^[&H92GT>^@)GC)H((H1(H(5H*)@G@@@@^9,I(?H))H95I-0I(4^8)G(6SV
)@@G@@G(,^[(G0)GL\I-*^[>H->H(>H14IS)GT\H(0GD2G(=^[-IL>@G@@@@HD=G(,I-(GT-H),^@)SW
)@@G@@E-*HD3^@$H15H-?^[\I(4I[5I)$^[!GD9^[3HD!I[?JC)GL>^[(H0)@G@@@@I-*G*)G1\IL!SX
)@@G@@^[\G0)GC) L D- D( D1O^[<GD2G))HD,^[4H[>^[\I(4I[5I))IT4IL>GD!@K@@@@H92^[-SY
)@@G@@^[,I(?H))G(,I-2JC)I9(I-*^[-^[<H92IL>IT0H9,G-(H1$^[>H->H(>H14^[,GD!G*)HD,SZ
)@@G@@^[4H[>^[\I(4I[5I))@A@@@@^9K^8)H90I-(H9,^[0IL\G92GD!^[&HD?G*)@A@@@@ [3G(>TA
)@@G@@^[OD[ ^@$E@$^[JE[ODDJD0( 0)^@)@G@@@@E-*HD3^[!GD9^[3G(>H*)I-2HD6HD-H))GD4TB
)@@G@@^[&HD2IT4^[$H--H1<G*?^[+I(4^[(I))^@)@G@@@@HD3^[\G14G(,^[=G(3HD2G(=^[(H0)TC
)@@G@@I-*G*)GT2G(-I-(H9,^[\G0)E[#C0)H92^[OCTA^@)@C@@@@I[2H9$IL-H*)G1(H->IS)I-\TD
)@@G@@^[+G*)I(3G(=^[+JC)ETNC8,@J@@@@E-*G*)^9U^8)H90I-(H9,^[&H92GT>IS)H95I-0I(4TE
)@@G@@@[?@[/@@@S**^[&H92^[-H-?^[>H14IL(G(3^[>H14G(2G(=^[(H0)GL\I-*@G@@@@I[2H9$TF
)@@G@@IL-H*)G1(H->IS,^@)DD&^[-H0)G(,I-2JC)HD3^[>H1<H95H14G(2G(=^[7H[(GT*@G@@@@TG
)@@G@@H[-IS)H1\^[<H95H14G(2I[-IL4^[(H0)I-*G*)H90I[\IT(H1$^[0IL\G92GD!^[&HD?G*?TH
)@@G@@@C@@@@I(,G->IK)I-*G*)^9U^8)H90I-(H9, ))HD4^[7HD?H))^@)@D@@@@GL>^[>G1&G(<TI
)@@G@@I-(I1>H-9^[=H97H1=GD4G(=^[-G9-HD,IT4^[-^@)@F@@@@H15H-?^[>H->H(>H14 0)^[RTJ
)@@G@@HD4H@)I-*G*)^9U^8)H90I-(H9, ))H9,G*)GT-H0)@E@@@@GT2G(-I->^[-^[KCTA^[\IK)TK
)@@G@@E-#C0)^[7H[(GT*^[7HD?H))^[!GD0^[-H-?@G@@@@I-*G*)IT9H(+H9?HD<^[>H->H(>H14TL
)@@G@@IS)H9&^@/ETKC(#AC"^[(H14H8)IT9H(+H9?HD<^@)@I@@@@G(?G(!G(,I-3^[\G0)B-NE[ TM
)@@G@@CS2B0,^@)D95I-0I(4 ))IL>G9-IL=H->IT3^[\G0)H90I-(H9,IS?^[(IS)@G@@@@GD?I9-TN
)@@G@@JD3^[(H0)IT\IL4^[\IL=G(2 ))HC,G*,^[4H[>^[\IL=G(2^[\G0)H95I-0I(4^@)@J@@@@TO
)@@G@@IT>ID5G(,GT>IS)I9(H-?^[-H-7GD9IS)H9+G(9^[4H[>^[,GD4I(2GD?^[ADD D-^CDOCC)TP
)@@G@@GT\H-?GD4HD,G8)^@)@#@@@@IT>ID5G(,GT> 0)^@)@]@@@@ 1NDTDE@)AC)@ @@@@ 02^@$TQ
)@@G@@ETPD(HCDMFC)D9KE-DD9IES$@J@@@@^DOH[>^[3I(!H(-IL9^[\I[4HD\H13^@$C)$ ))^9[TR
)@@G@@^8?^@$D8$ ))^9M^8?^[-H1=^@$ES$^[-H-?H97^[\H1>^@)@H@@@@I-\^[?H9\HS)G1\IK)TS
)@@G@@G-(G1&G(2G(,GT>IS)HD,^[4H[>^[>H14IL(G(3^[\G0)I[2H9$IL-H*)^@)@G@@@@G1(H->TT
)@@G@@^[OD9#IS,^@)E-*G(9^[-IL>^[-^[,GD4I(2GD?^[>J[4G(,IT(H9,^[\G0)I-*G*)@F@@@@TU
)@@G@@I-2G(>^[*GD,G-?HD,G8)H(>GT*GD,HD3H(3^[5IT>G))I-\^[0IL\GT>IT3^[-H1=@E@@@@TV
)@@G@@IT\IL4^[>H14IL(G(3^[&H92^[0IL\G92GD!^[&HD?G*)G-\I9,G--I->IS,@F@@@@E-*G(9TW
)@@G@@^[3I(0I[?JC)GC)H1\H((H1-H))GD!H95H14^[\G0)HD,G1\@[4@]^@@@@@@IL!GD4HD\H0)TX
)@@G@@@H@@@@IL>G9-IL=HD,G8)I-*G*)G-(G1&G(2G(,GT>IS)GL>I-7G(>H0)I[2H9$IL-H*)G1(TY
)@@G@@H->^[OD9#IS,@]@@@@ 1NDTDE@)AC)@ @@@@ 02^@$D-DETODDIC8)CTJD1OELJD)$@H@@@@TZ
)@@G@@^DOH[>^@$D0$ ))^9G^8?^[-H1=^@$E0$^[\I[4HD\H13^[0IL\I1(G->^[4H[>^[5IT>IK)UA
)@@G@@I9(I-*@J@@@@IT\H(>^[=G($IL>G*)H9&^[<H9,I-2H9?^[\I1>IK)I-*G*)E[MDDIE)=^[?UB
)@@G@@HD3I-(H1$^[\G0)G-\I9,G--I->G))@I@@@@H95I-0I(4 0)^[OH[>^@$D0$^[\I[4HD\H0)UC
)@@G@@HD3^[0IL\I1(G->G))I-\^[3I(0I[2G(3IS)E[MDDIE)=^@)@I@@@@H95I-0I(4^[\G0)I-*UD
)@@G@@G*)GD<I-5GD?^[=H97H1=GD4G*,^@)DD4^[=H9>IS)H1\I)?^[*H97G(6G(2 ))^@)@I@@@@UE
)@@G@@GD&G1>GT4^[4H[>^[0IL(H14HD,G8)H9&^[>IL2H92^[!G(3IT-G9>IS)H92^[3I(!H(-IL9UF
)@@G@@^[\I[4HD\H0)@H@@@@HD,G1\IL!GD4HD\H0)I9*HD<H@)H(5IT4^[+G*)IT0G(<HD&HD<GD?UG
)@@G@@H-9^[2G(1I(>IT4G(= 0)^@)@C@@@@DD&^[4H[>^@$D0$^[\I[4HD\H0)HD3^[3I[>GT(G1(UH
)@@G@@G(=^@)@H@@@@GD,G))H1\^@/ETKC(#AS"^[(IS)G9(I1>H0?^[,H8)GD<I-5GD?^[3JD!GL\UI
)@@G@@H-(GS)G-\I9,G--I->@I@@@@HD3^[-I-4G(!I[4G(= ))GD?I-*H95G9*^[3I(!H(-IL9^[\UJ
)@@G@@I[4HD\H13^[-IL>^[-H-?H97G(= 0)^[DG0)@D@@@@H1\^[3I(!H(-IL9^[\I[4HD\H13^[*UK
)@@G@@GD6G*)GL>G(,^[$HD6G(, ))@I@@@@I-*G*)G(8G(<I(4HD\H0)HD3^[=G(4G(2H((H1>G))UL
)@@G@@I-\^[+G*)I(3G(?G(3IS)GD,G))GD,^[>IL2H92^@)@E@@@@HD3^[,H94G(= 0)^[DG0)H9,UM
)@@G@@H-9^[3I(!H(-IL9^[(H1&H92H(-I-(H9,^@)@H@@@@HD3^[=G(3HD2G(= ))HD4^[(IS)IL>UN
)@@G@@GT\H(!G(,G->G))I-*GD4^[4H[>^@$D0$^[\I[4HD\H0)^@)@H@@@@I9(I-*^[,H8)B-NE[ UO
)@@G@@CS3B0)GD?IT\^[+G*)IT0G(<HD&HD>G)?^[4H[5IS)HD,H[(GL(I-(H1$^@)@J@@@@G(8GT>UP
)@@G@@IT3HD6G*)^[\I(4I[5I),^@)@[/@]G@@@S**^@)E-*G*)^9G^8)H90I-(H9,^[(IS)I[2H96UQ
)@@G@@HD=G(=^[4H8)G9(I1>^[4H[>@F@@@@I(3G(2^[4H[>^[!GD8HD!I(!^[-H(\I(,I))H9&^[(UR
)@@G@@H1&H92H(-I-(H9,^[\H0)^@)@J@@@@GC)I[-IL4HD<I(?GD2^[3JD!GL\H-(GS)G-\I9,G--US
)@@G@@I-> 0)^[DI))IT5I[0H-(G(3^[4H[>^[=HD&G1>IL(H1$^@)@G@@@@HD!GD$G(3^[\G0)GL\UT
)@@G@@I-*^[&HD?G(3^[-H-\H1$^[7HD4H@)I-*G((IK)IL>IT0G(<I-(I1>@H@@@@H-(H1>^[,I(!UU
)@@G@@GL>IL3 0)^[OH[>^[\I(4I[5I))HD3^[&H92H(-I-4G(=^[4H8)A82^[\IK)AC3AK)@L@@@@UV
)@@G@@GT*GD2GD<I->IL3^[=G(0G(,G-(H1$^[\H0)G->H(-H1=^[\IK)GL-I-<H@)GD,G))GL2G(-UW
)@@G@@HT0H9(H14^[>J[>GT5I-(H9, 0)^@)@C@@@@DD&^[\H1>^[(IS)G(8G(<I(4HD,G8)G12H9!UX
)@@G@@^[=G(!GD,G))@G@@@@GD,G))I9(IT*G(3^[-^[+GD4GT*^[?HD3I-(H1$ ))I-*G*)^9Q^8)UY
)@@G@@H90I-(H9,^[(IS)^@)@H@@@@IT5I[0H-(G(= 0)^[DG0)I-*G*)^9G^8)H90I-(H9,^[(IS)UZ
)@@G@@H1\I))IT0G(<HD&HD>G))I-*G*)^@)@H@@@@H95I-0I(4^[(IS)I[2HD,I->G)?^[5H1&H92VA
)@@G@@H(-I-4G(= ))I(0^[4H8)AC3AK)GT*GD2GD<I->IL3@B@@@@GD,G))I-2I(,GT-I->G))GD&VB
)@@G@@I->IK)I-*GD4 0)^@)@]@@@@ 1NDTDE@)AC)@ @@@@ 02^@$E[#C0)C-JE9IC-[E- ^8)^@)VC
)@@G@@@I@@@@^DOH[>^[KCTA^[=H97H1=GD4G*)HD3^[4IL(G9$G(2G(=^[+JC)I-*G*)I[2G(3G(,VD
)@@G@@GT>^[\G0)I-*G*)^@)@G@@@@^9O^8)H90I-(H9, 0)^[OH[>^[\I(4I[5I))HD3^[(H0)I-*VE
)@@G@@G*)G1\IL!^[\G0)GC)E-#C0?@I@@@@GT-I[-GL?G*)I1(GC)ETNC8?^[\G0)I-2GD,IT&H92VF
)@@G@@H((H1$^[4H[>^[KCTA^[\G0)B-NE[ CS1B0)HD,I-\@I@@@@I-*G*)E[#C0)H9&^@/ETKC(#VG
)@@G@@AK" 0)^[OH[>IL>^[-IL>^[,H8)H-\G9(GT-H))IL>IT4IL(GT4HD\H13^@)@I@@@@I-\^[4VH
)@@G@@H[>^[&HD?G*)I-9I[>IS)HD,^@/ETKC(#AC"^[\IK)B-NE[ CS2B0)H94H[>IK)I-*GD,^[4VI
)@@G@@@]^@]O@@@@@@H[\IT>@G@@@@I[2G(6HD\I(3H-9^[3I--I->G),^@)E-*G*)^9K^8)H90I-(VJ
)@@G@@H9,^[(IS)GD?IT\^[6GD?HD=@H@@@@GD,G)?^[(G0)I[2H90G(2H-9^[5IT>G)?^[2G(3I(?VK
)@@G@@I-3^[(H0)GC)E-#C0)I[2H9$IL-H*)G1(H->@F@@@@GD3^[\I(4I[5I),^@)DD&^[(H10I(4VL
)@@G@@^[(IS)HD,^[4H[>^[&H92H*)H9&^[-^[KCTA@L@@@@G(?G(!G(,I))H92^[=GD4GC)G1(H->VM
)@@G@@^[<H9,I--HD,HD,G8) L D- D( D1O^[3G(1I(>H1<G(3 ))^[(I))HD3^[4IL>GD4G(=^@)VN
)@@G@@@D@@@@GD3^[-H0)G(?G(!G(,I))I9(I-*HD,^[-^[0IL\G92GD!^[&HD?G*,@H@@@@E9(I-*VO
)@@G@@^[4H[(IS)H(\G->^[\G0)H[-H1=H-(H1$ ))I-*G*)^9 ^8)GD,G))^9U^8)H90I-(H9,IS)VP
)@@G@@@C@@@@H[-I1>^[-^[!G(-H1(H1$^[-IS)G->IT<IL(GL>G))HD,^@)@C@@@@E[MD9BEL[D*)VQ
)@@G@@C1DD- ^[HD9^C*,^@)E-*G(9^[0IL\G-5GT>@F@@@@I-*G*)IT-H(>^[>G1&G(<I))GD3^[(VR
)@@G@@G0)I-*G*)E[#C0)HD,I[5I))IT4IL>GD!IS)@E@@@@H[-I1>^[-GT4I(-H-?JC)GL>G(,^[KVS
)@@G@@CTA^[0IL\G92GD!^[&HD?G(3 0)^@)@G@@@@^DOH[>^[0H9(H14^[3H[\I(?G))GL>^[!GD=VT
)@@G@@G*)I-*GD4^[4H[>^@$E)$^[\I[4HD\H0)HD3@E@@@@I[2H96HD=G(=^[4H8)G-\I9,G--I->VU
)@@G@@^[KCTAIS)H1\I))E-#C13 0)^[OH[>@G@@@@G-(IT4HD,GT4HD\H0)HD3^[4H[(IS;^[OCTAVV
)@@G@@IS)H(-JC)GT\H14GD(H0)IL>H--I-(I1>^@)@J@@@@E[#C0)GT\IL2G(<I-(H9,^[(H(-G9>VW
)@@G@@IS)I9*HD<H@)GD2G*)I-*G(!IT>H-6G(3^[5H1<H92IL>GT4GD+H-> 0)^@)@K@@@@DD&^[@VX
)@@G@@C-JE9I^[(IS)HD,^@$E)$^[\I[4HD\H0)H(\G->^[-H1=^[>H1<H95H14G(2IS)IT5GT*^[-VY
)@@G@@H0)HD!GD$G*?^[-^@)@F@@@@G1\IL!GD4^[>IL2H92^[(IS)H1\I->G)?^[4H[>^[<GD2G))VZ
)@@G@@HD3^[4IL>GD4G(=^@)@F@@@@GD3^[-^@) L D- D( D1O^[<GD2G))H92^[-H0)C(JC0)G->WA
)@@G@@H-(H((I->IK)GD,G))@C@@@@G(8G(<I(4HD\H0)GT\H14HD,@]G@]W@@@S**I(>IS,^@)DD,WB
)@@G@@^[3H[\IL4 ))@G@@@@H9,G*)H(-JC)G-\I9,G--I->^[OCTAIS)HD,^[4H[(IS)H(-H1,G(2WC
)@@G@@ 0)^@)CT?H93G*)^@)@I@@@@GD4I->H14HD\H0)IT*H95H-=^[+G*)I[-HD=^[4H8)GD,JC)WD
)@@G@@I[2HD,I->G))G(2IL\IK)H(>IT3GD$G(3 ))@G@@@@H[\I9>I1>IK?^[+G(<GD5IT>^[>IL2WE
)@@G@@H9,G(\I(3^[\I(4I[5I))H(-JC)G1\H-?H97 0)^@)@]@@@@ 1NDTDE@)AC)@A@@@@ 02^@$WF
)@@G@@E-CC*)^8$E@$^8)D9KE-DD9I^8)^@)@E@@@@^DDH0)I-*G*)G9>H1>IL-H))GT-IT> ))I-*WG
)@@G@@G*)^9K^8)H90I-(H9,^[(IS)@H@@@@H(>GD,I))I-\^[+G*)I(3G(=^[(H0)I-*G*)I[2H9$WH
)@@G@@IL-H*)G1(H->^[!H9=G*,^@)E-*I(3 ))^@)@E@@@@I-*G*)H1-H(>^[&H92^[>GD<H@)H95WI
)@@G@@I-0I(4^[>H->H(>H14^@)GT\H(>IS)@H@@@@G12H9!^[4H[>^[,GD!G*)H9&^[4H[>^[>H->WJ
)@@G@@H(>H14IS)GL>HD,G8)GT\H(0GD2G(=^[7HD4H[(H0)@I@@@@H90I[\IT(H1$^[0IL\G92GD!WK
)@@G@@^[&HD?G(3 0)^[OH[>^@$E@$^[\I[4HD\H0)HD3^[,H94 ))H[\I9>I1>IK?@H@@@@H-(H((WL
)@@G@@I->G))I-\^@)I[2H9$IL-H*)G1(H->^[!H9=G*,^@)E-*G*)H9,H-9^[2G(3I-2HD<I-(H9,WM
)@@G@@@G@@@@HD3^[4H[-I))I-*G(2G*)H(5IT4^[+G*)IT\H(>^[?H9$HD<GD?^[=G(&GD5H-4^[,WN
)@@G@@GD!G*)@G@@@@I-\^[+G*)G9(I1>H0)I-\^[-H19^[0H94G(,I-(GD?^[\I(4I[5I))G(?G(!WO
)@@G@@G(,I),^@)CD3@G@@@@GC)H--IT4^[2G(3H92I)?^[4H[>^[>H->H(>H14^[,GD!G*)HD3^[4WP
)@@G@@GD:G(,^[&IL\H*)^@)@G@@@@I-*G*)G(?G(!G(,I))H9&^@/ETKC(#AC" ))HD&^[(I))G(8WQ
)@@G@@HD3I-3 0)^[DG0)H1\I)?^@)@G@@@@GD,^[>IL2H92^[(IS)H1\I->G))GD,G))I-*G*)I[2WR
)@@G@@H9$IL-H*)I->IL!HD,GD4G(3 0)^@)@I@@@@DD&^[4H[>^[0IL\GT>IT3H92^[(IS)H1\I))WS
)@@G@@HD,^[0IL\G92GD!^[&HD?G*)H(\G->^[+I(4^[4H[>^@$E)$@J@@@@H90I-(H9,^[(IS)IT0WT
)@@G@@G(<HD&HD>G)?^[-H1=^[4H[>@]O@]=@@@@@@^[(H10I(4^[3I-2G(-H(3^[<H9,I--HD,^@%WU
)@@G@@C(GC(HC(IE))@D@@@@GT-IL=IS?^@)I-*G(3G*)GT-IL=IS)H1-H(>^[4H[>^[\I(4I[5I))WV
)@@G@@@G@@@@G(?G(!G(,I-3 0)^[[^[0IL\GL?G(!^[-IL(IT>IS)I9*G(,^[4H[>IL>^[(IS)GC)WW
)@@G@@G--I--@I@@@@G1(H->^[(H0)B-NE[ CS1B0)I9(I-*^[,H8)^9O^8)H90I-(H9, ))H92^[7WX
)@@G@@HD4H@)GC)^9O^8)H90I-(H9,@I@@@@GL5I))H1\^@%C(GC(HC(IE))GT-IL=IS)HD,^[4H[>WY
)@@G@@^[=GD4GC)IT4IL>GD! 0)^[DH0)I-*HD3^[<GD3G*?@J@@@@I-*G(2G*)HD3^[,H8)H-\G9(WZ
)@@G@@GT-H))H95I-0I(4^[>H->H(>H14^[,GD!G*)I-\^[+G*)I(3G(=BS)I-*I(3 ))^@)@F@@@@XA
)@@G@@GD,^[>IL2H92^[(IS)H1\I->G),^@)E-*G*)^9K^8)H90I-(H9,^[(IS)H(>GD,I))@I@@@@XB
)@@G@@I-\^[<IL>GD4G*)E[#C0)H92^[OCTA^[0IL\G92GD!^[&HD?G(3^[&H92^[3I(+IT>ID5G(,XC
)@@G@@I))I(3G*)^@)@]@@@@GL9^[NETB 0)@]@@@@ 1NDTDE@)AC)@H@@@@ 02^@$E-CC*)^8$CLLXD
)@@G@@^8$^[JE[ODDJD0?^[RDDIC-JE8)ETKC(# ))CDIC))E-MCDIETGCDODDJD0$@D@@@@DD&^[<XE
)@@G@@H9!I[-IL>G))IL>GT\IL=IS)GD2G*)H9&^[=HD&G1>IL>H14@G@@@@H(\G->IS?^[4IL-H13XF
)@@G@@H--I-(H9,^[(IS)GD5I-\H(-I-(GT-H-?JC)H(-G-> 0)^[OH[>^@)@I@@@@G-(IL>GT4HD\XG
)@@G@@H0)H9&^[4IL-H13H--I-(H9,^[(IS)GD?I9-JD3^[[ET#DDD^@!B0)C1DC(GC-[E-[ 0)^@)XH
)@@G@@@G@@@@E-*HD3^[<H[\HD<G*)I9-IS)H(-G->^[&H92^[(H14G(2H1-H))GT\H16G(,HD>H1<XI
)@@G@@G*?^@)@F@@@@GL5I))HD4^[*GD3^[9G(4^[4H8)GL>^[3H[\I9,^[4H[-I))I-*G*)HD,I1>XJ
)@@G@@IL3G*)@D@@@@I-2GD,IT?GD4HD\H0)HD3^[-H19^[!H92G*)H(>GD,HD,G9&I(? 0)@E@@@@XK
)@@G@@^DDI))IT*H95H-=^[+G*)H1\I->G))I-*GD4^[-H-?^[<H[-IL-GT4G(2^@)@I@@@@H(-H1(XL
)@@G@@I[5H--I-(H9, ))I9*G(4H[>IK)HD4^[+G*)I-*G*)G(?HD!HD,GD4HD\H0)H9&^[!I(?I-(XM
)@@G@@@]W@]?@@@S**I[?G*)@J@@@@GL?GD,HT3 ))I-*G*)HD,I1\GT-I-(H9,^[\G0)I9(H1=H97XN
)@@G@@^[3I[>GT(G1(GT-I-(H9, ))H92^[<H[-IL-GT4G(2@K@@@@I-2GD,IT?GD4HD\H0?^[(IS)XO
)@@G@@G-\H1>^[-I))I-*G*)I-(H(>^[\G0)G(-GT*^[2G(1I((IL>G))GT\H(0GD2HD3H9, 0)^@)XP
)@@G@@@F@@@@E-*HD3^[!GD9^[-I))G1(IL3I))G9?GD,GT>^[-I[0G(-IK)HD,G(&G1(GT(G(,I)?XQ
)@@G@@@G@@@@GL5I))I-*G(2G*)GD2G*)IT>I1>IL-H))IL>GD3H9,IS)G1\IK)I-*HD3^[-I[0IL\XR
)@@G@@GD<H@,@G@@@@C1(IL3I)?^[(I))HD3^[&G(?I))I-*GD4^[4H[>IT>^[!G(<H[-H1(IT!IS)XS
)@@G@@G->H1\I->^@)@G@@@@IT0G(<HD-H))I[5IL0H93G*)I(3GD$G*)GD,G)?^[-IS)IT5GT* ))XT
)@@G@@I9(H-?^[+G*)I(3G(=@G@@@@HD,G12G(1I(>H14H-9 0)^[OH[(IS)HD!I[?G(!G(,I--I-(XU
)@@G@@H9,^[0IL>IT>IL6G(3^[4H[>@G@@@@GL-IT(GS)DC\D8)IT4IL5GT4I(2G*)I9*HD<H@)H(-XV
)@@G@@HT>IS)I-*G*)G-\I9,G--I->IK)^@)@J@@@@GD3^[>G1&HD<HD>H14^[-IS)HD4^[(IS)GD,XW
)@@G@@G))JD>I))H(-HT>IS)I-*G*)GD<I-5GD?^[(H10I(4^[2G(<H92G))@F@@@@G1\IL!IS)I-2XX
)@@G@@GD,IT0GD2G(,I))I-\^[4H[>^[!GD(H0)H-(H1>^[2H95I-(H1>IS,@H@@@@ET>GT\H1= ))XY
)@@G@@HD,^[4H[>^[$G(,G(2GD?^[-I[0H-(GT-I-(H9, ))I-*G*)G->H13HD4JC)H9&^@)@J@@@@XZ
)@@G@@G-(G1&G(2G(,GT>IS)HD3^[&GD2^[3H(-H-?G(2^[4H[-H0)I-*G*)IT(JL>^[\G0)I-*G*)YA
)@@G@@I-\I--H))G1(H-> 0)@J@@@@E-*HD3^[!G(4H[\G))HD3^@)I[2H9+GD+H-9^[!H92G*)G(&YB
)@@G@@G1(GT(G(,I))HD,^[3I(<H@)GT-IT>IS)I-*GD,^@)@A@@@@IL>GT2G(-I-(H1$^[>GD<H@)YC
)@@G@@^[&HD?G*)HD,@E@@@@H(\G-(G1(G(=^[&H92H*)GD,G))G-\I9,G--I-(H1$^[4H[>^[2G(3YD
)@@G@@I(?I),@H@@@@D--IT4H-9 ))HD,^[!GD,JC)GD0I[?HD<GD4HD\H13^[4H[>^[=H97H1=GD4YE
)@@G@@G(2^[(IS)IT4HD?H))@D@@@@DC\D8)GL\I(,G),^@)E(3HD,@]=@]4@@@@@@G8)H(\IL>^[\YF
)@@G@@G0)I-*G*)CTKE*)^@)@H@@@@G-5IL(H1$^[\I1>IL?GD0I[>G))DC\D8)G-\G(3^[,H94^[-YG
)@@G@@I[0IL>GT(GD+H-9^[=G($IL-G->^@)@ @@@@I[2H9$IL-H*)I[>IL&H92H(-H1<G*,@]@@@@YH
)@@G@@ 1NDTDE@)AC)@I@@@@ 02^@$D9KE-DD(DFLDD1B^[KCDMCDHC(OC(MES)CDIC))E-CC*)C-JYI
)@@G@@E9IC-[E- EK)CDGC9JELDE-CD*'^8)@F@@@@^D[IS)IT4GD4G(=^[>GD2H-(G(2 ))I-*G*)YJ
)@@G@@B-KC( DS"^[&GD<I-\IK)GD,G))^@)@K@@@@B-GD9JDS)CDCC([C)"^[&GD<I-\IK)GD2G*)YK
)@@G@@H90I-(H((JL(H1$^[0GD2GD!G(4G(2IS,^@)E-*G*)G-\I9,G--I->IK)^@)@I@@@@HD3^[-YL
)@@G@@^[3G(1I(>H14HD-H-?JC)H92HD>H14G(=^[<H9!I[-IL-I-\IK)GD,G))GD3^[3I(<H@)HD3YM
)@@G@@^[,H94@I@@@@G->G1(H1>G))I-\^[0IL\I1(G->^[4H[>^[\I[4HD!I(!^[3G(4^[\G0)GT\YN
)@@G@@IL2G(<I-(H9,^[<GD2G-3 0)@F@@@@E-*G*)H90I-(H(5H*)HD3^[=G(&HD,G(=^[-IS)I-*YO
)@@G@@G*)H((H1(H(5H*)H15H(+G(2@K@@@@H9&^[0H93IT(GL?G*)GT\IL2G(<I-(H9,^[<GD2G-3YP
)@@G@@^[4H8)GT*GD,G9>^[\H1>^[&HD?G*)HD,I-\^[-H1\I-*G(2 0)^@)@J@@@@DD,IT4G(-G)?YQ
)@@G@@^[4H[>^[=H97H1=GD4G(2^[0IL\G-5GT>IS)GC)IT>I))H9&^[<H92IL>GT4HD\H0)GT-IL=YR
)@@G@@IS)^@)@G@@@@IT5G1&HD<HD>H14^[4H8)GD<H[(G(6G*)I-*G*)IT-H(>^[>H1= 0)^[DI))YS
)@@G@@HD3^[4H[>^@)@G@@@@HD,I->IL-GT4HD\H0)H9&^[4H[>IT>^[0GD2GD!G(4G(2IS)GD,G))YT
)@@G@@I-*G*)I[*JD3HD<GD?@F@@@@H1-I-5IL>^[\G0)I-*G*)G1(H->IS)GL>HD,G8)GT\H13HD=YU
)@@G@@G(2G(=^[7H[(GT*^@)@G@@@@G->I->IL!HD,G*)I-*G*)GT?H93G(,G(3IS)H9&^[4H[>^[0YV
)@@G@@IL\G-5GT4^[4H8)I-*GD4^@)@G@@@@H90I-(H(5H*)IT>I),^@)DD,^[&GD<I)?^[4H[>^[=YW
)@@G@@H97H1=GD4G(2^[-H-$H92HD4H[!^@)@F@@@@G-\G(3^[-^[6G(2JC)G9\H9=^[%H9+^[-I))YX
)@@G@@GD0I[2H98HD!GD4HD,G8)I-*@]?@]/@@@S**G*)^@)@E@@@@H90I-(H(5H*)^[(H0)I-*G*)YY
)@@G@@I1-IT4^[!GD%H92HD4JC)H9&^[<GD3G(3 0)@B@@@@DD4^[(IS)IL>H--I-(I1>H-9^[(H13YZ
)@@G@@G(,IT(I-(I1>@G@@@@I-\^[<H[-H1$G(3^[(H0)I-*G*)H90I-(H((JL(H1$^[0GD2GD!G(4ZA
)@@G@@G(2IS,^@)E-*G(2G*)@H@@@@GD2G*?^[*H97G(6G(2 ))GT*GD2GD<I->IL(IT4HD<IS)H9&ZB
)@@G@@^[(H10I(4^[=GD4GC)I9*HD<H@)^@)@H@@@@H(-JC)I->H1=^[4H8)G->G92GD=G*)I-*G*)ZC
)@@G@@IL>IT5H-4^[-H1=^[3H[\I(?G))GL>^[,H94G(= 0)@I@@@@C1\IK)G(8GD!I[?G*?^[(G0)ZD
)@@G@@H9,G*)HD3^[=H97H1=GD4HD,G8)I-7H8)G1(H->IS)I9*HD<H@)H[-I1>^@)@G@@@@IL>I[>ZE
)@@G@@I-(I-(I1>^[+H-\GT:IS)H9&^[4H[>^[3GD!G*)HD!GD$G(3 ))I-*G*)B-KC( DS"@G@@@@ZF
)@@G@@G1-GT4H92^[3H[\I(?G))GL>^[3G(4^[$IL>GD4G(2^[4H[-H0)I-*G*)IT(JL>^[\G0)^@)ZG
)@@G@@@F@@@@GC)IL>I[>GD4G(=^[+H-\GT: 0)^[[H1-H-\G9\I(3H-9 ))HD&^[(H(-G9>IS)^@)ZH
)@@G@@@G@@@@I9(I-*HD,^[-^[&HD?G*)H[-I1>^[-^[=HD3I[?GD<G(!G(,I))G92G(-I->IK)I-*ZI
)@@G@@GD,^@)@I@@@@A)0A@)IL>GT\IL=IS?^[4H[>^@/D-JD9F^[[D[ CD^B0)IT*H95H-=^[-H-3ZJ
)@@G@@H8)GL>^[(H1<IL>GD3G(= 0)@G@@@@E-*G(3G*)GT*GD,G9>IS)^[>G1&G(<I-(I1>H-9^[\ZK
)@@G@@I[4HD!HD'G*)I-*G*)H95I-0I(4 ))@E@@@@GL5I))I-*G(9^@)GD?IT\^[=G($IL-G->^[4ZL
)@@G@@H[>^[3I[>G(=^[\G0)I-*G*)@F@@@@I[2H9<G(3IT\IK,^@)E[2H9<G(3IT\IK)IT0G(>G))ZM
)@@G@@GT-H0)GL>^[(H(0IL\I1>G))@G@@@@GL9^[?H97G(2HD,G8)I-*G*)H90I-(H((JL-I-(H9,ZN
)@@G@@^[0GD2GD!G(4G(2IS)GL5I))GD4^[-@H@@@@H-(HT>H-9^[<H93I))H9&^[$G(,G(2GD4HD,ZO
)@@G@@G8)H--IL$G(2^[<H92IL>GT4HD\H0)G->GT:IS,^@)@I@@@@^DAHD,GD?H-9 ))GC)GT\H(!ZP
)@@G@@G(,I))H9,^[(H10I(4^[(H(-G9>^[?G(,G94H@)HD3^[,G(<G(3IT-IL9 0)@I@@@@DD,^[4ZQ
)@@G@@@]4@@@@@@@@@H[>H92JC)I-*G(2G*)HD3^[,H8)H-(H((I))I-\^[4H[>^[(H10I(4^[(H(-ZR
)@@G@@G9>^[?G(,G94H@)^@)@B@@@@ [7HD4H[(H0)ET^C0)G->G1(H1>G))G1\IL!GD4 C,@H@@@@ZS
)@@G@@D[\I9>I1>IK?^[-H0)HD,I->IL,GD?^[+I(&G1>IK)H(5IT4^[+G*)H(-HD,I--HD,G(=^[&ZT
)@@G@@H92^@)@H@@@@HD!GD$G(3^[7H[(GT*^[3I[-H0)HD,I->IL,GD?^[0GD$G*)GL\I(,G--IL(ZU
)@@G@@G(3 0)^[OH[(IS)^@)@G@@@@HD,I->IL,GD?^[+I(&G1>IK)HD3^[,H97^[3G(4^[-I))A00ZV
)@@G@@^[7H92G-3 ))I-*GD4^[(IS)@J@@@@AK4A@)GT*GD2GD<I->IL3^[[ET#DDD ))H92^@3A00ZW
)@@G@@^[<H[-IL-GT4G(2IS)^[ADD D-^CDOCC,^@)DD!GD$G(3^@)@G@@@@G(8GT>G(=HD,G8)I-*ZX
)@@G@@HD3^[?G(,G94H@)GD,G))G1-H-?HD,G8)I-\I--H-?JC)I9(I-*HD,@I@@@@GC)I[-G9>^[+ZY
)@@G@@H95H1=GD2JC) @4A)8^[7H92G-3 C)I9(H-?^[+G*)GT\H(0GD2G(=^[,H92H(-H-?JC,^@)ZZ
)@@G@@@H@@@@DD&^[(I))HD3^[,G(<G(3IT-IL9^[4H8)H(\I1>^@)GD,^[(H(-G9>^[4H8)I-*G*)AA
)@@G@@HD,I->IL,GD?@L@@@@GL5G1&G(2 ))HD4^[7HD?H))GL>^[4IL5H1<GD4G(=^[4H8)A00^[7AB
)@@G@@H92G-3^[+I(4^[ID8)G(2IL\IK)I9(H-?^[+G*)H1\I->G),@I@@@@DD&^[4H[>^[5IT>IK)AC
)@@G@@I9(IT*G(3^[4H8)I(3G*)I-*G*)I[2H9<G(3IT\IK)H9,^[&HD?G(3^[7HD4H@)^@)@G@@@@AD
)@@G@@IL>GT\IL=IS)G92G(-I->IK)I-*GD,^@6A@)I9\IL=IS)HD,^[?G(,G94H@?^[*G*)G-\G(3AE
)@@G@@@B@@@@IT\^[7HD4H@)I-*HD3^[5H1=G(2IT4GD,G-(H1$ 0)@A@@@@ 1OD9#^@$E--GL?G*)AF
)@@G@@H9&^[#H9,I->H14IS$_____"G(2G(=^[7H[(GT*^@)@G@@@@G->I->IL!HD,G*)I-*G*)GT?AG
)@@G@@H93G(,G(3IS)H9&^[4H[>^[0IL\G-5GT4^[4H8)I-*GD4^@)@G@@@@H90I-(H(5H*)IT>I),AH
)@@G@@^@)DD,^[&GD<I)?^[4H[>^[=H97H1=GD4G(2^[-H-$H92HD4H[!^@)@F@@@@G-\G(3^[-^[6AI
)@@G@@G(2JC)G9\H9=^[%H9+^[-I))GD0I[2H98HD!GD4HD,G8)I-*@@@@@@@@@S**@]@@@@@@E@@@AJ
)@@G@@@@@@@[@]@@@@@@G@@@@@@@@@@]@@@@@@P@@@@@@@@@@]@@@@@@R@@@@@@@@@@]@@@@@@U@@@AK
)@@G@@@@@@@]@]@@@@@@V@@@@@@@@]@]@@@@@@F@@@@@@@@@@]@@@@@@L@@@@@X8)@@]@@@@@@M@@@AL
)@@G@@@@&:@@@]@@@@@@N@@@@@@WC@@]@@@@@@T@@@@@@@@@@]@@@@@@,@@@@@@@@@@]@@@@@@W@@@AM
)@@G@@@@@@@@@]@@@@@@8@@@@@@@@@@]@@@@@@9@@@@@@@@@@]@@@@@@'@@@@@@@@@@]@@@@@@;@@@AN
)@@G@@@@@@@@@]@@@@@@/@@@@@@@@@@]@@@@@@.@@@@@@@@@@]@@@@@@"@@@@@@@@@@]@@@@@@_@@@AO
)@@G@@@@@@@@@E@@@@@@O@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AP
)@@G@@@U@@@@@@Q@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AR
)@@G@@@@@@@@@@@@@@@@@@@@@U@@@@@@S@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@]@@@@@@X@@@@@@@@[@]@@@@@@Z@@@@@@@@[AU
)@@G@@@]@@@@@@Y@@@@@@@@@@]@@@@@@)@@@@@@@@@@]@@@@@@-@@@@@@@@@@]@@@@@@\@@@@@@@@@AV
)@@G@@@]@@@@@@3@@@@@Z(@@@]@@@@@@4@@@@@Q6)@@]@@@@@@5@@@@@@@@@@]@@@@@@6@@@@@#-@@AW
)@@G@@@]@@@@@@7@@@@@#-@@@]@@@@@@H@@@@@#-@@@]@@@@@@I@@@@@#-@@@]@@@@@@0@@@@@#-@@AX
)@@G@@@]@@@@@@1@@@@@#-@@@]@@@@@@+@@@@@@@@@@]@@@@@@<@@@@@@@@@@]@@@@@@=@@@@@@@@[AY
)@@G@@@]@@@@@@>@@@@@@@@[@]@@@@@@&@@@@@@@@[@]@@@@@@$@@@@@@@@@@]@@@@@@*@@@@@@@@[AZ
)@@G@@@]@@@@@@2@@@@@@@@@@]@@@@@@(@@@@@@@@@@]@@@@@@%@@@@@@@@@@]@@@@@@!@@@@@@@@@BA
)@@G@@@[@@@@@@B@@@@[@@@@@@[@@@@[@@@@@@#@@@@[@@@@@@[@@@_____"@@@@@@@@@@@@@@@@@@BB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BC
)@@G@@C@@@@@@@@@@@@@@@@G@@@@#^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BU
)@@G@@*[S@@[*SDFF*@G@@@@^[PH1(I1>IL3HD4JC)H9&^[HGD2JD?GD,G))C-\I9,G--I->IK) *)BV
)@@G@@D->I1>H))AS,A@)^@)@^@@@@ADDD1OELJC-PCTODDJD0'^@)@]@@@@IT0GD<G*)AC)@B@@@@BW
)@@G@@^@)^@)^@)E-*G*)C[^D9RD0)I[2H9<G(3IT\IK)^@)@G@@@@^[(IS)I[2HD!GD2HD?JC)GC)BX
)@@G@@IT9H(+H9?HD<^[<H9!I[-IL-I-\IK,^@)DD4^[(IS)I(3G(=@J@@@@^[4H8)GT\H(0GD2G*)BY
)@@G@@IT9H(+H9?HD<^[4G(8I-3^@*I(3I(-H-?JC?^[+I(4^[,H94^[?HD!HD4G(=^[4H8?^[NC-ABZ
)@@G@@@F@@@@^[&H92H(-I)(^[-G14G(2^[7H[(GT*^[(I))GT-H0)I[2H9=I(<G*)GC)ETDEK)^@)CA
)@@G@@@H@@@@^[<H92IL>GT4HD\H0)G->GT:^[<GD0GD+H->^[\G0)I-2GD,IT&H92H((H1$^[\H1>CB
)@@G@@^[4G(8I))^@)@^@@@@^[(H14H8)I-*G*)H94H[>IK,@G@@@@^[@C-JE9I^[7HD?H))GD<GT>CC
)@@G@@I[4^[0IL\G92GD!^[&HD?G(3 ))G--I--^[&HD?G(3^[\IK)@E@@@@^[0IL\G92GD!^[&HD?CD
)@@G@@G*)G(?G(!G(,I-3^[-IS)HD,I[5I))GD,G))GT-H0)@F@@@@^[-H-3H8)H(-HT>^[<G(2I--CE
)@@G@@HD,^[3I(0G(2G1(GT(GD?^[<H9!I[-IL(IT\H13^@)@H@@@@^[2G($GD2G-(H1$^[4H[>^[4CF
)@@G@@GD+H->^[\G0)GT\H14G(,I-3^[\G0)I[2H9$IL-H*)G1(H->IS,^@)@D@@@@^@)^@)^@)E-*CG
)@@G@@G*)I[2H9<G(3IT\IK)HD3^[(H16GD?I(-GL?G*)HD,@F@@@@^[?GD2G9>^[-I[0H-(GT-I-(CH
)@@G@@H9,IS)I9*G(2G*)H(-H19^[0IL\G92GD!H(>IL3^@)@K@@@@^[!GD9^[+G*)HD,I->IL-GT4CI
)@@G@@HD,G8)H9,^[4H[>^[3GD!G*)GL-IT>^[3JD!GL\H-(GT3 0)^@)DD4^[(IS)GD?IT\^[\G0)CJ
)@@G@@@H@@@@^[$IL>GD4^[5IT>^[7H[>H0)I-*G*)I(3G(2^[7HD3H[>IS)H92^[(IS)IL>ID5HD2CK
)@@G@@G(=^[4H8)^@)@I@@@@^[!GD(H14GD(H0)GD,G))I(0G--I->^[<I(2IL>H14^[3JD!GL\H-(CL
)@@G@@GT3^[7HD4H@)I-*G*)IT4GD,G--IL=@L@@@@^[3JD3I->H*)ETDEK)H(>GT*GD,HD3H(3 0)CM
)@@G@@^[AHD,GD?H-9 ))I-*G*)G-\I9,G--I->IK)HD3^[-H-3H8)^[6GD?I(-GL?G*)^@)@O@@@@CN
)@@G@@^[(H0)I[2H9$IL-H*)I->IT4HD,G8)GD,G))G->GL5G9$HD,G8)I-*IL\I($H@)HD4IS)GD+CO
)@@G@@HD?HD4JC)I-\^[<H9!I[-IL>^[<H92IL>IT0H9,G-(H1$^@)@^@@@@^[\I(4I[5I))IT4IL>CP
)@@G@@GD!IS,@L@@@@^@)^@)^@)DD,^[$G(,G(2GD? ))I-*G(2G*)GD2G*)I-7H8)H(-HD,^[!H9=CQ
)@@G@@G(3^[\G0)G-\I9,G--I->IK)H90G(2GD4HD\H0?^@)@H@@@@^[4H[\I($H@?^[5H1=G(2^[\CR
)@@G@@I[4HD\H0)GT\H14IL\H)?^[\H1>^[!GD9^[<H[-H1$G*)I-*G*)^@)@L@@@@^[<H[-IL-GT4CS
)@@G@@G(2HD3I-(GT3^[\G0)I-*G*)G(8I[>GT4G(=^[(H10I(4^[\IK)H95I-0I(4^[<H9,IT(G->CT
)@@G@@IL-GL?JC,^@)E-*G*)@H@@@@^[&HD2IT4^[!H9=G*)H(-JC)GL>^[<GD?H->G))G(?G(!G(,CU
)@@G@@I))H92^[=GD4GC)G1(H->^[!H9=G*,@G@@@@^[OH[(IS)GT\H(0GD2G(3^[-^[3HD,G9?G*)CV
)@@G@@IT4IL>GD!^[\G0)IT9H(+H9?HD<^[(H10I(4@G@@@@^[7HD4H@)GC)IT>GT\H1=^[3I-2G(-CW
)@@G@@H*)I-\^[=G(4G(2H((H1>^[=HD&G1>IL>H1<G(3 0)@H@@@@^[OH[\I($H@)I-*G*)H95I-0CX
)@@G@@I(4^[(IS)HD,^[NDDM^[4JD0G*)GT\IL2G(<I-(H9,^[(H(-G9>IS?@E@@@@^[(I-3^[!G(-CY
)@@G@@H1(H1$^[(IS)^[<H->GD2BS)^[-^[5IT>IK)H1>G(=IS)^@)@G@@@@^[,H8)IT0G(<HD-H))CZ
)@@G@@I-2GD(H1(H1$^[(H0)H92G->IK)I-\^[=G(<HD0H[>IK)HD4 0)^@)@G@@@@^[OH[>^[3G(<DA
)@@G@@H9,G))H(\G->^[\G0)G-\I9,G--I->^[(IS)GT-H-?G(=^[0IL\G92GD!^@)@E@@@@^[&HD?DB
)@@G@@G*)H(\G-> 0)^[DH0)I-*HD3^[<GD3G*?^[4I9\^[=HD3I-(H1<I))@G@@@@^[0IL\G92GD!DC
)@@G@@^[&HD?G(3^[-IL>^[3I[>GT(G1(G(=^[-H1=^[4H[>^[=H97H1=GD4G(2 ))@H@@@@^[-G9-DD
)@@G@@HD,^[5H1=G(2^[\I[4HD\H0)GT\H14IL\H)?^[<H9!I[-IL>IS)GT\IL2G(3I[\H1=HD,G8)DE
)@@G@@@G@@@@^[>H->H(>H14IS)H9&^[+H94H@)G1(H->IS,^@)DD,^[4H[>^[3HD!I[?G(3I))GD,DF
)@@G@@G))^@)@E@@@@^[=G(&GD5H-4^[<GD3G*?^@)G(-GT*^[3JD!GL\H-(GS)G(?G(!G(,I))H9&DG
)@@G@@@F@@@@^[\H1>^[0IL\G92GD!^[&HD?G*)I9(H-?^[+G*)GT\H(0GD2G(=^[7HD4H@)GC)^@)DH
)@@G@@@G@@@@^[<H92IL>IT0H9,G-(H1$^[>H->H(>H14^[\G0)I-*G*)IT-H(>^[,GD!G*)HD,^[4DI
)@@G@@H[>^@)@A@@@@^[\I[0H93HD,G8)I[2H9$IL-H*)G1(H-> 0)@G@@@@^@)^@)^@)D15H(>IL\DJ
)@@G@@I(3^[\I[4HD\H13^[-IL>^[-I1-HD?GD+H->^[4H8)GD?H-\I8)^@)@G@@@@^[4H[>^[5IT>DK
)@@G@@IK)G92G(-I->IK)G1?G(8HD+HD?HD4JC)HD,^[5IT(H1$^[@C-JE9I 0)^@)@D@@@@^[JH1>DL
)@@G@@^[!GD9^[<H9!I[-IL>^[4H[>^[<H9,I->H14IS)H9&^[\H1>@I@@@@^[0IL\G92GD!^[&HD?DM
)@@G@@G*$IS)I--GL?G*)H9&^[<H9,I->H14IS) [OD9# C)GD$GD(H13I))GD,H94H[>IK;@G@@@@DN
)@@G@@^[0IL\G-5GT>^[-^[KCTA^[\IK)E-#C0) [0G(2H(-H1>H14^[\IK)I->H(0H92GD2JC)^@)DO
)@@G@@@L@@@@^[<H92IL>GT4HD\H0)G1(H-> C)I[2H9$IL-H*)G1(H-> ))G--I--^[&HD?G*?^[\DP
)@@G@@IK)I[2H9$IL-H*)G1(H->^[>H->H(>H14BS)@J@@@@^[?HD!HD4^[4H[>^[=H97H1=GD4G*)DQ
)@@G@@I-\^[-^[<G(2I--HD,^[-IL>GC)H9&^[4H[>^[(H10I(4^[(H(-G9>BS)^@)@G@@@@^[(G9,DR
)@@G@@H92G*)H(5H-4HD0H->^[+H--H1:IS;^[0IL\G-5GT>^[>J[0GD,G->G))E[MDDIE)=@H@@@@DS
)@@G@@^[?HD3I-(H1$IS;^[=H97H1=GD4G*)H1\H0!IT4GD,G--IL=^[NC-A^[4JD0G*)G1(H->IS;DT
)@@G@@^[-H1=@I@@@@^[<H9,I-2H9?^[\I(4I[5I))H90I-(H((JL-I-(H9,^[0GD2GD!G(4G(2IS,DU
)@@G@@^@)DD,^[-G-=HD4HD\H0?^@)@H@@@@^[4H[>^[(H10I(4^[<H[-IL-GT4G(2^[!H9=G*)H9&DV
)@@G@@^[>GD<H@)IT9H(+H9?HD<^@*I9*G(4H[>IK)@I@@@@^[ADD D-^CDOCC)H92^[[ET#DDD C)DW
)@@G@@HD3^[>G1&G(<I-(I1>H-9^[4IL-H13I[-IL>H14BS)HD&^[!HD8G(=@H@@@@^[!H9=G*)IL>DX
)@@G@@GT\IL=IS)H9<GT5IK?^[ADD D-^CDOCC)^[(IS)I-*G*)GT*H93G(,^[!G(=HD5H*)@^@@@@DY
)@@G@@^[&H92^[<H9!I[-IL(IT\H0,@G@@@@^@)^@)^@)DD,^[3I(!H(-IL9 ))I-*G*)C[^D9RD0)DZ
)@@G@@I[2H9<G(3IT\IK)GT-H0)I[2H96G*)@F@@@@^[-H0)HD,G-(IT0G(,IT-GL?G*)I-\H9?^[(EA
)@@G@@H0)H(-H19^[3HD4I(-I-(H9,IS,^@)@C@@@@^[^HD3GT>IL,HD,G8)G-(G1&G(2G(,GT>IS)EB
)@@G@@GL>I-7G(>H0)@I@@@@^[4G(8I-3 ))H(-HD,I--HD,HD,G8)I[2H9$IL-H(3^@*I[>IL*GD0EC
)@@G@@IS)G1\IK)G-(IT4IL(GL5I-(H9,^@)@K@@@@^[4H8)H94H[>IK)IT(I->IS( ))H92^[=G(+ED
)@@G@@I($G9(H1$^[+JC)GT\H(0GD2HD3H9,^[\G0)I->IT4^[2I(,^[\I(4I[5I-3@N@@@@^[-G9-EE
)@@G@@HD,IT4^[-^[<H92IL>GT4^[+GD3G*'^[4H[>IT>^[-IL>^[\H1?JC)GC)G1>I8)H9&^[(I-3EF
)@@G@@^[6GD2HD>G))GT-I[-GL(H-(I-(G(3 0)^@)@A@@@@ADKELJCT ETND9M^[#CDGD))CT[EL^EG
)@@G@@BK)^@)@]@@@@IT0GD<G*)AC)@F@@@@GT>H14G(2^[@C-JE9I )/D9KE-DD9IES"^@)B-NE[ EH
)@@G@@CS1B0? 0, 0?B-NE[ CS5B0)@]@@@@IT0GD<G*)AC)@#@@@@ALJE[ODDJD1NBK)^@)@]@@@@EI
)@@G@@GT\H-5H(,^@5@]@@@@IT0GD<G*)AC)@]@@@@^@$CC$^@!^@)@J@@@@^@)^@)^@)^[(IS)I(3EJ
)@@G@@G(=^[(H0)I[2H9$IL-H*)G1(H->^[!H9=G*,^@)DD4^[&H92GT>IS)GC)GT\H(0GD2HD3H9,EK
)@@G@@@H@@@@^@)^@)H9&^[OD9#IS)G1\IK)I-*G*)H9<GT5IL2G(,GT>^[\G0)CD]ETJD-PE- ^[>EL
)@@G@@H->H(>H14IS,@K@@@@^@)^@)C-(G1&G(2G(,GT>IS)GL>I-7G(>H0)I-*G*)HD,G1\IL!GD4EM
)@@G@@HD\H0)GT\H-?G(<I->G))G12H9!^[>GD<H@)E-JCS)@L@@@@^@)^@)GT\H1<G(2H1(H1$^[-EN
)@@G@@GL3H9?I(4G*)G(?G(!G(,I-3^[7HD?H))GL>^[3I(!H(-IL(JL>G))HD,^[4H[>^[KELDD1OEO
)@@G@@^))^@)@I@@@@^@)^@)H95I-0I(4 0) [-H-3H8)IT>G*)^9^^8?^9J^8?^9M^8?^9N^8)H90EP
)@@G@@I-(H9,IS)IL>G9-IL=HD,G8)@ @@@@^@)^@)E-JCS)IT5H(!GD2HD>IS(^@)@]@@@@IT0GD<EQ
)@@G@@G*)AC)@]@@@@^@$CK$^@!^@)@J@@@@^@)^@)^@)^[(IS)I(3G(=^[4H8)GT\H(0IL>IT3^[\ER
)@@G@@I(4^[-H-?^[\GT<I(2IL>H1<G(3^[\G0)H(5H-4HD0H->^@)@K@@@@^@)^@)GL?GD,HT3^[+ES
)@@G@@G(&H92G*)IL>GT\IL=IS)GD2G*)GT\H(0GD2G(= 0) [-H-3H8)IT>G*)^9L^8)H90I-(H9,ET
)@@G@@ C)^@)@]@@@@IT0GD<G*)AC)@]@@@@^@$C)$^@!^@)@K@@@@^@)^@)^@)^[(IS)I(3G(=^[7EU
)@@G@@HD4H@)I-*G*)^9[^8?^9J^8?^9M^8?^9N^8)H90I-(H9,IS)I-\^[-GT1I((IL>^[OD9#^@)EV
)@@G@@@L@@@@^@)^@)IT5H(!GD2HD>IS)H9&^[0IL\G92GD!^[&HD?G(3 0)^[DI))G1\IL<G(3^[4EW
)@@G@@H[>^[<H9,IT(G->IL-I-(H9,^[\G0)I-*G*)@G@@@@^@)^@)I-(H(> (-H1= (=GD4G*)H9&EX
)@@G@@^[<IL>GD4HD\H0)HD,^[4H[>^[<H9!I[-IL(IT\H0,@]@@@@IT0GD<G*)AC)@]@@@@^@$C*$EY
)@@G@@^@!^@)@I@@@@^@)^@)^@)^[&H92GT>IS)H95I-0I(4^[&H92^[>I1>IL9^[0GD(IK)H9&^@)EZ
)@@G@@HD,I[5I))IT>ID5G(,GT>IS)@I@@@@^@)^@)G-\I9,G--I->G),^@*E-*G*)H((H1(H(5H*)FA
)@@G@@H95I-0I(4^[(IS)GC) L D- D( D1O^[<GD2G))^@)@M@@@@^@)^@)H92^[<H92IL>IT0H9,FB
)@@G@@G-(H1$^[,I(?H))G(,I-2JC)HD,^[4H[>^[\I(4I[5I))I[2H9$IL-H*)G1(H-> ))G->I[>FC
)@@G@@H1=HD,G8)^@)@C@@@@^@)^@)H9,^[4H[>^[!H9=G*)H9&^[=H97H1=GD4G*, C)^@)@]@@@@FD
)@@G@@IT0GD<G*)AC)@]@@@@^@$D)$^@!^@)@J@@@@^@)^@)^@)^[0IL\I1(G->IS)GD,^[>J[0GD,FE
)@@G@@G->G))E[MDDIE)=^[?HD3I-(H1$^[\G0)I-*G*)G-\I9,G--I-> 0)@M@@@@^@)^@)DD4^[$FF
)@@G@@HD6G(3^[=G(?G(4G(=^[(H(-G9>IS)GD,G))H-(H1>^[,I(!GL>IL3^[\G0)GD?H))GT\IL2FG
)@@G@@G(<I-(H9,IS)I[2HD,I->G))@F@@@@^@)^@)GT\IL2G(3I[\H1=HD,G8)I-\^[4H[>HD2^[2FH
)@@G@@G(3I[>GT4HD6G*)G1(H->IS,@]@@@@IT0GD<G*)AC)@]@@@@^@$D0$^@!^@)@K@@@@^@)^@)FI
)@@G@@^@)^[(IS)I(3G(=^[4H8)HD,H[(GL(I))E[MDDIE)=^[\G0)G-\I9,G--I-> 0)^[DG0)I-*FJ
)@@G@@G*)^9I^8)H90I-(H9,@L@@@@^@)^@)HD3^[3I[>GT(G1(G(=^[-H1=^[4H[>IL>^[(IS)H1\FK
)@@G@@^@/ETKC(#AS"^@*H92^[\I(4I[5I))G1(H-> C?^[,H8)GD<I-5GD?@L@@@@^@)^@)IT9H(+FL
)@@G@@H9?HD<^[=H97H1=GD4G*)HD3^[=H9,G*,^@)E-JCS)IT5H(!GD2HD>IS)GD2G*)GD?H-\I9>FM
)@@G@@G),^@*IT>G*)^9^^8?@C@@@@^@)^@)^9[^8?^9J^8?^9M^8)GD,G))^9N^8)H90I-(H9,IS(FN
)@@G@@@]@@@@IT0GD<G*)AC)@]@@@@^@$D8$^@!^@)@J@@@@^@)^@)^@)^[(IS)I(3G(=^[(H0)I[2FO
)@@G@@H9$IL-H*)G1(H->^[!H9=G*,^@)DD4^[&H92GT>IS)GC)GT\H(0GD2HD3H9,@H@@@@^@)^@)FP
)@@G@@H9&^[OD9#IS)G1\IK)I-*G*)H9<GT5IL2G(,GT>^[\G0)D9HD1DCLPES)G(?G(!G(,I-3 0)FQ
)@@G@@@ @@@@^@)^@) [3G(>^@$CC$^[\I[4HD\H0(@]@@@@IT0GD<G*)AC)@]@@@@^@$E@$^@!^@)FR
)@@G@@@M@@@@^@)^@)^@)^[(IS)I(3G(=^[4H8)GT2G(-I->^[-^[0IL\G92GD!^[&HD?G*)E[#C0)FS
)@@G@@H92^@)E-#C0) [3G(>^@$E)$^[\I[4HD\H0( 0)^@)@L@@@@^@)^@)DD&^[4H[>^@$E@$^[\FT
)@@G@@I[4HD\H0)HD3^[3I[>GT(G1(G(= ))GC)I[2H9$IL-H*)G1(H->^[!I(3I))GL>^[$HD6G(,FU
)@@G@@^[(H0)@M@@@@^@)^@)B-NE[ CS3B0,^@)DD4^[!GD9^[+G*)I(3G(=^[(H0)G((I-*G(2^[>FV
)@@G@@H->H(>H14^[!H9=G*)H92^[0IL\G92GD!^[&HD?G*)H(\G->@J@@@@^@)^@)G-\I9,G--I->FW
)@@G@@IS)I[2H96HD=HD,G8)I-*G(2G*)HD3^[-H0)G(?G(!G(,I))H1-H(>^[?H9$HD<GD?H-9^@)FX
)@@G@@@J@@@@^@)^@)GD6GD(H--GL?G*)G1\IK)GD,JC)H95I-0I(4^[>H->H(>H14^@*IT>G*)E-CFY
)@@G@@C*)^9K^8)D9KE-DD9I^[&H92@C@@@@^@)^@)G15IL4H[>IK)G(8I[?GD,GD4HD\H0( 0)^[DFZ
)@@G@@G0)^@)@L@@@@^@)^@)H9,G*)GD4I->H(0I-3^[4H8)G-\I9,G--I->^[4I9\^[=GD4GC)G1(GA
)@@G@@H->IS)I(,G->IK)I-*G*)^9K^8)H90I-(H9, ))GD,@I@@@@^@)^@)G(2IL\IK)I9(H-?^[+GB
)@@G@@G*)H1\I->G))IT(H1<G*)I-*G(2G*)HD3^[,H8)H-\G9(GT-H))H1-H(>^@)@F@@@@^@)^@)GC
)@@G@@GD6GD(H--GL?G*)I-\^[$HD6G*)I-\^[4H[>^[\I(4I[5I))G(?G(!G(,I),@]@@@@IT0GD<GD
)@@G@@G*)AC)@]@@@@^@$EC$^@!^@)@M@@@@^@)^@)^@)^[(IS)I(3G(=^[(H0)GT\H1%I(,GT4HD\GE
)@@G@@H0)I9(I-*^[4H[>^@$CK$^[\I[4HD\H0)I-\^[&H92GT>^[<H9,IT(G->IL-I-(H9,@L@@@@GF
)@@G@@^@)^@)H9&^[!I(?I-(I[?G*)GL?GD,HT3^[+G(4I9>G(,^[=G(?HD!HD4G(=^[<H[-IL-GT4GG
)@@G@@G(2^[3I-2HD,G93^@*I-*GD4^[(IS?@L@@@@^@)^@)I-*H93G*)IT4IL(H1$IS)G->H-(H((GH
)@@G@@I->G))GL9^[4H[>^@/EDPD9OC*)CTCCDMB0)H92^[+JC)I-*G*)G->G1-I(?I)?^@)@ @@@@GI
)@@G@@^@)^@)I-*G*)GD0H93I-2H90H[> C,@]@@@@IT0GD<G*)AC)@]@@@@^@$EK$^@!^@)@J@@@@GJ
)@@G@@^@)^@)^@)^[(IS)I(3G(=^[(H0)I[2H9$IL-H*)G1(H->^[!H9=G*,^@)DD4^[&H92GT>IS)GK
)@@G@@GC)GT\H(0GD2HD3H9,@G@@@@^@)^@)H9&^[OD9#IS)G1\IK)I-*G*)H9<GT5IL2G(,GT>^[\GL
)@@G@@G0)EL D-JCT[E-[CLGC*)^@)@C@@@@^@)^@)G(?G(!G(,I-3 0) [3G(>^@$CC$^[\I[4HD\GM
)@@G@@H0(^@)@]@@@@IT0GD<G*)AC)@]@@@@^@$ES$^@!^@)@K@@@@^@)^@)^@)^[(IS)I(3G(=^[(GN
)@@G@@H0)I[2H9$IL-H*)G1(H->^[!H9=G*,^@)DD4^[&H92GT>IS)GC)^[<H9!I[-IL(IT\H0)^@)GO
)@@G@@@F@@@@^@)^@)H9&^[OD9#IS)G1\IK)I-*G*)H9<GT5IL2G(,GT>^[\G0)ETTD(]D9GDD#^@)GP
)@@G@@@C@@@@^@)^@)G(?G(!G(,I-3 0) [3G(>^@$CC$^[\I[4HD\H0(^@)@]@@@@IT0GD<G*)AC)GQ
)@@G@@@]@@@@^@$E)$^@!^@)@K@@@@^@)^@)^@)^[(IS)I(3G(=^[4H8)G-\I9,G--I->^[KCTA^[>GR
)@@G@@H->H(>H14IS?^[=GD4GC)G1(H->IS)H92^[0IL\G92GD!^@)@J@@@@^@)^@)G1(H->IS)I-\GS
)@@G@@^[0IL\G-5GT>^[4H[>^[-I[0IL\I[2HD-I->^[OCTA 0) [3G(>^@$E@$^[\I[4HD\H0(^@)GT
)@@G@@@]@@@@IT0GD<G*)AC)@]@@@@^@$E0$^@!^@)@J@@@@^@)^@)^@)^[(IS)I(3G(=^[(H0)GT\GU
)@@G@@H1%I(,GT4HD\H0)I9(I-*^[4H[>^@$D)$^[\I[4HD\H0)I-\^[<IL>GD4G*)@G@@@@^@)^@)GV
)@@G@@GL-I-<H@)H-(IT4HD,G93^@*AC3AK)GT\H-5H(,IS(^[&IL\H*)G->H(-H1= 0)^@)@]@@@@GW
)@@G@@IT0GD<G*)AC)@]@@@@^@$F@$^@!^@)@L@@@@^@)^@)^@)^[(IS)I(3G(=^[4H8)G1\IL<G*)GX
)@@G@@I-*G*)I[2H9<G(3IT\IK)I-\^[(G9,H92G*)GD,JC)G(?G(!G(,I))GT9GT?G*)^@)@L@@@@GY
)@@G@@^@)^@)HD,G1\IL!GD4HD\H0,^@)E-*HD3^[(IS)I[2H96HD=G(=^[-IS)GC)H--IT4^[2G(3GZ
)@@G@@H92I))HD,^[-H0)GD4I->H(0I))I-\@N@@@@^@)^@)G-\I9,G--I->^[,H9, (3I--H1=GD2HA
)@@G@@G))ET^C0)G1\IL!GD4^[&HD?G(3 0) [IH94G*'^[@C-JE9I^[7HD?H))GD5I-\H(-I-(GT-HB
)@@G@@H-?JC)@L@@@@^@)^@)IL>GT\G9,HD'G*)E[MDDIE)= ))C1JELOEL[D0)GD,G))E[#DDJES)HC
)@@G@@G1(H->IS)GD,G))I[2H9<G(3IS)GT\H14IL\H))^@)@C@@@@^@)^@)HD,G1\IL!GD4HD\H0)HD
)@@G@@GD<GT\IL=HD,G9?JC, C)^@)@]@@@@IT0GD<G*)AC)@]@@@@^@$FK$^@!^@)@J@@@@^@)^@)HE
)@@G@@^@)^[&H92GT>IS)GC)G-\I9,G--I->^[\G0)^[>I1>IL9^[>H->H(>H14^[\IK)E[#C0)IT>HF
)@@G@@ID5G(,GT>^@)@N@@@@^@)^@)G(,GT\I(,I->IL>G))HD,^[>HD4H[>IK)HD,I[5I))IT4IL>HG
)@@G@@GD! 0)^[DG0)I-*G*)G(?G(!G(,I))H92^[3G(1I(>H1<G*)H[-IS)H1\^@)@M@@@@^@)^@)HH
)@@G@@GT\I(,I->IL0GD2I))HD,^[4H[>^[\I[0H93HD,G8)IT4IL>GD! ))HD4^[(IS)G-\I9,G--HI
)@@G@@I->G))GD$GD(H13I))GC)H15H-?^@)@A@@@@^@)^@)G(?G(!G(,I))H92^[3G(1I(>H1<G*,HJ
)@@G@@@]@@@@IT0GD<G*)AC)@^@@@@ALNE[ CS)C1DC(GC-NBK)^@)@]@@@@IT0GD<G*)AC)@#@@@@HK
)@@G@@^@/ETKC(#AC"^@!^@)@G@@@@A@)^@)GT-H0)GL>^[-^[=GD4GC)G1(H-> ))I[2H9$IL-H*)HL
)@@G@@G1(H->^[\IK)I[2H9$IL-H*)@H@@@@^@)^@)G1(H->^[>H->H(>H14 0)^[DG0)H1\^[&HD?HM
)@@G@@G*)H1-H(>^[(IS)G9(I1>H0?^[OE[A^))HD3@K@@@@^@)^@)GD3IT5H(>G),^@)B-NE[ CS1HN
)@@G@@B0)HD3^[4H[>^[>H->H(>H14^[\IK)G1(H->^[4H8)I9*HD<H@)I-*G*)H95I-0I(4@K@@@@HO
)@@G@@^@)^@)GT\IL2G(<I-(H9,IS)GD2G*)I-\^[+G*)GD0I[?HD>G)?^[(H0)H92G->IK)I-\^[<HP
)@@G@@H[-H1$G*)HD4^[(H14H8)^@)@#@@@@^@)^@)B-NE[ CS2B0,@]@@@@IT0GD<G*)AC)@#@@@@HQ
)@@G@@^@/ETKC(#AK"^@!^@)@F@@@@A@)^@)H(-JC)GD?IT\^[+G*)GC)G--I--^[&HD?G*?^[0IL\HR
)@@G@@G92GD!^[&HD?G*)H92@J@@@@^@)^@)I[2H9$IL-H*)G1(H->^[>H->H(>H14 0)^[DG0)H1\HS
)@@G@@^[&HD?G*)H1-H(>^[(IS)G9(I1>H0?^[OE[A^))^@)@I@@@@^@)^@)HD3^[-IT3I(!G(= 0)HT
)@@G@@^[DG0)GD,^[>H->H(>H14^[,GD!G*)HD3^[$HD6G(,^[(H0)B-NE[ CS1B0)@J@@@@^@)^@)HU
)@@G@@GD,G))H1\H1>^[(IS)G9(I1>H0)HD,^@/ETKC(#AK" ))I-*G*)H1-H(>^[&IL\H*)B-NE[ HV
)@@G@@CS1B0)HD3^@)@J@@@@^@)^@)GD3IT5H(>G),^@)DD&^[+H94H@)B-NE[ CS1B0)GD,G))B-NHW
)@@G@@E[ CS2B0)G->IT(G9,GD4G*)I[2H9$IL-H*)@I@@@@^@)^@)G1(H->IS?^[-^[0IL\G92GD!HX
)@@G@@^[&HD?G*)H(\G->^[=H97H1=GD4G*)HD3^[(H1(I-(GD4G(= 0)^@)@K@@@@^@)^@)E[2H9$HY
)@@G@@IL-H*)G1(H->^[>H->H(>H14IS)H(-JC)GL>^[=H97H1=GD4G(=^[-G9-HD,IT4^[4G(8I))HZ
)@@G@@G1(H->IS,^@)@]@@@@IT0GD<G*)AC)@#@@@@^@/ETKC(#AS"^@!^@)@E@@@@A@)^@)HD3^[4IA
)@@G@@H[>^[\I(4I[5I))G1(H->^[&HD>H-= 0)^[DG0)G(!I[4JC?@I@@@@^@)^@)HD4^[(IS)GD3IB
)@@G@@IT5H(>G))H1\^[\I(4I[5I))IT4IL>GD!^[(IS)G->IT(IL>G),^@)DD&^[(I))^@)@H@@@@IC
)@@G@@^@)^@)G(8HD3I-3 ))HD4^[!GD9^[-H-3H8)GL>^[-^[=GD4GC)G1(H-> ))I[2H9$IL-H*)ID
)@@G@@G1(H->@J@@@@^@)^@)G(?G(!G(,I))H92^[0IL\G92GD!^[&HD?G*,^@)DD& ))H[\I9>I1>IE
)@@G@@IK?^[(I))HD3^[-^[0IL\G92GD!^@)@L@@@@^@)^@)G1(H-> ))I-*G*)^9K^8)H90I-(H9,IF
)@@G@@^[!I(3I))GD?IT\^[+G*)I[2G(3G(,I),^@)E-*HD3^[(IS)H1>GT>IT3GD2JC)I-\@M@@@@IG
)@@G@@^@)^@)HD,G-(GT-I->^[=G(&GD5H-4^[>H->H(>H14^[,GD!G(3 0)CD,^[>IL2H92^[7HD?IH
)@@G@@H))GL>^[,H94G(=^[\I-*G(2I9(IT> 0)^@)@]@@@@IT0GD<G*)AC)@#@@@@^@/ETKC(#A)"II
)@@G@@^@!^@)@ @@@@A@)^@)H[-IS)I-*G*)G1\IL!GD4BK)@H@@@@GT>H14G(2^@/CTJD)1B0\B-#IJ
)@@G@@D9GD0" 8/EDPD9OC*)CTCCDMB0,B-#D9GAC" 8/CTJD-IB0) *)^@)@G@@@@^@)^@)CD?H))IK
)@@G@@G1(G(?G-3^[-IL>^[\I[4HD\H1-H),^@)E-*G*)^[2G(=I(,G--H1<JC)^@)@I@@@@^@)^@)IL
)@@G@@HD3^[0IL\I1(G->G))GD3^[-H0)GD(G))I-\^[4H[>^[5IT>IK?^[4H[>^@/EDPD9OC*)CTCIM
)@@G@@CDMB0)@I@@@@^@)^@)HD3^[&H92GT>G))I-\^[4H[>^[7IL(I->^[:G(9^[&HD>H-=^[4H8)IN
)@@G@@GD?H-\I8)HD,I[5I))H9&^@)@H@@@@^@)^@)IT0G(<HD-H))GT*GD2GD<I->IL3 0)^[DG0)IO
)@@G@@GL\I-*^[&HD?G(,GD!G*!IL>GD= (:G(9^@)@H@@@@^@)^@)GD,G))G(?G(!G(,I)!I1>IL3IP
)@@G@@HD\H0!H1-H(>^[<H9!GL(H1-I-(H9,IS)GD2G*)G9(I1>H0?@H@@@@^@)^@)I-*G*)G(?G(!IQ
)@@G@@G(,I)!I1>IL3HD\H0!H1-H(>^[0GD2GD!G(4G(2IS)GD2G*)I(3G(= 0)^@)@]@@@@GT\H-5IR
)@@G@@H(,^@8@]@@@@IT0GD<G*)AC)@ @@@@^@)^@)B-#D9GAC" 8/CTJD-IB0) *)@G@@@@A@)^@)IS
)@@G@@^@)^[(IS)I-*G*)^9RDDIC-JE8$^[\I[4HD\H0)IT0G(<HD&HD<GD4HD\H0,^@)DD4@H@@@@IT
)@@G@@^@)^@)^@)^[-H-?H97IS)I-*G*)I(3G(2^[4H8)G-\I9,G--I->^[\I1>IK)IT0G(<HD&HD>IU
)@@G@@G))^@)@J@@@@^@)^@)^@)^[<H9?I(!H13^[\G0)I-*G*)HD,I[5I))HD!GD$G*,^@)C1\IK)IV
)@@G@@G(8GD!I[?G*?^[4H8)HD$H1\IL>^@)@I@@@@^@)^@)^@)^[0H93IT(GL?G*)GT-IL=^[3G(1IW
)@@G@@I(>H1<G*)H15H(+G(2IS?^[\H1>^[!HD$H[4^[0IL\I1(G->@I@@@@^@)^@)^@)^@$AC\A82IX
)@@G@@^8,^@)E-*G*)H9,H-9^[2G(3I-2HD<I-(H9,^[(IS)I-*GD4 ))HD&^[$HD6G(, ))@I@@@@IY
)@@G@@^@)^@)^@)^@/CTJD-IB0)H(5IT4^[+G*)G92G(-I->IK)I-*GD,^[\IK)G(1I(-H))I-\^@/IZ
)@@G@@CTJD)1B0,^@)@ @@@@^@)^@)B-LE(JE- ^[#D[[EK"^@!^@)@I@@@@A@)^@)^@)^[(IS)I[2JA
)@@G@@H96HD=G(=^[&H92^[4H[>^@$CLL^8)H90I-(H9,^[=H97H1=GD4G*,^@)E-*G*)^@)@H@@@@JB
)@@G@@^@)^@)^@)^[=G(&GD5H-4^@/EDPD9OC*)CTCCDMB0)HD3^[4H[>^[-I[\IT4IL\I[*G*) @$JC
)@@G@@ C,^@)@K@@@@^@)^@)^@)^[OH[(IS)G1(G(?G))HD3^[0IL\I1(G->G))HD,^[4H[>^[>I1>JD
)@@G@@H14^[4H[-I))I-*G*)^9]EC$^[\I[4HD\H0)@J@@@@^@)^@)^@)^[(IS)G->IT(IL>G))G1\JE
)@@G@@IK)IT\H(>^[?GD,G95GD$G*)I9*HD<H@)I(3G(3^[3H9!G*)H94H[>IK)^@)@I@@@@^@)^@)JF
)@@G@@^@)^[<H[-IL-GT4G(2^[4H8)G->H-(H((I))H-(I->IL-H))GT*GD2GD<I->IK)IT4IL(H1$JG
)@@G@@IS,^@)@]@@@@GT\H-5H(,^@5@]@@@@IT0GD<G*)AC)@#@@@@^@/ETKC(#A*"^@!^@)@ @@@@JH
)@@G@@A@)^@)H[-IS)I-*G*)G1\IL!GD4BK)@J@@@@GT>H14G(2^@/E[ C(FB0\B-GD9JDS)CDCC([JI
)@@G@@C)" 8/CTJELM^[#D[[EK" 0/E[ C(FB0\B-GD9JDS)CDCC([C)"^@!@J@@@@^@)^@)H-(HT>JJ
)@@G@@^@/ETKC(#A)"^[4H[>^[2G(=I(,G--H1<JC)HD3^[0IL\I1(G->G))I-\^[-HD=^[4H[>^[5JK
)@@G@@IT>IK,@]@@@@GT\H-5H(,^@8@]@@@@IT0GD<G*)AC)@B@@@@^@)^@)B-KC( DS" 8/D-JD9FJL
)@@G@@^[[D[ CD^B0) *)^@)@I@@@@A@)^@)^@)^[-IL>^[0IL\G92GD!^[\I[4HD!HD'GD4HD\H0)JM
)@@G@@I[-IL-H(>I->IL3^[-H1=^[+JC)I-*G((IK)@K@@@@^@)^@)^@)^[,GD4I(2G*)GD2G*)IT\JN
)@@G@@H(>I9*GD4^[-IL+HD4IL-IL9 0)^[OH[>JC)G->G1-I(?I))I-\^@5 84A@0 0)^@)@L@@@@JO
)@@G@@^@)^@)^@)^[OH[>IT>^[*GD6G*)GL>G(,^[&H95H1=^[4H8)GL>^[2G(-IT\H1-GL?G*)I1-JP
)@@G@@H-5G(3^[(H0)^[4H[>^[6GD3I))^@)@K@@@@^@)^@)^@)^[!GD%H92HD4JC)H9&^[<GD3G(3JQ
)@@G@@ 0)^[OH[>^@/E[ C(FB0)G1-GT4H92^[(IS)G->G1(H1>G))GD3^[4H[>^@)@K@@@@^@)^@)JR
)@@G@@^@)^[,I(!GL>IK)H9&^[3G(1I(>H14HD-H-?JC)GT\IL2G(3I[\H1=HD,G8)IL>GT\IL=IS)JS
)@@G@@H1>GT>IT3GD2JC)^@)@L@@@@^@)^@)^@)^[4H8)GT\H1&HD2H*)GC)H(-I-<H@,^@)E-*G*)JT
)@@G@@B-GD9JDS)CDCC([C)"^[&GD<I-\IK)HD3^[4H[>^[!GD8HD!I(!^@)@L@@@@^@)^@)^@)^[,JU
)@@G@@I(!GL>IK)H9&^[(H(-G9>IS)IT>ID5G(,I-(GD?H-9^[3G(-IL<H[>G))HD,^[\IL=G(2^[4JV
)@@G@@H8)GD4I->H(0I))^@)@K@@@@^@)^@)^@)^[4H8)IT-I-(IT&JC)I-*G*)B-KC( DS"^[&GD<JW
)@@G@@I-\IK,^@*IT>G*)D9KE-DD(DFLDD1B^[KCDMCDHC(OC(MES)@D@@@@^@)^@)^@)^[[D1^^[OJX
)@@G@@D[ ^[^D9RD1^CDOC(M^[[D-BD9MDDOD[H C)@ @@@@^@)^@)B-#D9MEK)CTCCDMB0) *)^@)JY
)@@G@@@K@@@@A@)^@)^@)^[(IS)I-*G*)GT\IL2G(<I-(H9,^[<GD2G))I[2G(&HD8^[<H[-IL-GT4JZ
)@@G@@G(2^[7H[(GT*^[NDDM^[-H-?H97IS)@K@@@@^@)^@)^@)^[4H8)GL>^[2G(=G(&HD,G(= 0)KA
)@@G@@^[DI-3^[=G(&GD5H-4^[(IS)I-*G*)I(3I(-H))G--IT*^[\IK)H((H15IS)@K@@@@^@)^@)KB
)@@G@@^@)^[3HD$H0) @! C,^@)D-(HT>^[4H[>^@/EDPD9OC*)CTCCDMB0?^[(I))I(3G(3^[4H[>KC
)@@G@@^[7IL(I->^[:G(9^@)@K@@@@^@)^@)^@)^[\G0)I-*G*)IT0G(<^[&HD>H-=^[4H8)GD?H-\KD
)@@G@@I8)I-*G*)HD,I-2H9=I(<I-(H9,^[\G0)IT0G(<HD-H))^@)@ @@@@^@)^@)^@)^[<H[-IL-KE
)@@G@@GT4G(2IS,^@)@]@@@@GT\H-5H(,^@2@D@@@@ADID9OC(N^[JD0)DDHE[GC(HC(IE-[E-DD9IKF
)@@G@@^[[D1^^[PET[C9 BK)@]@@@@IT0GD<G*)AC)@ @@@@ALKELJC9MCDH^[ADDGC*)D(JC- BK)KG
)@@G@@@]@@@@IT0GD<G*)AC)@H@@@@^@)^@)CD3^[3I--I->G))G(-IL?HD>IK?^[7H[>H0)B-NE[ KH
)@@G@@CS1B0)GD,G))B-NE[ CS2B0)GD2G*)@L@@@@^[+H94H@)I[2H9$IL-H*)G1(H->IS?^[0IL\KI
)@@G@@G92GD!^[&HD?G*)H(\G->^[(IS)HD,HD4HD-I->G),^@)E-*G*)I(3G(2^[*GD3^@)@E@@@@KJ
)@@G@@^[3H9!G*)GT\H14IL\H))H96G(2^[7H[-I))HD3^[=H97H1=GD4G(=^[-H1=@J@@@@^[4H[>KK
)@@G@@^[3I(+IT>ID5G(,I))H95I-0I(4^[6HD-^[4H[>^@$C*$^[-H1=^@$FK$^[\I[4HD\H13 0)KL
)@@G@@^[RH[>H0)^@)@J@@@@^[,G((I-*G(2^[\G0)I-*G(3G*)HD3^[3I[>GT(G1(G(= ))H9,H-9KM
)@@G@@^[3JD!GL\H-(GS)G(?G(!G(,I-3^[7H[(GT*@G@@@@^[*GD6G*)H1-H(>IS)GT\H(!H9,^[4KN
)@@G@@H8)GL\I-*^[&HD?G(3^[-IL>^[<H9!I[-IL>G),^@)@K@@@@^[NI(+IT>ID5G(,I))H95I-0KO
)@@G@@I(4^[7HD?H))H9,H-9^[\GT<I(2^[(G0)IT\H(>^[=HD&G1>IL>H1<G*)HD3^[&H95H1=^@)KP
)@@G@@@I@@@@^[+G(4I9>G(,^[-^[<H9!I[-IL>G))I[-HD2^[\G0)G(?G(!G(,I-3 0)^[OH[>^@$KQ
)@@G@@C*$^[\I[4HD\H0)^@)@C@@@@^[(IS)I[2H96HD=G(=^[4H8)G1\IL<G*)^[-^[!HD,HD!I(!KR
)@@G@@@H@@@@^@$H15H-?^[\I(4I[5I)$^[>I1>H0)HD&^[+H94H@)G(?G(!G(,I-3^[<H9!I[-IL>KS
)@@G@@G))GD2G*)^@)@G@@@@^[(G->H14HD<GD? 0)^[OH[(IS)^9,I(?H))H95I-0I(4^8)H(-JC)KT
)@@G@@IT(H(0H-9^[+G*)HD,@H@@@@^[4H[>^[&H92H*)H9&^[-^@%C(GC(HC(IE))GT-IL=^[(H0)KU
)@@G@@I-*G*)H95I-0I(4^[3I-2G(-H*)^@)@K@@@@^[\IK)GC)H15H-?^[>H14IL9^[7HD4H@)GC)KV
)@@G@@GT\IL2G(3I[\H1=HD,G8)G(?G(!G(,I))H1-H(>^[(H0)I-*G*)H95I-0I(4@A@@@@^@$E@$KW
)@@G@@^[\I[4HD\H0)I[2H9$IL-H*)G1(H->@A@@@@^@*IT>G*)E-CC*)^9K^8)D9KE-DD9I C,^@)KX
)@@G@@@G@@@@^[OH[(IS)H(-JC)IT>G(!^[4IL(I1(GD?^[-I))G1(IL3I))G9?GD,GT> ))GL5I))KY
)@@G@@HD4^@)@G@@@@^[(IS)H9&I->H0)G->IT(IL>G))HD,^[4H[>^[<IL>GD4HD\H0)H9&^[KCTAKZ
)@@G@@^[\IK)E-#C0)@D@@@@^[0IL\G92GD!^[&HD?G(3^[4H8)GL>^[5IT>G))GL9^[NETB 0)^@)LA
)@@G@@@K@@@@^[OH[>^@$FK$^[\I[4HD\H0)G1\IL<G(3^[\I(4I[5I))G1\IK)GD?H))G(,I-2HD>LB
)@@G@@IS)G(,I->IL>G))HD,^[+H94H@)^@)@H@@@@^[0IL\G92GD!^[&HD?G(3 0)^[DG0)GD,^[>LC
)@@G@@H14IL9^[(IS)G(,GT\I(,I->IL>G))I9*HD<H@)^@)@H@@@@^[*GD3^[,H8)GT\I(,I->IL0LD
)@@G@@GD2I))HD,^[4H[>^[\I[0H93HD,G8)I[2H9$IL-H*)G1(H-> ))^@)@C@@@@^[5H1=G(2^[4LE
)@@G@@H[>^@$FK$^[\I[4HD\H0?^[(I))I9(H-?^@)@D@@@@^[+G*)G(&G1>GT4HD6G(?JC)G-\I9,LF
)@@G@@G--I->G))GD$GD(H13I))GC)@F@@@@^[,I(?H))G(?G(!G(,I),^@)E9(I-*^[4H[>^@$FK$LG
)@@G@@^[\I[4HD\H0?^[\H1>^[<GD,@F@@@@^[<IL>GD4G*)GC)E[#C0)H92^[OCTA^@)I9*HD<H@)LH
)@@G@@I9(H-?^@)H(-I@)GD?H))^@)@G@@@@^[4H[>^[3JD!GL\H-(GS)G(?G(!G(,I-3^[\G0)B-NLI
)@@G@@E[ CS1B0)HD,I-\^[3JD!GL\H-(GS)@I@@@@^[>H->H(>H14IS)H9&^@/ETKC(#AK" 0)^[JLJ
)@@G@@I(4I[5I)?^[2G($GD2G-?G(3IS)H9&^[\I[4HD\H13 ))HD3@G@@@@^[-H-7GD9IS)HD,^[3LK
)@@G@@H92I))H92G->IK?^[( 1> 0)I-*G*)H92G->IK)H9&^[\I(4I[5I))@J@@@@^[3G(1I(>H1<LL
)@@G@@G(3^[7HD?H))GD?I9-JD3^[\GL>JC)I-*G*)H1-I-5IL-H))C1DC(GC-[E-[^[<H9?H--I-(LM
)@@G@@H1$^@)@#@@@@^[3G(1I(>H1<G*,^@)@]@@@@IT0GD<G*)AC)@ @@@@ALNE(HD([ELT^[JE[OLN
)@@G@@DDJD1NBK)^@)@]@@@@IT0GD<G*)AC)@K@@@@^@)^@)E-*G*)IT5H(!GD2JC)H90I-(H9,IS)LO
)@@G@@^9^^8?^@$CC$ ))^9J^8?^@$EK$ ))GD,G))^9N^8)GD?H-\I8)H9,G*)^@)@H@@@@^[4H8)LP
)@@G@@H-\H9:^[&H92^[=HD&G1>IL>H1<G(3^[(H0)I-*G*)G(,I-2HD>IS)H9&^[0IL\G92GD!^@)LQ
)@@G@@@G@@@@^[&HD?G*)E-JCT3 0)^[OH[>JC)GD2G*)GC)H1-I-5IL-H))G(8I->H13HD\H0)H9&LR
)@@G@@^[4H[>@G@@@@^[4IL>G*)H[-H1=H-(H1$^[!G(<H[-H1(IT!IS)I(3G(=^[4H8)I[2H9<G(3LS
)@@G@@IS)GD,G))^@)@F@@@@^[3H92I))G(,I-2HD>IS)G1\IK)I[2H9$IL-H*)G1(H->^[=H97H1=LT
)@@G@@GD4G(3 0)^@)@F@@@@^[OH[>JC)IT5I[0H-9^[-^[,H9!HD,GD?^[-H(\I(,I))H9&^[(H1&LU
)@@G@@H92H(-I-(H9,@I@@@@^[2G($GD2G-(H1$^[4H[>^[=HD&G1>IL>H1<G(3^[+G(4I9>G(,^[0LV
)@@G@@IL\G92GD!^[&HD?G*)E-JCT3 0)^@)@]@@@@IT0GD<G*)AC)@ @@@@ALGDDNE-DD1B^[#D9ILW
)@@G@@E-MD9GBK)^@)@]@@@@IT0GD<G*)AC)@I@@@@^@)^@)E-*G*)^9I^8?^@$D)$ ))GD,G))^9QLX
)@@G@@^8)H90I-(H9,IS)I[2H96HD=G*)I-*G*)I(3G(2^[7HD4H@)@J@@@@^[3H9!G*)G->G92G(>LY
)@@G@@^[\G0)GT\H14IL\H))H96G(2^[4H[>^[KELDD1O^))H-(IT4HD,G8)H9&^[=H97H1=GD4G(=LZ
)@@G@@@I@@@@^[\I(4I[5I),^@)E-*G*)^9I^8)H90I-(H9,^[(IS)I[2H96HD=G(=^[4H8)IT5I[0MA
)@@G@@IL>IT3^[KELDD1O^))@I@@@@^[\I(4I[5I))H9&^[4H[>^[-GT4I(-H))G-\I9,G--I-> 0)MB
)@@G@@^[DI))G-\G(3^[,H94 ))H[\I9>I1>IK?^@)@I@@@@^[-G1&G(<I))I-*G*)I[2HD,I-(H1$MC
)@@G@@^[\G0)G(2IL\IK)H(>IT3GD$G(3^[\IK)IT5H(!GD2JC)H90I-(H9,@H@@@@^[(H1&H92H(-MD
)@@G@@I-(H9,^[7H[(GT*^[!I(3I))GL>^[3I[>GT(G1(GT-H-?JC)IL>ID5G(3I->G),^@)@C@@@@ME
)@@G@@^[DG0)I-*G*)^9I^8)H90I-(H9,^[(IS)IT0G(<HD&HD>G))@I@@@@^[-H1=^[,H8)B-NE[ MF
)@@G@@CS3B0)HD3^[$HD6G(, ))H1\^[-GT4I(-H))IT9H(+H9?HD<^[=H97H1=GD4G*)^@)@I@@@@MG
)@@G@@^[(IS)GD4I->H(0I->G)?^[-H-4H[\I($H@)IT5H(!GD2JC)H90I-(H9,IS)GD2G*)GD?H-\MH
)@@G@@I9>G),^@)DD&@D@@@@^[,H8)IT5H(!GD2JC)H90I-(H9,IS)H[-I1>^[+G(>H0)G9(I1>H0?MI
)@@G@@@I@@@@^[4H[>^[>J[>GT5I-(H9,^[(IS)G->I->IL!HD,G(=^[4H8)GL>^[5IT>H->IT3^[-MJ
)@@G@@H1=^[-H0)G(2IL\IK)@E@@@@^[(IS)H1\I->G),^@)DD&^[\H1?JC)IT5H(!GD2JC)HD,G1\MK
)@@G@@IL!GD4HD\H0)@H@@@@^[(IS)G->IT(IL>G)?^[(I))HD3^[2G(<H9!H(>H1=G(=^[4H[-I))ML
)@@G@@I-*G*)^9I^8)H90I-(H9,^@)@H@@@@^[7HD4H@)H1\^@/ETKC(#AS"^[-H-3H8)GL>^[3I[>MM
)@@G@@GT(G1(G(= ))I-*I(3^[(H1*HD+HD4HD,G8)@K@@@@^[>J[<G(3IT(I1>^@)H95I-0I(4 0)MN
)@@G@@^@)^[OH[>^@$D)$^[\I[4HD\H0)HD3^[0IL\I1(G->G))I-\^[$HD6G*)I-*G*)^@)@F@@@@MO
)@@G@@^[5IT>IK)I-*G*)H(-J[(H(5H*)GD!H95H14^[\G0)HD,G1\IL!GD4HD\H0)H9,^@)@J@@@@MP
)@@G@@^[-^[0GD2I-(GT5H--IK)IT9H(+H9?HD<^[=H97H1=GD4G*,^@)DD4^[3I(0I[?HD>IS)I-*MQ
)@@G@@G*)G-(G1&G(2HD,G8)@H@@@@^[(H(-G9>IS)H9&^[+H94H@)G1(H->IS)GD?H9,G8)I9(I-*MR
)@@G@@^[4H[>HD2^[2G(3I[>GT4HD6G*)^@)@H@@@@^[?HD,G*)H15H(+G(2IS,^@)E-*G*)H95I-0MS
)@@G@@I(4^[(IS)G1\IL!GD4I->G))I-\^@7AK)H92^@1AS2@L@@@@^[<H[-IL-GT4G(2IS)G->I[>MT
)@@G@@H1=HD,G8)H9,^[=G(!GD,G))H92^[+GD4GT*^[-H1=^[+IL>GD:I[\HD,I))G(8G(<I(4HD\MU
)@@G@@H0,^@)@C@@@@^[DG0)H9,G*)HD3^[>J[>GT5I-(H1$^[&IL\H*)G->H(-H1=@G@@@@^[-H1=MV
)@@G@@^[7HD3H[>IS)GC)GL-I-<H@)H-(IT4HD,G8?^[4H[>^@$E0$^[\I[4HD\H0)HD3^@)@H@@@@MW
)@@G@@^[3I(0I[?HD>G),^@)DD&^[4H[>^@$D)$^[\I[4HD\H0)HD3^[,H94^[3I[>GT(G1(G(=^[4MX
)@@G@@H[>^@)@I@@@@^[\I(4I[5I))HD3^[0IL(H14G(= ))I(,G1\IL!GD4I->G)?^[5I@)I-\^@1MY
)@@G@@AS2^[<H[-IL-GT4G(2IS)^@)@B@@@@^[-H1=^[4IL5H1<GD4G(=^[-G14G(2^[4H[-I),^@)MZ
)@@G@@@]@@@@IT0GD<G*)AC)@^@@@@ALKCTA^[^D9RD1^CDOC*'^@)@]@@@@IT0GD<G*)AC)@I@@@@NA
)@@G@@^@)^@)E-*G*)E[#C0)G-\I9,G--I->^[(IS)I-2HD$G9>IL>G))GL9^[4H[>^[0IL>IT>H1<NB
)@@G@@G*)H9&^[4H[>@H@@@@^@$E)$^[\I[4HD\H0,^@)E-*G*)H95I-0I(4^[(IS)HD,^[4H[>^[&NC
)@@G@@H92H*)H9&^[-^[OCTA ))^@)@J@@@@^[<GD0GD+H->^[6HD-^[NETB ))H9&^[4IL-H13G1\ND
)@@G@@IL!HD,G8)I-*G*)E[#C0)H9&^@/ETKC(#AC"^[(H14H8)^@)@I@@@@^[4H[>^[KCTA^[\G0)NE
)@@G@@B-NE[ CS2B0,^@)E-*G(2G*)GD2G*)H1\^[?H9$HD<GD?^[2G(3I-2HD<I-(H9,IS)@J@@@@NF
)@@G@@^[4H8)I-*G*)G1(H->^[4JD0G(3^[(H0)B-NE[ CS1B0)H92^@/ETKC(#AK"^[\I-*G(2^[4NG
)@@G@@H[-H0)I-*H93G*)^@)@H@@@@^[0IL>I1(H95IT?JC)IT4GD4G(= 0)^[OH[>^@$E@$^[\I[4NH
)@@G@@HD\H0)HD3^[-H-3H8)I1-H-(G))^@)@I@@@@^[-H1= ))HD&^[0IL\I[>IL?JC)I(3G(= ))NI
)@@G@@IL>IT5H-4IS)HD,^[-^[OCTA^[0IL\G92GD!^[&HD?G*)^@)@G@@@@^[-IS)H95I-0I(4 0)NJ
)@@G@@^[DG0)HD,I[5I))HD3^[(H0)I-*G*)G1\IL!^[\G0)GC)E[#C0)^@)@L@@@@^[>H->H(>H14NK
)@@G@@^[\IK)G--I--^[&HD?G*)GT\H14GD(H1(H1$^@%C(GC(HC(IE))IT>ID5G(,GT>IS?^@)HD4NL
)@@G@@^[(IS)I-2G(-I->G))@E@@@@^[-IS)GD,^[>H->H(>H14^[7HD4H[(H0)GC)I[2H9$IL-H*)NM
)@@G@@G1(H-> 0)^@)@H@@@@^[RHD4H@)I-*HD3^[!H9=G*)H9&^[*GD,G-?HD,G8?^[4H[>^@$C*$NN
)@@G@@^[-H1=^@$FK$^[\I[4HD\H13@C@@@@^[*GD6G*)GC)H(>GD,HD,G8)GD3^[=G(3GT2HD+G(=NO
)@@G@@^[(H0)@D@@@@^[KELJC9MCDH^[ADDGC*)D(JC-  0)^[OH[>JC)I[2H9=I(<G*)^@)@F@@@@NP
)@@G@@^[4H[>^[3GD!G*)G(&G1>GT4^[-IS)HD&^[4H[>^[KCTA^[(H10I(4^[3I-2G(-H(3@E@@@@NQ
)@@G@@^[*GD6G*)GD<I-5GD?H-9^[+G(>H0)E[#C0)I[2H9$IL-H*)G1(H->IS,^@)@H@@@@^@)^@)NR
)@@G@@E-*G*)I[\HD,I))IT*H95H-=^[+G*)H(-G->^[4H[-I))I-*G*)^9O^8)H90I-(H9,^[(IS)NS
)@@G@@@F@@@@^[0IL\I1(G->G))I-\^[=H97H1=GD4G*)E[#C13^[,H94^[OCTAIS,^@)E-*G*)^@)NT
)@@G@@@G@@@@^[=HD3I-(H1<I-(H9,^[(IS)I-*HD3BS)E-#C13^[!GD9^[<H9,I--HD,^[2G(?GD4NU
)@@G@@HD6G*)@J@@@@^[KCTA^[<H92IL>GT4HD\H0)HD!GD$G(3^[7H[(GT*^[-IL>^[4H[>H(3G(?NV
)@@G@@I1>IS)I(,GT\IL2G(<I--GL?G*,^@)@K@@@@^[DG0)C[^D9RD0)HD3^[(H0)^9O^8)H90I-(NW
)@@G@@H9,^[!H9=G*)GD,G))G(,GT\I(,I->IL3^[3I(<H@)GD,^[(H(-G9> ))GC)@F@@@@^[&H92NX
)@@G@@H(-I))G(2IL\IK)HD3^[,H94G(= ))I-*G*)GT-IL=^[(IS)I-2G(-I->G))@F@@@@^[-IS)NY
)@@G@@GC)^@%C(GC(HC(IE))GT-IL=^[\IK)GD,^[ D9A^[=G(?HD!HD4G(2^[-H1=@C@@@@^[>J[>NZ
)@@G@@GT5I-(H9,^[<H9,I-(H15G(3 0)^[DH0)IT*H92I)?@G@@@@^[\H1>^[!GD9^[=H97H1=GD4OA
)@@G@@G*)E-#C13^[(H0)I-*HD3^[!GD,H1>IK,^@)^[#H-\IT>^@)@I@@@@^[-I-4G(,I-(H9,^[3OB
)@@G@@H[\I(?G))GL>^[0GD(G))I-\^[-H19^[0IL(H14G(=^[>IL2H92^[!G(3IT-G9>IS?@G@@@@OC
)@@G@@^[*H97G(6G(2 ))GL>GT-I(3G*)G(2IL\H1>H95IS)H95I-0I(4^[!GD9^[&H9?H-\I8,^@)OD
)@@G@@@]@@@@IT0GD<G*)AC)@^@@@@ALOD[ ^@$E@$^[JE[ODDJD0'@]@@@@IT0GD<G*)AC)@F@@@@OE
)@@G@@^@)^@)DD,^[4H[>^[$G(,G(2GD?^[<GD3G*?^[4H[>^@$E@$^[\I[4HD\H0)HD3^@)@H@@@@OF
)@@G@@^[!G(-H14^[4H8)GL>^[5IT>G))HD,^[4H[>^[0IL\G92GD!^[&HD?G*)H(\G-> 0)^[OH[5OG
)@@G@@IS?^@)@E@@@@^[4H[>^[,GD!G*)G1\IK)G(-GT*^[\I(4I[5I))G(?G(!G(,I))^[<H9!G(3OH
)@@G@@@H@@@@^[&IL\H*)I-*G*)H1-H(>^[\G0)I-*G*)G(?G(!G(,I-3^[+G((H1$^[<H9!I[-IL>OI
)@@G@@G))I9(I-*HD,@J@@@@^[\I[0H93HD,G8)I[2H9$IL-H*)G1(H->IS,^@)E-*G*)^9K^8)H90OJ
)@@G@@I-(H9,^[(IS)H1\I)?^[*H97G(6G(2 ))^@)@I@@@@^[?HD!HD4G(=^[4H8)^[0IL\G92GD!OK
)@@G@@^[&HD?G*)H(\G-> 0)^[OH[>^[\H1?JC)IL>IT4IL(GT4HD\H0)^@)@G@@@@^[(IS)I-*GD4OL
)@@G@@^[4H[>IL>^[!I(3I))GL>^[3H9!G*)H-\G9(GT-H))G->G1-I(?I))H1-H(>@H@@@@^[4H8)OM
)@@G@@GL>^[$HD6G(,^[4H8)GD,JC)I[\I->H14HD-H))H95I-0I(4^[>H->H(>H14 0)^[[IS)^@)ON
)@@G@@@G@@@@^[-^[?GD3I))IL>IT\IL4 ))I-*G*)G(?G(!G(,I))H1-H(>^[(IS)I--HT>H0)G12OO
)@@G@@H9!^@)@G@@@@^[4H[>^[>H->H(>H14^[\G0)B-NE[ CS1B0?^[(G0)HD4^[>J[(IT4IS,^@)OP
)@@G@@DD&^[,H94 ))@G@@@@^[-H0)G(2IL\IK)HD3^[,H94G(=^[-H1=^[4H[>^[0IL\G92GD!^[4OQ
)@@G@@G(2H((H1-I->IS,^@)@J@@@@^[DG0)I-*G*)I[2H9<G(3IT\IK)HD3^[,H94^[(H0)I[2H9$OR
)@@G@@IL-H*)G1(H->^[!H9=G*)GL5I))I-*G*)^9O^8)^@)@J@@@@^[\I[4HD\H0)HD3^[3I[>GT(OS
)@@G@@G1(G(= ))GD,G))I-*G*)HD,I[5I))IT4IL>GD!IS)GT\H14GD(H0) L D- D( D1O@D@@@@OT
)@@G@@^[<GD2G-3 ))^[4H[>IT>^[<GD2G-3^[,GD!G*)I-*G*)H95I-0I(4@H@@@@^[>H->H(>H14OU
)@@G@@IS,^@)CC)I[2H9+H->H*)GD2HD3G(3^[7H[>H0)I-*G(2G*)HD3^[-^[=GD4GC)^@)@J@@@@OV
)@@G@@^[&HD?G*)HD,^@/ETKC(#AC"^[7HD4H@)H1\^@$E)$^[\I[4HD\H0?^[\IK)I9(I-*^[-^@$OW
)@@G@@E)$^[\I[4HD\H0)^@)@J@@@@^[+I(4^[,H8) L D- D( D1O^[<GD2G-3^[(H0)I-*G*)G--OX
)@@G@@I--^[3I-2G(-H*,^@)DD,^[4H[(IS)GT-IT> ))^@)@J@@@@^[4H[>IL>^[(IS)H1\^[?H9$OY
)@@G@@HD<GD?^[\I(4I[5I))G(?G(!G(,I))H1-H(>^[4H8)GL>^[5IT>G);^[4H[5IS?^@)@F@@@@OZ
)@@G@@^[-H0)G(2IL\IK)HD3^[,H94G(= 0)^[OH[>^@$E@$^[\I[4HD\H0)HD3^[!G(-H14@I@@@@PA
)@@G@@^[4H8)GT2G(-I->^[KCTA^[\IK)E-#C0)I[2H9$IL-H*)G1(H->IS)G1\IK)IT5GL3G(1I(>PB
)@@G@@H14^[5IT>^@)@]@@@@^[+JC)ETNC8,@]@@@@IT0GD<G*)AC)@G@@@@ALOD[ ^@$CLL^8)D9KPC
)@@G@@E-DD9I ))E9DD1^D9R^[NE[ CS?^[[D1^^[OEL[D1ND-[E-DD9IBK)@]@@@@IT0GD<G*)AC)PD
)@@G@@@E@@@@^[DG0)GT\H(0GD2G(=^[2G(<H92G-3^[-IL>^[\G0)G-(G1&G(2G(,I))^@)@G@@@@PE
)@@G@@^[!H9=G(3 ))I-2GD,IT?GD4HD\H0)HD3^[-I(4H9!GD4HD<GD?H-9^[!GD=G*,^@)E-*G*)PF
)@@G@@@I@@@@^[=HD2G(<I-(H9,^[\G0)I-2GD,IT?GD4HD\H0)HD3^[-H-7GD9IS)CDNCTDDC) *"PG
)@@G@@^[ADD D-^CDOCC,^@)@G@@@@^[OH[(IS)GT*H9(GT>^[7GD3^[!GD=G*)G1\IK)HD,I->IL,PH
)@@G@@GD?^[<H9,I1>H1(G(,GT> ))@F@@@@^[+I(4^[(I))H[-IS)JD>I))I-\^[+G*)IT*H97H0)PI
)@@G@@I-*GD4^[4H[>^[(H16G(2IT>@D@@@@^[4IL-H13H--I-(H9,^[(IS)GD,JC)H(\IL>^[!G(-PJ
)@@G@@H1(H1$G15H),@F@@@@^@)^@)DD4^[3H[\I(?G))GL>^[,H94G(=^[4H[-I))GD?H))GT*GD2PK
)@@G@@GD<I->IK)^@)@I@@@@^[!GD,HD0I(?GD4HD\H0?^[7H[>I-*G(2^[(I))GL>^[4H[>^[>H-(PL
)@@G@@H((H1-I-(H9,^[\G0)H(5H-4HD0H->@K@@@@^[+H--H1:IS?^[4H[>^[(H16H9<GD4HD\H0)PM
)@@G@@H9&^[7HD,G-\I8)IT0G(<HD&HD<GD4HD\H0?^[\IK)GT*GD2GD<I->IK)^@)@K@@@@^[4IL-PN
)@@G@@H13H--I-(H9, ))HD3^[=H9,G*)GD4^[4H[>^[4HD!G*)H9&^[>GD<H@)IL>ID5HD2G(=^[<PO
)@@G@@H9!I[-IL(IT\H0,^@)@G@@@@^[OH[(IS)H(-JC)GD4^[&HD2IT4^[$H--H1<G*)GD0I[>GD2PP
)@@G@@^[(H1>G1&HD<HD>H14 ))^@)@H@@@@^[+I(4^[4H[>IL>^[-IL>^[3G(6G(2GD?^[2G(-IT\PQ
)@@G@@H13^[&H92^[4H[(IS)GD0I[2H9-GT* 0)^@)@G@@@@^[AHD2IT4 ))HD4^[(IS)G1>H-4^[4PR
)@@G@@H[-I))I-*G(3G*)H(>GT*GD,HD3H(3^[=G(,H94G*)@H@@@@^[3I[>GT(GD?^[0I(2I[\IT>PS
)@@G@@^[5IT-G9>^[-H1= ))GD3^[3I(<H@?^[7HD?H))GL>^[5IT>G))^@)@H@@@@^[(H1&IL>ID5PT
)@@G@@G(,I-?JC,^@)E-*HD3^[(H(0H->H(>H14GD4HD\H0)I[2G(3G(2I1>IS)I-*G*)^@)@G@@@@PU
)@@G@@^[+GD3HD<^[D 9J^[3I-2I(<I-5IL>^[7H[(GT*^[!GD:G(3^[4H[>^[=H97H1=GD4G(2^@)PV
)@@G@@@J@@@@^[-IS)G(&G1(GT(G(,I))GD3^[(I))HD3^[-H1=^[9G(4^[!GD:G(3^[4H[>^[-GT4PW
)@@G@@I(-H))HD,I[5I))IL>GT\IL=@G@@@@^[&H92H(3^[4IL-H13I[-IL>H14^[4H8)I-*G*)H(-PX
)@@G@@HD,^[?HD,G*)IL\I(4HD,G(3 0)^@)@H@@@@^[NG(<H9,G)?^[(H0)I-*G*)G9>H1>IL-H))PY
)@@G@@GD0I[?HD<GD4HD\H0?^[4H[>^[=G(,IT(I-9^[\G0)@J@@@@^[=HD&G1>IL>H1<G(3^[(IS)PZ
)@@G@@G1-IK)IT!GD?H->IK)I-*GD,^[4H[>^[3HD'G*)H9&^[4H[>^[4H94GD?^[&HD?G*,@J@@@@QA
)@@G@@^[OH[(IS)H(>I-*H9=^[(IS)^[0IL\GL-GL?JC)H(\IL>^[>G1&HD<HD>H14^[(H0)IT5GT*QB
)@@G@@^[<GD3G(3^[4H[-H0)@B@@@@^[2G(<IL>GD4HD,G8)G(-GT*^@)G1(H->^[(H0)^@)@F@@@@QC
)@@G@@^[!H9=HD&HD>G))G1\IL!^[-H1=^[=H97H1=GD4HD,G8)I-*G*)IL>IT5H-4 0)^@)@H@@@@QD
)@@G@@^[GGD3I-?JC?^[(H0)H(-H19^[-I[0H-(GT-I-(H9,IS)I-*G*)G-\I9,G--I->IK)HD3^[3QE
)@@G@@I-(H-?@D@@@@^[D 9J^[+H95H1= 0)^[PIT(H1$^[!H92G*)H9&^[4H[>^[#E[P^@)@H@@@@QF
)@@G@@^[=I(2HD,G8)H96G(2H--I[0G(=^[D 9J^[=H9>IS)H1\I))GD0I[2G(<HD-GL?JC)G->G92QG
)@@G@@GD=G*)@A@@@@^[0IL\G92GD!^[0G(2G1\IL!GD,GT> 0)^@)@]@@@@IT0GD<G*)AC)@H@@@@QH
)@@G@@ALJE[ODDHDDUDDIC8)E[[EL[D( E- ELN^[[D1^^[OD[ ^[^D9RD1^CDOC(M^[[D-BD9MDDOQI
)@@G@@D[HBK)@]@@@@IT0GD<G*)AC)@F@@@@^@)^@)CD3^[3I--I->G))G(-IL?HD>IK?^[4H[>^@/QJ
)@@G@@E[ C(FB0)G1-GT4H92^[-H1=@K@@@@^@/D-JD9F^[[D[ CD^B0)G1-GT4H92^[-IL>^[\I[4QK
)@@G@@HD!HD'HD,G8)I[-IL-H(>I->IL3 0)^[OH[>^[=H97H1=GD4G(2^@)@J@@@@^[(IS)GC)IT>QL
)@@G@@ID5G(,I-(GD?H-9^[\IL(G(,I->G))GT\H(0GD2GD4H92^[-H1=^[-IS)IT5GT*^[(IS)H1\QM
)@@G@@I))^@)@I@@@@^[=G(&HD,G(=^[4H8)I[2H96HD=G*)I-*G*)H90I-(H(5H*)IT>I))H9&^[<QN
)@@G@@H92IL>GT4HD\H0)GT-IL=IS,@G@@@@^[OH[>^[\I[4HD!I(!^[(IS)G->G1(H1>G))GD3^[4QO
)@@G@@H[>^[!HD,HD!I(!^[,I(!GL>IK)^@)@K@@@@^[\G0)I[\IT3HD+H->^[<H92IL>GT4HD\H0)QP
)@@G@@GT-IL=IS)I-\^[<H[-H1$G*)H9,G*)G1(H->^[(H14H8)GD,H94H[>IK,^@)@J@@@@^[DH13QQ
)@@G@@I->GD= ))I-*G*)G-\I9,G--I->IK)I[2H9=I(<G(3^[-^[3G(4^[\G0)GT\IL2G(<I-(H9,QR
)@@G@@^[<GD2G-3^@)@G@@@@^[3I(&G1(GT(G(,I))I-\^[-GT*HD>I1>^[4H[>^[3GD!G*)G(,G),QS
)@@G@@^@)DD4^[(IS)I-*G*)@H@@@@^[(H14G(2GD<I-(H9,^[\G0)I-*G(3G*)I[-IL-H(>I->IL3QT
)@@G@@^[-H1=^[4H[>^[0H[9IT(GT-H))^@)@F@@@@^[,GD4I(2G*)H9&^[4H[>^[&HD?G(3^[+G((QU
)@@G@@H1$^[<H9,IT(G->IL>G))I9*HD<H@)@G@@@@^[=G(4G(2H((H1>^[4H[>^[<H-\IT>H1>IT3QV
)@@G@@^[\G0)I-*G*)I[2H9=I(<I))I-\^[4H[-I))@G@@@@^[\I[4HD!I(!^[3G(4 0)^[DH0)G1-QW
)@@G@@GT4 ))I-*G*)G-\I9,G--I->IK)GD?G9\IL(I-*H*)@F@@@@^[=H9>IS)GC)I1>IL9^[$H9\QX
)@@G@@G))HL\GK)GD4^[-I[0IL\J[(H(-I-(H1$^[4H[>^@)@E@@@@^[\I[4HD!I(!^@)HD,^[4H[>QY
)@@G@@^[6GD3I))H(-HL\IL(I-9^[\G0)GT-IT>IS,@C@@@@^[DI))HD3^[2G(?GD4HD6G(?JC)HD,QZ
)@@G@@IT>H13HD4HD6G*)^@)@G@@@@^[4H8)GT*GD,G9>IS)HD,^[4H[>^[\I[4HD!HD'HD,G8)I[-RA
)@@G@@IL-H(>I->IL3 0)^[OH[>IL>@H@@@@^[-IL> ))H[\I9>I1>IK?^[<H[-IL-GT4G(2HD3I-(RB
)@@G@@GT3^[\G0)HD,I[5I))G--I--^[7H[(GT*^@)@H@@@@^[!GD9^[4G(,G))I-\^[=G($IL-G->RC
)@@G@@^[4H[>^[2G(3I(?I))GD,G))IT*H95H-=^[+G*)H1\I->G),@I@@@@^[AH92^[>J[-H(0H->RD
)@@G@@ ))HD&^[\H1>^[(IS)G-\I9,G--I-(H1$^[4I9\^[&HD?G(3^[7H[(GT*^[*GD6G*)@H@@@@RE
)@@G@@^[2G(0G(4HD4HD6G*)GL?H9<HT3^[\G0)I-*G*)IT-H(>^[(H(-G9>IS?^[4H[>^@/E[ C(FRF
)@@G@@B0)^@)@G@@@@^[&GD<I-\IK)IT*H95H-=^[+G*)IT>I))G92G(-I->IK)I-*GD,^[4H[>^[3RG
)@@G@@HD'G*)H9&^@)@F@@@@^[-^[2G(0G(-I->G))GL?H9<HS,^@)CD,GD?H9$H95IT?JC?^[(G0)RH
)@@G@@HD!GD$G(3^@)@G@@@@^[7HD4H[(H0)GC)G1(H->^[*GD6G*)GC)G-(IT0H--GT>H(>H14^[$RI
)@@G@@IL>GD4G(2^[4H[-H0)@I@@@@^@4A@0^[2G(<H92G-3 ))I-*G*)B-GD9JDS)CDCC([C)"^[3RJ
)@@G@@H[\I(?G))GD?IT\^[+G*)HD,GT2G(-IT>G),@G@@@@^[OH[>IT>^[<H[-H1$G(3^@)G(&G1>RK
)@@G@@GT4HD6G(?JC)H90I-(H((JL>^[4H[>^[\I(4I[5I)?@E@@@@^[+I(4^[4H[>JC)^[-H-3H8)RL
)@@G@@G->G92GD=G*)I-*G*)IT0G(>G))H9&^[4H[>@F@@@@^[0IL\GT>IT3H92 0)^[KIL\GT>IT3RM
)@@G@@H92^[3I[>G(=^[<GD,^[+G*)HD!I[2H96G(=@H@@@@^[+JC)H-\I9>IL(H1$^[4H[>^[\I[4RN
)@@G@@HD!HD'GD4HD\H0)I[-IL-H(>I->IL3^[+I(4^[-I))GC)^@)@H@@@@^[?HD:G(?JC)GT\IT4RO
)@@G@@^[\G0)G9>H1>IL-I-(H1$^[?GD2G9>IK)GT\IL2G(<I-(H9,^[=G(<HT3 0)@J@@@@^@)^@)RP
)@@G@@C1(H1-H-?JC?^[-^[<H9!H(>H14^[\H0)HD,I[5I))HD!GD$G*)H->H1$I-*^[(IS)H1>GT>RQ
)@@G@@IT3GD2JC,^@)@I@@@@^[DH0)I-*G(\IL9^[4H[>IL>^[(IS)H1\^[?HD!HD4^[4H8)I-*G*)RR
)@@G@@HD,I[5I))HD!GD$G*)H->H1$I-*^@)@C@@@@^@*I9(I-*HD,^[NC-A^[=G(&HD,G(=^[&H92RS
)@@G@@H(-I)( 0)^@)@H@@@@^[CH97G(6G(2 ))GD,^[(H14G(2H1-H))GL5G1&G(2^[!I(3I))GL>RT
)@@G@@^[!GD(H14GD(H1>G))G1\IK)@H@@@@^[(H(-G9>IS)I9*HD<H@)IT0GD,^[(H14G(2H1-H))RU
)@@G@@I[-G9>^[+H95H1=GD2HD>IS,^@)E-*HD3^@)@G@@@@^[(H14G(2H1-H))GL5G1&G(2^[(IS)RV
)@@G@@H1\I8)IT>I))GD4^@6A@)I9\IL=IS?^[4H[-I))HD3@J@@@@^@2A)0^[<H[-IL-GT4G(2IS)RW
)@@G@@CDNCTDDC?^[\IK)AS6A@)GT*GD2GD<I->IL3^@)C1DC(GC-[E-[ 0)^[DH(-G9>IS)@H@@@@RX
)@@G@@^[>J[<G(>G-(H1$^[4H[(IS)H->H1$I-*^[-H1=^[&GD?H-(H1$^[4H94GD?H-9^[7HD4H[(RY
)@@G@@H0)^@)@I@@@@^[-^[0GD$G*)GL\I(,G--IL9^@*A)4B@)I9\IL=IS(^[7HD?H))GL>^[<H9!RZ
)@@G@@I[-IL>G))H1\IL!GD?H-9 0)@I@@@@^[DG0)HD4^[(IS)H1>GT>IT3GD2JC)I-\^[!H96G*)SA
)@@G@@^[-H0)HD!GD$G*)I-\^[4H[>^[(H14G(2H1-H))^@)@M@@@@^[+I(&G1>IK?^[(I))I9(H-?SB
)@@G@@^[+G*)I-2I(,GT-I->G))I-\^@6A@)I9\IL=IS)GL5I))D1J^[>IL2H92^[7HD?H))GL>^[,SC
)@@G@@H94G(= 0)^@)@I@@@@^[DG0)I-*G*)I(3G(2^[7HD3H[>IS)I-\^[5IT>^[4H[>^[0IL\GT>SD
)@@G@@IT3H92^[\H0)G1(H->IS)I9(I-*^@)@H@@@@^[2G(<H92G-3^[$IL>GD4G(2^[4H[-H0)A00SE
)@@G@@^[7H92G-3^[(H0)H->H1$I-* ))H[>^[=H9>IS)^@)@B@@@@^[3H8)I9(I-*^[4H[(IS)I(,SF
)@@G@@G->IL3I--H1=HD,G8,___@@@H0)I[-IL-H(>I->IL3^[+I(4^[-I))GC)^@)@H@@@@^[?HD:SG
)@@G@@G(?JC)GT\IT4^[\G0)G9>H1>IL-I-(H1$^[?GD2G9>IK)GT\IL2G(<I-(H9,^[=G(<HT3 0)SH
)@@G@@@J@@@@^@)^@)C1(H1-H-?JC?*[S@@@*SDFF*@#@@@@@HDG,N .M,66,6,6  @A@@@@@DOC,DSI
)@@G@@ER DOWNDOC/DOC,,,FORM,,49     @[@@@@@EOF  ___@@@@@@@@@@@@@@@@@@@@@@@@@@@SJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*[S@@@*SDFF*@A@@@@@HDG,PSK
)@@G@@  ******  DOWNDOC/DOC  ****** @#@@@@@DOC,R DOWNDOC/DOC@ @@@@@HDG,P  ****SL
)@@G@@**  OUT$$$  ******@#@@@@@ELT,L OUT$$$     @A@@@@@HDG,P  ******  PRINTDOCSM
)@@G@@/DOC  ******@^@@@@@ELT,L PRINTDOC/DOC     @ @@@@@HDG,P  ******  RUN  ***SN
)@@G@@***   @]@@@@@ELT,L RUN  @A@@@@@HDG,P  ******  AXR$/UOM  ******    @ @@@@SO
)@@G@@@PDP,ML AXR$/UOM,AXR$/UOM     @A@@@@@HDG,P  ******  DOWNDEF  ******     SP
)@@G@@@^@@@@@PDP,ML DOWNDEF,DOWNDEF @A@@@@@HDG,P  ******  EDIT$P/UOM  ******  SQ
)@@G@@@ @@@@@PDP,ML EDIT$P/UOM,EDIT$P/UOM @A@@@@@HDG,P  ******  ED$PROCS  ****SR
)@@G@@**    @ @@@@@PDP,ML ED$PROCS,ED$PROCS     @ @@@@@HDG,P  ******  FIDEF$  SS
)@@G@@******@^@@@@@PDP,ML FIDEF$,FIDEF$   @A@@@@@HDG,P  ******  M$TIME/UOM  **ST
)@@G@@****  @ @@@@@PDP,ML M$TIME/UOM,M$TIME/UOM @B@@@@@HDG,P  ******  PROCS-FISU
)@@G@@ASG/UOM  ******   @B@@@@@PDP,ML PROCS-FIASG/UOM,PROCS-FIASG/UOM   @A@@@@SV
)@@G@@@HDG,P  ******  PROC$/UOM  ******   @ @@@@@PDP,ML PROC$/UOM,PROC$/UOM   SW
)@@G@@@A@@@@@HDG,P  ******  SAXR$/UOM  ******   @ @@@@@PDP,ML SAXR$/UOM,SAXR$/SX
)@@G@@UOM   @A@@@@@HDG,P  ******  STRUC$/UOM  ******  @ @@@@@PDP,ML STRUC$/UOMSY
)@@G@@,STRUC$/UOM @ @@@@@HDG,P  ******  CHECK  ****** @^@@@@@MASM,S CHECK,CHECSZ
)@@G@@K     @A@@@@@HDG,P  ******  COMPARE  ******     @^@@@@@MASM,S COMPARE,COTA
)@@G@@MPARE @ @@@@@HDG,P  ******  DOWN  ******  @#@@@@@MASM,S DOWN,DOWN @A@@@@TB
)@@G@@@HDG,P  ******  DOWNPCF  ******     @^@@@@@MASM,S DOWNPCF,DOWNPCF @A@@@@TC
)@@G@@@HDG,P  ******  DOWNTCF  ******     @^@@@@@MASM,S DOWNTCF,DOWNTCF @A@@@@TD
)@@G@@@HDG,P  ******  DOWNTOC  ******     @^@@@@@MASM,S DOWNTOC,DOWNTOC @ @@@@TE
)@@G@@@HDG,P  ******  ERROR  ****** @^@@@@@MASM,S ERROR,ERROR     @ @@@@@HDG,PTF
)@@G@@  ******  E$CHAR  ******@^@@@@@MASM,S E$CHAR,E$CHAR   @ @@@@@HDG,P  ****TG
)@@G@@**  GET  ******   @#@@@@@MASM,S GET,GET   @ @@@@@HDG,P  ******  ISDFI  *TH
)@@G@@***** @^@@@@@MASM,S ISDFI,ISDFI     @ @@@@@HDG,P  ******  MATCH  ****** TI
)@@G@@@^@@@@@MASM,S MATCH,MATCH     @A@@@@@HDG,P  ******  PAGED-IO  ******    TJ
)@@G@@@ @@@@@MASM,S PAGED-IO,PAGED-IO     @ @@@@@HDG,P  ******  SCAN  ******  TK
)@@G@@@#@@@@@MASM,S SCAN,SCAN @ @@@@@HDG,P  ******  SFIASG  ******@^@@@@@MASM,TL
)@@G@@S SFIASG,SFIASG   @ @@@@@HDG,P  ******  TBTREE  ******@^@@@@@MASM,S TBTRTM
)@@G@@EE,TBTREE   @A@@@@@HDG,P  ******  UTILITY  ******     @^@@@@@MASM,S UTILTN
)@@G@@ITY,UTILITY @ @@@@@HDG,P  ******  MAP  ******   @#@@@@@MAP,AS MAP,DOWN  TO
)@@G@@@I@@@@@HDG,N                                                            TP
)@@G@@                  ___@@@                                                TQ
)@@G@@            ___@@@@@@@@@*[S@@@*SDFF*@ @@@@@RUN,A JAY777,,JAY,20,1000    TR
)@@G@@@^@@@@@HDG,N  .M,66,6,6 .     @]@@@@@FREE TPF$. @#@@@@@ASG,T TPF$,///999TS
)@@G@@@]@@@@@COPY DOWN. @A@@@@@HDG  ******  DOWNDEF  ****** .L,1 .@^@@@@@PDP,LTT
)@@G@@M DOWNDEF,DOWNDEF @B@@@@@HDG  ******  ED$PROCS  ****** .L,1 .     @ @@@@TU
)@@G@@@PDP,LM ED$PROCS,ED$PROCS     @A@@@@@HDG  ******  FIDEF$  ****** .L,1 . TV
)@@G@@@^@@@@@PDP,LM FIDEF$,FIDEF$   @A@@@@@HDG  ******  CHECK  ****** .L,1 .  TW
)@@G@@@^@@@@@MASM,SE CHECK,CHECK    @A@@@@@HDG  ******  COMPARE  ****** .L,1 .TX
)@@G@@@^@@@@@MASM,SE COMPARE,COMPARE@A@@@@@HDG  ******  DOWN  ****** .L,1 .   TY
)@@G@@@#@@@@@MASM,SE DOWN,DOWN@A@@@@@HDG  ******  DOWNPCF  ****** .L,1 .@^@@@@TZ
)@@G@@@MASM,SE DOWNPCF,DOWNPCF@A@@@@@HDG  ******  DOWNTCF  ****** .L,1 .@^@@@@UA
)@@G@@@MASM,SE DOWNTCF,DOWNTCF@A@@@@@HDG  ******  DOWNTOC  ****** .L,1 .@^@@@@UB
)@@G@@@MASM,SE DOWNTOC,DOWNTOC@A@@@@@HDG  ******  ERROR  ****** .L,1 .  @^@@@@UC
)@@G@@@MASM,SE ERROR,ERROR    @A@@@@@HDG  ******  E$CHAR  ****** .L,1 . @^@@@@UD
)@@G@@@MASM,SE E$CHAR,E$CHAR  @A@@@@@HDG  ******  GET  ****** .L,1 .    @#@@@@UE
)@@G@@@MASM,SE GET,GET  @A@@@@@HDG  ******  ISDFI  ****** .L,1 .  @^@@@@@MASM,UF
)@@G@@SE ISDFI,ISDFI    @A@@@@@HDG  ******  MATCH  ****** .L,1 .  @^@@@@@MASM,UG
)@@G@@SE MATCH,MATCH    @B@@@@@HDG  ******  PAGED-IO  ****** .L,1 .     @ @@@@UH
)@@G@@@MASM,SE PAGED-IO,PAGED-IO    @A@@@@@HDG  ******  SCAN  ****** .L,1 .   UI
)@@G@@@#@@@@@MASM,SE SCAN,SCAN@A@@@@@HDG  ******  SFIASG  ****** .L,1 . @^@@@@UJ
)@@G@@@MASM,SE SFIASG,SFIASG  @A@@@@@HDG  ******  TBTREE  ****** .L,1 . @^@@@@UK
)@@G@@@MASM,SE TBTREE,TBTREE  @A@@@@@HDG  ******  UTILITY  ****** .L,1 .@^@@@@UL
)@@G@@@MASM,SE UTILITY,UTILITY@[@@@@@HDG,N@#@@@@@MAP,S MAP,DOWN   @]@@@@@CULL,UM
)@@G@@IE    ___@@@LITY,UTILITY@[@@@@@HDG,N@#@@@@@MAP,S MAP,DOWN   @]@@@@@CULL,UN
)@@G@@IE    ___@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*[S@@@*SDFF*@[@@@@.     UO
)@@G@@@H@@@@.         THE FOLLOWING USAGE OF DEF, FOLLOWED BY EQU'S (WITHOUT AUP
)@@G@@STERISKS ON @H@@@@.         THE LABELS), FOLLOWED BY A SINGLE ASTERISKEDUQ
)@@G@@ PROC ENTRANCE LINE,    @G@@@@.         OFFERS TIME AND SPACE EFFICIENCIUR
)@@G@@ES TO THE 1108/1110 ASSEMBLER.@G@@@@.         SEE DOCUMENTATION ON THIS US
)@@G@@IN 1100 SERIES SYSTEMS MEMORANDUM,  @G@@@@.         REVISION 10, PARAGRAUT
)@@G@@PH 6.1.6, 'THE DEF DIRECTIVE IN PDP'.     @[@@@@.     @H@@@@.         THUU
)@@G@@IS ELEMENT EQUATES THE PROPER NUMERIC VALUES TO THE FULL SET OF   @H@@@@UV
)@@G@@.         MNEMONICS FOR THE USER SET OF REGISTERS (INCLUDING THOSE FOR 1UW
)@@G@@110   @H@@@@.         'J-REGISTER MODE' CHARACTER EDITING), AND FOR ALL UX
)@@G@@WHOLE AND PARTIAL @ @@@@.         WORD REFERENCES.    @[@@@@.     @H@@@@UY
)@@G@@.         THE MNEMONICS X12 THROUGH X15 ARE PURPOSELY NOT INCLUDED.  THIUZ
)@@G@@S IS  @H@@@@.         TO ENCOURAGE THE USE OF THE MNEMONICS A0 THROUGH AVA
)@@G@@3, CONSISTENTLY   @H@@@@.         THROUGHOUT 1100 SERIES CODE, WHEN REFEVB
)@@G@@RENCING THESE FOUR OVERLAPPED @ @@@@.         (X OR A) REGISTERS. @[@@@@VC
)@@G@@.     @#@@@@          DEF     @I@@@@.                                   VD
)@@G@@                                    . UOMMOD    @I@@@@. UOMMOD - WE HAVEVE
)@@G@@ REMOVED THE DEFINITION OF 'X0' WHICH, IF USED,       . UOMMOD    @I@@@@VF
)@@G@@. USUALLY LEADS TO TROUBLE.                                             VG
)@@G@@. UOMMOD    @I@@@@.                                                     VH
)@@G@@                  . UOMMOD    @^@@@@X1        EQU       1   @^@@@@X2    VI
)@@G@@    EQU       2   @^@@@@X3        EQU       3   @^@@@@X4        EQU     VJ
)@@G@@  4   @^@@@@X5        EQU       5   @^@@@@X6        EQU       6   @^@@@@VK
)@@G@@X7        EQU       7   @^@@@@X8        EQU       010 @^@@@@X9        EQVL
)@@G@@U       011 @^@@@@X10       EQU       012 @^@@@@X11       EQU       013 VM
)@@G@@@^@@@@A0        EQU       014 @^@@@@A1        EQU       015 @^@@@@A2    VN
)@@G@@    EQU       016 @^@@@@A3        EQU       017 @^@@@@A4        EQU     VO
)@@G@@  020 @^@@@@A5        EQU       021 @^@@@@A6        EQU       022 @^@@@@VP
)@@G@@A7        EQU       023 @^@@@@A8        EQU       024 @^@@@@A9        EQVQ
)@@G@@U       025 @^@@@@A10       EQU       026 @^@@@@A11       EQU       027 VR
)@@G@@@^@@@@A12       EQU       030 @^@@@@A13       EQU       031 @^@@@@A14   VS
)@@G@@    EQU       032 @^@@@@A15       EQU       033 @^@@@@R1        EQU     VT
)@@G@@  0101@^@@@@R2        EQU       0102@^@@@@R3        EQU       0103@^@@@@VU
)@@G@@R4        EQU       0104@^@@@@R5        EQU       0105@^@@@@R6        EQVV
)@@G@@U       0106@^@@@@R7        EQU       0107@^@@@@R8        EQU       0110VW
)@@G@@@^@@@@R9        EQU       0111@^@@@@R10       EQU       0112@^@@@@R11   VX
)@@G@@    EQU       0113@^@@@@R12       EQU       0114@^@@@@R13       EQU     VY
)@@G@@  0115@^@@@@R14       EQU       0116@^@@@@R15       EQU       0117@^@@@@VZ
)@@G@@SR1       EQU       0103@^@@@@SR2       EQU       0104@^@@@@SR3       EQWA
)@@G@@U       0105@^@@@@J0        EQU       0106@^@@@@J1        EQU       0107WB
)@@G@@@^@@@@J2        EQU       0110@^@@@@J3        EQU       0111@^@@@@W     WC
)@@G@@    EQU       0   @^@@@@H2        EQU       1   @^@@@@H1        EQU     WD
)@@G@@  2   @^@@@@XH2       EQU       3   @^@@@@XH1       EQU       4   @^@@@@WE
)@@G@@T3        EQU       5   @^@@@@T2        EQU       6   @^@@@@T1        EQWF
)@@G@@U       7   @^@@@@S6        EQU       010 @^@@@@S5        EQU       011 WG
)@@G@@@^@@@@S4        EQU       012 @^@@@@S3        EQU       013 @^@@@@S2    WH
)@@G@@    EQU       014 @^@@@@S1        EQU       015 @^@@@@U         EQU     WI
)@@G@@  016 @^@@@@XU        EQU       017 @^@@@@Q2        EQU       4   @^@@@@WJ
)@@G@@Q4        EQU       5   @^@@@@Q3        EQU       6   @^@@@@Q1        EQWK
)@@G@@U       7   @I@@@@.                                                     WL
)@@G@@                  . UOMMOD    @I@@@@. UOMMOD - DEFINE TYPE$REP TO DESIGNWM
)@@G@@ATE BANKS AS WRITE-PROTECTED        . REPBIT    @I@@@@.                 WN
)@@G@@                                                      . UOMMOD    @I@@@@WO
)@@G@@TYPE$REP  EQU       0100              . 'TYPE TYPE$REP' => NO IBANK ST  WP
)@@G@@. REPBIT    @I@@@@.                                                     WQ
)@@G@@                  . UOMMOD    @I@@@@. UOMMOD - TO SAVE PAPER DURING VOLUWR
)@@G@@MINOUS ASSEMBLER LISTINGS,          . UOMMOD    @I@@@@.  INVOKING AXR$ AWS
)@@G@@UTOMATICALLY SETS BRIEF MODE (ONE OUTPUT LINE         . UOMMOD    @I@@@@WT
)@@G@@.  PER SOURCE LINE). BRIEF MODE DISABLED VIA  AXR$,ANYTHING .           WU
)@@G@@. UOMMOD    @I@@@@.                                                     WV
)@@G@@                  . UOMMOD    @I@@@@P         PROC      1               WW
)@@G@@  . TO REFERENCE P(0,1), MUST HAVE  . UOMMOD    @I@@@@AXR$*     NAME    WX
)@@G@@  0                 . LINE TO ENTER ON. SORRY.        . UOMMOD    @I@@@@WY
)@@G@@ DO P(0,1)=0 , BRIEF       . UNLESS SPECIFIED, TURN ON UOM BRIEF MODE   WZ
)@@G@@. UOMMOD    @#@@@@          END     ___       EQU       021 @^@@@@A6    XA
)@@G@@    EQU       022 @^@@@@A7        EQU       023 @^@@@@A8        EQU     XB
)@@G@@*[S@@[*SDFF*@^@@@@^@)^@)^@)^@)^@)C- C0)^@)@[@@@@ 0)^@)@G@@@@ 0)E-*G(3G*)XC
)@@G@@GD2G*)HD,HD4HD-H))GT\H1&HD$I(2GD4HD\H0)I[-IL-H(>I->IL3 0)^@)@[@@@@ 0)^@)XD
)@@G@@@J@@@@D- E1 D))^@)^@)C(LE*)^@)^@)^@)AS)^@)^@)^@)^@)^@)^@)^@)^@) 0)GT5IL2XE
)@@G@@G(,I))H->I1>H))G(1I(-I->@K@@@@E1 ELNDDJD0)^@)C(LE*)^@)^@)^@)AK)^@)^@)^@)XF
)@@G@@^@)^@)^@)^@)^@) 0)GT5IL2G(,I))I1>IL3HD\H0)G(1I(-I->^@)@K@@@@D-[D[ CD^^@)XG
)@@G@@^@)C(LE*)^@)^@)^@)A)0A@)^@)^@)^@)^@)^@)^@)^@) 0)G->G1-I(?I))H-\H9:^[-H[>XH
)@@G@@GD=^[3I[>GS)@M@@@@CLPC1ID8)^@)^@)C(LE*)^@)^@)^@)AC2^@)^@)^@)^@)^@)^@)^@)XI
)@@G@@^@) 0)H15H(+G(2^[\G0)GL5G1&G(2IS)I[>IK)HD,I[5I))G1(H->@M@@@@CLPC1GC(I^@)XJ
)@@G@@^@)C(LE*)^@)^@)^@)A)4B@)^@)^@)^@)^@)^@)^@)^@) 0)IT(H1$H->^[+I(&G1>IK)H->XK
)@@G@@H1$I-*^[&H92^[(H10I(4^@)@M@@@@DDID- D0)^@)^@)C(LE*)^@)^@)^@)A*1AK)^@)^@)XL
)@@G@@^@)^@)^@)^@)^@) 0)HD,G->J@)H->H1$I-*^[&H92^[DET^C1D^[-GT<G(3IS)^@)@I@@@@XM
)@@G@@DDHD- D0)^@)^@)C(LE*)^@)^@)^@)AS3^@)^@)^@)^@)^@)^@)^@)^@) 0)H95I-0I(4^[-XN
)@@G@@IL>GC)IT0G(<@M@@@@DD[CLGC(I^@)^@)C(LE*)^@)^@)^@)A00^@)^@)^@)^@)^@)^@)^@)XO
)@@G@@^@) 0)H(-J@)HD!GD$G*)GD2G(-^[?G(,G94H@)G1\IK)HD,I[5I))@K@@@@E[ C(FEC)^@)XP
)@@G@@^@)C(LE*)^@)^@)^@)A0)^@)^@)^@)^@)^@)^@)^@)^@) 0)G->G1-I(?I))I[>G(:^[0GD2XQ
)@@G@@GD!G(4G(2^@)@I@@@@E9FCDMC([^@)^@)C(LE*)^@)^@)^@)CLPC1ID8%CLPC1GC(I^@)^@)XR
)@@G@@^@) 0)I9\IL:^[-IL>GC)H->H1$I-*@L@@@@C-ODDHC*)^@)^@)C(LE*)^@)^@)^@)A*%B@%XS
)@@G@@B@)^@)^@)^@)^@)^@)^@) 0)H(-G9(GS)I1-H-5G*)G1\IK)H(>H(\IL9^[4HD!G*)@A@@@@XT
)@@G@@CTJE[O^@)^@)^@)C(LE*)^@)^@)^@)A@)^@)@[@@@@ 0)^@)@H@@@@ 0)E-*G*)G1\H-?H97XU
)@@G@@HD,G8)GD2G*)G(2IL\IK)GT\G->^[=G(3HD$H1-I-(H9,IS)G1\IK)I-*G*)@H@@@@ 0)^@)XV
)@@G@@^@)^[3I(+IL\I(4HD,G*)C(MELJEK,^@)CD?H))GT-H-?IS)I-\^[ ELMD9M^[2G(3I(?I))XW
)@@G@@@A@@@@ 0)^@)^@)^[(H0)I->IL!HD,GD4HD\H0,^@)@[@@@@ 0)^@)@M@@@@DDNC-ADD ELMXX
)@@G@@^@)C(LE*)^@)^@)^@)AC)^@)^@)^@)^@)^@)^@)^@)^@) 0)G(2IL\IK)IL>I-5IL,^[&IL\XY
)@@G@@H*)DDNC-ADC)GT\H(0H->J@)@M@@@@ET^C1JC(MEK)^@)C(LE*)^@)^@)^@)AK)^@)^@)^@)XZ
)@@G@@^@)^@)^@)^@)^@) 0)G(2IL\IK)IL>I-5IL,^[&IL\H*)GC)ET^C1J^[2H95I-(H1>@N@@@@YA
)@@G@@E[AE[ ELM^@)^@)C(LE*)^@)^@)^@)AS)^@)^@)^@)^@)^@)^@)^@)^@) 0)H1\H1'^[[AK)YB
)@@G@@IL>I-5IL,G(=^[&IL\H*)E[AE@)G15H1<I-(H9,^@)@I@@@@D9QC1GC(MEK)^@)C(LE*)^@)YC
)@@G@@^@)^@)A))^@)^@)^@)^@)^@)^@)^@)^@) 0)IT4H92GD$G*)H96G(2G1?H97@K@@@@C9 E- YD
)@@G@@ELM^@)^@)C(LE*)^@)^@)^@)A*)^@)^@)^@)^@)^@)^@)^@)^@) 0)IL>GD?H-9^[-H0)DDNYE
)@@G@@C-ADC)G(2IL\IK)^@)@N@@@@E-JCT ELM^@)^@)C(LE*)^@)^@)^@)A0)^@)^@)^@)^@)^@)YF
)@@G@@^@)^@)^@) 0)G(2IL\IK)HD,^[0IL\GT>IT3HD,G8)I[2H9$^[&HD?G*)E-JCS)^@)@P@@@@YG
)@@G@@C(GC-PE[ ELM^@)C(LE*)^@)^@)^@)A8)^@)^@)^@)^@)^@)^@)^@)^@) 0)G-5I[?HD<GD4YH
)@@G@@G*)G(?I))H1-H(>^[(H0)I-2G(>^@)^@)^@)^@)^@)^@)^@)I@)^@)@O@@@@D(DF[HD9^C(MYI
)@@G@@EK)C(LE*)^@)^@)^@)B@)^@)^@)^@)^@)^@)^@)^@)^@) 0)GD4I->H(0I))I-\^[^D9RD0)YJ
)@@G@@I[2H9$IL-H*)GD,G))G--I--^[&HD?G*)^@)@O@@@@D1JE(NC(MEK)^@)C(LE*)^@)^@)^@)YK
)@@G@@BC)^@)^@)^@)^@)^@)^@)^@)^@) 0)G15IL4H[>IK)G(8G(<I(4HD\H0)I(3G(?G(3IS)^@)YL
)@@G@@^@)^@)^@)^@)^@)^@)@J@@@@C1DD- ELM^@)^@)C(LE*)^@)^@)^@)AC0^@)^@)^@)^@)^@)YM
)@@G@@^@)^@)^@) 0)HD?H->G9-H))G1(H->^[4JD0G*)^@)@L@@@@CTTCT ELM^@)^@)C(LE*)^@)YN
)@@G@@^@)^@)AC1^@)^@)^@)^@)^@)^@)^@)^@) 0)HD?H->G9-H))GT9GT?G*)IT0G(<HD&HD<GD4YO
)@@G@@HD\H0)@J@@@@ETDFL ELM^@)^@)C(LE*)^@)^@)^@)AC2^@)^@)^@)^@)^@)^@)^@)^@) 0)YP
)@@G@@JL>IL\^[?G(,G94H@)G(?G(!G(,I))@O@@@@D1JC(GE- ELM^@)C(LE*)^@)^@)^@)AC3^@)YQ
)@@G@@^@)^@)^@)^@)^@)^@)^@) 0)H1\^[>H-4^[,GD!G*)GD6GD(H--GL?G*)G1\IK)E@!H90I))YR
)@@G@@G-\I9,G--I->@N@@@@DDJC(MEK)^@)^@)C(LE*)^@)^@)^@)AC4^@)^@)^@)^@)^@)^@)^@)YS
)@@G@@^@) 0)DC\D8)G(2IL\IK)HD,^[(H1(I-(GD?^[4G(3I))H9&^[&HD?G(3^@)@N@@@@D9KD1 YT
)@@G@@ELM^@)^@)C(LE*)^@)^@)^@)AC5^@)^@)^@)^@)^@)^@)^@)^@) 0)G(2IL\IK)IL>I-5IL,YU
)@@G@@^[&IL\H*)DDNC-ADDJCC) *)H9,^[\I[>H0)@M@@@@D9PE-ADDGC(MEK)C(LE*)^@)^@)^@)YV
)@@G@@AC6^@)^@)^@)^@)^@)^@)^@)^@) 0)HD!I[2H90G(2^[&HD?G*)I-9I[>^[&H92^[\I(4I[5YW
)@@G@@I))^@)@N@@@@C1[E-[D))^@)^@)C(LE*)^@)^@)^@)AC7^@)^@)^@)^@)^@)^@)^@)^@) 0)YX
)@@G@@H(3G8)I[2HD,I->G)) *)G1-I--H))G(8HD4^[\H0)G(2IL\IK)^@)@[@@@@ 0)^@)@H@@@@YY
)@@G@@ 0)E-*G*)G1\H-?H97HD,G8)GD2G*)G(2IL\IK)GT\G->^[=G(3HD$H1-I-(H9,IS)G1\IK)YZ
)@@G@@I-*G*)@I@@@@ 0)^@)^@)^[>IL2H92^[3I(+IL\I(4HD,G*)E[#C1 ELMD9M 0)^@)^[HH93ZA
)@@G@@I))GT-H-?IS)I-\^[4H[(IS)@I@@@@ 0)^@)^@)^[3I(+IL\I(4HD,G*)G-\^[,H94^[2G(3ZB
)@@G@@I(?I))HD,^[4G(2H((H1-I-(H9, ))HD,IT4G(-G))@G@@@@ 0)^@)^@)^[-I[0IL\I[2HD-ZC
)@@G@@I->^[-GT4HD\H0)HD3^[4GD:G(, ))GC)I9-IL,HD,G8)HD3@F@@@@ 0)^@)^@)^[0IL(H14ZD
)@@G@@G(=^[-H1=^[2G(<H96G(2JC)HD3^[-I-4G(!I[4G(= 0)^@)@[@@@@ 0)^@)@M@@@@ETOCDMZE
)@@G@@C(MEK1^@)C(LE*)^@)^@)^@)AC)^@)^@)^@)^@)^@)^@)^@)^@) 0)G--I--^[\GT<I(2IS)ZF
)@@G@@GL>G1\IL>^@%^[<GD2G))HD,^[KCTA@L@@@@ETOCDMC(MEK2^@)C(LE*)^@)^@)^@)AK)^@)ZG
)@@G@@^@)^@)^@)^@)^@)^@)^@) 0) K)GT-IL=^[(IS)AD3I))HD,^[K (\I[4^[KCTA^@)@N@@@@ZH
)@@G@@ETOCDMC(MEK3^@)C(LE*)^@)^@)^@)AS)^@)^@)^@)^@)^@)^@)^@)^@) 0) K)GT-IL=^[\ZI
)@@G@@I-*G(2^[4H[-H0)AD3I))HD,^[K (\I[4^[KCTA^@)@M@@@@C-PE[ ELM^@)^@)C(LE*)^@)ZJ
)@@G@@^@)^@)A))^@)^@)^@)^@)^@)^@)^@)^@) 0)I-2G(>^[<H9,I--HD,IS)G-5I[?HD<GD4G*)ZK
)@@G@@G(,I-2HD>IS)@L@@@@E-#C1 ELM^@)^@)C(LE*)^@)^@)^@)A*)^@)^@)^@)^@)^@)^@)^@)ZL
)@@G@@^@) 0)G(2IL\IK)HD,^[&H92H((H1$^[OCTA^[3I-2G(-H*)@J@@@@ET ED ELM^@)^@)C(LZM
)@@G@@E*)^@)^@)^@)A*)^@)^@)^@)^@)^@)^@)^@)^@) 0)IL-H1$G*)GT*G(<HS)G(2IL\IK)^@)ZN
)@@G@@@M@@@@E-TE[ ELM^@)^@)C(LE*)^@)^@)^@)A0)^@)^@)^@)^@)^@)^@)^@)^@) 0)G1\IL!ZO
)@@G@@GD4^[>IL2H92^[(H0)E[#C0)GT\IL2^[<GD2G))^@)@[@@@@ 0)^@)@J@@@@ 0)E-*G*)G1\ZP
)@@G@@H-?H97HD,G8)GD2G*)G(?G(!G(,I))I-9I[>^[=G(3HD$H1-I-\IL3^[-H1=^[-IL>^[5IT>ZQ
)@@G@@G))I-\@K@@@@ 0)^@)^@)IT0G(<HD&JC)I-*G*)I-9I[>^[\G0)I-2G(>^[4H8)GT2G(-I->ZR
)@@G@@^[\IK)IT5H(!GD2JC)I-\^[0IL\G-5GT> 0)@[@@@@ 0)^@)@I@@@@ETTD(]^@)^@)^@)C(LZS
)@@G@@E*)^@)^@)^@)AC)^@)^@)^@)^@)^@)^@)^@)^@) 0)IT9H(+H9?HD<^[4JD0G*)^@)@I@@@@ZT
)@@G@@EL D-JCS)^@)^@)C(LE*)^@)^@)^@)AK)^@)^@)^@)^@)^@)^@)^@)^@) 0)IL>H-\GT-I--ZU
)@@G@@GL?G*)I-9I[>@I@@@@CD]ES)^@)^@)^@)C(LE*)^@)^@)^@)AS)^@)^@)^@)^@)^@)^@)^@)ZV
)@@G@@^@) 0)GD+IT\H-5I->^[4JD0G*)^@)@H@@@@D9HD1D^@)^@)^@)C(LE*)^@)^@)^@)A))^@)ZW
)@@G@@^@)^@)^@)^@)^@)^@)^@) 0)H9!HD+I(3^[4JD0G*)@[@@@@ 0)^@)@E@@@@C-JE9IC- C0%ZX
)@@G@@^@)E[MD9#^@)^@)^@) K0^@)^@)^@)^@)^@)^@)^@)^@)^@)@E@@@@^@)^@)^@)^@)^@)C(IZY
)@@G@@C))^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)___^@)^@)^@)^@) 0)HD?H->G9-H))ZZ
)@@G@@GT9GT?G*)IT0G(<HD&HD<GD4HD\H0)@J@@@@ETDFL ELM^@)^@)C(LE*)^@)^@)^@)AC2^@)AA
)@@G@@*[S@@@*SDFF*@[@@@@.     @A@@@@. UNIVERSITY OF MARYLAND EDIT$ PROCS@F@@@@AB
)@@G@@. MODIFIED BY JEFF JEWETT FROM THE ORIGINAL CLASSIC BY D. ZAVE.   @[@@@@AC
)@@G@@.     @ @@@@. REASONS FOR MODIFICATIONS:  @[@@@@.     @A@@@@. 1) TO ALLOAD
)@@G@@W 18 BIT UFIELDS. E.G.  @[@@@@.     @D@@@@.         E$FD1     'RES',,U  AE
)@@G@@        . I$ OR BUST    @C@@@@.   GENERATES A 'T' FLAG WHEN USING STOCK AF
)@@G@@EDIT$P@[@@@@.     @B@@@@. 2) TO ALLOW EQUF'D J-DESIGNATOR. E.G.   @[@@@@AG
)@@G@@.     @ @@@@.   A     EQUF      BLIP,,S3  @B@@@@.         E$COL     BLIPAH
)@@G@@              .   @[@@@@.     @F@@@@.   STOCK EDIT$P GENERATES A 'T' FLAAI
)@@G@@G. SOUND INCREDIBLE, BUT IT'S @G@@@@.   TRUE. WHAT PAIN EXISTS IS DUE ALAJ
)@@G@@MOST ENTIRELY TO THE ILL-CONSIDERED @G@@@@.   (SORRY, DAREK) 'U' DEFAULTAK
)@@G@@ J-DESIGNATOR. IN THE ABOVE EXAMPLE THE   @F@@@@.   STOCK EDIT$P 'SEES' AL
)@@G@@NO EXPLICIT J-DESIG (E.G. BLIP,,J) AND SO @ @@@@.   TRIES TO FORCE A 'U'AM
)@@G@@ IN.  @[@@@@.     @G@@@@. 3) EXTENSIONS TO HANDLE OUR ADDITIONAL ROUTINEAN
)@@G@@S AND PACKET FIELDS.    @[@@@@.     @G@@@@. NOTE THAT MODIFICATIONS (1) AO
)@@G@@AND (3) ARE REFLECTED IN A SIGNIFICANTLY  @F@@@@. LARGER E$AD. IF THE STAP
)@@G@@OCK ASSEMBLER ALLOWED ONE TO 'OR' OFF     @H@@@@. NON-RELOCATABLE FIELDSAQ
)@@G@@ (A PERFECTLY REASONABLE REQUEST, WE THINK), THEN     @B@@@@. THE PROC WAR
)@@G@@OULD BE SUBSTANTIALLY SMALLER.@[@@@@.     @F@@@@. NOTE: WE BELIEVE THAT AS
)@@G@@THIS PROC IS COMPATIBLE WITH STOCK UNIVAC @F@@@@. ASM AND MASM. WE MIGHTAT
)@@G@@ BE WRONG. ANY COMPLAINTS, SUGGESTIONS, OR@E@@@@. EFFUSIVE DEMOSTRATIONSAU
)@@G@@ OF PRAISE SHOULD BE FORWARDED TO:  @[@@@@.     @^@@@@.         JEFF JEWAV
)@@G@@ETT   @^@@@@.         SYSTEMS STAFF @A@@@@.         COMPUTER SCIENCE CENAW
)@@G@@TER   @A@@@@.         UNIVERSITY OF MARYLAND    @B@@@@.         COLLEGE AX
)@@G@@PARK, MARYLAND   20742  @[@@@@/.    @F@@@@.         INTERNAL PACKET DEFIAY
)@@G@@NITIONS FOR USE BY EDIT$ ROUTINES   @[@@@@.     @#@@@@          DEF     AZ
)@@G@@@G@@@@E$VER$$   EQU       '010176'          . UOM VERSION (FIELDATA DATEBA
)@@G@@)     @E@@@@A$EDIT$   EQU       1                 . SIMULATE AEDIT$.    BB
)@@G@@@D@@@@PX        EQU        1                . PACKET POINTER@E@@@@CX    BC
)@@G@@    EQU        2                . CHARACTER POINTER   @D@@@@WX        EQBD
)@@G@@U        3                . WORD POINTER  @]@@@@          . @E@@@@PKT   BE
)@@G@@    EQUF      0,PX                PACKET LOCATION     @E@@@@CI        EQBF
)@@G@@UF      0,CX                CHARACTER INDEX     @D@@@@WI        EQUF    BG
)@@G@@  0,WX                WORD INDEX    @E@@@@QT        EQU       5         BH
)@@G@@        . THIS IS Q4 OR T3    @]@@@@          . @F@@@@EMSGC     EQUF    BI
)@@G@@  PKT,,S2             EMSG$ SIGNAL CHARACTER    @D@@@@IL        EQUF    BJ
)@@G@@  PKT,,S3             IMAGE LENGTH  @D@@@@ILOC      EQUF      PKT,,H2   BK
)@@G@@          IMAGE LOCATION@E@@@@SAV1W     EQU       PKT+1             . FUBL
)@@G@@LLWORD SAVE AREA  @F@@@@SAV1H1    EQUF      SAV1W,,H1           SAVE AREBM
)@@G@@A FOR RETURN POINT@F@@@@SAV1H2    EQUF      SAV1W,,XH2        . ANCILLARBN
)@@G@@Y RETURN SAVE     @G@@@@FPS       EQUF      PKT+2,,S1           SCALE FOBO
)@@G@@R FLOATING POINT EDIT   @G@@@@FPR       EQUF      PKT+2,,S2           FLBP
)@@G@@OATING POINT ROUNDING OPTION  @H@@@@CIM       EQUF      PKT+2,,S3       BQ
)@@G@@    SAVE AREA FOR EMSG$ CHARACTER INDEX   @G@@@@EASCII    EQUF      PKT+BR
)@@G@@2,,H2         . SOMETHING ASCII:QWM,EASC,EASCIN @F@@@@EASC      EQUF    BS
)@@G@@  PKT+2,,S4         . ASCII (QUARTERWORD) FLAG  @E@@@@EASCIN    EQUF    BT
)@@G@@  PKT+2,,S5         . ASCII INPUT FLAG    @E@@@@QWM       EQUF      PKT+BU
)@@G@@2,,S6         . QUARTERWORD MODE    @G@@@@WIM       EQUF      PKT+3,,H1 BV
)@@G@@          SAVE AREA FOR EMSG$ WORD INDEX  @E@@@@SAVE1     EQUF      PKT+BW
)@@G@@3,,H2           SAVE AREA FOR PX    @E@@@@SAVE2     EQU       PKT+4     BX
)@@G@@          SAVE AREA FOR CX    @G@@@@ADRASC    EQUF      PKT+5,,H1       BY
)@@G@@  . NON-XLATING ASCII ENTRY POINT   @H@@@@SAVE3     EQUF      PKT+5,,H2 BZ
)@@G@@          SAVE AREA FOR WX (RIGHT HALF ONLY)    @H@@@@DPC       EQUF    CA
)@@G@@  PKT+6,,S1           CHARACTER FOR DOUBLE PRECISION SCALE  @H@@@@SPC   CB
)@@G@@    EQUF      PKT+6,,S2           CHARACTER FOR SINGLE PRECISION SCALE  CC
)@@G@@@D@@@@SIGN      EQUF      PKT+6,,S3           SIGN INDICATOR@G@@@@NDP   CD
)@@G@@    EQUF      PKT+6,,S4         . DIGITS BEFORE DECIMAL POINT     @G@@@@CE
)@@G@@EMSGCA    EQUF      PKT+6,,QT         . EMSG$ ASCII SIGNAL CHARACTER    CF
)@@G@@@G@@@@FZERO     EQUF      PKT+7,,S1           FLOATING POINT ZERO INDICACG
)@@G@@TOR   @E@@@@FCOL      EQUF      PKT+7,,S2           FINAL COLUMN OR ZEROCH
)@@G@@@G@@@@NDF       EQUF      PKT+7,,S3           DIGITS FOLLOWING DECIMAL PCI
)@@G@@OINT  @D@@@@SCALE     EQUF      PKT+7,,XH2          POWER OF TEN  @G@@@@CJ
)@@G@@VALUE     EQU       PKT+8             . DBLWRD SAVE AREA FOR DIGITS     CK
)@@G@@@I@@@@DPCA      EQUF      PKT+10,,Q1        . ASCII CHARACTER FOR DOUBLECL
)@@G@@ PRECISION SCA    @I@@@@SPCA      EQUF      PKT+10,,Q2        . ASCII CHCM
)@@G@@ARACTER FOR SINGLE PRECISION SCA    @E@@@@ETBL      EQUF      PKT+10,,XHCN
)@@G@@2       . CONVERSION TABLE    @G@@@@ADRASCX   EQU       PKT+11          CO
)@@G@@  . FD/ASCII XLATING ENTRY POINT    @G@@@@XAF       EQUF      ADRASCX,,SCP
)@@G@@1       . EXTENDED ASCII-FD TRANSLATION   @F@@@@SAV12W    EQUF      PKT+CQ
)@@G@@12            . ASCII ROUTINE SAVE AREA   @G@@@@ADRXALF   EQU       PKT+CR
)@@G@@13            . CASE-PRESRVNG XLATING E. P.     @]@@@@          . @B@@@@CS
)@@G@@E$DEF*    PROC      *0,0              .   @H@@@@ DO 0=0=0 ,     $INFO   CT
)@@G@@  9 1,3             . OUR GUARENTEE: NO IBANK STORES  @D@@@@STORE*    EQCU
)@@G@@UF      0,*CX             . STORE CHAR    @B@@@@          END           CV
)@@G@@              .   @[@@@@/.    @^@@@@.   THE UOM EDIT$ PACKET@[@@@@.     CW
)@@G@@@F@@@@.    THE SIX TO FOURTEEN WORD EDIT$ PACKET CONTAINS USER-DEFINED  CX
)@@G@@@F@@@@.    PARAMETERS, AND INTERNAL FLAGS USED BY THE EDIT$ ROUTINES.   CY
)@@G@@@[@@@@.     @F@@@@.    EDIT$ USES THE FOLLOWING PACKET. WORDS 6 THROUGH CZ
)@@G@@9 ARE NEEDED@G@@@@.    BY THE FLOATING POINT ROUTINES. WORDS 6 THROUGH 1DA
)@@G@@2 ARE REQUIRED    @E@@@@.    FOR ASCII CAPABILITIES. EXTENDED ASCII DEMADB
)@@G@@NDS WORD 13.@[@@@@.     @F@@@@.   ......................................DC
)@@G@@....................... @F@@@@. 0 :         : *EMSGC  :   *IL   :       DD
)@@G@@     *ILOC            : @F@@@@.   ......................................DE
)@@G@@....................... @F@@@@. 1 :            SAV1H1           :       DF
)@@G@@    SAV1H2            : @F@@@@.   ......................................DG
)@@G@@....................... @F@@@@. 2 :  *FPS   :  *FPR   :   CIM   :  *EASCDH
)@@G@@  : *EASCIN :   QWM   : @F@@@@.   ......................................DI
)@@G@@....................... @F@@@@. 3 :             WIM             :       DJ
)@@G@@     SAVE1            : @F@@@@.   ......................................DK
)@@G@@....................... @F@@@@. 4 :                           SAVE2     DL
)@@G@@                      : @F@@@@.   ......................................DM
)@@G@@....................... @F@@@@. 5 :            ADRASC           :       DN
)@@G@@     SAVE3            : @F@@@@.   ......................................DO
)@@G@@....................... @F@@@@. 6 :  *DPC   :  *SPC   :  SIGN   :   NDP DP
)@@G@@  :      *EMSGCA      : @F@@@@.   ......................................DQ
)@@G@@....................... @F@@@@. 7 :  ZERO   :  FCOL   :   NDF   :       DR
)@@G@@     SCALE            : @F@@@@.   ......................................DS
)@@G@@....................... @F@@@@. 8 :                                     DT
)@@G@@                      : @F@@@@.   .                           VALUE     DU
)@@G@@                      . @F@@@@. 9 :                                     DV
)@@G@@                      : @F@@@@.   ......................................DW
)@@G@@....................... @F@@@@. 10:    *DPCA     :    *SPCA     :       DX
)@@G@@     *ETBL            : @F@@@@.   ......................................DY
)@@G@@....................... @F@@@@. 11:  *XAF   : NOT USED:    0    :       DZ
)@@G@@    ADRASCX           : @F@@@@.   ......................................EA
)@@G@@....................... @F@@@@. 12:                           SAV12W    EB
)@@G@@                      : @F@@@@.   ......................................EC
)@@G@@....................... @F@@@@. 13: NOT USED: NOT USED:    0    :       ED
)@@G@@    ADRXALF           : @F@@@@.   ......................................EE
)@@G@@....................... @[@@@@.     @F@@@@.    THE STARRED PACKET FIELDSEF
)@@G@@ ARE SET BY THE USER; THE OTHERS ARE@ @@@@.    USED INTERNALLY BY EDIT$.EG
)@@G@@@[@@@@.     @[@@@@/.    @G@@@@.   EXTERNAL DEFINITIONS  (FOR JOE USER). EH
)@@G@@JOE SUPPLIES PACKET ADDRESS.  @[@@@@.     @F@@@@P$        PROC      *1  EI
)@@G@@              . FIELD IS ADDR OF PACKET   @B@@@@E$FIELDS* NAME          EJ
)@@G@@              .   @[@@@@.     @D@@@@PKT       EQUF      P$(1,1),P$(1,2) EK
)@@G@@  . DEFINE STUFF  @[@@@@.     @C@@@@QT        EQU       05              EL
)@@G@@  . Q4 OR T3@F@@@@EMSGC*    EQUF      PKT,,12             EMSG$ SIGNAL CEM
)@@G@@HARACTER    @D@@@@IL*       EQUF      PKT,,11             IMAGE LENGTH  EN
)@@G@@@D@@@@ILOC*     EQUF      PKT,,01             IMAGE LOCATION@G@@@@FPS*  EO
)@@G@@    EQUF      PKT+2,,13           SCALE FOR FLOATING POINT EDIT   @G@@@@EP
)@@G@@FPR*      EQUF      PKT+2,,12           FLOATING POINT ROUNDING OPTION  EQ
)@@G@@@F@@@@EASC*     EQUF      PKT+2,,10         . ASCII (QUARTERWORD) FLAG  ER
)@@G@@@E@@@@EASCIN*   EQUF      PKT+2,,9          . ASCII INPUT FLAG    @H@@@@ES
)@@G@@DPC*      EQUF      PKT+6,,13           CHARACTER FOR DOUBLE PRECISION SET
)@@G@@CALE  @H@@@@SPC*      EQUF      PKT+6,,12           CHARACTER FOR SINGLEEU
)@@G@@ PRECISION SCALE  @G@@@@EMSGCA*   EQUF      PKT+6,,QT         . EMSG$ ASEV
)@@G@@CII SIGNAL CHARACTER    @I@@@@DPCA*     EQUF      PKT+10,,07        . ASEW
)@@G@@CII CHARACTER FOR DOUBLE PRECISION SC     @I@@@@SPCA*     EQUF      PKT+EX
)@@G@@10,,04        . ASCII CHARACTER FOR SINGLE PRECISION SC     @E@@@@ETBL* EY
)@@G@@    EQUF      PKT+10,,003       . CONVERSION TABLE    @G@@@@XAF*      EQEZ
)@@G@@UF      PKT+11,,13        . EXTENDED ASCII-FD TRANSLATION   @D@@@@      FA
)@@G@@    END                         . ALL FOR YOU   @[@@@@.     @B@@@@.   ASFB
)@@G@@CII XLATION DEFS. CALL AFTER E$DEF. @[@@@@.     @B@@@@          DEF     FC
)@@G@@                    .   @D@@@@LAHEAD(WX) EQUF     PKT+13,,H1        . LOFD
)@@G@@OKAHEAD     @C@@@@LAHEAD(CX) EQUF     PKT+7,,H2         . FOR XAF @E@@@@FE
)@@G@@CHARPT    EQUF      VALUE,,H1         . CHARACTER POINTER   @D@@@@CXRET FF
)@@G@@    EQUF      VALUE,,H2         . CX RETURN     @E@@@@FINRET    EQUF    FG
)@@G@@  VALUE+1,,H1       . FINAL X11 RETURN    @G@@@@BLNKADR   EQUF      PKT+FH
)@@G@@7,,H1         . ADDR OF LAST NON-BLANK CHAR     @D@@@@IMGMD     EQUF    FI
)@@G@@  PKT+11,,S2        . IMAGE MODE    @E@@@@EFDFG     EQUF      PKT+11,,S3FJ
)@@G@@        . EFD[1,2,3]$ FLAG    @B@@@@E$APROC*  PROC      *0,0            FK
)@@G@@  .   @B@@@@          END                         .   @[@@@@/.    @F@@@@FL
)@@G@@. ORIGINAL GENERALIZED ADDRESSING PROC, INCLUDED FOR COMPLETENESS.@[@@@@FM
)@@G@@.     @G@@@@.  +(E$AD S,T U) SCANS P$(S,T) FOR UFIELD, P$(S,T+1) FOR EXPFN
)@@G@@LICIT XREG, @G@@@@.         P$(S,T+2) FOR EXPLICIT J-DESIGNATOR. UFIELD FO
)@@G@@MAY BE EQUFFED. IF@D@@@@.         NO J-DESIG FOUND, THEN DEFAULT U IS USFP
)@@G@@ED.   @F@@@@.  +(E$AD0 S,T U) PERFORMS AS ABOVE, BUT ONLY P$(S,T) IS SCAFQ
)@@G@@NNED. @E@@@@.         THERE ARE NO EXPLICIT XREG OR J-DESIG FIELDS.     FR
)@@G@@@[@@@@.     @F@@@@. DECODE A U-FIELD INTO ITS CONSTITUENT ELEMENTS. THISFS
)@@G@@ PROC USES  @G@@@@. SUBTRACTION TO AVOID SPURIOUS R-FLAGS WHICH MIGHT OTFT
)@@G@@HERWISE ARISE.    @F@@@@. IN ADDITION, IT DOES NOT ALTER THE FORM OF THEFU
)@@G@@ ORIGINAL U-FIELD,@F@@@@. SINCE IT IS UNKNOWN WHETHER THE U FIELD ALREADFV
)@@G@@Y HAS FORM OR NOT.@[@@@@.     @E@@@@. I HAVE NO SCRUPLES, SO MUCH OF THIFW
)@@G@@S PROC WAS SNARFED FROM @^@@@@. PAT HAGERTY'S STRUC$. @[@@@@.     @]@@@@FX
)@@G@@        DEF @E@@@@G$JBIT(1) EQU 1*/29                   . J-DESIGNATOR BFY
)@@G@@ITS   @^@@@@G$JBIT(2) EQU 1*/28     @^@@@@G$JBIT(3) EQU 1*/27     @^@@@@FZ
)@@G@@G$JBIT(4) EQU 1*/26     @D@@@@G$XBIT(1) EQU 1*/21                   . XRGA
)@@G@@EG BITS     @^@@@@G$XBIT(2) EQU 1*/20     @^@@@@G$XBIT(3) EQU 1*/19     GB
)@@G@@@^@@@@G$XBIT(4) EQU 1*/18     @C@@@@G$HIBI(1) EQU 1*/17                 GC
)@@G@@  . HBIT    @C@@@@G$HIBI(2) EQU 1*/16                   . IBIT    @[@@@@GD
)@@G@@.     @[@@@@.     @B@@@@Q         PROC      *2,0              .   @G@@@@GE
)@@G@@E$AD*     NAME      1                 . COMPUTE GENERALIZED ADDRESS     GF
)@@G@@@F@@@@E$AD0*    NAME      0                 . PROCESS ONE FIELD ONLY    GG
)@@G@@@F@@@@MF   EQU  Q(0,0)                      . TRUE IF MANY-SUBFIELDS    GH
)@@G@@@C@@@@S    EQU  Q(1,1)                      . FIELD   @C@@@@T    EQU  Q(GI
)@@G@@1,2)                      . SUBFIELD@H@@@@HBIT EQU P$(S,*T+1)*MF        GJ
)@@G@@        . ON IF UFIELD,*XREG : ZERO IF E$AD0    @H@@@@IBIT EQU P$(S,*T)*GK
)@@G@@MF                  . ON IF *UFIELD      : ZERO IF E$AD0    @G@@@@. NOTEGL
)@@G@@ THAT WE CAN'T PROCESS THE NEXT 4 LINES AS P$(S,T+1)*(EXISTENCE=1)@G@@@@GM
)@@G@@. BECAUSE OF PROPAGATION OF FORMS. E.G. A*0 => ZERO WITH FORM OF C.     GN
)@@G@@@#@@@@. UGLY BUT TRUE.  @E@@@@ DO MF=0 ,XREG EQU  0                 . EXGO
)@@G@@PLICIT XREG SET 0 @F@@@@ DO MF=0 ,EXPJ EQU  0                 . EXPLICITGP
)@@G@@ J-DESIG SET 0    @H@@@@ DO MF ,XREG EQU  P$(S,T+1)           . IF NOT EGQ
)@@G@@$$A0 ,FETCH EXPLICIT XREG     @H@@@@ DO MF ,EXPJ EQU  P$(S,T+2)         GR
)@@G@@  . IF NOT E$$A0 ,FETCH EXPLICIT J-DESIG  @C@@@@. OBTAIN MANIPULATABLE UGS
)@@G@@FIELD FROM ASM OR MASM. @D@@@@     ON   1-(+3>2>1)                  . ONGT
)@@G@@ IF @ASM    @D@@@@IV(1) EQU +(P$(S,T))                  . NO *'S, PLEASEGU
)@@G@@@D@@@@     OFF                              . END OF @ASM   @D@@@@     OGV
)@@G@@N   +3>2>1                      . ON IF @MASM   @F@@@@IV(1) EQU $AP(P$(SGW
)@@G@@,T))                . ONLY THE NON-REL PART     @D@@@@     OFF          GX
)@@G@@                    . END OF @MASM  @[@@@@.     @F@@@@JAY(1)  EQU     0 GY
)@@G@@                    . ASSUME NO EQUF'D J-SPEC   @F@@@@ DO IV(1)>03777777GZ
)@@G@@77                  ; IF VALUE HAS EQUF'D J     @D@@@@  ,K DO 4         HA
)@@G@@                    ; FOR ALL J-BITS@E@@@@    , DO (IV(1)-JAY(1))>(G$JBIHB
)@@G@@T(K)-1) ; IF CURRENT BIT ON   @E@@@@       ,JAY(1) EQU JAY(1)++G$JBIT(K)HC
)@@G@@  . FOLD INTO RESULT    @G@@@@IV(1)   EQU     IV(1)-JAY(1)          . STHD
)@@G@@RIP EQUF'D J FROM OPERAND     @E@@@@JAY(2)  EQU     EXPJ++JAY(1)*/-26   HE
)@@G@@  . GET COMPLETE J-SPEC @F@@@@XRG(1)  EQU     0                     . ASHF
)@@G@@SUME NO EQUF'D X-SPEC   @F@@@@ DO IV(1)>0777777                     ; IFHG
)@@G@@ VALUE HAS EQUF'D X     @D@@@@  ,K DO 4                             ; FOHH
)@@G@@R ALL X-BITS@E@@@@    , DO (IV(1)-XRG(1))>(G$XBIT(K)-1) ; IF CURRENT BITHI
)@@G@@ ON   @E@@@@       ,XRG(1) EQU XRG(1)++G$XBIT(K)  . FOLD INTO RESULT    HJ
)@@G@@@G@@@@IV(1)   EQU     IV(1)-XRG(1)          . STRIP EQUF'D X FROM OPERANHK
)@@G@@D     @E@@@@XRG(2)  EQU     XREG++XRG(1)*/-18     . GET COMPLETE X-SPEC HL
)@@G@@@G@@@@ DO MF=1 , DO (JAY(2)=0)**(P$(S)<(T+2)) ,JAY(2) EQU Q(2,1) . SET DHM
)@@G@@EFALT @G@@@@ DO MF=0 , DO JAY(2)=0                  ,JAY(2) EQU Q(2,1) .HN
)@@G@@ SET DEFALT @F@@@@HIB(1)  EQU     0                     . ASSUME NO EQUFHO
)@@G@@'D H/I BITS @F@@@@ DO  IV(1)>0177777                    ; IF VALUE HAS EHP
)@@G@@QUF'D H OR I@G@@@@  ,K DO 2                             ; FOR BOTH BITS HQ
)@@G@@(OF I$ FORM INSTR)@E@@@@    , DO (IV(1)-HIB(1))>(G$HIBI(K)-1) ; IF CURREHR
)@@G@@NT BIT ON   @E@@@@       ,HIB(1) EQU HIB(1)++G$HIBI(K)  . FOLD INTO RESUHS
)@@G@@LT    @F@@@@UF EQU +(P$(S,T))-HIB(1)-XRG(1)-JAY(1) . STRIP OFF J,X,HI BIHT
)@@G@@TS    @F@@@@HIB(1) EQU (HBIT*2)++IBIT++(HIB(1)*/-16) . ALIGN H AND I BITHU
)@@G@@S     @G@@@@ DO IV(1)<0 ,HIB(1) EQU 3             . IF UFIELD IS NEG, H,HV
)@@G@@I ARE BOTH 1@[@@@@.     @F@@@@  I$  0,JAY(2),0,XRG(2),HIB(1),UF . GENERAHW
)@@G@@TE THE EFFECTIVE UFIELD @D@@@@          END                         . ENHX
)@@G@@D OF E$AD   @[@@@@/.    @#@@@@. BEGIN USER PROCS@[@@@@.     @B@@@@P$    HY
)@@G@@    PROC      *1                .   @C@@@@E$APRT*   NAME      EAPRT$    HZ
)@@G@@        . APRINT$ @E@@@@E$PRTG*   NAME      EPRTG$            . PRINT$ OIA
)@@G@@R APRINT$   @F@@@@E$PRTGA*  NAME      EPRTGA$           . ASCII OR FIELDIB
)@@G@@ATA PRINT$  @D@@@@E$PRTA*   NAME      EPRTA$            . ASCII PRINT$  IC
)@@G@@@G@@@@E$PRT*    NAME      EPRT$             . PRODUCE LITERAL, PRINT, CLID
)@@G@@EAR   @C@@@@E$PRTI*   NAME      EPRTI$            . PRINT   @D@@@@E$APRTIE
)@@G@@I*  NAME      EAPRTI$           . ASCII PRINT   @D@@@@E$CSF*    NAME    IF
)@@G@@  ECSF$             . CSF$ THINGIE  @H@@@@ DO P$(1)>1 , LA    12,+(E$AD IG
)@@G@@1,2 15) . LA[,XU]  A0,P$(1,2),P$(1,3),P$(1,4)   @E@@@@ DO P$(1)>0 , LA  IH
)@@G@@  13,+(E$AD0 1,1 15) . LA,U  A1,P$(1,1)   @B@@@@          LMJ       11,PII
)@@G@@$(0,0)        .   @B@@@@          END                         .   @[@@@@IJ
)@@G@@.     @[@@@@.     @B@@@@P$        PROC      *0,1              .   @E@@@@IK
)@@G@@E$DITX*   NAME      0                 . CLOSE EDIT$ PACKET  @F@@@@E$COLNIL
)@@G@@*   NAME      1                 . RETURN WITH COL NUM IN A0 @F@@@@E$WRDNIM
)@@G@@*   NAME      2                 . RETURN WITH WORD NUM IN A0@F@@@@E$MSGRIN
)@@G@@*   NAME      3                 . REENTER MESSAGE EDITOR    @H@@@@E$CLEAIO
)@@G@@R*  NAME      4                 . CLEAR OUTPUT BUFFER, SET COL TO 0     IP
)@@G@@@D@@@@J         EQU       P$(0,0)           . TARGET ADDRESS@B@@@@ DO J=IQ
)@@G@@0 , LMJ       11,EDITX$         .   @B@@@@ DO J=1 , LMJ       11,ECOLN$ IR
)@@G@@        .   @B@@@@ DO J=2 , LMJ       11,EWRDN$         .   @B@@@@ DO J=IS
)@@G@@3 , LMJ       11,EMSGR$         .   @B@@@@ DO J=4 , LMJ       11,ECLEAR$IT
)@@G@@        .   @B@@@@          END                         .   @[@@@@.     IU
)@@G@@@[@@@@.     @B@@@@P$        PROC      *2                .   @E@@@@E$PAD*IV
)@@G@@    NAME      0                 . PAD OUT CHARACTERS  @H@@@@ DO P$(1)>0 IW
)@@G@@, LA    12,+(E$AD 1,1 15) . LA[,XU]  A0,P$(1,1),P$(1,2),P$(1,3)   @H@@@@IX
)@@G@@ DO P$(2)>0 , LA    13,+(E$AD 2,1 15) . LA[,XU]  A1,P$(2,1),P$(2,2),P$(2IY
)@@G@@,3)   @B@@@@          LMJ       11,EPAD$          .   @B@@@@          ENIZ
)@@G@@D                         .   @[@@@@.     @[@@@@.     @B@@@@P$        PRJA
)@@G@@OC      *1                .   @G@@@@E$DIT*    NAME      1               JB
)@@G@@  . ENTER AND OPEN EDIT$ PACKET     @H@@@@E$DITR*   NAME      2         JC
)@@G@@        . REENTER EDIT$ PACKET AFTER E$DITX     @E@@@@E$CHAR*   NAME    JD
)@@G@@  3                 . INSERT 1 CHARACTER  @F@@@@E$COL*    NAME      4   JE
)@@G@@              . MOVE TO SPECIFIED COL     @F@@@@E$SKIP*   NAME      5   JF
)@@G@@              . SKIP SPECIFIED NUM OF COLS@E@@@@E$MSG*    NAME      6   JG
)@@G@@              . ENTER MESSAGE EDITOR@E@@@@E$MSKP*   NAME      7         JH
)@@G@@        . SKIP MSG FIELDS     @B@@@@ DO P$(1)>0 , LA    12,+(E$AD 1,1 15JI
)@@G@@) .   @D@@@@J         EQU       P$(0,0)           . TARGET ADDRESS@B@@@@JJ
)@@G@@ DO J=1 , LMJ       11,EDIT$          .   @B@@@@ DO J=2 , LMJ       11,EJK
)@@G@@DITR$         .   @B@@@@ DO J=3 , LMJ       11,ECHAR$         .   @B@@@@JL
)@@G@@ DO J=4 , LMJ       11,ECOL$          .   @B@@@@ DO J=5 , LMJ       11,EJM
)@@G@@SKIP$         .   @B@@@@ DO J=6 , LMJ       11,EMSG$          .   @B@@@@JN
)@@G@@ DO J=7 , LMJ       11,EMSKP$         .   @B@@@@          END           JO
)@@G@@              .   @[@@@@.     @[@@@@.     @B@@@@P$        PROC      *1  JP
)@@G@@              .   @D@@@@E$RASE*   NAME      0                 . CLEAR BUJQ
)@@G@@FFER  @H@@@@ DO P$(1)>0 , LA    13,+(E$AD 1,1 15) . LA[,XU]  A1,P$(1,1),JR
)@@G@@P$(1,2),P$(1,3)   @B@@@@          LMJ       11,ERASE$         .   @B@@@@JS
)@@G@@          END                         .   @[@@@@/.    @[@@@@.     @B@@@@JT
)@@G@@P$        PROC      *1                .   @D@@@@E$FD3*    NAME      0   JU
)@@G@@              . INSERT 3 WORDS@H@@@@ DO P$(1)>0 , LA  14,+(E$AD 1,1)+2  JV
)@@G@@  . LA       A2,P$(1,1)+2,P$(1,2),P$(1,3) @E@@@@E$FD2*    NAME      1   JW
)@@G@@              . INSERT TWO WORDS    @G@@@@ DO P$(1)>0 , DL    12,+(E$AD JX
)@@G@@1,1)    . DL       A0,P$(1,1),P$(1,2)     @D@@@@J         EQU       P$(0JY
)@@G@@,0)           . TARGET ADDRESS@B@@@@ DO J=0 , LMJ       11,EFD3$        JZ
)@@G@@  .   @B@@@@ DO J=1 , LMJ       11,EFD2$          .   @B@@@@          ENKA
)@@G@@D                         .   @[@@@@.     @[@@@@.     @B@@@@P$        PRKB
)@@G@@OC      *2                .   @C@@@@E$PACKC*  NAME      0               KC
)@@G@@  . PACK    @H@@@@ DO P$(1)>1 , LA    12,+(E$AD 1,2 15) . LA[,XU]  A0,P$KD
)@@G@@(1,2),P$(1,3),P$(1,4)   @F@@@@ DO P$(0)>1 , LXI   12,+(E$AD0 0,1 15) . LKE
)@@G@@XI[,XU]  A0,P$(0,1)     @E@@@@ DO P$(1)>0 , LA    13,+(E$AD0 1,1 15) . LKF
)@@G@@A[,XU]  A1,P$(1,1)@H@@@@ DO P$(2)>0 , LA    14,+(E$AD 2,1 15) . LA[,XU] KG
)@@G@@ A2,P$(2,1),P$(2,2),P$(2,3)   @B@@@@          LMJ       11,EPACKC$      KH
)@@G@@  .   @B@@@@          END                         .   @[@@@@.     @[@@@@KI
)@@G@@.     @B@@@@P$        PROC      *1                .   @D@@@@E$COPY*   NAKJ
)@@G@@ME      1                 . STRING COPY   @F@@@@E$PACK*   NAME      2   KK
)@@G@@              . STRING COPY WITH PACKING  @H@@@@ DO P$(1)>1 , LA    12,+KL
)@@G@@(E$AD 1,2 15) . LA[,XU]  A0,P$(1,2),P$(1,3),P$(1,4)   @F@@@@ DO P$(0)>1 KM
)@@G@@, LXI   12,+(E$AD0 0,1 15) . LXI[,XU]  A0,P$(0,1)     @E@@@@ DO P$(1)>0 KN
)@@G@@, LA    13,+(E$AD0 1,1 15) . LA[,XU]  A1,P$(1,1)@D@@@@J         EQU     KO
)@@G@@  P$(0,0)           . TARGET ADDRESS@B@@@@ DO J=1 , LMJ       11,ECOPY$ KP
)@@G@@        .   @B@@@@ DO J=2 , LMJ       11,EPACK$         .   @B@@@@      KQ
)@@G@@    END                         .   @[@@@@.     @[@@@@.     @B@@@@P$    KR
)@@G@@    PROC      *1,1              .   @D@@@@E$FW*     NAME      0         KS
)@@G@@        . EFORM$ WORD   @F@@@@I         DO        P$(1) ,P$(0,0) EQU (P$KT
)@@G@@(0,0)*/P$(1,I))++1 .    @B@@@@          +         P$(0,0)           .   KU
)@@G@@@B@@@@          END                         .   @[@@@@.     @[@@@@.     KV
)@@G@@@B@@@@P$        PROC      *1                .   @D@@@@E$MSKPR*  NAME    KW
)@@G@@  0                 . SKIP AND COPY @H@@@@ DO P$(1)>0 , LA    12,+(E$AD KX
)@@G@@1,1 15) . LA[,XU]  A0,P$(1,1),P$(1,2),P$(1,3)   @D@@@@          LMJ     KY
)@@G@@  11,EMSKP$         . SKIP MSG FIELD@C@@@@          LMJ       11,EMSGR$ KZ
)@@G@@        . AND COPY@B@@@@          END                         .   @[@@@@LA
)@@G@@.     @[@@@@.     @B@@@@P$        PROC      *2                .   @G@@@@LB
)@@G@@E$DECFL*  NAME      0                 . LEADING CHARS - FIXED FORMAT    LC
)@@G@@@H@@@@ DO P$(1)>1 , LA 12,+(E$AD 1,2)     . LA[,XU]  A0,P$(1,1+I),P$(1,2LD
)@@G@@+I),P$(1,3+I@E@@@@ DO P$(1)>0 , LA    13,+(E$AD0 1,1 15) . LA[,XU]  A1,PLE
)@@G@@$(1,1)@H@@@@ DO P$(2)>0 , LA    14,+(E$AD 2,1 15) . LA[,XU]  A2,P$(2,1),LF
)@@G@@P$(2,2),P$(2,3)   @B@@@@          LMJ       11,EDECFL$        .   @B@@@@LG
)@@G@@          END                         .   @[@@@@.     @[@@@@.     @B@@@@LH
)@@G@@P$        PROC      *1                .   @E@@@@E$OCTF*   NAME      1   LI
)@@G@@              . FIXED FORMAT OCTAL  @E@@@@E$DECF*   NAME      2         LJ
)@@G@@        . FIXED FORMAT DECIMAL@F@@@@E$HEXF*   NAME      3               LK
)@@G@@  . FIXED FORMAT HEXADECIMAL  @H@@@@E$DECFZ*  NAME      4               LL
)@@G@@  . FIXED FORMAT DECIMAL-LEADING ZEROES   @H@@@@E$DCFZ*   NAME      4   LM
)@@G@@              . FIXED FORMAT DECIMAL-LEADING ZEROES   @H@@@@ DO P$(1)>1 LN
)@@G@@, LA    12,+(E$AD 1,2)    . LA[,XU]  A0,P$(1,2),P$(1,3),P$(1,4)   @E@@@@LO
)@@G@@ DO P$(1)>0 , LA    13,+(E$AD0 1,1 15) . LA[,XU]  A1,P$(1,1)@D@@@@J     LP
)@@G@@    EQU       P$(0,0)           . TARGET ADDRESS@B@@@@ DO J=1 , LMJ     LQ
)@@G@@  11,EOCTF$         .   @B@@@@ DO J=2 , LMJ       11,EDECF$         .   LR
)@@G@@@B@@@@ DO J=3 , LMJ       11,EHEXF$         .   @B@@@@ DO J=4 , LMJ     LS
)@@G@@  11,EDECFZ$        .   @B@@@@          END                         .   LT
)@@G@@@[@@@@/.    @[@@@@.     @B@@@@P$        PROC      *1                .   LU
)@@G@@@E@@@@E$DECV*   NAME      5                 . FREE FORMAT DECIMAL @E@@@@LV
)@@G@@E$OCTV*   NAME      6                 . FREE FORMAT OCTAL   @E@@@@E$HEXVLW
)@@G@@*   NAME      7                 . FREE FORMAT HEX     @F@@@@E$FD1*    NALX
)@@G@@ME      8                 . INSERT 6 CHARS (1 WORD)   @H@@@@ DO P$(1)>0 LY
)@@G@@, LA    12,+(E$AD 1,1)    . LA[,XU]  A0,P$(1,1),P$(1,2),P$(1,3)   @D@@@@LZ
)@@G@@J         EQU       P$(0,0)           . TARGET ADDRESS@B@@@@ DO J=5 , LMMA
)@@G@@J       11,EDECV$         .   @B@@@@ DO J=6 , LMJ       11,EOCTV$       MB
)@@G@@  .   @B@@@@ DO J=7 , LMJ       11,EHEXV$         .   @B@@@@ DO J=8 , LMMC
)@@G@@J       11,EFD1$          .   @B@@@@          END                       MD
)@@G@@  .   @[@@@@.     @[@@@@.     @B@@@@P$        PROC      *2              ME
)@@G@@  .   @G@@@@E$FORMC*  NAME      EFORMC$           . FORM EDITING - SPECIMF
)@@G@@FY CHARACTER@H@@@@ DO P$(2)>0 , LA    14,+(E$AD 2,1 15) . LA[,XU]  A2,P$MG
)@@G@@(2,1),P$(2,2),P$(2,3)   @F@@@@E$FORM*   NAME      EFORM$            . FOMH
)@@G@@RM EDITING - BLANKS USED@E@@@@ DO P$(1)>0 , LA    13,+(E$AD0 1,1)    . LMI
)@@G@@A[,XU]  A1,P$(1,1)@H@@@@ DO P$(1)>1 , LA    12,+(E$AD 1,2)    . LA[,XU] MJ
)@@G@@ A0,P$(1,2),P$(1,3),P$(1,4)   @B@@@@          LMJ       11,P$(0,0)      MK
)@@G@@  .   @B@@@@          END                         .   @[@@@@.     @[@@@@ML
)@@G@@.     @^@@@@P$        PROC      *3  @D@@@@E$FDECFL* NAME      0         MM
)@@G@@        . LEADING CHARS @H@@@@ DO P$(3)>0 , LA    15,+(E$AD 3,1 15) . LAMN
)@@G@@[,XU]  A3,P$(3,1),P$(3,2),P$(3,3)   @F@@@@E$FDECF*  NAME      1         MO
)@@G@@        . FIXED FORMAT DECIMAL FORM @I@@@@E$FDECFZ* NAME      2         MP
)@@G@@        . FIXED FORMAT DECIMAL FORM-LEADING ZEROES    @E@@@@ DO P$(1)>0 MQ
)@@G@@, LA    13,+(E$AD0 1,1 15) . LA[,XU]  A1,P$(1,1)@D@@@@P$(9)     EQU     MR
)@@G@@  1                 . SUBFIELD FLAG @F@@@@E$FDECV*  NAME      3         MS
)@@G@@        . FREE FORMAT DECIMAL FORM  @B@@@@I         EQU       P$(9)     MT
)@@G@@        .   @I@@@@ DO P$(1)>I , LA    12,+(E$AD 1,1+I)  . LA[,XU]  A0,P$MU
)@@G@@(1,1+I),P$(1,2+I),P$(1,3+I    @H@@@@ DO P$(2)>1 , LA    14,+(E$AD 2,2 15MV
)@@G@@) . LA[,XU]  A2,P$(2,2),P$(2,3),P$(2,4)   @F@@@@ DO P$(2)>0 , LXI   14,+MW
)@@G@@(E$AD0 2,1 15) . LXI[,XU]  A2,P$(2,1)     @D@@@@J         EQU       P$(0MX
)@@G@@,0)           . TARGET ADDRESS@B@@@@ DO J=0 , LMJ       11,EFDECFL$     MY
)@@G@@  .   @B@@@@ DO J=1 , LMJ       11,EFDECF$        .   @B@@@@ DO J=2 , LMMZ
)@@G@@J       11,EFDECFZ$       .   @B@@@@ DO J=3 , LMJ       11,EFDECV$      NA
)@@G@@  .   @B@@@@          END                         .   @[@@@@.     @[@@@@NB
)@@G@@.     @^@@@@P$        PROC      *1  @H@@@@E$FLS1*   NAME      EFLS1$    NC
)@@G@@        . SINGLE PRECISION SCIENTIFIC FORMAT    @H@@@@E$FLG1*   NAME    ND
)@@G@@  EFLG1$            . SINGLE PRECISION GENERALIZED FORMAT   @H@@@@E$FLF1NE
)@@G@@*   NAME      EFLF1$            . SINGLE PRECISION FIXED POINT FORMAT   NF
)@@G@@@E@@@@P$(9)     EQU       1                 . INSTRUCTION FLAG    @H@@@@NG
)@@G@@E$FLS2*   NAME      EFLS2$            . DOUBLE PRECISION SCIENTIFIC FORMNH
)@@G@@AT    @H@@@@E$FLG2*   NAME      EFLG2$            . DOUBLE PRECISION GENNI
)@@G@@ERALIZED FORMAT   @H@@@@E$FLF2*   NAME      EFLF2$            . DOUBLE PNJ
)@@G@@RECISION FIXED POINT FORMAT   @G@@@@ DO P$(9)=0 , DO P$(1)>1 , DL 13,+(ENK
)@@G@@$AD 1,2) . DL    A1,P$(1,2),P$(1,3) @I@@@@ DO P$(9)=1 , DO P$(1)>1 , LA NL
)@@G@@13,+(E$AD 1,2) . LA    A1,P$(1,2),P$(1,3),P$(1,4)     @E@@@@ DO P$(1)>0 NM
)@@G@@, LA    12,+(E$AD0 1,1 15) . LA[,XU]  A0,P$(1,1)@B@@@@          LMJ     NN
)@@G@@  11,P$(0,0)        .   @#@@@@          END     @[@@@@.     @[@@@@.     NO
)@@G@@@^@@@@P$        PROC      *1  @F@@@@E$TIME*   NAME      ETIME$          NP
)@@G@@  . EDIT A TIME (HH:MM:SS)    @F@@@@E$DAY1*   NAME      EDAY1$          NQ
)@@G@@  . EDIT A DATE (MM/DD/YY)    @F@@@@E$DAY2*   NAME      EDAY2$          NR
)@@G@@  . EDIT A DATE (DD MMM YY)   @G@@@@E$DAY3*   NAME      EDAY3$          NS
)@@G@@  . EDIT A DATE (MONTH DD, YEAR)    @F@@@@E$DAY4*   NAME      EDAY4$    NT
)@@G@@        . EDIT A DATE (YYYYMMDD)    @E@@@@E$DAY5*   NAME      EDAY5$    NU
)@@G@@        . EDIT A DATE (YYMMDD)@H@@@@ DO P$(1)>0 , LA    12,+(E$AD 1,1)  NV
)@@G@@  . LA[,XU]  A0,P$(1,1),P$(1,2),P$(1,3)   @B@@@@          LMJ       11,PNW
)@@G@@$(0,0)        .   @#@@@@          END     @[@@@@.     @[@@@@.     @^@@@@NX
)@@G@@P$        PROC      *0,2@G@@@@E$TD*     NAME      ETIME$            . EDNY
)@@G@@IT CURRENT TIME (HH:MM:SS)    @G@@@@E$DAT1*   NAME      EDAY1$          NZ
)@@G@@  . EDIT CURRENT DATE (MM/DD/YY)    @G@@@@E$DAT2*   NAME      EDAY2$    OA
)@@G@@        . EDIT CURRENT DATE (DD MMM YY)   @H@@@@E$DAT3*   NAME      EDAYOB
)@@G@@3$            . EDIT CURRENT DATE (MONTH DD, YEAR)    @G@@@@E$DAT4*   NAOC
)@@G@@ME      EDAY4$            . EDIT CURRENT DATE (YYYYMMDD)    @F@@@@E$DAT5OD
)@@G@@*   NAME      EDAY5$            . EDIT CURRENT DATE (YYMMDD)@ @@@@      OE
)@@G@@    ER        TDATE$    @B@@@@          LMJ       11,P$(0,0)        .   OF
)@@G@@@#@@@@          END     @[@@@@/.    @ @@@@.   PACKET GENERATING PROCS   OG
)@@G@@@[@@@@.     @#@@@@P$        PROC    @E@@@@E$PKTXA*  NAME      3         OH
)@@G@@        . EXTENDED ASCII ALPHA@D@@@@E$PKTA*   NAME      2               OI
)@@G@@  . ASCII FLAG    @F@@@@E$PKT*    NAME      1                 . GENERATEOJ
)@@G@@ SMALL PACKET     @E@@@@E$PKTF*   NAME      0                 . GENERATEOK
)@@G@@ BIG PACKET @^@@@@A('MSG')  EQU       '&' @^@@@@A('FPS')  EQU       1   OL
)@@G@@@^@@@@A('FPR')  EQU       1   @^@@@@A('DPC')  EQU       0   @^@@@@A('SPCOM
)@@G@@')  EQU       0   @^@@@@A('XAF')  EQU       0   @B@@@@A('ASC')  EQU     ON
)@@G@@  0                 .   @E@@@@A('ASI')  EQU       0                 . INOO
)@@G@@PUT ASCII FLAG    @B@@@@A('MGA')  EQU       '&'               .   @B@@@@OP
)@@G@@A('DPA')  EQU       0                 .   @B@@@@A('SPA')  EQU       0   OQ
)@@G@@              .   @B@@@@A('TBL')  EQU       1*/17             .   @C@@@@OR
)@@G@@ DO P$>2 ,I DO P$-2 ,A(P$(I+1,1)) EQU P$(I+1,2) @ @@@@Z         FORM    OS
)@@G@@  6,6,6,18  @ @@@@Z1        FORM      6,6,6,6,12@B@@@@Z2        FORM    OT
)@@G@@  9,9,18            .   @C@@@@          Z         0,A('MSG'),P$(1,1),P$(OU
)@@G@@1,2)  @^@@@@          +         0,0 @F@@@@          +         A('FPS'),AOV
)@@G@@('FPR'),0,A('ASC'),A('ASI'),0 .     @^@@@@          +         0,0 @^@@@@OW
)@@G@@          +         0   @E@@@@ DO P$(0,0)>1 , + E$ASC$,0            . ASOX
)@@G@@CII ENTRY POINT   @D@@@@ DO P$(0,0)<2 , + 0,0                 . FIELDATAOY
)@@G@@ ONLY @^@@@@ DO P$(0,0)=1 , END     @D@@@@          Z1        A('DPC'),AOZ
)@@G@@('SPC'),0,0,A('MGA')    @B@@@@          Z         0,0,0,0           .   PA
)@@G@@@^@@@@          +         0   @^@@@@          +         0   @ @@@@ DO P$PB
)@@G@@(0,0)=0 , END          .@E@@@@ DO +(P$(0,0)>1)**(A('TBL')=1*/17) ,A('TBLPC
)@@G@@') EQU -E$DTBL$ . @D@@@@          Z2        A('DPA'),A('SPA'),A('TBL') .PD
)@@G@@.     @D@@@@          Z         A('XAF')*(P$(0,0)=3),0,0,E$ASCII$.@B@@@@PE
)@@G@@          +         0                 .   @^@@@@ DO P$(0,0)=2 , END .   PF
)@@G@@@B@@@@          +         0,E$XALF$         .   @B@@@@          END     PG
)@@G@@                    .   @[@@@@/.    @D@@@@.   ASCII-FIELDATA CONVERSION PH
)@@G@@TABLE GENERATING PROC   @[@@@@.     @B@@@@P$        PROC                PI
)@@G@@        .   @D@@@@E$TBL*    NAME      0                 . 64 WORD TABLE PJ
)@@G@@@D@@@@E$TBLX*   NAME      1                 . 128 WORD TABLE@[@@@@.     PK
)@@G@@@^@@@@.   FIELDATA TO ASCII   @[@@@@.     @B@@@@F('@')    EQU       0100PL
)@@G@@              .   @B@@@@F('[')    EQU       0133              .   @B@@@@PM
)@@G@@F(']')    EQU       0135              .   @B@@@@F('#')    EQU       0043PN
)@@G@@              .   @B@@@@F('^')    EQU       0136              .   @B@@@@PO
)@@G@@F(' ')    EQU       0040              .   @C@@@@I DO 26 ,F(5+I)  EQU  01PP
)@@G@@00+I          . LETTERS @B@@@@F(')')    EQU       0051              .   PQ
)@@G@@@B@@@@F('-')    EQU       0055              .   @B@@@@F('+')    EQU     PR
)@@G@@  0053              .   @C@@@@I DO 3 ,F(042+I)  EQU  073+I          . <=PS
)@@G@@>     @B@@@@F('&')    EQU       0046              .   @B@@@@F('$')    EQPT
)@@G@@U       0044              .   @B@@@@F('*')    EQU       0052            PU
)@@G@@  .   @B@@@@F('(')    EQU       0050              .   @B@@@@F('%')    EQPV
)@@G@@U       0045              .   @B@@@@F(':')    EQU       0072            PW
)@@G@@  .   @B@@@@F('?')    EQU       0077              .   @B@@@@F('!')    EQPX
)@@G@@U       0041              .   @B@@@@F(',')    EQU       0054            PY
)@@G@@  .   @B@@@@F('\')    EQU       0134              .   @C@@@@I DO 10 ,F(0PZ
)@@G@@57+I) EQU 057+I           . DIGITS  @B@@@@F(072)    EQU       0047      QA
)@@G@@        .   @B@@@@F(';')    EQU       0073              .   @B@@@@F('/')QB
)@@G@@    EQU       0057              .   @B@@@@F('.')    EQU       0056      QC
)@@G@@        .   @B@@@@F('"')    EQU       0042              .   @B@@@@F(077)QD
)@@G@@    EQU       0137              .   @B@@@@ DO P$(0,0) ,I DO 64 ,F(I+63) QE
)@@G@@EQU 0   .   @[@@@@/.    @^@@@@.   ASCII TO FIELDATA   @[@@@@.     @D@@@@QF
)@@G@@I DO 040 ,A(I-1)  EQU  '?'            . CHARACTERS    @[@@@@.     @B@@@@QG
)@@G@@A(040)    EQU       ' '               .   @B@@@@A(041)    EQU       '!' QH
)@@G@@              .   @B@@@@A(042)    EQU       '"'               .   @B@@@@QI
)@@G@@A(043)    EQU       '#'               .   @B@@@@A(044)    EQU       '$' QJ
)@@G@@              .   @B@@@@A(045)    EQU       '%'               .   @B@@@@QK
)@@G@@A(046)    EQU       '&'               .   @B@@@@A(047)    EQU       ''''QL
)@@G@@              .   @B@@@@A(050)    EQU       '('               .   @B@@@@QM
)@@G@@A(051)    EQU       ')'               .   @B@@@@A(052)    EQU       '*' QN
)@@G@@              .   @B@@@@A(053)    EQU       '+'               .   @B@@@@QO
)@@G@@A(054)    EQU       ','               .   @B@@@@A(055)    EQU       '-' QP
)@@G@@              .   @B@@@@A(056)    EQU       '.'               .   @B@@@@QQ
)@@G@@A(057)    EQU       '/'               .   @C@@@@I DO 10 ,A(057+I) EQU 05QR
)@@G@@7+I           . DIGITS  @B@@@@A(072)    EQU       ':'               .   QS
)@@G@@@B@@@@A(073)    EQU       ';'               .   @B@@@@A(074)    EQU     QT
)@@G@@  '<'               .   @B@@@@A(075)    EQU       '='               .   QU
)@@G@@@B@@@@A(076)    EQU       '>'               .   @B@@@@A(077)    EQU     QV
)@@G@@  '?'               .   @B@@@@A(0100)   EQU       '@'               .   QW
)@@G@@@C@@@@I DO 26 ,A(0100+I) EQU 5+I            . LETTERS @B@@@@A(0133)   EQQX
)@@G@@U       '['               .   @B@@@@A(0134)   EQU       '\'             QY
)@@G@@  .   @B@@@@A(0135)   EQU       ']'               .   @B@@@@A(0136)   EQQZ
)@@G@@U       '^'               .   @B@@@@A(0137)   EQU       077             RA
)@@G@@  .   @D@@@@I DO 040 ,A(0137+I) EQU A(077+I)      . FOLD OVER     @[@@@@RB
)@@G@@.     @B@@@@.   PROC TO INSERT NEW CONVERSION VALUES  @[@@@@.     @B@@@@RC
)@@G@@Q$        PROC      *1,0              .   @B@@@@GETIT*    NAME          RD
)@@G@@              .   @G@@@@ DO        Q$(1,1)='FD' ,J DO P$(I)/2 ,F*(P$(I,JRE
)@@G@@*2)) EQU P$(I,J*2+1) .  @G@@@@ DO        Q$(1,1)='AS' ,J DO P$(I)/2 ,A*(RF
)@@G@@P$(I,J*2)) EQU P$(I,J*2+1) .  @B@@@@          END                       RG
)@@G@@  .   @[@@@@.     @#@@@@.   GENERATE TABLE@[@@@@.     @C@@@@I         DORH
)@@G@@        P$-1 ,  GETIT  P$(I,1) .    @B@@@@FR        FORM      6,6,6,9,9 RI
)@@G@@        .   @E@@@@ DO P$(0,0)=0 ,I DO 64 , FR  A(I-1),A(I+63),0,0,F(I-1)RJ
)@@G@@ .    @D@@@@ DO P$(0,0) ,I DO   128 , FR A(I-1),0,0,0,F(I-1) .    @B@@@@RK
)@@G@@          END                         .   @[@@@@/.    @ @@@@.   INTERNALRL
)@@G@@ CHARACTER LINKS  @F@@@@.   THESE DEFINE THE CELLS SETUP BY THE GENCHARSRM
)@@G@@ PROC. WE KEEP    @C@@@@.   THEM TOGETHER FOR THE SAKE OF MANAGEABILITY.RN
)@@G@@@[@@@@.     @B@@@@          DEF                         .   @C@@@@QT    RO
)@@G@@    EQU       Q4                . ALSO T3 @D@@@@XTRA      EQUF      E$CHRP
)@@G@@AR$+0,,S1     . INITIAL FUDGE @C@@@@SLASH     EQUF      E$CHAR$+2,,S2   RQ
)@@G@@  . '/'     @E@@@@FSHIFT    EQUF      E$CHAR$+2,,S3     . DEC FRAC SHIFTRR
)@@G@@ COUNT@C@@@@PERIOD    EQUF      E$CHAR$+2,,S4     . '.'     @E@@@@SHFT  RS
)@@G@@    EQUF      E$CHAR$+2,,QT     . 72 - CHARS PER WORD @D@@@@MASK      EQRT
)@@G@@UF      E$CHAR$+3,,QT     . 077 OR 0777   @C@@@@MINUS     EQUF      E$CHRU
)@@G@@AR$+4,,S2     . '-'     @C@@@@COLON     EQUF      E$CHAR$+4,,S4     . ':RV
)@@G@@'     @C@@@@. ATSIGN  EQUF      E$CHAR$+5,,QT     . '@'     @C@@@@PLUS  RW
)@@G@@    EQUF      E$CHAR$+6,,S2     . '+'     @C@@@@COMMA     EQUF      E$CHRX
)@@G@@AR$+6,,S4     . ','     @D@@@@MODINV    EQUF      E$CHAR$+6,,S5     . INRY
)@@G@@VERSE MODE  @E@@@@SCNT1     EQUF      E$CHAR$+8,,S2     . CHARS PER WORDRZ
)@@G@@ -1   @D@@@@SCNT      EQUF      E$CHAR$+8,,S4     . CHARS PER WORD@F@@@@SA
)@@G@@DCNT      EQUF      E$CHAR$+8,,S5     . CHARS PER DOUBLE WORD     @F@@@@SB
)@@G@@DCNT1     EQUF      E$CHAR$+10,,S2    . CHARS PER DOUBLE WORD -1  @E@@@@SC
)@@G@@E$PTRS$   EQUF      E$CHAR$+10,,01    . XQT TABLE POINTERS  @C@@@@BLANKSSD
)@@G@@    EQU       E$CHAR$+13        . SPACES  @C@@@@BLANK     EQUF      BLANSE
)@@G@@KS,,8         . ONLY ONE@C@@@@EZERO     EQU       E$CHAR$           . ZESF
)@@G@@RO    @D@@@@FUDGE     EQU       E$CHAR$           . FINAL FUDGE   @C@@@@SG
)@@G@@ONEZERO   EQU       E$CHAR$+12        . (1,0)   @[@@@@.     @A@@@@.     SH
)@@G@@ADRASCX JUMP TABLE INDICES    @[@@@@.     @G@@@@ECNVT     EQU       0   SI
)@@G@@              . CONVERT - SET UP ASCII XLATION  @E@@@@EADAY3    EQU     SJ
)@@G@@  1                 . EDAY3$ ASCII CODE   @F@@@@EQWM      EQU       2   SK
)@@G@@              . CHECK FOR QUARTERWORD MODE@E@@@@EAMNTH    EQU       3   SL
)@@G@@              . ASCII MONTH TABLE   @F@@@@EXLATE    EQU       4         SM
)@@G@@        . TRANSLATE 1 CHARACTER     @[@@@@.     @C@@@@EDIT$PROC* PROC   SN
)@@G@@                    . LINKS   @[@@@@.     @^@@@@.   TRANSLATE CHARACTER SO
)@@G@@@[@@@@.     @B@@@@P$        PROC      *1                .   @B@@@@XLATE*SP
)@@G@@*   NAME      01                .   @F@@@@ DO P$(1)>0 , DO 1-(P$(1,1)=14SQ
)@@G@@) , LA 14,P$(1,1),P$(1,2),P$(1,3) . @G@@@@          LA        15,ADRASCXSR
)@@G@@        . 15 HAS ASCII CODE BASE ADDRESS  @B@@@@          UNLIST        SS
)@@G@@              .   @D@@@@          TZ        EASCII            . ASCII ANST
)@@G@@YTHING@D@@@@          LMJ       15,EXLATE,15      . YES, PROCESS  @C@@@@SU
)@@G@@          LM,15     14,,14            . BE SAFE @B@@@@          LIST    SV
)@@G@@                    .   @B@@@@          END                         .   SW
)@@G@@@[@@@@.     @D@@@@.   ASCII, FIELDATA CHARS, SHIFT COUNTS, MASKS, ETC.  SX
)@@G@@@B@@@@.   DEFINED AND GENERATED BY EDIT$PROC.   @B@@@@P$        PROC    SY
)@@G@@                    .   @B@@@@GENCHARS** NAME                       .   SZ
)@@G@@@B@@@@R         FORM      6,6,6,6,12        .   @B@@@@RR        FORM    TA
)@@G@@  6,6,6,18          .   @D@@@@          +         07777D            . ROTB
)@@G@@UNDING UP   @E@@@@          R         0,'/',34,'.',72-6 . SLASH,PERIOD,STC
)@@G@@HFT   @B@@@@          R         0,057,31,056,72-9 .   @D@@@@          R TD
)@@G@@        1,'-',28,':',0777 . MINUS,COLON   @C@@@@          R         1,05TE
)@@G@@5,24,072,'@'  . ATSIGN  @E@@@@          +         1,'+',21,',',1,0  . PLTF
)@@G@@US,COMMA,MODINV   @B@@@@          +         1,053,18,054,0,0  .   @D@@@@TG
)@@G@@          +         1,6-1,14,6,12,0   . SCNT1,CNT,DCNT@B@@@@          + TH
)@@G@@        1,4-1,11,4,8,0    .   @D@@@@          RR        0,12-1,8,EDIT$T TI
)@@G@@  . DCNT,E$PTRS$  @B@@@@          RR        0,8-1,4,EDIT$TA   .   @C@@@@TJ
)@@G@@          +         1,0               . ONEZERO @C@@@@          +       TK
)@@G@@  '      '          . BLANKS  @D@@@@          +         040,040,040,040 TL
)@@G@@  . ASCII BLANKS  @B@@@@          END                         .   @B@@@@TM
)@@G@@          END                         .   @[@@@@/.    @G@@@@.   EXTERNALTN
)@@G@@ DEFINITIONS  (FOR JOE USER). JOE SUPPLIES PACKET ADDRESS.  @[@@@@.     TO
)@@G@@@F@@@@P$        PROC      *1                . FIELD IS ADDR OF PACKET   TP
)@@G@@@B@@@@A$EFIELDS* NAME                       .   @[@@@@.     @D@@@@PKT   TQ
)@@G@@    EQUF      P$(1,1),P$(1,2)   . DEFINE STUFF  @[@@@@.     @C@@@@QT    TR
)@@G@@    EQU       05                . 05 OR T3@D@@@@IL*       EQUF      PKT,TS
)@@G@@,11             IMAGE LENGTH  @D@@@@ILOC*     EQUF      PKT,,01         TT
)@@G@@    IMAGE LOCATION@G@@@@FPS*      EQUF      PKT+2,,13           SCALE FOTU
)@@G@@R FLOATING POINT EDIT   @G@@@@FPR*      EQUF      PKT+2,,12           FLTV
)@@G@@OATING POINT ROUNDING OPTION  @G@@@@AEMSGC*   EQUF      PKT+6,,QT       TW
)@@G@@  . EMSG$ ASCII SIGNAL CHARACTER    @I@@@@DPC*      EQUF      PKT+10,,Q1TX
)@@G@@        . ASCII CHARACTER FOR DOUBLE PRECISION SC     @I@@@@SPC*      EQTY
)@@G@@UF      PKT+10,,Q2        . ASCII CHARACTER FOR SINGLE PRECISION SC     TZ
)@@G@@@D@@@@          END                         . ALL FOR YOU   @[@@@@/.    UA
)@@G@@@G@@@@. PROCEDURES FOR AEDIT$ - REWRITTEN BY JEFF JEWETT - 11/75 - UOM SUB
)@@G@@YSTEMS@E@@@@. REFER TO DOCUMENTATION ACCOMPANYING FIELDATA EDIT$ PROCS  UC
)@@G@@@[@@@@.     @#@@@@. BEGIN USER PROCS@[@@@@.     @B@@@@P$        PROC    UD
)@@G@@  *0,1              .   @E@@@@A$EDITX*  NAME      0                 . CLUE
)@@G@@OSE EDIT$ PACKET  @F@@@@A$ECOLN*  NAME      1                 . RETURN WUF
)@@G@@ITH COL NUM IN A0 @F@@@@A$EMSGR*  NAME      3                 . REENTER UG
)@@G@@MESSAGE EDITOR    @H@@@@A$ECLEAR* NAME      4                 . CLEAR OUUH
)@@G@@TPUT BUFFER, SET COL TO 0     @D@@@@J         EQU       P$(0,0)         UI
)@@G@@  . TARGET ADDRESS@B@@@@ DO J=0 , LMJ       11,AEDITX$        .   @B@@@@UJ
)@@G@@ DO J=1 , LMJ       11,AECOLN$        .   @B@@@@ DO J=3 , LMJ       11,AUK
)@@G@@EMSGR$        .   @B@@@@ DO J=4 , LMJ       11,AECLEAR$       .   @B@@@@UL
)@@G@@          END                         .   @[@@@@.     @[@@@@.     @B@@@@UM
)@@G@@P$        PROC      *1                .   @G@@@@A$EDIT*   NAME      1   UN
)@@G@@              . ENTER AND OPEN EDIT$ PACKET     @H@@@@A$EDITR*  NAME    UO
)@@G@@  2                 . REENTER EDIT$ PACKET AFTER E$DITX     @E@@@@A$ECHAUP
)@@G@@R*  NAME      3                 . INSERT 1 CHARACTER  @F@@@@A$ECOL*   NAUQ
)@@G@@ME      4                 . MOVE TO SPECIFIED COL     @F@@@@A$ESKIP*  NAUR
)@@G@@ME      5                 . SKIP SPECIFIED NUM OF COLS@E@@@@A$EMSG*   NAUS
)@@G@@ME      6                 . ENTER MESSAGE EDITOR@H@@@@ DO P$(1)>0 , LA  UT
)@@G@@  12,+(E$AD 1,1 15) . LA[,XU]  A0,P$(1,1),P$(1,2),P$(1,3)   @D@@@@J     UU
)@@G@@    EQU       P$(0,0)           . TARGET ADDRESS@B@@@@ DO J=1 , LMJ     UV
)@@G@@  11,AEDIT$         .   @B@@@@ DO J=2 , LMJ       11,AEDITR$        .   UW
)@@G@@@B@@@@ DO J=3 , LMJ       11,AECHAR$        .   @B@@@@ DO J=4 , LMJ     UX
)@@G@@  11,AECOL$         .   @B@@@@ DO J=5 , LMJ       11,AESKIP$        .   UY
)@@G@@@B@@@@ DO J=6 , LMJ       11,AEMSG$         .   @B@@@@          END     UZ
)@@G@@                    .   @[@@@@.     @[@@@@.     @B@@@@P$        PROC    VA
)@@G@@  *1                .   @E@@@@A$EFD2*   NAME      1                 . INVB
)@@G@@SERT TWO WORDS    @G@@@@ DO P$(1)>0 , DL    12,+(E$AD 1,1)    . DL      VC
)@@G@@ A0,P$(1,1),P$(1,2)     @E@@@@          I$        074,013,11,0,0,AEFD2$ VD
)@@G@@. LMJ X11,AEFD2$  @B@@@@          END                         .   @[@@@@VE
)@@G@@.     @[@@@@.     @B@@@@P$        PROC      *1                .   @D@@@@VF
)@@G@@A$ECOPY*  NAME      1                 . STRING COPY   @F@@@@A$EPACK*  NAVG
)@@G@@ME      2                 . STRING COPY WITH PACKING  @E@@@@ DO P$(1)>0 VH
)@@G@@, LA    13,+(E$AD0 1,1 15) . LA[,XU]  A1,P$(1,1)@H@@@@ DO P$(1)>1 , LA  VI
)@@G@@  12,+(E$AD 1,2 15) . LA[,XU]  A0,P$(1,2),P$(1,3),P$(1,4)   @F@@@@ DO P$VJ
)@@G@@(0)>1 , LXI   12,+(E$AD0 0,1 15) . LXI[,XU]  A0,P$(0,1)     @D@@@@J     VK
)@@G@@    EQU       P$(0,0)           . TARGET ADDRESS@B@@@@ DO J=1 , LMJ     VL
)@@G@@  11,AECOPY$        .   @B@@@@ DO J=2 , LMJ       11,AEPACK$        .   VM
)@@G@@@B@@@@          END                         .   @[@@@@.     @[@@@@.     VN
)@@G@@@B@@@@P$        PROC      *1                .   @E@@@@A$EOCTF*  NAME    VO
)@@G@@  1                 . FIXED FORMAT OCTAL  @E@@@@A$EDECF*  NAME      2   VP
)@@G@@              . FIXED FORMAT DECIMAL@H@@@@A$EDCFZ*  NAME      4         VQ
)@@G@@        . FIXED FORMAT DECIMAL-LEADING ZEROES   @E@@@@ DO P$(1)>0 , LA  VR
)@@G@@  13,+(E$AD0 1,1 15) . LA[,XU]  A1,P$(1,1)@D@@@@P$(9)     EQU       1   VS
)@@G@@              . SUBFIELD FLAG @E@@@@A$EDECV*  NAME      5               VT
)@@G@@  . FREE FORMAT DECIMAL @E@@@@A$EOCTV*  NAME      6                 . FRVU
)@@G@@EE FORMAT OCTAL   @F@@@@A$EFD1*   NAME      8                 . INSERT 6VV
)@@G@@ CHARS (1 WORD)   @B@@@@I         EQU       P$(9)             .   @I@@@@VW
)@@G@@ DO P$(1)>I , LA    12,+(E$AD 1,1+I)  . LA[,XU]  A0,P$(1,1+I),P$(1,2+I),VX
)@@G@@P$(1,3+I    @D@@@@J         EQU       P$(0,0)           . TARGET ADDRESSVY
)@@G@@@B@@@@ DO J=1 , LMJ       11,AEOCTF$        .   @B@@@@ DO J=2 , LMJ     VZ
)@@G@@  11,AEDECF$        .   @B@@@@ DO J=4 , LMJ       11,AEDECFZ$       .   WA
)@@G@@@B@@@@ DO J=5 , LMJ       11,AEDECV$        .   @B@@@@ DO J=6 , LMJ     WB
)@@G@@  11,AEOCTV$        .   @B@@@@ DO J=8 , LMJ       11,AEFD1$         .   WC
)@@G@@@B@@@@          END                         .   @[@@@@/.    @[@@@@.     WD
)@@G@@@^@@@@P$        PROC      *1  @H@@@@A$EFLS1*  NAME      AEFLS1$         WE
)@@G@@  . SINGLE PRECISION SCIENTIFIC FORMAT    @H@@@@A$EFLG1*  NAME      AEFLWF
)@@G@@G1$           . SINGLE PRECISION GENERALIZED FORMAT   @H@@@@A$EFLF1*  NAWG
)@@G@@ME      AEFLF1$           . SINGLE PRECISION FIXED POINT FORMAT   @E@@@@WH
)@@G@@P$(9)     EQU       1                 . INSTRUCTION FLAG    @H@@@@A$EFLSWI
)@@G@@2*  NAME      AEFLS2$           . DOUBLE PRECISION SCIENTIFIC FORMAT    WJ
)@@G@@@H@@@@A$EFLG2*  NAME      AEFLG2$           . DOUBLE PRECISION GENERALIZWK
)@@G@@ED FORMAT   @H@@@@A$EFLF2*  NAME      AEFLF2$           . DOUBLE PRECISIWL
)@@G@@ON FIXED POINT FORMAT   @G@@@@ DO P$(9)=0 , DO P$(1)>1 , DL 13,+(E$AD 1,WM
)@@G@@2) . DL    A1,P$(1,2),P$(1,3) @I@@@@ DO P$(9)=1 , DO P$(1)>1 , LA 13,+(EWN
)@@G@@$AD 1,2) . LA    A1,P$(1,2),P$(1,3),P$(1,4)     @E@@@@ DO P$(1)>0 , LA  WO
)@@G@@  12,+(E$AD0 1,1 15) . LA[,XU]  A0,P$(1,1)@E@@@@          I$        074,WP
)@@G@@013,11,0,0,P$(0,0) . LMJ X11,AERTN$ @#@@@@          END     @[@@@@.     WQ
)@@G@@@[@@@@.     @^@@@@P$        PROC      *1  @F@@@@A$ETIME*  NAME      AETIWR
)@@G@@ME$           . EDIT A TIME (HH:MM:SS)    @F@@@@A$EDAY1*  NAME      AEDAWS
)@@G@@Y1$           . EDIT A DATE (MM/DD/YY)    @F@@@@A$EDAY2*  NAME      AEDAWT
)@@G@@Y2$           . EDIT A DATE (DD MMM YY)   @G@@@@A$EDAY3*  NAME      AEDAWU
)@@G@@Y3$           . EDIT A DATE (MONTH DD, YEAR)    @F@@@@A$EDAY4*  NAME    WV
)@@G@@  AEDAY4$           . EDIT A DATE (YYYYMMDD)    @E@@@@A$EDAY5*  NAME    WW
)@@G@@  AEDAY5$           . EDIT A DATE (YYMMDD)@H@@@@ DO P$(1)>0 , LA    12,+WX
)@@G@@(E$AD 1,1)    . LA[,XU]  A0,P$(1,1),P$(1,2),P$(1,3)   @E@@@@          I$WY
)@@G@@        074,013,11,0,0,P$(0,0) . LMJ X11,AERTN$ @#@@@@          END     WZ
)@@G@@@[@@@@.     @[@@@@.     @^@@@@P$        PROC      *0,2@G@@@@A$ETD*    NAXA
)@@G@@ME      AETIME$           . EDIT CURRENT TIME (HH:MM:SS)    @G@@@@A$EDATXB
)@@G@@1*  NAME      AEDAY1$           . EDIT CURRENT DATE (MM/DD/YY)    @G@@@@XC
)@@G@@A$EDAT2*  NAME      AEDAY2$           . EDIT CURRENT DATE (DD MMM YY)   XD
)@@G@@@H@@@@A$EDAT3*  NAME      AEDAY3$           . EDIT CURRENT DATE (MONTH DXE
)@@G@@D, YEAR)    @G@@@@A$EDAT4*  NAME      AEDAY4$           . EDIT CURRENT DXF
)@@G@@ATE (YYYYMMDD)    @F@@@@A$EDAT5*  NAME      AEDAY5$           . EDIT CURXG
)@@G@@RENT DATE (YYMMDD)@ @@@@          ER        TDATE$    @E@@@@          I$XH
)@@G@@        074,013,11,0,0,P$(0,0) . LMJ X11,AERTN$ @#@@@@          END     XI
)@@G@@@[@@@@/.    @ @@@@.   PACKET GENERATING PROCS   @[@@@@.     @#@@@@P$    XJ
)@@G@@    PROC    @F@@@@A$EPKT*   NAME      1                 . GENERATE SMALLXK
)@@G@@ PACKET     @E@@@@A$EPKTF*  NAME      0                 . GENERATE BIG PXL
)@@G@@ACKET @C@@@@A(1)      EQU       '&'                 . MSG   @C@@@@A(2)  XM
)@@G@@    EQU       1                   . FPS   @C@@@@A(3)      EQU       1   XN
)@@G@@                . FPR   @C@@@@A(4)      EQU       0                   . XO
)@@G@@DPC   @C@@@@A(5)      EQU       0                   . SPC   @B@@@@B(1)  XP
)@@G@@    EQU       'MSG'             .   @B@@@@B(2)      EQU       'FPS'     XQ
)@@G@@        .   @B@@@@B(3)      EQU       'FPR'             .   @B@@@@B(4)  XR
)@@G@@    EQU       'DPC'             .   @B@@@@B(5)      EQU       'SPC'     XS
)@@G@@        .   @D@@@@J DO 5 ,I DO P$-2 , DO P$(I+1,1)=B(J) ,Z(I) EQU J .   XT
)@@G@@@D@@@@I DO P$-2 ,A(Z(I)) EQU P$(I+1,2)      . NON-DEFAULT   @ @@@@Z     XU
)@@G@@    FORM      6,6,6,18  @ @@@@Z1        FORM      6,6,6,6,12@B@@@@Z2    XV
)@@G@@    FORM      9,9,18            .   @B@@@@          Z         0,0,P$(1,1XW
)@@G@@),P$(1,2) . @^@@@@          +         0,0 @B@@@@          +         A(2)XX
)@@G@@,A(3),0,1,1,0 .   @^@@@@          +         0,0 @^@@@@          +       XY
)@@G@@  0   @G@@@@          +         E$ASC$,0          . NON-XLATING ASCII ENXZ
)@@G@@TRY POINT   @A@@@@          Z1        1,1,0,0,A(1)    @B@@@@          Z YA
)@@G@@        0,0,0,0           .   @^@@@@          +         0   @^@@@@      YB
)@@G@@    +         0   @A@@@@          Z2        A(4),A(5),0 .   @B@@@@      YC
)@@G@@    Z         0,0,0,E$ASCII$    .   @B@@@@          +         0         YD
)@@G@@        .   @B@@@@          END                         .   ___   @F@@@@YE
)@@G@@A$EDAY2*  NAME      AEDAY2$           . EDIT A DATE (DD MMM YY)   @G@@@@YF
)@@G@@A$EDAY3*  NAME      AEDAY3$           . EDIT A DATE (MONTH DD, YEAR)    YG
)@@G@@*[S@@[*SDFF*@^@@@@^@)^@)^@)^@)^@)C- C0)^@)@[@@@@ 0)^@)@J@@@@ 0)I(4HD?HD4YH
)@@G@@JC)G15H1<I-(H9,^[4H8)H9+I--HD,^[-H0)H90I-(H9,IS)H(-IT:^[=G(3HD$H1>G))I-\YI
)@@G@@^[+G*)@K@@@@ 0)^@)^@)I(3G(=^[(H0)I-*G*)^9P^8)G1(G(?G))H9&^[-H0)HD,IT4IL5YJ
)@@G@@GT4HD\H0,^@)CD,JC)H15H(+G(2^[\G0)^@)@J@@@@ 0)^@)^@)H->I-4G(2IS)H(-JC)GL>YK
)@@G@@^[3I[>GT(G1(G(=^[+I(4^[(G0)GD,JC)GD2G*)H1\I))H->G9(I-(H(-I->@K@@@@ 0)^@)YL
)@@G@@^@)H90I-(H9,^[<H[-IL-GT4G(2IS)GD,^@$C*$^[&H--G8)HD3^[$G(,G(2GD4G(= 0)^[DYM
)@@G@@G0)I[\IT3HD+H->^@)@J@@@@ 0)^@)^@)GD,^[(H(!G(=HD-I->^[(H13I-2I(<I-(H9,^[&YN
)@@G@@H92H(-I))HD3^[&H92H(>G)) *)HD&^[,H94^@!^[-@B@@@@ 0)^@)^@)H-(I->IL-H))HD3YO
)@@G@@^[<IL>GD4G(= 0)^@)@[@@@@ 0)^@)@^@@@@C0)^@)^@)^@)^@)C1PD1#^@)@^@@@@D9KE)%YP
)@@G@@^@)^@)^@)D1[D( ^@)@L@@@@DC)^@)^@)^@)^@)C-J^@)^@)^@)^@)C0!AC) ))C-J^@*C0*YQ
)@@G@@DC(B)$CC$ C: S*C0*DC(B0$FK$ C) ))C(IC)) *1 8\ 8% K)^@)@I@@@@D([ETF @1 C)YR
)@@G@@^@)C(LE*)^@)^@)^@)A@)^@)^@)^@)^@)^@)^@)^@)^@) 0)HD,HD4^[!GD3HS)I9\IL=^@)YS
)@@G@@@M@@@@DC)^@)^@)^@)^@)C-J^@)^@)^@)^@)C0!AC) -HCDNDS*AC(^[ EDP^[HCDNDS*AC(YT
)@@G@@ S:AC% 8*^9U^8!C0*DC( C)^@,^[&H92H*)H(-IT:@N@@@@^@)^@)^@)^@)^@)C-J^@)^@)YU
)@@G@@^@)^@)D([ETF @1 C"AC% 8$D@$^@?^[ D1^^@*D([ETF @1 C(^@) 0)B0)AC8^[+HD4IS)YV
)@@G@@GT2G(-I->^[?HD4^@)@M@@@@^@)^@)^@)^@)^@)C(IC))^@)^@)^@)D([ETF @1 C: [D^))YW
)@@G@@A@?A@1A0(^@,^[>H-3G*)GT2G(-I->^[(H(!G(=HD-I->^[P^[&HD>H-=^@)@[@@@@ 0)^@)YX
)@@G@@@A@@@@C(^^-KELJCTN K)^-KELJCS)^@)^@) K0^@)@M@@@@^@)^@)^@)^@)^@)^-GC(QC(GYY
)@@G@@^@)^@) )1^@)^@)^@)^@)^@)^@)^@)^@) 0)C->G1(H1>^[&H9?H-\I9(H1$^[?GD+G(?IS)YZ
)@@G@@G1\IK)I(3G(2@[@@@@ 0)^@)@L@@@@ 0)^[OH[>IT>^[-IL>^[:G(9I9\IL=IS)H1>GT>IT3ZA
)@@G@@GD2JC)G1\IK)I-*G*)G1\H-?H97HD,G8)HD,H-(H1>^[ C-DE))E[MD9#ES,@[@@@@ 0)^@)ZB
)@@G@@@K@@@@E[[CTFC(O^@)^@)^- EDP^@)^@)^@)^9KCD#DT E)$^@)^@)^@)^@)^@) 0)C(^DDOZC
)@@G@@^[3G(1I(>H1<G*)HT>JD7H92G))^@)@K@@@@C(^DDO^@)^@)^@)^- EDP^@)^@)^@)^9 C-DZD
)@@G@@E)$^@)^@)^@)^@)^@)^@) 0)HT>JD7H92G))G1\IK)I[2HD,I))C(^DDO^@)@K@@@@CTJE[TZE
)@@G@@^@)^@)^@)^- EDP^@)^@)^@)^9#D9KFC$^@)^@)^@)^@)^@)^@) 0)HT>JD7H92G))G1\IK)ZF
)@@G@@GT-H-?^[ CTJE[T^))@J@@@@ETFDDK^@)^@)^@)^- EDP^@)^@)^@)^9NDTDE@$^@)^@)^@)ZG
)@@G@@^@)^@)^@) 0)^S)H9&^[?HD,G(3^[4H8)IT:HD0^@)@I@@@@ET E))^@)^@)^@)^- EDP^@)ZH
)@@G@@^@)^@)^9NC(O^8)^@)^@)^@)^@)^@)^@) 0)IL>GT>HD6HD,G8)IT4GD4I(3@[@@@@ 0)^@)ZI
)@@G@@@J@@@@D*=^-KC0)^@)^@)^- EDP^@)^@)^@)A@)^@)^@)^@)^@)^@)^@)^@)^@) 0)HD,HD4ZJ
)@@G@@^[0HT4^[<IL>GD4G*)G1?GD$@J@@@@E[MCK=D-#^@)^@)^- EDP^@)^@)^@)A))^@)^@)^@)ZK
)@@G@@^@)^@)^@)^@)^@) 0)D-#^[&H92^[+I(&G1>IK)GD2G(-^@)@^@@@@^@)^@)^@)^@)^@)^- ZL
)@@G@@D1^^@)@[@@@@ 0)^@)@J@@@@ 0)E-*G*)G1\H-?H97HD,G8)HD3^[-^[$IL\I(0^[\G0)E[MZM
)@@G@@D9#IS)G->IT(G9,G(=^[4H8)GD(G))HD,^[4H[>^@)@K@@@@ 0)^@)^[<IL>GD4HD\H0)H9&ZN
)@@G@@^[\I(4I[5I))HD!GD$G(3 0)^[DI))HD3^[7IL(I-4G(,^[4H8)I9\IL:^[7HD4H[(H0)^@)ZO
)@@G@@@J@@@@ 0)^@)^[4H[>^[NE-ME(#^))G(,I1(IL\H1!G(,I))GL5I))G-\G(3^[,H94^[2G(1ZP
)@@G@@I((IL>^[(I),^@)I-*G*)^@)@J@@@@ 0)^@)^[2G(3I(?I--H14^[!G(3IT-G9>^[!GD9^[+ZQ
)@@G@@G*)H95I-0I(4^[6HD-^[KELDD1O^))H92^[#ETA^))H92^@)@J@@@@ 0)^@)^[!GD9^[3HD!ZR
)@@G@@I[?JC)GL>^[!H96G(=^[4H8)GD,^[ C-DE)=^[+I(&G1>IK)G1\IK)IT5GL3G(1I(>H14^@)ZS
)@@G@@@K@@@@ 0)^@)^[0IL\GT>IT3HD,G8,^@)DD4^[!GD9^[-H-3H8)GL>^[5IT>G))I-\^[-GT<ZT
)@@G@@I(!I(?GD4G*)GT*GD2GD<I->IK)^@)@H@@@@ 0)^@)^[3I-2HD,G93^[5H1=G(2^[-H1\I-*ZU
)@@G@@G(2^[?H9<GD4HD\H0)GT\I(,I->IK,^@)E-*HD3 ))@J@@@@ 0)^@)^[*H97G(6G(2 ))HD3ZV
)@@G@@^[,H94^[2G(<H9!H(>H1=G(=^[7HD4H[(H0)I-*G*)ETOELPCS=^[>H16HD2H9, *)@K@@@@ZW
)@@G@@ 0)^@)^[!G(,I)) [7HD4H[(H0)GT\H14IL\H))IT4IL5GT4I(2G(3 C)GL>GT-I(3G*)H--ZX
)@@G@@GL>H-3^[7H95H-=^[+G*)^@)@I@@@@ 0)^@)^[2G(1I((IL>G))I-\^[!GD:G*)HD4IS)I(3ZY
)@@G@@G*)H(>GD,HD,G9&I(? 0)^[OH[>^[?H9<GD4HD\H0)@K@@@@ 0)^@)^[<H95H14G(2^[5IT>ZZ
)@@G@@G))G1\IK)GL5G1&G(2^[-IL>GC)HD3^[(H1(I-(GD?H-9^[3G(4^[4H8)A),^@)E-*G*)^@)AA
)@@G@@@K@@@@ 0)^@)^[5IT>IK)H(-JC)IT>I))I-*HD3^[4H8)I9*GD4^[>I1>IK)HD3^[=G(3HD2AB
)@@G@@G(=^[0IL(H92^[4H8)GD,JC)GT-H-?@G@@@@ 0)^@)^[4H8)E[MDDIE)\CTNC0\D9KC(ID( AC
)@@G@@ETNCDBC*)I1(GC)I-*G*)G1\H-?H97HD,G8'@F@@@@ 0)^@)^@)^@)^@)E[MCK=D-#^@)C(LAD
)@@G@@E*)^@/^[=G(3HD2G(=^[GCS)I1-H-5G*)B0,@[@@@@ 0)^@)@D@@@@ 0)I-*G*)E[MD9#^[<AE
)@@G@@GD?H-3^[-IL>^[4H[>^[&H9?H-\I9(H1$BK)@[@@@@ 0)^@)@J@@@@ 0)E[MDDIE)\CTNC0\AF
)@@G@@D9KC(ID( ETNCDBC*)FT C-DE-X^[VE[[CTFC(O )/GD=G-2^[\G0)I(3G(2^[0HT4B1X^@!AG
)@@G@@@J@@@@ 0)^@)^@)^@)^@)E-*HD3^[(IS)GC)I(4HD?HD4JC)E[MD9#^[4H8)HD,HD4HD-H-(AH
)@@G@@JL>^[-^[0H94G(,I-(GD?^@)@I@@@@ 0)^@)^@)^@)^@)E[MDDIE)=^[\IK)CTNC0=^[\H0)AI
)@@G@@GD,^[(H1?HD,G*)H92^[>G-(I->G))H(>IT3GD$G*,@J@@@@ 0)^@)^@)^@)^@)CD?H))I-*AJ
)@@G@@IL>G*)G(,I-2JC)I[\HD,I-3^[-IL> ))HD,^[2G(-H-(I-9 ))HD=G(,I-(GT-H)?@J@@@@AK
)@@G@@ 0)^@)^@)^@)^@)GL5I))GD2G*)I[2H96HD=G(=^[&H92^[<H--IL(I-9 0)^[DI))HD3^[4AL
)@@G@@H[>^[<H-\IT(H1$^@)@L@@@@ 0)^@)^@)^@)^@)E[MD9#^[<GD?H)) [ D1^D( ETNCDBC*\AM
)@@G@@C(IC-KELDD1O 9 D1^CTNC0(^[7H[(GT*^[=G(4G(2H((H1>IS)^@)@K@@@@ 0)^@)^@)^@)AN
)@@G@@^@)I9*GD4^[-GT4HD\H0)I-\^[+G*)I--HT>H0)H9,^[-^[2G(3I(?I--H14^[(H(-G9> 0)AO
)@@G@@^[]H94H@)^@)@J@@@@ 0)^@)^@)^@)^@)^9 C-DE)$^[-H1=^@$E[[CTFC(O^8)I[-IL-H(>AP
)@@G@@I->IL3^[-IL>^[\I[4HD\H1-H),^@)DD&^@)@J@@@@ 0)^@)^@)^@)^@)^9 C-DE)$^[(IS)AQ
)@@G@@IT0G(<HD&HD>G))I-*G*)C(^DDO^))IL\I(4HD,G(3^[-IL>^[\I[>H1>G))@H@@@@ 0)^@)AR
)@@G@@^@)^@)^@)GD,G))I-*G*)H(>IT3GD$G*)I9(H-?^[+G*)H(\I1>G))I-\^[4H[>^[ C-DE)=AS
)@@G@@@I@@@@ 0)^@)^@)^@)^@)GL5G1&G(2^[&H92^[\I(4I[5I),^@)DD&^[KCD#DT E))HD3^[0AT
)@@G@@IL>IT>H14^[(I))HD3@I@@@@ 0)^@)^@)^@)^@)I(3G(=^[-IS)I-*G*)C(^DDO^))I[:I)?AU
)@@G@@^[\I-*G(2I9(IT>^[-^[0GD<HT>I))GD,G))@K@@@@ 0)^@)^@)^@)^@)GL5G1&G(2^[-IL>AV
)@@G@@^[<IL>GD4G(=^@*H9,H-9^[\H1<G*)I[>IK)GD3IT>H(+H-9 C)GD,G))I(3G(= 0)@[@@@@AW
)@@G@@ 0)^@)@A@@@@ 0)C(IC-HC(NET[C9 ^[VCTJE[TF*) *)^@)@J@@@@ 0)^@)^@)^@)^@)GD?AX
)@@G@@H-\I93^[3I(3I[>H13HD\H0)H9&^[(H1?HD,G*)GT*GD2GD<I->IK)IT4IL(H1$ 0)^[DG0)AY
)@@G@@@K@@@@ 0)^@)^@)^@)^@)^9 C-DE)$^[7GD3^[(H1(I-(GD?H-9^[3I[>GT(G1(G(=^[4H[>AZ
)@@G@@^[(H(-G9>^[(IS)H(\I1>G))I-\^@)@K@@@@ 0)^@)^@)^@)^@)I-*G*)C(^DDO^))GL5G1&BA
)@@G@@G(2 0)^[DG0)^9#D9KFC$^[(IS)IT0G(<HD&HD>G))I-*G(,^[ CTJE[T^))@F@@@@ 0)^@)BB
)@@G@@^@)^@)^@)HD3^[5IT>G))H94H[>IL7HD3G*)C(HETB^))HD3^[<GD?H->G),@[@@@@ 0)^@)BC
)@@G@@@#@@@@ 0)EL D9KC(I^@!^@)@J@@@@ 0)^@)^@)^@)^@)GD?H-\I93^[2G(3I(!I[4HD\H0)BD
)@@G@@H9&^[(H1?HD,G*)GT*GD2GD<I->IK)IT4IL(H1$ 0)^[DG0)@K@@@@ 0)^@)^@)^@)^@)^9 BE
)@@G@@C-DE)$^[7GD3^[\IL(G9(H1-H-?JC)IT0G(<HD&HD>G))I-*HD3^[!GD2HT3^[4H[>^[3I--BF
)@@G@@IL4^@)@J@@@@ 0)^@)^@)^@)^@)H9&^[-^[,G(7^[!G(3IT-G9>^[3G($H(>H14 ))H94H[>BG
)@@G@@IL7HD3G*)I-*G*)IT5GL3G(1I(>H14@J@@@@ 0)^@)^@)^@)^@)IT4IL(H1$^[(IS)IT(H(0BH
)@@G@@H-9^[-I[0G(,G->G))I-\^[4H[>^[0IL>I1(H95IS)IT4IL(H1$ 0)@[@@@@ 0)^@)@C@@@@BI
)@@G@@ 0)C(IC-KELDD1O^[VETFDDK )/^S"F*)FT#D9KFDX^@!^@)@I@@@@ 0)^@)^@)^@)^@)E-*BJ
)@@G@@HD3^[<GD5IT>IS)GC)I[2HD,I)=^[4H8)GL>^[=H9,G*)I9(I-*^[4H[>^[2G*!^@)@J@@@@BK
)@@G@@ 0)^@)^@)^@)^@)IT5H-4GD,I))HD!GD$G*,^@)DD&^@$ETFDDK^8)HD3^[0IL\I1(G->G))BL
)@@G@@I-*G*)H15H(+G(2^@)@I@@@@ 0)^@)^@)^@)^@)HD3^[5IT>G))GD3^[4H[>^[3HT(I@)GT\BM
)@@G@@I(,I)?^[\I-*G(2I9(IT>^[4H[>^[<H95H14@J@@@@ 0)^@)^@)^@)^@)G->G1-I(?I-3^[4BN
)@@G@@H8)AC,^@)DD&^@$CTJE[T^8)HD3^[$HD6G(,^[-H1=^@$C(^DDO^8)I9-IS)@I@@@@ 0)^@)BO
)@@G@@^@)^@)^@)I[2G(6HD\I(3H-9^[3I[>GT(G1(G(=^[4H[>H0)C(#D9KFC=^[(IS)GT-H-?G(=BP
)@@G@@^[4H8)@K@@@@ 0)^@)^@)^@)^@)H(\I1>^[4H[>^[?GD3I))HD,H-(H1>^[3I-2HD,G8?^[\BQ
)@@G@@I-*G(2I9(IT>^[ D(NC8=^[(IS)I(3G(= 0)@[@@@@ 0)^@)@F@@@@ 0)C(IC-#ETA^[VCTJBR
)@@G@@E[TF*)FTNC(O )/IL>GT>HD6HD,G8)H-\GT-I-(H9,B1X^@!@I@@@@ 0)^@)^@)^@)^@)E-*BS
)@@G@@HD3^[<GD5IT>IS)GC)CTNC0=^[4H8)GL>^[=H9,G*)H9,^[4H[>^[2G(3I(?I--H14@J@@@@BT
)@@G@@ 0)^@)^@)^@)^@)HD!GD$G*,^@)DD&^@$C(^DDO^8)H[-IS)GL>G(,^[3I[>GT(G1(G(=^@$BU
)@@G@@CTJE[T^8)I9(H-?^@)@I@@@@ 0)^@)^@)^@)^@)G1\IL<G*)GC)GT-H-?^[4H8)C(#D9KFC=BV
)@@G@@ ))H94H[>IL7HD3G*)C(HETB^))I9(H-?^@)@I@@@@ 0)^@)^@)^@)^@)GL>^[5IT>G),^@)BW
)@@G@@DD&^@$ET E)$^[(IS)IT0G(<HD&HD>G))I-*G*)IL>GT>HD6HD,G8)@I@@@@ 0)^@)^@)^@)BX
)@@G@@^@)H-\GT-I-(H9,^[7HD?H))GL>^[?H9-G->G))I9(I-*^[4H[>^[2G(4I(2H0)IT4GD4I(3BY
)@@G@@@A@@@@ 0)^@)^@)^@)^@)G12H9!^[4H[>^[#ETA^),@[@@@@ 0)^@)@A@@@@E@)^@)^@)^@)BZ
)@@G@@^@)^-KELJCS)^@)^@) K2^@)@L@@@@E[MDDIE)%^@)^@)^-ICDHC*)^@)^@)^@)^@)^@)^@)CA
)@@G@@^@)^@)^@)^@)^@) 0)G(,I-2JC)G1\IK)E[MDDIE)=^[3G(1I(>H1<G*)^@)@K@@@@CTNC0%CB
)@@G@@^@)^@)^@)^-ICDHC*)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)G(,I-2JC)G1\IK)CTNCC
)@@G@@C0=^[3G(1I(>H1<G*)@I@@@@D9KC(ID( ETNCDBC*%^@=D1[D( ^@)^@)^@)^@)^@)^@)^@)CD
)@@G@@^@)^@)^@) 0)GD2GL(I-2GD2JC)G(,I-2JC)@[@@@@ 0)^@)@L@@@@ 0)^@)^@)^@)^@)D*=CE
)@@G@@^- C0)^@)^@) *)G(=HD4^[&H--G8,^@.AC)HD&^[5IT(H1$^[ C-DE)= ))B*0^[\I-*G(2CF
)@@G@@I9(IT> 0)^@)@N@@@@ 0)^@)^@)^@)^@)D*=^-GCS)^@)^@) *)H-\GT-I-(H9,^[<H95H14CG
)@@G@@G(2^[\G0)E[MDDIE)?^[#ETA ))H92^[JE[ D1HC(NET[C9 ^[0IL\GT3^@)@G@@@@ 0)^@)CH
)@@G@@^@)^@)^@)D*=^-]CK)^@)^@) *)G9>H1>IL-I->G))GL5G1&G(2^[+G($HD,H1(H1$@F@@@@CI
)@@G@@ 0)^@)^@)^@)^@)D*=^-]C*)^@)^@) *)G9>H1>IL-I->G))GL5G1&G(2^[>H1=^@)@H@@@@CJ
)@@G@@ 0)^@)^@)^@)^@)D*=^-]CC)^@)^@) *)G9>H1>IL-I->G))C(^DDO^))GL5G1&G(2^[-G-=CK
)@@G@@IL>IT3@H@@@@ 0)^@)^@)^@)^@)D*=^-KCC)^@)^@) *)G9>H1>IL-I->G))C(^DDO^))I[-CL
)@@G@@GT:G(4^[-G-=IL>IT3@[@@@@ 0)^@)@K@@@@D*=^-GCS%^@)^@)^- EDP^@)^@)^@)^-GCTICM
)@@G@@^@)^@)^@)^@)^@)^@)^@) 0)GT5IL2G(,I))H-\GT-I-(H9,^[<H95H14G(2@K@@@@D*=^- CN
)@@G@@C0%^@)^@)^- EDP^@)^@)^@)A@)^@)^@)^@)^@)^@)^@)^@)^@) 0)GD3IT5H(>^[,H8)C(^CO
)@@G@@DDO^[0GD2GD!G(4G(2@K@@@@DC)^-^D8)A@?E@!AC) ))^-^D8)E@*DC?AC(B( C-DE)) -HCP
)@@G@@^)=C(A K)^- EDP^@1^@,^[(G0)C(^DDO ))IT>I))G1?GD$@#@@@@^)*E[MCK=D-# C)^@)CQ
)@@G@@@L@@@@D*=^-]CK%^@)^@)^- EDP^@)^@)^@)^))^@)^@)^@)^@)^@)^@)^@)^@) 0)GL>G9(CR
)@@G@@H1,HD,G8)H9&^[+I(&G1>IK)GD=G-2G(3IS)@J@@@@^@)^@)^@)^@)^@)F-H^)=C(A *"^- CS
)@@G@@D1^^@)^@)^@)^@)^@)^@)^@)^@) 0)ID5HD4^[(G0)H1\^[ C-DE))G1?GD$@J@@@@E[FE))CT
)@@G@@^@)^@)^@)^- EDP^@)^@)^@)A@)^@)^@)^@)^@)^@)^@)^@)^@) 0)HD,HD4HD-H-?JC?^[,CU
)@@G@@H8)I[-GT:G(4@L@@@@DC)^-^D8)AC?E@!AC) ))^-^D8)E@*DC?AC(B(KCD#DT E)) -KDTOCV
)@@G@@^@=C(LE*)DC) 0)IT<GD,^[&H92^[0HT4^[3HD$H1-H))^@)@L@@@@^@)^@)^@)^@)^@)^-DCW
)@@G@@C0)^@)^@)^@)D*=^-KC0!B00^DWE[FE))^@)^@) 0)G9>H1>IL-I->^@1^[0HT4^[0G(2^[-CX
)@@G@@IT3G(!GL?JC)@J@@@@D*=^-KC0%^@)^@)^- EDP^@)^@)^@)AC)^@)^@)^@)^@)^@)^@)^@)CY
)@@G@@^@) 0)I[\IT4^[0GD<HT>I))G9>H0)G1?GD$@H@@@@D*=^-]CC%^@)^@)^-MC(N^@)^@)^@)CZ
)@@G@@AK2^@)^@)^@)^@)^@)^@)^@)^@) 0)HD!GD$G*)GD2G(-^@)@I@@@@D*=^-KCC%^@)^@)C*=DA
)@@G@@E[FE))^@)^@)AK2 -H^)=CL[^@)^@)^@)^@)^@) 0)GT2G(-I->^[ C-DE)=^[0HT4@^@@@@DB
)@@G@@^@)^@)^@)^@)^@)^- D1^C0)@]@@@@^)*D*=^-GCS(@I@@@@^@=C-J^[WE[FE)) ))D-[ -PDC
)@@G@@^@)^@)CC0 -H^)=E[[^@)^@)^@)^@)^@) 0)G9>I))I[-GT:G(4^[-G-=IK)@C@@@@^@=C-JDD
)@@G@@^[WF-KDTO^@?^[GD9[C))^@)CC0 -K [KDTO C?AK)@H@@@@^@)^@)^@)^@)^@)D-HDK)^@)DE
)@@G@@^@)^@)F@1AC?C(^DDO^))^@)^@)^@)^@) 0)H90G(,^[ C-DE)=^@)@J@@@@^@)^@)^@)^@)DF
)@@G@@^@)E@*A@?AC(B00 *"^- D1^^@)^@)^@)^@)^@)^@)^@) 0)E[MDDIE)?C(^DDO^@!^[1I((DG
)@@G@@I))^@)@^@@@@EL D9KC(I K)^@)^-ICDHC*)@K@@@@^)*E[MCK=D-# C)^@)^@)^@)^@)^@)DH
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)IT7HD4GT*^[GCS)GL-GT:^[4H8)GL5G1&G(2@L@@@@DI
)@@G@@^@=C-J^[H^)=C(A^@?D*=^-]CK%^@=C(LE*)^))^@)^@)^@)^@)^@)^@) 0)IT>I))H1>I8)DJ
)@@G@@GL5G1&G(2^[+G($HD,^[-G-=IK)^@)@^@@@@^@)^@)^@)^@)^@)^- D1^^@)@A@@@@E@)^@)DK
)@@G@@^@)^@)^@)^-KELJCS)^@)^@) K2^@)@A@@@@D( ETOC(MD*%^@)^-ICDHC*)^@)^@)^8% K$DL
)@@G@@@A@@@@C(IC-HC(NET[C9  K)^-ICDHC*)^@)^8%^8)@K@@@@^@)^@)^@)^@)^@)D*=^-GCS.DM
)@@G@@^-GCTI *"^- D1^^@)^@)^@)^@)^@)^@) 0)ID5HD4^[(G0)H1\I))HD,^[+I(&G1>IK)D-#DN
)@@G@@@I@@@@D*=^-]C(VE@*A@?A@(F*)^- EDP^@)^)*E[MCK=D-# C)^@)^@)^@)^@) 0)H(-IL:DO
)@@G@@^[+I(&G1>IK)G(,G))@K@@@@^)*D*=^-GCS(^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)DP
)@@G@@^@)^@)^@) 0)IL>IT>I))I-\^[<H9=G*)H-\GS)GT,I-2^@)@J@@@@^@)^@)^@)^@)^@)F-HDQ
)@@G@@^)=C(A *"^- D1^^@)^@)^@)^@)^@)^@)^@)^@) 0)HD&^[,H94^[ C-DE)) *)ID5HD4^@)DR
)@@G@@@K@@@@DC)^-^D8)A@?E@!AC) ))^-^D8)E@*DC?AC(B(#D9KFC) ))^-BD8)CTJE[T^@,^[(DS
)@@G@@G0)CTJE[T^[3G(4 ))G9\^[=H8)HD4@K@@@@^@)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC0 -HDT
)@@G@@^)=CL]^@)^@)^@)^@)^@) 0)G9>I))GL>G9(H1,HD,G8)H9&^[!G(3IT-G9>@H@@@@^@)^@)DU
)@@G@@^@)^@)^@)D-HDK)^@)^@)^@)F@1AC?C(HETB^))^@)^@)^@)^@) 0)GT\I[9^[!G(3IT-G9>DV
)@@G@@@F@@@@^@)^@)^@)^@)^@)AC!B0=C(IC))^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)ID5HD4DW
)@@G@@@^@@@@CTJE[T^@)^@)^@)^-ICDHC*)@M@@@@^@)^@)^@)^@)^@)D-I -P^@)^@)^@)CC1 ):DX
)@@G@@ [H^)=CL  (H^)=CL] C) 0)H-\GD=^[,G($GD4HD6G*)H->H1$I-*^[(H0)I9\IL=IS)^@)DY
)@@G@@@J@@@@^@)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC0 -H^)=CL]^@)^@)^@)^@)^@) 0)G9>I))DZ
)@@G@@GL5G1&G(2^[+G($HD,H1(H1$@G@@@@^@)^@)^@)^@)^@)D-HDK)^@)^@)^@)F@1AC?C(#D9KEA
)@@G@@FC=^@)^@)^@)^@) 0)GT\I[9^[(I))@^@@@@^@)^@)^@)^@)^@)^- D1^^@)@A@@@@E@)^@)EB
)@@G@@^@)^@)^@)^-KELJCS)^@)^@) K2^@)@I@@@@C(IC-KELDD1O K)^-ICDHC*)^@)^@)AC)^@)EC
)@@G@@^@)^@)^@)^@)^@)^@)^@) 0)I[2HD,I))H(>IT3GD$G*)^@)@H@@@@C(IC-#ETA K)^@)^-IED
)@@G@@CDHC*)^@)^@)A@)^@)^@)^@)^@)^@)^@)^@)^@) 0)G-\^[ EK)CTNC0=^@)@H@@@@E[ME-AEE
)@@G@@^@)^@)^@)^- EDP^@)^@)^@)E@*A@?A@(^@)^@)^@)^@)^@)^@) 0)I[2HD,I))G1?GD$^@)EF
)@@G@@@M@@@@ETFDDKCS)^@)^@)^- EDP^@)^@)^@)E[ME-A^@)^@)^@)^@)^@)^@)^@) 0)G->G1-EG
)@@G@@I(?I))IT:HD0^[<H95H14^[(IS)I[2HD,I))G1?GD$@L@@@@DC)^-^D8)A@?E@!AC) ))^-^EH
)@@G@@D8)E@*DC?AC(B(NDTDE@) -NDTDE[#^@=C(LE*)E@*DC?AK(^@,^[3G(4^[3HT(I@)GT\I(,EI
)@@G@@I))^@)@K@@@@^@)^@)^@)^@)^@)D( ETOC(MD*)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)EJ
)@@G@@I->IL!HD,GD4G*)I-*G*)H(>IT3GD$G*)^@)@G@@@@^@)^@)^@)^@)^@)^-DC0)^@)^@)^@)EK
)@@G@@D*=^- C0)^@)^@)^@)^@)^@)^@) 0)HD&^[ C-DE))@I@@@@^@=C-J^[KELOC0) ))D-[ -PEL
)@@G@@^@)^@)CC0 -NDTDE[#^@)^@)^@)^@)^@) 0)IT>I))IT:HD0^[<H95H14^@)@L@@@@^@)^@)EM
)@@G@@^@)^@)^@)D-HDK)^@)^@)^@)F@1AC?E[ME-A *"C(KELO^)-C(#ETA^)) 0)GT-H-?^[-I[0EN
)@@G@@IL\I[2HD-I->^[2H95I-(H1>@G@@@@^@)^@)^@)^@)^@)^- D-NC*)^@)^@)^@)^@)^@)^@)EO
)@@G@@^@)^@)^@)^@)^@) 0)I(3G*)C(M^@)@N@@@@^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC0 )*EP
)@@G@@^-BC1JELH^@1AK?ETFDDKCS?A0?D*=^-]C*!D*=^-]CK?AC8 -H^)=CL] C) 0)G9>I))E[#EQ
)@@G@@E8)^@)@J@@@@^@)^@)^@)^@)^@)C(M^@)^@)^@)^@)E[ME-A *"E[MDDIE)=^D#ETA^)) 0)ER
)@@G@@IL>ID5G(3I))IT\H(>^[3G(2I1(GT>@^@@@@^@)^@)^@)^@)^@)^- D1^C0)@G@@@@DC)^-^ES
)@@G@@D8)A@?E@!AC) ))^-^D8)E@*DC?AC(B(NC(O^@?^[NE-JEL ^[[A@?E@*DC( )2^@)@H@@@@ET
)@@G@@^@=C-J^[H^)=C(A^@?^[GD(E^@)^@)F@1AC?C(^DDOF@=^@)^@)^@)^@) 0)GT?H93G*)C(^EU
)@@G@@DDO^))@^@@@@^@)^@)^@)^@)^@)^- D1^^@)@[@@@@ 0)^@)@D@@@@ 0)CT*GD2GD<I->IK)EV
)@@G@@IL\I(4HD,G*)E[MD9#^[(H14G(2G1-GT>^@!@J@@@@ 0)^@)^@)E-*G*)G1\H-?H97HD,G8)EW
)@@G@@I[2H9<IS)GD2G*)I[2H96HD=G(=^[-IS)GD,^[>GD3JC)HD,I->IL&GD<G*)@I@@@@ 0)^@)EX
)@@G@@^@)I9(I-*^[4H[>^[<H[-IL-GT4G(2^[&G(4GT*^[-H1=^[3I-\IL>^[2H95I-(H1>IS,^@)EY
)@@G@@E-*G(9@K@@@@ 0)^@)^@)GD2G*)G->IT(G9,G(=^[4H8)I--HT>^[-G-6GD,I--G9>^[\G0)EZ
)@@G@@I-*G*)GD=G->G))G1?G(8HD+HD?HD4JC)^@)@F@@@@ 0)^@)^@)I[2H96HD=G(=^[+JC)I-*FA
)@@G@@G*)IT*HD&I))I--GL?G*)GD0I[2H9-GT* 0)@[@@@@ 0)^@)@^@@@@ 0)HD,I[5I))E[MD9#FB
)@@G@@ES) *)@[@@@@ 0)^@)@^@@@@ 0)^@)^@)C*=C9 E)) *)^@)@K@@@@ 0)^@)^@)^@)^@)^[OFC
)@@G@@H[(IS)E[MD9#^[7HD?H))H-\GD=^[[AS)I9(I-*^[4H[>^[,G(8I))GT*GD2^[&IL\H*)I-*FD
)@@G@@G*)^@)@K@@@@ 0)^@)^@)^@)^@)^[(H10I(4^[7H92G))GD,G))G(8G(<I(4G*)I-*G*)IT*FE
)@@G@@HD&I))I--GL?G*)I-\^[2G(-G-9^[4H[>^@)@K@@@@ 0)^@)^@)^@)^@)^[&H9?H-\I9(H1$FF
)@@G@@^[<H[-IL-GT4G(2^[&H92^[3I(+IT>ID5G(,I))HD,I[5I),^@)C9>H1>IL-I->IS)@B@@@@FG
)@@G@@ 0)^@)^@)^@)^@)^[4I9\^[(H13I-2I(<I-(H9,IS,@^@@@@ 0)^@)^@)C*=D-JD9F^@!^@)FH
)@@G@@@L@@@@ 0)^@)^@)^@)^@)^[7HD?H))H-\GD=^[[AS)I9(I-*^[4H[>^[,G(8I))GT*GD2GD<FI
)@@G@@I->IK)G12H9!^[4H[>^[(H10I(4^[7H92G))@K@@@@ 0)^@)^@)^@)^@)^[+I(4^[7HD?H))FJ
)@@G@@G(8G(<I(4G*)H1\^[3H[(G14 ))H(-HD,I--HD,HD,G8)I-*GD4^[<H[-IL-GT4G(2@I@@@@FK
)@@G@@ 0)^@)^@)^@)^@)^[-IS)I-*G*)H1>J[4^[\H1> 0)^[BG(,G(2GD4G(3^[\H1>^[(H13I-2FL
)@@G@@I(<I-(H9, 0)@^@@@@ 0)^@)^@)C*=D1 F[O^@!^@)@L@@@@ 0)^@)^@)^@)^@)^[7HD?H))FM
)@@G@@G(8G(<I(4G*)I-*G*)IT*HD&I))H9,^[4H[>^[,G(8I))GT*GD2GD<I->IK)H9&^[4H[>^[(FN
)@@G@@H10I(4@M@@@@ 0)^@)^@)^@)^@)^[7H92G))G-\HD,G8)GD,^[>G1&G(<I-(I1>^[3HT(I@)FO
)@@G@@H9&^[4H[-I))GT*GD2GD<I->IK,^@)D1\^[<H[-IL-GT4G(2@H@@@@ 0)^@)^@)^@)^@)^[(FP
)@@G@@IS)G1>I-<H[>G),^@)C9>H1>IL-I->IS)H9,G*)HD,IT4IL5GT4HD\H0,^@)@^@@@@ 0)^@)FQ
)@@G@@^@)C*=EL D9KC(I^@!@L@@@@ 0)^@)^@)^@)^@)^[7HD?H))G1>I-<H@)I-*G*)H1>J[4^[7FR
)@@G@@H92G))I[\HD,I->G))I-\^[+JC)CC0^[-IS)I-*G*)GT5IL2G(,I))@L@@@@ 0)^@)^@)^@)FS
)@@G@@^@)^[(H10I(4^[7H92G))GD,G))IT>I))I-\^[&G(4GT*^[4H[>^[&HD2IT4^[<H[-IL-GT4FT
)@@G@@G(2^[\G0)I-*GD4^@)@L@@@@ 0)^@)^@)^@)^@)^[7H92G),^@)E-*G*)GT\H14G(,I-3^[-FU
)@@G@@H1=^[3I--I-5IS)H9&^[-H19^[0IL>I1(H95IS)HD,I[5I))I9\IL=@I@@@@ 0)^@)^@)^@)FV
)@@G@@^@)^@*CC2 C)GD2G*)H-\IT4 0)^[BG(,G(2GD4G(3^[4I9\^[(H13I-2I(<I-(H9,IS,^@)FW
)@@G@@@I@@@@ 0)^@)^@)C*=D9AC1NC(O^[]FC?B-?H9<^[7HD4H@)^S)H9&^[\G1&IT>I))GT*GD2FX
)@@G@@GD<I->IL3B0) *)^@)@J@@@@ 0)^@)^@)^@)^@)^[&H92GT>IS)G1(IL3I))GT*GD2GD<I->FY
)@@G@@IK)I-\^[+G*)G1>I-<H[>G))I-\^[+G*)H14H@)^@)@J@@@@ 0)^@)^@)^@)^@)^[<H[-IL-FZ
)@@G@@GT4G(2^@*I-*HD3^[(IS)I-*G*)H9&G13G(4 C)H9&^[4H[>^[(H10I(4^[7H92G),@J@@@@GA
)@@G@@ 0)^@)^@)^@)^@)^[DI))GD3IT5H(>IS)I-*GD4^[4H[>^[(H10I(4^[2H95I-(H1>^[*GD3GB
)@@G@@^[%I(3I))GL>G(,^@)@J@@@@ 0)^@)^@)^@)^@)^[(H1(I-(GD?HD'G(=^[\IK)I-*GD4^[-GC
)@@G@@^[MC(JE[ D0)H[-IS)HL5IT4^[+G(>H0)G-\H1> 0)@E@@@@ 0)^@)^@)^@)^@)^[BG(,G(2GD
)@@G@@GD4G(3^[&H95IK)HD,IT4IL5GT4HD\H13 0)@[@@@@ 0)^@)@^@@@@ 0)D9PE-KE(O^[KELJGE
)@@G@@CTN^@!@[@@@@ 0)^@)@^@@@@ 0)^@)^@)C*=E[PE)) *)^@)@K@@@@ 0)^@)^@)^@)^@)^[3GF
)@@G@@I-\IL>IS)GT*GD2GD<I->IK)HD,^[[AS)HD,^[\I(4I[5I))I9\IL=^[-H1=^[>J[>GT5I->GG
)@@G@@IS)^@)@J@@@@ 0)^@)^@)^@)^@)^[3H[(G14^[4H8)IL>GD=JC)G1\IK)H1>J[4^[<H[-IL-GH
)@@G@@GT4G(2 0)^[BG(,G(2GD4G(3^[4I9\@A@@@@ 0)^@)^@)^@)^@)^[(H13I-2I(<I-(H9,IS,GI
)@@G@@@^@@@@ 0)^@)^@)C*=ET[E1 ^@!^@)@J@@@@ 0)^@)^@)^@)^@)^[3I-\IL>IS)GT*GD2GD<GJ
)@@G@@I->IK)HD,I-\^[\I(4I[5I))I9\IL=^[+I(4^[>J[>GT5I->IS)H1\@L@@@@ 0)^@)^@)^@)GK
)@@G@@^@)^[3H[(G14 0)^[MG(0G(4HD4HD6G*)C*=ET[E1 ^93^[\IK)GC)IT5GL3G(1I(>H14^[ GL
)@@G@@^-KE(O^[7HD?H))^@)@L@@@@ 0)^@)^@)^@)^@)^[\I1>IL7IL(I->^[4H[(IS)GT*GD2GD<GM
)@@G@@I->IK)I(,H->IT3^[(I))H[-IS)GL>G(,^[>J[0H-(GT(I-?JC)^@)@H@@@@ 0)^@)^@)^@)GN
)@@G@@^@)^[3H[(G14G(=^[\I(4 0)^[BG(,G(2GD4G(3^[\H1>^[(H13I-2I(<I-(H9, 0)@^@@@@GO
)@@G@@ 0)^@)^@)C*=EL CT[D-G^@!@K@@@@ 0)^@)^@)^@)^@)^[?H9-G-3^[(H14H8)CC3^[4H[>GP
)@@G@@^[<H[-IL-GT4G(2^[,H97^[7GD(I-(H1$^[&H92^[\I(4I[5I),^@)@K@@@@ 0)^@)^@)^@)GQ
)@@G@@^@)^[DG0)GD,^[ ^-NCDQC*)I9-IS)G-\H1>^[?GD3I)) *)I-*GD4^[<H[-IL-GT4G(2^[7GR
)@@G@@HD?H))GL>^@)@K@@@@ 0)^@)^@)^@)^@)^[2G(4IL(G(6G(=^@!^[(I))I9(H-?^[,H94^[+GS
)@@G@@G*)IL>H(\I1>G))G12H9!^[4H[>^[\I(4I[5I))^@)@K@@@@ 0)^@)^@)^@)^@)^[7H92G),GT
)@@G@@^@)DD&^[-H0)C*=ET[E1 ^[7GD3^[,H94^[4H[>^[?GD3I))H95I-0I(4^[\I[>IL-I-(H9,GU
)@@G@@@J@@@@ 0)^@)^@)^@)^@)^[=H9,G*?^[-^[+H--H1:^[<H[-IL-GT4G(2^[7HD?H))GL>^[&GV
)@@G@@G(4GT*G(=^[&IL\H*)I-*G*)@J@@@@ 0)^@)^@)^@)^@)^[\I(4I[5I))I9\IL= 0)^[OH[(GW
)@@G@@IS)HD3^[+G(<GD5IT>^[4H[>^[\I(4I[5I))I9\IL=^[(IS)@J@@@@ 0)^@)^@)^@)^@)^[0GX
)@@G@@IL>H-\GD=G(=^[7HD4H@)GL?GD,HT3^[7H[(GT*^[-IL>^[2G(4GD(H1>G))I(,I-(H))^@)GY
)@@G@@@I@@@@ 0)^@)^@)^@)^@)^[\I1>IL7IL(I-4G(,^[+JC)GD,^[>J[0H-(GT(I))H95I-0I(4GZ
)@@G@@^[\I[>IL-I-(H9, 0)@E@@@@ 0)^@)^@)^@)^@)^[BG(,G(2GD4G(3^[4H[2G(>^[(H13I-2HA
)@@G@@I(<I-(H9,IS,@^@@@@ 0)^@)^@)C*=D9PE)) *)^@)@L@@@@ 0)^@)^@)^@)^@)^[OH[(IS)HB
)@@G@@I9(H-?^[>J[>GT5I->^[-^[3H[(G14^[\H0)I-*G*)H95I-0I(4^[7H92G),^[[H0)C*=ET[HC
)@@G@@E1 ^@)@J@@@@ 0)^@)^@)^@)^@)^[&H9?H-\I9>G))GL9^[-H0)C*=D9PE))HD3^[>IT3G(,HD
)@@G@@I-(GD?H-9^[(G->H14HD<GD?^[4H8)@G@@@@ 0)^@)^@)^@)^@)^[-H0)C*=E[PE),^@)C9>HE
)@@G@@H1>IL-I->IS)H9,G*)HD,IT4IL5GT4HD\H0,@^@@@@ 0)^@)^@)C*=CLGDS) *)^@)@K@@@@HF
)@@G@@ 0)^@)^@)^@)^@)^[OH[(IS)HD3^[2G(-H-?JC)I-*G*)IT-H(>^[-IS)C*=D9PE))GL5I))HG
)@@G@@HD3^[0IL\I1(G->G))G1\IK)@K@@@@ 0)^@)^@)^@)^@)^[<H--IL(I-9 0)^[NHD,GT>^[4HH
)@@G@@H[>^[\I(4I[5I))I9\IL=^[(IS)H92HD$HD,GD?H-9^[+H--H1:^@)@J@@@@ 0)^@)^@)^@)HI
)@@G@@^@)^[&HD?H->G)?^[-^[ ^-]D-F^@*H92^[ ^-JE(O C)I9*HD<H@)G-\G(3^[,H94^[&H9?HJ
)@@G@@H-\I8)@J@@@@ 0)^@)^@)^@)^@)^[-^[ ^-NCDQC*)I[2H9=I(<G(3^[-^[+H--H1:^[(H0)HK
)@@G@@I-*G*)H95I-0I(4^[3I-2HD,G8,^@)@E@@@@ 0)^@)^@)^@)^@)^[BG(,G(2GD4G(3^[\H1>HL
)@@G@@^[(H13I-2I(<I-(H9, 0)^@)@^@@@@ 0)^@)^@)C*=ETOD9MC*) *)@L@@@@ 0)^@)^@)^@)HM
)@@G@@^@)^[&H92GT>IS)GD,^[(H(!G(=HD-I->^[3I-\IL>^[\G0)I-*G*)H95I-0I(4^[7H92G),HN
)@@G@@^@)D1\^[?G(&I))^@)@J@@@@ 0)^@)^@)^@)^@)^[\IK)IL(G9*I))HL5IT4HD&HD<GD4HD\HO
)@@G@@H0)HD3^[=H9,G*,^@)DD4^[-IT3I(!G(3^[4H[>^@)@J@@@@ 0)^@)^@)^@)^@)^[5IT>IK)HP
)@@G@@HT,H97IS)I9*GD4^[*G*)H[-IS)GD,G))I9-H14IS)HD4^[(H0)I-*G*)H95I-0I(4@G@@@@HQ
)@@G@@ 0)^@)^@)^@)^@)^[3I-2HD,G8,^@)C9>H1>IL-I->IS)H9,G*)HD,IT4IL5GT4HD\H0,^@)HR
)@@G@@@^@@@@ 0)^@)^@)C*=CDGD-DC9I^@!@L@@@@ 0)^@)^@)^@)^@)^[#H->GD2IS)H95I-0I(4HS
)@@G@@^[7H92G))I-\^[+H--H1:IS) *)H1\^[3I-\IL>^@!^[?G(-I1>IS)IT*HD&I))^@)@K@@@@HT
)@@G@@ 0)^@)^@)^@)^@)^[4GD+H->^[2G(-G-9^[&H92^[&HD2IT4^[<H[-IL-GT4G(2^[4H8)H95HU
)@@G@@I-0I(4 0)^[BG(,G(2GD4G(3@B@@@@ 0)^@)^@)^@)^@)^[4I9\^[(H13I-2I(<I-(H9,IS,HV
)@@G@@@^@@@@ 0)^@)^@)C*=CTGD9NC*) *)@J@@@@ 0)^@)^@)^@)^@)^[$G(,G(2GD?H-9^[4H[>HW
)@@G@@^[3GD!G*)GD3^[ ^-[D-GDDBD0)G(8GT>I[4^[4H[>^[<I(2IL>H14@J@@@@ 0)^@)^@)^@)HX
)@@G@@^@)^[\I(4I[5I))I9\IL=^[(IS)H->G14^[%I(3I-(G1(G(= ))GL?GD,HS)G1(H-?G(=^[-HY
)@@G@@H1=^@)@I@@@@ 0)^@)^@)^@)^@)^[3I-\IL>G))HD,I-\^[4H[>^[\I(4I[5I))IT4IL(H1$HZ
)@@G@@ 0)^[BG(,G(2GD4G(3^[4I9\@A@@@@ 0)^@)^@)^@)^@)^[(H13I-2I(<I-(H9,IS,@F@@@@IA
)@@G@@ 0)^@)^@)C*=E9JEL^ES)CLT )/^S)H9&^[7H92G-3^[4H8)I-2GD,IT&G(2B0) *)@J@@@@IB
)@@G@@ 0)^@)^@)^@)^@)^[=H9>IS)GC)IT(H(0H->^[+H-\GT:^[4IL-H13G1>IK)G12H9!^[(H10IC
)@@G@@I(4^[?H9<^[4H8)^@)@J@@@@ 0)^@)^@)^@)^@)^[\I(4I[5I))H-\GS)GD3^[=G(&HD,G(=ID
)@@G@@^[+JC)CC0^[-H1=^[[AC)IL>IT0G(<I-(I1>H-9 0)@K@@@@ 0)^@)^@)^@)^@)^[OH[>^[<IE
)@@G@@H9,I->H14IS)H9&^[[A@)HD3^[(H1(I-(GD?H-9^[=G(<IL>H(>H14G(=^[3H8)I-*GD4^@)IF
)@@G@@@K@@@@ 0)^@)^@)^@)^@)^[4H[>^[<I(2IL>H14^[(H10I(4^[7H92G))HD3^[(H1<H-5G->IG
)@@G@@G))HD,^[4H[>^[4IL-H13G1>IK,^@)@E@@@@ 0)^@)^@)^@)^@)^[BG(,G(2GD4G(3^[4H[2IH
)@@G@@G(>^[(H13I-2I(<I-(H9,IS,@[@@@@ 0)^@)@^@@@@^@)^@)^@)^@)^@)C- C0)^@)@K@@@@II
)@@G@@C*=DDICLGDTREL^^[ EDPC0)^@)^@)C*=E[[EL[D(N^@)^@)^@)^@)^@) 0)HD,I[5I))GL?IJ
)@@G@@GD,HS)I9\IL=^[-IL>GC)^@)@K@@@@C*=DDICLGDS)^@)C(LE(A^@)^@)^@)C*=E[[EL[D(NIK
)@@G@@ S1 )?D@1^@)^@) 0)IT(H1$H->^[+H--H1:^[&H92^[(H10I(4^@)@K@@@@C*=DDICLDE-NIL
)@@G@@^@)C(LE(A^@)^@)^@)C*=E[[EL[D(N S1 )?ES4^@)^@) 0)^S)H9&^[+HD4IS)I[>IK)GT*IM
)@@G@@GD2^[\G0)DC)@L@@@@C*=DDICTIE))^@)C(LE(A^@)^@)^@)C*=E[[EL[D(N S1 )?ES5^@)IN
)@@G@@^@) 0)^S)H9&^[<H[-IL3^[0G(2^[(H10I(4^[7H92G))^@)@K@@@@C*=D9PE-]D-FE9MC))IO
)@@G@@C(LE(A^@)^@)C*=E[[EL[D(N S2^@)^@)^@)^@) 0)H95I-0I(4^[+H--H1:^[7H92G))GD2IP
)@@G@@G(-^@)@K@@@@C*=D9PE-]D-F^@)C(LE(A^@)^@)^@)C*=E[[EL[D(N S3 )?D@1^@)^@) 0)IQ
)@@G@@IT(H1$H->^[+H--H1:^[&H92^[\I(4I[5I))@K@@@@C*=D9PE-]DDOES)C(LE(A^@)^@)^@)IR
)@@G@@C*=E[[EL[D(N S3 )?ES4^@)^@) 0)^S)H9&^[+HD4IS)I[>IK)GT*GD2^[\G0)D8)@K@@@@IS
)@@G@@C*=D9PE-#D1O^@)C(LE(A^@)^@)^@)C*=E[[EL[D(N S3 )?ES5^@)^@) 0)^S)H9&^[<H[-IT
)@@G@@IL3^[0G(2^[\I(4I[5I))E8)@[@@@@ 0)^@)@G@@@@ 0)I(4HD?HD4JC)G15H1<I-(H9,^[4IU
)@@G@@H8)GT-H-<I(?GD4G*)GD+IT\H-5I->^[6GD?I(>^@,@[@@@@ 0)^@)@A@@@@C0)^@)^@)^@)IV
)@@G@@^@)C1PD1#^@)^@)^@) K1^@)@M@@@@CD]ES%^@)^@)^@)D1[D( ^@)^@)^@)^@)^@)^@)^@)IW
)@@G@@^@)^@)^@)^@)^@) 0)IT(H(0H->^[-GL3H9?I(4G*)I1-H-5G*)G15H1<I-(H9,^@)@F@@@@IX
)@@G@@^@)^@)^@)^@)^@)C-J^@)^@)^@)^@)C0*AC(B)0^@?C0*AC(^[ EDP^@!C0*AC(^@)@A@@@@IY
)@@G@@^@)^@)^@)^@)^@)C(IC))^@)^@)^@)C0*AC(@[@@@@ 0)^@)@A@@@@E@)^@)^@)^@)^@)E[MIZ
)@@G@@D9#^@)^@)^@) K1^@)@M@@@@C*=C9 E)%^@)^@)D1[D( ^@)^@)^@)F@9^@)^@)^@)^@)^@)JA
)@@G@@^@)^@)^@) 0)G1>I-<H@)GT*GD2GD<I->IK)G12H9!^[(H10I(4^[7H92G))@M@@@@C*=E[PJB
)@@G@@E)%^@)^@)D1[D( ^@)^@)^@)F@1A@)^@)^@)^@)^@)^@)^@)^@) 0)I[5I))GT*GD2GD<I->JC
)@@G@@IK)HD,I-\^[\I(4I[5I))I9\IL=^@)@M@@@@C*=D-JD9F K)^@)D1[D( ^@)^@)^@) (SBC)JD
)@@G@@^@)^@)^@)^@)^@)^@)^@) 0)D-JD9F^[-I))H1>J[4^[<H[-IL-GT4G(2^[(H0)HD,I[5I))JE
)@@G@@@K@@@@C*=ET[E1  K)^@)D1[D( ^@)^@)^@) (SAC0^@)^@)^@)^@)^@)^@)^@) 0)ET[E1 JF
)@@G@@^[<H[-IK)HD,^[\I(4I[5I))I9\IL=@M@@@@^@)^@)^@)^@)^@)C-J^@)^@)^@)^@)CD]ES*JG
)@@G@@E@*A@?A@( C.F@9^@?^[[D1^^[[AK?EK3^@) 0)G9>I))HD,I[5I))GT*GD2GD<I->IK)^@)JH
)@@G@@@M@@@@^@)^@)^@)^@)^@)C-J^@)^@)^@)^@)CD]ES*E@*A@?A@( C.F@1A@) ))D(GE*)CC3JI
)@@G@@ -[A))^@,^[3I-5G1&^[(H0)H95I-0I(4^[7H92G))@J@@@@^@)^@)^@)^@)^@)C-J^@)^@)JJ
)@@G@@^@)^@)E@*A@?A@(B)0^@?^[ D1^^@)^@) 0)G((I-*G(2^[GD9JDS)H92^[NCDQC*)@H@@@@JK
)@@G@@C*=CLGDS%^@)^@)D1[D( ^@)^@)^@)F@1A@)^@)^@)^@)^@)^@)^@)^@) 0)HD,IT>IL4^[+JL
)@@G@@H--H1:@K@@@@C*=D9PE)%^@)^@)D1[D( ^@)^@)^@)F@1A@)^@)^@)^@)^@)^@)^@)^@) 0)JM
)@@G@@H95I-0I(4^[NCDQC*$G))GT*GD2GD<I->IK)@L@@@@C*=D1 F[O K)^@)D1[D( ^@)^@)^@)JN
)@@G@@F@9^@)^@)^@)^@)^@)^@)^@)^@) 0)IT:HD0^[,G(8I))HD,I[5I))GT*GD2GD<I->IK)^@)JO
)@@G@@@J@@@@^@)^@)^@)^@)^@)C(S^@)^@)^@)^@)A@? LK @0 )0 C)^@)^@)^@)^@) 0)G(8G(<JP
)@@G@@I(4G*)IT*HD&I))I--GL?G(3@B@@@@^@)^@)^@)^@)^@)C-J^@)^@)^@)^@)AC) ))C(IC))JQ
)@@G@@@J@@@@C*=EL CT[D-G K)D1[D( ^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)G9>I))JR
)@@G@@H--IT4^[NCDQC*$G))GT*GD2@I@@@@^@)^@)^@)^@)^@)D))^@)^@)^@)^@)CC3 -[A))^@)JS
)@@G@@^@)^@)^@)^@)^@) 0)G9>I))H95I-0I(4^[7H92G))@J@@@@^@)^@)^@)^@)^@)D(GE*?E*)JT
)@@G@@^@)^@)CC3 )0^@)^@)^@)^@)^@)^@)^@) 0)IT4IL(I@)H95I))H--IT4^[<H[-IK)@J@@@@JU
)@@G@@^@)^@)^@)^@)^@)C-NCS)^@)^@)^@)CC3 )3A0)^@)^@)^@)^@)^@)^@) 0)IL>I1>IL3G*)JV
)@@G@@IL>G9(IT4G(2IS)^@)@B@@@@^@)^@)^@)^@)^@)C-J^@)^@)^@)^@)AC) ))C(IC))@L@@@@JW
)@@G@@C*=ETOD9MC*%^@)D1[D( ^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)G1\IL<G*)H95JX
)@@G@@I-0I(4^[\G0)H95I-0I(4^[7H92G))@O@@@@^@)^@)^@)^@)^@)ES)^@)^@)^@)^@)CC4 )0JY
)@@G@@ )%CC1^@)^@)^@)^@)^@) 0)I-*HD3^[(IS)I9*GD4^[4H[>^[3H[(G14^[2H95I-(H1>IS)JZ
)@@G@@I9\I(?G))G-\@B@@@@^@)^@)^@)^@)^@)C-J^@)^@)^@)^@)AC) ))C(IC))@J@@@@C*=EL KA
)@@G@@D9KC(I K)D1[D( ^@)^@)^@)F@9^@)^@)^@)^@)^@)^@)^@)^@) 0)G1\IL<G*)I-\^[,G(7KB
)@@G@@^[7H92G))^@)@M@@@@C*=CTGD9NC*%^@)D1[D( ^@)^@)^@)F@1A@)^@)^@)^@)^@)^@)^@)KC
)@@G@@^@) 0)GD?H-(G9,^[\I(4I[5I))I9\IL=^[-H1=^[\I(4I[5I))^@)@K@@@@C*=CDGD-DC9IKD
)@@G@@ K)D1[D( ^@)^@)^@) (SAC0^@)^@)^@)^@)^@)^@)^@) 0)IL>HD,HD4^[\I(4I[5I)) *)KE
)@@G@@H1\^[3I-\IL>@M@@@@^@)^@)^@)^@)^@)CT[D-G -[CLN [K @0 )0 C(^@)^@)^@)^@)^@)KF
)@@G@@^@)A@?CD]ES*E@*A@?A@( C) 0)G(8G(<I(4G*)IL>H*)IT*HD&I-3@J@@@@CC)^@)^@)^@)KG
)@@G@@^@)C(LE*)^@)^@)^@) S*E@*A@?AC(B00 C: S*E@*A@?A@(B)0 C) 0)IT>I))G1\IK)I->KH
)@@G@@IT4^@)@P@@@@^@)^@)^@)^@)^@)C-J^@)^@)^@)^@)CC) ))CT[D-G -[CLN [K @0 )0 C(KI
)@@G@@^@1 -[CLN [K @0 )0 C(^@,^[3HT(I@)IT4H92G*)H92^[(H1(I))IT7HD4GT*^@)@I@@@@KJ
)@@G@@^@)^@)^@)^@)^@)C-J^@)^@)^@)^@)CC.A@) ))CT[D-G -[CLN [K @0 )0 C(^@0 -[CLNKK
)@@G@@ [K @0 )0 C(@B@@@@^@)^@)^@)^@)^@)C-J^@)^@)^@)^@)AC) ))C(IC))@L@@@@C*=D9AKL
)@@G@@C1NC(O K)D1[D( ^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)GT2G(-I->^[\G1&IT>KM
)@@G@@I))HD,^[(H10I(4^[7H92G))@H@@@@^@=C-J^[K @1 )1 C.CLT^@?^[GD9[C))CC3 -K @1KN
)@@G@@ C?AK)^@)^@)^@) 0)G9>I))H9&G13G(4^@)@I@@@@^@)^@)^@)^@)^@)D9I^@)^@)^@)^@)KO
)@@G@@E@*A@?AC(^@)^@)^@)^@)^@)^@) 0)I-*HD3^[&H92^[AC-[ETBC(O@M@@@@^@)^@)^@)^@)KP
)@@G@@^@)CDI -P^@)^@)^@)CC3 )1^@)^@)^@)^@)^@)^@)^@) 0)H9,G*)H->IT3^[&H92^[+H94KQ
)@@G@@I-\H*)H9&^[?H9\I@)I->IT4@J@@@@^@)^@)^@)^@)^@)C*=D1 F[O^@)^@)^@)^@)^@)^@)KR
)@@G@@^@)^@)^@)^@)^@) 0)H9,G*)GT*GD2^[-I))GC)I-(H(>^@)@G@@@@C0)^@)^@)^@)^@)C1JKS
)@@G@@ELH^@)^@)^@)A0?B@?A)?AK?AC6^@)^@)^@)^@) 0)DLBC))G1\IL!@H@@@@^@)^@)^@)^@)KT
)@@G@@^@) S*C0)^@)^@)^@)A@7A@?A@1A8? )?^)!AC(^@)^@) 0)DLBC))I-\^@= *1^@)@^@@@@KU
)@@G@@^@)^@)^@)^@)^@)D9AC0)^@)@K@@@@^@)^@)^@)^@)^@)D9I^@)^@)^@)^@)E@*A@?AC(B*0KV
)@@G@@^@)^@)^@)^@)^@) 0)I-*HD3^[&H92^[,H92H(-H))H9&G13G(4^@)@J@@@@^@)^@)^@)^@)KW
)@@G@@^@)CC)^@)^@)^@)^@)F@9 -[AS)^@)^@)^@)^@)^@)^@) 0)GD=HL5IT4^[3H[(G14^[(H1=KX
)@@G@@G(8^@)@K@@@@^@)^@)^@)^@)^@)D(NDC)^@)^@)^@)CC3 - ^-DD1]DDOES)^@)^@)^@) 0)KY
)@@G@@GT-H-<^@<^[\G0)GL(I-3^[4H8)H9&G13G(4@J@@@@^@)^@)^@)^@)^@)D-NET#^@)^@)^@)KZ
)@@G@@CC2 )?CC3^@)^@)^@)^@)^@)^@) 0)GD=HL5IT4^[(H10I(4^[7H92G))^@)@^@@@@^@)^@)LA
)@@G@@^@)^@)^@)D9AC0)^@)@B@@@@^@)^@)^@)^@)^@)C-J^@)^@)^@)^@)AC) ))C(IC))@J@@@@LB
)@@G@@C*=E9JEL^ES%^@)D1[D( ^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)GL?H9<HS)I-2LC
)@@G@@GD,IT&G(2^[(H(-G9>@H@@@@^@=C-J^[K @1 )1 C.CLT^@?^[GD9[C))EK1 -K @1 C?AK)LD
)@@G@@^@)^@)^@) 0)I9\IL=^[<H95H14^@)@K@@@@^@)^@)^@)^@)^@)CDI -P^@)^@)^@)CC0 )1LE
)@@G@@^@)^@)^@)^@)^@)^@)^@) 0)GL-GT:^[5I@)G1\IK)HD,I[5I))I9\IL=^@)@B@@@@^@)^@)LF
)@@G@@^@)^@)^@)CLO^@)^@)^@)^@)CC1 )0 )%CC0@B@@@@^@)^@)^@)^@)^@)C-J^@)^@)^@)^@)LG
)@@G@@AC) ))C(IC))@M@@@@C*=C1^CDNE-MCDIES%^[ICDHC*)^@)D@2^@)^@)^@)^@)^@)^@)^@)LH
)@@G@@^@) 0)C1DC(GC-[E-[^[4H8)CDNCTDDC)I-2GD,IT?GD4HD\H0)^@)@M@@@@C*=CDNC1^E-MLI
)@@G@@CDIES%^[ICDHC*)^@)ES1^@)^@)^@)^@)^@)^@)^@)^@) 0)CDNCTDDC)I-\^[ADD D-^CDOLJ
)@@G@@CC)I-2GD,IT?GD4HD\H0)^@)@L@@@@^@)^@)^@)^@)^@)D)?E@*A@?A@(^@)CC3 - ^-OCD]LK
)@@G@@D-  -[AS)^@)^@) 0)HD,G->J@)HD,I-\^[4GD+H->^[-H1=^[&G(4GT*^@)@^@@@@^@)^@)LL
)@@G@@^@)^@)^@)C(IC))^@)@[@@@@ 0)^@)@]@@@@ 0)D-JCD^^@!@#@@@@ 0)ETOD9MC*) *)^@)LM
)@@G@@@L@@@@ 0)^@)^@)^@)^@)E[2H9<^[4H8)G9>H1>IL-I->^[-^[G [\GD= C)H92^[N [4H92LN
)@@G@@G*(^[(H13I-2I(<I-(H9,^[&IL\H*\I-\^[-@D@@@@ 0)^@)^@)^@)^@)G9(I1>H0)G1(G(?LO
)@@G@@G))GD,G))IT5GL&HD>H-= 0)@^@@@@ 0)^@)^@)^@)^@)E(3GD$G*'@[@@@@ 0)^@)@C@@@@LP
)@@G@@ 0)^@)^@)^@)^@)D-JCD^^@)^@)^@)CC0 -K [& C?IS)^@)@[@@@@ 0)^@)@N@@@@ 0)^@)LQ
)@@G@@^@)^@)^@)I9*G(2G*)E@)HD3^[4H[>^[<GD?H-(H1$^[0IL\GS$IS)^-KELJCS)H--GL>H)?LR
)@@G@@^[&^[(IS)I-*G*)G1(G(?G))H15H(+G(2^@)@L@@@@ 0)^@)^@)^@)^@)H9&^[4H[>^[-G-=LS
)@@G@@IL>IT3^[4H8)G1>I-<H@?^[-H1=^[3^[(IS)I-*G*)HD,HD4HD-H))IT5GL&HD>H-= 0)^@)LT
)@@G@@@[@@@@ 0)^@)@A@@@@E@)^@)^@)^@)^@)^-KELJCS)^@)^@) K1^@)@K@@@@D-JCD^ K)^@)LU
)@@G@@^@)D1[D( ^@)^@)^@) 9G^@)^@)^@)^@)^@)^@)^@)^@) 0)G9>H1>IL-I->^[G^[(H13I-2LV
)@@G@@I(<I-(H9,^@)@K@@@@ETOD9MC*%^@)^@)D1[D( ^@)^@)^@) 9N^@)^@)^@)^@)^@)^@)^@)LW
)@@G@@^@) 0)G9>H1>IL-I->^[N^[(H13I-2I(<I-(H9,^@)@J@@@@CC)^@)^@)^@)^@)^- EDP^@)LX
)@@G@@^@)^@)E@*AC?AC(^@)^@)^@)^@)^@)^@) 0)CC)G1(G(?G)) [2G($HD3I->IK(^@)@J@@@@LY
)@@G@@E*)^@)^@)^@)^@)^- EDP^@)^@)^@)E@*AC?AK(^@)^@)^@)^@)^@)^@) 0)E*)G1(G(?G))LZ
)@@G@@ [-G-=IL>IT3 C)^@)@L@@@@ES)^@)^@)^@)^@)^- EDP^@)^@)^@)E@*AC?AS(^@)^@)^@)MA
)@@G@@^@)^@)^@) 0)HD,HD4HD-H))IT5GL&HD>H-=^[\G0)E*)G1(G(?G))@J@@@@C1A K)^@)^@)MB
)@@G@@^@)^-AE(ICS)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)C1?GD$G9>G))G1(G(?G))G15MC
)@@G@@H1<^@)@J@@@@E))^@)^@)^@)^@)^- EDP^@)^@)^@)C1A @1 C)^@)^@)^@)^@)^@)^@) 0)MD
)@@G@@C9>I))H1>J[4^[3I(+G1(G(?G))^S)@J@@@@^@)^@)^@)^@)^@)^- D1^^@)^@)^@)E*/E)!ME
)@@G@@B0$^8-^8?^8' [P @%E)( *"^8%^8(BK$E**^8'^-#C)*E)(BK$ C$@[@@@@ 0)^@)@L@@@@MF
)@@G@@^@)^@)^@)^@)^@)E@*A@?A@(^@)^@)CDVC1A [N C'C1A [N S1 C'C1A [N S2 DX^@,^[BMG
)@@G@@G(,G(2GD4G*)HD,IT4IL5GT4HD\H0)@^@@@@^@)^@)^@)^@)^@)^- D1^^@)___H))H9&G13MH
)@@G@@G(4^@)@J@@@@^@)^@)^@)^@)^@)CC)^@)^@)^@)^@)F@9 -[AS)^@)^@)^@)^@)^@)^@) 0)MI
)@@G@@GD=HL5IT4^[3H[(G14^[(H1=*[S@@@*SDFF*@B@@@@        DEF                   MJ
)@@G@@        .   @[@@@@.     @E@@@@. DEFINE FIELDS AND BITS FOR FIASG$ FAMILYMK
)@@G@@ OF SUBROUTINES.  @[@@@@.     @A@@@@. FIELDS IN FITEM$ PACKET FIPKT$.   ML
)@@G@@@[@@@@.     @E@@@@FINAME  EQUF    FIPKT$+0              . INTERNAL FILE MM
)@@G@@NAME  @E@@@@FXFILE  EQUF    FIPKT$+2              . EXTERNAL FILE NAME  MN
)@@G@@@D@@@@FXQUAL  EQUF    FIPKT$+4              . QUALIFIER     @D@@@@FXEQUPMO
)@@G@@  EQUF    FIPKT$+6,,S1          . EQUIPMENT CODE@E@@@@FXFLAG  EQUF    FIMP
)@@G@@PKT$+6,,S2          . PERMISSIONS FLAGS   @E@@@@FXFRCY  EQUF    FIPKT$+6MQ
)@@G@@,,S4          . RELATIVE F CYCLE    @G@@@@FXFCYC  EQUF    FIPKT$+6      MR
)@@G@@        . ABSOLUTE FCYCLE (ACTUALLY T3)   @[@@@@.     @#@@@@. BITS FOR FMS
)@@G@@XFLAG @[@@@@.     @E@@@@FXBXCL  EQU     040                   . HAVE EXCMT
)@@G@@LUSIVE USE  @E@@@@FXBRKN  EQU     020                   . READ KEY NEEDEMU
)@@G@@D     @E@@@@FXBWKN  EQU     010                   . WRITE KEY NEEDED    MV
)@@G@@@D@@@@FXBWIN  EQU     004                   . WRITE INHIBIT @D@@@@FXBRINMW
)@@G@@  EQU     002                   . READ INHIBIT  @C@@@@FXBWAD  EQU     00MX
)@@G@@1                   . WAD FILE@[@@@@.     @B@@@@. DEFINE BITS PASSED BY MY
)@@G@@USER IN UPPER A0. @[@@@@.     @E@@@@FIUFOR  EQU     001                 MZ
)@@G@@  . USE NAME FORCED     @F@@@@FIUGIV  EQU     002                   . USNA
)@@G@@E NAME PASSED IN A1-A2  @G@@@@FIUXCL  EQU     004                   . USNB
)@@G@@ER REQUIRES EXCLUSIVE USE     @G@@@@FIUPRD  EQU     010                 NC
)@@G@@  . USER REQUIRES READ PERMISSION   @G@@@@FIUPWR  EQU     020           ND
)@@G@@        . USER REQUIRES WRITE PERMISSION  @F@@@@FIUOPT  EQU     040     NE
)@@G@@              . USER PASSES OPTIONS IN A3 @[@@@@.     @E@@@@. DEFINE FRENF
)@@G@@E BITS.  NOTE THAT THESE DETERMINE THE ORDER    @F@@@@. OF THE FREE OPTING
)@@G@@ONS VECTOR, AND THAT SOME PEOPLE DO ODD/EVEN    @ @@@@. TESTS TO TEST FONH
)@@G@@R FIFUSE.   @[@@@@.     @D@@@@FIFUSE  EQU     001                   . FRNI
)@@G@@EE USE NAME @D@@@@FIFASG  EQU     002                   . FREE FILE     NJ
)@@G@@@E@@@@FIFXCL  EQU     004                   . FREE EXCLUSIVE USE  @F@@@@NK
)@@G@@FIFUIF  EQU     010                   . FREE FILE THRU USENAME    @[@@@@NL
)@@G@@.     @B@@@@. THE ABOVE ARE CALLED IN BY: FIDEF$.     @D@@@@. IF ARGUMENNM
)@@G@@T IS GIVEN PRODUCE ELT$ PACKET EQUFS.     @[@@@@.     @B@@@@P         PRNN
)@@G@@OC      *1                .   @B@@@@FIDEF$*   NAME      0               NO
)@@G@@  .   @D@@@@          ON        P(1)>0            . IF ARG GIVEN  @[@@@@NP
)@@G@@.     @D@@@@ELT$*     EQUF      P(1,1),P(1,2)     . OFFSET,INDEX  @[@@@@NQ
)@@G@@.     @F@@@@FQL*      EQUF      ELT$,,S1          . FILE QUALIFIER LENGTNR
)@@G@@H     @E@@@@FNL*      EQUF      ELT$,,S2          . FILE NAME LENGTH    NS
)@@G@@@D@@@@FCL*      EQUF      ELT$,,S3          . F-CYCLE LENGTH@E@@@@RKL*  NT
)@@G@@    EQUF      ELT$,,S4          . READ KEY LENGTH     @E@@@@WKL*      EQNU
)@@G@@UF      ELT$,,S5          . WRITE KEY LENGTH    @F@@@@IQF*      EQUF    NV
)@@G@@  ELT$,,S6          . IMPLIED QUALIFIER FLAG    @E@@@@ENL*      EQUF    NW
)@@G@@  ELT$+1,,S1        . ELEMENT NAME LENGTH @F@@@@EVL*      EQUF      ELT$NX
)@@G@@+1,,S2        . ELEMENT VERSION LENGTH    @E@@@@ECL*      EQUF      ELT$NY
)@@G@@+1,,S3        . ELEMENT CYCLE LENGTH@G@@@@CFN*      EQUF      ELT$+1,,S4NZ
)@@G@@        . CONTINUATION FILE FIELD NUMBER  @G@@@@ECC*      EQUF      ELT$OA
)@@G@@+1,,S5        . ELEMENT CYCLE SIGNAL CHARACTER  @E@@@@BEC*      EQUF    OB
)@@G@@  ELT$+1,,S6        . BINARY ELEMENT CYCLE@[@@@@.     @D@@@@FQUAL*    EQOC
)@@G@@UF      ELT$+2            . FILE QUALIFIER@D@@@@FNAME*    EQUF      ELT$OD
)@@G@@+4            . FILE NAME     @C@@@@FCYC*     EQUF      ELT$+6          OE
)@@G@@  . F-CYCLE @C@@@@RKEY*     EQUF      ELT$+7            . READ KEY@D@@@@OF
)@@G@@WKEY*     EQUF      ELT$+8            . WRITE KEY     @D@@@@ENAME*    EQOG
)@@G@@UF      ELT$+9            . ELEMENT NAME  @E@@@@EVER*     EQUF      ELT$OH
)@@G@@+11           . ELEMENT VERSION     @D@@@@ECYC*     EQUF      ELT$+13   OI
)@@G@@        . ELEMENT CYCLE @[@@@@.     @B@@@@          OFF       P(1)>0    OJ
)@@G@@        .   @B@@@@          END                         .   @[@@@@/.    OK
)@@G@@@[@@@@.     @#@@@@. TO ASSIGN A FILE@[@@@@.     @B@@@@.         FIASG,'OOL
)@@G@@PTS' PACKET,BITS NAME   @[@@@@.     @B@@@@P         PROC      *2        OM
)@@G@@        .   @B@@@@FIASG*    NAME                        .   @D@@@@FB('F'ON
)@@G@@)   $EQU      1                 . USENAME FORCED@F@@@@FB('U')   $EQU    OO
)@@G@@  2                 . USENAME GIVEN IN A1,A2    @G@@@@FB('X')   $EQU    OP
)@@G@@  4                 . EXCLUSIVE ASSIGNMENT REQUIRED   @F@@@@FB('R')   $EOQ
)@@G@@QU      8                 . READ PERMISSION REQUIRED  @F@@@@FB('W')   $EOR
)@@G@@QU      16                . WRITE PERMISSION REQUIRED @E@@@@FB('O')   $EOS
)@@G@@QU      32                . OPTIONS PASSED IN A3@F@@@@ML        $EQU    OT
)@@G@@  P(1,2)            . MODE LETTERS 'FXR' ETC.   @D@@@@BITS      $EQU    OU
)@@G@@  0                 . INITIAL VALUE @F@@@@I         $DO       $SL(ML) ,;OV
)@@G@@        . FOR EACH LETTER GIVEN...  @F@@@@BITS      $EQU      BITS++FB($OW
)@@G@@SS(ML,I)) . ACCUMULATE MODE BITS    @E@@@@BITS      $EQU      BITS++(P(2OX
)@@G@@)>0->2!0)++(P(0)>1->32!0)     @D@@@@          $IF       P(1)>0          OY
)@@G@@  . ANY SPEC 1?   @G@@@@ $DO \BITS , LA,U   A0,P(1,1)         . NO BITS,OZ
)@@G@@ GET PACKET ADDR ONLY   @G@@@@ $DO \\BITS , LA    A0,(BITS,P(1,1))  . GEPA
)@@G@@T BOTH BITS AND PACKET ADDR   @#@@@@          $ENDF   @D@@@@ $DO P(2)>0 PB
)@@G@@, DL    A1,[P(2,*1)->'*']P(2,1),P(2,2)    @D@@@@ $DO P(0)>1 , LA    A3,(PC
)@@G@@$CFS(P(0,1))LS) . GET OPTIONS @D@@@@          LMJ       X11,FIASG$      PD
)@@G@@  . ASSIGN FILE   @#@@@@          $END    @[@@@@.     @F@@@@. THIS PROCEPE
)@@G@@DURE IS USED TO CALL THE DIAGNOSTIC ROUTINE FIDIAG$   @F@@@@. IF A CSF$ PF
)@@G@@ERROR IS DETECTED THE ERROR$ REP IS CALLED.  IF THE   @D@@@@. ERROR IS PPG
)@@G@@ERMISSIONS FIDIAG PRINTS THE MESSAGE.     @[@@@@.     @B@@@@P         PRPH
)@@G@@OC      *0,1              .   @B@@@@FIDIAG*   NAME      FIDIAG$         PI
)@@G@@  .   @D@@@@          LMJ       X11,P(0,0)        . CALL ROUTINE  @B@@@@PJ
)@@G@@          END                         .   @[@@@@.     @F@@@@. THIS PROCEPK
)@@G@@DURE IS CALLED TO FREE A FILE WHICH HAS BEEN ASSIGNED @ @@@@. VIA FIASG$PL
)@@G@@. THE CALL IS:    @[@@@@.     @A@@@@.         FIFREE    NAME FREECODE   PM
)@@G@@@[@@@@.     @B@@@@P         PROC                        .   @D@@@@FIFREEPN
)@@G@@*   NAME      FIFREE$           . NORMAL FREE   @E@@@@FIFRIM*   NAME    PO
)@@G@@  FIFRIM$           . RETURN FREE IMAGE   @[@@@@.     @D@@@@ DO P(1)>0 ,PP
)@@G@@ DL A1,P(1,1),P(1,2)      . GET FILE NAME @E@@@@ DO P(2)>0 , L  A0,P(2,1PQ
)@@G@@),P(2,2),P(2,3) . GET FREE CODE     @F@@@@          LMJ       X11,P(0,0)PR
)@@G@@        . CALL SELECTED ROUTINE     @[@@@@.     @B@@@@          END     PS
)@@G@@                    .   @[@@@@/.    @[@@@@.     @B@@@@. GENERATE FIASG$ PT
)@@G@@PACKET.  THE CALLS ARE: @[@@@@.     @C@@@@.         FIPFIL    'Q','QUAL'PU
)@@G@@ 'F','FILE' ....  @[@@@@.     @F@@@@. THE FIRST SUBFIELD OF EACH FIELD IPV
)@@G@@S A CODE LETTER, IN QUOTES :  @[@@@@.     @ @@@@.         'Q' - QUALIFIEPW
)@@G@@R     @^@@@@.         'F' - FILENAME@^@@@@.         'R' - READKEY @^@@@@PX
)@@G@@.         'W' - WRITEKEY@ @@@@.         'C' - FILECYCLE     @[@@@@.     PY
)@@G@@@F@@@@. IF THE PROCEDURE FIPELT IS CALLED THE FULL 14 WORD ELT$ PACKET  PZ
)@@G@@@F@@@@. IS GENERATED AND THE FOLLOWING ADDITION FIELDS ARE ALLOWED.     QA
)@@G@@@[@@@@.     @ @@@@.         'E' - ELEMENT NAME  @ @@@@.         'V' - VEQB
)@@G@@RSION NAME  @[@@@@.     @F@@@@. THE SECOND SUBFIELD OF EACH FIELD IS A SQC
)@@G@@TRING OF NOT MORE THAN  @F@@@@. 6 OR 12 LETTERS (DEPENDING ON THE NORMALQD
)@@G@@ LENGTH OF THAT FIELD)  @ @@@@. ENCLOSED IN QUOTATION MARKS.@[@@@@.     QE
)@@G@@@B@@@@P         PROC      *8                .   @E@@@@FIPFIL*   NAME    QF
)@@G@@  0                 . ONLY FILE PORTION   @G@@@@FIPELT*   NAME      1   QG
)@@G@@              . BOTH FILE AND ELEMENT PORTIONS  @[@@@@.     @F@@@@B(1)  QH
)@@G@@    EQU       0D                . PRESENCE BITS (2 WORDS)   @D@@@@Q(1)  QI
)@@G@@    EQU       0D                . QUALIFIER (2) @D@@@@F(1)      EQU     QJ
)@@G@@  0D                . FILENAME (2)  @D@@@@R(1)      EQU       0         QK
)@@G@@        . READKEY (1)   @D@@@@W(1)      EQU       0                 . WRQL
)@@G@@ITEKEY (1)  @D@@@@C(1)      EQU       0                 . CYCLE (1)     QM
)@@G@@@E@@@@E(1)      EQU       0D                . ELEMENT NAME (2)    @E@@@@QN
)@@G@@V(1)      EQU       0D                . VERSION NAME(2)     @[@@@@.     QO
)@@G@@@^@@@@I DO P-1 , FISCAN   .   @[@@@@.     @B@@@@          +         B(1)QP
)@@G@@              .   @B@@@@          +         Q(1)              .   @B@@@@QQ
)@@G@@          +         F(1)              .   @B@@@@          +         C(1)QR
)@@G@@              .   @B@@@@          +         R(1)              .   @B@@@@QS
)@@G@@          +         W(1)              .   @B@@@@          ON        P(0,QT
)@@G@@0)            .   @B@@@@          +         E(1)              .   @B@@@@QU
)@@G@@          +         V(1)              .   @B@@@@          +         0   QV
)@@G@@              .   @B@@@@          OFF       P(0,0)            .   @[@@@@QW
)@@G@@.     @^@@@@          END       .   @[@@@@.     @A@@@@. PROCEDURE TO PROQX
)@@G@@CESS EACH FIELD.  @[@@@@.     @F@@@@FISCAN*   PROC      *0,0            QY
)@@G@@  . SECOND GLOBAL PASS ONLY   @[@@@@.     @A@@@@ DO P(I,1)='Q' ,Q*(1) FIQZ
)@@G@@W2 66 .     @A@@@@ DO P(I,1)='F' ,F*(1) FIW2 60 .     @A@@@@ DO P(I,1)='RA
)@@G@@C' ,C*(1) FIW1 54 .     @A@@@@ DO P(I,1)='R' ,R*(1) FIW1 48 .     @A@@@@RB
)@@G@@ DO P(I,1)='W' ,W*(1) FIW1 42 .     @B@@@@          ON        P(0,0)    RC
)@@G@@        .   @A@@@@ DO P(I,1)='E' ,E*(1) FIW2 30 .     @A@@@@ DO P(I,1)='RD
)@@G@@V' ,V*(1) FIW2 24 .     @B@@@@          OFF       P(0,0)            .   RE
)@@G@@@B@@@@ DO FOUND(1)=0 , +09                  .   @B@@@@          END     RF
)@@G@@                    .   @[@@@@.     @D@@@@. PROCEDURE TO LEFT JUSTIFY ANRG
)@@G@@D STORE THE COMPONENT.  @[@@@@.     @B@@@@Z         PROC      *1,0      RH
)@@G@@        .   @B@@@@FIW2*     NAME                        .   @B@@@@P**(I,RI
)@@G@@2)  EQU       P(I,2)++0D        .   @F@@@@ DO 12 , DO (P(I,2)*/-66)**077RJ
)@@G@@=0 ,P**(I,2) EQU P(I,2)*/6+05 .     @B@@@@FIW1*     NAME                RK
)@@G@@        .   @F@@@@ DO 06 , DO (P(I,2)*/-30)**077=0 ,P**(I,2) EQU P(I,2)*RL
)@@G@@/6+05 .     @B@@@@*         EQU       P(I,2)            .   @B@@@@B**(1)RM
)@@G@@    EQU       B(1)++1D*/Z(1,1)   .  @B@@@@FOUND*(1) EQU       1         RN
)@@G@@        .   @B@@@@          END                         .   ___ LETTERS RO
)@@G@@(DEPENDING ON THE NORMAL LENGTH OF THAT FIELD)  @ @@@@. ENCLOSED IN QUOTRP
)@@G@@ATION MARKS.@[@@@@.     @B@@@@P         PROC      *8                .   RQ
)@@G@@*[S@@@*SDFF*@[@@@@.     @F@@@@. THIS PROC DOES A PCT$, AND RETURNS A0=CPRR
)@@G@@U TIME, A1=MEM TIME.    @F@@@@. PLACE ACCESS WORD FOR PCT$ IN A0, WHICH RS
)@@G@@MUST BE AT LEAST THE    @D@@@@. SIZE DESCRIBED BELOW.  TRASHES A0,A1,A3,RT
)@@G@@ AND A4 .   @F@@@@. NOTE- CALLING ROUTINES RELY ON THE FACT THAT A2 IS PRU
)@@G@@RESERVED    @[@@@@.     @F@@@@. THE FIRST PARAMETER FIELD INDICATES UNDERV
)@@G@@R WHICH LEVEL OF EXEC 8 @F@@@@. THIS PROC SHOULD WORK.  MORE THAN ONE LERW
)@@G@@VEL MAY BE SPECIFIED    @E@@@@. (I.E. M$TIME 27,31), IN WHICH CASE THE GRX
)@@G@@ENERATED CODE WILL@E@@@@. DETERMINE AT EXECUTION TIME WHICH LEVEL OF THERY
)@@G@@ EXEC IT IS @F@@@@. ACTUALLY RUNNING UNDER.  IF NO LEVEL IS SPECIFIED, TRZ
)@@G@@HE CURRENT  @F@@@@. EXEC LEVEL IS ASSUMED. (31 AT THE TIME, BUT THAT MAYSA
)@@G@@ CHANGE).   @[@@@@.     @F@@@@. THE ENTRY 'M$TIMX' GENERATES ABBREVIATEDSB
)@@G@@ CODE FOR PEOPLE WHO    @F@@@@. HAVE ALREADY GOTTEN THE PCT.  REGISTER CSC
)@@G@@ONTENTS MUST BE: A0=PCT @F@@@@. ADDR, A1=RESULT OF TIME$ DONE JUST BEFORSD
)@@G@@E ER PCT$ (27 AND 27/31 @F@@@@. ONLY), A4=POSITIVE FOR LEVEL 27, NEGATIVSE
)@@G@@E FOR LEVEL 31 (27/31   @#@@@@. VERSION ONLY).  @[@@@@.     @F@@@@. THE SF
)@@G@@ARRAY MTIMESIZE STATES HOW LARGE THE PCT BUFFER HAS TO BE   @E@@@@. FOR SG
)@@G@@THE VARIOUS LEVELS, MTIMESIZE(0) CONTAINS THE PCT SIZE@B@@@@. NECESSARY SH
)@@G@@FOR THE CURRENT EXEC LEVEL.   @[@@@@.     @F@@@@. THE FOLLOWING LEVELS ASI
)@@G@@ND COMBINATIONS ARE CURRENTLY IMPLEMENTED:@^@@@@. 27, 31, 27/31, 32, 33 SJ
)@@G@@@A@@@@. LEVEL 32 IS SUPPORTED AS LEVEL31  @[@@@@.     @#@@@@          DESK
)@@G@@F     @^@@@@MTIMESIZE(0)  EQU   027 @^@@@@MTIMESIZE(27) EQU   0110@^@@@@SL
)@@G@@MTIMESIZE(31) EQU   027 @B@@@@MTIMESIZE(32) EQU   MTIMESIZE(31)     .   SM
)@@G@@@B@@@@MTIMESIZE(33) EQU   MTIMESIZE(31)     .   @^@@@@P         PROC    SN
)@@G@@  1   @^@@@@M$TIME*   NAME      1   @D@@@@M$TIMX*   NAME      0         SO
)@@G@@ . ABBREVIATED ENTRY    @F@@@@PCT       EQUF      0,A0       . PCT ACCESSP
)@@G@@S WD IS USED AS INDEX   @D@@@@  DO  P(1)=0  ,P(1,1)  EQU  33  . ASSUMED SQ
)@@G@@EXEC LEVEL  @A@@@@I DO P(1) ,GENFLG(P(1,I)) EQU 1     @ @@@@   DO  P(0,0SR
)@@G@@)=0  ,  GO M$TIMY @D@@@@      ON        GENFLG(27)        . LEVEL 27 CODSS
)@@G@@E     @E@@@@      LA        A1,A0             . PRESERVE PCT ACCESS WORDST
)@@G@@@E@@@@         ON        GENFLG(31)        . LEVEL 27/31 ONLY     @G@@@@SU
)@@G@@         SZ        0,A0              . CLEAR 1ST WORD OF PCT BUFFER     SV
)@@G@@@G@@@@         ER        MSCON$            . DO MSCON$ WITH INVALID FUNCSW
)@@G@@T (0) @G@@@@         LSSL      A0,1              . ALIGN STATUS TO SEE ISX
)@@G@@F S1=020    @E@@@@         SA        A0,A4             . AND STASH THE PSY
)@@G@@1 BIT @ @@@@         OFF       GENFLG(31) @F@@@@      ER        TIME$   SZ
)@@G@@          . FIND OUT WHAT TIME IT IS NOW  @F@@@@      LDSC      A0,36   TA
)@@G@@          . RECOVER PCT ACW, HIDE TIME$   @ @@@@      OFF       GENFLG(2TB
)@@G@@7)    @E@@@@          ON        1-GENFLG(33)      . IF NOT LEVEL 33     TC
)@@G@@@D@@@@   ER        PCT$              . THEN GLOMB UP THE PCT@E@@@@      TD
)@@G@@    OFF       1-GENFLG(33)      . END OF NON-33 CODE  @^@@@@M$TIMY    NATE
)@@G@@ME      .   @D@@@@      ON        GENFLG(27)        . LEVEL 27 CODE     TF
)@@G@@@D@@@@      .         COMPUTE ACCURATE LEVEL 27 MEMORY TIME @E@@@@      TG
)@@G@@LA        A3,PCT+030        . GET CURRENT CORE SIZE   @E@@@@         ON TH
)@@G@@       GENFLG(31)        . LEVEL 27/31 ONLY     @F@@@@         TP       TI
)@@G@@ A4                . IS THIS REALLY LEVEL 27    @G@@@@         LA,U     TJ
)@@G@@ A3,0              . NO, 31. MAKE CALCULATION VACUOUS @ @@@@         OFFTK
)@@G@@       GENFLG(31) @E@@@@      AND,U     A3,07777          . ACTUAL SIZE TL
)@@G@@IS IN T3    @G@@@@      MSI,U     A1,5              . CONVERT TIME (MSECTM
)@@G@@) TO CLOCK TICKS  @F@@@@      ANA       A1,PCT+0107       . LESS TIME OFTN
)@@G@@ LAST PCT UPDATE  @D@@@@      LA,H1     A3,PCT+025        . GET QUANTUM TO
)@@G@@USED  @E@@@@      TN        A1                . WAS PCT UP-TO-DATE?     TP
)@@G@@@F@@@@      AA        A3,A1             . NO, BUMP BY TIME SINCE UPDATE TQ
)@@G@@@F@@@@      MSI       A3,A4             . QUANTUM (A3) BY CORE SIZE (A4)TR
)@@G@@@ @@@@      OFF       GENFLG(27)    @E@@@@          ON        1-GENFLG(3TS
)@@G@@3)      . IF NOT LEVEL 33     @F@@@@   LA        A1,PCT+014        . PLUTT
)@@G@@S RUN ACCUMULATION SO FAR     @D@@@@      ON        GENFLG(27)        . TU
)@@G@@LEVEL 27 CODE     @D@@@@      AA        A1,A3             . PUT IN EXIT TV
)@@G@@REG   @ @@@@      OFF       GENFLG(27)    @G@@@@. NOTE: EXEC8 KEEPS TIMETW
)@@G@@ NORMALIZED TO CORE BLOCKS. TO GET IN UNITS     @G@@@@. USED FOR UOM ACCTX
)@@G@@OUNTING (32K) SHIFT RESULT RIGHT 6 BITS (DIV BY 64)   @E@@@@   LA       TY
)@@G@@ A0,PCT+026        . FOR GOOD LUCK, GET CPU TIME@E@@@@          OFF     TZ
)@@G@@  1-GENFLG(33)      . END OF NON-33 CODE  @[@@@@.     @E@@@@. FOR LEVEL UA
)@@G@@33, WE TEST FOR OPERATION ON 1110-TYPE MACHINE  @E@@@@. VIA THE HIGHLY UUB
)@@G@@SEFUL TSS INSTRUCTION AND COMPUTE THE CPU @E@@@@. TIME FROM THE SRC'S. EUC
)@@G@@LSE WE FETCH CPU TIME FROM PCT+026. @[@@@@.     @E@@@@          ON      UD
)@@G@@  GENFLG(33)        . BEGIN LEVEL 33 CODE @F@@@@          SZ        A3  UE
)@@G@@              . SET MACHINE FLAG (1=>1108)@H@@@@          SZ        PCT UF
)@@G@@              . CLEAR TEST-SET CELL IN PCT BUFFER     @G@@@@          TSUG
)@@G@@S       PCT               . IF 1110, SKIP NEXT INSTRUCTION  @F@@@@      UH
)@@G@@    J         A(1108)           . IF HERE, WE ARE ON 1108   @[@@@@.     UI
)@@G@@@^@@@@. BEGIN 1140/1110 CODE. @G@@@@. CPU TIME IS COMPUTED DIRECTLY FROMUJ
)@@G@@ THE SRC'S BY THE FOLLOWING FORMULA:@[@@@@.     @G@@@@.         CPU (200UK
)@@G@@ USECS) = (TOTAL SRC'S)*(AVE. INSTRUCTION/1.6 SRC)    @G@@@@.           UL
)@@G@@                 *(700NS/AVE.INSTRUCTION)*(SUP/200USECS)    @[@@@@.     UM
)@@G@@@D@@@@.                         = (TOTAL SRC'S)*(7/3200)    @[@@@@.     UN
)@@G@@@G@@@@. UOM MOD EFFECTIVE 7/1/78. TO EQUALIZE CPU TIME (AND HENCE CB-SUBUO
)@@G@@S)    @E@@@@. ON OUR 1108 AND 1140 (WELL, AS MUCH AS POSSIBLE), WE HAVE UP
)@@G@@@D@@@@. DOUBLED THE CPU CALCULATION. E.G. CPU=SRC(14/3200)  @[@@@@.     UQ
)@@G@@@G@@@@          LA        A3,A0             . WE ARE 1110. SAVE USERS PCUR
)@@G@@T ACW @F@@@@          LA,U      A0,PCT            . CLEAR INCREMENT OF AUS
)@@G@@0     @G@@@@          LA        A1,(4,0223)       . GET SRC'S (***NOTE: UT
)@@G@@A LITERAL**)@H@@@@          ER        PCT$              . SRC'S INTO PCTUU
)@@G@@ BUFFER (2 DBLWORDS)    @F@@@@          LA        A0,A3             . REUV
)@@G@@LOAD USER'S PCT ACW     @E@@@@          DL        A3,PCT            . LOUW
)@@G@@AD SRC/PRIMARY    @G@@@@          DA        A3,PCT+2          . ADD SRC/UX
)@@G@@EXTENDED. SUM IN A3     @E@@@@          DS        A3,PCT+0          . SAUY
)@@G@@VE SUM IN PCT     @E@@@@          LDSL      A3,3              . MULTIPLYUZ
)@@G@@ SUM BY 8   @H@@@@          DAN       A3,PCT+0          . MINUS 1*SUM = VA
)@@G@@7*SUM (DBLWORD MULTIPLY)@F@@@@          LDSL      A3,1              . UOVB
)@@G@@MMOD. TIMES TWO = 14*SUM@E@@@@          DI,U      A3,3200           . DIVC
)@@G@@VIDE MEMTIME BY 64@A@@@@A(1108) . COME HERE FOR 1108 CODE   @E@@@@      VD
)@@G@@    ER        PCT$              . LOAD 027 WORD BUFFER@E@@@@          LAVE
)@@G@@        A1,PCT+014        . LOAD MEMTIME INTO A1@F@@@@          LA      VF
)@@G@@  A0,PCT+026        . LOAD A0 WITH 1108 CPU TIME@F@@@@          JZ      VG
)@@G@@  A3,$+2            . BUT IF A3 IS NONZ, THEN   @F@@@@          LA      VH
)@@G@@  A0,A3             . IT CONTAINS 1140 CPU TIME @E@@@@          OFF     VI
)@@G@@  GENFLG(33)        . END OF LEVEL 33 CODE@#@@@@   END       .    ___BY VJ
)@@G@@64)   @E@@@@   LA        A0,PCT+026        . FOR GOOD LUCK, GET CPU TIMEVK
)@@G@@*[S@@@*SDFF*@[@@@@.     @D@@@@. PROCEDURES TO CALL FIASG$ AND FIFREE$ ROVL
)@@G@@UTINES.     @A@@@@. FIBITS WRITTEN BY MIKE MCAMIS     @A@@@@. FIASG  WRIVM
)@@G@@TTEN BY ALAN STEBBENS   @A@@@@. FIFREE WRITTEN BY BEN CRANSTON    @A@@@@VN
)@@G@@. FIPFIL WRITTEN BY BEN CRANSTON    @A@@@@. FIPELT WRITTEN BY BEN CRANSTVO
)@@G@@ON    @[@@@@.     @E@@@@. FIASG UPDATED TO WORK IN ASCII OR FIELDATA - 2VP
)@@G@@/11/76, AKS.@[@@@@.     @A@@@@.         DEFINE BITS FOR FIASG$    @[@@@@VQ
)@@G@@.     @B@@@@          DEF                         .   @D@@@@FBIT      EQVR
)@@G@@U       001               . FORCE USE NAME@D@@@@UBIT      EQU       002 VS
)@@G@@              . USE NAME GIVEN@D@@@@XBIT      EQU       004             VT
)@@G@@  . GET ASG,AX    @E@@@@RBIT      EQU       010               . GET READVU
)@@G@@ PERMISSION @E@@@@WBIT      EQU       020               . GET WRITE PERMVV
)@@G@@ISSION@D@@@@OBIT      EQU       040               . OPTIONS IN A3 @B@@@@VW
)@@G@@FIBITS*   PROC      0,0               .   @B@@@@          END           VX
)@@G@@              .   @[@@@@.     @#@@@@. TO ASSIGN A FILE@[@@@@.     @B@@@@VY
)@@G@@.         FIASG,'OPTS' PACKET,BITS NAME   @[@@@@.     @B@@@@P         PRVZ
)@@G@@OC      *2                .   @B@@@@FIASG*    NAME                      WA
)@@G@@  .   @E@@@@N         EQU       6+3*(' '=040)     . # OF BITS PER CHAR  WB
)@@G@@@E@@@@C         EQU       077+0700*(N=9)    . SET PROPER MASK     @D@@@@WC
)@@G@@          ON        P(1)>0            . ANY SPEC1 ?   @[@@@@.     @B@@@@WD
)@@G@@. FUNCTION TO GET BIT FOR 'BITS' LETTER.  @[@@@@.     @B@@@@F         FUWE
)@@G@@NC      *                 .   @B@@@@PBIT*     NAME                      WF
)@@G@@  .   @E@@@@I         DO      6 , DO M(0)*/(N-N*I)**C=F(1) , END F(2)   WG
)@@G@@@D@@@@          END       +0                . STRANGE BITS  @[@@@@.     WH
)@@G@@@E@@@@M(0)      EQU       P(1,2)+0D         . PICK UP MODE LETTERS@F@@@@WI
)@@G@@B(0)      EQU       PBIT('F',1)+PBIT('U',2)+PBIT('X',4)+; F,U,X   @F@@@@WJ
)@@G@@                    PBIT('R',8)+PBIT('W',16)+PBIT('O',32)++; R,W,O@G@@@@WK
)@@G@@                    2*(P(2)>0)+32*(P(0)>1) . FORCE BITS IF NECESSARY    WL
)@@G@@@[@@@@.     @^@@@@. NOW GENERATE CODE     @[@@@@.     @B@@@@          LAWM
)@@G@@,U      A0,P(1,1)         .   @B@@@@          DO (B(0)=0)=0 , LXI,U A0,BWN
)@@G@@(0) . @D@@@@          OFF       P(1)>0            . ANY SPEC1 ?   @[@@@@WO
)@@G@@.     @D@@@@ DO P(2)>0 , DL A1,P(2,1),P(2,2)      . GET FILENAME  @[@@@@WP
)@@G@@.     @D@@@@          ON        P(0)>1            . ANY OPTIONS ? @E@@@@WQ
)@@G@@          ON        P(0,1)=0=0        . SOMETHING THERE?    @E@@@@      WR
)@@G@@    ON        N=9               . ASCII CHARACTERSET? @G@@@@F         FUWS
)@@G@@NC      *                 . ASCII TO FIELDATA MAPPING FUNC  @B@@@@ATOF* WT
)@@G@@    NAME                        .   @D@@@@        DO (F(1)=' ')++(F(1)=0WU
)@@G@@) , END +0 . ABLANK     @F@@@@          DO        (F(1)<'A')++(F(1)>'Z')WV
)@@G@@ , END +09) . BAD NEWS  @F@@@@          END       F(1)-'A'+6        . CHWW
)@@G@@ANGE TO FIELDATA   A    @E@@@@I         DO        6 ,;                MAWX
)@@G@@XIMUM OF 6 CHARS  @I@@@@P(0,1)    EQU       (P(0,1)**-(C*/(I*9-9)))+ATOFWY
)@@G@@(P(0,1)*/(9-9*I)**C)*/(I*6-6) .     @E@@@@          OFF       N=9       WZ
)@@G@@        . ASCII CHARACTERSET? @G@@@@I DO 6 , DO P(0,1)**C*/30=0 ,P(0,1) XA
)@@G@@EQU P(0,1)*/6+5 . FILL THE FIELDATA @F@@@@G         FORM      36        XB
)@@G@@        . WE WANT ONLY ONE WORD     @D@@@@          L         A3,(G P(0,XC
)@@G@@1))       . LOAD LITERAL@B@@@@          OFF       P(0,1)=0=0        .   XD
)@@G@@@F@@@@          DO        P(0,1)=0 , LA,U   A3,0 . CLEAR OPTIONS REG    XE
)@@G@@@D@@@@          OFF       P(0)>1            . ANY OPTIONS ? @[@@@@.     XF
)@@G@@@ @@@@. FINALLY, CALL SUBROUTINE    @[@@@@.     @D@@@@          LMJ     XG
)@@G@@  X11,FIASG$        . ASSIGN FILE   @[@@@@.     @B@@@@          END     XH
)@@G@@                    .   @[@@@@.     @F@@@@. THIS PROCEDURE IS USED TO CAXI
)@@G@@LL THE DIAGNOSTIC ROUTINE FIDIAG$   @F@@@@. IF A CSF$ ERROR IS DETECTED XJ
)@@G@@THE ERROR$ REP IS CALLED.  IF THE   @D@@@@. ERROR IS PERMISSIONS FIDIAG XK
)@@G@@PRINTS THE MESSAGE.     @[@@@@.     @B@@@@P         PROC      *0,1      XL
)@@G@@        .   @B@@@@FIDIAG*   NAME      FIDIAG$           .   @D@@@@      XM
)@@G@@    LMJ       X11,P(0,0)        . CALL ROUTINE  @B@@@@          END     XN
)@@G@@                    .   @[@@@@.     @F@@@@. THIS PROCEDURE IS CALLED TO XO
)@@G@@FREE A FILE WHICH HAS BEEN ASSIGNED @ @@@@. VIA FIASG$. THE CALL IS:    XP
)@@G@@@[@@@@.     @A@@@@.         FIFREE    NAME FREECODE   @[@@@@.     @B@@@@XQ
)@@G@@P         PROC      *2                .   @D@@@@FIFREE*   NAME      FIFRXR
)@@G@@EE$           . NORMAL FREE   @E@@@@FIFRIM*   NAME      FIFRIM$         XS
)@@G@@  . RETURN FREE IMAGE   @[@@@@.     @D@@@@ DO P(1)>0 , DL A1,P(1,1),P(1,XT
)@@G@@2)      . GET FILE NAME @E@@@@ DO P(2)>0 , L  A0,P(2,1),P(2,2),P(2,3) . XU
)@@G@@GET FREE CODE     @F@@@@          LMJ       X11,P(0,0)        . CALL SELXV
)@@G@@ECTED ROUTINE     @[@@@@.     @B@@@@          END                       XW
)@@G@@  .   @[@@@@.     @B@@@@. GENERATE FIASG$ PACKET.  THE CALLS ARE: @[@@@@XX
)@@G@@.     @C@@@@.         FIPFIL    'Q','QUAL' 'F','FILE' ....  @[@@@@.     XY
)@@G@@@F@@@@. THE FIRST SUBFIELD OF EACH FIELD IS A CODE LETTER, IN QUOTES :  XZ
)@@G@@@[@@@@.     @ @@@@.         'Q' - QUALIFIER     @^@@@@.         'F' - FIYA
)@@G@@LENAME@^@@@@.         'R' - READKEY @^@@@@.         'W' - WRITEKEY@ @@@@YB
)@@G@@.         'C' - FILECYCLE     @[@@@@.     @F@@@@. IF THE PROCEDURE FIPELYC
)@@G@@T IS CALLED THE FULL 14 WORD ELT$ PACKET  @F@@@@. IS GENERATED AND THE FYD
)@@G@@OLLOWING ADDITION FIELDS ARE ALLOWED.     @[@@@@.     @ @@@@.         'EYE
)@@G@@' - ELEMENT NAME  @ @@@@.         'V' - VERSION NAME  @[@@@@.     @F@@@@YF
)@@G@@. THE SECOND SUBFIELD OF EACH FIELD IS A STRING OF NOT MORE THAN  @F@@@@YG
)@@G@@. 6 OR 12 LETTERS (DEPENDING ON THE NORMAL LENGTH OF THAT FIELD)  @ @@@@YH
)@@G@@. ENCLOSED IN QUOTATION MARKS.@[@@@@.     @B@@@@P         PROC      *8  YI
)@@G@@              .   @E@@@@FIPFIL*   NAME      0                 . ONLY FILYJ
)@@G@@E PORTION   @G@@@@FIPELT*   NAME      1                 . BOTH FILE AND YK
)@@G@@ELEMENT PORTIONS  @[@@@@.     @F@@@@B(1)      EQU       0D              YL
)@@G@@  . PRESENCE BITS (2 WORDS)   @D@@@@Q(1)      EQU       0D              YM
)@@G@@  . QUALIFIER (2) @D@@@@F(1)      EQU       0D                . FILENAMEYN
)@@G@@ (2)  @D@@@@R(1)      EQU       0                 . READKEY (1)   @D@@@@YO
)@@G@@W(1)      EQU       0                 . WRITEKEY (1)  @D@@@@C(1)      EQYP
)@@G@@U       0                 . CYCLE (1)     @E@@@@E(1)      EQU       0D  YQ
)@@G@@              . ELEMENT NAME (2)    @E@@@@V(1)      EQU       0D        YR
)@@G@@        . VERSION NAME(2)     @[@@@@.     @^@@@@I DO P-1 , FISCAN   .   YS
)@@G@@@[@@@@.     @B@@@@          +         B(1)              .   @B@@@@      YT
)@@G@@    +         Q(1)              .   @B@@@@          +         F(1)      YU
)@@G@@        .   @B@@@@          +         C(1)              .   @B@@@@      YV
)@@G@@    +         R(1)              .   @B@@@@          +         W(1)      YW
)@@G@@        .   @B@@@@          ON        P(0,0)            .   @B@@@@      YX
)@@G@@    +         E(1)              .   @B@@@@          +         V(1)      YY
)@@G@@        .   @B@@@@          +         0                 .   @B@@@@      YZ
)@@G@@    OFF       P(0,0)            .   @[@@@@.     @^@@@@          END     ZA
)@@G@@  .   @[@@@@.     @A@@@@. PROCEDURE TO PROCESS EACH FIELD.  @[@@@@.     ZB
)@@G@@@F@@@@FISCAN*   PROC      *0,0              . SECOND GLOBAL PASS ONLY   ZC
)@@G@@@[@@@@.     @A@@@@ DO P(I,1)='Q' ,Q*(1) FIW2 66 .     @A@@@@ DO P(I,1)='ZD
)@@G@@F' ,F*(1) FIW2 60 .     @A@@@@ DO P(I,1)='C' ,C*(1) FIW1 54 .     @A@@@@ZE
)@@G@@ DO P(I,1)='R' ,R*(1) FIW1 48 .     @A@@@@ DO P(I,1)='W' ,W*(1) FIW1 42 ZF
)@@G@@.     @B@@@@          ON        P(0,0)            .   @A@@@@ DO P(I,1)='ZG
)@@G@@E' ,E*(1) FIW2 30 .     @A@@@@ DO P(I,1)='V' ,V*(1) FIW2 24 .     @B@@@@ZH
)@@G@@          OFF       P(0,0)            .   @B@@@@ DO FOUND(1)=0 , +09    ZI
)@@G@@              .   @B@@@@          END                         .   @[@@@@ZJ
)@@G@@.     @D@@@@. PROCEDURE TO LEFT JUSTIFY AND STORE THE COMPONENT.  @[@@@@ZK
)@@G@@.     @B@@@@Z         PROC      *1,0              .   @B@@@@FIW2*     NAZL
)@@G@@ME                        .   @B@@@@P**(I,2)  EQU       P(I,2)++0D      ZM
)@@G@@  .   @F@@@@ DO 12 , DO (P(I,2)*/-66)**077=0 ,P**(I,2) EQU P(I,2)*/6+05 ZN
)@@G@@.     @B@@@@FIW1*     NAME                        .   @F@@@@ DO 06 , DO ZO
)@@G@@(P(I,2)*/-30)**077=0 ,P**(I,2) EQU P(I,2)*/6+05 .     @B@@@@*         EQZP
)@@G@@U       P(I,2)            .   @B@@@@B**(1)    EQU       B(1)++1D*/Z(1,1)ZQ
)@@G@@   .  @B@@@@FOUND*(1) EQU       1                 .   @^@@@@          ENZR
)@@G@@D       .   ___N  @F@@@@. 6 OR 12 LETTERS (DEPENDING ON THE NORMAL LENGTZS
)@@G@@*[S@@@*SDFF*@I@@@@.                                                     ZT
)@@G@@                  . UOMMOD    @I@@@@. PROC TO INSURE THAT SLJ'S PERFORM ZU
)@@G@@*NO* IBANK STORES.                  . UOMMOD    @I@@@@.                 ZV
)@@G@@                                                      . UOMMOD    @I@@@@ZW
)@@G@@.      SLJ$TARG   [DBANK-LC]  . DEFAULT IS $(2)                         ZX
)@@G@@. UOMMOD    @I@@@@.                                                     ZY
)@@G@@                  . UOMMOD    @I@@@@P       PROC    *0                  ZZ
)@@G@@                                    . UOMMOD    @I@@@@SLJ$TARG* NAME    AA
)@@G@@                                                      . UOMMOD    @I@@@@AB
)@@G@@ DO 0=0=1 ,OLDLC EQU &                . SAVE CURRENT LOCN CTR (@ASM)    AC
)@@G@@. UOMMOD    @I@@@@ DO 0=0=0 ,OLDLC EQU $LCN             . SAVE CURRENT LAD
)@@G@@OCN CTR (@MASM)   . UOMMOD    @I@@@@NEWLC     EQU       2*(P(1,1)/2)+(2*AE
)@@G@@P(1)=0) . $(2) OR WHAT'S GIVEN      . UOMMOD    @I@@@@$(NEWLC)          AF
)@@G@@                    . INTO THE DBANK                  . UOMMOD    @I@@@@AG
)@@G@@*       NOP     0                     . GENERATE THE SLJ TARGET         AH
)@@G@@. UOMMOD    @I@@@@ DO 1-(OLDLC=NEWLC) , J $(OLDLC)      . IF LC CHG, JUMAI
)@@G@@P BACK TO OLD LC  . UOMMOD    @I@@@@$(OLDLC)                            AJ
)@@G@@  . AND HERE WE ARE.                . UOMMOD    @I@@@@        END       AK
)@@G@@                    . END SLJTARGET                   . UOMMOD    @I@@@@AL
)@@G@@.                                                                       AM
)@@G@@. UOMMOD    @I@@@@. THE FOLLOWING PROC IS COURTESY OF  QUALIFICATION DOCAN
)@@G@@UMENTATION        . UOMMOD    @I@@@@. FOR LEVEL 33R1 OF THE EXEC. PAGE 1AO
)@@G@@2-25                                . UOMMOD    @I@@@@.                 AP
)@@G@@                                                      . UOMMOD    @I@@@@AQ
)@@G@@. ASSEMBLER LEVELS UP TO AND INCLUDING 13B DO NOT RECOGNIZE THE         AR
)@@G@@. UOMMOD    @I@@@@. LBJ MNEMONIC; IT WILL BE INCLUDED IN THE  ASSEMBLER AS
)@@G@@RELEASE           . UOMMOD    @I@@@@. FOLLOWING 13B. MEANWHILE, THE FOLLAT
)@@G@@OWING PROC CAN BE USED TO           . UOMMOD    @I@@@@. DEFINE LBJ:     AU
)@@G@@                                                      . UOMMOD    @I@@@@AV
)@@G@@.                                                                       AW
)@@G@@. UOMMOD    @I@@@@LBJ*      PROC      *1,1              .               AX
)@@G@@                  . UOMMOD    @I@@@@F         FORM      6,4,4,4,2,16    AY
)@@G@@  .                                 . UOMMOD    @I@@@@     F         7,0AZ
)@@G@@17,LBJ(1,1),LBJ(1,3),2*LBJ(1,*3)+LBJ(1,*2),LBJ(1,2)   . UOMMOD    @I@@@@BA
)@@G@@          END                         . END OF LBJ PROC                 BB
)@@G@@. UOMMOD    @I@@@@.                                                     BC
)@@G@@                  . UOMMOD    @I@@@@. MASM PROCS TO PLACATE THE SAVAGE BBD
)@@G@@EAST.                               . UOMMOD    @I@@@@.                 BE
)@@G@@                                                      . UOMMOD    @I@@@@BF
)@@G@@P         PROC      *0,0              .                                 BG
)@@G@@. UOMMOD    @I@@@@BRIEF*    NAME      0                 . DISABLE COMMONBH
)@@G@@ @ASM DIRECTIVES. . UOMMOD    @I@@@@RESUME*   NAME      0               BI
)@@G@@  . SO @MASM WON'T GET I-FLAGS      . UOMMOD    @I@@@@          END     BJ
)@@G@@                    .                                 . UOMMOD    @I@@@@BK
)@@G@@.                                                                       BL
)@@G@@. UOMMOD    @I@@@@. XFORM @ASM 'TYPE' DIRECTIVE TO @MASM 'INFO 3'       BM
)@@G@@                  . UOMMOD    @I@@@@.                                   BN
)@@G@@                                    . UOMMOD    @I@@@@TYPE*     PROC    BO
)@@G@@  *1,0              . TYPE(1,1) IS TYPE TYPE          . UOMMOD    @I@@@@BP
)@@G@@INFO(0)   EQU       010               . ACFM SENSITIVITY UNKNOWN        BQ
)@@G@@. UOMMOD    @I@@@@INFO(1)   EQU       030               . SETAFCM - D20 BR
)@@G@@IS SET            . UOMMOD    @I@@@@INFO(2)   EQU       050             BS
)@@G@@  . CLRAFCM - D20 IS CLEARED        . UOMMOD    @I@@@@INFO(3)   EQU     BT
)@@G@@  070               . INSENSITIVE                     . UOMMOD    @I@@@@BU
)@@G@@INFO(0100) EQU      0100              . 'TYPE TYPE$REP' => NO IBANK STORBV
)@@G@@. UOMMOD    @I@@@@          ON        +3>2>1            . ON ONLY IF @MABW
)@@G@@SM                . UOMMOD    @I@@@@INF       EQU       INFO(TYPE(1,1)) BX
)@@G@@  . ZERO IF NOT DEFINED             . UOMMOD    @I@@@@ DO INF>0 , INFO  BY
)@@G@@   1 INFO(TYPE(1,1)) . HOT STUFF                      . UOMMOD    @I@@@@BZ
)@@G@@ DO INF=0 , $DISPLAY *'ILLEGAL TYPE SPECIFICATION' . COMPLAIN           CA
)@@G@@. UOMMOD    @I@@@@          OFF                         . END OF @MASM CCB
)@@G@@ODE.              . UOMMOD    @I@@@@          END                       CC
)@@G@@  . END OF TYPE-INFO                . UOMMOD    @A@@@@. EXEC TEST & SET CD
)@@G@@QUEUING PROCS     @[@@@@.     @B@@@@P$        PROC      1,1             CE
)@@G@@  .   @B@@@@T$CELL*   NAME                        .   @B@@@@F         FOCF
)@@G@@RM      6,6,6,18          .   @B@@@@          F         0,057,P$(1,1),0 CG
)@@G@@  .   @B@@@@          END                         .   @B@@@@P$        PRCH
)@@G@@OC      1,3               .   @B@@@@C$TS*     NAME      CTS$            CI
)@@G@@  .   @B@@@@C$TSA*    NAME      CTSA$             .   @B@@@@          SZCJ
)@@G@@,015    P$(1,1),P$(1,2)   .   @B@@@@          TZ,01     P$(1,1),P$(1,2) CK
)@@G@@  .   @B@@@@          ER        P$(0,0)           .   @B@@@@          ENCL
)@@G@@D                         .   @B@@@@P$        PROC      1,2             CM
)@@G@@  .   @B@@@@C$TSQ*    NAME                        .   @B@@@@          NOCN
)@@G@@P       0,P$(1,1),P$(1,2) .   @B@@@@          ER        CTSQ$           CO
)@@G@@  .   @B@@@@          END                         .   @[@@@@.     @[@@@@CP
)@@G@@.     @H@@@@. **********************************************************CQ
)@@G@@*************     @A@@@@. EXEC CONSOLE COMMUNICATION PROCS  @[@@@@.     CR
)@@G@@@I@@@@.                   PROCEDURE TO GENERATE CONSOLE COMMUNICATIONS CCS
)@@G@@ALLING SEQUENC    @[@@@@.     @^@@@@P         PROC      1,2 @#@@@@C$OM* CT
)@@G@@    NAME    @ @@@@          L,016     A0,P(1,1) @^@@@@          ER      CU
)@@G@@  COM$@#@@@@          END     @[@@@@.     @G@@@@.                   PROCCV
)@@G@@EDURE TO GENERATE CONSOLE COMMUNICATIONS PACKET @[@@@@.     @^@@@@P     CW
)@@G@@    PROC      1,3 @#@@@@C$OMPK*   NAME    @ @@@@F         FORM      6,6,CX
)@@G@@6,18  @B@@@@          F         0,P(0,1),P(0,2),0     @A@@@@          + CY
)@@G@@        P(1,1),P(1,2)   @A@@@@          +         P(1,3),P(1,4)   @#@@@@CZ
)@@G@@          END     @[@@@@.     @[@@@@.     @G@@@@. **********************DA
)@@G@@************************************************@^@@@@. EXEC SYMBIONT PRDB
)@@G@@OCS   @[@@@@.     @^@@@@P$       PROC      1,2  @#@@@@R$EAD*   NAME     DC
)@@G@@@ @@@@         L         12,P$(1,1) @^@@@@         ER        READ$@]@@@@DD
)@@G@@         END@^@@@@P$       PROC      1,2  @#@@@@A$READ*  NAME     @ @@@@DE
)@@G@@         L         12,P$(1,1) @ @@@@         ER        AREAD$     @]@@@@DF
)@@G@@         END@^@@@@P$       PROC      1,2  @#@@@@R$EADA*  NAME     @ @@@@DG
)@@G@@         L,016     12,P$(1,1) @ @@@@         ER        READA$     @]@@@@DH
)@@G@@         END@^@@@@P$       PROC      1,2  @#@@@@A$READA* NAME     @ @@@@DI
)@@G@@         L,016     12,P$(1,1) @ @@@@         ER        AREADA$    @]@@@@DJ
)@@G@@         END@^@@@@P$       PROC      1,2  @#@@@@T$READ*  NAME     @ @@@@DK
)@@G@@         L,016     12,P$(1,1) @ @@@@         ER        TREAD$     @]@@@@DL
)@@G@@         END@^@@@@P$       PROC      1,2  @#@@@@A$TREAD* NAME     @ @@@@DM
)@@G@@         L,016     12,P$(1,1) @ @@@@         ER        ATREAD$    @]@@@@DN
)@@G@@         END@^@@@@P$       PROC      1,2  @#@@@@P$RINT*  NAME     @ @@@@DO
)@@G@@         L         12,P$(1,1) @ @@@@         ER        PRINT$     @]@@@@DP
)@@G@@         END@^@@@@P$       PROC      1,2  @#@@@@A$PRINT* NAME     @ @@@@DQ
)@@G@@         L         12,P$(1,1) @ @@@@         ER        APRINT$    @]@@@@DR
)@@G@@         END@^@@@@P$       PROC      1,2  @#@@@@P$RNTA*  NAME     @ @@@@DS
)@@G@@         L,016     12,P$(1,1) @ @@@@         ER        PRNTA$     @]@@@@DT
)@@G@@         END@^@@@@P$       PROC      1,2  @#@@@@A$PRNTA* NAME     @ @@@@DU
)@@G@@         L,016     12,P$(1,1) @ @@@@         ER        APRNTA$    @]@@@@DV
)@@G@@         END@^@@@@P$       PROC      1,2  @#@@@@P$UNCH*  NAME     @ @@@@DW
)@@G@@         L         12,P$(1,1) @ @@@@         ER        PUNCH$     @]@@@@DX
)@@G@@         END@^@@@@P$       PROC      1,2  @#@@@@A$PUNCH* NAME     @ @@@@DY
)@@G@@         L         12,P$(1,1) @ @@@@         ER        APUNCH$    @]@@@@DZ
)@@G@@         END@^@@@@P$       PROC      1,2  @#@@@@P$NCHA*  NAME     @ @@@@EA
)@@G@@         L,016     12,P$(1,1) @ @@@@         ER        PNCHA$     @]@@@@EB
)@@G@@         END@^@@@@P$       PROC      1,2  @#@@@@A$PNCHA* NAME     @ @@@@EC
)@@G@@         L,016     12,P$(1,1) @ @@@@         ER        APNCHA$    @]@@@@ED
)@@G@@         END@^@@@@P$       PROC      1,2  @#@@@@P$RTCN*  NAME     @ @@@@EE
)@@G@@         L         12,P$(1,1) @ @@@@         ER        PRTCN$     @]@@@@EF
)@@G@@         END@^@@@@P$       PROC      1,2  @#@@@@A$PRTCN* NAME     @ @@@@EG
)@@G@@         L         12,P$(1,1) @ @@@@         ER        APRTCN$    @]@@@@EH
)@@G@@         END@^@@@@P$       PROC      1,2  @#@@@@P$CHCN*  NAME     @ @@@@EI
)@@G@@         L         12,P$(1,1) @ @@@@         ER        PCHCN$     @]@@@@EJ
)@@G@@         END@^@@@@P$       PROC      1,2  @#@@@@A$PCHCN* NAME     @ @@@@EK
)@@G@@         L         12,P$(1,1) @ @@@@         ER        APCHCN$    @]@@@@EL
)@@G@@         END@^@@@@P$       PROC      1,2  @#@@@@P$RTCA*  NAME     @ @@@@EM
)@@G@@         L         12,P$(1,1) @ @@@@         ER        PRTCA$     @]@@@@EN
)@@G@@         END@^@@@@P$       PROC      1,2  @#@@@@A$PRTCA* NAME     @ @@@@EO
)@@G@@         L         12,P$(1,1) @ @@@@         ER        APRTCA$    @]@@@@EP
)@@G@@         END@^@@@@P$       PROC      1,2  @#@@@@P$CHCA*  NAME     @ @@@@EQ
)@@G@@         L         12,P$(1,1) @ @@@@         ER        PCHCA$     @]@@@@ER
)@@G@@         END@^@@@@P$       PROC      1,2  @#@@@@A$PCHCA* NAME     @ @@@@ES
)@@G@@         L         12,P$(1,1) @ @@@@         ER        APCHCA$    @]@@@@ET
)@@G@@         END%I@@@@-156  PROC$ 73                                        EU
)@@G@@                     00185    @I@@@@.                                   EV
)@@G@@                                       00185    @I@@@@. PROCS FOR ER SYMEW
)@@G@@B$ (S$YMB) AND PACKET (S$YMBPK)                          00185    @I@@@@EX
)@@G@@. AVAILABLE WITH EXEC 35R1                                              EY
)@@G@@   00185    @I@@@@.                                                     EZ
)@@G@@                     00185    @I@@@@          DEF                       FA
)@@G@@                                       00185    @I@@@@ASCII$    EQU     FB
)@@G@@  01                                                     00185    @I@@@@FC
)@@G@@TRUN$     EQU       02                                                  FD
)@@G@@   00185    @I@@@@UNTR$     EQU       04                                FE
)@@G@@                     00185    @I@@@@PUALT$    EQU       010             FF
)@@G@@                                       00185    @I@@@@W$        EQU     FG
)@@G@@  010                                                    00185    @I@@@@FH
)@@G@@R$        EQU       020                                                 FI
)@@G@@   00185    @I@@@@SM$       EQU       042                               FJ
)@@G@@                     00185    @I@@@@W$R$      EQU       045             FK
)@@G@@                                       00185    @I@@@@P         PROC    FL
)@@G@@                                                         00185    @I@@@@FM
)@@G@@S$YMBPK*  NAME                                                          FN
)@@G@@   00185    @I@@@@Q         FORM      36,36                             FO
)@@G@@                     00185    @I@@@@PL        FUNC                      FP
)@@G@@                                       00185    @I@@@@LNORM*    NAME    FQ
)@@G@@  0                                                      00185    @I@@@@FR
)@@G@@F         FORM      72                                                  FS
)@@G@@   00185    @I@@@@G         FORM      6,66                              FT
)@@G@@                     00185    @I@@@@I(0)      EQU       +(F PL(1))      FU
)@@G@@                                       00185    @I@@@@          DO      FV
)@@G@@  12 , ;                                                 00185    @I@@@@FW
)@@G@@          DO        ((I(0)**(G 0,-0))=I(0))--((I(0)**(G -0,0))=(G -0,0))FX
)@@G@@ ,;00192    @I@@@@I(0)      EQU       ((I(0)**(G 0,-0))*/6)+5 .         FY
)@@G@@                     00185    @I@@@@          END       I(0)            FZ
)@@G@@                                       00185    @I@@@@B(1)      EQU     GA
)@@G@@  0                                                      00185    @I@@@@GB
)@@G@@M         DO        P(1)-2 ,;                                           GC
)@@G@@   00185    @I@@@@B(1)      EQU       P(1,M+2)++B(1)                    GD
)@@G@@                     00185    @I@@@@          ON        0=0=0           GE
)@@G@@  . IF USING MASM...                   00308    @I@@@@          DO      GF
)@@G@@  $TSTR(P(1,1)) , GO ALT . IF STRING, ALT FILE NAME      00308    @I@@@@GG
)@@G@@          OFF       0=0=0                                               GH
)@@G@@   00308    @I@@@@          ON        0=0=1             . IF USING ASM  GI
)@@G@@                     00308    @I@@@@          DO        P(1,1)>0 , GO ALGJ
)@@G@@T                                      00185    @I@@@@          OFF     GK
)@@G@@  0=0=1                                                  00308    @I@@@@GL
)@@G@@          Q         P(1,1),0                                            GM
)@@G@@   00185    @I@@@@          GO        CONT                              GN
)@@G@@                     00185    @I@@@@ALT       NAME                      GO
)@@G@@                                       00185    @I@@@@          DO      GP
)@@G@@  P(1,1)='PRINT$' , GO PR                                00185    @I@@@@GQ
)@@G@@          DO        P(1,1)='PUNCH$' , GO PU                             GR
)@@G@@   00185    @I@@@@          ON        0=0=0             . MASM CODE:    GS
)@@G@@                     00308    @I@@@@          +         P(1,1)LD        GT
)@@G@@  . GENERATE 2 WORD LJSF FILENAME      00308    @I@@@@          OFF     GU
)@@G@@  0=0=0                                                  00308    @I@@@@GV
)@@G@@          ON        0=0=1             . CODE FOR ASM                    GW
)@@G@@   00308    @I@@@@          +         LNORM(P(1,1))                     GX
)@@G@@                     00185    @I@@@@          OFF       0=0=1           GY
)@@G@@                                       00308    @I@@@@          GO      GZ
)@@G@@  CONT                                                   00185    @I@@@@HA
)@@G@@PR        NAME                                                          HB
)@@G@@   00185    @I@@@@          Q         016,0                             HC
)@@G@@                     00185    @I@@@@          GO        CONT            HD
)@@G@@                                       00185    @I@@@@PU        NAME    HE
)@@G@@                                                         00185    @I@@@@HF
)@@G@@          Q         0130,0                                              HG
)@@G@@   00185    @I@@@@CONT      NAME                                        HH
)@@G@@                     00185    @I@@@@          +         P(1,2),B(1)     HI
)@@G@@                                       00185    @I@@@@          +       HJ
)@@G@@  0                                                      00185    @I@@@@HK
)@@G@@          +         P(2,1),P(2,2)                                       HL
)@@G@@   00185    @I@@@@          +         0                                 HM
)@@G@@                     00185    @I@@@@          DO        P(1,2)=W$ , GO WHN
)@@G@@R                                      00185    @I@@@@          DO      HO
)@@G@@  P(1,2)=W$R$ , GO WR                                    00185    @I@@@@HP
)@@G@@          +         0                                                   HQ
)@@G@@   00185    @I@@@@          GO        SPCG                              HR
)@@G@@                     00185    @I@@@@WR        NAME                      HS
)@@G@@                                       00185    @I@@@@          DO      HT
)@@G@@  P(2)>2 , GO SPC                                        00185    @I@@@@HU
)@@G@@          +         1,0                                                 HV
)@@G@@   00185    @I@@@@          GO        SPCG                              HW
)@@G@@                     00185    @I@@@@SPC       NAME                      HX
)@@G@@                                       00185    @I@@@@          +       HY
)@@G@@  P(2,3),0                                               00185    @I@@@@HZ
)@@G@@SPCG      NAME                                                          IA
)@@G@@   00185    @I@@@@          +         0                                 IB
)@@G@@                     00185    @I@@@@          DO        P<4 , GO TR     IC
)@@G@@                                       00185    @I@@@@          +       ID
)@@G@@  P(3,1),P(3,2)                                          00185    @I@@@@IE
)@@G@@          +         0                                                   IF
)@@G@@   00185    @I@@@@TR        NAME                                        IG
)@@G@@                     00185    @I@@@@          END                       IH
)@@G@@                                       00185    @I@@@@P         PROC    II
)@@G@@  1,2                                                    00308    @I@@@@IJ
)@@G@@S$YMB*    NAME                                                          IK
)@@G@@   00185    @I@@@@          L,016     12,P(1,1)                         IL
)@@G@@                     00185    @I@@@@          ER        SYMB$           IM
)@@G@@                                       00185    @I@@@@          END     IN
)@@G@@                                                         00185    @[@@@@IO
)@@G@@.     @[@@@@.     @G@@@@. **********************************************IP
)@@G@@************************@#@@@@. COLLECTOR PROCS @[@@@@.     @^@@@@L$OAD*IQ
)@@G@@    PROC      1   @A@@@@          L,016     A0,L$OAD(1,1)   @D@@@@      IR
)@@G@@    DO        L$OAD(1)=4 , L,016   A2,L$OAD(1,4)@F@@@@          DO      IS
)@@G@@  L$OAD(1)=5 , L   A2,(L$OAD(1,5),L$OAD(1,4))   @D@@@@          DO      IT
)@@G@@  L$OAD(1,3)>0 , LXI,016   A0,0,*0  @A@@@@          L,016     A1,L$OAD(1IU
)@@G@@,2)   @ @@@@L1        ER        LOAD$     @#@@@@          END     @^@@@@IV
)@@G@@D$REL*    PROC      1   @A@@@@          LXI,016   A1,D$REL(1,1)   @C@@@@IW
)@@G@@          DO        D$REL(1)=1 , LMJ A1,DREL$   @B@@@@          DO      IX
)@@G@@  D$REL(1)=1 , GO D1    @A@@@@          LXM,016   A1,D$REL(1,2)   @ @@@@IY
)@@G@@          J         DREL$     @#@@@@D1*       NAME    @#@@@@          ENIZ
)@@G@@D     @^@@@@D$LOAD*   PROC      1   @A@@@@          L,016     A0,D$LOAD(JA
)@@G@@1,1)  @D@@@@          DO        D$LOAD(1,3)>0 , LXI,016  A0,0,*0  @E@@@@JB
)@@G@@          DO        D$LOAD(1,*2)=0 , L,016  A1,D$LOAD(1,2)  @D@@@@      JC
)@@G@@    DO        D$LOAD(1,*2)=1 , L,016  A1,$+2    @ @@@@          J       JD
)@@G@@  DLOAD$    @#@@@@          END     @[@@@@.     @[@@@@.     @G@@@@. ****JE
)@@G@@******************************************************************@#@@@@JF
)@@G@@. EXEC I/O PROCS  @[@@@@.     @#@@@@P         PROC    @^@@@@I$OD*     NAJG
)@@G@@ME      0   @^@@@@I$OT*     NAME      1   @#@@@@PL        FUNC    @^@@@@JH
)@@G@@LNORM*    NAME      0   @^@@@@G         FORM      6,66@^@@@@F         FOJI
)@@G@@RM      72  @ @@@@I(0)      EQU       +(F PL(1))@ @@@@          DO      JJ
)@@G@@  12 , ;    @H@@@@          DO        ((I(0)**(G 0,-0))=I(0))--((I(0)**(JK
)@@G@@G -0,0))=(G -0,0)) ,;   @C@@@@I(0)      EQU       ((I(0)**(G 0,-0))*/6)+JL
)@@G@@5 .   @ @@@@          END       +(F  I(0))@A@@@@          +         LNORJM
)@@G@@M(P(1,1))   @A@@@@          +         P(1,4),P(1,3)   @ @@@@          + JN
)@@G@@        P(1,2),0,0@ @@@@F         FORM      2,16,18   @E@@@@          F JO
)@@G@@    (P(2,3)='N')+2*(P(2,3)='D'),P(2,1),P(2,2)   @B@@@@          DO      JP
)@@G@@  P(0,0)=1 , GO I$OA    @ @@@@          +         P(3,1)    @B@@@@      JQ
)@@G@@    DO        P(3,2)=0 , GO I$OA    @#@@@@PL        FUNC    @^@@@@LNORM1JR
)@@G@@*   NAME      0   @^@@@@G         FORM      6,30@^@@@@F         FORM    JS
)@@G@@  36  @ @@@@I(0)      EQU       +(F PL(1))@D@@@@          DO        6 , JT
)@@G@@DO (I(0)**(G 0,-0))=I(0) ,;   @A@@@@I(0)      EQU       (I(0)*/6)+5     JU
)@@G@@@^@@@@          END       I(0)@A@@@@          +         LNORM1(P(3,2))  JV
)@@G@@@]@@@@          +0@#@@@@I$OA*     NAME    @#@@@@          END     @ @@@@JW
)@@G@@P         PROC      1,2 .     @#@@@@I$O*      NAME .  @A@@@@          L,JX
)@@G@@016     A0,P(1,1)  .    @ @@@@          ER        IO$ .     @#@@@@      JY
)@@G@@    END .   @ @@@@P         PROC      1,2 .     @#@@@@I$OI*     NAME .  JZ
)@@G@@@A@@@@          L,016     A0,P(1,1)  .    @ @@@@          ER        IOI$KA
)@@G@@ .    @#@@@@          END .   @ @@@@P         PROC      1,2 .     @#@@@@KB
)@@G@@I$OW*     NAME .  @A@@@@          L,016     A0,P(1,1)  .    @ @@@@      KC
)@@G@@    ER        IOW$ .    @#@@@@          END .   @ @@@@P         PROC    KD
)@@G@@  1,2 .     @#@@@@I$OWI*    NAME .  @A@@@@          L,016     A0,P(1,1) KE
)@@G@@ .    @ @@@@          ER        IOWI$ .   @#@@@@          END .   @ @@@@KF
)@@G@@P         PROC      1,2 .     @#@@@@I$OXI*    NAME .  @A@@@@          L,KG
)@@G@@016     A0,P(1,1)  .    @ @@@@          ER        IOXI$ .   @#@@@@      KH
)@@G@@    END .   @ @@@@P         PROC      1,2 .     @#@@@@I$OARB*   NAME .  KI
)@@G@@@A@@@@          L,016     A0,P(1,1)  .    @ @@@@          ER        IOARKJ
)@@G@@B$ .  @#@@@@          END .   @ @@@@P         PROC      1,2 .     @#@@@@KK
)@@G@@I$OAXI*   NAME .  @A@@@@          L,016     A0,P(1,1)  .    @ @@@@      KL
)@@G@@    ER        IOAXI$ .  @#@@@@          END .   %I@@@@-256      PROC$ 73KM
)@@G@@                                                         00289    @I@@@@KN
)@@G@@P         PROC      1,2               .                                 KO
)@@G@@   00289    @I@@@@I$OADH*   NAME      .                                 KP
)@@G@@                     00289    @I@@@@          L,016     A0,P(1,1)       KQ
)@@G@@  .                                    00289    @I@@@@          ER      KR
)@@G@@  IOADH$            .                                    00289    @I@@@@KS
)@@G@@          END       .                                                   KT
)@@G@@   00289    @I@@@@.                                                     KU
)@@G@@                     00309    @I@@@@. **********************************KV
)@@G@@******************************         00309    @I@@@@. SET PROGRAMMABLEKW
)@@G@@ BREAKPOINT REGISTER (1110, 1100/40, 1100/80 ONLY)       00309    @I@@@@KX
)@@G@@.                                                                       KY
)@@G@@   00309    @I@@@@.                                                     KZ
)@@G@@                     00309    @I@@@@P         PROC      *4              LA
)@@G@@                                       00309    @I@@@@S$ETBP*   NAME    LB
)@@G@@                                                         00309    @I@@@@LC
)@@G@@          ON        P>4               . IF BDI GIVEN                    LD
)@@G@@   00309    @I@@@@          LA,016    015,P(4,1)        . LA,U  A1,BDI  LE
)@@G@@                     00309    @I@@@@          OFF       P>4             LF
)@@G@@                                       00309    @I@@@@CTRL      EQU     LG
)@@G@@  8*(P>4)++4*(P(2,1)='P')++;                             00309    @I@@@@LH
)@@G@@                    2*((P(2,1)='R')++(P(2,2)='R'))++;                   LI
)@@G@@   00309    @I@@@@                    (P(2,1)='W')++(P(2,2)='W')        LJ
)@@G@@                     00309    @I@@@@F         FORM      6,6,24          LK
)@@G@@                                       00309    @I@@@@          LA      LL
)@@G@@  014,(F  CTRL,P(3,1),P(1,1))                            00309    @I@@@@LM
)@@G@@          ER        SETBP$                                              LN
)@@G@@   00309    @I@@@@          END                                         LO
)@@G@@                     00309    @[@@@@.     @[@@@@.     @G@@@@. **********LP
)@@G@@************************************************************@D@@@@. EOUTLQ
)@@G@@$ ROUTINE PROCS AND EDITING FUNCTION DEFINITIONS@[@@@@.     @^@@@@E$    LR
)@@G@@  PROC    1,1     @#@@@@E$C*    NAME    4 @#@@@@E$A*    NAME    5 @#@@@@LS
)@@G@@E$B*    NAME    3 @#@@@@E$O*    NAME    2 @#@@@@E$D*    NAME    1 @#@@@@LT
)@@G@@E$E*    NAME    6 @^@@@@E$W*    NAME    011     @#@@@@E$F*    NAME    7 LU
)@@G@@@^@@@@E$WT*     NAME      010 @^@@@@E$WS*   NAME    012     @^@@@@E$SCL*LV
)@@G@@  NAME    013     @^@@@@E$PNT*  NAME    014     @^@@@@E$FLD*  NAME    01LW
)@@G@@5     @^@@@@E$INDX* NAME    016     @^@@@@E$OVRP* NAME    017     @^@@@@LX
)@@G@@E$TERM* NAME    020     @^@@@@E$LINK* NAME    021     @^@@@@E$JUMP* NAMELY
)@@G@@    022     @^@@@@E$RPT*  NAME    023     @^@@@@E$CLR*  NAME    024     LZ
)@@G@@@^@@@@E$DE*     NAME     026  @^@@@@E$DF*     NAME     027  @ @@@@EOUT$FMA
)@@G@@  FORM    5,7,6,2,16    @G@@@@        DO      E$(1)>2 , EOUT$F E$(0,0),EMB
)@@G@@$(1,1),E$(1,2),E$(1,4),E$(1,3)@E@@@@        DO      E$(1)<3 , EOUT$F E$(MC
)@@G@@0,0),0,0,E$(1,2),E$(1,1)@]@@@@        END @F@@@@. CENTERED HEADING PROCEMD
)@@G@@DURE ---  E$CENT  M,X,CHARACTER-COUNT     @^@@@@E$      PROC    1,1.    ME
)@@G@@@#@@@@E$CENT* NAME    0 @ @@@@EOUT$F  FORM    5,7,6,2,16    @E@@@@      MF
)@@G@@  EOUT$F  5,64-E$(1,3)//2,E$(1,3)//6,E$(1,2),E$(1,1)  @[@@@@ END  @^@@@@MG
)@@G@@E$OUT*  PROC    0,1     @^@@@@        LMJ     11,EOUT$@]@@@@        END MH
)@@G@@@^@@@@E$OUTR* PROC    0,1     @ @@@@        LMJ     11,EOUTR$     @]@@@@MI
)@@G@@        END @[@@@@.     @[@@@@.     @G@@@@. ****************************MJ
)@@G@@******************************************@ @@@@. DYNAMIC DUMP ROUTINE PMK
)@@G@@ROCS  @[@@@@.     @^@@@@X$MARK*   PROC      1   @^@@@@        SLJ     XMML
)@@G@@ARK$  @]@@@@        END @^@@@@X$BACK*   PROC      1   @^@@@@        SLJ MM
)@@G@@    XBACK$  @]@@@@        END @^@@@@X$BUFR*   PROC      1   @^@@@@      MN
)@@G@@  SLJ     XBUFR$  @B@@@@        +       X$BUFR(1,2),X$BUFR(1,1).  @]@@@@MO
)@@G@@        END @^@@@@X$SIZE*   PROC      1   @H@@@@          SLJ       XSIZMP
)@@G@@E$            . CALL THE XSIZE$ ROUTINE TO SET LIMIT  @H@@@@          + MQ
)@@G@@        X$SIZE(1,1)       . NUMBER OF SECTORS FOR DYNAMIC DUMP    @#@@@@MR
)@@G@@          END     @^@@@@X$        PROC      3   @#@@@@X$IF*   NAME    0.MS
)@@G@@@#@@@@X$OR*   NAME    1.@#@@@@X$AND*  NAME    2.@[@@@@* .   @#@@@@X$LST*MT
)@@G@@  PROC    . @ @@@@I         DO X$LST      ,;    @ @@@@J         DO X$LSTMU
)@@G@@(I)   ,;    @^@@@@XX*(I,J)  EQU X$LST(I,J)@#@@@@        END     . @^@@@@MV
)@@G@@        SLJ     XSAVE$. @^@@@@        +       X$(0,0).@F@@@@        DO  MW
)@@G@@    (X$(3,1)=16)**(X$(3,2)=0) ,X$(3,1) EQU XSAVE$-1.  @E@@@@          X$MX
)@@G@@LST   'GT',055,3  'LE',054,3  'EQ',052,3  ;     @D@@@@                'LMY
)@@G@@T',055,1 'GE',054,1 'NE',053,1.     @D@@@@I       DO      6 , DO X$(2,1)MZ
)@@G@@=XX(I,1) ,J$ EQU I.     @ @@@@F$      FORM    6,4,4,4,2,16. @ @@@@L$    NA
)@@G@@  EQU     XX(J$,3).     @^@@@@K$      EQU     4-L$.   @E@@@@        F$  NB
)@@G@@    010,X$(L$,3),4,X$(L$,2),X$(L$,*1),X$(L$,1). @F@@@@        F$      XXNC
)@@G@@(J$,2),X$(K$,3),4,X$(K$,2),X$(K$,*1),X$(K$,1).  @#@@@@        END     . ND
)@@G@@@#@@@@X$      PROC    1.@#@@@@X$TALY*   NAME.   @^@@@@        SLJ     XTNE
)@@G@@ALY$  @ @@@@        +       X$(1,1),0.    @C@@@@        DO      (X$(1,2)NF
)@@G@@=0)**(X$(1,3)=0) , -0,1.@D@@@@        DO      (X$(1,2)>0)**(X$(1,3)=0) ,NG
)@@G@@ +X$(1,2),1.@D@@@@        DO      (X$(1,2)=0)**(X$(1,3)>0) , -0,X$(1,3).NH
)@@G@@@E@@@@        DO      (X$(1,2)>0)**(X$(1,3)>0) , +X$(1,2),X$(1,3).@]@@@@NI
)@@G@@        END @^@@@@X$FRMT*   PROC      1   @^@@@@        SLJ     XFRMT$  NJ
)@@G@@@B@@@@        +       X$FRMT(1,1),X$FRMT(1,2).  @]@@@@        END @^@@@@NK
)@@G@@X$MESG*   PROC      1   @^@@@@        SLJ     XMESG$  @A@@@@        +   NL
)@@G@@    X$MESG(1,1),'A'     @]@@@@        END @^@@@@X$CREG*   PROC      1   NM
)@@G@@@ @@@@          SLJ       XCREG$    @C@@@@          +         X$CREG(1,2NN
)@@G@@),X$CREG(1,1).    @A@@@@          +         X$CREG(1,3),0   @]@@@@      NO
)@@G@@  END @^@@@@X$        PROC      1   @#@@@@X$DUMP* NAME.     @^@@@@      NP
)@@G@@  SLJ     XDUMP$  @ @@@@N$        FORM      4,14,18   @C@@@@          N$NQ
)@@G@@        X$(1,5),X$(1,2),X$(1,1)     @B@@@@        DO      X$(1,4)=0 , +XNR
)@@G@@$(1,3),0.   @A@@@@        DO      X$(1,4)=0 , END.    @^@@@@F$      FORMNS
)@@G@@    18,6,6,6@C@@@@        DO      X$(1,4)='R' , F$ X$(1,3),16,4,1.@C@@@@NT
)@@G@@        DO      X$(1,4)='A' , F$ X$(1,3),16,2,2.@C@@@@        DO      X$NU
)@@G@@(1,4)='B' , F$ X$(1,3),16,1,4.@D@@@@          DO        X$(1,4)='X' , F$NV
)@@G@@ X$(1,3),16,1,4.  @G@@@@        DO      (X$(1,4)='AR')++(X$(1,4)='RA') ,NW
)@@G@@ F$ X$(1,3),32,6,3.     @G@@@@        DO      (X$(1,4)='BR')++(X$(1,4)='NX
)@@G@@RB') , F$ X$(1,3),32,5,5.     @G@@@@        DO      (X$(1,4)='BA')++(X$(NY
)@@G@@1,4)='AB') , F$ X$(1,3),32,3,6.     @G@@@@          DO       (X$(1,4)='XNZ
)@@G@@A')++(X$(1,4)='AX') , F$ X$(1,3),32,3,6.  @G@@@@          DO        (X$(OA
)@@G@@1,4)='XR')++(X$(1,4)='RX') , F$ X$(1,3),32,5,5. @I@@@@        DO      1-OB
)@@G@@((X$(1,4)='A')++(X$(1,4)='B')++(X$(1,4)='R')++(X$(1,4)='AR');     @I@@@@OC
)@@G@@               ++(X$(1,4)='RA')++(X$(1,4)='BR')++(X$(1,4)='RB')++(X$(1,4OD
)@@G@@)='BA');    @E@@@@          ++(X$(1,4)='X')++(X$(1,4)='XR')++(X$(1,4)='ROE
)@@G@@X');  @C@@@@          ++(X$(1,4)='XA')++(X$(1,4)='AX');     @D@@@@      OF
)@@G@@          ++(X$(1,4)='AB')) , F$ X$(1,3),48,7,7.@]@@@@        END @^@@@@OG
)@@G@@X$        PROC      1   @#@@@@X$CORE* NAME.     @^@@@@        SLJ     XCOH
)@@G@@ORE$  @ @@@@N$        FORM      4,14,18   @C@@@@          N$        X$(1OI
)@@G@@,4),X$(1,2),X$(1,1)     @ @@@@        +       X$(1,3),0.    @]@@@@      OJ
)@@G@@  END @^@@@@X$DRUM*   PROC      1   @^@@@@        SLJ     XDRUM$  @C@@@@OK
)@@G@@          +         X$DRUM(1,3),X$DRUM(1,2)     @C@@@@          +       OL
)@@G@@  X$DRUM(1,4),X$DRUM(1,1)     @]@@@@        END @^@@@@X$TAPE*   PROC    OM
)@@G@@  1   @^@@@@        SLJ     XTAPE$  @#@@@@        +       0 @B@@@@      ON
)@@G@@  +       X$TAPE(1,2),X$TAPE(1,1)   @]@@@@        END @^@@@@X$        PROO
)@@G@@OC      1   @#@@@@X$FILE*   NAME    @ @@@@          SLJ       XFILE$    OP
)@@G@@@ @@@@S$        FORM      12,6,18   @E@@@@          DO        X$(1,2)='OOQ
)@@G@@N' , S$ 1,X$(1,3),X$(1,1)     @D@@@@          DO        1-(X$(1,2)='ON')OR
)@@G@@ , S$ 0,0,X$(1,1) @#@@@@          END     @^@@@@X$CW*     PROC      1   OS
)@@G@@@^@@@@          SLJ       XCW$@B@@@@          +         X$CW(1,2),X$CW(1OT
)@@G@@,1)   @A@@@@          +         X$CW(1,3),0     @#@@@@          END     OU
)@@G@@@^@@@@X$ON*     PROC      1   @H@@@@          S         A0,XSTAT$       OV
)@@G@@  .  SET XSTAT$ NONZERO IF A0 NONZERO     @D@@@@          TNZ       XSTAOW
)@@G@@T$            . IS A0 NONZERO?@H@@@@          SN,H2     A0,XSTAT$       OX
)@@G@@  . NO - IT'S ZERO - STORE 0777777 INTO H2@#@@@@          END     @^@@@@OY
)@@G@@X$OFF*    PROC      1   @ @@@@          SZ        XSTAT$    @#@@@@      OZ
)@@G@@    END     @[@@@@.     @[@@@@.     @G@@@@. ****************************PA
)@@G@@******************************************@B@@@@. PROC TO GENERATE FORTRPB
)@@G@@AN V NTAB$ TABLES @[@@@@.     @^@@@@. P(1,1)  NTAB$ LENGTH  @D@@@@. P(1,PC
)@@G@@2)  NUMBER OF UNITS TO BE SET TO PRINT SYMBIONTS@D@@@@. P(1,3)  NUMBER OPD
)@@G@@F UNITS TO BE SET TO PUNCH SYMBIONTS@E@@@@. P(1,4)  NUMBER OF UNITS TO BPE
)@@G@@E SET TO CARD READ SYMBIONTS  @D@@@@. P(1,5)  NUMBER OF UNITS TO BE SET PF
)@@G@@TO REREAD UNITS   @I@@@@. P(1,6)  NUMBER OF UNITS TO BE SET TO ALTERNATEPG
)@@G@@ PRINT SYMBIONTS WHERE THE FILE     @C@@@@. IS AUTOMATICALLY ASG'D, FREEPH
)@@G@@'D, AND SYM'D     @G@@@@. LIST P(2) MUST BE PRESENT IF P(3), P(4), P(5) PI
)@@G@@OR P(6) ARE PRESENT     @F@@@@. LIST P(3) MUST BE PRESENT IF P(4), P(5),PJ
)@@G@@ OR P(6) ARE PRESENT    @E@@@@. LIST P(4) MUST BE PRESENT IF P(5) OR P(6PK
)@@G@@) ARE PRESENT     @C@@@@. LIST P(5) MUST BE PRESENT IF P(6) IS PRESENT  PL
)@@G@@@H@@@@.      ENTRIES IN LIST P(2) ARE UNIT NUMBERS FOR STANDARD PRINT SYPM
)@@G@@MBIONTS     @H@@@@.      ENTRIES IN LIST P(3) ARE UNIT NUMBERS FOR STANDPN
)@@G@@ARD PUNCH SYMBIONTS     @G@@@@.      ENTRIES IN LIST P(4) ARE UNIT NUMBEPO
)@@G@@RS FOR STANDARD READ SYMBIONTS@E@@@@.      ENTRIES IN LIST P(5) ARE UNITPP
)@@G@@ NUMBERS OF REREAD UNITS@H@@@@.      ENTRIES IN LIST P(6) ARE UNIT NUMBEPQ
)@@G@@RS OF AUTOMATIC ALTERNATE SYMBIONTS @[@@@@.     @E@@@@.      EXAMPLES OFPR
)@@G@@ CALL:   N$TAB    31,1,1,1,2  6 1 5 0,30  @G@@@@.                       PS
)@@G@@   N$TAB    NSIZE,1,1,1,1  PRT CPNC CRD RREAD   @F@@@@                  PT
)@@G@@         N$TAB    31,1,1,1,2,1  6 1 5 0,30 7    @[@@@@.     @^@@@@P     PU
)@@G@@    PROC      6.  @#@@@@N$TAB*    NAME    @^@@@@$(2),NTAB$**  RES   0   PV
)@@G@@@ @@@@NTBSZ$**  EQU       P(1,1)    @ @@@@F         FORM      6,6,6,18  PW
)@@G@@@#@@@@Q         FUNC    @#@@@@RRD*      NAME    @^@@@@A(1)      EQU     PX
)@@G@@  0   @D@@@@J         DO        Q(1) ,  DO P(5,J)=I-1 ,A(1) EQU 1 @C@@@@PY
)@@G@@          DO (A(1)>0)**(A1(1)>0) ,B EQU  0999   @^@@@@          END     PZ
)@@G@@  A(1)@#@@@@Q         FUNC    @#@@@@DEV*      NAME    @^@@@@A(1)      EQQA
)@@G@@U       0   @^@@@@B(1)      EQU       0   @^@@@@C(1)      EQU       0   QB
)@@G@@@^@@@@D(1)      EQU       0   @E@@@@J         DO        Q(1) ,  DO P(2,JQC
)@@G@@)=I-1 ,A(1) EQU  044    @E@@@@K         DO        Q(2) ,  DO P(3,K)=I-1 QD
)@@G@@,B(1) EQU  041    @E@@@@L         DO        Q(3) ,  DO P(4,L)=I-1 ,C(1) QE
)@@G@@EQU  040    @E@@@@M         DO        Q(4) ,  DO P(6,M)=I-1 ,D(1) EQU  0QF
)@@G@@66    @B@@@@A1*(1)    EQU       A(1)+B(1)+C(1)+D(1)   @B@@@@          DOQG
)@@G@@        A1(1)>066 ,B EQU  0999@ @@@@          END       A1(1)     @I@@@@QH
)@@G@@I         DO        P(1,1) , F 0,DEV(P(1,2),P(1,3),P(1,4),P(1,6)),RRD(P(QI
)@@G@@1,5)),0     @#@@@@          END     @^@@@@P         PROC      1.  @#@@@@QJ
)@@G@@N$BF1*    NAME    @D@@@@PL$**     EQU       15                 . PACKET QK
)@@G@@LENGTH@D@@@@BL$**     EQU       256                . BUFFER LENGTH@E@@@@QL
)@@G@@NP        EQU       P(1,1)             . NUMBER OF PACKETS  @E@@@@NB    QM
)@@G@@    EQU       P(1,2)             . NUMBER OF BUFFERS  @G@@@@B1L$**    EQQN
)@@G@@U       PL$*NP+BL$*NB      . AREA 1 TOTAL LENGTH (PKT+BUFF) @F@@@@$(2),BQO
)@@G@@1O$**  RES    B1L$               . AREA 1 STARTING ADDRESS  @#@@@@      QP
)@@G@@    END     @^@@@@P         PROC      1.  @#@@@@N$BF2*    NAME    @D@@@@QQ
)@@G@@PL        EQU       15                . PACKET LENGTH @D@@@@BL        EQQR
)@@G@@U       256               . BUFFER LENGTH @E@@@@NP        EQU       P(1,QS
)@@G@@1)             . NUMBER OF PACKETS  @E@@@@NB        EQU       P(1,2)    QT
)@@G@@         . NUMBER OF BUFFERS  @G@@@@B2L$**    EQU       PL*NP+BL*NB     QU
)@@G@@  . AREA 2 TOTAL LENGTH (PKT+BUFF)  @F@@@@$(2),B2O$** RES     B2L$      QV
)@@G@@         . AREA 2 STARTING ADDRESS  @#@@@@          END     @[@@@@.     QW
)@@G@@@[@@@@.     @G@@@@. ****************************************************QX
)@@G@@******************@E@@@@. PROC TO GENERATE PACKET AND INSTRUCTIONS FOR SQY
)@@G@@NAP$ CALL   @[@@@@.     @#@@@@P         PROC    @#@@@@L$SNAP*   NAME    QZ
)@@G@@@H@@@@          SA        12,DUMPAC+2       . SNAP$ RESTORES A0 VALUE SARA
)@@G@@VED HERE    @E@@@@          LA,14     12,DUMPAC         . GET PACKET ADDRB
)@@G@@RESS  @B@@@@          ER        SNAP$             .   @F@@@@          J RC
)@@G@@        $+4               . JUMP OVER 3-WORD PACKET   @]@@@@        .   RD
)@@G@@@ @@@@PAR       FORM      3,15,18   @H@@@@DUMPAC    +         P(1,1)    RE
)@@G@@        . WORD 0 IS THE 6-CHAR SNAP IDENTIFIER  @H@@@@          PAR     RF
)@@G@@  P(1,2),P(1,3),P(1,4)  . WORD 1 IS REGISTERS, LENGTH, START@G@@@@      RG
)@@G@@    +         0                 . WORD 2 IS SAVE LOCATION FOR A0  @#@@@@RH
)@@G@@          END.    @[@@@@.     @[@@@@.     @G@@@@. **********************RI
)@@G@@************************************************@G@@@@. THE ELT$ PROC DERJ
)@@G@@FINES THE FIELDS OF THE FILE AND ELEMENT NOTATION     @D@@@@. TABLE (ELTRK
)@@G@@$) PREPARED BY THE INFOR$ ROUTINE SELT$   @[@@@@.     %I@@@@-517,517-  PRL
)@@G@@ROC$ 73                                                        00121    RM
)@@G@@@^@@@@P         PROC      0   %@@@@[@#@@@@ELT$*     NAME    @]@@@@      RN
)@@G@@    . @F@@@@FQL*      EQUF      ELT$,,S1          . FILE QUALIFIER LENGTRO
)@@G@@H     @E@@@@FNL*      EQUF      ELT$,,S2          . FILE NAME LENGTH    RP
)@@G@@@D@@@@FCL*      EQUF      ELT$,,S3          . F-CYCLE LENGTH@E@@@@RKL*  RQ
)@@G@@    EQUF      ELT$,,S4          . READ KEY LENGTH     @E@@@@WKL*      EQRR
)@@G@@UF      ELT$,,S5          . WRITE KEY LENGTH    @F@@@@IQF*      EQUF    RS
)@@G@@  ELT$,,S6          . IMPLIED QUALIFIER FLAG    @]@@@@          . @E@@@@RT
)@@G@@ENL*      EQUF      ELT$+1,,S1        . ELEMENT NAME LENGTH @F@@@@EVL*  RU
)@@G@@    EQUF      ELT$+1,,S2        . ELEMENT VERSION LENGTH    @E@@@@ECL*  RV
)@@G@@    EQUF      ELT$+1,,S3        . ELEMENT CYCLE LENGTH@G@@@@CFN*      EQRW
)@@G@@UF      ELT$+1,,S4        . CONTINUATION FILE FIELD NUMBER  @G@@@@ECC*  RX
)@@G@@    EQUF      ELT$+1,,S5        . ELEMENT CYCLE SIGNAL CHARACTER  @E@@@@RY
)@@G@@BEC*      EQUF      ELT$+1,,S6        . BINARY ELEMENT CYCLE@]@@@@      RZ
)@@G@@    . @I@@@@.                                                           SA
)@@G@@            . UOMMOD    @I@@@@. UOMCHG - THE FOLLOWING FLAGS ARE DEFINEDSB
)@@G@@ VIA EQUF'S,                  . UOMMOD    @I@@@@. RATHER THAN EQU'S, PERSC
)@@G@@ REQUEST.                                       . UOMMOD    @I@@@@.     SD
)@@G@@                                                                  . UOMMSE
)@@G@@OD    @I@@@@FQUAL*    EQUF      ELT$+2            . FILE QUALIFIER      SF
)@@G@@            . UOMMOD    @I@@@@FNAME*    EQUF      ELT$+4            . FISG
)@@G@@LE NAME                       . UOMMOD    @I@@@@FCYC*     EQUF      ELT$SH
)@@G@@+6            . F-CYCLE                         . UOMMOD    @I@@@@RKEY* SI
)@@G@@    EQUF      ELT$+7            . READ KEY                        . UOMMSJ
)@@G@@OD    @I@@@@WKEY*     EQUF      ELT$+8            . WRITE KEY           SK
)@@G@@            . UOMMOD    @I@@@@ENAME*    EQUF      ELT$+9            . ELSL
)@@G@@EMENT NAME                    . UOMMOD    @I@@@@EVER*     EQUF      ELT$SM
)@@G@@+11           . ELEMENT VERSION                 . UOMMOD    @I@@@@ECYC* SN
)@@G@@    EQUF      ELT$+13           . ELEMENT CYCLE                   . UOMMSO
)@@G@@OD    @I@@@@          .                                                 SP
)@@G@@            . UOMMOD    @#@@@@          END     @[@@@@.     @[@@@@.     SQ
)@@G@@@G@@@@. ****************************************************************SR
)@@G@@******@ @@@@. SNOOPY INTERNAL TABLE FLAGS @[@@@@.     @B@@@@          DESS
)@@G@@F                         .   @G@@@@REMOTE    EQUF      SNFLG$,,S1      ST
)@@G@@  . SET FOR DEMAND, CLEAR FOR BATCH @H@@@@CCALL     EQUF      SNFLG$,,S2SU
)@@G@@        . SET IF CONTINGENCY INTERCEPTOR USED   @I@@@@REMPRT    EQUF    SV
)@@G@@  SNFLG$,,S3        . SET FOR CHANGED STORAGE TRACING SUPPRESS    @I@@@@SW
)@@G@@REMSKPIT  EQUF      SNFLG$,,S4        . SET TO SUPPRESS PRINTING OF ANY SX
)@@G@@TRACING     @H@@@@CONTINGF  EQUF      SNFLG$,,S5        . SET WHEN CONTISY
)@@G@@NGENCY HAS OCCURRED     @I@@@@REMBRK    EQUF      SNFLG$,,S6        . SESZ
)@@G@@T WHEN BREAK CONTINGENCY HAS OCCURRED     @F@@@@WASRLB    EQUF      SNFLTA
)@@G@@G$+1,,S1      . SET WHEN WAS IN RLIB$     @G@@@@CMODE     EQUF      SNFLTB
)@@G@@G$+1,,S2      . SET WHEN IN CONTINGENCY MODE    @F@@@@COMPRT    EQUF    TC
)@@G@@  SNFLG$+1,,S3      . SET FOR COMPRESSED PRINT  @G@@@@RLIB$T    EQUF    TD
)@@G@@  SNFLG$+1,,S4      . SET TO ALLOW RRLIB$ TRACING     @F@@@@OLDSKP    EQTE
)@@G@@UF      SNFLG$+1,,S5      . SAVE REMSKPIT IN RLIB$    @F@@@@ECHO      EQTF
)@@G@@UF      SNFLG$+1,,S6      . ECHO ALT PRINT WHEN SET   @G@@@@RLIBX     EQTG
)@@G@@UF      SNFLG$+2,,S1      . RLIB-EXCEPT-SPECIFIED-LIST FLAG @G@@@@SN$DEFTH
)@@G@@*   PROC      0,0               . THIS PROC DEFINES SNOOPY FLAGS  @B@@@@TI
)@@G@@          END                         .   @[@@@@.     @[@@@@.     @G@@@@TJ
)@@G@@. **********************************************************************TK
)@@G@@@A@@@@. ASCII CONTROL CHARACTER MNEMONICS @[@@@@.     @B@@@@          DETL
)@@G@@F                         .   @B@@@@F         FUNC                      TM
)@@G@@  .   @B@@@@CTL*      NAME      1                 .   @B@@@@LC*       NATN
)@@G@@ME      2                 .   @B@@@@A(1)      EQU       F(1)            TO
)@@G@@  .   @B@@@@          DO F(0)=1 ,A(1) EQU F(1)-0100   @B@@@@          DOTP
)@@G@@ F(0)=2 ,A(1) EQU F(1)+040    @B@@@@          END       A(1)            TQ
)@@G@@  .   @B@@@@NUL       EQU       0                 .   @B@@@@SOH       EQTR
)@@G@@U       1                 .   @B@@@@STX       EQU       2               TS
)@@G@@  .   @B@@@@ETX       EQU       3                 .   @B@@@@EOT       EQTT
)@@G@@U       4                 .   @B@@@@ENQ       EQU       5               TU
)@@G@@  .   @B@@@@ACK       EQU       6                 .   @B@@@@BEL       EQTV
)@@G@@U       7                 .   @B@@@@BS        EQU       010             TW
)@@G@@  .   @B@@@@HT        EQU       011               .   @B@@@@LF        EQTX
)@@G@@U       012               .   @B@@@@VT        EQU       013             TY
)@@G@@  .   @B@@@@FF        EQU       014               .   @B@@@@CR        EQTZ
)@@G@@U       015               .   @B@@@@SO        EQU       016             UA
)@@G@@  .   @B@@@@SI        EQU       017               .   @B@@@@DLE       EQUB
)@@G@@U       020               .   @B@@@@DC1       EQU       021             UC
)@@G@@  .   @B@@@@DC2       EQU       022               .   @B@@@@DC3       EQUD
)@@G@@U       023               .   @B@@@@DC4       EQU       024             UE
)@@G@@  .   @B@@@@NAK       EQU       025               .   @B@@@@SYN       EQUF
)@@G@@U       026               .   @B@@@@ETB       EQU       027             UG
)@@G@@  .   @B@@@@CAN       EQU       030               .   @B@@@@EM        EQUH
)@@G@@U       031               .   @B@@@@SUB       EQU       032             UI
)@@G@@  .   @B@@@@ESC       EQU       033               .   @B@@@@FS        EQUJ
)@@G@@U       034               .   @B@@@@GS        EQU       035             UK
)@@G@@  .   @B@@@@RS        EQU       036               .   @B@@@@US        EQUL
)@@G@@U       037               .   @B@@@@DEL       EQU       0177            UM
)@@G@@  .   @B@@@@P         PROC      0                 .   @^@@@@A$SCTRL*  NAUN
)@@G@@ME      0   %I@@@@-613,613  PROC$ 73                                    UO
)@@G@@                     00256    %@@@@[@B@@@@          END                 UP
)@@G@@        .   @[@@@@.     @[@@@@.     @G@@@@. ****************************UQ
)@@G@@******************************************@D@@@@. ASCII - FIELDATA CHARAUR
)@@G@@CTER SET DEFINITION PROCS     @[@@@@.     @G@@@@ASCII*    PROC      *0  US
)@@G@@              . DEFINE THE ASCII CHARACTER SET  @E@@@@          CHAR,9  UT
)@@G@@  0,0100,1,0133,2,0135,3,043,4,0136,5,040 @B@@@@I         DO        26 ,UU
)@@G@@ CHAR 5+I,0100+I  @H@@@@          CHAR      040,051,041,055,042,053,043,UV
)@@G@@074,044,075,045,076,046,046,; @H@@@@                    047,044,050,052,UW
)@@G@@051,050,052,045,053,072,054,077,055,041,; @A@@@@                    056,UX
)@@G@@054,057,0134@B@@@@I         DO        10 , CHAR 057+I,057+I @G@@@@      UY
)@@G@@    CHAR      072,047,073,073,074,057,075,056,076,042,077,0137    @#@@@@UZ
)@@G@@          END     @]@@@@          . @H@@@@FIELDATA* PROC      *0        VA
)@@G@@        . DEFINE THE FIELDATA CHARACTER SET     %I@@@@-630  PROC$ 73    VB
)@@G@@                                                         00108    @I@@@@VC
)@@G@@FDATA*    NAME                        . USED BY EXEC LEVELS < 34        VD
)@@G@@   00108    @^@@@@          CHAR,6    0,0 @A@@@@I         DO        63 ,VE
)@@G@@ CHAR I,I   @#@@@@          END     @[@@@@.     @[@@@@.     @G@@@@. ****VF
)@@G@@******************************************************************@[@@@@VG
)@@G@@.     @]@@@@          . @^@@@@D$*       PROC      1,1 @A@@@@          DOVH
)@@G@@  D$(1)=1  ,  +D$(1,1)  @B@@@@          DO  D$(1)=2  ,  +D$(1,1),D$(1,2)VI
)@@G@@@D@@@@          DO  D$(1)=3  ,  +D$(1,1),D$(1,2),D$(1,3)    @E@@@@      VJ
)@@G@@    DO  D$(1)=4  ,  +D$(1,1),D$(1,2),D$(1,3),D$(1,4)  @F@@@@          DOVK
)@@G@@  D$(1)=5  ,  +D$(1,1),D$(1,2),D$(1,3),D$(1,4),D$(1,5)@H@@@@          DOVL
)@@G@@  D$(1)=6  ,  +D$(1,1),D$(1,2),D$(1,3),D$(1,4),D$(1,5),D$(1,6)    @#@@@@VM
)@@G@@          END     @[@@@@.     @[@@@@.     @G@@@@. **********************VN
)@@G@@************************************************@#@@@@. J-REGISTER FUNC VO
)@@G@@@[@@@@.     @#@@@@          DEF     @C@@@@.    FORMAT : JREG(BL,OFFSET,IVP
)@@G@@NCREMENT,I,E)     @[@@@@.     @H@@@@.                              ALL FVQ
)@@G@@IVE FIELDS ARE OPTIONAL.  A NULL REFERENCE@H@@@@.                       VR
)@@G@@       OF THE FORM JREG() WILL ASSUME BL=9, OFFSET=0, @D@@@@.           VS
)@@G@@                   INCREMENT=1, I=1, E=0. @[@@@@.     @H@@@@.           VT
)@@G@@       BL          BYTE LENGTH EQUALS 6,9,12 OR 18.  A VALUE OF 9 @F@@@@VU
)@@G@@.                              IS ASSUMED IF NONE IS SPECIFIED.   @H@@@@VV
)@@G@@.                  OFFSET      BYTE NUMBER OF FIRST BYTE TO BE REFERENCEVW
)@@G@@D     @H@@@@.                              (NUMBERING FROM ZERO).  THIS VX
)@@G@@SHOULD BE THE LAST@H@@@@.                              BYTE IF THE INCREVY
)@@G@@MENT IS NEGATIVE.  A VALUE OF @G@@@@.                              ZERO VZ
)@@G@@IS ASSUMED IF NONE IS SPECIFIED.    @G@@@@.                  INCREMENT  WA
)@@G@@ NUMBER OF BYTES (POSITIVE OR NEGATIVE).  @I@@@@.                       WB
)@@G@@       THIS FIELD MUST BE +1 OR -1 FOR BYTE INSTRUCTIONS    @I@@@@.     WC
)@@G@@                         AN INCREMENT OF +1 IS ASSUMED IF NON IS SPECIFIWD
)@@G@@ED    @H@@@@.                  I           J-REGISTER MODIFICATION BIT IWE
)@@G@@S 0 OR 1.  THIS   @H@@@@.                              FIELD MUST BE 1 FWF
)@@G@@OR BYTE INSTRUCTIONS.  A VALUE@G@@@@.                              OF 1 WG
)@@G@@IS ASSUMED IF NONE IS SPECIFIED.    @H@@@@.                  E          WH
)@@G@@ SIGN EXTENSION BIT IS 0 OR 1.  THIS FIELD MUST @H@@@@.                 WI
)@@G@@             BE 0 FOR BYTE INSTRUCTIONS. A VALUE OF 0 IS    @E@@@@.     WJ
)@@G@@                         ASSUMED IF NONE IS SPECIFIED.@[@@@@.     @#@@@@WK
)@@G@@.    EXAMPLES :   @B@@@@.                  L   J0,(JREG(9,0))     @C@@@@WL
)@@G@@.                  L   J1,(JREG(6,25,-2,0,1))   @[@@@@.     @[@@@@.     WM
)@@G@@%I@@@@-680,693  PROC$ 73                                                WN
)@@G@@         00184    @I@@@@F$*       FUNC                        .         WO
)@@G@@                           00236    @I@@@@JREG*     NAME                WP
)@@G@@        .                                    00236    @I@@@@          DOWQ
)@@G@@        F$(1)=0 ,;        . IF BYTE LENGTH = 0 THEN            00184    WR
)@@G@@@I@@@@A         EQU       0                 . FORCE QUOTIENT TO ZERO    WS
)@@G@@         00184    @I@@@@          DO        1-(F$(1)=0) ,;    . IF BYTE WT
)@@G@@NOT EQUAL TO 0 THEN        00184    @I@@@@A         EQU       36/F$(1)  WU
)@@G@@        . DETERMINE QUOTIENT                 00184    @I@@@@I         EQWV
)@@G@@U       (F$<5)+(F$>4)*F$(4). I = FOURTH PARAMETER IF GIVEN ELSE00184    WW
)@@G@@@I@@@@BL        EQU       (F$(1)=18)*1+;     . IF FIRST PARAMETER = 18 -WX
)@@G@@ BL = 1  00184    @I@@@@                    (F$(1)=6)*2+;               WY
)@@G@@               6 - BL = 2  00184    @I@@@@                    (F$(1)=12)WZ
)@@G@@*3                             12 - BL = 3 EL00184    @I@@@@E         EQXA
)@@G@@U       (F$>5)*F$(5)      . E = FIFTH PARAMETER IF GIVEN ELSE 000184    XB
)@@G@@@I@@@@OW        EQU       F$(1)*F$(2)/36    . OW = OFFSET IN WORDS      XC
)@@G@@         00184    @I@@@@OB        EQU       (F$(2)-;          . BYTE NUMXD
)@@G@@BER MINUS                  00184    @I@@@@                    A*OW)*;   XE
)@@G@@          NUMBER OF BYTES MULTIPLYED BY      00184    @I@@@@            XF
)@@G@@        (1+(BL=0)+(BL=3)+;  2 IF BITS/BYTE = 9 OR 12           00184    XG
)@@G@@@I@@@@                    3*(BL=1))         . 4 IF BITS/BYTE = 18 OR 1 IXH
)@@G@@F = 6    00184    @I@@@@IW        EQU       F$(1)*F$(3)/36    . IW = +/-XI
)@@G@@ 0 DEPENDING UPON THE INCRE00184    @I@@@@          ON        0=0=0     XJ
)@@G@@        . INTERPRETE IF MASM IS THE PROCESSOR00184    @I@@@@IW        $EXK
)@@G@@QU      ($IBITS(F$(3))**1*/2)->; IF INCREMENT IS NEGATIVE THEN 00184    XL
)@@G@@@I@@@@                    -IW!+IW                     COMPLEMENT IW ELSEXM
)@@G@@ NOTHING 00184    @I@@@@          OFF       0=0=0                       XN
)@@G@@                           00184    @I@@@@IB        EQU       (F$(3)-;  XO
)@@G@@        . INCRE IN BYTES: BYTE LENGTH =  6 IB00184    @I@@@@            XP
)@@G@@        A*IW+(F$<4))*;                                     9   00184    XQ
)@@G@@@I@@@@                    (1+(BL=0)+(BL=3)+;                            XR
)@@G@@    12   00184    @I@@@@                    3*(BL=1))                   XS
)@@G@@                      18   00184    @I@@@@          END       +(JR  I,BLXT
)@@G@@,E,IW,IB**7,OW,OB)  . RETURN J REGISTER      00235    @I@@@@          . XU
)@@G@@                                                               00184    XV
)@@G@@@I@@@@JREG*     PROC      *0                .                           XW
)@@G@@         00184    @I@@@@JR*       FORM      1,2,1,11,3,15,3   . DEFINE AXX
)@@G@@ FORM FOR THE J-REGISTER   00184    @I@@@@          ON        0=0=0     XY
)@@G@@        . EXECUTE IF MASM IS THE PROCESSOR   00184    @I@@@@JREG*     $EXZ
)@@G@@QU      $FN(F$,0)         . FORM A FUNCTION NAME JREG          00184    YA
)@@G@@@I@@@@          OFF       0=0=0             .                           YB
)@@G@@         00184    @I@@@@          END                                   YC
)@@G@@                           00184    ___ EQU     *[S@@@*SDFF*@#@@@@      YD
)@@G@@    DEF     @[@@@@.     @G@@@@. NOTE: FUNCTIONS WHOSE NAMES ARE THE SAMEYE
)@@G@@ AS VARIABLE NAMES *MUST*     @D@@@@. BE DEFINED PRIOR TO THE EQU'S FOR YF
)@@G@@THE VARIABLES     @[@@@@.     @[@@@@.     @C@@@@. ------ FUNCTION TO CONYG
)@@G@@STUCT IMMEDIATE VALUES  @G@@@@.        NOTE: FULLWORD NEGATIVE VALUES WIYH
)@@G@@LL AUTOMATICALLY GET SIGN     @G@@@@.              EXTENSION, BUT HALFWDYI
)@@G@@S WHOSE LEFTMOST BIT HAPPENS TO BE  @G@@@@.              ON WILL NOT. HEYJ
)@@G@@NCETHERE IS NO NEED FOR AN XU(...) FUNC.  @[@@@@.     @#@@@@F         FUYK
)@@G@@NC    @^@@@@U*        NAME      016 @^@@@@XU*       NAME      017 @E@@@@YL
)@@G@@ DO F=3 , GO G$$FMU                   . TEST FOR FLAGGED    @D@@@@MASM  YM
)@@G@@    EQU       0=0=0             . ON IF MASM    @E@@@@          ON      YN
)@@G@@  MASM=0            . BEGIN ASM STUFF     @F@@@@ DO 1-(&(F(1))=-2) , GO YO
)@@G@@G$$FMU        . TEST FOR F(1) RELOCATABLE @E@@@@ DO 1= +(I$ 0,1++F(1)**1YP
)@@G@@,0,0,0,0) , GO G$$FMU . OR HAS FORM @E@@@@          OFF                 YQ
)@@G@@        . END OF ASM STUFF    @E@@@@          ON        MASM            YR
)@@G@@  . BEGIN MASM STUFF    @H@@@@ DO F=1 , END +F(0)                   . IFYS
)@@G@@ NO ARGS ('U') THEN OUTPUT VALUE    @G@@@@ DO $BA(F(1))>0 , GO G$$FMU   YT
)@@G@@        . IF NOT 0, THEN FORM OR RELOC    @D@@@@          OFF           YU
)@@G@@              . END OF MASM   @F@@@@. AT THIS POINT, F(1) IS A LEGITIMATYV
)@@G@@E FORMLESS CONSTANT VALUE     @G@@@@ DO (F(1)>0777777)++(F(1)<-131071) ,YW
)@@G@@ END (+F(1)) . TOO BIG? GEN LITERAL.@A@@@@IBIT      EQU     0<(F(1)**020YX
)@@G@@0000) @A@@@@HBIT      EQU     0<(F(1)**0400000) @G@@@@J         EQU     YY
)@@G@@  017-(F(0)=016)*(F(1)>-0) . IF NOT 'XU', GEN EITHER  @E@@@@ DO 1 ,   ENYZ
)@@G@@D     +(I$ 0,J,0,0,2*HBIT+IBIT,F(1)**0177777)   @F@@@@. COME HERE IF ARGZA
)@@G@@ F(1) IS RELOCATABLE, TAGGED, OR HAS FORM...    @#@@@@G$$FMU*   NAME    ZB
)@@G@@@E@@@@          END       +(I$ 0,F(0),0,F(2),2*F(*2)+F(*1),F(1))  @[@@@@ZC
)@@G@@.     @H@@@@. HARDWARE MODE INDEPENDENT FUNCS TO SIGNIFY EXTRACTION OF AZD
)@@G@@ PARTIAL WORD     @[@@@@.     @#@@@@F         FUNC    @C@@@@W*        NAZE
)@@G@@ME      0                 . FULLWORD@^@@@@H1*       NAME      2   @^@@@@ZF
)@@G@@H2*       NAME      1   @^@@@@XH2*      NAME      3   @^@@@@S1*       NAZG
)@@G@@ME      015 @^@@@@S2*       NAME      014 @^@@@@S3*       NAME      013 ZH
)@@G@@@^@@@@S4*       NAME      012 @^@@@@S5*       NAME      011 @^@@@@S6*   ZI
)@@G@@    NAME      010 @F@@@@ DO (0=0=0)**(F=1) , END +(F(0))      . NO ARGS ZJ
)@@G@@+> OUTPUT VALUE   @E@@@@          END       +(I$ 0,F(0),,F(2),2*F(*2)+F(ZK
)@@G@@*1),F(1))   @[@@@@.     @E@@@@. HARDWARE MODE DEPENDENT PARTIAL WORD EXTZL
)@@G@@RACTION FUNCS     @[@@@@.     @G@@@@G$PWMD(1) EQU       -1              ZM
)@@G@@  . SET PARTIAL WORD MODE UNDEFINED @[@@@@.     @G@@@@F         FUNC    ZN
)@@G@@                    . THIRD WORD DEPENDENT PARTIAL WDS@^@@@@XH1*      NAZO
)@@G@@ME      4   @^@@@@T1*       NAME      7   @^@@@@T2*       NAME      6   ZP
)@@G@@@^@@@@T3*       NAME      5   @G@@@@          ON        0               ZQ
)@@G@@  . TURN OFF PSR CHECK (FOR NOW)    @G@@@@ DO G$PWMD(1)=1               ZR
)@@G@@        ; IF PARTWD MODE SET TO QUARTER   @E@@@@   , END +(I$ 077,020,02ZS
)@@G@@0,020,4,010000000) . FORCE A T-FLAG @F@@@@G$PWMD*(1) EQU      0         ZT
)@@G@@        . ELSE DEFINE THIRDWD MODE  @B@@@@          OFF                 ZU
)@@G@@        .   @F@@@@ DO (0=0=0)**(F=1) , END +(F(0))      . NO ARGS +> OUTZV
)@@G@@PUT VALUE   @E@@@@          END       +(I$ 0,F(0),,F(2),2*F(*2)+F(*1),F(ZW
)@@G@@1))   @[@@@@.     @G@@@@F         FUNC                        . QUARTER ZX
)@@G@@WD DEPENDENT PARTIAL WDS@^@@@@Q2*       NAME      4   @^@@@@Q1*       NAZY
)@@G@@ME      7   @^@@@@Q3*       NAME      6   @^@@@@Q4*       NAME      5   ZZ
)@@G@@@G@@@@          ON        0                 . TURN OFF PSR CHECK (FOR NOAA
)@@G@@W)    @G@@@@ DO G$PWMD(1)=0                       ; IF PARTWD MODE SET TAB
)@@G@@O THIRD     @E@@@@   , END +(I$ 077,020,020,020,4,010000000) . FORCE A TAC
)@@G@@-FLAG @F@@@@G$PWMD*(1) EQU      1                 . ELSE DEFINE QUARTERWAD
)@@G@@D MODE@B@@@@          OFF                         .   @F@@@@ DO (0=0=0)*AE
)@@G@@*(F=1) , END +(F(0))      . NO ARGS +> OUTPUT VALUE   @E@@@@          ENAF
)@@G@@D       +(I$ 0,F(0),,F(2),2*F(*2)+F(*1),F(1))   @F@@@@/. DEFINITIONS WHIAG
)@@G@@CH REPLACE THE NEED FOR AXR$. BY DOING THIS, WE @F@@@@. PREVENT ERRORS IAH
)@@G@@N DEFINITION WHICH MIGHT OCCUR IF THE PROGRAMMER@F@@@@. PUT HIS OWN AXR$AI
)@@G@@ IN AND IT ACCIDENTALLY PRECEDED THE FUNCTION   @B@@@@. DEFINITIONS CONTAJ
)@@G@@AINED IN THIS ELEMENT.  @[@@@@.     @^@@@@X1        EQU       1   @^@@@@AK
)@@G@@X2        EQU       2   @^@@@@X3        EQU       3   @^@@@@X4        EQAL
)@@G@@U       4   @^@@@@X5        EQU       5   @^@@@@X6        EQU       6   AM
)@@G@@@^@@@@X7        EQU       7   @^@@@@X8        EQU       010 @^@@@@X9    AN
)@@G@@    EQU       011 @^@@@@X10       EQU       012 @^@@@@X11       EQU     AO
)@@G@@  013 @^@@@@A0        EQU       014 @^@@@@A1        EQU       015 @^@@@@AP
)@@G@@A2        EQU       016 @^@@@@A3        EQU       017 @^@@@@A4        EQAQ
)@@G@@U       020 @^@@@@A5        EQU       021 @^@@@@A6        EQU       022 AR
)@@G@@@^@@@@A7        EQU       023 @^@@@@A8        EQU       024 @^@@@@A9    AS
)@@G@@    EQU       025 @^@@@@A10       EQU       026 @^@@@@A11       EQU     AT
)@@G@@  027 @^@@@@A12       EQU       030 @^@@@@A13       EQU       031 @^@@@@AU
)@@G@@A14       EQU       032 @^@@@@A15       EQU       033 @^@@@@R1        EQAV
)@@G@@U       0101@^@@@@R2        EQU       0102@^@@@@R3        EQU       0103AW
)@@G@@@^@@@@R4        EQU       0104@^@@@@R5        EQU       0105@^@@@@R6    AX
)@@G@@    EQU       0106@^@@@@R7        EQU       0107@^@@@@R8        EQU     AY
)@@G@@  0110@^@@@@R9        EQU       0111@^@@@@R10       EQU       0112@^@@@@AZ
)@@G@@R11       EQU       0113@^@@@@R12       EQU       0114@^@@@@R13       EQBA
)@@G@@U       0115@^@@@@R14       EQU       0116@^@@@@R15       EQU       0117BB
)@@G@@@^@@@@SR1       EQU       R3  @^@@@@SR2       EQU       R4  @^@@@@SR3   BC
)@@G@@    EQU       R5  @^@@@@J0        EQU       R6  @^@@@@J1        EQU     BD
)@@G@@  R7  @^@@@@J2        EQU       R8  @^@@@@J3        EQU       R9  @A@@@@BE
)@@G@@. PARTIAL WORD DESIGNATORS FOLLOW   @[@@@@.     @G@@@@. WELL, THEY USED BF
)@@G@@TO, BUT HAVE BEEN REMOVED FOR REASONS GIVEN ABOVE.    @[@@@@.     @[@@@@BG
)@@G@@.     @^@@@@P         PROC    *0    @#@@@@SAXR$*    NAME    @[@@@@.     BH
)@@G@@@F@@@@. IF NOT @MASM, DEFINE THE PARTIALWORD DESIGS HERE. IF @MASM, THE BI
)@@G@@@B@@@@. VALUES ARE DEFINED BY THE FUNCTIONS.    @[@@@@.     @F@@@@      BJ
)@@G@@    ON        0=0=1             . 1 IF @ASM, 0 IF @MASM     @^@@@@W*    BK
)@@G@@    EQU       0   @^@@@@H2*       EQU       1   @^@@@@H1*       EQU     BL
)@@G@@  2   @^@@@@XH2*      EQU       3   @^@@@@XH1*      EQU       4   @^@@@@BM
)@@G@@T3*       EQU       5   @^@@@@T2*       EQU       6   @^@@@@T1*       EQBN
)@@G@@U       7   @^@@@@S6*       EQU       010 @^@@@@S5*       EQU       011 BO
)@@G@@@^@@@@S4*       EQU       012 @^@@@@S3*       EQU       013 @^@@@@S2*   BP
)@@G@@    EQU       014 @^@@@@S1*       EQU       015 @^@@@@U*        EQU     BQ
)@@G@@  016 @^@@@@XU*       EQU       017 @^@@@@Q2*       EQU       4   @^@@@@BR
)@@G@@Q4*       EQU       5   @^@@@@Q3*       EQU       6   @^@@@@Q1*       EQBS
)@@G@@U       7   @B@@@@          OFF                         .   @[@@@@.     BT
)@@G@@@#@@@@          END     ___ AND IT ACCIDENTALLY PRECEDED THE FUNCTION   BU
)@@G@@@B@@@@. DEFINITIONS CONT*[S@@@*SDFF*@C@@@@. AVAILABLE PREFIXES ARE G$ J$BV
)@@G@@ M$ Q$ V$ W$ Z$   @H@@@@        DEF . IF @MASM-OMN, REPLACE THIS LINE WIBW
)@@G@@TH: $DEF,$LEVEL, AND G$OMN=1  @G@@@@G$OMN     EQU       0               BX
)@@G@@  . 0 IF PDP, 1 IF MASM OMNIBUS     @E@@@@. ** WHEN GENERATING AN @MASM BY
)@@G@@OMNIBUS, PERUSE, AND THEN     @D@@@@. ** OBEY THE INSTRUCTIONS IN TCF-TOBZ
)@@G@@-MAKE/OMNIBUS.    @F@@@@STRUC$OMN* PROC     *0                . IF @MASMCA
)@@G@@, DEFINE G$OMN    @F@@@@ DO G$OMN=0 , $INCLUDE 'STRUC$/UOM'    . IF READCB
)@@G@@ING PDP, GET OMN. @E@@@@          END                         . END OF SCC
)@@G@@TRUC$OMN    @[@@@@.     @H@@@@          DEF                         . FOCD
)@@G@@R @ASM, BEGIN DEF FOR STRUC$DEF     @H@@@@G$UOM     EQU       1         CE
)@@G@@        . IF 1, THIS IS UOM ASM OR MASM, SO     @I@@@@                  CF
)@@G@@                    .    ASSUME EXISTENCE OF BRIEF AND RESUME     @G@@@@CG
)@@G@@                                      . IF 0, FAKE IT WITH DUMMY PROCS  CH
)@@G@@@[@@@@.     @E@@@@. KEYWORDS WHICH DETERMINE STRUCTURE OF THE HEADER LINCI
)@@G@@E     @[@@@@.     @E@@@@. NOTE THAT THESE KEYWORDS ARE NEGATIVE TO AVOIDCJ
)@@G@@ CONFUSION  @F@@@@. WITH USER SUPPLIED REGISTER AND J-DESIGNATOR SPECIFICK
)@@G@@CATIONS     @[@@@@.     @#@@@@IN      EQU    - 1@#@@@@IS      EQU    - 2CL
)@@G@@@#@@@@THEN    EQU    - 3@#@@@@AND     EQU    - 4@#@@@@OR      EQU    - 5CM
)@@G@@@#@@@@WHILE   EQU    - 6@#@@@@UNTIL   EQU    - 7@H@@@@. NOTE: KEYWORDS VCN
)@@G@@ARY THRU LOOKFOR MUST BE IN ORDER, RANGE TESTS ARE USED     @#@@@@VARY  CO
)@@G@@  EQU    - 8@#@@@@JGD     EQU    - 9@^@@@@TLEM    EQU    - 10     @^@@@@CP
)@@G@@JMGI    EQU    - 11     @^@@@@LOOKFOR EQU    - 12     @[@@@@.     @^@@@@CQ
)@@G@@TO      EQU    - 13     @^@@@@BY      EQU    - 14     @^@@@@FOR     EQU CR
)@@G@@   - 15     @^@@@@UP      EQU    - 16     @^@@@@DOWN    EQU    - 17     CS
)@@G@@@^@@@@WHEN    EQU    - 18     @^@@@@FROM    EQU    - 19     @^@@@@MASKEDCT
)@@G@@  EQU    - 20     @^@@@@SUBROUTINE EQU - 21     @^@@@@MAINPROGRAM EQU - CU
)@@G@@22    @^@@@@CONTINGENCY EQU - 23    @^@@@@CYCLIC    EQU       -24 @^@@@@CV
)@@G@@POINTER EQU    - 25     @^@@@@SIGNAL  EQU    - 26     @^@@@@STACK   EQU CW
)@@G@@   - 27     @^@@@@SAVE    EQU    - 28     @^@@@@OFFSET  EQU    - 29     CX
)@@G@@@^@@@@CHANNEL EQU    - 30     @^@@@@STARTIO EQU    - 31     @^@@@@NOT   CY
)@@G@@    EQU       -32 @^@@@@NOSAVE    EQU       -33 @^@@@@EXECSUB   EQU     CZ
)@@G@@  -34 @^@@@@CALLING EQU         -35 @^@@@@BASING     EQU      -36 @^@@@@DA
)@@G@@IBANK      EQU      -37 @^@@@@DBANK      EQU      -38 @^@@@@LIJSUB     EDB
)@@G@@QU      -39 @^@@@@LDJSUB     EQU      -40 @^@@@@REMOTESUB  EQU      -41 DC
)@@G@@@^@@@@VIA        EQU      -42 @^@@@@NOFINDEXIT EQU      -43 @^@@@@NOCHECDD
)@@G@@KING EQU      -44 @C@@@@/. TABLES FOR GENERATION OF TYPE 1 TESTS, FORM: DE
)@@G@@@C@@@@.                 <AREG>,<KEYWORD>,<U-SPEC>     @[@@@@.     @#@@@@DF
)@@G@@. KEYWORDS-----   @[@@@@.     @#@@@@EQ      EQU    1  @D@@@@NE      EQU DG
)@@G@@   2                      . PREFERRED     @F@@@@NEQ     EQU    NE       DH
)@@G@@              . ALTERNATE (MAY BE REMOVED)@#@@@@LT      EQU    3  @G@@@@DI
)@@G@@LTE     EQU     LT                    . MNEMONIC FOR DON'T CARE EQUALS  DJ
)@@G@@@E@@@@GE      EQU    4                      . PREFERRED KEYWORD   @F@@@@DK
)@@G@@GEQ     EQU    GE                     . SUPERCEDED BY THE ABOVE   @G@@@@DL
)@@G@@GTE     EQU     GE                    . DON'T CARE (ABOUT EQUALITY) MNEMDM
)@@G@@@#@@@@GT      EQU    5  @E@@@@LE        EQU       6                 . THDN
)@@G@@IS IS PREFERRED   @F@@@@LEQ       EQU       LE                . THIS HASDO
)@@G@@ BEEN SUPERCEDED  @#@@@@SPANS   EQU    7  @#@@@@NOSPAN  EQU    8  @#@@@@DP
)@@G@@EVENP   EQU    9  @#@@@@ODDP    EQU    10 @#@@@@DEQ     EQU    11 @D@@@@DQ
)@@G@@DNE     EQU    12                     . PREFERRED     @F@@@@DNEQ    EQU DR
)@@G@@   DNE                    . ALTERNATE (MAY BE REMOVED)@I@@@@AGE     EQU DS
)@@G@@   13                     . PREFERRED: SPECIAL FOR MASKED ALFA SEARC    DT
)@@G@@@#@@@@AGEQ    EQU    AGE@#@@@@ALT     EQU    14 @[@@@@.     @F@@@@. WAITDU
)@@G@@ING STATUS=2 INDICATES  CONDITION AFTER TEST IS  FALSE,TRUE @[@@@@.     DV
)@@G@@@^@@@@G$WS(1,EQ)        EQU  2@^@@@@G$WS(1,NE)        EQU  2@^@@@@G$WS(1DW
)@@G@@,GT)        EQU  2@^@@@@G$WS(1,LE)        EQU  3@^@@@@G$WS(1,LT)        DX
)@@G@@EQU  2@^@@@@G$WS(1,GE)        EQU  2@^@@@@G$WS(1,SPANS)     EQU  2@^@@@@DY
)@@G@@G$WS(1,NOSPAN)    EQU  2@^@@@@G$WS(1,EVENP)     EQU  2@^@@@@G$WS(1,ODDP)DZ
)@@G@@      EQU  2@^@@@@G$WS(1,DEQ)       EQU  2@^@@@@G$WS(1,DNE)       EQU  3EA
)@@G@@@^@@@@G$WS(1,AGE)       EQU  2@^@@@@G$WS(1,ALT)       EQU  2@[@@@@.     EB
)@@G@@@C@@@@. DEFINE INVERSE FUNCTIONS USED TO OPTIMIZE     @[@@@@.     @ @@@@EC
)@@G@@G$IV(1,EQ)        EQU  NE     @ @@@@G$IV(1,NE)        EQU  EQ     @ @@@@ED
)@@G@@G$IV(1,GT)        EQU  LE     @ @@@@G$IV(1,LE)        EQU  GT     @ @@@@EE
)@@G@@G$IV(1,LT)        EQU  GE     @ @@@@G$IV(1,GE)        EQU  LT     @ @@@@EF
)@@G@@G$IV(1,SPANS)     EQU  NOSPAN @ @@@@G$IV(1,NOSPAN)    EQU  SPANS  @ @@@@EG
)@@G@@G$IV(1,EVENP)     EQU  ODDP   @ @@@@G$IV(1,ODDP)      EQU  EVENP  @ @@@@EH
)@@G@@G$IV(1,DEQ)       EQU  DNE    @ @@@@G$IV(1,DNE)       EQU  DEQ    @ @@@@EI
)@@G@@G$IV(1,AGE)       EQU  -1     @ @@@@G$IV(1,ALT)       EQU  -1     @[@@@@EJ
)@@G@@.     @E@@@@. DEFINE INSTRUCTION OPCODES TO BE USED IN CODE GENERATION  EK
)@@G@@@[@@@@.     @E@@@@G$FJ(1,EQ,1)      EQU  052            . TEST EQUAL OPCEL
)@@G@@ODE   @C@@@@G$FJ(1,NE,1)      EQU  053            . TNE     @B@@@@G$FJ(1EM
)@@G@@,GT,1)      EQU  055            . TG@C@@@@G$FJ(1,GT,2)      EQU  053    EN
)@@G@@        . TNE     @B@@@@G$FJ(1,LE,1)      EQU  055            . TG@C@@@@EO
)@@G@@G$FJ(1,LE,2)      EQU  053            . TNE     @B@@@@G$FJ(1,LT,1)      EP
)@@G@@EQU  055            . TG@C@@@@G$FJ(1,GE,1)      EQU  054            . TLEQ
)@@G@@E     @B@@@@G$FJ(1,SPANS,1)   EQU  056            . TW@C@@@@G$FJ(1,NOSPAER
)@@G@@N,1)  EQU  057            . TNW     @C@@@@G$FJ(1,EVENP,1)   EQU  044    ES
)@@G@@        . TEP     @C@@@@G$FJ(1,ODDP,1)    EQU  045            . TOP     ET
)@@G@@@[@@@@.     @E@@@@. NOTE- DOUBLE TEST HAS A 2ND ENTRY TO PREVENT OPTIMIZEU
)@@G@@ER    @E@@@@. FROM TRYING TO NEST IT.  THIS IS NECESSARY BECAUSE THERE  EV
)@@G@@@D@@@@. IS NO DTNE INSTRUCTION, AND IF THE WAITING VALUE    @E@@@@. OF TEW
)@@G@@HE TEST IS INVERTED BY THE OPTIMIZER (E.G. DEMORGAN'S @E@@@@. THEOREM USEX
)@@G@@ED), THE NUMBER OF INSTRUCTIONS GENERATED WILL  @#@@@@. BE DIFFERENT    EY
)@@G@@@[@@@@.     @E@@@@G$FJ(1,DEQ,1)     EQU  01637          . FJ FOR DTE INSEZ
)@@G@@TR    @F@@@@G$FJ(1,DEQ,2)     EQU  0              . DUMMY TO FOOL OPTIMIFA
)@@G@@ZER   @H@@@@G$FJ(1,DNE,1)     EQU  01637          . SAME THING (BUT WAITFB
)@@G@@ STATUS DIFFERENT)@F@@@@G$FJ(1,DNE,2)     EQU  0              . DUMMY TOFC
)@@G@@ FOOL OPTIMIZER   @[@@@@.     @F@@@@. FUDGED ENTRIES FOR MASKED ALFABETIFD
)@@G@@C SEARCH-- CODE GENERATOR WILL@D@@@@. SUBTRACT 052 FROM VALUES BELOW ANDFE
)@@G@@ USE AS A J-FIELD @E@@@@. WE DON'T WORRY ABOUT INVERSION HERE SINCE THESFF
)@@G@@E CAN ONLY  @E@@@@. APPEAR IN LOOKFOR FORMAT OF A REPEAT STATEMENT, AND FG
)@@G@@IT    @B@@@@. HAS ITS OWN SELF-PROTECTION MECHANISMS  @[@@@@.     @D@@@@FH
)@@G@@G$FJ(1,AGE,1)     EQU  060            . GENERATES MASL@D@@@@G$FJ(1,ALT,1FI
)@@G@@)     EQU  061            . GENERATES MASG@[@@@@.     @E@@@@. PARAMETERSFJ
)@@G@@ INDICATING HOW ABOVE OPCODES ARE TO BE USED--  @[@@@@.     @H@@@@G$KSF(FK
)@@G@@1)          EQU  2              . KEYWORD SUBFIELD IN CONDITION FIELD   FL
)@@G@@@G@@@@G$FCF(1)          EQU  0              . FUNCT CODE FLAG (0 => USE FM
)@@G@@G$FJ) @I@@@@G$ASF(1)          EQU  1              . AREG-SUBFIELD IN CONFN
)@@G@@DITION FIELD (0=NONE    @[@@@@.     @C@@@@/. TABLES FOR GENERATION OF TYFO
)@@G@@PE 2 TESTS, FORM: @A@@@@.         <KEYWORD>,IN,<U-SPEC>     @[@@@@.     FP
)@@G@@@#@@@@. KEYWORDS -----  @[@@@@.     @^@@@@POS               EQU  1@^@@@@FQ
)@@G@@NEG               EQU  2@^@@@@ZERO              EQU  3@^@@@@NONZ        FR
)@@G@@      EQU  4@[@@@@.     @^@@@@. WAITING STAUS ---     @[@@@@.     @^@@@@FS
)@@G@@G$WS(2,ZERO)      EQU  2@^@@@@G$WS(2,NONZ)      EQU  2@^@@@@G$WS(2,POS) FT
)@@G@@      EQU  2@^@@@@G$WS(2,NEG)       EQU  2@[@@@@.     @^@@@@. INVERSE FUFU
)@@G@@NCTIONS --  @[@@@@.     @ @@@@G$IV(2,ZERO)      EQU  NONZ   @ @@@@G$IV(2FV
)@@G@@,NONZ)      EQU  ZERO   @ @@@@G$IV(2,POS)       EQU  NEG    @ @@@@G$IV(2FW
)@@G@@,NEG)       EQU  POS    @[@@@@.     @A@@@@. OPCODES USED IN CODE GENERATFX
)@@G@@ION   @[@@@@.     @B@@@@G$FJ(2,ZERO,1)    EQU  050            . TZ@C@@@@FY
)@@G@@G$FJ(2,NONZ,1)    EQU  051            . TNZ     @B@@@@G$FJ(2,POS,1)     FZ
)@@G@@EQU  060            . TP@B@@@@G$FJ(2,NEG,1)     EQU  061            . TNGA
)@@G@@@[@@@@.     @E@@@@. PARAMETERS INDICATING HOW ABOVE OPCODES ARE TO BE USGB
)@@G@@ED--  @[@@@@.     @H@@@@G$KSF(2)          EQU  1              . KEYWORD GC
)@@G@@SUBFIELD IN CONDITION FIELD   @G@@@@G$FCF(2)          EQU  0            GD
)@@G@@  . FUNCT CODE FLAG (0 => USE G$FJ) @I@@@@G$ASF(2)          EQU  0      GE
)@@G@@        . AREG-SUBFIELD IN CONDITION FIELD (0=NONE    @C@@@@/. TABLES FOGF
)@@G@@R GENERATION OF TYPE 3 JUMPS, FORM: @ @@@@.         <AREG>,IS,<KEYWORD> GG
)@@G@@@[@@@@.     @#@@@@. KEYWORDS -----  @[@@@@.     @^@@@@EVEN              GH
)@@G@@EQU  5@^@@@@ODD               EQU  6@^@@@@DZERO             EQU  7@^@@@@GI
)@@G@@DNONZ             EQU  8@[@@@@.     @E@@@@. OTHER KWDS PREVIOUSLY DEFINEGJ
)@@G@@D, I.E. ZERO, NONZ, NEG, POS  @[@@@@.     @^@@@@. WAITING STATUS VALUES GK
)@@G@@@[@@@@.     @^@@@@G$WS(3,ZERO)      EQU  0@^@@@@G$WS(3,NONZ)      EQU  0GL
)@@G@@@^@@@@G$WS(3,POS)       EQU  0@^@@@@G$WS(3,NEG)       EQU  0@^@@@@G$WS(3GM
)@@G@@,EVEN)      EQU  0@^@@@@G$WS(3,ODD)       EQU  0@^@@@@G$WS(3,DZERO)     GN
)@@G@@EQU  1@^@@@@G$WS(3,DNONZ)     EQU  0@[@@@@.     @^@@@@. INVERSE FUNCTIONGO
)@@G@@S --  @[@@@@.     @ @@@@G$IV(3,ZERO)      EQU  NONZ   @ @@@@G$IV(3,NONZ)GP
)@@G@@      EQU  ZERO   @ @@@@G$IV(3,POS)       EQU  NEG    @ @@@@G$IV(3,NEG) GQ
)@@G@@      EQU  POS    @ @@@@G$IV(3,EVEN)      EQU  ODD    @ @@@@G$IV(3,ODD) GR
)@@G@@      EQU  EVEN   @ @@@@G$IV(3,DZERO)     EQU  DNONZ  @ @@@@G$IV(3,DNONZGS
)@@G@@)     EQU  DZERO  @[@@@@.     @A@@@@. OPCODES USED IN CODE GENERATION   GT
)@@G@@@[@@@@.     @C@@@@G$FJ(3,ZERO,1)    EQU  01             . JNZ     @B@@@@GU
)@@G@@G$FJ(3,NONZ,1)    EQU  00             . JZ@B@@@@G$FJ(3,POS,1)     EQU  0GV
)@@G@@3             . JN@B@@@@G$FJ(3,NEG,1)     EQU  02             . JP@B@@@@GW
)@@G@@G$FJ(3,EVEN,1)    EQU  011            . JB@C@@@@G$FJ(3,ODD,1)     EQU  0GX
)@@G@@10            . JNB     @E@@@@G$FJ(3,DZERO,1)   EQU  01636          . FJGY
)@@G@@ FOR DJZ INSTR    @I@@@@G$FJ(3,DNONZ,1)   EQU  01636          . SAME THIGZ
)@@G@@NG (WITH DIFFERENT WAIT STATUS)     @[@@@@.     @E@@@@. PARAMETERS INDICHA
)@@G@@ATING HOW ABOVE OPCODES ARE TO BE USED--  @[@@@@.     @H@@@@G$KSF(3)    HB
)@@G@@      EQU  3              . KEYWORD SUBFIELD IN CONDITION FIELD   @G@@@@HC
)@@G@@G$FCF(3)          EQU  074            . FUNCT CODE FLAG (0 => USE G$FJ) HD
)@@G@@@I@@@@G$ASF(3)          EQU  1              . AREG-SUBFIELD IN CONDITIONHE
)@@G@@ FIELD (0=NONE    @C@@@@/. TABLES FOR GENERATION OF TYPE 4 JUMPS, FORM: HF
)@@G@@@[@@@@.     @#@@@@.        <KEYWORD>@[@@@@.     @#@@@@. KEYWORDS ---    HG
)@@G@@@[@@@@.     @^@@@@OFLO              EQU  1@^@@@@NOFLO             EQU  2HH
)@@G@@@^@@@@CARRY             EQU  3@^@@@@NOCARY            EQU  4@[@@@@.     HI
)@@G@@@^@@@@. WAITING STATUS VALUES @[@@@@.     @^@@@@G$WS(4,OFLO)      EQU  0HJ
)@@G@@@^@@@@G$WS(4,NOFLO)     EQU  0@^@@@@G$WS(4,CARRY)     EQU  0@^@@@@G$WS(4HK
)@@G@@,NOCARY)    EQU  0@[@@@@.     @^@@@@. INVERSE FUNCTIONS --  @[@@@@.     HL
)@@G@@@ @@@@G$IV(4,OFLO)      EQU  NOFLO  @ @@@@G$IV(4,NOFLO)     EQU  OFLO   HM
)@@G@@@ @@@@G$IV(4,CARRY)     EQU  NOCARY @ @@@@G$IV(4,NOCARY)    EQU  CARRY  HN
)@@G@@@[@@@@.     @ @@@@. INSTRUCTION S   EQU  ENCES  @[@@@@.     @D@@@@G$FJ(4HO
)@@G@@,OFLO,1)    EQU  015            . JNO (J-FIELD) @B@@@@G$FJ(4,NOFLO,1)   HP
)@@G@@EQU  014            . JO@C@@@@G$FJ(4,CARRY,1)   EQU  017            . JNHQ
)@@G@@C     @B@@@@G$FJ(4,NOCARY,1)  EQU  016            . JC@[@@@@.     @E@@@@HR
)@@G@@. PARAMETERS INDICATING HOW ABOVE OPCODES ARE TO BE USED--  @[@@@@.     HS
)@@G@@@H@@@@G$KSF(4)          EQU  1              . KEYWORD SUBFIELD IN CONDITHT
)@@G@@ION FIELD   @G@@@@G$FCF(4)          EQU  074            . FUNCT CODE FLAHU
)@@G@@G (0 => USE G$FJ) @I@@@@G$ASF(4)          EQU  0              . AREG-SUBHV
)@@G@@FIELD IN CONDITION FIELD (0=NONE    @C@@@@/. TABLES FOR GENERATION OF TYHW
)@@G@@PE 5 JUMPS, FORM: @B@@@@.           <AREG>,IS,(POS/NEG),SHIFT     @[@@@@HX
)@@G@@.     @#@@@@. KEYWORDS ---    @[@@@@.     @^@@@@SHIFT             EQU  1HY
)@@G@@@[@@@@.     @#@@@@. WAITING STATUS--@[@@@@.     @^@@@@G$WS(5,POS)       HZ
)@@G@@EQU  0@^@@@@G$WS(5,NEG)       EQU  0@[@@@@.     @^@@@@. INVERSE FUNCTIONIA
)@@G@@S     @[@@@@.     @ @@@@G$IV(5,POS)       EQU  NEG    @ @@@@G$IV(5,NEG) IB
)@@G@@      EQU  POS    @[@@@@.     @A@@@@. J-VALUES OF OPCODES (F ALWAYS 072)IC
)@@G@@@[@@@@.     @C@@@@G$FJ(5,POS,1)     EQU  03             . JNS     @C@@@@ID
)@@G@@G$FJ(5,NEG,1)     EQU  02             . JPS     @[@@@@.     @E@@@@. PARAIE
)@@G@@METERS INDICATING HOW ABOVE OPCODES ARE TO BE USED--  @[@@@@.     @H@@@@IF
)@@G@@G$KSF(5)          EQU  3              . KEYWORD SUBFIELD IN CONDITION FIIG
)@@G@@ELD   @G@@@@G$FCF(5)          EQU  072            . FUNCT CODE FLAG (0 =IH
)@@G@@> USE G$FJ) @I@@@@G$ASF(5)          EQU  1              . AREG-SUBFIELD II
)@@G@@IN CONDITION FIELD (0=NONE    @F@@@@/. TABLES FOR GENERATION OF TYPE 6 TIJ
)@@G@@ESTS, (EXEC LEVEL ONLY), FORM:@D@@@@.              CHANNEL,<CHANNEL NUMBIK
)@@G@@ER>,<KEYWORD>     @[@@@@.     @#@@@@. KEYWORDS ---    @[@@@@.     @^@@@@IL
)@@G@@INBUSY            EQU  1@^@@@@INIDLE            EQU  2@^@@@@OUTBUSY     IM
)@@G@@      EQU  3@^@@@@OUTIDLE           EQU  4@^@@@@LOADED            EQU  5IN
)@@G@@@^@@@@EMPTY             EQU  6@[@@@@.     @#@@@@. WAITING STATUS  @[@@@@IO
)@@G@@.     @^@@@@G$WS(6,INBUSY)    EQU  1@^@@@@G$WS(6,INIDLE)    EQU  0@^@@@@IP
)@@G@@G$WS(6,OUTBUSY)   EQU  1@^@@@@G$WS(6,OUTIDLE)   EQU  0@^@@@@G$WS(6,LOADEIQ
)@@G@@D)    EQU  1@^@@@@G$WS(6,EMPTY)     EQU  0@[@@@@.     @^@@@@. INVERSE FUIR
)@@G@@NCTIONS     @[@@@@.     @ @@@@G$IV(6,INBUSY)    EQU  INIDLE @ @@@@G$IV(6IS
)@@G@@,INIDLE)    EQU  INBUSY @ @@@@G$IV(6,OUTBUSY)   EQU  OUTIDLE@ @@@@G$IV(6IT
)@@G@@,OUTIDLE)   EQU  OUTBUSY@ @@@@G$IV(6,LOADED)    EQU  EMPTY  @ @@@@G$IV(6IU
)@@G@@,EMPTY)     EQU  LOADED @[@@@@.     @C@@@@. FORCE USE OF APPROPRIATE VALIV
)@@G@@UE FOR A-FIELD    @[@@@@.     @[@@@@.     @F@@@@G$FJ(6,INBUSY,1)  EQU  0IW
)@@G@@1722          . FJ FOR JIC INSTRUCTION    @ @@@@G$FJ(6,INIDLE,1)  EQU  0IX
)@@G@@1722  @F@@@@G$FJ(6,OUTBUSY,1) EQU  01726          . FJ FOR JOC INSTRUCTIIY
)@@G@@ON    @ @@@@G$FJ(6,OUTIDLE,1) EQU  01726  @F@@@@G$FJ(6,LOADED,1)  EQU  0IZ
)@@G@@1732          . FJ FOR JFC INSTRUCTION    @ @@@@G$FJ(6,EMPTY,1)   EQU  0JA
)@@G@@1732  @[@@@@.     @E@@@@. PARAMETERS INDICATING HOW ABOVE OPCODES ARE TOJB
)@@G@@ BE USED ---@[@@@@.     @H@@@@G$KSF(6) EQU   3                      . KEJC
)@@G@@YWORD SUBFIELD IS THE THIRD ONE     @F@@@@G$FCF(6) EQU   077            JD
)@@G@@        . DUMMY TO FORCE USE OF G$FJ@F@@@@G$ASF(6) EQU   2              JE
)@@G@@        . A-FIELD IS SECOND SUBFIELD@[@@@@.     @E@@@@/. PROC DEFINITIONJF
)@@G@@, FLAG RESET FOR STRUCTURED PROC PACKAGE  @[@@@@.     @H@@@@G$LCTR(1) EQJG
)@@G@@U  2                      . DEFAULT LOCN CTR FOR INTERNAL STORAGE @H@@@@JH
)@@G@@G$DFLG  EQU    - 1                    . USE TO FORCE D-FLAGS FOR DIAGNOSJI
)@@G@@TICS  @I@@@@G$JXMA  EQUF   0,017,016              . FORM FOR MASKING OFFJJ
)@@G@@ ALL BUT JX IMMEDIAT    @H@@@@G$JMSK  EQUF   0,0,016                . FOJK
)@@G@@RM FOR TESTING IMMEDIATE J-VALUES   @H@@@@G$UMSK  EQUF   *0177777,*0    JL
)@@G@@        . FORM TO MASK OFF ALL BUT IMMEDIATE U  @G@@@@G$NOFO  FORM   36 JM
)@@G@@                    . FORM TO GET RID OF OTHER FORMS  @I@@@@G$$FJA  FORMJN
)@@G@@   6,8,4,2,16             . FORM FOR INSTRS USING JA FIELD (E.G. JGD    JO
)@@G@@@F@@@@G$$IMU    FORM    6,4,4,4,18          . FORM FOR IMMEDIATE U-SPECSJP
)@@G@@@[@@@@.     @H@@@@STRUC$DEF* PROC     *0,0              . IF @ASM, DEFINJQ
)@@G@@E THESE BY XPLICIT CALL @B@@@@          END                         .   JR
)@@G@@@[@@@@.     @I@@@@P       PROC   *2                     . PF'S : DBANK-LJS
)@@G@@OCNCTR,DISPLAY-OCTAL-FLAG     @E@@@@STRUC$* NAME                        JT
)@@G@@  . NORMAL ENTRY POINT  @G@@@@ DO 0=0=0 , STRUC$OMN                 . IFJU
)@@G@@ MASM, INCLUDE OMN IF NEEDED  @F@@@@ DO 0=0=1 , STRUC$DEF               JV
)@@G@@  . IF @ASM, READ IN HUGE DEF @E@@@@ DO P(1)>0 ,G$LCTR*(1) EQU P(1,1)   JW
)@@G@@  . SET DATA LOCN CTR   @[@@@@.     @B@@@@. USAGE OF OVERALL COUNTER ARRJX
)@@G@@AY G$CTR:   @[@@@@.     @E@@@@.       1 = COUNT OF TOTAL NO BLOX (ALL KIJY
)@@G@@NDS EXCEPT BEGIN) @A@@@@.       2 = GLOBAL ADDRESS FLOAT    @A@@@@.     JZ
)@@G@@  3 = ARG PUSHDOWN COUNTER    @C@@@@.       4 = COUNTER OF TOTAL NO CALLKA
)@@G@@S TO G$$TST @B@@@@.       5 = GLOBAL NESTING DEPTH COUNTER  @D@@@@.     KB
)@@G@@  6 = LOGICAL FOR GLOBAL PASS: TRUE ON PASS 1   @D@@@@.       7 = LOGICAKC
)@@G@@L FOR GLOBAL PASS: TRUE ON PASS 2   @[@@@@.     @D@@@@K DO     5 ,G$CTR*KD
)@@G@@(K) EQU 0           . CLEAR COUNTERS@[@@@@.     @G@@@@. NOW DEFINE SPECIKE
)@@G@@AL THINGS DEPENDENT UPON WHICH ASSEMBLER PASS THIS IS @[@@@@.     @G@@@@KF
)@@G@@G$CTR*(6) EQU 1-G$CTR(6)            . SET FLAG: ON IF ASSEMBLER PASS 1  KG
)@@G@@@D@@@@G$CTR*(7) EQU      1-G$CTR(6)       . ON IF PASS 2    @G@@@@ DO G$KH
)@@G@@CTR(7) , BRIEF                  . ON PASS 2, CLEAN UP THE LISTING @D@@@@KI
)@@G@@ DO G$CTR(7) , END                    . THEN GET OUT  @[@@@@.     @D@@@@KJ
)@@G@@. -------- PASS 1 ONLY BEYOND THIS POINT --------     @[@@@@.     @[@@@@KK
)@@G@@.     @E@@@@G$MASM*   EQU       0=0=0             . 0=>@ASM, 1=>@MASM   KL
)@@G@@@H@@@@ DO G$MASM=0 ,G$AMPR*    EQU      &(5)=-2 . TRUE IF RELOCATION FUNKM
)@@G@@C AVAILABLE @I@@@@ DO G$MASM=1 ,G$AMPR*   EQU       1     . IF MASM, WE KN
)@@G@@HAVE A RELOCATION FUNCTION    @[@@@@.     @F@@@@          G$$CLD        KO
)@@G@@              . DECLARE OUR 'CALL' PROC   @F@@@@ DO G$MASM , $INSERT ;  KP
)@@G@@              . IF @MASM, FORGET ABOUT... @E@@@@   'G$$CLD* $DELETE','STKQ
)@@G@@RUC$DEF* $DELETE' . SOME OLD PROCS  @E@@@@ DO G$UOM=1 , END    . STOP HEKR
)@@G@@RE IF NO NEED FOR DUMMY PROCS @F@@@@ DO (G$MASM=0)**(G$AMPR=1) , END    KS
)@@G@@  . IF UOM ASM, FORGET PROCS  @[@@@@.     @D@@@@P         PROC      *0,0KT
)@@G@@              . DUMMY PROCS   @#@@@@RESUME** NAME     @#@@@@BRIEF**  NAMKU
)@@G@@E     @G@@@@         END                          . END OF DUMMY INTERNAKV
)@@G@@L PROC DEFN @[@@@@.     @G@@@@          END                         . ENKW
)@@G@@D DEFN OF MASTER MAGIC PROC   @ @@@@/. ***** DIAGNOSTICS *****    @[@@@@KX
)@@G@@.     @[@@@@.     @A@@@@. FIELDS IN ERROR MESSAGE FORM ARE: @C@@@@.    FKY
)@@G@@IELD 1: TYPE OF CURRENTLY ACTIVE BLOCK    @E@@@@.             TYPES ARE KZ
)@@G@@1=>BEGIN, 2=>IF, 3=>CASE, 4=>REPEAT @A@@@@.          2: CURRENT NESTING LA
)@@G@@DEPTH @F@@@@.          3: MESSAGE CLASS (0=LOCN CTR, 1=SYNTAX, 2=STRUCTULB
)@@G@@RE)   @^@@@@.          4: ERROR TYPE@ @@@@.          5: ERROR SUBTYPE   LC
)@@G@@@[@@@@.     @F@@@@. LOCATION COUNTER ERRORS (MESSAGE CLASS=0) ARE SIGNALLD
)@@G@@LED WHEN    @E@@@@. SOME CODE PREVIOUS TO THE POINT OF THE MESSAGE GENERLE
)@@G@@ATES  @F@@@@. A DIFFERENT NUMBER OF INSTRUCTIONS ON ASSEMBLER PASSES ONELF
)@@G@@ AND  @F@@@@. TWO (ASSEMBLER D-FLAG). AT THE POINT OF DETECTION, STRUC$ LG
)@@G@@WILL  @F@@@@. ATTEMPT TO FORESTALL SPURIOUS ERRORS OF THIS TYPE IN THE CLH
)@@G@@ODE   @G@@@@. WHICH FOLLOWS BY FORCING THE LOCATION COUNTER TO WHAT IT BLI
)@@G@@ELIEVES     @F@@@@. THE CORRECT VALUE SHOULD BE. THE ERROR TYPE AND SUBTLJ
)@@G@@YPE FIELDS  @F@@@@. ARE INTERNAL SERIAL NUMBERS, AND HAVE NO SPECIAL SIGLK
)@@G@@NIFICANCE.  @[@@@@.     @G@@@@. FOR SYNTAX ERRORS (MESSAGE CLASS=1), ERRLL
)@@G@@OR TYPES AND SUBTYPES ARE:    @[@@@@.     @B@@@@.    1,X => ERROR IN SPELM
)@@G@@CIFICATION OF TEST@C@@@@.     ,01      UNRECOGNIZEABLE TYPE OF TEST     LN
)@@G@@@B@@@@.     ,02      UNRECOGNIZEABLE KEYWORD    @B@@@@.    2,X => ERROR LO
)@@G@@IN <VARY> SPECIFICATION @C@@@@.     ,01      OFFSET REQUIRES IMMEDIATE 'LP
)@@G@@BY'   @E@@@@.     ,02      LOOKFOR FORMAT REQUIRES 'BY' SPECIFICATION   LQ
)@@G@@@D@@@@.     ,03      REQUIRED FROM, TO, OR BY SPEC MISSING  @E@@@@.     LR
)@@G@@,04      LOOP CONTROL VARIABLE PASSES THROUGH ZERO    @E@@@@.     ,05   LS
)@@G@@   SIGN OF BY CONFLICTS WITH SIGN OF TO-FROM    @F@@@@.     ,06      EXPLT
)@@G@@LICIT SENSE (UP/DOWN) CONFLICTS WITH BY, TO-FROM@D@@@@.     ,07      REQLU
)@@G@@UIRED 'BY' SPECIFICATION NOT GIVEN  @C@@@@.     ,010     BAD KEYWORD FOLLV
)@@G@@LOWING 'LOOKFOR'  @G@@@@.     ,011     SPECIFIC LOOP INSTR CONFLICTS WITLW
)@@G@@H TO/FROM/BY/FOR SPEC   @ @@@@.    3,X => PARAMETER ERROR   @D@@@@.     LX
)@@G@@,01      CASEREGISTER NOT OVERLAPPED (A0-A3)    @D@@@@.     ,02      REQLY
)@@G@@UIRED REGISTER SPECIFICATION MISSING@D@@@@.     ,03      INCORRECT NUMBELZ
)@@G@@R OF FIELDS ON 'IF'     @D@@@@.     ,04      MISSING 'WHEN' ON ESCAPE STMA
)@@G@@ATEMENT     @F@@@@.     ,05      MINIMUM SPECIFIED CASE NOT ZERO (CALLINMB
)@@G@@G OPTION)   @F@@@@.     ,06      ALL CASE VALUES NOT SPECIFIED (CALLING MC
)@@G@@OPTION)     @[@@@@.     @F@@@@. FOR STRUCTURE ERRORS (MESSAGE CLASS=2) ,MD
)@@G@@ TYPES AND SUBTYPES ARE:@[@@@@.     @ @@@@.    1,X => NESTING ERROR     ME
)@@G@@@F@@@@.     ,01      TOO MANY OR TOO FEW END STATMENTS IN PREVIOUS BLOCKMF
)@@G@@@F@@@@.     ,02      MISSING END IN PREVIOUS BLOCK MAY CAUSE D-FLAGS    MG
)@@G@@@E@@@@.     ,03      STATEMENT CANNOT APPEAR IN CURRENT BLOCK TYPE@F@@@@MH
)@@G@@.              EITHER THE END STATEMENT FOR THE PREVIOUS BLOCK OR @G@@@@MI
)@@G@@.              THE START STATEMENT FOR THE CURRENT BLOCK IS MISSING     MJ
)@@G@@@D@@@@.    2,X => INCONSISTENT LOGIC (STATEMENTS OR FIELDS) @G@@@@.     MK
)@@G@@,01      ESCAPE INVALID IF BOTH WHILE/LOOKFOR AND UNTIL ARE GIVEN @E@@@@ML
)@@G@@.     ,02      OTHERWISE STMNT MEANINGLESS, NO ESCAPE GIVEN @F@@@@.     MM
)@@G@@,03      ATEND UNREACHABLE, NO TESTS APPEARED ON REPEAT     @F@@@@.     MN
)@@G@@,05      NOFIND CODE ILLEGAL WITH CALLING OPTION (CASE)     @C@@@@.     MO
)@@G@@,06      REMOTE CALL TO NON-REMOTE BLOCK  @ @@@@.    3,X => MISCELLANEOUMP
)@@G@@S     @E@@@@.     ,01      ATTEMPT TO CHANGE LOCATION COUNTERS WITHIN   MQ
)@@G@@@F@@@@.              A BLOCK. BLOCKS MUST BE WHOLLY CONTAINED WITHIN    MR
)@@G@@@F@@@@.              A SINGLE BANK. SWITCHING BETWEEN BANKS MUST BE     MS
)@@G@@@D@@@@.              ACCOMPLISHED VIA A SUBROUTINE CALL     @[@@@@.     MT
)@@G@@@#@@@@          DEF     @H@@@@G$ERFO    FORM      3,6,3,12,12     . A DIMU
)@@G@@STINCTIVE FORM FOR ERROR MESSAGES   @#@@@@P       PROC   *2 @[@@@@.     MV
)@@G@@@^@@@@G$$GFL*   NAME      2   @[@@@@.     @D@@@@. FORCE DEFINITION OF PRMW
)@@G@@OC NEEDED TO FORCE G-FLAGS    @[@@@@.     @#@@@@          PROC    @#@@@@MX
)@@G@@G$$FRG**  NAME    @]@@@@ GO G$$DIA  @#@@@@          END     @[@@@@.     MY
)@@G@@@C@@@@. NOW G-FLAG GENERATOR ACTUALLY DOES ITS THING  @[@@@@.     @F@@@@MZ
)@@G@@ GO G$$FRG          . LEAP TO OTHER PROC, WHICH LEAPS TO G$$DIA   @[@@@@NA
)@@G@@.     @[@@@@.     @I@@@@G$$IFL*  NAME       3                 . THIS ENTNB
)@@G@@RY FOR TRULY INVALID INSTRUCTION    @H@@@@          RES       1         NC
)@@G@@        . WHICH ACTUALLY TAKES SPACE IN THE CODE@C@@@@ GO G$$DIA        ND
)@@G@@  . GO DISPLAY THE MESSAGE    @[@@@@.     @E@@@@G$$EFL*  NAME       1   NE
)@@G@@              . GENERATE AN E-FLAG  @#@@@@A       EQU    +) @]@@@@ GO G$NF
)@@G@@$DIA  @[@@@@.     @^@@@@G$$DFL*  NAME       0   @E@@@@G$DFLG****        NG
)@@G@@              . GENERATE A GLOBAL D-FLAG  @B@@@@G$DFLG****          EQU NH
)@@G@@              0 . @G@@@@ DO P(1)>0 , RES P(1,1)-$             . THEN FORNI
)@@G@@CE LC BACK INTO PHASE   @]@@@@ GO G$$DIA  @[@@@@.     @E@@@@G$$TFL*  NAMNJ
)@@G@@E       4                 . GENERATE A T-FLAG   @A@@@@A       EQU    + (NK
)@@G@@I$ 0,0,0,0,077,0) @[@@@@.     @F@@@@. NOW WE GENERATE THE MESSAGES. TO ANL
)@@G@@VOID EXTRANEOUS D-FLAGS ON    @E@@@@. THE USER'S LISTING, NEGATIVE RES'SNM
)@@G@@ ARE USED TO INSURE THAT@F@@@@. THE MESSAGES DO NOT OCCUPY ANY SPACE IN NN
)@@G@@THE PROGRAM'S ADDRESS   @F@@@@. SPACE. TO INSURE THAT THE MESSAGE DOES NNO
)@@G@@OT GO UNNOTICED, WE     @G@@@@. TRASH ON THE LAST WORD OF GENERATED USERNP
)@@G@@ CODE, MAKING IT AN IOPR.     @[@@@@.     @E@@@@. TO AVOID SURPRESSION INQ
)@@G@@F BRIEF MODE IS ON, THE DIAGNOSTIC  @D@@@@. MESSAGE SENTINAL WORD IS THENR
)@@G@@ 1ST ONE GENERATED.     @[@@@@.     @G@@@@G$$DIA*   NAME                NS
)@@G@@        . DIAGNOSTIC PRINTOUT STARTS HERE @H@@@@          RES       -1  NT
)@@G@@              . GET RID OF USER'S LAST INSTRUCTION    @F@@@@K         EQNU
)@@G@@U       1+(P(0,0)=0)      . SPEC TO FIND FLAGS IN     @F@@@@M         EQNV
)@@G@@U       G$CTR(5)          . CURRENT NESTING LEVEL     @D@@@@          G$NW
)@@G@@ERFO    G$TYPE(M),M,P(0,0),P(K,1),P(K,2)  @#@@@@          UNLIST  @F@@@@NX
)@@G@@          G$$IFLAG                    . MARK THIS ELEMENT IN ERROR@G@@@@NY
)@@G@@          RES       -2                . PURGE SENTINAL AND IFLAG WORD   NZ
)@@G@@@H@@@@          +0                          . FORCE PROG TO IOPR IF ITS OA
)@@G@@EXECUTED    @#@@@@          LIST    @E@@@@          END                 OB
)@@G@@        . OF DIAGNOSTIC PROCS @[@@@@.     @E@@@@. THIS PROC DISPLAYS DEBOC
)@@G@@UGGING INFORMATION WITHOUT AFFECTING@F@@@@. THE GENERATED CODE. IT IS USOD
)@@G@@ED FOR DEBUGGING STRUC$ ITSELF.     @[@@@@.     @ @@@@P          PROC   OE
)@@G@@  *999,0    @#@@@@G$DBUG*    NAME   @B@@@@I(1)       EQU      I(1)+1    OF
)@@G@@        .   @^@@@@ DO P(I(1))=0 , END     @ @@@@ DO P(I(1))=1 , +P(I(1),OG
)@@G@@1)    @A@@@@ DO P(I(1))=2 , +P(I(1),1),P(I(1),2)@C@@@@ DO P(I(1))=3 , +POH
)@@G@@(I(1),1),P(I(1),2),P(I(1),3)  @E@@@@ DO P(I(1))=4 , +P(I(1),1),P(I(1),2)OI
)@@G@@,P(I(1),3),P(I(1),4)    @H@@@@ DO P(I(1))>4 , +P(I(1),1),P(I(1),2),P(I(1OJ
)@@G@@),3),P(I(1),4),P(I(1),5),P(I(1),6)  @^@@@@           RES      -1  @B@@@@OK
)@@G@@ DO I(1)<P , GO G$DBUG                  . @#@@@@           END    @C@@@@OL
)@@G@@/.    ******** PROGRAM DEFINITION GROUP ********@[@@@@.     @ @@@@. ARRAOM
)@@G@@Y USAGE BY BEGIN BLOCKS:@[@@@@.     @F@@@@.    G$LABL(K,1) ENTRY POINT TON
)@@G@@O BLOCK (=PKT ADDR IF CONTINGENCY)  @B@@@@.             2) EXIT POINT FROO
)@@G@@OM BLOCK    @E@@@@.             3) ADDR OF GENERATED REG SAVE AREA (IF AOP
)@@G@@NY)   @E@@@@.             4) ADDR OF SIGNAL CELL OR RETURN TARGET ADDR  OQ
)@@G@@@G@@@@.             5) ADDR OF BLOK EXIT INSTR (AFTER REG RESTORE INSTRSOR
)@@G@@)     @[@@@@.     @E@@@@.    G$FLAG(K,1) XREG USED FOR SIGNALLING, ZERO OS
)@@G@@IF NONE     @B@@@@.             2) NUMBER OF SAVED REGISTERS@C@@@@.     OT
)@@G@@        2,N) AXR$ VALUE OF N'TH SAVED REG @C@@@@.             3) BLOCK TOU
)@@G@@YPE (MAINPROG, ETC.)    @[@@@@.     @F@@@@.    G$BSEQ(<X>) BLOK SEQ NO (OV
)@@G@@I.E., K) WHERE <X> IS START ADDR    @[@@@@.     @C@@@@.               **OW
)@@G@@***************************** @C@@@@.               *                   OX
)@@G@@          * @C@@@@.               *           BEGIN             * @C@@@@OY
)@@G@@.               *                             * @C@@@@.               **OZ
)@@G@@***************************** @[@@@@.     @[@@@@.     @[@@@@.     @#@@@@PA
)@@G@@           DEF    @H@@@@F          FUNC                       . ----- UTPB
)@@G@@ILITY FUNC USED IN SORTING    @#@@@@G$$INC*    NAME   @D@@@@III*(1)    EPC
)@@G@@QU              III(1)+1  . BUMP COUNTER  @E@@@@           END          PD
)@@G@@    III(1)    . RETURN NEW VALUE    @[@@@@.     @[@@@@.     @#@@@@P     PE
)@@G@@  PROC   *3 @]@@@@BEGIN*  NAME@G@@@@ DO (G$CTR(5)=0)=0 , G$$GFL 1,1     PF
)@@G@@        . REQUIRE NESTING DEPTH ZERO@F@@@@M         EQU       1         PG
)@@G@@        . FORCE NEW NESTING DEPTH   @D@@@@G$CTR*(5) EQU  M              PH
)@@G@@        . THEN SAVE IT  @F@@@@ DO (G$CTR(2)=0)=0 , G$$GFL 1,2           PI
)@@G@@  . REQUIRE NO FLOAT    @[@@@@.     @F@@@@K         EQU       G$CTR(1)+1PJ
)@@G@@        . GET BLOCK SERIAL NUMBER   @D@@@@G$CTR*(1) EQU       K         PK
)@@G@@        . AND UPDATE IT @D@@@@G$TYPE*(M) EQU      1                 . SEPL
)@@G@@T BLOCK TYPE@E@@@@G$SEQN*(M) EQU      K                 . SAVE SERIAL NUPM
)@@G@@MBER  @F@@@@ DO G$MASM=0 ,G$BSEQ*($) EQU      K   . SERIAL # INDEXED BY PN
)@@G@@STARTA@G@@@@ DO G$MASM=1 ,G$BSEQ*($AP($)) EQU K   . SERIAL # INDEXED BY PO
)@@G@@STARTADR    @[@@@@.     @E@@@@T         EQU  P(1,1)+(P(1)=0)*MAINPROGRAMPP
)@@G@@ . GET PROG TYPE  @E@@@@G$FLAG*(K,3) EQU T                     . AND REMPQ
)@@G@@EMBER IT    @E@@@@ISSUB      EQU      (T=SUBROUTINE)++(T=LIJSUB)++(T=LDJPR
)@@G@@SUB)  @[@@@@.     @B@@@@. ALLOW 'NOSAVE' TO DEFAULT TO SUBFIELD 2 @[@@@@PS
)@@G@@.     @G@@@@NOSDEF    EQU       ISSUB**(P(1)=2)**(P(1,2)=NOSAVE) . NOSAVPT
)@@G@@E DEFAULT   @E@@@@ DO NOSDEF ,P(1,3) EQU NOSAVE         . FORCE THIRD FIPU
)@@G@@ELD   @D@@@@ DO NOSDEF ,P(1,2) EQU 0              . CLEAR REGISTER@G@@@@PV
)@@G@@ DO G$MASM=0 , DO NOSDEF ,P(1)   EQU 3 . NOW NOTE THERE ARE 3 SUBFIELDS PW
)@@G@@@[@@@@.     @E@@@@ DO G$CTR(7) , DO (G$LABL(K,1)=$)=0 , G$$DFL G$LABL(K,PX
)@@G@@1)    @E@@@@G$LABL*(K,1)  EQU   $           . SAVE ENTRY POINT TO BLOK  PY
)@@G@@@[@@@@.     @E@@@@          RES       G$CTR(6)          . ALLOW ZERO AS PZ
)@@G@@A FLAG@E@@@@G$CTR*(2) EQU       0-G$CTR(7)        . SET GLOBAL FLOAT    QA
)@@G@@@[@@@@.     @H@@@@ DO T=CYCLIC , END                 . SINCE CYCLICS NEVQB
)@@G@@ER EXIT, WE'RE DONE     @G@@@@ DO T=CONTINGENCY , +0D               . IFQC
)@@G@@ CONTING, GENERATE PACKET     @[@@@@.     @G@@@@.              HANDLE EXQD
)@@G@@ITS WHICH SIGNAL THE EXEC (MAIN/CONTINGENCY)    @[@@@@.     @F@@@@GI    QE
)@@G@@  EQU    (P(1,1)=SIGNAL)+2*(P(2,1)=SIGNAL)+3*(P(3,1)=SIGNAL)@F@@@@. SIGNQF
)@@G@@AL XREG IS FLAG, IF NONE (<0), THEN EXIT WILL BE 'NORMAL'   @G@@@@G$FLAGQG
)@@G@@*(K,1) EQU (GI>0)*(P(1,2)+(P(1)<2)*A0)-(GI=0) . SET SIGNAL XREG   @F@@@@QH
)@@G@@ DO (T=REMOTESUB)=0                     ; IF NOT A REMOTE SUB     @F@@@@QI
)@@G@@   ,G$LABL*(K,4) EQU                  ; DEFAULT RETURN JUMPTARGET @G@@@@QJ
)@@G@@      (T=CONTINGENCY)*G$LABL(K,1)-ISSUB . TO PACKET OR -1 FLAG VALUE    QK
)@@G@@@G@@@@ DO (T=EXECSUB)**(P(1)=1)             ; IF EXECSUB BUT NO RETURN AQL
)@@G@@DDR   @F@@@@   ,P(1,2) EQU DISP                   . FORCE STD RETURN ADDQM
)@@G@@R     @G@@@@ DO T=EXECSUB ,G$LABL*(K,4) EQU P(1,2) . JUMPTARGET FOR EXECQN
)@@G@@ ROUTINES   @G@@@@ DO GI>0 , DO P(GI)>1 ,G$LABL*(K,4) EQU ;  UNLESS USERQO
)@@G@@ PROVIDED A USPEC @G@@@@        +      (I$ 0,P(GI,4),,P(GI,3),2*P(GI,*3)QP
)@@G@@+P(GI,*2),P(GI,2) )     @[@@@@.     @C@@@@.              HANDLE REGISTERQQ
)@@G@@ SAVE REQUESTS    @[@@@@.     @F@@@@ DO ISSUB**(P(1,2)=0) ,P(1,2) EQU X1QR
)@@G@@1 . DEFAULT LINKREG TO X11    @H@@@@SII     EQU    ((P(1,1)=STACK)++(P(1QS
)@@G@@,1)=SAVE))+; FIND REG SAVE CONTROL FIELD  @G@@@@2*((P(2,1)=STACK)++(P(2,QT
)@@G@@1)=SAVE))+3*((P(3,1)=STACK)++(P(3,1)=SAVE))     @F@@@@SI      EQU    SIIQU
)@@G@@+(SII=0)*ISSUB      . IF NONE**SUBROUTINE, SET 1@E@@@@ DO SI=0 ,  END   QV
)@@G@@                    . IF NONE, WE'RE DONE @[@@@@.     @H@@@@ST      EQU QW
)@@G@@   P(SI,1)                . ELSE GET TYPE (SAVE/STACK/SUBRTNE)    @H@@@@QX
)@@G@@ DO ISSUB=0                           ; IF NOT A SUBROUTINE TO START WITQY
)@@G@@H     @G@@@@    ,P(1,3) EQU NOSAVE                . OBVIOUSLY NO LINKREGQZ
)@@G@@ TO BE SAVED@D@@@@I DO 3 ,Q(I) EQU P(I)                 . COPY LEAVES   RA
)@@G@@@G@@@@NOLINK    EQU       P(1,3)=NOSAVE     . ON=> INHIBIT SAVE OF LINKRRB
)@@G@@EG    @G@@@@ DO NOLINK ,P(1,2) EQU -P(1,2)        . IF NOT SAVING, JUST RC
)@@G@@REMEMBER IT @G@@@@ DO NOLINK ,Q(1) EQU +2               . AND FORCE THE RD
)@@G@@NOSAVE SPEC AWAY  @H@@@@KLX     EQU    Q(SI)-2*(ST=STACK)     . INDEX OFRE
)@@G@@ LAST REG TO EXPLICITLY SAVE  @H@@@@I DO KLX ,RSAV(P(SI,I+1)**0777777) ERF
)@@G@@QU 1 . MARK ALL REGS REQUESTED EXPLICITLY @H@@@@III(1)     EQU      1   RG
)@@G@@    . INIT INCREMENTATION CTR: 1ST SUBFIELD WILL BE 2 @F@@@@I DO 128 , DRH
)@@G@@O RSAV(I) ,P(SI,G$$INC(1)) EQU I . SORT EXPLICIT REGS @H@@@@ DO KLX<Q(SIRI
)@@G@@) , DO (P(SI,KLX+1)=POINTER)=0 , G$$EFL 3,2 . REQUIRE REG SPEC    @H@@@@RJ
)@@G@@SEX        EQU      (ST=SUBROUTINE)++(ST=LIJSUB)++(ST=LDJSUB)=0 . ON IF RK
)@@G@@SAVE G@H@@@@SLI        EQU      ISSUB             . ON IF LINKREG SHOULDRL
)@@G@@ BE REMEMBERED    @G@@@@ DO SEX**SLI ,P(SI,KLX+1) EQU P(1,2)  . FORCE LIRM
)@@G@@NKREG INTO SAVE LIST    @G@@@@KLR     EQU    KLX+(SEX**SLI)         . INRN
)@@G@@DEX OF LAST REG TO REMEMBER   @H@@@@I DO     KLR-1 ,G$FLAG*(K,2,I) EQU +RO
)@@G@@P(SI,I+1) . REMEMBER WHATS BEING SAVED    @I@@@@KL        EQU       KLR-RP
)@@G@@(NOLINK*(1-(T=EXECSUB))) . NUMBER TO ACTUALLY PUT IN COR    @I@@@@I DO KRQ
)@@G@@L-1 ,FNC(I) EQU 1+5*(G$FLAG(K,2,I)<A0)+3*(G$FLAG(K,2,I)>A15) . SA, SX, SRR
)@@G@@R     @G@@@@I DO KL-1 ,AFL(I) EQU G$FLAG(K,2,I)-A0*(FNC(I)=1)-(R1-1)*(FNRS
)@@G@@C(I)=4)     @H@@@@I DO KL-1 , DO FNC(I)=1 ,FNC(I) EQU (FNC(I-1)<071)* ; RT
)@@G@@FOR SINGLE STORE A'S    @F@@@@  (070*(AFL(I+1)=AFL(I)+1)+1) . DOUBLE STORU
)@@G@@RE CONTIGUOUS AREGS     @G@@@@ DO ST=STACK , GO G$$B10              . IFRV
)@@G@@ STACKING, GO DO SPECIAL STUFF@G@@@@ DO G$MASM=0 ,IC      EQU    &      RW
)@@G@@  . PRESERVE USER'S LOCATION COUNTER@G@@@@ DO G$MASM=1 ,IC      EQU    $RX
)@@G@@LCN     . IC IS CURRENT LOCATION COUNTER  @F@@@@$(G$LCTR(1))            RY
)@@G@@              . AND ESTABLISH OUR OWN     @G@@@@ DO G$MASM=0 , DO (&=IC)RZ
)@@G@@**(KL>1) , J $+KL    . IF =, LEAP AROUND THE RES@G@@@@ DO G$MASM=1 , DO SA
)@@G@@($LCN=IC)**(KL>1) , J $+KL . IF =, LEAP AROUND THE RES@G@@@@G$LABL*(K,3)SB
)@@G@@ EQU    $                 . START OF REG SAVE AREA (IF ANY) @E@@@@      SC
)@@G@@       RES    KL-1              . SET ASIDE SAVE SPACE@E@@@@$(IC)       SD
)@@G@@                          . RESTORE USER'S IC   @H@@@@I DO KL-1 , DO FNCSE
)@@G@@(I)>0 , I$ FNC(I),012*(FNC(I)=071),AFL(I),,,G$LABL(K,3)+I-1 @G@@@@ DO 1 SF
)@@G@@, END                           . IF NOT STACKING, WE'RE DONE     @[@@@@SG
)@@G@@.     @E@@@@G$$B10* NAME                          . HANDLE STACKING HERESH
)@@G@@@F@@@@OI      EQU    P(SI+1,1)=OFFSET       . ON IF OFFSET SPECIFIED    SI
)@@G@@@H@@@@AI      EQU    P(SI,*KLX+2)           . ON TO AUTO-INCREMENT STACKSJ
)@@G@@ POINTER    @G@@@@OSV     EQU    + (I$ 0,OI*P(SI+1,3),0,P(SI,KLX+2),2*AISK
)@@G@@,OI*P(SI+1,2))    @C@@@@I DO  KL-1 , S G$FLAG(K,2,I),OSV+(1-AI)*(I-1)   SL
)@@G@@@F@@@@G$LABL*(K,3) EQU 0-OSV                  . REMEMBER OFFSET FLAGS   SM
)@@G@@@]@@@@        END @[@@@@.     @[@@@@.     @C@@@@.               ********SN
)@@G@@*********************** @C@@@@.               *                         SO
)@@G@@    * @C@@@@.               *          ENDBEG             * @C@@@@.     SP
)@@G@@          *                             * @C@@@@.               ********SQ
)@@G@@*********************** @[@@@@.     @[@@@@.     @#@@@@P       PROC   *1 SR
)@@G@@@#@@@@ENDBEG*  NAME     @G@@@@M         EQU       G$CTR(5)          . GESS
)@@G@@T NESTING LEVEL OF THIS BLOCK @H@@@@K         EQU       G$SEQN(M)       ST
)@@G@@  . GET OVERALL BLOCK SEQUENCE NUMBER     @F@@@@ DO (M=1)=0 , G$$GFL 1,1SU
)@@G@@         . BE SURE NESTING LEVEL IS OK    @D@@@@ DO (G$TYPE(M)=1)=0 , G$SV
)@@G@@$GFL 1,3 . AND BLOCK TYPE     @I@@@@G$CTR*(5) EQU       0               SW
)@@G@@  . FORCE NESTING LEVEL FOR SUBSEQUENT CODE     @F@@@@ DO (G$CTR(2)=(0-GSX
)@@G@@$CTR(7)))=0 , G$$GFL 1,2 . DIAGNOSE BAD FLOAT   @E@@@@G$CTR*(2) EQU     SY
)@@G@@  0                 . AND FORCE IT CORRECT@E@@@@T         EQU       G$FLSZ
)@@G@@AG(K,3)       . GET BEGIN BLOCK TYPE@[@@@@.     @E@@@@          RES     TA
)@@G@@  0-G$CTR(6)        . FIXUP FOR FLAGS     @E@@@@ DO G$CTR(7) , DO (G$LABTB
)@@G@@L(K,2)=$)=0 , G$$DFL G$LABL(K,2)    @D@@@@G$LABL*(K,2)  EQU   $         TC
)@@G@@  . MARK END OF BLOCK   @[@@@@.     @F@@@@ DO T=CYCLIC , I$ 074,04,,,,G$TD
)@@G@@LABL(K,1) . IF CYCLIC, LOOP BACK    @D@@@@ DO T=CYCLIC , END            TE
)@@G@@     . AND THAT'S ALL   @[@@@@.     @B@@@@. IF ANY REGS WERE SAVED, RESTTF
)@@G@@ORE THEM    @[@@@@.     @ @@@@ DO G$FLAG(K,2)=0 , GO G$$X01 @H@@@@NRR   TG
)@@G@@  EQU    +G$FLAG(K,2)              . GET NO OF REGISTERS REMEMBERED     TH
)@@G@@@G@@@@LINK(1)   EQU       G$FLAG(K,2,NRR)   . LINK IS ALWAYS THE LAST ONTI
)@@G@@E     @H@@@@NR        EQU       NRR-(LINK(1)<0)   . FUDGE IN CASE WE DIDTJ
)@@G@@N'T SAVE LINK     @G@@@@ DO NRR>NR ,LINK(1) EQU -LINK(1)      . THEN GETTK
)@@G@@ REAL VALUE OF LINK     @G@@@@I DO NR ,FNC(I) EQU 010+017*(G$FLAG(K,2,I)TL
)@@G@@<A0)+013*(G$FLAG(K,2,I)>A15)  @G@@@@I DO NR ,AFL(I) EQU G$FLAG(K,2,I)-A0TM
)@@G@@*(FNC(I)=010)-(R1-1)*(FNC(I)=023)   @H@@@@I DO NR , DO FNC(I)=010 ,FNC(ITN
)@@G@@) EQU (FNC(I-1)<071)* ; FOR SINGLE LOAD A'S     @F@@@@  (061*(AFL(I+1)=ATO
)@@G@@FL(I)+1)+010) . DOUBLE LOAD CONTIGUOUS AREGS    @G@@@@ DO G$MASM=0 ,SR  TP
)@@G@@    EQU    0-G$LABL(K,3) . GET STACKREG/SAVE FLAG     @G@@@@ DO G$MASM=1TQ
)@@G@@ ,SR      EQU    $AP(0-G$LABL(K,3)) . GET STACKREG/SAVE FLAG@ @@@@ DO (STR
)@@G@@R>0)=0 ,I DO NR , ;     @G@@@@  DO FNC(I)>0 , I$ FNC(I),013*(FNC(I)=071)TS
)@@G@@,AFL(I),,,G$LABL(K,3)+I-1     @F@@@@ DO (SR>0)=0 , GO G$$X01            TT
)@@G@@  . IF NOT STACKED, WE'RE DONE@#@@@@. HANDLE STACKING @F@@@@INC     EQU TU
)@@G@@   SR**0400000            . ISOLATE AUTO-INCREMENT BIT@F@@@@XSR     EQU TV
)@@G@@   (017000000**SR)*/4     . MOVE XREG INTO AREG FIELD @F@@@@ DO INC>0 , TW
)@@G@@ANX,U 0,NR+(017000000**SR)*/4 . BACK UP STACK POINTER @F@@@@I DO     NR TX
)@@G@@, L G$FLAG(K,2,I),(SR**007777177777)+I-1 . AND UNSTACK@F@@@@G$$X01* NAMETY
)@@G@@                          . END OF REG RESTORATION    @[@@@@.     @F@@@@TZ
)@@G@@G$LABL*(K,5)  EQU   $                 . MARK POSN OF EXIT INSTR   @F@@@@UA
)@@G@@ DO T=LIJSUB , I$ 07,013,LINK(1),LINK(1),,0 . LIJ LINK,0,LINK     @F@@@@UB
)@@G@@ DO T=LDJSUB , I$ 07,012,LINK(1),LINK(1),,0 . LDJ LINK,0,LINK     @ @@@@UC
)@@G@@ DO T=SUBROUTINE , J 0,LINK(1)@C@@@@ DO (T=EXECSUB)++(T=REMOTESUB) , J GUD
)@@G@@$LABL(K,4)  @F@@@@ DO $>G$LABL(K,5) , END               . QUIT IF ANY OFUE
)@@G@@ THE ABOVE  @[@@@@.     @B@@@@. PROCESS MAINPROGS AND CONTINGENCIES     UF
)@@G@@@[@@@@.     @G@@@@XREG    EQU    G$FLAG(K,1)            . GET EXIT TYPE UG
)@@G@@(NORMAL OR SIGNAL)@G@@@@ DO XREG>0 , GO G$$X02                . IF EXCEPUH
)@@G@@TION, GO PROCESS IT     @G@@@@ DO T=MAINPROGRAM , ER EXIT$          . NOUI
)@@G@@RMAL MAINPROGRAM EXIT IS EXIT$@E@@@@ DO T=CONTINGENCY , SZ,H1 G$LABL(K,4UJ
)@@G@@) . CLEAR PACKET UPPER  @F@@@@ DO T=CONTINGENCY , I$ 074,04,,,1,G$LABL(KUK
)@@G@@,4) . AND JUMP THRU PKT @G@@@@ DO 1 , END                           . THUL
)@@G@@AT'S ALL FOR NORMAL EXITS     @H@@@@G$$X02* NAME                        UM
)@@G@@  . HERE TO HANDLE EXITS WITH SIGNALLING  @F@@@@ DO T=CONTINGENCY , I$ 0UN
)@@G@@51,H1,,,,G$LABL(K,4) . IS UPPER (H1) ZERO @G@@@@ DO T=CONTINGENCY , I$ 0UO
)@@G@@74,04,,,1,G$LABL(K,4) . YES, EXIT THRU PACKET   @I@@@@ DO G$MASM=0 , DO UP
)@@G@@(G$LABL(K,4)<0)=0 , LX XREG,G$LABL(K,4) . LOAD FROM SIGNALLOC     @I@@@@UQ
)@@G@@ DO G$MASM , DO $AP(G$LABL(K,4))>=0 , LX XREG,G$LABL(K,4) . LOAD FROM SIUR
)@@G@@GNALLOC     @F@@@@        I$     074,04,,XREG,,$+1      . JUMP INTO FOLLUS
)@@G@@OWING TABLE @C@@@@        ER     011                    . 0=EXIT$ @C@@@@UT
)@@G@@        ER     040                    . 1=ERR$  @C@@@@        ER     026UU
)@@G@@                    . 2=EABT$ @C@@@@        ER     012                  UV
)@@G@@  . 3=ABORT$@]@@@@        END @[@@@@.     @[@@@@.     @C@@@@.           UW
)@@G@@    ******************************* @C@@@@.               *             UX
)@@G@@                * @C@@@@.               *         SWITCHTO            * UY
)@@G@@@C@@@@.               *                             * @C@@@@.           UZ
)@@G@@    ******************************* @[@@@@.     @[@@@@.     @#@@@@P     VA
)@@G@@  PROC   *1 @#@@@@SWITCHTO*  NAME   @[@@@@.     @D@@@@. NOTE: THIS FEATUVB
)@@G@@RE IS NO LONGER AVAILABLE BECAUSE OF@E@@@@. OPTIMIZATION TECHNIQUES FOR VC
)@@G@@THE OBJECT CODE. ANY BLOCK    @E@@@@. MUST BE WHOLLY GENERATED UNDER A SVD
)@@G@@INGLE LOCATION COUNTER. @F@@@@. CONTINGENCY PROCESSING IN A SEPERATE BANVE
)@@G@@K MUST BE ACCOMPLISHED  @D@@@@. BY MEANS OF A SUBROUTINE CALL TO THE OTHVF
)@@G@@ER BANK.    @[@@@@.     @I@@@@          RES       1                 . SPVG
)@@G@@ACE SO DIAGNOSTIC DOESN'T CREAM OLD US    @D@@@@          G$$GFL    3,1 VH
)@@G@@              . GIVE A WARNING@H@@@@          RES       -1              VI
)@@G@@  . ZAP THE IOPR SO THE PROGRAM WORKS     @G@@@@. NOTE THAT WE SIMPLY IGVJ
)@@G@@NORE THE REQUEST FOR A LOCATION COUNTER CHANGE  @]@@@@        END @[@@@@VK
)@@G@@.     @[@@@@.     @C@@@@.               ******************************* VL
)@@G@@@C@@@@.               *                             * @C@@@@.           VM
)@@G@@    *           BASE              * @C@@@@.               *             VN
)@@G@@                * @C@@@@.               ******************************* VO
)@@G@@@[@@@@.     @[@@@@.     @H@@@@P          PROC     *1                .  SVP
)@@G@@PECS:  IBANK\DBANK(,<USPEC FOR BDI>)@E@@@@BASE*      NAME               VQ
)@@G@@        . MAKE A BANK VISIBLE @F@@@@XREG       EQU      P(0,1)+X11*(P(0,VR
)@@G@@1)=0) . XREG USED FOR LINKAGE @E@@@@. THE FOLLOWING THREE LINES ARE COURVS
)@@G@@TESY OF ISAAC BORNSTEIN.@E@@@@. THEY FIX A BUG INVOLVING THE LOAD OF THEVT
)@@G@@ BDI (LXI,LDJ)    @F@@@@          DO P(1)<2 , GO NOLXI . IF ONLY 1 PARAMVU
)@@G@@, NO LXI IS NEEDED@H@@@@ DO P(1,4)<016 , I$ 046,P(1,4),XREG,P(1,3),2*P(1VV
)@@G@@,*3)+P(1,*2),P(1,2) . LXI BDI @G@@@@ DO P(1,4)>015 , G$$IMU 046,P(1,4),XVW
)@@G@@REG,P(1,3),P(1,2) . LXI,U/XU BDI    @^@@@@NOLXI     NAME      .   @F@@@@VX
)@@G@@           I$       07,012+(P(1,1)=IBANK),XREG,,,$+1 . DO LIJ/LDJ @#@@@@VY
)@@G@@           END    @[@@@@.     @[@@@@.     @C@@@@.               ********VZ
)@@G@@*********************** @C@@@@.               *                         WA
)@@G@@    * @C@@@@.               *            CALL             * @C@@@@.     WB
)@@G@@          *                             * @C@@@@.               ********WC
)@@G@@*********************** @[@@@@.     @[@@@@.     @G@@@@          PROC    WD
)@@G@@  *0                . PROC TO DECLARE THE 'CALL' PROC @E@@@@. PREVENTS RWE
)@@G@@LIB$ ENTRY POINT CONFLICTS WITH COBOL'S 'CALL'  @[@@@@.     @B@@@@G$$CLDWF
)@@G@@*   NAME                        .   @[@@@@.     @#@@@@P       PROC   *2 WG
)@@G@@@B@@@@CALL*** NAME                          .   @G@@@@RAD(1)    EQU     WH
)@@G@@  +(0,-1)           . ASSUME NOT CALLING RMT BLOK     @F@@@@P11       EQWI
)@@G@@U       P(1,1)            . P11 IS ADDRESS OF TARGET  @G@@@@ DO G$MASM=1WJ
)@@G@@ ,P11 EQU $AP(P11)        . IF MASM, USE ONLY ABSOLUTE PART @E@@@@ DO P(WK
)@@G@@1)=1                            ; IF ONLY ONE FIELD   @E@@@@   , DO P11<WL
)@@G@@0400000                   ; AND IT ISN'T EQUF'D @E@@@@      ,RAD(1) EQU WM
)@@G@@P11                 . GET ITS ACTUAL ADDR @F@@@@K          EQU      G$BSWN
)@@G@@EQ(RAD(1))    . GET SEQUENCE NO OF BLOK   @G@@@@ DO K>0                 WO
)@@G@@              ; IF BLOCK HAS BEEN PROCESSED...  @E@@@@   , DO G$FLAG(K,3WP
)@@G@@)=REMOTESUB         ; AND IT'S REMOTE     @F@@@@      , GO G$$CL1       WQ
)@@G@@              . GO TREAT IT SPECIALLY     @[@@@@.     @F@@@@XREG    EQU WR
)@@G@@   P(0,1)+(P(0,1)=0)*X11  . DEFAULT LINKREG TO X11    @G@@@@BANKSW     EWS
)@@G@@QU      P(2,1)=BASING     . ON IF WE SHOULD SWITCH BANKS    @G@@@@K DO PWT
)@@G@@(2)*(1-BANKSW) , SZ P(2,K) . CLEAR ALT EXIT SENTINALS, IF ANY     @E@@@@WU
)@@G@@. THE FOLLOWING THREE LINES ARE COURTESY OF ISAAC BORNSTEIN.@E@@@@. THEYWV
)@@G@@ FIX A BUG INVOLVING THE LOAD OF THE BDI (LXI,LDJ)    @I@@@@          DOWW
)@@G@@ 1-(BANKSW**(P(2)>2)) , GO NOLXI . IF ONLY 1 PARAM, NO LXI IS NEEDED    WX
)@@G@@@H@@@@ DO P(2,5)<016 , I$ 046,P(2,5),XREG,P(2,4),2*P(2,*4)+P(2,*3),P(2,3WY
)@@G@@) . LXI BDI @G@@@@ DO P(2,5)>015 , G$$IMU 046,P(2,5),XREG,P(2,4),P(2,3) WZ
)@@G@@. LXI,U/XU BDI    @^@@@@NOLXI     NAME      .   @D@@@@FUN        EQU    XA
)@@G@@  074-BANKSW*065    . LMJ OR LIJ/LDJ@H@@@@JAY        EQU      013-BANKSWXB
)@@G@@*(P(2,2)=DBANK) . 013 UNLESS LDJ (THEN 012)     @F@@@@           I$     XC
)@@G@@  FUN,JAY,XREG,P(1,2),2*P(1,*2)+P(1,*1),P(1,1) .@I@@@@K DO     P(2)*(1-BXD
)@@G@@ANKSW) , SX XREG,P(2,K)        . SET ALT EXIT SENTINALS, IF ANY   @]@@@@XE
)@@G@@ DO 1 , END @[@@@@.     @G@@@@G$$CL1***  NAME                       . HEXF
)@@G@@RE FOR CALLS TO REMOTE BLOX   @F@@@@           J        P(1,1)          XG
)@@G@@  . FLYING LEAP TO THE BLOCK  @F@@@@           G$$PRB   K,$             XH
)@@G@@  . PATCH ITS RETURN ADDR     @H@@@@          END                       XI
)@@G@@  . END OF THE ACTUAL 'CALL' PROC DEFN    @G@@@@          END           XJ
)@@G@@              . END OF PROC WHICH DEFINES 'CALL'@C@@@@/.           *****XK
)@@G@@*    IF   GROUP    *******    @[@@@@.     @ @@@@. USE OF LABELS AND FLAGXL
)@@G@@S --  @[@@@@.     @[@@@@.     @B@@@@.       G$FLAG(K,1) EXPLICIT NOT FLAXM
)@@G@@G     @E@@@@.                2) SIDE EFFECT AND 'IF' TEST INVERSION FLAGXN
)@@G@@@B@@@@.                3) IMPLIED LINEITEM FLAG @D@@@@.                4XO
)@@G@@) FLOAT ADJUSTMENT CAUSED BY 'ELSE' @F@@@@.                5) FLOAT CAUSXP
)@@G@@ED BY OPTIMIZATION OF 'IF' TEST     @B@@@@.                6) COMPLEX COXQ
)@@G@@NDITION FLAG@[@@@@.     @C@@@@.       G$LABL(K,1) START ADDR OF TESTS ATXR
)@@G@@ 'IF' @E@@@@.                2) START ADDR OF USER CODE IN 'IF' BLOCK   XS
)@@G@@@D@@@@.                3) END ADDR OF CODE IN 'IF' BLOCK    @D@@@@.     XT
)@@G@@           4) START ADDR OF CODE IN 'ELSE' BLOCK@D@@@@.                5XU
)@@G@@) TARGET ADDR FOR EXIT FROM BLOCK   @[@@@@.     @C@@@@.               **XV
)@@G@@***************************** @C@@@@.               *                   XW
)@@G@@          * @C@@@@.               *            IF               * @C@@@@XX
)@@G@@.               *                             * @C@@@@.               **XY
)@@G@@***************************** @[@@@@.     @#@@@@P       PROC   *6 @]@@@@XZ
)@@G@@IF*     NAME@[@@@@.     @H@@@@LOOF      EQU       (P(1)=1)**(P(1,1)=LOOKYA
)@@G@@FOR) . CHECK FOR TABLE SEARCH FORMAT@^@@@@ DO LOOF , GO G$$I05    @[@@@@YB
)@@G@@.     @E@@@@. ANALYZE SYNTAX SO WE KNOW IF THIS IS LINEITEM OR A BLOCK  YC
)@@G@@@[@@@@.     @#@@@@L       EQU    P-1@B@@@@L1      EQU    (P(L)=1)**(P(L,YD
)@@G@@1)=THEN)    @B@@@@L2      EQU    (P(L-1)=1)**(P(L-1,1)=THEN)@E@@@@FLT   YE
)@@G@@  EQU    L1*L+L2*(L-1)  . FIELD OF 'THEN' OR ZERO     @E@@@@THF     EQU YF
)@@G@@   FLT+(FLT=0)*P  . IF NOT GIVEN, ASSUME IT     @F@@@@IFNOT     EQU     YG
)@@G@@  (P(1)=1)**(P(1,1)=NOT) . SET EXPLICIT NOT FLAG@G@@@@ DO (THF=IFNOT+2)+YH
)@@G@@+(THF=IFNOT+4)=0 , G$$EFL 3,3 . CHECK NO OF FIELDS    @F@@@@CXF       EQYI
)@@G@@U       THF=IFNOT+4     . SET COMPLEX CONDITION FLAG  @E@@@@ DO P<THF+2 YJ
)@@G@@, GO G$$I05               . GO DO NORMAL FORMAT @[@@@@.     @G@@@@. LINEYK
)@@G@@ITEM FORMAT DOES NOT UPDATE NESTING ARRAYS- GETS SPECIAL HANDLING @[@@@@YL
)@@G@@.     @E@@@@          G$$TST    1+IFNOT,CXF,IFNOT . GENERATE THE TEST   YM
)@@G@@@E@@@@          +P(THF+1,1)                 . THEN THE LINEITEM   @A@@@@YN
)@@G@@   DO 1 , END       . AND THEN QUIT @[@@@@.     @B@@@@. PROCESS NORMAL (YO
)@@G@@NOT LINEITEM) IF --     @[@@@@.     @#@@@@G$$I05*   NAME    @H@@@@K     YP
)@@G@@    EQU       G$CTR(1)+1        . GET BLOCK SEQUENCE NO FOR THIS BLOCK  YQ
)@@G@@@F@@@@G$CTR*(1) EQU       K                 . AND UPDATE BLOCK COUNTER  YR
)@@G@@@G@@@@G$CTR*(5) EQU       G$CTR(5)+1        . BUMP CURRENT BLOCK NESTINGYS
)@@G@@ LEVEL@G@@@@M         EQU       G$CTR(5)          . GET NESTING LEVEL OFYT
)@@G@@ THIS BLOCK @G@@@@G$TYPE*(M)          EQU               2 . SET CURRENT YU
)@@G@@BLOCKTYPE TO IF   @H@@@@G$SEQN*(M)          EQU               K . AND REYV
)@@G@@MEMBER ITS SEQUENCE NUMBER    @[@@@@.     @ @@@@. ADJUST ALL LABELS FOR YW
)@@G@@FLOAT @[@@@@.     @D@@@@G$LABL*(K,1) EQU G$LABL(K,1)+G$CTR(2) . GLOBAL FYX
)@@G@@LOAT  @E@@@@G$CTR*(2) EQU       G$CTR(2)+G$FLAG(K,5) . APPLY 'IF' FLOAT YY
)@@G@@@F@@@@N DO 2 ,G$LABL*(K,N+1) EQU G$LABL(K,N+1)+G$CTR(2) . GLOBAL+IF     YZ
)@@G@@@F@@@@N DO 2 ,G$LABL*(K,N+3) EQU G$LABL(K,N+3)+G$CTR(2)+G$FLAG(K,4)     ZA
)@@G@@@[@@@@.     @E@@@@  DO G$CTR(7) , DO (G$LABL(K,1)=$)=0 , G$$DFL G$LABL(KZB
)@@G@@,1)   @G@@@@G$LABL*(K,1)  EQU   $        . REMEMBER START ADDR FOR OPTIMZC
)@@G@@IZATION     @H@@@@ DO LOOF , GO G$$I10                  . LOOKFOR TESTS ZD
)@@G@@GET SPECIAL HANDLING    @[@@@@.     @H@@@@NOGEN     EQU       G$CTR(7)*(ZE
)@@G@@G$LABL(K,5)=G$LABL(K,1)) . ON TO SURPRESS ALL   @G@@@@G$CTR*(4) EQU G$CTZF
)@@G@@R(4)+NOGEN           . KEEP G$$TST'S COUNTER IN PHASE @A@@@@ DO NOGEN , ZG
)@@G@@END     . STOP IF NO MO @[@@@@.     @F@@@@G$FLAG*(K,1) EQU IFNOT        ZH
)@@G@@    . SAVE NOT FLAG FOR OPTIMIZER   @E@@@@G$FLAG*(K,6) EQU CXF          ZI
)@@G@@    . AND ALSO COMPLEX FLAG   @H@@@@ DO G$CTR(6) , G$$SVA              .ZJ
)@@G@@ PASS 1: SAVE ARGS FOR RECALL AT ENDIF    @[@@@@.     @F@@@@RVF       EQZK
)@@G@@U       IFNOT--G$FLAG(K,2) . SET OVERALL REVERSAL FLAG@F@@@@LIG       EQZL
)@@G@@U       G$FLAG(K,3)     . SET IMPLIED LINEITEM FLAG   @G@@@@ DO 1-LIG , ZM
)@@G@@ G$$TST  1+IFNOT,CXF,RVF G$LABL(K,4)  . GENERATE THE TEST   @H@@@@ DO LIZN
)@@G@@G  ,  G$$TST  1+IFNOT,CXF,RVF      . GENERATE LINE ITEM FORMAT TEST(S)  ZO
)@@G@@@H@@@@G$FLAG*(K,2) EQU SIDE(1)               . REMEMBER IF TEST HAS SIDEZP
)@@G@@ EFFECTS    @G@@@@G$LABL*(K,2)  EQU   $         . REMEMBER START OF USERZQ
)@@G@@ CODE FOR OPTIMIZA@#@@@@ DO 1 , END .     @[@@@@.     @G@@@@. HANDLE 'LOZR
)@@G@@OKFOR' TESTS, WHICH GENERATE 1100 SERIES SEARCH INSTRUCTIONS@[@@@@.     ZS
)@@G@@@#@@@@G$$I10*   NAME    @A@@@@ DO (P(3,1)=VARY)=0 , G$$EFL 2,010 .@I@@@@ZT
)@@G@@VI        EQU       3                 . 'VARY' SPECIFICATION MUST FOLLOWZU
)@@G@@ 'LOOKFO    @E@@@@P(3,1)    EQU       LOOKFOR           . FORCE THE KEYWZV
)@@G@@ORD   @G@@@@KW(1)     EQU       LOOKFOR           . IN ALL PLACES ITS EXZW
)@@G@@PECTED TO BE@G@@@@G$LABL*(K,2)  EQU   $                  . GUARANTEE NONZX
)@@G@@-EMPTY 'IF' CLAUSE@H@@@@          G$$LAN                      . ANALYZE ZY
)@@G@@SPECS, LOAD REGS IF NECESSARY @G@@@@          G$$LGE    3,FI(3),FI(4) G$ZZ
)@@G@@LABL(K,4),1 . GEN CODE FOR SEARCH   @F@@@@G$CTR*(3) EQU G$CTR(3)+G$CTR(6AA
)@@G@@)       . PRETEND WE SAVED THE ARGS @[@@@@.     @]@@@@        END @[@@@@AB
)@@G@@.     @[@@@@.     @C@@@@.               ******************************* AC
)@@G@@@C@@@@.               *                             * @C@@@@.           AD
)@@G@@    *           ELSE              * @C@@@@.               *             AE
)@@G@@                * @C@@@@.               ******************************* AF
)@@G@@@[@@@@.     @#@@@@        PROC   *0 @]@@@@ELSE*   NAME@F@@@@M         EQAG
)@@G@@U       G$CTR(5)          . GET CURRENT NESTING LEVEL @F@@@@K         EQAH
)@@G@@U       G$SEQN(M)         . GET SEQ NUM FOR THIS BLOCK@F@@@@ DO (G$TYPE(AI
)@@G@@M)=2)=0 , G$$GFL 1,3        . CATCH NESTING ERRORS    @[@@@@.     @E@@@@AJ
)@@G@@ DO G$CTR(7) , DO (G$LABL(K,3)=$)=0 , G$$DFL G$LABL(K,3) .  @G@@@@G$LABLAK
)@@G@@*(K,3)  EQU   $                       . MARK END OF 'IF' CLAUSE   @F@@@@AL
)@@G@@ DO G$LABL(K,2)=$ , END . EMPTY 'IF' => IGNORE ELSE COMPLETELY    @[@@@@AM
)@@G@@.     @G@@@@     DO G$FLAG(K,4)=0 , I$     074,04,,,,G$LABL(K,5) . LEAP AN
)@@G@@TO ENDI     @F@@@@G$CTR*(2) EQU G$CTR(2)+G$FLAG(K,4) . SET ELSE FLOAT FOAO
)@@G@@R CODE BELOW@D@@@@G$LABL*(K,4)  EQU   $ . MARK START OF 'ELSE' USER CODEAP
)@@G@@@]@@@@        END @[@@@@.     @[@@@@.     @C@@@@.               ********AQ
)@@G@@*********************** @C@@@@.               *                         AR
)@@G@@    * @C@@@@.               *           ENDIF             * @C@@@@.     AS
)@@G@@          *                             * @C@@@@.               ********AT
)@@G@@*********************** @[@@@@.     @#@@@@        PROC   *0 @]@@@@ENDIF*AU
)@@G@@  NAME@F@@@@M         EQU       G$CTR(5)          . GET CURRENT NESTING AV
)@@G@@LEVEL @G@@@@K         EQU       G$SEQN(M)         . GET SEQUENCE NO OF TAW
)@@G@@HIS BLOCK   @F@@@@ DO (G$TYPE(M)=2)=0 , G$$GFL 1,3          . CATCH NESTAX
)@@G@@ING ERRORS  @[@@@@.     @E@@@@ DO G$CTR(7) , DO (G$LABL(K,5)=$)=0 , G$$DAY
)@@G@@FL G$LABL(K,5)    @D@@@@G$LABL*(K,5)  EQU   $         . MARK END OF BLOCAZ
)@@G@@K     @G@@@@G$CTR*(5) EQU       M-1               . STEP NESTING BACK ONBA
)@@G@@E LEVEL     @[@@@@.     @G@@@@. RESTORE GLOBAL FLOAT FOR FOLLOWING BLOX BB
)@@G@@(EFFECTIVE ON PASS 2 ONLY)    @[@@@@.     @E@@@@G$CTR*(2) EQU G$CTR(7)*(BC
)@@G@@G$CTR(2)-G$FLAG(K,5)-G$FLAG(K,4)) . @E@@@@ DO G$CTR(7) , END . ON PASS 2BD
)@@G@@, WE'RE DONE AT THIS POINT    @[@@@@.     @C@@@@.   ***** PASS 1 ONLY BEBE
)@@G@@YOND THIS POINT *****   @[@@@@.     @G@@@@G$CTR*(3) EQU G$CTR(3)-1      BF
)@@G@@        . ADJUST ARGSAVE STACK POINTER    @[@@@@.     @C@@@@. TABULATE FBG
)@@G@@LOAT FOR SURPRESSED ELSE, IF ANY    @[@@@@.     @H@@@@G$FLAG*(K,4) EQU 0BH
)@@G@@-((G$LABL(K,3)>0)**(G$LABL(K,4)=$)) . 'ELSE' FLOAT (NO -0!!)@G@@@@      BI
)@@G@@    RES       G$FLAG(K,4)     . APPLY ELSFLOAT FOR SUCCEEDING CODE@[@@@@BJ
)@@G@@.     @G@@@@. CHECK FOR SURPRESSION OF EVERYTHING (NO CODE AND NO SIDE EBK
)@@G@@FFECTS)     @[@@@@.     @H@@@@ DO ($>G$LABL(K,2))++G$FLAG(K,2) , GO G$$IBL
)@@G@@20 . IF NOT, GO CHECK OPTIMIZATION  @E@@@@G$FLAG*(K,5) EQU G$LABL(K,1)-GBM
)@@G@@$LABL(K,2) . TURN OFF 'IF'    @F@@@@          RES       G$LABL(K,1)-$   BN
)@@G@@. ADJUST L.C. APPROPRIATELY   @C@@@@  DO 1 , END        . AND TERMINATE BO
)@@G@@GRACEFULLY  @[@@@@.     @D@@@@. CHECK FOR POSSIBLE OPTIMIZATION OF THE IBP
)@@G@@NITIAL TEST @[@@@@.     @#@@@@G$$I20*   NAME    @F@@@@ DO G$LABL(K,4)=0 BQ
)@@G@@,G$LABL*(K,4) EQU $ . IF NO ELSE, PUT IT HERE   @[@@@@.     @F@@@@G$FLAGBR
)@@G@@*(K,2) EQU G$LABL(K,3)=G$LABL(K,2) . NO 'IF' CLAUSE =>INVERT@E@@@@G$FLAGBS
)@@G@@*(K,3) EQU    $-G$LABL(K,2)=1   . IMPLIED LINEITEM    @F@@@@ DO G$FLAG(KBT
)@@G@@,2)++G$FLAG(K,3)=0 , END . DONE IF NO OPTIMIZATION    @[@@@@.     @G@@@@BU
)@@G@@. WE'RE GOING TO OPTIMIZE THE JUMP WHEN WE GET BACK THERE ON PASS 2     BV
)@@G@@@F@@@@. TO INSURE THAT LABELS BELOW THIS POINT ARE OK, WE MUST PERFORCE BW
)@@G@@@E@@@@. DO A TRIAL GENERATION OF THE MODIFIED TEST SO WE KNOW     @G@@@@BX
)@@G@@. HOW MANY INSTRUCTIONS IT WILL TAKE WHEN WE GEN IT BACK AT THE TOP     BY
)@@G@@@[@@@@.     @H@@@@KK        EQU       G$CTR(3)+1        . GET ARGSAVE INBZ
)@@G@@DEX OF MATCHING 'IF'    @F@@@@I DO G$ARGS(KK) ,J DO G$ARGS(KK,I) ,P(I,J)CA
)@@G@@ EQU +G$ARGS(KK,I,J)    @E@@@@I DO G$ARGS(KK) ,J DO G$ARGS(KK,I)    ; FOCB
)@@G@@R ALL SUBFIELDS   @F@@@@  , DO G$ARGS(KK,I,*J) ,P(I,J) EQU *P(I,J) . PRECC
)@@G@@SERVE ASTERISKS   @A@@@@IFNOT     EQU       G$FLAG(K,1)     @F@@@@CXF   CD
)@@G@@    EQU       G$FLAG(K,6)   . RETRIEVE COMPLEX CONDN FLAG   @F@@@@RVF   CE
)@@G@@    EQU       IFNOT--G$FLAG(K,2) . SET OVERALL REVERSAL FLAG@E@@@@START CF
)@@G@@                . REMEMBER WHERE BEGINNING OF TEST WAS@D@@@@ DO 1-G$FLAGCG
)@@G@@(K,3) , G$$TST 1+IFNOT,CXF,RVF $+10 .     @D@@@@ DO G$FLAG(K,3)   , G$$TCH
)@@G@@ST 1+IFNOT,CXF,RVF      .     @H@@@@G$CTR*(4) EQU       G$CTR(4)-1      CI
)@@G@@  . RESTORE INTERNAL CTR USED BY G$$TST   @[@@@@.     @F@@@@. NOW SET ADCJ
)@@G@@DRESS ADJUSTMENT FLAGS SO PASS 2 WILL GEN PROPER CODE @[@@@@.     @G@@@@CK
)@@G@@SIZE      EQU       G$LABL(K,2)-G$LABL(K,1) . SIZE OF ORIGINAL TEST     CL
)@@G@@@E@@@@G$FLAG*(K,5) EQU $-START-SIZE       . COMPUTE PASS 2 FLOAT  @H@@@@CM
)@@G@@          RES      0-SIZE            . COMPENSATE L.C. FOR CODE WHICH FOCN
)@@G@@LLOWS @]@@@@        END @B@@@@/.          ******** CASE GROUP  *********CO
)@@G@@@[@@@@.     @[@@@@.     @^@@@@. ARRAY USAGE IS --     @[@@@@.     @D@@@@CP
)@@G@@.       G$FLAG(K,1) TOTAL NUMBER OF CASE VALUES GIVEN @G@@@@.         ..CQ
)@@G@@.    2) RUNNING TALLY: NUMBER OF VALUES ON PREVIOUS CASE    @C@@@@.     CR
)@@G@@    ...    3) INHIBIT/CALL OPTION FLAG    @E@@@@.         ...    4,X) VACS
)@@G@@LUE OF X'TH SPECIFIED CASEVALUE     @C@@@@.         ...    5) # OF REMOTCT
)@@G@@E CASES PROCESSED @D@@@@.         ...    6) FLAG SET 1 IF NOCHECKING IS CU
)@@G@@ON    @[@@@@.     @D@@@@.       G$LABL(K,1) START ADDR OF USER NOFIND COCV
)@@G@@DE    @C@@@@.         ...    2) END ADDR OF USER NOFIND CODE@D@@@@.     CW
)@@G@@    ...    3) ULTIMATE EXIT ADDR FROM BLOCK     @E@@@@.         ...    4CX
)@@G@@,X) JUMPTARGET ADDR FOR X'TH CASEVALUE    @E@@@@.         ...    5) RUNNCY
)@@G@@ING LABEL: LAST JUMP TO CLOSE A CASE@E@@@@.         ...    6) BASE ADDR CZ
)@@G@@FOR OFFSET INTO JUMP TABLE    @[@@@@.     @[@@@@.     @C@@@@.           DA
)@@G@@    ******************************* @C@@@@.               *             DB
)@@G@@                * @C@@@@.               *          CASENTRY           * DC
)@@G@@@C@@@@.               *                             * @C@@@@.           DD
)@@G@@    ******************************* @[@@@@.     @B@@@@. SYNTAX--     CASDE
)@@G@@ENTRY <AXREG>    OR...  @D@@@@.              CASENTRY CALLING(,<LINK>) NDF
)@@G@@AME(,<TAG>) @[@@@@.     @[@@@@.     @#@@@@P       PROC   *6 @B@@@@CASENTDG
)@@G@@RY*  NAME                       .   @F@@@@K         EQU       G$CTR(1)+1DH
)@@G@@        . GET BLOCK SEQUENCE NUM    @D@@@@G$CTR*(1) EQU       K         DI
)@@G@@        . AND UPDATE IT @G@@@@M         EQU       G$CTR(5)+1        . NEDJ
)@@G@@STING LEVEL FOR THIS BLOCK    @E@@@@G$CTR*(5) EQU       M               DK
)@@G@@  . UPDATE THAT, TOO    @G@@@@G$SEQN*(M) EQU      K                 . REDL
)@@G@@MEMBER BLOCK SEQUENCE NUMBER  @F@@@@G$TYPE*(M) EQU      3               DM
)@@G@@  . SET BLOCK TYPE TO CASE    @[@@@@.     @^@@@@. DO PRELIMINARY PARSINGDN
)@@G@@@[@@@@.     @F@@@@CALOPT     EQU      P(1,1)=CALLING    . ON TO CALL SUBDO
)@@G@@ROUTINE     @G@@@@N DO (P-2)*(P>2)                      ; SEARCH ALL BUTDP
)@@G@@ 0TH AND 1ST FIELD@F@@@@  , DO P(N+1)=1                       ; IF ONLY DQ
)@@G@@ONE SUBFIELD...   @G@@@@    , DO P(N+1,1)=NOCHECKING          ; AND ITS DR
)@@G@@THE NOCHECKING KEYWORD  @H@@@@       ,G$FLAG*(K,6) EQU 1            . SEDS
)@@G@@T GLOBAL FLAG FOR ENDCASE FLOAT     @G@@@@N DO (P-2)*(P>2)              DT
)@@G@@        ; SEARCH ALL BUT 0TH AND 1ST FIELD@G@@@@  , DO P(N+1,1)=NOFINDEXDU
)@@G@@IT            ; AND ITS THE NOFIND EXIT SPEC    @F@@@@     ,NFI(1) EQU NDV
)@@G@@+1                  . REMEMBER WHERE IT APPEARED@[@@@@.     @G@@@@ DO CADW
)@@G@@LOPT=0 , GO G$$C05              . SKIP THIS IF NORMAL CASENTRY    @G@@@@DX
)@@G@@BANKSW     EQU      P(3,1)=BASING     . ON IF WE SHOULD SWITCH BANKS    DY
)@@G@@@G@@@@XREG       EQU      P(1,2)+X11*(P(1,2)=0) . LINK REG, DEFAULT => XDZ
)@@G@@11    @I@@@@ DO BANKSW**(P(3)>2) , I$ 046,P(3,5),XREG,P(3,4),3*P(3,*4)+PEA
)@@G@@(3,*3),P(3,3) . LXI     @[@@@@.     @#@@@@G$$C05*    NAME   @F@@@@G$LABLEB
)@@G@@*(K,0) EQU    G$LABL(K,0)+G$CTR(2) . APPLY GLOBAL FLOAT     @E@@@@ DO G$EC
)@@G@@CTR(7) , DO (G$LABL(K,0)=$)=0 , G$$DFL G$LABL(K,0)    @G@@@@G$LABL*(K,0)ED
)@@G@@  EQU   $                 . MARK START IN CASE WE'LL INHIBIT@[@@@@.     EE
)@@G@@@E@@@@          RES       CALOPT*G$CTR(6) . ACCOUNT FOR THE LMJ   @[@@@@EF
)@@G@@.     @#@@@@G$$C10*   NAME    @F@@@@ DO G$CTR(6) , GO G$$C40           .EG
)@@G@@ ON PASS 1, SKIP THIS STUFF   @[@@@@.     @E@@@@. ***** PASS 2 ONLY-- GEEH
)@@G@@NERATE CHECKING AND THE JUMPTABLE   @[@@@@.     @C@@@@ DO 1-CALOPT , ; IEI
)@@G@@F NOT A SUBROUTINE CALL BLOCK @F@@@@ DO (P(1,1)<A0)++(P(1,1)>A3) , G$$EFEJ
)@@G@@L 3,1 . DIE IF NOT OVERLAP REG@[@@@@.     @B@@@@. COMPUTE CHARACTERISTICEK
)@@G@@S OF THE TABLE    @[@@@@.     @F@@@@NUMCA     EQU       +G$FLAG(K,1)    EL
)@@G@@  . NUMBER OF CASES GIVEN     @H@@@@CMAX(1)   EQU       -34359738367    EM
)@@G@@  . INIT MAX TO SMALLEST POSSIBLE NUMBER  @H@@@@L DO NUMCA , DO G$FLAG(KEN
)@@G@@,4,L)>CMAX(1) ,CMAX(1) EQU G$FLAG(K,4,L) . GET MAX    @H@@@@CMIN(1)   EQEO
)@@G@@U       0377777777777     . INIT MIN TO LARGEST POSSIBLE NUMBER   @H@@@@EP
)@@G@@L DO NUMCA , DO G$FLAG(K,4,L)<CMIN(1) ,CMIN(1) EQU G$FLAG(K,4,L) . GET MEQ
)@@G@@IN    @D@@@@OFF     EQU    1-CMIN(1)              . SET OFFSET    @G@@@@ER
)@@G@@JTSIZ   EQU    CMAX(1)+OFF            . SET TOT TABLE SIZE=RANGE OF VAL ES
)@@G@@@F@@@@JTL       EQU       JTSIZ-(G$FLAG(K,3)=-1)*(G$FLAG(K,4,1)=CMAX(1))ET
)@@G@@@F@@@@ DO CALOPT , DO (CMIN(1)=0)=0 , G$$EFL 3,5 . MIN VAL NOT ZERO     EU
)@@G@@@[@@@@.     @F@@@@. APPLY FLOATS TO LABELS BELONGING TO THIS BLOCK, SET EV
)@@G@@GLOBAL FLOAT@[@@@@.     @H@@@@G$LABL*(K,3) EQU    G$LABL(K,3)+G$CTR(2) .EW
)@@G@@ LAST LBL GETS ONLY GLOBAL FLOAT    @G@@@@PRSIZ     EQU       (CALOPT=0)EX
)@@G@@*(4-3*G$FLAG(K,6)) . SIZE OF PREAMBLE     @G@@@@G$CTR*(2) EQU       G$CTEY
)@@G@@R(2)+(G$FLAG(K,3)<1)*(PRSIZ+JTL)  . SET FLOAT   @E@@@@N DO 2 ,G$LABL*(K,EZ
)@@G@@N) EQU G$LABL(K,N)+G$CTR(2) . APPLY IT    @G@@@@ DO G$FLAG(K,3)>0 , END FA
)@@G@@                . IF OPTIMIZED AWAY, QUIT HERE  @[@@@@.     @E@@@@. COMPFB
)@@G@@UTE CROSS REFERENCES NEEDED TO GENERATE THE JUMP TABLE@[@@@@.     @G@@@@FC
)@@G@@ISNF      EQU       G$LABL(K,2)>G$LABL(K,1) . ON=> USER GAVE NOFIND CODEFD
)@@G@@@H@@@@ DO (NFI(1)>0)**ISNF , G$$EFL 3,07    . NOFIND EXIT FORBIDS NOFINDFE
)@@G@@ USER CODE  @G@@@@NFA(1)    EQU       G$LABL(K,3-2*ISNF) . NOFIND ADDR <FF
)@@G@@= ENDCASE/USERCODE@G@@@@ DO NFI(1)>0                          ; IF EXPLIFG
)@@G@@CIT NOFIND TARGET GIVEN @E@@@@  ,NFA(1) EQU P(NFI(1),2)             . SEFH
)@@G@@T JUMPTARGET TO IT@F@@@@ DO CALOPT                            ; IF WE'REFI
)@@G@@ CALLING A SUBRTNE@G@@@@  ,NFA(1) EQU -1                      . SET MISSFJ
)@@G@@ING CASE DETECTION FLAG @F@@@@N DO JTSIZ                            ; FOFK
)@@G@@R ALL JUMPTABLE ENTRIES @G@@@@  ,JT(N) EQU NFA(1)                   . INFL
)@@G@@ITIALIZE TARGET ADDR TO NOFIND@F@@@@N DO NUMCA                          FM
)@@G@@  ; FOR ALL CASEVALUES GIVEN  @G@@@@  ,JT(G$FLAG(K,4,N)+OFF)            FN
)@@G@@  ; SET JMPTBL ADDR FOR N'TH VALUE  @G@@@@     EQU G$LABL(K,4,N)+G$CTR(2FO
)@@G@@)       . TO FLOATED ADDR OF TARGET BLOK  @E@@@@N DO JTSIZ              FP
)@@G@@              ; FOR ALL CASE VALUES @F@@@@  , DO JT(N)=G$CTR(2)         FQ
)@@G@@        ; IF TARGET BLOCK IS EMPTY  @G@@@@     ,JT(N) EQU G$LABL(K,3)   FR
)@@G@@        . JUMP DIRECTLY TO THE ENDCASE    @G@@@@N DO CALOPT*JTSIZ       FS
)@@G@@              ; FOR ALL CASEVALS OF CALL OPTION @G@@@@  , DO JT(N)=-1   FT
)@@G@@                    ; IF NO ACTION GIVEN FOR N'TH EXIT@G@@@@     , G$$EFFU
)@@G@@L 3,6                     . GIVE MISSING CASE DIAGNOSTIC    @G@@@@. NOW FV
)@@G@@FIXUP FOR LAST CASE OPTIMIZED OUT FROM UNDER EMPTY CASES BEFORE IT@F@@@@FW
)@@G@@OSADR     EQU       G$LABL(K,3)+1     . OVERSHOOT TARGET ADDR     @F@@@@FX
)@@G@@N DO JTSIZ                            ; FOR ALL CASE VALUES GIVEN @G@@@@FY
)@@G@@  , DO JT(N)=OSADR                    ; IF EMPTY CASE CAUSED OVERSHOOT  FZ
)@@G@@@H@@@@    ,JT(N) EQU G$LABL(K,3)            . PATCH UP EXIT TO REAL ENDBGA
)@@G@@EG LOCN     @[@@@@.     @F@@@@. GEN PREAMBLE TO JUMP TABLE, I.E., CHECKIGB
)@@G@@NG CODE AND JUMP OR CALL@[@@@@.     @G@@@@ DO CALOPT , GO G$$C26        GC
)@@G@@        . CALLING OPTION GETS NO PREAMBLE @G@@@@    DO G$FLAG(K,6)>0 , GGD
)@@G@@O G$$C25      . CHECKS INHIBITED GETS ONLY JUMP @F@@@@          TLE,XU  GE
)@@G@@  P(1,1),CMAX(1)+1  . TEST AGAINST MAX RANGE    @E@@@@          TLE,XU  GF
)@@G@@  P(1,1),CMIN(1)    . AND AGAINST THE MIN @G@@@@          J         NFA(GG
)@@G@@1)            . NOFIND EXIT IF OUT AT EITHER END@#@@@@G$$C25*   NAME    GH
)@@G@@@E@@@@          J         $+OFF,P(1,1)      . JUMP THRU TABLE     @#@@@@GI
)@@G@@    GO G$$C29     @E@@@@G$$C26*   NAME                        . HERE FORGJ
)@@G@@ CALLING    @F@@@@FUN       EQU       074-BANKSW*065    . FUNC CODE, LMJGK
)@@G@@/LIJ/LDJ    @G@@@@JAY       EQU       013-BANKSW*(P(3,2)=DBANK) . J-DES GL
)@@G@@IS PART OF OPCODE @B@@@@HI        EQU       2*P(2,*2)+P(2,*1)     @D@@@@GM
)@@G@@          I$        FUN,JAY,XREG,P(2,2),HI,P(2,1) .   @F@@@@G$$C29*   NAGN
)@@G@@ME                        . END OF PREAMBLE GENERATION@[@@@@.     @B@@@@GO
)@@G@@. NOW ACTUALLY GENERATE THE JUMP TABLE    @[@@@@.     @G@@@@G$LABL*(K,6)GP
)@@G@@ EQU    $-CMIN(1)         . ESTABLISH ANCHOR ADDR FOR JMPTBL@G@@@@N DO JGQ
)@@G@@TL                              ; FOR ALL ENTRIES IN THE TABLE    @G@@@@GR
)@@G@@  , J JT(N)                           . TAKE PROVERBIAL FLYING LEAP     GS
)@@G@@@[@@@@.     @A@@@@. ***** PASS 1 LEAPS DIRECTLY HERE  @[@@@@.     @#@@@@GT
)@@G@@G$$C40*   NAME    @G@@@@G$FLAG*(K,3) EQU 0-CALOPT             . REMEMBERGU
)@@G@@ CALL OPTION, IF ANY    @H@@@@G$LABL*(K,1)  EQU   $                 . MAGV
)@@G@@RK START OF NOFIND CODE, IF ANY     @F@@@@G$FLAG*(K,1) EQU 0            GW
)@@G@@        . NO CASE STMNTS SEEN YET   @G@@@@G$LABL*(K,4,0) EQU  $         GX
)@@G@@        . INITIALIZE LOCAL OPTIMIZATION   @I@@@@G$FLAG*(K,2) EQU 0      GY
)@@G@@              . NO VALUES ON NON-EXISTENT PREVIOUS CASE     @]@@@@      GZ
)@@G@@  END @[@@@@.     @[@@@@.     @[@@@@.     @C@@@@.               ********HA
)@@G@@*********************** @C@@@@.               *                         HB
)@@G@@    * @C@@@@.               *           CASE              * @C@@@@.     HC
)@@G@@          *                             * @C@@@@.               ********HD
)@@G@@*********************** @[@@@@.     @[@@@@.     @#@@@@P       PROC   *2 HE
)@@G@@@F@@@@CASE*   NAME                          . SPECS--  <VALUE-LIST>     HF
)@@G@@@F@@@@M         EQU       G$CTR(5)          . GET CURRENT NESTING LEVEL HG
)@@G@@@G@@@@K         EQU       G$SEQN(M)         . GET SEQUENCE NUM OF THIS BHH
)@@G@@LOCK  @E@@@@ DO (G$TYPE(M)=3)=0 , G$$GFL 1,3      . DIAGNOSE BAD NESTINGHI
)@@G@@@F@@@@ DO G$FLAG(K,3)>0 , END                 . DONE IF OPTIMIZED AWAY  HJ
)@@G@@@[@@@@.     @H@@@@JJ      EQU    +G$FLAG(K,1)           . GET # OF CASEVHK
)@@G@@ALS SO FAR IN THIS GRP  @G@@@@ DO JJ=0 ,G$LABL*(K,2)  EQU   $       . MAHL
)@@G@@RK END OF USER NOFIND CODE    @B@@@@ DO (JJ>0)++(G$FLAG(K,3)>-1) , GO G$HM
)@@G@@$C60 .@[@@@@.     @C@@@@. SPECIAL STUFF FOR 1ST CASE WITH CALLING OPTIONHN
)@@G@@@G@@@@.    THE MAX VAL IS MOVED TO THE 1ST POSN SO THAT WE CAN EASILY CHHO
)@@G@@ECK   @G@@@@. LATER WHETHER IT IS THE GLOBAL MAX.  IF SO, AND IF THE 1STHP
)@@G@@ BLOCK HAS  @G@@@@. CODE, THEN THE LAST JUMPTBL ENTRY CAN BE OMITTED ANDHQ
)@@G@@ WE CAN INSTEAD   @B@@@@. SIMPLY FALL INTO THE CODE FOR THIS CASE.@[@@@@HR
)@@G@@.     @F@@@@ DO $>G$LABL(K,1) , G$$GFL 2,5 . NO NOFIND ALLOWED FOR CALL HS
)@@G@@OPTION@E@@@@MAX(1)    EQU       P(1,1)              . INITIALIZE MAX    HT
)@@G@@@F@@@@N DO P(1) , DO P(1,N)>MAX(1) ,MAX(1) EQU P(1,N) . FIND MAX VALUE  HU
)@@G@@@F@@@@IMAX(1)   EQU       1                 . INITIALIZE POSN OF MAXVAL HV
)@@G@@@F@@@@N DO P(1) , DO P(1,N)=MAX(1) ,IMAX(1) EQU N . FIND POSN OF MAXVAL HW
)@@G@@@E@@@@MTEMP     EQU       P(1,1)            . TEMP SAVE 1ST VALUE @E@@@@HX
)@@G@@P(1,1)    EQU       MAX(1)            . FORCE IT TO MAX     @G@@@@P(1,IMHY
)@@G@@AX(1)) EQU    MTEMP             . EXCHANGE WITH PREVIOUS VALUE    @[@@@@HZ
)@@G@@.     @^@@@@. CLOSE PREVIOUS CASE   @[@@@@.     @#@@@@G$$C60*   NAME    IA
)@@G@@@H@@@@REDUN     EQU       $=G$LABL(K,3)     . ON=> CLOSURE HERE WOULD BEIB
)@@G@@ REDUNDANT  @G@@@@GOTSOM EQU $>G$LABL(K,4,JJ)           . ON IF PRECEDINIC
)@@G@@G CASE HAD CODE   @G@@@@ DO (G$FLAG(K,3)<0)**(JJ=1)           ; IF 2ND CID
)@@G@@ASE OF CALLING OPTION...@F@@@@    ,G$FLAG*(K,3) EQU GOTSOM-2        . SEIE
)@@G@@T FLAG IF 1ST CASE EMPTY@F@@@@ DO GOTSOM**1-REDUN , I$ 074,04,,,,G$LABL(IF
)@@G@@K,3) . CLOSE LAST CASE  @H@@@@ DO GOTSOM ,G$LABL*(K,5)   EQU  $     . MAIG
)@@G@@RK START USERCODE FOR THIS CASE     @G@@@@G$CTR*(2) EQU       G$CTR(2)-RIH
)@@G@@EDUN*GOTSOM    . IF SURPRESSED, NOTE FLOAT@D@@@@N DO (1-GOTSOM)*G$FLAG(KII
)@@G@@,2) ,G$LABL*(K,4,JJ+1-N) EQU 0@[@@@@.     @B@@@@. TABULATE PARAMETERS FOIJ
)@@G@@R THE PRESENT CASE@[@@@@.     @E@@@@G$FLAG*(K,1) EQU JJ+P(1)            IK
)@@G@@  . UPDATE CASEVAL COUNT@I@@@@G$FLAG*(K,2) EQU +P(1)                . REIL
)@@G@@MEMBER HOW MANY TBL ENTRIES WE'RE USI     @F@@@@N DO P(1) ,G$FLAG*(K,4,JIM
)@@G@@J+N) EQU +(P(1,N)) . SAVE CASE VALUE(S)   @G@@@@ DO G$CTR(7) , DO (G$LABIN
)@@G@@L(K,4,JJ+1)=0)=0 , ; IF NOT OPTIMIZED AWAY ...  @G@@@@  DO (G$LABL(K,4,JIO
)@@G@@J+1)+G$CTR(2)=$)=0 , G$$DFL G$LABL(K,4,JJ+1)+G$CTR(2) @H@@@@N DO     P(1IP
)@@G@@) ,G$LABL*(K,4,JJ+N) EQU $ . SET OUR OWN JUMPTARGET ADDRESSES     @G@@@@IQ
)@@G@@ DO (P(2,1)=REMOTESUB)=0 , END          . QUIT UNLESS REMOTESUB CALL    IR
)@@G@@@[@@@@.     @H@@@@G$FLAG*(K,5) EQU    G$FLAG(K,5)+G$CTR(6) . ON PASS 1, IS
)@@G@@ COUNT REMOTE CALLS     @D@@@@ DO G$CTR(6) , END                    . ANIT
)@@G@@D THAT'S ALL@F@@@@          G$$PRA    P(2,2),G$LABL(K,3) . PATCH UP BLOCIU
)@@G@@K EXIT INSTR@E@@@@ DO P(2,3)=VIA ,P(2,2) EQU P(2,4)     . SET XFER TARGEIV
)@@G@@T ADDR@F@@@@HERE                                  . REMEMBER WHERE WE ARIW
)@@G@@E     @G@@@@N DO P(1)                             ; FOR ALL VALUES IN THIX
)@@G@@IS CASE     @G@@@@  , G$$PJT G$LABL(K,6)+P(1,N),P(2,2)  . MAKE JMPTBL POIY
)@@G@@INT TO TARGET     @E@@@@          RES       HERE-$            . RESTORE IZ
)@@G@@THE L.C.    @]@@@@        END @[@@@@.     @E@@@@P         PROC      *1,0JA
)@@G@@              . DO NOTHING ON PASS 1@E@@@@G$$PJT*   NAME                JB
)@@G@@        . PATCH UP JUMP TABLE @F@@@@          RES       P(1,1)-$        JC
)@@G@@  . GO BACK TO JUMPTBL ENTRY  @G@@@@          J         P(1,2)          JD
)@@G@@  . AND OVERLAY IT WITH NEW TARGET  @#@@@@          END     @[@@@@.     JE
)@@G@@@[@@@@.     @[@@@@.     @C@@@@.               **************************JF
)@@G@@***** @C@@@@.               *                             * @C@@@@.     JG
)@@G@@          *          ENDCASE            * @C@@@@.               *       JH
)@@G@@                      * @C@@@@.               **************************JI
)@@G@@***** @[@@@@.     @[@@@@.     @#@@@@P       PROC   *0 @#@@@@ENDCASE*  NAJJ
)@@G@@ME    @G@@@@M         EQU       G$CTR(5)          . GET NESTING LEVEL OFJK
)@@G@@ THIS BLOCK @G@@@@K         EQU       G$SEQN(M)         . GET SEQUENCE NJL
)@@G@@O OF THIS BLOCK   @E@@@@ DO (G$TYPE(M)=3)=0 , G$$GFL 1,3      . DIAGNOSEJM
)@@G@@ BAD NESTING@[@@@@.     @E@@@@. COMPUTE TABLE SIZE SO WE KNOW HOW MUCH FJN
)@@G@@LOAT TO APPLY     @[@@@@.     @H@@@@CALOPT    EQU       G$FLAG(K,3)<0   JO
)@@G@@  . SET IF CASENTRY WITH CALLING OPTION   @F@@@@NUMCA     EQU       +G$FJP
)@@G@@LAG(K,1)      . NUMBER OF CASES GIVEN     @H@@@@CMAX(1)   EQU       -343JQ
)@@G@@59738367      . INIT MAX TO SMALLEST POSSIBLE NUMBER  @H@@@@L DO NUMCA ,JR
)@@G@@ DO G$FLAG(K,4,L)>CMAX(1) ,CMAX(1) EQU G$FLAG(K,4,L) . GET MAX    @H@@@@JS
)@@G@@CMIN(1)   EQU       0377777777777     . INIT MIN TO LARGEST POSSIBLE NUMJT
)@@G@@BER   @H@@@@L DO NUMCA , DO G$FLAG(K,4,L)<CMIN(1) ,CMIN(1) EQU G$FLAG(K,JU
)@@G@@4,L) . GET MIN    @G@@@@JTS(1)   EQU    CMAX(1)-CMIN(1)+1      . SET TOTJV
)@@G@@ TABLE SIZE=RANGE OF VAL@F@@@@ DO G$FLAG(K,3)=-1 ,JTS(1) EQU JTS(1)-(CMAJW
)@@G@@X(1)=G$FLAG(K,4,1))     @[@@@@.     @G@@@@ DO G$LABL(K,0)=$             JX
)@@G@@        ; IF NO CODE IN ANY CASE BLOK     @G@@@@  , DO G$FLAG(K,5)=0    JY
)@@G@@              ; AND NO REMOTE BLOX EITHER...    @F@@@@    ,G$FLAG*(K,3) JZ
)@@G@@EQU 1               . TURN OFF CODE GENERATION  @G@@@@REDUN     EQU     KA
)@@G@@  G$LABL(K,5)=$     . ON=> LAST CASE CLOSURE REDUNDANT@G@@@@PRSIZ     EQKB
)@@G@@U       (CALOPT=0)*(4-3*G$FLAG(K,6)) . GET PREAMBLE SIZE    @H@@@@FLOAT KC
)@@G@@    EQU       (G$FLAG(K,3)<1)*(PRSIZ+JTS(1)-REDUN) . FLOAT FOR TABL     KD
)@@G@@@G@@@@          RES       FLOAT*G$CTR(6)    . ON PASS 1, APPLY FLOAT TO KE
)@@G@@L.C.  @H@@@@G$CTR*(2) EQU       G$CTR(2)-FLOAT*G$CTR(7) . ON P2, APPLY TKF
)@@G@@O GLOBAL FLOAT    @[@@@@.     @E@@@@ DO G$CTR(7) , DO (G$LABL(K,3)=$)=0 KG
)@@G@@, G$$DFL G$LABL(K,3)    @H@@@@G$LABL*(K,3)  EQU   $                 . MAKH
)@@G@@RK ULTIMATE EXIT POINT FROM BLOCK   @G@@@@G$CTR*(5) EQU       M-1       KI
)@@G@@        . UPDATE GLOBAL NESTING LEVEL     @[@@@@.     @]@@@@        END KJ
)@@G@@@B@@@@/.       ********* REPEAT GROUP ********* @[@@@@.     @[@@@@.     KK
)@@G@@@E@@@@.    THE ARRAY G$FLAG(K,X) IS USED TO KEEP FLAGS THROUGOUT  @E@@@@KL
)@@G@@.    THE SCOPE OF THE REPEAT BLOCK. FOR EACH X, THE FLAG IS:@[@@@@.     KM
)@@G@@@F@@@@.       1      INDEX OF 'VARY' FIELD ON SOURCE 'REPEAT' IMAGE     KN
)@@G@@@F@@@@.       2      ON IF THERE IS <LOOP CTL> CODE WHICH MUST APPEAR   KO
)@@G@@@D@@@@.              AT THE PHYSICAL BOTTOM OF THE LOOP     @E@@@@.     KP
)@@G@@  3      INDEX OF 'TO' FIELD IN SOURCE 'REPEAT' IMAGE @F@@@@.       4   KQ
)@@G@@   INDEX OF 'WHILE' FIELD ON SOURCE 'REPEAT IMAGE     @B@@@@.       5   KR
)@@G@@   FLOAT FOR SURPRESSED UNTIL @C@@@@.       6      INDEX OF 'UNTIL' ON SKS
)@@G@@OURCE IMAGE @B@@@@.       7      SURPRESS EVERYTHING FLAG   @A@@@@.     KT
)@@G@@  8      ON=> 'LOOKFOR' FORMAT@C@@@@.       9      ON=> BOTTOM OF LOOP CKU
)@@G@@HECKING DONE@E@@@@.       .      FLAGS USED TO CONTROL POSITIONING AND FKV
)@@G@@LOAT: @D@@@@.      10      ON=> ENTRY CONDITION IS JUMP TO WHILE  @B@@@@KW
)@@G@@.      11      ON => SURPRESS WHILE AT TOP@B@@@@.      12      ON=> INVEKX
)@@G@@RT ESCAPE TEST    @E@@@@.      13      ON=> CLOSE ESCAPE CLAUSE (WITH JUKY
)@@G@@MP TO EXIT) @G@@@@.      14      ON=> CLOSE OTHERWISE/UNTIL CLAUSE (WITHKZ
)@@G@@ JUMP TO LOOP)    @C@@@@.      15      ON=> SURPRESS WHILE AT BOTTOM    LA
)@@G@@@C@@@@.      16      FLOAT FOR WHILE SURPRESSED AT TOP@B@@@@.      17   LB
)@@G@@   FLOAT FOR INVERTED ESCAPE  @D@@@@.      18      FLOAT FOR WHILE SURPRLC
)@@G@@ESSED AT BOTTOM   @E@@@@.      19      ON=> CODE IN LOOP WILL APPEAR BELLD
)@@G@@OW ESCAPE   @C@@@@.      20      GLOBAL FLOAT AT ENTRY TO BLOCK   @E@@@@LE
)@@G@@.      21      1+FLOAT FOR INITIAL JUMP FALLTHRU (0=>NONE)  @[@@@@.     LF
)@@G@@@E@@@@.    THE ARRAY G$LABL(K,X) IS USED TO LABEL VARIOUS CONTROL @D@@@@LG
)@@G@@.    POINTS IN THE GENERATED CODE.  VALUES OF X ARE:  @[@@@@.     @D@@@@LH
)@@G@@.       1      LOCATION OF TOP-OF-LOOP WHILE TEST     @D@@@@.       2   LI
)@@G@@   LOCATION OF TOP-OF-LOOP <VARY> CODE    @F@@@@.       3      START USELJ
)@@G@@R-SPECIFIED REPEATED CODE (TOP OF LOOP)   @G@@@@.       4      LOCATION LK
)@@G@@OF CONDITION TEST AT ESCAPE (0=>NO ESCAPE STMNT)@D@@@@.       5      STALL
)@@G@@RT USER-SPECIFIED ESCAPE CLAUSE     @D@@@@.       6      START USER-SPECLM
)@@G@@IFIED OTHERWISE CODE    @D@@@@.       7      LOCATION OF BOTTOM-OF-LOOP LN
)@@G@@WHILE TEST  @D@@@@.       8      LOCATION OF BOTTOM-OF-LOOP <VARY> CODE LO
)@@G@@@C@@@@.       9      START USER-SPECIFIED ATEND CODE  @C@@@@.      10   LP
)@@G@@   ULTIMATE BLOCK EXIT TARGET ADDR  @[@@@@.     @[@@@@.     @G@@@@. THE LQ
)@@G@@FOLLOWING ARCANE RULES ARE FOLLOWED IN POSITIONING THE VARIOUS    @ @@@@LR
)@@G@@. CODE GENERATED FOR A LOOP:  @[@@@@.     @G@@@@. 1) <UNTIL> CODE ALWAYSLS
)@@G@@ APPEARS AT THE PHYSICAL BOTTOM OF THE LOOP     @F@@@@.            SO WELT
)@@G@@ CAN AVOID JUMPING AROUND IT AT LOOP ENTRY.     @B@@@@. 2) <VARY>  CODE LU
)@@G@@MOVES AROUND AS FOLLOWS:@G@@@@.        A)  IF THE SENSE (UP/DOWN) IS KNOLV
)@@G@@WN, THEN THE CODE IS PLACED   @G@@@@.            ACCORDING TO THE PREFERLW
)@@G@@ENCE OF THE LOOP INSTRUCTION, E.G.  @D@@@@.            JGD AT THE BOTTOMLX
)@@G@@, SEARCHES AT THE TOP.  @G@@@@.        B)  IF THE SENSE IS UNKNOWN, THE LY
)@@G@@CODE APPEARS AT BOTH TOP AND  @F@@@@.            BOTTOM, WITH THE BRANCHLZ
)@@G@@ SENSE APPROPRIATELY INVERTED.@G@@@@.            IMMEDIATELY BEFORE THE MA
)@@G@@PRIMARY CODE (BOTTOM), A SIGN TEST  @G@@@@.            IS INSERTED WHICHMB
)@@G@@ DETERMINES WHICH OF THE TWO VARIATIONS   @ @@@@.            WILL BE EXEMC
)@@G@@CUTED.@G@@@@. 3) <WHILE> CODE ALSO MOVES AROUND. WE DEFINE A <WHILE> TESMD
)@@G@@T WHICH IS  @G@@@@.            PERFORMED IN A SINGLE INSTRUCTION WHICH HME
)@@G@@AS AN INVERSE     @G@@@@.            (I.E. A CONDITIONAL JUMP) AS 'OPTIMMF
)@@G@@IZEABLE'. POSITIONING   @E@@@@.            THEN DEPENDS UPON OTHER CONDIMG
)@@G@@TIONS AS FOLLOWS- @G@@@@.            NORMAL POSITIONING IS AT THE BOTTOMMH
)@@G@@, WITH A (ONE TIME) JUMP@H@@@@.            TO THE WHILE TEST INSERTED ATMI
)@@G@@ THE TOP. IF THERE IS AN ESCAPE     @G@@@@.            CONDITION WHICH WMJ
)@@G@@OULD OTHERWISE FALL THROUGH, HOWEVER, THE @H@@@@.            JUMP AROUNDMK
)@@G@@ THE WHILE IS AVOIDED BY PUTTING IT AT THE TOP AND    @H@@@@.           ML
)@@G@@ INVERTING THE ESCAPE TEST ACCORDINGLY. IF THERE IS NO <VARY>     @G@@@@MM
)@@G@@.            CODE AT THE PHYSICAL BOTTOM OF THE LOOP, AND THE WHILE     MN
)@@G@@@G@@@@.            TEST IS OPTIMIZEABLE, THEN THE INITIAL JUMP TO THE WHMO
)@@G@@ILE   @G@@@@.            TEST IS REPLACED BY THE TEST ITSELF. IN THIS CAMP
)@@G@@SE, THE     @G@@@@.            TEST WILL APPEAR AT BOTH THE TOP AND BOTTMQ
)@@G@@OM OF THE LOOP.   @E@@@@. 4) ESCAPE  AN ESCAPE TEST CAN BE MODIFIED BOTHMR
)@@G@@ BECAUSE OF @G@@@@.            THE ABOVE, OR BECAUSE THE CLAUSE IS EMPTYMS
)@@G@@. IF THE CODE     @F@@@@.            FOLLOWING THE TEST IS NOT IN THE LOMT
)@@G@@OP (I.E. IS A NON-@F@@@@.            VACUOUS ESCAPE CLAUSE OR IS THE ENDMU
)@@G@@ OF THE LOOP),    @F@@@@.            THE ESCAPE TEST BRANCHES TO STAY INMV
)@@G@@ THE LOOP. IF     @G@@@@.            THE FOLLOWING CODE IS IN THE LOOP (MW
)@@G@@I.E. VACUOUS ESCAPE     @G@@@@.            AND NON-VACUOUS OTHERWISE), TMX
)@@G@@HEN THE SENSE IS REVERSED     @F@@@@.            SO THAT THE BRANCH CONDMY
)@@G@@ITION GOES COMPLETELY OUT OF  @^@@@@.            THE BLOCK. @[@@@@.     MZ
)@@G@@@C@@@@.               ******************************* @C@@@@.           NA
)@@G@@    *                             * @C@@@@.               *           RENB
)@@G@@PEAT            * @C@@@@.               *                             * NC
)@@G@@@C@@@@.               ******************************* @[@@@@.     @#@@@@ND
)@@G@@P       PROC   *12@]@@@@REPEAT* NAME@[@@@@.     @E@@@@K         EQU     NE
)@@G@@  G$CTR(1)+1        . BUMP BLOCK COUNTER  @F@@@@G$CTR*(1) EQU       K   NF
)@@G@@              . SAVE UPDATED BLOCK COUNT  @F@@@@M         EQU       G$CTNG
)@@G@@R(5)+1        . BUMP GLOBAL NESTING LEVEL @F@@@@G$CTR*(5) EQU       M   NH
)@@G@@              . SAVE NEW NESTING LEVEL    @F@@@@G$SEQN*(M) EQU      K   NI
)@@G@@              . SAVE SEQ NO OF THIS BLOCK @F@@@@G$TYPE*(M) EQU      4   NJ
)@@G@@              . SET BLOCK TYPE TO REPEAT  @[@@@@.     @B@@@@. APPLY FLOANK
)@@G@@TS TO LABELS IN THIS BLOCK    @[@@@@.     @G@@@@ DO G$CTR(6) , GO G$$R10NL
)@@G@@           . ON PASS 1, FLOAT MEANS NOTHING     @[@@@@.     @E@@@@G$FLAGNM
)@@G@@*(K,20) EQU   G$CTR(2)          . SAVE INITIAL FLOAT  @H@@@@ESCF      EQNN
)@@G@@U       G$LABL(K,4)       . REMEMBER ENTRY VALUE OF ESCAPE FLAG   @H@@@@NO
)@@G@@FALLF     EQU       (G$FLAG(K,21)>0)*(1-G$FLAG(K,21)) . GET FALLTHRU FLONP
)@@G@@AT    @H@@@@N DO 10 ,G$LABL*(K,N) EQU G$LABL(K,N)+G$CTR(2)+G$FLAG(K,10) NQ
)@@G@@. GLOBAL, JUMPENTR@I@@@@N DO 9 ,G$LABL*(K,N+1) EQU G$LABL(K,N+1)+G$FLAG(NR
)@@G@@K,16)+FALLF . SURPRESS TOP WHILE    @G@@@@N DO 6 ,G$LABL*(K,N+4) EQU G$LNS
)@@G@@ABL(K,N+4)+G$FLAG(K,17) . ESCAPE INVERSION@G@@@@N DO 5 ,G$LABL*(K,N+5) ENT
)@@G@@QU G$LABL(K,N+5)+G$FLAG(K,13) . ESCAPE CLOSURE  @I@@@@N DO 4 ,G$LABL*(K,NU
)@@G@@N+6) EQU G$LABL(K,N+6)+G$FLAG(K,14)+G$FLAG(K,5) . OTHER/UNTIL     @G@@@@NV
)@@G@@N DO 3 ,G$LABL*(K,N+7) EQU G$LABL(K,N+7)+G$FLAG(K,18) . BOTTOM WHILE    NW
)@@G@@@E@@@@ DO ESCF=0 ,G$LABL*(K,4) EQU 0 . IF NO ESCAPE, RESTORE FLAG @[@@@@NX
)@@G@@.     @ @@@@. ***** SYNTAX ANALYSIS ***** @[@@@@.     @[@@@@.     @#@@@@NY
)@@G@@G$$R10*   NAME    @[@@@@.     @G@@@@C(1)      EQU  1                    NZ
)@@G@@  . INITIALIZE CURRENT FIELD COUNTER@G@@@@KW(1)     EQU  P(1,1)         OA
)@@G@@        . AND CURRENT LEADING KEYWORD     @[@@@@.     @B@@@@.           OB
)@@G@@    EXAMINE 'WHILE' FIELD     @[@@@@.     @F@@@@G$$R50* NAME            OC
)@@G@@              . MARK START OF WHILE TEST  @G@@@@WI      EQU    KW(1)=WHIOD
)@@G@@LE            . FIELD INDEX OF 'WHILE' OR ZERO  @G@@@@G$FLAG*(K,4) EQU WOE
)@@G@@I                 . REMEMBER INDEX IN CASE DEFERRED   @C@@@@ DO WI=0 , GOF
)@@G@@O G$$R59 . IF NO 'WHILE', WE'RE DONE@C@@@@WYNOT     EQU       (P(2)=1)**OG
)@@G@@(P(2,1)=NOT) .    @H@@@@WC        EQU       ((P(3+WYNOT,1)=OR)++(P(3+WYNOH
)@@G@@OT,1)=AND))**(P(3+WYNOT)=1)   @F@@@@C(1)    EQU    3+WYNOT+2*WC         OI
)@@G@@        . UPDATE FIELD POINTER@F@@@@KW(1)   EQU    P(C(1),1)            OJ
)@@G@@  . KEYWORD FOR NEXT FIELD    @H@@@@G$$R59* NAME                        OK
)@@G@@  . END PROCESSING OF 'WHILE' CONDITION   @[@@@@.     @E@@@@.       EXAMOL
)@@G@@INE <LOOP CTL> FIELD, LOADING REGS IF NECESSARY @D@@@@. NOTE: THE <LOOP OM
)@@G@@CONTROL> ANALYSIS SUBROUTINE G$$LAN @E@@@@. SETS THE FLAGS FI(X) USED BEON
)@@G@@LOW.  FOR THEIR DEFINITIONS,  @ @@@@. SEE THE CODE FOR G$$LAN     @[@@@@OO
)@@G@@.     @C@@@@.       SEE IF THIS IS A HARDWARE SEARCH SPEC   @[@@@@.     OP
)@@G@@@I@@@@G$$R60* NAME                          . MARK START PROCESSING OF <OQ
)@@G@@LOOP CNTRL> SP    @F@@@@ DO (KW(1)=LOOKFOR)=0 , GO G$$R61 . IF NOT LOOKFOR
)@@G@@OR, GO TRY 'VARY' @I@@@@VI      EQU    C(1)+2                 . IN THIS OS
)@@G@@FMT, 'VARY' FOLLOWS LOOKFOR AND     @F@@@@ DO (P(VI,1)>VARY)++(P(VI,1)<LOT
)@@G@@OOKFOR) , G$$EFL 2,010 . CHECK IT   @G@@@@P(VI,1) EQU    LOOKFOR        OU
)@@G@@        . FORCE KEYWORD FOR USE BY G$$LAN @H@@@@G$FLAG*(K,8) EQU 1      OV
)@@G@@           . SET FLAG ALLOWING UNCONDITIONAL ESCAPE   @A@@@@ GO G$$R62 .OW
)@@G@@ THEN GO PROCESS IT     @[@@@@.     @F@@@@G$$R61* NAME                  OX
)@@G@@        . TRY A NORMAL 'VARY' FIELD @F@@@@VI      EQU    C(1)*((KW(1)>JMOY
)@@G@@GI-1)**(KW(1)<VARY+1)) . FIELD INDEX@D@@@@ DO VI=0 , GO G$$R69 . SKIP THOZ
)@@G@@IS IF FIELD NOT GIVEN   @[@@@@.     @]@@@@G$$R62* NAME@E@@@@        G$$LPA
)@@G@@AN                . ANALYZE THE LOOP CTL FIELD  @G@@@@G$FLAG*(K,2) EQU FPB
)@@G@@I(5)              . REMEMBER IF IT HAS DEFERRED CODE  @H@@@@G$FLAG*(K,3)PC
)@@G@@ EQU FI(3)              . NOTE FIELD IN WHICH 'TO' SPEC APPEARS   @H@@@@PD
)@@G@@C(1)    EQU    FI(7)+1                . SET FIELD OF NEXT (I.E. UNTIL) GPE
)@@G@@ROUP  @F@@@@KW(1)   EQU    P(C(1),1)              . AND ITS FUNCT FLAG WPF
)@@G@@ORD   @]@@@@G$$R69* NAME@G@@@@G$FLAG*(K,1) EQU VI                 . SAVEPG
)@@G@@ INDEX OF VARY FIELD, IF ANY  @[@@@@.     @A@@@@.              SCAN 'UNTPH
)@@G@@IL' FIELD   @[@@@@.     @H@@@@G$FLAG*(K,6) EQU    C(1)*(KW(1)=UNTIL). EXPI
)@@G@@TERNALIZE SO WE KNOW IT WAS GIVEN   @[@@@@.     @A@@@@.     ***** CODE GPJ
)@@G@@ENERATION *****   @[@@@@.     @]@@@@G$$R80* NAME@H@@@@ DO G$FLAG(K,10) ,PK
)@@G@@ I$ 074,04,,,,G$LABL(K,7) . ENTER WITH JUMP TO WHILE/VARY   @F@@@@G$CTR*PL
)@@G@@(2) EQU       G$CTR(2)+G$FLAG(K,10) . APPLY FLOAT, IF ANY   @[@@@@.     PM
)@@G@@@E@@@@G$LABL*(K,1)  EQU   $        . MARK START OF WHILE TEST     @H@@@@PN
)@@G@@ DO (WI>0)**1-G$FLAG(K,11) , G$$TST 2+WYNOT,WC,WYNOT G$LABL(K,9) . GEN IPO
)@@G@@T     @D@@@@G$CTR*(4) EQU       G$CTR(4)+((WI>0)**G$FLAG(K,11)) . @F@@@@PP
)@@G@@G$CTR*(2) EQU       G$CTR(2)+G$FLAG(K,16) . AND APPLY THE FLOAT   @[@@@@PQ
)@@G@@.     @A@@@@. GENERATE LOOP <VARY> CODE, IF ANY @[@@@@.     @F@@@@G$LABLPR
)@@G@@*(K,2)  EQU   $         . MARK START OF 2NDARY LOOP CHECK   @C@@@@ DO VIPS
)@@G@@>0 , ; IF THERE IS LOOP VARIATION CODE    @G@@@@ DO (P(VI,1)=LOOKFOR)++(PT
)@@G@@(FI(5)=FI(6))=0) , ; AND SOME OR ALL IS HERE    @E@@@@        G$$LGE VI,PU
)@@G@@FI(3),FI(4) G$LABL(K,9),1 . GENERATE IT   @F@@@@ DO G$LABL(K,2)<$ ,G$FLAPV
)@@G@@G*(K,21) EQU 0 . IF ANY, CAN'T FALL THRU  @[@@@@.     @#@@@@. FINAL CLEAPW
)@@G@@NUP   @[@@@@.     @E@@@@          G$$SVA                      . SAVE ARGPX
)@@G@@S FOR LATER @F@@@@G$FLAG*(K,9) EQU 0                 . CLEAR ENDCHECK DOPY
)@@G@@NE FLAG     @E@@@@ DO G$CTR(7) , DO (G$LABL(K,3)=$)=0 , G$$DFL G$LABL(K,PZ
)@@G@@3)    @E@@@@G$LABL*(K,3)  EQU   $         . MARK START OF USER'S CODE   QA
)@@G@@@[@@@@.     @]@@@@        END @[@@@@.     @[@@@@.     @[@@@@.     @C@@@@QB
)@@G@@.               ******************************* @C@@@@.               * QC
)@@G@@                            * @C@@@@.               *           ESCAPE  QD
)@@G@@          * @C@@@@.               *                             * @C@@@@QE
)@@G@@.               ******************************* @[@@@@.     @[@@@@.     QF
)@@G@@@#@@@@P       PROC   *4 @#@@@@ESCAPE*  NAME     @[@@@@.     @F@@@@M     QG
)@@G@@    EQU       G$CTR(5)          . GET CURRENT NESTING LEVEL @G@@@@K     QH
)@@G@@    EQU       G$SEQN(M)         . AND SEQUENCE NO OF THIS BLOCK   @E@@@@QI
)@@G@@ DO (G$TYPE(M)=4)=0 , G$$GFL 1,3 . CATCH NESTING ERRORS     @[@@@@.     QJ
)@@G@@@E@@@@ DO G$CTR(7) , DO (G$LABL(K,4)=$)=0 , G$$DFL G$LABL(K,4)    @E@@@@QK
)@@G@@G$LABL*(K,4)  EQU   $        . MARK START OF ESCAPE TEST    @[@@@@.     QL
)@@G@@@H@@@@TBOT      EQU       G$FLAG(K,6)>0     . ON => TEST AT LOGICAL BOTTQM
)@@G@@OM (UNTIL)  @H@@@@TTOP      EQU       (G$FLAG(K,1)>0)++(G$FLAG(K,4)>0) .QN
)@@G@@ ON => TESTS AT LGL TOP @H@@@@ DO TTOP**TBOT , G$$GFL 2,1               QO
)@@G@@. CAN'T HAVE CAKE AND EAT IT TOO    @G@@@@G$FLAG*(K,8) EQU G$FLAG(K,8)**QP
)@@G@@(P(1)=0) . UNCONDITIONAL (LOOKFOR) FLAG   @G@@@@ DO G$FLAG(K,8) , I$ 074QQ
)@@G@@,04,,,,G$LABL(K,10) . UNCONDITIONAL => LEAP OUT @C@@@@ DO G$FLAG(K,8) , QR
)@@G@@GO G$$E10 . THEN GO CLEAN UP  @[@@@@.     @E@@@@ DO (P(1,1)=WHEN)=0 , G$QS
)@@G@@$EFL 3,4 . SYNTAX ERROR IF NO 'WHEN'@F@@@@WHENOT    EQU       (P(2)=1)**QT
)@@G@@(P(2,1)=NOT) . ON FOR NOT CONDITION @H@@@@CFLG    EQU    P>3+WHENOT     QU
)@@G@@                 . ON FOR COMPOUND CONDITION    @[@@@@.     @F@@@@. ON PQV
)@@G@@ASS 1, BOTH SENSES OF THE TEST ARE GENERATED, SO WE CAN     @F@@@@. DETEQW
)@@G@@RMINE THE FLOAT TO USE IF REVERSAL OCCURS. ON PASS 2, ONLY  @A@@@@. THE QX
)@@G@@DESIRED SENSE IS GENERATED    @[@@@@.     @F@@@@ DO G$CTR(6)++G$FLAG(K,1QY
)@@G@@2) , ; PASS 1 ALWAYS, PASS 2 IF REVERSED  @I@@@@    G$$TST 2+WHENOT,CFLGQZ
)@@G@@,WHENOT G$LABL(K,1+5*G$FLAG(K,19)) . JUMP=> KEEP LOOPIN     @F@@@@SIZE  RA
)@@G@@    EQU       $-G$LABL(K,4)     . LENGTH OF REVERSED TEST   @E@@@@      RB
)@@G@@    RES      0-G$CTR(6)*SIZE . THEN RES TEST AWAY     @H@@@@G$CTR*(4) EQRC
)@@G@@U       G$CTR(4)+G$CTR(7)+G$FLAG(K,7) . KEEP G$$TST CTR IN PHASE  @H@@@@RD
)@@G@@ DO G$FLAG(K,12)++G$FLAG(K,7)=0 , ; PASS1 ALWAYS, 2 IF NOT REVERSED/SURPRE
)@@G@@RESSED@G@@@@    G$$TST 2+WHENOT,CFLG,1-WHENOT G$LABL(K,10) . JUMP=> EXITRF
)@@G@@ FROM LOOP  @E@@@@WIZE      EQU       $-G$LABL(K,4)     . SIZE OF 2ND TERG
)@@G@@ST    @[@@@@.     @H@@@@ DO G$CTR(6) ,G$FLAG*(K,7) EQU    SIDE(1)       RH
)@@G@@    . PASS 1: SET SIDE EFFECT @H@@@@G$CTR*(2) EQU       G$CTR(2)+G$FLAG(RI
)@@G@@K,17) . PASS2: APPLY FLOAT FOR ENCLOSED BL@E@@@@G$FLAG*(K,17) EQU  SIZE-RJ
)@@G@@WIZE . PASS 1: GET FLOAT, 2=>NOISE  @[@@@@.     @#@@@@G$$E10*   NAME    RK
)@@G@@@F@@@@G$LABL*(K,5)  EQU   $           . MARK START OF USER'S ESCAPE CODERL
)@@G@@@]@@@@        END @[@@@@.     @[@@@@.     @C@@@@.               ********RM
)@@G@@*********************** @C@@@@.               *                         RN
)@@G@@    * @C@@@@.               *         OTHERWISE           * @C@@@@.     RO
)@@G@@          *                             * @C@@@@.               *       RP
)@@G@@    ATEND             * @C@@@@.               *                         RQ
)@@G@@    * @C@@@@.               *           ENDREP            * @C@@@@.     RR
)@@G@@          *                             * @C@@@@.               ********RS
)@@G@@*********************** @[@@@@.     @[@@@@.     @#@@@@Y       PROC   *1 RT
)@@G@@@^@@@@OTHERWISE* NAME     0   @^@@@@ATEND*    NAME      1   @^@@@@ENDREPRU
)@@G@@*   NAME      2   @[@@@@.     @F@@@@M         EQU       G$CTR(5)        RV
)@@G@@  . GET CURRENT NESTING LEVEL @G@@@@K         EQU       G$SEQN(M)       RW
)@@G@@  . AND SEQUENCE NO OF THIS BLOCK   @E@@@@ DO (G$TYPE(M)=4)=0 , G$$GFL 1RX
)@@G@@,3 . CATCH NESTING ERRORS     @F@@@@ DO G$LABL(K,5)=0 ,G$LABL*(K,5) EQU RY
)@@G@@$ . FIXUP FOR MISSING ESCAPE  @[@@@@.     @A@@@@. CLOSE DANGLING ESCAPE,RZ
)@@G@@ IF REQUIRED@[@@@@.     @F@@@@ DO G$FLAG(K,13) , I$ 074,04,,,,G$LABL(K,1SA
)@@G@@0) . PASS2: LEAP OUT    @F@@@@G$CTR*(2) EQU       G$CTR(2)+G$FLAG(K,13) SB
)@@G@@. APPLY CLOSURE FLOAT   @F@@@@G$FLAG*(K,13) EQU   0                 . RESC
)@@G@@MEMBER WE'VE DONE THIS  @[@@@@.     @C@@@@. **** OTHERWISE GETS OFF THE SD
)@@G@@TRAIN HERE ...    @[@@@@.     @G@@@@ DO Y(0,0)>0 , GO G$$Z10            SE
)@@G@@  . IF ATEND OR ENDREP, KEEP MOVING @H@@@@ DO G$LABL(K,4)=0 , G$$GFL 2,2SF
)@@G@@            . OTHERWISE INVALID IF NO ESCAPE    @E@@@@ DO G$CTR(7) , DO SG
)@@G@@(G$LABL(K,6)=$)=0 , G$$DFL G$LABL(K,6) 1  @F@@@@G$LABL*(K,6)  EQU   $   SH
)@@G@@      . MARK START OF 'OTHERWISE' CODE    @B@@@@ DO 1 , END         . THSI
)@@G@@AT'S ALL FOLKS    @[@@@@.     @A@@@@. **** ATEND/ENDREP LUMBER ONWARD...SJ
)@@G@@@[@@@@.     @F@@@@.         CLOSE LOOP: GEN CTL CODE WHICH PREFERS PHYSISK
)@@G@@CAL BOTTOM  @[@@@@.     @#@@@@G$$Z10*   NAME    @H@@@@ DO G$FLAG(K,9) , SL
)@@G@@GO G$$Z50          . IF ITS TUESDAY, THIS MUST BE ENDREP    @F@@@@G$FLAGSM
)@@G@@*(K,9) EQU 1                 . REMEMBER WE'VE BEEN HERE     @F@@@@ DO G$SN
)@@G@@LABL(K,6)=0 ,G$LABL*(K,6) EQU $ . DEFAULT START OF OTHERWISE@G@@@@KK    SO
)@@G@@    EQU       G$CTR(3)          . GET POINTER INTO ARGSAVE STACK  @H@@@@SP
)@@G@@I DO G$ARGS(KK) ,J DO G$ARGS(KK,I) ,P(I,J) EQU +G$ARGS(KK,I,J) . GET ARGSQ
)@@G@@S     @E@@@@I DO G$ARGS(KK) ,J DO G$ARGS(KK,I)    ; FOR ALL SUBFIELDS   SR
)@@G@@@F@@@@  , DO G$ARGS(KK,I,*J) ,P(I,J) EQU *P(I,J) . PRESERVE ASTERISKS   SS
)@@G@@@G@@@@G$CTR*(3) EQU       KK-1              . THEN MOVE STACK POINTER BAST
)@@G@@CK    @I@@@@ DO (Y(0,0)=1)**(G$ARGS(KK)=0) , G$$GFL 2,3        . ATEND USU
)@@G@@NREACHABLE IF NO ARG    @G@@@@LL      EQU    G$FLAG(K,2)          . ON ISV
)@@G@@F ANY <VARY> CODE WAS DEFERRED@H@@@@DFER      EQU       LL++(G$FLAG(K,4)SW
)@@G@@>0) . ON IF DEFFERED CODE OF ANY TYPE     @[@@@@.     @F@@@@. HANDLE UNTSX
)@@G@@IL CONDITIONS. THEY CAN HAVE EITHER BRANCH SENSE:     @G@@@@.   A) IF WHSY
)@@G@@ILE/VARY CODE WILL FOLLOW, UNTIL SUCCESS LEAPS TO ATEND     @E@@@@.   B)SZ
)@@G@@ IF NOT (A), THEN UNTIL FAILURE LEAPS TO TOP OF LOOP  @[@@@@.     @H@@@@TA
)@@G@@UNORG                                 . MARK ORIGIN OF UNTIL TESTS, IF ATB
)@@G@@NY    @G@@@@UN        EQU       G$FLAG(K,6)     . GET INDEX INTO P OF UNTC
)@@G@@TIL SPECS   @B@@@@ DO UN=0 , GO G$$Z30                  .   @G@@@@KILL  TD
)@@G@@    EQU       G$CTR(7)**G$FLAG(K,7) . ON IF SURPRESSING ALL CODE  @G@@@@TE
)@@G@@G$CTR*(2) EQU       G$CTR(2)+G$FLAG(K,5) . APPLY UNTIL SURPRESS FLOAT   TF
)@@G@@@F@@@@G$CTR*(4) EQU       G$CTR(4)+KILL     . COUNT SURPRESSED UNTIL    TG
)@@G@@@E@@@@ DO KILL , GO G$$Z30                   . AND FORGET THE REST@F@@@@TH
)@@G@@UNN       EQU       (P(UN+1)=1)**(P(UN+1,1)=NOT) . SET NOT FLAG   @I@@@@TI
)@@G@@UNC       EQU       (P(UN+UNN+2)=1)**((P(UN+UNN+2,1)=OR)++(P(UN+UNN+2,1)TJ
)@@G@@=AND)) .    @D@@@@  G$$TST UN+UNN+1,UNC,DFER--UNN G$LABL(K,1+9*DFER)    TK
)@@G@@@[@@@@.     @A@@@@. CLOSE DANGLING OTHERWISE/UNTIL    @[@@@@.     @#@@@@TL
)@@G@@G$$Z30*   NAME    @G@@@@G$FLAG*(K,5) EQU    UNORG-$           . GET FLOATM
)@@G@@T FOR SURPRESSED UNTIL  @E@@@@ DO G$FLAG(K,14) , I$ 074,04,,,,G$LABL(K,1TN
)@@G@@) . JUMP TO TOP   @F@@@@G$CTR*(2) EQU       G$CTR(2)+G$FLAG(K,14) . FLOATO
)@@G@@T FOLLOWING CODE  @E@@@@G$FLAG*(K,14) EQU   0                 . REMEMBERTP
)@@G@@ WE DID THIS@[@@@@.     @G@@@@. HANDLE WHILE CONDITIONS.  THESE CAN BE STQ
)@@G@@URPRESSED OR CAN BRANCH TWO   @F@@@@. WAYS; FORTUNATELY, THE BRANCH SENSTR
)@@G@@E IS KNOWN ON PASS 1 (LL):    @F@@@@.  A) IF <VARY> CODE FOLLOWS, THEN WTS
)@@G@@HILE FAILURE JUMPS TO ATEND   @D@@@@.  B) IF NOT (A), WHILE SUCCESS JUMPTT
)@@G@@S TO TOP OF LOOP  @[@@@@.     @F@@@@G$LABL*(K,7)  EQU   $        . MARK TU
)@@G@@START OF BOTTOM-OF-LOOP WHILE @B@@@@. NOTE: IF WHILE EXISTS, ITS ALWAYS TV
)@@G@@SPEC 1@B@@@@WYNOT     EQU       (P(2)=1)**(P(2,1)=NOT)@H@@@@WC        EQTW
)@@G@@U       ((P(3+WYNOT,1)=OR)++(P(3+WYNOT,1)=AND))**(P(3+WYNOT)=1)   @G@@@@TX
)@@G@@ DO (G$FLAG(K,4)>0)**1-G$FLAG(K,15) , ; IF EXISTS AND NOT SURPRESSED-   TY
)@@G@@@D@@@@        G$$TST 2+WYNOT,WC,LL=WYNOT G$LABL(K,2+7*LL)   @F@@@@G$CTR*TZ
)@@G@@(4) EQU       G$CTR(4)+G$FLAG(K,15) . COUNT SURPRESSED WHILE@H@@@@G$CTR*UA
)@@G@@(2) EQU       G$CTR(2)+G$FLAG(K,18) . APPLY WHILE SURPRESSION FLOAT     UB
)@@G@@@[@@@@.     @^@@@@. GENERATE <VARY> CODE  @[@@@@.     @F@@@@G$LABL*(K,8)UC
)@@G@@  EQU   $        . MARK START OF BOTTOM OF LOOP VARY  @H@@@@ DO G$CTR(6)UD
)@@G@@ ,G$FLAG*(K,7) EQU G$FLAG(K,7)++(G$FLAG(K,1)>0) . NOTE SIDE EFFEC @D@@@@UE
)@@G@@ DO LL , G$$LGE G$FLAG(K,1),G$FLAG(K,3) G$LABL(K,3)   @[@@@@.     @G@@@@UF
)@@G@@ DO G$CTR(6) ,G$FLAG*(K,7) EQU G$FLAG(K,7)++SIDE(1) . NOTE SIDE EFFECTS UG
)@@G@@@E@@@@ DO G$CTR(7) , DO (G$LABL(K,9)=$)=0 , G$$DFL G$LABL(K,9) 2  @F@@@@UH
)@@G@@G$LABL*(K,9)  EQU   $         . MARK START OF USER ATEND CODE     @[@@@@UI
)@@G@@.     @C@@@@. END PROCESSING OF LOOP TERMINATION CONDITIONS @[@@@@.     UJ
)@@G@@@D@@@@ DO Y(0,0)=1 , END  . ATEND STATEMENT FINISHES UP HERE@[@@@@.     UK
)@@G@@@ @@@@. CLEANUP FOR ENDREP STATEMENT@[@@@@.     @#@@@@G$$Z50*   NAME    UL
)@@G@@@E@@@@ DO G$CTR(7) , DO (G$LABL(K,10)=$)=0 , G$$DFL G$LABL(K,10) 3@D@@@@UM
)@@G@@G$LABL*(K,10) EQU   $          . SET BLOCK EXIT LABEL @E@@@@G$CTR*(2) EQUN
)@@G@@U       G$FLAG(K,20)      . RESTORE GLOBAL FLOAT@G@@@@G$CTR*(5) EQU  M-1UO
)@@G@@                    . DECREMENT GLOBAL NESTING LEVEL  @C@@@@ DO G$CTR(7)UP
)@@G@@ , END . ON PASS 2, WE'RE DONE HERE @[@@@@.     @E@@@@. ***** PASS 1 ONLUQ
)@@G@@Y: DETERMINE POSITIONING AND OPTIMIZATIONS@[@@@@.     @[@@@@.     @G@@@@UR
)@@G@@. SET FLAGS INDICATING WHETHER USER PUT ANY CODE IN SPECIFIC CLAUSES    US
)@@G@@@[@@@@.     @F@@@@ESCAPP    EQU       G$LABL(K,4)>0     . ON=>ESCAPE STMUT
)@@G@@NT APPEARED @H@@@@RVAC      EQU       G$LABL(K,3)=G$LABL(K,5-ESCAPP) . OUU
)@@G@@N=> NOTHING AFTER REPEAT@H@@@@EVAC      EQU       G$LABL(K,5)=G$LABL(K,6UV
)@@G@@) . ON=> USER ESCAPE CLAUSE VACUOUS @H@@@@UOVAC     EQU       G$LABL(K,6UW
)@@G@@)=G$LABL(K,7)+G$FLAG(K,5) . ON=> NO USER 'OTHER @I@@@@OVAC      EQU     UX
)@@G@@  G$LABL(K,6)=G$LABL(K,7) . ON=> EMPTY OTHERWISE/UNTIL CLAUSE     @H@@@@UY
)@@G@@AVAC      EQU       G$LABL(K,9)=G$LABL(K,10) . ON=> USER ATEND CLAUSE VAUZ
)@@G@@CUOUS @[@@@@.     @F@@@@NOKILL    EQU       G$FLAG(K,7)++1-(RVAC**EVAC**VA
)@@G@@UOVAC**AVAC) .    @[@@@@.     @H@@@@VATBOT    EQU       G$FLAG(K,2)     VB
)@@G@@  . ON=> SOME (OR ALL) <VARY> AT BOTTOM   @H@@@@LOOBOT    EQU       VATBVC
)@@G@@OT++1-OVAC  . ON=> SOME LOOP CODE WILL BE AT BOTTOM   @G@@@@EFOLLO    EQVD
)@@G@@U       LOOBOT++1-AVAC  . ON=> SOMETHING WILL FOLLOW ESCAPE @[@@@@.     VE
)@@G@@@G@@@@. COMPUTE OPTIMUM POSITIONING OF WHILE (CAN BE TOP, BOTTOM, OR BOTVF
)@@G@@H)    @[@@@@.     @G@@@@WHSPEC    EQU       G$FLAG(K,4)>0     . ON IF WHVG
)@@G@@ILE SPECIFICATION GIVEN @H@@@@WONET     EQU       1=G$LABL(K,2)-G$LABL(KVH
)@@G@@,1) . ON => WHILE IS ONE INST AT T  @G@@@@WONEB     EQU       1=G$LABL(KVI
)@@G@@,8)-G$LABL(K,7) . ON => ONE INSTR AT BOT  @[@@@@.     @H@@@@WHIBOT    EQVJ
)@@G@@U       (EFOLLO++1-ESCAPP)**NOKILL . ON=> IF WHILE, ALLOW AT BOTTO@I@@@@VK
)@@G@@WHISBO    EQU       WHSPEC**WHIBOT    . ON => WHILE WILL REALLY APPEAR AVL
)@@G@@T BOTTOM    @H@@@@WHITOP    EQU       (WONET**WONEB**1-VATBOT++1-WHIBOT)VM
)@@G@@**NOKILL . 0N=>ALLOW    @[@@@@.     @F@@@@. SET GLOBAL SURPRESS FLAGS ANVN
)@@G@@D FLOATS FOR WHILE OPTIMIZATION     @[@@@@.     @E@@@@G$FLAG*(K,11) EQU VO
)@@G@@  WHSPEC**1-WHITOP . ON => SURPRESS AT TOP@H@@@@G$FLAG*(K,16) EQU   (G$LVP
)@@G@@ABL(K,1)-G$LABL(K,2))*G$FLAG(K,11) . TOP SURPRESS FLOA@F@@@@G$FLAG*(K,15VQ
)@@G@@) EQU   WHSPEC**1-WHIBOT . ON=> SURPRESS AT BOTTOM    @H@@@@G$FLAG*(K,18VR
)@@G@@) EQU   (G$LABL(K,7)-G$LABL(K,8))*G$FLAG(K,15) . BOT SURPRESS FLOA@[@@@@VS
)@@G@@.     @E@@@@. COMPUTE VARIOUS FLAGS FOR ESCAPE OPTIMIZATION AND CLOSURE VT
)@@G@@@[@@@@.     @F@@@@G$FLAG*(K,19) EQU   LOOBOT++WHISBO    . ON=>LOOP CODE VU
)@@G@@FOLLOWS     @H@@@@G$FLAG*(K,12) EQU   (G$FLAG(K,19)**EVAC=0)**NOKILL . OVV
)@@G@@N=>JUMP TO KEEP GOING   @F@@@@G$FLAG*(K,17) EQU   G$FLAG(K,17)*G$FLAG(K,VW
)@@G@@12) . SET FLOAT TO USE  @F@@@@ DO 1-NOKILL ,G$FLAG*(K,17) EQU ESCAPP*(G$VX
)@@G@@LABL(K,4)-G$LABL(K,5)) .@I@@@@G$FLAG*(K,13) EQU   NOKILL**ESCAPP**G$FLAGVY
)@@G@@(K,12)**(EFOLLO++WHISBO) . CLOSURE FLAG   @[@@@@.     @G@@@@. SET FLAG FVZ
)@@G@@OR GENERATION OF JUMP TO WHILE/VARY AT TOP (INITIAL ENTRY)  @[@@@@.     WA
)@@G@@@H@@@@G$FLAG*(K,10) EQU   (VATBOT++1-WHITOP**WHSPEC)**NOKILL . ON=> GEN WB
)@@G@@ENTRY JUMP  @[@@@@.     @G@@@@. FOR IMMEDIATE JGD LOOPS WE WON'T JUMP. FWC
)@@G@@OR NOW, WE WON'T CHECK FOR    @G@@@@. PRESENCE OF WHILE AT TOP, BUT WILLWD
)@@G@@ TURN OFF THIS OPTIMIZATION IF THERE@G@@@@. IS ANY WHILE AT ALL. IN ADDIWE
)@@G@@TION, ONLY JGD'S NOW SET THE OPTIMIZATION @G@@@@. FLAG, SO THERE WILL BEWF
)@@G@@ NO FLOATING. WHEN TLEM'S AND JMGI'S ARE DONE,  @G@@@@. SURPRESSION OF SWG
)@@G@@OME REGISTER LOAD CODE WILL CAUSE FLOAT WHICH WILL    @C@@@@. NEED TO BEWH
)@@G@@ COMPENSATED FOR AT THIS POINT.     @[@@@@.     @G@@@@CANFAL    EQU     WI
)@@G@@  1-WHSPEC**(G$FLAG(K,21)>0) . ON => WE CAN FALL THRU @H@@@@ DO CANFAL ,WJ
)@@G@@G$FLAG*(K,10) EQU 0       . SO FORGET ABOUT JUMPING TO BOTTOM     @G@@@@WK
)@@G@@ DO 1-CANFAL ,G$FLAG*(K,21) EQU 0     . CLEAR FLAG IF WE CAN'T FALL THRUWL
)@@G@@@[@@@@.     @G@@@@. CLOSE OTHERWISE/UNTIL WITH JUMP IF NOT FOLLOWED BY TWM
)@@G@@ESTS WHICH DO IT  @[@@@@.     @H@@@@UNTOP     EQU       (G$FLAG(K,6)>0)*WN
)@@G@@*(VATBOT++WHSPEC=0) . UNTIL JUMPS TO TOP  @G@@@@G$FLAG*(K,14) EQU   (OVAWO
)@@G@@C**ESCAPP++WHISBO++VATBOT++UNTOP=0)**NOKILL .   @G@@@@G$FLAG*(K,5) EQU GWP
)@@G@@$FLAG(K,5)*(1-NOKILL) . ADJUST UNTIL SURPRESSION FLOAT@[@@@@.     @G@@@@WQ
)@@G@@. SET LC TO REFLECT WHAT IT WILL BE ON PASS 2 BY APPLYING FLOATS TO IT  WR
)@@G@@@[@@@@.     @F@@@@G$FLAG*(K,7) EQU    1-NOKILL          . SET FLAG TO KIWS
)@@G@@LL ALL CODE @H@@@@          RES       G$FLAG(K,5)+G$FLAG(K,10)+G$FLAG(K,WT
)@@G@@16)+G$FLAG(K,17)+ ;     @E@@@@                    G$FLAG(K,13)+G$FLAG(K,WU
)@@G@@14)+G$FLAG(K,18)  @]@@@@        END @C@@@@/.         ******** EXEC REQUEWV
)@@G@@ST GROUP *********@[@@@@.     @[@@@@.     @C@@@@.               ********WW
)@@G@@*********************** @C@@@@.               *                         WX
)@@G@@    * @C@@@@.               *          -READ-$            * @C@@@@.     WY
)@@G@@          *                             * @C@@@@.               ********WZ
)@@G@@*********************** @[@@@@.     @[@@@@.     @#@@@@P       PROC   *1 XA
)@@G@@@#@@@@READ$*  NAME   015@#@@@@READA$*  NAME  042@^@@@@TREAD$*  NAME  010XB
)@@G@@2     @^@@@@AREAD$*  NAME  0166     @^@@@@AREADA$*  NAME 0167     @^@@@@XC
)@@G@@ATREAD$*  NAME 0170     @[@@@@.     @G@@@@ DO (P(0,0)=015)++(P(0,0)=0166XD
)@@G@@) , GO G$$D20 . NO PKT IF READ$,AREAD$    @G@@@@PKTOFF  EQU    (P(0,0)=0XE
)@@G@@102)++(P(0,0)=0170) . OFFSET FOR TREAD$ PACKETS @G@@@@ DO P(1)=0 , GO G$XF
)@@G@@$D10                . IF PKT ADDR NOT GIVEN, GO KLUDGE@[@@@@.     @F@@@@XG
)@@G@@. GENERATE CODE FOR CASE WHERE PACKET ADDR EXPLICITLY GIVEN---    @[@@@@XH
)@@G@@.     @G@@@@        LA,U   A0,$+5                 . GET EOF ADDR (SKIP AXI
)@@G@@FTER READ$) @H@@@@        I$     06,H1,A0,P(1,2),P(1,*1),P(1,1)+PKTOFF .XJ
)@@G@@ STASH IN PACKET (FIELD @G@@@@        I$     026,U,A0,P(1,2),2*P(1,*2)+PXK
)@@G@@(1,*1),P(1,1) . LXM PKT ADR   @E@@@@ GO G$$D99                          XL
)@@G@@  . GO GENERATE THE READ@[@@@@.     @E@@@@. IF PACKET ADDR CAN VARY AT XXM
)@@G@@QT TIME, WE MUST FARBLE A BIT @[@@@@.     @]@@@@G$$D10* NAME@G@@@@      XN
)@@G@@  LXI,U  A0,0,A1                . TEMP SAVE A1 LOWER IN A0 UPPER  @F@@@@XO
)@@G@@        LXM,U  A1,$+7                 . GET ADDR OF EOF RETURN    @E@@@@XP
)@@G@@        SA,H1  A1,PKTOFF,A0           . EOF ADDR TO PACKET  @G@@@@      XQ
)@@G@@  LSSC   A0,18                  . ALIGN OLD A1 LOWER IN A0 LOWER  @E@@@@XR
)@@G@@        LXM,U  A1,0,A0                . RESTORE A1 LOWER    @E@@@@      XS
)@@G@@  SSL    A0,18                  . REALIGN PACKET ADDR @E@@@@ GO G$$D99  XT
)@@G@@                          . THEN GO DO THE ER   @[@@@@.     @D@@@@. GENEXU
)@@G@@RATE CALL FOR IO FUNCTS WHICH DO NOT USE PACKETS@[@@@@.     @]@@@@G$$D20XV
)@@G@@* NAME@G@@@@        LXI,U  A0,$+(P(1)>0)+3        . SET EOF TO SKIP AFTEXW
)@@G@@R READ$     @H@@@@ DO P(1)>0 ,         I$     026,U,A0,P(1,2),2*P(1,*2)+XX
)@@G@@P(1,*1),P(1,1) . LXM BUF@[@@@@.     @]@@@@G$$D99* NAME@D@@@@        ER  XY
)@@G@@   P(0,0)                 . DO THE FUNC   @E@@@@        I$     074,04,,,XZ
)@@G@@,$+2          . NORMAL EXIT HERE    @G@@@@        AA,U   A0,0400000     YA
)@@G@@        . IF EOF, SET LOWORDER SIGN BIT   @]@@@@        END @[@@@@.     YB
)@@G@@@D@@@@/.   ****** UTILITIES FOR CONDITION TESTING *******   @[@@@@.     YC
)@@G@@@F@@@@.     ********************************************************    YD
)@@G@@@F@@@@.     *                                                      *    YE
)@@G@@@F@@@@.     *       G$$CAN : ANALYZE A SIMPLE CONDITION FIELD      *    YF
)@@G@@@F@@@@.     *                                                      *    YG
)@@G@@@F@@@@.     ********************************************************    YH
)@@G@@@[@@@@.     @[@@@@.     @H@@@@. DEFINE ARRAYS FOR OPTIMIZATION OF TYPE 1YI
)@@G@@ TESTS ON REGISTERS INTO TYPE 3     @[@@@@.     @#@@@@          DEF     YJ
)@@G@@@F@@@@G$ALTT(NE)  EQU     NONZ              . NOT EQUAL ZERO IS NONZERO YK
)@@G@@@E@@@@G$ALTT(EQ)  EQU     ZERO              . EQUAL ZERO IS ZERO  @ @@@@YL
)@@G@@G$ALTT(DNE) EQU     DNONZ     @ @@@@G$ALTT(DEQ) EQU     DZERO     @F@@@@YM
)@@G@@G$ALTT(LT)  EQU     NEG               . LESS THAN ZERO IS NEGATIVE@G@@@@YN
)@@G@@G$ALTT(GE)  EQU     POS               . GTR OR EQUAL ZERO IS POSITIVE   YO
)@@G@@@#@@@@Z       PROC   *1 @#@@@@G$$CAN*  NAME     @H@@@@I       EQU    Z(1YP
)@@G@@,1)                 . GET INDEX TO FIELD BEING ANALYZED     @F@@@@K     YQ
)@@G@@  EQU    Z(1,2)                 . GET ITS ORDER IN THE TEST @ @@@@. DETEYR
)@@G@@RMINE TYPE OF CONDITION @ @@@@ DO P(I,2)>0  ,N(1) EQU 1     @ @@@@ DO P(YS
)@@G@@I,2)=IN ,N(1) EQU 2     @A@@@@ DO P(I,2)=IS ,N(1) EQU 3+2*(P(I)=4)@ @@@@YT
)@@G@@ DO P(I)=1    ,N(1) EQU 4     @ @@@@ DO P(I,1)=CHANNEL ,N(1) EQU 6@F@@@@YU
)@@G@@ DO N(1)<1 , G$$EFL 1,1               . E-FLAG IF UNKNOWN TYPE    @F@@@@YV
)@@G@@ DO N(1)<3 , G$$DCU,2 I,3             . DECODE EQUF'D U-SPECS     @[@@@@YW
)@@G@@.     @E@@@@. TRY TO CHANGE TEST TO A MORE OPTIMAL ONE THAN SPECIFIED   YX
)@@G@@@[@@@@.     @H@@@@ DO (N(1)=2)**G$AMPR , GO G$$A10      . REG STATUS NEEYY
)@@G@@DS RELOCATION FUNC &(X) @E@@@@U16     EQU     (P(I,5)<016)++(P(I,4)>0)++YZ
)@@G@@P(I,*3)++P(I,*4)  @E@@@@ DO (N(1)>1)++U16 , GO G$$A30 . VALUE TESTS NEEDZA
)@@G@@ IMMEDIATES @[@@@@.     @D@@@@. IMMEDIATE LE OR GT CAN BE ALTERED TO LT ZB
)@@G@@OR GE...    @[@@@@.     @D@@@@PI3       EQU       P(I,3)            . PIZC
)@@G@@3 IS UFIELD @G@@@@ DO G$MASM=1 ,PI3 EQU $AP(PI3)        . IF MASM, REMOVZD
)@@G@@E RELOCATABLE PART@C@@@@NEGEQU    EQU       (P(I,5)=017)**(PI3>0377777) ZE
)@@G@@@E@@@@OFVAL     EQU       0377777+0400000*((P(I,5)=016)++NEGEQU)  @F@@@@ZF
)@@G@@FUDGE     EQU       ((LT-LE)*(P(I,2)=LE)+(GE-GT)*(P(I,2)=GT))* ;  @F@@@@ZG
)@@G@@                    (PI3<OFVAL) . DON'T OVERFLOW OR CHANGE SIGN   @D@@@@ZH
)@@G@@P**(I,2) EQU        P(I,2)+FUDGE      . ADJUST KEYWORD@F@@@@P**(I,3) EQUZI
)@@G@@        P(I,3)+1-(FUDGE=0) . ADJUST IMMEDIATE VALUE   @F@@@@ DO ((P(I,3)ZJ
)@@G@@=0)**(P(I,4)=0)=0)++(G$ALTT(P(I,2))=0) , GO G$$A30 .  @[@@@@.     @G@@@@ZK
)@@G@@. REGISTER TESTS AGAINST IMMEDIATE ZEROES CAN BECOME CONDITIONAL JUMPS  ZL
)@@G@@@[@@@@.     @C@@@@. BE CAREFUL NOT TO OVEROPTIMIZE IMMEDIATES     @F@@@@ZM
)@@G@@ DO 1-G$AMPR , GO G$$A30 . CANNOT OPTIMIZE WITHOUT & FUNCTION     @G@@@@ZN
)@@G@@ DO G$MASM=0 , DO (&(P(I,3))=-2)=0 , GO G$$A30 . ZERO MUST BE ABSOLUTE  ZO
)@@G@@@G@@@@ DO G$MASM=1 , DO ($BA(P(I,3))=0)=0 , GO G$$A30 . ZERO MUST BE ABSZP
)@@G@@OLUTE @F@@@@P**(I,3)  EQU       G$ALTT(P(I,2))    . GET ALTERNATE KEYWORZQ
)@@G@@D     @I@@@@ DO G$MASM=0 ,P**(I) EQU 3              . FORCE NUMBER OF ARZR
)@@G@@GS (PRUNE AWAY ,,U)     @I@@@@ DO G$MASM=1 ,P**(I,4) $DELETE          . ZS
)@@G@@FORCE NUMBER OF ARGS (PRUNE AWAY ,,U)     @I@@@@ DO G$MASM=1 ,P**(I,5) $ZT
)@@G@@DELETE          . FORCE NUMBER OF ARGS (PRUNE AWAY ,,U)     @C@@@@ GO G$ZU
)@@G@@$A20          . GO FINISH UP THE FARBLING @[@@@@.     @G@@@@. TYPE 2 CONZV
)@@G@@DITION TESTS ON A-REGS CAN BECOME CONDITIONAL JUMPS, TOO.   @[@@@@.     ZW
)@@G@@@#@@@@G$$A10*   NAME    @G@@@@ DO P(I)>3 , GO G$$A30                . DOZX
)@@G@@N'T OPTIMIZE EQUF'D CORE LOCNS@I@@@@REG       EQU       P(I,3)          ZY
)@@G@@  . GET REG FROM  <KEYWORD>,IN,<REG> FORMAT     @G@@@@ DO G$MASM=1 , DO ZZ
)@@G@@($BA(REG)=0)=0 , GO G$$A30 . MUST BE AN ABSOLUTE VALUE@G@@@@ DO G$MASM=0AA
)@@G@@ , DO (&(REG)=-2)=0 , GO G$$A30  . MUST BE AN ABSOLUTE VALUE@G@@@@ DO (RAB
)@@G@@EG<A0)++(REG>A15) , GO G$$A30   . MAKE SURE ITS WITHIN AREG RANGE @H@@@@AC
)@@G@@P**(I,3)  EQU       P(I,1)            . FORCE CONDITION KEYWORD INTO SPEAD
)@@G@@C3    @F@@@@P**(I,1)  EQU       REG               . THEN MOVE REG INTO SAE
)@@G@@PEC1  @[@@@@.     @I@@@@G$$A20*   NAME                        . FINISH FAF
)@@G@@UDGING  <AREG>,IS,<KEYWORD> TEST    @E@@@@P**(I,2)  EQU       IS        AG
)@@G@@        . CRAM IN THE KEYWORD @G@@@@N(1)      EQU       3               AH
)@@G@@  . AND MARK THIS AS A TYPE 3 TEST  @[@@@@.     @#@@@@G$$A30*   NAME    AI
)@@G@@@F@@@@J(1)    EQU    P(I,G$KSF(N(1)))       . GET FUNC KEYWORD VALUE    AJ
)@@G@@@H@@@@ DO DTH ,J(1) EQU G$IV(N(1),J(1))     . FLIP IF DEMORGAN'S THEOREMAK
)@@G@@ IN EFFECT  @F@@@@ DO J(1)<1 , G$$EFL 1,2               . E-FLAG IF UNKNAL
)@@G@@OWN KEYWORD @F@@@@NI$*(K) EQU    G$FJ(N(1),J(1))        . NO OF INSTRS GAM
)@@G@@ENERATED    @D@@@@WA$*(K) EQU    G$WS(N(1),J(1))        . WAITING STATUSAN
)@@G@@@G@@@@KE$*(K) EQU    J(1)                   . EXTERNALIZE FUNC KEYWORD VAO
)@@G@@AL    @F@@@@TP$*(K) EQU    N(1)                   . EXTERNALIZE TYPE OF AP
)@@G@@TEST  @]@@@@        END @[@@@@.     @[@@@@.     @[@@@@.     @F@@@@.     AQ
)@@G@@********************************************************    @F@@@@.     AR
)@@G@@*                                                      *    @F@@@@.     AS
)@@G@@*  G$$COD : GENERATE CODE FOR A SIMPLE CONDITION TEST  *    @F@@@@.     AT
)@@G@@*                                                      *    @F@@@@.     AU
)@@G@@********************************************************    @[@@@@.     AV
)@@G@@@[@@@@.     @#@@@@Q       PROC   *2 @I@@@@G$$COD*  NAME                 AW
)@@G@@        . PF'S: FIELD-INDEX,TEST-INDEX,WAIT-VAL FA    @F@@@@I       EQU AX
)@@G@@   Q(1,1)                 . GET FIELD WE'RE SCANNING  @F@@@@NN      EQU AY
)@@G@@   Q(1,2)                 . GET DECODED DATA INDEX    @E@@@@N       EQU AZ
)@@G@@   TP$(NN)                . GET CONDITION TYPE  @[@@@@.     @G@@@@CGISF BA
)@@G@@  EQU    G$FCF(N)=0             . TRUE IF G$FJ=FUNC CODE (ELSE J-S@E@@@@BB
)@@G@@JI(1)   EQU    KE$(NN)                . GET KEYWORD FUNCTION@F@@@@JI(2) BC
)@@G@@  EQU    G$IV(N,JI(1))          . AND KEYWORD OF THE INVERSE@F@@@@WOK   BD
)@@G@@  EQU    Q(1,3)=G$WS(N,JI(1))   . ON IF WAITING STATUS OK   @A@@@@.     BE
)@@G@@---- DECODE OPERAND FIELDS    @G@@@@AAA     EQU    0+(G$ASF(N)>0)*(P(I,GBF
)@@G@@$ASF(N))-A0) . WATCH OUT FOR -0!!!!!@D@@@@JJJ     EQU     CGISF*P(I,5)  BG
)@@G@@        . J DESIGNATOR  @ @@@@XXX     EQU     CGISF*P(I,4)  @C@@@@HI    BH
)@@G@@  EQU     CGISF*(2*P(I,*4)+P(I,*3)) .     @G@@@@U18     EQU     (JJJ>015BI
)@@G@@)**(XXX=0)**(N<3)**(HI=0) . ON=>18 BIT U-FIELD  @C@@@@UUU     EQU    CGIBJ
)@@G@@SF*P(I,3)+(1-CGISF)*Q(2,1)    @G@@@@SIDE**(1) EQU SIDE(1)++(N=5)++(HI>0)BK
)@@G@@  . ON IF TEST HAS SIDE EFFECTS     @G@@@@ DO G$FJ(N,JI(1),1)>077 , GO GBL
)@@G@@$$G10   . CHECK FOR ASYMMETRIC INSTRUCTION@[@@@@.     @G@@@@. PROCESS SYBM
)@@G@@MMETRIC TESTS (FOR WHICH AN INVERSE MACHINE INSTR EXISTS)   @[@@@@.     BN
)@@G@@@G@@@@JIU     EQU    JI(2-WOK)              . GET INDEX OF OPCODE WE'LL BO
)@@G@@USE   @G@@@@NUMINS  EQU    G$FJ(N,JIU)            . GET NO OF INSTRS TO BP
)@@G@@GENERATE    @E@@@@K DO     NUMINS ,FUN(K) EQU G$FCF(N)+CGISF*G$FJ(N,JIU,BQ
)@@G@@K)    @E@@@@K DO     NUMINS ,JAY(K) EQU JJJ+(1-CGISF)*G$FJ(N,JIU,K)     BR
)@@G@@@G@@@@K DO     NUMINS*(1-U18) , I$ FUN(K),JAY(K),AAA,XXX,HI,UUU . GENERABS
)@@G@@TE    @F@@@@K DO     NUMINS*U18 , G$$IMU FUN(K),JAY(K),AAA,XXX,UUU . IMMBT
)@@G@@EDIAT @F@@@@REVER**(1) EQU G$FJ(N,JI(1))*G$FJ(N,JI(2))=1 . SET REVERSIBLBU
)@@G@@E FLAG@G@@@@ DO REVER(1)++WOK=0 , I$ 074,04,,,,$+2 . WATCHOUT FOR NON-REBV
)@@G@@VERSIBLES   @H@@@@ DO 1 , END                           . FOR STANDARD IBW
)@@G@@NSTRS, ITS ALL OVER HERE@[@@@@.     @F@@@@. PROCESS ASYMMETRIC INSTRS (FBX
)@@G@@OR WHICH NO SINGLE INVERSE EXISTS)  @[@@@@.     @]@@@@G$$G10* NAME@F@@@@BY
)@@G@@FUN     EQU    G$FJ(N,JI(1),1)        . GET FUNCT-JDESIG VALUE    @E@@@@BZ
)@@G@@ DO FUN=01637 , GO G$$G20             . TEST FOR DTE INSTR  @D@@@@. IF NCA
)@@G@@OT A DTE, THEN INSTRUCTION IS A JUMP OF SORTS   @B@@@@. (EITHER DJZ OR ACB
)@@G@@N I/O CHANNEL TEST)     @H@@@@AREG    EQU    AAA+A0*(FUN>01700)     . FOCC
)@@G@@R CHANNEL INSTRS, USE GIVEN AVALUE  @G@@@@           I$       FUN*/-4,FUCD
)@@G@@N**017,AREG,,,WOK*UUU+(WOK=0)*($+2) .     @ @@@@ DO WOK=0 , I$ 074,04,,,CE
)@@G@@,UUU  @]@@@@ DO 1 , END @B@@@@. HERE WE HANDLE THE DOUBLE TEST EQUAL -  CF
)@@G@@@]@@@@G$$G20* NAME@D@@@@           I$       FUN*/-4,FUN**017,AAA,XXX,HI,CG
)@@G@@UUU . @ @@@@ DO WOK=0 , I$ 074,04,,,,$+2  @]@@@@        END @[@@@@.     CH
)@@G@@@[@@@@.     @F@@@@.     ************************************************CI
)@@G@@********    @F@@@@.     *                                               CJ
)@@G@@       *    @F@@@@.     *  G$$TST : DRIVER FOR SIMPLE AND COMPOUND COND CK
)@@G@@TESTS  *    @F@@@@.     *                                               CL
)@@G@@       *    @F@@@@.     ************************************************CM
)@@G@@********    @[@@@@.     @[@@@@.     @#@@@@R       PROC   *2 @H@@@@G$$TSTCN
)@@G@@*  NAME                         . PF'S: FIELD-IN-P,COMPOUND-FLAG,INVERT CO
)@@G@@@I@@@@                              . IF NO JUMP-EXIT GIVEN, G$TLBL(TTL)CP
)@@G@@+1 IS USED (LINE I@H@@@@TTL     EQU    G$CTR(4)+1             . COUNT THCQ
)@@G@@IS REFERENCE TO THIS PROCEDURE@F@@@@ORIG                                CR
)@@G@@  . REMEMBER WHERE WE STARTED @G@@@@G$CTR**(4) EQU  TTL                 CS
)@@G@@  . BUMP NO OF CALLS TO THIS PROC   @D@@@@G$TLBL**(TTL) EQU G$TLBL(TTL)+CT
)@@G@@G$CTR(2) . FOLD IN FLOAT@F@@@@LIF     EQU    R(2)=0                 . ONCU
)@@G@@ IF LINEITEM FORMAT     @E@@@@FA(1)   EQU    R(2,1)+LIF*(G$TLBL(TTL)+1) CV
)@@G@@. SET FALSE EXIT  @G@@@@DTH     EQU    R(1,3)                 . ON => USCW
)@@G@@E DEMORGAN'S THEOREM FOR@I@@@@                                      . WHCX
)@@G@@ICH CAUSES G$$CAN TO INVERT THE SENSE     @[@@@@.     @F@@@@ DO R(1,2) ,CY
)@@G@@ GO G$$T10                . GO DO COMPOUND CONDITION  @[@@@@.     @B@@@@CZ
)@@G@@. CODE GENERATION FOR SIMPLE CONDITIONS   @[@@@@.     @F@@@@        G$$CDA
)@@G@@AN R(1,1),1               . ANALYZE THE (SINGLE) FIELD@H@@@@ DO WA$(1)>1DB
)@@G@@ , GO G$$T01              . CHECK FOR TEST INSTR TO GE GENN'D     @D@@@@DC
)@@G@@        G$$COD R(1,1),1,0 FA(1)       . JUMP TO FALSE @C@@@@ GO G$$T99  DD
)@@G@@                          . AND QUIT@[@@@@.     @H@@@@G$$T01* NAME      DE
)@@G@@                    . HERE IF SIMPLE CONDITION IS A TEST    @I@@@@      DF
)@@G@@  G$$COD R(1,1),1,2+LIF         . SKIP IF: TRUE (IF-ELSE) FALSE (LINEITEDG
)@@G@@M)    @F@@@@ DO 1-LIF , I$ 074,04,,,,FA(1)        . JUMP TO FALSE (IF-ELDH
)@@G@@SE)   @]@@@@ GO G$$T99  @[@@@@.     @[@@@@.     @G@@@@G$$T10* NAME      DI
)@@G@@                    . COMPOUND CONDITIONS COME HERE   @[@@@@.     @H@@@@DJ
)@@G@@K DO     2 ,II(K) EQU R(1,1)+2*(K=2)  . SET FIELD INDICES FOR SIMPLE CONDK
)@@G@@DS    @E@@@@K DO     2 , G$$CAN II(K),K           . ANALYZE BOTH FIELDS DL
)@@G@@@H@@@@K DO     2 ,IX(K) EQU K+(WA$(2)<WA$(1))*(3-2*K) . ORDER SO 2ND IS DM
)@@G@@HIGHER WAIT @H@@@@.  DO WA$(1)=WA$(2) ,K DO 2 ,IX(K) EQU K+(NI$(2)>NI$(1DN
)@@G@@))*(3-2*K) . NOT NOW    @G@@@@WOVR    EQU    (WA$(1)>1)+(WA$(2)>1)  . DEDO
)@@G@@TERMINE OVERALL WAIT TYPE     @G@@@@ DO (P(R(1,1)+1,1)=AND)=1-DTH , GO GDP
)@@G@@$$T20 . IF AND-CONDITION, GO DO IT  @[@@@@.     @C@@@@. GENERATE OPTIMIZDQ
)@@G@@ED CODE FOR OR-CONDITIONS     @[@@@@.     @^@@@@ DO WOVR>0 , GO G$$T11  DR
)@@G@@@ @@@@. COME HERE FOR JUMP-JUMP     @E@@@@        G$$COD II(IX(1)),IX(1)DS
)@@G@@,1 G$TLBL(TTL) . JUMP IF TRUE @D@@@@        G$$COD II(IX(2)),IX(2),0 FA(DT
)@@G@@1) . JUMP IF FALSE@]@@@@ GO G$$T99  @]@@@@G$$T11* NAME@^@@@@ DO WOVR>1 ,DU
)@@G@@ GO G$$T13  @ @@@@. COME HERE FOR TEST-JUMP     @[@@@@.     @F@@@@. NOTEDV
)@@G@@ THAT THIS IS THE ONLY CASE IN WHICH WE GENERATE A TEST     @E@@@@. OVERDW
)@@G@@ A JUMP, AND IS THUS THE ONLY PLACE WE NEED TO CHECK  @F@@@@. WHETHER THDX
)@@G@@E JUMP INSTRUCTION HAS A SINGLE-INSTRUCTION INVERSE   @[@@@@.     @G@@@@DY
)@@G@@ DO (WA$(IX(1))=0)++(G$FJ(TP$(IX(1)),KE$(IX(1)),1)<0100) , GO G$$T12    DZ
)@@G@@@ @@@@. OOPS, WE'RE IN HOT WATER--  @E@@@@        G$$COD II(IX(1)),IX(1)EA
)@@G@@,1 G$TLBL(TTL) . JUMP IF TRUE @I@@@@        G$$COD II(IX(2)),IX(2),2+LIFEB
)@@G@@  . SKIP IF: TRUE (IF-ELSE) FALSE (LINEITEM     @F@@@@ DO 1-LIF , I$ 074EC
)@@G@@,04,,,,FA(1)        . JUMP TO FALSE (IF-ELSE)   @]@@@@ GO G$$T99  @ @@@@ED
)@@G@@. TEST OVER JUMP IS LEGAL --  @]@@@@G$$T12* NAME@D@@@@        G$$COD II(EE
)@@G@@IX(2)),IX(2),2      . SKIP IF TRUE  @D@@@@        G$$COD II(IX(1)),IX(1)EF
)@@G@@,0 FA(1) . JUMP IF FALSE@]@@@@ GO G$$T99  @]@@@@G$$T13* NAME@ @@@@. COMEEG
)@@G@@ HERE TO DO TEST-TEST   @H@@@@ DO LIF , GO G$$T14                   . DIEH
)@@G@@FFERENT STUFF IF LINE ITEM FORMAT   @D@@@@        G$$COD II(IX(1)),IX(1)EI
)@@G@@,3      . SKIP IF FALSE @D@@@@        I$     074,04,,,,G$TLBL(TTL)  . JUEJ
)@@G@@MP TO TRUE  @D@@@@        G$$COD II(IX(2)),IX(2),2      . SKIP IF TRUE  EK
)@@G@@@D@@@@        I$     074,04,,,,FA(1)        . JUMP TO FALSE @]@@@@ GO G$EL
)@@G@@$T99  @[@@@@.     @H@@@@G$$T14* NAME                          . THIS IS EM
)@@G@@TEST-TEST IN LINE ITEM FORMAT @ @@@@ DO NI$(IX(1))>1 , GO G$$T15  @ @@@@EN
)@@G@@. HERE IF TEST 1 IS 1 INSTR   @D@@@@        G$$COD II(IX(2)),IX(2),2    EO
)@@G@@  . SKIP IF TRUE  @D@@@@        G$$COD II(IX(1)),IX(1),3      . SKIP IF EP
)@@G@@FALSE @]@@@@ GO G$$T99  @[@@@@.     @]@@@@G$$T15* NAME@ @@@@ DO NI$(IX(2EQ
)@@G@@))>1 , GO G$$T16  @C@@@@. HERE IF 1ST TEST IS MORE THAN ONE INSTRUCTION ER
)@@G@@@D@@@@        G$$COD II(IX(1)),IX(1),2      . SKIP IF TRUE  @D@@@@      ES
)@@G@@  G$$COD II(IX(2)),IX(2),3      . SKIP IF FALSE @]@@@@ GO G$$T99  @]@@@@ET
)@@G@@G$$T16* NAME@B@@@@. HERE IF BOTH TESTS ARE MULTI-INSTRUCTION@D@@@@      EU
)@@G@@  G$$COD II(IX(1)),IX(1),3      . SKIP IF FALSE @D@@@@        I$     074EV
)@@G@@,04,,,,G$TLBL(TTL)  . JUMP TO TRUE  @D@@@@        G$$COD II(IX(2)),IX(2)EW
)@@G@@,3      . SKIP IF FALSE @]@@@@ GO G$$T99  @[@@@@.     @[@@@@.     @A@@@@EX
)@@G@@. GENERATE TESTS FOR AND-CONDITIONS @[@@@@.     @]@@@@G$$T20* NAME@[@@@@EY
)@@G@@.     @^@@@@ DO WOVR>0 , GO G$$T21  @ @@@@. GENERATE CODE FOR JUMP-JUMP EZ
)@@G@@@D@@@@        G$$COD II(IX(1)),IX(1),0 FA(1) . JUMP IF FALSE@D@@@@      FA
)@@G@@  G$$COD II(IX(2)),IX(2),0 FA(1) . JUMP IF FALSE@]@@@@ GO G$$T99  @[@@@@FB
)@@G@@.     @]@@@@G$$T21* NAME@^@@@@ DO WOVR>1 , GO G$$T23  @ @@@@. COME HERE FC
)@@G@@FOR TEST-JUMP     @D@@@@        G$$COD II(IX(1)),IX(1),0 FA(1) . JUMP IFFD
)@@G@@ FALSE@I@@@@        G$$COD II(IX(2)),IX(2),2+LIF  . SKIP IF: TRUE (IF-ELFE
)@@G@@SE) FALSE (LINEITEM     @F@@@@ DO 1-LIF , I$ 074,04,,,,FA(1)        . JUFF
)@@G@@MP TO FALSE (IF-ELSE)   @]@@@@ GO G$$T99  @[@@@@.     @F@@@@G$$T23* NAMEFG
)@@G@@                          . THIS PLACE FOR TEST-TEST  @I@@@@ DO LIF , GOFH
)@@G@@ G$$T26                   . SPECIAL EASIER STUFF IN LINEITEM FORMAT     FI
)@@G@@@ @@@@ DO NI$(IX(1))>1 , GO G$$T24  @ @@@@. HERE IF TEST 1 IS 1 INSTR   FJ
)@@G@@@D@@@@        G$$COD II(IX(2)),IX(2),3      . SKIP IF FALSE @D@@@@      FK
)@@G@@  G$$COD II(IX(1)),IX(1),2      . SKIP IF TRUE  @D@@@@        I$     074FL
)@@G@@,04,,,,FA(1)        . JUMP TO FALSE @]@@@@ GO G$$T99  @[@@@@.     @]@@@@FM
)@@G@@G$$T24* NAME@ @@@@ DO NI$(IX(2))>1 , GO G$$T25  @C@@@@. HERE IF 1ST TESTFN
)@@G@@ IS MORE THAN ONE INSTRUCTION @D@@@@        G$$COD II(IX(1)),IX(1),3    FO
)@@G@@  . SKIP IF FALSE @D@@@@        G$$COD II(IX(2)),IX(2),2      . SKIP IF FP
)@@G@@TRUE  @D@@@@        I$     074,04,,,,FA(1)        . JUMP TO FALSE @]@@@@FQ
)@@G@@ GO G$$T99  @]@@@@G$$T25* NAME@B@@@@. HERE IF BOTH TESTS ARE MULTI-INSTRFR
)@@G@@UCTION@D@@@@        G$$COD II(IX(1)),IX(1),2      . SKIP IF TRUE  @D@@@@FS
)@@G@@        I$     074,04,,,,FA(1)        . JUMP TO FALSE @D@@@@        G$$CFT
)@@G@@OD II(IX(2)),IX(2),2      . SKIP IF TRUE  @D@@@@        I$     074,04,,,FU
)@@G@@,FA(1)        . JUMP TO FALSE @]@@@@ GO G$$T99  @[@@@@.     @I@@@@G$$T26FV
)@@G@@* NAME                          . TEST-TEST IN LINE ITEM FORMAT (MUCH SIFW
)@@G@@MP    @D@@@@        G$$COD II(IX(1)),IX(1),2      . SKIP IF TRUE  @D@@@@FX
)@@G@@        I$     074,04,,,,FA(1)        . JUMP TO FALSE @D@@@@        G$$CFY
)@@G@@OD II(IX(2)),IX(2),3      . SKIP IF FALSE @[@@@@.     @]@@@@G$$T99* NAMEFZ
)@@G@@@F@@@@ DO $=ORIG , G$$EFL 1,1               . BOMBOUT IF NOTHING DONE   GA
)@@G@@@F@@@@ DO G$CTR(7) , DO (G$TLBL(TTL)=$)=0 ,  G$$DFL G$TLBL(TTL) 0,0777  GB
)@@G@@@F@@@@G$TLBL**(TTL) EQU   $           . RELEVANT ON GLOBAL PASS 1 ONLY  GC
)@@G@@@]@@@@        END @E@@@@/.  ******* UTILITIES FOR GENERATION OF LOOP CONGD
)@@G@@TROLS ******@[@@@@.     @[@@@@.     @F@@@@. SELECTION OF THE INSTRUCTIONGE
)@@G@@ TO BE USED TO CONTROL THE LOOP IS: @E@@@@.    1) JGD    IF LOOP TERMINAGF
)@@G@@TES AT 0 AND STEP IS -1, OR   @E@@@@.              LOOP IS FOR A SPECIFIGG
)@@G@@ED NUMBER OF TIMES.     @E@@@@.    2) JMGI   IF LOOP TERMINATES AT 0 ANDGH
)@@G@@ STEP IS NOT -1.  @D@@@@.    3) TLEM   IF LOOP TERMINATES AT OTHER THAN GI
)@@G@@ZERO. @[@@@@.     @D@@@@. POSITIONING OF THE LOOP CONTROL INSTRUCTION ISGJ
)@@G@@:     @A@@@@.    1) JGD    ALWAYS AT THE BOTTOM @F@@@@.    2) JMGI   AT GK
)@@G@@BOTTOM (SO JUMP DESTINATION CONTINUES IN THE    @F@@@@.              LOOGL
)@@G@@P), IF INCREMENT NEGATIVE (LOOP SENSE DOWN),    @E@@@@.              I.EGM
)@@G@@. VALUES OF LOOP CONTROL VARIABLE ARE >0 .@A@@@@.              AT TOP OTGN
)@@G@@HERWISE     @F@@@@.    3) TLEM   AT BOTTOM (SO SKIP CAUSES EXIT FROM LOOGO
)@@G@@P) WHEN     @E@@@@.              INCREMENT IS POSITIVE (LOOP SENSE UP), GP
)@@G@@I.E.  @F@@@@.              TERMINATION CONDITION IS APPROACHED FROM BELOGQ
)@@G@@W.    @F@@@@.              BECAUSE OF LACK OF SIGN EXTENSION, THIS HOLDSGR
)@@G@@ RE-  @F@@@@.              GARDLESS OF THE SIGN OF THE LOOP VARIABLE ITSGS
)@@G@@ELF.  @[@@@@.     @G@@@@. NOTE: IF THE SIGN OF THE INCREMENT IS UNKNOWN GT
)@@G@@(JMGI/TLEM), THE CODE   @G@@@@. TO VARY THE LOOP CONTROL VARIABLE WILL BGU
)@@G@@E DUPLICATED AT BOTH TOP AND  @F@@@@. BOTTOM, WITH AN EXECUTE-TIME TEST GV
)@@G@@(SIGN JUMP) AT THE BOTTOM TO  @A@@@@. DETERMINE WHICH IS TO BE USED.    GW
)@@G@@@[@@@@.     @G@@@@. TO ENFORCE THE REQUIREMENT THAT THE LOOP CONTROL REGGX
)@@G@@ISTER CONTAIN     @F@@@@. THE FROM/TO VALUES ON THE FIRST AND LAST TIMESGY
)@@G@@ THROUGH THE LOOP,@D@@@@. TLEM TESTS AT THE TOP ARE SURROUNDED BY AX ANDGZ
)@@G@@ ANX  @F@@@@. OF THE INCREMENT. IN THE GENERAL CASE, THERE IS NO WAY TO HA
)@@G@@AVOID @G@@@@. THIS. IN THE FUTURE, WE WILL ALLOW THE USER TO SURPRESS ITHB
)@@G@@, AND/OR    @G@@@@. IN THE CASE WHERE THE CONTROL FIELDS ARE IMMEDIATE, HC
)@@G@@GENERATE SLIGHTLY @C@@@@. DIFFERENT CODE WHICH WILL MAKE IT UNNECESSARY.HD
)@@G@@@[@@@@.     @F@@@@.     ************************************************HE
)@@G@@********    @F@@@@.     *                                               HF
)@@G@@       *    @F@@@@.     *   G$$LAN : ANALYZE A <LOOP CONTROL> SPECIFICATHG
)@@G@@ION    *    @F@@@@.     *                                               HH
)@@G@@       *    @F@@@@.     ************************************************HI
)@@G@@********    @[@@@@.     @G@@@@.    FLAGS SET BY THIS SUBROUTINE ARE USEDHJ
)@@G@@ BY CALLING ROUTINE (REPEAT)  @^@@@@.    THEIR MEANINGS ARE:@D@@@@.     HK
)@@G@@  FI(1)  INDEX IN IMAGE OF 'FOR' SPECIFICATION  @C@@@@.       FI(2)  INDHL
)@@G@@EX IN IMAGE OF 'FROM' SPEC    @G@@@@.       FI(3)  INDEX OF 'TO' SPEC ('HM
)@@G@@VARY'), OR 'MASKED' SPEC ('LOOKFOR')@G@@@@.       FI(4)  INDEX OF 'BY' SHN
)@@G@@PEC. NOTE THAT IF USER DIDN'T GIVE ONE,   @C@@@@.              WE FORCE HO
)@@G@@IT BY STORING IN P(X,Y) @G@@@@.       FI(5)  ON IF ANY LOOP CONTROL CODEHP
)@@G@@ IS TO APPEAR AT THE PHYSICAL @B@@@@.              BOTTOM OF THE LOOP COHQ
)@@G@@DE    @F@@@@.       FI(6)  ON IF SENSE OF LOOP CTL VARIABLE (UP\DOWN) ISHR
)@@G@@ KNOWN@D@@@@.              ('VARY'), OR OFFSET VALUE ('LOOKFOR')  @F@@@@HS
)@@G@@.       FI(7)  INDEX IN P OF LAST FIELD SCANNED BY THIS ROUTINE   @[@@@@HT
)@@G@@.     @F@@@@. THE ARRAYS IM(K) AND IV(K) ARE USED INTERNALLY FOR THE ANAHU
)@@G@@LYZED @H@@@@. PARAMETERS OF THE LOOP SPECIFICATION. IM IS ON IF THE VALUHV
)@@G@@E IS IMMEDIATE,   @G@@@@. AND IV IS THE VALUE ITSELF. K=1,2,3,4=> FORVALHW
)@@G@@, FROMVAL, TOVAL, BYVAL.@[@@@@.     @[@@@@.     @H@@@@        PROC   *0 HX
)@@G@@                    . NOTE: ONE-PASS PROC FLAG REQUIRED     @#@@@@G$$LANHY
)@@G@@*  NAME     @[@@@@.     @H@@@@W(1)    EQU    KW(1)                  . GEHZ
)@@G@@T KEYWORD WHICH DESCRIBES FIELD     @[@@@@.     @E@@@@.       ***** BREAIA
)@@G@@K DOWN SOURCE IMAGE, SET DEFAULTS *****   @[@@@@.     @B@@@@. SCAN ALL FIB
)@@G@@IELDS FOR DEFINING KEYWORDS   @[@@@@.     @E@@@@K3      EQU    MASKED*(WIC
)@@G@@(1)=LOOKFOR)+TO*((W(1)=LOOKFOR)=0)  @G@@@@FI*(1)  EQU    VI+(P(VI+1,1)=FID
)@@G@@OR)+2*(P(VI+2,1)=FOR)+3*(P(VI+3,1)=FOR)   @G@@@@FI*(2)  EQU    VI+(P(VI+IE
)@@G@@1,1)=FROM)+2*(P(VI+2,1)=FROM)+3*(P(VI+3,1)=FROM)@D@@@@FI*(3)  EQU    VI+IF
)@@G@@(P(VI+1,1)=K3)+2*(P(VI+2,1)=K3)+;   @B@@@@        3*(P(VI+3,1)=K3)+4*(P(IG
)@@G@@VI+4,1)=K3) @F@@@@FI*(4)  EQU    VI+(P(VI+1,1)=BY)+2*(P(VI+2,1)=BY)+3*(PIH
)@@G@@(VI+3,1)=BY)@G@@@@FI*(7)  EQU    FI(4)                  . INITIALIZE LASII
)@@G@@T FIELD POINTER   @H@@@@I DO     3 , DO FI(I)>FI(7) ,FI*(7) EQU FI(I) . IJ
)@@G@@FIND LAST FIELD USER GAVE US  @I@@@@LF(1)   EQU    0+P                  IK
)@@G@@  . SET INDEX OF LAST FIELD + 1 IN CASE OF D    @[@@@@.     @C@@@@. DEFAIL
)@@G@@ULT A MISSING 'TO' SPECIFICATION TO ZERO  @[@@@@.     @G@@@@ DO (K3=MASKIM
)@@G@@ED)++(FI(3)>VI) , GO G$$L01 . IF 'TO' EXPLICIT, SKIP THIS   @H@@@@FI*(3)IN
)@@G@@  EQU    LF(1)                  . FORCE IT INTO THE NEXT AVAIL SUBFIELD IO
)@@G@@@E@@@@P*(FI(3),1) EQU TO                    . SET ITS KEYWORD     @F@@@@IP
)@@G@@P*(FI(3),4) EQU XU                    . MAKE IT AN IMMEDIATE ZERO @G@@@@IQ
)@@G@@LF(1)   EQU    LF(1)+1                . BUMP NEXT USABLE FIELD POINTER  IR
)@@G@@@G@@@@G$$L01* NAME                          . END OF DEFAULT FOR 'TO' FIIS
)@@G@@ELD   @[@@@@.     @F@@@@. 'BY' FIELD (IF GIVEN) IS VARIABLE LENGTH. FORCIT
)@@G@@E TO FIXED FORMAT @C@@@@. BY MOVING UP/DOWN/OFFSET TO THE FIFTH SUBFIELDIU
)@@G@@@[@@@@.     @F@@@@ DO FI(4)=VI , GO G$$L02              . IF 'BY' OMITTEIV
)@@G@@D, SKIP THIS@E@@@@ DO P(FI(4),4)=U ,P*(FI(4),4) EQU XU . FORCE SIGN EXTEIW
)@@G@@NSION @F@@@@NB      EQU    0+P(FI(4))             . NO OF SPECS IN 'BY' IX
)@@G@@FIELD @H@@@@ DO G$MASM=0 , DO (P(FI(4),NB)>0)++(NB=5) , GO G$$L02 . NOTHIY
)@@G@@ING TO ADJUST     @H@@@@ DO G$MASM=1 , DO ($AP(P(FI(4),NB))>0)++(NB=5) ,IZ
)@@G@@ GO G$$L02 . NOTHING TO ADJUST@G@@@@P*(FI(4),5) EQU P(FI(4),NB)         JA
)@@G@@  . FORCE UP DOWN OFFSET TO FIELD 5 @F@@@@P*(FI(4),NB) EQU 0            JB
)@@G@@        . AND RESET WHEREVER IT WAS @H@@@@G$$L02* NAME                  JC
)@@G@@        . END KEYWORD FARBLING FOR 'BY' FIELD   @[@@@@.     @G@@@@. NOTEJD
)@@G@@:  THE CODE BELOW WILL GENERATE (USUALLY) SPURIOUS R-FLAGS IF     @F@@@@JE
)@@G@@. THE FIELDS BEING EXAMINED ARE EXTERNAL (I.E. U-FLAGGED) EVEN    @F@@@@JF
)@@G@@. THOUGH WE ARE STRIPPING OFF FIELDS WHICH HAVE NO RELOCATION (THE@E@@@@JG
)@@G@@. X AND J FIELDS), AND EVEN THOUGH THE PORTION OF UV WHICH  @F@@@@. MAY JH
)@@G@@CARRY RELOCATION (THE U-FIELD) IS NOT MASKED AT THE POINT   @A@@@@. OF IJI
)@@G@@TS USE. <EXPLETIVE DELETED>   @[@@@@.     @D@@@@          ON        G$MAJJ
)@@G@@SM=0          . BEGIN ASM CODE@[@@@@.     @D@@@@. PUT ALL FIELDS IN STANJK
)@@G@@DARD FORM TO HANDLE EQUF'S    @[@@@@.     @E@@@@I DO     4 , DO FI(I)>VIJL
)@@G@@ ,UV(I) EQU ; COMBINE ALL FIELDS    @G@@@@ +(I$ 0,P(FI(I),4),0,P(FI(I),3JM
)@@G@@),2*P(FI(I),*3)+P(FI(I),*2),P(FI(I),2))   @[@@@@.     @F@@@@I DO     4 ,JN
)@@G@@ DO P(FI(I),2)>0777777 ; IF THE USER EQUF'D THE SYMBOL@E@@@@        ,IM(JO
)@@G@@I) EQU 07017000000**(G$NOFO UV(I))=07000000000  @F@@@@I DO     4 , DO P(JP
)@@G@@FI(I),2)<01000000 ; IF HE DIDN'T EQUF IT ..     @H@@@@        ,IM(I) EQUJQ
)@@G@@ (P(FI(I),3)=0)**(016=P(FI(I),4)**016) . CHECK FOR EXPLICI  @E@@@@I DO  JR
)@@G@@   4 , DO IM(I)**(P(FI(I),2)<01000000) ; IF NOT EQUF'D@F@@@@        ,IV(JS
)@@G@@I) EQU P(FI(I),2)         . USE THE VALUE HE GAVE     @F@@@@I DO     4 ,JT
)@@G@@ DO IM(I)**(P(FI(I),2)>0777777) ; BUT IF HE EQUF'D IT @G@@@@        ,IV(JU
)@@G@@I) EQU + (G$NOFO UV(I)**G$UMSK) . PRAY ITS NOT EXTERNAL     @H@@@@I DO  JV
)@@G@@   4 , DO IV(I)>0377777 ,IV(I) EQU IV(I)++0777777000000 . SIGN EXTEND   JW
)@@G@@@I@@@@I DO 2 ,APIV(I+1) EQU IV(I+1)         . FUDGE ABSOLUTE PART FOR LAJX
)@@G@@TER MASM TESTS    @E@@@@          OFF                         . END OF AJY
)@@G@@SM CODE     @[@@@@.     @E@@@@          ON        G$MASM=1          . BEJZ
)@@G@@GIN MASM CODE     @[@@@@.     @F@@@@I         $REPEAT   4               KA
)@@G@@  . DO ALL THIS FOR I=1,2,3,4 @G@@@@APU       EQU       $AP(P(FI(I),2)) KB
)@@G@@  . STRIP U-FIELD OF RELOCATION     @[@@@@.     @D@@@@. PUT ALL FIELDS IKC
)@@G@@N STANDARD FORM TO HANDLE EQUF'S    @[@@@@.     @C@@@@ DO FI(I)>VI ,UV(IKD
)@@G@@) EQU ; COMBINE ALL FIELDS    @G@@@@ +(I$ 0,P(FI(I),4),0,P(FI(I),3),2*P(KE
)@@G@@FI(I),*3)+P(FI(I),*2),P(FI(I),2))   @G@@@@APUV      EQU       $AP(UV(I))KF
)@@G@@        . APUV IS ABSOLUTE PART OF UV(I)  @[@@@@.     @E@@@@IM(I) EQU APKG
)@@G@@U>0777777-> ; . IF THE USER EQUF'D THE SYMBOL   @H@@@@ 07017000000**(G$NKH
)@@G@@OFO APUV)=07000000000! ; THEN SET TRUE IF 'U' AND NO XDESIG @I@@@@ (P(FIKI
)@@G@@(I),3)=0)**(016=P(FI(I),4)**016) . ELSE SET TRUE IF EXPLICIT 'U', NO XREKJ
)@@G@@G     @D@@@@IV(I) EQU IM(I)**(APU<01000000)-> ;   . IF NOT EQUF'D @F@@@@KK
)@@G@@       P(FI(I),2)! ;      . USE THE VALUE HE GAVE IN SUBFIELD 2   @F@@@@KL
)@@G@@    + (G$NOFO APUV**G$UMSK)           . ELSE PRAY ITS NOT EXTERNAL@H@@@@KM
)@@G@@ DO $AP(IV(I))>0377777 ,IV(I) EQU -(0777777-IV(I)) . SIGN EXTEND (IF NEEKN
)@@G@@DED)  @G@@@@APIV(I)   EQU       $AP(IV(I))        . NO RELOCATION FOR LAKO
)@@G@@TER TESTS.  @F@@@@          $ENDR                       . END OF $REPEATKP
)@@G@@ STRUCTURE  @E@@@@          OFF                         . END OF MASM COKQ
)@@G@@DE    @[@@@@.     @E@@@@. APIV(2) AND APIV(3) ARE NON-RELOCATABLE EQUIVAKR
)@@G@@LENTS OF    @D@@@@. IV(2...3) FOR USE BY MASM IN COMPARISONS OF THE FORMKS
)@@G@@@C@@@@. IV(2)>IV(3). WHEN USING @ASM, APIV(I)=IV(I).  @E@@@@. ***NOTE***KT
)@@G@@ WE ASSUME THAT IV(I) WILL NOT BE UPDATED PRIOR @A@@@@. TO THE USE OF APKU
)@@G@@IV(I), FOR I=2,3  @[@@@@.     @[@@@@.     @F@@@@. DEFAULT A MISSING 'BY'KV
)@@G@@ SPECIFICATION TO +-1, DEPENDING UPON     @F@@@@. THE SIGN OF TO-FROM, AKW
)@@G@@ND/OR THE USER'S UP/DOWN/OFFSET SPEC.     @[@@@@.     @[@@@@.     @H@@@@KX
)@@G@@ DO FI(4)>VI , GO G$$L03              . SKIP THIS IF USER GAVE THIS FIELKY
)@@G@@D     @F@@@@FI*(4)  EQU    LF(1)                  . REMEMBER WHERE ITS GKZ
)@@G@@OING  @H@@@@ DO (W(1)=VARY)++(W(1)=LOOKFOR)=0 , GO G$$L03 . SKIP FOR SPELA
)@@G@@CIFIC LOOP TYPE   @F@@@@IV(4)   EQU    1                      . INITIAL LB
)@@G@@ASSUMPTION IS +1  @G@@@@ DO ((W(1)=LOOKFOR)=0)**IM(2)**IM(3)  ; UNLESS WLC
)@@G@@E KNOW TO-FROM VALUES   @F@@@@        ,IV(4) EQU 1-2*(APIV(2)>APIV(3))  LD
)@@G@@. THEN USE SIGN OF DIFF @G@@@@ DO (IV(4)=1)**(P(FI(4),5)=DOWN) ,IV(4) EQLE
)@@G@@U -1 . MAKE IMPLICIT EXPLICIT @F@@@@P*(FI(4),2) EQU     IV(4)           LF
)@@G@@  . SAVE FOR USE BY GENERATOR @D@@@@P*(FI(4),4) EQU XU  . MAKE SURE HE KLG
)@@G@@NOWS ITS IMMEDIATE@E@@@@UV(4)   EQUF   IV(4),,XU              . MARK IT LH
)@@G@@AS IMMEDIATE@G@@@@IM(4)   EQU    1                      . AND TURN ON THLI
)@@G@@E IMMEDIATE FLAG  @G@@@@G$$L03* NAME                          . END DEFALJ
)@@G@@ULT PROCESSING OF 'BY'  @G@@@@ DO P(FI(4),5)=0 ,P*(FI(4),5) EQU P(VI,3) LK
)@@G@@. SET USER'S SIGN, IF ANY     @[@@@@.     @[@@@@.     @F@@@@ DO (W(1)=LOLL
)@@G@@OKFOR)=0 , GO G$$L30      . IF NOT LOOKFOR, GO DO VARY@[@@@@.     @[@@@@LM
)@@G@@.     @G@@@@.       ***** PROCESS 'LOOKFOR' LOOP (I.E. SEARCH, MASKED SELN
)@@G@@ARCH) ***** @[@@@@.     @H@@@@FI*(5)  EQU    0                      . FLLO
)@@G@@AG NO CODE APPEARS AT THE BOTTOM    @[@@@@.     @A@@@@. LOAD MASK AND RELP
)@@G@@PEAT REGISTERS    @[@@@@.     @G@@@@ DO (FI(3)>VI)**(P(FI(3))>1) , I$ 02LQ
)@@G@@3,,2,,,UV(3) . LOAD MASK REG (R2)   @F@@@@ DO FI(1)>VI , I$ 023,,1,,,UV(LR
)@@G@@1)      . AND REPEAT COUNT (R1)     @[@@@@.     @A@@@@. INITIALIZE REG ULS
)@@G@@SED AS TABLE INDEX@[@@@@.     @H@@@@ DO (P(FI(4),5)=OFFSET)**1-IM(4) , GLT
)@@G@@$$EFL 2,1 . OFFSET NEEDS IMMEDIATE BY     @F@@@@OFV     EQU    IM(4)*(P(LU
)@@G@@FI(4),5)=OFFSET)*IV(4) . SET OFFSET VALUE @H@@@@FI*(6)  EQU    OFV      LV
)@@G@@              . AND SAVE FOR USE BY CODE GENERATOR    @E@@@@ DO FI(2)=VILW
)@@G@@ , END                    . IF NO 'FROM', QUIT  @H@@@@ DO FI(4)=VI , G$$LX
)@@G@@EFL 2,2                 . REQUIRE THAT A 'BY' SPEC APPEARED @H@@@@ DO IMLY
)@@G@@(2)**IM(4) , GO G$$L21          . IF BOTH IMMEDIATE, GO USE CONSTANT    LZ
)@@G@@@D@@@@        I$     027,,P(VI,2),,,UV(2)   . LX XN,FROM    @F@@@@ DO OFMA
)@@G@@V=0 , I$ 046,,P(VI,2),,,UV(4)   . IF NO OFFSET, LXI XN,BY   @C@@@@ DO OFMB
)@@G@@V=0 , END                       . AND QUIT@G@@@@ DO P(VI,2)>X11 , AH P(VMC
)@@G@@I,2),(+OFV,-OFV) . IF OVERLAPPED, ADD OFFSET IN @H@@@@ DO P(VI,2)<A0 , AMD
)@@G@@NX,U P(VI,2),OFV    . IF NONOVERLAPPED, USE BRUTE FORCE     @B@@@@ DO P(ME
)@@G@@VI,2)<A0 , LXI,U P(VI,2),OFV    .   @D@@@@ DO 1 , END                   MF
)@@G@@        . THEN GET OUT  @I@@@@G$$L21* NAME                          . COMG
)@@G@@ME HERE IF FROM AND BY BOTH IMMEDIATE     @G@@@@        I$     027,,P(VIMH
)@@G@@,2),,,(+IV(4),IV(2)-OFV) . LOAD XREG FROM CONS  @]@@@@ DO 1 , END @[@@@@MI
)@@G@@.     @F@@@@.       ****** PROCESS 'VARY' (NORMAL LOOP) SPECIFICATION **MJ
)@@G@@***   @[@@@@.     @G@@@@G$$L30* NAME                          . MARK STAMK
)@@G@@RT OF VARY CHECKING     @[@@@@.     @F@@@@ORIGOP     EQU      +W(1)     ML
)@@G@@        . REMEMBER ORIGINAL OPCODE  @[@@@@.     @G@@@@ DO FI(1)>VI , GO MM
)@@G@@G$$L34              . IF 'FOR', ASSUME JGD IMMEDIATELY@F@@@@ DO IM(2)**IMN
)@@G@@M(3)**IM(4)=0 , GO G$$L35 . NO FUDGE IF ALL NOT KNOWN @D@@@@ DO (APIV(2)MO
)@@G@@>0)**(IV(3)=0)**(IV(4)=-1)=0 , GO G$$L35  @G@@@@FI*(1)  EQU    FI(2)    MP
)@@G@@              . PUT 'FOR' IN P WHERE 'FROM' WAS @F@@@@FI*(2)  EQU    VI MQ
)@@G@@                    . AND INVALIDATE THE 'FROM' @G@@@@IV(1)   EQU    IV(MR
)@@G@@2)+1                . FORVAL IS ONE MORE THAN FROMVAL @G@@@@IM(1)   EQU MS
)@@G@@   1                      . TURN ON IMMEDIATE 'FOR' FLAG    @D@@@@UV(1) MT
)@@G@@  EQUF   IV(1),,XU              . AND SET U-SPEC@D@@@@G$$L34* NAME      MU
)@@G@@                    . SET OPCODE JGD@G@@@@W(1)    EQU    0+JGD          MV
)@@G@@        . ADD ZERO TO OVERRIDE OPCODE EQU @G@@@@ GO G$$L39              MW
)@@G@@              . THEN GO GLOBALIZE THE OPCODE    @F@@@@.                 MX
)@@G@@            OP CAN'T BE JGD, MUST BE TLEM\JMGI  @]@@@@G$$L35* NAME@G@@@@MY
)@@G@@ DO (VARY=ORIGOP)=0 , GO G$$L40       . SKIP IF OPCODE EXPLICITLY GIVEN MZ
)@@G@@@G@@@@ DO (FI(2)=VI)++(FI(3)=VI)++(FI(4)=VI) , G$$EFL 2,3 . REQUIRE ALL NA
)@@G@@SPECS @D@@@@W(1)    EQU    0+TLEM                 . ASSUME TLEM   @F@@@@NB
)@@G@@ DO IM(3)**(IV(3)=0) ,W(1) EQU 0+JMGI . UNLESS TO IMMEDIATE ZERO  @[@@@@NC
)@@G@@.     @I@@@@G$$L39* NAME                          . END DETERMINATION OFND
)@@G@@ INSTR SPECIFICATION    @F@@@@P*(VI,1) EQU   W(1)                   . FONE
)@@G@@RCE OPCODE SPEC FIELD   @G@@@@ DO (VARY=ORIGOP)++(W(1)=ORIGOP)=0 , G$$EFNF
)@@G@@L 2,011 . OPCODE MISMATCH     @[@@@@.     @G@@@@.        SET LOOP SENSE NG
)@@G@@AND FLAG IF CODE AT BOTTOM OF LOOP REQUIRED     @[@@@@.     @]@@@@G$$L40NH
)@@G@@* NAME@F@@@@ DO (W(1)=JGD)=0 , GO G$$L41          . IF NOT JGD, WE MUST NI
)@@G@@FARBLE@F@@@@FI*(6)  EQU    1                      . ELSE MARK SENSE KNOWNJ
)@@G@@N     @I@@@@FI*(5)  EQU    1                      . SET FLAG THAT CODE WNK
)@@G@@ILL APPEAR AT BOTTOM    @D@@@@ GO G$$L49                            . ANNL
)@@G@@D WE'RE DONE@[@@@@.     @F@@@@. COMPUTE SIGN/SENSE FOR JMGI, TLEM LOOPS,NM
)@@G@@ AND CHECK TERMINATION  @[@@@@.     @H@@@@G$$L41* NAME                  NN
)@@G@@        . NOT JGD, DETERMINE SENSE THE HARD WAY @H@@@@USS     EQU    (P(NO
)@@G@@FI(4),5)=UP)-(P(FI(4),5)=DOWN) . SET USER SUPPLIED SIGN     @D@@@@BYS   NP
)@@G@@  EQU    IM(4)*(1-2*(IV(4)<0))  . SIGN FROM 'BY'@G@@@@FTS     EQU    (IMNQ
)@@G@@(2)**IM(3))*(1-2*(APIV(2)>APIV(3))) . FROMTO SIGN     @G@@@@ DO FTS*BYS=NR
)@@G@@-1 , G$$EFL 2,5               . N.G. IF SIGNS DON'T AGREE   @E@@@@MYS   NS
)@@G@@  EQU    FTS+BYS                . GET MY OWN SIGN FLAG@F@@@@ DO MYS*USS=NT
)@@G@@-1 , G$$EFL 2,6               . BETTER AGREE WITH HIS @F@@@@SIGN    EQU NU
)@@G@@   MYS+USS                . GET THE SIGN WE'LL USE    @F@@@@FI*(6)  EQU NV
)@@G@@   (SIGN=0)=0             . ON IF WE KNOW LOOP SENSE  @H@@@@P*(VI,3) EQUNW
)@@G@@   SIGN                   . REMEMBER FOR BOTTOM OF LOOP USAGE     @F@@@@NX
)@@G@@FI*(5) EQU (SIGN=0)++(W(1)=TLEM)**(SIGN>0)++(W(1)=JMGI)**(SIGN<0) @[@@@@NY
)@@G@@.     @G@@@@. WATCH OUT FOR AX/ANX: TERMINATION CONDITION MAY NOT PASS TNZ
)@@G@@HRU ZERO    @[@@@@.     @G@@@@ DO 1-((W(1)=TLEM)**IM(2)**IM(3)**IM(4)) ;OA
)@@G@@ UNLESS TLEM AND IMMEDIATE... @E@@@@    , GO G$$L49                     OB
)@@G@@  . DON'T DO THIS TEST  @E@@@@VV(1)      EQU      IV(2)             . SEOC
)@@G@@T UP START VAL    @E@@@@VV(2)      EQU      IV(3)+IV(4)       . AND TERMOD
)@@G@@INATION VAL @D@@@@          ON        G$MASM=0          . BEGIN ASM CODEOE
)@@G@@@G@@@@  DO G$AMPR                           ; IF RELOCATION CAN BE DETEROF
)@@G@@MINED @F@@@@    ,VK DO 2                          ; THEN FOR BOTH FROM AOG
)@@G@@ND TO @F@@@@      , DO 1-(&(VV(VK))=-2)           ; IF VALUE NOT ABSOLUTOH
)@@G@@E     @F@@@@        ,VV(VK) EQU VV(VK)+01000      . FUDGE FOR ITS RELOCAOI
)@@G@@TION  @E@@@@VK DO 2                               ; FOR BOTH LIMITS...  OJ
)@@G@@@G@@@@  ,VV(VK) EQU (1-(VV(VK)=0))*(1-2*(VV(VK)<0)) . SIGN FLAG => -1, 0OK
)@@G@@, +1  @F@@@@ DO VV(1)*VV(2)<1 , G$$EFL 2,4        . LOOP PASSES TO/THRU OL
)@@G@@ZERO  @E@@@@          OFF                         . END OF ASM CODE     OM
)@@G@@@E@@@@          ON        G$MASM=1          . BEGIN MASM CODE     @G@@@@ON
)@@G@@  DO G$AMPR                           ; IF RELOCATION CAN BE DETERMINED OO
)@@G@@@F@@@@    ,VK DO 2                          ; THEN FOR BOTH FROM AND TO OP
)@@G@@@F@@@@      , DO 1-($BA(VV(VK))=0)          ; IF VALUE NOT ABSOLUTE     OQ
)@@G@@@F@@@@        ,VV(VK) EQU VV(VK)+01000      . FUDGE FOR ITS RELOCATION  OR
)@@G@@@E@@@@VK DO 2                               ; FOR BOTH LIMITS...  @H@@@@OS
)@@G@@  ,VV(VK) EQU (1-(VV(VK)=0))*(1-2*($AP(VV(VK))<0)) . SIGN FLAG => -1, 0,OT
)@@G@@ +1   @G@@@@ DO $AP(VV(1))*$AP(VV(2))<1 , G$$EFL 2,4 . LOOP PASSES TO/THOU
)@@G@@RU ZERO     @E@@@@          OFF                         . END OF MASM COOV
)@@G@@DE    @[@@@@.     @H@@@@G$$L49*    NAME                       . END SENSOW
)@@G@@E/PREFERENCE DETERMINATION    @[@@@@.     @F@@@@. SIGN EXTEND NEGATIVE EOX
)@@G@@QUFS TO GET 18-BIT NEGATIVE IMMEDIATES.   @[@@@@.     @D@@@@I DO 3 , DO OY
)@@G@@(IM(I+1)=1)**(IV(I+1)<0) ; . FOR 2,3,4    @G@@@@ ,UV(I+1)   EQUF      *IOZ
)@@G@@V(I+1),*0,XU  . IF NEG IMMED, SET HI BITS=1     @[@@@@.     @C@@@@. GENEPA
)@@G@@RATE REGISTER INITIAL LOAD CODE, IF ANY   @[@@@@.     @I@@@@IMOP      EQPB
)@@G@@U       G$FLAG(K,21)>0    . IMMEDIATE OPTIMIZE FLAG (ZERO ON PASS 1)    PC
)@@G@@@H@@@@ DO FI(1)=VI , GO G$$L51              . IF 'FOR' NOT GIVEN, GO DO PD
)@@G@@FROM/BY     @G@@@@RR      EQU    027*(P(VI,2)<A4)+023*(P(VI,2)>R1-1) . OPE
)@@G@@PCODE IF X/R REG  @B@@@@RA      EQU    077**(0+P(VI,2)-(RR=0)*A0) @G@@@@PF
)@@G@@        I$     RR+010*(RR=0),,RA,,,UV(1)-IMOP . LOAD COUNT REGISTER     PG
)@@G@@@G@@@@G$FLAG**(K,21) EQU IM(1)              . SET IMMEDIATE OPTIMIZATIONPH
)@@G@@ FLAG @F@@@@ DO 1 , END                           . END OF REG LOAD GENEPI
)@@G@@RATION@[@@@@.     @H@@@@G$$L51* NAME                          . HERE TO PJ
)@@G@@LOAD REG USING FROM/BY SPECS  @G@@@@ DO FI(2)=VI , END                  PK
)@@G@@  . NO LOAD IF 'FROM' FIELD ABSENT  @G@@@@ DO FI(4)=VI , G$$EFL 2,7     PL
)@@G@@            . ERROR IF 'FROM' BUT NO 'BY' @[@@@@.     @C@@@@. IF 'BY' NOPM
)@@G@@T IMMEDIATE, GEN 3 INSTRUCTIONS:    @C@@@@.   LX XR,FROM  ;  ANX XR,(BY)PN
)@@G@@  ;  LXI XR,(BY)  @E@@@@. IF 'BY' AND 'FROM' ARE IMMED, GEN:  LX XR,(BY,PO
)@@G@@FROM-BY)    @D@@@@. IF 'BY' AND LOOP CNTRL REG IS OVERLAPPED AREG, GEN: PP
)@@G@@@F@@@@.   LX AR,(BY,BY)  ;  AH AR,(FROM)    . IF 'FROM' NOT IMMEDIATE   PQ
)@@G@@@H@@@@. NOTE: IF LOOP REG IS NON-OVERLAPPED REG WE MUST GEN BRUTE FORCE PR
)@@G@@(3 INSTRS)  @G@@@@. WE CANNOT GEN (AX XR,(FROM) ) BECAUSE OF OVERFLOW INPS
)@@G@@TO INCREMENT,     @E@@@@. E.G. (1,-1) + (2) = (2,0) , NOT (1,1). SURPRISPT
)@@G@@E, CHIEF!   @[@@@@.     @I@@@@ DO IM(4)=0 , GO G$$L52               . IFPU
)@@G@@ 'BY' NOT IMMEDIATE, CANT USE LITERAL     @H@@@@ DO (W(1)=JMGI)**IM(2)**PV
)@@G@@1-G$FLAG(K,4) ; IF IMMEDIATE JMGI WITHOUT 'WHILE'     @G@@@@ , DO IV(4)<PW
)@@G@@0 , GO G$$L53             . AND DECREASING, GO OPTIMIZE     @G@@@@ DO IMPX
)@@G@@(2) , LX P(VI,2),(+IV(4),0+IV(2)-IV(4)) . LX XR,(STEP,FROM-STEP)  @H@@@@PY
)@@G@@ DO IM(2) , END                       . IF 'FROM' AND 'BY' ARE IMMED, DOPZ
)@@G@@NE    @G@@@@ DO P(VI,2)<A0 , GO G$$L52            . IF NOT OVERLAP, BRUTQA
)@@G@@E FORCE     @F@@@@        LX     P(VI,2),(+IV(4),0-IV(4)) . LX XR,(STEP,QB
)@@G@@FROM-STEP)  @G@@@@        AH     P(VI,2),UV(2)          . AH FROMVAL (OVQC
)@@G@@ERLAP ONLY!!!)    @]@@@@ DO 1 , END @D@@@@G$$L52*   NAME                QD
)@@G@@        . BRUTE FORCE.  @E@@@@        LX     P(VI,2),UV(2)          . LXQE
)@@G@@ WITH FROMVAL     @H@@@@        ANX    P(VI,2),UV(4)          . ANX STEPQF
)@@G@@ TO COMPENSATE FOR INCR AT TOP@G@@@@        LXI    P(VI,2),UV(4)        QG
)@@G@@  . LXI STEP TO SET UP INCREMENT    @F@@@@ DO 1 , END                   QH
)@@G@@        . END OF REG INITIALIZATION @[@@@@.     @G@@@@G$$L53* NAME      QI
)@@G@@                    . OPTIMIZE IMMEDIATE JMGI LOOPS   @E@@@@        LX  QJ
)@@G@@    P(VI,2),(+IV(4),IV(2)) . LOAD (+BY,FROM)    @G@@@@G$FLAG**(K,21) EQUQK
)@@G@@  1                   . TURN ON OPTIMIZATION FLAG     @]@@@@        END QL
)@@G@@@[@@@@.     @[@@@@.     @F@@@@.     ************************************QM
)@@G@@********************    @F@@@@.     *                                   QN
)@@G@@                   *    @F@@@@.     *   G$$LGE : GENERATE CODE FOR <LOOPQO
)@@G@@ CONTROL> FIELDS   *    @F@@@@.     *                                   QP
)@@G@@                   *    @F@@@@.     ************************************QQ
)@@G@@********************    @[@@@@.     @[@@@@.     @I@@@@Q       PROC   *2 QR
)@@G@@                    . PF'S: 'VARY','TO','BY'  JUMPTARG,TOP/BOT    @#@@@@QS
)@@G@@G$$LGE*  NAME     @G@@@@VI      EQU    Q(1,1)                 . INDEX INQT
)@@G@@ P OF VARY SPEC FIELD   @E@@@@TI      EQU    Q(1,2)                 . INQU
)@@G@@DEX OF 'TO' FIELD @E@@@@BI      EQU    Q(1,3)                 . INDEX OFQV
)@@G@@ 'BY' FIELD @E@@@@F       EQU    P(VI,1)                . FUNCTION REQUEQW
)@@G@@STED  @H@@@@ATTOP     EQU       Q(2,2)            . ON IF BEING CALLED AQX
)@@G@@T TOP OF LOOP     @[@@@@.     @G@@@@ DO F=LOOKFOR , GO G$$L80           QY
)@@G@@  . SPECIAL HANDLING FOR SEARCHING  @F@@@@ DO F=JGD , G$$FJA 070,P(VI,2)QZ
)@@G@@,,,Q(2,1) . JUMP TO KEEP LOOPING    @G@@@@ DO F=JGD , END               RA
)@@G@@        . FOR JGD, THAT'S ALL THERE IS    @[@@@@.     @#@@@@. TLEM/JMGI RB
)@@G@@---   @[@@@@.     @E@@@@JMF     EQU    F=JMGI                 . TRUE IF RC
)@@G@@FUNC IS JMGI@G@@@@OLAP    EQU    P(VI,2)>X11            . ON IF LOOP CTLRD
)@@G@@ REG IS OVERLAPPED@G@@@@SENU    EQU    (P(VI,3)=0)**(ATTOP=0) . ON AT BORE
)@@G@@TTOM AND UNKNOWN SENSE  @[@@@@.     @G@@@@ DO SENU**1-OLAP , I$ 060+JMF,RF
)@@G@@,,,,P(VI,2) . TP(TLEM) TN(JMGI) ON REG    @H@@@@ DO SENU , I$ 074,04-OLARG
)@@G@@P*(JMF+1),0+OLAP*(P(VI,2)-A0),,,G$LABL(K,2) . J JN JP @[@@@@.     @C@@@@RH
)@@G@@ DO JMF , GO G$$L70 . JMGI LOOPS ARE SIMPLE     @E@@@@PTI2      EQU     RI
)@@G@@  P(TI,2)           . 'TO' FIELD UFIELD   @E@@@@PBI2      EQU       P(BIRJ
)@@G@@,2)           . 'BY' FIELD UFIELD   @F@@@@ DO G$MASM=1 ,PTI2 EQU $AP(PTIRK
)@@G@@2)      . JUST THE ABSOLUTE PART    @F@@@@ DO G$MASM=1 ,PBI2 EQU $AP(PBIRL
)@@G@@2)      . JUST THE ABSOLUTE PART    @G@@@@TUHI    EQU    3*(PTI2<0)+2*P(RM
)@@G@@TI,*3)+P(TI,*2) . T-FLAG IF ALL ARE ON    @D@@@@TU      EQU    + (I$ 0,PRN
)@@G@@(TI,4),,P(TI,3),TUHI,P(TI,2)) @G@@@@BUHI    EQU    3*(PBI2<0)+2*P(BI,*3)RO
)@@G@@+P(BI,*2) . T-FLAG IF ALL ARE ON    @D@@@@BU      EQU    + (I$ 0,P(BI,4)RP
)@@G@@,,P(BI,3),BUHI,P(BI,2)) @F@@@@ DO ATTOP , I$ 074,06,0,P(VI,2),2,0   . ATRQ
)@@G@@ TOP AX INCR WITH A NOP @E@@@@          I$        047,,P(VI,2),,,TU . TLRR
)@@G@@EM ON 'TO' FIELD  @B@@@@        I$     074,04,,,,Q(2,1) . JUMP    @G@@@@RS
)@@G@@ DO ATTOP , I$ 025,,P(VI,2),,,BU      . UNDO FUDGE WITH ANX OF INCR     RT
)@@G@@@E@@@@ DO 1 , END                           . THAT'S ALL FOR TLEM @[@@@@RU
)@@G@@.     @C@@@@. HANDLE JMGI LOOPS (WHICH TERMINATE AT ZERO)   @[@@@@.     RV
)@@G@@@#@@@@G$$L70*   NAME    @F@@@@ DO ATTOP , I$ 051,017,0,P(VI,2),,0 . TNZ RW
)@@G@@REG (LAST TIME CHECK)   @B@@@@ DO ATTOP , I$ 074,04,,,,Q(2,1)       .   RX
)@@G@@@C@@@@        I$     074,012,P(VI,2),,,Q(2,1) . JMGI  @#@@@@ DO 1 , END RY
)@@G@@.     @[@@@@.     @F@@@@. HANDLE SEARCH/MASKED SEARCH. NOTE: SINCE THIS RZ
)@@G@@IS ALWAYS CALLED  @E@@@@. AT THE PHYSICAL TOP OF THE LOOP BY REPEAT, THESA
)@@G@@ VALUES OF  @B@@@@. THE ARRAY FI(N) ARE ALWAYS AVAILABLE    @[@@@@.     SB
)@@G@@@]@@@@G$$L80* NAME@H@@@@IC      EQU    VI-1                   . INDEX INSC
)@@G@@ P OF CONDITION TEST FIELD    @H@@@@KWD     EQU    P(IC,2)              SD
)@@G@@  . GET KEYWORD FROM CONDITION SPEC FIELD @F@@@@MSF     EQU    FI(3)>VI SE
)@@G@@              . ON IF SEARCH IS MASKED    @G@@@@FUN     EQU    G$FJ(1,KWSF
)@@G@@D,1)+010*(1-MSF)-052*MSF . MODIFY TO A SEARCH   @G@@@@ DO   MSF , I$ 071SG
)@@G@@,FUN,P(IC,1)-A0,P(VI,2),2+P(IC,*3),P(IC,3)+FI(6) . MS-@H@@@@ DO 1-MSF , SH
)@@G@@I$ FUN,P(IC,5),P(IC,1)-A0,P(VI,2),2+P(IC,*3),P(IC,3)+FI(6) . S-   @E@@@@SI
)@@G@@        I$     074,04,,,,Q(2,1)  . AT NOFIND,  JUMP TO ATEND@[@@@@.     SJ
)@@G@@@]@@@@        END @ @@@@/. *** MISCELLANEOUS UTILITIES@[@@@@.     @H@@@@SK
)@@G@@. PROCS TO CONSERVE TABLE SPACE BY SAVING ARGUMENTS IN RE-USABLE ARRAY SSL
)@@G@@PACE  @[@@@@.     @^@@@@          PROC      *0  @I@@@@G$$SVA* NAME      SM
)@@G@@                    . SAVE ARRAY P IN STANDARD ARGUMENT ARRAY     @F@@@@SN
)@@G@@K         EQU       G$CTR(3)+1        . BUMP ARG PUSHDOWN LEVEL   @D@@@@SO
)@@G@@G$CTR**(3) EQU K                      . SAVE THE LEVEL@^@@@@G$ARGS**(K) SP
)@@G@@EQU +P-1    @A@@@@N DO P-1 ,G$ARGS**(K,N) EQU +0+P(N) @C@@@@N DO P-1 ,M SQ
)@@G@@DO P(N) ,G$ARGS**(K,N,M) EQU +P(N,M)@F@@@@N DO P-1 ,M DO P(N) , DO P(N,*SR
)@@G@@M) ,G$ARGS**(K,N,M) EQU *0+P(N,M) . @#@@@@          END     @[@@@@.     SS
)@@G@@@[@@@@.     @F@@@@. DECODE A U-FIELD INTO ITS CONSTITUENT ELEMENTS. THISST
)@@G@@ PROC USES  @G@@@@. SUBTRACTION TO AVOID SPURIOUS R-FLAGS WHICH MIGHT OTSU
)@@G@@HERWISE ARISE.    @F@@@@. IN ADDITION, IT DOES NOT ALTER THE FORM OF THESV
)@@G@@ ORIGINAL U-FIELD,@F@@@@. SINCE IT IS UNKNOWN WHETHER THE U FIELD ALREADSW
)@@G@@Y HAS FORM OR NOT.@[@@@@.     @]@@@@        DEF @^@@@@G$JBIT(1) EQU 1*/2SX
)@@G@@9     @^@@@@G$JBIT(2) EQU 1*/28     @^@@@@G$JBIT(3) EQU 1*/27     @^@@@@SY
)@@G@@G$JBIT(4) EQU 1*/26     @[@@@@.     @^@@@@G$XBIT(1) EQU 1*/21     @^@@@@SZ
)@@G@@G$XBIT(2) EQU 1*/20     @^@@@@G$XBIT(3) EQU 1*/19     @^@@@@G$XBIT(4) EQTA
)@@G@@U 1*/18     @[@@@@.     @^@@@@G$HIBI(1) EQU 1*/17     @^@@@@G$HIBI(2) EQTB
)@@G@@U 1*/16     @[@@@@.     @D@@@@G$JBITS EQU +(I$ 0,017,,,,0)       . MASK TC
)@@G@@FOR J-DESEG @D@@@@G$XBITS EQU +(I$ 0,,,017,,0)       . MASK FOR X-DESEG TD
)@@G@@@D@@@@G$HBITS EQU +(I$ 0,,,,2,0)         . MASK FOR H-DESEG @[@@@@.     TE
)@@G@@@B@@@@Q       PROC        *2                .   @B@@@@G$$DCU* NAME      TF
)@@G@@                    .   @E@@@@I       EQU     Q(1,1)                . GETG
)@@G@@T FIELD TO SCAN   @G@@@@J       EQU     Q(1,2)                . AND STARTH
)@@G@@TING SUBFIELD (U-SPEC)  @G@@@@N       EQU     Q(0,1)                . LETI
)@@G@@VEL OF P (NO OF ASTERISKS)    @C@@@@. OBTAIN MANIPULATABLE UFIELD FROM MTJ
)@@G@@ASM OR ASM  @D@@@@. NOTE: IF IV(1)<0, THEN IT CAN'T HAVE BEEN EQUF'D    TK
)@@G@@@G@@@@ DO G$MASM , $GO G$$DCU1              . IF @MASM, SKIP ASM FUMBLINTL
)@@G@@G     @[@@@@.     @^@@@@. BEGIN ASM PROCESSING  @[@@@@.     @C@@@@JAY(1)TM
)@@G@@  EQU     0   . ASSUME NO EQUF'D J-SPEC   @C@@@@XRG(1)  EQU     0   . ASTN
)@@G@@SUME NO EQUF'D X-SPEC   @C@@@@HIB(1)  EQU     0   . ASSUME NO EQUF'D HISTO
)@@G@@PEC   @E@@@@IV(1)   EQU     +P(I,J)               . GET INITIAL VALUE   TP
)@@G@@@F@@@@ DO IV(1)>0377777777                  ; IF VALUE HAS EQUF'D J     TQ
)@@G@@@D@@@@  ,K DO 4                             ; FOR ALL J-BITS@E@@@@    , TR
)@@G@@DO (IV(1)-JAY(1))>(G$JBIT(K)-1) ; IF CURRENT BIT ON   @E@@@@       ,JAY(TS
)@@G@@1) EQU JAY(1)++G$JBIT(K)  . FOLD INTO RESULT    @G@@@@IV(1)   EQU     IVTT
)@@G@@(1)-JAY(1)          . STRIP EQUF'D J FROM OPERAND     @E@@@@JAY(1)  EQU TU
)@@G@@    P(I,J+2)++JAY(1)*/-26 . GET COMPLETE J-SPEC @F@@@@ DO IV(1)>0777777 TV
)@@G@@                    ; IF VALUE HAS EQUF'D X     @D@@@@  ,K DO 4         TW
)@@G@@                    ; FOR ALL X-BITS@E@@@@    , DO (IV(1)-XRG(1))>(G$XBITX
)@@G@@T(K)-1) ; IF CURRENT BIT ON   @E@@@@       ,XRG(1) EQU XRG(1)++G$XBIT(K)TY
)@@G@@  . FOLD INTO RESULT    @G@@@@IV(1)   EQU     IV(1)-XRG(1)          . STTZ
)@@G@@RIP EQUF'D X FROM OPERAND     @E@@@@XRG(1)  EQU     P(I,J+1)++XRG(1)*/-1UA
)@@G@@8 . GET COMPLETE X-SPEC @F@@@@U16     EQU     (JAY(1)<016)++(XRG(1)>0)++UB
)@@G@@P(I,*J)++P(I,*J+1) .    @F@@@@ DO IV(1)>0177777                     ; IFUC
)@@G@@ VALUE HAS EQUF'D H OR I@G@@@@  ,K DO 2*U16                         ; FOUD
)@@G@@R BOTH BITS (OF I$ FORM INSTR)@E@@@@    , DO (IV(1)-HIB(1))>(G$HIBI(K)-1UE
)@@G@@) ; IF CURRENT BIT ON   @E@@@@       ,HIB(1) EQU HIB(1)++G$HIBI(K)  . FOUF
)@@G@@LD INTO RESULT    @E@@@@IV(1)   EQU     IV(1)-HIB(1)          . STRIP H UG
)@@G@@AND I BITS  @E@@@@HIB(1)  EQU     HIB(1)*/-16           . ALIGN H AND I UH
)@@G@@BITS  @E@@@@HBIT    EQU     P(I,*J+1)++(HIB(1)*/-1) . SET TRUE H-BIT    UI
)@@G@@@D@@@@IBIT    EQU     P(I,*J)++(HIB(1)**1) . SET TRUE I-BIT @^@@@@. GLOBUJ
)@@G@@ALIZE RESULTS     @F@@@@ DO N=2 , GO G$$DC1                   . CHECK FOUK
)@@G@@R 2 *'S NEEDED    @G@@@@P**(I)   EQU     J+2                   . FORCE NUL
)@@G@@UMBER OF SPECFIELDS     @A@@@@  DO 1-IBIT ,P**(I,J) EQU IV(1)     @A@@@@UM
)@@G@@  DO  IBIT  ,P**(I,J) EQU *IV(1)    @A@@@@  DO 1-HBIT ,P**(I,J+1) EQU XRUN
)@@G@@G(1)  @A@@@@  DO  HBIT  ,P**(I,J+1) EQU *XRG(1) @^@@@@P**(I,J+2) EQU   JUO
)@@G@@AY(1) @]@@@@ DO 1 , END @F@@@@G$$DC1* NAME                           . HUP
)@@G@@ERE IF P IS 2 LEVELS OUT@F@@@@P***(I)  EQU     J+2                  . FOUQ
)@@G@@RCE NUMBER OF SPECFIELDS@A@@@@  DO 1-IBIT ,P***(I,J) EQU IV(1)    @A@@@@UR
)@@G@@  DO  IBIT  ,P***(I,J) EQU *IV(1)   @A@@@@  DO 1-HBIT ,P***(I,J+1) EQU XUS
)@@G@@RG(1) @A@@@@  DO  HBIT  ,P***(I,J+1) EQU *XRG(1)@^@@@@P***(I,J+2) EQU   UT
)@@G@@JAY(1)@]@@@@ DO 1 , END @[@@@@.     @[@@@@.     @^@@@@. BEGIN MASM PROCEUU
)@@G@@SSING @[@@@@.     @E@@@@G$$DCU1* $NAME                        . BEGIN @MUV
)@@G@@ASM CODE    @G@@@@IV      EQU     $AP(P(I,J))           . GET INITIAL VAUW
)@@G@@LUE W/O RELOCATION@E@@@@JAY2    EQU     (IV>0)*(IV**G$JBITS)  . STRIP OFUX
)@@G@@F J-DESEG   @E@@@@JAY1    EQU     P(I,J+2)++JAY2*/-26   . GET COMPLETE JUY
)@@G@@-SPEC @E@@@@XRG2    EQU     (IV>0)*(IV**G$XBITS)  . STRIP OFF X-DESEG   UZ
)@@G@@@E@@@@XRG1    EQU     P(I,J+1)++XRG2*/-18   . GET COMPLETE X-SPEC @E@@@@VA
)@@G@@U16     EQU     (JAY1<016)++(XRG1>0)++P(I,*J)++P(I,*J+1) .  @D@@@@HIB1  VB
)@@G@@  EQU     U16*(IV**G$HBITS)  . STRIP OFF HIDESEG@E@@@@HBIT    EQU     P(VC
)@@G@@I,*J+1)++(HIB1*/-17) . SET TRUE H-BIT     @E@@@@IBIT    EQU     P(I,*J)+VD
)@@G@@+((HIB1*/-16)**1) . SET TRUE I-BIT  @^@@@@. GLOBALIZE RESULTS     @F@@@@VE
)@@G@@          $LEVEL    0,N+1,0           . ADD N+1 STARS TO LABELS   @D@@@@VF
)@@G@@P(I,J)   EQU   [IBIT->'*'!'']P(I,J)-JAY2-XRG2-HIB1  . @A@@@@P(I,J+1) EQUVG
)@@G@@   [HBIT->'*'!'']XRG1 . @^@@@@P(I,J+2) EQU   JAY1     @E@@@@          $LVH
)@@G@@EVEL    0,1,0             . RESET PROPER LEVEL  @D@@@@          END     VI
)@@G@@                    . END OF G$$DCU @[@@@@.     @[@@@@.     @E@@@@. ----VJ
)@@G@@- PATCH UP RETURN ADDR (EXIT INSTR) OF A REMOTE BLOCK @B@@@@.       INVOVK
)@@G@@KED BY 'CALL' AND REMOTE CASES@D@@@@.       SPECS ARE: <BLOCKID>,<BLOK EVL
)@@G@@XIT TARGET ADDR>  @[@@@@.     @E@@@@P          PROC     *1,0            VM
)@@G@@  . DO NOTHING ON PASS 1@G@@@@G$$PRA*    NAME                       . HEVN
)@@G@@RE IF P(1,1) IS ADDR OF BLOK  @H@@@@ DO G$MASM=0 ,P(1,1)   EQU      G$BSVO
)@@G@@EQ(P(1,1)) . USE ITS SERIAL NUMBER INSTEAD@I@@@@ DO G$MASM=1 ,P(1,1)   EVP
)@@G@@QU    G$BSEQ($AP(P(1,1))) . USE ITS SERIAL NUMBER INSTEA    @#@@@@G$$PRBVQ
)@@G@@*    NAME   @F@@@@K          EQU      P(1,1)            . SERIAL NO OF TVR
)@@G@@ARGET BLOCK @G@@@@ISRB       EQU      (K>0)**(G$FLAG(K,3)=REMOTESUB) . OVS
)@@G@@N IF BLK IS REMOTE@G@@@@ DO ISRB=0 , G$$GFL 2,6               . ERROR IFVT
)@@G@@ BLOK NOT REALLY RMT    @F@@@@ DO ISRB=0 , END                      . DOVU
)@@G@@N'T CLOBBER SPURIOUSLY  @G@@@@G$LABL**(K,4) EQU   P(1,2)            . ESVV
)@@G@@TABLISH JUMPTARG FOR BLK EXIT @G@@@@ DO G$LABL(K,1)>$                   VW
)@@G@@  ; IF BLOCK APPEARS AFTER THIS...  @F@@@@  , END                       VX
)@@G@@        . THEN NO NEED TO PATCH IT  @G@@@@. WHEN BLOCK PRECEDED US, THE VY
)@@G@@RETURN ADDR IT NEEDED WAS NOT DEFINED     @F@@@@. AT THE TIME THE ENDBEGVZ
)@@G@@ WAS ASSEMBLED, SO WE MUST PATCH IT UP.   @^@@@@HERE       EQU      $   WA
)@@G@@@F@@@@           RES      G$LABL(K,5)-$     . GO BACK TO THE ENDBEG     WB
)@@G@@@F@@@@           J        P(1,2)            . FIX UP ITS EXIT INSTR     WC
)@@G@@@E@@@@           RES      HERE-$            . THEN RESTORE IC     @#@@@@WD
)@@G@@           END    @D@@@@/. THINGS TO ADD IN THE FUTURE-- (NOTES TO MYSELWE
)@@G@@F)-   @[@@@@.     @[@@@@.     @G@@@@.      ENDBEG    SPAWNING AT,<LABEL>WF
)@@G@@ WITH IOXI$ (AND MAKE IOXI N.G.)    @G@@@@.                   SINCE IOXIWG
)@@G@@ IS ANOTHER WAY OF TERMINATING AN ACTIVITY@[@@@@.     @B@@@@.      SPAWNWH
)@@G@@ AT,<LABEL> NAME,<NAME-STASH> @G@@@@.                      FORK$ TO AN AWI
)@@G@@CTIVITY AND ACQUIRE A NAME FOR IT   @G@@@@.                      NOTE THWJ
)@@G@@AT NAME IS OWNED BY SPAWNNER, NOT SPAWNEE @[@@@@.     @G@@@@.      DEFINWK
)@@G@@ITIONS OF 'CRITICAL' BLOCKS, BOUNDED BY TS, CTS ON DATA     @E@@@@.     WL
)@@G@@ AND/OR IMPLEMENTATION OF P/V OR TS QUEUEING USAGE    @[@@@@.     @[@@@@WM
)@@G@@.     @D@@@@. FINISH FALLTHRU OPTIMIZATION FOR JMGI/TLEM LOOPS    @C@@@@WN
)@@G@@. FLAG AND SURPRESS CODE FOR 0 EXECUTION LOOPS  @C@@@@. FLAG AND SURPRESWO
)@@G@@S CODE FOR IMPOSSIBLE TESTS   @F@@@@. DO DOUBLE LINEITEM IF-ELSE: TEST/IWP
)@@G@@NST1/NOTEST/INST2, IF AND     @E@@@@.   ONLY IF NO SIDE EFFECTS AND INSTWQ
)@@G@@1 DOES NOT ALTER CONTEXT@F@@@@. CASENTRY CALLING: NORMAL 1,X11 AND 1 INSWR
)@@G@@TR 0,X11 SHOULD SKIP    @D@@@@. DO SPARSE CASES WITH TESTS INSTEAD OF JUWS
)@@G@@MPTABLES    @B@@@@. OPTIMIZE JUMPS ACROSS BLOCK BOUNDARIES  @F@@@@      WT
)@@G@@    PROC                        . THIS IS A CHARLIE MCCARTHY@E@@@@      WU
)@@G@@    END                         . AND A MORTIMER SNERD@D@@@@.         ENWV
)@@G@@D                         . *****MASM*****___OTE)@@@)@@@@@@@)@@@:[@K)@@@WW
)@@G@@C@@@@@;!K@@L-[K@@UC[K@@TA]0@@@@@@@@@@@@@@@@@@@@@@@@@@@AA@@@@)@ [F]@ @K^GWX
)@@G@@@^G@#1)G@^@@C^G@@FCC[@@]/K@@@S(@@@@]9*0@@]9*K@@@/D)@@*/^@@@CG@@@@@AB@@@@WY
)@@G@@)@I[F#@@[@K[@K0@@@@@@@@@[@K@@@/,0@@%D@0@@J/@0@@P/D)@@P;C0@@MC@0@@TC@)@@JWZ
)@@G@@C@K@@@AC@@@@)@R[F#@@/S#@[@[#@[#@@@@@;C0@@MC@0@@UC@)@@#C@K@@[C^G@@FC^[@@]XA
)@@G@@/K@@@&(@@@@#[@)@@]AD@@@@)@)[F@K[@K0@K0@K0@K0@KK@R]0@@@9?0@@]9?K@@@[@)@@#XB
)@@G@@[@K@@[/,0@@%D@0@@J/@0@@</D)@@<AE@@@@)@(@E@)@^[C@@@@@@@@@@@@@@@@@@@@@@@@@XC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/KF@@@AF@@@@)@H@C@)@%@;[K)@K)[K^[#@[XD
)@@G@@#@@@@@[@K@@C[@@@@A/C0@[\/ @@@\G[@@@@C[@@@@A]0@@[@@@@@@AG@@@@)@1[F#@[#@@JXE
)@@G@@A@)[K^@K@@@@C8@@@^/K@@@'C8@@@A/ @@@9/K@@@/(@@@@@E[@@@J[@0@@^[@)@@BAH@@@@XF
)@@G@@)@'[F@K^G@[@^@K0@@@@@@@@[[K@@ T9K@@^/K@@[]T9K@@A/ @@[[C[K@@I @@@@D/K@@[#XG
)@@G@@/,0@[1AI@@@@)[#[##@[#@[@K)]K0@^C@0@@@@@@@@;)\@@@T*0@@[O]K@@JC@0@@D/,K@@@XH
)@@G@@/ @@[HC@K@@AC@@@@CAJ@@@@)[F[#]@L@K) K0@^C@0/S#@@@@@@@@0@@@@^;)\@@@T*0@@[XI
)@@G@@O]K@@JC@0@@D/,K@@@/K@@[R/,)@@@AK@@@@)[N[F@K)AK^C[#1)C@^[@^@@/K@@[Y?9K@@CXJ
)@@G@@/H)@[Y/K@@[,*@@@@@/,)@@@/K@@[R/,)@@@/K@@[QAL@@@@)[W[#@K#1)G@^@K#1)C@O@@@XK
)@@G@@@@@@@@/K@@[%(@@@@@/K@@[?!9K@@C/K@@[+0@@@@^/K@@[!/,0@]QAM@@@@)[=[F]@^K)#KXL
)@@G@@[@K^[@@@@@@@/,0@]Q/K@@[!/,0@];8 @@[*')E)@@/K@@[(W>0@@#;H0@@=CD0@@@AN@@@@XM
)@@G@@)[![N@K^^KOC@K^G@@G@K@@C[@K@@LW@K@@G;GK@@=CCK@@@A]0@@]/KF@@@R]0@@[/,0@#FXN
)@@G@@/K@@[\AO@@@@)[7[F#@[#@[#@@^G@^@K)[@@C K@@@C8K@@@/CK@[_H@K@@DT@K@@GH@K@@LXO
)@@G@@C@K@@B[@)@@D[@K@@CAP@@@@)]@[F]@^^@K[#@[@@@@@@@@@/@K@]M[[K@@ C@K@@L/K@@]BXP
)@@G@@C[K@@H/K@@]A:[K@@H![K@@HHDK@@@AQ@@@@)]D[F#@@^@[#@[@@@@@@@@@@/K@@]N[@)@@EXQ
)@@G@@G@)@@GD@)@@IG8K@@[/@)@]KW@K@@G;GK@@=G@K@@DAR@@@@)]M[F#@[#@[[^^/S#@[@K0@@XR
)@@G@@H8@@@[N@K@@B/K@@]7(@@@@BA]0@@#/KF@@@R]0@@][@K@@B @@@@EAS@@@@)]V[]K0@K0@JXS
)@@G@@A@0@K^C@4G@^@@@@@@/K@@]*H[0@@DC>0@@[/K@@]%(@@@@DQ#K@@A[@K@@GM#W)@@AT@@@@XT
)@@G@@)]<[E[@^@JA@0@K@@@@@@@@@/K@@]7(@@@@E[[H)@@8^0@]<')E)@@/[0@]*<@0@@K')D)@@XU
)@@G@@+@)@[#AU@@@@)]?[F#@[]@H#@@K)#@@@@@@@G8K@@=D@K@@H;G.@@@C[I@@@C@0@@@H8)@@[XV
)@@G@@C@)@@GT*K@@[C@K@@EAV@@@@)]5[M^G@^G@^^KO@@@')D)@@+@)@[#/K@@##A]0@@^/KF@@@XW
)@@G@@R]0@@#C@)@@BC@K@@A[[I@@@;[H@@@AW@@@@)]_[E/S#@[]@W^@[#@@@@@@@L^K@@A&;K@@@XX
)@@G@@/,%@@@/,%@@@8^K@].')E)@@<@0@@KC4_@@@0@@@@^AX@@@@)#C@V#@[[@@@)@I@K@)#F@V[XY
)@@G@@K)C@@@>90@C@C[0@@@A]0@@ @@@@@@@@@@@@/KF@@@R]0@@^C@K@@AAY@@@@)#I[F@K)DK)#XZ
)@@G@@^C[4G@^@@@@@')D)@@+@)@[#/K@@^D[@0@@IC^_@@@:'@@@)CE@@@#C)0@@@/K@@#OAZ@@@@YA
)@@G@@)#R[E/S#@[]@W^C@4@K@@@@@')D)@@/K@@#-+@)@[#/K@@#>%C0@@#')E)@@<@0@@KC4_@@@YB
)@@G@@0@@@@^BA@@@@)#)[EK)#K^[@JA@0@^[#@@@@A]0@@J/K@@^D>90@C@:@0@@I/K@@^D8^K@#ZYC
)@@G@@/K@@#=%C0@@[+@)@[#BB@@@@)#([F@@/S#@[]@W#1)G@^@@@/K@@#7%@0@@I')E)@@<@0@@KYD
)@@G@@C4_@@@0@@@@^')D)@@+@)@[#/K@@^ABC@@@@)#2[]/S#@[@K0@K^G@#1)G@^@@@@@@+@)@[#YE
)@@G@@/K@@^D(@@@@J @@@@J/K@@#7A]0@@J/K@@#6*@@@@JBD@@@@)#'[E/S#@[]@X@@#1)G@^C[0YF
)@@G@@C4_@@@0@@@@^+@)@[#')D)@@')E)@@<@0@@K/K@@^#C4_@@@0@@@@^BE@@@@)^#[E/S#@[@KYG
)@@G@@#1)G@^[@K@@@/,%@@@/,%@@@8^K@#P8^K@#%/K@@^D%@0@@I8^K@#./K@@^A:@0@@IBF@@@@YH
)@@G@@)^G@%K0@K0@KK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/KF@@@R]0@@ C@K@@AL^K@@AYI
)@@G@@&;K@@@BG@@@@@@@@@@@ @K^G@^G@#1)G@^@@C^G@@FCC[@@]/K@@@S(@@@@]9*0@@]9*K@@@YJ
)@@G@@/D)@@*/^@@@CG@@@@@AB@@@@@@^@@#@@B@@E@@V@@[@@Z@@@@@E@@K@@@@^L@@@@@ASQUEEZYK
)@@G@@      WINDOW      FDGET       E$PARAMS    FDPUT       ASGET       ASPUT YL
)@@G@@      E$TABLE     INFOBITS    INQUOTE     CHECK       @@[@@@@@@@@@K0@KK@YM
)@@G@@R]0@@@9?0@@]9?K@@@[@)@@#[@K@@[/,0@@%D@0@@J/@0@@</D)@@<AE@@@@)@(@E@)@^[C@YN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/KF@@@AF@@@@YO
)@@G@@)@@@C@)@@[E@K0@[@@CC[@@]/K@@[TCB-@@#CFL@@# @@@@@ @@@@VR@K@@GN[0@@FR';@@]YP
)@@G@@@@@@@@AA@@@@)@D[MK)@K@[]@[@@@@[@K@@U/K@@[K/,0@@@C@K@@UC^[@@][@)@@O[@K@@TYQ
)@@G@@/K@@[P/,0@@@C@K@@TAB@@@@)@N[M@^[@K)[@@@@@@;EK@@MC]K@@T/,0@@@/[@@@</@0@@<YR
)@@G@@C@K@@OCXG@@KC^[@@]CW/@@KCC[@@]AC@@@@)@X[F@K^G@^[#@[@[#@@@@@@C]K@@[;HK@@MYS
)@@G@@9!K@@T/K@@@?C]K@@]/K@@@+C]K@@[/AK@@-/H)@@ZAD@@@@)@&[N@K^G@^[@K0@@@G@)@@KYT
)@@G@@&_K__"H8K@@[G@K@@JC]K@@]/-)@@?/K@@@?C]K@@]/-K@@(/@0@@%AE@@@@)@0[M^@K[@K[YU
)@@G@@@@@@@@/K@@@/%]Y)@@/[@@@//^0@@3H80@@[/K@@@7%]X)@@/@0@@7&_)__"H8)@@[AF@@@@YV
)@@G@@)@'[MK[@K^@^@@@@@@H;K@@[/K@@[B:[I)@[C[H)@[/K@@[B/@0@[E/K@@[G%@0@@K/ @@@8YW
)@@G@@H9@@@[AG@@@@)[^[MK0@K^@K[@@@@@H;)@@[H;K@@[/K@@[JG;0@@[/K@@[FG;0@@[8#0@[@YX
)@@G@@/K@@[DA]0@@@H;)@@[AH@@@@)[I[F#@[@^G@^[@K^G@^@@@@8L0@[RA]0@@@/K@@[R8L0@[OYY
)@@G@@8L0@[NA]0@@@H;K@@[/K@@[OA]0@@@AI@@@@)[R[M/S#@[@[@@@@@@[B1@@@[FL@@^[B-@@^YZ
)@@G@@HFL@@#HB-@@#/K@@@C:F1@@@!F1@@@/K@@[W*@@@@@AJ@@@@)[-@U@)@[@K@@@@@@@@@@@@@ZA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@^@)^@)      /KF@@@R]0@[BC@@@@[AK@@@@@@@@@@@@^@[#ZB
)@@G@@@[@@@@@@@@@@/K@@]N[@)@@EG@)@@GD@)@@IG8K@@[/@)@]KW@K@@G;GK@@=G@K@@DAR@@@@ZC
)@@G@@@@^@@]@@A@@]@@E@@[@@I@@@@@E@@#@@@@[=GET         CHECK       COMPARE     ZD
)@@G@@@@[@@@@@@@@@)]V[]K0@K0@JA@0@K^C@4G@^@@@@@@/K@@]*H[0@@DC>0@@[/K@@]%(@@@@DZE
)@@G@@Q#K@@A[@K@@GM#W)@@AT@@@@)[M[K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZF
)@@G@@@@@@@'     -@@@@@@@@@@@A@@@@AKAA@@@@)U5[S@@@@@@@@@@@@@ILE1  FUNNYF@@@@@@ZG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[]@@@@AB@@@@)V@@*@@@@@@@)VD@)@@@@@@@ZH
)@@G@@@K@@@@@@@@@@ILE1  FUNNYF@@@@@@@@@@@@@@[@@@@@@@@@@@@@@@AC@@@@)VH[K@#[E@O@ZI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@[.@B@@@/@V?@V)@@@@@@@@K@@G@@@Z__@@@@@@@B@@@@AD@@@@ZJ
)@@G@@)VR@0*@@@@@@-\?@S@@@@@@@@@@@@@@@@@@@][@@@@@@@@@@@@@@@@@@@@@@@@@@@@[O@@@@ZK
)@@G@@@C@@#5AE@@@@-\\[S@@@@@@@@@[@@@@@@@@@@@@@@@@@@@@@ILE2  FUNNYF@@@@@@@@@@@@ZL
)@@G@@@@@@@@@@@@@@@@@@@@AF@@@@-\'@K@-0@[@@@@@@@@@@K@@G@@@Z__@@@@@@@B@@@@@K@@@@ZM
)@@G@@@@@@@@ILE2  FUNNYF@@@@@@@@@@@@AG@@@@-0C[KG^*[K@*@@@@@@@@@@@@@@@@@@[O@@@@ZN
)@@G@@@C@@F5@@@@@@@@@@@@@@@@]9@B@@@/[0<[0R@@@@@@AH@@@@-0M@K@<^<[@@@@@@@@@@@@@@ZO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##@@@@@@@@@@@@@@@@AI@@@@<^:[@@@@@@@@ZP
)@@G@@<^7@C@@@@@@@Z__@@@@@@@@@@@@@@@@@[@@@@@@@@@@@@@@@@@@@@@ILE3  FUNNYFAJ@@@@ZQ
)@@G@@<^8@K0M)SDK@< #@C@< E@*@@@@@@@@#)@@@@C@@@@@@@@@@@@@@@@@@@@@@@AK@@@@VD[0@ZR
)@@G@@@U5[\?AK@@@@< J[KG^*@[K@@@@@@@@@@@@@[[@@@@@@@@@@@&-# +@@@@@@@@[@@@@@[@@@ZS
)@@G@@@@C@@@@N5@RP@@@@@@AL@@@@< T[CGK@@[M@^(@^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZT
)@@G@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@AM@@@@<AH@0*@@@@@@)@@@V@]&@@@@C8@@@@A]0@[JZU
)@@G@@/,0@@$@@@@@@@@@@@@@@@@@@[[@@@@@@@@@@@&-@[WAN@@@@)@#[F]@H@K^C[[]@OK)AK0@@ZV
)@@G@@C[0@@@[4@@@@C8@@@&/,0@@@C8@@@L'=@@@@/K@@@D/K@@@A/,0@@@AO@@@@)@G[]/S#@[#@ZW
)@@G@@[@K0@K)BES@CS@@@@@[@W@@#C@K#B2C8@#^7'=@@@@C@@#B1/,0@[\A]0@[T=[0#B0AP@@@@ZX
)@@G@@)@O[##@@/S#@[@K)CK#1)G@[@@@@@@/K@@@Z>90[@@(@@# E/K@@@=/,0@@@/K@@@T(@@#A\ZY
)@@G@@C[0@@@AQ@@@@)@W[EK) K[@K)DK^C]=@@@@@/,0@F</,0@@@/K@@@=/,0@@@/K@@@<>90@[@ZZ
)@@G@@/K@@@=/,0@@@C8@@@DAR@@@@)@>@N@K)F@@@<AN@)/S]@0@@)@$@F[@@@@@@A]0@@@@@@@@@AA
)@@G@@@@@@@@@@@@@@@@@@@@'=@@@@/,0@D?AS@@@@)@*[EK0@JA@0@K0@K0@@K@@@/K@@@.;/W@@@AB
)@@G@@ @G@@@ @@@@JC@@#B4 @@#AO=[K#B3A]0#AO:9@@@^AT@@@@)@1[M^G@^C#K@@@@@@9=/@@@AC
)@@G@@;?0@@#9*/@@@9)/@@]9?/@@@C@@@@J'=@@@@C@K#B5C8G@@@C@0@@GAU@@@@)@;[E^C#KK[#AD
)@@G@@@[#@@@@@@@@@^@)#AQ[@K#APC@@@@J/@0@[]C@G@@QC@W@@G'=@@@@W80@2@;?0@@[AV@@@@AE
)@@G@@)[^[]()@-@W-)@-@YCKCCS@CKC)@@@/,0@@@C@@#B7/,0@@@C/@@@#/,0@@@C@@#B6/,0@@@AF
)@@G@@C8@#AHAW@@@@)[G[EK)MK0@K)L^C^=G@[#@@G*K#ANS8@@@GC)@#AN/,0@@@C/@@@-/,0@@@AG
)@@G@@C@@#B8/,0@@@C/@@@.AX@@@@)[P[M^G@@@@@@@@@@@C@@@@IG8)@AA;GK@@Y;*)@@YW8@@@UAH
)@@G@@W8K@@UH8)@@[G=)#ANS8K@@ZH8K@@[AY@@@@)[Z[F]@/K)KK0@K)N^C^[][C/,0@@@C/@@@-AI
)@@G@@/,0@@@C/@__//,0@@@C@@#AQ/,0@@@C/@@@]/,0@@@AZ@@@@)[*@;#@[][KK)PK)QKK@@@@@AJ
)@@G@@<A,@C@@@@@@@/KF@@@R]0@@@/,0@@@/,0@@@C8@@@[/,0@@@C@@#AQBA@@@@<A\@*@@@@@@@AK
)@@G@@)[\@V[ES@C@@@@@@@@/,0@ AC8@@U5A]0@@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BB@@@@AL
)@@G@@)[2[##@@()@CS@C]@YG[)@)@@@@@@@/K@@[/(@@#A,/C@@]#/,0@B>9*K@VD9?W@@CC8@@U5AM
)@@G@@[@@#A,BC@@@@)['[F#@[@K0@ES@@]@@@@@@@/K@@]C[^W@@LT8K@[@G8K@@[C@W@@BC8@@U5AN
)@@G@@A]0#A0/K@@]]A]0#A\BD@@@@)]#[]/S#@[@]&@]^@(80A@]@-)@@@@C@@#B9/K@@]G*@@#A\AO
)@@G@@/,0@@@C8K@U5C8@@@C/K@@]C*@@#A,BE@@@@)]F[#][W()@)CS@ G@[#@[@@@@@@@@/,0@B>AP
)@@G@@9*K[0@9?W@@CC8@[\?[@@#A,/,0@ AC8@[\?/,0@@@BF@@@@)]N[F@JA@0@K^G@]&@@@@@@@AQ
)@@G@@[^W@@LT8K@[@G8K@@[C@W@@BC8@[\?A]0#A0/K@@]+*@@#A,/C@@]0BG@@@@)]W[]/S#@[@]AR
)@@G@@&@]^@%@YG[)@)@@@@@/K@@]*(@@#A0/K@@]\/,0@@@C8K[\?C8@@@C/K@@]-(@@#A\BH@@@@AS
)@@G@@)]=[EES@CK]*[80A@]@CKGC@/K@@]!/,0@@@C8@@@[/K@@]\*@@#A\/K@@]\/,0@@@C8K[\?AT
)@@G@@C8@@@CBI@@@@)]![]()@)C]A@[80A@]@ G@@@@@@@@C8K[\?C8@@@C/K@@]6*@@#A, @@#A0AU
)@@G@@/K@@]./,0@B>C8@[\?BJ@@@@)]5[#]@O/S#@[@K0@ES@C]A@]^]8@@/,0@@@C@@#B9/,0@B>AV
)@@G@@C8@@U5 @@#A\/K@@].(@@#A\/,0@@@BK@@@@)].[]/S#@[@K0@K)RES@C]A@[N@@@@C8@#^<AW
)@@G@@[@@#A,/,0@ AC8@#^</,0@@@C@@#B'/K@@#[*@@#A\BL@@@@)# [EK0@^G@^CAO@K@@@@@@@AX
)@@G@@C8@@@D/K@@#J>90@K@/K@@#U(4@@@[C[0@@@ @@@@G9*K# E9?W@@CBM@@@@)#I[#]@OJA@0AY
)@@G@@@K@()@-@E-@2@@@@@@9?0@@D/,0@@@C8K#^<C8@@@K/K@@#P*@@#A,C8@@@[/,0@@@BN@@@@AZ
)@@G@@)#Q[F#@[][>][>@JA@0@K[@@C8@@@K/K@@#->90@K@/K@@#+*@@#A,/K@@#.9!K@@F*0@@@[BA
)@@G@@9!K#B;BO@@@@)#Z[E()@-@E)B<@S@C@)[N@@C8K#^<C8@@@K/K@@#%=90@K@/K@@#90@@#A,BB
)@@G@@/K@@#./,0@@@C8K#^<BP@@@@)#*[F]@P@JA@0@K]&@@)]A@@9?K# EC8@@@H/K@@#3*@G@@EBC
)@@G@@C8@@U5/K@@#8*@@#A\/K@@#8/,0@@@BQ@@@@)#1[N]@P@@^G@^@K@@/K@@#.>90@K@/K@@#.BD
)@@G@@A]0#A1>90@[@C8@@@[9!W@@I9?/@@E/K@@#8/,0@@@BR@@@@)#;[EK) #1)G@^@K#1)G@^@@BE
)@@G@@/K@@^D(@@#A1/K@@^^>90@K@/K@@^D(@@# E @@@@H/,0@@@C8@@@DBS@@@@)^^[##@[][*/BF
)@@G@@S#@@/S#@[#@@K)SK@@/K@@^(/,0@@@C8@@@^A]0#A2(@@#A1>[0#B./,0@@@[@@#A3BT@@@@BG
)@@G@@)^G[#@K)TK^CAOG@^CAO[][=@@@@@@(0@@@@/K@@^P*4@@@[[)@@[QC4@@@C/K@@^L(=@@@@BH
)@@G@@/K@@^HBU@@@@)^O[#@K)TK)TK)TK)V^G@^CAK@@@@@**@@@@[C0@[UH80@@[/,0@@@C8@@@DBI
)@@G@@*4@@@[C8@@@^/K@@^VBV@@@@)^W[#@K)TK^CAOCAOCAOCA4G@@@@@@[^0@[U/,0@@@C8@@@FBJ
)@@G@@*0@@@[C8@@@B/K@@^=(0@@@[/K@@^ZBW@@@@)^=[F#@[#@[@^C[L][-@K@@@/K@@^!/K@@ ^BK
)@@G@@/,0@@@C8@@@ /,0@@@C8@@@D/K@@^(!C@@[UC^@@[UBX@@@@)^![#][>@K)TK0@K)TK^CAO@BL
)@@G@@@@@@@@/K@@^'(0@@@@/K@@^5*4@@@[[)@@[PC4@@@C/K@@^1(=@@@@BY@@@@)^5[#][>][>]BM
)@@G@@[>][!#@[][>@K)T@@@(*@@@@/K@@^"*0@@@[[@0@[N/,0@@@C8@@@D*4@@@[C8@@@^BZ@@@@BN
)@@G@@)^.[#@K)TK)TK)TK)VK0@K0@KK@@@@R]0@@[[C0# #[@0@[M/,0@@@C8@@@F*0@@@[C8@@@BBO
)@@G@@/K@@ ^CA@@@@)  @E@<A4@8@JA0)WE@@@@@@@@@@@@@@@@@@@@W#A;@@@@@@@@@@@@@@@@@@BP
)@@G@@@@@@@@@@@@@@/KF@@@CB@@@@<BR@C@) A@;[K0@^CA^[@K0@@@@@@@C@@#A4/K@@ U/K@@ GBQ
)@@G@@/,0@@@C4G@@@[@@#A4A]0@@]@@@@@@CC@@@@) H[E^@^G@[@K0@@@@@@@@@@9?K#B"/K@@ TBR
)@@G@@D8@@@[A]0#BR @G@@D @G@@C/K@@ P%8K@@#C4W@@@CD@@@@) Q[#][=K)TK^G@#1)G@^[#@BS
)@@G@@@@@@@@C@@#A4/K@@AV*@@#BR @@#BR/K@@ V[0K@@@C8K@@^9*K@@^CE@@@@) Y[E^@(@2CKBT
)@@G@@I*[M[=@@@@@@&;@@@CC8@@@@/K@@ */,0@@@&;@@@WC8@@@@/K@@ >%8K@@#C4W@@@CF@@@@BU
)@@G@@) $[F][5#@@^G@^[][8K@@@@/K@@ 2?8@@@SC4@@@A/,0@AX9*K#A5[[G@@A9*W@@CC@@#A4BV
)@@G@@/,0@@@CG@@@@) 0[EK]&@@-@E-)@-@/CKJ@@C^K@@D[^W@@@COK@@AC@@#A4/,0@@@C8@@@EBW
)@@G@@C8K#A5/K@@ 5?8@@@)CH@@@@) 9[EK)Y^CB-#@[#@[#@@()@C8@#A5[@@#A8C@@#C@ @@#A7BX
)@@G@@9*W@@^9?K@@]9*W@@]9?K@@^[@W@@BCI@@@@)A][#][.#@@/S#@[@JA@0@K[@@@@@@/K@@AFBY
)@@G@@C8@@@[/K@@AE%@@#C[/K@@AG*4@#A8C@@#A;'=@@@@CJ@@@@)AE[EK^G@^G@@^@@@@@@@@@@BZ
)@@G@@ @@@@G/K@@AS%8@@@#:8K@@ C4G@@@C@@#A4C4K#A8/K@@AV @@@@GCK@@@@)AN[F#@[][=^CA
)@@G@@@ES@CK]*C@@@R]0@@]/,0@@@C8K#A5C8@@@I/K@@AVC8@@@[=80@K@(4@@@[C@0@@@CL@@@@CB
)@@G@@)AW@'KO[#@[#@@()@-@W@@@@@@@@@@@@@@@@/,0@@@C8@#AH[@0#BU9*K#BS/C0@A2A]0@@#CC
)@@G@@/KF@@@CM@@@@)@@@&@)@@@@@)A<@+()C-[@-)@)@@@/,0@BE9?@#BS/,0@@@C8@@@@ILE: &CD
)@@G@@SIGN F TO ASUNABLECN@@@@)@^@Q@)@@@@@)A$@%()C-[@CKE*KF@@@@@@@/,0@@@/,0@@@CE
)@@G@@C8@@@[/,0@@@C8@@@^SE: &  BECAUCO@@@@)A?[##@@([]-[^CK]*]@-)@@@@@@@@9*K#BSCF
)@@G@@/[K@BC/K@@BC/,0@@@C8@@@LB,0@@@&'0@@@C@@#BUCP@@@@)A4[##@@()@-@W-)@C]A@]^[CG
)@@G@@8@@@@@/,0@@@C@@#C]/K@@A.%8@@@[C@@#BV/,0@@@C8@#AH[[K#BVCQ@@@@)A/@V@K0@K)JCH
)@@G@@@@@@@@)@A@,@)@@@@@E ON FAILABLNOT AVSSION  PERMI/,0@@@C@@#C#/K@@A_CR@@@@CI
)@@G@@)@F@I@)@@@@@)A_@2()C-[@-)@)]^]*@@@@@/,0@@@C8@@@[/,0@BE9?@#BS/,0@@@C8@@@ACJ
)@@G@@ILE: &CS@@@@)B [F][SK) KL[K)YEKJCKL)'=@@@@C8@@@@9*@@@@A]0@@^/KF@@@R]0@@#CK
)@@G@@/,0@@@C8@@@L/,0@@@CT@@@@)BI[]/S][9@K)YK)=^C^=CB=CD@@@@/,0@@@9?@@@]/,0@@@CL
)@@G@@C/@@@*/,0@@@9?@@@^/K@@BZ(@@@@]CU@@@@)BQ[EK)MK)Y[][^K)MK@@@@@/K@@B-/,0@@@CM
)@@G@@C/@@@)/,0@@@;C@@@S;*@@@SC@@@@A/,0@@@C/@@@(CV@@@@)BZ@3][9]]KK)MKK@@<BW@C@CN
)@@G@@@@@@@@@@@@@@@@@@@@/KF@@@R]0@@^/,0@@@C/@@@./,0@@@9?@@@@CW@@@@)B>[F[K0@K)TCO
)@@G@@K[@K)T^G@@@@9?K#B;9*W@@E9?K@@D/K@@C%D8@@@[/K@@B:*4@@@[[@@#BWA]0@@ CX@@@@CP
)@@G@@)B,[F][>][=@K)>K^G@@@@@@C@@#BW/@)@B''=@@@@C8G@@C[?W@@HC8K@@[9*W@@I9?K@@FCQ
)@@G@@*0@@@[CY@@@@)B7[E^C[OG@^CAO@K^CAK@@@C=K@@[/K@@C= @G@@[/K@@B_*?@@@[C@@#BWCR
)@@G@@/,0@@@C8@@@#C8W@@CCZ@@@@)C@[M^@K@^CAK@@@@@?/)@@^C)0@@[[G?@@[C8)@@#:8K@@+CS
)@@G@@/K@@CBC8)@@]/K@@C %8K@@-C8)@@[DA@@@@)CE[MK^[@K^@K@@@@@H[@@@JC(G@@K/K@@CVCT
)@@G@@[K/@@[/K@@CQ/K@@CM/K@@CK/KI@CG/K@@CV?/)@@[DB@@@@)CO[UK@@@@@@; @@@=L-G@@KCU
)@@G@@CK?@@[C(G@@K[LW@@[G[K@@JG9K@@[L-G@@KC(G@@K/K@@CV[LG@@[DC@@@@)CZ[EK[#@[]@CV
)@@G@@OK[#@@@@@@@@C@K#BWC8@@@G/^@@C(C^G@@L/,0@@@C@K#BWC8@@@F/C)@C=\[@@@IDD@@@@CW
)@@G@@)C*@<]@OKK@@<BX@**@@@@@@@@@@@@@@@@@@[[@@@@@@@@@@@&E#B</KF@@@R]0@@  @@@@GCX
)@@G@@/,0@@@DE@@@@<B+@C@<B!@SE@@@@@@)C?@+^ [@@@@A]0@@BA])@@A@@@@@@@@@@@@@@@@@@CY
)@@G@@@@2#B<@@@@@@@@@@@@DF@@@@)C0[N[KO^()@@@@@@@;^0@@=:8)@@[CDG@@#C^/@@#C0%@@@CZ
)@@G@@RE?@@[C8@#^79(@@@G9*)@@E9*@@@CDG@@@@)C'[##@[#@@()@-@WYG[)@)]^^)@@@/,0@@@DA
)@@G@@9?E@@E/K@@DD*@@#A0/,0@@@C8@#BX[[@@[S[@0@[RDH@@@@)D][F#@@K[][CK)=K0@K))@@DB
)@@G@@/,0@@@C/@#C /,0@@@9?E@@I/,0@@@C/@@@//K@@DD:@%@@IC@)#C^DI@@@@)DF[##@[][ #DC
)@@G@@@[]][#@[][ #@[]]@@/,0@@@C/@#CC/,0@@@C@@@[R/,0@@@C/@#CB/,0@@@C@@@[SDJ@@@@DD
)@@G@@)DN[F#@[][ @^[@^[]]S@@@@/,0@@@/K@@D-%8K@@[C4K@C?[^@@C?G8@@@[C^@@C?/,0@@@DE
)@@G@@C@@@[ODK@@@@)DW[##@[][S()@-[I)]^]%^]0@@@@@/,0@@@/,0@@@C8@@@]/K@@D='=@@@@DF
)@@G@@C8@#B!/,0@@@[C@#B,DL@@@@)D=[F[KO [KO @K^^@@@@@@@A]0@@I/K@KC? C@@C?N@K@@IDG
)@@G@@9!@@@G9?)@@E9?@@@CR]0@@BR])@@ADM@@@@)D!@M/S#@[@@)@G@"@)@@@@@!     ISHED!DH
)@@G@@CCOMPLSONS AOMPARITUAL C NO AC/K@@D1*@@@[VDN@@@@)D\[##@[]@L#@@K#1)G@^@/SDI
)@@G@@#@@@@@*@@#A\/K@@D8*@@#A0/K@@E,=8K@[@C@K@@@'=@@@@C@@#CDDO@@@@)D7[F@K0@K0@DJ
)@@G@@K^G@]&@@@@@@C^/@@#C0%@@@RE?@@[C8@#^7C%0@V /^@@D/CM0@U6CG@@U6/K@@E,DP@@@@DK
)@@G@@)E@[E@^G@^G@]&@]^[0@@@@@/,0@@@C8@#AH[[@@[S[@0@[RH9@@@[H80@@[;^0@@=:8)@@[DL
)@@G@@CDG@@#DQ@@@@)ED[F#@@K)*^C^@K)(K0@@@@C/@#CG/,0@@@C/K@@]C@@@@R/,0@@@C/@@@[DM
)@@G@@/,0@@@C/K__.C/@#CEDR@@@@)EM[]K)*K0@K)L^C OC =G@@@@@@@@CM0[\!/,0@@@/,0@@@DN
)@@G@@C8@@@]/,0@@@C@@@[S/,0@@@C/K__.DS@@@@)EU[##@[#@@()@-@W-)@CKO@@@@@@@C/@@@[DO
)@@G@@/,0@@@C/K__.C/@#CI/,0@@@C8@#AHC%0[\/(G@[\!DT@@@@)E+[F][@^CEOG@[]]-#@[][^DP
)@@G@@/,0@@@C@@@[R/,0@@@C/K__.C/@#CG/,0@@@C/K@@]C@@@@R/,0@@@DU@@@@)E:@%K)PK)QEDQ
)@@G@@S@CKB@)@N@Y@)@@@@@  0 CA CYCLESPEC 3/,0@@@C8@#AH/,0@@@/,0@@@C8@@@[DV@@@@DR
)@@G@@)@Q@Q@)@@@@@)E0@%()C-[@-)@-@+YG[)@@@(@@# E/,0@@@C@@@[O/,0@@@C8@@@NNT &  DS
)@@G@@RD COUDW@@@@)E5[F@^C OC =G@@^@@@@@@@/K@@FE;/W@@@ @G@@@ @@@@JC@@#CK/,0@@@DT
)@@G@@/,0@@@C8@@@[/K@@E9DX@@@@)E"[M^G@^C#K@@@@@@9=/@@@;?0@@#9*/@@@9)/@@]9?/@@@DU
)@@G@@C@@@@J'=@@@@C@K#B5C8G@@@C@0@@GDY@@@@)FC[M^C#KK[#@@@@@@;Q0@@=C]0@@HH@K#APDV
)@@G@@C@@@@J/@0@FJC@G@@QC@W@@G'=@@@@W80@2@;?0@@[DZ@@@@)FM@UES@CKB@)@S@&@)@@@@@DW
)@@G@@@@@@@@@@@@@@IME: &SING TPROCESTOTAL /,0@@@C8@#AHW'0@ @EA@@@@)FP[E()C-[@CDX
)@@G@@KC+^]]A@@-[K/,0@@@C/K__.C/@#CL/,0@@@C/@@@[/,0@@@C@@@@R/,0@@@C8@@@SEB@@@@DY
)@@G@@)FY[EK)PK)QKL[K0@JA@0@K@/K@@F\(@@# EC[0@@@A]0@@J/KF@@@R]0@@I/,0@@@/,0@@@DZ
)@@G@@C8@@@]EC@@@@)F$[]K#1)G@^@/S#@[@K0@K)%@@@@@/,0@@@C@@#A3/K@@F\(@@#A2/K@@F\EA
)@@G@@(@@#A1/K@@F:>90@K@ED@@@@)F\[F@KL[ES@@-[QO0@@@@@@C8@[\?/,0@@@C@G@@A9?W@@CEB
)@@G@@C8@@U5A]0@@K/KF@@@R]0@@J/,0@F2EE@@@@)F8[E^CE2&@@CKP*C@@@@@@@/KF@@@R]0@@KEC
)@@G@@/,0@@@C@G@@A9?W@@CC8@#^</,0@@@C@G@@A9?W@@CEF@@@@<B0[KES@)O@@0M)@@@@U5@VDED
)@@G@@@@@@@]@@@@@#@@DOWN@@^@]N@@R#ARK@@@@@@@[@@[]@@@C?@[@@@@EG@@@@<B'[K0M)@[86EE
)@@G@@^#)@@@WRITE READ  **PF**@@@@@@      TPF$  @@C@@@            [\?[0@EH@@@@EF
)@@G@@<C^[S@]&@)@@SPEC 2COUNT  CARD  CYCLESPEC 1@]B@@G 3: &  2: & 1: &   SPEC EG
)@@G@@      EI@@@@<CJ@)E@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ECONDSEH
)@@G@@MILLIS@@R@@@ CYCLEEJ@@@@0@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EI
)@@G@@@@@@@@ECONDSMILLIS@@R@@@ CYCLEEK@@@@@@@@@@<B!@SE@@@@@@)C?@+^ [@@@@A]0@@BEJ
)@@G@@A])@@A@@@@@@@@@@@@@@@@@@@@2#B<@@@@@@@@@@@@DF@@@@@@^@@ @@D@@?@[-@@%@^D@@@EK
)@@G@@@@E#CN@@@@G[@@@@@L)@@@@@@@@@@WE$ASC$      E$TABLE     E$ASCII$    RINF$ EL
)@@G@@      PRINT$      ERROR       AUXBUF      IALL$       DOWNTOC     PCFDOWEM
)@@G@@N     SCAN        EXIT$       D$ATE       PCT$        EDIT$       EFD1$ EN
)@@G@@      ESKIP$      EDECV$      ECHAR$      EDAY1$      ETIME$      EPRT$ EO
)@@G@@      EDITX$      GETOPN      SELT$       ELT$        OPENSDFO    CONVEREP
)@@G@@T     R$          FIASG$      FIPKT$      IOW$        EMSG$       E$RROREQ
)@@G@@$     FAC$$       FITEM$      EFD2$       PFS$        ECOLN$      COM$  ER
)@@G@@      ECOPY$      EDECF$      CLOSESDFO   FIFREE$     ASSIGN      @@[@@@ES
)@@G@@@@@@ ACCNT        @@@@@@@@@@[OCHAR        @@@@@@@@@@[PCOMPARED    @@@@@@ET
)@@G@@@@@@[VCONTIN      @@[@@@@@@@C?DATA        @@@@@@@@@#A0DATE        @@@@@@EU
)@@G@@@@@#AQDEMAND      @@@@@@@@@#AODOPFS       @@[@@@@@@@B>DOWNDATE    @@[@@@EV
)@@G@@@@@@@@EDITPKT     @@@@@@@@@#AHEDTPKT      @@@@@@@@@# PEDTXFN      @@[@@@EW
)@@G@@@@@@BEFIDIAG      @@[@@@@@@@AXFIELDPKT1   @@@@@@@@@@U5FIELDPKT2   @@@@@@EX
)@@G@@@@@[\?FIELDPKT3   @@@@@@@@@#^<FINISH      @@[@@@@@@@F<FREE1       @@[@@@EY
)@@G@@@@@@F2GETSPECS    @@[@@@@@@@[\INFOBITS    @@@@@@@@@@@@INQUOTE     @@@@@@EZ
)@@G@@@@@@[QISDFIPKT1   @@@@@@@@@@VDISDFIPKT2   @@@@@@@@@[0@LA          @@@@@@FA
)@@G@@@@@@[MMASTERPKT   @@@@@@@@@#^7MONSTER     @@@@@@@@@#A\NRA         @@@@@@FB
)@@G@@@@@@[RNRB         @@@@@@@@@@[SOUTFIL      @@@@@@@@@#A2PCTBUF      @@@@@@FC
)@@G@@@@@#ARPEEK        @@@@@@@@@@[NPFSPKT1     @@@@@@@@@@U.PFSPKT2     @@@@@@FD
)@@G@@@@@[\4PFSPKT3     @@@@@@@@@#^:SDFOPKT     @@@@@@@@@# ESIGNOFF     @@[@@@FE
)@@G@@@@@@D?SIGNON      @@[@@@@@@@@$SPECPOPT    @@@@@@@@@#A1SQUEEZ      @@@@@@FF
)@@G@@@@@@[TSTARTIME    @@@@@@@@@#APWINDOW      @@@@@@@@@@[U^@)CLKB(]E@!AC)^@)FG
)@@G@@@A@@@[^@)^@)^@)E-[CLGC**CLK C.E-[CLGC**DC(@#@@@[AK3A03A0)DC.DC!AC)@^@@@[FH
)@@G@@)@@@C@)@@@;[K0@K0@^C@^C@O@@@@@/,0@@Q[4@@@@[4@@@@C8@@@&AA0@@@AE0@@@A]0@@@FI
)@@G@@@@@@@@AA@@@@)@B[E(@^)C]^@U^@))[80^@@%4K@@@C8K@@ /K@@@N>8@@K@C@@@@@/,0@@@FJ
)@@G@@/G@@@O/,0@^PR90@@@AB@@@@)@K@3@^C[O[[@@@@@@)@[@S@@@@@@@@@@@@@@@@@@@/KF@@@FK
)@@G@@R]0@@@/K@@@C/,0@@@A]0@@G/K@@@NAC@@@@)@^@C@)@Q[#[EK#@CK#*S@@@CCE@@] @@@@#FL
)@@G@@/,0@@@%8K@@[C4W@@@CCE@@[R')@@@A]0@@[@@@@@@AD@@@@)@Y[F@^[#@@K)^K#1)G@^@@@FM
)@@G@@/K@@@?*@@@@#/^@@[@C[K@@@/!7@@@ @@@@^/K@@[0N')@@]/!0@[3AE@@@@)@$[##@[#@@KFN
)@@G@@^[#@[#@@/S#@@@@@@@(@@@@@[@K@@] ^@@@@/K@@@"/,0@]?C8K@@[[@K@@[ C@@@@AF@@@@FO
)@@G@@)@\[E/S]@-@K)DK)^[@^C])@9?K@@@C8@@@H/K@@@9*@G@@[=8K@K@C@K@@@CC@@@@/K@@@/FP
)@@G@@*@@@@@AG@@@@)@8[F]@?^@K^G@^@/S]@)@@@(@@@@@/K@@[+A]0@@^/,0@]?C8K@@[/K@@@"FQ
)@@G@@[^W@@ C8K@@[/,0@@@AH@@@@)[[[F@^@K^G@^G@]=[-80A@@*@@@@#C8K@@@9*0@@B9*K@@ FR
)@@G@@/K@@[J:8K@@[/K@@[K=9K@K@/K@@[^AI@@@@)[E[E(@UCKBCS@CS@C@) C#@C8K@@@/K@@[TFS
)@@G@@%8K@@[/K@@[+9?0@@B9?K@@ /,0@@@C8@@@[C8K@@@AJ@@@@)[N[]/S#@@(@UCKB]@O)GJA@FT
)@@G@@0@@@@@*@@@@#C8K@@@/K@@[ZC8K@@]/,0@@@C8@@@]C8K@@@*@@@@#AK@@@@)[V[E(@UCKB@FU
)@@G@@)CS@B<@S@C@@/K@@[?*@@@@^A]0@@^/,0@]? @@@@GC8K@@[/,0@@@C8@@@#C8K@@@AL@@@@FV
)@@G@@)[=[#@^@/S#@[@K0@K^G@@@@@@@@@@[@K@@]/K@@[?[@K@@[/K@@[:*@@@@#/^@@[+/!7@@@FW
)@@G@@/,0@]?AM@@@@)[?@;#@@(@GC]@))@@)@D@K@@@@@@@@@@@@@/KF@@@R]0@@[8M)@@-/!0@[3FX
)@@G@@C^E@@]R')@@@A]0@@#AN@@@@)@F@C@)[3@;#@@K0@^G@^G@^G@@@@@ @@@@FC@K@@EC@@@@DFY
)@@G@@/!7@@@[@@@@EC8@@@[[@@@@D@@@@@@AO@@@@)['[F]@.@K^@^C]4[#@@@@@@[@K@@E/K@@]<FZ
)@@G@@/,0@@@C8@@@[C@K@@G/K@@]A/K@@]]/K@@["/,0@@@AP@@@@)]#[N#@@K@^G@[@@@@;D@@@SGA
)@@G@@/^0@]RC[I@@@[@K@@E;CK@@MC8.@@@;@K@@M/K@@]< @@@@GA]0@@FAQ@@@@)]H[M^@^@^G@GB
)@@G@@^@@@@@/K@@]<A]0@@FC8@@@[CXG@@K/K@@]Q:9@@* %9@@**/K@@]Q%9K@*_)9@@@_AR@@@@GC
)@@G@@)]R[U@^@^@@@C8@@@[CXG@@K/K@@]<:9@ K)%9@ K%/K@@]<%9K R_)9@@B_C[@@@L+9@J9_GD
)@@G@@;D@@@MAS@@@@)]+[F#@@/S#@[@K[@[@@@@@@/K@@[7/!7@@@H8K@@[/K@@]:/!7@@@/^@@]*GE
)@@G@@/K@@['(@@@@FA]0@@FAT@@@@)]:@F@@@@@@@)@L@C@)]?@:[K]=@2A@]A@@@ @@@@K[@K@@LGF
)@@G@@R')@@@/^@@].A]0@@]@@@@@@/K@@[3AU@@@@)]1[E/S#@[@^G@^@K0@^G@@@9*0@@G9?/@@EGG
)@@G@@[^K@@KC^E@@[/K@@]8[CK@@KCCE@@[/K@@]6*@@@@#AV@@@@)]'[EK0@K[#@@K[][@@@@@@@GH
)@@G@@/,K@@@T9@@@A/^0@#^C@@@@I[@K@@LG8K@@[/K@@#49*0@@I9?/@@IAW@@@@)##[F@^C^KESGI
)@@G@@@CKD]^]S@@@@C80@@]N8K@@^/,)@@@C8K@@GL9@@@[')D)@@/,K@@@T9@@@^/K@@#AAX@@@@GJ
)@@G@@)#G[MES@C@]@C@@@@@/,%@@@/K@@#*%80@@ /K@@#P:80@@/')D)@@+@)@[#/K@@#%Q;K@@GGK
)@@G@@M#Z)@@AY@@@@)#Q[M^@()@)@C@@@@@/,%@@@/K@@#+%80@@ ')D)@@+@)@[#/K@@#=Q;K@@IGL
)@@G@@/K@@#$%80@@//,%@@@AZ@@@@)#)[MK@K@K@@@@@@@@')E)@@<@0@@K/K@@#!/,%@@@/,%@@@GM
)@@G@@8^K@#V')E)@@<@0@@K/K@@#$/,%@@@BA@@@@)#%[F@[#@[#@@/S#@[@K0@K@/K@@#4[CK@@KGN
)@@G@@/K@@#3*@@@@#C@K@@L @@@@K/,%@@@/,%@@@8^K@#JBB@@@@)#3[##@@()@CKE]@-)@YG[)@GO
)@@G@@@@@@@@*@@@@#C@)@@L/K@@^K%8@@@[/,0@@@C8K@@ C8@@@G[^K@@KBC@@@@)#;[F@^@K]=[GP
)@@G@@-80A@[M@4@@@C8@@@^C8K@@@*@@@@#C8K@@@/K@@^ [C!@@^/K@@^@*CH@@^/K@@^ABD@@@@GQ
)@@G@@)^^[F]@9@^@K]=[-80A@[M@4C8K@@@*@@@@#C8K@@@/K@@^J[^!@@^/K@@^E*^H@@^/K@@^JGR
)@@G@@/,0@@@BE@@@@)^H[]K)IK^@K)FKK@@)@M@C@@@@@@@/KF@@@R]0@@]/,0@@@C8@@@^/C@@^NGS
)@@G@@/K@@^N/,0@@@C8@@@^BF@@@@)^P[F[K0@EK#@)CK]]@@@@@@/K@@^)(CH@@^C@)@@@/G@@^,GT
)@@G@@C@K@@G/!7@@@R')@@@ @@@@MA]0@@#BG@@@@)^Y[MK[@^[#@@K^G@@C[@@@]/K@@^([DH@@^GU
)@@G@@C[@@@[/K@@^$*CH@@^/K@@^%>8)@@[/K@@^:*^H@@^BH@@@@)^*[EK0@K^G@#1)G@^[@K)P@GV
)@@G@@CCE@@[/,0@@@/G@@^9/K@@^R(@@@@MA]0@@M/K@@^?A]0@@M[ H@@^BI@@@@)^1[M^C[0^C@GW
)@@G@@L[@@@@/KF@@@R]0@@# @@@@G[C@@@@C8@0/&[@U@@#C@T@@^/,0@@@%8@@@[C4G@@@BJ@@@@GX
)@@G@@@@^@@#@@B@@Q@@3@@A@[F@@@@@E@@N@@@@^;@@@@@^CARDBUF     AUXBUF      DUMP  GY
)@@G@@      CREATETCF   INFOBITS    CLOSESDFO   MASTERPKT   SWAP        MONSTEGZ
)@@G@@R     ROOT        SDFOPKT     ERROR       PFSPKT1     PFSPKT2     PCFERRHA
)@@G@@OR    ISDFI       FDGET       ASFDGET     FDPUT       E$PARAMS    INSERTHB
)@@G@@      OPNSTARCARD BUILDNODE   @@[@@@@@@@]?BUILDPCFTREE@@[@@@@@@@@QDUMPTRHC
)@@G@@EEPCF @@[@@@@@@@^PFILESCAN    @@[@@@@@@@[3NOSTARTCF   @@@@@@@@@@@@PCFDOWHD
)@@G@@N     @@[@@@@@@@@@AC3 C(C9JE-JAK3A06A@)^@)@ @@@[^@)^@)^@)D-[ETOCS.D-[ETOHE
)@@G@@)@[@K@)@@@3[K0@EK@CK@>C@@@@@@@R])@@GC8@@@@/,0@@@C8@@@@ @@@@[A]0@@@&&&&&&HF
)@@G@@@@@@@@AA@@@@)@A[M@K)][@K0@K0@@9*K@@-9?K@@S/,0@#:C^G@@]C^W@@#/,0@@@%8K@@]HG
)@@G@@C@@@@EC0W@@@CCG@@[AB@@@@)@K[##@@(@@]@-)@-)@-)@@@@@@@@@[W@@@@9*K@@Z9?K@@SHH
)@@G@@/,0@#:CCG@@]CCW@@#C8@@@@[S@@@@AC@@@@)@S[E()@O0@K0@[@K0@K^G@@CS@@@@/@@@]THI
)@@G@@CW@@@@/,0@#U @@@@JG8)@@[C@)@@RC8K@@]C8@@@HAD@@@@)@-[F@K0@K0@K@K^[@@@@@@@HJ
)@@G@@/K@@@8/KG@@*/K@@@!?/@@@[?/@@@ /,0@]$9?0@@-9?K@@Z/@@@]QAE@@@@)@%[F@K^@(@@HK
)@@G@@@CK[)@@@@@@@/,0@@@C8@@@ QBW@@[&FW@@[C@?@@#C8@@@@/K@@]#/K@@[M/K@@[^AF@@@@HL
)@@G@@)@3[F#@@(@@]@-)@C@@@@@@@C8@@@C/K@@@.%8K@@]CWK@@@/K@@]P[@W@@#'KW@@#C8@@@@HM
)@@G@@C@K@@!AG@@@@)@/[N@^@(@@@)]A@@@[4@@@]C8@@@&/K@@]P[CW@@#G8K@@[CCW@@#C8@@@@HN
)@@G@@/,0@A#C8@@@]/K@@@"AH@@@@)[A[N#@@K[@^@(@@@@G8K@@[C^W@@#C8@@@@/,0@A#C8@@@#HO
)@@G@@/K@@[GC8@@@ /K@@[F%8@@@]CS@@@@AI@@@@)[K[EK^G@^[@^@K@@@@@@@@@/^0@[2C80@@[HP
)@@G@@/K@@[SC80@@@/ @@[R/@)@[PCS@@@@/K@@]P[^W@@#AJ@@@@)[T[F#@[@^@K0@^@(@@@@@@@HQ
)@@G@@C8@@@@/,0@A#C8@@@ [4@@@]C8@@@&/K@@[&%8@@@]/K@@[2:W@@@@AK@@@@)[+[M[@K0@^@HR
)@@G@@K@@@@@C8@@@]/K@@[?C8@@@C/K@@[:%8K@@]CWK@@@/K@@[1[^W@@#G8K@@[C^W@@#AL@@@@HS
)@@G@@)[?[F@EK@@C]A@]A@@@@@@@@%8@@@]CWK@@@CS@@@@/K@@]][CW@@#G8K@@[CCW@@#C8@@@@HT
)@@G@@/,0@A#AM@@@@)[5[N@@K@^[#@@@@@@C@K@@!/,0@A#C8@@@A:8K@@]C8@@@[/K@@[.C8@@@BHU
)@@G@@:8K@@]C8@@@^/K@@['AN@@@@)[_[E(@@]@-)@-)@)CS@@@@@%8@@@]CWK@@@/K@@]L:W@@@@HV
)@@G@@CS@@@@/K@@]P[@W@@#'KW@@#C8@@@@AO@@@@)]C[N@@K@^[#@@@@@@C@K@@!/,0@A#C8@@@AHW
)@@G@@:8K@@]C8@@@[/K@@]KC8@@@B:8K@@]C8@@@^/K@@]HAP@@@@)]M[E(@@]@-)@)C]A@]@@@@@HX
)@@G@@/@@@]+CS@@@@/K@@]</,0@ XCW@@@@/K@@]S[@W@@#'KW@@#C8@@@@AQ@@@@)]V[](@@-@^-HY
)@@G@@)@-)@) C@^C@=G@@@@A]0@@[/,0@@@R')@@@/,0@ X9*K@@S9?K@@-/,0@@@R')@@@AR@@@@HZ
)@@G@@)]<[M/S#@[@KL[@K^@/^)@##/K@@]!:@K@@I!@K@@ID8@@@[A]0@@[/KF@@@R]0@@@/K@@@]IA
)@@G@@(@@@@[AS@@@@)]![M^[@[@^@@@@@@@C8@@@[/K@@]8!@K@@J/K@@]5:@0@@I!@0@@I/ @@##IB
)@@G@@/K@@]1:@0@@K!@0@@KAT@@@@)]7[N@[@^@K@@@@@@@:@)@@KC8@@@^/K@@##C8@@@]/K@@]_IC
)@@G@@!@0@@H/K@@]/:@K@@K!@K@@K/K@@##AU@@@@)#[[E^^KM=@@CS@@@@@@@@@@[@@@@GC0G@@@ID
)@@G@@CCG@@[C8@@@@A]0@@]/KF@@@R]0@@[C8@@@#%@K@@JAV@@@@)#E[E(@@@-@]O)@@/S#@@@@@IE
)@@G@@%@@@@GC0G@@@CCG@@[C8@@@@/,0@@@[CW@@#G8K@@[CCW@@#C8@@@@AW@@@@)#N[N]@C(@@]IF
)@@G@@@)+]C@/^0@#ZC[K@@IA]0@@#/KF@@@R]0@@]/,0@#:CCG@@]CCW@@#C8@@@@/,0@@@AX@@@@IG
)@@G@@)#X[F]@L@K) K)AK@@@@@@@@')E)@@<@0@@K')D)@@+@)@[#/K@@#&/,)@@@/,K@@@/K@@#)IH
)@@G@@/,K@@@AY@@@@)#&@:@[[@@@@)@R@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/KF@@@R]0@@#II
)@@G@@/,%@@@/,%@@@8^K@#+AZ@@@@)@V@S@)#:@:[K0@K0@K0@K)B@@@@@@/,0@@@ @@@@V[@@@@XIJ
)@@G@@[@K@@WA]0@@^@@@@@@@@@@@@@@@@@@BA@@@@)#0[F@K^[#@@K)CK^G@^@@@@/K@@^.A]0@@VIK
)@@G@@/K@@^./,0@@@C@@@@[C@K@@X/K@@#9/K@@#7/K@@#3BB@@@@)#9[M@ES@C@-@C)@@@T'@@@^IL
)@@G@@/K@@^^/,K@@@T'@@@A/^0@^]C8K@@HC@@@@I;C0@@MC@0@@HCYG@@KBC@@@@)^#[F]@P]@S@IM
)@@G@@/S]@>@K0@@@@C9K@@@ @@@@U/K@@^/%)0@@@H'@@@[')D)@@+@)@[#/,)@@@/,K@@@BD@@@@IN
)@@G@@)^G[F@K0@K0@^@[@@@@@@@@@/,0@ BG9K@@[')E)@@<@0@@K/K@@^X%80@@, @@@@T[[0@@SIO
)@@G@@/,0@ BBE@@@@)^P[N#@@K@[#@@@@@@:80@@ %80@@.A]0@@UC80@@ G9K@@[')E)@@<@0@@KIP
)@@G@@/K@@^X%80@@-[[0@@TBF@@@@)^Z[F@^G@^G@^C@4G@^@@@@@<@0@@KC80@@//K@@^;A]0@@VIQ
)@@G@@/,0@@@C@)@@XC@K@@WC8@@@A/K@@^&BG@@@@)^*[M@@K0@ES@CK @@/,0@@@C8@@@S[[K@@RIR
)@@G@@G9K@@[/,%@@@/,%@@@')E)@@<@0@@KC80@@&')E)@@BH@@@@)^2[##@@()@-@O-)@YG[)@)]IS
)@@G@@@@@@@@/K@@^;C8@@@[/K@@^'*@@@@U[@0@@T/,0@@@C8@@@T[@0@@SBI@@@@)^'[]K^G@#1)IT
)@@G@@G@^@K0@K0@@@@@@@@@ @@@@R[40@@HC80@@&/K@@  (@@@@VA]0@@V/K@@^.C8@@@]BJ@@@@IU
)@@G@@) ][N#@[#@@KL[^@@@')D)@@+@)@[#/K@@ P @@@@NA]0@@ /KF@@@R]0@@^C8@@@@ @@@@TIV
)@@G@@ @@@@SBK@@@@) G[U^@@[@@@C80@@ 8 @@ E;>)@@A;()@@YC[)@@JG9K@@[')E)@@<@0@@KIW
)@@G@@/K@@ R?80@@0?80@@'BL@@@@) R[F@K[@KL[K0@EK@@@@@@@C8@@@@[C@@@YA]0@@A/KF@@@IX
)@@G@@R]0@@ /D0@ T;(0@@A/H0@ V/[0@ VBM@@@@) )[E^G@^G@^[#@[#@[#@@@@%8@@@[C@)@@TIY
)@@G@@C@K@@SC^@@@Y/@@@A[CC@@@Y[^@@@YC0G@@@CCG@@[BN@@@@) ([F@^G@^G@^G@^G@[@@@@@IZ
)@@G@@C8@@@#/K@@ 3%8@@@[CC@@@Y[@)@@+[@K@@-[4@@@]C8@@@&/K@@ 5BO@@@@) 2[F@^[#@[#JA
)@@G@@@@()@O0@K0@@G8)@@[C@)@@RC8K@@]C8@@@H[@)@@)[@K@@Z/K@@ "C8@@@ /K@@ 4BP@@@@JB
)@@G@@) ;[]K[@K^[[@@@@@@)@Z@C@@@@@@@/KF@@@R]0@@A/^@@ >/,0@# /,0@A#C8@@@]/,0@#UJC
)@@G@@ @@@@JBQ@@@@)@)@)@@@@@@@)A#@<[]=@[80^[S@@@*@@@@@R')@@@[@@@@MA]0@@B&&&&&&JD
)@@G@@@@@@@@@@@@@@@@@@@@BR@@@@)AB[#@JA@)GK^C#O@K0@K@@@@@@@@@/K@@AK[4K@@<C8K@@ JE
)@@G@@/K@@AI/,0@@@/K@@AG(@@@@@/K@@AJBS@@@@)AJ[#]@5]@9]@.]@>][@^@@@@@@@@@/K@@A3JF
)@@G@@:9)@@#%9)@@ /,0@@@C)@@@@/,0@@@C/@@@@/,0@@@BT@@@@)AR[##@[][^/S#@[@^C^^G@^JG
)@@G@@C^K@@@/,0@@@C@@@@)/,0@@@C/@@@,/K@@A<(@@@@)/,0@@@C@@@@ZBU@@@@)AZ[EK[][[#@JH
)@@G@@[][C@@@@@@@@?/@@@[?/@@@CC@@@@M/,0@@@C@@@@,/,0@@@C/@@@-/K@@A<?9)@@ABV@@@@JI
)@@G@@)A*[N@K^[@K^[@K^@@C/@@@//K@@A1/K@@A1/K@@A3/K@@A1/K@@A3/K@@A3/K@@A1/KG@A(JJ
)@@G@@/K@@A3BW@@@@)A2[F][@^[#@[][^/S#@[@@@C/@@@,/K@@A"(@@@@+/,0@@@C@@@@-/K@@BDJK
)@@G@@:9)@@]%9)@@C/,0@@@BX@@@@)A;[F][[#@[][^[@K^@@@@@@/K@@BB/KG@A_/K@@BD?/@@@^JL
)@@G@@?/@@@CC@@@@M/,0@@@C@@@@+/,0@@@BY@@@@)B^[F@K^@K)K^C^4G@^C @@@/,0@@@C/@@@<JM
)@@G@@/,0@@@C/@@@]/,0@@@C/@@@-/K@@BB/K@@BD/K@@BBBZ@@@@)BH@V][P[@@@)@!@K@@@@@@@JN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@/0,0  @@[@@[/KF@@@R]0@@B/,0@@@CA@@@@@@@@@@^KM=@@JO
)@@G@@CS@@@@@@@@@@[@@@@GC0G@@@CCG@@[C8@@@@A]0@@]/KF@@@R]0@@[C8@@@#%@K@@JAV@@@@JP
)@@G@@@@^@@#@@B@@Q@@3@@#@@_@@@@@E@@\@@@@BK@@@@@CMASTERPKT   SCAN        SWAP  JQ
)@@G@@      PCFERROR    FDGET       ASFDGET     FDPUT       ISDFI       ERROR JR
)@@G@@      CHAR        CONVERT     MONSTER     NOSTARTCF   STARCARD    EDTPKTJS
)@@G@@      EDIT$       ECHAR$      EDECV$      EFD1$       ESKIP$      EMSG$ JT
)@@G@@      WORDS       AUXBUF      @@@@@@@@@@@]CARDBUF     @@@@@@@@@@@<CREATEJU
)@@G@@TCF   @@[@@@@@@@@@^@)C-[E-[E-TE[  @3B@( 83A8\^@)@A@@@[^@)^@)^@)C-[E-[E-TJV
)@@G@@E[  @3BC( 83B@\^@)@A@@@[^@)^@)^@)C-[E-[E-TE[  @4A@( 83BC\^@)@A@@@[^@)^@)JW
)@@G@@)@@@S@)@@@3[K)@K0@K)[K@@>;)[@@/B0@@EG#0@@@+#)@^/C#)@@@A]0@@@@@@@@@@@@@@@JX
)@@G@@@@@@@@AA@@@@)@A[F@^C@=@K#1)C@4[]@K@@A]0@@@/K@@@W*@@@@@/,0@[TC8@@@[/K@@[RJY
)@@G@@/,0@@@C8@@@D/K@@@EAB@@@@)@J[##@[]@P#@[]@OK^C[=@@@@@@@@/K@@@V/,0@@@/K@@@RJZ
)@@G@@>;)@[@/,0@@@C@@@^"/,0@@@C@@@^.AC@@@@)@R[E(@I-)@CK^C@)B<@K@*@/K@@[@(@@@@@KA
)@@G@@/K@@@)>;)[@@/K@@[R/,0@@@[@W@@#C@K@^_C8@@@@AD@@@@)@)[](@M)C@)CS@CK CK )@@KB
)@@G@@@@@@@@C@K@@@C@@@@@A[0@@[/K@@@3>;)@[@/G@@[@/,0@^UR90@@@AE@@@@)@*[##@[#@[]KC
)@@G@@@(]@T#@[#@[#@[]@*@[@@@@@C@K@@]C@@@@@R[0@@[/,0@@@ @@@@@[@K@@][@@@@@AF@@@@KD
)@@G@@)@0[#]@!]@[@EK#*S@]^[]^@@@@@@@C#)@@@/,0@@@[@W@@#C@K@^_C8@@@@/K@@@_C#)@@@KE
)@@G@@[@K@@@AG@@@@)@8[EK@/S]@1@^C#O[]@@@@@C#)@@@/K@@@-/,0@@@A]0@@G/K@@@_%4K@@@KF
)@@G@@C8K@@ /K@@@_>;)@K@AH@@@@)[[[MK[@^@K[@@@@@@/,0@ VC8@@@]/,0@[TC8@@@]/K@@[FKG
)@@G@@>;)@^@/,0@ VC8@@@[/K@@[ >;)@]@AI@@@@)[F[M/S#@[@^@K[@^@/,0@[TC8@@@^/K@@[RKH
)@@G@@>;)@)@/,0@ VC8@@@#/,0@[TC8@@@#/K@@[L>#)@ @AJ@@@@)[P@+K^^@@@@)@#@K@)[T@N[KI
)@@G@@K0@@@@[@@@@#A]0@@[@@@@@@@@@@@@/KF@@@R]0@@@/,0@ VC8@@@^AK@@@@)[V[#]@*(@W-KJ
)@@G@@@Y-@))C]^@U^]C@@@@9?K@@@ @@@@@/C@@[*/!)@]N9?K@@@[@K@@@C8K@@[ @@@@@AL@@@@KK
)@@G@@)[<[F@K[]@D@K0@^@@@@@@@@/!&@@@/K@@]KN')@@] @@@@^/K@@]L/,0@@@C8@@@C/G@@[$KL
)@@G@@/!)@]NAM@@@@)[?[N@^G@@K^[@K^@@/K@@["/K@@["/K@@["/KH@[2/K@@['?/K@@[?/K@@CKM
)@@G@@C@)@@#C?W@@#/G@@]EAN@@@@)[6[F@K^[@ES@]^@M@@@@@@@:8)@@[/K@@]D/,0@@@C8@@@AKN
)@@G@@C8K@@ /K@@]B/K@@]^/K@@][/K@@["AO@@@@)[_[N@K[@K[@K[@@@@/,0@#Q:8)@@^/K@@]DKO
)@@G@@/,0@#Q:8)@@#/K@@]D/,0@#Q:8)@@]/K@@]D/,0@#QAP@@@@)]D[F@K)LK^@K)]K0@K^^@@@KP
)@@G@@R]0@@[8M)@[:A]0@@^/,0@@@C8@@@C/C@@]J/!)@]N9?K@@@/K@@[:AQ@@@@)]M@E@)@ @0@KQ
)@@G@@/V][C*@@@@@@)^<@C@@@@@@@@@@@@@@@@@@F@@@@@@@@@@@@@@@@@@@@@@@@/KF@@@AR@@@@KR
)@@G@@)]N[##@[#@[#@[#@@K0@K0@ES@@@@@C8@@@  @@@@E[C@@@DC8@@@W[@@@@CC@@@ [ @@@@BKS
)@@G@@9*K@@ AS@@@@)]V[#][G/S#@[@ES@]^@MA@[80A@@@%@@@ ]C@@@@F/,0@@@C8@@@AC8K@@ KT
)@@G@@/K@@]-(4@@@C'=@@@@AT@@@@)]<[#@K0@K0@^G@]&@]^]T80A@@@@@(4@@@C'=@@@@C8@@@ KU
)@@G@@[CK@@DC8K@^S[@@@@EC^@@@I/K@@#NAU@@@@)]:[#@ES@]^@MA@]A@]A@@@@@@@@@@H8K@@ KV
)@@G@@C@K@@E[@@@^<C^@@]Q/,0@@@C8@@@AC8K@@ /K@@]\AV@@@@)]3[F#@@[#@@K0@K0@ES@@@@KW
)@@G@@C8@@@ R[K@ #[@@@@EG8@@@EC@@@@EN;0@@W/!&@@@ @@@@G[@K@@EAW@@@@)]/[#][G/S#@KX
)@@G@@[@K0@^@()@@@@@@@@@C8@@@AC8K@@ /K@@# :8@@@ C4@@@C/K@@# (4@@@C'=@@@@AX@@@@KY
)@@G@@)#^[F]@D@K0@K@K[#@@@@@@@[@@@^<H8@@@[/K@@#L/!&@@@D8@@@[/^@@#FC@@@^</K@@#KKZ
)@@G@@/,0@@@AY@@@@)#H[M[@K^@^[[@@@@@A]0@@]/K@@]N/!&@@@D8@@@[/K@@#P/K@@]68N0@#ALA
)@@G@@/!&@@@1@G@@#C8 )@@AZ@@@@)#R[M()@ G@@ES@@@@9*.@@]9?/@@^9*.@@@9?/@@@C8K@^=LB
)@@G@@M#!)@@N8K@@ C8K@ ^&_)__"C8)@^?BA@@@@)#-[M#1)G@^@[@@@@@[[H@@A[^.@@^/K@@#?LC
)@@G@@[[X@@B[[H@@ [C.@@^/K@@#(*@@@@^9!G@@CC^/@@BBB@@@@)#:[EES@]^@[80A@@-@*C@@@LD
)@@G@@/K@@^P%8@@@[/,0@@@G8K@@]=@)@  C@)@@@C8K@@BC8@@^=[[X@@CBC@@@@)#4[F]@@()@BLE
)@@G@@<@S@C@@@@@@@;^K@@=C[X@@BC[H@@ CC.@@^/K@@^B*@@@@^;^K@@=C8)@^=C[)@@@BD@@@@LF
)@@G@@)#.[EK@JA@0@^@K)]@@@@@@@/,0@@@C8@@@B/K@@^A[[X@@B=[)@  [[H@@ [C.@@^/K@@^^LG
)@@G@@*@H@@ BE@@@@)^A[N@@[@@/S#@@@@@=[)@  [[H@@A[^.@@^/K@@^M*@H@@A;^K@@=C[X@@CLH
)@@G@@C[H@@AC^.@@^/K@@^OBF@@@@)^K[MK[]@D@K[]@D[@/KF@@@R]0@@]/,0@@@C8@@@^/C@@^SLI
)@@G@@/K@@^S/,0@@@C8@@@B/K@@^O[[X@@CBG@@@@)^!@C@)^U[#[K0@^@K)@@@@@C H@@^CC.@@^LJ
)@@G@@C@)@@@C@K@@G/G@@^7/!7@@@ @@@^!A]0@@#@@@@@@BH@@@@)^+[EK)PK)QK)PK)Q[][P][SLK
)@@G@@9*0@@]9*0@@]9!X@@]9?.@@@[[)@@E[[K@@E[ @@@D[^0@@D9!X@@ BI@@@@)^:[F][P][SKLL
)@@G@@[@^G@^@@@@@@/K@@^5A]0@^!=8)@@[/K@@^4*@H@@A/K@@^1(@H@@ 9(K@@A9(K@@ABJ@@@@LM
)@@G@@)^4[##@@/S#@[@K[][W/S][P@@@@@@/K@@^_(@@@@E/,0@@@>8)@[@/G@@ D/K@@^W(@@@^!LN
)@@G@@A]0@^!BK@@@@)^/[##@[]@P@EKCC[80^]2@-)@@@@@C@@@^"/K@@ A(@@@@E/,0@ FC8@@@@LO
)@@G@@/K@@ [/,0@@@C@@@^.BL@@@@) ^[N]@P@EKC*@)+]@ @H@@@C^W@@IA]0@@^/KF@@@R]0@@#LP
)@@G@@ @@@@G/,0@ FC8@@@@/K@@ C/,0@@@BM@@@@) I[U@@@@@@@C8K@@[[^?@@G[@"@@@D80@@[LQ
)@@G@@[@!@@@&;)@@[CC?@@D[^?@@H[^?@@JC8)@@[C^W@@DBN@@@@) T@N[@@@@@@)^,@8@@@@@@@LR
)@@G@@RELOCAIC    SYMBOL@@@@@@@@@@@@@@@@@@@@@@@@/KF@@@R]0@@^BO@@@@)^5@8@@@@@@@LS
)@@G@@) V@N[K)S@@@A]0@@@A]0@@ N &    NOT IS     OMNIBUTE    ABSOLUTABLE BP@@@@LT
)@@G@@) X[E^G@^C@[@K0@EK^)@@@@/!7@@@R90@@@ @@@^0/K@@A_N;@@@]C#)@@@[@@@^1;*@@@[LU
)@@G@@H8@@@[BQ@@@@) &[N@^G@@K^G@^@@@*@H@@A*@@@[G/K@@ ;A]0@^,/K@@ ,*@H@@ (@@@[GLV
)@@G@@ @@@^,C@K@@G/G@@A_BR@@@@) 0[F@K0@K#1)G@^@^@@@@@@C@H@@B/K@@ ;(@H@@ *@H@@ALW
)@@G@@/K@@ ;>#)@  /K@@ ;A]0@^,/K@@ 3BS@@@@) 9[]K0@JA@0@K@/S#@[@K0@@@@@@@A]0@^0LX
)@@G@@/K@@AW*@@@^0R]@@@H/K@@A"(@@@^,A]0@^,%@H@@CBT@@@@)A[@%(@2-@4-)@-)@-@6@@@@LY
)@@G@@)@@@Q@)@@@@@NTS IN ELEME/,0@@@9?G@^2C@@@^1/,0@@@C8@@@@BU@@@@)@]@I@)@@@@@LZ
)@@G@@)AA@2()C-@8C]^]%^#*@@@@@/,0@@@9?@@@@/K@@AL(@@@[G/,0@@@C8@@@@ &    BV@@@@MA
)@@G@@)AG[##@[][1][T][5@K)QK)XK0@@@@C/@@^'/,0@@@9?@@@@/K@@AR/,0@@@9?@@@@/,0@@@MB
)@@G@@C/@@^'BW@@@@)AO[#][1][P][4K)Y^CB4CC@@@@@@@/,0@@@/,0@@@C8@@@]/,0@@@C/@@@:MC
)@@G@@/,0@@@9?@@@@/,0@@@BX@@@@)AW[E(@2-@4CKK+^#UA@@)@@/K@@A(:@C@@]C@@@ A/,0@@@MD
)@@G@@9?C@@@/,0@@@C/@@@[/,0@@@C8@@@@BY@@@@)A>[EK)Y^CA31)G@^@K)-@@@C/@@@(/,0@@@ME
)@@G@@C/@@@[/K@@A;>#)@  /,0@@@9?C@@]/,0@@@C/@@@/BZ@@@@)A,[F][8@K0@K)+^CCK@@@@@MF
)@@G@@/,0@@@C/@@@[/,0@@@[@@@^\;@@@@MC@C@@C(@@@[GC@C@@B/,0@@@CA@@@@)A7[F#@[]]GKMG
)@@G@@)Y^CB4CC^[@@8N@@ </K@@ >/,0@@@/,0@@@C8@@@[/,0@@@C/@@@)/,0@@@C@@@^\CB@@@@MH
)@@G@@)B@@N[@@@@@@)^/@*GKMM=][+]QO)L@@@@@@@]@@@@@@[@@[@@@@@@@@@@@@@]@@&@/KF@@@MI
)@@G@@R]0@@ CC@@@@) [@0/V][CE@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@K@@@@@@@@@MJ
)@@G@@@@E@@F**PF**@@@@@@CD@@@@@@^@@ @@D@@&@[P@@]@[X@@@@@E@ B@@@@B]@@@@@A)@@@@@MK
)@@G@@@@@@@#INFOBITS    SDFOPKT     ERROR       MONSTER     DATA        GETOPNML
)@@G@@      PCFDOWN     MASTERPKT   SCAN        DUMP        ROOT        PREGSAMM
)@@G@@VE    CARDBUF     CLOSESDFO   LASTD$      FIRST       ISDFIPKT1   ISDFIPMN
)@@G@@KT2   R$          IOW$        INSERT      PFSPKT1     PFSPKT2     OPNSTAMO
)@@G@@RCARD COMPARED    EDTPKT      EDIT$       EFD2$       EMSG$       EDTXFNMP
)@@G@@      ECHAR$      EPRT$       EDITX$      ESKIP$      ETIME$      EDAY2$MQ
)@@G@@      FIELDPKT1   FIELDPKT2   DOWNTOC     @@[@@@@@@@@@SUMMARY     @@[@@@MR
)@@G@@@@@@ VET  0\@B@@@[^@)^@)^@)C-[E-[C1GCDBES*AK5 C\ 1ACDGET  0\@B@@@[^@)^@)MS
)@@G@@^@)C-[E-[C1GCDBES*AK6 C\ 1ACDGET  0\@A@@@[^@)^@))@@[F[K0@K0@[@K^[@@@@@@@MT
)@@G@@/K@@@V/K@@@V/KG@@A/K@@@S?/@@@[?/@@@M9*K@@[[@@@@@A]0@@@AA@@@@)@D[F@K^[@K^MU
)@@G@@[@K^@@@@@@@@/K@@]E/K@@[;/K@@[8/K@@[5/K@@[2/K@@@V/K@@@V/K@@[\/K@@@,AB@@@@MV
)@@G@@)@M@3@K^[@K^@@@@@@)@@@Q@)@@@@@NDEFIN *** U/K@@],/K@@]?/K@@@V/K@@@V/K@@](MW
)@@G@@/K@@]EAC@@@@)@]@,@)@@@@@)@S@V#@[]@[@@@@@@@/K@@],'=@@@@C@@@@#      ED ***MX
)@@G@@E PASSOR CODED ERRAD@@@@)@V@F#@@@@@@)@X@6@+)@@@@@@@@@@@@@@@@@@@@@@@@@@@@MY
)@@G@@@@@@@@[[@@@@@@@@@@@&Q@@BR])@@[AE@@@@)@W[E()C-@]-)@-@^C@-@A@@C/@@@[/,0@@@MZ
)@@G@@C4E@@#/K@@@&(4E@@#/,0@@@C/@@@^/,0@@@C8@@@XAF@@@@)@>[#]@L#@[]@CK) ^C[=C[0NA
)@@G@@@@@@@@/,0@@@/,0@@@C8@@@]/,0@@@9?E@@@/,0@@@C/@@@A/,0@@@AG@@@@)@![F@K0@ES]NB
)@@G@@CK@))C]@@@@@/K@@[[/KI@@4/K@@@;?/)@@[?/)@@B/,0@@@C8@@@XR])@@[/K@@],AH@@@@NC
)@@G@@)@6[F@K^[@K^G@^C@=G@@@@@C/K__.C/@@@D/,0@@@C/@@@B/K@@[Z/K@@[U/K@@@;/K@@[PND
)@@G@@/K@@[MAI@@@@)@_[F]@-@K0@K)]^@K)DK0@@9?@@@H/,0@@@9?E@@]/K@@[J(@E@@]/,0@@@NE
)@@G@@C/@@@F/K@@[>/,0@@@AJ@@@@)[C[E^@K)E^C]OG@^C@)@@@@/,0@@@C/@@@J/,0@@@9?E@@ANF
)@@G@@/,0@@@C/@@@//K@@[J(@E@@A9/E@@AAK@@@@)[L[#@K0@K)]K^G@^C@=G@^C@)@@@@/,0@@@NG
)@@G@@C/@@@P/,0@@@C/@@@N/K@@[>/,0@@@C/@@@L/K@@[>AL@@@@)[T[#@K0@K)]K0@K)]K^G@^CNH
)@@G@@@)@@@@/,0@@@C/@@@U/K@@[>/,0@@@C/@@@S/,0@@@C/@@@Q/K@@[>AM@@@@)[-@+K)^K0@KNI
)@@G@@)]@@@@)@<@&@)@@@@@M FILEPROGRAS FOR  STATU/,0@@@C/@@@W/,0@@@C/@@@[AN@@@@NJ
)@@G@@)@$@,@)@@@@@)[>@U()C-@^@@@@@@@C/@@@[/,0@@@C8@@@<:&    N FILEUEST OGE REQNK
)@@G@@ PACKAAO@@@@)[*@;]@KK) ^C[=C[4@@@@@@@@@@@@@@@@@@/K@@],/,0@@@/,0@@@C8@@@]NL
)@@G@@/,0@@@9?E@@@/,0@@@AP@@@@)@?@,@)@@@@@)[\@V#@[]@[@@@@@@@/K@@],'=@@@@C@@@@YNM
)@@G@@LOW    OVERFORAGE NAL ST INTERAQ@@@@)@1@"@)@@@@@)[2@N#@[]@@@'=@@@@C@@@@ZNN
)@@G@@C      IN TO FOUND NAMESLEMENTCATE E DUPLIAR@@@@)[4@F@@@@@@@)@8@"@)@@@@@NO
)@@G@@@@@@@@ FILE A DATA WITH G FILE A PROT DOWN CANNO/K@@],AS@@@@)[5@V#@[]@[@NP
)@@G@@@@@@@@)@_@,@)@@@@@ER EXE FURTHLICT -N CONF OPTIO/K@@],'=@@@@C@@@@)AT@@@@NQ
)@@G@@)[^@Y@)@@@@@)[8@<#@[]@[@K0@@@@@@@@@@R])@@[/K@@],'=@@@@C@@@@-SS     USELENR
)@@G@@CUTIONAU@@@@)[/[]()C-@]CK]]^@*-@C@@@@@@@@@/,0@@@C/@@@[/,0@@@9?E@@@/,0@@@NS
)@@G@@C/@@@[/,0@@@C8@@@XAV@@@@)[B@Y@)@@@@@)]^@%()C-@^CK#CK#)/,0@@@/,0@@@C8@@@]NT
)@@G@@/,0@@@C8@@[BEVICE&EGAL DON ILLAW@@@@)]D@;@K0@[@ES]CK@))[E@I@)@@@@@ ILLEGNU
)@@G@@/,0@@@C8@@@X/K@@]N%@@@@FO')@@CR])@@[/K@@],AX@@@@)[F@,@)@@@@@)]K@U()C-@^)NV
)@@G@@@@@@@@/K@@]R/,0@@@C8@@[ER: &  CLE FONED CYUNDEFIAL OR AY@@@@)]N@M()C-@]@NW
)@@G@@)[K@6@)@@@@@@@@@@@&     MENT: TH ELEO LENG - ZER ERROR/,0@@@C8@@@XAZ@@@@NX
)@@G@@)]P[E()C-@^CK]+@CK^*S@@@9?@@@H/,0@@@9?E@@]/K@@]>(@E@@]/,0@@@9?E@@@/,0@@@NY
)@@G@@C8@@[KBA@@@@)]Y[E^@K)E^C]L]@S@@@@@@@/,0@@@C8@@@]/,0@@@9?E@@A/,0@@@C/@@@/NZ
)@@G@@/K@@]>(@E@@A9/E@@ABB@@@@)]$@N]@X@@@@)[Q@"@)@@@@@ION OU P-OPTLE FORVAILABOA
)@@G@@NAME AEMENT  NO EL/K@@],/,0@@@BC@@@@)[X@I@)@@@@@)](@V#@[]@[@@@@@@@)[Y@Q@OB
)@@G@@)@@@@@PER FI IMPRO/K@@],'=@@@@C@@@@+TPUT  BD@@@@)[)@,@)@@@@@)]?@V#@[]@[]OC
)@@G@@@?@@@@A]0@@@'=@@@@C@@@@<TPUT  FOR OUIFIED E SPECLE TYPBE@@@@)]\[]/S]@1@KOD
)@@G@@)HK)IK^C#4C^^^@@@@R]0@@@'=@@@@/,0@@@/K@@]5/,0@@@ @@@@@/K@@]4*@@@@@BF@@@@OE
)@@G@@)]7[EKOG@^G@@K^[@@@@@@@@/K@@#C/KG@]"/K@@# ?/@@@[?/@@@B9*K@@[[@@@@@A]0@@[OF
)@@G@@/KF@@@BG@@@@)#@@:@K^[@K@)[>@&@)@@@@@OR CODED ERRNDEFIN *** U/K@@A[/K@@^9OG
)@@G@@/K@@^X/K@@^[/K@@#>BH@@@@)[(@6@)@@@@@)# @N#@[]@@@@@@@@@'=@@@@C@@@@=**    OH
)@@G@@PTED * ATTEMCOVERYD - REE PASEBI@@@@)#B@F@@@@@@@)[\[A@)@@@@@ST RECOT FIROI
)@@G@@OUND NCARD F STAR  FIRSTNING>> <<WAR/K@@A:BJ@@@@)[7@Y@)@@@@@)#C@<#@[]@[#OJ
)@@G@@@@()C@@@@@@@C8@@@XR])@@['=@@@@C@@@@>       PCF -ORD OFBK@@@@)#G@F]@^@@@@OK
)@@G@@)['@6@)@@@@@@@@@@@@@@@@@&     R IS: N ERROFILE I  ***       /,0@@@BL@@@@OL
)@@G@@)#H[E()C-@^CK]+@CK^*S@@@C@@@@&/,0@@@9?E@@]/K@@#W(@E@@]/,0@@@9?E@@@/,0@@@OM
)@@G@@C8@@['BM@@@@)#Q[EK[]@*K)DK0@K)]@@@@@C8@@@[/,0@@@C/@@@$/,0@@@9?E@@A/,0@@@ON
)@@G@@C/@@@//K@@#W:@E@@ABN@@@@)#Z@N]@T]@W@)]@@"@)@@@@@E IGNOTAR ARR TO SS PRIOOO
)@@G@@RECORD  ***       /,0@@@/,0@@@BO@@@@)]B@Q@)@@@@@)#-@<#@[]@@K@@@@@@@@@@@@OP
)@@G@@@@@@@@/K@@A:A]0@@G'=@@@@C@@@@**     RED **BP@@@@)]D[Y@)@@@@@TE -  DOWNDAOQ
)@@G@@P-OPT NT OF  ELEMEORD INST RECCARD 1 STAR NING>> <<WARBQ@@@@)#>@:#@[]@[#OR
)@@G@@@@()C-@]@@@@)]O@Q@)@@@@@  ***       /,0@@@C8@@@XR])@@['=@@@@C@@@@(BR@@@@OS
)@@G@@)]Q@&@)@@@@@)#%@+()C-@^CK])@@@/,0@@@9?E@@@/,0@@@C8@@]O&     R IS: N ERROOT
)@@G@@FILE IBS@@@@)#,[EK[]@>#@@K[]@*@@@@@@/,0@@@C/@@@//K@@#9:@E@@AC@@@@&/,0@@@OU
)@@G@@9?E@@]/K@@#9(@E@@]BT@@@@)#7@'K)DK0@K)]^C[=C[0@@@@@@@@@@@@@@@/,0@@@/,0@@@OV
)@@G@@C8@@@[/,0@@@C/@@@$/,0@@@9?E@@ABU@@@@)]U@"@)@@@@@)#"@N#@[]@@@'=@@@@C@@@@%OW
)@@G@@      ED *** IGNORARD ISSTAR C  ***       BV@@@@)^@@F@@@@@@@)]-[A@)@@@@@OX
)@@G@@ P-OPTENT OFN ELEMOUND ICARD F STAR NING>> <<WAR/K@@A:BW@@@@)](@Q@)@@@@@OY
)@@G@@)^[@:#@[]@[#@@()C-@]@@@@/,0@@@C8@@@XR])@@['=@@@@C@@@@:ATE -  DOWNDBX@@@@OZ
)@@G@@)]:@6@)@@@@@)^A@U()C-@^@9?E@@@/,0@@@C8@@]:&     R IS: N ERROFILE I  *** PA
)@@G@@      BY@@@@)^D[F]@OK[]@>#@@K@@@@@@@C/@@@//K@@^P:@E@@AC@@@@&/,0@@@9?E@@]PB
)@@G@@/K@@^P(@E@@]/,0@@@BZ@@@@)^M[#]@*K)DK0@K)]^C[=C[0@@@@@@/,0@@@/,0@@@C8@@@[PC
)@@G@@/,0@@@C/@@@$/,0@@@9?E@@A/,0@@@CA@@@@)]1[A@)@@@@@)^U@F#@@@@@@C@@@@?F *** PD
)@@G@@IVE EOEFFECTCOMES ARD BESTAR C  ***       CB@@@@)^V@N]@[@@@@)]9@"@)@@@@@PE
)@@G@@ND IN RD FOUTAR CACATE S DUPLINING>> <<WAR/K@@A:'=@@@@CC@@@@)#@@Q@)@@@@@PF
)@@G@@)^X@:#@[]@[#@@()C-@]@@@@/,0@@@C8@@@XR])@@['=@@@@C@@@@!ILE - SAME FCD@@@@PG
)@@G@@)#]@6@)@@@@@)^+@U()C-@^@9?E@@@/,0@@@C8@@#]&     R IS: N ERROFILE I  *** PH
)@@G@@      CE@@@@)^>[F]@OK[]@>#@@K@@@@@@@C/@@@//K@@^1:@E@@AC@@@@&/,0@@@9?E@@]PI
)@@G@@/K@@^1(@E@@]/,0@@@CF@@@@)^,[#]@*K)DK0@K)]^C[=C[0@@@@@@/,0@@@/,0@@@C8@@@[PJ
)@@G@@/,0@@@C/@@@$/,0@@@9?E@@A/,0@@@CG@@@@)#C@"@)@@@@@)^6@N#@[]@@@'=@@@@C@@@@,PK
)@@G@@      ED *** IGNORATE ISDUPLIC  ***       CH@@@@)^8@F@@@@@@@)#J[A@)@@@@@PL
)@@G@@ -    STREAMG TCF RMATIN IN FO ERRORNING>> <<WAR/K@@A:CI@@@@)^9@N#@[]@@@PM
)@@G@@)#R@"@)@@@@@***   ERROR UENCE LE SEQPROBAB  ***       '=@@@@C@@@@\CJ@@@@PN
)@@G@@)^;[##@[]@@()C-@]CK]CS@@@@@@@@C/K__.C/@@@1/,0@@@C/@@@C/,0@@@C8@@@X'=@@@@PO
)@@G@@C@@@@0CK@@@@) #[#]@-#@@^C[^G@^C^OG@@@@@@@@C/@@@3/,0@@@CC@@@]/,0@@@C/@@@[PP
)@@G@@O')@@CQE)@@[/,0@@@CL@@@@) F[F]@CK) ^@K)DK0@@@@@@:@E@@AC@@@@&/,0@@@9?E@@]PQ
)@@G@@/K@@ T(@E@@]/,0@@@9?E@@@/,0@@@CM@@@@) O[F@^C]-]@>#@[]@CK)A@@/,0@@@C8@@@[PR
)@@G@@/,0@@@C/@@@$/,0@@@9?E@@A/,0@@@C/@@@//K@@ TCN@@@@) X[#]@W()C-@]CK]CS@CK[CPS
)@@G@@S@@@@@C/@@@5/,0@@@C/@@@4/,0@@@C/@@@C/,0@@@C8@@@X/,0@@@CO@@@@) >[#]@D#@[]PT
)@@G@@[ #@@K0@K)]@@@@@@@9?E@@@/,0@@@C/@@@3O')@@CQA)@@[/,0@@@C^@@@]/,0@@@CP@@@@PU
)@@G@@) ![F]@OK[]@>#@@K@@@@@@@C/@@@//K@@ 9:@E@@AC@@@@&/,0@@@9?E@@]/K@@ 9(@E@@]PV
)@@G@@/,0@@@CQ@@@@) 6[#]@*K)DK0@K)]^C[=C[0@@@@@@/,0@@@/,0@@@C8@@@[/,0@@@C/@@@$PW
)@@G@@/,0@@@9?E@@A/,0@@@CR@@@@)#Y@"@)@@@@@) "@N#@[]@@@'=@@@@C@@@@7D *** TEMPTEPX
)@@G@@ IS ATUATIONCONTIN  ***       CS@@@@)A@@F@@@@@@@)#>[A@)@@@@@N CARDRECTIOPY
)@@G@@CF CORR IN PT ERRO FORMANING>> <<WAR/K@@A:CT@@@@)#!@I@)@@@@@)A[@3#@[]@@(PZ
)@@G@@)C-@]CK]@@@@/,0@@@C/@@@C/,0@@@C8@@@X'=@@@@C@@@@8 -    CU@@@@)AB[##@@K)C^QA
)@@G@@C[^G@^C^M=]K@@@@@@C8@@@@/,0@@@C@@@@[/,0@@@C/@@@[/,0@@@C/K__.C/@@@1CV@@@@QB
)@@G@@)AJ[F#@@@^G@^C@)@@@@@@@@9?E@@@/,0@@@C/@@@3O')@@CRA?@@[%CW@@]RE?@@[&;K@@@QC
)@@G@@C@K@@]CW@@@@)AS[F]@OK[]@>#@@K@@@@@@@C/@@@//K@@A=:@E@@AC@@@@&/,0@@@9?E@@]QD
)@@G@@/K@@A=(@E@@]/,0@@@CX@@@@)A-[#]@*K)DK0@K)]^C[=C[0@@@@@@/,0@@@/,0@@@C8@@@[QE
)@@G@@/,0@@@C/@@@$/,0@@@9?E@@A/,0@@@CY@@@@)#,@"@)@@@@@)A(@N#@[]@@@'=@@@@C@@@@9QF
)@@G@@D *** TEMPTE IS ATUATIONCONTIN  ***       CZ@@@@)A:@N[@@@@@@)@#@8()C@@@@QG
)@@G@@RETURNINED & UNDEFFROM &RROR & I/O E@]B@@@/KF@@@R]0@@[DA@@@@)@E[S@@@@@@@QH
)@@G@@OGRAM&NOT PRROR&  I/O ERIND' & 'NO-F            T &   ELEMEN CODE DB@@@@QI
)@@G@@)@P[K@@@()C@@@@@@@@] @@? ADDR&PACKETL PFP&ILLEGAFLOW& E OVERM FIL&PROGRAQJ
)@@G@@FILE& DC@@@@)@Z[@()CO0^ES] G[]&@-N@K()C@@@      @[F@[\@[E@[>@]B@[Y@]C@[QQK
)@@G@@@]C@@_@]B@@8@]B@@1DD@@@@)@$[@ES] G[]&@-N@K()CO0^ES]@@@@[B@#C@[D@]9@[C@]1QL
)@@G@@@[E@]-@[B@]U@[F@]D@[D@]@ ***& DE@@@@)@\[C()CO0^@@ES]@@@@@@@@@[B@#YC # & QM
)@@G@@AND RE*** &  OF &  REC #*** AT@[B@#R@[C@#JDF@@@@)@8@K()CO0^@@@@@@@@@@@@@QN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[B@#,@[D@#>DG@@@@@@@@@@)@@@@@QO
)@@G@@)^U@F#@@@@@@C@@@@?F *** IVE EOEFFECTCOMES ARD BESTAR C  ***       CB@@@@QP
)@@G@@@@^@@ @@D@@N@@\@@]@@7@@@@@E@@'@@@@A!@@@@@])@@@@@@@@@#5PRINT$      EDIT$ QQ
)@@G@@      EMSG$       EOCTV$      ESKIP$      EDTXFN      EPRT$       EDITX$QR
)@@G@@      ECOPY$      EFD2$       ECHAR$      MONSTER     DATA        SDFOPKQS
)@@G@@T     FREE1       FINISH      EXIT$       EDECV$      MASTERPKT   ERROR QT
)@@G@@      @@[@@@@@@@@@PCFERROR    @@[@@@@@@@]8 C)^@))@^[S@@@@@@@?@@@[ ?@@@[^QU
)@@G@@?@@@[#?@@@[]?@@@[[?@@@@)?@@@[Y?@@@@<?@@@[X?@@@[V?@@@[@AA@@@@)@J[S@@@@@@@QV
)@@G@@?@@@[K?@@@[J?@@@[I?@@@[H?@@@[G?@@@[F?@@@[E?@@@[D?@@@[C?@@@[B?@@@[AAB@@@@QW
)@@G@@)@U[S@@@@@@@ @@@@(?@@@[U?@@@[T?@@@[S?@@@[R?@@@[Q?@@@[P?@@@[O?@@@[N?@@@[MQX
)@@G@@?@@@[LAC@@@@)@>[S@@@@@@@+@@@@'*@@@@>)@@@@*(@@@@%'@@@@=&@@@@&%@@@@"$@@@@.QY
)@@G@@#@@@@/"@@@@:!@@@@!AD@@@@)@0[S@@@@@@@6@@@@65@@@@54@@@@43@@@@32@@@@21@@@@1QZ
)@@G@@0@@@@0/@@@[W.@@@@?-@@@@-,@@@@_AE@@@@)@;[S@@@@@@@A@@@@@@@@@@@?@@@[Z>@@@@+RA
)@@G@@=@@@@,<@@@@\;@@@@;:@@@@$9@@@@98@@@@87@@@@7AF@@@@)[A[S@@@@@@@L@@@@@K@@@@@RB
)@@G@@J@@@@@I@@@@@H@@@@@G@@@@@F@@@@@E@@@@@D@@@@@C@@@@@B@@@@@AG@@@@)[L[S@@@@@@@RC
)@@G@@W@@@@@V@@@@@U@@@@@T@@@@@S@@@@@R@@@@@Q@@@@@P@@@@@O@@@@@N@@@@@M@@@@@AH@@@@RD
)@@G@@)[W[S@@@@@@@B@@@@@A@@@@@@@@@@@_@@@@@^@@@@@]@@@@@\@@@@@[@@@@@Z@@@@@Y@@@@@RE
)@@G@@X@@@@@AI@@@@)[$[S@@@@@@@M@@@@@L@@@@@K@@@@@J@@@@@I@@@@@H@@@@@G@@@@@F@@@@@RF
)@@G@@E@@@@@D@@@@@C@@@@@AJ@@@@)[2[S@@@@@@@X@@@@@W@@@@@V@@@@@U@@@@@T@@@@@S@@@@@RG
)@@G@@R@@@@@Q@@@@@P@@@@@O@@@@@N@@@@@AK@@@@)[.@8@@@@@@@)@@@W@&;@@@[&'K@@[N80@@_RH
)@@G@@_@@@@@^@@@@@]@@@@@\@@@@@[@@@@@Z@@@@@Y@@@@@AL@@@@)@#[GK0@K0@^G@^[#@@@@@@@RI
)@@G@@;))@@AC@?)@@[@0@@@C@0@@K[C0@@[C80@@ [*0@@[[=0@@[C80@@AAM@@@@)@G[W@@KO [@RJ
)@@G@@N80@[_/K@@@@/K@@@E/K@@@E/,T@@@;))@@A;))@@A;))@@A;))@@A;))@@A/,T@@@AN@@@@RK
)@@G@@)@R[G[#@@K0@^G@^@@@@@@@@C@0@@L[C0@@[C80@@)[*0@@[C80@@D[=0@@[C80@@^&;@@@[RL
)@@G@@&'K@@[AO@@@@)@)[P#@@@@KO^@@@@@/K@@@-/K@@@-/,T@@@;))@@D;))@@D;))@@D/,T@@@RM
)@@G@@;))@@DC@?)@@[@0@@@AP@@@@)@%[H[@^G@^G@[#@@@@@@@@@[C0@@#C80@@ [*0@@#[=0@@#RN
)@@G@@C80@@A&;K@@[&')@@[N/)__@/K@@@QAQ@@@@)@3[P@K0@K0@@@@@@@/,%@@@;-@@@A;-@@@ARO
)@@G@@;-@@@A;-@@@A;-@@@A/,%@@@C[@@@][@0@@]C@0@@KAR@@@@)@.[OKO^@K0@^G@@@@[*0@@#RP
)@@G@@C80@@D[=0@@#C80@@^&;K@@[&')@@[N/)_"@/K@@@:/K@@@5[[H)@@AS@@@@)[B[OK0@K^G@RQ
)@@G@@^G@@@@/,%@@@;-@@@D;-@@@D;-@@@D/,%@@@C[@@@][@0@@]C@0@@L[C0@@#C80@@)AT@@@@RR
)@@G@@)[L@WKO^@@@@)]^@K@)[O@W@@@@@@@&;@@@[&'K@@[N80@[_@@@@@@@@@@@@/K@@[@/K@@[FRS
)@@G@@[[H)@@AU@@@@)[R[^K0@K0@^G@^[#@[#@@@@@@@@@@ @@@]^[@0@@@C@0@@L[C0@@[C80@@)RT
)@@G@@[*0@@[[=0@@[C80@@AAV@@@@)[Z[^/S#@[[^G@^^/S#@[[K0@@@@@@[@0@] /K@@[!0@@@]^RU
)@@G@@/K@@[0A]0@]^C@?@@@/K@@[=*@@@]^AW@@@@)[$[G[#@[#@[[[#@@@@@@@@@ @@@]^;*)@@GRV
)@@G@@C@?)@@/K@@[0C@0@] ]@@@]^;?)@@SC@/@@@C@?)@@AX@@@@)[0[H@^[@K[[KO^@@@@@@@@@RW
)@@G@@/K@@[O/K@@[Y/K@@[Z/,T@@@/,@@@@/,@@@@/,@@@@/,T@@@/,@@@@AY@@@@)@@[##@@^G@@RX
)@@G@@K0@@@@)[9@G@N80@@_/KC@@@C@0@] ;))@@D;^)@@DC^_@@^+8)@@_;))@@A[@0@] AZ@@@@RY
)@@G@@)['[G[#@@K0@^G@^@@@@@@@@C@0@@K[C0@@[C80@@ [*0@@[C80@@D[=0@@[C80@@^&;@@@[RZ
)@@G@@&'K@@[BA@@@@)]#[P#@@K[@K^@KO^@/K@@]^/K@@]^/,T@@@/,@@@C/,@@@C/,@@@C/,T@@@SA
)@@G@@/,@@@CC@?)@@[@0@@@BB@@@@)]H@H[@@@@@@)@C@;#@@^G@@K0@@@@C@0@] ;))@@D;^)@@DSB
)@@G@@C4_@@^+8)@[_;))@@D[@0@] /K@@[9BC@@@@)@J@U@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@^@)^@)      /KC@@@BD@@@@@@^@@#@@B@@@@@B@@C@@$@@@SD
)@@G@@@@E@]A@@@@@M@@@@]IASFDGET     @@]@@@@@@@[9ASGET       @@]@@@@@@@@QASPUT SE
)@@G@@      @@]@@@@@@@[@E$PARAMS    @@@@@@@@@@@@E$TABLE     @@@@@@@@@@@^FDASGESF
)@@G@@T     @@]@@@@@@@[OFDGET       @@]@@@@@@@@@FDPUT       @@]@@@@@@@@:?@@@[VSG
)@@G@@?@@@[@AA@@@@)@J[S@@@@@@@?@@@[K?@@@[J?@@@[I?@@@[H?@@@[G?@@@[F?@@@[E?@@@[DSH
)@@G@@?@@@[C?@@@[B?@@@[AAB@@@@)@@@C@)@@[F[@K0@@@?80@@^CC/@@B @@@@IC@M@@M[@@@@@SI
)@@G@@;C@@@MR8?@@@;)@@@MA]0@@@@@@@@@AA@@@@)@D[V@@@@@@@[4W@@MC@M@@[[@W@@NG@K@@ISJ
)@@G@@G^M@@L[@W@@ [@W@@A;*K@@];C)@@+;GK@@]/K@@@HAB@@@@)@O[M@K)@[]@ @K@@@/K@@@-SK
)@@G@@/K@@@Y/,0@@@C8)@@]=80@@^C@0@@@T8K@@W;?K@@=[0W@@M;CK@@MAC@@@@)@Y[F#@@K)]^SL
)@@G@@^^C@4@@@@@@@/K@@@(/,0@@@N9:@@[/KF@@@R]0@@@&#@@@]/,0@@@C8@@@JC@K@@@AD@@@@SM
)@@G@@)@$[F@K@K)]K^[@K)@@@@@@@C@0@@@/K@@[E8L)@@,/K@@[E/,0@@@C8@@@[C@K@@G/K@@@\SN
)@@G@@/K@@@!AE@@@@)@0[MK@K@^C[@@@@@@;=0@@=C4_@@@;D@@@V;G0@@VC@"@@@/-@@@/;D@@@MSO
)@@G@@C[@@@H/K@@[E>80@[@AF@@@@)@'[F]@L@@/S]@P@K[@@@@@@/K@@[EH8K@@[8L)@[[/K@@[#SP
)@@G@@%-@@@@C0"@@@C5I@@@/K@@@"C4_@@@AG@@@@)[#[EK@K^@@@@@@@@@@@@@@@/KF@@@R]0@[ASQ
)@@G@@H8K@@[8L)@[D/K@@[E:80@@ %80@@*/K@@[E%9@@@*AH@@@@@@^@@#@@B@@A@@N@@]@@V@@@SR
)@@G@@@@E@@[@@@@[G@@@@@[INFOBITS    ISDFIOA     ERROR       ISDFI       E$TABLSS
)@@G@@E     CHAR        GET         @@[@@@@@@@@=GETOPN      @@[@@@@@@@@@E-^DDBST
)@@G@@)@@[UK@[@@@@[^?@@HC8)@@[[K?@@LC^W@@I8L@@@%!CW@@EN9F@@[C^W@@M ^G@@M/K@@@#SU
)@@G@@[^W@@MAA@@@@)@F[M@[]@[@@@@@@@@C8K@@[Q#@@@J8L@@@%/,0@@@CCW@@J&#@@@HG8K@@JSV
)@@G@@CCW@@J @H@@@*@@@@HAB@@@@)@P[MK)[K@@K@@@@@@)8)@@]/K@@@%=8)@@]CK?@@L[^W@@GSW
)@@G@@G^W@@M[CW@@G8L@@@%/,0@@@[^W@@JAC@@@@)@Z[UK^[@@@@[K/@@L:8)*_X[K/@@L:8)*_PSX
)@@G@@%8)*_F)8K@_@;CK@@M8L@@@%:@K@ O/CK@@%C@X@@@AD@@@@)@%[U[@@@K@@/K@@[-:^W@@HSY
)@@G@@N9K@@[N[@@@F[CW@@H 4G@@L @@@@I/K@@@\C^?@@F/KF@@@R]0@[^AE@@@@)@5[MK^[@K@^SZ
)@@G@@@@@@@@(@@@[ /K@@[-%9K@@(C5X@@@QBW@@G/K@@[-8L@@];/,0@#L8L@@];(^G@@IAF@@@@TA
)@@G@@)@_[UK@^@@@@C0/@@K0@@@@J;K0@@SC@/@@KC1X)@@/K@@[4C^?@@FQ#K@@I[^?@@G/K@@[ TB
)@@G@@:^?@@FAG@@@@)[E[U@@@K@@@N@)@ PC80@@A0@G@@K @@@@JC[K@@J! G@@EG[@@@LC80@@@TC
)@@G@@1@@@@JH^/@@E[@0@@KAH@@@@)[P[UK@K@@@@CC?@@F(@@@[ [[G@@K<@/@@K&#0@@K;DJ@@MTD
)@@G@@8L@@];0@@@@K;(J@@SN@)@ Q0@G@@KAI@@@@)[)[N@^[@@[@@@@@@@/DK@[4[^W@@G[[W@@KTE
)@@G@@C[X)@@&;K@@[C^W@@G/K@@]_/,0@^%*@@@[ /K@@['AJ@@@@)[%[U^@@@@@@C[W@@K[LG@@LTF
)@@G@@<@0@@K:9K@@+%9K@@*N/)__"CLG@@LC)/@@K/K@@];:9K@@_;DK@@YAK@@@@)[5[U@@@K@@@TG
)@@G@@/D@@]*H[@@@JGC/@@ECC/@@GG[@@@LC G@@GC W@@E! W@@EC1W@@K0@@@@L;LK@@SAL@@@@TH
)@@G@@)]@[UK^@^@@@C^?@@F[C?@@FM#!)@@N@K@@L&;)@@[/K@@]FG@K@@LC8!@@@/^)@]A/K@@]^TI
)@@G@@*@@@[ AM@@@@)]F[U@[@@@@@C G@@G[5G@@L(@@@[ C9@@@_/HK@@'H W@@EC1W@@K0@@@@LTJ
)@@G@@;LK@@SC[W@@K[^W@@GAN@@@@)]Q[U@^@@@@@[C?@@F[^W@@JG8K@@[C^W@@JH[K@@K/H@@@'TK
)@@G@@H[@@@JGC/@@ECC/@@G[ G@@GG[@@@LAO@@@@)]-[N]@ @@^@^@@@@@/K@@]\*@@@[ H[K@@KTL
)@@G@@/K@@]M&;K@@[CC?@@F[CW@@G[^W@@G8L@@];/,0@@@AP@@@@)]:[M@@[]@^@@@@@@@/,0@@@TM
)@@G@@[^W@@JG8K@@[C^W@@J[C?@@FC[K@@KM#!)@@N@K@@L&;)@@[C^?@@FAQ@@@@)]5[V@@^@[@@TN
)@@G@@C^W@@H8L@@#JC^W@@H[^W@@GH8K@@[/K@@['CC?@@F&;K@@[[CW@@G[^W@@G8L@@];AR@@@@TO
)@@G@@)#@[UK^@K@@@<@/@@K;*0@@SC^/@@E1@G@@K?^/@@EC80@@_N@)@ Q0@G@@KN@)@ P/K@@#GTP
)@@G@@(4G@@LAS@@@@)#F[U@@[@@@@C^W@@I/GK@#WH^W@@H @@@[ [^?@@L/KF@@]R]0@[^;CK@@LTQ
)@@G@@;*K@@L&NW@@L[[G@@KAT@@@@)#Q[U^@^@@@@ @@@@HC?.@@@C^W@@IC[@@@ICC?@@H/K@@#XTR
)@@G@@C^!@@@]@)@[ /C)@#WHC?@@HC^!@@@AU@@@@)#-[U@@^@@@@&;K@@[C^W@@M/^K@#0G@)@[ TS
)@@G@@G8)@@[[ G@@HH[@@@I;C\@@@G80@@=D@0@@J;^Z@@=AV@@@@)#?[U[@@@@@@N/)__";=K@@[TT
)@@G@@ @@@@IN[K@@I[^W@@GC@X@@@G^W@@I/K@@#2H8)@@[[ G@@HC9@@@[AW@@@@)#7[M@^C@O@@TU
)@@G@@@@@@@@G^W@@G[CW@@GR]0@@L8^K@#"/,0@@@C[K@@F[^W@@J;CK@@N[K/@@L<K?@@LAX@@@@TV
)@@G@@)^[[U@@@@@@@;G"@@@C9@@@@C?!@@@[^.@@@G80@@[C^.@@@C^W@@I[^?@@L/KF@@[C^?@@LTW
)@@G@@[^W@@GAY@@@@)^G[V@^@@@@@;DK@@[CDW@@I&;)@@]G8)@@[&;0@@[C@0@@IG8)@@[C@)@@HTX
)@@G@@/K@@^Y?C/@@I/ @@^*AZ@@@@)^R[U@[@@@@@HDG@@GC G@@G&B/@@JC@)@@J/K@@^DC^.@@@TY
)@@G@@[?!@@@G8)@@[C?!@@@M#")@@N@K@@LBA@@@@)^+[U@@@@@@@1@H@@@CK/@@LC^W@@G/KF@@@TZ
)@@G@@C^?@@L[[H@@@G@K@@I)@0@@K;(@@@<CLG@@LQ#0@@KBB@@@@)^![N@^[@[@@@@@@@@)5G@@MUA
)@@G@@C0/@@MC(H@@@/K@@^"0@G@@M>80@@]/K@@ H/K@@^"=80@@^/K@@^1BC@@@@)^7[N@^@[@K^UB
)@@G@@@@@@@@C^W@@I8]0@ H8LK@ @/K@@ H?).@@@?@0@@K*@@@@K/K@@ H(4G@@M/[K@^"BD@@@@UC
)@@G@@) [[V@[@^@@@G8K@@[C^W@@H[@K@@F;CK@@MC@K@@F/,0@^^&';@@@/CK@ EH^W@@HC^X@@@UD
)@@G@@/@K@ EBE@@@@) G[U[]@C@@@_@____@@____**PF**/KF@@@[@W@@ GCW@@BC@W@@ '=@@@@UE
)@@G@@0@G@@#/KF@@[[^W@@HBF@@@@@@^@@]@@A@@#@@G@@ @@)@@@@@E@@@@@@@ RPGOPN$      UF
)@@G@@PGRD$       WAIT$       ISDFI       @@[@@@@@@@@,ISDFIA      @@[@@@@@@@@?UG
)@@G@@ISDFIC      @@[@@@@@@@ IISDFIO      @@[@@@@@@@@]ISDFIOA     @@[@@@@@@@@@UH
)@@G@@H[>^[3I(<GT>IT3G15H))I-2GD,IT!HD3IT(H9,^[\G0)H(>IT3GD$G(3^[(H0)I-*G*)^@)UI
)@@G@@@I@@@3GT2I(<HD-H))I-\^[4H[>^[3I(<GT>IT3G15H))I-2GD,IT!HD3IT(H9,^[\G0)H(>UJ
)@@G@@)@@@C@)@@[#[@^G@^C@^@@@@/K@@@E/,0@@@ @@@@@[^W@@#G8K@@[C^W@@# @G@@ A]0@@@UK
)@@G@@@@@@@@AA@@@@)@C[F@K@/S]@ @K@@@@@@@@@[^W@@@CCW@@ [CW@@ /@K@@J/K@@@L!@K@@@UL
)@@G@@C^W@@@/K@@@N/K@@@EAB@@@@)@L[F#@[@#1)C@O[#@[@K@@@[CW@@ /@K@@U/K@@@(A]0@@@UM
)@@G@@/K@@@S?@K@@@C^W@@@/K@@@(A]0@@@AC@@@@)@U[UK@[@@@@?CW@@@[^W@@ G^W@@ G8K@@[UN
)@@G@@/^K@@+C^W@@@[^W@@#G^W@@#C8K@@[/^K@@XC^W@@^AD@@@@)@>[#@[#@@/S#@[@KK@@@@@@UO
)@@G@@@@@@@@/KF@@@R]0@@@/K@@@A(@@@@@A]0@@@[^W@@@CCW@@ /K@@@(AE@@@@@@@@@@G*)I--UP
)@@G@@HT>H0)HD,I-\^[<H9,IT(G->IL-I-(H9,^[(H1<H-5G->^@)@K@3@2IT4I(=G(,I))GD4I-(UQ
)@@G@@@@^@@#@@B@@]@@F@@[@@J@@@@@E@@[@@@@@!@@@@@[COMPARE     PEEK        MATCH UR
)@@G@@      @@[@@@@@@@@@G(,I))GD4I-(I-5G-> ))IT>H-& (>IT4G(>H*?^[<I(?I-5IL-H))US
)@@G@@GD?HD>H1-I-(H9, ))H(\I-()@@[MEK@@@C@@@@@@@?@K@[[/@K@@F;C)@@M;GK@@MN^Z@@BUT
)@@G@@T9@@@WCDJ@@B[1J@@#C9@@@@C@0@@GAA@@@@)@E[U@@K@@@@'K)@@K[@!)@@/KF@@@8KK@@NUU
)@@G@@&;K@@[&_)__"CC\@@DC^Z@@DC@@@@I/@:@@@/KF@@@AB@@@@)@P[V@@@[@K@/,0@@4/K@@@+UV
)@@G@@:CV@@@RA_@@DA]0@[#C@0@@G/KF@@[/KF@@@?8I@@@GCJ@@D8KK@@NAC@@@@)@)[N@@K@K)[UW
)@@G@@@@@@@@H8)@@[CC:@@@'=@@@@0@G@@#C8J@@@/K@@@*%^Z@@^E^V@@@RA_@@D8K0@@1AD@@@@UX
)@@G@@)@%[UK[@K@@@N^Z@@B/KF@@[R]0@[#C@@@@JE^V@@[RA_@@D8K0@@1/,0@@4C8Y@@]/K@@@1UY
)@@G@@%C:@@[AE@@@@)@5[U@K^@[@@/KF@@@/\K@[GC8J@@@[CY@@@CCI@@@/K@@[@/K@@@;2CY)@[UZ
)@@G@@&;)@@[H8)@@[C^\@@DAF@@@@)[@[U[@@@@@@[[I@@@C^\@@DM#Y)@@N@K@@GH8@@@[G^J@@BVA
)@@G@@D@@@[['O)@[<C@K@@I&_)__"C[I@@@AG@@@@)[F[M^C@L@@@@@@@@@CDI@@@[ G@@^E I@@@VB
)@@G@@/KH@@@%9@@@ /[@@[MC5G@@#'=@@@@0@G@@#/KF@@[AH@@@@)[P[U@@@@@@@T9@@@W/[H@@[VC
)@@G@@/HH@@[H[G@@ C[G@@N![G@@NGDJ@@B[[G@@ G[G@@ATDJ@@BH9@@@[AI@@@@)[)@+K)]@@@@VD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[/KH@@['=@@@@[DG@@^AJ@@@@VE
)@@G@@@@^@@]@@A@@#@@G@@]@@O@@@@@E@@@@@@@[=R$          WAIT$       IO$         VF
)@@G@@PGOPN$      @@[@@@@@@@@@PGRD$       @@[@@@@@@@@UH1<G(3^[$IL\I9(H1$^[3GD4VG
)@@G@@HD3G1-GT4HD\H0)^@)@K@3@2)@@@S@)@@@3[K)@^G@@@@@@@ @E@@  CE@@M @@@@[R])@@GVH
)@@G@@A]0@@@A]0@@@@@@@@@@@@@@@@@@@@@AA@@@@)@A[M@[@^C@O@@@@@@/K@@@M/,0@@@C@@@@EVI
)@@G@@/,0@[)(^E@@  @E@@F @E@@A @E@@E @E@@D @E@@CAB@@@@)@K[F@K[@K0@K[@K0@@@@@@@VJ
)@@G@@A]0@@[/,0@@" @@@@J/K@@@'A]0@@[/,0@@"C/0__"/K@@@U/K@@@QAC@@@@)@T[F@K^G@@[VK
)@@G@@#@@@@@@@@@@@C8E@@GA])@@@[@U@@JC@U@@#9*U@@H9?U@@[ @@@@]/,0@[(/K@@@'AD@@@@VL
)@@G@@)@+[F]@D#@@^@[#@@@@@@@@@A]0@@][D'@@A[D%@@ C9)@@[/ )@@?CD'@@JC %@@GR])@@@VM
)@@G@@/,0@@@AE@@@@)@:[N@JA@)#@^[@K@@! %@@ /K@@@7/,0@[)/K@@@4*^E@@ [D'@@A[D%@@ VN
)@@G@@C9)@@[?[)@@@/K@@@7AF@@@@)@5[#@K0@JA@0@K^@/S#@[@KK@@@@@R]0@@@/K@@@F(@@@@[VO
)@@G@@/,0@[6/K@@@W(@@@@]A]0@@]/,0@[)AG@@@@)@.@E@)@#@C@)@"@3[K^[@@@@@@@@@CCU@@#VP
)@@G@@CCE@@]/,0@[)/G0@[]/,0@[(A]0@@[@@@@@@/KF@@@AH@@@@)[^[F#@[]@L@K^G@#1)G@^@@VQ
)@@G@@LCU@@#&;K@@@/K@@[ (@@@@#A]0@@#/K@@[D/K@@[C/,0@@@ @@@@#AI@@@@)[H[M@K[@^[@VR
)@@G@@@@@@@@/,0@[)/,0@[6*CE@@ /K@@[RN'0@@]/,0@[)!^%@@ [C%@@ [CU@@ACCU@@#AJ@@@@VS
)@@G@@)[R[N@^@K^[@KK@@@@&;)@@[/KF@@@R]0@@[8M0@[U/,0@[)/,0@[6*CE@@F/K@@[XN'0@@]VT
)@@G@@8M0@[OAK@@@@)[-[U^@[@^^@C@U@@#R])@@GA]0@@]/KF@@@8M)@[=[@")@[;)0@@MC@"@@[VU
)@@G@@/K@@[$N')@@FQ#)@@EAL@@@@)[?[U@@^^KK@A]0@@#/KF@@@R]0@@] ^E@@ ?^U@@#C^U@@AVV
)@@G@@[CU@@MG^U@@@CCU@@M[@U@@#'KU@@^AM@@@@)[7[M^@K[@^[]@O@@@A]0@@@/K@@]IC8@@@]VW
)@@G@@/K@@[_C8@@@[/K@@["*CE@@F/K@@]@(@E@@CREU@@[AN@@@@)][[#]@S/S]@X@JA@)C^[]@>VX
)@@G@@@@@@@@/K@@]F/,0@@@/K@@]D>8@@[@*@@@@@/K@@]G*@@@@@C@@@@@AO@@@@)]D[]K)EK^C]VY
)@@G@@L@KK@@)@^@C@@@@@@@/KF@@@R]0@@#/,0@]LC8@@@[/,0@@@/K@@]H[4K@@@C8K@@ AP@@@@VZ
)@@G@@)@ @C@)]L[#[K0@K0@^@@@@@[C%@@CCCU@@ CC%@@A/K@@]X%8@@@[ @@@@^ @@@@ A]0@@^WA
)@@G@@@@@@@@AQ@@@@)]T[M^G@^@^@K^@@@@/,0@]./K@@]&*CE@@ /K@@]+?C%@@ACC%@@D/K@@]:WB
)@@G@@A]0@@^[C'@@ECC'@@MAR@@@@)]<[EK0@K@[#@@/S#@@@@@@@*@@@@ A]0@@^CC'@@MCC%@@AWC
)@@G@@GCU@@ CCU@@F/K@@]:A]0@@ (CE@@ AS@@@@)]?[N@#1)G@^@@@@@@GC%@@ [CU@@F[C'@@MWD
)@@G@@GC'@@ :8@@@]C0D@@@/K@@]O(@@@@^C8@@@[/K@@];AT@@@@)]6@'@^^@@@@)@A@C@@@@@@@WE
)@@G@@@@@@@@@@@@@@/KF@@@R]0@@^ CE@@ [CU@@#GCU@@ CCU@@#[C%@@DAU@@@@)].[N[[@[@^@WF
)@@G@@@@@@@@H'0@@[/K@@#& @@@@R/,0@#%C])@@[C]K@@R/K@@#A*^E@@FC29@@@A]0@@ AV@@@@WG
)@@G@@)#B[N@K@K@K^[@@@@@/,0@[)/]0@#O/,0@#%C')@@[C'K@@[/K@@#P!^E@@ECCE@@E/,0@[)WH
)@@G@@/]0@#DAW@@@@)#L[MK^[@[#@[@@@@@C')@@[C'K@@]/,0@[)[@K@@AG^U@@FC^U@@E/K@@#&WI
)@@G@@/,0@[)/,0@#%C'K@@]AX@@@@)#V[N@K[#@@K[@K^@@/A0@#&/K@@#&/,0@#%C')@@@/K@@#=WJ
)@@G@@?CU@@EC@K@@AC'K@@[/,0@[)/,0@#%AY@@@@)#>[N@K^[[^^K@@@@@%'K@@]CCU@@E/K@@#.WK
)@@G@@(CE@@FA]0@@A/KF@@@R]0@@ /,0@[)/]0@#*/,0@#%AZ@@@@)#\[N@[]@!@^[@K^@@/A)@#;WL
)@@G@@/K@@#//,0@^6/K@@#8%8)@@&/^K@#8C4)@@@[CU@@EG8K@@[/K@@#2BA@@@@)#9[F@K^@KL[WM
)@@G@@K)GK)H@@@@@@/,0@@@C/@@@@A]0@@B/KF@@@R]0@@A CE@@F/,0@#_/K@@#//,0@^6BB@@@@WN
)@@G@@)^][F]@9]@.]@!][@K)L^@@@C/@@@,/K@@^K:'K@@[/,0@@@CCE@@E/,0@@@C/@@@@/,0@@@WO
)@@G@@C@@@@@BC@@@@)^F[F]@/[][ ]@SK@@@@@@@@C/@@@]/K@@^S>8@@[@C@@@@@/,0@@@H8@@@[WP
)@@G@@GCE@@FCCE@@E/,0@@@BD@@@@)^O[F][D]@(][[@K)N^@K@@@/K@@^YG8@@@[/K@@^X?8@@@IWQ
)@@G@@/,0@@@/K@@^,/,0@@@C/@@@@/,0@@@BE@@@@)^X[EK)O^@K@K)P@@@@@@@@@/,0@@@9?^@@EWR
)@@G@@RDE@@[/K@@^=R E@@[/K@@^<%'K@@[/,0@@@C8@@@HBF@@@@)^&[F#@@^@K)J^C O@@@@@@@WS
)@@G@@/,0@DG/,0@@@9?^@@I/,0@@@C/@@@//K@@^,:@^@@I*@^@@IC@@@@YBG@@@@)^\@'K^[@K^^WT
)@@G@@@@@@@@)@B@K@@@@@@@@@@@@@/KF@@@R]0@@B/,0@AB/K@@^4/,0@^6/K@@^3:'K@@]BH@@@@WU
)@@G@@)@D@C@)^6@;[K0@K)A#1)G@^[#@@@@[@@@@B/K@@ ^>@@@@Z>8@[@@C@@@@@ @@@@CA]0@@CWV
)@@G@@ &    BI@@@@)^.[EK)AK0@K0@K0@^G@@@@@CCE@@]CD%@@F[@K@@IC8K@@-[@@@@KC@@@@DWW
)@@G@@A]0@@C[@K@@@)8@[@@BJ@@@@) A[MK^C[^[@[][T@@9!0@@G/K@@A@/,0@@@C8@@@ C@K@@GWX
)@@G@@/K@@ J/K@@ F/,0@@@/K@@A@CCU@@CBK@@@@) K[EK#1)G@^@^C#^C#^C#K@/,0@@@C/@@@@WY
)@@G@@[*@@@];C@@@MC@@@@O/K@@ _(@@@@C/,0@D^C]K@@IBL@@@@) T[EK)MK)AJA@)RK[@^C^)@WZ
)@@G@@/,0@@@C/@@@^/K@@ =>8K@@K/K@@ )(@@@@@C@K@@@/,0@@@C/@@@[BM@@@@) +[F@K[]@/[XA
)@@G@@][^@@@@@@@@@C/@@@]/,0@@@H8@@@[Q#@@@O&;@@@@/,0@@@C/@@@[/K@@ %/,0@CRBN@@@@XB
)@@G@@) :[F]@.][H#@@K)MK)GK)G@D@W@@KC@@@@N[=@@@]C*@@@]/,0@@@C/@@@[[@@@@H/,0@@@XC
)@@G@@/,0@@@BO@@@@) 4[E^CA^@^CAOCA=C#@@@@@ =@@@]/,0@@@/,0@@@C/K__"C/@@@[/,0@B)XD
)@@G@@/,0@@@C@@@@P;KK@@SBP@@@@) .[#]@1][?K#1)G@^[#@[]@S@@@@@[@@@@@C@@@@B/K@@A XE
)@@G@@(@@@@C8^)@ C9?@@@N/,0@@@ *@@@]BQ@@@@)A @N[@@@@@@)@E@S@)AB@V[K)A@@@>8@[@@XF
)@@G@@C@@@@@A]0@@D ****&************/KF@@@R]0@@CBR@@@@)AE[]/S#@[@K0@K0@^G@^C#^XG
)@@G@@C#K@@@/,0@@@C/@@@@[@K@@IC8K@@-9*@@@K9?@@@G/K@@BY>@@@@ZBS@@@@)AM[EK)MK0@KXH
)@@G@@)P[][>][*@@@CD%@@F/,0@@@/,0@@@C/K__"C/@@@[/,0@@@9?@@@E/,0@@@C/@@@[BT@@@@XI
)@@G@@)AV[M^[]@L@K@K)QK@/K@@BM/,0@@@C8@@@ C@K@@G/K@@A>/K@@A-/,0@@@/K@@BNCCU@@CXJ
)@@G@@CCE@@]BU@@@@)A>[E@K)GK)GK)HK0@K)K@@@/,0@@@C/@@@G/,0@@@C/@@@@[*@@@];C@@@MXK
)@@G@@C@@@@OC]K@@I9!0@@GBV@@@@)A,[F]@S/S][X@^[@K[][C@@/,0@@@C/@@@[/K@@A./,0@CRXL
)@@G@@/K@@A5>8K@@K/K@@A3(@@@@@C@K@@@BW@@@@)A7[EK)J@K)L^C#4C^0@@@@@/,0@@@/,0@@@XM
)@@G@@C/@@@]/,0@@@H8@@@[Q#@@@O&;@@@@/,0@@@C/@@@[BX@@@@)B@[F#@@K)MK)GK)G@@@@@@@XN
)@@G@@C@@@@P;KK@@SD@W@@KC@@@@N[=@@@]C*@@@]/,0@@@C/@@@[[@@@@HBY@@@@)BD[#][-@[][XO
)@@G@@>][(]@1]@0@@@@@@@@ *@@@] =@@@]/,0@@@/,0@@@C/K__"C/@@@[/,0@B)/,0@@@BZ@@@@XP
)@@G@@)BL[#][?K^C#^C#L][D#@@@@@@@@@@9?@@@E/,0@@@C/@@@[/,0@@@C/@@@@8^)@AY9?@@@NXQ
)@@G@@/,0@@@CA@@@@)BT@;][O^CAOCA=^@@)@H@K@@@@@@@@@@@@@/KF@@@R]0@@D/,0@@@/,0@@@XR
)@@G@@C/K__"C/@@@[/,0@@@CB@@@@)@J@C@)B)@;[^C[<1)C 4@@@@@@@@@C8@@[C>8K@@K/K@@B$XS
)@@G@@(@@@@@C@K@@@C8@@]^A]0@@E@@@@@@CC@@@@)B$@;#@[][G/S#@@/S#@[@K0@K)W@@@@@@@@XT
)@@G@@/,0@@@[@@@@Q/K@@CP:@@@@J!@@@@J/,0@@@[@@@@JCD@@@@)B,[##@[#@@K)OK)WK0@K)GKXU
)@@G@@0@@@@@[@K@@PC?K@@@[@@@@O/,0@@@/,0@@@H8@@@[C@@@@J[@@@@NCE@@@@)B6[#]@0^CAOXV
)@@G@@G@^C#^C#^G@@@@@@@@C/@@@K =@@@][?@@@@C@@@@P/,0@@@C/K@@@C/@@@[[?@@@@CF@@@@XW
)@@G@@)B"[#][[#@[][L#@[]@.]@1]@1]@0@C^@@@@[=@@@]C*@@@]/,0@@@C)@@@I/,0@@@C@@@@HXX
)@@G@@/,0@@@CG@@@@)CA[##@[#@[#@[][-][H#@[#@[#@@@C@@@@Q[@@@@NH@@@@Q/,0@@@/,0@@@XY
)@@G@@G@K@@OD@K@@NG@@@@OCH@@@@)CI[F][KK)G^G@^CBO[[@@@@/KF@@@R]0@@E/K@@B*/,0@@@XZ
)@@G@@C@@@@NC8K@@)**@@@]C8K@@ /,0@@@CI@@@@)@R@K@)CR@;[@^CB=C#@@@@@C^@@@@/,0@@@YA
)@@G@@C8K@@ H8@@@[Q#@@@O&;@@@@A]0@@F@@@@@@@@@@@@CJ@@@@)CY[]K0@K0@K)GK^CB4CC^@@YB
)@@G@@@@@@@@/K@@C*/,)@@@/,K@@@/K@@C&(*@@@]A])@@SA]K@@RC@K@@GCK@@@@)C&[N]] ]]C@YC
)@@G@@[@@@@@C80@@[/K@@C/?80@@0?80@@'+@)@[#<@0@@K')D)@@+@)@[#/,)@@@/,K@@@CL@@@@YD
)@@G@@)C0[N]@0@K@@@@@@@@')E)@@<@0@@K')D)@@+@)@[#/K@@C'C9K@@A')E)@@<@0@@KC80@[VYE
)@@G@@**@@@]CM@@@@)C'[N@K@^[#@[#@[[@/KF@@@R]0@@FR])@@SR]K@@R/K@@C:')D)@@<@0@@KYF
)@@G@@')E)@@/K@@D@8^K@C6CN@@@@)@T@*@@@@@@@)D^@<[^G@@@@CC'@@][@K@@U;CK@@MA]0@@GYG
)@@G@@@@@@@@@@@@@@+@@@@@@@@@@@@@@@@@CO@@@@)DC[EK^^KOG@^CB^C#^@@@@@/,0@DNC^)@@@YH
)@@G@@/,0@@@ @@@@UA]0@@H/KF@@@R]0@@G/,0@DNCWJ@@KCP@@@@)DL[#[^ #@@/S#@[@K0@JA@)YI
)@@G@@<@@@@@(@@@@@[@K@@T/K@@D*:@K@@TC@K@@UA]0@@I/KF@@@R]0@@HCQ@@@@)DT[#@K0@K)<YJ
)@@G@@K0@K0@EKL*KMC@@@@@/K@@D+/,0@@@C8@@@@[@)@@X[@@@@W[@K@@EG@K@@V/K@@D*CR@@@@YK
)@@G@@)D-[#@EKL+^]2@-)@-)@-[A@@@@@@@ @@@@EC@)@@XC@@@@W/K@@D*/,0@@@C8@@@]C8K@@@YL
)@@G@@/K@@D&CS@@@@)D([#]]H]]G/S]]H@EKL*KMC]@@@@@/K@@D5/K@@D1/,0@@@C8@@@@/K@@D8YM
)@@G@@(@@@@@[^)@@C[W@@@ECT@@@@)D1[E([ACKFC]^^*-[E-@G@@=8@[@@C@@@@@[@@@@@G8@@@[YN
)@@G@@C@@@@@/K@@D8/,0@@@C8@@@]C8K@@@CU@@@@)D'[F@K)<JA@0@K@K@@@@@@@C8@@@-!8@@@+YO
)@@G@@/K@@E#C8@@@Q!8@@@R/K@@E[*@@@@TCW@@@E/K@@EGCV@@@@)E#[E[]]G/S#@[@K)&K^CD0@YP
)@@G@@'=@@@@/K@@EG'=@@@@/K@@EF*@@@@TQB@@@C;*@@@A&;@@@[;*@@@GCW@@@@)EG@N[@@@@@@YQ
)@@G@@)@Y@K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@      /KF@@@R]0@@ICX@@@@YR
)@@G@@@@^@@#@@B@@*@[R@@N@]<@@@@@E@@)@@@@EI@@@@@JCOMPARED    COMPARE     MATCH YS
)@@G@@      PEEK        GET         OUTFIL      INFOBITS    MONSTER     NOSTARYT
)@@G@@TCF   STARCARD    CARDBUF     AUXBUF      EDTPKT      EDIT$       CHAR  YU
)@@G@@      ECHAR$      EMSG$       EDECV$      ESKIP$      ECOLN$      ECOL$ YV
)@@G@@      EFD2$       ERROR       DEMAND      ECOPY$      EPRTG$      EDITX$YW
)@@G@@      FDPSR       EWRDN$      EPAD$       EDECF$      ASGET       ASPUT YX
)@@G@@      FDGET       FDPUT       SDFOPKT     SDFO$       CCNT        PRINT$YY
)@@G@@      APRINT$     BUFFCHECK   @@[@@@@@@@B)COMPKTUPDATE@@[@@@@@@@[(CONTINYZ
)@@G@@CHAR  @@@@@@@@@@@IEDITADD     @@[@@@@@@@^6EDITCORR    @@[@@@@@@@#_EDITDEZA
)@@G@@L     @@[@@@@@@@ABFILEOUT     @@[@@@@@@@#%OUTBLOCK    @@[@@@@@@@].OUTEOFZB
)@@G@@      @@[@@@@@@@@"OUTPUT      @@[@@@@@@@[6OUTSTAT     @@[@@@@@@@]LPREFIXZC
)@@G@@      @@@@@@@@@@@KRECMODE     @@@@@@@@@@@TSCAN        @@[@@@@@@@@@STARTCZD
)@@G@@OL    @@@@@@@@@@@HSWAP        @@[@@@@@@@[)WORDOUT     @@[@@@@@@@DNWORDS ZE
)@@G@@      @@[@@@@@@@DGWORDT       @@[@@@@@@@D^^[4H[>^[-GL\I1>^[0H9(H14IS)GD2ZF
)@@G@@)@^@O@)@@[]@@K@@@@/K@@@G@@#@@@@@)@@@@@^@@@@@K@@@@@C@@@@@]@@@@@[@@@------ZG
)@@G@@@ASG,-AA@@@@)@C[U@K@K@@@[1W@@@/\X@@@[[W)@[G[K@ +;(K@@Y/KF@@@8KK@@C/\X@@@ZH
)@@G@@%9K@@ +9@@@_;=0@@AAB@@@@)@N[U@@[@@@@TPF$  /K@@@I/\X@@@[-W@@@/\X@@@[>W@@@ZI
)@@G@@/\X@@@[(W@@@/\X@@@[!W@@@/\X@@@AC@@@@)@Y[EED80@)*CYG@C]]@@@@@[@0@@ C@0@ <ZJ
)@@G@@>@)@@ C@)@@G9*K@@AA]0@@=@@@@@I@@[@@P      AD@@@@)@$[MJA@[[@K^@@@@@9*I@@^ZK
)@@G@@9?@@@X/K@@@1*0I@@@9?I@@^C9@@@@[)0@@^C80@@X=@)@@^C80@@ AE@@@@)@1[MK[@KO @ZL
)@@G@@K)@KO@/K@@@"*@@@@E'=@@@@C@@@ = @@@@I9*@@@C/K@@[+C9@@@[/K@@@5(?I@@@AF@@@@ZM
)@@G@@)@;[E/S@^[@K[@JA@^@@@@@@/K@@[+%@0@@A/K@@[^>9@@@C+@)@@A/,0@]Z/K@@[+C9@@@[ZN
)@@G@@=@)@@@AG@@@@)[^[F[^ [K#1)@KO^@@@@@@@9/@@@E9?@@@]C9K@@[=@)@@@/K@@[E9/@@@GZO
)@@G@@9?@@@@;(K@@ZC(K@@IAH@@@@)[H[F@K#1)[@^[[KO^@@@@@@ @@@@I9*@@@C9?@@@A/K@@[+ZP
)@@G@@C9@@@[/K@@[N=@)@@[/[K@[+/K@@[JAI@@@@)[Q[N@K)@KL[KL[KO@/K@@[-9/@@@E9?@@@]ZQ
)@@G@@C9K@@[9/@@@G9?@@@@;(K@@ZC(K@@I'=@@@@C@@@ =AJ@@@@)[)[N@^[@[[#1)[@@@/K@@[?ZR
)@@G@@>@)@@]=8K@@]C0K@@IC9K@@@C80@@@/,0@]./-@@[=C9@@@[/[K@[+AK@@@@)[%[EK#1)[@[ZS
)@@G@@@JA@O@@@@@@@/K@@[/(@@@@ /@0@[/C80@@[=8K@@^/K@@[0>@)@@#/K@@[0C80@@[AL@@@@ZT
)@@G@@)[3[N[KL[K^ [K^@@@>8K@@)/K@@]#/,0@#*C@)@@]C[@@@#/,0@^,9?K@@CC8@@@][[@@@#ZU
)@@G@@[@)@@]AM@@@@)[.[E/S@K^[@KO[@KK@@@@@@G9@@@](4@@@I/G0@]U/,0@#*(4@@@I/K@@]#ZV
)@@G@@/,0@#*/K@@][>@)@@^AN@@@@)]A[F[JA@^@^[[K^C@@@@@@@'=@@@@C@@@ = @@@@I/[K@]KZW
)@@G@@G9@@@^>8K@@)/K@@]F>@)@@^C0K@@IAO@@@@)]J[MKN1)[@@/S@K@@G9K@@]=8K@@^/K@@]TZX
)@@G@@>@)@@#G9K@@[=8K@@]/K@@]P>@)@@]C0K@@IC9K@@@AP@@@@)]T[N@[[KKK]+)@@@@C@K@ >ZY
)@@G@@C8@@@@/K@@]&()I@@@/KF@@@R]0@@=9?K@@CC@@@@IC9K@@^/K@@]VAQ@@@@)]<[N]@^K[@^ZZ
)@@G@@^K^^@@9?@@@C/K@@];9?I@@^9*@@@@9?I@@]/K@@]?(4I@@@/K@@];9?I@@^'=@@@@AR@@@@AA
)@@G@@)]![F[K]+)CK@*E@-@]@@@@@9?I@@^'=@@@@'KK@ $QFK@@@'=@@@@C@K@ &C8@@@@/K@@]7AB
)@@G@@9/@@@EAS@@@@)]6[F@^ [KO^KN1)@@@@@@@@>@)@@[A]0@@>/KF@@@9*@@@]9?@@@E9*@@@@AC
)@@G@@9?@@@GC9@@@C/K@@];AT@@@@)]_[F@KO @K^ ]@D[KK@@@@@ @@@@I[@K@@D'=@@@@[@@@@CAD
)@@G@@C@@@ */K@@#M9*@@@C9?@@@A/K@@##AU@@@@)#C[F@K)@KO[[#1)[@KK@@@@*@@@@E/K@@#^AE
)@@G@@%@@@ (G8@@@[C@@@@C/K@@#K(@@@@E'=@@@@C@@@ =AV@@@@)#L[N@K^@K@KL@@@@@/,0@@BAF
)@@G@@N8K@@G9?0@@C/\X@@@C9K@@ /,0@@BN8K@@^C@0@ %9?@@@Z/K@@##AW@@@@)#V[E^[@]+-@AG
)@@G@@A)*@@@@@@@@@C@@@ = @@@@I'=@@@@Q;@@@Q&;G@@@H^@@@Z/,0@^G/\X@@@C9K@@,AX@@@@AH
)@@G@@)#=[F]@@KL[JA@O[@K@@@@@@/K@@^EC@0@ :/K@@#!*@@@@ A]0@@&/KF@@@R]0@@>C9@@@[AI
)@@G@@'=@@@@AY@@@@)#![MK^^K@K@@@@@@@/\X@@@C9K@@//,0@^G/\X@@@C9K@@ /,0@@BN8K@@GAJ
)@@G@@9?0@@^9?@@@Z[[@@[]AZ@@@@)#7[UK@K@^@@N8K@@AC@"@@C/K@@^#(=I@@@/\X@@@C9K@@/AK
)@@G@@/,0@@BN8K@@AC@"@@B/K@@#/(*I@@@BA@@@@)^][N@K@**K[)CC@@@/KF@@@R]0@@&C9K@@[AL
)@@G@@C[@@[][@@@@J'=@@@@Q;@@@Q&;G@@@H@@@@Z/,0@@BBB@@@@)^G[N[^@^@K@@@@@@@N8K@@GAM
)@@G@@9?"@@]/K@@^T(4I@@@/K@@^T/\X@@@C9K@@*/K@@^M()I@@@A]0@@$BC@@@@)^Q[V@@^@K@@AN
)@@G@@C@"@@A/\X@@@C9K@@(/K@@^>(?I@@@/,0@@BN8K@@G9?"@@^/\X@@@C9K@@*/,0@@BBD@@@@AO
)@@G@@)^-[UK@KK@@@XA    X     AR    R     A     /KF@@@R]0@@$/\X@@@C9K@@)/,0@@BAP
)@@G@@N8K@@ABE@@@@)^?[M^ @K^C@4^KO^@9*K@@CA]0@@(/KF@@@R]0@@*'=@@@@/@@@^2/,0@^4AQ
)@@G@@A]0@@*RA    R     BF@@@@)^6[N[[@^@K^ @@@@@C@@@ = @@@@I/K@@ U=8K@@C/=K@ UAR
)@@G@@C8@@@^/@)@ )+8K@@B;G@@@=9*K@@SBG@@@@) @[N]@[@^^K@KK@@@N8K@@G9?0@@E/\X@@@AS
)@@G@@C9K@@*/,0@@BN8K@@G9?0@@GG8@@@]9?@@@Z'=@@@@BH@@@@) E[V@[[[@@@;H@@@AG9@@@0AT
)@@G@@W80@@E;O0@@=C[K@ ?;C0@@S;*0@@SC@0@@I/\X@@@C9K@@(/,0@@BBI@@@@) P[N@[@K^[[AU
)@@G@@K^^@@@&;G@@@[@K@@RC@Y@^&[@K@@QC@K@ !H@@@@Z/,0@@BC@0@@LN8K@@A/^0@ LBJ@@@@AV
)@@G@@) Z[U**C[L@@FIA$$)FIA$$A@@[@@[@@[@@ @@]@@LZ__@@CA     @     /KF@@@R]0@@(AW
)@@G@@Q;@@@QBK@@@@) %@+@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FREE,AX
)@@G@@)     )@@@@@@USE  BL@@@@@@^@@#@@B@@^@@J@@A@@$@@@@@E@@@@@@@ ,@@@@@%FITEM$AY
)@@G@@      PCT$        DATE$       CSF$        FIASG$      @@[@@@@@@@@-FIFOPTAZ
)@@G@@$     @@[@@@@@@@^$FIFREE$     @@[@@@@@@@^,FIFRIM$     @@[@@@@@@@^4FIMAG$BA
)@@G@@      @@]@@@@@@@@QFIPKT$      @@]@@@@@@@@C C)^@)@H@@@K 9(DD,GD=G(1I(-I->BB
)@@G@@^[7H[>H0)I-*G*)G1\H-?H97HD,G8)I[\HD,I))HD3^[!HD3IT(H1$BK)^@)@L@@@KHD,G1\BC
)@@G@@)@@@K@)@@@;[^G@]&@@C@@@@/K@@@%(KH@@@C@)@@HC8K@@@ @@@@[ @@@@LA]0@@@@@@@@@BD
)@@G@@@@@@@@AA@@@@)@B[UK@^@[@@C@/@@]/K@@@W%@0@@KC[H@@]C@/@@[/K@@@W%@0@@KC[H@@[BE
)@@G@@C@/@@@/K@@@*CKX@@@AB@@@@)@M[M^@[@K0@^G@@@@A]0@@[C9K@@[[[K@@^/K@@@W%@0@@KBF
)@@G@@C[H@@^C@/@@#/K@@@W%@0@@KC[H@@#AC@@@@)@W[M/S#@[@[@[@@@@C9K@@#CGX@@@/K@@@&BG
)@@G@@C9K@@]CKX@@@/8@@@=H@0@@KC@)@@H/K@@@&*@@@@[AD@@@@)@&@'/S#@[@^@KK@@@)@]@K@BH
)@@G@@@@@@@@@@@@@@/KF@@@R]0@@@C@@@@L/K@@@D!8K@@[/K@@@%*@@@@[AE@@@@)@^@C@)@!@;[BI
)@@G@@K0@K0@K[@K0@@@@@@@[@@@@^/K@@[R:8@@@[/,0@@@[@K@@#[@@@@]A]0@@[@@@@@@AF@@@@BJ
)@@G@@)@4[N#@@K^@^G@@K@@/K@@[K?/@@@@?/@@@^C@@@@^C@)@@GC@K@@I/G@@[R/,0@[6G8@@@[BK
)@@G@@C@@@@#AG@@@@)@"[N@K^[@K@^@@@@@CKH@@@/K@@[K KI@@@ GI@@@[K!@@@/K@@[G/K@@[BBL
)@@G@@/K@@[K/K@@[#/KG@@_AH@@@@)[C[M[@@^G@@@@@@@@G8)@@[C@@@@]]KY@@@[G!@@@[GI@@@BM
)@@G@@CGH@@@/K@@[K]GY@@@[K!@@@[KI@@@AI@@@@)[M[]^G@@^^@)@ @C@@@@@@@@@@@@@/KF@@@BN
)@@G@@R]0@@[G8K@@[ @@@@GM#?)@@N@K@@#&;)@@[&;@@@[AJ@@@@)[U[E/S#@[@ES@C@C]@@@@@@BO
)@@G@@C@@@@H/@K@[3/K@@[Y*KH@@@CKX@@@/K@@[ZC8K@@@/K@@[3(@@@@@AK@@@@)[<[N#@@^G@@BP
)@@G@@K[@@@@ @@@@G/K@@[2D@K@@I/K@@[?!8)@@[CG!@@@C@K@@ /!7@@@G8@@@[[@K@@ AL@@@@BQ
)@@G@@)[![F@[@^@^@)@A@C@@@@@@@/K@@[U/!7@@@D8@@@[/^K@[+C@K@@I/K@@[,?KI@@@CK,@@@BR
)@@G@@/K@@[\AM@@@@)@B@*/S]@@/S]@@#1)C@@@@@)[6@N[K0@@@@ @@@@AA]0@@]@@@^8)@@@@@@BS
)@@G@@@@@@K@@@@@@[@@@@@[AN@@@@)[8@;#@@/S#@@/S#@[@K0@K0@K0@@@@@@@@@G@@@@DC@@@@BBT
)@@G@@[@@@@E/K@@]A:@K@@B!@K@@BK@@@@CAO@@@@)[_@'/S#@@/S#@[@K0@K^C@OG@@@@@@@@@@@BU
)@@G@@[@@@@B'=@@@@/K@@]AA]0@@A/K@@]^:@@@@F!@@@@FAP@@@@)]A[E/S#@[@^[#@[#@[#@[[@BV
)@@G@@/KF@@@R]0@@]C@K@@E[@K@@CC@@@@C/K@@]HD8@@@[/K@@]E(@@@@AAQ@@@@@@@@@@^ [KO^BW
)@@G@@KN1)@@@@@@@@>@)@@[A]0@@>/KF@@@9*@@@]9?@@@E9*@@@@9?@@@GC9@@@C/K@@];AT@@@@BX
)@@G@@@@^@@#@@B@@]@@F@@C@@:@@@@@E@@G@@@@]J@@@@@#LASTD$      MCORE$      AVAIL BY
)@@G@@      @@[@@@@@@@[6DUMP        @@[@@@@@@@[UFIRST       @@@@@@@@@@@CINSERTBZ
)@@G@@      @@[@@@@@@@@!OVERFLOW    @@@@@@@@@@@APREGSAVE    @@@@@@@@@@@ ROOT  CA
)@@G@@      @@@@@@@@@@@@SEARCH      @@[@@@@@@@@@[@]+-@A)*@@@@@@@@@C@@@ = @@@@ICB
)@@G@@'=@@@@Q;@@@Q&;G@@@H^@@@Z/,0@^G/\X@@@C9K@@,AX@@@@)@@[F[K^C@^@K^C@OC@M=@@@CC
)@@G@@C8@@@@9(K@@A9*0@@]/K@@@KC8K@@@/^@@@A9*K@@@/@K@@#A]0@@@AA@@@@)@D[#]@D@EK@CD
)@@G@@]^@U@-@]-@@@@@@@@@[@K@@ [@K@@E/K@@@K/,0@@@C8@@@#C8K@@@/@)@@J'=@@@@AB@@@@CE
)@@G@@)@L[](@@-@CO0@K)@[]@@(@@@@@@@@C8@@@@[@@@@E;*@@@MC8@*[S[^@@@CC8@@@B/,0@@@CF
)@@G@@C8@@@@AC@@@@)@T[F]@P@K]=@@-@A-@G))@@/KF@@@R]0@@@ @@@@@/,0@@@C8@@@]C8K@@@CG
)@@G@@/K@@@Z/K@@@W/,0@@@AD@@@@)@@@C@)@+@;[K0@EK@CK#*]@O)@@@@C8K@@@/K@@@?/K@@@*CH
)@@G@@/,0@@@C8@@@@[@@@@@A]0@@[@@@@@@AE@@@@)@([]K)#K^C@#1)G@^@/S]@T@@@@@@/K@@@4CI
)@@G@@(@@@@@/K@@@/(@@@@@C@K@@ /K@@@!/,0@@@C8@@@]AF@@@@)@1[]K)[K^C@L]@ ]@ #@@@@CJ
)@@G@@@@@@@@C@0@@C[^)@@DL@K@@EG8K@@[ W@@@ /K@@@5[W@@@ C8@@@KAG@@@@)@9@:]@^(@]-CK
)@@G@@@K))@@)@[@K@@@@@@@@@@@@@@@@@@@@@@@@@/KF@@@R]0@@['=@@@@D8@@@@[@0@@CAH@@@@CL
)@@G@@)@"[#[K0@^C]OG@]=[M^[C@@@@@@@@C8K@@E[^)@@@C8)@@@[@0@@[C@0@@@[@K@@D[@K@@]CM
)@@G@@A]0@@]AI@@@@)[A[F]@>]@>]@?K)G^@K)H@@/,0@@@9?D@@@/K@@[Q(@D@@@/,0@@@C/@@@*CN
)@@G@@/,0@@@C/@@@@[?K@@@AJ@@@@)[J[F#@@K[]@0K)H^C#@@@@@/,0@@@C/@@@&/,0@@@9?D@@]CO
)@@G@@/,0@@@C/@@@//K@@[Q:@(@@]C@)@@DAK@@@@)[S[F]@9#@[]@>]@/K@@@@@@9?9@@@A]0@@GCP
)@@G@@ @@@@H/K@@[<>90@K@C[0@@@[@)@@@C@)@@[/,0@@@AL@@@@)[-[]K#1)G@^[]@>]@!]@(][CQ
)@@G@@@@@@@@/,0@@@C/@@@@/,0@@@C/@@@@/K@@[4>[0@@E/,0@@@9!T@@]AM@@@@)[([MK[@[][ CR
)@@G@@@K)M@@C8K@@ /,0@@@/K@@[2/,0@@@C/K@@@C/@@@[/K@@[0=90[@@/K@@[1>90@K@AN@@@@CS
)@@G@@)[3[#]@([^ ]@>]@!]@/@@@@@@@@@@C8K@@ C@@@@@/,0@@@C/@@@@A]0@@#/KF@@@R]0@@]CT
)@@G@@[4K@@@AO@@@@)[;[E/S]@(@^@K^C]=C^@@@@C/@@@[/,0@@@C/@@@@/K@@]A=8@[@@/K@@]BCU
)@@G@@>8@@K@/K@@]G:4K@@@AP@@@@)]^[]K)LK^C]=C^^C^-]@*@@@@@@@@[4K@@@C8K@@ /,0@@@CV
)@@G@@/,0@@@C/@@@@/K@@]E/,0@@@C/K@@@AQ@@@@)]G[N]@9[@^@@@@@@@!8)@@'!8)@@0;=K@@ACW
)@@G@@/K@@]V;G)@[CC8@@@AC@W@@@/KF@@@R]0@@#/,0@@@AR@@@@)]Q@;@@^@@@@)@#@S@@@@@@@CX
)@@G@@@@@)@[@[@@@@/KF@@@8#@@]N @@@@IG@0@@K+8)@@JS80@@E/K@@]WAS@@@@)@A@C@)]X@'/CY
)@@G@@S#@[@K0@K0@K)NK0@@/KF@@@9?@@@ '=@@@@C@@@@^9*@@@ /K@@]<(W@@@#@@@@@@AT@@@@CZ
)@@G@@)]=@'/S#@[@K0@K0@K)NK0@@)@B@C@*SDFF*/KF@@@9?@@@ '=@@@@C)@@@^9*@@@ /K@@]%DA
)@@G@@*W@@@#AU@@@@)@C@S@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DB
)@@G@@@@C@@@      @ @@@[AV@@@@@@^@@#@@B@@O@@\@@B@[F@@@@@E@@F@@@@]:@@@@@^SDFOPKDC
)@@G@@T     PFSPKT3     PFWL$       ERROR       SDFOO$      SDFO$       RECMODDD
)@@G@@E     SDFOC$      PFI$        EDTPKT      CARDBUF     EDIT$       ECHAR$DE
)@@G@@      EFD2$       EDITX$      INFOBITS    EMSG$       EPRT$       WORDS DF
)@@G@@      PSR$        ASPSR       @@[@@@@@@@]XCLOSESDFO   @@[@@@@@@@@+CONVERDG
)@@G@@T     @@[@@@@@@@]JFDPSR       @@[@@@@@@@]=OPENSDFO    @@[@@@@@@@@@OPNSTADH
)@@G@@RCARD @@[@@@@@@@@"STARCARD    @@[@@@@@@@[6H(0H->IS)^@)@N@@@KGL>^[?HD3I->DI
)@@G@@G))G1\IK)GD=G(1I(-GT9 ))======@@^@@ @@@@@@@@@@@@@@ @_6@@@@@]@@@@@@@@@@@@DJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@I(5DKM041082@]@@]@@@@@#7@@@@@@@@@@@@@@@@@@DK
)@@G@@@@@@@@@@@@@@@]:@@A@@A@[R@^?@@@@@A@@^@@@[7@@@@@@@@^@@@]@^@G@[@ @@@]K^@W@)DL
)@@G@@#@@@@@ 9*E0,^@)^TNI[-GT>^S)^@)@]@@@K 13HT(I@)AK)@L@@@K 91^TKGD2HD3^[QG(2DM
)@@G@@IT5IS)I-*G*)E[2H96HD,GT>IS<BK)^[CGD3^[KGD2HD3^[6G(2IT5IS)I-*G*)I[2H96HD,DN
)@@G@@[T0@C@)AK[-0@@@___@@=^@@@@)^[C@ V^[7@#<^B*@@0^J<@@3^K$@@E^M0@@*^?N@@*A[EDO
)@@G@@@@_BQ[@@EBR:@@HBSG@@GBS5)@=^@=)@J^[*)@Q^BM)^S^FF)@O^KN)[Q^LU)TT^M'-OJ^?;DP
)@@G@@-OJA[2)@:BR@)@RBR5)@WBSTA]0^@F/@K@C#9*KBQ*/^@@CAC8K@@@/K@@CK9*0BQF9(KBQJDQ
)@@G@@C8@BQ*'=@@[C/@)@CJC8KBQ*C8@@@#/,0@>//K@@CK[@KBQN[@KBQ!C8@BQ*/,0[YAC8@^@BDR
)@@G@@[^@BQ0C8@*[S;*@@@M[@@BQ2C8@BQ*/,0[XL/K@@CW/K@@CZC8KBQ*C8@@@]/,0@>/ @@^[-DS
)@@G@@R]0^@F/KF@@@A]0^@G[@@^@@C8@BQ*/,0[Y(/K@@C*/K@@C?C8KBQ*C8@@@]/,0@>//K@@C!DT
)@@G@@C@KBQ!(@@^@@/K@@C/(@@^[-/K@@C4C8@@@K[W@BQI/K@@C5 W@BQIG8K@@[L@KBQN[^)BQMDU
)@@G@@C@0^@C[@0BQLD8@BQD'=@@[^R]0^@G/KF@@@A]0^@H[@K^@][@K@@DC@0BQ3[@0^@[C8)^K3DV
)@@G@@[^)BQ3C8K@@E[?KBQ3C/@BQ3/,0[L;C/@@@*/,0[M*(@D@@@/K@@DQ9?D@@@/,0[U(C@)^@DDW
)@@G@@:@(@@]/K@@DQC/@@@//,0[M*9?D@@]/,0[U(C/@@@&/,0[M*/,0[MIC@)^@[[@)BQ3C[0^LYDX
)@@G@@>90@K@/K@@D< @@@@HA]0@@G9?9@@@9!T@@]/,0@C@>[0^@E/K@@D4C/@BQ3/,0[L;C/@^K3DY
)@@G@@/,0[V\>90@K@/K@@D1=90[@@/K@@D0C/@@@[C/K@@@/,0[ZO/K@@D2/,0@V4C8K@@ [4K^K3DZ
)@@G@@R]0^@H/KF@@@A]0^@IC/@BQ3/,0[L;C@@^LYC8K@@ :4K^K3/K@@EG>8@@K@/K@@EB=8@[@@EA
)@@G@@/K@@EAC/@^K3/,0[V\C/@@@[C/K@@@/,0[ZO/K@@EEC/@^K3/,0[V\/,0@V4C8K@@ [4K^K3EB
)@@G@@/,0[MIR]0^@I/KF@@@C@W@@@C8@@@A;G)@[C/K@@EV;=K@@A!8)@@0!8)@@'/K@@EWS80@@EEC
)@@G@@+8)@@JG@0@@K @@@@I8#@@EN/KF@@@(W@^@#/K@@E<9*@^@ C@@^@^'=@@[\9?@^@ /KF@@@ED
)@@G@@*W@^@#/K@@E%9*@^@ C)@^@^'=@@[\9?@^@ /KF@@@A]0^@V @@@@L @@^@KC8K^@JC@)@@HEE
)@@G@@(KH@@@/K@@FPCKX@@@/K@@FNC@/@@@C[H@@[%@0@@K/K@@FBC@/@@[C[H@@]%@0@@K/K@@FBEF
)@@G@@C@/@@]C[H@@#%@0@@K/K@@FBC@/@@#C[H@@^%@0@@K/K@@FB[[K^@NC9K@@[A]0^@K*@@^@KEG
)@@G@@/K@@FLC@)@@HH@0@@K/8@@FJCKX@@@C9K@@]/K@@FLCGX@@@C9K@@#*@@^@K/K@@FP!8K@@[EH
)@@G@@/K@@E4C@@@@LR]0^@V/KF@@@A]0^@W[@@^@L[@K^@M/,0@E::8@@@[/K@@G][@@^@NC@@^@MEI
)@@G@@G8@@@[/,0@G-/G@@G]C@K@@IC@)@@GC@@^@N?/@@@^?/@@@@/K@@F;/KG@F%/K@@F,/K@@F;EJ
)@@G@@/K@@F2/K@@F7[K!@@@ GI@@@ KI@@@/K@@F;CKH@@@[KI@@@[K!@@@]GY@@@/K@@F;CGH@@@EK
)@@G@@[GI@@@[G!@@@]KY@@@C@@^@LG8)@@[&;@@@[&;)@@[N@K^@MM#?)@@ @@@@GG8K@@[R]0^@WEL
)@@G@@/KF@@@(@@^@J/K@@GYC8K^@J/K@@GECKX@@@*KH@@@/K@@GD/@K@GYC@@@@H[@K^@OG8@@@[EM
)@@G@@/!7@@@C@K^@OCG!@@@!8)@@[/K@@GRD@K@@I/K@@GX @@@@G/K@@GUCK,@@@?KI@@@/K@@GTEN
)@@G@@C@K@@I/^K@GHD8@@@[/!7@@@/K@@G A]0^@X @@^@PK@@^@R!@K^@Q:@K^@Q/K@@G1[@@^@TEO
)@@G@@C@@^@QG@@^@S!@@^@U:@@^@U/K@@G\A]0^@P/K@@G1'=@@@<[@@^@Q(@@^@P/K@@G5D8@@@[EP
)@@G@@/K@@G8C@@^@R[@K^@RC@K^@TR]0^@X/KF@@@@@[@@@@@]@@@@@C@@@@@K@@@@@^@@@@@)@@@EQ
)@@G@@@@#@@@/K@@HA;=0@@A+9@@@_%9K@@ /\X@@@8KK@H]/KF@@@;(K@@YG[K@MW[[W)@[/\X@@@ER
)@@G@@[1W@@@/\X@@@[!W@@@/\X@@@[(W@@@/\X@@@[>W@@@/\X@@@[-W@@@/\X@@@/K@@HCTPF$  ES
)@@G@@      @@[^@3@@@@HCA]0^[]9*K^@=C@)@@G>@)@G_C@0@MX[@0^@<C80@@ =@)@G"C80@@XET
)@@G@@[)0^@+C9@@@@9?I@@^*0I@@@/K@@H:9?@@HR9*I@@^(?I@@@/K@@H\C9@@@[/K@@IW9*@^@&EU
)@@G@@ @@^@?C@@@MY'=@@@U*@@^@*/K@@H8=@)@G'C9@@@[/K@@IW/,0@JT+@)@H@>9@@@C/K@@H"EV
)@@G@@%@0@H@/K@@IWC(K^@?;(K@@Z9?@^@Y9/@^@%/K@@I^=@)@G'C9K@@[9?@^@)9/@^@*/K@@IDEW
)@@G@@/[K@IW=@)@G;/K@@IHC9@@@[/K@@IW9?@^@=9*@^@& @@^@?C@@@MY'=@@@UC(K^@?;(K@@ZEX
)@@G@@9?@^@Y9/@^@%C9K@@[9?@^@)9/@^@*/K@@IV/[K@IWC9@@@[/-@@IY/,0@J7C80@@@C9K@@@EY
)@@G@@C0K^@?=8K@@]>@)@G//K@@I&C80@@[/K@@I%>@)@G./K@@I%=8K@@^C80@@[/@0@I6(@@^@<EZ
)@@G@@/K@@I6[@)^@)[[@^@-C8@@@]9?K^@&/,0@L*C[@^@-C@)^@)/,0@K+/K@@I.>8K@@)>@)@G"FA
)@@G@@/K@@I;/,0@K+/K@@I.(4@^@?/,0@K+/G0@JO(4@^@?G9@@@]C0K^@?>@)@G"/K@@J >8K@@)FB
)@@G@@G9@@@^/[K@JE @@^@?C@@@MY'=@@@UC9K@@@C0K^@?>@)@G//K@@JJ=8K@@]G9K@@[>@)@G.FC
)@@G@@/K@@JN=8K@@^G9K@@]/K@@JPC9K@@^C@@@@I9?K^@&R]0^[]/KF@@@()I@@@/K@@J)C8@^@YFD
)@@G@@C@K@MZ'=@@@49?I@@^/K@@J5(4I@@@/K@@J&9?I@@]9*@^@Y9?I@@^/K@@J59?@^@&9/@^@*FE
)@@G@@/K@@J1C8@^@YC@K@M)'=@@@4QFK^@Y'KK@M-'=@@@49?I@@^/K@@J5C9@@@C9?@^@%9*@^@YFF
)@@G@@9?@^@*9*@^@)/KF@@@A]0^[#>@)@G;/K@@J.9?@^@=9*@^@&/K@@KGC@@@M+[@@^@&'=@@@MFG
)@@G@@[@K^@$ @@^@?C@@@MY'=@@@U(@@^@*/K@@KEC@@^@&G8@@@[%@@@M</K@@J"*@@^@*/K@@J.FH
)@@G@@9?@@HTC@0@M=N8K@@^/,0@H[C9K@@ /\X@@@9?0^@&N8K@@G/,0@H[C9K@@,/\X@@@/,0@LAFI
)@@G@@H^@@HT&;G@@@Q;@^@4'=@@@J @@^@?C@@@MY'=@@@UC9@@@[R]0^[#/KF@@@A]0^[^*@@^@<FJ
)@@G@@/K@@K$C@0@M>/K@@L^[[@@[]9?@@HT9?0^@+N8K@@G/,0@H[C9K@@ /\X@@@/,0@LAC9K@@/FK
)@@G@@/\X@@@(*I@@@/K@@K6C@"@@BN8K@@A/,0@H[C9K@@//\X@@@(=I@@@/K@@K.C@"@@CN8K@@AFL
)@@G@@/,0@H[H@@@HT&;G@@@Q;@^@4'=@@@J[@@@@JC[@@[]C9K@@[R]0^[^/KF@@@A]0^[ ()I@@@FM
)@@G@@/K@@LGC9K@@*/\X@@@/K@@LN(4I@@@/K@@LN9?"@@]N8K@@G/,0@H[C9K@@*/\X@@@9?"@@^FN
)@@G@@N8K@@G/,0@H[(?I@@@/K@@LZC9K@@(/\X@@@C@"@@AN8K@@A/,0@H[C9K@@)/\X@@@R]0^[ FO
)@@G@@/KF@@@A     R     AR    X     XA    R     RA    A]0^[A/,0@L,/@@@L?'=@@@JFP
)@@G@@R]0^[A/KF@@@A]0^[B9*K^@&9*K^@6;G@@@=+8K@@B/@)@MUC8@@@^/=K@MO=8K@@C/K@@MOFQ
)@@G@@ @@^@?C@@@MY'=@@@U9?@@HTG8@@@]9?0^@%N8K@@G/,0@H[C9K@@*/\X@@@9?0^@*N8K@@GFR
)@@G@@/,0@H[C9K@@(/\X@@@C@0^@?;*0@@S;C0@@SC[K@M&;O0@@=W80@@EG9@@@0;H@@@A/^0@MFFS
)@@G@@N8K@@AC@0@@L/,0@H[H@@@HTC@K@M$[@K^@4C@Y@L)[@K^@5&;G@@@Q;@^@4R]0^[B/KF@@@FT
)@@G@@@     A     Z__^@&@@]@@L@@[@@ @@[@@[FIA$$AFIA$$)@USE  )@@@@@)     @FREE,FU
)@@G@@A]0^[*A]0^M9R])@@G @@^[D CE@@M @E@@  @E@@C @E@@D @E@@E @E@@A @E@@F(^E@@ FV
)@@G@@/,0@OCC@@@@E/,0[F7/K@@M'/K@@M"/K@@N]C/0__"/,0@N&A]0^[D/K@@N+ @@@@J/,0@N&FW
)@@G@@A]0^[D/K@@N+/,0@OL @@^[E9?U@@[9*U@@HC@U@@#[@U@@JA])^[CC8E@@G/,0@YUR])^[CFX
)@@G@@C %@@GCD'@@J/ )@NOC9)@@[[D%@@ [D'@@AA]0^[E/K@@NZ?[)^M1C9)@@[[D%@@ [D'@@AFY
)@@G@@*^E@@ /K@@NW/,0@OC/K@@NZ! %@@ /,0@OCA]0^[E(@@^[E/K@@N^/,0@OY(@@^[D/K@@M3FZ
)@@G@@R]0^[*/KF@@@A]0^[(/,0@OL/G0@N%/,0@OCCCE@@]CCU@@# @@^[F/,0@>]/K@@N0/K@@N1GA
)@@G@@A]0^[F(@@^[F/K@@N!&;K@@@LCU@@#CCU@@#[CU@@A[C%@@ !^%@@ /,0@OCN'0@@]/K@@N_GB
)@@G@@*CE@@ /,0@OY/,0@OC8M0@N/N'0@@]/K@@O *CE@@F/,0@OY/,0@OC8M0@O]R]0^[(/KF@@@GC
)@@G@@&;)@@[Q#)@@EN')@@F/K@@OJC@"@@[;)0@@M[@")@[8M)@OG/KF@@@A]0^[%R])@@GC@U@@#GD
)@@G@@'KU@@^[@U@@#CCU@@MG^U@@@[CU@@MC^U@@A?^U@@# ^E@@ R]0^[%/KF@@@A]0^[:REU@@[GE
)@@G@@(@E@@C/K@@O**CE@@F/K@@O&C8@@@[/K@@O$C8@@@]/K@@O6A]0BSKC@@^LY*@@BSH/K@@O4GF
)@@G@@*@@^LB>8@@[@/K@@O1/,0@D6/K@@O3C8K@@ [4K^K3/K@@O5/,0@D6C8@@@[/,0@O9R]0^[:GG
)@@G@@/KF@@@A]0^[? @@^[H @@^[G%8@@@[/K@@P CC%@@ACCU@@ [C%@@CCC'@@M[C'@@EA]0^[GGH
)@@G@@/K@@PNCC%@@D?C%@@A/K@@PE*CE@@ /K@@PI/,0@P>(CE@@ A]0^[H/K@@PNCCU@@FGCU@@ GI
)@@G@@CC%@@ACC'@@MA]0^[G*@@^[H/K@@P<C8@@@[(@@^[G/K@@O/C0D@@@:8@@@]GC'@@ [C'@@MGJ
)@@G@@[CU@@FGC%@@ [C%@@DCCU@@#GCU@@ [CU@@# CE@@ R]0^[?/KF@@@A]0^[!C29@@@*^E@@FGK
)@@G@@/K@@P,C]K@@RC])@@[/,0@QM @@@@R/K@@QIH'0@@[/]0@P1/,0@OCCCE@@E!^E@@E/K@@P.GL
)@@G@@C'K@@[C')@@[/,0@QM/]0@P//,0@OCC'K@@]/,0@QM/,0@OC/K@@QIC^U@@EG^U@@F[@K^[IGM
)@@G@@/,0@OCC'K@@]C')@@[/,0@QM/,0@OCC'K@@[C@K^[I?CU@@E/K@@QGC')@@@/,0@QM/K@@QIGN
)@@G@@/A0@QI/,0@QM/]0@QK/,0@OCR]0^[!/KF@@@A]0^[,(CE@@F/K@@Q>CCU@@E%'K@@]/K@@QUGO
)@@G@@G8K@@[[CU@@EC4)^KM/^K@Q)%8)@@&/K@@Q)/,0@RY/K@@Q=/A)@Q</,0@RY/K@@Q=/,0@Q$GP
)@@G@@ CE@@FR]0^[,/KF@@@A]0^[\C/@BQ3/,0[L;C@@^M3/,0[M*C/@^KM/,0[V\CCE@@E/,0[N+GQ
)@@G@@:'K@@[/K@@Q8C/@@@,/,0[M*CCE@@EGCE@@FH8@@@[/,0[N+C@@^LY>8@@[@/K@@R@C/@@@]GR
)@@G@@/,0[-XC/@^K3/,0[V\/K@@RQ/,0[-W?8@@@I/K@@R G8@@@[/K@@RAC8@@@H/,0[-&%'K@@[GS
)@@G@@/K@@RFR E@@[/K@@RGRDE@@[9?^@@E/,0[U(C@@^[&*@^@@I:@^@@I/K@@RQC/@@@//,0[M*GT
)@@G@@9?^@@I/,0[U(/,0@V4:'K@@]/K@@RV/,0@RY/K@@RW/,0@S\R]0^[\/KF@@@A]0^[0 @@^[KGU
)@@G@@C@@^LY>8@[@@>@@^[$/K@@R?[@@^[J)8@[@@[@K^LYA]0^[KC@@^[L[@@^[SC8K@@-[@K^[QGV
)@@G@@CD%@@FCCE@@]CCU@@C/K@@S*/,0@>]/K@@R3/K@@R7C@K@@GC8@@@ /,0@>//K@@S*9!0@@GGW
)@@G@@C]K@@I/,0@V?(@@^[K/K@@S$C@@@@O;C@@@M[*@BQ5C/@BQ3/,0[L;C/@@@[/,0[-XC@K^LYGX
)@@G@@(@@BR2/K@@SC>8K@@K/K@@SGC/@@@^/,0[-X/,0@U_/K@@SMC/@@@[/,0[M*&;@@@@Q#@@@OGY
)@@G@@H8@@@[/,0[N+C/@@@]/,0[M*/,0[-W[@@^[PC/@@@[/,0[-XC*@BQ5[=@BQ5C@@@@ND@W@@KGZ
)@@G@@;KK@@SC@@@@P/,0[V /,0@UCC/@@@[C/K__"/,0[ZD/,0[MI =@BQ5 *@BQ5/,0@E=9?@@@NHA
)@@G@@8^)@R0(@@^[K/K@@S!C@@^[J[@@^LYR]0^[0/KF@@@A]0^[1C@@^LY>8@[@@>@@^[$/K@@UAHB
)@@G@@9?@^[O9*@^[SC8K@@-[@K^[QC/@BQ3/,0[L;C/@@@[/,0[-X9?@^[M/,0[U(C/@@@[C/K__"HC
)@@G@@/,0[ZD/,0[MICD%@@FCCE@@]CCU@@C/K@@T;/,0@>]/K@@TD/K@@THC@K@@GC8@@@ /,0@>/HD
)@@G@@/K@@T'9!0@@GC]K@@IC@@@@O;C@@@M[*@BQ5C/@BQ3/,0[L;C/@^[O/,0[V\C@K^LY(@@BR2HE
)@@G@@/K@@TV>8K@@K/K@@TX/,0@U_/K@@T>C/@@@[/,0[-XC/@@@[/,0[M*&;@@@@Q#@@@OH8@@@[HF
)@@G@@/,0[N+C/@@@]/,0[M*/,0[-W[@@^[PC/@@@[/,0[-XC*@BQ5[=@BQ5C@@@@ND@W@@K;KK@@SHG
)@@G@@C@@@@P/,0[V /,0@UCC/@@@[C/K__"/,0[ZD/,0[MI =@BQ5 *@BQ5/,0@E=9?@@@N8^)@TAHH
)@@G@@C/@BQ3/,0[L;C/@@@[/,0[-X9?@^[M/,0[U(C/@@@[C/K__"/,0[ZD/,0[MIR]0^[1/KF@@@HI
)@@G@@A]0^[2C8@@]^C@K^LY(@@BR2/K@@UJ>8K@@KC8@@[C[@@^[R/,0[-W!@@^[R:@@^[R/K@@U.HJ
)@@G@@[@@^[Y/,0[WO[@@^[VC@@^[RH8@@@[/,0[-&/,0[WO[@@^[WC?KBQ3[@K^[X[?@BQ3C/@@@[HK
)@@G@@C/K@@@/,0[ZDC@@^[X[?@BQ3 =@BQ5C/@^[S/,0[V\C@@^[P/,0[-&C)@^[Q/,0[M*C*@BQ5HL
)@@G@@[=@BQ5C^@BQ3G@@^[WD@K^[VG@K^[W/,0[V /,0[-WH@@^[Y[@@^[VC@@^[Y/,0[-&C8K@@ HM
)@@G@@**@BQ5C8K@@)C@@^[V/,0[V_/K@@UKR]0^[2/KF@@@A]0^[3&;@@@@Q#@@@OH8@@@[C8K@@ HN
)@@G@@/,0[N<C^@BQ3C@K@@GA]K^[ZA])^[)(*@BQ5/K@@VI/,K^^R/,)^ [/K@@VK/,K^^[/,)^^?HO
)@@G@@+@)@[#')D)@@<@0@@K+@)@[#?80@@'?80@@0/K@@V=C80@@[**@BQ5C80@[V<@0@@K')E)@@HP
)@@G@@C9K@@A/K@@V++@)@[#')D)@@<@0@@K')E)@@8^K@VY/K@@V*')E)@@<@0@@K')D)@@/K@@VNHQ
)@@G@@R]K^[ZR])^[)R]0^[3/KF@@@A]0^[4;CK@@M[@K^[+CC'@@]CWJ@@K/,0@V;R]0^[4/KF@@@HR
)@@G@@A]0^[5 @@^[+/,0[WOC^)BQ3/,0@V;R]0^[5/KF@@@A]0^[6C@K^[+:@K^[-/K@@WK[@K^[-HS
)@@G@@(@@BQ*/K@@WKG@K^[<[@KBQ2[@@^[=[@)^[>C8@BQ*/,0[XL/K@@WE/K@@WIC8KBQ*C8@@@]HT
)@@G@@/,0@>//K@@WKC@@^[=C@)^[> @@BQ2[W@BQ2[^)BQ0(@@BQ*/K@@W)C8@BQ*/,0[XL/K@@WTHU
)@@G@@/K@@WXC8KBQ*C8@@@]/,0@>//K@@W)C@@^M2G8@@@[[@@^M2C@@^LY=8@[@@/K@@W4CW@BQ2HV
)@@G@@*@@^[-/K@@W(!8@@@RC8@@@Q/K@@W:!8@@@+C8@@@-;*@@@G&;@@@[;*@@@AQB@BQ0*@@^[-HW
)@@G@@/K@@W3'=@@@I/K@@W4'=@@@8R]0^[6/KF@@@C@0@@GC9@@@K[1J@@#CDJ@@BT9@@@WN^Z@@BHX
)@@G@@;GK@@M;C)@@M/@K@X[?@K@[[/KF@@@/@:@@@C@@@@IC^Z@@DCC\@@D&_)__"&;K@@[8KK@XDHY
)@@G@@/KF@@@[@!)@@'K)@@K8KK@XDGCJ@@D?8I@@@/KF@@@/KF@@[C@0@@GA]0@[#RA_@@D:CV@@@HZ
)@@G@@/K@@XS/,0@X%8K0@X$RA_@@DE^V@@@%^Z@@^/K@@XYC8J@@@0@G@@#'=@@@ACC:@@@H8)@@[IA
)@@G@@%C:@@[/K@@X$C8Y@@]/,0@X%8K0@X$RA_@@DE^V@@[C@@@@JR]0@[#/KF@@[N^Z@@BC^\@@DIB
)@@G@@H8)@@[&;)@@[2CY)@[/K@@X1/K@@X6CCI@@@[CY@@@C8J@@@/\K@Y]/KF@@@C[I@@@&_)__"IC
)@@G@@C@K@@I'O)@YTD@@@[[G^J@@BH8@@@[N@K@@GM#Y)@@C^\@@D[[I@@@/KF@@[0@G@@#'=@@@AID
)@@G@@C5G@@#/[@@YC%9@@@ /KH@@@E I@@@[ G@@^CDI@@@H9@@@[TDJ@@BG[G@@A[[G@@ GDJ@@BIE
)@@G@@![G@@NC[G@@NH[G@@ /HH@@[/[H@@[T9@@@W[DG@@^'=@@@[/KH@@[@@@@@[A]0^[8 @G@@ IF
)@@G@@C^W@@#G8K@@[[^W@@# @@^[7/,0[F7/K@@Y=/K@@Y=/K@@Y!C^W@@@!@K^M1/K@@Y:/@K@Y(IG
)@@G@@[CW@@ CCW@@ [^W@@@A]0^[7/K@@Z#C^W@@@?@K^M1/K@@Y2A]0^[7/K@@Z#/@K@Y4[CW@@ IH
)@@G@@C^W@@^/^K@Y7C8K@@[G^W@@#[^W@@#C^W@@@/^K@Y/G8K@@[G^W@@ [^W@@ ?CW@@@/K@@Z#II
)@@G@@CCW@@ [^W@@@A]0^[7(@@^[7/K@@Y)R]0^[8/KF@@@[^W@@M/K@@ZE ^G@@MC^W@@MN9F@@[IJ
)@@G@@!CW@@E8L@@Z1C^W@@I[K?@@LC8)@@[[^?@@H*@@@@H @H@@@CCW@@JG8K@@J&#@@@HCCW@@JIK
)@@G@@/,0@W68L@@Z1Q#@@@JC8K@@[[^W@@J/,0@XK8L@@Z1[CW@@GG^W@@M[^W@@GCK?@@L=8)@@]IL
)@@G@@/K@@Z1)8)@@]C@X@@@/CK@Z1:@K@=V8L@@Z1;CK@@M)8K@_@%8)*_F:8)*_P[K/@@L:8)*_XIM
)@@G@@[K/@@LR]0@[^/KF@@@C^?@@F/K@@Z6 @@@@I 4G@@L[CW@@HN[@@@FN9K@@[:^W@@H/K@@)*IN
)@@G@@(^G@@I8L@@+]/,0@+S8L@@+]/K@@)*QBW@@GC5X@@@%9K@@(/K@@)*(@@@[ :^?@@F/K@@)GIO
)@@G@@[^?@@GQ#K@@IC^?@@F/K@@);C1X)@@C@/@@K;K0@@S0@@@@JC0/@@K[@0@@KH^/@@E1@@@@JIP
)@@G@@C80@@@G[@@@L! G@@EC[K@@J @@@@J0@G@@KC80@@AN@)@=W0@G@@KN@)@=X;(J@@S0@@@@KIQ
)@@G@@8L@@+];DJ@@M&#0@@K<@/@@K[[G@@K(@@@[ CC?@@F/K@@-[*@@@[ /,0@<1/K@@+AC^W@@GIR
)@@G@@&;K@@[C[X)@@[[W@@K[^W@@G/DK@);;DK@@Y:9K@@_/K@@+]C)/@@KCLG@@LN/)__"%9K@@*IS
)@@G@@:9K@@+<@0@@K[LG@@LC[W@@K;LK@@S0@@@@LC1W@@K! W@@EC W@@EC G@@GG[@@@LCC/@@GIT
)@@G@@GC/@@EH[@@@J/D@@-\*@@@[ /K@@-F/^)@-HC8!@@@G@K@@L/K@@-M&;)@@[N@K@@LM#!)@@IU
)@@G@@[C?@@FC^?@@F[^W@@GC[W@@K;LK@@S0@@@@LC1W@@KH W@@E/HK@)[C9@@@_(@@@[ [5G@@LIV
)@@G@@C G@@GG[@@@L[ G@@GCC/@@GGC/@@EH[@@@J/H@@)[H[K@@KC^W@@JG8K@@[[^W@@J[C?@@FIW
)@@G@@/,0@XK8L@@+][^W@@G[CW@@GCC?@@F&;K@@[/K@@-TH[K@@K*@@@[ /K@@-6C^?@@F&;)@@[IX
)@@G@@N@K@@LM#!)@@C[K@@K[C?@@FC^W@@JG8K@@[[^W@@J/,0@XK8L@@+][^W@@G[CW@@G&;K@@[IY
)@@G@@CC?@@F/K@@-[H8K@@[[^W@@GC^W@@H8L@@+QC^W@@H(4G@@L/K@@+NN@)@=W0@G@@KN@)@=XIZ
)@@G@@C80@@_?^/@@E1@G@@KC^/@@E;*0@@S<@/@@K[[G@@K&NW@@L;*K@@L;CK@@LR]0@[^/KF@@]JA
)@@G@@[^?@@L @@@[ H^W@@H/GK@+<C^W@@IC^!@@@HC?@@H/C)@+<]@)@[ C^!@@@/K@@+=CC?@@HJB
)@@G@@C[@@@IC^W@@IC?.@@@ @@@@H;^Z@@=D@0@@JG80@@=;C\@@@H[@@@I[ G@@HG8)@@[G@)@[ JC
)@@G@@/^K@+7C^W@@M&;K@@[C9@@@[[ G@@HH8)@@[/K@@+9G^W@@IC@X@@@[^W@@GN[K@@I @@@@IJD
)@@G@@;=K@@[N/)__"<K?@@L[K/@@L;CK@@N[^W@@JC[K@@F/,0@XK8^K@< R]0@@L[CW@@GG^W@@GJE
)@@G@@[^W@@GC^?@@L/KF@@[[^?@@LC^W@@IC^.@@@G80@@[[^.@@@C?!@@@C9@@@@;G"@@@/ @@<\JF
)@@G@@?C/@@I/K@@<>C@)@@HG8)@@[C@0@@I&;0@@[G8)@@[&;)@@]CDW@@I;DK@@[N@K@@LM#")@@JG
)@@G@@C?!@@@G8)@@[[?!@@@C^.@@@/K@@<KC@)@@J&B/@@JC G@@GHDG@@GQ#0@@KCLG@@L;(@@@<JH
)@@G@@)@0@@KG@K@@I[[H@@@C^?@@L/KF@@@C^W@@GCK/@@L1@H@@@/K@@<8=80@@^/K@@= /K@@=OJI
)@@G@@>80@@]0@G@@M/K@@= C(H@@@C0/@@M)5G@@M/[K@= (4G@@M/K@@=O*@@@@K?@0@@K?).@@@JJ
)@@G@@/K@@=O8LK@=B8]0@=OC^W@@I/@K@=LC^X@@@H^W@@H/CK@=L&';@@@/,0@<FC@K@@F;CK@@MJK
)@@G@@[@K@@FC^W@@HG8K@@[[^W@@H/KF@@[0@G@@#'=@@@AC@W@@ GCW@@B[@W@@ /KF@@@**PF**JL
)@@G@@@@_____@____A]0^[';)@@@MR8?@@@;C@@@M[@@^[9C@M@@M @@@@ICC/@@B?80@@^/K@@=:JM
)@@G@@;GK@@];C)@@+;*K@@][@W@@A[@W@@ G^M@@LG@K@@I[@W@@NC@M@@[[4W@@M;CK@@M[0W@@MJN
)@@G@@;?K@@=T8K@@WC@0^LY=80@@^C8)@@]/,0@ZB/K@@=//K@@=_C@K^[9C8@@@J/,0@>/&#@@@]JO
)@@G@@R]0^['/KF@@@N9:@@[/,0@Z5/K@@>B/K@@>F/K@@>HC@K@@GC8@@@[/,0@>//K@@>*8L)@>GJP
)@@G@@/K@@>*C@0^LY>80@[@/K@@>*C[@@@H;D@@@M/-@@>UC@"@@@;G0@@V;D@@@VC4_^[_;=0@@=JQ
)@@G@@C4_^[_/K@@>WC5I@@@C0"@@@%-@^M3/K@@>-8L)@>ZH8K@@[/K@@>*%9@@@*/K@@>*%80@@*JR
)@@G@@:80@@ /K@@>*8L)@>$H8K@@[R]0@[A/KF@@@[@0^^@;))@@A+8)@@_C^_^[_;^)@@D;))@@DJS
)@@G@@C@0^^@/KC@@@[@0^^@;))@@D+8)@[_C4_^[_;^)@@D;))@@DC@0^^@/KC@@@      ^@)^@)JT
)@@G@@A]0^BD[@@^AJ9*K^AK?/@@@M?/@@@[/K@@&O/KG@&]/K@@&R/K@@&R/K@@&%/K@@$:/K@@&RJU
)@@G@@/K@@&R/K@@$,/K@@$1/K@@$4/K@@$7/K@@*A/K@@*A/K@@*>/K@@&R/K@@&R/K@@**/K@@*%JV
)@@G@@C@@^AM'=@@@I/K@@*%R])^AKC8@^B*/,0[L;C/@^AN/,0[V\(4E@@#/K@@&+C4E@@#/,0[N#JW
)@@G@@C/@@@[/,0[-XC/@^AP/,0[V\9?E@@@/,0[B@C8@@@]/,0[ZO/,0[MI/K@@*%R])^AKC8@^B*JX
)@@G@@/,0[L;?/)@@B?/)@@[/K@@&7/KI@&0/K@@&./K@@$I/K@@$L/K@@&7/K@@$Q/K@@$VC/@^AQJY
)@@G@@/,0[V\C/@^ASC/K__./,0[V /K@@$-C/@^AU/,0[V\(@E@@]/K@@$F9?E@@]/,0[U(9?@^AWJZ
)@@G@@9/E@@A(@E@@A/K@@$FC/@@@//,0[M*9?E@@A/,0[U(C/@^AY/,0[V\/K@@$-C/@^A)/,0[V\KA
)@@G@@/K@@$-C/@^A+/,0[V\C/@^A=/,0[V\/K@@$-C/@^A>/,0[V\C/@^A$/,0[V\/K@@$-C/@^A(KB
)@@G@@/,0[V\C/@@@[/,0[-XC/@^A:/,0[V\C8@^B,/,0[V\C/@@@[/,0[-X9?E@@@/,0[B@C8@@@]KC
)@@G@@/,0[ZO/,0[MI/K@@*%C@@^A!'=@@@I/K@@*%C@@^A,'=@@@I/K@@*%C@@^A\'=@@@I/K@@*%KD
)@@G@@C@@^A0'=@@@I/K@@*%R])^AKC8@^B*/,0[L;C/@@@[/,0[-X9?E@@@/,0[B@C/@@@[/,0[-XKE
)@@G@@C8@^CM/,0[V\C8@@@]/,0[ZO/,0[MI/K@@*%R])^AKO')@@C%@@@@F/K@@*JC8@^B*/,0[L;KF
)@@G@@C8@^CP/,0[V\/K@@*NC8@^B*/,0[L;C8@^CV/,0[V\9?E@@@/,0[B@(@E@@]/K@@*-9?E@@]KG
)@@G@@/,0[U(9?@^AW9/E@@A(@E@@A/K@@*-C/@@@//,0[M*9?E@@A/,0[U(C8@@@]/,0[ZO/,0[MIKH
)@@G@@/K@@*%C@@^A1'=@@@I/K@@*%C@@^A2'=@@@IA]0BSH*@@BSI/K@@*0 @@BQ*/,0[F*/K@@*1KI
)@@G@@/,0[FT'=@@@DR]0^BD/KF@@@A]0^BE[@@^AJ9*K^AK?/@@@B?/@@@[/K@@([/KG@*'/K@@(^KJ
)@@G@@/K@@(-/K@@(./K@@%T/K@@%5/K@@:.C@@^A3'=@@@I/K@@?$C@@^A4'=@@@IR])^AKC8@^B*KK
)@@G@@/,0[L;C8@^D /,0[V\9?E@@@/,0[B@(@E@@]/K@@(S9?E@@]/,0[U(C@@^A5:@E@@A/K@@(SKL
)@@G@@C/@@@//,0[M*9?E@@A/,0[U(C/@^A6/,0[V\C8@@@[/,0[ZO/,0[MIC@@^A7'=@@@IA]0@@GKM
)@@G@@/K@@?$C@@^A8'=@@@IR])^AKC8@^B*/,0[L;C8@^DZ/,0[V\9?E@@@/,0[B@(@E@@]/K@@(5KN
)@@G@@9?E@@]/,0[U(C@@^A5:@E@@A/K@@(5C/@@@//,0[M*9?E@@A/,0[U(C/@^A6/,0[V\C8@@@[KO
)@@G@@/,0[ZO/,0[MIC@@^A9'=@@@I/K@@?$C@@^A''=@@@IR])^AKC8@^B*/,0[L;C8@^D6/,0[V\KP
)@@G@@9?E@@@/,0[B@(@E@@]/K@@%L9?E@@]/,0[U(C@@^A5:@E@@A/K@@%LC/@@@//,0[M*9?E@@AKQ
)@@G@@/,0[U(C/@^A6/,0[V\C8@@@[/,0[ZO/,0[MIC@@^A;'=@@@I/K@@?$C@@^A/'=@@@IR])^AKKR
)@@G@@C8@^B*/,0[L;C8@^EH/,0[V\9?E@@@/,0[B@(@E@@]/K@@%!9?E@@]/,0[U(C@@^A5:@E@@AKS
)@@G@@/K@@%!C/@@@//,0[M*9?E@@A/,0[U(C/@^A6/,0[V\C8@@@[/,0[ZO/,0[MIC@@^A.'=@@@IKT
)@@G@@/K@@?$C@@^A"'=@@@IC@@^A_'=@@@IC8@^B*/,0[L;C/@@@C/,0[-XC/@^B@C/K__./,0[V KU
)@@G@@QE)^AKO')@@CC/@@@[/,0[-XCC@^AL/,0[N+C/@^B]/,0[V\9?E@@@/,0[B@(@E@@]/K@@:PKV
)@@G@@9?E@@]/,0[U(C@@^A5:@E@@A/K@@:PC/@@@//,0[M*9?E@@A/,0[U(C/@^A6/,0[V\C8@@@[KW
)@@G@@/,0[ZO/,0[MIC8@^B*/,0[L;C/@@@C/,0[-XC/@^B#/,0[V\C/@^B^/,0[V\C^@^AL/,0[N+KX
)@@G@@QA)^AKO')@@CC/@^B]/,0[V\9?E@@@/,0[B@(@E@@]/K@@:59?E@@]/,0[U(C@@^A5:@E@@AKY
)@@G@@/K@@:5C/@@@//,0[M*9?E@@A/,0[U(C/@^A6/,0[V\C8@@@[/,0[ZO/,0[MIC@@^BA'=@@@IKZ
)@@G@@/K@@?$C@@^BB'=@@@IC8@^B*/,0[L;C/@@@C/,0[-XC/@^B@C/K__./,0[V C/@@@[/,0[-XLA
)@@G@@C@@^AK/,0[N+C8@BQPC@K^AL&;K@@@RE?@@[%CW@@]RA?@@[O')@@CC/@^B]/,0[V\9?E@@@LB
)@@G@@/,0[B@(@E@@]/K@@?)9?E@@]/,0[U(C@@^A5:@E@@A/K@@?)C/@@@//,0[M*9?E@@A/,0[U(LC
)@@G@@C/@^A6/,0[V\C8@@@[/,0[ZO/,0[MIC@@^BC'=@@@IR]0^BE/KF@@@A]0^KBC#)^LY+#)^J/LD
)@@G@@G#0BQ*/B0@?3>;)[@@/K@@?3C8@@@D/,0@>//K@@,@C8@@@[/,0@,]*@@BSH/K@@! A]0BSILE
)@@G@@C@@^J./,0@=YC@@^J"/,0@=Y>;)@[@/K@@!@/,0@';/K@@!^C8@BQPC@K^J_[@W@@#/,0@M*LF
)@@G@@/K@@,@>;)[@@/K@@!D(@@BQ*/K@@!(R90@G /,0@1#/G@@!(>;)@[@/K@@!WA[0^F[C@@^@JLG
)@@G@@C@K^@O[@@^F@[@K^F] @@^@J/,0@';R[0^F[C@@^F@C@K^F][@@^@J[@K^@OC#)^LY/K@@!*LH
)@@G@@C8@BQPC@K^J_[@W@@#/,0@M*C#)^LY>;)@K@/K@@!*C8K@@ %4K^K3/K@@!*A]0@@G/,0@C+LI
)@@G@@/K@@!EC#)^LY>;)@]@/K@@!,C8@@@[/,0@2^>;)@^@/K@@!4C8@@@]/,0@,]C8@@@]/,0@2^LJ
)@@G@@>#)^K@/K@@!'C8@@@#/,0@,]C8@@@#/,0@2^>;)@)@/K@@,@C8@@@^/,0@,]C8@@@^/,0@2^LK
)@@G@@R]0^KB/KF@@@A]0^KC[@@^F# @@^@JC8KBVN[@K^@R9?K^?$/!)@,//C@@,L @@BSH9?KA[YLL
)@@G@@/!)@,//G@@,KC8@@@C/,0@>//K@@,' @@^F^N')@@]/K@@,9/!&@@@/G@@,3C?W@@#C@)^F#LM
)@@G@@?/K@@C?/K@@[/K@@,</KH@,V/K@@,$/K@@,$/K@@,$/K@@,$/K@@,%/K@@,!/K@@,0C8K^F LN
)@@G@@C8@@@A/,0@>//K@@,2:8)@@[/,0@\_/K@@,2:8)@@]/,0@\_/K@@,2:8)@@#/,0@\_/K@@,2LO
)@@G@@:8)@@^/,0@\_/K@@,O9?KA[Y/!)@,//C@@,8C8@@@C/,0@>/A]0^F^8M)@,OR]0^KC/KF@@@LP
)@@G@@9*K^F  @@^FBC@@^K[[@@^FCC8@@@W[C@^FD @@^FEC8@^F '=@@@#(4@^FC/K@@\EC8K^F LQ
)@@G@@C8@@@A/,0@>/C@@^FF%@@^K]/K@@\/C^@^FI[@@^FEC8K@^S[CK^FDC8@^F '=@@@#(4@^FCLR
)@@G@@/K@@\SC8K^F C8@@@A/,0@>/C^@^HQ[@@^J<C@K^FEH8K@@ [@K^FE @@@@G/!&@@@N;0@@WLS
)@@G@@C@@^FEG8@@@E[@@^FER[K^K#C8@^F '=@@@#(4@^FC/K@@\,C4@^FC:8@@@ /K@@\,C8K^F LT
)@@G@@C8@@@A/,0@>//K@@\9C@@^J</^@@\4D8@@@[/!&@@@/K@@\'H8@@@[[@@^J<C8 )@@1@G@@#LU
)@@G@@/!&@@@8N0@\\/K@@\Z/K@@\"D8@@@[/!&@@@/K@@,/A]0^KDC8)^J?&_)__"C8K^K^N8K@@ LV
)@@G@@M#!)@@C8K^J=9?/@@@9*.@@@9?/@@^9*.@@]C^/@@B9!G@@C*@@^F^/K@@0M[C.@@^[[H@@ LW
)@@G@@[[X@@B/K@@0P[^.@@^[[H@@A[[X@@CC8@^J=C8K@@BC@)^LY=@)^K G8K@@]/,0@FS%8@@@[LX
)@@G@@/K@@0"C[)^LYC8)^J=;^K@@=*@@^F^/K@@00CC.@@^C[H@@ C[X@@B;^K@@=*@H@@ /K@@0!LY
)@@G@@[C.@@^[[H@@ =[)^K [[X@@B/K@@0\C8@@@B/,0@>//K@@0.C^.@@^C[H@@AC[X@@C;^K@@=LZ
)@@G@@*@H@@A/K@@0;[^.@@^[[H@@A=[)^K [[X@@C/K@@0.C8@@@B/,0@>//K@@1[/C@@1[C8@@@^MA
)@@G@@/,0@>/R]0^KD/KF@@@A]0^KE @@^J!/!7@@@/G@@1)C@K@@GC@)^LYCC.@@^C H@@^9!X@@ MB
)@@G@@[^0^?=[ @A[V[[K^?>[[)A[W9?.@@@9!X@@]9*0^?X9*0A[O9(K^?-9(KA[S(@H@@ /K@@1UMC
)@@G@@*@H@@A/K@@1X=8)@@[A]0^J!/K@@1YA]0^J!(@@^J!/K@@1 /G@@12>8)@[@/,0@C"(@@^?>MD
)@@G@@/K@@1*C@@^J./,0@=Y/K@@1%C8@^?$/,0@14(@@A[W/K@@1\C@@^J"/,0@=Y/K@@11C8@A[YME
)@@G@@/,0@14 @@@@GR]0^KE/KF@@@A]0^KFC^W@@I @H@@@C^W@@DC8)@@[[^?@@J[^?@@HCC?@@DMF
)@@G@@&;)@@[[@!@@@D80@@[[@"@@@[^?@@GC8K@@[R]0^KF/KF@@@A]0^KGA]0^M9H8@@@[;*@@@[MG
)@@G@@[@@^J1C#)^LYN;@@@]/K@@3* @@^J0R90@G /!7@@@/G@@3*C@K@@G @@^J,(@@@[G*@H@@ MH
)@@G@@/K@@2RA]0^J,/K@@2=*@@@[G*@H@@A/K@@2WA]0^J,/K@@2=>#)^K /K@@2=*@H@@A(@H@@ MI
)@@G@@/K@@2=C@H@@B%@H@@CA]0^J,(@@^J,/K@@3$R]@@@H*@@^J0/K@@3 A]0^J0C8@BQ3/,0[L;MJ
)@@G@@C@@^J19?G^J2/,0[U(C8@^KH/,0[V\(@@@[G/K@@2'9?@^?V/,0[B@C/@^J'/,0[V\9?@A[MMK
)@@G@@/,0[B@/K@@3@9?@A[M/,0[B@C/@^J'/,0[V\9?@^?V/,0[B@C/@@@:/,0[M*C8@@@]/,0[ZOML
)@@G@@/,0[MIC8@BQ3/,0[L;C/@@@[/,0[-X9?C@@@/,0[U(C@@^KA:@C@@]/K@@3MC/@@@//,0[M*MM
)@@G@@9?C@@]/,0[U(>#)^K /K@@3=C/@@@[/,0[-XC/@@@(/,0[M*C@C@@B(@@@[GC@C@@C;@@@@MMN
)@@G@@[@@^J\/,0[S&C/@@@[/,0[-XC@@^J\/,0[TDC/@@@)/,0[M*C8@@@[/,0[ZO/,0[MI/K@@2IMO
)@@G@@8N@@2GR]0^KG/KF@@@A]0^K_ @@^KLC8@BQP/,0@M*C8@BQPR])@@GCCG@@[C0W@@@C@@@@EMP
)@@G@@%8K@@]/,0@OCC^W@@#C^G@@]/,0@7Q9?K^K*9*K^K1[S@^KKC8@BQPCCW@@#CCG@@]/,0@7QMQ
)@@G@@9?K^K*9*K^K\[W@^KKC8@^KXC8K^KMC@)^K$G8)@@[ @@@@J/,0@7 CW@^KK/@@@6^CS@^KKMR
)@@G@@/@@@6[9?K^K\9?0^K1/,0@6M?/@@@ ?/@@@[/K@@4S/KG@4N/K@@4</K@@4\/K@@4./K@@5,MS
)@@G@@C8@BQPC@?@@#&FW@@[QBW@@[C8@@@ /,0@*4C@K^K.C8@BQP'KW@@#[@W@@#/K@@6@CWK^KKMT
)@@G@@%8K@@]/K@@4*C8@@@C/K@@4(C8@@@]/,0@9,C8@BQPCCW@@#G8K@@[[CW@@#/K@@6@C8@@@&MU
)@@G@@[4@^KMCS@^KK%8@@@]/K@@46C8@@@ /K@@47C8@@@#/,0@9,C8@BQPC^W@@#G8K@@[[^W@@#MV
)@@G@@/K@@6@CS@^KK/@)@5@/ @@5]C80@@@/K@@5#C80@@[/^0@5X:W@^KK/K@@5X%8@@@]/K@@5LMW
)@@G@@C8@@@&[4@^KMC8@@@ /,0@9,C8@BQPC^W@@#G8K@@[[^W@@#/K@@5WCWK^KK%8K@@]/K@@5QMX
)@@G@@C8@@@C/K@@5RC8@@@]/,0@9,C8@BQPCCW@@#G8K@@[[CW@@#/K@@5!CS@^KKCWK^KK%8@@@]MY
)@@G@@/K@@5>C8@@@^:8K@@]C8@@@B/K@@5*C8@@@[:8K@@]C8@@@A/,0@9,C@K^K.C8@BQP'KW@@#MZ
)@@G@@[@W@@#/K@@6@CS@^KK:W@^KK/K@@5/CWK^KK%8@@@]/K@@58C8@@@^:8K@@]C8@@@B/K@@5;NA
)@@G@@C8@@@[:8K@@]C8@@@A/,0@9,C@K^K.C8@BQP'KW@@#[@W@@#/K@@6#CW@^KK/,0@9C/K@@6INB
)@@G@@CS@^KK/@@@6HR')BQP/,0@OC9?K^K19*K^K*/,0@9CR')BQP/,0@OCA]0^KL(@@^KL/K@@3!NC
)@@G@@R]0^K_/KF@@@A]0^L@D8@@@[!@K@@I:@K@@I/K@@6S/^)@6,!@0@@K:@0@@K/K@@6W/ @@6,ND
)@@G@@!@0@@I:@0@@I/K@@6)!@K@@J/K@@6<C8@@@[/K@@6,!@K@@K:@K@@K/K@@6$!@0@@H/K@@6%NE
)@@G@@C8@@@]/K@@6,C8@@@^:@)@@K%@K@@JC8@@@#R]0^L@/KF@@@A]0^L[C8@BQPCCG@@[C0G@@@NF
)@@G@@[@@^KWC8@BQPCCW@@#G8K@@[[CW@@#/,0@M*C8@BQPCCG@@[C0G@@@%@@^KW/,0@OCC8@BQPNG
)@@G@@CCW@@#CCG@@]/,0@7QR]0^L[/KF@@@A]0^L]C[K@@I/^0@7E/,K^^[/K@@7F/,K^ '/,)^^?NH
)@@G@@/K@@7L+@)@[#')D)@@<@0@@K')E)@@8^K@7H/,%@@@/,%@@@R]0^L]/KF@@@A]0^L#[@K^K?NI
)@@G@@[@@^K! @@^K:/,0@Z5/K@@7Y/K@@7+/K@@7=C@K^K!C@@@@[/,0@>//K@@8*A]0^K:/K@@8*NJ
)@@G@@CYG@@KC@0@@H;C0@@MC@@@@IC8K^KX/^0@7!T'@@@A/,K^^[/K@@7\T'@@@^/,K^ '/,)^^?NK
)@@G@@+@)@[#')D)@@H'@@@[%)0^M3/K@@8$ @@^K%C9K@@@/,0@82[[0^K* @@^K(%80@@,/K@@8CNL
)@@G@@<@0@@K')E)@@G9K@@[/,0@82[[0^K(%80@@-/K@@8C<@0@@K')E)@@G9K@@[C80@@ A]0^K%NM
)@@G@@%80@@.:80@@ /K@@8LC8@@@AC@K^K?C@)^K!/,0@*4A]0^K:/K@@8&C80@@/<@0@@K')E)@@NN
)@@G@@C80@@&<@0@@K')E)@@/,%@@@/,%@@@G9K@@[[[K^K$C8@^K*/,0@EJ[@0^K*C8@^K(/,0@EJNO
)@@G@@[@0^K(*@@^K%/K@@8>C8@@@[/K@@8&C8@@@]/K@@8*A]0^K:(@@^K:/K@@80C80@@&[40^KXNP
)@@G@@ @@^K$ @@^K* @@^K(C8@@@@R]0^L#/KF@@@A]0^L^ @@@@N/K@@9@+@)@[#')D)@@?80@@'NQ
)@@G@@?80@@0/K@@9]<@0@@K')E)@@G9K@@[C[)@@J;()@@Y;>)@@A8 @@85C80@@ /[0@9A/H0@9ANR
)@@G@@;(0@@A/D0@9^R]0^L^/KF@@@A]0^L [C@^K,C8@BQPCCG@@[C0G@@@[^@^K,CC@^K,/@@@9?NS
)@@G@@C^@^K,C@K^K*C@)^K(%8@@@[/K@@9)C8@@@&[4@^KM[@K^K1[@)^K2CC@^K,%8@@@[/K@@9YNT
)@@G@@C8@@@#/K@@9ZC8@@@ /K@@9([@K^K\[@)^K0C8@^KXC8K^KMC@)^K$G8)@@[ @@@@J/,0@7 NU
)@@G@@C8@@@]/,0@9,/,0@60/^@@9KR]0^L /KF@@@A]0^LA[@@@@MR')BQP*@@BSH/K@@9'(@@^LBNV
)@@G@@/K@@97/,0@D6/K@@99C8K@@ [4K^K3/K@@9;/,0@D6C/@BQ3/,0[L;C)@^M3/,0[M*%9)@@ NW
)@@G@@:9)@@#/K@@'YC@@^K\/,0[N+(@@^K0/K@@'IC/@@@,/,0[M*C@@^K0/,0[N+?9)@@A/K@@'INX
)@@G@@C/@@@-/,0[M*C@@^K"/,0[U$C@@@@M?/@@@C?/@@@[/K@@'Y/KG@'O/K@@'W/K@@'Y/K@@'YNY
)@@G@@/K@@'W/K@@'Y/K@@'W/K@@'WC/@@@//,0[M*%9)@@C:9)@@]/K@@'4C@@^K1/,0[N+(@@^K2NZ
)@@G@@/K@@'(C/@@@,/,0[M*C@@^K2/,0[N+C@@@@M?/@@@C?/@@@^/K@@'4/KG@'%/K@@'2/K@@'2OA
)@@G@@/K@@'4/K@@'2C/@@@-/,0[M*C/@@@]/,0[-XC/@^K3/,0[V\/,0@V4R]0^LA/KF@@@A]0^LUOB
)@@G@@AE0^LBAA0^LBC8@@@&[4@^K3[4@^KM/,0@;LR90@G /,0@_K/G@@;J/,0@3:C@@^LY>8@@K@OC
)@@G@@/K@@;IC8K@@ %4K^K3/K@@;IA]0@@G/,0@C+/K@@;#R]0^LU/KF@@@A]0^LVR')BQPCCE@@[OD
)@@G@@C4W@@@%8K@@[/,0@OC @@^LECCE@@]/!0@/,N')@@]/K@@/: @@^LF/!7@@@C[K^LY/^@@;;OE
)@@G@@*@@^LE/K@@;$ C@^LB[@K^LCC8K@@[/,0@.$/K@@;9 ^@^LB[@K^LD(@@^LB*@@BSH/K@@;7OF
)@@G@@CC@^@JC@K^LY=8K@K@*@G@@[/K@@;4C8@@@H9?KBQ*/,0@>/C8K@@[[^W@@ /K@@;9C8K@@[OG
)@@G@@/,0@.$A]0^LF/K@@/X(@@BSH/K@@;_=9K@K@/K@@/F:8K@@[/K@@/E9*K^LG9*0^LIC8K^?VOH
)@@G@@*@@^LEC8KA[MC8@@@[/,0@*49?K^LG9?0^LI/K@@/X%8K@@[/K@@/OC8K^?V*@@^LEC8KA[MOI
)@@G@@C8@@@]/,0@*4C8K@@]/K@@/UC8K^?V*@@^LEC8KA[MC8@@@#/,0@*4C8K@@[ @@@@G/,0@.$OJ
)@@G@@A]0^LF*@@^LF/K@@/$/,0@.$/!7@@@/^@@/X*@@^LE/K@@/&[@K^LC/K@@/$[@K^LDA]0^LEOK
)@@G@@R')BQPC^E@@]/!0@/,8M)@;WR]0^LV/KF@@@[@@^LKC8@@@[[@@^LL/!7@@@C@@^LKC@K^LLOL
)@@G@@ @@^LM/,0@Z5/K@@/9/K@@/./K@@.[C@K@@GC8@@@[/,0@>//K@@.Y[@K^LLA]0^LM @@@@GOM
)@@G@@/K@@.Y;@K@@MC8.@@@;CK@@M[@K^LLC[I@@@/^0@.M;D@@@S)9@@@_%9K@*_/K@@.L%9@@**ON
)@@G@@:9@@* /K@@.LCXG@@KC8@@@[A]0^LM/K@@.Y;D@@@M+9@J9_C[@@@L)9@@B_%9K R_/K@@.YOO
)@@G@@%9@ K%:9@ K)/K@@.YCXG@@KC8@@@[A]0^LM(@@^LM/K@@/5/^@@.</!7@@@/K@@.&H8K@@[OP
)@@G@@/!7@@@/K@@/2/K@@/,A]0^LW/^@@.8R')BQP[@K^LS @@^LR*@@^LE/K@@.1CCE@@[[CK^LROQ
)@@G@@/K@@.3C^E@@[[^K^LR9?/@@E9*0^LN9?/@@I9*0^LP/K@@"\G8K@@[[@K^LSC@@@@I/^0@._OR
)@@G@@T9@@@A/,K^^[/K@@"[T9@@@^/,K^ '')D)@@L9@@@[C8K^LN/,)^^?N8K@@^C80^[.M#Z)@@OS
)@@G@@Q;K^LN/K@@">+@)@[#')D)@@:80@@//K@@"K%80@@ /K@@"</,%@@@/,%@@@%80@@//K@@"+OT
)@@G@@Q;K^LP/K@@"Z+@)@[#')D)@@%80@@ /K@@"X/,%@@@/,%@@@/K@@"+<@0@@K')E)@@8^K@"QOU
)@@G@@/,%@@@/,%@@@/K@@"*<@0@@K')E)@@8^K@"E/,%@@@/,%@@@ @@^LRC@K^LS*@@^LE/K@@",OV
)@@G@@[CK^LR/K@@"\[^K^LRC8@^LNC8K@@ /,0@FS%8@@@[/K@@_FC@)^LS*@@^LE/K@@_[*CH@@^OW
)@@G@@/K@@";[C!@@^/K@@_@C8K^?V*@@^LEC8KA[MC8@@@^/,0@*4/K@@_E*^H@@^/K@@_ [^!@@^OX
)@@G@@/K@@_EC8K^?V*@@^LEC8KA[MC8@@@^/,0@*4/K@@_I/C@@_IC8@@@^/,0@>/R]0^LW/KF@@@OY
)@@G@@A]0^LX @@^LTR')BQP/!7@@@C@K@@G/G@@_(C@)^LY(CH@@^/K@@_V*^H@@^/K@@_&>8)@@[OZ
)@@G@@/K@@_>*CH@@^/K@@_+C[@^LC[DH@@^/K@@_=C[@^LD[ H@@^A]0^LT/K@@_$A]0^LT(@@^LTPA
)@@G@@/K@@_M/G@@_4/,0@C"CCE@@[C4G@@@%8@@@[/,0@OCC@T@@^[@U@@#C8@0/&[C@^KM @@@@GPB
)@@G@@R]0^LX/KF@@@/,0[@XA]0@[JC8@^LY/,0[O+/K@@_//K@@__'=@@@IC8@@@L/,0@>/C8@@@&PC
)@@G@@[4@^KMC[0^LY=[0BTIA]0^M7/,0[[>C@@BTJ'=@@[[C8@BQPC@KBTK[@W@@#C[0^LY(@@BSHPD
)@@G@@/K@[@J/,0@?(/K@[@U(@@BQ*>90[@@/K@[@PC8@@@D/,0@>//K@[@U>90@[@/K@[@T/,0@';PE
)@@G@@/K@[@U/,0@M*/,0[FT/,0[D+'=@@@DA]0BT1:9@@@^A]0BR2=[KBTL @@BR2C@@BTM @@@@JPF
)@@G@@ @G@@@;/W@@@/K@[@3C@0@@GC8G@@@C@KBTN'=@@@4C@@@@J9?/@@@9)/@@]9*/@@@;?0@@#PG
)@@G@@9=/@@@;?0@@[W80@2@'=@@@4C@W@@GC@G@@Q/@0[@8C@@@@J[@KBR3^@)BR4C8@BR:/,0[L;PH
)@@G@@C@@BTO/,0[U$C/@@@#/,0[-XC@@BTP/,0[N+C/@@@./,0[M*C@@BTQ/,0[N+C/@@@-/,0[M*PI
)@@G@@C)@BR1S8@@@GG*KBR1H8K@@[S8K@@ZG=)BR1H8)@@[W8K@@UW8@@@U;*)@@Y;GK@@YG8)@AAPJ
)@@G@@C@@@@I/,0[U$C/@@@]/,0[-XC@@BR4/,0[T[C/@__//,0[-XC/@@@-/,0[M*C@@BR4/,0[S&PK
)@@G@@C8@@@[/,0[ZO/,0[MIR]0BT1/KF@@@A]0BT2C8@^?N/,0[^/[@@BSGC8@^?N9?W@@C9*K^?$PL
)@@G@@/,0[BV/C@[[9(@@BSG/K@[[2A]0BSH/K@[[8A]0BSIC8@^?NC@W@@BG8K@@[T8K@[@[^W@@LPM
)@@G@@/K@[["*@@BSG/K@[["C8@@@CC8K^?N/,0@>/*@@BSH/K@[]]C@@BTR/,0@=YC8@A[E/,0[^/PN
)@@G@@[@@BSGC8@A[E9?W@@C9*KA[Y/,0[BV/C@[]&*@@BSG/K@[]SA]0BSIC8@A[EC@W@@BG8K@@[PO
)@@G@@T8K@[@[^W@@L(@@BSH/K@[]RC8@@@CC8KA[E/,0@>//K@[]>(@@BSI/K@[]YC8@@@CC8KA[EPP
)@@G@@/,0@>//K@[]>*@@BSH/K@[]>C8@@@[/,0[PO/K@[]<C8@A[E/,0[BV/K@[]3 @@BSI*@@BSGPQ
)@@G@@/K@[]?C8@@@CC8KA[E/,0@>/(@@BSH/K@[]3 @@BSHC8@^?N/,0[BVC@@BTR/,0@=Y*@@BSHPR
)@@G@@/K@[]7C@@BTS/,0@=YC8@BQ[/,0[^/[@@BSGC8@BQ[9?W@@C9*KBQ* @@@@GC[0^LY(4@BVAPS
)@@G@@/K@[#K>90@K@/K@[# C8@@@D/,0@>/C8@@@[*@@BSG/K@[#FC8@@@KC8KBQ[/,0@>/9?0BVIPT
)@@G@@9!KBTT*0@BVA9!KBVK/K@[#3*@@BSG/K@[#S>90@K@/K@[#RC8@@@KC8KBQ[/,0@>//K@[#3PU
)@@G@@0@@BSG/K@[#\=90@K@/K@[#)C8@@@KC8KBQ[/,0@>//K@[#,*@@BSH/K@[#,C8@^?N*@G@@EPV
)@@G@@/K@[#(C8@@@H9?KBQ*/,0@>//K@[#,9?/@@E9!W@@IC8@@@[>90@[@A]0BSJ/K@[#3>90@K@PW
)@@G@@/K@[#3C8@@@D/,0@>/ @@@@H(@@BQ*/K@[#_>90@K@/K@[#'(@@BSJ/K@[#_[@@BSL/,0@C@PX
)@@G@@>[0BTV(@@BSJA]0BSKC8@@@^/,0[PO/K@[^Z/K@[^#(=@BV /K@[^BC4@BVH[)@^M4*4@BVAPY
)@@G@@/K@[^F(0@BV /K@[^LC8@BVD*4@BVAC8@BVI/,0@EJH80@@[[C0^M8**@BV /K@[^P(0@BVAPZ
)@@G@@/K@[^UC8@BVG*0@BVAC8@BVK/,0@EJ[^0^M8C^@^M8!C@^M8/K@[^ZC8@@@D/,0@>/C8@@@ QA
)@@G@@/,0[PO/K@[^'/K@[^<(=@BV /K@[^$C4@BVH[)@^M3*4@BVA/K@[^:(0@BV /K@[^0C8@BVDQB
)@@G@@*4@BVAC8@BVI/,0@EJ[@0^M1*0@BVA/K@[^4(*@BV /K@[^'C8@BVG*0@BVAC8@BVK/,0@EJQC
)@@G@@[@0^M0[C0BQ-R]0BT2/KF@@@A]0BT3[@@BSMC4G@@@/,0[PO/K@[ ]/K@[ KC@@BSMC4W@@@QD
)@@G@@%8K@@#/K@[ F @G@@C @G@@DA]0BS5D8@@@[/K@[ J9?KBTW9*KBVDC8K@@^[0KBV /K@[ LQE
)@@G@@ @@BS5*@@BS5/K@[ALC@@BSMC4W@@@%8K@@#/K@[ VC8@BV &;@@@W/,0@HV/K@[ YC8@BV QF
)@@G@@&;@@@C/,0@HVC@@BSM9*W@@C[[G@@A9*KBSN/,0[ANC4@^@??8@@@S/K@[ *?8@@@)/K@[ :QG
)@@G@@C8KBSNC8@@@E/,0@>/C@@BSMCOK^@?[^W@@@C^K^@\[@W@@B9?K^@%9*W@@]9?K^@*9*W@@^QH
)@@G@@ @@BSPC@@BTY[@@BSQC8@BSN'=@@@#C@@BST*4@BSQ/K@[A]%@@BTZ/K@[A@C8@@@[/K@[A[QI
)@@G@@ @@@@G/K@[ALC4KBSQC@@BSMC4G@@@:8K@@ %8@@@#/K@[AI @@@@GC@0^LY(4@BVA=80@K@QJ
)@@G@@C8@@@[/K@[ALC8@@@IC8KBSN/,0@>/R]0BT3/KF@@@A]0BT4/C0[A*9*KBS6[@0BS8C8@BR:QK
)@@G@@/,0[L;C8@BU]/,0[V\9?@BS6/,0[B@C8@BUA/,0[V\C8@@@[/,0[ZO/,0[MIC@@BS8&'0)#@QL
)@@G@@B,0@C@C8@@@L/,0@>//K@[A"/[K[A"9*KBS6[[KBS9C8@BR:/,0[L;C@@BS9%8@@@[/K@[A3QM
)@@G@@C@@BT)/,0[U$/K@[A5C@@BT-/,0[U$C8@BUC/,0[V\9?@BS6/,0[B@C8@@@[/,0[ZO/,0[MIQN
)@@G@@C8@@@L/,0@>/R]0BT4/KF@@@A]0BT59*@^@&C8@^@&'=@@@U(@@^@*/K@[BP9?@^@%/,0[U(QO
)@@G@@C/@@@*/,0[M*9?@^@*/,0[U(C/@@@(/,0[M*C@@^@?;*@@@S;C@@@S/,0[N+C/@@@)/,0[M*QP
)@@G@@/K@[BR9?@^@&/,0[U(C/@@@./,0[M*R]0BT5/KF@@@A]0BT6[@@BS'*4@BVA/K@[B-D8@@@[QQ
)@@G@@/K@[C)9?KBVI9*W@@E9?KBTT*0@BVA9?KBVK9*W@@IC8K@@[[?W@@HC8G@@C'=@@[ /@)[B0QR
)@@G@@C@@BS'C8W@@CC8@@@#/,0@>/C@@BS'*?@BVA/K@[B5 @G@@[/K@[CUC=KBVAC8)@@[%8K@@-QS
)@@G@@/K@[B;C8)@@]/K@[B.:8K@@+C8)@@#[G?@@[C)0BVA?/)@@^?/)@@[/K@[CL/KI[C]/K@[CAQT
)@@G@@/K@[CC/K@[CG[K/@@[/K@[CLC(G@@KH[@@@J[LG@@[/K@[CLC(G@@KL-G@@KG9K@@[G[K@@JQU
)@@G@@[LW@@[C(G@@KCK?@@[L-G@@K; @@@=\[@@@I/C)[CUC8@@@FC@KBS'/,0@>/C^G@@L/^@[CZQV
)@@G@@C8@@@GC@KBS'/,0@>/ @@@@GR]0BT6/KF@@@@@@@@@@@@@@@A])BT7A]0BT89*@BT99*)BT;QW
)@@G@@9(@BT.C8@BQPRE?@@[C0%@@@C^/@@#CDG@@#:8)@@[;^0@@=[@0^M5[[@^M6C8@BS;/,0[L;QX
)@@G@@*@@BSI/K@[C_9?E@@E/,0[U(C@)BT+:@%@@I/K@[C_C/@@@//,0[M*9?E@@I/,0[U(C/@BT<QY
)@@G@@/,0[V\C@@^M6/,0[N+C/@BT>/,0[V\C@@^M5/,0[N+C/@BT&/,0[V\C@@^M2/,0[N+C^@[C+QZ
)@@G@@G8@@@[[^@[C+C4K[C+%8K@@[/K@[DR/,0[-W[C@BTG/,0[MIC8@BTF'=@@@C/K@[DUC8@@@]RA
)@@G@@/,0[ZO/,0[MIR])BT7R]0BT89?@BT99?)BT;9!@BT.N@KBT_ C@[C+/K@LC+A]0BT_*@@^M9RB
)@@G@@/K@[D$C@@BT$'=@@@IC@K^LY=8K@[@/K@[E=*@@BSI/K@[D,*@@BSH/K@[E=CG@^?OCM0^?ORC
)@@G@@/^@[D2C%0^?<C8@BQPRE?@@[C0%@@@C^/@@#CDG@@#:8)@@[;^0@@=H80@@[H9@@@[[@0^M5RD
)@@G@@[[@^M6C8@BR:/,0[L;C/@BT*C/K__./,0[V C/@@@[/,0[-XC@@@@RC/K@@]/,0[N<C/@BT%RE
)@@G@@C/K__./,0[V C@@^M6/,0[N+C8@@@]/,0[ZO/,0[MICM0A[F(G@A[FC%0A[UC8@BR:/,0[L;RF
)@@G@@C/@BT?C/K__./,0[V C/@@@[/,0[-XC@@@@RC/K@@]/,0[N<C/@BT%C/K__./,0[V C@@^M5RG
)@@G@@/,0[N+C8@@@[/,0[ZO/,0[MIC8@BR:/,0[L;C8@BUP/,0[V\C@@^M2/,0[N+(@@BQ*/K@[E\RH
)@@G@@C8@@@[/,0[ZO/,0[MIC@@BT, @@@@J @G@@@;/W@@@/K@[F@C@0@@GC8G@@@C@KBTN'=@@@4RI
)@@G@@C@@@@J9?/@@@9)/@@]9*/@@@;?0@@#9=/@@@;?0@@[W80@2@'=@@@4C@W@@GC@G@@Q/@0[F RJ
)@@G@@C@@@@JH@KBR3C]0@@H;Q0@@=W'0@ @C8@BR:/,0[L;C8@BUU/,0[V\C@@@@R/,0[N+C/@@@[RK
)@@G@@/,0[-XC/@BT\C/K__./,0[V C8@@@]/,0[ZO/,0[MIR]0BT_/KF@@@A]0BU@C[0^LY(@@BQ*RL
)@@G@@/K@[F>>90@K@/K@[F-(@@BSJ/K@[F>(@@BSK/K@[F>C@@BSL/,0@C+/,0[F*R]0BU@/KF@@@RM
)@@G@@A]0BU[C8@^?N9?W@@CC@G@@A/,0@L*C8@A[E9?W@@CC@G@@A/,0@L*C8@BQ[9?W@@CC@G@@ARN
)@@G@@/,0@L*R]0BU[/KF@@@R';@@]N[0@@FR@K@@G @@@@V @@BUYCFL@@#CB-@@#/K@[HKCC[@@]RO
)@@G@@C@K@@T/,0@>]/K@[HG[@K@@T[@)@@OC^[@@]C@K@@U/,0@>]/K@[HB[@K@@UCC[@@]CW/@@KRP
)@@G@@C^[@@]CXG@@KC@K@@O/@0[GU/[@[GU/,0[HVC]K@@T;EK@@M/H)[GQ/AK[GSC]KBUZ/K@[GTRQ
)@@G@@C]KBU)/K@[G<9!K@@T;HK@@MC]KBUZ/@0[G-/-K[G)C]KBU)/K@[G</-)[G<C]KBU)G@K@@JRR
)@@G@@H8K@@[&_K__"G@)@@KH8)@@[&_)__"/@0[G,%]X)@@/K@[G,H80@@[/^0[G%/[@[G3%]Y)@@RS
)@@G@@/K@[G3H9@@@[/ @[G\%@0@@K/K@[H#/@0[H[/K@[G"C[H)@[:[I)@[/K@[G"H;K@@[H;)@@[RT
)@@G@@A]0BUY/K@[H@8#0[G7G;0@@[/K@[H]G;0@@[/K@[HAH;K@@[H;)@@[A]0BUY/K@[HFH;K@@[RU
)@@G@@A]0BUY8L0[HE8L0[HF/K@[HIA]0BUY8L0[HI*@@BUY/K@[HN!F1@@@:F1@@@/K@[F_HB-@@#RV
)@@G@@HFL@@#[B-@@^[FL@@^[B1@@@C@@@@[R]0@[B/KF@@@A]0BU1C[K@@T-[K@@U;!K@@LC@@^M7RW
)@@G@@G@@^M8/^@[H</D)[I#9*KBU-9*0BU<(@@BU</K@[H3CC[@@]C^G@@FC@KBU-C@)@@JC@0@@TRX
)@@G@@;C0@@M/D)[H0/@0[H0D@0@@J/,0[I [@KBU-[@)BU<(@@BU=/K@[I[C^[@@]C^G@@FC@KBU+RY
)@@G@@C@)BU=C@0@@U;C0@@M/D)[H"/@0[H"D@0@@J/,0[I [@KBU+[@)BU=9?KBU-9?0BU<R]0BU1RZ
)@@G@@/KF@@@A]0BU2C[@^M7G[@^M8/ @[IE/C0[JE[@@BU$[@KBU([@)BU*[@0BU>E[@@@J(@@^M8SA
)@@G@@/K@[IR/ @[IOC8@@@A/K@[IPC8@@@^/,0[JG/K@[IY @@BU%C[K@@I/ @[IWT9K@@A/K@[IXSB
)@@G@@T9K@@^[[KBU&C@@BU(C@KBU$/ @[I*/,K^^[C@0BU%O]K@@JT*0^[/;)\@@@/,)^^?/K@[I2SC
)@@G@@/,K^^RC@0BU%O]K@@JT*0^[/;)\@@@0@@BU>/K@[I1/,)^ [/K@[I2/,)^^?*@@^M7/K@[JDSD
)@@G@@/H)[I9?9K@@C/K@[I9/,0[J1/K@[JC0@@BU>/K@[I.!9K@@C/K@[JB(@@^M8/K@[J CD0^M8SE
)@@G@@;H0@@=W>0^["/K@[J^')E)@@8 @[J#/,0[KQ/K@[JC/,0[J1/K@[JE/,0[K&R]0BU2/KF@@@SF
)@@G@@A]0BU3CCK^M8;GK@@=W@K@@G[@K@@LG@KBU([@KBU([@)BU%C@KBU*H@K@@LT@K@@GH@KBU%SG
)@@G@@/CK[JUC8K@@@C K^M8HDK^M8![K@@H:[K@@H/K@[J-C[K@@H/K@[J+C@K@@L[[KBU&/@K[J!SH
)@@G@@G@KBU%;GK@@=W@K@@G/@)[J:G8K@@[D@)@@IG@)@@G[@)BU:/K@[J, @@BU:[@KBU*R]0BU3SI
)@@G@@/KF@@@A]0BU4(@@BU*/K@[KMN@KBU*H8@@@[M#W)@@[@KBU!Q#KBU$(@@BU%/K@[K C>0^[/SJ
)@@G@@H[0BU%/K@[K#+@)@[#')D)@@<@0@@K/[0[K#')E)@@8^0[J"[[H)@@(@@BU:/K@[KMC@KBU:SK
)@@G@@T*K^[/C@)BU!H8)@@[C@0^[;C[I@@@;G.@@@D@K@@HG8K@@=;[H@@@[[I@@@C@KBU$C@)BU*SL
)@@G@@R]0BU4/KF@@@A]0BU5/K@[KY+@)@[#')D)@@0@@BU>C4_^[_<@0@@K')E)@@8^K[KS/,%@@@SM
)@@G@@/,%@@@&;K@@@L^KBU$C@KBU$R]0BU5/KF@@@A]0BU6C[0^LY>90@C@/K@[K\C)0^M4CE@^["SN
)@@G@@:'@@@)C^_^[_[@0BU\/K@[L=+@)@[#')D)@@0@@BU>C4_^[_<@0@@K')E)@@%C0^["/K@[L@SO
)@@G@@+@)@[#/K@[K/')D)@@+@)@[#%C0^[//K@[K_8^K[K'/K@[L=:@0BU\>90@C@/K@[L=A]0BU0SP
)@@G@@/K@[L-+@)@[#')D)@@0@@BU>C4_^[_<@0@@K')E)@@%@0BU\/K@[LM*@@BU0/K@[LLA]0BU0SQ
)@@G@@/K@[LM @@BU0(@@BU0/K@[L=+@)@[#0@@BU>C4_^[_/K@[LY<@0@@K')E)@@')D)@@+@)@[#SR
)@@G@@0@@BU>C4_^[_:@0BU\/K@[L-8^K[LS%@0BU\/K@[L=8^K[L 8^K[K0/,%@@@/,%@@@&;K@@@SS
)@@G@@L^KBU$C@KBU$R]0BU6/KF@@@@@@@@@@@@@__@/+.[]@\Z,@_[-W:B_[!S'@@[+P,[@[:M?@@ST
)@@G@@[ IAG@[#F^C@@FC[M9@B^[M2@@[@@@      ^@)^@)A^W@@#A@?@@^A^/@@ Q8W@@@N?L@@@SU
)@@G@@/\0[MYC*1@@]R^\[L6Q^1@@@C8J[L9C@0@@#O@)[L8&;0@@[M#/)@@/KF@@@A^W@@#Q8W@@@SV
)@@G@@/\0[MY/K@[ML/\0[MRC8[@@@Q^L@@#9?K@@]R@?@@^Q^/@@ [@W@@^[^?@@ /KF@@@[@[@@[SW
)@@G@@C8@@@[*)[@@]'=@@[\ )[@@]C@[@@[/KJ@@@(^[@@]/K@[M>CC-@@ /^)[M=C@-@@F[C-@@ SX
)@@G@@/\,@@]/KJ@@@N?L@@@/K@[M@C@)@@GC@1@@F*^[@@]/\_@@^E/,@@@')])@@/KF@@@[O<@@@SY
)@@G@@O80@@[/?+@@@[W<@@@[K<@@@[S<@@@/?)[M\[)<@@@O80@@[/?+@@@[4<@@@[0<@@@[?<@@@SZ
)@@G@@[*<@@@[=<@@@/?)[M6C8.@@@T8K@@#;GH@@@/K@[NFC80@@[;G@@@#/@@[NF;G@@@#G80@@[TA
)@@G@@/^@[NAC8)@@0')])@@/K@[NKC8)@@@;=K@@#G8)@@0')])@@8#0[NG/KF@@@C@1@@F*^[@@]TB
)@@G@@/\_@@^E/,@@@/K@[NSC8)@@0;*)@@M/\)[N"(C[@@[[C-@@[Q3:[L00@@@@F')])@@;C)@@MTC
)@@G@@R';@@@/K@[N$C8K@@@/\)[N"(C[@@[[C-@@[C):[L9/K@[N(')])@@8#K[N*C0:[L00@@@@FTD
)@@G@@')])@@G4J[L?C?\[L,S@J[OQ9)@[L?RE1@@[;?I@@@H8X@@@/K@[N/;=@@@[9?)@@G;=@@@]TE
)@@G@@9)@@@IK8K@@0')])@@H8X@@@8KK[N5/KF@@@AE1@@[N8K@@ER]0@@GE@@@@GC@0[O-5@J-OGTF
)@@G@@/SJ)@@H8Z@@[0@@@@FH8K@@[Q%1@@]N/Z@@[/KI@@@@@@@@E@@@@[=@@@@J*@@@]WK@@@SU)TG
)@@G@@@@#4D@@@&DU@@ .Y^@@;&?*@DO]"K@Z_____T&T&T&OY, B:KS=7M/UH,F:BO"FQC8K1\Y)!TH
)@@G@@U5_EU\PYS;+GLF)\*DVZH_T5P_R_-Z@@[__"*@@BU7/KF@@[ @@BU8[@@BU7 @@BU8C8W@@@TI
)@@G@@KCKBU7H8)@@V&;K[O"C@@@@H'=@@@H(@@BU8[@@BU8G8W@@@ @H@@@>@@[SZ/K@[O;>@@[S)TJ
)@@G@@/KF@@[C8H@@@?8I@@@/K@[O:C@@[SYC8K@@#/KF@@@C@@[SNC8K@@[/KF@@@[@@BU8C@@[STTK
)@@G@@C8K@@]/KF@@@L8@@@[C@)BU7G8)@@[*@I@@@?CY@@@/K@[PEG),@@@/K@[P^%CI@@@/KF@@@TL
)@@G@@C)"@@@H80@@[T80@@AG="@@@9?I@@[?80@@BC@K[S-/KF@@[;CK@@=;^@@@%(@@@@HG8K@@[TM
)@@G@@[@K@[#;C@@@Y[@@@[[C^@BU7G8@@@[C9K@@[ @@BVAN8)@@@C@W@@@/@K[QD;CK@@Y*@@@@HTN
)@@G@@?@K@[#/K@[P9%@K@[#/K@[QD%1W@@@/K@[QDC?W@@@!8K@@A/K@[P/%(KBVA @@BV [(KBVATO
)@@G@@9??@@[C-G@@@:9@@@[C@0[S-')H[Q;H9@@@[T9@@@AG>G@@@')H[R#G)G@@@G8@@@[/K@[P)TP
)@@G@@:9K@@[/K@[Q[C*?@@@:8)@@.N8)@@[%[K@[[/K@[P9/K@[P0%@)[S-[5@BV :@)[S-[-KBV TQ
)@@G@@/K@[P9(@@@[]:(KBVA/K@[QI[(KBVA @@BV :[K@[[/K@[QSG9K@@[(@G@@@/K@[QP!4W@@@TR
)@@G@@/K@[PZ @@BV  @@BVA/KF@@@:(KBVA *@BVA9?KBV 98V@@@C8@@@-[=@BVA(?@BVA/KF@@[TS
)@@G@@C@@BVMD8)@@@C80@@@C!@BVA8^@[Q:1@@@@I!8)@[@C80@@E[))BVA[=0BVA/KF@@[C8K@@@TT
)@@G@@;=@@@A?8K@@'?8K@@0/K@[Q6(@@@@JC80@[@H8K@@0T8)@@EG8!@@@/K@[Q=/^0[Q$%8K@@+TU
)@@G@@:8K@@-C8.@@@/@0[Q$/K@[Q=9*)BVB9*)BVD[@)BVF[@)BVG[@)BVH9*)BVI9*)BVK[@)BVMTV
)@@G@@/K@[Q^[1@BV [!@BV [(@BV [>@BV [5@BVA[1@BVA[!@BVAC80@@F+8K@@_:8)@@ ;^@@@ATW
)@@G@@8#0[RH9*@BU'C@@[S+C@K[S<C8)@@BC@0[S-[@"BU.8#)[RQN4KBV 9!@BVB/\)[S^C9K@@*TX
)@@G@@(4@BV *)@BV ')H)@@N0KBV 9!@BVD*@@@[[/K@[R>C[@[S=N8K@@^/\)[S^N?KBV (@@@[[TY
)@@G@@/K@[R\C9K@@(')H)@@C[@BVF/\)[S^C9K@@)')H)@@(*@BV *=@BV /K@[R5C@@[S>'=@@@JTZ
)@@G@@/KF@@@C9K@@/')H)@@N*KBV C[@BVG/\)[S^N=KBV (@@@[[/K@[R2C9K@@/')H)@@C[@BVHUA
)@@G@@/\)[S^/K@[R2;>@@@A')H)@@8KK[S]/KI@@@[5W@@@[1W@@@[!W@@@[(W@@@[>W@@@/\0[SGUB
)@@G@@[-W)@@Q;K[SA/KJ@@@PROCESSOR CALL ERROR    @[^[SJABNORMAL RETURN FROM REAUC
)@@G@@D$    @[ [SOTOO MANY SPECIFICATIONS @[^[SU]@@@@@[@@@@@      @@[BU.@@[[SAUD
)@@G@@TPF$  @@GBU9C8/@@@C*[@@];GK@[CW8)@@/W8K@@/N*W[L0;*0@@V;?)@@V;?K@@VR;@@@]UE
)@@G@@C8)@@@;=K@@D/\K[S9/@@[S8C@)@[[/@)[S7')])@@8#@[S0/KF@@@;G)@@=W8)@@EG8)@@0UF
)@@G@@')])@@C8\@@0')])@@C*1@@]/KH@@@;G@@@6C*[@@];GK@@G;G)@@Y;C0@@YG80@[@N0W[L,UG
)@@G@@/K@[S?;C@@@M+8@@_@;GK@@%/\K[S9C)\[L9')])@@N8K@@#R';@@@/\)[TQ+8K@@_G8)@[@UH
)@@G@@/\K[S9/KF@@@[C-@@[[G[@@[;G@@@0;*K@@[CC-@@ /@0[TY/\,@@[/K@[T>9?H[U[/K@[T=UI
)@@G@@;=@@@A+8K@@_/@)[T>')])@@8KK[T)C)\[L9')])@@CC-@@[CGL@@[/KI@@@C*1@@]&"0__"UJ
)@@G@@N8K@@D;C@@@M/\)[TQ+8K@_@C@@@@J;G)@@%W8)@@E/@)[T6G8)@@0')])@@C8\@@0C@/[U[UK
)@@G@@COG[L,N8K@@^')])@@;^?@@@8KK[T'+8K@@_G8)@[@/\K[S9/KF@@@, 19   ))AC9JANUARUL
)@@G@@Y@    FEBRUARY@   MARCH@      APRIL@      MAY@        JUNE@       JULY@ UM
)@@G@@      AUGUST@     SEPTEMBER@  OCTOBER@    NOVEMBER@   DECEMBER@   C8)@@NUN
)@@G@@/\K[S9[@[@@[C?L@@[G8K@[@C4-@@[C01@@[N8K@@@/K@[S?&"0__"[@-@@[/K@[U%R';@@@UO
)@@G@@/K@[U%&'0@@[C=1@@]C8:@@@N=Z[L4:@)@@FN*Z[L4C@)[L8/\)[V'/K@[U8CO\[L,;^I@@@UP
)@@G@@+OZ[L\/@)[U8%)\[L9')])@@8KK[U21@@@@F/K@[V@C=-@@]N*Y[L4C@[@@[R';@@@/K@[U1UQ
)@@G@@/KF@@@ @@@@I[C-@@[&"0__"/K@[VAR';@@@/CK[VEE@K@@HC=1@@]T*Z[L4N8X@@@/\)[V4UR
)@@G@@/K@[VL')G)@@:C-@@[1@@@@F')])@@8KK[VH/KF@@@CO!)@@/\G@@@CW!@@@CK!@@@CS!@@@US
)@@G@@/\@[VNC)!)@@/\G@@@C4!@@@C0!@@@C?!@@@C*!@@@C=!@@@/\@[VT@@[[VV@@[[VP')])@@UT
)@@G@@')G)@@')J[V2/K@[V<[CL@@#'OJ[V-[?[@@]/KF@@@CCL@@#C?[@@]/\)[V6/K@[V0/\)[V4UU
)@@G@@N8K@J*/K@[V=%0-@@@%O-@@AC8W@@@;C@@@MC=1@@]'KJ[V-C8,@@@'KK[L8:*1@@]/K@[V"UV
)@@G@@ ?[@@F/\1K@F/KI@@@C@)@@HC@1@@F*^[@@]/\_@@^E/,@@@[G[@@[AE1@@[/C@[WD/,0[-XUW
)@@G@@9?@@@]EG1@@[N@K@@J/K@[WH')])@@8KK[WG1G[@@[/K@[WM[@@@@]Q@0@@HRE1@@[/KF@@@UX
)@@G@@C8#@@[C*1@@]C8M@@@:^Z[L6H8@@@[H^[@@@/KF@@@N8K@@@/GK[W-N?L@@@/^K[W-P^1@@@UY
)@@G@@N8N@@[/K@[M@^@-@@[C=1@@]')J[XH#@@@[]CCL@@#C8\[V-/C@[W:C8\[XJH8K@@[C?[@@]UZ
)@@G@@'KI@@@&FY@@@/K@[W2')G)@@%@)@[[/K@[W\8K)[W\N@-@@[/C@[W6G8K@@[[CL@@#/GK[W9VA
)@@G@@'OJ[V-/CK[W;'OJ[XJ[?[@@]/KF@@@/:K[X#C)!@@@C4!@@[C0!@@[C?!@@[C*!@@[C=!@@[VB
)@@G@@Q;@[X]/K@[W0/:K[XECO!@@@CW!@@[CK!@@[CS!@@[Q;@[XD/K@[W0N0L@@@NOL@@A__"[W.VC
)@@G@@__"[XAC@W@@DC@?@@E[@!)@@;K)@@S/C)[XRC0?@@E[^?@@BC@?@@C[@W@@DC G@@DG G@@BVD
)@@G@@C W@@AGDW@@^H[@@@L/D@[X=N^W@@BM#Y)@@[@W@@D/KF@@[C W@@BH[K@@KN@K@@LM#Y)@@VE
)@@G@@[ G@@B0@G@@#'=@@@AC[W@@ GDW@@B[[W@@ C5W@@#/ V@@@C[W@@A[ W@@^;[K@@M[[W@@AVF
)@@G@@[ W@@D'=@@@[C@W@@D(^G@@]/K@[XUC G@@]KDG@@BT9@@@W[DW@@BC[W@@ H W@@]GDG@@^VG
)@@G@@ ^G@@]0@G@@#'=@@@A[[W@@ [DG@@^/K@[XUC^W@@A[^W@@D ^G@@]C@?@@ CCW@@B+8)@@#VH
)@@G@@+8K@@#(@@@@J/@)[Y+C@K@@G9??@@@C^G@@A9*?@@@'=@@[GC4?@@AC@@@@H!8)@@S!8)@@)VI
)@@G@@/K@[Y+CC?@@B?8)@@^/K@[Y++/)__/C@W@@ +8K@@#[^?@@]H@0@@I[C/@@BC[W@@ HDW@@BVJ
)@@G@@[[W@@ CDW@@BT9K@@W[DW@@^/KF@@@0@G@@#'=@@@AC[W@@ GDW@@B[[W@@ C5W@@#/ V@@@VK
)@@G@@C^W@@A[^W@@^C^W@@DC@)[ZC[@!@@@H^W@@AG8K@@[;GK@@=W8K@@W/@)[Y;G8K@@[K8K@@#VL
)@@G@@+/)__/C@)@@J!C?@@BCC?@@BT8)@@W[C?@@^G@W@@ '=@@@#[@W@@ C5W@@#/ V@@@/KF@@[VM
)@@G@@_@@@@@(*[@@]/K@[ZO/\)[Z-'=@@@8/K@[WV(*[@@]/K@[ZOC8)@@H')])@@C8)@@E')])@@VN
)@@G@@/\)[Z-'=@@@I/K@[WV&';@@@/\)[Z)'=@@@J[@[@@[/,0[WVC@[@@[C@K@@F;CK@@M/KH@@@VO
)@@G@@C8@@@@;*@@@AG?[@@@;*@@@MG^[@@@/KI@@@@@@@@@/K@[Z;/K@[Z4@@@@@@@@@@@@C80[Z&VP
)@@G@@[C/@@ C80@@[[*/@@][=/@@]/K@[L;C80[Z&[C/@@ /K@[ME(S@[L8/K@[Z'B4@@@HG8K@@CVQ
)@@G@@B0H@@@[)L@@]/KI@@@[@)@@J1@@@@F/K@[)[N8K@@C%8K@@MR';@@@9?H[)G/K@[)B;=@@@DVR
)@@G@@+8K@B_/@)[)C')])@@8KK[)#C8)@[M0@@@@F')])@@C@)@@JC80@@[/KI@@@DL[D1PCDMFC@VS
)@@G@@C1 CLME([ELTD([EL#D@@^@)CDKELDD)@^@)D([FC@^@)^@)DLPD1 @@)^@)DLPD-T@@)^@)VT
)@@G@@CDPC9PETO@@)ET E[OC(HCL D9#E-JCL EK@D1JE1 D(]C(MC- CT D(]C(M/K@[)//K@[Z$VU
)@@G@@/K@[Z*@@@@@@C/,@@@/G\@@@[@1@@GC=1@@]:*1@@]/K@[)7!8)@[@0G[@@E/K@[)5C80@@]VV
)@@G@@H8)@[@IG-@@E')J[)9C@1@@G/KJ@@@CO,@@@C4,@@@C0,@@@N8)@@@[^1@@CAE1@@D @[@@BVW
)@@G@@C@0@@I;C0@@MQ'0@@@[?1@@FAC-@@CC=1@@]A21@@FQ^-@@CQ'0[-R/?+@@@/?)[-FA^-@@CVX
)@@G@@QC-@@CC80[)?*4[@@FC@1@@H/\_@@@C*1@@]8K)[-N%)\[L9AC1@@B')])@@/K@[-^QE1@@DVY
)@@G@@D@K@[]QC-@@CCC[@@B/KF@@@C8@@@@C8N@@@C*1@@]H^L@@@T*Z[L4G8M@@@H^Z[L6G@@@@HVZ
)@@G@@:@@@@H/KF@@@/C@[-*C8@@@@"K@@@GC*1@@]W*J[L4G^[@@@Q8/@@@G^Z[L6Q8!@@@/KF@@@WA
)@@G@@@@@@@@@@@@@@@@@@@@@[@@@@@@@)@[@@@@@@@@@@@@*SDFF*@ @@@[      @@C@@@@@@@@@WB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BVN@@@BVNWC
)@@G@@@@@@K@@@@@@@@@@GN2@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ASG,-------WD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ &    ************WE
)@@G@@ ****&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WF
)@@G@@@@@@@@@@@@@@@@@@@@+@@@@@@@@@@@@@@@@@      @@@^@@@@@@@@@@@@@@@@@@@@@@@@@@WG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@?@@@[@?@@@[V?@@@[X?@@@@<?@@@[Y?@@@@)?@@@[[?@@@[]WH
)@@G@@?@@@[#?@@@[^?@@@[ ?@@@[A?@@@[B?@@@[C?@@@[D?@@@[E?@@@[F?@@@[G?@@@[H?@@@[IWI
)@@G@@?@@@[J?@@@[K?@@@[L?@@@[M?@@@[N?@@@[O?@@@[P?@@@[Q?@@@[R?@@@[S?@@@[T?@@@[UWJ
)@@G@@ @@@@(!@@@@!"@@@@:#@@@@/$@@@@.%@@@@"&@@@@&'@@@@=(@@@@%)@@@@**@@@@>+@@@@'WK
)@@G@@,@@@@_-@@@@-.@@@@?/@@@[W0@@@@01@@@@12@@@@23@@@@34@@@@45@@@@56@@@@67@@@@7WL
)@@G@@8@@@@89@@@@9:@@@@$;@@@@;<@@@@\=@@@@,>@@@@+?@@@[Z@@@@@@A@@@@@B@@@@@C@@@@@WM
)@@G@@D@@@@@E@@@@@F@@@@@G@@@@@H@@@@@I@@@@@J@@@@@K@@@@@L@@@@@M@@@@@N@@@@@O@@@@@WN
)@@G@@P@@@@@Q@@@@@R@@@@@S@@@@@T@@@@@U@@@@@V@@@@@W@@@@@X@@@@@Y@@@@@Z@@@@@[@@@@@WO
)@@G@@\@@@@@]@@@@@^@@@@@_@@@@@@@@@@@A@@@@@B@@@@@C@@@@@D@@@@@E@@@@@F@@@@@G@@@@@WP
)@@G@@H@@@@@I@@@@@J@@@@@K@@@@@L@@@@@M@@@@@N@@@@@O@@@@@P@@@@@Q@@@@@R@@@@@S@@@@@WQ
)@@G@@T@@@@@U@@@@@V@@@@@W@@@@@X@@@@@Y@@@@@Z@@@@@[@@@@@\@@@@@]@@@@@^@@@@@_@@@@@WR
)@@G@@@@@@@@@@@@@@N80@@_&'K@@[&;@@@[C80@@A[=0^[/[*0^[/C80@@ [C0^[/C@0@>'[@0^[;WS
)@@G@@C@?)@@;))@@A/,T@@@;))@@A;))@@A;))@@A;))@@A;))@@A/,T@@@/K@^^F/K@^^F/K@^^[WT
)@@G@@N80@[_&'K@@[&;@@@[C80@@^[=0^[/C80@@D[*0^[/C80@@)[C0^[/C@0@>;[@0^[;C@?)@@WU
)@@G@@;))@@D/,T@@@;))@@D;))@@D;))@@D/,T@@@/K@^^+/K@^^+/K@^^RN/)__@&')@@[&;K@@[WV
)@@G@@C80@@A[=0^["[*0^["C80@@ [C0^["C@0@>'[@0^[.C[@^[./,%@@@;-@@@A;-@@@A;-@@@AWW
)@@G@@;-@@@A;-@@@A/,%@@@[[H)@@/K@^^6/K@^^?N/)_"@&')@@[&;K@@[C80@@^[=0^["C80@@DWX
)@@G@@[*0^["C80@@)[C0^["C@0@>;[@0^[.C[@^[./,%@@@;-@@@D;-@@@D;-@@@D/,%@@@[[H)@@WY
)@@G@@/K@^ G/K@^ [N80@[_&'K@@[&;@@@[C80@@A[=0^[/[*0^[/C80@@)[C0^[/C@0@>;[@0^[;WZ
)@@G@@ @@^#_*@@^#_/K@^ >C@?@@@A]0^#_/K@^ 10@@^#_/K@^ ,[@0^^@C@?)@@C@/@@@;?)@@SXA
)@@G@@]@@^#_C@0^^@/K@^ 1C@?)@@;*)@@G @@^#_/,@@>%/,T@@@/,@@>%/,@@>%/,@@>%/,T@@@XB
)@@G@@/K@^ )/K@^ Z/K@^ PN80@@_&'K@@[&;@@@[C80@@^[=0^[/C80@@D[*0^[/C80@@ [C0^[/XC
)@@G@@C@0@>'[@0^[;C@?)@@/,@@>2/,T@@@/,@@>2/,@@>2/,@@>2/,T@@@/K@^A /K@^A /K@^ 'XD
)@@G@@@@@@@@@@@@@@@@@@@@@]B^BF I/O ERROR &FROM & UNDEFINED &RETURN CODE ELEMENXE
)@@G@@T &                'NO-FIND' &I/O ERROR&  NOT PROGRAM&FILE& PROGRAM FIL&XF
)@@G@@E OVERFLOW& ILLEGAL PFP&PACKET ADDR&@] ^B7@]B^B/@]B^C#@]C^CE@]C^C-@]B^C(XG
)@@G@@@[E^C0@[F^C'       ***& @[D^DF@[F^DO@[B^D>@[E^D?@[C^D/@[D^E^@[B^EN@[C^EUXH
)@@G@@@[B^E+*** AT REC # OF & *** & AND REC # & @[B^E(@[D^E0@[B^E9@@@@@@@@@@@@XI
)@@G@@ *** UNDEFINED ERROR CODE PASSED ***      @&Q^BM@@@@@@[[@@@@@@@@@@@@@@@@XJ
)@@G@@@@@@@@ STATUS FOR PROGRAM FILE PACKAGE REQUEST ON FILE:&     INTERNAL STXK
)@@G@@ORAGE  OVERFLOW    DUPLICATE ELEMENT NAMES FOUND IN TOC      CANNOT DOWNXL
)@@G@@ A PROG FILE WITH A DATA FILE  OPTION CONFLICT - FURTHER EXECUTION USELEXM
)@@G@@SS    ON ILLEGAL DEVICE& ILLEGAL OR UNDEFINED CYCLE FOR: &   ERROR - ZERXN
)@@G@@O LENGTH ELEMENT: &      NO ELEMENT NAME AVAILABLE FOR P-OPTION OUTPUT  XO
)@@G@@ IMPROPER FILE TYPE SPECIFIED FOR OUTPUT   *** UNDEFINED ERROR CODE PASEXP
)@@G@@D - RECOVERY ATTEMPTED ***     <<WARNING>> FIRST STAR CARD FOUND NOT FIRXQ
)@@G@@ST RECORD OF PCF -              *** FILE IN ERROR IS: &             *** XR
)@@G@@RECORDS PRIOR TO STAR ARE IGNORED ***      <<WARNING>> STAR CARD 1ST RECXS
)@@G@@ORD IN ELEMENT OF P-OPT DOWNDATE -          *** FILE IN ERROR IS: &     XT
)@@G@@        *** STAR CARD IS IGNORED ***       <<WARNING>> STAR CARD FOUND IXU
)@@G@@N ELEMENT OF P-OPT DOWNDATE -         *** FILE IN ERROR IS: &           XV
)@@G@@  *** STAR CARD BECOMES EFFECTIVE EOF ***  <<WARNING>> DUPLICATE STAR CAXW
)@@G@@RD FOUND IN SAME FILE -         *** FILE IN ERROR IS: &             *** XX
)@@G@@DUPLICATE IS IGNORED ***       <<WARNING>> ERROR IN FORMATING TCF STREAMXY
)@@G@@ -            *** PROBABLE SEQUENCE ERROR ***           *** CONTINUATIONXZ
)@@G@@ IS ATTEMPTED ***  <<WARNING>> FORMAT ERROR IN PCF CORRECTION CARD -    YA
)@@G@@        *** CONTINUATION IS ATTEMPTED *** @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YB
)@@G@@@@@@@@@@@@@@@@@@@@@K@@@@@@@^FF@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SYMBOLIC    RELOCAYD
)@@G@@TABLE ABSOLUTE    OMNIBUS      NOT IN &   @]@@&@^?N^?$A[EA[Y@@[@@[@]@@@@YE
)@@G@@@K@@@@**PF**@@E^FF@@@@@@@@K@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YF
)@@G@@ ELEMENTS IN &    @@@@@@@@@@@@&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@[/0,0  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AK@@@@@A@@@@@@YK
)@@G@@     -@@@@@'@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[]@@@@@@@@@@@@@@@@@@@@@@@@@@@@YL
)@@G@@@@@@@@@@@@@@@@@@@@FUNNYFILE1  @@@@@@@@@@@@@@@@@@@@[@@@@@@@@@@@@@@@@@@@@@YM
)@@G@@@@@@@@@@@@@@@@@@@@FUNNYFILE1  @@@@@@@K@@@@@B@@@@@@@@@@@@@Z__@@K@@G@@@@@@YN
)@@G@@^!E^?"@B@@@/@@@^NV@@@@@@@@@@@@@C@^PN[O@@@@@@@@@@@@@@@@@@@@@@@@@@@@][@@@@YO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FUNNYFILE2  @@@@@@@@@@@@@@@@@@YP
)@@G@@@@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FUNNYFILE2  @@@@@@@K@@@@@B@@@@YQ
)@@G@@@@@@@@@@@Z__@@K@@G@@@@@@A][A[5@B@@@/@@@^OR@@@@@@@@@@@@@C@^XN[O@@@@@@@@@@YR
)@@G@@@@@@@@@@@@@@@@@@@@##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FUNNYFYS
)@@G@@ILE3  @@@@@@@@@@@@@@@@@@@@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@Z__@@@YT
)@@G@@^?NA[E^?$A[Y@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AK@@@YU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@C@@@@@#)@@@@@@@@@YV
)@@G@@^>N^*3@@C@@@@@[@@@@@[@@@@@@@@@@&-BR@@@@@@@[[@@@@@@@@@@@@@@@@[Z&@@@@@@@@&YW
)@@G@@@@@@@@@@@@@@@@@@@@@@@^[_@@@[)&@@@@@@@&-^M'@@@@@@[[@@@@@@@@@@@@@@@@@@@@@@YX
)@@G@@@@@DKM@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YY
)@@G@@@@@@@@@@@@@@@K@@@@@@WBST@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&EBT[YZ
)@@G@@@@@@@@[[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZB
)@@G@@@@&BTF@@;BU])@EBT[)@LBT1)@QBU.)^!BVN@@@___@@@___@@@___@@@___@@@___@@@___ZC
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___ZD
)@@G@@@@@___@@@___@@@___@@@___@@@@@@@@2BT[@@@@@@@[@@@@]@@[C+@@[@@[K@@@@@@@RBR5ZE
)@@G@@@@^@]N@@DOWN@@@@@#@@@@@]^?N^?$A[EA[Y            @@C@@@TPF$        @K@@@@ZF
)@@G@@**PF**READ  WRITE        SPEC 1: &   2: &  3: & @]BBUISPEC 1 CYCLE CARD ZG
)@@G@@COUNT SPEC 2 CYCLE@@R^LYMILLISECONDSUNABLE TO ASSIGN FILE: & BECAUSE: & ZH
)@@G@@ PERMISSION NOT AVAILABLE ON FILE: & NO ACTUAL COMPARISONS ACCOMPLISHED!ZI
)@@G@@!     SPEC 3 CYCLE  0 CARD COUNT &  TOTAL PROCESSING TIME: &@@@@@@      ZJ
)@@G@@^@)^@)@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZL
)@@G@@@@@@@@@USE  @@@@@@@@@@@@,     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$MAIN$      @@^@@^@@@@@]ZN
)@@G@@@@@#@ @@@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZP
)@@G@@CERU$       CZ=#XMCHECK       I<CDKMCOMPARE     I<%DKMDOWN        I<5DKMZQ
)@@G@@DOWNPCF     I=8DKMDOWNTCF     I>MDKMDOWNTOC     I>2DKMEDIT$       KD&EWLZR
)@@G@@EDIT$AEDIT  KF>EWLEDIT$ALF    KK\EWLEDIT$ASC    KO?EWLEDIT$INT    KR9EWLZS
)@@G@@EDIT$PRT    KV-EWLEDIT$S      KV$EWLEDIT$T      KWQEWLEDIT$UOM    K)7EWLZT
)@@G@@ERROR       I&TDKMERU$        G#:^EME$CHAR      I&;DKMGET         I$FDKMZU
)@@G@@INFOR$      JJZEULISDFI       I$UDKMMATCH       I$YDKMPAGED-IO    I$?DKMZV
)@@G@@SCAN        I$\DKMSDFO        JKVEULSFIASG      I*6DKMTBTREE      I(ODKMZW
)@@G@@UTILITY     I(-DKM@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@$IBANK      @@@@@V$DBANK      @[L@@YAXJK  @^@U@TZZ
)@@G@@      DO 110 J=1,MAXJK  @#@U@T110   LB(I,J)=0   @^@U@T      DO 300 I=1,NAA
)@@G@@EL    @#@U@T      J1=JJ(I)    @#@U@T      J2=JK(@@@@[O@@@[@^@]:@C@@@@@[LAB
)@@G@@@@@[@^@]J@E:@@@@[I@@@[@^@ ,@G'@@@@[C@@@[@^@EI@M*@@@@[ @@@[@^@[=@W6@@@@[]AC
)@@G@@@@@[@^@@!@YU@@@@@_@@@[@^@ R@ZB@@@@@9@@@[@^@[G@=Y@@@@@6@@@[@^@@M@>%@@@@@0AD
)@@G@@@@@[@^@A!@>/@@@@@M@@@[@^@B]@?(@@@@@J@@@[@^@BK@3:@@@@@G@@@[@^@^;@';@@@@@DAE
)@@G@@@@@[@^@G[@_6@@@@@A@@@[@^@[=[F7@@@@@#@@@[@^@^L[HV@@@@@P@@@[@^@[N[L?@@@@@-AF
)@@G@@@@@[@^@[<[M_@@@@@/@@@[@^@^^[O+@@@@@%@@@[@^@["[S&@@@@@V@@@[@^@[V[U=@@@@@!AG
)@@G@@@@@[@^@[M[V_@@@@[F@@@[@^@[8[XL@@@@@=@@@[@^@@X[ZD@@@@@S@@@[@^@[@[Z&@@@@@YAH
)@@G@@@@@[@^@@6[)&@@@@@$@@@[@^@@O[-W@@@@[O)@@@@ @@F^@@@@@@[O)@@]@ @@^^@F@@@@[LAI
)@@G@@)@@@@ @@G^@J@@@@[L)@@]@ @@#^@V@@@@[I)@@]@ @@%^@Y@@@@[C)@@@@ @@)^[C@@@@[CAJ
)@@G@@)@@]@ @@J^[*@@@@[])@@@@ @@[^[7@@@@[])@@]@ @@[^[8@@@@@9)@@@@ @@[^[9@@@@@9AK
)@@G@@)@@]@ @@[^['@@@@@6)@@@@ @]A^[;@@@@@6)@@]@ @]I^^[@@@@@0)@@@@ @@'^AJ@@@@@0AL
)@@G@@)@@]@ @@]^BD@@@@@0)@@^@ @#5^BF@@@@@M)@@@@ @ B^F@@@@@@M)@@]@ @@A^KB@@@@@MAM
)@@G@@)@@^@ @@#^KH@@@@@J)@@@@ @@\^KK@@@@@J)@@]@ @@C^K_@@@@@G)@@@@ @@N^LB@@@@@GAN
)@@G@@)@@]@ @@^^LU@@@@@D)@@@@ #CN^LY@@@@@D)@@]@ @@LBT1@@@@@D)@@^@ @@WBU]@@@@@AAO
)@@G@@)@@@@ @@#BUY@@@@@#)@@@@ @@KBU-@@@@@#)@@]@ @@ABU1@@@@@/)@@]@ @@WBU7@@@@@@AP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AR
)@@G@@ASFDGET     @[5@[9ASGET       @[5@@QASPUT       @[5@[@AUXBUF      @]E@@]AS
)@@G@@CARDBUF     @]E@@<CCNT        @]Q@[OCHAR        @]Q@[PCHECK       @@!@@@AT
)@@G@@CLOSESDFO   @@@@@+COMPARE     @@%@@@COMPARED    @]Q@[VCONVERT     @@@@]JAU
)@@G@@CREATETCF   @@-@@@DATA        @]Q#A0DEMAND      @]Q#AODOWNTOC     @@Y@@@AV
)@@G@@DUMP        @@#@[UECHAR$      @@0@@/ECLR$$      @@0@@OECOLN$      @[I@@@AW
)@@G@@ECOL$       @[I@@EECOPY$      @@/@@-EDAY1$      @@9@@VEDAY2$      @@9@@<AX
)@@G@@EDECF$      @@3@@=EDECV$      @@3@@<EDITR$      @@0@@YEDITX$      @@0@@+AY
)@@G@@EDIT$       @@0@@JEDTPKT      @]Q# PEDTXFN      @@$@BEEFD1$       @@/@@#AZ
)@@G@@EFD2$       @@/@@ ELT$        @]*@@IEMSG$       @@/@[FEOCTV$      @@3@@^BA
)@@G@@EPAD$       @@_@@@EPRTG$      @[ @@@EPRT$       @[ @@FERASE$      @@_@@WBB
)@@G@@ERROR       @@V@@@ESKIP$      @[I@@[ETIME$      @@9@@@EWRDN$      @@_@@PBC
)@@G@@E$ASCII$    @[F@@@E$ASC$      @[C@@@E$CHAR$     @@0@@@E$PARAMS    @[2@@@BD
)@@G@@E$PTRL$     @@/@@.E$TABLE     @[2@@^FDGET       @[5@@@FDPSR       @@@@]=BE
)@@G@@FDPUT       @[5@@:FIASG$      @@A@@-FIELDPKT1   @]Q@U5FIELDPKT2   @]Q[\?BF
)@@G@@FIFREE$     @@A@^,FINISH      @@$@F<FIPKT$      @[X@@CFIRST       @[R@@CBG
)@@G@@FREE1       @@$@F2GET         @@P@@=GETOPN      @@P@@@INFOBITS    @]Q@@@BH
)@@G@@INQUOTE     @]Q@[QINSERT      @@#@@!ISDFI       @@M@@,ISDFIOA     @@M@@@BI
)@@G@@ISDFIPKT1   @]Q@VDISDFIPKT2   @]Q[0@MASTERPKT   @]Q#^7MATCH       @@J@@@BJ
)@@G@@MONSTER     @]Q#A\NOSTARTCF   @]K@@@OPENSDFO    @@@@@@OPNSTARCARD @@@@@"BK
)@@G@@OUTFIL      @]Q#A2PCFDOWN     @@=@@@PCFERROR    @@V@]8PEEK        @]Q@[NBL
)@@G@@PFSPKT1     @]Q@U.PFSPKT2     @]Q[\4PFSPKT3     @]Q#^:PGOPN$      @@G@@@BM
)@@G@@PGRD$       @@G@@UPREGSAVE    @[R@@ RECMODE     @[)@@TRINF$       @@6@@@BN
)@@G@@ROOT        @[R@@@SCAN        @@D@@@SDFOC$      @[]@[SSDFOO$      @[]@@5BO
)@@G@@SDFOPKT     @]Q# ESDFO$       @[]@@@SELT$       @@6@@2SQUEEZ      @]Q@[TBP
)@@G@@STARCARD    @@@@[6SWAP        @@D@[)WINDOW      @]Q@[UWORDS       @@D@DGBQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@D$ATE       @@@DKMLASTD$BR
)@@G@@      @@@BVM@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BT
)@@G@@INPUT$FILE$ DOWN        DISTRIBUTIONY)@)@[C]@@@@@@@]WJ@['@['@@@@@@@@@@@@BU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BV
)@@G@@R:@S\/@@@@@[@@@@@_DXMG<\DFGP 8E$CHAR                  @@[@@@<47AORDGG@30BW
)@@G@@MAP                     @@[@@@XU6!Z7DIG]&VMATCH                   @@[@@@BX
)@@G@@KD&],+DRGC)NDOWNPCF                 @@[@@@4F8I]!]EHJ,!DOWNTOC           BY
)@@G@@      @@[@@@0KWLPE#AKIQ^DOWNTCF                 @@[@@@&\4=LX#TLDLPCHECK BZ
)@@G@@                  @@[@@@&/C,%'^]LDW)ERROR                   @@[@@@$9:+,8CA
)@@G@@^QLC!WPRINTDOC    DOC         @@[@@@%:O@Y/EULJJZINFOR$      UOM         CB
)@@G@@@@ @@@359DNWEULJKVSDFO        UOM         @@ @@@(7J$79EWLJQ8STRUC$      CC
)@@G@@UOM         @@B@@@(<0Y$DEWLKD&EDIT$       UOM         @@ @@@%EU2&LEWLKF>CD
)@@G@@EDIT$AEDIT  UOM         @@ @@@U6 I+VEWLKK\EDIT$ALF    UOM         @@ @@@CE
)@@G@@W3*!6)EWLKO?EDIT$ASC    UOM         @@ @@@MJK",6EWLKR9EDIT$INT    UOM   CF
)@@G@@      @@ @@@HA(1,;EWLKV-EDIT$PRT    UOM         @@ @@@( IDW EWLKV$EDIT$SCG
)@@G@@      UOM         @@ @@@Z[E9$&EWLKWQEDIT$T      UOM         @@ @@@>_X0KSCH
)@@G@@EWLK)7EDIT$UOM    UOM         @@ @@@S44) BGELE0%GET                     CI
)@@G@@@@[@@@,86@ME]UMC?3PAGED-IO                @@[@@@P9KF(##XMCZ=CERU$       CJ
)@@G@@UOM         @@ @@@X?%_JX^EMG#:ERU$        UOM         @@ @@@)S>3?)CZMI!)CK
)@@G@@COMPARE                 @@[@@@<LF#?AD#MEI$DOWN                    @@[@@@CL
)@@G@@#&W$/(D#MG:XISDFI                   @@[@@@?AMALGDCMHS SCAN              CM
)@@G@@      @@[@@@44< Z*DCMHT[UTILITY                 @@[@@@ A<J<DDDMG%SSFIASGCN
)@@G@@                  @@[@@@H<S6^ DIMG@4TBTREE                  @@[@@@(6[3AYCO
)@@G@@DKMI#@DOWNDOC                 @@B@@@-JU\H&DKMICEDOWNDOC     DOC         CP
)@@G@@@K[@@@;U-#Z>DKMI);OUT$$$                  @@[@@@N2DG2#DKMI+ERUN         CQ
)@@G@@            @@[@@@/(5F\&DKMI+2AXR$        UOM         @@]@@@LWU8-PDKMI+2CR
)@@G@@DOWNDEF                 @K]@@@5:3-EADKMI+5EDIT$P      UOM         @@]@@@CS
)@@G@@JSZQ+VDKMI+7ED$PROCS                @K]@@@)6L/CNDKMI+9FIDEF$            CT
)@@G@@      @@]@@@&;".N4DKMI+'M$TIME      UOM         @@]@@@Q&<K3SDKMI+;PROCS-CU
)@@G@@FIASG UOM         @@]@@@G73HC3DKMI+"PROC$       UOM         @@]@@@Z#A97,CV
)@@G@@DKMI+_SAXR$       UOM         @@]@@@H5H*A:DKMI<CCHECK                   CW
)@@G@@@@ @@@Z[$(2:DKMI<CSTRUC$      UOM         @@]@@@1T5D11DKMI<%COMPARE     CX
)@@G@@            @@ @@@+G9%);DKMI<5DOWN                    @@ @@@B;CI)MDKMI=8CY
)@@G@@DOWNPCF                 @@ @@@IHB;[ADKMI>MDOWNTCF                 @@ @@@CZ
)@@G@@Y= .,#DKMI>2DOWNTOC                 @@ @@@8I/@3NDKMI&TERROR             DA
)@@G@@      @@ @@@D09F 5DKMI&;E$CHAR                  @@ @@@Q-Y@TGDKMI$FGET   DB
)@@G@@                  @@ @@@!$-@;,DKMI$UISDFI                   @@ @@@I\QC'8DC
)@@G@@DKMI$YMATCH                   @@ @@@NEB?HHDKMI$?PAGED-IO                DD
)@@G@@@@ @@@H-4X<GDKMI$\SCAN                    @@ @@@-:7W7[DKMI*6SFIASG      DE
)@@G@@            @@ @@@\P7VL.DKMI(OTBTREE                  @@ @@@VX0E;6DKMI(-DF
)@@G@@UTILITY                 @@ @@@M9]A"]DKMI(5DOWN                    @@A@@@DG
)@@G@@05>L%O                              . UOMMOD    @I@@@@     F         7,0DH
)@@G@@17,LBJ(1,1),LBJ(1,3),2*LBJ(1,*3)+LBJ(1,*2),LBJ(1,2)   . UOMMOD    @I@@@@DI
)@@G@@          END                         . END OF LBJ PROC                 DJ
)@@G@@. UOMMOD    @I@@@@.                                                     DK
)@@G@@                  . UOMMOD    @I@@@@. MASM PROCS TO PLACATE THE SAVAGE BDL
)@@G@@EAST.                               . UOMMOD    @I@@@@.                 DM
)@@G@@                                                      . UOMMOD    @I@@@@DN
)@@G@@P         PROC      *0,0              .                                 DO
)@@G@@. UOMMOD    @I@@@@BRIEF*    NAME      0                 . DISABLE COMMONDP
)@@G@@ @ASM DIRECTIVES. . UOMMOD    @I@@@@RESUME*   NAME      0               DQ
)@@G@@  . SO @MASM WON'T GET I-FLAGS      . UOMMOD    @I@@@@          END     DR
)@@G@@                    .                                 . UOMMOD    @I@@@@DS
)@@G@@.                                                                       DT
)@@G@@. UOMMOD    @I@@@@. XFORM @ASM 'TYPE' DIRECTIVE TO @MASM 'INFO 3'       DU
)@@G@@                  . UOMMOD    @I@@@@.                                   DV
)@@G@@                                    . UOMMOD    @I@@@@TYPE*     PROC    DW
)@@G@@  *1,0              . TYPE(1,1) IS TYPE TYPE          . UOMMOD    @I@@@@DX
)@@G@@INFO(0)   EQU       010               . ACFM SENSITIVITY UNKNOWN        DY
)@@G@@. UOMMOD    @I@@@@INFO(1)   EQU       030               . SETAFCM - D20 DZ
)@@G@@IS SET            . UOMMOD    @I@@@@INFO(2)   EQU       050             EA
)@@G@@  . CLRAFCM - D20 IS CLEARED        . UOMMOD    @I@@@@INFO(3)   EQU     EB
)@@G@@  070               . INSENSITIVE                     . UOMMOD    @I@@@@EC
)@@G@@INFO(0100) EQU      0100              . 'TYPE TYPE$REP' => NO IBANK STORED
)@@G@@. UOMMOD    @I@@@@          ON        +3>2>1            . ON ONLY IF @MAEE
)@@G@@SM                . UOMMOD    @I@@@@INF       EQU       INFO(TYPE(1,1)) EF
)@@G@@  . ZERO IF NOT DEFINED             . UOMMOD    @I@@@@ DO INF>0 , INFO  EG
)@@G@@   1 INFO(TYPE(1,1)) . HOT STUFF                      . UOMMOD    @I@@@@EH
)@@G@@ DO INF=0 , $DISPLAY *'ILLEGAL TYPE SPECIFICATION' . COMPLAIN           EI
)@@G@@. UOMMOD    @I@@@@          OFF                         . END OF @MASM CEJ
)@@G@@ODE.              . UOMMOD    @I@@@@          END                       EK
)@@G@@  . END OF TYPE-INFO                . UOMMOD    @A@@@@. EXEC TEST & SET EL
@EOF
@COPY,IO  TEMP.1067-006-061,1067-006-061.
@FREE     TEMP.
