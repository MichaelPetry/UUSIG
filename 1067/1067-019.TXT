@CAT,P    1067-019-061.,///10000
@ASG,T    TEMP.,///10000
@ELT,OI TEMP.1067-019-061,,,145311053441,000
)@@G@@**PF**@@@]#8@@@@@@@@@@@[@X^@@@]FE@@@@@@@J@@Z0@@@]F^@@@@@@@@@@@@@@@@@@@@@AA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@P@@P)@@@]F^A^;@@^@@[@@@@@3@@@@W@@@@@@@@@@@@@@@@@@@AB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@_@@@@@@@@@@@"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AC
)@@G@@@@@@@@@[E@@@@@@@@@@@@@@@@@B@@@@@@@@@@@^@@@@@@@@@@@@@@@@]%@@@@@@@@@@@@@@@AD
)@@G@@@@@@@@@@(@@@@]^@@@@@@@@@@@@@@@@@N@@@@@@@@@@@@@@@@@#@[^@@@@@.@@@@@,@@;@[JAE
)@@G@@@@@@@@@@@@@@@[ @@L@@9@@@@@Q@@@@@>@@@@@@@@@@@@@@@@@@@@@@@@@@\@]M@@@@@J@@@AF
)@@G@@@@@@[Z@@A@@@@@@@@5@@@@@@@@@@@4@@@@@1@@@@@@@@@@@@@@@@@H@@@@@@@@@@@+@[W@@]AG
)@@G@@@@@@@@@@@@@@@@@@@@@@T@@@@@@@]A@@@@@@@@@@@@@@C@@@@@@@@@@@@@]D@@@@@@@])@@@AH
)@@G@@@@@@@@@@8@@@@@<@]*@@@@@@@@@@@@@@@@]E@@ @[C@@@@]G@@@@@7@@@@@@@@@@@&@[H@@@AI
)@@G@@@@'@@@@@@@@@@]X@@@@@@@@@@@@@@@@]Q@@@@]S@@U@@@@@@@[#@@6@@@@@@@@@@@O@@R@]ZAJ
)@@G@@@@@@@@@]U@@@@@@@@@@]$@@@@@@@@@@@@@@@@@[@@@@@M@@S@@@@@D@@@@@@@]I@@@@@@@@@AK
)@@G@@@@@@[X@[I@@%@@@@@@@[F@@@@@@@@K@](@@@@[G@@@@@G@@P@@@@@@@@@@@@@@@@@@@@)@@@AL
)@@G@@@@Z@@@@@I@@@@[K@@@@@F@@@@[M@@@@@@@@@@@@@@:@@@@@@@@@@@@@@@@]C@@@@@V@@@@]PAM
)@@G@@@@@@@@@]F@@@@@@@@@@@@@@@@@@@@@@@@@@@@[B@[A@@@@]V@]K@@/@@@@@@@@@@@Y@@E@]?AN
)@@G@@AVLMACS     @@@@]W@@[@@@            @ @H@ [@@@@O@@@@W@I*UB]KAVL$DISPLAY AO
)@@G@@@@@@@@@@[@[%            @ @$@ N@@@[5@@@@WOI.@B[KAVL$COMMON  @@@@@@@@[@[=AP
)@@G@@            @ @R@ N@@@@(@@@@YDHCBB]KAVL$TRAVERSE@@@@@@@@[@[9            AQ
)@@G@@@ @Q@ N@@@[V@@@@Y2HFBB#KAVL$DELETE  @@@@@@@@[@[&            @ @$@ N@@@[BAR
)@@G@@@@@@)HGVYBEKAVL$INSERT  @@@@@@@@[@[:            @ @K@ N@@@[T@@@@-OGWJBEKAS
)@@G@@AVL$DELKEYS @@@@@E@@[@[$            @ @E@ N@@@@B@@@@+!OV6#EJAVL$DELRANKSAT
)@@G@@@@@@@@@@[@[(            @ @D@ N@@@@B@@@@+4OWE#EJAVL$INSKEYS @@@@@@@@[@[?AU
)@@G@@            @ @Z@ N@@@[I@@@@+;OZZ#EJAVL$INSRANKS@@@@@@@@[@[!            AV
)@@G@@@ @Q@ N@@@@X@@@@=DHLFB#KCULL        @@@@[L@@[@@@            @ @@@[[@@@@[AW
)@@G@@@@@@=&N@FC GAVL$KTEST   @@@@@@@@[@[,            @ @ @ N@@@@H@@@@=$KEVAVKAX
)@@G@@AVL$KTEST1  @@@@@@@@[@[0            @ @#@^N@@@@A@@@@=4KHWAVKAVL$KTEST2  AY
)@@G@@@@@@@W@@[@[1            @ @#@^N@@@@A@@@@='KHXAVKAVL$KTEST3  @@@@]?@@[@[2AZ
)@@G@@            @ @#@^N@@@@C@@@@>@KHYAVKAVL$KTEST4  @@@@@@@@[@[3            BA
)@@G@@@ @^@ N@@@@D@@@@>CKHZAVKAVL$KTEST5  @@@@[Y@@[@[4            @ @#@^N@@@@FBB
)@@G@@@@@@>LKHZAVKAVL$KTEST6  @@@@[N@@[@[5            @ @^@ N@@@@F@@@@>WKH)AVKBC
)@@G@@AVL$KTEST7  @@@@@@@@[@[6            @ @#@^N@@@@H@@@@>$KH-AVKAVL$KTEST8  BD
)@@G@@@@@@@-@@[@[7            @ @#@^N@@@@H@@@@>4KH+AVKAVL$BALANCE @@@@@@@@[@[<BE
)@@G@@            @ @P@ N@@@[R@@@@&[F9[BFKAVLTEST     @@@@@@@@[@@X            BF
)@@G@@@ @R@ N@@@#B@@@@$SH0BBFKAVL$STATS   @@@@@@@@[@[8            @ @F@ N@@@@*BG
)@@G@@@@@@%ZJ1:BIKAVL$DEF     @@@@@@@@[@[U            @ @Z@ O@@@^ @@@@:BI@.BMKBH
)@@G@@AVL$DELNODES@@@@@@@@[@[*            @ @@@[N@@@@A@@@@\GIN7BMKAVL$COMPRANKBI
)@@G@@@@@@@@@@[@[>            @ @[@]N@@@@I@@@@\MHCUBPKAVL$KTEST0  @@@@]R@@[@[\BJ
)@@G@@            @ @C@ N@@@@L@@@@\)I,*EPKDOC         @@*@@@@K[@@@AVL$        BK
)@@G@@@ @[@]B@@@]$@@@@\1I3HEPKAVLTEST     @@@@@@@@A@[+            )@@]@@@@@@[-BL
)@@G@@@@@@2SI4JEPKAVL         @@@@@@@@[@@@FLIST       @ @@@[[@@@@]@@@@39G&PBILBM
)@@G@@UPDATE-RLIB @@$@@@@@[@@@AVL$        @ @]@#[@@@@#@@@@3;H-4BILAVL$TREE    BN
)@@G@@@@@@[D@@[@['TEST        @ @B@ N@@@@D@@@@3"H+?BILPIONP$      @@@@@@@@[@[;BO
)@@G@@            @ @]@#N@@@@E@@@@4BF&3 MLPIO$        @@!@] @@[@["FLIST       BP
)@@G@@@ @@@[[@@@@]@@@@4LLO+ALLPIOPAI$     @@@@@@@[A@@=            +@@]@@@@@@@DBQ
)@@G@@@@@@4NF!)[NMPIOPAI$     @@@@@@@@[@[/            @ @D@ N@@@@W@@@@4WO$X[NMBR
)@@G@@TEST        @@@@@@@@[@@@            @ @@@[[@@@@A@@@@48LL"ALLPIO$PROCS   BS
)@@G@@@[@@[]@@[@@@MSD         @ @@@[J@@@@[@@@@4"F 6[PMUPDATE-RLIB @@0@@@@@[@@@BT
)@@G@@PIO$        @ @ @ [@@@@^@@@@4_F0A[WMDOC         @@2@@@@K[@@@PIO$        BU
)@@G@@@ @E@ B@@@AS@@@@5#GR1]#NPIO$STATS   @@@@@@@@[@[_            @ @)@ N@@@[#BV
)@@G@@@@@@;VHG_]#NPIOTEST     @@@@@@@@[@@?            @ @'@ N@@@[V@@@@/YHO:]#NBW
)@@G@@PIO$TRACE   @@@@@@@@[@]@            @ @S@ N@@@[>@@@@.9HZ+]#NPIOTEST     BX
)@@G@@@@@@@@@@A@[.            )@@]@@@@@@[9@@@@_Y@X(#VNPIO$        @@@@@@@@[@@@BY
)@@G@@            @ @?@ N@@@^@@@@[[RISU]HPPSDFPROCS   @[[@@@@@[@@@MSD         BZ
)@@G@@@ @[@]J@@@@[@@@[ RG5W[PMPSDFIO      @@@@@@@@[@@@FLIST       @ @]@#[@@@@]CA
)@@G@@@@@[ SG3W[QMUPDATE-RLIB @@@@@@@@[@@@PSDFIO      @ @]@#[@@@@#@@@[ UF\$[WMCB
)@@G@@PSDFTEST    @@@@@@@K[@@3            @ @E@ N@@@@8@@@[ XI!3 VMDOC         CC
)@@G@@@@@@@@@K[@@@PSDFIO      @ @J@ B@@@^7@@@[APCYAA^MPSDFTEST    @@@@@@@@A@]#CD
)@@G@@            )@@]@@@@@@@,@@@[FGJI]]#NPSDFRB      @@@@@@@K[@]]            CE
)@@G@@@ @ @ N@@@@0@@@[F'EH[AXOPSDFR       @@@@@@@K[@][            @ @S@ N@@@[!CF
)@@G@@@@@[G%HS0ATPPSDFW       @@@@@@@K[@]:            @ @Q@ N@@@[N@@@[IRHT,ATPCG
)@@G@@AA          @@@@@@@K[@@@            @ @@@[[@@@@^@@@[J%H-)BDPBASE$       CH
)@@G@@@@@@@@@@[@[S            @ @]@#O@@@]M@@@[J,LCX[VLAXR$        @@@@@@@@[@[OCI
)@@G@@            @ @#@^O@@@@Q@@@[M@I<0#SLELT$PKT     @@@@]O@@[@[)            CJ
)@@G@@@ @M@ O@@@]>@@@[MQK"%#DNFUNCS       @@@@@@@@[@]&            @ @B@ O@@@^HCK
)@@G@@@@@[O;O$*CULDUMP        @@@@]<@@[@[Q            @ @@@[O@@@@&@@@[TC#R$#IJCL
)@@G@@PIO$DEF     @@@@@@@@[@[-            @ @<@ O@@@[S@@@[T,I-%BDPSYMBOLS     CM
)@@G@@@@@@@@@@[@]>            @ @B@ O@@@@\@@@[VAI6@ NKASMPADD     @@@@@@@K[@@@CN
)@@G@@            @ @@@[[@@@@^@@@[V5FUGBGPPIO$PROCS   @@@@@@@@]@@@            CO
)@@G@@@ @@@[[@@@[#@@@[V9FU1BGPPSDFPROCS   @@@@@@@K]@@@            @ @@@[[@@@[=CP
)@@G@@@@@[W/FU2BGPEQU$        @@@@]B@@]@[P            @ @@@[[@@@@P@@@[Y)FU2BGPCQ
)@@G@@JPROCS      @@@@]T@@]@[T            @ @@@[[@@@[;@@@[Y5FU3BGPPROCS       CR
)@@G@@@@@@]H@@]@[R            @ @@@[[@@@[\@@@[)0FU3BGPLCPROCS     @@@@@@@@]@@@CS
)@@G@@            @ @@@[[@@@@R@@@[+ZFU4BGPSAVERPROCS  @@@@@@@@]@@@            CT
)@@G@@@ @@@[[@@@@=@@@[+6FU4BGPTSQPROCS    @@@@@@@@]@@@            @ @@@[[@@@@:CU
)@@G@@@@@[<UFU4BGPSTACK$      @@@@]J@@]@@@            @ @@@[[@@@#$@@@[= FU5BGPCV
)@@G@@FDIT$P      @@@@@@@@]@@@UOM         @ @@@[@@@@[)@@@[$?LY+FGJAVL$PROCS   CW
)@@G@@@@@@@@@@]@[V            @ @@@[[@@@]#@@@[(GF,^BGPFDIT$H      @@@@@@@C @@@CX
)@@G@@            @@@[:K@@[@@[@@@[:J@RZDIJFDIT$INTF   @@@@@@@C @@@            CY
)@@G@@@@@[:M@@]@@[@@@[:L@R+DIJFDIT$PRT    @@@@]N@C @@@            @@@[:P@@[@@[CZ
)@@G@@@@@[:O@R<DIJFDIT$F      @@@@@@@C @@@            @@@[:R@@]@@[@@@[:QJ\$EKJDA
)@@G@@FDIT$INT    @@@@@@@C @@@            @@@[:U@@]@@[@@@[:TJ\?EKJFDIT$S      DB
)@@G@@@@@@@@@C @@@            @@@[:X@@[@@[@@@[:WJ\7EKJFDIT$T      @@@@@@@C @@@DC
)@@G@@            @@@[:Z@@]@@[@@@[:YJ_WESJFDIT$UOM    @@@@@@@C @@@            DD
)@@G@@@@@[:+@@]@@[@@@[:-^L%G^JFDIT$       @@@@@@@C @@@            @@@[:%@@^@@ADE
)@@G@@@@@[:=]J][MKAXR$        @@@@@@@@B@@@            @@@@@@O@@@@H@@@[:,I3PBGPDF
)@@G@@EQU$        @@@@@@@@B@@@            @@@@@@O@@@@^@@@[:;I3)BGPDUMP        DG
)@@G@@@@@@@@@@B@@@            @@@@@@O@@@@D@@@[:_I3-BGPPROCS       @@@@@@@@B@@@DH
)@@G@@            @@@@@@O@@@@,@@@[?CI3&BGPBASE$       @@@@@@@@B@@@            DI
)@@G@@@@@@@@O@@@@$@@@[?6I3$BGPJPROCS      @@@@@@@@B@@@            @@@@@@O@@@@,DJ
)@@G@@@@@[!XI3$BGPAVL$DEF     @@@@@@@@B@@@            @@@@@@O@@@@X@@@[,FI3*BGPDK
)@@G@@AVL$PROCS   @@@@@@@@B@@@            @@@@@@O@@@@4@@@[,*I3\BGPLIB$P       DL
)@@G@@@@@@@@@@]@@@            @ @@@[[@@@@#@@@[\WI30BGPDUMP$P      @@@@@@@@]@@@DM
)@@G@@            @ @@@[[@@@@]@@@[\ZI30BGPFUNC$P      @@@@]L@@]@@@            DN
)@@G@@@ @@@[[@@@@]@@@[\-I30BGPSYMBOLS$P   @@@@@@@@]@@@            @ @@@[[@@@@]DO
)@@G@@@@@[\<I31BGPELT$PKT     @@@@@@@@B@@@            @@@@@@O@@@@_@@@[\>I31BGPDP
)@@G@@PIO$DEF     @@@@@@@@B@@@            @@@@@@O@@@@K@@@[0=I32BGPAVLTEST     DQ
)@@G@@@@@@@@@@ @@@            @@@[1Q@@#@@+@@@[04I3;BGPAVL$BALANCE @@@@@@@@ @@@DR
)@@G@@            @@@[1Z@@]@@A@@@[1TI4BBGPAVL$COMMON  @@@@@@@@ @@@            DS
)@@G@@@@@[1<@@#@@]@@@[1-I4DBGPAVL$COMPRANK@@@@@@@@ @@@            @@@[1*@@[@@]DT
)@@G@@@@@[1&I4NBGPAVL$DELETE  @@@@@@@@ @@@            @@@[1\@@[@@A@@@[1(I4PBGPDU
)@@G@@AVL$DELKEYS @@@@@@@@ @@@            @@@[11@@[@@[@@@[10I4RBGPAVL$DELNODESDV
)@@G@@@@@@@@@@ @@@            @@@[13@@[@@[@@@[12I4SBGPAVL$DELRANKS@@@@@@@@ @@@DW
)@@G@@            @@@[15@@[@@[@@@[14I4TBGPAVL$DISPLAY @@@@@@@@ @@@            DX
)@@G@@@@@[2@@@]@@E@@@[16I4VBGPAVL$INSERT  @@@@@@@@ @@@            @@@[2B@@[@@ DY
)@@G@@@@@[2]I4+BGPAVL$INSKEYS @@@@@@@@ @@@            @@@[2D@@[@@[@@@[2CI4<BGPDZ
)@@G@@AVL$INSRANKS@@@@@@@@ @@@            @@@[2F@@[@@[@@@[2EI4>BGPAVL$KTEST   EA
)@@G@@@@@@@@@@ @@@            @@@[2H@@[@@[@@@[2GI4&BGPAVL$KTEST0  @@@@@@@@ @@@EB
)@@G@@            @@@[2K@@[@@]@@@[2II4$BGPAVL$KTEST1  @@@@@@@@ @@@            EC
)@@G@@@@@[2M@@[@@[@@@[2LI4*BGPAVL$KTEST2  @@@@@@@@ @@@            @@@[2O@@[@@[ED
)@@G@@@@@[2NI4(BGPAVL$KTEST3  @@@@@@@@ @@@            @@@[2Q@@[@@[@@@[2PI4:BGPEE
)@@G@@AVL$KTEST4  @@@@@@@@ @@@            @@@[2S@@[@@[@@@[2RI4!BGPAVL$KTEST5  EF
)@@G@@@@@@@@@@ @@@            @@@[2U@@[@@[@@@[2TI4,BGPAVL$KTEST6  @@@@@@@@ @@@EG
)@@G@@            @@@[2W@@[@@[@@@[2VI4\BGPAVL$KTEST7  @@@@@@@@ @@@            EH
)@@G@@@@@[2Y@@[@@[@@@[2XI40BGPAVL$KTEST8  @@@@@@@@ @@@            @@@[2)@@[@@[EI
)@@G@@@@@[2ZI42BGPAVL$STATS   @@@@@@@@ @@@            @@@[2!@@#@@G@@@[2-I43BGPEJ
)@@G@@AVL$TRAVERSE@@@@@@@@ @@@            @@@[24@@[@@^@@@[20I4/BGPAVL$TREE    EK
)@@G@@@@@@@@@@ @@@TEST        @@@[2"@@[@@D@@@[25I4"BGPPIONP$      @@@@@@@@ @@@EL
)@@G@@            @@@[3@@@[@@[@@@[2_I5PBGPPIOPAI$     @@@@@@@@ @@@            EM
)@@G@@@@@[3^@@[@@#@@@[3[I5QBGPPIOTEST     @@@@@@@@ @@@            @@@[3N@@#@@IEN
)@@G@@@@@[3 I5UBGPPIO$        @@@@@@@@ @@@            @@@[3*@@#@@M@@@[3QI5YBGPEO
)@@G@@PIO$STATS   @@@@@@@@ @@@            @@@[30@@]@@ @@@[3:I5)BGPPIO$TRACE   EP
)@@G@@@@@@@@@@ @@@            @@@[4C@@#@@Q@@@[32I5+BGPPSDFR       @@@@@@@@ @@@EQ
)@@G@@            @@@[4M@@]@@B@@@[4FI50BGPPSDFRB      @@@@@@@@ @@@            ER
)@@G@@@@@[4Q@@[@@]@@@[4OI52BGPPSDFTEST    @@@@@@@@ @@@            @@@[4(@@]@@MES
)@@G@@@@@[4RI54BGPSSTYPE$     @@@@@@@C @]+UOM         @@@[4\@@[@@^@@@[4:K;&COJET
)@@G@@EDIT$       @@@@@@@C @@@            @@@[44@@]@@^@@@[40@MCDIJEDIT$F      EU
)@@G@@@@@@@@@C @@@            @@@[5[@@]@@F@@@[46@N-DIJEDIT$HEX    @@@@@@@C @@@EV
)@@G@@            @@@[5 @@[@@]@@@[5#@N>DIJEDIT$INT    @@@@@@@C @@@            EW
)@@G@@@@@[5G@@]@@A@@@[5A@N'DIJEDIT$INTF   @@@@@@@C @@@            @@@[5N@@]@@ EX
)@@G@@@@@[5I@OWDIJEDIT$S      @@@@@@@C @@@            @@@[5Q@@[@@[@@@[5P@O3DIJEY
)@@G@@EDIT$TBL    @@@@@@@C @@@            @@@[5X@@[@@A@@@[5R@P(DIJEDIT$UOM    EZ
)@@G@@@@@@@@@C @@@            @@@[5<@@]@@ @@@[5Y@P3DIJEDIT$XALF   @@@@@@@C @@@FA
)@@G@@            @@@[5?@@[@@B@@@[5>@Q+DIJEDIT$ASC    @@@@@@@C @@@            FB
)@@G@@@@@[50@@[@@#@@@[5!J"SESJEDIT$T      @@@@@@@C @@@            @@@[5'@@]@@DFC
)@@G@@@@@[51]=:G^JFDIT$ALF    @@@@@@@C @@@            @@@[5"@@#@@]@@@[5/F2-EDKFD
)@@G@@EDIT$PRT    @@@@@@@C @@@            @@@[6#@@]@@]@@@[6[KE$EDKEDIT$AEDIT  FE
)@@G@@@@@@@@@C @@@            @@@[6E@@[@@ @@@[6 K5OEIKTIDE$       @@@@@@@@ @@@FF
)@@G@@            @@@[6L@@]@@A@@@[6FN$EFTKTIDE$A      @@@@@@@@ @@@            FG
)@@G@@@@@[6Q@@]@@#@@@[6NN$PFTKTIDE$ASC    @@@@@@@@ @@@            @@@[6X@@]@@ FH
)@@G@@@@@[6SN$VFTKTIDE$F      @@@@]Y@@ @@@            @@@[6+@@]@@#@@@[6ZN$%FTKFI
)@@G@@TIDE$FD     @@@@@@@@ @@@            @@@[6(@@]@@ @@@[6=N$\FTKTIDE$G      FJ
)@@G@@@@@@@@@@ @@@            @@@[60@@]@@ @@@[6:N*@FTKTIDE$I      @@@@@@@@ @@@FK
)@@G@@            @@@[67@@]@@ @@@[62N*BFTKTIDE$N      @@@@@@@@ @@@            FL
)@@G@@@@@[7C@@]@@J@@@[69N*KFTKTIDE$OD     @@@@@@@@ @@@            @@@[7I@@#@@^FM
)@@G@@@@@[7EN*VFTKTIDE$S      @@@@@@@@ @@@            @@@[7N@@[@@]@@@[7LN*>FTKFN
)@@G@@TIDE$C      @@@@@@@@ @@@            @@@[7Q@@]@@]@@@[7OG5CG[KFIASG$      FO
)@@G@@@@@@]=@@ @@@UOM         @@@[7*@@]@@K@@@[7SJX,EWLEDIT$ALF    @@@@@@@@ @@@FP
)@@G@@            @@@[71@@]@@B@@@[7%DIE]KMELT$INFOR   @@@@@@@@ @]-            FQ
)@@G@@@@@[75@@[@@]@@@[73F3][WMELT$INFOR   @@@@@@@@[@@@            @ @]@#N@@@@VFR
)@@G@@@@@[76KIXEXLSSTYPE$     @@@@@@@@[@@@UOM         @ @@@[N@@@@1@@@[8LK;-COJFS
)@@G@@MAKE        @@@@@@@K[@@@            @ @G@ [@@@@J@@@[9]JP7BGPBASE$P      FT
)@@G@@@@@@@@@@]@@@            @ @@@[@@@@@#@@@[9LGMW[WMSYMBOLS     @@@@@@@@B@@@FU
)@@G@@            @@@@@@O@@@@Y@@@[9OGOZBKPFUNCS       @@@@@@@@B@@@            FV
)@@G@@@@@@@@O@@@[O@@@[92GP BKPTIDE$P      @@@@@@@@]@@@UOM         @ @@@[@@@@#FFW
)@@G@@@@@[;AG5BG[KEDIT$P      @@@@@@@@]@@@UOM         @ @@@[@@@@^L@@@["LDS1]KMFX
)@@G@@ELTPKT$P    @@@@@@@@]@@@            @ @@@[@@@@@]@@@]]+F9)[WMIOPKT$      FY
)@@G@@@@@@@@@@]@@@            @ @@@[@@@@@)@@@]]=GM=[WMPSDFW       @@@@@@@@ @@@FZ
)@@G@@            @@@]#E@@]@@A@@@]#^G@=EDPCHECK$$SUM$$@@@@@@@@B@@@            GA
)@@G@@@ @@@[@@@@@?@@@]#GF( CRSC@0@@ME[\@@@D[)@@M[[,@@@C@)DI>G@)DJ=C[)DING[)DJ=GB
)@@G@@C@0@@MC[\@@@[[,@@@R]3@@ A]0DK:R]3@@CA]0DK?T9@@@]G[@DJ&C@)@@K[@)DK,C@@DK1GC
)@@G@@&"0@@@/,0 G%C@@DK4&"0@@@/,0#"_/)@^T7C@)DJ=C9@@@F[[I@@[/K@^UDC@)DI]T8)@@]GD
)@@G@@G@)DJ&C[@DI9T9@@@]G[@DJ&C@0@@K9!I@@@">J@@@/D@^T7C@)DIMT8)@@]G@)DJ&9!@DIHGE
)@@G@@9(I@@@C@)DI!G@)DJ=C[I@@@[[@DIA/K@^R5C@)DI?G@)DJ=C[@DJQG[@DJ=C[)DJ[G[)DJ=GF
)@@G@@C@0@@KC@@@@MC[J@@@G[G@@@C[,@@@/ @^U^/[)^UA?[)@@K/K@^UTC@)DJ=C9@@@D[[I@@[GG
)@@G@@C@)DI]T8)@@]G@)DJ&C[@DI9T9@@@]G[@DJ&C@0@@K9!I@@@">J@@@/D@^?0C@)DJUG@)DJ=GH
)@@G@@C@0DJ=C[J@@[[[I@@@/K@^=?C@)DJ@G@)DJ=C[I@@@[[@DJZC@)DIFG@)DJ=C[,@@@[[)DJAGI
)@@G@@C@)DI#G@)DJ=C]I@@@[]@DI;9,)DIH9%)DJ^C@)DING@)DJ=C#I@@@:;@@@]/K@^V?9!@DIKGJ
)@@G@@9(@DJ^C@)DIWG@)DJ=C[,@@@[[)DI$/H)^V?/[)^V?C@)DIXG@)DJ=C[I@@@[[@DI*/H@^V?GK
)@@G@@/[@^V?C@)DJWG@)DJ=C[I@@@[[@DI'R]3@@@A]0DK5R]3@@[A]0DK6R]3@@ A]0DK'R]3@@BGL
)@@G@@A]0DK"C@)DH"G@)DJ=[@)DK7G[@DJ=C@)@@K[@)DK8C@)DIGG@)DJ=[@)DK9C@)DI*T8)@@]GM
)@@G@@G@)DJ&[@)DK;C@)DI$T8)@@]G@)DJ&[@)DK/C@)DJZT8)@@]G@)DJ&[@)DK.C@)DJAT8)@@]GN
)@@G@@G@)DJ&[@)DK_C@@DL]&"0@@@/,0[5"C@)DI#G@)DJ=E[@DI;D[@@@K[[I@@@C@)DJ]G@)DJ=GO
)@@G@@C.@__"[[I@@@/K@^X.C[@DI;/[@^V\/D@^XHD[@DI;[[@DI;C@)DI#G@)DJ=[[I@@@C@)DJLGP
)@@G@@G@)DJ= @I@@@C@)DI.G@)DJ=C[,@@@[[)DI /[)^V./D)^WKC[@DI;[[@DI C@)DIWG@)DJ=GQ
)@@G@@C[,@@@[[)DI$R]3@@ A]0DL#T9@@@]G[@DJ&C@)@@K[@)DL^T9)@@]G[)DJ&C@)@@M[@)DL GR
)@@G@@C@@DLB&"0@@@/,0]J[C@)DICG@)DJ=C[I@@@[[@DJ#R8K@@[A@KDI^N[#K@ /K@^X^C@)DI^GS
)@@G@@T8)@@]G@)DJ)9!@DIH"!I@@@9(@DIDR8)@@[A@)DIAN[KDI^/K@^X[C@)DI;T8)@@]G@)DJ&GT
)@@G@@C[@DI T9@@@]G[@DJ&C[)DJ#T9)@@]G[)DJ&C@0@@M9!\@@@"()DJ^C@0@@K"-\@@@"()DIDGU
)@@G@@C@@DIAT8@@@]G@@DJ)"!?@@@9(,@@@C[@DI G9@@@[[[@DI C[)DI;G9)@@[[[)DI;C]@DJ#GV
)@@G@@G'@@@[[]@DJ#O8)@@[A@)DIA8LK^W+O8K@@[A@KDI^8L@^WSC@)DI#G@)DJ=C[I@@@[[@DI;GW
)@@G@@C@)DJ]G@)DJ=C.)__"[[,@@@C@)DJFG@)DJ=C[I@@@[[@DI<C@)DI4G@)DJ=C[,@@@[[)DI&GX
)@@G@@R]3@@@A]0DLCR]3@@ A]0DLHR]3@@BA]0DLJT9@@@]G[@DJ&C@)@@K[@)DLDC@)DI;T8)@@]GY
)@@G@@G@)DJ&[@)DLEC@)DJ]G@)DJ=[@)DLFT9)@@]G[)DJ&C@)@@M[@)DLGC@)DJZT8)@@]G@)DJ&GZ
)@@G@@[@)DLIC@)DJAT8)@@]G@)DJ&[@)DLKC@@DLN&"0@@@/,0]0VC@)DIGG@)DJ=C[I@@@/H@^X.HA
)@@G@@/[@^X.C@)DIGG@)DJ= @I@@@C@)DH'G@)DJ=C[I@@@:9@@@A/K@^Y$C@)DJBG@)DJ=C[I@@@HB
)@@G@@[[@DIJC@)DJ@G@)DJ=C[,@@@[[)DJZR]3@@ A]0DLOR]3@@CA]0DLPT9)@@]G[)DJ&C@)@@MHC
)@@G@@[@)DLRT9@@@]G[@DJ&C@)@@K[@)DLSC@@DLU&"0@@@/,0^4PC@)DI?G@)DJ=C[@DI?G[@DJ=HD
)@@G@@C@0@@KC[J@@@G9@@@[[[I@@@C@)DJ=C9@@@[[[I@@[G@)DI, @I@@@/K@^?0C@)DJ@G@)DJ=HE
)@@G@@C[I@@@[[@DJZC@)DIQG@)DJ=C[,@@@[[)DI-C@)DJBG@)DJ=C]I@@@[]@DIJR]3@@@A]0DLVHF
)@@G@@R]3@@]A]0DLWR]3@@ A]0DLXR]3@@BA]0DL)R]3@@CA]0DL-T9@@@]G[@DJ&C@)@@K[@)DLYHG
)@@G@@T9)@@]G[)DJ&C@)@@M[@)DLZT'@@@]G]@DJ&C@)@@O[@)DL+C@@DL>&"0@@@/,0]YDC@)DIUHH
)@@G@@G@)DJ=C[I@@@/[@^Z!C@)DI#G@)DJ=C[@DI#G[@DJ=C@0@@KE[J@@@D[@@@K[[I@@@C@)DI>HI
)@@G@@G@)DJ=C[@DI>G[@DJ=C@0@@KC[J@@@G9@@@][[I@@@C@)DIRG@)DJ=C[I@@@[[@DIBR]3@@BHJ
)@@G@@A]0DL(T9@@@]G[@DJ&C@)@@K[@)DL$C@@DL?&"0@@@/,0 G%C@)DH'G@)DJ=C[I@@@H9@@@^HK
)@@G@@[[@DIBC@)DING@)DJ=C[,@@@[[)DI2/H@^)A/[@^)AC@)DIB?8)@@F/C,^Z;/K@^)A/K@^-"HL
)@@G@@/K@^+H/K@^+R/K@^+R/K@^+R/K@^+R/K@^+R/K@^+R/K@^%]/K@^>BC@)DJVT8)@@]G@)DJ&HM
)@@G@@C[@DI7T9@@@]G[@DJ&C@0@@K9!I@@@">J@@@9(@DI@C@)DICG@)DJ=C[,@@@[[)DJ#R]3@@ HN
)@@G@@A]0DL!R]3@@DA]0DL,T9)@@]G[)DJ&C@)@@M[@)DL\C@)DJZT8)@@]G@)DJ&[@)DL0C@@DL2HO
)@@G@@&"0@@@/,0[4#R]3@@ A]0DL3R]3@@DA]0DL6C@)DJZT8)@@]G@)DJ&[@)DL4C@@DL9&"0@@@HP
)@@G@@/,0 K_"*@DJD9*@DISC@)DING@)DJ=C[I@@@%9@@@[/K@^)991@DIS/ @^)8;H@@[C9(@DISHQ
)@@G@@9!@DI@"-@DIS95@@@KC@)DIPT8)@@]G@)DJ&"(I@@@95)DI@">@@@M/D@^-?C@)DING@)DJ=HR
)@@G@@C[@DING[@DJ=C@0@@KC9@@@#H[J@@@[[I@@@C.@__.?[@DIB/K@^+,C@)DI#G@)DJ=C[@DI#HS
)@@G@@G[@DJ=C@0@@KE[J@@@D[@@@K[[I@@@C@)DI>G@)DJ=C[@DI>G[@DJ=C@0@@KC[J@@@G9@@@]HT
)@@G@@[[I@@@C@)DIRG@)DJ=C[I@@@[[@DIBR]3@@BA]0DL;T9@@@]G[@DJ&C@)@@K[@)DL.C@@DM@HU
)@@G@@&"0@@@/,0 G%/K@^TVC.@__/?[@DIB/K@^+,C@)DI(T8)@@]G@)DJ&C[@DIMT9@@@]G[@DJ&HV
)@@G@@C[)DI5T9)@@]G[)DJ&C@0@@KC@@@@M9!J@@@"(G@@@9(I@@@/K@^TVC@)DI(T8)@@]G@)DJ&HW
)@@G@@C[@DIMT9@@@]G[@DJ&C[)DI5T9)@@]G[)DJ&C@0@@KC@@@@M9!J@@@"(G@@@9(I@@@/K@^TVHX
)@@G@@C@)DI(T8)@@]G@)DJ&C[@DI6T9@@@]G[@DJ&C@0@@K9!J@@@9(I@@@/K@^UTC@)DJUG@)DJ=HY
)@@G@@C[@DIB[[I@@@C@)DI]T8)@@]G@)DJ&C[@DI9T9@@@]G[@DJ&C@0@@K9!I@@@">J@@@/D@^%AHZ
)@@G@@C@)DH/G@)DJ=C[I@@@:9@@@I/K@^%AC@)DH/G@)DJ=C9@@@I[[I@@@C@)DI"G@)DJ= @I@@@IA
)@@G@@C@)DH_G@)DJ= @I@@@C@)DH'G@)DJ=C[I@@@%9@@@#/K@^=?C@)DJ@G@)DJ=C[I@@@[[@DJZIB
)@@G@@C@)DIQG@)DJ=C[,@@@[[)DJHC@)DJBG@)DJ=C]I@@@[]@DJIC@)DI.G@)DJ=C],@@@[])DJNIC
)@@G@@/I)^<X/])^<XR]3@@ A]0DM[C@)DJHT8)@@]G@)DJ&[@)DM]C@)DJNT8)@@]G@)DJ&[@)DM#ID
)@@G@@C@)DJZT8)@@]G@)DJ&[@)DM^C@@DMA&"0@@@/,0[4#/K@^=#C@)DIWG@)DJ=C[I@@@[[@DI$IE
)@@G@@R]3@@ A]0DMBC@)DJHT8)@@]G@)DJ&[@)DMCT9@@@]G[@DJ&C@)@@K[@)DMDC@)DJZT8)@@]IF
)@@G@@G@)DJ&[@)DMEC@@DMG&"0@@@/,0#=KR]3@@ A]0DMHC@)DJHT8)@@]G@)DJ&[@)DMIC@)DI$IG
)@@G@@T8)@@]G@)DJ&[@)DMJC@)DJHT8)@@]G@)DJ&[@)DMKC@@DMM&"0@@@/,0]D'C[@DI2:9@@@[IH
)@@G@@/K@^=?C@)DICG@)DJ=C[I@@@[[@DJ#R]3@@ A]0DMNC@)DJIT8)@@]G@)DJ&[@)DMOT9@@@]II
)@@G@@G[@DJ&C@)@@K[@)DMPC@)DJZT8)@@]G@)DJ&[@)DMQC@@DMS&"0@@@/,0[4#R]3@@ A]0DMTIJ
)@@G@@C@)DJHT8)@@]G@)DJ&[@)DMUC@)DJIT8)@@]G@)DJ&[@)DMWC@)DJHT8)@@]G@)DJ&[@)DMXIK
)@@G@@C@@DMZ&"0@@@/,0^4PC@)DH9G@)DJ=C[@DH9G[@DJ=C@0@@KC[J@@@G9@@@[[[I@@@C@)DIFIL
)@@G@@G@)DJ=C[I@@@[[@DI_R]3@@ A]0DM)R]3@@[A]0DM-T9@@@]G[@DJ&C@)@@K[@)DM<C@@DM&IM
)@@G@@&"0@@@/,0 G%C@)DJ=C9@@@][[I@@[/K@^?0C@)DIFG@)DJ=C[I@@@[[@DI_R]3@@ A]0DM$IN
)@@G@@R]3@@[A]0DM:T9@@@]G[@DJ&C@)@@K[@)DM*C@)DI_T8)@@]G@)DJ&[@)DM%C@@DM!&"0@@@IO
)@@G@@/,0^4PC@)DJ@G@)DJ=C[I@@@[[@DJZC@)DIQG@)DJ=C[,@@@[[)DJHC@)DJBG@)DJ=C]I@@@IP
)@@G@@[]@DJIC@)DH'G@)DJ=C],@@@%')@@#/K@^$[C[@DJH[[@DIAC[)DI_[[)DIBR8K@@[A@KDI^IQ
)@@G@@N[#K@ /K@^&HC@)DIAT8)@@]G@)DJ&C[@DIAT9@@@]G[@DJ&C[)DIBT9)@@]G[)DJ&C@0@@KIR
)@@G@@C@@@@M9!J@@@">G@@@C@@DI^T8@@@]G@@DJ)"!G@@@9(I@@@C[@DIAG9@@@[[[@DIAC[)DIBIS
)@@G@@G9)@@[[[)DIBO8K@@[A@KDI^8L@^>3R]3@@ A]0DM,C@)DJHT8)@@]G@)DJ&[@)DM\C@@DM2IT
)@@G@@&"0@@@/,0 ONC@)DJMT8)@@]G@)DJ&C[@DI\T9@@@]G[@DJ&C@0@@K9!I@@@"(J@@@">@@@GIU
)@@G@@/D@^&8R]3@@ A]0DM3R]3@@[A]0DM4C@)DJZT8)@@]G@)DJ&[@)DM6C@@DM9&"0@@@/,0 K_IV
)@@G@@C@)DH.T8)@@]G@)DJ&C[@DI1T9@@@]G[@DJ&C@0@@K9!I@@@"(J@@@"=@@@K/C@^$[C@)DIMIW
)@@G@@T8)@@]G@)DJ&C[@DI0T9@@@]G[@DJ&C@0@@K9!J@@@9(I@@@R]3@@ A]0DM'R]3@@DA]0DM;IX
)@@G@@R]3@@DA]0DM.R]3@@[A]0DM"C@@DN@&"0@@@/,0^4PC@)DICG@)DJ=C[I@@@[[@DJ#R]3@@ IY
)@@G@@A]0DN[C@)DJHT8)@@]G@)DJ&[@)DN]T9@@@]G[@DJ&C@)@@K[@)DN#C@)DJZT8)@@]G@)DJ&IZ
)@@G@@[@)DN^C@@DNA&"0@@@/,0[4#R]3@@ A]0DNBC@)DJZT8)@@]G@)DJ&[@)DNCC@)DJHT8)@@]JA
)@@G@@G@)DJ&[@)DNEC@@DNH&"0@@@/,0 K_94@@@G9*@DJ^R]3@@ A]0DNIR]3@@DA]0DNLC@)DJZJB
)@@G@@T8)@@]G@)DJ&[@)DNJC@@DNO&"0@@@/,0 K_94@@@G9*@DIDC@)DI%T8)@@]G@)DJ&9!@DIHJC
)@@G@@9(I@@@"=@DJ^/C@^*EC@)DI%T8)@@]G@)DJ&9!@DID"!@DJ^9(I@@@C@)DI.G@)DJ=C[I@@@JD
)@@G@@[[@DJN/H@^*+/[@^*+R]3@@ A]0DNPC@)DI_T8)@@]G@)DJ&[@)DNQC@)DJNT8)@@]G@)DJ&JE
)@@G@@[@)DNRC@)DJZT8)@@]G@)DJ&[@)DNSC@@DNU&"0@@@/,0[4#/K@^(CC@)DIWG@)DJ=C[I@@@JF
)@@G@@[[@DI$R]3@@ A]0DNVC@)DI_T8)@@]G@)DJ&[@)DNWT9@@@]G[@DJ&C@)@@K[@)DNXC@)DJZJG
)@@G@@T8)@@]G@)DJ&[@)DNYC@@DN)&"0@@@/,0#=KR]3@@ A]0DN-C@)DI_T8)@@]G@)DJ&[@)DN+JH
)@@G@@C@)DI$T8)@@]G@)DJ&[@)DN<C@)DI_T8)@@]G@)DJ&[@)DN=C@@DN&&"0@@@/,0]D'R]3@@ JI
)@@G@@A]0DN$R]3@@DA]0DN%C@)DI_T8)@@]G@)DJ&[@)DN*C@)DI_T8)@@]G@)DJ&[@)DN:C@@DN!JJ
)@@G@@&"0@@@/,0^4PR]3@@AA]0DN0R]3@@DA]0DN7C@)DJ#T8)@@]G@)DJ&[@)DN,C@)DIYT8)@@]JK
)@@G@@G@)DJ&[@)DN\C@)DI%T8)@@]G@)DJ&[@)DN1C@)DJZT8)@@]G@)DJ&[@)DN2C@)DJHT8)@@]JL
)@@G@@G@)DJ&[@)DN3C@)DJIT8)@@]G@)DJ&[@)DN4C@)DI_T8)@@]G@)DJ&[@)DN5C@)DH;T8)@@]JM
)@@G@@G@)DJ&[@)DN6C@@DN'&"0@@@/,0]PMC@)DJ=C9@@@][[I@@[/K@^ROC@)DJ=C9@@[@[[I@@[JN
)@@G@@/K@^?0C@)DJOG@)DJ=C[I@@@/ @^%NC@)DJRG@)DJ=C[I@@@/ @^%NC@)DJKG@)DJ=C[I@@@JO
)@@G@@/H@^?+/[@^?+C@)DJLG@)DJ=C[I@@@/ @^?+C@)DJUG@)DJ=C[I@@@!9@@@B/K@^?+C@)DJOJP
)@@G@@G@)DJ=E[I@@@!9@@@#/K@^:,R]3@@@A]0DN;R]3@@[A]0DN/R]3@@]A]0DN"R]3@@#A]0DN_JQ
)@@G@@R]3@@^A]0DO@R]3@@ A]0DO[R]3@@BA]0DO]R]3@@CA]0DO#C@@DOA&"0@@@/,0[XUC@)DI^JR
)@@G@@?8)@@^/C,^%7/K@^%;/K@^%;/K@^:J/K@^?+C@)DJ[G@)DJ=C[@DJ[G[@DJ=C@0@@KC[J@@@JS
)@@G@@G9@@@[[[I@@@C@)DI?G@)DJ=C[@DI?G[@DJ=C@0@@KC[J@@@G9@@@[[[I@@@C@)DJ=C9@@@[JT
)@@G@@[[I@@[/K@^?0C@)DJGG@)DJ=C[@DJGG[@DJ=C@0@@KC[J@@@G9@@@[[[I@@@C@)DH9G@)DJ=JU
)@@G@@C[@DH9G[@DJ=C@0@@KC[J@@@G9@@@[[[I@@@C@)DH8G@)DJ=C[@DI?G[@DJ=C[)DJGG[)DJ=JV
)@@G@@C@0@@KC@@@@MC[J@@@G[G@@@[[I@@@C@)DJ=C9@@@][[I@@[/K@^?0C@)DI#G@)DJ=E[I@@@JW
)@@G@@[[@DI;C@)DJLG@)DJ=[[I@@@C@)DI#G@)DJ=D[@@@K[[I@@@C@)DI.G@)DJ=C[I@@@[[@DJNJX
)@@G@@/H@^?L/[@^?LC[#K@ G9@@@[T[#K@ ;P@@@=W9@@@][[@DJ?C@)DJNT8)@@]G@)DJ&[@)DOCJY
)@@G@@C@)DI;T8)@@]G@)DJ&[@)DOEC@@DOH&"0@@@/,0 G%/K@^?+C@)DIWG@)DJ=C[I@@@[[@DI$JZ
)@@G@@R]3@@ A]0DOIC@)DI;T8)@@]G@)DJ&[@)DOJT9@@@]G[@DJ&C@)@@K[@)DOKC@@DOM&"0@@@KA
)@@G@@/,0]J[C@)DJCG@)DJ= @I@@@C@)DJUG@)DJ=C@0DJ=C[I@@@[[J@@[G@0DJU @J@@@/K@^?0KB
)@@G@@C@)DJ=C9@@P8[[I@@[/K@^K%R]0DO=R@KDO>R@)DO&R@0DO$9!)DO*9,@DO%9,)DO?9\@DO,KC
)@@G@@9\)DO0N[@DO2N[KDO3/KF@@@A]0DO=A@KDO>A@)DO&A@0DO$9()DO*9%@DO%9%)DO?9:@DO,KD
)@@G@@9:)DO0^[@DO2^[KDO3R@0@@GC@KDO7&'0@@@/,0@1GC[#K@[[[@DOZC[<K@][[)DO)C]@DOZKE
)@@G@@T'@@@[[]@DOWC])@@OG')@@[C#@@@OT;@@@[[#@DOXCB<@@@H#)@@Q[#)DOVCA#@@#H'@@@[KF
)@@G@@[]@DOY @#K@^C])DO)H')@@[[])DOP?')@@[/K@^0AR8K@@[A@KDORN[@DOP^[@DO-/K@^0^KG
)@@G@@^[@DO-C[@DORG9@@@[[[@DOOC[)DO)H[)DORG9)@@[[[)DO+C@)DORG@)DOVC[)DORT[)DOWKH
)@@G@@G@)@@M[@)DO9C@@DO/&"0@@@/,0#H;G@@DORH8@@@[[@@DOSC@)DORG@)DOY[@I@@@G@@DOVKI
)@@G@@C@)DORT@)DOWG@@@@IC[G@@@/[@^\_C[@DOS(@@DOR/[@^,>:[@DOR/K@^,>C@)DOSG@)DOVKJ
)@@G@@C[@DORT[@DOWG@)@@KC[I@@@[[@DOTC@)DOSG@)DOVC[)DORT[)DOWG@)@@MC[)DORG[)DOVKK
)@@G@@C]@DORT]@DOWG[)@@OC@0@@MC[\@@@[[,@@@C@)DORG@)DOVC[)DORT[)DOWG@)@@M[[I@@@KL
)@@G@@C@)DORG@)DOVC[@DORT[@DOWG@)@@KC[@DPG"HI@@@D[@@@KG9@@@@[[@DOTC[)DO)H[)DORKM
)@@G@@[[)DO+C@)DORG@)DOVC[)DORT[)DOWG@)@@MC9,@@[[[)DO_C@@DP]&"0@@@/,0[*VR@)DOOKN
)@@G@@A@)DOQC[@DO)H[@DOOG9@@@[N[K@@K^[KDO</K@^\/^[KDO<C@)DOSG@)DOVC[@DOQT[@DOWKO
)@@G@@G@)@@KC[I@@@[[@DOTC[)DOS(@@DOR/[)^\>:[)DOR/K@^\>C@)DOSG@)DOVC[@DOQT[@DOWKP
)@@G@@G@)@@KC[@DORG[@DOVC[)DOQT[)DOWG[@@@MC@0@@KC[J@@@[[I@@@C@)DORG@)DOVC[@DOQKQ
)@@G@@T[@DOWG@)@@KC[@DOT[[I@@@C[@DO)H[@DOR[[@DO+C@)DORG@)DOVC[@DORT[@DOWG@)@@KKR
)@@G@@C9I@@[[[@DP C@)DORG@)DOVC[@DOQT[@DOWG@)@@KC9I@@[[[@DPBC@@DPE&"0@@@/,0#LVKS
)@@G@@R@)DOQO8)@@[A@)DOQN[KDO<8LK^\^/K@^0[C[@DOR[[#K@^R@KDORO8K@@[A@KDORN[@DO-KT
)@@G@@8L@^!(C@)DO)G@)DOYC[@DO)[[I@@@C@)DO)G@)DOVC[@DO)T[@DOWG@)@@KC[I@@@/ @^0NKU
)@@G@@C[@DO)[[#K@^/K@^?1R]0DPXR@KDPYR@)DPZ9!)DP)9,@DP+9,)DP=9\@DP&N[@DP*/KF@@@KV
)@@G@@A]0DPXA@KDPYA@)DPZ9()DP)9%@DP+9%)DP=9:@DP&^[@DP*R@)@@GC@KDP?&'0@@@/,0@1GKW
)@@G@@C[]K@@[[@DPUC[)DPU[[)DPQCA]@@[H'@@@][]@DPPCA+@@]H')@@][])DPR[[)DPTCB]@@#KX
)@@G@@H;@@@][#@DPSR8K@@[A@KDPJN[@@@M/K@^1CC@)DPJT8)@@]G@)DPS9!I@@@9.@DPM/K@^1EKY
)@@G@@C@)DPJT8)@@]G@)DPP9!@DPM9(I@@@O8K@@[A@KDPJ8L@^0;/K@^2JC[@DPJG9@@@[T[@DPJKZ
)@@G@@;P@@@=W9@@@][[@DPIC@)DPJT8)@@]G@)DPPC[)DPJT9)@@]G[)DPST9@@@]G[@DPRC@0@@MLA
)@@G@@C@@@@K9!J@@@"!G@@@9(I@@@C[@DPJ(@@DPU/[@^2J![@DPU/K@^2JC[@DPJG9@@@[[[@DPJLB
)@@G@@R@K@@KA@KDPHD[@@@KG[@DPUG9@@@[N[@@@K/K@^2IR]2@@[A]0DP0C[@DPHH9@@@[[[@DPVLC
)@@G@@C@)DPIT8)@@]G@)DPRC9I@@][[@DP,C@@DP3&"0@@@/,0 K_9*@DPKC[@DPHG[@DPI[[@DPILD
)@@G@@C@)DPHT8)@@]G@)DPPC[)DPHT9)@@]G[)DPSC@0@@M90@@@G")J@@@T9@@@]G[@DPRC@0@@KLE
)@@G@@"?J@@@9*I@@@R@KDPHO8K@@[A@KDPH8L@^1?/K@^0OR]0DQFR@KDQGR@)DQHR@0DQIR[@DQJLF
)@@G@@9!)DQK9,@DQM9,)DQON[@DQQN[KDQRN[)DQS/KF@@@A]0DQFA@KDQGA@)DQHA@0DQIA[@DQJLG
)@@G@@9()DQK9%@DQM9%)DQO^[@DQQ^[KDQR^[)DQSR[@@@GC@KDQW&'0@@@/,0@1GC[^K@@[[@DQBLH
)@@G@@C =@@[H9)@@][[)DQ CA^@@]H'@@@][]@DQAC])DQBG')@@[[])DP9T])DQB;Q)@@=W')@@]LI
)@@G@@[])DP"R8K@@[A@KDQ[N[@DQB/K@^4DC[@DP9H[@DQ[[[@DP5C@)DP"T8)@@]G@)DQ C[)DP"LJ
)@@G@@T9)@@]G[)DQAC@0@@M9!)DP'"!\@@@9(,@@@C9)@@[![)@@K/K@^4EC[@DP"[[@DP_C[)DP5LK
)@@G@@H9)@@[[[)DQ^R8)@@[A@)DQ]N[K@@M/K@^4#9!@DP/9(@DP7C[)DP_[[)DP"H[)DQ][[)DQ@LL
)@@G@@R80@@[A@0DP6N[)DQ]/K@^36C@)DQ@T8)@@]G@)DQAC[@DP"      @I@@@@.    2   K  LM
)@@G@@ L   M   N   O   P   Q   R                             JC00             LN
)@@G@@@I@@@@.    3   S   T   U   V   W   X   Y   Z                            LO
)@@G@@ JC00             @I@@@@.    4   )   -   +   <   =   >   &   $          LP
)@@G@@                   JC00             @I@@@@.    5   *   (   %   :   ?   !LQ
)@@G@@   ,   \                             JC00             @I@@@@.    6   0  LR
)@@G@@ 1   2   3   4   5   6   7                             JC00             LS
)@@G@@@I@@@@.    7   8   9   '   ;   /   .   "  EOL                           LT
)@@G@@ JC00             @I@@@@.                                               LU
)@@G@@                   JC00             @I@@@@. EOL IS A NOT-EQUAL SIGN ON TLV
)@@G@@HE KEYPUNCH; IT TERMINATES THE OUTPUTJC00             @I@@@@. LINE ON SOLW
)@@G@@ME PRINTERS.  NOTE THAT SEVERAL DIFFERENT 1108 PRINTERSJC00             LX
)@@G@@@I@@@@. EXIST, AND THEY DON'T AGREE ON SOME OF THE CHARACTERS--NOTABLY  LY
)@@G@@ JC00             @I@@@@. 01, 02, 04, AND 76.  ALSO, 54 AND 55 MUST BE MLZ
)@@G@@ULTI-PUNCHED ON THEJC00             @I@@@@. KEYPUNCHES; THEY ARE 12-0 ANMA
)@@G@@D 11-0, RESPECTIVELY.                JC00             @I@@@@COPYMDATA** MB
)@@G@@PROC    0.                                             JC30             MC
)@@G@@@I@]@@$(0)                                                              MD
)@@G@@                  @G@@[]$(2).                                           ME
)@@G@@                   JC05 @I[@@@ALPHA*    +         0000102030405. &ALPHABMF
)@@G@@ET--THE 1108 CHARACTER SEJC30             @I@@@@          +         0060MG
)@@G@@710111213.                                 JC30             @I@@@@      MH
)@@G@@    +         0141516172021.                                 JC30       MI
)@@G@@      @I@@@@          +         0222324252627.                          MJ
)@@G@@       JC30             @I@@@@          +         0303132333435.        MK
)@@G@@                         JC30             @I@@@@          +         0363ML
)@@G@@740414243.                                 JC30             @I@@@@      MM
)@@G@@    +         0444546475051.                                 JC30       MN
)@@G@@      @I@@@@          +         0525354555657.                          MO
)@@G@@       JC30             @I@@@@          +         0606162636465.        MP
)@@G@@                         JC30             @I@@@@          +         0666MQ
)@@G@@770717273.                                 JC30             @I@@@@      MR
)@@G@@    +         0747576770000.                                 JC30       MS
)@@G@@      @I@@@@.                                                           MT
)@@G@@       JC30             @I@@@@AMPST*    +         '&     '.      KEYWORDMU
)@@G@@ OPERATOR.               JC30             @I@@@@COLSTR*   +         ':  MV
)@@G@@   '.      COLON AND BLANK.                JC30             @I@@@@QTSTR*MW
)@@G@@    +         0720000000000. SINGLE QUOTE.                   JC30       MX
)@@G@@      @I@@@@DATBUF*   +         'MM/DD/YY    '.                         MY
)@@G@@                        @I@[@@FSTMIN*   +         2000.     MIN INCREMENMZ
)@@G@@T TO FREE STORAGE AREA   JC15             @I@[@@FSTMAX*   +         1600NA
)@@G@@00.   MAX ALLOWED ADDRESS--SEE ADDFST      JC15             @G@@@[FSTDECNB
)@@G@@*   +         30000.    MIN DECREMENT TO FREE STORAGE (WDS). JC15 @G@@@[NC
)@@G@@FSTINC*   +         10000.    MIN INCREMENT TO FREE STORAGE (WDS). JC15 ND
)@@G@@@G@@@[FSTMAX*   +         180000.   MAX ADDRESS FOR FREE STORAGE.       NE
)@@G@@ JC15 @G@@@[FSTMIN*   +         2*FSTSIZ. MIN SIZE OF FREE STORAGE (WDS)NF
)@@G@@.      JC15 @I@@@@INTBUF*   RES       2.                 BUFFER FOR INTSNG
)@@G@@PC                            @I@@@@INTR$*.                             NH
)@@G@@   OVERFLOW INTERRUPT HANDLER                   @I@@@@          +       NI
)@@G@@  0.                                                              @I@@@@NJ
)@@G@@          +         0.                                                  NK
)@@G@@            @I@@@@          ER        CEND$.                            NL
)@@G@@                              @I@[@@          J         AERROR.         NM
)@@G@@                                                @G@@@[          J       NN
)@@G@@  0,X10.    X10 MUST CONTAIN FAILURE ADDRESS.    JC13 @I@@@@MASK$*    + NO
)@@G@@        07777777777.       BLANK FILL MASKS                             NP
)@@G@@@I@@@@          +         077777777.                                    NQ
)@@G@@                  @I@@@@          +         0777777.                    NR
)@@G@@                                    @I@@@@          +         07777.    NS
)@@G@@                                                      @I@@@@          + NT
)@@G@@        077.                                                            NU
)@@G@@@I@@@@XARMASK*  +         0700000.       SEE DUMPWDS--MASK TO GET REGISTNV
)@@G@@EJC10             @I@@@@PCTBUF*   RES       23.                BUFFER FONW
)@@G@@R MSTIME                            @I@@@@P10**     +1.0                NX
)@@G@@                                                      @I@@@@I         DONY
)@@G@@        38 , +1.0*+I.                                                   NZ
)@@G@@@I@@@@RPLBUF*   RES       64.                RPLACE TRANSLATE TABLE     OA
)@@G@@                  @I@@@@PARTBL**  RES       40.            MOVED FROM INOB
)@@G@@IT.  USE UNCERTAIN.JC05             @I@@@@TABLES*.                      OC
)@@G@@SYNTAX TABLES.                       JC30             @I@@@@.           OD
)@@G@@                                                                        OE
)@@G@@@I@@@@. BEGIN BIOPTB                                                    OF
)@@G@@                  @I@@@@. FOR(PLUS) PUT(ADDFN) GOTO(TBLKTB)             OG
)@@G@@                                    @I@@@@. FOR(MINUS) PUT(SUBFN) GOTO(TOH
)@@G@@BLKTB)                                                @I@@@@. FOR(DOT) POI
)@@G@@UT(NAMFN) GOTO(TBLKTB)                                                  OJ
)@@G@@@I@@@@. FOR(DOLLAR) PUT(DOLFN) GOTO(TBLKTB)                             OK
)@@G@@                  @I@@@@. FOR(STAR) PUT(MPYFN) GOTO(STARTB)             OL
)@@G@@                                    @I@@@@. FOR(SLASH) PUT(DIVFN) GOTO(TOM
)@@G@@BLKTB)                                                @I@@@@. FOR(AT) PUON
)@@G@@T(BIATFN) GOTO(TBLKTB)                                                  OO
)@@G@@@I@@@@. FOR(POUND) PUT(BIPDFN) GOTO(TBLKTB)                             OP
)@@G@@                  @I@@@@. FOR(PERCENT) PUT(BIPRFN) GOTO(TBLKTB)         OQ
)@@G@@                                    @I@@@@. FOR(RAISE) PUT(EXPFN) GOTO(TOR
)@@G@@BLKTB)                                                @I@@@@. FOR(ORSYM)OS
)@@G@@ PUT(ORFN) GOTO(TBLKTB)                                                 OT
)@@G@@@I@@@@. FOR(KEYSYM) PUT(BIAMFN) GOTO(TBLKTB)                            OU
)@@G@@                  @I@@@@. FOR(NOTSYM) PUT(BINGFN) GOTO(TBLKTB)          OV
)@@G@@                                    @I@@@@. FOR(QUESYM) PUT(BIQSFN) GOTOOW
)@@G@@(TBLKTB)                                              @I@@@@. ELSE ERROROX
)@@G@@                                                                        OY
)@@G@@@I@@@@. END BIOPTB                                                      OZ
)@@G@@                  @I@@@@BIOPTB*   SYNVEC    TBLKTB,BIATFN.              PA
)@@G@@  @                                 @I@@@@          SYNVEC    *ERROR,*0.PB
)@@G@@                    [                                 @I@@@@          SYPC
)@@G@@NVEC    *ERROR,*0.                    ]                                 PD
)@@G@@@I@@@@          SYNVEC    TBLKTB,BIPDFN.                #               PE
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  PF
)@@G@@  ^                                 @I@@@@          SYNVEC    *ERROR,*0.PG
)@@G@@                                                      @I@@@@          SYPH
)@@G@@NVEC    *ERROR,*0.                    A                                 PI
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    B               PJ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  PK
)@@G@@  C                                 @I@@@@          SYNVEC    *ERROR,*0.PL
)@@G@@                    D                                 @I@@@@          SYPM
)@@G@@NVEC    *ERROR,*0.                    E                                 PN
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    F               PO
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  PP
)@@G@@  G                                 @I@@@@          SYNVEC    *ERROR,*0.PQ
)@@G@@                    H                                 @I@@@@          SYPR
)@@G@@NVEC    *ERROR,*0.                    I                                 PS
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    J               PT
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  PU
)@@G@@  K                                 @I@@@@          SYNVEC    *ERROR,*0.PV
)@@G@@                    L                                 @I@@@@          SYPW
)@@G@@NVEC    *ERROR,*0.                    M                                 PX
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    N               PY
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  PZ
)@@G@@  O                                 @I@@@@          SYNVEC    *ERROR,*0.QA
)@@G@@                    P                                 @I@@@@          SYQB
)@@G@@NVEC    *ERROR,*0.                    Q                                 QC
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    R               QD
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  QE
)@@G@@  S                                 @I@@@@          SYNVEC    *ERROR,*0.QF
)@@G@@                    T                                 @I@@@@          SYQG
)@@G@@NVEC    *ERROR,*0.                    U                                 QH
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    V               QI
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  QJ
)@@G@@  W                                 @I@@@@          SYNVEC    *ERROR,*0.QK
)@@G@@                    X                                 @I@@@@          SYQL
)@@G@@NVEC    *ERROR,*0.                    Y                                 QM
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    Z               QN
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  QO
)@@G@@  )                                 @I@@@@          SYNVEC    TBLKTB,SUBQP
)@@G@@FN.                 -                                 @I@@@@          SYQQ
)@@G@@NVEC    TBLKTB,ADDFN.                 +                                 QR
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    <               QS
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  QT
)@@G@@  =                                 @I@@@@          SYNVEC    *ERROR,*0.QU
)@@G@@                    >                                 @I@@@@          SYQV
)@@G@@NVEC    TBLKTB,BIAMFN.                &                                 QW
)@@G@@@I@@@@          SYNVEC    TBLKTB,DOLFN.                 $               QX
)@@G@@                  @I@@@@          SYNVEC    STARTB,MPYFN.               QY
)@@G@@  *                                 @I@@@@          SYNVEC    *ERROR,*0.QZ
)@@G@@                    (                                 @I@@@@          SYRA
)@@G@@NVEC    TBLKTB,BIPRFN.                %                                 RB
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    :               RC
)@@G@@                  @I@@@@          SYNVEC    TBLKTB,BIQSFN.              RD
)@@G@@  ?                                 @I@@@@          SYNVEC    TBLKTB,ORFRE
)@@G@@N.                  !                                 @I@@@@          SYRF
)@@G@@NVEC    *ERROR,*0.                    ,                                 RG
)@@G@@@I@@@@          SYNVEC    TBLKTB,BINGFN.                \               RH
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  RI
)@@G@@  0                                 @I@@@@          SYNVEC    *ERROR,*0.RJ
)@@G@@                    1                                 @I@@@@          SYRK
)@@G@@NVEC    *ERROR,*0.                    2                                 RL
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    3               RM
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  RN
)@@G@@  4                                 @I@@@@          SYNVEC    *ERROR,*0.RO
)@@G@@                    5                                 @I@@@@          SYRP
)@@G@@NVEC    *ERROR,*0.                    6                                 RQ
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    7               RR
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  RS
)@@G@@  8                                 @I@@@@          SYNVEC    *ERROR,*0.RT
)@@G@@                    9                                 @I@@@@          SYRU
)@@G@@NVEC    *ERROR,*0.                    '                                 RV
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    ;               RW
)@@G@@                  @I@@@@          SYNVEC    TBLKTB,DIVFN.               RX
)@@G@@  /                                 @I@@@@          SYNVEC    TBLKTB,NAMRY
)@@G@@FN.                 .                                 @I@@@@          SYRZ
)@@G@@NVEC    TBLKTB,EXPFN.                 "                                 SA
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    _               SB
)@@G@@                  @I@@@@.                                               SC
)@@G@@                                    @I@@@@. BEGIN CARDTB                SD
)@@G@@                                                      @I@@@@. FOR(CMT) PSE
)@@G@@UT(CMTTYP) STOPSH                                                       SF
)@@G@@@I@@@@. FOR(CTL) PUT(CTLTYP) STOPSH                                     SG
)@@G@@                  @I@@@@. FOR(CNT) PUT(CNTTYP) STOPSH                   SH
)@@G@@                                    @I@@@@. ELSE PUT(NEWTYP) STOPSH     SI
)@@G@@                                                      @I@@@@. END CARDTBSJ
)@@G@@                                                                        SK
)@@G@@@I@@@@CARDTB*   SYNVEC    *STOPSH,NEWTYP.               @               SL
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NEWTYP.             SM
)@@G@@  [                                 @I@@@@          SYNVEC    *STOPSH,NESN
)@@G@@WTYP.               ]                                 @I@@@@          SYSO
)@@G@@NVEC    *STOPSH,NEWTYP.               #                                 SP
)@@G@@@I@@@@          SYNVEC    *STOPSH,NEWTYP.               ^               SQ
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NEWTYP.             SR
)@@G@@                                    @I@@@@          SYNVEC    *STOPSH,NESS
)@@G@@WTYP.               A                                 @I@@@@          SYST
)@@G@@NVEC    *STOPSH,NEWTYP.               B                                 SU
)@@G@@@I@@@@          SYNVEC    *STOPSH,NEWTYP.               C               SV
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NEWTYP.             SW
)@@G@@  D                                 @I@@@@          SYNVEC    *STOPSH,NESX
)@@G@@WTYP.               E                                 @I@@@@          SYSY
)@@G@@NVEC    *STOPSH,NEWTYP.               F                                 SZ
)@@G@@@I@@@@          SYNVEC    *STOPSH,NEWTYP.               G               TA
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NEWTYP.             TB
)@@G@@  H                                 @I@@@@          SYNVEC    *STOPSH,NETC
)@@G@@WTYP.               I                                 @I@@@@          SYTD
)@@G@@NVEC    *STOPSH,NEWTYP.               J                                 TE
)@@G@@@I@@@@          SYNVEC    *STOPSH,NEWTYP.               K               TF
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NEWTYP.             TG
)@@G@@  L                                 @I@@@@          SYNVEC    *STOPSH,NETH
)@@G@@WTYP.               M                                 @I@@@@          SYTI
)@@G@@NVEC    *STOPSH,NEWTYP.               N                                 TJ
)@@G@@@I@@@@          SYNVEC    *STOPSH,NEWTYP.               O               TK
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NEWTYP.             TL
)@@G@@  P                                 @I@@@@          SYNVEC    *STOPSH,NETM
)@@G@@WTYP.               Q                                 @I@@@@          SYTN
)@@G@@NVEC    *STOPSH,NEWTYP.               R                                 TO
)@@G@@@I@@@@          SYNVEC    *STOPSH,NEWTYP.               S               TP
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NEWTYP.             TQ
)@@G@@  T                                 @I@@@@          SYNVEC    *STOPSH,NETR
)@@G@@WTYP.               U                                 @I@@@@          SYTS
)@@G@@NVEC    *STOPSH,NEWTYP.               V                                 TT
)@@G@@@I@@@@          SYNVEC    *STOPSH,NEWTYP.               W               TU
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NEWTYP.             TV
)@@G@@  X                                 @I@@@@          SYNVEC    *STOPSH,NETW
)@@G@@WTYP.               Y                                 @I@@@@          SYTX
)@@G@@NVEC    *STOPSH,NEWTYP.               Z                                 TY
)@@G@@@I@@@@          SYNVEC    *STOPSH,NEWTYP.               )               TZ
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,CTLTYP.             UA
)@@G@@  -                                 @I@@@@          SYNVEC    *STOPSH,CNUB
)@@G@@TTYP.               +                                 @I@@@@          SYUC
)@@G@@NVEC    *STOPSH,NEWTYP.               <                                 UD
)@@G@@@I@@@@          SYNVEC    *STOPSH,NEWTYP.               =               UE
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NEWTYP.             UF
)@@G@@  >                                 @I@@@@          SYNVEC    *STOPSH,NEUG
)@@G@@WTYP.               &                                 @I@@@@          SYUH
)@@G@@NVEC    *STOPSH,NEWTYP.               $                                 UI
)@@G@@@I@@@@          SYNVEC    *STOPSH,CMTTYP.               *               UJ
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NEWTYP.             UK
)@@G@@  (                                 @I@@@@          SYNVEC    *STOPSH,CMUL
)@@G@@TTYP.               %                                 @I@@@@          SYUM
)@@G@@NVEC    *STOPSH,NEWTYP.               :                                 UN
)@@G@@@I@@@@          SYNVEC    *STOPSH,NEWTYP.               ?               UO
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NEWTYP.             UP
)@@G@@  !                                 @I@@@@          SYNVEC    *STOPSH,CNUQ
)@@G@@TTYP.               ,                                 @I@@@@          SYUR
)@@G@@NVEC    *STOPSH,NEWTYP.               \                                 US
)@@G@@@I@@@@          SYNVEC    *STOPSH,NEWTYP.               0               UT
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NEWTYP.             UU
)@@G@@  1                                 @I@@@@          SYNVEC    *STOPSH,NEUV
)@@G@@WTYP.               2                                 @I@@@@          SYUW
)@@G@@NVEC    *STOPSH,NEWTYP.               3                                 UX
)@@G@@@I@@@@          SYNVEC    *STOPSH,NEWTYP.               4               UY
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NEWTYP.             UZ
)@@G@@  5                                 @I@@@@          SYNVEC    *STOPSH,NEVA
)@@G@@WTYP.               6                                 @I@@@@          SYVB
)@@G@@NVEC    *STOPSH,NEWTYP.               7                                 VC
)@@G@@@I@@@@          SYNVEC    *STOPSH,NEWTYP.               8               VD
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NEWTYP.             VE
)@@G@@  9                                 @I@@@@          SYNVEC    *STOPSH,NEVF
)@@G@@WTYP.               '                                 @I@@@@          SYVG
)@@G@@NVEC    *STOPSH,NEWTYP.               ;                                 VH
)@@G@@@I@@@@          SYNVEC    *STOPSH,NEWTYP.               /               VI
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,CNTTYP.             VJ
)@@G@@  .                                 @I@@@@          SYNVEC    *STOPSH,NEVK
)@@G@@WTYP.               "                                 @I@@@@          SYVL
)@@G@@NVEC    *STOPSH,NEWTYP.               _                                 VM
)@@G@@@I@@@@.                                                                 VN
)@@G@@                  @I@@@@. BEGIN DQLITB                                  VO
)@@G@@                                    @I@@@@. FOR(DQUOTE) STOP            VP
)@@G@@                                                      @I@@@@. ELSE CONTIVQ
)@@G@@N                                                                       VR
)@@G@@@I@@@@. END DQLITB                                                      VS
)@@G@@                  @I@@@@DQLITB*   SYNVEC    DQLITB,*0.                  VT
)@@G@@  @                                 @I@@@@          SYNVEC    DQLITB,*0.VU
)@@G@@                    [                                 @I@@@@          SYVV
)@@G@@NVEC    DQLITB,*0.                    ]                                 VW
)@@G@@@I@@@@          SYNVEC    DQLITB,*0.                    #               VX
)@@G@@                  @I@@@@          SYNVEC    *STOP,*0.                   VY
)@@G@@  ^                                 @I@@@@          SYNVEC    DQLITB,*0.VZ
)@@G@@                                                      @I@@@@          SYWA
)@@G@@NVEC    DQLITB,*0.                    A                                 WB
)@@G@@@I@@@@          SYNVEC    DQLITB,*0.                    B               WC
)@@G@@                  @I@@@@          SYNVEC    DQLITB,*0.                  WD
)@@G@@  C                                 @I@@@@          SYNVEC    DQLITB,*0.WE
)@@G@@                    D                                 @I@@@@          SYWF
)@@G@@NVEC    DQLITB,*0.                    E                                 WG
)@@G@@@I@@@@          SYNVEC    DQLITB,*0.                    F               WH
)@@G@@                  @I@@@@          SYNVEC    DQLITB,*0.                  WI
)@@G@@  G                                 @I@@@@          SYNVEC    DQLITB,*0.WJ
)@@G@@                    H                                 @I@@@@          SYWK
)@@G@@NVEC    DQLITB,*0.                    I                                 WL
)@@G@@@I@@@@          SYNVEC    DQLITB,*0.                    J               WM
)@@G@@                  @I@@@@          SYNVEC    DQLITB,*0.                  WN
)@@G@@  K                                 @I@@@@          SYNVEC    DQLITB,*0.WO
)@@G@@                    L                                 @I@@@@          SYWP
)@@G@@NVEC    DQLITB,*0.                    M                                 WQ
)@@G@@@I@@@@          SYNVEC    DQLITB,*0.                    N               WR
)@@G@@                  @I@@@@          SYNVEC    DQLITB,*0.                  WS
)@@G@@  O                                 @I@@@@          SYNVEC    DQLITB,*0.WT
)@@G@@                    P                                 @I@@@@          SYWU
)@@G@@NVEC    DQLITB,*0.                    Q                                 WV
)@@G@@@I@@@@          SYNVEC    DQLITB,*0.                    R               WW
)@@G@@                  @I@@@@          SYNVEC    DQLITB,*0.                  WX
)@@G@@  S                                 @I@@@@          SYNVEC    DQLITB,*0.WY
)@@G@@                    T                                 @I@@@@          SYWZ
)@@G@@NVEC    DQLITB,*0.                    U                                 XA
)@@G@@@I@@@@          SYNVEC    DQLITB,*0.                    V               XB
)@@G@@                  @I@@@@          SYNVEC    DQLITB,*0.                  XC
)@@G@@  W                                 @I@@@@          SYNVEC    DQLITB,*0.XD
)@@G@@                    X                                 @I@@@@          SYXE
)@@G@@NVEC    DQLITB,*0.                    Y                                 XF
)@@G@@@I@@@@          SYNVEC    DQLITB,*0.                    Z               XG
)@@G@@                  @I@@@@          SYNVEC    DQLITB,*0.                  XH
)@@G@@  )                                 @I@@@@          SYNVEC    DQLITB,*0.XI
)@@G@@                    -                                 @I@@@@          SYXJ
)@@G@@NVEC    DQLITB,*0.                    +                                 XK
)@@G@@@I@@@@          SYNVEC    DQLITB,*0.                    <               XL
)@@G@@                  @I@@@@          SYNVEC    DQLITB,*0.                  XM
)@@G@@  =                                 @I@@@@          SYNVEC    DQLITB,*0.XN
)@@G@@                    >                                 @I@@@@          SYXO
)@@G@@NVEC    DQLITB,*0.                    &                                 XP
)@@G@@@I@@@@          SYNVEC    DQLITB,*0.                    $               XQ
)@@G@@                  @I@@@@          SYNVEC    DQLITB,*0.                  XR
)@@G@@  *                                 @I@@@@          SYNVEC    DQLITB,*0.XS
)@@G@@                    (                                 @I@@@@          SYXT
)@@G@@NVEC    DQLITB,*0.                    %                                 XU
)@@G@@@I@@@@          SYNVEC    DQLITB,*0.                    :               XV
)@@G@@                  @I@@@@          SYNVEC    DQLITB,*0.                  XW
)@@G@@  ?                                 @I@@@@          SYNVEC    DQLITB,*0.XX
)@@G@@                    !                                 @I@@@@          SYXY
)@@G@@NVEC    DQLITB,*0.                    ,                                 XZ
)@@G@@@I@@@@          SYNVEC    DQLITB,*0.                    \               YA
)@@G@@                  @I@@@@          SYNVEC    DQLITB,*0.                  YB
)@@G@@  0                                 @I@@@@          SYNVEC    DQLITB,*0.YC
)@@G@@                    1                                 @I@@@@          SYYD
)@@G@@NVEC    DQLITB,*0.                    2                                 YE
)@@G@@@I@@@@          SYNVEC    DQLITB,*0.                    3               YF
)@@G@@                  @I@@@@          SYNVEC    DQLITB,*0.                  YG
)@@G@@  4                                 @I@@@@          SYNVEC    DQLITB,*0.YH
)@@G@@                    5                                 @I@@@@          SYYI
)@@G@@NVEC    DQLITB,*0.                    6                                 YJ
)@@G@@@I@@@@          SYNVEC    DQLITB,*0.                    7               YK
)@@G@@                  @I@@@@          SYNVEC    DQLITB,*0.                  YL
)@@G@@  8                                 @I@@@@          SYNVEC    DQLITB,*0.YM
)@@G@@                    9                                 @I@@@@          SYYN
)@@G@@NVEC    DQLITB,*0.                    '                                 YO
)@@G@@@I@@@@          SYNVEC    DQLITB,*0.                    ;               YP
)@@G@@                  @I@@@@          SYNVEC    DQLITB,*0.                  YQ
)@@G@@  /                                 @I@@@@          SYNVEC    DQLITB,*0.YR
)@@G@@                    .                                 @I@@@@          SYYS
)@@G@@NVEC    DQLITB,*0.                    "                                 YT
)@@G@@@I@@@@          SYNVEC    DQLITB,*0.                    _               YU
)@@G@@                  @I@@@@.                                               YV
)@@G@@                                    @I@@@@. BEGIN ELEMTB                YW
)@@G@@                                                      @I@@@@. FOR(NUMBERYX
)@@G@@) PUT(ILITYP) GOTO(INTGTB)                                              YY
)@@G@@@I@@@@. FOR(LETTER) PUT(VARTYP) GOTO(VARTB)                             YZ
)@@G@@                  @I@@@@. FOR(SQUOTE) PUT(QLITYP) GOTO(SQLITB)          ZA
)@@G@@                                    @I@@@@. FOR(DQUOTE) PUT(QLITYP) GOTOZB
)@@G@@(DQLITB)                                              @I@@@@. FOR(LEFTPAZC
)@@G@@REN) PUT(NSTTYP) STOP                                                   ZD
)@@G@@@I@@@@. ELSE ERROR                                                      ZE
)@@G@@                  @I@@@@. END ELEMTB                                    ZF
)@@G@@                                    @I@@@@ELEMTB*   SYNVEC    *ERROR,*0.ZG
)@@G@@                    @                                 @I@@@@          SYZH
)@@G@@NVEC    *ERROR,*0.                    [                                 ZI
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    ]               ZJ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  ZK
)@@G@@  #                                 @I@@@@          SYNVEC    DQLITB,QLIZL
)@@G@@TYP.                ^                                 @I@@@@          SYZM
)@@G@@NVEC    *ERROR,*0.                                                      ZN
)@@G@@@I@@@@          SYNVEC    VARTB,VARTYP.                 A               ZO
)@@G@@                  @I@@@@          SYNVEC    VARTB,VARTYP.               ZP
)@@G@@  B                                 @I@@@@          SYNVEC    VARTB,VARTZQ
)@@G@@YP.                 C                                 @I@@@@          SYZR
)@@G@@NVEC    VARTB,VARTYP.                 D                                 ZS
)@@G@@@I@@@@          SYNVEC    VARTB,VARTYP.                 E               ZT
)@@G@@                  @I@@@@          SYNVEC    VARTB,VARTYP.               ZU
)@@G@@  F                                 @I@@@@          SYNVEC    VARTB,VARTZV
)@@G@@YP.                 G                                 @I@@@@          SYZW
)@@G@@NVEC    VARTB,VARTYP.                 H                                 ZX
)@@G@@@I@@@@          SYNVEC    VARTB,VARTYP.                 I               ZY
)@@G@@                  @I@@@@          SYNVEC    VARTB,VARTYP.               ZZ
)@@G@@  J                                 @I@@@@          SYNVEC    VARTB,VARTAA
)@@G@@YP.                 K                                 @I@@@@          SYAB
)@@G@@NVEC    VARTB,VARTYP.                 L                                 AC
)@@G@@@I@@@@          SYNVEC    VARTB,VARTYP.                 M               AD
)@@G@@                  @I@@@@          SYNVEC    VARTB,VARTYP.               AE
)@@G@@  N                                 @I@@@@          SYNVEC    VARTB,VARTAF
)@@G@@YP.                 O                                 @I@@@@          SYAG
)@@G@@NVEC    VARTB,VARTYP.                 P                                 AH
)@@G@@@I@@@@          SYNVEC    VARTB,VARTYP.                 Q               AI
)@@G@@                  @I@@@@          SYNVEC    VARTB,VARTYP.               AJ
)@@G@@  R                                 @I@@@@          SYNVEC    VARTB,VARTAK
)@@G@@YP.                 S                                 @I@@@@          SYAL
)@@G@@NVEC    VARTB,VARTYP.                 T                                 AM
)@@G@@@I@@@@          SYNVEC    VARTB,VARTYP.                 U               AN
)@@G@@                  @I@@@@          SYNVEC    VARTB,VARTYP.               AO
)@@G@@  V                                 @I@@@@          SYNVEC    VARTB,VARTAP
)@@G@@YP.                 W                                 @I@@@@          SYAQ
)@@G@@NVEC    VARTB,VARTYP.                 X                                 AR
)@@G@@@I@@@@          SYNVEC    VARTB,VARTYP.                 Y               AS
)@@G@@                  @I@@@@          SYNVEC    VARTB,VARTYP.               AT
)@@G@@  Z                                 @I@@@@          SYNVEC    *ERROR,*0.AU
)@@G@@                    )                                 @I@@@@          SYAV
)@@G@@NVEC    *ERROR,*0.                    -                                 AW
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    +               AX
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  AY
)@@G@@  <                                 @I@@@@          SYNVEC    *ERROR,*0.AZ
)@@G@@                    =                                 @I@@@@          SYBA
)@@G@@NVEC    *ERROR,*0.                    >                                 BB
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    &               BC
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  BD
)@@G@@  $                                 @I@@@@          SYNVEC    *ERROR,*0.BE
)@@G@@                    *                                 @I@@@@          SYBF
)@@G@@NVEC    *STOP,NSTTYP.                 (                                 BG
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    %               BH
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  BI
)@@G@@  :                                 @I@@@@          SYNVEC    *ERROR,*0.BJ
)@@G@@                    ?                                 @I@@@@          SYBK
)@@G@@NVEC    *ERROR,*0.                    !                                 BL
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    ,               BM
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  BN
)@@G@@  \                                 @I@@@@          SYNVEC    INTGTB,ILIBO
)@@G@@TYP.                0                                 @I@@@@          SYBP
)@@G@@NVEC    INTGTB,ILITYP.                1                                 BQ
)@@G@@@I@@@@          SYNVEC    INTGTB,ILITYP.                2               BR
)@@G@@                  @I@@@@          SYNVEC    INTGTB,ILITYP.              BS
)@@G@@  3                                 @I@@@@          SYNVEC    INTGTB,ILIBT
)@@G@@TYP.                4                                 @I@@@@          SYBU
)@@G@@NVEC    INTGTB,ILITYP.                5                                 BV
)@@G@@@I@@@@          SYNVEC    INTGTB,ILITYP.                6               BW
)@@G@@                  @I@@@@          SYNVEC    INTGTB,ILITYP.              BX
)@@G@@  7                                 @I@@@@          SYNVEC    INTGTB,ILIBY
)@@G@@TYP.                8                                 @I@@@@          SYBZ
)@@G@@NVEC    INTGTB,ILITYP.                9                                 CA
)@@G@@@I@@@@          SYNVEC    SQLITB,QLITYP.                '               CB
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  CC
)@@G@@  ;                                 @I@@@@          SYNVEC    *ERROR,*0.CD
)@@G@@                    /                                 @I@@@@          SYCE
)@@G@@NVEC    *ERROR,*0.                    .                                 CF
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    "               CG
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  CH
)@@G@@  _                                 @I@@@@.                             CI
)@@G@@                                                      @I@@@@. BEGIN EOSTCJ
)@@G@@B                                                                       CK
)@@G@@@I@@@@. FOR(EOS) STOP                                                   CL
)@@G@@                  @I@@@@. ELSE CONTIN                                   CM
)@@G@@                                    @I@@@@. END EOSTB                   CN
)@@G@@                                                      @I@@@@EOSTB*    SYCO
)@@G@@NVEC    EOSTB,*0.                     @                                 CP
)@@G@@@I@@@@          SYNVEC    EOSTB,*0.                     [               CQ
)@@G@@                  @I@@@@          SYNVEC    EOSTB,*0.                   CR
)@@G@@  ]                                 @I@@@@          SYNVEC    EOSTB,*0. CS
)@@G@@                    #                                 @I@@@@          SYCT
)@@G@@NVEC    EOSTB,*0.                     ^                                 CU
)@@G@@@I@@@@          SYNVEC    EOSTB,*0.                                     CV
)@@G@@                  @I@@@@          SYNVEC    EOSTB,*0.                   CW
)@@G@@  A                                 @I@@@@          SYNVEC    EOSTB,*0. CX
)@@G@@                    B                                 @I@@@@          SYCY
)@@G@@NVEC    EOSTB,*0.                     C                                 CZ
)@@G@@@I@@@@          SYNVEC    EOSTB,*0.                     D               DA
)@@G@@                  @I@@@@          SYNVEC    EOSTB,*0.                   DB
)@@G@@  E                                 @I@@@@          SYNVEC    EOSTB,*0. DC
)@@G@@                    F                                 @I@@@@          SYDD
)@@G@@NVEC    EOSTB,*0.                     G                                 DE
)@@G@@@I@@@@          SYNVEC    EOSTB,*0.                     H               DF
)@@G@@                  @I@@@@          SYNVEC    EOSTB,*0.                   DG
)@@G@@  I                                 @I@@@@          SYNVEC    EOSTB,*0. DH
)@@G@@                    J                                 @I@@@@          SYDI
)@@G@@NVEC    EOSTB,*0.                     K                                 DJ
)@@G@@@I@@@@          SYNVEC    EOSTB,*0.                     L               DK
)@@G@@                  @I@@@@          SYNVEC    EOSTB,*0.                   DL
)@@G@@  M                                 @I@@@@          SYNVEC    EOSTB,*0. DM
)@@G@@                    N                                 @I@@@@          SYDN
)@@G@@NVEC    EOSTB,*0.                     O                                 DO
)@@G@@@I@@@@          SYNVEC    EOSTB,*0.                     P               DP
)@@G@@                  @I@@@@          SYNVEC    EOSTB,*0.                   DQ
)@@G@@  Q                                 @I@@@@          SYNVEC    EOSTB,*0. DR
)@@G@@                    R                                 @I@@@@          SYDS
)@@G@@NVEC    EOSTB,*0.                     S                                 DT
)@@G@@@I@@@@          SYNVEC    EOSTB,*0.                     T               DU
)@@G@@                  @I@@@@          SYNVEC    EOSTB,*0.                   DV
)@@G@@  U                                 @I@@@@          SYNVEC    EOSTB,*0. DW
)@@G@@                    V                                 @I@@@@          SYDX
)@@G@@NVEC    EOSTB,*0.                     W                                 DY
)@@G@@@I@@@@          SYNVEC    EOSTB,*0.                     X               DZ
)@@G@@                  @I@@@@          SYNVEC    EOSTB,*0.                   EA
)@@G@@  Y                                 @I@@@@          SYNVEC    EOSTB,*0. EB
)@@G@@                    Z                                 @I@@@@          SYEC
)@@G@@NVEC    EOSTB,*0.                     )                                 ED
)@@G@@@I@@@@          SYNVEC    EOSTB,*0.                     -               EE
)@@G@@                  @I@@@@          SYNVEC    EOSTB,*0.                   EF
)@@G@@  +                                 @I@@@@          SYNVEC    EOSTB,*0. EG
)@@G@@                    <                                 @I@@@@          SYEH
)@@G@@NVEC    EOSTB,*0.                     =                                 EI
)@@G@@@I@@@@          SYNVEC    EOSTB,*0.                     >               EJ
)@@G@@                  @I@@@@          SYNVEC    EOSTB,*0.                   EK
)@@G@@  &                                 @I@@@@          SYNVEC    EOSTB,*0. EL
)@@G@@                    $                                 @I@@@@          SYEM
)@@G@@NVEC    EOSTB,*0.                     *                                 EN
)@@G@@@I@@@@          SYNVEC    EOSTB,*0.                     (               EO
)@@G@@                  @I@@@@          SYNVEC    EOSTB,*0.                   EP
)@@G@@  %                                 @I@@@@          SYNVEC    EOSTB,*0. EQ
)@@G@@                    :                                 @I@@@@          SYER
)@@G@@NVEC    EOSTB,*0.                     ?                                 ES
)@@G@@@I@@@@          SYNVEC    EOSTB,*0.                     !               ET
)@@G@@                  @I@@@@          SYNVEC    EOSTB,*0.                   EU
)@@G@@  ,                                 @I@@@@          SYNVEC    EOSTB,*0. EV
)@@G@@                    \                                 @I@@@@          SYEW
)@@G@@NVEC    EOSTB,*0.                     0                                 EX
)@@G@@@I@@@@          SYNVEC    EOSTB,*0.                     1               EY
)@@G@@                  @I@@@@          SYNVEC    EOSTB,*0.                   EZ
)@@G@@  2                                 @I@@@@          SYNVEC    EOSTB,*0. FA
)@@G@@                    3                                 @I@@@@          SYFB
)@@G@@NVEC    EOSTB,*0.                     4                                 FC
)@@G@@@I@@@@          SYNVEC    EOSTB,*0.                     5               FD
)@@G@@                  @I@@@@          SYNVEC    EOSTB,*0.                   FE
)@@G@@  6                                 @I@@@@          SYNVEC    EOSTB,*0. FF
)@@G@@                    7                                 @I@@@@          SYFG
)@@G@@NVEC    EOSTB,*0.                     8                                 FH
)@@G@@@I@@@@          SYNVEC    EOSTB,*0.                     9               FI
)@@G@@                  @I@@@@          SYNVEC    EOSTB,*0.                   FJ
)@@G@@  '                                 @I@@@@          SYNVEC    *STOP,*0. FK
)@@G@@                    ;                                 @I@@@@          SYFL
)@@G@@NVEC    EOSTB,*0.                     /                                 FM
)@@G@@@I@@@@          SYNVEC    EOSTB,*0.                     .               FN
)@@G@@                  @I@@@@          SYNVEC    EOSTB,*0.                   FO
)@@G@@  "                                 @I@@@@          SYNVEC    EOSTB,*0. FP
)@@G@@                    _                                 @I@@@@.           FQ
)@@G@@                                                                        FR
)@@G@@@I@@@@. BEGIN FLITB                                                     FS
)@@G@@                  @I@@@@. FOR(NUMBER) CONTIN                            FT
)@@G@@                                    @I@@@@. FOR(TERMINATOR) STOPSH      FU
)@@G@@                                                      @I@@@@. ELSE ERRORFV
)@@G@@                                                                        FW
)@@G@@@I@@@@. END FLITB                                                       FX
)@@G@@                  @I@@@@FLITB*    SYNVEC    *ERROR,*0.                  FY
)@@G@@  @                                 @I@@@@          SYNVEC    *ERROR,*0.FZ
)@@G@@                    [                                 @I@@@@          SYGA
)@@G@@NVEC    *STOPSH,*0.                   ]                                 GB
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    #               GC
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  GD
)@@G@@  ^                                 @I@@@@          SYNVEC    *STOPSH,*0GE
)@@G@@.                                                     @I@@@@          SYGF
)@@G@@NVEC    *ERROR,*0.                    A                                 GG
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    B               GH
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  GI
)@@G@@  C                                 @I@@@@          SYNVEC    *ERROR,*0.GJ
)@@G@@                    D                                 @I@@@@          SYGK
)@@G@@NVEC    *ERROR,*0.                    E                                 GL
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    F               GM
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  GN
)@@G@@  G                                 @I@@@@          SYNVEC    *ERROR,*0.GO
)@@G@@                    H                                 @I@@@@          SYGP
)@@G@@NVEC    *ERROR,*0.                    I                                 GQ
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    J               GR
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  GS
)@@G@@  K                                 @I@@@@          SYNVEC    *ERROR,*0.GT
)@@G@@                    L                                 @I@@@@          SYGU
)@@G@@NVEC    *ERROR,*0.                    M                                 GV
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    N               GW
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  GX
)@@G@@  O                                 @I@@@@          SYNVEC    *ERROR,*0.GY
)@@G@@                    P                                 @I@@@@          SYGZ
)@@G@@NVEC    *ERROR,*0.                    Q                                 HA
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    R               HB
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  HC
)@@G@@  S                                 @I@@@@          SYNVEC    *ERROR,*0.HD
)@@G@@                    T                                 @I@@@@          SYHE
)@@G@@NVEC    *ERROR,*0.                    U                                 HF
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    V               HG
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  HH
)@@G@@  W                                 @I@@@@          SYNVEC    *ERROR,*0.HI
)@@G@@                    X                                 @I@@@@          SYHJ
)@@G@@NVEC    *ERROR,*0.                    Y                                 HK
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    Z               HL
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,*0.                 HM
)@@G@@  )                                 @I@@@@          SYNVEC    *ERROR,*0.HN
)@@G@@                    -                                 @I@@@@          SYHO
)@@G@@NVEC    *ERROR,*0.                    +                                 HP
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    <               HQ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  HR
)@@G@@  =                                 @I@@@@          SYNVEC    *STOPSH,*0HS
)@@G@@.                   >                                 @I@@@@          SYHT
)@@G@@NVEC    *ERROR,*0.                    &                                 HU
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    $               HV
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  HW
)@@G@@  *                                 @I@@@@          SYNVEC    *ERROR,*0.HX
)@@G@@                    (                                 @I@@@@          SYHY
)@@G@@NVEC    *ERROR,*0.                    %                                 HZ
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    :               IA
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  IB
)@@G@@  ?                                 @I@@@@          SYNVEC    *ERROR,*0.IC
)@@G@@                    !                                 @I@@@@          SYID
)@@G@@NVEC    *STOPSH,*0.                   ,                                 IE
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    \               IF
)@@G@@                  @I@@@@          SYNVEC    FLITB,*0.                   IG
)@@G@@  0                                 @I@@@@          SYNVEC    FLITB,*0. IH
)@@G@@                    1                                 @I@@@@          SYII
)@@G@@NVEC    FLITB,*0.                     2                                 IJ
)@@G@@@I@@@@          SYNVEC    FLITB,*0.                     3               IK
)@@G@@                  @I@@@@          SYNVEC    FLITB,*0.                   IL
)@@G@@  4                                 @I@@@@          SYNVEC    FLITB,*0. IM
)@@G@@                    5                                 @I@@@@          SYIN
)@@G@@NVEC    FLITB,*0.                     6                                 IO
)@@G@@@I@@@@          SYNVEC    FLITB,*0.                     7               IP
)@@G@@                  @I@@@@          SYNVEC    FLITB,*0.                   IQ
)@@G@@  8                                 @I@@@@          SYNVEC    FLITB,*0. IR
)@@G@@                    9                                 @I@@@@          SYIS
)@@G@@NVEC    *ERROR,*0.                    '                                 IT
)@@G@@@I@@@@          SYNVEC    *STOPSH,*0.                   ;               IU
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  IV
)@@G@@  /                                 @I@@@@          SYNVEC    *ERROR,*0.IW
)@@G@@                    .                                 @I@@@@          SYIX
)@@G@@NVEC    *ERROR,*0.                    "                                 IY
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    _               IZ
)@@G@@                  @I@@@@.                                               JA
)@@G@@                                    @I@@@@. BEGIN FRWDTB                JB
)@@G@@                                                      @I@@@@. FOR(BLANK)JC
)@@G@@ CONTIN                                                                 JD
)@@G@@@I@@@@. FOR(EQUAL) PUT(EQTYP) STOP                                      JE
)@@G@@                  @I@@@@. FOR(RIGHTPAREN) PUT(RPTYP) STOP               JF
)@@G@@                                    @I@@@@. FOR(RIGHTBR) PUT(RBTYP) STOPJG
)@@G@@                                                      @I@@@@. FOR(COMMA)JH
)@@G@@ PUT(CMATYP) STOP                                                       JI
)@@G@@@I@@@@. FOR(COLON) PUT(CLNTYP) STOP                                     JJ
)@@G@@                  @I@@@@. FOR(EOS) PUT(EOSTYP) STOP                     JK
)@@G@@                                    @I@@@@. ELSE PUT(NBTYP) STOPSH      JL
)@@G@@                                                      @I@@@@. END FRWDTBJM
)@@G@@                                                                        JN
)@@G@@@I@@@@FRWDTB*   SYNVEC    *STOPSH,NBTYP.                @               JO
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NBTYP.              JP
)@@G@@  [                                 @I@@@@          SYNVEC    *STOP,RBTYJQ
)@@G@@P.                  ]                                 @I@@@@          SYJR
)@@G@@NVEC    *STOPSH,NBTYP.                #                                 JS
)@@G@@@I@@@@          SYNVEC    *STOPSH,NBTYP.                ^               JT
)@@G@@                  @I@@@@          SYNVEC    FRWDTB,*0.                  JU
)@@G@@                                    @I@@@@          SYNVEC    *STOPSH,NBJV
)@@G@@TYP.                A                                 @I@@@@          SYJW
)@@G@@NVEC    *STOPSH,NBTYP.                B                                 JX
)@@G@@@I@@@@          SYNVEC    *STOPSH,NBTYP.                C               JY
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NBTYP.              JZ
)@@G@@  D                                 @I@@@@          SYNVEC    *STOPSH,NBKA
)@@G@@TYP.                E                                 @I@@@@          SYKB
)@@G@@NVEC    *STOPSH,NBTYP.                F                                 KC
)@@G@@@I@@@@          SYNVEC    *STOPSH,NBTYP.                G               KD
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NBTYP.              KE
)@@G@@  H                                 @I@@@@          SYNVEC    *STOPSH,NBKF
)@@G@@TYP.                I                                 @I@@@@          SYKG
)@@G@@NVEC    *STOPSH,NBTYP.                J                                 KH
)@@G@@@I@@@@          SYNVEC    *STOPSH,NBTYP.                K               KI
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NBTYP.              KJ
)@@G@@  L                                 @I@@@@          SYNVEC    *STOPSH,NBKK
)@@G@@TYP.                M                                 @I@@@@          SYKL
)@@G@@NVEC    *STOPSH,NBTYP.                N                                 KM
)@@G@@@I@@@@          SYNVEC    *STOPSH,NBTYP.                O               KN
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NBTYP.              KO
)@@G@@  P                                 @I@@@@          SYNVEC    *STOPSH,NBKP
)@@G@@TYP.                Q                                 @I@@@@          SYKQ
)@@G@@NVEC    *STOPSH,NBTYP.                R                                 KR
)@@G@@@I@@@@          SYNVEC    *STOPSH,NBTYP.                S               KS
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NBTYP.              KT
)@@G@@  T                                 @I@@@@          SYNVEC    *STOPSH,NBKU
)@@G@@TYP.                U                                 @I@@@@          SYKV
)@@G@@NVEC    *STOPSH,NBTYP.                V                                 KW
)@@G@@@I@@@@          SYNVEC    *STOPSH,NBTYP.                W               KX
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NBTYP.              KY
)@@G@@  X                                 @I@@@@          SYNVEC    *STOPSH,NBKZ
)@@G@@TYP.                Y                                 @I@@@@          SYLA
)@@G@@NVEC    *STOPSH,NBTYP.                Z                                 LB
)@@G@@@I@@@@          SYNVEC    *STOP,RPTYP.                  )               LC
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NBTYP.              LD
)@@G@@  -                                 @I@@@@          SYNVEC    *STOPSH,NBLE
)@@G@@TYP.                +                                 @I@@@@          SYLF
)@@G@@NVEC    *STOPSH,NBTYP.                <                                 LG
)@@G@@@I@@@@          SYNVEC    *STOP,EQTYP.                  =               LH
)@@G@@                  @I@@@@          SYNVEC    *STOP,RBTYP.                LI
)@@G@@  >                                 @I@@@@          SYNVEC    *STOPSH,NBLJ
)@@G@@TYP.                &                                 @I@@@@          SYLK
)@@G@@NVEC    *STOPSH,NBTYP.                $                                 LL
)@@G@@@I@@@@          SYNVEC    *STOPSH,NBTYP.                *               LM
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NBTYP.              LN
)@@G@@  (                                 @I@@@@          SYNVEC    *STOPSH,NBLO
)@@G@@TYP.                %                                 @I@@@@          SYLP
)@@G@@NVEC    *STOP,CLNTYP.                 :                                 LQ
)@@G@@@I@@@@          SYNVEC    *STOPSH,NBTYP.                ?               LR
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NBTYP.              LS
)@@G@@  !                                 @I@@@@          SYNVEC    *STOP,CMATLT
)@@G@@YP.                 ,                                 @I@@@@          SYLU
)@@G@@NVEC    *STOPSH,NBTYP.                \                                 LV
)@@G@@@I@@@@          SYNVEC    *STOPSH,NBTYP.                0               LW
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NBTYP.              LX
)@@G@@  1                                 @I@@@@          SYNVEC    *STOPSH,NBLY
)@@G@@TYP.                2                                 @I@@@@          SYLZ
)@@G@@NVEC    *STOPSH,NBTYP.                3                                 MA
)@@G@@@I@@@@          SYNVEC    *STOPSH,NBTYP.                4               MB
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NBTYP.              MC
)@@G@@  5                                 @I@@@@          SYNVEC    *STOPSH,NBMD
)@@G@@TYP.                6                                 @I@@@@          SYME
)@@G@@NVEC    *STOPSH,NBTYP.                7                                 MF
)@@G@@@I@@@@          SYNVEC    *STOPSH,NBTYP.                8               MG
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NBTYP.              MH
)@@G@@  9                                 @I@@@@          SYNVEC    *STOPSH,NBMI
)@@G@@TYP.                '                                 @I@@@@          SYMJ
)@@G@@NVEC    *STOP,EOSTYP.                 ;                                 MK
)@@G@@@I@@@@          SYNVEC    *STOPSH,NBTYP.                /               ML
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,NBTYP.              MM
)@@G@@  .                                 @I@@@@          SYNVEC    *STOPSH,NBMN
)@@G@@TYP.                "                                 @I@@@@          SYMO
)@@G@@NVEC    *STOPSH,NBTYP.                _                                 MP
)@@G@@@I@@@@.                                                                 MQ
)@@G@@                  @I@@@@. BEGIN GOTFTB                                  MR
)@@G@@                                    @I@@@@. FOR(LEFTPAREN) PUT(FGOTYP) SMS
)@@G@@TOP                                                   @I@@@@. FOR(LEFTBRMT
)@@G@@) PUT(FTOTYP) STOP                                                      MU
)@@G@@@I@@@@. ELSE ERROR                                                      MV
)@@G@@                  @I@@@@. END GOTFTB                                    MW
)@@G@@                                    @I@@@@GOTFTB*   SYNVEC    *ERROR,*0.MX
)@@G@@                    @                                 @I@@@@          SYMY
)@@G@@NVEC    *STOP,FTOTYP.                 [                                 MZ
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    ]               NA
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  NB
)@@G@@  #                                 @I@@@@          SYNVEC    *ERROR,*0.NC
)@@G@@                    ^                                 @I@@@@          SYND
)@@G@@NVEC    *ERROR,*0.                                                      NE
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    A               NF
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  NG
)@@G@@  B                                 @I@@@@          SYNVEC    *ERROR,*0.NH
)@@G@@                    C                                 @I@@@@          SYNI
)@@G@@NVEC    *ERROR,*0.                    D                                 NJ
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    E               NK
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  NL
)@@G@@  F                                 @I@@@@          SYNVEC    *ERROR,*0.NM
)@@G@@                    G                                 @I@@@@          SYNN
)@@G@@NVEC    *ERROR,*0.                    H                                 NO
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    I               NP
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  NQ
)@@G@@  J                                 @I@@@@          SYNVEC    *ERROR,*0.NR
)@@G@@                    K                                 @I@@@@          SYNS
)@@G@@NVEC    *ERROR,*0.                    L                                 NT
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    M               NU
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  NV
)@@G@@  N                                 @I@@@@          SYNVEC    *ERROR,*0.NW
)@@G@@                    O                                 @I@@@@          SYNX
)@@G@@NVEC    *ERROR,*0.                    P                                 NY
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    Q               NZ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  OA
)@@G@@  R                                 @I@@@@          SYNVEC    *ERROR,*0.OB
)@@G@@                    S                                 @I@@@@          SYOC
)@@G@@NVEC    *ERROR,*0.                    T                                 OD
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    U               OE
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  OF
)@@G@@  V                                 @I@@@@          SYNVEC    *ERROR,*0.OG
)@@G@@                    W                                 @I@@@@          SYOH
)@@G@@NVEC    *ERROR,*0.                    X                                 OI
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    Y               OJ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  OK
)@@G@@  Z                                 @I@@@@          SYNVEC    *ERROR,*0.OL
)@@G@@                    )                                 @I@@@@          SYOM
)@@G@@NVEC    *ERROR,*0.                    -                                 ON
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    +               OO
)@@G@@                  @I@@@@          SYNVEC    *STOP,FTOTYP.               OP
)@@G@@  <                                 @I@@@@          SYNVEC    *ERROR,*0.OQ
)@@G@@                    =                                 @I@@@@          SYOR
)@@G@@NVEC    *ERROR,*0.                    >                                 OS
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    &               OT
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  OU
)@@G@@  $                                 @I@@@@          SYNVEC    *ERROR,*0.OV
)@@G@@                    *                                 @I@@@@          SYOW
)@@G@@NVEC    *STOP,FGOTYP.                 (                                 OX
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    %               OY
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  OZ
)@@G@@  :                                 @I@@@@          SYNVEC    *ERROR,*0.PA
)@@G@@                    ?                                 @I@@@@          SYPB
)@@G@@NVEC    *ERROR,*0.                    !                                 PC
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    ,               PD
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  PE
)@@G@@  \                                 @I@@@@          SYNVEC    *ERROR,*0.PF
)@@G@@                    0                                 @I@@@@          SYPG
)@@G@@NVEC    *ERROR,*0.                    1                                 PH
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    2               PI
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  PJ
)@@G@@  3                                 @I@@@@          SYNVEC    *ERROR,*0.PK
)@@G@@                    4                                 @I@@@@          SYPL
)@@G@@NVEC    *ERROR,*0.                    5                                 PM
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    6               PN
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  PO
)@@G@@  7                                 @I@@@@          SYNVEC    *ERROR,*0.PP
)@@G@@                    8                                 @I@@@@          SYPQ
)@@G@@NVEC    *ERROR,*0.                    9                                 PR
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    '               PS
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  PT
)@@G@@  ;                                 @I@@@@          SYNVEC    *ERROR,*0.PU
)@@G@@                    /                                 @I@@@@          SYPV
)@@G@@NVEC    *ERROR,*0.                    .                                 PW
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    "               PX
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  PY
)@@G@@  _                                 @I@@@@.                             PZ
)@@G@@                                                      @I@@@@. BEGIN GOTOQA
)@@G@@TB                                                                      QB
)@@G@@@I@@@@. FOR(SGOSYM) GOTO(GOTSTB)                                        QC
)@@G@@                  @I@@@@. FOR(FGOSYM) GOTO(GOTFTB)                      QD
)@@G@@                                    @I@@@@. FOR(LEFTPAREN) PUT(UGOTYP) SQE
)@@G@@TOP                                                   @I@@@@. FOR(LEFTBRQF
)@@G@@) PUT(UTOTYP) STOP                                                      QG
)@@G@@@I@@@@. ELSE ERROR                                                      QH
)@@G@@                  @I@@@@. END GOTOTB                                    QI
)@@G@@                                    @I@@@@GOTOTB*   SYNVEC    *ERROR,*0.QJ
)@@G@@                    @                                 @I@@@@          SYQK
)@@G@@NVEC    *STOP,UTOTYP.                 [                                 QL
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    ]               QM
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  QN
)@@G@@  #                                 @I@@@@          SYNVEC    *ERROR,*0.QO
)@@G@@                    ^                                 @I@@@@          SYQP
)@@G@@NVEC    *ERROR,*0.                                                      QQ
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    A               QR
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  QS
)@@G@@  B                                 @I@@@@          SYNVEC    *ERROR,*0.QT
)@@G@@                    C                                 @I@@@@          SYQU
)@@G@@NVEC    *ERROR,*0.                    D                                 QV
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    E               QW
)@@G@@                  @I@@@@          SYNVEC    GOTFTB,*0.                  QX
)@@G@@  F                                 @I@@@@          SYNVEC    *ERROR,*0.QY
)@@G@@                    G                                 @I@@@@          SYQZ
)@@G@@NVEC    *ERROR,*0.                    H                                 RA
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    I               RB
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  RC
)@@G@@  J                                 @I@@@@          SYNVEC    *ERROR,*0.RD
)@@G@@                    K                                 @I@@@@          SYRE
)@@G@@NVEC    *ERROR,*0.                    L                                 RF
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    M               RG
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  RH
)@@G@@  N                                 @I@@@@          SYNVEC    *ERROR,*0.RI
)@@G@@                    O                                 @I@@@@          SYRJ
)@@G@@NVEC    *ERROR,*0.                    P                                 RK
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    Q               RL
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  RM
)@@G@@  R                                 @I@@@@          SYNVEC    GOTSTB,*0.RN
)@@G@@                    S                                 @I@@@@          SYRO
)@@G@@NVEC    *ERROR,*0.                    T                                 RP
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    U               RQ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  RR
)@@G@@  V                                 @I@@@@          SYNVEC    *ERROR,*0.RS
)@@G@@                    W                                 @I@@@@          SYRT
)@@G@@NVEC    *ERROR,*0.                    X                                 RU
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    Y               RV
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  RW
)@@G@@  Z                                 @I@@@@          SYNVEC    *ERROR,*0.RX
)@@G@@                    )                                 @I@@@@          SYRY
)@@G@@NVEC    *ERROR,*0.                    -                                 RZ
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    +               SA
)@@G@@                  @I@@@@          SYNVEC    *STOP,UTOTYP.               SB
)@@G@@  <                                 @I@@@@          SYNVEC    *ERROR,*0.SC
)@@G@@                    =                                 @I@@@@          SYSD
)@@G@@NVEC    *ERROR,*0.                    >                                 SE
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    &               SF
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  SG
)@@G@@  $                                 @I@@@@          SYNVEC    *ERROR,*0.SH
)@@G@@                    *                                 @I@@@@          SYSI
)@@G@@NVEC    *STOP,UGOTYP.                 (                                 SJ
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    %               SK
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  SL
)@@G@@  :                                 @I@@@@          SYNVEC    *ERROR,*0.SM
)@@G@@                    ?                                 @I@@@@          SYSN
)@@G@@NVEC    *ERROR,*0.                    !                                 SO
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    ,               SP
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  SQ
)@@G@@  \                                 @I@@@@          SYNVEC    *ERROR,*0.SR
)@@G@@                    0                                 @I@@@@          SYSS
)@@G@@NVEC    *ERROR,*0.                    1                                 ST
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    2               SU
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  SV
)@@G@@  3                                 @I@@@@          SYNVEC    *ERROR,*0.SW
)@@G@@                    4                                 @I@@@@          SYSX
)@@G@@NVEC    *ERROR,*0.                    5                                 SY
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    6               SZ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  TA
)@@G@@  7                                 @I@@@@          SYNVEC    *ERROR,*0.TB
)@@G@@                    8                                 @I@@@@          SYTC
)@@G@@NVEC    *ERROR,*0.                    9                                 TD
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    '               TE
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  TF
)@@G@@  ;                                 @I@@@@          SYNVEC    *ERROR,*0.TG
)@@G@@                    /                                 @I@@@@          SYTH
)@@G@@NVEC    *ERROR,*0.                    .                                 TI
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    "               TJ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  TK
)@@G@@  _                                 @I@@@@.                             TL
)@@G@@                                                      @I@@@@. BEGIN GOTSTM
)@@G@@TB                                                                      TN
)@@G@@@I@@@@. FOR(LEFTPAREN) PUT(SGOTYP) STOP                                 TO
)@@G@@                  @I@@@@. FOR(LEFTBR) PUT(STOTYP) STOP                  TP
)@@G@@                                    @I@@@@. ELSE ERROR                  TQ
)@@G@@                                                      @I@@@@. END GOTSTBTR
)@@G@@                                                                        TS
)@@G@@@I@@@@GOTSTB*   SYNVEC    *ERROR,*0.                    @               TT
)@@G@@                  @I@@@@          SYNVEC    *STOP,STOTYP.               TU
)@@G@@  [                                 @I@@@@          SYNVEC    *ERROR,*0.TV
)@@G@@                    ]                                 @I@@@@          SYTW
)@@G@@NVEC    *ERROR,*0.                    #                                 TX
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    ^               TY
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  TZ
)@@G@@                                    @I@@@@          SYNVEC    *ERROR,*0.UA
)@@G@@                    A                                 @I@@@@          SYUB
)@@G@@NVEC    *ERROR,*0.                    B                                 UC
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    C               UD
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  UE
)@@G@@  D                                 @I@@@@          SYNVEC    *ERROR,*0.UF
)@@G@@                    E                                 @I@@@@          SYUG
)@@G@@NVEC    *ERROR,*0.                    F                                 UH
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    G               UI
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  UJ
)@@G@@  H                                 @I@@@@          SYNVEC    *ERROR,*0.UK
)@@G@@                    I                                 @I@@@@          SYUL
)@@G@@NVEC    *ERROR,*0.                    J                                 UM
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    K               UN
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  UO
)@@G@@  L                                 @I@@@@          SYNVEC    *ERROR,*0.UP
)@@G@@                    M                                 @I@@@@          SYUQ
)@@G@@NVEC    *ERROR,*0.                    N                                 UR
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    O               US
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  UT
)@@G@@  P                                 @I@@@@          SYNVEC    *ERROR,*0.UU
)@@G@@                    Q                                 @I@@@@          SYUV
)@@G@@NVEC    *ERROR,*0.                    R                                 UW
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    S               UX
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  UY
)@@G@@  T                                 @I@@@@          SYNVEC    *ERROR,*0.UZ
)@@G@@                    U                                 @I@@@@          SYVA
)@@G@@NVEC    *ERROR,*0.                    V                                 VB
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    W               VC
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  VD
)@@G@@  X                                 @I@@@@          SYNVEC    *ERROR,*0.VE
)@@G@@                    Y                                 @I@@@@          SYVF
)@@G@@NVEC    *ERROR,*0.                    Z                                 VG
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    )               VH
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  VI
)@@G@@  -                                 @I@@@@          SYNVEC    *ERROR,*0.VJ
)@@G@@                    +                                 @I@@@@          SYVK
)@@G@@NVEC    *STOP,STOTYP.                 <                                 VL
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    =               VM
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  VN
)@@G@@  >                                 @I@@@@          SYNVEC    *ERROR,*0.VO
)@@G@@                    &                                 @I@@@@          SYVP
)@@G@@NVEC    *ERROR,*0.                    $                                 VQ
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    *               VR
)@@G@@                  @I@@@@          SYNVEC    *STOP,SGOTYP.               VS
)@@G@@  (                                 @I@@@@          SYNVEC    *ERROR,*0.VT
)@@G@@                    %                                 @I@@@@          SYVU
)@@G@@NVEC    *ERROR,*0.                    :                                 VV
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    ?               VW
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  VX
)@@G@@  !                                 @I@@@@          SYNVEC    *ERROR,*0.VY
)@@G@@                    ,                                 @I@@@@          SYVZ
)@@G@@NVEC    *ERROR,*0.                    \                                 WA
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    0               WB
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  WC
)@@G@@  1                                 @I@@@@          SYNVEC    *ERROR,*0.WD
)@@G@@                    2                                 @I@@@@          SYWE
)@@G@@NVEC    *ERROR,*0.                    3                                 WF
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    4               WG
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  WH
)@@G@@  5                                 @I@@@@          SYNVEC    *ERROR,*0.WI
)@@G@@                    6                                 @I@@@@          SYWJ
)@@G@@NVEC    *ERROR,*0.                    7                                 WK
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    8               WL
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  WM
)@@G@@  9                                 @I@@@@          SYNVEC    *ERROR,*0.WN
)@@G@@                    '                                 @I@@@@          SYWO
)@@G@@NVEC    *ERROR,*0.                    ;                                 WP
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    /               WQ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  WR
)@@G@@  .                                 @I@@@@          SYNVEC    *ERROR,*0.WS
)@@G@@                    "                                 @I@@@@          SYWT
)@@G@@NVEC    *ERROR,*0.                    _                                 WU
)@@G@@@I@@@@.                                                                 WV
)@@G@@                  @I@@@@. BEGIN IBLKTB                                  WW
)@@G@@                                    @I@@@@. FOR(BLANK) GOTO(FRWDTB)     WX
)@@G@@                                                      @I@@@@. FOR(EOS) PWY
)@@G@@UT(EOSTYP) STOP                                                         WZ
)@@G@@@I@@@@. ELSE ERROR                                                      XA
)@@G@@                  @I@@@@. END IBLKTB                                    XB
)@@G@@                                    @I@@@@IBLKTB*   SYNVEC    *ERROR,*0.XC
)@@G@@                    @                                 @I@@@@          SYXD
)@@G@@NVEC    *ERROR,*0.                    [                                 XE
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    ]               XF
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  XG
)@@G@@  #                                 @I@@@@          SYNVEC    *ERROR,*0.XH
)@@G@@                    ^                                 @I@@@@          SYXI
)@@G@@NVEC    FRWDTB,*0.                                                      XJ
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    A               XK
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  XL
)@@G@@  B                                 @I@@@@          SYNVEC    *ERROR,*0.XM
)@@G@@                    C                                 @I@@@@          SYXN
)@@G@@NVEC    *ERROR,*0.                    D                                 XO
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    E               XP
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  XQ
)@@G@@  F                                 @I@@@@          SYNVEC    *ERROR,*0.XR
)@@G@@                    G                                 @I@@@@          SYXS
)@@G@@NVEC    *ERROR,*0.                    H                                 XT
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    I               XU
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  XV
)@@G@@  J                                 @I@@@@          SYNVEC    *ERROR,*0.XW
)@@G@@                    K                                 @I@@@@          SYXX
)@@G@@NVEC    *ERROR,*0.                    L                                 XY
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    M               XZ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  YA
)@@G@@  N                                 @I@@@@          SYNVEC    *ERROR,*0.YB
)@@G@@                    O                                 @I@@@@          SYYC
)@@G@@NVEC    *ERROR,*0.                    P                                 YD
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    Q               YE
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  YF
)@@G@@  R                                 @I@@@@          SYNVEC    *ERROR,*0.YG
)@@G@@                    S                                 @I@@@@          SYYH
)@@G@@NVEC    *ERROR,*0.                    T                                 YI
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    U               YJ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  YK
)@@G@@  V                                 @I@@@@          SYNVEC    *ERROR,*0.YL
)@@G@@                    W                                 @I@@@@          SYYM
)@@G@@NVEC    *ERROR,*0.                    X                                 YN
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    Y               YO
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  YP
)@@G@@  Z                                 @I@@@@          SYNVEC    *ERROR,*0.YQ
)@@G@@                    )                                 @I@@@@          SYYR
)@@G@@NVEC    *ERROR,*0.                    -                                 YS
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    +               YT
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  YU
)@@G@@  <                                 @I@@@@          SYNVEC    *ERROR,*0.YV
)@@G@@                    =                                 @I@@@@          SYYW
)@@G@@NVEC    *ERROR,*0.                    >                                 YX
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    &               YY
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  YZ
)@@G@@  $                                 @I@@@@          SYNVEC    *ERROR,*0.ZA
)@@G@@                    *                                 @I@@@@          SYZB
)@@G@@NVEC    *ERROR,*0.                    (                                 ZC
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    %               ZD
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  ZE
)@@G@@  :                                 @I@@@@          SYNVEC    *ERROR,*0.ZF
)@@G@@                    ?                                 @I@@@@          SYZG
)@@G@@NVEC    *ERROR,*0.                    !                                 ZH
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    ,               ZI
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  ZJ
)@@G@@  \                                 @I@@@@          SYNVEC    *ERROR,*0.ZK
)@@G@@                    0                                 @I@@@@          SYZL
)@@G@@NVEC    *ERROR,*0.                    1                                 ZM
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    2               ZN
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  ZO
)@@G@@  3                                 @I@@@@          SYNVEC    *ERROR,*0.ZP
)@@G@@                    4                                 @I@@@@          SYZQ
)@@G@@NVEC    *ERROR,*0.                    5                                 ZR
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    6               ZS
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  ZT
)@@G@@  7                                 @I@@@@          SYNVEC    *ERROR,*0.ZU
)@@G@@                    8                                 @I@@@@          SYZV
)@@G@@NVEC    *ERROR,*0.                    9                                 ZW
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    '               ZX
)@@G@@                  @I@@@@          SYNVEC    *STOP,EOSTYP.               ZY
)@@G@@  ;                                 @I@@@@          SYNVEC    *ERROR,*0.ZZ
)@@G@@                    /                                 @I@@@@          SYAA
)@@G@@NVEC    *ERROR,*0.                    .                                 AB
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    "               AC
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  AD
)@@G@@  _                                 @I@@@@.                             AE
)@@G@@                                                      @I@@@@. BEGIN INTGAF
)@@G@@TB                                                                      AG
)@@G@@@I@@@@. FOR(NUMBER) CONTIN                                              AH
)@@G@@                  @I@@@@. FOR(TERMINATOR) PUT(ILITYP) STOPSH            AI
)@@G@@                                    @I@@@@. FOR(DOT) PUT(FLITYP) GOTO(FLAJ
)@@G@@ITB)                                                  @I@@@@. ELSE ERRORAK
)@@G@@                                                                        AL
)@@G@@@I@@@@. END INTGTB                                                      AM
)@@G@@                  @I@@@@INTGTB*   SYNVEC    *ERROR,*0.                  AN
)@@G@@  @                                 @I@@@@          SYNVEC    *ERROR,*0.AO
)@@G@@                    [                                 @I@@@@          SYAP
)@@G@@NVEC    *STOPSH,ILITYP.               ]                                 AQ
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    #               AR
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  AS
)@@G@@  ^                                 @I@@@@          SYNVEC    *STOPSH,ILAT
)@@G@@ITYP.                                                 @I@@@@          SYAU
)@@G@@NVEC    *ERROR,*0.                    A                                 AV
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    B               AW
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  AX
)@@G@@  C                                 @I@@@@          SYNVEC    *ERROR,*0.AY
)@@G@@                    D                                 @I@@@@          SYAZ
)@@G@@NVEC    *ERROR,*0.                    E                                 BA
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    F               BB
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  BC
)@@G@@  G                                 @I@@@@          SYNVEC    *ERROR,*0.BD
)@@G@@                    H                                 @I@@@@          SYBE
)@@G@@NVEC    *ERROR,*0.                    I                                 BF
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    J               BG
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  BH
)@@G@@  K                                 @I@@@@          SYNVEC    *ERROR,*0.BI
)@@G@@                    L                                 @I@@@@          SYBJ
)@@G@@NVEC    *ERROR,*0.                    M                                 BK
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    N               BL
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  BM
)@@G@@  O                                 @I@@@@          SYNVEC    *ERROR,*0.BN
)@@G@@                    P                                 @I@@@@          SYBO
)@@G@@NVEC    *ERROR,*0.                    Q                                 BP
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    R               BQ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  BR
)@@G@@  S                                 @I@@@@          SYNVEC    *ERROR,*0.BS
)@@G@@                    T                                 @I@@@@          SYBT
)@@G@@NVEC    *ERROR,*0.                    U                                 BU
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    V               BV
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  BW
)@@G@@  W                                 @I@@@@          SYNVEC    *ERROR,*0.BX
)@@G@@                    X                                 @I@@@@          SYBY
)@@G@@NVEC    *ERROR,*0.                    Y                                 BZ
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    Z               CA
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,ILITYP.             CB
)@@G@@  )                                 @I@@@@          SYNVEC    *ERROR,*0.CC
)@@G@@                    -                                 @I@@@@          SYCD
)@@G@@NVEC    *ERROR,*0.                    +                                 CE
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    <               CF
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  CG
)@@G@@  =                                 @I@@@@          SYNVEC    *STOPSH,ILCH
)@@G@@ITYP.               >                                 @I@@@@          SYCI
)@@G@@NVEC    *ERROR,*0.                    &                                 CJ
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    $               CK
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  CL
)@@G@@  *                                 @I@@@@          SYNVEC    *ERROR,*0.CM
)@@G@@                    (                                 @I@@@@          SYCN
)@@G@@NVEC    *ERROR,*0.                    %                                 CO
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    :               CP
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  CQ
)@@G@@  ?                                 @I@@@@          SYNVEC    *ERROR,*0.CR
)@@G@@                    !                                 @I@@@@          SYCS
)@@G@@NVEC    *STOPSH,ILITYP.               ,                                 CT
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    \               CU
)@@G@@                  @I@@@@          SYNVEC    INTGTB,*0.                  CV
)@@G@@  0                                 @I@@@@          SYNVEC    INTGTB,*0.CW
)@@G@@                    1                                 @I@@@@          SYCX
)@@G@@NVEC    INTGTB,*0.                    2                                 CY
)@@G@@@I@@@@          SYNVEC    INTGTB,*0.                    3               CZ
)@@G@@                  @I@@@@          SYNVEC    INTGTB,*0.                  DA
)@@G@@  4                                 @I@@@@          SYNVEC    INTGTB,*0.DB
)@@G@@                    5                                 @I@@@@          SYDC
)@@G@@NVEC    INTGTB,*0.                    6                                 DD
)@@G@@@I@@@@          SYNVEC    INTGTB,*0.                    7               DE
)@@G@@                  @I@@@@          SYNVEC    INTGTB,*0.                  DF
)@@G@@  8                                 @I@@@@          SYNVEC    INTGTB,*0.DG
)@@G@@                    9                                 @I@@@@          SYDH
)@@G@@NVEC    *ERROR,*0.                    '                                 DI
)@@G@@@I@@@@          SYNVEC    *STOPSH,ILITYP.               ;               DJ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  DK
)@@G@@  /                                 @I@@@@          SYNVEC    FLITB,FLITDL
)@@G@@YP.                 .                                 @I@@@@          SYDM
)@@G@@NVEC    *ERROR,*0.                    "                                 DN
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    _               DO
)@@G@@                  @I@@@@.                                               DP
)@@G@@                                    @I@@@@. BEGIN LBLTB                 DQ
)@@G@@                                                      @I@@@@. FOR(ALPHANDR
)@@G@@UMERIC) GOTO(LBLXTB)                                                    DS
)@@G@@@I@@@@. FOR(BLANK,EOS) STOPSH                                           DT
)@@G@@                  @I@@@@. ELSE ERROR                                    DU
)@@G@@                                    @I@@@@. END LBLTB                   DV
)@@G@@                                                      @I@@@@LBLTB*    SYDW
)@@G@@NVEC    *ERROR,*0.                    @                                 DX
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    [               DY
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  DZ
)@@G@@  ]                                 @I@@@@          SYNVEC    *ERROR,*0.EA
)@@G@@                    #                                 @I@@@@          SYEB
)@@G@@NVEC    *ERROR,*0.                    ^                                 EC
)@@G@@@I@@@@          SYNVEC    *STOPSH,*0.                                   ED
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  EE
)@@G@@  A                                 @I@@@@          SYNVEC    LBLXTB,*0.EF
)@@G@@                    B                                 @I@@@@          SYEG
)@@G@@NVEC    LBLXTB,*0.                    C                                 EH
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    D               EI
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  EJ
)@@G@@  E                                 @I@@@@          SYNVEC    LBLXTB,*0.EK
)@@G@@                    F                                 @I@@@@          SYEL
)@@G@@NVEC    LBLXTB,*0.                    G                                 EM
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    H               EN
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  EO
)@@G@@  I                                 @I@@@@          SYNVEC    LBLXTB,*0.EP
)@@G@@                    J                                 @I@@@@          SYEQ
)@@G@@NVEC    LBLXTB,*0.                    K                                 ER
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    L               ES
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  ET
)@@G@@  M                                 @I@@@@          SYNVEC    LBLXTB,*0.EU
)@@G@@                    N                                 @I@@@@          SYEV
)@@G@@NVEC    LBLXTB,*0.                    O                                 EW
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    P               EX
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  EY
)@@G@@  Q                                 @I@@@@          SYNVEC    LBLXTB,*0.EZ
)@@G@@                    R                                 @I@@@@          SYFA
)@@G@@NVEC    LBLXTB,*0.                    S                                 FB
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    T               FC
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  FD
)@@G@@  U                                 @I@@@@          SYNVEC    LBLXTB,*0.FE
)@@G@@                    V                                 @I@@@@          SYFF
)@@G@@NVEC    LBLXTB,*0.                    W                                 FG
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    X               FH
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  FI
)@@G@@  Y                                 @I@@@@          SYNVEC    LBLXTB,*0.FJ
)@@G@@                    Z                                 @I@@@@          SYFK
)@@G@@NVEC    *ERROR,*0.                    )                                 FL
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    -               FM
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  FN
)@@G@@  +                                 @I@@@@          SYNVEC    *ERROR,*0.FO
)@@G@@                    <                                 @I@@@@          SYFP
)@@G@@NVEC    *ERROR,*0.                    =                                 FQ
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    >               FR
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  FS
)@@G@@  &                                 @I@@@@          SYNVEC    *ERROR,*0.FT
)@@G@@                    $                                 @I@@@@          SYFU
)@@G@@NVEC    *ERROR,*0.                    *                                 FV
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    (               FW
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  FX
)@@G@@  %                                 @I@@@@          SYNVEC    *ERROR,*0.FY
)@@G@@                    :                                 @I@@@@          SYFZ
)@@G@@NVEC    *ERROR,*0.                    ?                                 GA
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    !               GB
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  GC
)@@G@@  ,                                 @I@@@@          SYNVEC    *ERROR,*0.GD
)@@G@@                    \                                 @I@@@@          SYGE
)@@G@@NVEC    LBLXTB,*0.                    0                                 GF
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    1               GG
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  GH
)@@G@@  2                                 @I@@@@          SYNVEC    LBLXTB,*0.GI
)@@G@@                    3                                 @I@@@@          SYGJ
)@@G@@NVEC    LBLXTB,*0.                    4                                 GK
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    5               GL
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  GM
)@@G@@  6                                 @I@@@@          SYNVEC    LBLXTB,*0.GN
)@@G@@                    7                                 @I@@@@          SYGO
)@@G@@NVEC    LBLXTB,*0.                    8                                 GP
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    9               GQ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  GR
)@@G@@  '                                 @I@@@@          SYNVEC    *STOPSH,*0GS
)@@G@@.                   ;                                 @I@@@@          SYGT
)@@G@@NVEC    *ERROR,*0.                    /                                 GU
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    .               GV
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  GW
)@@G@@  "                                 @I@@@@          SYNVEC    *ERROR,*0.GX
)@@G@@                    _                                 @I@@@@.           GY
)@@G@@                                                                        GZ
)@@G@@@I@@@@. BEGIN LBLXTB                                                    HA
)@@G@@                  @I@@@@. FOR(BLANK) STOPSH                             HB
)@@G@@                                    @I@@@@. ELSE CONTIN                 HC
)@@G@@                                                      @I@@@@. END LBLXTBHD
)@@G@@                                                                        HE
)@@G@@@I@@@@LBLXTB*   SYNVEC    LBLXTB,*0.                    @               HF
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  HG
)@@G@@  [                                 @I@@@@          SYNVEC    LBLXTB,*0.HH
)@@G@@                    ]                                 @I@@@@          SYHI
)@@G@@NVEC    LBLXTB,*0.                    #                                 HJ
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    ^               HK
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,*0.                 HL
)@@G@@                                    @I@@@@          SYNVEC    LBLXTB,*0.HM
)@@G@@                    A                                 @I@@@@          SYHN
)@@G@@NVEC    LBLXTB,*0.                    B                                 HO
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    C               HP
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  HQ
)@@G@@  D                                 @I@@@@          SYNVEC    LBLXTB,*0.HR
)@@G@@                    E                                 @I@@@@          SYHS
)@@G@@NVEC    LBLXTB,*0.                    F                                 HT
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    G               HU
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  HV
)@@G@@  H                                 @I@@@@          SYNVEC    LBLXTB,*0.HW
)@@G@@                    I                                 @I@@@@          SYHX
)@@G@@NVEC    LBLXTB,*0.                    J                                 HY
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    K               HZ
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  IA
)@@G@@  L                                 @I@@@@          SYNVEC    LBLXTB,*0.IB
)@@G@@                    M                                 @I@@@@          SYIC
)@@G@@NVEC    LBLXTB,*0.                    N                                 ID
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    O               IE
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  IF
)@@G@@  P                                 @I@@@@          SYNVEC    LBLXTB,*0.IG
)@@G@@                    Q                                 @I@@@@          SYIH
)@@G@@NVEC    LBLXTB,*0.                    R                                 II
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    S               IJ
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  IK
)@@G@@  T                                 @I@@@@          SYNVEC    LBLXTB,*0.IL
)@@G@@                    U                                 @I@@@@          SYIM
)@@G@@NVEC    LBLXTB,*0.                    V                                 IN
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    W               IO
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  IP
)@@G@@  X                                 @I@@@@          SYNVEC    LBLXTB,*0.IQ
)@@G@@                    Y                                 @I@@@@          SYIR
)@@G@@NVEC    LBLXTB,*0.                    Z                                 IS
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    )               IT
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  IU
)@@G@@  -                                 @I@@@@          SYNVEC    LBLXTB,*0.IV
)@@G@@                    +                                 @I@@@@          SYIW
)@@G@@NVEC    LBLXTB,*0.                    <                                 IX
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    =               IY
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  IZ
)@@G@@  >                                 @I@@@@          SYNVEC    LBLXTB,*0.JA
)@@G@@                    &                                 @I@@@@          SYJB
)@@G@@NVEC    LBLXTB,*0.                    $                                 JC
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    *               JD
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  JE
)@@G@@  (                                 @I@@@@          SYNVEC    LBLXTB,*0.JF
)@@G@@                    %                                 @I@@@@          SYJG
)@@G@@NVEC    LBLXTB,*0.                    :                                 JH
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    ?               JI
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  JJ
)@@G@@  !                                 @I@@@@          SYNVEC    LBLXTB,*0.JK
)@@G@@                    ,                                 @I@@@@          SYJL
)@@G@@NVEC    LBLXTB,*0.                    \                                 JM
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    0               JN
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  JO
)@@G@@  1                                 @I@@@@          SYNVEC    LBLXTB,*0.JP
)@@G@@                    2                                 @I@@@@          SYJQ
)@@G@@NVEC    LBLXTB,*0.                    3                                 JR
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    4               JS
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  JT
)@@G@@  5                                 @I@@@@          SYNVEC    LBLXTB,*0.JU
)@@G@@                    6                                 @I@@@@          SYJV
)@@G@@NVEC    LBLXTB,*0.                    7                                 JW
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    8               JX
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  JY
)@@G@@  9                                 @I@@@@          SYNVEC    LBLXTB,*0.JZ
)@@G@@                    '                                 @I@@@@          SYKA
)@@G@@NVEC    LBLXTB,*0.                    ;                                 KB
)@@G@@@I@@@@          SYNVEC    LBLXTB,*0.                    /               KC
)@@G@@                  @I@@@@          SYNVEC    LBLXTB,*0.                  KD
)@@G@@  .                                 @I@@@@          SYNVEC    LBLXTB,*0.KE
)@@G@@                    "                                 @I@@@@          SYKF
)@@G@@NVEC    LBLXTB,*0.                    _                                 KG
)@@G@@@I@@@@.                                                                 KH
)@@G@@                  @I@@@@. BEGIN NBLKTB                                  KI
)@@G@@                                    @I@@@@. FOR(TERMINATOR) ERROR       KJ
)@@G@@                                                      @I@@@@. ELSE STOPSKK
)@@G@@H                                                                       KL
)@@G@@@I@@@@. END NBLKTB                                                      KM
)@@G@@                  @I@@@@NBLKTB*   SYNVEC    *STOPSH,*0.                 KN
)@@G@@  @                                 @I@@@@          SYNVEC    *STOPSH,*0KO
)@@G@@.                   [                                 @I@@@@          SYKP
)@@G@@NVEC    *ERROR,*0.                    ]                                 KQ
)@@G@@@I@@@@          SYNVEC    *STOPSH,*0.                   #               KR
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,*0.                 KS
)@@G@@  ^                                 @I@@@@          SYNVEC    *ERROR,*0.KT
)@@G@@                                                      @I@@@@          SYKU
)@@G@@NVEC    *STOPSH,*0.                   A                                 KV
)@@G@@@I@@@@          SYNVEC    *STOPSH,*0.                   B               KW
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,*0.                 KX
)@@G@@  C                                 @I@@@@          SYNVEC    *STOPSH,*0KY
)@@G@@.                   D                                 @I@@@@          SYKZ
)@@G@@NVEC    *STOPSH,*0.                   E                                 LA
)@@G@@@I@@@@          SYNVEC    *STOPSH,*0.                   F               LB
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,*0.                 LC
)@@G@@  G                                 @I@@@@          SYNVEC    *STOPSH,*0LD
)@@G@@.                   H                                 @I@@@@          SYLE
)@@G@@NVEC    *STOPSH,*0.                   I                                 LF
)@@G@@@I@@@@          SYNVEC    *STOPSH,*0.                   J               LG
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,*0.                 LH
)@@G@@  K                                 @I@@@@          SYNVEC    *STOPSH,*0LI
)@@G@@.                   L                                 @I@@@@          SYLJ
)@@G@@NVEC    *STOPSH,*0.                   M                                 LK
)@@G@@@I@@@@          SYNVEC    *STOPSH,*0.                   N               LL
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,*0.                 LM
)@@G@@  O                                 @I@@@@          SYNVEC    *STOPSH,*0LN
)@@G@@.                   P                                 @I@@@@          SYLO
)@@G@@NVEC    *STOPSH,*0.                   Q                                 LP
)@@G@@@I@@@@          SYNVEC    *STOPSH,*0.                   R               LQ
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,*0.                 LR
)@@G@@  S                                 @I@@@@          SYNVEC    *STOPSH,*0LS
)@@G@@.                   T                                 @I@@@@          SYLT
)@@G@@NVEC    *STOPSH,*0.                   U                                 LU
)@@G@@@I@@@@          SYNVEC    *STOPSH,*0.                   V               LV
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,*0.                 LW
)@@G@@  W                                 @I@@@@          SYNVEC    *STOPSH,*0LX
)@@G@@.                   X                                 @I@@@@          SYLY
)@@G@@NVEC    *STOPSH,*0.                   Y                                 LZ
)@@G@@@I@@@@          SYNVEC    *STOPSH,*0.                   Z               MA
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  MB
)@@G@@  )                                 @I@@@@          SYNVEC    *STOPSH,*0MC
)@@G@@.                   -                                 @I@@@@          SYMD
)@@G@@NVEC    *STOPSH,*0.                   +                                 ME
)@@G@@@I@@@@          SYNVEC    *STOPSH,*0.                   <               MF
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,*0.                 MG
)@@G@@  =                                 @I@@@@          SYNVEC    *ERROR,*0.MH
)@@G@@                    >                                 @I@@@@          SYMI
)@@G@@NVEC    *STOPSH,*0.                   &                                 MJ
)@@G@@@I@@@@          SYNVEC    *STOPSH,*0.                   $               MK
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,*0.                 ML
)@@G@@  *                                 @I@@@@          SYNVEC    *STOPSH,*0MM
)@@G@@.                   (                                 @I@@@@          SYMN
)@@G@@NVEC    *STOPSH,*0.                   %                                 MO
)@@G@@@I@@@@          SYNVEC    *STOPSH,*0.                   :               MP
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,*0.                 MQ
)@@G@@  ?                                 @I@@@@          SYNVEC    *STOPSH,*0MR
)@@G@@.                   !                                 @I@@@@          SYMS
)@@G@@NVEC    *ERROR,*0.                    ,                                 MT
)@@G@@@I@@@@          SYNVEC    *STOPSH,*0.                   \               MU
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,*0.                 MV
)@@G@@  0                                 @I@@@@          SYNVEC    *STOPSH,*0MW
)@@G@@.                   1                                 @I@@@@          SYMX
)@@G@@NVEC    *STOPSH,*0.                   2                                 MY
)@@G@@@I@@@@          SYNVEC    *STOPSH,*0.                   3               MZ
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,*0.                 NA
)@@G@@  4                                 @I@@@@          SYNVEC    *STOPSH,*0NB
)@@G@@.                   5                                 @I@@@@          SYNC
)@@G@@NVEC    *STOPSH,*0.                   6                                 ND
)@@G@@@I@@@@          SYNVEC    *STOPSH,*0.                   7               NE
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,*0.                 NF
)@@G@@  8                                 @I@@@@          SYNVEC    *STOPSH,*0NG
)@@G@@.                   9                                 @I@@@@          SYNH
)@@G@@NVEC    *STOPSH,*0.                   '                                 NI
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    ;               NJ
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,*0.                 NK
)@@G@@  /                                 @I@@@@          SYNVEC    *STOPSH,*0NL
)@@G@@.                   .                                 @I@@@@          SYNM
)@@G@@NVEC    *STOPSH,*0.                   "                                 NN
)@@G@@@I@@@@          SYNVEC    *STOPSH,*0.                   _               NO
)@@G@@                  @I@@@@.                                               NP
)@@G@@                                    @I@@@@. BEGIN NUMBTB                NQ
)@@G@@                                                      @I@@@@. FOR(NUMBERNR
)@@G@@) GOTO(NUMCTB)                                                          NS
)@@G@@@I@@@@. FOR(PLUS,MINUS) GOTO(NUMCTB)                                    NT
)@@G@@                  @I@@@@. FOR(COMMA) PUT(CMATYP) STOPSH                 NU
)@@G@@                                    @I@@@@. FOR(COLON) PUT(DIMTYP) STOPSNV
)@@G@@H                                                     @I@@@@. ELSE ERRORNW
)@@G@@                                                                        NX
)@@G@@@I@@@@. END NUMBTB                                                      NY
)@@G@@                  @I@@@@NUMBTB*   SYNVEC    *ERROR,*0.                  NZ
)@@G@@  @                                 @I@@@@          SYNVEC    *ERROR,*0.OA
)@@G@@                    [                                 @I@@@@          SYOB
)@@G@@NVEC    *ERROR,*0.                    ]                                 OC
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    #               OD
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  OE
)@@G@@  ^                                 @I@@@@          SYNVEC    *ERROR,*0.OF
)@@G@@                                                      @I@@@@          SYOG
)@@G@@NVEC    *ERROR,*0.                    A                                 OH
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    B               OI
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  OJ
)@@G@@  C                                 @I@@@@          SYNVEC    *ERROR,*0.OK
)@@G@@                    D                                 @I@@@@          SYOL
)@@G@@NVEC    *ERROR,*0.                    E                                 OM
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    F               ON
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  OO
)@@G@@  G                                 @I@@@@          SYNVEC    *ERROR,*0.OP
)@@G@@                    H                                 @I@@@@          SYOQ
)@@G@@NVEC    *ERROR,*0.                    I                                 OR
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    J               OS
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  OT
)@@G@@  K                                 @I@@@@          SYNVEC    *ERROR,*0.OU
)@@G@@                    L                                 @I@@@@          SYOV
)@@G@@NVEC    *ERROR,*0.                    M                                 OW
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    N               OX
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  OY
)@@G@@  O                                 @I@@@@          SYNVEC    *ERROR,*0.OZ
)@@G@@                    P                                 @I@@@@          SYPA
)@@G@@NVEC    *ERROR,*0.                    Q                                 PB
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    R               PC
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  PD
)@@G@@  S                                 @I@@@@          SYNVEC    *ERROR,*0.PE
)@@G@@                    T                                 @I@@@@          SYPF
)@@G@@NVEC    *ERROR,*0.                    U                                 PG
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    V               PH
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  PI
)@@G@@  W                                 @I@@@@          SYNVEC    *ERROR,*0.PJ
)@@G@@                    X                                 @I@@@@          SYPK
)@@G@@NVEC    *ERROR,*0.                    Y                                 PL
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    Z               PM
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  PN
)@@G@@  )                                 @I@@@@          SYNVEC    NUMCTB,*0.PO
)@@G@@                    -                                 @I@@@@          SYPP
)@@G@@NVEC    NUMCTB,*0.                    +                                 PQ
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    <               PR
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  PS
)@@G@@  =                                 @I@@@@          SYNVEC    *ERROR,*0.PT
)@@G@@                    >                                 @I@@@@          SYPU
)@@G@@NVEC    *ERROR,*0.                    &                                 PV
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    $               PW
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  PX
)@@G@@  *                                 @I@@@@          SYNVEC    *ERROR,*0.PY
)@@G@@                    (                                 @I@@@@          SYPZ
)@@G@@NVEC    *ERROR,*0.                    %                                 QA
)@@G@@@I@@@@          SYNVEC    *STOPSH,DIMTYP.               :               QB
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  QC
)@@G@@  ?                                 @I@@@@          SYNVEC    *ERROR,*0.QD
)@@G@@                    !                                 @I@@@@          SYQE
)@@G@@NVEC    *STOPSH,CMATYP.               ,                                 QF
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    \               QG
)@@G@@                  @I@@@@          SYNVEC    NUMCTB,*0.                  QH
)@@G@@  0                                 @I@@@@          SYNVEC    NUMCTB,*0.QI
)@@G@@                    1                                 @I@@@@          SYQJ
)@@G@@NVEC    NUMCTB,*0.                    2                                 QK
)@@G@@@I@@@@          SYNVEC    NUMCTB,*0.                    3               QL
)@@G@@                  @I@@@@          SYNVEC    NUMCTB,*0.                  QM
)@@G@@  4                                 @I@@@@          SYNVEC    NUMCTB,*0.QN
)@@G@@                    5                                 @I@@@@          SYQO
)@@G@@NVEC    NUMCTB,*0.                    6                                 QP
)@@G@@@I@@@@          SYNVEC    NUMCTB,*0.                    7               QQ
)@@G@@                  @I@@@@          SYNVEC    NUMCTB,*0.                  QR
)@@G@@  8                                 @I@@@@          SYNVEC    NUMCTB,*0.QS
)@@G@@                    9                                 @I@@@@          SYQT
)@@G@@NVEC    *ERROR,*0.                    '                                 QU
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    ;               QV
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  QW
)@@G@@  /                                 @I@@@@          SYNVEC    *ERROR,*0.QX
)@@G@@                    .                                 @I@@@@          SYQY
)@@G@@NVEC    *ERROR,*0.                    "                                 QZ
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    _               RA
)@@G@@                  @I@@@@.                                               RB
)@@G@@                                    @I@@@@. BEGIN NUMCTB                RC
)@@G@@                                                      @I@@@@. FOR(NUMBERRD
)@@G@@) CONTIN                                                                RE
)@@G@@@I@@@@. FOR(COMMA) PUT(CMATYP) STOPSH                                   RF
)@@G@@                  @I@@@@. FOR(COLON) PUT(DIMTYP) STOPSH                 RG
)@@G@@                                    @I@@@@. ELSE ERROR                  RH
)@@G@@                                                      @I@@@@. END NUMCTBRI
)@@G@@                                                                        RJ
)@@G@@@I@@@@NUMCTB*   SYNVEC    *ERROR,*0.                    @               RK
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  RL
)@@G@@  [                                 @I@@@@          SYNVEC    *ERROR,*0.RM
)@@G@@                    ]                                 @I@@@@          SYRN
)@@G@@NVEC    *ERROR,*0.                    #                                 RO
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    ^               RP
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  RQ
)@@G@@                                    @I@@@@          SYNVEC    *ERROR,*0.RR
)@@G@@                    A                                 @I@@@@          SYRS
)@@G@@NVEC    *ERROR,*0.                    B                                 RT
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    C               RU
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  RV
)@@G@@  D                                 @I@@@@          SYNVEC    *ERROR,*0.RW
)@@G@@                    E                                 @I@@@@          SYRX
)@@G@@NVEC    *ERROR,*0.                    F                                 RY
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    G               RZ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  SA
)@@G@@  H                                 @I@@@@          SYNVEC    *ERROR,*0.SB
)@@G@@                    I                                 @I@@@@          SYSC
)@@G@@NVEC    *ERROR,*0.                    J                                 SD
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    K               SE
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  SF
)@@G@@  L                                 @I@@@@          SYNVEC    *ERROR,*0.SG
)@@G@@                    M                                 @I@@@@          SYSH
)@@G@@NVEC    *ERROR,*0.                    N                                 SI
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    O               SJ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  SK
)@@G@@  P                                 @I@@@@          SYNVEC    *ERROR,*0.SL
)@@G@@                    Q                                 @I@@@@          SYSM
)@@G@@NVEC    *ERROR,*0.                    R                                 SN
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    S               SO
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  SP
)@@G@@  T                                 @I@@@@          SYNVEC    *ERROR,*0.SQ
)@@G@@                    U                                 @I@@@@          SYSR
)@@G@@NVEC    *ERROR,*0.                    V                                 SS
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    W               ST
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  SU
)@@G@@  X                                 @I@@@@          SYNVEC    *ERROR,*0.SV
)@@G@@                    Y                                 @I@@@@          SYSW
)@@G@@NVEC    *ERROR,*0.                    Z                                 SX
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    )               SY
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  SZ
)@@G@@  -                                 @I@@@@          SYNVEC    *ERROR,*0.TA
)@@G@@                    +                                 @I@@@@          SYTB
)@@G@@NVEC    *ERROR,*0.                    <                                 TC
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    =               TD
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  TE
)@@G@@  >                                 @I@@@@          SYNVEC    *ERROR,*0.TF
)@@G@@                    &                                 @I@@@@          SYTG
)@@G@@NVEC    *ERROR,*0.                    $                                 TH
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    *               TI
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  TJ
)@@G@@  (                                 @I@@@@          SYNVEC    *ERROR,*0.TK
)@@G@@                    %                                 @I@@@@          SYTL
)@@G@@NVEC    *STOPSH,DIMTYP.               :                                 TM
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    ?               TN
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  TO
)@@G@@  !                                 @I@@@@          SYNVEC    *STOPSH,CMTP
)@@G@@ATYP.               ,                                 @I@@@@          SYTQ
)@@G@@NVEC    *ERROR,*0.                    \                                 TR
)@@G@@@I@@@@          SYNVEC    NUMCTB,*0.                    0               TS
)@@G@@                  @I@@@@          SYNVEC    NUMCTB,*0.                  TT
)@@G@@  1                                 @I@@@@          SYNVEC    NUMCTB,*0.TU
)@@G@@                    2                                 @I@@@@          SYTV
)@@G@@NVEC    NUMCTB,*0.                    3                                 TW
)@@G@@@I@@@@          SYNVEC    NUMCTB,*0.                    4               TX
)@@G@@                  @I@@@@          SYNVEC    NUMCTB,*0.                  TY
)@@G@@  5                                 @I@@@@          SYNVEC    NUMCTB,*0.TZ
)@@G@@                    6                                 @I@@@@          SYUA
)@@G@@NVEC    NUMCTB,*0.                    7                                 UB
)@@G@@@I@@@@          SYNVEC    NUMCTB,*0.                    8               UC
)@@G@@                  @I@@@@          SYNVEC    NUMCTB,*0.                  UD
)@@G@@  9                                 @I@@@@          SYNVEC    *ERROR,*0.UE
)@@G@@                    '                                 @I@@@@          SYUF
)@@G@@NVEC    *ERROR,*0.                    ;                                 UG
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    /               UH
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  UI
)@@G@@  .                                 @I@@@@          SYNVEC    *ERROR,*0.UJ
)@@G@@                    "                                 @I@@@@          SYUK
)@@G@@NVEC    *ERROR,*0.                    _                                 UL
)@@G@@@I@@@@.                                                                 UM
)@@G@@                  @I@@@@. BEGIN SNABTB                                  UN
)@@G@@                                    @I@@@@. FOR(FGOSYM) STOP            UO
)@@G@@                                                      @I@@@@. FOR(SGOSYMUP
)@@G@@) STOPSH                                                                UQ
)@@G@@@I@@@@. ELSE ERROR                                                      UR
)@@G@@                  @I@@@@. END SNABTB                                    US
)@@G@@                                    @I@@@@SNABTB*   SYNVEC    *ERROR,*0.UT
)@@G@@                    @                                 @I@@@@          SYUU
)@@G@@NVEC    *ERROR,*0.                    [                                 UV
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    ]               UW
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  UX
)@@G@@  #                                 @I@@@@          SYNVEC    *ERROR,*0.UY
)@@G@@                    ^                                 @I@@@@          SYUZ
)@@G@@NVEC    *ERROR,*0.                                                      VA
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    A               VB
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  VC
)@@G@@  B                                 @I@@@@          SYNVEC    *ERROR,*0.VD
)@@G@@                    C                                 @I@@@@          SYVE
)@@G@@NVEC    *ERROR,*0.                    D                                 VF
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    E               VG
)@@G@@                  @I@@@@          SYNVEC    *STOP,*0.                   VH
)@@G@@  F                                 @I@@@@          SYNVEC    *ERROR,*0.VI
)@@G@@                    G                                 @I@@@@          SYVJ
)@@G@@NVEC    *ERROR,*0.                    H                                 VK
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    I               VL
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  VM
)@@G@@  J                                 @I@@@@          SYNVEC    *ERROR,*0.VN
)@@G@@                    K                                 @I@@@@          SYVO
)@@G@@NVEC    *ERROR,*0.                    L                                 VP
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    M               VQ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  VR
)@@G@@  N                                 @I@@@@          SYNVEC    *ERROR,*0.VS
)@@G@@                    O                                 @I@@@@          SYVT
)@@G@@NVEC    *ERROR,*0.                    P                                 VU
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    Q               VV
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  VW
)@@G@@  R                                 @I@@@@          SYNVEC    *STOPSH,*0VX
)@@G@@.                   S                                 @I@@@@          SYVY
)@@G@@NVEC    *ERROR,*0.                    T                                 VZ
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    U               WA
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  WB
)@@G@@  V                                 @I@@@@          SYNVEC    *ERROR,*0.WC
)@@G@@                    W                                 @I@@@@          SYWD
)@@G@@NVEC    *ERROR,*0.                    X                                 WE
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    Y               WF
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  WG
)@@G@@  Z                                 @I@@@@          SYNVEC    *ERROR,*0.WH
)@@G@@                    )                                 @I@@@@          SYWI
)@@G@@NVEC    *ERROR,*0.                    -                                 WJ
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    +               WK
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  WL
)@@G@@  <                                 @I@@@@          SYNVEC    *ERROR,*0.WM
)@@G@@                    =                                 @I@@@@          SYWN
)@@G@@NVEC    *ERROR,*0.                    >                                 WO
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    &               WP
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  WQ
)@@G@@  $                                 @I@@@@          SYNVEC    *ERROR,*0.WR
)@@G@@                    *                                 @I@@@@          SYWS
)@@G@@NVEC    *ERROR,*0.                    (                                 WT
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    %               WU
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  WV
)@@G@@  :                                 @I@@@@          SYNVEC    *ERROR,*0.WW
)@@G@@                    ?                                 @I@@@@          SYWX
)@@G@@NVEC    *ERROR,*0.                    !                                 WY
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    ,               WZ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  XA
)@@G@@  \                                 @I@@@@          SYNVEC    *ERROR,*0.XB
)@@G@@                    0                                 @I@@@@          SYXC
)@@G@@NVEC    *ERROR,*0.                    1                                 XD
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    2               XE
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  XF
)@@G@@  3                                 @I@@@@          SYNVEC    *ERROR,*0.XG
)@@G@@                    4                                 @I@@@@          SYXH
)@@G@@NVEC    *ERROR,*0.                    5                                 XI
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    6               XJ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  XK
)@@G@@  7                                 @I@@@@          SYNVEC    *ERROR,*0.XL
)@@G@@                    8                                 @I@@@@          SYXM
)@@G@@NVEC    *ERROR,*0.                    9                                 XN
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    '               XO
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  XP
)@@G@@  ;                                 @I@@@@          SYNVEC    *ERROR,*0.XQ
)@@G@@                    /                                 @I@@@@          SYXR
)@@G@@NVEC    *ERROR,*0.                    .                                 XS
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    "               XT
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  XU
)@@G@@  _                                 @I@@@@.                             XV
)@@G@@                                                      @I@@@@. BEGIN SQLIXW
)@@G@@TB                                                                      XX
)@@G@@@I@@@@. FOR(SQUOTE) STOP                                                XY
)@@G@@                  @I@@@@. ELSE CONTIN                                   XZ
)@@G@@                                    @I@@@@. END SQLITB                  YA
)@@G@@                                                      @I@@@@SQLITB*   SYYB
)@@G@@NVEC    SQLITB,*0.                    @                                 YC
)@@G@@@I@@@@          SYNVEC    SQLITB,*0.                    [               YD
)@@G@@                  @I@@@@          SYNVEC    SQLITB,*0.                  YE
)@@G@@  ]                                 @I@@@@          SYNVEC    SQLITB,*0.YF
)@@G@@                    #                                 @I@@@@          SYYG
)@@G@@NVEC    SQLITB,*0.                    ^                                 YH
)@@G@@@I@@@@          SYNVEC    SQLITB,*0.                                    YI
)@@G@@                  @I@@@@          SYNVEC    SQLITB,*0.                  YJ
)@@G@@  A                                 @I@@@@          SYNVEC    SQLITB,*0.YK
)@@G@@                    B                                 @I@@@@          SYYL
)@@G@@NVEC    SQLITB,*0.                    C                                 YM
)@@G@@@I@@@@          SYNVEC    SQLITB,*0.                    D               YN
)@@G@@                  @I@@@@          SYNVEC    SQLITB,*0.                  YO
)@@G@@  E                                 @I@@@@          SYNVEC    SQLITB,*0.YP
)@@G@@                    F                                 @I@@@@          SYYQ
)@@G@@NVEC    SQLITB,*0.                    G                                 YR
)@@G@@@I@@@@          SYNVEC    SQLITB,*0.                    H               YS
)@@G@@                  @I@@@@          SYNVEC    SQLITB,*0.                  YT
)@@G@@  I                                 @I@@@@          SYNVEC    SQLITB,*0.YU
)@@G@@                    J                                 @I@@@@          SYYV
)@@G@@NVEC    SQLITB,*0.                    K                                 YW
)@@G@@@I@@@@          SYNVEC    SQLITB,*0.                    L               YX
)@@G@@                  @I@@@@          SYNVEC    SQLITB,*0.                  YY
)@@G@@  M                                 @I@@@@          SYNVEC    SQLITB,*0.YZ
)@@G@@                    N                                 @I@@@@          SYZA
)@@G@@NVEC    SQLITB,*0.                    O                                 ZB
)@@G@@@I@@@@          SYNVEC    SQLITB,*0.                    P               ZC
)@@G@@                  @I@@@@          SYNVEC    SQLITB,*0.                  ZD
)@@G@@  Q                                 @I@@@@          SYNVEC    SQLITB,*0.ZE
)@@G@@                    R                                 @I@@@@          SYZF
)@@G@@NVEC    SQLITB,*0.                    S                                 ZG
)@@G@@@I@@@@          SYNVEC    SQLITB,*0.                    T               ZH
)@@G@@                  @I@@@@          SYNVEC    SQLITB,*0.                  ZI
)@@G@@  U                                 @I@@@@          SYNVEC    SQLITB,*0.ZJ
)@@G@@                    V                                 @I@@@@          SYZK
)@@G@@NVEC    SQLITB,*0.                    W                                 ZL
)@@G@@@I@@@@          SYNVEC    SQLITB,*0.                    X               ZM
)@@G@@                  @I@@@@          SYNVEC    SQLITB,*0.                  ZN
)@@G@@  Y                                 @I@@@@          SYNVEC    SQLITB,*0.ZO
)@@G@@                    Z                                 @I@@@@          SYZP
)@@G@@NVEC    SQLITB,*0.                    )                                 ZQ
)@@G@@@I@@@@          SYNVEC    SQLITB,*0.                    -               ZR
)@@G@@                  @I@@@@          SYNVEC    SQLITB,*0.                  ZS
)@@G@@  +                                 @I@@@@          SYNVEC    SQLITB,*0.ZT
)@@G@@                    <                                 @I@@@@          SYZU
)@@G@@NVEC    SQLITB,*0.                    =                                 ZV
)@@G@@@I@@@@          SYNVEC    SQLITB,*0.                    >               ZW
)@@G@@                  @I@@@@          SYNVEC    SQLITB,*0.                  ZX
)@@G@@  &                                 @I@@@@          SYNVEC    SQLITB,*0.ZY
)@@G@@                    $                                 @I@@@@          SYZZ
)@@G@@NVEC    SQLITB,*0.                    *                                 AA
)@@G@@@I@@@@          SYNVEC    SQLITB,*0.                    (               AB
)@@G@@                  @I@@@@          SYNVEC    SQLITB,*0.                  AC
)@@G@@  %                                 @I@@@@          SYNVEC    SQLITB,*0.AD
)@@G@@                    :                                 @I@@@@          SYAE
)@@G@@NVEC    SQLITB,*0.                    ?                                 AF
)@@G@@@I@@@@          SYNVEC    SQLITB,*0.                    !               AG
)@@G@@                  @I@@@@          SYNVEC    SQLITB,*0.                  AH
)@@G@@  ,                                 @I@@@@          SYNVEC    SQLITB,*0.AI
)@@G@@                    \                                 @I@@@@          SYAJ
)@@G@@NVEC    SQLITB,*0.                    0                                 AK
)@@G@@@I@@@@          SYNVEC    SQLITB,*0.                    1               AL
)@@G@@                  @I@@@@          SYNVEC    SQLITB,*0.                  AM
)@@G@@  2                                 @I@@@@          SYNVEC    SQLITB,*0.AN
)@@G@@                    3                                 @I@@@@          SYAO
)@@G@@NVEC    SQLITB,*0.                    4                                 AP
)@@G@@@I@@@@          SYNVEC    SQLITB,*0.                    5               AQ
)@@G@@                  @I@@@@          SYNVEC    SQLITB,*0.                  AR
)@@G@@  6                                 @I@@@@          SYNVEC    SQLITB,*0.AS
)@@G@@                    7                                 @I@@@@          SYAT
)@@G@@NVEC    SQLITB,*0.                    8                                 AU
)@@G@@@I@@@@          SYNVEC    SQLITB,*0.                    9               AV
)@@G@@                  @I@@@@          SYNVEC    *STOP,*0.                   AW
)@@G@@  '                                 @I@@@@          SYNVEC    SQLITB,*0.AX
)@@G@@                    ;                                 @I@@@@          SYAY
)@@G@@NVEC    SQLITB,*0.                    /                                 AZ
)@@G@@@I@@@@          SYNVEC    SQLITB,*0.                    .               BA
)@@G@@                  @I@@@@          SYNVEC    SQLITB,*0.                  BB
)@@G@@  "                                 @I@@@@          SYNVEC    SQLITB,*0.BC
)@@G@@                    _                                 @I@@@@.           BD
)@@G@@                                                                        BE
)@@G@@@I@@@@. BEGIN STARTB                                                    BF
)@@G@@                  @I@@@@. FOR(BLANK) STOP                               BG
)@@G@@                                    @I@@@@. FOR(STAR) PUT(EXPFN) GOTO(TBBH
)@@G@@LKTB)                                                 @I@@@@. ELSE ERRORBI
)@@G@@                                                                        BJ
)@@G@@@I@@@@. END STARTB                                                      BK
)@@G@@                  @I@@@@STARTB*   SYNVEC    *ERROR,*0.                  BL
)@@G@@  @                                 @I@@@@          SYNVEC    *ERROR,*0.BM
)@@G@@                    [                                 @I@@@@          SYBN
)@@G@@NVEC    *ERROR,*0.                    ]                                 BO
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    #               BP
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  BQ
)@@G@@  ^                                 @I@@@@          SYNVEC    *STOP,*0. BR
)@@G@@                                                      @I@@@@          SYBS
)@@G@@NVEC    *ERROR,*0.                    A                                 BT
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    B               BU
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  BV
)@@G@@  C                                 @I@@@@          SYNVEC    *ERROR,*0.BW
)@@G@@                    D                                 @I@@@@          SYBX
)@@G@@NVEC    *ERROR,*0.                    E                                 BY
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    F               BZ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  CA
)@@G@@  G                                 @I@@@@          SYNVEC    *ERROR,*0.CB
)@@G@@                    H                                 @I@@@@          SYCC
)@@G@@NVEC    *ERROR,*0.                    I                                 CD
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    J               CE
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  CF
)@@G@@  K                                 @I@@@@          SYNVEC    *ERROR,*0.CG
)@@G@@                    L                                 @I@@@@          SYCH
)@@G@@NVEC    *ERROR,*0.                    M                                 CI
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    N               CJ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  CK
)@@G@@  O                                 @I@@@@          SYNVEC    *ERROR,*0.CL
)@@G@@                    P                                 @I@@@@          SYCM
)@@G@@NVEC    *ERROR,*0.                    Q                                 CN
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    R               CO
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  CP
)@@G@@  S                                 @I@@@@          SYNVEC    *ERROR,*0.CQ
)@@G@@                    T                                 @I@@@@          SYCR
)@@G@@NVEC    *ERROR,*0.                    U                                 CS
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    V               CT
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  CU
)@@G@@  W                                 @I@@@@          SYNVEC    *ERROR,*0.CV
)@@G@@                    X                                 @I@@@@          SYCW
)@@G@@NVEC    *ERROR,*0.                    Y                                 CX
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    Z               CY
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  CZ
)@@G@@  )                                 @I@@@@          SYNVEC    *ERROR,*0.DA
)@@G@@                    -                                 @I@@@@          SYDB
)@@G@@NVEC    *ERROR,*0.                    +                                 DC
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    <               DD
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  DE
)@@G@@  =                                 @I@@@@          SYNVEC    *ERROR,*0.DF
)@@G@@                    >                                 @I@@@@          SYDG
)@@G@@NVEC    *ERROR,*0.                    &                                 DH
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    $               DI
)@@G@@                  @I@@@@          SYNVEC    TBLKTB,EXPFN.               DJ
)@@G@@  *                                 @I@@@@          SYNVEC    *ERROR,*0.DK
)@@G@@                    (                                 @I@@@@          SYDL
)@@G@@NVEC    *ERROR,*0.                    %                                 DM
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    :               DN
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  DO
)@@G@@  ?                                 @I@@@@          SYNVEC    *ERROR,*0.DP
)@@G@@                    !                                 @I@@@@          SYDQ
)@@G@@NVEC    *ERROR,*0.                    ,                                 DR
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    \               DS
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  DT
)@@G@@  0                                 @I@@@@          SYNVEC    *ERROR,*0.DU
)@@G@@                    1                                 @I@@@@          SYDV
)@@G@@NVEC    *ERROR,*0.                    2                                 DW
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    3               DX
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  DY
)@@G@@  4                                 @I@@@@          SYNVEC    *ERROR,*0.DZ
)@@G@@                    5                                 @I@@@@          SYEA
)@@G@@NVEC    *ERROR,*0.                    6                                 EB
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    7               EC
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  ED
)@@G@@  8                                 @I@@@@          SYNVEC    *ERROR,*0.EE
)@@G@@                    9                                 @I@@@@          SYEF
)@@G@@NVEC    *ERROR,*0.                    '                                 EG
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    ;               EH
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  EI
)@@G@@  /                                 @I@@@@          SYNVEC    *ERROR,*0.EJ
)@@G@@                    .                                 @I@@@@          SYEK
)@@G@@NVEC    *ERROR,*0.                    "                                 EL
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    _               EM
)@@G@@                  @I@@@@.                                               EN
)@@G@@                                    @I@@@@. BEGIN TBLKTB                EO
)@@G@@                                                      @I@@@@. FOR(BLANK)EP
)@@G@@ STOP                                                                   EQ
)@@G@@@I@@@@. ELSE ERROR                                                      ER
)@@G@@                  @I@@@@. END TBLKTB                                    ES
)@@G@@                                    @I@@@@TBLKTB*   SYNVEC    *ERROR,*0.ET
)@@G@@                    @                                 @I@@@@          SYEU
)@@G@@NVEC    *ERROR,*0.                    [                                 EV
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    ]               EW
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  EX
)@@G@@  #                                 @I@@@@          SYNVEC    *ERROR,*0.EY
)@@G@@                    ^                                 @I@@@@          SYEZ
)@@G@@NVEC    *STOP,*0.                                                       FA
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    A               FB
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  FC
)@@G@@  B                                 @I@@@@          SYNVEC    *ERROR,*0.FD
)@@G@@                    C                                 @I@@@@          SYFE
)@@G@@NVEC    *ERROR,*0.                    D                                 FF
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    E               FG
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  FH
)@@G@@  F                                 @I@@@@          SYNVEC    *ERROR,*0.FI
)@@G@@                    G                                 @I@@@@          SYFJ
)@@G@@NVEC    *ERROR,*0.                    H                                 FK
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    I               FL
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  FM
)@@G@@  J                                 @I@@@@          SYNVEC    *ERROR,*0.FN
)@@G@@                    K                                 @I@@@@          SYFO
)@@G@@NVEC    *ERROR,*0.                    L                                 FP
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    M               FQ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  FR
)@@G@@  N                                 @I@@@@          SYNVEC    *ERROR,*0.FS
)@@G@@                    O                                 @I@@@@          SYFT
)@@G@@NVEC    *ERROR,*0.                    P                                 FU
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    Q               FV
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  FW
)@@G@@  R                                 @I@@@@          SYNVEC    *ERROR,*0.FX
)@@G@@                    S                                 @I@@@@          SYFY
)@@G@@NVEC    *ERROR,*0.                    T                                 FZ
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    U               GA
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  GB
)@@G@@  V                                 @I@@@@          SYNVEC    *ERROR,*0.GC
)@@G@@                    W                                 @I@@@@          SYGD
)@@G@@NVEC    *ERROR,*0.                    X                                 GE
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    Y               GF
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  GG
)@@G@@  Z                                 @I@@@@          SYNVEC    *ERROR,*0.GH
)@@G@@                    )                                 @I@@@@          SYGI
)@@G@@NVEC    *ERROR,*0.                    -                                 GJ
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    +               GK
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  GL
)@@G@@  <                                 @I@@@@          SYNVEC    *ERROR,*0.GM
)@@G@@                    =                                 @I@@@@          SYGN
)@@G@@NVEC    *ERROR,*0.                    >                                 GO
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    &               GP
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  GQ
)@@G@@  $                                 @I@@@@          SYNVEC    *ERROR,*0.GR
)@@G@@                    *                                 @I@@@@          SYGS
)@@G@@NVEC    *ERROR,*0.                    (                                 GT
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    %               GU
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  GV
)@@G@@  :                                 @I@@@@          SYNVEC    *ERROR,*0.GW
)@@G@@                    ?                                 @I@@@@          SYGX
)@@G@@NVEC    *ERROR,*0.                    !                                 GY
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    ,               GZ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  HA
)@@G@@  \                                 @I@@@@          SYNVEC    *ERROR,*0.HB
)@@G@@                    0                                 @I@@@@          SYHC
)@@G@@NVEC    *ERROR,*0.                    1                                 HD
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    2               HE
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  HF
)@@G@@  3                                 @I@@@@          SYNVEC    *ERROR,*0.HG
)@@G@@                    4                                 @I@@@@          SYHH
)@@G@@NVEC    *ERROR,*0.                    5                                 HI
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    6               HJ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  HK
)@@G@@  7                                 @I@@@@          SYNVEC    *ERROR,*0.HL
)@@G@@                    8                                 @I@@@@          SYHM
)@@G@@NVEC    *ERROR,*0.                    9                                 HN
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    '               HO
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  HP
)@@G@@  ;                                 @I@@@@          SYNVEC    *ERROR,*0.HQ
)@@G@@                    /                                 @I@@@@          SYHR
)@@G@@NVEC    *ERROR,*0.                    .                                 HS
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    "               HT
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  HU
)@@G@@  _                                 @I@@@@.                             HV
)@@G@@                                                      @I@@@@. BEGIN UNOPHW
)@@G@@TB                                                                      HX
)@@G@@@I@@@@. FOR(PLUS) PUT(PLSFN) GOTO(NBLKTB)                               HY
)@@G@@                  @I@@@@. FOR(MINUS) PUT(MNSFN) GOTO(NBLKTB)            HZ
)@@G@@                                    @I@@@@. FOR(DOT) PUT(DOTFN) GOTO(NBLIA
)@@G@@KTB)                                                  @I@@@@. FOR(DOLLARIB
)@@G@@) PUT(INDFN) GOTO(NBLKTB)                                               IC
)@@G@@@I@@@@. FOR(STAR) PUT(STRFN) GOTO(NBLKTB)                               ID
)@@G@@@]L@^\@ F@ @@#C@^S@[[@@@@@@@@,@@@@@@@@@@@+@[B@@@@@@@ 0@]H@@@@@@@]M@@J@@@IE
)@@G@@@@@@[Q@[;@@@@@@@]<@]\@#+@@X@#R@@)@]V@[.@]P@]]@@@@@@@AM@[P@#K@#X@ 2@@*@ARIF
)@@G@@@ ^@@'@[^@@#@#Y@ W@#V@]&@@@@[@@B]@@@@]3@@K@[_@@@@] @[N@@%@]#@^H@@<@@@@#!IG
)@@G@@@@@@]_@#;@@@@@T@ X@@8@BA@@@@]>@[R@BI@@@@@@@]Z@@^@@@@[S@ ?@]X@A\@@U@#@@]:IH
)@@G@@@@@@@W@[Z@@Q@@@@@\@[H@@@@@@@]A@];@^N@@@@@@@##@ "@@@@@/@[J@@@@@N@@;@@4@ =II
)@@G@@@ L@[>@^9@@O@@@@@D@@>@BD@@@@@_@][@@V@#&@[F@[<@]!@#*@@2@]+@@@@@B@@@@@@@@@IJ
)@@G@@@@@@[#@]8@@@@ K@[ @@0@^_@@@@#[@[7@]$@B@@@]@[U@#H@BR@@6@#N@@@@@A@AD@]B@@@IK
)@@G@@@AJ@]D@]U@A+@@@@[L@^&@AQ@@@@@Y@^(@^ @#0@@C@[*@@S@@@@@@@[]@^J@@ @@H@^]@^CIL
)@@G@@@AS@@!@]4@@@@@@@^A@[C@@@@#J@[I@@5@@@@@@@]R@[G@@P@ >@]/@@[@])@@@@A;@@@@A/IM
)@@G@@@]T@[$@[+@AL@@@@^+@[5@@@@@@@@@@@.@^D@@@@@@@[M@@-@@L@@=@#E@@@@@@@@$@A[@ 8IN
)@@G@@@AH@B @@1@B^@@@@ Z@[&@@@@AK@@&@@I@^K@@@@@7@#U@AU@@@@@E@[W@[8@[6@[\@@9@ NIO
)@@G@@@[0@@(@#6@[,@@M@^G@[K@@R@@@@@F@[?@](@  @[Y@@^@BTPIO$P       @[@@A @@@*H&IP
)@@G@@PIO$PROCS   @[@@@G@@@*H&PIO$FIELDS  @[@@#D@@@*I?PIO$PKT     @[@@@@@@@*UKIQ
)@@G@@PIO$PAI     @[@@#Z@@@*XGPIO$PAR     @[@@@@@@@*)JPIOPAI$     @[@@@@@@@*-!IR
)@@G@@PIONP$      @[@@]6@@@*<]PIOFO$      @[@@^<@@@*=NPIOFC$      @[@@#W@@@*>,IS
)@@G@@PIOPF$      @[@@[D@@@*>,PIOR$       @[@@@Z@@@*$:PIORL$      @[@@@@@@@*$:IT
)@@G@@PIOW$       @[@@[A@@@*$:PIOUL$      @[@@#Q@@@*$:PSDFPROCS   @[[@[-C@@*%RIU
)@@G@@PSDFFIELDS  @[[@]2C@@*5MPSDFPKT     @[[@@@C@@*.(PSDFPA      @[[@# C@@(@(IV
)@@G@@PSDFRO      @[[@ *C@@(HTPSDFWO      @[[@#AC@@(HTPSDFRC      @[[@^EC@@(JEIW
)@@G@@PSDFRCE     @[[@#GC@@(JEPSDFWC      @[[@A3C@@(JEPSDFWCE     @[[@@@C@@(JEIX
)@@G@@PSDFR       @[[@^=C@@(LCPSDFRS      @[[@@@C@@(LCPSDFRB      @[[@^$C@@(LCIY
)@@G@@PSDFRSB     @[[@^'C@@(LCPSDFW       @[[@@3C@@(N(EQU$        @[]@@@@@@(QAIZ
)@@G@@EQUF$       @[]@BS@@@(W8DELETE$     @[]@ _@@@(Y%JE          @[#@@?@@@(9YJA
)@@G@@JNE         @[#@#?@@@(9YJG          @[#@@:@@@(9YJLE         @[#@]N@@@(9YJB
)@@G@@JEP         @[#@]^@@@(9YJOP         @[#@[X@@@(9YJW          @[#@[T@@@(9YJC
)@@G@@JNW         @[#@@@@@@(9YSEJ         @[#@[:@@@(/]SNEJ        @[#@[)@@@(/]JD
)@@G@@SLEJ        @[#@ P@@@(/]SNGJ        @[#@@@@@@(/]SGJ         @[#@[2@@@(/]JE
)@@G@@SWJ         @[#@@@@@@(/]SNWJ        @[#@[3@@@(/]MSEJ        @[#@^T@@@("SJF
)@@G@@MSNEJ       @[#@#/@@@("SMSLEJ       @[#@^O@@@("SMSNGJ       @[#@]%@@@("SJG
)@@G@@MSGJ        @[#@]J@@@("SMSWJ        @[#@]S@@@("SMSNWJ       @[#@]'@@@("SJH
)@@G@@MASLJ       @[#@^X@@@("SMASGJ       @[#@]E@@@("SJEZ         @[#@A0@@@%[-JI
)@@G@@JZM         @[#@[V@@@%[-JNEZ        @[#@]?@@@%[-JNZM        @[#@@"@@@%[-JJ
)@@G@@JPV         @[#@[E@@@%[-JPM         @[#@[O@@@%[-JPOS        @[#@^^@@@%[-JK
)@@G@@JNV         @[#@[4@@@%[-JNM         @[#@@@@@@%[-JNEG        @[#@ 9@@@%[-JL
)@@G@@JNGM        @[#@[!@@@%^ JLEM        @[#@]Y@@@%^ JGM         @[#@]G@@@% YJM
)@@G@@TL          @[#@[/@@@%A-TGE         @[#@ Y@@@%BTTNL         @[#@^P@@@%BTJN
)@@G@@JL          @[#@#T@@@%C=JGE         @[#@ ]@@@%DZJNL         @[#@^>@@@%DZJO
)@@G@@DTNE        @[#@@@@@@%E<DJE         @[#@@@@@@%FSDJNE        @[#@^Y@@@%GSJP
)@@G@@JNGD        @[#@]1@@@%H+JMNGI       @[#@]C@@@%H+JMLEI       @[#@]W@@@%H+JQ
)@@G@@DJNZ        @[#@#%@@@%H+TSE         @[#@]F@@@%JRTSNE        @[#@^@@@@%JRJR
)@@G@@TSNG        @[#@]@@@@%JRTSLE        @[#@]*@@@%JRTSG         @[#@^!@@@%JRJS
)@@G@@TSW         @[#@#_@@@%JRTSNW        @[#@^;@@@%JRTMSE        @[#@]Q@@@%JRJT
)@@G@@TMSNE       @[#@]K@@@%JRTMSNG       @[#@@@@@@%JRTMSLE       @[#@[%@@@%JRJU
)@@G@@TMSG        @[#@#^@@@%JRTMSW        @[#@@@@@@%JRTMSNW       @[#@@@@@@%JRJV
)@@G@@TMASL       @[#@[=@@@%JRTMASG       @[#@[(@@@%JRCSF$        @[^@[1@@@%PAJW
)@@G@@ACSF$       @[^@["@@@%PACSF         @[^@]I@@@%R,ACSF        @[^@@@@@@%R,JX
)@@G@@PCT$        @[^@]O@@@%TFPRINT$      @[^@#>@@@%V'APRINT$     @[^@@@@@@%V'JY
)@@G@@PRINT       @[^@@@@@@%W)APRINT      @[^@@@@@@%W)PRNTA$      @[^@#M@@@%YSJZ
)@@G@@APRNTA$     @[^@B#@@@%YSPRNTA       @[^@].@@@%Y"APRNTA      @[^@#$@@@%Y"KA
)@@G@@PRTCN$      @[^@@@@@@%)_APRTCN$     @[^@^L@@@%)_PRTCN       @[^@[9@@@%->KB
)@@G@@APRTCN      @[^@['@@@%->PRTCA$      @[^@#O@@@%<LAPRTCA$     @[^@#3@@@%<LKC
)@@G@@PRTCA       @[^@]-@@@%<7APRTCA      @[^@#)@@@%<7PCW         @[^@@@@@@%>3KD
)@@G@@APCW        @[^@]=@@@%>3PCW$$       @[^@ G@@@%&6PRNTAP      @[^@A,@@@%*.KE
)@@G@@APRNTAP     @[^@@@@@@%*.READ        @[^@@@@@@%%$AREAD       @[^@]0@@@%%$KF
)@@G@@READ$       @[^@@@@@@%:OAREAD$      @[^@#<@@@%:OREADA$      @[^@@@@@@%:OKG
)@@G@@AREADA$     @[^@#:@@@%:OREADA       @[^@@@@@@%?;AREADA      @[^@@@@@@%?;KH
)@@G@@TREAD       @[^@^"@@@%\FATREAD      @[^@ S@@@%\FTREAD$      @[^@AN@@@%0 KI
)@@G@@ATREAD$     @[^@ !@@@%0 CALL        @[^@#=@@@%1@XFU         @[^@@@@@@%2.KJ
)@@G@@XFA         @[^@@@@@@%3*INC         @[^@#9@@@%6NDEC         @[^@^0@@@%6NKK
)@@G@@MOVE        @[^@^#@@@%.GD$I         @[^@]7@@@:@9SNOOPY      @[^@#I@@@:^NKL
)@@G@@IBANK       @[ @ 6@@@: %DBANK       @[ @^Z@@@: %SLJENTRY    @[ @]5@@@:D1KM
)@@G@@CHECKLC     @[ @^R@@@:G)SAVER       @[A@#B@@@:J,LOADR       @[A@^/@@@:VHKN
)@@G@@LOCK        @[B@ Q@@@:ZYUNLOCK      @[B@@@@@@:ZYBLOCK       @[B@#8@@@:ZYKO
)@@G@@UNBLOCK     @[B@A9@@@:ZYACQUIRE     @[B@^F@@@:0KRELEASE     @[B@#\@@@:1^KP
)@@G@@SEMAPHORE   @[B@@@@@@:1>STACKDEF    @[C@^[@@@?2ASTACKCW     @[C@]9@@@?9?KQ
)@@G@@STACKRES    @[C@ A@@@?'QSPINIT      @[C@^V@@@?;[SPTEST      @[C@A%@@@?;8KR
)@@G@@SPPOSN      @[C@^:@@@?_(STACK       @[C@]"@@@!@PUNSTACK     @[C@BB@@@!@_KS
)@@G@@SPMOVE      @[C@@@@@@![0ROUTINE     @[C@^1@@@!]!SUBROUTINE  @[C@@@@@@!]!KT
)@@G@@LOCAL       @[C@],@@@!GQSTATIC      @[C@@@@@@!I3RETURN      @[C@ E@@@!KHKU
)@@G@@S$PREAMBLE  @[C@ V@@@!M*S$POSTAMBLE @[C@@@@@@!ODSTACKDUMP   @[C@@@@@@!PAKV
)@@G@@F$          @[D@^Q@@@!R3FA0$        @[D@@@@@@!R3F$LOCK      @[D@AG@@@!S0KW
)@@G@@F$UNLOCK    @[D@#-@@@!S0F$PRT       @[D@#P@@@!T,F$CSF       @[D@#1@@@!T,KX
)@@G@@F$COLN      @[D@@@@@@!VIF$WRDN      @[D@#2@@@!VIF$MSGR      @[D@^%@@@!VIKY
)@@G@@F$CLEAR     @[D@@@@@@!VIF$CLR       @[D@^I@@@!VIF$PAD       @[D@#F@@@!XMKZ
)@@G@@F$DTA       @[D@@@@@@!Y!F$DTAZ      @[D@ 5@@@!Y!F$DT        @[D@#S@@@!)3LA
)@@G@@F$DTZ       @[D@#]@@@!)3F$CHAR      @[D@@@@@@!+/F$COL       @[D@#L@@@!+/LB
)@@G@@F$SKIP      @[D@#,@@@!+/F$MSG       @[D@ B@@@!+/F$MSKP      @[D@@@@@@!+/LC
)@@G@@F$MSGC      @[D@@@@@@!+/F$MSGCA     @[D@@@@@@!+/F$ASC       @[D@@@@@@!+/LD
)@@G@@F$ASCIN     @[D@#(@@@!+/F$RASE      @[D@@@@@@!&KF$FD3       @[D@^W@@@!$MLE
)@@G@@F$FD2       @[D@@@@@@!$MF$PACKC     @[D@ U@@@!*;F$COPY      @[D@@@@@@!%!LF
)@@G@@F$PACK      @[D@ O@@@!%!F$COPYS     @[D@@@@@@!%!F$PACKS     @[D@AP@@@!%!LG
)@@G@@F$FW        @[D@@@@@@!?'F$MSKPR     @[D@^-@@@!!4F$DECFL     @[D@@@@@@!,"LH
)@@G@@F$OCTF      @[D@@@@@@!08F$DECF      @[D@ -@@@!08F$HEXF      @[D@^)@@@!08LI
)@@G@@F$DECFZ     @[D@@@@@@!08F$DCFZ      @[D@#7@@@!08F$DECV      @[D@@@@@@!3$LJ
)@@G@@F$OCTV      @[D@@@@@@!3$F$HEXV      @[D@^3@@@!3$F$FD1       @[D@AV@@@!3$LK
)@@G@@F$FORMC     @[D@@@@@@!54F$FORM      @[D@^U@@@!54F$FDECFL    @[D@ )@@@!74LL
)@@G@@F$FDECF     @[D@ M@@@!74F$FDECFZ    @[D@A'@@@!74F$FDECV     @[D@ J@@@!74LM
)@@G@@F$FLS1      @[D@ T@@@!'4F$FLG1      @[D@#4@@@!'4F$FLF1      @[D@@@@@@!'4LN
)@@G@@F$FLS2      @[D@@@@@@!'4F$FLG2      @[D@#5@@@!'4F$FLF2      @[D@@@@@@!'4LO
)@@G@@F$TIME      @[D@@@@@@!.JF$DAY1      @[D@^M@@@!.JF$DAY2      @[D@@@@@@!.JLP
)@@G@@F$DAY3      @[D@^5@@@!.JF$DAY4      @[D@@@@@@!.JF$DAY5      @[D@#'@@@!.JLQ
)@@G@@F$WDAY1     @[D@AZ@@@!.JF$WDAY2     @[D@ ;@@@!.JF$TD        @[D@^B@@@!_MLR
)@@G@@F$DAT1      @[D@#"@@@!_MF$DAT2      @[D@@@@@@!_MF$DAT3      @[D@#.@@@!_MLS
)@@G@@F$DAT4      @[D@^.@@@!_MF$DAT5      @[D@ [@@@!_MF$WDAT1     @[D@A$@@@!_MLT
)@@G@@F$WDAT2     @[D@BM@@@!_MAVL$PROCS   @[E@@@@@@,]AAVL$P       @[E@A]@@@,]ALU
)@@G@@AVLIK       @[E@@@@@@,#^AVLIR       @[E@^8@@@,#^AVLSK       @[E@@@@@@,#^LV
)@@G@@AVLDK       @[E@@@@@@,#^AVLSR       @[E@@@@@@,^RAVLDR       @[E@@@@@@,^RLW
)@@G@@AVLDN       @[E@^7@@@,^RAVLCR       @[E@ C@@@,^RAVLDSP      @[E@A.@@@, XLX
)@@G@@AVLDSPKT    @[E@^,@@@,AIAVLTRA      @[E@@@@@@,A8AVL$STATCLR @[E@@@@@@,CULY
)@@G@@AVL$STATS   @[E@ (@@@,CUAVL$FIELDS  @[E@@@@@@,DLAVL$PKT     @[E@@@@@@,FZLZ
)@@G@@AVL$NODES   @[E@AI@@@,G3AVL$TREE    @[E@@@@@@,R-AVL$INIT    @[E@AB@@@,WUMA
)@@G@@AVL$BALN    @[E@ /@@@,:-AVL$SRCH    @[E@^?@@@,5[AVL$CMPR    @[E@@@@@@,9NMB
)@@G@@AVL$CMPK    @[E@@@@@@,94LIB$        @[W@ 1@@@00MLIBRARY     @[W@^*@@@00MMC
)@@G@@MASMLIB     @[W@ &@@@00MDUMP$       @[X@A>@@@01&DUMP        @[X@@@@@@01&MD
)@@G@@FUNCS       @[Y@ 4@@@02YFUNC$       @[Y@^6@@@02YSYMBOLS     @[Z@ 3@@@03QME
)@@G@@SYMBOL$     @[Z@ D@@@03QDUMPSYMBOLS @[Z@@@@@@03QBASE$       @]=@ +@@@5#YMF
)@@G@@BASE        @]=@@@@@@5#7T$IDE       @]$@@@@@@56_T$IDER      @]$@@@@@@56_MG
)@@G@@T$IDEX      @]$@@@@@@56_T$COL       @]$@^4@@@58 T$COLN      @]$@^2@@@58 MH
)@@G@@T$SKIP      @]$@AA@@@58 T$OCTV      @]$@@@@@@59CT$OCTF      @]$@ H@@@59CMI
)@@G@@T$OCTVD     @]$@ <@@@59CT$OCTFD     @]$@@@@@@59CT$DECV      @]$@@@@@@59CMJ
)@@G@@T$DECF      @]$@A5@@@59CT$DECVD     @]$@A7@@@59CT$DECFD     @]$@@@@@@59CMK
)@@G@@T$INTV      @]$@@@@@@5;IT$INTF      @]$@AT@@@5;IT$INTVD     @]$@@@@@@5;IML
)@@G@@T$INTFD     @]$@ :@@@5;IT$FLOV      @]$@@@@@@5/0T$FLOF      @]$@@@@@@5/0MM
)@@G@@T$FLOVD     @]$@ #@@@5/0T$FLOFD     @]$@@@@@@5/0T$GENV      @]$@@@@@@5"JMN
)@@G@@T$GENF      @]$@@@@@@5"JT$GNRV      @]$@@@@@@5"JT$GNRF      @]$@@@@@@5"JMO
)@@G@@T$SCNRF     @]$@@@@@@5_.T$SCNRV     @]$@ I@@@5_.T$CLR       @]$@BJ@@@6@7MP
)@@G@@T$MASK      @]$@@@@@@6[$T$DEF       @]$@@@@@@6]VT$FIELDS    @]$@@@@@@6JBMQ
)@@G@@T$PROC      @]$@A2@@@6OCT$ENTRY     @]$@ $@@@6+HT$PKTGN     @]$@@@@@@6<)MR
)@@G@@T$PKTG      @]$@@@@@@6<)T$PKT       @]$@A_@@@6<)T$SCANV     @]$@A#@@@6?NMS
)@@G@@T$SCANF     @]$@@@@@@6?NT$NBRKV     @]$@@@@@@6?NT$NBRKF     @]$@@@@@@6?NMT
)@@G@@T$AD        @]$@@@@@@6,]T$ADD       @]$@@@@@@6,]T$AH1       @]$@@@@@@6,]MU
)@@G@@T$CHAR      @]$@AE@@@62LT$CHARN     @]$@A4@@@62LT$FIND      @]$@@@@@@66)MV
)@@G@@T$NFIND     @]$@A!@@@66)T$FINDA     @]$@ R@@@66)T$NFINDA    @]$@AC@@@66)MW
)@@G@@T$SEEK      @]$@A(@@@66)T$NSEEK     @]$@@@@@@66)T$SEEKA     @]$@ \@@@66)MX
)@@G@@T$NSEEKA    @]$@AW@@@66)T$MASKR     @]$@@@@@@6'IT$MASKL     @]$@AY@@@6'IMY
)@@G@@T$ATBL      @]$@@@@@@7],T$TRD       @]$@@@@@@7C8T$RD        @]$@ %@@@7C8MZ
)@@G@@T$CLN       @]$@AF@@@7EXT$BLIN      @]$@@@@@@7EXT$CLNESC    @]$@BH@@@7GCNA
)@@G@@T$CLNADD    @]$@@@@@@7G.T$CLNFUL    @]$@BC@@@7H3T$CLNPK     @]$@@@@@@7I?NB
)@@G@@E$DEF       @]*@@@@@@7OCE$FIELDS    @]*@BQ@@@7=RE$APROC     @]*@ .@@@7*KNC
)@@G@@E$AD        @]*@@@@@@7?EE$AD0       @]*@@@@@@7?EE$APRT      @]*@@@@@@76]ND
)@@G@@E$PRTG      @]*@@@@@@76]E$PRTGA     @]*@@@@@@76]E$PRTA      @]*@A"@@@76]NE
)@@G@@E$PRT       @]*@A^@@@76]E$PRTI      @]*@A8@@@76]E$APRTI     @]*@@@@@@76]NF
)@@G@@E$CSF       @]*@A)@@@76]E$DITX      @]*@ ,@@@78FE$COLN      @]*@@@@@@78FNG
)@@G@@E$WRDN      @]*@A-@@@78FE$MSGR      @]*@@@@@@78FE$CLEAR     @]*@@@@@@78FNH
)@@G@@E$PAD       @]*@ '@@@7'IE$DIT       @]*@ 7@@@7;LE$DITR      @]*@AO@@@7;LNI
)@@G@@E$CHAR      @]*@@@@@@7;LE$COL       @]*@A@@@@7;LE$SKIP      @]*@AX@@@7;LNJ
)@@G@@E$MSG       @]*@@@@@@7;LE$MSKP      @]*@@@@@@7;LE$RASE      @]*@@@@@@7"#NK
)@@G@@E$FD3       @]*@@@@@@7"7E$FD2       @]*@@@@@@7"7E$PACKC     @]*@BG@@@8@PNL
)@@G@@E$COPY      @]*@@@@@@8[!E$PACK      @]*@@@@@@8[!E$COPYS     @]*@@@@@@8[!NM
)@@G@@E$PACKS     @]*@@@@@@8[!E$FW        @]*@@@@@@8#/E$MSKPR     @]*@@@@@@8^,NN
)@@G@@E$DECFL     @]*@BO@@@8 !E$OCTF      @]*@@@@@@8A.E$DECF      @]*@@@@@@8A.NO
)@@G@@E$HEXF      @]*@@@@@@8A.E$DECFZ     @]*@@@@@@8A.E$DCFZ      @]*@A&@@@8A.NP
)@@G@@E$DECV      @]*@@@@@@8DME$OCTV      @]*@@@@@@8DME$HEXV      @]*@@@@@@8DMNQ
)@@G@@E$FD1       @]*@A*@@@8DME$FORMC     @]*@@@@@@8FFE$FORM      @]*@@@@@@8FFNR
)@@G@@E$FDECFL    @]*@@@@@@8G$E$FDECF     @]*@@@@@@8G$E$FDECFZ    @]*@@@@@@8G$NS
)@@G@@E$FDECV     @]*@@@@@@8G$E$FLS1      @]*@A:@@@8J$E$FLG1      @]*@A<@@@8J$NT
)@@G@@E$FLF1      @]*@@@@@@8J$E$FLS2      @]*@@@@@@8J$E$FLG2      @]*@A=@@@8J$NU
)@@G@@E$FLF2      @]*@A6@@@8J$E$TIME      @]*@@@@@@8M]E$DAY1      @]*@B[@@@8M]NV
)@@G@@E$DAY2      @]*@@@@@@8M]E$DAY3      @]*@A?@@@8M]E$DAY4      @]*@@@@@@8M]NW
)@@G@@E$DAY5      @]*@BN@@@8M]E$WDAY1     @]*@BE@@@8M]E$WDAY2     @]*@BF@@@8M]NX
)@@G@@E$TD        @]*@@@@@@8OFE$DAT1      @]*@@@@@@8OFE$DAT2      @]*@@@@@@8OFNY
)@@G@@E$DAT3      @]*@@@@@@8OFE$DAT4      @]*@@@@@@8OFE$DAT5      @]*@@@@@@8OFNZ
)@@G@@E$WDAT1     @]*@BK@@@8OFE$WDAT2     @]*@BL@@@8OFE$PKTXA     @]*@@@@@@8QPOA
)@@G@@E$PKTA      @]*@@@@@@8QPE$PKT       @]*@@@@@@8QPE$PKTF      @]*@@@@@@8QPOB
)@@G@@E$TBL       @]*@BT@@@8VXE$TBLX      @]*@@@@@@8VXEDIT$PROC   @]*@@@@@@8&TOC
)@@G@@A$EFIELDS   @]*@@@@@@80FA$EDITX     @]*@A1@@@82;A$ECOLN     @]*@@@@@@82;OD
)@@G@@A$EMSGR     @]*@@@@@@82;A$ECLEAR    @]*@@@@@@82;A$EDIT      @]*@@@@@@84%OE
)@@G@@A$EDITR     @]*@@@@@@84%A$ECHAR     @]*@@@@@@84%A$ECOL      @]*@@@@@@84%OF
)@@G@@A$ESKIP     @]*@@@@@@84%A$EMSG      @]*@@@@@@84%A$EFD2      @]*@@@@@@87JOG
)@@G@@A$ECOPY     @]*@@@@@@88AA$EPACK     @]*@@@@@@88AA$EOCTF     @]*@@@@@@89\OH
)@@G@@A$EDECF     @]*@@@@@@89\A$EDCFZ     @]*@@@@@@89\A$EDECV     @]*@@@@@@89\OI
)@@G@@A$EOCTV     @]*@@@@@@89\A$EFD1      @]*@@@@@@89\A$EFLS1     @]*@@@@@@8/\OJ
)@@G@@A$EFLG1     @]*@@@@@@8/\A$EFLF1     @]*@@@@@@8/\A$EFLS2     @]*@@@@@@8/\OK
)@@G@@A$EFLG2     @]*@@@@@@8/\A$EFLF2     @]*@@@@@@8/\A$ETIME     @]*@@@@@@8_HOL
)@@G@@A$EDAY1     @]*@@@@@@8_HA$EDAY2     @]*@@@@@@8_HA$EDAY3     @]*@@@@@@8_HOM
)@@G@@A$EDAY4     @]*@@@@@@8_HA$EDAY5     @]*@@@@@@8_HA$ETD       @]*@@@@@@9@;ON
)@@G@@A$EDAT1     @]*@@@@@@9@;A$EDAT2     @]*@@@@@@9@;A$EDAT3     @]*@@@@@@9@;OO
)@@G@@A$EDAT4     @]*@BP@@@9@;A$EDAT5     @]*@@@@@@9@;A$EPKT      @]*@@@@@@9]!OP
)@@G@@A$EPKTF     @]*@@@@@@9]!ELT$PKT     @](@@@@@@9A'IOPKT$      @]%@@@@@@9L$OQ
)@@G@@IO$PKT      @]%@@@@@@9N5C@)D<3T8)@@]G@)D=PC[)D<3T9)@@]G[)D=QC@0@@M9!,@@AOR
)@@G@@"(\@@A"-@@@MC@)D<3T8)@@]G@)D=PC[)D<3T9)@@]G[)D=QC@0@@M9!,@@C"(\@@C"-@@@MOS
)@@G@@9(@D=RO8K@@ A@KD<38L@ M7/K@ K5C[]K@@T[@D=T[[@D=KR8K@@[A@KD<3H9@@@[G[@D=TOT
)@@G@@;P@@@=W[@D=TN[@@@KC[@D=T[[@D=,/K@ OCC@)D<3T8)@@]G@)D=PC[@D<3T9@@@]G[@D=QOU
)@@G@@C@0@@K9!I@@@"(J@@@"-@D=R9(@D=RO@KD=,A@KD<38L@ N;/K@ K5R]0D>]R@KD>#R@)D>^OV
)@@G@@9!)D> 9,@D>B9,)D>DN[@D>F9?@D=W/KF@@@A]0D>]A@KD>#A@)D>^9()D> 9%@D>B9%)D>DOW
)@@G@@^[@D>FR@)@@GC@KD>J&'0@@@/,0@1GC[]K@][[@D=YC +@@[H9)@@][[)D=VC]]K@@/]@ O&OX
)@@G@@/E@ O(9!@D=@9(@D=W/K@ RHC9@ O3[[@D=L9!)D=@9()D= C]]K@@T]@D=Y[]@D=JC')@@[OY
)@@G@@[])D<2/K@T=LC@)D<2T8)@@]G@)D=V95I@@@91@@@K"-@D=D/H@ QNC9@ O"[[@D=L9!)D=@OZ
)@@G@@9()D<,C@)D<2T8)@@]G@)D=V9!I@@@9.@D=@/K@ P /K@ R@C@)D<2T8)@@]G@)D=V95I@@@PA
)@@G@@91@@@K"-@D=D/H@ QNC9@ P<[[@D=L/K@ PXC[@D<4[[@D<2C9) P%[[)D=LC@)D<2T8)@@]PB
)@@G@@G@)D=V9,@D= ",I@@@C@)D<2T8)@@]G@)D=V",I@@@9%@D= C@)D<2T8)@@]G@)D=V95I@@@PC
)@@G@@9(@D<,/K@ Q#C@)D<2T8)@@]G@)D=V95I@@@91@@@K"-@D=D/H@ QJC@)D<2T8)@@]G@)D=VPD
)@@G@@95I@@@91@@@K"-@D<,/D@ Q#C@)D<2T8)@@]G@)D=V9!@D<,"!I@@@9(@D=:Q;@D><&"0@@@PE
)@@G@@/,0@.%"*@D= ")@D</9*@D= C@)D<2T8)@@]G@)D=V95I@@@9(@D<,/K@ R@C@)D<2T8)@@]PF
)@@G@@G@)D=V9!I@@@"!@D<,9(@D=:Q;@D>>&"0@@@/,0@.%")@D= 9*@D= /K@ R@9!@D= "(@D<,PG
)@@G@@"(@D<,9(@D= C.@@]V"P]K@@C[@@@L"9@@@K9!)D=B"!)@@K9()D=]R@KD<2A@KD<4C[@D=JPH
)@@G@@H[@D<2G[@D=Y;P@@@=W[@D=YN[@@@K^[@D=!C[@D=Y[[@D=:/K@ Q9^[@D=!C@)D<4T8)@@]PI
)@@G@@G@)D=V95I@@@">@D=]/D@ PJC@)D<4T8)@@]G@)D=VAB)D>$Q;@D>$&"0@@@/,0@.%")@D= PJ
)@@G@@9*@D= R@KD<4O@KD=:A@KD<4N[@D=!8L@ Q&C@@D>%&"0@@@/,0@0>9*@D=W/K@ RHC[@D=YPK
)@@G@@G[@D<2[[@D<2C[)D=J/ @ RA/[) O2![)@@K/K@ O2C@@D>?&"0@@@/,0@0>"*@D<,9*@D=WPL
)@@G@@/K@ OER]0D>KR@KD>LR@)D>M9!)D>N9,@D>P9,)D>R9\@D>T9\)D>VN[@D>X/KF@@@A]0D>KPM
)@@G@@A@KD>LA@)D>M9()D>N9%@D>P9%)D>R9:@D>T9:)D>V^[@D>XR@)@@GC@KD>+&'0@@@/,0@1GPN
)@@G@@C[]K@@[[@D=-C[+K@][[)D=+C]]K@^[]@D=<9,+K@ 9%)D==9\]K@A9:@D=&CB+@@[H;)@@]PO
)@@G@@[#)D=ZC ]@@#H9@@@][[@D=)C[@D=-/H@ T!/[@ T!9!@D=&9.@D<"/K@ R_9!@D==9.@D<'PP
)@@G@@/K@ R_/K@ T!C[@D=+(@@D=</[@ S^%[@D=</K@ S1/H@ S1/[@ S1C[@D=-T[@D=+[[@D=^PQ
)@@G@@R8K@@[A@KD<1H9@@@[G[@D=+;P@@@=W[@D=+N[@@@KC[@D=+[[@D=(/K@ S\C@)D<1T8)@@]PR
)@@G@@G@)D=Z9!I@@@9(@D<6C@)D<1T8)@@]G@)D=)9!,@@@9()D<8C@)D<1T8)@@]G@)D=Z"(@D==PS
)@@G@@"()D=&"-@@@M9(I@@@C@)D<1T8)@@]G@)D=)9!@D=&"(@D<69!)D=="()D<8">)@@K9(,@@@PT
)@@G@@O@KD=(A@KD<18L@ SN/K@ T!C9@@@[[[@D=H[[@D=IC[)D=+/D) S./[) S.C[@D=-H9@@@[PU
)@@G@@T[@D=+D[@@@KG9@@@[[[@D=HC[@D=</D@ TA/[@ TAC[@D=-H9@@@[T[@D=<D[@@@KG9@@@[PV
)@@G@@[[@D=IR8K@@[A@KD<1N[@D=-/K@ T?C@)D=HT8)@@]G@)D=Z9!I@@@9(@D<6C@)D=IT8)@@]PW
)@@G@@G@)D=)9!,@@@9()D<8C@)D=HT8)@@]G@)D=Z"(@D=="()D=&"-@@@M9(I@@@C@)D=IT8)@@]PX
)@@G@@G@)D=)9!@D=&"(@D<69!)D=="()D<8">)@@K9(,@@@C[@D=+G[@D=H[[@D=HC[)D=<G[)D=IPY
)@@G@@[[)D=IO8K@@[A@KD<18L@ TE/K@ RIR]0D&(R@KD&%R@)D&:R@0D&?R[@D&!9!)D&,9,@D&0PZ
)@@G@@9,)D&29\@D&49\)D&6N[@D&8N[KD&9N[)D&'/KF@@@A]0D&(A@KD&%A@)D&:A@0D&?A[@D&!QA
)@@G@@9()D&,9%@D&09%)D&29:@D&49:)D&6^[@D&8^[KD&9^[)D&'R[@@@GC@KD&_&'0@@@/,0@1GQB
)@@G@@C[^K@#[[@D&XC[=K@^[[)D&YC]^K@ []@D&ZC]=K@A[])D&)C#@D&ZT;@@@][#@D&GC#)@@SQC
)@@G@@T#=K@B[#)D&HC[@@@SG[@@@UG9@@@]C[)@@UT[)D&);P)@@=W9)@@][[)D&IC =@@@H[)@@KQD
)@@G@@[[)D&FC[@D&X[[@D&KCB^@@[H;@@@[[#@D&JCB=@@]H;)@@][#)D&LC[@D&ZT9@@@][[@D&NQE
)@@G@@C[)@@KG9)@@]C]@@@KT]@D&);Q@@@=W'@@@][]@D&OCA^@@CH]@@@M[]@D&MC[@D&ZT9@@@]QF
)@@G@@[[@D&QC[)@@KG9)@@]C]@@@KT]@D&);Q@@@=W'@@@][]@D&RCA^@@DH]@@@M[]@D&PC[@D&ZQG
)@@G@@T9@@@][[@D&TC[)@@KG9)@@]C]@@@KT]@D&);Q@@@=W'@@@][]@D&UCA^@@EH]@@@M[]@D&SQH
)@@G@@C[@D&Y[[@D&WC =@@FH9)@@][[)D&VG#@D&[C@)@@SC#I@@@[#@D&EC@)D&^G@)D&JC[I@@@QI
)@@G@@[[@D>3/H@ YE/[@ YEC[@D>3:9@@@[/K@ V:!9@@@#/K@ V: @@@@K/K@ V?C.@@@[[[@D>_QJ
)@@G@@C[)D>3!9)@@]/K@ V2 @@@@K/K@ V3C.@@@[[[@D&@C[)D>_/-) V"R]4@@DA]0D$[C[@D&ZQK
)@@G@@T[@D&)[[@D&-C@@D$^&"0@@@/,0A$#C[@D&@/-@ WCR]4@@EA]0D$AC[@D&ZT[@D&)[[@D&-QL
)@@G@@C@@D$D&"0@@@/,0A$#R8K@@[A@KD>5N[@D&)^[@D&+/K@ YC^[@D&+R8)@@[A@)D>3N[KD&ZQM
)@@G@@^[KD&</K@ Y#^[KD&<C@)D>3T8)@@]G@)D&MC[@D>5T[@D&NG@)@@KAB)D$EQ;@D$E&"0@@@QN
)@@G@@/,0@.%9*@D>0C[@D&E[[@D>6R80@@[A@0D>4N[=K@B/K@ W9C@)D>6T8)@@]G@)D&VC[@D>3QO
)@@G@@T9@@@]G[@D&FC[)D>4T[)D&GG[@@@MC[)D>5T[)D&HG[@@@MC@0@@K9!J@@@9(I@@@C[@D>6QP
)@@G@@G9@@@[[[@D>6O80@@[A@0D>48L) W>R]4@@BA]0D$GR]4@@]A]0D$IC@)D&ET8)@@]G@)D&VQQ
)@@G@@[@)D$HC@)D&ET8)@@]G@)D&V[@)D$JC@@D$L&"0@@@/,0^0XR]4@@BA]0D$MC@)D&ET8)@@]QR
)@@G@@G@)D&V[@)D$NC@)D&ET8)@@]G@)D&V[@)D$PC@@D$S&"0@@@/,0 K_9*@D>790@@@G")@D>;QS
)@@G@@9*@D>990@@@G")@D>./C@ Y@9!@D>0"(@D>7"!@D>99(@D>0C[)D>_/-) X\C@)D>3T8)@@]QT
)@@G@@G@)D&PC[@D>5T[@D&QG@)@@KC[)@@IC@@D$U&"0@@@/,0@0>C@)@@M9*I@@@C[@D&@/-@ Y@QU
)@@G@@C@)D>3T8)@@]G@)D&SC[@D>5T[@D&TG@)@@K9!@D>0"!@D>99(@D&=C[)@@IC@@D$W&"0@@@QV
)@@G@@/,0@0>C@)@@M9*I@@@R@)D>3O8)@@[A@)D>3N[KD&<8LK WNR@KD>5O8K@@[A@KD>5N[@D&+QW
)@@G@@8L@ WHC@)D&#G@)D&JC[I@@@H[^K@B?9@@@]/K@ Z4C[^K@BG9@@@[T[^K@B;P@@@=W9@@@]QX
)@@G@@[[@D&]C@)D& G@)D&JE[,@@@[[)D&AR8K@@[A@KD>5N[@D&)/K@ Z3R8)@@[A@)D>3N[KD&ZQY
)@@G@@/K@ Z\C[@D&E[[@D>6R80@@[A@0D>4N[=K@B/K@ Y/C@)D>6T8)@@]G@)D&VC[@D>3T9@@@]QZ
)@@G@@G[@D&FC[)D>4T[)D&GG[@@@MC[)D>5T[)D&HG[@@@MC@0@@K9!J@@@9(I@@@C[@D>6G9@@@[RA
)@@G@@[[@D>6O80@@[A@0D>48L) Y*R]4@@BA]0D$XR]4@@]A]0D$ZC@)D&ET8)@@]G@)D&V[@)D$YRB
)@@G@@C@)D&ET8)@@]G@)D&V[@)D$)C@@D$+&"0@@@/,0^0XR]4@@BA]0D$<R]4@@]A]0D$>C@)D&ERC
)@@G@@T8)@@]G@)D&V[@)D$=C@)D&ET8)@@]G@)D&V[@)D$&C@@D$*&"0@@@/,0#9AR]4@@BA]0D$:RD
)@@G@@C@)D&AT8)@@]G@)D&V[@)D$?C@)D&ET8)@@]G@)D&V[@)D$,C@)D&ET8)@@]G@)D&V[@)D$\RE
)@@G@@C@@D$2&"0@@@/,0^7,R@)D>3O8)@@[A@)D>38LK Y+R@KD>5O8K@@[A@KD>58L@ YY/K@ T,RF
)@@G@@R]0D(DR@KD(ER@)D(FR@0D(GR[@D(H9!)D(I9,@D(K9,)D(M9\@D(O9\)D(QN[@D(SN[KD(TRG
)@@G@@N[)D(U/KF@@@A]0D(DA@KD(EA@)D(FA@0D(GA[@D(H9()D(I9%@D(K9%)D(M9:@D(O9:)D(QRH
)@@G@@^[@D(S^[KD(T^[)D(UR[@@@GC@KD()&'0@@@/,0@1GC[^K@D[[@D*?C =@@@H9)@@][[)D*:RI
)@@G@@C]^K@ T'@@@][]@D*,T[@@@O[[@D*\C])@@OG])@@KG')@@]C#@@@KT#^K@B;R@@@=W;@@@]RJ
)@@G@@[#@D*0CB=@@[H#)@@Q[#)D*!C[^K@#[[@D*2CA^@@]H'@@@[[]@D*1C]=K@ T')@@][])D*4RK
)@@G@@C[@@@QG9@@@]C[)@@QT[=K@B;P)@@=W9)@@][[)D*5C =@@EH[)@@K[[)D*3C[^K@ T9@@@]RL
)@@G@@[[@D*7C])@@KG')@@]C[)@@KT[=K@B;P)@@=W9)@@][[)D*8C =@@FH[)@@Q[[)D*6C[^K@ RM
)@@G@@T9@@@][[@D*'C])@@KG')@@]C[)@@KT[=K@B;P)@@=W9)@@][[)D*;C =@@GH[)@@Q[[)D*9RN
)@@G@@C[^K@^[[@D*.CA=@@HH')@@][])D*/C[^K@D[[@D*_C ^@@IH9@@@][[@D*"C[^K@DG9@@@[RO
)@@G@@T[^K@D;P@@@=W9@@@][[@D*TC@)D*1C[I@@[/ @ -3R]4@@]A]0D(+R]4@@#A]0D(<R]4@@^RP
)@@G@@A]0D(=R]4@@HA]0D(>C@@D($&"0@@@/,0A 6C@)D*1C[I@@[[[@D$7:9@@@[/K@ >PE[@D$7RQ
)@@G@@:9@@@]/K@ >'C[^K@B/H@ %T/[@ %TC[=K@D/H) %T/[) %TC]^K@ /I@ %T/]@ %TC]=K@ARR
)@@G@@/I) %T/]) %T/ @ +D/]) +F?])@@K/K@ %TC@)D**G@)D*1C[@D**G[@D*1C@0@@KC[J@@@RS
)@@G@@G[^K@D[[I@@@C@)D*QG@)D*1C[@D*QG[@D*1C[=K@DG9)@@HT[=K@D;P)@@=W9)@@]C@0@@KRT
)@@G@@G[\@@@[[,@@@C[@D$7:9@@@I/K@ +\C[@D$7?9@@@G/K@ <!C[@D$7%9@@@G/K@ +:C@)D*1RU
)@@G@@C9@@@H[[I@@[C9@@@[[[@D*M[[@D*Y/K@ <5C@)D*NG@)D*1C[I@@@[[@D*UC@)D*ET8)@@]RV
)@@G@@G@)D*/9!,@@@">)D*]/H) <^R]4@@DA]0D(*R]4@@@A]0D((C@)D*ET8)@@]G@)D*/[@)D(%RW
)@@G@@C@@D(?&"0@@@/,0A$#C@)D*OT8)@@]G@)D*/9!@D*]">I@@@/D@ <RR]4@@DA]0D(!C@)D*URX
)@@G@@T8)@@]G@)D*/[@)D(,C@)D*OT8)@@]G@)D*/[@)D(\C@@D(1&"0@@@/,0A$#C[^K@DG[@D*URY
)@@G@@[[@D$/C@)D*LT8)@@]G@)D*/9!)D*]">,@@@/D) <!R]4@@DA]0D(2C@)D$/T8)@@]G@)D*/RZ
)@@G@@[@)D(3C@)D*LT8)@@]G@)D*/[@)D(4C@@D(6&"0@@@/,0A$#C@)D$;G@)D*1C[I@@@[[@D*MSA
)@@G@@C@)D*[G@)D*1C[,@@@[[)D*YR]4@@@A]0D(7R]4@@]A]0D(9R]4@@#A]0D('R]4@@^A]0D(;SB
)@@G@@R]4@@DA]0D(/R]4@@DA]0D(.R]4@@HA]0D("R]4@@IA]0D(_C@)D*MT8)@@]G@)D*/[@)D(8SC
)@@G@@C@)D*YT8)@@]G@)D*/[@)D%@C@@D%#&"0@@@/,0^K6C@)D*1C[I@@[H9@@@]/[@ =V/D@ %-SD
)@@G@@C@)D$'T8)@@]G@)D*/9!@D*]9(I@@@/K@ 08R]4@@DA]0D%^C@)D*MT8)@@]G@)D*/[@)D% SE
)@@G@@C@@D%C&"0@@@/,0A$#C@)D*VG@)D*1C[I@@@/[@ =(/D@ 08R]4@@DA]0D%DC@)D*YT8)@@]SF
)@@G@@G@)D*/[@)D%EC@@D%H&"0@@@/,0A$#C@)D*CG@)D*1C[I@@@[[@D*GT9@@@]G[@D*/C@)@@KSG
)@@G@@[@)D%JC@@D%M&"0@@@/,0A$#C@)D*DG@)D*1C[I@@@[[@D*HR]4@@DA]0D%NT9@@@]G[@D*/SH
)@@G@@C@)@@K[@)D%OC@@D%R&"0@@@/,0A$#C@)D$8G@)D*1 @I@@@C@)D*VG@)D*1C[I@@@/ @ >OSI
)@@G@@C@)D*1C.@__.[[I@@[/K@ 08R]4@@EA]0D%TC[^K@ T[^K@B[[@D(@C@@D%W&"0@@@/,0 ONSJ
)@@G@@9*@D$_C@)D*PT8)@@]G@)D*/90@@@G")I@@@/G@ %OC@)D$'T8)@@]G@)D*/C[@D$'T9@@@]SK
)@@G@@G[@D*/C[)@@IC]@@@KQ;@D%X&"0@@@/,0@.%"*@D*WC@)@@O")I@@@C@)@@M9*I@@@C[^K@CSL
)@@G@@(@^K@A/[@ >9?[^K@A/K@ 08/K@ <!C@)D$5G@)D*1C[I@@@/H@ %X/[@ %XC@)D*1C[I@@[SM
)@@G@@:9@@@]/K@ $^C@)D*[G@)D*1C[I@@@[[@D*YR8K@@[A@KD$/N[^K@B/K@ &'C[@D*Y[[@D*ZSN
)@@G@@R8)@@[A@)D$"N[OK@D/K@ &6C@)D*ZT8)@@]G@)D*/C[@D*ZT9@@@]G[@D*/R]4@@ A]0D%ZSO
)@@G@@C[)D$"T[)D*,G[)D*!C]@D$/T]@D*\G[)@@OC@0@@MC9\@@][[)D%)C@@D$/T@@D*4G@@D*3SP
)@@G@@C9?@@][[)D%+C[)@@IC]@@@KC@@D%>&"0@@@/,0 K_C@)@@O")I@@@C@)@@M9*I@@@C[@D*ZSQ
)@@G@@G9@@@[[[@D*ZR@)D$"O8)@@[A@)D$"8LK &LR@KD$/O8K@@[A@KD$/8L@ &FC[^K@C(@^K@ASR
)@@G@@/[@ $@?[^K@A/K@ $#C@)D*1C9@@@][[I@@[/K@ 08C@)D*VG@)D*1C[^K@D(@I@@@/[@ $FSS
)@@G@@?[I@@@/K@ !?C@)D$;G@)D*1C[I@@@[[@D*MC@)D*VG@)D*1C[,@@@/H) *D/[) *DR8K@@[ST
)@@G@@A@KD$/N[^K@B/K@ *BC[@D*M[[@D*SR8)@@[A@)D$"N[OK@D/K@ *#C@)D*ST8)@@]G@)D*/SU
)@@G@@C[@D*ST9@@@]G[@D*/R]4@@ A]0D%&C[)D$/T[)D*4G[)D*3C@0@@MC9\@@][[)D%$C@@D$"SV
)@@G@@T@@D*,G@@D*!C[)D$/T[)D*\G@@@@MC9?@@][[)D%(C[)@@IC]@@@KC@@D%?&"0@@@/,0 K_SW
)@@G@@C@)@@O")I@@@C@)@@M9*I@@@C[@D*SG9@@@[[[@D*SR@)D$"O8)@@[A@)D$"8LK $YR@KD$/SX
)@@G@@O8K@@[A@KD$/8L@ $S/K@ (8C@)D*DG@)D*1C[I@@@[[@D*HC@)D*CG@)D*1C[,@@@[[)D*GSY
)@@G@@R8K@@[A@KD$"N[^K@B/K@ (OR8)@@[A@)D$.N[OK@ /K@ (KC[@D*M[[@D*SR80@@[A@0D$/SZ
)@@G@@N[=K@D/K@ *3C@)D*ST8)@@]G@)D*/C[@D$.T9@@@]G[@D*!C[)D$/T[)D*,G[@@@MC[)D$"TA
)@@G@@T[)D*\G[@@@MC@0@@K9!J@@@9(I@@@C[@D*SG9@@@[[[@D*SO80@@[A@0D$/8L) *ZC@)D$.TB
)@@G@@T8)@@]G@)D*3C[@D$"T[@D*4G@)@@K9!I@@@9(@D*AR]4@@DA]0D%!C@)D*HT8)@@]G@)D*/TC
)@@G@@[@)D%,C@)D*GT8)@@]G@)D*/[@)D%\C@)D*MT8)@@]G@)D*/[@)D%0C@@D%3&"0@@@/,0]S.TD
)@@G@@R@)D$.O8)@@[A@)D$.8LK *TR@KD$"O8K@@[A@KD$"8L@ *PC@)D$9G@)D*1C[I@@@/H@ (8TE
)@@G@@/[@ (8C@)D*VG@)D*1C[I@@@/[@ (Z/D@ (8R]4@@@A]0D%4R]4@@[A]0D%5R]4@@]A]0D%6TF
)@@G@@R]4@@#A]0D%7R]4@@^A]0D%8R]4@@ A]0D%9R]4@@AA]0D%'R]4@@BA]0D%;R]4@@CA]0D%/TG
)@@G@@R]4@@DA]0D%.R]4@@HA]0D%"C@@D:[&"0@@@/,0#>*C[^K@C(@^K@A/[@ (.?[^K@A/K@ 08TH
)@@G@@C@)D*VG@)D*1C[I@@@/[@ %]/D@ <!R]4@@DA]0D:]C@)D*MT8)@@]G@)D*/[@)D:#C@)D*GTI
)@@G@@T8)@@]G@)D*/[@)D:^C@)D*HT8)@@]G@)D*/[@)D: C@@D:B&"0@@@/,0]D'/K@ <!C@)D*JTJ
)@@G@@G@)D*1C9@@@[[[I@@@/K@ <!C@)D*1C9@@[][[I@@[/K@ 0QC@)D*1C9@@[[[[I@@[/K@ 0QTK
)@@G@@C@)D*1C[I@@[%9@@@I/K@ :!C@)D*(G@)D*1C[@D*^G[@D*1C@0@@KC[J@@@[[I@@@C@)D*^TL
)@@G@@G@)D*1C[@D*(G[@D*1C@0@@KC[J@@@G[^K@D[[I@@@C@)D*[G@)D*1C[@D* G[@D*1C@0@@KTM
)@@G@@C[J@@@[[I@@@C@)D$;G@)D*1C[@D*[G[@D*1C@0@@KC[J@@@G[^K@D[[I@@@C@)D*%G@)D*1TN
)@@G@@C[@D$;G[@D*1C@0@@KC[J@@@G[^K@D[[I@@@C@)D*CG@)D*1C[@D*%G[@D*1C@0@@KC[J@@@TO
)@@G@@G[^K@D[[I@@@C@)D*DG@)D*1C[@D*CG[@D*1C@0@@KC[J@@@G[@D*T[[I@@@C@)D*DG@)D*1TP
)@@G@@C[I@@@G[^K@D[[@D*UC@)D*NG@)D*1[[I@@@C@)D* G@)D*1                        TQ
)@@G@@@I@@@@          SYNVEC    VARTB,*0.                     H               TR
)@@G@@                  @I@@@@          SYNVEC    VARTB,*0.                   TS
)@@G@@  I                                 @I@@@@          SYNVEC    VARTB,*0. TT
)@@G@@                    J                                 @I@@@@          SYTU
)@@G@@NVEC    VARTB,*0.                     K                                 TV
)@@G@@@I@@@@          SYNVEC    VARTB,*0.                     L               TW
)@@G@@                  @I@@@@          SYNVEC    VARTB,*0.                   TX
)@@G@@  M                                 @I@@@@          SYNVEC    VARTB,*0. TY
)@@G@@                    N                                 @I@@@@          SYTZ
)@@G@@NVEC    VARTB,*0.                     O                                 UA
)@@G@@@I@@@@          SYNVEC    VARTB,*0.                     P               UB
)@@G@@                  @I@@@@          SYNVEC    VARTB,*0.                   UC
)@@G@@  Q                                 @I@@@@          SYNVEC    VARTB,*0. UD
)@@G@@                    R                                 @I@@@@          SYUE
)@@G@@NVEC    VARTB,*0.                     S                                 UF
)@@G@@@I@@@@          SYNVEC    VARTB,*0.                     T               UG
)@@G@@                  @I@@@@          SYNVEC    VARTB,*0.                   UH
)@@G@@  U                                 @I@@@@          SYNVEC    VARTB,*0. UI
)@@G@@                    V                                 @I@@@@          SYUJ
)@@G@@NVEC    VARTB,*0.                     W                                 UK
)@@G@@@I@@@@          SYNVEC    VARTB,*0.                     X               UL
)@@G@@                  @I@@@@          SYNVEC    VARTB,*0.                   UM
)@@G@@  Y                                 @I@@@@          SYNVEC    VARTB,*0. UN
)@@G@@                    Z                                 @I@@@@          SYUO
)@@G@@NVEC    *STOPSH,VARTYP.               )                                 UP
)@@G@@@I@@@@          SYNVEC    VARTB,*0.                     -               UQ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  UR
)@@G@@  +                                 @I@@@@          SYNVEC    *STOP,ARYTUS
)@@G@@YP.                 <                                 @I@@@@          SYUT
)@@G@@NVEC    *ERROR,*0.                    =                                 UU
)@@G@@@I@@@@          SYNVEC    *STOPSH,VARTYP.               >               UV
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  UW
)@@G@@  &                                 @I@@@@          SYNVEC    VARTB,*0. UX
)@@G@@                    $                                 @I@@@@          SYUY
)@@G@@NVEC    *ERROR,*0.                    *                                 UZ
)@@G@@@I@@@@          SYNVEC    *STOP,FNCTYP.                 (               VA
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  VB
)@@G@@  %                                 @I@@@@          SYNVEC    *ERROR,*0.VC
)@@G@@                    :                                 @I@@@@          SYVD
)@@G@@NVEC    *ERROR,*0.                    ?                                 VE
)@@G@@@I@@@@          SYNVEC    *ERROR,*0.                    !               VF
)@@G@@                  @I@@@@          SYNVEC    *STOPSH,VARTYP.             VG
)@@G@@  ,                                 @I@@@@          SYNVEC    *ERROR,*0.VH
)@@G@@                    \                                 @I@@@@          SYVI
)@@G@@NVEC    VARTB,*0.                     0                                 VJ
)@@G@@@I@@@@          SYNVEC    VARTB,*0.                     1               VK
)@@G@@                  @I@@@@          SYNVEC    VARTB,*0.                   VL
)@@G@@  2                                 @I@@@@          SYNVEC    VARTB,*0. VM
)@@G@@                    3                                 @I@@@@          SYVN
)@@G@@NVEC    VARTB,*0.                     4                                 VO
)@@G@@@I@@@@          SYNVEC    VARTB,*0.                     5               VP
)@@G@@                  @I@@@@          SYNVEC    VARTB,*0.                   VQ
)@@G@@  6                                 @I@@@@          SYNVEC    VARTB,*0. VR
)@@G@@                    7                                 @I@@@@          SYVS
)@@G@@NVEC    VARTB,*0.                     8                                 VT
)@@G@@@I@@@@          SYNVEC    VARTB,*0.                     9               VU
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  VV
)@@G@@  '                                 @I@@@@          SYNVEC    *STOPSH,VAVW
)@@G@@RTYP.               ;                                 @I@@@@          SYVX
)@@G@@NVEC    *ERROR,*0.                    /                                 VY
)@@G@@@I@@@@          SYNVEC    VARTB,*0.                     .               VZ
)@@G@@                  @I@@@@          SYNVEC    *ERROR,*0.                  WA
)@@G@@  "                                 @I@@@@          SYNVEC    *ERROR,*0.WB
)@@G@@                    _                                 @I@@@@.           WC
)@@G@@                                                                        WD
)@@G@@@I@@@@          END.      COPYMDATA.                                    WE
)@@G@@ JC30             @I@@@@. **********************************************WF
)@@G@@***********COPYMDATJC30             @I@@@@. ****************************WG
)@@G@@*****************************COPYMLINJC30             @I@@@@. EXTERNAL LWH
)@@G@@INKAGES, SUBROUTINES:                                  JC30             WI
)@@G@@@I@@@@.                                                                 WJ
)@@G@@ JC30             @I@@@@COPYMLINK** PROC    0.                          WK
)@@G@@                   JC30             @I@@@@$(1)                          WL
)@@G@@                                                      @I@@@@          LOWM
)@@G@@FF.                    TURN OFF LISTING.               JC05             WN
)@@G@@@I@@@@. *********************************************************APDSPS*WO
)@@G@@*JC00             @I@@@@. APDSPS IS THE SUBROUTINE FOR THE APDSP ('APPENWP
)@@G@@D SPECIFIER')      JC04             @I@@@@. COMMAND.  THE CALL OF:      WQ
)@@G@@                                     JC04             @I@@@@.         APWR
)@@G@@DSP     S1,S2.                                         JC04             WS
)@@G@@@I@@@@. IS EXPANDED INTO:                                               WT
)@@G@@ JC04             @I@@@@.         LX,U      X2,S1.                      WU
)@@G@@                   JC04             @I@@@@.         LX,U      X3,S2.    WV
)@@G@@                                     JC04             @I@@@@.         LMWW
)@@G@@J       A11,APDSPS.                                    JC04             WX
)@@G@@@I@@@@.                                                                 WY
)@@G@@ JC04             @I@@@@. SEE THE MACRO MANUAL FOR A COMPLETE DESCRIPTIOWZ
)@@G@@N OF THIS INSTRUCTIJC04             @I@@@@. BASICALLY, THE STRING S2 IS XA
)@@G@@COPIED INTO THE SPACE IMMEDIATELY AFTJC04             @I@@@@. THE STRINGXB
)@@G@@ S1.  BEFORE THIS IS CALLED, CARE MUST BE TAKEN TO ENSUJC04             XC
)@@G@@@I@@@@. THAT THERE IS ROOM AFTER S1 FOR THE STRING--NO CHECK IS (OR CAN XD
)@@G@@BJC04             @I@@@@. MADE HERE.  S1 WILL ALSO HAVE ITS LENGTH INCREXE
)@@G@@ASED TO L(S1)+L(S2)JC04             @I@@@@. MAKING THE NEW CHARACTERS A XF
)@@G@@PART OF S1.                          JC04             @I@@@@.    A SPECIXG
)@@G@@AL COMMENT OF THE O-FIELD IS IN ORDER HERE.  THE 'OFFSEJC04             XH
)@@G@@@I@@@@. FIELD IS STORED AS A WHOLE WORD, THE 3RD WORD OF A SPECIFIER,   XI
)@@G@@ JC04             @I@@@@. AND IS MADE UP OF TWO INTEGERS, A 'WORD' AND 'XJ
)@@G@@CHARACTER' PART.   JC04             @I@@@@. THUS, FOR A SPECIFIER S,    XK
)@@G@@                                     JC04             @I@@@@.    H2(S+2)XL
)@@G@@+S = WORD CONTAINING FIRST CHARACTER OF STRING;        JC04             XM
)@@G@@@I@@@@.    H1(S+2) = CHARACTER WITHIN WORD (<6).                        XN
)@@G@@ JC04             @I@@@@.                                               XO
)@@G@@                   JC04             @I@@@@. THIS ISN'T LIMITED TO 64K.  XP
)@@G@@                                     JC04             @I@@@@. X1-X3, A0-XQ
)@@G@@A5 ARE USED.                                           JC04             XR
)@@G@@@I@@@@.                                                                 XS
)@@G@@ JC04             @I@@@@APDSPS*.                                        XT
)@@G@@                   JC04             @I@@@@          LA        A0,3,X2.  XU
)@@G@@L(S1) := A1 := (A0:=L(S1))+S(S2);    JC04             @I@@@@          AUXV
)@@G@@        A0,3,X3.  (INCREMENT LENGTH OF S1.)            JC04             XW
)@@G@@@I@@@@          SA        A1,3,X2.  '                                   XX
)@@G@@ JC04             @I@@@@.                                               XY
)@@G@@                   JC04             @I@@@@          AA,H1     A0,2,X2.  XZ
)@@G@@THE WORD TO START COPYING TO IS:     JC04             @I@@@@          DSYA
)@@G@@L       A0,36.       A0 = A(S1)+H2(O(S1))+(H1(O(S1))   JC04             YB
)@@G@@@I@@@@          DI,U      A0,6.                        +L(S1))/6.       YC
)@@G@@ JC04             @I@@@@          AA,H2     A0,2,X2.  THE CHAR WITHIN THYD
)@@G@@IS WORD IS:        JC04             @I@@@@          AA        A0,0,X2.  YE
)@@G@@   A1 = REM(L(S1)+H1(O(S1)),6).      JC04             @I@@@@.           YF
)@@G@@                                                       JC04             YG
)@@G@@@I@@@@          LA,H2     A2,2,X3.  THE WORD TO START COPYING FROM IS:  YH
)@@G@@ JC04             @I@@@@          AA        A2,0,X3.     A2 = A(S2)+H2(OYI
)@@G@@(S2)).             JC04             @I@@@@          LA,H1     A3,2,X3.  YJ
)@@G@@THE CHAR WITHIN THIS WORD IS:        JC04             @I@@@@.           YK
)@@G@@                     A3 = H1(O(S2)).                   JC04             YL
)@@G@@@I@@@@          LXI,U     A0,1.     SET INCREMENTS TO 1.                YM
)@@G@@ JC04             @I@@@@          LXI,U     A1,1.     '                 YN
)@@G@@                   JC04             @I@@@@          LXI,U     A2,1.     YO
)@@G@@'                                    JC04             @I@@@@          LXYP
)@@G@@I,U     A3,1.     '                                    JC04             YQ
)@@G@@@I@@@@          LA        A5,3,X3.  LENGTH OF STRING TO COPY--LOOP CONTRYR
)@@G@@OJC04             @I@@@@          J         APDSPY.                     YS
)@@G@@                   JC04             @I@@@@APDSPX    EX        CHRLA4,*A3YT
)@@G@@.    GET A CHAR OF S1.               JC04             @I@@@@          EXYU
)@@G@@        CHRSA4,*A1.    MOVE IT TO S2.                  JC04             YV
)@@G@@@I@@@@APDSPY    JGD       A5,APDSPX.     IF (A5:=A5-1) >= 0, REPEAT.    YW
)@@G@@ JC04             @I@@@@          J         0,X11.    RETURN.           YX
)@@G@@                   JC04             @I@@@@. ****************************YY
)@@G@@*****************************APDSPS**JC00             @I@@@@. **********YZ
)@@G@@***********************************************CHR TABLJC30             ZA
)@@G@@@I@@@@CHRLA5*.                           LOAD A CHARACTER INTO A5, CALLEZB
)@@G@@DJC11             @I@@@@          LA,S1     A5,0,X2.            EX   CHRZC
)@@G@@LA5,*X3.           JC11             @I@@@@          LA,S2     A5,0,X2.  ZD
)@@G@@     WHERE:                          JC11             @I@@@@          LAZE
)@@G@@,S3     A5,0,X2.            X2 = WORD TO LOAD FROM,    JC11             ZF
)@@G@@@I@@@@          LA,S4     A5,0,X2.            X3 = CHAR WITHIN THE WORD.ZG
)@@G@@ JC11             @I@@@@          LA,S5     A5,0,X2.       AND THE INCREZH
)@@G@@MENTS OF X2 AND X3 JC11             @I@@@@          LMJ       X1,$+1.   ZI
)@@G@@     ARE BOTH SET TO 1.              JC11             @I@@@@          LAZJ
)@@G@@,S6     A5,0,*X2.                                      JC11             ZK
)@@G@@@I@@@@          LXM,U     X3,0.                                         ZL
)@@G@@ JC11             @I@@@@          J         0,X1.                       ZM
)@@G@@                   JC11             @I@@@@.                             ZN
)@@G@@                                     JC11             @I@@@@CHRLA4*   LAZO
)@@G@@,S1     A4,0,A2.           CHARACTER LOAD TABLE                         ZP
)@@G@@@I@@@@          LA,S2     A4,0,A2.                                      ZQ
)@@G@@                  @I@@@@          LA,S3     A4,0,A2.                    ZR
)@@G@@                                    @I@@@@          LA,S4     A4,0,A2.  ZS
)@@G@@                                                      @I@@@@          LAZT
)@@G@@,S5     A4,0,A2.                                                        ZU
)@@G@@@I@@@@          LMJ       X1,$+1.                                       ZV
)@@G@@                  @I@@@@          LA,S6     A4,0,*A2.                   ZW
)@@G@@                                    @I@@@@          LXM,U     A3,0.     ZX
)@@G@@                                                      @I@@@@          J ZY
)@@G@@        0,X1.                                                           ZZ
)@@G@@@I@@@@CHRSA4*   SA,S1     A4,0,A0.           CHARACTER STORE TABLE      AA
)@@G@@                  @I@@@@          SA,S2     A4,0,A0.                    AB
)@@G@@                                    @I@@@@          SA,S3     A4,0,A0.  AC
)@@G@@                                                      @I@@@@          SAAD
)@@G@@,S4     A4,0,A0.                                                        AE
)@@G@@@I@@@@          SA,S5     A4,0,A0.                                      AF
)@@G@@                  @I@@@@          LMJ       X1,$+1.                     AG
)@@G@@                                    @I@@@@          SA,S6     A4,0,*A0. AH
)@@G@@                                                      @I@@@@          LXAI
)@@G@@M,U     A1,0.                                                           AJ
)@@G@@@I@@@@          J         0,X1.                                         AK
)@@G@@                  @I@@@@CHRLX2*   LX,S1     X2,0,A0.           CHARACTERAL
)@@G@@ LOAD TABLE                         @I@@@@          LX,S2     X2,0,A0.  AM
)@@G@@                                                      @I@@@@          LXAN
)@@G@@,S3     X2,0,A0.                                                        AO
)@@G@@@I@@@@          LX,S4     X2,0,A0.                                      AP
)@@G@@                  @I@@@@          LX,S5     X2,0,A0.                    AQ
)@@G@@                                    @I@@@@          LMJ       X1,$+1.   AR
)@@G@@                                                      @I@@@@          LXAS
)@@G@@,S6     X2,0,*A0.                                                       AT
)@@G@@@I@@@@          LXM,U     A1,0.                                         AU
)@@G@@                  @I@@@@          J         0,X1.                       AV
)@@G@@                                    @I@@@@CHRLX4*   LX,S1     X4,0,A2.  AW
)@@G@@     LOAD A CHARACTER INTO X4, CALLEDJC30             @I@@@@          LXAX
)@@G@@,S2     X4,0,A2.          EX   CHRLX4,*A3.             JC30             AY
)@@G@@@I@@@@          LX,S3     X4,0,A2.       WHERE:                         AZ
)@@G@@ JC30             @I@@@@          LX,S4     X4,0,A2.          A2 = ADDREBA
)@@G@@SS OF THE WORD TO UJC30             @I@@@@          LX,S5     X4,0,A2.  BB
)@@G@@        A3 = THE CHAR WITHIN THIS WORJC30             @I@@@@          LMBC
)@@G@@J       X1,$+1.        AND THE INCREMENTS OF A2 AND A3 JC30             BD
)@@G@@@I@@@@          LX,S6     X4,0,*A2.      BOTH SET TO 1.                 BE
)@@G@@ JC30             @I@@@@          LXM,U     A3,0.                       BF
)@@G@@                   JC30             @I@@@@          J         0,X1.     BG
)@@G@@                                     JC30             @I@@@@CHRLM2*   LXBH
)@@G@@,S1     X2,0,A0.           MODIFIED LOAD TABLE                          BI
)@@G@@@I@@@@          LX,S2     X2,0,A0.                                      BJ
)@@G@@                  @I@@@@          LX,S3     X2,0,A0.                    BK
)@@G@@                                    @I@@@@          LX,S4     X2,0,A0.  BL
)@@G@@                                                      @I@@@@          LXBM
)@@G@@,S5     X2,0,A0.                                                        BN
)@@G@@@I@@@@          LX,S6     X2,0,A0.                                      BO
)@@G@@                  @I@@@@CHRTE4*   LMJ       X1,CHRTEX.         TNE TABLEBP
)@@G@@--BACKWARDS SCAN                    @I@@@@          TNE,S2    A15,0,A2. BQ
)@@G@@                                                      @I@@@@          TNBR
)@@G@@E,S3    A15,0,A2.                                                       BS
)@@G@@@I@@@@          TNE,S4    A15,0,A2.                                     BT
)@@G@@                  @I@@@@          TNE,S5    A15,0,A2.                   BU
)@@G@@                                    @I@@@@          TNE,S6    A15,0,A2. BV
)@@G@@                                                      @I@@@@CHRTEX    LXBW
)@@G@@M,U     A3,5.                                                           BX
)@@G@@@I@@@@          TNE,S1    A15,0,*A2.                                    BY
)@@G@@                  @I@@@@          J         0,X1.                       BZ
)@@G@@                                    @I@@@@          J         1,X1.     CA
)@@G@@                                                      @I@@@@CHTNE$*   TNCB
)@@G@@E,S1    A4,0,A0.                                                        CC
)@@G@@@I@@@@          TNE,S2    A4,0,A0.                                      CD
)@@G@@                  @I@@@@          TNE,S3    A4,0,A0.                    CE
)@@G@@                                    @I@@@@          TNE,S4    A4,0,A0.  CF
)@@G@@                                                      @I@@@@          TNCG
)@@G@@E,S5    A4,0,A0.                                                        CH
)@@G@@@I@@@@          TNE,S6    A4,0,A0.                                      CI
)@@G@@                  @I@@@@          LMJ       X1,$+1.                     CJ
)@@G@@                                    @I@@@@          LXM,U     A1,1.     CK
)@@G@@                                                      @I@@@@          TNCL
)@@G@@E,S1    A4,1,*A0.                                                       CM
)@@G@@@I@@@@          J         0,X1.                                         CN
)@@G@@                  @I@@@@          J         1,X1.                       CO
)@@G@@                                    @I@@@@CHTLE$*   TLE,S1    A4,0,A0.  CP
)@@G@@                                                      @I@@@@          TLCQ
)@@G@@E,S2    A4,0,A0.                                                        CR
)@@G@@@I@@@@          TLE,S3    A4,0,A0.                                      CS
)@@G@@                  @I@@@@          TLE,S4    A4,0,A0.                    CT
)@@G@@                                    @I@@@@          TLE,S5    A4,0,A0.  CU
)@@G@@                                                      @I@@@@          TLCV
)@@G@@E,S6    A4,0,A0.                                                        CW
)@@G@@@I@@@@CHAU2$*   AU,S1     A2,0,A0.                                      CX
)@@G@@                  @I@@@@          AU,S2     A2,0,A0.                    CY
)@@G@@                                    @I@@@@          AU,S3     A2,0,A0.  CZ
)@@G@@                                                      @I@@@@          AUDA
)@@G@@,S4     A2,0,A0.                                                        DB
)@@G@@@I@@@@          AU,S5     A2,0,A0.                                      DC
)@@G@@                  @I@@@@          LMJ       X1,$+1.                     DD
)@@G@@                                    @I@@@@          AU,S6     A2,0,*A0. DE
)@@G@@                                                      @I@@@@          LXDF
)@@G@@M,U     A1,0.                                                           DG
)@@G@@@I@@@@          J         0,X1.                                         DH
)@@G@@                  @I@@@@. **********************************************DI
)@@G@@***********CHR TABLJC30             @G@@[]. ****************************DJ
)@@G@@*****************************LEXCMPS*JC04*@G@@[]. LEXCMPS IS THE LEXCMP DK
)@@G@@SUBROUTINE.  IT IS INVOKED BY:             JC04 @G@@[].         LEXCMP  DL
)@@G@@  S1,S2,GT,EQ,LT.                                JC04 @G@@[]. WHICH IS EDM
)@@G@@XPANDED TO:                                            JC04 @G@@[].     DN
)@@G@@    LX,U      X7,S1.                                         JC04 @G@@[]DO
)@@G@@.         LX,U      X8,S2.                                         JC04 DP
)@@G@@@G@@[].         LX,U      X9,GT.                                        DQ
)@@G@@ JC04 @G@@[].         LX,U      X10,EQ.                                 DR
)@@G@@       JC04 @G@@[].         LX,U      X11,LT.                           DS
)@@G@@             JC04 @G@@[].         J         LEXCMPS.                    DT
)@@G@@                   JC04 @G@@[].                                         DU
)@@G@@                         JC04 @G@@[]LEXCMPS*.                           DV
)@@G@@                               JC04 @G@@[]          LA        A6,3,X7.  DW
)@@G@@A6  =  L(S1)                         JC04 @G@@[]          ANU       A6,3DX
)@@G@@,X8.  A7 = L(S1) - L(S2)                   JC04 @G@@[]          LA      DY
)@@G@@  A8,X11.   DOES GT = LT?                        JC04 @G@@[]          TNDZ
)@@G@@E       A8,X9.    IF SO, THIS IS EQ/NE TEST--          JC04 @G@@[]      EA
)@@G@@    JNZ       A7,0,X11. IF LENGTHS DIFFER, TAKE NE EXIT.     JC04 @G@@[]EB
)@@G@@          TN        A7.       OTHERWISE, IF L(S1) > L(S2),         JC04 EC
)@@G@@@G@@[]          LA        A6,3,X8.  USE L(S2) FOR LOOP CONTROL.         ED
)@@G@@ JC04 @G@@[].                             SET UP POINTERS TO STRINGS:   EE
)@@G@@       JC04 @G@@[]          LA        A2,0,X7.  A(S1)                   EF
)@@G@@             JC04 @G@@[]          AA,H2     A2,2,X7.  + OW(S1)          EG
)@@G@@                   JC04 @G@@[]          LA,H1     A3,2,X7.  OC(S1)      EH
)@@G@@                         JC04 @G@@[]          LA        A0,0,X8.  A(S2) EI
)@@G@@                               JC04 @G@@[]          AA,H2     A0,2,X8.  EJ
)@@G@@+ OW(S2)                             JC04 @G@@[]          LA,H1     A1,2EK
)@@G@@,X8.  OC(S2)                               JC04 @G@@[]          LXI,U   EL
)@@G@@  A0,1.     INCREMENTS = 1                       JC04 @G@@[]          LXEM
)@@G@@I,U     A1,1.                                          JC04 @G@@[]      EN
)@@G@@    LXI,U     A2,1.                                          JC04 @G@@[]EO
)@@G@@          LXI,U     A3,1.                                          JC04 EP
)@@G@@@G@@[].                                                                 EQ
)@@G@@ JC04 @G@@[]          J         $+3.      COMPARE THE TWO STRINGS:      ER
)@@G@@       JC04 @G@@[]LEXCMPT   EX        CHRLA4,*A3.    GET A CHAR FROM S1.ES
)@@G@@             JC04 @G@@[]          EX        CHTNE$,*A1.    IS IT EQUAL TET
)@@G@@O THE ONE IN S2?   JC04 @G@@[]          JGD       A6,LEXCMPT.    YEP--ANEU
)@@G@@Y MORE LEFT?             JC04 @G@@[]          JN        A6,LEXCMPE.    NEV
)@@G@@E OR OUT OF CHARS--WHICH ONE?  JC04 @G@@[]          EX        CHTLE$-1,AEW
)@@G@@1.   IF NE, IS S1 CHAR LESS?         JC04 @G@@[]          J         0,X1EX
)@@G@@1.    S1 LESS, TAKE LT EXIT.               JC04 @G@@[]          J       EY
)@@G@@  0,X9.     S2 LESS, TAKE GT EXIT.               JC04 @G@@[].           EZ
)@@G@@                                                       JC04 @G@@[]LEXCMPFA
)@@G@@E.                      RAN OUT OF CHARS--COMPARE LENGTHS.   JC04 @G@@[]FB
)@@G@@          JZ        A7,0,X10. IF L(S1) = L(S2), STRINGS ARE EQ.    JC04 FC
)@@G@@@G@@[]          JN        A7,0,X11. IF L(S1) < L(S2), TAKE LT EXIT.     FD
)@@G@@ JC04 @G@@[]          J         0,X9.     OTHERWISE TAKE GT EXIT.       FE
)@@G@@       JC04 @G@@[]. ****************************************************FF
)@@G@@*****LEXCMPS*JC04 @G@@[]. **********************************************FG
)@@G@@***********LINKS***JC22 @G@@[]. LINKS IS THE SUBROUTINE FOR THE 'LINK' MFH
)@@G@@ACRO.  IT INVOKES AN     JC22 @G@@[]. 'EXTERNAL' FORTRAN SUBROUTINE.  THFI
)@@G@@E LINK MACRO IS CALLED AS:     JC22 @G@@[].         LINK      D1,D2,D3,DFJ
)@@G@@4,FAIL,SUCC.                         JC22 @G@@[]. WHICH IS ASSEMBLED ON FK
)@@G@@THE 1108 AS:                               JC22 @G@@[].         LX,U    FL
)@@G@@  X8,D1.    DESCR FOR RETURN VALUE.              JC22 @G@@[].         LXFM
)@@G@@        X9,D2.    ADDR OF ARGUMENT BLOCK.              JC22 @G@@[].     FN
)@@G@@    LX,U      X10,FAIL. FAILURE EXIT.                        JC22 @G@@[]FO
)@@G@@.         LX,U      X11,SUCC. SUCCESS EXIT.                        JC22 FP
)@@G@@@G@@[].         LA,U      A0,D4.    LOC OF FUNCTION DESCR.              FQ
)@@G@@ JC22 @G@@[].         LA        A1,D3.    NUMBER OF ACTUAL ARGUMENTS.   FR
)@@G@@       JC22 @G@@[].         J         LINKS.    CALL THIS ROUTINE.      FS
)@@G@@             JC22 @G@@[].                                               FT
)@@G@@                   JC22 @G@@[]. A FORTRAN CALLING SEQUENCE IS GENERATED FU
)@@G@@FOR THE DESIRED FUNCTION JC22 @G@@[]. AND THE FUNCTION IS THEN TRANSFERRFV
)@@G@@ED TO.  THIS REQUIRES THE      JC22 @G@@[]. TRANSLATING OF SOME DATA TYPFW
)@@G@@ES INTO A FORTRAN-COMPATIBLE FORM.   JC22 @G@@[]. THE CONVERSION ROUTINEFX
)@@G@@S ARE DOCUMENTED BELOW, WHERE THEY OCCUR.  JC22 @G@@[]. A NORMAL FORTRANFY
)@@G@@ RETURN WILL CAUSE THE VALUE IN A0 TO BE PUT IN  JC22 @G@@[]. THE RETURNFZ
)@@G@@ LOCATION; ITS TYPE IS ASSUMED TO BE CORRECT.  OTHER   JC22 @G@@[]. RETUGA
)@@G@@RN ROUTINES ARE PROVIDED (FRETURN, IRETURN, RRETURN, SRETURN)JC22 @G@@[]GB
)@@G@@. THAT ALLOW MORE SNOBOL-LIKE RETURNS; THEY ARE DOCUMENTED BELOW   JC22 GC
)@@G@@@G@@[]. WHERE THEY OCCUR.                                               GD
)@@G@@ JC22 @G@@[].                                                           GE
)@@G@@       JC22 @G@@[]          LON.                                        GF
)@@G@@             JC10 @G@@[]$(2).                                           GG
)@@G@@                   JC22 @G@@[]LINKJ     J         LINKRTN.  RETURN INST GH
)@@G@@FOR FORTRAN CALL.        JC22 @G@@[]LINKX5    +         0.        LOCATIGI
)@@G@@ONS FOR SAVING REGISTERS PAST  JC22 @G@@[]LINKX6    +         0.        GJ
)@@G@@CALL OF THE EXTERNAL ROUTINE.        JC22 @G@@[]LINKX8    +         0.  GK
)@@G@@                                           JC22 @G@@[]LINKX9    +       GL
)@@G@@  0.                                             JC22 @G@@[]LINKX10   + GM
)@@G@@        0.                                             JC22 @G@@[]LINKX1GN
)@@G@@1   +         0.                                             JC22 @G@@[]GO
)@@G@@LINKA0    +         0.                                             JC22 GP
)@@G@@@G@@[]LINKA1    +         0.                                            GQ
)@@G@@ JC22 @G@@[].                                                           GR
)@@G@@       JC22 @G@@[]LINKSX7   +         0.        SPACE FOR SAVING REGISTEGS
)@@G@@RS DURING    JC22 @G@@[]LINKSX9   +         0.        PARAMETER CONVERSIGT
)@@G@@ON.                JC22 @G@@[]LINKSA1   +         0.                    GU
)@@G@@                         JC22 @G@@[].                                   GV
)@@G@@                               JC22 @G@@[]LINKD1    DESCR     *0,*0,*0. GW
)@@G@@     SCRATCH DESCRIPTOR.             JC22 @G@@[]LINKD2    DESCR     *0,*GX
)@@G@@0,*0.                                      JC22 @G@@[]LINKS1    SPEC    GY
)@@G@@  *0,*0,*0,*0,*0.  SCRATCH SPECIFIER.            JC22 @G@@[]LINKS2    SPGZ
)@@G@@EC      *0,*0,*0,*0,*0.                                JC22 @G@@[].     HA
)@@G@@                                                             JC22 @G@@[]HB
)@@G@@$(1).                                                              JC22 HC
)@@G@@@G@@[]LINKS*.                                                           HD
)@@G@@ JC22 @G@@[]          TNZ       0,A0.          IF FUNCTION ADDR = 0,    HE
)@@G@@       JC22 @G@@[]          J         UNDF.             IT ISN'T DEFINEDHF
)@@G@@.            JC22 @G@@[]          TE,H2     A1,1,A0.       CORRECT NUMBEHG
)@@G@@R OF ARGS?         JC22 @G@@[]          J         ARGNER.        NO--ERRHH
)@@G@@OR FOR NOW.              JC22 @G@@[]          TG,U      A1,EXPMAX+1.   CHI
)@@G@@AN WE HANDLE THIS MANY?        JC22 @G@@[]          J         TOOMANYARGHJ
)@@G@@S.   IF NOT, ERROR.                  JC22 @G@@[]          LXI,U     X9,2HK
)@@G@@.          INCREMENT FOR ACCESSING PARAMS. JC22 @G@@[]          SX      HL
)@@G@@  X5,LINKX5.     SAVE REGISTERS.                 JC22 @G@@[]          SXHM
)@@G@@        X6,LINKX6.                                     JC22 @G@@[]      HN
)@@G@@    SX        X8,LINKX8.                                     JC22 @G@@[]HO
)@@G@@          SX        X9,LINKX9.                                     JC22 HP
)@@G@@@G@@[]          SX        X10,LINKX10.                                  HQ
)@@G@@ JC22 @G@@[]          SX        X11,LINKX11.                            HR
)@@G@@       JC22 @G@@[]          SA        A0,LINKA0.                        HS
)@@G@@             JC22 @G@@[]          SA        A1,LINKA1.                  HT
)@@G@@                   JC22 @G@@[]          LX        X7,(1,0).      COUNTERHU
)@@G@@ FOR PARAMS COPIED.      JC22 @G@@[]          J         LINKT.         GHV
)@@G@@O TRANSLATE PARAMETERS.        JC22 @G@@[].                             HW
)@@G@@                                     JC22 @G@@[]. THE FOLLOWING CODE TRAHX
)@@G@@NSLATES THE PARAMETERS FROM THEIR SNOBOL4  JC22 @G@@[]. FORMS TO FORTRANHY
)@@G@@ FORMS.  THIS CODE USES X7, X9 AND A1, SO THE    JC22 @G@@[]. CONVERSIONHZ
)@@G@@ ROUTINES MUST NOT DESTROY THEM.                       JC22 @G@@[].     IA
)@@G@@                                                             JC22 @G@@[]IB
)@@G@@LINKP     LA,H2     A2,1,X9.       GET TYPE OF THIS PARAM.         JC22 IC
)@@G@@@G@@[]          TNE,U     A2,INTDT.      TEST ITS TYPE:                 ID
)@@G@@ JC22 @G@@[]          J         LINKPOK.       INTEGER--NO CHANGE.      IE
)@@G@@       JC22 @G@@[]          TNE,U     A2,REALDT.                        IF
)@@G@@             JC22 @G@@[]          J         LINKPOK.       REAL--NO CHANIG
)@@G@@GE.                JC22 @G@@[]          TNE,U     A2,STRDT.             IH
)@@G@@                         JC22 @G@@[]          J         LINKSSF.       SII
)@@G@@TRING--CONVERT.                JC22 @G@@[]          J         INTR1.    IJ
)@@G@@     CAN'T HANDLE OTHER TYPES.       JC22 @G@@[].                       IK
)@@G@@                                           JC22 @G@@[]LINKPOK.          IL
)@@G@@                 NO CHANGE NEEDED--STORE ITS     JC22 @G@@[]          SXIM
)@@G@@,H2     X9,LINKCALL,X7.   ADDRESS IN CALLING SEQUENCE. JC22 @G@@[]      IN
)@@G@@    SZ,H1     LINKCALL,*X7.  UPDATE TO NEXT LOCATION.        JC22 @G@@[]IO
)@@G@@          LA,U      A2,0,*X9.      UPDATE POINTER TO NEXT PARAM.   JC22 IP
)@@G@@@G@@[]LINKT     JGD       A1,LINKP.      IF ANY MORE PARAMS, REPEAT.    IQ
)@@G@@ JC22 @G@@[].                                                           IR
)@@G@@       JC22 @G@@[]. ALL THE PARAMS ARE CONVERTED; INSERT A DUMMY WALKBACIS
)@@G@@K WORD AND   JC22 @G@@[]. A JUMP TO THE RETURN CODE BELOW, AND TRANSFER IT
)@@G@@TO THE FUNCTION.   JC22 @G@@[].                                         IU
)@@G@@                         JC22 @G@@[]          SZ        LINKCALL,*X7.  ZIV
)@@G@@ERO FOR WALKBACK WORD.         JC22 @G@@[]          LA        A2,LINKJ. IW
)@@G@@     GET JUMP INST TO RETURN CODE.   JC22 @G@@[]          SA        A2,LIX
)@@G@@INKCALL,X7.     PUT IT AT RETURN LOC.      JC22 @G@@[].                 IY
)@@G@@                                                 JC22 @G@@[]          LXIZ
)@@G@@,U      X11,LINKCALL.  X11 = ADDR OF 1ST PARAM.        JC22 @G@@[]      JA
)@@G@@    LA        A0,LINKA0.     GET LOC OF FCT DESCR.           JC22 @G@@[]JB
)@@G@@          LA        A0,0,A0.       GET FUNCTION ADDRESS.           JC22 JC
)@@G@@@G@@[]          J         0,A0.          CALL THE FUNCTION.             JD
)@@G@@ JC22 @G@@[].                                                           JE
)@@G@@       JC22 @G@@[]LINKCALL  RES       27.            SPACE FOR PARAMS, WJF
)@@G@@ALKBACK, AND JC22 @G@@[].                                  RETURN INSTRUJG
)@@G@@CTION.             JC22 @G@@[].                                         JH
)@@G@@                         JC22 @G@@[].                                  RJI
)@@G@@ETURN CODE:                    JC22 @G@@[]LINKRTN   LA,U      A3,2.     JJ
)@@G@@     RETURN INDICATOR = 'NORMAL'.    JC22 @G@@[]          LX        X8,LJK
)@@G@@INKX8.     GET ADDR FOR RETURN VALUE.      JC22 @G@@[]          SA      JL
)@@G@@  A0,0,X8.       STORE VALUE RETURNED IN A-FIELD.JC22 @G@@[]LINKRR.     JM
)@@G@@                       ENTRY HERE FROM OTHER RETURNS.  JC22 @G@@[]      JN
)@@G@@    LX        X5,LINKX5.     RESTORE REGISTERS.              JC22 @G@@[]JO
)@@G@@          LX        X6,LINKX6.                                     JC22 JP
)@@G@@@G@@[]          LX        X9,LINKX9.                                    JQ
)@@G@@ JC22 @G@@[]          LX        X10,LINKX10.                            JR
)@@G@@       JC22 @G@@[]          LX        X11,LINKX11.                      JS
)@@G@@             JC22 @G@@[]          LA        A0,LINKA0.                  JT
)@@G@@                   JC22 @G@@[]          LA        A1,LINKA1.            JU
)@@G@@                         JC22 @G@@[]          J         LINKRT.        GJV
)@@G@@O RE-CONVERT PARAMS.           JC22 @G@@[].                             JW
)@@G@@                                     JC22 @G@@[]. THE FOLLOWING CODE RE-JX
)@@G@@CONVERTS ANY PARAMETERS BACK TO SNOBOL4    JC22 @G@@[]. FORM.  IT IS ONLJY
)@@G@@Y NECESSARY CURRENTLY FOR ARRAYS, SINCE THERE    JC22 @G@@[]. IS CURRENTJZ
)@@G@@LY NO WAY TO GET CALL-BY-NAME PARAMETERS.              JC22 @G@@[].     KA
)@@G@@                                                             JC22 @G@@[]KB
)@@G@@LINKRP    LA,H2     A2,1,X9.       GET TYPE OF PARAM.              JC22 KC
)@@G@@@G@@[]          TNE,U     A2,INTDT.      TEST ITS TYPE:                 KD
)@@G@@ JC22 @G@@[]          J         LINKROK.       INTEGER--NO CHANGE.      KE
)@@G@@       JC22 @G@@[]          TNE,U     A2,REALDT.                        KF
)@@G@@             JC22 @G@@[]          J         LINKROK.       REAL--NO CHANKG
)@@G@@GE.                JC22 @G@@[]          TNE,U     A2,STRDT.             KH
)@@G@@                         JC22 @G@@[]          J         LINKROK.       SKI
)@@G@@TRING--FORGET IT.              JC22 @G@@[].                             KJ
)@@G@@     IF ANY OTHER TYPE, DON'T BOTHER JC22 @G@@[].                       KK
)@@G@@                                           JC22 @G@@[]LINKROK   LA,U    KL
)@@G@@  A2,0,*X9.      UPDATE POINTER TO NEXT PARAM.   JC22 @G@@[]LINKRT    JGKM
)@@G@@D       A1,LINKRP.     IF MORE PARAMS, REPEAT.         JC22 @G@@[]      KN
)@@G@@    J         $,A3.          IF NOT, TAKE APPROPRIATE RETURN JC22 @G@@[]KO
)@@G@@          J         0,X10.         1 = FRETURN.                    JC22 KP
)@@G@@@G@@[]          J         0,X11.         2 = NORMAL FORTRAN RETURN.     KQ
)@@G@@ JC22 @G@@[]          J         0,X11.         3 = SRETURN.             KR
)@@G@@       JC22 @G@@[]          J         0,X11.         4 = IRETURN.       KS
)@@G@@             JC22 @G@@[]          J         0,X11.         5 = RRETURN. KT
)@@G@@                   JC22 @G@@[].                                         KU
)@@G@@                         JC22 @G@@[]. LINKSSF CONVERTS A SNOBOL4 STRING KV
)@@G@@TO ONE USABLE BY FORTRAN.      JC22 @G@@[]. THIS IS AN ARRAY, S(I), IN WKW
)@@G@@HICH S(1) IS THE SIZE OF THE STRING  JC22 @G@@[]. (IN CHARACTERS), AND SKX
)@@G@@(2), S(3), ... HOLD THE STRING IN THE      JC22 @G@@[]. 'HOLLERITH' FORMKY
)@@G@@AT, 6 CHARACTERS PER WORD ON THE 1108.  A        JC22 @G@@[]. STRING PASKZ
)@@G@@SED TO A FORTRAN ROUTINE IS IN A TEMPORARY BLOCK OF    JC22 @G@@[]. MEMOLA
)@@G@@RY, SO THE ROUTINE CAN ALTER IT IF IT WANTS TOO--BUT IT HAD  JC22 @G@@[]LB
)@@G@@. BETTER NOT TRY WRITING BEYOND THE LAST WORD ALLOCATED, OR        JC22 LC
)@@G@@@G@@[]. SOME STRANGE THINGS MAY HAPPEN AFTER THE RETURN.                LD
)@@G@@ JC22 @G@@[].                                                           LE
)@@G@@       JC22 @G@@[]LINKSSF.                                              LF
)@@G@@             JC22 @G@@[]          SX        X7,LINKSX7.    SAVE REGISTERLG
)@@G@@S:                 JC22 @G@@[]          SX        X9,LINKSX9.           LH
)@@G@@                         JC22 @G@@[]          SA        A1,LINKSA1.     LI
)@@G@@                               JC22 @G@@[]          DL        A2,0,X9.  LJ
)@@G@@     MAKE A LOCAL DESCRIPTOR FOR IT. JC22 @G@@[]          DS        A2,LLK
)@@G@@INKD1.                                     JC22 @G@@[]          LOCSP   LL
)@@G@@  LINKS1,LINKD1. GET A SPECIFIER FOR THE STRING. JC22 @G@@[]          GELM
)@@G@@TLG     LINKD1,LINKS1. GET ITS SPACE REQUIREMENTS.     JC22 @G@@[]      LN
)@@G@@    RCALL     LINKD2,CONVAR LINKD1 *0.                       JC22 @G@@[]LO
)@@G@@.                                  ALLOCATE A BLOCK OF STORAGE.    JC22 LP
)@@G@@@G@@[]          LOCSP     LINKS2,LINKD2. GET A SPECIFIER FOR NEW STRING.LQ
)@@G@@ JC22 @G@@[]          SETLC     LINKS2,*0.     SET IT TO NULL.          LR
)@@G@@       JC22 @G@@[]          APDSP     LINKS2,LINKS1. COPY OLD STRING TO LS
)@@G@@NEW BLOCK.   JC22 @G@@[]          LA        A2,LINKS2.     ADDR OF NEW SLT
)@@G@@TRING BLOCK.       JC22 @G@@[]          AA,U      A2,7.          MOVE TOLU
)@@G@@ WORD BEFORE STRING.     JC22 @G@@[]          LA,H2     A3,LINKS2+3.   GLV
)@@G@@ET LENGTH OF STRING.           JC22 @G@@[]          SA        A3,0,A2.  LW
)@@G@@     PUT INTO WORD BEFORE STRING.    JC22 @G@@[]          LX        X7,LLX
)@@G@@INKSX7.    RESTORE REGISTERS:              JC22 @G@@[]          LX      LY
)@@G@@  X9,LINKSX9.                                    JC22 @G@@[]          LALZ
)@@G@@        A1,LINKSA1.                                    JC22 @G@@[]      MA
)@@G@@    SA,H2     A2,LINKCALL,X7. PUT ADDR INTO CALLING SEQ.     JC22 @G@@[]MB
)@@G@@          SZ,H1     LINKCALL,*X7.  UPDATE TO NEXT LOC.             JC22 MC
)@@G@@@G@@[]          DL        A3,LINKD2.     PUT DESCR OF NEW BLOCK INTO    MD
)@@G@@ JC22 @G@@[]          DS        A3,0,*X9.      PARAM LIST, SO G.C. WILL ME
)@@G@@LEAVE  JC22 @G@@[].                                  IT ALONE.          MF
)@@G@@             JC22 @G@@[]          J         LINKT.         GO GET NEXT PMG
)@@G@@ARAM.              JC22 @G@@[]. ****************************************MH
)@@G@@*****************LINKS***JC22 @G@@[]. **********************************MI
)@@G@@***********************LOADS***JC22 @G@@[].                             MJ
)@@G@@                                     JC22 @G@@[]$(2).                   MK
)@@G@@                                           JC22 @G@@[]LOADSP1   SPEC    ML
)@@G@@  *0,*0,*0,*0,*0.     SCRATCH SPECIFIER.         JC22 @G@@[]LOADSP2   SPMM
)@@G@@EC      LOADST,*0,*0,*0,*0. SPECIFIER FOR NAME:        JC22 @G@@[]LOADSTMN
)@@G@@    +         '      '.           NAME OF FUNCTION.          JC22 @G@@[]MO
)@@G@@LOADSX11  +         0.                  FOR SAVING X11.            JC22 MP
)@@G@@@G@@[].                                                                 MQ
)@@G@@ JC22 @G@@[]$(1).                                                       MR
)@@G@@       JC22 @G@@[]LOADS*.                                               MS
)@@G@@             JC22 @G@@[]          LA,U      A0,EXTERNAL.   DOES FCT TABLMT
)@@G@@E EXIST?           JC22 @G@@[]          JZ        A0,0,X10.      IF NOT,MU
)@@G@@ FAIL.                   JC22 @G@@[]          DL        A0,0,X9.       CMV
)@@G@@OPY AFV(S1) TO LOADSP1.        JC22 @G@@[]          DS        A0,LOADSP1MW
)@@G@@.                                    JC22 @G@@[]          LA,H2     A1,3MX
)@@G@@,X9.       L(S1)                           JC22 @G@@[]          LA      MY
)@@G@@  A0,2,X9.       O(S1)                           JC22 @G@@[]          TGMZ
)@@G@@,U      A1,7.          IF L(S1) >= 7,                  JC22 @G@@[]      NA
)@@G@@    LA,U      A1,6.             SET L(S1) TO 6.              JC22 @G@@[]NB
)@@G@@          DS        A0,LOADSP1+2   PUT OL(S1) IN LOADSP1.          JC22 NC
)@@G@@@G@@[]          SZ        LOADSP2+2.     O(LOADSP2) = 0.                ND
)@@G@@ JC22 @G@@[]          SZ        LOADSP2+3.     L(LOADSP2) = 0.          NE
)@@G@@       JC22 @G@@[]          LA        A0,('      '). SET LOADST TO BLANKNF
)@@G@@S.           JC22 @G@@[]          SA        A0,LOADST.                  NG
)@@G@@                   JC22 @G@@[]          SX        X11,LOADSX11.  SAVE RENH
)@@G@@TURN LOC.                JC22 @G@@[]          APDSP     LOADSP2,LOADSP1.NI
)@@G@@    COPY UP TO 6 CHARS OF NAME JC22 @G@@[]          LX        X11,LOADSXNJ
)@@G@@11.  RESTORE RETURN LOC.             JC22 @G@@[]          LA        A0,LNK
)@@G@@OADST.     A0 = FCT NAME.                  JC22 @G@@[]          LA      NL
)@@G@@  A1,(2,EXTERNAL).    LOCATION OF FCT TABLE.     JC22 @G@@[]LOADT     TNNM
)@@G@@E       A0,0,A1.       TEST NAME AGAINST TABLE ENTRY.  JC22 @G@@[]      NN
)@@G@@    J         LOADIT.        IF EQUAL, GO TO LOADING CODE.   JC22 @G@@[]NO
)@@G@@          TNZ       0,*A1.         IF ZERO ENTRY,                  JC22 NP
)@@G@@@G@@[]          J         0,X10.            END OF TABLE--FAIL.         NQ
)@@G@@ JC22 @G@@[]          J         LOADT.         OTHERWISE TRY NEXT ENTRY.NR
)@@G@@       JC22 @G@@[].                                                     NS
)@@G@@             JC22 @G@@[]LOADIT.                            LOAD FUNCTIONNT
)@@G@@ DEFINITION:       JC22 @G@@[]          LA,H2     A2,1,A1.       GET ADDNU
)@@G@@RESS OF FUNCTION.        JC22 @G@@[]          LA,H1     A3,1,A1.       ANV
)@@G@@ND NUMBER OF ARGS.             JC22 @G@@[]          DS        A2,0,X8.  NW
)@@G@@     PUT THEM IN RETURN LOCATION.    JC22 @G@@[]          J         0,X1NX
)@@G@@1.         TAKE SUCCESS EXIT.              JC22 @G@@[]. ****************NY
)@@G@@*****************************************LOADS***JC22 @G@@[]. **********NZ
)@@G@@***********************************************RTNF****JC22 @G@@[].     OA
)@@G@@    CALL  RTNF                                               JC22 @G@@[]OB
)@@G@@.                                                                  JC22 OC
)@@G@@@G@@[]. THIS FORTRAN STATEMENT CAUSES AN EXTERNAL FUNCTION TO FAIL.  IT OD
)@@G@@ JC22 @G@@[]. CAUSES IMMEDIATE RETURN NO MATTER HOW DEEP WITHIN FUNCTIONOE
)@@G@@ CALLS JC22 @G@@[]. THE EXTERNAL FUNCTION IS.  SEE ALSO RTNI.           OF
)@@G@@             JC22 @G@@[].                                               OG
)@@G@@                   JC22 @G@@[]RTNF**.                                   OH
)@@G@@                         JC22 @G@@[]          LA,U      A3,1.     SET REOI
)@@G@@TURN-TYPE INDICATOR.           JC22 @G@@[]          J         LINKRR.   OJ
)@@G@@JOIN RETURN CODE WITHIN LINK ROUTINE JC22 @G@@[]. **********************OK
)@@G@@***********************************RTNF****JC22 @G@@[]. ****************OL
)@@G@@*****************************************RTNI****JC22 @G@@[].         CAOM
)@@G@@LL  RTNI(I)                                            JC22 @G@@[].     ON
)@@G@@                                                             JC22 @G@@[]OO
)@@G@@. THIS FORTRAN STATEMENT CAUSES AN EXTERNAL FUNCTION CALLED FROM   JC22 OP
)@@G@@@G@@[]. A SNOBOL4 PROGRAM TO RETURN THE INTEGER I, NO MATTER WHAT SNOBOLOQ
)@@G@@ JC22 @G@@[]. EXPECTED IT TO RETURN.  ALSO, IT FORCES A RETURN TO THE CAOR
)@@G@@LLING  JC22 @G@@[]. SNOBOL STATEMENT NO MATTER HOW DEEP THE PROGRAM IS IOS
)@@G@@N NESTED     JC22 @G@@[]. FORTRAN FUNCTIONS.  THIS IS BECAUSE THE SNOBOLOT
)@@G@@ SYSTEM DOESN'T    JC22 @G@@[]. KNOW ANYTHING ABOUT THE FORTRAN FUNCTIONOU
)@@G@@ CALLS THAT MAY HAVE     JC22 @G@@[]. OCCURRED, AND DOESN'T KNOW HOW TO OV
)@@G@@SIMULATE A FORTRAN RETURN.     JC22 @G@@[]. THIS FEATURE IS ALSO SHARED OW
)@@G@@BY THE OTHER RETURN FUNCTIONS THAT   JC22 @G@@[]. CAUSE A RETURN FROM FOOX
)@@G@@RTRAN TO SNOBOL, SUCH AS RTNF, RTNR, OR    JC22 @G@@[]. RTNS.           OY
)@@G@@                                                 JC22 @G@@[].           OZ
)@@G@@                                                       JC22 @G@@[]RTNI**PA
)@@G@@.                                                            JC22 @G@@[]PB
)@@G@@          LA,U      A3,4.     RETURN-TYPE INDICATOR.               JC22 PC
)@@G@@@G@@[]          LA        A0,0,X11. GET ADDR OF I.                      PD
)@@G@@ JC22 @G@@[]          LA        A0,0,A0.  GET I.                        PE
)@@G@@       JC22 @G@@[]          LA,U      A1,INTDT. GET INTEGER TYPE-CODE.  PF
)@@G@@             JC22 @G@@[]          LX        X8,LINKX8.     GET ADDR FOR PG
)@@G@@RETURN VALUE.      JC22 @G@@[]          DS        A0,0,X8.  STORE I IN RPH
)@@G@@ETURN LOC.               JC22 @G@@[]          J         LINKRR.   JOIN RPI
)@@G@@ETURN CODE IN LINK ROUTINE.    JC22 @G@@[]. ****************************PJ
)@@G@@*****************************RTNI****JC22 @G@@[]. **********************PK
)@@G@@***********************************RTNR****JC22 @G@@[].         CALL  RTPL
)@@G@@NR(R)                                            JC22 @G@@[].           PM
)@@G@@                                                       JC22 @G@@[]. THISPN
)@@G@@ FORTRAN STATEMENT CAUSES AN EXTERNAL FUNCTION TO RETURN THE JC22 @G@@[]PO
)@@G@@. REAL NUMBER R, NO MATTER WHAT SNOBOL4 EXPECTED IT TO RETURN.     JC22 PP
)@@G@@@G@@[]. SEE ALSO THE ROUTINE RTNI.                                      PQ
)@@G@@ JC22 @G@@[].                                                           PR
)@@G@@       JC22 @G@@[]RTNR**.                                               PS
)@@G@@             JC22 @G@@[]          LA,U      A3,5.     RETURN-TYPE INDICAPT
)@@G@@TOR.               JC22 @G@@[]          LA        A0,0,X11. GET ADDR OF PU
)@@G@@R.                       JC22 @G@@[]          LA        A0,0,A0.  GET R.PV
)@@G@@                               JC22 @G@@[]          LA,U      A1,REALDT.PW
)@@G@@     REAL TYPE-CODE.                 JC22 @G@@[]          LX        X8,LPX
)@@G@@INKX8.     ADDR FOR RETURN VALUE.          JC22 @G@@[]          DS      PY
)@@G@@  A0,0,X8.  STORE R IN RETURN LOC.               JC22 @G@@[]          J PZ
)@@G@@        LINKRR.   JOIN RETURN CODE IN LINK ROUTINE.    JC22 @G@@[]. ****QA
)@@G@@*****************************************************RTNR****JC22 @G@@[]QB
)@@G@@. *********************************************************RTNS****JC22 QC
)@@G@@@G@@[].         CALL  RTNS(S(I))                                        QD
)@@G@@ JC22 @G@@[].                                                           QE
)@@G@@       JC22 @G@@[]. THIS FORTRAN STATEMENT IS USED TO RETURN A STRING FRQF
)@@G@@OM AN        JC22 @G@@[]. EXTERNAL FUNCTION.  S() IS AN ARRAY THAT CONTAQG
)@@G@@INS THE STRING     JC22 @G@@[]. IN THE FOLLOWING FORM:  S(I) IS THE LENGQH
)@@G@@TH OF THE STRING IN      JC22 @G@@[]. CHARACTERS; THE STRING IS PACKED 6QI
)@@G@@ CHARACTERS PER WORD INTO      JC22 @G@@[]. S(I+1), S(I+2), ETC.  AS A SQJ
)@@G@@PECIAL CASE,                         JC22 @G@@[].         CALL  RTNS(0) QK
)@@G@@                                           JC22 @G@@[]. RETURNS THE NULLQL
)@@G@@ STRING.  NOTE THAT, LIKE THE OTHER SPECIAL      JC22 @G@@[]. RETURN FUNQM
)@@G@@CTIONS, RTNS WILL CAUSE AN IMMEDIATE RETURN EVEN IF    JC22 @G@@[]. IT IQN
)@@G@@S CALLED FROM WITHIN A SET OF NESTED FUNCTION CALLS.         JC22 @G@@[]QO
)@@G@@.                                                                  JC22 QP
)@@G@@@@@@@@@@@@^3@]T@@@@]Q@@@@@@@^\@]O@^,@@@@@@@]M@^!@@@@^:@@@@^%@]L@^*@]J@^$QQ
)@@G@@@@@@^>@@@@@@@@@@@@@]I@@@@]H@^=@@@@@@@@@@^+@]G@@@@]F@^-@]A@@@@]^@^)@["@@@QR
)@@G@@@[.@^Z@[;@@@@@@@@@@['@@@@[8@^Y@[7@@@@[6@^V@[4@^U@[3@^R@@@@@@@[2@^Q@[0@@@QS
)@@G@@@[\@^P@[%@@@@[(@@@@@@@^O@@@@@@@[*@^N@@@@^J@[&@@@@[=@^H@[<@@@@[+@^G@[)@^FQT
)@@G@@@@@@^D@[Y@^C@@@@@@@@@@@@@[X@^B@[U@^A@[S@^^@[Q@@@@@@@^]@@@@@@@@@@^@@@@@#_QU
)@@G@@@[P@#"@@@@#.@@@@#7@[O@#6@[N@@@@@@@#4@@@@#2@[K@@@@[J@#?@@@@#:@[I@#%@@@@@@QV
)@@G@@@[H@#*@[G@#&@[F@#>@[E@@@@@@@@@@[B@@@@[A@#-@[^@#)@@@@#Z@[#@#Y@@@@#X@@@@#WQW
)@@G@@@[[@@@@@_@#V@@@@@@@@"@#T@@.@#P@@@@#M@@'@#K@@8@#J@@4@#H@@3@@@@@2@#F@@1@#EQX
)@@G@@@@\@#C@@!@@@@@@@# @@(@@@@@*@#^@@=@@@@@<@#]@@-@#[@@@@#@@@)@]_@@@@].@@Z@@@QY
)@@G@@@@X@]'@@@@@@@@W@]8@@V@]7@@U@]5@@R@@@@@Q@]4@@O@]3@@@@]0@@N@]\@@M@]:@@I@]%QZ
)@@G@@@@@@@@@@H@@@@@@@](@@G@@@@@E@]*@@D@@@@@@@]$@@C@]&@@@@]>@@ @@@@@@@]<@@^@@@RA
)@@G@@@@#@@@@@]@@@@@@@@@@@[@])@@@@]X@@@@@@@@@@]V@@^@^5FA0$        @[N@@@@@@@@@RB
)@@G@@FFDECFL$    @[G@@@@@@@@@T$DECGEN$   @]V@@@@@@@@@AVLSK       @[?@@@@@@@@@RC
)@@G@@ERASE$      @]G@@A@@@@@@EDECFL$     @]C@@B@@@@@@AVLDK       @[$@@@@@@@@@RD
)@@G@@TCLNPK$     @]P@@@@@@@@@PIOW$       @["@@@@@@@@@TSCNRV$     @]O@@F@@@@@@RE
)@@G@@FWDAY2$     @[L@@@@@@@@@FWDAY1$     @[L@@@@@@@@@TNFINDA$    @]X@@@@@@@@@RF
)@@G@@TGNRV$      @]S@@J@@@@@@ECOLN$      @]E@@K@@@@@@FASC$       @[N@@L@@@@@@RG
)@@G@@FDAY4$      @[L@@@@@@@@@AVL$NASTOR5 @[=@@@@@@@@@AVL$KTEST2  @[1@@@@@@@@@RH
)@@G@@TCLN$       @]P@@P@@@@@@PSDFRFIN    @][@@@@@@@@@AVL$TIMEON  @[8@@@@@@@@@RI
)@@G@@EWRDN$      @]G@@S@@@@@@FDT$        @[N@@T@@@@@@FPRT$       @[H@@@@@@@@@RJ
)@@G@@PIO$SETUP   @["@@@@@@@@@AVL$KTEST   @[,@@@@@@@@@AVL$LOCATE  @[:@@@@@@@@@RK
)@@G@@TSCNRF$     @]O@@Y@@@@@@PIO$REST    @[_@@@@@@@@@FDECV$      @[J@@@@@@@@@RL
)@@G@@T$ALENTER$  @]T@@@@@@@@@FPACK$      @]K@@+@@@@@@FFDECV$     @[G@@@@@@@@@RM
)@@G@@T$INTGEN$0  @]T@@@@@@@@@ECSF$       @]L@@>@@@@@@EFLF2$      @]A@@&@@@@@@RN
)@@G@@AVLDSP      @[%@@$@@@@@@FDTZ$       @[N@@@@@@@@@T$SETUP$    @]U@@@@@@@@@RO
)@@G@@TCOLN$      @]W@@%@@@@@@AVL$KTEST6  @[5@@:@@@@@@FDCFL$      @[J@@?@@@@@@RP
)@@G@@FFORM$      @[G@@@@@@@@@EFD3$       @]Z@@,@@@@@@TCLR$       @]N@@@@@@@@@RQ
)@@G@@ECOPYS$     @]Z@@0@@@@@@T$TSCAN0$   @]O@@@@@@@@@AVLCR       @[>@@@@@@@@@RR
)@@G@@AVL$STATAREA@[8@@@@@@@@@FFLS1$      @[I@@@@@@@@@FIFREE$     @]Y@@5@@@@@@RS
)@@G@@TINTVD$     @]T@@6@@@@@@T$FLOGEND$  @]R@@7@@@@@@E$DEC2$     @]C@@@@@@@@@RT
)@@G@@AVL$STATS   @[8@@9@@@@@@FP$         @[N@@@@@@@@@T$SCAN$     @]U@@;@@@@@@RU
)@@G@@E$DEC0$     @]C@@/@@@@@@AVL$ASTOR2  @[=@@@@@@@@@TNBRKV$     @]O@@@@@@@@@RV
)@@G@@FFDECF$     @[G@@@@@@@@@FIASG$      @]Y@[@@@@@@@EDAY2$      @]J@@@@@@@@@RW
)@@G@@T$FLOGEN$   @]Q@[]@@@@@@AVL$NALOAD4 @[=@@@@@@@@@TINTV$      @]T@@@@@@@@@RX
)@@G@@TMASK$      @]W@[ @@@@@@TIDE$       @]N@@@@@@@@@FIFRIM$     @]Y@@@@@@@@@RY
)@@G@@FFD2$       @]K@[C@@@@@@FLL$        @[N@[D@@@@@@FPAD$       @[M@@@@@@@@@RZ
)@@G@@EPRTA$      @]L@@@@@@@@@AVL$DELETE  @[&@@@@@@@@@EOCTF$      @]C@@@@@@@@@SA
)@@G@@TNBRKF$     @]O@@@@@@@@@PIOPAI$     @[/@@@@@@@@@T$ERROR$    @]U@@@@@@@@@SB
)@@G@@ELT$INFOR   @])@[L@@@@@@E$PTRL$     @]Z@[M@@@@@@EHEXF$      @]B@@@@@@@@@SC
)@@G@@TOCTFD$     @]V@@@@@@@@@FASCIN$     @[N@@@@@@@@@E$DECM$     @]C@@@@@@@@@SD
)@@G@@AEDITR$     @]M@[R@@@@@@FDAY3$      @[L@@@@@@@@@TNFIND$     @]X@[T@@@@@@SE
)@@G@@EAPRTI$     @]L@@@@@@@@@TOCTF$      @]V@[V@@@@@@AVL$ALOAD4  @[=@[W@@@@@@SF
)@@G@@FCHAR$      @[N@@@@@@@@@SSTNUM$     @]^@@@@@@@@@FMSGR$      @]K@[Z@@@@@@SG
)@@G@@FDECFZ$     @[J@@@@@@@@@E$ASC$      @]M@[-@@@@@@ETIME$      @]J@@@@@@@@@SH
)@@G@@T$RETURN0$  @]N@@@@@@@@@AVL$INSERT  @[:@@@@@@@@@EPACKS$     @]Z@[>@@@@@@SI
)@@G@@PSDFRERR    @][@@@@@@@@@AVL$KTEST3  @[2@[$@@@@@@AVLDN       @[*@@@@@@@@@SJ
)@@G@@PIO$STATQ   @[_@@@@@@@@@PSDFWCE     @]:@@@@@@@@@TREN$       @]U@[:@@@@@@SK
)@@G@@TGENF$      @]S@[?@@@@@@EFLF1$      @]A@[!@@@@@@EDITR$      @] @[,@@@@@@SL
)@@G@@AVLIK       @[?@@@@@@@@@T$RETURN1$  @]N@@@@@@@@@FRASE$      @[M@[1@@@@@@SM
)@@G@@FDECFL$     @[J@@@@@@@@@PIO$SAVE    @[_@@@@@@@@@T$SETUP1$   @]U@@@@@@@@@SN
)@@G@@EPRTI$      @]L@[5@@@@@@F$          @[N@@@@@@@@@FMSGCA$     @[N@@@@@@@@@SO
)@@G@@TIDEX$      @]N@@@@@@@@@EPACKC$     @]Z@[9@@@@@@AVL$ROUTINE @[=@@@@@@@@@SP
)@@G@@EFLG2$      @]A@@@@@@@@@AVL$KTEST7  @[6@[/@@@@@@FCOLN$      @[K@@@@@@@@@SQ
)@@G@@EFORMC$     @]D@@@@@@@@@TSEEKA$     @]X@[_@@@@@@EFDECFZ$    @]D@]@@@@@@@SR
)@@G@@PIO$STL     @[_@][@@@@@@PIO$A1      @[_@]]@@@@@@AVLSR       @[!@]#@@@@@@SS
)@@G@@FCLR$       @[N@@@@@@@@@SSTYPE$     @]^@] @@@@@@PIO$A0      @[_@@@@@@@@@ST
)@@G@@EMSG$       @]Z@]B@@@@@@EDAY1$      @]J@]C@@@@@@PIO$STATS   @[_@]D@@@@@@SU
)@@G@@AVLDR       @[(@]E@@@@@@FLOCK$      @[N@@@@@@@@@TFLO10D$    @]R@@@@@@@@@SV
)@@G@@FWRDN$      @[M@@@@@@@@@PSDFRSB     @]]@@@@@@@@@TSEEK$      @]X@@@@@@@@@SW
)@@G@@EDECF$      @]C@]K@@@@@@PIOUL$      @["@@@@@@@@@EPRTGA$     @]L@@@@@@@@@SX
)@@G@@FFLF2$      @[I@]N@@@@@@FCSF$       @[H@@@@@@@@@TRD$        @]P@]P@@@@@@SY
)@@G@@FDTA$       @[N@@@@@@@@@FFD3$       @]K@]R@@@@@@E$CHAR$     @] @]S@@@@@@SZ
)@@G@@AVL$RTEST   @[!@@@@@@@@@TDECFD$     @]V@]U@@@@@@FCOPYS$     @]K@@@@@@@@@TA
)@@G@@EDAY5$      @]J@]W@@@@@@ESKIP$      @]E@@@@@@@@@EMSKP$      @]G@]Y@@@@@@TB
)@@G@@E$DTBL$     @]F@]Z@@@@@@PIOPF$      @["@@@@@@@@@TNSEEKA$    @]X@]-@@@@@@TC
)@@G@@TSCANV$     @]O@]+@@@@@@PSDFRCE     @][@@@@@@@@@TDECF$      @]V@]=@@@@@@TD
)@@G@@FDAY2$      @[L@@@@@@@@@PIOFC$      @["@@@@@@@@@TFLOFD$     @]R@@@@@@@@@TE
)@@G@@AVL$KTEST0  @[\@@@@@@@@@EOCTV$      @]C@@@@@@@@@PIO$TRACE   @]@@@@@@@@@@TF
)@@G@@TSCANF$     @]O@@@@@@@@@TSKIP$      @]W@]?@@@@@@EHEXV$      @]B@]!@@@@@@TG
)@@G@@AVL$ALOAD5  @[=@],@@@@@@FOCTF$      @[J@@@@@@@@@AVL$TIMEOFF @[8@@@@@@@@@TH
)@@G@@TFLOF$      @]Q@]1@@@@@@EDCFZ$      @]C@]2@@@@@@PIOCBB$     @["@@@@@@@@@TI
)@@G@@TOCTVD$     @]V@@@@@@@@@ECOL$       @]E@@@@@@@@@EFLS2$      @]A@]6@@@@@@TJ
)@@G@@FHEXF$      @[F@@@@@@@@@AVL$BALANCE @[<@@@@@@@@@ECOPY$      @]Z@]9@@@@@@TK
)@@G@@TDEC10$     @]V@@@@@@@@@FIPKT$      @]Y@];@@@@@@AVL$KTEST4  @[3@]/@@@@@@TL
)@@G@@FDTZA$      @[N@@@@@@@@@EFD1$       @]Z@]"@@@@@@PIO$TRACES  @]@@@@@@@@@@TM
)@@G@@T$INDEX$    @]N@@@@@@@@@TOCTV$      @]V@@@@@@@@@PSDFWO      @]:@@@@@@@@@TN
)@@G@@T$ALCHAR$   @]U@##@@@@@@EFLG1$      @]A@@@@@@@@@TFINDA$     @]X@@@@@@@@@TO
)@@G@@T$CHARNL$   @]N@#A@@@@@@ECLEAR$     @] @#B@@@@@@AVL$STATCLR @[8@@@@@@@@@TP
)@@G@@TFLO10$     @]Q@#D@@@@@@PIO$EXIT    @["@@@@@@@@@AVL$NALOAD2 @[=@@@@@@@@@TQ
)@@G@@TCOL$       @]W@#G@@@@@@PIORL$      @["@@@@@@@@@TFIND$      @]X@#I@@@@@@TR
)@@G@@FTIME$      @[L@@@@@@@@@PSDFWC      @]:@@@@@@@@@PIONP$      @[;@#L@@@@@@TS
)@@G@@AVL$KTEST8  @[7@@@@@@@@@INMASK      @]W@#N@@@@@@FPACKS$     @]K@#O@@@@@@TT
)@@G@@AVLTRA      @[9@@@@@@@@@PSDFW       @]:@#Q@@@@@@T$ALPHINT$  @]T@#R@@@@@@TU
)@@G@@TGENV$      @]S@#S@@@@@@EFDECFL$    @]D@@@@@@@@@T$INTGEN$   @]T@#U@@@@@@TV
)@@G@@FUNLOCK$    @[N@@@@@@@@@AVL$DATA    @[=@@@@@@@@@PSDFREOF    @][@@@@@@@@@TW
)@@G@@FFLF1$      @[I@@@@@@@@@AVL$ASTOR4  @[=@@@@@@@@@E$DEC$      @]C@@@@@@@@@TX
)@@G@@EWDAY2$     @]J@@@@@@@@@EAPRT$      @]L@#+@@@@@@EWDAY1$     @]J@#<@@@@@@TY
)@@G@@E$ARTN$     @]I@#=@@@@@@PIOR$       @["@@@@@@@@@EDAY4$      @]J@@@@@@@@@TZ
)@@G@@FPACKC$     @]K@#$@@@@@@E$ASCII$    @]I@@@@@@@@@NUMSST$     @]^@#(@@@@@@UA
)@@G@@FFLG2$      @[I@@@@@@@@@AEDIT$      @]M@@@@@@@@@FFORMC$     @[G@@@@@@@@@UB
)@@G@@TNSEEK$     @]X@#!@@@@@@TGNRF$      @]S@#,@@@@@@EPRT$       @]L@#\@@@@@@UC
)@@G@@PSDFR$I     @][@#0@@@@@@AVLIR       @[!@#1@@@@@@FFDECFZ$    @[G@@@@@@@@@UD
)@@G@@FMSG$       @]K@#3@@@@@@FDAY1$      @[L@@@@@@@@@PSDFRS      @][@#5@@@@@@UE
)@@G@@AVL$NASTOR2 @[=@@@@@@@@@AVL$NALPHA  @[<@@@@@@@@@TTRD$       @]P@#8@@@@@@UF
)@@G@@TIDER$      @]N@#9@@@@@@EDECV$      @]C@#'@@@@@@PIOFO$      @["@#;@@@@@@UG
)@@G@@AVL$ALOAD2  @[=@#/@@@@@@FMSGC$      @[N@@@@@@@@@PSDFRO      @][@@@@@@@@@UH
)@@G@@FIFOPT$     @]Y@@@@@@@@@TCLNFUL$    @]P@@@@@@@@@EPACK$      @]Z@^[@@@@@@UI
)@@G@@EFDECV$     @]D@@@@@@@@@PSDFR$R     @][@^#@@@@@@FDECF$      @[J@@@@@@@@@UJ
)@@G@@EFORM$      @]D@^ @@@@@@EDIT$       @] @@@@@@@@@TDECVD$     @]V@@@@@@@@@UK
)@@G@@AVL$KTEST1  @[0@@@@@@@@@PSDFRC      @][@@@@@@@@@EFLS1$      @]A@^E@@@@@@UL
)@@G@@PSDFRB      @]]@@@@@@@@@T$SCAN1$    @]U@@@@@@@@@PSDFR       @][@@@@@@@@@UM
)@@G@@FDAY5$      @[L@^I@@@@@@FSKIP$      @[K@@@@@@@@@TDECV$      @]V@^K@@@@@@UN
)@@G@@EPRTG$      @]L@^L@@@@@@EFDECF$     @]D@^M@@@@@@FMSKP$      @[M@@@@@@@@@UO
)@@G@@TINTFD$     @]T@@@@@@@@@TFLOVD$     @]R@@@@@@@@@F$A0        @[N@@@@@@@@@UP
)@@G@@AVL$KTEST5  @[4@@@@@@@@@EFD2$       @]Z@^S@@@@@@EPAD$       @]G@^T@@@@@@UQ
)@@G@@AVL$INCR    @[8@@@@@@@@@AVL$NALOAD1 @[=@@@@@@@@@TINTF$      @]T@^W@@@@@@UR
)@@G@@E$XALF$     @]H@^X@@@@@@FOCTV$      @[J@@@@@@@@@TFLOV$      @]Q@@@@@@@@@US
)@@G@@FHEXV$      @[F@@@@@@@@@FDCFZ$      @[J@@@@@@@@@FCOL$       @[K@@@@@@@@@UT
)@@G@@TBLIN$      @]P@^<@@@@@@FFLS2$      @[I@@@@@@@@@FCOPY$      @]K@@@@@@@@@UU
)@@G@@FFD1$       @]K@^&@@@@@@ECLR$$      @] @@@@@@@@@T$RETURN$   @]U@@@@@@@@@UV
)@@G@@EDAY3$      @]J@^(@@@@@@FL$         @[N@@@@@@@@@AVL$NALOAD5 @[=@@@@@@@@@UW
)@@G@@ECHAR$      @] @^?@@@@@@FFLG1$      @[I@@@@@@@@@T$OCTGEN$   @]V@@@@@@@@@UX
)@@G@@TCLNESC$    @]P@@@@@@@@@EMSGR$      @]Z@^0@@@@@@EDECFZ$     @]C@^1@@@@@@UY
)@@G@@EDITX$      @] @^2@@@@@@FCLEAR$     @[N@@@@@@@@@T$RANGE1$   @]U@^4@@@@@@UZ
)@@G@@T$ERROVR$   @]U@^5@@@@@@AVL$NASTOR1 @[=@@@@@@@@@9%@D2N9%)D2P^[@D2R^[KD2SVA
)@@G@@R@0@@GC@KD2W&'0@@@/,0@1GC[#K@@[[@D2 C <@@[H9)@@I[[)D2#CA#@@]H'@@@^[]@D2^VB
)@@G@@C@)D2 ?8)@@#/C,A[S/K@A[V/K@A[V/K@A#2C@)D2#C[@D2X[[I@@IC[@D2X[[I@@JC@0D2^VC
)@@G@@ @J@@^C[@D2Y[[J@@ C[@D2X[[J@@B @J@@$C[@D2X[[@D13C[@D2X[[@D1:R8K@@]A@KD1_VD
)@@G@@N9@@@EC[@D1:[[@D2@C.)@]V"P)D1_"H@@@N[[@D1:C[)D1_H9)@@[[[)D1*C[0@@MC.)@]VVE
)@@G@@"P)@@N[[0D1?C]@D1_G'@@@[[]@D1% @[D12R8)@@[A@)D12N[KD1*/K@A]HC[@D1%H[@D12VF
)@@G@@[[@D1,C@)D1,C[ID12"D@D1?"[ID11[[ID12O8)@@[A@)D128LKA]#C[@D13"D@D1?[[@D13VG
)@@G@@C[@D13[[@D1!C[)D13"H)D2Y[[)D1\C]@D2X[]@D11R8)@@]A@)D1,C])D1_G")__"N[K@@QVH
)@@G@@/K@A]3D[@D11G9@@@@[[@D11"D]D12C.)@]V"P)D1,"H@@@N"[@D1![[@D1!C[]D12"D@D11VI
)@@G@@C[)D1,G9)@@[C[0@@MC.)@]V"P)@@N"H@@@N"[@D1\[[@D1\O8)@@[A@)D1,8LKA]YC@)D1_VJ
)@@G@@T8)@@HG@)D2#C[@D1!"D@D2@[[I@@[C@)D1_T8)@@HG@)D2#C[@D2X[[I@@]R8)@@]A@)D1,VK
)@@G@@C[@D1_G.@__"N[K@@K/K@A#MC@)D1,G@)D2#C[@D1_T9@@@HG@)@@KC[]D12"D@D2@C.)@]VVL
)@@G@@"P)D1,"H@@@N[[I@@[O8)@@[A@)D1,8LKA# C[@D1:"D@D1\[[@D10C[)D2X"H)@@K[[)D1(VM
)@@G@@C@)D1_T8)@@#G@)D2^[[,@@]C]@D1_!'@@@G/K@A#(C@)D1%T8)@@#G@)D2^C[@D1("D@D1:VN
)@@G@@C.)@]V"P)D1%"H@@@N[[I@@[C@)D1*T8)@@#G@)D2^C[@D1([[I@@#O8K@@[A@KD1_8L@A[,VO
)@@G@@/K@A@6C[@D2X[[@D13C[@D2X[[@D2@R8K@@[A@KD1_N9@@@^C.@@]V"P@D1_[[KD2]C[)D1_VP
)@@G@@G9)@@[[[)D1%C@)D1% @ID12R8)@@[A@)D12N[KD1_/K@A^KC[@D1_G9@@@]H[@D12[[@D1,VQ
)@@G@@C@)D1,C[ID12"D@D2]"[ID11[[ID12O8)@@[A@)D128LKA^ C[@D13"D@D2][[@D13R8)@@[VR
)@@G@@A@)D1,N[KD1%/K@A^+C@)D1,G@)D2#C[@D1_T9@@@HG@)@@KC[]D12"H@D14[[I@@@O8)@@[VS
)@@G@@A@)D1,8LKA^SC@)D1_T8)@@HG@)D2#C[@D2X[[I@@]C@)D1_T8)@@#G@)D2^C[@D2@[[I@@[VT
)@@G@@C@)D1_T8)@@#G@)D2^C.@@]V"P@D1%C@@D1_T8@@@HG@@D2#C[@@@L"HG@@[[[I@@]C@)D1_VU
)@@G@@T8)@@#G@)D2^C[@D1_G9@@@]C[K@@KC.@@]V"P@@@LC@@D1_T8@@@HG@@D2#C[@@@L"HG@@[VV
)@@G@@[[I@@#C[@D2@"H@D2][[@D2@O8K@@[A@KD1_8L@A#9/K@A@6R]0D2=R@KD2>9!)D2&9,@D2*VW
)@@G@@9,)D2%9\@D2?C@@D2)/KF@@@A]0D2=A@KD2>9()D2&9%@D2*9%)D2%9:@D2?R@K@@GC@KD21VX
)@@G@@&'0@@@/,0@1GC[[K@@[[@D2-C[-K@[[[)D2+C][K@][]@D2<C@)D2-C],D21[])D2)C#@D2<VY
)@@G@@/<@A !C@)D2-C[@D2+[[ID21/K@A HR]0D3&R@KD3$9!)D3*9,@D3%9,)D3?9\@D3,9\)D30VZ
)@@G@@/KF@@@A]0D3&A@KD3$9()D3*9%@D3%9%)D3?9:@D3,9:)D30R@K@@GC@KD35&'0@@@/,0@1GWA
)@@G@@C[[K@][[@D3>C[)D3>[[)D3+CA[@@[H'@@@[[]@D3-C]-K@#[])D3=CB[@@^H;@@@][#@D3<WB
)@@G@@C#-K@@?;)@@[/K@AC_C9@@@]?[@@@U/K@AC_C@-K@@C[ID3R[[@D2.C[)D3>/ @AAT/[)AAVWC
)@@G@@?[)@@K/K@AC7C@-K@@C[ID3H[[@D3MC[-K@#/ @AA-/[)AA<?[)@@K/K@AC;R]1@@@A]0D36WD
)@@G@@R]1@@#A]0D37R]1@@^A]0D38C@@D3'&"0@@@/,0 3/C@)D3-C9@@@G[[I@@[G@)D3BC[[K@@WE
)@@G@@[[I@@@C@)D3ZG@)D3- @I@@@C@)D3EG@)D3-C[@D2.[[I@@@C@)D3FG@)D3-C[@D3M[[I@@@WF
)@@G@@C@)D3DG@)D3-C[@D3MG9@@@[[[I@@@C@)D3UG@)D3-C9@@#C[[I@@@C@)D3PG@)D3-C9@@]QWG
)@@G@@[[I@@@C@)D3CG@)D3-C9@@@[[[I@@@C@)D3AG@)D3-C9@@@[[[I@@@C@)D3YG@)D3-C[@D2.WH
)@@G@@G9@@@[[[I@@@C@)D2"G@)D3-C[)@@IC@@D3.&"0@@@/,0A"UC@)@@M[@I@@@C@)D3LG@)D3-WI
)@@G@@C9@@@[[[I@@@C@)D3XG@)D3-J       NIO1$.         PROCESS IT, PUT IN BUFFERWJ
)@@G@@.      JC11             @I@@@@STPRTEST  JGD       A6,STPRNEXT.   ANY CHAWK
)@@G@@RS LEFT?                 JC11             @I@@@@          SLJ       NIO2WL
)@@G@@$.         IF NOT, WRAP IT ALL UP.         JC11             @I@@@@      WM
)@@G@@    J         0,X10.         AND RETURN.                     JC11       WN
)@@G@@      @I@@@@. *********************************************************SWO
)@@G@@TPRNTS*JC11             @I@@@@. ****************************************WP
)@@G@@*****************STREAMS*JC30             @I@@@@. THIS IS THE STREAM SUBWQ
)@@G@@ROUTINE.  A CALL OF:                       JC30             @I@@@@.     WR
)@@G@@                                                             JC30       WS
)@@G@@      @I@@@@.         STREAM    S1,S2,T,ERR,RUNOUT,SUCC.                WT
)@@G@@       JC30             @I@@@@.                                         WU
)@@G@@                         JC30             @I@@@@. IS EXPANDED TO:       WV
)@@G@@                                           JC30             @I@@@@.     WW
)@@G@@                                                             JC30       WX
)@@G@@      @I@@@@.         LX,U      X2,S1.                                  WY
)@@G@@       JC30             @I@@@@.         LX,U      X3,S2.                WZ
)@@G@@                         JC30             @I@@@@.         LX,U      A2,TXA
)@@G@@.                                          JC30             @I@@@@.     XB
)@@G@@    LX,U      X9,ERR.                                        JC30       XC
)@@G@@      @I@@@@.         LX,U      X10,RUNOUT.                             XD
)@@G@@       JC30             @I@@@@.         LX,U      X11,SUCC.             XE
)@@G@@                         JC30             @I@@@@.         J         STREXF
)@@G@@AMS.                                       JC30             @I@@@@.     XG
)@@G@@                                                             JC30       XH
)@@G@@      @I@@@@. THE FORMAT OF A SYNTAX TABLE ENTRY IS:                    XI
)@@G@@       JC30             @I@@@@.         H1 = ACTION TO TAKE FOR CHAR:   XJ
)@@G@@                         JC30             @I@@@@.              >0: GOTO/XK
)@@G@@CONTIN; TABLES+H1 = NEXT TABLE TO USE.     JC30             @I@@@@.     XL
)@@G@@         -1: ERROR                                           JC30       XM
)@@G@@      @I@@@@.              -2: STOP                                     XN
)@@G@@       JC30             @I@@@@.              -3: STOPSH                 XO
)@@G@@                         JC30             @I@@@@.         H2 = PUT (OR ZXP
)@@G@@ERO IF NOTHING SPECIFIED).                 JC30             @I@@@@.     XQ
)@@G@@                                                             JC30       XR
)@@G@@      @I@@@@CHADD.                        CHARACTER ADD ROUTINE:        XS
)@@G@@       JC30             @I@@@@          AA,S1     A2,0,A0.  CALL AS:    XT
)@@G@@                         JC30             @I@@@@          AA,S2     A2,0XU
)@@G@@,A0.       EX   CHADD,*A1.                 JC30             @I@@@@      XV
)@@G@@    AA,S3     A2,0,A0.  WHERE:                               JC30       XW
)@@G@@      @I@@@@          AA,S4     A2,0,A0.       A0 = WORD CONTAINING CHARXX
)@@G@@.      JC30             @I@@@@          AA,S5     A2,0,A0.       A1 = CHXY
)@@G@@AR WITHIN WORD (0-5).    JC30             @I@@@@          LMJ       X1,$XZ
)@@G@@+1.        A2 = ADDRESS CHAR IS TO BE ADDEDJC30             @I@@@@      YA
)@@G@@    AA,S6     A2,0,*A0.                                      JC30       YB
)@@G@@      @I@@@@          LXM,U     A1,0.                                   YC
)@@G@@       JC30             @I@@@@          J         0,X1.                 YD
)@@G@@                         JC30             @I@@@@.                       YE
)@@G@@                                           JC30             @I@@@@STREAMYF
)@@G@@S**.                    ENTRY POINT TO STREAM SUBROUTINE.    JC30       YG
)@@G@@      @I@@@@          LA        A0,0,X3.       A(S2)                    YH
)@@G@@       JC30             @I@@@@          AA,H2     A0,2,X3.       + OW(S2YI
)@@G@@)                        JC30             @I@@@@          LA,H1     A1,2YJ
)@@G@@,X3.       OC(S2)                          JC30             @I@@@@      YK
)@@G@@    LA        A10,3,X3.      L(S2)                           JC30       YL
)@@G@@      @I@@@@          SZ        A5.            A5 = 'PUT' ITEM.         YM
)@@G@@       JC30             @I@@@@          LXI,U     A0,1.          INCREMEYN
)@@G@@NTS = 1                  JC30             @I@@@@          LXI,U     A1,1YO
)@@G@@.          '                               JC30             @I@@@@      YP
)@@G@@    J         STRYY.         GOT ANY CHARS AT ALL?           JC30       YQ
)@@G@@      @I@@@@.                                                           YR
)@@G@@       JC30             @I@@@@STRXX.                             LOOK ATYS
)@@G@@ TABLE ENTRY FOR NEXT CHAJC30             @I@@@@          JZ        A2,GYT
)@@G@@OTOZERO.   ERROR IF TABLE ADDRESS ZERO.    JC30             @I@@@@      YU
)@@G@@    EX        CHADD,*A1.     SET A2 TO LOC OF TABLE ENTRY.   JC30       YV
)@@G@@      @I@@@@          LA        A13,A2.        IN CASE OF DUMP.         YW
)@@G@@       JC30             @I@@@@          TZ,H2     0,A2.          PUT ITEYX
)@@G@@M PRESENT?               JC30             @I@@@@          LA,H2     A5,0YY
)@@G@@,A2.       YES--SAVE IT IN A5.             JC30             @I@@@@      YZ
)@@G@@    LA,XH1    A2,0,A2.       WHAT TO DO WITH THIS CHAR?      JC30       ZA
)@@G@@      @I@@@@          JP        A2,STRGOTO.    IF > 0, GO ON TO NEXT CHAZB
)@@G@@R.     JC30             @I@@@@          LMA       A2,A2.         < 0--GEZC
)@@G@@T MAGNITUDE, WHICH IS TAGJC30             @I@@@@          TG,U      A2,4ZD
)@@G@@.          IS IT A VALID TAG?              JC30             @I@@@@      ZE
)@@G@@    J         BADTAG.        NO (>3).                        JC30       ZF
)@@G@@      @I@@@@          J         $+1,A2.        VALID TAG--JUMP TABLE:   ZG
)@@G@@       JC30             @I@@@@          J         BADTAG.        -0--NOTZH
)@@G@@ A VALID TAG YET.        JC30             @I@@@@          J         STREZI
)@@G@@RR.        ERROR TAG.                      JC30             @I@@@@      ZJ
)@@G@@    J         STRSTOP.       STOP TAG.                       JC30       ZK
)@@G@@      @I@@@@          J         STRSTOPSH.     STOPSH TAG.              ZL
)@@G@@       JC30             @I@@@@.                                  CONTIN ZM
)@@G@@OR GOTO TAG:             JC30             @I@@@@STRGOTO.                ZN
)@@G@@           APPLY TABLE TO NEXT CHAR:       JC30             @I@@@@      ZO
)@@G@@    AA,U      A2,TABLES.     GET ADDRESS OF NEXT TABLE.      JC30       ZP
)@@G@@      @I@@@@STRYY     JGD       A10,STRXX.     ANY MORE CHARS IN STRING?ZQ
)@@G@@       JC30             @I@@@@.                                  RUNOUT ZR
)@@G@@TERMINATION:             JC30             @I@@@@          SA        A5,SZS
)@@G@@TYPE.      RUNOUT CODE--SET STYPE.         JC30             @I@@@@      ZT
)@@G@@    DL        A5,0,X3.       COPY S2 TO S1.                  JC30       ZU
)@@G@@      @I@@@@          DS        A5,0,X2.       A-F-V                    ZV
)@@G@@       JC30             @I@@@@          DL        A5,2,X3.              ZW
)@@G@@                         JC30             @I@@@@          DS        A5,2ZX
)@@G@@,X2.       O-L                             JC30             @I@@@@      ZY
)@@G@@    SZ        3,X3.          SET L(S2) TO ZERO.              JC30       ZZ
)@@G@@      @I@@@@          J         0,X10.         RUNOUT EXIT.             AA
)@@G@@       JC30             @I@@@@.                                         AB
)@@G@@                         JC30             @I@@@@STRERR.                 AC
)@@G@@           TAG = 'ERROR'                   JC30             @I@@@@      AD
)@@G@@    SZ        STYPE.         STYPE = 0.                      JC30       AE
)@@G@@      @I@@@@          DL        A5,0,X3.       COPY S2 TO S1            AF
)@@G@@       JC30             @I@@@@          DS        A5,0,X2.       A-F-V  AG
)@@G@@                         JC30             @I@@@@          DL        A5,2AH
)@@G@@,X3.                                       JC30             @I@@@@      AI
)@@G@@    DS        A5,2,X2.       O-L                             JC30       AJ
)@@G@@      @I@@@@          J         0,X9.          ERROR EXIT.              AK
)@@G@@       JC30             @I@@@@.                                         AL
)@@G@@                         JC30             @I@@@@STRSTOP.                AM
)@@G@@           TAG = 'STOP'                    JC30             @I@@@@      AN
)@@G@@    SA        A5,STYPE.      STYPE = 'PUT' ITEM.             JC30       AO
)@@G@@      @I@@@@          DL        A4,0,X3.       COPY AFV(S2)             AP
)@@G@@       JC30             @I@@@@          DS        A4,0,X2.              AQ
)@@G@@                         JC30             @I@@@@          DL        A4,2AR
)@@G@@,X3.       A4,5 = OL(S2)                   JC30             @I@@@@      AS
)@@G@@    SA        A4,2,X2.       PUT O(S2) IN O(S1).             JC30       AT
)@@G@@      @I@@@@          ANU       A5,A10.        GET J = L(S2) - # CHARS LAU
)@@G@@EFT.   JC30             @I@@@@          SA        A6,3,X2.       L(S1) =AV
)@@G@@ J                       JC30             @I@@@@          ANA       A0,0AW
)@@G@@,X3.       GET BACK OFFSET (WORD PART).    JC30             @I@@@@      AX
)@@G@@    SA,H2     A0,2,X3.       OW(S2) = A0                     JC30       AY
)@@G@@      @I@@@@          SA,H1     A1,2,X3.       OC(S2) = A1.             AZ
)@@G@@       JC30             @I@@@@          SA        A10,3,X3.      L(S2) =BA
)@@G@@ A10 = # CHARS LEFT      JC30             @I@@@@          J         0,X1BB
)@@G@@1.         SUCCESS EXIT.                   JC30             @I@@@@.     BC
)@@G@@                                                             JC30       BD
)@@G@@      @I@@@@STRSTOPSH.                         TAG = 'STOPSH'--BACK UP ABE
)@@G@@ CHAR. JC30             @I@@@@          LXI,U     A1,0.          SO TESTBF
)@@G@@ WILL WORK PROPERLY:     JC30             @I@@@@          AA,U      A10,BG
)@@G@@1.         ADD 1 TO # CHARS LEFT.          JC30             @I@@@@      BH
)@@G@@    JNZ       A1,$+3.        SUBTRACT 1 FROM A0,1:           JC30       BI
)@@G@@      @I@@@@          ANA,U     A0,1.                                   BJ
)@@G@@       JC30             @I@@@@          LA,U      A1,6.                 BK
)@@G@@                         JC30             @I@@@@          ANA,U     A1,1BL
)@@G@@.                                          JC30             @I@@@@      BM
)@@G@@    J         STRSTOP.       REST SAME AS 'STOP'.            JC30       BN
)@@G@@      @I@@@@.                                                           BO
)@@G@@       JC30             @I@@@@.                                         BP
)@@G@@                         JC10             @I@@@@BADTAG    X$MESG    3.  BQ
)@@G@@           TAG NOT IN RANGE 1-4.           JC10             @I@@@@      BR
)@@G@@    'BAD TAG (IN A2).'.                                      JC10       BS
)@@G@@      @I@@@@          ER        ERR$.                                   BT
)@@G@@       JC10             @I@@@@.                                         BU
)@@G@@                         JC10             @I@@@@GOTOZERO  X$MESG    3.  BV
)@@G@@           GOTO TAG WITH ZERO ADDRESS      JC10             @I@@@@      BW
)@@G@@    'GOTO(0)--SEE A13.'.                                     JC10       BX
)@@G@@      @I@@@@          ER        ERR$.                                   BY
)@@G@@       JC10             @I@@@@.                                         BZ
)@@G@@                         JC10             @I@@@@. **********************CA
)@@G@@***********************************STREAMS*JC30             @I@@@@. ****CB
)@@G@@*****************************************************STRLS***JC04       CC
)@@G@@      @I@@@@. THIS IS THE STRING-REAL CONVERSION SUBROUTINE.  IT IS INVOCD
)@@G@@KED BY JC04             @I@@@@. A CALL OF:                              CE
)@@G@@                         JC04             @I@@@@.         SPREAL    DESCCF
)@@G@@R,SPEC,FAILURE,SUCCESS.                    JC04             @I@@@@. WHICCG
)@@G@@H IS EXPANDED TO:                                            JC04       CH
)@@G@@      @I@@@@.         LX,U      X8,DESCR.                               CI
)@@G@@       JC04             @I@@@@.         LX,U      X9,SPEC.              CJ
)@@G@@                         JC04             @I@@@@.         LX,U      X10,CK
)@@G@@FAILURE.                                   JC04             @I@@@@.     CL
)@@G@@    LX,U      X11,SUCCESS.                                   JC04       CM
)@@G@@      @I@@@@.         J         STRLS.                                  CN
)@@G@@       JC04             @I@@@@. IF FAILURE OR SUCCESS EXITS ARE MISSING,CO
)@@G@@ THEY ARE DEFINED (SEE   JC04             @I@@@@. SPREAL) AS THE LOCATIOCP
)@@G@@N AFTER THE 'J  STRLS.' INSTRUCTION.       JC04             @I@@@@. SPECCQ
)@@G@@ POINTS TO A STRING TO BE CONVERTED TO A REAL NUMBER.  A(DESCJC04       CR
)@@G@@      @I@@@@. IS ASSIGNED THE NUMBER; F(DESCR) IS SET TO 0; V(DESCR) IS CS
)@@G@@SET    JC04             @I@@@@. TO REALDT, THE TYPE-CODE FOR REALS.  IF CT
)@@G@@THE STRING ISN'T A VALID JC04             @I@@@@. REAL NUMBER, TRANSFER CU
)@@G@@IS TO FAILURE AND DESCR IS UNALTERED.      JC04             @I@@@@. IF SCV
)@@G@@UCCESSFUL, TRANSFER IS TO SUCCESS.                           JC04       CW
)@@G@@      @I@@@@.                                                           CX
)@@G@@       JC04             @I@@@@. THERE SHOULDN'T BE ANY TROUBLE OVER 64K.CY
)@@G@@                         JC04             @I@@@@.                       CZ
)@@G@@                                           JC04             @I@@@@. X1-XDA
)@@G@@4, X7-X15, A0-A3, A5-A6, A8-A11, A13 ARE ALL USED, AND THERE JC04       DB
)@@G@@      @I@@@@. MAY BE OTHERS THAT I DON'T KNOW ABOUT.                    DC
)@@G@@       JC04             @I@@@@.                                         DD
)@@G@@                         JC04             @I@@@@.                       DE
)@@G@@                                           JC04             @I@]@@      DF
)@@G@@    LON.                                                     JC04       DG
)@@G@@      @I[@@@.                                                           DH
)@@G@@       JC04             @I@@@@.         CHARACTER LOAD ROUTINE:         DI
)@@G@@                         JC04             @I@@@@STRLLD.                 DJ
)@@G@@                                           JC04             @I@@@@      DK
)@@G@@    LA,S1     A3,0,A0.                                       JC04       DL
)@@G@@      @I@@@@          LA,S2     A3,0,A0.                                DM
)@@G@@       JC04             @I@@@@          LA,S3     A3,0,A0.              DN
)@@G@@                         JC04             @I@@@@          LA,S4     A3,0DO
)@@G@@,A0.                                       JC04             @I@@@@      DP
)@@G@@    LA,S5     A3,0,A0.                                       JC04       DQ
)@@G@@      @I@@@@          LA,S6     A3,0,A0.                                DR
)@@G@@       JC04             @I@@@@          J         RTST+2.   7TH CHAR?  GDS
)@@G@@ET NEXT WORD.            JC04             @I@@@@.                       DT
)@@G@@                                           JC04             @I@@@@.     DU
)@@G@@    CONVERSION ROUTINE:                                      JC04       DV
)@@G@@      @I@@@@STRLS*.                                                     DW
)@@G@@       JC04             @I@@@@          LA,U      A5,057.   '0', LOWER BDX
)@@G@@OUND FOR TNW TEST.       JC04             @I@@@@          LA,U      A6,0DY
)@@G@@71.   '9'+1, UPPER BOUND                   JC04             @I@@@@      DZ
)@@G@@    SZ        X4.                                            JC04       EA
)@@G@@      @I@@@@          SZ        X7.                                     EB
)@@G@@       JC04             @I@@@@          SZ        A8.                   EC
)@@G@@                         JC04             @I@@@@          LA        A13,ED
)@@G@@(+1.0).    FINAL SIGN                      JC04             @I@@@@      EE
)@@G@@    LA,U      A10,155.       EXPONENT BIAS                   JC04       EF
)@@G@@      @I@@@@          LA        A0,0,X9.       ADDR OF 1ST CHAR. OF STRIEG
)@@G@@NG     JC04             @I@@@@          AA,H2     A0,2,X9.              EH
)@@G@@                         JC04             @I@@@@          LXI,U     A0,1EI
)@@G@@.                                          JC04             @I@@@@      EJ
)@@G@@    LX,H1     X1,2,X9.       CHAR WITHIN WORD.               JC04       EK
)@@G@@      @I@@@@          LXI,U     X1,1.                                   EL
)@@G@@       JC04             @I@@@@          LX,U      X2,6.          # CHARSEM
)@@G@@/WORD                    JC04             @I@@@@          LX        X3,3EN
)@@G@@,X9.       SIZE OF STRING                  JC04             @I@@@@.     EO
)@@G@@                                                             JC04       EP
)@@G@@      @I@@@@          ANX,U     X3,1.          GET FIRST CHAR:          EQ
)@@G@@       JC04             @I@@@@          EX        STRLLD,*X1.           ER
)@@G@@                         JC04             @I@@@@          TE,U      A3,'ES
)@@G@@-'.        NEGATIVE?                       JC04             @I@@@@      ET
)@@G@@    J         LOOP+1.        NO--GO GET NUMBER               JC04       EU
)@@G@@      @I@@@@          LA        A13,(-1.0).    YES--SET FINAL SIGN TO NEEV
)@@G@@G.     JC04             @I@@@@          J         TESTR.         GET NUMEW
)@@G@@BER.                     JC04             @I@@@@.                       EX
)@@G@@                                           JC04             @I@@@@LOOP. EY
)@@G@@                                                             JC04       EZ
)@@G@@      @I@@@@          EX        STRLLD,*X1.    GET A CHAR FROM STRING.  FA
)@@G@@       JC04             @I@@@@          TNW       A5,A3.         IS IT AFB
)@@G@@ DIGIT?                  JC04             @I@@@@          J         ARNDFC
)@@G@@.          IF IT IS, PROCESS IT.           JC04             @I@@@@      FD
)@@G@@    TE,U      A3,'.'.        IF NOT, IS IT A PERIOD?         JC04       FE
)@@G@@      @I@@@@          J         0,X10.         IF NOT, FAIL DUE TO NON-NFF
)@@G@@UMERIC JC04             @I@@@@          LA        A2,X4.         SEE IF FG
)@@G@@HAVE ALREADY MET A '.'   JC04             @I@@@@          JNZ       A2,0FH
)@@G@@,X10.      IF X4 NONZERO, THIS IS 2ND '.'! JC04             @I@@@@      FI
)@@G@@    LX,U      X7,1.          X7 = 1 MEANS '.' FOUND.         JC04       FJ
)@@G@@      @I@@@@          J         TESTR.         GET REST OF NUMBER.      FK
)@@G@@       JC04             @I@@@@.                                         FL
)@@G@@                         JC04             @I@@@@ARND.                   FM
)@@G@@           FOUND A DIGIT:                  JC04             @I@@@@      FN
)@@G@@    ANA,U     A3,060.        FIND NUMERIC VALUE OF DIGIT.    JC04       FO
)@@G@@      @I@@@@          LCF       A10,A3.        CONVERT TO FLOATING (IN AFP
)@@G@@11).   JC04             @I@@@@          AX        X4,X7.         X4 = # FQ
)@@G@@OF DIGITS AFTER '.'.     JC04             @I@@@@          FM        A8,(FR
)@@G@@+10.0).    MULT PREVIOUS VALUE BY 10.      JC04             @I@@@@      FS
)@@G@@    FA        A8,A11.        ADD NEW DIGIT.                  JC04       FT
)@@G@@      @I@@@@TESTR.                             GET NEXT DIGIT:          FU
)@@G@@       JC04             @I@@@@          JGD       X3,RTST.       DECREMEFV
)@@G@@NT LENGTH COUNTER.       JC04             @I@@@@          J         SIGNFW
)@@G@@.          IF NOTHING LEFT.                JC04             @I@@@@.     FX
)@@G@@                                                             JC04       FY
)@@G@@      @I@@@@RTST.                                                       FZ
)@@G@@       JC04             @I@@@@          TLEM      X1,X2.         IF H2(SGA
)@@G@@1) NE X2 THEN            JC04             @I@@@@          JGD       X1,LGB
)@@G@@OOP.          IF (X1:=X1-1) >= 0 THEN GOTO JC04             @I@@@@      GC
)@@G@@    LXM,U     X1,0.                                          JC04       GD
)@@G@@      @I@@@@          JMGI      A0,LOOP.       THIS I DON'T UNDERSTAND. GE
)@@G@@       JC04             @I@@@@.                                         GF
)@@G@@                         JC04             @I@@@@SIGN.                   GG
)@@G@@           FINAL WRAP-UP:                  JC04             @I@@@@      GH
)@@G@@    FM        A8,A13.        SET SIGN.                       JC04       GI
)@@G@@      @I@@@@          FD        A8,P10,X4.     ADJUST FOR # DIGITS AFTERGJ
)@@G@@ '.'.  JC04             @I@@@@          SA        A8,0,X8.       PUT NUMGK
)@@G@@BER IN A(DESCR).         JC04             @I@@@@          LA,U      A0,RGL
)@@G@@EALDT.                                     JC04             @I@@@@      GM
)@@G@@    SA        A0,1,X8.       SET TYPE TO REAL.               JC04       GN
)@@G@@      @I@@@@          J         0,X11.         SUCCESSFUL RETURN.       GO
)@@G@@       JC04             @I@]@@          LOFF.                           GP
)@@G@@                         JC04             @I[@@@. **********************GQ
)@@G@@***********************************STRLS***JC04             @I@@@@      GR
)@@G@@    END.      COPYMLINK.                                     JC30       GS
)@@G@@      @I@@@@. *********************************************************CGT
)@@G@@OPYMLINJC30             @I@@@@. ****************************************GU
)@@G@@*****************COPYPARMJC30             @I@@@@. GLOBAL DEFINITIONS:   GV
)@@G@@                                           JC30             @I@@@@.     GW
)@@G@@                                                             JC30       GX
)@@G@@      @I@@@@COPYPARMS** PROC    0.                                      GY
)@@G@@       JC30             @I@@@@.                                         GZ
)@@G@@                         JC30             @I@@@@X1*       EQU       1.  HA
)@@G@@      FREE (OFTEN USED FOR RETURN ADDRESSESJC00             @I@@@@X2*   HB
)@@G@@    EQU       2.        FREE.                                JC00       HC
)@@G@@      @I@@@@X3*       EQU       3.        FREE                          HD
)@@G@@       JC00             @I@@@@X4*       EQU       4.        FREE        HE
)@@G@@                         JC00             @I@@@@X5*       EQU       5.  HF
)@@G@@      RESERVED FOR CSTACK.                 JC00             @I@@@@X6*   HG
)@@G@@    EQU       6.        RESERVED FOR OSTACK.                 JC00       HH
)@@G@@      @I@@@@X7*       EQU       7.        FREE                          HI
)@@G@@       JC00             @I@@@@X8*       EQU       8.        FREE        HJ
)@@G@@                         JC00             @I@@@@X9*       EQU       9.  HK
)@@G@@      FREE                                 JC00             @I@[@@X10*  HL
)@@G@@    EQU       10.       FREE                                 JC00       HM
)@@G@@      @G@@@[X10*      EQU       10.       FREE (USUALLY HOLDS FAILURE ADHN
)@@G@@DRESS) JC00 @I@@@@X11*      EQU       11.       FREE (OFTEN USED FOR RETHO
)@@G@@URN ADDRESSESJC00             @I@@@@X12*      EQU       12.       = A0, HP
)@@G@@FREE                           JC00             @I@@@@X13*      EQU     HQ
)@@G@@  13.       = A1, FREE                           JC00             @I@@@@HR
)@@G@@X14*      EQU       14.       = A2, FREE                           JC00 HS
)@@G@@            @I@@@@X15*      EQU       15.       = A3, FREE              HT
)@@G@@             JC00             @I@@@@A0*       EQU       12.       = X12,HU
)@@G@@ FREE                          JC00             @I@@@@A1*       EQU     HV
)@@G@@  13.       = X13, FREE                          JC00             @I@@@@HW
)@@G@@A2*       EQU       14.       = X14, FREE                          JC00 HX
)@@G@@            @I@@@@A3*       EQU       15.       = X15, FREE             HY
)@@G@@             JC00             @I@@@@A4*       EQU       16.       FREE  HZ
)@@G@@                               JC00             @I@@@@A5*       EQU     IA
)@@G@@  17.       FREE                                 JC00             @I@@@@IB
)@@G@@A6*       EQU       18.       FREE                                 JC00 IC
)@@G@@            @I@@@@A7*       EQU       19.       FREE                    ID
)@@G@@             JC00             @I@@@@A8*       EQU       20.       FREE  IE
)@@G@@                               JC00             @I@@@@A9*       EQU     IF
)@@G@@  21.       FREE                                 JC00             @I@@@@IG
)@@G@@A10*      EQU       22.       FREE                                 JC00 IH
)@@G@@            @I@@@@A11*      EQU       23.       FREE                    II
)@@G@@             JC00             @I@@@@A12*      EQU       24.       FREE  IJ
)@@G@@                               JC00             @I@@@@A13*      EQU     IK
)@@G@@  25.       FREE                                 JC00             @I@@@@IL
)@@G@@A14*      EQU       26.       FREE                                 JC00 IM
)@@G@@            @I@@@@A15*      EQU       27.       USED TO HOLD A ' ', APPAIN
)@@G@@RENTLY.      JC00             @I@@@@R1*       EQU       65.             IO
)@@G@@                                                @I@@@@R2*       EQU     IP
)@@G@@  66.                                                             @I@@@@IQ
)@@G@@R3*       EQU       67.                                                 IR
)@@G@@            @I@@@@R4*       EQU       68.                               IS
)@@G@@                              @I@@@@R5*       EQU       69.             IT
)@@G@@                                                @I@@@@R6*       EQU     IU
)@@G@@  70.                                                             @I@@@@IV
)@@G@@R7*       EQU       71.                                                 IW
)@@G@@            @I@@@@R8*       EQU       72.                               IX
)@@G@@                              @I@@@@R9*       EQU       73.             IY
)@@G@@                                                @I@@@@R10*      EQU     IZ
)@@G@@  74.                                                             @I@@@@JA
)@@G@@R11*      EQU       75.                                                 JB
)@@G@@            @I@@@@R12*      EQU       76.                               JC
)@@G@@                              @I@@@@R13*      EQU       77.             JD
)@@G@@                                                @I@@@@R14*      EQU     JE
)@@G@@  78.                                                             @I@@@@JF
)@@G@@R15*      EQU       79.                                                 JG
)@@G@@            @I@@@@U*        EQU       14.                               JH
)@@G@@                              @I@@@@XU*       EQU       15.             JI
)@@G@@                                                @I@@@@H1*       EQU     JJ
)@@G@@  2.                                                              @I@@@@JK
)@@G@@H2*       EQU       1.                                                  JL
)@@G@@            @I@@@@XH1*      EQU       4.                                JM
)@@G@@                              @I@@@@XH2*      EQU       3.              JN
)@@G@@                                                @I@@@@T1*       EQU     JO
)@@G@@  7.                                                              @I@@@@JP
)@@G@@T2*       EQU       6.                                                  JQ
)@@G@@            @I@@@@T3*       EQU       5.                                JR
)@@G@@                              @I@@@@S1*       EQU       13.             JS
)@@G@@                                                @I@@@@S2*       EQU     JT
)@@G@@  12.                                                             @I@@@@JU
)@@G@@S3*       EQU       11.                                                 JV
)@@G@@            @I@@@@S4*       EQU       10.                               JW
)@@G@@                              @I@@@@S5*       EQU       9.              JX
)@@G@@                                                @I@@@@S6*       EQU     JY
)@@G@@  8.                                                              @I@@@@JZ
)@@G@@. DEFINITIONS FOR THE 'PARMS' FILE OF VERSION 3:                   JC30 KA
)@@G@@            @I@@@@ALPHSZ*   EQU       64.       SIZE OF CHARACTER SET.  KB
)@@G@@             JC30             @I@@@@CONTIN*   EQU       -0.       CONTINKC
)@@G@@ TAG.                          JC30             @I@@@@CPA*      EQU     KD
)@@G@@  6.        CHARS/WORD.                          JC30             @I@@@@KE
)@@G@@CPD*      EQU       12.       CHARS/DESCR.                         JC30 KF
)@@G@@            @I@@@@CSTACK*   EQU       X5.       CURRENT TOP OF STACK.   KG
)@@G@@             JC30             @I@@@@DESCR*    EQU       2.        WORDS/KH
)@@G@@DESCRIPTOR.                    JC30             @I@@@@ERROR*    EQU     KI
)@@G@@  -1.       ERROR TAG.                           JC30             @G@@[]KJ
)@@G@@EXPMAX*   EQU       25.       MAX NUMBER OF ARGS TO EXTERNAL FCT.  JC22 KK
)@@G@@@I@@@@FNC*      EQU       1.        FUNCTION FLAG.                      KL
)@@G@@ JC30             @G@@@[FSTSIZ*   EQU       10000.    INITIAL FREE STORAKM
)@@G@@GE (DESCRS)        JC15 @I@@@@INTDT*    EQU       6.        INTEGER DATAKN
)@@G@@ TYPE, ALTERNATE NAME.   JC05             @I@@@@MARK*     EQU       2.  KO
)@@G@@      MARKED TITLE FLAG.                   JC30             @I@@@@OSTACKKP
)@@G@@*   EQU       X6.       OLD STACK POINTER.                   JC30       KQ
)@@G@@      @I@@@@PTR*      EQU       4.        POINTER FLAG.                 KR
)@@G@@       JC30             @I@@@@REALDT*   EQU       7.        REAL TYPE COKS
)@@G@@DE, ALTERNATE NAME.      JC05             @I@[@@SIZFST*   EQU       1000KT
)@@G@@0.    SIZE OF FREE STORAGE AREA(DESCRS).   JC01             @I@@@@SIZLIMKU
)@@G@@*   EQU       0177777.  MAX VALUE OF V-FIELD.                JC30       KV
)@@G@@      @I@@@@SPEC*     EQU       4.        WORDS/SPECIFIER.              KW
)@@G@@       JC30             @I@@@@STOP*     EQU       -2.       STOP TAG.   KX
)@@G@@                         JC30             @I@@@@STOPSH*   EQU       -3. KY
)@@G@@      STOPSH TAG.                          JC30             @G@@[]STRDT*KZ
)@@G@@    EQU       1.        STRING TYPE CODE.                    JC22 @I@@@@LA
)@@G@@STTL*     EQU       8.        STRING TITLE FLAG.                   JC30 LB
)@@G@@            @I@@@@TTL*      EQU       16.       BLOCK TITLE FLAG.       LC
)@@G@@             JC30             @I@@@@UNITI*    EQU       5.        STANDALD
)@@G@@RD INPUT UNIT.                 JC30             @I@@@@UNITO*    EQU     LE
)@@G@@  6.        STANDARD OUTPUT UNIT.                JC30             @I@@@@LF
)@@G@@UNITP*    EQU       1.        STANDARD PUNCH UNIT.                 JC30 LG
)@@G@@            @I@@@@          END.                                        LH
)@@G@@             JC30             @I@@@@. **********************************LI
)@@G@@***********************COPYPARMJC30             @I@@@@. ****************LJ
)@@G@@*****************************************CPYPAT**JC00             @I@@@@LK
)@@G@@. CPYPAT D1,D2,D3,D4,D5,D6.   'COPY PATTERN'                       JC00 LL
)@@G@@            @I@@@@. COPIES A PATTERN--SEE THE MACRO DOC. FOR DETAILS.  ILM
)@@G@@T'S COMPLEX. JC00             @I@@@@.                                   LN
)@@G@@                               JC00             @I@@@@. SHOULD WORK FOR LO
)@@G@@> 64K.                                           JC00             @I@@@@LP
)@@G@@.                                                                       LQ
)@@G@@            @I@@@@CPYPAT**  PROC      1.                 COPY PATTERN   LR
)@@G@@                              @I@@@@DESCR4    EQU       CPYPAT(1,4).    LS
)@@G@@                                                @I@@@@          LA15    LT
)@@G@@  1.                                             JC30             @I@@@@LU
)@@G@@          LA        A0,CPYPAT(1,6).                                     LV
)@@G@@            @I@@@@          LA        A1,CPYPAT(1,1).                   LW
)@@G@@                              @I@@@@          LA        A2,CPYPAT(1,2). LX
)@@G@@                                                @I@@@@COPY      DL      LY
)@@G@@  A4,2,A2.                                                        @I@@@@LZ
)@@G@@          DS        A4,2,A1.                                            MA
)@@G@@            @I@@@@          DL        A4,4,A2.                          MB
)@@G@@                              @I@@@@          AA        A4,DESCR4.      MC
)@@G@@                                                @I@@@@          TNE     MD
)@@G@@  A4,DESCR4.                                                      @I@@@@ME
)@@G@@          SZ        A4.                                                 MF
)@@G@@            @I@@@@          AA        A5,DESCR4.                        MG
)@@G@@                              @I@@@@          TNE       A5,DESCR4.      MH
)@@G@@                                                @I@@@@          LA      MI
)@@G@@  A5,CPYPAT(1,5).                                                 @I@@@@MJ
)@@G@@          DS        A4,4,A1.                                            MK
)@@G@@            @I@@@@          DL        A4,6,A2.                          ML
)@@G@@                              @I@@@@          AA        A4,CPYPAT(1,3). MM
)@@G@@                                                @I@@@@          AA      MN
)@@G@@  A5,CPYPAT(1,3).                                                 @I@@@@MO
)@@G@@          DS        A4,6,A1.                                            MP
)@@G@@            @I@@@@          LA,H2     A3,3,A2.       GET V(2+A(D2)) = V7MQ
)@@G@@.            JC30             @I@@@@          TE,U      A3,3.          IMR
)@@G@@F V7=3, COPY R2+4D TO R1+4D.   JC30             @I@@@@          J       MS
)@@G@@  NEXT.          IF NOT, DON'T.                  JC30             @I@@@@MT
)@@G@@          DL        A4,8,A2.                                            MU
)@@G@@            @I@@@@          DS        A4,8,A1.                          MV
)@@G@@                              @I@@@@NEXT      LA,H2     A3,3,A2.        MW
)@@G@@    V(2+A(D2))  [= V7]         JC30             @I@@@@          AA,U    MX
)@@G@@  A3,1.               1 + V7                     JC30             @I@@@@MY
)@@G@@          LSSC      A3,1.                                               MZ
)@@G@@            @I@@@@          ANA       A0,A3.                            NA
)@@G@@                              @I@@@@          AA        A1,A3.          NB
)@@G@@                                                @I@@@@          TLE,U   NC
)@@G@@  A0,1.          IF A0 LT 1, FINISHED.           JC30             @I@@@@ND
)@@G@@          J         DONE.                                          JC30 NE
)@@G@@            @I@@@@          AA        A2,A3.                            NF
)@@G@@                              @I@@@@          J         COPY.           NG
)@@G@@                                                @I@@@@DONE.             NH
)@@G@@                 FINISHED--STORE RESULT IN A1:   JC30             @I@@@@NI
)@@G@@          SA        A1,CPYPAT(1,1).                                     NJ
)@@G@@            @I@@@@          LA15      0.                                NK
)@@G@@             JC30             @I@]@@          LOFF.                     NL
)@@G@@                               JC10             @I[@@@          END.    NM
)@@G@@                                                                  @I@@@@NN
)@@G@@. *********************************************************CPYPAT**JC00 NO
)@@G@@            @I@@@@. ****************************************************NP
)@@G@@*****DATE****JC00             @I@@@@DATE**    PROC      1.              NQ
)@@G@@   GET DATE                                     @I@@@@SPEC      EQU     NR
)@@G@@  DATE(1,1).                                                      @I@@@@NS
)@@G@@          ER        DATE$.                                              NT
)@@G@@            @I@@@@          SA,T1     A0,DATBUF+1.                      NU
)@@G@@                              @I@@@@          SSL       A0,12.          NV
)@@G@@                                                @I@@@@          SA,S5   NW
)@@G@@  A0,DATBUF.                                                      @I@@@@NX
)@@G@@          SSL       A0,6.                                               NY
)@@G@@            @I@@@@          SA,S4     A0,DATBUF.                        NZ
)@@G@@                              @I@@@@          SSL       A0,6.           OA
)@@G@@                                                @I@@@@          SA,T1   OB
)@@G@@  A0,DATBUF.                                                      @I@@@@OC
)@@G@@          LA,U      A0,DATBUF.                                          OD
)@@G@@            @I@@@@          SA        A0,SPEC.                          OE
)@@G@@                              @I@@@@          SZ        SPEC+1.         OF
)@@G@@                                                @I@@@@          SZ      OG
)@@G@@  SPEC+2.                                                         @I@@@@OH
)@@G@@          LA,U      A0,8.                                               OI
)@@G@@            @I@@@@          SA        A0,SPEC+3.                        OJ
)@@G@@                              @I@@@@          END.                      OK
)@@G@@                                                @I@@@@. ****************OL
)@@G@@*****************************************DATE****JC00             @I@@@@OM
)@@G@@. *********************************************************DECRA***JC00 ON
)@@G@@            @I@@@@DECRA**   PROC      1,3.              DECREMENT ADDRESOO
)@@G@@S                             @I@@@@          LA        12,DECRA(1,1).  OP
)@@G@@                                                @I@@@@          ANA,017 OQ
)@@G@@  12,DECRA(1,2).                                                  @I@@@@OR
)@@G@@          SA        12,DECRA(1,1).                                      OS
)@@G@@            @I@@@@          END.                                        OT
)@@G@@                              @I@@@@. **********************************OU
)@@G@@***********************DECRA***JC00             @I@@@@. ****************OV
)@@G@@*****************************************DEQL****JC00             @I@@@@OW
)@@G@@DEQL**    PROC      1.                  DESCRIPTOR EQUAL TEST           OX
)@@G@@            @I@@@@          DL        A0,DEQL(1,1).                     OY
)@@G@@                              @I@@@@          DTE       A0,DEQL(1,2).   OZ
)@@G@@                                                @I@@@@          J       PA
)@@G@@  LOC.                                                            @I@@@@PB
)@@G@@          DO 1-DEQL(1,*4) , J DEQL(1,4).                                PC
)@@G@@            @I@@@@LOC       LOCC      DEQL(1,3),$.   FAIL EXIT HERE IF MPD
)@@G@@ISSING.      JC30             @I@]@@          LOFF.                     PE
)@@G@@                               JC10             @I[@@@          END.    PF
)@@G@@                                                                  @I@@@@PG
)@@G@@. *********************************************************DEQL****JC00 PH
)@@G@@            @I@@@@. ****************************************************PI
)@@G@@*****DESCR***JC00             @I@@@@DESCR**   PROC      2,2.            PJ
)@@G@@   ASSEMBLE DESCRIPTOR                          @I@@@@          +       PK
)@@G@@  DESCR(1,1).                                                     @I@@@@PL
)@@G@@          +         DESCR(1,2),DESCR(1,3)+DESCR(2,1).                   PM
)@@G@@            @I@@@@          END.                                        PN
)@@G@@                              @I@@@@. **********************************PO
)@@G@@***********************DESCR***JC00             @I@@@@. ****************PP
)@@G@@*****************************************DIVIDE**JC00             @I@@@@PQ
)@@G@@DIVIDE**  PROC      1.                  DIVIDE INTEGERS                 PR
)@@G@@            @G@@@[          TNZ       DIVIDE(1,3).   IS DIVISOR ZERO?   PS
)@@G@@             JC12 @G@@@[          J         FAIL.          IF SO, FAIL. PT
)@@G@@                   JC12 @I@@@@          LA        12,DIVIDE(1,2).       PU
)@@G@@                                          @I@@@@          DSA       12,3PV
)@@G@@6.                                                          @I@@@@      PW
)@@G@@    DI        12,DIVIDE(1,3).                                           PX
)@@G@@      @I@@@@          LA        13,DIVIDE(1,2)+1.                       PY
)@@G@@                        @I@@@@          DS        12,DIVIDE(1,1).       PZ
)@@G@@                                          @I@@@@  DO 1-DIVIDE(1,*5) , J QA
)@@G@@DIVIDE(1,5).                                                @G@@@[FAIL  QB
)@@G@@    LOCC      DIVIDE(1,4),$. DEFINE FAULT EXIT HERE.         JC12 @I@@@@QC
)@@G@@          END.                                                          QD
)@@G@@            @I@@@@. ****************************************************QE
)@@G@@*****DIVIDE**JC00             @I@@@@. **********************************QF
)@@G@@***********************DUMPWDS*JC10             @I@@@@. DUMPWDS  LOC,N,IQG
)@@G@@D.               'DUMP WORDS'                    JC10             @I@@@@QH
)@@G@@.                                                                  JC10 QI
)@@G@@            @I@@@@. THIS GENERATES A SNAPSHOT DUMP OF THE N WORDS STARTIQJ
)@@G@@NG AT LOC, PLJC10             @I@@@@. THE REGISTERS.  LOC AND N MUST BE QK
)@@G@@THE ADDRESSES OF WORDS CONTAINIJC10             @I@@@@. THE STARTING LOCQL
)@@G@@ATION AND NUMBER OF WORDS.  ID IS A CONSTANT VALUJC10             @I@@@@QM
)@@G@@. WHICH IS PRINTED TO IDENTIFY THE DUMP.                                QN
)@@G@@            @I@@@@.                                                     QO
)@@G@@             JC10             @I@@@@DUMPWDS** PROC      1.              QP
)@@G@@                               JC10             @I@@@@.                 QQ
)@@G@@                                                 JC10             @I@@@@QR
)@@G@@LOC       EQU       DUMPWDS(1,1).  REGISTER HOLDING STARTING LOCATIJC10 QS
)@@G@@            @I@@@@N         EQU       DUMPWDS(1,2).  REGISTER CONTAININGQT
)@@G@@ NUMBER OF WOJC10             @I@@@@ID        EQU       DUMPWDS(1,3).  CQU
)@@G@@ONSTANT IDENTIFYING DUMP       JC10             @I@@@@.                 QV
)@@G@@                                                 JC10             @I@]@@QW
)@@G@@$(0),PKT  +         ID.            TITLE.                          JC10 QX
)@@G@@            @G@@[]$(2),PKT  +         ID.            TITLE.             QY
)@@G@@             JC10 @I[@@@          +         0,0.           N,LOC.       QZ
)@@G@@                   JC10             @I@@@@          +         0.        RA
)@@G@@     A0.                             JC10             @I@@@@          + RB
)@@G@@        0.             A1.                             JC10             RC
)@@G@@@I@@@@.                                                                 RD
)@@G@@ JC10             @I@@@@$(1)      SA        A0,PKT+2.      SAVE A0.     RE
)@@G@@                   JC10             @I@@@@          LA        A0,LOC.   RF
)@@G@@     PUT LOC INTO PACKET:            JC10             @I@@@@          SARG
)@@G@@        A0,PKT+1.                                      JC10             RH
)@@G@@@I@@@@ DO A0=N ,     LA   A0,PKT+2.      N HAS BEEN STORED IN PKT.      RI
)@@G@@ JC10             @I@@@@ DO 1-(A0=N) , LA   A0,N.          N CAN BE LOADRJ
)@@G@@ED DIRECTLY.       JC10             @I@@@@          SA        A1,PKT+3. RK
)@@G@@     SAVE A1 FROM OR-OP              JC10             @I@@@@          ORRL
)@@G@@        A0,XARMASK.    SET BITS TO GET REGISTERS DUMPEDJC10             RM
)@@G@@@I@@@@          SA,H1     A1,PKT+1.      STORE N IN PACKET              RN
)@@G@@ JC10             @I@@@@          LA        A1,PKT+3.      RESTORE A1.  RO
)@@G@@                   JC10             @I@@@@          LA,U      A0,PKT.   RP
)@@G@@     PACKET ADDRESS.                 JC10             @I@@@@          ERRQ
)@@G@@        SNAP$.         DO DUMP.                        JC10             RR
)@@G@@@I@@@@          END.      DUMPWDS.                                      RS
)@@G@@ JC10             @I@@@@. **********************************************RT
)@@G@@***********DUMPWDS*JC10             @I@@@@. ****************************RU
)@@G@@*****************************ENDEX***JC00             @I@@@@. ENDEX.    RV
)@@G@@                       'END OF EXECUTION'              JC30             RW
)@@G@@@I@@@@.                                                                 RX
)@@G@@ JC30             @I@@@@. THIS TERMINATES THE SNOBOL4 PROGRAM AS FOLLOWSRY
)@@G@@:                  JC30             @I@@@@.                             RZ
)@@G@@                                     JC30             @I@@@@. IF &ABEND SA
)@@G@@= 0 THEN                                               JC30             SB
)@@G@@@I@@@@. BEGIN                                                           SC
)@@G@@ JC30             @I@@@@.    CONDITION WORD := &CODE;                   SD
)@@G@@                   JC30             @I@@@@.    EXIT$;                   SE
)@@G@@                                     JC30             @I@@@@. END ELSE  SF
)@@G@@                                                       JC30             SG
)@@G@@@I@@@@. BEGIN                                                           SH
)@@G@@ JC30             @I@@@@.    CONDITION WORD := ABS(&ABEND);             SI
)@@G@@                   JC30             @I@@@@.    IF &ABEND > 0            SJ
)@@G@@                                     JC30             @I@@@@.       THENSK
)@@G@@ ERR$                                                  JC30             SL
)@@G@@@I@@@@.       ELSE ABORT$;                                              SM
)@@G@@ JC30             @I@@@@. END;                                          SN
)@@G@@                   JC30             @I@@@@.                             SO
)@@G@@                                     JC30             @I@@@@ENDEX**   PRSP
)@@G@@OC      0.                 END EXECUTION                                SQ
)@@G@@@I@@@@          LA        A0,ABNDCL.     &ABEND KEYWORD.                SR
)@@G@@ JC30             @I@@@@          JZ        A0,NORMAL.     NORMAL IF &ABSS
)@@G@@END = 0            JC30             @I@@@@          JN        A0,ABORT. ST
)@@G@@     ABORT IF &ABEND < 0.            JC30             @I@@@@ERR       ERSU
)@@G@@        SETC$.         ERROR EXIT IF &ABEND > 0, PUT   JC30             SV
)@@G@@@I@@@@.                                  VALUE IN CONDITION WORD.       SW
)@@G@@ JC30             @I@@@@          ER        ERR$.          TAKE ERR$ EXISX
)@@G@@T.                 JC30             @I@@@@.                             SY
)@@G@@                                     JC30             @I@@@@NORMAL    LASZ
)@@G@@        A0,RETCOD.     PUT &CODE INTO CONDITION WORD:  JC30             TA
)@@G@@@I@@@@          ER        SETC$.                                        TB
)@@G@@ JC30             @I@@@@          ER        EXIT$.         TAKE EXIT$--NTC
)@@G@@ORMAL EXIT.        JC30             @I@@@@.                             TD
)@@G@@                                     JC30             @I@@@@ABORT     LNTE
)@@G@@A       A0,A0.         GET ABSOLUTE VALUE OF &ABEND.   JC30             TF
)@@G@@@I@@@@          ER        SETC$.         PUT INTO CONDITION WORD.       TG
)@@G@@ JC30             @I@@@@          ER        ABORT$.        TAKE ABORT$ ETH
)@@G@@XIT.               JC30             @I@@@@          END.                TI
)@@G@@                                                      @I@@@@. **********TJ
)@@G@@***********************************************ENDEX***JC00             TK
)@@G@@@I@@@@. *********************************************************EXPINT*TL
)@@G@@*JC00             @I@@@@EXPINT**  PROC      1.                 EXPONENTITM
)@@G@@ATE INTEGERS                        @I@@@@          LA        12,EXPINT(TN
)@@G@@1,3).                                                 @I@@@@          LATO
)@@G@@,016    13,1.                                                           TP
)@@G@@@I@@@@          LA        15,EXPINT(1,2).                               TQ
)@@G@@                  @I@@@@          TN        12.                         TR
)@@G@@                                    @I@@@@          JNZ       12,TESTBT TS
)@@G@@                                                      @I@@@@          J TT
)@@G@@        ERR.                                                            TU
)@@G@@@I@@@@SQUARE    MF        15,15.                                        TV
)@@G@@                  @G@@@[          JO        ERR.           TEST FOR OVERTW
)@@G@@FLOW.              JC12 @I@@@@          JNZ       15,ERR.               TX
)@@G@@                                          @I@@@@          DSC       15,3TY
)@@G@@7.                                                          @I@@@@TESTBTTZ
)@@G@@    JNB       12,SHIFT                                                  UA
)@@G@@      @I@@@@          MF        13,15.                                  UB
)@@G@@                        @G@@@[          JO        ERR.           TEST FOUC
)@@G@@R OVERFLOW.              JC12 @I@@@@          JNZ       13,ERR.         UD
)@@G@@                                                @I@@@@          DSC     UE
)@@G@@  13,37.                                                          @I@@@@UF
)@@G@@SHIFT     SSL       12,1.                                               UG
)@@G@@            @I@@@@          JNZ       12,SQUARE.                        UH
)@@G@@                              @I@@@@          LA        14,EXPINT(1,2)+1UI
)@@G@@.                                               @I@@@@          DS      UJ
)@@G@@  13,EXPINT(1,1).                                                 @I@@@@UK
)@@G@@  DO 1-EXPINT(1,*5) , J EXPINT(1,5)                                     UL
)@@G@@            @I@@@@ERR       LOCC      EXPINT(1,4),$. DEFINE FAILURE EXITUM
)@@G@@.            JC30             @I@@@@          END.                      UN
)@@G@@                                                @I@@@@. ****************UO
)@@G@@*****************************************EXPINT**JC00             @I@@@@UP
)@@G@@. *********************************************************EXREAL**JC30 UQ
)@@G@@            @I@@@@. EXREAL  D1,D2,D3,FAIL,SUCC.      'EXPONENTIATE REAL UR
)@@G@@NUMBERS'     JC30             @I@@@@.                                   US
)@@G@@                               JC30             @I@@@@. A(D1) := A(D2) *UT
)@@G@@* A(D3), WHERE A(D2) AND A(D3) ARE REAL NUMBERS. JC30             @I@@@@UU
)@@G@@. FV(D1) := 0, REAL TYPE CODE.                                     JC30 UV
)@@G@@            @I@@@@.                                                     UW
)@@G@@             JC30             @I@@@@EXREAL**  PROC      1.              UX
)@@G@@                               JC30             @I@]@@          LON.    UY
)@@G@@                                                 JC30             @I[@@@UZ
)@@G@@          J         INTR10.        NOT YET!                        JC30 VA
)@@G@@            @I@]@@          LOFF.                                       VB
)@@G@@             JC30             @I[@@@          END.      EXREAL.         VC
)@@G@@                               JC30             @I@@@@. ****************VD
)@@G@@*****************************************EXREAL**JC30             @G@@@[VE
)@@G@@. *********************************************************FLOC****JC12*VF
)@@G@@@G@@@[. FLOC  L.                         'DEFINE FAILURE LOCATION'      VG
)@@G@@ JC12 @G@@@[.                                                           VH
)@@G@@       JC12 @G@@@[. THIS LOADS THE 'FAILURE ADDRESS' REGISTER, X10, WITHVI
)@@G@@ THE         JC12 @G@@@[. LOCATION L.  NOTE THAT X10 IS USED THROUGHOUT VJ
)@@G@@SNOBOL4 TO         JC12 @G@@@[. HOLD THE FAILURE ADDRESS FOR OPERATIONS.VK
)@@G@@                         JC12 @G@@@[.                                   VL
)@@G@@                               JC12 @G@@@[FLOC*     PROC      1.        VM
)@@G@@                                     JC12 @G@@@[          LX,U      X10,VN
)@@G@@FLOC(1,1).                                 JC12 @G@@@[          END.    VO
)@@G@@                                                 JC12 @G@@@[. **********VP
)@@G@@***********************************************FLOC****JC12*@I@@@@. ****VQ
)@@G@@*****************************************************FORMAT**JC00       VR
)@@G@@      @I@@@@FORMAT**  PROC      0,0.                ASSEMBLE FORMAT STRIVS
)@@G@@NG                      @I@@@@          END.                            VT
)@@G@@                                          @I@@@@. **********************VU
)@@G@@***********************************FORMAT**JC00             @I@@@@. ****VV
)@@G@@*****************************************************FSHRTN**JC00       VW
)@@G@@      @I@@@@FSHRTN**  PROC      1.                 FORESHORTEN SPECIFIERVX
)@@G@@                        @I@@@@SPEC      EQU       FSHRTN(1,1).          VY
)@@G@@                                          @I@@@@N         EQU       FSHRVZ
)@@G@@TN(1,2).                                                    @I@@@@WD    WA
)@@G@@    EQU       N/6.                                                      WB
)@@G@@      @I@@@@CH        EQU       N-WD*6.                                 WC
)@@G@@                        @I@@@@Z         EQU       CH=0.                 WD
)@@G@@                                          @I@[@@          LA        A0,SWE
)@@G@@PEC+3.                                                      @I@[@@      WF
)@@G@@    ANA,U     A0,N.                                                     WG
)@@G@@      @I@[@@          SA        A0,SPEC+3.                              WH
)@@G@@                        @G@@@[          LA,H2     A0,SPEC+3.     GET LENWI
)@@G@@GTH.                     JC17 @G@@@[          ANA,U     A0,N.          SWJ
)@@G@@HORTEN IT.                     JC17 @G@@@[          SA,H2     A0,SPEC+3.WK
)@@G@@     PUT IT BACK.                    JC17 @I@@@@          LA        A0,SWL
)@@G@@PEC+2.                                                      @I@@@@  DO ZWM
)@@G@@ ,  AA,U      A0,WD.                                                    WN
)@@G@@      @I@@@@  DO 1-Z , AA       A0,(CH,WD).                             WO
)@@G@@                        @I@@@@  DO 1-Z , TG       A0,(6,0).             WP
)@@G@@                                          @I@@@@  DO 1-Z , AH       A0,(WQ
)@@G@@-6,1).                                                      @I@@@@      WR
)@@G@@    SA        A0,SPEC+2.                                                WS
)@@G@@      @I@@@@          END.                                              WT
)@@G@@                        @I@@@@. ****************************************WU
)@@G@@*****************FSHRTN**JC00             @I@@@@. **********************WV
)@@G@@***********************************GETAC***JC03             @I@@@@.     WW
)@@G@@                                                             JC03       WX
)@@G@@      @I@@@@. GETAC  D1,D2,N.             'GET ADDRESS WITH OFFSET CONSTWY
)@@G@@ANT'   JC03             @I@@@@.                                         WZ
)@@G@@                         JC03             @I@@@@. MOVES THE A-FIELD AT AXA
)@@G@@(D2)+N TO D1.                              JC03             @I@@@@. N MUXB
)@@G@@ST BE < 65536.                                               JC03       XC
)@@G@@      @I@@@@. A0,A1 USED.                                               XD
)@@G@@       JC03             @I@@@@.                                         XE
)@@G@@                         JC03             @I@@@@GETAC**   PROC      1.  XF
)@@G@@                                           JC06             @I@]@@      XG
)@@G@@    LON.                                                     JC06       XH
)@@G@@      @I[@@@N         EQU       GETAC(1,3).                             XI
)@@G@@       JC06             @I@@@@.                                         XJ
)@@G@@                         JC06             @I@@@@          LA        A0,GXK
)@@G@@ETAC(1,2). A(D2)                           JC06             @I@@@@ DO N>XL
)@@G@@0 , AA,U      A0,N.          +N, IF POS.                     JC06       XM
)@@G@@      @I@@@@ DO N<0 , ANA,U     A0,0-N.        -N, IF NEG.              XN
)@@G@@       JC06             @I@@@@          LA        A0,0,A0.       A(A(D2)XO
)@@G@@+N).                     JC06             @I@@@@          SA        A0,GXP
)@@G@@ETAC(1,1). TO A(D1).                       JC06             @I@]@@      XQ
)@@G@@    LOFF.                                                    JC06       XR
)@@G@@      @I[@@@          END.      GETAC.                                  XS
)@@G@@       JC06             @I@@@@. ****************************************XT
)@@G@@*****************GETAC***JC03             @I@@@@. **********************XU
)@@G@@***********************************GETBAL**JC00             @I@@@@GETBALXV
)@@G@@**  PROC      1.                  GET PARENTHESIS BALANCED STRING       XW
)@@G@@      @I@@@@SPEC      EQU       GETBAL(1,1).                            XX
)@@G@@                        @I@@@@          LA        A2,SPEC+3.            XY
)@@G@@                                          @I@@@@          AA,H1     A2,SXZ
)@@G@@PEC+2.                                                      @I@@@@      YA
)@@G@@    DSL       A2,36.                                                    YB
)@@G@@      @I@@@@          DI,U      A2,6.                                   YC
)@@G@@                        @I@@@@          AA,H2     A2,SPEC+2.            YD
)@@G@@                                          @I@@@@          AA        A2,SYE
)@@G@@PEC.                                                        @I@@@@      YF
)@@G@@    LXI,U     A2,1.                                                     YG
)@@G@@      @I@@@@          LXI,U     A3,1.                                   YH
)@@G@@                        @I@@@@          LA        A1,SPEC+3.            YI
)@@G@@                                          @I@@@@          EX        CHRLYJ
)@@G@@A4,*A3.                                                     @I@@@@      YK
)@@G@@    TNE,U     A4,')'.                                                   YL
)@@G@@      @I@@@@          J         FAIL.                                   YM
)@@G@@                        @I@@@@          LA        A0,GETBAL(1,2).       YN
)@@G@@                                          @I@@@@          TE,U      A4,'YO
)@@G@@('.                                                         @I@@@@      YP
)@@G@@    JGD       A0,FIN.                                                   YQ
)@@G@@      @I@@@@          SZ        A6.                                     YR
)@@G@@                        @I@@@@          JGD       A0,TEST.              YS
)@@G@@                                          @I@@@@NEXT      EX        CHRLYT
)@@G@@A4,*A3.                                                     @I@@@@      YU
)@@G@@    TNE,U     A4,'('.                                                   YV
)@@G@@      @I@@@@          AA,U      A6,1.                                   YW
)@@G@@                        @I@@@@          TNE,U     A4,')'.               YX
)@@G@@                                          @I@@@@          J         CLOSYY
)@@G@@E.                                                          @I@@@@TEST  YZ
)@@G@@    JGD       A0,NEXT.                                                  ZA
)@@G@@      @I@@@@          J         FAIL.                                   ZB
)@@G@@                        @I@@@@CLOSE     JGD       A6,TEST.              ZC
)@@G@@                                          @I@@@@FIN       ANA       A0,GZD
)@@G@@ETBAL(1,2).                                                 @I@@@@      ZE
)@@G@@    ANA       A1,A0.                                                    ZF
)@@G@@      @I@@@@          SA        A1,SPEC+3.                              ZG
)@@G@@                        @I@@@@  DO 1-GETBAL(1,*4) , J GETBAL(1,4).      ZH
)@@G@@                                          @I@@@@FAIL      LOCC      GETBZI
)@@G@@AL(1,3),$.                                 JC02             @I@@@@      ZJ
)@@G@@    END.                                                                ZK
)@@G@@      @I@@@@. *********************************************************GZL
)@@G@@ETBAL**JC00             @I@@@@. ****************************************ZM
)@@G@@*****************GETD****JC00             @I@@@@.                       ZN
)@@G@@                                           JC00             @I@@@@. GETDZO
)@@G@@  D1,D2,D3.             'GET DESCRIPTOR'                     JC00       ZP
)@@G@@      @I@@@@.                                                           ZQ
)@@G@@       JC00             @I@@@@. MOVES THE DESCRIPTOR AT A(D2)+A(D3) TO DZR
)@@G@@1.                       JC00             @I@@@@. SHOULD WORK FOR ALL ADZS
)@@G@@DRESSES > 64K.                             JC00             @I@@@@. A0-AZT
)@@G@@2 USED.                                                      JC00       ZU
)@@G@@      @I@@@@.                                                           ZV
)@@G@@       JC00             @I@@@@GETD**    PROC      1,4.                GEZW
)@@G@@T DESCRIPTOR                              @I@@@@          LA        12,GZX
)@@G@@ETD(1,2).                                                   @I@@@@      ZY
)@@G@@    AA        12,GETD(1,3).                                             ZZ
)@@G@@      @I@@@@          DL        13,0,12.                                AA
)@@G@@                        @I@@@@          DS        13,GETD(1,1).         AB
)@@G@@                                          @I@@@@          END.          AC
)@@G@@                                                            @I@@@@. ****AD
)@@G@@*****************************************************GETD****JC00       AE
)@@G@@      @I@@@@. *********************************************************GAF
)@@G@@ETDC***JC03             @I@@@@.                                         AG
)@@G@@                         JC03             @I@@@@. GETDC  D1,D2,N.       AH
)@@G@@      'GET DESCRIPTOR WITH OFFSET CONSTANT'JC03             @I@@@@.     AI
)@@G@@                                                             JC03       AJ
)@@G@@      @I@@@@. MOVES THE DESCRIPTOR AT A(D2)+N TO D1.                    AK
)@@G@@       JC03             @I@@@@. N MUST BE < 64K                         AL
)@@G@@                         JC03             @I@@@@. A0-A2 USED.           AM
)@@G@@                                           JC03             @I@@@@.     AN
)@@G@@                                                             JC03       AO
)@@G@@      @I@@@@GETDC**   PROC      1,3.                                    AP
)@@G@@       JC03             @I@@@@          LA        A0,GETDC(1,2).      A(AQ
)@@G@@D2)                      JC03             @I@@@@          DL        A1,GAR
)@@G@@ETDC(1,3),A0.   AFV(N+A(D2))               JC03             @I@@@@      AS
)@@G@@    DS        A1,GETDC(1,1).      TO D1.                     JC03       AT
)@@G@@      @I@@@@          END.                                              AU
)@@G@@       JC03             @I@@@@. ****************************************AV
)@@G@@*****************GETDC***JC03             @I@@@@. **********************AW
)@@G@@***********************************GETLG***JC00             @I@@@@GETLG*AX
)@@G@@*   PROC      1,3.               GET LENGTH OF SPECIFIER                AY
)@@G@@      @I@@@@          LA        A0,GETLG(1,2)+3.                        AZ
)@@G@@                        @I@@@@          SA        A0,GETLG(1,1).        BA
)@@G@@                                          @I@@@@          SZ        GETLBB
)@@G@@G(1,1)+1.                                                   @I@@@@      BC
)@@G@@    END.                                                                BD
)@@G@@      @I@@@@. *********************************************************GBE
)@@G@@ETLG***JC00             @I@@@@. ****************************************BF
)@@G@@*****************GETLTH**JC00             @I@@@@GETLTH**  PROC      1,8.BG
)@@G@@               GET LENGTH FOR STRING STRUCTURE              @I@@@@      BH
)@@G@@   LA    A0,GETLTH(1,2).                                                BI
)@@G@@      @I@@@@          ANA,U     A0,1.                                   BJ
)@@G@@                        @I@@@@          DSA       A0,36.                BK
)@@G@@                                          @I@@@@          DI,U      A0,1BL
)@@G@@2.                                                          @I@@@@      BM
)@@G@@    LSSC      A0,1.                                                     BN
)@@G@@      @I@@@@         AA,U   A0,8.                                       BO
)@@G@@                        @I@@@@          SA        A0,GETLTH(1,1).       BP
)@@G@@                                          @I@@@@          SZ        GETLBQ
)@@G@@TH(1,1)+1.                                                  @I@@@@      BR
)@@G@@    END.                                                                BS
)@@G@@      @I@@@@. *********************************************************GBT
)@@G@@ETLTH**JC00             @I@@@@. ****************************************BU
)@@G@@*****************GETSIZ**JC00             @I@@@@. GETSIZ  D1,D2.    'GETBV
)@@G@@ SIZE'                                     JC00             @I@@@@.     BW
)@@G@@                                                             JC00       BX
)@@G@@      @I@@@@. MOVES V(A(D2)) TO A(D1).  FV(D1) SET TO 0.                BY
)@@G@@       JC00             @I@@@@. CAN HANDLE A(D1) > 64K.                 BZ
)@@G@@                         JC00             @I@@@@. USES A0.              CA
)@@G@@                                           JC00             @I@@@@.     CB
)@@G@@                                                                        CC
)@@G@@      @I@@@@GETSIZ**  PROC      1,4.               GET SIZE             CD
)@@G@@                        @I@@@@          LA        A0,GETSIZ(1,2).       CE
)@@G@@                                          @I@@@@          LA,H2     A0,1CF
)@@G@@,A0.                                                        @I@@@@      CG
)@@G@@    SA        A0,GETSIZ(1,1).                                           CH
)@@G@@      @I@@@@          SZ        GETSIZ(1,1)+1.                          CI
)@@G@@                        @I@@@@          END.                            CJ
)@@G@@                                          @I@@@@. **********************CK
)@@G@@***********************************GETSIZ**JC00             @I@@@@. ****CL
)@@G@@*****************************************************GETSPC**JC00       CM
)@@G@@      @I@@@@. GETSPC  SP,DE,N.            'GET SPECIFIER WITH CONSTANT OCN
)@@G@@FFSET' JC00             @I@@@@.                                         CO
)@@G@@                         JC00             @I@@@@. MOVES THE SPECIFIER ATCP
)@@G@@ A(DE)+N TO SP.                            JC00             @I@@@@. N MUCQ
)@@G@@ST BE < 65534.                                               JC00       CR
)@@G@@      @I@@@@. A0-A2 USED.                                               CS
)@@G@@       JC00             @I@@@@.                                         CT
)@@G@@                         JC00             @I@@@@GETSPC**  PROC      1,5.CU
)@@G@@                GET SPECIFIER WITH CONSTANT OFFSET          @I@@@@      CV
)@@G@@    LA        12,GETSPC(1,2).                                           CW
)@@G@@      @I@@@@          DL        A1,0+GETSPC(1,3),A0.                    CX
)@@G@@                        @I@@@@          DS        13,GETSPC(1,1).       CY
)@@G@@                                          @I@@@@          DL        A1,2CZ
)@@G@@+GETSPC(1,3),A0.                                            @I@@@@      DA
)@@G@@    DS        13,GETSPC(1,1)+2.                                         DB
)@@G@@      @I@@@@          END.                                              DC
)@@G@@                        @I@@@@. ****************************************DD
)@@G@@*****************GETSPC**JC00             @I@@@@. **********************DE
)@@G@@***********************************INCRA***JC00             @I@@@@INCRA*DF
)@@G@@*   PROC      1,3.               INCREMENT ADDRESS FIELD                DG
)@@G@@      @I@@@@          LA        12,INCRA(1,1).                          DH
)@@G@@                        @I@@@@          AA,016    12,INCRA(1,2).        DI
)@@G@@                                          @I@@@@          SA        12,IDJ
)@@G@@NCRA(1,1).                                                  @I@@@@      DK
)@@G@@    END.                                                                DL
)@@G@@      @I@@@@. *********************************************************IDM
)@@G@@NCRA***JC00             @I@@@@. ****************************************DN
)@@G@@*****************INCRV***JC00             @I@@@@INCRV**   PROC      1,3.DO
)@@G@@               INCREMENT VALUE FIELD                        @I@@@@      DP
)@@G@@    LA,H2     A0,INCRV(1,1)+1.                                          DQ
)@@G@@      @I@@@@          AA,U      A0,INCRV(1,2).                          DR
)@@G@@                        @I@@@@          SA,H2     A0,INCRV(1,1)+1.      DS
)@@G@@                                          @I@@@@          END.          DT
)@@G@@                                                            @I@@@@. ****DU
)@@G@@*****************************************************INCRV***JC00       DV
)@@G@@      @I@@@@. *********************************************************IDW
)@@G@@NIT****JC00             @I@@@@INIT**    PROC      0.                 INIDX
)@@G@@TIALIZE RUN                               @I@]@@          LON.          DY
)@@G@@                                           JC03             @I[@@@$(1),SDZ
)@@G@@TART$*.                          LOCATION TO BEGIN EXECUTION            EA
)@@G@@      @I@@@@          LA        A0,(02400,INTR$).                       EB
)@@G@@                        @I@@@@          ER        IALL$.                EC
)@@G@@                                          @I@[@@          LA,U      A0,LED
)@@G@@ASTD$.     LAST ADDRESS GENERATED BY SNOBOLJC30             @I@[@@      EE
)@@G@@    AA,U      A0,1.          FREE STORAGE STARTS AT NEXT WORDJC30       EF
)@@G@@      @I@[@@          SA        A0,FRSGPT.                              EG
)@@G@@                        @I@[@@          SA        A0,HDSGPT.            EH
)@@G@@                                          @I@[@@          AA        A0,(EI
)@@G@@+SIZFST).  ADD SIZE OF FREE STORAGE,       JC03             @I@[@@      EJ
)@@G@@    AA        A0,(+SIZFST).  TWICE, SINCE SIZFST IS DESCRS.  JC03       EK
)@@G@@      @I@[@@          ER        MCORE$.        GET THE NEW MEMORY NEEDEDEL
)@@G@@.      JC03             @I@[@@          SA        A0,TLSGP1.            EM
)@@G@@                                          @G@@@[          LA,U      A0,FEN
)@@G@@ST.        START OF FREE STORAGE AREA.     JC15 @G@@@[          SA      EO
)@@G@@  A0,HDSGPT.     POINTER TO HEAD OF FREE STORAGE JC15 @G@@@[          SAEP
)@@G@@        A0,FRSGPT.     CURRENT FREE LOCATION           JC15 @G@@@[      EQ
)@@G@@    LA,U      A0,LASTD$.     LAST ADDRESS IN PROGRAM         JC15 @G@@@[ER
)@@G@@          AA,U      A0,1.          +1, FOR SNOBOL'S NEEDS          JC15 ES
)@@G@@@G@@@[          SA        A0,TLSGP1.     TOP OF FREE STORAGE + 1.       ET
)@@G@@ JC15 @I@]@@          LOFF.                                             EU
)@@G@@       JC03             *[S@@@*SDFF*@A@E@DLET PKT:=H2$(@(ENT$CAD('AVL$DAEV
)@@G@@TA')))@B@@@ELET PKT:=H2$(@TI$(EPT$CAD('AVL$DATA')))   @A@@@DDIS 'AVL PACEW
)@@G@@KET AT ',EOCT$(6,PKT)   @[@@@DROOT  @]@@@DMACRO ROOT  @^@@@DLET ROOT:=H2EX
)@@G@@$(@PKT)     @ @E@DDIS 'ROOT IS AT 'EOCT$(6,ROOT)@A@@@EDIS 'ROOT IS AT ',EY
)@@G@@EOCT$(6,ROOT)     @]@@@DMACRO NODE  @#@@@DLET LL:=H1$(@ROOT)@#@@@DLET RLEZ
)@@G@@:=H2$(@ROOT)@^@@@DLET UL:=H1$(@(ROOT+1))  @^@@@DLET KS:=S4$(@(ROOT+1))  FA
)@@G@@@^@@@DLET BF:=S5$(@(ROOT+1))  @^@@@DLET RK:=H1$(@(ROOT+2))  @ @@@DLET KEFB
)@@G@@Y:=TASC$(KS@(ROOT+3))   @]@@@DMACRO DUMP  @]@@@DLOCAL S     @G@@@DLET S:FC
)@@G@@='NODE: ',EOCT$(6,ROOT),' LL: ',EOCT$(6,LL),' RL: ',EOCT$(6,RL)   @F@@@DFD
)@@G@@LET S:=S,' UL: ',EOCT$(6,UL),' KS: ',KS,' BF: ',BF,' RK: ',RK     @[@@@DFE
)@@G@@DIS S @^@@@DDIS 'KEY: ''',KEY,''''  @]@G@DMACRO TRA   @#@@@GMACRO TRAVERFF
)@@G@@SE    @E@@@DLOCAL ACTION,NEXTST,NULLST,GNSTATE,LSSTATE,RSSTATE,NSTATE   FG
)@@G@@@ @E@DLOCAL ACT1,ACT2,ACT3,ACT4     @#@E@DLET ACT1:='ROOT'  @#@E@DLET ACFH
)@@G@@T2:='LL'    @#@E@DLET ACT3:='RL'    @#@E@DLET ACT4:='UL'    @^@E@DLET ACFI
)@@G@@TION:=2 1 3 4     @^@H@ELET ACTION:=2,1,3,4     @#@@@HLET ACTION:=[1,*] FJ
)@@G@@@^@E@DLET NEXTST:=1 3 1 0     @^@H@ELET NEXTST:=1,3,1,0     @^@E@DLET NUFK
)@@G@@LLST:=2 0 4 0     @^@H@ELET NULLST:=2,0,4,0     @#@@@HLET NULLST:=[2,*] FL
)@@G@@@#@@@HLET NEXTST:=[3,*] @^@E@DLET GNSTATE:=1 0 1 1    @^@H@ELET GNSTATE:FM
)@@G@@=1,0,1,1    @#@@@HLET GNSTATE:=[4,*]@^@E@DLET LSSTATE:=0 0 0 2    @^@H@EFN
)@@G@@LET LSSTATE:=0,0,0,2    @^@@@HLET LSSTATE:=0,0,0,[5,1]@^@E@DLET RSSTATE:FO
)@@G@@=0 0 0 4    @^@H@ELET RSSTATE:=0,0,0,4    @^@@@HLET RSSTATE:=0,0,0,[6,1]FP
)@@G@@@]@@@DLET STATE:=1@^@@@DLET ROOT:=H2$(@PKT)     @[@@@DREPEAT@#@@@DUNTIL FQ
)@@G@@STATE=0     @]@@@D   NODE     @#@@@D   LET LAST:=ROOT @A@E@D   LET ROOT:FR
)@@G@@=[*'ACT',ACTION(STATE)] @^@@@E   IF ACTION(STATE)=2   @#@@@E      LET ROFS
)@@G@@OT:=LL@]@@@E   ELSE     @^@@@E      IF ACTION(STATE)=3@^@@@E         LETFT
)@@G@@ ROOT:=RL   @]@@@E      ELSE  @ @@@E         IF ACTION(STATE)=4   @^@@@EFU
)@@G@@            LET ROOT:=UL@#@@@E         ENDIF    @]@@@E      ENDIF @]@@@EFV
)@@G@@   ENDIF    @]@@@D   IF ROOT=0@^@@@E      LET ROOT:=LAST    @A@@@D      FW
)@@G@@LET NSTATE:=NULLST(STATE)     @]@@@D   ELSE     @A@@@D      LET NSTATE:=FX
)@@G@@NEXTST(STATE)     @#@@@D      IF NSTATE=0 @ @@@D         IF LAST=H1$(@ROFY
)@@G@@OT)   @B@@@D            LET NSTATE:=LSSTATE(STATE)    @#@@@D         ELSFZ
)@@G@@E     @B@@@D            LET NSTATE:=RSSTATE(STATE)    @#@@@D         ENDGA
)@@G@@IF    @]@@@D      ELSE  @ @@@D         IF GNSTATE(STATE)=0  @#@@@D      GB
)@@G@@      NODE  @#@@@D            DUMP  @#@@@D         ENDIF    @]@@@D      GC
)@@G@@ENDIF @]@@@D   ENDIF    @^@@@D   LET STATE:=NSTATE    @[@@@DENDREP@]@@@FGD
)@@G@@MACRO LL    @]@@@FIF LL<>0    @#@@@F   LET ROOT:=LL   @]@@@F   NODE     GE
)@@G@@@]@@@F   DUMP     @[@@@FENDIF @]@@@FMACRO RL    @]@@@FIF RL<>0    @#@@@FGF
)@@G@@   LET ROOT:=RL   @]@@@F   NODE     @]@@@F   DUMP     @[@@@FENDIF @]@@@FGG
)@@G@@MACRO UL    @]@@@FIF UL<>0    @#@@@F   LET ROOT:=UL   @]@@@F   NODE     GH
)@@G@@@]@@@F   DUMP     @[@@@FENDIF @#@@@HMACRO PREORDER    @C@@@HTRAVERSE 1,2GI
)@@G@@,3,4 0,3,4,0 2,1,1,0 0,1,1,1 3 4    @#@@@HMACRO INORDER     @C@@@HTRAVERGJ
)@@G@@SE 2,1,3,4 2,0,4,0 1,3,1,0 1,0,1,1 2 4    @#@@@HMACRO POSTORDER   @C@@@HGK
)@@G@@TRAVERSE 2,3,1,4 2,3,0,0 1,1,4,0 1,1,0,1 2 3    @#@@@HMACRO REVPREORDER GL
)@@G@@@C@@@HTRAVERSE 1,3,2,4 0,3,4,0 2,1,1,0 0,1,1,1 4 3    @#@@@HMACRO REVINOGM
)@@G@@RDER  @C@@@HTRAVERSE 3,1,2,4 2,0,4,0 1,3,1,0 1,0,1,1 4 2    @#@@@HMACRO GN
)@@G@@REVPOSTORDER@C@@@HTRAVERSE 3,2,1,4 2,3,0,0 1,1,4,0 1,1,0,1 3 2    @]@@@HGO
)@@G@@MACRO TR    ___@@@R\)^?2:8)@@@R;)@@^A3)^?3/K@^-URF@^H'+8@_@_:8K*@P/K@^).GP
)@@G@@*[S@@@*SDFF*@#@@@<          $EJECT  @ @=@<          INCLUDE   'AXR$'    GQ
)@@G@@@ @=@<          INCLUDE   'JPROC$'  @ @=@<          INCLUDE   'AVL$DEF' GR
)@@G@@@#@@@=          LIBRARY @ @@@=          INCLUDE   'AVL$DEF' @#@@@=      GS
)@@G@@    ASCII   @[@@@=.     @B@@@=. AVL TREE MAINTENAINCE SUBROUTINE PACKAGEGT
)@@G@@@[@@@=.     @G@@@=. DESIGNED AND IMPLEMENTED BY  ALAN K. STEBBENS, UOMCSGU
)@@G@@C SYSTEMS STAFF.  @[@@@=.     @#@@@<          IBANK   @A@=@<TRACE     EQGV
)@@G@@U       TRACE=3->2!TRACE@[@@@<.     @C@@@<. AVLDISPLAY -- ROUTINE TO DISGW
)@@G@@PLAY AVL TREES    @[@@@<.     @C@=@<. LA    A0,(INDENT*/12+BRCOLN*/6+LINGX
)@@G@@ES,ROOTNODE)@C@=@<. LA    A1,(EDIT NODE RTNE,OUTPUT IMAGE RTNE)   @#@@@=GY
)@@G@@. LA,U  A0,PKT    @^@@@<. LMJ   X11,AVLDISPLAY  @[@@@<.     @[@@@=.     GZ
)@@G@@@G@@@=.          -------------------------------------------------------HA
)@@G@@------@G@@@=.     PKT: : INDENT  : BRCOLN  :  LINES  :        ROOTNODE AHB
)@@G@@DDR        :@G@@@=.          -------------------------------------------HC
)@@G@@------------------@G@@@=.          :        EDITNODE RTNE        :      HD
)@@G@@   OUTPUT RTNE         :@G@@@=.          -------------------------------HE
)@@G@@------------------------------@[@@@=.     @C@@@<. USES: X11,A0-A5.    SAHF
)@@G@@VES & RESTORES X1-X3.   @[@@@<.     @G@@@<. INDENT = # OF COLUMNS USED THG
)@@G@@O SEPARATE THE BEGINNING OF THE ROOT NODE @B@@@<. AND THE BEGINNING OF THH
)@@G@@HE SIBLING NODES. @[@@@<.     @G@@@<. BRCOLN = # OF THE COLUMN FROM THE HI
)@@G@@BEGINNING OF A NODE IN WHICH THE    @ @@@<. BRANCHES TO ITS SONS BEGIN. HJ
)@@G@@@[@@@<.     @E@@@<. LINES = # OF LINES USED TO SEPARATE NODES VERTICALLYHK
)@@G@@.     @[@@@<.     @H@@@<. NODE EDIT RTNE = ADDRESS OF A X11 SUBROUTINE WHL
)@@G@@HICH IS GIVEN CONTROL WITH    @G@@@<. THE NODE ADDRESS IN A0 TO EDIT IN HM
)@@G@@THE DESIRED INFORMATION (USING EDIT$@H@@@<. ROUTINES) FROM THE NOOE. WHEHN
)@@G@@N GIVEN CONTROL, THE EDIT$ COLUMN POINTER WILL  @G@@@<. BE POSITIONED ATHO
)@@G@@ THE FIRST COLUMN TO BE FILLED FROM THE NODE. THE     @H@@@<. SUBROUTINEHP
)@@G@@ MUST RETURN TO 0,X11 AND REFRAIN FROM CHANING X1-X3 EXCEPT UNDER @C@@@<HQ
)@@G@@. THE SUPERVISION OF THE EDIT$ SUBROUTINES.     @[@@@<.     @G@@@<. OUTPHR
)@@G@@UT IMAGE RTNE = ADDRESS OF A X11 SUBROUTINE WHICH IS GIVEN CONTROL@H@@@<HS
)@@G@@. WITH AN APRINT$ CONTROL WORD IN A0 TO OUTPUT THE IMAGE AS DESIRED BY THT
)@@G@@HE    @G@@@<. USER. THIS ENABLES THE USER TO DISPLAY THE TREE TO WHATEVEHU
)@@G@@R DEVICE IS @]@@@<. DESIRED.  @[@@@<.     @H@@@<.   THE EDIT$ ROUTINES WHV
)@@G@@ILL BE IN ASCII EDITING MODE WHEN THE NODE EDITING    @H@=@<. ROUTINE ISHW
)@@G@@ GIVEN CONTROL. IF FIELDATA SOURCE IS TO EDITED THE EDIT$ PACKET  @I@@@=HX
)@@G@@. ROUTINE IS GIVEN CONTROL. IF FIELDATA SOURCE IS TO BE EDITED THE EDIT$HY
)@@G@@ PACKET     @H@@@<. IS POINTET TO BY X1; ADJUST THE PACKET AS NECESSARY HZ
)@@G@@(SEE EDIT$ DOCUMEN-     @H@@@<. TATION). UPON RETURN FROM THE EDIT SUBROIA
)@@G@@UTINE, THE EDIT$ ROUTINES SHOULD    @D@@@<. BE IN THE ASCII EDIT MODE ASIB
)@@G@@ THEY WERE UPON ENTRY.  @[@@@<.     @]@=@<AVLDISPLAY* @]@@@=AVLDSP*     IC
)@@G@@@ @=@<          ENTER     *'DISPLAY'@F@@@=          DL        A0,,A0    ID
)@@G@@        . GET PARAMETERS FROM PACKET@E@=@<          SA        A0,PARAMS IE
)@@G@@        . SAVE PARAMETERS     @E@@@=          DS        A0,PARAMS       IF
)@@G@@  . SAVE PARAMETERS     @F@=@<          SA        A1,RTNES          . SAIG
)@@G@@VE ROUTINES ADDRESSES   @D@@@<          SX        X11,DILINK        . SAIH
)@@G@@VE LINK     @F@@@<          SZ        BRBITS            . INITIALIZE BRAII
)@@G@@NCH BITS    @F@@@=          SZ        SEEFLG            . HAVEN'T SEEN RIJ
)@@G@@OOT NODE YET@G@@@<          LA        A2,INDENT         . COMPUTE # OF DIK
)@@G@@ASHES TO LEAD     @F@@@<          AN        A2,BRCOLN         . = INDENTIL
)@@G@@ - BRANCH COLUMN  @B@@@<          AN,U      A2,1              . -1@E@@@=IM
)@@G@@          JP        A2,$+2            . SKIP IF NUMBER > 0  @F@@@=      IN
)@@G@@    LA,U      A2,0              . ELSE INSURE THAT IT'S ZERO@F@@@<      IO
)@@G@@    SA        A2,NDASHES        . = # OF LEADING DASHES     @D@=@<      IP
)@@G@@    E$DIT     EDPKT             . OPEN EDITMODE @D@@@=          LA,U    IQ
)@@G@@  A0,EDPKT          . OPEN EDITMODE @E@@@=          E$DIT               IR
)@@G@@        . SAVE REGS X1-X3     @E@@@=          LA        A0,TREEHD       IS
)@@G@@  . GET NODE ADDRESS    @F@=@<          LXI,U     A0,040100         . INIT
)@@G@@IT FOR REVERSE INORDER  @F@@@=          LXI,U     A0,040100         . INIU
)@@G@@IT FOR REVERSE INORDER  @D@@@<          J         $+2               . ANIV
)@@G@@D AWAY WE GO@[@@@<DINXTN@E@@@<          LA        A0,TRAPARM        . GEIW
)@@G@@T PREVIOUS A0     @F@=@<          LMJ       X11,AVLTRAVERSE   . GET NEXTIX
)@@G@@ NODE IN SEQUENCE @F@@@=          LMJ       X11,AVLTRA        . GET NEXTIY
)@@G@@ NODE IN SEQUENCE @D@@@<          J         ALLDONE           . NO MORE IZ
)@@G@@NODES @E@@@<          SA        A0,TRAPARM        . SAVE NEW A0 VALUE   JA
)@@G@@@C@@@<. WE GOTTA NODE; BUILD IN ANY BRANCHES BEFORE IT@ @@@&          LAJB
)@@G@@,U      A0,,A0    @F@@@=          JNE       A0,TREEHD DINOTR  . SKIP IF JC
)@@G@@NOT ROOT NODE     @H@@@=          JNEZ      SEEFLG DICYCL     . IF WE'VEJD
)@@G@@ VISITED HERE, IT'S CYCLIC    @D@@@=          LA,U      A1,1            JE
)@@G@@  . GET A BIT     @D@@@=          SA        A1,SEEFLG         . SET THISJF
)@@G@@ FLAG @E@=@<          JEZ       ULINK,A0 DIBLNK   . SKIP IF ROOTNODE    JG
)@@G@@@[@@@=DINOTR@G@@@=. IF CURRENT NODE IS A RIGHT SON -- TURN ON BRANCH BITJH
)@@G@@ AT LEVEL - 1     @E@@@=          LA        A3,NOADDR         . GET NODEJI
)@@G@@ ADDRESS    @E@@@=          LA        A2,ULINK,A3       . GET FATHER LINJJ
)@@G@@K     @F@@@=          JZ        A2,DIHRSC         . IF NOT RIGHT SON--SKJK
)@@G@@IP    @F@@@=          TNE       A3,RLINK,A2       . IS THIS THE RIGHT SOJL
)@@G@@N?    @H@@@=          LMJ       X11,BITON1        . YES, SET BRANCH BIT JM
)@@G@@AT HIGHER LEVEL   @G@@@=. IF CURRENT NODE HAS A RIGHT SON -- TURN OFF BRJN
)@@G@@ANCH AT CURRENT LEVEL   @[@@@=DIHRSC@H@@@=          TZ        RLINK,A3  JO
)@@G@@        . IF NO RIGHT LINK -- LEAVE BITS ALONE  @F@@@=          LMJ     JP
)@@G@@  X11,BITOFF        . CLEAR BIT AT CURRENT LEVEL@#@@@=. NOW BUILD A LINEJQ
)@@G@@@E@@@=          JEZ       ULINK,A3 DIROOT   . SKIP IF ROOTNODE    @E@@@<JR
)@@G@@          LMJ       X11,BRBLD         . EDIT IN BRANCHES    @D@@@<. NOW,JS
)@@G@@ SEE IF WE SHOULD PUT IN DASHES BEFORE THE NODE @F@=@<          LA      JT
)@@G@@  A0,DEPTH          . GET THIS NODE'S DEPTH     @F@@@=          LA      JU
)@@G@@  A0,LEVEL          . GET THIS NODE'S DEPTH     @E@@@<          MSI     JV
)@@G@@  A0,INDENT         . GET INDENTION LEVEL @E@=@<          TZ        NDASJW
)@@G@@HES           . IF # OF DASHES = 0  @G@=@<          TP        NDASHES   JX
)@@G@@        . OR # OF DASHES < 0 -- SKIP OUT  @G@@@=          TNZ       NDASJY
)@@G@@HES           . IF # OF DASHES = 0 --  SKIP OUT @D@@@<          J       JZ
)@@G@@  DINODA            . GOT NO DASHES @F@@@<          AN        A0,INDENT KA
)@@G@@        . GET BACK TO PREVIOUS LEVEL@F@@@<          AA        A0,BRCOLN KB
)@@G@@        . MOVE UP TO BRANCH COLUMN  @E@=@<          AN,U      A0,1      KC
)@@G@@        . ORIGIN ONE IS OFF   @E@@@=          AN,U      A0,1            KD
)@@G@@  . ORIGIN ONE IS OFF   @D@@@<          E$SKIP                      . GEKE
)@@G@@T TO THERE  @C@=@<          E$CHAR    ' '               . BLANK IT@C@@@=KF
)@@G@@          E$CHAR    ' '               . BLANK IT@E@=@<          E$PAD NDKG
)@@G@@ASHES '-'           . PUT THE DASHES IN   @E@@@=          LA        A0,NKH
)@@G@@DASHES        . PUT THE DASHES IN   @D@@@=          LA,U      A1,'-'    KI
)@@G@@        . THESE GUYS    @C@@@=          E$PAD                       . NOKJ
)@@G@@W     @[@@@<DIBLNK@E@@@<          E$CHAR    ' '               . DROP A BKK
)@@G@@LANK IN     @B@@@<. NOW LET THE USER INSERT HIS OWN NODE    @[@@@=DIROOTKL
)@@G@@@F@@@<          E$COLN                      . REMEMBER WHERE WE ARE NOW KM
)@@G@@@H@@@<          SA        A0,COLN           . SO WE CAN SEE HOW MUCH ROOKN
)@@G@@M HE TAKES  @E@@@<          LA        A0,NOADDR         . GET THE NODE AKO
)@@G@@DDRESS@F@@@<          LX        X11,NODEIT        . GET EDIT ROUTINE ADDKP
)@@G@@R     @D@@@<          LMJ       X11,,X11          . INSERT IT     @D@@@<KQ
)@@G@@          E$CHAR    ' '               . BLANK TRAILER @E@@@=          LAKR
)@@G@@        A0,NOADDR         . GET THE NODE ADDRESS@H@@@=          JEZ     KS
)@@G@@  LINKS,A0 DINOTD   . ONLY LEAVE TRAILERS IF HE HAS A SON   @E@@@<      KT
)@@G@@    E$COLN                      . GET CURRENT POSITION@G@@@<          ANKU
)@@G@@U       A0,COLN           . GET # OF POSITIONS USED BY NODE @E@@@<      KV
)@@G@@    LA        A0,BRCOLN         . GET BRANCH COLUMN   @F@@@<          ANKW
)@@G@@,U      A0,1,A1           . COMPUTE DIFFERENCE - 1    @F@@@<          JZKX
)@@G@@        A0,DINOTD         . IF <=0 NO TRAILING DASHES @B@@@<          JNKY
)@@G@@        A0,DINOTD         .   @E@@@<          LA,U      A1,'-'          KZ
)@@G@@  . THIS IS THE GUY     @D@@@<          E$PAD                       . INLA
)@@G@@SERT THEM   @F@@@<. THE CURRENT IMAGE IS BUILT, NOW GIVE IT TO THE USER LB
)@@G@@TO PRINT    @[@@@<DINOTD@E@=@<          E$WRDN                      . COLC
)@@G@@MPUTE # OF WORDS  @F@=@<          AH        A0,(EDBUF,0100)   . BUILD APLD
)@@G@@RINT$ CONTROL WORD@C@=@<          SSC       A0,18             . FIX IT  LE
)@@G@@@F@@@=          LA        A0,(0141,EDBUF)   . GET APRINT$ CONTROL WORD  LF
)@@G@@@F@@@<          SA        A0,IMAGCW         . SAVE IMAGE CONTROL WORD   LG
)@@G@@@G@@@<          E$DITX                      . CLOSE EDITING STO FIX UP XLH
)@@G@@1-X3  @G@@@<          LA        A0,IMAGCW         . GET BACK IMAGE CONTRLI
)@@G@@OL WORD     @F@@@<          LX        X11,OUTRTN        . GET ADDR OF OULJ
)@@G@@TPUT ROUTINE@C@@@<          LMJ       X11,,X11          . CALL IT @D@=@<LK
)@@G@@          E$DIT     EDPKT             . REOPEN EDITING@D@@@=          LALL
)@@G@@,U      A0,EDPKT          . REOPEN EDITING@B@@@=          E$DIT         LM
)@@G@@              .   @F@=@<. WE HAVE TO ADJUST THE BRANCH BITMAP NOW TO REFLN
)@@G@@LECT ON THE TYPE  @G@=@<. OF A NODE THAT WE JUST VISITED: RIGHT NODES TULO
)@@G@@RN ON A VERTICAL BRANCH;@G@=@<. LEFT NODES TURN OFF A VERTICAL BRANCH; LLP
)@@G@@ACK OF LEFT SONS TURNS OF A   @ @=@<. BRANCH ONE LEVEL HIGHER.    @F@@@=LQ
)@@G@@. NOW ADJUST THE BITMAP FOR SUCCESSIVE BRANCHES (AFTER THE NODE)  @H@@@=LR
)@@G@@. IE: IF THE CURRENT NODE IS A LEFT SON -- TURN OFF BRANCH BIT AT LEVEL LS
)@@G@@- 1   @E@=@<          LA        A0,NOADDR         . GET NODE ADDRESS    LT
)@@G@@@E@@@=          LA        A3,NOADDR         . GET NODE ADDRESS    @E@=@<LU
)@@G@@          LA        A1,BRBITS         . BET BRANCH BITS     @E@=@<      LV
)@@G@@    LA        A3,LEVEL          . GET CURRENT LEVEL   @E@=@<          LALW
)@@G@@        A2,ULINK,A0       . GET FATHER'S LINK   @E@@@=          LA      LX
)@@G@@  A2,ULINK,A3       . GET FATHER'S LINK   @E@=@<          JZ        A2,DLY
)@@G@@INOF          . SKIP IF NO FATHER   @E@@@=          JZ        A2,DIHLSC LZ
)@@G@@        . SKIP IF NO FATHER   @G@=@<          LA,U      A4,1            MA
)@@G@@  . ASSUME WE'RE SETTING THE BIT    @E@=@<          TE        A0,RLINK,AMB
)@@G@@2       . ARE WE ON THE RIGHT?@F@@@=          TNE       A3,LLINK,A2     MC
)@@G@@  . IS THIS NODE A LEFT SON?  @H@@@=          LMJ       X11,BITOFF1     MD
)@@G@@  . YES, TURN BIT AT HIGHER LEVEL OFF     @F@=@<          LN,U      A4,1ME
)@@G@@              . NO, ON THE LEFT--CLEAR BIT@F@=@<          SSC       A4,1MF
)@@G@@,A3           . MOVE THE MASK INTO PLACE  @D@=@<          TOP,U     A4,1MG
)@@G@@              . NEGATIVE MASK?@E@=@<          OR        A1,A4           MH
)@@G@@  . NO, SO SET THE BIT  @D@=@<          TEP,U     A4,1              . POMI
)@@G@@SITIVE MASK?@E@=@<          AND       A1,A4             . NO, CLEAR THE MJ
)@@G@@BIT   @G@@@=. IF CURRENT NODE HAS A LEFT SON -- TURN ON BRANCH BIT AT CUMK
)@@G@@RRENT LEVEL @[@@@=DIHLSC@E@=@<          LN,U      A4,1              . GEML
)@@G@@T A CLEARING BIT  @F@@@=          TZ        LLINK,A3          . DOES HE MM
)@@G@@HAVE A LEFT SON?  @H@@@=          LMJ       X11,BITON         . YES, TURMN
)@@G@@N ON BRANCH BIT FROM THIS NODE@E@=@<          SSC       A4,2,A3         MO
)@@G@@  . MOVE IT TO LEVEL+1  @F@=@<          LA        A1,A2             . PUMP
)@@G@@T BITS BACK INTO A1     @F@=@<          TNZ       LLINK,A0          . DOMQ
)@@G@@ES HE HAVE A LEFT SON?  @F@=@<          AND       A1,A4             . NOMR
)@@G@@ -- CLEAR BRANCH BIT    @E@=@<          SA        A2,BRBITS         . SEMS
)@@G@@T BACK INTO PLACE @G@@@<. NOW BUILD A LINE WITH VERTICAL BRANCHES AND OUMT
)@@G@@TPUT IT 'LINES' TIMES   @E@@@<          LMJ       X11,BRBLD         . BUMU
)@@G@@ILD A BRANCH LINE @E@=@<          E$WRDN                      . COMPUTE MV
)@@G@@# OF WORDS  @E@=@<          AH        A0,(EDBUF,0100)   . APRINT$ CONTROMW
)@@G@@L WORD@C@=@<          SSC       A0,18             . FIX A0  @E@@@=      MX
)@@G@@    LA        A0,(0141,EDBUF)   . APRINT$ CONTROL WORD@F@@@<          SAMY
)@@G@@        A0,IMAGCW         . SAVE IMAGE CONTROL WORD   @D@@@=          E$MZ
)@@G@@DITX                      . RESTORE X1-X3 @F@@@<          LA        A1,LNA
)@@G@@INES          . GET # OF LINES TO DO IT   @E@@@<          J         DIFRNB
)@@G@@SL            . GO TO THE FIRST LINE@[@@@<DINXTL@F@@@<          SA      NC
)@@G@@  A1,NLINES         . SAVE # OF LINES CURRENTLY @F@@@<          LX      ND
)@@G@@  X11,OUTRTN        . GET OUTPUT ROUTINE ADDR   @E@@@<          LA      NE
)@@G@@  A0,IMAGCW         . GET A0 CONTROL WORD @E@@@<          LMJ       X11,NF
)@@G@@,X11          . GIVE IT TO USER     @E@@@<          LA        A1,NLINES NG
)@@G@@        . RECOVER # OF LINES  @[@@@<DIFRSL@E@@@<          JGD       A1,DNH
)@@G@@INXTL         . GO TO THE NEXT LINE @#@=@<          E$RASE  @D@@@=      NI
)@@G@@    LA,U      A0,EDPKT          . REOPEN EDITING@B@@@=          E$DIT   NJ
)@@G@@                    .   @E@@@<          J         DINXTN            . GONK
)@@G@@ TO THE NEXT NODE @A@@@<. NO FRONT DASHES--SIMPLY INDENT    @[@@@<DINODANL
)@@G@@@D@@@<          AN,U      A0,1              . BACK UP ONE   @D@@@<      NM
)@@G@@    E$SKIP                      . MOVE THERE    @E@@@<          J       NN
)@@G@@  DIBLNK            . GO BLANK OUT ANY ':'@[@@@=.     @D@@@=. SUBROUTINENO
)@@G@@ TO TURN ON/OFF A BIT AT A GIVEN LEVEL.   @A@@@=. BITON -- TURN ON BIT ANP
)@@G@@T LEVEL     @A@@@=. BITON1 - TURN ON BIT AT LEVEL - 1 @A@@@=. BITOFF - TNQ
)@@G@@URN OFF BIT AT LEVEL    @A@@@=. BITOFF1  TURN OFF BIT AT LEVEL - 1@[@@@=NR
)@@G@@.     @ @@@=BITON1    LMJ       A2,$+2    @ @@@=BITON     LMJ       A2,$NS
)@@G@@+1    @D@@@=          LA,U      A0,1              . SET A BIT     @D@@@=NT
)@@G@@          AN,U      A2,BITON1         . GET OFFSET    @E@@@=          J NU
)@@G@@        BITFIX            . GO DO YOUR STUFF    @[@@@=.     @ @@@=BITOFFNV
)@@G@@1   LMJ       A2,$+2    @ @@@=BITOFF    LMJ       A2,$+1    @D@@@=      NW
)@@G@@    LN,U      A0,1              . CLEAR A BIT   @E@@@=          AN,U    NX
)@@G@@  A2,BITOFF1        . GET OFFSET FOR LEVEL@[@@@=BITFIX@E@@@=          AANY
)@@G@@        A2,LEVEL          . ADD IN CURRENT LEVEL@D@@@=          SSC     NZ
)@@G@@  A0,,A2            . SHIFT THE BITS@D@@@=          TOP,U     A0,1      OA
)@@G@@        . POSITIVE MASK?@E@@@=          OR        A0,BRBITS         . YEOB
)@@G@@S -- SET NEW BIT  @D@@@=          TEP,U     A0,1              . NEGATIVEOC
)@@G@@ MASK?@E@@@=          AND       A0,BRBITS         . YES -- CLEAR THE BITOD
)@@G@@@D@@@=          SA        A1,BRBITS         . RESTORE ORDER @E@@@=      OE
)@@G@@    J         0,X11             . RETURN TO CALLER    @[@@@<.     @A@@@<OF
)@@G@@. SUBROUTINE TO BUILD A BRANCH LINE @[@@@<.     @[@@@<BRBLD @E@@@=      OG
)@@G@@    LA        A4,BRBITS         . GET BRANCH BITS     @E@@@=          JZOH
)@@G@@        A4,,X11           . IF NO BITS, QUIT NOW@ @@@<          SX      OI
)@@G@@  X11,BRLINK@E@@@<          LA        A0,BRCOLN         . GET BRANCH COLOJ
)@@G@@UMN # @G@@@<          AN,U      A0,1              . IT'S ORIGIN ONE, WE OK
)@@G@@WANT ZERO   @G@@@<          E$SKIP                      . MOVE TO THE HEOL
)@@G@@AD OF THE CLASS   @E@@@<          LA        A5,LEVEL          . GET NODEOM
)@@G@@'S LEVEL    @E@=@<          LA        A4,BRBITS         . AND SOME BITS ON
)@@G@@TOO   @F@@@<          LSSL      A4,1              . GET RID OF LEVEL ZEROO
)@@G@@O BIT @E@=@<          J         BRNXTB            . GET TO THE NEXT BIT OP
)@@G@@@[@@@<BRLOOP@H@=@<          DS        A4,BRPARM         . WE GOT A BIT, OQ
)@@G@@PRINT A CHAR FOR IT     @H@@@<          JPS       A4,BRSKPB         . IFOR
)@@G@@ NO HIGH BIT, SKIP TO THE NEXT BIT  @B@@@<          E$CHAR    ':'       OS
)@@G@@        .   @F@@@<          E$SKIP    -1                . FAKE OUT FALL-OT
)@@G@@THROUGH CODE@[@@@<BRSKPB@F@=@<          E$SKIP    INDENT            . SKOU
)@@G@@IP TO THE NEXT LEVEL    @F@@@=          LA        A0,INDENT         . SKOV
)@@G@@IP TO THE NEXT LEVEL    @B@@@=          E$SKIP                      .   OW
)@@G@@@D@=@<          DL        A4,BRPARM         . RESTORE REGS  @[@=@<BRNXTBOX
)@@G@@@D@@@<          JGD       A5,BRLOOP         . TRY AGAIN     @E@@@<      OY
)@@G@@    E$COL     0                 . RESET COLUMN POINTER@C@@@<          LXOZ
)@@G@@        X11,BRLINK        . GO HOME @ @@@=          J         0,X11     PA
)@@G@@@[@@@=.     @A@@@=. WE'VE GOT A CYCLIC TREE--BAD NEWS @[@@@=.     @[@@@=PB
)@@G@@DICYCL@E@$@=          LA        A0,(0207,('WARNING: TREE IS CYCLIC!'))  PC
)@@G@@@E@@@$          LA        A0,PCL(2,'WARNING: TREE IS CYCLIC!'L)   @F@@@=PD
)@@G@@          LX        X11,OUTRTN        . GET ADDR OF OUTPUT RTNE   @C@@@=PE
)@@G@@          LMJ       X11,,X11          . CALL HIM@B@@@=          J       PF
)@@G@@  ALLDONE           .   @ @=@<          J         0,X11     @[@@@=.     PG
)@@G@@@C@@@=. WE'RE FINISHED. THE TREE HAS BEEN TRAVERSED.  @[@@@=.     @]@@@=PH
)@@G@@ALLDONE     @D@@@=          E$DITX                      . RESTORE X1-X3 PI
)@@G@@@C@@@=          LX        X11,DILINK        . GET LINK@C@@@=          J PJ
)@@G@@        0,X11             . RETURN  @[@@@</     @]@@@<. DBANK     @[@@@<PK
)@@G@@.     @#@@@<          DBANK   @[@@@<.     @C@@@<PARAMS    BASE          PL
)@@G@@              . A0,A1   @#@@@=          WORD    @G@=@<INDENT    SIXTH   PM
)@@G@@                    . # OF COLUMNS BETWEEN NODE HEADS @G@@@=INDENT    FIPN
)@@G@@ELD     S1                . # OF COLUMNS BETWEEN NODE HEADS @G@=@<BRCOLNPO
)@@G@@    SIXTH                       . # OF COLUMNS FROM HEAD TO BRANCH@G@@@=PP
)@@G@@BRCOLN    FIELD     S2                . # OF COLUMNS FROM HEAD TO BRANCHPQ
)@@G@@@G@=@<LINES     SIXTH                       . # OF ROWS (LINES) BETWEEN PR
)@@G@@NODES @G@@@=LINES     FIELD     S3                . # OF ROWS (LINES) BEPS
)@@G@@TWEEN NODES @D@=@<TREEHD    HALF                        . TREE HEAD NOOEPT
)@@G@@@D@@@=TREEHD    FIELD     H2                . TREE HEAD NOOE@#@@@=      PU
)@@G@@    WORD    @G@=@<NODEIT    HALF                        . ADDRESS OF NODPV
)@@G@@E EDIT ROUTINE    @G@@@=NODEIT    FIELD     H1                . ADDRESS PW
)@@G@@OF NODE EDIT ROUTINE    @F@=@<OUTRTN    HALF                        . ADPX
)@@G@@DRESS OF OUTPUT ROUTINE @F@@@=OUTRTN    FIELD     H2                . ADPY
)@@G@@DRESS OF OUTPUT ROUTINE @#@@@>          ENDBASE @[@@@<.     @A@@@<. PARAPZ
)@@G@@METER WORD FOR AVLTRAVERSAL   @[@@@<.     @D@@@<TRAPARM   BASE          QA
)@@G@@              . STUFF A0 HERE @#@@@=          WORD    @F@=@<          SIQB
)@@G@@XTH                       . USED FOR TRAVERSAL INDEX  @D@=@<          SIQC
)@@G@@XTH                       . STATE IS HERE @F@=@<DEPTH     SIXTH         QD
)@@G@@              . NODE DEPTH LIVES HERE     @F@@@=LEVEL     FIELD     S3  QE
)@@G@@              . NODE DEPTH LIVES HERE     @F@=@<NOADDR    HALF          QF
)@@G@@              . NODE ADDRESS RETURNED HERE@F@@@=NOADDR    FIELD     H2  QG
)@@G@@              . NODE ADDRESS RETURNED HERE@#@@@>          ENDBASE @[@@@<QH
)@@G@@.     @^@@@<. MISCELLANEOUS DATA    @[@@@<.     @#@@@<          BASE    QI
)@@G@@@F@=@<NLINES    SIXTH                       . # OF LINES BETWEEN NODES  QJ
)@@G@@@F@@@=NLINES    SIXTH                       . # OF LINES BETWEEN NODES  QK
)@@G@@@F@=@<NDASHES   SIXTH                       . # OF DASHES LEADING NODES QL
)@@G@@@F@@@=NDASHES   SIXTH                       . # OF DASHES LEADING NODES QM
)@@G@@@H@@@=SEEFLG    SIXTH                       . FLAG TO INDICATE ROOT NODEQN
)@@G@@ IS SEEN    @E@=@<COLN      HALF                        . TEMP COLUMN SAQO
)@@G@@VE    @E@@@=COLN      HALF                        . TEMP COLUMN SAVE    QP
)@@G@@@D@=@<DILINK    HALF                        . DISPLAY LINK  @D@@@=DILINKQQ
)@@G@@    HALF                        . DISPLAY LINK  @E@=@<BRLINK    HALF    QR
)@@G@@                    . BRANCH BUILDER LINK @E@@@=BRLINK    HALF          QS
)@@G@@              . BRANCH BUILDER LINK @E@@@<IMAGCW    WORD                QT
)@@G@@        . APRINT$ CONTROL WORD@D@@@<BRBITS    WORD                      QU
)@@G@@  . BRANCH BITS   @#@@@=          ENDBASE @E@=@<BRPARM    WORD      2   QV
)@@G@@              . BRBLD PARAMETER     @[@@@<.     @#@@@<. EDIT$ PACKET    QW
)@@G@@@[@@@<.     @E@=@<EDPKT     E$PKTA    33,EDBUF 'TBL',XTBL 'ASI',1 'ASC',QX
)@@G@@1     @C@@@=EDPKT     E$PKTA    33,EDBUF  'ASI',1 'ASC',1   @D@@@<EDBUF QY
)@@G@@    RES       33                . EDIT BUFFER   @[@=@<.     @^@=@<. TRANQZ
)@@G@@SLATION TABLE     @[@=@<.     @#@=@<          IBANK   @B@=@<XTBL      E$RA
)@@G@@TBL                       .   @#@@@=          END     ___@@@  0,X11     RB
)@@G@@        . RETURN TO CALLER    @[@@@<.     @A@@@<. SUBROUTINE TO BUILD A RC
)@@G@@*[S@@@*SDFF*@#@@@O          LIBRARY @ @@@O          INCLUDE   'AVL$DEF' RD
)@@G@@@[@@@O.     @B@@@O. AVL TREE MAINTENAINCE SUBROUTINE PACKAGE@[@@@O.     RE
)@@G@@@G@@@O. DESIGNED AND IMPLEMENTED BY  ALAN K. STEBBENS, UOMCSC SYSTEMS STRF
)@@G@@AFF.  @[@@@O.     @C@@@O. AVL$ROUTINE -- GENERALIZED AVL ROUTINE HANDLERRG
)@@G@@@G@@@O.  PERFORMS THE SEQUENCING OF OPERATIONS NECESSARY TO PERFORM A FURH
)@@G@@NCTION@[@@@O.     @^@@@O. INPUT: A0=PKT ADDR    @ @@@O.        A1=FUNCTIRI
)@@G@@ON PARAMETER@ @@@O.        A2=RKFLG*/6+ISDFLG   @ @@@O.        A4=TEST RRJ
)@@G@@TNE ADDR    @A@@@O.        X11=USER RETURN ADDRESS    @A@@@O.        LMJRK
)@@G@@        A3,AVL$ROUTINE  @[@@@O.     @#@@@O          IBANK   @]@@@OAVL$RORL
)@@G@@UTINE*@D@@@O          SX        X11,AVLINK        . SAVE USER ADDR@G@@@QRM
)@@G@@          LXM,U     A2,PKT            . GET THE USER'S PACKET ADDRESS   RN
)@@G@@@G@@@O          SA        A2,RKISDW         . SET RKFLG, ISDFLG  AT SAMERO
)@@G@@ TIME @G@@@O          SA        A3,AVLRTN         . SAVE OUR OWN RETURN RP
)@@G@@ADDRESS     @G@@@O          SA        A4,CMPRTN         . SET COMPARISONRQ
)@@G@@ ROUTINE ADDRESS  @D@@@O          LMJ       X11,AVL$LOCATE    . FIND THERR
)@@G@@ NODE @G@@@O          LX        X11,AVLINK        . RESTORE USER RETURN RS
)@@G@@ADDRESS     @E@@@O          LA        A1,AVLRTN         . RESTORE ROUTINRT
)@@G@@E ADDR@C@@@O          J         0,A1              . GO HOME @[@@@O.     RU
)@@G@@@^@@@O. RESERVE SPACE FOR DATA@[@@@O.     @#@@@O          DBANK   @B@@@ORV
)@@G@@AVL$DATA* RES       DATALEN           .   @ @@@O          $DISPLAY  EDITRW
)@@G@@V($)  @[@O@N/.    @F@O@N. THIS ROUTINE IS CALLED TO INITIALIZE THE TIMINRX
)@@G@@G CELL FOR THE    @^@O@N. TIMEON/TIMEOFF PROCS  @[@O@N.     @C@O@N.     RY
)@@G@@    SLJ       AVL$TIMEON (AVL$TIMEOFF)    @B@O@N.         *         <ADDRZ
)@@G@@R OF TIMECELL>    @[@O@N.     @B@O@N          IF        TIMES           SA
)@@G@@  .   @B@O@NAVL$TIMEON* SLJENTRY                  .   @D@O@N          DSSB
)@@G@@        A0,SAVA0          . SAVE REGISTERS@E@O@N          LA        A1,*SC
)@@G@@AVL$TIMEON    . GET ADDR OF TIMECELL@F@O@N          ER        TIME$     SD
)@@G@@        . GET MILLISECONDS IN A0    @G@O@N          SA        A0,1,A1   SE
)@@G@@        . STASH IN 2ND WORD OF TIMECELL   @E@O@N          LA        A0,ASF
)@@G@@VL$TIMEON     . GET RETURN ADDR     @E@O@N          J         SLJEXIT   SG
)@@G@@        . TAKE COMMON EXIT    @[@O@N.     @A@O@N. THIS IS THE ROUTINE FOSH
)@@G@@R TIMEOFF   @[@O@N.     @B@O@NAVL$TIMEOFF* SLJENTRY                 .   SI
)@@G@@@B@O@N          DS        A0,SAVA0          .   @F@O@N          LA      SJ
)@@G@@  A1,*AVL$TIMEOFF   . GET ADDR OF THE TIMECELL  @G@O@N          ER      SK
)@@G@@  TIME$             . GET MILLISECONDS PAST MIDNITE   @F@O@N          ANSL
)@@G@@        A0,1,A1           . COMPUTE STOP MINUS START  @G@O@N          LMSM
)@@G@@        A0,A0             . IN CASE WE WENT PAST MIDNITE    @F@O@N      SN
)@@G@@    AA        A0,,A1            . ADD IN ACCUMULATED TIME   @E@O@N      SO
)@@G@@    SA        A0,,A1            . POST NEW TOTAL TIME @E@O@N          LASP
)@@G@@        A0,AVL$TIMEOFF    . GET THE RETURN ADDR @E@O@N          J       SQ
)@@G@@  SLJEXIT           . TAKE COMMON EXIT    @B@O@N          ENDF      TIMESR
)@@G@@S             .   @[@O@N.     @C@O@N. THIS ROUTINE IS CALLED IN THE PROCSS
)@@G@@S INC/DEC   @[@O@N.     @ @O@N.         SLJ       AVL$BUMP  @B@O@N.     ST
)@@G@@    *         <COUNTADDR>,<INCVALUE>@[@O@N.     @B@O@N          IF      SU
)@@G@@  STATS             .   @B@O@NAVL$BUMP* SLJENTRY                    .   SV
)@@G@@@D@O@N          DS        A0,SAVA0          . SAVE USED REG @D@O@N      SW
)@@G@@    LA,H1     A1,*AVL$BUMP      . GET COUNT ADDR@E@O@N          LA      SX
)@@G@@  A0,,A1            . GET THE COUNT ITSELF@E@O@N          AA,XH2    A0,*SY
)@@G@@AVL$BUMP      . ADD IN THE INCREMENT@E@O@N          SA        A0,,A1    SZ
)@@G@@        . POST THE NEW VALUE  @F@O@N          LA        A0,AVL$BUMP     TA
)@@G@@  . GET THE RETURN ADDRESS    @C@O@N          J         SLJEXIT         TB
)@@G@@  . GO HOME @B@O@N          ENDF      STATS             .   @[@@@N/     TC
)@@G@@@#@@@N          IBANK   @[@@@O.     @G@@@O. THE  FOLLOWING  LOAD  AND  STD
)@@G@@TORE  TABLES ARE USED BY THE 'SET' PROC IN@G@@@O. AVL$DEF. THEY MUST BE TE
)@@G@@USED BECAUSE OF THE FACT THAT PARTIAL WORD LOADS@G@@@O. AND  STORES  CANTF
)@@G@@NOT  BE  PERFORMED  INDIRECTLY;  THEREFORE,  THEY  ARE@G@@@O. EXECUTED  TG
)@@G@@IN THE FOLLOWING TABLES. THE VALUE OF 'AREG' MUST CORRESPOND@G@@@O. TO TTH
)@@G@@HE VALUE DECLARED IN 'BALANCE' AND 'DELETE' WHICH  USE  THE  'SET'@]@@@OTI
)@@G@@. PROC.     @[@@@O.     @E@@@OAREG      EQU       A5                . UTTJ
)@@G@@ILITY REGISTER    @[@@@O.     @F@@@O. THE FOLLOWING TABLES ARE EXCLUSIONTK
)@@G@@ LISTS DEVELOPED TO MINIMIZE  @G@@@O. THE GENERATION OF UNNECESSARY INSTTL
)@@G@@RUCTIONS IN THE EXECUTE VECTORS.    @G@@@O. THEY WERE DEVELOPED AFTER OBTM
)@@G@@SERVING WHICH ENTRY POINTS WERE ACTUALLY  @G@@@O. REFERENCED FROM THE ELTN
)@@G@@EMENTS 'BALANCE' AND 'DELETE' WHICH ARE THE     @G@@@O. ONLY ELEMENTS USTO
)@@G@@ING THE 'SET' PROC. SHOULD FUTURE MODIFICATIONS BECOME@G@@@O. NECESSARY TP
)@@G@@AND UNDEFINED ENTRY POINTS BECOME EXISTANT, SIMPLY ADD OR   @B@@@O. DELETQ
)@@G@@TE ENTRY FROM THE FOLLOWING LISTS.  @[@@@O.     @A@@@O. THE LOAD TABLE ETR
)@@G@@XCLUSION LIST     @[@@@O.     @^@@@OEXL('A',X11) EQU    1   @^@@@OEXL('ATS
)@@G@@',A1) EQU     1   @^@@@OEXL('NA',A1) EQU    1   @[@@@O.     @A@@@O. THE TT
)@@G@@STORE TABLE EXCLUSION LIST    @[@@@O.     @^@@@OEXS('A',X11) EQU    1   TU
)@@G@@@^@@@OEXS('A',A1)  EQU    1   @^@@@OEXS('NA',A1) EQU    1   @^@@@OEXS('NTV
)@@G@@A',A2) EQU    1   @^@@@OEXS('A',A3)  EQU    1   @[@@@O.     @B@@@OL     TW
)@@G@@    EQU       $L1('LOAD','STOR')    @[@@@O.     @^@@@OI         REPEAT  TX
)@@G@@  L   @D@R@OLS        EQU       $SS(L(1),1)       . 'L' OR 'S'    @D@@@RTY
)@@G@@LS        EQU       $SS(L(I),1)       . 'L' OR 'S'    @E@@@OEX        EQTZ
)@@G@@U       'EX':LS            . 'EXL' OR 'EXS'     @D@@@OLS        EQU     UA
)@@G@@  LS:'A'            . 'LA' OR 'SA'  @ @@@OR         REPEAT    X11,A3    UB
)@@G@@@E@@@OA         EQU       [EX]('A',R)       . ALPHA EXCLUSION FLAG@G@@@OUC
)@@G@@NA        EQU       [EX]('NA',R)      . NEGATIVE ALPHA EXCLUSION FLAG   UD
)@@G@@@^@@@O          A->NA->ENDR   @A@@@OA         EQU       A->' DO 0 ,'!'' UE
)@@G@@@A@@@ONA        EQU       NA->' DO 0 ,'!''@ @P@ORS        EQU       EDREUF
)@@G@@G(R)  @ @@@PRS        EQU       EREG(R)   @E@@@O[NA]      D$I       'AVLUG
)@@G@@$NA':L(I):$CD(R-10):'*','EQU','$-1' @B@@@O[NA]      D$I       ,LS,'AREG,UH
)@@G@@LLINK,':RS  @E@@@O[A]       D$I       'AVL$A':L(I):$CD(R-10):'*','EQU','UI
)@@G@@$-1'  @B@@@O          D$I       ,LS,'AREG,RLINK,':RS  @B@@@O[A]       D$UJ
)@@G@@I       ,LS,'AREG,LLINK,':RS  @#@@@O          ENDR    @#@@@O          ENUK
)@@G@@DR    @[@O@N.     @C@O@N. LOAD TABLE FOR THE GETLINK,GETNLINK PROCS     UL
)@@G@@@[@O@N.     @[@@@O.     @#@@@O          END     @E@O@NAVL$LDLNK* *      UM
)@@G@@  0                 . ORIGIN ONE TABLE    @D@O@NAVL$LDNLK* LA       A5,RUN
)@@G@@LINK,X11      . ALPHA = +1    @F@O@N          LA        A5,LLINK,X11    UO
)@@G@@  . ALPHA = -1 OR -ALPHA = -1 @D@O@N          LA        A5,RLINK,X11    UP
)@@G@@  . -ALPHA = +1   @C@O@N. SIMILAR STORE TABLE FOR SETLINK,SETNLINK PROCSUQ
)@@G@@@^@O@NAVL$STLNK* *        0   @D@O@NAVL$STNLK* SA       A5,RLINK,X11    UR
)@@G@@  . ALPHA = +1    @F@O@N          SA        A5,LLINK,X11      . ALPHA = US
)@@G@@-1 OR -ALPHA = -1 @D@O@N          SA        A5,RLINK,X11      . -ALPHA =UT
)@@G@@ +1   ___@@@NE IS CALLED TO INITIALIZE THE TIMIN*[S@@@*SDFF*@#@@@N      UU
)@@G@@    $EJECT  @ @P@M          INCLUDE   'AXR$'    @ @N@M          INCLUDE UV
)@@G@@  'JPROC$'  @ @P@N          INCLUDE   'JPROCS'  @ @P@O          INCLUDE UW
)@@G@@  'PROCS'   @ @N@M          INCLUDE   'AVL$DEF' @ @P@N          INCLUDE UX
)@@G@@  'AVL$P'   @#@@@P          LIBRARY @#@@@P          AVL$P   @^@@@N      UY
)@@G@@    AVL$NODES     @[@@@N.     @B@@@N. AVL TREE MAINTENAINCE SUBROUTINE PUZ
)@@G@@ACKAGE@[@@@N.     @G@@@N. DESIGNED AND IMPLEMENTED BY  ALAN K. STEBBENS,VA
)@@G@@ UOMCSC SYSTEMS STAFF.  @[@@@N.     @#@@@N          IBANK   @[@@@M.     VB
)@@G@@@H@@@M. ROUTINE TO PERFORM ANY OF SIX TYPES OF TRAVERSALS THROUGH THE AVVC
)@@G@@L TREE.     @[@@@M.     @H@@@M.   IN PERFORMING TRAVERSALS OVER A TREE, VD
)@@G@@THE SIX TYPES OF TRAVERSALS MAY ALL @H@@@M. BE PERFORMED AS SPECIAL CASEVE
)@@G@@S OF GENERALIZED CODE. THIS IS EVIDENT IF ONE   @H@@@M. CONSTRUCTS STATEVF
)@@G@@ DIAGRAMS FOR THE TRAVERSALS. THE BASIC ALGORITHM IS AS     @]@@@M. FOLLVG
)@@G@@OWS:  @[@@@M.     @G@@@M. PERFORM AN ACTION DEPENDENT ON THE CURRENT STAVH
)@@G@@TE AND TYPE OF TRAVERSAL@G@@@M. BEING MADE. THIS CONSISTS OF EITHER A LEVI
)@@G@@FT LINKING, RIGHT LINKING, UP @G@@@M. LINKING, OR A NOP -- VISIT THE CURVJ
)@@G@@RENT NODE. IF THE RESULT OF THE     @G@@@M. ACTION IS A NULL, A NEW STATVK
)@@G@@E IS CHOSEN DEPENDING UPON THE STATE AND  @H@@@M. TYPE OF TRAVERSAL. IF VL
)@@G@@THE RESULT OF THE ACTION WAS NOT NULL, THEN ANOTHER   @H@@@M. STATE IS CVM
)@@G@@HOSEN ALSO DEPENDING UPON THE CURRENT STATE AND TYPE OF TRAVERSAL.@H@@@MVN
)@@G@@. IF THIS NEW STATE IS NULL, THEN YET ANOTHER STATE IS CHOSEN DEPENDING VO
)@@G@@UPON  @H@@@M. WHETHER OR NOT THE CURRENT ROOT NODE IS A LEFT SON OR RIGHVP
)@@G@@T SON AND, OF     @H@@@M. COURSE, THE CURRENT STATE AND TYPE OF TRAVERSAVQ
)@@G@@L. FINALLY, IF A GO-TO-NEXT-  @G@@@M. STATE FLAG IS SET DEPENDING ON THEVR
)@@G@@ CURRENT STATE AND TRAVERSAL, THEN  @H@N@M. THE WHOLE PROCEDURE IS REPEAVS
)@@G@@TED ON THE NEW NODE. EASIER SAID THAN DONE.     @H@@@N. THE WHOLE PROCEDVT
)@@G@@URE IS REPEATED ON THE NEW NODE. EASIER DONE THAN SAID.     @]@@@M. WATCVU
)@@G@@H.    @[@@@M.     @E@@@N. INPUT TO THIS ROUTINE IS IN THE FORM OF FOUR PVV
)@@G@@ARAMETERS:  @^@@@N.   TRAVERSAL INDEX     @#@@@N.   STATE INDEX   @#@@@NVW
)@@G@@.   NODE DEPTH    @#@@@N.   NODE ADDRESS  @[@@@N.     @D@N@M. INPUT: A0 VX
)@@G@@= (TRAVERSAL INDEX*/6+STATEFLAG, ROOTADDR)@^@N@M. LMJ   X11,AVLTRAVERSE VY
)@@G@@@ @N@M. <TRAVERSAL COMPLETE EXIT>   @F@N@M. <NEXT NODE EXIT>    A0=(TRAVVZ
)@@G@@ERSAL INDEX*/6+NEXT STATE, NODEADDR)@[@N@M.     @H@N@M. THE INITIAL STATWA
)@@G@@E FLAG, UPON THE FIRST CALL TO AVLTRAVERSE, MUST BE ONE.    @H@N@M. THE WB
)@@G@@USER MUST SAVE A0 BETWEEN CALLS TO AVLTRAVERSE IF A PROPER SEQUENCE     WC
)@@G@@@^@N@M. IS TO BE EFFECTED.    @H@N@M. TRAVERSAL INDEX IS A NUMBER INDICAWD
)@@G@@TING THE TYPE OF TRAVERSAL TO PERFORM:    @H@@@N. TRAVERSAL INDEX IS A NWE
)@@G@@UMBER INDICATING THE TYPE OF TRAVERSAL TO PERFORM:    @C@@@M.   0 = PREOWF
)@@G@@RDER TRAVERSAL  (ROOT,LEFT,RIGHT)   @C@@@M.   1 = INORDER  TRAVERSAL  (LWG
)@@G@@EFT,ROOT,RIGHT)   @C@@@M.   2 = POSTORDER TRAVERSAL (LEFT,RIGHT,ROOT)   WH
)@@G@@@D@@@M.   3 = REVERSE PREORDER TRAVERSAL (ROOT,RIGHT,LEFT)  @D@@@M.   4 WI
)@@G@@= REVERSE INORDER  TRAVERSAL (RIGHT,ROOT,LEFT)  @D@@@M.   5 = REVERSE POWJ
)@@G@@STORDER TRAVERSAL (RIGHT,LEFT,ROOT) @[@@@N.     @G@@@N. STATE INDEX IS AWK
)@@G@@ NUMBER INDICATING THE CURRENT STATE OF THE TRAVERSAL.@H@@@N. THIS ENABLWL
)@@G@@ES THE ROUTINE TO DETERMINE WHERE TO GO NEXT IN THE SEQUENCE.     @[@@@NWM
)@@G@@.     @H@@@N. CURRENT DEPTH IS THE 'ROW' NUMBER OF THE NODE, WITH THE TOWN
)@@G@@P ROOT NODE BEING @G@@@N. AT ROW ZERO, ITS TWO SONS AT ROW ONE, ETC. THIWO
)@@G@@S INFORMATION IS USED TO@D@@@N. DETERMINE WHEN TO TERMINATE SUBTREE TRAVWP
)@@G@@ERSALS.     @[@@@N.     @G@@@N. ROOT NODE ADDR IS THE ADDRESS OF THE ROOWQ
)@@G@@T NODE. THIS IS A FIGURATIVE  @H@@@N. TERMINOLOGY USAGE, AS DURING THE TWR
)@@G@@RAVERSAL EACH NODE VISITED BECOMES IN     @ @@@N. ITS TURN THE 'ROOT NODWS
)@@G@@E'.   @[@@@N.     @G@@@N. FORTUNATELY FOR THE USER, ALL OF THE ABOVE FOUWT
)@@G@@R PARAMETERS MAY BE     @ @@@N. CRAMMED INTO A0 AS FOLLOWS: @[@@@N.     WU
)@@G@@@F@@@N. A0=(TRAVERSAL INDEX*/12+STATE INDEX*/6+DEPTH,ROOT NODE ADDR)    WV
)@@G@@@H@@@N. THAT IS, TRAVERSAL INDEX IS IN S1 OF A0, STATE INDEX IN S2, DEPTWW
)@@G@@H IN S3,    @ @@@N. AND ROOT NODE ADDR IN H2.   @[@@@N.     @H@@@N. THE WX
)@@G@@USER NEED ONLY SUPPLY THE INITIAL VALUES TO A0, AND THE ROUTINE WILL    WY
)@@G@@@H@@@N. APPROPRIATELY RETURN A NEW A0 VALUE WHICH THEN MUST BE USED ON TWZ
)@@G@@HE NEXT     @H@@@N. CALL. THE INITIAL VALUES FOR STATE INDEX IS ONE (1),XA
)@@G@@ DEPTH IS ZERO (0),     @G@@@N. AND THE USER DETERMINES WHICH TRAVERSAL XB
)@@G@@HE WANTS, AND ROOT NODE ADDR  @E@@@N. SHOULD BE THE TOP, HEAD NODE OF THXC
)@@G@@E TREE TO TRAVERSE. VIZ:@[@@@N.     @A@@@N.   LA     A0,(000100,ROOTNODEXD
)@@G@@)     @^@@@N.   LMJ    X11,AVLTRA   @#@@@N.   J      ALLDONE@^@@@N.   <NXE
)@@G@@ORMAL RETURN>     @G@@@N. WILL CAUSE A PREORDER TRAVERSAL TO BEGIN ON THXF
)@@G@@E TREE STARTING AT THE  @G@@@N. HEAD NODE 'ROOTNODE'). S3 OF A0 UPON RETXG
)@@G@@URN WILL HAVE THE DEPTH OF    @G@@@N. THE NODE BEING VISITED FIRST, WHICXH
)@@G@@H, OF COURSE, WILL BE THE ROOT NODE @]@@@N. ITSELF.   @[@@@N.     @^@@@NXI
)@@G@@. USES REGISTERS: A0-A5.@A@@@N. REGISTER USAGE: A0=TRAVERSAL INDEX@A@@@NXJ
)@@G@@.                 A1=STATE INDEX    @A@@@N.                 A2=X (TEMPORXK
)@@G@@ARY)  @ @@@N.                 A3=ROOT NODE@ @@@N.                 A4=NEWXL
)@@G@@ STATE@ @@@N.                 A5=DEPTH    @[@@@N.     @[@N@M.     @#@N@MXM
)@@G@@AVLTRAVERSE* ENTRY@]@@@NAVLTRA*     @D@N@M          ENTER     *'TRAVERSEXN
)@@G@@' 'TRAV$NUM','TRAV$TIM' @E@N@M          LA,U      A2,,A0            . PUXO
)@@G@@T NODE ADDR IN A0 @G@N@M          JZ        A2,0,X11          . TAKE TRAXP
)@@G@@VERSAL COMPLETE EXIT    @H@N@M          DSL       A0,18+6           . PUXQ
)@@G@@T STATE INTO A1, A0=TRAVERSAL INDEX @D@N@M          SSL       A1,36-6   XR
)@@G@@        . A1 = STATE    @G@@@N          DSL       A0,36-6           . DEXS
)@@G@@CODE THE PACKED PARAMETERS    @H@@@N          DSL       A1,36-6         XT
)@@G@@  . LEAVING A0=TRAVERSAL INDEX, A1=STATE  @C@@@N          DSL       A2,3XU
)@@G@@6-6           . A2=DEPTH@D@@@N          SSL       A3,18             . A3XV
)@@G@@=ROOT NODE  @E@@@N          LA        A5,A2             . MOVE DEPTH TO XW
)@@G@@A2    @E@@@N          JZ        A3,TRAQUIT        . QUIT IF NULL NODE   XX
)@@G@@@C@@@M. PERFORM ACTION INDICATED BY THE CURRENT STATE @]@@@MNEXTSTATE   XY
)@@G@@@E@N@M          LA        A3,ACTNDX         . GET THE ACTION INDEX@E@@@NXZ
)@@G@@          LA        A2,ACTNDX         . GET THE ACTION INDEX@I@N@M      YA
)@@G@@    EX        ACTION,A3         . PERFORM AN ACTION (PUT SOMETHING IN A3YB
)@@G@@)     @I@@@N          EX        ACTION,A2         . PERFORM AN ACTION (PYC
)@@G@@UT SOMETHING IN A2)     @F@N@M          JZ        A3,XISNULL        . IFYD
)@@G@@ A3=0 WE GOT A NULL LINK@F@@@N          JZ        A2,XISNULL        . IFYE
)@@G@@ A2=0 WE GOT A NULL LINK@G@@@M          LA        A4,XOKSTA         . GEYF
)@@G@@T STATE WHEN X IS NOT NULL    @H@N@M          JNZ       A4,NEWSTA       YG
)@@G@@  . IF A4 IS REAL, WE HAVE A NEW STATE    @H@@@N          JNZ       A4,VYH
)@@G@@ISITEST       . IF A4 IS REAL, GO SEE IF WE VISIT     @F@@@N. WE HAVE JUYI
)@@G@@ST LINKED UP; NOW WE MUST DETERMINE FROM WHICH SON    @F@@@N          JZYJ
)@@G@@        A5,TRAQUIT        . IF LEVEL=0 - WE'RE DONE   @E@N@M          TNYK
)@@G@@E       A2,LLINK,A3       . IS ROOT A LEFT SON? @E@@@N          TNE     YL
)@@G@@  A3,AVLLFL,A2      . IS ROOT A LEFT SON? @F@@@M          LA        A4,LYM
)@@G@@SRSTA         . YES, GET LEFT SON STATE   @F@N@M          TNE       A2,RYN
)@@G@@LINK,A3       . OR, IS ROOT A RIGHT SON?  @F@@@N          TNE       A3,AYO
)@@G@@VLRTL,A2      . OR, IS ROOT A RIGHT SON?  @F@@@M          LA        A4,RYP
)@@G@@SRSTA         . YES, GET RIGHT SON STATE  @G@@@N          AN,U      A5,2YQ
)@@G@@              . SUBTRACT TWO TO GET -1 BELOW    @F@@@N          J       YR
)@@G@@  NEWROOT           . AND GO GET A NEW ROOT     @F@N@MNEWSTA            YS
)@@G@@                    . COME HERE WITH A NEW STATE@F@@@N. WE PERFORMED AN YT
)@@G@@ACTION, GOT A NEW STATE -- DO WE VISIT OR LOOP? @]@@@NVISITEST    @I@N@MYU
)@@G@@          JEZ       GNSFLG VISITIME   . IF NEXT STATE FLAG NOT SET--VISIYV
)@@G@@T THIS N    @H@@@N          JEZ       GNSFLG VISITIME   . IF GO-TO-NEXT-YW
)@@G@@STATE FLAG CLEAR, VISIT @F@@@N. SINCE WE'RE NOT VISITING THIS NODE, WE MYX
)@@G@@UST HAVE LINKED DOWN    @]@@@NNEWROOT     @E@@@N          LA,U      A3,,YY
)@@G@@A2            . SET THE NEW ROOT    @G@@@N          AA,U      A5,1      YZ
)@@G@@        . ADD ONE TO THE CURRENT DEPTH    @]@@@NNEWSTATE    @G@@@M      ZA
)@@G@@    LA        A1,A4             . COPY NEW STATE TO STATE REG     @G@N@MZB
)@@G@@          LA        A2,A3             . & MAKE NEW SON THE ROOT NODE    ZC
)@@G@@@H@@@M          J         NEXTSTATE         . & GO DO SOMETHING IN THE NZD
)@@G@@EXT STATE   @G@N@M. NO MOE LINKS FROM THIS STATE & NODE, SO GET NEXT STAZE
)@@G@@TE & CONTINUE     @G@@@N. NO MORE LINKS FROM THIS STATE & NODE, SO GET NZF
)@@G@@EXT STATE & CONTINUE    @]@@@MXISNULL     @E@@@M          LA        A4,XZG
)@@G@@NLSTA         . GET X IS NULL STATE @G@N@M          JZ        A4,,X11   ZH
)@@G@@        . TAKE NO MORE NODES EXIT IF =0   @G@@@N          JZ        A4,TZI
)@@G@@RAQUIT        . TAKE NO MORE NODES EXIT IF =0   @F@N@M          J       ZJ
)@@G@@  NEWSTA            . OTHERWISE, WE GOTTA GO ON @F@@@N          J       ZK
)@@G@@  NEWSTATE          . OTHERWISE, WE GOTTA GO ON @[@@@M.     @F@@@M. TIMEZL
)@@G@@ TO VISIT A NODE; RETURN CURRENT INFO TO USER IN A0, SO HE  @B@@@M. CAN ZM
)@@G@@GIVE IT BACK TO US ON NEXT CALL.    @[@@@M.     @]@@@MVISITIME    @F@@@NZN
)@@G@@          LA        A1,A4             . DON'T FORGET NEXT STATE   @G@@@NZO
)@@G@@          AX,U      X11,1             . BUMP ADDR FOR NORMAL RETURN     ZP
)@@G@@@G@N@M          LSSL      A1,36-6           . PUT ALL THE INFO BACK TOGEZQ
)@@G@@THER  @H@N@M          LDSL      A0,18+6           . H1 OF A0=TRAVERSAL IZR
)@@G@@NDEX*/6+STATE     @E@N@M          LXM,U     A0,,A2            . AND THE ZS
)@@G@@NODE ADDRESS@E@N@M          J         1,X11             . TAKE NORMAL EXZT
)@@G@@IT    @A@@@N. PACK THE ARGUMENTS BACK TOGETHER  @]@@@NTRAQUIT     @C@@@NZU
)@@G@@          LA        A2,A5             . A2=DEPTH@E@@@N          LSSL    ZV
)@@G@@  A3,18             . A3=(ROOTADDR,0)     @F@@@N          LDSL      A2,3ZW
)@@G@@6-6           . A2=(DEPTH,ROOTADDR,0)     @G@@@N          LDSL      A1,3ZX
)@@G@@6-6           . A1=(STATE,DEPTH,ROOTADDR,0)     @H@@@N          LDSL    ZY
)@@G@@  A0,36-6           . A0=(TRAV INDEX,STATE,DEPTH,ROOTADDR)  @C@@@N      ZZ
)@@G@@    J         0,X11             . RETURN  @[@@@M/.    @E@@@M. HERE ARE TAA
)@@G@@HE STATE TABLES THAT CONTROL THE SUBROUTINE.    @[@@@M.     @^@@@MP     AB
)@@G@@    PROC      *1  @[@@@N.     @F@@@N. THIS PROC PRODUCES THE STATE DIAGRAC
)@@G@@AM IN THE FORM OF A TABLE.    @E@@@N. EACH WORD IN THE TABLE IS INDEXED AD
)@@G@@TO BY THE CURRENT STATE.@G@@@N. S1=ACTION INDEX; INDICATES WHICH INSTRUCAE
)@@G@@TION TO EXECUTE TO OBTAIN     @A@@@N.    THE NEXT NODE IN THE SEQUENCE. AF
)@@G@@@G@@@N. S2=NEXT STATE IF THE NEXT NODE IN THE SEQUENCE IS NULL. STATE ZEAG
)@@G@@RO    @^@@@N.    IS TERMINAION.     @H@@@N. S3=NEXT STATE IF THE NEXT NOAH
)@@G@@DE IS THE SEQUNCE IS NOT NULL. A ZERO STATE HERE@H@@@N.    INDICATES THAAI
)@@G@@T THE CURRENT NODE MUST BE TESTED FOR RIGHT/LEFT-HANDEDNESS @E@@@N.    AAJ
)@@G@@ND AN APPROPRIATE STATE CHOSEN FROM EITHER S5 OR S6.  @F@@@N. S4=LOOP FLAK
)@@G@@AG; INDICATES WHETHER OR NOT TO IMMEDIATELY PROCEED   @H@@@N.    TO THE AL
)@@G@@NEXT STATE (FROM S2 OR S3). IF ZERO, THEN VISIT (RETURN WITH)     @^@@@NAM
)@@G@@.    THE CURRENT NODE.  @D@@@N. S5=NEXT STATE IF THE CURRENT NODE IS A LAN
)@@G@@EFT SON.    @D@@@N. S6=NEXT STATE IF THE CURRENT NODE IS A RIGHT SON.   AO
)@@G@@@[@@@N.     @#@@@MSTATETABLE* NAME  @E@N@MP(1,4)    EQU       4         AP
)@@G@@        . STATE 4 IS ULINK    @E@@@NP(1,4)    EQU       LINKUP          AQ
)@@G@@  . STATE 4 IS ULINK    @^@@@MI         REPEAT    4   @B@@@MF         EQAR
)@@G@@U       P(1,I)=VISITROOT  .   @F@@@MXNULL     EQU       F+(I=4)->0!I+1  AS
)@@G@@  . NEXT STATE IF X IS NULL   @G@@@MXOK       EQU       I=4->0!F->I+1!1 AT
)@@G@@  . NEXT STATE IF X IS NOT NULL     @G@N@M          DO P(1,I)=LINKLEFT ,AU
)@@G@@LS EQU P(1,I+1) . LEFT SON SUCCESSOR STATE@G@@@N          DO P(1,I)=LINKAV
)@@G@@LEFT ,LS EQU I+1 . LEFT SON SUCCESSOR STATE     @H@N@M          DO P(1,IAW
)@@G@@)=LINKRIGHT ,RS EQU P(1,I+1) . RIGHT SON SUCCESSOR STATE    @G@@@N      AX
)@@G@@    DO P(1,I)=LINKRIGHT ,RS EQU I+1 . RIGHT SON SUCCESSOR STATE   @G@@@MAY
)@@G@@          $GFORM 6,P(1,I),6,XNULL,6,XOK,6,\F,6,I=4->LS!0,6,I=4->RS!0    AZ
)@@G@@@#@@@M          ENDR    @#@@@M          END     @[@@@N.     @^@@@NP     BA
)@@G@@    PROC      *4  @[@@@N.     @F@@@N. THIS PROC PRODUCES THE ACTIONS IN BB
)@@G@@THE ORDER DETERMINED THE VALUE@F@@@N. OF P(I,1) SO AS TO MAKE THE ACTIONBC
)@@G@@S OCCUR AT THE PROPER INDEX.  @[@@@N.     @#@@@NACTION*   NAME    @ @@@NBD
)@@G@@TAB       EQU       $NODE     @^@@@NI         REPEAT    4   @F@@@N      BE
)@@G@@    DO P(I)=2 ,TAB([P(I,1)]) EQU $L1(P(I,2):',A3',P(I,1))   @E@@@N      BF
)@@G@@    DO P(I)=1 ,TAB([P(I,1)]) EQU $L1(',A3,U',P(I,1))  @#@@@N          ENBG
)@@G@@DR    @E@@@NI         DO 4 , D$I ,'LA','A2,':TAB(I,1),'. ':TAB(I,2)     BH
)@@G@@@#@@@N          END     @[@@@N.     @ @@@N. THIS IS THE TOP LEVEL PROC  BI
)@@G@@@H@@@N. THE ARGUMENTS ARE:   <TRAVERSAL INDEX>,<FIRST STATE>,<2ND STATE>BJ
)@@G@@,<3RD STATE>@ @@@N.  FOR ALL TRAVERSAL TYPES    @[@@@N.     @^@@@NP     BK
)@@G@@    PROC      *12 @#@@@NSTATES*   NAME    @G@@@NI         DO 1,P-1,2 ,STBL
)@@G@@A$$(I) STATETABLE P(I+1,1),P(I+1,2),P(I+1,3)    @^@@@NTRATBL*   EQU     BM
)@@G@@  $   @H@@@NI         DO STA$$ , I$ ,,,A1,,STA$$(I*2-1)-1  . GEN INDEX IBN
)@@G@@NTO STATE TABLE   @#@@@N          END     @[@Q@M.     @[@@@Q/.    @ @@@MBO
)@@G@@. GENERATE THE STATE TABLES   @[@@@M.     @^@@@MVISITROOT EQU       1   BP
)@@G@@@^@@@MLINKLEFT  EQU       2   @^@@@MLINKRIGHT EQU       3   @^@@@NLINKUPBQ
)@@G@@    EQU       4   @[@@@N.     @[@@@M.     @D@N@MPRETBL    STATETABLE VISBR
)@@G@@ITROOT, LINKLEFT, LINKRIGHT   @#@@@Q          RESUME  @B@@@N          STBS
)@@G@@ATES                      ;   @D@@@N          PREORDER   VISITROOT, LINKBT
)@@G@@LEFT, LINKRIGHT ; @D@N@MINTBL     STATETABLE LINKLEFT, VISITROOT, LINKRIBU
)@@G@@GHT   @D@@@N          INORDER    LINKLEFT, VISITROOT, LINKRIGHT ; @D@N@MBV
)@@G@@POSTBL    STATETABLE LINKLEFT, LINKRIGHT, VISITROOT   @D@@@N          POBW
)@@G@@STORDER  LINKLEFT, LINKRIGHT, VISITROOT ; @D@N@MRPRETBL   STATETABLE VISBX
)@@G@@ITROOT, LINKRIGHT, LINKLEFT   @D@@@N          REPREORDER VISITROOT, LINKBY
)@@G@@RIGHT, LINKLEFT ; @D@N@MRINTBL    STATETABLE LINKRIGHT, VISITROOT, LINKLBZ
)@@G@@EFT   @D@@@N          REVINORDER LINKRIGHT, VISITROOT, LINKLEFT ; @D@N@MCA
)@@G@@RPOSTBL   STATETABLE LINKRIGHT, LINKLEFT, VISITROOT   @D@@@N          RECB
)@@G@@VPOSTORDER LINKRIGHT, LINKLEFT, VISITROOT @[@@@M.     @E@N@M. VECTOR TO CC
)@@G@@GET SOMETHING INDEXED BY THE TRAVERSAL INDEX    @[@N@M.     @C@N@MTRATBLCD
)@@G@@    J         PRETBL,A1         . PREORDER@C@N@M          J         INTBCE
)@@G@@L,A1          . INORDER @D@N@M          J         POSTBL,A1         . POCF
)@@G@@STORDER     @E@N@M          J         RPRETBL,A1        . REVERSE PREORDCG
)@@G@@ER    @E@N@M          J         RINTBL,A1         . REVERSE INORDER     CH
)@@G@@@E@N@M          J         RPOSTBL,A1        . REVERSE POSTORDER   @[@N@MCI
)@@G@@.     @^@@@M. VECTOR OF ACTIONS     @[@@@M.     @E@N@MACTION    *       CJ
)@@G@@  0                 . ORIGIN ONE TABLE    @E@@@NACTION    EQU       $-1 CK
)@@G@@              . ORIGIN ONE TABLE    @I@@@N   ACTION 'VISITROOT' 'LINKLEFCL
)@@G@@T','AVLLFL' 'LINKRIGHT','AVLRTL' 'LINKUP','AVLUPL'    @E@N@M          LACM
)@@G@@        A3,LLINK,A2       . X <- LEFTSON (ROOT) @E@N@M          LA      CN
)@@G@@  A3,RLINK,A2       . X <- RIGHTSON (ROOT)@D@N@M          LA,U      A3,,CO
)@@G@@A2            . X <- ROOT     @E@N@M          LA        A3,ULINK,A2     CP
)@@G@@  . X <- FATHER (ROOT)  @[@@@M.     @E@@@M. EQUFS TO OBTAIN THE SIXTHWORCQ
)@@G@@DS OUT OF THE STATE TABLES    @[@@@M.     @D@@@MACTNDX    EQUF      *TRACR
)@@G@@TBL,A0,S1     . ACTION INDEX  @F@@@MXNLSTA    EQUF      *TRATBL,A0,S2   CS
)@@G@@  . NEXT STATE IF X IS NULL   @G@@@MXOKSTA    EQUF      *TRATBL,A0,S3   CT
)@@G@@  . NEXT STATE IF X IS NOT NULL     @F@@@MGNSFLG    EQUF      *TRATBL,A0CU
)@@G@@,S4     . GO-TO-THE-NEXT STATE FLAG @E@@@MLSRSTA    EQUF      *TRATBL,A0CV
)@@G@@,S5     . LEFT SON ROOT STATE @E@@@MRSRSTA    EQUF      *TRATBL,A0,S6   CW
)@@G@@  . RIGHT SON ROOT STATE@#@@@M          END     ___@@@TE TABLES THAT CONCX
)@@G@@TROL THE SUBROUTINE.    @[@@@M.     @^@@@MP         PROC      *1  @[@@@NCY
)@@G@@*[S@@@*SDFF*@#@@@=          $EJECT  @ @=@<          INCLUDE   'AXR$'    CZ
)@@G@@@ @=@<          INCLUDE   'JPROC$'  @#@@@=          LIBRARY @ @@@<      DA
)@@G@@    INCLUDE   'AVL$DEF' @[@@@=.     @B@@@=. AVL TREE MAINTENAINCE SUBROUDB
)@@G@@TINE PACKAGE@[@@@=.     @G@@@=. DESIGNED AND IMPLEMENTED BY  ALAN K. STEDC
)@@G@@BBENS, UOMCSC SYSTEMS STAFF.  @[@@@=.     @#@@@=          IBANK   @A@@@=DD
)@@G@@NALPHA    EQUF      AVL$NALPHA,,H1  @^@@@=AREG      EQU       A5  @^@@@=DE
)@@G@@XREG      EQU       X11 @^@@@=ALPHA     EQU       A1  @[@@@<.     @A@@@<DF
)@@G@@. AVL$DELETE -- PERFORM A DELETION  @[@@@<.     @G@@@<. THIS IS THE WORKDG
)@@G@@ER ROUTINE FOR AVLDELETE, AND AVLDELINK. INPUT TO THIS@G@@@<. ROUTINE ISDH
)@@G@@ THE OUTPUT FROM AVL$LOCATE. OUTPUT FROM THIS ROUTINE IS    @A@@@<. THE DI
)@@G@@ADDRESS OF THE NODE DELETED.  @[@@@<.     @#@=@<AVL$DELETE* ENTRY @]@@@=DJ
)@@G@@AVL$DELETE* @C@=@<          ENTER     '$DELETE',DEL$NUM DEL$TIM   @D@>@<DK
)@@G@@          LA,U      A2,,A2            . CLEAN UP A2   @D@@@<          JZDL
)@@G@@        A2,DENONE         . NONE DELETED  @ @@@&          INCR      DELEDM
)@@G@@TE    @ @@@&          TIMEON    DELETE    @E@=@<          SX        X11,DN
)@@G@@SAVE2         . SAVE CALLER'S ADDR  @E@@@=          SX        X11,DELINKDO
)@@G@@        . SAVE CALLER'S ADDR  @[@@@<.     @F@@@<. DELETION OF A GIVEN NODP
)@@G@@DE CAN BE REDUCED TO THE SIMPLE CASE OF   @H@@@<. DELETING A NODE WITH ADQ
)@@G@@T MOST ONE SON. IF THE NODE TO BE DELETED ALREADY     @H@@@<. HAS THIS PDR
)@@G@@ROPERTY THEN WE SIMPLY REMOVE IT. IF, HOWEVER, IT HAS TWO SONS    @G@@@<DS
)@@G@@. THEN WE EXCHANGE IT WITH EITHER ITS INORDER SUCCESSOR OR ITS INORDER  DT
)@@G@@@G@@@<. PREDECESSOR, WHICH WILL ALWAYS HAVE THIS PROPERTY, AND THEN DELEDU
)@@G@@TE    @B@@@<. THE GIVEN NODE FROM ITS NEW POSITION.   @[@@@<.     @H@=@<DV
)@@G@@DETRY     TZ        RLINK,A2          . IF EITHER LINK (OR BOTH) ARE NULDW
)@@G@@L     @H@@@=          TZ        RLINK,A2          . IF EITHER LINK (OR BDX
)@@G@@OTH) ARE NULL     @H@@@<          TNZ       LLINK,A2          . THEN IT'DY
)@@G@@S A SIMPLE MATTER TO DELETE   @D@@@<          J         DESIMPLE        DZ
)@@G@@  . ONE OR NONE   @D@@@<. HE'S GOT TWO SONS -- WE MUST FIND A 'REPLACEMEEA
)@@G@@NT'   @F@@@<. IF BALFAC(A2) = +1 THEN USE HIS INORDER SUCCESSOR, OTHERWIEB
)@@G@@SE USE@#@@@<. HIS PREDECESSOR.@F@@@<          LA        A1,BALFAC,A2    EC
)@@G@@  . GET HIS BALANCE FACTOR    @H@@@=          TNZ       A1              ED
)@@G@@  . UNLESS IT'S NULL-THEN IT'S ARBITRARY  @H@@@=          LA,U      A1,1EE
)@@G@@              . CHOOSE HIS RIGHT (IT DOESN'T MATTER)  @E@=@<          GEEF
)@@G@@TLINK   A5,A2             . GET LINK(ALPHA,A2)  @E@@@=          SET     EG
)@@G@@  A5 LINK(ALPHA,A2) . GET LINK(ALPHA,A2)  @G@@@<. NOW, UNTIL WE GET A NUEH
)@@G@@LL, KEEP LINKING UNTIL WE FIND A NULL LINK,     @B@@@<. THEN WE WILL HAVEI
)@@G@@E HIS PREDE/SUC-CESSOR. @E@=@<DELOOP    GETNLINK  A5,A5             . GEEJ
)@@G@@T NEXT LINK DOWN  @E@@@=DELOOP    SET       A5 LINK(-ALPHA,A5). GET NEXTEK
)@@G@@ LINK DOWN  @G@@@<          JNZ       A5,DELOOP         . KEEP GOING UNTEL
)@@G@@IL A5 IS NULL     @I@@@<          LA        A3,X11            . FORTUNATEM
)@@G@@ELY, X11 STILL HAS LAST GOOD LIN    @[@@@=.     @I@@@=. NOW THAT WE HAVEEN
)@@G@@ THE REPLACEMENT NODE, SEE IF IT IS A SON OF THE DELETE NODE;     @D@@@=EO
)@@G@@. BECAUSE IF IT IS, THEN THE WORK IS VERY SIMPLE.     @[@@@=.     @G@@@=EP
)@@G@@          TE        A3,RLINK,A2       . IS REPLACEMENT A SON OF A2?     EQ
)@@G@@@B@@@=          TNE       A3,LLINK,A2       .   @F@@@=          J       ER
)@@G@@  DESON             . YES -- GO DO IT QUICKLY   @[@@@=.     @H@@@=. THE ES
)@@G@@REPLACEMENT IS NOT A SON, THEREFORE WE MUST PLACE HIM IN A2'S POSITION, ET
)@@G@@@H@@@=. AND TREAT THE REPLACEMENT'S FATHER AS THE NEW BALANCE POINT AS IEU
)@@G@@T WAS TRULY @ @@@=. HIS SON THAT WAS DISPLACED. @A@@@=. T = FATHER OF A3EV
)@@G@@ = BALANCE POINT  @[@@@=.     @D@@@=          SET       A4 ULINK,A3     EW
)@@G@@  . T <- ULINK(A3)@D@@@=          SET       LINK(-ALPHA,A4) LINK(ALPHA,AEX
)@@G@@3) .  @F@@@=          CSET      ULINK,AREG A4     . ULINK(LINK(ALPHA,A3)EY
)@@G@@) <- T@F@@@=          SET       LINKS,A3 LINKS,A2 . LINKS(A3) <- LINKS(AEZ
)@@G@@2)    @F@@@=          LX        X11,LLINK,A3      . ULINK(LLINK(A3)) <- FA
)@@G@@A3    @B@@@=          SA        A3,ULINK,X11      .   @F@@@=          LXFB
)@@G@@        X11,RLINK,A3      . ULINK(RLINK(A3)) <- A3    @B@@@=          SAFC
)@@G@@        A3,ULINK,X11      .   @[@@@=.     @H@@@=. ALL COMMON CODE ENTER FD
)@@G@@HERE WITH A4 POINTING TO THE BALANCE POINT (IE: THE   @ @@@=. DELETED NOFE
)@@G@@DE'S FATHER).     @[@@@=.     @[@@@=DECOMM@F@@@=          LA        A5,BFF
)@@G@@ALFAC,A2      . BALFAC(A3) <- BALFAC(A2)  @B@@@=          SA        A5,BFG
)@@G@@ALFAC,A3      .   @E@@@=          LA        A5,RANK,A2        . RANK(A3)FH
)@@G@@ <- RANK(A2)@B@@@=          SA        A5,RANK,A3        .   @F@@@=      FI
)@@G@@    LX        X11,ULINK,A2      . GET FATHER OF DELETE NODE @F@@@=      FJ
)@@G@@    SX        X11,ULINK,A3      . SET AS FATHER OF NEW NODE @H@@@=      FK
)@@G@@    JEZ,U     0,X11 DENEWR      . IF NO FATHER -- SET NEW ROOT NODE     FL
)@@G@@@E@@@=          TNE       A2,RLINK,X11      . WAS HE A RIGHT SON? @E@@@=FM
)@@G@@          SA        A3,RLINK,X11      . YES -- A3 IS TOO    @D@@@=      FN
)@@G@@    TNE       A2,LLINK,X11      . LEFT SON?     @C@@@=          SA      FO
)@@G@@  A3,LLINK,X11      . YES     @[@@@=DECOMC@H@@@=          LA        A3,AFP
)@@G@@4             . THIS IS THE INITIAL BALANCE POINT     @F@@@=          JEFQ
)@@G@@,U      A1,1 DERFIX       . IF ALPHA=+1 GO FIX RANK   @D@@@=          J FR
)@@G@@        DEBAL             . GO BALANCE    @[@@@=.     @B@@@=. PREDECESSOFS
)@@G@@R/SUCCESSOR NODE IS A SON     @[@@@=.     @[@@@=DESON @D@@@=          SEFT
)@@G@@T       LINK(-ALPHA,A3) LINK(-ALPHA,A2)   @G@@@=          CSET      ULINFU
)@@G@@K,AREG A3     . ULINK(LINK(-ALPHA,A3)) <- A3    @E@@@=          LA      FV
)@@G@@  A1,NALPHA,A1      . GET NEGATIVE ALPHA  @F@@@=          LA        A4,AFW
)@@G@@3             . A3 IS BALANCE POINT TOO   @D@@@=          J         DECOFX
)@@G@@MM            . JOIN THE CROWD@[@@@=.     @D@@@=. DELETED NODE HAS NO FAFY
)@@G@@THER -- WE MUST RESET THE ROOT@[@@@=.     @[@@@=DENEWR@D@@@=          SAFZ
)@@G@@        A3,ROOT           . SET NEW ROOT  @F@@@=          J         DECOGA
)@@G@@MC            . & RETURN TO COMMON CODE   @H@=@<          DS        A0,RGB
)@@G@@1             . NOW SWITCH HIS LINKS,BALFAC,& RANK    @B@=@<          DLGC
)@@G@@        A0,LINKS,A2       .   @A@=@<          DL        A4,LINKS,A3     GD
)@@G@@@A@=@<          DS        A0,LINKS,A3     @A@=@<          DS        A4,LGE
)@@G@@INKS,A2     @ @=@<          IF        VARYKEYS  @F@=@<          SSL     GF
)@@G@@  A1,12             . RESTORE ORIGINAL KEYSIZES @ @=@<          SSL     GG
)@@G@@  A5,12     @A@=@<          SA        A1,KEYSIZ,A2    @A@=@<          SAGH
)@@G@@        A5,KEYSIZ,A3    @ @=@<          ENDF      VARYKEYS  @ @=@<      GI
)@@G@@    IF        RANKS     @E@=@<          LA        A4,RANK,A2        . NOGJ
)@@G@@W SWITCH THE RANKS@ @=@<          LA        A5,RANK,A3@ @=@<          SAGK
)@@G@@        A4,RANK,A3@ @=@<          SA        A5,RANK,A2@ @=@<          ENGL
)@@G@@DF      RANKS     @D@=@<          DL        A0,R1             . RESTORE GM
)@@G@@A0,A1 @E@=@<          J         DETRY             . NOW, GO TRY AGAIN   GN
)@@G@@@[@@@<.     @E@@@<. WELL, NOW WE'RE TO THE SIMPLE PART: AT MOST, ONE LINGO
)@@G@@K     @[@@@<.     @G@@@<DESIMPLE  LA        A3,ULINK,A2       . GET FATHGP
)@@G@@ER OF NODE TO DELETE    @F@@@=          LA        A1,RLINK,A2       . GEGQ
)@@G@@T A SON OF DELETE NODE  @D@@@=          TZ        LLINK,A2          . WAGR
)@@G@@S IT RIGHT? @F@@@=          LA        A1,LLINK,A2       . NOPE. GET THE GS
)@@G@@NON-NULL SON@F@@@=          TZ,U      0,A1              . IS THERE A SONGT
)@@G@@ AT ALL?    @F@@@=          SA        A3,ULINK,A1       . YES, SET HIS NGU
)@@G@@EW FATHER   @G@@@=          JZ        A3,DEROOT         . SKIP OUT IF THGV
)@@G@@IS IS ROOT NODE   @G@@@=          JE        A2,RLINK,A3 DERITE . SKIP IFGW
)@@G@@ DELETE NODE IS ON RIGHT@E@@@=          SA        A1,LLINK,A3       . SEGX
)@@G@@T LINK TO NEW SON @G@@@=          J         DERFIX            . GO FIX TGY
)@@G@@HE RANK & THEN BALANCE  @^@@@=. NODE WAS ON RIGHT     @[@@@=DERITE@E@@@=GZ
)@@G@@          SA        A1,RLINK,A3       . MAKE NEW RIGHT SON  @G@@@=      HA
)@@G@@    LA,U      A1,2              . BALFAC FOR DELETED RIGHT NODE   @D@@@=HB
)@@G@@          J         DEBAL             . GO BALANCE    @H@=@<          JZHC
)@@G@@        A3,DENOPATER      . SKIP OUT IF NO FATHER OF THIS NODE    @G@=@<HD
)@@G@@          LA        A1,BALFAC,A3      . GET THE ELDER'S BALANCE FACTOR  HE
)@@G@@@G@=@<          LA        A5,RLINK,A2       . ASSUME A2'S SON IS ON RIGHHF
)@@G@@T     @F@=@<          TZ        LLINK,A2          . IF LLINK(A2) IS NULLHG
)@@G@@--OK  @G@=@<          LA        A5,LLINK,A2       . NOPE, GET LEFT LINK HH
)@@G@@INSTEAD     @G@=@<          SETLINK   A5,A3             . PLACE A2'S LINHI
)@@G@@K TO A2'S FATHER  @E@=@<          IF        RANKS             . FIX FATHHJ
)@@G@@ER'S RANK   @G@=@<          JE,U      A1,1 DEROK        . IF SON IS A RIHK
)@@G@@GHT SON--SKIP IT  @E@=@<          SUBRANKS  A3,*1             . FIX FATHHL
)@@G@@ER'S RANK   @ @=@<          ENDF      RANKS     @[@@@<.     @G@@@<. THE HM
)@@G@@LOOP BELOW RESETS THE BALANCE PARAMETER EVERY TIME, ACCORDING     @G@@@<HN
)@@G@@. TO THE POSITION OF THE MOST RECENT BALANCE NODE WITH RESPECT TO ITS   HO
)@@G@@@]@@@<. FATHER.   @[@@@<.     @G@@@<DEROK     LA,U      A1,2            HP
)@@G@@  . ASSUME -1 FOR DELETED RLINK SON @F@@@<          JE        A2,RLINK,AHQ
)@@G@@3 DEBAL . GO AHEAD IF IT WAS CORRECT@E@=@<          LA,U      A1,1      HR
)@@G@@        . NOT CORRECT, FIX IT @[@@@=DERFIX@E@@@=          LA,U      A1,1HS
)@@G@@              . NOT CORRECT, FIX IT @E@=@<          IF        RANKS     HT
)@@G@@        . AND FIX HIS RANK TOO@F@@@<          SUBRANKS  A3,*1           HU
)@@G@@  . RANK(A3) <- RANK(A3) - 1  @ @=@<          ENDF      RANKS     @[@@@<HV
)@@G@@DEBAL @H@@@=          TNE       A3,RNODE          . HAVE WE REACHED THE HW
)@@G@@RANK NODE YET?    @D@@@=          SZ        RNODE             . YES, SETHX
)@@G@@ FLAG @F@@@<          LA        A2,A3             . COPY CURRENT NODE TOHY
)@@G@@ A2   @E@@@<          LMJ       X11,AVL$BALANCE   . PERFORM THE MAGIC   HZ
)@@G@@@F@@@<          J         *$+1,A3           . HOP ON THAT ACTION INDEX  IA
)@@G@@@E@=@<          J         DENOBAL           . NO BALANCING DONE   @E@@@=IB
)@@G@@          *         DENOBAL           . NO BALANCING DONE   @E@=@<      IC
)@@G@@    J         DERELINK          . SINGLE ROTATION DONE@E@@@=          * ID
)@@G@@        DERELINK          . SINGLE ROTATION DONE@E@=@<          J       IE
)@@G@@  DERELINK          . DOUBLE ROTATION DONE@E@@@=          *         DEREIF
)@@G@@LINK          . DOUBLE ROTATION DONE@G@=@<          J         DEDONE    IG
)@@G@@        . SPECIAL CASE SINGLE ROT - DONE  @H@@@=          *         DEBAIH
)@@G@@LLED          . SPECIAL CASE SINGLE ROT - BALANCED    @^@@@<. NO BALANCIII
)@@G@@NG NECESSARY@G@=@<DENOBAL   JNEZ      BALFAC,A2 DEDONE  . IF BALFAC NOT IJ
)@@G@@NULL, WE'RE DONE  @G@@@=DENOBAL   JNEZ      BALFAC,A2 DEBALLED . IF BALFIK
)@@G@@AC NOT NULL, WE'RE DONE @E@@@<DERELINK  LA        A3,ULINK,A2       . GEIL
)@@G@@T NEXT FATHER     @F@@@<          JNZ       A3,DEROK          . IF IT'S IM
)@@G@@THERE, LOOP BACK  @[@@@=.     @G@@@=. WE STOPPED HERE BECAUSE THE TREE WIN
)@@G@@AS BALANCED, BUT THERE ARE STILL    @C@@@=. NODES ABOVE US WHOSE RANKS MIO
)@@G@@AY REQUIRE FIXING.@[@@@=.     @]@@@=DEBALLED    @[@@@=DERANK@E@@@=      IP
)@@G@@    LA        A3,A2             . SAVE CURRENT NODE   @E@@@=          LAIQ
)@@G@@        A2,ULINK,A2       . GET NEXT UP LINK    @E@@@=          JZ      IR
)@@G@@  A2,DEDONE         . QUIT ON THE TOP     @G@@@=          JNE       A3,LIS
)@@G@@LINK,A2 DERANK . LOOP BACK IF NOT A LEFT SON    @F@@@=          SUBRANKSIT
)@@G@@  A2,*1             . RANK(A2) <- RANK(A2) - 1  @F@@@=          JE      IU
)@@G@@  A2,RNODE DEDONE   . THIS IS THE LAST NODE     @ @@@=          J       IV
)@@G@@  DERANK    @F@@@<DEDONE    LA        A2,KNODE          . GET DELETED NOIW
)@@G@@DE ADDR     @E@@@$          DEC       A3,NNODES         . DECREMENT # OFIX
)@@G@@ NODES@D@=@<          LX        X11,SAVE2         . RESTORE ADDR  @D@@@=IY
)@@G@@          LX        X11,DELINK        . RESTORE ADDR  @ @@@&          TIIZ
)@@G@@MEOFF   DELETE    @[@@@<DENONE@C@=@<          EXIT      0,X11 '$DELETE' JA
)@@G@@DEL$TIM     @C@@@=          J         0,X11             . RETURN  @[@@@<JB
)@@G@@.     @B@=@<. NO FATHER, THAT MEANS THE TREE IS EMPTY @F@@@=. NO FATHER JC
)@@G@@IN SIMPLE CASE, THAT MEANS ONLY ONE NODE IN TREE LEFT @[@@@<.     @F@=@<JD
)@@G@@DENOPATER SZ        ROOT              . CLEAR OUT ROOT NODE ADDR  @[@@@=JE
)@@G@@DEROOT@E@@@=          SA        A1,ROOT           . THIS IS THE NEW ROOTJF
)@@G@@@C@=@<          J         DEDONE            . GO QUIT @F@@@=          J JG
)@@G@@        DEDONE            . AND THAT'S ALL WE GOTTA DO@#@@@<          ENJH
)@@G@@D     ___@@@        A5,RANK,A2@ @=@<          EN*[S@@@*SDFF*@#@@@H      JI
)@@G@@    $EJECT  @#@H@G          AXR$    @#@H@G          AVLDEF  @#@@@H      JJ
)@@G@@    LIBRARY @B@@@H          INCLUDE   'AVL$DEF'         .   @[@@@H.     JK
)@@G@@@B@@@H. AVL TREE MAINTENAINCE SUBROUTINE PACKAGE@[@@@H.     @G@@@H. DESIJL
)@@G@@GNED AND IMPLEMENTED BY  ALAN K. STEBBENS, UOMCSC SYSTEMS STAFF.  @[@@@HJM
)@@G@@.     @[@H@G.     @G@H@G. ROUTINE TO INITIALIZE, OR REINITIALIZE, THE AVJN
)@@G@@L FREE NODE LIST FROM A @H@H@G. BLOCK OF CORE. THIS ROUTINE DOES NOT CLEJO
)@@G@@AR THE ROOT NODE, SO IT MAY BE USED @F@H@G. ANYTIME THAT THE FREE NODE PJP
)@@G@@OOL IS EMPTY. TO INITIALIZE THE TREE@F@H@G. ITSELF, THE ROOT NODE CELL IJQ
)@@G@@N THE PACKET SHOULD BE CLEARED.     @[@H@G.     @#@H@G. A0 = PACKET ADDRJR
)@@G@@@B@H@G. A1 = (NODESIZE,FIRST ADDR OF BLOCK)     @ @H@G. A2 = LAST ADDR OJS
)@@G@@F BLOCK + 1 @^@H@G. LMJ   X11,AVLINIT     @[@H@G.     @#@H@G$(1)      LIJT
)@@G@@T     @]@H@GAVLINIT*    @C@H@G          ROUTINE   *'INIT',INITNUM INITTIJU
)@@G@@ME    @F@H@G          AN,U      A2,,A1            COMPUTE # OF WORDS AVAJV
)@@G@@ILABLE@F@H@G          LA        A4,A1             COPY (NODESIZE,FIRST AJW
)@@G@@DDR)  @E@H@G          SSL       A4,18             WE WANT ONLY NODESIZE JX
)@@G@@@E@H@G          DSL       A2,36             PREPARE TO DIVIDE     @F@H@GJY
)@@G@@          DI        A2,A4             COMPUTE # OF USABLE NODES   @H@H@GJZ
)@@G@@          SA        A1,AVAIL          INITIALIZE ADDR OF FIRST AVAIL NODKA
)@@G@@E     @[@H@GINLOOP@H@H@G          LA,U      A3,,*A1           GET CURRENKB
)@@G@@T NODE ADDR, BUMP TO NEXT     @G@H@G          SA        A1,LINKS,A3     KC
)@@G@@  SET LINK TO NEXT AVAILABLE NODE   @E@H@G          JGD       A2,INLOOP KD
)@@G@@        LINK ALL NODES THUSLY @E@H@G          SZ        LINKS,A1        KE
)@@G@@  END OF AVAIL LIST     @B@H@G          RETURN,X11 *'INIT' INITTIME     KF
)@@G@@@[@@@H.     @G@@@H. AVL$LOCATE -  GENERALIZED INTERNAL ROUTINE TO FIND NKG
)@@G@@ODES IN THE TREE. @[@@@H.     @]@@@H. INPUT:    @H@@@H.   X11[H1] = ADDRKH
)@@G@@ESS OF APPROPRIATE NODE COMPARISON ROUTINE (AVL$COMPARE,    @^@@@H.     KI
)@@G@@       AVL$TEST)  @D@@@H.    A1 = (# WRDS, SEARCHKEY ADDR)    -> LOCATE KJ
)@@G@@BY KEY@E@@@H.    A1 = RANK                        -> LOCATE BY RANK     KK
)@@G@@@ @@@H.    LMJ   X11,AVL$LOCATE     @[@@@H.     @]@@@H. OUTPUT:   @E@I@HKL
)@@G@@.   A2[H2] = ADDRESS OF NODE SOUGHT, OR ZERO IF NOT FOUND   @E@@@I.   A2KM
)@@G@@     = ADDRESS OF NODE SOUGHT, OR ZERO IF NOT FOUND   @A@I@H.   A2[H1] =KN
)@@G@@ BALANCE NODE = BNODE   @E@@@H.   A3[H2] = IMMEDIATE FATHER OF A2, OR WOKO
)@@G@@ULD-BE FATHER     @G@@@H.   A3[H1] = 1*/17 IF A2 IS/SHOULD BE LEFT SON, KP
)@@G@@ELSE ZERO FOR RIGHT SON @^@@@H.   RNODE = RANK NODE   @[@@@H.     @ @@@HKQ
)@@G@@. USES SAVE12,A1-A5,R1-R3     @[@@@H.     @#@@@H          IBANK   @]@@@HKR
)@@G@@AVL$LOCATE* @ @@@J          INCR      SEARCH    @ @@@J          TIMEON  KS
)@@G@@  SEARCH    @G@@@H          SX        X11,LOLINK        . SAVE X11 (WE'RKT
)@@G@@E GOING TO USE IT)@F@@@H          LA,U      A3,0              . NO FATHEKU
)@@G@@R TO THE ROOT     @G@@@H          LA        A2,ROOT           . START THKV
)@@G@@E SEARCH WITH THE ROOT  @H@@@H          LXI,U     A2,,A2            . ROKW
)@@G@@OT NODE IS ALSO INITIAL BALANCE NODE@E@@@H          SZ        RNODE     KX
)@@G@@        . CLEAR RANK NODE     @E@@@HLOLOOP                              KY
)@@G@@  . BASIC SEARCH LOOP   @F@@@H          JEZ,U     0,A2 LOFIN        . IFKZ
)@@G@@ NO NODES LEFT, SKIP OUT@G@@@H          LX        X11,CMPRTN        . GELA
)@@G@@T COMPARISON ROUTINE ADDR     @F@@@J          INCR      COMPARE         LB
)@@G@@  . COUNT THE COMPARISONS     @B@@@J          TIMEON    COMPARE         LC
)@@G@@  .   @E@@@H          LMJ       X11,,X11          . CALL THE ROUTINE    LD
)@@G@@@D@@@H. CAUTION -- THE ROUTINE JUST CALLED TRASHES A4-5,R1-2@E@@@H      LE
)@@G@@    J         LOEQL             . K = NODE(A2) - EXIT @F@@@HLOMARK    LMLF
)@@G@@J       X11,$+2           . K < NODE(A2) - SET FLAG   @F@@@H          LMLG
)@@G@@J       X11,$+1           . K > NODE(A2) - SET FLAG   @B@@@J          TILH
)@@G@@MEOFF   COMPARE           .   @E@@@H          TZ        BALFAC,A2       LI
)@@G@@  . BALANCE FACTOR NULL?@F@@@H          LXI,U     A2,,A2            . NOLJ
)@@G@@, THIS IS BALANCE NODE  @F@@@H          LA,U      A3,,A2            . SALK
)@@G@@VE A2 AS CURRENT FATHER @F@@@H          J         $-LOMARK,X11      . BRLL
)@@G@@ANCH ON INDEX 1 OR 2    @D@@@H          J         LOLEFT            . LILM
)@@G@@NK LEFT     @^@@@H. WE'RE TO LINK RIGHT   @E@@@H          LXM       A2,RLN
)@@G@@LINK,A2       . LINK TO THE RIGHT   @D@@@H          J         LOLOOP    LO
)@@G@@        . DO IT AGAIN   @^@@@H. LINK DOWN TO THE LEFT @F@@@HLOLEFT    LXLP
)@@G@@I,U     A3,1*/17          . SET SIGN BIT FOR LEFT SON @G@@@H          TNLQ
)@@G@@Z       RNODE             . HAVE WE FOUND RANK NODE YET?    @E@@@H      LR
)@@G@@    SA        A2,RNODE          . NO, SO THIS IS IT   @E@@@H          LXLS
)@@G@@M       A2,LLINK,A2       . LINK TO THE LEFT    @D@@@H          J       LT
)@@G@@  LOLOOP            . TRY AGAIN     @#@@@H. EQUALS EXIT     @[@@@HLOEQL LU
)@@G@@@ @@@J          TIMEOFF   COMPARE   @G@@@H          JNEZ      RKFLG LOFILV
)@@G@@N       . IF KEYS THEN WE'RE STILL DONE   @G@@@H          JEZ       ISDFLW
)@@G@@LG LOMARK     . IF THIS IS INSERT, THEN CONTINUE@B@@@H. TIME TO CALL IT LX
)@@G@@QUITS - A2 HAS RESULTS  @[@@@HLOFIN @F@@@H          SA        A2,BKWORD LY
)@@G@@        . SET FINAL RESULT IN PACKET@F@@@I          LA,U      A2,,A2    LZ
)@@G@@        . RETURN ONLY NODE ADDRESS  @E@@@H          LX        X11,LOLINKMA
)@@G@@        . GET RETURN ADDR     @ @@@J          TIMEOFF   SEARCH    @C@@@HMB
)@@G@@          J         0,X11             . RETURN  @[@@@H/.    @F@@@H. AVL$MC
)@@G@@INSERT -- GENERALIZED INTERNAL ROUTINE TO INSERT NODES.     @]@@@H. INPUMD
)@@G@@T:    @A@I@H.   A2[H1] = BALANCE NODE = BNO_DE  @D@@@H.   A2[H2] = 0 (ORME
)@@G@@ ADDRESS OF NODE SOUGHT AND FOUND)  @G@@@H.   A3[H1] = 1*/17 IF NEW NODEMF
)@@G@@ SHOULD BE LEFT SON, ZERO FOR RIGHT SON   @C@@@H.   A3[H2] = PROSPECTIVEMG
)@@G@@ FATHER OF NEW NODE     @[@@@H.     @ @@@H. OUTPUT: A1=ADDR OF NODE     MH
)@@G@@@G@@@H.         A2=ZERO IF A1 IS A NEW NODE, =ADDR OF NODE ALREADY IN TRMI
)@@G@@EE    @ @@@H.         WITH THE SAME KEY.  @[@@@H.     @]@@@HAVL$INSERT* MJ
)@@G@@@D@@@H          SX        X11,INLINK        . SAVE HOME ADDR@C@I@H      MK
)@@G@@    JNEZ,U    0,A2 INFIN        . DIG IT  @G@@@I          JNZ       A2,IML
)@@G@@NFIN          . IF NODE ALREADY THERE, QUIT     @ @@@J          INCR    MM
)@@G@@  INSERT    @ @@@J          TIMEON    INSERT    @E@@@H          LA      MN
)@@G@@  A2,NODEADDR       . GET NEW NODE ADDR   @E@@@H          JNEZ,U    0,A3MO
)@@G@@ INLINKIT     . IS THERE A FATHER?  @G@@@H          SA        A2,ROOT   MP
)@@G@@        . NO, SET THIS GUY AS THE ROOT    @E@@@H          J         INLIMQ
)@@G@@NKED          . GO FINISH ELSEWHERE @G@@@HINLINKIT  JN        A3,$+3    MR
)@@G@@        . SHOULD NEW NODE HANG ON RIGHT?  @F@@@H          SA        A2,RMS
)@@G@@LINK,A3       . YES, HE'S A RIGHT SON     @^@@@H          J         $+2 MT
)@@G@@@E@@@H          SA        A2,LLINK,A3       . NO, HE'S A LEFT SON @F@@@HMU
)@@G@@INLINKED  SA        A3,ULINK,A2       . SET UPPER LINK TO ELDER   @D@@@HMV
)@@G@@          SZ        LINKS,A2          . CLEAR LINKS   @E@@@H          SZMW
)@@G@@        BALFAC,A2         . PERFECTLY BALANCED  @E@@@H          LA,U    MX
)@@G@@  A3,1              . FIX UP HIS RANK TOO @B@@@H          SA        A3,RMY
)@@G@@ANK,A2        .   @D@@@H. NOW WE MUST ADJUST THE BALANCE FACTORS AND THEMZ
)@@G@@ RANKS@D@@@H          LR,U      R1,1              . ALPHA = +1    @D@@@HNA
)@@G@@          LR,U      R2,2              . ALPHA = -1    @C@@@H          LANB
)@@G@@,U      A4,0              . FLAG(S) @G@@@H          SZ        R3        NC
)@@G@@        . WILL HAVE THE HEAVY SON OF BNODE@[@@@HINLOOP@E@@@H          LAND
)@@G@@        A1,ULINK,A2       . GET NEXT FATHER     @F@@@H          JZ      NE
)@@G@@  A1,INFIXED        . IF NO LINK, WE'RE DONE    @H@@@H          JN      NF
)@@G@@  A4,INNOTB         . SKIP TEST IF BALANCE NODE SEEN ALREADY@F@@@H      NG
)@@G@@    JNE       A1,BNODE INNOTB   . IS THIS THE BALANCE NODE? @D@@@H      NH
)@@G@@    AA        A4,(1*/35)        . YES, SET FLAG @I@@@H          SA      NI
)@@G@@  A2,R3             . AND SAVE HIS SON (FROM THE UPWARD PATH)     @[@@@HNJ
)@@G@@INNOTB@G@@@H          JNE       A2,RLINK,A1 INLLNK . IF NOT RIGHT SON, MNK
)@@G@@UST BE LEFT @I@@@H          JN        A4,INJOIN         . IF BALANCE FLANL
)@@G@@G SET, DON'T TOUCH BALFAC'    @E@@@H          SR        R1,BALFAC,A1    NM
)@@G@@  . SET BALFAC(A1) TO +1@D@@@H          J         INJOIN            . JONN
)@@G@@IN THE CROWD@E@@@H. WE HAVE A LEFT LINKED SON (A FATHER WITH A LEFT, THANO
)@@G@@T IS) @[@@@HINLLNK@G@@@H          JN        A4,$+2            . IF BALANNP
)@@G@@CE FLAG SET, DO NOTHING @E@@@H          SR        R2,BALFAC,A1      . SENQ
)@@G@@T BALFAC(A1) TO -1@H@@@H          JB        A4,INJOIN         . IF RANK NR
)@@G@@FLAG SET, DON'T MESS AROUND   @E@@@H          ADDRANKS  A1,*1           NS
)@@G@@  . FIX THIS GUY'S RANK @G@@@H          TNE       A1,RNODE          . IFNT
)@@G@@ THIS IS THE RANK NODE ITSELF @I@@@H          AA,U      A4,1            NU
)@@G@@  . THEN SET LOW BIT AND SKIP REST OF RANKS     @^@@@H. ALL GATHER 'ROUNNV
)@@G@@D     @[@@@HINJOIN@E@@@H          LA,U      A2,,A1            . COPY THINW
)@@G@@S NODE OVER @G@@@H          JNB       A4,INLOOP         . THERE'S MORE TNX
)@@G@@O GO, EVIDENTLY   @H@@@H          JP        A4,INLOOP         . WE HAVENNY
)@@G@@'T SEEN THE BALANCE NODE YET  @D@@@H. WELL, ALL BALANCE FACTORS, RANKS, NZ
)@@G@@HAVE BEEN UPDATED @]@@@HINFIXED     @E@@@H          LA        A2,BNODE  OA
)@@G@@        . GET BALANCE NODE    @H@@@H          LA        A3,R3           OB
)@@G@@  . AND GET THE BALANCE NODE'S WAYWARD SON@G@@@H          JZ        A3,IOC
)@@G@@NNOF          . IF A3=0, NO BALANCING NECESSARY @E@@@H          LA,U    OD
)@@G@@  A1,1              . ASSUME ALPHA = +1   @F@@@H          TE        A3,ROE
)@@G@@LINK,A2       . IS THIS A GOOD ASSUMPTION?@G@@@H          LA,U      A1,2OF
)@@G@@              . NO, WE ADDED ON THE LEFT, THEN  @F@@@H          LMJ     OG
)@@G@@  X11,AVL$BALANCE   . PERFORM BALANCING MAGIC   @[@@@HINNOF @E@@@H      OH
)@@G@@    SZ        A2                . CLEAR FLAG FOR USER @E@@@K          INOI
)@@G@@C       A3,NNODES         . INCREMENT # OF NODES@ @@@J          TIMEOFF OJ
)@@G@@  INSERT    @[@@@HINFIN @E@@@H          LA        A1,NODEADDR       . REOK
)@@G@@STORE USER'S A1   @ @@@H          LX        X11,INLINK@E@@@H          J OL
)@@G@@        0,X11             . RETURN TO CALLER    @[@H@G/.    @ @H@G. ROUTOM
)@@G@@INE TO PERFORM SEARCHES @[@H@G.     @D@H@G. THIS IS AN INTERNAL ROUTIE TON
)@@G@@O DO THE DIRTY WORK     @G@H@G. INPUT THE PACKET SHOLD BE PROPERLY INITIOO
)@@G@@ALIZED WITH THE KEY TO FIND.  @^@H@G. LMJ   X11,AVL$SEARCH  @F@H@G. OUTPOP
)@@G@@UT: A3[H2] = ADDRESS OF NODE SOUGHT, OR ZERO (NOT FOUND)    @F@H@G.     OQ
)@@G@@    A3[H1] = 1*/17 IF A3 IS LLINK OF ITS FATHER, ELSE ZERO  @A@H@G.     OR
)@@G@@    A2     = BALANCE NODE     @D@H@G.         A1     = FATHER OF A3 (OR OS
)@@G@@WOULD-BE FATHER)  @[@H@G.     @#@H@G$(1)      LIT     @]@H@GAVL$SEARCH* OT
)@@G@@@C@H@G          ROUTINE   '$SEARCH',SRCH$NUM SRCH$TIME@D@H@G          SXOU
)@@G@@        X11,SAVE1         SAVE RETURN ADDR@G@H@G          LA,U      A1,POV
)@@G@@KT            THE PACKET IS THE INITIAL FATHER  @F@H@G          LA      OW
)@@G@@  A2,ROOT           THE FIRST NODE TO BALANCE ON@G@H@G          LA      OX
)@@G@@  A3,A2             IS ALSO THE FIRST NODE IN THE TREE@[@H@GSELOOP@E@H@GOY
)@@G@@          TNZ,U     0,A3              ANY MORE NODES LEFT?  @B@H@G      OZ
)@@G@@    J         SEFIN             NOPE@E@H@G          LMJ       X11,AVL$COPA
)@@G@@MPARE   MAKE THE COMPARISON   @E@H@G          J         SEFIN           PB
)@@G@@  FOUND EQUIVILENT KEYS @E@H@GSEMARK    LMJ       X11,$+2           K < PC
)@@G@@KEY(P) - SET FLAG @E@H@G          LMJ       X11,$+1           K > KEY(P)PD
)@@G@@ - SET FLAG @F@H@G          TZ        BALFAC,A1         IS BALANCE FACTOPE
)@@G@@R NULL?     @H@H@G          LA,U      A2,,A1            NO, THIS IS THE PF
)@@G@@CURRENT BALANCE NODE    @G@H@G          J         $-SEMARK,X11      PERFPG
)@@G@@ORM APPROPRIATE RELINK ROUTINE@F@H@G          J         SELLNK          PH
)@@G@@  LINK LEFT 'CAUSE K<KEY(P)   @^@H@G. WE MUST LINK RIGHT    @E@H@G      PI
)@@G@@    LA        A3,RLINK,A3       LINK RIGTH: K > KEY(P)@C@H@G          J PJ
)@@G@@        SELOOP            TRY AGAIN @^@H@G. WE MUST LINK LEFT     @E@H@GPK
)@@G@@SELLNK    LA        A3,LLINK,A3       LINK LEFT: K < KEY(P) @G@H@G      PL
)@@G@@    LXI,U     A3,1*/17          SET SIGN BIT AS FLAG TO LLINK     @C@H@GPM
)@@G@@          J         SELOOP            TRY AGAIN @H@H@G. TIME TO RETURN -PN
)@@G@@ WE EITHER FOUND IT (A3 NONZERO) OR WE DIDN'T (A3 ZERO)     @D@H@GSEFIN PO
)@@G@@    LX        X11,SAVE1         RETURN ADDR     @B@H@G          RETURN,XPP
)@@G@@11 '$SEARCH' SRCH$TIME  @[@H@G/.    @H@H@G. THIS ROUTINE PERFORMS COMPARPQ
)@@G@@ISONS BETWEEN THE SEARCH KEY IN THE PACKET,     @A@H@G. AND THE KEY IN TPR
)@@G@@HE CURRENT NODE.  @^@H@G. A3 = ADDR OF NODE     @^@H@G. LMJ   X11,AVL$COPS
)@@G@@MPARE @^@H@G. PKTKEY = NODKEY(A3)   @^@H@G. PKTKEY < NODKEY(A3)   @^@H@GPT
)@@G@@. PKTKEY > NODKEY(A3)   @[@H@G.     @ @H@G. USES REGISTERS: A4,A5, R1,R2PU
)@@G@@@[@H@G.     @#@H@G$(1)      LIT     @]@H@GAVL$COMPARE*@D@H@G          ROPV
)@@G@@UTINE   '$COMPARE',COMP$NUM COMP$TIME     @C@H@G          ON        (KEYPW
)@@G@@SIZE<9)*(KEYSIZE>0)     @^@H@GP         PROC      *1  @#@H@GCOMPARE*  NAPX
)@@G@@ME    @ @H@GI         EQU       P(1,1)    @G@H@GF         EQU       KEYSPY
)@@G@@IZE-I         FLAG # OF WORDS REMAINING IN KEY  @G@H@GA         EQU     PZ
)@@G@@  ($+5)*(F>2)+(I$ ,,,X11)*(F<3) SET EQUALITY EXIT ADDR@^@H@G          ONQA
)@@G@@        F=1 @G@H@G          LA        A4,NODKEY+I,A3    GET CURRENT WORDQB
)@@G@@ FROM NODE KEY    @G@H@G          AN        A4,PKTKEY+I       MINUS CURRQC
)@@G@@ENT WORD FROM PACKET KEY@F@H@G          JZ        A4,A              TAKEQD
)@@G@@ EQUALS EXIT IF ZERO    @^@H@G          OFF       F=1 @^@H@G          ONQE
)@@G@@        F>1 @F@H@G          DL        A4,NODKEY+I,A3    GET TWO WORDS FRQF
)@@G@@OM NODE KEY @G@H@G          DAN       A4,PKTKEY+I       MINUS TWO WORDS QG
)@@G@@FROM PACKET KEY   @F@H@G          DJZ       A4,A              TAKE EQUALQH
)@@G@@ITY EXIT IF ZERO  @^@H@G          OFF       F>1 @G@H@G          JC      QI
)@@G@@  1,X11             TAKE PKTKEY < NODKEY(A3) EXIT     @G@H@G          J QJ
)@@G@@        2,X11             TAKE PKTKEY > NODKEY(A3) EXIT     @#@H@G      QK
)@@G@@    END     @F@H@GI         DO        KEYSIZE//2 , ;    FOR EVERY PAIR OQL
)@@G@@F WORDS     @D@H@G          COMPARE   (I-1)*2           COMPARE THE KEYSQM
)@@G@@@C@H@G          OFF       (KEYSIZE<9)*(KEYSIZE>0)     @C@H@G          ONQN
)@@G@@        (KEYSIZE>8)+(KEYSIZE<0)     @C@H@G          DS        A1,R1     QO
)@@G@@        SAVE A1,2 @E@H@G          LA,U      A1,PKTKEY         GET ADDR OQP
)@@G@@F SEARCH KEY@F@H@G          AU        A1,KSIZE          COMPUTE LAST ADDQQ
)@@G@@R OF KEY    @D@H@G          SA        A2,A5             A5 HAS THE LIMITQR
)@@G@@@E@H@G          LA,U      A2,NODKEY,A3      GET ADDR OF NODE KEY  @D@H@GQS
)@@G@@          LXI,U     A1,1              SET INCREMENTS  @^@H@G          LXQT
)@@G@@I,U     A2,1@[@H@GCMLOOP@F@H@G          LA        A4,,*A2           GET QU
)@@G@@WORD OF KEY IN NODE     @D@H@G          TE        A4,,A1            ARE QV
)@@G@@THEY EQUAL? @E@H@G          J         CMNEQL            NO, THEY'RE DIFFQW
)@@G@@ERENT @E@H@G          TLEM      A1,A5             ARE WE FINISHED THEN? QX
)@@G@@@F@H@G          J         CMLOOP            NOT QUITE, LOOP SOME MORE   QY
)@@G@@@D@H@G          DL        A1,R1             RESTORE REGS    @B@H@G      QZ
)@@G@@    RETURN,X11 '$COMPARE' COMP$TIME @[@H@G.     @C@H@G. WE FOUND TWO UNERA
)@@G@@QUAL WORDS - COMPARE THEM     @[@H@G.     @[@H@GCMNEQL@G@H@G          ANRB
)@@G@@        A4,,A1            FORM DIFFERENCE: NODKEY-PKTKEY    @F@H@G      RC
)@@G@@    JC        $+2               IF PKTKEY < NODKEY - SKIP   @G@H@G      RD
)@@G@@    AX,U      X11,1             PKTKEY > NODKEY, FUDGE RETURN     @D@H@GRE
)@@G@@          DL        A1,R1             RESTORE REGS    @C@H@G          RERF
)@@G@@TURN,1,X11 '$COMPARE' COMP$TIME     @C@H@G          OFF       (KEYSIZE>8RG
)@@G@@)+(KEYSIZE<0)     @#@H@G          END     @B@@@H          END           RH
)@@G@@              .   ___@@@*[S@@@*SDFF*@ @E@A          INCLUDE   'AXR$'    RI
)@@G@@@#@@@E          LIBRARY @ @@@A          INCLUDE   'AVL$DEF' @[@@@B.     RJ
)@@G@@@B@@@B. AVL TREE MAINTENAINCE SUBROUTINE PACKAGE@[@@@B.     @G@@@B. DESIRK
)@@G@@GNED AND IMPLEMENTED BY  ALAN K. STEBBENS, UOMCSC SYSTEMS STAFF.  @[@@@BRL
)@@G@@.     @#@@@B          IBANK   @[@@@A.     @D@D@A. AVLDELETE -- DELETE THRM
)@@G@@E GIVEN KEY FROM THE AVL TREE @D@@@D. AVLDK -- DELETE THE GIVEN KEY FROMRN
)@@G@@ THE AVL TREE     @[@@@A.     @#@@@A. A0 = PKT ADDR   @ @@@A. A1 = (# WORO
)@@G@@RDS, KEY ADDR)    @^@D@A. LMJ  X11,AVLDELETE    @#@@@D. LMJ  X11,AVLDK  RP
)@@G@@@D@@@A. A2 = ADDR OF NODE DELETED, OR ZERO IF NOT FOUND     @[@@@A.     RQ
)@@G@@@ @C@B          IF        KMODS     @^@D@C          IF        KEYS@C@B@ARR
)@@G@@AVLDELETE* PERFORM  AVL$SEARCH,AVL$DELETE 1,2   @]@D@BAVLDELETE*  @[@@@DRS
)@@G@@AVLDK*@ @D@B          ENTER     *'DELETE' @C@D@B          PERFORM  AVL$KRT
)@@G@@TEST,AVL$DELETE 1,2     @A@@@D          PERFORM   'KEY' 'DELETE'  @A@D@BRU
)@@G@@          EXIT      0,X11 *'DELETE' @ @C@B          ENDF      KMODS     RV
)@@G@@@^@D@C          ENDF      KEYS@#@@@A          END     ___@@@  DERFIX    RW
)@@G@@        . GO FIX THE RANK & THEN BALANCE  @^@@@-. NODE WAS ON RIGHT     RX
)@@G@@@[@@@-DERITE@E@@@-          SA        A1,RLINK,A*[S@@@*SDFF*@ @D@       RY
)@@G@@    INCLUDE   'AXR$'    @#@@@D          LIBRARY @ @@@           INCLUDE RZ
)@@G@@  'AVL$DEF' @[@@@A.     @B@@@A. AVL TREE MAINTENAINCE SUBROUTINE PACKAGESA
)@@G@@@[@@@A.     @G@@@A. DESIGNED AND IMPLEMENTED BY  ALAN K. STEBBENS, UOMCSSB
)@@G@@C SYSTEMS STAFF.  @[@@@A.     @#@@@A          IBANK   @[@@@ .     @G@C@ SC
)@@G@@. AVLDELINK -- DELETE THE NODE WITH THE SPECIFIED RANK FROM THE TREE    SD
)@@G@@@F@@@C. AVLDR -- DELETE THE NODE WITH THE SPECIFIED RANK FROM THE TREE  SE
)@@G@@@[@@@ .     @#@@@ . A0 = PKT ADDR   @ @@@ . A1 = RANK OF NODE TO DELETE SF
)@@G@@@^@C@ . LMJ X11,AVLDELINK     @#@@@C. LMJ X11,AVLDR   @D@@@ . A2 = ADDR SG
)@@G@@OF NODE DELETED, OR ZERO IF NOT FOUND     @[@@@ .     @ @B@A          IFSH
)@@G@@        RMODS     @ @C@B          IF        RANKS     @C@A@ AVLDELINK* PSI
)@@G@@ERFORM  AVL$FIND,AVL$DELETE 0,2     @]@C@AAVLDELINK*  @[@@@CAVLDR*@ @C@BSJ
)@@G@@          ENTER     *'DELINK' @C@C@A          PERFORM  AVL$RTEST,AVL$DELSK
)@@G@@ETE 0,2     @A@@@C          PERFORM   'RANK' 'DELETE' @A@C@B          EXSL
)@@G@@IT      0,X11 *'DELINK' @ @B@A          ENDF      RMODS     @ @C@B      SM
)@@G@@    ENDF      RANKS     @#@@@           END     ___@@@@]D^UA@]B^UAMAIN PSN
)@@G@@@]E^UA@@[__"@]H^UK@]B^U)@]C^U$  I/O RETN 0RETN K@] @.=@]E^T5/S@^U3 @@@@JSO
)@@G@@*[S@@@*SDFF*@#@@@W          $EJECT  @[@W@V/.    @B@Z@W          INCLUDE SP
)@@G@@  'AXR$'            .   @B@Y@W          INCLUDE   'JPROC$'          .   SQ
)@@G@@@B@Z@Y          INCLUDE   'JPROCS'          .   @#@@@Z          LIBRARY SR
)@@G@@@B@@@W          INCLUDE   'AVL$DEF'         .   @[@@@W.     @B@@@W. AVL SS
)@@G@@TREE MAINTENAINCE SUBROUTINE PACKAGE@[@@@W.     @G@@@W. DESIGNED AND IMPST
)@@G@@LEMENTED BY  ALAN K. STEBBENS, UOMCSC SYSTEMS STAFF.  @[@@@W.     @H@X@WSU
)@@G@@          IF        KEYS              . THIS WHOLE ELEMENT IS CONDITIONASV
)@@G@@L     @#@@@W          IBANK   @[@@@W.     @F@X@W. AVLSEARCH -- FIND A NOSW
)@@G@@DE IN THE TREE GIVEN A SPECIFIED KEY.     @E@@@X. AVLSK -- FIND A NODE ISX
)@@G@@N THE TREE GIVEN A SPECIFIED KEY.   @[@@@W.     @#@@@W. LA,U  A0,AVLPKT SY
)@@G@@@A@@@W. LA    A1,(# WORDS,SEARCHKEY ADDR) @^@X@W. LMJ   X11,AVLSEARCH   SZ
)@@G@@@#@@@X. LMJ   X11,AVLSK @E@@@W. <RETURN>: A2 = ADDR OF NODE SOUGHT, OR ZTA
)@@G@@ERO IF NOT FOUND  @[@@@W.     @]@X@WAVLSEARCH*  @[@@@XAVLSK*@ @X@W      TB
)@@G@@    ENTER     *'SEARCH' @C@X@W          PERFORM AVL$KTEST 1,1       . SUTC
)@@G@@CCINCT@C@@@X          PERFORM   'KEY' 'SEARCH'    . SUCCINCT@[@@@W.     TD
)@@G@@@F@X@W. AVLINSERT -- INSERT A NODE INTO THE TREE, WITH A GIVEN KEY.     TE
)@@G@@@E@@@X. AVLIK -- INSERT A NODE INTO THE TREE, WITH A GIVEN KEY.   @#@@@WTF
)@@G@@.   A0 = PKTADDR  @A@@@W.   A1 = (# WORDS IN KEY, NODE ADDR)@^@X@W.   LMTG
)@@G@@J  X11,AVLINSERT  @#@@@X.   LMJ  X11,AVLIK@G@@@W.   A2 = ZERO IF A1 INSETH
)@@G@@RTED, OTHERWISE A2=ADDR OF NODE WITH SAME KEY   @]@@@W.   AS A1.  @[@@@WTI
)@@G@@.     @F@X@W          IF        KEYSIN            . IF KEY MODIFICATIONSTJ
)@@G@@ OK   @]@X@WAVLINSERT*  @[@@@XAVLIK*@ @X@W          IF        VARYKEYS  TK
)@@G@@@E@@@W          LA        A2,A1             . COPY NODE POINTER   @G@@@WTL
)@@G@@          SSL       A2,18             . MOVE # OF WORDS IN KEY DOWN     TM
)@@G@@@E@@@W          SA        A2,KEYSIZ,A1      . SET INTO THE NODE   @ @X@WTN
)@@G@@          ENDF      VARYKEYS  @A@@@W          SA        A1,NODEADDR     TO
)@@G@@@ @@@W          AA,U      A1,KEY    @C@X@W          PERFORM   AVL$KTEST,TP
)@@G@@AVL$INSERT 1,0    @A@@@X          PERFORM   'KEY' 'INSERT'  @A@X@W      TQ
)@@G@@    EXIT      0,X11 *'SEARCH' @#@X@W          ENDF    @[@X@W/.    @H@W@VTR
)@@G@@. THIS ROUTINE PERFORMS COMPARISONS BETWEEN THE SEARCH KEY IN THE PACKETTS
)@@G@@,     @A@W@V. AND THE KEY IN THE CURRENT NODE.  @G@X@W. AVL$KTEST - COMPTT
)@@G@@ARE KEY IN CURRENT NODE (A1) WITH SEARCH KEY (A2)     @[@X@W.     @^@W@VTU
)@@G@@. A3 = ADDR OF NODE     @^@X@W. A1 = (# WORDS,KEYADDR)@ @X@W. A2 = ADDR TV
)@@G@@OF NODE TO TEST   @^@W@V. LMJ   X11,AVL$COMPARE @^@X@W. LMJ   X11,AVL$KTTW
)@@G@@EST   @#@W@V. PKTKEY = KEY(A3)@ @X@W. KEY IN NODE = SEARCH KEY    @#@W@VTX
)@@G@@. PKTKEY < KEY(A3)@ @X@W. KEY IN NODE > SEARCH KEY    @#@W@V. PKTKEY > KTY
)@@G@@EY(A3)@ @X@W. KEY IN NODE < SEARCH KEY    @[@X@V.     @ @W@V. USES REGISTZ
)@@G@@TERS: A4,A5, R1,R2@[@X@V.     @^@W@V          IF        KEYS@#@W@VAVL$COUA
)@@G@@MPARE* ENTRY@]@X@WAVL$KTEST*  @D@W@V          ENTER     '$COMPARE',COMP$UB
)@@G@@NUM COMP$TIME     @ @X@W          ENTER     '$KTEST'  @[@X@V.     @G@X@VUC
)@@G@@. WHEN THE KEYSIZE IS IN THE RANGE [1,8] THEN IT IS MORE EFFICIENT, WITHUD
)@@G@@@I@X@V. RESPECT TO TIME AND CORE, TO USE REPETITIOUS CODE. THE BASIC UNIUE
)@@G@@T OF CODE IS:     @[@X@V.     @F@W@V.         DL(LA)    A4,KEY+I,A3     UF
)@@G@@  GET A WORD FROM THE NODE KEY@F@X@W.         DL(LA)    A4,KEY+I,A2     UG
)@@G@@  GET A WORD FROM THE NODE KEY@G@W@V.         DAN(AN)   A4,PKTKEY+I,A3  UH
)@@G@@  SUBTRACT WORD USING PACKET KEY    @G@X@W.         DAN(AN)   A4,I,A1   UI
)@@G@@        SUBTRACT WORD USING PACKET KEY    @F@X@V.         DJZ(JZ)   A4,$UJ
)@@G@@+3            SKIP TO NEXT TEST WHEN EQUAL@G@W@V.         JC        1,X1UK
)@@G@@1             TAKE PKTKEY < KEY(A3)    EXIT     @F@X@W.         JC      UL
)@@G@@  1,X11             SEARCHKEY < KEY(A1)  EXIT   @G@W@V.         J       UM
)@@G@@  2,X11             TAKE PKTKEY > KEY(A3)    EXIT     @F@X@W.         J UN
)@@G@@        2,X11             SEARCHKEY > KEY(A1) EXIT    @]@X@V. ... ETC.  UO
)@@G@@@H@X@V. WHERE I RANGES FROM 0 TO KEYSIZE BY 2, REFLECTING THE CURRENT INUP
)@@G@@DEX INTO    @B@X@V. THE PORTION OF THE KEY BEING EXAMINED.  @G@X@V. DOUBUQ
)@@G@@LE WORD ARITHMETIC IS USED, WITH SINGLE WORD ARITHMETIC BEING     @B@X@VUR
)@@G@@. USED ONLY ON THE LAST ODD WORD, IF ANY. @[@X@V.     @A@W@V          IFUS
)@@G@@        0<KEYSIZE<9     @B@X@W          IF        0<KEYSIZE<9       .   UT
)@@G@@@^@W@VP         PROC      *1  @B@X@WP         PROC      *1              UU
)@@G@@  .   @#@W@VCOMPARE*  NAME    @B@X@WKEYTEST*  NAME                      UV
)@@G@@  .   @ @W@VI         EQU       P(1,1)    @B@X@WI         EQU       P(1,UW
)@@G@@1)            .   @G@W@VF         EQU       KEYSIZE-I         FLAG # OF UX
)@@G@@WORDS REMAINING IN KEY  @G@X@WF         EQU       KEYSIZE-I         . FLUY
)@@G@@AG # OF WORDS REMAINING IN KEY@F@W@VG         EQU       TIMES+TRACE>0   UZ
)@@G@@  SET FLAG FOR SPECIAL EXIT   @F@X@WG         EQU       TIMES+TRACE>0   VA
)@@G@@  . SET FLAG FOR SPECIAL EXIT @E@X@V. NOW SET EXIT ADDRESSES ACCORDING TVB
)@@G@@O EXTANT CONDITIONS     @G@X@VEQUAL     EQU       (F>2)+G->'$+3'!'0,X11'VC
)@@G@@ SET EXIT ADDRESS FOR EQUALS  @E@X@VLESS      EQU       G->'CMLESS'!'1,XVD
)@@G@@11' SET PKTKEY<KEY EXIT @E@X@VGTR       EQU       G->'CMGTR'!'2,X11' SETVE
)@@G@@ PKTKEY>KEY EXIT  @#@X@W. GENERATE CODE   @G@X@W D$I ,I$$S(F=1,1),'A4,KEVF
)@@G@@Y+':$CD(I):',A2','. GET WORD(S) FROM NODE KEY'  @G@X@W D$I ,I$$S(F=1,2),VG
)@@G@@'A4,':$CD(I):',A1','. MINUS WORD(S) FROM SEARCHKEY'   @F@X@W D$I ,I$$S(FVH
)@@G@@=1,3),'A4,':EQUAL,'.     SEARCHKEY = KEY(A2) EXIT'    @^@W@V          IFVI
)@@G@@        F=1 @F@W@V. USE SINGLE WORD ARITHMETIC SINCE THERE IS EXACTLY ONVJ
)@@G@@E WORD LEFT @F@W@V D$I ,'LA','A4,KEY+':$CD(I):',A3','GET CURRENT WORD FRVK
)@@G@@OM NODE KEY'@G@W@V D$I ,'AN','A4,PKTKEY+':$CD(I),'MINUS CURRENT WORD FROVL
)@@G@@M PACKET KEY'     @D@W@V D$I ,'JZ','A4,':EQUAL,'     PKTKEY = KEY(A3) EXVM
)@@G@@IT'   @^@W@V          ENDF      F=1 @^@W@V          IF        F>1 @ @W@VVN
)@@G@@. USE DOUBLE WORD ARITHMETIC  @F@W@V D$I ,'DL','A4,KEY+':$CD(I):',A3','GVO
)@@G@@ET TWO WORDS FROM NODE KEY'   @F@W@V D$I ,'DAN','A4,PKTKEY+':$CD(I),'MINVP
)@@G@@US TWO WORDS FROM PACKET KEY' @D@W@V D$I ,'DJZ','A4,':EQUAL,'     PKTKEYVQ
)@@G@@ = KEY(A3) EXIT'  @^@W@V          ENDF      F>1 @C@W@V D$I ,'JC',LESS,' VR
)@@G@@    PKTKEY < KEY(A3) EXIT'    @C@X@W D$I ,'JC',LESS,'.     SEARCHKEY < KVS
)@@G@@EY(A2) EXIT'@B@W@V D$I ,'J',GTR,'     PKTKEY > KEY(A3) EXIT'@C@X@W D$I ,VT
)@@G@@'J',GTR,'.    SEARCHKEY > KEY(A2) EXIT'   @#@W@V          END     @B@X@WVU
)@@G@@          END                         .   @[@X@W.     @F@X@WI$$S      EQVV
)@@G@@U       $L0($L1('DL','DAN','DJZ'),$L1('LA','AN','JZ'))@[@W@V.     @[@X@WVW
)@@G@@/.    @A@X@V. NOW GENERATE ALL THIS FANCY CODE  @[@X@V.     @F@W@VI     VX
)@@G@@    DO        KEYSIZE//2 , ;    FOR EVERY PAIR OF WORDS     @F@X@WI     VY
)@@G@@    DO        KEYSIZE//2 , ;    . FOR EVERY PAIR OF WORDS   @D@W@V      VZ
)@@G@@    COMPARE   (I-1)*2           COMPARE THE KEYS@E@X@W          KEYTEST WA
)@@G@@  (I-1)*2           . COMPARE THE KEYS    @[@X@V.     @G@X@V. FOR SPECIAWB
)@@G@@L CASES (ANY TRACING, TIMING) THIS IS THE EQUALS EXIT POINT @[@X@V.     WC
)@@G@@@[@W@VCMFIN @B@X@WCMFIN                                 .   @E@W@V      WD
)@@G@@    IF        TRACE+TIMES       ANYTHING GOING ON?    @E@X@W          IFWE
)@@G@@        TRACE+TIMES       . ANYTHING GOING ON?  @F@W@V          EXIT    WF
)@@G@@  0,X11 '$COMPARE' COMP$TIME YES, CLOSE UP SHOP @E@X@W          EXIT    WG
)@@G@@  0,X11 '$KTEST'     . YES, CLOSE UP SHOP @#@W@V          ENDF    @B@X@WWH
)@@G@@          ENDF                        .   @[@X@V.     @F@W@V. THESE ARE WI
)@@G@@THE PKTKEY .NE. KEY(A3)    EXITS FOR TRACING & TIMING @G@X@W. THESE ARE WJ
)@@G@@THE SEARCHKEY .NE. KEY(A2)    EXITS FOR TRACING & TIMING    @[@X@V.     WK
)@@G@@@G@W@VCMGTR     EQU       $                 BUMP X11 TWICE FOR EXIT 2,X1WL
)@@G@@1     @F@W@VCMLESS    EQU       $+1               BUMP X11 ONCE FOR EXITWM
)@@G@@ 1,X11@A@W@V          IF        TRACE+TIMES     @B@X@W          IF      WN
)@@G@@  TRACE+TIMES       .   @G@W@V          AX,U      X11,1             BUMPWO
)@@G@@ EXIT FOR GREATER THAN EXIT   @G@X@WCMGTR     AX,U      X11,1           WP
)@@G@@  . BUMP EXIT FOR GREATER THAN EXIT @F@W@V          AX,U      X11,1     WQ
)@@G@@        BUMP EXIT FOR LESS THAN EXIT@G@X@WCMLESS    AX,U      X11,1     WR
)@@G@@        . BUMP EXIT FOR LESS THAN EXIT    @D@W@V          J         CMFIWS
)@@G@@N             GO FINISH UP    @D@X@W          J         CMFIN           WT
)@@G@@  . GO FINISH UP  @A@W@V          ENDF      TRACE+TIMES     @B@X@W      WU
)@@G@@    ENDF      TRACE+TIMES       .   @A@X@W          ENDF      0<KEYSIZE<WV
)@@G@@9     @A@W@V          ENDF      0<KEYSIZE<9     @[@W@V.     @[@X@W/.    WW
)@@G@@@G@W@V. NOW, IF KEYSIZE IS NEGATIVE (-1 = INFINITY) OR GREATER THAN 8, TWX
)@@G@@HEN   @H@X@W. NOW, IF THE KEYSIZE IS GREATER THAN 8, OR IF THE KEYS VARYWY
)@@G@@ IN LENGTH, THEN  @H@X@V. IT IS MORE EFFICIENT TO USE A LOOP THAT COMPARWZ
)@@G@@ES EACH WORD OF THE KEYS ONE  @]@W@V. AT A TIME.@H@X@W. AT A TIME. THE CXA
)@@G@@ODE BELOW, HOWEVER, IS GENERATED ONLY WHEN THE KEYSIZE IS   @D@X@W. GREAXB
)@@G@@TER THAN 8 (IE: THE KEYS DO NOT VARY IN LENGTH).@[@X@V.     @C@W@V      XC
)@@G@@    IF        (KEYSIZE>8)+(KEYSIZE<0)     @ @X@W          IF        KEYSXD
)@@G@@IZE>8 @C@W@V          DS        A1,R1             SAVE A1,2 @D@X@W      XE
)@@G@@    DS        A1,BKWORD         . SAVE INDEXES  @E@W@V          LA,U    XF
)@@G@@  A1,PKTKEY         GET ADDR OF SEARCH KEY@D@X@W          LXI,U     A1,1XG
)@@G@@              . SET UP INCRS  @F@W@V          AU        A1,KSIZE        XH
)@@G@@  COMPUTE LAST ADDR OF KEY    @B@X@W          LXI,U     A2,1            XI
)@@G@@  .   @D@W@V          SA        A2,A5             A5 HAS THE LIMIT@E@X@WXJ
)@@G@@          LR,U      R1,KEYSIZE-1      . SET FIXED KEYSIZE   @E@W@V      XK
)@@G@@    LA,U      A2,KEY,A3         GET ADDR OF NODE KEY  @D@W@V          LXXL
)@@G@@I,U     A1,1              SET INCREMENTS  @^@W@V          LXI,U     A2,1XM
)@@G@@@[@W@VCMLOOP@B@X@WKTLOOP                                .   @F@W@V      XN
)@@G@@    LA        A4,,*A2           GET WORD OF KEY IN NODE     @F@X@W      XO
)@@G@@    LA        A5,,*A2           . GET WORD OF KEY IN NODE   @E@W@V      XP
)@@G@@    JNE       A4,,A1 CMNEQL     GO TEST IF NOT EQUAL  @F@X@W          ANXQ
)@@G@@        A5,,*A1           . MINUS SEARCH KEY WORD     @E@W@V          JGXR
)@@G@@M       A1,A5 CMLOOP      LOOP UNTIL A5<=A1     @G@X@W          JNZ     XS
)@@G@@  A5,KTNEQL         . IF NONZERO, WE'RE ALMOST DONE   @D@W@VCMFIN     DLXT
)@@G@@        A1,R1             RESTORE REGS    @F@X@W          JGD       R1,KXU
)@@G@@TLOOP         . EQUAL SO FAR, TRY AGAIN   @A@X@W. RAN OUT OF WORDS - MUSXV
)@@G@@T BE EQUAL  @D@X@WKTFIN     DL        A1,BKWORD         . RESTORE A1,2  XW
)@@G@@@C@W@V          EXIT      0,X11 '$COMPARE' COMP$TIME  @A@X@W          EXXX
)@@G@@IT      0,X11 '$KTEST'  @[@X@V.     @C@W@V. WE FOUND TWO UNEQUAL WORDS -XY
)@@G@@ COMPARE THEM     @E@X@W. WE FOUND TWO UNEQUAL WORDS - CARRY FLAG IS ON XZ
)@@G@@IF NO BORROW@[@X@V.     @[@W@VCMNEQL@B@X@WKTNEQL                        YA
)@@G@@        .   @F@W@V          AN        A4,,A1            FORM DIFFERENCE:YB
)@@G@@ KEY-PKTKEY @F@W@V          JC        $+2               IF PKTKEY < KEY YC
)@@G@@   - SKIP   @G@X@W          JC        $+2               . SKIP IF SEARCHYD
)@@G@@KEY < NODEKEY(A1) @G@W@V          AX,U      X11,1             PKTKEY > KYE
)@@G@@EY,    FUDGE RETURN     @F@X@W          AX,U      X11,1             . SEYF
)@@G@@ARCHKEY > NODEKEY(A1)   @D@W@V          AX,U      X11,1             PKTKYG
)@@G@@EY<KEY(A3)  @F@X@W          AX,U      X11,1             . FUDGE RETURN AYH
)@@G@@CCORDINGLY  @D@W@V          J         CMFIN             CLOSE UP SHOP   YI
)@@G@@@D@X@W          J         KTFIN             . CLOSE UP SHOP @ @X@W      YJ
)@@G@@    ENDF      KEYSIZE>8 @C@W@V          ENDF      (KEYSIZE>8)+(KEYSIZE<0YK
)@@G@@)     @[@X@W/.    @G@X@W. IF THE KEYS MAY BE OF VARIABLE LENGTHS, THEN TYL
)@@G@@HE FOLLOWING ROUTINE IS @B@X@W. GENERATED TO PERFORM THE COMPARISONS.   YM
)@@G@@@[@X@W.     @ @X@W          IF        VARYKEYS  @[@X@W.     @C@X@W. THISYN
)@@G@@ ROUTINE, SPECIFICALLY, USES A5,R1-2.     @[@X@W.     @G@X@W          DSYO
)@@G@@        A1,BKWORD         . SET BKWORD TO A1, SKWORD TO A2  @D@X@W      YP
)@@G@@    LR        R2,KEYSIZ,A2      . NODE KEY SIZE @D@X@W          LR      YQ
)@@G@@  R1,SKSIZE         . SEARCH KEYSIZE@D@X@W          LXI,U     A1,1      YR
)@@G@@        . GET INCREMENTS@B@X@W          LXI,U     A2,1              .   YS
)@@G@@@[@X@WKTLOOP@F@X@W          JGD       R2,KTNXT          . SKIP IF MORE NYT
)@@G@@ODE KEY LEFT@G@X@W          JE,U      A2,,A2 KTEQL      . IF NO INCR, THYU
)@@G@@EN THEY'RE EQUAL  @F@X@W          LR        R2,R1             . COPY OTHYV
)@@G@@ER REPEAT COUNT   @I@X@W          LA,U      A2,CMPEXT         . NOW USE YW
)@@G@@THE DEFAULT COMPARISON EXTENSION    @D@X@W          J         KTLOOP    YX
)@@G@@        . TRY AGAIN     @[@X@WKTNXT @E@X@W          JGD       R1,KTTST  YY
)@@G@@        . IF R1>0, GO COMPARE @G@X@W          JE,U      A1,,A1 KTEQL    YZ
)@@G@@  . IF NO INCR, THEN KEYS ARE EQUAL @F@X@W          LR        R1,R2     ZA
)@@G@@        . COPY OTHER REPEAT COUNT   @E@X@W          LA,U      A1,CMPEXT ZB
)@@G@@        . EXTEND WITH THIS GUY@ @X@W. NOW, LET'S COMPARE THE WORDS@[@X@WZC
)@@G@@KTTST @E@X@W          LA        A5,,*A2           . GET A WORD FROM NODEZD
)@@G@@@E@X@W          AN        A5,,*A1           . MINUS SEARCH KEY    @E@X@WZE
)@@G@@          JZ        A5,KTLOOP         . LOOP UNTIL NOT EQUAL@F@X@W      ZF
)@@G@@    JC        $+2               . SEARCHKEY < NODEKEY(A1)   @F@X@W      ZG
)@@G@@    AX,U      X11,1             . SEARCHKEY > NODEKEY(A1)   @F@X@W      ZH
)@@G@@    AX,U      X11,1             . FUDGE RETURN ACCORDINGLY  @D@X@W. AHH,ZI
)@@G@@ NO MORE PARLAYING, 'TIS TIME FOR THE HEMLOCK.. @[@X@WKTEQL @D@X@W      ZJ
)@@G@@    DL        A1,BKWORD         . RESTORE A1,A2 @A@X@W          EXIT    ZK
)@@G@@  0,X11 '$KTEST'  @ @X@W          ENDF      VARYKEYS  @[@X@W.     @^@W@VZL
)@@G@@          ENDF      KEYS@B@X@W          ENDF      KEYS              .   ZM
)@@G@@@B@@@W          END                         .   ___@@@  BUMP EXIT FOR LEZN
)@@G@@SS THAN EXIT@G@X@WCMLESS    AX,U      X11,1             . BUMP EXIT FOR ZO
)@@G@@*[S@@@*SDFF*@#@@@N          $EJECT  @ @N@M          INCLUDE   'AXR$'    ZP
)@@G@@@B@P@N          INCLUDE   'AXR$'            .   @ @N@M          INCLUDE ZQ
)@@G@@  'JPROC$'  @B@O@N          INCLUDE   'JPROC$'          .   @B@P@O      ZR
)@@G@@    INCLUDE   'JPROCS'          .   @ @N@M          INCLUDE   'AVL$DEF' ZS
)@@G@@@#@@@P          LIBRARY @B@@@N          INCLUDE   'AVL$DEF'         .   ZT
)@@G@@@[@@@N.     @B@@@N. AVL TREE MAINTENAINCE SUBROUTINE PACKAGE@[@@@N.     ZU
)@@G@@@G@@@N. DESIGNED AND IMPLEMENTED BY  ALAN K. STEBBENS, UOMCSC SYSTEMS STZV
)@@G@@AFF.  @[@@@N.     @ @N@M          IF        RANKS     @#@@@N          IBZW
)@@G@@ANK   @[@@@M.     @F@@@M. SUPPORT FOR THE LIST MANIPULATING PORTION OF TZX
)@@G@@HE AVL$ ROUTINES. @[@@@M.     @H@N@M. AVLFIND -- FIND A NODE IN THE AVL ZY
)@@G@@TREE GIVEN A SPECIFIED POSITION (RANK).   @H@@@N. AVLSR -- FIND A NODE IZZ
)@@G@@N THE AVL TREE GIVEN A SPECIFIED POSITION (RANK).     @[@@@M.     @^@N@MAA
)@@G@@. A0 = PACKET ADDRESS   @#@@@N. LA,U  A0,AVLPKT @#@@@N. LA,U  A1,RANK   AB
)@@G@@@#@N@M. LMJ  X11,AVLFIND@#@@@N. LMJ   X11,AVLSR @D@@@N. <RETURN>: A2 HASAC
)@@G@@ NODE ADDRESS OR ZERO IF NOT FOUND  @[@@@M.     @B@N@M. NODE ADDRESS IS AD
)@@G@@RETURN IN THE PACKET    @[@N@M.     @#@N@MAVLFIND* ENTRY    @[@@@NAVLSR*AE
)@@G@@@A@@@N          PERFORM   'RANK' 'SEARCH' @[@@@N.     @E@@@N. AVLIR -- IAF
)@@G@@NSERT A NEW NODE INTO THE AVL TREE ACCORDING TO @ @@@N.            A GIVAG
)@@G@@EN RANK.    @#@@@N.  A0 = PKT ADDR  @^@@@N.  A1 = (RANK,NODE ADDR)@#@@@NAH
)@@G@@.  LMJ  X11,AVLIR @[@@@N.     @[@@@NAVLIR*@D@@@N          SA        A1,NAI
)@@G@@ODEADDR       . SAVE NODE ADDR@F@@@N          SSL       A1,18           AJ
)@@G@@  PREP THE RANK PARAMETER     @A@@@N          PERFORM   'RANK' 'INSERT' AK
)@@G@@@C@N@M          ENTER     *'FIND',FIND$NUM FIND$TIME  @E@N@M          SZAL
)@@G@@        NODE              CLEAR NODE ADDRESS    @F@N@M          JEZ     AM
)@@G@@  RNKFLG FIFIN      QUIT NOW IF NO RANKS IN TREE@D@N@M          SX      AN
)@@G@@  X11,AVLINK        SAVE HOME BASE  @E@N@M          LMJ       X11,AVL$FIAO
)@@G@@ND      USE INTERNAL ROUTINE  @E@N@M          SA        A3,NODE         AP
)@@G@@  PLACE RESULT IN PACKET@E@N@M          LX        X11,AVLINK        RESTAQ
)@@G@@ORE RETURN ADDRESS@[@N@MFIFIN @C@N@M          EXIT      0,X11 *'FIND' FIAR
)@@G@@ND$TIME     @[@N@M.     @G@N@M. AVL$FIND -- GENERALIZED ROUTINE CALLED BAS
)@@G@@Y BOTH AVLFIND AND AVLLINK.   @[@N@M.     @^@N@M.  LMJ  X11,AVL$FIND    AT
)@@G@@@[@N@M.     @]@N@M. PRODUCES: @E@N@M.   A3[H2] = ADDRESS OF SOUGHT NODE,AU
)@@G@@ OR ZERO IF NO FIND     @F@N@M.   A3[H1] = 1*/17 IF A3 IS A LEFT SON, ELAV
)@@G@@SE ZERO FOR RIGHT SON   @F@N@M.   A2[H2] = BALANCE NODE (FIRST UNBALANCEAW
)@@G@@D NODE IN PATH TO A3)   @E@N@M.   A2[H1] = RANK NODE (HIGHEST RANK SUBTRAX
)@@G@@EE HEAD NODE)     @E@N@M.   A1     = IMMEDIATE FATHER OF A3, OR WOULD-BEAY
)@@G@@ FATHER     @[@N@M.     @#@N@MAVL$FIND* ENTRY   @C@N@M          ENTER   AZ
)@@G@@  '$FIND',FND$NUM FND$TIME    @G@N@M          LXI,U     A1,AVL$TEST     BA
)@@G@@  GET ADDRESS OF COMPARISON ROUTINE @D@N@M          SZ        RKFLAG    BB
)@@G@@        SET 'RANKS' FLAG@D@N@M          LMJ       A1,AVL$LOCATE     FINDBC
)@@G@@ THE BUGGER @B@N@M          EXIT      0,X11 '$FIND' FND$TIME@[@@@M.     BD
)@@G@@@F@N@M. ROUTINE TO COMPARE THE GIVEN RANK WITH THE RANK IN THE NODE     BE
)@@G@@@E@@@N. AVL$RTEST - COMPARE THE SEARCHRANK WITH THE NODE RANK     @^@N@MBF
)@@G@@. A3 = ADDRESS OF NODE  @]@@@N. INPUT:    @^@@@N.   A2 = NODE ADDRESS   BG
)@@G@@@^@@@N.   A1 = SEARCHRANK     @^@@@N.   LMJ   X11,AVL$TEST  @ @@@N. SEARBH
)@@G@@CHRANK = RANK(A2) EXIT  @ @@@N. SEARCHRANK < RANK(A2) EXIT  @ @@@N. SEARBI
)@@G@@CHRANK > RANK(A2) EXIT  @[@@@N.     @ @@@N. A4 = SEARCHRANK - RANK(A2)  BJ
)@@G@@@[@@@N.     @#@N@M. LMJ X11,AVL$TEST@^@N@M. PKTRNK = RANK(A3) EXIT@^@N@MBK
)@@G@@. PKTRNK < RANK(A3) EXIT@^@N@M. PKTRNK > RANK(A3) EXIT@B@N@M.   IN ANY CBL
)@@G@@ASE, A4 = PKTRNK - RANK(A3)   @]@N@M. USES A4   @[@N@M.     @#@N@MAVL$TEBM
)@@G@@ST* ENTRY   @]@@@NAVL$RTEST*  @C@N@M          ENTER     '$TEST',TEST$NUMBN
)@@G@@ TEST$TIME  @F@N@M          LA        A4,PKTRNK         GET RANK OF CURRBO
)@@G@@ENT NODE    @H@@@N          LA,U      A4,,A1            . GET SEARCH RANBP
)@@G@@K TO VOLATILE REGISTER  @E@N@M          AN        A4,RANK,A3        MINUBQ
)@@G@@S SEARCH RANK     @E@Q@N          AN        A4,RANK,A3        . MINUS NOBR
)@@G@@DE RANK     @E@@@Q          AN        A4,RANK,A2        . MINUS NODE RANBS
)@@G@@K     @F@N@M          JZ        A4,TEFIN          IF A4=0 THEN NODE IS FBT
)@@G@@OUND  @F@@@N          JZ        A4,0,X11          . IF A4=0 THEN NODE ISBU
)@@G@@ FOUND@E@N@M          JNC       $+2               PKTRNK < RANK(A3)     BV
)@@G@@@F@@@N          JNC       1,X11             . SEARCHRANK < RANK(A1)     BW
)@@G@@@E@@@N          LA        A1,A4             . RESET SEARCH RANK   @E@N@MBX
)@@G@@          AX,U      X11,1             PKTRNK > RANK(A3)     @F@@@N      BY
)@@G@@    J         2,X11             . SEARCHRANK > RANK(A1)     @F@N@M      BZ
)@@G@@    AX,U      X11,1             SO FUDGE EXIT ACCORDINGLY   @[@N@MTEFIN CA
)@@G@@@C@N@M          EXIT      0,X11 '$TEST' TEST$TIME     @[@@@M.     @^@N@MCB
)@@G@@          ENDF      KEYS@#@N@M          END     @B@@@N          END     CC
)@@G@@                    .   ___@@@S A DATA FILE     @[C^=TWARNING: EDITING ECD
)@@G@@LEMENT CYCLE &, CURRENT CYCLE IS &  @@@@@@@@@@@@*[S@@@*SDFF*@F@@@@@HDG,PCE
)@@G@@ ****** CULL OF AVL$ ROUTINES: REFERENCED SYMBOLS ******    @#@@@@@CULL,CF
)@@G@@IWXNE ASM/80@[@@@@@EOF  ___A$\C/@@#CH@@A$X/C@]!S*@@@@G/K@]3LC@[A=.G@@A$XCG
)@@G@@*[S@@@*SDFF*@ @#@[          INCLUDE   'AXR$'    @ @]@[          INCLUDE CH
)@@G@@  'JPROC$'  @ @#@]          INCLUDE   'JPROCS'  @ @#@[          INCLUDE CI
)@@G@@  'AVL$DEF' @#@@@#          LIBRARY @ @@@#          INCLUDE   'AVL$DEF' CJ
)@@G@@@[@@@[.     @B@@@[. AVL TREE MAINTENAINCE SUBROUTINE PACKAGE@[@@@[.     CK
)@@G@@@G@@@[. DESIGNED AND IMPLEMENTED BY  ALAN K. STEBBENS, UOMCSC SYSTEMS STCL
)@@G@@AFF.  @[@@@[.     @H@@@[. GENERALIZED KEY COMPARISON ROUTINE FOR KEYS OFCM
)@@G@@ SIZE GREATER THAN 8 WORDS.   @[@@@[.     @#@@@[          IBANK   @]@@@[CN
)@@G@@AVL$KTEST*  @D@]@[          DS        A1,BKWORD         . SAVE INDEXES  CO
)@@G@@@D@@@]          DS        A1,SKWORD         . SAVE INDEXES  @D@@@[      CP
)@@G@@    LXI,U     A1,1              . SET UP INCRS  @B@@@[          LXI,U   CQ
)@@G@@  A2,1              .   @E@@@[          LR        R1,KEYSIZE        . SECR
)@@G@@T FIXED KEYSIZE   @D@@@[          JGD       R1,$+1            . FIX COUNCS
)@@G@@T     @B@@@[KTLOOP                                .   @F@^@[          LACT
)@@G@@        A5,,*A2           . GET WORD OF KEY IN NODE   @F@@@^          LACU
)@@G@@        A5,KEY,*A2        . GET WORD OF KEY IN NODE   @F@^@[          ANCV
)@@G@@        A5,,*A1           . MINUS SEARCH KEY WORD     @F@ @^          ANCW
)@@G@@        A5,KEY,*A1        . MINUS SEARCH KEY WORD     @F@@@           ANCX
)@@G@@        A5,,*A1           . MINUS SEARCH KEY WORD     @G@@@[          JNCY
)@@G@@Z       A5,KTNEQL         . IF NONZERO, WE'RE ALMOST DONE   @F@@@[      CZ
)@@G@@    JGD       R1,KTLOOP         . EQUAL SO FAR, TRY AGAIN   @A@@@[. RAN DA
)@@G@@OUT OF WORDS - MUST BE EQUAL  @D@]@[KTFIN     DL        A1,BKWORD       DB
)@@G@@  . RESTORE A1,2  @D@@@]KTFIN     DL        A1,SKWORD         . RESTORE DC
)@@G@@A1,2  @C@@@[          J         0,X11             . RETURN  @[@@@[.     DD
)@@G@@@E@@@[. WE FOUND TWO UNEQUAL WORDS - CARRY FLAG IS ON IF NO BORROW@[@@@[DE
)@@G@@.     @B@@@[KTNEQL                                .   @G@@@[          JCDF
)@@G@@        $+2               . SKIP IF SEARCHKEY < NODEKEY(A1) @F@@@[      DG
)@@G@@    AX,U      X11,1             . SEARCHKEY > NODEKEY(A1)   @F@@@[      DH
)@@G@@    AX,U      X11,1             . FUDGE RETURN ACCORDINGLY  @D@@@[      DI
)@@G@@    J         KTFIN             . CLOSE UP SHOP @#@@@[          END     DJ
)@@G@@___@@@/S@@@@/S@@@@/S@@@@/S@@@@/S@@@@/S@@@@/S@@@@/S@@@@/S@@@@/S@@@@/S@@@@DK
)@@G@@/S@@@@/S@@@@/S@@@@/S@@@@*[S@@@*SDFF*@ @]@@          INCLUDE   'AXR$'    DL
)@@G@@@ @[@@          INCLUDE   'JPROC$'  @ @]@[          INCLUDE   'JPROCS'  DM
)@@G@@@#@@@]          LIBRARY @ @@@@          INCLUDE   'AVL$DEF' @[@@@@.     DN
)@@G@@@B@@@@. AVL TREE MAINTENAINCE SUBROUTINE PACKAGE@[@@@@.     @G@@@@. DESIDO
)@@G@@GNED AND IMPLEMENTED BY  ALAN K. STEBBENS, UOMCSC SYSTEMS STAFF.  @[@@@@DP
)@@G@@.     @C@@@@. SPECIAL ROUTINE TO COMPARE KEYS ONE WORD LONG @[@@@@.     DQ
)@@G@@@#@@@@          IBANK   @]@@@@AVL$KTEST1* @G@@@@          LA        A4,KDR
)@@G@@EY,A2         . GET A WORD FROM THE NODE KEY    @G@#@@          AN      DS
)@@G@@  A4,KEY,A1         . SUBTRACT WORD USING PACKET KEY  @G@@@#          ANDT
)@@G@@        A4,,A1            . SUBTRACT WORD USING PACKET KEY  @D@@@@      DU
)@@G@@    JZ        A4,0,X11          . THEY ARE EQUAL@E@@@@          JC      DV
)@@G@@  1,X11             . KEY(A2) < KEY(A1)   @E@@@@          J         2,X1DW
)@@G@@1             . KEY(A2) > KEY(A1)   @#@@@@          END     ___@@@/K@^-@DX
)@@G@@^\0^[YR;@@@[/K@^-@A3@^?3A\@^?2/\)^W>R<)^H'+8)@@[A#0^KN;*0@@^A39@@ R\@^?2DY
)@@G@@:8@@@]/K@^-I:8@@@[/K@^-I*[S@@@*SDFF*@ @]@@          INCLUDE   'AXR$'    DZ
)@@G@@@ @[@@          INCLUDE   'JPROC$'  @ @]@[          INCLUDE   'JPROCS'  EA
)@@G@@@#@@@]          LIBRARY @ @@@@          INCLUDE   'AVL$DEF' @[@@@@.     EB
)@@G@@@B@@@@. AVL TREE MAINTENAINCE SUBROUTINE PACKAGE@[@@@@.     @G@@@@. DESIEC
)@@G@@GNED AND IMPLEMENTED BY  ALAN K. STEBBENS, UOMCSC SYSTEMS STAFF.  @[@@@@ED
)@@G@@.     @C@@@@. SPECIAL ROUTINE TO COMPARE KEYS TWO WORDS LONG@[@@@@.     EE
)@@G@@@#@@@@          IBANK   @]@@@@AVL$KTEST2* @G@@@@          DL        A4,KEF
)@@G@@EY,A2         . GET TWO WORDS FROM THE NODE KEY @H@#@@          DAN     EG
)@@G@@  A4,KEY,A1         . SUBTRACT TWO WORDS USING PACKET KEY   @H@@@#      EH
)@@G@@    DAN       A4,,A1            . SUBTRACT TWO WORDS USING PACKET KEY   EI
)@@G@@@D@@@@          DJZ       A4,0,X11          . THEY ARE EQUAL@E@@@@      EJ
)@@G@@    JC        1,X11             . KEY(A2) < KEY(A1)   @E@@@@          J EK
)@@G@@        2,X11             . KEY(A2) > KEY(A1)   @#@@@@          END     EL
)@@G@@___@@@ECOVERY     @[D^<ZINPUT FILE IS EMPTY     @[^^<(INPUT FILE IS ON NEM
)@@G@@ON MASS STORAGE EQUIPMEN*[S@@@*SDFF*@ @]@@          INCLUDE   'AXR$'    EN
)@@G@@@ @[@@          INCLUDE   'JPROC$'  @ @]@[          INCLUDE   'JPROCS'  EO
)@@G@@@#@@@]          LIBRARY @ @@@@          INCLUDE   'AVL$DEF' @[@@@@.     EP
)@@G@@@B@@@@. AVL TREE MAINTENAINCE SUBROUTINE PACKAGE@[@@@@.     @G@@@@. DESIEQ
)@@G@@GNED AND IMPLEMENTED BY  ALAN K. STEBBENS, UOMCSC SYSTEMS STAFF.  @[@@@@ER
)@@G@@.     @D@@@@. SPECIAL ROUTINE TO COMPARE KEYS THREE WORDS LONG    @[@@@@ES
)@@G@@.     @#@@@@          IBANK   @]@@@@AVL$KTEST3* @G@@@@          DL      ET
)@@G@@  A4,KEY,A2         . GET TWO WORDS FROM THE NODE KEY @H@#@@          DAEU
)@@G@@N       A4,KEY,A1         . SUBTRACT TWO WORDS USING PACKET KEY   @H@@@#EV
)@@G@@          DAN       A4,,A1            . SUBTRACT TWO WORDS USING PACKET EW
)@@G@@KEY   @G@@@@          DJZ       A4,$+3            . THEY ARE EQUAL, MUSTEX
)@@G@@ CHECK AGAIN@E@@@@          JC        1,X11             . KEY(A2) < KEY(EY
)@@G@@A1)   @E@@@@          J         2,X11             . KEY(A2) > KEY(A1)   EZ
)@@G@@@E@@@@          LA        A4,KEY+2,A2       . GET NEXT WORD AFTER @C@#@@FA
)@@G@@          AN        A4,KEY+2,A1       . SUBTRACT@C@@@#          AN      FB
)@@G@@  A4,2,A1           . SUBTRACT@D@@@@          JZ        A4,0,X11        FC
)@@G@@  . THEY ARE EQUAL@E@@@@          JC        1,X11             . KEY(A2) FD
)@@G@@< KEY(A1)   @E@@@@          J         2,X11             . KEY(A2) > KEY(FE
)@@G@@A1)   @#@@@@          END     ___@@@      F3PAHJEDIT$       MZ4F^EEDIT$TFF
)@@G@@*[S@@@*SDFF*@ @#@@          INCLUDE   'AXR$'    @ @]@@          INCLUDE FG
)@@G@@  'JPROC$'  @ @#@]          INCLUDE   'JPROCS'  @#@@@#          LIBRARY FH
)@@G@@@ @@@@          INCLUDE   'AVL$DEF' @[@@@@.     @B@@@@. AVL TREE MAINTENFI
)@@G@@AINCE SUBROUTINE PACKAGE@[@@@@.     @G@@@@. DESIGNED AND IMPLEMENTED BY FJ
)@@G@@ ALAN K. STEBBENS, UOMCSC SYSTEMS STAFF.  @[@@@@.     @D@@@@. SPECIAL ROFK
)@@G@@UTINE TO COMPARE KEYS FOUR WORDS LONG     @[@@@@.     @#@@@@          IBFL
)@@G@@ANK   @]@[@@AVL$KTEST3* @]@@@[AVL$KTEST4* @G@@@@          DL        A4,KFM
)@@G@@EY,A2         . GET TWO WORDS FROM THE NODE KEY @H@^@@          DAN     FN
)@@G@@  A4,KEY,A1         . SUBTRACT TWO WORDS USING PACKET KEY   @H@@@^      FO
)@@G@@    DAN       A4,,A1            . SUBTRACT TWO WORDS USING PACKET KEY   FP
)@@G@@@G@@@@          DJZ       A4,$+3            . THEY ARE EQUAL, MUST CHECKFQ
)@@G@@ AGAIN@E@@@@          JC        1,X11             . KEY(A2) < KEY(A1)   FR
)@@G@@@E@@@@          J         2,X11             . KEY(A2) > KEY(A1)   @G@@@@FS
)@@G@@          DL        A4,KEY+2,A2       . GET TWO WORDS FROM THE NODE KEY FT
)@@G@@@H@^@@          DAN       A4,KEY+2,A1       . SUBTRACT TWO WORDS USING PFU
)@@G@@ACKET KEY   @H@@@^          DAN       A4,2,A1           . SUBTRACT TWO WFV
)@@G@@ORDS USING PACKET KEY   @D@@@@          DJZ       A4,0,X11          . THFW
)@@G@@EY ARE EQUAL@E@@@@          JC        1,X11             . KEY(A2) < KEY(FX
)@@G@@A1)   @E@@@@          J         2,X11             . KEY(A2) > KEY(A1)   FY
)@@G@@@#@@@@          END     ___@@@      @[O@*=BPPFD       @[O@\6BPPTA       FZ
)@@G@@@[O@&TBPPTB       @[O@*@BPPTC       @[O@,EBPPTCA      @[O@\MBTAPFG      GA
)@@G@@*[S@@@*SDFF*@ @]@@          INCLUDE   'AXR$'    @ @[@@          INCLUDE GB
)@@G@@  'JPROC$'  @ @]@[          INCLUDE   'JPROCS'  @#@@@]          LIBRARY GC
)@@G@@@ @@@@          INCLUDE   'AVL$DEF' @[@@@@.     @B@@@@. AVL TREE MAINTENGD
)@@G@@AINCE SUBROUTINE PACKAGE@[@@@@.     @G@@@@. DESIGNED AND IMPLEMENTED BY GE
)@@G@@ ALAN K. STEBBENS, UOMCSC SYSTEMS STAFF.  @[@@@@.     @D@@@@. SPECIAL ROGF
)@@G@@UTINE TO COMPARE KEYS FIVE WORDS LONG     @[@@@@.     @#@@@@          IBGG
)@@G@@ANK   @]@@@@AVL$KTEST5* @G@@@@          DL        A4,KEY,A2         . GEGH
)@@G@@T TWO WORDS FROM THE NODE KEY @H@#@@          DAN       A4,KEY,A1       GI
)@@G@@  . SUBTRACT TWO WORDS USING PACKET KEY   @H@@@#          DAN       A4,,GJ
)@@G@@A1            . SUBTRACT TWO WORDS USING PACKET KEY   @G@@@@          DJGK
)@@G@@Z       A4,$+3            . THEY ARE EQUAL, MUST CHECK AGAIN@E@@@@      GL
)@@G@@    JC        1,X11             . KEY(A2) < KEY(A1)   @E@@@@          J GM
)@@G@@        2,X11             . KEY(A2) > KEY(A1)   @G@@@@          DL      GN
)@@G@@  A4,KEY+2,A2       . GET TWO WORDS FROM THE NODE KEY @H@#@@          DAGO
)@@G@@N       A4,KEY+2,A1       . SUBTRACT TWO WORDS USING PACKET KEY   @H@@@#GP
)@@G@@          DAN       A4,2,A1           . SUBTRACT TWO WORDS USING PACKET GQ
)@@G@@KEY   @D@@@@          DJZ       A4,$+3            . THEY ARE EQUAL@E@@@@GR
)@@G@@          JC        1,X11             . KEY(A2) < KEY(A1)   @E@@@@      GS
)@@G@@    J         2,X11             . KEY(A2) > KEY(A1)   @E@@@@          LAGT
)@@G@@        A4,KEY+4,A2       . GET NEXT WORD AFTER @C@#@@          AN      GU
)@@G@@  A4,KEY+4,A1       . SUBTRACT@C@@@#          AN        A4,4,A1         GV
)@@G@@  . SUBTRACT@D@@@@          JZ        A4,0,X11          . THEY ARE EQUALGW
)@@G@@@E@@@@          JC        1,X11             . KEY(A2) < KEY(A1)   @E@@@@GX
)@@G@@          J         2,X11             . KEY(A2) > KEY(A1)   @#@@@@      GY
)@@G@@    END     ___@@@@[O@S"FPOC        @@_@ASFPOCA       @[ @@JFPOCLG      GZ
)@@G@@@[U@@@FREE        @[X@]#FSTFN       @[O@U_FSTST *[S@@@*SDFF*@ @#@@      HA
)@@G@@    INCLUDE   'AXR$'    @ @]@@          INCLUDE   'JPROC$'  @ @#@]      HB
)@@G@@    INCLUDE   'JPROCS'  @#@@@#          LIBRARY @ @@@@          INCLUDE HC
)@@G@@  'AVL$DEF' @[@@@@.     @B@@@@. AVL TREE MAINTENAINCE SUBROUTINE PACKAGEHD
)@@G@@@[@@@@.     @G@@@@. DESIGNED AND IMPLEMENTED BY  ALAN K. STEBBENS, UOMCSHE
)@@G@@C SYSTEMS STAFF.  @[@@@@.     @C@@@@. SPECIAL ROUTINE TO COMPARE KEYS SIHF
)@@G@@X WORDS LONG@[@@@@.     @#@@@@          IBANK   @]@@@@AVL$KTEST6* @G@@@@HG
)@@G@@          DL        A4,KEY,A2         . GET TWO WORDS FROM THE NODE KEY HH
)@@G@@@H@^@@          DAN       A4,KEY,A1         . SUBTRACT TWO WORDS USING PHI
)@@G@@ACKET KEY   @H@@@^          DAN       A4,,A1            . SUBTRACT TWO WHJ
)@@G@@ORDS USING PACKET KEY   @G@@@@          DJZ       A4,$+3            . THHK
)@@G@@EY ARE EQUAL, MUST CHECK AGAIN@E@@@@          JC        1,X11           HL
)@@G@@  . KEY(A2) < KEY(A1)   @E@@@@          J         2,X11             . KEHM
)@@G@@Y(A2) > KEY(A1)   @G@@@@          DL        A4,KEY+2,A2       . GET TWO HN
)@@G@@WORDS FROM THE NODE KEY @H@^@@          DAN       A4,KEY+2,A1       . SUHO
)@@G@@BTRACT TWO WORDS USING PACKET KEY   @H@@@^          DAN       A4,2,A1   HP
)@@G@@        . SUBTRACT TWO WORDS USING PACKET KEY   @D@@@@          DJZ     HQ
)@@G@@  A4,$+3            . THEY ARE EQUAL@E@@@@          JC        1,X11     HR
)@@G@@        . KEY(A2) < KEY(A1)   @E@@@@          J         2,X11           HS
)@@G@@  . KEY(A2) > KEY(A1)   @F@@@@          DL        A4,KEY+4,A2       . GEHT
)@@G@@T NEXT TWO WORDS AFTER  @C@^@@          DAN       A4,KEY+4,A1       . SUHU
)@@G@@BTRACT@C@@@^          DAN       A4,4,A1           . SUBTRACT@D@[@@      HV
)@@G@@    JZ        A4,0,X11          . THEY ARE EQUAL@D@@@[          DJZ     HW
)@@G@@  A4,0,X11          . THEY ARE EQUAL@E@@@@          JC        1,X11     HX
)@@G@@        . KEY(A2) < KEY(A1)   @E@@@@          J         2,X11           HY
)@@G@@  . KEY(A2) > KEY(A1)   @#@@@@          END     ___@@@@@$@@)ROB$        HZ
)@@G@@@@!@I!ROPN$       @@3@@@*[S@@@*SDFF*@ @]@@          INCLUDE   'AXR$'    IA
)@@G@@@ @[@@          INCLUDE   'JPROC$'  @ @]@[          INCLUDE   'JPROCS'  IB
)@@G@@@#@@@]          LIBRARY @ @@@@          INCLUDE   'AVL$DEF' @[@@@@.     IC
)@@G@@@B@@@@. AVL TREE MAINTENAINCE SUBROUTINE PACKAGE@[@@@@.     @G@@@@. DESIID
)@@G@@GNED AND IMPLEMENTED BY  ALAN K. STEBBENS, UOMCSC SYSTEMS STAFF.  @[@@@@IE
)@@G@@.     @D@@@@. SPECIAL ROUTINE TO COMPARE KEYS SEVEN WORDS LONG    @[@@@@IF
)@@G@@.     @#@@@@          IBANK   @]@@@@AVL$KTEST7* @G@@@@          DL      IG
)@@G@@  A4,KEY,A2         . GET TWO WORDS FROM THE NODE KEY @H@#@@          DAIH
)@@G@@N       A4,KEY,A1         . SUBTRACT TWO WORDS USING PACKET KEY   @H@@@#II
)@@G@@          DAN       A4,,A1            . SUBTRACT TWO WORDS USING PACKET IJ
)@@G@@KEY   @G@@@@          DJZ       A4,$+3            . THEY ARE EQUAL, MUSTIK
)@@G@@ CHECK AGAIN@E@@@@          JC        1,X11             . KEY(A2) < KEY(IL
)@@G@@A1)   @E@@@@          J         2,X11             . KEY(A2) > KEY(A1)   IM
)@@G@@@G@@@@          DL        A4,KEY+2,A2       . GET TWO WORDS FROM THE NODIN
)@@G@@E KEY @H@#@@          DAN       A4,KEY+2,A1       . SUBTRACT TWO WORDS UIO
)@@G@@SING PACKET KEY   @H@@@#          DAN       A4,2,A1           . SUBTRACTIP
)@@G@@ TWO WORDS USING PACKET KEY   @D@@@@          DJZ       A4,$+3          IQ
)@@G@@  . THEY ARE EQUAL@E@@@@          JC        1,X11             . KEY(A2) IR
)@@G@@< KEY(A1)   @E@@@@          J         2,X11             . KEY(A2) > KEY(IS
)@@G@@A1)   @F@@@@          DL        A4,KEY+4,A2       . GET NEXT TWO WORDS AIT
)@@G@@FTER  @C@#@@          DAN       A4,KEY+4,A1       . SUBTRACT@C@@@#      IU
)@@G@@    DAN       A4,4,A1           . SUBTRACT@D@@@@          DJZ       A4,$IV
)@@G@@+3            . THEY ARE EQUAL@E@@@@          JC        1,X11           IW
)@@G@@  . KEY(A2) < KEY(A1)   @E@@@@          J         2,X11             . KEIX
)@@G@@Y(A2) > KEY(A1)   @G@@@@          LA        A4,KEY+6,A2       . GET NEXTIY
)@@G@@ WORD FROM NODE KEY     @C@#@@          AN        A4,KEY+6,A1       . SUIZ
)@@G@@BTRACT@C@@@#          AN        A4,6,A1           . SUBTRACT@D@@@@      JA
)@@G@@    JZ        A4,0,X11          . THEY ARE EQUAL@E@@@@          JC      JB
)@@G@@  1,X11             . KEY(A2) < KEY(A1)   @E@@@@          J         2,X1JC
)@@G@@1             . KEY(A2) > KEY(A1)   @#@@@@          END     ___@@@      JD
)@@G@@@@A@@#RSELE$      @@A@@ORSEL$       @@A@@SRSLE  *[S@@@*SDFF*@ @]@@      JE
)@@G@@    INCLUDE   'AXR$'    @ @[@@          INCLUDE   'JPROC$'  @ @]@[      JF
)@@G@@    INCLUDE   'JPROCS'  @#@@@]          LIBRARY @ @@@@          INCLUDE JG
)@@G@@  'AVL$DEF' @[@@@@.     @B@@@@. AVL TREE MAINTENAINCE SUBROUTINE PACKAGEJH
)@@G@@@[@@@@.     @G@@@@. DESIGNED AND IMPLEMENTED BY  ALAN K. STEBBENS, UOMCSJI
)@@G@@C SYSTEMS STAFF.  @[@@@@.     @D@@@@. SPECIAL ROUTINE TO COMPARE KEYS EIJJ
)@@G@@GHT WORDS LONG    @[@@@@.     @#@@@@          IBANK   @]@@@@AVL$KTEST8* JK
)@@G@@@G@@@@          DL        A4,KEY,A2         . GET TWO WORDS FROM THE NODJL
)@@G@@E KEY @H@#@@          DAN       A4,KEY,A1         . SUBTRACT TWO WORDS UJM
)@@G@@SING PACKET KEY   @H@@@#          DAN       A4,,A1            . SUBTRACTJN
)@@G@@ TWO WORDS USING PACKET KEY   @G@@@@          DJZ       A4,$+3          JO
)@@G@@  . THEY ARE EQUAL, MUST CHECK AGAIN@E@@@@          JC        1,X11     JP
)@@G@@        . KEY(A2) < KEY(A1)   @E@@@@          J         2,X11           JQ
)@@G@@  . KEY(A2) > KEY(A1)   @G@@@@          DL        A4,KEY+2,A2       . GEJR
)@@G@@T TWO WORDS FROM THE NODE KEY @H@#@@          DAN       A4,KEY+2,A1     JS
)@@G@@  . SUBTRACT TWO WORDS USING PACKET KEY   @H@@@#          DAN       A4,2JT
)@@G@@,A1           . SUBTRACT TWO WORDS USING PACKET KEY   @D@@@@          DJJU
)@@G@@Z       A4,$+3            . THEY ARE EQUAL@E@@@@          JC        1,X1JV
)@@G@@1             . KEY(A2) < KEY(A1)   @E@@@@          J         2,X11     JW
)@@G@@        . KEY(A2) > KEY(A1)   @F@@@@          DL        A4,KEY+4,A2     JX
)@@G@@  . GET NEXT TWO WORDS AFTER  @C@#@@          DAN       A4,KEY+4,A1     JY
)@@G@@  . SUBTRACT@C@@@#          DAN       A4,4,A1           . SUBTRACT@D@@@@JZ
)@@G@@          DJZ       A4,$+3            . THEY ARE EQUAL@E@@@@          JCKA
)@@G@@        1,X11             . KEY(A2) < KEY(A1)   @E@@@@          J       KB
)@@G@@  2,X11             . KEY(A2) > KEY(A1)   @G@@@@          DL        A4,KKC
)@@G@@EY+6,A2       . GET NEXT TWO WORDS FROM NODE KEY@C@#@@          DAN     KD
)@@G@@  A4,KEY+6,A1       . SUBTRACT@C@@@#          DAN       A4,6,A1         KE
)@@G@@  . SUBTRACT@D@@@@          DJZ       A4,0,X11          . THEY ARE EQUALKF
)@@G@@@E@@@@          JC        1,X11             . KEY(A2) < KEY(A1)   @E@@@@KG
)@@G@@          J         2,X11             . KEY(A2) > KEY(A1)   @#@@@@      KH
)@@G@@    END     ___@@@:9@@@[C@0@HI')H@F*H9@@@[T9@@@AG>G@@@')H@F0G)G@@@G8@@@[KI
)@@G@@*[S@@@*SDFF*@#@@@M          $EJECT  @#@@@M          LIBRARY @ @@@M      KJ
)@@G@@    INCLUDE   'AVL$DEF' @[@@@M.     @B@@@M. AVL TREE MAINTENAINCE SUBROUKK
)@@G@@TINE PACKAGE@[@@@M.     @G@@@M. DESIGNED AND IMPLEMENTED BY  ALAN K. STEKL
)@@G@@BBENS, UOMCSC SYSTEMS STAFF.  @[@@@M.     @[@M@L/.    @[@@@M.     @I@@@LKM
)@@G@@. THIS ROUTINE PERFORMS THE BALANCING MAINTENAINCE. BALANCING BECOMES NEKN
)@@G@@CESSARY     @I@@@L. WHEN THE HEIGHTS OF TWO SUBTREES VARY BY MORE THAN OKO
)@@G@@NE NODE, AS THE RESULT OF     @ @@@L. AN INSERTION OR A DELETION. @G@@@LKP
)@@G@@. IN THE CASE OF INSERTION, AT MOST ONE REBALANCING IS NECESSARY; WHILE KQ
)@@G@@@G@M@L. IN THE CASE OF DELETION, THERE MAY BE AS MANY REBALANCINGS AS THKR
)@@G@@ERE   @F@@@M. IN THE CASE OF DELETION,  MAY BE AS MANY REBALANCINGS AS TKS
)@@G@@HERE  @B@M@L. ARE NODES IN THE TWO SUBTREES CONCERNED.@#@@@M. ORDER LOG(KT
)@@G@@N).   @H@@@L.   IN ANY CASE, WHEN REBALANCING DOES BECOME NECESSARY, IT KU
)@@G@@DOES SO IN ONE    @H@@@L. OF FOUR POSSIBLE WAYS, TWO OF WHICH ARE REFLECKV
)@@G@@TIONS OF THE OTHER TWO, SO    @D@@@L. ESSENTIALLY, THERE ARE TWO CASES OKW
)@@G@@F REBALANCING.    @G@@@L. ASSUMING THAT AN INSERTION HAS JUST BEEN MADE,KX
)@@G@@ THE FIRST CASE OCCURS  @G@@@L. WHEN TWO SUCCESSIVE NODES (IE: FATHER ANKY
)@@G@@D SON) ARE 'HEAVY' ON THE SAME@H@@@L. SIDE (IE: HAVE THE SAME, NON-NULL,KZ
)@@G@@ BALANCE FACTORS). THE SECOND CASE OCCURS @G@@@L. WHEN TWO SUCCESSIVE NOLA
)@@G@@DES ARE 'HEAVY' ON OPPOSITE SIDES (IE: HAVE THE @ @@@L. OPPOSITE BALANCELB
)@@G@@ FACTORS).  @G@@@L.   LET'S ASSUME, FOR CASE ONE, THAT THE TWO SUCCESSIVLC
)@@G@@E NODES HAVING THE@G@@@L. SAME BALANCE FACTOR ARE CALLED A AND B, B BEINLD
)@@G@@G THE SON OF A, ON THE  @G@@@L. 'HEAVY' SIDE, OF COURSE. FURTHER, A'S OTLE
)@@G@@HER SON IS A SUBTREE R, AND   @H@@@L. B'S TWO SONS ARE S AND T, WITH T BLF
)@@G@@EING THE HEAVY-SIDE SON. IN LIST NOTATION @G@@@L. THE SUBTREE MAY BE EXPLG
)@@G@@RESSED AS A(R,B(S,T)). THE 'CURE' NECESSARY     @G@@@L. FOR THE REBALANCLH
)@@G@@ING OF THE A-B PAIR IS A SINGLE ROTATION, EXCHANGING  @G@@@L. A AND B, WLI
)@@G@@HILE MAINTAINING THE PROPER RELATIONSHIP OF THEIR SUBTREES. @H@@@L. THATLJ
)@@G@@ IS, A(R,B(S,T)) --> B(A(R,S),T). NOTICE THAT IN THIS ROTATION, R,S, ANDLK
)@@G@@@G@@@L. T STILL REMAIN IN THEIR RESPECTIVE ORDER, WHILE A AND B HAVE SWILL
)@@G@@TCHED @A@@@L. POSITIONS (BUT NOT PRECEDENCE).   @G@@@L.   CASE TWO MAY BLM
)@@G@@E SIMILARLY EXAMINED. ASSUMING THE SAME A AND B NODES,@H@@@L. ALSO INCLULN
)@@G@@DE C, THE HEAVY-SIDE SON OF B (REMEMBER THAT C WILL BE LINKING    @H@@@LLO
)@@G@@. FROM THE SIDE OF B OPPOSITE THAT WHICH B LINKED FROM A).  FURTHER, A'SLP
)@@G@@ OTHER@G@@@L. SON IS R, B'S OTHER SON IS U, AND C'S TWO SONS ARE S AND TLQ
)@@G@@. AGAIN, IN @H@@@L. LIST NOTATION, THE STRUCTURE IS A(R,B(C(S,T),U)).  TLR
)@@G@@HE 'CURE' THIS TIME IS A@H@@@L. DOUBLE ROTATION, FIRST EXCHANGING POSITILS
)@@G@@ONS OF B AND C, THEN C AND A, WITH  @A@@@L. C BECOMING THE NEW HEAD NODELT
)@@G@@.     @I@@@L.  A(R,B(C(S,T),U) --> A(R,C(S,B(T,U))) --> C(A(R,S),B(T,U))LU
)@@G@@    AGAIN, NOTE THAT    @G@@@L. R,S,T, AND U REMAIN IN THEIR RESPECTIVE LV
)@@G@@ORDER, WHILE A,B, AND C HAVE  @B@@@L. EXCHANGED POSITIONS, BUT NOT PRECELW
)@@G@@DENCE.@[@@@L.     @D@@@L. NOW THAT IT'S ALL VERY CLEAR, LET'S WRITE SOMELX
)@@G@@ CODE.@[@@@L.     @F@@@L. IN THE CODE BELOW, THE SYMBOLS A, B, AND C ARELY
)@@G@@ USED, INSTEAD    @F@@@L. OF THE ACTUAL REGISTERS CONTAINING THEIR ADDRELZ
)@@G@@SS, FOR CLARITY.  @[@@@L.     @^@@@LA         EQU       A2  @^@@@LB     MA
)@@G@@    EQU       A3  @^@@@LC         EQU       A0  @^@@@MALPHA     EQU     MB
)@@G@@  A1  @^@@@MXREG      EQU       X11 @^@@@MAREG      EQU       A5  @[@@@LMC
)@@G@@.     @D@@@L. AVL$BALANCE - BALANCE THE SUBTREE HEADED BY A2.     @H@@@LMD
)@@G@@. A1 (ALPHA) IS A PARAMETER REFLECTING THE TRUE BALANCE OF THE TREE, WHIME
)@@G@@LE    @G@@@L. BALFAC(A2) MERELY INDICATES THE BALANCE CONDITION BEFORE AMF
)@@G@@NY CHANGE IN@C@@@L. THE TREE, CAUSED BY INSERTION OR DELETION.    @[@@@LMG
)@@G@@.     @^@@@L. INPUT: A1 = ALPHA     @A@@@L.        A2 = SUBTREE HEAD NODMH
)@@G@@E     @^@@@L. LMJ   X11,AVL$BALANCE @[@@@L.     @G@@@L. OUTPUT: A2 = NEWMI
)@@G@@ HEAD NODE (SAME AS OLD A2 IF NO ROTATIONS PERFORMED).@ @@@L.         A3MJ
)@@G@@ = ACTION INDEX:  @B@@@L.              0 -> NO BALANCING DONE     @A@@@LMK
)@@G@@.              1 -> SINGLE ROTATION @A@@@L.              2 -> DOUBLE ROTML
)@@G@@ATION @F@@@L.              3 -> SPECIAL CASE SINGLE ROTATION (FOR AVL$DEMM
)@@G@@LETE) @]@@@M. USES SAVE3@[@@@L.     @#@@@M          IBANK   @]@@@LAVL$BAMN
)@@G@@LANCE*@D@M@L          ENTER     '$BALANCE' 'BAL$NUM','BAL$TIM'    @E@M@LMO
)@@G@@          SX        X11,SAVE1         . SAVE RETURN ADDRESS @E@@@M      MP
)@@G@@    SX        X11,BALINK        . SAVE RETURN ADDRESS @F@@@L          LRMQ
)@@G@@,U      R2,0              . INITIALIZE ACTION INDEX   @H@@@L          JEMR
)@@G@@Z       BALFAC,A BABAL    . IF BAL(A)=0 NO BALANCING NECESSARY    @H@P@LMS
)@@G@@          JE        A1,BALFAC,A BALANCE  . IF BAL(A)=ALPHA THEN MUST BALMT
)@@G@@ANCE  @H@@@P          JE        A1,BALFAC,A BALANCER  . IF BAL(A)=ALPHA MU
)@@G@@THEN MUST BALANCE @D@@@L          SZ        A1                . CLEAR ALMV
)@@G@@PHA   @E@@@LBABAL     SA        A1,BALFAC,A       . SET BAL(A) TO ALPHA MW
)@@G@@@E@M@LBAFIN     LX        X11,SAVE1         . RESTORE HOME ADDR   @E@@@MMX
)@@G@@BAFIN     LX        X11,BALINK        . RESTORE HOME ADDR   @F@@@L      MY
)@@G@@    LA        A3,R2             . RETURN WITH ACTION INDEX  @C@M@L      MZ
)@@G@@    EXIT      0,X11 '$BALANCE' 'BAL$TIM'  @C@@@M          J         0,X1NA
)@@G@@1             . RETURN  @[@@@L.     @D@@@L. THE TREE NEEDS TO BE BALANCENB
)@@G@@D, FIGURE OUT WHICH WAY @[@@@L.     @]@P@LBALANCE     @]@@@PBALANCER    NC
)@@G@@@ @@@O          INCR      BALANCE   @ @@@O          TIMEON    BALANCE   ND
)@@G@@@G@@@L          L         B,BALFAC,A        . GET THE BALANCE FACTOR OF NE
)@@G@@A     @H@M@L          GETLINK,B B,A               . GET HEAVY SON OF A, NF
)@@G@@USING BALFAC(A)   @H@@@M          SET       B LINK(B,A)       . GET HEAVNG
)@@G@@Y SON OF A, USING BALFAC(A)   @H@@@L          LR,U      R2,3            NH
)@@G@@  . ASSUME SPECIAL CASE SINGLE ROTATION   @F@M@L          JEZ       BALFNI
)@@G@@AC,B BASINGLE . SKIP NOW IF WE'RE RIGHT   @F@@@M          JEZ       BALFNJ
)@@G@@AC,B BAL040     . SKIP NOW IF WE'RE RIGHT @F@@@L          LR,U      R2,1NK
)@@G@@              . TRY NORMAL SINGLE ROTATION@I@M@L          JE        A1,BNL
)@@G@@ALFAC,B BASINGLE . IF ALPHA = BAL(B) THEN NORMAL SINGLE     @H@@@M      NM
)@@G@@    JE        A1,BALFAC,B BAL040  . IF ALPHA = BAL(B) THEN NORMAL SINGLENN
)@@G@@@F@@@L          LR,U      R2,2              . IT'S A DOUBLE ROTATION    NO
)@@G@@@[@@@L.     @^@@@L. DOUBLE ROTATION TIME  @[@@@L.     @ @@@O          INNP
)@@G@@CR      DROTATE   @ @@@O          TIMEON    DROTATE   @ @M@L          INNQ
)@@G@@C       DBLR$NUM  @ @M@L          TIMEON    DBLR$TIM  @G@@@L          SANR
)@@G@@        A0,R1             . SAVE PACKET ADDRESS ELSEWHERE   @E@M@L      NS
)@@G@@    GETLINK   C,B               . C <- LINK(ALPHA,B)  @E@@@M          SENT
)@@G@@T       C LINK(-ALPHA,B)  . C <- LINK(-ALPHA,B) @E@M@L          LA      NU
)@@G@@  A5,ULINK,A        . ULINK(C) <- ULINK(A)@E@@@M          SET       ULINNV
)@@G@@K,C ULINK,A   . ULINK(C) <- ULINK(A)@C@@@M          SET       LINK(-ALPHNW
)@@G@@A,B) LINK(ALPHA,C)@F@@@M          CSET      ULINK,AREG B      . UPLINK(LNX
)@@G@@INK(ALPHA,C)) <- B@E@@@M          SET       LINK(ALPHA,C) B   . LINK(ALPNY
)@@G@@HA,C) <- B  @D@@@M          SET       ULINK,B C         . UPLINK(B) <- CNZ
)@@G@@@D@@@M          SET       LINK(ALPHA,A) LINK(-ALPHA,C) .    @G@N@M      OA
)@@G@@    CSET      ULINK,AREG C      . UPLINK(LINK(-ALPHA,C)) <- A     @G@@@NOB
)@@G@@          CSET      ULINK,AREG A      . UPLINK(LINK(-ALPHA,C)) <- A     OC
)@@G@@@E@@@M          SET       LINK(-ALPHA,C) A  . LINK(-ALPHA,C) <- A @D@@@MOD
)@@G@@          SET       ULINK,A C         . UPLINK(A) <- C@ @M@L          SAOE
)@@G@@        A5,ULINK,C@G@M@L          GETLINK   A5,C              . LINK(-ALOF
)@@G@@PHA,B) <- LINK(ALPHA,C) @^@M@L          SETNLINK  A5,B@F@M@L          LXOG
)@@G@@        X11,A5            . ULINK(LINK(ALPHA,C)) <- B @A@M@L          S OH
)@@G@@        B,ULINK,X11     @E@M@L          SETLINK   B,C               . LIOI
)@@G@@NK(ALPHA,C) <- B  @D@M@L          S         C,ULINK,B         . ULINK(B)OJ
)@@G@@ <- C @G@M@L          GETNLINK  A5,C              . LINK(ALPHA,A) <- LINOK
)@@G@@K(-ALPHA,C) @^@M@L          SETLINK   A5,A@F@M@L          LX        X11,OL
)@@G@@A5            . ULINK(LINK(-ALPHA,C)) <- A@A@M@L          S         A,ULOM
)@@G@@INK,X11     @E@M@L          SETNLINK  A,C               . LINK(-ALPHA,C)ON
)@@G@@ <- A @D@M@L          S         C,ULINK,A         . ULINK(A) <- C @H@@@LOO
)@@G@@. [BAL(A),BAL(B)] <- (-ALPHA,0),(0,0),(0,ALPHA) IF BAL(C)=(ALPHA,O,-ALPHOP
)@@G@@A)    @D@@@L          LA        A4,BALFAC,C       . GET BAL(C)    @E@@@LOQ
)@@G@@          SZ        A5                . ASSUME 0,0 INITIALLY@F@M@L      OR
)@@G@@    JZ        A4,BABSET         . IF BAL(C)=0 SKIP CODE     @F@@@M      OS
)@@G@@    JZ        A4,BAL010         . IF BAL(C)=0 SKIP CODE     @F@@@L      OT
)@@G@@    LA        A5,A1             . ASSUME BAL(C) = -ALPHA    @E@@@L      OU
)@@G@@    TNE       A4,A1             . IS BAL(C) = ALPHA?  @E@@@L          LAOV
)@@G@@        A5,NALPHA,A1      . YES, GET -ALPHA     @F@M@LBABSET    SA      OW
)@@G@@  A5,BALFAC,B       . POST NEW BALANCE FACTORS  @[@@@MBAL010@F@@@M      OX
)@@G@@    SA        A5,BALFAC,B       . POST NEW BALANCE FACTORS  @B@@@L      OY
)@@G@@    SSL       A5,18             .   @C@@@L          SA        A5,BALFAC,OZ
)@@G@@A       . DONE    @D@@@L          SZ        BALFAC,C          . BAL(C) <PA
)@@G@@- 0   @^@M@L. SEE IF ALPHA = +1     @B@@@M. NOW ADJUST THE RANK VALUES IPB
)@@G@@F NECESSARY @ @M@L          IF        RANKS     @E@M@L          JE,U    PC
)@@G@@  A1,1 BADPOS       . SKIP IF ALPHA = +1  @E@@@M          JE,U      A1,1PD
)@@G@@ BAL020       . SKIP IF ALPHA = +1  @A@@@L. ALPHA = -1 (ACTUALLY IT IS 2PE
)@@G@@)     @G@M@L          ADDRANKS  C,A               . RANK(C) <- RANK(C) +PF
)@@G@@ RANK(A)    @G@@@M          ADDRANKS  C,B               . RANK(C) <- RANPG
)@@G@@K(C) + RANK(B)    @G@M@L          SUBRANKS  B,C               . RANK(B) PH
)@@G@@<- RANK(B) - RANK(C)    @G@@@M          SUBRANKS  A,C               . RAPI
)@@G@@NK(A) <- RANK(A) - RANK(C)    @E@M@L          J         BADCLS          PJ
)@@G@@  . GO CLOSE UP SHOP    @E@@@M          J         BAL030            . GOPK
)@@G@@ CLOSE UP SHOP    @]@@@L. ALPHA = +1@G@M@LBADPOS    SUBRANKS  A,C       PL
)@@G@@        . RANK(A) <- RANK(A) - RANK(C)    @[@@@MBAL020@G@@@M          SUPM
)@@G@@BRANKS  B,C               . RANK(B) <- RANK(B) - RANK(C)    @G@M@L      PN
)@@G@@    ADDRANKS  C,B               . RANK(C) <- RANK(C) + RANK(B)    @G@@@MPO
)@@G@@          ADDRANKS  C,A               . RANK(C) <- RANK(C) + RANK(A)    PP
)@@G@@@ @M@L          ENDF      RANKS     @C@@@L. CLOSE UP SHOP FOR THE DOUBLEPQ
)@@G@@ ROTATION CREW    @E@M@LBADCLS    SA        C,B               . FAKE OUTPR
)@@G@@ COMMON CODE@[@@@MBAL030@E@@@M          SA        C,B               . FAPS
)@@G@@KE OUT COMMON CODE@F@@@L          LA        A0,R1             . RESTORE PT
)@@G@@PACKET ADDRESS    @ @@@O          TIMEOFF   DROTATE   @D@M@L          TIPU
)@@G@@MEOFF   DBLR$TIM          . TURN OFF TIMER@F@M@L          J         BALFPV
)@@G@@IN            . GO FINISH UP THE LAST STEP@F@@@M          J         BAL0PW
)@@G@@80            . GO FINISH UP THE LAST STEP@[@@@L.     @F@M@L. HEY, BABY,PX
)@@G@@ YOU WANNA GET TOGETHER FOR A SINGLE ROTATION, TONITE?@ @@@M. SINGLE ROTPY
)@@G@@ATION TIME. YAAAH.@]@M@L. RUBBITT.  @]@M@LBASINGLE    @[@@@MBAL040@ @@@OPZ
)@@G@@          INCR      SROTATE   @ @@@O          TIMEON    SROTATE   @F@@@MQA
)@@G@@          SET       ULINK,B ULINK,A   . UPLINK(B) <- UPLINK(A)    @I@@@MQB
)@@G@@          SET       LINK(ALPHA,A) LINK(-ALPHA,B) . LINK(ALPHA,A) <- LINKQC
)@@G@@(-ALPHA,    @G@@@M          CSET      ULINK,AREG A      . UPLINK(LINK(-AQD
)@@G@@LPHA,B)) <- A     @D@@@M          SET       ULINK,A B         . UPLINK(AQE
)@@G@@) <- B@E@@@M          SET       LINK(-ALPHA,B) A  . LINK(-ALPHA,B) <- A QF
)@@G@@@ @M@L          INC       SGLR$NUM  @ @M@L          TIMEON    SGLR$TIM  QG
)@@G@@@E@M@L          LA        A5,ULINK,A        . ULINK(B) <- ULINK(A)@ @M@LQH
)@@G@@          SA        A5,ULINK,B@G@M@L          GETNLINK  A5,B            QI
)@@G@@  . LINK(ALPHA,A) <- LINK(-ALPHA,B) @^@M@L          SETLINK   A5,A@F@M@LQJ
)@@G@@          LX        X11,A5            . ULINK(LINK(-ALPHA,B)) <- A@A@M@LQK
)@@G@@          S         A,ULINK,X11     @D@M@L          S         B,ULINK,A QL
)@@G@@        . ULINK(A) <- B @E@M@L          SETNLINK  A,B               . LIQM
)@@G@@NK(-ALPHA,B) <- A @G@@@M. NOW DETERMINE THE NEW BALANCE FACTORS: IF NORMQN
)@@G@@AL SINGLE ROTATION, THEN@H@@@M. BALFAC(A) <- BALFAC(B) <- 0. IF SPECIAL QO
)@@G@@SINGLE ROTATION (FROM DELETION) THEN@B@@@M. BALFAC(A) <- ALPHA, BALFAC(BQP
)@@G@@) <- -ALPHA.@F@@@M          LA        A5,R2             . GET ROTATION TQQ
)@@G@@YPE (1 OR 3)@F@@@M          JE,U      A5,1 BAL050       . IF 1 THEN NORMQR
)@@G@@AL ROTATION @E@@@M          SA        A1,BALFAC,A       . BALFAC(A) <- AQS
)@@G@@LPHA  @E@@@M          LA,H1     A5,NALPHA,A1      . GET NEGATIVE ALPHA  QT
)@@G@@@E@@@M          SA        A5,BALFAC,B       . BALFAC(B) <- -ALPHA @E@@@MQU
)@@G@@          J         BAL060            . GO FIX ANY RANKS    @[@@@MBAL050QV
)@@G@@@F@@@L          SZ        BALFAC,A          . BAL(A) <- BAL(B) <- 0     QW
)@@G@@@ @@@L          SZ        BALFAC,B  @[@@@MBAL060@ @M@L          IF      QX
)@@G@@  RANKS     @E@M@L          JE,U      A1,1 BASPOS       . SKIP IF ALPHA QY
)@@G@@= +1  @E@@@M          JE,U      A1,1 BAL070       . SKIP IF ALPHA = +1  QZ
)@@G@@@]@M@L. ALPHA = -1@ @@@M. ALPHA = -1 (ACTUALLY = 2)   @G@@@L          SURA
)@@G@@BRANKS  A,B               . RANK(A) <- RANK(A) - RANK(B)    @D@M@L      RB
)@@G@@    J         BASCLS            . GO FINISH     @D@O@M          J       RC
)@@G@@  BAL080            . GO FINISH     @D@@@O          J         BAL075    RD
)@@G@@        . GO FINISH     @]@@@L. ALPHA = +1@G@M@LBASPOS    ADDRANKS  B,A RE
)@@G@@              . RANK(B) <- RANK(B) + RANK(A)    @[@@@MBAL070@G@@@M      RF
)@@G@@    ADDRANKS  B,A               . RANK(B) <- RANK(B) + RANK(A)    @[@@@ORG
)@@G@@BAL075@ @@@O          TIMEOFF   SROTATE   @ @M@L          ENDF      RANKRH
)@@G@@S     @B@@@L. CLOSE UP SHOP FOR THE SINGLE ROTATION   @C@@@M. BOTH DOUBLRI
)@@G@@E & SINGLE ROTATION CODE END UP HERE@ @M@LBASCLS    TIMEOFF   SGLR$TIM  RJ
)@@G@@@[@@@MBAL080@C@M@L. BOTH DOUBLE & SINGLE ROTATION CODE END UP HERE@G@M@LRK
)@@G@@BALFIN    LX        X11,ULINK,B       . GET FATHER OF BALANCE NODE (X)  RL
)@@G@@@G@@@M          LX        X11,ULINK,B       . GET FATHER OF BALANCE NODERM
)@@G@@ (X)  @F@M@L          JEZ,U     0,X11 BAROOT      . IF ZERO THE NEW ROOTRN
)@@G@@ NODE @F@@@M          JEZ,U     0,X11 BAL090      . IF ZERO THE NEW ROOTRO
)@@G@@ NODE @E@@@L          TNE       A,LLINK,X11       . IS A = LLINK(X)?    RP
)@@G@@@F@@@L          S         B,LLINK,X11       . POST NEW LINK TO NEW HEAD RQ
)@@G@@@E@@@L          TNE       A,RLINK,X11       . IS A = RLINK(X)?    @E@@@LRR
)@@G@@          S         B,RLINK,X11       . YES, SET NEW LINK   @G@M@L      RS
)@@G@@    J         BAFIN             . EDEEBEDEEBEDEE, THAT'S ALL FOLK @G@@@MRT
)@@G@@          J         BAL100            . EDEEBEDEEBEDEE, THAT'S ALL FOLK RU
)@@G@@@F@@@L. WE'VE JUST ROTATED THE OLD ROOT NODE OUT OF ITS HEAD POSITION   RV
)@@G@@@[@M@LBAROOT@[@@@MBAL090@D@@@L          S         B,ROOT            . NERW
)@@G@@W ROOT NODE @[@@@MBAL100@E@@@M          LA        A2,B              . THRX
)@@G@@IS IS THE NEW HEAD@ @@@O          TIMEOFF   BALANCE   @B@@@L          J RY
)@@G@@        BAFIN             .   @[@@@L.     @#@@@L. USEFUL CONSTANTS@[@@@LRZ
)@@G@@.     @E@@@MAVL$NALPHA* EQU     $-1               . GLOBALIZE THIS TABLESA
)@@G@@@F@@@LNALPHA    EQU       $-1               . TABLE TO LOAD -ALPHA IN H1SB
)@@G@@@^@@@L          *         2,0 @^@@@L          *         1,0 @#@@@M      SC
)@@G@@    END     ___@@@              . RANK(C) <- RANK(C) + RANK(B)    @G@M@LSD
)@@G@@*[S@@@*SDFF*@ @O@N          INCLUDE   'AXR$'    @ @O@N          INCLUDE SE
)@@G@@  'JPROC$'  @ @O@N          INCLUDE   'AVL$DEF' @ @O@N          INCLUDE SF
)@@G@@  'AVL$'    @A@O@N          INCLUDE   'BASEPROCS'     @#@@@O          LISG
)@@G@@BRARY @#@@@O          AVL$P   @A@@@O          AVL$FIELDS AVLPKTBASE     SH
)@@G@@@^@@@O          AVL$NODES     @^@@@OVARYKEYS  EQU       1   @A@@@OKEYSIZSI
)@@G@@E   EQU       (\VARYKEYS)->2!0@#@O@N          IBANK   @#@@@O          ASSJ
)@@G@@CII   @[@@@O.     @C@@@O. PARAMETERS TO CONTROL THE GRAPH OF THE TREE   SK
)@@G@@@[@@@O.     @^@@@OINDENT    EQU       4   @^@@@OBRCOLN    EQU       2   SL
)@@G@@@^@@@OLINES     EQU       0   @[@@@O.     @[@@@O.     @A@@@N. ROUTINE TOSM
)@@G@@ TEST THE AVL ROUTINES  @[@@@N.     @#@O@N          ASCII   @#@@@O      SN
)@@G@@    IBANK   @]@O@NAVLTEST*    @]@@@OAVLTEST     @F@@@O          LA,U    SO
)@@G@@  A0,0400001        . SET QUARTER WORD MODE     @B@@@O          ER      SP
)@@G@@  PSR$              .   @A@@@NINFREAD   LA        A0,(EOF,RDBUF)  @ @@@NSQ
)@@G@@          ER        AREAD$    @E@@@N          JOP       A0,(1*/30) INFRESR
)@@G@@AD . READ MORE INFOR    @G@@@N          JEP       A0,(1*/31) TIDY   . SKSS
)@@G@@IP NEXT READ IF NOT INFOR     @E@@@NTREAD     LA,U      A0,TRDPKT       ST
)@@G@@  . GET ATREAD$ PACKET  @D@@@N          ER        ATREAD$           . RESU
)@@G@@AD AN IMAGE @E@O@NTIDY      LA,U      A1,,A0            . PUT WORD COUNTSV
)@@G@@ IN A1@E@@@OTIDY      LA,U      A0,,A0            . PUT WORD COUNT IN A0SW
)@@G@@@E@O@N          JZ        A1,TREAD          . LOOP IF NULL CARD   @E@@@OSX
)@@G@@          JZ        A0,TREAD          . LOOP IF NULL CARD   @E@O@N      SY
)@@G@@    LA,U      A15,RDBUF,A0      . SET UPPER LIMIT     @E@@@O          LASZ
)@@G@@,U      A15,RDBUF-1,A0    . SET UPPER LIMIT     @E@@@O          LA      TA
)@@G@@  A1,('    ')       . GET SOME SPACES     @F@@@O          SA        A1,RTB
)@@G@@DBUF,A0       . CLEAR LAST WORD IN BUFFER @E@@@O          LX        X4,(TC
)@@G@@1,LDTAB)      . INITALIZE LOAD REGS @B@@@O          LX        X5,(1,RDBUTD
)@@G@@F)      .   @E@O@N          LMJ       X11,SKIPB         . SKIP NON BLANKTE
)@@G@@S     @D@O@N          J         TREAD             . EMPTY LINE    @D@@@OTF
)@@G@@          LMJ       X11,GETKEY        . GET A COMMAND @D@@@O          J TG
)@@G@@        NOCOM             . BAD STUFF     @E@@@O          LA        A4,STH
)@@G@@RCHKEY        . THE COMMAND NAME    @E@@@O          OR        A4,('    'TI
)@@G@@)       . TURN INTO LOWER CASE@D@O@N          LA,U      A6,,A3          TJ
)@@G@@  . COPY CHAR     @E@O@N          EX        LOAD              . GET THE TK
)@@G@@NEXT CHAR   @E@O@N          LSSL      A6,9              . MOVE FIRST CHATL
)@@G@@R OVER@E@O@N          OR        A3,A6             . PUT THEM TOGETHER   TM
)@@G@@@E@@@N          LR,U      R1,NCOMS          . = # OF COMMENTS     @D@O@NTN
)@@G@@          LA        A0,(1,COMTAB-1)   . WHERE THEY ARE@D@@@O          LATO
)@@G@@        A0,(2,COMTAB-2)   . WHERE THEY ARE@E@O@N          SE,H1     A4,1TP
)@@G@@,*A0          . LOOK FOR THE COMMAND@E@@@O          SE        A5,2,*A0  TQ
)@@G@@        . LOOK FOR THE COMMAND@C@@@N          J         BADCOM          TR
)@@G@@  . NO GOOD @E@O@N          LA,H2     A1,,A0            . GET COMMAND ADTS
)@@G@@DRESS @E@@@O          LA,H2     A1,1,A0           . GET COMMAND ADDRESS TT
)@@G@@@A@@@O          $IF       $PAR(4)='SNOOPY'@E@@@O          ER        OPT$TU
)@@G@@              . GET THE OPTIONS     @C@@@O          TEP       A0,OBL('T'TV
)@@G@@)       . TRACE?  @C@@@O          SLJ       TON$              . YES     TW
)@@G@@@D@@@O          LA,U      A0,1              . GET A BIT     @#@@@O      TX
)@@G@@    $ENDF   @C@@@N          J         0,A1              . GO DO IT@[@@@NTY
)@@G@@.     @#@@@N. COMMAND TABLE   @[@@@N.     @^@@@NP         PROC      *80 TZ
)@@G@@@#@@@NCOMMANDS* NAME    @F@@@NA         EQU       $                 . REUA
)@@G@@MEMBER WHERE WE ARE     @D@O@NI         DO P-1 ,J DO P(I)-1 , * P(I,J+1)UB
)@@G@@L,P(I,1)    @G@@@OI         DO P-1 ,J DO 2,P(I) , GFORM 36,P(I,J)SL++' 'UC
)@@G@@SL,18,0,18,P(I,1) @E@@@NNCOMS*    EQU       $-A               . = # OF WUD
)@@G@@ORDS OUTPUT @#@@@N          END     @[@@@N.     @[@@@N.     @D@O@NCOMTABUE
)@@G@@    COMMANDS  INSERT,'I','IN','IK' INSDIS,'ID' ;@D@@@OCOMTAB    COMMANDSUF
)@@G@@  INSERT,'I','IK' INSDIS,'ID' ;     @C@@@O                    INRANK,'IRUG
)@@G@@' INRDIS,'IRD' ;  @E@O@N                    SEARCH,'S','SN','SN' SRCHDISUH
)@@G@@,'SD' ;     @D@@@O                    SEARCH,'S','SK' SRCHDIS,'SD' ;    UI
)@@G@@@C@@@O                    SRANK,'SR' SRDIS,'SRD' ;    @H@O@N            UJ
)@@G@@        DISPLAY,'D','DT','DI' DELETE,'DE','DN','DK' DELDIS,'DD'   @D@@@OUK
)@@G@@                    DELETE,'DE','DK' DELDIS,'DD' ;    @C@@@O            UL
)@@G@@        DELRANK,'DR' DRKDIS,'DRD' ; @A@@@O                    RANDEL,'RDUM
)@@G@@' ;   @C@@@O                    DISPLAY,'D','DT','DI' ;     @A@@@O      UN
)@@G@@              DPARMS,'DP' ;   @B@@@O                    ERASE,'ET','ER',UO
)@@G@@'E' ; @B@@@O                    TRAVERSE,'TR','T' ;   @A@@@O            UP
)@@G@@        KGEN,'GEN' ;    @C@@@O                    STATON,'ON'  STATOFF,'UQ
)@@G@@OFF'  @[@@@O.     @]@@@O. WHAT???   @[@@@O.     @F@@@ONOCOM     JN      UR
)@@G@@  A3,TREAD          . READ AGAIN IF BLANK CARD  @B@@@OBADCOM    PRINT   US
)@@G@@  'UNKNOWN COMMAND'     @ @@@O          J         TREAD     @[@@@O.     UT
)@@G@@@ @@@OEOF       ER        EXIT$     @[@@@O.     @[@@@N/.    @]@@@N. INSEUU
)@@G@@RT    @[@@@N.     @E@@@NINSERT    LA,U      A0,0              . CLEAR DIUV
)@@G@@SPLAY FLAG  @E@@@NINSDIS    LA,U      A10,,A0           . SET DISPLAY FLUW
)@@G@@AG    @E@@@N          SZ        A11               . CLEAR INSERT FLAG   UX
)@@G@@@E@@@NINLOOP    LMJ       X11,GETKEY        . MOVE KEY TO 'KEY'   @E@@@NUY
)@@G@@          J         INDONE            . IF NO MORE--QUIT    @F@@@N      UZ
)@@G@@    SX        X11,A11           . SET FLAG SAYS WE SAW ONE  @E@O@N      VA
)@@G@@    LA        A0,A8             . GET LENGTH OF KEY   @F@O@N          AAVB
)@@G@@,U      A0,AVLKEY-AVLNODE . ADD OFFST TO KEY ALSO     @F@O@N          LMVC
)@@G@@J       X11,GETBUF        . GET A BUFFER THAT BIG     @D@O@N          ERVD
)@@G@@        ERR$              . NO MORE, HUH! @E@O@N          AVLINSERT AVLPVE
)@@G@@KT A8,,A0,U   . INSERT THE NEW KEY  @A@@@O          LMJ       X11,MOVEKEVF
)@@G@@Y     @E@@@O          AVLIK     AVLPKT A8,,A0,U   . INSERT THE NEW KEY  VG
)@@G@@@G@O@N          JNZ       A2,INALREDY       . SSIP IF NODE IS ALREADY INVH
)@@G@@SERTED@F@@@O          JZ        A2,INLOOP         . LOOP IF NODE INSERTEVI
)@@G@@D OK  @F@O@N          JZ        A10,INLOOP        . IF NO DISPLAY -- LOOVJ
)@@G@@P     @E@O@N          LX,U      X8,INSRTM         . GET INSRTED MESSAGE VK
)@@G@@@D@O@N          LX,U      X9,,A1            . GET NODE ADDR @D@O@NINPRT VL
)@@G@@    LMJ       X11,PRTNODE       . PRINT THE NODE@D@O@N          J       VM
)@@G@@  INLOOP            . TRY AGAIN     @D@O@NINALREDY  LA,U      A0,,A2    VN
)@@G@@        . GET NODE ADDR @E@O@N          LX,U      X8,INSRTPM        . GEVO
)@@G@@T RIGHT MESSAGE   @C@O@N          J         INPRT             . PRINT   VP
)@@G@@@A@@@O          LMJ       X11,PREVNODE    @D@@@O          J         INLOVQ
)@@G@@OP            . TRY AGAIN     @C@O@NINDONE    JNZ       A11,TREAD       VR
)@@G@@  . GO AGAIN@[@@@OINDONE@ @@@O          JP        A3,INLOOP @]@@@OALLDONVS
)@@G@@E     @G@@@O          JNZ       A10,DISPLAY       . GO DISPLAY TREE IF FVT
)@@G@@LAG SET     @C@@@O          JNZ       A11,TREAD         . GO AGAIN@C@O@NVU
)@@G@@          LA        A0,MISPCW         . GET CW  @ @O@N          ER      VV
)@@G@@  APRINT$   @B@@@O          PRINT     'NO KEY SPECIFIED'    @E@@@N      VW
)@@G@@    J         TREAD             . GO READ SOME MORE   @[@@@O.     @#@@@OVX
)@@G@@. INSERT BY RANK  @[@@@O.     @^@@@OINRANK    LA,U      A0,0@ @@@OINRDISVY
)@@G@@    LA,U      A10,,A0   @^@@@O          SZ        A11 @ @@@OINRLOOP   LMVZ
)@@G@@J       X11,GETNUM@ @@@O          J         INRDONE   @ @@@O          SXWA
)@@G@@        X11,A11   @ @@@O          SA        A0,RANK   @ @@@O          LMWB
)@@G@@J       X11,GETKEY@C@@@O          LA,U      A8,0              . NO KEY  WC
)@@G@@@A@@@O          LMJ       X11,MOVEKEY     @E@@@O          SA        A8,AWD
)@@G@@VLKSZ,A0      . STORE THE KEYSIZE   @F@@@O          AVLIR     AVLPKT RANWE
)@@G@@K,,A0,U . INSERT THE NODE BY RANK   @ @@@O          JZ        A2,INRLOOPWF
)@@G@@@A@@@O          LMJ       X11,PREVNODE    @ @@@O          J         INRLWG
)@@G@@OOP   @ @@@OINRDONE   JP        A3,INRLOOP@A@@@ORALLDONE  JNZ       A10,WH
)@@G@@DISPLAY     @ @@@O          JNZ       A11,TREAD @B@@@O          PRINT   WI
)@@G@@  'NO RANK SPECIFIED'   @ @@@O          J         TREAD     @[@@@O.     WJ
)@@G@@@D@@@O. ROUTINE TO MOVE THE SEARCH TO INTO THE NEW NODE     @[@@@O.     WK
)@@G@@@^@@@OMOVEKEY   SAVER     X11 @E@@@O          LA        A0,A8           WL
)@@G@@  . GET LENGTH OF KEY   @F@@@O          AA,U      A0,AVLKEY-AVLNODE . ADWM
)@@G@@D OFFST TO KEY ALSO     @F@@@O          LMJ       X11,BGET          . GEWN
)@@G@@T A BUFFER THAT BIG     @G@@@O          LX,U      X8,AVLKEY,A0      . TRWO
)@@G@@ANSFER KEY TO THE NEW NODE    @^@@@O          LXI,U     X8,1@C@@@O      WP
)@@G@@    LX        X9,(1,SRCHKEY)    . SOURCE  @E@@@O          LR        R1,AWQ
)@@G@@8             . # OF WORDS IN KEY   @C@@@O          BT        X8,,*X9   WR
)@@G@@        . MOVE IT @A@@@O          LOADR     MOVEKEY X11     @ @@@O      WS
)@@G@@    J         0,X11     @[@@@O.     @D@@@O. ROUTINE TO PRINT OUT A PREVIWT
)@@G@@OUSLY INSERTED NODE     @[@@@O.     @^@@@OPREVNODE  SAVER     X11 @D@@@OWU
)@@G@@          LX,U      X9,,A2            . SAVE NODE ADDR@I@@@O          LAWV
)@@G@@,U      A0,,A1            . RETURN NEW UNUSED NODE BACK TO FREEPOOL     WW
)@@G@@@B@@@O          LMJ       X11,BREL          .   @F@@@O          LX,U    WX
)@@G@@  X8,(' INSERTED PREVIOUSLY&') . CORRECT MESSAGE@D@@@O          LMJ     WY
)@@G@@  X11,PRTNODE       . PRINT THE NODE@A@@@O          LOADR     PREVNODE XWZ
)@@G@@11    @ @@@O          J         0,X11     @[@@@N/.    @]@@@N. SEARCH    XA
)@@G@@@[@@@N.     @E@@@NSEARCH    LA,U      A0,0              . CLEAR DISPLAY XB
)@@G@@FLAG  @E@@@NSRCHDIS   LA,U      A10,,A0           . SET DISPLAY FLAG    XC
)@@G@@@E@@@N          SZ        A11               . CLEAR KEY FOUND FLAG@D@@@NXD
)@@G@@SRLOOP    LMJ       X11,GETKEY        . GET A KEY     @C@O@N          J XE
)@@G@@        INDONE            . DONE    @C@@@O          J         SRDONE    XF
)@@G@@        . DONE    @C@@@N          SX        X11,A11           . SET FLAGXG
)@@G@@@D@O@N          AVLSEARCH AVLPKT A8,KEY,,U  . INSERT THE KEY@D@@@O      XH
)@@G@@    AVLSK     AVLPKT A8,SRCHKEY . INSERT THE KEY@F@@@O          LX,U    XI
)@@G@@  X9,,A2            . SAVE THE NODE ADDRESS     @D@@@N          JZ      XJ
)@@G@@  A2,SRNOTF         . SKIP NOT FOUND@D@@@O          LX,U      X8,0      XK
)@@G@@        . NO MESSAGE    @A@@@O          LMJ       X11,PRTNODE     @E@O@NXL
)@@G@@          JZ        A10,SRLOOP        . SKIP IF NO PRINTING @F@O@N      XM
)@@G@@    LX,U      X8,0              . ADD NOTHING AFTER MESSAGE @D@O@N      XN
)@@G@@    LX,U      X9,,A2            . GET NODE ADDR @D@O@N          LMJ     XO
)@@G@@  X11,PRTNODE       . PRINT THE NODE@D@@@N          J         SRLOOP    XP
)@@G@@        . TRY AGAIN     @[@@@OSRDONE@F@@@O          JP        A3,SRLOOP XQ
)@@G@@        . IF NOT EOC - TRY AGAIN    @ @@@O          J         ALLDONE   XR
)@@G@@@#@@@N. KEY NOT FOUND   @D@@@NSRNOTF    LMJ       X11,KEYNOT        . PRXS
)@@G@@INT ERROR   @ @@@N          J         SRLOOP    @[@@@O.     @#@@@O. SEARXT
)@@G@@CH BY RANK  @[@@@O.     @^@@@OSRANK     LA,U      A0,0@ @@@OSRDIS     LAXU
)@@G@@,U      A10,,A0   @^@@@O          SZ        A11 @ @@@OSRKLOOP   LMJ     XV
)@@G@@  X11,GETNUM@ @@@O          J         SRKDONE   @ @@@O          SX      XW
)@@G@@  X11,A11   @D@@@O          AVLSR     AVLPKT A0         . SEARCH BY RANKXX
)@@G@@@E@@@O          LX,U      X9,,A2            . SAVE NODE ADDRESS   @E@@@OXY
)@@G@@          JZ        A2,SRKNOTF        . SKIP IF NOT FOUND   @D@@@O      XZ
)@@G@@    LX,U      X8,0              . NO MESSAGE    @A@@@O          LMJ     YA
)@@G@@  X11,PRTNODE     @ @@@O          J         SRKLOOP   @ @@@OSRKDONE   JPYB
)@@G@@        A3,SRKLOOP@ @@@O          J         RALLDONE  @A@@@OSRKNOTF   PRYC
)@@G@@INT     'RANK TOO LARGE'@ @@@O          J         SRKLOOP   @[@@@O/.    YD
)@@G@@@^@@@O. GENERATE KEYS RANDOMLY@[@@@O.     @G@@@OKGEN      LMJ       X11,YE
)@@G@@GETNUM        . GET THE NUMBER OF KEYS TO GEN   @D@@@O          LA,U    YF
)@@G@@  A0,1              . DEFAULT IS 1  @ @@@O          LA        A11,A0    YG
)@@G@@@E@@@O          ER        TIME$             . SET THE RANDOM SEED @ @@@OYH
)@@G@@          SA        A0,SEED   @[@@@OKGLOOP@E@@@O          JNGD      A11,YI
)@@G@@TREAD         . COUNT THE NAMES     @E@@@O          LX        X7,(1,SRCHYJ
)@@G@@KEY-1)  . PREP WORD INDEX     @E@@@O          LX        X6,(1,STTAB)    YK
)@@G@@  . PREP CHAR INDEX     @E@@@O          LR,U      R8,7              . BUYL
)@@G@@ILD A TWO WORD KEY@[@@@OKG010 @F@@@O          LMJ       X11,RANDKEY     YM
)@@G@@  . GET RANDOM CHAR IN A3     @C@@@O          EX        STORE           YN
)@@G@@  . STASH IT@C@@@O          JGD       R8,KG010          . LOOP    @E@@@OYO
)@@G@@          LA,U      A8,2              . LENGTH OF THE KEY   @A@@@O      YP
)@@G@@    LMJ       X11,MOVEKEY     @D@@@O          SA        A8,AVLKSZ,A0    YQ
)@@G@@  . SET THE SIZE  @D@@@O          AVLIK     AVLPKT A8,,A0,U   . INSERT TYR
)@@G@@HE KEY@D@@@O          JZ        A2,KGLOOP         . DO SOME MORE  @E@@@OYS
)@@G@@          LA,U      A0,,A1            . INSERTED ALREADY    @ @@@O      YT
)@@G@@    LMJ       X11,BREL  @ @@@O          J         KGLOOP    @[@@@O/.    YU
)@@G@@@^@@@O. RANDOM KEY GENERATOR  @[@@@O.     @^@@@ORANDKEY   SAVER     X11 YV
)@@G@@@G@@@O          LA,U      A2,'Z'-'A'+1      . GET RANGE IN WHICH TO GEN YW
)@@G@@NUMBER@C@@@O          LMJ       X11,RANDINT       . GET ONE @D@@@O      YX
)@@G@@    LA,U      A3,'A',A1         . GET CHAR IN A3@A@@@O          LOADR   YY
)@@G@@  RANDKEY X11     @ @@@O          J         0,X11     @[@@@O.     @ @@@OYZ
)@@G@@. RANDOM INTEGER GENERATOR    @[@@@O.     @]@@@ORANDINT     @D@@@O      ZA
)@@G@@    LA        A0,SEED           . GET THE SEED  @A@@@O          MI      ZB
)@@G@@  A0,(+3141592621)@B@@@O          DA        A0,(+14522134171D)    @D@@@OZC
)@@G@@          SSL       A1,1              . MODULUS 2*36  @D@@@O          SAZD
)@@G@@        A1,SEED           . SET NEW SEED  @F@@@O          MF        A1,AZE
)@@G@@2             . A1=(0,N-1) WHERE A2=N     @C@@@O          J         0,X1ZF
)@@G@@1             . RETURN  @[@@@O.     @#@@@O          DBANK   @^@@@OSEED  ZG
)@@G@@    RES       1   @#@@@O          IBANK   @[@@@N/.    @]@@@N. DELETE    ZH
)@@G@@@[@@@N.     @D@@@NDELETE    LA,U      A0,0              . CLEAR FLAG    ZI
)@@G@@@D@@@NDELDIS    LA,U      A10,,A0           . CLEAR KEY FLAG@B@@@N      ZJ
)@@G@@    SZ        A11               .   @D@@@NDELOOP    LMJ       X11,GETKEYZK
)@@G@@        . GET A KEY     @B@O@N          J         INDONE            .   ZL
)@@G@@@B@@@O          J         DEDONE            .   @D@@@N          SX      ZM
)@@G@@  X11,A11           . SET KEY FLAG  @E@O@N          AVLDELETE AVLPKT A8,ZN
)@@G@@KEY,,U  . FIND AND DELETE KEY @E@@@O          AVLDK     AVLPKT A8,SRCHKEZO
)@@G@@Y . FIND AND DELETE KEY @F@@@N          JZ        A2,DENOTF         . IFZP
)@@G@@ =0 - NO NODE IN TREE   @G@O@N          JZ        A10,DERLS         . IFZQ
)@@G@@ NO DISPLAY--RELEASE BUFFER   @D@O@N          SA        A2,A12          ZR
)@@G@@  . SAE NODE ADDR @E@O@N          LX,U      X9,,A2            . PUT NODEZS
)@@G@@ ADDR IN X9 @E@O@N          LX,U      X8,DELETM         . GET DELETED MEZT
)@@G@@SSAGE @D@O@N          LMJ       X11,PRTNODE       . PRINT THE NODE@D@O@NZU
)@@G@@          LA        A2,A12            . RESTORE NODE  @#@@@N. RELEASE BUZV
)@@G@@FFER  @E@O@NDERLS     LA,U      A0,,A2            . GET BUFFER NODE BACKZW
)@@G@@@E@@@O          LA,U      A0,,A2            . GET BUFFER NODE BACK@D@O@NZX
)@@G@@          LMJ       X11,RLSBUF        . RELEASE BUFFER@D@@@O          LMZY
)@@G@@J       X11,BREL          . RELEASE BUFFER@D@@@N          J         DELOZZ
)@@G@@OP            . THAT'S IT     @[@@@ODEDONE@ @@@O          JP        A3,DAA
)@@G@@ELOOP @ @@@O          J         ALLDONE   @ @@@NDENOTF    LMJ       X11,AB
)@@G@@KEYNOT@ @@@N          J         DELOOP    @[@@@O.     @#@@@O. DELETE BY AC
)@@G@@RANK  @[@@@O.     @^@@@ODELRANK   LA,U      A0,0@ @@@ODRKDIS    LA,U    AD
)@@G@@  A10,,A0   @^@@@O          SZ        A11 @ @@@ODRKLOOP   LMJ       X11,AE
)@@G@@GETNUM@ @@@O          J         DRKDONE   @ @@@O          SX        X11,AF
)@@G@@A11   @D@@@O          AVLDR     AVLPKT A0         . DELETE BY RANK@F@@@OAG
)@@G@@          JZ        A2,DRKNOTF        . IF NO ADDRESS, NOT FOUND  @F@@@OAH
)@@G@@          LA,U      A0,,A2            . GET THE BUFFER ADDRESS    @ @@@OAI
)@@G@@          LMJ       X11,BREL  @ @@@O          J         DRKLOOP   @ @@@OAJ
)@@G@@DRKDONE   JP        A3,DRKLOOP@ @@@O          J         RALLDONE  @A@@@OAK
)@@G@@DRKNOTF   PRINT     'RANK TOO LARGE'@ @@@O          J         DRKLOOP   AL
)@@G@@@[@@@O.     @#@@@O. RANDOM DELETE   @[@@@O.     @[@@@ORANDEL@H@@@O      AM
)@@G@@    LMJ       X11,GETNUM        . GET THE NUMBER OF NODES TO DELETE     AN
)@@G@@@D@@@O          LA,U      A0,1              . DEFAULT IS ONE@G@@@O      AO
)@@G@@    LA,U      A11,,A0           . SAVE NUMBER OF NODES TO DELETE  @[@@@OAP
)@@G@@RDLOOP@F@P@O          JGD       A11,TREAD         . COUNT THE DELETED NOAQ
)@@G@@DES   @F@@@P          JNGD      A11,TREAD         . COUNT THE DELETED NOAR
)@@G@@DES   @D@@@O          LA        A2,AVLNN          . GET # OF NODES@F@@@OAS
)@@G@@          JZ        A2,TREAD          . QUIT IF NO MORE NODES     @E@@@OAT
)@@G@@          LMJ       X11,RANDINT       . GET RANDOM INTEGER  @E@@@O      AU
)@@G@@    AVLDR     AVLPKT 1,A1,U     . DELETE THIS NODE    @F@@@O          TNAV
)@@G@@Z       A2                . THIS SHOULD ALWAYS WORK   @^@@@O          ERAW
)@@G@@        ERR$@E@@@O          LA,U      A0,,A2            . GET THE NODE AAX
)@@G@@DDRESS@E@@@O          LMJ       X11,BREL          . GET RID OF THE NODE AY
)@@G@@@D@Q@O          J         TREAD             . GO FOR MORE   @D@@@Q      AZ
)@@G@@    J         RDLOOP            . GO FOR MORE   @[@@@N/.    @]@@@N. DISPBA
)@@G@@LAY   @[@@@N.     @^@@@NDISPLAY   SZ        A11 @E@O@N          LMJ     BB
)@@G@@  X11,GETKEY        . GET THE NEXT KEY    @E@@@ODILOOP    LMJ       X11,BC
)@@G@@GETKEY        . GET THE NEXT KEY    @F@@@N          J         DITREE    BD
)@@G@@        . NO THERE, DO WHOLE TREE   @E@O@NDILOOP    AVLSEARCH  AVLPKT A8BE
)@@G@@,KEY    . GET THE KEY'S ADDR  @E@@@O          AVLSK      AVLPKT A8,SRCHKBF
)@@G@@EY. GET THE KEY'S ADDR  @E@@@N          JZ        A2,DINONO         . SKBG
)@@G@@IP OUT IF NO NODE @E@O@N          LA,U      A0,,A2            . GET NODEBH
)@@G@@ ADDR IN A0 @F@O@NDIDRAW    AVLDISPLAY INDENT,BRCOLN,LINES,0,A2,U EDNODEBI
)@@G@@,PRNODE     @D@@@ODIDRAW    SA,H2     A2,DISPKT         . SET NODE ADDR BJ
)@@G@@@ @@@O          AVLDSP    DISPKT    @F@@@N          JNZ       A11,TREAD BK
)@@G@@        . READ AGAIN, IF FLAG SET   @E@@@N          LMJ       X11,GETKEYBL
)@@G@@        . GET THE NEXT KEY    @C@@@N          J         TREAD           BM
)@@G@@  . NO MORE @G@@@N          J         DILOOP            . GO BACK UP ANDBN
)@@G@@ DO IT ALL OVER   @D@O@NDITREE    LA        A0,AVLROOT        . GET ROOTBO
)@@G@@ ADDRR@D@@@ODITREE    LA        A2,AVLROOT        . GET ROOT ADDRR@C@@@NBP
)@@G@@          LA,U      A11,1             . ST FLAG @E@@@N          J       BQ
)@@G@@  DIDRAW            . & GO DRAW THE TREE  @[@@@N.     @ @@@NDINONO    LMBR
)@@G@@J       X11,KEYNOT@ @@@N          J         DILOOP    @[@@@O/.    @C@@@OBS
)@@G@@. DISPLAY PARAMETERS (CHANGE AND/OR DISPLAY)    @[@@@O.     @[@@@ODPARMSBT
)@@G@@@F@@@O          LX,U      X8,3-1            . SET INDEX AND COUNTER     BU
)@@G@@@[@@@ODPLOOP@F@@@O          LMJ       X11,GETNUM        . GET BINARY NUMBV
)@@G@@BER IN A0   @F@@@O          J         DPNOT             . GOT NOTHING THBW
)@@G@@IS TIME     @G@@@O          EX        DPSTASH,X8        . STASH IT (ASSUBX
)@@G@@ME IT'S VALID)    @D@@@O          JGD       X8,DPLOOP         . TRY AGAIBY
)@@G@@N     @[@@@ODPDONE@D@@@O          LA,U      A0,EDPKT          . OPEN EDIBZ
)@@G@@T MODE@B@@@O          E$DIT                       .   @E@@@O          LACA
)@@G@@,U      A0,('&INDENT: &, BRCOLN: &, LINES: &')  @D@@@O          E$MSG   CB
)@@G@@                    . START MESSAGE @F@@@O          LX,U      X8,3-1    CC
)@@G@@        . RESET INDEX & COUNTER     @[@@@ODPINSL@D@@@O          E$MSGR  CD
)@@G@@                    . RESUME MESSAGE@E@@@O          EX        DPLOAD,X8 CE
)@@G@@        . GET NEXT NUMBER     @B@@@O          E$DECV    . DECIMATE IT (HCF
)@@G@@A, HA)@G@@@O          JGD       X8,DPINSL         . IF ANY #'S LEFT, INSCG
)@@G@@ERT THEM    @E@@@O          E$APRT    -1,1              . PRINT THE IMAGCH
)@@G@@E     @C@@@O          J         TREAD             . ALL DONE@B@@@O. NO PCI
)@@G@@ARAMETER GIVEN, JUMP TO NEXT ONE    @[@@@ODPNOT @E@@@O          JN      CJ
)@@G@@  A3,$+2            . TERMINAL FINISH?    @E@@@O          JGD       X8,DCK
)@@G@@PLOOP         . NO, LOOK AGAIN MAYBE@F@@@O          J         DPDONE    CL
)@@G@@        . WELL, ONLY A LOOK-SEE     @[@@@O.     @#@@@O. EXECUTE VECTORS CM
)@@G@@@[@@@O.     @]@@@ODPSTASH     @ @@@O          SA        A0,LINVAL @ @@@OCN
)@@G@@          SA        A0,BRCVAL @ @@@O          SA        A0,INDVAL @[@@@OCO
)@@G@@DPLOAD@ @@@O          LA        A0,LINVAL @ @@@O          LA        A0,BCP
)@@G@@RCVAL @ @@@O          LA        A0,INDVAL @[@@@O/.    @D@@@O. ERASE TREECQ
)@@G@@ (IE: START OVER OR SOMETHING LIKE THAT)  @[@@@O.     @[@@@OERASE @F@@@OCR
)@@G@@          LA        A0,AVLROOT        . GET ROOT NODE OF TREE     @E@@@OCS
)@@G@@          LXI,U     A0,POSTORDER      . SET TRAVERSAL TYPE  @D@@@O      CT
)@@G@@    SA        A0,ERPARM         . SAVE PARAMETER@[@@@OERLOOP@E@@@O      CU
)@@G@@    AVLTRA    ERPARM ERDONE     . TRAVERSE THE TREE   @F@@@O          SACV
)@@G@@        A0,ERPARM         . SET FOR NEXT NODE FETCH   @D@@@O          LACW
)@@G@@,U      A0,,A0            . CLEAN UP A0   @E@@@O          LMJ       X11,CX
)@@G@@BREL          . RELEASE THE NODE    @G@@@O          J         ERLOOP    CY
)@@G@@        . DO IT UNTIL NO MORE TREE LEFT   @^@@@O. TREE IS NOW EMPTY     CZ
)@@G@@@[@@@OERDONE@C@@@O          SZ        AVLROOT           . SAY SO  @F@@@ODA
)@@G@@          SZ        AVLNN             . CLEAR NUMBER OF NODES     @D@@@ODB
)@@G@@          J         TREAD             . READ AFRESH   @[@@@O/.    @]@@@ODC
)@@G@@. TRAVERSE  @^@@@O. ARG IS TRAVERSAL INDEX@[@@@O.     @]@@@OTRAVERSE    DD
)@@G@@@F@@@O          SZ        A11               . CLEAR ANYTHING SEEN FLAG  DE
)@@G@@@[@@@OTRLOOP@F@@@O          LMJ       X11,GETNUM        . GET A NUMBER (DF
)@@G@@IE: INDEX)  @E@@@O          J         TRNOTH            . GOT NOTHING MADG
)@@G@@YBE   @C@@@O          LA,U      A11,1             . SET FLAG@E@@@O      DH
)@@G@@    TLE,U     A0,6              . MUST BE IN RANGE 0-5@D@@@O          TLDI
)@@G@@E,U     A0,0              . INCLUSIVE     @F@@@O          J         TRBADJ
)@@G@@DN            . OTHERWISE IT'S A BAD INDEX@D@@@O          LA        A1,ADK
)@@G@@0             . TEMP SAVE A0  @F@@@O          LA        A0,TRAVM,A0     DL
)@@G@@  . GET A TRAVERSAL MESSAGE   @D@@@O          ER        APRINT$         DM
)@@G@@  . AND PRINT IT  @D@@@O          LA,U      A0,,A1            . GET ADDRDN
)@@G@@ BACK @D@@@O          LSSL      A0,12             . MOVE IT OVER  @E@@@ODO
)@@G@@          AA,U      A0,0100           . PLUS INITIAL CRAP   @F@@@O      DP
)@@G@@    LSSL      A0,18             . MOVE IT ALL OVER SOME MORE@E@@@O      DQ
)@@G@@    LXM       A0,AVLROOT        . START AT THE ROOT   @F@@@O          SADR
)@@G@@        A0,TRPARM         . SET TRAVERSAL PARMAMETER  @]@@@OTRTRAVEL    DS
)@@G@@@E@@@O          AVLTRA    TRPARM TRLOOP     . GET THE NEXT NODEDE @F@@@ODT
)@@G@@          SA        A0,TRPARM         . SET TRAVERSAL PARAMETER   @F@@@ODU
)@@G@@          LX,U      X9,,A0            . SAVE CURRENT NODE ADDR    @D@@@ODV
)@@G@@          LX,U      X8,0              . NOTHING TO ADD@D@@@O          LMDW
)@@G@@J       X11,PRTNODE       . PRINT THE NODE@D@@@O          J         TRTRDX
)@@G@@AVEL          . GO FOR MORE   @#@@@O. NO MORE INPUT   @[@@@OTRNOTH@E@@@ODY
)@@G@@          JNZ       A11,TREAD         . GO READ FOR INPUT   @B@@@O      DZ
)@@G@@    PRINT     'NO INDEX SPECIFIED'  @C@@@O          J         TREAD     EA
)@@G@@        . GO READ @]@@@O. BAD INDEX @[@@@OTRBADN@D@@@O          SA      EB
)@@G@@  A0,A9             . SAVE BAD INDEX@B@@@O          LA,U      A0,EDPKT  EC
)@@G@@        .   @#@@@O          E$DIT   @^@@@O          E$DECV    A9. @C@@@OED
)@@G@@          LA,U      A0,(' IS A BAD INDEX&')     @#@@@O          E$MSG   EE
)@@G@@@C@@@O          E$APRT    -1,1              . PRINT IT@D@@@O          J EF
)@@G@@        TRLOOP            . GO TRY AGAIN  @[@@@O.     @]@@@O. MESSAGES  EG
)@@G@@@[@@@O.     @C@@@OTRAVM     *         0205,('PREORDER TRAVERSAL') @C@@@OEH
)@@G@@          *         0205,('INORDER TRAVERSAL')  @C@@@O          *       EI
)@@G@@  0205,('POSTORDER TRAVERSAL')@E@@@O          *         0207,('REVERSE PEJ
)@@G@@REORDER TRAVERSAL')     @D@@@O          *         0207,('REVERSE INORDEREK
)@@G@@ TRAVERSAL')@E@@@O          *         0207,('REVERSE POSTORDER TRAVERSALEL
)@@G@@')    @[@@@O/.    @A@@@O. THE STATISTICAL SUPPORT SECTION   @[@@@O.     EM
)@@G@@@#@@@O. THE 'ON' COMMAND@[@@@O.     @[@@@OSTATON@G@@@O          AVL$STATEN
)@@G@@CLR                  . CLEAR THE STATISTICAL AREA     @D@@@O          J EO
)@@G@@        TREAD             . THAT'S EASY   @[@@@O.     @^@@@O. THE 'OFF' EP
)@@G@@COMMAND     @[@@@O.     @]@@@OSTATOFF     @F@@@O          AVL$STATS     EQ
)@@G@@              . PRODUCE THE STATISTICS    @D@@@O          J         TREAER
)@@G@@D             . NEXT COMMAND  @[@O@N.     @ @O@NEOF       ER        EXITES
)@@G@@$     @[@O@N.     @[@@@N/.    @]@@@N. UTILITIES @[@@@N.     @A@@@NPRTNODET
)@@G@@E   SX        X11,PRTLINK     @ @O@N          E$DIT     EDPKT     @ @@@OEU
)@@G@@          LA,U      A0,EDPKT  @D@@@O          E$DIT                     EV
)@@G@@  . OPEN EDITING  @ @@@N          IF        VARYKEYS  @G@@@N          LNEW
)@@G@@        A1,AVLKSZ,X9      . GET # OF CHARS IN KEY (NEGATIVE)@#@@@N      EX
)@@G@@    ELSE    @E@@@N          LN,U      A1,KEYSIZE        . # OF WORDS IN EY
)@@G@@KEY   @#@@@N          ENDF    @ @O@N          LA,U      A0,,X9    @A@@@OEZ
)@@G@@          LA,U      A0,AVLKEY,X9    @#@@@N          E$COPY  @ @@@N      FA
)@@G@@    LA,U      A0,,X8    @ @@@N          JZ        A0,PRTIT  @#@@@N      FB
)@@G@@    E$MSG   @^@O@NPRTIT     E$PRT     -1,1@^@@@OPRTIT     E$APRT    -1,1FC
)@@G@@@#@@@N          E$DITX  @A@@@N          LX        X11,PRTLINK     @#@O@NFD
)@@G@@          0,X11   @ @@@O          J         0,X11     @[@@@N.     @ @@@NFE
)@@G@@. PRINT KEY NOT FOUND MESSAGE @[@@@N.     @A@O@NKEYNOT    SX        X11,FF
)@@G@@KEYLINK     @A@@@OKEYNOT    SX        X11,PRTLINK     @ @O@N          E$FG
)@@G@@DIT     EDPKT     @ @@@O          LA,U      A0,EDPKT  @#@@@O          E$FH
)@@G@@DIT   @E@@@N          LN        A1,A8             . GET NEG # OF WORS   FI
)@@G@@@E@O@N          LA,U      A0,KEY            . GET ADDR OF KEY     @E@@@OFJ
)@@G@@          LA,U      A0,SRCHKEY        . GET ADDR OF KEY     @#@@@N      FK
)@@G@@    E$COPY  @A@O@N          E$MSG     (' NOT FOUND &')@B@@@O          LAFL
)@@G@@,U      A0,(' NOT FOUND &')   @#@@@O          E$MSG   @^@O@N          E$FM
)@@G@@PRT     -1,1@#@O@N          E$DITX  @A@O@N          LX        X11,KEYLINFN
)@@G@@K     @ @O@N          J         0,X11     @D@@@O          J         PRTIFO
)@@G@@T             . GO PRINT IT   @[@@@N.     @A@@@N. EDIT IN THE NODE FOR AFP
)@@G@@VLDISPLAY   @[@@@N.     @ @@@NEDNODE    SX        X11,EDLINK@ @O@N      FQ
)@@G@@    LN        A1,A8     @ @@@N          SA        A0,X9     @E@@@O      FR
)@@G@@    E$COLN                      . GET CURRENT POSITION@C@@@O          SAFS
)@@G@@        A0,A7             . SAVE IT @F@@@O          LN        A1,AVLKSZ,FT
)@@G@@X9      . GET # OF WORDS IN KEY     @A@O@N          LA,U      A0,AVLKEY,FU
)@@G@@A0    @A@@@O          LA,U      A0,AVLKEY,X9    @E@@@O          LA,U    FV
)@@G@@  A2,' '            . DON'T INCLUDE BLANKS@#@O@N          E$COPY  @#@@@OFW
)@@G@@          E$PACKC @^@O@N          E$CHAR    ' ' @F@@@O          E$COLN  FX
)@@G@@                    . GET AND SAVE THIS POSITION@B@@@O          SA      FY
)@@G@@  A0,A9             .   @F@@@O          AA,U      A7,20             . WEFZ
)@@G@@ WANT TO MOVE TO HERE   @C@@@O          E$COL     A7,,W             . DOGA
)@@G@@ IT   @A@@@N          LA        A0,AVLBAL,X9    @^@@@N          TNE,U   GB
)@@G@@  A0,2@^@@@N          LN,U      A0,1@^@@@N          E$DECF    2   @^@@@NGC
)@@G@@          E$CHAR    ' ' @ @O@N          E$DECV    AVLNK,X9  @ @@@O      GD
)@@G@@    E$DECV    AVLRNK,X9 @^@O@N          LXX11,EDLINK  @G@@@O          E$GE
)@@G@@COL     A9,,W             . MOVE BACK TO JUST AFTER THE KEY @ @@@O      GF
)@@G@@    LX        X11,EDLINK@ @@@N          J         0,X11     @[@@@N.     GG
)@@G@@@#@@@N. PRINT THE NODE  @[@@@N.     @ @@@NPRNODE    ER        APRINT$   GH
)@@G@@@ @@@N          J         0,X11     @[@@@N.     @#@@@N. MORE UTILITIES  GI
)@@G@@@[@@@N.     @D@@@NSKIPB     EX        LOAD              . SKIP BLANKS   GJ
)@@G@@@F@@@N          JN        A3,0,X11          . TAKE EOF EXIT IF NEED BE  GK
)@@G@@@D@@@N          TNE,U     A3,' '            . TRY A BLANK   @D@@@N      GL
)@@G@@    J         SKIPB             . GO TRY AGIN   @B@@@N          J       GM
)@@G@@  1,X11             .   @[@O@N.     @[@@@O/.    @ @@@N. ROUTINE TO GET TGN
)@@G@@HE NEXT KEY @[@@@N.     @A@@@NGETKEY    SX        X11,GETLINK     @ @@@NGO
)@@G@@          LMJ       X11,SKIPB @ @@@N          J         GETNOT    @E@@@OGP
)@@G@@          SZ        GETNOKF           . CLEAR NUM-OK FLAG   @F@@@N      GQ
)@@G@@    LX        X6,(1,STTAB)      . INITALIZE LOAD/STORE REGS @B@O@N      GR
)@@G@@    LX        X7,(1,KEY-1)      .   @B@@@O          LX        X7,(1,SRCHGS
)@@G@@KEY-1)  .   @ @O@N          IF        VARYKEYS  @ @O@N          LR,U    GT
)@@G@@  R8,KEYSIZE@#@O@N          ENDF    @]@O@NGETLOOP     @C@O@N          LRGU
)@@G@@,U      R8,VARYKEYS->99!KEYSIZE     @C@@@O          LR,U      R8,4*(VARYGV
)@@G@@KEYS->10!KEYSIZE) @E@@@O          LA,U      A8,0              . INIT CHAGW
)@@G@@R COUNT     @]@@@NGETLOOP     @ @@@N          JGD       R8,$+2    @ @@@NGX
)@@G@@          J         GETOUT    @E@@@O          TLE,U     A3,'Z'+1        GY
)@@G@@  . MUST BE ALPHA KEY   @F@@@O          TLE,U     A3,'A'            . ELGZ
)@@G@@SE WE STOP SCANNING     @H@@@O          J         GET010            . GOHA
)@@G@@ CHECK FOR LOWER CASE OR NUMERIC    @]@@@OGETALPHA    @E@@@O          SXHB
)@@G@@        X11,GETNOKF       . SET NUM OK FLAG     @[@@@OGETPUT@ @@@N      HC
)@@G@@    EX        STORE     @F@@@O          AA,U      A8,1              . COHD
)@@G@@UNT THE CHARS STORED    @^@@@N          EX        LOAD@ @O@N          JNHE
)@@G@@        A3,GETOUT @ @@@O          JN        A3,GETOUT @C@O@N          TEHF
)@@G@@,U      A3,' '            . BLANK?  @C@O@N          J         GETLOOP   HG
)@@G@@        . TRY AGIN@F@@@O          JNE,U     A3,' ' GETLOOP    . KEEP GOIHH
)@@G@@NG UNTIL A BLANK  @[@@@OGETOUT@G@@@O          LA,U      A3,' '          HI
)@@G@@  . BLANK OUT REST OF KEY FIELDS    @D@@@O          EX        STORE     HJ
)@@G@@        . STORE A BLANK @F@@@O          JGD       R8,$-1            . STHK
)@@G@@ORE MORE UNTIL FULL     @[@O@NGETOUT@^@O@N          IF VARYKEYS   @E@O@NHL
)@@G@@          LA,U      A8,1,X7           . COMPUTE SIZE OF KEY @D@O@N      HM
)@@G@@    AN,U      A8,KEY            . = # OF WORDS  @F@@@O          AA,U    HN
)@@G@@  A8,3              . COMPUTE # OF WORDS STORED @F@@@O          SSL     HO
)@@G@@  A8,2              . DIVIDE BY 4 CHARS PER WORD@G@@@O          JZ      HP
)@@G@@  A8,GETNOT         . IF NOTHING GOTTEN--SKIP OUT     @#@O@N          ELHQ
)@@G@@SE    @ @@@O          IF        KEYSIZE   @C@@@N          LA,U      A8,KHR
)@@G@@EYSIZE        . FIXED   @#@@@N          ENDF    @]@@@OGETQUIT     @A@@@NHS
)@@G@@          LX        X11,GETLINK     @B@@@N          J         1,X11     HT
)@@G@@        .   @[@@@NGETNOT@A@@@N          LX        X11,GETLINK     @ @@@NHU
)@@G@@          J         0,X11     @B@@@OGET010    . CHECK FOR LOWERCASE OR NHV
)@@G@@UMERIC@A@@@O          TLE,U     A3,'Z'+' '+1    @ @@@O          TLE,U   HW
)@@G@@  A3,'A'+' '@D@@@O          J         $+2               . NOT LOWER CASEHX
)@@G@@@E@@@O          J         GETALPHA          . HAH, IT'S LOWERCASE @F@@@OHY
)@@G@@          JEZ       GETNOKF GETNOT    . IF NOT ALPHA FIRST, QUIT  @E@@@OHZ
)@@G@@          TLE,U     A3,'9'+1          . CHECK NUMERIC RANGE @B@@@O      IA
)@@G@@    TLE,U     A3,'0'            .   @F@@@O          J         GETOUT    IB
)@@G@@        . NOT NUMERIC - FINISH UP   @E@@@O          J         GETPUT    IC
)@@G@@        . GO STASH THIS NUM   @[@@@O.     @A@@@O. ROUTINE TO GET THE NEXID
)@@G@@T NUMBER    @[@@@O.     @A@@@OGETNUM    SX        X11,GETLINK     @D@@@OIE
)@@G@@          LMJ       X11,SKIPB         . IGNORE BLANKS @D@@@O          J IF
)@@G@@        GETNOT            . GOT NOTHING   @E@@@O          LA,U      A0,0IG
)@@G@@              . INITIALIZE A NUMBER @D@@@O          LA,U      A1,0      IH
)@@G@@        . AND A FLAG    @D@@@O          J         $+2               . SKII
)@@G@@IP LOAD     @[@@@OGETNXT@E@@@O          EX        LOAD              . GEIJ
)@@G@@T A NUMBER (MAYBE)@F@@@O          JN        A3,GETNOUT        . SKIP OUTIK
)@@G@@ IF WE GOT NOTHING@F@@@O          TLE,U     A3,'9'+1          . MUST BE IL
)@@G@@IN NUMERIC RANGE  @E@@@O          TLE,U     A3,'0'            . OR ELSE IM
)@@G@@WE QUIT     @C@@@O          J         GETNOUT           . NOW     @D@@@OIN
)@@G@@          LA,U      A1,1              . SET A FLAG    @E@@@O          ANIO
)@@G@@,U      A3,'0'            . REMOVE ASCII ZONE   @E@@@O          MSI,U   IP
)@@G@@  A0,10             . BUMP PREVIOUS NUMBER@F@@@O          AA,U      A0,,IQ
)@@G@@A3            . AND INCLUDE THE NEW ONE   @D@@@O          J         GETNIR
)@@G@@XT            . GO FOR MORE   @A@@@O. COME HERE WHEN NO MORE NUMBERS    IS
)@@G@@@]@@@OGETNOUT     @F@@@O          JZ        A1,GETNOT         . IF NO FLIT
)@@G@@AG--NO NUMBER     @E@@@O          J         GETQUIT           . OTHERWISIU
)@@G@@E, IT'S COOL@[@O@N.     @[@@@O/.    @^@@@N. LOAD AND STORE TABLES @[@@@NIV
)@@G@@.     @ @@@N          LMJ       X4,,X4    @ @@@NLDTAB     LA,Q1     A3,,IW
)@@G@@X5    @ @@@N          LA,Q2     A3,,X5    @ @@@N          LA,Q3     A3,,IX
)@@G@@X5    @ @@@N          LMJ       X4,$+1    @ @@@N          LA,Q4     A3,,IY
)@@G@@X5    @ @@@N          TLEM      X5,A15    @ @@@N          J         LDTAIZ
)@@G@@B-1   @E@@@O          LX,U      X4,,X4            . CLEAR INCREMENT     JA
)@@G@@@F@@@O          LMJ       X4,,X4            . RETURN WITH WHAT WE GOT   JB
)@@G@@@^@O@N          LN,U      A3,1@F@@@O          LN,U      A3,1            JC
)@@G@@  . RETURN BAD STUFF NEXT TIME@ @O@N          LMJ       X4,,X4    @ @O@NJD
)@@G@@          LMJ       X4,$-2    @[@@@N.     @#@@@N. STORE TABLE     @[@@@NJE
)@@G@@.     @ @@@N          SA,Q4     A3,,X7    @ @@@N          LMJ       X6,,JF
)@@G@@X6    @G@@@NSTTAB     SA,Q1     A3,1,*X7          . BUMP INCR ONLY WHEN JG
)@@G@@USE NEW WORD@ @@@N          SA,Q2     A3,,X7    @ @@@N          SA,Q3   JH
)@@G@@  A3,,X7    @ @@@N          LMJ       X6,STTAB-2@[@@@N.     @ @@@NLOAD  JI
)@@G@@    EQUF      0,*X4     @ @@@NSTORE     EQUF      0,*X6     @[@@@N.     JJ
)@@G@@@[@@@N.     @[@@@N.     @#@@@N          DBANK   @^@@@NRDBUF     RES     JK
)@@G@@  30  @ @O@NTRDPKT    *         EOF,RDBUF @A@O@N          *         0101JL
)@@G@@,('*'L)     @A@@@OTRDPKT    *         0101,('*',4,4,4)@ @@@O          * JM
)@@G@@        EOF,RDBUF @^@@@NEDBUF     RES       33  @C@@@NEDPKT     E$PKTA  JN
)@@G@@  33,EDBUF 'ASI',1 'ASC',1    @^@R@OAVLPKTBASE AVL$PKT  0 0 @ @@@RAVLPKTJO
)@@G@@BASE AVL$PKT  0 ' 'SL   @E@@@ODISPKT    AVLDSPKT   INDENT,BRCOLN,LINES 0JP
)@@G@@ EDNODE,PRNODE    @[@@@O.     @D@@@OINDVAL    EQUF      DISPKT,,S1      JQ
)@@G@@  . INDENT VALUE  @E@@@OBRCVAL    EQUF      DISPKT,,S2        . BRANCH CJR
)@@G@@OLUMN VALUE @D@@@OLINVAL    EQUF      DISPKT,,S3        . LINE VALUE    JS
)@@G@@@[@@@O.     @#@@@O          BASE    @#@@@O          WORD    @^@@@OEDLINKJT
)@@G@@    FIELD     H1  @^@@@OGETLINK   FIELD     H1  @^@@@OPRTLINK   FIELD   JU
)@@G@@  H1  @#@@@OGETNOKF   WORD    @#@@@OERPARM    WORD    @^@@@OTRPARM    FIJV
)@@G@@ELD     W   @#@@@ORANK      WORD    @F@@@OSRCHKEY   AREA      12        JW
)@@G@@        . TRY TO FILL UP THIS GUY   @#@@@O          LENGTH  @#@@@O      JX
)@@G@@    ENDBASE @#@O@N          END     @ @@@O          END       AVLTEST   JY
)@@G@@___@@@T NUM OK FLAG     @[@@@OGETPUT@ @@@N          EX        STORE     JZ
)@@G@@@F@@@O          AA,U    *[S@@@*SDFF*@#@@@B          MASMLIB @ @@@B      KA
)@@G@@    INCLUDE   'AVL$DEF' @#@@@B          IBANK   @[@@@B.     @I@@@B. THE KB
)@@G@@ELEMENT CONTAINS ALL OF THE STATISTICS RELATED CODE FOR THE AVL$ PACKAGEKC
)@@G@@.     @[@@@B.     @E@@@B. SEE ELEMENT 'DOC/AVL$' FOR INFORMATION.  AKS -KD
)@@G@@ 7/10/80    @[@@@C.     @ @F@C          $IF       STATS     @[@@@B.     KE
)@@G@@@G@@@B. THE 'INCR' SUBROUTINE IS INVOKED BY USING THE 'INCR' PROC WITH OKF
)@@G@@NE OF @^@@@B. THE STATISTIC INDECES.@[@@@B.     @#@@@BAVL$INCR* SLJENTRYKG
)@@G@@@ @@@BINCR      SAVER     A0,A1     @E@@@B          LA        A0,AVL$INCKH
)@@G@@R       . GET RETURN ADDRESS  @F@@@B          LA        A1,*0,A0        KI
)@@G@@  . GET THE PREVIOUS COUNT    @D@@@B          AA,U      A1,1            KJ
)@@G@@  . INCREMENT IT  @E@@@B          SA        A1,*0,A0          . POST THEKK
)@@G@@ NEW COUNT  @F@@@B          AA,U      A0,1              . BUMP THE RETURKL
)@@G@@N ADDRESS   @A@@@B          SA        A0,AVL$INCR     @^@@@B          LOKM
)@@G@@ADR     INCR@ @@@B          J         *AVL$INCR @[@@@B.     @ @@@B.     KN
)@@G@@    TIMEON    <CELL>    @[@@@B.     @^@@@BAVL$TIMEON* SLJENTRY    @ @@@BKO
)@@G@@TON       SAVER     A0,A1     @A@@@B          LA        A1,AVL$TIMEON   KP
)@@G@@@ @@@B          ER        TIME$     @E@@@B          SA        A0,*0,A1  KQ
)@@G@@        . POST CURRENT TIME   @F@@@B          AA,U      A1,1            KR
)@@G@@  . BUMP THE RETURN ADDRESS   @A@@@B          SA        A1,AVL$TIMEON   KS
)@@G@@@^@@@B          LOADR     TON @A@@@B          J         *AVL$TIMEON     KT
)@@G@@@[@@@B.     @ @@@B.         TIMEOFF   <CELL>    @[@@@B.     @^@@@BAVL$TIKU
)@@G@@MEOFF* SLJENTRY   @ @@@BTOFF      SAVER     A0,A2     @A@@@B          LAKV
)@@G@@        A1,AVL$TIMEOFF  @G@@@B          LA        A2,,A1            . GEKW
)@@G@@T THE ADDRESS OF THE CELL     @ @@@B          ER        TIME$     @F@@@BKX
)@@G@@          AN        A0,1,A2           . SUBTRACT THE PREVIOUS TIME@F@@@BKY
)@@G@@          AA        A0,0,A2           . ADD IN THE CURRENT TOTAL  @E@@@BKZ
)@@G@@          SA        A0,0,A2           . POST THE NEW TOTAL  @F@@@B      LA
)@@G@@    AA,U      A1,1              . BUMP THE RETURN ADDRESS   @A@@@B      LB
)@@G@@    SA        A1,AVL$TIMEOFF  @^@@@B          LOADR     TOFF@A@@@B      LC
)@@G@@    J         *AVL$TIMEOFF    @[@@@B/     @E@@@B. DEFINE THE TABLE FROM LD
)@@G@@WHICH TO DRIVE THE STAT GENERATOR   @[@@@B.     @^@@@BSTATDEF*  PROC    LE
)@@G@@  *0  @#@C@B*         $NIL    @B@@@CA         EQU       $(0)-AVL$STATARELF
)@@G@@A     @^@D@C**        EQU       A   @D@C@BI         EQU       EWLF(1)   LG
)@@G@@        . GET THE LABEL @B@C@B          *         [I]+COUNT+AVL$STATAREALH
)@@G@@@B@@@C          *         A+COUNT+AVL$STATAREA  @B@C@B          *       LI
)@@G@@  [I]+TIME+AVL$STATAREA @B@@@C          *         A+TIME+AVL$STATAREA   LJ
)@@G@@@E@C@B          *         (I)DL             .  OUTPUT THE NAME    @E@@@CLK
)@@G@@          *         EWLF(1)DL         .  OUTPUT THE NAME    @^@@@B$(0)  LL
)@@G@@    RES       3   @]@@@B$($ILCN)    @#@@@B          END     @[@@@B.     LM
)@@G@@@ @@@B. NOW MAKE THE DEFINITIONS    @[@@@B.     @#@@@C          RESUME  LN
)@@G@@@[@@@BOPERS @^@@@BAVL$STATAREA* EQU   $(0)@A@@@CSTATAREA  EQU       AVL$LO
)@@G@@STATAREA    @[@@@C.     @#@@@B          STATD   @[@@@C.     @^@C@BOPERENLP
)@@G@@D   EQU       $   @^@@@COPEREND   EQU       $-4 @A@@@CSTATAREALEN EQU   LQ
)@@G@@  $(0)-STATAREA   @#@@@C          BRIEF   @[@@@B.     @[@@@B/.    @B@@@BLR
)@@G@@. THIS IS THE STATISTICAL INFO GENERATOR  @[@@@B.     @]@@@BAVL$STATS*  LS
)@@G@@@ @C@BSTATS     SAVER     X11 A0,A5 @ @@@CSTAT      SAVER     X11 A0,A5 LT
)@@G@@@D@@@B          F$DT      0                 . OPEN EDITING  @B@@@B      LU
)@@G@@    PRINT     'AVL TREE STATISTICS' @H@@@B          F$MSG     ('PACKET ALV
)@@G@@DDRESS: &  & INSERTION&  KEY SIZE: &  & NODES&')@ @@@B          F$OCTF  LW
)@@G@@  6,UPKT    @#@@@B          F$MSGR  @ @@@B          LA        A0,('KEY')LX
)@@G@@@ @@@B          LA        A3,UPKT   @A@@@B          TNZ       UX(RKIFLG,LY
)@@G@@A3)   @A@@@B          LA        A0,('RANK')     @G@@@B          F$FD1   LZ
)@@G@@                    . INSERT THE TYPE OF INSERTION    @#@@@B          F$MA
)@@G@@MSGR  @B@C@B          JNZ       UX(RKIFLG,A3) STA010 .@B@@@C          JNMB
)@@G@@EZ      UX(RKIFLG,A3) STA010 .@F@@@B          F$MSKP    1               MC
)@@G@@  . SKIP IF RANK INSERTION    @ @@@B          J         STA020    @[@@@BMD
)@@G@@STA010@#@@@B          F$MSGR  @G@@@C          JEZ       UX(KEYSIZE,A3) SME
)@@G@@TA015 . SKIP IF RANDOM KEY SIZE     @A@@@B          F$DECV    UX(KEYSIZEMF
)@@G@@,A3)  @ @@@C          J         STA020    @[@@@CSTA015@ @@@C          F$MG
)@@G@@FD1     ('RANDOM')@[@@@BSTA020@#@@@B          F$MSGR  @A@@@B          F$MH
)@@G@@DECV    UX(NNODES,A3)   @#@@@B          F$MSGR  @^@@@B          F$PRT   MI
)@@G@@  0,1 @[@@@B.     @ @@@B. NOW THE TABLE DRIVEN STUFF  @[@@@B.     @D@C@BMJ
)@@G@@          F$MSG     ('OPERATION&NUMBER&AV. TIME&')    @G@@@C          PRMK
)@@G@@INT     2,'OPERATION     NUMBER     AVG. TIME (MSECS.)'     @^@C@B      ML
)@@G@@    F$COL     15  @#@C@B          F$MSGR  @^@C@B          F$COL     25  MM
)@@G@@@#@C@B          F$MSGR  @^@C@B          F$PRT     0,2 @^@@@B          PRMN
)@@G@@INT     ' ' @A@@@B          LX        X10,(4,OPERS)   @[@@@BSTA030@ @@@BMO
)@@G@@          F$FD2     2,X10     @^@@@B          F$COL     15  @A@@@B      MP
)@@G@@    F$DECF    4,*COUNT,X10    @^@@@B          F$COL     25  @ @@@B      MQ
)@@G@@    LA,U      A0,128+27 @A@E@B          LCF       A0,*TIME,X10    @A@@@EMR
)@@G@@          LCF       A0,*COUNT,X10   @ @@@B          LA        A2,A1     MS
)@@G@@@A@E@B          LCF       A0,*COUNT,X10   @A@@@E          LCF       A0,*MT
)@@G@@TIME,X10    @ @E@B          FD        A2,A1     @ @@@E          FD      MU
)@@G@@  A1,A2     @ @E@B          F$FLF1    9*/6+2,A2 @ @@@E          F$FLF1  MV
)@@G@@  9*/6+3    @^@@@B          F$PRT     0,1 @B@C@B          JNGM,U    X10,MW
)@@G@@OPEREND STA030    @B@@@C          JGM,U     X10,OPEREND STA030    @^@D@BMX
)@@G@@          PRINT     ' ' @[@@@D.     @A@@@D. NOW PRINT SOME COMPUTED AVERMY
)@@G@@AGES  @[@@@D.     @F@@@D          F$MSG     ('AVG. NO. OF COMPARISONS PEMZ
)@@G@@R SEARCH: &')     @G@@@D          LA,U      A0,128+27         . GET READNA
)@@G@@Y TO CONVERT TO FLOATING@F@@@D          LCF       A0,SEARCH+COUNT+STATARNB
)@@G@@EA . GET # OF SEARCHES  @B@@@D          LA        A2,A1             .   NC
)@@G@@@G@@@D          LCF       A0,COMPARE+COUNT+STATAREA . GET # OF COMPARISOND
)@@G@@NS    @E@@@D          FD        A1,A2             . = COMPARISONS/SEARCHNE
)@@G@@@D@@@D          F$FLF1    9*/6+2            . INSERT IT     @^@@@D      NF
)@@G@@    F$PRT     0,2 @ @C@B          LOADR     STATS     @^@@@C          LONG
)@@G@@ADR     STAT@ @@@B          J         0,X11     @[@@@C.     @[@@@C.     NH
)@@G@@@C@@@C. THIS ROUTINE WILL CLEAR THE STATISTICS AREA   @[@@@C.     @]@@@CNI
)@@G@@AVL$STATCLR*@ @@@CCLR       SAVER     A0,A1 R1  @A@@@C          LR,U    NJ
)@@G@@  R1,STATAREALEN  @ @@@C          LA,U      A0,(0)    @A@@@C          LANK
)@@G@@        A1,(1,STATAREA) @E@@@C          BT        A1,,*A0           . ZENL
)@@G@@RO ALL THE CELLS  @^@@@C          LOADR     CLR @D@@@C          J       NM
)@@G@@  0,X11             . THAT'S IT     @[@@@C.     @[@@@B.     @C@F@C      NN
)@@G@@    $ENDF                       . 'STATS' @[@@@C.     @#@@@B          ENNO
)@@G@@D     ___@@@          SA        A1,AVL$TIMEON   *[S@@@*SDFF*@[@X@V.     NP
)@@G@@@B@X@V. AVL TREE MAINTENAINCE SUBROUTINE PACKAGE@[@X@V.     @G@X@V. DESINQ
)@@G@@GNED AND IMPLEMENTED BY  ALAN K. STEBBENS, UOMCSC SYSTEMS STAFF.  @[@X@VNR
)@@G@@.     @G@X@V. THESE ARE A SET OF ROUTINES THAT PERFORM INSERTION, RETREINS
)@@G@@VAL, AND    @H@X@V. DELETION OF DATA MAINTAINED IN AN AVL TREE. AN AVL TNT
)@@G@@REE IS A SPECIAL CASE   @G@X@V. OF A BALANCED BINARY TREE, AS DESCRIBED NU
)@@G@@BY G.M. ADELSON-VELSKI, AND   @G@X@V. E.M. LANDIS [DOKLADY AKADEMIA NAUKNV
)@@G@@ SSSR 146 (1962), 263-266; ENGLISH  @G@X@V. TRANSLATION IN SOVIET MATH 3NW
)@@G@@, 1259-1263]. THEIR METHOD NEVER USES MORE@G@X@V. THAN ORDER LOG N OPERANX
)@@G@@TIONS TO SEARCH THE TREE, OR INSERT AN ITEM.    @[@X@V.     @G@X@V. THE NY
)@@G@@AVL ROUTINES PROVIDE THE ABILITY TO USE THE TREE TO ORGANIZE ITEMS@H@X@VNZ
)@@G@@. IN AN ASCENDING ORDER OF KEY FIELDS; MOREOVER, THE AVL TREE MAY BE USEOA
)@@G@@D TO  @H@X@V. REPRESENT A LINEAR LIST, WITHOUT THE DRAWBACKS INHERENT TOOB
)@@G@@ LINEAR LISTS.    @G@X@V. ITEMS MAY BE INSERTED OR DELETED RAPIDLY (OVEROC
)@@G@@COMING THE PROBLEMS OF  @G@X@V. SEQUENTIAL ALLOCATION), AND RANDOM ACCESOD
)@@G@@SES MAY BE PERFORMED RAPIDLY  @H@X@V. (OVERCOMING THE DIFFICULTY OF LINKOE
)@@G@@ED ALLOCATION). THE TREE MAY BE USED TO   @G@X@V. ORDER ITEMS BASED ON KOF
)@@G@@EYS AND THEN RETREIVE THEM IN A RANDOM ACCESS   @E@X@V. FASHION. (EG: PEOG
)@@G@@RFORM A PREORDER TRAVERSAL OVER THE TREE).@C@X@V. SPECIFICALLY, THE OPEROH
)@@G@@ATIONS PROVIDED FOR ARE:@[@X@V.     @]@X@V. 1) FIND:  @A@X@V.    A) AN IOI
)@@G@@TEM HAVING A GIVEN KEY  @ @X@V.    B) THE KTH ITEM, GIVEN K @[@X@V.     OJ
)@@G@@@]@X@V. 2) INSERT:@A@X@V.    A) AN ITEM HAVING A GIVEN KEY  @C@X@V.    BOK
)@@G@@) AN ITEM IN THE KTH POSITION, GIVEN K    @[@X@V.     @]@X@V. 3) DELETE:OL
)@@G@@@A@X@V.    A) AN ITEM HAVING A GIVEN KEY  @ @X@V.    B) THE KTH ITEM, GIOM
)@@G@@VEN K @[@X@V.     @F@X@V. 4) TRAVERSE THE AVL TREE IN ANY OF SIX TYPES OON
)@@G@@F TRAVERSALS:     @D@X@V.    A) PREORDER  -- VISIT ROOT, LINK LEFT, LINKOO
)@@G@@ RIGHT@D@X@V.    B) INORDER   -- LINK LEFT, VISIT ROOT, LINK RIGHT@D@X@VOP
)@@G@@.    C) POSTORDER -- LINK LEFT, LINK RIGHT, VISIT ROOT@F@X@V.    D) REVEOQ
)@@G@@RSE PREORDER  -- VISIT ROOT, LINK RIGHT, LINK LEFT    @F@X@V.    E) REVEOR
)@@G@@RSE INORDER   -- LINK RIGHT, VISIT ROOT, LINK LEFT    @F@X@V.    F) REVEOS
)@@G@@RSE POSTORDER -- LINK RIGHT, LINK LEFT, VISIT ROOT    @[@X@V.     @ @X@VOT
)@@G@@. 5) DISPLAY THE AVL TREE     @[@X@V.     @G@X@V. THE ROUTINES TO PERFOROU
)@@G@@M THESE FUNCTIONS, WITH CALLING SEQUENCES, ARE: @[@X@V.     @^@X@V. TO IOV
)@@G@@NSERT BY KEY:     @[@X@V.     @C@X@V.         LA        A1,(#WRDS IN KEYOW
)@@G@@, NEWNODE)  @ @X@V.         LA,U      A0,AVLPKT @A@W@V.         LMJ     OX
)@@G@@  X11,AVLINSERT   @D@X@W.         LMJ       X11,AVLIK         . INSERT KOY
)@@G@@EY    @[@X@V.     @H@X@V.         UPON RETURN A2=0 IF NODE (A1) INSERTEDOZ
)@@G@@, OTHERWISE A2 = ADDRESS OF   @D@X@V.         NODE WITH SAME KEY PREVIOUPA
)@@G@@SLY INSERTED.     @[@X@V.     @^@X@V. TO INSERT BY RANK:    @[@X@V.     PB
)@@G@@@B@X@V.         LA        A1,(RANK, NEWNODE)    @ @X@V.         LA,U    PC
)@@G@@  A0,AVLPKT @A@W@V.         LMJ       X11,AVLLINK     @D@X@W.         LMPD
)@@G@@J       X11,AVLIR         . INSERT RANK   @[@X@V.     @G@X@V.         UPPE
)@@G@@ON RETURN A1=ADDRESS OF NEW NODE. IT IS ALWAYS INSERTED AS  @ @X@V.     PF
)@@G@@    INDICATED BY RANK.  @[@X@V.     @^@X@V. TO SEARCH BY KEY:     @[@X@VPG
)@@G@@.     @C@X@V.         LA        A1,(#WRDS IN KEY, KEYADDR)  @ @X@V.     PH
)@@G@@    LA,U      A0,AVLPKT @A@W@V.         LMJ       X11,AVLSEARCH   @D@X@WPI
)@@G@@.         LMJ       X11,AVLSK         . SEARCH KEY    @[@X@V.     @F@X@VPJ
)@@G@@.         UPON RETURN A2=ADDRESS OF NODE, OR ZERO IF NOT FOUND.   @[@X@VPK
)@@G@@.     @^@X@V. TO SEARCH BY RANK:    @[@X@V.     @A@X@V.         LA,U    PL
)@@G@@  A1,RANKVALUE    @ @X@V.         LA,U      A0,AVLPKT @A@W@V.         LMPM
)@@G@@J       X11,AVLFIND     @D@X@W.         LMJ       X11,AVLSR         . SEPN
)@@G@@ARCH RANK   @[@X@V.     @H@X@V.         UPON RETURN A2=ADDRESS OF NODE, PO
)@@G@@OR ZERO IF VALUE IN A1 WAS GREATER  @C@X@V.         THAN THE NUMBER OF NPP
)@@G@@ODES IN THE TREE. @[@X@V.     @^@X@V. TO DELETE BY KEY:     @[@X@V.     PQ
)@@G@@@C@X@V.         LA        A1,(#WRDS IN KEY, KEYADDR)  @ @X@V.         LAPR
)@@G@@,U      A0,AVLPKT @A@W@V.         LMJ       X11,AVLDELETE   @D@X@W.     PS
)@@G@@    LMJ       X11,AVLDK         . DELETE KEY    @[@X@V.     @H@X@V.     PT
)@@G@@    UPON RETURN A2=ADDRESS OF NODE DELETED, OR ZERO IF KEY NOT FOUND    PU
)@@G@@@[@X@V.     @^@X@V. TO DELETE BY RANK:    @[@X@V.     @A@X@V.         LAPV
)@@G@@,U      A1,RANKVALUE    @ @X@V.         LA,U      A0,AVLPKT @A@W@V.     PW
)@@G@@    LMJ       X11,AVLDELINK   @D@X@W.         LMJ       X11,AVLDR       PX
)@@G@@  . DELETE RANK   @[@X@V.     @H@X@V.         UPON RETURN A2=ADDRESS OF PY
)@@G@@NODE DELETED, OR ZERO IF RANK WAS GREATER @C@X@V.         THAN THE NUMBEPZ
)@@G@@R OF NODES IN THE TREE. @[@X@W.     @ @X@W. TO DELETE A GIVEN NODE:     QA
)@@G@@@[@X@W.     @A@X@W.         LA,U      A1,NODEADDR     @ @X@W.         LAQB
)@@G@@,U      A0,AVLPKT @D@X@W.         LMJ       X11,AVLDN         . DELETE NQC
)@@G@@ODE   @[@X@W.     @G@X@W.         UPON RETURN A2 = ADDRESS OF NODE DELETQD
)@@G@@ED, OR ZERO IF NODE IS  @E@X@W.         NOT PART OF THE TREE (HAS AN INVQE
)@@G@@ALID LINK FIELD). @[@X@V.     @^@X@V. TO TRAVERSE THE TREE: @[@X@V.     QF
)@@G@@@E@W@V.         LA        A0,(TRAVERSAL INDEX*/12+0100,ROOTNODE)  @C@X@WQG
)@@G@@.         LA        A0,(TRAVERSALINDEX,ROOTNODE)@A@W@V.         LMJ     QH
)@@G@@  X11,AVLTRAVERSE @C@X@W.         LMJ       X11,AVLTRA        . TRAVERSEQI
)@@G@@@A@X@V.         <TRAVERSAL COMPLETE EXIT> @ @X@V.         <NORMAL RETURNQJ
)@@G@@>     @[@X@V.     @G@X@V.         UPON RETURN A0 HAS FIRST NODE IN THE SQK
)@@G@@EQUENCE ACCORDING TO THE@H@X@V.         DESIRED TRAVERSAL, AS INDICATED QL
)@@G@@BY THE TRAVERSAL INDEX. THE VALUE   @G@X@V.         IN A0 MUST BE USED OQM
)@@G@@N THE SUBSEQUENT CALL TO AVLTRAVERSE TO   @H@X@V.         OBTAIN THE NEXQN
)@@G@@T NODE IN THE SEQUENCE. ALSO, S3 OF A0 WILL CONTAIN   @H@X@V.         THQO
)@@G@@E DEPTH, ORIGIN ZERO, OF THE NODE ADDRESS RETURNED IN H2 OF A0.   @H@X@VQP
)@@G@@.         THE ROOT NODE WILL BE AT DEPTH ZERO, ITS TWO SONS AT DEPTH ONEQQ
)@@G@@.     @G@X@V.         THE COMPLETE EXIT IS TAKEN WHEN THERE ARE NO MORE QR
)@@G@@NODES IN THE@^@X@V.         TRAVERSAL.    @[@X@V.     @^@X@V. TO DISPLAYQS
)@@G@@ THE TREE:  @[@X@V.     @ @X@V.         LA,U      A0,PKT    @A@W@V.     QT
)@@G@@    LMJ       X11,AVLDISPLAY  @C@X@W.         LMJ       X11,AVLDSP      QU
)@@G@@  . DISPLAY @[@X@V.     @A@X@V. WHERE PKT IS A TWO WORD PACKET:   @[@X@VQV
)@@G@@.     @G@X@V.          -------------------------------------------------QW
)@@G@@------------@G@X@V.     PKT: : INDENT  : BRCOLN  :  LINES  :        ROOTQX
)@@G@@NODE ADDR        :@G@X@V.          -------------------------------------QY
)@@G@@------------------------@G@X@V.          :        EDITNODE RTNE        :QZ
)@@G@@         OUTPUT RTNE         :@G@X@V.          -------------------------RA
)@@G@@------------------------------------@[@X@V.     @G@X@V.         THE DISPRB
)@@G@@LAY ROUTINE IS A NONREENTRANT SUBROUTINE, WHICH BUILDS@H@X@V.         IMRC
)@@G@@AGES GRAPHICALLY DISPLAYING THE TREE. THE GRAPH MAY BE TAILORED   @F@X@VRD
)@@G@@.         BY ADJUSTING THE THREE PARAMETERS PASSED IN H1 OF A0.   @G@X@VRE
)@@G@@.           INDENT INDICATES THE NUMBER OF COLUMNS FROM THE BEGINNING OFRF
)@@G@@@C@X@V.         A NODE TO THE BEGINNING OF ITS SONS.  @H@X@V.           RG
)@@G@@BRCOLN INDICATES IN WHAT COLUMN, RELATIVE TO THE BEGINNING OF     @G@X@VRH
)@@G@@.         THE FATHER NODE, THE VERTICAL BRANCHES TO ITS SONS BEGIN.     RI
)@@G@@@G@X@V.           LINES INDICATES THE NUMBER OF HORIZONTAL LINES TO BE PRJ
)@@G@@LACED @B@X@V.         BETWEEN THE DISPLAYED NODES.    @[@X@V.     @H@X@VRK
)@@G@@.         ROOTNODE IS THE ROOT NODE OF THE TREE (OR SUBTREE) TO BE DISPLRL
)@@G@@AYED. @[@X@V.     @G@X@V.         EDITRTN IS A X11 SUBROUTINE WHICH IS GRM
)@@G@@IVEN CONTROL WITH A NODE@G@X@V.         ADDRESS IN A0 TO EDIT WHATEVER IRN
)@@G@@NFORMATION IN THE NODE IS     @G@X@V.         DESIRED IN THE OUTPUT IMAGRO
)@@G@@E. THE OUTPUT IMAGES ARE CONSTRUCTED@H@X@V.         WITH EDIT$ IN ASCII RP
)@@G@@OUTPUT AND ASCII INPUT MODES IN EFFECT, WITH    @H@X@V.         THE DEFARQ
)@@G@@ULT FIELDATA/ASCII TRANSLATION TABLE ADDRESS IN THE EDIT$   @G@X@V.     RR
)@@G@@    PACKET, SHOULD TRANSLATION BE DESIRED. IF THE USER SUBROUTINE @H@X@VRS
)@@G@@.         NEED TO EDIT FIELDATA SOURCE, THE FLAG 'ASI' IN THE EDIT$ PACKRT
)@@G@@ET    @H@X@V.         POINTED TO BY X1 SHOULD BE SET TO 0 AND RESET TO 1RU
)@@G@@ WHEN FINISHED.   @H@X@V.         WHEN GIVEN CONTROL, THE EDIT$ PACKET IRV
)@@G@@S OPENED, WITH X1,X2, AND X3  @H@X@V.         SAVED IN THE PACKET. THE URW
)@@G@@SER SHOULD REFRAIN FROM CHANGING THESE    @G@X@V.         REGISTERS EXCERX
)@@G@@PT UNDER THE SUPERVISION OF THE EDIT$ ROUTINES. @[@X@V.     @H@X@V.     RY
)@@G@@    OUTRTN IS A X11 SUBROUTINE WHICH IS GIVEN CONTROL WITH AN APRINT$   RZ
)@@G@@@H@X@V.         CONTROL WORD, FOR AN ASCII IMAGE, IN A0. THIS ENABLES THSA
)@@G@@E USER TO   @F@X@V.         OUTPUT THE GRAPH OF THE TREE TO WHEREVER HE SB
)@@G@@DESIRES.    @[@X@V.     @G@X@V.         BOTH ROUTINES MUST RETURN TO 0,XSC
)@@G@@11 TO COMPLETE THE GRAPH.     @[@X@V.     @G@X@V. ALL OF THE ABOVE CALLISD
)@@G@@NG SEQUENCES HAVE CORRESPONDING PROC CALLS:     @[@X@V.     @B@W@V.     SE
)@@G@@    AVLINSERT AVLPKT KEYLEN,NODEADDR@B@X@W.         AVLIK     AVLPKT KEYSF
)@@G@@LEN,NODEADDR@B@W@V.         AVLLINK   AVLPKT RANK,NODEADDR  @B@X@W.     SG
)@@G@@    AVLIR     AVLPKT RANK,NODEADDR  @B@W@V.         AVLSEARCH AVLPKT KEYSH
)@@G@@LEN,KEYADDR @B@X@W.         AVLSK     AVLPKT KEYLEN,KEYADDR @A@W@V.     SI
)@@G@@    AVLFIND   AVLPKT RANK     @A@X@W.         AVLSR     AVLPKT RANK     SJ
)@@G@@@B@W@V.         AVLDELETE AVLPKT KEYLEN,KEYADDR @B@X@W.         AVLDK   SK
)@@G@@  AVLPKT KEYLEN,KEYADDR @A@W@V.         AVLDELINK AVLPKT RANK     @A@X@WSL
)@@G@@.         AVLDR     AVLPKT RANK     @A@X@W.         AVLDN     AVLPKT NODSM
)@@G@@E     @F@W@V.         AVLTRAVERSE (TRAVERSAL DISPLAYPKTX*/12+0100,ROOTNOSN
)@@G@@DE)   @F@X@W.         AVLTRA    (TRAVERSAL DISPLAYPKTX*/12+0100,ROOTNODESO
)@@G@@)     @A@W@V.         AVLDISPLAY  DISPLAYPKT    @ @X@W.         AVLDSP  SP
)@@G@@  DISPLAYPKT@[@X@V.     @H@X@V.         IF ANY GIVEN FIELD, SUBFIELD IS SQ
)@@G@@MISSING, THE CORRESPONDING REGISTER @I@X@V.         LOADS ARE SUPPRESSEDSR
)@@G@@. ADDRESS SPECIFICATIONS MAY BE EQUF'ED ITEMS, AND    @G@X@V.         NOSS
)@@G@@DEADDR, KEYADDR, ROOTNODE, AVKPKT MAY ALL BE COMPLETE UFIELD@F@X@V.     ST
)@@G@@    SPECIFICATIONS WITH INDIRECTION, XREGS, PARTWORDS, ETC. @[@X@V.     SU
)@@G@@@H@X@V.         NOTE THAT THE SUBFIELDS WHICH SHOULD CONTAIN ADDRESS SPESV
)@@G@@CIFICATIONS @I@X@V.         ARE GENERATED IN 'LOAD IMMEDIATE' INSTRUCTIOSW
)@@G@@NS. THE PRESENCE OF ANY X     @I@X@V.         REG, PARTWORD DESIGNATOR, SX
)@@G@@INCREMENT BIT, OR INDIRECTION BIT, IN EITHER    @I@X@V.         THE PROCSY
)@@G@@ CALL SPECIFICATIONS OR IN THE EQUF'ED ITEM IN THE FIRST SPE-     @H@X@VSZ
)@@G@@.         CIFICATION WILL INHIBIT THE DEFAULT PARTWORD DESIGNATOR OF 'U'TA
)@@G@@.     @[@X@V.     @]@X@V. EXAMPLES: @[@X@V.     @ @W@V.         AVLDISPLTB
)@@G@@AY  PKT     @^@X@W.         AVLDSP     PKT@[@X@V.     @]@X@V. GENERATES:TC
)@@G@@@[@X@V.     @ @X@V.         LA,U      A0,PKT    @A@W@V.         LMJ     TD
)@@G@@  X11,AVLDISPLAY  @ @X@W.         LMJ       X11,AVLDSP@[@X@V.     @]@X@VTE
)@@G@@. WHILE     @[@X@V.     @ @W@V.         AVLDISPLAY  0,X8    @ @X@W.     TF
)@@G@@    AVLDSP      0,X8    @[@X@V.     @]@X@V. CAUSES:   @[@X@V.     @ @X@VTG
)@@G@@.         LA        A0,0,X8   @A@W@V.         LMJ       X11,AVLDISPLAY  TH
)@@G@@@ @X@W.         LMJ       X11,AVLDSP@[@X@V.     @[@X@V.     @]@X@V. EXAMTI
)@@G@@PLES: @[@X@V.     @^@X@V. KEYLEN  EQUF      2,,U@^@X@V. KEYADDR EQUF    TJ
)@@G@@  3,A0@^@X@V. AVLPKT  EQUF      0,X1@[@X@V.     @B@W@V.         AVLINSERTK
)@@G@@T AVLPKT KEYLEN,KEYADDR @B@X@W.         AVLIK     AVLPKT KEYLEN,KEYADDR TL
)@@G@@@[@X@V.     @#@X@V. WILL GENERATE:  @[@X@V.     @ @X@V.         LA      TM
)@@G@@  A1,3,A0   @ @X@V.         LXI       A1,2,,U   @ @X@V.         LA      TN
)@@G@@  A0,0,X1   @A@W@V.         LMJ       X11,AVLINSERT   @ @X@W.         LMTO
)@@G@@J       X11,AVLIK @[@X@V.     @ @W@V.         AVLDELETE AVLPKT    @ @X@WTP
)@@G@@.         AVLDK     AVLPKT    @[@X@V.     @^@X@V. WILL GENERATE ONLY:   TQ
)@@G@@@[@X@V.     @ @X@V.         LA        A0,0,X1   @A@W@V.         LMJ     TR
)@@G@@  X11,AVLDELETE   @ @X@W.         LMJ       X11,AVLDK @[@X@V.     @[@X@VTS
)@@G@@. AND:@[@X@V.     @^@W@V.         AVLDISPLAY    @#@X@W.         AVLDSP  TT
)@@G@@@[@X@V.     @#@X@V. WILL GET YOU:   @[@X@V.     @A@W@V.         LMJ     TU
)@@G@@  X11,AVLDISPLAY  @ @X@W.         LMJ       X11,AVLDSP@[@X@V.     @[@X@WTV
)@@G@@.     @H@X@W. THERE ARE TWO WAYS OF CREATING AN AVL$ PACKET: USE AVL$PKTTW
)@@G@@, OR IF THERE     @G@X@W. ARE NODES TO BE INITIALIZED ALSO, USE AVL$TREETX
)@@G@@. THE FIELDS WITHIN     @H@X@W. THE PACKET AND NODES IN THE TREE MAY BE TY
)@@G@@DEFINED FOR THE USER BY CALLING     @]@X@W. THE PROCS:@[@X@W.     @A@X@WTZ
)@@G@@.         AVL$FIELDS <PKT BASE>     @A@X@W.         AVL$NODES  <NODE BASUA
)@@G@@E>    @[@X@W.     @^@X@W. TO CREATE THE PACKET: @[@X@W.     @F@X@W.     UB
)@@G@@    AVL$PKT   <ROOT>,<NNODES> <KEYSPEC>,<KEY COMPARATOR>    @[@X@W.     UC
)@@G@@@E@X@W. <ROOT> IS THE INITIAL ROOT NODE OF THE TREE, AND  IF THE  @B@X@WUD
)@@G@@. TREE IS INITIALLY EMPTY, SHOULD BE ZERO.@[@X@W.     @G@X@W. <NNODES> IUE
)@@G@@S THE NUMBER OF NODES IN THE TREE.  THIS VALUE IS PLACED    @H@X@W. INTOUF
)@@G@@ THE CORRESPONDING FIELD WITHIN THE PACKET.  THE DEFAULT VALUE IS ZERO. UG
)@@G@@@[@X@W.     @E@X@W. <KEYSPEC> MAY BE A STRING OR A NUMBER, OR MAY BE OMIUH
)@@G@@TTED. @F@X@W. IF THERE IS NO <KEYSPEC>, THE PACKET IS GENERATED SUCH THAUI
)@@G@@T     @F@X@W. INSERTIONS WILL BE BASED UPON A 'RANK' SYMTEM (IE: ITEMS WUJ
)@@G@@ILL   @G@X@W. BE INSERTED ACCORDING TO A USER-SPECIFIED NUMERIC ORDER). UK
)@@G@@IF THERE    @G@X@W. IS A <KEYSPEC>, INSERTIONS WILL BE BASED ON 'KEYS' DUL
)@@G@@EFINED WITHIN     @F@X@W. THE NODES. <KEYSPEC> MAY THEN EITHER BE A NUMBUM
)@@G@@ER INDICATING THE @F@X@W. WORD SIZE OF THE KEYS WITHIN THE NODES, OR IT UN
)@@G@@MAY BE A ONE WORD @G@X@W. STRING WHICH IS USED TO EXTEND SHORTER LENGTH UO
)@@G@@KEYS WHEN COMPARING     @C@X@W. THE VARIABLE LENGTH KEYS WITHIN THE NODEUP
)@@G@@S.    @[@X@W.     @F@X@W. <KEY COMPARATOR> IS THE ADDRESS OF A KEY COMPAUQ
)@@G@@RISON SUBROUTINE. @F@X@W. IF NOT GIVEN, IT DEFAULTS TO AN APPROPRIATE SUUR
)@@G@@BROUTINE THAT WILL@G@X@W. COMPARE THE KEYS.  THIS FEATURE ALLOWS THE USEUS
)@@G@@R TO DEFINE HIS OWN     @F@X@W. KEY COMPARISON ALGORITHM, WHICH, HOWEVERUT
)@@G@@, MUST OPERATE UNDER    @ @X@W. THE FOLLOWING RESTRAINTS:   @[@X@W.     UU
)@@G@@@B@X@W.         A2 = ADDRESS OF THE NODE TO TEST@B@X@W.         A1 = ADDUV
)@@G@@RESS OF THE SEARCH NODE @B@X@W.         LMJ       X11,<KEY COMPARATOR>  UW
)@@G@@@ @X@W.         [KEYS ARE EQUAL]    @ @X@W.         [KEY(A1) > KEY(A2)] UX
)@@G@@@ @X@W.         [KEY(A1) < KEY(A2)] @[@X@W.     @C@X@W. REGISTERS A4,A5,UY
)@@G@@R1-R3 ARE AVAILABLE FOR USE,  @A@X@W. WHILE A0-A3 MUST REMAIN UNCHANGED.UZ
)@@G@@@[@X@W.     @[@X@V/.    @H@W@V. ALL OF THE ROUTINES, EXCEPT FOR AVLDISPLVA
)@@G@@AY, ARE MULTIACTIVITY REENTRANT, AND@F@X@W. ALL OF THE ROUTINES ARE REENVB
)@@G@@TRANT AND USE ONLY THE MINOR SET OF @ @X@W. REGISTERS: X11,A0-A5,R1-R3  VC
)@@G@@@D@W@V. USE ONLY THE MINOR SET OF REGISTERS: X11,A0-A5,R1-R3@[@X@V.     VD
)@@G@@@H@W@V. THE ROUTINES, BEING REENTRANT, HAVE NO VARIABLE DBANK, AND AS SUVE
)@@G@@CH, MUST    @H@X@W. THE ROUTINES WORK FROM A USER-SUPPLIED PACKET.  THISVF
)@@G@@ PACKET CONTAINS ALL    @G@W@V. WORK FROM A USER-SUPPLIED PACKET.  THIS VG
)@@G@@PACKET CONTAINS ALL NECESSARY @G@W@V. INFORMATION TO MAINTAIN THE BALANCVH
)@@G@@ED TREE.  THE FORMAT OF THE PACKET, @H@X@W. NECESSARY INFORMATION TO MAIVI
)@@G@@NTAIN THE BALANCED TREE.  THE FORMAT OF THE     @#@W@V. CURRENTLY, IS:  VJ
)@@G@@@^@X@W. PACKET, CURRENTLY, IS:@[@X@V.     @G@X@V.          .............VK
)@@G@@................................................@G@W@V.       +0 :   TS VL
)@@G@@   :  RKFLG  : ISDFLG  :            ROOT             :@G@X@W.       +0 :VM
)@@G@@   TS    : RKIFLG  : KEYSIZE :            ROOT             :@G@X@V.     VN
)@@G@@     .............................................................@G@X@VVO
)@@G@@.       +1 :                           CMPEXT                          :VP
)@@G@@@G@X@W.          .......................................................VQ
)@@G@@......@G@X@W.       +2 :           NNODES            :           KEYRTN VR
)@@G@@           :@G@X@V.          ...........................................VS
)@@G@@..................@G@W@V.       +2 :           SKSIZE            :      VT
)@@G@@     SKADDR            :@G@W@V.          ...............................VU
)@@G@@..............................@G@W@V.       +3 :            BNODE       VV
)@@G@@     :            KNODE            :@G@W@V.          ...................VW
)@@G@@..........................................@G@W@V.       +4 :            VX
)@@G@@RNODE            :           AVLINK            :@G@W@V.          .......VY
)@@G@@......................................................@G@W@V.       +5 :VZ
)@@G@@           RNKVAL            :           PKTRNK            :@G@W@V.     WA
)@@G@@     .............................................................@G@W@VWB
)@@G@@.       +6 :            FUNC             :          NODEADDR           :WC
)@@G@@@G@W@V.          .......................................................WD
)@@G@@......@G@W@V.       +7 :           AVLRTN            :                  WE
)@@G@@           :@G@W@V.          ...........................................WF
)@@G@@..................@G@W@V.       +8 :                  BEGINNING OF SAVE WG
)@@G@@AREA                   :@G@W@V.          :                              WH
)@@G@@                             :@[@W@V.     @E@W@V. TS                TESTWI
)@@G@@ AND SET CELL. FOR THE USER ONLY.   @[@X@W.     @C@X@W. TS      TEST ANDWJ
)@@G@@ SET CELL. FOR THE USER ONLY. @[@X@W.     @C@X@W. RKIFLG  RANK/KEY INSERWK
)@@G@@TION FLAG (=1 FOR KEYS) @[@X@W.     @D@X@W. KEYSIZE USER SPECIFIED KEYSIWL
)@@G@@ZE (0=VARIABLE LENGTH)  @H@W@V. RKFLG             RANK-KEY OPERATION FLAWM
)@@G@@G. 0=RANKS, 1=KEYS, AND INDICATES   @F@W@V.                   WHAT TYPE WN
)@@G@@OF OPERATION IS BEING PERFORMED.    @H@W@V. ISDFLG            INSERT-SEAWO
)@@G@@RCH-DELETE FLAG. INDICATES WHICH ROUTINE WAS    @E@W@V.                 WP
)@@G@@  INVOKED. 0=INSERT, 1=SEARCH, 2=DELETE.  @D@W@V. ROOT              ADDRWQ
)@@G@@ESS OF ROOT NODE OF TREE.     @[@X@W.     @B@X@W. ROOT    ADDRESS OF ROOWR
)@@G@@T NODE OF TREE.   @G@W@V. CMPEXT            COMPARISON EXTENSION VALUE. WS
)@@G@@USED AS A 'BLANK FILL'  @[@X@W.     @E@X@W. CMPEXT  COMPARISON EXTENSIONWT
)@@G@@ VALUE. USED AS A 'BLANK FILL'@F@W@V.                   VALUE WHEN COMPAWU
)@@G@@RING DIFFERENT LENGTH KEYS.   @D@X@W.         VALUE WHEN COMPARING DIFFEWV
)@@G@@RENT LENGTH KEYS. @[@X@W.     @D@X@W. NNODES  NUMBER OF NODES CURRENTLY WW
)@@G@@IN THE AVL TREE.  @[@X@W.     @C@X@W. KEYRTN  ADDRESS OF KEY COMPARISON WX
)@@G@@ROUTINE.    @C@X@W.         SUPPLIED BY DEFAULT OR BY THE USER.   @H@W@VWY
)@@G@@. SKSIZE            SEARCHKEY SIZE. THE NUMBER OF WORDS IN THE SEARCHKEYWZ
)@@G@@.     @B@W@V. SKADDR            SEARCHKEY ADDRESS.    @F@W@V. BNODE     XA
)@@G@@        BALANCE NODE. THIS IS THE CLOSEST ANCESTOR TO @G@W@V.           XB
)@@G@@        THE KEY NODE THAT HAS A NON-NULL BALANCE FACTOR.    @G@W@V. KNODXC
)@@G@@E             KEY NODE. THIS IS THE 'CURRENT' NODE BEING EXAMINED.@H@W@VXD
)@@G@@. RNODE             RANK NODE. THIS IS THE FIRST NODE FROM THE TOP IN THXE
)@@G@@E     @G@W@V.                   PATH TO THE KEYNODE WHERE A LEFT BRANCH XF
)@@G@@WAS TAKEN.  @B@W@V. AVLINK            USER RETURN ADDRESS.  @G@W@V. RNKVXG
)@@G@@AL            CURRENT RANK VALUE DURING PATH THROUGH THE TREE.    @F@W@VXH
)@@G@@. PKTRNK            ORIGINAL RANK VALUE AS SPECIFIED BY THE USER. @A@W@VXI
)@@G@@. FUNC              FUNCTION ADDRESS@D@W@V. NODEADDR          ADDRESS OFXJ
)@@G@@ THE NODE TO INSERT.    @B@W@V. AVLRTN            CALLING AVL ROUTINE   XK
)@@G@@@F@W@V. SAVE              SPARE WORDS IN WHICH TO TEMPORARILY SAVE DATA.XL
)@@G@@@[@X@V/.    @B@X@V. EACH NODE HAS THE FOLLOWING FORMAT:     @[@X@V.     XM
)@@G@@@G@X@V.          .......................................................XN
)@@G@@......@G@X@V.       +0 :            LLINK            :            RLINK XO
)@@G@@           :@G@X@V.          ...........................................XP
)@@G@@..................@G@X@V.       +1 :            ULINK            : KEYSIXQ
)@@G@@Z  : BALFAC  :         :@G@X@V.          ...............................XR
)@@G@@..............................@G@X@V.       +2 :            RANK        XS
)@@G@@     :    **USER INFORMATION**     :@G@X@V.          ...................XT
)@@G@@..........................................@G@X@V.       +3 :            XU
)@@G@@                KEY                            :@G@X@V.          :      XV
)@@G@@                                                     :@G@X@V.          :XW
)@@G@@                                                           :@[@X@V.     XX
)@@G@@@B@X@V. LLINK             LINK TO LEFT SUBTREE. @B@X@V. RLINK           XY
)@@G@@  LINK TO RIGHT SUBTREE.@C@X@V. ULINK             LINK TO IMMEDIATE ANCEXZ
)@@G@@STOR. @F@X@V. KEYSIZ            FOR VARIABLE KEYS, THIS INDICATES THE NUYA
)@@G@@MBER  @B@X@V.                   OF WORDS IN THE KEY.  @A@X@V. BALFAC    YB
)@@G@@        BALANCE FACTOR. @A@X@V.                      0 = BALANCED @C@X@VYC
)@@G@@.                      1 = RIGHT HEAVY (+1)     @B@X@V.                 YD
)@@G@@     2 = LEFT HEAVY (-1)@G@X@V. RANK              IF RANKS IS SET, THIS YE
)@@G@@IS THE NUMBER OF NODES IN     @D@X@V.                   THE LEFT SUBTREEYF
)@@G@@ OF THE NODE.     @F@X@V. KEY               IF KEYS IS SET, THIS IS THE YG
)@@G@@FIRST WORD OF THE @^@X@V.                   KEY.@[@X@V.     @[@X@V.     YH
)@@G@@@[@X@W/.    @G@X@W. THERE ARE SEVERAL INTERNAL VARIABLES USED DURING ANYYI
)@@G@@ GIVEN OPERATION. @E@X@W. THESE VARIABLES AND THEIR DESCRIPTION ARE AS FYJ
)@@G@@OLLOWS:     @[@X@W.     @F@X@W. SKSIZE  SEARCHKEY SIZE. THE NUMBER OF WOYK
)@@G@@RDS IN THE SEARCHKEY.   @ @X@W. SKADDR  SEARCHKEY ADDRESS.  @E@X@W. BNODYL
)@@G@@E   BALANCE NODE. THIS IS THE CLOSEST ANCESTOR TO     @E@X@W.         THYM
)@@G@@E KEY NODE THAT HAS A NON-NULL BALANCE FACTOR.  @F@X@W. KNODE   KEY NODEYN
)@@G@@. THIS IS THE 'CURRENT' NODE BEING EXAMINED.    @F@X@W. RNODE   RANK NODYO
)@@G@@E. THIS IS THE FIRST NODE FROM THE TOP IN THE   @E@X@W.         PATH TO YP
)@@G@@THE KEYNODE WHERE A LEFT BRANCH WAS TAKEN.@ @X@W. AVLINK  USER RETURN ADYQ
)@@G@@DRESS.@E@X@W. RNKVAL  CURRENT RANK VALUE DURING PATH THROUGH THE TREE.  YR
)@@G@@@B@X@W. NODEADDR ADDRESS OF THE NODE TO INSERT. @F@X@W. RKFLG   RANK-KEYYS
)@@G@@ OPERATION FLAG. 0=RANKS, 1=KEYS, AND INDICATES @D@X@W.         WHAT TYPYT
)@@G@@E OF OPERATION IS BEING PERFORMED.  @F@X@W. ISDFLG  INSERT-SEARCH-DELETEYU
)@@G@@ FLAG. INDICATES WHICH ROUTINE WAS  @C@X@W.         INVOKED. 0=INSERT, 1YV
)@@G@@=SEARCH, 2=DELETE.@E@X@W. CMPRTN  ADDRESS OF COMPARISON ROUTINE FOR OPERYW
)@@G@@ATION TYPE. @E@X@W. SAVE    SPARE WORDS IN WHICH TO TEMPORARILY SAVE DATYX
)@@G@@A.    @B@@@V/         DEF                         .   @#@@@W          LIYY
)@@G@@BRARY @B@@@V          LEVEL     0,1,0             .   @B@W@V          INYZ
)@@G@@CLUDE   'AXR$'            .   @B@W@V          INCLUDE   'BASEPROCS'     ZA
)@@G@@  .   @#@@@V. DATA DEFINITIONS@ @W@V. FIRST, ASSEMBLY PARAMETERS. @[@W@VZB
)@@G@@.     @E@W@V. 'TRACE' CONTROLS THE AMOUNT OF TRACING TO BE PERFORMED.   ZC
)@@G@@@B@W@V. IT MAY TAKE ONE OF THE FOLLOWING VALUES:@^@W@V. 0 - NO TRACING AZD
)@@G@@T ALL @E@W@V. 1 - PRINT ONLY FLAGGED ROUTINE NAMES UPON ENTRACE AND EXITZE
)@@G@@@D@W@V. 2 - PRINT ALL ROUTINE NAMES UPON ENTRANCE AND EXIT  @F@W@V. 3 - ZF
)@@G@@PRINT ROUTINE NAMES, MINOR REGISTERS UPON ENTRACE AND EXIT  @^@W@V. 4 - ZG
)@@G@@FULL SNOOPY TRACE @[@W@V.     @F@W@VTRACE     EQU       1               ZH
)@@G@@  . DETERMINE TRACE OUTPUT    @[@W@V.     @G@W@V. THE ROUTINES ARE DESIGZI
)@@G@@NED TO ALLOW USE OF THE AVL TREE IN MANY WAYS.  @G@W@V. EITHER BY THE USZJ
)@@G@@E OF KEYS, OR BY THE USE OF RANKS (POSITION WITHIN    @F@W@V. THE TREE),ZK
)@@G@@ OR BOTH, ONE MAY ESTABLISH AND MAINTAIN AN AVL TREE. @G@W@V. THE FOLLOWZL
)@@G@@ING TWO PARAMETERS DETERMINE WHETHER OR NOT THESE FEATURES  @G@W@V. ARE ZM
)@@G@@TO BE MADE AVAILABLE. (ONE OF THEM HAD BETTER BE SET OR THIS IS   @#@W@VZN
)@@G@@. A BIG WASTE!).  @[@W@V.     @D@W@VKEYS      EQU       1               ZO
)@@G@@  . ALLOW KEYS    @E@W@VRANKS     EQU       1                 . TURN ON/ZP
)@@G@@OFF RANKS   @[@W@V.     @H@W@V. THE FOLLOWING PARAMETER, BECOMING NECESSZQ
)@@G@@ARY WHEN BOTH KEYS & RANKS ARE BEING@H@W@V. USED, IS USED TO DETERMINE WZR
)@@G@@HAT TYPE OF INSERTION TO ALLOW, SINCE BY USING  @I@W@V. RANK-TYPE INSERTZS
)@@G@@IONS A TREE COULD BE BUILT WHICH COULD NOT SUPPORT BINARY TREE    @H@W@VZT
)@@G@@. SEARCHES. TO ALLOW ONLY KEY-TYPE INSERTIONS, SET INSTYPE TO 1; TO ALLOZU
)@@G@@W     @B@W@V. RANK-TYPE INSERTIONS SET INSTYPE TO 2.  @[@W@V.     @E@W@VZV
)@@G@@INSTYPE   EQU       1                 . KEYS=1, RANKS=2     @E@W@VKEYSINZW
)@@G@@    EQU       INSTYPE=1*KEYS    . SET IF KEY-MODS OK  @E@W@VRANKSIN   EQZX
)@@G@@U       INSTYPE=2*RANKS   . SET IF RANK-MODS OK @[@W@V.     @H@W@V. THESZY
)@@G@@E ROUTINES ARE CONFIGURABLE TO WORK WITH ANY SIZE KEY; HOWEVER, CODE    ZZ
)@@G@@@G@W@V. MAY BE REDUCED IF THE SIZE OF THE KEY IS KNOWN A-PRIORI, AND, ASAA
)@@G@@ SUCH,@H@W@V. THE TAG 'KEYSIZE' SHOULD BE SET TO THE EXACT NUMBER OF WORAB
)@@G@@DS THAT THE KEY   @G@W@V. WILL REQUIRE IN THE NODES. THE MAXIMUM ALLOWABAC
)@@G@@LE KEYSIZE VALUE IS 63; @H@W@V. IF THE EXACT KEYSIZE IS UNKNOWN (GENERALAD
)@@G@@IZED ROUTINES) THEN SET KEYSIZE     @D@W@V. TO ZERO. THE FLAG 'VARYKEYS'AE
)@@G@@ IS SET CORRESPONDINGLY.@[@W@V.     @H@W@VKEYSIZE   EQU       2         AF
)@@G@@        . SIZE OF KEYS, ZERO MEANS DON'T KNOW   @H@W@VVARYKEYS  EQU     AG
)@@G@@  KEYSIZE=0<>KEYS   . IF KEYSIZE NOT KNOWN, THEN VARY THEM  @[@@@V.     AH
)@@G@@@H@@@V. TO KEEP STATISTICAL INFORMATION ON THE VARIOUS CALLS MADE TO THEAI
)@@G@@SE ROUTINES,@F@@@V. 'STATS' SHOULD BE SET NONZERO. THE TYPE OF INFORMATIAJ
)@@G@@ON KEPT IS  @H@@@V. THE NUMBER OF CALLS MADE TO EACH ROUTINE, THE NUMBERAK
)@@G@@ OF SINGLE ROTATIONS    @F@@@V. FOR INSERTIONS AND DELETIONS, THE NUMBERAL
)@@G@@ OF DOUBLE ROTATIONS FOR@H@@@V. INSERTIONS AND DELETIONS, AVERAGE NUMBERAM
)@@G@@ OF COMPARISONS FOR EACH TYPE OF    @C@@@V. OPERATION (INSERTION/RETREIVAN
)@@G@@AL/DELETION).     @[@@@V.     @F@W@VSTATS     EQU       0               AO
)@@G@@  . TURN ON/OFF STATISTICS    @F@@@WSTATS     EQU       0               AP
)@@G@@  . TURN ON/OFF STATISTICS    @[@W@V.     @H@W@V. TO DETERMINE THE AMOUNAQ
)@@G@@T OF TIME SPENT IN EACH PORTION OF THE AVL ROUTINES,  @A@W@V. SET THE FLAR
)@@G@@AG 'TIMES' TO NONZERO.  @[@W@V.     @E@W@VTIMES     EQU       0         AS
)@@G@@        . TURN ON/OFF TIMING  @[@X@V/.    @[@@@X.     @#@@@V. NODE DEFINAT
)@@G@@ITIONS@[@@@V.     @F@@@VNODBAS    BASE      0                 . BASE ADDAU
)@@G@@R OF EACH NODE    @G@@@VLINKS     WORD                        . THIS IS AV
)@@G@@THE LEFT-RITE LINK WORD @D@W@VRLINK     HALF,H2                     . RIAW
)@@G@@GHT LINK    @D@@@WRLINK     FIELD     H2                . RIGHT LINK    AX
)@@G@@@D@W@VLLINK     HALF,H1                     . LEFT LINK     @D@@@WLLINK AY
)@@G@@    FIELD     H1                . LEFT LINK     @#@@@W          WORD    AZ
)@@G@@@C@W@VULINK     HALF                        . UP LINK @C@@@WULINK     FIBA
)@@G@@ELD     H1                . UP LINK @E@W@VKEYSIZ    SIXTH               BB
)@@G@@        . SIZE OF THE KEY     @E@@@WKEYSIZ    FIELD     S4              BC
)@@G@@  . SIZE OF THE KEY     @D@W@VBALFAC    SIXTH                       . BABD
)@@G@@LANCE FACTOR@D@@@WBALFAC    FIELD     S5                . BALANCE FACTORBE
)@@G@@@#@@@W          WORD    @E@W@VRANK      HALF                        . RABF
)@@G@@NK FIELD GOES HERE@E@@@WRANK      FIELD     H1                . RANK FIEBG
)@@G@@LD GOES HERE@G@@@VKEY       WORD                        . BASE ADDR OF TBH
)@@G@@HE KEY IN THE NODE@#@@@W          ENDBASE @[@@@V.     @^@@@V. PACKET DEFBI
)@@G@@INITIONS    @[@@@V.     @E@@@VPKT       BASE      0,A0              . THBJ
)@@G@@E PACKET BASE ADDR@#@@@W          WORD    @E@W@V          SIXTH         BK
)@@G@@              . TEST AND SET SPACE  @H@W@VRKFLG     SIXTH               BL
)@@G@@        . TYPE OF OPERATION:0=RANKS, 1=KEYS     @H@W@VISDFLG    SIXTH   BM
)@@G@@                    . INSERT-SEARCH-DELETE FLAG. (0,1,2).   @H@@@WRKIFLGBN
)@@G@@    FIELD     S2                . RANK/KEY INSERTION FLAG (0=RANK,1=KEY)BO
)@@G@@@F@@@WKEYSIZE   FIELD     S3                . USER SPECIFIED KEYSIZE    BP
)@@G@@@H@W@VROOT      HALF                        . ADDR OF THE ROOT NODE (MUSBQ
)@@G@@T BE H2)    @H@@@WROOT      FIELD     H2                . ADDR OF THE ROBR
)@@G@@OT NODE (MUST BE H2)    @[@W@V.     @E@@@VCMPEXT    WORD                BS
)@@G@@        . COMPARISON EXTENSION@#@@@W          WORD    @E@@@WNNODES    FIBT
)@@G@@ELD     H1                . NUMBER OF NODES     @F@@@WKEYRTN    FIELD   BU
)@@G@@  H2                . KEY COMPARISON ROUTINE    @#@@@W          ENDBASE BV
)@@G@@@[@@@W.     @^@@@W. INTERNAL DATA CELLS   @[@@@W.     @ @@@W          BABW
)@@G@@SE      AVL$DATA  @#@@@WRKISDW    WORD    @H@@@WRKFLG     FIELD     S1  BX
)@@G@@              . TYPE OF OPERATION:0=RANKS, 1=KEYS     @H@@@WISDFLG    FIBY
)@@G@@ELD     S2                . INSERT-SEARCH-DELETE FLAG. (0,1,2).   @F@@@WBZ
)@@G@@UPKT      FIELD     H2                . USER'S PACKET ADDRESS     @E@@@WCA
)@@G@@SKWORD    WORD                        . SEARCH-KEY WORD     @E@@@WSKSIZECB
)@@G@@    FIELD     H1                . SEARCH KEY SIZE     @E@@@WSKADDR    FICC
)@@G@@ELD     H2                . SEARCH KEY ADDRESS  @[@W@V.     @F@@@VBKWORDCD
)@@G@@    WORD                        . BALANCE,KEY NODES WORD    @E@W@VKNODE CE
)@@G@@    HALF,H2                     . CURRENT KEY NODE    @E@@@WKNODE     FICF
)@@G@@ELD     H2                . CURRENT KEY NODE    @E@W@VBNODE     HALF,H1 CG
)@@G@@                    . CURRENT BALANCE NODE@E@@@WBNODE     FIELD     H1  CH
)@@G@@              . CURRENT BALANCE NODE@[@W@V.     @E@W@VRNODE     HALF    CI
)@@G@@                    . CURRENT RANK NODE   @E@@@WRNODE     HALF          CJ
)@@G@@              . CURRENT RANK NODE   @E@W@VAVLINK    HALF                CK
)@@G@@        . USER RETURN ADDR    @E@@@WAVLINK    HALF                      CL
)@@G@@  . USER RETURN ADDR    @[@W@V.     @D@W@VFUNC      HALF                CM
)@@G@@        . FUNCTION ADDR @H@W@VNODEADDR  HALF                        . INCN
)@@G@@ITIAL ADDR OF NODE (INSERT,LINK)    @H@@@WCMPRTN    HALF                CO
)@@G@@        . ADDRESS OF COMPARISON ROUTINE FOR TYPE@H@@@WNODEADDR  HALF    CP
)@@G@@                    . INITIAL ADDR OF NODE (INSERT,LINK)    @G@@@WAVLRTNCQ
)@@G@@    HALF                        . RETURN ADDRESS OF AVL ROUTINE   @E@@@WCR
)@@G@@LOLINK    HALF                        . LOCATE$ RETURN LINK @I@Z@WINLINKCS
)@@G@@    HALF                        . INSERT$ RETURN LINK (MUTUALLY EXCLUSIVCT
)@@G@@E)    @I@@@ZINLINK    EQUF      LOLINK            . INSERT$ RETURN LINK CU
)@@G@@(MUTUALLY EXCLUSIVE)    @E@Z@WBALINK    HALF                        . BACV
)@@G@@LANCE RETURN LINK @E@Z@WDELINK    HALF                        . DELETE RCW
)@@G@@ETURN LINK  @E@@@ZDELINK    EQUF      LOLINK            . DELETE RETURN CX
)@@G@@LINK  @E@@@ZBALINK    HALF                        . BALANCE RETURN LINK CY
)@@G@@@[@@@W.     @[@W@V.     @G@W@VAVLRTN    HALF                        . ADCZ
)@@G@@DRESS OFCALLING AVL$ ROUTINE  @[@W@V.     @[@W@V.     @F@W@VSAVEW     EQDA
)@@G@@U       2                 . # OF WORDS FOR SPARE USAGE@B@W@VI         REDB
)@@G@@PEAT    1,2*SAVEW,2       .   @E@W@VSAVE[$CD(I*11+1)] WORD              DC
)@@G@@  . DEFINE A SAVEWORD   @C@W@VSAVE[$CD(I)] HALF,H1                  . TODD
)@@G@@P HALF@D@W@VSAVE[$CD(I+1)] HALF,H2                . BOTTOM HALF   @B@W@VDE
)@@G@@          ENDR                        .   @B@W@VI         $DELETE       DF
)@@G@@              .   @[@W@V.     @E@W@VPKTSIZ    EQU       BASESIZE        DG
)@@G@@  . # OF WORDS IN PACKET@G@@@WDATALEN   LENGTH                      . # DH
)@@G@@OF WORDS IN INTERNAL DATA     @#@@@W          ENDBASE @[@@@X.     @G@@@XDI
)@@G@@. THERE ARE SEVERAL INTERNAL VARIABLES USED DURING ANY GIVEN OPERATION. DJ
)@@G@@@E@@@X. THESE VARIABLES AND THEIR DESCRIPTION ARE AS FOLLOWS:     @[@@@XDK
)@@G@@.     @F@@@X. SKSIZE  SEARCHKEY SIZE. THE NUMBER OF WORDS IN THE SEARCHKDL
)@@G@@EY.   @ @@@X. SKADDR  SEARCHKEY ADDRESS.  @E@@@X. BNODE   BALANCE NODE. DM
)@@G@@THIS IS THE CLOSEST ANCESTOR TO     @E@@@X.         THE KEY NODE THAT HADN
)@@G@@S A NON-NULL BALANCE FACTOR.  @F@@@X. KNODE   KEY NODE. THIS IS THE 'CURDO
)@@G@@RENT' NODE BEING EXAMINED.    @F@@@X. RNODE   RANK NODE. THIS IS THE FIRDP
)@@G@@ST NODE FROM THE TOP IN THE   @E@@@X.         PATH TO THE KEYNODE WHERE DQ
)@@G@@A LEFT BRANCH WAS TAKEN.@ @@@X. AVLINK  USER RETURN ADDRESS.@E@@@X. RNKVDR
)@@G@@AL  CURRENT RANK VALUE DURING PATH THROUGH THE TREE.  @B@@@X. NODEADDR ADS
)@@G@@DDRESS OF THE NODE TO INSERT. @F@@@X. RKFLG   RANK-KEY OPERATION FLAG. 0DT
)@@G@@=RANKS, 1=KEYS, AND INDICATES @D@@@X.         WHAT TYPE OF OPERATION IS DU
)@@G@@BEING PERFORMED.  @F@@@X. ISDFLG  INSERT-SEARCH-DELETE FLAG. INDICATES WDV
)@@G@@HICH ROUTINE WAS  @C@@@X.         INVOKED. 0=INSERT, 1=SEARCH, 2=DELETE.DW
)@@G@@@E@@@X. CMPRTN  ADDRESS OF COMPARISON ROUTINE FOR OPERATION TYPE. @E@@@XDX
)@@G@@. SAVE    SPARE WORDS IN WHICH TO TEMPORARILY SAVE DATA.    @[@X@V.     DY
)@@G@@@B@W@V          $IF       TRACE+TIMES+STATS .   @F@W@V          BASE    DZ
)@@G@@  AVL$REGS          . STASH PLACES FOR REGS     @B@W@VSAVA0     WORD    EA
)@@G@@                    .   @B@W@VSAVA1     WORD                        .   EB
)@@G@@@B@W@VSAVA2     WORD                        .   @B@W@VSAVA3     WORD    EC
)@@G@@                    .   @B@W@VSAVA4     WORD                        .   ED
)@@G@@@B@W@VSAVA5     WORD                        .   @B@W@VSAVX11    WORD    EE
)@@G@@                    .   @B@W@VSAVR1     WORD                        .   EF
)@@G@@@B@W@VSAVR2     WORD                        .   @B@W@VSAVR3     WORD    EG
)@@G@@                    .   @B@W@V          $ENDF                       .   EH
)@@G@@@[@X@V.     @[@X@V.     @[@@@X/.    @]@@@V. PROCSVILLE@[@@@V.     @B@W@VEI
)@@G@@P         PROC      *1                .   @B@W@VTRACEOFF* NAME      0   EJ
)@@G@@              .   @D@W@V%1:       $IF       TRACE=4           . SNOOPY TEK
)@@G@@RACE  @B@W@V          DO        P(1,*1) , SLJ TOFF$ . @B@W@V%1:       $EEL
)@@G@@NDF                       .   @B@W@VTRACEON*  NAME      1               EM
)@@G@@  .   @B@W@V%1:       $IF       TRACE             .   @E@W@VSNOOP     EQEN
)@@G@@U       P(1,*1)           . SET SNOOPY FLAG     @ @W@V%1:       IF      EO
)@@G@@  TRACE<4   @ @W@V%1:       IF        TRACE=1   @F@W@V          IF      EP
)@@G@@  SNOOP             . PRINT ONLY FLAGGED ITEMS  @#@W@V%1:       ENDF    EQ
)@@G@@@F@W@V          SLJ       AVL$TRACE         . CALL THE TRACE ROUTINE    ER
)@@G@@@F@W@V          *         ($SS($CFS(P(1,1))L,1,18)) . OUTPUT THE ADDRESSES
)@@G@@@ @W@V%1:       IF        TRACE=1   @F@W@V          ENDF      SNOOP     ET
)@@G@@        . END FLAGGED ITEM CHECK    @ @W@V%1:       ENDF      TRACE=1   EU
)@@G@@@B@W@V%1:       ELSE      TRACE=4           .   @D@W@V          DO P(0,0EV
)@@G@@)*SNOOP , SLJ TON$ . CALL SNOOPY    @B@W@V%1:       $ENDF     TRACE<4   EW
)@@G@@        .   @B@W@V%1:       $ENDF     TRACE             .   @B@W@V      EX
)@@G@@    END                         .   @[@W@V.     @^@W@V. TIMEON    TIMECEEY
)@@G@@LL    @^@W@V. TIMEOFF   TIMECELL    @[@W@V.     @B@W@VP         PROC    EZ
)@@G@@  *TIMES,2*TIMES    .   @B@W@VTIMEON*   NAME      'AVL$TIMEON'      .   FA
)@@G@@@B@W@VTIMEOFF*  NAME      'AVL$TIMEOFF'     .   @B@W@V%1:       $IF     FB
)@@G@@  TIMES             .   @E@W@V          SLJ       [P(0,0)]          . TUFC
)@@G@@RN ON/OFF TIMING  @E@W@V          *         P(1,1)            . ADDR OF FD
)@@G@@TIME CELL   @B@W@V%1:       $ENDF                       .   @B@W@V      FE
)@@G@@    END                         .   @[@W@V.     @^@W@V. INC     COUNTCELFF
)@@G@@L     @^@W@V. DEC     COUNTCELL     @^@W@V. CLEAR   COUNTCELL     @[@W@VFG
)@@G@@.     @B@W@VP         PROC      *STATS,2*STATS    .   @B@W@VINC*      NAFH
)@@G@@ME      1                 .   @B@W@VDEC*      NAME      - 1             FI
)@@G@@  .   @B@W@V%1:       $IF       STATS             .   @E@W@V          SLFJ
)@@G@@J       AVL$BUMP          . BUMP THE STAT CELL  @F@W@V          *       FK
)@@G@@  P(1,1),P(0,1)->P(0,1)!1 COUNT ADDR,BUMP VALUE @B@W@V%1:       $ENDF   FL
)@@G@@                    .   @B@W@V          END                         .   FM
)@@G@@@[@W@V.     @B@W@VP         PROC      *STATS,STATS      .   @B@W@VCLEAR*FN
)@@G@@    NAME                        .   @B@W@V%1:       $IF       STATS     FO
)@@G@@        .   @B@W@V          SZ        P(1,1)            .   @B@W@V%1:   FP
)@@G@@    $ENDF                       .   @B@W@V          END                 FQ
)@@G@@        .   @[@W@V.     @[@W@V.     @B@W@VP         PROC      *2        FR
)@@G@@        .   @B@W@VENTER*    NAME                        .   @^@W@V. ENTEFS
)@@G@@R [*]'<NAME>'     @B@W@V%1:       $IF       TRACE             .   @D@W@VFT
)@@G@@          TRACEON   [P(1,*1)->'*']'ENTER ':P(1,1) .   @B@W@V%1:       $EFU
)@@G@@NDF                       .   @B@W@V          END                       FV
)@@G@@  .   @[@W@V.     @B@W@VP         PROC      *3                .   @B@W@VFW
)@@G@@EXIT*     NAME                        .   @ @W@V. EXIT <RETURNADDR> [*]'FX
)@@G@@NAME' @B@W@V%1:       $IF       TRACE             .   @H@W@V          DOFY
)@@G@@        P>2 , TRACEOFF [P(2,*1)->'*']'EXIT  ':P(2,1) . TURN OF    @B@W@VFZ
)@@G@@%1:       $ENDF                       .   @F@W@V          J         [P(1GA
)@@G@@,*1)->'*']P(1,1),[P(1,*2)->'*']P(1,2) .   @B@W@V          END           GB
)@@G@@              .   @[@W@V.     @B@W@VP         PROC      *0              GC
)@@G@@  .   @^@W@VIBANK*    NAME      1   @^@W@VDBANK*    NAME      0   @B@W@VGD
)@@G@@          DO $LF(1)>0 ,* EQU $(P(0,0))    @B@W@V$(1)      LIT           GE
)@@G@@              .   @]@W@V$(P(0,0))   @B@W@V          END                 GF
)@@G@@        .   @[@W@V.     @B@W@VSLJENTRY* PROC      *0                .   GG
)@@G@@@A@W@V          DO $LF(1)>0 ,* EQU $(0)   @D@W@V$(0)      *         $-$ GH
)@@G@@              . ENTRY POINT   @F@W@V          J         $(1)            GI
)@@G@@  . TRANSFER TO THE IBANK     @B@W@V$(1)      LIT                       GJ
)@@G@@  .   @B@W@V          END                         .   @[@W@V.     @B@W@VGK
)@@G@@. PROC TO DISPLAY AND INSERT ASSEMBLY CODE@[@W@V.     @B@W@V. D$I 'LABELGL
)@@G@@','OPER','OPERAND','COMMENT'  @[@W@V.     @B@W@VP         PROC      *1  GM
)@@G@@              .   @B@W@VD$I*      NAME                        .   @H@W@VGN
)@@G@@I         DO        4 , DO $TSTR(P(1,I))=0 ,P(1,I) EQU '' FIX UP NULL ARGO
)@@G@@GS    @G@W@VS         EQU       P(1,1)            . INITIALIZE STRING TOGP
)@@G@@ THE LABEL  @H@W@VC         EQU       $L1(10,20,38)     . ESTABLISH COLUGQ
)@@G@@MN POSITIONS MINUS ONE  @G@W@VI DO 3 ;  FOR ALL THREE FIELDS, ALIGN THE GR
)@@G@@INSTRUCTION AT THE COLUMNS    @H@W@V          ,S        EQU S:$SR(' ',C(GS
)@@G@@I)-$SL(S)>0->C(I)-$SL(S)!1):P(1,1+I) .    @E@W@V          DISPLAY   S   GT
)@@G@@              . SHOW THE INSTRUCTION@E@W@V          INSERT    S         GU
)@@G@@        . AND THE OCTAL ALSO  @B@W@V          END                       GV
)@@G@@  .   @[@@@W.     @F@@@W. PROC TO PERFORM LINKING BASED ON ALPHA (A PARAGW
)@@G@@METER OF BALANCE) @[@@@W.     @^@@@W.   SET  <DEST>  <SRC>  @[@@@W.     GX
)@@G@@@ @@@W.  <DEST> := <REG>  ! <NODE>  @B@@@W.  <NODE> := <UFIELD>,<XREG>[,GY
)@@G@@<ALPHA>]    @[@@@W.     @^@@@WP         PROC      *2  @^@@@WSET*      NAGZ
)@@G@@ME      0   @E@@@WCSET*     NAME      1                 . CONDITIONAL SEHA
)@@G@@T     @H@@@W. SET IS A VERY GENERALIZED PROC. BASICALLY, IT TAKES TWO ARHB
)@@G@@GUMENTS, AND SETS @H@@@W. THE VALUE OF THE FIRST ARGUMENT TO THE VALUE OHC
)@@G@@F THE SECOND. EITHER ARGUMENT @H@@@W. CAN HAVE ONE OF TWO TYPES: BINARY HD
)@@G@@OR A NODE REFERENCE AS RETURNED FROM THE  @H@@@W. 'LINK' FUNCTION. IF A HE
)@@G@@BINARY VALUE IS GIVEN THEN THIS SIMPLY IS A REGISTER  @I@@@W. OPERAND. IHF
)@@G@@F A NODE REFERENCE IS GIVEN THEN THE FOLLOWING IS ASSUMED: THE NODE     HG
)@@G@@@H@@@W. SHOULD REFERENCE A THREE ELEMENT LIST OF UFIELD, INDEX, ALPHA  OHH
)@@G@@R  A TWO    @H@@@W. ELEMENT LIST OF UFIELD, INDEX.  IF CSET IS CALLED, AHI
)@@G@@ TEST FOR ZERO IS DONE  @F@@@W. ON ANY INDEX REGISTERS TO AVOID USING ZEHJ
)@@G@@RO LINKS AS INDEXES.    @[@@@W.     @F@@@WT0        EQU       P(0,0)    HK
)@@G@@        . SET CONDITIONAL SET FLAG  @A@@@WT1        EQU       $TYPE(P(1,HL
)@@G@@1))   @A@@@WT2        EQU       $TYPE(P(2,1))   @#@@@W   $IF T1=T2=1    HM
)@@G@@@F@@@W      P(1)=P(2)=1->P(1,1)=P(2,1)->END . IGNORE REDUNDANT LOADS    HN
)@@G@@@ @@@W      $IF P(2)=2->A3<P(2,2)   @ @@@W         LX      XREG,P(2,2)  HO
)@@G@@@^@@@WP(2,2)   EQU     XREG   @]@@@W      $ENDF @G@@@W      DO P(1)<=P(2HP
)@@G@@) , L P(2)=P(1)=2->AREG!P(1,1),P(2,1),P(2)=2->P(2,2)!0@ @@@W      $IF P(HQ
)@@G@@1)=2->A3<P(1,2)   @ @@@W         LX      XREG,P(1,2)  @^@@@WP(1,2)   EQUHR
)@@G@@     XREG   @]@@@W      $ENDF @B@@@W      DO T0=1<P(1) , TZ,U    0,P(1,2HS
)@@G@@)     @E@@@W      DO P(1)=2   , S P(2)=2->AREG!P(2,1),P(1,1),P(1,2)     HT
)@@G@@@#@@@W   $ELSF T1=1     @A@@@W      $IF (A3>=P(2,1,2)>=X11)=0     @ @@@WHU
)@@G@@         LX      XREG,P(2,1,2)@^@@@WP(2,1,2) EQU     XREG   @]@@@W      HV
)@@G@@$ENDF @E@@@W      EX        [P(2,1,1):'LOAD':$CD(P(2,1,2)-10)],P(2,1,3) HW
)@@G@@@C@@@W      SET       P(1,1)[P(1)=2->',P(1,2)'] AREG  @#@@@W   $ELSF T2=HX
)@@G@@1     @A@@@W      $IF (A3>=P(1,1,2)>=X11)=0     @ @@@W         LX      XHY
)@@G@@REG,P(1,1,2)@^@@@WP(1,1,2) EQU     XREG   @]@@@W      $ENDF @C@@@W      HZ
)@@G@@SET       AREG P(2,1)[P(2)=2->',P(2,2)']  @A@@@W      DO T0 , TZ,U    0,IA
)@@G@@P(1,1,2)    @E@@@W      EX        [P(1,1,1):'STOR':$CD(P(1,1,2)-10)],P(1IB
)@@G@@,1,3) @]@@@W   $ELSE    @ @@@W      SET     AREG P(2,1)     @ @@@W      IC
)@@G@@SET     P(1,1) AREG     @]@@@W   $ENDF    @#@@@W          END     @[@@@WID
)@@G@@.     @G@@@W. LINK FUNC SO OUR CODE CAN LOOK LIKE KNUTH'S ALGORITHMIC DEIE
)@@G@@SCRIPTIONS  @[@@@W.     @#@@@WF         FUNC    @#@@@WLINK*     NAME    IF
)@@G@@@G@@@W          END $L1('AVL$':(F(1)<0->'N'!''):'A',F(2),F(1)<0->-F(1)!FIG
)@@G@@(1))  @[@@@W.     @[@@@V.     @F@W@V. PROCS TO PERFORM LINKING BASED ON IH
)@@G@@ALPHA (A PARAMETER OF BALANCE)@[@W@V.     @A@W@V.  GETLINK[,<ALPHA>] <DEII
)@@G@@ST>,<SOURCE>@A@W@V.  SETLINK[,<ALPHA>] <SOURCE>,<DEST>@[@W@V.     @F@W@VIJ
)@@G@@. THE COMBINATION X11,A5 MAY NOT APPEAR ON GETLINK OR SETLINK     @[@W@VIK
)@@G@@.     @^@W@VP         PROC      *1  @^@W@VGETLINK*  NAME      0   @^@W@VIL
)@@G@@GETNLINK* NAME      1   @^@W@VSETLINK*  NAME      2   @^@W@VSETNLINK* NAIM
)@@G@@ME      3   @ @W@VA         EQU       P(1,1)    @ @W@VX         EQU     IN
)@@G@@  P(1,2)    @E@W@VALPHA     EQU       P(0)>1->P(0,1)!A1 . A1 IS DEFAULT IO
)@@G@@ALPHA @ @W@VI         EQU       P(0,0)    @B@W@V          DO (I**2)*(A<>IP
)@@G@@A5) , LA A5,A     @ @W@V          DO X<>X11 , LX X11,X@B@W@V          EXIQ
)@@G@@        [AVL$$K(I)],ALPHA     @B@W@V          DO (\I**2)*(A<>A5) , SA A5IR
)@@G@@,A    @#@W@V          END     @A@W@V. ARRAY OF LOAD, STORE TABLE NAMES  IS
)@@G@@@G@W@VAVL$$K    EQU       $L0('AVL$LDLNK','AVL$LDNLK','AVL$STLNK','AVL$SIT
)@@G@@TNLK')@[@W@V.     @^@@@V. PROCS TO FIXUP RANKS  @[@@@V.     @^@@@VP     IU
)@@G@@    PROC      *1,3@^@@@VADDRANKS* NAME      'AA'@^@@@VSUBRANKS* NAME    IV
)@@G@@  'AN'@A@@@V          LA        A5,RANK,P(1,1)  @E@@@V          [P(0,0)]IW
)@@G@@  A5,[P(1,*2)->'P(1,2),,XU'!'RANK,P(1,2)']@A@@@V          SA        A5,RIX
)@@G@@ANK,P(1,1)  @#@@@V          END     @[@@@V.     @A@@@V. PROC TO USE TO CIY
)@@G@@ALL AVL$ROUTINE   @[@@@V.     @ @@@VP         PROC      *2,,1     @#@@@VIZ
)@@G@@PERFORM*  NAME    @G@W@V. ARGS:  TESTRTNE, 2ND FUNCTION  RANK-KEYFLAG, IJA
)@@G@@NSERT-SEARCH-DELETE FLAG@E@@@W. ARGS: 'KEY' OR 'RANK'   'INSERT' ! 'SEARJB
)@@G@@CH' ! 'DELETE'    @ @@@WA         EQU       P(1,1)    @ @@@WB         EQJC
)@@G@@U       P(2,1)    @F@@@WB         EQU       B='INSERT'->0!B='SEARCH'->1!JD
)@@G@@B='DELETE'->2!-1  @C@@@WA         EQU       A='RANK'->0!A='KEY'->1!-1   JE
)@@G@@@E@W@V          LA,U      A2,P(2,1)*/6+P(2,2) . RKFLG*/6+ISDFLG   @B@@@WJF
)@@G@@          DO $PAR(4)='SNOOPY' , SLJ TON$  @E@@@W          LXI,U     A2,AJG
)@@G@@*/12+B*/6     . RKFLG*/12+ISDFLG*/6 @E@@@W          DO A=0 , LA,U  A4,AVJH
)@@G@@L$RTEST . RANK TEST ROUTINE   @F@@@W          DO A=1 , LA    A4,KEYRTN  JI
)@@G@@  . KEY COMPARISON ROUTINE    @A@W@V          DO P(1)=1 , LA,U A4,P(1,1)JJ
)@@G@@@C@W@V          DO P(1)=2 , LA   A4,(P(1,2),P(1,1))   @A@@@V          LMJK
)@@G@@J       A3,AVL$ROUTINE  @F@@@W          DO B<>1 , J  AVL$[P(2,1)]   . PEJL
)@@G@@RFORM SECONDARY STEP    @B@@@W          DO $PAR(4)='SNOOPY' , SLJ TOFF$ JM
)@@G@@@E@@@W          J         0,X11             . RETURN TO JOE USER  @#@@@VJN
)@@G@@          END     @[@X@W.     @[@X@W.     @[@@@X/.    @C@@@W. PROCS FOR JO
)@@G@@STATISTICAL INFORMATION GATHERING   @[@@@W.     @ @@@W          $IF     JP
)@@G@@  STATS     @[@@@W.     @ @@@W.         INCR      <CELL>    @[@@@W.     JQ
)@@G@@@^@@@WP         PROC      1,2 @#@@@WINCR*     NAME    @ @@@W          SLJR
)@@G@@J       AVL$INCR  @C@@@W          +         P(1,1)+COUNT+AVL$STATAREA   JS
)@@G@@@#@@@W          END     @[@@@W.     @ @@@W.         TIMEON    <CELL>    JT
)@@G@@@[@@@W.     @^@@@WP         PROC      1,2 @#@@@WTIMEON*   NAME    @ @@@WJU
)@@G@@          SLJ       AVL$TIMEON@C@@@W          +         P(1,1)+TIMER+AVLJV
)@@G@@$STATAREA   @#@@@W          END     @[@@@W.     @ @@@W.         TIMEOFF JW
)@@G@@  <CELL>    @[@@@W.     @^@@@WP         PROC      1,2 @#@@@WTIMEOFF*  NAJX
)@@G@@ME    @A@@@W          SLJ       AVL$TIMEOFF     @C@@@W          +       JY
)@@G@@  P(1,1)+TIME+AVL$STATAREA    @#@@@W          END     @[@@@Y.     @C@@@YJZ
)@@G@@          $ELSE                       . 'STATS' @ @@@YINCR      EQU     KA
)@@G@@  /$NIL     @ @@@YTIMEON    EQU       /$NIL     @ @@@YTIMEOFF   EQU     KB
)@@G@@  /$NIL     @C@@@Y          $ENDF                       . 'STATS' @[@@@WKC
)@@G@@.     @E@@@W. EACH ITEM IN THE STATISTICS AREA HAS THE FOLLOWING FORMAT:KD
)@@G@@@[@@@W.     @G@@@W.          ...........................................KE
)@@G@@..................@G@@@W.          :                           COUNT    KF
)@@G@@                       :@G@@@W.          ...............................KG
)@@G@@..............................@G@@@W.          :                        KH
)@@G@@TOTAL TIME                         :@G@@@W.          ...................KI
)@@G@@..........................................@G@@@W.          :            KJ
)@@G@@               TIMER                           :@G@@@W.          .......KK
)@@G@@......................................................@[@@@W.     @#@@@WKL
)@@G@@. DEFINE THE CELLS@[@@@W.     @^@@@WCOUNT     EQU       0   @^@@@WTIME  KM
)@@G@@    EQU       1   @^@@@WTIMER     EQU       2   @[@@@W.     @D@@@W. NOW KN
)@@G@@DEFINE THE INDICES FOR THE VARIOUS ENTRIES.     @[@@@W.     @^@@@WSTATD*KO
)@@G@@    PROC      *0  @^@@@WS$        EQU       0   @#@@@WINSERT    STATDEF KP
)@@G@@@#@@@WDELETE    STATDEF @#@@@WSEARCH    STATDEF @#@@@WBALANCE   STATDEF KQ
)@@G@@@#@@@WCOMPARE   STATDEF @#@@@WSROTATE   STATDEF @#@@@WDROTATE   STATDEF KR
)@@G@@@#@@@W          END     @^@@@WSTATDEF*  PROC      *0  @^@@@W**        EQKS
)@@G@@U       S$  @^@@@WS$*       EQU       S$+3@#@@@W          END     @[@@@WKT
)@@G@@.     @E@@@W          STATD                       . DEFINE THE INDICES  KU
)@@G@@@[@Y@W.     @C@Y@W          $ELSE                       . 'STATS' @ @Y@WKV
)@@G@@INCR      EQU       /$NIL     @ @Y@WTIMEON    EQU       /$NIL     @ @Y@WKW
)@@G@@TIMEOFF   EQU       /$NIL     @C@Y@W          $ENDF                     KX
)@@G@@  . 'STATS' @[@@@W.     @D@@@V          END                         . OFKY
)@@G@@ GLOBAL DEF ___@@@  AREG P(2,1)     @ @@@W      SET     P(1,1) AREG     KZ
)@@G@@@]@@@W   $ENDF    @#@@@W          END     @[@@@W*[S@@@*SDFF*@#@@@@      LA
)@@G@@    LIBRARY @ @@@@          INCLUDE   'AVL$DEF' @[@@@@.     @B@@@@. AVL LB
)@@G@@TREE MAINTENAINCE SUBROUTINE PACKAGE@[@@@@.     @G@@@@. DESIGNED AND IMPLC
)@@G@@LEMENTED BY  ALAN K. STEBBENS, UOMCSC SYSTEMS STAFF.  @[@@@@.     @#@@@@LD
)@@G@@          IBANK   @[@@@@.     @D@@@@. AVLDN -- DELETE THE SPECIFIED NODELE
)@@G@@ FROM THE TREE    @[@@@@.     @#@@@@. A0 = PKT ADDR   @^@@@@. A1 = NODE LF
)@@G@@ADDRESS     @#@@@@. LMJ X11,AVLDN   @A@@@@. A2 = ADDRESS OF NODE DELETEDLG
)@@G@@.     @[@@@@.     @[@@@@AVLDN*@D@@@@          SX        X11,R3          LH
)@@G@@  . SAVE OUR LINK @G@@@@          LMJ       X11,AVLCR         . COMPUTE LI
)@@G@@THE RANK OF THE NODE    @E@@@@          LA        A1,A2             . NOLJ
)@@G@@W, DELETE BY RANK @E@@@@          LX        X11,R3            . RECOVER LK
)@@G@@OUR LINK    @E@@@@          J         AVLDR             . GO DELETE BY RLL
)@@G@@ANK   @#@@@@          END     ___@@@INE   @[@@@V.     @ @@@VP         PRLM
)@@G@@OC      *2,,1     @#@@@VPERFORM*  NAME    @G@W@V. ARGS:  TESTRTNE, 2ND FLN
)@@G@@UNCTION  RANK-KEYFLAG, INSERT-SEARCH-DELETE FLAG*[S@@@*SDFF*@#@[@@      LO
)@@G@@    LIBRARY @#@@@[/         LIBRARY @ @@@@          INCLUDE   'AVL$DEF' LP
)@@G@@@[@@@@.     @B@@@@. AVL TREE MAINTENAINCE SUBROUTINE PACKAGE@[@@@@.     LQ
)@@G@@@G@@@@. DESIGNED AND IMPLEMENTED BY  ALAN K. STEBBENS, UOMCSC SYSTEMS STLR
)@@G@@AFF.  @[@@@@.     @#@@@@          IBANK   @[@@@@.     @C@@@@. AVLCR -- CLS
)@@G@@OMPUTE THE RANK OF A GIVEN NODE     @[@@@@.     @^@@@@. A1 = NODE ADDRESLT
)@@G@@S     @#@@@@. LMJ X11,AVLCR   @^@@@@. A2 = RANK OF NODE     @[@@@@.     LU
)@@G@@@E@@@@. IF A1 IS NOT A VALID NODE ADDRESS, AN ERR$ ERROR RESULTS  @[@@@@LV
)@@G@@.     @[@@@@AVLCR*@E@@@@          LA        A2,LLINK,A1       . VALIDATELW
)@@G@@ THE LINKS  @E@@@@          JZ        A2,CR010          . SKIP IF NO LEFLX
)@@G@@T LINK@H@@@@          JNE       A1,ULINK,A2 CRERR . ONE MUST BE A FATHERLY
)@@G@@ TO ONE'S SON     @A@@@@CR010     LA        A2,RLINK,A1     @F@@@@      LZ
)@@G@@    JZ        A2,CR020          . SKIP IF NO RIGHT LINK     @H@@@@      MA
)@@G@@    JNE       A1,ULINK,A2 CRERR . OR IS IT ANCESTOR TO ONE'S DESCENDANT MB
)@@G@@@G@@@@CR020     LA        A2,ULINK,A1       . NOW CHECK THE ANCESTOR LINMC
)@@G@@K     @E@@@@          JZ        A2,CR030          . SKIP IF NO ANCESTOR MD
)@@G@@@H@@@@          TE        A1,LLINK,A2       . IT MUST BE ONE OF THE DESCME
)@@G@@ENDANTS     @B@@@@          TNE       A1,RLINK,A2       .   @C@@@@      MF
)@@G@@    J         CR030             . IT IS   @E@[@@          PRINT     'INVMG
)@@G@@ALID LINK FIELD ENCOUNTERED (AVLCR)'@E@@@[CRERR     PRINT     'INVALID LMH
)@@G@@INK FIELD ENCOUNTERED (AVLCR)'@^@@@@          ER        ERR$@[@@@@CR030 MI
)@@G@@@[@@@@.     @G@@@@. OK, THE NODE HAS BEEN VALIDATED (AS MUCH AS REASONABMJ
)@@G@@LE ANYWAY). NOW   @F@@@@. COMPUTE ITS RANK BY LINKING BACK UP TO THE ROOMK
)@@G@@T NODE, AND ADDING@B@@@@. THE RANKS OF THE RIGHT-BRANCHING NODES. @[@@@@ML
)@@G@@.     @E@@@@          LA,U      A3,,A1            . START WITH OUR NODE MM
)@@G@@@E@@@@          LA        A2,RANK,A1        . AND WITH ITS RANK   @[@@@@MN
)@@G@@CR040 @E@@@@          LA        A4,ULINK,A3       . GET THE ANCESTOR    MO
)@@G@@@E@@@@          DSC       A3,36             . A3=FATHER OF A4     @G@@@@MP
)@@G@@          JZ        A3,0,X11          . RETURN IF AT THE TOP (A2=RANK)  MQ
)@@G@@@G@@@@          JE        A4,LLINK,A3 CR040 . LOOP IF NODE IS LEFT-BRANCMR
)@@G@@HING  @G@@@@          AA        A2,RANK,A3        . RIGHT SON - ADD IN TMS
)@@G@@HE RANK     @D@@@@          J         CR040             . LOOP BACK     MT
)@@G@@@#@@@@          END     ___@@@C@0G2<:80@@Z/K@]WF:80@@)/K@]WF:80@]H/K@]WFMU
)@@G@@:80@]I/K@]WF:80@[R/K@]WF*[S@@@*SDFF*@ @ @^          INCLUDE   'AXR$'    MV
)@@G@@@ @ @^          INCLUDE   'JPROC$'  @#@@@           LIBRARY @ @@@^      MW
)@@G@@    INCLUDE   'AVL$DEF' @[@@@^.     @B@@@^. AVL TREE MAINTENAINCE SUBROUMX
)@@G@@TINE PACKAGE@[@@@^.     @G@@@^. DESIGNED AND IMPLEMENTED BY  ALAN K. STEMY
)@@G@@BBENS, UOMCSC SYSTEMS STAFF.  @[@@@^.     @F@@@^. GENERALIZED KEY COMPARMZ
)@@G@@ISON ROUTINE FOR VARIABLE LENGTH KEYS     @#@@@^. USES A1-A5,R1,R2@[@@@^NA
)@@G@@.     @]@ @^AVL$KTEST*  @#@@@           IBANK   @]@@@ AVL$KTEST0* @G@ @^NB
)@@G@@          DS        A1,BKWORD         . SET BKWORD TO A1, SKWORD TO A2  NC
)@@G@@@G@@@           DS        A1,SKWORD         . SET SKWORD TO A1, BKWORD TND
)@@G@@O A2  @D@@@^          LR        R2,KEYSIZ,A2      . NODE KEY SIZE @D@@@^NE
)@@G@@          LR        R1,SKSIZE         . SEARCH KEYSIZE@D@@@^          LXNF
)@@G@@I,U     A1,1              . GET INCREMENTS@B@@@^          LXI,U     A2,1NG
)@@G@@              .   @[@@@^KTLOOP@F@@@^          JGD       R2,KTNXT        NH
)@@G@@  . SKIP IF MORE NODE KEY LEFT@G@@@^          JE,U      A2,,A2 KTEQL    NI
)@@G@@  . IF NO INCR, THEN THEY'RE EQUAL  @F@@@^          LR        R2,R1     NJ
)@@G@@        . COPY OTHER REPEAT COUNT   @I@B@^          LA,U      A2,CMPEXT NK
)@@G@@        . NOW USE THE DEFAULT COMPARISON EXTENSION    @H@C@B          LANL
)@@G@@,U      A2,CMPEXT-(KEY-NODBAS) . THE DEFAULT COMPARISON EXTENSION @H@@@CNM
)@@G@@          LA,U      A2,CMPEXT         . THE DEFAULT COMPARISON EXTENSIONNN
)@@G@@      @G@@@C          AN,U      A2,KEY-NODBAS     . SUBTRACT THE OFFSET NO
)@@G@@USED LATER  @D@@@^          J         KTLOOP            . TRY AGAIN     NP
)@@G@@@[@@@^KTNXT @E@@@^          JGD       R1,KTTST          . IF R1>0, GO CONQ
)@@G@@MPARE @G@@@^          JE,U      A1,,A1 KTEQL      . IF NO INCR, THEN KEYNR
)@@G@@S ARE EQUAL @F@@@^          LR        R1,R2             . COPY OTHER REPNS
)@@G@@EAT COUNT   @E@@@^          LA,U      A1,CMPEXT         . EXTEND WITH THNT
)@@G@@IS GUY@ @@@^. NOW, LET'S COMPARE THE WORDS@[@@@^KTTST @E@ @^          LANU
)@@G@@        A5,,*A2           . GET A WORD FROM NODE@E@@@           LA      NV
)@@G@@  A5,KEY,*A2        . GET A WORD FROM NODE@E@ @^          AN        A5,,NW
)@@G@@*A1           . MINUS SEARCH KEY    @E@A@           AN        A5,KEY,*A1NX
)@@G@@        . MINUS SEARCH KEY    @E@@@A          AN        A5,,*A1         NY
)@@G@@  . MINUS SEARCH KEY    @E@@@^          JZ        A5,KTLOOP         . LONZ
)@@G@@OP UNTIL NOT EQUAL@F@@@^          JC        $+2               . SEARCHKEOA
)@@G@@Y < NODEKEY(A1)   @F@@@^          AX,U      X11,1             . SEARCHKEOB
)@@G@@Y > NODEKEY(A1)   @F@@@^          AX,U      X11,1             . FUDGE REOC
)@@G@@TURN ACCORDINGLY  @D@@@^. AHH, NO MORE PARLAYING, 'TIS TIME FOR THE HEMLOD
)@@G@@OCK.. @[@@@^KTEQL @D@ @^          DL        A1,BKWORD         . RESTORE OE
)@@G@@A1,A2 @D@@@           DL        A1,SKWORD         . RESTORE A1,A2 @E@@@^OF
)@@G@@          J         0,X11             . RETURN WITH RESULTS @D@@@^      OG
)@@G@@    END                         . OF AVL$KTEST  ___@@@/K@^1+C@K@[GC8@^:NOH
)@@G@@%8K@@[C8@^:-C@)@@G&;)@@[C80^D8&;0@@[N8K@@DM#\)@@9!D@@]9(G@@D9!D@@A9(G@@FOI
)@@G@@*[S@@[*SDFF*@E@@@@CDQD))E-2G(>^[HGD(H14G(,GD,GT>^[NI(+IL\I(4HD,G*)E[-GT:OJ
)@@G@@GD$G*)@#@@@@D9KE-DD9I^[M -JD0)@#@@@@D9KE-DD9I^[  -JD0)@#@@@@D9KE-DD9I^[AOK
)@@G@@ -JD0)@]@@@@ETKCD#C*)AK2@G@@@@CT D1OC(M^[[E1G^[OIL>G*)D(-HD,I->H1-H1<G*)OL
)@@G@@ET5GL2H95I-(H1>^[KGD<HT-G9>^@)@]@@@@ETKCD#C*)^@)@D@@@@CT D1OC(M^[^G(3HD$OM
)@@G@@H1>G))GD,G))DD!I[?G(!G(,I->G))GL9^@)@]@@@@ETKCD#C*)^@)@G@@@@CT D1OC(M^[[ON
)@@G@@H--H0)DS,^[NI->GL+G(,IS?^[PD9HCTNCS)ET9IT4G(!IS)ET4GD&G0)^@)@^@@@@ADDH14OO
)@@G@@IL\G-5GT4HD\H0,^@)@L@@@@^[OH[>IT>^[-IL>^[-^[3G(4^[\G0)IL\I(4HD,G(3^[4H[-OP
)@@G@@I))I[>IL&H92H*)HD,IT>IL4HD\H0?^[2G(4IL>HD6GD? ))GD,G))@K@@@@^[=G(?G(4HD\OQ
)@@G@@H0)H9&^[=GD4GC)H(-HD,I--HD,G(=^[(H0)GD,^[[E1G^[4IL>G*,^[[H0)CDQD))I-2G(>OR
)@@G@@^[(IS)GC)^@)@K@@@@^[3I[>GT(GD?^[<GD3G*)H9&^[-^[+GD?GD,GT>G))GL(H1-IL9^[4OS
)@@G@@IL>G*?^[-IS)G->IT<IL(GL>G))GL9^[B 1H 0)^@)@K@@@@^[[G->H-3H9, (QG(?IT:HC?OT
)@@G@@^[-H1=^[  1H 0)D--H1=HD3^[VC-JDTGCD^FC)CDFCD^C(HDD[^[ICDPDS)ETNETM^@1A)6OU
)@@G@@@L@@@@^@*AC9A02 C?^@2A03 *2A06BS)C(,G9?HD3H@)I-2GD,IT?GD4HD\H0)HD,^[NH96OV
)@@G@@HD>I))D(-I-*^@3 ))AC2A*9 *1AK6ATX 0)@L@@@@^[OH[>HD2^[!G(4H[\G))H1>I1>IK)OW
)@@G@@I(3G(3^[!H92G*)I-*GD,^[\IL=G(2^[?H9$^[,^[\I[>IL-I-(H9,IS)I-\^[3G(-IL<H@)OX
)@@G@@@C@@@@^[4H[>^[4IL>G*?^[\IK)HD,IT>IL4^[-H0)HD4G(! 0)^@)@]@@@@ETKCD#C*)^@)OY
)@@G@@@L@@@@^[OH[>^[[E1G^[2H95I-(H1>IS)I[2H96HD=G*)I-*G*)GD+HD?HD4JC)I-\^[5IT>OZ
)@@G@@^[4H[>^[4IL>G*)I-\^[\IL$GD,HD'G*)^@)@L@@@@^[(I->H(3^[(H0)GD,^[-IT<G(,G-(PA
)@@G@@H1$^[\IL=G(2^[\G0)HT>JC)G1(G(?G-3BS)H(\IL>H96G(2 ))I-*G*)CDQD))I-2G(>^@)PB
)@@G@@@K@@@@^[!GD9^[+G*)I(3G(=^[4H8)IL>I[2G(3G(,I))GC)H-(H1>GD2^[?HD3I)?^[7HD4PC
)@@G@@H[\I(4^[4H[>^[=IL-I9+GD<HT3^@)@J@@@@^[(H1*G(2G(,I))I-\^[?HD,G(-IK)H-(IT4PD
)@@G@@IS,^@)DD4G(!IS)H(-JC)GL>^[(H13G(2I->G))H92^[=G(?G(4G(=@K@@@@^[2GD0HD=H-9PE
)@@G@@^@*H96G(2GT\H((H1$^[4H[>^[0IL\GL?G(!IS)H9&^[3G(1I(>H14HD-H))GD?H-\GT-I-(PF
)@@G@@H9, C?^[-H1=@J@@@@^[2GD,G-\H*)GD<GT>IT3G(3^[!GD9^[+G*)I[>IL&H92H(>G))IL-PG
)@@G@@I[(G-?JC) [\I1>IL<H9!HD,G8)I-*G*)^@)@K@@@@^[=HD&G1(GT5H-4JC)H9&^[?HD,HT>PH
)@@G@@G))GD?H-\GT-I-(H9, C,^[OH[>^[4IL>G*)H(-JC)GL>^[5IT>G))I-\^[\IL=G(2@K@@@@PI
)@@G@@^[(I->H(3^[+GD3G(=^[\H0)HT>JD3^[-H1=^[4H[>H0)IL>I-2G((I1>^[4H[>H*)HD,^[-PJ
)@@G@@^[2GD,G-\H*)GD<GT>IT3^@)@J@@@@^[&GD3H[(H9,^@*G($BK)E[>IL&H92H*)GC)I[2G(\PK
)@@G@@IL=G(2^[4IL-I1>IL3GD?^[\I1>IK)I-*G*)I-2G(> C,^@)@G@@@@^[NI[>GT(G1(GT-H-?PL
)@@G@@JC?^[4H[>^[\I[>IL-I-(H9,IS)I[2H96HD=G(=^[&H92^[-IL>BK)@]@@@@ETKCD#C*)^@)PM
)@@G@@@#@@@@^@1 C)C1(H1=BK)^@)@D@@@@^@)^@)GC(^[-H0)HD4G(!^[*GD6HD,G8)GC)G9(I1>PN
)@@G@@H0)HT>JC)^@)@B@@@@^@)^@)GK(^[4H[>^[:I-*^[(I->H*?^[$HD6G(,^[:@]@@@@ETKCD#PO
)@@G@@C*)^@)@#@@@@^@2 C)DD,IT>IL4BK)@D@@@@^@)^@)GC(^[-H0)HD4G(!^[*GD6HD,G8)GC)PP
)@@G@@G9(I1>H0)HT>JC)^@)@F@@@@^@)^@)GK(^[-H0)HD4G(!^[(H0)I-*G*)HT4H@)I[\IT(I-(PQ
)@@G@@H9, ))G9(I1>H0)HS)@]@@@@ETKCD#C*)^@)@#@@@@^@3 C)C->H->I->BK)@D@@@@^@)^@)PR
)@@G@@GC(^[-H0)HD4G(!^[*GD6HD,G8)GC)G9(I1>H0)HT>JC)^@)@B@@@@^@)^@)GK(^[4H[>^[:PS
)@@G@@I-*^[(I->H*?^[$HD6G(,^[:@C@@@@^@)^@)GS(^[-^[,H9=G*?^[$HD6G(,^[(I-3^[-G-=PT
)@@G@@IL>IT3@]@@@@ETKCD#C*)^@)@I@@@@^@4 C)CT\H(0I(4G*)I-*G*)I[\IT(I-(H9,^[\G0)PU
)@@G@@GD,^[(I->H*?^[$HD6G(,^[(I-3^[-G-=IL>IT3^@)@]@@@@ETKCD#C*)^@)@J@@@@^@5 C)PV
)@@G@@E-2GD6G(2IT>^[4H[>^[[E1G^[4IL>G*)HD,^[-H19^[\G0)IT(J@)I-9I[>IS)H9&^[4IL-PW
)@@G@@I1>IL3GD?IS'@I@@@@^@)^@)GC(^[0IL>H92G->IK)^@! *)I1(IT(I))IL\H94 ))H-(H1:PX
)@@G@@^[?G(&I)?^[?HD,HS)IL(G9*I))^@)@I@@@@^@)^@)GK(^[(H1\IL=G(2^@)^@! *)H-(H1:PY
)@@G@@^[?G(&I)?^[6HD3HD4^[2H9\I)?^[?HD,HS)IL(G9*I))^@)@I@@@@^@)^@)GS(^[0H93I-\PZ
)@@G@@IL=G(2^@! *)H-(H1:^[?G(&I)?^[?HD,HS)IL(G9*I)?^[6HD3HD4^[2H9\I))^@)@K@@@@QA
)@@G@@^@)^@)G)(^[2G(6G(2IT>^[0IL>H92G->IK)^@! *)I1(IT(I))IL\H94 ))H-(H1:^[2HD$QB
)@@G@@H[4 ))H-(H1:^[?G(&I))^@)@K@@@@^@)^@)G*(^[2G(6G(2IT>^[(H1\IL=G(2^@)^@! *)QC
)@@G@@H-(H1:^[2HD$H[4 ))I1(IT(I))IL\H94 ))H-(H1:^[?G(&I))^@)@K@@@@^@)^@)G0(^[2QD
)@@G@@G(6G(2IT>^[0H93I-\IL=G(2^@! *)H-(H1:^[2HD$H[4 ))H-(H1:^[?G(&I)?^[6HD3HD4QE
)@@G@@^[2H9\I))^@)@]@@@@ETKCD#C*)^@)@A@@@@^@6 C)C-(IT0H--JC)I-*G*)CDQD))I-2G(>QF
)@@G@@@]@@@@ETKCD#C*)^@)@ @@@@AD#GD?H-(H1$^[NG(1I(>H1<G(3 0)@M@@@@^[[H-?^[\G0)QG
)@@G@@I-*G*)IL\I(4HD,G(3^[-IL>^[<GD?H->G))I9(I-*^[SAC1 ))GD,G))I(3G*)H9,H-9^[4QH
)@@G@@H[>^[!HD,H92^[3G(4^[\G0)@N@@@@^[2G($HD3I->IL3 0)^[OH[>^[2H95I-(H1>IS)GD2QI
)@@G@@G*)HD+GD,HS)IL>G(,I-2GD,I)?^[+I(4^[*GD6G*)GC)G-+GD,HS)IT\^[-IL>^[,H94^@)QJ
)@@G@@@B@@@@^[!I(?I-( (-GT4HD6HD4JC)IL>G(,I-2GD,I),^@)@ @@@@ALDH13G(2I-(H9,^[MQK
)@@G@@H95I-(H1>IS)@B@@@@AT[E1GDDF^@!^[DH13G(2I-(H9,^[+JC)DT>JC)^@)@]@@@@ETKCD#QL
)@@G@@C*)^@)@G@@@@^@)^@)^@)^@)^[GCC)^@)^@)^@)^[[AC? @<I92G-3^[(H0)HT>JC?^[,G(7QM
)@@G@@H1\G-> C)^@)@B@@@@^@)^@)^@)^@)^[GCC?E*)^@)^@)^[[A@?GD6H-0HT4@H@@@@^@)^@)QN
)@@G@@^@)^@)^[GD(E^@)^@)^@)^[SAC1 -[E1GDDF^@)^@)^@)^@)^@,^[DH13G(2I))HT>JC)^@)QO
)@@G@@@]@@@@ETKCD#C*)^@)@L@@@@^[PI[\H0)IL>I-5IL,^[[AK.A@)HD&^[,H9=G*) [[AC(^[(QP
)@@G@@H13G(2I->G)?^[\I-*G(2I9(IT>^[[AK)B*)GD=G-2G(3IS)H9&^@)@E@@@@^[,H9=G*)I9(QQ
)@@G@@I-*^[3GD!G*)HT>JC)I[2G(6HD\I(3H-9^[(H13G(2I->G),@]@@@@ETKCD#C*)^@)@B@@@@QR
)@@G@@AT[E1GDDM^@!^[DH13G(2I-(H9,^[]JC)EL-H1:^@)@]@@@@ETKCD#C*)^@)@E@@@@^@)^@)QS
)@@G@@^@)^@)^[GCC)^@)^@)^@)^[[AC? [2GD,HS?^[,G(7H1\G-> C)^@)@B@@@@^@)^@)^@)^@)QT
)@@G@@^[GCC?E*)^@)^@)^[[A@?GD6H-0HT4@H@@@@^@)^@)^@)^@)^[GD(E^@)^@)^@)^[SAC1 -[QU
)@@G@@E1GDDM^@)^@)^@)^@)^@,^[DH13G(2I))IL-H1:^@)@]@@@@ETKCD#C*)^@)@K@@@@^[PI[\QV
)@@G@@H0)IL>I-5IL,^[[AC.GD=G-2G(3IS)H9&^[,G(7^[,H9=G*,^[DI))HD3^[-H-7GD9IS)HD,QW
)@@G@@IT>IL4G(=^[-IS)^@)@ @@@@^[(H1=HD<GD4G(=^[+JC)IL-H1: 0)@]@@@@ETKCD#C*)^@)QX
)@@G@@@^@@@@ALNG(-IL<H@)EL\I(4HD,G(3@A@@@@AT[E1GETF^@!^[NG(-IL<H@)CL9^[FG(9^@)QY
)@@G@@@]@@@@ETKCD#C*)^@)@G@@@@^@)^@)^@)^@)^[GCC)^@)^@)^@)^[[AC? @<I92G-3^[(H0)QZ
)@@G@@HT>JC?^[:G(9GD=G-2 C)^@)@B@@@@^@)^@)^@)^@)^[GCC?E*)^@)^@)^[[A@?GD6H-0HT4RA
)@@G@@@H@@@@^@)^@)^@)^@)^[GD(E^@)^@)^@)^[SAC1 -[E1GETF^@)^@)^@)^@)^@,^[NG(-IL<RB
)@@G@@H@)HT>JC)^@)@]@@@@ETKCD#C*)^@)@I@@@@^[PI[\H0)IL>I-5IL,^[[AK.GD=G-2G(3IS)RC
)@@G@@H9&^[,H9=G*?^[\IK)JL>IL\^[(G0)H1\I))G1\I(,G),^@)@]@@@@ETKCD#C*)^@)@A@@@@RD
)@@G@@AT[E1GETM^@!^[NG(-IL<H@)CL9^[MGD,HS)@]@@@@ETKCD#C*)^@)@C@@@@^@)^@)^@)^@)RE
)@@G@@^[GCC?E*)^@)^@)^[[AC?IL-H1:I1-H-5G*)@B@@@@^@)^@)^@)^@)^[GCC?E*)^@)^@)^[[RF
)@@G@@A@?GD6H-0HT4@H@@@@^@)^@)^@)^@)^[GD(E^@)^@)^@)^[SAC1 -[E1GETM^@)^@)^@)^@)RG
)@@G@@^@,^[NG(-IL<H@)IL-H1:^@)@]@@@@ETKCD#C*)^@)@L@@@@^[PI[\H0)IL>I-5IL,^[[AK.RH
)@@G@@GD=G-2G(3IS)H9&^[,H9=G*?^[\IK)JL>IL\^[(G0)I1-H-5G*)HD,^[[AC)I9-IS)G92G(-RI
)@@G@@I->IK)@E@@@@^[4H[-H0)I-*G*)H15H(+G(2^[\G0)H1\G->IS)HD,^[4H[>^[4IL>G*,^@)RJ
)@@G@@@]@@@@ETKCD#C*)^@)@ @@@@AL^G(?G(4HD\H0)EL\I(4HD,G(3^@)@A@@@@AT[E1GC-F^@!RK
)@@G@@^[^G(?G(4HD\H0)CL9^[FG(9@]@@@@ETKCD#C*)^@)@G@@@@^@)^@)^@)^@)^[GCC)^@)^@)RL
)@@G@@^@)^[[AC? @<I92G-3^[(H0)HT>JC?^[:G(9GD=G-2 C)^@)@B@@@@^@)^@)^@)^@)^[GCC?RM
)@@G@@E*)^@)^@)^[[A@?GD6H-0HT4@H@@@@^@)^@)^@)^@)^[GD(E^@)^@)^@)^[SAC1 -[E1GC-FRN
)@@G@@^@)^@)^@)^@)^@,^[^G(?G(4G*)HT>JC)^@)@]@@@@ETKCD#C*)^@)@L@@@@^[PI[\H0)IL>RO
)@@G@@I-5IL,^[[AK.GD=G-2G(3IS)H9&^[,H9=G*)G->H->I->G)?^[\IK)JL>IL\^[(G0)HT>JC)RP
)@@G@@H1\I))G1\I(,G))^@)@]@@@@ETKCD#C*)^@)@B@@@@AT[E1GC-M^@!^[^G(?G(4HD\H0)CL9RQ
)@@G@@^[MGD,HS)^@)@]@@@@ETKCD#C*)^@)@C@@@@^@)^@)^@)^@)^[GCC?E*)^@)^@)^[[AC?IL-RR
)@@G@@H1:I1-H-5G*)@B@@@@^@)^@)^@)^@)^[GCC?E*)^@)^@)^[[A@?GD6H-0HT4@H@@@@^@)^@)RS
)@@G@@^@)^@)^[GD(E^@)^@)^@)^[SAC1 -[E1GC-M^@)^@)^@)^@)^@,^[^G(?G(4G*)IL-H1:^@)RT
)@@G@@@]@@@@ETKCD#C*)^@)@J@@@@^[PI[\H0)IL>I-5IL,^[[AK.GD=G-2G(3IS)H9&^[,H9=G*)RU
)@@G@@G->H->I->G)?^[\IK)JL>IL\^[(G0)IL-H1:^[7GD3@G@@@@^[$IL>GD4G(2^[4H[-H0)I-*RV
)@@G@@G*)H15H(+G(2^[\G0)H1\G->IS)HD,^[4H[>^[4IL>G*,^@)@]@@@@ETKCD#C*)^@)@B@@@@RW
)@@G@@AT[E1GC-I^@!^[^G(?G(4HD\H0)CL9^[IH9=G*)^@)@]@@@@ETKCD#C*)^@)@C@@@@^@)^@)RX
)@@G@@^@)^@)^[GCC?E*)^@)^@)^[[AC?H1\G->GD=G-2^@)@B@@@@^@)^@)^@)^@)^[GCC?E*)^@)RY
)@@G@@^@)^[[A@?GD6H-0HT4@H@@@@^@)^@)^@)^@)^[GD(E^@)^@)^@)^[SAC1 -[E1GC-I^@)^@)RZ
)@@G@@^@)^@)^@,^[^G(?G(4G*)H1\G->^@)@]@@@@ETKCD#C*)^@)@O@@@@^[PI[\H0)IL>I-5IL,SA
)@@G@@ ))CC2^[*GD3^[4H[>^[-G-=IL>IT3^[\G0)I-*G*)H1\G->^[=G(?G(4G(= 0)^[DG0)I-*SB
)@@G@@G*)H1\G->^[-G-=IL>IT3^[$HD6G(,@G@@@@^[(H0)CC1^[(IS)H1\I))I1-H-(G)?^[-H0)SC
)@@G@@C(MEK=^[>IL2H92^[7HD?H))IL>IT5H-4 0)@]@@@@ETKCD#C*)^@)@B@@@@AL[E1GCTM^@!SD
)@@G@@^[#H9!I[5I->^[4H[>^[MGD,HS)^@)@]@@@@ETKCD#C*)^@)@C@@@@^@)^@)^@)^@)^[GCC?SE
)@@G@@E*)^@)^@)^[[AC?H1\G->GD=G-2^@)@B@@@@^@)^@)^@)^@)^[GCC?E*)^@)^@)^[[A@?GD6SF
)@@G@@H-0HT4@I@@@@^@)^@)^@)^@)^[GD(E^@)^@)^@)^[SAC1 -[E1GCTM^@)^@)^@)^@)^@,^[#SG
)@@G@@H9!I[5I->^[,H9=G*)IL-H1:@]@@@@ETKCD#C*)^@)@M@@@@^[PI[\H0)IL>I-5IL, ))CC2SH
)@@G@@^[*GD3^[4H[>^[2GD,HS)H9&^[4H[>^[$HD6G(,^[,H9=G*,^@)DD&^[4H[>^[,H9=G*)GD=SI
)@@G@@G-2G(3IS)HD3@E@@@@^[,H94^[6GD?HD= ))GD,^[ ELM^))G(2IL\IK)I9(H-?^[2G(3I(?SJ
)@@G@@I),^@)@]@@@@ETKCD#C*)^@)@C@@@@AL[E1GE-MCC) *)E-2GD6G(2IT-H))D9&^[OH[>^[OSK
)@@G@@IL>G*)@]@@@@ETKCD#C*)^@)@G@@@@^@)^@)^@)^@)^[GCC)^@)^@)^@)^[[A@? [4IL-I1>SL
)@@G@@IL3GD?HD,G->J@?IL\H94H1\G-> C)@G@@@@^@)^@)^@)^@)^[GD(E^@)^@)^@)^[SAC1 -[SM
)@@G@@E1GE-MCC)^@)^@)^@)^@,^[OIL-I1>IL3G*)@D@@@@^@)^@)^@)^@)^@/I-2GD6G(2IT-H))SN
)@@G@@GT\H(0H->I->^[>J[(I)"^@)@A@@@@^@)^@)^@)^@)^@/H1\IL!GD?^[2G(4I(2H0"@]@@@@SO
)@@G@@ETKCD#C*)^@)@K@@@@^[PI[\H0)IL>I-5IL,^[[A@)H[-IS)G1(IL3I))H1\G->^[(H0)I-*SP
)@@G@@G*)IT>ID5G(,GT>^[-GT<H92G-(H1$^[4H8)I-*G*)@L@@@@^[=G(3HD2G(=^[4IL-I1>IL3SQ
)@@G@@GD? ))GD3^[(H1=HD<GD4G(=^[+JC)I-*G*)I-2GD6G(2IT-H))HD,G->J@,^[OH[>^[6GD?SR
)@@G@@I(>^@)@L@@@@^[(H0)CC0^[!I(3I))GL>^[5IT>G))H9,^[4H[>^[3I(+IT>ID5G(,I))GT-SS
)@@G@@H-?^[4H8)CDQD-OEL[^[4H8)H9+I--HD,^[4H[>^@)@L@@@@^[,G(8I))H1\G->^[(H0)I-*ST
)@@G@@G*)IT>ID5G(,GT> 0)CD?IT\ ))ES3^[\G0)CC0^[7HD?H))GT\H14GD(H0)I-*G*)G->I[4SU
)@@G@@H@?^@)@L@@@@^[\IL(G9(H0)JL>IL\ ))H9&^[4H[>^[,H9=G*)GD=G-2G(3IS)IL>I-5IL,SV
)@@G@@G(=^[(H0)D@2^[\G0)CC0 0)^[OH[>^[2H9\I))^@)@J@@@@^[,H9=G*)I9(H-?^[+G*)GD4SW
)@@G@@^[=G(0I-*^['G(2H8?^[(I-3^[4I9\^[3H9,IS)GD4^[=G(0I-*^[\H1> 0)^[OH[>@J@@@@SX
)@@G@@^[<H9!I[?G(4G*)G(8HD4^[(IS)I--HT>H0)I9*G(,^[4H[>IL>^[-IL>^[,H8)H(\IL>^[,SY
)@@G@@H9=G(3^[(H0)I-*G*)@#@@@@^[4IL-I1>IL3GD? 0)@]@@@@ETKCD#C*)^@)@C@@@@AL[E1GSZ
)@@G@@C-NE@) *)C-(IT0H--JC)D9&^[OH[>^[OIL>G*)^@)@]@@@@ETKCD#C*)^@)@B@@@@^@)^@)TA
)@@G@@^@)^@)^[GCC?E*)^@)^@)^[[A@?I[:I))^@)@G@@@@^@)^@)^@)^@)^[GD(E^@)^@)^@)^[STB
)@@G@@AC1 -[E1GC-NE@)^@)^@)^@)^@,^[^HD3I[?GD9^@)@]@@@@ETKCD#C*)^@)@C@@@@^[7H[>TC
)@@G@@IL>^[0HT4^[(IS)GC)I-7H8)I9\IL=^[0GD<HT>I)'@]@@@@ETKCD#C*)^@)@B@@@@E-[CLGTD
)@@G@@C*)CDQD)=^[^DDNE[GCDT^[KCD#DT E),^@)@K@@@@^@! *! *! *! *! *! *! *! *! *!TE
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!^@)@K@@@@TF
)@@G@@^@'^[DD1^C(IE))^@'^[]EL#D9GD0)^@'^@)D-DD1 ES)^@'^@)^@)^@)^@)^@)ELJD9OD1JTG
)@@G@@C- ^@)^@)^@)^@)^@)^@'^@)@K@@@@^@! *! *! *! *! *! *! *! *! *! *! *! *! *!TH
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!^@)@K@@@@^@'^@)^@)^@)TI
)@@G@@^@)^@)^[ C-DE-ME-I^@)^@)^@)^@)^@)^@'^@)^@)^@)^@)^@)^[JE(OELOD0)^@)^@)^@)TJ
)@@G@@^@)^@)^@'^@)@K@@@@^@! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!TK
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *!^@)@[@@@@C(IC))@]@@@@ETKCD#C*)^@)TL
)@@G@@@K@@@@^[OH[>^[=HD3I[?GD9^[2H95I-(H1>^[(IS)GC)H1\H12G(>H14IL-H14^[3I(+IL\TM
)@@G@@I(4HD,G*?^[7H[(GT*^[+I((H-=IS)@L@@@@^[(H(-G9>IS)G92GD0H[(GT-H-?JC)G-(IT0TN
)@@G@@H--JD(H1$^[4H[>^[4IL>G*,^[OH[>^[$IL-I[*^[!GD9^[+G*)I--HD?H92G(=^@)@K@@@@TO
)@@G@@^[+JC)GD=HL5IT4HD,G8)I-*G*)I-*IL>G*)I[-IL-H(>I->IL3^[0GD3IT>G))HD,^[CAC)TP
)@@G@@H9&^[[A@,^@)DDIC- D1O^@)@K@@@@^[(H1=HD<GD4G(3^[4H[>^[,I(!GL>IK)H9&^[<H9?TQ
)@@G@@I(!H13^[&IL\H*)I-*G*)GL>G9(H1,HD,G8)H9&^[-^[,H9=G*)I-\@K@@@@^[4H[>^[+G($TR
)@@G@@HD,H1(H1$^[\G0)HD4IS)IT\H13 0)^[]EL#D9GD0)HD,G-(GT-I->IS)HD,^[7H[-I))GT\TS
)@@G@@H-5H(, ))^@)@J@@@@^[2G(?GD4HD6G*)I-\^[4H[>^[+G($HD,H1(H1$^[\G0)I-*G*)G1-TT
)@@G@@I-*G(2^[,H9=G*?^[4H[>^[6G(2I-(GT-H))@J@@@@^[+IL-H1<H[>IS)I-\^[(I-3^[3H9,TU
)@@G@@IS)GL>G9(H0,^@)D-DD1 ES)HD,G-(GT-I->IS)I-*G*)H15H(+G(2^[\G0)@J@@@@^[*H92TV
)@@G@@HD'H9,I--H))H-(H1>IS)I-\^[+G*)I[?GD<G(=^[+G(4I9>G(,^[4H[>^[=HD3I[?GD9G(=TW
)@@G@@^[,H9=G(3 0)@]@@@@ETKCD#C*)^@)@J@@@@^[MD9JE-ID9^C*)HD3^[4H[>^[2H9\I))H1\TX
)@@G@@G->^[\G0)I-*G*)I-2G(>^@*H92^[3I(+I-2G(> C)I-\^[+G*)^@)@#@@@@^[=HD3I[?GD9TY
)@@G@@G(= 0)@]@@@@ETKCD#C*)^@)@K@@@@^[ C-DE-ME-I^[(IS)GC)F@1AC)IT5GL2H95I-(H1>TZ
)@@G@@^[7H[(GT*^[(IS)G9(I1>H0)GT\H14IL\H))I9(I-*^[-^[,H9=G*)@L@@@@^[-G-=IL>IT3UA
)@@G@@^[(H0)CC0^[4H8)G(=HD4^[7H[-I->I1>IK)HD,G1\IL!GD4HD\H0)HD,^[4H[>^[,H9=G*)UB
)@@G@@HD3^[=G(3HD2G(=^@)@L@@@@^[(H0)I-*G*)H95I-0I(4^[(H(-G9> 0)E-*G*)H95I-0I(4UC
)@@G@@^[(H(-G9>IS)GD2G*)GT\H13I-2I(<I->G))I9(I-*^[ C-DE)=^@)@L@@@@^[(H0)CDNCTDUD
)@@G@@DC)H95I-0I(4^[-H1=^[[ET#DDD^[(H10I(4^[!H9=G(3^[(H0)G(&G1>GT4 ))I9(I-*^[4UE
)@@G@@H[>^[=G(&GD5H-4^@)@K@@@@^[AHD>H-=GD4GC\CDNCTDDC)I-2GD,IT?GD4HD\H0)I--GL?UF
)@@G@@G*)GD=G-2G(3IS)HD,^[4H[>^[ C-DE)=^[0GD<HT>I)?^@)@L@@@@^[3H[\I(?G))I-2GD,UG
)@@G@@IT?GD4HD\H0)GL>^[=G(3HD2G(= 0)DD&^[4H[>^[5IT>IK)IT5GL2H95I-(H1>^[,G(>G))UH
)@@G@@I-\^[>G-(I))@L@@@@^[AHD>H-=GD4GC)IT\I(2GT> ))I-*G*)G1?GD$^@$CDNDC$^[(H0)UI
)@@G@@I-*G*)C(^DDO^))I[-GT:G(4^[0H9(H14G(=^[4H8)GL9^@)@K@@@@^[SAC)IT*H95H-=^[+UJ
)@@G@@G*)IT>I))I-\^@0^[-H1=^[2G(3G(4^[4H8)AC)I9*G(,^[&HD,HD3H[>G),^@)E9*G(,^[$UK
)@@G@@HD6G(,@L@@@@^[<H9,I-2H9? ))I-*G*)C(^DDO^))I[-GT:G(4^[(IS)H90G(,G(= ))I9(UL
)@@G@@I-*^[SAC?F@2 ))GD,G))F@3^[3GD6G(=^[(H0)^@)@L@@@@^[4H[>^[0GD<HT>I),^[OH[>UM
)@@G@@^[5IT>IK)IT*H95H-=^[2G(&IL-HD,^[&IL\H*)GT*GD,G9(H1$^[4H[>IT>^[2G($HD3I->UN
)@@G@@IL3^@)@H@@@@^[>J[<G(0I))I(,G->IK)I-*G*)IT5I[>IL6HD3HD\H0)H9&^[4H[>^[ C-DUO
)@@G@@E)=^[2H95I-(H1>IS,@]@@@@ETKCD#C*)^@)@L@@@@^[JE(OELOD0)HD3^[-^[SAC1^[3I(+UP
)@@G@@IL\I(4HD,G*)I9*HD<H@)HD3^[$HD6G(,^[<H9,I-2H9?^[7HD4H@)GD,^[[E[MDDIE)=^@)UQ
)@@G@@@L@@@@^[<H9,I-2H9?^[7H92G)?^[&H92^[-H0)CDNCTDDC)HD!GD$G*?^[(H0)CC0 0)E-*UR
)@@G@@HD3^[>H1-GL?G(3^[4H[>^[5IT>IK)I-\^@)@I@@@@^[\I(4I[5I))I-*G*)G92GD0H@)H9&US
)@@G@@^[4H[>^[4IL>G*)I-\^[7H[>IL>I1>IK)H[>^[=G(3HD2G(3 0)^@)@]@@@@ETKCD#C*)^@)UT
)@@G@@@J@@@@^[]H94H@)IL\I(4HD,G(3^[!I(3I))IL>I-5IL,^[4H8)A@?F@1AC)I-\^[<H9!I[?UU
)@@G@@G(4G*)I-*G*)G92GD0H@,^@)@]@@@@ETKCD#C*)^@)@#@@@@ADKIL\GT>G-5IL>IS,@L@@@@UV
)@@G@@^[[H-?^[\G0)I-*G*)GD+H96G*)GT-H-?HD,G8)IT>ID5G(,GT>IS)H[-I1>^[<H92IL>IT0UW
)@@G@@H9,G-(H1$^[0IL\GS)GT-H-?IS'^@)@]@@@@ETKCD#C*)^@)@F@@@@^@)^@)^@)^@)^[[E1GUX
)@@G@@DDF^@)^@)^[-I1?I[:I))HT>JD?G(, -,H9=G(-G-=IK)^@)@E@@@@^@)^@)^@)^@)^[[E1GUY
)@@G@@DDM^@)^@)^[-I1?I[:I))IL-H1: -,H9=G(-G-=IK)@E@@@@^@)^@)^@)^@)^[[E1GETF^@)UZ
)@@G@@^@)^[-I1?I[:I))HT>JD?G(, -:G(9GD=G-2@C@@@@^@)^@)^@)^@)^[[E1GETM^@)^@)^[-VA
)@@G@@I1?I[:I))IL-H1:^@)@E@@@@^@)^@)^@)^@)^[[E1GC-F^@)^@)^[-I1?I[:I))HT>JD?G(,VB
)@@G@@ -:G(9GD=G-2@C@@@@^@)^@)^@)^@)^[[E1GC-M^@)^@)^[-I1?I[:I))IL-H1:^@)@C@@@@VC
)@@G@@^@)^@)^@)^@)^[[E1GC-I^@)^@)^[-I1?I[:I))H1\G->^@)@C@@@@^@)^@)^@)^@)^[[E1GVD
)@@G@@CTM^@)^@)^[-I1?I[:I))H1\G->^@)@G@@@@^@)^@)^@)^@)^[[E1GE-MCC)^@)^@*I-2GD6VE
)@@G@@G(2IT-H))HD,G->J@?IL\H94H1\G-> C)^@)@C@@@@^@)^@)^@)^@)^[[E1GC-NE@)^@)^[=VF
)@@G@@HD3I[?GD9I[:I))^@)@]@@@@ETKCD#C*)^@)@J@@@@^[DG0)GD,JC)G9(I1>H0)G1(G(?G)?VG
)@@G@@^[3I(+G1(G(?G))HD3^[!HD3IT(H1$ ))I-*G*)GT\IL2G(3I[\H1=HD,G8)@K@@@@^[2G($VH
)@@G@@HD3I->IK)H-\GD=IS)GD2G*)IT5I[0IL>IT3G(= 0)CD=G-2G(3IS)IT0G(<HD&HD<GD4HD\VI
)@@G@@H13^[!GD9^[+G*)^@)@L@@@@^[ EDPC0$G(=^[(I->H(3 ))GD,G))H1\G->GD=G-2 ))HT>VJ
)@@G@@JD-G-=IK?^[2H9\I-,H9=G*?^[-I1:I[:I))H(-JC)GD?H))GL>^@)@L@@@@^[<H9!I[?G(4VK
)@@G@@G*)I(&HD>H-=^[3I[>GT(G1(GT-I-(H9,IS)I9(I-*^[(H1=HD2G(<I-(H9, ))J[2G($IS?VL
)@@G@@^[0GD2I-7H92G-3 ))@]@@@@^[>I-< 0)^@)@]@@@@ETKCD#C*)^@)@I@@@@^[IH94G*)I-*VM
)@@G@@GD4^[4H[>^[3I(+G1(G(?G-3^[7H[(GT*^[3H[\I(?G))GT\H14GD(H0)GD=G-2G(3IS)^@)VN
)@@G@@@L@@@@^[3I[>GT(G1(GT-I-(H9,IS)GD2G*)G9>H1>IL-I->G))HD,^@$H-\GD=^[(H(!G(=VO
)@@G@@HD-I->^8)HD,IT4IL5GT4HD\H13 0)E-*G*)@K@@@@^[0IL>IT>H1<G*)H9&^[-H19^[8^[2VP
)@@G@@G($ ))I[-IL4I9\IL=^[=G(3HD$H1-I-\IK?^[(H1<IL>H(>H14^[+HD4 ))H92^@)@L@@@@VQ
)@@G@@^[(H1=HD2G(<I-(H9,^[+HD4 ))HD,^[>HD4H[>IK)I-*G*)I[2H9<^[<GD?H))IT0G(<HD&VR
)@@G@@HD<GD4HD\H13^[\IK)HD,^[4H[>^@)@L@@@@^[ EDPC0$G(=^[(I->H*)HD,^[4H[>^[&HD2VS
)@@G@@IT4^[3I[>GT(G1(GT-I-(H9,^[7HD?H))HD,H[(GL(I))I-*G*)G->G1-I(?I))^@)@B@@@@VT
)@@G@@^[0GD2I-7H92G))G->IT(G9,GD4H92^[\G0)^9P^8,@]@@@@ETKCD#C*)^@)@#@@@@^[ J[-VU
)@@G@@H(0H->IS'^@)@]@@@@ETKCD#C*)^@)@A@@@@^@)^@)^@)^@)^[[E1GC-NE@)^@)^@)I[:I))VV
)@@G@@@]@@@@ETKCD#C*)^@)@#@@@@^[$G(,G(2GD4G(3BK)@]@@@@ETKCD#C*)^@)@B@@@@^@)^@)VW
)@@G@@^@)^@)^[GCC?E*)^@)^@)^[[A@?I[:I))^@)@C@@@@^@)^@)^@)^@)^[GD(E^@)^@)^@)^[SVX
)@@G@@AC1 -[E1GC-NE@)^@)@]@@@@ETKCD#C*)^@)@]@@@@^[7H[(H->^@)@]@@@@ETKCD#C*)^@)VY
)@@G@@@B@@@@^@)^@)^@)^@)^[[E1GC-NE@)^@)^@)^@0 -SB@)^@)@]@@@@ETKCD#C*)^@)@]@@@@VZ
)@@G@@^[<GD5IT>IS'@]@@@@ETKCD#C*)^@)@B@[@@^@)^@)^@)^@)^[GCC)^@)^@)^@)^[[A@?A@?WA
)@@G@@F@8^@)@B@@@[^@)^@)^@)^@)^[GCC?E*)^@)^@)^[[A@?A@?F@8^@)@C@@@@^@)^@)^@)^@)WB
)@@G@@^[GD(E^@)^@)^@)^[SAC1 -[E1GC-NE@)^@)@]@@@@ETKCD#C*)^@)@]@@@@ETKCD#C*)^@)WC
)@@G@@@#@@@@^[>J[-H(0H->IS'^@)@]@@@@ETKCD#C*)^@)@A@@@@^[FG(9H->H0)^[>ID5G0)^@)WD
)@@G@@^@)^@2 )?E*)@]@@@@ETKCD#C*)A@)@A@@@@^[:G(9GD=G-2^[>ID5G0)^@)^@)^@3 -[A@)WE
)@@G@@@]@@@@ETKCD#C*)A@)@A@@@@^[-I1?I[:I))^[>ID5G0)^@)^@)^@0 -SAC)@]@@@@ETKCD#WF
)@@G@@C*)^@)@E@@@@^@)^@)^@)^@)^[[E1GDDF^@)^@)^[-I1?I[:I))HT>JD?G(, -:G(9GD=G-2WG
)@@G@@@]@@@@ETKCD#C*)^@)@^@@@@^[7HD?H))G9>H1>IL-I->BK)@]@@@@ETKCD#C*)^@)@B@[@@WH
)@@G@@^@)^@)^@)^@)^[GCC)^@)^@)^@)^[[AC?AS?CC0^@)@B@@@[^@)^@)^@)^@)^[GCC?E*)^@)WI
)@@G@@^@)^[[AC?AS?CC0^@)@B@@@@^@)^@)^@)^@)^[GF[D^@)^@)^@)^[[AC?AK? -P^@)@B@[@@WJ
)@@G@@^@)^@)^@)^@)^[GCC)^@)^@)^@)^[[A@?A@?F@1^@)@B@@@[^@)^@)^@)^@)^[GCC?E*)^@)WK
)@@G@@^@)^[[A@?A@?F@1^@)@B@@@@^@)^@)^@)^@)^[GD(E^@)^@)^@)^[SAC1 -[E1GDDF@]@@@@WL
)@@G@@ETKCD#C*)^@)@B@@@@^@)^@)^@)^@)^[[E1GC-F^@)^@)^[-I1?I[:I))^@)@]@@@@ETKCD#WM
)@@G@@C*)^@)@ @@@@^[7HD?H))G9>H1>IL-I->^[\H1?JC'@]@@@@ETKCD#C*)^@)@B@[@@^@)^@)WN
)@@G@@^@)^@)^[GCC)^@)^@)^@)^[[A@?A@?F@1^@)@B@@@[^@)^@)^@)^@)^[GCC?E*)^@)^@)^[[WO
)@@G@@A@?A@?F@1^@)@B@@@@^@)^@)^@)^@)^[GD(E^@)^@)^@)^[SAC1 -[E1GC-F@]@@@@ETKCD#WP
)@@G@@C*)^@)@]@@@@^[-H1=BK)^@)@]@@@@ETKCD#C*)^@)@^@@@@^@)^@)^@)^@)^[[E1GC-NE@)WQ
)@@G@@@]@@@@ETKCD#C*)^@)@^@@@@^[7HD?H))G9>I))JD\I*'^@)@]@@@@ETKCD#C*)^@)@C@@@@WR
)@@G@@^@)^@)^@)^@)^[GD(E^@)^@)^@)^[SAC1 -[E1GC-NE@)^@)@]@@@@ETKCD#C*)^@)@ @@@@WS
)@@G@@ADOH[>^[[I1?^))E[-GT:G(4 0)^@)@L@@@@^[OH[>IL>^[-IL>^[4I9\^[7GD9IS)H9&^[<WT
)@@G@@IL>GD4HD,G8)GD,^[-I1?^))I[-GT:G(4BK)E(3G*)CDQD)=E[FE)?^[\IK)HD&^@)@L@@@@WU
)@@G@@^[4H[>IL>^[-IL>^[,H9=G(3^[4H8)GL>^[(H1(I-(GD?HD'G(=^[-H-3H8?^[5IT>^[[E1GWV
)@@G@@^-OEL C*,^[OH[>^[&HD>H-=IS)^@)@K@@@@^[7HD4H[(H0)I-*G*)I[-GT:G(4^[-H1=^[,WW
)@@G@@H9=G(3^[(H0)I-*G*)I-2G(>^[!GD9^[+G*)G->G1(H1>G))G1\IK)I-*G*)@B@@@@^[5IT>WX
)@@G@@IK)GL9^[<GD?H-(H1$^[4H[>^[0IL\GT3BK)@]@@@@ETKCD#C*)^@)@C@@@@^@)^@)^@)^@)WY
)@@G@@^[[E1G^-ADD D-^ES)B-0HT4^[+GD3G*"^@)@C@@@@^@)^@)^@)^@)^[[E1G^-ID9^C(N^@)WZ
)@@G@@B-,H9=G*)GL-IT>B0)@[@@@@^@)^@)@M@@@@^[OH[>^[!H1>H(\H1(GT3^[&H92^[4H[>^[&XA
)@@G@@HD>H-=IS)G->G1(H1>G))GL9^[4H[>IT>^[0IL\GT3^[!GD9^[+G*)G1\I(,G))GL>H-\I8)XB
)@@G@@@H@@@@^[(H0)I-*G*)G->IT<IL(I[4HD\H13^[\G0)I-*G*)CDQD)=^[0GD<HT>I))GD,G))XC
)@@G@@H1\G-> 0)^@)@[@@@@^@)^@)@]@@@@ETKCD#C*)^@)@A@@@@^[OH8)GT2G(-I->^[4H[>^[0XD
)@@G@@GD<HT>I)'^@)@]@@@@ETKCD#C*)^@)@K@@@@^@)^@)^@)^@)^[[E1G^-KDTO^@)^@/IL\H94XE
)@@G@@B0?B-,H1\G->IS"^@/HT>JD3I[>GS" )/HT>JC)GT\H(0GD2GD4H92B0)^@)@]@@@@ETKCD#XF
)@@G@@C*)^@)@L@@@@^@/IL\H94B0)HD3^[4H[>^[(H1(I-(GD?^[2H9\I))H1\G->^[\G0)I-*G*)XG
)@@G@@I-2G(> ))GD,G))^[(G0)I-*G*)I-2G(>^[(IS)^@)@D@@@@^[(H1(I-(GD?H-9^[>H(0I-9XH
)@@G@@ ))IT*H95H-=^[+G*)JL>IL\ 0)^@)@]@@@@ETKCD#C*)^@)@L@@@@^@/D1,H9=G(3B0)HD3XI
)@@G@@^[4H[>^[,I(!GL>IK)H9&^[,H9=G(3^[(H0)I-*G*)I-2G(> 0)^[OH[(IS)I1-H-5G*)HD3XJ
)@@G@@^[0H--GT>G))@L@@@@^[(H14H8)I-*G*)GT\IL2G(3I[\H1=HD,G8)G1(G(?G))I9(I-*HD,XK
)@@G@@^[4H[>^[0GD<HT>I),^@)E-*G*)G->G1-I(?I))I1-H-5G*)@#@@@@^[(IS)JL>IL\ 0)^@)XL
)@@G@@@]@@@@ETKCD#C*)^@)@K@@@@^@/DT>JD3I[>GS"^[!GD9^[+G*)GC)IT4IL(H1$^[\IK)GC)XM
)@@G@@H15H(+G(2 ))H92^[!GD9^[+G*)H9!HD4I->G),^@)DD&^@)@J@@@@^[4H[>IL>^[(IS)H1\XN
)@@G@@^@/HT>JD3I[>GS" ))I-*G*)I[-GT:G(4^[(IS)G9>H1>IL-I->G))IT5GT*^[4H[-I))^@)XO
)@@G@@@L@@@@^[(H13G(2I-(H9,IS)I9(H-?^[+G*)GL-IT>G))I(0H9,^[-^@$IL-H1:^8)IT9IT4XP
)@@G@@G(!^@*HD>BK)DD4G(!IS)I9(H-?^[+G*)^@)@L@@@@^[(H13G(2I->G))GD<GT\IL=HD,G8)XQ
)@@G@@I-\^[-^[5IT>IK!IT0G(<HD&HD>G))H15H(>IL(GS)H92G->IK( 0)DD&^[4H[>IL>^[(IS)XR
)@@G@@@L@@@@^[-^@/HT>JD3I[>GS" ))HD,IT>IL4HD\H13^[7HD?H))GL>^[+GD3G(=^[\H0)HT>XS
)@@G@@JD3^[=G(&HD,G(=^[7HD4H[(H0)I-*G*)^@)@L@@@@^[,H9=G(3 0)B-FG(9IT0G(<B0)H(-XT
)@@G@@JC)I-*G(,^[>HD4H[>IK)GL>^[-^[,I(!GL>IK)HD,G-(GT-I-(H1$^[4H[>^[7H92G))^@)XU
)@@G@@@L@@@@^[3HD'G*)H9&^[4H[>^[:G(9IS)I9(I-*HD,^[4H[>^[,H9=G(3 ))H92^[(I))H(-XV
)@@G@@JC)GL>^[-^[\H1>^[7H92G))IT4IL(H1$^@)@K@@@@^[7H[(GT*^[(IS)I(3G(=^[4H8)G(8XW
)@@G@@I->H1=^[3H[\IL4G(2^[?G(,G94H@)HT>JD3^[7H[>H0)GT\H(0GD2HD,G8)I-*G*)@E@@@@XX
)@@G@@^[6GD2HD-GL?G*)H->H1$I-*^[:G(9IS)I9(I-*HD,^[4H[>^[,H9=G(3 0)@]@@@@ETKCD#XY
)@@G@@C*)^@)@K@@@@^@/DT>JC)GT\H(0GD2GD4H92B0)HD3^[4H[>^[-G-=IL>IT3^[\G0)GC)HT>XZ
)@@G@@JC)GT\H(0GD2HD3H9,^[3I(+IL\I(4HD,G*,@L@@@@^[DG0)H1\I))G9(I1>H0?^[(I))G->YA
)@@G@@G1-I(?I-3^[4H8)GD,^[-I[0IL\I[2HD-I->^[3I(+IL\I(4HD,G*)I-*GD4^[7HD?H))^@)YB
)@@G@@@L@@@@^[<H9!I[-IL>^[4H[>^[:G(9IS,^@)E-*HD3^[&G(-I-5IL>^[-H-?H97IS)I-*G*)YC
)@@G@@I(3G(2^[4H8)G->G1(H1>^[*HD3^[\I9,^@)@L@@@@^[:G(9^[<H9!I[-IL(IT\H0)GD?G9\YD
)@@G@@IL(I-*H*?^[7H[(GT* ))H[\I9>I1>IK?^[!I(3I))H90G(2GD4G*)I(,G->IK)I-*G*)^@)YE
)@@G@@@A@@@@^[&H9?H-\I9(H1$^[2G(3I-2GD(H14IS'^@)@]@@@@ETKCD#C*)^@)@F@@@@^@)^@)YF
)@@G@@^@)^@)^[[AK)B*)GD=G-2G(3IS)H9&^[4H[>^[,H9=G*)I-\^[4G(3I))^@)@E@@@@^@)^@)YG
)@@G@@^@)^@)^[[AC)B*)GD=G-2G(3IS)H9&^[4H[>^[3G(-IL<H@)HT>JC)@E@@@@^@)^@)^@)^@)YH
)@@G@@^[GD(E^@)^@)^@)^[SAC1 )/HT>JC)GT\H(0GD2GD4H92B0)@B@@@@^@)^@)^@)^@)^[VHT>YI
)@@G@@JD3^[-IL>^[>ID5GD?F*)^@)@B@@@@^@)^@)^@)^@)^[VHT>JC*CC1 C)B0)HT>JC*CC2 DXYJ
)@@G@@@B@@@@^@)^@)^@)^@)^[VHT>JC*CC1 C)B))HT>JC*CC2 DX@]@@@@ETKCD#C*)^@)@L@@@@YK
)@@G@@^[IH94G*)I-*GD4^[[AK)I9(H-?^[-G-=IL>IT3^[-^[,H9=G*?^[7H[(GT*^[<H9,I--HD,YL
)@@G@@IS)GC)HT>JC)IT4GD2I-(H1$^[-I))@J@@@@^[7H92G))G1\I(2^[7HD4H[(H0)I-*G*)H1\YM
)@@G@@G-> ))I9*HD?G*)CC1^[-G-=IL>IT3G(3^[-^[3G(-IL<H@)HT>JC)@L@@@@^[=HD2G(<I-?YN
)@@G@@JC;^@0 -[AC)GD,G))AS?CC2^[+H94H@)GD=G-2G(3IS)I-*G*)G1(IL3I))I9\IL=^[\G0)YO
)@@G@@I-*G*)HT>JD3^[4H8)@#@@@@^[<H9!I[-IL> 0)^@)@]@@@@ETKCD#C*)^@)@K@@@@^[MG($YP
)@@G@@HD3I->IL3^[[A)?CC5 -MAC!EK3^[-IL>^[-I1-HD?GD+H->^[&H92^[5IT> ))I9*HD?G*)YQ
)@@G@@CC0 ([AS)H(5IT4^@)@ @@@@^[2G(!GD(H0)I(,GT*GD,G9>G),^@)@]@@@@ETKCD#C*)^@)YR
)@@G@@@A@@@@ALNI--I-(GS)DD,HD4HD-H-(JL-I-(H9, 0)@K@@@@^[RH[>H0)I-*G(2G*)GD2G*)YS
)@@G@@H1\G->IS)I-\^[+G*)HD,GT?I(=G(=^[-IS)I[-IL4^[\G0)I-*G*)HD,HD4HD-H))CDQD)=YT
)@@G@@@M@@@@^[4IL>G*?^[4H[>^[0IL\GS)^9[E1G^-OEL C*$^[3H[\I(?G))GL>^[5IT>G))I-\YU
)@@G@@^[$G(,G(2GD4G*)I-*G*)CDQD)=^[0GD<HT>I),^@)@]@@@@ETKCD#C*)^@)@G@@@@^@)^@)YV
)@@G@@^@)^@)^[[E1G^-OEL C*)^@/HT>JD3I[>GS" )/HT>JC)GT\H(0GD2GD4H92B0)^@)@]@@@@YW
)@@G@@ETKCD#C*)^@)@J@@@@^[OH[(IS)I[2H9<^[>IT4GD+H-(IT*G(3^[4H[>^[0GD<HT>I))H1>YX
)@@G@@GT>IT3GD2JC)I-\^[<GD?H))I-*G*)CDQD)=@K@@@@^[2H95I-(H1>IS,^[DI))GD?IT\^[3YY
)@@G@@G(4IS)I(0^[-IT3G(!GL?JC)I[-IL-H(>I->IL3^[7H[(GT*^[4H[>^[,H9=G*)^@)@L@@@@YZ
)@@G@@^[(H1(I-(GD?HD'GD4HD\H0)IL\I(4HD,G(3^[5IT> 0)^@*E-*G*)I[2H9<^[[E1G^-ADD ZA
)@@G@@D-^ES)H(-JC)GL>^[5IT>G))I-\^@)@E@@@@^[=G(&HD,G*)I-*G*)G1(G(?G-3^[7HD4H[(ZB
)@@G@@H0)I-*G*)I[-GT:G(4 C,^@)@]@@@@ETKCD#C*)^@)@L@@@@^@/DT>JD3I[>GS" )/HT>JC)ZC
)@@G@@GT\H(0GD2GD4H92B0)H(-JC)GL>^[$HD6G(,^[>J[-GT4H-9^[-IS)G->IT<IL(GL>G))G1\ZD
)@@G@@IK)^@)@C@@@@^[4H[>^@$CDQD)=E[FE)$^[0IL\GS) [3G(>^[-GL\I1> C,@]@@@@ETKCD#ZE
)@@G@@C*)^@)@L@@@@^[DG0)GD,JC)IT0G(<HD&HD<GD4HD\H0)GD0I[>GD2IS)H9,^[4H[>^[0IL\ZF
)@@G@@GS)GT-H-? ))I-*G(,^[4H[>^[4IL>G*)I9(H-?^@)@L@@@@^[+G*)GL5HD?I))I(3HD,G8)ZG
)@@G@@IT4IL(H1$^[:G(9^[(H13G(2I-(H9,IS)GD,G))H1\^[0H93HD4HD\H1-H))HD,IT>IL4HD\ZH
)@@G@@H13^@)@L@@@@^[7HD?H))GL>^[-H-?H97G(= 0)^[NHD!HD?GD2H-9 ))HD&^[,H8)IT0G(<ZI
)@@G@@HD&HD<GD4HD\H0)GD0I[>GD2IS?^[4H[>H0)I-*G*)@J@@@@^[4IL>G*)I9(H-?^[+G*)GL5ZJ
)@@G@@HD?I))I(3HD,G8)IL-H1:^[(H13G(2I-(H9,IS)GD,G))H1\^[3I-2HD,G8)HT>JC)@B@@@@ZK
)@@G@@^[(H13G(2I-(H9,IS)I9(H-?^[+G*)GD?H-\I9>G),@]@@@@ETKCD#C*)^@)@L@@@@^[[H19ZL
)@@G@@^[,I(!GL>IK)H9&^[4IL>G(3^[!GD9^[+G*)HD,HD4HD-H-(JL>G))I9(I-*HD,^[-^[$HD6ZM
)@@G@@G(,^[-IT3G(!GL?JC?^[-IS)@L@@@@^[?H9,G8)GD3^[4H[>^[,H9=G*)HD,HD4HD-H-(JL-ZN
)@@G@@I-(H9,IS)G1\IK)GC)G9(I1>H0)I-2G(>^[\GT<I(2^[+G(&H92G*)I-*G*)@A@@@@^[,G(8ZO
)@@G@@I))GT-H-?^[4H8)CDQD)=E-MC(  0)@]@@@@ETKCD#C*)^@)@]@@@@ETKCD#C*)^@)@A@@@@ZP
)@@G@@ALIH9=G*)DD,HD4HD-H-(JL-I-(H9, 0)^@)@]@@@@ETKCD#C*)^@)@I@@@@^@)^@)^@)^@)ZQ
)@@G@@^[[E1G^-DD1DE))^@)B-(H13G(2I-(H9,^[3I[>GS" )/I(3G(2^[(H1&H8"^@) 0, 0)^@)ZR
)@@G@@@]@@@@ETKCD#C*)^@)@K@@@@^[[E1G^-DD1DE))GL5HD?G-3^[,H9=G(3^[\G0)GD4^[?G(-ZS
)@@G@@IT4^[4H[2G(>^[7H92G-3 ))I[2H90G(2H-9^[?HD,HT>G))@L@@@@^[(H14H8)I-*G*)GL-ZT
)@@G@@H--H1<G(=^[[E1G^[4IL>G*)G(3I--GL?HD3H[>G))GL9^[4H[>^[!H93I))IL>GT>H14^[<ZU
)@@G@@GD?H))I-\^@)@#@@@@^[[E1G^-OEL C*,^@)@]@@@@ETKCD#C*)^@)@J@@@@^@/DD,IT>IL4ZV
)@@G@@HD\H0)I[-IL-H(>I->IK"^[(IS)G((I-*G(2^[-^[3I-2HD,G8)HT>JC)H92^[-^[,I(!G(2ZW
)@@G@@HD<^@)@J@@@@^[0H93HD4HD\H0?^[=G(0G(,G-(H1$^[5I[\H0)I9*HD<H@)I-9I[>^[\G0)ZX
)@@G@@I-2G(>^[(IS)GL>HD,G8)GL5HD?I),@]@@@@ETKCD#C*)^@)@K@@@@^[RH[>H0)I-*G*)I[-ZY
)@@G@@IL-H(>I->IK)HD3^[-^[3I-2HD,G8)HT>JC?^[4H[>H0)I-*G*)HT>JC)I9(H-?^[-H-3H8)ZZ
)@@G@@GL>^@)@L@@@@^[$G(,G(2GD4G(=^[(H0)I-*G*)H1\G->^[-G14G(2^[4H[>^[4H[2G(>^[7AA
)@@G@@H92G-3^[\G0)H[>GD=G(2 ))GD,G))I9(H-?^[+G*)@L@@@@^[HCDS @/HT>JD3HD'G*" ))AB
)@@G@@^-ND)*B-:G(9B0( 8\ @=DD]DDOES*B-:G(9B0( K%A@1A@0 *"A)-A0( C)I9\IL=IS)H-\AC
)@@G@@H1$ ))@#@@@@^[G 1E 1N 1A 0)^@)@]@@@@ETKCD#C*)^@)@K@@@@^[[E1G^-DD1DE))HD3AD
)@@G@@^[=JD,GD!HD<GD?H-9^[,G(3I--GL?G*) [<GD?H--GL?G*)G12H9!^[7HD4H[(H0)H94H[>AE
)@@G@@IK)^@)@J@@@@^[0IL\GT3 C)IT\^[-^[5IT>IK)H(-JC)I92HD4G*)H[(IS)H97H0)I[2H9<AF
)@@G@@IS)I-\^[0IL\I1(G->^[=GD4GC)^@)@L@@@@^[(H1(I-(GD?HD'GD4HD\H0)GT-I[-GL(H-(AG
)@@G@@I-(G(3^[-G14G(2^[\IK)GL>G1\IL>^[4H[>^[,H9=G*)G9>H1>IL-I->G))GL9^@)@#@@@@AH
)@@G@@^[[E1G^-DD1DE),^@)@]@@@@ETKCD#C*)^@)@K@@@@^@/E(3G(2^[(H1&H8"^[(IS)GD,JC)AI
)@@G@@AC8^[+HD4^[6GD?I(>^[4H8)GL>^[0H--GT>G))HD,^[CAK)H9&^[4H[>^[4H[(IL=@L@@@@AJ
)@@G@@^[7H92G))H9&^[4H[>^[,H9=G*,^[AH92^[>J[-H(0H-> ))HD4^[!GD9^[+G*)GC)G->IT<AK
)@@G@@IL(I[4H92^[-G-=IL>IT3^[&H92^@)@A@@@@^[4H[>^[3JD!GL\H))HD,^[4H[>^[,H9=G*,AL
)@@G@@@]@@@@ETKCD#C*)^@)@L@@@@^[ J[-H(0H->BK)^@)E-\^[(H1(I-(GD?HD'G*)GD,^[[E1GAM
)@@G@@^[4IL>G*)I9(I-*^@3^[7H92G))HT>JD3 ))HD,^[[ET#DDD ))^@)@L@@@@^[7HD4H@)I-*AN
)@@G@@G*)G1\H-?H97HD,G8)IT9H(+H9?IS'^[[ ))CDI ))E-CC*?^[JEK?^[]E(O ))CDIC)?^[DAO
)@@G@@D1#D-PC-DD1B ))^@)@K@@@@^[-H1=^[RDDOD@?^[-IT3H9<HD-I->G))I9(I-*^[4H[>^[&AP
)@@G@@H9?H-\I9(H1$^[6GD?I(>IS?^[2G(3I[>GT4HD6G(?JC'^@)@ @@@@^@1 )2 )3 )4 )5 )6AQ
)@@G@@ )7 )8 0)^@)@]@@@@ETKCD#C*)^@)@^@@@@^@)^@)^@)^@)^[[IT<HD(^@)@]@@@@ETKCD#AR
)@@G@@C*)A@)@ @@@@^[-I1?I[:I))^[[E1G^-OEL C*)AS)@I@@@@^@)^@)^@)^@)^[[E1G^-DD1DAS
)@@G@@E))^@$CC$ )1^@$CDI^8?AK)^9OD[ ^8?AS)^9JEK$ )4^@$CLPE)$ )5^@)@H@@@@^@)^@)AT
)@@G@@^@)^@)^[[E1G^-DD1DE))^@$CDIC)$ )6^@$DDICTGE(^DDIC8$ )7^@$E9DE-C^8?B@)^@)AU
)@@G@@@ @@@@AD[E1G^))E[-GT:G(4^[AH92H(-I),@J@@@@^[OH[>^[2H95I-(H1>IS)I9\IL:^[&AV
)@@G@@IL\H*)GC)I(3G(2 (3I(0I[?HD>G))I[-GT:G(4 0)^[OH[(IS)I[-GT:G(4@L@@@@^[<H9,AW
)@@G@@I--HD,IS)GD?H))H1>GT>IT3GD2JC)HD,G1\IL!GD4HD\H0)I-\^[!GD(H14GD(H0)I-*G*)AX
)@@G@@GL-H--H1<G(=^[4IL>G*,^@)@F@@@@^[OH[>^[&H92H(-I))H9&^[4H[>^[0GD<HT>I)?^[<AY
)@@G@@I(2IL>H14H-9 ))HD3BK)^@)@]@@@@ETKCD#C*)^@)@ @@@@E-[CLGC*)CDQD)=^[KGD<HT>AZ
)@@G@@I),^@)@L@@@@^@)^@) *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!BA
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *)^@)@L@@@@^@:A@)BK)^@)E-3^@)^@)BK)BB
)@@G@@CDQD-MDTA^@)BK)^[[E1GDTN^@)BK)^@)^@)^@)^@)^@)CDQD-MD9JE))^@)^@)^@)^@)^@)BC
)@@G@@BK)^@)@L@@@@^@)^@) *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!BD
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *)^@)@L@@@@^@:AC)BK)^@)^@)^@)^@)^@)BE
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)CDQD-#C(S^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BF
)@@G@@BK)^@)@L@@@@^@)^@) *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!BG
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *)^@)@L@@@@^@:AK)BK)^@)^@)^@)^@)^@)BH
)@@G@@CDQD-ID0)^@)^@)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@)CDQD-FCTM^@)^@)^@)^@)^@)^@)BI
)@@G@@BK)^@)@L@@@@^@)^@) *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!BJ
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *)^@)@]@@@@ETKCD#C*)^@)@[@@@@C(IC))BK
)@@G@@@#@@@@CTJD-PD(I^@1A@)^@)@G@@@@^[OIS)^@)^@)^[OG(3I))GD,G))IT>I))GT>H-? 0)BL
)@@G@@C1\IK)I-*G*)I(3G(2^[\H1?JC,^@)@]@@@@ETKCD#C*)^@)@G@@@@^[[E1GELFC0)^[MGD,BM
)@@G@@HS\HT>JC)HD,IT>IL4HD\H0)G1?GD$^@*B*1^[&H92^[:G(9IS( 0)@]@@@@ETKCD#C*)^@)BN
)@@G@@@H@@@@^[[E1GDTN^@)^[PIT>IK)IT0G(<HD&HD>G))HT>JD3HD'G*) @0B(6GD2HD-GL?G*)BO
)@@G@@H->H1$I-* C,@]@@@@ETKCD#C*)^@)@E@@@@^[[E1GELJD9O^[[G-=IL>IT3^[\G0)IL\H94BP
)@@G@@^[,H9=G*)H9&^[4IL>G*,^@)@]@@@@ETKCD#C*)^@)@L@@@@^[[E1GCT F@)^[#H9!I[-IL(BQ
)@@G@@IT\H0)G(8I->H13HD\H0)I1-H-5G*,^[PIT>G))GD3^[-^@$GL?GD,HS)G1(H-?^8)I1-H-5BR
)@@G@@G*)^@)@G@@@@^@)^@)^@)^@)^[7H[>H0)GT\H(0GD2HD,G8)G-(G1&G(2G(,I))H->H1$I-*BS
)@@G@@^[:G(9IS,^@)@]@@@@ETKCD#C*)^@)@H@@@@^[[E1GD1I^@)^[II(!GL>IK)H9&^[,H9=G(3BT
)@@G@@^[<I(2IL>H14H-9^[(H0)I-*G*)CDQD))I-2G(> 0)@]@@@@ETKCD#C*)^@)@L@@@@^[[E1GBU
)@@G@@DT#EK)^[[G-=IL>IT3^[\G0)HT>JC)GT\H(0GD2HD3H9,^[2H95I-(H1> 0)^[NI(0I[?HD>BV
)@@G@@G))GL9^[=G(&GD5H-4^[\IK)@A@@@@^@)^@)^@)^@)^[+JC)I-*G*)I(3G(2 0)^@)@]@@@@BW
)@@G@@ETKCD#C*)^@)@]@@@@CTJD-PD(I^@2@N@@@@^[OH[>^[-GL\I1>^[3JD!GL\H-3 ))HD,^[<BX
)@@G@@GD0HD4GD?^[?G(4I->IL3 ))GD2G*)G->G1(H1>G))GL9^[4H[>^[0IL\GS)CDQD)=C1DC(GBY
)@@G@@C-N 0)@B@@@@AD[E1G^))D1\G->^[CG(-G->IK)C1\IL!GD4 0)^@)@D@@@@^[ GD<H@)H1\BZ
)@@G@@G->^[*GD3^[4H[>^[&H9?H-\I9(H1$^[&H92H(-I)'@]@@@@ETKCD#C*)^@)@^@@@@E-[CLGCA
)@@G@@C*)CDQD)=^[IH9=G*,@L@@@@^@)^@) *! *! *! *! *! *! *! *! *! *! *! *! *! *!CB
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)^@)@L@@@@^@:A@)BK)^@)CC
)@@G@@^@)^@)^@)^@)^[[E1GD-AD))^@)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@)^[[E1GELOD))^@)CD
)@@G@@^@)^@)^@)^@)BK)^@)@L@@@@^@)^@) *! *! *! *! *! *! *! *! *! *! *! *! *! *!CE
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)^@)@L@@@@^@:AC)BK)^@)CF
)@@G@@^@)^@)^@)^@)^[[E1GE(KD))^@)^@)^@)^@)^@)BK)^[[E1GDTNFK)BK)^[[E1GCL[D))BK)CG
)@@G@@^[[E1GC1N^@)BK)^@)@L@@@@^@)^@) *! *! *! *! *! *! *! *! *! *! *! *! *! *!CH
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)^@)@L@@@@^@:AK)BK)^@)CI
)@@G@@^@)^@)^@)^@)CDQD-MD1F^@)^@)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@)^[[E1GC1C^@)^@)CJ
)@@G@@^@)^@)^@)^@)BK)^@)@L@@@@^@)^@) *! *! *! *! *! *! *! *! *! *! *! *! *! *!CK
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)^@)@L@@@@^@:AS)BK)^@)CL
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)CDQD-FC(T^@)^@)^@)^@)^@)^@)^@)^@)^@)CM
)@@G@@^@)^@)^@)^@)BK)^@)@L@@@@^@)^@)BK)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)CN
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BK)^@)@L@@@@^@)^@)BK)^@)CO
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)CP
)@@G@@^@)^@)^@)^@)BK)^@)@[@@@@C(IC))@]@@@@ETKCD#C*)^@)@#@@@@CTJD-PD(I^@1A@)^@)CQ
)@@G@@@C@@@@^[[E1GD-AD))^[GHD,HS)I-\^[?G(&I))IT5GL4IL>G*,^@)@]@@@@ETKCD#C*)^@)CR
)@@G@@@C@@@@^[[E1GELOD))^[GHD,HS)I-\^[2HD$H[4^[3I(+I-2G(> 0)@]@@@@ETKCD#C*)^@)CS
)@@G@@@D@@@@^[[E1GE(KD))^[GHD,HS)I-\^[(H(!G(=HD-I->^[-H1<G(3I-\IK,@]@@@@ETKCD#CT
)@@G@@C*)^@)@M@@@@^[[E1GDTNFK)^[AH92^[6GD2HD-GL?G*)H->H1$I-*^[:G(9IS?^[4H[(IS)CU
)@@G@@HD,G-(GT-I->IS)I-*G*)H15H(+G(2^[\G0)I9\IL=IS)HD,@ @@@@^@)^@)^@)^@)^[4H[>CV
)@@G@@^[:G(9 0)^@)@]@@@@ETKCD#C*)^@)@A@@@@^[[E1GCL[D))^[]GD?GD,GT>^[&GD<I-\IK,CW
)@@G@@@B@@@@^@)^@)^@)^@)^@)^@)A@)B*)CL-H--H1<G(= 0)^@)@D@@@@^@)^@)^@)^@)^@)^@)CX
)@@G@@AC)B*)EL(G9*I))H[>GD6JC) @:AC( 0)^@)@C@@@@^@)^@)^@)^@)^@)^@)AK)B*)D->G14CY
)@@G@@^[*G(-I19^@* *1 C,@]@@@@ETKCD#C*)^@)@G@@@@^[[E1GC1N^@)^[AIL>G*)IT(J[4H[7CZ
)@@G@@H92G)) *)GD6GD(H--GL?G*)I-\^[4H[>^[5IT>IK,@]@@@@ETKCD#C*)^@)@G@@@@^[[E1GDA
)@@G@@ELIDS)^[OH[(IS)HD3^[4H[>^[,I(!GL>IK)H9&^[,H9=G(3^[(H0)I-*G*)H->G14@C@@@@DB
)@@G@@^@)^@)^@)^@)^[3I(+I-2G(>^[\G0)I-*G*)H1\G-> 0)^@)@]@@@@ETKCD#C*)^@)@G@@@@DC
)@@G@@^[[E1GC1C^@)^[AIL>G*)H[-H-&I9\IL=^@!^[-I1-HD?GD+H->^[4H8)I-*G*)I(3G(2 0)DD
)@@G@@@]@@@@ETKCD#C*)^@)@F@@@@^[[E1GDT FC)^[OH[(IS)HD3^[4H[>^[&HD2IT4^[7H92G))DE
)@@G@@H9&^[4H[>^[:G(9 0)@]@@@@ETKCD#C*)^@)@]@@@@CTJD-PD(I^@2@N@@@@^[OH[>^[-GL\DF
)@@G@@I1>^[3JD!GL\H-3 ))HD,^[<GD0HD4GD?^[?G(4I->IL3 ))GD2G*)G->G1(H1>G))GL9^[4DG
)@@G@@H[>^[0IL\GS)CDQD)=D1JC- ES,^@)___@@@G*)GC)G->IT<IL(I[4H92^[-G-=IL>IT3^[&DH
)@@G@@H92^@)@A@@@@^[4H[>^[3JD!GL\H))HD,^[4H[>^[,H9=G*,======@@^@@ @@@@@@@@@@@@DI
)@@G@@@@ @ZF@@@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@I4JEPK100980@]@@@@DJ
)@@G@@@@@@[M@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[I@@A@@A@[ @]Z@@@@@#@@^@@@@%W@@@@@@DK
)@@G@@@^@@@]@^@ @[@ @@@]K^@[@)^[2H95I-(H1>IS)I9\IL:^[&IL\H*)GC)I(3G(2 (3I(0I[?DL
)@@G@@HD>G))I[-GT:G(4 0)^[OH[(IS)I[-GT:G(4@L@@@@^[<H9,I--HD,IS)GD?H))H1>GT>IT3DM
)@@G@@GD2JC)HD,G1\IL!GD4HD\H0)@):@C@)BP@*:@@@___@[H^@@@@E^]R@@M^]')[E^[H)@T^]-DN
)@@G@@)@K^#G)^=^#W@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___DO
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___?@@@[@?@@@[V?@@@[X?@@@@<DP
)@@G@@?@@@[Y?@@@@)?@@@[[?@@@[]?@@@[#?@@@[^?@@@[ ?@@@[A?@@@[B?@@@[C?@@@[D?@@@[EDQ
)@@G@@?@@@[F?@@@[G?@@@[H?@@@[I?@@@[J?@@@[K?@@@[L?@@@[M?@@@[N?@@@[O?@@@[P?@@@[QDR
)@@G@@?@@@[R?@@@[S?@@@[T?@@@[U @@@@(!@@@@!"@@@@:#@@@@/$@@@@.%@@@@"&@@@@&'@@@@=DS
)@@G@@(@@@@%)@@@@**@@@@>+@@@@',@@@@_-@@@@-.@@@@?/@@@[W0@@@@01@@@@12@@@@23@@@@3DT
)@@G@@4@@@@45@@@@56@@@@67@@@@78@@@@89@@@@9:@@@@$;@@@@;<@@@@\=@@@@,>@@@@+?@@@[ZDU
)@@G@@@@@@@@A@@@@@B@@@@@C@@@@@D@@@@@E@@@@@F@@@@@G@@@@@H@@@@@I@@@@@J@@@@@K@@@@@DV
)@@G@@L@@@@@M@@@@@N@@@@@O@@@@@P@@@@@Q@@@@@R@@@@@S@@@@@T@@@@@U@@@@@V@@@@@W@@@@@DW
)@@G@@X@@@@@Y@@@@@Z@@@@@[@@@@@\@@@@@]@@@@@^@@@@@_@@@@@@@@@@@A@@@@@B@@@@@C@@@@@DX
)@@G@@D@@@@@E@@@@@F@@@@@G@@@@@H@@@@@I@@@@@J@@@@@K@@@@@L@@@@@M@@@@@N@@@@@O@@@@@DY
)@@G@@P@@@@@Q@@@@@R@@@@@S@@@@@T@@@@@U@@@@@V@@@@@W@@@@@X@@@@@Y@@@@@Z@@@@@[@@@@@DZ
)@@G@@\@@@@@]@@@@@^@@@@@_@@@@@C8@@@@C8N@@@C*1@@]H^L@@@T*Z@MUG8M@@@H^Z@MWG@@@@HEA
)@@G@@:@@@@H/KF@@@/C@@EGC8@@@@"K@@@GC*1@@]W*J@MUG^[@@@Q8/@@@G^Z@MWQ8!@@@/KF@@@EB
)@@G@@(*[@@]/K@@EZ/\)@E0'=@@@8/K@@J9(*[@@]/K@@EZC8)@@H')])@@C8)@@E')])@@/\)@E0EC
)@@G@@'=@@@I/K@@J9&';@@@/\)@E\(*[@@]/K@@E*'=@@[)/K@@E('=@@@J[@[@@[/,0@J9C@[@@[ED
)@@G@@C@K@@F;CK@@M/KH@@@C8@@@@;*@@@AG?[@@@;*@@@MG^[@@@/KI@@@/K@@FF/K@@F?/K@@F!EE
)@@G@@/K@@F,C/,@@@/G\@@@[@1@@GC=1@@]:*1@@]/K@@FA!8)@[@0G[@@E/K@@F^C80@@]H8)@[@EF
)@@G@@IG-@@E')J@FCC@1@@G/KJ@@@CO,@@@C4,@@@C0,@@@N8)@@@[^1@@CAE1@@D @[@@BC@0@@IEG
)@@G@@;C0@@MQ'0@@@[?1@@FAC-@@CC=1@@]A21@@FQ^-@@CQ'0@F&/?+@@@/?)@FUA^-@@CQC-@@CEH
)@@G@@C80@E;*4[@@FC@1@@H/\_@@@C*1@@]8K)@F+%)\@MZAC1@@B')])@@/K@@FNQE1@@DD@K@[]EI
)@@G@@QC-@@CCC[@@B/KF@@@@@@@@@/K@@G@/K@@F9/K@@G:@@@@@@C80@F:[C/@@ C80@@[[*/@@]EJ
)@@G@@[=/@@]/K@@M-C80@F:[C/@@ /K@@M0(S@@MY/K@@F_B4@@@HG8K@@CB0H@@@[)L@@]/KI@@@EK
)@@G@@[@)@@J1@@@@F/K@@GAN8K@@C%8K@@MR';@@@9?H@GL/K@@GG;=@@@D+8K@B_/@)@GH')])@@EL
)@@G@@8KK@GCC8)@[20@@@@F')])@@C@)@@JC80@@[/KI@@@DL-H15GD2JC@C1>GL2I(-IL9D(-IL<EM
)@@G@@H@@@@@CD0IL(H)@@@@D(-JC@@@@@@@DL5H1>@@@@@@DL5H-9@@@@@@CD5G95IT4@@@ET>I[4EN
)@@G@@G(!GL>D9<I-\GL>IK@D1\I1>H(+G(2C->GT>H(+G(2C@@@[[&'0@@@?8@@@^/K@@G2C8@@@CEO
)@@G@@:8)@@#&'0__"N8W@@@;*)@@[9?I@G_/K@@G';=@@@D+8K@[_/@)@G;')])@@8KK@G6C8)@[9EP
)@@G@@0@@@@F')])@@/KJ@@@ET5H1=GD9@@@D(\H1=GD9@@@E-5G(3G--JC@E9>G-,G(3G--E-*I(2EQ
)@@G@@IT=GD9C12HD=GD9@@@ET-I-5IL=GD9;/@^@]9*K^@^D8G@@]C8)^@@CC,@@[:8)^@@/K@@H%ER
)@@G@@KGI@@@/GK@HL?8K@@#/K@@H<[GY@@@G8Y@@@[C!@@@[GH@@@L/W@@@ CI@@@AA.@@[C8H@@]ES
)@@G@@9?K^@^ 4@^@]/KF@@@CCI@@[C^Y@@[[CH@@[[^W@@[DGI@@@C8Y@@@/K@@HV[G@^@#E@@@@GET
)@@G@@?8@@K@C8@@K@D8?@@@&;)@@@KC@^@#;^@@@=&;@K@@'=@@@<[@?@@@G8@@@[[C@^@#H8H@@[EU
)@@G@@[GW@@@C8K^@@[^W@@[CCK^@[[CW@@[[^H@@[ CG@@@[C@^@[CG@^@#/K@@HKH8@@@]&';@@@EV
)@@G@@;/@^@]9*K^@^1GG@@@'))@I<CC?@@@/^)@ILC8)^@@[^?@@[CC)^@[[C?@@[[C@^@[[^I@@[EW
)@@G@@C8?@@@LGG@@@*CH@@@')0@I<0GH@@@/K@@IVQE.@@[C^H@@[AE/@@[[^F@@[GGX@@@[C!@@@EX
)@@G@@H8Y@@@[GY@@@9?K^@^ 4@^@]C@@@@F;C@@@M/KG@@@/\)@I=H8)@@[CC,@@@;*)@@W;C)@@)EY
)@@G@@&;I@@@%8)@@]:8)@@#/K@@I7'^@^@0A@^^@GQ;F@@@'^@^@0A@#^@D;C@@@MC@G^@%'=@@@IEZ
)@@G@@C@@^@8'=@@@I'=@@@QA]0^@\RE0^@\/K@@I?9*@^@49*)^@6^@K^@2^@)^@3CC)O@0+8)@@_FA
)@@G@@C8)@@@G^)O@0&;)__"&;0__"N8)__8N4KO@0/K@@JE<8@@@0')J)JN;C@@@#8KK@JB9?@^@4FB
)@@G@@C^)^@0G8)@@[[^)^@09?)^@6N@K^@2N@)^@3/K@O@0/\0@JT[0Y@@@[?Y@@@[*Y@@@[=Y@@@FC
)@@G@@[)Y@@@[4Y)@@C8Z@@@Q;0@@ /KH@@@C@)@@HC@1@@F*^[@@]/\_@@^E/,@@@[G[@@[AE1@@[FD
)@@G@@/C@@J$/,0@E[9?@@@]EG1@@[N@K@@J/K@@J:')])@@8KK@J%1G[@@[/K@@J0[@@@@]Q@0@@HFE
)@@G@@RE1@@[/KF@@@C8#@@[C*1@@]C8M@@@:^Z@MWH8@@@[H^[@@@/KF@@@N8K@@@/GK@J_N?L@@@FF
)@@G@@/^K@J_P^1@@@N8N@@[/K@@M&^@-@@[C=1@@]')J@K:#@@@[]CCL@@#C8\@O9/C@@KDC8\@K!FG
)@@G@@H8K@@[C?[@@]'KI@@@&FY@@@/K@@KK')G)@@%@)@[[/K@@KH8K)@KHN@-@@[/C@@KOG8K@@[FH
)@@G@@[CL@@#/GK@KR'OJ@O9/CK@KT'OJ@K![?[@@]/KF@@@/:K@K-C)!@@@C4!@@[C0!@@[C?!@@[FI
)@@G@@C*!@@[C=!@@[Q;@@K)/K@@KI/:K@K*CO!@@@CW!@@[CK!@@[CS!@@[Q;@@K$/K@@KIN0L@@@FJ
)@@G@@NOL@@A__"@KV__"@K=C8.@@@T8K@@#;GH@@@/K@@K;C80@@[;G@@@#/@@@K;;G@@@#G80@@[FK
)@@G@@/^@@K6C8)@@0')])@@/K@@L@C8)@@@;=K@@#G8)@@0')])@@8#0@K//KF@@@C@1@@F*^[@@]FL
)@@G@@/\_@@^E/,@@@/K@@LCC8)@@0;*)@@M/\)@L,(C[@@[[C-@@[Q3:@MQ0@@@@F')])@@;C)@@MFM
)@@G@@R';@@@/K@@LRC8K@@@/\)@L,(C[@@[[C-@@[C):@MZ/K@@LT')])@@8#K@LSC0:@MQ0@@@@FFN
)@@G@@')])@@G4J@MMC?\@MOS@J@MA9)@@MMRE1@@[;?I@@@H8X@@@/K@@L?;=@@@[9?)@@G;=@@@]FO
)@@G@@9)@@@IK8K@@0')])@@H8X@@@8KK@L>/KF@@@AE1@@[N8K@@ER]0@@GE@@@@GC@0@ML5@J)L/FP
)@@G@@/SJ)@@H8Z@@[0@@@@FH8K@@[Q%1@@]N/Z@@[/KI@@@@@@@@E@@@@[=@@@@J*@@@]WK@@@SU)FQ
)@@G@@@@#4D@@@&DU@@ .Y^@@;&?*@DO]"K@Z_____T&T&T&OY, B:KS=7M/UH,F:BO"FQC8K1\Y)!FR
)@@G@@U5_EU\PYS;+GLF)\*DVZH_T5P_R_-Z@@[__"@@@@@@@@@@__@/+.[]@\Z,@_[-W:B_[!S'@@FS
)@@G@@[+P,[@[:M?@@[ IAG@[#F^C@@FC@NZ@B^@NS@@[@@@      ^@)^@)A^W@@#A@?@@^A^/@@ FT
)@@G@@Q8W@@@N?L@@@/\0@N^C*1@@]R^\@MWQ^1@@@C8J@MZC@0@@#O@)@MY&;0@@[M#/)@@/KF@@@FU
)@@G@@A^W@@#Q8W@@@/\0@N^/K@@M7/\0@M.C8[@@@Q^L@@#9?K@@]R@?@@^Q^/@@ [@W@@^[^?@@ FV
)@@G@@/KF@@@[@[@@[C8@@@[*)[@@]'=@@[\ )[@@]C@[@@[/KJ@@@(^[@@]/K@@NFCC-@@ /^)@NEFW
)@@G@@C@-@@F[C-@@ /\,@@]/KJ@@@N?L@@@/K@@M&C@)@@GC@1@@F*^[@@]/\_@@^E/,@@@')])@@FX
)@@G@@/KF@@@[O<@@@O80@@[/?+@@@[W<@@@[K<@@@[S<@@@/?)@NP[)<@@@O80@@[/?+@@@[4<@@@FY
)@@G@@[0<@@@[?<@@@[*<@@@[=<@@@/?)@NW&"0__"[@-@@[/K@@N:R';@@@/K@@N:&'0@@[C=1@@]FZ
)@@G@@C8:@@@N=Z@MU:@)@@FN*Z@MUC@)@MY/\)@PM/K@@N9CO\@MO;^I@@@+OZ@MP/@)@N9%)\@MZGA
)@@G@@')])@@8KK@N31@@@@F/K@@O[C=-@@]N*Y@MUC@[@@[R';@@@/K@@N2/KF@@@ @@@@I[C-@@[GB
)@@G@@&"0__" G[@@[/K@@OKAI1@@[ C[@@[&"0__"/K@@OKR';@@@ G[@@[/K@@OKR';@@@AI1@@[GC
)@@G@@/CK@OOE@K@@HC=1@@]T*Z@MUN8X@@@/\)@PG/K@@O(')G)@@1@@@@F/K@@OW:C-@@[/K@@O(GD
)@@G@@')])@@:)\@MZ(G[@@[/K@@O(/K@@O*')G)@@:)\@MZ/K@@O*0@@@@F/@)@O$')])@@/K@@O(GE
)@@G@@8KK@O-8KK@OR/KF@@@CO!)@@/\G@@@CW!@@@CK!@@@CS!@@@/\@@O:C)!)@@/\G@@@C4!@@@GF
)@@G@@C0!@@@C?!@@@C*!@@@C=!@@@/\@@O1@@[@O3@@[@O!')])@@')G)@@')J@PE/K@@O;[CL@@#GG
)@@G@@'OJ@O9[?[@@]/KF@@@CCL@@#C?[@@]/\)@PI/K@@PC/\)@PGN8K@J*/K@@O/%0-@@@%O-@@AGH
)@@G@@C8W@@@;C@@@MC=1@@]'KJ@O9C8,@@@'KK@MY:*1@@]/K@@PQ ?[@@F/\1K@F/KI@@@&;)[]@GI
)@@G@@C G@@]/\0@YS/K@@V^/KF@@@9*K^[\N*,@@[NCK^[\&;K@@[&;)@@[8K)@P*:8,@@@/K@@P3GJ
)@@G@@N@)@[[C8?@@[H8)@@#/K@@P-8KK@P!:8X@@@/K@@P3N@K@[]C8W@@[C[Y)@#H[X)@@/[K@P-GK
)@@G@@/8@@P2O'0@@[O'0@@[9?K^[\/KF@@@AE0^[4N8)@@@(=I@@[/K@@P/:=Y@@[/K@@Q@ @@@@HGL
)@@G@@[=Y@@[RE0^[4C@0@[]/KF@@@C="@@[')J@Y&C@0@@LN8)@@#(=J@@[/K@@Q;N8)@@[:=Z@@[GM
)@@G@@/K@@Q;N8)@@][@@@[[')H@Y*C@@@@LCDY@@[[DW@@[')H@Y<')H@Y2R]0@@L*8F@@@[C;@@[GN
)@@G@@C[K@@J')H@Y,[CJ@@[')H@Y+')H@Y0R]0@@L*8F@@@[C:@@[C[K@@I')H@Y![CI@@[C>G@@[GO
)@@G@@ @@@@L/[@@Q>C[K@@H:[@@@HC[X@R-[>Z@@[;DK@@M[>Y@@[ =G@@[:8K@@[/K@@Q2CDW@@]GP
)@@G@@GDZ@@][DW@@]CDY@@]HDW@@][DY@@]/K@@Q8CDZ@@]HDW@@][DZ@@]CDW@@]GDY@@][DW@@]GQ
)@@G@@[@@@@JC@@@[[/K@@RRCDY@@[[DZ@@[')H@Y*')H@Y0R]0@@L*8F@@@[C:@@[[C"@@[C[K@@IGR
)@@G@@')H@Y2C[K@[]:9K@@[/K@@RG[=Y@@[CDX@R-[>Z@@[/K@@RI =I@@[ =J@@[:8K@@[/K@@ROGS
)@@G@@CDY@@]HDZ@@][DY@@]/K@@RRCDZ@@]GDY@@][DZ@@]RE_@@[(8F@@@/K@@RZ:C:@@@[C;@@@GT
)@@G@@:^:@@@[^;@@@/K@@R)[^/@@@C@)@@J/K@@P.@@]@@@@@[@@@9?G@@@9*@^@9AE0^@. @@^@_GU
)@@G@@ ?@^@/C4)^@9H0)^@9H8)@@[/C)@R,C8)@@@[0)^@/C8@^[@/,0@M-C^@^@9&;@^[@/K@@R5GV
)@@G@@C@@^@;/,0@T_/K@@T4[@@^@;C8G@@@%^@^@9/K@@R_*?@^@//K@@T0C8K@@[[?K^@/C^0^@;GW
)@@G@@CC\@@[/@)@S^:^"@@@/,0@TF*^J@@@/,0@TL(CJ@@[/K@@SS/,0@TWC?@^@;T4@^@9(0@^@/GX
)@@G@@/K@@TCH4@^@9G0@^@9H8@@@[/,0@E[C/@@@)/,0@NIC0@^@/C8K@@!/,0@JXC/@@@)/,0@NIGY
)@@G@@/,0@E@[^@^@/C^@^@;RE0^@'/,;@@@C/@@@)/,0@NIC^@^@;(@G@@@/K@@S%/,0@E@L^@^@/GZ
)@@G@@C0@^@9H8H@@[/@@@S%/G@@S%C8K@@!/,0@JXC@@@T7[@@^@"/,0@M4C@@^@"RA0^@'/,;@@@HA
)@@G@@C8@^[@/,0@M-C^0^@;CC\@@[/@)@S7:C"@@@/,0@TK*CJ@@@/,0@TG/,0@TWC@@@T7[@@^@"HB
)@@G@@/,0@M4C?K^@9/K@@T^[4K^@/RA0^@'C@@^@"/,;@@@C4K^@/8#K@S_C8@^[@/,0@M-/K@@R4HC
)@@G@@H8@@@[/,0@E[/K@@SQ/\)@TH/\)@THC8@@@[H8)@TF/K@@TO/\)@TM/\)@TMD8@@@[H8)@TKHD
)@@G@@G?)^@;;@I@@@>8@@@[)@@^@_=8@@@[+@@^@_[@K^@_/KF@@@C[@^@_/[F@@@AA0^@.C0@^@9HE
)@@G@@H8@@@[/,0@E[C!K^@;;(@@@['D@@T(C/@@@'/,0@NIC/@__"/,0@E[C4@^@9/,0@E[8^K@T=HF
)@@G@@C/@@@@/,0@EERA0^@./KF@@@C@@@T"RA0^@'/,;@@@/K@@T4/,0@M4RE0^@./KF@@@@[-^[HHG
)@@G@@E9[ELIDDIC8'^[OEL C*)DDN^[#FD#D-DCS-@]A@T8;G@@@Y;GK@@Y;G)@@Y;C0@@MC[K@@IHH
)@@G@@/@0@UWC4?KU'')I@U_/@)@URC!GKU'/ @@UL/[K@UW:C"@@@C>GKU':^"@@@C-GKU'H9K@@]HI
)@@G@@/K@@UN(*GKU'/K@@UUC8"@@@G9K@@[C@K@@K/K@@U C1GKU'/[@@UW/K@@UPC@K@@KO'0@@[HJ
)@@G@@C@)@@L;*0@@M;?)@@Y;?K@@Y;?@@@Y/KF@@@[@]@@@]#[[@@#^[[@@^@@[#^]][[@@[@#@@@HK
)@@G@@#^[[@@^@@[]^]][[@@##[[@@[@^@@@^@@[]#[@]@@@##[[@@]^[[@@^@@[^##][[@@[@#@@@HL
)@@G@@]^[[@@^@@[^]#][[@@]#[[@@[@^@@@^@@[#]@@H@U-@@H@U>@@H@U(@@H@U!@@H@U1@@H@U5HM
)@@G@@C8\@@@CC\@@@C^\@@@CC\@@[/@)@W!AA0^[3*^I@@@(CI@@@/K@@V;C=Y@@[(@@@@HC8K@@[HN
)@@G@@')H@Y&R]0@@L')H@Y)/ K@VHC@0@@F%^"@@@:C"@@@/K@@V1CDJ@@[')H@Y(R]0@@K')H@Y:HO
)@@G@@R]0@@L*8F@@@[DF@@[C[Y@@@[[Z@@@RE_@@@[C;@@[RA_@@@[C;@@[C>Y@@[[>Z@@[CDY@@]HP
)@@G@@[DZ@@]RE"@@[AE_@@[(8F@@@/K@@V9:^:@@@[^;@@@:C:@@@[C;@@@C@0@@K:8K@@[/K@@WGHQ
)@@G@@/K@@WK')H@Y>')H@Y2R]0@@L*8F@@@[C;@@[CCX@R-C[@@@J/K@@V-[^/@@@/K@@V!CC"@@[HR
)@@G@@C^Y@@@*CI@@@CCY@@@*8H@@@[C.@@[/@0@W,:^\@@@/K@@WA[CZ@@@/K@@WG[^Z@@@C8K@@]HS
)@@G@@/K@@WKC8K@@]:^\@@@/K@@WKC8K@@[CDZ@@]H.K@@[[DZ@@]:C0^[1 C@^[1C@)@@J/,0@P5HT
)@@G@@/KJKWP@@@@WT@@@@WV@@@@WV@@@@WX*=I@@[/K@@WXCC"@@[/^0@WDC@0@@ICC,@@[/@)@W*HU
)@@G@@%C"@@@/K@@WXCDY@@]H.K@@[[DY@@]:C)^[1/K@@W*/K@@WXC^)^[0CC/@@]H80@@[[C/@@]HV
)@@G@@RA0^[3/KF@@@[^W@@@/K@@W*AA0^[3C80@@@C^?@@@&;,@@@ C@^[1(8I@@@/K@@XGRE0^[2HW
)@@G@@/,;@@@/K@@XC/,0@W//,0@W/*=I@@[&;,@@@C8"@@@/KF@@ /K@@X#QB,@@@/K@@W5&;0)@@HX
)@@G@@(C@^[1[C)^[1QF,@@@/K@@W5*4@^[,/K@@XG(0@^[,/K@@W'[@)^[0C8,@@@RA0^[3/KF@@@HY
)@@G@@AA0^[3/^)@YAC^)^[2*8J@@@/K@@XR[^?@@@/K@@XV/G0@XU[^\@@@/K@@XV[C\@@@[C"@@[HZ
)@@G@@ @I@@@ =I@@[C80@@[[C"@@]N8K@@[N8)@@]C9@@@@ @@@[#CCY@@[/@K@X;/H@@X:%CK^[0IA
)@@G@@/K@@X:G[@@YD[@)@[#%^!@@@/K@@X0/H@@X8^=X@@[/K@@X8/H@@X2^=!@@[/>@@X8CDX@@]IB
)@@G@@G.K@@[[DX@@]:CK^[1G9@@@[C8!@@@/-@@X=/D@@X=CC)^[0C@0@[#/@0@Y]C8K@@[%^"@@@IC
)@@G@@C8K@@]/,0@P5 @@@@ICC/@@]G80@@[[C/@@]C^K^[2RA0^[3/KF@@@)@@@@@&;)[[@C G@@]ID
)@@G@@/\0@YS/KF@@@C@)@@H;C)@@M[*!@@[[^K^[2G8K@@#&;)[@@C G@@]/\0@YS/K@@XK/KF@@@IE
)@@G@@AA0^[1Q;?@@@[@)^[,[C0^[3[D@^[2/,0@W0RA0^[1CCK^[3/KH@@@CDV@@@C V@@@CDW@@@IF
)@@G@@C W@@@CDW@@@CDY@@@C Y@@@CDY@@@CDZ@@@C Z@@@CDZ@@@[DV@@@[ V@@@[DW@@@[ W@@@IG
)@@G@@[DW@@@[ Y@@@[DY@@@[DZ@@@[ Z@@@&;)@[@C9@@Z@/\0@YS/KF@@@[^K^[2;CK@@M&;)@@@IH
)@@G@@C9@@Z@/\0@YS/K@@XK/KF@@@C9H@@@HDI@@]/[F@@@//F@@[C@K@@K/KF@@]&;)@]@C9@@Z@II
)@@G@@/\0@YS/K@@V^/KF@@@C8@)@['=@@[\C@@@$K'=@@[6=@@@$L/K@@ZH>@@@$M/K@@ZPC8@^]RIJ
)@@G@@'=@@[8C8G@@@/@@@ZNC;/^[8C@K@$N[@W^[9R[@@$OR[K@$P/,0@& /K@@)YC[@^#K)[@@$NIK
)@@G@@N8K@@8C@@@$Q2[W)@]/K@@)ZC^W@@[/KH@@@HC)^@)@@@@)<HD:^@)@@@@)<HD=^@)@@@@)=IL
)@@G@@HD2^@)@@@@)7HD2G))@@@@)8IS)^@)@@@@-+IT:^@)@@@@-+IT=^@)@@@@-<IT2^@)@@@@-5IM
)@@G@@IT2G))@@@@-6G->^@)@@@@+!G-:^@)@@@@+!G-=^@)@@@@+,G-2^@)@@@@+_G-2G))@@@@<@IN
)@@G@@IL=^@)@@@@<LG))^@)@@@@<-G-4^@)@@@@<-G-(^@)@@@@<-G-0^@)@@@@<5G(4^@)@@@@=KIO
)@@G@@G(2^@)@@@@=KG*)^@)@@@@=KI-2^@)@@@@=XI))^@)@@@@=XG9>H0)@@@@+CH9,^@)@@@@>EIP
)@@G@@H9&G0)@@@@>F/G0@ZNC@@@$U'=@@@I/K@@ZN'=@@@DC8@@@@C'?@@@ @@@@R/,0@& /K@@)1IQ
)@@G@@A]0@@R/,0@-JC8W@@@&#K@@OC8@^#B/,0@YI/@)@)&/,0@-U/K@@)&/C0@)&/A)@<-/A0@ZNIR
)@@G@@C@@@$Y'=@@@I/K@@ZNC8@@@@C'?@@@ @@@@R/,0@&!/K@@-DA]0@@R[@@^#J/,0@& C'@@@@IS
)@@G@@/,0@-J[%G@@[C8W@@@&#K^#JC8@^#B/,0@Y9/@)@)'/,0@-U/K@@)'/C0@)'/A)@<-/A0@ZNIT
)@@G@@C@@@$+'=@@@I/K@@ZNA]0^[5C@@@@OG8@@@#/,0@HHR'G@@#&'@@@[R]K@$<N@K@@OM]D)@@IU
)@@G@@R]0^[5/KF@@@A]0^[6R'Y@@@C8H@@@/,0@I]R'@@$=/,0@>GR]0^[6/KF@@@C8@@@@C'?@@@IV
)@@G@@ @@@@R/,0@& /K@@-1A]0@@RC8K^#K&#K@@OC8@^#B/,0@YER'Y@@@/@)@-3R'@@@@/,0@>GIW
)@@G@@/K@@->/C0@->/K@@)2/,0@>V/K@@->C8@@@@C'?@@@ @@@@R/,0@&!/K@@+#A]0@@RC@K@@GIX
)@@G@@C8@^#B/,0@Y5R'Y@@@/@)@+ R'@@@@/,0@>G/K@@-8/C0@-8/K@@-EC@@@$!'=@@@I/K@@-8IY
)@@G@@/,0@&!C8@@@[C]0@@G'=@@@N[@@^[88 0@+J/K@@ZNR[0@$,R[)@$\N'@@@B/,0@+)')A)@@IZ
)@@G@@8M@@+MC'@@@]/,0@-J[%G@@[C8W@@@&#K@@OC8@^#B/,0@YI/@)@+HC8H@@@/,0@I]/K@@+HJA
)@@G@@A]0^[7C8)@@U/,0@+&C8.@[[R]0^[7/KF@@@C@@^[8S@@@$09)@@$1;CK@@[[@K^[8U@K@@IJB
)@@G@@/KF@@@C8@@@@C'?@@@ @@@@R/,0@& /K@@+;A]0@@RC8K^#K&#K@@OC8@^#B/,0@PR/@)@+.JC
)@@G@@C8I@@@/,0@I]/K@@+0/C0@+0/K@@)2/,0@>V/K@@+0C8@@@@C'?@@@ @@@@R/,0@&!/K@@<GJD
)@@G@@A]0@@RC@K@@GC8@^#B/,0@ZA/@)@<IC8I@@@/,0@I]/K@@<]/C0@<]/K@@-EC@@@$!'=@@@IJE
)@@G@@/K@@<]/,0@&!C8@@@[C'/@@@8 0@<Q/K@@ZNCC)^#D/@)@ZN/,0@+&C8X@@[C8@^#B/,0@ZAJF
)@@G@@(@@@@I'=@@@)C8I@@@/,0@I]/K@@<O @@@@R/,0@& /K@@<0C8K^#K&#K@@OC8@^#B/,0@YEJG
)@@G@@/@)@<3[^)^#EC8@^#E/,0@R=/A0@ZN/,0@& /K@@ZN/K@@<+C^)^#BC'0@@[/K@@<(/,0@>VJH
)@@G@@/K@@<+R'@@@]/,0@&!/K@@=B')C@=E8]@@<6C8@^]'/,0@M-C8@@$3/,0@PBR'@@@]/,0@P#JI
)@@G@@')C@=H/,0@LM8]@@<_C/@@@[C/K__"/,0@EQ/K@@ZN/G0@=D8]@@<6/K@@<'[?@^#E[0@^#EJJ
)@@G@@[4@^#EC?@^#EC0@^#EC4@^#EC^@^#B&;@][@[@@^#IC@@^#I/,0@T_/K@@=U[@@^#IC8G@@@JK
)@@G@@/,0@I]/K@@=N ^@^#B C@^#D/K@@ZN @@@@R/,0@&!/K@@=5C'0@@[?8@@@A?8@@@@/K@@=9JL
)@@G@@C@K@@GC@G@>^'=@@@8C8H@@@;*@@@GG8@@[@;*@@@MQB@^#B[@@^#IC@@^#I/,0@T_/K@@=YJM
)@@G@@[@@^#IR'W@@@R'@@@@/,0@>G/K@@=!/A0@ZNC@@@$"'=@@@I/K@@ZN[@@@@PC8@^]'/,0@M-JN
)@@G@@C@@@@P/,0@LMC8@@$_/,0@PBC/@@@[C/K__"/,0@EQ/K@@=Y@] @*#@] @*C@] @*H@]B@*MJO
)@@G@@@]B@*T@]B@*)/K@@ZN/K@@ZNAE0^#GC8@^]'/,0@M-D*T@@[C8D@@#/,0@OFC8C@@@/@@@>PJP
)@@G@@/,0@PBC/@@@[C/K__"/,0@EQ/,0@M4RE0^#G/KF@@@AE0^#GC8@^]'/,0@M-D@K@@OC8@^#KJQ
)@@G@@/,0@OFC8@@*$/,0@PB/K@@>PAE0^#G[@@@@D/,0@E@[@@@@ND*T@@[C8D@@#C8)@@)/,0@O#JR
)@@G@@/,0@E@[@@@@PG90@@OC@@@@N/,0@EEC=D@@[:8@@@]D8@@@[C/K@@]/,0@LNC/@@@)/,0@NIJS
)@@G@@CCD@@]/,0@LMC@@@@P/,0@EERE0^#G/KF@@@'=@@@8/KF@@@')^)@@/G;@@@:80@@)/K@@&@JT
)@@G@@/KF@@[AE0^#G/,0@&@/K@@&- @@^#HR[)@$\R[0@$,N'@@@*C'@@@@8M@@&J/K@@&T?80@[VJU
)@@G@@?80@[[/K@@&<A]0^#H')A)@@G'@@@[')^)@@/G0@&T%80@@)/K@@&HC80@@)')A)@@8M@@&UJV
)@@G@@G'@@@#;E@@@]/]@@&-RE0^#G/KF@@[RE0^#G/KF@@@?80@[;?80@[-/K@@&$/K@@&M(@@^#HJW
)@@G@@/K@@&-?80@@'?80@@0/K@@&T/K@@&NAE0^#G/,0@&@/K@@&-C8@@@@C8K@@@/K@@&4')^)@@JX
)@@G@@/G0@&.?80@@'?80@@0/K@@&.C8K@@[H80@@0T8@@@EG8J@@@/K@@&3/@K@&-/K@@&Z/!^@@@JY
)@@G@@CW5@@@CK5@@@CS5@@@/!@@$^CO5@@@$[K@@V/K@@&_R9^@@@/!^@@@D80@@[[O7@@@/!&@@@JZ
)@@G@@[W7)@[[K7@@@[S7@@@/!)@$E@)+^[9[@@@@@]@@@@@^@)^@)@@[@$@@@[^[9@@]@Z=UNKNOWKA
)@@G@@N COMMAND   @[#@$RNO KEY SPECIFIED  @[#@$VNO RANK SPECIFIED @[#@$Z@@[^#KKB
)@@G@@^[DD1NC(ME- C))E[MC(QDDJE(ND-T^0)^@)RANK TOO LARGE    @[#@$%@@[^#J@@[@$GKC
)@@G@@];KIS!@@@@@@H->+'V^1DD1^C(IE)'^@& ))CLMCTJD-IBK)^0?^[GDDIC(NBK)^0)NO INDKD
)@@G@@EX SPECIFIED@[#@$;^[DES)CC)CL[C))DDIC- F@&E[MC(JEL^C(M^[OEL[E1 ELNCDG^@)KE
)@@G@@DDID9MC- EK)E-MCDQC(MET[D))^@)E[JETOD9MC- EK)E-MCDQC(MET[D))EL E1 ELNC*)KF
)@@G@@E[MC(JEL^C(M^[OEL[E1 ELNCDG^@)EL E1 ELNC*)DDID9MC- EK)E-MCDQC(MET[D))^@)KG
)@@G@@EL E1 ELNC*)E[JETOD9MC- EK)E-MCDQC(MET[D))^[ID9O^[AD9PD1^^@& K^@)^^@@__"KH
)@@G@@^@@^@@@@@@@@^#W@@@@@@@@@@@@@@@RETURN ADDRESS: 999999  PARAMETER: 999999 KI
)@@G@@SIZE REQUESTED EXCEEDS MAXIMUM BUFFER SIZEADDRESS PASSED TO BREL IS NOT KJ
)@@G@@AN ALLOCATED BUFFER     BREL ERROR:  NEXT BUFFER BACKPOINTER IS BAD.    KK
)@@G@@INSUFFICIENT CORE TO SATISFY REQUEST@[B^@H@[D^@O@[C^@X@[A^@>@@@@@@@@@@@@KL
)@@G@@/K@@I'@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[B^@A@@@@@@@@@@@@@@@@@@@@@@@@KM
)@@G@@@@@@@@@@@@@@@@@@@@@&-^[H@@@@@@[[@[[@@@@@@@@@@@@@@F:@@@@@@@@&@@@@@@@@@@@@KN
)@@G@@@@@@@@@@@_7_@@@@E5@@@@@@@[[@*%@)+^[9@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KO
)@@G@@@@@@@@@@@@@@@&-^]T@@@@@@[[@[[@@@@@@@@@@@@@@F:@@@@@@@@&@@@@@@@@@@@@@@@@@@KP
)@@G@@@@@_7_@@@@E5@@@@@@@[@@@@^@)^@)@@@@PW^]@@@@@>=@>"@@@@@@@@@@@@@@@@@@@@@@@@KQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KR
)@@G@@$MAIN$      @@^@@^@@@@@]@@@#@ @@@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@AVLTEST     I5SBMKAVL$BALANCE I5:BMKAVL$COMMON  KU
)@@G@@I53BMKAVL$DELETE  I6@BMKAVL$DELKEYS I6EBMKAVL$DELRANKSI6RBMKAVL$DISPLAY KV
)@@G@@I6ZBMKAVL$INSERT  I6:BMKAVL$INSKEYS I62BMKAVL$INSRANKSI6/BMKAVL$KTEST0  KW
)@@G@@I3TEPKAVL$TRAVERSEI8^BMKBGET        ABJ^JFEDIT$       @MCDIJEDIT$AEDIT  KX
)@@G@@K5OEIKEDIT$ALF    KTBEEJEDIT$ASC    J"SESJEDIT$INT    @N'DIJEDIT$PRT    KY
)@@G@@KE$EDKEDIT$S      @O3DIJEDIT$TBL    @P(DIJEDIT$UOM    @P3DIJERU$        KZ
)@@G@@J<(EDK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@$IBANK      @@@@@Q$DBANK      @[]@@^AC9A85^@)^@)LB
)@@G@@ET5IL6HD6GD?^[-H1=^[BIL\I94H@)H9&^[EI(6G(,HD?G*)@%[\=]ET4IL(I[>G))CL-IT3LC
)@@G@@ ))D(\IL\H1>^[3GD8GD4HD?HD3 ))HD,^[-^[AGD<I-\IL(@@@@@/@@@[@^@]@@C@@@@@@9LD
)@@G@@@@@[@^@@O@E@@@@@@6@@@[@^@@-@EO@@@@@0@@@[@^@@6@E5@@@@@%@@@[@^@[+@F:@@@@@=LE
)@@G@@@@@[@^@]K@HH@@@@@_@@@[@^@[M@JX@@@@@3@@@[@^@[<@K\@@@@@$@@@[@^@[N@MM@@@@@!LF
)@@G@@@@@[@^@[2@N>@@@@@G@@@[@^@@ @PR@@@@@Y@@@[@^@@T@PW@@@@@#@@@[@^@[\@P5@@@@@MLG
)@@G@@@@@[@^@]V@R=@@@@@-@@@[@^@[ @T_@@@@@D@@@[@^@[?@V^@@@@@P@@@[@^@[U@W0@@@@@SLH
)@@G@@@@@[@^@@I@YE@@@@@A@@@[@^@@X@YS@@@@@V@@@[@^@@L@Y5@@@@@J@@@[@^@@ @ZA@@@@@@LI
)@@G@@@@@[@^@D)@ZF@@@@@=)@@]@ @@9^@@@@@@@M)@@@@ @@5^@9@@@@@A)@@@@ @@B^[,@@@@@@LJ
)@@G@@)@@@@ @[$^[5@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AVLDK       @@Y@@@AVLDR LK
)@@G@@      @@/@@@AVLDSP      @@$@@@AVLIK       @@3@@^AVLIR       @@9@@^AVLSK LL
)@@G@@      @@3@@@AVLSR       @@9@@@AVLTRA      @@%@@@AVL$ALOAD2  @@6@@FAVL$ALLM
)@@G@@OAD4  @@6@@IAVL$ALOAD5  @@6@@LAVL$ASTOR2  @@6@@QAVL$ASTOR4  @@6@@SAVL$BALN
)@@G@@LANCE @@=@@@AVL$DATA    @[C@@@AVL$DELETE  @@!@@@AVL$INSERT  @@0@@)AVL$KTLO
)@@G@@EST0  @@-@@@AVL$LOCATE  @@0@@@AVL$NALOAD1 @@6@@CAVL$NALOAD2 @@6@@EAVL$NALP
)@@G@@LOAD4 @@6@@HAVL$NALOAD5 @@6@@KAVL$NALPHA  @@=@[?AVL$NASTOR1 @@6@@NAVL$NALQ
)@@G@@STOR2 @@6@@PAVL$NASTOR5 @@6@@UAVL$ROUTINE @@6@@@AVL$RTEST   @@9@@FBGET  LR
)@@G@@      @@J@@@BREL        @@J@@5EAPRT$      @@A@@]ECHAR$      @@S@@/ECLR$$LS
)@@G@@      @@S@@OECOLN$      @@#@@@ECOL$       @@#@@EECOPY$      @@V@@&EDECF$LT
)@@G@@      @@P@@=EDECV$      @@P@@<EDITR$      @@S@@YEDITX$      @@S@@+EDIT$ LU
)@@G@@      @@S@@JEMSGR$      @@V@[YEMSG$       @@V@[+EPACKC$     @@V@@YEPAD$ LV
)@@G@@      @@M@@@ERASE$      @@M@@WESKIP$      @@#@@[E$ASCII$    @@D@@@E$ASC$LW
)@@G@@      @@G@@@E$CHAR$     @@S@@@E$DTBL$     @@@@@@E$PTRL$     @@V@[O@@@@@@LX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LASTD$      @@@^#V@@@@@@LY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MA
)@@G@@*[S@@@*SDFF*@ @@@@@RUN,A AKS,,ALAN,99,99999     @#@@@@@SYM PRINT$,,PRULCMB
)@@G@@@]@@@@@FREE TPF$  @^@@@@@ASG,T TPF$.,///9999    @]@@@@@ASG,A AVL  @D@@@@MC
)@@G@@@ALAN*LIB.USE,A ASM$PF,ALAN*RLIB.,MAP$PF,ALAN*RLIB.   @]@@@@@FLIST AVL. MD
)@@G@@@#@@@@@LINK,S AVLTEST   @[@@@@@PREP @]@@@@@PRT,TL     ___@@@EST   @[@@@@ME
)@@G@@@PREP @]@@@@@PRT,TL     ___@@@E     @#@@@[GROUPI*[S@@@*SDFF*@#@@@@@USE TMF
)@@G@@PF$$$,TPF$  @^@@@@@ASG,T TPF$$,///256     @#@@@@@USE TPF$,TPF$$   @ @]@@MG
)@@G@@@LOAD,S AVL.AVL$P,.DOC/AVL$   @^@@@]@LOAD,S AVL.DOC/AVL$    @^@@@@@LOAD,MH
)@@G@@R AVL.RLIB-RELS   @^@]@@@LOAD,O AVL.AVL$PROCS   @^@@@]@LOAD,OS AVL.AVL$PMI
)@@G@@ROCS  @#@@@@@SAVE,PL RLIB.    @]@@@@@PREP RLIB. @]@[@@@CHG,V RLIB.@#@@@[MJ
)@@G@@@CHG,VP RLIB.     @]@@@@@FREE TPF$  @#@@@@@USE TPF$,TPF$$$  @#@@@@@FREE,MK
)@@G@@A TPF$$$    ___@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ML
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*[S@@@*SDFF*@ @A@^      MM
)@@G@@    INCLUDE   'AVL$P'   @^@B@A          AVL$PROCS     @#@^@# AVL$TREE ' MN
)@@G@@',2   @]@@@^ AVL$TREE 2 @#@ @# AVL$NODE 'TZR'   @#@ @# AVL$NODE 'TZA'   MO
)@@G@@@#@ @# AVL$NODE 'XNR'   @#@ @# AVL$NODE 'XOR'   @#@ @# AVL$NODE 'XNI'   MP
)@@G@@@#@ @# AVL$NODE 'VALUE' @#@ @# AVL$NODE 'XNM'   @#@ @# AVL$NODE 'STZ'   MQ
)@@G@@@#@ @# AVL$NODE 'T'     @G@@@           AVL$INIT 'TZR' 'TZA' 'XNR' 'XOR'MR
)@@G@@ 'XNI' 'VALUE' 'XNM' 'STZ' 'T'@[@@@#.     @#@^@# AVL$TREE ' ',2   @]@@@^MS
)@@G@@ AVL$TREE 2 @G@@@           AVL$INIT 'R8' 'STC' 'SRA' 'SHR' 'SHL' 'SDA' MT
)@@G@@'SCZ' 'R6' 'SDR'  @#@ @# AVL$NODE 'R8'    @#@ @# AVL$NODE 'STC'   @#@ @#MU
)@@G@@ AVL$NODE 'SRA'   @#@ @# AVL$NODE 'SHR'   @#@ @# AVL$NODE 'SHL'   @#@ @#MV
)@@G@@ AVL$NODE 'SDA'   @#@ @# AVL$NODE 'SCZ'   @#@ @# AVL$NODE 'R6'    @#@ @#MW
)@@G@@ AVL$NODE 'SDR'   @#@ @# AVL$NODE 'R4'    @#@ @# AVL$NODE 'R2'    @#@ @#MX
)@@G@@ AVL$NODE 'R1'    @#@ @# AVL$NODE 'R3'    @#@ @# AVL$NODE 'R9'    @#@ @#MY
)@@G@@ AVL$NODE 'R5'    @#@ @# AVL$NODE 'R6'    @#@ @# AVL$NODE 'R7'    @F@@@ MZ
)@@G@@          AVL$INIT 'R1' 'R2' 'R3' 'R4' 'R5' 'R6' 'R7' 'R8' 'R9'   @[@@@^NA
)@@G@@.     @]@@@^ AVL$TREE   @E@@@           AVL$INIT 1,-1 2,-2 3,-3 4,-4 5,-NB
)@@G@@5 6,-6 7,-7 ;     @G@@@                   8,-8 9,-9 10,-10 11,-11 12,-12NC
)@@G@@ 13,-13 14,-14 15,-15   @]@ @^ AVL$NODE 1 @]@ @^ AVL$NODE 2 @]@ @^ AVL$NND
)@@G@@ODE 3 @]@ @^ AVL$NODE 4 @]@ @^ AVL$NODE 5 @]@ @^ AVL$NODE 6 @]@ @^ AVL$NNE
)@@G@@ODE 7 @]@ @^ AVL$NODE 8 @]@ @^ AVL$NODE 9 @]@ @^ AVL$NODE 10@]@ @^ AVL$NNF
)@@G@@ODE 11@]@ @^ AVL$NODE 12@]@ @^ AVL$NODE 13@]@ @^ AVL$NODE 14@[@@@# END  NG
)@@G@@___@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*[S@@@*SDFF*@#@]@@      NH
)@@G@@    MASMLIB @#@@@]/         AXR$    @#@@@]          FUNC$   @ @@@@      NI
)@@G@@    INCLUDE   'PIO$DEF' @#@@@@          IBANK   @[@@@@.     @F@@@@. PIONNJ
)@@G@@P$ - ROUTINE TO DYNAMICALLY ADD A NEW PAGE TO THE PAGE QUEUE@[@@@@.     NK
)@@G@@@^@@@@.  LA,U  A1,PAGEAREA    @^@@@@.  LA,U  A2,NEWPAGE     @^@@@@.  LMJNL
)@@G@@   X11,PIONP$     @[@@@@.     @#@@@@. USES: X11,A1-A3 @[@@@@.     @]@@@@NM
)@@G@@PIONP$*     @C@@@@          SX        X10,A3            . SAVE X10@H@@@@NN
)@@G@@          LXM,U     X10,,A1           . GET PAGING ADDRESS IN COMMON PLANO
)@@G@@CE    @E@@@@          LOCK      PASEMA            . LOCK THE PAGE QUEUE NP
)@@G@@@F@@@@          LA        A1,PALPL          . GET THE CURRENT LAST PAGE NQ
)@@G@@@H@@@@          TNZ       A1                . SKIP IF THERE ARE OTHER PANR
)@@G@@GES AROUND  @H@@@@          SA        A2,PAFPL          . NO OTHER PAGESNS
)@@G@@; THIS MUST BE FIRST    @H@@@@          TZ        A1                . SKNT
)@@G@@IP IF THIS IS THE FIRST (ONLY) PAGE @H@@@@          SA        A2,PAGNPL,NU
)@@G@@A1      . NEW PAGE IS NEXT FROM OLD LAST PAGE   @H@@@@          SA      NV
)@@G@@  A1,PAGPPL,A2      . OLD LAST PAGE IS PREVIOUS TO NEW PAGE @H@@@@      NW
)@@G@@    SZ        PAGNPL,A2         . THERE IS NO NEXT PAGE FROM NEW PAGE   NX
)@@G@@@H@[@@          SZ        PAGIOL,A2         . AND THERE IS NO FILENAME ANY
)@@G@@TTACHED     @G@@@[          SZ        PAGFW,A2          . CLEAR THE FLAGNZ
)@@G@@S AND IO LINK     @D@@@@          SA        A2,PALPL          . NEW LASTOA
)@@G@@ PAGE @E@@@@          UNBLOCK   PASEMA            . LET THE QUEUE GO    OB
)@@G@@@D@@@@          LX        X10,A3            . RESTORE X10   @C@@@@      OC
)@@G@@    J         0,X11             . RETURN  @[@@@@.     @#@@@@          ENOD
)@@G@@D     ___@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OE
)@@G@@*[S@@@*SDFF*@A@@@@@RUN,A AKS,016118ALAN,ALAN,10,999   @]@@@@@ASG,A PIO$ OF
)@@G@@@]@@@@@FREE TPF$  @^@@@@@ASG,T TPF$.,///1000    @B@@@@@ALAN*LIB.USE,AX AOG
)@@G@@SM$PF,RLIB.,MAP$PF,RLIB.@]@@@@@COPY PIO$. @[@@@@@FLIST@#@@@@@LINK,S PIOTOH
)@@G@@EST   @]@@@@@PACK,P     @]@@@@@PRT,TL     @]@@@@@ADD,LP TEST@#@@@@@SYM POI
)@@G@@RINT$,,PRULC___@@@@SYM PRINT$,,PRULC___@@@@@@@@@======@@^@@ @@@@@@@@@@@@OJ
)@@G@@@@ @@@@@@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@F!)[NM@@@@@@@]@@@@OK
)@@G@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@A@@A@@#@@@@@@@@@@@^@@@@#/@@@@@@OL
)@@G@@@^@@@]@^@[@[@ @@@]K^@@@)^[?H9$HD,^[\H0)I-*G*)E(,HD6GD< ))DC)I9(IT*^[!H92OM
)@@G@@G*)IT4IL\H1$H-9^[4H[-I))DC)H[-G))I-*G*)^@))[S@@@@]@@[#@L@@@@IT\G14I9-IL>ON
)@@G@@^[4H9\H-3^[-I))H(9^[=HD3@@\@C@)BL@C\@@@___@@@___@@@___@@@___@@@___@@@___OO
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___OP
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___A])@@LQ'!@@@C@'@@@+@0@C,OQ
)@@G@@:[@@C!/K@@C%C[@@C![[E@@@ @E@@[G8)@[\;G)@@=W8)@[0T8)@[0[C%@@];G)@@=W8)@@WOR
)@@G@@[^%@@]CC%@@]G8)@@#;CK@@MC@0@@HH80@@#?C'@@]/K@@C%;G0@@=W@0@@IT@0@@IK80@@#OS
)@@G@@;*)@@MQ;)@@@[^%@@[C8K@@@[CY@@@ @I@@]C8")@@:9I@@@/K@@C*[^\@@@C@K@@J/K@@C)OT
)@@G@@ ^J@@@[C'@@[C8U@@@Q])@@L/KF@@@@\@@@@___@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@$MAIN$      @@^@@^@@@@@]@@@#@ @@@@@]@@@@@@@@@@@@OV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@PIOPAI$     F!T[NM@@@@@@OX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OZ
)@@G@@$IBANK      @@@@@[$DBANK      @@#@@@@]@@[@@K@@@@G*)E(JD*)AC1A@0 84AK) [#PA
)@@G@@D[DD(K L[CLN 0( ))GD,G))DC)I-*HD,HS)I-*G(2G*)GD2G*)H(\IL> 0)DC)G-\^[,H94PB
)@@G@@)[S@@@@]@@[I@O@@@@HT,H97@@@@@@@@@[@^@@\@C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@PC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@PD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*[S@@@*SDFF*@[@A@ /.    PE
)@@G@@@#@@@A/         AXR$    @#@@@A          FUNC$   @ @@@A          INCLUDE PF
)@@G@@  'PIO$DEF' @#@@@A          IBANK   @ @A@ . THE INITIALIZATION ROUTINE  PG
)@@G@@@C@@@A. PIOPAI$ - PAGE AREA INITIALIZATION ROUTINE    @[@@@A.     @[@@@ PH
)@@G@@.     @B@@@ .  LA    A1,(LENGTH,ADDRESS OF PAGEAREA)  @^@@@ .  LA,U  A2,PI
)@@G@@PAGESIZE    @#@A@ .  LMJ   X11,PIOI$@^@@@A.  LMJ   X11,PIOPAI$    @ @@@APJ
)@@G@@.  A1 = PAGE AREA ADDRESS     @[@@@A.     @#@@@A. USES: X11,A1-A5 @[@@@ PK
)@@G@@.     @]@@@ PIOPAI$*    @C@@@           SX        X10,A5            . SAPL
)@@G@@VE X10@H@@@           LXM,U     X10,,A1           . GET THE PAGING AREA PM
)@@G@@ADDRESS INTO X10  @I@@@A          LA        A3,PASEMA         . GET THE PN
)@@G@@EXISTING TEST AND SET CELL IF AN    @F@C@A          AND       A3,CBSL(30PO
)@@G@@,30,17,0) . IGNORE BITS 30, 17-0    @E@D@C          AND       A3,(-(1*/3PP
)@@G@@0),0)   . IGNORE BITS 30, 17-0@E@@@D          AND       A3,(-(1*/12),0) PQ
)@@G@@  . IGNORE BITS 30, 17-0@G@@@A          JE        A4,TSCELL PIO030  . EXPR
)@@G@@IT IF TEST AND SET CELL OK    @F@@@           LA        A4,TSCELL       PS
)@@G@@  . GET A TEST AND SET CELL   @F@@@           SA        A4,PASEMA       PT
)@@G@@  . INITIALIZE THE SEMAPHORE  @G@A@           ER        TSQRG$          PU
)@@G@@  . REGISTER TEST AND SET QUEUEING  @G@@@           SZ        PAPQH     PV
)@@G@@        . CLEAR THE PAGE QUEUE HEADER     @[@@@ .     @G@@@ . ADJUST THEPW
)@@G@@ GIVEN PAGESIZE TO BE A MULTIPLE OF THE NUMBER OF WORDS     @#@@@ . PER PX
)@@G@@PREP FACTOR @[@@@ .     @F@@@           AA,U      A2,PREPW-1        . COPY
)@@G@@MPUTE COVERED QUOTIENT  @F@@@           DSL       A2,36             . GEPZ
)@@G@@T READY FOR A DIVIDE    @F@@@           DI,U      A2,PREPW          . DIQA
)@@G@@VIDE BY THE PREP FACTOR @G@@@           MSI,U     A2,PREPW          . ANQB
)@@G@@D COMPUTE MULTIPLE OF PREPW   @D@@@           SA        A2,PAPS         QC
)@@G@@  . SET PAGE SIZE @F@@@           DSL       A2,36             . GET READQD
)@@G@@Y FOR A DIVIDE    @G@@@           DI,U      A2,28             . COMPUTE QE
)@@G@@# OF SECTORS/PAGESIZE   @F@@@           SA        A2,PAPSS          . SEQF
)@@G@@T PAGESIZE IN SECTORS   @F@@@           LA        A2,PAPS           . GEQG
)@@G@@T PAGESIZE IN WORDS BACK@[@@@ .     @C@@@ . COMPUTE THE HIGHEST USABLE PQH
)@@G@@AGING ADDRESS+1   @[@@@ .     @E@@@           AA,U      A2,PAGHL        QI
)@@G@@  . ADD IN HEADER LENGTH@E@@@           SSL       A1,18             . GEQJ
)@@G@@T PAGE AREA LENGTH@C@@@           LA        A3,A1             . INTO A3 QK
)@@G@@@F@@@           AN,U      A3,PAHLEN         . MINUS LENGTH OF THE HEADERQL
)@@G@@@E@@@           JG        A3,PAPS PIO030    . SKIP IF NO PAGES    @ @@@ QM
)@@G@@          DSL       A3,36     @F@@@           DI        A3,A2           QN
)@@G@@  . DIVIDE BY (PAPS+PAGHL)    @H@@@           MSI       A3,A2           QO
)@@G@@  . COMPUTE REAL LENGTH OF PAGING AREA    @G@@@           AU,U      A3,PQP
)@@G@@ABEG          . A4=LAST ADDR+1 OF PAGE AREA     @[@@@ .     @H@@@ . BUILQQ
)@@G@@D AN ACCESS WORD (PAPS+PAGHL,PABEG)  THAT WILL BE USED TO INITIALIZE    QR
)@@G@@@B@@@ . EACH PAGE AND LINK THEM UP TOGETHER     @[@@@ .     @I@@@       QS
)@@G@@    LSSL      A2,18             . PLACE PAGESIZE+PAGE HEADER LENGTH IN IQT
)@@G@@NC    @F@@@           LXM,U     A2,PABEG          . GET PAGING AREA ADDRQU
)@@G@@ESS   @E@@@           SA        A2,PAFPL          . FIRST PAGE ADDRESS  QV
)@@G@@@G@@@           LA,U      A1,0              . INITIAL PREVIOUS PAGE ADDRQW
)@@G@@ESS   @[@@@ PIO010@F@@@           SA        A1,PAGPPL,A2      . SET PREVQX
)@@G@@IOUS PAGE LINK    @E@@@           SZ        PAGFW,A2          . AND CLEAQY
)@@G@@R ANY FLAGS @G@@@           LA,U      A3,,*A2           . SAVE CURRENT PQZ
)@@G@@AGE & COMPUTE NEXT@[@@@ .     @H@@@ . IF A2 (NEXT PAGE ADDRESS) IS GREATRA
)@@G@@ER OR EQUAL TO A4 (LAST ADDRESS IN PAGING @H@@@ . AREA) THEN A3 POINTS TRB
)@@G@@O THE LAST VALID PAGE ADDRESS.  ACTUALLY, SINCE A4 HAS@H@@@ . BEEN COMPURC
)@@G@@TED AS AN EVEN MULTIPLE OF THE PAGESIZE AND HEADER LENGTH, A2     @E@@@ RD
)@@G@@. SHOULD NEVER BE GREATER THAN A4, BUT ONLY EQUAL TO IT.    @[@@@ .     RE
)@@G@@@F@@@           JE,U      A4,,A2 PIO020     . SKIP IF NEXT PAGE NO GOOD RF
)@@G@@@G@@@           SA        A2,PAGNPL,A3      . PLACE LINK TO THE NEXT PAGRG
)@@G@@E     @F@@@           LA        A1,A3             . MAKE CURRENT THE PRERH
)@@G@@VIOUS @C@@@           J         PIO010            . LOOP    @[@@@ PIO020RI
)@@G@@@F@@@           SZ        PAGNPL,A3         . A3=LAST VALID PAGE ADDRESSRJ
)@@G@@@F@@@           SA        A3,PALPL          . SET LAST PAGE ADDRESS     RK
)@@G@@@[@@@ PIO030@G@@@A          LA,U      A1,,X10           . KEEP PAGING ARRL
)@@G@@EA ADDRESS IN A1  @D@@@           LXM       X10,A5            . RESTORE RM
)@@G@@X10   @E@@@           J         0,X11             . RETURN TO CALLER    RN
)@@G@@@[@@@ .     @G@@@ TSCELL    T$CELL                      . GENERATE A TESRO
)@@G@@T AND SET CELL    @[@@@A.     @#@@@A          END     ___@@@G: EDITING ERP
)@@G@@LEMENT CYCLE &, CURRENT CYCLE IS &  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@RQ
)@@G@@9(K MU9(0 MW9:) W@B4@ V_C8K MUC@!@@]=8)@@[[@) MS=8)@@][0)^24C'0@@[=8)@@^RR
)@@G@@*[S@@@*SDFF*@]@@@@@PIOTEST    @#@@@@@PIOTEST PC/2     @#@@@@@PIOTEST PC/RS
)@@G@@3     @#@@@@@PIOTEST ACT/2    @#@@@@@PIOTEST ACT/3    @^@@@@@PIOTEST PC/RT
)@@G@@2,ACT/2     @^@@@@@PIOTEST PC/2,ACT/3     @^@@@@@PIOTEST PC/3,ACT/3     RU
)@@G@@@^@@@@@PIOTEST PC/3,ACT/2     @#@@@@@PIOTEST PS/448   @^@@@@@PIOTEST PS/RV
)@@G@@448,PC/2    @^@@@@@PIOTEST PS/448,PC/3    @^@@@@@PIOTEST PS/448,ACT/2   RW
)@@G@@@^@@@@@PIOTEST PS/448,ACT/3   @ @@@@@PIOTEST PS/448,PC/2,ACT/2    @ @@@@RX
)@@G@@@PIOTEST PS/448,PC/2,ACT/3    @ @@@@@PIOTEST PS/448,PC/3,ACT/3    @ @@@@RY
)@@G@@@PIOTEST PS/448,PC/3,ACT/2    @^@@@@@PIOTEST 1F/0,ACT/2     @^@@@@@PIOTERZ
)@@G@@ST 1F/0,ACT/3     @^@@@@@PIOTEST 1F/0,PC/2,ACT/2@^@@@@@PIOTEST 1F/0,PC/2SA
)@@G@@,ACT/3@^@@@@@PIOTEST 1F/0,PC/3,ACT/3@^@@@@@PIOTEST 1F/0,PC/3,ACT/2@ @@@@SB
)@@G@@@PIOTEST 1F/0,PS/448,ACT/2    @ @@@@@PIOTEST 1F/0,PS/448,ACT/3    @A@@@@SC
)@@G@@@PIOTEST 1F/0,PS/448,PC/2,ACT/2     @A@@@@@PIOTEST 1F/0,PS/448,PC/2,ACT/SD
)@@G@@3     @A@@@@@PIOTEST 1F/0,PS/448,PC/3,ACT/3     @A@@@@@PIOTEST 1F/0,PS/4SE
)@@G@@48,PC/3,ACT/2     _@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SF
)@@G@@*[S@@@*SDFF*@#@@@@@MASM,E PIO$PROCS ___@@@@EOF  ___@@@0000000000/P/2    SG
)@@G@@@O@[@@SAVE$LOAD    206024RIECK              206024 RIECK  01/19 20:27   SH
)@@G@@  F30    10    B ST079  *[S@@@*SDFF*@#@@@[@USE TPF$$$,TPF$  @^@@@[@ASG,TSI
)@@G@@ TPF$$,///256     @#@@@[@USE TPF$,TPF$$   @A@]@[@LOAD,T MASMLIB.MSD,.OMNSJ
)@@G@@,.ASMP,.DOC @ @^@]@LOAD,S PIO$.PIO$P,.DOC/PIO$  @^@@@^@LOAD,S PIO$.DOC/PSK
)@@G@@IO$   @E@@@]@LOAD,R PIO$.PIO$,.PIO$STATS,.PIO$TRACE,.PIONP$,.PIOPAI$    SL
)@@G@@@^@#@]@LOAD,O PIO$.PIO$PROCS  @^@@@#@LOAD PIO$.PIO$PROCS    @#@ @[@SAVE,SM
)@@G@@L RLIB.     @#@@@ @SAVE,LP RLIB.    @]@ @[@PACK RLIB. @]@@@ @PREP RLIB. SN
)@@G@@@]@ @[@PREP RLIB. @]@@@]@CHG,V RLIB.@]@@@[@FREE TPF$  @#@@@[@USE TPF$,TPSO
)@@G@@F$$$  @#@@@[@FREE,A TPF$$$    ___@@@          END     @[@@@@.     @D@@@@SP
)@@G@@. ALL OF THE FOLLOWING IS PART OF THE MASM DEFINITION.@[@@@@.     @^@@@@SQ
)@@G@@          $LEVEL    ,1  @#@@@@          DEF     *[S@@[*SDFF*@B@@@AE@)DC)SR
)@@G@@D8)^)) *)E[-G9>G))DC\D8)EL\I(4HD,G(3@#@@@AD9KE-DD9I^[< -\G1&@#@@@AD9KE-DSS
)@@G@@D9I^[> -\H0)@#@@@AD9KE-DD9I^[& -\H0)@#@@@AD9KE-DD9I^[2 -\H0)@]@@@AETKCD#ST
)@@G@@C*)AK8@C@@@ACT D1OC(M^[KDDJ^)) *)E[-G9>G))DC\D8)EL\I(4HD,G(3@]@@@AETKCD#SU
)@@G@@C*)^@)@H@@@ACT D1OC(M^[^G(3HD$H1>G))GD,G))DD!I[?G(!G(,I->G))GL9^[[H--H0)SV
)@@G@@DS,^[NI->GL+G(,IS,@]@@@AETKCD#C*)^@)@^@@@AADDH14IL\G-5GT4HD\H0,^@)@K@@@ASW
)@@G@@^[KDDJ^))^[(IS)^[-^@)GT\H-?G(<I-(H9,^@)H9&^@)GD<I-(I1(I-9^[2G(>H14IL-H14SX
)@@G@@^[3I(+IL\I(4HD,G(3^[4H8)@K@@@A^[0G(2G1\IL!^[0GD$G(=^[(H10I(4 9\I(4I[5I),SY
)@@G@@^[[^[0H9\H))H9&^@+I[-G9>IS+^[(IS)H(-HD,I--HD,G(=^[+JC)@K@@@A^[4H[>IT>^[2SZ
)@@G@@H95I-(H1>IS?^[7H[(GT*^[<H9,I--HD,^[4H[>^[!H93I))IL>GT>H14H-9^[2G(&G(2G(,TA
)@@G@@GT>G))G--I--@K@@@A^[2G(-G))G12H9!^@)H92^@)I92HD4I->H0)I-\^@)GC)^[&HD?G*,TB
)@@G@@^@)DD,^[4H[(IS)H(-H1,G(2 ))IT*H95H-=^[-^@)@L@@@A^[3I(+IT>ID5G(,I))IL>G1>TC
)@@G@@IL>H1<G*)GL>^[!GD=G*)I-\^[4H[>^[3GD!G*)I[\IT(I-(H9,^[7HD4H[(H0)GC)G1(H->TD
)@@G@@ ))^@)@J@@@A^[4H[>^[=GD4GC)I9(H-?^[!H93I))H-(HT>H-9^[-H-2G(-G-9^@)GL>^[(TE
)@@G@@H0)^[!G(!H92JC?^@)GD6H9(G-(H1$@L@@@A^[5H1,G(<G(3IT-IL9^[D 9J 0)D9&^[<H95TF
)@@G@@IL3G*?^[4H[>^[4IL-G->^[\G1&^[(IS)GD,^[(H1<IL>GD3G(=^[5IT-G9>^[\G0)@L@@@ATG
)@@G@@^[!G(!H92JC?^[+I(4^[&H92^[3H9!G*)I[2H9$IL-H(3^[7H[(GT*^[-IL>^[D 9J^@)GL\TH
)@@G@@I(,G)?^[-^@)IT(G9,HD&HD<GD,I))@K@@@A^[0G(2G1\IL!GD,GT>^@)HD,GT2G(-IT>^@)TI
)@@G@@I9(H-?^[+G*)G1\I(,G))G(6G(,^[7HD4H@)G92G(-I->IK)H(>H(\IL9^@)@K@@@A^[5IT-TJ
)@@G@@G9> 0)E(3HD,G8)I-*HD3^[0GD<HT-G9> ))I-*G*)I(3G(2^[!GD9^@)H90I-(H((JL>^@)TK
)@@G@@GC)^[0IL\G92GD!^93@L@@@A^[D 9J^@)I[>IL&H92H(-H1<G*)GL9^[6GD2JD(H1$^[<G(2TL
)@@G@@I--HD,^[\I[>IL-I-(H9,GD?^[0GD2GD!G(4G(2IS)IT5GT*^[-IS)@K@@@A^[4H[>^[0GD$TM
)@@G@@G*)^[3HD'G*?^@)I-*G*)^[,I(!GL>IK)H9&^[0GD$G(3 ))GD,G))I92HD4G*!I-*IL\I($TN
)@@G@@H[3^[\H0)^@)@J@B@A^[7IL(I->IS,^[NHD,GT>^[4H[>^[,I(!GL>IK)H9&^[0GD$G(3^[(TO
)@@G@@G0)G1(H1(I-> ))GD,^[D 9J^[2G(1I(>IT4@J@@@B^[7IL(I->IS,^[NHD,GT>^[4H[>^[,TP
)@@G@@I(!GL>IK)H9&^[0GD$G(3^[(IS)G1(H1(I-> ))GD,^[D 9J^[2G(1I(>IT4@K@@@A^[$G(,TQ
)@@G@@G(2GD?H-9^[7HD?H))^[<GD5IT>^@)GC)I[2G(6HD\I(3H-9^@)I(3G(=^@)I[-G9>^[4H8)TR
)@@G@@GL>^[2G(5IT>G);^[-@L@@@A^@+H->GD3I))IL>GT>H14H-9^[5IT>G)+^[-H-$H92HD4H[!TS
)@@G@@^[(IS)I(3G(=^[4H8)G->I->IL!HD,G*)I-*G*)H1>J[4^[0GD$G*)@#@@@A^[4H8)IL>I(3TT
)@@G@@G*,^@)@]@@@AETKCD#C*)^@)@L@@@A^[OH[>^@)GD2G(-^[\G0)H(>H(\IL9^[&H92^[0GD$TU
)@@G@@HD,G8)H(-JC)GL>^[5IT>G))IT(H(5H-4GD,G(\I(3H-9^[+JC)H(\IL>^@)@L@@@A^[4H[-TV
)@@G@@H0)H9,G*)GD<I-(I1(I-9^[&H92^[\H1>^[\IK)H(\IL>^[&HD?G(3BS)G1\IK)HD,IT4GD,TW
)@@G@@GT> ))HD,I[5I))G12H9!^@)@L@@@A^[\H1>^@)G1(H->^[-H1=^@)H95I-0I(4^[4H8)GD,TX
)@@G@@H94H[>IK)G1(H->^[!GD9^[5I-(H-(JL>^[4H[>^[3GD!G*)I[-G9(H1$^@)@K@@@A^[-IL>TY
)@@G@@GC?^[>I1>H0)G1\IK)IT(H(5H-4GD,G(\I(3^[D 9J ))GD?H-\I9(H1$^[-^[+GD?GD,GT>TZ
)@@G@@^[\G0)I(3GD$G*)^@)@ @@@A^[+G(4I9>G(,^[4H[>^[&HD?G(3 0)@]@@@AETKCD#C*)^@)UA
)@@G@@@K@@@A^[OH[>^@)I[-GT:GD$G*)^[(I-3G(?G0)^[<H9,IT(IT4IS)^[\G0)^[>J[<H-5IT(UB
)@@G@@I1>H-9^@)DC!GL-H1:^@)GT\G->^@)@K@@@A^[7H[(GT*^[(IS)GD<I-(I1(I-9^[2G(>H14UC
)@@G@@IL-H14^[-H1=^[4H[(IL= 91I(-IL4G(2 (7H92G))HD,IT>H13HD4HD6G*,@J@@@A^[JH1?UD
)@@G@@JC)I-*G*)^[!HD,H92^[3G(4^[\G0)IL>G9(IT4G(2IS)GD2G*)I(3G(=BK)F@1AC?CC0 ([UE
)@@G@@A*?EK1 (MAS,@]@@@AETKCD#C*)^@)@L@@@A^[OH8)^[5IT>^@)I-*G(3G*)^[2H95I-(H1>UF
)@@G@@IS?^[4H[>^[5IT>^[!I(3I))I[2H96HD=G*)GC)I[-GT:G(4^[<H9,I--HD,HD,G8)@B@@@AUG
)@@G@@^[4H[>^[&H9?H-\I9(H1$^[(H1&H92H(-I-(H9,BK)@]@@@AETKCD#C*)^@)@L@@@A^@)^@)UH
)@@G@@^@)^@)^@1 0)CD,^[(H14G(2H1-H))G1(H->H1-H(>^[\H0)I9*HD<H@)I-*G*)DC\D8)HD3UI
)@@G@@^[4H8)GL>^[0GD$G(= 0)^@)@]@@@AETKCD#C*)^@)@H@@@A^@)^@)^@)^@)^@2 0)E-*G*)UJ
)@@G@@GD=G-2G(3IS)H9&^[-^[=G(3HD$H1-I->G))I[-G9(H1$^[-IL>GC,@]@@@AETKCD#C*)^@)UK
)@@G@@@J@@@A^[[G14G(2^@)GD,^@)HD,HD4HD-H-(JL-I-(H9,^@)GT-H-? ))^[-H1=^[4H[>^[0UL
)@@G@@GD<HT>I))H[-IS)GL>G(,^@)@K@@@A^[>IT4GD+H-(IT*G(= ))GT>IL4GD(H0)DC\D8)H90UM
)@@G@@G(2GD4HD\H13^[!GD9^[+G*)I[>IL&H92H(>G))IT(H((H--IK)I-\@ @@@A^[>J[>GT5I-(UN
)@@G@@I1>^[2G(1I(>IT4IS'@]@@@AETKCD#C*)^@)@A@@@A^@)^@)^@)^@)^@1 0)EL>GD=^@*E[DUO
)@@G@@D9M^)(@]@@@AETKCD#C*)^@)@B@@@A^@)^@)^@)^@)^@2 0)E92HD4G*) [KDDJE8= C)^@)UP
)@@G@@@]@@@AETKCD#C*)^@)@C@@@A^@)^@)^@)^@)^@3 0)EL>GD=^@&^[GH9<HS) [KDDJELG^)(UQ
)@@G@@@]@@@AETKCD#C*)^@)@B@@@A^@)^@)^@)^@)^@4 0)E(,H-\GT:^@*E[DD9PD)= C)@]@@@AUR
)@@G@@ETKCD#C*)^@)@K@@@A^[OH[>^@)H1-H(>IS)^[(H0)^[0GD2G(,I-*G(3G(3^@)GD2G*)^[4US
)@@G@@H[>^@)G(,I-2JC)^[0H9(H14IS)^[&H92^[4H[>^@)@E@@@A^[2H95I-(H1>IS)GT\IL2G(3UT
)@@G@@I[\H1=HD,G8)I-\^[4H[>^[&I(,GT4HD\H0,@]@@@AETKCD#C*)^@)@]@@@AETKCD#C*)^@)UU
)@@G@@@ @@@AADOH[>^[KGD$HD,G8)CD2G(- 0)^@)@M@@@A^[OH[>^[0GD$HD,G8)GD2G(-^[(IS)UV
)@@G@@I-*G*)G(3IT>H14HD-H))G1>GD4I(2G*)H9&^[-^[0GD$HD,G8)IT9IT4G(! 0)^[OH[>^[+UW
)@@G@@GD3HD<@M@@@A^[0IL(H1<HD0H->^[+G(*HD,G))HD4IS)I(3G*)HD3^[4H[-I))HD4^[7HD?UX
)@@G@@H))GT\H14GD(H0)I-*G*)H(\IT4^[2G(<G(,I))G--I--^@)@I@@@A^[2G(-G))G12H9!^[\UY
)@@G@@IK)I92HD4I->H0)I-\^[-^[&HD?G*?^[4H[>IL>GL9^[2G(=I(<HD,G8)I-*G*)^@)@J@@@AUZ
)@@G@@^[<H[-H1<G*)I-*GD4^[4H[>^[,G(8I))DC\D8)IL>ID5G(3I))I9(H-?^[-GT4I(-H-?JC)VA
)@@G@@G-\^[-H19^[D 9J 0)@]@@@AETKCD#C*)^@)@L@@@A^[RH[>H0)GD,^[D 9J^[2G(1I(>IT4VB
)@@G@@^[(IS)H(-G-> ))I-*G*)G1\H-?H97HD,G8)H90G(2GD4HD\H13^[4GD:G*)I[?GD<G*,^@)VC
)@@G@@@]@@@AETKCD#C*)^@)@N@@@A^[[^[?HD3I))H9&^[0GD$G(3^[(IS)IT>GD2GT*G(=^[7H[(VD
)@@G@@GT*^[<H9,I--HD,^[=GD4GC)G12H9!^[2G(<G(,I))DC\D8)IL>ID5G(3I-3 0)^@)@M@@@AVE
)@@G@@^[DG0)I-*G*)GD=G-2G(3IS)H9&^[4H[>^[D 9J^[2G(1I(>IT4^[&GD?H-3^[(H14H8)GC)VF
)@@G@@I[-G9>^[=G(&HD,G(=^[4H8)GT\H14GD(H0)@L@@@A^[4H[>^[(H1&H92H(-I-(H9,^[?GD3VG
)@@G@@I))I-2GD,IT&G(2IL>G))I-\^[\IK)G12H9!^[4H[>^[&HD?G*?^[4H[>H0)I-*G*)G--I--VH
)@@G@@@M@@@A^[(IS)H(>IL>H-9^[!H96G(=^[4H8)I-*G*)I(3G(2^93^[+I(&G1>IK)GD2G(-^[&VI
)@@G@@IL\H*)I-*G*)I[-G9>^[\IK)I1(GT> (6G(2IT- 0)@]@@@AETKCD#C*)^@)@O@@@A^[DG0)VJ
)@@G@@I-*G*)IL>ID5G(3I->G))GD=G-2G(3IS)G-\G(3^[,H94^[&GD?H))HD,I-\^[-^[0GD$G*?VK
)@@G@@^[4H[>^[?G(-IT4^[2G(<G(,I-?JC)I(3G(= ))^@)@B@@@A^[5H1?H9<HT>G))I[-G9>^[(VL
)@@G@@IS)H9+I--HD,G(= 0)@#@@@A^[DG0)I-*G(2G*)^@)@N@@@A^[-IL>^[,H8)I[-G9>IS)GT5VM
)@@G@@IL2G(,I-?JC)GD6GD(H--GL?G*)G1\IK)I(3G*?^[4H[>^[-GT4HD6HD4JC)HD3^[=G(-GT4VN
)@@G@@HD6GD4G(=^[\H0)^@)@M@@@A^[-^[1I(>I(>^[-I9-HD4HD,G8)G12G(>^[0GD$G(3 0)^[RVO
)@@G@@H[>H0)GC)I[-G9>^[?GD4G(2^[+G(<H9!G(3^[-I1-HD?GD+H-> ))I-*G*)@F@@@A^[-GT4VP
)@@G@@HD6HD4JC)I9(H-?^[+G*)IL>GD<I-(I1-I->G))I-\^[<H--HD!^[(I),^@)@N@@@A^[RH[>VQ
)@@G@@H0)GC)G12G(>^[0GD$G*)HD3^[\GL4GD(H1>G)?^[(G0)HD4^[(IS)H(-IL:G(=^[-IS)GT\VR
)@@G@@H14GD(H1(H1$^[!H9=HD&HD>G))G--I-- ))@D@@@A^[(I))I9(H-?^[+G*)I92HD4I->H0)VS
)@@G@@H95I))I-\^[4H[>^[&HD?G*,@]@@@AETKCD#C*)^@)@M@@@A^[DG0)I-*G*)IL>ID5G(3I))VT
)@@G@@HD3^[-^[2G(-G)?^[4H[>^[&HD?G*)HD3^[2G(-G))G12H9!^[4H[>^[,G(-IL>IT4^[-G-=VU
)@@G@@IL>IT3 ))^@)@M@@@A^[<H9,I--HD,HD,G8)I-*G*)IL>ID5G(3I->G))GD=G-2G(3IS?^[7VV
)@@G@@H[(GT*^[(IS)HD,^[-H-(G9,H(>H14^[7HD4H@)I-*G*)IT9IT4G(!@M@@@A^[0IL>I[0HD,VW
)@@G@@G8)G1-GT4H92^@*I-*HD3^[2G(=I(<G(3^[4H[>^[ J[>GS$IS)HD,I->IL,GD?^[D 9J^[4VX
)@@G@@H8)GC)H((H1(H(5H*( 0)^@)@G@@@A^[OH[>^[=GD4GC)HD3^[2G(-G))HD,I-\^[4H[>^[&VY
)@@G@@IL>G(=^[0GD$G*?^[-H1=^[(I))HD3@M@@@A^[!GD2HT>G))I-\^[<H9,I--HD,^[4H[>^[=VZ
)@@G@@GD4GC)G12H9!^[4H[>^[-H-(G9,G(=^[-G-=IL>IT3 0)^[OH[>^[=GD4GC)HD3^[4H[>H0)WA
)@@G@@@E@@@A^[4IL-H1&G(2IL>G))I-\^[4H[>^[5IT>IK$IS)GL5G1&G(2^[-IL>GC,^@)@]@@@AWB
)@@G@@ETKCD#C*)^@)@M@B@A^[DG0)I-*G*)IL>ID5G(3I))HD3^[-^[7IL(I-> ))I-*G*)IL>ID5WC
)@@G@@G(3I->G))GD=G-2G(3IS)GD,G))H15H(+G(2^[\G0)I9\IL=IS)I-\@N@@@B^[DG0)I-*G*)WD
)@@G@@IL>ID5G(3I))HD3^[-^[7IL(I-> ))I-*G*)IL>ID5G(3I->G))GD=G-2G(3IS?^[4H[>^[,WE
)@@G@@I(!GL>IK)H9&^[7H92G-3^[4H8)^@)@L@B@A^[4IL-H13G1>IK)HD3^[>J[-H((H1>G),^@)WF
)@@G@@DD&^[4H[>^[-G-=IL>IT3^[!GD4GT*G(3^[4H[>^[-G-=IL>IT3^[4H8)I9*HD<H@)@L@@@BWG
)@@G@@^[4IL-H13G1>IK?^[4H[>^[!I(?I-( (4H[2G(-G))GD<GT>IT3^[&H--G8?^[-H1=^[4H[>WH
)@@G@@^[?GD3I))I92HD4G*)GD=G-2G(3IS)@^@@@B^[-IL>^[>J[-H((H1>G),^@)@M@@@B^[DG0)WI
)@@G@@G((I-*G(2^@*CC(^[4H[>^[2G(1I(>IT4G(=^[-G-=IL>IT3^[!GD4GT*G(3^[4H[>^[-G-=WJ
)@@G@@IL>IT3^[4H8)I9*HD<H@)I-*G*)^@)@M@@@B^[0GD$G*)I9(H-?^[+G*)I92HD4I->H0) [(WK
)@@G@@ 1> 0?^[4H[>^[-H-(G9,G(=^[-G-=IL>IT3 C)GD,G))I-*G*)IT(JL>^[3I[-H13^[4H[>WL
)@@G@@@N@@@B^[>H14HD2G*)I[-G9> ))H92^@*CK(^[4H[>^[&HD?G*)HD3^[,H94^[!I(?I-( (4WM
)@@G@@H[2G(-G))GD<GT>IT3^[-H1=^[4H[>^[2G(1I(>IT4G(=^@)@I@@@B^[-G-=IL>IT3^[(IS)WN
)@@G@@G92G(-I->IK)I-*GD,^[4H[>^[?GD3I))I92HD4G*)GD=G-2G(3IS?^[4H[>H0)^@)@J@B@AWO
)@@G@@^[4H[>^[0GD$G*)I9(H-?^[+G*)I92HD4I->H0) [( 1> 0?^[4H[>^[-H-(G9,G(=^[-G-=WP
)@@G@@IL>IT3 C)GD,G))^@)@L@B@A^[4H[>^[3HD'G*)IT0GD,IS)I-*G*)G(,I-(IL>^[0GD$G*?WQ
)@@G@@^[4H[>^[=GD4GC)I9(H-?^[+G*)I-2GD,IT&G(2IL>G))G12H9!^@)@D@@@B^[4H[>^[=GD4WR
)@@G@@GC)I9(H-?^[+G*)I-2GD,IT&G(2IL>G))G12H9!^@)@L@@@A^[4H[>^[5IT>IK$IS)GL5G1&WS
)@@G@@G(2^[-IL>GC)I-\^[4H[>^[0GD$G*?^[-H1=^[4H[>^[0GD$G*)I9(H-?^[+G*)H(-IL:G(=WT
)@@G@@^[4H8)@N@@@A^[<H9,I--HD,^[=GD4GC)I9*HD<H@)H[-IS)GL>G(,^[!H9=G1(G(= ))G12WU
)@@G@@H9!^[4H[>^[&HD?G*)GD4^[4H[>^[-H-(G9,G(=^[-G-=IL>IT3 0)@F@@@B^[DG0)H1>HD4WV
)@@G@@H[>IK)GT\H1=HD4HD\H0) [[ C)H1\IK) [] C)HD3^[!G(4 ))^@)@L@B@A^[DG0)I-*G*)WW
)@@G@@IL>ID5G(3I->G))GD=G-2G(3IS)G1-H-?IS)I9(I-*HD,^[4H[>^[0GD$G*?^[\IK)I-*G*)WX
)@@G@@IT(JL>^[(IS)H->IT3@M@B@A^[4H[-H0)I-*G*)I[-G9>^[3HD'G*?^[4H[>H0)I-*G*)I[-WY
)@@G@@G9>^[7HD?H))G1(IL3I))GL>^[2G(-G))G12H9!^[4H[>^[&HD?G*)GD4^@)@H@@@B^[4H[>WZ
)@@G@@H0)I-*G*)I[-G9>^[7HD?H))G1(IL3I))GL>^[2G(-G))G12H9!^[4H[>^[&HD?G*)GD4^@)XA
)@@G@@@M@@@A^[4H[>^[-H-(G9,G(=^[-G-=IL>IT3 0)^[DI))I9(H-?^[+G*)IL>GD=^[5IT(H1$XB
)@@G@@^[4H[>^[ J[>GS)EL^D)=^[D 9J^[&I(,GT4HD\H0)@K@@@A^[4H8)I[2H94G(<I))I-*G*)XC
)@@G@@HD,I->G92HD4JC)H9&^[4H[>^[6HD2I-5GD?^[D 9J^[-GT<G(3IS)I-\^[4H[>^[&HD?G*?XD
)@@G@@@O@@@A^[3HD,GT>^[4H[>^[4HD!G*)GL>I-7G(>H0)I-*HD3^@+IL>GD=^[+G(&H92G*)I92XE
)@@G@@HD4G*+^[-H1=^[4H[>^[3I(+IT>ID5G(,I))I92HD4G*)I9(H-?^@)@L@@@A^[+G*)IT5GL3XF
)@@G@@I--H14HD-H)) [4H[(IS)H-\GT:^[(IS)GD,^[(H14G(2H1-H))H9,G*?^[*H97G(6G(2 ))XG
)@@G@@GD,G))HD3^[,H94^@)@N@@@A^[4H8)GL>^[<H9,G15IT>G))I9(I-*^[4H[>^[5IT>IK!IL>XH
)@@G@@ID5G(3I--GL?G*)IL>GD=^[-H1=^[?H9<HS)G15H1<I-(H9,^[\G0)E[DD9MD)= C,@M@@@AXI
)@@G@@^[OH[>^[=GD4GC)HD3^[4H[>H0)I-2GD,IT&G(2IL>G))G12H9!^[4H[>^[5IT>IK$IS)GL5XJ
)@@G@@G1&G(2^[4H8)I-*G*)GD0I[2H90IL(GD4G*)@K@@@A^[-IL>GC)I9(I-*HD,^[4H[>^[0GD$XK
)@@G@@G*?^[-H1=^[4H[>^[0GD$G*)HD3^[!GD2HT>G))GD3^[+G((H1$^[!H9=HD&HD>G),@]@@@AXL
)@@G@@ETKCD#C*)^@)@K@@@A^[JH1<G*)GC)I[-G9>^[*GD3^[+G(>H0)I(3G(=^[(H0)GD,^[D 9JXM
)@@G@@^[4IL-H13G1>IK?^[(I))HD3^[0H--GT>G))GL-GT:@M@@@A^[\H14H8)I-*G*)H-(IT4^[\XN
)@@G@@G0)I[-G9>IS)IT\^[4H[-I))IT5GL3G(1I(>H14^[D 9J^[2G(1I(>IT4IS)GT-H0)G1(H1=XO
)@@G@@^[(I))GD,G))@ @@@A^[5IT>^[4H[>^[=GD4GC)HD,^[(I),@B@@@AAL^G(&HD,HD,G8)I-*XP
)@@G@@G*)E[-G9(H1$^[[IL>GC,^@)@L@@@A^[]G(&H92G*)GD,JC)E[DD8=^[\I[>IL-I-(H9,^[!XQ
)@@G@@GD9^[+G*)G-\H1> ))I-*G*)I[-G9(H1$^[-IL>GC)IT5I[0H-(G(=^[+JC)@L@@@A^[4H[>XR
)@@G@@^[5IT>IK)H(5IT4^[+G*)G(3I--GL?HD3H[>G),^[OH[>IL>^[-IL>^[4I9\^[7GD9IS)I-*XS
)@@G@@GD4^[4H[(IS)H(-JC)GL>^@)@L@@@A^[=H9,G*'^[[I))GD3IT>H(+H-9^@)I-(H(> ))^[-XT
)@@G@@^@)I[2H9<^@)H(-JC)^[+G*)^[<GD?H->G))^@)I9*HD<H@)^@)^[7HD?H))@K@@@A^[<IL>XU
)@@G@@GD4G*)^[-^[0IL> (0GD2I-(I-(H9,G(=^@)I[-G9(H1$^@)GD2G(-BS)^[-I))G(8G(<I(4XV
)@@G@@HD\H0)I-(H(> ))GC)@K@@@A^[3I(+IL\I(4HD,G*)H(-JC)GL>^[<GD?H->G))I9*HD<H@)XW
)@@G@@I9(H-?^[=JD,GD!HD<GD?H-9^[0GD2I-(I-(H9,^@)I-*G*)@L@@@A^[0GD$HD,G8)^[-IL>XX
)@@G@@GC,^@)E9*HD<H[>I1>IK)H(>I-*H9=^@)HD3^@)GT*H93G(, ))I-*G*)I[-G9(H1$^[-IL>XY
)@@G@@GC)H(5IT4^@)@I@@@A^[+G*)HD,HD4HD-H-(JL>G))GL>G1\IL>^[<GD?H-(H1$^[-H19^[0XZ
)@@G@@GD$G(=^[D 9J^[2H95I-(H1>IS,^@)@A@@@AATNI--I-(GS)DD,HD4HD-H-(JL-I-(H9, 0)YA
)@@G@@@L@@@A^[OH[>IL>^[>J[(IT4IS)GD,^[-IT3G(!GL?JC!I-(H(>^[0IL\GT>G-5IL>^[4H8)YB
)@@G@@IL>IT>IL6G*)GD,G))HD,HD4HD-H-(JL>^[-@B@@@A^[<H9,G1(G95IL-GL?G*)I[-G9(H1$YC
)@@G@@^[-IL>GC,^@)@C@@@A^[OH[>^[0IL\GS)HD3^@)GT-H-?G(=^[?HD:G*)I-*HD3BK)@]@@@AYD
)@@G@@ETKCD#C*)^@)@K@@@A^@)^@)^@)^@)^[KDDJ^-KCDD^@)^@/H15H(+G(2B0?B-3HD'G*"^@)YE
)@@G@@^@,^[KGD$HD,G8)GD2G(-^[(H1(I-(GD?HD'G*)^@)@]@@@AETKCD#C*)^@)@J@@@A^[OH[>YF
)@@G@@^@)I[2H9<^[7HD?H))G9>H1>IL-I->^[4H[>^[0GD$G*)GD2G(-^[*G(-G->IK?^[&H9?H-\YG
)@@G@@I9>G))GL9^[-@K@@@A^[2G(3G(2I1>^[\G0)G(,H95G9*^[3I[-GT>^[4H8)GT\H14GD(H0)YH
)@@G@@B-,I(!GL>IK"^[0GD$G(3^@)H9&^@)B-3HD'G*"^@)@K@@@A^[7H92G-3 ))^[5H1=G(2^@)YI
)@@G@@I-*G*)GT5IL2G(,I))^[?H9<GD4HD\H0)^[<H95H14G(2 0)^[DG0)^@/IT(JL>B0)HD3^@)YJ
)@@G@@@J@@@A^[\H((I-4G(= ))HD4^[=G(&GD5H-4IS)I-\^[4H[>^[3JD3I->H*)I[2G(0^[&GD<YK
)@@G@@I-\IK?^[7H[(GT*^[(IS)^@)@L@@@A^[<I(2IL>H14H-9^@)AC1AK)^[7H92G-3 0)^[DG0)YL
)@@G@@^@/H15H(+G(2B0)^[(IS)H9!HD4I->G)?^@)HD4^@)G->G1-I(?I-3^[4H8)@L@@@A^['G(2YM
)@@G@@H8?^[7H[(GT*^[<GD5IT>IS)H1\^[0GD$G(3^[4H8)GL>^[$G(,G(2GD4G(=BS)I-*HD3^[(YN
)@@G@@IS)H1\I))GD,^[>IL2H92 ))@K@@@A^[+I(4^[+G(&H92G*)GD,JC)DC\D8)GT-H0)GL>^[0YO
)@@G@@GD$G(= ))IT\H(>^[0GD$G(3^[!I(3I))GL>^[=JD,GD!HD<GD?H-9@L@@@A^[-G-=G(=^[4YP
)@@G@@H8)I-*G*)I[-G9>^[0H9\H)) [6HD-^[KDDJD1K^)( 0)E9*G(,^@)B-,I(!GL>IK"^@)HD3YQ
)@@G@@^['G(2H8?^[\IK)^@)@H@@@A^[\H((I-4G(= ))H9,H-9^[4H[>^[0GD$G*)GD2G(-^[*G(-YR
)@@G@@G->IK)HD3^[$G(,G(2GD4G(= 0)^@)@A@@@AAT^JD,GD!HD<^[DH1(I-(GD?HD'GD4HD\H0,YS
)@@G@@@L@@@A^[[H1\I-*G(2^@)I[2H9<^@)HD3^@)GD6GD(H--GL?G*)^[7H[(GT*^@)I9(H-?^@)YT
)@@G@@H(>IL>H-9^@)IL>IT>IL6G*)^@*GD,G))^@)@L@@@A^[,H94^[0GD2I-(I-(H9, C)^[3I[-YU
)@@G@@GT>^[&H92^[-^[0GD$HD,G8)GD2G(-^[7HD4H@)I-*G*)G9(I1>H0)I[-IL-H(>I->IL3 0)YV
)@@G@@@J@@@A^[DH0)I-*HD3^[7GD9 ))I-*G*)IT5GL2H95I-(H1>^[!GD9^[+G*)GT-H-?G(=^[4YW
)@@G@@H8)G-9H1-H((GT-H-?JC)^@)@L@@@A^[(H1(I-(GD?HD'G*)I-*G*)I[-G9(H1$^[-IL>GC?YX
)@@G@@^[7H[(H->^[4H[>^[0IL\GS)HD3^[5IT>G))I-\^[-H-?H9<GD4G*)I-*G*)@J@@@A^[3I[-YY
)@@G@@GT>^@)GD<GT\IL=HD,G8)^[4H8)^[4H[>^[0GD2GD!G(4G(2IS,^[OH[>^[<GD?H))HD3^[4YZ
)@@G@@H[>^[3GD!G*'@]@@@AETKCD#C*)^@)@J@@@A^@)^@)^@)^@)^[KDDJ^-KCDM^@)^@/H15H(+ZA
)@@G@@G(2B0?B-3HD'G*"^@)^@,^[KGD$HD,G8)GD2G(-^[2G(3G(2I1>^@)@]@@@AETKCD#C*)^@)ZB
)@@G@@@K@@@A^[OH[>^@)I[2H9<^@)I9(H-?^@)IL>IT>IL6G*)IT0GD<G*)G1\IK)I-*G*)H[>GD=ZC
)@@G@@G(2^[-IS)I9>H-?^[-IS)I-*G*)^@)@J@@@A^[,I(!GL>IK)H9&^[(H1=HD<GD4G(=^[0GD$ZD
)@@G@@G(3^[\G0)I-*G*)G9(I1>^[3HD'G*,^[OH[>^[&HD2IT4^[7H92G))@K@@@A^[$G(,G(2GD4ZE
)@@G@@G(=^[7HD?H))GL>^@)GD,^[-GT<G(3IS)^[7H92G))^[<H9,I--HD,G8)^[4H[>^@)H->H1$ZF
)@@G@@I-*^[-H1=^@)@L@@@A^[-G-=IL>IT3^[\G0)I-*G*)IL>IT>IL6G(=^[0GD$HD,G8)GD2G(-ZG
)@@G@@ 0)E-*G*)IT>GT\H1=^[7H92G))I9(H-?^[+G*)^[4H[>^@)@L@@@A^[&HD2IT4^@)I9\IL=ZH
)@@G@@^@)H9&^@)I-*G*)^[0GD$HD,G8)^[-IL>GC)HD4IT>H-& 0)^[OH[>^@)GD<GT>IT3^@)I9\ZI
)@@G@@IL=^@)H(-JC)@J@@@A^[4H[>H0)^[+G*)I(3G(=^[4H8)H-\GD=^[[AC)H9,^[-^[<GD?H))ZJ
)@@G@@I-\^[KDDJE[[DC= 0)C1\IK)G(8GD!I[?G*'@]@@@AETKCD#C*)^@)@J@@@A^[KGD2G(-^@)ZK
)@@G@@^[KDDJ^-KCDM^@)^@4 )1AC2^@)^@)^@)^@)^@)^@)^@,^@4^[KGD$G(3^[\G0)AC1AK)I9\ZL
)@@G@@IL=IS)@]@@@AETKCD#C*)^@)@F@@@A^[GGD4G(2 ))HD,^[(H1(I-(GD?HD'HD,G8)I-*G*)ZM
)@@G@@I[-G9(H1$^[-IL>GC) 0, 0)@]@@@AETKCD#C*)^@)@L@@@A^@)^@)^@)^@)^[GCC)^@)^@)ZN
)@@G@@^@)CC1 -0GD2G(-^@)^@)^@)^@)^@) 0)C9>I))I[-G9(H1$^[-IL>GC)GD<GT>IT3^[7H92ZO
)@@G@@G))^@)@H@@@A^@)^@)^@)^@)^[GCC?E*)^@)^@)CC2 )1AC2^@)^@)^@)^@)^@)^@) 0)E-*ZP
)@@G@@G*)I[-G9>^[3HD'G*)@C@@@A^@)^@)^@)^@)^[GD(E^@)^@)^@)F@1AC?E[DD9KCDD^))^@)ZQ
)@@G@@@]@@@AETKCD#C*)^@)@]@@@AETKCD#C*)^@)@]@@@AETKCD#C*)^@)@L@@@A^[DG0)I-*G*)ZR
)@@G@@I[-G9(H1$^[-IL>GC)HD3^[4H8)GL>^[=JD,GD!HD<GD?H-9^[(H1(I-(GD?HD'G(= ))I9*ZS
)@@G@@HD<H@)H(5IT4^[+G*)@K@@@A^[4H[>^[<GD3G*)^[&H92^@)G(2IL\IK)^[2G(<H96G(2JC?ZT
)@@G@@^[>I-< 0?^[[^[3I(+IL\I(4HD,G*)HD3^[-I1-HD?GD+H->@K@@@A^[7H[(GT*^[7HD?H))ZU
)@@G@@I[-IL4HD4HD\H0)GC)G9(I1>H0)GD2G(-^[\G0)H(>H(\IL9^[(H14H8)GC)H15H(+G(2^[\ZV
)@@G@@G0)^@)@J@@@A^[0GD$G(3^@)H9&^@)GC)^[$HD6G(,^[3HD'G*,^[OH[>^[3I(+IL\I(4HD,ZW
)@@G@@G*)HD3^[<GD?H->G))I-*I(3H-9BK)@]@@@AETKCD#C*)^@)@F@@@A^@)^@)^@)^@)^[GCC)ZX
)@@G@@^@)^@)^@)CC1 )*B-?G(,G94H@" )/GD=G-2G(3IS" C)^@)@C@@@A^@)^@)^@)^@)^[GCC?ZY
)@@G@@E*)^@)^@)CC2 )/I[-G9>IT(JL>B0)@J@@@A^@)^@)^@)^@)^[GD(E^@)^@)^@)F@1AC?E[DZZ
)@@G@@D9KCDD^))^@)^@)^@) 0)E[-G9(H1$^[-IL>GC)HD,HD4HD-H-(JL>@]@@@AETKCD#C*)^@)AA
)@@G@@@K@@@A^[OH[>^@)IT5GL2H95I-(H1>^[7HD?H))HD,HD4HD-H-(JL>^[4H[>^[0GD$HD,G8)AB
)@@G@@GD2G(-^[*G(-G->IK?^[7H[(GT*^@)@K@@@A^[<H9,I--HD,IS)GC)I->IT4^[-H1=^[3G(4AC
)@@G@@^[<G(?H)?^[?HD,HT3^[4H8)^[4H[>^@)G1(IL3I))^[-H1=^@)H--IT4^@)@K@@@A^[0GD$AD
)@@G@@G(3 ))^[-H1=^@)I-*G*)I[-G9>IT(JL>^[(H0)I9\IL=IS)GD,G))IT>GT4H92IS?^[&H9?AE
)@@G@@H-\I9>G))GL9^[-IS)@L@@@A^[!GD,JC)I[-G9>IS)H9&^@/I[-G9>IT(JL>B0)I9\IL=IS)AF
)@@G@@GD3^[<GD,^[+G*)I[-IL4HD4HD\H1>G))HD,I-\^[4H[>^[-IL>GC)@L@@@A^[\G0)B-?G(,AG
)@@G@@G94H@"^[7H92G-3 0)DD4^[(IS)H1\I))H1>GT>IT3GD2HD?JC)GD,^[>IL2H92^[(G0)GD4AH
)@@G@@^[?G(-IT4^[\H1>^@)@L@@@A^[0GD$G*)GT-H1,H94^[+G*)I[-IL4HD4HD\H1>G))HD,^[4AI
)@@G@@H[>^[$HD6G(,^@)GD2G(-BS)^[&H92^[(H13I--H1<G*?^[(G0)^@)@L@@@A^[0GD$G(3^[7AJ
)@@G@@G(2G*)I-\^[+G*)G-9H1-H((GT-H-?JC)GD?H-\GT-I->G)?^[6HD-^[-^[3I-\IL-G9>^[-AK
)@@G@@H-?H9<GD4H92 ))^@)@I@@@A^[4H[>JC)GT\I(?G))GL>^[(H1<H-5G->G))^[(H14H8)^[4AL
)@@G@@H[>^@)I[-G9>^@)I[\H9?^[7HD4H@)^[-H0)@L@@@A^[-I[0IL\I[2HD-I->^@)IT5GL2H95AM
)@@G@@I-(H1>^[<GD?H)) [3G(>^[KDDJD1K^)( 0)D[\I9>I1>IK?^[-I))H->GD3I))I-*IL>G*)AN
)@@G@@@H@@@A^[7H92G-3^[!I(3I))GL>^[$HD6G(,^[4H8)G1\IL!^[4H[>^[0GD$G*)GD2G(-^[*AO
)@@G@@G(-G->IK,^@)@]@@@BETKCD#C*)^@)@L@@@B^[DG0)I-*G*)I[-G9(H1$^[-IL>GC)H[>IS)AP
)@@G@@GD?IL>GD=JC)GL>G(,^[(H1(I-(GD?HD'G(=^@*HD,^[-^[!I(?I-(GD<I-(I1(I-9@L@@@BAQ
)@@G@@^[>H16HD2H9,H(>H14 ))G1\IK)G(8GD!I[?G*( ))I-*G(,^[KDDJE[[DC=^[7HD?H))H1\AR
)@@G@@I))IL> ((H1(I-(GD?HD'G*)HD4 0)@L@@@B^[OH[>^[4G(3I))G1\IK)HD,HD4HD-H-(JL-AS
)@@G@@I-(H9,^[(IS)H(-G->^[+JC)G(8GD!HD,HD,G8)I-*G*)G1(IL3I))I9\IL=^[\G0)@L@@@BAT
)@@G@@^[4H[>^[0GD$HD,G8)GD2G(-^[&H92^[-^[4G(3I))GD,G))IT>I))GT>H-? 0)^[DG0)IT5AU
)@@G@@GT*^[-^[<G(?H))G(8HD3I-3^[(H0)@L@@@B^[4H[>^[&HD2IT4^[7H92G)?^[4H[>H0)I-*AV
)@@G@@G*)I[-G9(H1$^[-IL>GC)HD3^[-IT3I(!G(=^[4H8)GL>^[(H1(I-(GD?HD'G(= 0)@M@@@BAW
)@@G@@^[OH8)G1\IL<G*)GC)H1>I8)HD,HD4HD-H-(JL-I-(H9, ))IT4H92G*)JL>IL\^[(H14H8)AX
)@@G@@I-*G*)G1(IL3I))I9\IL=^[\G0)I-*G*)^@)@D@@@B^[0GD$HD,G8)GD2G(-^[+G(&H92G*)AY
)@@G@@GT-H-?HD,G8)E[DD9KCDD^),@C@@@AAT^JD,GD!HD<GD?H-9^[[H-?H9<GD4G(=^[KGD$G(3AZ
)@@G@@ 0)^@)@L@@@A^[DG0)I-*G*)I[-G9(H1$^[-IL>GC)HD3^[4H8)GL>^[,H9, (<H9,I-(G95BA
)@@G@@H95IS)H(>H(\IL9 ))HC,G*, ))E-*G*)I[-G9>IS)@L@E@A^[-IL>^[-H-?H9<GD4I->G))BB
)@@G@@^[=JD,GD!HD<GD?H-9 ))^[4H[>H0)I-*G*)G1\H-?H97HD,G8)I[2H9<G(=I(2G*)IT*H95BC
)@@G@@H-=^@)@L@@@E^[-IL>^[-H-?H9<GD4G(=^@)G-9H1-H((GT-H-?JC?^@)I-*G(,^[4H[>^[&BD
)@@G@@H9?H-\I9(H1$^[0IL\GT>G-5IL>^[3H[\I(?G))^@)@K@E@A^[+G*)I(3G(=BK)^[OH[>^[0BE
)@@G@@GD$HD,G8)GD2G(-^[*G(-G->IK)IT*H95H-=^[+G*)HD,HD4HD-H-(JL>G))I9(I-*H95I))BF
)@@G@@@J@@@E^[+G*)I(3G(=BK)^[OH[>^[0GD$HD,G8)GD2G(-^[*G(-G->IK)IT*H95H-=^[+G*)BG
)@@G@@HD,HD4HD-H-(JL>G))I9(I-*@L@E@A^[-H19^@)I[-G9>IS;^@)G1\IK)G(6G(2JC)^[,G(7BH
)@@G@@^[0GD$G*)I-\^[-G-=^[4H8)I-*G*)I[-G9(H1$^[0H9\H)?^[<GD?H))^@)@M@@@E^[-H19BI
)@@G@@^@)IT4GD4HD<^[0GD$G(3BS)^[&H92^[>GD<H@)^[,G(7^[0GD$G*)I-\^[-G-=^[4H8)I-*BJ
)@@G@@G*)I[-G9(H1$^[0H9\H)?^[<GD?H))@K@@@A^[4H[>^[3I(+IL\I(4HD,G*)E[DD9IE@= ))BK
)@@G@@I9*HD<H@)I9(H-?^[(H1<H-5G->^[4H[>^[,G(7^[0GD$G*)HD,I-\^[4H[>@L@@@A^[0GD$BL
)@@G@@G*)ID5G(5G*,^[IH94G*)^[4H[-I))^[0GD$G(3^[!GD9^@)GL>^@)GD=G->G))^[4H8)^[4BM
)@@G@@H[>^@)I[-G9>^[1I(>I(> ))@K@@@A^[+I(4^[4H[>JC)H(-JC)H1\I))GL>^[2G(!H96G(=BN
)@@G@@ 0)E-*HD3^[!G(2G(?JC)GD?H-\I93^[4H[>^[0GD$G(3^[4H8)GL>@J@@@A^[-H-?H9<GD4BO
)@@G@@G(=^@)G-9H1-H((GT-H-?JC?^@)I[\IT3HD+H-9^@)GL9^@)GC)G-9H1-H((GS)^[3I-\IL-BP
)@@G@@G9>^@)@K@E@A^[-H-?H9<GD4H92 0)E-*G*)I[-G9>IS)H(5IT4^[-H-?^[+G*)GD4^[?G(-BQ
)@@G@@IT4^[-IS)H--IL$G*)GD3^[4H[>^[0GD$G*)@J@@@E^[-H-?H9<GD4H92 0)C(-GT*^[0GD$BR
)@@G@@G*)H(5IT4^[+G*)GD4^[?G(-IT4^[-IS)H--IL$G*)GD3^[4H[>^[0GD$G*)@L@E@A^[3HD'BS
)@@G@@G*)GD3^[3G(4^[(H0)I-*G*)I[-G9(H1$^[-IL>GC)H[>GD=G(2 0)E-*G*)^[<GD?H-(H1$BT
)@@G@@^@)IT>ID5G(,GT>^[&H92^@)@N@@@E^[3HD'G*)GD3^[3G(4^[(H0)I-*G*)I[-G9(H1$^[-BU
)@@G@@IL>GC)H[>GD=G(2 ))I[?I(3^[4H[>^[4H[2G(>^[7H92G))I[-G9(H1$^[*G(-G->IK)^@)BV
)@@G@@@F@@@E^[<H9,I--HD,HD,G8)I-*G*)H1>GT>IT3GD2JC)H-(H1:IS)GD,G))G1?GD$IS,^@)BW
)@@G@@@B@@@E^[OH[>^@)GT-H-?HD,G8)^[3G(1I(>H1<G*)G1\IK)@B@@@A^[4H[>^[,G(7^[0GD$BX
)@@G@@G*)IT5GL2H95I-(H1>^[(IS'@]@@@AETKCD#C*)^@)@F@@@A^@)^@)^@)^@)^[GCC?E*)^@)BY
)@@G@@^@)CC1 )/I[-G9(H1$^[-IL>GC)GD=G-2G(3IS"^@)@E@@@A^@)^@)^@)^@)^[GCC?E*)^@)BZ
)@@G@@^@)CC2 )/H1>I8)I[-G9>^[-G-=IL>IT3B0)@G@@@A^@)^@)^@)^@)^[GD(E^@)^@)^@)F@1CA
)@@G@@AC?E[DD9IE@=^@)^@)^@)^@) 0)D1>I8)I[-G9>^@)@]@@@AETKCD#C*)^@)@]@@@AETKCD#CB
)@@G@@C*)^@)@G@@@AADAHD?G*)D90G(,HD,G8)CD,G))CT?H93HD,G8?^[[H1=^[KGD$G*)C1?I(3CC
)@@G@@H[(H1$ 0)^@)@J@@@A^[JH1<G*)I-*G*)I[-G9(H1$^[-IL>GC)HD3^[>IT4GD+H-(IT*G(=CD
)@@G@@ ))G((I-*G(2^[3I--I-(GT-H-?JC)H92^@)@L@@@A^[=JD,GD!HD<GD?H-9 ))G1(H->IS)CE
)@@G@@H(-JC)GL>^[\I[>H1>G))G1\IK)DC\D8,^[OH[>^[<GD?H-(H1$^[3G(1I(>H1<G*)I-\^@)CF
)@@G@@@^@@@A^[\I[>H0)GC)G1(H->^[(IS'@]@@@AETKCD#C*)^@)@F@@@B^@)^@)^@)^@)^[GCC)CG
)@@G@@^@)^@)^@)CC1 )*H[(G9*G(3I))I92HD4G*)GD=G-2G(3IS(@E@@@A^@)^@)^@)^@)^[GCC?CH
)@@G@@E*)^@)^@)CC0 )/I[-GT:G(4^[-G-=IL>IT3B0)^@)@F@B@A^@)^@)^@)^@)^[GCC?E*)^@)CI
)@@G@@^@)CC1 )/I[-G9(H1$^[-IL>GC)GD=G-2G(3IS"^@)@G@@@A^@)^@)^@)^@)^[GD(E^@)^@)CJ
)@@G@@^@)F@1AC?E[DD9AD8=^@)^@)^@)^@) 0)C1(H->^[\I[>H0)@]@@@AETKCD#C*)^@)@D@@@BCK
)@@G@@^[OH[(IS)IL\I(4HD,G*$IS)H(-HD,^[&I(,GT4HD\H0)HD3^[4H8)@E@@@B^[0H93I))I-*CL
)@@G@@G*)HD,HD4HD-H))H[(G9*G(3I))I92HD4G*)GD=G-2G(3IS?@D@@@B^[6G(2HD&JC)I-*G*)CM
)@@G@@I[-G9(H1$^[-IL>GC?^[-H1=^[>H1-GL?G*)@M@@@B^[-H19^[3I--I-(IT4HD<IS)G9-I-*CN
)@@G@@G(2HD,G8)H92^[4IL-GT(H1$^[&I(,GT4HD\H13 0)^[JH1<G*)I-*HD3^[(IS)G-\H1> ))CO
)@@G@@DC\D8)@K@@@B^[\I[>IL-I-(H9,IS)H(-JC)H1\I8)I--HT>^[0H--GT>^[5IT(H1$^[4H[>CP
)@@G@@^[0GD$G(=^[D 9J^[3I(+IL\I(4HD,G(3 0)@I@@@C^[OH[>^@+H[(G9*G(3I))I92HD4G*)CQ
)@@G@@GD=G-2G(3IS+^[(IS)GD?I9-JD3^[-^[3G(<I-\IK)GD=G-2G(3IS;@M@@@C^[(I))HD3^[!CR
)@@G@@GD(H14GD(H1>G))I9(I-*HD,^[4H[>^[KDDJ^))I[-GT:G(4 ))GL>HD,G8)I(0G--I->G))CS
)@@G@@I9*G(,^[7IL(I->IS)I[-IT4@L@@@C^[4H[>^[<I(2IL>H14^[6GD?I(>^[-IL>^[2G(1I(>CT
)@@G@@IT4G(= ))GD,G))H[>H-0IS)G->I->IL!HD,G*)I9*G(4H[>IK)H92^[,H94@G@@@C^[<G(2CU
)@@G@@I--HD,^[0GD$G*)IL>GD=IS!GL>G1\IL> (7IL(I->IS)GD2G*)H1>GT>IT3GD2JC,@K@B@ACV
)@@G@@^[OH[(IS)^[2H95I-(H1>^93^@)H(-HD,^[&I(,GT4HD\H0)HD3^[4H8)GD3IT\GT(GD4G*)CW
)@@G@@I-*G*)I[-G9(H1$^[-IL>GC)@L@B@A^[0H9(H14G(=^[4H8)GL9^[[AC?^[7HD4H@)I-*G*)CX
)@@G@@I[-GT:G(4^[-G-=IL>IT3G(=^[+JC)CC0 0)^[JH1<G*)^[4H[(IS)^[(IS)@K@B@A^[=H9,CY
)@@G@@G*?^@)DC\D8)H90G(2GD4HD\H13^@)H(-JC)^[,H97^@)I--HT>^@)I[?GD<G*)^[5IT(H1$CZ
)@@G@@^@)I-*G*)^[0GD$G(=@J@B@A^[D 9J^[3I(+IL\I(4HD,G(3 0)^[CH97G(6G(2 ))HD4^[(DA
)@@G@@IS)HD!I[\IL4GD,I))I-\^[\GL3G(2I1>^[4H[>^@)@E@C@B^[CH97G(6G(2 ))HD4^[(IS)DB
)@@G@@HD!I[\IL4GD,I))I-\^[\GL3G(2I1>^[4H[>@]@@@CETKCD#C*)^@)@C@@@C^[DI))HD3^[(DC
)@@G@@H(0H92I--H14^[4H8)H9+IT>IL6G*)I-*G*)@J@@@A^[&H9?H-\I9(H1$^[2G(3I-2HD<I-(DD
)@@G@@H9,BK)DD&^@)I-*G*)I(3G(2^@)G->IT(IL>IS)^[4H8)GT*GD,G9>^[4H[>@L@@@A^[&HD?DE
)@@G@@G(,GD!G*)GT\H14GD(H1>G))HD,^[4H[>^[&HD2IT4^[4I9\^[7H92G-3^[(H0)I-*G*)E[DDF
)@@G@@D8=^[0GD<HT>I)?^[\IK)^@)@J@@@A^[(G0)I-*G*)G1(H->^[(IS)I-\^[+G*)G12G(>G)?DG
)@@G@@^[4H[>^[5IT>IK)H(5IT4^[&HD2IT4^[<GD?H))I-*G*)^@)@K@@@A^[3I(+IL\I(4HD,G*)DH
)@@G@@I-\^[<H-\IT>^[4H[>^[&HD?G*?^@)I9*HD<H@)^[7HD?H))^[<GD5IT>^@)GD?H))^[0GD$DI
)@@G@@G(3^@)@L@@@A^[-IT3H9<HD-I->G))^[7HD4H@)^[4H[>^@)G1(H->H1-H(>^@)I-\^@)GL>DJ
)@@G@@^@)I92HD4I->H0?^@)HD&^@)H(\G-(G1(G(= ))^@)@L@@@A^[-H1=^[>G1&G(<I-(I1>H-9DK
)@@G@@^@)G(2GD3G(= 0)^[OH[>H0?^@)IT*H95H-=^[4H[>^[5IT>IK)I9(IT*^[4H8)I[>IL&H92DL
)@@G@@H*)^@)@L@@@A^[0GD$G(=^[D 9J^[5I[\H0)I-*G*)H1>I8)G1(H-> ))GC)IT5GL3G(1I(>DM
)@@G@@H14^[<GD?H))I-\^[KDDJC1J^))I9\I(?G))^[+G*)@J@@@A^[,G(>G->G),^@)E-*G*)IT5DN
)@@G@@GL2H95I-(H1>^[4H8)GT?H93G*)I-*G*)G1(H->^[4H8)I-*G*)I[-G9>G))DC\D8)@^@@@ADO
)@@G@@^[2H95I-(H1>IS)HD3BK)^@)@]@@@AETKCD#C*)^@)@E@@@A^@)^@)^@)^@)^[GCC?E*)^@)DP
)@@G@@^@)CC0 )/I[-GT:G(4^[-G-=IL>IT3B0)^@)@G@@@A^@)^@)^@)^@)^[GD(E^@)^@)^@)F@1DQ
)@@G@@AC?E[DD9ACS=^@)^@)^@)^@) 0)C1(H->^[<H-\IT>@C@@@B^@)^@)^@)^@)^[ED1U^@)^@)DR
)@@G@@^@)CC3 )/HD\^[>IL2H92B0)@D@@@B^@)^@)^@)^@)^[[AC)B*)H[(G9*G(3I))I92HD4G*)DS
)@@G@@GD=G-2G(3IS)@]@@@AETKCD#C*)^@)@]@@@AETKCD#C*)^@)@K@@@A^[DG0)^[-I))IT\H(>DT
)@@G@@^[4HD!G*?^[4H[>^[5IT>IK)I9(IT*G(3^[4H8)G95GD2GD,I->G*)I-*GD4^[-H-?^[=GD4DU
)@@G@@GC)^@)@L@@@A^@+I92HD4I->H0+^[4H8)I-*G*)G1(H->^[(IS)IL>GD?H-9^[7IL(I-4G(,DV
)@@G@@ ))GD,G))H1\I))GT-GT*G(=^[(H0)GC)I[-G9> ))@I@@@A^[-^@)IT5GL2H95I-(H1>^[!DW
)@@G@@GD9^@)GL>^@)GT-H-?G(=^@)I9*HD<H@)^[7HD?H))^[&H-5IT*^@)GD?H))@J@@@A^[\I(4DX
)@@G@@IT4GD,G-(H1$^@)H(\G-(G1(G(=^@)I[-G9>IS)GD3IT\GT(GD4G(=^[7HD4H@)I-*G*)I[-DY
)@@G@@IL4HD<I(?GD2@^@@@A^[0GD<HT>I),^[#GD?H->G)'@]@@@AETKCD#C*)^@)@E@@@A^@)^@)DZ
)@@G@@^@)^@)^[GCC?E*)^@)^@)CC0 )/I[-GT:G(4^[-G-=IL>IT3B0)^@)@G@@@A^@)^@)^@)^@)EA
)@@G@@^[GD(E^@)^@)^@)F@1AC?E[DD9KC0=^@)^@)^@)^@) 0)E[-G9>^[&H-5IT*@C@@@B^@)^@)EB
)@@G@@^@)^@)^[ED1U^@)^@)^@)CC3 )/HD\^[>IL2H92B0)@D@@@B^@)^@)^@)^@)^[[AC)B*)H[(EC
)@@G@@G9*G(3I))I92HD4G*)GD=G-2G(3IS)@]@@@AETKCD#C*)^@)@L@@@A^[OH[(IS)HD3^[=HD&ED
)@@G@@G1>IL>H14^[&IL\H*)I-*G*)E[DD9ACS=^[2H95I-(H1>^[(H0)I-*GD4^[-G14G(2^[4H[>EE
)@@G@@^[0GD$G(3^@)@L@@@A^[*GD6G*)GL>G(,^@)G1?I(3H[>G)?^@)I-*G(9^[-IL>^[,H94^@+EF
)@@G@@G(2GD3G(=^K?^[-H1=^[3I(+IT>ID5G(,I))DC\D8)H(-JC)@H@B@A^[3I-(H-?^[+G*)HD\EG
)@@G@@I[4HD!HD'G(=^[+JC)G--I--^[<H9,I--HD,G(=^[(H0)I-*G*)I[-G9>IS,@H@@@B^[3I-(EH
)@@G@@H-?^[+G*)H90I-(H((JL>G))GL9^[=GD4GC)GT\H14GD(H1>G))HD,^[4H[>^[0GD$G(3 0)EI
)@@G@@@]@@@AETKCD#C*)^@)@]@@@AETKCD#C*)^@)@A@@@AADOH[>^[KGD$G(=^[D 9J^[KGD<HT>EJ
)@@G@@I),^@)@]@@@AETKCD#C*)^@)@K@@@A^[NHD,GT>^@)I-*G(3G*)^[2H95I-(H1>IS)^[-IL>EK
)@@G@@^[!I(?I-( (-GT4HD6HD4JC)IL>G(,I-2GD,I)?^[4H[>JC)I9\IL:@L@@@A^[&IL\H*)GC)EL
)@@G@@I(3G(2^[3I(0I[?HD>G))I[-GT:G(4^[7H[(GT*^[<H9,I--HD,IS)GD?H))I-*G*)G--I--EM
)@@G@@^[,G(<G(3IT-IL9^@)@K@@@A^[4H8)^[0G(2G12H9!^[4H[>HD2^[&I(,GT4HD\H13 ))HD,EN
)@@G@@GT?I(=HD,G8)GC)IT9IT4G(!^[3I--H1=GD2G))DC\D8)^@)@G@@@A^[0GD<HT>I),^[OH[>EO
)@@G@@^[&H92H(-I))H9&^[4H[>^[0GD<HT>I))HD3^[-IS)G1\H-?H97IS'@]@@@AETKCD#C*)^@)EP
)@@G@@@]@@@AETKCD#C*)^@)@A@@@AE-[CLGC*)E[-G9>G))DC\D8)E[-GT:G(4^@)@L@@@B^@)^@)EQ
)@@G@@^@) *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!ER
)@@G@@ *! *! *! *! *! *! *! *)@L@@@B^@)^@:A@)BK)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)ES
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BK)@L@@@B^@)^@)ET
)@@G@@^@)BK)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@%E[DD9AD0)^@)^@)^@)^@)^@)^@)EU
)@@G@@^@)^@)^@)^@)^@)^@)^@)BK)@L@@@B^@)^@:AC)BK)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)EV
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BK)@L@@@B^@)^@)EW
)@@G@@^@) *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!EX
)@@G@@ *! *! *! *! *! *! *! *)@L@D@B^@)^@:AK)BK)^@)^@)^@)^@)^@)^@) *!^@)^@)^@)EY
)@@G@@^@)^@)^@)^@)BK)^@)^@)^@)^@)^@)^@) *!^@)^@)^@)^@)^@)^@)^@)BK)@L@@@D^@)^@:EZ
)@@G@@AK)BK)^@)^@)^@)^@)^@)^@) *!^@)^@)^@)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@)E[DD9[FA
)@@G@@DD^^@)^@)^@)^@)^@)^@)BK)@L@@@B^@)^@)^@) *! *! *! *! *! *! *! *! *! *! *!FB
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)@L@@@B^@)^@:FC
)@@G@@AS)BK)E[DD9NE-[^@)BK)E[DD9AD1#^@)BK)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@)E[DD9AFD
)@@G@@E9#^@)^@)^@)^@)^@)^@)BK)@L@@@B^@)^@)^@) *! *! *! *! *! *! *! *! *! *! *!FE
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)@L@@@B^@)^@:FF
)@@G@@A))BK)^@)^@)^@)^@)^@) LKDDJE9#^@)^@)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@) LKDDJFG
)@@G@@CL[^@)^@)^@)^@)^@)^@)BK)@L@@@B^@)^@)^@) *! *! *! *! *! *! *! *! *! *! *!FH
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)@L@@@B^@)^@:FI
)@@G@@A*)BK)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@%E[DD9^CC)^@)^@)^@)^@)^@)^@)FJ
)@@G@@^@)^@)^@)^@)^@)^@)^@)BK)@L@@@B^@)^@)^@) *! *! *! *! *! *! *! *! *! *! *!FK
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)@L@@@B^@)^@:FL
)@@G@@A0)BK) LKDDJE9OC0)BK) LKDDJE-MCC)BK) LKDDJE9[C0)BK)^@)^@)^@)^@)^@%E[DD9NFM
)@@G@@CDG^@)^@)^@)^@)^@)^@)BK)@L@@@B^@)^@)^@) *! *! *! *! *! *! *! *! *! *! *!FN
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)@L@@@B^@)^@:FO
)@@G@@A8)BK)^@)^@)^@)^@)^@)E[DD9#E[G^@)^@)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@%E[DD9KFP
)@@G@@CDG^@)^@)^@)^@)^@)^@)BK)@L@@@B^@)^@)^@) *! *! *! *! *! *! *! *! *! *! *!FQ
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)@L@@@B^@:A@1FR
)@@G@@A@)BK)^@)^@)^@)^@)^@)E[DD9PE9#^@)^@)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@)E[DD9PFS
)@@G@@CL[^@)^@)^@)^@)^@)^@)BK)@L@@@B^@)^@)^@) *! *! *! *! *! *! *! *! *! *! *!FT
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)@L@@@B^@:A@1FU
)@@G@@AC)BK)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^[KDDJE(^CC)^@)^@)^@)^@)^@)^@)FV
)@@G@@^@)^@)^@)^@)^@)^@)^@)BK)@L@@@B^@)^@)^@) *! *! *! *! *! *! *! *! *! *! *!FW
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)@L@@@B^@:A@1FX
)@@G@@AK)BK)^@)^@)^@)^@)^@)E[DD9#E9#^@)^@)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@)E[DD9#FY
)@@G@@CL[^@)^@)^@)^@)^@)^@)BK)@L@@@B^@)^@)^@) *! *! *! *! *! *! *! *! *! *! *!FZ
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)@L@@@B^@:A@1GA
)@@G@@AS)BK)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^[KDDJCT^CC)^@)^@)^@)^@)^@)^@)GB
)@@G@@^@)^@)^@)^@)^@)^@)^@)BK)@L@@@B^@)^@)^@) *! *! *! *! *! *! *! *! *! *! *!GC
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)@L@@@B^@:A@1GD
)@@G@@A))BK)^@)^@)^@)^@)^@)E[DD9OELG^@)^@)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@)E[DD9NGE
)@@G@@E-G^@)^@)^@)^@)^@)^@)BK)@L@@@B^@)^@)^@) *! *! *! *! *! *! *! *! *! *! *!GF
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)@L@@@B^@:A@1GG
)@@G@@A*)BK)^@)^@)^@)^@)^@)E[DD9SAC1^@)^@)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@)E[DD9SGH
)@@G@@AC0^@)^@)^@)^@)^@)^@)BK)@L@@@B^@)^@)^@) *! *! *! *! *! *! *! *! *! *! *!GI
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)@L@@@B^@:A@1GJ
)@@G@@A0)BK)^@)^@)^@)^@)^@)E[[C9SAC1^@)^@)^@)^@)^@)^@)BK)E[DD9GD9F^@)BK)E[DD9]GK
)@@G@@D-F^@)BK) LKDDJD(OCC)BK)@L@@@B^@)^@)^@) *! *! *! *! *! *! *! *! *! *! *!GL
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)@L@@@B^@:A@1GM
)@@G@@A8)BK)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^[KDDJD[RCC)^@)^@)^@)^@)^@)^@)GN
)@@G@@^@)^@)^@)^@)^@)^@)^@)BK)@L@@@B^@)^@)^@) *! *! *! *! *! *! *! *! *! *! *!GO
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)@L@B@A^@)^@)GP
)@@G@@ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,GQ
)@@G@@ 0, 0, 0, 0, 0, 0, 0)^@)@L@B@A^@:A@)BK)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)GR
)@@G@@^@)^@%E[DD9AD0)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BK)^@)@L@B@A^@:AC)GS
)@@G@@BK)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)GT
)@@G@@^@)^@)^@)^@)^@)^@)BK)^@)@L@B@A^@)^@) 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,GU
)@@G@@ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)^@)@L@B@A^@:AK)GV
)@@G@@BK)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)A@)^@)^@)^@)^@)^@)^@)^@)^@)GW
)@@G@@^@)^@)^@)^@)^@)^@)BK)^@)@L@B@A^@)^@) 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,GX
)@@G@@ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)^@)@L@B@A^@:AS)GY
)@@G@@BK)E[DD9NE-[^@)BK)E[DD9AD1#^@)BK)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@)E[DD9AE9#GZ
)@@G@@^@)^@)^@)^@)^@)^@)BK)^@)@L@B@A^@)^@) 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,HA
)@@G@@ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)^@)@L@B@A^@:A))HB
)@@G@@BK)^@)^@)^@)^@)^@) LKDDJE9#^@)^@)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@) LKDDJCL[HC
)@@G@@^@)^@)^@)^@)^@)^@)BK)^@)@L@B@A^@)^@) 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,HD
)@@G@@ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)^@)@L@B@A^@:A*)HE
)@@G@@BK)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@%E[DD9^CC)^@)^@)^@)^@)^@)^@)^@)HF
)@@G@@^@)^@)^@)^@)^@)^@)BK)^@)@L@B@A^@)^@) 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,HG
)@@G@@ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)^@)@L@B@A^@:A0)HH
)@@G@@BK) LKDDJE9OC0)BK) LKDDJE-MCC)BK) LKDDJE9[C0)BK)^@)^@)^@)^@)^@)E[DD9NCDGHI
)@@G@@^@)^@)^@)^@)^@)^@)BK)^@)@L@B@A^@)^@) 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,HJ
)@@G@@ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)^@)@L@B@A^@:A8)HK
)@@G@@BK)^@)^@)^@)^@)^@)E[DD9#E[G^@)^@)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@)E[DD9KCDGHL
)@@G@@^@)^@)^@)^@)^@)^@)BK)^@)@L@B@A^@)^@) 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,HM
)@@G@@ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)^@)@L@B@A^@:B@)HN
)@@G@@BK)^@)^@)^@)^@)^@)E[DD9PE9#^@)^@)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@)E[DD9PCL[HO
)@@G@@^@)^@)^@)^@)^@)^@)BK)^@)@L@B@A^@)^@) 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,HP
)@@G@@ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)^@)@L@B@A^@:BC)HQ
)@@G@@BK)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^[KDDJE(^CC)^@)^@)^@)^@)^@)^@)^@)HR
)@@G@@^@)^@)^@)^@)^@)^@)BK)^@)@L@B@A^@)^@) 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,HS
)@@G@@ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)^@)@L@B@A^@1A@)HT
)@@G@@BK)^@)^@)^@)^@)^@)E[DD9#E9#^@)^@)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@)E[DD9#CL[HU
)@@G@@^@)^@)^@)^@)^@)^@)BK)^@)@L@B@A^@)^@) 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,HV
)@@G@@ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)^@)@L@B@A^@1AC)HW
)@@G@@BK)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^[KDDJCT^CC)^@)^@)^@)^@)^@)^@)^@)HX
)@@G@@^@)^@)^@)^@)^@)^@)BK)^@)@L@B@A^@)^@) 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,HY
)@@G@@ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)^@)@L@B@A^@1AK)HZ
)@@G@@BK)^@)^@)^@)^@)^@)E[DD9OELG^@)^@)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@)E[DD9NE-GIA
)@@G@@^@)^@)^@)^@)^@)^@)BK)^@)@L@B@A^@)^@) 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,IB
)@@G@@ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)^@)@L@B@A^@1AS)IC
)@@G@@BK)^@)^@)^@)^@)^@)^@)^@)^@)^[NGD6G*)GD2G(-^[&H92^[2G($HD3I->IL3^@)^@)^@)ID
)@@G@@^@)^@)^@)^@)^@)^@)BK)^@)@L@B@A^@1A))BK)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)IE
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BK)^@)@[@@@AC(IC))IF
)@@G@@@]@@@AETKCD#C*)^@)@]@@@AETKCD#C*)^@)@C@@@A^[OH[>^[!G(-H1(H1$IS)H9&^[4H[>IG
)@@G@@^[&HD>H-=IS)GD2G*'@]@@@AETKCD#C*)^@)@F@B@A^@)^@)^@)^@)^[KDDJC1I^@)^@)^[(IH
)@@G@@H14G(2H1-H))G1(H->H1-H(>^[&H92^[D 9J@F@@@B^@)^@)^@)^@) LKDDJC1I^@)^@)^[(II
)@@G@@H14G(2H1-H))G1(H->H1-H(>^[&H92^[D 9J@F@@@D^@)^@)^@)^@)^[KDDJCDDC))^@)^[-IJ
)@@G@@GT4HD6HD4JC)HD=^@*C(8G(<^[SAC0 C)^@)@H@@@A^@)^@)^@)^@)^[KDDJETOCC)^@)^[DIK
)@@G@@ 9J^[3I--I-5IS)IL>I-5IL,G(=^[+JC)I-*G*)IT9IT4G(!@C@@@A^@)^@)^@)^@)^[KDDJIL
)@@G@@C1ICS)^@)^[D 9J^[&I(,GT4HD\H0)@D@@@A^@)^@)^@)^@)^[KDDJC1RCS)^@)^[&HD,GD?IM
)@@G@@^[7H92G))GT\I(,I))@C@B@A^@)^@)^@)^@)^[KDDJE9#^@)^@)^[7H92G))GT\I(,I))^@)IN
)@@G@@@C@@@B^@)^@)^@)^@) LKDDJE9#^@)^@)^[7H92G))GT\I(,I))^@)@D@B@A^@)^@)^@)^@)IO
)@@G@@^[KDDJCL[^@)^@)^[+I(&G1>IK)GD=G-2G(3IS)^@)@D@@@B^@)^@)^@)^@) LKDDJCL[^@)IP
)@@G@@^@)^[+I(&G1>IK)GD=G-2G(3IS)^@)@C@B@A^@)^@)^@)^@)^[KDDJC-[^@)^@)^[=IL5H*)IQ
)@@G@@GD=G-2G(3IS)@C@@@B^@)^@)^@)^@) LKDDJC-[^@)^@)^[=IL5H*)GD=G-2G(3IS)@E@B@AIR
)@@G@@^@)^@)^@)^@)^[KDDJE9OC0)^@)^[7IL(I-> (4H[2H95G9*^[&H--G8)^@)@E@@@B^@)^@)IS
)@@G@@^@)^@) LKDDJE9OC0)^@)^[7IL(I-> (4H[2H95G9*^[&H--G8)^@)@E@B@A^@)^@)^@)^@)IT
)@@G@@^[KDDJET[D))^@)^[3I--I-(IT4HD<IS)GD2G(-^[?HD,HS)@E@@@B^@)^@)^@)^@) LKDDJIU
)@@G@@ET[D))^@)^[3I--I-(IT4HD<IS)GD2G(-^[?HD,HS)@C@B@A^@)^@)^@)^@)^[KDDJE-MCC)IV
)@@G@@^@)^[4IL-GT>^[&H--G8)^@)@C@@@B^@)^@)^@)^@) LKDDJE-MCC)^@)^[4IL-GT>^[&H--IW
)@@G@@G8)^@)@E@B@A^@)^@)^@)^@)^[KDDJE9[C0)^@)^[7H92G))GD=G-2G(3IT>IS)G1?GD$^@)IX
)@@G@@@E@@@B^@)^@)^@)^@) LKDDJE9[C0)^@)^[7H92G))GD=G-2G(3IT>IS)G1?GD$^@)@D@@@AIY
)@@G@@^@)^@)^@)^@)^[KDDJCTKD))^@)^[<I(2IL>H14^[0GD$G*)H-(H1:@D@B@A^@)^@)^@)^@)IZ
)@@G@@^[KDDJE[[D))^@)^[0GD$HD,G8)GD2G(-^[?HD,HS)@D@@@B^@)^@)^@)^@) LKDDJE[[D))JA
)@@G@@^@)^[0GD$HD,G8)GD2G(-^[?HD,HS)@D@@@A^@)^@)^@)^@)^[KDDJE(RCS)^@)^[5IT>IK)JB
)@@G@@I9\IL=^[<H95H14^@)@E@@@A^@)^@)^@)^@)^[KDDJE(]CC)^@)^[5IT>IK)GL5G1&G(2^[-JC
)@@G@@G-=IL>IT3^@)@D@@@A^@)^@)^@)^@)^[KDDJE(^CC)^@)^[5IT>IK)G-2I(!^[-G-=IL>IT3JD
)@@G@@@E@@@A^@)^@)^@)^@)^[KDDJCTRCS)^@)^[<I(2IL>H14^[7H92G))GT\I(,I))^@)@F@@@AJE
)@@G@@^@)^@)^@)^@)^[KDDJCT]CC)^@)^[<I(2IL>H14^[+I(&G1>IK)GD=G-2G(3IS)^@)@E@@@AJF
)@@G@@^@)^@)^@)^@)^[KDDJCT^CC)^@)^[<I(2IL>H14^[=IL5H*)GD=G-2G(3IS)@E@@@A^@)^@)JG
)@@G@@^@)^@)^[KDDJE-MD))^@)^[4IL-GT>^[3I(+IL\I(4HD,G*)H-(H1:@F@@@A^@)^@)^@)^@)JH
)@@G@@^[KDDJETOD))^@)^[3I--I-(IT4HD<^[3I(+IL\I(4HD,G*)H-(H1:@E@@@B^@)^@)^@)^@)JI
)@@G@@^[KDDJF@1AC)^@)^[5IT>IK)IL>I-5IL,^[-G-=IL>IT3^@)@D@@@B^@)^@)^@)^@)^[KDDJJJ
)@@G@@F@1A@)^@)^[SAC0^[!H9=HD&HD>IK)IT-I1>@C@@@B^@)^@)^@)^@)^[KCDBF@1AC)^@)^[(JK
)@@G@@H14G(2H1-H))H-(H1:@F@@@B^@)^@)^@)^@)^[KDDJD-JDS)^@)^[0GD$G*)ID5G(5G*)H-\JL
)@@G@@GT:G(=^[&H--G8)^@)@F@@@B^@)^@)^@)^@)^[KDDJCLGDS)^@)^[0GD$G*)ID5G(5G*)GL?JM
)@@G@@H9<HT>G))G1?GD$^@)@F@@@B^@)^@)^@)^@) LKDDJD(OCC)^@)^[!I(?I-( (4H[2G(-G))JN
)@@G@@GD<GT>IT3^[&H--G8)@E@C@B^@)^@)^@)^@)^[KDDJD[RCC)^@)^[*HD$H[>IT4^[7IL(I->JO
)@@G@@^[-G-=IL>IT3@I@@@C^@)^@)^@)^@)^[KDDJD[RCC)^@)^[*HD$H[>IT4^[7IL(I->^[-G-=JP
)@@G@@IL>IT3^@*HD,^[3G(<I-\IL3 C)^@)@]@@@AETKCD#C*)^@)@L@@@A^[OH[>^@)G1(G(?G-3JQ
)@@G@@^@)I-*GD4^[-IL>^[0IL>G1(J[>G))I9(I-*^[-H0)GD3I->IL(IT:^@* K(^[!I(3I))GL>JR
)@@G@@^[3G(4^[+JC)@L@@@A^[4H[>^[5IT>IK)GL>G1\IL>^[5IT(H1$^[4H[>^[0GD$G(=^[D 9JJS
)@@G@@^[2H95I-(H1>IS;^[4H[>^[\I-*G(2^[&HD>H-=IS)GD2G*)@K@@@A^[5IT>G))HD,^[4H[>JT
)@@G@@^[0IL\GT>IT3^[\G0)I[>IL&H92H((H1$^[4H[>^[0GD$G(=^[D 9J 0)E-*G*)H(,G(!H9,JU
)@@G@@HD<IS)@G@@@A^[5IT>G))GD+H96G*)^[-IL>^[-I1-HD?GD+H->^[+JC)GT-H-?HD,G8)I-*JV
)@@G@@G*)I[2H9<BK)@]@@@AETKCD#C*)^@)@I@B@A^@)^@)^@)^@)^[KDDJ^-ADD D-^ES)^@)^@)JW
)@@G@@^@)^@)^@)^@)^@)^@)^@/I[-GT:G(4^[-G-=IL>IT3B0)^@)@E@@@B^@)^@)^@)^@)^[KDDJJX
)@@G@@^-ADD D-^ES)^@/I[-GT:G(4^[-G-=IL>IT3B0)^@)@]@@@AETKCD#C*)^@)@K@@@A^[OH[(JY
)@@G@@IS)^[0IL\GS)I9(H-?^[=G(&HD,G*)I-*G*)G1(G(?G-3^[+GD3G(=^[\H0)B-0GD<HT>I))JZ
)@@G@@GD=G-2G(3IS" ))HD&@L@@@A^[$HD6G(, ))H94H[>IL7HD3G*)I-*G(9^[7HD?H))GL>^[+KA
)@@G@@GD3G(=^[\H0)JL>IL\ ))GD,G))H(5IT4^[+G*)I(3G(=^[7HD4H@)@H@@@A^[-H0)^[(H1=KB
)@@G@@G(8^[2G($HD3I->IK)GT\H14GD(H1(H1$^[4H[>^[0GD<HT>I))GD=G-2G(3IS,^@)@]@@@AKC
)@@G@@ETKCD#C*)^@)@L@@@A^[DH0)GD<I-5GD?^[5IT-G9> ))I-*G*)I(3G(2^[,G(>G))H1>I1>KD
)@@G@@IK)GL>^[<H9,GT>IL,G(=^[7HD4H@)GD,JD4H[(H1$^[(H0)@K@@@A^[4H[>^[0GD<HT>I))KE
)@@G@@^[>J[<G(0I))G1\I(2^[4H[(H1$IS'^[OH[>^[+I(&G1>IK)GD=G-2G(3IS) [KDDJCL[ C?KF
)@@G@@^[4H[>@K@@@A^[7H92G))GT\I(,I)) [KDDJE9# C?^[4H[>^@)G-2I(!^@)GD=G-2G(3IS)KG
)@@G@@^@*E[DD9^CC( ))^[-H1=^@)I-*G*)^[D 9J@K@@@A^[3I--I-5IS)^[2G(4I(2H1>G)) [KKH
)@@G@@DDJETOCC( 0)^[^H9(H1$^@)GD,JD4H[(H1$^[>J[<G(0I))HD$H1\IL(H1$^[4H[>@K@@@AKI
)@@G@@^[\I-*G(2^[&HD>H-=IS)I9(H-?^[<GD5IT>^[*G(-G--GT*G(3^[-H1=^[0IL\GL-GL?JC)KJ
)@@G@@I[2H9=I(<G*)G(8GT(I-(H1$@A@@@A^[-H1=^[7H9,G-2H95IS)G(2IL\IL3 0)^@)@B@@@AKK
)@@G@@ALKGD$G(=^[D 9J^[KGD<HT>I))CT2G(-I-(H9, 0)@L@@@A^[OH8)^[!GD:G*)^[(I))GD3KL
)@@G@@^[0GD(H1?G(3IS)GD3^[0H93IT(GL?G*?^[-^[*GD,G-9^[0IL\GS)G(8HD3I-3^[&H92^[4KM
)@@G@@H[>^@)@J@@@A^[3H9?G*)I[5IL0H93G*)H9&^[<IL>GD4HD,G8)I-*G*)I[-GT:G(4^[&H92KN
)@@G@@^[5IT>^[7HD4H@)I-*G*)E[DD8=^@)@#@@@A^[2H95I-(H1>IS'^@)@]@B@AETKCD#C*)^@)KO
)@@G@@@]@@@BETKCD#C*)^@)@L@B@ACT D1OC(M^[KDDJ^-KDTO^@$B-ADDGC(ICDHC*"^8)B-RCS"KP
)@@G@@ )/CL[B0)B-^CC" )/E9[C0"^@/E9OC0" )/E-MCC" )/ET[D)"^@)@L@@@BCT D1OC(M^[KKQ
)@@G@@DDJ^-KDTO^[; L.^8/C1IB0$^@/E9#B0?B-]CC"^[; L.B-^CC"^@/E[[D)" )/E9OC0" )/KR
)@@G@@E-MCC" )/ET[D)"^@)@]@@@AETKCD#C*)^@)@N@@@B^@/C1IB0)HD3^[4H[>^[(H14G(2H1-KS
)@@G@@H))G1(H->H1-H(>BS)HD&^[4H[>^[,GD!G*)HD3^[&H--G9$G(=^@*I9(I-*^[-H0)GD3I->KT
)@@G@@IL(IT: C?^@)@L@@@B^[4H[>^[!I(4H-( (4H[2G(-G))GD<GT>IT3^[&H--G8) [KDDJD(OKU
)@@G@@CC(^[(IS)IT>I)?^[\I-*G(2I9(IT>^[(I))HD3^['G(2H8,@M@@@B^@/E9#B0?B-]CC"^[(KV
)@@G@@IS)I-*G*)I9\IL=^[<H95H14^[-H1=^[+I(&G1>IK)GD=G-2G(3IS)G1\IK)I-*G*)DC\D8)KW
)@@G@@I-2GD,IT&G(2IS,^@)@O@@@B^@/C-[B0)HD3^[4H[>^[=HD3HS)GD=G-2G(3IS;^[(G0)HD4KX
)@@G@@^[(IS)G1?GD$G9>G))I9(I-*^[-H0)GD3I->IL(IT: ))I-*G*)I9\IL= (-G-=IL>IT3^@)KY
)@@G@@@M@@@B^[&H--G8) [KDDJE9[C0(^[(IS)IT>I))GD,G))I-*G*)GD=G-2G(3IS)HD3^[(H0)KZ
)@@G@@I(,HD4IS)H9&^[7H92G-3 ))H94H[>IL7HD3G*)^@)@J@@@B^[KDDJE9[C0)HD3^['G(2H9>LA
)@@G@@G))GD,G))I-*G*)GD=G-2G(3IT>IS)GD2G*)HD,^[5H1(I-3^[\G0)IT>GT4H92IS,@#@@@BLB
)@@G@@^[OH[>^[&H95IL4H@)@L@B@A^[OH[>^@)G1(IL3I))^[4H[2G(>^@)G1(G(?G-3^@)GD2G*)LC
)@@G@@^[3HD!HD?GD2^@)I-\^@)GC)^[3JD3I->H*)HC=H9=^[0IL\GS)^@)@K@B@A^[<GD?H)'^@)LD
)@@G@@B-AHD?G(,GD!G*"^[(IS)I-*G*)HD,I->IL,GD?^[5IT>H1-H(>^[4H8)GL>^[5IT>G))G1\LE
)@@G@@IK)^[D 9JBS)@L@B@A^@/I9<B0)^[(IS)^[4H[>^[7H92G))^[<H95H14BS)^@/GL-B0)^[(LF
)@@G@@IS)^[4H[>^@)GL5G1&G(2^@)GD=G-2G(3IS;^@/G--B0)^@)@J@B@A^[(IS)I-*G*)HD,HD4LG
)@@G@@HD-H))G-2I(!^[-G-=IL>IT3BS)B-7GD&B0?^[(G0)G9(I1>H0?^[(IS)H1\H1'G(2H8)I-\LH
)@@G@@@L@B@A^[(H1=HD<GD4G*)I-*GD4^[4H[>^[-G-=IL>IT3G(3^[(H0)I-*G*)I[-GT:G(4^[-LI
)@@G@@IL>^[(H0)I(,HD4IS)H9&^[7H92G-3 ))^@)@L@B@A^[-H1=^[(G0)JL>IL\ ))H92^@)H9!LJ
)@@G@@HD4I->G)?^@)HD,G-(GT-I->IS)IT>GT4H92^[-G-=IL>IT3G(3 0)E-*G*)G1\I(2I-*^@)LK
)@@G@@@K@B@A^[&HD>H-=^[(IS)I(3G(=^[4H8)HD,HD4HD-H-(JL>^[4H[>^[6GD?I(>IS)H9&^[4LL
)@@G@@H[>^@)I92HD4G*!I-*IL\I($H@)^@)@K@@@B^[&HD>H-=^[(IS)I(3G(=^[4H8)HD,HD4HD-LM
)@@G@@H-(JL>^[4H[>^[6GD?I(>IS)H9&^[4H[>^[0GD$HD,G8)GD2G(-^[?HD,HS?@L@@@B^[7IL(LN
)@@G@@I-> (4H[2H95G9* ))^[&H--G8?^@)I-2GD<G*)^[&H--G8?^@)GD,G))I-*G*)IT4GD4HD3LO
)@@G@@I-(GT3^[-IL>GC)H-(H1: ))@^@@@B^[2G(3I[>GT4HD6G(?JC,^@)@L@B@A^[&H--G8?^@)LP
)@@G@@I-2GD<G*)^[&H--G8?^@)GD,G))I-*G*)IT4GD4HD3I-(GT3^[-IL>GC)H-(H1: ))IL>IT0LQ
)@@G@@G(<I-(I1>H-9 0)^@)@B@@@A^[OH[>IT>^[-IL>^[=G(3GT2HD+G(=^[+G(?H97 0)@]@@@BLR
)@@G@@IT0GD<G*)^@)@O@@@B^[OH[>^[!I(?I-( (4H[2G(-G))GD<GT>IT3^[&H--G8) [KDDJD(OLS
)@@G@@CC(^[-H1=^[4H[>^[*HD$H[>IT4^[7IL(I->^[-G-=IL>IT3^@*E[DD9CE9[ C)^@)@M@@@BLT
)@@G@@^[-IL>^[4H9$G(4H[>IK)I(3G(=^[4H8)G->I->IL!HD,G*)I9*G(4H[>IK)H92^[,H94^[-LU
)@@G@@^[2G(-G)!GL>G1\IL> (7IL(I->^[(IS)^@)@N@@@B^[,G(<G(3IT-IL9^[+G(&H92G*)I-2LV
)@@G@@GD,IT&G(2IL(H1$^[=GD4GC)G12H9!^[4H[>^[5IT>IK)I-\^[-^[0GD$G*,^@)DD&^[4H[>LW
)@@G@@^[&HD?G*)^@)@M@@@B^[(IS)H(5H-4HC!I-*IL>GD=^[-GT<G(3IS?^[\IK)I-*G*)IL>ID5LX
)@@G@@G(3I->G))I92HD4G*)GD=G-2G(3IS)HD3^[?G(3IS)I-*GD,^[4H[>@M@@@B^[*HD$H[>IT4LY
)@@G@@^[7IL(I->^[-G-=IL>IT3 ))GC)IL>GD= (+G(&H92G*!I92HD4G*)HD3^[,G(<G(3IT-IL9LZ
)@@G@@^[4H8)G(,IT5IL>^[6GD?HD=@L@@@B^[0GD$G*)GT\H14G(,I-3 ))GL5I))GD=G-3^[4H8)MA
)@@G@@I-*G*)H96G(2H[>GD=^[\G0)I-*G*)I[-G9(H1$^[-H-$H92HD4H[! 0)^@)@]@@@AETKCD#MB
)@@G@@C*)^@)@B@@@AATPIT>IK!G->G1(H1>G))E[-GT:G(4^[AH--G93 0)@L@B@A^[OH[>IL>^@)MC
)@@G@@GD2G*)^[4H[2G(>^@)G1?GD$IS)^[(H0)^[4H[>^@)I[-GT:G(4^[4H[-I))H(5IT4^[+G*)MD
)@@G@@IT>I))GL9^[4H[>^@)@L@@@B^[OH[>IL>^@)GD2G*)^[&H95IK)^[<G(?H-3^@)HD,^@)I-*ME
)@@G@@G*)^[0GD<HT>I))I-*GD4^[!I(3I))GL>^[3G(4^[+JC)I-*G*)^@)@L@B@A^[5IT>IK)GL>MF
)@@G@@G1\IL>^[<GD?H-(H1$^[-H19^[D 9J^[\I[>IL-I-(H9,IS'^[OH[>^@)I92HD4G*!I-*IL\MG
)@@G@@I($H@)^[&H--G8)^@)@E@@@B^[5IT>IK)GL>G1\IL>^[<GD?H-(H1$^[-H19^[D 9J^[\I[>MH
)@@G@@IL-I-(H9,IS'@C@@@B^[OH[>^[0GD$HD,G8)GD2G(-^[?HD,HS) [KDDJE[[D)( ))@K@@@BMI
)@@G@@^[4H[>^@)I92HD4G*!I-*IL\I($H@)^[&H--G8)^@*E[DD9RE-A C?^[4H[>^@)I-2GD<G*)MJ
)@@G@@^[&H--G8) [KDDJE-MCC( ))@L@B@A^@*E[DD9RE-A C;^[4H[>^@)I-2GD<G*)^[&H--G8)MK
)@@G@@ [KDDJE-MCC(BS)GD,G))I-*G*)IT4GD4HD3I-(GT3^[-IL>GC)H-(H1: 0)@E@@@B^[-H1=ML
)@@G@@^[4H[>^[3I--I-(IT4HD<IS)GD2G(-^[?HD,HS) [KDDJET[D)( 0)@K@@@A^[OH[>^[&H9?MM
)@@G@@H-\I9(H1$^[(IS)GC)G->IT<IL(I[4HD\H0)H9&^[4H[>^[5IT-G9>^[\G0)G(-GT*^[\G0)MN
)@@G@@I-*G(3G*)^@)@]@@@A^[&H--G93BK)@]@@@AETKCD#C*)^@)@ @@@BA-KGD$HD,G8)CD2G(-MO
)@@G@@^[GHD,HS,^@)@N@@@B^[OH[>^[0GD$HD,G8)GD2G(-^[?HD,HS)D(PETO^[+G*)I[2H90G(2MP
)@@G@@H-9^[3G(4^[4H8)G(,GD+H->^[4H[>^[0GD$G(=^[D 9J^[2H95I-(H1>IS)@M@@@B^[4H8)MQ
)@@G@@I[>IL&H92H*)I-*G((IK)G15H1<I-(H9,IS,^@)E-*HD3^[?HD,HS)HD3^[4H[>^[-G-=IL>MR
)@@G@@IT3^[\G0)I-*G*)G1(IL3I))I9\IL=@M@@@B^[\G0)I-*G*)I[-G9(H1$^[-IL>GC?^[-H1=MS
)@@G@@^[4H[>^[0GD$HD,G8)GD2G(-^[!I(3I))GL>^[(H1(I-(GD?HD'G(= 0)^[OH[>IL>^[-IL>MT
)@@G@@@M@@@B^[4H[2G(>^[7GD9IS)I-\^[*GD6G*)I-*G*)I[-G9(H1$^[-IL>GC)HD,HD4HD-H-(MU
)@@G@@JL>G)) [3G(>^[NG(<I-(H9,^@2 01 C,^@)E-*HD3@M@@@B^[<G(?H)?^[\H1<G*)E[DD9AMV
)@@G@@D8=^[*GD3^[+G(>H0)GT-H-?G(= ))H(5IT4^[,G(6G(2^[+G*)H(\G-(G1(G(=^[5H14HD?MW
)@@G@@^[-G14G(2^@)@J@@@B^[<GD?H-(H1$^[KDDJC1#^))H92^[4H[>^[0GD<HT-G9>^[7HD?H))MX
)@@G@@H1\I))G15H1<I-(H9,^[<H92IL>GT4H-9 0)@]@@@BETKCD#C*)^@)@ @@@AA-RIL(I-> (4MY
)@@G@@H[2H95G9*^[AH--G8,@]@@@AETKCD#C*)^@)@K@@@A^[OH[>^@)I92HD4G*!I-*IL\I($H@)MZ
)@@G@@G1?GD$^[(IS)I(3G(=^[4H8)GT-I(3G*)GD?H))I[-G9>IS)H(\G-(G1(G(=^[+JC)@L@@@ANA
)@@G@@^[7IL(I->^[\I[>IL-I-(H9,IS)I-\^[+G*)HD!H(>G-(GD4G(?JC)I92HD4I->H0)I-\^[4NB
)@@G@@H[>^@)G1(H-> ))HD,IT4G(-G))^@)@L@@@A^[\G0)^[!G(2G(?JC)^[!GD2HT(H1$^@)I-*NC
)@@G@@G*)^[!H9=HD&HD>G))I[-G9>IS)G1\IK)H--I->IK)H95I-0I(4 0)DD&^[4H[>^@)@J@@@AND
)@@G@@^[7IL(I-> (4H[2H95G9*^[&H--G8)HD3^['G(2H8?^@)H(\G-(G1(G(=^@)I[-G9>IS)I9(NE
)@@G@@H-?^@)H1\I))^[+G*)@K@@@A^[7IL(I-4G(,^@)I(,I-(H))I-*G(9^[-IL>^[,G(>G->G))NF
)@@G@@G1\IK)H94H[>IK)DC\D8)H90G(2GD4HD\H13 0)E-*G*)^@)@K@@@A^[-G-6GD,I--G9>^[\NG
)@@G@@G0)H1\I))HD!H(>G-(GD4G(?JC)I92HD4HD,G8)GC)I[-G9>^[(IS)I-*GD4^[3I(+IT>ID5NH
)@@G@@G(,I))@L@@@A^[2G(-G-3^[-H1=^[7IL(I->IS)I-\^[4H[>^[3GD!G*)^[0GD$G*)^[7HD?NI
)@@G@@H))H1\I))^[<GD5IT>^@)GD,JC)^[D 9J^@)GD4^@)@L@@@A^[-H-?BS)^[4H[(IS)HD3^[4NJ
)@@G@@H[>^[,H92H(-H))GT-IT>^[&H92^[2GD,G-\H*)DC\D8,^@)E-*G*)^[7IL(I-> (4H[2H95NK
)@@G@@G9*^@)@J@@@A^[&H--G8)^[(IS)^[!GD(H1?JC)^[5IT>G))^[4H8)IT9H1<IL\H1(JL>^@)NL
)@@G@@GD<GT>IT3^[4H8)GC)G1(H->^[\IK)@K@@@A^[$I(-IL-H14G(>^[4H[>^[\I(4I[5I))H9&NM
)@@G@@^[4H[>^[=GD4GC)I-\^[4H[>^[&HD?G*)HD!H(>G-(GD4G(?JC,^[OH[(IS)@L@@@A^[&H--NN
)@@G@@G8)H(-JC)GL>^@)G-9H1-H((GT-H-?JC)IT>I))^[\IK)^[<H->GD2G(=^@)GD3^@)H1>G(=NO
)@@G@@G(= ))^[-G1&G(<I-(H1$^@)@C@@@A^[\H1?JC)^@)IT5GL3G(1I(>H14^[\I[>IL-I-(H9,NP
)@@G@@IS,^@)@]@@@AETKCD#C*)^@)@#@@@AA-OIL-GT>^[AH--G8,@]@@@AETKCD#C*)^@)@K@@@ANQ
)@@G@@^[RH[>H0)^[4H[>^[4IL-GT>^[&H--G8)HD3^[3G(4 ))GD?H))DC\D8)H90G(2GD4HD\H13NR
)@@G@@^[-IL>^[4IL-GT>G)?^[-IS)@L@@@A^[7G(?H))GD3^[-H19^[0GD$G*)H[(I-3^[\IK)G1-NS
)@@G@@I(?I-3 ))I-*I(3^[$HD6HD,G8)I-*G*)^[5IT>IK)GC)G9>H1>IL-H))^@)@K@@@A^[!G(-NT
)@@G@@IT5IL>^@)H9&^[4H[>^[0G(2G1\IL!GD,GT>^[<H[-IL-GT4G(2HD3I-(GT3^[\G0)I-*G*)NU
)@@G@@E[DD8=^[0GD<HT-G9>@L@@@A^[7HD4H[(H0)GC)G9(I1>H0)GT\H1&HD$I(2GD4HD\H0,^[PNV
)@@G@@IT(H1$^[4H[>^[\I(4I[5I))I[2H9=I(<G(= ))I-*G*)I(3G(2^@)@L@@@A^[!GD9^[4H[>NW
)@@G@@H0)GD4I->H(0I))I-\^[\I[4HD!HD'G*)I-*G*)^[0GD$HD,G8)GD2G(-^@)GT\H1&HD$I(2NX
)@@G@@GD4HD\H0,^@)E-*G*)@F@E@A^[4IL-GT>^@)G1?GD$^@)H(-JC)^[+G*)H9,G*)H9&^[&HD6NY
)@@G@@G*)I1-H-5G(3BK)^@)@H@@@E^[4IL-GT>^[&H--G8)GT\H13HD3I-3^[\G0)G1\I(2^[(H1=NZ
)@@G@@G(0G(,G->H14^[+HD4^[6GD?I(>IS'@]@@@AETKCD#C*)^@)@A@E@A^[OIL-GT>^@)^@)^[NOA
)@@G@@HD$H1(G1(GT-H1<G*)@A@@@E^[]HD4^@)^@)^@)^[NHD$H1(G1(GT-H1<G*)@ @E@A^@)^@0OB
)@@G@@^@)^@)^@)^[,H8)I-2GD<G*)@H@E@A^@)^@1^@)^@)^@)^[0IL(H14^[3I--I-(IT4HD<GD?OC
)@@G@@^[3I(!H(-IL9^[\H1?JC) [(G0)GD,JC(^@)@G@@@E^@)^@0^@)^@)^@)^[0IL(H14^[3I--OD
)@@G@@I-(IT4HD<GD?^[3I(!H(-IL9^@*HD&^[-H19 C)^@)@F@E@A^@)^@2^@)^@)^@)^[0IL(H14OE
)@@G@@^[5IT>IK)IL>GD= 97IL(I->IS?^[-H1=^[-GL\I1>@F@@@E^@)^@1^@)^@)^@)^[0IL(H14OF
)@@G@@^[5IT>IK)IL>GD= 97IL(I->^[2G(1I(>IT4IS)^@)@F@E@A^@)^@3^@)^@)^@)^[0IL(H14OG
)@@G@@^[0GD$G*)IL>GD= 97IL(I->IS?^[-H1=^[-GL\I1>@F@@@E^@)^@2^@)^@)^@)^[0IL(H14OH
)@@G@@^[0GD$G*)IL>GD= 97IL(I->^[2G(1I(>IT4IS)^@)@F@E@A^@)^@4^@)^@)^@)^[0IL(H14OI
)@@G@@^[0GD$G*)H[(I-3 9&GD5H-4IS?^[-H1=^[-GL\I1>@E@@@E^@)^@3^@)^@)^@)^[0IL(H14OJ
)@@G@@^[0GD$G*)H[(I-3^[-H1=^[&GD5H-4IS)^@)@]@@@AETKCD#C*)^@)@L@@@E^[OH[>IL>G1\OK
)@@G@@IL> ))GC)I-2GD<G*)G1?GD$^[6GD?I(>^[\G0)A*) [+HD4IS)A@)GD,G))AK(^[7H95H-=OL
)@@G@@^[<GD5IT>^[0GD$G*)@M@@@E^[2G(-G)\I92HD4G*)IL>ID5G(3I-3^[4H8)GL>^[0IL(H14OM
)@@G@@G(=^[-H-\H1$^[7HD4H@)I-*G*)IT4GD4HD3I-(GT-H))IT5H(!GD2JC,^@)@K@@@A^[OH[>ON
)@@G@@^@)IT4GD4HD3I-(GT-H))^[3I(!H(-IL9^@)I9(H-?^[\H1?JC)GL>^[0IL(H14G(=^[(G0)OO
)@@G@@I-*G*)I(3G(2^[*GD3@L@@@A^[3I(0I[?HD>G))I-*G*)I->H0)I9\IL=^[-IL>GC)H1>GT>OP
)@@G@@IT3GD2JC)^[4H8)^[!GD(H14GD(H0)^[4H[>^[<H95H14G(2IS,^@)@K@@@A^[DH0)^[$G(,OQ
)@@G@@G(2GD? ))^[4H[>^@)H[(G9*G(2^[4H[>^[6GD?I(>^[\G0)I-*G*)I-2GD<G*)G1?GD$ ))OR
)@@G@@I-*G*)H(\IL>@B@@@A^[<H9!I[2G(*G(,IT(I1>^[4H[>^[\I(4I[5I),^@)@]@@@AETKCD#OS
)@@G@@C*)^@)@A@@@AA-NI--I-(IT4HD<IS)CD2G(-^[GHD,HS,^@)@]@@@AETKCD#C*)^@)@L@@@AOT
)@@G@@^[ I1>H0)^[4H[\I($H@)I-*G*)I-2GD<G*)G1?GD$^[!GD9^[+G*)JL>IL\ ))I-*G*)I(3OU
)@@G@@G(2^[!GD9^[3I-(H-?^[\I[4^[4H8)@K@@@A^[<H9?H->GT4^[3I--I-(IT4HD<IS)I-\^[0OV
)@@G@@IL\GT>IT3^[\H0)^[*HD3^@)H97H0,^@)DD&^@)I-*G*)IT4GD4HD3I-(GT3@L@@@A^[-IL>OW
)@@G@@GC)H-(H1:^[(IS)JL>IL\ ))H1\^[3I--I-(IT4HD<IS)G9-I-*G(2HD,G8)I9(H-?^[+G*)OX
)@@G@@^[0G(2G1\IL!G(= 0)^[DG0)@L@@@A^[(I))^[(IS)^[,H94^@)JL>IL\ ))HD4^[(IS)I--OY
)@@G@@HT>H0)I-\^[+G*)GD,^[-G-=IL>IT3^[\G0)GD,^[>H->I1>H0)I9\IL=^@)@L@@@A^[-IL>OZ
)@@G@@GC)^[7H[>IL>^@)GT>IL4GD(H0)^[3I--I-(IT4HD<IS)I9(H-?^@)GL>^@)HT>I[4 0)^[OPA
)@@G@@H[>^@)G1(IL3I))^[3HD8^@)@K@@@A^[7H92G-3^[-IL>GC)I9(H-?^[+G*)I(3G(=^[4H8)PB
)@@G@@GT\I(,I))I-*G*)I-*G*)H15H(+G(2^[\G0)^[5IT>IK)^[2G(-G))@K@@@A^[2G(1I(>IT4PC
)@@G@@IS?^@)I(3G(2^@)I92HD4G*)IL>ID5G(3I-3 ))^[0GD$G*)^[2G(-G-3 ))^[0GD$G*)^[7PD
)@@G@@IL(I->IS?^@)@K@@@A^[0GD$G*)H[(I-3 ))GD,G))I[-G9>^[&GD5H-4IS?^[(H0)I-*GD4PE
)@@G@@^[\IL=G(2 0)E-*G*)H1>J[4^[4H[2G(>^[7H92G-3@K@@@A^[-IL>^[4H[>^[!GD8HD!I(!PF
)@@G@@^[7H92G))GT\I(,I)?^[!HD,HD!I(!^[7H92G))GT\I(,I)?^[-H1=^[4H[>^[-I1>IL-G9>PG
)@@G@@@L@@@A^[7H92G))GT\I(,I),^@)E-*G*)^@)^[4G(,I-*^@)^[7H92G))^[(H0)^[4H[>^@)PH
)@@G@@IT4GD4HD3I-(GT3^@)GD2G(-^@)HD3^@)GC)@L@@@A^[0GD$G*)IL>GD= (+G(&H92G*!I92PI
)@@G@@HD4G*)GT\I(,I),^[OH[>^[?GD3I))^[7H92G))^[<H9,I--HD,IS)^[(H14G(2H1-H))^@)PJ
)@@G@@@K@@@A^[<H9,I-2H9?^@)HD,G1\IL!GD4HD\H0,^@)DD&^@)I-*G*)I-2GD<G*)G1?GD$^[(PK
)@@G@@IS)IT>I))GD?H9,G8)I9(I-*^[4H[>@L@@@A^[3I--I-(IT4HD<IS)GD2G(-^[?HD,HS?^[-PL
)@@G@@^[,H9!HD,GD?^[-H(\I(,I))^[\G0)^[(H1&H92H(-I-(H9,^[7HD?H))^[+G*)^@)@K@@@APM
)@@G@@^[<H9!I[5I->G))^[-H1=^@)I[2HD,I->G))^[7H[>H0)^[4H[>^[<I(2IL>H14^[&HD?G*)PN
)@@G@@HD3^[<H-\IT>G),^[OH[>^@)@K@@@A^[3I--I-(IT4HD<IS)GD2G(-^[(IS)HD,HD4HD-H-(PO
)@@G@@JL>G)) [<H->GD2G(= C)I9*G(,^[-^[&HD?G*)HD3^[\I[>H1>G),@]@@@AETKCD#C*)^@)PP
)@@G@@@ @@@AAT#H[-H1$HD,G8)E-*G*)C1?GD$IS,@J@@@A^[DG0)^[>HD4H[>IK)I-*G*)I-2GD<PQ
)@@G@@G*)G1?GD$^[\IK)IT4GD4HD3I-(GT3^[-IL>GC)H-(H1:^[(IS)I-\^[+G*)@K@@@A^[=JD,PR
)@@G@@GD!HD<GD?H-9^[!H9=HD&HD>G)?^[4H[>H0)I-*G(9^[!I(3I))HD,HD4HD-H-?JC)GL>^[3PS
)@@G@@G(4^[\H0)I-*G*)^@)@L@@@A^[KDDJ^-KDTO^[0IL\GS)GT-H-?^@)GD3^[(I))^[-H-3H8)PT
)@@G@@^[(H1(I-(GD?HD'G(3^@)I-7H8)H-(H1:^[-G-=IL>IT3G(3^[(H0)@K@@@A^[4H[>^[0GD<PU
)@@G@@HT>I)?^[4H[2H95G9*^[7H[(GT*^[4H[>^[4IL-GT>^[\IK)IT4GD4HD3I-(GT3^[2H95I-(PV
)@@G@@H1>IS)GD2G*)@K@@@A^[<GD?H->G)?^@)IL>IT0G(<I-(I1>H-9 0)^[DG0)^[4H[>IT>^[6PW
)@@G@@GD?I(>IS)^[-IL>^@)HD,HD4HD-H-?JC)^['G(2H8?@L@@@A^[4H[>H0)^[4H[>H0)I-*G*)PX
)@@G@@IT5GL2H95I-(H1>IS)I-*GD4^[3I(0I[\IL4^[4H[>IT>^[&G(-I-5IL>IS)I9(H-?^[,H94PY
)@@G@@^[+G*)@I@@@A^[<H9?H->GT4G(=^[7HD4H@)I-*G*)H(-HD,^[0IL\G92GD! ))GD,G))GT-PZ
)@@G@@H1,H94^[+G*)G(,GD+H->G))@^@@@A^[=JD,GD!HD<GD?H-9 0)^@)@]@@@AETKCD#C*)^@)QA
)@@G@@@]@@@AETKCD#C*)^@)@^@@@AAD^H9(H1$^[OH[>^[D 9J 0)@N@@@B^[OH[>^[<GD?H-(H1$QB
)@@G@@^[3G(1I(>H1<G*)G1\IK)GC)E[-G9>G))DC\D8)IL>ID5G(3I))HD,GT?I(=G(3^[0IL\I[>QC
)@@G@@IL?JC)HD,HD4HD-H-(JL(H1$@O@@@B^[4H[>^[7H92G))GT\I(,I)) [KDDJE9# C?^[+I(&QD
)@@G@@G1>IK)GD=G-2G(3IS) [KDDJCL[ C?^[-H1=^[4H[>^[&HD?G*)GD=G-2G(3IS) [KDDJC-[QE
)@@G@@ C,^@)@N@@@B^[JH1<G*)I-*G(3G*)GT>H-?IS)GD2G*)IT>I)?^[4H[>^[KDDJ^))I[-GT:QF
)@@G@@G(4^[-G-=IL>IT3^[(IS)H-\GD=G(=^[(H14H8)CC0 ))GD,G))^@)@O@@@B^[-^[4IL-H13QG
)@@G@@G1>IK)I-\^[\H1>^[\G0)I-*G*)E[-G9>G))DC\D8)IL\I(4HD,G(3^[(IS)H(-G-> 0)^[PQH
)@@G@@I[\H0)IL>I-5IL, ))CC3^[<H9,I--HD,IS)@N@@@B^[4H[>^[D 9J^[3I--I-5IS?^['G(2QI
)@@G@@H8)HD,G-(GT-I-(H1$^[,H92H(-H))GT\H(0H->I-(H9, 0)^[OH[>^[<G(?H-3^[KDDJE9#QJ
)@@G@@ ))E[DD9]CC?@N@@@B^[-H1=^[KDDJC-[^[-IL>^[5H1<H[-H1$G(=^[-H1=^[!GD9^[+G*)QK
)@@G@@I(3G(=^[&H92^[3I(+IT>ID5G(,I))GT-H-?IS)I-\^[-^[0GD$HD,G8)^@)@#@@@B^[2H95QL
)@@G@@I-(H1> 0)^@)@L@B@A^[OH[>^@)GT-H-?HD,G8)IT>ID5G(,GT>IS)G1\IK)I-*G*)DC\D8)QM
)@@G@@IL\I(4HD,G(3^[-IL>^[>J[-GT4H-9^[3HD!HD?GD2^[4H8)@J@B@A^[4H[>^[>J[>GT5I-(QN
)@@G@@I1>^[2G(1I(>IT4^[3G(1I(>H1<G(3 ))HD,GT?I(=HD,G8)IT5GL3G(1I(>H14^[>IL2H92QO
)@@G@@@K@B@A^[<H[>GT:HD,G8,^[OH[-I))HD3 ))I-*G*)G1(IL3I))IT(J@)I9\IL=IS)H9&^@)QP
)@@G@@I-*G*)^[0GD<HT>I))^[(IS)^[-H0)@K@B@A^[D 9J^@)I[-GT:G(4^@)I-*GD4^@)HD3^[5QQ
)@@G@@I-(H-(JL>G))^[(H0)G(8GD<I-?JC)I-*GD4^[&GD3H[(H9, 0)C1\IK)^@)@K@B@A^[(H13QR
)@@G@@I--H1<G*?^[(G0)I-*G*)I(3G(2^[7HD3H[>G))I-\^[2G(-G))A)4B@)I9\IL=IS)HD,I-\QS
)@@G@@^[+I(&GC?^[&IL\H*)@L@B@A^[3G(<I-\IK)B@)H9&^[4H[>^[&HD?G*?^[4H[>^[0GD<HT>QT
)@@G@@I))^[7H95H-=^[+G*)IT>I-5I@)HD,^[4H[>^[&H9?H-\I9(H1$^@)@K@B@A^[7GD9BK)E-*QU
)@@G@@G*)I9\IL=^[<H95H14^[7H95H-=^[+G*)IT>I))I-\^@4A)8BS)I-*G*)GL5G1&G(2^@)GD=QV
)@@G@@G-2G(3IS)^@)@L@B@A^[7H95H-=^[+G*)IT>I))I-\^[4H[>^[-G-=IL>IT3^[\G0)GL5G1-QW
)@@G@@BS)I-*G*)G-2I(!^[-G-=IL>IT3^[7H95H-=^[+G*)IT>I))@L@B@A^[4H8)^@8 0)^[OH[>QX
)@@G@@IL>G1\IL> ))^[4H[>^@)GT-H-?HD,G8)^[3G(1I(>H1<G*)^[&H92^@)I-*G*)^[D 9J^[2QY
)@@G@@H95I-(H1>IS)@J@@@B^[OH[>IL>G1\IL> ))I-*G*)^[<GD?H-(H1$^@)IT>ID5G(,GT>^@)QZ
)@@G@@G1\IK)^[4H[>^@)DC\D8)IL\I(4HD,G(3^@)@[@@@A^[(IS'@]@@@AETKCD#C*)^@)@C@@@ARA
)@@G@@^@)^@)^@)^@)^@/ET>I-5I@)I-*G*)DC\D8)I[-GT:G(4B0)@J@@@A^@)^@)^@)^@)^[GCC?RB
)@@G@@E*)^@)^@)CC0 -0HT4^@)^@)^@)^@)^@)^@) 0)E[DD8=^[0GD<HT>I))GD=G-2G(3IS)^@)RC
)@@G@@@J@@@A^@)^@)^@)^@)^[GD(E^@)^@)^@)F@1AC?E[DD98J[8^@)^@)^@)^@) 0)CT-H-?^[4RD
)@@G@@H[>^[3I(+IL\I(4HD,G*)^@)@C@@@B^@)^@)^@)^@)^[ED1U^@)^@)^@)CC3 )/HD\^[>IL2RE
)@@G@@H92B0)@]@@@AETKCD#C*)^@)@K@C@A^[IH94G*?^[*H97G(6G(2 ))I-*GD4^[4H[>^[D 9JRF
)@@G@@^[&I(,GT4HD\H0)HD,^[4H[>^[0GD<HT>I))H1>G(=^[,H94^[+G*)@I@@@C^[IH94G*)I-*RG
)@@G@@GD4^[4H[>^[D 9J^[&I(,GT4HD\H0)HD,^[4H[>^[0GD<HT>I))H1>G(=^[,H94^[+G*)^@)RH
)@@G@@@F@@@A^[3G(4BS)HD4^[7HD?H))GL>^[3G(4^[+JC)I-*G*)E[DD8=^[2H95I-(H1>IS,^@)RI
)@@G@@@]@@@AETKCD#C*)^@)@L@@@B^[MG($HD3I->IK)CC3^[2G(4I(2H13^[7HD4H@)I-*G*)DC\RJ
)@@G@@D8)IT4GD4I(3BS)HD&^[(I))HD3^[,H9,JL>IL\ ))GD,^[D 9J^@)@ @@@B^[>IL2H92^[*RK
)@@G@@GD3^[\GT<I(2IL>G),@K@B@A^[DG0)^[-H19^@)G(2IL\IK)^[\GT<I(2IS?^@)HD4^@)I9(RL
)@@G@@H-?^@)H(\IT4^[?HD:G(?JC)GL>^[-H0)DC\D8)G(2IL\IK,@L@B@A^[OH[(IS)GT\H1=HD4RM
)@@G@@HD\H0)H(-JC)GL>^[=G(4G(<I->G))GL9^[1I(>IL9HD,G8)I-*G*)DC\D8)IT4GD4I(3^[6RN
)@@G@@GD?I(>^[(H0)@ @B@A^[4H[>^@)DC\D8)I[-GT:G(4 0)^@)@]@@@AETKCD#C*)^@)@]@@@ARO
)@@G@@ETKCD#C*)^@)@ @@@AALMG(-G))GD,G))D-\GT:^[D 9J 0)@J@@@A^[OH[>^[,H92H(-H))RP
)@@G@@H(>GT*GD,HD3H*)G1\IK)I[2H94G(<I-(H1$^[&HD?G(3^[&IL\H*)IT(H(5H-4GD,G(\I(3RQ
)@@G@@@K@@@A^[!I(?I-( (-GT4HD6HD4JC)GD<GT>IT3^[(IS)I-*G*)I(3G*)H9&^[4H[>^[ J[>RR
)@@G@@GS)DC\D8)G15H1<I-(H9,^[MC-G^),@N@@@A^[OH[(IS)GD?H-\I93^[4H[>^[?H9<HT(H1$RS
)@@G@@^[\G0)GD2G(-IS)H9&^[!GD3IS)IT4H92GD$G*)IT>H->GT4G(=^[+JC)I-*G*)DC\D8)GD<RT
)@@G@@GT>IT3@L@@@A^[7H92G),^@)D1\IL!GD?H-9 ))DC\D8)H-\GT:IS)H(-JC)GL>^[0H--GT>RU
)@@G@@G))H9,^[-IL+HD4IL-IL9^[+H95H1=GD2HD>IS)^@)@L@@@A^@*I9(I-*^[-^[3G(<I-\IK)RV
)@@G@@GL>HD,G8)I-*G*)IT!GD?H->IT4^[?H9<HT-GL?G*)G92GD,I(?G*( 0)^[DH0)GC)I[-G9>RW
)@@G@@G))^@)@L@@@A^[D 9J^[3JD3I->H*?^[*H97G(6G(2 ))GD?H))DC\D8)H-\GT:HD,G8)I9(RX
)@@G@@H-?^[+G*)I[>IL&H92H(>G))H9,^[-^[0GD$G*)^@)@L@@@A^[+H95H1=GD2JC)GL-IT(IS)RY
)@@G@@IT(H1<G*)GD?H))DC\D8)HD3^[0G(2G1\IL!G(=^[3HD!HD?GD2H-9 0)^[OH[(IS)HD3^[4RZ
)@@G@@IL5G*)@L@@@A^[2G($GD2G-?G(3IS)H9&^[4H[>^[5IT>IK$IS)DC\D8)GD<GT>IT3^[7H92SA
)@@G@@G);^[(G0)I-*G*)I(3G(2^[2G(1I(>IT4IS)H9,H-9@K@@@A^[\H1>^[3G(<I-\IK)I-\^[+SB
)@@G@@G*)H-\GT:G(= ))I-*G*)G(,I-(IL>^[0GD$G*)GT\H14GD(H1(H1$^[4H[-I))IT>GT4H92SC
)@@G@@@M@@@A^[7HD?H))GL>^[?H9<HT>G),^@)DD&^[-H0)GD<GT>IT3^[7H92G))IT0GD,IS)IT>SD
)@@G@@I1>IL-H))I[-G9>IS?^[>GD<H@)H9&^[4H[\IT>^@)@C@@@A^[0GD$G(3^[7HD?H))GL>^[?SE
)@@G@@H9<HT>G))GD3^[7G(?H),^@)@]@@@AETKCD#C*)^@)@L@@@A^[JH1<G*)GC)I[-G9>^[-H1=SF
)@@G@@^[(I-3^[<H92IL>IT0H9,G-(H1$^[-IL>GC)H9&^[!GD3IS)IT4H92GD$G*)HD3^[?H9<HT>SG
)@@G@@G)?^@)@L@@@A^[(I))I9(H-?^[2G(!GD(H0)IT\^[5H14HD?^[-^[3I[>GT(G1(GS)IL>ID5SH
)@@G@@G(3I))I-\^[5H1?H9<HS)HD4^[(IS)H(-G-> 0)^@)@M@@@A^[[IS)I9(I-*^[4H[>^[?H9<SI
)@@G@@HT(H1$^[2G(1I(>IT4 ))I[-G9>IS)I9(H-?^[+G*)I(,H-\GT:G(=^[\H0)I[-G9>^[+H95SJ
)@@G@@H1=GD2HD>IS)@M@@@A^[\H1?JC;^[-^[2G(1I(>IT4^[4H8)I(,H-\GT:^[-H19^[-IL>GC)SK
)@@G@@H9&^[!GD3IS)IT4H92GD$G*)GT\I1>IL>G))GL9^[-^[?H9<HT>G))@G@@@A^[0GD$G*)I9(SL
)@@G@@H-?^[<GD5IT>^[4H[>^[>H14HD2G*)I[-G9>^[4H8)GL>^[5H1?H9<HT>G),@]@@@AETKCD#SM
)@@G@@C*)^@)@K@@@A^[PH1?HD:G*)I-*G*)H1\IL!GD?^[D 9J^[!G(<H[-H1(IT! ))GC)E[DD9RSN
)@@G@@^))IL>ID5G(3I))I-\^[-^[?H9<HT>G))^@)@L@@@A^[0GD$G*)I9(H-?^[,H94^[<GD5IT>SO
)@@G@@^[4H[>^[0GD$G*)GD,G))I-*G*)GT\IL2G(3I[\H1=HD,G8)H(-IT3^[3I-\IL-G9>^[4H8)SP
)@@G@@@L@@@A^[+G*)I(,H-\GT:G(=BS)HD4^[!I(3I))GL>^[3I[>GT(G1(GT-H-?JC)I(,H-\GT:SQ
)@@G@@G(=^[7HD4H@)E[DD9PD)= 0)^[KGD$G(3^@)@J@@@A^[4H[-I))GD2G*)H-\GT:G(=^[<GD,SR
)@@G@@H1\I))GL>^@+IT7GD0I[>G))H95I)+^[+JC)GC)I[-G9>^[&GD5H-4 ))^@)@M@@@A^[4H[>SS
)@@G@@JC)H(5IT4^[+G*)IL>H->GD3G(=^[+JC)I-*G*)I(3G(2 ))G((I-*G(2^[3I[>GT(G1(GT-ST
)@@G@@H-?JC)I9(I-*^[KDDJE(G^)?^[\IK)@D@@@A^[(H(0H-(GT(I-?JC)I9(I-*^[KDDJE[A^))SU
)@@G@@H92^[KDDJC1#^),^@)@L@@@A^[OH[(IS)HD3^[=H9,G*)IT\^[4H[-I))I(3G(2IS)H1>G(=SV
)@@G@@^[,H94^[<H9,GT>IL,^[4H[>H(3G(?I1>IS)I9(I-*^[0GD$G*)^@)@N@@@A^[+H95H1=GD2SW
)@@G@@HD>IS?^[=G(3I[(I->^[4H[>^[&GD<I))I-*GD4^[D 9J^[7HD?H))GL>^[?H9<HT>G))H9,SX
)@@G@@^[0GD$G*)GL\I(,G--IL(G(3 0)^@)@M@@@A^[AH92^[>J[-H(0H-> ))H->I)$IS)IT-JC)SY
)@@G@@GC)I(3G(2^[*GD3^[=G(&HD,G(=^[*HD3^[0GD$G(3^[4H8)GL>^[&H95IK)IT>GT4H92IS)SZ
)@@G@@@M@@@A^[>GD<H@,^@)D[>^[2G(-G-3^[-H1=^[?H9<HT3^[3G(<I-\IK)JL>IL\ ))H[(IS)TA
)@@G@@GD<GT>IT3^[<H9,I-2H9?^[3G(<I-\IK?^[4H[>H0)@M@@@A^[2G(-G-3 ))I(0G--I->IS?TB
)@@G@@^[-H1=^[7IL(I->IS)GL-GT:^[3G(<I-\IK)I-*IL>G*?^[-G14G(2^[7H[(GT*^[*G*)I(0TC
)@@G@@G--I->IS)^@)@N@@@A^[*HD3^[<H9,I-2H9?^[3G(<I-\IK?^[7IL(I->IS)HD4^[+GD<HS?TD
)@@G@@^[-H1=^[5H1?H9<HT3^[(I),^@)DD&^[KDDJE8=^[<GD5IT>G))GD,JC)^@)@L@@@A^[?H9<TE
)@@G@@HT>G))I[-G9>IS)I-\^[+G*)I92HD4I->H0?^[4H[>H0)I-*G*)I(3G(2^[7H95H-=^[,H94TF
)@@G@@^[:H1\I8)I-*GD4^[*HD3^@)@M@@@A^[<H9,I-2H9?^[3G(<I-\IK)H-\GT:^[7GD3^[\G1&TG
)@@G@@^[7H[(H->^[*G*)I9-IS)I(0G--I-(H1$^[(I))GL>GT-I(3G*)I-*G*)IT>GT4H92@M@@@ATH
)@@G@@^[4H[2G(>^[7IL(I->^[7GD3^[(H0)I-*G*)IT-H(>^[0GD$G*,^@)E-\^[0IL>G-(GT4^[4TI
)@@G@@H[(IS)H9<GT5IL-H1<G*)I-*G*)I(3G(2^@)@N@@@A^[7H95H-=^[*GD6G*)I-\^[:H1\I8)TJ
)@@G@@I-*GD4^[*HD3^[4I9\^[-GT<G(3IS)I9\IL=IS) [4H[>^[\H1>^[&H92^[3G(<I-\IK)I-*TK
)@@G@@IL>G*)GD,G))@M@@@A^[4H[>^[\H1>^[&H92^[*HD3^[<H9,I-2H9?^[3G(<I-\IK(^[*GD0TL
)@@G@@I[>H0)I-\^[&GD?H))HD,^[4H[>^[3GD!G*)I[-G9> ))GD3^[(I))@N@@@A^[(IS)GT5IL2TM
)@@G@@G(,I-?JC)GT\H1&HD$I(2G(= 0)^[IH94^[5H1?H9<HT(H1$^[4H[>^[?H9<HT>G))I[-G9>TN
)@@G@@IS)I(,I-(H))GC)E[DD9PD)=^[(IS)@N@@@A^[=H9,G*)GD?H-\I93^[4H[>^[5IT>IK)I-\TO
)@@G@@^[+G*)HD$H1\IL-H14^[\G0)I9*G(2G*)H[(IS)DC\D8)GD<GT>IT3^[7H92G-3^[-IL>^[(TP
)@@G@@H0)^@)@M@B@A^[2G(?GD4HD\H0)I-\^[0GD$G*)GL\I(,G--IL(G(3 ))I9*HD<H@)HD3^[4TQ
)@@G@@H[>^[+GD3HD<^[0H[(H-\IT\I[*JC)H9&^[-^[0GD$HD,G8)@M@@@B^[2G(?GD4HD\H0)I-\TR
)@@G@@^[0GD$G*)GL\I(,G--IL(G(3 ))I9*HD<H@)HD3^[-^[+GD3HD<^[0H[(H-\IT\I[*JC)H9&TS
)@@G@@^[-^[0GD$HD,G8)^@)@]@@@A^[3JD3I->H*,@]@@@AETKCD#C*)^@)@M@@@A^[KDDJELG^))TT
)@@G@@IT*H95H-=^[+G*)I(3G(=^[$HD,G9>IL?JC)GD3^[>GD<H@)H-\GT:G(=^[0GD$G*)GT-H1,TU
)@@G@@H94^[+G*)I(3G(=^[&H92^@)@K@@@A^[-H19^[\I-*G(2^[-IL>GC)H9&^[-^[&HD?G*)GL9TV
)@@G@@^[-H19^[-GT4HD6HD4JC?^[>I1>H0)I-*G*)H-\GT:HD,G8)H9,G*,@N@@@A^[OH[>^[5IT>TW
)@@G@@IK?^[4H[>H0?^[!I(3I))GL>^[<GD2G(&I(?^[\G0)GT-I(3HD,G8)GC)GT2HD4HD<GD?^[3TX
)@@G@@H[\IL4GD$G*)H9&^[-I1-HD?GD+H->@M@@@A^[0GD$G(3^[7H[(GT*^[<H95H-=^[2G(3I(?TY
)@@G@@I))HD,^[-H0)GD<I-(I1(I-9^93^[=G(-GT4HD6GD4HD\H0)I9*HD?G*)I9-HD4HD,G8)^@)TZ
)@@G@@@M@@@A^[&H92^[-^[0GD$G*)I9*HD<H@)H9,H-9^[(I))GT-H0)IL>H->GD3G*,^@)DD,^[$UA
)@@G@@G(,G(2GD? ))H9,G*)H(\IL>^[0GD$G*)I-*GD,^@)@L@@@A^[-H-?^[0H94G(,I-(GD?^[?UB
)@@G@@H9<HT>G))I[-G9>IS)H1>G(=IS)I-\^[+G*)GD6GD(H--GL?G*)G1\IK)H1\IL!GD?^[D 9JUC
)@@G@@ 0)^@)@]@@@AETKCD#C*)^@)@ @@@AADPIT(H1$^[OH[>^[KIL\GT3 0)^@)@]@@@AETKCD#UD
)@@G@@C*)^@)@L@@@A^[[^[,I(!GL>IK)H9&^[-IT3G(!GL?JC)I[2H9<G(=I(2G(3^[-IL>^[-I1-UE
)@@G@@HD?GD+H->^[4H8)G(-IT>^[4H[>^[<H9=HD,G8?^@)@L@@@A^[7H[>H0)I(3HD,G8)^[4H[>UF
)@@G@@^[KDDJ^))I[-GT:GD$G*,^[OH8)H(-HT>^[4H[>IT>^[0IL\GT>G-5IL>IS)GD6GD(H--GL?UG
)@@G@@G*?^@)@C@@@A^[-^[<GD?H))I-\^[KDDJ^-K^[!I(3I))GL>^[!GD=G*'^@)@]@@@AETKCD#UH
)@@G@@C*)^@)@C@@@A^@)^@)^@)^@)^[KDDJ^-K^@)^@)^@/H9, (\G1&^[&H--G8"@]@@@AETKCD#UI
)@@G@@C*)^@)@K@@@A^[OH[>^@)I[2H9<^@)I9(H-?^@)HD,GT?I(=G*)GD?H))H9&^[4H[>^[3I(0UJ
)@@G@@I[\IL4HD,G8)I[2H9<G(=I(2G(3^[&H92^@)@K@@@A^[KDDJ^)?^[-IS)I9>H-?^[-IS)G->UK
)@@G@@G1(H1>^[-^[&H--G8?^[KDDJ^-AD-[C8,^@/D9, (\G1&^[&H--G8"^[!GD9^[+G*)@L@@@AUL
)@@G@@^[>HD4H[>IK)^@$H9,^8)^[\IK)^9\G1&^8)^@*HD,GT?I(=HD,G8)^[4H[>^@)ID5H94G(3UM
)@@G@@ C)^[3HD$H1(G19HD,G8)^[4H[-I))@K@@@A^[>HD4H[>IK)I-*G*)I[-G9>G))DC\D8)IL\UN
)@@G@@I(4HD,G(3^[-IL>^[4H8)GL>^@)I(3G(= ))^[\IK)^[3HD!I[?JC)^[4H[>@K@@@A^[,H92UO
)@@G@@H(-H))^[>J[>GT5I-(I1>^@)IL>ID5G(3I))G15H1<I-(H9,^@)HD\I8= 0)E-*G*)G->G1-UP
)@@G@@I(?I))HD3^@$H9,^8?@L@@@A^[7H[(GT*^[<GD5IT>IS)I-*G*)DC\D8)I[2H9<IS)I-\^[5UQ
)@@G@@IT>^[4H[>^[0GD$G(=^[D 9J^[3I(+IL\I(4HD,G(3 0)E-*HD3^@)@K@@@A^[&H--G8)HD3UR
)@@G@@^@)I(3G(&I(?^@)G1\IK)^[=G(4G(2H((H1(H1$^@)I-*G*)G(&G1>GT4HD6G(,G(3IS)^[\US
)@@G@@G0)^[0GD$G(=@L@@@A^[D 9J^@)HD,^@)GC)^[0GD2I-(GT5H--IK)GD0I[?HD<GD4HD\H0?UT
)@@G@@^[7H[>IL>^[+JC)IT(H(0H-9^[<H[-H1$HD,G8)I-*G*)^@)@L@@@A^[&H--G8?^[-H0)G(,UU
)@@G@@I-(IL>^[0IL\G92GD!^[!GD9^@)GL>^@)IL>GT\H1&HD$I(2G(=^@)GD,G))HD,IT4IL5H(>UV
)@@G@@H14G(= 0)^@)@]@@@AETKCD#C*)^@)@]@@@AC(EC(#E))^@)@ @@@AALKIL\GT>G-5IL>^[NUW
)@@G@@I(!H(-IL9 0)@]@@@AETKCD#C*)^@)@]@@@AETKCD#C*)^@)@#@@@ACTJD-PD(I^@2A@)^@)UX
)@@G@@@C@@@A^@)^@)^@)^@)^[KDDJ^-K^@)^@)^@/H9, (\G1&^[&H--G8"@]@@@AETKCD#C*)^@)UY
)@@G@@@L@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[^G(&HD,G*)^[4H[>^@)IT5I[0H92I-(H1$^@)UZ
)@@G@@I[2H9<IS)^[&H92^@)E[DD8= ))^[-H1=^@)@L@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[4VA
)@@G@@H[>^[KDDJ^-AD-[C8,^@/D9, (\G1&^[&H--G8"^[!GD9^[+G*)G((I-*G(2^@$H9,^8)^@)VB
)@@G@@@B@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[\IK)^9\G1&^8,@]@@@AETKCD#C*)^@)@D@@@AVC
)@@G@@^@)^@)^@)^@)^[KDDJ^-KCDD^@)^@/H15H(+G(2B0?B-3HD'G*"^@)@]@@@AETKCD#C*)^@)VD
)@@G@@@L@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[BG(,G(2GD4G*)GD,^[(H1(I-(GD?HD'G(=^[0VE
)@@G@@GD$HD,G8)GD2G(- 0)B-II(!GL>IK"^[(IS)@L@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[4VF
)@@G@@H[>^[,I(!GL>IK)H9&^[0GD$G(3BS)B-3HD'G*"^[(IS)I-*G*)IT(JL>^[\G0)G(-GT*^@)VG
)@@G@@@A@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[0GD$G*,@]@@@AETKCD#C*)^@)@D@@@A^@)^@)VH
)@@G@@^@)^@)^[KDDJ^-KCDM^@)^@/H15H(+G(2B0?B-3HD'G*"^@)@]@@@AETKCD#C*)^@)@J@@@AVI
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^[MG(3G(2I1>^@)IT0GD<G*)^[&H92^@)I-*G*)I[-G9(VJ
)@@G@@H1$^[-IL>GC)GD,G))@K@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[$G(,G(2GD4G*)GD,^[-VK
)@@G@@GT<G(3IS)I9\IL= 0)E-*G*)I[-IL-H(>I->IL3^@)GD2G*)@K@@@A^@)^@)^@)^@)^@)^@)VL
)@@G@@^@)^@)^@)^[4H[>^@)IT-H(>^@)GD3^@)G1\IK)E[DD8=E[[EK,^@)^@)E-*G*)^@)^[&HD2VM
)@@G@@IT4^@)@K@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[7H92G))^@)^[$G(,G(2GD4G(=^@)^@)VN
)@@G@@^[(IS) [?G(,G94H@?GD=G-2G(3IS(^@)H9&@L@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[4VO
)@@G@@H[>^[0GD$HD,G8)GD2G(- ))G1\H-?H97G(=^[+JC)GC)IL>IT>IL6G*)G1\IK)I-*G*)^@)VP
)@@G@@@C@B@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[0GD$HD,G8)GD2G(- 0)@C@@@B^@)^@)^@)^@)VQ
)@@G@@^@)^@)^@)^@)^@)^[0GD$HD,G8)GD2G(- 0)@]@@@AETKCD#C*)^@)@I@B@A^@)^@)^@)^@)VR
)@@G@@^[KDDJ^-KDTO^@)^@$B-&HD?G(,GD!G*"^8)B-7GS" )/GL-B0)B-=GC" )/I9-G0"^@;^@)VS
)@@G@@@I@C@B^@)^@)^@)^@)^[KDDJ^-KDTO^@)^[; L.^8/G1,B0$^@/I9<B0?B-+GC"^[; L.B-=VT
)@@G@@GC" )/H[7GC"^@;^@)@M@@@C^@)^@)^@)^@)^[KDDJ^-KDTO^@)^[; L.^8/G1,B0$^@/I9<VU
)@@G@@B0?B-+GC"^[; L.B-=GC"^@/I[-H)" )/I94G0" )/I-2GC" )/IT-H)"^@)@E@B@A^@)^@)VV
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)B-7I-&B0?B-4IL-B0?B-3GD?B0)^@)@F@C@B^@)^@)^@)^@)VW
)@@G@@^@)^@)^@)^@)^@)^@/I[-H)" )/I94G0" )/I-2GC" )/IT-H)"^@)@]@@@AETKCD#C*)^@)VX
)@@G@@@L@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[BG(,G(2GD4G*)^[-^@)I[-GT:G(4^@)IT5HD4VY
)@@G@@GD+H->^@)G1\IK)I(3G*)I9(I-*^[4H[>^@)@D@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[KVZ
)@@G@@DDJ^))IL\I(4HD,G(3 0)^@)@M@@@B^@)^@)^@)^@)^@)^@)^@)^@)^@)^@/G1,B0)HD3^[4WA
)@@G@@H[>^[(H14G(2H1-H))G1(H->H1-H(>BS)HD&^[&H--G9$G(= ))HD,G-(GT-I->IS)@G@@@BWB
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^[-^[!I(?I-( (4H[2G(-G))GD<GT>IT3^[&HD?G*,^@)WC
)@@G@@@N@@@B^@)^@)^@)^@)^@)^@)^@)^@)^@)^@/I9<B0)HD3^[D 9J^[7H92G))GT\I(,I);^@/WD
)@@G@@GL-B0)HD3^[4H[>^[D 9J^[+I(&G1>IK)GD=G-2G(3IS,^@)@O@@@B^@)^@)^@)^@)^@)^@)WE
)@@G@@^@)^@)^@)^@/G--B0)HD3^[4H[>^[D 9J^[=HD3GS)GD=G-2G(3IS;^[(G0)G1?GD$G9>G)?WF
)@@G@@^@/G--B0)HD3^[(H0)I9\IL=IS?^@)@N@C@B^@)^@)^@)^@)^@)^@)^@)^@)^@)^[\I-*G(2WG
)@@G@@I9(IT> ))IT>GT4H92IS,^@/H[7GC"^[(IS)I-*G*)H[(G9*G(3I))I92HD4G*)GD=G-2G(3WH
)@@G@@IS,^@)@E@@@C^@)^@)^@)^@)^@)^@)^@)^@)^@)^[\I-*G(2I9(IT> ))IT>GT4H92IS,^@)WI
)@@G@@@N@@@B^@)^@)^@)^@)^@)^@)^@)^@)^@)^@/I[-H)"^[(IS)I-*G*)I[-G9(H1$^[-IL>GC)WJ
)@@G@@H-(H1:BS)B-7I-&B0)HD3^[4H[>^[7IL(I-> (4H[2H95G9*@A@@@B^@)^@)^@)^@)^@)^@)WK
)@@G@@^@)^@)^@)^[&H--G8,@O@@@B^@)^@)^@)^@)^@)^@)^@)^@)^@)^@/I-2GC"^[(IS)I-*G*)WL
)@@G@@I-2GD<G*)G1?GD$BS)B-3GD?B0)HD3^[4H[>^[3I--I-(IT4HD<IS)GD2G(-^[?HD,HS,^@)WM
)@@G@@@]@@@AETKCD#C*)^@)@F@@@A^@)^@)^@)^@)^[KDDJE[[DC=^@)^@*B-0GD?B0?B-0GD-B0(WN
)@@G@@^@/I[-G9>IT(JL>B0)@]@@@AETKCD#C*)^@)@J@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[BWO
)@@G@@G(,G(2GD4G*)^[-^@)GT-H-?^@)I-\^@)I-*G*)^[0GD$HD,G8)GD2G(-^@)@L@@@A^@)^@)WP
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[(H1(I-(GD?HD'G(2 0)^@/E[-H)"^[(IS)I-*G*)H->H1$I-*WQ
)@@G@@^[\G0)I-*G*)I[-G9(H1$^@)@H@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[-IL>GC?^[-H1=WR
)@@G@@^@/I[-GC"^[(IS)HD4IS)GD=G-2G(3IS,^@)@]@@@AETKCD#C*)^@)@C@@@A^@)^@)^@)^@)WS
)@@G@@^[KDDJD1K^))^@)^@/I[-GC"^@)B-,I[-B0)@]@@@AETKCD#C*)^@)@K@@@A^@)^@)^@)^@)WT
)@@G@@^@)^@)^@)^@)^@)^[#GD?H))^[4H[>^@)H1>I8)I[-G9>^[3I(+IL\I(4HD,G*,^@/E[-GC"WU
)@@G@@^[(IS)I-*G*)@K@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[-G-=IL>IT3^[\G0)I-*G*)I[-WV
)@@G@@G9(H1$^[-IL>GC?^[-H1=^@/H10GC"^[(IS)I-*G*)@L@@@A^@)^@)^@)^@)^@)^@)^@)^@)WW
)@@G@@^@)^[-G-=IL>IT3^[\G0)^[4H[>^[,G(7^@)I[-G9> ))^[7H[(GT*^@)H(5IT4^@)GL>^[-WX
)@@G@@I))^@)@K@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[?G(-IT4^[-IS)H--IL$G*)GD3^[4H[>WY
)@@G@@^[0GD$G*)IT(JL>^[-IS)IT>I))HD,^[4H[>@C@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[0WZ
)@@G@@GD$HD,G8)GD2G(- 0)@]@@@AETKCD#C*)^@)@C@B@A^@)^@)^@)^@)^[KDDJC1J^))^@)^@/XA
)@@G@@I[:I)"^@/I[-GC"^@)@A@@@B^@)^@)^@)^@)^[KDDJC1J^))^@)^@/I[:I)"@]@@@AETKCD#XB
)@@G@@C*)^@)@L@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[BG(,G(2GD4G*)^[-^@)GT-H-?^[4H8)XC
)@@G@@I-*G*)G1(H->^[\I[>H0)IT5GL2H95I-(H1> 0)^@)@K@B@A^@)^@)^@)^@)^@)^@)^@)^@)XD
)@@G@@^@)^@/E[:I)"^[(IS)I-*G*)GD=G-2G(3IS)H9&^[4H[>^@)E[DD8=^@)I[-GT:G(4BS)^@)XE
)@@G@@@K@@@B^@)^@)^@)^@)^@)^@)^@)^@)^@)^@/E[:I)"^[(IS)I-*G*)GD=G-2G(3IS)H9&^[4XF
)@@G@@H[>^@)E[DD8=^@)I[-GT:G(4 0)^@)@I@B@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^@/I[-GC"XG
)@@G@@^@)HD3^@)I-*G*)I[-G9(H1$^[-IL>GC)GD=G-2G(3IS,^@)@]@@@AETKCD#C*)^@)@A@B@AXH
)@@G@@^@)^@)^@)^@)^[KDDJC1#^))^@)^@/I[:I)"@C@@@B^@)^@)^@)^@)^[KDDJC1#^))^@)^@/XI
)@@G@@I[:I)"^@/G(2IL\IK"@]@@@AETKCD#C*)^@)@K@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[#XJ
)@@G@@GD?H))^[4H[>^@)G1(H->^@)GT?H93G*)^[3I(+IL\I(4HD,G*?^@)^[<GD5IT(H1$@K@@@AXK
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^[-H-?^[-IT3H9<HD-I->G))I[-G9>IS)I-\^[+G*)I92XL
)@@G@@HD4I->H0)H95I)?^[(G0)^@)@E@B@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[!H9=HD&HD>G)?XM
)@@G@@^[-H1=^[>IL-IT>G),@M@@@B^@)^@)^@)^@)^@)^@)^@)^@)^@)^[!H9=HD&HD>G)?^[-H1=XN
)@@G@@^[>IL-IT>G),^[DG0)B->IL2H92B0)HD3^[$HD6G(, ))G9>H1>IL-I->^@)@L@@@B^@)^@)XO
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[-^@+DLIFK)CC3 )/G(2IL\IK"^K)G1\H-?H97HD,G8)I-*G*)XP
)@@G@@IT5GL2H95I-(H1>^[<GD?H),@]@@@AETKCD#C*)^@)@A@B@A^@)^@)^@)^@)^[KDDJE[A^))XQ
)@@G@@^@)^@/I[:I)"@C@@@B^@)^@)^@)^@)^[KDDJE[A^))^@)^@/I[:I)"^@/G(2IL\IK"@]@@@AXR
)@@G@@ETKCD#C*)^@)@J@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[#GD?H))^[4H[>^@)I[-G9>^@)XS
)@@G@@G1?I(3H@)^[3I(+IL\I(4HD,G*,^@)CD?H))@K@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[-XT
)@@G@@IT3H9<HD-I->G))H(\G-(G1(G(=^[0GD$G(3^[-IL>^[7IL(I-4G(,^[4H8)I-*G*)@G@B@AXU
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^[&HD?G*?^[+I(4^[-IL>^@)H1\I))G(2GD3G(= 0)^@)XV
)@@G@@@L@@@B^@)^@)^@)^@)^@)^@)^@)^@)^@)^[&HD?G*?^[+I(4^[-IL>^@)H1\I))G(2GD3G(=XW
)@@G@@ 0)DD&^@/G(2IL\IK"^[(IS)G9(I1>H0?^@)@G@@@B^@)^@)^@)^@)^@)^@)^@)^@)^@)^[$XX
)@@G@@G(,G(2GD4G*)GC)^LED1U^[[AS?B->IL2H92B0+ 0)@]@@@AETKCD#C*)^@)@A@B@A^@)^@)XY
)@@G@@^@)^@)^[KDDJEK=^@)^@)^@/I[:I)"@C@@@B^@)^@)^@)^@)^[KDDJEK=^@)^@)^@/I[:I)"XZ
)@@G@@^@/G(2IL\IK"@]@@@AETKCD#C*)^@)@L@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[DG0)E[DYA
)@@G@@D8=C1GCDB^[(IS)IT>I)?^[$G(,G(2GD4G*)GC)GT-H-?^[4H8)I-*G*)I[-G9>G))@L@@@AYB
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^[D 9J^[2G(-G))^[3I(+IL\I(4HD,G*,^@)DD&^@)E[DYC
)@@G@@D8=C1GCDB^@)HD3^@)GT?G(-IK?^@)@G@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[$G(,G(2YD
)@@G@@GD4G*)I-*IL>G*)HD,IT4IL5GT4HD\H13BK)@]@@@AETKCD#C*)^@)@D@@@A^@)^@)^@)^@)YE
)@@G@@^@)^@)^@)^@)^@)^[GF@?E*)^@)^@)^[SAC1 -M^))@]@@@AETKCD#C*)A@)@E@@@A^@)^@)YF
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[NF@?ES1^@)^@)^[SAC1 )/I[:I)" S3@]@@@AETKCD#C*)A@)YG
)@@G@@@D@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[ EK)^@)^@)^@)^[DD9R^))^@)@]@@@BETKCD#YH
)@@G@@C*)^@)@L@@@B^@)^@)^@)^@)^@)^@)^@)^@)^@)^[DG0)B->IL2H92B0)HD3^[$HD6G(, ))YI
)@@G@@G9>H1>IL-I->^[4H[>^[D 9J^[>IL2H92^[4G(3I)'@D@@@B^@)^@)^@)^@)^@)^@)^@)^@)YJ
)@@G@@^@)^@+DLIFK)CC3 )/G(2IL\IK"^K,@]@@@AETKCD#C*)^@)@A@B@A^@)^@)^@)^@)^[KDDJYK
)@@G@@E8=^@)^@)^@/I[:I)"@C@@@B^@)^@)^@)^@)^[KDDJE8=^@)^@)^@/I[:I)"^@/G(2IL\IK"YL
)@@G@@@]@@@AETKCD#C*)^@)@L@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[OH[>^@)IT-H(>^@)GD3YM
)@@G@@^@)I-*G*)E[DD9M^))I[2H9< ))G(8GT>I[4^[4H[-I))I-*G*)^@)@J@@@A^@)^@)^@)^@)YN
)@@G@@^@)^@)^@)^@)^@)^[0GD$G(=^[D 9J^[7IL(I->^[3I(+IL\I(4HD,G*)H92^[4H[>^[R^))YO
)@@G@@DC\D8)@G@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[&I(,GT4HD\H0)GD2G*)I(3G(=^[(H13YP
)@@G@@I->GD= 0)^@)@]@@@AETKCD#C*)^@)@A@B@A^@)^@)^@)^@)^[KDDJELG^))^@)^@/I[:I)"YQ
)@@G@@@C@@@B^@)^@)^@)^@)^[KDDJELG^))^@)^@/I[:I)"^@/G(2IL\IK"@]@@@AETKCD#C*)^@)YR
)@@G@@@L@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[OH[>^@)IT-H(>^@)GD3^@)I-*G*)E[DD9M^))YS
)@@G@@I[2H9< ))G(8GT>I[4^[4H[-I))I-*G*)^@)@L@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[0YT
)@@G@@GD$G(=^[D 9J^@)IL>GD=^@)GD,G))^[?H9<HS)^[3I(+IL\I(4HD,G*)^[\IK)^[4H[>^@)YU
)@@G@@@I@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[MC-G^))^[D 9J^[&I(,GT4HD\H0)GD2G*)I(3YV
)@@G@@G(=^[(H13I->GD= 0)@]@@@AETKCD#C*)^@)@A@B@A^@)^@)^@)^@)^[KDDJE(G^))^@)^@/YW
)@@G@@I[:I)"@C@@@B^@)^@)^@)^@)^[KDDJE(G^))^@)^@/I[:I)"^@/G(2IL\IK"@]@@@AETKCD#YX
)@@G@@C*)^@)@L@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[OH[>^@)IT-H(>^@)GD3^@)I-*G*)E[DYY
)@@G@@D9M^))I[2H9< ))G(8GT>I[4^[4H[-I))I-*G*)^@)@K@@@A^@)^@)^@)^@)^@)^@)^@)^@)YZ
)@@G@@^@)^[0GD$G(=^[D 9J^[5H1?H9<HS)IT5GL2H95I-(H1>^[\IK)I-*G*)E(ID)=^[D 9J^@)ZA
)@@G@@@G@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[&I(,GT4HD\H0)^[-IL>^[5IT>G))HD,IT4G(-ZB
)@@G@@G),^@)@]@@@AETKCD#C*)^@)@C@@@A^@)^@)^@)^@)^[KDDJ^-ADD D-^ES)B--G-=IL>IT3ZC
)@@G@@B0)^@)@]@@@AETKCD#C*)^@)@K@@@A^@)^@)^@)^@)^@)^@)^@)^@)^@)^[^G(&HD,G*)^[4ZD
)@@G@@H[>^@)G1(G(?G-3^@)I9(I-*HD,^[4H[>^[KDDJ^))I[-GT:G(4^@)@G@@@A^@)^@)^@)^@)ZE
)@@G@@^@)^@)^@)^@)^@)^[+GD3G(=^[\H0)B--G-=IL>IT3B0)HD&^[$HD6G(, 0)@]@@@AETKCD#ZF
)@@G@@C*)^@)@]@@@AETKCD#C*)^@)@]@@@ACTJD-PD(I^@2@B@@@AAD#H9,G1(G95IL(H1$^[[^[KZG
)@@G@@GD$HD,G8)CD2G(- 0)@]@@@AETKCD#C*)^@)@K@@@A^[KG(2H[-I[3 ))^[4H[>^@)G92G(-ZH
)@@G@@I->IT4^@)G-(G1&HD<I(?I-9^@)HD,^@)I(3HD,G8)^[-^@)I[-G9>G))DC\D8)^@)@K@@@AZI
)@@G@@^[3JD3I->H*)HD3^[=G(4G(2H((H1(H1$^[4H[>^[\I[4HD!GD?^[,I(!GL>IK)H9&^@)I[-ZJ
)@@G@@G9>IS)^[-H1=^@)I[-G9>^@)@L@@@A^[3HD'G*,^@)E-*G(2G*)^[-IL>^[+GD3HD<GD?JC)ZK
)@@G@@I-7H8)G1-GT4H92IS)I-*GD4^[-IL>^[5IT>G))I-\^[=G(4G(2H((H1>^@)@E@@@A^[-H0)ZL
)@@G@@H90I-(H(-H))I[-G9(H1$^[-IL>GC)GT\H1&HD$I(2GD4HD\H0'^@)@]@@@AETKCD#C*)^@)ZM
)@@G@@@#@@@ACTJD-PD(I^@1AS)^@)@K@@@A^@)^@)^@)^@)^@1 0)E-*G*)I(3G(2^[D 9J^[2G(1ZN
)@@G@@I(>IT4IS)GD2G*)G((I-*G(2^[&HD8G(=^[\IK)I1-IL(GD+H->^@)@ @@@A^@)^@)^@)^@)ZO
)@@G@@^@)^@)IT(JL> 0)^@)@]@@@AETKCD#C*)^@)@K@@@A^@)^@)^@)^@)^@2 0)E-*G*)^[5IT>ZP
)@@G@@IK)^[D 9J^@)IL>ID5G(3I-3^@)GD2G*)^[>HD4H[>IK)^[3G(1I(>H14HD-H))H92@B@@@AZQ
)@@G@@^@)^@)^@)^@)^@)^@)IL-H1=H9!^[-GT<G(3IS,^@)@]@@@ACTJD-PD(I^@2@]@@@AETKCD#ZR
)@@G@@C*)^@)@L@@@A^[OH[>IT>^@)G1-GT4H92IS?^@)GT\H(+HD,G(=^@)I9(I-*^@)I-*G*)^[&ZS
)@@G@@GD<I))^[4H[-I)?^@)GL>GT-I(3G*)^[\G0)I-*G*)@K@@@A^[,H94^[(H13HD$H1(G1(GT-ZT
)@@G@@H14^[\I1>IL*G(-G))GD3IT\GT(GD4G(=^[7HD4H@)GD,^[D 9J^[2G(1I(>IT4 ))H9,G*)ZU
)@@G@@@J@@@A^[?GD2G9>^@)DC\D8)IL>ID5G(3I))^[(IS)^[3G(2I1(GT>G))^[&GD3I->IK)^[4ZV
)@@G@@H[-H0)^[4I9\^[\IK)H(\IL>@L@@@A^[3H(-H-?G(2^[D 9J^[2G(1I(>IT4IS?^[<H9,I-2ZW
)@@G@@HD+I(4G*)^@)^[4H8)^[&H92H*)^[&H95IK)^[<IL(I->IL(GC)^[&H92^@)@F@@@A^[-H0)ZX
)@@G@@^[\I[4HD!GD?^@)I[-G9(H1$^@)GD2G(-^[<H9,G1(G95IL-I-(H9,BK)^@)@]@@@AETKCD#ZY
)@@G@@C*)^@)@#@@@ACTJD-PD(I^@1AS)^@)@L@@@A^@)^@)^@)^@)^@1 0)C1\IK)^[&HD8G(=^@)ZZ
)@@G@@IT(JL>^@)DC\D8)^[2G(1I(>IT4IS?^[4H[>^[0GD$G*)IT(JL>^[3H[\I(?G))^@)@J@@@AAA
)@@G@@^@)^@)^@)^@)^@)^@)GL>^[-H0)G(8GD<I))H(5H-4HD0H->^[\G0)I-*G*)DC\D8)IL>ID5AB
)@@G@@G(3I))IT(JL> 0)^@)@]@@@AETKCD#C*)^@)@K@@@A^@)^@)^@)^@)^@2 0)C1\IK)^[6GD2AC
)@@G@@HD-GL?G*)^[3HD'G*)^[D 9J^@)IL>ID5G(3I-3 ))I-*G*)I[-G9>^[3HD'G*)^@)@L@@@AAD
)@@G@@^@)^@)^@)^@)^@)^@)IT*H95H-=^[+G*)H--IL$G*)G(,H95G9*^[4H8)G(,IT5IL>^[-^[$AE
)@@G@@H9\G))I[2H9+GD+HD?HD4JC)H9&^@)@L@B@A^@)^@)^@)^@)^@)^@)GT\H14GD(H1(H1$^@)AF
)@@G@@GC)IL-H1=H9! ))IT-H(0H->^[D 9J^[2G(1I(>IT4^[>H14HD2G(?JC,^[RH[-I))@K@@@BAG
)@@G@@^@)^@)^@)^@)^@)^@)GT\H14GD(H1(H1$^@)GC)IL-H1=H9! ))IT-H(0H->^[D 9J^[2G(1AH
)@@G@@I(>IT4^[>H14HD2G(?JC,^@)@N@@@B^@)^@)^@)^@)^@)^@)EL\I($H[?JC?^[-^[0GD$G*)AI
)@@G@@I-*GD4^[(IS)I-*IL>G*)I-(H(>IS)I-*G*)IT(JL>^[\G0)I-*G*)GD6G(2GD$G*)DC\D8)AJ
)@@G@@@M@@@B^@)^@)^@)^@)^@)^@)IL>ID5G(3I))H[-IS)GC)I[2H9+GD+HD?HD4JC)H9&^@0 06AK
)@@G@@A0)I-*GD4^[4H[>^[2G(1I(>IT4^[7HD?H))GL>^@)@N@@@B^@)^@)^@)^@)^@)^@)GT\H14AL
)@@G@@GD(H1>G))G(,I-(IL>H-9 0)^[OH[>^[4IL-GT>^[&G(-I-5IL>^[!GD9^[+G*)I(3G(=^[4AM
)@@G@@H8)G->I->IL!HD,G*)@L@@@B^@)^@)^@)^@)^@)^@)I-*G*)GD6G(2GD$G*)IL>ID5G(3I))AN
)@@G@@IT(JL>^[&H92^[-^[0GD2I-(GT5H--IK)GD0I[?HD<GD4HD\H0,^@)@L@B@A^@)^@)^@)^@)AO
)@@G@@^@)^@)HD3^[!G(-H14^[+JC)^L$H9\G))I[2H9+GD+HD?HD4JC+ ))^[*H97G(6G(2 ))^[(AP
)@@G@@IS)^[?G(&I))^[4H8)@L@B@A^@)^@)^@)^@)^@)^@)I-*G*)^[5IT>IK)^@)I-\^@)^@)GL>AQ
)@@G@@^[>H(0HD2HD<GD?H-9^[=G(4G(2H((H1>G)?^[0H93IT(GL?JC)^@)@D@B@A^@)^@)^@)^@)AR
)@@G@@^@)^@)I(3HD,G8)I-*G*)I-2GD<G*)G1>GD4I(2G*,@]@@@AETKCD#C*)^@)@K@B@A^@)^@)AS
)@@G@@^@)^@)^@3 0)C1\IK)^[2GD,G-\H*)^[-GT<G(3IS)DC\D8?^[!GD,JC)IT!GD?H->IK)IT(AT
)@@G@@JL>G))I[-G9>IS)^@)@B@B@A^@)^@)^@)^@)^@)^@)IT*H95H-=^[+G*)I(3G(= 0)@L@@@BAU
)@@G@@^@)^@)^@)^@)^@3 0)C1\IK)IL-H1=H9!^[-GT<G(3IS)DC\D8?^[(H1<IL>GD3HD,G8)I-*AV
)@@G@@G*)H15H(+G(2^[\G0)I[-G9>IS)HD3@M@@@B^@)^@)^@)^@)^@)^@)H(5GT*^[!H92G*)G(&AW
)@@G@@G1>GT4HD6G*)HD,^[2G(=I(<HD,G8)DC\D8)I-*GD,^[(H1<IL>GD3HD,G8)I-*G*)IT(JL>AX
)@@G@@@B@@@B^@)^@)^@)^@)^@)^@)H9&^[4H[>^[0GD$G(3 0)^@)@]@@@AETKCD#C*)^@)@K@B@AAY
)@@G@@^@)^@)^@)^@)^@4 0)C1\IK)^[3G(1I(>H14HD-H))GD<GT>IT3^[D 9J ))GC)G1>I8)H--AZ
)@@G@@IL$G(2^[3HD'G(=^[0GD$G(3@B@B@A^@)^@)^@)^@)^@)^@)IT*H95H-=^[+G*)I(3G(= 0)BA
)@@G@@@M@@@B^@)^@)^@)^@)^@4 0)C1\IK)IT>ID5G(,I-(GD?^[-GT<G(3IS)DC\D8?^[(H1<IL>BB
)@@G@@GD3HD,G8)I-*G*)IT(JL>^[\G0)I-*G*)I[-G9>IS)@N@@@B^@)^@)^@)^@)^@)^@)IL>G-5BC
)@@G@@GT>IS)DC\D8)H(5GT*^[!H92G*)G(&G1>GT4HD6G(?JC)I-*GD,^[(H1<IL>GD3HD,G8)I-*BD
)@@G@@G*)H15H(+G(2^[\G0)@ @@@B^@)^@)^@)^@)^@)^@)I[-G9>IS,^@)@]@@@ACTJD-PD(I^@2BE
)@@G@@@]@@@AETKCD#C*)^@)@L@@@A^[[H0)^[>J[-H(0H->^@)H9&^@)I-*G*)^[(H14G(2IL>H--BF
)@@G@@I-(H9,IS)H9&^[4H[>IT>^[<IL(I->IL(GC'^[DG0)G1(J[>G))^@)@K@@@A^[3HD'G*?^[3BG
)@@G@@G(1I(>H14HD-H))GD<GT>IT3^[D 9J^[(IS)GL>HD,G8)I[>IL&H92H(>G)?^[4I9\^[6G(2BH
)@@G@@JC)H--IL$G*)@L@@@A^[0GD$G(3 ))^[>J[-GT4^[!I(?I-(I[?G(3^@)H9&^@)I-*G*)IL>BI
)@@G@@ID5G(3I))IT(JL> ))IT*H95H-=^[+G*)I(3G(=BS)G1\IK)@L@@@A^[&HD8G(=^[3HD'G*)BJ
)@@G@@IL-H1=H9!^[-GT<G(3IS)DC\D8?^[!GD,JC)I[-G9>IS)H9&^[-GL\I(4^[4I9(GT>^[4H[>BK
)@@G@@^[!G(-H0)^@)@D@@@A^[D 9J^[2G(1I(>IT4^[3HD'G*)IT*H95H-=^[+G*)I(3G(= 0)^@)BL
)@@G@@@]@@@AETKCD#C*)^@)@#@@@BAD[I[0G(,G-(J@,^@)@A@@@BALOH[>^[KGD$HD,G8)CD2G(-BM
)@@G@@^[CG(-G->IK,@]@@@BETKCD#C*)^@)@L@@@BA@)^@) *! *! *! *! *! *! *! *! *! *!BN
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)^@)@L@@@BBO
)@@G@@A@:A@)BK)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^[KCDNC(HCC)^@)^@)^@)^@)^@)BP
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)BK)^@)@L@@@BA@)^@) *! *! *! *! *! *! *! *! *! *!BQ
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)^@)@L@@@BBR
)@@G@@A@:AC)BK)^@)^@)^@)^@)^@)^[KCDGE[G^@)^@)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@)^[KBS
)@@G@@CDAE[G^@)^@)^@)^@)^@)^@)BK)^@)@L@@@BA@)^@) *! *! *! *! *! *! *! *! *! *!BT
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)^@)@L@@@BBU
)@@G@@A@:AK)BK)^@)^@)^@)^@)^@)^[KCDKES)^@)^@)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@)^[KBV
)@@G@@CDKETN^@)^@)^@)^@)^@)^@)BK)^@)@L@@@BA@)^@) *! *! *! *! *! *! *! *! *! *!BW
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)^@)@]@@@BBX
)@@G@@ETKCD#C*)^@)@C@@@B^[OH[>^[!G(-H1(H1$IS)H9&^[4H[>^[&HD>H-=IS)GD2G*'@]@@@BBY
)@@G@@ETKCD#C*)^@)@#@@@BCTJD-PD(I^@2A@)^@)@G@@@B^@)^@)^@)^@)^[KCDNC(HCC)^@)^[OBZ
)@@G@@H[>^[0GD$HD,G8)GD2G(-^[3G(!GD0H[\IL> 0)^@)@E@@@B^@)^@)^@)^@)^[KCDGE[G^@)CA
)@@G@@^@)^[OH[>^[?GD3I))I[-G9>^[?HD,HS,^@)@E@@@B^@)^@)^@)^@)^[KCDAE[G^@)^@)^[OCB
)@@G@@H[>^[&HD2IT4^[0GD$G*)H-(H1: 0)@F@@@B^@)^@)^@)^@)^[KCDKES)^@)^@)^[OH[>^[0CC
)@@G@@GD$G*)IT(JL>^[(H0)I9\IL=IS,^@)@F@@@B^@)^@)^@)^@)^[KCDKETN^@)^@)^[OH[>^[0CD
)@@G@@GD$G*)IT(JL>^[(H0)IT>GT4H92IS,@]@@@BCTJD-PD(I^@2@#@@@BALOH[>^[KGD$G*,^@)CE
)@@G@@@]@@@BETKCD#C*)^@)@L@@@BA@)^@) *! *! *! *! *! *! *! *! *! *! *! *! *! *!CF
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)^@)@L@@@BA@:A@)BK)^@)CG
)@@G@@^@)^@)^@)^@)E[[C9KE[G^@)^@)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@)E[[C9IE[G^@)^@)CH
)@@G@@^@)^@)^@)^@)BK)^@)@L@@@BA@)^@) *! *! *! *! *! *! *! *! *! *! *! *! *! *!CI
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)^@)@L@@@BA@:AC)BK)^@)CJ
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)E[[C9^CC)^@)^@)^@)^@)^@)^@)^@)^@)^@)CK
)@@G@@^@)^@)^@)^@)BK)^@)@L@@@BA@)^@) *! *! *! *! *! *! *! *! *! *! *! *! *! *!CL
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)^@)@L@@@BA@:AK)BK)E[[CM
)@@G@@C9HD9^^@)BK)E[[C9GD9F^@)BK)E[[C9PD-A^@)BK)^@)^@)^@)^@)^@)E[[C9DD9G^@)^@)CN
)@@G@@^@)^@)^@)^@)BK)^@)@L@@@BA@)^@) *! *! *! *! *! *! *! *! *! *! *! *! *! *!CO
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)^@)@L@@@BA@:AS)BK)^@)CP
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)E[[C9 ^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)CQ
)@@G@@^@)^@)^@)^@)BK)^@)@L@@@BA@)^@)BK)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)CR
)@@G@@CDMC([^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BK)^@)@L@@@BA@)^@)BK)^@)CS
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)CT
)@@G@@^@)^@)^@)^@)BK)^@)@L@@@BA@)^@) *! *! *! *! *! *! *! *! *! *! *! *! *! *!CU
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)^@)@]@@@BETKCD#C*)^@)CV
)@@G@@@C@@@B^[OH[>^[!G(-H1(H1$IS)H9&^[4H[>^[&HD>H-=IS)GD2G*'@]@@@BETKCD#C*)^@)CW
)@@G@@@#@@@BCTJD-PD(I^@2A@)^@)@G@@@B^@)^@)^@)^@)^[KCDBE[KD))^@)^[GHD,HS)I-\^[4CX
)@@G@@H[>^[0IL>I1(H95IS)I[-G9> 0)^@)@F@@@B^@)^@)^@)^@)^[KCDBD1KD))^@)^[GHD,HS)CY
)@@G@@I-\^[4H[>^[,G(8I))I[-G9> 0)^@)@H@@@B^@)^@)^@)^@)^[KCDBC-[^@)^@)^[[G-=IL>CZ
)@@G@@IT3^[\G0)I-*G*)I[-G9>^[=GD4GC)H9,^[=HD3GS,@N@@@B^@)^@)^@)^@)^[KCDBD(JC))DA
)@@G@@^@)^[]HD4^@3A@)HD3^[0GD$G*!H(\G-(G1(G(=^[&H--G8;^[+HD4^@3A*)HD3^[0GD$G*)DB
)@@G@@GL5IT9^[&H--G8,^@)@H@@@B^@)^@)^@)^@)^[KCDBD-JDS)^@)^[KGD$G*)HD3^[0H[9IT(DC
)@@G@@GT-H-?JC)H-\GT:G(=^[&H--G8,^@)@F@@@B^@)^@)^@)^@)^[KCDBE(GC0)^@)^[KGD$G*)DD
)@@G@@HD3^[PIT>IK!H-\GT:G(=^[&H--G8,@L@@@B^@)^@)^@)^@)^[KCDBDDJD))^@)^[GHD,HS)DE
)@@G@@I-\^[4H[>^[D 9J^[0GD<HT>I))I9*HD<H@)G->G1(H1>G))I-*HD3^[0GD$G*,^@)@]@@@BDF
)@@G@@CTJD-PD(I^@2@]@@@BETKCD#C*)^@)___@@@GD$G*)DC\D8)@M@@@B^@)^@)^@)^@)^@)^@)DG
)@@G@@IL>ID5G(3I))H[-IS)GC)I[2H9+GD+HD?HD4JC)H9&^@0 06*[S@@@*SDFF*@#@X@W      DH
)@@G@@    MASMLIB @#@Y@X/         MASMLIB @#@@@Y/         AXR$    @#@@@Y      DI
)@@G@@    FUNC$   @ @@@W          INCLUDE   'PIO$DEF' @#@@@W          IBANK   DJ
)@@G@@@[@@@W.     @G@@@W. THIS ELEMENT IS USED TO SUPPORT THE STATISTICS GATHEDK
)@@G@@R FEATURES OF THE @#@@@W. PIO$ PACKAGE.   @[@X@W.     @E@X@W. PIO$STATI DL
)@@G@@- STATISTICS CELL INCREMENTER, AND TRACE ROUTINE@[@X@W.     @ @X@W.     DM
)@@G@@    TS        PIO$STATQ @ @X@W.         SLJ       PIO$STATI @A@X@W.     DN
)@@G@@    +         <CELL INDEX>    @ @X@W.         C$TS      PIO$STATQ @[@X@WDO
)@@G@@.     @A@X@W. DOES NOT CHANGE ANY REGISTERS     @[@@@W.     @E@@@XSTINITDP
)@@G@@    EQU       0214365           . UNCOMMON NUMBER     @[@@@X.     @#@@@WDQ
)@@G@@          DBANK   @E@X@WPIO$STATQ T$CELL                      . TEST ANDDR
)@@G@@ SET CELL   @E@@@XPIO$STATQ* T$CELL                     . TEST AND SET CDS
)@@G@@ELL   @E@@@XREGA0     EQU       SRA(REGS,A0)      . THE LOCATION OF A0  DT
)@@G@@@A@@@XREGA1     EQU       SRA(REGS,A1)    @H@@@XPIO$A0*   EQU       REGADU
)@@G@@0             . EXTERNALIZE FOR OUR TRACE FRIENDS     @ @@@XPIO$A1*   EQDV
)@@G@@U       REGA1     @E@X@WPIO$STATI* J        $-$               . SLJ ENTRDW
)@@G@@Y POINT     @E@X@W          J         STAT01            . GO TO THE IBANDX
)@@G@@K     @#@X@W          IBANK   @]@@@XPIO$STL*    @G@@@XSTATLINK  RES     DY
)@@G@@  1                 . LINK TO THE STATISTICS AREA     @#@@@X          IBDZ
)@@G@@ANK   @[@@@X.     @[@@@X.     @F@@@X. PIO$SAVE - SUBROUTINE TO SAVE ALL EA
)@@G@@REGISTERS THAT MIGHT BE USED  @D@@@X. IN ONE OF THE SUBSEQUENT STATISTICEB
)@@G@@/TRACE ROUTINES.  @[@@@X.     @D@@@XPIO$SAVE* SLJENTRY                  EC
)@@G@@  . CALL WITH SLJ @E@@@XREGS      SAVER     X11,A5 R1,R3      . SAVE THEED
)@@G@@ MINOR SET  @G@@@X          LR        R3,PIOSAL         . GET THE STATISEE
)@@G@@TICS AREA (IF ANY)@D@@@X          SR        R3,STATLINK       . SAVE THEEF
)@@G@@ LINK @E@@@X          J         *PIO$SAVE         . RETURN TO CALLER    EG
)@@G@@@[@@@X.     @[@@@X.     @G@@@X. PIO$REST - SUBROUTINE TO RESTORE ALL THEEH
)@@G@@ PREVIOUSLY SAVE REGISTERS.   @[@@@X.     @D@@@XPIO$REST* SLJENTRY      EI
)@@G@@              . CALL WITH SLJ @G@@@X          LOADR     REGS            EJ
)@@G@@   . RESTORE ALL THE SAVED REGS     @E@@@X          J         *PIO$REST EK
)@@G@@        . RETURN TO THE CALLER@[@@@X.     @[@@@X.     @G@@@X. HERE, FINAEL
)@@G@@LLY, IS THE ONE AND ONLY ENTRY POINT TO THESE STAT SUPPORT  @G@@@X. ROUTEM
)@@G@@INES. TO CALL ONE OF THE STAT SUBROUTINES, THE  FOLLOWING IS DONE:@[@@@XEN
)@@G@@.     @H@@@X.         LX        X11,PIOSTL        . GET THE LINK TO THE EO
)@@G@@STAT ROUTINES     @E@@@X.         TZ,U      0,X11             . SKIP IF EP
)@@G@@NO LINK     @E@@@X.         LMJ       X11,<INDEX>,X11   . CALL THE SUBROEQ
)@@G@@UTINE @[@@@X.     @C@@@X. <INDEX> DETERMINES WHICH SUBROUTINE TO CALL.  ER
)@@G@@@[@@@X.     @]@@@XPIO$STATS*  @F@@@X          J         PIO$STATI       ES
)@@G@@  . 0 - INCREMENT A STAT CELL @G@@@X          J         PIO$STATC       ET
)@@G@@  . 1 - INITIALIZE THE STAT CELLS   @[@@@X.     @[@@@X/.    @E@@@X. PIO$EU
)@@G@@STATI - STATISTICS CELL INCREMENTER, AND TRACE ROUTINE@[@@@X.     @A@@@XEV
)@@G@@.         LMJ       X11,PIO$STATI   @A@@@X.         +         <CELL INDEEW
)@@G@@X>    @[@@@X.     @A@@@X. DOES NOT CHANGE ANY REGISTERS     @#@@@X      EX
)@@G@@    IBANK   @[@X@WSTAT01@]@@@XPIO$STATI   @ @@@X          LOCK      PIO$EY
)@@G@@STATQ @E@X@W          SAVER     X11,A0,A1,A2,A3,A4,A5,R1,R2,R3,REGS     EZ
)@@G@@@ @@@X          SLJ       PIO$SAVE  @F@X@W          LA        A3,PIO$STAFA
)@@G@@TI      . GET THE ARGUMENT LINK     @D@X@W          LXI,U     A3,1      FB
)@@G@@        . AN INCREMENT  @I@X@W          LA        A2,,*A3           . GEFC
)@@G@@T THE INDEX INTO A5, BUMP RETURN ADDRE    @G@@@X          LA,H2     A2,,FD
)@@G@@X11           . GET THE ARGUMENT (INDEX) INTO A2@E@X@W          SA,H2   FE
)@@G@@  A3,PIO$STATI      . STASH RETURN ADDRESS@G@X@W          LA        A3,PFF
)@@G@@IOSAL         . GET THE STATISTICS AREA LINK    @G@@@X          LA      FG
)@@G@@  A3,STATLINK       . GET THE STATISTICS AREA LINK    @E@@@W          JZFH
)@@G@@        A3,STAT05         . SKIP IF NO AREA     @H@@@W          AA,U    FI
)@@G@@  A3,,A2            . COMPUTE ADDRESS OF CELL TO INCREMENT  @D@@@W      FJ
)@@G@@    LA        A4,,A3            . GET THE VALUE @C@@@W          AA,U    FK
)@@G@@  A4,1              . BUMP IT @E@@@W          SA        A4,,A3          FL
)@@G@@  . PUT NEW VALUE BACK  @G@@@X          JLE,U     A2,UWRITE+1 STAT05 . SFM
)@@G@@KIP IF NOT UREAD OR UWRITE    @E@@@X          LA        A4,PIOUWC       FN
)@@G@@  . GET USER WORD COUNT @F@@@X          LA        A3,STATLINK       . GEFO
)@@G@@T THE STAT AREA LINK    @F@@@X          TZ        UMINWC,A3         . NOFP
)@@G@@NZERO WORD COUNT, AND...@E@@@X          TLE       A4,UMINWC,A3      . MIFQ
)@@G@@NIMUM STILL LESS? @E@@@X          SA        A4,UMINWC,A3      . NO, SET FR
)@@G@@NEW MINIMUM @F@@@X          TG        A4,UMAXWC,A3      . MAXIMUM STILL FS
)@@G@@GREATER?    @E@@@X          SA        A4,UMAXWC,A3      . NO, SET NEW MAFT
)@@G@@XIMUM @G@@@Z          AA        A4,UTOTWC,A3      . ADD CURRENT TOTAL WOFU
)@@G@@RD COUNT    @F@@@Z          SA        A4,UTOTWC,A3      . POST NEW TOTALFV
)@@G@@ WORD COUNT @E@Z@X          TNZ       UAVGWC,A3         . NONZERO AVERAGFW
)@@G@@E?    @E@Z@X          SA        A4,UAVGWC,A3      . NO, INITIALIZE IT   FX
)@@G@@@E@Z@X          AA        A4,UAVGWC,A3      . ADD PREVIOUS AVERAGE@C@Z@XFY
)@@G@@          AA,U      A4,1              . ROUND UP@D@Z@X          SSL     FZ
)@@G@@  A4,1              . DIVIDE BY 2   @E@Z@X          SA        A4,UAVGWC,GA
)@@G@@A3      . SET NEW AVERAGE     @[@@@WSTAT05@E@X@W          LA        A4,PGB
)@@G@@IOTRA         . GET THE TRACE FLAG  @H@@@X          AU,U      A2,2      GC
)@@G@@        . ROUND UP AND CONVERT ORIG 0 TO ORIG 1 @D@@@X          SSL     GD
)@@G@@  A3,1              . A3=1 THRU 3   @E@@@)          LA,U      A4,1      GE
)@@G@@        . GET A BIT TO SLIDE  @E@@@)          LSSL      A4,,A3          GF
)@@G@@  . SET MASKING BIT     @H@@@)          JEP       A4,PIOTRA STAT99  . IFGG
)@@G@@ NO MATCH TO BIT, DON'T TRACE THIS  @E@X@W          JZ        A4,STAT99 GH
)@@G@@        . RETURN IF NO TRACING@F@)@X          JLE       A3,PIOTRA STAT99GI
)@@G@@  . IF PIOTRA<INDEX, QUIT     @E@@@X          LX        X11,PIOTRL      GJ
)@@G@@  . GET THE TRACE LINK  @F@@@X          TZ,U      0,X11             . WAGK
)@@G@@S THERE REALLY A LINK?  @G@@@X          LMJ       X11,TRACE,X11     . YEGL
)@@G@@S, CALL THE TRACE ROUTINE     @E@X@W          F$DT                      GM
)@@G@@  . TURN ON EDIT MODE   @F@X@W          LA        A3,REGA0          . GEGN
)@@G@@T THE PACKET ADDRESS    @F@X@W          F$FD3     ('PIO$: ')        . INGO
)@@G@@SERT BEGINNING MESSAGE  @F@X@W          J         *$+1,A2           . CAGP
)@@G@@LL ROUTINE FOR INDEX    @[@X@W.     @F@X@W. VECTOR TABLE TO INDEX WITH AGQ
)@@G@@RGUMENT TO EDIT A PARTICULAR MESSAGE@[@X@W.     @F@X@W          J       GR
)@@G@@  EDUREAD           . EDIT THE USER READ MESSAGE@G@X@W          J       GS
)@@G@@  EDUWRITE          . EDIT THE USER WRITE MESSAGE     @F@X@W          J GT
)@@G@@        EDPREAD           . EDIT THE PAGE READ MESSAGE@G@X@W          J GU
)@@G@@        EDPWRITE          . EDIT THE PAGE WRITE MESSAGE     @F@X@W      GV
)@@G@@    J         EDPAGEH           . EDIT THE PAGE HIT MESSAGE @G@X@W      GW
)@@G@@    J         EDPAGEF           . EDIT THE PAGE FAULT MESSAGE     @[@X@WGX
)@@G@@.     @C@X@W. EVERYBODY RETURN HERE TO FINISH THE MESSAGE UP@[@X@W.     GY
)@@G@@@[@X@WEDFIN @F@X@W          F$PRT     1                 . SKIP A LINE ANGZ
)@@G@@D PRINT     @[@@@WSTAT99@E@X@W          LOADR     X11,A0,A1,A2,A3,A4,A5,HA
)@@G@@R1,R2,R3,REGS     @ @@@X          SLJ       PIO$REST  @ @@@X          UNHB
)@@G@@LOCK    PIO$STATQ @E@X@W          J         PIO$STATI         . RETURN THC
)@@G@@O CALLER    @E@@@X          J         1,X11             . RETURN TO CALLHD
)@@G@@ER    @[@X@W.     @ @X@W. THE PARTICULAR EDIT ROUTINES@[@X@W.     @]@X@WHE
)@@G@@EDUREAD     @G@X@W          LA        A2,('READS')      . WHAT THIS GUY HF
)@@G@@IS REALLY DOING   @[@X@WEDUSER@E@X@W          F$MSG     ('USER & & WORDSHG
)@@G@@ FROM & AT SECTOR &')   @H@X@W          F$FD      A2                . INHH
)@@G@@SERT THE TYPE OF USER OPERATION     @D@X@W          F$MSGR              HI
)@@G@@        . SOME MESSAGE  @F@X@W          F$DECV    UX(PIOUWC),A3     . INHJ
)@@G@@SERT THE USER WORD COUNT@E@X@W          F$MSGR                      . REHK
)@@G@@SUME THE MESSAGE  @E@X@W          F$FD2     UX(PIOFN),A3      . INSERT THL
)@@G@@HE FILENAME @D@X@W          F$MSGR                      . MORE MESSAGE  HM
)@@G@@@G@X@W          F$DECV    UX(PIOUDA),A3     . INSERT THE USER DRUM ADDREHN
)@@G@@SS    @C@X@W          J         EDFIN             . DONE    @[@X@W.     HO
)@@G@@@[@X@W.     @]@X@WEDUWRITE    @A@X@W          LA        A2,('WRITES')   HP
)@@G@@@E@X@W          J         EDUSER            . JOIN PREVIOUS CODE  @[@X@WHQ
)@@G@@.     @[@X@W.     @]@X@WEDPREAD     @A@X@W          LA        A2,('READ'HR
)@@G@@)     @[@X@WEDPAGE@D@X@W          F$MSG     ('PAGE & &, FILE: &  ADDRESSHS
)@@G@@: &') @F@X@W          F$OCTF    12,REGA1          . INSERT THE PAGE ADDRHT
)@@G@@ESS   @#@X@W          F$MSGR  @G@X@W          F$FD      A2              HU
)@@G@@  . INSERT TYPE OF PAGE OPERATION   @E@X@W          LA        A3,REGA1  HV
)@@G@@        . GET THE PAGE LINK   @E@X@W          LA        A2,PAGIOL,A3    HW
)@@G@@  . GET THE IO LINK     @F@X@W          JNZ       A2,EDPAGE01       . SKHX
)@@G@@IP IF THERE'S AN IO LINK@B@X@W          F$MSG     ('  * NO I/O LINK *') HY
)@@G@@@C@X@W          J         EDFIN             . JOIN    @]@X@WEDPAGE01    HZ
)@@G@@@#@X@W          F$MSGR  @E@X@W          F$FD2     UX(PIOFN),A2      . INIA
)@@G@@SERT THE FILENAME @#@X@W          F$MSGR  @E@X@W          F$DECV    PAGDIB
)@@G@@A,A3          . GET THE PAGE ADDRESS@ @X@W          J         EDFIN     IC
)@@G@@@[@X@W.     @]@X@WEDPWRITE    @A@X@W          LA        A2,('WRITE')    ID
)@@G@@@ @X@W          J         EDPAGE    @[@X@W.     @]@X@WEDPAGEH     @ @X@WIE
)@@G@@          LA        A2,('HIT')@ @X@W          J         EDPAGE    @[@X@WIF
)@@G@@.     @]@X@WEDPAGEF     @A@X@W          LA        A2,('FAULT')    @ @X@WIG
)@@G@@          J         EDPAGE    @[@X@W.     @[@@@X.     @[@@@X/.    @A@@@XIH
)@@G@@. PIO$STATC - CLEAR STATISTICS CELLS@[@@@X.     @ @@@X.         LA,U    II
)@@G@@  A0,PKT    @A@@@X.         LMJ       X11,PIO$STATC   @[@@@X.     @#@@@XIJ
)@@G@@          IBANK   @]@@@XPIO$STATC   @ @@@X          LOCK      PIO$STATQ IK
)@@G@@@ @@@X          SLJ       PIO$SAVE  @F@@@X          LA        A1,PIOSAL IL
)@@G@@        . GET THE STAT AREA LINK    @E@@@X          JZ        A1,STC015 IM
)@@G@@        . SKIP IF NO AREA LINK@F@@@X          LA,U      A2,STINIT       IN
)@@G@@  . GET INITIALIZATION VALUE  @G@@@X          JE        A2,STINFL,A1 STCIO
)@@G@@010 . IF INITIALIZED, SKIP AHEAD    @E@@@X          SA        A2,STINFL,IP
)@@G@@A1      . NOT INIT, DO IT NOW @G@@@X          SZ        STNIOP,A1       IQ
)@@G@@  . CLEAR # OF IO PACKETS ATTACHED  @E@@@X          LXI,U     A1,1      IR
)@@G@@        . GET AN INCREMENT    @E@@@X          LA,U      A2,A2           IS
)@@G@@  . GET A POINTER TO A2 @G@@@X          DSL       A2,36             . CLIT
)@@G@@EAR A2 AND PUT POINTER IN A3  @H@@@X          LR,U      R1,STALEN-1     IU
)@@G@@  . GET LEN OF STAT AREA(EXCEPT INIT WORD)@E@@@X          BT        A1,,IV
)@@G@@*A3           . MOVE ZERO TO IT     @F@@@X          LA        A1,PIOSAL IW
)@@G@@        . RESTORE STAT AREA POINTER @[@@@XSTC010@E@@@X          LA      IX
)@@G@@  A2,STNIOP,A1      . GET # OF IO PACKETS @D@@@X          AA,U      A2,1IY
)@@G@@              . INCREMENT IT  @D@@@X          SA        A2,STNIOP,A1    IZ
)@@G@@  . POST NEW VALUE@[@@@XSTC015@E@@@X          JEZ       PIOTRA STC020   JA
)@@G@@  . RETURN IF NO TRACING@E@@@X          LX        X11,PIOTRL        . GEJB
)@@G@@T THE TRACE LINK  @E@@@X          TZ,U      0,X11             . SKIP IF JC
)@@G@@NO LINK     @F@@@X          LMJ       X11,TRACEI,X11    . CALL THE TRACEJD
)@@G@@ INITIALIZER@[@@@XSTC020@ @@@X          SLJ       PIO$REST  @ @@@X      JE
)@@G@@    UNLOCK    PIO$STATQ @E@@@X          J         0,X11             . REJF
)@@G@@TURN TO CALLER    @[@@@X.     @[@@@X.     @#@@@W          END     ___@@@JG
)@@G@@@F@@@X          TZ,U      0,X11             . WAS THERE REALLY A LINK?  JH
)@@G@@*[S@@@*SDFF*@#@7@6          MASMLIB @#@@@7/         AXR$    @#@@@7      JI
)@@G@@    FUNC$   @#@@@7          ELT$    @#@@@6          IBANK   @[@@@7.     JJ
)@@G@@@B@@@7. THIS PROGRAM TESTS THE PIO$ PACKAGE     @[@@@7.     @D@@@7. FOURJK
)@@G@@ PARAMETERS MAY BE GIVEN ON THE PIOTEST COMMAND:@[@@@7.     @G@@@7.  1F/JL
)@@G@@<FLAG> - ONE-FILE FLAG: 1=ONE FILE FOR ALL ACTIVITIES; 0=ONE FILE @D@@@7JM
)@@G@@.              PER EACH ACTIVITY.  DEFAULT IS "1F/1". @[@@@7.     @G@@@7JN
)@@G@@.  ACT/<NUM> - SPECIFY THE NUMBER OF ACTIVITIES.  EACH ACTIVITY HAS ITS JO
)@@G@@@G@@@7.              OWN PIO$ PACKET AND I/O BUFFER, AND WRITES TO/READSJP
)@@G@@ FROM @E@@@7.              DISC ADDRESSES DETERMINED BY ITS ACTIVITY ID.JQ
)@@G@@@B@@@7.              THE DEFAULT IS "ACT/1".    @[@@@7.     @F@@@7.  PC/JR
)@@G@@<NUM>  - SPECIFY THE PAGE COUNT.  THE DEFAULT IS "PC/1".    @[@@@7.     JS
)@@G@@@F@@@7.  PS/<NUM>  - SPECIFY THE PAGE SIZE.  THE DEFAULT IS "PS/112".   JT
)@@G@@@[@@@7.     @ @@@7. THE DEFAULT EXECUTION IS:   @[@@@7.     @C@@@7. @PIOJU
)@@G@@TEST 1F/1,ACT/1,PC/1,PS/112  =  @PIOTEST  @[@@@7.     @^@@@7          PIJV
)@@G@@O$FIELDS    @[@@@7.     @D@@@7TRACE     EQU       1                 . SUJW
)@@G@@MMARY TRACE @D@@@7STATS     EQU       1                 . ALLOW STATS   JX
)@@G@@@E@@@7BWCOUNT   EQU       100               . BUFFER WRITE COUNT  @F@@@7JY
)@@G@@BUFL      EQU       28                . BUFFER LENGTH IN WORDS    @D@@@7JZ
)@@G@@DEFPAGES  EQU       4*28              . FOUR SECTORS  @E@@@7DEFPAGEC  EQKA
)@@G@@U       1                 . DEFAULT # OF PAGES  @[@@@6.     @B@7@6. THISKB
)@@G@@ PROGRAM TESTS THE PIO$ PACKAGE     @[@7@6.     @^@7@6. IO PACKET DEFINIKC
)@@G@@TIONS @[@7@6.     @^@7@6IOPKT     BASE      0   @C@7@6IOFN      DWORD   KD
)@@G@@                    . FILENAME@D@7@6IOACTW    WORD                      KE
)@@G@@  . ACTIVITY WORD @C@7@6IOSTA     SIXTH                       . STATUS  KF
)@@G@@@C@7@6IOFNC     SIXTH                       . FUNCTION@E@7@6IOAFC     SIKG
)@@G@@XTH                       . ABNORMAL FRAME COUNT@E@7@6IOFWC     HALF    KH
)@@G@@                    . FINAL WORD COUNT    @E@7@6IOBAW     WORD          KI
)@@G@@              . BUFFER ACCESS WORD  @D@7@6IOWC      FIELD     H1        KJ
)@@G@@        . WORD COUNT    @D@7@6IOBA      FIELD     H2                . BUKK
)@@G@@FFER ADDRESS@D@7@6IODA      WORD                        . DRUM ADDRESS  KL
)@@G@@@#@7@6          ENDBASE @[@@@6.     @^@@@7IOERR     EQU       0   @[@@@6KM
)@@G@@START @A@@@6          CSF       '@FREE PIOTEST' @F@@@7          PRINT   KN
)@@G@@  'PAGE I/O TURNED ':(PIO$FLAG->'ON'!'OFF')     @B@@@6          CSF     KO
)@@G@@  '@ASG,T PIOTEST,F'    @[@@@7.     @ @@@7. READ INFOR TO GET PARAMETERSKP
)@@G@@@[@@@7.     @B@@@7          LA        A0,(INFORL,INFOR)     @D@@@7      KQ
)@@G@@    LMJ       X11,RINF$         . READ ALL INFOR@D@@@7          J       KR
)@@G@@  RINFERR           . UH-OH, ERROR  @E@@@7          LA,U      A6,1      KS
)@@G@@        . START WITH SPEC 1   @[@@@7TST010@E@@@7          LA        A0,AKT
)@@G@@6             . GET CURRENT SPEC NO.@H@@@7          LMJ       X11,SELT$ KU
)@@G@@        . SET UP THE ELT$ TABLE WITH SAID SPEC  @E@@@7          J       KV
)@@G@@  TST040            . QUIT IF NO MORE     @E@@@7          LA,H1     A0,EKW
)@@G@@NAME          . GET THE PARM ID     @G@@@7          TSE       A0,PARMID,KX
)@@G@@A1 PARML,PARMC,PARMT . FIND THE PARAMETER @E@@@7          J         PARMKY
)@@G@@ERR           . UNKNOWN PARAMETER   @F@@@7          LA        A2,EVER   KZ
)@@G@@        . GET THE VERSION (NUMBER)  @D@@@7          LA,U      A5,0      LA
)@@G@@        . INITIAL SUM   @[@@@7TST020@^@@@7          LA,U      A3,0@E@@@7LB
)@@G@@          LDSC      A2,6              . SLIDE FIRST # AROUND@E@@@7      LC
)@@G@@    JZ        A3,TST030         . SKIP OUT IF NO CHAR @E@@@7          JELD
)@@G@@,U      A3,' ' TST030     . SKIP OUT IF BLANK   @E@@@7          AN,U    LE
)@@G@@  A3,'0'            . REMOVE NUMERIC ZONE @E@@@7          JN        A3,VLF
)@@G@@ALUERR        . IF NEG, BAD NUMBER  @F@@@7          JLE,U     A3,10 VALULG
)@@G@@ERR     . ALSO IF GREATER THAN 9    @F@@@7          MSI,U     A5,10     LH
)@@G@@        . ADD WEIGHT TO PREVIOUS #'S@D@@@7          AA        A5,A3     LI
)@@G@@        . INCLUDE NEW # @D@@@7          J         TST020            . DOLJ
)@@G@@ SOME MORE  @[@@@7TST030@E@@@7          LA,U      A1,,A1            . CLLK
)@@G@@EAR INCREMENT     @F@@@7          TE        A1,UX(ONEFILE,,U) . UNLESS ILL
)@@G@@T'S THIS FLAG     @D@'@9          TNE,U     A1,UX(TRACEV,,U)  . OR THIS LM
)@@G@@FLAG  @D@@@'          TNE       A1,UX(TRACEV,,U)  . OR THIS FLAG  @E@@@9LN
)@@G@@          J         $+2               . THEN IT CAN BE ZERO @E@@@7      LO
)@@G@@    JZ        A5,VALUERR        . IF ZERO, NO CAN DO  @F@@@7          SALP
)@@G@@        A5,PARMVAL,A1     . POST THE PARAMETER VALUE  @G@@@7          AALQ
)@@G@@,U      A6,1              . INCREMENT THE PARAMETER INDEX   @D@@@7      LR
)@@G@@    J         TST010            . GO FOR MORE   @[@@@7TST040@G@@@9      LS
)@@G@@    LA        A0,TRACEV         . GET THE CONFIGURED TRACE VALUE  @E@@@9LT
)@@G@@          SA        A0,PIOTRA+DEFPKT  . POST INTO THE PACKET@[@@@7.     LU
)@@G@@@D@@@7. ACQUIRE AND INITIALIZE A PAGING AREA OF DESIRED SIZE@[@@@7.     LV
)@@G@@@E@@@7          LA        A0,PAGESIZE       . GET NOMINAL PAGESIZE@G@@@7LW
)@@G@@          DSL       A0,36             . ROUND OFF TO NEAREST PREP FACTORLX
)@@G@@@B@@@7          DI,U      A0,4*28           .   @C@@@7          MSI,U   LY
)@@G@@  A0,4*28           . ALL DONE@F@@@7          SA        A0,PAGESIZE     LZ
)@@G@@  . THIS IS THE PAGE SIZE     @G@@@7          LA        A1,PAREA        MA
)@@G@@  . GET THE PAGING AREA RESERVE     @E@@@7          LA,U      A2,,A0    MB
)@@G@@        . GET THE PAGESIZE    @F@@@7          LMJ       X11,PIOPAI$     MC
)@@G@@  . INITIALIZE THE PAGING AREA@E@@@7          LR        R4,PAGECOUNT    MD
)@@G@@  .  # OF PAGES DESIRED @D@@@7          JGD       R4,$+1            . DEME
)@@G@@CREMENT IT  @[@@@7TST050@F@@@7          LA        A0,PAGESIZE       . GEMF
)@@G@@T DESIRED SIZE OF PAGE  @F@@@7          AA,U      A0,3              . ADMG
)@@G@@D ROOM FOR THE HEADER   @D@@@7          LMJ       X11,BGET          . GEMH
)@@G@@T A PAGE    @E@@@7          LA,U      A2,,A0            . GET PAGE ADDREMI
)@@G@@SS    @E@@@7          LA        A1,PAREA          . GET PAGING AREA     MJ
)@@G@@@D@@@7          LMJ       X11,PIONP$        . ADD A NEW PAGE@D@@@7      MK
)@@G@@    JGD       R4,TST050         . LOOP BACK     @[@@@7.     @C@@@7. NOW ML
)@@G@@CREATE A FCT AND BUFFER FOR EACH ACTIVITY @[@@@7.     @E@@@7          LRMM
)@@G@@        R4,ACTIVITIES     . GET # OF ACTIVITIES @H@@@7          LA      MN
)@@G@@  A7,R4             . # OF ACTIVITIES = DRUM ADDR INCREMENT @D@@@7      MO
)@@G@@    LA,U      A6,0              . ACTIVITY ID   @G@@@7          LOCK    MP
)@@G@@  CAGE              . LOCK ALL ACTIVITIES IN A CAGE   @F@@@7          JGMQ
)@@G@@D       R4,$+1            . COUNT THE FIRST ACTIVITY  @[@@@7TST060@E@@@7MR
)@@G@@          LA,U      A0,PIOLEN         . GET A PIO$ PACKET   @D@@@7      MS
)@@G@@    LMJ       X11,BGET          . GET THE PACKET@F@@@7          LX,U    MT
)@@G@@  X10,,A0           . XFER THE POINTER TO X10   @F@@@7          MOVE    MU
)@@G@@  A0 A1,DEFPKT PIOLEN . MOVE THE DEFAULT PACKET @G@@@7          LA,U    MV
)@@G@@  A0,BUFL           . NOW GET A BUFFER FOR THIS PACKET@B@@@7          LMMW
)@@G@@J       X11,BGET          .   @G@@@7          SA        A0,PIOBA,X10    MX
)@@G@@  . POST THE NEW BUFFER ADDRESS     @F@@@7          JNEZ      ONEFILE TSMY
)@@G@@T070    . SKIP IF ONE FILE ONLY     @F@@@7          LA,U      A0,11     MZ
)@@G@@        . GET SIZE OF STAT AREA     @E@@@7          LMJ       X11,BGET  NA
)@@G@@        . GET ANOTHER BUFFER  @G@@@7          SA        A0,PIOSAL,X10   NB
)@@G@@  . POST THE STATISTICS AREA LINK   @[@@@7TST070@F@@@7          LA      NC
)@@G@@  A0,(1,ACT)        . GET THE ACTIVITY PARAMETER@D@@@7          ER      ND
)@@G@@  FORK$             . START HIM UP  @F@@@7          AA,U      A6,1      NE
)@@G@@        . INCREMENT THE ACTIVITY ID @D@@@7          JGD       R4,TST060 NF
)@@G@@        . GO FOR MORE   @H@@@7          F$DT      0                 . FING
)@@G@@NALLY, INITIALIZE THE EDITING AREA  @D@@@7          UNBLOCK   CAGE      NH
)@@G@@        . LET'EM GO!!!  @D@@@7          ER        EXIT$             . WENI
)@@G@@'RE DONE.   @[@@@7.     @#@@@7. ERROR IN RINF$  @[@@@7.     @ @@@7RINFERNJ
)@@G@@R   ER        PRINT$    @ @@@7          ER        EXIT$     @[@@@7.     NK
)@@G@@@^@@@7. ERROR IN PARAMETER ID @[@@@7.     @B@@@7PARMERR   PRINT     'UNKNL
)@@G@@NOWN PARAMETER'   @ @@@7          ER        EXIT$     @[@@@7.     @ @@@7NM
)@@G@@. ERROR IN PARAMETER VALUE    @[@@@7.     @B@@@7VALUERR   PRINT     'BADNN
)@@G@@ PARAMTER VALUE'  @ @@@7          ER        EXIT$     @[@@@7.     @C@7@6NO
)@@G@@          PRINT     'TEST FILE IS PIOTEST.'     @E@7@6          LA,U    NP
)@@G@@  A0,PIOPKT         . GET THE PIO PACKET  @F@7@6          LA        A1,(NQ
)@@G@@PAREAL,PAREA) . PAGING AREA ACCESS WORD   @B@7@6          LA,U      A2,PNR
)@@G@@AGESIZE       .   @C@7@6          LMJ       X11,PIOI$         . INIT    NS
)@@G@@@[@@@7ACT   @D@@@7          LOCK      CAGE              . LOCK THE CAGE NT
)@@G@@@E@@@7          UNLOCK    CAGE              . LET SOMEONE ELSE GO @[@@@7NU
)@@G@@.     @H@@@7. IF THE '1F' PARAMETER WAS CLEARED, CREATE A UNIQUE FILE FONV
)@@G@@R EACH ACTIVITY   @[@@@7.     @F@@@7          JNEZ      ONEFILE ACT010  NW
)@@G@@  . SKIP IF ONLY ONE FILE     @F@@@7          F$LOCK                    NX
)@@G@@  . LOCK THE FDIT$ PACKAGE    @F@@@7          F$MSG     ('@FREE  PIOTESTNY
)@@G@@&'L) . CREATE @FREE IMAGE     @E@@@7          F$DECV    A6              NZ
)@@G@@  . INSERT ACTIVITY ID  @G@@@7          F$CSF     -1                . DOOA
)@@G@@ CSF$ BUT DON'T CLEAR BUFFER  @F@@@7          F$MSG     ('@ASG,T&'L)    OB
)@@G@@  . REPLACE @FREE WITH @ASG,T @F@@@7          F$CSF     1               OC
)@@G@@  . DO CSF$ AND CLEAR BUFFER  @F@@@7          F$DTA     2,PIOFN,X10     OD
)@@G@@  . CREATE FILENAME IN SITU   @B@@@7          F$MSG     ('PIOTEST&'L)   OE
)@@G@@  .   @F@@@7          F$DECV    A6                . INSERT THE ACTIVITY OF
)@@G@@ID    @G@@@7          F$DT                        . RESET EDITING TO INTOG
)@@G@@ERNAL BUFFER@F@@@7          F$UNLOCK                    . ALLOW OTHERS TOH
)@@G@@O DO SAME   @F@@@7          SZ        PIOMTA,X10        . CLEAR MULTI-THOI
)@@G@@READ ACCESS @[@@@7.     @B@@@7. NOW OPEN THE FILE WITH THE PIO$ PACKAGE OJ
)@@G@@@[@@@7.     @[@@@7ACT010@E@8@7          LA        A0,ACTIVITIES     . GEOK
)@@G@@T # OF ACTIVITIES @F@8@7          TLE,U     A0,2              . MORE THAOL
)@@G@@N ONE ACTIVITY?   @F@@@8          TLE,U     A7,2              . MORE THAOM
)@@G@@N ONE ACTIVITY?   @G@@@7          SZ        PIOMTA,X10        . NO, CLEAON
)@@G@@R MULTI-THREAD ACCESS   @D@@@7          PIOFO$    0,X10 0,,U        . OPOO
)@@G@@EN THE FILE @D@@@7          SA        A6,PIODA,X10      . SET INITIAL DAOP
)@@G@@@ @@@7          LR,U      R4,BWCOUNT@]@@@7ACTWLOOP    @F@@@7          LAOQ
)@@G@@        A0,PIOBA,X10      . GET THE BUFFER ADDRESS    @^@@@7          LXOR
)@@G@@I,U     A0,1@ @@@7          LA,U      A1,A2     @G@@@7          LA      OS
)@@G@@  A2,PIODA,X10      . GET THE CURRENT DRUM ADDRESS    @E@@@7          LXOT
)@@G@@I       A2,A6             . USE ACT ID AS H1    @E@@@7          LR,U    OU
)@@G@@  R1,BUFL           . LENGTH OF BUFFER    @E@@@7          BT        A0,,OV
)@@G@@*A1           . FILL THE BUFFER     @E@@@7          PIOW$     0,X10     OW
)@@G@@        . WRITE THE BUFFER    @D@@@7          TZ        PIOSTA,X10      OX
)@@G@@  . IO ERROR?     @C@@@7          ER        ERR$              . DIE     OY
)@@G@@@F@@@7          LA        A0,PIODA,X10      . INCREMENT THE DRUM ADDRESSOZ
)@@G@@@ @@@7          AA        A0,A7     @A@@@7          SA        A0,PIODA,XPA
)@@G@@10    @A@@@7          JGD       R4,ACTWLOOP     @[@@@7.     @#@@@7      PB
)@@G@@    F$LOCK  @B@@@7          F$MSG     ('PKT & WRITTEN&')    @ @@@7      PC
)@@G@@    F$OCTF    6,0,X10,U @#@@@7          F$MSGR  @^@@@7          F$PRT   PD
)@@G@@  0,1 @#@@@7          F$UNLOCK@F@@@7          SA        A6,PIODA,X10    PE
)@@G@@  . RESET INITIAL DRUM ADDR   @E@@@7          LR,U      R4,BWCOUNT      PF
)@@G@@  . BUFFER WRITE COUNT  @]@@@7ACTRLOOP    @ @@@7          PIOR$     0,X1PG
)@@G@@0     @ @@@7          TZ        PIOSTA,X10@^@@@7          ER        ERR$PH
)@@G@@@A@@@7          LA        A0,PIOBA,X10    @^@@@7          LXI,U     A0,1PI
)@@G@@@A@@@7          LA        A2,PIODA,X10    @ @@@7          LXI       A2,APJ
)@@G@@6     @ @@@7          LR,U      R1,BUFL-1 @ @@@7          TE        A2,,PK
)@@G@@*A0   @^@@@7          ER        ERR$@ @@@7          JGD       R1,$-2    PL
)@@G@@@A@@@7          LA        A0,PIODA,X10    @ @@@7          AA        A0,APM
)@@G@@7     @A@@@7          SA        A0,PIODA,X10    @A@@@7          JGD     PN
)@@G@@  R4,ACTRLOOP     @[@@@7.     @#@@@7          F$LOCK  @A@@@7          F$PO
)@@G@@MSG     ('PKT & READ&'L)@ @@@7          F$OCTF    6,0,X10,U @#@@@7      PP
)@@G@@    F$MSGR  @^@@@7          F$PRT     0,1 @#@@@7          F$UNLOCK@[@@@7PQ
)@@G@@.     @ @@@7          PIOFC$    0,X10     @ @@@7          ER        EXITPR
)@@G@@$     @[@@@7.     @C@7@6          PRINT     'PAGING AREA INITIALIZED'   PS
)@@G@@@C@7@6          PRINT     'SEQUENTIAL WRITES STARTING'@ @7@6          LAPT
)@@G@@,U      A0,PIOPKT @F@7@6          SZ        IODA,A0           . CLEAR THPU
)@@G@@E DRUM ADDRESS    @F@7@6          LA        A1,(BUFL,BUF)     . GET THE PV
)@@G@@BUFFER ACCESS WORD@C@7@6          SA        A1,IOBAW,A0       . SET IT  PW
)@@G@@@E@7@6          LA,U      A6,0              . THIS IS A COUNTER   @]@7@6PX
)@@G@@TEST010     @F@7@6          AA,U      A6,1              . INCREMENT THE PY
)@@G@@COUNTER     @G@7@6          JLE,U     A6,BWCOUNT TEST020 . WHEN COUNT ISPZ
)@@G@@ REACHED-SKIP     @E@7@6          LA        A1,(1,BUF)        . BUFFER AQA
)@@G@@CCESS WORD  @E@7@6          LA,U      A2,A6             . COUNTER ACCESSQB
)@@G@@ WORD @E@7@6          LR,U      R1,BUFL           . LENGTH OF THE BUFFERQC
)@@G@@@G@7@6          BT        A1,,*A2           . MOVE THE COUNT INTO THE BUQD
)@@G@@FFER  @E@7@6          LMJ       X11,PIOW$         . WRITE THE BUFFER    QE
)@@G@@@E@7@6          JNEZ      IOSTA,A0 IOERR    . CHECK THE STATUS    @E@7@6QF
)@@G@@          LA        A1,IODA,A0        . GET THE DRUM ADDRESS@D@7@6      QG
)@@G@@    AA,U      A1,BUFL//28       . INCREMENT IT  @E@7@6          SA      QH
)@@G@@  A1,IODA,A0        . POST THE NEW VALUE  @D@7@6          J         TESTQI
)@@G@@010           . KEEP GOING    @]@7@6TEST020     @G@7@6          PRINT   QJ
)@@G@@  $CD(BWCOUNT):' ':$CD(BUFL):'-WORD BUFFERS WRITTEN'  @[@7@6.     @ @7@6QK
)@@G@@          PRINT     'DONE'    @ @7@6          ER        EXIT$     @[@7@6QL
)@@G@@.     @[@@@6.     @#@@@6          DBANK   @D@@@7CAGE      T$CELL        QM
)@@G@@              . A SEMAPHORE   @[@@@7.     @^@@@7INFORL    EQU       64  QN
)@@G@@@ @@@7INFOR     RES       INFORL    @[@@@7.     @^@@@7. THE PARAMETER TAQO
)@@G@@BLE   @[@@@7.     @C@@@7PARMID    EQUF      0,,H1             . THE ID  QP
)@@G@@@D@@@7PARMVAL   EQUF      0,,H2             . THE VALUE     @E@@@7PARML QQ
)@@G@@    EQU       1                 . LENGTH OF AN ITEM   @[@@@7.     @[@@@7QR
)@@G@@PARMT @H@@@7ONEFILE   EQUF      $,,H2             . 1 IF ONLY ONE FILE FQS
)@@G@@OR ALL ACTIVITIES @E@@@7          '1F ',1                     . DEFAULT QT
)@@G@@IS ONE FILE @E@@@7ACTIVITIES EQUF     $,,H2             . # OF ACTIVITIEQU
)@@G@@S     @A@@@7          'ACT',1   . DEFAULT IS 1  @E@@@7PAGECOUNT EQUF    QV
)@@G@@  $,,H2             . # OF PAGES TO GEN   @E@@@7          'PC ',DEFPAGECQW
)@@G@@              . DEFAULT IS THIS     @E@@@7PAGESIZE  EQUF      $,,H2     QX
)@@G@@        . # OF WORDS PER PAGE @E@@@7          'PS ',DEFPAGES            QY
)@@G@@  . DEFAULT IS THIS     @F@@@9TRACEV    EQUF      $,,H2             . COQZ
)@@G@@NFIGURABLE TRACE VALUE  @E@@@9          'TR ',TRACE                 . DERA
)@@G@@FAULT FOR TRACE   @D@@@7PARMC     EQU       $-PARMT           . # OF PARRB
)@@G@@AMS   @[@@@7.     @D@7@6PAREAL    EQU       300               . PAGING ARC
)@@G@@REA   @ @7@6PAREA     RES       PAREAL    @^@7@6PAGESIZE  EQU       112 RD
)@@G@@@E@7@6BWCOUNT   EQU       60                . BUFFER WRITE COUNT  @F@7@6RE
)@@G@@BUFL      EQU       28                . BUFFER LENGTH IN WORDS    @^@7@6RF
)@@G@@BUF       RES       BUFL@B@7@6PIOPKT    PIO$PKT   'PIOTEST' BUFL,BUF    RG
)@@G@@@H@@@7DEFPKT    PIO$PKT   *'PIOTEST' BUFL,$-$  0 PAREA+1,0,TRACE[STATS->RH
)@@G@@',STATAREA']@^@@@7STATAREA  RES       11  @H@@@7PAREA     PIO$PAR   0,0 RI
)@@G@@              . RESERVE SPACE FOR THE PAGING AREA     @[@@@6.     @ @@@6RJ
)@@G@@          END       START     ___@@@  . NO, CLEAR MULTI-THREAD ACCESS   RK
)@@G@@@D@@@7          PIOFO$    0,X10 0,,U        . OPEN THE FILE @D@@@7      RL
)@@G@@    SA        A6,PIODA,X*[S@@@*SDFF*@#@@@P/         AXR$    @#@@@P      RM
)@@G@@    FUNC$   @ @@@P          INCLUDE   'PIO$DEF' @#@@@P          IBANK   RN
)@@G@@@[@@@P.     @A@@@P. MOST OF THE DBANK IS IN PIO$STATS.@^@@@P. MAKE SOME RO
)@@G@@EQUIVALENCES@[@@@P.     @#@@@P          DBANK   @D@@@PTRAX11    RES     RP
)@@G@@  1                 . RETURN POINT  @ @@@PREGA0     EQU       PIO$A0    RQ
)@@G@@@ @@@PREGA1     EQU       PIO$A1    @ @@@PSTATLINK  EQU       PIO$STL   RR
)@@G@@@E@@@PUTOTAL    RES       1                 . TOTAL USER I/O COUNT@E@@@PRS
)@@G@@PTOTAL    RES       1                 . TOTAL PAGE I/O COUNT@F@@@PHITRATRT
)@@G@@E   RES       1                 . = PAGEH/(PAGEH+PAGEF)     @F@@@PIOREDRRU
)@@G@@    RES       1                 . = 100*(1-(PTOTAL/UTOTAL)) @D@@@PPAGECORV
)@@G@@UNT RES       1                 . # OF PAGES    @E@@@PPAGESIZE  RES     RW
)@@G@@  1                 . SIZE OF EACH PAGE   @#@@@P          IBANK   @[@@@PRX
)@@G@@.     @[@@@P.     @E@@@P. THE TRACE ROUTINES ARE CALLED THROUGH THIS ENTRY
)@@G@@RY POINT.   @[@@@P.     @E@@@P.         LX        X11,PIOTRL        . GERZ
)@@G@@T THE TRACE LINK  @E@@@P.         TZ,U      0,X11             . IS IT FOSA
)@@G@@R REAL?     @E@@@P.         LMJ       X11,<INDEX>,X11   . CALL THE SUBROSB
)@@G@@UTINE @[@@@P.     @D@@@P. WHERE <INDEX> DETERMINES THE SUBROUTINE CALLEDSC
)@@G@@.     @[@@@P.     @]@@@PPIO$TRACE*  @F@@@P          J         PIO$TRACERSD
)@@G@@        . 0 - NORMAL TRACE ROUTINE  @E@@@P          J         PIO$TRACESSE
)@@G@@        . 1 - TRACE SUMMARY   @F@@@P          J         PIO$TRACEI      SF
)@@G@@  . 2 - TRACE INITIALIZATION  @[@@@P.     @[@@@P/.    @A@@@P. PIO$TRACERSG
)@@G@@ - NORMAL TRACE ROUTINE @[@@@P.     @A@@@P. ENTER WITH A2 = TRACE FLAG ISH
)@@G@@NDEX  @B@@@P.         LMJ       X11,TRACE+PIO$TRACE   @[@@@P.     @]@@@PSI
)@@G@@PIO$TRACER  @C@@@P          SX        X11,TRAX11        . SAVE X11@F@@@PSJ
)@@G@@          F$LOCK                      . LOCK THE FDIT$ PACKAGE    @[@P@OSK
)@@G@@.     @[@P@O.     @E@P@O          F$DT                        . TURN ON SL
)@@G@@EDIT MODE   @E@@@P          F$DT      0                 . TURN ON EDIT MSM
)@@G@@ODE   @F@@@O          LA        A3,REGA0          . GET THE PACKET ADDRESN
)@@G@@SS    @F@P@O          F$FD3     ('PIO$: ')        . INSERT BEGINNING MESSO
)@@G@@SAGE  @F@@@P          F$MSG     ('PIO$ PACKET & &') . INSERT BEGINNING MSP
)@@G@@ESSAGE@G@@@P          F$OCTF    6,UX(PIOPKT),A3,U . INSERT THE IO PACKETSQ
)@@G@@ ADDRESS    @#@@@P          F$MSGR  @[@@@P.     @F@@@O          LX      SR
)@@G@@  X11,EDRTN,A2      . GET SUBROUTINE ADDRESS    @E@@@O          LA      SS
)@@G@@  A2,EDTYPE,A2      . GET MESSAGE TYPE    @E@@@O          J         0,X1ST
)@@G@@1             . CALL THE SUB-ROUTINE@[@@@O.     @F@@@O. VECTOR TABLE TO SU
)@@G@@INDEX WITH ARGUMENT TO EDIT A PARTICULAR MESSAGE@[@@@O.     @E@@@OEDRTN SV
)@@G@@    EQUF      $,,H1             . LINK TO ROUTINE     @E@@@OEDTYPE    EQSW
)@@G@@UF      $,,H2             . ADDRESS OF MESSAGE  @A@P@O          +       SX
)@@G@@  EDUSER,('READS')@E@@@P          +         EDUSER,('USER READS & WORDS SY
)@@G@@FROM &')    @B@P@O          +         EDUSER,('WRITES')     @E@@@P      SZ
)@@G@@    +         EDUSER,('USER WRITES & WORDS TO &')     @A@@@O          + TA
)@@G@@        EDPAGE,('READ') @A@@@O          +         EDPAGE,('WRITE')@A@@@OTB
)@@G@@          +         EDPAGE,('HIT')  @A@P@O          +         EDPAGE,('FTC
)@@G@@AULT')@A@@@P          +         EDPAGE,('FAULT')@[@P@O.     @C@P@O. EVERTD
)@@G@@YBODY RETURN HERE TO FINISH THE MESSAGE UP@[@P@O.     @[@P@OEDFIN @F@P@OTE
)@@G@@          F$PRT     1                 . SKIP A LINE AND PRINT     @ @P@OTF
)@@G@@. THE PARTICULAR EDIT ROUTINES@[@@@P.     @[@@@O.     @[@@@OEDUSER@E@P@OTG
)@@G@@          F$MSG     ('USER & & WORDS FROM & AT SECTOR &')   @E@@@P      TH
)@@G@@    F$MSG     0,A2              . START THE MESSAGE   @H@P@O          F$TI
)@@G@@FD1     0,A2              . INSERT THE TYPE OF USER OPERATION     @D@P@OTJ
)@@G@@          F$MSGR                      . SOME MESSAGE  @F@@@O          F$TK
)@@G@@DECV    UX(PIOUWC),A3     . INSERT THE USER WORD COUNT@E@@@O          F$TL
)@@G@@MSGR                      . RESUME THE MESSAGE  @E@@@O          F$FD2   TM
)@@G@@  UX(PIOFN),A3      . INSERT THE FILENAME @D@P@O          F$MSGR        TN
)@@G@@              . MORE MESSAGE  @A@@@P          F$COPY    4,(' AT 'L)     TO
)@@G@@@F@@@P          LA        A0,('WORD'L)      . ASSUME WORD ADDRESSES     TP
)@@G@@@C@@@P          TNZ       UX(PIOWAF,A3)     . CORRECT?@F@@@P          LATQ
)@@G@@        A0,('SECTOR')     . NOPE, SECTOR ADDRESSES    @D@@@P          F$TR
)@@G@@FD1                       . INSERT IT     @^@@@P          F$SKIP    1   TS
)@@G@@@G@@@O          F$DECV    UX(PIOUDA),A3     . INSERT THE USER DRUM ADDRETT
)@@G@@SS    @C@@@O          J         EDFIN             . DONE    @[@@@O.     TU
)@@G@@@[@@@O.     @[@@@OEDPAGE@D@@@O          F$MSG     ('PAGE & &, FILE: &  STV
)@@G@@ECTOR: &')  @F@@@O          F$OCTF    6,REGA1           . INSERT THE PAGTW
)@@G@@E ADDRESS   @#@@@O          F$MSGR  @G@@@O          F$FD1     0,A2      TX
)@@G@@        . INSERT TYPE OF PAGE OPERATION   @E@@@O          LA        A3,RTY
)@@G@@EGA1          . GET THE PAGE LINK   @E@@@O          LA        A2,PAGIOL,TZ
)@@G@@A3      . GET THE IO LINK     @F@@@O          JNZ       A2,EDPAGE01     UA
)@@G@@  . SKIP IF THERE'S AN IO LINK@A@P@O          F$FD4     (', NO FILE')   UB
)@@G@@@A@@@P          F$MSG     (', NO FILE&'L) @C@@@O          J         EDFIUC
)@@G@@N             . JOIN    @]@@@OEDPAGE01    @#@@@O          F$MSGR  @E@@@OUD
)@@G@@          F$FD2     UX(PIOFN),A2      . INSERT THE FILENAME @#@@@O      UE
)@@G@@    F$MSGR  @E@@@O          F$DECV    PAGDA,A3          . GET THE PAGE AUF
)@@G@@DDRESS@ @P@O          J         EDFIN     @[@@@PEDFIN @F@@@P          F$UG
)@@G@@PRT     0,1               . SKIP A LINE AND PRINT     @E@@@P          F$UH
)@@G@@UNLOCK                    . LET EVERYBODY EDIT  @E@@@P          LX      UI
)@@G@@  X11,TRAX11        . RESTORE RETURN POINT@C@@@P          J         0,X1UJ
)@@G@@1             . BYE     @[@P@O.     @[@@@O/.    @A@@@O. PIO$TRACES - TRAUK
)@@G@@CE SUMMARY ROUTINE@[@@@O.     @ @@@O.         LA,U      A0,PIOPKT @A@@@OUL
)@@G@@.         LMJ       X11,PIO$TRACES  @[@@@O.     @#@@@P          IBANK   UM
)@@G@@@]@@@OPIO$TRACES* @F@P@O          JEZ       PIOSAL 0,X11      . RETURN IUN
)@@G@@F NO STATISTICS   @F@@@O          LOCK      PIO$STATQ         . LOCK THEUO
)@@G@@ STATISTICS AREA  @E@P@O          SLJ       STATSAVE          . SAVE USEUP
)@@G@@D REGISTERS @E@@@P          SLJ       PIO$SAVE          . SAVE USED REGIUQ
)@@G@@STERS @[@@@P.     @E@@@P. FIRST TELL THE USER HE'S CLOSING THE FILE FOR UR
)@@G@@PAGED I/O   @[@@@P.     @#@@@P          F$LOCK  @^@@@P          F$DT    US
)@@G@@  0   @A@@@P          LA        A2,('CLOSED')   @B@@@P          SLJ     UT
)@@G@@  SIGNONOFF         .   @#@@@P          F$UNLOCK@[@@@P.     @F@@@P. NOW UU
)@@G@@DECREMENT THE IO PACKET COUNT; DON'T PRINT THE SUMMARY UNTIL@A@@@P. THE UV
)@@G@@IO PACKET COUNT GOES TO ZERO. @[@@@P.     @G@@@P          LA        A1,SUW
)@@G@@TATLINK       . GET THE LINK TO THE STAT AREA   @F@@@P          JZ      UX
)@@G@@  A1,STS070         . QUIT NOW IF NO STAT AREA  @E@@@P          LA      UY
)@@G@@  A2,STNIOP,A1      . GET # OF IO PACKETS @E@@@P          JZ        A2,SUZ
)@@G@@TS020         . SKIP IF ALREADY ZERO@D@@@P          AN,U      A2,1      VA
)@@G@@        . DECREMENT IT  @D@@@P          SA        A2,STNIOP,A1      . POVB
)@@G@@ST NEW VALUE@F@@@P          JNZ       A2,STS070         . QUIT IF PACKETVC
)@@G@@S STILL OPEN@[@@@PSTS020@G@@@P          SZ        STINFL,A1         . CLVD
)@@G@@EAR THE INITIALIZATION FLAG   @E@@@S          LA        A3,REGA0        VE
)@@G@@  . GET THE PACKET LINK @F@@@S          LA        A2,UX(PIOTRA),A3  . GEVF
)@@G@@T THE IO TRACE FLAG     @G@@@S          JNB       A2,STS070         . IFVG
)@@G@@ NO SUMMARY BIT, DON'T PRINT  @[@@@O.     @D@@@O. NOW COMPUTE VARIOUS ITVH
)@@G@@EMS BEFORE PRINTING ANYTHING  @[@@@O.     @F@P@O          LA        A1,SVI
)@@G@@TATLINK       . GET THE STAT AREA LINK    @F@@@O          LA        A2,UVJ
)@@G@@READ,A1       . GET THE USER READ COUNT   @E@@@O          AA        A2,UVK
)@@G@@WRITE,A1      . ADD USER WRITE COUNT@D@@@O          SA        A2,UTOTAL VL
)@@G@@        . SAVE THE TOTAL@F@@@O          LA        A2,PREAD,A1       . GEVM
)@@G@@T THE PAGE READ COUNT   @E@@@O          AA        A2,PWRITE,A1      . ADVN
)@@G@@D PAGE WRITE COUNT@D@@@O          SA        A2,PTOTAL         . SAVE THEVO
)@@G@@ TOTAL@[@@@O.     @A@@@O. COMPUTE THE HIT RATE AS A REAL #  @C@@@O. THISVP
)@@G@@ IS COMPUTE BY  PAGEH/(PAGEH+PAGEF)*100   @[@@@O.     @G@@@O          LAVQ
)@@G@@,U      A2,128+27         . GET FLOATING POINT PRE-BIAS     @D@@@O      VR
)@@G@@    LA        A4,PAGEH,A1       . GET PAGE HITS @F@@@O          AA      VS
)@@G@@  A4,PAGEF,A1       . GET TOTAL PAGE ACCESSES   @E@@@O          LCF     VT
)@@G@@  A2,A4             . CONVERT TO REAL     @B@@@O          SA        A3,AVU
)@@G@@4             .   @F@@@O          LCF       A2,PAGEH,A1       . CONVERT VV
)@@G@@PAGE HITS TO REAL @E@@@O          FD        A3,A4             . =PAGEH/(VW
)@@G@@PAGEH+PAGEF)@ @@@O          FM        A3,(100.0)@C@@@O          SA      VX
)@@G@@  A3,HITRATE        . SAVE IT @[@@@O.     @A@@@O. COMPUTE THE I/O REDUCTVY
)@@G@@ION RATE    @C@P@O. THIS IS COMPUTED AS  1-((PTOTAL-RBW)/UTOTAL)  @B@@@PVZ
)@@G@@. THIS IS COMPUTED AS  1-(PTOTAL/UTOTAL)  @C@@@O. A NEGATIVE RESULT INDIWA
)@@G@@CATES AN INCREASE IN I/O@[@@@O.     @ @@@O          LA        A4,PTOTAL WB
)@@G@@@G@P@O          AN        A4,PRBW,A1        . SUBTRACT READ BEFORE WRITEWC
)@@G@@S     @ @@@O          LCF       A2,A4     @ @@@O          SA        A3,AWD
)@@G@@4     @G@@@O          LCF       A2,UTOTAL         . CONVERT TOTAL # OF UWE
)@@G@@SER REQUESTS@D@@@O          FD        A4,A3             . GET RATIO     WF
)@@G@@@ @@@O          LA        A3,(1.0)  @ @@@O          FAN       A3,A4     WG
)@@G@@@E@@@O          FM        A3,(100.0)        . COMPUTE A PERCENTAGE@F@@@OWH
)@@G@@          SA        A3,IOREDR         . SAVE AS REDUCTION RATE    @[@@@OWI
)@@G@@.     @#@@@O. NOW LET'S PRINT @[@@@O.     @F@@@P          F$LOCK        WJ
)@@G@@              . LOCK THE FDIT$ PACKAGE    @D@P@O          F$DT          WK
)@@G@@              . OPEN EDIT MODE@D@@@P          F$DT      0               WL
)@@G@@  . OPEN EDIT MODE@E@@@O          F$MSG     ('PAGED I/O STATISTICS FOR FWM
)@@G@@ILE &')     @F@@@O          LA        A3,REGA0          . GET OUR FILE PWN
)@@G@@OINTER AGAIN@E@@@O          F$FD2     UX(PIOFN),A3      . INSERT THE FILWO
)@@G@@ENAME @^@P@O          F$PRT     2   @^@@@P          F$PRT     0,2 @[@@@OWP
)@@G@@.     @G@@@O          SLJ       COUNTPAGES        . COUNT AND PRINT THE WQ
)@@G@@# OF PAGES  @[@@@O.     @E@@@O          F$MSG     ('USER READS: &  WRITEWR
)@@G@@S: &  TOTAL: &')  @F@@@O          LA        A3,STATLINK       . GET THE WS
)@@G@@STAT AREA LINK    @ @@@O          F$DECV    UREAD,A3  @#@@@O          F$WT
)@@G@@MSGR  @ @@@O          F$DECV    UWRITE,A3 @#@@@O          F$MSGR  @ @@@OWU
)@@G@@          F$DECV    UTOTAL    @#@P@O          F$PRT   @^@@@P          F$WV
)@@G@@PRT     0,1 @[@@@O.     @E@@@O          F$MSG     ('PAGE READS: &  WRITEWW
)@@G@@S: &  TOTAL: &')  @ @@@O          F$DECV    PREAD,A3  @#@@@O          F$WX
)@@G@@MSGR  @ @@@O          F$DECV    PWRITE,A3 @#@@@O          F$MSGR  @ @@@OWY
)@@G@@          F$DECV    PTOTAL    @#@P@O          F$PRT   @^@@@P          F$WZ
)@@G@@PRT     0,1 @[@@@O.     @F@@@O          F$MSG     ('PAGE HITS: &  FAULTSXA
)@@G@@: &  HIT RATE: &%&')    @ @@@O          F$DECV    PAGEH,A3  @#@@@O      XB
)@@G@@    F$MSGR  @ @@@O          F$DECV    PAGEF,A3  @#@@@O          F$MSGR  XC
)@@G@@@F@@@O          F$FLF1    1,HITRATE         . INSERT THE HITRATE: XX.X  XD
)@@G@@@#@@@O          F$MSGR  @#@P@O          F$PRT   @^@@@P          F$PRT   XE
)@@G@@  0,1 @[@@@O.     @D@@@O          F$MSG     ('PAGE READ BEFORE WRITES: &XF
)@@G@@')    @ @@@O          F$DECV    PRBW,A3   @#@P@O          F$PRT   @^@@@PXG
)@@G@@          F$PRT     0,1 @[@@@O.     @C@Q@O          F$MSG     ('I/O REDUXH
)@@G@@CTION RATE: &%&') @B@@@Q          F$MSG     ('I/O REDUCTION: &%&')@F@@@OXI
)@@G@@          F$FLF1    1,IOREDR          . INSERT IO REDUCTION RATE  @#@@@OXJ
)@@G@@          F$MSGR  @#@P@O          F$PRT   @^@@@P          F$PRT     0,1 XK
)@@G@@@[@@@O.     @D@@@O          LA        A5,UMINWC,A3      . GET MINIMUM WCXL
)@@G@@@F@@@O          JNE       A5,UMAXWC,A3 STS050 . SKIP IF VARRIABLE I/O   XM
)@@G@@@C@@@O          F$MSG     ('FIXED I/O REQUEST SIZE &')@ @@@O          SLXN
)@@G@@J       EDWORDS   @#@P@O          F$PRT   @^@@@P          F$PRT     0,1 XO
)@@G@@@ @@@O          J         STS060    @[@@@OSTS050@E@@@O          F$MSG   XP
)@@G@@  ('VARIABLE I/O: MIN: &  MAX: &  AVG: &')@ @@@O          SLJ       EDWOXQ
)@@G@@RDS   @#@@@O          F$MSGR  @A@@@O          LA        A5,UMAXWC,A3    XR
)@@G@@@ @@@O          SLJ       EDWORDS   @#@@@O          F$MSGR  @A@R@O      XS
)@@G@@    LA        A5,UAVGWC,A3    @E@@@R          LA        A4,UTOTWC,A3    XT
)@@G@@  . GET TOTAL WORD COUNT@B@@@R          DSL       A4,36             .   XU
)@@G@@@F@@@R          DI        A4,UTOTAL         . COMPUTE AVERAGE WORD COUNTXV
)@@G@@@E@@@R          LA        A5,A4             . GET WORD COUNT TO A5@ @@@OXW
)@@G@@          SLJ       EDWORDS   @#@P@O          F$PRT   @^@@@P          F$XX
)@@G@@PRT     0,1 @[@@@OSTS060@E@P@O          F$PRT                       . EXXY
)@@G@@TRA BLANK LINE    @E@@@P          F$PRT     0,1               . EXTRA BLXZ
)@@G@@ANK LINE    @F@@@P          F$UNLOCK                    . UNLOCK THE FDIYA
)@@G@@T$ PACKAGE  @[@@@PSTS070@F@P@O          SLJ       STATREST          . REYB
)@@G@@STORE USED REGISTERS    @F@@@P          SLJ       PIO$REST          . REYC
)@@G@@STORE USED REGISTERS    @ @@@O          UNLOCK    PIO$STATQ @C@@@O      YD
)@@G@@    J         0,X11             . RETURN  @[@P@O.     @[@@@P/.    @[@P@OYE
)@@G@@.     @A@@@O. PIO$TRACEI - INITIALIZE THE TRACE @[@@@O.     @#@@@O      YF
)@@G@@    IBANK   @^@P@OPIO$TRACEI SLJENTRY     @]@@@PPIO$TRACEI  @G@P@O      YG
)@@G@@    SLJ       STATSAVE          . SET UP FOR STATISTICS STUFF     @E@@@PYH
)@@G@@          SX        X11,TRAX11        . SAVE RETURN POINT   @F@@@P      YI
)@@G@@    F$LOCK                      . LOCK THE FDIT$ PACKAGE    @F@P@O      YJ
)@@G@@    F$DT                        . INITIALIZE THE BUFFER     @F@@@P      YK
)@@G@@    F$DT      0                 . INITIALIZE THE BUFFER     @A@@@P      YL
)@@G@@    LA        A2,('OPENED')   @ @@@P          SLJ       SIGNONOFF @C@P@OYM
)@@G@@          F$MSG     ('PIO$ INITIALIZED ON &')   @E@P@O          LA      YN
)@@G@@  A3,REGA0          . GET PACKET POINTER  @E@P@O          F$FD2     UX(PYO
)@@G@@IOFN),A3      . INSERT THE FILENAME @#@P@O          F$PRT   @G@P@O      YP
)@@G@@    SLJ       COUNTPAGES        . GO COUNT AND PRINT # OF PAGES   @E@P@OYQ
)@@G@@          F$PRT                       . EXTRA BLANK LINE    @E@@@P      YR
)@@G@@    F$UNLOCK                    . LET EVERYBODY EDIT  @D@P@O          SLYS
)@@G@@J       STATREST          . RESTORE REGS  @A@P@O          J         *PIOYT
)@@G@@$TRACEI     @ @@@P          LX        X11,TRAX11@ @@@P          J       YU
)@@G@@  0,X11     @[@@@P.     @[@@@P.     @D@@@P. SUBROUTINE TO SIGN ON OR OFFYV
)@@G@@ ON THE PAGED IO TRACE  @[@@@P.     @A@@@P.         LA        A2,('OPEN'YW
)@@G@@)     @ @@@P.         SLJ       SIGNONOFF @[@@@P.     @#@@@PSIGNONOFF SLYX
)@@G@@JENTRY@D@@@P          F$MSG     ('PIO$ PACKET & & ON FILE &')     @F@@@PYY
)@@G@@          LA        A3,REGA0          . GET THE PACKET ADDRESS    @F@@@PYZ
)@@G@@          F$OCTF    6,UX(PIOPKT),A3,U . INSERT THE PACKET ADDRESS @D@@@PZA
)@@G@@          F$MSGR                      . MORE MESSAGE  @F@@@P          F$ZB
)@@G@@FD1     A2                . INSERT THE OPEN OR CLOSED @#@@@P          F$ZC
)@@G@@MSGR  @E@@@P          F$FD2     UX(PIOFN),A3      . INSERT THE FILENAME ZD
)@@G@@@^@@@P          F$PRT     0,1 @C@@@P          J         *SIGNONOFF      ZE
)@@G@@  . RETURN  @[@@@O/.    @F@@@O. SUBROUTINE TO COUNT AND PRINT THE # AND ZF
)@@G@@SIZE OF AVAILABLE PAGES @[@@@O.     @^@@@OCOUNTPAGES SLJENTRY     @F@@@OZG
)@@G@@          LA        A0,REGA0          . GET LINK TO THE PACKET    @G@@@OZH
)@@G@@          LX        X11,PIOPAL        . GET THE LINK TO THE PAGING AREA ZI
)@@G@@@F@P@O          LOCK      UX(PASEMA,X11)    . LOCK THE PAGE SEMAPHORE   ZJ
)@@G@@@D@@@O          LA,U      A2,0              . COUNT PAGES   @D@@@O      ZK
)@@G@@    LA        A1,UX(PAFPL),X11  . GET FIRST PAGE@]@@@OCOUNT10     @F@@@OZL
)@@G@@          JZ        A1,COUNT20         . SKIP IF NO MORE PAGES    @E@@@OZM
)@@G@@          AA,U      A2,1              . COUNT THIS PAGE     @E@@@O      ZN
)@@G@@    LA        A1,PAGNPL,A1      . GET THE NEXT PAGE   @D@@@O          J ZO
)@@G@@        COUNT10            . TRY AGAIN    @]@@@OCOUNT20     @F@P@O      ZP
)@@G@@    UNLOCK    UX(PASEMA,X11)    . DONE FUTZING WITH PAGES   @E@@@O      ZQ
)@@G@@    SA        A2,PAGECOUNT      . SAVE THE PAGE COUNT @E@@@O          LAZR
)@@G@@        A1,UX(PAPS),X11   . GET THE PAGE SIZE   @D@@@O          SA      ZS
)@@G@@  A1,PAGESIZE       . SAVE IT ALSO  @A@P@O          F$MSG     ('& PAGES ZT
)@@G@@OF &')@A@@@P          F$MSG     ('& PAGE& OF &')@ @@@O          F$DECV  ZU
)@@G@@  PAGECOUNT @#@@@O          F$MSGR  @F@@@P          LA        A0,PAGECOUZV
)@@G@@NT      . GET THE PAGE COUNT AGAIN  @E@@@P          JG,U      A0,2 COUNTZW
)@@G@@30      . SKIP IF ONLY 1 PAGE @E@@@P          F$CHAR    'S'             ZX
)@@G@@  . INSERT A PLURAL     @]@@@PCOUNT30     @#@@@P          F$MSGR  @A@@@OZY
)@@G@@          LA        A5,PAGESIZE     @F@@@O          SLJ       EDWORDS   ZZ
)@@G@@        . EDIT # WORDS (# SECTORS)  @#@P@O          F$PRT   @^@@@P      AA
)@@G@@    F$PRT     0,1 @E@@@O          J         *COUNTPAGES       . RETURN TAB
)@@G@@O CALLER    @[@@@O.     @[@@@O.     @[@@@O.     @C@@@O. EDWORDS - ROUTINAC
)@@G@@E TO EDIT # WORDS (# SECTORS) @[@@@O.     @D@@@OEDWORDS   SLJENTRY      AD
)@@G@@              . CALL WITH SLJ @^@@@O          F$DECV    A5  @ @P@O      AE
)@@G@@    F$FD3     (' WORDS')@B@@@P          F$COPY    6,(' WORDS'L)     .   AF
)@@G@@@C@@@O          AA,U      A5,27             . ROUND UP@^@@@O          LAAG
)@@G@@,U      A4,0@E@@@O          DI,U      A4,28             . COMPUTE # SECTAH
)@@G@@ORS   @G@@@O          JG,U      A4,2 EDWORDS      . SKIP IF NOT MORE THAAI
)@@G@@N ONE SECTOR@ @P@O          F$FD3     (' (')    @^@@@P          F$SKIP  AJ
)@@G@@  1   @^@@@P          F$CHAR    '(' @^@@@O          F$DECV    A4  @A@P@OAK
)@@G@@          F$FD4     (' SECTORS)')   @B@@@P          F$COPY    9,(' SECTOAL
)@@G@@RS)'L)  .   @E@@@O          J         EDWORDS           . RETURN TO CALLAM
)@@G@@ER    @[@@@P.     @#@@@P          END     ___@@@RDS   @#@@@O          F$AN
)@@G@@======@@^@@ @@@@@@@@@@@@@@ @!S@@@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AO
)@@G@@@@@@@@@X(#VN031383@]@@@@@@@@[&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[U@@A@@A@[FAP
)@@G@@@#%@@@@@#@@^@@@@4/@@@@@@@^@@@]@^@A@[@ @@@]K^@[@)ADCA@0A@0A@0A@2B[AA@0A@0AQ
)@@G@@A@0AC4A[#A@0A@0A@0AC0ALAA@0A@0A@0A@2A[#A@0A@0A@0A@0A[;A@0A@0A@0A@0A[;A@0AR
)@@G@@A@0A@0A@0A[;A@0A@0A@0A@0A[;A@0A@0A@0A@0A[;A@0A@0@*/@C@)B^@0/@@@___@@E^@@AS
)@@G@@@@'^@W@@H^[-@@M^]J@@E^]:@@O^#,@@^^^I)@M^@E)@F^[Q)@-^[,)@E^]-)@9^]5)@G^^]AT
)@@G@@)#,^^M@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___AU
)@@G@@*@@^@@/KF@@[ @@^@[[@@^@@ @@^@[C8W@@@KCK^@@H8)@@V&;K@CWC@@@@H'=@@@H(@@^@[AV
)@@G@@[@@^@[G8W@@@ @H@@@>@@@F./K@@CT>@@@F"/KF@@[C8H@@@?8I@@@/K@@CDC@@@F/C8K@@#AW
)@@G@@/KF@@@C@@@F1C8K@@[/KF@@@[@@^@[C@@@F7C8K@@]/KF@@@L8@@@[C@)^@@G8)@@[*@I@@@AX
)@@G@@?CY@@@/K@@C*G),@@@/K@@C+%CI@@@/KF@@@C)"@@@H80@@[T80@@AG="@@@9?I@@[?80@@BAY
)@@G@@C@K@F_/KF@@[;CK@@=;^@@@%(@@@@HG8K@@[[@K@[#;C@@@Y[@@@[[C^@^@@G8@@@[C9K@@[AZ
)@@G@@ @@^@JN8)@@@C@W@@@/@K@D$;CK@@Y*@@@@H?@K@[#/K@@DR%@K@[#/K@@D$%1W@@@/K@@D$BA
)@@G@@C?W@@@!8K@@A/K@@DU%(K^@J @@^@I[(K^@J9??@@[C-G@@@:9@@@[C@0@F_')H@ETH9@@@[BB
)@@G@@T9@@@AG>G@@@')H@E-G)G@@@G8@@@[/K@@C":9K@@[/K@@DZC*?@@@:8)@@.N8)@@[%[K@[[BC
)@@G@@/K@@DR/K@@DI%@)@F_[5@^@I:@)@F_[-K^@I/K@@DR(@@@[]:(K^@J/K@@D?[(K^@J @@^@IBD
)@@G@@:[K@[[/K@@D6G9K@@[(@G@@@/K@@D3!4W@@@/K@@C. @@^@I @@^@J/KF@@@:(K^@J *@^@JBE
)@@G@@9?K^@I98V@@@C8@@@-[=@^@J(?@^@J/KF@@[C@@^@VD8)@@@C80@@@C!@^@J8^@@ED1@@@@IBF
)@@G@@!8)@[@C80@@E[))^@J[=0^@J/KF@@[C8K@@@;=@@@A?8K@@'?8K@@0/K@@EO(@@@@JC80@[@BG
)@@G@@H8K@@0T8)@@EG8!@@@/K@@E]/^0@E %8K@@+:8K@@-C8.@@@/@0@E /K@@E]9*)^@K9*)^@MBH
)@@G@@[@)^@O[@)^@P[@)^@Q9*)^@R9*)^@T[@)^@V/K@@D+[1@^@I[!@^@I[(@^@I[>@^@I[5@^@JBI
)@@G@@[1@^@J[!@^@JC80@@F+8K@@_:8)@@ ;^@@@A8#0@E:9*@^@#C@@@G@C@K@G[C8)@@BC@0@F_BJ
)@@G@@[@"^@A8#)@E4N4K^@I9!@^@K/\)@F+C9K@@*(4@^@I*)@^@I')H)@@N0K^@I9!@^@M*@@@[[BK
)@@G@@/K@@F#C[@@G]N8K@@^/\)@F+N?K^@I(@@@[[/K@@FHC9K@@(')H)@@C[@^@O/\)@F+C9K@@)BL
)@@G@@')H)@@(*@^@I*=@^@I/K@@FNC@@@G#'=@@@J/KF@@@C9K@@/')H)@@N*K^@IC[@^@P/\)@F+BM
)@@G@@N=K^@I(@@@[[/K@@FKC9K@@/')H)@@C[@^@Q/\)@F+/K@@FK;>@@@A')H)@@8KK@F)/KI@@@BN
)@@G@@[5W@@@[1W@@@[!W@@@[(W@@@[>W@@@/\0@F%[-W)@@Q;K@F=/KJ@@@PROCESSOR CALL ERRBO
)@@G@@OR    @[^@F!ABNORMAL RETURN FROM READ$    @[ @F2TOO MANY SPECIFICATIONS BP
)@@G@@@[^@F8]@@@@@[@@@@@      @@[^@A@@[@F=TPF$  @@G^@]?@@@[@?@@@[V?@@@[X?@@@@<BQ
)@@G@@?@@@[Y?@@@@)?@@@[[?@@@[]?@@@[#?@@@[^?@@@[ ?@@@[A?@@@[B?@@@[C?@@@[D?@@@[EBR
)@@G@@?@@@[F?@@@[G?@@@[H?@@@[I?@@@[J?@@@[K?@@@[L?@@@[M?@@@[N?@@@[O?@@@[P?@@@[QBS
)@@G@@?@@@[R?@@@[S?@@@[T?@@@[U @@@@(!@@@@!"@@@@:#@@@@/$@@@@.%@@@@"&@@@@&'@@@@=BT
)@@G@@(@@@@%)@@@@**@@@@>+@@@@',@@@@_-@@@@-.@@@@?/@@@[W0@@@@01@@@@12@@@@23@@@@3BU
)@@G@@4@@@@45@@@@56@@@@67@@@@78@@@@89@@@@9:@@@@$;@@@@;<@@@@\=@@@@,>@@@@+?@@@[ZBV
)@@G@@@@@@@@A@@@@@B@@@@@C@@@@@D@@@@@E@@@@@F@@@@@G@@@@@H@@@@@I@@@@@J@@@@@K@@@@@BW
)@@G@@L@@@@@M@@@@@N@@@@@O@@@@@P@@@@@Q@@@@@R@@@@@S@@@@@T@@@@@U@@@@@V@@@@@W@@@@@BX
)@@G@@X@@@@@Y@@@@@Z@@@@@[@@@@@\@@@@@]@@@@@^@@@@@_@@@@@@@@@@@A@@@@@B@@@@@C@@@@@BY
)@@G@@D@@@@@E@@@@@F@@@@@G@@@@@H@@@@@I@@@@@J@@@@@K@@@@@L@@@@@M@@@@@N@@@@@O@@@@@BZ
)@@G@@P@@@@@Q@@@@@R@@@@@S@@@@@T@@@@@U@@@@@V@@@@@W@@@@@X@@@@@Y@@@@@Z@@@@@[@@@@@CA
)@@G@@\@@@@@]@@@@@^@@@@@_@@@@@C@)@@HC@1@@F*^[@@]/\_@@^E/,@@@[G[@@[AE1@@[/C@@IICB
)@@G@@/,0@K'9?@@@]EG1@@[N@K@@J/K@@IM')])@@8KK@IL1G[@@[/K@@IR[@@@@]Q@0@@HRE1@@[CC
)@@G@@/KF@@@C8#@@[C*1@@]C8M@@@:^Z@WXH8@@@[H^[@@@/KF@@@N8K@@@/GK@I&N?L@@@/^K@I&CD
)@@G@@P^1@@@N8N@@[/K@@W$^@-@@[C=1@@]')J@JM#@@@[]CCL@@#C8\@VX/C@@I0C8\@JOH8K@@[CE
)@@G@@C?[@@]'KI@@@&FY@@@/K@@I7')G)@@%@)@[[/K@@I48K)@I4N@-@@[/C@@I;G8K@@[[CL@@#CF
)@@G@@/GK@I"'OJ@VX/CK@J@'OJ@JO[?[@@]/KF@@@/:K@JCC)!@@@C4!@@[C0!@@[C?!@@[C*!@@[CG
)@@G@@C=!@@[Q;@@JB/K@@I5/:K@JJCO!@@@CW!@@[CK!@@[CS!@@[Q;@@JI/K@@I5N0L@@@NOL@@ACH
)@@G@@__"@J]__"@JFC8.@@@T8K@@#;GH@@@/K@@J+C80@@[;G@@@#/@@@J+;G@@@#G80@@[/^@@JXCI
)@@G@@C8)@@0')])@@/K@@J$C8)@@@;=K@@#G8)@@0')])@@8#0@J</KF@@@C@1@@F*^[@@]/\_@@^CJ
)@@G@@E/,@@@/K@@J\C8)@@0;*)@@M/\)@KP(C[@@[[C-@@[Q3:@WR0@@@@F')])@@;C)@@MR';@@@CK
)@@G@@/K@@J"C8K@@@/\)@KP(C[@@[[C-@@[C):@W)/K@@K@')])@@8#K@J_C0:@WR0@@@@F')])@@CL
)@@G@@G4J@WNC?\@WPS@J@K!9)@@WNRE1@@[;?I@@@H8X@@@/K@@KN;=@@@[9?)@@G;=@@@]9)@@@ICM
)@@G@@K8K@@0')])@@H8X@@@8KK@KG/KF@@@AE1@@[N8K@@ER]0@@GE@@@@GC@0@K85@J)K</SJ)@@CN
)@@G@@H8Z@@[0@@@@FH8K@@[Q%1@@]N/Z@@[/KI@@@@@@@@E@@@@[=@@@@J*@@@]WK@@@SU)@@#4D@CO
)@@G@@@@&DU@@ .Y^@@;&?*@DO]"K@Z_____T&T&T&OY, B:KS=7M/UH,F:BO"FQC8K1\Y)!U5_EU\CP
)@@G@@PYS;+GLF)\*DVZH_T5P_R_-Z@@[__"C8@@@@C8N@@@C*1@@]H^L@@@T*Z@WVG8M@@@H^Z@WXCQ
)@@G@@G@@@@H:@@@@H/KF@@@/C@@L C8@@@@"K@@@GC*1@@]W*J@WVG^[@@@Q8/@@@G^Z@WXQ8!@@@CR
)@@G@@/KF@@@&'0@JU/K@@X(&'0@JQ/K@@X(&'0@J9/K@@X(&'0@J'/K@@X(&'0@J(/K@@X(&'0@J,CS
)@@G@@/K@@X(/\0@NE/\0@NJD4[@@]]*[@@AG?[@@B0@@@@GC8@@@@/\K@MF/,0@M/QE1@@[/K@@M)CT
)@@G@@/\0@NE/\0@NJCG[@@B??[@@B?/@@@@/K@@LV?8@@@[C8@@@@[*[@@AH?[@@B/\K@MF/,0@M/CU
)@@G@@C01@@BCCL@@[/K@@MU/\0@NE/\0@NJCG[@@B?8@@@[C4[@@][*[@@AC8@@@@/\K@MLQE1@@[CV
)@@G@@CG[@@B!8@@@[/K@@M/K?[@@B/CK@M#C?[@@BC8K@@@#?[@@B[GL@@B"K@@WN/,0@M.9?[@@CCW
)@@G@@NGL@@BRE1@@[/K@@KF#?[@@BC8@@@#1@@@@FG8@@@[/\0@M2G8@@@[D*-@@AH?-@@BH8?@@[CX
)@@G@@H?-@@AK0-@@B[0[@@B/C0@MUC80@@@ 0[@@BC*-@@]C),@W)/K@@MY')])@@8#0@MX/KH@@@CY
)@@G@@/\0@M2')])@@CG[@@BH*[@@A*4[@@BC8@@@@C*L@@]C0!@WR1@@@@GC0!@WT')])@@E/G@@@CZ
)@@G@@(0[@@B/K@@J9C8K@@]1@@@@FC8K@@#/K@@J'C*-@@]1@@@@FG8)@@]')I@M8/@\@@[/KJ@@@DA
)@@G@@C0-@@ACK-@@EC4-@@ACW-@@E9?[@@CC*-@@]C0,@WR*?[@@A')])@@AI1@@[N*L@@A/,0@KFDB
)@@G@@C*-@@]N?L@@BC*,@WP')])@@QI1@@[/K@@KF&"0__"?8@[@@"8K@@HG80@@[/K@@NKR';@@@DC
)@@G@@[C[@@BAE1@@[;C@@@GQ'_@@@/@@@NV0@@@@F;GK@@=D@@@@G 4[@@BG8@@K."4@@@H @[@@CDD
)@@G@@C8@@@[ G[@@B @[@@D")L@@C ?[@@A98K@OJ0@@@@H[?[@@A94)@@HC8@@@@!@)@O</K@@N%DE
)@@G@@C/@_;G"*)@O=N8K@@DC@K@O&/K@@N,9?-@@C4@!)OJ/K@@N;9*-@@C9=!@OL/G)@N!C8!@@@DF
)@@G@@;C)@@[C80@@[;*"@@@G8J@@@9?-@@C"?!@OL/K@@N,?@)@O$/K@@O@"?)@OLG8@@@[/K@@N;DG
)@@G@@(0[@@]/K@@OD0@@@@F"))@O*"))@O%?@)@O$/K@@OD"?)@OLG8@@@[[G[@@B"0@@@IH8@@J4DH
)@@G@@;?W@@@9*L@@C/KF@@@[4[@@B/KF@@@K^*@@@@@@@@@KB2@@@@@@@@@KI$^@@@@@@@@KV\:0)DI
)@@G@@@@@@@@K6<-\D\0K@@@L:$WQ!%]!0!TNP0$)ZMZ_J(!Q%=;(B2S#(<HXN%$;:"9797*J.3G3HDJ
)@@G@@Z/8.<99QI-&I__.@@MK[@@@@J*5:"O5YP'K?JE9(QO\?LH8Q&'0@LT/K@@X(&'0@LU/K@@X(DK
)@@G@@&'0@L=/K@@X(&'0@L>/K@@X(&'0@L3/K@@X(&'0@L4/K@@X(/K@@PI/K@@P\/K@@P0/K@@P1DL
)@@G@@C/,@@@/G\@@@[@1@@GC=1@@]:*1@@]/K@@PD!8)@[@0G[@@E/K@@PBC80@@]H8)@[@IG-@@EDM
)@@G@@')J@PFC@1@@G/KJ@@@CO,@@@C4,@@@C0,@@@N8)@@@[^1@@CAE1@@D @[@@BC@0@@I;C0@@MDN
)@@G@@Q'0@@@[?1@@FAC-@@CC=1@@]A21@@FQ^-@@CQ'0@P(/?+@@@/?)@PXA^-@@CQC-@@CC80@O"DO
)@@G@@*4[@@FC@1@@H/\_@@@C*1@@]8K)@P>%)\@W)AC1@@B')])@@/K@@PQQE1@@DD@K@[]QC-@@CDP
)@@G@@CC[@@B/KF@@@@@@@@@/K@@Q#/K@@P//K@@Q,@@@@@@C80@P,[C/@@ C80@@[[*/@@][=/@@]DQ
)@@G@@/K@@W+C80@P,[C/@@ /K@@W1(S@@WZ/K@@Q]B4@@@HG8K@@CB0H@@@[)L@@]/KI@@@[@)@@JDR
)@@G@@1@@@@F/K@@QDN8K@@C%8K@@MR';@@@9?H@QO/K@@QJ;=@@@D+8K@B_/@)@QK')])@@8KK@QFDS
)@@G@@C8)@[20@@@@F')])@@C@)@@JC80@@[/KI@@@DL-H15GD2JC@C1>GL2I(-IL9D(-IL<H@@@@@DT
)@@G@@CD0IL(H)@@@@D(-JC@@@@@@@DL5H1>@@@@@@DL5H-9@@@@@@CD5G95IT4@@@ET>I[4G(!GL>DU
)@@G@@D9<I-\GL>IK@D1\I1>H(+G(2C->GT>H(+G(2C@@@[[&'0@@@?8@@@^/K@@Q5C8@@@C:8)@@#DV
)@@G@@&'0__"N8W@@@;*)@@[9?I@R]/K@@Q.;=@@@D+8K@[_/@)@Q"')])@@8KK@Q9C8)@[90@@@@FDW
)@@G@@')])@@/KJ@@@ET5H1=GD9@@@D(\H1=GD9@@@E-5G(3G--JC@E9>G-,G(3G--E-*I(2IT=GD9DX
)@@G@@C12HD=GD9@@@ET-I-5IL=GD9&'0@L#/K@@X(&'0@K'/K@@X(&'0@K9/K@@X&(*[@@]/K@@R-DY
)@@G@@/\)@R2'=@@@8/K@@I)(*[@@]/K@@R-C8)@@H')])@@C8)@@E')])@@/\)@R2'=@@@I/K@@I)DZ
)@@G@@&';@@@/\)@R1(*[@@]/K@@R%'=@@[)/K@@R:'=@@@J[@[@@[/,0@I)C@[@@[C@K@@F;CK@@MEA
)@@G@@/KH@@@C8@@@@;*@@@AG?[@@@;*@@@MG^[@@@/KI@@@;/@^@Y9*K^@)D8G@@]C8)^@WCC,@@[EB
)@@G@@:8)^@W/K@@SOKGI@@@/GK@R;?8K@@#/K@@SH[GY@@@G8Y@@@[C!@@@[GH@@@L/W@@@ CI@@@EC
)@@G@@AA.@@[C8H@@]9?K^@) 4@^@Y/KF@@@CCI@@[C^Y@@[[CH@@[[^W@@[DGI@@@C8Y@@@/K@@S ED
)@@G@@[G@^@ZE@@@@G?8@@K@C8@@K@D8?@@@&;)@@@KC@^@Z;^@@@=&;@K@@'=@@@<[@?@@@G8@@@[EE
)@@G@@[C@^@ZH8H@@[[GW@@@C8K^@W[^W@@[CCK^@X[CW@@[[^H@@[ CG@@@[C@^@XCG@^@Z/K@@R'EF
)@@G@@H8@@@]&';@@@;/@^@Y9*K^@)1GG@@@'))@THCC?@@@/^)@S;C8)^@W[^?@@[CC)^@X[C?@@[EG
)@@G@@[C@^@X[^I@@[C8?@@@LGG@@@*CH@@@')0@TH0GH@@@/K@@T QE.@@[C^H@@[AE/@@[[^F@@[EH
)@@G@@GGX@@@[C!@@@H8Y@@@[GY@@@9?K^@) 4@^@YC@@@@F;C@@@M/KG@@@/\)@TIH8)@@[CC,@@@EI
)@@G@@;*)@@W;C)@@)&;I@@@%8)@@]:8)@@#/K@@T-'^@^[GA@^^@*Q;F@@@'^@^[GA@#^@>;C@@@MEJ
)@@G@@C@G^[A'=@@@IC@@^[O'=@@@I'=@@@QA]0^[FRE0^[F/K@@TQ9*@^[K9*)^[M^@K^[I^@)^[JEK
)@@G@@CC)O[G+8)@@_C8)@@@G^)O[G&;)__"&;0__"N8)__8N4KO[G/K@@T4<8@@@0')J)T.;C@@@#EL
)@@G@@8KK@T19?@^[KC^)^[GG8)@@[[^)^[G9?)^[MN@K^[IN@)^[J/K@O[G/\0@U#[0Y@@@[?Y@@@EM
)@@G@@[*Y@@@[=Y@@@[)Y@@@[4Y)@@C8Z@@@Q;0@@ /KH@@@&"0__"[@-@@[/K@@UHR';@@@/K@@UHEN
)@@G@@&'0@@[C=1@@]C8:@@@N=Z@WV:@)@@FN*Z@WVC@)@WZ/\)@V6/K@@UVCO\@WP;^I@@@+OZ@WQEO
)@@G@@/@)@UV%)\@W)')])@@8KK@UP1@@@@F/K@@U<C=-@@]N*Y@WVC@[@@[R';@@@/K@@UO/KF@@@EP
)@@G@@ @@@@I[C-@@[&"0__" G[@@[/K@@U2AI1@@[ C[@@[&"0__"/K@@U2R';@@@ G[@@[/K@@U2EQ
)@@G@@R';@@@AI1@@[/CK@U6E@K@@HC=1@@]T*Z@WVN8X@@@/\)@V0/K@@VH')G)@@1@@@@F/K@@U"ER
)@@G@@:C-@@[/K@@VH')])@@C*1@@]:)\@W)(G[@@[/K@@VHC=1@@]/K@@VG')G)@@:)\@W)/K@@VGES
)@@G@@0@@@@F/@)@VF')])@@/K@@VH8KK@V 8KK@U9/KF@@@CO!)@@/\G@@@CW!@@@CK!@@@CS!@@@ET
)@@G@@/\@@VJC)!)@@/\G@@@C4!@@@C0!@@@C?!@@@C*!@@@C=!@@@/\@@VP@@[@VR@@[@VL')])@@EU
)@@G@@')G)@@')J@V,/K@@VZ[CL@@#'OJ@VX[?[@@]/KF@@@CCL@@#C?[@@]/\)@V2/K@@V?/\)@V0EV
)@@G@@N8K@J*/K@@V)%0-@@@%O-@@AC8W@@@;C@@@MC=1@@]'KJ@VXC8,@@@'KK@WZ:*1@@]/K@@V'EW
)@@G@@ ?[@@F/\1K@F/KI@@@&'0@UE/K@@X(&'0@UG/K@@X(&'0@UB/K@@X(&'0@U!/K@@X(&'0@U0EX
)@@G@@/K@@X(&'0@U=/K@@X(&'0@U>/K@@X(&'0@U(/K@@X(&'0@V$/K@@X(&'0@V:/K@@X(&'0@RQEY
)@@G@@/K@@X(&'0@R=/K@@X&@@@@@@@@@@__@/+.[]@\Z,@_[-W:B_[!S'@@[+P,[@[:M?@@[ IAG@EZ
)@@G@@[#F^C@@FC@X)@B^@XT@@[@@@      ^@)^@)A^W@@#A@?@@^A^/@@ Q8W@@@N?L@@@/\0@X FA
)@@G@@C*1@@]R^\@WXQ^1@@@C8J@W)C@0@@#O@)@WZ&;0@@[M#/)@@/KF@@@A^W@@#Q8W@@@/\0@X FB
)@@G@@/K@@W8/\0@W"C8[@@@Q^L@@#9?K@@]R@?@@^Q^/@@ [@W@@^[^?@@ /KF@@@[@[@@[C8@@@[FC
)@@G@@*)[@@]'=@@[\ )[@@]C@[@@[/KJ@@@(^[@@]/K@@XGCC-@@ /^)@XFC@-@@F[C-@@ /\,@@]FD
)@@G@@/KJ@@@N?L@@@/K@@W$C@)@@GC@1@@F*^[@@]/\_@@^E/,@@@')])@@/KF@@@[O<@@@O80@@[FE
)@@G@@/?+@@@[W<@@@[K<@@@[S<@@@/?)@XQ[)<@@@O80@@[/?+@@@[4<@@@[0<@@@[?<@@@[*<@@@FF
)@@G@@[=<@@@/?)@XXA]0^[QQ'0@X'/K@@X:A]0^[QQ'0@X99*@^[R9*)^[T9(@^[V^@K^[X^@)^[YFG
)@@G@@^@0^[ZA]0^[)C/@^[-/,0@W1R]0^[)CC0^[Q9?@^[RC@)^[T/KJ@@@C@@^[R[@@^[R/,0@W5FH
)@@G@@9?@^[R9?)^[T9!@^[VN@K^[XN@)^[YN@0^[ZR]0^[Q/KF@@@&'0@YG/K@@X(&'0@YJ/K@@X(FI
)@@G@@&'0@YH/K@@X(&'0@YK/K@@X(C@@^]JN8K@@[/K@@YLC@@^]JN8K@@@[^[@@@;C@@@M[?[@@@FJ
)@@G@@*@@@[[N?L@@@/,0@W$/K@@X9&'0@XJ/K@@X(&'0@XH/K@@X(&'0@YY/K@@X([0[@@@/K@@X9FK
)@@G@@&'0@Y+/K@@X([O[@@A/K@@X9&'0@Y&/K@@X(*8G@@@C8@@@[[*[@@]/K@@X9&'0@Y?/K@@X(FL
)@@G@@*8G@@@C8@@@[[=[@@]/K@@X9;/@^[P/KF@@@ 4@^[P*^@^[P'=@@[N/KF@@@/K@@Y9/K@@Z.FM
)@@G@@/K@@+QA]0^]K/,0@Y0C/@@@@/,0@Y%C/@@@@/,0@Y=/,0@Y^C@0^]+C/@@<+/,0@WHC8J@@@FN
)@@G@@C/K@@A/,0@LJ/,0@WFRE"@ZEC^,@ZE/KF@@@@ZK@<>@ZK@<%@Z<@<,@Z<@<\@Z<@<0@Z<@<1FO
)@@G@@C/I@@@/,0@WHCCJ@@C/,0@LL/,0@WF9?J@@@/,0@V.C/@@<2C/K@@^/,0@W[C@@@<3(?J@@AFP
)@@G@@C@@@<4/,0@V;C/@@@[/,0@RMC@J@@D/,0@LL/K@@Z7C/@@<5/,0@WHC@@^]<C/K@@A/,0@LJFQ
)@@G@@/,0@WFC@I@@@/,0@V;C@0^]<C^\@@]/^)@Z1C/@@<'/,0@WH/K@@Z7/,0@WF9?I@@@/,0@V.FR
)@@G@@/,0@WFC@J@@[/,0@LLC/@@@[C/K@@@/,0@WJ/,0@Y2R]0^]K/KF@@@;/@^]X'^@^]Z/,0@Y0FS
)@@G@@C/@@@@/,0@Y%C/@@@@/,0@Y=/,0@Y^C@)@</'^@^]R/,0@Y2C@K^]Y/@K@+LC^!@@E/@)@)JFT
)@@G@@H8)@@[[^!@@E/^)@+L CH@@EC@0^]+C0\@@A/))@+LC@!@@@G@!@@[[@)^]LC@!@@]G@!@@#FU
)@@G@@[@)^]MC8)@]VC[H@@^G[H@@ "O)@@K[@0@@K"O!@@^"G0@@K"C0@<.[@0^]NC[@^]M"O)@@KFV
)@@G@@[@0@@K"O)^]L"H@@@JC@0@<""^0@@K"C0@<.[@0^]O/,0@Y0C/@@@@/,0@Y%C/@@@@/,0@Y=FW
)@@G@@/,0@Y^C/@@<_/,0@WHC@0^]+9?J@@@/,0@V.C/@@@]C/K@@@/,0@WJ'^@^]TC/@@= /,0@WHFX
)@@G@@C@0^]YC@J@@@/,0@LL/,0@WFC@J@@[/,0@LL/,0@WFC@@^]L/,0@LLC/@@@[C/K@@@/,0@WJFY
)@@G@@C/@@=F/,0@WHC@J@@]/,0@LL/,0@WFC@J@@#/,0@LL/,0@WFC@@^]M/,0@LLC/@@@[C/K@@@FZ
)@@G@@/,0@WJC/@@=L/,0@WHC@J@@^/,0@LL/,0@WFC@J@@ /,0@LL/,0@WFC@K^]NC/@@@[/,0@O4GA
)@@G@@/,0@WFC/@@@[C/K@@@/,0@WJC/@@=S/,0@WHC@J@@D/,0@LLC/@@@[C/K@@@/,0@WJC/@@=XGB
)@@G@@/,0@WHC@K^]OC/@@@[/,0@O4/,0@WFC/@@@[C/K@@@/,0@WJC[Z@@B%[Z@@A/K@@-"C/@@=)GC
)@@G@@/,0@WH'^@^]VC/@@@[C/K@@@/,0@WJ/K@@+HC/@@==/,0@WH'^@^]V/,0@WFC[Z@@A'^@^]VGD
)@@G@@/,0@WFC[J@@C;H@@@=W[@^]LC[K@@K'^@^]VC/@@@[C/K@@@/,0@WJC/@@@[C/K@@@/,0@WJGE
)@@G@@/,0@Y2'^@^]: 4@^]X*^@^]X'=@@[N/KF@@@A]0^]K/,0@Y0C/@@@@/,0@Y%C/@@@@/,0@Y=GF
)@@G@@/,0@Y^C@)@=%'^@^]R/,0@Y2R]0^]K/KF@@@C/@@=:/,0@WHC@0^]+C8J@@@C/K@@A/,0@LJGG
)@@G@@/,0@WFC@@@@I/,0@V;/,0@WF9?J@@@/,0@V.C/@@@[C/K@@@/,0@WJ/K@O]RC@@^]+RA/@@BGH
)@@G@@C8)@@@C^V@@[/@K@+'G8)@@[C^X@@@/K@@+6[@)^]PCCV@@][@K^]QC/@@=0/,0@WHC@@^]PGI
)@@G@@/,0@LL/,0@WFC@@^]P?8@@@]/K@@<BC/@@@S/,0@YS/,0@WFC[K^]Q'^@^]VC/@@@[C/K@@@GJ
)@@G@@/,0@WJ/K@O]TC@@@@L/,0@LLC/@@=2C/K@@A/,0@W[G9K@@VC9@@@@W9@@@W?9@@@]/K@^]VGK
)@@G@@C/@@@[/,0@RMC/@@@(/,0@YSC@@@@K/,0@LLC/@@=3C/K@@D/,0@W[/K@^]VPIO$ PACKET GL
)@@G@@& &   USER READS & WORDS FROM &     USER WRITES & WORDS TO &@@READ@WRITEGM
)@@G@@@@@HIT@FAULT AT   WORD  SECTORPAGE & &, FILE: &  SECTOR: &  , NO FILE&  GN
)@@G@@CLOSEDK"K@@@KG@@@@PAGED I/O STATISTICS FOR FILE &     USER READS: &  WRIGO
)@@G@@TES: &  TOTAL: &  PAGE READS: &  WRITES: &  TOTAL: &  PAGE HITS: &  FAULGP
)@@G@@TS: &  HIT RATE: &%&    PAGE READ BEFORE WRITES: &    I/O REDUCTION: &%&GQ
)@@G@@FIXED I/O REQUEST SIZE &VARIABLE I/O: MIN: &  MAX: &  AVG: &OPENEDPIO$ PGR
)@@G@@ACKET & & ON FILE &     & PAGE& OF & WORDS SECTORS)   A])@@JQ'!@@@;/E@@@GS
)@@G@@CCU@@[(@@@@H[^%@@[*@@@@H[^!@@@[CY@@@ ^I@@@ @I@@][C%@@[ 4E@@@*^E@@@'=@@[OGT
)@@G@@R])@@J/KF@@@A])@@LQ'!@@@C@'@@@+@0@>4:[@@>3/K@@>0C[@@>3[[E@@@ @E@@[G8)@[\GU
)@@G@@;G)@@=W8)@[0T8)@[0[C%@@];G)@@=W8)@@W[^%@@]CC%@@]G8)@@#;CK@@MC@0@@HH80@@#GV
)@@G@@?C'@@]/K@@>0;G0@@=W@0@@IT@0@@IK8'@@#;*)@@MQ;%@@#[^%@@[C8K@@@[CY@@@ @I@@]GW
)@@G@@C8")@@:9I@@@/K@@>,[^\@@@C@K@@J/K@@>& ^J@@@[C'@@[C8U@@@Q])@@L/KF@@@@\@@@@GX
)@@G@@"__@@@CC!@@])8))@@[C.@@][CW@@BCC!@@@C^.@@@/@:@@@[^"@@@*@@@@J[C\@@@(@@@@JGY
)@@G@@[C%@@[C^%@@[[^!@@@[^U@@[ CH@@@[CY@@@/KF@@@;/E@@@CCW@@BCC!@@]+8)Z__[C.@@]GZ
)@@G@@ 4E@@@*^E@@@'=@@[O/KF@@@*=G@@I/K@@&R/SE@@@'=@@[MC8K@@[[=W@@I/KF@@@ 4E@@@HA
)@@G@@*^E@@@'=@@[O =G@@I/KF@@@AE/@@ICDG@@E;H@@@=W9@@@WK[G@@FC[G@@F =G@@I;/E@@@HB
)@@G@@C^U@@[/K@@&$C^X@@@/@K@$#C^!@@]/@)@&&9?,@@@9/?@@@/K@@&&,[H@@[/K@@&2/,0@>9HC
)@@G@@C@K@@J/K@@&$C@!@@[H8)@@[K^%@@],@)@@K/K@@&&0@H@@]/K@@&"C^!@@]C^,@@]%^?@@]HD
)@@G@@(?H@@]/K@@$@/,0@&K/K@@&</,0@>5C8)@@[/K@@$=CCU@@[/K@@$ACCX@@@/@K@&"1@H@@]HE
)@@G@@*?H@@]/K@@$ C^!@@]/@)@$PC^"@@]:^/@@]/K@@$L*0H@@]/K@@$ RA/@@G*8F@@@/,;@@@HF
)@@G@@/S@@@ /,0@>5C8)@@[[*?@@I=4!@@]/,0@$: *G@@I[^H@@]C@?@@F;G)@@=W^%@@]T^%@@]HG
)@@G@@[@!@@[C8))@@[C!@@]C8)@@@ 4E@@@*^E@@@'=@@[NRE/@@I/KF@@@C9@@@Q/K@@$?C9@@@CHH
)@@G@@C@.@@[C8!@@#&F%@@]9*?@@^[1G@@#9!G@@@C^.@@]9?\@@@9*?@@@'=@@@#9(G@@@A]0@@JHI
)@@G@@RA/@@G*8F@@@/,;@@@/S@@@#R]0@@JC8))@@[C!@@]*4G@@#/K@@*]/KF@@@(*G@@I/K@@*CHJ
)@@G@@ 4E@@@*^E@@@'=@@[N *G@@I/@K@%^;/E@@@ @H@@] 4E@@@*^E@@@'=@@[O/K@@%^C9@@@KHK
)@@G@@/K@@*OC80@@[[0.@@]C9@@@PC8!@@#C@.@@[[1G@@#&F%@@]9*?@@^A]0@@KRA/@@G*8F@@@HL
)@@G@@/,;@@@/S@@@]R]0@@K'=@@@#C4?@@#/KF@@@C@?@@F;G)@@=W^%@@]T^%@@]G^%@@][@?@@FHM
)@@G@@C@)@@JT8)@@WG@)@[] @@@[]CC'@@]H@0@@I!C/@@ECC/@@EN8Z@@@HC/@@E#C/@@E/@V@@@HN
)@@G@@G8!@@#C^W@@E;^K@@=K@)@[[[^/@@E&;K@@[&;)@@[/KF@@@9?W@@^9*W@@C9*W@@E @@@[]HO
)@@G@@(?G@@A/K@@(A @@@@HW8K@@W[@)@[][@W@@FAE/@@HAA?@@HQA?@@B *G@@I/KJ@@@/\0@*/HP
)@@G@@/,0@&W/@)@(SC4!@@]=8)@@[/,0@$:*0H@@]/,0@$(/,0@&B/,0@*+*CG@@E/K@@(G/K@@%@HQ
)@@G@@[@@@[#C@@@? '=@@@IC@@@[#'=@@@)N80@@@/K@@()N80@@[/\0@*/RA/@@G*8F@@@/,;@@@HR
)@@G@@/S@@@@/,0@&W(?H@@]^?.@@]/@)@(2*@@@[#*0H@@]/K@@(!/K@@(5RA/@@G*8F@@@/,;@@@HS
)@@G@@/S@@@^/K@@(;(@@@[#/,0@*J*@@@[#/,0@*L/@)@(;*^G@@#%8)@@ /K@@*] 4G@@#/,0@*+HT
)@@G@@M#!)@@/,0@&B*CG@@E/K@@(>9??@@C9*?@@^;C)@@M[^?@@#C4/@@#RE/@@HQA?@@H/KF@@@HU
)@@G@@/\0@*/RA/@@G*8F@@@/,;@@@/S@@@[/,0@&W/@)@%ORA/@@G*8F@@@/,;@@@/S@@@^/K@@%:HV
)@@G@@C@?@@F;G)@@=W^%@@]/^0@%VCC?@@E!C%@@]/K@@%:*)G@@I/K@@%)C@?@@F!@?@@J/K@@%:HW
)@@G@@R'0@*L()G@@IR'0@*J/,;@@@%8)@@ /^)@*] 4G@@#RA/@@G*8F@@@/,;@@@/S@@@DC8)@@-HX
)@@G@@[4!@@]/,0@*+M#Y)@@C@?@@F!@?@@J[@?@@JCCW@@B*?H@@]/K@@%7*4G@@A/,0@$:/,0@&BHY
)@@G@@*CG@@E/K@@%H/K@@%@/\0@(AC^'@@]*?G@@ACC'@@];GK@@=W@K@@J*@@@@IG8K@@[T^U@@]HZ
)@@G@@[@W@@JC0%@@@%8)@@\'=@@@)'=@@[LC@)@[%[^?@@]RA/@@G*8F@@@/,;@@[/K@@%^N80@@@IA
)@@G@@/K@@:MN80@@[/\0@(A =G@@I;/E@@@CCU@@[/@K@:1C^!@@]%8?@@@/K@@:\1@H@@]/K@@:YIB
)@@G@@/,0@&K/K@@:O(CH@@]*@@@[#/K@@:+/K@@:\/,0@>5 4E@@@*^E@@@'=@@[NC4!@@]=8)@@[IC
)@@G@@/,0@$:*0H@@]/,0@$(*@@@[# ^H@@]/,0@&B/K@@:OCCX@@@/K@@:QCC/@@G/@0@:5*0G@@AID
)@@G@@/,_@@[ 4E@@@*^E@@@'=@@[NC@W@@J*?G@@AT8K@@W/K@@%^PIO$: UNLOCK REQUESTED FIE
)@@G@@OR AREA NOT PREVIOUSLY LOCKED.@[D@:/A]0^]-9*@^]+9*)^]=9(@^]&^@K^]*^@)^](IF
)@@G@@^@0^]%N^/@@A^@0^]Y/K@O]ZR]0^]-9?@^]+9?)^]=9!@^]&N@K^]*N@)^](N@0^]%/K@O]:IG
)@@G@@/K@@?U/K@@?/;/@^]X'^@^]ZC^:@@@C@0^]Y/@0@?,G8"@@@C[J@@@G9@@@[[[J@@@!8)@@]IH
)@@G@@/K@@?,CDG@@CC@0^]Y*@J@@B?[J@@B[[J@@B![J@@A[[J@@AG[J@@C[[J@@CK8)@@];C0@@[II
)@@G@@C9@@@[;(J@@@>1G@@A/K@@?7RE/@@G*8F@@@/,;@@@'^@^]: 4@^]X*^@^]X'=@@[N/KF@@[IJ
)@@G@@;/@^]X'^@^]ZC^W@@A/@K@!IC8)L<5:C!@@E/K@@!F[C!@@E ^H@@E&;K@@[C8)@@I;G)@@=IK
)@@G@@N8K@@EM#Z)@@C^W@@AC^!@@EG8)@@[[^!@@E(0G@@A/K@@!NRE/@@G*8F@@@/,;@@]'^@^]:IL
)@@G@@ 4@^]X*^@^]X'=@@[N/KF@@@C@@@0V'=@@@JC@@@0Z'=@@@IC@@@0<'=@@@JC@@@0=/,0@C@IM
)@@G@@/K@@,4C9)@@[C@@@@M/,0@C2/K@@,@CC@^@RN/K@@ R#K@0>2CH)@[/K@@,6C@)^@TC9K@@@IN
)@@G@@C80@@@;=)@@A/@0@!8:80@@ /K@@!8H80@@0/G0@,9!80@@E/K@@,9T9K@@EG[K@@J/K@@!?IO
)@@G@@C8X@@@%8K^#,:8K^#2/K@@!./[K@,9[ X@@@G9)@@[/K@@!+C^@^#2[0@^#9C^@^#1;G@@@=IP
)@@G@@W8@@[0T8@@[0[^@^#1C@K^^IC8?@@@/,0@>AN @^#08L@@,GC^@^#1G8@@@#/,0@R7C8?@@@IQ
)@@G@@C@K^^I/,0@=58L@@,GN @^#\C[0@[^C9)@@@;/@^]!8L@@,SC8@@@K/,0@R7R'?@@@&;@@@[IR
)@@G@@R#K@0&N/K@@KM#H)@@C8@@@W/,0@R7[^E@@^*^@^#,/K@@,$C8@@@F/,0@R7[^E@@AC@@@0$IS
)@@G@@'=@@@FG9)@@[8L@@,SC/@@@@/,0@Y%C/@@@@/,0@Y=/,0@Y^ 4@^]!*^@^]!'=@@[O'=@@@DIT
)@@G@@'=@@@I'=@@@DC@@@0:'=@@@I'=@@@DC@@@0\'=@@@I'=@@@D;/@^]! 4@^]!*^@^]!'=@@[NIU
)@@G@@*^@^#,/K@@\R/,0@Y0C/@@00/,0@WHC@@@@M/,0@LLC/K__"/,0@WLC/@@03/,0@WHC/K@@[IV
)@@G@@/,0@WLC/E@@@&_@@@]/,0@YCC/@@05/,0@WHC@@@@M/,0@LL/,0@Y^/,0@Y2 )E@@I?90@@]IW
)@@G@@ )E@@IC8K@@@C/E@@@/,0@%;[[%@@ N9@@[=C^E@@^&;@@@[C8K@@IC@%@@ &#)@@MN8K@@WIX
)@@G@@M#H)@@C/E@@@/,0@%C*4E@@#'=@@@)C@E@@ G@@@@N[@E@@ 8L@@\Y/,0@Y0C/@@07/,0@WHIY
)@@G@@C8E@@@C/K@@A/,0@LJ/,0@WFC/@@@[C/K@@@/,0@WJ/,0@Y2[[%@@ N9@@[=C/E@@@/,0@(XIZ
)@@G@@*4E@@#'=@@@)C^E@@^&;@@@[C@%@@ &#)@@MN8K@@V%@?)@@'=@@@)8KK@0#C@E@@ G@@@@NJA
)@@G@@[@E@@ 8L@@\'/,0@Y0C/@@0'/,0@WHC8E@@@C/K@@A/,0@LJ/,0@WFC/@@@[C/K@@@/,0@WJJB
)@@G@@/,0@Y2C/E@@@/,0@:L'=@@@D@FREE PIOTEST     @@#@0SPAGE I/O TURNED ON@[#@0WJC
)@@G@@@ASG,T PIOTEST,F  @@#@0)@[@^],@@[^#!@@[^#3@@[@,/UNKNOWN PARAMETER @[#@0*JD
)@@G@@BAD PARAMTER VALUE@[#@0?@FREE  PIOTEST&   @ASG,T&     PIOTEST&    PKT & JE
)@@G@@WRITTEN&    PKT & READ& @@@@@@@@@@@@@USE  @@@@@@@@@@@@,     @@@@@@@@@@@@JF
)@@G@@@@@@@@@@@@@@^@W__"^@W^@W@@@@@@^^M@@@@@@@@@@@@@@@RETURN ADDRESS: 999999  JG
)@@G@@PARAMETER: 999999 SIZE REQUESTED EXCEEDS MAXIMUM BUFFER SIZEADDRESS PASSJH
)@@G@@ED TO BREL IS NOT AN ALLOCATED BUFFER     BREL ERROR:  NEXT BUFFER BACKPJI
)@@G@@OINTER IS BAD.    INSUFFICIENT CORE TO SATISFY REQUEST@[B^@(@[D^@0@[C^@9JJ
)@@G@@@[A^[[@@@@@@@@@@@@/K@@T=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[B^@+@\@@@@JK
)@@G@@@&-^[,@@@@@@[[@@@@@@@@@@@@@@@@@P,@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@_3;@@@@O8JL
)@@G@@@@@@@@@@-^[,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/K@@@@/K@@++/K@@@@JM
)@@G@@/K@@+2/K@@@@/K@@<I@\@@@@@@@@@@/K@@@@/K@@?A/K@@@@/K@@?K@\@@@@@@@@@@@@@@@@JN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@1F @@[ACT@@[PC @@[PS @[0TR @@[PIOTEST     JO
)@@G@@@@@@@@@@@@@@@@W@@@@@@@@@@[@^^#@@@^^J@@@@@@@@@@@@@@@@@@@@@@@@@Y6@?S@@@@@@JP
)@@G@@@@@@@[@@#^^J@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JR
)@@G@@$MAIN$      @@^@@^@@@@@]@@@#@ @@@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@BGET        ABJ^JFEDIT$       @MCDIJEDIT$AEDIT  JU
)@@G@@K5OEIKEDIT$ALF    DIE]KMEDIT$ASC    J"SESJEDIT$F      @N-DIJEDIT$INT    JV
)@@G@@@N'DIJEDIT$PRT    KE$EDKEDIT$S      @O3DIJEDIT$TBL    @P(DIJEDIT$UOM    JW
)@@G@@@P3DIJERU$        HN:#HNFDIT$       ]J][MKFDIT$ALF    F2-EDKFDIT$F      JX
)@@G@@J\$EKJFDIT$INT    J\?EKJFDIT$PRT    @R<DIJFDIT$S      J\7EKJINFOR$      JY
)@@G@@JJZEULPIONP$      G^0#GMPIOPAI$     G^6#GMPIOTEST     HO0]#NPIO$        JZ
)@@G@@@X>#VNPIO$STATS   HH^]#NPIO$TRACE   HZ"]#N@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@$IBANK      @@@@@S$DBANK      @[C@@AA@0A[;A@0A@0KB
)@@G@@A@0A@1A-]A@0A@0A@1AK1A(AA@0A@0A@0A@0A[;A@0A@0A@1AC2ALAA@0A@0A@0AK8ADAA@0KC
)@@G@@A@0A@0A@0A[;A@0A@0A@0A)2ALBA@0A@0A@0A@0A[;A@0A@0@@@@@6K@@[@^@^^@C@@@@@@VKD
)@@G@@@@@[@^@]@@G^@@@@@Y@@@[@^@[M@I^@@@@@M@@@[@^@[<@JQ@@@@@S@@@[@^@@O@K9@@@@@!KE
)@@G@@@@@[@^@@G@LH@@@@@J@@@[@^@#N@LT@@@@@%@@@[@^@@G@O?@@@@@G@@@[@^@@6@O8@@@@@AKF
)@@G@@@@@[@^@[+@P,@@@@@3@@@[@^@@A@RK@@@@@P@@@[@^@@-@RQ@@@@@@@@@[@^@]K@R7@@@@@DKG
)@@G@@@@@[@^@[4@UB@@@@@$@@@[@^@@O@V;@@@@@0@@@[@^@@^@WJ@@@@@#@@@[@^@[N@WN@@@@@=KH
)@@G@@@@@[@^@[K@X&@@@@[C@@@[@^@ _@Y6@@@@@9@@@[@^@@L@=5@@@@@/@@@[@^@@\@>A@@@@[]KI
)@@G@@@@@[@^@AL@>5@@@@[ @@@[@^@[M@?A@@@@@_@@@[@^@#=@!S@@@@@60@@]@ @@W^@@@@@@@@KJ
)@@G@@)@@]@ @@9^@W@@@@@=)@@@@ @@;^[P@@@@[C)@@@@ @@H^]K@@@@[ )@@@@ @@K^]X@@@@@_KK
)@@G@@)@@@@ @[>^]!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KM
)@@G@@BGET        @@=@@@ECHAR$      @@0@@/ECLEAR$     @@0@@'ECLR$$      @@0@@OKN
)@@G@@ECOLN$      @@G@@@ECOL$       @@G@@EECOPYS$     @@$@@(ECOPY$      @@$@@&KO
)@@G@@ECSF$       @@-@@IEDECFL$     @@D@@NEDECFZ$     @@D@@SEDECF$      @@D@@=KP
)@@G@@EDECV$      @@D@@<EDITR$      @@0@@YEDITX$      @@0@@+EDIT$       @@0@@JKQ
)@@G@@EFD1$       @@$@@#EFD2$       @@$@@ EFD3$       @@$@@@EFLF1$      @@M@@UKR
)@@G@@EFLF2$      @@M@@VEFLG1$      @@M@@FEFLG2$      @@M@@GEFLS1$      @@M@@@KS
)@@G@@EFLS2$      @@M@@[ELT$        @[C@@IEMSGR$      @@$@[)EMSG$       @@$@[=KT
)@@G@@EOCTF$      @@D@@@EOCTV$      @@D@@^EPACKC$     @@$@@YEPACKS$     @@$@@+KU
)@@G@@EPACK$      @@$@@XEPRTG$      @@-@@@ERASE$      @@A@@WESKIP$      @@G@@[KV
)@@G@@E$ASCII$    @@S@@@E$ASC$      @@V@@@E$CHAR$     @@0@@@E$DEC2$     @@D@@5KW
)@@G@@E$DTBL$     @@#@@@E$PTRL$     @@$@[QFASCIN$     @@3@[^FASC$       @@3@@"KX
)@@G@@FA0$        @@3@@@FCHAR$      @@3@@2FCOPY$      @@%@@AFCSF$       @@!@@]KY
)@@G@@FDECV$      @@J@@^FDTA$       @@3@@+FDT$        @@3@@YFFD1$       @@%@@@KZ
)@@G@@FFD2$       @@%@@]FFLF1$      @@P@@CFLOCK$      @@3@[EFMSGR$      @@%@@KLA
)@@G@@FMSG$       @@%@@MFOCTF$      @@J@@]FPRT$       @@!@@@FSKIP$      @@Y@@]LB
)@@G@@FUNLOCK$    @@3@[GF$          @@3@@#PIOFC$      @@_@ WPIOFO$      @@_@ ALC
)@@G@@PIONP$      @@9@@@PIOPAI$     @@/@@@PIOR$       @@_@#*PIOW$       @@_@^NLD
)@@G@@PIO$A0      @[O@@ PIO$A1      @[O@@APIO$REST    @[O@@IPIO$SAVE    @[O@@]LE
)@@G@@PIO$STATQ   @[O@@@PIO$STATS   @[]@@MPIO$STL     @[O@@[PIO$TRACE   @@6@@@LF
)@@G@@RINF$       @@@@@@SELT$       @@@@@2@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LH
)@@G@@LASTD$      @@@^^L@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@*[S@@@*SDFF*@#@@@*/         AXR$    @#@@@*      LK
)@@G@@    FUNC$   @ @@@*          INCLUDE   'PIO$DEF' @#@@@*          IBANK   LL
)@@G@@@[@@@*.     @ @@@*. PIO$ - PAGED IO ROUTINES    @[@@@*.     @C@@@*. DESILM
)@@G@@GNED AND IMPLEMENTED BY ALAN K. STEBBENS. @[@@@*.     @B@@@*. DOCUMENTATLN
)@@G@@ION IN ELEMENT 'DOC/PIO$'     @[@@@*.     @[@@@*.     @H@@@(. ACQUIREPAGLO
)@@G@@E - ROUTINE TO LINK PAGE TO TOP OF QUEUE AND MARK IT AS BUSY.     @[@@@(LP
)@@G@@.     @A@@@(. A1 = ADDRESS OF PAGE TO ACQUIRE   @^@@@(. LMJ  X11,ACQUIRELQ
)@@G@@PAGE  @ @@@(. A1 UNCHANGED; USES A2,A3    @[@@@(.     @E@@@(. LINKPAGE -LR
)@@G@@ ROUTINE TO LINK PAGE TO THE TOP OF THE QUEUE.  @[@@@(.     @ @@@(. A1 =LS
)@@G@@ ADDRESS OF PAGE TO LINK@^@@@(. LMJ  X11,LINKPAGE     @E@@@(. A1 UNCHANGLT
)@@G@@ED; USES A2; A3=NEXT PAGE OF A1 BEFORE RELINK   @[@@@(.     @]@@@(ACQUIRLU
)@@G@@EPAGE @F@@@(          LA        A2,PAGFLG,A1      . GET THE CURRENT PAGELV
)@@G@@ FLAGS@E@@@(          OR,U      A2,1*/17          . SET THE 'BUSY' BIT  LW
)@@G@@@E@@@(          SA        A3,PAGFLG,A1      . RESET NEW FLAGS     @G@@@(LX
)@@G@@          SA        A1,PIOCPL         . AND POST OUR NEW CURRENT PAGE   LY
)@@G@@@[@@@(.     @]@@@(LINKPAGE    @F@@@(          LA        A2,PAGPPL,A1    LZ
)@@G@@  . GET PREVIOUS PAGE LINK    @E@@@(          LA        A3,PAGNPL,A1    MA
)@@G@@  . GET NEXT PAGE LINK  @G@@@(          JZ        A2,0,X11          . IFMB
)@@G@@ NO PREVIOUS PAGE - ALL DONE  @G@@@(          SA        A3,PAGNPL,A2    MC
)@@G@@  . REMOVE CURRENT PAGE FROM QUEUE  @E@@@(          TZ        A3        MD
)@@G@@        . IS NEXT PAGE REAL?  @G@@@(          SA        A2,PAGPPL,A3    ME
)@@G@@  . YES, POST NEW PREVIOUS PAGE     @D@@@(          TNZ       A3        MF
)@@G@@        . NO NEXT PAGE? @F@@@(          SA        A2,PALPL          . RIMG
)@@G@@GHT, SET NEW LAST PAGE  @E@@@(          LA        A2,PAFPL          . GEMH
)@@G@@T FIRST PAGE LINK @E@@@(          SA        A2,PAGNPL,A1      . MAKE NEWMI
)@@G@@ FIRST PAGE @C@@@(          SA        A1,PAFPL          . LIKE SO @G@@@(MJ
)@@G@@          SZ        PAGPPL,A1         . AND THERE IS NO PREVIOUS PAGE   MK
)@@G@@@E@@@(          SA        A1,PAGPPL,A2      . LINK OLD PAGES IN   @C@@@(ML
)@@G@@          J         0,X11             . ALL DONE@[@@@(.     @E@@@(. RELEMM
)@@G@@ASEPAGE - ROUTINE TO CLEAR THE BUSY BIT ON PAGE A1.   @[@@@(.     @]@@@(MN
)@@G@@RELEASEPAGE @E@@@(          LOCK      PASEMA            . LOCK PAGE ACCEMO
)@@G@@SS    @F@@@(          LA        A1,PIOCPL         . GET THE CURRENT PAGEMP
)@@G@@ LINK @D@@@(          LA        A2,PAGFLG,A1      . GET PAGE FLAGS@E@@@(MQ
)@@G@@          AND,U     A2,1*/17-1        . GET RID OF BUSY BIT @G@@@(      MR
)@@G@@    SA        A3,PAGFLG,A1      . POST OLD BITS MINUS BUSY BIT    @G@@@(MS
)@@G@@          UNBLOCK   PASEMA            . LET SOMEONE ELSE LOOK AT PAGES  MT
)@@G@@@C@@@(          J         0,X11             . GO HOME @[@@@(.     @E@@@(MU
)@@G@@. AWAITPAGE - ROUTINE TO WAIT FOR A PAGE TO BECOME AVAILABLE@[@@@(.     MV
)@@G@@@E@@@(. CLEAR 'PIOBLK' BEFORE CALLING THIS ROUTINE THE FIRST TIME.@[@@@(MW
)@@G@@.     @]@@@(AWAITPAGE   @H@@@(          JNEZ      PIOBLK AWP010     . SKMX
)@@G@@IP IF SECOND TIME AFTER BLOCKING    @G@@@(          BLOCK     PASEMA    MY
)@@G@@        . WAIT FOR THE PAGE TO BECOME FREE@D@@@(          LA,U      A1,1MZ
)@@G@@              . GET A FLAG    @E@@@(          SA        A1,PIOBLK       NA
)@@G@@  . SET 'BLOCKED' FLAG  @D@@@(          J         0,X11             . GONB
)@@G@@ TRY AGAIN  @[@@@(AWP010@I@@@(          UNBLOCK   PASEMA            . WENC
)@@G@@ COULDN'T USE THE PAGE; LET OTHERS IN     @E@@@(          SZ        PIOBND
)@@G@@LK            . CLEAR THE BLOCK FLAG@D@@@(          J         0,X11     NE
)@@G@@        . GO TRY AGAIN  @G@(@*. UNLINK - SUBROUTINE TO UNLINK PAGE LINKENF
)@@G@@D BY A1 FROM THE PAGE QUEUE   @[@(@*.     @A@(@*. A1 = ADDRESS OF PAGE TNG
)@@G@@O UNLINK    @#@(@*. LMJ  X11,UNLINK @A@(@*. A1 = ADDRESS OF PAGE UNLINKENH
)@@G@@D     @ @(@*. A2 = PREVIOUS PAGE ADDRESS  @^@(@*. A3 = NEXT PAGE ADDRESSNI
)@@G@@@[@(@*.     @#@(@*. USES: X11,A1-A3 @[@(@*.     @[@(@*UNLINK@F@(@*      NJ
)@@G@@    LA        A2,PAGPPL,A1      . GET PREVIOUS PAGE LINK    @E@(@*      NK
)@@G@@    LA        A3,PAGNPL,A1      . GET NEXT PAGE LINK  @G@(@*          JNNL
)@@G@@Z       A2,UNL010         . SKIP IF PREDECESSOR IS THERE    @G@(@*      NM
)@@G@@    SA        A3,PAFPL          . IT'S NOT, MAKE NEW FIRST PAGE   @B@(@*NN
)@@G@@          J         UNL020            .   @[@(@*UNL010@E@(@*          SANO
)@@G@@        A3,PAGNPL,A2      . SET NEXT PAGE LINK  @[@(@*UNL020@F@(@*      NP
)@@G@@    JNZ       A3,UNL030         . SKIP IF SUCCESSOR IS REAL @G@(@*      NQ
)@@G@@    SA        A2,PALPL          . IT'S NOT, MAKE NEW LAST PAGE    @D@(@*NR
)@@G@@          J         0,X11             . AND RETURN    @[@(@*UNL030@F@(@*NS
)@@G@@          SA        A2,PAGPPL,A3      . SET PREVIOUS PAGE LINK    @C@(@*NT
)@@G@@          J         0,X11             . RETURN  @[@(@*.     @[@(@*.     NU
)@@G@@@H@(@*. LINKIN - SUBROUTINE TO LINK PAGE, POINTED TO BY A1, AT THE TOP ONV
)@@G@@F THE QUEUE @[@(@*.     @ @(@*.  A1 = PAGE ADDRESS TO LINK  @#@(@*.  LMJNW
)@@G@@  X11,LINKIN@ @(@*.  A1 = ADDRESS OF PAGE LINKED@D@(@*.  A2 = ADDRESS OFNX
)@@G@@ PREVIOUS FIRST PAGE (NEXT PAGE)    @[@(@*.     @#@(@*. USES: X11,A1-A2 NY
)@@G@@@[@(@*.     @[@(@*LINKIN@E@(@*          LA        A2,PAFPL          . GENZ
)@@G@@T THE FIRST PAGE  @F@(@*          SA        A2,PAGNPL,A1      . SET THE OA
)@@G@@NEXT PAGE LINK    @F@(@*          SA        A1,PAFPL          . THIS IS OB
)@@G@@THE NEW FIRST PAGE@G@(@*          SZ        PAGPPL,A1         . AND THEROC
)@@G@@E IS NO PREVIUS PAGE    @E@(@*          JZ        A2,LNK010         . SKOD
)@@G@@IP IF NO NEXT PAGE@E@(@*          SA        A1,PAGPPL,A2      . SET PREVOE
)@@G@@IOUS LINK   @C@(@*          J         0,X11             . RETURN  @[@(@*OF
)@@G@@LNK010@F@(@*          SA        A1,PALPL          . SET THE LAST PAGE LIOG
)@@G@@NK    @C@(@*          J         0,X11             . RETURN  @[@(@*.     OH
)@@G@@@[@(@*.     @G@(@*. LINKPAGE - ROUTINE TO LINK THE CURRENT PAGE BACK ONTOI
)@@G@@OP OF THE QUEUE   @G@(@*.  AFTER FIRST LOCKING THE PAGE QUEUE AND SUBSEQOJ
)@@G@@UENTLY UNLOCKING IT.    @[@(@*.     @^@(@*.  LMJ  X11,LINKPAGE    @^@(@*OK
)@@G@@.  A1 = LINKED PAGE     @[@(@*.     @#@(@*.  USES: X11,A1-A3@[@(@*.     OL
)@@G@@@]@(@*LINKPAGE    @E@(@*          SX        X11,A3            . SAVE OUROM
)@@G@@ LINK HERE  @F@(@*          LOCK      PASEMA            . LOCK THE PAGE ON
)@@G@@SEMAPHORE   @E@(@*          LA        A1,PIOCPL         . GET THE CURRENOO
)@@G@@T PAGE@D@(@*          LMJ       X11,LINKIN        . FIX THE LINKS @G@(@*OP
)@@G@@          SZ        PIOCPL            . CLEAR THE CURRENT PAGE LINK     OQ
)@@G@@@F@(@*          UNBLOCK   PASEMA            . RELEASE THE PAGE TABLE    OR
)@@G@@@C@(@*          J         0,A3              . RETURN  @[@@@*/.    @]@(@*OS
)@@G@@. PAGESEARCH@G@@@(. FINDPAGE - ROUTINE TO FIND THE PAGE CORRESPONDING TOOT
)@@G@@ THE CURRENT DRUM @B@@@(.            ADDRESS OR OBTAIN A NEW PAGE.@[@@@*OU
)@@G@@.     @^@@@(. LMJ  X11,FINDPAGE     @^@@@(. A1 = ADDRESS OF PAGE  @^@@@(OV
)@@G@@. A2 = 0 IF PAGE IS NEW @[@@@(.     @G@(@*. INTERNAL SUBROUTINE TO FIND OW
)@@G@@A PAGE CORRESPONDING TO THE REQUEST DRUM  @]@(@*. ADDRESS.  @ @(@*. IF NOX
)@@G@@OT FOUND, RETURNS A1=0  @A@(@*. IF FOUND, RETURNS A1=PAGE ADDRESS @#@(@*OY
)@@G@@. USES: X11,A1-A5 @[@(@*.     @]@(@*PAGESEARCH  @]@@@(FINDPAGE    @D@@@*OZ
)@@G@@          SX        X11,PAGX11        . SAVE OUR LINK @F@@@(          LAPA
)@@G@@        A4,PIOCWC         . GET THE CURRENT WORD COUNT@E@@@(          DSPB
)@@G@@L       A4,36             . CONVERT TO SECTORS  @B@@@(          DI,U    PC
)@@G@@  A4,28             .   @G@@@(          AU        A4,PIOCDA         . A5PD
)@@G@@=LAST ADDR+1 OF DRUM REQUEST  @G@@@(          LA        A4,PIOCDA       PE
)@@G@@  . FIRST ADDRESS OF DRUM REQUEST   @F@@@(          SZ        PIOBLK    PF
)@@G@@        . CLEAR THE 'BLOCKED' FLAG  @[@@@*PAG010@F@@@*          LOCK    PG
)@@G@@  PASEMA            . LOCK THE PAGE SEMAPHORE   @E@@@*          LA      PH
)@@G@@  A1,PAFPL          . GET FIRST PAGE LINK @F@(@*          LA        A4,PPI
)@@G@@IOCWC         . GET THE CURRENT WORD COUNT@E@(@*          DSL       A4,3PJ
)@@G@@6             . CONVERT TO SECTORS  @B@(@*          DI,U      A4,28     PK
)@@G@@        .   @G@(@*          AU        A4,PIOCDA         . A5=LAST ADDR+1PL
)@@G@@ OF DRUM REQUEST  @G@(@*          LA        A4,PIOCDA         . FIRST ADPM
)@@G@@DRESS OF DRUM REQUEST   @E@@@(          J         PAG030            . SKPN
)@@G@@IP FIRST LINK     @[@@@*PAG020@G@@@(          LA        A1,PAGNPL,A1    PO
)@@G@@  . GET THE NEXT PAGE IS THE QUEUE  @[@@@(PAG030@F@(@*          JZ      PP
)@@G@@  A1,PAG060         . RETURN IF NO MORE PAGES   @H@@@(          JZ      PQ
)@@G@@  A1,PAG070         . GO FIND A FREE PAGE IF NO MORE PAGES  @E@@@*      PR
)@@G@@    LA        A2,PAGIOL,A1      . GET THE IO LINK     @E@(@*          JZPS
)@@G@@        A2,PAG030         . SKIP IF NO IO LINK  @E@@@(          JZ      PT
)@@G@@  A2,PAG020         . SKIP IF NO IO LINK  @E@@@*          DL        A2,,PU
)@@G@@A2            . GET THE FILENAME    @H@(@*          DJNE      A2,PIOPKT PV
)@@G@@PAG030  . IF DIFFERENT FILES, SKIP THIS PAGE    @H@@@(          DJNE    PW
)@@G@@  A2,PIOPKT PAG020  . IF DIFFERENT FILES, SKIP THIS PAGE    @G@@@*      PX
)@@G@@    JNW       A4,PAGDA,A1 PAG040 . SKIP IF PAGE NOT IN DRUM AREA  @G@(@*PY
)@@G@@          LMJ       X11,UNLINK        . PAGE WILL BE NEEDED IN FUTURE   PZ
)@@G@@@G@(@*          LMJ       X11,LINKIN        . MAKE IT RECENTLY REFERENCEQA
)@@G@@D     @F@@@(          LMJ       X11,LINKPAGE      . MAKE THIS PAGE RECENQB
)@@G@@T     @G@(@*          LA        A1,A3             . GET THE NEXT PAGE (FQC
)@@G@@ROM UNLINK) @H@@@(          LA        A1,A3             . GET THE NEXT PQD
)@@G@@AGE (FROM LINKPAGE)     @C@(@*          J         PAG020            . LOQE
)@@G@@OP    @C@@@(          J         PAG030            . LOOP    @[@(@*PAG030QF
)@@G@@@E@(@*          LA        A1,PAGNPL,A1      . GET THE NEXT PAGE   @D@(@*QG
)@@G@@          J         PAG020            . TRY AGAIN     @[@@@*PAG040@E@@@*QH
)@@G@@          LA        A2,PAGDA,A1       . GET DRUM ADDRESS    @F@@@*      QI
)@@G@@    AN,U      A2,1              . FARBLE FOR RANGE CHECK    @F@@@*      QJ
)@@G@@    AU        A2,PAPSS          . ADD IN PAGESIZE IN SECTORS@G@(@*      QK
)@@G@@    JNW       A2,A4 PAG030      . SKIP BACK IF NOT DESIRED PAGE   @G@@@(QL
)@@G@@          JNW       A2,A4 PAG020      . SKIP BACK IF NOT DESIRED PAGE   QM
)@@G@@@G@@@(          JNEG      PAGFW,A1 PAG050   . WE WANT THIS PAGE;WAIT IF QN
)@@G@@BUSY  @G@@@*          LA        A2,PAGIOL,A1      . GET THE OWNER'S PACKQO
)@@G@@ET ADDR     @E@(@*          TE,U      A2,PIOPKT         . IS IT HIS OWN QP
)@@G@@PAGE? @G@@@(          LA        A2,UX(PIOAID,A2)  . GET ACTIVITY ID FOR QQ
)@@G@@IO PACKET   @G@@@(          TE        A2,PIOAID         . IS IT ANOTHER QR
)@@G@@OF HIS PACKETS?   @E@@@*          TNZ       PAGULF,A1         . NO, IT IQS
)@@G@@S UNLOCKED? @E@(@*          J         PAG050            . YES, HE CAN REQT
)@@G@@AD IT @E@@@(          J         PAG060            . YES, HE CAN READ IT QU
)@@G@@@[@@@(PAG050@F@@@(          LMJ       X11,AWAITPAGE     . LET'S WAIT FORQV
)@@G@@ THE PAGE   @D@@@(          J         PAG010            . GO TRY AGAIN  QW
)@@G@@@G@(@*          BLOCK     PASEMA            . WE WANT THIS PAGE; WAIT FOQX
)@@G@@R IT  @D@(@*          J         PAG010            . SEARCH AGAIN  @[@(@*QY
)@@G@@PAG050@[@@@(PAG060@E@(@*          LMJ       X11,UNLINK        . UNLINK TQZ
)@@G@@HE PAGE     @F@@@(          LMJ       X11,ACQUIREPAGE   . TAKE CONTROL ORA
)@@G@@F THE PAGE  @E@@@(          LA,U      A2,1              . GET OLD PAGE FRB
)@@G@@LAG   @F@@@(          J         PAG110            . GO RETURN WITH THE PRC
)@@G@@AGE   @[@@@(.     @B@@@(. COULDN'T FIND THE PAGE; GET A FREE PAGE @[@@@(RD
)@@G@@.     @E@(@*          INC       PAGEH             . WE GOT A PAGE HIT   RE
)@@G@@@[@(@*PAG060@[@@@(PAG070@G@@@(          LA        A1,PALPL          . FIRF
)@@G@@ND LEAST RECENT AVAILABLE PAGE@E@@@(          J         $+2             RG
)@@G@@  . SKIP THE NEXT LINK  @[@@@(PAG080@F@@@(          LA        A1,PAGPPL,RH
)@@G@@A1      . GET THE PREVIOUS PAGE LINK@G@@@(          JZ        A1,PAG050 RI
)@@G@@        . GO BLOCK IF WE DON'T HAVE A PAGE@E@@@(          TN        PAGFRJ
)@@G@@W,A1          . IS THE PAGE BUSY?   @F@@@(          TZ        PAGULF,A1 RK
)@@G@@        . NO, IS IT USER-LOCKED?    @I@@@(          J         PAG080    RL
)@@G@@        . YES, CAN'T TOUCH IT WITH A TEN-FOOT POLE    @E@@@(          LARM
)@@G@@        A2,PAGIOL,A1      . GET THE IO LINK     @F@@@(          JZ      RN
)@@G@@  A2,PAG100         . GO CLAIM IT IF NO IO LINK @H@@@(          LA      RO
)@@G@@  A3,UX(PIOAID,A2)  . GET THE ACTIVITY ID FROM LINKED PACKET@H@@@(      RP
)@@G@@    JE        A3,PIOAID PAG090  . IF SAME ACTIVITY, WE CAN GET THE PAGE RQ
)@@G@@@H@@@(          JNEZ      PAGLOK,A1 PAG080  . IF LOCKED BY ANOTHER, LEAVRR
)@@G@@E IT ALONE  @[@@@(PAG090@E@@@(          INC       PAGEF             . MARS
)@@G@@RK A PAGE FAULT   @[@@@(PAG100@E@@@(          LMJ       X11,ACQUIREPAGE RT
)@@G@@  . GRAB THE PAGE NOW   @E@@@(          LA,U      A2,1              . GERU
)@@G@@T MODIFIED BIT    @F@@@(          SA        A2,PIOLOK         . SET QUEURV
)@@G@@E-LOCKED FLAG     @F@@@(          TEP       A2,PAGMOD,A1      . SKIP WRIRW
)@@G@@TE IF NOT MODIFIED@F@@@(          LMJ       X11,WRITEPAGE     . YES, WRIRX
)@@G@@TE OUT THE PAGE   @F@@@(          SZ        PIOLOK            . CLEAR QURY
)@@G@@EUE-LOCKED FLAG   @E@@@(          SA        A0,PAGIOL,A1      . POST THERZ
)@@G@@ I/O LINK   @G@@@(          LA        A2,PIOCDA         . GET THE CURRENSA
)@@G@@T DRUM ADDRESS    @E@@@(          DSL       A2,36             . GET READSB
)@@G@@Y FOR DIVIDE@H@@@(          DI        A2,PAPSS          . ROUND OFF ADDRSC
)@@G@@ESS AT PAGE BOUNDARY    @B@@@(          MSI       A2,PAPSS          .   SD
)@@G@@@F@@@(          SA        A2,PAGDA,A1       . POST PAGE DRUM ADDRESS    SE
)@@G@@@E@@@(          LA,U      A2,1*/17          . GET BUSY BIT ONLY   @F@@@(SF
)@@G@@          SA        A2,PAGFLG,A1      . CLEAR ALL OTHER FLAGS     @E@@@(SG
)@@G@@          LA,U      A2,0              . GET NEW PAGE FLAG   @[@@@(PAG110SH
)@@G@@@F@@@*          UNLOCK    PASEMA            . RELEASE THE QUEUE TABLE   SI
)@@G@@@E@(@*          SA        A1,PIOCPL         . SET THE CURRENT PAGE@D@@@*SJ
)@@G@@          LX        X11,PAGX11        . RESTORE LINK  @C@@@*          J SK
)@@G@@        0,X11             . RETURN  @[@(@*/.    @B@(@*. FREEPAGE - ROUTISL
)@@G@@NE TO GET A FREE PAGE   @[@(@*.     @^@(@*.  LMJ  X11,FREEPAGE    @F@(@*SM
)@@G@@.  <BLOCK RETURN> . NO FREE PAGES WERE AVAILABLE, SEARCH AGAIN.   @#@(@*SN
)@@G@@.  <NORMAL RETURN>@[@(@*.     @A@(@*.  A1 = ADDRESS OF AVAILABLE PAGE   SO
)@@G@@@[@(@*.     @#@(@*. USES: X11,A2-A5 @[@(@*.     @]@(@*FREEPAGE    @D@(@*SP
)@@G@@          SX        X11,FREX11        . SAVE OUR LINK @[@(@*FRE010@F@(@*SQ
)@@G@@          LOCK      PASEMA            . LOCK THE PAGE SEMAPHORE   @F@(@*SR
)@@G@@          LA        A1,PALPL          . GET LAST PAGE ADDRESS     @F@(@*SS
)@@G@@          J         $+2               . SKIP LINK TO NEXT PAGE    @[@(@*ST
)@@G@@FRE020@F@(@*          LA        A1,PAGPPL,A1      . LINK TO THE NEXT PAGSU
)@@G@@E     @G@(@*          JNZ       A1,FRE030         . SKIP AHEAD IF WE HAVSV
)@@G@@E A PAGE    @G@(@*          UNBLOCK   PASEMA            . LET SOMEONE ELSW
)@@G@@SE LOOK AT QUEUE  @D@(@*          ER        SWAIT$            . SHORT WASX
)@@G@@IT    @G@(@*          LX        X11,FREX11        . WE BLOCKED, TAKE BLOSY
)@@G@@CK RETURN   @F@(@*          J         0,X11             . AND TRY SEARCHSZ
)@@G@@ING AGAIN   @[@(@*FRE030@G@(@*          JNEZ      PAGULF,A1 FRE020  . CATA
)@@G@@N'T TOUCH A USER-LOCK PAGE    @E@(@*          LA        A2,PAGIOL,A1    TB
)@@G@@  . GET THE IO LINK     @E@(@*          JZ        A2,FRE040         . SKTC
)@@G@@IP IF NO IO LINK  @F@(@*          JE,U      A2,PIOPKT FRE040  . GRAB IT TD
)@@G@@IF IT'S OUR PAGE  @H@(@*          JNEZ      PAGLOK,A1 FRE020  . LEAVE ITTE
)@@G@@ IF IT'S LOCKED BY ANOTHER    @[@(@*FRE040@G@(@*          LMJ       X11,TF
)@@G@@UNLINK        . UNLINK IT FROM THE PAGE QUEUE   @E@(@*          UNLOCK  TG
)@@G@@  PASEMA            . UNLOCK THE TABLE    @G@(@*          SA        A1,PTH
)@@G@@IOCPL         . THIS IS NOW OUR CURRENT PAGE    @F@(@*          TZ      TI
)@@G@@  PAGMOD,A1         . IS THE PAGE MODIFIED?     @F@(@*          LMJ     TJ
)@@G@@  X11,WRITEPAGE     . YES, WRITE OUT THE PAGE   @E@(@*          SZ      TK
)@@G@@  PAGFW,A1          . CLEAR ANY FLAGS     @D@(@*          LX        X11,TL
)@@G@@FREX11        . GET OUR LINK  @C@(@*          J         1,X11           TM
)@@G@@  . RETURN  @[@(@*.     @[@(@*.     @[@@@(/.    @E@@@*. WRITEPAGE - ROUTTN
)@@G@@INE TO WRITE OUT THE PAGE LINKED TO BY A1 @E@@@*. UNLOCKPAGE - ROUTINE TTO
)@@G@@O UNLOCK THE PAGE LINKED TO BY A1   @[@@@*.     @A@@@*.  A1 = ADDRESS OFTP
)@@G@@ PAGE TO WRITE    @D@@@*.  LMJ  X11,WRITEPAGE      OR      LMJ  X11,UNLOTQ
)@@G@@CKPAGE@A@@@*.  A1 = ADDRESS OF PAGE WRITTEN     @[@@@*.     @#@@@*.  USETR
)@@G@@S: X11,A2-A5@[@@@*.     @]@@@*UNLOCKPAGE  @E@@@*          LA,U      A4,UTS
)@@G@@NL$           . UNLOCK FUNCTION     @F@@@*          J         $+2       TT
)@@G@@        . SKIP OTHER ENTRY POINT    @]@@@*WRITEPAGE   @D@@@*          LATU
)@@G@@,U      A4,W$             . WRITE FUNCTION@F@@@*          LA        A3,PTV
)@@G@@AGDA,A1       . GET THE PAGE DRUM ADDRESS @D@@@*          LA,U      A2,PTW
)@@G@@AGE,A1        . & ADDRESS     @G@@@*          LXI       A2,PAPS         TX
)@@G@@  . WORD COUNT WILL BE THE PAGESIZE @G@@@*          DS        A2,PIOBAW TY
)@@G@@        . SET THE BUFFER ACCESS WORDS     @E@@@*          SA        A4,PTZ
)@@G@@IOFNC         . SET THE FUNCTION    @E@@@*          DL        A4,PIOPKT UA
)@@G@@        . SAVE OUR FILENAME   @E@@@*          LA        A3,PAGIOL,A1    UB
)@@G@@  . GET THE IO LINK     @F@@@*          DL        A2,,A3            . GEUC
)@@G@@T THE FOREIGN FILENAME  @E@@@*          DS        A2,PIOPKT         . PRUD
)@@G@@EPARE TO DO IO    @D@@@*          ER        IOW$              . DO THE IUE
)@@G@@O     @F@@@(          DS        A4,PIOPKT         . PUT OUR FILENAME BACUF
)@@G@@K     @ @(@*          $IF       STATS     @G@(@*          SA        A0,AUG
)@@G@@2             . TEMP SAVE OUR PACKET POINTER    @G@(@*          LA      UH
)@@G@@  A0,PAGIOL,A1      . GET THE IO LINK OF THE PAGE     @D@@@*          INUI
)@@G@@C,A3    PWRITE            . PHYSICAL WRITE@F@(@*          LA        A0,AUJ
)@@G@@2             . RESTORE OUR PACKET POINTER@#@(@*          $ENDF   @F@(@*UK
)@@G@@          DS        A4,PIOPKT         . PUT OUR FILENAME BACK     @F@(@*UL
)@@G@@          SZ        PAGFLG,A1         . AND CLEAR THE PAGE FLAGS  @F@@@(UM
)@@G@@          LA,U      A2,1*/17          . GET THE 'BUSY' BIT ONLY   @F@@@(UN
)@@G@@          SA        A2,PAGFLG,A1      . CLEAR ALL OTHER FLAGS     @G@@@*UO
)@@G@@          JNEZ      PIOSTA IOERR      . TAKE ERROR EXIT IF IO ERROR     UP
)@@G@@@E@@@*          J         0,X11             . RETURN TO CALLER    @[@@@*UQ
)@@G@@.     @[@@@*.     @ @@@*. IOERR - HANDLE THE IO ERRORS@[@@@*.     @F@@@*UR
)@@G@@. IF A1 IS NONZERO, IT IS TAKEN TO BE A PAGE ADDRESS WHICH IS     @G@@@*US
)@@G@@. THEN PLACED ONTO THE PAGE QUEUE SO THAT IT WILL NOT BE LOST IN THE    UT
)@@G@@@#@@@*. ERROR SHUFFLE.  @[@@@*.     @[@@@*IOERR @E@@@(          JEZ     UU
)@@G@@  PIOLOK ERR010     . SKIP IF NOT LOCKED  @F@@@(          UNLOCK    PASEUV
)@@G@@MA            . UNLOCK THE QUEUE TABLE    @G@@@(          SZ        PIOLUW
)@@G@@OK            . CLEAR THE QUEUE-LOCKED FLAG     @[@@@(ERR010@F@@@*      UX
)@@G@@    JZ        A1,EXIT           . SKIP AND EXIT IF NO PAGE  @G@(@*      UY
)@@G@@    SZ        PAGFW,A1          . BAD IO - FORGET PAGE CONTENTS   @E@@@(UZ
)@@G@@          LOCK      PASEMA            . LOCK THE PAGE QUEUE @H@@@(      VA
)@@G@@    SZ        PAGFW,A1          . CLEAR THE FLAGS (FORGET THE PAGE)     VB
)@@G@@@G@@@(          UNBLOCK   PASEMA            . LET SOMEONE ELSE HAVE THE VC
)@@G@@PAGE  @E@(@*          LMJ       X11,LINKPAGE      . REPLACE THE PAGE    VD
)@@G@@@D@@@*          J         EXIT              . GO FINISH     @[@@@*/.    VE
)@@G@@@G@@@*. READPAGE - ROUTINE TO TAKE THE CURRENT DRUM ADDRESS AND READ INTVF
)@@G@@O THE @A@@@*.            PAGE POINTED TO BY A1. @[@@@*.     @E@@@*. LOCKVG
)@@G@@PAGE - ROUTINE TO READ AND LOCK A PAGE FROM DRUM.     @[@@@*.     @F@(@*VH
)@@G@@. UNLOCK - ROUTINE TO TAKE THE CURRENT DRUM ADDRESS AND UNLOCK IT.@B@(@*VI
)@@G@@.          NO PAGE POINTER IS NEEDED.     @[@(@*.     @ @@@*.  A1 = PAGEVJ
)@@G@@ TO READ INTO     @^@@@*.  LMJ  X11,READPAGE    @#@@@*.  A2 = IO STATUS VK
)@@G@@@[@@@*.     @#@@@*. USES: X11,A2-A4 @[@@@*.     @[@(@*UNLOCK@D@(@*      VL
)@@G@@    LA,U      A3,UNL$           . IO FUNCTION   @E@(@*          TZ      VM
)@@G@@  A1                . IS THERE A PAGE?    @D@(@*          SZ        PAGLVN
)@@G@@OK,A1         . CLEAR THE LOCK@H@(@*          DSL       A1,36           VO
)@@G@@  . NO PAGE ADDRESS;NO BUFFER POINTER     @D@(@*          J         UNLCVP
)@@G@@K             . GO UNLOCK IT  @]@@@*READPAGE    @E@(@*          LA,U    VQ
)@@G@@  A3,R$             . JUST READ THE PAGE  @E@@@(          LA,U      A4,RVR
)@@G@@$             . JUST READ THE PAGE  @F@@@*          J         RDP       VS
)@@G@@        . SKIP OTHER ENTRY POINT    @]@@@*LOCKPAGE    @D@@@*          LAVT
)@@G@@,U      A3,1              . GET A BIT     @F@@@*          SA        A3,PVU
)@@G@@AGLOK,A1      . SET THE PAGE LOCK FLAG    @D@(@*          LA,U      A3,RVV
)@@G@@DL$           . READ AND LOCK @D@@@(          LA,U      A4,RDL$         VW
)@@G@@  . READ AND LOCK @[@@@*RDP   @F@(@*          SA        A0,PAGIOL,A1    VX
)@@G@@  . SET THE IO PACKET LINK    @E@@@*          LA,U      A2,PAGE,A1      VY
)@@G@@  . GET PAGE ADDRESS    @F@@@(          LA        A3,PAGDA,A1       . GEVZ
)@@G@@T THE PAGE DRUM ADDRESS @[@(@*UNLCK @E@(@*          SA        A3,PIOFNC WA
)@@G@@        . STASH THE FUNCTION  @E@@@(          SA        A4,PIOFNC       WB
)@@G@@  . STASH THE FUNCTION  @F@@@*          LXI       A2,PAPS           . SEWC
)@@G@@T WORD COUNT TO PAGESIZE@G@(@*          LA        A3,PIOCDA         . GEWD
)@@G@@T THE REQUESTED DRUM ADDRESS  @E@(@*          DSL       A3,36           WE
)@@G@@  . GET READY FOR DIVIDE@G@(@*          DI        A3,PAPSS          . DIWF
)@@G@@VIDE BY PAGESIZE IN SECTORS   @G@(@*          MSI       A3,PAPSS        WG
)@@G@@  . TO GET BOUNDARY ON PREP FACTOR  @H@@@*          DS        A2,PIOBAW WH
)@@G@@        . SET ACCESS WORDS IN THE IO PACKET     @F@(@*          JZ      WI
)@@G@@  A1,UNLCK1         . SKIP AHEAD IF UNLOCKING...@F@(@*          SA      WJ
)@@G@@  A3,PAGDA,A1       . SET THE PAGE DRUM ADDRESS @D@@@*          INC,A4  WK
)@@G@@  PREAD             . PAGE READ     @[@(@*UNLCK1@D@@@*          ER      WL
)@@G@@  IOW$              . READ AND WAIT @E@@@*          LA        A2,PIOSTA WM
)@@G@@        . GET THE IO STATUS   @C@@@*          J         0,X11           WN
)@@G@@  . RETURN  @[@(@*.     @[@@@*/.    @F@@@*. BUILDAWS - CREATE BUFFER ANDWO
)@@G@@ PAGE ACCESS WORDS PREPATORY TO THE @#@@@*. DATA TRANSFER.  @[@@@*.     WP
)@@G@@@#@@@*.  A1=PAGE ADDRESS@B@@@*.  R2 = INITIAL WORD OFFSET IN SECTOR     WQ
)@@G@@@[@@@*.     @^@@@*.  LMJ X11,BUILDAWS     @[@@@*.     @^@@@*.  A1 = (1,AWR
)@@G@@DDR IN PAGE)@ @@@*.  A2 = (1,BUFFER) ADDRESS    @B@@@*.  R1 = # OF WORDSWS
)@@G@@ OF DATA IN CURRENT PAGE@]@@@*.  R2 = 0   @[@@@*.     @C@@@*.  PIOCDA,PIWT
)@@G@@OCWC,PIOCBA HAVE BEEN UPDATED ALSO  @[@@@*.     @G@@@*. NOTE: THIS ROUTIWU
)@@G@@NE MAY BE CALLED FOR EFFECT WITH A1 = 0, TO CAUSE     @G@@@*. PIOCDA ANDWV
)@@G@@ PIOCWC TO BE UPDATED FOR THE NEXT PAGESEARCH OR UNLOCK.    @[@@@*.     WW
)@@G@@@^@@@*.  USES: X11,A1-A4,R1   @[@@@*.     @]@@@*BUILDAWS    @[@@@*.     WX
)@@G@@@D@@@*. COMPUTE THE NUMBER OF WORDS OFFSET INTO THE PAGE    @[@@@*.     WY
)@@G@@@G@@@*          LA        A2,PIOCDA         . GET THE CURRENT DRUM ADDREWZ
)@@G@@SS    @G@@@*          DSL       A2,36             . TRUNCATE TO A PAGE BXA
)@@G@@OUNDARY     @F@@@*          DI        A2,PAPSS          . A3=# OF SECTORXB
)@@G@@S REMAINING @G@@@(          MSI       A2,PAPSS          . A2 = PAGE BOUNXC
)@@G@@DARY FILE ADDRESS @F@@@(          AA        A2,PAPSS          . INCREMENXD
)@@G@@T TO THE NEXT PAGE@F@@@(          SA        A2,PIOCDA         . POST NEWXE
)@@G@@ FILE ADDRESS     @D@(@*          LA        A2,A3             . GET INTOXF
)@@G@@ A2   @F@@@(          LA        A2,A3             . GET SECTOR OFFSET INXG
)@@G@@ PAGE @G@@@*          MSI,U     A2,28             . TURN SECTOR ADDRESS XH
)@@G@@INTO WORDS  @H@@@*          AA        A2,R2             . ADD INITIAL WOXI
)@@G@@RD OFFSET IN SECTOR     @F@@@*          SZ        R2                . BUXJ
)@@G@@T DON'T DO IT AGAIN     @F@@@*          LA        A3,PAPS           . GEXK
)@@G@@T # OF WORDS PER PAGE   @H@@@*          AN        A3,A2             . COXL
)@@G@@MPUTE # OF WORDS NEEDED IN THE PAGE @H@@@*          TG        A3,PIOCWC XM
)@@G@@        . FEWER THAN REST OF WORDS IN PAGE?     @F@@@*          LA      XN
)@@G@@  A3,PIOCWC         . YES, USE LESSER QUANTITY  @F@@@*          LR,U    XO
)@@G@@  R1,,A3            . STASH WORD COUNT HERE     @[@(@*.     @G@(@*. UPDAXP
)@@G@@TE CURRENT WORD COUNT TO ACCOUNT FOR THE WORDS IN THE CURRENT PAGE@[@(@*XQ
)@@G@@.     @G@@@*          AN        A3,PIOCWC         . A3=-# OF WORDS REMAIXR
)@@G@@NING TO READ@E@@@*          SMA       A3,PIOCWC         . POST NEW WORD XS
)@@G@@COUNT @[@(@*.     @G@(@*. INCREMENT THE CURRENT DRUM ADDRESS TO THE NEXTXT
)@@G@@ MULTIPLE OF PAGESIZE   @[@(@*.     @F@(@*          LA        A3,PIOCDA XU
)@@G@@        . GET CURRENT DRUM ADDRESS  @G@(@*          AA        A3,PAPSS  XV
)@@G@@        . ADD NEXT INCREMENT OF PAGESIZE  @E@(@*          DSL       A3,3XW
)@@G@@6             . GET READY FOR DIVIDE@H@(@*          DI        A3,PAPSS  XX
)@@G@@        . AND TRUNCATE TO PAGESIZE BOUNDARY     @B@(@*          MSI     XY
)@@G@@  A3,PAPSS          .   @F@(@*          SA        A3,PIOCDA         . POXZ
)@@G@@ST CURRENT DRUM ADDRESS @G@@@*          JZ        A1,0,X11          . IFYA
)@@G@@ NO PAGE, DON'T DO ANY MORE   @[@@@*.     @G@@@*. BUILD THE ACCESS WORDSYB
)@@G@@ FINALLY, AND UPDATE THE CURRENT BUFFER ADDRESS @[@@@*.     @E@@@*      YC
)@@G@@    AA,U      A2,PAGE,A1        . COMPUTE PAGE OFFSET @G@@@*          LAYD
)@@G@@        A1,PIOCBA         . GET THE CURRENT BUFFER ADDRESS  @G@@@*      YE
)@@G@@    DSC       A1,36             . A1=PAGE OFFSET;A2=BUFFER POINTER@G@@@*YF
)@@G@@          AU        A2,R1             . COMPUTE NEXT BUFFER POINTER     YG
)@@G@@@C@@@*          SA        A3,PIOCBA         . POST IT @D@@@*          LXYH
)@@G@@I,U     A1,1              . AN INCREMENT  @D@@@*          LXI,U     A2,1YI
)@@G@@              . AN INCREMENT  @E@@@*          J         0,X11           YJ
)@@G@@  . RETURN TO CALLER    @[@(@*.     @[@@@*/.    @H@@@*. SETUPIO - ROUTINYK
)@@G@@E TO BE CALLED BY THE ENTRY POINT ROUTINES TO SET THINGS UP @[@@@*.     YL
)@@G@@@#@@@*.  LMJ  A3,SETUPIO@B@@@*.  R2 = INITIAL WORD OFFSET IN SECTOR OR 0YM
)@@G@@@#@@@*.  USES: A1-A3    @[@@@*.     @F@@@*. SETUP - ROUTINE TO BE CALLEDYN
)@@G@@ MERELY TO SAVE THE LINK REGISTERS  @[@@@*.     @#@@@*.  LMJ  A3,SETUP  YO
)@@G@@@]@@@*.  USES: A3 @[@@@*.     @]@@@*SETUPIO     @G@@@*          DL      YP
)@@G@@  A1,PIOBAW         . GET THE USER'S ACCESS WORDS     @F@@@*          DSYQ
)@@G@@        A1,PIOUAW         . SAVE THE ORIGINALS HERE   @G@@@*          DSYR
)@@G@@        A1,PIOCAW         . AND THESE ARE INITIALLY THE SAME@F@@@*      YS
)@@G@@    SZ        R2                . ASSUME SECTOR ADDRESSES   @H@@@*      YT
)@@G@@    JEZ       PIOWAF SETUP      . IF WAF=0 THEN ADDRESSES ARE SECTORS   YU
)@@G@@@E@@@*          SZ        A1                . READY FOR THE DIVIDE@F@@@*YV
)@@G@@          DI,U      A1,28             . CONVERT WORDS TO SECTORS  @E@@@*YW
)@@G@@          SA        A2,R2             . SAVE WORD OFFSET    @G@@@*      YX
)@@G@@    SA        A1,PIOCDA         . & POST CURRENT DRUM ADDRESS     @D@@@*YY
)@@G@@.                                     . NOTE FALL THRU@]@@@*PIO$SETUP*  YZ
)@@G@@@[@@@*SETUP @D@@@*          SX        X11,PIOX11        . SAVE REGISTERSZA
)@@G@@@E@@@*          SX        X10,PIOX10        . SAVE THIS ONE ALSO  @G@@@*ZB
)@@G@@          LXM       X10,PIOPAL        . SET THE PAGING AREA POINTER     ZC
)@@G@@@G@@@(          SZ        PIOLOK            . CLEAR THE QUEUE-LOCKED FLAZD
)@@G@@G     @E@@@*          J         0,A3              . RETURN TO CALLER    ZE
)@@G@@@[@@@*.     @[@@@*.     @ @@@*. PIOUL$ - UNLOCK FUNCTION    @[@@@*.     ZF
)@@G@@@#@@@*.  LA,U  A0,PIOPKT@^@@@*.  LMJ   X11,PIOUL$     @[@@@*.     @^@@@*ZG
)@@G@@. USES: X11,A1-A5,R1-R3 @[@@@*.     @]@@@*PIOUL$*     @D@@@*          LMZH
)@@G@@J       A3,SETUPIO        . SAVE REGISTERS@[@@@*UL$010@D@(@*          LMZI
)@@G@@J       X11,PAGESEARCH    . FIND THE PAGE @D@@@(          LMJ       X11,ZJ
)@@G@@FINDPAGE      . FIND THE PAGE @F@(@*          JZ        A1,UL$020       ZK
)@@G@@  . IF NOT THERE, DON'T FRET  @F@@@(          JZ        A2,UL$020       ZL
)@@G@@  . IF NOT THERE, BAD NEWS!   @D@(@*          TZ        PAGMOD,A1       ZM
)@@G@@  . PAGE MODIFIED?@F@@@(          LA        A2,PAGMOD,A1      . GET PAGEZN
)@@G@@ MODIFIED FLAG    @E@@@(          TEP,U     A2,1              . IS IT MOZO
)@@G@@DIFIED?     @D@@@*          LMJ       X11,WRITEPAGE     . YES - WRITE ITZP
)@@G@@@D@@@*          TZ        PAGLOK,A1         . PAGE LOCKED?  @E@@@*      ZQ
)@@G@@    LMJ       X11,UNLOCKPAGE    . YES - UNLOCK IT     @F@(@*          LMZR
)@@G@@J       X11,LINKPAGE      . JUST MAKE IT A RECENT PAGE@D@(@*          J ZS
)@@G@@        UL$030            . SKIP AHEAD    @[@(@*UL$020@E@(@*          LMZT
)@@G@@J       X11,UNLOCK        . UNLOCK THE DRUM AREA@E@(@*          JNZ     ZU
)@@G@@  A2,IOERR          . CHECK FOR ERRORS    @[@(@*UL$030@A@@@(          LMZV
)@@G@@J       X11,RELEASEPAGE @E@(@*          LMJ       X11,BUILDAWS      . BUZW
)@@G@@ILD ACESS WORDS   @E@@@(          LMJ       X11,BUILDAWS      . BUILD ACZX
)@@G@@CESS WORDS  @E@@@*          JNEZ      PIOCWC UL$010     . LOOP IF MORE WZY
)@@G@@ORDS  @C@@@*          J         TERM              . DONE    @[@@@(.     ZZ
)@@G@@@[@@@(UL$020@D@@@(          SA        A0,R3             . TEMP SAVE A0  AA
)@@G@@@H@@@(          PRINT     'PIO$: UNLOCK REQUESTED FOR AREA NOT PREVIOUSLAB
)@@G@@Y LOCKED.'  @F@@@(          LA        A0,R3             . RESTORE PACKETAC
)@@G@@ ADDRESS    @D@@@(          ER        ERR$              . AND NOW DIE   AD
)@@G@@@[@(@*.     @[@@@*/.    @^@@@*. PIOR$ - READ FUNCTION @[@@@*.     @#@@@*AE
)@@G@@.  LA,U  A0,PIOPKT@#@@@*.  LMJ   X11,PIOR$@[@@@*.     @^@@@*. USES: X11,AF
)@@G@@A1-A5,R1-R3 @[@@@*.     @[@@@*PIOR$*@D@@@*          LR,U      R3,0      AG
)@@G@@        . NO PAGE LOCK  @F@@@*          J         $+2               . SKAH
)@@G@@IP THE OTHER ENTRY PIONT@]@@@*PIORL$*     @G@@@*          LR,U      R3,1AI
)@@G@@              . THE PAGE WILL BE USER-LOCKED    @F@@@*          LMJ     AJ
)@@G@@  A3,SETUPIO        . SAVE REGISTER & STUFF     @D@@@*          INC     AK
)@@G@@  UREAD             . USER READ     @[@@@*R$010 @E@(@*          LMJ     AL
)@@G@@  X11,PAGESEARCH    . LOOK FOR THE PAGE   @E@@@(          LMJ       X11,AM
)@@G@@FINDPAGE      . LOOK FOR THE PAGE   @G@@@(          TNZ       PAGULF,A1 AN
)@@G@@        . IS PAGE ALREADY USER-LOCKED?    @F@@@(          SR        R3,PAO
)@@G@@AGULF,A1      . NO, MARK IT APPROPRIATELY @G@(@*          JZ        A1,RAP
)@@G@@$020          . SKIP IF WE DON'T GOT THE PAGE   @F@@@(          JZ      AQ
)@@G@@  A2,R$020          . SKIP IF THE PAGE IS NEW   @E@(@*          TZ      AR
)@@G@@  R3                . IF NO LOCK REQUIRED @E@@@(          TZ        R3  AS
)@@G@@              . IS A LOCK REQUIRED? @G@(@*          TZ        PAGLOK,A1 AT
)@@G@@        . OR IF THE PAGE IS ALREADY LOCKED@F@@@(          TZ        PAGLAU
)@@G@@OK,A1         . YES, DOES IT NEED LOCKING?@F@(@*          J         R$04AV
)@@G@@0             . THEN DON'T READ IT AGAIN  @E@@@(          J         $+2 AW
)@@G@@              . NO, DON'T LOCK IT   @F@(@*          J         R$030     AX
)@@G@@        . GO READ AND LOCK THE PAGE @G@@@(          J         R$030     AY
)@@G@@        . YES, GO READ AND LOCK THE PAGE  @E@@@(          INC       PAGEAZ
)@@G@@H             . INDICATE A PAGE HIT @F@@@(          J         R$040     BA
)@@G@@        . GO PROCESS DATA IN PAGE   @[@@@*R$020 @E@(@*          LMJ     BB
)@@G@@  X11,FREEPAGE      . WE NEED A NEW PAGE  @F@(@*          J         R$01BC
)@@G@@0             . WE BLOCKED, SEARCH AGAIN  @E@(@*          INC       PAGEBD
)@@G@@F             . WE GOT A PAGE FAULT @G@@@*          TNZ       R3        BE
)@@G@@        . SKIP IF PAGE IS TO BE LOCKED    @E@@@*          LMJ       X11,BF
)@@G@@READPAGE      . JUST READ THE PAGE  @F@@@*          TZ        R3        BG
)@@G@@        . SKIP IF PAGE JUST READ    @[@@@*R$030 @F@@@*          LMJ     BH
)@@G@@  X11,LOCKPAGE      . READ AND LOCK THE PAGE    @F@@@(          JZ      BI
)@@G@@  A2,R$040          . IF NO I/O ERROR, SKIP THIS@F@@@(          TZ      BJ
)@@G@@  PIOFWC            . ANYTHING READ AT ALL?     @F@@@(          TE,U    BK
)@@G@@  A2,5              . I/O 5 WITH WORDS RETURNED?@D@@@(          J       BL
)@@G@@  IOERR             . NOPE, ERROR   @F@@@(          SZ        PIOSTA    BM
)@@G@@        . CLEAR THE STATUS (FOR NOW)@F@(@*          SR        R3,PAGULF,BN
)@@G@@A1      . SET THE USER LOCK FLAG    @C@(@*          JNZ       A2,IOERR  BO
)@@G@@        . UH-OH   @[@@@*R$040 @F@@@*          LMJ       X11,BUILDAWS    BP
)@@G@@  . BUILD THE ACCESS WORDS    @H@@@*          BT        A2,,*A1         BQ
)@@G@@  . PASS THE DATA FROM PAGE TO BUFFER     @H@(@*          LMJ       X11,BR
)@@G@@LINKPAGE      . WE'RE DONE WITH THIS PAGE, LINK IT    @H@@@(          LMBS
)@@G@@J       X11,RELEASEPAGE   . WE'RE DONE WITH THIS PAGE; RELEASE IT @H@@@*BT
)@@G@@          JNEZ      PIOCWC R$010      . LOOP IF WE GOT MORE WORDS TO REABU
)@@G@@D     @[@@@*TERM  @E@@@*          DL        A2,PIOUAW         . GET ORIGBV
)@@G@@INAL DATA   @G@@@*          DS        A2,PIOBAW         . AND PASS BACK BW
)@@G@@TO THE PACKET     @F@@@*          SSL       A2,18             . MOVE THEBX
)@@G@@ WORD COUNT DOWN  @F@@@*          SA        A2,PIOFWC         . FUDGE THBY
)@@G@@E FINAL WORD COUNT@]@@@*PIO$EXIT*   @[@@@*EXIT  @F@@@(          LA      BZ
)@@G@@  A3,PIOSTA         . LEAVE IO STATUS IN A3     @E@@@*          LX      CA
)@@G@@  X11,PIOX11        . RESTORE REGISTERS   @B@@@*          LXM       X10,CB
)@@G@@PIOX10        .   @E@@@*          J         0,X11             . DONE, ANCC
)@@G@@D RETURN    @[@(@*.     @[@@@*/.    @ @@@*.  PIOW$ - WRITE FUNCTION     CD
)@@G@@@[@@@*.     @#@@@*.  LA,U  A0,PIOPKT@#@@@*.  LMJ   X11,PIOW$@^@@@*. USESCE
)@@G@@: X11,A1-A5,R1-R3 @[@@@*.     @[@@@*PIOW$*@E@@@*          LMJ       A3,SCF
)@@G@@ETUPIO        . DO WHAT IT SAYS     @E@@@*          INC       UWRITE    CG
)@@G@@        . USER WRITE REQUEST  @[@@@*W$010 @E@(@*          LMJ       X11,CH
)@@G@@PAGESEARCH    . LOOK FOR THE PAGE   @E@@@(          LMJ       X11,FINDPACI
)@@G@@GE      . LOOK FOR THE PAGE   @F@(@*          JNZ       A1,W$030        CJ
)@@G@@  . SKIP IF WE GOT THE PAGE   @E@(@*          LMJ       X11,FREEPAGE    CK
)@@G@@  . GET A FREE PAGE     @F@(@*          J         W$010             . WECL
)@@G@@ BLOCKED, SEARCH AGAIN  @F@@@(          JZ        A2,W$020          . SKCM
)@@G@@IP IF PAGE IS NEW NEW   @E@@@(          INC       PAGEH             . MACN
)@@G@@RK A PAGE HIT     @E@@@(          J         W$050             . GO XFER CO
)@@G@@THE DATA    @[@@@*.     @F@@@*. WE HAVE A FREE PAGE; FIRST SEE IF WE CANCP
)@@G@@ AVOID THE READ BEFORE  @E@@@*. WRITE: THE USER'S CURRENT ACCESS WORD MUCQ
)@@G@@ST BEGIN ON A PAGE@E@@@*. BOUNDARY AND THE CURRENT WORD COUNT MUST AT LECR
)@@G@@AST BE EQUAL@#@@@*. TO THE PAGESIZE.@[@@@*.     @G@(@*          LA      CS
)@@G@@  A2,PIOCDA         . GET THE CURRENT DRUM ADDRESS    @G@@@(W$020     LACT
)@@G@@        A2,PIOCDA         . GET THE CURRENT DRUM ADDRESS    @G@@@*      CU
)@@G@@    DSL       A2,36             . CHECK FOR BOUNDARY CONDITIONS   @F@@@*CV
)@@G@@          DI        A2,PAPSS          . IS IT ON A PAGE BOUNDARY? @F@(@*CW
)@@G@@          JNZ       A3,W$020          . SKIP IF NOT - WE MUST READ@F@@@(CX
)@@G@@          JNZ       A3,W$030          . SKIP IF NOT - WE MUST READ@G@(@*CY
)@@G@@          MSI       A2,PAPSS          . ROUND BACK TO A PAGE BOUNDARY   CZ
)@@G@@@F@(@*          SA        A2,PAGDA,A1       . SET THE PAGE DRUM ADDRESS DA
)@@G@@@G@(@*          SA        A0,PAGIOL,A1      . AND SET THE IO LINK AS WELDB
)@@G@@L     @F@@@*          LA        A2,PIOCWC         . GET THE CURRENT WORDDC
)@@G@@ COUNT@G@(@*          JLE       A2,PAPS W$030     . SKIP IF WORD COUNT IDD
)@@G@@S ENOUGH    @G@@@(          JLE       A2,PAPS W$050     . SKIP IF WORD CDE
)@@G@@OUNT IS ENOUGH    @G@@@(W$030 .   JNEZ      PIOMTA W$040      . IF MULTIDF
)@@G@@-THREAD ACCESS, MUST RBW@F@@@( .        LA        A2,PIOCDA         . GEDG
)@@G@@T CURRENT DISK ADDRESS  @H@@@( .        JLE       A2,PIOHWA W$050   . IFDH
)@@G@@ HIGH WRITE ADDR IS LESS, DON'T READ@[@@@*.     @G@@@*. WE MUST READ BEFDI
)@@G@@ORE WRITE;  ALLOW IO ERROR 5 ONLY (OR 0, OF COURSE).  @[@@@*.     @[@(@*DJ
)@@G@@W$020 @E@(@*          LMJ       X11,LOCKPAGE      . READ IN THE PAGE    DK
)@@G@@@G@@@(W$040     LX,U      X11,LOCKPAGE      . ASSUME WE'RE TO LOCK THE PDL
)@@G@@AGE   @H@@@(          TNZ       PIOMTA            . IS THE MULTI-THREAD DM
)@@G@@ACCESS FLAG SET?  @F@@@(          LX,U      X11,READPAGE      . NO, JUSTDN
)@@G@@ READ THE PAGE    @F@@@(          LMJ       X11,,X11          . READ(LOCDO
)@@G@@K) IN THE PAGE    @F@@@*          TE,U      A2,5              . ALLOW EMDP
)@@G@@PTY FILE ON WRITES@E@@@*          JNZ       A2,IOERR          . IF NONZEDQ
)@@G@@RO - BADNEWS@E@@@*          SZ        PIOSTA            . CLEAR ANY STATDR
)@@G@@US    @G@@@*          INC       PRBW              . COUNT ANOTHER READ BDS
)@@G@@EFORE WRITE @[@@@*.     @B@@@*. THE PAGE IS IN. MARK IT AS MODIFIED.    DT
)@@G@@@[@@@*.     @[@(@*W$030 @D@(@*          LA,U      A2,1              . GEDU
)@@G@@T A BIT     @F@@@(W$050     LA,U      A2,(1*/17)*/-12+1 . GET BUSY BIT +DV
)@@G@@ CHANGE BIT @F@(@*          SA        A2,PAGMOD,A1      . SET THE MODIFIDW
)@@G@@ED FLAG     @H@@@(          SA        A2,PAGMOD,A1      . MARK AS MODIFIDX
)@@G@@ED (AND BUSY STILL)     @F@@@*          LMJ       X11,BUILDAWS      . BUDY
)@@G@@ILD THE ACCESS WORDS    @G@@@*          BT        A1,,*A2           . MODZ
)@@G@@VE DATA FROM BUFFER TO PAGE   @G@@@(          LA        A2,PIOCDA       EA
)@@G@@  . GET THE CURRENT DISK ADDRESS    @H@@@(          TG        A2,PIOHWA EB
)@@G@@        . IS HIGEST WRITE ADDRESS STILL HIGHER? @F@@@(          SA      EC
)@@G@@  A2,PIOHWA         . NO, POST NEW HIGH ADDRESS @F@@@*          LA      ED
)@@G@@  A1,PIOCPL         . GET THE CURRENT PAGE LINK @F@(@*          JNEZ    EE
)@@G@@  PAGULF,A1 W$040   . SKIP IF USER-LOCKED PAGE  @F@@@(          JNEZ    EF
)@@G@@  PAGULF,A1 W$060   . SKIP IF USER-LOCKED PAGE  @G@@@*          TZ      EG
)@@G@@  PIOWTF            . IS THE WRITE-THROUGH FLAG ON?   @G@@@*          LMEH
)@@G@@J       X11,WRITEPAGE     . YES, WRITE OUT THE PAGE NOW     @[@(@*W$040 EI
)@@G@@@[@@@(W$060 @E@(@*          LMJ       X11,LINKPAGE      . LET THE PAGE GEJ
)@@G@@O     @E@@@(          LMJ       X11,RELEASEPAGE   . LET THE PAGE GO     EK
)@@G@@@F@@@*          JNEZ      PIOCWC W$010      . LOOP IF MORE TO WRITE     EL
)@@G@@@D@@@*          J         TERM              . THAT'S ALL    @[@(@*.     EM
)@@G@@@[@@@*/.    @ @@@*. PIOFO$ - FILE OPEN ROUTINE  @[@@@*.     @#@(@*.  LA,EN
)@@G@@U  A0,PIOPKT@ @@@(.  A1 = HIGHEST WRITE ADDRESS @ @@@(.  A0 = PIO$ PACKEEO
)@@G@@T ADDRESS   @#@@@(.  LMJ  X11,PIOFO$@^@(@*.  LA,U  A1,PAGEAREA    @^@(@*EP
)@@G@@.  LMJ   X11,PIOFO$     @[@@@*.     @#@@@*. USES: X11,A2,A3 @[@@@*.     EQ
)@@G@@@C@@@(EX10      EQU       0152              . EXEC X10@[@@@(.     @]@@@*ER
)@@G@@PIOFO$*     @E@@@(          LMJ       A3,SETUP          . SETUP PARAMETEES
)@@G@@RS    @F@@@(          LA        A3,PAPSS          . GET PAGE SIZE IN SECET
)@@G@@TORS  @F@@@(          TZ        PIOWAF            . WORD ADDRESSABLE FILEU
)@@G@@E?    @F@@@(          LA        A3,PAPS           . GET PAGE SIZE IN WOREV
)@@G@@DS    @H@@@(          DSL       A1,36             . NOW COMPUTE NEXT HIGEW
)@@G@@HER PAGE BOUNDARY @F@@@(          DI        A1,A3             . GET PAGEEX
)@@G@@ MULTIPLE FACTOR  @D@@@(          TZ        A2                . ANY REMAEY
)@@G@@INDER @G@@@(          AA,U      A1,1              . YES, INC TO NEXT PAGEZ
)@@G@@E MULTIPLE  @H@@@(          MSI       A1,PAPSS          . NOW COMPUTE ADFA
)@@G@@DRESS OF THE NEXT PAGE  @F@(@*          SA        A1,PIOPAL         . SEFB
)@@G@@T THE PAGING AREA LINK  @F@@@(          SA        A1,PIOHWA         . POFC
)@@G@@ST HIGHEST WRITE ADDRESS@D@(@*          LMJ       A3,SETUP          . SEFD
)@@G@@T UP STUFF  @E@@@*          LA,S2     A2,PASEMA         . GET THE TS FLAFE
)@@G@@G     @E@@@*          TE,U      A2,057            . IS IT REALLY THERE? FF
)@@G@@@E@@@*          ER        ERR$              . NOPE - TOUGH LUCK   @H@@@*FG
)@@G@@          ER        TSQRG$            . TURN ON TEST AND SET REGISTRATIOFH
)@@G@@N     @G@@@(          LA        A2,EX10           . GET UNIQUE ACTIVITY FI
)@@G@@ID (ASL)    @E@@@(          SA        A2,PIOAID         . POST ACTIVITY FJ
)@@G@@ID    @E@@@*          $IF       STATS             . CONDITIONAL CODE    FK
)@@G@@@G@@@*          LX        X11,PIOSTL        . GET THE STAT SUBROUTINE LIFL
)@@G@@NK    @E@@@*          TZ,U      0,X11             . SKIP IF NO SUBROTINEFM
)@@G@@@F@@@*          LMJ       X11,STATC,X11     . CALL THE CLEAR SUBROUTINE FN
)@@G@@@#@@@*          $ENDF   @C@@@*          J         EXIT              . REFO
)@@G@@TURN  @[@(@*.     @[@(@*.     @[@@@(/.    @ @@@*. PIOPF$ - PAGE FLUSH ROFP
)@@G@@UTINE @ @@@*. PIOFC$ - FILE CLOSE ROUTINE @[@@@*.     @#@(@*.  LA,U  A0,FQ
)@@G@@PIOPKT@ @@@(.  A0 = PIO$ PACKET ADDRESS   @^@@@*.  LMJ   X11,PIOXX$     FR
)@@G@@@ @@@(.  A1 = HIGHEST WRITE ADDRESS @[@@@*.     @^@@@*. USES: X11,A1-A5,FS
)@@G@@R1-R3 @[@@@*.     @]@@@*PIOPF$*     @F@@@*          LR,U      R3,0      FT
)@@G@@        . DON'T CLOBBER PAGE INDENTS@^@@@*          J         $+2 @]@@@*FU
)@@G@@PIOFC$*     @E@@@*          LR,U      R3,1              . FORGET PAGE IDFV
)@@G@@ENTS  @ @%@*          LMJ       A3,SETUP  @ @@@%          LMJ       A3,SFW
)@@G@@ETUPIO@F@@@(          SZ        PIOBLK            . CLEAR THE 'BLOCK' FLFX
)@@G@@AG    @[@@@*T$010 @E@@@*          LOCK      PASEMA            . LOCK THEFY
)@@G@@ PAGE QUEUE @F@(@*          LA        A1,PAFPL          . GET THE FIRST FZ
)@@G@@PAGE LINK   @F@@@(          LA        A1,PALPL          . GET THE LAST PGA
)@@G@@AGE LINK    @[@@@*T$020 @F@@@*          JZ        A1,T$040          . QUGB
)@@G@@IT IF NO MORE PAGES     @E@@@*          LA        A2,PAGIOL,A1      . GEGC
)@@G@@T DEFINITION LINK @G@@@(          JNE,U     A2,PIOPKT T$030   . SKIP THIGD
)@@G@@S PAGE IF IT'S NOT OURS @F@@@(          JPOS      PAGFW,A1 T$025    . SKGE
)@@G@@IP IF PAGE NOT BUSY     @G@@@(          LMJ       X11,AWAITPAGE     . WEGF
)@@G@@ MUST AWAIT THE BUSY PAGE     @D@@@(          J         T$010           GG
)@@G@@  . GO TRY AGAIN  @[@@@(T$025 @G@@@(          TNZ       PAGFLG,A1       GH
)@@G@@  . IS THE PAGE LOCKED OR MODIFIED? @G@@@(          TZ        R3        GI
)@@G@@        . NO, MUST WE CLEAR THE I/O LINK? @E@@@(          J         $+2 GJ
)@@G@@              . YES, GET THE PAGE   @F@@@(          J         T$030     GK
)@@G@@        . NO, PASS THIS PAGE BY     @E@(@*          DL        A2,,A2    GL
)@@G@@        . GET THE FILENAME    @G@(@*          DJNE      A2,PIOPKT T$030 GM
)@@G@@  . LOOP IF THIS ISN'T OUR PAGE     @G@(@*          JEZ,H1    PAGFW,A1 TGN
)@@G@@$030    . SKIP IF NOT MODIFIED OR LOCKED  @G@(@*          LMJ       X11,GO
)@@G@@UNLINK        . DETACH THIS GUY FROM THE QUEUE  @D@@@(          LMJ     GP
)@@G@@  X11,ACQUIREPAGE   . GET THIS PAGE @E@@@*          UNLOCK    PASEMA    GQ
)@@G@@        . LET THE QUEUE GO    @D@(@*          TZ        PAGMOD,A1       GR
)@@G@@  . MODIFIED?     @E@@@(          LA        A2,PAGMOD,A1      . GET MODIGS
)@@G@@FIED BIT    @E@@@(          TEP,U     A2,1              . IS IT MODIFIEDGT
)@@G@@?     @E@@@*          LMJ       X11,WRITEPAGE     . YES, WRITE IT OUT   GU
)@@G@@@C@@@*          TZ        PAGLOK,A1         . LOCKED ?@D@@@*          LMGV
)@@G@@J       X11,UNLOCKPAGE    . YES, UNLOCK IT@F@(@*          SA        A1,PGW
)@@G@@IOCPL         . SET OUR CURRENT PAGE LINK @E@@@*          TZ        R3  GX
)@@G@@              . ERASE THE PAGE?     @F@@@*          SZ        PAGIOL,A1 GY
)@@G@@        . YES, FORGET WHAT'S IN IT  @F@(@*          LMJ       X11,LINKPAGZ
)@@G@@GE      . PUT HIM BACK ON THE QUEUE @E@@@(          LMJ       X11,RELEASHA
)@@G@@EPAGE   . LET THE PAGE GO     @D@@@*          J         T$010           HB
)@@G@@  . TRY AGAIN     @[@@@*T$030 @E@(@*          LA        A1,PAGNPL,A1    HC
)@@G@@  . GET TO THE NEXT PAGE@F@@@(          LA        A1,PAGPPL,A1      . GEHD
)@@G@@T TO THE PREVIOUS PAGE  @C@@@*          J         T$020             . LOHE
)@@G@@OP    @[@@@(.     @F@@@(. NOW CALL THE TRACE SUMMARY ROUTINE.  NOTE THATHF
)@@G@@ WE ARE LEAVING   @H@@@(. THE PAGE QUEUE LOCKED; THIS IS TO ALLOW THE SUHG
)@@G@@MMARY ROUTINE TO HAVE ACCESS  @^@@@(. TO THE PAGE QUEUE.    @[@@@(.     HH
)@@G@@@[@@@*T$040 @E@(@*          UNLOCK    PASEMA            . UNLOCK THE QUEHI
)@@G@@UE    @ @@@*          $IF       STATS     @G@@@*          LA        A3,PHJ
)@@G@@IOTRL         . GET THE TRACE SUBROUTINE LINK   @F@(@*          JZ      HK
)@@G@@  A3,EXIT           . SKIP IF NO SUBROUTINE     @F@@@(          JZ      HL
)@@G@@  A3,T$050          . SKIP IF NO SUBROUTINE     @G@@@*          TZ      HM
)@@G@@  PIOTRA            . UNLESS THERE IS NO TRACING...   @G@@@*          LMHN
)@@G@@J       X11,TRACES,A3     . CALL THE TRACE SUMMARY ROUTINE  @[@@@(T$050 HO
)@@G@@@#@@@*          $ENDF   @E@@@(          UNLOCK    PASEMA            . UNHP
)@@G@@LOCK THE QUEUE    @H@@@(          LA        A1,PIOHWA         . RETURN WHQ
)@@G@@ITH HIGHEST WRITE ADDRESS     @F@@@(          TZ        PIOWAF          HR
)@@G@@  . WORD ADDRESSABLE FILE?    @G@@@(          MSI,U     A1,28           HS
)@@G@@  . YES, CONVERT SECTORS TO WORDS   @C@(@*          J         EXIT      HT
)@@G@@        . BYE     @C@@@(          J         TERM              . BYE     HU
)@@G@@@[@@@*.     @[@@@:/.    @ @@@:. PIOCBB$  - CLEAR BUSY BIT   @[@@@:.     HV
)@@G@@@ @@@:.  A0 = PIO$ PACKET ADDRESS   @#@@@:.  LMJ X11,PIOCBB$@ @@@:.  A0 HW
)@@G@@= PIO$ PACKET ADDRESS   @[@@@:.     @H@@@:.   THIS ROUTINE IS USED TO CLHX
)@@G@@EAR THE BUSY BIT OF A PAGE WHEN AN I/O INTERUPT @H@@@:. HAS OCCURRED WHEHY
)@@G@@N ATTMPTING TO PERFORM SOME KIND OF I/O.   THE PROBLEM IS   @H@@@:. THATHZ
)@@G@@ THE PAGE HAS BEEN MARKED BUSY PRIOR TO THE ATTEMPTED I/O AND WHEN THE  IA
)@@G@@@H@@@:. PAGE IS TO BE RELEASED, THE BUSY BIT MAKES THE PAGE SYSTEM THINKIB
)@@G@@ SOMEONE    @H@@@:. ELSE HAS THE PAGE.  SINCE THE PAGE SYSTEM THEN SUSPEIC
)@@G@@NDS ITSELF TO WAIT FOR  @H@@@:. THE NON-EXISTENT OTHER ACTIVITY TO FREE ID
)@@G@@THE PAGE.  THE SYSTEM CORRECTLY     @A@@@:. CAUSES AN AD - AMBIGUITY ERRIE
)@@G@@OR.   @[@@@:.     @]@?@:PIOCBB$   . @]@@@?PIOCBB$*   .@B@@@:          LMIF
)@@G@@J       A3,SETUP          .   @D@@@:          LMJ       X11,RELEASEPAGE IG
)@@G@@  . FREE THE PAGE @D@@@:          J         EXIT              . AND THENIH
)@@G@@ LEAVE@#@@@*          END     _@@@@@/K@[38C1W@@@8K)[26/K@[3>%9K@@0/K@[3>II
)@@G@@C9K@@ ') -188KK[2//K@[38C!W@@@8K)[2_/K@[3(%9K@@0*[S@@@*SDFF*@#@@@@@MASM,IJ
)@@G@@E PSDFPROCS @[@[@@@EOF  ___@@@@A@C@B 1012 FORMAT(2X,I3,6X,3(7X,F10.5))  IK
)@@G@@@A@@@C 1012 FORMAT(1X,I3,7X,3(7X,F10.5))  @ @@@A 1014 FORMAT(11X,3(7X,F1IL
)@@G@@*[S@@@*SDFF*@A@@@@@RUN,A AKS,016118ALAN,ALAN,999,999  @#@@@@@ASG,A PSDFIIM
)@@G@@O.    @ @@@[@LIB.USE,A ASM$PF,MAP$PF,RLIB.@#@@@@@FLIST PSDFIO.    @^@]@@IN
)@@G@@@LINK PSDFIO.PSDFTEST   @#@@@]@LINK,S PSDFTEST  @[@@@@@XQT  ___@@@^@)^@)IO
)@@G@@CC1 )1 )%F@8^@)^@)^@)^@)^@) 0)C9 E))E-CC*)D(NC8)CD#CT ETN^[RD9MC))@I@@@]IP
)@@G@@^@)^@)^@)^@)^@)E[NC-AE8)^@)^@)E9 ELM^[KDTO^@)^@)*[S@@@*SDFF*@#@@@@@USE TIQ
)@@G@@PF$$$,TPF$  @^@@@@@ASG,T TPF$$,///9999    @#@@@@@USE TPF$,TPF$$   @A@@@@IR
)@@G@@@LOAD,R PSDFIO.PSDFR,.PSDFRB,.PSDFW @^@@@@@LOAD PSDFIO.PSDFPROCS  @#@[@@IS
)@@G@@@SAVE,LP RLIB.    @#@]@[@SAVE,L RLIB.     @#@@@]@SAVE,LP RLIB.    @#@]@[IT
)@@G@@@PACK,P RLIB.     @]@@@]@PREP RLIB. @]@@@@@CHG,V RLIB.@]@@@@@FREE TPF$  IU
)@@G@@@#@@@@@USE TPF$,TPF$$$  @#@@@@@FREE,A TPF$$$    ___@@@@@@@@@@@@@@@@@@@@@IV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*[S@@[*SDFF*@^@@@A 8)^@)IX
)@@G@@^@)^@)^@)CDSEK=^@)@^@@@A^@)^@)^@)^@)^@)CDNCTDDC)@[@@@A 0)^@)@G@@@A 0)E[NIY
)@@G@@C-AE- ETO^@!^[KIL\G92GD!^[4H8)I->IT4^[4H[>^[KET^C0)I[-GT:GD$G*,^@)@[@@@BIZ
)@@G@@ 0)^@)@G@@@B 0)ET0G(<^@4^[<GD,^[+G*)^9ND1JD9KFC$^[&H92^[-^[ND1JD9KFC)I-2JA
)@@G@@GD<G*?^[\IK)@H@@@B 0)^9OEL[CT AC$^[4H[2I*)^9OEL[CT A)$^[&H92^[KDDJ^))I-2JB
)@@G@@GD<HD,G8)G15H1<I-(H9,IS,@[@@@B 0)^@)@L@@@BE-MCD#C(A^@)^@)C(LE*)^@)^@)^@)JC
)@@G@@^9OEL[CT AC$B).^-KCDM @4 C/B*$E-MCD#C*4^8!B0=E[[EK*A)( *$E-MCD#C*0^8)^@)JD
)@@G@@@[@@@A 0)^@)@A@@@A^@)^@)^@)^@)^@)E[NC-AC1DC(GC-N^[KDTO@[@@@A 0)^@)@^@@@AJE
)@@G@@^)*AC(^@)^@)^@)D-DE))^@)@]@@@AE[NC-AE- ETO@A@@@B^@)^@)^@)^@)^@)ETID9JE[TJF
)@@G@@^@)^@)^9O^8)@I@@@A^@)^@)^@)^@)^@)CTNC0)^@)^@)^@)^9@CDNC8?E))E[NC-AE- ETOJG
)@@G@@^8) 0)CDNETDC9I^[OC(NE))C1DD- @J@B@A^@)^@)^@)^@)^@)E[NC-AE9J^@)^@)E[FE))JH
)@@G@@A@? -P^@)^@)^@)^@)^@) 0)D9KC(I^[RELDE- ^[[E))E9JEL^^@0@J@@@B^@)^@)^@)^@)JI
)@@G@@^@)E[NC-AE9J^@)^@)E9JC(MEK)E[FE))A@? -P^@)^@) 0)D9KC(I^[RELDE- ^[[E))E9JJJ
)@@G@@EL^^@0@K@@@A^@)^@)^@)^@)^@)D-S^@)^@)^@)^@)F@8 )*AK?D(NC9GETO C)^@)^@) 0)JK
)@@G@@C9 E))DDIC- F@)E-J^[HC(NET[C9 ES)^@)@J@@@A^@)^@)^@)^@)^@)D-M -P^@)^@)^@)JL
)@@G@@EK8 -HETBCTIE))^@)^@)^@)^@) 0)C9 E))^S)D9A^[HC(NET[C9 ES)^@)@J@@@A^@)^@)JM
)@@G@@^@)^@)^@)DK)^@)^@)^@)^@)E)2^@)^@)^@)^@)^@)^@)^@)^@) 0)ETOCDME))E-CC*)E9MJN
)@@G@@DDOC*)D-JD9K@J@@@AE)1^@)^@)^@)^@)D-[^@)^@)^@)^@)CC2 )?F@8^@)^@)^@)^@)^@)JO
)@@G@@^@) 0)C9 E))E-CC*)CTJD1OELJD))E9JEL^@K@@@A^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)JP
)@@G@@CC1 )1 )%F@8^@)^@)^@)^@)^@) 0)C9 E))E-CC*)D(NC8)CD#CT ETN^[RD9MC))@I@@@AJQ
)@@G@@^@)^@)^@)^@)^@)E[NC-AE8)^@)^@)E9 ELM^[KDTO^@)^@)^@)^@)^@) 0)E9MDDOC*)CC)JR
)@@G@@D( ETNCDBC*)@M@@@AE)2^@)^@)^@)^@)DLBC))^@)^@)^@)EK8 -OAC)^@)^@)^@)^@)^@)JS
)@@G@@^@) 0)CTJE(IE))D( ETNCDBC*)^0)CTJD1ODDIE( ^[DC0)D(JEL @L@B@A^@)^@)^@)^@)JT
)@@G@@^@)E[NC-AE9#^@)^@)E9 ELM^[KDTO^@)^@)^@)^@)^@) 0)CTGD9NC*)E9MDDOC*) [AD-PJU
)@@G@@ETC^[KCDBC(N C)^@)@L@@@B^@)^@)^@)^@)^@)E[NC-AE9#^@)^@)E9#C(MEK)E[FE))^@)JV
)@@G@@^@)^@)^@) 0)CTGD9NC*)E9MDDOC*) [AD-PETC^[KCDBC(N C)^@)@C@@@A^@)^@)^@)^@)JW
)@@G@@^@)CDKELDD1O^@)^@)^9RIL(I-4G(,^[JDS$@J@B@A^@)^@)^@)^@)^@)E[NC-AELJ^@)^@)JX
)@@G@@E[FE))A@? -P^@)^@)^@)^@)^@) 0)D9KC(I^[MC([C))CDO^[RD9MC))A@)@J@@@B^@)^@)JY
)@@G@@^@)^@)^@)E[NC-AELJ^@)^@)ELJC(MEK)E[FE))A@? -P^@)^@) 0)D9KC(I^[MC([C))CDOJZ
)@@G@@^[RD9MC))A@)@J@@@A^@)^@)^@)^@)^@)D-S^@)^@)^@)^@)F@8 )*AK?D(NC9GETO C)^@)KA
)@@G@@^@) 0)C9 E))D( ETNCDBC*)DDIC- F@)^@)@K@@@A^@)^@)^@)^@)^@)D-M -P^@)^@)^@)KB
)@@G@@EK8 -HETBCTIE))^@)^@)^@)^@) 0)C9 E))CTJE(IE))D9A^[HC(NET[C9 ES)^@)@I@@@AKC
)@@G@@^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)E)4^@)^@)^@)^@)^@)^@)^@)^@) 0)ETOCDME))EL KD
)@@G@@CD^^[GD9JE@)@L@@@AE)3^@)^@)^@)^@)E[NC-AEK)^@)^@)EL ELM -MC(JC0)E[FE))CLPKE
)@@G@@C1[CTR^@,^[MC([C))CC)D( ETNCDBC*)DDIE-J^[]E(A^@)@J@@@A^@)^@)^@)^@)^@)CT[KF
)@@G@@D-G^@)^@)^@)CTJD(KCDMC*)^@)^@)^@)^@)^@) 0)CTJD(KCDMC*)CLPC0)E9DE-C^[HETBKG
)@@G@@@F@@@A^@)^@)^@)^@)^@)C(M^@)^@)^@)^@)C(MEK=^@)^@)^@)^@)^@)^@)^@) 0)CL[C)-KH
)@@G@@@I@@@AE)4^@)^@)^@)^@)DLBC))^@)^@)^@)EK8 -OAS)^@)^@)^@)^@)^@)^@) 0)CTJE(IKI
)@@G@@E))D( ETNCDBC(N^@)@C@@@A^@)^@)^@)^@)^@)CDKELDD1O^@)^@)^9MG(-G))D9F^8)^@)KJ
)@@G@@@K@@@A^@)^@)^@)^@)^@)E[NC-AEK)^@)^@)EL ELM -OA*)E[FE))CLPC1[CTR^@,^[MC([KK
)@@G@@C))CLPE))ETCD9PD-^^[BC(O^[ D9A@F@@@A^@)^@)^@)^@)^@)C(M^@)^@)^@)^@)C(MEK=KL
)@@G@@^@)^@)^@)^@)^@)^@)^@) 0)CL[C)-@D@@@AE)5^@)^@)^@)^@)CDKELDD1O^@)^@)^9MG(-KM
)@@G@@G))C(JC0)D9F^8)^@)@M@@@A^@)^@)^@)^@)^@)D-S^@)^@)^@)^@)F@8 )* *2 -HETBD-NKN
)@@G@@E):D(NC9#D1O K2 *2 C) 0)C9 E))CL[CTFE9[EL^^[HETB^[DD1^C(S^@)@C@@@A^@)^@)KO
)@@G@@^@)^@)^@)D-M -P^@)^@)^@)EK8 -HETBCTIE))^@)@K@@@A^@)^@)^@)^@)^@)DK)^@)^@)KP
)@@G@@^@)^@)E)7^@)^@)^@)^@)^@)^@)^@)^@) 0)ETOCDME))CL[CTFE9[EL^^[MC([C))D-JD9KKQ
)@@G@@@J@@@AE)6^@)^@)^@)^@)E[NC-AEL]^@)^@)EL ELM -MC(JC1]^[KDTO^[]E(ACD#E8) 0)KR
)@@G@@EL CD^^[]CD#DTRCDMC))^@)@K@@@A^@)^@)^@)^@)^@)CT[D-G^@)^@)^@)CTJD(KCDMC*)KS
)@@G@@^@)^@)^@)^@)^@) 0)CTJD(KCDMC*)CLPC0)E9DE-C^[HC(NET[C9 @F@@@A^@)^@)^@)^@)KT
)@@G@@^@)C(M^@)^@)^@)^@)C(MEK=^@)^@)^@)^@)^@)^@)^@) 0)CL[C)-@N@@@AE)7^@)^@)^@)KU
)@@G@@^@)DLBC))^@)^@)^@)EK8 -OA0)^@)^@)^@)^@)^@)^@) 0)CTJE(IE))D( ETNCDBC(N^@&KV
)@@G@@^[#D9IE-DD1PC*)DDA^[HD9MC*)^@)@E@@@A^@)^@)^@)^@)^@)CDKELDD1O^@)^@)^9MG(-KW
)@@G@@G))GL-GT:I9-IL=^[JDS$^@)@I@@@A^@)^@)^@)^@)^@)E[NC-AEL]^@)^@)EL ELM -OB@)KX
)@@G@@E[FE))CLPC1[CTR^@,^[MC([C))C1JEK)C(JC0)^@)@F@@@A^@)^@)^@)^@)^@)C(M^@)^@)KY
)@@G@@^@)^@)C(MEK=^@)^@)^@)^@)^@)^@)^@) 0)D9JE[N@F@@@AE)8^@)^@)^@)^@)CDKELDD1OKZ
)@@G@@^@)^@)^9MG(-G))GL-GT:I9-IL=^[ D9A^[JDS$^@)@H@B@A^@)^@)^@)^@)^@)E[NC-AEL#LA
)@@G@@^@)^@)E[FE))^@)^@)^@)^@)^@)^@)^@) 0)CTGD9NC*)EL CD^^@)@H@@@B^@)^@)^@)^@)LB
)@@G@@^@)E[NC-AEL#^@)^@)EL#C(MEK)E[FE))^@)^@)^@)^@) 0)CTGD9NC*)EL CD^^@)@C@@@ALC
)@@G@@^@)^@)^@)^@)^@)CDKELDD1O^@)^@)^9[H-?^[=H9,G*,^8)@B@@@A^@)^@)^@)^@)^@)C(MLD
)@@G@@^@)^@)^@)^@)C(SDDO^))^@)@[@@@A 0)^@)@E@@@BELJC(MEK)^@)^@)CDKELDD1O^@)^@)LE
)@@G@@^9MG(-G))H90G(,^[>IL2H92^C$^@)@A@@@B^@)^@)^@)^@)^@)C(M^@)^@)^@)^@)C(MEK=LF
)@@G@@@D@@@AEL ELM^@)^@)^@)CDKELDD1O^@)^@)^9MG(-G))G(2IL\IK-^8)^@)@A@@@A^@)^@)LG
)@@G@@^@)^@)^@)C(M^@)^@)^@)^@)C(MEK=@E@@@BEL#C(MEK)^@)^@)CDKELDD1O^@)^@)^9MG(-LH
)@@G@@G))GT?H93G*)G(2IL\IK-^8)@A@@@B^@)^@)^@)^@)^@)C(M^@)^@)^@)^@)C(MEK=@E@@@BLI
)@@G@@E9JC(MEK)^@)^@)CDKELDD1O^@)^@)^9RIL(I->^[\I[>H0)G(2IL\IK-^8)@A@@@B^@)^@)LJ
)@@G@@^@)^@)^@)C(M^@)^@)^@)^@)C(MEK=@D@@@AE9 ELM^@)^@)^@)CDKELDD1O^@)^@)^9RIL(LK
)@@G@@I->^[>IL2H92^C$^@)@A@@@A^@)^@)^@)^@)^@)C(M^@)^@)^@)^@)C(MEK=@E@@@BE9#C(MLL
)@@G@@EK)^@)^@)CDKELDD1O^@)^@)^9RIL(I->^[<H-\IT>^[>IL2H92^C$@A@@@B^@)^@)^@)^@)LM
)@@G@@^@)C(M^@)^@)^@)^@)C(MEK=@G@@@AEL D9A^@)^@)^@)CDKELDD1O^@)^@)^9PH1>J[0G(<LN
)@@G@@I->G))C(JC0)H9,^[2G(-G)-^8)^@)@A@@@A^@)^@)^@)^@)^@)C(M^@)^@)^@)^@)C(MEK=LO
)@@G@@@I@@@AEL D9ACK)^@)^@)CDKELDD1O^@)^@)^9PH1>J[0G(<I->^[ D9A^[\H0)IL>GD=^[+LP
)@@G@@GD<HT7GD2G)-^8)^@)@A@@@A^@)^@)^@)^@)^@)C(M^@)^@)^@)^@)C(MEK=@[@@@A 0)^@)LQ
)@@G@@@L@@@A 0)CTJD(KCDMC*) *)EL\I(4HD,G*)I-\^[<H9!I[-IL>^[4H[>^[<H9,I->H14IS)LR
)@@G@@H9&^[4H[>^[+I(&G1>IK)I9(I-*^[4H[>^@)@C@@@A 0)GT5IL2G(,I))H(>IT3GD$G*)HD,LS
)@@G@@G->J[>G))GL9^[SB@,@[@@@A 0)^@)@E@@@A 0)^@1 -SB@)B*) [?G(,G94H@?GD=G-2G(3LT
)@@G@@IS(^[\G0)H(>IT3GD$G*)^@)@C@@@A 0)^[[AC)B*)H->H1$I-*^[\G0)CLPC0)GT\H14G(,LU
)@@G@@I-3^@)@ @@@A 0)^[]E(A^@.^[=GD4GC)IL>GD=^@)@ @@@A 0)^[GD(E^@)F@1AC?CTJD(KLV
)@@G@@CDMC*)@#@@@A 0)^@/I(,G(1I(-H)"@#@@@A 0)^@/G(1I(-H)"^@)@[@@@A 0)^@)@]@@@ALW
)@@G@@CTJD(KCDMC*)@K@@@E^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC3 -KETMD))^@)^@)^@)^@)LX
)@@G@@^@) 0)C9 E))E-JE-[D))EL CTJEL^^[GC(IC9OD@)@I@E@A^@)^@)^@)^@)^@)E-  -CAC)LY
)@@G@@^@)^@)CC1 )1 -SB@)^@)^@)^@)^@)^@) 0)D- D1BE-CES)C(LE([D)_^@)@I@@@E^@)^@)LZ
)@@G@@^@)^@)^@)E-  -CAC)^@)^@)CC3 )1 -SB@)^@)^@)^@)^@)^@) 0)D- D1BE-CES)C(LE([MA
)@@G@@D)_^@)@J@@@A^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)A@?F@1AC)^@)^@)^@)^@)^@)^@) 0)MB
)@@G@@D1J ))EL E-PELI^[ID8)C9JD9^^@)@L@@@A^@)^@)^@)^@)^@)D-[ -CAK)^@)^@)CC3 )1MC
)@@G@@ )%F@8^@)^@)^@)^@)^@) 0)C9 E))D(NC8)CD^C-M^@&^[DD1#EK)E-J^[IC(SE))@L@@@AMD
)@@G@@^@)^@)^@)^@)^@)D-SDC?E*)^@)^@)CC3 )1^@)^@)^@)^@)^@)^@)^@) 0)ET E-PE@)DDIME
)@@G@@C- F@)E-J^[HC(NET[C9 ^[OC(SE))@L@@@A^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC0 )*MF
)@@G@@AC?CLPC0(^@)^@)^@)^@) 0)ET E-PE@)DDIC- F@)E-J^[]E(AC1 EK)E- F[O^@)@H@E@AMG
)@@G@@^@)^@)^@)^@)^@)D-M -P^@)^@)^@)EK1 )?CC1^@)^@)^@)^@)^@)^@) 0)CTJE(IE))C-[MH
)@@G@@E-[^@)@J@@@E^@)^@)^@)^@)^@)D-M -P^@)^@)^@)EK1 )?CC1^@)^@)^@)^@)^@)^@) 0)MI
)@@G@@CTJE(IE))CD#E-PCDG^[^CDOCC)^@)@A@@@A^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)CS2^@)MJ
)@@G@@@J@@@ACS1^@)^@)^@)^@)D-[^@)^@)^@)^@)CC4 )? L[A@)^@)^@)^@)^@)^@) 0)C9 E))MK
)@@G@@E9JEL^^[AELJD*)CLPC1AC(M@J@B@A^@)^@)^@)^@)^@)E- ^@)^@)^@)^@)CC0 )? L[AS)ML
)@@G@@^@)^@)^@)^@)^@) 0)C(LE([D))E-J^[HETB^[RD9MC)_^@)@J@@@B^@)^@)^@)^@)^@)E- MM
)@@G@@^@)^@)^@)^@)CC4 )? L[AS)^@)^@)^@)^@)^@) 0)C(LE([D))E-J^[HETB^[RD9MC)_^@)MN
)@@G@@@J@@@A^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)A@?F@1AC)^@)^@)^@)^@)^@)^@) 0)D1J ))MO
)@@G@@EL E-PELI^[ID8)D([E-#D@)@J@@@ACS2^@)^@)^@)^@)DLBC))^@)^@)^@)EK1 -#AC)^@)MP
)@@G@@^@)^@)^@)^@)^@) 0)CTJD1ODDIE( ^[#D9HE[[ELDETJD0)@H@@@A^@)^@)^@)^@)^@)DK)MQ
)@@G@@^@)^@)^@)^@)AC?F@1AC)^@)^@)^@)^@)^@)^@) 0)EL E-PELI^[HCDOCTC@#@@@A^@)^@)MR
)@@G@@^@)^@)^@) 0)@[@@@A^)*A@(@L@B@AE[FE))^@)^@)^@)E[NC-AE[FE))^@)^9KET^C1OC(NMS
)@@G@@E)$^[KCDMC([^@0 )1 )4^@,^[MCDMC0.A@?CLNE9AB*1 -OEL[CT B*4^@)@M@@@BE[FE))MT
)@@G@@^@)^@)^@)E[NC-AE[FE))^@)^9KET^C1OC(NE)$^[KCDMC([^@0 )1 -OEL[CT C0) 0)EL[MU
)@@G@@ELAB*0 -]ETRC0.AC?E-MCD#C*.B8)@J@@@AE[[EL CC)^@)^@)E[NC-AE[[^@)^@)^@)^@)MV
)@@G@@^@)^@)^@)^@)^@)^@)^@) 0)C- C1[E(GE))E[[C9DD1B^[[EL CC)@[@@@A 0)^@)@A@@@AMW
)@@G@@E@)^@)^@)^@)^@)E[MD9#^@)^@)^@) K2^@)@^@@@AD(NC9K K)^@)^@)D1[D( ^@)@H@@@AMX
)@@G@@^@)^@)^@)^@)^@) S)^@)^@)^@)^@)E@"AK!B1K @2 )1 C-A@)^@)^@) 0)CTJD1OELJD))MY
)@@G@@E9JEL^@B@C@A^@)^@)^@)^@)^@)E[#E8)^@)^@)^@)A@?E@*AC?AC(@B@D@C^@)^@)^@)^@)MZ
)@@G@@^@)CDKCTR^@)^@)^@)A@?E@*AC?AC(@B@@@DD*)^@)^@)^@)^@)C(LE*)^@)^@)^@)E@*AC?NA
)@@G@@AC(^@)@D@@@D^@)^@)^@)^@)^@) S)^@)^@)^@)^@)^-ND)*D*( 8\A)? @*D*(D)(@^@@@ANB
)@@G@@^@)^@)^@)^@)^@)C(IC))^@)@[@@@A 0)^@)@^@@@A^)*AS(^@)^@)^@)D-DE))^@)@]@@@ANC
)@@G@@D(NC9GETO^@)@]@@@A^@=C1^CDOCC)@H@@@A^[HETBE@)^8%ET^C1A K$^@: @0A*0 )$ES$ND
)@@G@@ )? )?AC(^@)^@)^@)^@) 0)D-[CL D))DDHCDBC*)@]@@@A^@=CDNCTDDC)@A@@@A^[HETBNE
)@@G@@E@)^9OH[(IS)HD3^[?HD,G*)AC$^@)@A@@@A^[HETBE@)^9OH[(IS)HD3^[?HD,G*)AK$^@)NF
)@@G@@@J@@@A^[HETBE@)^9OH[(IS)HD3^[-H1\I-*G(2^[?HD,G*) [?H9,G9>IK)I-*GD,^[4H[>NG
)@@G@@^[0IL>I1(H95IS)I-7H8(^8)@B@@@A^[HETBE@)^8$^@) 0)FL ELJ^[GC(IC9OD@)D-DD1 NH
)@@G@@@N@@@A^[HETBE@)^9OH[(IS)HD3^[-^[3G(6G(2G*)I->IT4^[+G(<GD5IT>^[4H[(IS)H-(NI
)@@G@@H1>^[7HD?H))GT-I(3G*)GC)IT>G9!G(,I))GL2G(-HS$BS)@O@@@A^@)^@)^@)^8?^[7H[(NJ
)@@G@@GT*^[!G(-H13^[(I))I9(H-?^[+G*)GL2H9:G(,^[5I@)HD,I-\^[4I9\^[3G(0G(2GD4G*)NK
)@@G@@HD!GD$G(3BK)GC)H1\IL!GD?^8;^@)@I@B@A^@)^@)^@)^8)HD!GD$G*)G1(IL3I)?^[&H9?NL
)@@G@@H-\I9>G))GL9^[-^[<H9,I-(H15GD4HD\H0)HD!GD$G*,^8)@I@@@B^@)^@)^@)^8)HD!GD$NM
)@@G@@G*)G1(IL3I)?^[&H9?H-\I9>G))GL9^[-^[<H9,I-(H15GD4HD\H0)HD!GD$G*,^8;@M@@@BNN
)@@G@@^@)^@)^@)^8)E-*HD3^[(IS)I-*G*)IT>GT\H1=^[3G(,I->H1<G*?^[3I-(H-?^[0GD2I))NO
)@@G@@H9&^[4H[>^[3GD!G*)IL>GT\IL= )$BS)^@)@K@@@B^@)^@)^@)^8)I9*HD<H@)HD3^[,G(>NP
)@@G@@G->G))I-\^[!GD:G*)I-*HD3^[-H0)HD,GT2G(=HD+H-9^[?H9,G8)IL>GT\IL= 0$@D@@@ANQ
)@@G@@^[HETBE@)^9OH[(IS)HD3^[-H1\I-*G(2^[=HD=G-?JC)H-(H1>^8)@C@@@A^[HETBE@)^9ONR
)@@G@@H[(IS)HD3^[4H[>^[?GD3I))H-(H1>^C$^@)@J@@@AD(NC9#D1O^@)^@)C(LE*)^@)^@)^@)NS
)@@G@@ @= (HETBD-NE)( 82^@)^@)^@) 0)CTJE(IE))D9A^[HC(NET[C9 ES)^@)@[@@@A 0)^@)NT
)@@G@@@C@@@ACLPC1[CTR^@)^@) S)^@)^@)^@)^@)CLPC1GC(I -]E(A^@)@[@@@A 0)^@)@[@@@ANU
)@@G@@^)*A@(@G@@@ACLPC0)^@)^@)^@)EL ES)^@)^@)^@)A03^@)^@)^@)^@)^@)^@)^@)^@) 0)NV
)@@G@@CC)CLPC1AC(M@H@@@ACLPC1GC(I^@)^@)C(LE*)^@)^@)^@)A03^@)^@)^@)^@)^@)^@)^@)NW
)@@G@@^@) 0)DDOES)D- D1BE-C^@)@[@@@A 0)^@)@B@@@A^@)^@)^@)^@)^@)C(IC))^@)^@)^@)NX
)@@G@@E[NC-AE- ETO___@@@C*)EL *[S@@[*SDFF*@E@@@FE@)ES)C))C0)DC)D8)^@!^@)E[-G9>NY
)@@G@@G))ET^C0)DC\D8)IL\I(4HD,G(3^@)@#@@@FD9KE-DD9I^[< -\G1&@#@@@FD9KE-DD9I^[>NZ
)@@G@@ -\H0)@#@@@FD9KE-DD9I^[& -\H0)@#@@@FD9KE-DD9I^[2 -\H0)@]@@@FETKCD#C*)AK8OA
)@@G@@@E@@@FCT D1OC(M^[KET^C1DD8) *)E[-G9>G))ET^C0)DC\D8)EL\I(4HD,G(3^@)@]@@@FOB
)@@G@@ETKCD#C*)^@)@H@@@FCT D1OC(M^[^G(3HD$H1>G))GD,G))DD!I[?G(!G(,I->G))GL9^[[OC
)@@G@@H--H0)DS,^[NI->GL+G(,IS,@]@@@FETKCD#C*)^@)@^@@@FADDH14IL\G-5GT4HD\H0,^@)OD
)@@G@@@M@@@G^@)^@)E[NC-ADDJ^[(IS)GC)GT\H-?G(<I-(H9,^[\G0)GD<I-(I1(I-9^[2G(>H14OE
)@@G@@IL-H14^[3I(+IL\I(4HD,G(3^[4H8)I[>IL&H92H*)@L@@@G^[3G(1I(>H14HD-H))IL>GT\OF
)@@G@@IL=^[D 9J^[4H8)GC)G1(H->^[5IT(H1$^[-^[0GD$G(=^[D 9J^[0GD<HT-G9>^@*E[DD8=OG
)@@G@@ C,^@)@L@@@G^[OH[>^[KET^C1DD8)IL\I(4HD,G(3^[-IL>^[3H90H[(IT4HD<GD4G(=^[>OH
)@@G@@H1\I($H@)I-\^[+G*)I(3G(=^[+JC)IT9IT4G(!^@)@L@@@G^[0IL\GT>IT3H92IS) [3I(<OI
)@@G@@H@)GD3^[@C(^ C?^[9G(4^[!GD9^[+G*)G(-IT(H-9^[5IT>G))GL9^[4H[>^@)C1JELOEL[OJ
)@@G@@D0)^@)@M@@@G^[\IK)E[[ET#CDG^[0IL\G92GD!H(>IK)I9(I-*^[3HD!I[?G*)GD3IT>H(+OK
)@@G@@H-9^[(H14G(2G1-GT>IS,^@)E-*G*)GD=I1-H14GD$G*)^@)@L@@@G^[\G0)I(3HD,G8)GC)OL
)@@G@@I[-G9(H1$^[3JD3I->H*)G1\IK)IL>GT\IL=^[D 9J^[(IS)I-*GD4^[D 9J^[\I[>IL-I-(OM
)@@G@@H9,IS)GD2G*)@L@@@G^[2G(=I(<G(=^[&IL\H*)H9,G*)IL>ID5G(3I))I-\^[4H[>^[,G(8ON
)@@G@@I)?^[-H1= ))HD,^[&GD<I)?^[&IL\H*)GC)GT\H(0H->I->@G@@@G^[3G(1I(>H14HD-H))OO
)@@G@@I92HD4G*)H9&^[-^[&HD?G*)I-\^[-^[<H9!I[?G(4G*)IL>GD= 0)@H@@@G^[DH0)GD=G-(OP
)@@G@@I-(H9, ))I-*G*)I[-G9(H1$^[-IL>GC)H(-JC)GL>^[3HD!I(?I--H1>H95IT?JC)@E@@@GOQ
)@@G@@^[3H[-IL>G))I9(I-*^[\I-*G(2^[0GD$HD,G8)GD0I[?HD<GD4HD\H13^@)@M@@@G^@*I(3OR
)@@G@@HD,G8)E[DD8= C?^[(H1<H-5G-(H1$^[KET^C1DD8)H9,^[\I-*G(2^[&HD?G(3 0)^[OH[>OS
)@@G@@^[0GD$HD,G8)GD2G(-^[!GD9^[+G*)@M@@@G^[<H9,G1(G95IL>G))I9(I-*^[-IS)H(-H19OT
)@@G@@^[0GD$G(3^[-IS)G->IT(IL>G))H9&^[-H19^[3HD'G*)G->IT(IL>G)?^[-H-?H97HD,G8)OU
)@@G@@@M@@@G^[-H0)GD0I[?HD<GD4HD\H0)I-\^[+G*)H90I-(H((JL>G))G1\IK)HD4IS)I[-IL4OV
)@@G@@HD<I(?GD2^[D 9J^[<H[-IL-GT4G(2HD3I-(GT3 0)@K@@@G^[NG(>^[^D9# 9KDDJ^))G1\OW
)@@G@@IK)H(\IL>^[(H1&H92H(-I-(H9,^[\H0)I-*G*)E[DD8=^[0GD$HD,G8)I[-GT:GD$G*,^@)OX
)@@G@@@]@@@GIT0GD<G*)^@)@H@@@G^@)^@)E-*G*)G1>GD4I(2G(3^[0IL\I1(G->G))GL9^[4H[>OY
)@@G@@^[KET^C1DD8)I[-GT:GD$G*)GD2G*'@#@@@GGT\H-5H(,^@1A@)^@)@]@@@GIT0GD<G*)^@)OZ
)@@G@@@D@@@GA@)^@)^@)^@)^@1 0)D90G(,^[-^[&HD?G*)G1\IK)IL>GD=HD,G8)@C@@@GA@)^@)PA
)@@G@@^@)^@)^@2 0)EL>GD=^[4H[>^[,G(8I))IL>GT\IL=@E@@@GA@)^@)^@)^@)^@3 0)EL>GD=PB
)@@G@@^[4H[>^[,G(8I))IL>GT\IL=^[3G($H(>H14@D@@@GA@)^@)^@)^@)^@4 0)EL>GD=^[4H[>PC
)@@G@@^[0IL>I1(H95IS)IL>GT\IL=@F@@@GA@)^@)^@)^@)^@5 0)EL>GD=^[4H[>^[0IL>I1(H95PD
)@@G@@IS)IL>GT\IL=^[3G($H(>H14@F@@@GA@)^@)^@)^@)^@6 0)CT?H93G*)GC)G1(H->^[\I[>PE
)@@G@@H1>G))G1\IK)IL>GD=HD,G8)@D@@@GA@)^@)^@)^@)^@7 0)D90G(,^[-^[&HD?G*)G1\IK)PF
)@@G@@I92HD4HD,G8)@C@@@GA@)^@)^@)^@)^@8 0)E92HD4G*)GC)H1>I8)IL>GT\IL=^@)@F@@@GPG
)@@G@@A@)^@)^@)^@)^@9 0)CT?H93G*)GC)G1(H->^[\I[>H1>G))G1\IK)I92HD4HD,G8)@I@@@GPH
)@@G@@A@)^@)^@)^@)^@1A@,^[MG(-G))GC)IL>GT\IL=^[-I))GC)G9(I1>H0)G1(H->^[7H92G))PI
)@@G@@GD=G-2G(3IS)@]@@@GGT\H-5H(,^@2@]@@@GIT0GD<G*)^@)@D@@@G^@)^@)E-*G*)E[NC-APJ
)@@G@@DDJ^[2H95I-(H1>IS)I[2H96HD=G*)G1\IK)@N@@@G^[!I(?I-(I[?G*?^[3HD!I(?I--H1>PK
)@@G@@H95IS)G1(H->^[-GT<G(3IS) [!I(?I-( (4H[2G(-G)(^[-IS)I9>H-?^[-IS)H9,G*!GD4PL
)@@G@@ (- (4HD!G*)@C@@@G^[&HD?G*)GD<GT>IT3^@*IT(H1$H-> (4H[2G(-G)( 0)^@)@N@@@GPM
)@@G@@^[KET^C1DD8)GD?IT\^[-H-?H97IS)IL>GT\IL=IS)I-\^[+G*)IL>GD=^[&IL\H*)GC)G1(PN
)@@G@@H->^[4H[-I))HD3^[+G((H1$^[7IL(I-4G(, 0)^@)@M@@@G^[[IS)I-*G*)IL\I(4HD,G(3PO
)@@G@@^[<H9,IT(IT4^[>H14HD2G(?JC)H9&^[DGL-H1: ))GD?H))G--I--^[(IS)H(-HD,I--HD,PP
)@@G@@G(=^[(H0)GC)@E@@@G^[5IT>IK!IT5I[0H-(G(=^[0GD<HT>I))G->IT<IL(GL>G))GL>H-\PQ
)@@G@@I8,^@)@M@@@G^[ IL2H92IS)H9<GT5IL(H1$^[=I(2HD,G8)GC)E[NC-ADDJ^[\I[>IL-I-(PR
)@@G@@H9,^[-IL>^[(H1=HD<GD4G(=^[+JC)IL>I-5IL,HD,G8)^@)@C@@@G^[-^[3I--I-5IS)GT\PS
)@@G@@G->^[(H0)IL>G9(IT4G(2^[[AS,^@)@ @@@GADNC-A^[MG(<H92G))C1\IL!GD4^@)@L@@@GPT
)@@G@@^@)^@)^[NC-A^[2G(<H92G-3^[>J[(IT4^[-IS)I1-IL(GD+H->^[?G(,G94H@)IL>GT\IL=PU
)@@G@@IS?^[>GD<H@)IL>GT\IL=^[+G((H1$@L@@@G^[0IL>GT>G->G))I9(I-*^[-^[<H9,I-2H9?PV
)@@G@@^[7H92G))HD,G-(GT-I-(H1$^[(I-3^[?G(,G94H@)GD3^[7G(?H))GD3^[\I-*G(2@I@@@GPW
)@@G@@^[4H[(H1$IS?^[=G(0G(,G-(H1$^[5I[\H0)I-*G*)I-9I[>^[\G0)G1(H-> 0)^[OH[>IL>PX
)@@G@@^[-IL>^[4I9\@H@@@G^[4JD0G(3^[\G0)IL>GT\IL=IS'^[=GD4GC)IL>GT\IL=IS)GD,G))PY
)@@G@@GT\H14IL\H))IL>GT\IL=IS,@^@@@G^[]H94H@)GT\H13HD3I))^@)@L@H@G^[\G0)GC)GT\PZ
)@@G@@H14IL\H))I9\IL=^[&H9?H-\I9>G))GL9^['G(2H8)H92^[!H92G*)I9\IL=IS)H9&^[-GT4QA
)@@G@@I(-H))IL>GT\IL= 0)@L@@@H^[\G0)GC)GT\H14IL\H))I9\IL=^[&H9?H-\I9>G))GL9^['QB
)@@G@@G(2H8)H92^[!H92G*)I9\IL=IS)H9&^[(H1&H92H(-I-(H9, 0)^@)@M@@@G^[#H9,I-2H9?QC
)@@G@@^[2G(<H92G-3^[-IL>^[(H1=HD<GD4G(=^[+JC)GC)H1>G9-I-(I1>^[<H9,I-2H9?^[7H92QD
)@@G@@G)?^[7HD4H@)ES1^[\G0)^@)@K@@@G^[4H[>^[<H9,I-2H9?^[7H92G))GL>HD,G8)I-*G*)QE
)@@G@@^L4JD0G*+^[\G0)I-*G*)GT\H14IL\H))IL>GT\IL= 0)^[NAK)H9&@M@@@G^[<H9,I-2H9?QF
)@@G@@^[2G(<H92G))GT\H14IL\H))I9\IL=IS)HD3^[-H-7GD9IS)I-*G*)H->H1$I-*^[\G0)I-*QG
)@@G@@G*)GT\H14IL\H))IL>GT\IL=@M@@@G^@*H1\I))GT\I(,I-(H1$^[4H[>^[<H9,I-2H9?^[7QH
)@@G@@H92G))HD4IT>H-& C,^@)E-*G*)IL>H(-HD,HD,G8)I[\IL4HD\H0)H9&^[4H[>^@)@L@@@GQI
)@@G@@^[<H9,I-2H9?^[7H92G))I1-IL(G(3^[-GT<H92G-(H1$^[4H8)I-*G*)I-9I[>^[\G0)I-*QJ
)@@G@@G*)GT\H14IL\H))IL>GT\IL= 0)^@)@]@H@GIT0GD<G*)^@)@B@H@GI--GL?G*)CT\H14IL\QK
)@@G@@H))IL>GT\IL=^[&H92H(-I),@K@H@G^@! *! *! *! *! *! *! *! *! *! *! *! *! *!QL
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!^@)@K@H@G^@'^@)I-9I[>QM
)@@G@@^@)^@'^[?G(,G94H@)^@'^@)^@)^@)^@)^@)^@)^@!^[6GD2HD-GL?G*) *)^@)^@)^@)^@)QN
)@@G@@^@)^@)^@'^@)@K@H@G^@! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!QO
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *!^@)@K@H@G^@'^@)^@)^@)^@)^@)^@)^@)QP
)@@G@@^@)^@)^@)GT\H14IL\H))IL>GT\IL=^[=GD4GC)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@'^@)QQ
)@@G@@@K@H@G^@'^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)QR
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@'^@)@K@H@G^@! *! *! *! *! *! *! *! *! *! *! *!QS
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!^@)@[@H@GG(,G))QT
)@@G@@@]@H@GIT0GD<G*)^@)@L@@@G^[NH9!G*)GT\H14IL\H))IL>GT\IL=IS)GT\H13HD3I))H9,QU
)@@G@@H-9^[\G0)GC)GT\H14IL\H))I9\IL=^@*I-9I[>^@0A)2 ))G1\IK)@#@@@G^[>J[-H(0H->QV
)@@G@@ 0)^@)@]@H@GIT0GD<G*)^@)@N@@@G^[^GD4GC)IL>GT\IL=IS)H[-I1>^[-^[0H93HD4HD6QW
)@@G@@G*)GT\H14IL\H))I9\IL= ))I9(I-*^[OAC)H9&^[3GD!G*)GL>HD,G8)I-*G*)H->H1$I-*QX
)@@G@@@L@@@G^[\G0)I-*G*)G--I--^[2G(<H92G)) [-G9-HD, ))H1\I))GT\I(,I-(H1$^[4H[>QY
)@@G@@^[<H9,I-2H9?^[7H92G))HD4IT>H-& C,^@)@]@H@GIT0GD<G*)^@)@B@H@GI--GL?G*)C--QZ
)@@G@@I--^[2G(<H92G))G1\IL!GD4 0)^@)@K@H@G^@! *! *! *! *! *! *! *! *! *! *! *!RA
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!^@)@K@H@G^@'^@)RB
)@@G@@^@)^@)H->H1$I-*^@)^@)^@)^@'^@)^@)^@)^@)^@)^@)^@!^[6GD2HD-GL?G*) *)^@)^@)RC
)@@G@@^@)^@)^@)^@)^@'^@)@K@H@G^@! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!RD
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!^@)@K@H@G^@'^@)^@)^@)^@)^@)RE
)@@G@@^@)^@)^@)^@)^@)^@)^@)G--I--^[2G(<H92G))^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)RF
)@@G@@^@'^@)@K@H@G^@'^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)RG
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@'^@)@K@H@G^@! *! *! *! *! *! *! *! *! *!RH
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!^@)@[@H@GRI
)@@G@@G(,G))@]@H@GIT0GD<G*)^@)@K@@@G^[[^[<H9!I[?G(4G*)G->IT<IL(I[4HD\H0)H9&^[NRJ
)@@G@@C-A^[2G(<H92G-3^[-H1=^[<H9,I-2H9?^[2G(<H92G))I-9I[>IS)@C@@@G^[(IS)G15H-?RK
)@@G@@JC)G->IT<IL(GL>G))HD,^[PE@4AC4A),A),@]@@@GIT0GD<G*)^@)@L@@@G^@)^@)E-*G(2RL
)@@G@@G*)GD2G*)G1\I(2^[<H9,I-2H9?^[2G(<H92G-3^[7HD4H@)I9*HD<H@)E[NC-ADDJ^[5IT>RM
)@@G@@IL3^[3H[\I(?G))GL>@#@@@G^[&GD!HD?HD-IK'^@)@]@@@GIT0GD<G*)^@)@#@@@GGT\H-5RN
)@@G@@H(,^@1A0)^@)@B@@@GA@)^@)^@)^[OJD0G*)^@)^[^G(&HD,HD4HD\H0)^@)@]@@@GIT0GD<RO
)@@G@@G*)^@)@K@H@G^@)^@)^@)^@0A*0^@)^@)^[GGD+G(?^[2G(<H92G),^@)E-*HD3^[<H9,I-2RP
)@@G@@H9?^[2G(<H92G))H(5IT4^[-H-7GD9IS)GL>@H@@@H^@)^@)^@)^@0A*0^@)^@)^[GGD+G(?RQ
)@@G@@^[2G(<H92G),^@)E-*HD3^[<H9,I-2H9?^[2G(<H92G))HD3@N@@@G^@)^@)^@)^@)^@)^@)RR
)@@G@@^@)^[4H[>^[&HD2IT4^[2G(<H92G))H9&^[-^[7G(?H)!G1\IL!G(=^[NC-A^[&HD?G*)H92RS
)@@G@@^[>H->H(>H14 0)^[NAS)^@)@M@@@G^@)^@)^@)^@)^@)^@)^@)^[(IS)GC)G1?GD$^[(H1=RT
)@@G@@HD<GD4HD,G8)I-*G*)I-9I[>^[\G0)G1(H-> ))GD,G))ES6^[(IS)GC)G1?GD$^@)@L@@@GRU
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[(H1=HD<GD4HD,G8)I-*G*)GT*GD2GD<I->IK)I-9I[>^@*A@.RV
)@@G@@C1(G(?G--I-- )1B([ET#DDD C,^@)@O@@@G^@)^@)^@)^@)^@)^@)^@)^[^GD4GC)G1(H->RW
)@@G@@IS)H92^[>H->H(>H14IS)H[-I1>^[-^[\H1>^[7H92G))GT\H14IL\H))IL>GT\IL=^[\G0)RX
)@@G@@^8%ET^C1A K$@O@@@G^@)^@)^@)^@)^@)^@)^@)^[7H[(GT*^[(IS)GD?I9-JD3^[(H0)C1(RY
)@@G@@G(?G--I--^[2G($GD2G-?G(3IS)H9&^[4H[>^[<H[-IL-GT4G(2^[3G(4^[\G0)^@)@ @@@GRZ
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[4H[>^@)@O@H@G^@)^@)^@)^@)^@)^@)^@)^[2G(!GD(H1(H1$SA
)@@G@@^[2G(<H92G-3 0)^[KIL(H14G1(H->IS)H[-I1>^[-^[!I(<H@)H--IL$G(2^[?GD+G(?^[2SB
)@@G@@G(<H92G))^@)@O@@@H^@)^@)^@)^@)^@)^@)^@)^[2G(!GD(H1(H1$^[2G(<H92G-3 0)^[KSC
)@@G@@IL(H14^[&HD?G(3^[*GD6G*)GC)H(5GT*^[?GD2G9>IK)H--GL>H))IL>GT\IL=^@)@H@@@GSD
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[<H9,I--HD,HD,G8)GD?H))HT(H1=IS)H9&^[(H1&H92H(-I-(SE
)@@G@@H9, 0)@G@@@G^@)^@)^@)^@)^@)^@)^@)^[NG(>^[PE@4AC4A),A))G1\IK)H(\IL>^[=G(4SF
)@@G@@GD(H-3 0)^@)@]@@@GIT0GD<G*)^@)@K@@@G^@)^@)^@)^@0A)2^@)^@)^[NI9(I-<H@)IL>SG
)@@G@@GT\IL= 0)^[OH[(IS)GT\H14IL\H))IL>GT\IL=^[(H1=HD<GD4G(3^[-^@)@K@@@G^@)^@)SH
)@@G@@^@)^@)^@)^@)^@)^[<H[-IL-GT4G(2^[4JD0G*)IT7HD4GT* ))I9(I-*^[NA0)GL>HD,G8)SI
)@@G@@I-*G*)G1?GD$^[&H92@L@@@G^@)^@)^@)^@)^@)^@)^@)^[4H[>^[,G(7^[<H[-IL-GT4G(2SJ
)@@G@@^[4JD0G*) @0B(AHD>H-=GD4GC?AC.CDNCTDDC( 0)ES2^[(IS)^@)@B@H@G^@)^@)^@)^@)SK
)@@G@@^@)^@)^@)^[5IT5GD?H-9^['G(2H8,@ @@@H^@)^@)^@)^@)^@)^@)^@)^['G(2H8,@]@@@GSL
)@@G@@IT0GD<G*)^@)@E@@@G^@)^@)^@)^@0A)4^@)^@)^[KET^C1DD8)GL-GT:IT0GD<G*)IL>GT\SM
)@@G@@IL= 0)@K@@@G^@)^@)^@)^@)^@)^@)^@)^[CAK)H9&^[4H[>^[<H9,I-2H9?^[7H92G))GT\SN
)@@G@@H14GD(H13^[4H[>^[?G(,G94H@)H9&^[4H[>@F@@@G^@)^@)^@)^@)^@)^@)^@)^[0IL>I1(SO
)@@G@@H95IS)HD!GD$G*;^[NAK)HD3^['G(2H8,^@)@]@@@GIT0GD<G*)^@)@L@@@G^@)^@)^@)^@0SP
)@@G@@A*1^@)^@)^[#H9,I-(H15GD4HD\H0)HD!GD$G*,^@)E-*HD3^[<H9,I-2H9?^[2G(<H92G))SQ
)@@G@@HD3^[-GT4I(-H-?JC)@M@@@G^@)^@)^@)^@)^@)^@)^@)^[-^[<H9,I-(H15GD4HD\H0)H9&SR
)@@G@@^[4H[>^[0IL>I1(H95IS)IL>GT\IL= 0)^[DG0)GC)IL>GT\IL=^[(IS)^@)@G@@@H^@)^@)SS
)@@G@@^@)^@)^@)^@)^@)^[4H9\^[?H9,G8?^[(I))I9(H-?^[+G*)GL2H9:G(,^[(H14H8)@L@H@GST
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[\G0)HD,H92G-(H1-I->^[?G(,G94H@?^[(I))I9(H-?^[5IT5SU
)@@G@@GD?H-9^[+G*)GL2H9:G(,^[(H14H8)@L@H@G^@)^@)^@)^@)^@)^@)^@)^[3G(6G(2GD?^@+SV
)@@G@@IT>G9!G(,I-3^K?^[>GD<H@)I9(I-*^[-^[?G(,G94H@)H9&^[?G(3IS)I-*GD,^@)@L@@@HSW
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[3G(6G(2GD?^[3G($H(>H14IS'^[-^[&HD2IT4^[2G(<H92G))SX
)@@G@@IT>G9!G(,I))H9&^[-^[$HD6G(,^@)@M@@@H^@)^@)^@)^@)^@)^@)^@)^[4JD0G*) [>HD4SY
)@@G@@H[>IK)G--I--^[\IK)GT\H14IL\H)( ))G1\H-?H97G(=^[+JC)H9,G*)H92^[!H92G*)^@)SZ
)@@G@@@D@@@H^@)^@)^@)^@)^@)^@)^@)^[<H9,I-(H15GD4HD\H0)IL>GT\IL=IS,@O@@@H^@)^@)TA
)@@G@@^@)^@)^@)^@)^@)^[#H9,I-2H9?^[2G(<H92G))IT>G9!G(,I-3^[-IL>^[?HD!HD4G(=^[4TB
)@@G@@H8)A03^[7H92G-3^[(H0)H->H1$I-* ))GD,G))^@)@M@@@H^@)^@)^@)^@)^@)^@)^@)^[=TC
)@@G@@GD4GC)IL>GT\IL=^[3G($H(>H14IS)GD2G*)H-(H((I->G))I-\^@2A@4A8)I9\IL=IS)HD,TD
)@@G@@^[?G(,G94H@,@N@@@H^@)^@)^@)^@)^@)^@)^@)^[#H9,I-(H15GD4HD\H0)IL>GT\IL=IS?TE
)@@G@@^[+G((H1$^[<H9,I-2H9?^[2G(<H92G-3 ))GD2G*)I-*G(2G(&H92G*)^@)@G@@@H^@)^@)TF
)@@G@@^@)^@)^@)^@)^@)^[?HD!HD4G(=^[4H8)A03^[7H92G-3^[(H0)H->H1$I-* 0)^@)@M@H@GTG
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@6AS)I9\IL=IS) [-I))H(\IT4 C,^@)CL\I-*^[<H9,I-2H9?TH
)@@G@@^[2G(<H92G-3^[\IK)G--I--^[2G(<H92G-3@J@H@G^@)^@)^@)^@)^@)^@)^@)^[!GD9^[+TI
)@@G@@G*)IT>G9!G(,I->G))I9(I-*^[<H9,I-(H15GD4HD\H0)IL>GT\IL=IS,^@)@]@@@GIT0GD<TJ
)@@G@@G*)^@)@]@@@GGT\H-5H(,^@2@ @@@GADOH[>^[KGD$HD,G8)CD2G(- 0)^@)@N@@@G^@)^@)TK
)@@G@@E-*G*)I[-G9(H1$^[-IL>GC)HD3^[4H[>^[>IT3G(,I-(GD?^[&G(-I-5IL>^[\G0)GC)I[-TL
)@@G@@G9(H1$^[3JD3I->H*,^@)E-*G*)GL-IT(GS)@M@@@G^[0IL(H1<HD0H->^[+G(*HD,G))HD4TM
)@@G@@IS)I(3G*)HD3^[4H[-I))HD4^[7HD?H))GT\H14GD(H0)I-*G*)H(\IT4^[2G(<G(,I))G--TN
)@@G@@I--^@)@N@@@G^[2G(-G))G12H9!^[\IK)I92HD4I->H0)I-\^[-^[&HD?G*?^[4H[>IL>GL9TO
)@@G@@^[2G(=I(<HD,G8)I-*G*)GT*GD,GT>^[4H[-I))I-*G*)H1>J[4^@)@E@@@G^[D 9J^[2G(1TP
)@@G@@I(>IT4^[7HD?H))GD<I-5GD?H-9^[=H8)GD,JC)DC\D8,^@)@]@@@GIT0GD<G*)^@)@O@@@GTQ
)@@G@@^@)^@)C(3IT>H14HD-H-?JC?^[4H[>^[0GD$HD,G8)GD2G(-^[(IS)GC)G9(I1>H0)H15H(+TR
)@@G@@G(2^[\G0)^L+I(&G1>IL3^K)H9&^[-^[$HD6G(,^[3HD'G*?@N@@@G^[-H-?^[?HD,HT>G))TS
)@@G@@I-\G9>I-*G(2^[&IL\H*)GC)I[-G9(H1$^[-IL>GC)H[>GD=G(2 0)^[DG0)I-7H8)I[-G9>TT
)@@G@@IS?^[\IK)^L+I(&G1>IL3^K?@O@@@G^[-IL>^[5IT>G)?^[KET^C1DD8)HD3^[4H[>H0)ID5TU
)@@G@@HD4G*)IT(H((H--IK)I-\^[4H[>^[3JD3I->H*)H-(GL2GD2JC)IL\I(4HD,G(3^[NC-ADC)TV
)@@G@@GD,G))@N@@@G^[NC-AD8?^[7H[(GT*^[(H(0H->H(>H14^[-^@+G-\I(+H-> (+I(&G1>IL>TW
)@@G@@G)+^[!G(4H[\G))H9&^[D 9J 0)^[KET^C1DD8)HD3^[!H92G*)^@)@N@@@G^[$G(,G(2GD?TX
)@@G@@ ))H[\I9>I1>IK?^[(H0)I-*GD4^[4H[>^[5IT>IK)H(-JC)GT\H1&HD$I(2G*)GD3^[!GD,TY
)@@G@@JC)I[-G9>IS)H9&^[-H19^[3HD'G*)@N@@@G^[-IS)G->IT(IL>G),^@)CD?IT\ ))I(,H-(TZ
)@@G@@HT>^[4H[>^[NC-ADC)^L=H95GL?G*!GL5G1&G(2G(=^K)H(>I-*H9=^[7H[(GT*^[-H-7GD9UA
)@@G@@IS)^@)@N@@@G^[2G(-G-3^[4H[>^[,G(8I))GL5G1&G(2^[-H[>GD= ))GC)I[-G9>^[(IS)UB
)@@G@@H9,H-9^[&HD?H->G))I9*G(,^[4H[>^[=GD4GC)G12H9!^[4H[>^@)@M@@@G^[&HD?G*)HD3UC
)@@G@@^[-GT4I(-H-?JC)IL>ID5G(3I->G),^@)E-*G(2G((H0)H-(G(3^[4H[>^[-G-6GD,I--G9>UD
)@@G@@^[\G0)G(-GT*^[3GT*G(!G*'@N@@@G^[-^@+G-\I(+H-> (+I(&G1>IL>G)+^[!G(4H[\G))UE
)@@G@@HD3^[!H92G*)H90I-(H(-H))I9*G(,^[4H[>^[=GD4GC)HD3^[4H8)GL>^[2G(-G))H9,H-9UF
)@@G@@@N@@@G^[\H1<G*?^[-H1=^[4H[>^[-H(\I(,I))H9&^[=GD4GC)HD3^[?GD2G9>^[>H1\I($UG
)@@G@@H@)IT5GT*^[4H[-I))I-*G*)^L>J[4IL-^K)GL5G1&G(2^@)@M@@@G^[2G(-G))GD&I->IK)UH
)@@G@@I-*G*)G(,G))H9&^[>G1&G(<I-(I1>^[(H10I(4^[(IS)H1>G9?HD$HD+H->^[(H0)GT\H14UI
)@@G@@IL-IT4^[4H8)I-*G*)@M@@@G^[4H94GD?^[-H(\I(,I))H9&^[D 9JBS)^[-^[0GD$HD,G8)UJ
)@@G@@H(>I-*H9=^[(IS)I-\^[+G*)I[2G(&G(2IL>G))I9*G(,^[4H[>^[=GD4GC)@M@@@G^[4H8)UK
)@@G@@GL>^[2G(-G))HD3^[2G(-G))H(\IL>^[4H[-H0)H9,GT> ))H92^[4H[>^[-H(\I(,I))H9&UL
)@@G@@^[=GD4GC)HD3^[2G(?GD4HD6G(?JC)@M@@@G^[3H(-H-? 0)^[[H-3H8?^[=GD4GC)GL>HD,UM
)@@G@@G8)I92HD4I->H0)I-\^[-^[&HD?G*?^[5IT(H1$^[-^[0GD$HD,G8)IT9IT4G(! ))H(-JC)UN
)@@G@@@K@@@G^[+G*)IT5GL3G(1I(>H14H-9^[2G(-G))G12H9!^[4H[>^[&HD?G*)I9(I-*^[!I(<UO
)@@G@@H@)H->IT3^[D 9J^[4H[-H0)GC)^@)@E@@@G^[<H9,I1>H14HD\H1-H))^L=H95GL?G*!GL5UP
)@@G@@G1&G(2G(=^K)H(>I-*H9= 0)@]@@@GIT0GD<G*)^@)@B@@@GAL#IL>GD4HD,G8)I-*G*)E[-UQ
)@@G@@G9(H1$^[[IL>GC)^@)@O@I@G^@)^@)CD,^[-IT3G(!GL?JC)I[2H9<G(=I(2G*)G(8HD3I-3UR
)@@G@@^[4H8)GT2G(-I->^[-H0)HD,HD4HD-H-(JL>G))I[-G9(H1$^[-IL>GC)G1\IK)I-*G*)^@)US
)@@G@@@H@@@I^@)^@)CD,^[-IT3G(!GL?JC)H--H1$I(-G9>^[0IL\GT>G-5IL>^[>J[(IT4IS)I-\UT
)@@G@@^[<IL>GD4G*)@D@@@I^[-H0)HD,HD4HD-H-(JL>G))I[-G9(H1$^[-IL>GC)G1\IK)I-*G*)UU
)@@G@@@^@@@G^[KET^C1DD8)I(3G(2BK)^@)@]@@@GIT0GD<G*)^@)@B@@@G^@)^@)^@)^@)^@)E[NUV
)@@G@@C-AE[[^@)B-0GS" )/I[3B0)@]@@@GIT0GD<G*)^@)@N@@@G^@/I[<B0)HD3^[4H[>^[0GD$UW
)@@G@@G*)GT\I(,I)?^[7H[(GT*^[=G(&GD5H-4IS)I-\^[4I9\^@*AK(BS)B-0IS"^[(IS)I-*G*)UX
)@@G@@I[-G9>^[3HD'G*?^@)@N@@@G^[7H[(GT*^[=G(&GD5H-4IS)I-\^@1AC2^[7H92G-3 0)^[OUY
)@@G@@H[>^[0GD$HD,G8)GD2G(-^[(H1(I-(GD?HD'G(=^[+JC)I-*HD3^[0IL\GT>G-5IL>@N@I@GUZ
)@@G@@^[!GD9^[+G*)IT*GD2G(=^[+JC)IT>I1>IL-H))E[NC-ADDJ^[0GD<HT>I-3^@*IT>G*)C-JVA
)@@G@@CS\E[DD8=^[&H92^[-^[=HD3GT5IT3HD\H0)H9&^@)@I@@@I^[!GD9^[+G*)IT(H(5H-4GD,VB
)@@G@@G(\I(3H-9^[3H[-IL>G))GL9^[3G(6G(2GD?^[KET^C1DD8)I[-GT:G(4IS)@D@@@I^@*IT>VC
)@@G@@G*)C-JCS\E[DD8=^[&H92^[-^[=HD3GT5IT3HD\H0)H9&^@)@F@@@G^[\I[4HD!GD?^[<H9,VD
)@@G@@G1(G95IL-I-(H9,IS)H9&^[0GD$HD,G8)GD2G(-IS( 0)^@)@ @@@GADOH[>^[KET^C1DD8)VE
)@@G@@E[-GT:G(4^@)@M@@@G^@)^@)ET(H1<G*)I-*G(3G*)IL\I(4HD,G(3^[-IL>^[!I(?I-( (-VF
)@@G@@GT4HD6HD4JC)IL>G(,I-2GD,I)?^[4H[>JC)I9\IL:^[&IL\H*)GC)@M@@@G^[5IT>IK!IT5VG
)@@G@@I[0H-(G(=^[0GD<HT>I))I9*HD<H@)GT\H14GD(H13^[-H-?^[4H[>^[=GD4GC)H1>GT>IT3VH
)@@G@@GD2JC)I-\^[0G(2G1\IL!^@)@L@@@G^[4H[>HD2^[&I(,GT4HD\H13 ))HD,GT?I(=HD,G8)VI
)@@G@@GC)E[DD8= (&H92H(-I-4G(=^[0GD<HT>I)) [3G(>^[^D9# 9KDDJ^)( 0)@E@@@G^[OH[>VJ
)@@G@@^[&H92H(-I))H9&^[4H[>^[0GD<HT>I))HD3^[-IS)G1\H-?H97IS'@]@@@GIT0GD<G*)^@)VK
)@@G@@@ @@@GI--GL?G*)E[NC-ADDJ^[KGD<HT>I))@K@@@G^@) *! *! *! *! *! *! *! *! *!VL
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)@K@@@GVM
)@@G@@^@)BK)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)VN
)@@G@@^@)^@)^@)^@)^@)^@)^@)BK)@K@@@G^@) 8)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)VO
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 8)@K@@@G^@)BK)^@)^@)VP
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^[KDDJ^))I[-GT:G(4^@)^@)^@)^@)^@)^@)^@)^@)^@)VQ
)@@G@@^@)^@)^@)BK)@K@@@G^@) 8)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)VR
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 8)@K@@@G^@)BK)^@)^@)^@)^@)^@)^@)VS
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BK)VT
)@@G@@@K@@@G^@) *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!VU
)@@G@@ *! *! *! *! *! *! *! *! *! *)@K@@@G^@)BK)E[ND(JC- ^@)BK)E[NEL[ELA^@)BK)VV
)@@G@@E[NCLNE9A^@)BK)^[KETMETA^@)BK)^[KETNC0)^@)BK)^@)^@)^@)^@)BK)@K@@@G^@) *!VW
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!VX
)@@G@@ *! *! *! *! *! *)@K@@@G^@)BK)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)E[NVY
)@@G@@EL#E8)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BK)@K@@@G^@) *! *! *! *! *!VZ
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!WA
)@@G@@ *! *)@K@@@G^@)BK)^@)^@)^@)^@)^@)^[KET]D))^@)^@)^@)^@)^@)^@)BK)^@)^@)^@)WB
)@@G@@^@)^@)^[KET]CC)^@)^@)^@)^@)^@)^@)BK)@K@@@G^@) *! *! *! *! *! *! *! *! *!WC
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)@K@@@GWD
)@@G@@^@)BK)^@)^@)^@)^@)^@)^[KET#ELG^@)^@)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@)^[KETMWE
)@@G@@D))^@)^@)^@)^@)^@)^@)BK)@K@@@G^@) *! *! *! *! *! *! *! *! *! *! *! *! *!WF
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)@K@@@G^@)BK)^@)^@)WG
)@@G@@^@)^@)^@)^[KETDCL[^@)^@)^@)^@)^@)^@)BK)^@)^@)^@)^@)^@)^[KETSAC1^@)^@)^@)WH
)@@G@@^@)^@)^@)BK)@K@@@G^@) *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!WI
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *)@K@@@G^@)BK)^@)^@)^@)^@)^@)^@)WJ
)@@G@@^@)^@)^@)^@)^@)^@)^@)E[ND1RCC)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BK)WK
)@@G@@@K@@@G^@) *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!WL
)@@G@@ *! *! *! *! *! *! *! *! *! *)@K@@@G^@)BK)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)WM
)@@G@@^@)^@)^@)E[NDD^CC)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BK)@K@@@G^@) *!WN
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!WO
)@@G@@ *! *! *! *! *! *)@K@@@G^@)BK)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^[KETAWP
)@@G@@EL^CC)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BK)@K@@@G^@) *! *! *! *! *!WQ
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!WR
)@@G@@ *! *)@K@@@G^@)BK)^@)^@)^@)^@)^@)E[NF@1ADM^@)^@)^@)^@)^@)^@)BK)^@)^@)^@)WS
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BK)@K@@@G^@) *! *! *! *! *! *! *! *! *!WT
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *)@[@@@GWU
)@@G@@G(,G))@]@@@GIT0GD<G*)^@)@E@@@G^[OH[>^[-GL\I1>^[&HD>H-=IS)GD2G*)G->IT<IL(WV
)@@G@@GL>G))GL>H-\I8'^@)@]@@@GIT0GD<G*)^@)@#@@@GGT\H-5H(,^@1A0)^@)@L@@@G^@)^@)WW
)@@G@@^@)^[KDDJE[FE))^[OH[>^[KDDJ^))I[-GT:G(4^[(H(+G(=G->G))I9(I-*HD,^[4H[>^[KWX
)@@G@@ET^C1DD8)I[-GT:G(4 0)^@)@]@@@GIT0GD<G*)^@)@H@@@G^@)^@)^@)^[KETHD9^C*)^[OWY
)@@G@@H[>^[!H9=G*)H9&^[4H[>^[&HD?G*;^[(I-3^[6GD?I(>^[-IL>BK)@]@@@GIT0GD<G*)^@)WZ
)@@G@@@D@@@GA@)^@)^@)^@)^@)^@)^@)^@)^@0^@!^[&HD?G*)H1\I))H90G(,G(=@H@@@GA@)^@)XA
)@@G@@^@)^@)^@)^@)^@)^@)^@1^@!^[&HD?G*)H90G(,G(=^[&H92^[2G(-G-(H1$^[\H1?JC)^@)XB
)@@G@@@J@@@GA@)^@)^@)^@)^@)^@)^@)^@)^@2^@!^[&HD?G*)H90G(,G(=^[&H92^[7IL(I-(H1$XC
)@@G@@^@*H92^[2G(-G-(H1$ C)^@)@]@@@GIT0GD<G*)^@)@L@@@G^@)^@)^@)^[KETMCDMC0)^[OXD
)@@G@@H[>^[MG(-G)!CD?H)!EL>GT\IL=IS)C1?GD$ 0)^[DG0)I-*HD3^[&H--G8)HD3^[,H9,JL>XE
)@@G@@IL\ ))@N@@@G^@)^@)^@)^@)^@)^@)^@)^[4H[>H0)GD?H))IL>GT\IL=IS?^[(H1<H-5G-(XF
)@@G@@H1$^[<H9,I-2H9?^[2G(<H92G-3^[7HD?H))GL>^[2G(4I(2H1>G))@N@@@G^@)^@)^@)^@)XG
)@@G@@^@)^@)^@)^[4H8)I-*G*)I(3G(2 0)^[RH[>H0)I-*HD3^[&H--G8)HD3^['G(2H8?^[\H1?XH
)@@G@@JC)G--I--^[2G(<H92G-3 ))I-*G*)@O@@@G^@)^@)^@)^@)^@)^@)^@)^[?GD+G(?^[2G(<XI
)@@G@@H92G)) [4JD0G*)A@5A@( ))GD,G))I-*G*)IT7HD4GT*^[2G(<H92G)) @0A)2 C)GD2G*)XJ
)@@G@@IL>I-5IL,G(=@K@@@G^@)^@)^@)^@)^@)^@)^@)^[JG0)GT\I(2IT> ))GD,^[ D9A^@*A@7XK
)@@G@@A8(^[2G(<H92G))HD3^[,G(6G(2^[2G(4I(2H1>G),@]@@@GIT0GD<G*)^@)@M@@@G^@)^@)XL
)@@G@@^@)^[KET]ETRC0)^[OH[>^[]GD<HTNI[-GT> (RIL(I->^[AH--G8,^@)DD&^[4H[(IS)G1?XM
)@@G@@GD$^[(IS)H1\H1'G(2H8?^[4H[>H0)@O@@@G^@)^@)^@)^@)^@)^@)^@)^[=I(2HD,G8)H95XN
)@@G@@I-0I(4^[\I[>IL-I-(H9,IS?^[>GD<H@)IL>GT\IL=^[7IL(I-4G(,^[7HD?H))GL>^[(H(!XO
)@@G@@G(=HD-I->H-9@N@@@G^@)^@)^@)^@)^@)^@)^@)^[&H9?H-\I9>G))I9(I-*^[-^[3I[>GT(XP
)@@G@@GD?^[+GD<HT3I[-GT>^[<H9,I-2H9?^[2G(<H92G)) [4JD0G*)A@4A)( 0)@O@@@G^@)^@)XQ
)@@G@@^@)^@)^@)^@)^@)^[OH[>IT>^[+GD<HT3I[-GT>^[2G(<H92G-3^[-IL>^[,G(<G(3IT-IL9XR
)@@G@@^[&H92^[4H[>^[<H92IL>GT4^[&I(,GT4HD\H1(H1$@M@@@G^@)^@)^@)^@)^@)^@)^@)^[\XS
)@@G@@G0)I-*G*)GL-GT:I9-IL=^[2G(-G))IL\I(4HD,G(3BS)HD,^[&GD<I)?^[(G0)I-*G*)G1(XT
)@@G@@H->^[(IS)^@)@M@@@G^@)^@)^@)^@)^@)^@)^@)^[\I[>H1>G))G1\IK)I92HD4HD,G8?^[4XU
)@@G@@H[(IS)G1?GD$^[!I(3I))GL>^[3G(4^[&H92^[+GD<HT7GD2G))^@)@M@@@G^@)^@)^@)^@)XV
)@@G@@^@)^@)^@)^[2G(-G-3^[4H8)I9\IL: 0)^[DG0)I-*HD3^[&H--G8)HD3^['G(2H8?^[+GD<XW
)@@G@@HT3I[-GT>^[2G(<H92G-3^@)@C@@@G^@)^@)^@)^@)^@)^@)^@)^[-IL>^[,H94^[7IL(I-4XX
)@@G@@G(, 0)@]@@@GIT0GD<G*)^@)@K@@@G^@)^@)^@)^[KETMETA^@)^[MG(-G)!ET>G9!G(,I))XY
)@@G@@C1?GD$ 0)^[OH[(IS)HD3^[-H0)HD,I->IL,GD?^[&H--G8?^[3G(4@L@@@G^@)^@)^@)^@)XZ
)@@G@@^@)^@)^@)^[(G0)GC)IL>GD=^[3G($H(>H14^[2H95I-(H1>^[7GD3^[<GD?H->G)?^[\I-*YA
)@@G@@G(2I9(IT>^['G(2H8,@]@@@GIT0GD<G*)^@)@N@@@G^@)^@)^@)^[KETNC0)^@)^[NI--I->YB
)@@G@@^[AH--G8,^@)E-*HD3^[(IS)GD,^[(H14G(2H1-H))G1?GD$ ))IT>I))I9(I-*^[\H1>^[\YC
)@@G@@G0)I-*IL>G*)@A@@@G^@)^@)^@)^@)^@)^@)^@)^[6GD?I(>IS'^@)@]@@@GIT0GD<G*)^@)YD
)@@G@@@E@@@GA@)^@)^@)^@)^@)^@)^@)^@)^@0^@!^[MG(-G))H1>J[4^[3G($H(>H14^@)@E@@@GYE
)@@G@@A@)^@)^@)^@)^@)^@)^@)^@)^@1^@!^[NHT(I@)H1>J[4^[3G($H(>H14^@)@E@@@GA@)^@)YF
)@@G@@^@)^@)^@)^@)^@)^@)^@2^@!^[AHD,G))H1>J[4^[2G(<H92G))^@)@]@@@GIT0GD<G*)^@)YG
)@@G@@@K@@@G^@)^@)^@)^[KETMCTR^@)^[MG(<H92G))CT\H14IL\H))E9\IL= 0)^[OH[(IS)G1(YH
)@@G@@G(?G))HD3^[3G(4^[4H8)I-*G*)^@)@N@@@G^@)^@)^@)^@)^@)^@)^@)^[NC-A^[2G(<H92YI
)@@G@@G))GT\H14IL\H))I9\IL=^[\G0)I-*G*)IL>GT\IL=^[%I(3I))IL>I-5IL,G(=^[+JC)GD,YJ
)@@G@@JC)^@)@B@@@G^@)^@)^@)^@)^@)^@)^@)^[2G(-G))IL\I(4HD,G*,@]@@@GIT0GD<G*)^@)YK
)@@G@@@N@@@G^@)^@)^@)^[KET]D))^@)^[]I(&G1>IK)D->H1$I-* 0)E-*HD3^[&HD>H-=^[<H9,YL
)@@G@@I--HD,IS)I-*G*)GL5G1&G(2^[?G(,G94H@)G12H9!^[4H[>@J@@@G^@)^@)^@)^@)^@)^@)YM
)@@G@@^@)^[!H93I))IL>GT>H14^[<GD?H))I-\^[-^[2G(-G))H92^[7IL(I->^[2H95I-(H1> 0)YN
)@@G@@@]@@@GIT0GD<G*)^@)@O@@@G^@)^@)^@)^[KET]CC)^@)^[]I(&G1>IK)CD=G-2G(3IS,^@)YO
)@@G@@E-*HD3^[&HD>H-=^[<H9,I--HD,IS)I-*G*)GL5G1&G(2^[-G-=IL>IT3^[&IL\H*)I-*G*)YP
)@@G@@@J@@@G^@)^@)^@)^@)^@)^@)^@)^[!H93I))IL>GT>H14^[<GD?H))I-\^[-^[2G(-G))H92YQ
)@@G@@^[7IL(I->^[2H95I-(H1> 0)@]@@@GIT0GD<G*)^@)@M@@@G^@)^@)^@)^[KET#ELG^@)^[#YR
)@@G@@I(2IL>H14^[MG(<H92G))D->H1$I-* 0)^[OH[(IS)G1(G(?G))GT\H14GD(H13^[4H[>^[?YS
)@@G@@G(,G94H@)H9&@N@@@G^@)^@)^@)^@)^@)^@)^@)^[4H[>^[<I(2IL>H14^[2G(<H92G)?^[\YT
)@@G@@IK)IL>GT\IL=^[3G($H(>H14 ))HL5IT4^[2G(-G))H92^[7IL(I-4G(, 0)@]@@@GIT0GD<YU
)@@G@@G*)^@)@N@@@G^@)^@)^@)^[KETMD))^@)^[MG(<H92G))D->H1$I-* 0)^[OH[(IS)G1(G(?YV
)@@G@@G))GT\H14GD(H13^[4H[>^[?G(,G94H@)H9&^[4H[>^[>H14HD2G*)@B@@@G^@)^@)^@)^@)YW
)@@G@@^@)^@)^@)^[2G(<H92G))HL5IT4^@)@N@@@G^@)^@)^@)^@)^@)^@)^@)^[2G(-G))H92^[7YX
)@@G@@IL(I-4G(, ))I9*HD<H@)HD,GT?I(=G(3^[4H[>^[?G(,G94H[3^[\G0)GD?H))IT>G9!G(,YY
)@@G@@I-3 0)@]@@@GIT0GD<G*)^@)@O@@@G^@)^@)^@)^[KETDCL[^@)^[DH1(I-(GD?^[]I(&G1>YZ
)@@G@@IK)CD=G-2G(3IS,^@)E-*HD3^[&HD>H-=^[<H9,I--HD,IS)I-*G*)HD,HD4HD-H))GL5G1&ZA
)@@G@@G(2^@)@O@@@G^@)^@)^@)^@)^@)^@)^@)^[-G-=IL>IT3^[-IS)G9(I1>H0)I-\^[-^[KET^ZB
)@@G@@C1DD8)IL\I(4HD,G*,^@)E-*HD3^[6GD?I(>^[(IS)G-(G1&G(2G(,I))^@)@D@@@G^@)^@)ZC
)@@G@@^@)^@)^@)^@)^@)^[&IL\H*)I-*G*)E[NCL[^[&HD>H-=^@)@N@@@G^@)^@)^@)^@)^@)^@)ZD
)@@G@@^@)^[7H[>H0)GD=G-(I-(H9,GD?^[2G(<H92G))IT>G9!G(,I-3^[*GD6G*)GL>G(,^[2G(-ZE
)@@G@@G))H92^[7IL(I-4G(, ))^@)@I@@@G^@)^@)^@)^@)^@)^@)^@)^[-IS)E[NCL[^[$G(4IS)ZF
)@@G@@I(0G--I->G))G1\IK)G(-GT*^[3G($H(>H14 0)^@)@]@@@GIT0GD<G*)^@)@F@@@G^@)^@)ZG
)@@G@@^@)^[KETSAC1^@)^[PIT>IK$IS)F@1AC)IL>I-5IL,^[-G-=IL>IT3 0)^@)@]@@@GIT0GD<ZH
)@@G@@G*)^@)@O@@@G^@)^@)^@)^[KETIE9[^@)^[IG(8I))E92HD4G*)CD=G-2G(3IS,^@)E-*HD3ZI
)@@G@@^[6GD?I(>^[(IS)GD?I9-JD3^[3G(4^[4H8)I-*G*)H1>J[4^[7H92G))^@)@K@@@G^@)^@)ZJ
)@@G@@^@)^@)^@)^@)^@)^[-G-=IL>IT3^[(H0)I-*G*)G1(H->^[4H8)I92HD4G*?^[&H92^[&HD?ZK
)@@G@@G(3^[\I[>H1>G))^@)@H@@@G^@)^@)^@)^@)^@)^@)^@)^[&H92^[7IL(I-(H1$ 0)^[DI))ZL
)@@G@@HD3^[4H[(IS)I1-H-5G*)I9*HD<H@)@N@@@G^@)^@)^@)^@)^@)^@)^@)^[>H1-GL?G(3^[4ZM
)@@G@@H[>^[KET^C0)IL\I(4HD,G(3^[4H8)GD?H-\I8)HD,I->IL6G(,HD,G8)IL>GD=IS)GL>I-7ZN
)@@G@@G(>H0)@K@@@G^@)^@)^@)^@)^@)^@)^@)^[7IL(I->IS)I9(I-*H95I))GD&G1>GT4HD,G8)ZO
)@@G@@I-*G*)H1>J[4^[7IL(I->^[0H93HD4HD\H0,@]@@@GIT0GD<G*)^@)@N@@@G^@)^@)^@)^[KZP
)@@G@@ETDC-[^@)^[DH1(I-(GD?^[^HD3HS)CD=G-2G(3IS,^@)E-*HD3^[&HD>H-=^[<H9,I--HD,ZQ
)@@G@@IS)I-*G*)HD,HD4HD-H))I9\IL=^@)@M@@@G^@)^@)^@)^@)^@)^@)^@)^[-G-=IL>IT3^[\ZR
)@@G@@G0)I-*G*)G1(H-> 0)^[AH92^[&HD?G(3^[\I[>H1>G))G1\IK)IL>GD=HD,G8?^[4H[(IS)ZS
)@@G@@@J@@@G^@)^@)^@)^@)^@)^@)^@)^[(IS)I-*G*)G1(IL3I))GD=G-2G(3IS)IL>GD=BS)G1\ZT
)@@G@@IK)G1(H->IS)H90G(,G(=^@)@J@@@G^@)^@)^@)^@)^@)^@)^@)^[&H92^[7IL(I-(H1$ ))ZU
)@@G@@HD4^[(IS)I-*G*)G1(IL3I))GD=G-2G(3IS)I92HD4I->H0,@]@@@GIT0GD<G*)^@)@I@@@GZV
)@@G@@^@)^@)^@)^[KETAEL^CC)^[AHD2IT4^[MG(<H92G))C-(IT:^[[G-=IL>IT3 0)^[OH[(IS)ZW
)@@G@@G1(G(?G))^@)@L@@@G^@)^@)^@)^@)^@)^@)^@)^[<H9,I--HD,IS)I-*G*)G-(IT:^[-G-=ZX
)@@G@@IL>IT3^[\G0)I-*G*)G1(IL3I))IL>GT\IL=^[3G($H(>H14@M@@@G^@)^@)^@)^@)^@)^@)ZY
)@@G@@^@)^[\G0)I-*G*)H(\IT4^[2G(<G(,I))IL>GT\IL=^[2G(-G))H92^[7IL(I-4G(, 0)^[OZZ
)@@G@@H[(IS)I1-H-5G*)^@)@M@@@G^@)^@)^@)^@)^@)^@)^@)^[>H1-GL?G(3^[+GD<HT7GD2G))AA
)@@G@@IL>GD=IS)I-\^[7H92HS)I9*G(,^[3HT(I[0HD,G8)IT>G9!G(,I-3 0)^@)@]@@@GIT0GD<AB
)@@G@@G*)^@)@E@@@G^@)^@)^@)^[KETSAC1EK)^[DH14G(2H1-H))IL>I-5IL,^[-G-=IL>IT3 0)AC
)@@G@@@]@@@GIT0GD<G*)^@)@]@@@GGT\H-5H(,^@2@M@@@G^[DH0)GD=G-(I-(H9,^[4H8)I-*G*)AD
)@@G@@G1(G(?G-3^[-GL\I1> ))I-*G(2G*)GD2G*)GT>IL4GD(H0)G1(G(?G-3^[7HD4H[(H0)I-*AE
)@@G@@G*)^@)@M@@@G^[KDDJ^))I[\IL4HD\H0)H9&^[4H[>^[0GD<HT>I))I9*HD<H@)GD2G*)H9&AF
)@@G@@^[<H9,GT>IL,^[4H8)I-*G*)I(3G(2 0)^[RH[(H->^[4H[>@M@@@G^[&H92H(-I))H9&^[4AG
)@@G@@H[>^[KDDJ^))I[-GT:G(4^[(IS)G15H-?JC)G->IT<IL(GL>G))HD,^[^D9# 9KDDJ^)?^[4AH
)@@G@@H[>^[&HD>H-=IS)^@)@E@@@G^[\G0)HD!I[\IL4GD,GT>^[4H8)I-*G*)E[NC-ADDJ^[5IT>AI
)@@G@@IK)GD2G*'^@)@]@@@GIT0GD<G*)^@)@#@@@GGT\H-5H(,^@1A0)^@)@M@I@G^@)^@)^@)^[KAJ
)@@G@@DDJC1I^@)^[AHD?G(,GD!G*,^@)E-*HD3^[&HD>H-=^[<H9,I--HD,IS)I-*G*)HD,I->IL,AK
)@@G@@GD?^[5IT>H1-H(>^[5IT>G))@N@@@I^@)^@)^@)^[KDDJC1I^@)^[AHD?G(,GD!G*,^@)E-*AL
)@@G@@HD3^[&HD>H-=^[<H9,I--HD,IS)I-*G*)HD,I->IL,GD?^[5IT>H1-H(>^[5IT>G))G1\IK)AM
)@@G@@@M@@@G^@)^@)^@)^@)^@)^@)^@)^[D 9J 0)^[^H8)H1\I))GT*GD,G9>^[4H[(IS)G1(G(?AN
)@@G@@G))I9*HD?G*)GC)G1(H->^[(IS)H90G(,G(=^[\IK)@K@@@G^@)^@)^@)^@)^@)^@)^@)^[4AO
)@@G@@H[>^[KET^C1DD8)IL\I(4HD,G(3^[7HD?H))H1\I))G15H1<I-(H9,^[<H92IL>GT4H-9 0)AP
)@@G@@@]@@@GIT0GD<G*)^@)@M@@@G^@)^@)^@)^[KDDJE[[D))^[KGD$HD,G8)CD2G(-^[GHD,HS,AQ
)@@G@@^@)E-*HD3^[&HD>H-=^[<H9,I--HD,IS)I-*G*)GD=G-2G(3IS)H9&^[4H[>@L@I@G^@)^@)AR
)@@G@@^@)^@)^@)^@)^@)^[0GD$HD,G8)GD2G(-^[*G(-G->IK?^[&IL\H*)I9*HD<H@)GD?H))I[-AS
)@@G@@G9>IS)GD2G*)GT*GD(H1>G),@L@@@I^@)^@)^@)^@)^@)^@)^@)^[0GD$HD,G8)GD2G(-^[*AT
)@@G@@G(-G->IK)G12H9!^[7H[(GT*^[-H-?^[0GD$G(3^[-IL>^[<H[-HD,G(= 0)@N@@@G^@)^@)AU
)@@G@@^@)^@)^@)^@)^@)^[GHD:G*)E[DD9AD0?^[=H8)H1\I))GT*GD,G9>^[4H[(IS)G1(G(?G))AV
)@@G@@I9*HD?G*)GC)G1(H->^[(IS)H90G(,G(= 0)@]@@@GIT0GD<G*)^@)@M@I@G^@)^@)^@)^[KAW
)@@G@@DDJE-MCC)^[OEL[GT>^[&H--G8,^@)E-*HD3^[&H--G8)G-(IT-GL?G(3 ))H92^[>H1-GL?AX
)@@G@@G(3^[4H8)I1-IL9HD,G8)^@)@M@@@I^@)^@)^@)^[KDDJE-MCC)^[OIL-GT>^[&H--G8,^@)AY
)@@G@@E-*HD3^[&H--G8)G-(IT-GL?G(3 ))H92^[>H1-GL?G(3^[4H8)I1-IL9HD,G8)^@)@M@I@GAZ
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[=G($IL>G(3^[4H[>^[4IL-GT(H1$^[&I(,GT4HD\H0)H9&^[4BA
)@@G@@H[>^[KDDJ^))IL\I(4HD,G(3 0)^[NG(>^@)@L@@@I^@)^@)^@)^@)^@)^@)^@)^[=G($IL>BB
)@@G@@G(3^[4H[>^[4IL-GT(H1$^[&I(,GT4HD\H0)H9&^[4H[>^[KDDJ^))IL\I(4HD,G(3 0)^@)BC
)@@G@@@]@@@IIT0GD<G*)^@)@D@@@IA@)^@)^@)^@)^@)^@)^@)^[QGD?I(>^@)E-9I[>^[\G0)I-2BD
)@@G@@GD<G*)@B@@@IA@)^@)^@)^@)^@)^@)^@)^@)^@0^@)^@)D1\H1>^@)@F@@@IA@)^@)^@)^@)BE
)@@G@@^@)^@)^@)^@)^@1^@)^@)ET4GD4HD3I-(GT-H))IT5H(!GD2JC)^@)@K@@@IA@)^@)^@)^@)BF
)@@G@@^@)^@)^@)^@)^@2^@)^@)E(3G(2^[2G(-G-3^[-H1=^[7IL(I->IS) [KDDJEK=^[-H1=^[KBG
)@@G@@DDJE8= C)^@)@F@@@IA@)^@)^@)^@)^@)^@)^@)^@)^@3^@)^@)E[-G9>^[2G(-G-3^[-H1=BH
)@@G@@^[7IL(I->IS)@F@@@IA@)^@)^@)^@)^@)^@)^@)^@)^@4^@)^@)E[-G9>^[*HD4IS)GD,G))BI
)@@G@@G1-I(?I-3^@)@]@@@IIT0GD<G*)^@)@N@@@I^@)^@)^@)^@)^@)^@)^@)^[OH[>^[*HD$H[>BJ
)@@G@@IK)I-*G*)I-2GD<G*)I1-H-5G*?^[4H[>^[$IL>GD4G(2^[4H[>^[-H(\I(,I))H9&^[4IL-BK
)@@G@@GT>^@)@B@@@I^@)^@)^@)^@)^@)^@)^@)^[(H1&H92H(-I-(H9, 0)@F@I@G^@)^@)^@)^@)BL
)@@G@@^@)^@)^@)^[^D9# 9KDDJ^))G1\IK)H(\IL>^[=G(4GD(H-3 0)^@)@]@@@GIT0GD<G*)^@)BM
)@@G@@@K@@@G^@)^@)^@)^[KDDJET[D))^[NI--I-(IT4HD<IS)CD2G(-^[GHD,HS,^@)E-*HD3^[&BN
)@@G@@HD>H-=^[<H9,I--HD,IS)I-*G*)^@)@L@@@G^@)^@)^@)^@)^@)^@)^@)^[-G-=IL>IT3^[\BO
)@@G@@G0)GD,^[>H->I1>H0) @1AC(^[7H92G))GD2G(-^[5IT>G))I-\^[!GD(H14GD(H0)@L@@@GBP
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[3I--I-(IT4HD<GD?^[(H1&H92H(-I-(H9,^[\H0)I-*G*)DC\BQ
)@@G@@D8)I[>IL&H92H(-H1<G*)H9&^[4H[>@K@I@G^@)^@)^@)^@)^@)^@)^@)^[KDDJ^))I[-GT:BR
)@@G@@GD$G*,^@)ET>G*)C-JCS\E[DD8=^[&H92^[!H92G*)HD,G1\IL!GD4HD\H0,@B@@@I^@)^@)BS
)@@G@@^@)^@)^@)^@)^@)^[KDDJ^))I[-GT:GD$G*,@]@@@GIT0GD<G*)^@)@M@@@G^@)^@)^@)^[KBT
)@@G@@DDJC-[^@)^[^HD3HS)CD=G-2G(3IS,^@)E-*HD3^[&HD>H-=^[<H9,I--HD,IS)I-*G*)DC\BU
)@@G@@D8)GD=G-2G(3IS)G1\IK)^@)@O@@@G^@)^@)^@)^@)^@)^@)^@)^[4H[>^[,G(8I))IL>GD=BV
)@@G@@^[\IK)I92HD4G*)IL>ID5G(3I),^@)CL9^[=HD2G(<I-?JC)IT>I-4HD,G8)I-*HD3^[&HD>BW
)@@G@@H-= ))@J@@@G^@)^@)^@)^@)^@)^@)^@)^[4H[>^[5IT>IK)H(-JC)G(&G1>GT4^[-^@+IL-BX
)@@G@@H1=H9!^[-GT<G(3IS+^[2G(<H92G))@L@@@G^@)^@)^@)^@)^@)^@)^@)^[2G(-G);^[4H[>BY
)@@G@@^[-G-=IL>IT3^[\G0)I-*G*)IL>GT\IL=^[<H9,I-2H9?^[7H92G))H(5IT4^[+G*)@O@@@GBZ
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[0H--GT>G))HD,^[KDDJC-[ 0)^@+EL-H1=H9!^[-GT<G(3IS+CA
)@@G@@^[7IL(I-(H1$^[(IS)H1\I))IT5G9$G(3I->G)?^[-IS)^@)@N@@@G^@)^@)^@)^@)^@)^@)CB
)@@G@@^@)^[(I))I9(H-?^[\H1?JC)GL>^[3I(<GT>IT3G15H))HD&^[>J[-GT4H-9^[4H[>^[2HD$CC
)@@G@@H[4^[?G(,G94H@)IL>GT\IL=@B@@@G^@)^@)^@)^@)^@)^@)^@)^[(IS)I92HD4I->H0,^@)CD
)@@G@@@]@@@GIT0GD<G*)^@)@M@@@G^@)^@)^@)^[KDDJD(OCC)^[HI(?I-( (OH[2G(-G))CD<GT>CE
)@@G@@IT3 0)^[OH[(IS)G1(G(?G))GT\H14GD(H13^[-^[&H--G8)I9*HD<H@?^@)@K@@@G^@)^@)CF
)@@G@@^@)^@)^@)^@)^@)^[(G0)H1\H1'G(2H8?^[(H1=HD<GD4G(3^[4H[-I))H(5H-4HD0H->^[3CG
)@@G@@HD!I(?I--H1>H95IS)@K@J@G^@)^@)^@)^@)^@)^@)^@)^[-GT<G(3IS)I-\^[4H[>^[&HD?CH
)@@G@@G*)HD3^[0G(2H((IT3HD+H->^[-H1=^[0H93IT(GL?G*,^@)@L@@@J^@)^@)^@)^@)^@)^@)CI
)@@G@@^@)^[-GT<G(3IT>IS)I-\^[4H[>^[&HD?G*)GD2G*)I[>IL!HD3IT(GL?G*)GD,G))I[\IT3CJ
)@@G@@HD+H-> 0)^@)@L@@@G^@)^@)^@)^@)^@)^@)^@)^[OH[>^[3HD$H1(G1(GT-H1<G*)H9&^[4CK
)@@G@@H[(IS)G1?GD$^[(IS)I-*GD4^[7H[>H0)H1\H1'G(2H8?^@)@L@J@G^@)^@)^@)^@)^@)^@)CL
)@@G@@^@)^[0GD$G*)IL>GD= (+G(&H92G*!I92HD4G(3^[!I(3I))GL>^[0G(2G1\IL!G(=^[\H0)CM
)@@G@@G(!I[4JC)^@)@K@@@J^@)^@)^@)^@)^@)^@)^@)^[0GD$G*)IL>GD= (+G(&H92G*!I92HD4CN
)@@G@@G(3^[!I(3I))GL>^[0G(2G1\IL!G(=^[\H0)H1>I8)@L@@@G^@)^@)^@)^@)^@)^@)^@)^[0CO
)@@G@@GD$G(3^[4H[>IL>GL9^[3H-(G9*I-?JC)IL>G-5GT(H1$^[4H[>^[\I[4HD!HD'GD4HD\H0)CP
)@@G@@H9&^@)@L@@@G^@)^@)^@)^@)^@)^@)^@)^[4H[>^[0GD$HD,G8)GD?G9\IL(I-*H*,^@)DD&CQ
)@@G@@^[(I))HD3^[:H1\I9,^[4H[-I))I-*G*)G1(H->^@)@K@@@G^@)^@)^@)^@)^@)^@)^@)^[7CR
)@@G@@HD?H))GL>^[3HD,G9?G*!I-*IL>GD=^[-GT<G(3IS?^[4H[(IS)G1?GD$^[3H[\I(?G))GL>CS
)@@G@@@L@@@G^@)^@)^@)^@)^@)^@)^@)^['G(2H8)I-\^[-I1\HD=^[4H[>^[0GD$G*)IL>GD= (+CT
)@@G@@G(&H92G*!I92HD4G(3^[(H0)H92G->IK)^@)@F@@@G^@)^@)^@)^@)^@)^@)^@)^[4H8)G9-CU
)@@G@@HD,^[!GD8HD!I(!^[>G1&HD<HD>H1<JC,^@)@]@@@GGT\H-5H(,^@2@]@@@GIT0GD<G*)^@)CV
)@@G@@@M@@@G^@)^@)CD,^[-IT3G(!GL?JC)I[2H9<G(=I(2G*)G(8HD3I-3^[4H8)G->G1(H1>^[-CW
)@@G@@H-?^[\G0)I-*G*)GD+H96G*)G1(G(?G))H1-H(>IS)@H@@@G^[-IS)I9>H-?^[-IS)I-*G*)CX
)@@G@@G1(G(?G))H1-H(>IS)I9(I-*HD,^[4H[>^[KDDJ^))I[-GT:G(4 0)@]@@@GIT0GD<G*)^@)CY
)@@G@@@E@@@GA@)^@)^@)^@)^@)E[NC-AC1DC(GC-N^@/I[-GT:G(4^[-G-=IL>IT3B0)^@)@]@@@GCZ
)@@G@@IT0GD<G*)^@)@L@@@G^[DG0)B-0GD<HT>I))GD=G-2G(3IS"^[(IS)G9(I1>H0?^[4H[>^[&DA
)@@G@@HD>H-=^[,GD!G(3^[7HD?H))GD=G-2G(3IS)G1(G(?G-3^@)@L@@@G^[7HD4H[(H0)I-*G*)DB
)@@G@@G9(I1>H0)I[-GT:G(4BS)HD&^[\H((I-4G(= ))I-*G*)G1(G(?G))H1-H(>IS)I9(H-?^[+DC
)@@G@@G*)GL-IT>G))@L@@@G^[\H0)JL>IL\ ))GD,G))I9(H-?^[\H1?JC)GL>^[5IT>G15H))HD&DD
)@@G@@^[-G-=G(=^[4H8)GC)I[-GT:G(4^[-G-=IL>IT3^[\IK)^@)@C@@@G^[5IT>G))I9(I-*^[-DE
)@@G@@H0)HD,G->J@)IL>G9(IT4G(2 0)^@)@]@@@GIT0GD<G*)^@)@B@@@GAL#IL>GD4HD,G8)I-*DF
)@@G@@G*)E[NC-ADDJ^[KGD<HT>I))@]@@@GIT0GD<G*)^@)@N@@@G^@)^@)CD,^[-IT3G(!GL?JC)DG
)@@G@@I[2H9<G(=I(2G*)G(8HD3I-3^[4H8)GT2G(-I->^[-H1=^[(H1(I-(GD?HD'G*)I-*G*)E[NDH
)@@G@@C-ADDJ^[0GD<HT>I)?@I@@@G^[(H1<H-5G-(H1$^[4H[>^[KDDJ^))I[\IL4HD\H0)H9&^[4DI
)@@G@@H[>^[0GD<HT>I),^@)E-*G*)GT-H-?BK)^@)@]@@@GIT0GD<G*)^@)@H@@@G^@)^@)E[NC-ADJ
)@@G@@E[FE))JS%J*/G1,B0)B-0GD?B0)B-2GD2G0" )/GL3I8" )/I-2GC" )/IT-H)"^@)@]@@@GDK
)@@G@@IT0GD<G*)^@)@L@@@G^@/C1,B0)HD3^[4H[>^[&HD?G(,GD!G*;^[(G0)HD4^[(IS)G1?GD$DL
)@@G@@G9>G)) @% C?^[4H[>H0)I-*G*)H(5H-4HC!I-*IL>GD=^@)@L@@@G^[-GT<G(3IS)G1?GD$DM
)@@G@@^[(IS)IT>I)?^[\I-*G(2I9(IT>^[(I))HD3^[<H->GD2G(= 0)^@/E[-H)"^[(IS)I-*G*)DN
)@@G@@I[-G9(H1$^@)@L@@@G^[-IL>GC)H-(H1:BS)I-*HD3^[(IS)I-*G*)GD=G-2G(3IS)H9&^[4DO
)@@G@@H[>^[&HD2IT4^[7H92G))G9>H1>IL-I->G))GL9^[4H[>^@)@L@@@G^[KET^C1KCC)I[2H9<DP
)@@G@@G(=I(2G*,^@)B-MGD2G0"^[(IS)I-*G*)IL>GD= (-H-? (2G(<H92G-3^[&H--G8?^[7H[(DQ
)@@G@@GT*^[(G0)^@)@L@@@G^[,H9,JL>IL\ ))GT-I(3G(3^[4H[>^[2G(-G))IL\I(4HD,G(3^[4DR
)@@G@@H8)IL>I-5IL,^[-H-?^[2G(<H92G-3^[2G($GD2G-?G(3IS)@K@@@G^[\G0)I-9I[>^@*G(8DS
)@@G@@GT>I[4^[4H[>^[ D9A^[2G(<H92G)(BS)I9*G(,^@/IL-IL&B0)HD3^['G(2H8?^[\H1?JC)DT
)@@G@@G--I--@J@@@G^[2G(<H92G-3 ))I-*G*)H--GL>H))IL>GT\IL= ))GD,G))IT7HD4GT*^[2DU
)@@G@@G(<H92G-3^[-IL>^[2G(4I(2H1>G),@M@@@G^@/E-2GC"^[(IS)I-*G*)I-2GD<G*)G1?GD$DV
)@@G@@BS)HD4IS)I1-H-5G*)H(-JC)IL-H1$G*)G12H9!^@0^@*H1\^[4IL-GT(H1$ C)I-\^@4^@)DW
)@@G@@@L@@@G^@*H(-J[(H(5H*)I-2GD<HD,G8( 0)^@/ET-H)"^[(IS)I-*G*)IT4GD4HD3I-(GT3DX
)@@G@@^[-IL>GC)H-(H1: ))I9*HD<H@)H(5IT4^@)@L@@@G^[-G-=IL>IT3^[-H0)G(?G(6G(,^@*DY
)@@G@@AC1 C)I9\IL=^[-IL>GC)I-\^[+G*)I(3G(=^[4H8)H(-HD,I--HD,^[3I--I-(IT4HD<GD?DZ
)@@G@@@L@@@G^[(H1&H92H(-I-(H9,^[&H92^[4IL-GT(H1$^[-H1=^[D 9J^[0G(2G1\IL!GD,GT>EA
)@@G@@^[-H1-H-9IT(IS,^@)DD&^@/I-2GC"^[(IS)@M@@@G^[,H9,JL>IL\ ))GD,G))B-3GD?B0)EB
)@@G@@HD3^[\H((I-4G(=^[\IK)JL>IL\ ))I-*G(,^[-^[=G(&GD5H-4^[>H->I1>H0)I9\IL=^[-EC
)@@G@@IL>GC)@I@I@G^[(IS)G9>H1>IL-I->G))I(,G->IK)I-*G*)GT5IL2G(,I))H-\GT-I-(H9,ED
)@@G@@^[<H95H14G(2^@:^@2 0)^@)@H@@@I^[(IS)G9>H1>IL-I->G))I(,G->IK)I-*G*)GT5IL2EE
)@@G@@G(,I))H-\GT-I-(H9,^[<H95H14G(2 S2 0)@]@@@IIT0GD<G*)^@)@M@@@I^[OH[>^[4IL-EF
)@@G@@GT>^[&H--G8)H(5IT4^[+G*)HD,HD4HD-H-?JC)IT>I))H9,^[4H[>^[0IL\GS)GT-H-?^[(EG
)@@G@@G0)HD4^[(IS)I-\^[+G*)^@)@L@@@I^[3G(4^[-I))GD,JC)I-(H(>^[=I(2HD,G8)G(8G(<EH
)@@G@@I(4HD\H0)GD3^[=JD,GD!HD<^[?HD,HT-G9>IS)GD2G*)G9>H1>IL-I->G))@F@@@I^[+JC)EI
)@@G@@I-*G*)I[2G(3G(,GT>^[\G0)GC)H1\H1'G(2H8)I-2GD<G*)I1-H-5G*,^@)@]@@@IIT0GD<EJ
)@@G@@G*)^@)@ @@@G^[[H0)G(8GD!I[?G*)I(3GD$G*'^@)@]@@@GIT0GD<G*)^@)@^@@@GA[KCDMEK
)@@G@@C([^@)^@)E[NC-AE[[@E@@@GA@)^@)^@)^@)^@)E[NC-AE[FE))^@)^9DD1KE(OC1DD- ^8)EL
)@@G@@E[[EL CC)^@)@]@@@GETKCD#C*)^@)@K@@@G^[OH[>^[-GL\I1>^[0GD<HT>I))I9\I(?G))EM
)@@G@@GL>^[$G(,G(2GD4G(=^[&H92^[&HD?G*)DDIE[PE-ADDGC*?^[7HD4H@)GC)@N@@@G^[=G(&EN
)@@G@@GD5H-4^[0GD$HD,G8)GD2G(-^[\G0)I-7H8?^@1AC2^[7H92G))I[-G9>IS?^[7HD4H@)GD?EO
)@@G@@H))G1?GD$IS)G->G1-I(?I-(H1$^[4H8)^@)@]@@@G^['G(2H8,^@)@B@@@GADJI[>H1(H1$EP
)@@G@@^[-H1=^[#H-\IT(H1$^[AHD?G(3^@)@N@@@G^@)^@)CL>G1\IL>^[-H19^[2G(-G))H92^[7EQ
)@@G@@IL(I->^[2G(1I(>IT4IS)H(-JC)GL>^[!GD=G*?^[4H[>^[&HD?G*)I9*HD<H@)HD3^[4H8)ER
)@@G@@GL>^@)@M@@@G^[-GT<G(3IT>G))H(5IT4^[+G*)H90G(,G(= 0)^[[^[&HD?G*)H(-JC)GL>ES
)@@G@@^[\I[>H1>G))G1\IK)IL>GD=HD,G8)H9,H-9 ))H92^[(I))@M@J@G^[!GD9^[+G*)H90G(,ET
)@@G@@G(=^[&H92^[7IL(I-(H1$ ))GD3^[7G(?H))GD3^[2G(-G-(H1$ 0)^[OH[>IL>^[-IL>^[4EU
)@@G@@I9\^[2H95I-(H1>IS)@M@@@J^[!GD9^[+G*)H90G(,G(=^[&H92^[7IL(I-(H1$^[-IS)I9>EV
)@@G@@H-?^[-IS)IL>GD=HD,G8,^@)E-*G(2G*)GD2G*)I-7H8)IL\I(4HD,G(3^@)@^@@@G^[4H8)EW
)@@G@@H90G(,^[-^[&HD?G*,@]@@@GIT0GD<G*)^@)@ @@@GALKET^C1MD8) *)EL>GD=^[JI[>H0)EX
)@@G@@@]@@@GIT0GD<G*)^@)@G@@@GA@)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC1 )/HD,HD4HD-H))EY
)@@G@@IL>GD=^[-G-=IL>IT3B0)^@)@G@@@GA@)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC0 )/E[NC-AEZ
)@@G@@DDJ^[0GD<HT>I))GD=G-2G(3IS"^@)@C@@@GA@)^@)^@)^@)^@)D-HDK)^@)^@)^@)F@1AC?FA
)@@G@@E[NC-AELJ^@)@C@@@GA@)^@)^@)^@)^@)DLIFK)^@)^@)^@)CC3 )/G(2IL\IK"^@)@]@@@GFB
)@@G@@IT0GD<G*)^@)@#@@@G^[OH[>^[0IL\GS'^@)@]@@@GIT0GD<G*)^@)@E@@@GA@)^@)^@)^@)FC
)@@G@@^@)E[NC-AELJ^@)^@)B->IL2B0)B-0HT4B0)B-(IL-B0)^@)@]@@@GETKCD#C*)^@)@N@@@GFD
)@@G@@^@)^@)E[NC-AELJ^[(IS)I-*G*)IL>GD= (\I[>H0)IL\I(4HD,G*,^@)E-*G*)G1(H->^[$FE
)@@G@@HD6G(,^[(H0)I-*G*)I[-GT:G(4^[(IS)H90G(,G(=@M@@@G^[&H92^[2G(-G))H90G(2GD4FF
)@@G@@HD\H13 ))GL>G9(H1,HD,G8)GD4^[4H[>^[7H92G))GD=G-2G(3IS)G9(I1>H0)HD,^[[AC,FG
)@@G@@^@)DD&^[4H[>@M@@@G^[&HD?G*)HD3^[-H-2G(-G-9^[\I[>H1>G)?^[[AS)I9(H-?^[+G*)FH
)@@G@@IT>I))H1\H1'G(2H8)I-\^[(H1=HD<GD4G*)GD,^[>IL2H92 0)^@)@C@@@G^[OH[>^[(H1(FI
)@@G@@I-(GD?^[=HD3HS)GD=G-2G(3IS)G1\IK)^@)@N@@@G^[=GD4GC)G1(H->IS)HD3^[<I(3I-\FJ
)@@G@@H(-IL(H-9^['G(2H8?^[7H[(H->^[&H92^[>H->H(>H14IS)HD4^[(IS)I-*G*)I->J[4^[3FK
)@@G@@I--IL4HD,G8)@M@@@G^[3G(<I-\IK)GD=G-2G(3IS)I-(H(>IS)AK8 0)^[PH1?HD:G*)I-*FL
)@@G@@G*)IT9IT4G(!^[?HD+IL-IL9^[2H95I-(H1>^[NC-ADDJ ))I-*HD3@N@@@G^[2H95I-(H1>FM
)@@G@@^[!G(2G(?JC)GT\H1=HD4HD\H13^[4H[>^[0GD<HT>I))G1\IK)G15I-5IL>^[2G(-G))IL>FN
)@@G@@ID5G(3I-3^[-H1=^[,H8)DC\D8)^@)@M@@@G^[(IS)GD<I-5GD?H-9^[0G(2G1\IL!G(= 0)FO
)@@G@@^[OH[>^[5IT>IK$IS)G1(IL3I))IL>GD=^[2G(1I(>IT4^[7HD?H))IL>I-5IL,^[4H[>^@)FP
)@@G@@@J@@@G^[?GD+G(?^[2G(<H92G)) [-IT3I(!HD,G8)GC)I9>H-? (&H92H(>G))ET^C0)G1(FQ
)@@G@@H->^[\IK)G(?G(!G(,I)( 0)@]@@@GIT0GD<G*)^@)@ @@@GALKET^C1RD8) *)E92HD4G*)FR
)@@G@@D90G(,@]@@@GIT0GD<G*)^@)@G@@@GA@)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC1 )/HD,HD4FS
)@@G@@HD-H))I92HD4G*)GD=G-2G(3IS"^@)@G@@@GA@)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC0 )/FT
)@@G@@E[NC-ADDJ^[0GD<HT>I))GD=G-2G(3IS"^@)@C@@@GA@)^@)^@)^@)^@)D-HDK)^@)^@)^@)FU
)@@G@@F@1AC?E[NC-AE9J^@)@C@@@GA@)^@)^@)^@)^@)DLIFK)^@)^@)^@)CC3 )/G(2IL\IK"^@)FV
)@@G@@@]@@@GIT0GD<G*)^@)@#@@@G^[OH[>^[0IL\GS'^@)@]@@@GIT0GD<G*)^@)@E@@@GA@)^@)FW
)@@G@@^@)^@)^@)E[NC-AE9J^@)^@)B->IL2B0)B-0HT4B0)B-(I9-B0)^@)@]@@@GIT0GD<G*)^@)FX
)@@G@@@M@@@G^@)^@)E[NC-AE9J^[(IS)I-*G*)I92HD4G*!H90G(,^[2H95I-(H1> 0)^[OH[>^[&FY
)@@G@@HD?G*)G->G1(H1>G))GL9^[4H[>^[0GD<HT>I))HD3@M@@@G^[\I[>H1>G))G1\IK)I92HD4FZ
)@@G@@HD,G8)IT4GD2I-(H1$^[-I))I-*G*)I9\IL=^[-G-=IL>IT3^[$HD6G(,^[(H0)CC1 0)^[DGA
)@@G@@G0)I-*G*)^@)@N@@@G^[&HD?G*)HD3^[-H-2G(-G-9^[\I[>H1>G)?^[[AS)I9(H-?^[+G*)GB
)@@G@@IL>I-5IL,G(=^[,H9,JL>IL\ ))HD,G-(GT-I-(H1$^[-H0)G(2IL\IK,^@)@ @@@G^[OH[(GC
)@@G@@IS)IL\I(4HD,G*)H(>IL>H-9@M@@@G^[<H9,G-(I-(H9,IS)I-*G*)I[-GT:G(4^[(H0)I[2GD
)@@G@@G(0GD2GD4HD\H0)G1\IK)G15I-5IL>^[7IL(I->^[2G(1I(>IT4IS;^[5H1?HD:G*)@L@@@GGE
)@@G@@^[4H[>^[3JD3I->H*)H-(GL2GD2JC)ET^C1J^[2H95I-(H1> ))I-*G*)I(3G(2^[!I(3I))GF
)@@G@@G(8I[?HD<HD4H-9^[7IL(I->^[4H[>@M@@@G^[?GD+G(?^[2G(<H92G),^@)E9*HD?G*)GC)GG
)@@G@@G1(H->^[(IS)H90G(,G(=^[&H92^[7IL(I-(H1$ ))IL>GD=^[\I[>IL-I-(H9,IS)GD2G*)GH
)@@G@@@#@@@G^[0G(2H((I-4G(= 0)@]@@@GIT0GD<G*)^@)@ @@@GALKET^C1MCS) *)EL>GD=^[#GI
)@@G@@H-\IT>@]@@@GIT0GD<G*)^@)@G@@@GA@)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC0 )/E[NC-AGJ
)@@G@@DDJ^[0GD<HT>I))GD=G-2G(3IS"^@)@D@@@GA@)^@)^@)^@)^@)D-HDK)^@)^@)^@)F@1AC?GK
)@@G@@E[NC-AEL#JT J*)^@)@C@@@GA@)^@)^@)^@)^@)DLIFK)^@)^@)^@)CC3 )/G(2IL\IK"^@)GL
)@@G@@@]@@@GIT0GD<G*)^@)@#@@@G^[OH[>^[0IL\GS'^@)@]@@@GIT0GD<G*)^@)@C@@@GA@)^@)GM
)@@G@@^@)^@)^@)E[NC-AEL#JT J*)B->IL2B0)B-0HT4B0)@]@@@GIT0GD<G*)^@)@N@@@G^@)^@)GN
)@@G@@E[NC-AEL#^[(IS)I-*G*)IL>GD=^[<H-\IT>^[2H95I-(H1>BS)E[NC-AEL#C*)HD3^[4H[>GO
)@@G@@^[2G(-G))GT?H93G*)GD,G))G(2GD3G*)^@)@#@@@G^[2H95I-(H1> 0)^@)@M@J@G^[OH[>GP
)@@G@@^[&HD?G*)HD3^[<H-\IT>G))G1\IK)IL>GD=HD,G8;^[(G0)I-*G*)G1(H->^[7GD3^[,H94GQ
)@@G@@^[\I[>H1>G)?^[-H0)G(2IL\IK)^@)@J@@@J^[OH[>^[&HD?G*)HD3^[<H-\IT>G))G1\IK)GR
)@@G@@IL>GD=HD,G8;^[(G0)I-*G*)G1(H->^[7GD3^[,H94^[\I[>H1>G)?@B@@@J^[[AS)I9(H-?GS
)@@G@@^[(H1=HD<GD4G*)I-*G*)G(2IL\IK,@M@J@G^[7HD?H))H9<GT5IK,^@)C1\IK)E[NC-AEL#GT
)@@G@@ ))GD,JC)G--I--^[2G(!GD(H1(H1$^[(H0)I[-G9>IS?^[&IL\H*)I-*G*)G1(H-> ))HD3GU
)@@G@@@J@@@J^[AH92^[KET^C1MCS?^[-H19^[=GD4GC)G12H9!^[4H[>^[&HD?G*)IL>H(-HD,HD,GV
)@@G@@G8)HD,^[0GD$G(3^[(IS)^@)@M@@@G^[2G(4GD(H1>G))G1\IK)G15I-5IL>^[2G*!H90G(,GW
)@@G@@IS,^@)C1\IK)E[NC-AEL#C*?^[-H19^[0GD$G(3^[<H9,I--HD,HD,G8)G--I--^@)@L@@@GGX
)@@G@@^[&IL\H*)I-*G*)G1(H->^[-IL>^[>IL-IT>G),^@)DD&^[4H[>^[0GD<HT>I))HD3^[4H8)GY
)@@G@@GL>^[5IT>G))I9(I-*^[-H1\I-*G(2@M@@@G^[&HD?G*)H92^[(G0)I-*G*)G--I--^[(IS)GZ
)@@G@@H1\I))H1>G(=G(= ))I-*G*)E[NC-AEL#C*)IL\I(4HD,G*)IT*H95H-=^[+G*)I(3G(= 0)HA
)@@G@@@A@@@GALKET^C1RCS) *)E92HD4G*)CT?H93G*)^@)@]@@@GIT0GD<G*)^@)@G@@@GA@)^@)HB
)@@G@@^@)^@)^@)D-[ -P^@)^@)^@)CC0 )/E[NC-ADDJ^[0GD<HT>I))GD=G-2G(3IS"^@)@D@@@GHC
)@@G@@A@)^@)^@)^@)^@)D-HDK)^@)^@)^@)F@1AC?E[NC-AE9#JT J*)^@)@C@@@GA@)^@)^@)^@)HD
)@@G@@^@)DLIFK)^@)^@)^@)CC3 )/G(2IL\IK"^@)@]@@@GIT0GD<G*)^@)@#@@@G^[OH[>^[0IL\HE
)@@G@@GS'^@)@]@@@GIT0GD<G*)^@)@C@@@GA@)^@)^@)^@)^@)E[NC-AE9#JT J*)B->IL2B0)B-0HF
)@@G@@HT4B0)@]@@@GIT0GD<G*)^@)@N@J@G^@)^@)E[NC-AE9#^[(IS)I-*G*)IL>GD=^[<H-\IT>HG
)@@G@@^[2H95I-(H1> ))E[NC-AE9#C*)HD3^[4H[>^[2G(-G))GT?H93G*)GD,G))G(2GD3G*)^@)HH
)@@G@@@N@@@J^@)^@)E[NC-AE9#^[(IS)I-*G*)I92HD4G*)GT?H93G*)IL\I(4HD,G*?^[KET^C1RHI
)@@G@@CT ^[(IS)I-*G*)I92HD4G*)GT?H93G*)GD,G))G(2GD3G*)@M@@@G^[2H95I-(H1> 0)^[OHJ
)@@G@@H[>^[&HD?G*)HD3^[<H-\IT>G))G1\IK)I92HD4HD,G8?^[-G14G(2^[7IL(I-(H1$^[-H0)HK
)@@G@@C(JC0)IL>GT\IL= 0)@I@J@G^[DG0)I-*G*)G1(H->^[(IS)H1\I))H90G(,G(=^[&H92^[7HL
)@@G@@IL(I-(H1$ ))GD,^[>IL2H92^[\GT<I(2IS,@L@@@J^[DG0)I-*G*)G1(H->^[(IS)H1\I))HM
)@@G@@H90G(,G(=^[&H92^[7IL(I-(H1$ ))CC3^[7HD?H))HD,G-(GT-I->^[4H[>^[>IL2H92 0)HN
)@@G@@@M@@@G^[[H19^[0GD$G(3^[<H9,I--HD,HD,G8)H(\G-(G1(G(=^[=GD4GC)GD2G*)I-*G(,HO
)@@G@@^[&H-5IT*G(= ))GD,G)?^[(G0)E[NC-AE9#C*)^@)@ @@@G^[7GD3^[<GD?H->G)?^[>IL-HP
)@@G@@IT>G),@N@@@G^[DG0)GD,^[D 9J^[>IL2H92^[\GT<I(2IS)G-5IL(H1$^[4H[>^[ D9A^[2HQ
)@@G@@G(<H92G))I92HD4G*)H92^[4H[>^[0GD$G*)G1?I(3H[(H1$ ))^@)@C@@@G^[[AS)HD3^[3HR
)@@G@@G(4^[4H8)I-*G*)DC\D8)IT4GD4I(3 0)^@)@F@@@G^[DG0)I-*G*)I[-GT:G(4^[(IS)I-\HS
)@@G@@^[+G*)I(3G(=^[\H0)GD,H94H[>IK)G1(H->@M@@@G^[4H[>H0)I-*G*)E[NC-AE9#C*)IL\HT
)@@G@@I(4HD,G*)H(5IT4^[+G*)I(3G(= ))H94H[>IL7HD3G*)I-*G*)E[NC-AE9#^[2H95I-(H1>HU
)@@G@@^[!GD9@M@@@G^[+G*)GT-H-?G(=^[4H8)GT?H93G*)I-*G*)G1(H->^[+I(4^[2G(4GD(H0)HV
)@@G@@GD,JC)G--I--^[2G(!GD(H1(H1$^[(H0)I[-G9>IS)G1\IK)@C@@@G^[-^[3I(+IT>ID5G(,HW
)@@G@@I))IL> (\I[>H0)GD,G))IL>GD= 0)@^@@@GADMG(-G-(H1$^[MG(<H92G-3@M@@@G^@)^@)HX
)@@G@@D9,GT>^[4H[>^[&HD?G*)HD3^[\I[>H1>G))G1\IK)IL>GD=HD,G8)H92^[7IL(I-(H1$ ))HY
)@@G@@IL>GT\IL=IS)H(-JC)GL>^[2G(-G),@L@@@G^[MG(<H92G-3^[!GD9^[+G*)IL>GD=^[(H0)HZ
)@@G@@I-*G((IK)G(,I-(IL>I-9^@*GD,JC)IT>G9!G(,I-3^[-I(4H9!GD4HD<GD?H-9^@)@J@@@GIA
)@@G@@^[<GD4G(,GD4G(= C?^[\IK)IL>GT\IL=IS)IT>G9!G(,I-3^[!GD9^[+G*)IL>GD=^[(H1=IB
)@@G@@HD6HD=I(-H-?JC,^@)@M@J@G^[IH92H(-H-?JC?^[\H1?JC)G--I-- ))H--GL>H)?^[-H1=IC
)@@G@@^[3I9(I-<H@)IL>GT\IL=IS)GD2G*)IL>I-5IL,G(=^[&H92^[2G(-G))^@)@L@@@J^[IH92ID
)@@G@@H(-H-?JC)H9,H-9^[=GD4GC?^[?GD+G(? ))GD,G))IT7HD4GT*^[2G(<H92G-3^[-IL>^[2IE
)@@G@@G(4I(2H1>G))G1\IK)IL>GD=@M@@@G^[2G(1I(>IT4IS;^[*H97G(6G(2 ))HD&^[4H[>^[0IF
)@@G@@GD<HT>I))G1?GD$^[KETMCDMC0)HD3^[3G(4 ))GD?H))IL>GT\IL=IS)I9(H-?^@)@B@@@GIG
)@@G@@^[+G*)IL>I-5IL,G(=^[4H8)I-*G*)I(3G(2 0)^@)@L@@@G^[[H-3H8?^[2G(<H92G-3^[!IH
)@@G@@GD9^[+G*)IL>GD=^[(H0)G((I-*G(2^[=HD2G(<I-(H9, ))HD&^[4H[>^[&HD?G*)H[-IS)II
)@@G@@GL>G(,@C@@@G^[7IL(I-4G(,^[7HD4H@)GL-GT:IT0GD<G*)IL>GT\IL=IS,@]@@@GETKCD#IJ
)@@G@@C*)^@)@L@@@G^@)^@)E-*G*)GT-H-?HD,G8)IT>ID5G(,GT>^[&H92^[-H-?^[\G0)I-*G*)IK
)@@G@@IL>GD=^[2H95I-(H1>IS)GD2G*)I-*G*)IT-H(>BK)@]@@@GIT0GD<G*)^@)@F@@@GA@)^@)IL
)@@G@@^@)^@)^@)D-[^@)^@)^@)^@)CC1 )/GL5G1&G(2^[-GT<G(3IS)I9\IL=B0)@G@@@GA@)^@)IM
)@@G@@^@)^@)^@)D-[ -P^@)^@)^@)CC0 )/E[NC-ADDJ^[0GD<HT>I))GD=G-2G(3IS"^@)@D@@@GIN
)@@G@@A@)^@)^@)^@)^@)D-HDK)^@)^@)^@)F@1AC?E[NC-AEL;ET.JT]J*)@C@@@GA@)^@)^@)^@)IO
)@@G@@^@)DLIFK)^@)^@)^@)CC3 )/G(2IL\IK"^@)@B@@@GA@)^@)^@)^@)^@)DLI^@)^@)^@)^@)IP
)@@G@@CC1 )/C(JC0"@]@@@GIT0GD<G*)^@)@#@@@G^[OH[>^[0IL\GS'^@)@]@@@GIT0GD<G*)^@)IQ
)@@G@@@G@@@GA@)^@)^@)^@)^@)E[NC-AEL;ET.JT]J*)B->IL2B0?B->H9&B0)B-0HT4B0)B-+GD7IR
)@@G@@B0)^@)@]@@@GIT0GD<G*)^@)@L@@@G^@/CL5G1&G(2^[-GT<G(3IS)I9\IL=B0)H92^@/GL-IS
)@@G@@I8"^[<H9,I--HD,IS)I-*G*)GL5G1&G(2^[-G-=IL>IT3^[(H0)D@2^[-H1=@L@@@G^[4H[>IT
)@@G@@^[+I(&G1>IK)H->H1$I-*^[(H0)D@1 0)^@/E[NC-ADDJ^[0GD<HT>I))GD=G-2G(3IS"^[\IU
)@@G@@IK)B-0HT4B0)HD3^[4H[>^@)@L@@@G^[-G-=IL>IT3^[\G0)I-*G*)E[NC-ADDJ^[0GD<HT>IV
)@@G@@I)?^[7H[(GT*^[!I(3I))H[-I1>^[+G(>H0)I[-IT3G(=^[4H8)H9,G*)H9&@A@@@G^[4H[>IW
)@@G@@^[&HD?G*)H90G(,^[2H95I-(H1>IS,@N@@@G^[DG0)CC3^[(IS)IL>I-5IL,G(=^[,H9,JL>IX
)@@G@@IL\ ))G((I-*G(2^[-H0)DC\D8)G(2IL\IK)H9<GT5IL2G(=^@*CC3B00 C)H92^[-^[KET^IY
)@@G@@C1DD8)@M@@@G^[5IT-G9>^[>IL2H92^[\GT<I(2IL>G)) [[AS/A@( 0)^[RH[>H0)I-*G*)IZ
)@@G@@C(,G)!D9& (AHD?G*)HD3^[2G(-GT*G(= ))CC1^[(IS)^@)@^@@@G^[2G(4I(2H1>G))GD3JA
)@@G@@^@!AC,@L@@@G^[PI[\H0)H1\IL!GD?^[2G(4I(2H0?^[[AC)H[-IS)I-*G*)H15H(+G(2^[\JB
)@@G@@G0)I9\IL=IS)I-2GD,IT&G(2G(=^[4H8)I-*G*)^@)@L@@@G^[5IT>IK)GL5G1&G(2 ))GD,JC
)@@G@@G))CC2^[<H9,I--HD,IS)I-*G*)IL>GT\IL=^[<H9,I-2H9?^[7H92G)) [3GD!G*)I1-H-5JD
)@@G@@G*)GD3@]@@@G^[KETMCTR C,@]@@@GIT0GD<G*)^@)@ @@@GALKET^C1M^@!^[MG(-G))EL>JE
)@@G@@GT\IL=@]@@@GIT0GD<G*)^@)@O@@@J^@)^@)E[NC-AEK)IL>GD=IS)I-*G*)H1>J[4^[2G(<JF
)@@G@@H92G)?^[3I--IL4HD,G8)GD4^[4H[>^[<I(2IL>H14^[&HD?G*)GD=G-2G(3IS)HD,^[KDDJJG
)@@G@@C-[ 0)@M@@@J^[DG0)I-*G*)IL>GT\IL=^[(IS)IT>G9!G(,I->G)?^[4H[>^[3G($H(>H14JH
)@@G@@IS)GD2G*)GD5I-\H(-I-(GT-H-?JC)GT-I->H1-I->G),^@)@M@J@G^@)^@)E[NC-AEK)IL>JI
)@@G@@GD=IS)GD,^[>H14HD2G*)IL>GT\IL= ))HD,GT?I(=HD,G8)GD,JC)IT5GL3G(1I(>H14^[3JJ
)@@G@@G($H(>H14IS)I-*GD4@F@J@G^[&H9?H-\I8?^[&IL\H*)I-*G*)GT5IL2G(,I))GD=G-2G(3JK
)@@G@@IS)HD,^[KDDJC-[ 0)@J@@@G^[DG0)I-*G*)G(,I-(IL>^[2G(<H92G))I9-IS)H--IL$G(2JL
)@@G@@^[4H[-H0)I-*G*)I(3G(2^[+I(&G1>IK?^[KETMD))@J@J@G^[<H9,I--HD,IS)I-*G*)GD<JM
)@@G@@I-5GD?^[?G(,G94H@)H9&^[4H[>^[2G(<H92G),^@)DD&^[4H[>IL>^[-IL>^[-H19@N@@@JJN
)@@G@@^[<H9,I--HD,IS)I-*G*)GD<I-5GD?^[?G(,G94H@)H9&^[4H[>^[2G(<H92G);^[\H1?JC)JO
)@@G@@GD3^[!I(<H@)G--I--^[\G0)I-*G*)IL>GT\IL=^@)@I@@@J^[-IS)I9(H-?^[&HD4^[(H14JP
)@@G@@H8)I-*G*)I(3G(2^[+I(&G1>IK)I9(H-?^[+G*)I-2GD,IT&G(2G(= 0)^@)@M@J@G^[2G(<JQ
)@@G@@H92G))IT>G9!G(,I-3^[>H1<H95H14G(2G(=^[0IL(H92^[4H8)GC)G--I--^[2G(<H92G)?JR
)@@G@@^[4H[>JC)GD2G*)IT:HD0I[>G))^@)@L@J@G^[5H1?G(3IS)I-*G*)I[-GT:G(4^[&H--G8)JS
)@@G@@E[NEL[ELA^[(IS)IT>I)?^[(H0)I9*HD<H@)GT-IT>^[4H[>JC)I9(H-?^[+G*)^@)@D@J@GJT
)@@G@@^[2G(4I(2H1>G))GD3^[<H9,I-(H15GD4HD\H0)IL>GT\IL=IS,^@)@M@@@G^[PI[\H0)H1\JU
)@@G@@IL!GD?^[2G(4I(2H0?^[KDDJC-[^[7HD?H))GL>^[5I[=GD4G(=^[4H8)GD=G-2G(3IS)I-*JV
)@@G@@G*)H1>J[4^[2G(<H92G))^@)@L@@@G^[4H8)GL>^[2G(-G),^@)E[-GT:G(4^[&HD>H-=^[KJW
)@@G@@ETAEL^CC)I9(H-?^[<H9,I--HD,^[4H[>^[=HD3HS)GD=G-2G(3IS)H9&^@)@L@@@G^[2G(<JX
)@@G@@H92G))HL5IT4^[2G(4I(2H1>G);^[4H[(IS)I1-H-5G*)H(-JC)H--I->IK)GL>^[0H--GT>JY
)@@G@@G))HD,I-\^[KDDJC-[^[4H8)@C@@@G^[-GT*HD>I1>^[-^@+IL-H1=H9!^K)GD<GT>IT3^[2JZ
)@@G@@G(-G),@]@@@JIT0GD<G*)^@)@O@@@J^@)^@)E-*HD3^[2H95I-(H1>^[7HD?H))H9,H-9^[<KA
)@@G@@GD4G(,GD4G*)IT>G9!G(,I-3^[(G0)I-*G*)GT\H14HD,I(-I-(H9,^[2G(<H92G-3^[&H9?KB
)@@G@@H-\I8)@O@@@J^[4H[>^[2G(<H92G))GL>HD,G8)IL>GD=BS)HD&^[4H[>^[<I(2IL>H14^[2KC
)@@G@@G(<H92G))HD3^[-^[<H9,I-(H15GD4HD\H0)IL>GT\IL= ))HD4^[7HD?H))@G@@@J^[+G*)KD
)@@G@@IT:HD0I[>G)?^[5H1?G(3IS)I[-GT:G(4^[&HD>H-=^[KETMCDMC0)HD3^[3G(4 0)@]@@@GKE
)@@G@@IT0GD<G*)^@)@M@@@G^@)^@)DD&^[KET^C1M^[(IS)GT-H-?G(=^[-G14G(2^[-^[7IL(I->KF
)@@G@@^[\I[>IL-I-(H9, ))GD,^[ D9A^[2G(4I(2H0)I9(H-?^[+G*)^@)@K@@@G^[!GD=G*)I(,KG
)@@G@@H->IT3^[4H[>^[0GD<HT>I))G1(G(?G))E[DD9^CC)H[-IS)GL>G(,^[!H9=HD&HD>G))IT(KH
)@@G@@H1<G*)I-*G*)@#@@@G^[?GD3I))I92HD4G*,@]@@@GIT0GD<G*)^@)@C@@@GALKET^C1MES)KI
)@@G@@ *)EL>GD=^[MG(<H92G))ET>G9!G(,I))^@)@]@@@GIT0GD<G*)^@)@M@@@G^@)^@)E[NC-AKJ
)@@G@@ELN^[2G(4I(2H13^[4H[>^[,G(8I))G--I-- ))H--GL>H)?^[3I9(I-<H@?^[\IK)GT\H14KK
)@@G@@HD,I(-I-(H9,^[2G(<H92G)?@L@@@G^[5H1?G(3IS)I-*G*)I[-GT:G(4^[&H--G8)E[NEL[KL
)@@G@@ELA^[(IS)IT>I)?^[(H0)I9*HD<H@)GT-IT>^[-H-?^[2G(<H92G-3^[-IL>@L@@@G^[2G(4KM
)@@G@@I(2H1>G),^@)E-*G*)I[2HD!GD2JC)G-(G1&G(2G(,GT>^[+G(4I9>G(,^[KET^C1M^[-H1=KN
)@@G@@^[KET^C1MES)HD3^[4H[-I))@L@@@G^[4H[>^[&H92H(>IK)I9(H-?^[-I(4H9!GD4HD<GD?KO
)@@G@@H-9^[<GD4G(,GD4G*)IL>GT\IL=^[3G($H(>H14IS)I-\G9>I-*G(2 ))^@)@H@@@G^[7H[(KP
)@@G@@H->^[4H[>^[?GD4I->IK)I9(H-?^[2G(4I(2H0)I-*G(!^[\H1>^[-I))GC)I-(H(> 0)^@)KQ
)@@G@@@]@@@GIT0GD<G*)^@)@C@@@GALKET^C1MCK) *)EL>GD=^[MG(<H92G))CL-GT:I9-IL=^@)KR
)@@G@@@]@@@GIT0GD<G*)^@)@G@@@G^@)^@)E[NC-AEL]^[(IS)I-*G*)IL>GD=^[2G(<H92G))GL-KS
)@@G@@GT:I9-IL=^[2H95I-(H1> 0)@L@@@G^[OH[>^[2G(<H92G))GD=G-2G(3IT>G))GL9^[4H[>KT
)@@G@@^[0GD<HT>I))G1(G(?G))E[DD9^CC)H(5IT4^[+G*)HD!H(>G-(GD4G(?JC)@M@@@G^[0IL>KU
)@@G@@GT>G->G))GL9^[-^[+GD<HT3I[-GT>^[2G(<H92G)) [4JD0G*)A@4A))H92^@0A)3 C)H92KV
)@@G@@^[4H[(IS)IL\I(4HD,G*)I9(H-?^@)@J@J@G^[4GD:G*)GC)IT0G(<HD-H))G(2IL\IK)IL>KW
)@@G@@I-5IL,^[7HD4H@)CC3^@/^@0 ))HD,G-(GT-I-(H1$^[4H[-I))H1\@I@@@J^[4GD:G*)GD,KX
)@@G@@^[>IL2H92^[2G(4I(2H0)I9(I-*^[[AS)B))A@?^[(H1=HD<GD4HD,G8)I-*GD4^[,H8)^@)KY
)@@G@@@B@@@G^[+GD<HT3I[-GT>^[2G(<H92G))I9-IS)G1\I(,G),@L@@@G^[DG0)GC)GL-GT:IT0KZ
)@@G@@GD<G*)IL>GT\IL=^[(IS)G1\I(,G)?^[KDDJC-[^[(IS)IT>I))I-\^[4H[>^[-G-=IL>IT3LA
)@@G@@^[\G0)I-*G*)@G@@@G^[0IL>GT>G-(H1$^[2G(<H92G)) [,H94^[4H[>^[+GD<HT3I[-GT>LB
)@@G@@^[2G(<H92G)( ))^@)@G@@@G^[-H1=^[4H[-I))IL>GT\IL=^[(IS)I-*G(,^[2G(4I(2H1>LC
)@@G@@G))GD3^[7HD4H@)E[NC-AEK,@L@@@G^[IH94G*)I-*GD4^[2G(<H92G))IT>G9!G(,I-3^[7LD
)@@G@@HD?H))GL>^[3HT(I[0G(=^@*I(,H->IT3^[KETMCDMC0)HD3^[3G(4 C)^@)@J@@@G^[5H14LE
)@@G@@HD?^[4H[>^[&HD2IT4^[-GT<G(0I--GL?G*)IL>GT\IL=^@*G--I-- ))H--GL>H)?^[\IK)LF
)@@G@@IT7HD4GT* C)@J@@@G^[(IS)G1\I(,G)?^[-I))I9*HD<H@)I[\HD,I))I-*G*)IT:HD0I[>LG
)@@G@@G))IL>GT\IL=^[3G($H(>H14IS)I9(H-?^@)@L@@@G^[4H[>H0)GL>^[2G(-G))GD,G))GT-LH
)@@G@@I->H1-I->G),^@)CD&I->IK)I-*G*)IL>GD=^[+GD<HT7GD2G))H90G(2GD4HD\H0?^[4H[>LI
)@@G@@@M@@@G^[<I(2IL>H14^[=HD3HS)GD=G-2G(3IS?^[KDDJC-[ ))HD3^[3G(4^[4H8)I-*G*)LJ
)@@G@@GL>G9(H1,HD,G8)H9&^[4H[>^[2G(<H92G))HL5IT4@N@@@G^[2G(-G),^@)CD,^[ D9A^[2LK
)@@G@@G(4I(2H0)I9(H-?^[+G*)I--HT>H0)I9*G(,^[4H[>^[=HD3HS)GD=G-2G(3IS) [KDDJC-[LL
)@@G@@ C)H(-I-<H[>IS)^@)@D@@@G^[4H[>^[(H1(I-(GD?^[=HD3HS)GD=G-2G(3IS) [KETDC-[LM
)@@G@@ C,^@)@]@@@GIT0GD<G*)^@)@M@@@G^@)^@)DD&^[4H[>^[&HD?G*)I9-IS)H90G(,G(=^[&LN
)@@G@@H92^[7IL(I-(H1$ ))GC)IL>GD=^[+GD<HT7GD2G))I9(H-?^[&I(,GT4HD\H0)^@)@L@@@GLO
)@@G@@^[\H1?JC)HD&^[4H[>^[0GD<HT>I))G1?GD$^[KET]ETRC0)HD3^[,H9,JL>IL\ ))GD,G))LP
)@@G@@I9-IS)IT\^[=I(2HD,G8)I-*G*)^@)@K@@@G^[7IL(I->^[\I[>IL-I-(H9,IS,^@)CC)GT-LQ
)@@G@@H-?^[4H8)E[NC-AEL]^[-G14G(2^[-^[<GD?H))I-\^[KET^C1R^[7HD?H))@C@@@G^[2G(-LR
)@@G@@G))I-*G*)IL>GT\IL=^[%I(3I))I92HD4I->H0,^@)@M@@@G^[[^[2G(-G))GL-GT:I9-IL=LS
)@@G@@^[-G14G(2^[-^[2G(-G))G1\IL7GD2G))I9(H-?^[2G(4I(2H0)I-*G*)IT-H(>^[2G(<H92LT
)@@G@@G)?^[-H1=^@)@I@@@G^[-^[2G(-G))G1\IL7GD2G))GD&I->IK)GC)IL>GD=^[+GD<HT7GD2LU
)@@G@@G))I9(H-?^[=H8)H-(HT>I9(IT> 0)@]@@@GIT0GD<G*)^@)@E@@@GALKET^C1MET]^@!^[MLV
)@@G@@G(-G))EL>GT\IL=^[NG($H(>H14^[]GD<HT7GD2G))@]@@@GIT0GD<G*)^@)@M@@@G^@)^@)LW
)@@G@@E[NC-AELNCK)G15H1<I-(H9,IS)GD3^[-^[<H9!GL(H1-I-(H9,^[\G0)E[NC-AEL]^[-H1=LX
)@@G@@^[KET^C1MES?^[(H0)I9*HD<H@)^@)@M@@@G^[4H[>^[0IL>I1(H95IS)G--I-- ))H--GL>LY
)@@G@@H)?^[3I9(I-<H@?^[\IK)GT\H14HD,I(-I-(H9,^[2G(<H92G))HD3^[2G(4I(2H1>G),^@)LZ
)@@G@@@C@@@G^[KDDJC-[^[(IS)I(0G--I->G))GD0I[2H90IL(GD4G(?JC,@]@@@GADRIL(I-(H1$MA
)@@G@@@N@@@G^@)^@)CD&I->IK)GL>HD,G8)H90G(,G(=^[&H92^[7IL(I-(H1$ ))IL>GT\IL=IS)MB
)@@G@@H(-JC)GL>^[3G(1I(>H14HD-H-?JC)I92HD4I->H0)I-\^@)@]@@@G^[-^[&HD?G*,@M@@@JMC
)@@G@@^[OH[>^[&HD2IT4^[2G(<H92G))I92HD4I->H0)I-\^[-^[&HD?G*)H92^[>H->H(>H14^[!MD
)@@G@@I(3I))GL>^[-^[?GD+G(?^[2G(<H92G))HD,@N@@@J^[\IL=G(2^[4H8)GL>^[NC-A^[&H92ME
)@@G@@H(-I);^[4H[>^[KET^C1DD8)IL\I(4HD,G(3^[=H8)H1\I))IL>ID5HD2G*)I-*HD3^[*H97MF
)@@G@@G(6G(2 0)^@)@M@J@G^[OH[>^[&HD2IT4^[2G(<H92G))I92HD4I->H0)I-\^[-^[&HD?G*)MG
)@@G@@H92^[>H->H(>H14^[!I(3I))GL>^[4H[>^[?GD+G(?^[2G(<H92G),@M@@@G^[[G14G(2^[7MH
)@@G@@IL(I-(H1$^[-^[?GD+G(? ))GD,JC)H15H(+G(2^[\G0)IL>GT\IL=IS)H9&^[-H19^[4JD0MI
)@@G@@G*)H(-JC)GL>^[7IL(I-4G(,@D@@@G^@*G(8GT>I[4 ))H9&^[<H95IL3G*?^[ D9A^[2G(<MJ
)@@G@@H92G-3 C,^@)@M@J@G^[[IS)GC)IL>GT\IL=^[(IS)I92HD4I->H0)I-\^[-^[&HD?G*?^[(MK
)@@G@@G0)HD4^[(IS)H-\H1$G(2^[4H[-H0)I-*G*)GT\H1&HD$I(2G(=^@)@N@J@G^[!GD8HD!I(!ML
)@@G@@^[?G(,G94H@) [<I(2IL>H14H-9^@6AS)I9\IL=IS( ))HD4^[(IS)IT>G9!G(,I->G))IT5MM
)@@G@@GT*^[4H[-I))GT\H14HD,I(-I-(H9,@I@J@G^[2G(<H92G-3^[7HD?H))GT\H14GD(H0)I-*MN
)@@G@@G*)G--I--^[0GD3I))I-*G*)H(-J[(H(5H*)H->H1$I-* 0)@O@@@J^[[IS)GC)IL>GT\IL=MO
)@@G@@^[(IS)I92HD4I->H0)I-\^[-^[&HD?G*?^[(G0)HD4IS)H->H1$I-*^[(IS)G92G(-I->IK)MP
)@@G@@I-*GD,^[(IS)GT\H14GD(H1-GL?G*)@N@@@J^[(H0)I-*G*)H->H1$I-*^[&HD>H-=^[&H92MQ
)@@G@@^[(I-3^[4JD0G*)H9&^[2G(<H92G)?^[(I))I9(H-?^[+G*)IT>G9!G(,I->G))IT5GT*^[4MR
)@@G@@H[-I))@N@@@J^[<H9,I-(H15GD4HD\H0)IL>GT\IL=IS)I9(H-?^[<H9,I--HD,^[4H[>^[=MS
)@@G@@GD4GC)I[-IT4^[4H[>^[!GD8HD!I(!^[?G(,G94H@)IL>GT\IL= 0)@O@@@J^[OH[>^[!GD8MT
)@@G@@HD!I(!^[?G(,G94H@)G1\IK)G--I--^[2G(<H92G-3^[(IS)AK0A)7^[7H92G-3^[-H1=^[&MU
)@@G@@H92^[<H9,I-2H9?^[2G(<H92G-3^[(IS)^@)@#@@@J^@6AS)I9\IL=IS,^@)@M@@@G^[OH[>MV
)@@G@@^[5IT>IK)H1>G(=^[,H94^[7IL(I->^[-H0)C(JC0)IL>GT\IL=BS)I-*HD3^[(IS)G-\H1>MW
)@@G@@^[-I(4H9!GD4HD<GD?H-9^[7H[>H0)@C@@@G^[4H[>^[&HD?G*)HD3^[<H-\IT>G))G1\IK)MX
)@@G@@I92HD4HD,G8,@]@@@GIT0GD<G*)^@)@N@@@J^@)^@)C-5IL(H1$^[7IL(I->^[\I[>IL-I-(MY
)@@G@@H9,IS?^[2G(-G-(H1$^[(IS)I[>IL!HD4I->G),^@)E(,H->IT3^[KDDJC-[^[(IS)GT*GD,MZ
)@@G@@G9>G)?@O@@@J^[-^[&H92I9-IL=^[2G(-G))GD&I->IK)GC)I92HD4G*)GD?I9-JD3^[2G(3NA
)@@G@@I(?I-3^[(H0)GD,^[ D9A^[2G(4I(2H0,^@)CD&I->IK)GC)I92HD4G*?^@)@M@@@J^[+GD<NB
)@@G@@HT7GD2G))IL>GD=IS)I9(H-?^[2G(-G)?^[(H0)IL>I1>IL3G*)H92G->IK?^[4H[>^[2G(<NC
)@@G@@H92G-3^[%I(3I))I92HD4I->H0,^@)@M@@@J^[MGD,G-\H*)GD<GT>IT3^[2G(-G-3^[!GD9ND
)@@G@@^[+G*)I[>IL&H92H(>G))GL9^[=HD2G(<I-?JC)IT>I-4HD,G8)E[DD9^CC)GL>G1\IL>^@)NE
)@@G@@@#@@@J^[>GD<H@)IL>GD= 0)@#@@@J^[OH[>^[2G(-G))^@)@O@J@G^@)^@)C-5IL(H1$^[7NF
)@@G@@IL(I->^[\I[>IL-I-(H9,IS?^[2G(-G-(H1$^[(IS)I[>IL!HD4I->G)?^[+I(4^[KDDJC-[NG
)@@G@@^[!I(3I))GL>^[!H9=HD&HD>G))^@)@M@J@G^[\IK)GL-GT:I9-IL=^[2G(-G-3^[!I(3I))NH
)@@G@@GL>^[=H9,G*)G1\IK)IL>GD=IS)I-\^[+G*)IT(G9,HD&HD<GD,I),^@)E-*G*)IL>GD=^@)NI
)@@G@@@N@@@G^[\I[>IL-I-(H9,IS)G-\^[,H94^[-G1&G(<I))I-*G*)I[\IT(I-(H9,^[\G0)GD,NJ
)@@G@@JC)IT5GL3G(1I(>H14^[7IL(I->IS?^[7H[(GT*^[(IS)^@)@N@@@G^[-H-7GD9IS)G->I->NK
)@@G@@IL!HD,G(=^[+JC)I-*G*)I[-GT:G(4^[&HD>H-=^[KETIE9[ 0)^[[G14G(2^[>GD<H@)I92NL
)@@G@@HD4G*?^[KETIE9[^[(IS)^@)@K@@@G^[5I[=GD4G(=^[-H1= ))HD,^[>G1&G(<I)?^[=G(4NM
)@@G@@G(2H((H1>IS)I-*G*)C(JC0)GD=G-2G(3IS)G1\IK)IL>GD=IS,^@)@]@@@GIT0GD<G*)^@)NN
)@@G@@@A@@@GALKET^C1R^@!^[RIL(I->^[MG(<H92G))^@)@]@@@GIT0GD<G*)^@)@E@@@G^@)^@)NO
)@@G@@E-*G*)GT-H-?HD,G8)IT>ID5G(,GT>^[&H92^[KET^C1R^[(IS'^@)@]@@@GIT0GD<G*)^@)NP
)@@G@@@F@@@GA@)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC2 )/IL>GT\IL=^[<H9,I-2H9?^[7H92G)"NQ
)@@G@@@F@@@GA@)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC1 )/IL>GT\IL=^[-GT<G(3IS)I9\IL=B0)NR
)@@G@@@G@@@GA@)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC0 )/E[NC-ADDJ^[0GD<HT>I))GD=G-2G(3NS
)@@G@@IS"^@)@C@@@GA@)^@)^@)^@)^@)D-HDK)^@)^@)^@)F@1AC?E[NC-AE8)^@)@C@@@GA@)^@)NT
)@@G@@^@)^@)^@)DLIFK)^@)^@)^@)CC3 )/G(2IL\IK"^@)@]@@@GIT0GD<G*)^@)@#@@@G^[OH[>NU
)@@G@@^[0IL\GS'^@)@]@@@GIT0GD<G*)^@)@F@@@GA@)^@)^@)^@)^@)E[NC-AE8)^@)^@)B->IL2NV
)@@G@@B0)B-0HT4B0)B-2GD7B0)B-2GT7B0)@]@@@GIT0GD<G*)^@)@L@@@G^@/EL>GT\IL=^[<H9,NW
)@@G@@I-2H9?^[7H92G)"^[\IK)B-2GT7B0)H(5IT4^[<H9,I--HD,^[-H19^[(H1&H92H(-I-(H9,NX
)@@G@@^[4H8)GL>^@)@M@@@G^[0H--GT>G))HD,I-\^[4H[>^[<H9,I-2H9?^[7H92G))G1\IK)I-*NY
)@@G@@G*)IL>GT\IL=^[7IL(I-4G(, ))G(8GT>I[4^[4H[>^[?G(,G94H@)@M@@@G^[&HD>H-=^[7NZ
)@@G@@H[(GT*^[(IS)GD?I9-JD3^[=G(4G(2H((H1>G))G12H9!^[4H[>^@/IL>GT\IL=^[-GT<G(3OA
)@@G@@IS)I9\IL=B0?^[7H[(GT*^@)@M@@@G^[(I-3G(?G0)GT\H14GD(H13^[4H[>^[2G(<H92G))OB
)@@G@@GD=G-2G(3IS)HD,^[CAK)GD,G))HD4IS)H->H1$I-*^[(H0)D@1 0)^[NAC)H9&^@)@L@@@GOC
)@@G@@^@/IL>GT\IL=^[<H9,I-2H9?^[7H92G)"^[=G(4G(2H((H1>IS)I-*G*)I-9I[>^[\G0)I-*OD
)@@G@@G*)IL>GT\IL= 0)^@/E[NC-ADDJ^@)@N@@@G^[0GD<HT>I))GD=G-2G(3IS"^[(IS)I-*G*)OE
)@@G@@GD=G-2G(3IS)H9&^[4H[>^[0GD<HT>I))I9*HD<H@)H(5IT4^[*GD6G*)GL>G(,^[0GD3IT>OF
)@@G@@G))^@)@#@@@G^[4H8)E[NC-AE9J 0)@G@@@G^[DG0)GD,^[D 9J^[>IL2H92^[\GT<I(2IS?OG
)@@G@@^[[AS)GT\H14GD(H13^[4H[>^[3I--I-5IS,@]@@@GIT0GD<G*)^@)@M@@@G^@)^@)E-*G*)OH
)@@G@@IL>GT\IL=^[(H1=HD<GD4G(=^[+JC)B-2G(<H92G))GD<GT>IT3^[7H92G)"^[(IS)I92HD4OI
)@@G@@I->H0)I-\^[4H[>^[&HD?G*?@M@@@G^[0IL>GT>G->G))GL9^[4H[>^@/IL>GT\IL=^[<H9,OJ
)@@G@@I-2H9?^[7H92G)"BS)HD&^[4H[>^[2G(<H92G))H->H1$I-*^[>J[<G(>G-3^[4H[>@N@@@GOK
)@@G@@^[!GD8HD!I(!^[2G(<H92G))H->H1$I-* ))HD4^[(IS)IT>G9!G(,I->G))I9(I-*^[4H[>OL
)@@G@@^[2G(!GD(H1(H1$^[0H92I-(H9,^[\G0)I-*G*)^@)@N@@@G^[2G(<H92G))I92HD4I->H0)OM
)@@G@@HD,^[-IS)H(-H19^[<H9,I-(H15GD4HD\H0)IL>GT\IL=IS)GD3^[,G(>G->G),^@)DD&^[4ON
)@@G@@H[>^[0GD<HT>I))^@)@M@@@G^[&H--G8)E[NCLNE9A^[(IS)H1\H1'G(2H8?^[-^[+GD<HT3OO
)@@G@@I[-GT>^[2G(<H92G)) [4JD0G*)A@4A)(^[(IS)I92HD4I->H0)GD&I->IK)@A@@@G^[>GD<OP
)@@G@@H@)IL>GT\IL=^[3G($H(>H14 0)^@)@]@@@GIT0GD<G*)^@)@N@@@G^@)^@)E-\^[7IL(I->OQ
)@@G@@^[-^[<H9,I-2H9?^[2G(<H92G))GT\H13HD3I-(H1$^[\H1?JC)H9&^[-^[<H9,I-2H9?^[7OR
)@@G@@H92G)) [-^[3I9(I-<H@)^@)@F@@@G^[2G(<H92G)?^[&H92^[>J[-H(0H-> C?^[[AC)IT*OS
)@@G@@H95H-=^[+G*)JL>IL\ 0)^@)@^@@@GADPIT(H1$^[OH[>^[KIL\GT3@M@J@G^@)^@)CD?H))OT
)@@G@@H9&^[4H[>^[-IT3G(!GL?JC)I[2H9<G(=I(2G(3^[$HD6G(,^[-GL\I1> ))G9>H1>IL-I->OU
)@@G@@^[4H[>^[(H13I-2I(<I-(H9,@L@@@J^@)^@)CD?H))H9&^[4H[>^[-IT3G(!GL?JC)H--H1$OV
)@@G@@I(-G9>^[0IL\GT>G-5IL>IS)G9(I1>H0)HD,^[4H[>^[>J[-H(0H->IS)^@)@C@@@J^[-GL\OW
)@@G@@I1> ))G9>H1>IL-I->^[4H[>^[(H13I-2I(<I-(H9,@M@@@G^[3G(1I(>H1<G(3^[7H[(GT*OX
)@@G@@^[(H(!G(=HD-I->H-9^[0IL>GT>G->G))I-*G(! 0)^[DG0?^[*H97G(6G(2 ))GC)I[-IL-OY
)@@G@@H(>I->IK)^@)@M@@@G^[(IS)H9!HD4I->G))H9,^[4H[>^[0IL\GS)GT-H-? ))I-*G*)GT\OZ
)@@G@@IL2G(3I[\H1=HD,G8)IL>G9(IT4G(2^[?H9-G))H92^[%I(!I@)^@)@H@@@G^[(H13I-2I(<PA
)@@G@@I-(H9,^[$G(,G(2GD4HD\H0)HD3^[3I(0I[2G(3IT>G),^@)C1\IK)G(8GD!I[?G*?@]@@@GPB
)@@G@@IT0GD<G*)^@)@D@@@GA@)^@)^@)^@)^@)E[NC-AE8)^@)^@)DDJC(MEK)E[NC-AE[FE))^@)PC
)@@G@@@]@@@GIT0GD<G*)^@)@ @@@G^[7HD?H))H9,H-9^[$G(,G(2GD4G*'@]@@@GIT0GD<G*)^@)PD
)@@G@@@C@@@GA@)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC0 -KET^C1KDTO^@)@C@@@GA@)^@)^@)^@)PE
)@@G@@^@)D-HDK)^@)^@)^@)F@1AC?E[NC-AE8)^@)@B@J@GA@)^@)^@)^@)^@)DK)^@)^@)^@)^@)PF
)@@G@@DDJC(MEK)^@)@B@@@JA@)^@)^@)^@)^@)DLIFK)^@)^@)^@)CC3 -DD9 ELM@]@@@GETKCD#PG
)@@G@@C*)^@)@L@@@G^[DH0)I-*HD3^[<GD3G*?^[(I))HD3^[-IT3I(!G(=^[4H[-I))IT(H1<G*)PH
)@@G@@I-*G*)IL>GT\IL=^[-GT<G(3IS)I9\IL=^[-H1=^@)@L@@@G^[2G(<H92G))GT\H14IL\H))PI
)@@G@@I9\IL=^[0GD2GD!G(4G(2IS)I9>IL>^[\H((I-4G(= ))I-*G((IK)GT\IL2G(3I[\H1=HD,PJ
)@@G@@G8)^@)@G@@@G^[2G($HD3I->IL3^[7G(2G*)GD?IL>GD=JC)GT\IL2G(<I-?JC)G(3I--GL?PK
)@@G@@HD3H[>G),^@)@]@@@GIT0GD<G*)^@)@ @@@G^[[H1=^[,H8)GD2G95H(>H14IS'^@)@]@@@GPL
)@@G@@IT0GD<G*)^@)@^@@@GA@)^@)^@)^@)^@)E[NC-AEL]@]@@@GIT0GD<G*)^@)@A@@@G^[$G(,PM
)@@G@@G(2GD4G(3^[\H1?JC)I-*G*)D-HDK'@]@@@GIT0GD<G*)^@)@C@@@GA@)^@)^@)^@)^@)D-HPN
)@@G@@DK)^@)^@)^@)F@1AC?E[NC-AEL]^@)@]@@@GETKCD#C*)^@)@G@@@G^[CH97G(6G(2 ))I-*PO
)@@G@@G*)G1\H-?H97HD,G8)I[2H9<^[<GD?H))HD3^[3I[>GT(GD?BK)^@)@]@@@GIT0GD<G*)^@)PP
)@@G@@@B@@@GA@)^@)^@)^@)^@)E[NC-AEK)^@)^@) - D9AELOD0)@]@@@GETKCD#G*)^@)@ @@@GPQ
)@@G@@^[3HD,GT>^[(I))G9>H1>IL-I->IS'@]@@@GIT0GD<G*)^@)@C@@@GA@)^@)^@)^@)^@)D-HPR
)@@G@@DK)^@)^@)^@)F@1AC?E[NC-AEK)^@)@B@@@GA@)^@)^@)^@)^@)DLIFK)^@)^@)^@)CC3 )=PS
)@@G@@ S1^@)@C@@@GA@)^@)^@)^@)^@)DLI^@)^@)^@)^@)CC1 - D9AELOD0)^@)@]@@@GETKCD#PT
)@@G@@C*)^@)___@@@^[4H[>^[&HD?G*)HD3^[<H-\IT>G))G1\IK)I92HD4HD,G8,@]@@@GIT0GD<PU
)@@G@@G*)^@)@N@@@J^@)^@)C-5IL(H1$^[7IL(I->^[\I[>IL-I-(H9,IS?^[2G(-G-(H1$^[(IS)PV
)@@G@@======@@^@@ @@@@@@@@@@@@@@ @MQ@@@@@]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@PW
)@@G@@@@@@@@JI]]#N101482@]@@@@@@@@@*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@P@@A@@A@@MPX
)@@G@@@@3@@@@@@@@^@@@@OC@@@@@@@^@@@]@^@]@[@ @@@]K^@[@),*G#G2,*G#G2,*G#G2,*G#G2PY
)@@G@@,*G#G2,*G#G2,*G#G2,*G#G2,*G#G2,*G#G2,*G#G2,*G#G2,*G#G2,*G#G2,*G#G2,*G#G2PZ
)@@G@@,*G#G2,*G#G2,*G#G2,*G#G2,*G#G2,*G#G2,*G#G2,*G#G2@JN@C@)@!@RN@@@___@@)^@@QA
)@@G@@@@E^]K)[0^@))]*^]U)]"^ ]@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___QB
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___QC
)@@G@@CC!@@])8))@@[C.@@][CW@@BCC!@@@C^.@@@/@:@@@[^"@@@*@@@@J[C\@@@(@@@@J[C%@@[QD
)@@G@@C^%@@[[^!@@@[^U@@[ CH@@@[CY@@@/KF@@@;/E@@@CCW@@BCC!@@]+8)Z__[C.@@] 4E@@@QE
)@@G@@*^E@@@'=@@[O/KF@@@*=G@@I/K@@C+/SE@@@'=@@[MC8K@@[[=W@@I/KF@@@ 4E@@@*^E@@@QF
)@@G@@'=@@[O =G@@I/KF@@@AE/@@ICDG@@E;H@@@=W9@@@WK[G@@FC[G@@F =G@@I;/E@@@C^U@@[QG
)@@G@@/K@@C2C^X@@@/@K@DIC^!@@]/@)@C19?,@@@9/?@@@/K@@C1,[H@@[/K@@C./,0@C^C@K@@JQH
)@@G@@/K@@C2C@!@@[H8)@@[K^%@@],@)@@K/K@@C10@H@@]/K@@DDC^!@@]C^,@@]%^?@@](?H@@]QI
)@@G@@/K@@DF/,0@CV/K@@C,/,0@C@C8)@@[/K@@D\CCU@@[/K@@DLCCX@@@/@K@DD1@H@@]*?H@@]QJ
)@@G@@/K@@DKC^!@@]/@)@D)C^"@@]:^/@@]/K@@DW*0H@@]/K@@DKRA/@@G*8F@@@/,;@@@/S@@@ QK
)@@G@@/,0@C@C8)@@[[*?@@I=4!@@]/,0@D6 *G@@I[^H@@]C@?@@F;G)@@=W^%@@]T^%@@][@!@@[QL
)@@G@@C8))@@[C!@@]C8)@@@ 4E@@@*^E@@@'=@@[NRE/@@I/KF@@@C9@@@Q/K@@D7C9@@@CC@.@@[QM
)@@G@@C8!@@#&F%@@]9*?@@^[1G@@#9!G@@@C^.@@]9?\@@@9*?@@@'=@@@#9(G@@@A]0@@JRA/@@GQN
)@@G@@*8F@@@/,;@@@/S@@@#R]0@@JC8))@@[C!@@]*4G@@#/K@@EH/KF@@@(*G@@I/K@@EN 4E@@@QO
)@@G@@*^E@@@'=@@[N *G@@I/@K@GM;/E@@@ @H@@] 4E@@@*^E@@@'=@@[O/K@@GMC9@@@K/K@@EZQP
)@@G@@C80@@[[0.@@]C9@@@PC8!@@#C@.@@[[1G@@#&F%@@]9*?@@^A]0@@KRA/@@G*8F@@@/,;@@@QQ
)@@G@@/S@@@]R]0@@K'=@@@#C4?@@#/KF@@@C@?@@F;G)@@=W^%@@]C@)@@JT8)@@WG@)@[] @@@[]QR
)@@G@@CC'@@]H@0@@I!C/@@ECC/@@EN8Z@@@HC/@@E#C/@@EC@/@@FG^'@@];G0@@=W^'@@]T^'@@]QS
)@@G@@[@/@@F/@V@@@G8!@@#C^W@@E;^K@@=K@)@[[[^/@@E&;K@@[&;)@@[/KF@@@9?W@@^9*W@@CQT
)@@G@@9*W@@E @@@[](?G@@A/K@@FO @@@@HW8K@@W[@)@[][@W@@FAE/@@HAA?@@HQA?@@B *G@@IQU
)@@G@@/KJ@@@/\0@FE/,0@C$/@)@F&C4!@@]=8)@@[/,0@D6*0H@@]/,0@D4/,0@CM/,0@E!*CG@@EQV
)@@G@@/K@@FU/K@@GI[@@@[#C@@@IE'=@@@IC@@@[#'=@@@)N80@@@/K@@F,N80@@[/\0@FERA/@@GQW
)@@G@@*8F@@@/,;@@@/S@@@@/,0@C$(?H@@]^?.@@]/@)@G@*@@@[#*0H@@]/K@@F;/K@@G#RA/@@GQX
)@@G@@*8F@@@/,;@@@/S@@@^/K@@GD(@@@[#/,0@EU*@@@[#/,0@EW/@)@GD*^G@@#%8)@@ /K@@EHQY
)@@G@@ 4G@@#/,0@E!M#!)@@/,0@CM*CG@@E/K@@F39??@@C9*?@@^;C)@@M[^?@@#C4/@@#RE/@@HQZ
)@@G@@QA?@@H/KF@@@/\0@FERA/@@G*8F@@@/,;@@@/S@@@[/,0@C$/@)@G+RA/@@G*8F@@@/,;@@@RA
)@@G@@/S@@@^/K@@G8C@?@@F;G)@@=W^%@@]/^0@G(CC?@@E!C%@@]/K@@G8*)G@@I/K@@G0C@?@@FRB
)@@G@@*?G@@AT8)@@W!@?@@J/K@@G8/,0@EW%8)@@ /^)@EH 4G@@#RA/@@G*8F@@@/,;@@@/S@@@DRC
)@@G@@C8)@@-[4!@@]/,0@E!M#Y)@@C@?@@F*?G@@AT8)@@W!@?@@J[@?@@JCCW@@B*?H@@]/K@@HARD
)@@G@@*4G@@A/,0@D6/,0@CM*CG@@E/K@@GV/K@@GI[@W@@J/\0@FOC0%@@@%8)@@\'=@@@)'=@@[LRE
)@@G@@C@)@[%[^?@@]RA/@@G*8F@@@/,;@@[/K@@GMN80@@@/K@@HTN80@@[/\0@FO =G@@I;/E@@@RF
)@@G@@CCU@@[/@K@H8C^!@@]%8?@@@/K@@H61@H@@]/K@@H>/,0@CV/K@@HV(CH@@]*@@@[#/K@@H(RG
)@@G@@/K@@H6/,0@C@ 4E@@@*^E@@@'=@@[NC4!@@]=8)@@[/,0@D6*0H@@]/,0@D4*@@@[# ^H@@]RH
)@@G@@/,0@CM/K@@HVCCX@@@/K@@HXCC/@@G/@0@H/*0G@@A/,_@@[ 4E@@@*^E@@@'=@@[NC@W@@JRI
)@@G@@/K@@GMPIO$: UNLOCK REQUESTED FOR AREA NOT PREVIOUSLY LOCKED.@[D@I[AA/@@ORJ
)@@G@@(8H@@@C8K@@@[@W@@M]@/@@RC@/@@P[@/@@ C4W@@KC/0__;%8K@@]/K@@JH[@?@@LC8W@@LRK
)@@G@@&;K@@[[@W@@^C8K@Z_0@G@@LC8K@@_!CW@@MCCW@@M[CW@@N[0W@@L;CK@@A1@G@@L[4W@@LRL
)@@G@@/,0@GQ/^0@JHC@W@@ 0@G@@R[@W@@RG8K@@[[@W@@ [@W@@PCCW@@N/@K@I9C^?@@M&;!@@@RM
)@@G@@[@?@@^G8Y@@@[^W@@M/,0@GQ/^0@JHCCW@@NK@W@@ [@?@@ [@?@@P(?G@@K/K@@JA&;K=@@RN
)@@G@@[@W@@LC8W@@L&;K@@[[@W@@^/,0@GQ/^0@JHC@W@@ G8K@@[[@W@@ [@W@@PCCW@@MHCW@@NRO
)@@G@@/@K@JG[CW@@MC@)@J3/K@@IQC80@@@RA/@@O/KF@@@AA/@@OC4?@@KC/0__./^:@@@[@W@@ RP
)@@G@@[@W@@P[@W@@QC8)@@][4?@@K/,0@HE/K@@JGC80@HQ/K@@JXC80@HSAA/@@O[C/@@SC4?@@KRQ
)@@G@@C/0__;%8)@@]/K@@JHC@?@@P[@?@@ G8)@@[[@?@@PC@K@J4[@W@@LC8W@@L&;K@@[[@W@@^RR
)@@G@@/,0@GQ/^0@JH 4G@@KRE/@@S/,;@@@/^0@JH/K@@JG(@@@@@_@@@@@C8)@@[/K@@J8C8)@@@RS
)@@G@@/\0@K?C/0__'(?G@@K/)K@K%C@W@@ :@W@@Q/K@@K*H8K@@[[@W@@ C8W@@L&;K@@[[@W@@^RT
)@@G@@/,0@F:/^0@K%C/0__'C4W@@L%8K@@<:8K@@=C80@@@/^0@K%C^?@@L:8K@@<C0/@@LC@W@@ RU
)@@G@@H8Y@@[[@W@@ /,0@K7/K@@KP/K@@J/C@/@@R[@/@@ /K@@K(C8)@@[/K@@KVC8)@@@/\0@K?RV
)@@G@@D8)@@[%8K@@[C@?@@P:@?@@ /K@@K*/,0@K7/K@@K(G8)@@[G@?@@ [@?@@ C4W@@K/K@@KWRW
)@@G@@D8K@@[C80@@@RA/@@O/KF@@@AA/@@O[@W@@M[*?@@K[CW@@O ^G@@NC4W@@K/@K@K5]@W@@RRX
)@@G@@/KJ@@@C/0__"/KF@@@AE/@@SC*W@@K[=W@@KC8W@@L&;K@@[[@W@@^/,0@F:/^0@K%C^/@@^RY
)@@G@@C4Z@@@CC\@@@;C)@@A0@J@@@C0\@@@C>G@@K/[@@LP/>@@LP:8K@@(/K@@L-%8K@@<:8K@@=RZ
)@@G@@/K@@LL =G@@KC^W@@MRE/@@S/K@@L6C@W@@ G8K@@[[@W@@ /K@@K.:8K@@_/K@@K*0@J@@@SA
)@@G@@:8K@@*/K@@L-%8K@@+*0G@@K/K@@L-:8K@@(/[@@L-RE/@@S/KF@@[C@W@@M?C?@@M&;Y@@@SB
)@@G@@[C?@@NG^?@@N[^?@@N[@W@@^C@W@@ 0@G@@R[@W@@RG8K@@[[@W@@ /,0@F:/^0@K%RE/@@SSC
)@@G@@CCW@@NG@W@@ [@W@@ C^W@@MGCW@@^[^W@@MHCW@@OC@?@@LC=/@@K/@;@@@C80@@][=/@@KSD
)@@G@@CC/@@MHC/@@^[C/@@MC8W@@T/K@@K;AA/@@OC4?@@KC/0__./^:@@@C8)@@[[4?@@K[@W@@ SE
)@@G@@[@W@@Q/,0@HE/K@@K(C8)@HQ/K@@MIC8)@HSAA/@@OC4W@@KC/0__/%8K@@[/KF@@@ 4G@@KSF
)@@G@@/,"@@@/K@@K(C@@@OA'=@@@JC8K@@@C/@^@@/,0@JJ/^0@N$R]@@OBN'@@@C/K@@M=C@*@@@SG
)@@G@@C@S)@[C/@^@@/,0@IF/^0@N%8M@@MZC/@^@@/,0@JU/^0@N!C@@@OF'=@@@8C8K@@@C/@^@@SH
)@@G@@/,0@M[/^0@NYR]@@OBN'@@@C/K@@M8C@K@P<C/@^@@/,0@KS/^0@N-/GK@N0/,0@N6'=@@@)SI
)@@G@@8M@@M1C@@@OI'=@@@8C@K@P<C/@^@@/,0@KS/^0@N-/GK@N['=@@@)C@@@OM'=@@@8R]@@ONSJ
)@@G@@N'@@@C/K@@NHC@K@P<C/@^@@/,0@J5/^0@N-/GK@N3/,0@N6'=@@@)8M@@NAC@@@OS'=@@@8SK
)@@G@@C@K@P<C/@^@@/,0@J5/^0@N-/GK@NQ'=@@@)C@@@OY'=@@@8C/@^@@/,0@MF/^0@N=C@@@O+SL
)@@G@@'=@@@8'=@@@DC@@@O$'=@@@8'=@@@)C@@@O:'=@@@8'=@@@)C@@@O1'=@@@8'=@@@)C@@@O7SM
)@@G@@'=@@@8'=@@@)C@@@O;'=@@@8'=@@@)C@@@P['=@@@8'=@@@)C@@@PC'=@@@8'=@@@)C@@@PLSN
)@@G@@'=@@@8'=@@@)C^0^@N%C8@@[/KF@@@C^8)@[&;0@@[C@@@PMN8X@@@/K@@O[C[G)@@%[J)@@SO
)@@G@@/KF@@@8KK@N"/KF@@[@ASG,T PSDFTEST   @@#@O#@@]@PNE92HD4I->H0)D9F^@)@[#@OCSP
)@@G@@EL>GD=^[JDS)@[]@OGEL>GD=^[ D9A^[JDS)@[#@OJ__.@P-EL>GD=^[+GD<HT7GD2G))D9FSQ
)@@G@@@[^@OOEL>GD=^[+GD<HT7GD2G))C(JC0)D9F@[ @OTCD?H))G-\H1> 0)^@)@[#@OZEL>GD=SR
)@@G@@^[\I[>H0)G(2IL\IK-@[^@O<EL>GD=^[>IL2H92^C)@[#@O*EL>GD=^[<H-\IT>^[>IL2H92SS
)@@G@@^C)^@)@[ @O?E92HD4G*)H90G(,^[>IL2H92^C)^@)@[ @O2E92HD4G*)G(2IL\IK-@[#@O8ST
)@@G@@E92HD4G*)GT?H93G*)G(2IL\IK-^@)@[ @O/E(,G(8I[>GT4G(=^[ D9A^[\H0)IL>GD=^C)SU
)@@G@@@[A@P]E(,G(8I[>GT4G*)C(JC0)H9,^[2G(-G))GL-GT:I9-IL=^C)@[C@PD@@[^^#*S@@@[SV
)@@G@@@@]@P=@@@@@@@@^@P>@@@@@@@@^@P(@@@@@@@@H@P!@@@@@@@@@@P'@@@@@@@[F@P;@@@@@@SW
)@@G@@@@B@RA@@@@@@@@A@RH@@_^^#*SDFF*E-*HD3^[(IS)H-(H1>^@1^@)E-*HD3^[(IS)H-(H1>SX
)@@G@@^@2^@)E-*HD3^[(IS)GD,H94H[>IK)H-(H1>^@*H-\H1$G(2^[4H[-H0)I-*G*)I[2G(6HD\SY
)@@G@@I(3^[4I9\ C)^@)^@)E-*HD3^[(IS)GC)IT>I1>IL>^[4G(3I))GL>GT-I(3G*)I-*HD3^[?SZ
)@@G@@HD,G*)I9(H-?^[<GD5IT>^[-^[3G($H(>H14^[+IL>GD: ))I9*HD<H@)H(>GD,IS)HD4^[7TA
)@@G@@HD?H))GL>^[+IL\HT>H0)I(0^[(H14H8)I-7H8)IT>I[>IL-I->^[(H(-G9>IS'^[-^[,H92TB
)@@G@@H(-H))HD!GD$G*)G1(IL3I)?^[&H9?H-\I9>G))GL9^[-^[<H9,I-(H15GD4HD\H0)HD!GD$TC
)@@G@@G*,^[OH[(IS)HD3^[4H[>^[3G(<H9,G))IT>H14G(,GT> ))IT4HD?H))I[-IL4^[\G0)I-*TD
)@@G@@G*)IT-H(>^[2G(<H92G)?^[7H[(GT*^[(IS)H1>G(=G(=^[4H8)H(-HT>^[4H[(IS)GD,^[(TE
)@@G@@H1<IL>G-(GL?JC)H-\H1$^[2G(<H92G),^@)E-*HD3^[(IS)GD,H94H[>IK)G-(G-=H-9^[?TF
)@@G@@HD,G*)E-*HD3^[(IS)I-*G*)H--IT4^[?HD,G*-^@)PSDFTEST    @@@@@@@@@@@@@@@@@@TG
)@@G@@@@@@@@@@[@@@@@@^@U@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@@TH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\@@@@^]K^@X@[0@@^TI
)@@G@@@@@^]K@@@@@@@@@@@@^@X@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@$MAIN$      @@^@@^@@@@@]@@@#@ @@@@@]@@@@@@@@@@@@TL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ERU$        L^8EIMPIO$  TN
)@@G@@      JD@]#NPSDFR       I_6A#MPSDFRB      J@]A#MPSDFTEST    J@AA#MPSDFW TO
)@@G@@      JH"]#N@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TP
)@@G@@$IBANK      @@@@@A$DBANK      @@M@@[        X11,PAGX11        . SAVE OURTQ
)@@G@@ LINK @F@@@-          LA        A4,PIOCWC         . GET THE CURRENT WORDTR
)@@G@@ COUNT@E@@@-          DS@@@@@#@@@[@^@AF@C@@@@@@J@@@[@^@[%@IF@@@@@D@@@[@^TS
)@@G@@@@<@J5@@@@@A@@@[@^@["@KS@@@@@G@@@[@^@].@MQ@@@@@G@@@#@^@]@@PN@@@@@G)@@@@ TT
)@@G@@@ ]^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@PIOFC$      @@@@ SPIOFO$TU
)@@G@@      @@@@ EPIOPF$      @@@@ QPIOR$       @@@@#:PIOW$       @@@@^QPSDFR TV
)@@G@@      @@D@@@PSDFRB      @@A@@@PSDFRC      @@D@[3PSDFREOF    @@D@@KPSDFRETW
)@@G@@RR    @@D@@MPSDFRFIN    @@D@@LPSDFRO      @@D@[(PSDFR$I     @@D@@OPSDFR$TX
)@@G@@R     @@D@@ZPSDFW       @@#@@@PSDFWC      @@#@[JPSDFWO      @@#@[^@@@@@@TY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@*[S@@[*SDFF*@^@@@[ 8)^@)^@)^@)^@)CDSEK=^@)@B@@@[TZ
)@@G@@^@)^@)^@)^@)^@)E[NC-AC1DC(GC-N^@0 -[A@)^@)@[@@@] 0)^@)@D@@@] 0)E@)ES)C))UA
)@@G@@C0)^@!^@)E[-G9>G))ET^C0)IL\I(4HD,G(3 0)^@)@[@@@] 0)^@)@K@@@] 0)C->IT(G9,UB
)@@G@@G(=^[-H1=^[(H(0H->H(>H14G(=^[+JC)CD?GD,^[F 0)ET4G(+GL>H13 ))FDAD1NES)E(JUC
)@@G@@D(#ET# 0)^@)@[@@@[ 0)^@)@G@@@[ 0)E[NC-AEL]^@!^[MG(-G))GL-GT:I9-IL=^[5IT(UD
)@@G@@H1$^[4H[>^[KET^C0)I[-GT:GD$G*,@J@@@[ 0)E[NC-AELNCK) *)EL>GD=^[3G($H(>H14UE
)@@G@@^[+GD<HT7GD2G))I(3HD,G8)I-*G*)E[NC-A^[0GD<HT-G9> 0)^@)@[@@@[ 0)^@)@B@@@[UF
)@@G@@ 0)^[[A@)B*)E[NC-A^[0GD<HT>I))GD=G-2G(3IS)@ @@@[ 0)^[[AC)B*) [+I(&H)?GL5UG
)@@G@@G1- C)@A@@@[ 0)^[GD(E^@)F@1AC?E[NC-AEK*ES(CK)^@)@B@@@# 0)^[[AS)B*)G(2IL\UH
)@@G@@IK)IT4GD4I(3^[\IK)A@)^@)@B@@@# 0)^[[AK)B*)IL>GT\IL=^[<H9,I-2H9?^[7H92G))UI
)@@G@@@H@@@# 0)^[[AC)B*)H15H(+G(2^[\G0)I9\IL=IS)I-2GD,IT&G(2IL>G);^[(G0)C(JC0?UJ
)@@G@@^[[AC)B*) *1@^@@@# 0)^[[A@)I(,GT*GD,G9>G),@I@@@# 0)^[KETMD))B*)I-\I--H))UK
)@@G@@IL>GT\IL=^[?G(,G94H@) [!GD9^[+G*)G92G(-I->IK)I-*GD,^[[AC(^@)@#@#@[ 0)^@/UL
)@@G@@G(2IL\IK"^@)@^@#@[ 0)^@/C(JC0)IL>I-5IL,B0)@ @#@[ 0)^@/H1\IL!GD?^[2G(4I(2UM
)@@G@@H0"^@)@[@#@[ 0)^@)@M@#@[ 0)E(0H9,^@/G(2IL\IK)IL>I-5IL,B0?^[[AS?^[(G0)I[\UN
)@@G@@IT(I-(I1> ))HD,G-(GT-I->IS)GD,^[D 9J^[>IL2H92^[3I--I-5IS;^@)@M@#@[ 0)HD&UO
)@@G@@^[[AS)HD3^@!AC?^[-H0)G(2IL\IK)H9<GT5IL>G))GL>GT-I(3G*)H1\^[+GD<HT3I[-GT>UP
)@@G@@^[2G(<H92G-3^[7G(2G*)G1\I(,G),@[@#@[ 0)^@)@L@#@[ 0)E(0H9,^[ D9A^[2G(4I(2UQ
)@@G@@H0?^[4H[>^[KET^C0)IL\I(4HD,G(3^[-IL>^[0H93HD4HD\H1>G))GD4^[4H[>^[+G($HD,UR
)@@G@@H1(H1$@L@#@[ 0)H9&^[4H[>^[NC-A^[&HD?G*;^[-^[3I(+IT>ID5G(,I))IL>GD=^@*G1\US
)@@G@@IL7GD2G)(^[\I[>IL-I-(H9,^[7HD?H))IL>I-5IL,@ @#@[ 0)I-*G*)G1(IL3I))IL>GT\UT
)@@G@@IL= 0)@[@#@[ 0)^@)@A@#@[ 0)E(0H9,^@/H1\IL!GD?^[2G(4I(2H0" ))@[@#@[ 0)^@)UU
)@@G@@@L@#@[ 0)^[[AC)B*)H15H(+G(2^[\G0)I9\IL=IS)I-2GD,IT&G(2G(=^[4H8)I-*G*)I(3UV
)@@G@@G(2^[+I(&G1>IK) [5I@)I-\^[]E(AD)( 0)@B@#@[ 0)^[[AK)B*)IL>GT\IL=^[<H9,I-2UW
)@@G@@H9?^[7H92G))@I@#@[ 0)^[KETMD))B*)I-\I--H))IL>GT\IL=^[?G(,G94H@) [!GD9^[+UX
)@@G@@G*)G92G(-I->IK)I-*GD,^[[AC(^@)@G@@@[ 0)^[KETAEL^CC)B*)G1(IL3I))IL>GT\IL=UY
)@@G@@^[3G($H(>H14^[=HD3GS)GD=G-2G(3IS)^@)@[@@@# 0)^@)@M@@@# 0)DD&^[-H0)DC\D8)UZ
)@@G@@G(2IL\IK)H9<GT5IL3 ))CC3^[7HD?H))GL>^[4H[>^[D 9J^[3I--I-5IS,^@)DD&^[-^[5VA
)@@G@@IT-G9>^[>IL2H92^@)@M@@@# 0)H9<GT5IL3 ))H92^[4H[>IL>^[-IL>^[,H8)GL-GT:IT0VB
)@@G@@GD<G*)IL>GT\IL=IS)I-\^[+G*)G1\I(,G)?^[4H[>H0)CC3^[7HD?H))GL>@G@@@# 0)H1>VC
)@@G@@G9-I-(I1>^[(H1=HD<GD4HD,G8)I-*G*)I-9I[>^[\G0)I(3GD$G*)G(2IL\IK,^@)@[@@@#VD
)@@G@@ 0)^@)@N@@@# 0)E(0H9,^[>H1<H95H14G(2HD,G8)GD,^[ D9A ))CC1^[7HD?H))GL>^[3VE
)@@G@@G(4^[4H8) *1 ))GD,G))I-*G*)E[NC-ADDJ^[2H95I-(H1>IS)^@)@M@@@# 0)GD2G*)I[\VF
)@@G@@IT(I-(H9,G(=^[-I))I-*G*)GL>G9(H1,HD,G8)H9&^[4H[>^[NC-A^[&HD?G*;^[-^[3I(+VG
)@@G@@IT>ID5G(,I))G1\IL7GD2G))@D@@@# 0)IL>GD=^[7HD?H))IL>I-5IL,^[4H[>^[&HD2IT4VH
)@@G@@^[2G(<H92G),@[@@@[ 0)^@)@M@@@[ 0)CC)IL>GD=^[+GD<HT7GD2G))H90G(2GD4HD\H0)VI
)@@G@@GD&I->IK)GC)IL>GD=^[&H92I9-IL=^[\I[>IL-I-(H9,^[7HD?H))IL>I-5IL,^@)@M@@@[VJ
)@@G@@ 0)I-*G*)IT-H(>^[2G(<H92G)?^[-H1=^[-^[2G(-G))G1\IL7GD2G))GD&I->IK)GC)IL>VK
)@@G@@GD=^[+GD<HT7GD2G))H90G(2GD4HD\H0)^@)@ @@@[ 0)I9(H-?^[=H8)H-(HT>I9(IT> 0)VL
)@@G@@@[@@@[ 0)^@)@M@@@[ 0)DD&^[4H[>^[&HD?G*)I9-IS)H90G(,G(=^[&H92^[7IL(I-(H1$VM
)@@G@@^@*E[NC-AD9R C?^[2G(-G))GL-GT:I9-IL=IS)I9(H-?^[\H1?JC)@M@@@[ 0)G15H1<I-(VN
)@@G@@H9,^[<H92IL>GT4H-9^[(G0)I-*G*)I[-GT:G(4^[<G(?H))E[NCLNE9A^[7GD3^[,H9,JL>VO
)@@G@@IL\^[=I(2HD,G8)I-*G*)^@)@ @@@[ 0)I92HD4G*)H90G(2GD4HD\H13 0)@[@@@[ 0)^@)VP
)@@G@@@^@@@[^)*AC(^@)^@)^@)D-DE))^@)@K@@@[E[NC-AEL] K)^@)D-[ -P^@)^@)^@)CC2 )1VQ
)@@G@@^@)^@)^@)^@)^@)^@)^@) 0)ETFDDK^[DD1DE-DCDG^[NC(BD( D1OES)^@)@A@]@[^@)^@)VR
)@@G@@^@)^@)^@)DK)^@)^@)^@)^@)^):AC)@A@@@]^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)^):AK)VS
)@@G@@@K@@@[E[NC-AELNCK%^@)D-[ -P^@)^@)^@)CC2 )0^@)^@)^@)^@)^@)^@)^@) 0)CD#CT VT
)@@G@@E[O^[DD1DE-DCDG^[NC(BD( D1OES)@#@@@[^@)^@)^@)^@)^@) 0)@M@@@[^@)^@)^@)^@)VU
)@@G@@^@)CT[D-G -[AS)^@)E[NC-AEK=DC)^@)^@)^@)^@)^@) 0)DDIDDODD[D-DFL ^[AD9M^[MVV
)@@G@@C([C))D9KC(MCDODDJD0)^@)@I@#@[^@)^@)^@)^@)^@)D-I -P^@)^@)^@)CC3 )1^@)^@)VW
)@@G@@^@)^@)^@)^@)^@) 0)C9 E))C(MELJEK)C1GCDB^@)@J@@@#^@)^@)^@)^@)^@)D-[ -SE*)VX
)@@G@@^@)^@)CC3 -KET ELICLM^@)^@)^@)^@) 0)D1J^[]CD#DTNE[[CT ^[MC(#D9MC-N@L@@@[VY
)@@G@@^@)^@)^@)^@)^@)E-IFK)^@)^@)^@)E[NCLNE9A^@)^@)^@)^@)^@)^@) 0)CL[CTFETKCD#VZ
)@@G@@C*)E9MDDOC(N^[ D1[CLGC(^B8)^@)@M@#@[^@)^@)^@)^@)^@)DLICK)^@)^@)^@)CC1 )0WA
)@@G@@ -SAC1^@)^@)^@)^@)^@) 0)D1J ))DDA^[RELDE-  (JE[ D1 C)?^[ ELMD9M^[JC1A^@)WB
)@@G@@@M@@@#^@)^@)^@)^@)^@)DLICK)^@)^@)^@)CC1 -KET^C1MC(MEK)^@)^@)^@) 0)D1J ))WC
)@@G@@DDA^[RELDE-  (JE[ D1 C)?^[ ELMD9M^[JC1A^@)@K@@@[E[NC-AEL]AC)^@)D-[^@)^@)WD
)@@G@@^@)^@)CC1 -KDDJC-[^@)^@)^@)^@)^@) 0)C9 E))CTPELMC(IE))C-DET#^[[C-^EL ETNWE
)@@G@@@N@#@[^@)^@)^@)^@)^@)DL ^@)^@)^@)^@)CC1 -KETDC-[^@1 -SAC1^@)^@) 0)DDA^[[WF
)@@G@@E))CL C9DD1IDDIC8)D9A^[ADDGC*?^[OCDFC*)C(JC0)^@)@N@^@#^@)^@)^@)^@)^@)DL WG
)@@G@@^@)^@)^@)^@)CC1 -KETDC- ^[KET^C1MC(JC0) 0)DDA^[[E))CL C9DD1IDDIC8)D9A^[AWH
)@@G@@DDGC*?^[OCDFC*)C(JC0)^@)@N@@@^^@)^@)^@)^@)^@)DL ^@)^@)^@)^@)CC1 -KETDC-[WI
)@@G@@^[KET^C1MC(JC0) 0)DDA^[[E))CL C9DD1IDDIC8)D9A^[ADDGC*?^[OCDFC*)C(JC0)^@)WJ
)@@G@@@N@@@[^@)^@)^@)^@)^@)CDI -P^@)^@)^@)CC1 )1^@)^@)^@)^@)^@)^@)^@) 0)CL[CTFWK
)@@G@@E(K^[OD8)CL[CTFETKCD#C*)EL CTJEL^^@*DDA^[[D1T C)@K@@@[^@)^@)^@)^@)^@)ET[WL
)@@G@@^@)^@)^@)^@)CC1 -KDDJC-[^@)^@)^@)^@)^@) 0)E[JETO^[D 9J^[^DDNCS)CD^C-MC(NWM
)@@G@@ES)^@)@O@@@[^@)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC1 -KETMCTR^@)^@)^@)^@)^@) 0)WN
)@@G@@C9 E))CD#CT ETN^[RD9MC))E-J^[MC(#D9MC))CTJD1OELJD))E9JEL^^@)@A@@@[^@)^@)WO
)@@G@@^@)^@)^@)D-SDC?E*)^@)^@)CC1 )1@J@@@[^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC1 -KWP
)@@G@@DDJCL[E8)^@)^@)^@)^@) 0)E[JETO^[D 9J^[[CT#C(NES)E9JEL^@N@@@[^@)^@)^@)^@)WQ
)@@G@@^@)E[DD9M^))^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)EL CD^^[OD[ ^[]CD#DTNE[[WR
)@@G@@CT ^[#D9IE-MD9G^[MC(#D9MC))^@)@L@#@[^@)^@)^@)^@)^@)D-S^@)^@)^@)^@)F@1AC?WS
)@@G@@E[NF@1AC)^@)^@)^@)^@) 0)C9 E))E(NC(M^9N^[MC(OE(MD0)CD^C-MC(NES)^@)@L@#@[WT
)@@G@@^@)^@)^@)^@)^@)DLIFK)^@)^@)^@)CC3 )0 -SAC1^@)^@)^@)^@)^@) 0)E-[DT ^[D 9JWU
)@@G@@^[ ELMD9MES)D[JD( ^[RDDOD@)E(N@L@@@#^@)^@)^@)^@)^@)DLIFK)^@)^@)^@)CC3 -KWV
)@@G@@ET^C1MC(MEK)^@)^@)^@) 0)E-[DT ^[D 9J^[ ELMD9MES)D[JD( ^[RDDOD@)E(N@K@#@[WW
)@@G@@^@)^@)^@)^@)^@)D-I -P^@)^@)^@)CC3 )1^@)^@)^@)^@)^@)^@)^@) 0)ET E))ETKC(#WX
)@@G@@DD[D))C(MELJEK)C1GCDB^@)@K@@@#^@)^@)^@)^@)^@)D-[ -SE*)^@)^@)CC3 -KET ELIWY
)@@G@@CLM^@)^@)^@)^@) 0)ET E))ETKC(#DD[D))C(MELJEK)C1GCDB^@)@I@@@[^@)^@)^@)^@)WZ
)@@G@@^@)D-[ -NAC)^@)^@)CC1 -KETMCTR^@)^@)^@)^@)^@) 0)C9 E))EL CTJEL^^[OFDKC*)XA
)@@G@@@K@@@[^@)^@)^@)^@)^@)E-  -P^@)^@)^@)CC1 )0A)3^@)^@)^@)^@)^@)^@) 0)CDGD-JXB
)@@G@@E8)C1JELOEL[D0)CL[CTFETKCD#C*)@J@ @[^@)^@)^@)^@)^@)E-IC*?E*)^@)^@)CC1 )0XC
)@@G@@A)4^@)^@)^@)^@)^@)^@) 0)CDIC))D9PEK)D9RD0)CLMCDIC))^@)@J@@@ ^@)^@)^@)^@)XD
)@@G@@^@)E-IC*?E*)^@)^@)CC1 )0A)5^@)^@)^@)^@)^@)^@) 0)CDIC))D9PEK)D9RD0)CLMCDIXE
)@@G@@C))^@)@J@@@[^@)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC3 )0^@)^@)^@)^@)^@)^@)^@) 0)XF
)@@G@@D9F ))DTDD-G^[OD[ ^[ ELMD9M^@)@M@#@[^@)^@)^@)^@)^@)DLIFK)^@)^@)^@)CC3 )0XG
)@@G@@ -SAC1^@)^@)^@)^@)^@) 0)C(SDDO^[DC0)D1JE))CC)CL[CTFETKCD#C*)EL CTJEL^^@)XH
)@@G@@@M@@@#^@)^@)^@)^@)^@)DLIFK)^@)^@)^@)CC3 -KET^C1MC(MEK)^@)^@)^@) 0)C(SDDOXI
)@@G@@^[DC0)D1JE))CC)CL[CTFETKCD#C*)EL CTJEL^^@)@O@ @[^@)^@)^@)^@)^@)D-[ -CAK)XJ
)@@G@@^@)^@)CC2 -KETMCTR^@)^@)^@)^@)^@) 0)C9 E))E[MC(QDDJE(N^[MC(#D9MC))D- D1BXK
)@@G@@E-C^@*E-TE[ B*0A)4 C)^@)@O@@@ ^@)^@)^@)^@)^@)D-[ -CAK)^@)^@)CC2 -KETMCTRXL
)@@G@@^@)^@)^@)^@)^@) 0)C9 E))E[MC(QDDJE(N^[MC(#D9MC))D- D1BE-C^@*E-TE[ B*0A)5XM
)@@G@@ C)^@)@K@@@[^@)^@)^@)^@)^@)E-IC*?E*)^@)^@)CC1 )0A)3^@)^@)^@)^@)^@)^@) 0)XN
)@@G@@C1JELOEL[D0)CL[CTFETKCD#C*)E-TE[ B8)@M@@@[^@)^@)^@)^@)^@)D-[ -NAK)^@)^@)XO
)@@G@@CC3 -KETMCTR^@)^@)^@)^@)^@) 0)FD ES?^[BC(O^[KEL E1DD9PES)EL CTJEL^^[GC(IXP
)@@G@@C9OD@)@L@@@[^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC1 -KDDJC-[^@)^@)^@)^@)^@) 0)XQ
)@@G@@C9 E))E[MC(QDDJE(N^[^DDNCS)CD^C-MC(NES)^@)@O@@@[^@)^@)^@)^@)^@)CDI -P^@)XR
)@@G@@^@)^@)CC1 )1 -[AK)^@)^@)^@)^@)^@) 0)CL[CTFE(K^[JE1 EK)E[MC(QDDJE(N^[MC(#XS
)@@G@@D9MC))CDIC))CTJD1OELJD))@M@@@[^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC1 -KDDJC-[XT
)@@G@@^@)^@)^@)^@)^@) 0)E[JETO^[OD[ ^[KEL E1DD9PES)EL CTJEL^^[[C-^EL ETN@K@@@[XU
)@@G@@^@)^@)^@)^@)^@)CT[D-G^@)^@)^@)E[NC-AEK=EK)^@)^@)^@)^@)^@) 0)EL CD^^[OD[ XV
)@@G@@^[MC(#D9MC)) [HCDTCL  C)@I@@@[^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)^):AK)^@)^@)XW
)@@G@@^@)^@)^@)^@)^@) 0)EL CTJEL^^[[CT#C(KE- C))@O@@@[^@)^@)^@)^@)^@)DK)^@)^@)XX
)@@G@@^@)^@)E[NC-AEL]AC)^@)^@)^@)^@)^@) 0)EL CTJEL^^[ID9O^[[CT#C(KE- C)?^[]CD#XY
)@@G@@DTPE@)ETJD( ^[HD9MC*)^@)@N@@@[^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC3 -KETAEL^XZ
)@@G@@CC)^@)^@)^@)^@) 0)C9 E))E-CC*)C1DELNE))EL CTJEL^^[^DDNCS)CD^C-MC(NES)^@)YA
)@@G@@@M@@@[^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC3 -KDDJC-[^@)^@)^@)^@)^@) 0)ET E-PYB
)@@G@@E@)C1JEK)CDID9OD[ EK)CL[CTFE9[EL^^[MC([C))@I@#@[^@)^@)^@)^@)^@)D-S^@)^@)YC
)@@G@@^@)^@)F@1AC?E[NF@1AC)^@)^@)^@)^@) 0)C9 E))E(NC(M^9N^[SAC1^@)@G@#@[^@)^@)YD
)@@G@@^@)^@)^@)DK)^@)^@)^@)^@)AK?F@1AC)^@)^@)^@)^@)^@)^@) 0)CDGD))C-JD1 @G@@@#YE
)@@G@@^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)E[NC-AELADDI^@)^@)^@)^@)^@) 0)CDGD))C-JD1 YF
)@@G@@@#@@@[^@)^@)^@)^@)^@) 0)@^@@@[^@)^@)^@)^@)^@)C(IC))^@)_@@@@@H(>^[2G(<H92YG
)@@G@@G)?^[-H1=^[-^[2G(-G))G1\*[S@@[*SDFF*@^@@@O 8)^@)^@)^@)^@)CDSEK=^@)@B@@@OYH
)@@G@@^@)^@)^@)^@)^@)E[NC-AC1DC(GC-N^@0 -[A@)^@)@[@@@O 0)^@)@D@@@O 0)E@)ES)C))YI
)@@G@@C0)^@!^@)E[-G9>G))ET^C0)IL\I(4HD,G(3 0)^@)@[@@@O 0)^@)@K@@@O 0)C->IT(G9,YJ
)@@G@@G(=^[-H1=^[(H(0H->H(>H14G(=^[+JC)CD?GD,^[F 0)ET4G(+GL>H13 ))FDAD1NES)E(JYK
)@@G@@D(#ET# 0)^@)@[@@@O 0)^@)@I@@@O 0)E[NC-AEK) *)EL>GD=^[-^[2G(<H92G))I(3HD,YL
)@@G@@G8)I-*G*)I[-G9>G))ET^C0)DDJ^[0GD<HT-G9> 0)@K@@@O 0)E[NC-AELN^@!^[MG(-G))YM
)@@G@@GC)IL>GT\IL=^[3G($H(>H14^[5IT(H1$^[4H[>^[0GD$G(=^[NC-A^[DD8)I[-GT:GD$G*,YN
)@@G@@@[@@@O 0)^@)@A@@@O 0)^[[A@)B*)I[-GT:G(4^[-G-=IL>IT3^@)@ @@@O 0)^[[AC)B*)YO
)@@G@@ [+I(&H)?GL5G1- C)@ @@@O 0)^[GD(E^@)F@1AC?E[NC-AEK*ES(@L@@@O 0)^[[AS)B*)YP
)@@G@@G(2IL\IK)IT4GD4I(3BK)CC3B00^@!B0)DC\D8)IT4GD4I(3BS)CC3B)0^@!B0)E[NC-ADDJYQ
)@@G@@^[5IT-G9>^[>IL2H92@B@@@O 0)^[[AK)B*)IL>GT\IL=^[<H9,I-2H9?^[7H92G))@F@@@OYR
)@@G@@ 0)^[[AC)B*)I9\IL=IS)I-2GD,IT&G(2G(=BS)C(JC0)HD&^[[AC)B*) *1 0)^@)@^@@@OYS
)@@G@@ 0)^[[A@)I(,GT*GD,G9>G))@[@@@O 0)^@)@K@@@O 0)^[KGD<HT>I))GD=G-2G(3IS)IL>YT
)@@G@@G1>IL3^[4H8)I-*G*)E[NC-A^[0GD<HT>I))G->G1(H1>G))GL9^[4H[>^[5IT>IK)@L@@@OYU
)@@G@@ 0) [3G(>^[KET^C1KDTO^[=H9<I(!G(,I--I-(H9, C,^@)CL5G1?^[(IS)I-*G*)H->H1$YV
)@@G@@I-*^[(H0)I9\IL=IS)H9&^[4H[>^@)@I@@@O 0)I(3G(2^[+I(&G1>IK;^[+I(&GC)HD3^[4YW
)@@G@@H[>^[-G-=IL>IT3^[\G0)I-*G*)I(3G(2^[+I(&G1>IK,^@)@[@@@O 0)^@)@N@@@O 0)E[NYX
)@@G@@C-AEK)IL>GD=IS)I-*G*)H1>J[4^[(H(-G9>^[(H0)I-*G*)G1(H-> ))GD,G))GD,JC)IT5YY
)@@G@@GL3G(1I(>H14^[<H9,I-(H15GD4HD\H0)^@)@L@@@O 0)HD!GD$G(3^[4H[-I))H(-JC)G1\YZ
)@@G@@H-?H97 0)^[OH[>^[2G(<H92G))H->H1$I-*^[2G(4I(2H1>G))HD,^[[AC)HD3^[4H[>^@)ZA
)@@G@@@L@@@O 0)H15H(+G(2^[\G0)I9\IL=IS)I-2GD,IT&G(2IL>G))HD,I-\^[4H[>^[5IT>IK)ZB
)@@G@@GL5G1&G(2 0)^[[^[<G(?H))HD,^[4H[>^@)@E@@@O 0)I[-GT:G(4^[7HD?H))GT\H14GD(ZC
)@@G@@H0)I-*G*)GD<I-5GD?^[?G(,G94H@,@[@@@O 0)^@)@M@@@O 0)E[NC-AELN^[2G(-G-3^[\ZD
)@@G@@H1?JC)I-*G*)H1>J[4^[2G(<H92G))IT>G9!G(,I);^[-H19^[3I(+IT>ID5G(,I))GT\H14ZE
)@@G@@HD,I(-I-(H9,@M@@@O 0)HD!GD$G(3^[7HD?H))H1\I))GL>^[<GD4G(,GD4G(=^[\H14H8)ZF
)@@G@@I-*G*)G1(IL3I))IL>GT\IL=^[3G($H(>H14 0)^[[^[<GD?H))^@)@L@@@O 0)I-\^[KET^ZG
)@@G@@C1M^[0IL>GT>G(=G(=^[+JC)GC)GT-H-?^[4H8)E[NC-AELN^[7HD?H))IT:HD0^[-H19^[<ZH
)@@G@@H9,I-(H15GD4HD\H0)@G@@@O 0)HD!GD$G(3^[>H1<H95H14G(2G(=^[0IL(H92^[4H8)I-*ZI
)@@G@@G*)H1>J[4^[2G(<H92G),^@)@[@@@O 0)^@)@L@@@O 0)E-*G(2G*)HD3^[-^[5IT>IK!G->ZJ
)@@G@@G1(H1-GL?G*)I[-GT:G(4^[<G(?H)?^[KETMCDMC0?^[7H[(GT*^[-G1&G(<I-3^[4H[>^@)ZK
)@@G@@@L@@@O 0)H90G(2GD4HD\H0)H9&^[4H[>IT>^[2H95I-(H1>IS,^@)D1\IL!GD?H-9^@*I9*ZL
)@@G@@G(,^[KETMCDMC0)HD,^['G(2H8( ))H9,H-9@L@@@O 0)GT>IL4GD(H0)I-9I[>IS)H9&^[2ZM
)@@G@@G(<H92G-3^[-IL>^[2G(4I(2H1>G))I-\^[4H[>^[5IT>IK'^[=GD4GC)IL>GT\IL=IS?^@)ZN
)@@G@@@M@@@O 0)I-9I[>^@0A*0^[<H9,I-2H9?^[2G(<H92G-3^@*H--GL>H))HD!GD$G(3 C?^[-ZO
)@@G@@H1=^[4JD0G*)A@4AK)GT\H14IL\H))IL>GT\IL=IS)@M@@@O 0) [3I9(I-<H@)HD!GD$G(3ZP
)@@G@@ C,^@)ET*H95H-=^[4H[>^[5IT>IK?^[*H97G(6G(2 ))I9(IT*^[4H8)IL>GT>HD6G*)GD?ZQ
)@@G@@H))I-9I[>IS)@L@@@O 0)H9&^[2G(<H92G-3 ))I-*G*)G1?GD$^[KETMCDMC0)H(5IT4^[+ZR
)@@G@@G*)IT>I))H1\H1'G(2H8,^@)E-*HD3^[&H--G8)H(-JC)GL>@A@@@O 0)G-9H1-H((GT-H-?ZS
)@@G@@JC)H(\G-(G1(G(= 0)@[@@@O 0)^@)@M@@@O 0)D1\I->^[4H[-I))E[NC-AEK)I9(H-?^[2ZT
)@@G@@G(4I(2H0)GT\H14HD,I(-I-(H9,^[2G(<H92G-3^[(G0)E[NEL[ELA^[(IS)H1\H1'G(2H8)ZU
)@@G@@@N@@@O 0)G(6G(,^[4H[\I($H@)I-*G(9^[!GD9^[+G(?H9,G8)I-\^[4H[>^[0IL>GT>G-(ZV
)@@G@@H1$^[2G(<H92G)) [7H[(GT*^[7GD3^[4IL5H1<GD4G(=^@)@D@@@O 0)H9,^[4H[>^[0IL>ZW
)@@G@@I1(H95IS)GT-H-?^[4H8)E[NC-AEK( 0)^@)@[@@@O 0)^@)@^@@@O^)*AC(^@)^@)^@)D-DZX
)@@G@@E))^@)@K@@@OE[NC-AEK%^@)^@)D-[ -P^@)^@)^@)CC2 )1^@)^@)^@)^@)^@)^@)^@) 0)ZY
)@@G@@ETFDDK^[DD1DE-DCDG^[NC(BD( D1OES)^@)@A@@@O^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)ZZ
)@@G@@^):AK)@L@@@OE[NC-AELN K)^@)D-[ -P^@)^@)^@)CC2 )0^@)^@)^@)^@)^@)^@)^@) 0)AA
)@@G@@C-JD0$E))ETFDDK^[DD1DE-DCDG^[NC(BD( D1OES)@#@@@O^@)^@)^@)^@)^@) 0)@K@@@OAB
)@@G@@^@)^@)^@)^@)^@)CT[D-G -[AS)^@)E[NC-AEK=DC)^@)^@)^@)^@)^@) 0)DDIDDODD[D-DAC
)@@G@@FL ^[AD9M^[[^[MC([C))^@)@K@@@OE[NC-AEK1^@)^@)D-I -P^@)^@)^@)CC2 )1^@)^@)AD
)@@G@@^@)^@)^@)^@)^@) 0)C9 E))DDHE[JETNDD]D- ^[^DDNDS)CD^C-M@J@@@O^@)^@)^@)^@)AE
)@@G@@^@)E-  -P^@)^@)^@)CC1 -KETMCLDE))^@)^@)^@)^@) 0)D9KC(IC(^^[AD9M^[MC([C-DAF
)@@G@@D1BB8)@L@@@O^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC2 -KETIE9[^@)^@)^@)^@)^@) 0)AG
)@@G@@D1J ))C9 E))D1 F[O^[RELDE- ^[[C-^EL ETN^@)@M@@@O^@)^@)^@)^@)^@)DL ^@)^@)AH
)@@G@@^@)^@)CC2 -KDDJC-[^[KET^C1MC(JC0) 0)DDA^[[C-^ELN^[HCDOCTC ))CDO^[ D9A^@!AI
)@@G@@^[LE(DE))^@)@J@@@O^@)^@)^@)^@)^@)CT[D-G^@)^@)^@)E[NC-AEK=EK)^@)^@)^@)^@)AJ
)@@G@@^@) 0)EL CD^^[OD[ ^[IC(SE))EL CTJEL^@I@@@O^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)AK
)@@G@@E[NC-AELADDI^@)^@)^@)^@)^@) 0)EL CTJEL^^[[CT#C(KE- C))@K@@@O^@)^@)^@)^@)AL
)@@G@@^@)CD[ -P^@)^@)^@)CC2 )1^@)^@)^@)^@)^@)^@)^@) 0)CTJE(IE))E-CC*)CTJD1OELJAM
)@@G@@D))EL CTJEL^@K@@@O^@)^@)^@)^@)^@)CD[^@)^@)^@)^@)CC2 -KDDJC-[^@)^@)^@)^@)AN
)@@G@@^@) 0)E(KC-[E- ^[OD[ ^[^DDNCS)CD^C-MC(NES)@B@@@O^@)^@)^@)^@)^@)ET[^@)^@)AO
)@@G@@^@)^@)CC2 -KDDJC-[@K@@@O^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC1 -KETHD9^C*)^@)AP
)@@G@@^@)^@)^@) 0)C9 E))E-CC*)C1DD- ^[HD9^C*)CDBCDDD0)@H@@@O^@)^@)^@)^@)^@)DK)AQ
)@@G@@^@)^@)^@)^@)E[NC-AEK1^@)^@)^@)^@)^@)^@) 0)E-MFC)CDBCDDD0)^@)@J@P@OE[NC-AAR
)@@G@@EL D9A^@)D-I -P^@)^@)^@)CC1 )1^@)^@)^@)^@)^@)^@)^@) 0)C9 E))ETKC(#DD[D))AS
)@@G@@C(JC0)C1GCDB@J@@@PE[NC-AEL D9A K)D-I -P^@)^@)^@)CC1 )1^@)^@)^@)^@)^@)^@)AT
)@@G@@^@) 0)C9 E))ETKC(#DD[D))C(JC0)C1GCDB@H@P@OE[NC-AELADDI^@)D-[ -P^@)^@)^@)AU
)@@G@@CC3 )0^@)^@)^@)^@)^@)^@)^@) 0)D1J^[ ELMD9MES)^@)@H@@@PE[NC-AELADDI K)D-[AV
)@@G@@ -P^@)^@)^@)CC3 )0^@)^@)^@)^@)^@)^@)^@) 0)D1J^[ ELMD9MES)^@)@M@P@OE[NC-AAW
)@@G@@EL ELM^@)D-S^@)^@)^@)^@)F@1AC?E[NF@1AC)^@)^@)^@)^@) 0)EL ETOD9MC*)E(NC(MAX
)@@G@@^9N^[MC(OE(MD0)CD^C-MC(NES)^@)@M@@@PE[NC-AEL ELM K)D-S^@)^@)^@)^@)F@1AC?AY
)@@G@@E[NF@1AC)^@)^@)^@)^@) 0)EL ETOD9MC*)E(NC(M^9N^[MC(OE(MD0)CD^C-MC(NES)^@)AZ
)@@G@@@G@@@O^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)A@?F@1AC)^@)^@)^@)^@)^@)^@) 0)EL E-PBA
)@@G@@ELI^@)@[@@@O 8,^@)@F@@@O 0)E[NC-AEK=DC) *)DD,HD4HD-H-(JL>^[&H92^[-^[2G(-BB
)@@G@@G))H90G(2GD4HD\H0,@[@@@O 0)^@)@C@@@O 0)^[SAC1^@.^[PIT>IK$IS)IL>I-5IL,^[-BC
)@@G@@G-=IL>IT3^@)@ @@@O 0)^[[AC)B*) [+I(&H)?GL5G1- C)@C@@@O 0)^[[AK)B*)IT>G9!BD
)@@G@@G(,I))IT:HD0^[&H--G8) @0 )1 C)@ @@@O 0)^[GD(E^@)CC3 -KET^C1M^-D^@)@B@@@OBE
)@@G@@ 0)^[[AC)B*)C1(H->^[!H9=G*) [KETHD9^C*(^@)@C@@@O 0)^[SAC1^@.^[PIT>IK$IS)BF
)@@G@@IL>I-5IL,^[-G-=IL>IT3^@)@[@@@O 0)^@)@I@@@OE[NC-AEK=DC%^@)ETS^@)^@)^@)^@)BG
)@@G@@F@1AC?E[NF@1AC)^@)^@)^@)^@) 0)ET[E1 ^[PET EK$ES)F@1AC)@K@@@O^@)^@)^@)^@)BH
)@@G@@^@)ET[^@)^@)^@)^@)CC1 -KET]CDR^@)^@)^@)^@)^@) 0)E[JETO^[]E(AC1 EK)CD#CT BI
)@@G@@ETN^[RD9MC))@K@@@O^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC2 -KETMETA^@)^@)^@)^@)BJ
)@@G@@^@) 0)E[JETO^[NC(BD( D1O^[MC([C))C1GCDB^@)@L@@@O^@)^@)^@)^@)^@)ET[^@)^@)BK
)@@G@@^@)^@)CC1 -KETDCL[^@)^@)^@)^@)^@) 0)E[JETO^[DD1DE-DCDG^[]E(AC1 EK)CD^C-MBL
)@@G@@C(NES)@L@@@O^@)^@)^@)^@)^@)ETU^@)^@)^@)^@)E[NELG^@)^@)^@)^@)^@)^@)^@) 0)BM
)@@G@@CTGC([EK)DDIDDODD[D))EL CTJEL^^[GC(IC9OD@)@I@@@O^@)^@)^@)^@)^@)D-[^@)^@)BN
)@@G@@^@)^@)CC1 -KETHD9^C*)^@)^@)^@)^@) 0)C9 E))C1DD- ^[HD9^C*)^@)@J@@@O^@)^@)BO
)@@G@@^@)^@)^@)DLU^@)^@)^@)^@)CC1 -KET^C1M^- ELM^@)^@)^@) 0)C(MELJEK)DDA^[ID9OBP
)@@G@@^[JE[ D1 C))@N@@@O^@)^@)^@)^@)^@)ETI^@)^@)^@)^@)CC1 -KETAEL^CC)^@)^@)^@)BQ
)@@G@@^@) 0)E[JETO^[IC(BCDODDQC*)C1DELNE))EL CTJEL^^[^DDNCS)CD^C-M@F@@@O^@)^@)BR
)@@G@@^@)^@)^@)DK)^@)^@)^@)^@)A@?CC3^@)^@)^@)^@)^@)^@)^@) 0)C-JD1 @#@@@O^@)^@)BS
)@@G@@^@)^@)^@) 0)@I@@@OE[NC-AEK=C(MEK)D-[ -SE*)^@)^@)CC3 -KET ELAD1J^@)^@)^@)BT
)@@G@@^@) 0)C1DD- ^[ID9O^[JE[ D1 C),@K@@@O^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)A@?F@1BU
)@@G@@AC)^@)^@)^@)^@)^@)^@) 0)EL E-PELI^[OD8)E[NC-ADDJ^[PET EK)^@)@[@@@O 0)^@)BV
)@@G@@@F@@@O 0)E[NC-AEK=EK) *)EL\I(4HD,G*)I-\^[2G(-G))I-*G*)H1>J[4^[2G(<H92G),BW
)@@G@@@[@@@O 0)^@)@ @@@O 0)^[GD(E^@)F@1AC?E[NC-AEK=EK)@^@@@O 0)^@/IL>GT\IL=^[2BX
)@@G@@G(-G)"@ @@@O 0)^@/IL>GT\IL=^[,H94^[2G(-G)"@[@@@O 0)^@)@B@@@O 0)E(0H9,^@/BY
)@@G@@IL>GT\IL=^[2G(-G)"^[2G(4I(2H0'@[@@@O 0)^@)@H@@@O 0)^@)^[[AC)B*)H15H(+G(2BZ
)@@G@@^[\G0)I9\IL=IS)I-2GD,IT&G(2G(=^[4H8)I(3G(2^[+I(&G1>IK;@E@@@O 0)^@)^[[AK)CA
)@@G@@B*)HD,HD4HD-H))IL>GT\IL=^[<H9,I-2H9?^[7H92G))^@)@G@@@O 0)^@)^[KETAEL^CC)CB
)@@G@@^@.^[&HD2IT4^[2G(<H92G))IT>G9!G(,I))G-(IT<^[-G-=IL>IT3@J@@@O 0)^@)^[KETMCC
)@@G@@D))^@)^@.^[4H94GD?^[2G(<H92G))H->H1$I-*^@*H(-JC)GL>^[$IL>GD4G(2^[4H[-H0)CD
)@@G@@CC1 C)@[@@@O 0)^@)@C@@@O 0)E(0H9,^@/IL>GT\IL=^[,H94^[2G(-G)"^[2G(4I(2H0'CE
)@@G@@@[@@@O 0)^@)@A@@@O 0)^@)^[[AC)B*)IL>GT\IL=^[4JD0G*)^@)@A@@@O 0)^@)^[[AK)CF
)@@G@@B*)IL>GT\IL=^[?G(,G94H@)@[@@@O 0)^@)@[@@@O 0)^@)@K@@@OE[NC-AEK=EK%^@)ETSCG
)@@G@@^@)^@)^@)^@)F@1AC?E[NF@1ADM^@)^@)^@)^@) 0)ET[E1 ^[JE(M^[MC(OE(MD0)CD^C-MCH
)@@G@@C(NES)@K@@@O^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC1 -KETMETA^@)^@)^@)^@)^@) 0)CI
)@@G@@C9 E))EL CD^^[NC(BD( D1O^[AD-[C8)^@)@K@@@O^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CJ
)@@G@@CC1 -KETNC0)^@)^@)^@)^@)^@) 0)DDIDDODD[D-DFL ^[NC(BD( D1O^[AD-[C8)@J@@@OCK
)@@G@@^@)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC1 -KETMCTR^@)^@)^@)^@)^@) 0)EL CD^^[[^[#CL
)@@G@@D9IE-MD9G^[RD9MC))@J@@@OE[NC-AEK=AC)^@)D-SDC?E*)^@)^@)CC1 )1^@)^@)^@)^@)CM
)@@G@@^@)^@)^@) 0)ET E-PE@)CD#CT ETN^[RD9MC))^@)@J@@@O^@)^@)^@)^@)^@)ET[^@)^@)CN
)@@G@@^@)^@)CC1 -KDDJCL[E8)^@)^@)^@)^@) 0)E[JETO^[D 9J^[[CT#C(NES)E9JEL^@J@@@OCO
)@@G@@E[NC-AEK=AK)^@)E[DD9M^))^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)EL CD^^[[^[#CP
)@@G@@D9IE-MD9G^[RD9MC))@K@@@O^@)^@)^@)^@)^@)DLIFK)^@)^@)^@)CC3 -KET^C1MC(MEK)CQ
)@@G@@^@)^@)^@) 0)EL E-PELI^[RDDOD@)DC\D8)C(MELJELN^@)@K@@@O^@)^@)^@)^@)^@)D-[CR
)@@G@@^@)^@)^@)^@)CC3 -KDDJCL[^@)^@)^@)^@)^@) 0)C9 E))CTJD1OELJD))E9JEL^^[[C-^CS
)@@G@@EL ETN@I@@@O^@)^@)^@)^@)^@)D-[ -NAC)^@)^@)CC1 )?CC3^@)^@)^@)^@)^@)^@) 0)CT
)@@G@@C9 E))EL CTJEL^^[OFDKC*)@K@@@O^@)^@)^@)^@)^@)D-[ -CAC)^@)^@)CC2 )?CC3^@)CU
)@@G@@^@)^@)^@)^@)^@) 0)C9 E))C-[E-[^[MC(#D9MC))D- D1BE-C^@)@I@@@O^@)^@)^@)^@)CV
)@@G@@^@)ETND))^@)^@)^@)CC2 )6^@)^@)^@)^@)^@)^@)^@) 0)D9ID-T^[OAC?^[KD- CDNC*)CW
)@@G@@@I@@@O^@)^@)^@)^@)^@)E-K^@)^@)^@)^@)A@?CC3^@)^@)^@)^@)^@)^@)^@) 0)CTJD1OCX
)@@G@@ELJD))EL CTJEL^B8)@L@@@O^@)^@)^@)^@)^@)D-[ -NAK)^@)^@)CC2 )?CC3^@)^@)^@)CY
)@@G@@^@)^@)^@) 0)FD ES?^[GC(IC9OD@)DDN^[DD0)ES2^[JD1GFC)^@)@M@@@O^@)^@)^@)^@)CZ
)@@G@@^@)D-[^@)^@)^@)^@)CC4 -KETNC0)^@)^@)^@)^@)^@) 0)C9 E))E-CC*)ET C9HC(IE))DA
)@@G@@ETFDDK 9ADDIC))C1GCDB^@)@M@@@O^@)^@)^@)^@)^@)DLU^@)^@)^@)^@)CC4 -KET^C1MDB
)@@G@@^)4^@)^@)^@)^@) 0)DDA^[[CT#C(KE-DD1B^[NC(BD( D1OES?^[BD8)CDCC([C))@M@@@ODC
)@@G@@^@)^@)^@)^@)^@)DL]^@)^@)^@)^@)CC4 -KET^C1M^)4^@)^@)^@)^@) 0)DDA^[NDTDE[KDD
)@@G@@DDIC8)ET C9HC(IE-N ))C9J^[[D[ CD^^@)@O@@@O^@)^@)^@)^@)^@)DL  -P^@)^@)^@)DE
)@@G@@CC1 )0A*1^[KET^C1M^)5^@)^@) 0)C1DD1^DDIC8)ET C9NBS)DDA^[#D9IE-DD1PCDODDJDF
)@@G@@D0?^[[CT#C(KE))DDO@J@@@O^@)^@)^@)^@)^@)E-  -P^@)^@)^@)CC1 )0A)3^@)^@)^@)DG
)@@G@@^@)^@)^@) 0)C1JELOEL[D0)CL[CTFETKCD#C*_^@)@J@R@O^@)^@)^@)^@)^@)E-IC*?E*)DH
)@@G@@^@)^@)CC1 )0A)4^@)^@)^@)^@)^@)^@) 0)D9PEK)D9RD0)CL[CTFETKCD#C*_^@)@J@@@RDI
)@@G@@^@)^@)^@)^@)^@)E-IC*?E*)^@)^@)CC1 )0A)5^@)^@)^@)^@)^@)^@) 0)D9PEK)D9RD0)DJ
)@@G@@CL[CTFETKCD#C*_^@)@K@@@O^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)E[NC-AEK=AS)^@)^@)DK
)@@G@@^@)^@)^@) 0)FD ES?^[NDTDE@)E-CC*)CL[CTFETKCD#C*)@O@@@O^@)^@)^@)^@)^@)ETUDL
)@@G@@^@)^@)^@)^@)E[NETA^@)^@)^@)^@)^@)^@)^@) 0)D9OD[ ELRDDNC*?^[DC9ID9MC*)E-CDM
)@@G@@C*)EL CTJEL^^@*C(QC(I^[ D9A C)@K@@@O^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC1 -KDN
)@@G@@ET]CC)^@)^@)^@)^@)^@) 0)C9 E))D-[ETO^[]E(AC1 EK)CD^C-MC(NES)@J@@@O^@)^@)DO
)@@G@@^@)^@)^@)D-S^@)^@)^@)^@)F@1AC?E[NF@1ADM^@)^@)^@)^@) 0)EL ETOD9MC*)D9PEK)DP
)@@G@@D9RD0)F@1AC)@H@@@O^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)E[NC-AEK=A0)^@)^@)^@)^@)DQ
)@@G@@^@) 0)C9J^[ADDIDDND@)E(K@M@@@OE[NC-AEK=AS)^@)DDICS)^@)^@)^@)CC1 -KDDJC-[DR
)@@G@@^@)^@)^@)^@)^@) 0)DDICTMC(HC(IE))E[[ETO^[]CD#DTNE[[CT ^[MC(#D9MC))@K@@@ODS
)@@G@@^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)E[NC-AEK=AK)^@)^@)^@)^@)^@) 0)C9J^[MC([C))DT
)@@G@@C1JEK)D1 F[O^[NC(BD( D1O@L@@@OE[NC-AEK=A))^@)DL  -P^@)^@)^@)CC1 )0A87^[KDU
)@@G@@ET^C1MC(JC0)^@) 0)E-[DT ^[PET EK)C(JC0)C(SDDO^[DC0)C(JC0)^@)@H@@@O^@)^@)DV
)@@G@@^@)^@)^@)E-K^@)^@)^@)^@)A@?CC3^@)^@)^@)^@)^@)^@)^@) 0)C-[E-[^[DD([C9 B8)DW
)@@G@@@H@@@O^@)^@)^@)^@)^@)E-IC*?E*)^@)^@)CC1 )0A*0^@)^@)^@)^@)^@)^@) 0)D-[CL DX
)@@G@@D))DDHCDBC*_@I@@@O^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)E[NC-AEK=A*)^@)^@)^@)^@)DY
)@@G@@^@) 0)FD ES?^[[CT#C(KE))DDO^@)@I@@@O^@)^@)^@)^@)^@)E-  -P^@)^@)^@)CC1 )0DZ
)@@G@@A)2^@)^@)^@)^@)^@)^@) 0)ETRDDOCTC^[DD([C9 B8)^@)@K@@@O^@)^@)^@)^@)^@)E-UEA
)@@G@@^@)^@)^@)^@)E[NEL[ELA^@)^@)^@)^@)^@)^@) 0)CD#CT E[ODDIC8)CDGD))DDHCDBC(NEB
)@@G@@B8)^@)@I@@@O^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)E[NC-AEK=A*)^@)^@)^@)^@)^@) 0)EC
)@@G@@FD ES?^[[CT#C(KE))DDO^@)@J@@@O^@)^@)^@)^@)^@)E-IC*?E*)^@)^@)CC1 )0A*1^@)ED
)@@G@@^@)^@)^@)^@)^@) 0)CTJD1ODDIE([E-DD9I^[DD([C9 B8)@L@@@O^@)^@)^@)^@)^@)DLUEE
)@@G@@^@)^@)^@)^@)CC4 -KET^C1M^)5^@)^@)^@)^@) 0)FD ES?^[DC0)D1JE))ETFDDKE[DD1BEF
)@@G@@ ))CD#CT E[O@L@@@O^@)^@)^@)^@)^@)D-S^@)^@)^@)^@)F@1AC?E[NF@1ADM^@)^@)^@)EG
)@@G@@^@) 0)C9 E))D9PEK)D9RD0)EL E-PELI^[[C-^EL ETN^@)@J@@@O^@)^@)^@)^@)^@)DK)EH
)@@G@@^@)^@)^@)^@)AC?F@1AC)^@)^@)^@)^@)^@)^@) 0)C-JD0$E))CD#CT E[O^[DD([C9 ^@)EI
)@@G@@@L@@@OE[NC-AEK=A*)^@)D-[^@)^@)^@)^@)CC1 -KET]CDR^@)^@)^@)^@)^@) 0)C9 E))EJ
)@@G@@E(NC(M^[]E(AC1 EK)CD#CT ETN^[RD9MC))@M@@@O^@)^@)^@)^@)^@)E-GC*)^@)^@)^@)EK
)@@G@@CC2 -KET]D))^@)^@)^@)^@)^@) 0)DDN^[DD([C9 ^[GC(IC9OD@/CLPC1AC(M^[GC(IC9OEL
)@@G@@D@_^@)@K@@@O^@)^@)^@)^@)^@)D-SDC?E*)^@)^@)CC1 )?CC2^@)^@)^@)^@)^@)^@) 0)EM
)@@G@@FD ES?^[PET ^[DD([C9 ^[GC(IC9OD@)^@)@L@@@O^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)EN
)@@G@@CC2 -KET#ELG^@)^@)^@)^@)^@) 0)E[JETO^[#E(MEL D1O^[MC(#D9MC))D- D1BE-C^@)EO
)@@G@@@M@@@O^@)^@)^@)^@)^@)CD[^@)^@)^@)^@)CC2 -KETMD))^@)^@)^@)^@)^@) 0)CD#CTPEP
)@@G@@D(PD-[E- ^[OD9OCDG^[MC(#D9MC))D- D1BE-C^@)@B@@@O^@)^@)^@)^@)^@)ET[^@)^@)EQ
)@@G@@^@)^@)CC2 -KETMD))@K@@@O^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC1 -KDDJCL[E8)^@)ER
)@@G@@^@)^@)^@) 0)E[JETO^[OD[ ^[D 9J^[[CT#C(NES)E9JEL^@K@@@O^@)^@)^@)^@)^@)D-[ES
)@@G@@^@)^@)^@)^@)CC1 -KDDJC-[^@)^@)^@)^@)^@) 0)C9 E))CTPELMC(IE))C-DET#^[[C-^ET
)@@G@@EL ETN@L@@@O^@)^@)^@)^@)^@)E-K^@)^@)^@)^@)E[NC1MC-[^@)^@)^@)^@)^@)^@) 0)EU
)@@G@@C1DELNE))EL CD^^[^DDNCS)CD^C-MC(NES)ET E)_@J@@@O^@)^@)^@)^@)^@)ET[^@)^@)EV
)@@G@@^@)^@)CC1 -KETAEL^CC)^@)^@)^@)^@) 0)D1J ))ETJ^[NC(O^[DE))D1JE8)^@)@L@@@OEW
)@@G@@^@)^@)^@)^@)^@)CD[ -P^@)^@)^@)CC1 )1^@)^@)^@)^@)^@)^@)^@) 0)DDICTMC(HC(IEX
)@@G@@E))E-J^[MC(#D9MC))DDOET D-A^@)@J@@@O^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC1 -KEY
)@@G@@DDJC-[^@)^@)^@)^@)^@) 0)E[JETO^[^DDNCS)CD^C-MC(NES)^@)@N@@@O^@)^@)^@)^@)EZ
)@@G@@^@)E[DD9M^))^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)EL CD^^[OD[ ^[MC(#D9MC))FA
)@@G@@C-[E-[^[DD1OD8)E-CC*)CLPC1AC(M@K@@@O^@)^@)^@)^@)^@)DLIFK)^@)^@)^@)CC3 -KFB
)@@G@@ET^C1MC(MEK)^@)^@)^@) 0)EL E-PELI^[RDDOD@)DC\D8)C(MELJELN^@)@I@@@O^@)^@)FC
)@@G@@^@)^@)^@)D-S^@)^@)^@)^@)F@1AC?E[NF@1ADM^@)^@)^@)^@) 0)C9 E))D9PEK)D9RD0)FD
)@@G@@F@1AC)@L@@@O^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC1 -KET#ELG^@)^@)^@)^@)^@) 0)FE
)@@G@@C9 E))CTPELMC(IE))EL CTJEL^^[GC(IC9OD@)^@)@K@@@O^@)^@)^@)^@)^@)CD[^@)^@)FF
)@@G@@^@)^@)CC1 -KDDJC-[^@)^@)^@)^@)^@) 0)E(KC-[E- ^[OD[ ^[^DDNCS)CD^C-MC(NES)FG
)@@G@@@B@@@O^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC1 -KDDJC-[@M@@@O^@)^@)^@)^@)^@)D-[FH
)@@G@@^@)^@)^@)^@)CC1 -KET]CC)^@)^@)^@)^@)^@) 0)C9 E))E-CC*)CTPELMC(IE))CLPC1AFI
)@@G@@C(M^[[C-^EL ETN^@)@L@@@O^@)^@)^@)^@)^@)CD[^@)^@)^@)^@)CC1 -KDDJE9#^@)^@)FJ
)@@G@@^@)^@)^@) 0)E(KC-[E- ^[RDDOD@)D-[ETO^[RD9MC))CTJE(IE))@N@@@O^@)^@)^@)^@)FK
)@@G@@^@)ET[^@)^@)^@)^@)CC1 -KET]CC)^@)^@)^@)^@)^@) 0)E[JETO^[IC(SE))CDQCDDD-[FL
)@@G@@CLGC*)CLPC1AC(M^[[C-^EL ETN^@)@J@@@OE[NC-AEK=A0)^@)CDI^@)^@)^@)^@)CC1 -KFM
)@@G@@ETDCL[^@)^@)^@)^@)^@) 0)CTJD(KE(OC*)^S)E9JEL^ES)EL CD^@K@@@O^@)^@)^@)^@)FN
)@@G@@^@)D-[^@)^@)^@)^@)CC2 -KETMCTR^@)^@)^@)^@)^@) 0)C9 E))EL CTJEL^^[#D9IE-MFO
)@@G@@D9G^[RD9MC))@L@@@O^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC3 -KETNC0)^@)^@)^@)^@)FP
)@@G@@^@) 0)C9 E))ET C9HC(IE))ETFDDK 9ADDIC))C1GCDB^@)@O@@@O^@)^@)^@)^@)^@)DLUFQ
)@@G@@^@)^@)^@)^@)CC3 )0 -SAC1^@)^@)^@)^@)^@) 0)DDA^[[CT#C(KE-DD1B^[NC(BD( D1OFR
)@@G@@ES?^[MC(OE(MD0)E-J^[KET^C1M^@)@K@@@O^@)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC3 )2FS
)@@G@@^@)^@)^@)^@)^@)^@)^@) 0)ET E))ET C9HC(IE))C1DD1^^[AD-[C8)^@)@B@@@O^@)^@)FT
)@@G@@^@)^@)^@)ET[^@)^@)^@)^@)CC3 -KETNC0)@L@@@O^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)FU
)@@G@@CC3 -KET]D))^@)^@)^@)^@)^@) 0)C9 E))D9MDDBDDICDG^[]E(AC1 EK)D- D1BE-C^@)FV
)@@G@@@L@@@O^@)^@)^@)^@)^@)CDI^@)^@)^@)^@)CC3 -KDDJE9#^@)^@)^@)^@)^@) 0)D(DD1PFW
)@@G@@ES)E[JELODDJD0)CDGEL CD^FC)C1DD-GC(^@K@Q@O^@)^@)^@)^@)^@)DLI^@)^@)^@)^@)FX
)@@G@@CC3 )0 -SAC1^@)^@)^@)^@)^@) 0)CDGD))C-JD1 ^[DC0)CLPC1AC(M^[AE(GD))@L@Q@OFY
)@@G@@^@)^@)^@)^@)^@)DLU^@)^@)^@)^@)CC3 )0 -SAC1^@)^@)^@)^@)^@) 0) [MC(OE(MD0)FZ
)@@G@@E-J^[KET^C1M^[JEK)E[NC-AEL] C)@K@@@O^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC3 -KGA
)@@G@@ET]D))^@)^@)^@)^@)^@) 0)E(KC-[E- ^[IC(R^[]E(AC1 EK)D- D1BE-C@N@Q@O^@)^@)GB
)@@G@@^@)^@)^@)D-[^@)^@)^@)^@)CC1 -KET]CC)^@)^@)^@)^@)^@) 0)E(NC*)CLPC1AC(M^[OGC
)@@G@@D8)D[JD-^^[IC(SE))CTJD1OELJD))E9JEL^@O@@@Q^@)^@)^@)^@)^@)D-[ -P^@)^@)^@)GD
)@@G@@CC1 -KETIEL#E8)^@)^@)^@)^@) 0)E[GCD#C*)E-J^[KE(O^[IC(SE))EL CTJEL^^[#D9IGE
)@@G@@E-MD9G^[RD9MC))^@)@J@@@O^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)E[NC-AEK=AC)^@)^@)GF
)@@G@@^@)^@)^@) 0)EL CD^^[[D1JE-CC(M^[NC(BD( D1O@[@@@O 8,^@)@F@@@O 0)E[NC-AELJGG
)@@G@@^@!^[\I[>H0)E[NC-A^[&H92^[2G(-G))H90G(2GD4HD\H13 0)^@)@[@@@O 0)^@)@B@@@OGH
)@@G@@ 0)^[[A@)B*)E[NC-A^[0GD<HT>I))GD=G-2G(3IS)@D@@@O 0)^[[AC)B*)HD,HD4HD-H))GI
)@@G@@G1(H->^[7H92G))GD=G-2G(3IS)^@)@ @@@O 0)^[GD(E^@)F@1AC?E[NC-AELJ^@)@B@@@OGJ
)@@G@@ 0)^[[AS)B*)G(2IL\IK)IT4GD4I(3^[\IK)A@)^@)@[@@@O 0)^@)@M@@@O 0)E-*HD3^[2GK
)@@G@@H95I-(H1>^93^[!GD(H0)G15H1<I-(H9,^[(IS)I-\^[(H1(I-(GD?HD'G*)I-*G*)I[-G9>GL
)@@G@@G))DC\D8)IL\I(4HD,G(3^@)@L@@@O 0) [KDDJ^)(^[\H0)I-*G*)G1(H-> ))IT\^[4H[-GM
)@@G@@I))IT5GL3G(1I(>H14^[2G(-G-3^[7HD?H))GL>^[0GD$G(= 0)^[OH[>^@)@K@@@O 0)I1-GN
)@@G@@H-5G*)HD,^[[AC)HD3^[-^[7H92G))GD=G-2G(3IS)GD4^[7H[(GT*^[2G(-G-(H1$^[(IS)GO
)@@G@@I-\^[+G($HD, 0)^@)@[@@@O 0)^@)@J@@@OE[NC-AELJ K)^@)ETS^@)^@)^@)^@)F@1AC?GP
)@@G@@E[NF@1AC)^@)^@)^@)^@) 0)ET[E1 ^[MC(OE(MD0)CD^C-MC(NES)@K@@@O^@)^@)^@)^@)GQ
)@@G@@^@)D-[^@)^@)^@)^@)CC2 -KETHD9^C*)^@)^@)^@)^@) 0)C9 E))CTPELMC(IE))D(JC- GR
)@@G@@^[JC0)C1DD- @L@@@O^@)^@)^@)^@)^@)D-[ -SE*)^@)^@)CC3 -KET ELAD1#^@)^@)^@)GS
)@@G@@^@) 0)C9 E))^9ADDGC*)D1JE))CTGD9NC(^^8)C(MELJEK)@K@@@O^@)^@)^@)^@)^@)DLIGT
)@@G@@FK)^@)^@)^@)CC2 )0 -SAC1^@)^@)^@)^@)^@) 0)C(MELJEK)DDA^[ADDGC*)D1JE))CTGGU
)@@G@@D9NC(^@J@@@O^@)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC2 -KETMCLDE))^@)^@)^@)^@) 0)GV
)@@G@@C9 E))EL CD^^[HD9^C*)CLDE))^@)@M@@@O^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC2 -KGW
)@@G@@ETHD9^C*)^@)^@)^@)^@) 0)E[JETO^[ADDGC*)CDN^[JE[ D0)C1JEK)EL CD^DDIC8)^@)GX
)@@G@@@L@@@O^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC1 -KDDJC-[^@)^@)^@)^@)^@) 0)E[JETOGY
)@@G@@^[#E(MEL D1O^[MC([C))CD^C-MC(NES)^@)@L@@@O^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)GZ
)@@G@@CC1 -KETDC-[^@)^@)^@)^@)^@) 0)E[JETO^[DD1DE-DCDG^[^DDNCS)CD^C-MC(NES)^@)HA
)@@G@@@E@@@S^@)^@)^@)^@)^@)IT'^@)^@)^@)^@)I[3G12G--^@)^@)^@)^@)^@)^@) 0)@L@@@OHB
)@@G@@^@)^@)^@)^@)^@)E[DD9AD8=^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)D9KC(I^[OD[ HC
)@@G@@^[KCDBC(^^[D 9J^[MD9PE-DD1 ES)@F@@@O^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)E[NC-AHD
)@@G@@ELADDI^@)^@)^@)^@)^@) 0)C-JD1 @[@@@O 0)^@)@E@@@O 0)E[NC-AEL#^@!^[<H-\IT>HE
)@@G@@^[KET^C0)IL>GD=^[\I[>IL-I-(H9,IS,^@)@I@@@O 0)E[NC-AEL#C*) *)GT?H93G*)E[NHF
)@@G@@C-A^[2G(-G))H90G(2GD4HD\H13 ))GD,G))G(2GD3G*)I[-G9>IS,@[@@@O 0)^@)@B@@@OHG
)@@G@@ 0)^[[A@)B*)E[NC-A^[0GD<HT>I))GD=G-2G(3IS)@ @@@O 0)^[GD(E^@)F@1AC?E[NC-AHH
)@@G@@EL#^@)@B@@@O 0)^[[AS)B*)G(2IL\IK)IT4GD4I(3^[\IK)A@)^@)@[@@@O 0)^@)@M@@@OHI
)@@G@@ 0)E-*HD3^[2H95I-(H1>^[<H-\IT>IS)I-*G*)G1(H-> ))GT-I(3HD,G8)I-*G*)I[-G9>HJ
)@@G@@IS)GL>HD,G8)I(3G(=^[4H8)GT\H14GD(H0)@D@@@O 0)G--I--^[&H92^[4H[>^[&HD?G*)HK
)@@G@@I-\^[+G*)IL>H->GD3G(= 0)@[@@@O 0)^@)@I@@@OE[NC-AEL# K)^@)D-[ -P^@)^@)^@)HL
)@@G@@CC2 -KDDJE[A^))^@)^@)^@)^@) 0)DLPETO^[AD-PETC^[KCDBC(N@E@@@O^@)^@)^@)^@)HM
)@@G@@^@)DK)^@)^@)^@)^@)^):AK)^@)^@)^@)^@)^@)^@)^@) 0)@L@@@OE[NC-AEL#C*%^@)D-[HN
)@@G@@ -P^@)^@)^@)CC2 -KDDJC1#^))^@)^@)^@)^@) 0)CTGD9NC*)E-CC*)C1DD- ^@*C(MCDNHO
)@@G@@C*)E[[C9 ES(@#@@@O^@)^@)^@)^@)^@) 0)@J@@@O^@)^@)^@)^@)^@)ETS^@)^@)^@)^@)HP
)@@G@@F@1AC?E[NF@1AC)^@)^@)^@)^@) 0)ET[E1 ^[MC(OE(MD0)CD^C-MC(NES)@I@@@O^@)^@)HQ
)@@G@@^@)^@)^@)D-[^@)^@)^@)^@)CC1 -KETHD9^C*)^@)^@)^@)^@) 0)C9 E))CTPELMC(IE))HR
)@@G@@D(JC- @M@@@O^@)^@)^@)^@)^@)D-[ -SE*)^@)^@)CC3 -KET ELAD1M^@)^@)^@)^@) 0)HS
)@@G@@^9ADDGC*)D1JE))D9KC(IC(^^[AD9M^[MC([C-DD1B^8)^@)@N@@@O^@)^@)^@)^@)^@)DLIHT
)@@G@@C*?E*)^@)^@)CC1 -KETMCLDE))A@?F@1AC)^@) 0)C(MELJEK)C(SDDO^[DC0)D1JE))D9KHU
)@@G@@C(IC(^^[AD9M^[MC([C-DD1B@I@@@O^@)^@)^@)^@)^@)ETU^@)^@)^@)^@)E[ND(JC- ^@)HV
)@@G@@^@)^@)^@)^@)^@) 0)CTGC([EK)E-CC*)D(JC- ^@)@N@@@O^@)^@)^@)^@)^@)CT[D-G^@)HW
)@@G@@^@)^@)A@?CC2^@)^@)^@)^@)^@)^@)^@) 0)C1GE(ND@)CDIC))E[JETNDD]D-T^[ EL[ET HX
)@@G@@^[OD[ ^[KCDBC(N^@)@G@@@O^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)E[NC-AELADDI^@)^@)HY
)@@G@@^@)^@)^@) 0)CDGD))C-JD1 @#@@@O^@)^@)^@)^@)^@) 0)@^@@@O^@)^@)^@)^@)^@)C(IHZ
)@@G@@C))^@)_@@@@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@IA
)@@G@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@*[S@@[*SDFF*@^@@@M 8)^@)IB
)@@G@@^@)^@)^@)CDSEK=^@)@B@@@M^@)^@)^@)^@)^@)E[NC-AC1DC(GC-N^@0 -[A@)^@)@[@@@MIC
)@@G@@ 0)^@)@D@@@M 0)E@)ES)C))C0)^@!^@)E[-G9>G))ET^C0)IL\I(4HD,G(3 0)^@)@[@@@MID
)@@G@@ 0)^@)@K@@@M 0)C->IT(G9,G(=^[-H1=^[(H(0H->H(>H14G(=^[+JC)CD?GD,^[F 0)ET4IE
)@@G@@G(+GL>H13 ))FDAD1NES)E(JD(#ET# 0)^@)@[@@@M 0)^@)@I@@@M 0)E[NC-AE8) *)E92IF
)@@G@@HD4G*)GC)IL>GT\IL=^[5IT(H1$^[4H[>^[0GD$G(=^[NC-A^[DD8)I[-GT:GD$G*,@[@@@MIG
)@@G@@ 0)^@)@A@@@M 0)^[[A@)B*)I[-GT:G(4^[-G-=IL>IT3^@)@ @@@M 0)^[[AC)B*) [+I(&IH
)@@G@@H)?^[+I(&GC(@C@@@M 0)^[[AK)B*) [2G(<H92G))GT\H14IL\H))I9\IL= C)^@)@ @@@MII
)@@G@@ 0)^[GD(E^@)F@1AC?E[NC-AE8)^@)@B@@@M 0)^[[AS)B*)G(2IL\IK)IT4GD4I(3^[\IK)IJ
)@@G@@A@)^@)@[@@@M 0)^@)@L@@@M 0)CC0^[<H9,I--HD,IS)I-*G*)E[NC-A^[0GD<HT>I))GD=IK
)@@G@@G-2G(3IS;^[[AC)GT\H14GD(H13^[4H[>^[(H(-G9>^[-GT<G(3IS)@M@@@M 0)I9\IL=^@*IL
)@@G@@H->H1$I-*^[(H0)I9\IL=IS?^[-G-=IL>IT3 C;^[[AK)GT\H14GD(H13^[4H[>^[(H(-G9>IM
)@@G@@^[<H9,I-2H9?^[7H92G),^@)@L@@@M 0)E-*G*)H->H1$I-*^[&HD>H-=^[&IL\H*)I-*G*)IN
)@@G@@HD!GD$G*)GT\H14IL\H))I9\IL=^[7HD?H))GL>^[3G(4^[&IL\H*)I-*G*)@L@@@M 0)H->IO
)@@G@@H1$I-*^[0H92I-(H9,^[\G0)CC1 0)^[DG0)I-*G*)HD!GD$G*)HD3^[?GD2G9>IK)I-*GD,IP
)@@G@@^[4H[>^[<H9,G1(G95IL>G))@L@@@M 0)H(-J[(H(5H*)IT>G9!G(,I))IT(JL> ))I-*G*)IQ
)@@G@@HD!GD$G*)I9(H-?^[+G*)GL2H9:G(,^[(H14H8)IT>G9!G(,I-3 0)^[OH[>@L@@@M 0)I(3IR
)@@G@@G(2^[!GD9 ))H9&^[<H95IL3G*?^[7IL(I->^[*HD3^[\I9,^[3G($H(>H14IS) [<H9,I-(IS
)@@G@@H15GD4HD\H0)HD!GD$G(3 C)@D@@@M 0)GL9^[5IT(H1$^[3I((I--GL?G*)GT\H14IL\H))IT
)@@G@@I9\IL=IS,^@)@[@@@M 0)^@)@L@@@M 0)DD&^[>HD4H[>IK)I-*G*)GL5G1&G(2^[?G(,G94IU
)@@G@@H@)H92^[-G-=IL>IT3^[(IS)JL>IL\ ))H9,H-9^[4H[>^[<H9,I-2H9?^@)@L@@@M 0)I9\IV
)@@G@@IL=^[7HD?H))GL>^[7IL(I-4G(,^@*GD,G))I[>IL*GD0IS)GC)GL-GT:I[3GD<G*)IL>GT\IW
)@@G@@IL=^[-IS)I9>H-?^@!^[3G(>@#@@@M 0)GL>H-\I8( 0)^@)@[@@@M 0)^@)@K@@@M 0)E-*IX
)@@G@@G*)I[-GT:G(4^[&H--G8?^[KET]ETRC0?^[7H[>H0)H1\H1'G(2H8)HD,G-(GT-I->IS)I-*IY
)@@G@@GD4^[+GD<HT3I[-GT>@L@@@M 0)GT\H14IL\H))I9\IL=IS)GD2G*)I-\^[+G*)I92HD4I->IZ
)@@G@@H0)GD&I->IK)G(-GT*^[5IT>IK)HD!GD$G*,^@)E9*G(,^['G(2H8?@K@@@M 0)H1\^[+GD<JA
)@@G@@HT3I[-GT>^[<H9,I-2H9?^[7H92G-3^[7HD?H))GL>^[7IL(I-4G(, 0)^[OH[(IS)G1>GD4JB
)@@G@@I(2G*)HD3^@)@H@@@M 0)I-\^[>H1-GL?G*)I-*G*)E[NC-AEL]^[2H95I-(H1>^[4H8)G15JC
)@@G@@H1<I-(H9,^[0IL\I[>IL?JC,@[@@@M 0)^@)@^@@@M^)*AC(^@)^@)^@)D-DE))^@)@C@@@MJD
)@@G@@E[NC-AE8%^@)^@)ETS^@)^@)^@)^@)F@1AC?E[NF@1AC)^@)@J@@@M^@)^@)^@)^@)^@)E-IJE
)@@G@@FK?E*)^@)^@)A@?CC1^@)^@)^@)^@)^@)^@)^@) 0)FL ELJ^[]E(AC1 EK)CD^C-MC(NES_JF
)@@G@@@L@@@M^@)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC1 )0^@)^@)^@)^@)^@)^@)^@) 0)FD ES?JG
)@@G@@^[UC(MD8)C(IE-DEL ^[[CT#C(NES)E9JEL^@K@@@M^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)JH
)@@G@@CC1 -KET]CDR^@)^@)^@)^@)^@) 0)ET[E1 ^[]E(AC1 EK)CD#CT ETN^[RD9MC))@N@O@MJI
)@@G@@^@)^@)^@)^@)^@)ETI^@)^@)^@)^@)CC3 -KETAEL^CC)^@)^@)^@)^@) 0)D1J^[ADDMETOJJ
)@@G@@^[MC(#D9MC))ET C9HC(IE))C-DET#^[[C-^EL ETN@N@@@O^@)^@)^@)^@)^@)ETI^@)^@)JK
)@@G@@^@)^@)CC1 -KETAEL^CC)^@)^@)^@)^@) 0)D1J^[ADDMETO^[MC(#D9MC))ET C9HC(IE))JL
)@@G@@C-DET#^[[C-^EL ETN@K@@@M^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC3 -KETIE9[^@)^@)JM
)@@G@@^@)^@)^@) 0)C9 E))D1 F[O^[RELDE- ^[[C-^EL ETN^@)@J@@@M^@)^@)^@)^@)^@)ET[JN
)@@G@@^@)^@)^@)^@)CC3 -KDDJC-[^@)^@)^@)^@)^@) 0)E[JETO^[^DDNCS)CD^C-MC(NES)^@)JO
)@@G@@@J@@@M^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC1 -KETHD9^C*)^@)^@)^@)^@) 0)C9 E))JP
)@@G@@E-CC*)C1DD- ^[HD9^C*)^@)@L@@@M^@)^@)^@)^@)^@)D-[ -SE*)^@)^@)CC3 -KET ELAJQ
)@@G@@D1R^@)^@)^@)^@) 0)C1DD- ^[ID9O^[JE[ D1 C))C1JEK)E9MDDODDIC8)@L@@@M^@)^@)JR
)@@G@@^@)^@)^@)DLIC*?E*)^@)^@)CC1 -KETRCLDE))E[NC-AE9 ELM^@,^[ ELMD9M^[DC0)E9MJS
)@@G@@DDOC*)CLDE))D1JE))ET E))@K@@@ME[NC-AE81^@)^@)ET[^@)^@)^@)^@)CC2 -KETMCTRJT
)@@G@@^@)^@)^@)^@)^@) 0)ET[E1 ^[MC(#D9MC))CTJD1OELJD))E9JEL^@M@@@M^@)^@)^@)^@)JU
)@@G@@^@)D-[ -P^@)^@)^@)CC1 -KETMCTR^@)^@)^@)^@)^@) 0)C9 E))CD#CT ETN^[RD9MC))JV
)@@G@@C1JEK)CTJD1OELJD))E9JEL^@A@@@M^@)^@)^@)^@)^@)D-SDC?E*)^@)^@)CC1 )1@J@@@MJW
)@@G@@^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC1 -KDDJCL[E8)^@)^@)^@)^@) 0)E[JETO^[D 9JJX
)@@G@@^[[CT#C(NES)E9JEL^@N@@@M^@)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC1 )1 K\AC1 *1^@)JY
)@@G@@^@)^@)^@) 0)C9 E))D([F[DD(PD*)D- D1BE-C^[AD9M^[^CDOCC)EL CTJEL^^@)@H@@@MJZ
)@@G@@^@)^@)^@)^@)^@)E-K^@)^@)^@)^@)E[NEL#E8)^@)^@)^@)^@)^@)^@) 0)C-[E-[^[MC(#KA
)@@G@@D9MC)_@O@@@M^@)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC1 )1 K\A0!AC)^@)^@)^@)^@) 0)KB
)@@G@@D1J ))C9 E))D([F@)D- D1BE-C^[AD9M^[#D9IE-MD9G^[MC(#D9MC))^@)@N@@@M^@)^@)KC
)@@G@@^@)^@)^@)E-B^@)^@)^@)^@)CC1 -KET]D))^@)^@)^@)^@)^@) 0)DDN^[MC(#D9MC))D- KD
)@@G@@D1BE-C^[BEL CDOC(M^[OD[[D0)D([F@_^@)@K@@@M^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)KE
)@@G@@CC1 -KET]D))^@)^@)^@)^@)^@) 0)D1J ))E(NC*)EL CTJEL^^[GC(IC9OD@)^@)@K@@@MKF
)@@G@@^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC1 -KET#ELG^@)^@)^@)^@)^@) 0)E[JETO^[#E(MKG
)@@G@@EL D1O^[MC(#D9MC))ETDFL @O@@@M^@)^@)^@)^@)^@)ET[ -NAK)^@)^@)CC1 -KETMCTRKH
)@@G@@^@)^@)^@)^@)^@) 0)E[JETO^[MC(#D9MC))D- D1BE-C^[AD9M^[#D9IE-MD9G^[MC(#D9MKI
)@@G@@C-N^@)@M@@@M^@)^@)^@)^@)^@)ETND))^@)^@)^@)CC1 )6^@)^@)^@)^@)^@)^@)^@) 0)KJ
)@@G@@D1JE8)ETOD9MC*)ES1^[AD9M^[^CDOCC)EL CTJEL^ES)^@)@K@@@M^@)^@)^@)^@)^@)E-IKK
)@@G@@^@)^@)^@)^@)E[NEL#E8)^@)^@)^@)^@)^@)^@) 0)DDN^[DD([C9 ^[[^[^CDOCC)EL CTJKL
)@@G@@EL^B8)@L@@@M^@)^@)^@)^@)^@)ET[ -NAC)^@)^@)CC1 -KETMCTR^@)^@)^@)^@)^@) 0)KM
)@@G@@FD ES?^[KD9NE))ES1^[KD9ME-DD9I^[JC0)E)1^@)@K@@@M^@)^@)^@)^@)^@)E[DD9R^))KN
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)E9MDDOC*)E-CC*)CTJD1OELJD))E9JEL^^@)KO
)@@G@@@M@@@M^@)^@)^@)^@)^@)DLIFK)^@)^@)^@)CC3 -KET^C1RC(MEK)^@)^@)^@) 0)E-[DT KP
)@@G@@^[ ELMD9M^[ F[DE))C1JEK)DC\D8)C(MELJELN^@)@K@@@M^@)^@)^@)^@)^@)D-[^@)^@)KQ
)@@G@@^@)^@)CC1 -KDDJC-[^@)^@)^@)^@)^@) 0)C9 E))CTJD1OELJD))E9JEL^^[[C-^EL ETNKR
)@@G@@@O@@@M^@)^@)^@)^@)^@)E-K^@)^@)^@)^@)E[NC1MC-[^@)^@)^@)^@)^@)^@) 0)C1DELNKS
)@@G@@E))EL CTJEL^^[NC(BD( D1O^[[C-^EL ETN^[NC(O^[TC(OB8)^@)@I@@@M^@)^@)^@)^@)KT
)@@G@@^@)ET[^@)^@)^@)^@)CC1 -KETAEL^CC)^@)^@)^@)^@) 0)D1J ))ET E))DDO^[ID9R^@)KU
)@@G@@@M@@@M^@)^@)^@)^@)^@)CD[ -P^@)^@)^@)CC1 )1^@)^@)^@)^@)^@)^@)^@) 0)DDICTMKV
)@@G@@C(HC(IE))E-J^[MC(#D9MC))C-[E-[^[[C-^EL ETN@K@@@M^@)^@)^@)^@)^@)ET[^@)^@)KW
)@@G@@^@)^@)CC1 -KDDJC-[^@)^@)^@)^@)^@) 0)E[JETO^[D 9J^[^DDNCS)CD^C-MC(NES)^@)KX
)@@G@@@K@@@M^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC1 -KETIE9[^@)^@)^@)^@)^@) 0)E[JETOKY
)@@G@@^[IC(SE))E9MDDOC*)CD^C-MC(NES)@L@@@M^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC1 -KKZ
)@@G@@ET#ELG^@)^@)^@)^@)^@) 0)C9 E))CTPELMC(IE))EL CTJEL^^[GC(IC9OD@)^@)@M@@@MLA
)@@G@@^@)^@)^@)^@)^@)DLU^@)^@)^@)^@)CC1 -KET^C1RAK)^@)^@)^@)^@) 0)C-JD0$E))E9MLB
)@@G@@DDOC*)CLPC1AC(M^[DC0)D1J^[GC(IC9OD@)@L@@@M^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)LC
)@@G@@CC2 -KET]CC)^@)^@)^@)^@)^@) 0)C9 E))CTPELMC(IE))CLPC1AC(M^[[C-^EL ETN^@)LD
)@@G@@@L@@@M^@)^@)^@)^@)^@)D-SDC?E*)^@)^@)CC2 )?CC1^@)^@)^@)^@)^@)^@) 0)ET E))LE
)@@G@@D- D1BE-C^[DD0)CD#CT ETN^[RD9MC))^@)@J@@@M^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)LF
)@@G@@CC2 -KDDJCL[E8)^@)^@)^@)^@) 0)E[JETO^[D 9J^[[CT#C(NES)E9JEL^@L@@@M^@)^@)LG
)@@G@@^@)^@)^@)CD[ -P^@)^@)^@)CC1 )?CC2^@)^@)^@)^@)^@)^@) 0)E(KC-[E- ^[IC(SE))LH
)@@G@@CLPC1AC(M^[[C-^EL ETN^@)@K@@@M^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC1 -KET]CC)LI
)@@G@@^@)^@)^@)^@)^@) 0)E[JETO^[IC(SE))CLPC1AC(M^[[C-^EL ETN@K@@@M^@)^@)^@)^@)LJ
)@@G@@^@)E[DD9R^))^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)E9MDDOC*)E-CC*)CTPELMC(ILK
)@@G@@E))CLPC1AC(M@K@@@M^@)^@)^@)^@)^@)DLIFK)^@)^@)^@)CC3 -KET^C1RC(MEK)^@)^@)LL
)@@G@@^@) 0)EL E-PELI^[RDDOD@)DC\D8)C(MELJELN^@)@L@@@M^@)^@)^@)^@)^@)D-[^@)^@)LM
)@@G@@^@)^@)CC1 -KET#ELG^@)^@)^@)^@)^@) 0)C9 E))CTPELMC(IE))EL CTJEL^^[GC(IC9OLN
)@@G@@D@)^@)@J@@@M^@)^@)^@)^@)^@)CDP^@)^@)^@)^@)CC1 -KDDJC-[^@)^@)^@)^@)^@) 0)LO
)@@G@@E(KC-[E- ^[^DDNCS)CD^C-MC(NES)@B@@@M^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC2 -KLP
)@@G@@DDJC-[@K@@@M^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC2 -KETIE9[^@)^@)^@)^@)^@) 0)LQ
)@@G@@E[JETO^[IC(SE))E9MDDOC*)CD^C-MC(NES)@N@@@ME[NC-AE82^@)^@)DL FK)^@)^@)^@)LR
)@@G@@E[NCLNE9A^[KET^C1RAS)^@)^@) 0)DDA^[ID8)CL[CTFETKCD#C*)E9MDDOC(N ))ETFDDKLS
)@@G@@^[OD[DES)^@)@M@P@M^@)^@)^@)^@)^@)D-SDC?E*)^@)^@)CC1 )0A)4 K\AC2^@)^@)^@)LT
)@@G@@^@) 0)CTMC([E- ^[]CD#DTNE[[CT ^[#D9IE-MD9G^[RD9MC))^@)@M@@@P^@)^@)^@)^@)LU
)@@G@@^@)D-SDC?E*)^@)^@)CC1 )0A)5 K\AC2^@)^@)^@)^@) 0)CTMC([E- ^[]CD#DTNE[[CT LV
)@@G@@^[#D9IE-MD9G^[RD9MC))^@)@M@@@M^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC1 -KETMCTRLW
)@@G@@^@)^@)^@)^@)^@) 0)E[JETO^[DD0)E-CC*)EL CTJEL^^[#D9IE-MD9G^[RD9MC))@L@@@MLX
)@@G@@^@)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC1 -KETMCTR^@)^@)^@)^@)^@) 0)C9 E))CTJD1OLY
)@@G@@ELJD))E9JEL^^[[CT#C(NES)E9JEL^@A@@@M^@)^@)^@)^@)^@)D-SDC?E*)^@)^@)CC1 )1LZ
)@@G@@@J@@@M^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC1 -KDDJCL[E8)^@)^@)^@)^@) 0)E[JETOMA
)@@G@@^[D 9J^[[CT#C(NES)E9JEL^@M@@@M^@)^@)^@)^@)^@)E[DD9R^))^@)^@)^@)^@)^@)^@)MB
)@@G@@^@)^@)^@)^@)^@) 0)E9MDDOC*)E-CC*)CL[CTFETKCD#C*)CTJD1OELJD))E9JEL^@J@@@MMC
)@@G@@^@)^@)^@)^@)^@)DLIFK)^@)^@)^@)CC3 -KET^C1RC(MEK)^@)^@)^@) 0)EL E-PELI^[RMD
)@@G@@DDOD@)C(MELJELN^@)@J@@@M^@)^@)^@)^@)^@)DDICS)^@)^@)^@)CC1 -KDDJC-[^@)^@)ME
)@@G@@^@)^@)^@) 0)E(KC-[E- ^[^DDNCS)CD^C-MC(NES)@K@@@M^@)^@)^@)^@)^@)ET[^@)^@)MF
)@@G@@^@)^@)CC1 -KETIE9[^@)^@)^@)^@)^@) 0)CDIC))D1 F[O^[RELDE- ^[[C-^EL ETN^@)MG
)@@G@@@L@@@ME[NC-AE83^@)^@)D-[^@)^@)^@)^@)CC1 -KET]D))^@)^@)^@)^@)^@) 0)C9 E))MH
)@@G@@E[MC(QDDJE(N^[]E(AC1 EK)D- D1BE-C^@)@L@@@M^@)^@)^@)^@)^@)CDI^@)^@)^@)^@)MI
)@@G@@CC1 -KET#ELG^@)^@)^@)^@)^@) 0)D(DD1PES)CTPELMC(IE))EL CTJEL^^[GC(IC9OD@)MJ
)@@G@@@M@@@M^@)^@)^@)^@)^@)DLU^@)^@)^@)^@)CC1 -KET^C1RC1DD0)^@)^@)^@) 0)EL E-PMK
)@@G@@ELI^[DC0)D1J^[HD9MC*)CLPC1AC(M^[GC(AE))^@)@J@@@M^@)^@)^@)^@)^@)ET[^@)^@)ML
)@@G@@^@)^@)CC1 -KET]D))^@)^@)^@)^@)^@) 0)E(KC-[E- ^[]E(AC1 EK)D- D1BE-C@K@@@MMM
)@@G@@^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC2 )*A@5AC% 83A@(^@)^@)^@) 0)C9 E))ET C9HMN
)@@G@@C(IE))CTJD1OELJD))E9JEL^@K@@@M^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)E[NC-AE81^@)MO
)@@G@@^@)^@)^@)^@)^@) 0)C9J^[RELDE- ^[MC(NE))D9A^[]E(AC1 EK)@#@@@M^@)^@)^@)^@)MP
)@@G@@^@) 0)@H@@@ME[NC-AE9ADDI^@)D-[ -P^@)^@)^@)CC3 )0^@)^@)^@)^@)^@)^@)^@) 0)MQ
)@@G@@D1J^[ ELMD9MES)^@)@M@@@ME[NC-AE9 ELM^@)D-S^@)^@)^@)^@)F@1AC?E[NF@1AC)^@)MR
)@@G@@^@)^@)^@) 0)EL ETOD9MC*)E(NC(M^9N^[MC(OE(MD0)CD^C-MC(NES)^@)@G@@@M^@)^@)MS
)@@G@@^@)^@)^@)DK)^@)^@)^@)^@)A@?F@1AC)^@)^@)^@)^@)^@)^@) 0)EL E-PELI^@)@[@@@MMT
)@@G@@ 8,^@)@E@@@M 0)E[NC-AE9J^@!^[\I[>H0)E[NC-A^[7IL(I->^[\I[>IL-I-(H9,IS,^@)MU
)@@G@@@[@@@M 0)^@)@B@@@M 0)^[[A@)B*)E[NC-A^[0GD<HT>I))GD=G-2G(3IS)@B@@@M 0)^[[MV
)@@G@@AC)B*)G1(H->^[7H92G))GD=G-2G(3IS)^@)@ @@@M 0)^[GD(E^@)F@1AC?E[NC-AE9J^@)MW
)@@G@@@[@@@M 0)^@)@L@@@M 0)E-*HD3^[2H95I-(H1>^93^[&I(,GT4HD\H0)HD3^[4H8)HD,HD4MX
)@@G@@HD-H-(JL>^[4H[>^[0GD$G(=^[D 9J^[2H95I-(H1>IS)H9,@K@@@M 0)I-*G*)G1(H->^[3MY
)@@G@@H8)I-*GD4^[3I(+IT>ID5G(,I))I92HD4G(3^[7HD?H))GL>^[0IL\I[>IL?JC)I[-G9>G),MZ
)@@G@@^[OH[>@L@@@M 0)G1(H->^[-G-=IL>IT3^[(H0)CC1^[(IS)GC)I9\IL=^[-G-=IL>IT3^[-NA
)@@G@@I))I9*HD<H@)I92HD4HD,G8)HD3^[4H8)IT4GD2I),@[@@@M 0)^@)@J@@@ME[NC-AE9J K)NB
)@@G@@^@)ETS^@)^@)^@)^@)F@1AC?E[NF@1AC)^@)^@)^@)^@) 0)ET[E1 ^[MC(OE(MD0)CD^C-MNC
)@@G@@C(NES)@I@@@M^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC2 -KETHD9^C*)^@)^@)^@)^@) 0)ND
)@@G@@C9 E))C1DD- ^[HD9^C*)^@)@I@@@M^@)^@)^@)^@)^@)D-[ -SE*)^@)^@)CC3 -KET ELANE
)@@G@@D1#^@)^@)^@)^@) 0)C1DD- ^[ID9O^[#D-JET C))@K@@@M^@)^@)^@)^@)^@)DLIFK)^@)NF
)@@G@@^@)^@)CC2 )0 -SAC1^@)^@)^@)^@)^@) 0)DDA^[[D-MC([C-T^[JE[ D0?^[ ELMD9M^@)NG
)@@G@@@L@@@M^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC1 -KDDJC-[^@)^@)^@)^@)^@) 0)DDIDDONH
)@@G@@DD[D-DFL ^[OD[ ^[^DDNCS)CD^C-MC(NES)@K@@@M^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)NI
)@@G@@CC1 -KETIE9[^@)^@)^@)^@)^@) 0)E[JETO^[IC(SE))E9MDDOC*)CD^C-MC(NES)@M@@@MNJ
)@@G@@^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC1 -KETDC-[^@)^@)^@)^@)^@) 0)CDIC))ET E))NK
)@@G@@DDIDDODD[D))C-DET#^[[C-^EL ETN^[OD9J@E@@@Q^@)^@)^@)^@)^@)IT'^@)^@)^@)^@)NL
)@@G@@I[3G12G--^@)^@)^@)^@)^@)^@) 0)@K@@@M^@)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC2 -KNM
)@@G@@ETRCLDE))^@)^@)^@)^@) 0)C9 E))E9MDDOC*)D9KC(MCDODDJD0)CLDE))@I@@@M^@)^@)NN
)@@G@@^@)^@)^@)ET[^@)^@)^@)^@)CC2 -KETHD9^C*)^@)^@)^@)^@) 0)E[JETO^[ADDGC*)D(JNO
)@@G@@C- ^@)@K@N@M^@)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC1 )0^@)^@)^@)^@)^@)^@)^@) 0)NP
)@@G@@GT?G(-IK)H[(G9*^[7IL(I->^[-G-=IL>IT3@O@@@M^@)^@)^@)^@)^@)E[DD9AD8=^@)^@)NQ
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)D9KC(I^[OD[ ^[ADDGC*)C1JEK)E[[C9DD1B^@*CC1NR
)@@G@@^@.^[KDDJD[RCC(^@)@G@@@M^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)E[NC-AE9ADDI^@)^@)NS
)@@G@@^@)^@)^@) 0)CDGD))C-JD1 @[@@@M 0)^@)@E@@@M 0)E[NC-AE9#^@!^[<H-\IT>^[KET^NT
)@@G@@C0)I92HD4G*)H90G(2GD4HD\H13 0)@J@@@M 0)E[NC-AE9#C*) *)GT?H93G*)E[NC-A^[7NU
)@@G@@IL(I->^[\I[>IL-I-(H9,IS?^[-H1=^[>IL-IT>^[0GD$G(3 0)^@)@[@@@M 0)^@)@B@@@MNV
)@@G@@ 0)^[[A@)B*)E[NC-A^[0GD<HT>I))GD=G-2G(3IS)@ @@@M 0)^[GD(E^@)F@1AC?E[NC-ANW
)@@G@@E9#^@)@B@@@M 0)^[[AS)B*)G(2IL\IK)IT4GD4I(3^[\IK)A@)^@)@[@@@M 0)^@)@O@@@MNX
)@@G@@ 0)E-*HD3^[2H95I-(H1>^[(IS)I(3G(=^[4H8)I->IL!HD,GD4G*)I-*G*)ET^C0)I->J[4NY
)@@G@@^[+G((H1$^[7IL(I-4G(,BS)GD,^[>H1= (\G0!G1(H->^@)@M@@@M 0)GT\H14IL\H))IL>NZ
)@@G@@GT\IL=^[(IS)I92HD4I->H0)I-\^[4H[>^[&HD?G*?^[-H-?^[4G(8I))I[-G9>IS)GD2G*)OA
)@@G@@G1?I(3H[>G)?^[-H1=@N@@@M 0)I[-G9>G))GD<GT>IT3^[4H8)I-*G*)G1(H->^[(IS)I->OB
)@@G@@IL!HD,GD4G(= 0)^[AI(2I-*G(2^[KET^C0)H90G(2GD4HD\H13^[\H0)I-*G*)^@)@J@@@MOC
)@@G@@ 0)G1(H->^[!I(3I))GL>G9(H0)I9(I-*^[-H0)H90G(,^[2H95I-(H1>^@*E[NC-AELJ^[\OD
)@@G@@IK)E[NC-AE9J C,^@)@[@@@M 0)^@)@I@@@ME[NC-AE9# K)^@)D-[ -P^@)^@)^@)CC3 -KOE
)@@G@@DDJE[A^))^@)^@)^@)^@) 0)C1GE(ND@)E-CC*)E[[C9 ES)@A@@@M^@)^@)^@)^@)^@)DK)OF
)@@G@@^@)^@)^@)^@)^):AK)@L@@@ME[NC-AE9#C*%^@)D-[ -P^@)^@)^@)CC3 -KDDJC1#^))^@)OG
)@@G@@^@)^@)^@) 0)C1GE(ND@)CDIC))C(MCDNC*)E-CC*)E[[C9 ES)^@)@#@@@M^@)^@)^@)^@)OH
)@@G@@^@) 0)@J@@@M^@)^@)^@)^@)^@)ETS^@)^@)^@)^@)F@1AC?E[NF@1AC)^@)^@)^@)^@) 0)OI
)@@G@@ET[E1 ^[MC(OE(MD0)CD^C-MC(NES)@J@@@M^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC3 -KOJ
)@@G@@ETSAC1EK)^@)^@)^@)^@) 0)ET[E1 ^[#D-JETPEL ^[MD9PE-DD1 @I@@@M^@)^@)^@)^@)OK
)@@G@@^@)D-[^@)^@)^@)^@)CC2 -KETHD9^C*)^@)^@)^@)^@) 0)C9 E))C1DD- ^[HD9^C*)^@)OL
)@@G@@@L@@@M^@)^@)^@)^@)^@)D-[ -SE*)^@)^@)CC3 -KET ELAD1R^@)^@)^@)^@) 0)C1DD- OM
)@@G@@^[ID9O^[JE[ D1 C))C1JEK)E9MDDODDIC8)@M@@@M^@)^@)^@)^@)^@)DLIC*?E*)^@)^@)ON
)@@G@@CC2 -KETRCLDE))E[NC-AE9 ELM^@,^[DC0)D1JE))D9KC(I^[AD9M^[RELDE-DD1B ))C(MOO
)@@G@@ELJEK)@K@@@M^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC2 -KETIE9[^@)^@)^@)^@)^@) 0)OP
)@@G@@C9 E))D1 F[O^[RELDE- ^[[C-^EL ETN^@)@O@@@M^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)OQ
)@@G@@CC2 -KDDJC-[^@)^@)^@)^@)^@) 0)E(KC-[E- ^[^DDNCS)CD^C-MC(NES)E9DE-C^[GCDNOR
)@@G@@E))E9MDDOC*)CD^C-M@K@@@N^@)^@)^@)^@)^@)CD[ -P^@)^@)^@)CC2 )1^@)^@)^@)^@)OS
)@@G@@^@)^@)^@) 0)GD=G))H9,G*)G1\IK)I-*G*)C(JC0)GT7^@)@I@@@N^@)^@)^@)^@)^@)ET[OT
)@@G@@^@)^@)^@)^@)CC2 -KETIE9[^@)^@)^@)^@)^@) 0)I(0G--I->^[&H92^[5IT>IK)@J@@@MOU
)@@G@@^@)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC1 )*A@7A8% 83A@(^@)^@)^@) 0)C9 E))C(JC0)OV
)@@G@@CTJD1OELJD))E9JEL^@K@@@M^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)CC1 -KETMCTR^@)^@)OW
)@@G@@^@)^@)^@) 0)E[JETO^[MC(#D9MC))CTJD1OELJD))E9JEL^@I@@@M^@)^@)^@)^@)^@)D-[OX
)@@G@@ -P^@)^@)^@)CC1 -KETMCTR^@)^@)^@)^@)^@) 0)C9 E))CD#CT ETN^[RD9MC))@A@@@MOY
)@@G@@^@)^@)^@)^@)^@)D-SDC?E*)^@)^@)CC1 )1@J@@@M^@)^@)^@)^@)^@)ET[^@)^@)^@)^@)OZ
)@@G@@CC1 -KDDJCL[E8)^@)^@)^@)^@) 0)E[JETO^[D 9J^[[CT#C(NES)E9JEL^@L@@@M^@)^@)PA
)@@G@@^@)^@)^@)E[DD9R^))^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)E9MDDOC*)E-CC*)CTJPB
)@@G@@D1OELJD))E9JEL^^@*C(JC0(@J@@@M^@)^@)^@)^@)^@)DLIFK)^@)^@)^@)CC3 -KET^C1RPC
)@@G@@C(MEK)^@)^@)^@) 0)EL E-PELI^[JD0)DC\D8)C(MELJELN@I@@@M^@)^@)^@)^@)^@)ETUPD
)@@G@@^@)^@)^@)^@)E[ND(JC- ^@)^@)^@)^@)^@)^@) 0)DTDD-G^[ADDGC*)D(JC- ^@)@K@@@MPE
)@@G@@^@)^@)^@)^@)^@)D-S^@)^@)^@)^@)F@1AC?E[NF@1ADM^@)^@)^@)^@) 0)C9 E))E-CC*)PF
)@@G@@CTGD9NE(MC*)ELJE(ODDIC*)@N@@@M^@)^@)^@)^@)^@)CT[D-G^@)^@)^@)A@?F@1AC)^@)PG
)@@G@@^@)^@)^@)^@)^@) 0)C1GE(ND@)E-CC*)E[[C9 ES)CDIC))D([FD]C*)C(MCDNC*)E-CC(HPH
)@@G@@@K@@@M^@)^@)^@)^@)^@)DLIFK)^@)^@)^@)CC3 -KET^C1RC(MEK)^@)^@)^@) 0)EL E-PPI
)@@G@@ELI^[RDDOD@)DC\D8)C(MELJELN^@)@F@@@M^@)^@)^@)^@)^@)DK)^@)^@)^@)^@)E[NC-APJ
)@@G@@E9ADDI^@)^@)^@)^@)^@) 0)C-JD1 @#@@@M^@)^@)^@)^@)^@) 0)@^@@@M^@)^@)^@)^@)PK
)@@G@@^@)C(IC))^@)_@@@@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@PL
)@@G@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@C8@@@@PM
)@@G@@C8@@@@C8@@@@C8@@@@C8@@@@*[S@@[*SDFF*@ @@@@C[GD9[C)?D))ELGDD] 1]CDNC*=^@)PN
)@@G@@@ @@@@C[GD9[C)?D))ELGDD] 1[F[M^))^@)@ @@@@C[GD9[C)?D))ELGDD] 1AE(ICTN^@)PO
)@@G@@@A@@@@C[GD9[C)?D))ELGDD] 1[E1G^-KELJCTN^@)@ @@@@C[GD9[C)?D))ELGDD] 1 EDPPP
)@@G@@^))^@)@ @@@@C[GD9[C)?D))ELGDD] 1EE[MD9#ES)@ @@@@C[GD9[C)?D))ELGDD] 1KELJPQ
)@@G@@CTN^@)@ @@@@C[GD9[C)?D))ELGDD] 1GCTKELJCTN@A@@@@C[GD9[C)?D))ELGDD] 1NCDQPR
)@@G@@C(ME[MD9#ES)@A@@@@C[GD9[C)?D))ELGDD] 1OETLE[MD9#ES)^@)@ @@@@C[GD9[C)?D))PS
)@@G@@ELGDD] 1NE-[CTF^))@A@@@@C[GD9[C)?D))ELGDD] 1KET^C1KELJCTN^@)@ @@@@C[GD9[PT
)@@G@@C)?D))ELGDD] 1 D-O^-KDTO@A@@@@C[GD9[C)?D))ELGDD] 1KDDJ^-KELJCTN^@)_@@@@@PU
)@@G@@B@8^@)DC)^@)AK0A@)^[D^@)^@)B@2^@)DC)^@)^@3A8)^[D^@)^@)AK0^@)DC)^@)A)2A0)PV
)@@G@@@M@[[[^@)FD ES)^@)^@)^@)^@)^@)^@)^[D^@)AK0 07^@)*[S@@@*SDFF*@#@@@@/     PW
)@@G@@    $DEF    @#@@@@          AXR$    @ @@@@          $LEVEL    0,1,0     PX
)@@G@@@[@@@@.     @#@@@@.   B A S E $     @[@@@@.     @G@@@@. THESE  PROCS  ARPY
)@@G@@E  DESIGNED  TO  EASE  THE CREATION OF DATA STRUCTURES@G@@@@. INVOLVING PZ
)@@G@@  PARTIAL  WORD  PARTITIONS,  POSSIBLY  BASED  ON  AN  INDEX@G@@@@. REGIQA
)@@G@@STER, EITHER ABSOLUTELY OR RELATIVELY. UNBASED PARTITIONS MAY EVEN@#@@@@QB
)@@G@@. BE INITIALIZED. @[@@@@.     @G@@@@. THE  PROCS  ENABLE  ONE  TO  ESTABQC
)@@G@@LISH  THE  BASE  ADDRESS  OF A  DATA@G@@@@. STRUCTURE,  DEFINE  AND POSSQD
)@@G@@IBLY INITIALIZE ITS PARTITIONS, AND OBTAIN@D@@@@. THE CURRENT SIZE OF THQE
)@@G@@E STRUCTURE BEING DEFINED.    @[@@@@.     @G@@@@. INITIALIZATION IS ALWAQF
)@@G@@YS PERMISSIBLE, AND WORKS IN THE FOLLOWING WAY: @[@@@@.     @G@@@@. IF  QG
)@@G@@THE  STRUCTURE  BEING  DEFINED  IS BASED UPON THE CURRENT LOCATION@G@@@@QH
)@@G@@. COUNTER WITH AUTOMATIC ALLOCATION, THEN THE  INITIAL  VALUES  WILL  BEQI
)@@G@@@G@@@@. PLACED  IN  THE  WORDS  GENERATED  UNDER THE CURRENT LOCATION COQJ
)@@G@@UNTER.@G@@@@. HOWEVER, IF THE STRUCTURE IS A RELATIVELY BASED ONE (IE: BQK
)@@G@@ASED  ON  AN@G@@@@. INDEX  REGISTER)  THEN  THE  INITIAL VALUES ARE 'SAVQL
)@@G@@ED' IN AN ASSEMBLY@G@@@@. TIME VARIABLE CALLED 'B$$T', WHICH HAS SELECTOQM
)@@G@@RS DEFINED FOR EACH BASE@G@@@@. STRUCTURE, AS WELL AS EVERY WORD  BEING QN
)@@G@@ INITIALIZAED.  THIS  ASSEMBLY@G@@@@. TIME  VARIABLE  MAY  BE  USED,  SUQO
)@@G@@BSEQUENTLY,  TO GENERATE THE INITIAL@D@@@@. VALUES THROUGH THE USE OF ONQP
)@@G@@E OF THE PROCS BELOW.   @[@@@@.     @ @@@@. THE PROCS ARE AS FOLLOWS:   QQ
)@@G@@@[@@@@.     @#@@@@.           BASE$ @[@@@@.     @F@@@@.                 QR
)@@G@@  CALL THIS PROC TO DEFINE ALL OF THE OTHERS.   @[@@@@.     @[@@@@.     QS
)@@G@@@B@@@@. <LABEL>   BASE    <BASE ADDR>,<XREG>    @[@@@@.     @G@@@@.     QT
)@@G@@              THE  <LABEL>,  IF  GIVEN,  IS  EQUF'ED   TO    <BASE@G@@@@QU
)@@G@@.                   ADDR>,<XREG>.  IF  NO SPECIFICATION APPEARS, THE THEQV
)@@G@@@G@@@@.                   <LABEL>, IF GIVEN, IS EQUF'ED TO THE  CURRENT QW
)@@G@@ VALUE@G@@@@.                   OF  THE  LOCATION COUNTER, AND THE CURREQX
)@@G@@NT BASE WILL@G@@@@.                   HAVE AUTOMATIC STORAGE ALLOCATION QY
)@@G@@ENABLED. THAT  IS,@G@@@@.                   AS  NEW  WORDS ARE DEFINED IQZ
)@@G@@N THE BASE, THEY WILL BE@G@@@@.                   AUTOMATICALLY ALLOCATERA
)@@G@@D UNDER THE  CURRENT  LOCATION@ @@@@.                   COUNTER.  @[@@@@RB
)@@G@@.     @A@@@@. <LABEL>   WORD    <INITIAL VALUE> @[@@@@.     @G@@@@.     RC
)@@G@@              THE  <LABEL>,  IF  GIVEN,  IS EQUF'ED TO THE CURRENT@G@@@@RD
)@@G@@.                   WORD IN THE DATA BASE, THEN THE ADDRESS  COUNTER  ISRE
)@@G@@@G@@@@.                   ADVANCED  TO  THE NEXT WORD. <INITIAL VALUE> WRF
)@@G@@ILL BE@E@@@@.                   USED AS THE INITIAL VALUE FOR THIS WORD.RG
)@@G@@@[@@@@.     @A@@@@. <LABEL>   DWORD   <INITIAL VALUE> @[@@@@.     @G@@@@RH
)@@G@@.                   THE  <LABEL>,  IF  GIVEN,  IS EQUF'ED TO THE CURRENTRI
)@@G@@@G@@@@.                   WORD IN THE DATA BASE, THEN THE ADDRESS  COUNTRJ
)@@G@@ER  IS@F@@@@.                   ADVANCED BY TWO. INITIALIZATION IS ALLOWRK
)@@G@@ED.   @[@@@@.     @B@@@@. <LABEL>   FIELD   <PW>,<INITIAL VALUE>  @[@@@@RL
)@@G@@.     @G@@@@.                   THE  <LABEL>,  IF GIVEN, IS EQUF'ED TO TRM
)@@G@@HE PARTITION@G@@@@.                   DEFINED   BY  THE  <PW>,  WHICH  IRN
)@@G@@S  A  1100  SERIES@G@@@@.                   J-DESIGNATOR VALUE OF 0 THRORO
)@@G@@UGH 017, AT THE  CURRENT@G@@@@.                   WORD  IN  THE  DATA  BRP
)@@G@@ASE.  <INITIAL  VALUE> WILL BE@G@@@@.                   PLACED INTO THE RQ
)@@G@@DEFINED FIELD.  SINCE  THERE  IS  AN@G@@@@.                   AMBIGUITY RR
)@@G@@ IN  THE  ASSIGNMENT OF VALUES TO QUARTER-@G@@@@.                   AND RS
)@@G@@THIRD-WORD  MNEMONICS,  IF  <INITIAL  VALUE>  IS@G@@@@.                 RT
)@@G@@  STARRED,  IT  IS  ASSUMED  TO  BE   A    THIRD-WORD,@E@@@@.           RU
)@@G@@        OTHERWISE, A QUARTER-WORD IS ASSUMED.   @[@@@@.     @H@@@@. <LABRV
)@@G@@EL>   AREA    <NUMBER OF WORDS> <INITIAL VALUE> <INITIAL VALUE> ...     RW
)@@G@@@[@@@@.     @G@@@@.                   THE  <LABEL>,  IF  GIVEN,  IS EQUFRX
)@@G@@'ED TO THE CURRENT@G@@@@.                   WORD IN THE DATA BASE, THEN RY
)@@G@@THE  DATA  BASE  ADDRESS@G@@@@.                   COUNTER  IS  ADVANCED RZ
)@@G@@BY <NUMBER OF WORDS>. THE LIST@G@@@@.                   OF INITIAL VALUESA
)@@G@@S  WILL  BE  USED  TO  GENERATE  THE@G@@@@.                   STORAGE.  SB
)@@G@@EACH  FIELD  OF  INITIALIZATION  MAY    BE@G@@@@.                   SUBDSC
)@@G@@IVIDED  TO  GENERATE  SUBFIELDS  WITHIN THE WORD@A@@@@.                 SD
)@@G@@  INITIALIZED.    @[@@@@.     @#@@@@. <LABEL>   LENGTH@[@@@@.     @G@@@@SE
)@@G@@.                   THE <LABEL>, WHICH MUST BE PRESENT, IS EQU'ED TO THESF
)@@G@@@G@@@@.                   CURRENT  DATA  BASE  ADDRESS  COUNTER,   WHICHSG
)@@G@@    IS@G@@@@.                   EQUIVILENT TO THE LENGTH OF THE DEFINED SH
)@@G@@DATA BASE.  @[@@@@.     @G@@@@. THE  FOLLOWING  SET  OF PROCS NOT ONLY ASI
)@@G@@SSIGN REFERENCES TO PARTWORDS,@G@@@@. BUT ALSO ALLOCATE THE PARTICULAR PSJ
)@@G@@ARTWORD NEEDED,  IN  A  SEMI-OPTIMAL@G@@@@. FASHION. FIELD ALLOCATION ANSK
)@@G@@D PLACEMENT WILL BE OPTIMAL AT THE EXPENSE@G@@@@. OF  A  POSSIBLE EXTRA SL
)@@G@@WORD. THE PROCS ALLOCATE FIELDS ACCORDING TO THE@G@@@@. STANDARD 1100 SESM
)@@G@@RIES PARTWORDS: SIXTHS, THIRDS, QUARTERS, HALVES,  AND@G@@@@. SIGNED HALSN
)@@G@@VES. PARTWORDS WILL BE ALLOCATED SUCH THAT NO 'HOLE' BETWEEN@G@@@@. ANY SO
)@@G@@ALLOCATED PARTWORDS WILL EVER BE CREATED THAT CONTAINS LESS THAN 6@G@@@@SP
)@@G@@. BITS.  NOTE  THAT WHEN USING THESE PROCS, THE BASE WORD COUNTER MAY BESQ
)@@G@@@G@@@@. INCREMENTED IN THE PROCESS OF ALLOCATING ANOTHER  PARTWORD,  ANDSR
)@@G@@  THAT@G@@@@. THE  USE  OF  THE  'FIELD'  PROC, EXPECTING THE BASE WORD SS
)@@G@@COUNTER AT A@B@@@@. CERTAIN POSITION, MAY BE ERRONEOUS.     @[@@@@.     ST
)@@G@@@A@@@@. <LABEL>   SIXTH   <INITIAL VALUE> @[@@@@.     @G@@@@.           SU
)@@G@@        THE  <LABEL>,  IF GIVEN, IS ASSIGNED TO AN ALLOCATED@F@@@@.     SV
)@@G@@              SIXTH WORD, WITH A POSSIBLE <INITIAL VALUE>.  @[@@@@.     SW
)@@G@@@A@@@@. <LABEL>   QTR     <INITIAL VALUE> @[@@@@.     @G@@@@.           SX
)@@G@@        THE  <LABEL>,  IF GIVEN, IS ASSIGNED TO AN ALLOCATED@F@@@@.     SY
)@@G@@              QUARTER WORD, WITH A POSSIBLE <INITIAL VALUE>.@[@@@@.     SZ
)@@G@@@A@@@@. <LABEL>   THIRD   <INITIAL VALUE> @[@@@@.     @G@@@@.           TA
)@@G@@        THE  <LABEL>,  IF GIVEN, IS ASSIGNED TO AN ALLOCATED@F@@@@.     TB
)@@G@@              THIRD WORD, WITH A POSSIBLE <INITIAL VALUE>.  @[@@@@.     TC
)@@G@@@A@@@@. <LABEL>   HALF    <INITIAL VALUE> @[@@@@.     @G@@@@.           TD
)@@G@@        THE  <LABEL>,  IF GIVEN, IS ASSIGNED TO AN ALLOCATED@F@@@@.     TE
)@@G@@              HALF WORD, WITH A POSSIBLE <INITIAL VALUE>.   @[@@@@.     TF
)@@G@@@A@@@@. <LABEL>   XHALF   <INITIAL VALUE> @[@@@@.     @G@@@@.           TG
)@@G@@        THE  <LABEL>,  IF GIVEN, IS ASSIGNED TO AN ALLOCATED@G@@@@.     TH
)@@G@@              HALF WORD, WITH  SIGN  EXTENSION,  WITH  A  POSSIBLE@A@@@@TI
)@@G@@.                   <INITIAL VALUE>.@[@@@@.     @^@@@@. <LABEL>   ENDBASTJ
)@@G@@E     @[@@@@.     @G@@@@.                   THIS  PROC MUST BE CALLED TOTK
)@@G@@ END THE DEFINITION OF A@G@@@@.                   PARTICULAR BASE, IF  ITL
)@@G@@T  IS  BASED  ON  THE  CURRENT@G@@@@.                   LOCATION  COUNTETM
)@@G@@R  WITH  AUTOMATIC  ALLOCATION   AND@G@@@@.                   INITIALIZATN
)@@G@@TION,  IN  ORDER  TO  DEFINE  THE  STORAGE@G@@@@.                   ALLOTO
)@@G@@CATED. IF <LABEL> IS GIVEN, IT IS DEFINED  AS  A@G@@@@.                 TP
)@@G@@  PROC  THAT  WILL GENERATE THE INITIAL VALUES FOR THE@G@@@@.           TQ
)@@G@@        BASE DEFINED, SO THAT THE DATA MAY BE  GENERATED  AT@G@@@@.     TR
)@@G@@              THE  USER'S  DISCRETION.  IF,  HOWEVER,  THE BASE IS@G@@@@TS
)@@G@@.                   DEFINED AS BEING BASED  UPON  THE  CURRENT  LOCATIONTT
)@@G@@@G@@@@.                   COUNTER,  THE  DATA  WILL  ALWAYS  BE    IMMEDTU
)@@G@@IATELY@G@@@@.                   GENERATED  AT  THE CORRECT POSITION. USITV
)@@G@@NG A <LABEL>@G@@@@.                   IS USEFUL FOR DEFINING INITIAL VALTW
)@@G@@UES FOR STRUCTURES@G@@@@.                   BASED UPON AN INDEX REGISTERTX
)@@G@@, FOR EXAMPLE. ALSO,  IF@G@@@@.                   ANY UNUSED FIELDS ARE TY
)@@G@@PRESENT THEY WILL BE DISPLAYED@C@@@@.                   FOR DIAGNOSTIC PTZ
)@@G@@URPOSES.    @[@@@@.     @[@@@@.     @B@@@@. ALAN STEBBENS, YFNSS UOMCSC,UA
)@@G@@ 03/07/78   @^@@@@. LAST UPDATE 02/13/79  @[@@@@.     @G@]@@. NOTE: THE UB
)@@G@@ELEMENTS 'EQU$' AND 'FUNCS' MUST BE INCLUDED PRIOR TO THE   @^@]@@. USAGUC
)@@G@@E OF THESE PROCS. @[@@@@.     @^@@@@P         $PROC     *1  @#@@@@BASE* UD
)@@G@@    $NAME   @B@@@]          $LEVEL    ,$LEV-1               @F@@@@      UE
)@@G@@    $IF       NRI(B$$T)=1       . IS THIS AN UNDEFINED ITEM?@G@]@@B$$T  UF
)@@G@@    DELETE$,0                   . REMOVE THE LEVEL ZERO DEFINITION@G@@@]UG
)@@G@@B$$T*     $DELETE                     . REMOVE THE LEVEL ZERO DEFINITIONUH
)@@G@@@E@]@@B$$T      EQU$      $NODE             . INITIALIZE THE TREE @E@@@]UI
)@@G@@B$$T      $EQU      $NODE             . INITIALIZE THE TREE @#@@@@      UJ
)@@G@@    $ENDF   @G@]@@B$$       EQU$      B$$T=0->1!1+$NS(B$$T,B$$T) . GET TUK
)@@G@@HE NEXT SELECTOR  @G@@@]B$$       $EQU      B$$T=0->1!1+$NS(B$$T,B$$T) .UL
)@@G@@ GET THE NEXT SELECTOR  @[@@@@.     @ @@@@. NOW BUILD THE BASE TREE     UM
)@@G@@@ @@@@. B$$T(B$$,1) = BASE ADDRESS  @A@@@@.          2) = BASE X REGISTEUN
)@@G@@R     @H@@@@.          3) = LIST, INDEXED BY WORD OFFSET IN BASE, OF INIUO
)@@G@@TIALIZATION VALUES@[@@@@.     @E@]@@B$$IF     EQU$      P(1)=0          UP
)@@G@@  . INITIALIZATION FLAG @E@@@]B$$IF     $EQU      P(1)=0            . INUQ
)@@G@@ITIALIZATION FLAG @D@]@@B$$A      EQU$      B$$IF->$!P(1,1)   . BASE ADDUR
)@@G@@RESS  @D@@@]B$$A      $EQU      B$$IF->$!P(1,1)   . BASE ADDRESS  @C@]@@US
)@@G@@B$$X      EQU$      B$$IF->0!P(1,2)   . X REG   @C@@@]B$$X      $EQU    UT
)@@G@@  B$$IF->0!P(1,2)   . X REG   @F@]@@B$$T(B$$,1) EQU$    B$$A            UU
)@@G@@  . POST THE BASE ADDRESS     @F@@@]B$$T(B$$,1) $EQU    B$$A            UV
)@@G@@  . POST THE BASE ADDRESS     @D@]@@B$$T(B$$,2) EQU$    B$$X            UW
)@@G@@  . POST THE X REG@D@@@]B$$T(B$$,2) $EQU    B$$X              . POST THEUX
)@@G@@ X REG@H@]@@B$$T(B$$,3) EQU$    $NODE             . INITIALIZE LIST OF IUY
)@@G@@NITIAL VALUES     @H@@@]B$$T(B$$,3) $EQU    $NODE             . INITIALIUZ
)@@G@@ZE LIST OF INITIAL VALUES     @E@]@@B$$C      EQU$      0               VA
)@@G@@  . BASE ADDRESS COUNTER@E@@@]B$$C      $EQU      0                 . BAVB
)@@G@@SE ADDRESS COUNTER@E@]@@B$$I      EQU$      0                 . CURRENT VC
)@@G@@INCREMENT   @E@@@]B$$I      $EQU      0                 . CURRENT INCREMVD
)@@G@@ENT   @H@]@@B$$AVPW   EQU$      $NODE             . INITIALIZE LIST OF AVE
)@@G@@VAILABLE PARTWORDS@H@@@]B$$AVPW   $EQU      $NODE             . INITIALIVF
)@@G@@ZE LIST OF AVAILABLE PARTWORDS@D@@@]          $LEVEL                    VG
)@@G@@  . BACK TO NORMAL@ @@@@          $IF       $LF(1)>0  @ @@@@B         $EVH
)@@G@@QUF     B$$A,B$$X @E@@@@*         $EQU      B                 . DEFINE TVI
)@@G@@HE LABEL    @B@@@@          $DO       $LEV=2 , $DISPLAY B   @#@@@@      VJ
)@@G@@    $ENDF   @D@@@@          $END                        . OF BASE PROC  VK
)@@G@@@[@@@@.     @[@@@@.     @^@@@@P         $PROC     *1  @^@@@@WORD*     $NVL
)@@G@@AME     1   @^@@@@DWORD*    $NAME     2   +@@@@[@B@]@@^@)^@)^@)^@)^@)^-GVM
)@@G@@C(QC(G^@)^@)A@?^-GC(Q )0+@@@@@@ @@@]          $LEVEL    ,$LEV-1   @E@]@@VN
)@@G@@B$$C      EQU$      B$$C+B$$I         . BUMP ADDRESS COUNTER@E@@@]B$$C  VO
)@@G@@    $EQU      B$$C+B$$I         . BUMP ADDRESS COUNTER@E@]@@B$$I      EQVP
)@@G@@U$      P(0,0)            . POST NEW INCREMENT  @E@@@]B$$I      $EQU    VQ
)@@G@@  P(0,0)            . POST NEW INCREMENT  @B@@@]          $LEVEL        VR
)@@G@@                  @D@@@@          $IF       $LF(1)>0          . ANY LABEVS
)@@G@@L?    @A@@@@B         $EQUF     B$$A+B$$C,B$$X  @E@@@@*         $EQU    VT
)@@G@@  B                 . DEFINE THE LABEL    @A@@@@          $DO $LEV=2 , $VU
)@@G@@DISPLAY B   @#@@@@          $ENDF   @E@@@@          $IF       P(1)>0    VV
)@@G@@        . INITIALIZATION?     @ @@@@V         $EQU      '$GFORM ' @H@@@@VW
)@@G@@B         $EQU      $CD((B$$I=1->36!72)/P(1)) . COMPUTE # BITS PER SUBFIVX
)@@G@@ELD   @E@@@@I         $DO       P(1) ,;           . FOR EVERY SUBFIELD  VY
)@@G@@@D@@@@V         $EQU      V:(I>1->','):B:',P(1,':$CD(I):')' @G@@@@V     VZ
)@@G@@    $EQU      +([V])            . CREATE A WORD WITH SUBFIELDS    @B@@@]WA
)@@G@@          $LEVEL    ,$LEV-1               @F@]@@B$$T(B$$,3,B$$C) EQU$ V WB
)@@G@@              . INITIALIZE WITH THE VALUE @F@@@]B$$T(B$$,3,B$$C) $EQU V WC
)@@G@@              . INITIALIZE WITH THE VALUE @#@@@@          $ENDF   @E@@@@WD
)@@G@@          $END                        . OF WORD\DWORD PROC  @[@@@@.     WE
)@@G@@@[@@@@.     @^@@@@P         $PROC     *1  @#@@@@FIELD*    $NAME   @E@@@@WF
)@@G@@PW        $EQU      P(1,1)            . PARTWORD DEFINITION @F@@@@      WG
)@@G@@    $IF       \0<=PW<=017       . INSIDE ALLOWED RANGE?     @G@@@@      WH
)@@G@@    $DISPLAY  *'ILLEGAL PARTWORD DEDESIGNATOR VALUE: ':$CB(PW)    @#@@@@WI
)@@G@@          $ENDF   @ @@@@          $IF       $LF(1)>0  @B@@@@B         $EWJ
)@@G@@QUF     B$$A+B$$C,B$$X,PW     @E@@@@*         $EQU      B               WK
)@@G@@  . DEFINE THE LABEL    @A@@@@          $DO $LEV=2 , $DISPLAY B   @#@@@@WL
)@@G@@          $ENDF   @E@@@@          $IF       P(1)>1            . INITIALIWM
)@@G@@ZATION?     @D@@@@          $IF       $LP               . AND LAST PASS?WN
)@@G@@@A@@@@PW        $EQU      [P(1,*2)->'*']PW@F@@@@V         $EQU      +($GWO
)@@G@@FORM 35-HB(PW),0,FS(PW),P(1,2),LB(PW),0)  @#@@@@          $ELSE   @H@@@@WP
)@@G@@V         $EQU      0                 . DON'T USE ANY REAL VALUES ON PASWQ
)@@G@@S1    @#@@@@          $ENDF   @F@]@@B$$T(B$$,3,B$$C) EQU$ B$$T(B$$,3,B$$WR
)@@G@@C)+V . DEFINE INITIAL CONST   @B@@@]          $LEVEL    ,$LEV-1         WS
)@@G@@      @F@@@]B$$T(B$$,3,B$$C) $EQU B$$T(B$$,3,B$$C)+V . DEFINE INITIAL COWT
)@@G@@NST   @#@@@@          $ENDF   @D@@@@          $END                      WU
)@@G@@  . OF FIELD PROC @[@@@@.     @[@@@@.     @^@[@@P         $PROC     *1  WV
)@@G@@@^@@@[P         $PROC     *2  @#@@@@AREA*     $NAME   @B@@@]          $LWW
)@@G@@EVEL    ,$LEV-1               @E@]@@B$$C      EQU$      B$$C+B$$I       WX
)@@G@@  . BUMP ADDRESS COUNTER@E@@@]B$$C      $EQU      B$$C+B$$I         . BUWY
)@@G@@MP ADDRESS COUNTER@E@]@@B$$I      EQU$      P(1,1)            . POST NEWWZ
)@@G@@ INCREMENT  @E@@@]B$$I      $EQU      P(1,1)            . POST NEW INCREXA
)@@G@@MENT  @#@@@]          $LEVEL  @D@@@@          $IF       $LF(1)>0        XB
)@@G@@  . LABEL DEFINED?@A@@@@B         $EQUF     B$$A+B$$C,B$$X  @E@@@@*     XC
)@@G@@    $EQU      B                 . DEFINE THE LABEL    @E@@@@          $DXD
)@@G@@O $LEV=2 , $DISPLAY B     . SHOW THE OCTAL ALSO @#@@@@          $ENDF   XE
)@@G@@@E@@@@I         $REPEAT   2,P-1             . SAVE ALL VALUES     @F@@@@XF
)@@G@@A         EQU       'P(I,1)'          . DEFINE THE FIRST ITEM     @G@@@@XG
)@@G@@J         $DO       2,P(I) ,;         . APPEND THE OTHER SUBFIELDS TOO  XH
)@@G@@@F@@@@A         EQU       A:',P(I,':$CD(J):')' . APPEND ANOTHER SUBFIELDXI
)@@G@@@H@@@@          $DO       P(I)>1 ,;         . IF THERE'S MORE THAN ONE SXJ
)@@G@@UBFIELD     @F@@@@A         EQU       '+(':A:')'        . CREATE A FORM XK
)@@G@@GENERATOR   @F@]@@B$$T(B$$,3,B$$C+I-2) EQU$ [A]         . STASH INTO THEXL
)@@G@@ BASE TREE  @ @@@]          $LEVEL    ,$LEV-1   @F@@@]B$$T(B$$,3,B$$C+I-XM
)@@G@@2) $EQU [A]         . STASH INTO THE BASE TREE  @#@@@]          $LEVEL  XN
)@@G@@@D@@@@          $ENDR                       . KEEP DOING IT @D@@@@      XO
)@@G@@    $END                        . OF AREA PROC  @[@@@@.     @[@@@@.     XP
)@@G@@@^@@@@P         $PROC     *0  @#@@@@LENGTH*   $NAME   @A@@@@          $DXQ
)@@G@@O       $LF(1)>0 ,;     @E@@@@*         $EQU      B$$C+B$$I         . DEXR
)@@G@@FINE THE LABEL    @C@@@@          $DO       $LEV=2 , $DISPLAY B$$C+B$$I XS
)@@G@@@E@@@@          $END                        . END OF LENGTH PROC  @[@@@@XT
)@@G@@/.    @A@@@@. PARTIAL WORD ALLOCATION PROCS     @A@@@@. THIS IS NIFTY STXU
)@@G@@UFF, SO WATCH     @[@@@@.     @C@@@@. B$$AVPW(<FIELD SIZE>,<FIELD>,<WORDXV
)@@G@@ INDEX>)    @[@@@@.     @E@@@@. THIS TABLE IS USED TO MAINTAIN AND ORDERXW
)@@G@@ THE AVAILABLE    @]@@@@. PARTWORDS.@[@@@@.     @^@@@@P         $PROC   XX
)@@G@@  *1  @^@@@@SIXTH*    $NAME     6   @^@@@@QTR*      $NAME     9   @^@@@@XY
)@@G@@THIRD*    $NAME     12  @^@@@@HALF*     $NAME     18  @^@@@@XHALF*    $NXZ
)@@G@@AME     *18 @[@@@@.     @F@@@@B         $EQU      P(0,0)            . SEYA
)@@G@@T TO # OF BITS REQUIRED @E@@@@FOUND     $EQU      0                 . CLYB
)@@G@@EAR FIND FLAG     @G@@@@I         $REPEAT   B$$AVPW           . LOOK THRYC
)@@G@@OUGH LIST OF PARTWORDS  @F@@@@PWS       $EQU      $NS(B$$AVPW,I)    . GEYD
)@@G@@T THE NEXT SELECTOR     @I@@@@          6>PWS-B<>0->$ENDR           . IFYE
)@@G@@ NEW FIELD WILL LEAVE TOO SMALL A HOLE    @G@@@@                        YF
)@@G@@              . OR WON'T FIT THEN LOOK SOME MORE@G@@@@J         $REPEAT YG
)@@G@@  B$$AVPW(PWS)      . LOOK THROUGH LIST OF FIELD DEFNS@E@@@@PWD       $EYH
)@@G@@QU      $NS(B$$AVPW(PWS),J) . GET THE NEXT FIELD@F@@@@PWB       $EQU    YI
)@@G@@  HB(PWD)+1         . GET PARTWORD BOUNDARY     @H@@@@          PWS/B<2-YJ
)@@G@@>PWB///B>0->$ENDR   . LOOP IF PARTWORD ALIGNMENT IS WRONG   @G@@@@PWWX  YK
)@@G@@    $EQU      $NS(B$$AVPW(PWS,PWD),1) . GET THE CORRESPONDING WORD@D@@@@YL
)@@G@@FOUND     $EQU      1                 . SET FOUND FLAG@#@@@@          $EYM
)@@G@@NDI   @E@@@@          $ENDR                       . END OF REPEAT BLOCK YN
)@@G@@@G@@@@          FOUND->$ENDI                . IF WE FOUND A PARTWORD, QUYO
)@@G@@IT    @E@@@@          $ENDR                       . END OF REPEAT BLOCK YP
)@@G@@@[@@@@.     @F@@@@. IF FOUND IS SET, WE HAVE A LEFTOVER FIELD READY TO AYQ
)@@G@@LLOCATE;    @F@@@@. IF FOUND IS NOT SET, WE MUST ALLOCATE A NEW WORD ANDYR
)@@G@@ LET THE    @A@@@@. SUBSEQUENT CODE BREAK IT APART.   @[@@@@.     @H@@@@YS
)@@G@@          $IF       \FOUND            . IF NO PARTWORD FOUND THEN ALLOCAYT
)@@G@@TE ONE@ @@@]          $LEVEL    ,$LEV-1   @F@]@@B$$C      EQU$      B$$CYU
)@@G@@+B$$I         . BUMP THE ADDRESS COUNTER  @F@@@]B$$C      $EQU      B$$CYV
)@@G@@+B$$I         . BUMP THE ADDRESS COUNTER  @E@]@@B$$I      EQU$      1   YW
)@@G@@              . ACQUIRE ANOTHER WORD@E@@@]B$$I      $EQU      1         YX
)@@G@@        . ACQUIRE ANOTHER WORD@#@@@]          $LEVEL  @E@@@@PWD       $EYY
)@@G@@QU      FLD(35,0)         . THIS IS OUR FIELD   @D@@@@PWS       $EQU    YZ
)@@G@@  36                . FIELD SIZE    @D@@@@PWB       $EQU      36        ZA
)@@G@@        . BOUNDARY BIT  @E@@@@PWWX      $EQU      B$$C              . PAZB
)@@G@@RTWORD WORD INDEX @ @@@]          $LEVEL    ,$LEV-1   @D@]@@B$$AVPW(PWS,ZC
)@@G@@PWD,PWWX) EQU$ 0          . DEFINE IT     @D@@@]B$$AVPW(PWS,PWD,PWWX) $EZD
)@@G@@QU 0          . DEFINE IT     @#@@@]          $LEVEL  @B@@@@          $EZE
)@@G@@NDF                       .   @[@@@@.     @E@@@@. AT THIS POINT, THE FOLZF
)@@G@@LOWING VARIABLES ARE IMPORTANT:     @A@@@@.  PWS = PART WORD SIZE IN BITZG
)@@G@@S     @ @@@@.  PWD = PART WORD DEFINITION @ @@@@.  PWWX = PART WORD WORDZH
)@@G@@ INDEX@A@@@@.  PWB = PART WORD BOUNDARY (PWHB+1)@[@@@@.     @F@@@@PWI   ZI
)@@G@@    $EQU      PWB/B             . GET INDEX INTO PARTWORD   @ @@@]      ZJ
)@@G@@    $LEVEL    ,$LEV-1   @G@]@@B$$AVPW(PWS,PWD,PWWX) DELETE$         . DEZK
)@@G@@LETE THE CURRENT DEFINITION   @G@@@]B$$AVPW(PWS,PWD,PWWX) $DELETE       ZL
)@@G@@  . DELETE THE CURRENT DEFINITION   @H@@@@          $DO       B$$AVPW(PWZM
)@@G@@S,PWD)=0 ,; . IF IT WAS LAST, DELETE FIELD INDEX@E@]@@B$$AVPW(PWS,PWD) DZN
)@@G@@ELETE$              . REMOVE FIELD INDEX  @E@@@]B$$AVPW(PWS,PWD) $DELETEZO
)@@G@@              . REMOVE FIELD INDEX  @H@@@@          $DO       B$$AVPW(PWZP
)@@G@@S)=0 ,; . IF FIELD WAS LAST, REMOVE IT ALSO     @G@]@@B$$AVPW(PWS) DELETZQ
)@@G@@E$                  . REMOVE FIELD SIZE SUBSCRIPT     @G@@@]B$$AVPW(PWS)ZR
)@@G@@ $DELETE                  . REMOVE FIELD SIZE SUBSCRIPT     @#@@@]      ZS
)@@G@@    $LEVEL  @G@@@@          $IF       6>PWS///B<>0      . DOES IT LEAVE ZT
)@@G@@AN UNUSABLE HOLE? @G@@@@PWI       $EQU      PWI-1             . YES - USZU
)@@G@@E NEXT PARTWORD DOWN    @B@@@@          $ENDF                       .   ZV
)@@G@@@G@@@@PWHB      $EQU      PWI*B-1           . HIGH BIT OF ALLOCATED PARTZW
)@@G@@WORD  @G@@@@PWLB      $EQU      PWHB-B+1          . LOW BIT OF ALLOCATEDZX
)@@G@@ PARTWORD   @F@@@@          $IF       PWS>B             . ANY LEFTOVER PZY
)@@G@@ARTWORDS?   @F@@@@          $DO       HB(PWD)>PWHB , ;  . IF THERE IS ROZZ
)@@G@@OM ABOVE,   @H@@@@          B$$NPW    PWWX,HB(PWD),PWHB+1 . MAKE A NEW PAA
)@@G@@ARTWORD FIELD AVAILABLE @F@@@@          $DO       PWLB>LB(PWD) , ;  . IFAB
)@@G@@ THERE IS ROOM BELOW    @H@@@@          B$$NPW    PWWX,PWLB-1,LB(PWD) . AC
)@@G@@MAKE A NEW PARTWORD FIELD AVAILABLE @B@@@@          $ENDF               AD
)@@G@@        .   @[@@@@.     @ @@@@. FINALLY, WE HAVE A PARTWORD @[@@@@.     AE
)@@G@@@E@@@@          $IF       P(1)>0            . INITIALIZATION?     @I@@@@AF
)@@G@@V         $EQU      $LP=0->0!+($GFORM 35-PWHB,0,B,P(1,1),PWLB,0) . PUT VAG
)@@G@@ALUE IN     @ @@@]          $LEVEL    ,$LEV-1   @E@]@@B$$T(B$$,3,PWWX) EAH
)@@G@@QU$ B$$T(B$$,3,PWWX)+V . ADD IN OUR VALUE @E@@@]B$$T(B$$,3,PWWX) $EQU B$AI
)@@G@@$T(B$$,3,PWWX)+V . ADD IN OUR VALUE @#@@@]          $LEVEL  @#@@@@      AJ
)@@G@@    $ENDF   @D@@@@          $IF       $LF(1)>0          . LABEL GIVEN?  AK
)@@G@@@F@@@@A         $EQUF     PWWX+B$$A,B$$X,B$$PW(B+P(0,*0),PWI) . CREATE  AL
)@@G@@@^@@@@*         $EQU      A   @A@@@@          $DO $LEV=2 , $DISPLAY A   AM
)@@G@@@#@@@@          $ENDF   @E@@@@          $END                        . OFAN
)@@G@@ ALLOCATION PROC  @[@@@@.     @C@@@@. A SUBROUTINE PROC TO DEFINE NEW PAAO
)@@G@@RTWORDS     @[@@@@.     @^@@@@P         $PROC     *1  @#@@@@B$$NPW*   $NAP
)@@G@@AME   @E@@@@F         $EQU      FLD(P(1,2),P(1,3)) . FIELD DEFINITION   AQ
)@@G@@@ @@@]          $LEVEL    ,$LEV-1   @G@]@@B$$AVPW(FS(F),F,P(1,1)) EQU$ 0AR
)@@G@@        . ADD THE NEW FIELD TO THE LIST   @G@@@]B$$AVPW(FS(F),F,P(1,1)) AS
)@@G@@$EQU 0        . ADD THE NEW FIELD TO THE LIST   @#@@@@          $END    AT
)@@G@@@[@@@@.     @^@@@@. TABLE OF PARTWORDS    @[@@@@.     @D@@@@B$$PW(6)  EQAU
)@@G@@U       $L1(S6,S5,S4,S3,S2,S1) . SIXTHS   @C@@@@B$$PW(9)  EQU       $L1(AV
)@@G@@Q4,Q3,Q2,Q1)  . QUARTERS@C@@@@B$$PW(12) EQU       $L1(T3,T2,T1)     . THAW
)@@G@@IRDS  @C@@@@B$$PW(18) EQU       $L1(H2,H1)        . HALVES  @E@@@@B$$PW(AX
)@@G@@19) EQU       $L1(XH2,XH1)      . EXTENDED HALVES     @[@@@@.     @^@@@@AY
)@@G@@. END OF BASE DEFINITION@[@@@@.     @^@@@@P         $PROC     *0  @#@@@@AZ
)@@G@@ENDBASE*  $NAME   @G@@@@          $DO       B$$IF->$LF(1)>0 ,; . IF THERBA
)@@G@@E'S A WAITING LABEL     @H@@@@*         $EQU      /$NIL             . NUBB
)@@G@@LLIFY IT SO IT WON'T CAUSE ERRORS   @[@@@@.     @E@@@@. IF ANY UNALLOCATBC
)@@G@@ED FIELDS LEFT, DISPLAY THEM TO THE USER  @[@@@@.     @E@@@@          $IBD
)@@G@@F       $LEV=2->B$$AVPW>0 . ANY FIELDS LEFT     @G@@@@          $DISPLAYBE
)@@G@@  'THE FOLLOWING FIELDS HAVE NOT BEEN ALLOCATED:'     @F@@@@I         $RBF
)@@G@@EPEAT   B$$AVPW           . LOOK THROUGH ALL WORDS    @E@@@@PWS       $EBG
)@@G@@QU      $NS(B$$AVPW,I)    . GET PARTWORD SIZE   @H@@@@J         $REPEAT BH
)@@G@@  B$$AVPW(PWS)      . LOOP THROUGH ALL FIELDS THIS SIZE     @E@@@@PWD   BI
)@@G@@    $EQU      $NS(B$$AVPW(PWS),J) . GET THE NEXT FIELD@D@@@@K         $RBJ
)@@G@@EPEAT   B$$AVPW(PWS,PWD)  . FOR ALL WORDS @E@@@@PWWX      $EQU      $NS(BK
)@@G@@B$$AVPW(PWS,PWD),K) . GET WORD INDEX@H@@@@          $DISPLAY  '  ':$CD(PBL
)@@G@@WS):' BITS (':$CD(HB(PWD)):'-':$CD(LB(PWD)):;   @C@@@@                  BM
)@@G@@  ') WORD ':EDITV(B$$A+PWWX)  @#@@@@          $ENDR   @#@@@@          $EBN
)@@G@@NDR   @#@@@@          $ENDR   @E@@@@          $ENDF                     BO
)@@G@@  . END OF DISPLAY STUFF@[@@@@.     @F@@@@. IF THE USER HAS A WAITING LABP
)@@G@@BEL, DEFINE IT AS THE PROC LABEL FOR@F@@@@. OUR PROC THAT FOLLOWS, SO THBQ
)@@G@@AT THE VALUES MAY BE DUMPED AT HIS  @F@@@@. DISCRETION. OTHERWISE, IF AUBR
)@@G@@TO-ALLOCATION IS BEING PERFORMED    @B@@@@. THEN DUMP THE VALUES, OR SIMBS
)@@G@@PLY QUIT.   @[@@@@.     @G@@@@          $IF       B$$IF=0->$LF(1)=0 . IFBT
)@@G@@ NO LABEL AND NO AUTO ALLOC   @ @@@]          $LEVEL    ,$LEV-1   @G@]@@BU
)@@G@@B$$T(B$$) DELETE$                     . TRIM THE BASE TREE OF GARBAGE   BV
)@@G@@@G@@@]B$$T(B$$) $DELETE                     . TRIM THE BASE TREE OF GARBBW
)@@G@@AGE   @C@@@@          1->$END                     . QUIT    @#@@@@      BX
)@@G@@    $ENDF   @E@@@@PL        EQU       'B$$P*'           . GET A DEFAULT BY
)@@G@@LABEL @F@@@@B$$P      EQU       /$NIL             . DEFINE THE DEFAULT LBZ
)@@G@@ABEL  @F@@@@          $DO       $LF(1)>0 ,;       . IS THERE A WAITING LCA
)@@G@@ABEL? @I@@@@PL        EQU       '*'               . USE THE WAITING LABECB
)@@G@@L AS THE PROC LABEL     @[@@@@.     @B@@@@. NOW DEFINE THE PROC TO DUMP CC
)@@G@@THE VALUES  @[@@@@.     @C@@@@P         $PROC     *0                . A CD
)@@G@@PROC  @#@@@@[%1:PL]   $NAME   @F@@@@B$$C      $EQU      [%1:$CD(B$$C+B$$CE
)@@G@@I)] . DEFINE THE CURRENT LIMIT@G@@@@B$$       $EQU      [%1:$CD(B$$)]   CF
)@@G@@  . DEFINE THE CURRRENT BASE INDEX  @H@@@@LCB       $EQU      $         CG
)@@G@@        . CAPTURE THE CURRENT VALUE OF THE LC   @D@@@@I         $REPEAT CH
)@@G@@  B$$T(B$$,3)       . DUMP THE TREE @F@@@@IX        $EQU      $NS(B$$T(BCI
)@@G@@$$,3),I) . GET THE NEXT WORD INDEX  @H@@@@          $RES      IX-($-LCB)CJ
)@@G@@        . FILL GAP BETWEEN LAST GEN AND THIS ON @E@@@@          $GEN    CK
)@@G@@  B$$T(B$$,3,IX)    . OUTPUT THE WORD(S)  @B@@@@          $ENDR         CL
)@@G@@              .   @E@@@@          $RES      B$$C-($-LCB)      . FINAL ALCM
)@@G@@LOCATION    @G@@@@%1:       $IF       \($LF(1)>0->$LP)  . NO LABEL FIELDCN
)@@G@@ OR FIRST PASS?   @ @@@]          $LEVEL    ,$LEV-1   @E@]@@B$$T(B$$) DECO
)@@G@@LETE$                     . CLEAN UP THE TREE   @E@@@]B$$T(B$$) $DELETE CP
)@@G@@                    . CLEAN UP THE TREE   @#@@@@%1:       $ENDF   @E@@@@CQ
)@@G@@          $END                        . OF OUR INTERNAL PROC@[@@@@.     CR
)@@G@@@G@@@@. NOW, IF THERE WAS A WAITING LABEL, IT IS DEFINED AS THE LABEL TOCS
)@@G@@ THIS @G@@@@. PROC, AND THE FOLLOWING CALL TO 'B$$P' WILL DO NOTHING. HOCT
)@@G@@WEVER, IF   @G@@@@. THERE WAS NO WAITING LABEL, THEN 'B$$P' IS THE PROC CU
)@@G@@LABEL AND THE     @F@@@@. FOLLOWING CALL WILL CAUSE US TO IMMEDIATELY DUCV
)@@G@@MP THE VALUES.    @[@@@@.     @D@@@@          B$$P                      CW
)@@G@@  . DUMP IT ALL   @D@@@@          $END                        . OF 'ENDBCX
)@@G@@ASE'  @[@@@@.     @E@@@@          $END                        . OF BASEPCY
)@@G@@ROCS DEF    ___@@@$NPW  *[S@@@*SDFF*@H@@@@.         THIS ELEMENT EQUATESCZ
)@@G@@ THE PROPER NUMERIC VALUES TO THE FULL SET OF   @H@@@@.         MNEMONICDA
)@@G@@S FOR THE USER SET OF REGISTERS (INCLUDING THOSE FOR 1110   @H@@@@.     DB
)@@G@@    'J-REGISTER MODE' CHARACTER EDITING), AND FOR ALL WHOLE AND PARTIAL DC
)@@G@@@ @@@@.         WORD REFERENCES.    @[@@@@.     @H@[@@.         THE MNEMDD
)@@G@@ONICS X12 THROUGH X15 ARE PURPOSELY NOT INCLUDED.  THIS IS  @H@[@@.     DE
)@@G@@    TO ENCOURAGE THE USE OF THE MNEMONICS A0 THROUGH A3, CONSISTENTLY   DF
)@@G@@@H@[@@.         THROUGHOUT 1100 SERIES CODE, WHEN REFERENCING THESE FOURDG
)@@G@@ OVERLAPPED @ @[@@.         (X OR A) REGISTERS. @[@@@@.     @#@@@@      DH
)@@G@@    DEF     @ @@@@          LEVEL     0,1,0     @[@@@].     @D@@@]L EQU DI
)@@G@@$L1($L1('X','X',1,11,'I'),;     . X REGISTERS   @D@@@]          $L1('A',DJ
)@@G@@'A',0,15,'I+12'),;  . A REGISTERS   @D@@@]          $L1('R','R',1,15,'I+DK
)@@G@@64'),;  . R REGISTERS   @F@@@]          $L1('STAGING','SR',1,3,'I+66'),;DL
)@@G@@ . STAGING REGISTERS    @D@@@]          $L1('J','J',0,3,'I+70'),;   . J DM
)@@G@@REGISTERS   @F@@@]          $L1(*'WHOLE','W','0'),;     . WHOLE WORD DESDN
)@@G@@IGNATOR     @D@@@]          $L1(*'HALF','H',1,2,'3-I'),; . HALF WORDS   DO
)@@G@@@F@@@]          $L1(*'SIGNED HALF','XH',1,2,'5-I'),; . SIGNED HALF WORDSDP
)@@G@@@D@@@]          $L1(*'THIRD','T',1,3,'8-I'),; . THIRD WORDS @G@@@]      DQ
)@@G@@    $L1(*'QUARTER','Q',1,4,'$L1(7,4,6,5)(I)'),; . QUARTER WORDS   @D@@@]DR
)@@G@@          $L1(*'SIXTH','S',1,6,'14-I'),; . SIXTH WORDS@D@@@]          $LDS
)@@G@@1(*'IMMEDIATE','U','016'),;  . IMMEDIATE  @F@@@]          $L1(*'SIGNED IDT
)@@G@@MMEDIATE','XU','017')) . SIGNED IMMEDIATE @]@#@]G REPEAT L  @]@@@#G $REPDU
)@@G@@EAT L @#@@@]H   EQU  L(G)     @G@@@]    DISPLAY '.','. ':H(1):(H(*1)->' DV
)@@G@@WORD DESIGNATOR':(H>3->'S'!'')!;    @F@@@]                              DW
)@@G@@    ' REGISTER DEFINITIONS'),'.'    @]@#@]    IF H=3  @]@@@#    $IF H=3 DX
)@@G@@@ @@@]       D$I   H(2),'EQU',H(3)  @]@#@]    ELSE    @]@@@#    $ELSE   DY
)@@G@@@E@@@]I      DO H(3),H(4) , D$I H(2):$CD(I),'EQU',$CB([H(5)])     @]@#@]DZ
)@@G@@    ENDIF   @]@@@#    $ENDF   @[@#@]  ENDR@]@@@#  $ENDR     @[@@@].     EA
)@@G@@@[@]@[****  @[@[@@.     @^@[@@. REGISTER DEFINITIONS  @[@[@@.     @E@[@@EB
)@@G@@I         DO        1,11 ,X[$CD(I)] EQU I . X1 THRU X11     @E@[@@I     EC
)@@G@@    DO        0,17 ,A[$CD(I)] EQU I+12 . A0 THRU A17  @E@[@@I         DOED
)@@G@@        1,15 ,R[$CD(I)] EQU I+0100 . R1 THRU R15@[@[@@.     @A@[@@. STAGEE
)@@G@@ING AND J REGISTER DEFINITIONS@[@[@@.     @F@[@@I         DO        1,3 EF
)@@G@@,SR[$CD(I)] EQU I+0102 . SR1 THRU SR3     @E@[@@I         DO        0,3 EG
)@@G@@,J[$CD(I)] EQU I+0106 . J0 THRU J3  @[@[@@.     @ @[@@. PARTIAL WORD DESEH
)@@G@@IGNATORS    @[@[@@.     @^@[@@W         EQU       0   @^@[@@H2        EQEI
)@@G@@U       1   @^@[@@H1        EQU       2   @^@[@@XH2       EQU       3   EJ
)@@G@@@^@[@@XH1       EQU       4   @^@[@@Q2        EQU       4   @^@[@@T3    EK
)@@G@@    EQU       5   @^@[@@Q4        EQU       5   @^@[@@T2        EQU     EL
)@@G@@  6   @^@[@@Q3        EQU       6   @^@[@@T1        EQU       7   @^@[@@EM
)@@G@@Q1        EQU       7   @^@[@@S6        EQU       010 @^@[@@S5        EQEN
)@@G@@U       011 @^@[@@S4        EQU       012 @^@[@@S3        EQU       013 EO
)@@G@@@^@[@@S2        EQU       014 @^@[@@S1        EQU       015 @^@[@@U     EP
)@@G@@    EQU       016 @^@[@@XU        EQU       017 @[@[@@.     @H@@@@TYPE$REQ
)@@G@@EP  $EQU      0100              . 'TYPE TYPE$REP' => NO IBANK STORES    ER
)@@G@@@[@@@@.     @C@]@@I         $DELETE                     . REMOVE I@#@@@]ES
)@@G@@G         $DELETE @#@@@]H         $DELETE @#@@@]I         $DELETE @#@@@]ET
)@@G@@L         $DELETE @[@@@@.     @H@@@@.         DEFINE THE 'TYPE' DIRECTIVEU
)@@G@@E FOR THOSE PROGRAMS THAT STILL USE IT.   @[@@@@.     @^@@@@TYPE*     PREV
)@@G@@OC      1,0 @A@@@@          $INFO     1 TYPE(1,1)     @#@@@@          ENEW
)@@G@@D     @D@@@@          END                         . OF AXR$ DEF   ___@@@EX
)@@G@@A#0^KN;*0@@^A39@@ R\@^?2:8@@@]/K@^-I:8@@@[/K@^-I*[S@@@*SDFF*@#@@@I      EY
)@@G@@    DEF     @[@@@I.     @B@@@I.         ELT$PKT   <INFOR SPECIFICATION> EZ
)@@G@@@[@@@I.     @H@@@I. <INFOR SPECIFICATION> MAY CONSIST OF THE COMPLETE FIFA
)@@G@@LE.ELEMENT NOTATION.    @G@@@I. THE INFOR SPECIFICATION IS BROKEN DOWN IFB
)@@G@@NTO THE COMPNENT FIELDS AND   @G@@@I. AN ELT$-FORMATTED PACKET IS BUILT FC
)@@G@@WITH CORRESPONDING FIELDS DEFINED   @#@@@I. BY THE INFOR.   @[@@@I.     FD
)@@G@@@[@@@I.     @]@@@I. EXAMPLE:  @[@@@I.     @B@@@I.         ELT$PKT   'SYSFE
)@@G@@$*RLIB$.PROC$/SYS'@[@@@I.     @[@@@I.     @G@@@I. FUNC  TO  RETURN DOUBLFF
)@@G@@E WORD RIGHT-JUSTIFIED BIT MASK SET ACCORDING TO@G@@@I. THE  CHARACTER  FG
)@@G@@ARGUMENTS  GIVEN.  INDIVIDUAL  CHARACTERS  SET  A  BIT@G@@@I. CORRESPONDFH
)@@G@@ING  TO ITS NUMERIC VALUE. 'LET' SETS ALL LETTER BITS; 'NUM'@G@@@I. SETSFI
)@@G@@ ALL NUMBER BITS; 'SP' SETS ALL  SPECIAL  CHARACTER  BITS;  IF  AN@G@@@IFJ
)@@G@@. INDIVIDUAL ARGUMENT IS STARRED, THE BITS ARE CLEARED INSTEAD OF SET.  FK
)@@G@@@[@@@I.     @#@@@IF         FUNC    @#@@@IMASK*     NAME    @F@M@IA     FL
)@@G@@    EQU       0D                . RETURN DOUBLE WORD MASK   @F@@@MA     FM
)@@G@@    $EQU      0D                . RETURN DOUBLE WORD MASK   @D@M@II     FN
)@@G@@    REPEAT    F-1               . SCAN ALL ARGS @D@@@MI         $REPEAT FO
)@@G@@  F-1               . SCAN ALL ARGS @E@M@IC         EQU       $CFS(F(I))FP
)@@G@@        . MAKE STRING FIELDATA@E@@@MC         $EQU      $CFS(F(I))      FQ
)@@G@@  . MAKE STRING FIELDATA@H@M@IB         EQU       $SL(C)>1->M$$K(C)!1D*/FR
)@@G@@C . SET BITS ACCORDING TO THE ARG   @H@@@MB         $EQU      $SL(C)>1->FS
)@@G@@M$$K(C)!1D*/C . SET BITS ACCORDING TO THE ARG   @G@M@IA         EQU     FT
)@@G@@  F(*I)->A**(-B)!A++B . INCLUDE NEW BITS WITH OLD     @G@@@MA         $EFU
)@@G@@QU      F(*I)->A**(-B)!A++B . INCLUDE NEW BITS WITH OLD     @E@M@I      FV
)@@G@@    ENDR                        . LOOP TO NEXT ARG    @E@@@M          $EFW
)@@G@@NDR                       . LOOP TO NEXT ARG    @E@M@I          END     FX
)@@G@@  A                 . RETURN WITH BITS    @E@@@M          $END      A   FY
)@@G@@              . RETURN WITH BITS    @[@@@I.     @G@@@I. FUNC TO RETURN AFZ
)@@G@@ SPAN OF BITS SET CORRESPONDING TO THE RANGE SPECIFIED@E@@@I. IN THE CLOGA
)@@G@@SED INTERVAL OF F(1),F(2) WHERE F(1)<=F(2).     @[@@@I.     @#@@@ISET*  GB
)@@G@@    FUNC    @E@M@I          END       (1D*/(SET(2)+1)-1)**-(1D*/SET(1)-1GC
)@@G@@)     @E@@@M          $END      (1D*/(SET(2)+1)-1)**-(1D*/SET(1)-1)     GD
)@@G@@@[@@@I.     @^@@@I. DEFINE GROUPS OF BITS @[@@@I.     @ @M@IM$$K      EQGE
)@@G@@U       $NODE     @ @@@MM$$K      $EQU      $NODE     @E@M@IM$$K('LET') GF
)@@G@@EQU     SET('A','Z')      . LETTERS A THRU Z    @E@@@MM$$K('LET') $EQU  GG
)@@G@@  SET('A','Z')      . LETTERS A THRU Z    @E@M@IM$$K('NUM') EQU     SET(GH
)@@G@@'0','9')      . NUMBERS 0 THRU 9    @E@@@MM$$K('NUM') $EQU    SET('0','9GI
)@@G@@')      . NUMBERS 0 THRU 9    @G@M@IM$$K('SP')  EQU     SET('@',' ')++SEGJ
)@@G@@T(')','\')++SET('''','_') . SPECIAL @G@@@MM$$K('SP')  $EQU    SET('@',' GK
)@@G@@')++SET(')','\')++SET('''','_') . SPECIAL @[@@@I.     @D@@@I. ALL THAT WGL
)@@G@@AS JUST TO DEFINE THE FOLLOWING MASKS     @[@@@I.     @E@M@INAMASK    EQGM
)@@G@@U       MASK('NUM','LET','$','-') . NAME MASK   @E@@@MNAMASK    $EQU    GN
)@@G@@  MASK('NUM','LET','$','-') . NAME MASK   @D@M@INUMASK    EQU       MASKGO
)@@G@@('NUM','+','-') . CYCLE MASK  @D@@@MNUMASK    $EQU      MASK('NUM','+','GP
)@@G@@-') . CYCLE MASK  @H@M@IKEYMASK   EQU       MASK('LET','NUM','SP',*'.',*GQ
)@@G@@' ',*'/',*',') . KEY MASK     @H@@@MKEYMASK   $EQU      MASK('LET','NUM'GR
)@@G@@,'SP',*'.',*' ',*'/',*',') . KEY MASK     @[@J@I.     @[@@@J/.    @F@M@IGS
)@@G@@NODEX     EQU       0                 . INITIALIZE COUNT OF NODES @F@@@MGT
)@@G@@NODEX     $EQU      0                 . INITIALIZE COUNT OF NODES @[@@@IGU
)@@G@@.     @D@@@I. THIS PROC BUILDS THE 'NODE' PORTION OF THE TABLE    @[@@@IGV
)@@G@@.     @F@J@I.  NODE-NAME     NODOE    CHAR-MASK, MAX-CHARS ITEM-LOC ITEMGW
)@@G@@-LEN  @G@@@J.  NODE-NAME     NODE    CHAR-MASK, MAX-CHARS ITEM-LOC ITEM-GX
)@@G@@LEN  SIGNAL @[@@@I.     @D@@@I.  NODE-NAME        IS THE NAME OF THE CURGY
)@@G@@RENT NODE   @C@@@I.  CHAR-MASK        IS THE LEGAL CHARACTER MASK @E@@@IGZ
)@@G@@.  MAX-CHARS        IS THE MAXIMUM CHARACTERS IN THE FIELD  @G@@@I.  ITEHA
)@@G@@M-LOC         IS THE NAME OF THE VARIABLE TO STORE THE NAME IN    @G@@@IHB
)@@G@@.  ITEM-LEN         IS THE NAME OF THE VARIABLE TO STORE THE LENGTH IN  HC
)@@G@@@H@@@J.  SIGNAL           IS THE OLD FORMAT SIGNAL CHAR ASSICIATED WITH HD
)@@G@@THIS NODE   @[@@@I.     @^@J@IP         PROC      *3  @^@@@JP         PRHE
)@@G@@OC      *4  @#@@@INODE*     NAME    @[@@@I.     @F@M@INODEX*    EQU     HF
)@@G@@  NODEX+1           . INCREMENT CURRENT NODE    @F@@@MNODEX*    $EQU    HG
)@@G@@  NODEX+1           . INCREMENT CURRENT NODE    @H@M@I*         EQU     HH
)@@G@@  NODEX             . ASSIGN THE SYMBOL AS THE CURRENT NODE @H@@@M*     HI
)@@G@@    $EQU      NODEX             . ASSIGN THE SYMBOL AS THE CURRENT NODE HJ
)@@G@@@ @J@I          DISPLAY   NODEX     @[@@@I.     @^@@@I. BUILD THE NODE WHK
)@@G@@ORD   @[@@@I.     @F@J@I. NODES(<INDEX>,0) := $L1(<NAME VAR>,<LEN VAR>,<HL
)@@G@@MAX LEN>,<MASK>)  @G@@@J. ELT$$N(<INDEX>,0) := $L1(<NAME INDEX>,<LEN INDHM
)@@G@@EX>,<MAX LEN>,<MASK>)   @D@J@I.                   <NAME VAR>        VARIHN
)@@G@@ABLE NAME   @D@@@J.                   <NAME INDEX>      INDEX INTO 'NAM'HO
)@@G@@@D@J@I.                   <LEN VAR>         LENGTH  VARIABLE@D@@@J.     HP
)@@G@@              <LEN INDEX>       INDEX INTO 'LEN'@D@@@I.                 HQ
)@@G@@  <MAX LEN>         MAXIMUM LENGTH  @E@@@I.                   <MASK>    HR
)@@G@@        MASK OF LEGAL CHARS   @G@J@I. NODES(<INDEX>,1)  := NODE OF SYMBOHS
)@@G@@L ARCS, ARITHMETIC VALUE IS EQUAL TO@H@@@J. ELT$$N(<INDEX>,1)  := NODE OHT
)@@G@@F SYMBOL ARCS, ARITHMETIC VALUE IS EQUAL TO     @F@@@I.                 HU
)@@G@@  THE TOTAL NUMBER OF SYMBOL ARCS FOR THIS NODE @[@@@J.     @G@@@J. BUILHV
)@@G@@D ALSO THE CROSS-INDEX TABLE TO RELATE THE OLD CALLING SEQUENCE   @B@@@JHW
)@@G@@. SIGNAL CHARS TO THE CORRESPONDING NODE  @[@@@J.     @B@@@J. ELT$$X(<SIHX
)@@G@@GNAL>)  ::=  <NODEX INDEX>    @[@@@J.     @[@@@I.     @D@J@INODES*(NODEXHY
)@@G@@,0) EQU $L1(P(2,1),P(3,1),P(1,2),P(1,1))  @D@M@JELT$$N**(NODEX,0) EQU $LHZ
)@@G@@1(P(2,1),P(3,1),P(1,2),P(1,1))@E@@@MELT$$N**(NODEX,0) $EQU $L1(P(2,1),P(IA
)@@G@@3,1),P(1,2),P(1,1))     @ @J@INODES*(NODEX,1) EQU $NODE     @ @M@JELT$$NIB
)@@G@@**(NODEX,1) EQU $NODE   @ @@@MELT$$N**(NODEX,1) $EQU $NODE  @F@J@I[P(2,1IC
)@@G@@)]* EQU       ''                . INITIALIZE NAME TO NULL   @F@J@I[P(3,1ID
)@@G@@)]* EQU       0                 . INITIALIZE LENGTH TO NULL @E@@@J      IE
)@@G@@    DISPLAY   +(GFORM 12,NODEX,12,P(2,1),12,P(3,1))   @F@M@J          P(IF
)@@G@@4)=0->END                 . QUIT IF NO SIGNAL CHAR    @F@@@M          P(IG
)@@G@@4)=0->$END                . QUIT IF NO SIGNAL CHAR    @F@M@JELT$$X**($CFIH
)@@G@@S(P(4,1))) EQU NODEX      . POINT TO THE CURRENT NODE @F@@@MELT$$X**($CFII
)@@G@@S(P(4,1))) $EQU NODEX     . POINT TO THE CURRENT NODE @#@M@I          ENIJ
)@@G@@D     @#@@@M          $END    @[@@@I.     @G@@@I. THIS PROC BUILDS THE SIK
)@@G@@YMBOL ARCS WHICH GOVERN THE NODE TRANSITIONS    @[@@@I.     @E@@@I.     IL
)@@G@@    ARC       'TRANS-CHAR', NEW-NODE   TRANS-ADDR     @[@@@I.     @F@@@IIM
)@@G@@.  TRANS-CHAR       IS A SINGLE CHARACTER WHICH LABELS THE ARC.   @E@@@IIN
)@@G@@.  NEW-NODE         IS THE NAME OF THE NEW NODE TO GO TO.   @E@@@I.  TRAIO
)@@G@@NS-ADDR       IS THE LABEL TO GOTO IN TRANSITION.     @[@@@I.     @^@@@IIP
)@@G@@P         PROC      *2  @#@@@IARC*      NAME    @[@@@I.     @F@J@IA     IQ
)@@G@@    EQU       NODES(NODEX,1)+1  . BUMP THE NUMBER OF ARCS   @[@J@I.     IR
)@@G@@@^@@@I. BUILD THE ARC TREE    @[@@@I.     @H@J@I. NODEX(<INDEX>,1,<ARC-IIS
)@@G@@NDEX>) := $L1(<TRANS-CHAR>,<NEXT-NODE>,<TRANS-ADDR>)  @F@@@J. NODEX(<INDIT
)@@G@@EX>,1,<TRANS-CHAR>) := $L1(<NEXT-NODE>,<TRANS-ADDR>)  @F@@@I.           IU
)@@G@@        <TRANS-CHAR>      IS THE TRANSITION CHARACTER @F@@@I.           IV
)@@G@@        <NEXT-NODE>       IS THE NEXT NODE TO GO TO   @G@@@I.           IW
)@@G@@        <TRANS-ADDR>      IS THE TRANSITION ROUTINE ADDRESS @[@@@I.     IX
)@@G@@@E@M@JC         EQU       $CFS(P(1,1))      . GET THE TRANS-CHAR  @E@@@MIY
)@@G@@C         $EQU      $CFS(P(1,1))      . GET THE TRANS-CHAR  @C@M@J      IZ
)@@G@@    DO        P(2)=0 ,P(2,1) EQU ARCSTO   @C@@@M          DO        P(2)JA
)@@G@@=0 ,P(2,1) $EQU ARCSTO  @D@J@INODES*(NODEX,1,A) EQU $L1($CFS(P(1,1)),P(1JB
)@@G@@,2),P(2,1)) @B@M@JELT$$N**(NODEX,1,C) EQU $L1(P(1,2),P(2,1))@C@@@MELT$$NJC
)@@G@@**(NODEX,1,C) $EQU $L1(P(1,2),P(2,1))     @C@@@J          DISPLAY   +(GFJD
)@@G@@ORM 18,C,18,P(1,2))     @#@M@I          END     @#@@@M          $END    JE
)@@G@@@[@@@J/.    @B@@@J. NOW DEFINE THE NAME AND LENGTH INDEXES  @[@@@J.     JF
)@@G@@@^@@@JP         PROC      *1  @#@@@JINDEX*    NAME    @^@M@J          IFJG
)@@G@@        P(1)@^@@@M          $IF       P(1)@ @M@JNDX$$*    EQU       P(1,JH
)@@G@@1)    @ @@@MNDX$$*    $EQU      P(1,1)    @#@M@J          ELSE    @#@@@MJI
)@@G@@          $ELSE   @G@M@JNDX$$*    EQU       NDX$$+1           . INCREMENJJ
)@@G@@T TO PREVIOUS INDEX     @G@@@MNDX$$*    $EQU      NDX$$+1           . INJK
)@@G@@CREMENT TO PREVIOUS INDEX     @#@@@J          ENDF    @ @M@J*         EQJL
)@@G@@U       NDX$$     @ @@@M*         $EQU      NDX$$     @ @@@J          DIJM
)@@G@@SPLAY   NDX$$     @#@M@J          END     @#@@@M          $END    @[@@@JJN
)@@G@@.     @^@@@J. DEFINE LENGTH INDEXES @[@@@J.     @F@@@JFQL       INDEX   JO
)@@G@@  1                 . FILE QUALIFIER LENGTH     @E@@@JFNL       INDEX   JP
)@@G@@                    . FILE NAME LENGTH    @E@@@JFCL       INDEX         JQ
)@@G@@              . FILE CYCLE LENGTH   @E@@@JRKL       INDEX               JR
)@@G@@        . READ KEY LENGTH     @E@@@JWKL       INDEX                     JS
)@@G@@  . WRITE KEY LENGTH    @F@@@JIQF       INDEX                       . IMJT
)@@G@@PLIED QUALIFIER FLAG    @E@@@JENL       INDEX                       . ELJU
)@@G@@EMENT NAME LENGTH @F@@@JEVL       INDEX                       . ELEMENT JV
)@@G@@VERSION LENGTH    @E@@@JECL       INDEX                       . ELEMENT JW
)@@G@@CYCLE LENGTH@F@@@JCFN       INDEX                       . CONTINUATION FJX
)@@G@@ILE NUMBER  @E@@@JECC       INDEX                       . ELEMENT CYCLE JY
)@@G@@CHAR  @E@@@JBEC       INDEX                       . BINARY ELEMENT CYCLEJZ
)@@G@@@[@@@J.     @#@@@J. NAME INDEXES    @[@@@J.     @E@@@JFQUAL     INDEX   KA
)@@G@@  1                 . FILE QUALIFIER NAME @D@@@JFNAME     INDEX         KB
)@@G@@              . FILE NAME     @D@@@JFCYC      INDEX                     KC
)@@G@@  . FILE CYCLE    @C@@@JRKEY      INDEX                       . READ KEYKD
)@@G@@@D@@@JWKEY      INDEX                       . WRITE KEY     @D@@@JENAME KE
)@@G@@    INDEX                       . ELEMENT NAME  @E@@@JEVER      INDEX   KF
)@@G@@                    . ELEMENT VERSION     @D@@@JECYC      INDEX         KG
)@@G@@              . ELEMENT CYCLE @[@@@J.     @C@@@J. NOW DEFINE THE LABELS KH
)@@G@@USED IN ARC TRANSITIONS @G@@@J. THE PROC 'LABEL' TAKES THE WAITING LABELKI
)@@G@@ AND DEFINES IT WITH A STRING @G@@@J. VALUE OF ITSELF. IN THE PROC, ELT$KJ
)@@G@@PKT, THE USAGES OF THESE LABELS IS  @G@@@J. WITHIN MICROSTRINGS, SO THATKK
)@@G@@ THEY IN EFFECT TURN INTO THEMSELVES.     @G@@@J. THIS ALLOWS THEM TO BEKL
)@@G@@ USED OUTSIDE THE PROC IN THIS DEFINITION ,     @C@@@J. AND INSIDE THE PKM
)@@G@@ROC WITHOUT EXTERNALIZATION.  @[@@@J.     @^@@@JP         PROC      *1  KN
)@@G@@@#@@@JLABEL*    NAME    @F@M@J*         EQU       $LF(1)(0)         . DEKO
)@@G@@FINE THE LABEL AS ITSELF@F@@@M*         $EQU      $LF(1)(0)         . DEKP
)@@G@@FINE THE LABEL AS ITSELF@#@M@J          END     @#@@@M          $END    KQ
)@@G@@@[@@@J.     @]@@@J. THE LABELS@[@@@J.     @F@@@JARCNUL    LABEL         KR
)@@G@@              . NULL TRANSITION ROUTINE   @G@@@JARCFIL    LABEL         KS
)@@G@@              . PROCESS FILENAME TRANSITION     @G@@@JARCQUL    LABEL   KT
)@@G@@                    . PROCESS QUALIFIER TRANSITION    @G@@@JARCCYC    LAKU
)@@G@@BEL                       . PROCESS ELEMENT CYCLE TRANSITION@F@@@JARCSTOKV
)@@G@@    LABEL                       . PROCESS ALL TRANSITIONS   @[@@@I/.    KW
)@@G@@@G@@@I. DEFINE THE DATA TABLE WHICH CONTROLS THE TABLE DRIVEN INFOR SCANKX
)@@G@@NER   @[@@@I.     @C@J@INQUAL     NODE      NAMASK,12 'FQUAL' 'FQL'     KY
)@@G@@@C@@@JNQUAL     NODE      NAMASK,12 FQUAL FQL 'Q'     @A@@@I          ARKZ
)@@G@@C       '*',NFILE ARCQUL@A@@@I          ARC       '(',NFILE ARCNUL@A@@@ILA
)@@G@@          ARC       '/',NFILE ARCNUL@A@@@I          ARC       '.',NFILE LB
)@@G@@ARCFIL@[@@@I.     @C@J@INFILE     NODE      NAMASK,12 'FNAME' 'FNL'     LC
)@@G@@@C@@@JNFILE     NODE      NAMASK,12 FNAME FNL 'F'     @ @@@I          ARLD
)@@G@@C       '(',NFCYC @ @@@I          ARC       '/',NRKEY @ @@@I          ARLE
)@@G@@C       '.',NELT  @[@@@I.     @B@J@INFCYC     NODE      NUMASK,4 'FCYC' LF
)@@G@@'FCL' @B@@@JNFCYC     NODE      NUMASK,6 FCYC FCL 'FC'@ @@@I          ARLG
)@@G@@C       ')',NFNUL @[@@@I.     @D@@@INFNUL     NODE      0D,0            LH
)@@G@@  . NULL SYMBOL   @ @@@I          ARC       '/',NRKEY @ @@@I          ARLI
)@@G@@C       '.',NELT  @[@@@I.     @B@J@INRKEY     NODE      KEYMASK,6 'RKEY'LJ
)@@G@@ 'RKL'@B@@@JNRKEY     NODE      KEYMASK,6 RKEY RKL 'R'@ @@@I          ARLK
)@@G@@C       '/',NWKEY @ @@@I          ARC       '.',NELT  @[@@@I.     @B@J@ILL
)@@G@@NWKEY     NODE      KEYMASK,6 'WKEY' 'WKL'@B@@@JNWKEY     NODE      KEYMLM
)@@G@@ASK,6 WKEY WKL 'W'@ @@@I          ARC       '.',NELT  @[@@@I.     @C@J@ILN
)@@G@@NELT      NODE      NAMASK,12 'ENAME' 'ENL'     @C@@@JNELT      NODE    LO
)@@G@@  NAMASK,12 ENAME ENL 'E'     @ @@@I          ARC       '/',NVER  @ @@@ILP
)@@G@@          ARC       '(',NECYC @[@@@I.     @B@J@INVER      NODE      NAMALQ
)@@G@@SK,12 'EVER' 'EVL'@B@@@JNVER      NODE      NAMASK,12 EVER EVL 'V'@ @@@ILR
)@@G@@          ARC       '(',NECYC @[@@@I.     @B@J@INECYC     NODE      NUMALS
)@@G@@SK,3 'ECYC' 'ECL' @B@@@JNECYC     NODE      NUMASK,6 ECYC ECL 'EC'@ @K@ILT
)@@G@@          ARC       ')',NENUL @A@@@K          ARC       ')',NENUL ARCCYCLU
)@@G@@@[@@@I.     @^@@@INENUL     NODE      0D,0@[@@@I/     @A@@@J. FINALLY, HLV
)@@G@@ERE IS THE ELT$PKT PROC.@G@@@J. IT MAY SEEM THAT A LOT OF STUFF IS HANGILW
)@@G@@NG AROUND JUST TO PROCESS     @F@@@J. THE USER'S STRING , BUT ACTUALLY TLX
)@@G@@HERE IS VERY LITTLE THAT IS   @F@@@J. ACTUALLY OUTPUT TO THE OMNIBUS DEFLY
)@@G@@INITION ELEMENT.  THE ONLY    @F@@@J. DEFINITIONS THAT MAKE IT TO THE OULZ
)@@G@@TSIDE WORLD IS THE 'ELT$$N'   @F@@@J. TREE, AND THE PROC 'ELT$PKT'; EVERMA
)@@G@@YTHING ELSE IS USED JUST TO   @ @@@J. DEFINE THESE TWO SYMBOLS.   @[@@@JMB
)@@G@@.     @]@@@J. GO TO WORK@[@@@J.     @^@@@JP         PROC      1,14@#@@@JMC
)@@G@@ELT$PKT** NAME    @[@@@J.     @E@@@J. THROUGHOUT THE PROC, THE FOLLOWINGMD
)@@G@@ SYMBOLS ARE PERTINANT: @[@@@J.     @B@@@J.         S         IS THE USEME
)@@G@@R'S STRING  @D@@@J.         SL        IS THE LENGTH OF THE USER'S STRINGMF
)@@G@@@C@@@J.         NX        IS THE CURRENT NODEX INDEX  @B@@@J.         NNMG
)@@G@@X       IS THE NODE NAME INDEX@C@@@J.         NLX       IS THE NODE LENGMH
)@@G@@TH INDEX    @B@@@J.         NML       IS THE NODE MAX LENGTH@G@@@J.     MI
)@@G@@    CX        IS THE CURRENT CHARACTER INDEX IN THE USER'S STRING @D@@@JMJ
)@@G@@.         N         IS THE CURRENT NAME JUST BUILT    @C@@@J.         LEMK
)@@G@@N       IS THE VECTOR OF LENGTHS    @D@@@J.         NAM       IS THE VECML
)@@G@@TOR OF STRING NAMES     @C@@@J.         C         IS THE CURRENT CHARACTMM
)@@G@@ER    @[@@@J.     @F@@@J. INITIALIZE THE CONTENTS OF THE FINAL ELT$ PACKMN
)@@G@@ET TO BE GENERATED@[@@@J.     @E@M@JI         DO        12 ,LEN(I) EQU 0MO
)@@G@@  . CLEAR ALL LENGTHS   @E@@@MI         DO        12 ,LEN(I) $EQU 0 . CLMP
)@@G@@EAR ALL LENGTHS   @G@M@JI         DO        8 ,NAM(I) EQU (2<I<6)++(I=8)MQ
)@@G@@->0!0D . INITIAL NAMES  @G@@@MI         DO        8 ,NAM(I) $EQU (2<I<6)MR
)@@G@@++(I=8)->0!0D . INITIAL NAMES @F@L@KLEN([%1:$CD(ECC)]) EQU '-'          MS
)@@G@@  . DEFAULT ELEMENT CYCLE CHAR@F@M@LLEN([%1:$CD(ECC)]) EQU $CFS('-')    MT
)@@G@@  . DEFAULT ELEMENT CYCLE CHAR@F@@@MLEN([%1:$CD(ECC)]) $EQU $CFS('-')   MU
)@@G@@  . DEFAULT ELEMENT CYCLE CHAR@[@@@J.     @G@M@JS         EQU       $CFSMV
)@@G@@(P(1,1))      . GET USER'S STRING IN FIELDATA   @G@@@MS         $EQU    MW
)@@G@@  $CFS(P(1,1))      . GET USER'S STRING IN FIELDATA   @D@M@JSL        EQMX
)@@G@@U       $SL(S)            . GET ITS LENGTH@D@@@MSL        $EQU      $SL(MY
)@@G@@S)            . GET ITS LENGTH@E@M@JNX        EQU       [%1:$CD(NELT)]  MZ
)@@G@@  . INITIAL NODEX INDEX @E@@@MNX        $EQU      [%1:$CD(NELT)]    . INNA
)@@G@@ITIAL NODEX INDEX @[@@@J.     @E@@@J. NOW SCAN THE STRING FOR A '*' OR 'NB
)@@G@@.', AND IF ONE IS FOUND @D@@@J. INITIALIZE THE NODE INDEX AT THE QUALIFENC
)@@G@@R INDEX.    @D@@@J. DO THIS ALSO IF THERE ARE AT LEAST TWO '/' FOUND.   ND
)@@G@@@F@@@J. MEANWHILE, SET THE CHARACTER INDEX AT THE FIRST NON-BLANK CHAR. NE
)@@G@@@[@@@J.     @E@M@JJ         EQU       0                 . SET '/' COUNTENF
)@@G@@R     @E@@@MJ         $EQU      0                 . SET '/' COUNTER     NG
)@@G@@@E@M@JCX        EQU       -1                . CLEAR CHAR INDEX    @E@@@MNH
)@@G@@CX        $EQU      -1                . CLEAR CHAR INDEX    @^@M@JI     NI
)@@G@@    REPEAT    1,SL@^@@@MI         $REPEAT   1,SL@E@M@JC         EQU     NJ
)@@G@@  $SS(S,I)          . GET THE NEXT CHAR   @E@@@MC         $EQU      $SS(NK
)@@G@@S,I)          . GET THE NEXT CHAR   @F@@@J          DO        CX<0->C<>'NL
)@@G@@ '!0 ,; . INITIALIZE THE CHAR INDEX @F@M@JCX        EQU       I-1       NM
)@@G@@        . BEFORE THE FIRST NON-BLANK@F@@@MCX        $EQU      I-1       NN
)@@G@@        . BEFORE THE FIRST NON-BLANK@E@M@JJ         EQU       J+(C='/') NO
)@@G@@        . BUMP SLASH COUNTER  @E@@@MJ         $EQU      J+(C='/')       NP
)@@G@@  . BUMP SLASH COUNTER  @G@M@J          IF        C='*'->1!C='.'->1!J>1 NQ
)@@G@@. FIND A '*' OR '.' OR TWO '/'@G@@@M          $IF       C='*'->1!C='.'->NR
)@@G@@1!J>1 . FIND A '*' OR '.' OR TWO '/'@H@M@JNX        EQU       [%2:$CD(NQNS
)@@G@@UAL)]   . SET INITIAL NODE AT THE QUALIFIER     @H@@@MNX        $EQU    NT
)@@G@@  [%2:$CD(NQUAL)]   . SET INITIAL NODE AT THE QUALIFIER     @E@M@J      NU
)@@G@@    ENDI                        . TERMINATE THE LOOP  @E@@@M          $ENV
)@@G@@NDI                       . TERMINATE THE LOOP  @#@M@J          ENDF    NW
)@@G@@@#@@@M          $ENDF   @F@M@J          ENDR                        . LONX
)@@G@@OP BACK TO THE NEXT CHAR@F@@@M          $ENDR                       . LONY
)@@G@@OP BACK TO THE NEXT CHAR@F@M@J          DO        CX<0 , GO ELT$$GEN . QNZ
)@@G@@UIT NOW IF BLANK STRING @F@@@M          $DO       CX<0 , GO ELT$$GEN . QOA
)@@G@@UIT NOW IF BLANK STRING @[@@@J.     @^@@@J. MAIN SCANNING LOOP    @[@@@JOB
)@@G@@.     @#@@@JSCAN      NAME    @G@M@JM         EQU       ELT$$N(NX,0,4)  OC
)@@G@@  . GET LEGAL CHAR MASK TO SCAN BY  @G@@@MM         $EQU      ELT$$N(NX,OD
)@@G@@0,4)    . GET LEGAL CHAR MASK TO SCAN BY  @F@M@JMAX       EQU       ELT$OE
)@@G@@$N(NX,0,3)    . GET MAX NUMBER OF CHARS   @F@@@MMAX       $EQU      ELT$OF
)@@G@@$N(NX,0,3)    . GET MAX NUMBER OF CHARS   @E@L@JN         EQU       ''  OG
)@@G@@              . INITIALIZE NAME     @E@M@LN         EQU       $CFS('')  OH
)@@G@@        . INITIALIZE NAME     @E@@@MN         $EQU      $CFS('')        OI
)@@G@@  . INITIALIZE NAME     @[@@@J.     @F@@@J. SCAN FOR LEGAL CHARACTERS, BOJ
)@@G@@UILDING UP 'N' UNTIL A BREAK CHAR   @ @@@J. OR MAX CHARS IS REACHED.    OK
)@@G@@@[@@@J.     @G@L@JC         EQU       ' '               . SET TERM CHAR OL
)@@G@@IN CASE CX>SL     @G@M@LC         EQU       $CFS(' ')         . SET TERMOM
)@@G@@ CHAR IN CASE CX>SL     @G@@@MC         $EQU      $CFS(' ')         . SEON
)@@G@@T TERM CHAR IN CASE CX>SL     @E@M@JCX        REPEAT    CX+1,SL         OO
)@@G@@  . SCAN THE STRING     @E@@@MCX        $REPEAT   CX+1,SL           . SCOP
)@@G@@AN THE STRING     @E@M@JC         EQU       $SS(S,CX)         . GET CURROQ
)@@G@@ENT CHAR    @E@@@MC         $EQU      $SS(S,CX)         . GET CURRENT CHOR
)@@G@@AR    @E@M@J          (\M**1D*/C)->ENDI           . IF BREAK CHAR - QUITOS
)@@G@@@E@@@M          (\M**1D*/C)->$ENDI          . IF BREAK CHAR - QUIT@D@M@JOT
)@@G@@N         EQU       N:C               . BUILD NAME UP @D@@@MN         $EOU
)@@G@@QU      N:C               . BUILD NAME UP @H@L@JC         EQU       ' ' OV
)@@G@@              . SET TERMINATING CHAR IN CASE CX>SL    @H@M@LC         EQOW
)@@G@@U       $CFS(' ')         . SET TERMINATING CHAR IN CASE CX>SL    @H@@@MOX
)@@G@@C         $EQU      $CFS(' ')         . SET TERMINATING CHAR IN CASE CX>OY
)@@G@@SL    @C@@@J          ENDR                        . LOOP    @F@M@J      OZ
)@@G@@    DO        C=' '->1!C=',' ,; . IF BLANK OR COMMA SET TERM@F@@@M      PA
)@@G@@    $DO       C=' '->1!C=',' ,; . IF BLANK OR COMMA SET TERM@D@M@JCX    PB
)@@G@@    EQU       SL+1              . NO MORE CHARS @D@@@MCX        $EQU    PC
)@@G@@  SL+1              . NO MORE CHARS @F@M@J          DO        $SL(N)>MAXPD
)@@G@@ , GO ERRLEN . SKIP IF NAME TOO LONG@F@@@M          $DO       $SL(N)>MAXPE
)@@G@@ , GO ERRLEN . SKIP IF NAME TOO LONG@[@@@J.     @ @@@J. NULL TRANSITION PF
)@@G@@ROUTINE     @#@@@J. (NOTE FALL THRU)@[@@@J.     @#@@@JARCNUL    NAME    PG
)@@G@@@E@M@JNNX       EQU       ELT$$N(NX,0,1)    . GET NODE NAME INDEX @E@@@MPH
)@@G@@NNX       $EQU      ELT$$N(NX,0,1)    . GET NODE NAME INDEX @F@M@JNLX   PI
)@@G@@    EQU       ELT$$N(NX,0,2)    . GET NODE LENGTH INDEX     @F@@@MNLX   PJ
)@@G@@    $EQU      ELT$$N(NX,0,2)    . GET NODE LENGTH INDEX     @F@M@JNML   PK
)@@G@@    EQU       ELT$$N(NX,0,3)    . GET MAXIMUM LENGTH ALLOWED@F@@@MNML   PL
)@@G@@    $EQU      ELT$$N(NX,0,3)    . GET MAXIMUM LENGTH ALLOWED@F@M@J      PM
)@@G@@    IF        $SN(ELT$$N(NX,1),C) . IS SYMBOL IN ARC LIST?  @F@@@M      PN
)@@G@@    $IF       $SN(ELT$$N(NX,1),C) . IS SYMBOL IN ARC LIST?  @G@M@JARC   PO
)@@G@@    EQU       ELT$$N(NX,1,C,2)  . GET THE ARC TRANSITION ROUTINE  @G@@@MPP
)@@G@@ARC       $EQU      ELT$$N(NX,1,C,2)  . GET THE ARC TRANSITION ROUTINE  PQ
)@@G@@@F@M@JNX        EQU       ELT$$N(NX,1,C,1)  . GET THE NEXT NODE ADDR    PR
)@@G@@@F@@@MNX        $EQU      ELT$$N(NX,1,C,1)  . GET THE NEXT NODE ADDR    PS
)@@G@@@H@@@J          GO        [ARC]             . GO PROCESS THE TRANSITION PT
)@@G@@ROUTINE     @#@@@J          ENDF    @G@M@J          DO        CX>SL , GOPU
)@@G@@ ARCSTO . IF TERM - STASH WHAT WE HAVE    @G@@@M          $DO       CX>SPV
)@@G@@L , GO ARCSTO . IF TERM - STASH WHAT WE HAVE    @F@@@J          DISPLAY PW
)@@G@@  *'CHARACTER ':$CD(CX):' IS ILLEGAL: ''':C:''''@F@@@J          GO      PX
)@@G@@  ELT$$GEN          . OUTPUT WHAT TABLE WE HAVE @[@@@J.     @#@@@J. ERROPY
)@@G@@R IN LENGTH @[@@@J.     @#@@@JERRLEN    NAME    @F@@@J          DISPLAY PZ
)@@G@@  *'LENGTH OF ''':N:''' EXCEEDS MAXIMUM ALLOWED'@B@@@J          GO      QA
)@@G@@  ELT$$GEN          .   @[@@@J.     @B@@@J. ARC ROUTINE TO HANDLE LEADINQB
)@@G@@G PERIOD    @[@@@J.     @#@@@JARCFIL    NAME    @G@M@J          DO      QC
)@@G@@  $SL(N)>0 , GO ARCNUL . IF NAME, NORMAL TRANSITION   @G@@@M          $DQD
)@@G@@O       $SL(N)>0 , GO ARCNUL . IF NAME, NORMAL TRANSITION   @G@M@JLEN([%QE
)@@G@@1:$CD(CFN)]) EQU 63             . SET IMPOSSIBLE NONZERO VALUE    @G@@@MQF
)@@G@@LEN([%1:$CD(CFN)]) $EQU 63            . SET IMPOSSIBLE NONZERO VALUE    QG
)@@G@@@E@@@J          GO        ARCNUL            . GO PROCESS NEXT NODE@[@@@JQH
)@@G@@.     @B@@@J. ARC ROUTINE TO HANDLE IMPLIED QUALIFIER @[@@@J.     @#@@@JQI
)@@G@@ARCQUL    NAME    @F@M@J          DO        $SL(N)>0 , GO ARCSTO . IF QUQJ
)@@G@@AL GIVEN, NORMAL  @F@@@M          $DO       $SL(N)>0 , GO ARCSTO . IF QUQK
)@@G@@AL GIVEN, NORMAL  @E@M@JLEN([%1:$CD(IQF)]) EQU 1              . IMPLIED QL
)@@G@@QUALIFIER   @E@@@MLEN([%1:$CD(IQF)]) $EQU 1             . IMPLIED QUALIFQM
)@@G@@IER   @C@@@J          GO        ARCSTO            . GO STASH@[@@@J.     QN
)@@G@@@C@@@J. ARC ROUTINE TO HANDLE ELEMENT CYCLE STUFF     @[@@@J.     @#@@@JQO
)@@G@@ARCCYC    NAME    @F@K@JLEN([%1:$CD(ECC)]) EQU '-'            . DEFAULT QP
)@@G@@ELEMENT CYCLE CHAR@B@@@J          DO        $SL(N)=0 , GO ARCSTO  @F@M@JQQ
)@@G@@X         EQU       $SS(N,1)          . GET FIRST CHAR OF CYCLE   @F@@@MQR
)@@G@@X         $EQU      $SS(N,1)          . GET FIRST CHAR OF CYCLE   @C@L@JQS
)@@G@@X         EQU       X='-'->'-'!X='+'->'+'!0     @D@M@LX         EQU     QT
)@@G@@  $CFS(X='-'->'-'!X='+'->'+'!0)     @D@@@MX         $EQU      $CFS(X='-'QU
)@@G@@->'-'!X='+'->'+'!0)     @E@M@JY         EQU       [(X=0->' '!X):N]  . GEQV
)@@G@@T BINARY VALUE    @E@@@MY         $EQU      [(X=0->' '!X):N]  . GET BINAQW
)@@G@@RY VALUE    @C@L@JLEN([%1:$CD(ECC)]) EQU  Y>63->'E'!X   . SET ECC @D@M@LQX
)@@G@@LEN([%1:$CD(ECC)]) EQU  Y>63->$CFS('E')!X   . SET ECC @D@@@MLEN([%1:$CD(QY
)@@G@@ECC)]) $EQU Y>63->$CFS('E')!X   . SET ECC @C@M@JLEN([%1:$CD(BEC)]) EQU YQZ
)@@G@@              . SET BEC @C@@@MLEN([%1:$CD(BEC)]) $EQU Y             . SERA
)@@G@@T BEC @[@@@J.     @B@@@J. DEFAULT, AND NORMAL TRANSITION ROUTINE  @[@@@JRB
)@@G@@.     @#@@@JARCSTO    NAME    @E@M@JNAM(NNX)  EQU       (N)[NML>6->'DL'!RC
)@@G@@'SL'] . DEFINE THE NAME @E@@@MNAM(NNX)  $EQU      (N)[NML>6->'DL'!'SL'] RD
)@@G@@. DEFINE THE NAME @E@M@JLEN(NLX)  EQU       $SL(N)            . DEFINE TRE
)@@G@@HE LENGTH   @E@@@MLEN(NLX)  $EQU      $SL(N)            . DEFINE THE LENRF
)@@G@@GTH   @D@@@J          DO        CX<=SL , GO SCAN  . KEEP SCANNING @[@@@JRG
)@@G@@.     @A@@@J. FINALLY, GENERATE THE ELT$ TABLE  @[@@@J.     @#@@@JELT$$GRH
)@@G@@EN** NAME   @A@@@JF         FORM      6,6,6,6,6,6     @F@@@J          F RI
)@@G@@        LEN(1),LEN(2),LEN(3),LEN(4),LEN(5),LEN(6)     @F@@@J          F RJ
)@@G@@        LEN(7),LEN(8),LEN(9),LEN(10),LEN(11),LEN(12)  @A@@@JI         DORK
)@@G@@        1,8 , + NAM(I)  @#@M@J          END     @#@@@M          $END    RL
)@@G@@@[@@@J/.    @G@@@J. HERE IS THE OLD FORMAT PROC 'FIPELT', WHICH IS PROVIRM
)@@G@@DED FOR THOSE     @E@@@J. OLD PROGRAMS THAT HAVE NOT GONE TO THE NEW PRORN
)@@G@@C USAGE.    @[@@@J.     @^@@@JP         PROC      8,14@#@@@JFIPELT**  NARO
)@@G@@ME    @E@M@JI         DO        12 ,LEN(I) EQU 0  . CLEAR ALL LENGTHS   RP
)@@G@@@E@@@MI         DO        12 ,LEN(I) $EQU 0 . CLEAR ALL LENGTHS   @G@M@JRQ
)@@G@@I         DO        8 ,NAM(I) EQU (2<I<6)++(I=8)->0!0D . INITIAL NAMES  RR
)@@G@@@G@@@MI         DO        8 ,NAM(I) $EQU (2<I<6)++(I=8)->0!0D . INITIAL RS
)@@G@@NAMES @E@M@JI         REPEAT    P-1               . SCAN ALL ARGUMENTS  RT
)@@G@@@E@@@MI         $REPEAT   P-1               . SCAN ALL ARGUMENTS  @E@M@JRU
)@@G@@ERR       EQU       0                 . CLEAR ERROR FLAG    @E@@@MERR   RV
)@@G@@    $EQU      0                 . CLEAR ERROR FLAG    @E@M@JC         EQRW
)@@G@@U       P(I,1)            . GET SIGNAL CHAR     @E@@@MC         $EQU    RX
)@@G@@  P(I,1)            . GET SIGNAL CHAR     @E@M@J          IF        $SN(RY
)@@G@@ELT$$X,C)     . IS SIGNAL LEGAL?    @E@@@M          $IF       $SN(ELT$$XRZ
)@@G@@,C)     . IS SIGNAL LEGAL?    @G@M@JNX        EQU       ELT$$X(C)       SA
)@@G@@  . YES, GET ASSOCIATED NODE INDEX  @G@@@MNX        $EQU      ELT$$X(C) SB
)@@G@@        . YES, GET ASSOCIATED NODE INDEX  @D@M@JNNX       EQU       ELT$SC
)@@G@@$N(NX,0,1)    . GET NAME INDEX@D@@@MNNX       $EQU      ELT$$N(NX,0,1)  SD
)@@G@@  . GET NAME INDEX@E@M@JNLX       EQU       ELT$$N(NX,0,2)    . GET LENGSE
)@@G@@TH INDEX    @E@@@MNLX       $EQU      ELT$$N(NX,0,2)    . GET LENGTH INDSF
)@@G@@EX    @D@M@JNML       EQU       ELT$$N(NX,0,3)    . GET MAX LENGTH@D@@@MSG
)@@G@@NML       $EQU      ELT$$N(NX,0,3)    . GET MAX LENGTH@F@M@JM         EQSH
)@@G@@U       ELT$$N(NX,0,4)    . GET LEGAL CHARACTER MASK  @F@@@MM         $ESI
)@@G@@QU      ELT$$N(NX,0,4)    . GET LEGAL CHARACTER MASK  @D@L@JN         EQSJ
)@@G@@U       P(I)>1->$CFS(P(I,2))!'' . GET NAME@D@M@LN         EQU       $CFSSK
)@@G@@(P(I)>1->P(I,2)!'') . GET NAME@D@@@MN         $EQU      $CFS(P(I)>1->P(ISL
)@@G@@,2)!'') . GET NAME@E@M@JNL        EQU       $SL(N)            . GET LENGSM
)@@G@@TH OF NAME  @E@@@MNL        $EQU      $SL(N)            . GET LENGTH OF SN
)@@G@@NAME  @G@M@JJ         REPEAT    NL                . SCAN NAME FOR ILLEGASO
)@@G@@L CHARS     @G@@@MJ         $REPEAT   NL                . SCAN NAME FOR SP
)@@G@@ILLEGAL CHARS     @D@M@J          IF        \M**1D*/$SS(N,J)  . ILLEGAL SQ
)@@G@@CHAR? @D@@@M          $IF       \M**1D*/$SS(N,J)  . ILLEGAL CHAR? @G@M@JSR
)@@G@@ERM       EQU       'CHARACTER ':$CD(J):' IS ILLEGAL: ''':$SS(N,J):'''' SS
)@@G@@@G@@@MERM       $EQU      'CHARACTER ':$CD(J):' IS ILLEGAL: ''':$SS(N,J)ST
)@@G@@:'''' @D@M@JERR       EQU       1                 . SET ERROR FLAG@D@@@MSU
)@@G@@ERR       $EQU      1                 . SET ERROR FLAG@#@@@J          ENSV
)@@G@@DI    @#@@@J          ENDF    @#@@@J          ENDR    @A@M@J          IFSW
)@@G@@        (\ERR)**(NL>NML)@A@@@M          $IF       (\ERR)**(NL>NML)@F@M@JSX
)@@G@@ERM       EQU       'LENGTH OF ''':N:''' EXCEEDS ALLOWED MAXIMUM' @F@@@MSY
)@@G@@ERM       $EQU      'LENGTH OF ''':N:''' EXCEEDS ALLOWED MAXIMUM' @D@M@JSZ
)@@G@@ERR       EQU       1                 . SET ERROR FLAG@D@@@MERR       $ETA
)@@G@@QU      1                 . SET ERROR FLAG@^@@@J          ELSF      \ERRTB
)@@G@@@E@M@JNAM(NNX)  EQU       (N)[NML>6->'DL'!'SL'] . DEFINE THE NAME @E@@@MTC
)@@G@@NAM(NNX)  $EQU      (N)[NML>6->'DL'!'SL'] . DEFINE THE NAME @^@M@JLEN(NLTD
)@@G@@X)  EQU       NL  @^@@@MLEN(NLX)  $EQU      NL  @#@@@J          ENDF    TE
)@@G@@@E@M@J          ELSE                        . ILLEGAL SIGNAL CHAR @E@@@MTF
)@@G@@          $ELSE                       . ILLEGAL SIGNAL CHAR @D@M@JERM   TG
)@@G@@    EQU       'ILLEGAL SENTINAL: ''':C:''''     @D@@@MERM       $EQU    TH
)@@G@@  'ILLEGAL SENTINAL: ''':C:''''     @^@M@JERR       EQU       1   @^@@@MTI
)@@G@@ERR       $EQU      1   @#@@@J          ENDF    @D@M@J          IF      TJ
)@@G@@  ERR               . ANY ERRORS    @D@@@M          $IF       ERR       TK
)@@G@@        . ANY ERRORS    @D@M@JERR       EQU       'FIELD ':$CD(I):' IN ETL
)@@G@@RROR - '    @D@@@MERR       $EQU      'FIELD ':$CD(I):' IN ERROR - '    TM
)@@G@@@E@@@J          DISPLAY   *ERR[$SL(ERR)+$SL(ERM)>80->','!':']ERM  @#@@@JTN
)@@G@@          ENDF    @#@@@J          ENDR    @ @@@J          GO        ELT$TO
)@@G@@$GEN  @#@M@J          END     @#@@@M          $END    @#@J@I          ENTP
)@@G@@D     @D@M@J          END                         . END DEFINITION@D@@@MTQ
)@@G@@          $END                        . END DEFINITION___@@@>'+'!0)     TR
)@@G@@@E@M@JY         EQU       [(X=0->' '!X):N]  . GET BINARY VALUE    @E@@@MTS
)@@G@@Y         $EQU      [(X=0->' '!X):N]  . GET BINA*[S@@@*SDFF*@#@@@#      TT
)@@G@@    DEF     @ @@@#          LEVEL     0,1,0     @[@@@#.     @#@@@#.   F TU
)@@G@@U N C S .   @[@@@#.     @A@@@#. A COLLECTION OF USEFUL FUNCTIONS. @[@@@#TV
)@@G@@.     @B@@@#. THERE ARE SEVERAL CATAGORIES OF FUNCS.  @[@@@#.     @G@@@#TW
)@@G@@. ADDRESSING  FUNCS:  THESE  FUNCS  OPTIMIZE,  EASE,  AND GENERALIZE THETX
)@@G@@@F@@@#.         EFFORT REQUIRED IN USING OPERANDS IN ADDRESS FIELDS.    TY
)@@G@@@[@@@#.     @^@@@#.    UF   UFIELD FUNC.  @^@@@#.    AF   ADDRESS FUNC. TZ
)@@G@@@C@@@#.    UX   UFIELD WITH XREG REDEFINITION FUNC.   @D@@@#.    COL  COUA
)@@G@@LUMN ADDRESSING FUNC. (ACOL,FCOL ALSO).   @B@@@#.    OLR  OPTIMUM LITERAUB
)@@G@@L REFERENCE FUNC. @D@@@#.    DPLR DOUBLE PRECISION LITERAL REFERENCE FUNUC
)@@G@@C.    @E@@@^.    SRA  SAVED REGISTER ADDRESS (USED WITH 'SAVER' PROC).  UD
)@@G@@@[@@@#.     @E@@@#. BIT FUNCS: THESE FUNCS BUILD BIT MASKS AND BIT SPANSUE
)@@G@@.     @[@@@#.     @A@@@#.    OB   OPTION BIT MASK FUNC.     @A@@@#.    OUF
)@@G@@BL  OPTIONS BIT MASK LITERAL. @G@@@#.    OL   OPTION LETTERS FUNC: GIVENUG
)@@G@@ A WORD OF BITS, RETURNS CHARS.     @B@@@#.    OLL  OPTION LETTERS LITERUH
)@@G@@AL FUNC.    @F@@@#.    OP   GENERALIZED OPTIONS FUNC: IF GIVEN CHARS, REUI
)@@G@@TURNS BITS; @C@@@#.         IF GIVEN WORD OF BITS, RETURNS CHARS. @C@@@#UJ
)@@G@@.    OPL  GENERALIZED OPTIONS LITERAL FUNC.     @F@@@#.    BM   BIT MASKUK
)@@G@@ FUNC: GENERATE VALUE WITH SPECIFIED BITS SET.  @F@@@#.    BS   BIT SPANUL
)@@G@@ FUNC: GENERATE VALUE WITH SPANS OF BITS SET.   @[@@@#.     @G@@@#.     UM
)@@G@@    THERE  ARE 16 BIT MASK OR SPAN FUNCS, THE NAMES ARE ALL OF THE@G@@@#UN
)@@G@@.         GENERAL   FORM:  [C][D]B(S!M)[L]  (THE  '['  ']'  INDICATE  ANUO
)@@G@@@G@@@#.         OPTIONAL CHAR; THE '(' '!' ')' INDICATE AN  ALTERNATIVE)UP
)@@G@@.  THE@G@@@#.         'S'  INDICATES  A  BIT  SPAN, THE 'M' INDICATES A UQ
)@@G@@BIT MASK. IF@G@@@#.         PREFIXED WITH 'C' THE RESULT IS COMPLEMENTEDUR
)@@G@@. IF PREFIXED WITH@G@@@#.         'D' THE RESULT IS FORCED TO DOUBLE PREUS
)@@G@@CISION. IF SUFFIXED WITH@G@@@#.         'L' THE RESULT IS A LITERAL REFEUT
)@@G@@RENCE  TO  THE  VALUE,  RATHER@G@@@#.         THAN  THE  VALUE  ITSELF. UU
)@@G@@ THE 'C' PREFIX MUST PRECEDE THE 'D'@G@@@#.         PREFIX,    IF    BOTUV
)@@G@@H    ARE   GIVEN.  EG:  BS(34)  CBS(12,18)@ @@@#.         CDBML(71,66,35UW
)@@G@@,26). @[@@@#.     @G@@@#. ARITHMETIC  FUNCS:  THESE  FUNCS  PROVIDE ARITUX
)@@G@@HMETIC CAPABILITES OFTEN@D@@@#.         FOUND USEFUL BUT NORMALLY CLUMSYUY
)@@G@@ TO PERFORM.@[@@@#.     @ @@@#.    MOD  COMPUTE MODULO FUNC.@ @@@#.    MUZ
)@@G@@AX  MAXIMUM VALUE FUNC. @ @@@#.    MIN  MINIMUM VALUE FUNC. @ @@@#.    AVA
)@@G@@BS  ABSOLUTE VALUE FUNC.@C@@@#.    DP   DOUBLE PRECISION VALUE TEST FUNCVB
)@@G@@.     @[@@@#.     @G@@@#. EXEC-ASSEMBLY  FUNCS:  THESE FUNCS HELP THE USVC
)@@G@@ER IN INTERFACING TO THE@#@@@#.         EXEC.   @[@@@#.     @D@@@#.    JVD
)@@G@@REG BUILD J-REGISTER INITIALIZATION VALUE FUNC. @B@@@#.    JREGL J-REGISVE
)@@G@@TER INIT LITERAL FUNC.  @B@@@#.    PC   BUILD PRINT CONTROL WORD FUNC.  VF
)@@G@@@C@@@#.    PCL  BUILD PRINT CONTROL WORD LITERAL FUNC.@[@@@#.     @G@@@#VG
)@@G@@. FIELD FUNCS:  THESE  FUNCS PROVIDE THE CAPABILITIES OF EASILY CREATINGVH
)@@G@@@G@@@#.         VALUES IN SPECIFIED FIELDS WITHIN  WORDS,  EXTRACTING  VVI
)@@G@@ALUES,@G@@@#.         AND IN GENERAL, MANIPULATING FIELDS. THE FIELDS NEVJ
)@@G@@ED NOT BE ON@B@@@#.         COMMON PARTWORD BOUNDARIES.     @[@@@#.     VK
)@@G@@@ @@@#.    FLD  DEFINE FIELD FUNC.  @A@@@#.    HB   HIGH BIT OF FIELD FUVL
)@@G@@NC.   @A@@@#.    LB   LOW BIT OF FIELD FUNC.    @ @@@#.    FS   FIELD SIVM
)@@G@@ZE FUNC.    @A@@@#.    FSL  FIELD SIZE LITERAL FUNC.  @ @@@#.    FBM  FIVN
)@@G@@ELD BIT MASK FUNC.@B@@@#.    FBML FIELD BIT MASK LITERAL FUNC.    @C@@@#VO
)@@G@@.    CFBM COMPLEMENTED FIELD BIT MASK FUNC.     @D@@@#.    CFBML COMPLEMVP
)@@G@@ENTED FIELD BIT MASK LITERAL FUNC.  @ @@@#.    RF   RELATIVE FIELD FUNC.VQ
)@@G@@@A@@@#.    RV   RELATIVIZED VALUE FUNC.   @B@@@#.    RVL  RELATIVIZED VAVR
)@@G@@LUE LITERAL FUNC. @C@@@#.    RRV  RELATIVIZED RELOCATABLE VALUE FUNC.   VS
)@@G@@@D@@@#.    RRVL RELATIVIZED RELOCATABLE VALUE LITERAL FUNC  @[@@@#.     VT
)@@G@@@G@@@#. ASSEMBLER:  THESE  FUNCS ARE USEFUL MOSTLY TO OTHER PROCS/FUNCS VU
)@@G@@IN THE@E@@@#.         EVALUATION OF OPERANDS FOR ASSEMBLY-TIME ACTION.  VV
)@@G@@@[@@@#.     @B@@@#.    ICF  COMPUTE IDENTIFIER CLASS FUNC.  @B@@@#.    CVW
)@@G@@IF  CONTROL INFORMATION FLAG FUNC.  @A@@@#.    CIN  CONTROL INFORMATION VX
)@@G@@NAME. @D@@@#.    NRI  COMPUTE NUMBER OF RELOCATABLE ITEMS FUNC.   @E@@@#VY
)@@G@@.    VAL$ EVALUATE A SYMBOL AT THE MAIN ASSEMBLY LEVEL.     @F@@@#.    EVZ
)@@G@@VAL EVALUATE A SYMBOL (IN QUOTES) OUTSIDE THE CURRENT LEVEL.@D@@@#.    EWA
)@@G@@DITV EDIT A STRING REPRESENTATION OF ANY VALUE. @E@@@#.    EDEC EDIT A DWB
)@@G@@ECIMAL REPRESENTATION OF A BINARY VALUE.  @E@@@#.    EOCT EDIT AN OCTAL WC
)@@G@@REPRESENTATION OF A BINARY VALUE.   @F@@@#.    EHEX EDIT A HEXADECIMAL RWD
)@@G@@EPRESENTATION OF A BINARY VALUE.    @D@@@#.    E$L0 EDIT A STRING REPRESWE
)@@G@@ENTATION OF A $L0 LIST. @D@@@#.    E$L1 EDIT A STRING REPRESENTATION OF WF
)@@G@@A $L1 LIST. @E@@@#.    E$L  EDIT A STRING REPRESENTATION OF ANY ARBITARYWG
)@@G@@ LIST.@E@@@#.    ELIST SAME AS E$L WITHOUT PARENTHESES IN THE STRING.   WH
)@@G@@@A@@@#.    EPPL EDIT A PROC PARAFORM LIST.@A@@@#.    EFPL EDIT A FUNC PAWI
)@@G@@RAFORM LIST.@F@@@#.    EWLF EDIT THE WAITING LABEL FIELD OF THE CURRENT WJ
)@@G@@PROC CALL.  @D@@@#.    ESTR EDIT A STRING IN QUOTES OF A STRING VALUE.  WK
)@@G@@@E@@@#.    EREG EDIT A REGISTER MNEMONIC FROM A BINARY VALUE.     @[@@@#WL
)@@G@@.     @B@@@#. ALAN STEBBENS, YFNSS UOMCSC, 03/07/78   @^@@@#. LAST UPDATWM
)@@G@@E 02/26/79  @[@@@#/     @B@@@#.   A D D R E S S I N G   F U N C S .     WN
)@@G@@@[@@@#.     @[@@@#.     @D@@@#. UX      UFIELD WITH X & J REPLACEMENT ONWO
)@@G@@ I$ FORMS.  @[@@@#.     @G@@@#.         THIS  FUNC  REMOVES  ANY  XREG VWP
)@@G@@ALUE AND INCREMENT BIT FROM AN@G@@@#.         EQUF DEFINED TAG OR I$ FORWQ
)@@G@@MED VALUE, AND REPLACES IT WITH  THE@G@@@#.         VALUE  OF ITS SECONDWR
)@@G@@ ARGUMENT. THE THIRD ARGUMENT MAY BE GIVEN@C@@@#.         TO REPLACE ANYWS
)@@G@@ PARTWORD DESIGNATOR.   @#@@@#.         GIVEN:  @[@@@#.     @B@@@#.     WT
)@@G@@    TAG     EQUF      *ADDR,*X2,S3. @[@@@#.     @E@@@#.         THEN THEWU
)@@G@@ FOLLOWING THREE CALLS ARE EQUIVALENT:    @[@@@#.     @B@@@#.           WV
)@@G@@      LA        A0,UX(TAG,X3) @B@@@#.                 LA        A0,UX(TAWW
)@@G@@G),X3 @B@@@#.                 LA        A0,*ADDR,X3,S3@[@@@#.     @D@@@#WX
)@@G@@.         AND THE FOLLOWING TWO CALLS ARE EQUIVALENT: @[@@@#.     @B@@@#WY
)@@G@@.                 LA        A0,UX(TAG,,S4)@B@@@#.                 LA    WZ
)@@G@@    A0,*ADDR,,S4  @[@@@#.     @G@@@#.         NOTE:  LA  A0,UX(TAG),,S4 XA
)@@G@@ WOULD  NOT WORK BECAUSE UX DOES NOT@G@@@#.         REMOVE ANY PARTWORD XB
)@@G@@DESIGNATORS UNLESS  A  THIRD  ARGUMENT  IS@#@@@#.         GIVEN.  @[@@@#XC
)@@G@@.     @#@@@#UX*       FUNC    @B@@@#A         EQU       [UX(*1)->'*']UX(XD
)@@G@@1)    @C@@@#J         EQU       UX>2->UX(3)!RV(A,FLD(29,26))@F@@@#A     XE
)@@G@@    EQUF      RRV(A,FLD(17,0)),UX>1->[UX(*2)->'*']UX(2),J   @^@@@#      XF
)@@G@@    END       A   @[@@@#.     @F@@@#. FCOL    FIELDATA COLUMN FUNC: COMPXG
)@@G@@UTE WORD AND CHAR OFFSET.     @ @@@#. ACOL    ASCII COLUMN FUNC.  @G@@@#XH
)@@G@@. COL     GENERAL COLUMN FUNC: COMPUTE EITHER ASCII OR FDATA COLUMN.    XI
)@@G@@@[@@@#.     @G@@@#.         SA        A0,IMAGE+FCOL(21) . STASH FDATA CHXJ
)@@G@@AR AT COLUMN 21.  @G@@@#.         SA        A0,IMAGE+ACOL(18) . STASH ASXK
)@@G@@CII CHAR AT COLUMN 18.  @F@@@#.         SA        A0,IMAGE+COL(4)   . STXL
)@@G@@ASH IN EITHER S4 OR Q4. @[@@@#.     @#@@@#F         FUNC    @#@@@#COL*  XM
)@@G@@    NAME    @A@@@#F(0)      EQU       $TMODES**1->4!6 @^@@@#FCOL*     NAXN
)@@G@@ME      6   @^@@@#ACOL*     NAME      4   @A@@@#W         EQU       (F(1XO
)@@G@@)-1)/F(0)   @A@@@#C         EQU       F(1)-F(0)*W     @D@@@#          ENXP
)@@G@@D       W+(I$ ,F(0)=4->7-C/2-2*(C=2)!14-C)@[@@@#.     @A@@@#. AF      GEXQ
)@@G@@NERALIZED ADDRESS FUNC. @[@@@#.     @G@@@#.         AF(<P FIELD>,<P SUBFXR
)@@G@@IELD NUMBER>,<MAX NUMBER OF SUBFIELDS>)   @[@@@#.     @G@@@#.         IFXS
)@@G@@  THE  SECOND ARG IS STARRED, A DEFAULT J DESIGNATOR OF U OR@G@@@#.     XT
)@@G@@    XU WILL BE INCLUDED. THE THIRD ARGUMENT IS  OPTIONAL.  EG:  IF@E@@@#XU
)@@G@@.         E$DECF USED THIS FUNC, IT COULD DO THE FOLLOWING: @[@@@#.     XV
)@@G@@@A@@@#.                 E$DECF    6,0,A0,U@[@@@#.     @A@@@#.         P XW
)@@G@@      PROC      *1.     @^@@@#.         E$DECF* NAME. @D@@@#.           XX
)@@G@@      DO P(1)>0 , LA A1,AF(P(1),*1,1)     @C@@@#.                 DO P(1XY
)@@G@@)>1 , LA A0,AF(P(1),2)  @B@@@#.                 LMJ       X11,EDECF$    XZ
)@@G@@@ @@@#.                 END       . @[@@@#.     @#@@@#AF*       FUNC    YA
)@@G@@@ @@@#S         EQU       AF(2)     @A@@@#          DO S>0 ,AF(1,0) DELEYB
)@@G@@TE    @B@@@#M         EQU       S+(AF>2->AF(3)!3)-1   @B@@@#V         EQYC
)@@G@@U       [AF(1,*S)->'*']AF(1,S)@ @@@#AV        EQU       $AP(V)    @H@@@#YD
)@@G@@A         EQUF      V,M>S<AF(1)->[AF(1,*S+1)->'*']AF(1,S+1),M>S+1<AF(1)-YE
)@@G@@>;    @F@ @#                    AF(1,S+2)!AF(*2)->AV**017*/26=0->AV<0->1YF
)@@G@@5!14!0@H@@@                     AF(1,S+2)!AF(*2)->$BA(V)(0)->AV**017*/26YG
)@@G@@=0->15!0!15!0     @^@@@#          END       A   @[@@@#.     @H@@@#. UF  YH
)@@G@@    UFIELD  FUNC:  GENERATES  AN  OPTIMUM  REFERENCE  TO  A UFIELD.     YI
)@@G@@@G@@@#.         OPERAND. ALSO HANDLE RELOCATABLE  ITEM  REFERENCES  CORRYJ
)@@G@@ECTLY.@#@@@#.         IE:     @[@@@#.     @A@@@#.         LA        A0,UYK
)@@G@@F(<VALUE>)  @[@@@#.     @G@@@#.         IF  <VALUE>  WILL  FIT INTO 18 BYL
)@@G@@ITS, THEN AN IMMEDIATE U-FIELD@G@@@#.         REFERENCE WILL BE MADE (LAYM
)@@G@@,U-OR-XU A0,<VALUE>),  OTHERWISE,  A@E@@@#.         LITERAL REFERENCE ISYN
)@@G@@ MADE (LA A0,(<VALUE>) ).     @[@@@#.     @#@@@#UF*       FUNC    @B@@@#YO
)@@G@@A         EQU       [UF(*1)->'*']UF(1)    @ @@@#B         EQU       $BA(YP
)@@G@@A)    @#@@@#B(0)      DELETE  @H@@@#          DO        B=1->B(1,2)->1!$YQ
)@@G@@TSTR(B(1,3))->\UF(*1)!0!B>1 , END (A)     @ @@@#B         EQU       $AP(YR
)@@G@@A)    @ [@@#M         EQU       0777777   @D@@@#          DO        \(-1YS
)@@G@@*/17<B<M->B<>-0) , END (A)    @A@@@#B         $EQUF     A,,B<0->15!14   YT
)@@G@@@^@@@#          END       B   @[@@@#.     @A@@@#. OLR     OPTIMUM LITERAYU
)@@G@@L REFERENCE.@D@@@#. DPLR    OPTIMUM DOUBLE PRECISION LITERAL REFERENCE. YV
)@@G@@@#@@@#.         EG:     @[@@@#.     @C@@@#.         OLR(1,0)  IS EQUIVALYW
)@@G@@ENT TO UF(+(1,0)).@G@@@#.         DPLR(A,B,C,D) IS EQUIVALENT TO (GFORM YX
)@@G@@18,A,18,B,18,C,18,D).   @[@@@#.     @[@@@#.     @#@@@#F         FUNC    YY
)@@G@@@^@@@#OLR*      NAME      36  @^@@@#DPLR*     NAME      72  @ @@@#V     YZ
)@@G@@    EQU       F(0)/(F-1)@A@@@#FF        FORM      V[$SR(',V',F-2)]@ @@@#ZA
)@@G@@V         EQU       'F(1)'    @C@@@#I         DO F-2 ,V EQU V:',F(':$CD(ZB
)@@G@@I+1):')'    @D@@@#          END       F(0)=72->(FF [V])!UF(+(FF [V]))   ZC
)@@G@@@[@@@^.     @A@@@^. SRA     SAVED REGISTER ADDRESS.   @[@@@^.     @G@@@^ZD
)@@G@@.         THIS  FUNC IS USED IN CONJUNCTION WITH THE 'SAVER' AND 'LOADR'ZE
)@@G@@@#@@@^.         PROCS.  @[@@@^.     @ @@@^.         SRA(<LABEL>,<REG>)  ZF
)@@G@@@[@@@^.     @G@@@^.         WHERE  <LABEL> IS THE LABEL USED ON THE 'SAVZG
)@@G@@ER' PROC CALL FROM@G@@@^.         WHICH THE ADDRESS OF REGISTER <REG> ISZH
)@@G@@  TO  BE  OBTAINED.  FOR@#@@@^.         EXAMPLE:@[@@@^.     @A@@@^.     ZI
)@@G@@    REGS    SAVER   X11,A5    @[@@@^.     @B@@@^.         REGA0   EQU   ZJ
)@@G@@  SRA(REGS,A0)    @[@@@^.     @G@@@^.         REGA0 WILL BE EQUATED TO TZK
)@@G@@HE ADDRESS WHERE REGISTER A0 WILL BE@D@@@^.         SAVED AFTER EXECUTIOZL
)@@G@@N OF THE 'SAVER' CODE.  @[@@@^.     @#@@@^F         FUNC    @#@@@^SRA*  ZM
)@@G@@    NAME    @I@@@^RA        EQU       SV$$T($BA(F(1))(1,3),$AP(F(1)),F(2ZN
)@@G@@)) . GET THE REGISTER ADDR    @E@@@^          $DO       RA=0 , ;        ZO
)@@G@@  . CHECK FOR ERRORS    @G@@@^          $DISPLAY,1 'REGISTER ':EREG(F(2)ZP
)@@G@@):' NOT SAVED AT ':EDITV(F(1))@G@@@^          $END      RA              ZQ
)@@G@@  . RETURN THE REGISTER ADDRESS     @[@@@^.     @[@@@#/     @^@@@#.   B ZR
)@@G@@I T   F U N C S . @[@@@#.     @[@@@#.     @D@@@#. BS      BIT SPAN FUNC:ZS
)@@G@@ GENERATES SPANS OF BITS.     @A@@@#. BSL     BIT SPAN LITERAL FUNC.    ZT
)@@G@@@E@@@#. DBS     DOUBLE PRECISION BIT SPAN: ALWAYS FORCES 2 WORDS. @C@@@#ZU
)@@G@@. DBSL    DOUBLE PRECISION BIT SPAN LITERAL.    @[@@@#.     @B@@@#. CBS ZV
)@@G@@    COMPLEMENTED BIT SPAN FUNC.     @C@@@#. CBSL    COMPLEMENTED BIT SPAZW
)@@G@@N LITERAL FUNC.   @D@@@#. CDBS    COMPLEMENTED DOUBLE PRECISION BIT SPANZX
)@@G@@.     @E@@@#. CDBSL   COMPLEMENTED DOUBLE PRECISION BIT SPAN LITERAL.   ZY
)@@G@@@[@@@#.     @B@@@#.          BS(35,18,11,6)=0777777007700 . @B@@@#.     ZZ
)@@G@@    CBS(35,18,11,6)=0000000770077 . @[@@@#.     @#@@@#F         FUNC    AA
)@@G@@@^@@@#BS*       NAME      'B' @ @@@#BSL*      NAME      'UF(B)'   @^@@@#AB
)@@G@@DBS*      NAME      'B'D@ @@@#DBSL*     NAME      '(B)'D    @^@@@#CBS*  AC
)@@G@@    NAME      *'B'@ @@@#CBSL*     NAME      *'UF(B)'  @ @@@#CDBS*     NAAD
)@@G@@ME      *'B'D     @ @@@#CDBSL*    NAME      *'(B)'D   @^[@@#B         EQAE
)@@G@@U       0D  @E@@@#I         DO 1,F-1,2 ,B EQU B++(1*/(F(I)+(F(I)>F(I+1))AF
)@@G@@)-1--;@G@@@#                    1*/(F(I+1)+(F(I+1)>F(I)))-1--(F(I)=71->1AG
)@@G@@!F(I+1)=71))@C@@@#D         EQU       $IBITS(F(0))**2->1!DP(B)    @F@@@#AH
)@@G@@B         EQU       (B)[F(*0)->D->'---0D'!'S--1*/36-1'!D->'D'!'S']@ @@@#AI
)@@G@@          END       [F(0)]    @[[@@#.     @F@@@#. BM      BIT MASK FUNC:AJ
)@@G@@ GENERATE A WORD WITH SPECIFIED BITS SET. @F@@@#. BML     BIT MASK LITERAK
)@@G@@AL FUNC: GENERATE AN OPTIMUM REFERENCE.   @D@@@#. DBM     DOUBLE PRECISIAL
)@@G@@ON BIT MASK FUNC: ALWAYS.     @D@@@#. DBML    DOUBLE PRECISION BIT MASK AM
)@@G@@LITERAL FUNC.     @[@@@#.     @F@@@#. CBM     COMPLEMENTED BIT MASK FUNCAN
)@@G@@: SETS BITS NOT SPECIFIED.    @C@@@#. CBML    COMPLEMENTED BIT MASK LITEAO
)@@G@@RAL FUNC.   @D@@@#. CDBM    COMPLEMENTED DOUBLE PRECISION BIT MASK FUNC.AP
)@@G@@@F@@@#. CDBML   COMPLEMENTED DOUBLE PRECISION BIT MASK LITERAL FUNC.    AQ
)@@G@@@[@@@#.     @C@@@#.         MASK    EQU       BM(24,25,31)      . @[@@@#AR
)@@G@@.     @F@@@#.                 LA        A0,BML(29,30)     . GET BITS 29,AS
)@@G@@30.   @[@@@#.     @#@@@#F         FUNC    @^@@@#BM*       NAME      'A' AT
)@@G@@@ @@@#BML*      NAME      'UF(A)'   @^@@@#DBM*      NAME      'A'D@ @@@#AU
)@@G@@DBML*     NAME      '(A)'D    @^@@@#CBM*      NAME      *'A'@ @@@#CBML* AV
)@@G@@    NAME      *'UF(A)'  @ @@@#CDBM*     NAME      *'A'D     @ @@@#CDBML*AW
)@@G@@    NAME      *'(A)'D   @ [@@#A         EQU       1*/F(1)   @A@@@#I     AX
)@@G@@    DO 2,F-1 ,A EQU A++1*/F(I)@C@@@#D         EQU       $IBITS(F(0))**2-AY
)@@G@@>1!DP(A)    @F@@@#A         EQU       (A)[F(*0)->D->'---0D'!'S--1*/36-1'AZ
)@@G@@!D->'D'!'S']@ @@@#          END       [F(0)]    @[[@@#.     @H@@@#. OB  BA
)@@G@@    OPTION  BITS: GENERATES BITS IN MASTER BIT NOTATION FOR OPTION.     BB
)@@G@@@#@@@#.         LETTERS.@[@@@#.     @H@@@#. OBL     OPTION BITS LITERAL:BC
)@@G@@ GENERATES AN OPTIMUM REFERENCE TO THE BIT.     @#@@@#.         MASK.   BD
)@@G@@@[@@@#.     @G@@@#.                 LA        A0,OBL('IU')      . GET I BE
)@@G@@U OPTION BITS.    @[@@@#.     @#@@@#F         FUNC    @A@@@#OB*       NABF
)@@G@@ME      'B**1*/26-1'    @A@@@#OBL*      NAME      'UF(B**1*/26-1)'@^[@@#BG
)@@G@@A         EQU       F(1)@^@@@#B         EQU       0   @C@@@#I         DOBH
)@@G@@ $SL(A) ,B EQU B++1*/('Z'-$SS(A,I)) @ @@@#          END       [F(0)]    BI
)@@G@@@[[@@#.     @H@@@#. OL      OPTION  LETTERS FUNC: RETURNS STRING OF OPTIBJ
)@@G@@ON CHARS SPECIFIED.     @A@@@#.         BY BITS IN ARGUMENT VALUE.@[@@@#BK
)@@G@@.     @B@@@#. OLL     OPTION LETTERS LITERAL FUNC.    @[@@@#.     @#@@@#BL
)@@G@@F         FUNC    @^@@@#OL*       NAME      'A' @ @@@#OLL*      NAME    BM
)@@G@@  'UF(A)'   @^[@@#B         EQU       F(1)@^@@@#A         EQU       ''  BN
)@@G@@@D@@@#I         DO 25,0,-1 , DO B*/-I**1 ,A EQU A:'Z'-I     @ @@@#      BO
)@@G@@    END       [F(0)]    @[[@@#.     @H@@@#. OP      GENERALIZED  OPTIONSBP
)@@G@@ FUNC: GIVEN STRINGS OF OPTION LETTERS, IT.     @G@@@#.         WILL RETBQ
)@@G@@URN A VALUE WITH CORRESPONDING OPTION BITS SET;  GIVEN@G@@@#.         A BR
)@@G@@ WORD  OF  BITS  IT  WILL  RETURN A STRING OF OPTION LETTERS@C@@@#.     BS
)@@G@@    CORRESPONDING TO THE BITS IN THE WORD.@C@@@#. OPL     GENERALIZED OPBT
)@@G@@TIONS LITERAL FUNC.     @[@@@#.     @#@@@#F         FUNC    @^@@@#OP*   BU
)@@G@@    NAME      'A' @ @@@#OPL*      NAME      'UF(A)'   @D[@@#A         EQBV
)@@G@@U       [$TSTR(F(1))->'OB'!'OL'](F(1))    @ @@@#          END       [F(0BW
)@@G@@)]    @[[@@#.     @H@@@#. GBM     GENERALIZED  BIT  MASK FUNC: TAKES STRBX
)@@G@@INGS OF CHARS OR NUMBERS.     @#@@@#.         OR BOTH.@C@@@#. GBML    GEBY
)@@G@@NERALIZED BIT MASK LITERAL FUNC.    @[@@@#.     @ @@@#.         IE:   GBBZ
)@@G@@M('CR',30). @[@@@#.     @#@@@#F         FUNC    @^@@@#GBM*      NAME    CA
)@@G@@  'A' @ @@@#GBML*     NAME      'UF(A)'   @^[@@#A         EQU       0   CB
)@@G@@@E@@@#I         DO F-1 ,A EQU A++[$TSTR(F(I))->'OB'!'BM'](F(I))   @ @@@#CC
)@@G@@          END       [F(0)]    @[[@@#/     @ @@@#.   F I E L D   F U N C CD
)@@G@@S .   @[@@@#.     @[@@@#.     @A@@@#. FLD     FIELD DEFINITION FUNC.    CE
)@@G@@@[@@@#.     @G@@@#.         IF  TWO  ARGUMENTS  ARE  GIVEN,  THEN THEY ACF
)@@G@@RE THE HIGHEST AND@G@@@#.         LOWEST BITS OF THE FIELD BEING DEFINEDCG
)@@G@@.  IF  ONE  ARGUMENT  IS@G@@@#.         GIVEN, THEN IT MAY BE EITHER A PCH
)@@G@@ARTWORD DESIGNATOR, OR A FIELD@G@@@#.         DEFINITION  VALUE OF THE FCI
)@@G@@ORM: <HIGHBIT>*/6+<LOWBIT> (WHICH IS@G@@@#.         RETURNED AS THE RESUCJ
)@@G@@LT). THIS FUNC IS USED BY ALL OF THE FIELD@G@@@#.         MANIPULATION FCK
)@@G@@UNCS FOLLOWING. IF ONE ARGUMENT  IS  GIVEN,  AND@G@@@#.         ITS VALUCL
)@@G@@E IS 5, 6, OR 7 AND IT IS STARRED, THEN IT INDICATES A@G@@@#.         THCM
)@@G@@IRDWORD, OTHERWISE IT CORRESPONDS TO A QUARTER WORD VALUE.  @[@@@#.     CN
)@@G@@@C@@@#.         EG: FLD(S1) DEFINES THE FIELD FOR S1. @E@@@#.         FLCO
)@@G@@D(27,22) DEFINES THE FIELD FOR BITS 27 THRU 22. @[@@@#.     @#@@@#F     CP
)@@G@@    FUNC    @#@@@#FLD*      NAME    @B@@@#          END       F=3->F(1)*CQ
)@@G@@/6+F(2)!;   @G@@@#                    F(1)<0100->J$F$(F(1)+(4<=F(1)<=7->CR
)@@G@@F(*1)*/5!0))!F(1) @[@@@# .    @G@@@# . DEFINE J$F$ TABLE FOR FIELD DEFINCS
)@@G@@ITIONS OF THE STANDARD PARTWORDS    @[@@@# .    @F@@@# . IF QWRD IS SET CT
)@@G@@TO 1, STARRED PARTWORDS WILL RETURN THIRD WORD  @F@@@# . DEFINITIONS. IFCU
)@@G@@ QWRD IS SET TO 0, STARRED PARTWORDS WILL RETURN@ @@@# . QUARTER WORD DECV
)@@G@@FINITIONS.  @[@@@# .    @[@@@# .    @^@@@#QWRD      EQU       1   @[@@@#CW
)@@G@@ .    @^@@@#BIAS      EQU       040 @ @@@#QWRD      EQU       BIAS*QWRD CX
)@@G@@@B@@@#J$F$(0)   EQU       FLD(35,0)         . W @B@@@#J$F$(1)   EQU     CY
)@@G@@  FLD(17,0)         . H2@B@@@#J$F$(2)   EQU       FLD(35,18)        . H1CZ
)@@G@@@C@@@#J$F$(3)   EQU       FLD(17,0)         . XH2     @B@@@#J$F$(4+QWRD)DA
)@@G@@ EQU    FLD(26,18)        . Q2@C@@@#J$F$(4+BIAS-QWRD) EQU FLD(35,18)    DB
)@@G@@  . XH1     @B@@@#J$F$(5+QWRD) EQU    FLD(8,0)          . Q4@B@@@#J$F$(5DC
)@@G@@+BIAS-QWRD) EQU FLD(12,0)       . T3@B@@@#J$F$(6+QWRD) EQU    FLD(17,9) DD
)@@G@@        . Q3@B@@@#J$F$(6+BIAS-QWRD) EQU FLD(23,12)      . T2@B@@@#J$F$(7DE
)@@G@@+QWRD) EQU    FLD(35,27)        . Q1@B@@@#J$F$(7+BIAS-QWRD) EQU FLD(35,2DF
)@@G@@4)      . T1@B@@@#J$F$(010) EQU       FLD(5,0)          . S6@B@@@#J$F$(0DG
)@@G@@11) EQU       FLD(11,6)         . S5@B@@@#J$F$(012) EQU       FLD(17,12)DH
)@@G@@        . S4@B@@@#J$F$(013) EQU       FLD(23,18)        . S3@B@@@#J$F$(0DI
)@@G@@14) EQU       FLD(29,24)        . S2@B@@@#J$F$(015) EQU       FLD(35,30)DJ
)@@G@@        . S1@#@@@#QWRD      DELETE  @#@@@#BIAS      DELETE  @[@@@#.     DK
)@@G@@@G@@@#. HB      HIGH BIT FUNC: EXTRACT HIGH BIT, SAME ARGUMENTS AS IN FLDL
)@@G@@D.    @F@@@#. LB      LOW BIT FUNC: EXTRACT LOW BIT, SAME ARGUMENTS AS IDM
)@@G@@N FLD.@[@@@#.     @C@@@#.         HB(H1)=35  LB(H1)=18  HB(29,26)=29.   DN
)@@G@@@[@@@#.     @#@@@#F         FUNC    @^@@@#HB*       NAME      6   @^@@@#DO
)@@G@@LB*       NAME      0   @C@@@#A         EQU       FLD(F(1)[F>2->',F(2)']DP
)@@G@@)     @A@@@#          END       077**A*/-F(0)   @[@@@#.     @E@@@#. FS  DQ
)@@G@@    FIELD SIZE FUNC: RETURN SIZE OF DEFINED FIELD.    @[@@@#.     @C@@@#DR
)@@G@@.         FS(H1)=18  FS(S2)=6  FS(29,26)=4.     @[@@@#.     @#@@@#F     DS
)@@G@@    FUNC    @#@@@#FS*       NAME    @C@@@#A         EQU       FLD(F(1)[FDT
)@@G@@>2->',F(2)'])     @A@@@#          END       HB(A)-LB(A)+1   @[@@@#.     DU
)@@G@@@F@@@#. FBM     FIELD BIT MASK FUNC: RETURN BITS SET IN DEFINED FIELD.  DV
)@@G@@@C@@@#. CFBM    COMPLEMENTED FIELD BIT MASK FUNC.     @[@@@#.     @A@@@#DW
)@@G@@.         FBM(H1)=0777777000000.    @A@@@#.         FBM(S2)=007700000000DX
)@@G@@.     @A@@@#.         FBM(29,26)=007400000000.  @A@@@#.         CFBM(H1)DY
)@@G@@=0000000777777.   @A@@@#.         CFBM(S2)=770077777777.    @A@@@#.     DZ
)@@G@@    CFBM(29,26)=770377777777. @[@@@#.     @#@@@#F         FUNC    @^@@@#EA
)@@G@@FBM*      NAME      'BS'@ @@@#CFBM*     NAME      'CBS'     @C@@@#A     EB
)@@G@@    EQU       FLD(F(1)[F>2->',F(2)'])     @B@@@#          END       [F(0EC
)@@G@@)](HB(A),LB(A))   @[@@@#.     @G@@@#. RF      RELATIVE  FIELD  FUNC:  ADED
)@@G@@JUST  1ST FIELD DEFN RELATIVE TO 2ND@G@@@#.         FIELD. RESULTS ARE MEE
)@@G@@EANINGFUL  ONLY  IF  THE  1ST  FIELD  LIES@ @@@#.         WITHIN THE 2NDEF
)@@G@@.     @[@@@#.     @E@@@#.         RF(S1,H1)=FLD(17,12)  RF(FLD(29,26),H1EG
)@@G@@)=FLD(11,8).@[@@@#.     @#@@@#RF*       FUNC    @F@@@#          END     EH
)@@G@@  FLD(HB(RF(1))-LB(RF(2)),LB(RF(1))-LB(RF(2)))  @[@@@#.     @G@@@#. RV  EI
)@@G@@    RELATIVIZED VALUE FUNC: ADJUST & EXTRACT VALUE FROM A FIELD.  @H@@@#EJ
)@@G@@.         THIS FUNC RETURNS ONLY BINARY VALUES. IF RELOCATABLE VALUES AREK
)@@G@@E     @F@@@#.         EXPECTED AND ARE TO BE RETAINED, USE THE FUNC 'RRVEL
)@@G@@'.    @[@@@#.     @F@@@#.         RV(0123456,S5)=034  RV(+(LA,S2 A0,ADDREM
)@@G@@),FLD(29,26))=S2. @[@@@#.     @#@@@#RV*       FUNC    @ @@@#V         EQEN
)@@G@@U       $AP(RV(1))@E@@@#          END       V*/-LB(RV(2))**FBM(RF(RV(2),EO
)@@G@@RV(2)))     @[@@@#.     @G@@@#. RRV     RELATIVIZED  RELOCATABLE  VALUE EP
)@@G@@ FUNC:  EXTRACT A VALUE FROM A@G@@@#.         FIELD WHICH MAY HAVE RELOCEQ
)@@G@@ATABLE ITEMS WITHIN  IT,  AND  RIGHT@^@@@#.         JUSTIFY IT.   @[@@@#ER
)@@G@@.     @G@@@#.                   RRV(+(A,B),H1)=A   RRV(+(LA,S2 A0,ADDR),ES
)@@G@@H2)=ADDR.   @[@@@#.     @#@@@#F         FUNC    @^@@@#RRV*      NAME    ET
)@@G@@  .   @E@@@#FD        EQU       FLD(F(2))         . DEFINE THE FIELD    EU
)@@G@@@F@@@#V         EQU       RV(F(1),FD)       . GET THE ABSOLUTE VALUE    EV
)@@G@@@D@@@#H         EQU       HB(FD)            . HIGHEST BIT   @D@@@#L     EW
)@@G@@    EQU       LB(FD)            . LOWEST BIT    @F@@@#B         EQU     EX
)@@G@@  $BA(F(1))         . GET THE BINARY ATTRIBUTES @F@@@#I         DO      EY
)@@G@@  B-(B(0)>0) , ;    . FOR EVERY RELOCATABLE ITEM@H@@@#          DO      EZ
)@@G@@  (B(I,1)<=H)**(B(I,2)>=L) ,; . THAT IS IN THE DESIRED FIELD@E@@@#V     FA
)@@G@@    EQU       V+($GFORM B(I,1)-B(I,2)+1,; . FIELD SIZE@H@@@#          [BFB
)@@G@@(I,*3)->'-'!'+'][$TBIN(B(I,3))->'$LCB'!'VAL$'](B(I,3)),B(I,2)-L,0)@^@@@#FC
)@@G@@          END       V   @[@@@#.     @A@@@#. FSL     FIELD SIZE LITERAL FFD
)@@G@@UNC.  @B@@@#. RVL     RELATIVIZED VALUE LITERAL FUNC. @D@@@#. RRVL    REFE
)@@G@@LATIVIZED RELOCATABLE VALUE LITERAL FUNC. @A@@@#. FBML    FIELD BIT MASKFF
)@@G@@ LITERAL.   @C@@@#. CFBML   COMPLEMENTED FIELD BIT MASK LITERAL.  @[@@@#FG
)@@G@@.     @#@@@#F         FUNC    @^@@@#FSL*      NAME      'FS'@ @@@#FBML* FH
)@@G@@    NAME      'FBM'     @ @@@#CFBML*    NAME      'CFBM'    @D@@@#      FI
)@@G@@    END       UF([F(0)](F(1)[F=3->',F(2)']))    @#@@@#F         FUNC    FJ
)@@G@@@^@@@#RVL*      NAME      'RV'@ @@@#RRVL*     NAME      'RRV'     @B@@@#FK
)@@G@@          END       UF([F(0)](F(1),F(2))) @[@@@#.     @[[@@#/     @B@@@#FL
)@@G@@.   A R I T H M E T I C   F U N C S .     @[@@@#.     @[@@@#.     @^@@@#FM
)@@G@@. MOD     MOD FUNCTION. @[@@@#.     @#@@@#MOD*      FUNC    @C@@@#      FN
)@@G@@    END       MOD(1)-MOD(1)/MOD(2)*MOD(2) @[@@@#.     @B@@@#. MAX     REFO
)@@G@@TURN MAXIMUM VALUE AMONG ARGS.@C@@@#. MIN     RETURNS MINIMUM VALUE AMONFP
)@@G@@G ARGS.     @[@@@#.     @B@@@#.         MAX(3.14156,2.71828,9.87)=9.87  FQ
)@@G@@@C@@@#.         MIN(3.14156,2.71828,9.87)=2.71828     @[@@@#.     @#@@@#FR
)@@G@@F         FUNC    @^@@@#MAX*      NAME      '<' @^@@@#MIN*      NAME    FS
)@@G@@  '>' @^@@@#A         EQU       F(1)@C@@@#I         DO 2,F-1 , DO A[F(0)FT
)@@G@@]F(I) ,A EQU F(I) @^@@@#          END       A   @[@@@#.     @A@@@#. ABS FU
)@@G@@    COMPUTE ABSOLUTE VALUE.   @[@@@#.     @#@@@#ABS*      FUNC    @D@@@#FV
)@@G@@          END       [$IBITS(ABS(1))**4->'-']ABS(1)    @[@@@#.     @E@@@#FW
)@@G@@. DP      DOUBLE PRECISION TEST FUNC: TESTS VALUE ONLY.     @[@@@#.     FX
)@@G@@@#@@@#DP*       FUNC    @C@@@#          END       DP(1)**(1*/36-1)*/36<>FY
)@@G@@0     @[@@@#.     @[@@@#/     @C@@@#.   E X E C - A S S E M B L Y   F U FZ
)@@G@@N C S .     @[@@@#.     @[@@@#.     @B@@@#. JREG    J-REGISTER INITIALIZGA
)@@G@@ATION FUNC. @B@@@#. JREGL   J-REGISTER INIT LITERAL FUNC.   @[@@@#.     GB
)@@G@@@G@@@#.         THIS  FUNC  IS  USED  TO  GENERATE  A  J-REGISTER  WORD GC
)@@G@@   FOR@G@@@#.         1100/10-20-40-80  CHARACTER  ADDRESSING  OR BYTE IGD
)@@G@@NSTRUCTIONS.@ @@@#.         THE GENERAL CALL IS:@[@@@#.     @E@@@#.     GE
)@@G@@    JREG(*<BYTE LENGTH>,<START BYTE>,*<INCREMENT>)    @[@@@#.     @G@@@#GF
)@@G@@.         <BYTE  LENGTH>  MUST  BE  6,  9,  12  OR  18. IF OMITTED, 9 ISGG
)@@G@@@G@@@#.         ASSUMED. IT SHOULD BE STARRED IF SIGN EXTENSION IS DESIRGH
)@@G@@ED FOR@ @@@#.         BYTE REFERENCES.    @[@@@#.     @G@@@#.         <SGI
)@@G@@TART BYTE> IS THE STARTING BYTE NUMBER. THE LEFTMOST BYTE IS@G@@@#.     GJ
)@@G@@    NUMBERED  ZERO.  IF  OMITTED, THE DEFAULT IS THE FIRST BYTE OF@G@@@#GK
)@@G@@.         THE SPECIFIED WORD. VALUES GREATER THAN ONE WORD ARE PERFECTLYGL
)@@G@@@^@@@#.         ACCEPTABLE.   @[@@@#.     @G@@@#.         <INCREMENT>  IGM
)@@G@@S  THE  NUMBER  OF  BYTES  TO INCREMENT FOR EACH@G@@@#.         CONSECUTGN
)@@G@@IVE REFERENCE. THIS  MAY  BE  POSITIVE,  NEGATIVE,  OR@G@@@#.         ZEGO
)@@G@@RO. THE FIELD SHOULD BE STARRED IF THE INCREMENTATION BIT IS@E@@@#.     GP
)@@G@@    NOT TO BE SET. THE DEFAULT VALUE, IF OMITTED IS 1.@[@@@#.     @G@@@#GQ
)@@G@@.         CONTRARY TO BOTH THE 1100 PROCESSOR AND STORAGE MANUAL AND THEGR
)@@G@@@G@@@#.         ASSEMBLER  MANUAL, AN INCREMENT OF MORE THAN PLUS OR MINGS
)@@G@@US ONE@G@@@#.         BYTE IS BOTH WELL DEFINED AND A LEGITIMATE  OPERATGT
)@@G@@ION.  (THERE@G@@@#.         ARE  SOME  CE  EDUCATION  MANUALS  WHICH  APGU
)@@G@@PEAR TO ACCURATELY@G@@@#.         DESCRIBE    THE    BYTE   OPERATIONS.)GV
)@@G@@  LIKEWISE,   INHIBITING@G@@@#.         INCREMENTATION  (VIA  A  ZERO  IGW
)@@G@@NCREMENT,  FAILURE  TO SET THE@G@@@#.         INCREMENTATION BIT, OR FAIGX
)@@G@@LURE TO SET  THE  'H'  BIT  OF  BYTE@G@@@#.         INSTRUCTIONS)  ARE  GY
)@@G@@ALL  ACCEPTABLE. USE OF THE SIGN EXTENTION@B@@@#.         BIT IS ALSO ALGZ
)@@G@@WAYS PERMISSABLE. @[@@@#.     @B@@@#.         A TYPICAL REFERENCE WOULD HA
)@@G@@BE:   @[@@@#.     @B@@@#.                   L         J1,(JREG(9))@F@@@#HB
)@@G@@.           OR:     L         J1,JREGL(9)       . IS EQUIVALENT.  @[@@@#HC
)@@G@@.     @F@@@#.         THIS WOULD LOAD J-REG 1 WITH A POINTER FOR QUARTERHD
)@@G@@ WORD @F@@@#.         BYTE OPERATIONS STARTING IN Q1 OF THE FIRST WORD AHE
)@@G@@ND    @D@@@#.         INCREMENTING ONE QUARTER-WORD PER CYCLE.    @[@@@#HF
)@@G@@.     @#@@@#F         FUNC    @^@@@#JREG*     NAME      'A' @ @@@#JREGL*HG
)@@G@@    NAME      '(A)'     @ [@@#B         EQU       36/F(1)   @G@@@#      HH
)@@G@@    DO 1<B<7->B=5!1 , DISPLAY *'ILLEGAL BYTE VALUE: ':$CD(F(1))   @ @@@#HI
)@@G@@          DO F<4 ,F(3) EQU 1  @A@@@#BL        EQU       (B**3)-(B=2)    HJ
)@@G@@@ @@@#IW        EQU       F(3)/B    @ @@@#OW        EQU       F(2)/B    HK
)@@G@@@C@@@#IB        EQU       (F(3)-IW*B)*/(F(1)//6-1)    @C@@@#OB        EQHL
)@@G@@U       (F(2)-OW*B)*/(F(1)//6-1)    @H@@@#A         EQU       +(GFORM 1,HM
)@@G@@1-F(*3),2,BL,1,F(*1),11,IW,3,IB,15,OW,3,OB)     @ @@@#          END     HN
)@@G@@  [F(0)]    @[[@@#.     @A@@@#. PC      PRINT CONTROL WORD FUNC.  @B@@@#HO
)@@G@@. PCL     PRINT CONTROL WORD LITERAL FUNC.@[@@@#.     @[@@@#.     @B@@@#HP
)@@G@@.         PC([<LINE SKIP>,]<STRING>).     @D@@@#.         PC([<LINE SKIPHQ
)@@G@@>,]<LENGTH>,<IMAGE ADDR>).    @[@@@#.     @[@@@#.     @#@@@#F         FUHR
)@@G@@NC    @^@@@#PC*       NAME      'W' @ @@@#PCL*      NAME      'UF(W)'   HS
)@@G@@@^@@@#N         EQU       F-1 @C@@@#          DO        N=2 ,SF EQU $TSTHT
)@@G@@R(F(2))     @B@@@#SKIP      EQU       (N=2->SF!N=3)->F(1)!1 @I@@@#LEN   HU
)@@G@@    EQU       (N=2->\SF!N=3)->F(N-1)!$SL(F(N))//($IBITS(F(N))**0100->4!6HV
)@@G@@)     @C@@@#ADDR      EQU       (N=2->SF!N=1)->(F(N)L)!F(N) @D@@@#W     HW
)@@G@@    EQU       +($GFORM 12,SKIP,6,LEN,18,ADDR)   @ @@@#          END     HX
)@@G@@  [F(0)]    @[@@@#.     @[[@@#/     @A@@@#.   A S S E M B L E R   F U N HY
)@@G@@C S . @[@@@#.     @[@@@#.     @C@@@#. ICF     COMPUTE IDENTIFIER CLASS FHZ
)@@G@@UNCTION.    @[@@@#.     @G@@@#.         IF  'EP'  IS  DEFINED  AT  LEVELIA
)@@G@@ 1 (MAIN ASSEMBLY LEVEL), THEN@G@@@#.         $IC(ICF('EP'))(1) IS A LISIB
)@@G@@T OF SYMBOLS, ONE OF WHICH IS  'EP',@G@@@#.         WHICH  ARE  DEFINED IC
)@@G@@AT LEVEL 1, WITH THE SAME IDENTIFIER CLASS@#@@@#.         AS 'EP'.@[@@@#ID
)@@G@@.     @#@@@#F         FUNC    @#@@@#ICF*      NAME    @ @@@#S         EQIE
)@@G@@U       $CFS(F(1))@G@@@#          END       127**($CFS('RANDOM')*($SS(S,IF
)@@G@@1,6)--$SS(S,7,6)))*/-29 @[@@@#.     @A@@@#. CIF     CONTROL INFORMATION IG
)@@G@@FUNC. @[@@@#.     @A@@@#.         CIF([<LEVEL>,]'<SYMBOL>') @[@@@#.     IH
)@@G@@@G@@@#.         THIS  FUNC WILL RETURN A ONE IF THE SYMBOL, IN QUOTES, TII
)@@G@@HAT IT@G@@@#.         IS GIVEN HAS CONTROL INFORMATION ATTACHED TO IT. IIJ
)@@G@@F <LEVEL> IS@G@@@#.         GIVEN, IT INDICATES THE LOWEST DICTIONARY LEIK
)@@G@@VEL TO  BEGIN  THE@G@@@#.         SEARCH  WITH. IF NO CONTROL INFORMATIOIL
)@@G@@N IS ASSOCIATED WITH THE@C@@@#.         SYMBOL, A ZERO VALUE WILL BE RETIM
)@@G@@URNED.@[@@@#.     @#@@@#F         FUNC    @#@@@#CIF*      NAME    @F@@@#IN
)@@G@@N         EQU       $CFS(F(F-1))      . GET THE SYMBOLIC NAME     @E@@@#IO
)@@G@@ALIST     EQU       $IC(ICF(N))       . GET LIST OF SYMBOLS @I@@@#L     IP
)@@G@@    EQU       MIN(F=2->$LEV-1!F(1),+ALIST) . COMPUTE INITIAL SEARCH LEVEIQ
)@@G@@L     @G@@@#I         $DO       L,1,-1 ;          . SEARCH UPWARDS THROUIR
)@@G@@GH THE TREE @G@@@#  ,J      $DO       ALIST(I) , ;      . SEARCH ALL SYMIS
)@@G@@BOLS AT THIS LEVEL@G@@@#          $DO ALIST(I,J)=N , ;        . TERMINATIT
)@@G@@E THE SEARCH IF FOUND   @G@@@#          END       ALIST(I,*J)       . REIU
)@@G@@TURN THE FLAG VALUE IF FOUND  @F@@@#          END       0               IV
)@@G@@  . OTHERWISE, NO CONTROL INFO@[@@@#.     @B@@@#. CIN     RETURN CONTROLIW
)@@G@@ INFORMATION NAME.@[@@@#.     @G@@@#.         THIS  FUNC  RETURN  THE  PIX
)@@G@@ROPER  STRING  REPRESENTATION  OF AN@G@@@#.         ARBITRARY SYMBOL SO IY
)@@G@@THAT IT MAY BE USED AND  PASSED  TO  OTHER@A@@@#.         FUNCS AND PROCIZ
)@@G@@S. CALLED:  @[@@@#.     @A@@@#.         CIN([<LEVEL>,]<SYMBOL>)   @[@@@#JA
)@@G@@.     @G@@@#.         WHERE <LEVEL> IS OPTIONAL AND IS THE LOWEST LEVEL JB
)@@G@@TO BEGIN THE@G@@@#.         IDENTIFIER  SEARCH.  LEVEL 1 IS THE MAIN ASSJC
)@@G@@EMBLY LEVEL, WHILE@C@@@#.         $LEV IS THE CURRENT SUBASSEMBLY LEVEL.JD
)@@G@@@[@@@#.     @G@@@#.         <SYMBOL>  IS  ANY  LEGAL  MASM  SYMBOL,  INSJE
)@@G@@IDE OF QUOTES. THE@G@@@#.         STRING IS RETURNED AS IS IF <SYMBOL> IJF
)@@G@@S A VALUE, OTHERWISE  IT@G@@@#.         IS RETURNED PREFIXED WITH A '/',JG
)@@G@@ AS IT IS SOME KIND OF CONTROL@^@@@#.         INFORMATION.  @[@@@#.     JH
)@@G@@@#@@@#F         FUNC    @F@@@#CIN*      NAME                        . COJI
)@@G@@NTROL INFORMATION NAME  @H@@@#          END       (CIF(F(1)[F=3->',F(2)'JJ
)@@G@@])->'/'!''):F(F-1) . RETURN A NAME  @[@@@#.     @B@@@#. NRI     NUMBER OJK
)@@G@@F RELOCATABLE ITEMS.    @[@@@#.     @C@@@#.         NRI(A)=1   NRI(B+A)=JL
)@@G@@2   NRI(3.145)=0  @[@@@#.     @#@@@#NRI*      FUNC    @A@@@#A         EQJM
)@@G@@U       $BA(NRI(1))     @ @@@#          END       A-(A(0)>0)@[@@@#.     JN
)@@G@@@D@@@#. VAL$    OBTAIN HIGHER LEVEL DEFINITIONS OF A SYMBOL.@[@@@#.     JO
)@@G@@@G@@@#.         THIS FUNC ALLOWS ONE TO OBTAIN ANY LEVEL DEFINITION REGAJP
)@@G@@RDLESS@E@@@#.         OF LOWER LEVEL DEFINITIONS FOR THE SAME SYMBOL.   JQ
)@@G@@@[@@@#.     @ @@@#.         VAL$('<LABEL>')     @]@@@#.         OR@A@@@#JR
)@@G@@.         VAL$(<LEVEL>,'<LABEL>')   @[@@@#.     @G@@@#.         THE  VALJS
)@@G@@UE  OF  <LABEL> (WHICH MAY HAVE SELECTORS) AT THE MAIN@G@@@#.         ASJT
)@@G@@SEMBLY LEVEL, WILL BE RETURNED.  IF  THE  SYMBOL  REFERS  TO@G@@@#.     JU
)@@G@@    CONTROL  INFORMATION,  IT WILL BE RETURNED AS THE VALUE OF THE@G@@@#JV
)@@G@@.         SYMBOL.  IF  <LEVEL>  IS  GIVEN,  IT  INDICATES  THE  PRICIPLEJW
)@@G@@@G@@@#.         DICTIONARY  LEVEL AT WHICH THE <LABEL> IS TO BE EVALUATEJX
)@@G@@D. THE@G@@@#.         DEFAULT IS 1 WHICH CAUSES <LABEL> TO BE EVALUATED JY
)@@G@@AT THE  MAIN@G@@@#.         ASSEMBLY LEVEL (LEVEL 1). LEVEL 0 IS EXTERNAJZ
)@@G@@L REFERENCES; $LEV@G@@@#.         IS THE CURRENT LEVEL FOR THE LINE BEINKA
)@@G@@G INTERPRETED; $LEV-1 IS@G@@@#.         THE  ENVIRONMENT  OUTSIDE  THE CKB
)@@G@@URRENT PROC BEING INTERPRETED.@G@@@#.         <LABEL> SHOULD  BE  DEFINEKC
)@@G@@D  AT  THE  INDICATED  LEVEL  OR  AN@G@@@#.         EXTERNAL    REFERENCKD
)@@G@@E  WILL  BE    CREATED    AND    RETURNED.@G@@@#.         VAL$(0,'<SYMBOKE
)@@G@@L>') WILL GUARANTEE  AN  EXTERNAL  REFERENCE  TO@G@@@#.         <SYMBOL>KF
)@@G@@.  IF AN EVALUATION OF A SYMBOL WITHOUT ANY EFFECTS OF@G@@@#.         THKG
)@@G@@E CURRENT SUBASSEMBLY DEFINITIONS IS DESIRED, SEE  THE  FUNC@F@@@#.     KH
)@@G@@    'EVAL' , WHICH IS EQUIVALENT TO VAL$($LEV-1,'<SYMBOL>').@[@@@#.     KI
)@@G@@@#@@@#F         $FUNC   @#@@@#VAL$*     $NAME   @E@@@#L         $EQU    KJ
)@@G@@  F=3->F(1)!1       . INITIAL SEARCH LEVEL@#@@@#G*        $FUNC   @B@@@#KK
)@@G@@          $LEVEL    0,0,$LEV-[%1:$CD(L)]  @B@@@#          $END      [%1:KL
)@@G@@CIN(L,F(F-1))]    @^@@@#          $END      G() @[@@@#.     @F@@@#. EVALKM
)@@G@@    EVALUATE A SYMBOL (IN QUOTES) OUTSIDE THE CURRENT LEVEL.@[@@@#.     KN
)@@G@@@G@@@#.         THIS  FUNC  ALLOWS  ONE TO OBTAIN THE DEFINITION OF A SYKO
)@@G@@MBOL'S@G@@@#.         NAME WITHOUT FEAR OF POSSIBLE NAMING CONFLICTS WITKP
)@@G@@H  VARIABLES@F@@@#.         INTERNAL TO THE PROC CALLING THIS FUNC. FOR KQ
)@@G@@EXAMPLE:    @[@@@#.     @A@@@#.           P       PROC      *1.   @ @@@#KR
)@@G@@.           TEST*   NAME.     @A@@@#.           A       EQU       4.    KS
)@@G@@@C@@@#.           B       EQU       EVAL(P(1,1)).     @A@@@#.           KT
)@@G@@        DISPLAY   B     @^@@@#.                   END @A@@@#.           KU
)@@G@@A       EQU       5.    @A@@@#.                   TEST      'A'   @^@@@#KV
)@@G@@.           000000000005@[@@@#.     @G@@@#.         WILL  WORK CORRECTLYKW
)@@G@@ BECAUSE EVAL WILL OBTAIN THE VALUE OF 'A'@G@@@#.         OUTSIDE OF THEKX
)@@G@@ DEFINITION OF THE PROC 'TEST', OTHERWISE, IF IT@G@@@#.         HAD NOT KY
)@@G@@USED THE  FUNC  'EVAL'  IT  WOULD  HAVE  OBTAINED  THE@G@@@#.         INKZ
)@@G@@TERNAL  VALUE  OF  'A'  WHICH  WAS 4. NOTE THAT THIS FUNC IS@G@@@#.     LA
)@@G@@    EQUIVALENT TO USING VAL$($LEV-1,'<SYMBOL>') AND IS ESSENTIALLY@A@@@#LB
)@@G@@.         A SHORTHAND USAGE OF SUCH.@[@@@#.     @#@@@#EVAL*     FUNC    LC
)@@G@@@B@@@#          END       VAL$($LEV-2,EVAL(1))  @[@@@#.     @[@@@#.     LD
)@@G@@@F@@@#. EDITV   EDIT A STRING REPRESENTATION OF AN ARBITRARY VALUE.     LE
)@@G@@@[@@@#.     @G@@@#.         THIS  FUNC  WILL PRODUCE A STRING REPRESENTALF
)@@G@@TION CORRESPONDING@C@@@#.         TO THE TYPE OF VALUE THAT IT IS GIVEN.LG
)@@G@@@[@@@#.     @G@@@#.         IF  A  BINARY  VALUE  WITHOUT  RELOCATION  ILH
)@@G@@S GIVEN, A DECIMAL@G@@@#.         REPRESENTATION  WILL  BE  RETURNED.  ELI
)@@G@@DITV(100)  WILL  PRODUCE@G@@@#.         '100'.  THIS FUNC HAS AN ALTERNALJ
)@@G@@TE ENTRY, EDITBV, WHICH MAY BE@G@@@#.         CALLED TO PRODUCE BINARY RLK
)@@G@@EPRESENTATIONS, WHICH WILL YIELD  AN@G@@@#.         OCTAL  OR HEXADECIMALL
)@@G@@L REPRESENTATION, ACCORDING TO THE CURRENT@C@@@#.         MODE. EDITBV(1LM
)@@G@@00) WILL PRODUCE '0144'.@[@@@#.     @G@@@#.         IF  A  BINARY  VALUELN
)@@G@@  WITH  RELOCATION  IS  GIVEN, A STRING IS@G@@@#.         RETURNED WHICHLO
)@@G@@, IF  EVALUATED,  WOULD  RETURN  THE  EQUIVALENT@G@@@#.         VALUE.  LP
)@@G@@FOR  EXAMPLE:  IF EDITV(5+$(1)) IS EVALUATED, ASSUMING@G@@@#.         $(LQ
)@@G@@1) EQUALS 000014, THE FOLLOWING STRING  WOULD  BE  RETURNED:@G@@@#.     LR
)@@G@@    '000021+$LCB(1)'.  EXTERNAL  REFERENCES  ARE  MERELY  ADDED OR@G@@@#LS
)@@G@@.         SUBTRACTED AS INDICATED. IF 'R$'  IS  AN  EXTERNAL  REFERENCE,LT
)@@G@@@C@@@#.         EDITV(R$) WOULD YIELD THE STRING 'R$'.@[@@@#.     @G@@@#LU
)@@G@@.         IF A FLOATING POINT VALUE IS GIVEN, A BINARY REPRESENTATION ISLV
)@@G@@@G@@@#.         RETURNED.  THIS  MAY  BE  CHANGED,  SOMETIME IN THE FUTULW
)@@G@@RE, TO@D@@@#.         RETURN A FLOATING POINT REPRESENTATION.     @[@@@#LX
)@@G@@.     @G@@@#.         IF  A  NODE RERENCE IS GIVEN, ITS ARITHMETIC VALUELY
)@@G@@ IS RETURNED@B@@@#.         IN A DECIMAL REPRESENTATION.    @[@@@#.     LZ
)@@G@@@G@@@#.         IF  AN  INTERNAL  NAME, PROC, FUNC, DIRECTIVE, OR MASM FMA
)@@G@@UNC IS@G@@@#.         GIVEN, A STRING COMPOSED OF THE SYMBOL PRECEDED BYMB
)@@G@@  A  '/'  IS@^@@@#.         RETURNED.     @[@@@#.     @G@@@#.         IFMC
)@@G@@  THE  SYMBOL  GIVEN TO EDITV IS FLAGGED, IT WILL BE FLAGGED@B@@@#.     MD
)@@G@@    WITHIN THE STRING RETURNED.     @[@@@#.     @#@@@#F         FUNC    ME
)@@G@@@ @@@#EDITV*    $NAME     '$CD'     @ @B@#EDITBV*   $NAME     '$CB'     MF
)@@G@@@ @@@BEDITBV*   $NAME     *'$CB'    @D@@@#T         EQU       $TYPE(F(1)MG
)@@G@@)       . GET THE TYPE  @F@@@#          $DO T>4 , $GO TYPE56789     . HAMH
)@@G@@NDLE THESE THE SAME     @D@@@#S         EQU       F(*1)->'*'!''     . GEMI
)@@G@@T A FLAG    @D@@@#V         EQU       [S]F(1)           . GET THE VALUE MJ
)@@G@@@F@@@#B         EQU       $IBITS(V)         . GET THE INDICATOR BITS    MK
)@@G@@@E@@@#          GO        TYPE[$CD(T)]      . BRANCH ON THE TYPE  @#@@@#ML
)@@G@@TYPE1     NAME    @F@@@#A         EQU       $BA(V)            . GET RELOMM
)@@G@@CATABLE ITEMS     @E@@@BV         EQU       $AP(V)            . GET ABSOMN
)@@G@@LUTE PART   @G@@@#NRI       EQU       A-(A(0)>0)        . COMPUTE # OF RMO
)@@G@@ELOCATABLE ITEMS  @F@@@#          $DO       NRI=0 , ;         . IF NO REMP
)@@G@@LOCATABLE ITEMS   @G@@@#          END       S:[F(0)](V):(B**2->'D'!'') .MQ
)@@G@@ RETURN THE VALUE'S REP @F@B@#S         EQU       S:$CB($AP(V),6)   . GEMR
)@@G@@T THE INITIAL STRING    @F@@@#I         DO        A-(A(0)>0) ,;     . FOMS
)@@G@@R ALL RELOCATABLE ITEMS @B@B@#S         EQU       S:(A(I,*3)->'-'!'+'):;MT
)@@G@@@D@@@BS         EQU       S:(A(I,*3)->'-'!I>1->'+'!''):;    @E@B@#      MU
)@@G@@    ($TSTR(A(I,3))->A(I,3)!'$LCB(':$CD(A(I,3)):')')   @D@@@B          ($MV
)@@G@@TSTR(A(I,3))->A(I,3)!'$(':$CD(A(I,3)):')')@F@@@BS         EQU       S:((MW
)@@G@@V<>0)++F(*0)->(A(1)->'+'!''):$CB(V,6)!'') @^@@@#          1->END    S   MX
)@@G@@@#@@@#TYPE2     NAME    @G@@@#S         EQU       S:$CB(V,B**2->24!12) .MY
)@@G@@ GET A BINARY REPRESENTATION  @B@@@#          1->END    S               MZ
)@@G@@  .   @#@@@#TYPE3     NAME    @I@@@#          1->END    S:ESTR(V):(B**2-NA
)@@G@@>'D'!''):(B**8->'L'!'') . RETURN THE STRING     @#@@@#TYPE4     NAME    NB
)@@G@@@E@@@#          1->$END   S:$CD(+V)     . RETURN ARITHMETIC VALUE @#@@@#NC
)@@G@@TYPE56789 NAME    @H@@@#          END       '[':$L1('NAME','PROC','FUNC'ND
)@@G@@,'DIRECTIVE','MASM FUNC');    @ @@@#                    (T-4):']' @[@@@#NE
)@@G@@.     @D@@@#. EDEC    EDIT A DECIMAL REPRESENTATION OF A VALUE.   @D@@@#NF
)@@G@@. EOCT    EDIT AN OCTAL REPRESENTATION OF A VALUE.    @E@@@#. EHEX    EDNG
)@@G@@IT A HEXADECIMAL REPRESENTATION OF A VALUE.     @[@@@#.     @G@@@#.     NH
)@@G@@    THESE FUNCS WILL RETURN  A STRING, NUMERIC REPRESENTATION OF A@G@@@#NI
)@@G@@.         VALUE. IT MAY BE CALLED WITH ONE  OR  TWO  ARGUMENTS.  IF  ONENJ
)@@G@@@G@@@#.         ARGUMENT  IS  GIVEN,  IT  IS  THE  VALUE TO BE EDITED, ANK
)@@G@@ND THE@G@@@#.         RESULTANT  STRING  WILL BE ONLY AS LONG AS NECESSANL
)@@G@@RY. BUILT-IN@G@@@#.         FUNCTION OF $CD. IF TWO ARGUMENTS ARE GIVEN,NM
)@@G@@ THE  FIRST  IS  A@G@@@#.         FIELD  WIDTH IN WHICH THE VALUE WILL BNN
)@@G@@E EDITED RIGHT JUSTIFIED@G@@@#.         AND SPACE-FILLED. IF THE FIELD WNO
)@@G@@IDTH IS TOO SMALL, THE  STRING@G@@@#.         WILL  BE  AS  LONG  AS  NENP
)@@G@@CESSARY  TO  CORRECTLY REPRESENT THE@#@@@#.         NUMBER. @[@@@#.     NQ
)@@G@@@#@@@#F         FUNC    @D@@@#EOCT*     NAME      '$OCTAL'          . EDNR
)@@G@@IT OCTAL    @E@@@#EHEX*     NAME      '$HEX'            . EDIT HEXADECIMNS
)@@G@@AL    @G@@@#MODE      $EQU      $TMODES           . RETURN CURRENT MODESNT
)@@G@@ IN EFFECT  @F@@@#          [F(0)]                      . TURN ON OCTAL/NU
)@@G@@HEX MODE    @E@@@#F(0)      $EQU      *'$CB'            . THIS IS OUR FUNV
)@@G@@NC    @D@@@#EDEC*     NAME      '$CD'             . EDIT DECIMAL  @G@@@#NW
)@@G@@S         EQU       [F(0)](F(F-1)[F(*0)->F=3->',F(1)']) . GET A STRING  NX
)@@G@@@F@@@#          F(*0)->MODE**4->$OCTAL!$HEX . TURN ON PREVIOUS MODE     NY
)@@G@@@I@@@#          $DO       (F=2)++F(*0) , ;  . IF NO FIELD WIDTH, RETURN NZ
)@@G@@JUST THE STRIN    @D@@@#          $END      S                 . JUST LIKOA
)@@G@@E THAT@E@@@#FW        EQU       MAX($SL(S),F(1))  . GET OUR FIELD WIDTH OB
)@@G@@@H@@@#S         EQU       $SR(' ',FW):S     . BUILD UP A STRING WITH LEAOC
)@@G@@DING CHARS  @F@@@#          END       $SS(S,$SL(S)+1-FW,FW) . RETURN THEOD
)@@G@@ STRING RJSF@[@@@#.     @A@@@#. ESTR    EDIT A STRING, IN QUOTES. @[@@@#OE
)@@G@@.     @G@@@#.         THIS  FUNC  WILL  CONVERT ITS ARGUMENT TO STRING AOF
)@@G@@ND RETURN IT@G@@@#.         WITH QUOTES AROUND IT, SUITABLE FOR POSSIBLEOG
)@@G@@ SUBSTITUTION IN A@G@@@#.         MICROSTRING. THAT IS, THE RESULT OF THOH
)@@G@@IS FUNC MAY BE EVALUATED@E@@@#.         TO OBTAIN THE ORIGINAL VALUE OF OI
)@@G@@THE ARGUMENT.     @[@@@#.     @#@@@#F         FUNC    @#@@@#ESTR*     NAOJ
)@@G@@ME    @G@@@#S         EQU       $TMODES**1->$CAS(F(1))!$CFS(F(1)) . GET OK
)@@G@@A STRING    @G@@@AS         EQU       $TSTR(F(1))->F(1)!$TMODES**1->$CASOL
)@@G@@(F(1))!$CFS(F(1)) @F@@@#I         EQU       0                 . LET'S SCOM
)@@G@@AN THE STRING     @F@@@#          REPEAT    $SL(S)            . LOOK THRON
)@@G@@OUGH ALL CHARS    @E@@@#I         EQU       I+1               . BUMP THEOO
)@@G@@ CHAR INDEX @F@@@#          $SS(S,I)<>''''->$ENDR       . LOOP BACK IF NOP
)@@G@@OT A QUOTE  @G@@@#S         EQU       $SSS(S,'''''',I)  . SUBSTITUTE TWOOQ
)@@G@@ QUOTES FOR ONE   @H@@@#I         EQU       I+1               . INCREMENOR
)@@G@@T PAST THE SECOND NEW QUOTE   @F@@@#          $ENDR                     OS
)@@G@@  . END OF THE REPEAT BLOCK   @G@@@#          END       '''':S:''''     OT
)@@G@@  . RETURN THE STRING IN QUOTES     @[@@@#.     @D@@@#. E$L0    EDIT A SOU
)@@G@@TRING REPRESENTATION OF A $L0 LIST. @D@@@#. E$L1    EDIT A STRING REPRESOV
)@@G@@ENTATION OF A $L1 LIST. @D@@@#. E$L     EDIT A STRING REPRESENTATION OF OW
)@@G@@ANY LIST.   @[@@@#.     @A@@@#.         E$L0(<NODE REFERENCE>)    @A@@@#OX
)@@G@@.         E$L1(<NODE REFERENCE>)    @[@@@#.     @G@@@#.         THIS  FUOY
)@@G@@NC  WILL RETURN AN EVALUATABLE STRING WHICH REPRESENTS@G@@@#.         THOZ
)@@G@@E <NODE REFERENCE>.  E$L0($L0(1,'ABC',2))  WILL  RETURN  THE@B@@@#.     PA
)@@G@@    STRING: '$L0(1,''ABC'',2)'.     @[@@@#.     @#@@@#F         FUNC    PB
)@@G@@@E@@@#E$L1*     NAME      1                 . ONE ORIGIN LIST     @E@@@#PC
)@@G@@E$L0*     NAME      0                 . ZERO ORIGIN LIST    @E@@@#E$L*  PD
)@@G@@    NAME      *0                . EITHER ORIGIN LIST  @D@@@#L         EQPE
)@@G@@U       F(1)              . GET THE LIST  @D@@@#LL        EQU       F(0)PF
)@@G@@              . GET THE LIMIT @G@@@#UL        EQU       $SN(L,0)        PG
)@@G@@  . TEMP GET THE FIRST SUBSCRIPT    @F@@@#          $DO       F(*0)->UL=PH
)@@G@@0  ,;   . IF NO ZERORETH SUBFIELD   @F@@@#LL        EQU       1         PI
)@@G@@        . ADJUST THE LOWER LIMIT    @F@@@#UL        EQU       L-UL      PJ
)@@G@@        . DEFINE THE UPPER LIMIT    @A@@@#S         EQU       '$L':$CD(LPK
)@@G@@L):'('@E@@@#I         $DO       LL,UL ,;          . NOW BUILD THE LIST  PL
)@@G@@@I@@@#S         EQU       S:(I>LL->','!''):((L(I)<>0)++(I=UL)->; . APPENPM
)@@G@@D ANOTHER FIEL    @H@@@#                    $TNOD(L(I))->E$L(L(I))!EDITVPN
)@@G@@(L(I))!'') . CREATE THE STRING@E@@@#          END       S:')'           PO
)@@G@@  . RETURN THE LIST     @[@@@#.     @E@@@#. ELIST   EDIT A STRING REPRESPP
)@@G@@ENTATION OF AN ARBITRARY LIST.@[@@@#.     @A@@@#.         ELIST(<NODE REPQ
)@@G@@FERENCE>)   @[@@@#.     @G@@@#.         THIS FUNC IS VERY SIMILAR TO E$LPR
)@@G@@1 BUT DOES NOT RETURN THE LIST@G@@@#.         INSIDE OF PARENTHESES. EG:PS
)@@G@@ ELIST($L1(1,2,'ABC',3)) WILL RETURN@B@@@#.         THE STRING: '1,2,''APT
)@@G@@BC'',3' .   @[@@@#.     @#@@@#F         FUNC    @#@@@#ELIST*    NAME    PU
)@@G@@@D@@@#S         EQU       E$L(F(1))         . BUILD THE LIST@H@@@#      PV
)@@G@@    END       $SSS($SS(S,1,$SL(S)-1),'',1,4) . REMOVE PARENS & STUFF    PW
)@@G@@@[@@@#.     @A@@@#. EPPL    EDIT A PROC PARAFORM LIST.@[@@@#.     @ @@@#PX
)@@G@@.         EPPL(<PROC LABEL>)  @[@@@#.     @G@@@#.         THIS  FUNC  WIPY
)@@G@@LL  RETURN  THE  STRING  REPRESENTATION  OF  THE@G@@@#.         PARAFORMPZ
)@@G@@ LIST PASSED THROUGH THE PROC  CALL  ATTACHED  TO  THE@G@@@#.         <PQA
)@@G@@ROC LABEL>. FOR EXAMPLE, GIVEN THE FOLLOWING PROC CALL:     @[@@@#.     QB
)@@G@@@B@@@#.         <PROCALL>  1,2,3 'ABC','DEF',4  @[@@@#.     @G@@@#.     QC
)@@G@@    WHERE  THE  PROC  HEADER HAD THE LABEL 'P', THE FOLLOWING CALL@G@@@#QD
)@@G@@.         EPPL(P) WOULD YIELD THE STRING: '1,2,3 ''ABC'',''DEF'',4' .   QE
)@@G@@@[@@@#.     @#@@@#F         FUNC    @#@@@#EPPL*     NAME    @E@@@#P     QF
)@@G@@    EQU       F(1)              . GET PARAFORM LIST   @F@@@#S         EQQG
)@@G@@U       ''                . INITIALIZE THE STRING     @D@@@#I         DOQH
)@@G@@        P-(P(0)>0) ,;     . FOR ALL FIELDS@G@@@#S         EQU       S:(IQI
)@@G@@>1->' '!''):ELIST(P(I)) . APPEND ANOTHER FIELD  @E@@@#          END     QJ
)@@G@@  S                 . RETURN THE LIST     @[@@@#.     @A@@@#. EFPL    EDQK
)@@G@@IT FUNC PARAFORM LIST.  @[@@@#.     @ @@@#.         EFPL(<FUNC LABEL>)  QL
)@@G@@@[@@@#.     @G@@@#.         THIS  FUNC  WILL  RETURN  A  STRING REPRESENQM
)@@G@@TATION OF THE FUNC@E@@@#.         PARAFORM LIST ASSOCIATED WITH THE <FUNQN
)@@G@@C LABEL>.   @[@@@#.     @#@@@#F         FUNC    @#@@@#EFPL*     NAME    QO
)@@G@@@D@@@#          END       ELIST(F(1))       . RETURN A LIST @[@@@#.     QP
)@@G@@@A@@@#. EWLF    EDIT WAITING LABEL FIELD. @[@@@#.     @^@@@#.         EWQQ
)@@G@@LF(<N>)     @[@@@#.     @G@@@#.         THIS  FUNC WILL RETURN A COMPLETQR
)@@G@@E STRING REPRESENTATION OF THE@G@@@#.         WAITING  LABEL  FIELD  DEFQS
)@@G@@INED  FOR  THE  LEVEL  INDICATED  BY@G@@@#.         $LEV-<N>,  WHERE  <NQT
)@@G@@>  IS  THE SINGLE NUMERIC ARGUMENT TO THIS@D@@@#.         FUNC. FOR EXAMQU
)@@G@@PLE, IF A PROC CALL IS MADE:  @[@@@#.     @ @@@#.           LAB(1,2)   PQV
)@@G@@ROCALL@[@@@#.     @G@@@#.         THEN,  WITHIN THE DEFINITION OF 'PROCAQW
)@@G@@LL', EWLF(1) WILL RETURN@A@@@#.         THE STRING: 'LAB(1,2)'.   @[@@@#QX
)@@G@@.     @#@@@#F         FUNC    @#@@@#EWLF*     NAME    @I@@@#A         EQQY
)@@G@@U       $LF(1+F(1))       . GET THE WAITING LABEL FOR THE HIGHER PRO    QZ
)@@G@@@E@@@#          $DO A=0 , END ''            . RETURN NULL SYMBOL  @D@@@#RA
)@@G@@S         EQU       A(0)              . GET THE SYMBOL@E@@@#          $DRB
)@@G@@O A=1 , END S             . QUIT IF NO SELECTORS@H@@@#          END     RC
)@@G@@  S:$SSS(E$L1(A),'',1,3) . RETURN THE LABEL WITH SELECTORS  @[@@@#.     RD
)@@G@@@A@@@#. EREG    EDIT A REGISTER MNEMONIC. @[@@@#.     @^@@@#.         ERRE
)@@G@@EG(<R>)     @[@@@#.     @G@@@#.         THIS  FUNC  WILL RETURN THE MNEMRF
)@@G@@ONIC FOR A REGISTER VALUE. FOR@G@@@#.         EXAMPLE: EREG(12)  WILL  RRG
)@@G@@ETURN  'A0';  EREG(11)  WILL  RETURN@^@@@#.         'X11', ETC.   @[@@@#RH
)@@G@@.     @#@@@#F         FUNC    @#@@@#EREG*     NAME    @^@@@#R         EQRI
)@@G@@U       F(1)@B@^@#          $DO 0<=R<12 , $END 'X':$CD(R)   +@@@@[@D@^@#RJ
)@@G@@^@)^@)^@)^@)^@)^- D1^^@0B).EK/AC2 *"^9S^8'^-#C)*EK(^C)@D@^@#^@)^@)^@)^@)RK
)@@G@@^@)^- D1^^@0B).EK/AC2 *"^9S^8'^-#C)*EK(^C)+@@@@@@B@@@^          $END    RL
)@@G@@  0<=R<12->'X':$CD(R)!; @B@^@#          $DO 11<R<28 , $END 'A':$CD(R-12)RM
)@@G@@@C@@@^                    11<R<28->'A':$CD(R-12)!;    @B@^@#          $DRN
)@@G@@O 63<R<80 , $END 'R':$CD(R-64)@C@@@^                    63<R<80->'R':$CDRO
)@@G@@(R-64)!;    @C@^@#          $DO 79<R<96 , $END 'ER':$CD(R-80)     @C@@@^RP
)@@G@@                    79<R<96->'ER':$CD(R-80)!;   @C@^@#          $DO 95<RRQ
)@@G@@<108 , $END 'EX':$CD(R-96)    @C@@@^                    95<R<108->'EX':$RR
)@@G@@CD(R-96)!;  @C@^@#          $DO 107<R<124 , $END 'EA':$CD(R-108)  @C@@@^RS
)@@G@@                    107<R<124->'EA':$CD(R-108)!;@ @^@#          $END    RT
)@@G@@  $CB(R)    @#@@@^          $CB(R)  @[@@@#.     @ @@@^          LEVEL   RU
)@@G@@  0,0,0     @^@@@^          SYMBOLS,0 7   @D@@@#          END           RV
)@@G@@              . OF DEFINITION ___@@@.         THE <NODE REFERENCE>.  E$LRW
)@@G@@0($L0(1,'ABC',2))  WILL *[S@@@*SDFF*@#@@@@          $DEF    @ @@@@      RX
)@@G@@    $LEVEL    0,1,0     @[@@@@.     @]@@@@.   D U M P @[@@@@.     @E@@@@RY
)@@G@@. A PROC TO DUMP ARBITRARY MASM SYMBOLS AND THEIR VALUES.   @[@@@@.     RZ
)@@G@@@E@@@@.         DUMP,<LEVEL>      <SYMBOL>,<SCF1>,<SCF2>,...  ... @[@@@@SA
)@@G@@.     @G@@@@. <SYMBOL>  MAY BE ANY LEGAL MASM SYMBOL, INCLUDING A SUBSCRSB
)@@G@@IPTED LABEL,@ @@@@. DIRECTIVE, OR MASM FUNCTION.@[@@@@.     @G@@@@. <LEVSC
)@@G@@EL>  IS  THE  DICTIONARY  LEVEL  AT WHICH TO OBTAIN THE <SYMBOL>'S@G@@@@SD
)@@G@@. DEFINITION. ZERO (0) CORRESPONDS TO THE EXTERNALIZED ENTRY POINTS; ONESE
)@@G@@@G@@@@. (1) IS THE MAIN ASSEMBLY DEFINITION LEVEL; TWO (2) IS THE  FIRSTSF
)@@G@@  PROC@E@@@@. DEFINITION LEVEL; $LEV IS THE CURRENT DEFINITION LEVEL.   SG
)@@G@@@[@@@@.     @G@@@@. EACH  <SCF>  IS A SUBSCRIPT CONVERSION FLAG, WHICH ISH
)@@G@@S USED TO INDICATE@G@@@@. THE DESIRED REPRESENTATION OF A SUBSCRIPT,  WHSI
)@@G@@EN  THE  SUBSCRIPTS  ARE@G@@@@. DISPLAYED.  THE  <SCF>'S  ARE  APPLIED  SJ
)@@G@@IN  THE ORDER SPECIFIED TO THE@G@@@@. SUBSCRIPTS IN A LEFT-TO-RIGHT FASHSK
)@@G@@ION, CYCLING TO THE FIRST  <SCF>  IF@G@@@@. THERE ARE MORE SUBSCRIPTS THSL
)@@G@@AN FLAGS. IF NO <SCF>'S ARE SPECIFIED, 'D'@G@@@@. IS  ASSUMED  BY DEFAULSM
)@@G@@T RESULTING IN ALL SUBSCRIPTS BEING DISPLAYED IN@G@@@@. DECIMAL. THE ALLSN
)@@G@@OWABLE FLAGS ARE: 'D' - DECIMAL; 'O' -  OCTAL;  'H'  -@C@@@@. HEXADECIMASO
)@@G@@L; 'S' OR 'C' - CHARACTER STRING.   @[@@@@.     @G@@@@. THE  VALUE  OF  SP
)@@G@@THE  SYMBOL,  OR  ITS  TERMINAL  NODES IF IT IS A NODE@G@@@@. REFERENCE,SQ
)@@G@@ IS DISPLAYED ACCORDING TO ITS TYPE AS DETERMINED BY $TYPE. @[@@@@.     SR
)@@G@@@G@@@@. BINARY VALUES ARE DISPLAYED IN BOTH DECIMAL AND BINARY REPRESENTSS
)@@G@@ATIONS@G@@@@. IF  THE  VALUE  IS  ABSOLUTE  (IE: NON-RELOCATABLE); IF THST
)@@G@@E VALUE IS A@G@@@@. RELOCATABLE ONE, IT IS DISPLAYED USING THE FUNCTION SU
)@@G@@ 'EDITV',  DEFINED@ @@@@. IN THE ELEMENT 'FUNCS'.     @[@@@@.     @E@@@@SV
)@@G@@. FLOATING POINT VALUES ARE DISPLAYED IN BINARY FORMAT.     @[@@@@.     SW
)@@G@@@G@@@@. NODES  ARE  DISPLAYED  IN  THE  FOLLOWING MANNER: FIRST THE ARITSX
)@@G@@HMETIC@G@@@@. VALUE OF THE NODE IS DISPLAYED IN DECIMAL,  WHICH  IS  THESY
)@@G@@  NUMBER  OF@G@@@@. SELECTORS  DEFINED  FOR  THE  NODE. THEN, EACH SELECSZ
)@@G@@TOR IS RECURSIVELY@G@@@@. DUMPED WITH A CALL TO 'DUMP'. THE CURRENT <SCFTA
)@@G@@> IS USED  TO  REPRESENT@#@@@@. THE SELECTOR.   @[@@@@.     @G@@@@. AN  TB
)@@G@@INTERNAL  NAME,  PROC  NAME,  FUNC  NAME, MASM DIRECTIVE, AND MASM@G@@@@TC
)@@G@@. FUNCTION ARE INDICATED WITH [NAME], [PROC], [FUNC], [DIRECTIVE], [MASMTD
)@@G@@@^@@@@. FUNC], RESPECTIVELY.  @[@@@@.     @#@@@@. AN EXAMPLE:     @[@@@@TE
)@@G@@.     @G@@@@. SUPPOSE  WE  HAVE  A MASM SYMBOL 'B$$T' WHICH HAS THREE SETF
)@@G@@LECTORS, THE@G@@@@. FIRST OF WHICH  IS  A  DECIMAL  INTEGER,  THE  SECONTG
)@@G@@D  IS  A  FIELDATA@G@@@@. CHARACTER,  AND THE THIRD IS AN OCTAL ADDRESS.TH
)@@G@@ THE APPROPRIATE CALL IS@#@@@@. AS FOLLOWS:     @[@@@@.     @B@@@@.     TI
)@@G@@    DUMP      'B$$T','D','C','O'    @[@@@@.     @B@@@@. ALAN STEBBENS, YTJ
)@@G@@FNSS UOMCSC, 03/07/78   @^@@@@. LAST UPDATE 03/14/79  @[@@@@.     @^@@@@TK
)@@G@@P         $PROC     *999@#@@@@DUMP*     $NAME   @F@@@@          $PAR(0)*TL
)@@G@@*OB('N')->$END      . QUIT IF 'N' OPTION ON     @F@@@@          \$PAR(0)TM
)@@G@@**OB('CDLOS')->$END . QUIT IF NO LISTING OPTIONS@F@@@@          \$TMODESTN
)@@G@@**2->$END           . QUIT IF $UNLIST ACTIVE    @H@@@@LEV       $EQU    TO
)@@G@@  P(0)=1->$LEV-1!P(0,1) . DEFINE THE DICTIONARY SEARCH LEVEL@ @@@@I     TP
)@@G@@    $REPEAT   1,P-1     @F@@@@SN        $EQU      P(I,1)            . GETQ
)@@G@@T OUR SYMBOLIC NAME     @D@@@@SL        $EQU      $SL(SN)           . GETR
)@@G@@T ITS LENGTH@G@@@@F         EQU       CIF(SN)->'/'!''   . GET A CONTROL TS
)@@G@@INFORMATION FLAG  @D@@@@SV        $EQU      VAL$(LEV,SN)      . GET ITS TT
)@@G@@VALUE @F@@@@T         $EQU      $TYPE([F]SV)      . GET THE TYPE OF THE TU
)@@G@@DATA  @F@@@@S         $EQU      '>> ':$SS(SN,1,MAX(12,SL)):' = ':EDITV([TV
)@@G@@F]SV) @G@@@@          $IF       \3<=T<=4          . BINARY, FLOATING, NATW
)@@G@@ME, ...     @A@@@@          $DISPLAY  S[T=1->',SV']   @D@@@@          $ETX
)@@G@@LSF     T=3               . STRING TYPE   @A@@@@          $DISPLAY  $SS(TY
)@@G@@S,1,80)     @E@@@@          $IF       $SL(S)>80         . TRUNCATED STRITZ
)@@G@@NG?   @F@@@@S         $EQU      $SSS(S,,1,80)     . DROP LEADING PORTIONUA
)@@G@@ OF S @A@@@@J         $REPEAT   1,$SL(S),61     @C@@@@          $DISPLAYUB
)@@G@@  $SR(' ',19):$SS(S,J,61)     @#@@@@          $ENDR   @F@@@@          $EUC
)@@G@@NDF                       . END TEST FOR LONG STRING  @D@@@@          $EUD
)@@G@@LSF     T=4               . NODE REFERENCE@^@@@@          $DISPLAY  S   UE
)@@G@@@D@@@@          $IF       SV>0              . ANY SELECTORS?@G@@@@      UF
)@@G@@    $DO       P(I)=1 ,;         . IF NO SUBSCRIPT CONVERSION FUNCS@D@@@@UG
)@@G@@P(I,2)    EQU       'D'               . USE OUR OWN   @E@@@@SCF       EQUH
)@@G@@U       $CFS(P(I,2))      . GET A SUBSCRIPT FLAG@E@@@@          $IF     UI
)@@G@@  \$SN(D$$PSCF,SCF) . IF NOT A SELECTOR   @H@@@@          $DISPLAY  *'ILUJ
)@@G@@LEGAL SUBSCRIPT CONVERSION FLAG: ''':SCF:''', ':;     @A@@@@            UK
)@@G@@        '''D'' ASSUMED.'@^@@@@P(I,2)    EQU       'D' @E@@@@SCF       EQUL
)@@G@@U       $CFS('D')         . SET THE FLAG TOO    @#@@@@          $ENDF   UM
)@@G@@@F@@@@SCF       EQU       D$$PSCF(SCF)      . GET THE PROPER FUNCTION   UN
)@@G@@@I@@@@SCL       $EQU      ''                . INITIALIZE THE SUBSCRIPT CUO
)@@G@@ONVERSION LIST    @H@@@@S         $DO       3,P(I) ,;         . BUILD A UP
)@@G@@SUBSCRIPT CONVERSION LIST     @H@@@@SCL       $EQU      SCL:'P(I,':$CD(SUQ
)@@G@@):'),' . ADD ANOTHER ITEM ON THE LIST     @F@@@@SCL       $EQU      SCL:UR
)@@G@@'P(I,2)'      . PUT THE FIRST ONE LAST    @F@@@@SN        EQU       ')'=US
)@@G@@$SS(SN,SL)->$SS(SN,1,SL-1):','!SN:'('     @E@@@@J         $REPEAT   SV  UT
)@@G@@              . DUMP ALL SELECTORS  @G@@@@          DUMP,LEV  SN:[SCF]($UU
)@@G@@NS(SV,J)):')',[SCL] . DUMP A SELECTOR     @#@@@@          $ENDR   @E@@@@UV
)@@G@@          $ENDF                       . TEST FOR SELECTORS  @D@@@@      UW
)@@G@@    $ENDF                       . TEST FOR TYPE @F@@@@          $ENDR   UX
)@@G@@                    . LOOP TO NEXT ARGUMENT     @D@@@@          $END    UY
)@@G@@                    . OF DUMP PROC  @[@@@@.     @B@@@@. DEFINE THE SUBSCUZ
)@@G@@RIPT CONVERSION TABLE   @[@@@@.     @F@@@@D$$PSCF('D') EQU    'EDEC'    VA
)@@G@@        . EDIT A DECIMAL NUMBER     @F@@@@D$$PSCF('H') EQU    'EHEX'    VB
)@@G@@        . EDIT A HEXADECIMAL NUMBER @E@@@@D$$PSCF('O') EQU    'EOCT'    VC
)@@G@@        . EDIT AN OCTAL NUMBER@D@@@@D$$PSCF('S') EQU    'ESTR'          VD
)@@G@@  . EDIT A STRING @D@@@@D$$PSCF('C') EQU    D$$PSCF('S')      . SAME AS VE
)@@G@@'S'   @[@@@@.     @C@@@@          $END                        . OF DEF  VF
)@@G@@___@@@          $ENDF   @^@W@VI         $REPEAT   SV  @E@@@@J         $RVG
)@@G@@EPEAT   SV                . DUMP ALL SELECTORS  @C@W@V          DUMP    VH
)@@G@@*[S@@@*SDFF*@#@@@Z/         AXR$    @#@@@<          LIBRARY @#@@@Z      VI
)@@G@@    DEF     @ @@@Z          LEVEL     0,1,0     @[@@@Z.     @G@@@Z. THISVJ
)@@G@@ ELEMENT DEFINES PARAMETERS AND PACKETS FOR THE PIO$ PACKAGE.     @B@@@ZVK
)@@G@@. FOR DOCUMENTATION SEE ELEMENT 'PIO$'.   @[@@@Z.     @[@@@Z.     @[@@@ZVL
)@@G@@.     @ @@@Z. ASSEMBLY TIME PARAMETERS    @[@@@Z.     @H@@@Z. PREPF SHOUVM
)@@G@@LD BE SET TO THE CURRENT SYSTEM DISC PREPPING FACTOR, SO THAT     @H@@@ZVN
)@@G@@. READ-BEFORE-WRITES ON THE PART OF THE OPERATING SYSTEM WILL BE AVOIDEDVO
)@@G@@.     @[@@@Z.     @E@@@ZPREPF     EQU       4                 . PREPPINGVP
)@@G@@ FACTOR     @F@@@ZPREPS     EQU       PREPF*1           . # OF SECTORS PVQ
)@@G@@ER PREPF    @E@@@ZPREPW     EQU       PREPS*28          . # OF WORDS PERVR
)@@G@@ PREPF@[@@@Z.     @G@@@Z. STATS SHOULD BE SET TO ENABLE THE CODE TO SUPPVS
)@@G@@ORT DIAGNOSTIC TRACES   @#@@@Z. AND STATISTICS  @[@@@Z.     @H@+@ZSTATS VT
)@@G@@    EQU       1                 . TURN ON STATISTICS AND TRACING SUPPORTVU
)@@G@@@I@@@+STATS     EQU       0                 . TURN OFF STATISTICS AND TRVV
)@@G@@ACING SUPPORT     @[@@@Z.     @G@@@Z. THE FOLLOWING INDEXES ARE USED TO VW
)@@G@@CALL THE APPROPRIATE SUBROUTINE     @F@@@Z. USING ONLY THE GIVEN ENTRY PVX
)@@G@@OINT IN THE PIO$ PACKET. THE CALLING@A@@@Z. SEQUENCE SHOULD BE SOMETHINGVY
)@@G@@ LIKE:@[@@@Z.     @C@@@Z.         LX        X11,<LINK FROM THE PACKET>  VZ
)@@G@@@E@@@Z.         TZ,U      0,X11             . IS IT REALLY THERE? @E@@@ZWA
)@@G@@.         LMJ       X11,<INDEX>,X11   . CALL THE SUBROUTINE @[@@@Z.     WB
)@@G@@@G@@@Z. THE INDEXES THAT BEGIN WITH 'STAT' ARE USED TO CALL THE STATISTIWC
)@@G@@CAL   @G@@@Z. ENTRY POINTS; THE PREFIX 'TRACE' CORRESPONDS TO THE TRACE WD
)@@G@@ROUTINES.   @[@@@Z.     @F@@@ZSTATI     EQU       0                 . INWE
)@@G@@DEX FOR INITIALIZATION  @F@@@ZSTATC     EQU       1                 . ENWF
)@@G@@TRY FOR STATISTIC CLEAR @F@@@ZTRACE     EQU       0                 . INWG
)@@G@@DEX FOR NORMAL TRACE    @F@@@ZTRACES    EQU       1                 . INWH
)@@G@@DEX FOR TRACE SUMMARY   @G@@@ZTRACEI    EQU       2                 . INWI
)@@G@@DEX FOR TRACE INITIALIZATION  @[@@@Z.     @[@@@Z.     @[@@@Z.     @^@@@ZWJ
)@@G@@. PACKET DEFINITIONS    @[@@@Z.     @C@@@Z.                             WK
)@@G@@        PIOPKT    @G@@@Z.          .....................................WL
)@@G@@........................@G@@@Z.       +0 :                           PIOWM
)@@G@@FN                           :@G@@@Z.          :                        WN
)@@G@@                                   :@G@@@Z.       +1 :                  WO
)@@G@@                                         :@G@@@Z.          .............WP
)@@G@@................................................@G@@@Z.       +2 :      WQ
)@@G@@   0         :    0    :              0              :@G@@@Z.          .WR
)@@G@@............................................................@G@@@Z.     WS
)@@G@@  +3 : PIOSTA  : PIOFNC  :         :           PIOFWC            :@G@@@ZWT
)@@G@@.          .............................................................WU
)@@G@@@G@@@Z.       +4 :            PIOWC            :            PIOBA       WV
)@@G@@     :@G@@@Z.          .................................................WW
)@@G@@............@G@@@Z.       +5 :                           PIODA          WX
)@@G@@                 :@G@@@Z.          .....................................WY
)@@G@@........................@G@@@Z.       +6 : PIOWTF  : PIOTRA  : PIOWAF  :WZ
)@@G@@           PIOSAL            :@G@@@Z.          .........................XA
)@@G@@....................................@G@@@Z.       +7 :           PIOCPL XB
)@@G@@           :           PIOPAL            :@G@@@Z.          .............XC
)@@G@@................................................@G@@@Z.       +8 :      XD
)@@G@@     PIOUWC            :           PIOUBA            :@G@@@Z.          .XE
)@@G@@............................................................@G@@@Z.     XF
)@@G@@  +9 :                          PIOUDA                           :@G@@@ZXG
)@@G@@.          .............................................................XH
)@@G@@@G@@@Z.      +10 :           PIOCWC            :           PIOCBA       XI
)@@G@@     :@G@@@Z.          .................................................XJ
)@@G@@............@G@@@Z.      +11 :                          PIOCDA          XK
)@@G@@                 :@G@@@Z.          .....................................XL
)@@G@@........................@G@@@Z.      +12 :           PIOTRL            :XM
)@@G@@           PIOSTL            :@G@@@Z.          .........................XN
)@@G@@....................................@G@@@Z.      +13 :           PIOX11 XO
)@@G@@           :           PIOX10            :@G@@@Z.          .............XP
)@@G@@................................................@G@@@Z.      +14 :      XQ
)@@G@@     PAGX11            : PIOLOK  :         :         :@G@@@Z.          .XR
)@@G@@............................................................@[@@@Z.     XS
)@@G@@@[@@@Z.     @[@@@Z.     @E@@@Z. THE FIRST 6 WORDS OF THE PACKET IS A STAXT
)@@G@@NDARD IO PACKET.  @[@@@Z.     @^@@@ZPIOPKT    BASE      0,A0@G@-@ZPIOFN XU
)@@G@@    AREA      3                 . FILENAME AND INTERRUPT STUFF    @G@@@-XV
)@@G@@PIOFN     DWORD                       . FILENAME AND INTERRUPT STUFF    XW
)@@G@@@D@@@-          WORD                        . INTERRUPT WORD@G@@@-PIOAIDXX
)@@G@@    FIELD     H2                . ACTIVITY ID (NORMALLY INTR ADDR)@#@@@ZXY
)@@G@@          WORD    @D@@@ZPIOSTA    FIELD     S1                . I/O STATXZ
)@@G@@US    @C@@@ZPIOFNC    FIELD     S2                . FUNCTION@E@@@ZPIOFWCYA
)@@G@@    FIELD     H2                . FINAL WORD COUNT    @E@@@ZPIOBAW    WOYB
)@@G@@RD                        . BUFFER ACCESS WORD  @E@@@ZPIOWC     FIELD   YC
)@@G@@  H1                . REQUESTED WORD COUNT@D@@@ZPIOBA     FIELD     H2  YD
)@@G@@              . BUFFER ADDRESS@D@@@ZPIODA     WORD                      YE
)@@G@@  . DRUM ADDRESS  @E@@@ZPIOWTF    SIXTH                       . WRITE-THYF
)@@G@@ROUGH FLAG  @D@@@ZPIOTRA    SIXTH                       . TRACE FLAG    YG
)@@G@@@E@@@ZPIOWAF    SIXTH                       . WORD ADDRESSES FLAG @F@@@ZYH
)@@G@@PIOSAL    HALF                        . LINK TO STATISTICS AREA   @F@@@ZYI
)@@G@@          WORD                        . PAGING AREA ACCESS WORD   @E@@@ZYJ
)@@G@@PIOCPL    FIELD     H1                . CURRENT PAGE LINK   @E@@@ZPIOPALYK
)@@G@@    FIELD     H2                . PAGING AREA LINK    @E@@@ZPIOUAW    WOYL
)@@G@@RD                        . USER ACCESS WORDS   @E@@@ZPIOUWC    FIELD   YM
)@@G@@  H1                . USER WORD COUNT     @E@@@ZPIOUBA    FIELD     H2  YN
)@@G@@              . USER BUFFER ADDRESS @E@@@ZPIOUDA    WORD                YO
)@@G@@        . USER DRUM ADDRESS   @E@@@ZPIOCAW    WORD                      YP
)@@G@@  . CURRENT ACCESS WORD @E@@@ZPIOCWC    FIELD     H1                . CUYQ
)@@G@@RRENT WORD COUNT  @F@@@ZPIOCBA    FIELD     H2                . CURRENT YR
)@@G@@BUFFER ADDRESS    @E@@@ZPIOCDA    WORD                        . CURRENT YS
)@@G@@DRUM ADDRESS@E@@@ZPIOSLW    WORD                        . SUBROUTINE LINYT
)@@G@@K WORD@F@@@ZPIOTRL    FIELD     H1                . TRACE SUBROUTINE LINYU
)@@G@@K     @F@@@ZPIOSTL    FIELD     H2                . STATISTICS SUBROUTINYV
)@@G@@E LINK@D@@@ZPIOX11    HALF                        . USER'S LINK   @C@@@ZYW
)@@G@@PIOX10    HALF                        . X10 SAVE@E@@@ZPAGX11    HALF    YX
)@@G@@                    . LINK FOR PAGESEARCH @F@@@ZPIOLOK    SIXTH         YY
)@@G@@              . PAGE QUEUE-LOCKED FLAG    @E@@@ZPIOBLK    SIXTH         YZ
)@@G@@              . AWAITPAGE-BLOCK FLAG@D@)@Z          SIXTH               ZA
)@@G@@        . ANOTHER SPARE @E@@@)PIOMTA    SIXTH                       . MUZB
)@@G@@LTI-THREAD ACCESS @F@@@)PIOHWA    WORD                        . HIGHEST ZC
)@@G@@WRITE ADDRESS     @E@@@ZPIOLEN    LENGTH                      . LENGTH OZD
)@@G@@F THE PACKET@#@@@Z          ENDBASE @[@@@Z/.    @A@@@Z. THIS IS WHAT A PZE
)@@G@@AGE LOOKS LIKE    @[@@@Z.     @[@@@Z.     @G@@@Z.          .............ZF
)@@G@@................................................@G@@@Z.       +0 :      ZG
)@@G@@     PAGPPL            :           PAGNPL            :@G@@@Z.          .ZH
)@@G@@............................................................@G@@@Z.     ZI
)@@G@@  +1 :                           PAGDA                           :@G@@@ZZJ
)@@G@@.          .............................................................ZK
)@@G@@@G@@@Z.       +2 : PAGMOD  : PAGLOK  : PAGULF  :           PAGIOL       ZL
)@@G@@     :@G@@@Z.          .................................................ZM
)@@G@@............@G@@@Z.       +3 :                           PAGE           ZN
)@@G@@                 :@G@@@Z.          :                           AREA     ZO
)@@G@@                       :@G@@@Z.          :                              ZP
)@@G@@                             :@G@@@Z.          .........................ZQ
)@@G@@....................................@[@@@Z.     @[@@@Z.     @[@@@Z.     ZR
)@@G@@@[@@@Z.     @^@@@Z          BASE      0   @E@@@ZPAGQLW    WORD          ZS
)@@G@@              . PAGE QUEUE LINK WORD@E@@@ZPAGPPL    FIELD     H1        ZT
)@@G@@        . PREVIOUS PAGE LINK  @D@@@ZPAGNPL    FIELD     H2              ZU
)@@G@@  . NEXT PAGE LINK@D@@@ZPAGDA     WORD                        . DRUM ADDZV
)@@G@@RESS  @F@@@ZPAGFW     WORD                        . FLAG WORD AND QUEUE ZW
)@@G@@LINK  @D@@@ZPAGFLG    FIELD     H1                . PAGE FLAGS    @E@@@ZZX
)@@G@@PAGMOD    FIELD     S1                . PAGE MODIFIED FLAG  @G@@@ZPAGLOKZY
)@@G@@    FIELD     S2                . PAGE IS PHYSICALLY LOCKED FLAG  @F@@@ZZZ
)@@G@@PAGULF    FIELD     S3                . PAGE IS USER-LOCKED FLAG  @G@@@ZAA
)@@G@@PAGIOL    FIELD     H2                . LINK TO IO PACKET OF DEFINITION AB
)@@G@@@F@@@ZPAGHL     LENGTH                      . CAPTURE PAGE HEADER LENGTHAC
)@@G@@@F@@@ZPAGE      AREA                        . THE PAGE DATA STARTS HERE AD
)@@G@@@#@@@Z          ENDBASE @[@@@Z.     @[@@@Z.     @C@@@Z. THE PAGING AREA AE
)@@G@@HAS A HEADER DEFINITION ALSO  @[@@@Z.     @[@@@Z.     @G@@@Z.          .AF
)@@G@@............................................................@G@@@Z.     AG
)@@G@@  +0 :                          PASEMA                           :@G@@@ZAH
)@@G@@.          .............................................................AI
)@@G@@@G@@@Z.       +1 :            PALPL            :            PAFPL       AJ
)@@G@@     :@G@@@Z.          .................................................AK
)@@G@@............@G@@@Z.       +2 :            PAPS             :            AL
)@@G@@PAPSS            :@G@@@Z.          .....................................AM
)@@G@@........................@[@@@Z.     @[@@@Z.     @G@@@Z          BASE    AN
)@@G@@  0,X10             . THE PAGING AREA HANGS ON X10    @F@@@ZPASEMA    WOAO
)@@G@@RD                        . PAGING AREA SEMAPHORE     @E@@@ZPAPQH     WOAP
)@@G@@RD                        . PAGE QUEUE HEADER   @D@@@ZPALPL     FIELD   AQ
)@@G@@  H1                . LAST PAGE LINK@E@@@ZPAFPL     FIELD     H2        AR
)@@G@@        . FIRST PAGE LINK     @C@@@ZPAPS      HALF                      AS
)@@G@@  . PAGESIZE@E@@@ZPAPSS     HALF                        . PAGE SIZE IN SAT
)@@G@@ECTORS@G@@@ZPAHLEN    LENGTH                      . LENGTH OF PAGING AREAU
)@@G@@A HEADER    @G@@@ZPABEG     AREA                        . PAGIN AREA ACTAV
)@@G@@UALLY BEGINS HERE @B@@@Z          ENDBASE                     .   @[@@@ZAW
)@@G@@/.    @G@@@Z. IF STATS IS NONZERO, A STATISTICS AREA IS CONFIGURED. THISAX
)@@G@@ IS WHAT IT @#@@@Z. LOOKS LIKE:     @[@@@Z.     @G@@@Z.          .......AY
)@@G@@......................................................@G@@@Z.       +0 :AZ
)@@G@@                           UREAD                           :@G@@@Z.     BA
)@@G@@     .............................................................@G@@@ZBB
)@@G@@.       +1 :                          UWRITE                           :BC
)@@G@@@G@@@Z.          .......................................................BD
)@@G@@......@G@@@Z.       +2 :                           PREAD                BE
)@@G@@           :@G@@@Z.          ...........................................BF
)@@G@@..................@G@@@Z.       +3 :                          PWRITE    BG
)@@G@@                       :@G@@@Z.          ...............................BH
)@@G@@..............................@G@@@Z.       +4 :                        BI
)@@G@@   PAGEH                           :@G@@@Z.          ...................BJ
)@@G@@..........................................@G@@@Z.       +5 :            BK
)@@G@@               PAGEF                           :@G@@@Z.          .......BL
)@@G@@......................................................@G@@@Z.       +6 :BM
)@@G@@                          UMAXWC                           :@G@@@Z.     BN
)@@G@@     .............................................................@G@@@ZBO
)@@G@@.       +7 :                          UMINWC                           :BP
)@@G@@@G@@@Z.          .......................................................BQ
)@@G@@......@G@@@Z.       +8 :                          UTOTWC                BR
)@@G@@           :@G@@@Z.          ...........................................BS
)@@G@@..................@G@@@Z.       +9 :                           PRWB     BT
)@@G@@                       :@G@@@Z.          ...............................BU
)@@G@@..............................@G@@@Z.      +10 :           STINFL       BV
)@@G@@     :           STNIOP            :@G@@@Z.          ...................BW
)@@G@@..........................................@[@@@Z.     @[@@@Z.     @[@@@ZBX
)@@G@@.     @E@@@Z          BASE      0                 . BASED ON AN INDEX   BY
)@@G@@@E@@@ZUREAD     WORD                        . USER REQD REQUESTS  @E@@@ZBZ
)@@G@@UWRITE    WORD                        . USER WRITE REQUESTS @E@@@ZPREAD CA
)@@G@@    WORD                        . PAGE READ REQUESTS  @E@@@ZPWRITE    WOCB
)@@G@@RD                        . PAGE WRITE REQUESTS @D@@@ZPAGEH     WORD    CC
)@@G@@                    . PAGE HITS     @D@@@ZPAGEF     WORD                CD
)@@G@@        . PAGE FAULTS   @E@@@ZUMAXWC    WORD                        . MACE
)@@G@@XIMUM WORD COUNT  @E@@@ZUMINWC    WORD                        . MINIMUM CF
)@@G@@WORD COUNT  @E@@@ZUTOTWC    WORD                        . TOTAL WORD COUCG
)@@G@@NT    @F@@@ZPRBW      WORD                        . PAGE READ BEFORE WRICH
)@@G@@TES   @E@@@ZSTINFL    HALF                        . INITIALIZATION FLAG CI
)@@G@@@H@@@ZSTNIOP    HALF                        . # OF IO PACKETS REFERENCINCJ
)@@G@@G STAT AREA @H@@@ZSTALEN    LENGTH                      . GET THE LENGTHCK
)@@G@@ OF THE STATISTICS AREA @#@@@Z          ENDBASE @[@@@Z/.    @^@@@Z. PROCCL
)@@G@@S FOR OUR USE     @[@@@Z.     @G@@@Z. LOCK AND UNLOCK ARE USED TO CONTROCM
)@@G@@L ACCESS TO CRITICAL RESOURCES.     @F@@@Z. BLOCK AND UNBLOCK ARE USED TCN
)@@G@@O SYNCRONIZE ACTIVITIES REQUIRING OR@A@@@Z. CONSUMING CRITICAL RESOURCESCO
)@@G@@.     @[@@@Z.     @^@@@ZP         PROC      *1  @^@@@ZLOCK*     NAME    CP
)@@G@@  'TS'@ @@@ZUNLOCK*   NAME      'C$TS'    @ @@@ZBLOCK*    NAME      'C$TCQ
)@@G@@SQ'   @ @@@ZUNBLOCK*  NAME      'C$TSA'   @ @@@Z          [P(0,0)]  P(1,CR
)@@G@@1)    @#@@@Z          END     @[@@@Z.     @G@@@Z. INC IS USED TO INCREMECS
)@@G@@NT A STATISTICS COUNTER.  IF STATS IS ZERO,     @^@@@Z. NO CODE IS GENERCT
)@@G@@ATED. @[@@@Z.     @^@@@ZP         PROC      *1  @#@@@ZINC*      NAME    CU
)@@G@@@ @@@Z%1:       $IF       STATS     @B@@@Z          $DO       P(0)>1 , SCV
)@@G@@X X11,P(0,1)@G@@@Z          LX        X11,PIOSTL        . GET THE STAT SCW
)@@G@@UBROUTINE LINK    @H@@@Z          TZ,U      0,X11             . CALL THECX
)@@G@@ SUBROUTINE IF IT'S THERE     @G@@@Z          LMJ       X11,STATI,X11   CY
)@@G@@  . CALL THE INCREMENTER ROUTINE    @D@@@Z          NOP       0,P(1,1)  CZ
)@@G@@        . THE ARGUMENT  @B@@@Z          $DO       P(0)>1 , LX X11,P(0,1)DA
)@@G@@@#@@@Z%1:       $ENDF   @C@@@Z          END                         . OFDB
)@@G@@ INC  @[@@@Z.     @F@@@Z          END                         . END OF DDC
)@@G@@EFINITION ELEMENT _@@@@@+@@@@@@J@[[[          ALP                       DD
)@@G@@-.108870-003            .525257-004           -2.07271+@@@@[@R@[][^@)^@)DE
)@@G@@^@)^@)^@)E-[D8)^@)^@)^@)*[S@@@*SDFF*@#@@@#          $DEF    @#@@@#      DF
)@@G@@    DUMP$   @ @@@#          $LEVEL    0,1,0     @[@@@#.     @#@@@#. S Y DG
)@@G@@M B O L S . @[@@@#.     @G@@@#. THIS PROC WILL PRINT SELECTED PORTIONS ODH
)@@G@@F THE MASM SYMBOL TABLE. THERE@ @@@#. ARE THREE ENTRY POINTS.     @[@@@#DI
)@@G@@.     @A@@@#.         SYMBOLS,<LEVEL> <TYPE>    @[@@@#.     @A@@@#.     DJ
)@@G@@    SYMBOL$,<LEVEL> <TYPE>    @[@@@#.     @A@@@#.         DUMPSYMBOLS,<LDK
)@@G@@EVEL> <TYPE>@[@@@#.     @G@@@#. <LEVEL>  IS  OPTIONAL  AND  INDICATES  TDL
)@@G@@HE  LOWEST DEFINITION LEVEL TO@G@@@#. SEARCH FOR SYMBOLS OF THE SPECFIEDDM
)@@G@@ <TYPE>. DEFAULT IS TO  INCLUDE  ALL@E@@@#. LEVELS (EXCEPT THE INTERNAL DN
)@@G@@LEVEL OF THE PROC ITSELF).    @[@@@#.     @G@@@#. <TYPE>  IS  ALSO  OPTIDO
)@@G@@ONAL  AND  INDICATES THE HIGHEST TYPE OF ITEM TO@G@@@#. CONSIDER FOR PRIDP
)@@G@@NTING. THE DEFAULT IS TYPE 4, WHICH INCLUDES ALL VALUE@D@@@#. ITEMS, ANDDQ
)@@G@@ EXCLUDES ALL CONTROL INFORMATION ITEMS.  @[@@@#.     @G@@@#. THE MASM DDR
)@@G@@ATA TYPES AND CORRESPONDING TYPE INDEXES ARE AS FOLLOWS.    @[@@@#.     DS
)@@G@@@A@@@#.         <TYPE>    MASM DATA TYPE  @A@@@#.         ------    ----DT
)@@G@@----------  @A@@@#.           1       BINARY DATA     @B@@@#.           DU
)@@G@@2       FLOATING POINT DATA   @A@@@#.           3       STRING DATA     DV
)@@G@@@A@@@#.           4       NODE REFERENCE  @B@@@#.           5       INTEDW
)@@G@@RNAL FUNC NAME    @ @@@#.           6       PROC NAME @ @@@#.           DX
)@@G@@7       FUNC NAME @A@@@#.           8       MASM DIRECTIVE  @B@@@#.     DY
)@@G@@      9       MASM BUILT-IN FUNCTION@[@@@#.     @G@@@#. 'SYMBOLS'  WILL DZ
)@@G@@ PRINT  OUT  ALL  SYMBOLS  THAT  MEET  THE   SPECIFIED@G@@@#. COMBINATIOEA
)@@G@@N  OF  SELECTION  CRITERION  OF  <LEVEL>  AND <TYPE> (EITHER@G@@@#. EXPLEB
)@@G@@ICIT OR DEFAULT), EXCEPT THE STANDARD 1100 SERIES  MNEMONICS  THAT@A@@@#EC
)@@G@@. ARE PRODUCED BY A CALL TO 'AXR$'. @[@@@#.     @G@@@#. 'SYMBOL$'  WILL ED
)@@G@@ PRINT  OUT EVERYTHING THAT 'SYMBOLS' PRINTS INCLUDING@B@@@#. THE STANDAEE
)@@G@@RD 1100 SERIES MNEMONICS.     @[@@@#.     @G@@@#. 'DUMPSYMBOLS'  WILL  PEF
)@@G@@RINT THE SYMBOLS AS FOUND BY 'SYMBOLS', BUT WILL@G@@@#. ALSO DUMP THE VAEG
)@@G@@LUES OF ALL PRINTED SYMBOLS. SEE THE PROC 'DUMP'.     @[@@@#.     @[@@@#EH
)@@G@@.     @B@@@#. ALAN STEBBENS, YFNSS UOMCSC, 02/27/79   @^@@@#. LAST UPDATEI
)@@G@@E 03/14/79  @[@@@#.     @^@@@#P         $PROC     1,0 @^@@@#SYMBOLS*  $NEJ
)@@G@@AME     1   @^@@@#SYMBOL$*  $NAME     0   @^@@@#DUMPSYMBOLS* $NAME  *1  EK
)@@G@@@#@@@^          FUNC$   @#@@@^          DUMP$   @F@@@^          \$LP->$EEL
)@@G@@ND                  . QUIT IF ON FIRST PASS     @E@@@#          $PAR(0)*EM
)@@G@@*OB('N')->$END      . QUIT IF NO LISTING  @E@@@#          \$PAR(0)**OB('EN
)@@G@@CDLOS')->$END . QUIT IF NO LISTING  @ @@@#MODE      EQU       $TMODES   EO
)@@G@@@F@@@#          \MODE**2->$END              . QUIT IF $UNLIST ACTIVE    EP
)@@G@@@F@@@#          $FDATA                      . GO INTO FIELDATA MODE     EQ
)@@G@@@ @@@#          LEVEL     0,0,0     @H@@@#LEV       EQU       P(0)=1->$LER
)@@G@@EV-1!P(0,1) . SET THE LOWEST LEVEL TO CONSIDER  @G@@@#TYP       EQU     ES
)@@G@@  P(1)=0->4!P(1,1)  . SET THE HIGHEST TYPE TO CONSIDER@F@@@#CLASS     $RET
)@@G@@EPEAT   0,127             . LOOP THROUGH ALL CLASSES  @H@@@#CL        $EEU
)@@G@@QU      $IC(CLASS)        . GET A LIST OF SYMBOLS IN THIS CLASS   @B@ @^EV
)@@G@@          DISPLAY   'CLASS ':EDEC(CL)     @B@B@           DISPLAY   'CLAEW
)@@G@@SS ':EDEC(CLASS)  @ @B@^          DISPLAY   E$L(CL)   @G@@@#          CLEX
)@@G@@=0->$ENDR                 . SKIP THIS CLASS IF NO SYMBOLS   @H@ @#LEVEL EY
)@@G@@    $REPEAT   0,MIN(CL-1,LEV)    . LOOP THROUGH ALL LEVELS IN THIS CLASSEZ
)@@G@@@E@@@AZ         $EQU      CL(0)>0           . SET ZERO ORIGIN FLAG@H@A@ FA
)@@G@@LEVEL     $REPEAT   1-(CL(0)>0),MIN(CL-1,LEV) . SCAN ALL LEVELS IN THIS FB
)@@G@@CLASS @G@@@ALEVEL     $REPEAT   1-Z,MIN(CL-Z,LEV) . SCAN ALL LEVELS IN TFC
)@@G@@HIS CLASS   @F@@@#SL        $EQU      CL(LEVEL)         . GET A LIST OF FD
)@@G@@SYMBOLS     @H@@@#SYMBOL    $REPEAT   SL                . LOOP THROUGH AFE
)@@G@@LL SYMBOLS AT THIS LEVEL@F@@@#SYM       $EQU      SL(SYMBOL)        . GEFF
)@@G@@T THE SYMBOL'S NAME     @E@@@#TYPE      $EQU      $TYPE([SL(*SYMBOL)->'/FG
)@@G@@'][SYM]) . TYPE   @E@B@           DISPLAY   'SYMBOL: ''':SYM:'''  TYPE: FH
)@@G@@':EDEC(TYPE)@G@@@#          TYPE>TYP->$ENDR             . DON'T INSERT IFI
)@@G@@F NOT DESIRED TYPE@G@@@#          P(0,0)->TYPE>7->$ENDR       . DON'T INFJ
)@@G@@SERT IF MASM SYMBOL     @ @B@           DISPLAY   'TYPE OK' @H@@@#      FK
)@@G@@    P(0,0)->TYPE=1->$SN(SY$$COMM,SYM)->$ENDR . COMMON MNEM - DON'T INSE FL
)@@G@@@ @B@           DISPLAY   'INSERTED'@E@@@#NAME      $EQU      SYM:$SR(' FM
)@@G@@',12-$SL(SYM)) . SYMBOL NAME  @G@@@#TABLE(NAME,LEVEL,TYPE) $EQU 0       FN
)@@G@@  . INSERT ITEM IN ORDERED TABLE    @#@@@#          $ENDR   @#@@@#      FO
)@@G@@    $ENDR   @#@@@#          $ENDR   @#@@@#          $EJECT  @E@@@#      FP
)@@G@@    $DISPLAY  '          >> MASM SYMBOL TABLE <<',' ' @G@@@#          $DFQ
)@@G@@ISPLAY  '>> NAME           TYPE              LEVEL<<',' '   @H@@@#SI    FR
)@@G@@    $REPEAT   TABLE             . GO THROUGH ALL ITEMS IN THE TABLE     FS
)@@G@@@E@@@#SYMBOL    $EQU      $NS(TABLE,SI)     . GET NEXT SYMBOL     @H@@@#FT
)@@G@@LL        $EQU      TABLE(SYMBOL)     . GET LIST OF LEVELS FOR THIS SYMBFU
)@@G@@OL    @F@@@#LI        $REPEAT   LL                . LOOP THROUGH ALL LEVFV
)@@G@@ELS   @D@@@#LEVEL     $EQU      $NS(LL,LI)        . GET NEXT LEVEL@G@@@#FW
)@@G@@TL        $EQU      LL(LEVEL)         . GET LIST OF TYPES AT THIS LEVEL FX
)@@G@@@F@@@#TI        $REPEAT   TL                . LOOP THROUGH ALL TYPES    FY
)@@G@@@E@@@#TYPE      $EQU      $NS(TL,TI)        . GET THE NEXT TYPE   @E@@@#FZ
)@@G@@          $DISPLAY  '>> ':SYMBOL:'   ':SYMBOLTYPE$$(TYPE):; @G@@@#      GA
)@@G@@              $SR(' ',18-$SL(SYMBOLTYPE$$(TYPE))):$CD(LEVEL):' <<'@F@@@#GB
)@@G@@          $IF       P(0,*0)->TYPE<5   . IF DUMP TIME AND DUMPABLE @E@@@#GC
)@@G@@I         $DO       $SL(SYMBOL) , ;   . SCAN FOR A BLANK    @E@@@#      GD
)@@G@@    $SS(SYMBOL,I)=' '->$ENDD    . IF BLANK FOUND, STOP@F@@@#          $DGE
)@@G@@O       $SS(SYMBOL,I)=' ' ,; . IF STOPPED AT A BLANK..@F@@@#I         EQGF
)@@G@@U       I-1               . THEN BACK UP THE POINTER  @E@@@#SYMBOL    EQGG
)@@G@@U       $SS(SYMBOL,1,I)   . GRAB NON-BLANK CHARS@D@@@#          DUMP,LEVGH
)@@G@@EL SYMBOL           . OK, GO TO IT  @B@@@#          $ENDF               GI
)@@G@@        .   @#@@@#          $ENDR   @#@@@#          $ENDR   @#@@@#      GJ
)@@G@@    $ENDR   @G@@@#          MODE**1->$ASCII             . GO BACK TO ASCGK
)@@G@@II IF NECESSARY   @#@@@#          $END    @[@@@#.     @^@@@#. DEFINE A LGL
)@@G@@IST OF TYPES@[@@@#.     @^@@@#SYMBOLTYPE$$ $EQU $L1(; @C@@@#          'BGM
)@@G@@INARY',;                  TYPE 1    @C@@@#          'FLOATING POINT',;  GN
)@@G@@        TYPE 2    @C@@@#          'STRING',;                  TYPE 3    GO
)@@G@@@C@@@#          'NODE',;                    TYPE 4    @C@@@#          'NGP
)@@G@@AME LABEL',;              TYPE 5    @C@@@#          'PROCEDURE',;       GQ
)@@G@@        TYPE 6    @C@@@#          'FUNCTION',;                TYPE 7    GR
)@@G@@@C@@@#          'DIRECTIVE',;               TYPE 8    @C@@@#          'MGS
)@@G@@ASM FUNCTION')            TYPE 9    @[@@@#.     @C@@@#. DEFINE A LIST OFGT
)@@G@@ COMMON ASSEMBLER MNEMONICS   @[@@@#.     @B@@@#          $LEVEL    0,0,GU
)@@G@@0             .   @G@@@#L         EQU       $L1($L1('X',1,11),$L1('A',0,GV
)@@G@@15),$L1('R',1,15),;     @H@@@#                    $L1('S',1,6),$L1('T',1GW
)@@G@@,3),$L1('Q',1,4),$L1('H',1,2),;     @D@@@#                    $L1('SR',1GX
)@@G@@,3),$L1('J',0,3),'W',;  @F@@@#                    $L1('XH',1,2),'U','XU'GY
)@@G@@) . LIST OF MNEMONICS   @^@@@#I         REPEAT    L   @C@@@#          $IGZ
)@@G@@F       $TNOD(L(I))       . NODE?   @G@@@#J         REPEAT    L(I,2),L(IHA
)@@G@@,3)     . YES, BUILD A LIST OF MNEMONICS  @E@@@#SY$$COMM(L(I,1):$CD(J))*HB
)@@G@@ EQU 0        . DEFINE A MNEMONIC   @F@@@#          ENDR                HC
)@@G@@        . END OF SUBLIST GENERATOR  @F@@@#          $ELSE               HD
)@@G@@        . INSERT MNEMONIC DIRECTLY  @E@@@#SY$$COMM(L(I))* EQU 0         HE
)@@G@@        . DEFINE A MNEMONIC   @B@@@#          $ENDF                     HF
)@@G@@  .   @G@@@#          $ENDR                       . GO TO THE NEXT ITEM HG
)@@G@@ON THE LIST @E@@@#          SYMBOLS   7                 . SEE IF IT WORKHH
)@@G@@S     @G@@@#          DUMPSYMBOLS,0 7             . NOW ONLY EXTERNALIZEHI
)@@G@@D STUFF     @[@@@#.     @C@@@#          $END                        . OFHJ
)@@G@@ DEF  ___@@@TING  @E@@@#          \$PAR(0)**OB('CDLOS')->$END . QUIT IF HK
)@@G@@*[S@@[*SDFF*@B@@@@C[0G-0 -!^[[E1G^-KELJCTN -[E1G^-KELJCTN^@)@B@@@@C[0G-0HL
)@@G@@ -!^[KDDJ^-KELJCTN -KDDJ^-KELJCTN^@)@B@@@@C[0G-0 -!^[KET^C1KELJCTN -KET^HM
)@@G@@C1KELJCTN^@)@^@@@@C[0G-0 -!^[ EDP^)?C(LE*=@ @@@@C[0G-0 -!^[EE[MD9#ES?DLKHN
)@@G@@ELJCTN@ @@@@C[0G-0 -!^[KELJCTN -KELJCTN^@)@A@@@@C[0G-0 -!^[GCTKELJCTN -GHO
)@@G@@CTKELJCTN^@)@B@@@@C[0G-0 -!^[NCDQC(ME[MD9#ES?ET[E1 ELKELJCTN@A@@@@C[0G-0HP
)@@G@@ -!^[OETLE[MD9#ES?E-NEDKELJCTN@ @@@@C[0G-0 -!^[NE-[CTF^)?ETOCD#DS=@ @@@@HQ
)@@G@@C[0G-0 -!^[GDD]^-K -GDD]^-K^@)@ @@@@C[0G-0 -!^[^E(HE@=E@?C-PD(K^-K@ @@@@HR
)@@G@@C[0G-0 -!^[AE(ICS=E@?C1PD1#^-K@B@@@@C[0G-0 -!^[NFDHCLJD-N^-K -NFDHCLJD-NHS
)@@G@@^-K^@)_@@@@@0)=72->(FF [V])!UF(+(FF [V]))@C)N@@@]@@@[E@@@K@F#@KCA @[E@@@HT
)@@G@@@@@@@[[CK@@@M@@@@@@@@@@@*[S@@@*SDFF*@[@@@@/.    @A@@@@.   P I O $ - PAGEHU
)@@G@@D I/O PACKAGE.    @[@@@@.     @G@@@@. THIS ELEMENT DEFINES ALL PIO$ RELAHV
)@@G@@TED PROCS FOR THE GENERAL USER.     @[@@@@.     @F@@@@. PIO$PROCS - CALLHW
)@@G@@ THIS PROC TO BRING IN THE MASM DEFINITIONS.    @[@@@@.     @^@@@@P     HX
)@@G@@    PROC      *1  @#@@@@PIO$P*    NAME    @#@@@@PIO$PROCS* NAME   @#@@@@HY
)@@G@@          FUNC$   @A@@@@          $INCLUDE  'PIO$PROCS'     @A@@@@ DO P>HZ
)@@G@@1 ,PIO$FLAG* EQU P(1,1)<>'OFF'@ @@@@PIO$P*    EQU       /$NIL     @ @@@@IA
)@@G@@PIO$PROCS* EQU      /$NIL     @#@@@@          END     @[@@@@.     @D@@@@IB
)@@G@@. ALL OF THE FOLLOWING IS PART OF THE MASM DEFINITION.@[@@@@.     @^@@@@IC
)@@G@@          $LEVEL    ,1  @#@@@@          DEF     @[@@@@.     @G@@@@. THE ID
)@@G@@VALUE OF PIO$FLAG DETERMINES WHETHER OR NOT PAGED I/O WILL BE     @G@@@@IE
)@@G@@. PERFORMED. IF IT IS ZERO, ALL OF THE I/O PROCS WILL GENERATE CODE THATIF
)@@G@@@G@@@@. WILL SET THE APPROPRIATE FUNCTION CODE IN THE I/O PACKET, AND THIG
)@@G@@EN    @G@@@@. AN 'ER IOW$'.  IF IT IS NONZERO, ALL THE I/O PROCS WILL GEIH
)@@G@@NERATE THE  @H@@@@. APPROPRIATE SUBROUTINE CALL.  THIS IS HANDY FOR INTRII
)@@G@@UMENTATION AND TESTING  @G@@@@. OF NEW IMPLEMENTATIONS OF THESE ROUTINESIJ
)@@G@@, AS LONG AS ALL SUBROUTINE   @A@@@@. CALLS ARE MADE USING THE PROCS.   IK
)@@G@@@[@@@@.     @F@@@@PIO$FLAG  EQU       1                 . THIS IS THE DEIL
)@@G@@FAULT VALUE.@I@@@@                                      . THE USER MAY CIM
)@@G@@LEAR IT AFTER THE $INCLUDE    @[@@@@.     @E@@@@. PIO$FIELDS - DEFINE THIN
)@@G@@E FIELDS WITHIN THE PIO$ PACKET     @[@@@@.     @B@@@@.         PIO$FIELIO
)@@G@@DS <ADDRESS>,<XREG>     @[@@@@.     @H@@@@. IF <ADDRESS>,<XREG> IS GIVENIP
)@@G@@, THE FIELD DEFINITIONS WILL BE BASED ON IT,    @D@@@@. OTHERWISE, THE DIQ
)@@G@@EFINITION WILL BE BASED ON ZERO.    @[@@@@.     @^@@@@P         PROC    IR
)@@G@@  *1  @#@@@@PIO$FIELDS* NAME  @ @@@@          LEVEL     0,1,0     @A@@@@IS
)@@G@@PIOPKT    EQUF      P(1,1),P(1,2)   @G@@@@PIOFN     EQUF      PIOPKT    IT
)@@G@@        . FILENAME AND INTERRUPT STUFF    @D@@@@PIOAID    EQUF      PIOPIU
)@@G@@KT+2,,H2      . ACTIVITY ID   @D@@@@PIOSTA    EQUF      PIOPKT+3,,S1    IV
)@@G@@  . I/O STATUS    @C@@@@PIOFNC    EQUF      PIOPKT+3,,S2      . FUNCTIONIW
)@@G@@@E@@@@PIOFWC    EQUF      PIOPKT+3,,H2      . FINAL WORD COUNT    @E@@@@IX
)@@G@@PIOBAW    EQUF      PIOPKT+4          . BUFFER ACCESS WORD  @E@@@@PIOWC IY
)@@G@@    EQUF      PIOBAW,,H1        . REQUESTED WORD COUNT@D@@@@PIOBA     EQIZ
)@@G@@UF      PIOBAW,,H2        . BUFFER ADDRESS@D@@@@PIODA     EQUF      PIOPJA
)@@G@@KT+5          . DRUM ADDRESS  @E@@@@PIOWTF    EQUF      PIOPKT+6,,S1    JB
)@@G@@  . WRITE-THROUGH FLAG  @D@@@@PIOTRA    EQUF      PIOPKT+6,,S2      . TRJC
)@@G@@ACE FLAG    @E@@@@PIOWAF    EQUF      PIOPKT+6,,S3      . WORD ADDRESSESJD
)@@G@@ FLAG @E@@@@PIOSAL    EQUF      PIOPKT+6,,H2      . STATISTICS AREA LINKJE
)@@G@@@E@@@@PIOCPL    EQUF      PIOPKT+7,,H1      . CURRENT PAGE LINK   @E@@@@JF
)@@G@@PIOPAL    EQUF      PIOPKT+7,,H2      . PAGING AREA LINK    @E@@@@PIOUAWJG
)@@G@@    EQUF      PIOPKT+8          . USER ACCESS WORDS   @E@@@@PIOUWC    EQJH
)@@G@@UF      PIOUAW,,H1        . USER WORD COUNT     @E@@@@PIOUBA    EQUF    JI
)@@G@@  PIOUAW,,H2        . USER BUFFER ADDRESS @E@@@@PIOUDA    EQUF      PIOPJJ
)@@G@@KT+9          . USER DRUM ADDRESS   @E@@@@PIOCAW    EQUF      PIOPKT+10 JK
)@@G@@        . CURRENT ACCESS WORD @E@@@@PIOCWC    EQUF      PIOCAW,,H1      JL
)@@G@@  . CURRENT WORD COUNT  @F@@@@PIOCBA    EQUF      PIOCAW,,H2        . CUJM
)@@G@@RRENT BUFFER ADDRESS    @E@@@@PIOCDA    EQUF      PIOPKT+11         . CUJN
)@@G@@RRENT DRUM ADDRESS@E@@@@PIOTRL    EQUF      PIOPKT+12,,H1     . TRACE ROJO
)@@G@@UTINE LINK  @F@@@@PIOSTL    EQUF      PIOPKT+12,,H2     . STATISTICS ROUJP
)@@G@@TINE LINK   @C@@@@PIOX11    EQUF      PIOPKT+13,,H1     . USER X11@C@@@@JQ
)@@G@@PIOX10    EQUF      PIOPKT+13,,H2     . USER X10@D@@@@PAGX11    EQUF    JR
)@@G@@  PIOPKT+14,,H1     . FINDPAGE LINK @F@@@@PIOLOK    EQUF      PIOPKT+14,JS
)@@G@@,S4     . PAGE QUEUE LOCKED FLAG    @F@@@@PIOBLK    EQUF      PIOPKT+14,JT
)@@G@@,S5     . PAGE QUEUE BLOCKED FLAG   @F@@@@PIOMTA    EQUF      PIOPKT+14,JU
)@@G@@,S6     . MULTI-THREAD ACCESS FLAG  @F@@@@PIOHWA    EQUF      PIOPKT+15 JV
)@@G@@        . HIGHEST WRITE ADDRESS     @E@@@@PIOLEN    EQU       16        JW
)@@G@@        . LENGTH OF THE PACKET@[@@@@.     @B@@@@. NOW DEFINE THE FIELDS JX
)@@G@@WITHIN A PAGE     @[@@@@.     @E@@@@PAGQLW    EQUF      0               JY
)@@G@@  . QUEUE-LINK WORD     @E@@@@PAGPPL    EQUF      PAGQLW,,H1        . PRJZ
)@@G@@EVIOUS PAGE LINK  @D@@@@PAGNPL    EQUF      PAGQLW,,H2        . NEXT PAGKA
)@@G@@E LINK@E@@@@PAGDA     EQUF      1                  . PAGE DISC ADDRESS  KB
)@@G@@@E@@@@PAGFW     EQUF      2                  . PAGE FLAG WORD     @D@@@@KC
)@@G@@PAGFLG    EQUF      PAGFW,,H1         . PAGE FLAGS    @H@@@@PAGMOD    EQKD
)@@G@@UF      PAGFW,,S1         . BIT 30 IS MOD FLAG; BIT 35 IS BUSY BIT@G@@@@KE
)@@G@@PAGLOK    EQUF      PAGFW,,S2         . PAGE IS PHYSICALLY LOCKED FLAG  KF
)@@G@@@F@@@@PAGULF    EQUF      PAGFW,,S3         . PAGE IS USER-LOCKED FLAG  KG
)@@G@@@G@@@@PAGIOL    EQUF      PAGFW,,H2         . LINK TO IO PACKET OF DEFINKH
)@@G@@ITION @E@@@@PAGHL     EQU       3                 . PAGE HEADER LENGTH  KI
)@@G@@@F@@@@PAGE      EQUF      3                 . PAGE DATA STARTS HERE     KJ
)@@G@@@[@@@@.     @D@@@@          END                         . OF PIO$FIELDS KK
)@@G@@@[@@@@.     @[@@@@.     @B@@@@. PIO$PKT - BUILD A PACKET FOR PIO$ USERS KL
)@@G@@@[@@@@.     @F@@@@.         PIO$PKT   *'FN' <WC>,<BA> *<DA> <PAL>,<WTF>,KM
)@@G@@<TRA>,<SAL> @[@@@@.     @^@@@@P         PROC      4,16@#@@@@PIO$PKT*  NAKN
)@@G@@ME    @E@@@@PAL       EQU       P(4)>0->P(4,1)    . PAGING AREA LINK    KO
)@@G@@@E@@@@WTF       EQU       P(4)>1->P(4,2)    . WRITE THROUGH FLAG  @D@@@@KP
)@@G@@TF        EQU       P(4)>2->P(4,3)!0  . TRACE FLAG    @D@@@@SF        EQKQ
)@@G@@U       P(4)>3->P(4,4)!0  . STAT FLAG     @E@@@@WF        EQU       P(3,KR
)@@G@@*1)           . WORD ADDRESSES FLAG @F@@@@MTA       EQU       P(1,*1)   KS
)@@G@@        . MULTI-THREAD ACCESS FLAG  @D@@@@          *         $CFS(P(1,1KT
)@@G@@))DL    . THE FILENAME  @^@@@@          +         0D  @A@@@@          + KU
)@@G@@        P(2,1),P(2,2)   @ @@@@          +         P(3,1)    @B@@@@      KV
)@@G@@    $GFORM    6,WTF,6,TF,6,WF,18,SF @E@@@@          +         0,PAL     KW
)@@G@@        . PAGING AREA LINK    @^@@@@          RES       4   @E@@@@      KX
)@@G@@    $GEN      TF->PIO$TRACE,TF++(SF<>0)->PIO$STATS!0  @^@@@@          REKY
)@@G@@S       1   @E@@@@          GFORM     18,,6,,6,,6,MTA   . MULTI-THREAD AKZ
)@@G@@CCESS @B@@@@          RES       1                 .   @#@@@@          ENLA
)@@G@@D     @[@@@@.     @[@@@@.     @B@@@@. PIO$PAI - INITIALIZE THE PAGING ARLB
)@@G@@EA    @[@@@@.     @A@@@@.         PIO$PAI   <NUMBER>,<SIZE> @[@@@@.     LC
)@@G@@@^@@@@P         PROC      *1  @#@@@@PIO$PAI*  NAME    @^@@@@          \PLD
)@@G@@IO$FLAG->END@D@@@@PF        EQU       4*28              . PREP FACTOR   LE
)@@G@@@C@@@@PS        EQU       P(1)=2->P(1,2)//PF*PF!PF    @D@@@@PC        EQLF
)@@G@@U       P(1,1)            . PAGE COUNT    @D@@@@B         EQU       $+3 LG
)@@G@@               . PAGING BASE  @E@@@@PI        EQU       PS+3            LH
)@@G@@   . PAGE INCREMENT     @ @@@@NZ        EQU       PC*PS<>0  @#@@@@      LI
)@@G@@    T$CELL  @C@@@@          +         NZ->B+(PC-1)*PI!0,NZ->B!0   @ @@@@LJ
)@@G@@          +         PS,PS/28  @[@@@@.     @G@@@@. THE HEADER IS DONE, NOLK
)@@G@@W INITIALIZE EACH PAGE HEADER AND RESERVE SPACE @[@@@@.     @^@@@@I     LL
)@@G@@    $REPEAT   PC  @C@@@@          +         I>1->$-PI!0,I<PC->$+PI!0    LM
)@@G@@@^@@@@          +         0D  @^@@@@          RES       PS  @#@@@@      LN
)@@G@@    $ENDR   @D@@@@          END                         . OF PIO$PAI    LO
)@@G@@@[@@@@.     @[@@@@.     @C@@@@. PIO$PAR - RESERVE SPACE FOR THE PAGING ALP
)@@G@@REA   @[@@@@.     @A@@@@. <LABEL> PIO$PAR   <NUMBER>,<SIZE> @[@@@@.     LQ
)@@G@@@G@@@@. THE FIRST WORD GENERATED WILL BE AN ACCESS WORD (LENGTH,ADDRESS)LR
)@@G@@ OF   @F@@@@. THE PAGING AREA, WHICH MAY BE USED WITH THE CALL TO PIOPAILS
)@@G@@$.    @[@@@@.     @^@@@@P         PROC      *1  @#@@@@PIO$PAR*  NAME    LT
)@@G@@@^@@@@          \PIO$FLAG->END@^@@@@PF        EQU       4*28@C@@@@PS    LU
)@@G@@    EQU       P(1)=2->P(1,2)//PF*PF!PF    @D@@@@PC        EQU       P(1,LV
)@@G@@1)            . PAGE COUNT    @A@@@@L         EQU       3+PC*(3+PS)     LW
)@@G@@@ @@@@          +         L,$+1     @H@@@@          RES       L         LX
)@@G@@        . RESERVE SPACE FOR THE PAGING AREA     @#@@@@          END     LY
)@@G@@@[@@@@.     @[@@@@.     @A@@@@. PIOPAI$ - PAGING AREA INITIALIZER @[@@@@LZ
)@@G@@.     @D@@@@.         PIOPAI$   (<LENGTH>,<ADDRESS>) <PAGESIZE>   @[@@@@MA
)@@G@@.     @^@@@@P         PROC      *2  @#@@@@PIOPAI$*  NAME    @^@@@@      MB
)@@G@@    \PIO$FLAG->END@#@@@@          FUNC$   @E@@@@ DO P>2 , LA        A2,AMC
)@@G@@F(P(2),*1)    . GET THE PAGESIZE    @G@@@@ DO P>1 , LA        A1,AF(P(1)MD
)@@G@@,1)     . GET THE PAGE AREA ACCESS WORD   @E@@@@          LMJ       X11,ME
)@@G@@PIOPAI$       . CALL THE SUBROUTINE @#@@@@          END     @[@@@@.     MF
)@@G@@@[@@@@.     @C@@@@. PIONP$ - ADD A NEW PAGE TO THE PAGE QUEUE     @[@@@@MG
)@@G@@.     @E@@@@.         PIONP$    <PAGE AREA ADDRESS> <NEW PAGE ADDRESS>  MH
)@@G@@@[@@@@.     @^@@@@P         PROC      *2  @#@@@@PIONP$*   NAME    @^@@@@MI
)@@G@@          \PIO$FLAG->END@#@@@@          FUNC$   @F@@@@ DO P>2 , LA      MJ
)@@G@@  A2,AF(P(2),1)     . GET THE NEW PAGE ADDRESS  @F@@@@ DO P>1 , LA      MK
)@@G@@  A1,AF(P(1),*1)    . GET THE PAGE AREA ADDRESS @D@@@@          LMJ     ML
)@@G@@  X11,PIONP$        . ADD A NEW PAGE@#@@@@          END     @[@@@@.     MM
)@@G@@@[@@@@.     @A@@@@. PIOFO$ - OPEN A FILE FOR PAGED I/O@[@@@@.     @D@@@@MN
)@@G@@.         PIOFO$    <PACKET> <HIGHEST WRITE ADDRESS>  @[@@@@.     @^@@@@MO
)@@G@@P         PROC      *2  @#@@@@PIOFO$*   NAME    @^@@@@          \PIO$FLAMP
)@@G@@G->END@#@@@@          FUNC$   @G@@@@ DO P>2 , LA        A1,AF(P(2),1)   MQ
)@@G@@  . GET THE HIGHEST WRITE ADDRESS   @F@@@@ DO P>1 , LA        A0,AF(P(1)MR
)@@G@@,*1)    . GET THE PACKET ADDRESS    @E@@@@          LMJ       X11,PIOFO$MS
)@@G@@        . CALL THE SUBROUTINE @#@@@@          END     @[@@@@.     @[@@@@MT
)@@G@@.     @B@@@@. PIOFC$ - CLOSE THE FILE TO PAGED I/O    @D@@@@. PIOPF$ - FMU
)@@G@@LUSH THE PAGES ASSOCIATED WITH THE FILE.  @[@@@@.     @A@@@@.         PIMV
)@@G@@OFC$    <PACKET> <ERROR>@[@@@@.     @^@@@@P         PROC      *2  @ @@@@MW
)@@G@@PIOFC$*   NAME      'PIOFC$'  @ @@@@PIOPF$*   NAME      'PIOPF$'  @^@@@@MX
)@@G@@          \PIO$FLAG->END@#@@@@          FUNC$   @F@@@@ DO P>1 , LA      MY
)@@G@@  A0,AF(P(1),*1)    . GET THE PACKET ADDRESS    @E@@@@          LMJ     MZ
)@@G@@  X11,[P(0,0)]      . CALL THE SUBROUTINE @A@@@@ DO P>2 , JNZ       A3,ANA
)@@G@@F(P(2),1)   @#@@@@          END     @[@@@@.     @C@@@@.         PIOR$   NB
)@@G@@  <PACKET ADDRESS> <ERROR>    @[@@@@.     @C@@@@.         PIOW$     <PACNC
)@@G@@KET ADDRESS> <ERROR>    @[@@@@.     @C@@@@.         PIORL$    <PACKET ADND
)@@G@@DRESS> <ERROR>    @[@@@@.     @C@@@@.         PIOUL$    <PACKET ADDRESS>NE
)@@G@@ <ERROR>    @[@@@@.     @G@@@@. THE <PACKET ADDRESS> MAY BE OMITTED, IN NF
)@@G@@WHICH CASE THE REGISTER LOAD  @#@@@@. IS SUPPRESSED.  @[@@@@.     @^@@@@NG
)@@G@@P         PROC      *2  @^@@@@PIOR$*    NAME      1   @^@@@@PIORL$*   NANH
)@@G@@ME      2   @^@@@@PIOW$*    NAME      3   @^@@@@PIOUL$*   NAME      4   NI
)@@G@@@#@@@@          FUNC$   @E@@@@ DO P>1 , LA        A0,AF(P(1),*1)    . LONJ
)@@G@@AD PACKET ADDRESS @ @@@@          $IF       PIO$FLAG  @F@@@@L         EQNK
)@@G@@U       $L1('PIOR$','PIORL$','PIOW$','PIOUL$')(P(0,0))@ @@@@          LMNL
)@@G@@J       X11,[L]   @#@@@@          $ELSE   @E@@@@L         EQU       $L1(NM
)@@G@@'R$','RDL$','W$','UNL$')(P(0,0))    @ @@@@          LX,U      X11,[L]   NN
)@@G@@@E@@@@          SX        X11,3,A0,S2       . SET FUNCTION CODE   @^@@@@NO
)@@G@@          ER        IOW$@E@@@@          LA        A3,3,A0,S1        . LONP
)@@G@@AD I/O STATUS     @#@@@@          $ENDF   @A@@@@ DO P>2 , JNZ       A3,ANQ
)@@G@@F(P(2),1)   @#@@@@          END     @]@@@@          . @D@@@@          1-NR
)@@G@@>END                      . OF MASM DEF   _@@@@@ONP$    <PAGE AREA ADDRENS
)@@G@@SS> <NEW PAGE ADDRESS>  @[@@@@.     @^@@@@P         PROC      *2  @#@@@@NT
)@@G@@PIONP$*   NAME    @^@@@@          \PIO$FLAG->END*[S@@[*SDFF*@^@@@@ 8)^@)NU
)@@G@@^@)^@)^@)^-^C(A^@)@[@@@@ 0)^@)@D@@@@ 0)E@)ES)C))C0)^@!^@)E[-G9>G))ET^C0)NV
)@@G@@IL\I(4HD,G(3 0)^@)@[@@@@ 0)^@)@K@@@@ 0)C->IT(G9,G(=^[-H1=^[(H(0H->H(>H14NW
)@@G@@G(=^[+JC)CD?GD,^[F 0)ET4G(+GL>H13 ))FDAD1NES)E(JD(#ET# 0)^@)@[@@@@ 0)^@)NX
)@@G@@@L@@@@ 0)E-*HD3^[>H->H(>H14^[=G(&HD,G(3^[-H-?^[KET^C0)IL>H--I->G))I[2H9<NY
)@@G@@IS)G1\IK)I-*G*)G9>H1>IL-H))I(3G(2 0)@[@@@@ 0)^@)@K@@@@ 0)E[NC-AE[MD9#ES)NZ
)@@G@@ *)E-*HD3^[0IL\GS)I9(H-?^@=DDICTGE(^C*)I-*G*)E[NC-AE[MD9#ES)G->G1(H1(I-(OA
)@@G@@H9, 0)@[@@@@ 0)^@)@A@@@@E@)^@)^@)^@)^@)E[MD9#^@)^@)^@) K0^@)@^@@@@E[NC-AOB
)@@G@@E[MD9#ES%^[ICDHC*)@^@@@@^@)^@)^@)^@)^@)C1PD1#^))@C@@@@^@)^@)^@)^@)^@)^-DOC
)@@G@@D1#D-PC- ^@)^9KET^C1KELJCTN^8)@B@@@@E[NC-AE[MD9#ES%^@=C(LE*)^@)^@) 8=D1DOD
)@@G@@D))^@)@^@@@@^@)^@)^@)^@)^@)C(IC))^@)@[@@@@ 0)^@)@A@@@@^@)^@)^@)^@)^@)^-GOE
)@@G@@C(QC(G^@)^@) )1^@)@[@@@@ 0)^@)@I@@@@ 0)E[NC-AC1DC(GC-N^@!^[^G(&HD,G*)I-*OF
)@@G@@G*)G1(G(?G-3^[7HD4H[(H0)I-*G*)E[NC-A^[0GD<HT>I),@[@@@@ 0)^@)@E@@@@ 0)^@)OG
)@@G@@^@)^@)^@)E[NC-AC1DC(GC-N^@/GD=G-2G(3IS" )/J[2G($B0)^@)@[@@@@ 0)^@)@N@@@@OH
)@@G@@ 0)CD?H))G1(G(?G-3^[7HD4H[(H0)I-*G*)E[DD8= (0H92I-(H9,^[\G0)I-*G*)I[-GT:OI
)@@G@@G(4^[+G($HD,^[7HD4H@)^9KDDJ^8?^[7H[(H->^@)@M@@@@ 0)I-*G*)G1(G(?G-3^[5IT>OJ
)@@G@@G))IT4IL(GT4H-9^[+JC)I-*G*)I[-G9>G))ET^C0)IL\I(4HD,G(3^[+G($HD,^[7HD4H@)OK
)@@G@@^9KES$ 0)^@)@F@@@@ 0)E-*G*)G1\IL!GD4^[\G0)I-*G*)I[-GT:G(4^[(IS)GD3^[&H9?OL
)@@G@@H-\I93BK)^@)@[@@@@ 0)^@)@G@@@@ 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)OM
)@@G@@^@)^@)^@)^@)E[NC-A^[KGD<HT>I))@M@@@@ 0)^@)^@)^@)^@)^@! *! *! *! *! *! *!ON
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!OO
)@@G@@@M@@@@ 0)^@)^@)^@)^@)^@'^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)OP
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@'@M@@@@ 0)^@)^@)^@)^@)^@'^@)^@)OQ
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)E[DD8=^[0GD<HT>I))^@)^@)^@)^@)^@)^@)^@)^@)OR
)@@G@@^@)^@)^@)^@'@M@@@@ 0)^@)^@)^@)^@)^@'^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)OS
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@'@M@@@@ 0)^@)^@)^@)OT
)@@G@@^@)^@! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!OU
)@@G@@ *! *! *! *! *! *! *! *!@M@@@@ 0)^@)^@)^@)^@)^@'^[KETHD9^C*)^@'^[KETMCDMOV
)@@G@@C0)^@'^[KET]ETRC0)^@'^@)E[NELNC0)^@'^@)E[NETA^@)^@'^@)^@)^@)^@)^@'@M@@@@OW
)@@G@@ 0)^@)^@)^@)^@)^@! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!OX
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *!@M@@@@ 0)^@)^@)^@)^@)^@'^@)^@)^@)^@)OY
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^[KETMCTR^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)OZ
)@@G@@^@)^@'@M@@@@ 0)^@)^@)^@)^@)^@! *! *! *! *! *! *! *! *! *! *! *! *! *! *!PA
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!@M@@@@ 0)^@)^@)^@)^@)^@'PB
)@@G@@^@)^@)^@)^@)^@)^@)E[NCLG^@)^@)^@)^@)^@)^@)^@'^@)^@)^@)^@)^@)^@)E[NCL[^@)PC
)@@G@@^@)^@)^@)^@)^@)^@'@M@@@@ 0)^@)^@)^@)^@)^@! *! *! *! *! *! *! *! *! *! *!PD
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!@M@@@@ 0)^@)PE
)@@G@@^@)^@)^@)^@'^@)^@)^@)^@)^@)^@)E[NCTMD))^@)^@)^@)^@)^@)^@'^@)^@)^@)^@)^@)PF
)@@G@@^@)E[NELG^@)^@)^@)^@)^@)^@)^@'@M@@@@ 0)^@)^@)^@)^@)^@! *! *! *! *! *! *!PG
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!PH
)@@G@@@M@@@@ 0)^@)^@)^@)^@)^@'^@)^@)^@)^@)^@)^@)E[NDD]CC)^@)^@)^@)^@)^@)^@'^@)PI
)@@G@@^@)^@)^@)^@)^@)E[NF@1AC)^@)^@)^@)^@)^@)^@'@M@@@@ 0)^@)^@)^@)^@)^@! *! *!PJ
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!PK
)@@G@@ *! *! *! *!@M@@@@ 0)^@)^@)^@)^@)^@'^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)PL
)@@G@@^@)^[KETIE9[^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@'@M@@@@ 0)^@)^@)^@)PM
)@@G@@^@)^@! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!PN
)@@G@@ *! *! *! *! *! *! *! *!@M@@@@ 0)^@)^@)^@)^@)^@'^@)^@)^@)^@)^@)^@)^@)^@)PO
)@@G@@^@)^@)^@)^@)^@)^[KETDC-[^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@'@M@@@@PP
)@@G@@ 0)^@)^@)^@)^@)^@! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!PQ
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *!@M@@@@ 0)^@)^@)^@)^@)^@'^@)^@)^@)^@)PR
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)E[NC1MC-[^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)PS
)@@G@@^@)^@'@M@@@@ 0)^@)^@)^@)^@)^@! *! *! *! *! *! *! *! *! *! *! *! *! *! *!PT
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!@M@@@@ 0)^@)^@)^@)^@)^@'PU
)@@G@@^@)^@)^@)^@)^@)^[KETSAC1EK)^@)^@)^@)^@)^@)^@'^@)^@)^@)^@)^@)^@)^@)^@)^@)PV
)@@G@@^@)^@)^@)^@)^@)^@'@M@@@@ 0)^@)^@)^@)^@)^@! *! *! *! *! *! *! *! *! *! *!PW
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!@M@@@@ 0)^@)PX
)@@G@@^@)^@)^@)^@'^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)E[ND1MCTR^@)^@)^@)^@)PY
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@'@M@@@@ 0)^@)^@)^@)^@)^@! *! *! *! *! *! *!PZ
)@@G@@ *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *! *!QA
)@@G@@@[@@@@ 0)^@)@[@@@@ 0)^@)@[@@@@ 0)^@)@A@@@@E@)^@)^@)^@)^@)E[MD9#^@)^@)^@)QB
)@@G@@ K1^@)@^@@@@E[NC-AC1DC(GC-N K)D1[D( @A@@@@^@)^@)^@)^@)^@)^-GC(QC(G^@)^@)QC
)@@G@@ )1^@)@D@@@@E[NE[FE))^@)^@)C(LE(A^@)^@)^@)E@*AC?AC( -K @1 )2 C)^@)@J@@@@QD
)@@G@@^@)^@)^@)^@)^@)E[DD8=C1DC(GC-N^[KETKDTO^@)^@)^@)^@)^@)^@) 0)C- C1DD1 ^[KQE
)@@G@@DDJ^))C1DC(GC-N^@)@J@@@@E[ND1MCC)^@)^@)C(LE(A^@)^@)^@)E[DD9^CC)^@)^@)^@)QF
)@@G@@^@)^@)^@) 0)D1 F[O^[MC([C))CD^C-MC(NES)^@)@J@@@@E[ND(JC- ^@)^@)C(LE(A^@)QG
)@@G@@^@)^@)E[NE[FE):E[DD9GC(I )?ES1^@) 0)C1DD- ^[HD9^C*) @0 )1 )2 C)^@)@I@@@@QH
)@@G@@E[NEL]DDO^@)^@)C(LE*)^@)^@)^@)AC)^@)^@)^@)^@)^@)^@)^@)^@) 0)EL CD^^[HD9^QI
)@@G@@C*)CLDE))^@)@I@@@@E[NE9]DDO^@)^@)C(LE*)^@)^@)^@)AK)^@)^@)^@)^@)^@)^@)^@)QJ
)@@G@@^@) 0)E9MDDOC*)D(JC- ^[]DDO^@)@I@@@@E[NEL[ELA^@)^@)C(LE(A^@)^@)^@)E[NE[FQK
)@@G@@E):E[DD9GC(I )?ES2^@) 0)CDGD))EL CTJEL^^[AD-[C8)@J@@@@E[NCLNE9A^@)^@)C(LQL
)@@G@@E(A^@)^@)^@)E[NE[FE):E[DD9GC(I )?ES3^@) 0)CL[CTFETKCD#C*)E9MDDOC*)C1GCDBQM
)@@G@@@K@@@@E[NELNC0)^@)^@)C(LE(A^@)^@)^@)E[NE[FE):E[DD9GC(I )?ES4^@) 0)EL CD^QN
)@@G@@^[NC(BD( D1O^[AD-[C8) @0 )1 C)@N@@@@E[NETA^@)^@)^@)C(LE(A^@)^@)^@)E[NE[FQO
)@@G@@E):E[DD9GC(I )?ES5^@) 0)ET C9HC(IE))EL CD^ (NDTDE@!C1DD1^^[AD-[C8) @0 )1QP
)@@G@@ )2 C)@J@@@@E[NEL#E8)^@)^@)C(LE(A^@)^@)^@)E[NE[FE):E[DD9GC(I S1^@)^@) 0)QQ
)@@G@@EL CTJEL^^[#D9IE-MD9G^[RD9MC))@J@@@@E[NCL[E8)^@)^@)C(LE(A^@)^@)^@)E[NE[FQR
)@@G@@E):E[DD9GC(I S2^@)^@) 0)CLPC1AC(M^[[CT#C(NES)E9JEL^^@)@I@@@@E[NCLG^@)^@)QS
)@@G@@^@)C(LE(A^@)^@)^@)E[NCL[E8? -CAC)^@)^@)^@)^@) 0)CLPC1AC(M^[GC(IC9OD@)^@)QT
)@@G@@@I@@@@E[NCL[^@)^@)^@)C(LE(A^@)^@)^@)E[NCL[E8? -CAK)^@)^@)^@)^@) 0)CLPC1AQU
)@@G@@C(M^[[C-^EL ETN^@)@K@@@@E[NCTMD))^@)^@)C(LE(A^@)^@)^@)E[NE[FE):E[DD9GC(IQV
)@@G@@ S3 )?D@1^@,^[#E(MEL D1O^[MC(#D9MC))D- D1BE-C^@)@I@@@@E[NELG^@)^@)^@)C(LQW
)@@G@@E(A^@)^@)^@)E[NE[FE):E[DD9GC(I S3 )?D@2^@,^[MC(#D9MC))D- D1BE-C^@)@K@@@@QX
)@@G@@E[NDD]CC)^@)^@)C(LE(A^@)^@)^@)E[NE[FE):E[DD9GC(I S4 )?D@1^@,^[DD1DE-DCDGQY
)@@G@@^[]E(AC1 EK)CD^C-MC(NES)@H@@@@E[NF@1AC)^@)^@)C(LE(A^@)^@)^@)E[NE[FE):E[DQZ
)@@G@@D9GC(I S4 )?D@2^@,^[SAC1^[NCDQC*)^@)@J@@@@E[ND1RCC)^@)^@)C(LE(A^@)^@)^@)RA
)@@G@@E[NE[FE):E[DD9GC(I S5^@)^@) 0)D1 F[O^[RELDE- ^[[C-^EL ETN^@)@J@@@@E[NDD^RB
)@@G@@CC)^@)^@)C(LE(A^@)^@)^@)E[NE[FE):E[DD9GC(I S6^@)^@) 0)DDIDDODD[D))C-DET#RC
)@@G@@^[[C-^EL ETN@N@@@@E[NC1MC-[^@)^@)C(LE(A^@)^@)^@)E[NE[FE):E[DD9GC(I S7^@)RD
)@@G@@^@) 0)C1DELNE))EL CTJEL^^[NC(BD( D1O^[^DDNCS)CD^C-MC(NES)^@)@K@@@@E[NF@1RE
)@@G@@ADM^@)^@)C(LE(A^@)^@)^@)E[NE[FE):E[DD9GC(I S8 )?D@1^@,^[KET^C1M^-M^[MC(ORF
)@@G@@E(MD0)CD^C-MC(NES)@K@@@@E[ND1MCTR^@)^@)C(LE(A^@)^@)^@)E[NE[FE):E[DD9GC(IRG
)@@G@@ S9^@)^@) 0)D1 F[O^[MC(#D9MC))CTJD1OELJD))E9JEL^@J@@@@E[ND- D0)^@)^@)C(LRH
)@@G@@E*)^@)^@)^@)E[DD9GC(I S1A@)^@)^@)^@)^@) 0)D- D1BE-C^[JC0)E-CC*)E[[CTFC(ORI
)@@G@@@[@@@@ 0)^@)@A@@@@ 0)C- C1DD1 ^[ ELMD9M^[HD1 D(JD1DCTN@[@@@@ 0)^@)@I@@@@RJ
)@@G@@E[NC(MC1ID8)^@)C(LE*)^@)^@)^@) *1^@)^@)^@)^@)^@)^@)^@)^@) 0)C1DD- ^[ID9ORK
)@@G@@^[JE[ D1 C))@I@@@@E[NC(MC1ICS)^@)C(LE*)^@)^@)^@) *2^@)^@)^@)^@)^@)^@)^@)RL
)@@G@@^@) 0)C1DD- ^[ID9O^[#D-JET C))@L@@@@E[NC(MC1IEK)^@)C(LE*)^@)^@)^@) *3^@)RM
)@@G@@^@)^@)^@)^@)^@)^@)^@) 0)C1DD- ^[ID9O^[JE[ D1 C))C1JEK)EL CD^DDIC8)@L@@@@RN
)@@G@@E[NC(MC1IE8)^@)C(LE*)^@)^@)^@) *4^@)^@)^@)^@)^@)^@)^@)^@) 0)C1DD- ^[ID9ORO
)@@G@@^[JE[ D1 C))C1JEK)E9MDDODDIC8)@J@@@@E[NC(MD1]EK)^@)C(LE*)^@)^@)^@) *5^@)RP
)@@G@@^@)^@)^@)^@)^@)^@)^@) 0)D1J^[]CD#DTNE[[CT ^[MC(#D9MC-N@^@@@@^@)^@)^@)^@)RQ
)@@G@@^@)C(IC))^@)@[@@@@ 0)^@)@F@@@@ 0)E[NC-AE[FE)) *)CL5HD?G))GC)I[-GT:G(4^[&RR
)@@G@@H92^[KET^C0)I(3G(2IS,^@)@[@@@@ 0)^@)@K@@@@ 0)^@)^@)^@)^@)E[NC-AE[FE))JS%RS
)@@G@@J*$B-&HD?G(,GD!G*"^8)B-0GD?B0)B-2GD2G0" )/GL3I8" )/I-2GC" )/IT-H)"@[@@@@RT
)@@G@@ 0)^@)@A@@@@E@)^@)^@)^@)^@)E[MD9#^@)^@)^@) K3^@)@^@@@@E[NC-AE[FE)%^@)D1[RU
)@@G@@D( ^@)@B@@@@ET[D))^@)^@)^@)C(LE*)^@)^@)^@)E@*AS?A)(^@)@D@@@@^[^D8)E@*AS?RV
)@@G@@AS( *"ET[D).A@) -NCDG^[ EDP^@= @=D-#D0:AK(@L@@@@^@)^@)^@)^@)^@)E[DD8=E[FRW
)@@G@@E))^@)FTK @1 )%AC( *"^8%^9XE@*AC?AC(^@0 )0^@%A@)E@*AK?AC( )?E@*AS?AS( -NRX
)@@G@@CDG^@)@H@@@@^@)^@)^@)^@)^@) S)^@)^@)^@)^@)A@?E@*AS?AC( -K @3 )2 C? )?A@)RY
)@@G@@ 0)EL[ELA ))CLNE8)@A@@@@^@)^@)^@)^@)^@)EL ES)^@)^@)^@)BC)^@)@E@@@@^[^D8)RZ
)@@G@@E@*AS?AS( *"E@*AS?A)(B*0^@?^)*^-GCTI S2 C)EL ES)AC1^@)@]@@@@^)*^-DD-#D0(SA
)@@G@@@^@@@@^@)^@)^@)^@)^@)C(IC))^@)@[@@@@ 0)^@)@G@@@@ 0)E[NC-AE[[^@!^[#IL>GD4SB
)@@G@@G*)GC)I[-G9(H1$^[-IL>GC)G1\IK)E[NC-A^[5IT>IL3 0)@[@@@@ 0)^@)@C@@@@ 0)^@)SC
)@@G@@^@)^@)^@)E[NC-AE[[^@)^@)B-0GS" )/I[3B0)^@)@[@@@@ 0)^@)@L@@@@ 0)B-0GS"^[(SD
)@@G@@IS)I-*G*)I[-G9>^[<H95H14 ))G->G1-I(?I-(H1$^[4H8)AK;^@/I[3B0)HD3^[4H[>^[0SE
)@@G@@GD$G*)IT(JL> ))^@)@D@@@@ 0)G->G1-I(?I-(H1$^[4H8)A)%AK8^@*AC1AK(^[7H92G-3SF
)@@G@@ 0)^@)@[@@@@ 0)^@)@M@@@@ 0)E-*G*)I[-G9(H1$^[-IL>GC)H(-JC)GL>^[3H[-IL>G))SG
)@@G@@GL9^[3G(6G(2GD?^[NC-AE@)I[-GT:G(4IS)IT(H(5H-4GD,G(\I(3H-9^@)@M@@@@ 0) [3SH
)@@G@@G(>^[4H[>^[KDDJ^))G-\GT5H(>H14GD4HD\H0)G1\IK)GC)G-(IT<I(3IT(H9,^[\G0)H90SI
)@@G@@I-(H(-H))GT\H1&HD$I(2GD4HD\H13@ @@@@ 0)H9&^[0GD$HD,G8)GD2G(-IS( 0)@[@@@@SJ
)@@G@@ 0)^@)@A@@@@E@)^@)^@)^@)^@)E[MD9#^@)^@)^@) K1^@)@^@@@@E[NC-AE[[ K)^@)D1[SK
)@@G@@D( ^@)@N@@@@^@)^@)^@)^@)^@)E[DD8=E[[DC)^@)E@*AC(B00 *"E@*AC?AC(^C2 -K @1SL
)@@G@@ C"AC!B1K @1 )2 C-A)%AK8^@,^[HCDFC*)E[[C9DD1B^[[EL CC)@^@@@@^@)^@)^@)^@)SM
)@@G@@^@)C(IC))^@)@[@@@@ 0)^@)@E@@@@ 0)E[2H9<IS)I-\^[$G(,G(2GD4G*)GT-H-?HD,G8)SN
)@@G@@IT>ID5G(,GT>IS,^@)@[@@@@ 0)^@)@#@@@@ 0)D90G(,^[2G(-G)'@[@@@@ 0)^@)@D@@@@SO
)@@G@@ 0)^@)^@)^@)^@)E[NC-AELJ^@)^@)B->IL2B0)B-0HT4B0)B-&GC"@[@@@@ 0)^@)@I@@@@SP
)@@G@@ 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)B->IL2B0)B*)I-2GD,IT&G(2^[-G-=IL>IT3^[&H92SQ
)@@G@@^[>IL2H92IS)@G@@@@ 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)B-0HT4B0)B*)E[NC-A^[0GD<SR
)@@G@@HT>I))GD=G-2G(3IS)@I@@@@ 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)B-&GC"^@)B*)HD,HD4SS
)@@G@@HD-H))G1(H->^[7H92G))GD=G-2G(3IS)^@)@[@@@@ 0)^@)@B@@@@ 0)^@)^@)^@)^@)I9*ST
)@@G@@HD<H@)G9>H1>IL-I->IS'^@)@[@@@@ 0)^@)@B@@@@ 0)^@)^@)^@)^@)D-[^@)^@)^@)^@)SU
)@@G@@CC1 )/G1-B0)@B@@@@ 0)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC0 )/I[:I)"@C@@@@ 0)^@)SV
)@@G@@^@)^@)^@)D-HDK)^@)^@)^@)F@1AC?E[NC-AELJ^@)@B@@@@ 0)^@)^@)^@)^@)DLIFK)^@)SW
)@@G@@^@)^@)CC3 )/G(2IK"@[@@@@ 0)^@)@]@@@@ 0)EL>GD=BK)@[@@@@ 0)^@)@F@@@@ 0)^@)SX
)@@G@@^@)^@)^@)E[NC-AEK)^@)^@)B->IL2B0?B->H9&B0)B-0HT4B0)B-+GD7B0)@[@@@@ 0)^@)SY
)@@G@@@I@@@@ 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)B->IL2B0)B*)I-2GD,IT&G(2^[-G-=IL>IT3SZ
)@@G@@^[&H92^[>IL2H92IS)@J@@@@ 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)B->H9&B0)B*)I-2GD,TA
)@@G@@IT&G(2^[-G-=IL>IT3^[&H92^[ H1= (JG0!C1(H->@G@@@@ 0)^@)^@)^@)^@)^@)^@)^@)TB
)@@G@@^@)^@)B-0HT4B0)B*)E[NC-A^[0GD<HT>I))GD=G-2G(3IS)@L@@@@ 0)^@)^@)^@)^@)^@)TC
)@@G@@^@)^@)^@)^@)B-+GD7B0)B*)GL5G1&G(2^[-GT<G(3IS)I9\IL=BK) [?G(,G94H@?^[-G-=TD
)@@G@@IL>IT3 C)^@)@[@@@@ 0)^@)@B@@@@ 0)^@)^@)^@)^@)I9*HD<H@)G9>H1>IL-I->IS'^@)TE
)@@G@@@[@@@@ 0)^@)@B@@@@ 0)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC1 )/GL-I8"@B@@@@ 0)^@)TF
)@@G@@^@)^@)^@)D-[ -P^@)^@)^@)CC0 )/I[:I)"@C@@@@ 0)^@)^@)^@)^@)D-HDK)^@)^@)^@)TG
)@@G@@F@1AC?E[NC-AEK)^@)@B@@@@ 0)^@)^@)^@)^@)DLIFK)^@)^@)^@)CC3 )/G(2IK"@B@@@@TH
)@@G@@ 0)^@)^@)^@)^@)DLI^@)^@)^@)^@)CC1 )/G(\G0"@[@@@@ 0)^@)@^@@@@ 0)EL>GD=^[3TI
)@@G@@G($H(>H14BK)@[@@@@ 0)^@)@F@@@@ 0)^@)^@)^@)^@)E[NC-AELN^@)^@)B->IL2B0?B->TJ
)@@G@@H9&B0)B-0HT4B0)B-+GD7B0)@[@@@@ 0)^@)@^@@@@ 0)EL>GD=^[+GD<HT7GD2G)'@[@@@@TK
)@@G@@ 0)^@)@F@@@@ 0)^@)^@)^@)^@)E[NC-AEL]^@)^@)B->IL2B0?B->H9&B0)B-0HT4B0)B-+TL
)@@G@@GD7B0)@[@@@@ 0)^@)@A@@@@ 0)EL>GD=^[3G($H(>H14^[+GD<HT7GD2G)'@[@@@@ 0)^@)TM
)@@G@@@F@@@@ 0)^@)^@)^@)^@)E[NC-AELNCK)^@)B->IL2B0?B->H9&B0)B-0HT4B0)B-+GD7B0)TN
)@@G@@@[@@@@ 0)^@)@^@@@@ 0)CT?H93G*)IL>GD=BK)^@)@[@@@@ 0)^@)@C@@@@ 0)^@)^@)^@)TO
)@@G@@^@)E[NC-AEL#^@)^@)B->IL2B0)B-0HT4B0)@[@@@@ 0)^@)@I@@@@ 0)^@)^@)^@)^@)^@)TP
)@@G@@^@)^@)^@)^@)B->IL2B0)B*)I-2GD,IT&G(2^[-G-=IL>IT3^[&H92^[>IL2H92IS)@G@@@@TQ
)@@G@@ 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)B-0HT4B0)B*)E[NC-A^[0GD<HT>I))GD=G-2G(3IS)TR
)@@G@@@[@@@@ 0)^@)@B@@@@ 0)^@)^@)^@)^@)I9*HD<H@)G9>H1>IL-I->IS'^@)@[@@@@ 0)^@)TS
)@@G@@@B@@@@ 0)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC0 )/I[:I)"@C@@@@ 0)^@)^@)^@)^@)D-HTT
)@@G@@DK)^@)^@)^@)F@1AC?E[NC-AEL#^@)@B@@@@ 0)^@)^@)^@)^@)DLIFK)^@)^@)^@)CC3 )/TU
)@@G@@G(2IK"@[@@@@ 0)^@)@C@@@@ 0)CT?H93G*)EL>GD=^[-H1=^[ IL-IT>^[KGD$G(3BK)^@)TV
)@@G@@@[@@@@ 0)^@)@B@@@@ 0)^@)^@)^@)^@)E[NC-AEL#C*)^@)B-0HT4B0)^@)@[@@@@ 0)^@)TW
)@@G@@@^@@@@ 0)D90G(,^[7IL(I->BK)^@)@[@@@@ 0)^@)@D@@@@ 0)^@)^@)^@)^@)E[NC-AE9JTX
)@@G@@^@)^@)B->IL2B0)B-0HT4B0)B-&GC"@[@@@@ 0)^@)@I@@@@ 0)^@)^@)^@)^@)^@)^@)^@)TY
)@@G@@^@)^@)B->IL2B0)B*)I-2GD,IT&G(2^[-G-=IL>IT3^[&H92^[>IL2H92IS)@G@@@@ 0)^@)TZ
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)B-0HT4B0)B*)E[NC-A^[0GD<HT>I))GD=G-2G(3IS)@I@@@@UA
)@@G@@ 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)B-&GC"^@)B*)HD,HD4HD-H))G1(H->^[7IL(I->^[-UB
)@@G@@G-=IL>IT3^@)@[@@@@ 0)^@)@B@@@@ 0)^@)^@)^@)^@)I9*HD<H@)G9>H1>IL-I->IS'^@)UC
)@@G@@@[@@@@ 0)^@)@B@@@@ 0)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC1 )/G1-B0)@B@@@@ 0)^@)UD
)@@G@@^@)^@)^@)D-[ -P^@)^@)^@)CC0 )/I[:I)"@C@@@@ 0)^@)^@)^@)^@)D-HDK)^@)^@)^@)UE
)@@G@@F@1AC?E[NC-AE9J^@)@B@@@@ 0)^@)^@)^@)^@)DLIFK)^@)^@)^@)CC3 )/G(2IK"@[@@@@UF
)@@G@@ 0)^@)@]@@@@ 0)E92HD4G*'@[@@@@ 0)^@)@F@@@@ 0)^@)^@)^@)^@)E[NC-AE8)^@)^@)UG
)@@G@@B->IL2B0)B-0HT4B0)B-2GD7B0)B-2GT7B0)@[@@@@ 0)^@)@I@@@@ 0)^@)^@)^@)^@)^@)UH
)@@G@@^@)^@)^@)^@)B->IL2B0)B*)I-2GD,IT&G(2^[-G-=IL>IT3^[&H92^[>IL2H92IS)@G@@@@UI
)@@G@@ 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)B-0HT4B0)B*)E[NC-A^[0GD<HT>I))GD=G-2G(3IS)UJ
)@@G@@@L@@@@ 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)B-2GD7B0)B*)IL>GT\IL=^[-GT<G(3IS)I9\UK
)@@G@@IL=BK) [?G(,G94H@?^[-G-=IL>IT3 C)^@)@G@@@@ 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)UL
)@@G@@B-2GT7B0)B*)IL>GT\IL=^[<H9,I-2H9?^[7H92G))@[@@@@ 0)^@)@B@@@@ 0)^@)^@)^@)UM
)@@G@@^@)I9*HD<H@)G9>H1>IL-I->IS'^@)@[@@@@ 0)^@)@B@@@@ 0)^@)^@)^@)^@)D-[^@)^@)UN
)@@G@@^@)^@)CC2 )/IL<I8"@B@@@@ 0)^@)^@)^@)^@)D-[^@)^@)^@)^@)CC1 )/IL-I8"@B@@@@UO
)@@G@@ 0)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC0 )/I[:I)"@C@@@@ 0)^@)^@)^@)^@)D-HDK)^@)UP
)@@G@@^@)^@)F@1AC?E[NC-AE8)^@)@B@@@@ 0)^@)^@)^@)^@)DLIFK)^@)^@)^@)CC3 )/G(2IK"UQ
)@@G@@@[@@@@ 0)^@)@^@@@@ 0)CT?H93G*)I92HD4G*'^@)@[@@@@ 0)^@)@C@@@@ 0)^@)^@)^@)UR
)@@G@@^@)E[NC-AE9#^@)^@)B->IL2B0)B-0HT4B0)@[@@@@ 0)^@)@I@@@@ 0)^@)^@)^@)^@)^@)US
)@@G@@^@)^@)^@)^@)B->IL2B0)B*)I-2GD,IT&G(2^[-G-=IL>IT3^[&H92^[>IL2H92IS)@G@@@@UT
)@@G@@ 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)B-0HT4B0)B*)E[NC-A^[0GD<HT>I))GD=G-2G(3IS)UU
)@@G@@@[@@@@ 0)^@)@B@@@@ 0)^@)^@)^@)^@)I9*HD<H@)G9>H1>IL-I->IS'^@)@[@@@@ 0)^@)UV
)@@G@@@B@@@@ 0)^@)^@)^@)^@)D-[ -P^@)^@)^@)CC0 )/I[:I)"@C@@@@ 0)^@)^@)^@)^@)D-HUW
)@@G@@DK)^@)^@)^@)F@1AC?E[NC-AE9#^@)@B@@@@ 0)^@)^@)^@)^@)DLIFK)^@)^@)^@)CC3 )/UX
)@@G@@G(2IK"@[@@@@ 0)^@)@C@@@@ 0)CT?H93G*)I92HD4G*) [-H1=^[>IL-IT>^[0GD$G(3 C'UY
)@@G@@@[@@@@ 0)^@)@C@@@@ 0)^@)^@)^@)^@)E[NC-AE9#C*)^@)B->IL2B0)B-0HT4B0)@[@@@@UZ
)@@G@@ 0)^@)@I@@@@E@)^@)^@)^@)^@)E[MD9#^@)^@)^@) K3^@)^@)^@)^@)^@)^@)^@)^@) 0)VA
)@@G@@B->IL2B0)B-0HT4B0)B-&GC"@H@@@@E[NC-AELJ K)^@)D1[D( ^@)^@)^@)^9KET^C1MD8$VB
)@@G@@^@)^@)^@)^@)^@) 0)D9KC(I^[MC([C))^@)@H@@@@E[NC-AE9J K)^@)D1[D( ^@)^@)^@)VC
)@@G@@^9KET^C1RD8$^@)^@)^@)^@)^@) 0)D9KC(I^[RELDE- ^@)@^@@@@^@)^@)^@)^@)^@)C1PVD
)@@G@@D1#^))@K@@@@^[^D8)E@"AS) ))D-[^@)^@)^@)^@)CC1 -[C0*E@*AS( )1 C)^@)^@) 0)VE
)@@G@@D-JCD^^[ADDGC*)E9JEL^^[[C-^EL ETN^@)@K@@@@^[^D8)E@"AK) ))D-[^@)^@)^@)^@)VF
)@@G@@CC0 -[C0*E@*AK( )%AC(^@)^@) 0)D-JCD^^[KET^C0)E[[CTFC(O^[[C-^EL ETN@C@@@@VG
)@@G@@^@)^@)^@)^@)^@)D-HDK)^@)^@)^@)F@1AC?FTK @0 )0 DX@K@@@@^[^D8)E@"AC) ))DLIVH
)@@G@@FK)^@)^@)^@)CC3 -[C0*E@*AC( )1 C)^@)^@) 0)E-[DT ^[ ELMD9M^[ F[DE))DDA^[[VI
)@@G@@AS/B00@^@@@@^@)^@)^@)^@)^@)C(IC))^@)@H@@@@E@)^@)^@)^@)^@)E[MD9#^@)^@)^@)VJ
)@@G@@ K2^@)^@)^@)^@)^@)^@)^@)^@) 0)B->IL2B0)B-0HT4B0)@H@@@@E[NC-AEL# K)^@)D1[VK
)@@G@@D( ^@)^@)^@)^9KET^C1MCS$^@)^@)^@)^@)^@) 0)CTGD9NC*)EL CD^^@)@J@@@@E[NC-AVL
)@@G@@EL#C*%^@)D1[D( ^@)^@)^@)^9KET^C1MCT ^8)^@)^@)^@)^@) 0)CTGD9NC*)EL CD^^[-VM
)@@G@@H1=^[ EL[ET @H@@@@E[NC-AE9# K)^@)D1[D( ^@)^@)^@)^9KET^C1RCS$^@)^@)^@)^@)VN
)@@G@@^@) 0)CTGD9NC*)E9MDDOC*)@K@@@@E[NC-AE9#C*%^@)D1[D( ^@)^@)^@)^9KET^C1RCT VO
)@@G@@^8)^@)^@)^@)^@) 0)CTGD9NC*)E9MDDOC*)GD,G))C(MCDNC*)^@)@^@@@@^@)^@)^@)^@)VP
)@@G@@^@)C1PD1#^))@K@@@@^[^D8)E@"AK) ))D-[^@)^@)^@)^@)CC0 -[C0*E@*AK( )%AC(^@)VQ
)@@G@@^@) 0)C9 E))E[NC-A^[KCD#DT E))CD^C-MC(NES)@C@@@@^@)^@)^@)^@)^@)D-HDK)^@)VR
)@@G@@^@)^@)F@1AC?FTK @0 )0 DX@I@@@@^[^D8)E@"AC) ))DLIFK)^@)^@)^@)CC3 -[C0*E@*VS
)@@G@@AC( )1 C)^@)^@) 0)C(MELJEK)E-MCDIETAC(M^@)@^@@@@^@)^@)^@)^@)^@)C(IC))^@)VT
)@@G@@@K@@@@E@)^@)^@)^@)^@)E[MD9#^@)^@)^@) K3^@)^@)^@)^@)^@)^@)^@)^@) 0)B->IL2VU
)@@G@@B0?B->H9&B0)B-0HT4B0)B-+GD7B0)@F@@@@E[NC-AEK%^@)^@)D1[D( ^@)^@)^@)^9KET^VV
)@@G@@C1M^8)^@)^@)^@)^@)^@) 0)EL CD^@H@@@@E[NC-AELN K)^@)D1[D( ^@)^@)^@)^9KET^VW
)@@G@@C1MES$^@)^@)^@)^@)^@) 0)EL CD^^[NC(BD( D1O@I@@@@E[NC-AEL] K)^@)D1[D( ^@)VX
)@@G@@^@)^@)^9KET^C1MCK$^@)^@)^@)^@)^@) 0)EL CD^^[]CD#DTRCDMC))^@)@K@@@@E[NC-AVY
)@@G@@ELNCK%^@)D1[D( ^@)^@)^@)^9KET^C1MET]^8)^@)^@)^@)^@) 0)EL CD^^[NC(BD( D1OVZ
)@@G@@^[]CD#DTRCDMC))^@)@^@@@@^@)^@)^@)^@)^@)C1PD1#^))@M@@@@^[^D8)E@"AS) ))D-[WA
)@@G@@^@)^@)^@)^@)CC1 -[C0*E@*AS( )1 C)^@)^@) 0)D-JCD^^[[CT#C(NES)E9JEL^^[JEK)WB
)@@G@@C1DD- ^[[C-^EL ETN@J@@@@^[^D8)E@"AK) ))D-[^@)^@)^@)^@)CC0 -[C0*E@*AK( )%WC
)@@G@@AC(^@)^@) 0)C9 E))E[[CTFC(O^[[C-^EL ETN^@)@C@@@@^@)^@)^@)^@)^@)D-HDK)^@)WD
)@@G@@^@)^@)F@1AC?FTK @0 )0 DX@L@@@@^[^D8)E@*AC(B00^@?^[ED1U^@)^@)CC3 -K @1 )1WE
)@@G@@ C.A@!B0= S1^D[C0*E@*AC( )1 )1 C) 0)C(MELJEK)E-MCDIETAC(M^@)@H@@@@^[^D8)WF
)@@G@@E@*AC(B01^@?^[ED0)^@)^@)CC1 -[C0*E@*AC( )2 )1 C)^@) 0)C(JC0)E-MCDIETAC(MWG
)@@G@@@^@@@@^@)^@)^@)^@)^@)C(IC))^@)@K@@@@E@)^@)^@)^@)^@)E[MD9#^@)^@)^@) K4^@)WH
)@@G@@^@)^@)^@)^@)^@)^@)^@) 0)B->IL2B0)B-0HT4B0)B-+GD7B0)B-2GT7B0)@B@@@@E[NC-AWI
)@@G@@E8%^@)^@)D1[D( ^@)^@)^@)^9KET^C1R^8)@^@@@@^@)^@)^@)^@)^@)C1PD1#^))@K@@@@WJ
)@@G@@^[^D8)E@"A)) ))D-[^@)^@)^@)^@)CC2 -[C0*E@*A)( )1 C)^@)^@) 0)D-JCD^^[MC(#WK
)@@G@@D9MC))CTJD1OELJD))E9JEL^@K@@@@^[^D8)E@"AS) ))D-[^@)^@)^@)^@)CC1 -[C0*E@*WL
)@@G@@AS( )1 C)^@)^@) 0)D-JCD^^[MC(#D9MC))CD#CT ETN^[RD9MC))@K@@@@^[^D8)E@"AK)WM
)@@G@@ ))D-[^@)^@)^@)^@)CC0 -[C0*E@*AK( )%AC(^@)^@) 0)D-JCD^^[KET^C0)E[[CTFC(OWN
)@@G@@^[[C-^EL ETN@C@@@@^@)^@)^@)^@)^@)D-HDK)^@)^@)^@)F@1AC?FTK @0 )0 DX@I@@@@WO
)@@G@@^[^D8)E@"AC) ))DLIFK)^@)^@)^@)CC3 -[C0*E@*AC( )1 C)^@)^@) 0)C(MELJEK)E-MWP
)@@G@@CDIETAC(M^@)@^@@@@^@)^@)^@)^@)^@)C(IC))^@)@#@@@@^@)^@)^@)^@)^@) 0)@H@@@@WQ
)@@G@@^@)^@)^@)^@)^@)AC!B1 D1^^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)D9A^[HCDND*)WR
)@@G@@C- C0)_@@@@@EL ETN@C@@@@^@)^@)^@)^@)^@)D-HDK)^@)^@)^@)F@1AC?FTK @0 )0 DXWS
)@@G@@@K@@@@^[^D8)E@"AC) ))DLIFK)^@)^@)^@)CC3 -[C0*E@*AC( )1 C)^@)^@) 0)E-[DT WT
)@@G@@*[S@@@*SDFF*@#@@@@          $DEF    @ @@@@          $LEVEL    0,1,0     WU
)@@G@@@[@@@@.     @G@@@@. A  SET  OF  PROCS  TO  ENABLE  GLOBALIZATION  OF LABWV
)@@G@@ELS FROM ARBITRARY@G@@@@. DEPTHS. FOR INSTANCE, THE USER MAY WISH TO DESWW
)@@G@@IGN A SET OF PROCS WHICH@G@@@@. MAY BE DYNAMICALLY NESTED TO ANY  LEVEL,WX
)@@G@@  AND  WHICH  MUST  ALSO  PASS@G@@@@. INFORMATION  FROM  ONE  CALL  TO  WY
)@@G@@THE NEXT. THIS IS POSSIBLE BY MERELY@G@@@@. APPENDING A VERY LARGE AMOUNWZ
)@@G@@T OF ASTERISKS TO THE LABELS WHOSE  VALUES@G@@@@. ARE  TO  BE RETAINED FXA
)@@G@@ROM CALL TO CALL AT THE RISK OF 'L' FLAG ERRORS.@G@@@@. THESE PROCS ACCOXB
)@@G@@MPLISH THE SAME  BY  PROVIDING  THE  EXACT  NUMBER  OF@G@@@@. ASTERISKS XC
)@@G@@ NECESSARY FOR EACH PARTICULAR VARIABLE BEING GLOBALIZED. IN@G@@@@. THISXD
)@@G@@ WAY, EACH VARIABLE IS DEFINED AT THE MAIN ASSEMBLY  LEVEL,  WHICH@G@@@@XE
)@@G@@. IS  THEN  OBTAINABLE  AT  LOWER  LEVELS,  ASSUMING THAT THE LABELS AREXF
)@@G@@@G@@@@. UNIQUE (NOT MASKED OUT BY SIMILAR LABELS AT LOWER LEVELS). IF THXG
)@@G@@ERE IS@G@@@@. SOME QUESTION AS TO  THE  VARIABLES'  UNIQUENESS,  THE  MAXH
)@@G@@IN  ASSEMBLY@G@@@@. VARIABLES'  VALUES  MAY  BE  OBTAINED  BY  USING THEXI
)@@G@@ FUNC 'VAL$' WHICH@G@@@@. RETURNS THE LEVEL 1  VALUE  OF  ITS  EVALUATEDXJ
)@@G@@  STRING  ARGUMENT.  EG:@E@@@@. VAL$('LABEL') . THE FUNC 'VAL$' IS IN THXK
)@@G@@E ELEMENT 'FUNCS'.@[@@@@.     @B@@@@. ALTERNATIVE CALLING SEQUENCES ADDEXL
)@@G@@D:    @[@@@@.     @A@@@@. <LABEL>    EQU$,<LEVEL>   <VALUE> @D@@@@. <LABXM
)@@G@@EL>    EQUF$,<LEVEL>  <UFIELD>,<XREG>,<PARTWORD>@ @@@@. <LABEL>    DELETXN
)@@G@@E$,<LEVEL>  @[@@@@.     @G@@@@. WHERE  <LEVEL>  DEFINES  THE LEVEL TO OPXO
)@@G@@ERATE ON; DEFAULT VALUE IS ONE@G@@@@. (1) RESULTING IN THE OPERATION PERXP
)@@G@@FORMING AT THE MAIN ASSEMBLY LEVEL. @[@@@@.     @B@@@@. ALAN STEBBENS, YXQ
)@@G@@FNSS UOMCSC, 03/07/78   @^@@@@. LAST UPDATE 11/25/78  @[@@@@.     @G@@@@XR
)@@G@@. THIS PROC ALLOWS THE USER TO DEFINE A MAIN ASSEMBLY LEVEL LABEL AT ANYXS
)@@G@@@]@@@@. DEPTH.    @[@@@@.     @ @@@@. <LABEL>[*]   EQU$   <VALUE> @[@@@@XT
)@@G@@.     @G@@@@. <LABEL>  WILL  HAVE  <VALUE>  AS  ITS  LEVEL  1  (MAIN ASSXU
)@@G@@EMBLY LEVEL)@G@@@@. DEFINITION. IF THE '*' IS APPENDED, <LABEL> WILL BE XV
)@@G@@EXTERNALIZED  (IE:@ @@@@. WILL BECOME AN ENTRY POINT).@[@@@@.     @^@@@@XW
)@@G@@P         $PROC     *1  @^@@@@EQU$*     $NAME     .   @F@@@@[$SR('*',$LEXX
)@@G@@V-(P(0)=1->1!P(0,1)))] $EQU   [P(1,*1)->'*']P(1,1)    @#@@@@          $EXY
)@@G@@ND    @[@@@@.     @[@@@@.     @G@@@@. THIS PROC ALLOWS THE USER TO EQUF XZ
)@@G@@ITEMS AT THE MAIN ASSEMBLY LEVEL.   @[@@@@.     @D@@@@. <LABEL>      EQUYA
)@@G@@F$   <UFIELD>,<XREG>,<PARTWORD>     @[@@@@.     @G@@@@. <LABEL>  WILL  BYB
)@@G@@E  EQUF'ED  TO  <UFIELD>,<XREG>,<PARTWORD> AT THE MAIN@G@@@@. ASSEMBLY LYC
)@@G@@EVEL. NOTE THAT EQUF'ED ITEMS MAY  NOT  HAVE  AN  ADDITIONAL@B@@@@. ASTEYD
)@@G@@RISK (THEY CANNOT BE EXTERNALIZED). @[@@@@.     @^@@@@P         $PROC   YE
)@@G@@  *1  @#@@@@EQUF$*    $NAME   @F@@@@[$SR('*',$LEV-(P(0)=1->1!P(0,1)))] $YF
)@@G@@EQUF  [P(1,*1)->'*']P(1,1),;  @B@@@@          [P(1,*2)->'*']P(1,2),P(1,3YG
)@@G@@)     @#@@@@          $END    @[@@@@.     @[@@@@.     @G@@@@. THIS  PROCYH
)@@G@@  ALLOWS  ITEMS  DEFINED  AT  THE  MAIN ASSEMBLY LEVEL TO BE@G@@@@. DELEYI
)@@G@@TED; TREES MAY BE 'PRUNED' IN THIS MANNER BY USING THE SELECTOR TO@^@@@@YJ
)@@G@@. TRIMMED IN THE LABEL. @[@@@@.     @^@@@@. <LABEL>[*]   DELETE$  @[@@@@YK
)@@G@@.     @G@@@@. <LABEL>  (WHICH  MAY  INCLUDE  SELECTORS)  IS  DELETED  FRYL
)@@G@@OM  THE MAIN@G@@@@. ASSEMBLY   LEVEL.  IF  THE  ASTERISK  IS  APPENDED, YM
)@@G@@ THIS  CAUSES  ANY@C@@@@. PREVIOUSLY DEFINED ENTRY POINT TO BE DELETED. YN
)@@G@@@[@@@@.     @^@@@@P         $PROC     *0  @#@@@@DELETE$*  $NAME   @B@@@@YO
)@@G@@[$SR('*',$LEV-(P(0)=1->1!P(0,1)))] $DELETE@#@@@@          $END    @[@@@@YP
)@@G@@.     @C@@@@          1->END                      . OF DEF  _@@@@@  ASSUYQ
)@@G@@*[S@@@*SDFF*@#@@@@.   J P R O C S   @[@@@@.     @G@@@@. THIS  PROC  PROVYR
)@@G@@IDES  SOME EXTENSIONS TO THE ASSEMBLER'S REPERTOIRE OF@G@@@@. INSTRUCTIOYS
)@@G@@NS WITH RESPECT TO CONDITIONAL BRANCHING. (IE: NOW THERE  IS@G@@@@. A JUYT
)@@G@@MP INSTRUCTION CORRESPONDING TO EVERY TEST INSTRUCTION). THERE ARE@G@@@@YU
)@@G@@. ALSO  SOME  ADDITIONAL  TEST  INSTRUCTIONS  THAT ARE SIMULATED IN THISYV
)@@G@@@ @@@@. PROC. YOU'LL SEE THEM BELOW.@[@@@@.     @G@@@@. IN  THE  DESCRIPYW
)@@G@@TIONS  BELOW,  A  U-FIELD  MAY  CONSIST OF UP TO THREE@G@@@@. SUBFIELDS:YX
)@@G@@ [*]<UA>,[*]<X>,<PW>. DESTINATION U-FIELDS MAY ONLY HAVE TWO@G@@@@. SUBFYY
)@@G@@IELDS: AN ADDRESS AND AN X-REGISTER. CERTAIN PROCS  MAY  NOT  HAVE@G@@@@YZ
)@@G@@. INCREMENTATION  SPECIFIED ON THEIR CALL (IT WILL BE IGNORED ANYWAY) ASZA
)@@G@@@G@@@@. THEY GENERATE TWO TEST INSTRUCTIONS WHICH TEST THE SAME  U-FIELDZB
)@@G@@.  THE@G@@@@. <PW> SPECIFICATION MAY APPEAR AS EITHER THE THIRD U-FIELD ZC
)@@G@@SUBFIELD, OR@F@@@@. AS THE SECOND SUBFIELD ON THE PROC CALL, IN THE DIREZD
)@@G@@CTIVE FIELD.@[@@@@.     @D@@@@.         JE,U      A0,5 EQUAL        . JUZE
)@@G@@MP IF A0=5  @[@@@@. OR  @D@@@@.         JE        A0,5,,U EQUAL     . JUZF
)@@G@@MP IF A0=5  @[@@@@.     @^@@@@. HERE ARE THE PROCS:   @[@@@@.     @^@@@@ZG
)@@G@@. A = ANY A-REGISTER    @^@@@@. X = ANY X-REGISTER    @F@@@@. U = U-FIELZH
)@@G@@D FOR TEST INSTRUCTION WITH INCREMENTATION ALLOWED    @G@@@@. U2 = U-FIEZI
)@@G@@LD FOR TEST INSTRUCTIONS WITH NO INCREMENTATION ALLOWED     @F@@@@. U3 =ZJ
)@@G@@ U-FIELD FOR DOUBLE REGISTER TESTS WITH NO PARTWORDS ALLOWED@B@@@@. D = ZK
)@@G@@DESTINATION IF CONDITION IS TRUE    @D@@@@. M = ADDRESS OF MASK FOR MASKZL
)@@G@@ED SEARCH INSTRUCTIONS  @#@@@@. R = ANY REGISTER@[@@@@.     @B@@@@.     ZM
)@@G@@    JE        A,U D    JUMP EQUAL   @C@@@@.         JNE       A,U D    JZN
)@@G@@UMP NOT EQUAL     @C@@@@.         JG        A,U D    JUMP GREATER THAN  ZO
)@@G@@@D@@@@.         JLE       A,U D    JUMP LESS THAN OR EQUAL  @C@@@@.     ZP
)@@G@@    JEP       A,U D    JUMP EVEN PARITY   @C@@@@.         JOP       A,U ZQ
)@@G@@D    JUMP ODD PARITY    @C@@@@.         JW        A,U D    JUMP WITHIN RZR
)@@G@@ANGE  @D@@@@.         JNW       A,U D    JUMP NOT WITHIN RANGE    @[@@@@ZS
)@@G@@.     @D@@@@.         SEJ       A,U D    SEARCH EQUAL AND JUMP    @D@@@@ZT
)@@G@@.         SNEJ      A,U D    SEARCH NOT EQUAL AND JUMP@F@@@@.         SLZU
)@@G@@EJ      A,U D    SEARCH LESS THAN OR EQUAL AND JUMP   @F@@@@.         SNZV
)@@G@@GJ      A,U D    SEARCH NOT GREATER THAN AND JUMP     @E@@@@.         SGZW
)@@G@@J       A,U D    SEARCH GREATER THAN AND JUMP   @E@@@@.         SWJ     ZX
)@@G@@  A,U D    SEARCH WITHIN RANGE AND JUMP   @F@@@@.         SNWJ      A,U ZY
)@@G@@D    SEARCH NOT WITHIN RANGE AND JUMP     @[@@@@.     @E@@@@.         MSZZ
)@@G@@EJ      A,U D    MASKED SEARCH EQUAL AND JUMP   @F@@@@.         MSNEJ   AA
)@@G@@  A,U D    MASKED SEARCH NOT EQUAL AND JUMP     @F@@@@.         MSLEJ   AB
)@@G@@  A,U D    MASKED SEARCH LESS OR EQUAL AND JUMP @F@@@@.         MSNGJ   AC
)@@G@@  A,U D    MASKED SEARCH NOT GREATER AND JUMP   @E@@@@.         MSGJ    AD
)@@G@@  A,U D    MASKED SEARCH GREATER AND JUMP @F@@@@.         MSWJ      A,U AE
)@@G@@D    MASKED SEARCH WITHIN RANGE AND JUMP  @G@@@@.         MSNWJ     A,U AF
)@@G@@D    MASKED SEARCH NOT WITHIN RANGE AND JUMP    @G@@@@.         MASLJ   AG
)@@G@@  A,U D    MASKED ALPHA SEARCH LESS OR EQUAL & JUMP   @F@@@@.         MAAH
)@@G@@SGJ     A,U D    MASKED ALPHA SEARCH GREATER AND JUMP @[@@@@.     @C@@@@AI
)@@G@@.         JEZ       U D      JUMP EQUAL TO ZERO @C@@@@.         JZM     AJ
)@@G@@  U D      JUMP ZERO MEMORY   @D@@@@.         JNEZ      U D      JUMP NOAK
)@@G@@T EQUAL TO ZERO   @D@@@@.         JNZM      U D      JUMP NON ZERO MEMORAL
)@@G@@Y     @C@@@@.         JPV       U D      JUMP POSITIVE VALUE@D@@@@.     AM
)@@G@@    JPM       U D      JUMP POSITIVE MEMORY     @B@@@@.         JPOS    AN
)@@G@@  U D      JUMP POSITIVE@C@@@@.         JNV       U D      JUMP NEGATIVEAO
)@@G@@ VALUE@D@@@@.         JNM       U D      JUMP NEGATIVE MEMORY     @B@@@@AP
)@@G@@.         JNEG      U D      JUMP NEGATIVE@[@@@@.     @D@@@@.         JNAQ
)@@G@@GM      X,U D    JUMP NOT GREATER MODIFIER@F@@@@.         JLEM      X,U AR
)@@G@@D    JUMP LESS THAN OR EQUAL MODIFIER     @E@@@@.         JGM       X,U AS
)@@G@@D    JUMP GREATER THAN MODIFIER     @[@@@@.     @C@@@@.         TL      AT
)@@G@@  A,U2     TEST LESS THAN     @C@@@@.         TGE       A,U2     TEST GRAU
)@@G@@EATER THAN  @C@@@@.         TNL       A,U2     TEST NOT LESS THAN @[@@@@AV
)@@G@@.     @C@@@@.         JL        A,U2 D   JUMP LESS THAN     @E@@@@.     AW
)@@G@@    JGE       A,U2 D   JUMP GREATER THAN OR EQUAL     @C@@@@.         JNAX
)@@G@@L       A,U2 D   JUMP NOT LESS THAN @[@@@@.     @D@@@@.         DTNE    AY
)@@G@@  A,U3      DOUBLE TEST NOT EQUAL   @[@@@@.     @C@@@@.         DJE     AZ
)@@G@@  A,U3 D    DOUBLE JUMP EQUAL @D@@@@.         DJNE      A,U3 D   DOUBLE BA
)@@G@@JUMP NOT EQUAL    @[@@@@.     @E@@@@.         JNGD      R,D      JUMP NOBB
)@@G@@T GREATER AND DECREMENT @G@@@@.         JMNGI     X,D      JUMP MODIFIERBC
)@@G@@ NOT GREATER AND INCREMENT    @G@@@@.         JMLEI     X,D      JUMP MOBD
)@@G@@DIFIER LESS THAN OR EQUAL AND INC   @D@@@@.         DJNZ      A,D      DBE
)@@G@@OUBLE JUMP NON ZERO     @[@@@@.     @[@@@@.     @[@@@@/     @G@@@@. THE BF
)@@G@@ FOLLOWING  PROCS  ARE  MORE  COMPLEX  THAN  SIMPLE  TEST AND JUMP@G@@@@BG
)@@G@@. GENERATORS. THESE PROCS FACILITATE TABLE SEARCHES, WHERE A TABLE IS  ABH
)@@G@@@G@@@@. DATA  STRUCTURE  THAT  IS  COMPOSED OF A NUMBER OF ITEMS, OF 1 OBI
)@@G@@R MORE@G@@@@. WORDS IN LENGTH, ALLOCATED SEQUENTIALLY.  THE  VARIABLES  BJ
)@@G@@INVOLVED  IN@ @@@@. SEARCHING  A  TABLE  ARE:   @[@@@@.     @ @@@@. A) TBK
)@@G@@HE TABLE ADDRESS (TA)   @E@@@@. B) THE TABLE SIZE (TS) (NUMBER OF ITEMS BL
)@@G@@IN THE TABLE)     @D@@@@. C) THE ITEM SIZE (IS) (NUMBER OF WORDS PER ITEBM
)@@G@@M)    @F@@@@. D) THE ITEM OFFSET (IO) (THE FIELD IN THE ITEM TO SEARCH FBN
)@@G@@OR)   @E@@@@. E) THE A-REGISTER THAT CONTAINS THE SEARCH VALUE (AREG)   BO
)@@G@@@E@@@@. F) THE X-REGISTER TO USE AS AN INCREMENTING INDEX (XREG)  @G@@@@BP
)@@G@@. G) A POSSIBLE MASK TO USE FOR AND INDICATE A MASKED SEARCH (MASK)     BQ
)@@G@@@G@@@@. H) A POSSIBLE PARTWORD (PW) WITHIN THE ITEM OFFSET BEGIN SEARCHEBR
)@@G@@D     @[@@@@.     @G@@@@. THE  TABLE ADDRESS (TA) AND TABLE SIZE (TS) MABS
)@@G@@YBE INDICATED INDIRECTLY@G@@@@. THROUGH A TABLE CONTROL WORD (TCW) WHICHBT
)@@G@@ IS A WORD CONTAINING BOTH THE@B@@@@. TS AND TA IN H1 AND H2, RESPECTIVEBU
)@@G@@LY.   @[@@@@.     @G@@@@. THE  PROC  CALL, WITH COMPLETE SPECIFICATION OBV
)@@G@@F ALL OF THESE VARIABLES@#@@@@. IS AS FOLLOWS:  @[@@@@.     @^@@@@. A = BW
)@@G@@ANY A-REGISTER    @A@@@@. IO = ITEM OFFSET TO SEARCH FOR    @C@@@@. IS =BX
)@@G@@ ITEM SIZE (NUMBER OF WORDS PER ITEM)     @C@@@@. TS = TABLE SIZE (NUMBEBY
)@@G@@R OF ITEMS PER TABLE)   @^@@@@. TA = TABLE ADDRESS    @C@@@@. TCW = TABLBZ
)@@G@@E CONTROL WORD (ADDRESS OF (TS,TA)) @B@@@@. M = POSSIBLE MASK FOR MASKEDCA
)@@G@@ SEARCHES   @C@@@@. PW = POSSIBLE PARTWORD FOR NON-MASKED SEARCHES@D@@@@CB
)@@G@@. X = ANY X-REGISTER TO USE FOR AN INCREMENTING INDEX @[@@@@.     @D@@@@CC
)@@G@@. <LABEL> TXX[,PW]  AREG,IO,XREG[,PW] IS,TS,TA [MASK] @[@@@@.     @[@@@@CD
)@@G@@. OR  @[@@@@.     @D@@@@. <LABEL> TXX[,PW]  AREG,IO,XREG[,PW] IS,TCW [MACE
)@@G@@SK]   @[@@@@.     @G@@@@. WHERE  'TXX'  CORRESPONDS  TO  ONE  OF  THE PRCF
)@@G@@OCS BELOW. IF <LABEL> IS@G@@@@. GIVEN,  IS  IT  ASSIGNED  TO  THE  ADDRECG
)@@G@@SS  OF  THE  GENERATED  SEARCH@G@@@@. INSTRUCTION SO THAT CONTROL MAY BECH
)@@G@@ PASSED DIRECTLY TO IT  TO  CONTINUE@G@@@@. THE  CURRENT  SEARCH  FOR MUCI
)@@G@@LTI-WORD SEARCHES, FOR EXAMPLE. AN EXAMPLE@D@@@@. MAY MAKE THE USAGE OF CJ
)@@G@@THIS PROC A LITTLE CLEARER:   @[@@@@.     @G@@@@. SUPPOSE  WE  HAVE  A  CK
)@@G@@SYMBOL TABLE (A SIMPLE ONE) THAT IS SEQUENTIALLY@G@@@@. ALLOCATED, AND TCL
)@@G@@HAT THE SYMBOL TABLE ENTRIES ARE EACH  5  WORDS  LONG,@A@@@@. WITH THE FCM
)@@G@@OLLOWING DEFINITION:    @[@@@@.     @E@@@@. STITEM  EQU       0         CN
)@@G@@        . SYMBOL TABLE ITEM   @G@@@@. STNAME  EQU       STITEM          CO
)@@G@@  . FIRST TWO WORDS ARE SYMBOL NAMES@E@@@@. STALNK  EQUF      STITEM+2,,CP
)@@G@@H1      . ALPHABETIC LINK     @F@@@@. STLLNK  EQUF      STITEM+2,,H2    CQ
)@@G@@  . DEFINITION LEVEL LINK     @E@@@@. STDESC  EQUF      STITEM+3        CR
)@@G@@  . DESCRIPTOR WORD     @D@@@@. STVALU  EQUF      STITEM+4,,H1      . LICS
)@@G@@NK TO VALUE @F@@@@. STVSIZ  EQUF      STITEM+4,,H2      . SIZE OF THE VACT
)@@G@@LUE ITEM    @G@@@@. STSIZE  EQU       5                 . # OF WORDS IN CU
)@@G@@SYMBOL TABLE ITEM @[@@@@.     @G@@@@. NOW  SUPPOSE WE DEFINE A SYMBOL TACV
)@@G@@BLE CONTROL WORD WHICH HAS IN H1 THE@G@@@@. CURRENT NUMBER OF ITEMS DEFICW
)@@G@@NED IN THE TABLE, AND IN H2,  THE  ADDRESS@^@@@@. OF THE SYMBOL TABLE.  CX
)@@G@@@[@@@@.     @F@@@@. STCW    +         $-$,$+1           . SYMBOL TABLE CCY
)@@G@@ONTROL WORD @F@@@@.         RES       STSIZE*500        . MAKE ROOM FOR CZ
)@@G@@500 ENTRIES @[@@@@.     @G@@@@. NOW, FURTHER SUPPOSE THAT WE HAVE AN INDDA
)@@G@@ENTIFIER IN A0,A1 THAT WE WANT@G@@@@. TO  FIND  IN  THE  SYMBOL TABLE, TDB
)@@G@@HAT IDMASK HAS A MASK SO THAT WE CAN@G@@@@. SEARCH FOR AN ABREVIATED SYMDC
)@@G@@BOL (LIKE FINDING 'FIND' WITH 'FI' AS IN A@G@@@@. COMMAND TABLE), AND THDD
)@@G@@AT A3 IS AVAILABLE  FOR  OUR  USE.  HERE,  THEN,@F@@@@. WOULD BE THE APPDE
)@@G@@ROPRIATE PROC CALL TO SEARCH THE SYMBOL TABLE:  @[@@@@.     @G@@@@. TSRCDF
)@@G@@H   TMSE      A0,STNAME,A3 STSIZE,STCW IDMASK . FIND IDENTIFIER   @ @@@@DG
)@@G@@.         J         NOTFOUND  @F@@@@.         JNE       A1,STNAME+1,A3 TDH
)@@G@@SRCH . IF NOT EQUAL, GO BACK  @[@@@@.     @G@@@@. WHICH WOULD GENERATES DI
)@@G@@THE NECESSARY INSTRUCTIONS TO PERFORM A 'MSE' ON@G@@@@. THE SYMBOL TABLEDJ
)@@G@@, WHICH WOULD THEN SKIP THE NEXT  INSTRUCTION  IF  THE@^@@@@. SYMBOL WERDK
)@@G@@E FOUND.    @[@@@@.     @^@@@@. HERE ARE THE PROCS    @[@@@@.     @B@@@@DL
)@@G@@.         TSE       TABLE SEARCH EQUALS   @B@@@@.         TSNE      TABLDM
)@@G@@E SEARCH NOT EQUAL@C@@@@.         TSNG      TABLE SEARCH NOT GREATER    DN
)@@G@@@D@@@@.         TSLE      TABLE SEARCH LESS THAN OR EQUAL   @B@@@@.     DO
)@@G@@    TSG       TABLE SEARCH GREATER  @C@@@@.         TSW       TABLE SEARDP
)@@G@@CH WITHIN RANGE   @D@@@@.         TSNW      TABLE SEARCH NOT WITHIN RANGDQ
)@@G@@E     @C@@@@.         TMSE      TABLE MASKED SEARCH EQUALS  @D@@@@.     DR
)@@G@@    TMSNE     TABLE MASKED SEARCH NOT EQUALS    @E@@@@.         TMSLE   DS
)@@G@@  TABLE MASKED SEARCH LESS THAN OR EQUALS @E@@@@.         TMSNG     TABLDT
)@@G@@E MASKED SEARCH NOT GREATER THAN    @D@@@@.         TMSG      TABLE MASKDU
)@@G@@ED SEARCH G REATER THAN @D@@@@.         TMSW      TABLE MASKED SEARCH WIDV
)@@G@@THIN RANGE  @E@@@@.         TMSNW     TABLE MASKED SEARCH NOT WITHIN RANDW
)@@G@@GE    @G@@@@.         TMASL     TABLE MASKED ALPHANUMERIC SEARCH LESS THDX
)@@G@@AN OR EQUALS@F@@@@.         TMASG     TABLE MASKED ALPHANUMERIC SEARCH GDY
)@@G@@REATER THAN @[@@@@.     @[@@@@.     @C@@@@. ALAN STEBBENS, UOMCSC SYSTEMDZ
)@@G@@S STAFF, 3/3/77   @^@@@@. LAST UPDATE 02/26/79  @[@@@@.     @#@@@@/     EA
)@@G@@    DEF     @ @@@@          LEVEL     0,1,0     @[@@@@.     @E@@@@.     EB
)@@G@@    J<XX>[,<PW>]   <AREG>,<UFIELD>  <DESTINATION>     @[@@@@.     @^@@@@EC
)@@G@@P         PROC      2,2 @D@@@@JE*       NAME      'TNE'               JUED
)@@G@@MP EQUAL    @D@@@@JNE*      NAME      'TE'                JUMP NOT EQUALEE
)@@G@@@D@@@@JG*       NAME      'TLE'               JUMP GREATER  @E@@@@JLE*  EF
)@@G@@    NAME      'TG'                JUMP LESS OR EQUAL  @E@@@@JEP*      NAEG
)@@G@@ME      'TOP'               JUMP EVEN PARITY    @E@@@@JOP*      NAME    EH
)@@G@@  'TEP'               JUMP ODD PARITY     @E@@@@JW*       NAME      'TNWEI
)@@G@@'               JUMP WITHIN RANGE   @F@@@@JNW*      NAME      'TW'      EJ
)@@G@@          JUMP NOT WITHIN RANGE     @B@@@@PW        EQU       P(0)>1->P(EK
)@@G@@0,1)!P(1,4) @G@@@@          [P(0,0)],PW P(1,1),[P(1,*2)->'*']P(1,2),[P(1EL
)@@G@@,*3)->'*']P(1,3)  @F@@@@          J         [P(2,*1)->'*']P(2,1),[P(2,*2EM
)@@G@@)->'*']P(2,2)     @#@@@@          END     @[@@@@.     @E@@@@.         S<EN
)@@G@@XX>J[,<PW>]   <AREG>,<UFIELD>  <DESTINATION>    @[@@@@.     @^@@@@P     EO
)@@G@@    PROC      2,3 @F@@@@SEJ*      NAME      'SE'                SEARCH EEP
)@@G@@QUAL AND JUMP     @F@@@@SNEJ*     NAME      'SNE'               SEARCH NEQ
)@@G@@OT EQUAL AND JUMP @G@@@@SLEJ*     NAME      'SLE'               SEARCH LER
)@@G@@ESS OR EQUAL AND JUMP   @G@@@@SNGJ*     NAME      'SNG'               SEES
)@@G@@ARCH NOT GREATER AND JUMP     @F@@@@SGJ*      NAME      'SG'            ET
)@@G@@    SEARCH GREATER AND JUMP   @G@@@@SWJ*      NAME      'SW'            EU
)@@G@@    SEARCH WITHIN RANGE AND JUMP    @G@@@@SNWJ*     NAME      'SNW'     EV
)@@G@@          SEARCH NOT WITHIN RANGE AND JUMP@B@@@@PW        EQU       P(0)EW
)@@G@@>1->P(0,1)!P(1,4) @G@@@@          [P(0,0)],PW P(1,1),[P(1,*2)->'*']P(1,2EX
)@@G@@),[P(1,*3)->'*']P(1,3)  @^@@@@          J         $+2 @F@@@@          J EY
)@@G@@        [P(2,*1)->'*']P(2,1),[P(2,*2)->'*']P(2,2)     @#@@@@          ENEZ
)@@G@@D     @[@@@@.     @E@@@@.         MS<XX>J   <AREG>,<UFIELD>  [<MASK>]  <FA
)@@G@@DESTINATION>@[@@@@.     @^@@@@P         PROC      *3  @G@@@@MSEJ*     NAFB
)@@G@@ME      'MSE'               MASKED SEARCH EQUAL AND JUMP    @G@@@@MSNEJ*FC
)@@G@@    NAME      'MSNE'              MASKED SEARCH NOT EQUAL AND JUMP@H@@@@FD
)@@G@@MSLEJ*    NAME      'MSLE'              MASKED SEARCH LESS OR EQUAL AND FE
)@@G@@JUMP  @H@@@@MSNGJ*    NAME      'MSNG'              MASKED SEARCH NOT GRFF
)@@G@@EATER AND JUMP    @G@@@@MSGJ*     NAME      'MSG'               MASKED SFG
)@@G@@EARCH GREATER AND JUMP  @H@@@@MSWJ*     NAME      'MSW'               MAFH
)@@G@@SKED SEARCH WITHIN RANGE AND JUMP   @I@@@@MSNWJ*    NAME      'MSNW'    FI
)@@G@@          MASKED SEARCH NOT WITHIN RANGE AND JUMP     @I@@@@MASLJ*    NAFJ
)@@G@@ME      'MASL'              MASKED ALPHA SEARCH LESS OR EQUAL & JUMP    FK
)@@G@@@H@@@@MASGJ*    NAME      'MASG'              MASKED ALPHA SEARCH GREATEFL
)@@G@@R AND JUMP  @^@@@@Q         EQU       P-1 @ @@@@          DO        Q=3 FM
)@@G@@, ;   @H@@@@          LR        0101,[P(2,*1)->'*']P(2,1),[P(2,*2)->'*']FN
)@@G@@P(2,2),P(2,3)     @G@@@@          [P(0,0)]  P(1,1),[P(1,*2)->'*']P(1,2),FO
)@@G@@[P(1,*3)->'*']P(1,3)    @^@@@@          J         $+2 @E@@@@          J FP
)@@G@@        [P(Q,*1->'*']P(Q,1),[P(Q,*2)->'*']P(Q,2)@#@@@@          END     FQ
)@@G@@@[@@@@.     @C@@@@.         J<XX>[,<PW>]  <UFIELD>  <DESTINATION> @[@@@@FR
)@@G@@.     @^@@@@P         PROC      2,2 @E@@@@JEZ*      NAME      'TNZ'     FS
)@@G@@          JUMP EQUAL TO ZERO  @E@@@@JZM*      NAME      'TNZ'           FT
)@@G@@    JUMP ZERO MEMORY    @F@@@@JNEZ*     NAME      'TZ'                JUFU
)@@G@@MP NOT EQUAL TO ZERO    @E@@@@JNZM*     NAME      'TZ'                JUFV
)@@G@@MP NON ZERO MEMORY@E@@@@JPV*      NAME      'TN'                JUMP POSFW
)@@G@@ITIVE VALUE @E@@@@JPM*      NAME      'TN'                JUMP POSITIVE FX
)@@G@@MEMORY@D@@@@JPOS*     NAME      'TN'                JUMP POSITIVE @E@@@@FY
)@@G@@JNV*      NAME      'TP'                JUMP NEGATIVE VALUE @E@@@@JNM*  FZ
)@@G@@    NAME      'TP'                JUMP NEGATIVE MEMORY@D@@@@JNEG*     NAGA
)@@G@@ME      'TP'                JUMP NEGATIVE @B@@@@PW        EQU       P(0)GB
)@@G@@>1->P(0,1)!P(1,3) @F@@@@          [P(0,0)],PW [P(1,*1)->'*']P(1,1),[P(1,GC
)@@G@@*2)->'*']P(1,2)   @F@@@@          J         [P(2,*1)->'*']P(2,1),[P(2,*2GD
)@@G@@)->'*']P(2,2)     @#@@@@          END     @[@@@@.     @D@@@@.         JLGE
)@@G@@EM[,<PW>]  <XREG>,<UFIELD>  <DESTINATION> @[@@@@.     @^@@@@P         PRGF
)@@G@@OC      2,3 @H@@@@JNGM*     NAME      .                   JUMP NOT GREATGG
)@@G@@ER (THAN ZERO) MODIFIER @H@@@@JLEM*     NAME      .                   JUGH
)@@G@@MP LESS OR EQUAL (TO ZERO) MODIFIER @B@@@@PW        EQU       P(0)>1->P(GI
)@@G@@0,1)!P(1,4) @G@@@@          TLEM,PW   P(1,1),[P(1,*2)->'*']P(1,2),[P(1,*GJ
)@@G@@3)->'*']P(1,3)    @^@@@@          J         $+2 @F@@@@          J       GK
)@@G@@  [P(2,*1)->'*']P(2,1),[P(2,*2)->'*']P(2,2)     @#@@@@          END     GL
)@@G@@@[@@@@.     @D@@@@.         JGM[,<PW>]  <XREG>,<UFIELD>  <DESTINATION>  GM
)@@G@@@[@@@@.     @^@@@@P         PROC      2,2 @H@@@@JGM*      NAME      .   GN
)@@G@@                JUMP GREATER (THAN ZERO) MODIFIER     @B@@@@PW        EQGO
)@@G@@U       P(0)>1->P(0,1)!P(1,4) @G@@@@          TLEM,PW   P(1,1),[P(1,*2)-GP
)@@G@@>'*']P(1,2),[P(1,*3)->'*']P(1,3)    @F@@@@          J         [P(2,*1)->GQ
)@@G@@'*']P(2,1),[P(2,*2)->'*']P(2,2)     @#@@@@          END     @[@@@@.     GR
)@@G@@@A@@@@.         TL[,<PW>]  <AREG>,<UFIELD>@[@@@@.     @^@@@@P         PRGS
)@@G@@OC      1,2 @D@@@@TL*       NAME      .                   TEST LESS     GT
)@@G@@@G@@@@A         EQUF      [P(1,*2)->'*']P(1,2),P(1,3),P(0)>1->P(0,1)!P(1GU
)@@G@@,4)   @ @@@@          TG        P(1,1),A  @ @@@@          TNE       P(1,GV
)@@G@@1),A  @#@@@@          END     @[@@@@.     @B@@@@.         TGE[,<PW>]  <AGW
)@@G@@REG>,<UFIELD>     @[@@@@.     @^@@@@P         PROC      1,3 @F@@@@TGE*  GX
)@@G@@    NAME      .                   TEST GREATER OR EQUAL     @D@@@@TNL*  GY
)@@G@@    NAME      .                   TEST NOT LESS @G@@@@A         EQUF    GZ
)@@G@@  [P(1,*2)->'*']P(1,2),P(1,3),P(0)>1->P(0,1)!P(1,4)   @ @@@@          TGHA
)@@G@@        P(1,1),A  @ @@@@          TNE       P(1,1),A  @^@@@@          J HB
)@@G@@        $+2 @#@@@@          END     @[@@@@.     @D@@@@.         JL[,<PW>HC
)@@G@@]  <AREG>,<UFIELD>  <DESTINATION>   @[@@@@.     @^@@@@P         PROC    HD
)@@G@@  2,4 @D@@@@JL*       NAME      .                   JUMP LESS     @H@@@@HE
)@@G@@          TGE       P(1,1),[P(1,*2)->'*']P(1,2),P(1,3),P(0)>1->P(0,1)!P(HF
)@@G@@1,4)  @F@@@@          J         [P(2,*1)->'*']P(2,1),[P(2,*2)->'*']P(2,2HG
)@@G@@)     @#@@@@          END     @[@@@@.     @D@@@@.         JGE[,<PW>]  <AHH
)@@G@@REG>,<UFIELD>  <DESTINATION>  @[@@@@.     @^@@@@P         PROC      2,3 HI
)@@G@@@F@@@@JGE*      NAME      .                   JUMP GREATER OR EQUAL     HJ
)@@G@@@D@@@@JNL*      NAME      .                   JUMP NOT LESS @H@@@@      HK
)@@G@@    TL        P(1,1),[P(1,*2)->'*']P(1,2),P(1,3),P(0)>1->P(0,1)!P(1,4)  HL
)@@G@@@F@@@@          J         [P(2,*1)->'*']P(2,1),[P(2,*2)->'*']P(2,2)     HM
)@@G@@@#@@@@          END     @[@@@@.     @A@@@@.         DTNE      <AREG>,<UFHN
)@@G@@IELD> @[@@@@.     @^@@@@P         PROC      1,2 @F@@@@DTNE*     NAME    HO
)@@G@@  .                   DOUBLE TEST NOT EQUAL     @G@@@@          DTE     HP
)@@G@@  P(1,1),[P(1,*2)->'*']P(1,2),[P(1,*3)->'*']P(1,3)    @^@@@@          J HQ
)@@G@@        $+2 @#@@@@          END     @[@@@@.     @D@@@@.         DJE     HR
)@@G@@  <AREG>,<UFIELD>  <DESTINATION>    @[@@@@.     @^@@@@P         PROC    HS
)@@G@@  2,3 @E@@@@DJE*      NAME      .                   DOUBLE JUMP EQUAL   HT
)@@G@@@G@@@@          DTE       P(1,1),[P(1,*2)->'*']P(1,2),[P(1,*3)->'*']P(1,HU
)@@G@@3)    @^@@@@          J         $+2 @F@@@@          J         [P(2,*1)->HV
)@@G@@'*']P(2,1),[P(2,*2)->'*']P(2,2)     @#@@@@          END     @[@@@@.     HW
)@@G@@@D@@@@.         DJNE      <AREG>,<UFIELD>  <DESTINATION>    @[@@@@.     HX
)@@G@@@^@@@@P         PROC      2,2 @F@@@@DJNE*     NAME      .               HY
)@@G@@    DOUBLE JUMP NOT EQUAL     @G@@@@          DTE       P(1,1),[P(1,*2)-HZ
)@@G@@>'*']P(1,2),[P(1,*3)->'*']P(1,3)    @F@@@@          J         [P(2,*1)->IA
)@@G@@'*']P(2,1),[P(2,*2)->'*']P(2,2)     @#@@@@          END     @[@@@@.     IB
)@@G@@@B@@@@.         JNGD      <REG>,<DESTINATION>   @B@@@@.         JMNGI   IC
)@@G@@  <XREG>,<DESTINATION>  @B@@@@.         DJNZ      <AREG>,<DESTINATION>  ID
)@@G@@@[@@@@.     @^@@@@P         PROC      1,2 @G@@@@JNGD*     NAME      'JGDIE
)@@G@@'               JUMP NOT GREATER AND DECREMENT  @I@@@@JMNGI*    NAME    IF
)@@G@@  'JMGI'              JUMP MODIFIER NOT GREATER AND INCREMENT     @I@@@@IG
)@@G@@JMLEI*    NAME      'JMGI'              JUMP MODIFIER LESS OR EQUAL & INIH
)@@G@@CREMENT     @E@@@@DJNZ*     NAME      'DJZ'               DOUBLE JUMP NOII
)@@G@@N ZERO@ @@@@          [P(0,0)]  P(1,1),$+2@F@@@@          J         [P(1IJ
)@@G@@,*2)->'*']P(1,2),[P(1,*3)->'*']P(1,3)     @#@@@@          END     @[@@@@IK
)@@G@@/     @^@@@@. TABLE SEARCH PROCS    @[@@@@.     @G@@@@.         T<XXX>[,IL
)@@G@@<PW>]  <A>,<IO>,<X>[,<PW>]  <IS>,<TS>,<TA> [<MA>]     @F@@@@.         T<IM
)@@G@@XXX>[,<PW>]  <A>,<IO>,<X>[,<PW>]  <IS>,<TCW>  [<MA>]  @[@@@@.     @^@@@@IN
)@@G@@P         PROC      *3  @^@@@@TSE*      NAME      'SE'@ @@@@TSNE*     NAIO
)@@G@@ME      'SNE'     @ @@@@TSNG*     NAME      'SNG'     @ @@@@TSLE*     NAIP
)@@G@@ME      'SLE'     @^@@@@TSG*      NAME      'SG'@^@@@@TSW*      NAME    IQ
)@@G@@  'SW'@ @@@@TSNW*     NAME      'SNW'     @[@@@@.     @ @@@@TMSE*     NAIR
)@@G@@ME      *'MSE'    @ @@@@TMSNE*    NAME      *'MSNE'   @ @@@@TMSNG*    NAIS
)@@G@@ME      *'MSNG'   @ @@@@TMSLE*    NAME      *'MSLE'   @ @@@@TMSG*     NAIT
)@@G@@ME      *'MSG'    @ @@@@TMSW*     NAME      *'MSW'    @ @@@@TMSNW*    NAIU
)@@G@@ME      *'MSNW'   @ @@@@TMASL*    NAME      *'MASL'   @ @@@@TMASG*    NAIV
)@@G@@ME      *'MASG'   @[@@@@.     @#@@@@          FUNC$   @D@@@@M         EQIW
)@@G@@U       P(0,*0)           . MASK FLAG     @E@@@@F         EQU       P(0,IX
)@@G@@0):(\M->',J') . GET THE FUNCTION    @F@@@@J         EQU       \M->P(0)>1IY
)@@G@@->P(0,1)!P(1,4)!0 . GET PARTWORD    @F@@@@          DO        M->P(3)>0 IZ
)@@G@@, ;     . IF MASK SPECIFIED, GET IT @D@@@@          LR        R2,AF(P(3)JA
)@@G@@,1)     . GET THE MASK  @D@@@@A         EQU       P(1,1)            . A JB
)@@G@@REGISTER    @D@@@@IO        EQU       P(1,2)            . ITEM OFFSET   JC
)@@G@@@D@@@@X         EQU       P(1,3)            . X REGISTER    @D@@@@IS    JD
)@@G@@    EQU       P(2,1)            . ITEM SIZE     @A@@@@          DO      JE
)@@G@@  NRI(IS)>0 , ;   @G@@@@          $DISPLAY 'ERROR - ITEM SIZE MUST BE ANJF
)@@G@@ ABSOLUTE CONSTANT'     @F@@@@CWF       EQU       P(2)=2            . SEJG
)@@G@@T CONTROL WORD FLAG     @E@@@@          $IF       CWF               . IFJH
)@@G@@ CONTROL WORD     @E@@@@          LR,H1     R1,P(2,2)         . GET THE JI
)@@G@@TABLE SIZE  @F@@@@          LX,H2     X,P(2,2)          . GET THE TABLE JJ
)@@G@@ADDRESS     @G@@@@          AX        X,(IS-1,-(IS-1))  . FIX UP INCREMEJK
)@@G@@NT AND PREP INDEX @H@@@@          $ELSE                       . CAN OPTIJL
)@@G@@MIZE INTO ONE LOAD INSTRUCTION@E@@@@          LR        R1,AF(P(2),*2,1)JM
)@@G@@  . GET THE TABLE SIZE  @D@@@@          LX        X,(IS,P(2,3)-IS)  . GEJN
)@@G@@T AN INDEX  @C@@@@          $ENDF                       . ALL SET @E@@@@JO
)@@G@@*         [F]       A,IO+IS,*X        . PERFORM THE SEARCH  @D@@@@      JP
)@@G@@    END                         . THAT'S IT     @[@@@@.     @C@@@@      JQ
)@@G@@    1->END                      . OF DEF  _@@@@@MP MODIFIER NOT GREATER JR
)@@G@@*[S@@@*SDFF*@#@@@@          $DEF    @ @@@@          $LEVEL    0,1,0     JS
)@@G@@@[@@@@.     @#@@@@.   P R O C S     @[@@@@.     @ @@@@. A COLLECTION OF JT
)@@G@@USEFUL PROCS@[@@@@.     @[@@@@.     @ @@@@. CONTROL STATEMENT SUBMISSIONJU
)@@G@@@[@@@@.     @B@@@@.         CSF$      <CONTROL WORD ADDRESS>@B@@@@.     JV
)@@G@@    ACSF$     <CONTROL WORD ADDRESS>@[@@@@.     @E@@@@.         CSF     JW
)@@G@@  '<STRING>'        . FIELDATA STRING     @C@@@@.         CSF       <LENJX
)@@G@@GTH>,<IMAGE ADDR> . CSF$@[@@@@.     @D@@@@.         ACSF      '<STRING>'JY
)@@G@@        . ASCII STRING  @D@@@@.         ACSF      <LENGTH>,<IMAGE ADDR> JZ
)@@G@@. ACSF$     @[@@@@.     @]@@@@. EXAMPLES: @[@@@@.     @D@@@@.         CSKA
)@@G@@F$      (4,('@ASG,T TEMPFILE$//KEY'L))    @[@@@@.     @C@@@@.         CSKB
)@@G@@F       '@ASG,AY PERMFILE$//KEY,F33'@[@@@@.     @ @@@@.         CSF     KC
)@@G@@  4,CSFIMAGE@[@@@@.     @^@@@@P         $PROC     *1  @ @@@@CSF$*     $NKD
)@@G@@AME     'CSF$'    @ @@@@ACSF$*    $NAME     'ACSF$'   @#@@@@          FUKE
)@@G@@NC$   @A@@@@          LA        12,AF(P(1),1)   @ @@@@          ER      KF
)@@G@@  [P(0,0)]  @#@@@@          $END    @^@@@@P         $PROC     *1  @^@@@@KG
)@@G@@CSF*      $NAME     0   @^@@@@ACSF*     $NAME     1   @A@@@@          LAKH
)@@G@@        12,(PCW$$ 1,0)  @B@@@@          ER        [P(0,0)->'A']CSF$     KI
)@@G@@@#@@@@          $END    @[@@@@.     @ @@@@. PCT INFORMATION RETRIEVAL   KJ
)@@G@@@[@@@@.     @E@@@@.         PCT$      <ADDRESS>[,<WORD COUNT>[,<START WOKK
)@@G@@RD>]] @[@@@@.     @]@@@@. EXAMPLES: @[@@@@.     @F@@@@.         PCT$    KL
)@@G@@  RUNID             . GET THE FIRST WORD OF PCT$@[@@@@.     @G@@@@.     KM
)@@G@@    PCT$      ACCT,2,023        . GET THE ACCOUNT NUMBER IN PCT   @[@@@@KN
)@@G@@.     @[@@@@.     @^@@@@P         $PROC     *1  @#@@@@PCT$*     $NAME   KO
)@@G@@@#@@@@          FUNC$   @F@@@@          LA        12,UF(+(P(1)=3->0!P(1)KP
)@@G@@=1->1!P(1,2),P(1,1)))   @D@@@@          $DO P(1)=3 , LA 13,(P(1,2)->P(1,KQ
)@@G@@2)!1,P(1,3))@^@@@@          ER        PCT$@#@@@@          $END    @[@@@@KR
)@@G@@.     @A@@@@. SEND IMAGES TO THE PRINT FILE     @[@@@@.     @B@@@@.     KS
)@@G@@    PRINT$    <CONTROL WORD ADDRESS>@B@@@@.         APRINT$   <CONTROL WKT
)@@G@@ORD ADDRESS>@[@@@@.     @B@@@@.         PRINT     [<SPACING>,]'<STRING>'KU
)@@G@@@E@@@@.         PRINT     [<SPACING>,]<LENGTH>,<IMAGE ADDRESS>    @[@@@@KV
)@@G@@.     @B@@@@.         APRINT    [<SPACING>,]'<STRING>'@E@@@@.         APKW
)@@G@@RINT    [<SPACING>,]<LENGTH>,<IMAGE ADDRESS>    @[@@@@.     @]@@@@. EXAMKX
)@@G@@PLES: @[@@@@.     @A@@@@.         PRINT$    (101,('READY')) @[@@@@.     KY
)@@G@@@B@@@@.         PRINT     'ERROR IN PROGRAM!'   @[@@@@.     @B@@@@.     KZ
)@@G@@    APRINT    3,'*** WARNING ***'   @[@@@@.     @G@@@@.         PRINT   LA
)@@G@@  2,10,BUFFER       . PRINT 10 WORDS FROM BUFFER AFTER@E@@@@.           LB
)@@G@@                          . SKIPPING TWO LINES  @[@@@@.     @^@@@@P     LC
)@@G@@    $PROC     *1  @ @@@@PRINT$*   $NAME     'PRINT$'  @ @@@@APRINT$*  $NLD
)@@G@@AME     'APRINT$' @#@@@@          FUNC$   @A@@@@          LA        12,ALE
)@@G@@F(P(1),1)   @ @@@@          ER        [P(0,0)]  @#@@@@          $END    LF
)@@G@@@^@@@@P         $PROC     *1  @^@@@@PRINT*    $NAME     0   @^@@@@APRINTLG
)@@G@@*   $NAME     1   @A@@@@          LA        12,(PCW$$ 1,1)  @B@@@@      LH
)@@G@@    ER        [P(0,0)->'A']PRINT$   @#@@@@          $END    @[@@@@.     LI
)@@G@@@[@@@@.     @B@@@@. SEND IMAGES TO AN ALTERNATE PRINT FILE  @[@@@@.     LJ
)@@G@@@A@@@@.         PRNTA$    <PACKET ADDRESS>@A@@@@.         APRNTA$   <PACLK
)@@G@@KET ADDRESS>@[@@@@.     @F@@@@.         PRNTA     '<FILENAME>'  [<SPACINLL
)@@G@@G>,]'<OUTPUT IMAGE>'    @G@@@@.         PRNTA     '<FILENAME>'  [<SPACINLM
)@@G@@G>,]<LENGTH>,<IMAGE ADDRESS>  @[@@@@.     @F@@@@.         APRNTA    '<FILN
)@@G@@LENAME>'  [<SPACING>,]'<OUTPUT IMAGE>'    @G@@@@.         APRNTA    '<FILO
)@@G@@LENAME>'  [<SPACING>,]<LENGTH>,<IMAGE ADDRESS>  @[@@@@.     @[@@@@.     LP
)@@G@@@^@@@@P         $PROC     *1  @ @@@@PRNTA$*   $NAME     'PRNTA$'  @ @@@@LQ
)@@G@@APRNTA$*  $NAME     'APRNTA$' @#@@@@          FUNC$   @A@@@@          LALR
)@@G@@        12,AF(P(1),*1)  @ @@@@          ER        [P(0,0)]  @#@@@@      LS
)@@G@@    $END    @^@@@@P         $PROC     *2  @^@@@@PRNTA*    $NAME     0   LT
)@@G@@@^@@@@APRNTA*   $NAME     1   @]@@@@$($LCN+2)   @^@@@@PKT       PCW$$   LU
)@@G@@  2,1 @A@@@@          *         $CFS(P(1,1))DL  @]@@@@$($LCN-2)   @ @@@@LV
)@@G@@          LA,14     12,PKT    @B@@@@          ER        [P(0,0)->'A']PRNLW
)@@G@@TA$   @#@@@@          $END    @[@@@@.     @#@@@@. PRINT CONTROL   @[@@@@LX
)@@G@@.     @B@@@@.         PRTCN$    <CONTROL WORD ADDRESS>@B@@@@.         APLY
)@@G@@RTCN$   <CONTROL WORD ADDRESS>@[@@@@.     @B@@@@.         PRTCN     '<COLZ
)@@G@@NTROL IMAGE>'     @C@@@@.         PRTCN     <LENGTH>,<IMAGE ADDRESS>    MA
)@@G@@@[@@@@.     @B@@@@.         APRTCN    '<CONTROL IMAGE>'     @C@@@@.     MB
)@@G@@    APRTCN    <LENGTH>,<IMAGE ADDRESS>    @[@@@@.     @]@@@@. EXAMPLES: MC
)@@G@@@[@@@@.     @A@@@@.         PRTCN     'D,@@TTY I,80'  @[@@@@.     @^@@@@MD
)@@G@@P         $PROC     *1  @ @@@@PRTCN$*   $NAME     'PRTCN$'  @ @@@@APRTCNME
)@@G@@$*  $NAME     'APRTCN$' @#@@@@          FUNC$   @A@@@@          LA      MF
)@@G@@  12,AF(P(1),1)   @ @@@@          ER        [P(0,0)]  @#@@@@          $EMG
)@@G@@ND    @^@@@@P         $PROC     *1  @^@@@@PRTCN*    $NAME     0   @^@@@@MH
)@@G@@APRTCN*   $NAME     1   @A@@@@          LA        12,(PCW$$ 1,0)  @B@@@@MI
)@@G@@          ER        [P(0,0)->'A']PRTCN$   @#@@@@          $END    @[@@@@MJ
)@@G@@.     @[@@@@.     @ @@@@. ALTERNATE PRINT FILE CONTROL@[@@@@.     @B@@@@MK
)@@G@@.         PRTCA$    <CONTROL WORD ADDRESS>@B@@@@.         APRTCA$   <CONML
)@@G@@TROL WORD ADDRESS>@[@@@@.     @D@@@@.         PRTCA     '<FILENAME>'  '<MM
)@@G@@CONTROL IMAGE>'   @C@@@@.         PRTCA     <LENGTH>,<IMAGE ADDRESS>    MN
)@@G@@@[@@@@.     @D@@@@.         APRTCA    '<FILENAME>'  '<CONTROL IMAGE>'   MO
)@@G@@@C@@@@.         APRTCA    <LENGTH>,<IMAGE ADDRESS>    @[@@@@.     @[@@@@MP
)@@G@@.     @^@@@@P         $PROC     *1  @ @@@@PRTCA$*   $NAME     'PRTCA$'  MQ
)@@G@@@ @@@@APRTCA$*  $NAME     'APRTCA$' @#@@@@          FUNC$   @A@@@@      MR
)@@G@@    LA        12,AF(P(1),1)   @ @@@@          ER        [P(0,0)]  @#@@@@MS
)@@G@@          $END    @^@@@@P         $PROC     *2  @^@@@@PRTCA*    $NAME   MT
)@@G@@  0   @^@@@@APRTCA*   $NAME     1   @^@@@@          $IF       P=2 @A@@@@MU
)@@G@@          LA        12,(PCW$$ 1,1)  @#@@@@          $ELSE   @]@@@@$($LCNMV
)@@G@@+2)   @D@@@@A         $EQU      [P(0,0)->'$CAS'!'$CFS'](P(2,1)L)  @A@@@@MW
)@@G@@PKT       *         $CFS(P(1,1))DL  @^@@@@          *         (A)L@ @@@@MX
)@@G@@PKTL      $EQU      $-PKT     @]@@@@$($LCN-2)   @A@@@@          LA      MY
)@@G@@  12,(PKTL,PKT)   @#@@@@          $ENDF   @B@@@@          ER        [P(0MZ
)@@G@@,0)->'A']PRTCA$   @#@@@@          $END    @[@@@@.     @[@@@@.     @ @@@@NA
)@@G@@. PRINT CONTROL WORD PROC     @[@@@@.     @C@@@@.         PCW       [<SPNB
)@@G@@ACING>,]'<PRINT IMAGE>' @E@@@@.         PCW       [<SPACING>,]<LENGTH>,<NC
)@@G@@IMAGE ADDRESS>    @[@@@@.     @[@@@@.     @^@@@@P         $PROC     *1  ND
)@@G@@@^@@@@PCW*      $NAME     0   @^@@@@APCW*     $NAME     1   @^@@@@      NE
)@@G@@    PCW$$     1,1 @#@@@@          $END    @[@@@@ .    @D@@@@ . PCW$$ - GNF
)@@G@@ENERATE AN INTERNAL PRINT CONTROL WORD    @[@@@@ .    @H@@@@ . THIS  PRONG
)@@G@@C  IS USED INTERNALLY BY OTHER PROCS. IT DEPENDS HEAVILY UPON     @G@@@@NH
)@@G@@ . THE FACT THAT THE PARAFORM LABELS FOR THE OTHER PROCS ARE *ALL* 'P'. NI
)@@G@@@[@@@@ .    @^@@@@Q         $PROC     *1  @^@@@@PCW$$*    $NAME     .   NJ
)@@G@@@ @@@@L         $EQU      Q(1,1)    @ @@@@N         $EQU      +P(L)     NK
)@@G@@@C@@@@          $DO       N=2 ,SF $EQU $TSTR(P(L,2))  @C@@@@SKIP      $ENL
)@@G@@QU      (N=2->SF!N=3)->P(L,1)!Q(1,2)@A@@@@          $DO       N=2->SF!N=NM
)@@G@@1 ,;  @D@@@@P(L,N)*   $EQU      [P(0,0)->'$CAS'!'$CFS'](P(L,N))   @G@@@@NN
)@@G@@LEN       $EQU      (N=2->\SF!N=3)->P(L,N-1)!$SL(P(L,N))//(P(0,0)->4!6) NO
)@@G@@@D@@@@ADDR      $EQU      (N=2->SF!N=1)->(P(L,N)L)!P(L,N)   @B@@@@      NP
)@@G@@    $GFORM    12,SKIP,6,LEN,18,ADDR @#@@@@          $END    @[@@@@.     NQ
)@@G@@@[@@@@.     @C@@@@. ALTERNATE PRINT FILE PRINT CONTROL PACKET     @[@@@@NR
)@@G@@.     @F@@@@.         PRNTAP    '<FILENAME>'  [<SPACING>,]'<OUTPUT IMAGENS
)@@G@@>'    @F@@@@.         PRNTAP    '<FILENAME>' [<SPACING>,]<LENGTH>,<IMAGENT
)@@G@@ ADDR>@[@@@@.     @[@@@@.     @^@@@@P         $PROC     *2  @^@@@@PRNTAPNU
)@@G@@*   $NAME     0   @^@@@@APRNTAP*  $NAME     1   @^@@@@          PCW$$   NV
)@@G@@  2,1 @A@@@@          *         $CFS(P(1,1))LD  @#@@@@          $END    NW
)@@G@@@[@@@@.     @A@@@@. READ IMAGES FROM THE RUNSTREAM    @[@@@@.     @B@@@@NX
)@@G@@.         READ      <EOF>,<BUFFER ADDRESS>@G@@@@.         READ      <EOFNY
)@@G@@>             . A0 ALREADY HAS BUFFER ADDRESS   @[@@@@.     @B@@@@.     NZ
)@@G@@    AREAD     <EOF>,<BUFFER ADDRESS>@G@@@@.         AREAD     <EOF>     OA
)@@G@@        . A0 ALREADY HAS BUFFER ADDRESS   @[@@@@.     @B@@@@.         REOB
)@@G@@AD$     <CONTROL WORD ADDRESS>@B@@@@.         AREAD$    <CONTROL WORD ADOC
)@@G@@DRESS>@[@@@@.     @^@@@@P         $PROC     *1  @ @@@@READ*     $NAME   OD
)@@G@@  'READ$'   @ @@@@AREAD*    $NAME     'AREAD$'  @#@@@@          FUNC$   OE
)@@G@@@B@@@@ DO P(1)=2 , LA     12,(P(1,1),P(1,2))    @ @@@@ DO P(1)=1 , LXI,1OF
)@@G@@4 12,P(1,1) @ @@@@          ER        [P(0,0)]  @#@@@@          $END    OG
)@@G@@@^@@@@P         $PROC     *1  @ @@@@READ$*    $NAME     'READ$'   @ @@@@OH
)@@G@@AREAD$*   $NAME     'AREAD$'  @ @@@@READA$*   $NAME     *'READA$' @ @@@@OI
)@@G@@AREADA$*  $NAME     *'AREADA$'@#@@@@          FUNC$   @C@@@@ DO P>1 , LAOJ
)@@G@@        12,AF(P(1),[P(0,*0)->'*']1) @ @@@@          ER        [P(0,0)]  OK
)@@G@@@#@@@@          $END    @[@@@@.     @A@@@@. READ IMAGES FROM AN ALTERNATOL
)@@G@@E FILE@[@@@@.     @E@@@@.         READA     '<FILENAME>' <EOF>,<BUFFER AOM
)@@G@@DDRESS>     @E@@@@.         AREADA    '<FILENAME>' <EOF>,<BUFFER ADDRESSON
)@@G@@>     @[@@@@.     @A@@@@.         READA$    <PACKET ADDRESS>@A@@@@.     OO
)@@G@@    AREADA$   <PACKET ADDRESS>@[@@@@.     @^@@@@P         $PROC     *2  OP
)@@G@@@ @@@@READA*    $NAME     'READA$'  @ @@@@AREADA*   $NAME     'AREADA$' OQ
)@@G@@@]@@@@$($LCN+2)   @A@@@@PKT       +         P(2,1),P(2,2)   @ @@@@      OR
)@@G@@    +         P(1,1)DL  @]@@@@$($LCN-2)   @ @@@@          LA,14     12,POS
)@@G@@KT    @ @@@@          ER        [P(0,0)]  @#@@@@          $END    @[@@@@OT
)@@G@@.     @F@@@@. TYPE AND READ: READ AN IMAGE FROM THE RUNSTREAM WITH PROMPOU
)@@G@@T     @[@@@@.     @G@@@@.         TREAD     [<SPACING>,]'<OUTPUT IMAGE>'OV
)@@G@@ <EOF>,<BUFFER ADDRESS> @I@@@@.         TREAD     [<SPACING>,]<LENGTH>,<OW
)@@G@@IMAGE ADDRESS> <EOF>,<BUFFER ADDRESS>     @[@@@@.     @G@@@@.         ATOX
)@@G@@READ    [<SPACING>,]'<OUTPUT IMAGE>' <EOF>,<BUFFER ADDRESS> @I@@@@.     OY
)@@G@@    ATREAD    [<SPACING>,]<LENGTH>,<IMAGE ADDRESS> <EOF>,<BUFFER ADDRESSOZ
)@@G@@>     @[@@@@.     @A@@@@.         TREAD$    <PACKET ADDRESS>@A@@@@.     PA
)@@G@@    ATREAD$   <PACKET ADDRESS>@[@@@@.     @^@@@@P         $PROC     *2  PB
)@@G@@@^@@@@TREAD*    $NAME     0   @^@@@@ATREAD*   $NAME     1   @]@@@@$($LCNPC
)@@G@@+2)   @F@@@@PKT       PCW$$     1,1               . GENERATE PRINT CONTRPD
)@@G@@OL    @A@@@@          +         P(2,1),P(2,2)   @]@@@@$($LCN-2)   @ @@@@PE
)@@G@@          LA,14     12,PKT    @B@@@@          ER        [P(0,0)->'A']TREPF
)@@G@@AD$   @#@@@@          $END    @^@@@@P         $PROC     *1  @ @@@@TREAD$PG
)@@G@@*   $NAME     'TREAD$'  @ @@@@ATREAD$*  $NAME     'ATREAD$' @#@@@@      PH
)@@G@@    FUNC$   @A@@@@ DO P>1 , LA        12,AF(P(1),*1)  @ @@@@          ERPI
)@@G@@        [P(0,0)]  @#@@@@          $END    @[@@@@.     @^@@@@. GENERALIZEPJ
)@@G@@D CALL PROC @[@@@@.     @D@@@@.         CALL,<LR> <ADDRESS>  <ALTRET1>,<PK
)@@G@@ALTRET2>,...@[@@@@.     @^@@@@P         $PROC     *2  @#@@@@CALL*     $NPL
)@@G@@AME   @#@@@@          FUNC$   @B@@@@X         $EQU      P(0)>1->P(0,1)!1PM
)@@G@@1     @A@@@@          LMJ       X,AF(P(1),1)    @B@@@@I $DO P(2) , J    PN
)@@G@@   [P(2,*I)->'*']P(2,I) @#@@@@          $END    @[@@@@.     @^@@@@. FIELPO
)@@G@@D EXTRACTION PROC @[@@@@.     @F@@@@.         XFU,PW    <AREG>          PP
)@@G@@  . EXTRACT FIELD TO UPPER    @A@@@@.         XFU       <AREG>,<FIELD>  PQ
)@@G@@@[@@@@.     @E@@@@.         XFA,PW    <AREG>            . EXTRACT FIELD PR
)@@G@@TO A  @A@@@@.         XFA       <AREG>,<FIELD>  @[@@@@.     @]@@@@. EXAMPS
)@@G@@PLES: @[@@@@.     @G@@@@.         XFU,S2    A0                . EXTRACT PT
)@@G@@S2 OF A0 INTO A1, RJZF  @[@@@@.     @G@@@@.         XFA       A3,FLD(29,PU
)@@G@@27)     . EXTRACT J-DESIGNATOR FIELD IN A3@[@@@@.     @^@@@@P         $PPV
)@@G@@ROC     *1  @#@@@@XFU*      $NAME   @#@@@@          FUNC$   @C@@@@F     PW
)@@G@@    $EQU      FLD(P(1)>1->P(1,2)!P(0,1))  @A@@@@          AND       P(1,PX
)@@G@@1),FBML(F)  @B@@@@          $DO LB(F)>0 , SSL P(1,1)+1,LB(F)@#@@@@      PY
)@@G@@    $END    @[@@@@.     @^@@@@P         $PROC     *1  @#@@@@XFA*      $NPZ
)@@G@@AME   @#@@@@          FUNC$   @C@@@@F         $EQU      FLD(P(1)>1->P(1,QA
)@@G@@2)!P(0,1))  @C@@@@          $DO HB(F)<35 , LSSL P(1,1),35-HB(F)   @A@@@@QB
)@@G@@          SSL       P(1,1),36-FS(F) @#@@@@          $END    @[@@@@.     QC
)@@G@@@A@@@@. INCREMENT AND DECREMENT PROCS     @[@@@@.     @A@@@@.         INQD
)@@G@@C,<PW>  <REG>,<ADDRESS> @[@@@@.     @G@@@@.                   THE  PROC QE
)@@G@@ 'INC'  ADDS ONE TO THE VALUE AT <ADDRESS>@G@@@@.                   USINQF
)@@G@@G THE REGISTER <REG>, WHICH MAY BE EITHER AN  A-@G@@@@.                 QG
)@@G@@  OR  AN  X-REGISTER.  IT  IS    EQUIVALENT    TO    A@C@@@@.           QH
)@@G@@        LOAD-ADD-STORE SEQUENCE.    @[@@@@.     @A@@@@.         DEC,<PW>QI
)@@G@@  <REG>,<ADDRESS> @[@@@@.     @G@@@@.                   THE  PROC  'DEC'QJ
)@@G@@  SUBTRACTS  ONE  FROM  THE VALUE AT@G@@@@.                   <ADDRESS> QK
)@@G@@USING THE REGISTER  <REG>,  WHICH  MAY  BE@G@@@@.                   EITHQL
)@@G@@ER AN A- OR AN X-REGISTER. IT IS EQUIVALENT TO A@C@@@@.                 QM
)@@G@@  'L', 'AN', 'S' SEQUENCE.    @[@@@@.     @^@@@@P         PROC      *1  QN
)@@G@@@^@@@@INC*      NAME      'A' @^@@@@DEC*      NAME      'AN'@#@@@@      QO
)@@G@@    FUNC$   @ @@@@R         EQU       P(1,1)    @ @@@@A         EQU     QP
)@@G@@  AF(P(1),2)@^@@@@          L         R,A @ @@@@          [P(0,0)]  R,1,QQ
)@@G@@,U    @^@@@@          S         R,A @#@@@@          END     @[@@@@.     QR
)@@G@@@^@@@@. DATA TRANSFER PROC    @[@@@@.     @C@@@@.         MOVE      <DESQS
)@@G@@T> <SRC> <COUNT> <PW>   @[@@@@.     @G@@@@.                   THIS  PROCQT
)@@G@@ GENERATES CODE TO MOVE <COUNT> WORDS FROM@G@@@@.                   <SRCQU
)@@G@@> TO <DEST>, PARTIAL-WORD  TRANSFERS  OPTIONALLY@B@@@@.                 QV
)@@G@@  INDICATED WITH <PW>.  @[@@@@.     @G@@@@.                   <DEST>  ANQW
)@@G@@D  <SRC>  ARE  SPECIFIED   SIMILARLY    AS@G@@@@.                   <XREQX
)@@G@@G>,<UA>,<UX>,<UJ>,<I>;  <XREG> IS THE X-REGISTER@G@@@@.                 QY
)@@G@@  TO BE USED AS AN  INDEX  TO  THE  ADDRESS  GIVEN  BY@G@@@@.           QZ
)@@G@@        <UA>,<UX>,<UJ>.  <I>  IS  THE  INCREMENT  VALUE  FOR@G@@@@.     RA
)@@G@@              <XREG>, DEFAULTING TO ONE IF NOT GIVEN. IF <XREG> IS@G@@@@RB
)@@G@@.                   STARRED (I.E., *<XREG>), THEN THE INCREMENT  PORTIONRC
)@@G@@@G@@@@.                   IS ASSUMED TO HAVE BEEN ALREADY LOADED; IF <ADRD
)@@G@@DRESS>@G@@@@.                   IS NOT GIVEN, THEN THE MODIFIER PORTION RE
)@@G@@OF <XREG> IS@G@@@@.                   ASSUMED  TO  HAVE  BEEN  ALREADY  RF
)@@G@@LOADED.  UNLESS  A@G@@@@.                   J-DESIGNATOR IS GIVEN, <UA>,RG
)@@G@@<UX> WILL BE USED AS THE@G@@@@.                   ADDRESS  OF  THE  FIRSRH
)@@G@@T  WORD  OF  THE  DATA  TO  BE@G@@@@.                   TRANSFERED.  HOWRI
)@@G@@EVER,  IF  A PART-WORD DESIGNATOR IS@G@@@@.                   GIVEN, THERJ
)@@G@@N THE ADDRESS OF THE DATA WILL BE OBTAINED@C@@@@.                   FROMRK
)@@G@@ THE GIVEN ADDRESS.     @[@@@@.     @]@@@@. EXAMPLES: @[@@@@.     @B@@@@RL
)@@G@@.         MOVE      A0,EPKT1 A1,ELT$ 14   @[@@@@.     @ @@@@.         WHRM
)@@G@@ICH GENERATES:    @[@@@@.     @A@@@@.         LA        A0,(1,EPKT1)    RN
)@@G@@@A@@@@.         LA        A1,(1,ELT$)     @ @@@@.         LR,U      R1,1RO
)@@G@@4     @ @@@@.         BT        A0,,*A1   @[@@@@.     @#@@@@. ANOTHER EXRP
)@@G@@AMPLE:@[@@@@.     @F@@@@.         MOVE,2    X8,ADDR,X10,H1 X9,ADDR,X10,HRQ
)@@G@@2 ADDR+1,X10,W    @[@@@@.     @ @@@@.         WHICH GENERATES:    @[@@@@RR
)@@G@@.     @A@@@@.         LX,H1     X8,ADDR,X10     @^@@@@.         LXI,U   RS
)@@G@@  X8,2@A@@@@.         LX,H2     X9,ADDR,X10     @^@@@@.         LXI,U   RT
)@@G@@  X9,2@A@@@@.         LR        R1,ADDR+1,X10   @ @@@@.         BT      RU
)@@G@@  X8,,*X9   @[@@@@.     @#@@@@. A FINAL EXAMPLE:@[@@@@.     @ @@@@.     RV
)@@G@@    MOVE      *A0 A1    @[@@@@.     @^@@@@.         GENERATES:    @[@@@@RW
)@@G@@.     @^@@@@.         LXI,U     A1,1@ @@@@.         BT        A0,,*A1   RX
)@@G@@@[@@@@.     @[@@@@.     @^@@@@P         PROC      *4  @#@@@@MOVE*     NARY
)@@G@@ME    @#@@@@          FUNC$   @^@@@@I         $REPEAT   2   @E@@@@Q     RZ
)@@G@@    EQU       P(I)              . CAPTURE THE FIELD   @D@@@@X         EQSA
)@@G@@U       Q(1)              . THE X REG     @[@@@@.     @G@@@@. IF THERE ASB
)@@G@@REN'T EXPLICIT OR IMPLICIT X-REGS OR J-DESIGNATORS THEN LOAD@D@@@@. BOTHSC
)@@G@@ THE INCREMENT AND MODIFIER VALUES TOGETHER.    @[@@@@.     @D@@@@  $IF SD
)@@G@@Q>=2->$AP(Q(2))<1*/18->Q=5->Q(3)=Q(4)=0!Q=2     @C@@@@          LX      SE
)@@G@@  X,OLR(Q=5->Q(5)!1,Q(2))     @]@@@@  $ELSE     @ @@@@ DO Q>1 , LXM     SF
)@@G@@  X,AF(Q,2) @A@@@@ DO \Q(*1) , LXI,U  X,Q=5->Q(5)!1   @]@@@@  $ENDF     SG
)@@G@@@#@@@@          $ENDR   @A@@@@ DO P>3 , LR        R1,AF(P(3),*1)  @C@@@@SH
)@@G@@          BT[P>4->',P(4,1)'] P(1,1),,*P(2,1)    @#@@@@          $END    SI
)@@G@@@[@@@@.     @B@@@@. PROC TO DISPLAY AND INSERT ASSEMBLY CODE@[@@@@.     SJ
)@@G@@@D@@@@.         D$I       'LABEL','OPER','OPERAND','COMMENT'@[@@@@.     SK
)@@G@@@G@@@@.                   THIS  PROC  IS MOSTLY USEFUL FROM WITHIN OTHERSL
)@@G@@ PROCS@G@@@@.                   THAT GENERATE INSTRUCTIONS WHERE THE DISSM
)@@G@@PLAY OF SUCH@G@@@@.                   INSTRUCTIONS MIGHT BE USEFUL OR DESN
)@@G@@SIREABLE.  EXAMPLE@ @@@@.                   USEAGE:   @[@@@@.     @E@@@@SO
)@@G@@.         D$I       ,'LA,U','A0,,X1','. GET THE ADDRESS'    @[@@@@.     SP
)@@G@@@D@@@@.                   THIS WOULD DISPLAY AND GENERATE:  @[@@@@.     SQ
)@@G@@@E@@@@.         LA,U      A0,,X1            . GET THE ADDRESS     @[@@@@SR
)@@G@@.     @B@@@@P         $PROC     *1                .   @B@@@@D$I*      $NSS
)@@G@@AME                       .   @H@@@@I         $DO       4 , $DO $TSTR(P(ST
)@@G@@1,I))=0 ,P(1,I) EQU '' . FIX UP NULL ARGS @G@@@@S         $EQU      P(1,SU
)@@G@@1)            . INITIALIZE STRING TO THE LABEL  @H@@@@C         $EQU    SV
)@@G@@  $L1(10,20,38)     . ESTABLISH COLUMN POSITIONS MINUS ONE  @G@@@@I $DO SW
)@@G@@3 ; FOR ALL THREE FIELDS, ALIGN THE INSTRUCTION AT THE COLUMNS    @H@@@@SX
)@@G@@          ,S        $EQU S:$SR(' ',C(I)-$SL(S)>0->C(I)-$SL(S)!1):P(1,1+ISY
)@@G@@) .   @E@@@@          $DISPLAY  S                 . SHOW THE INSTRUCTIONSZ
)@@G@@@F@@@@          $LEVEL    0,1,0             . UP THE INSERTION LEVEL    TA
)@@G@@@E@@@@          $INSERT   S                 . AND THE OCTAL ALSO  @B@@@@TB
)@@G@@          $END                        .   @[@@@@.     @G@@@@. SNOOPY - ATC
)@@G@@ PROC TO TURN ON SNOOPY TRACING IF THE ELEMENT IS ASSEMBLED @F@@@@.     TD
)@@G@@     WITH SPECIFICATION 4 SET TO 'SNOOPY'.  FOR EXAMPLE,    @[@@@@.     TE
)@@G@@@E@@@@. @MASM <ELEMENT>,,,SNOOPY . WILL TURN ON SNOOPY TRACING.   @[@@@@TF
)@@G@@.     @F@@@@. ALSO, A CONDITIONAL OPTION MAY BE SPECIFIED, INDICATING THTG
)@@G@@AT    @E@@@@. THE SNOOPY TRACE IS ONLY TO EXECUTED SHOULD THAT OPTION BETH
)@@G@@@]@@@@. PRESENT.  @[@@@@.     @F@@@@.         SNOOPY    'T'             TI
)@@G@@  . TRACE ONLY WITH T OPTION  @[@@@@.     @ @@@@. USES REGISTER A0 (ER OTJ
)@@G@@PT$)  @[@@@@.     @^@@@@P         PROC      *1  @#@@@@SNOOPY*   NAME    TK
)@@G@@@A@@@@          $IF       $PAR(4)='SNOOPY'@^@@@@          $IF       P>1 TL
)@@G@@@^@@@@          ER        OPT$@A@@@@          TEP       A0,OBL(P(1,1))  TM
)@@G@@@#@@@@          $ENDF   @^@@@@          SLJ       TON$@#@@@@          $ETN
)@@G@@NDF   @#@@@@          $END    @[@@@@.     @D@@@@          1->END        TO
)@@G@@              . OF DEFINITION _@@@@@2))<1*/18->Q=5->Q(3)=Q(4)=0!Q=2     TP
)@@G@@@C@@@@          LX        X,OLR(Q=5->Q(5)!1,Q(2))     @]@@@@  $ELSE     TQ
)@@G@@*[S@@@*SDFF*@#@@@@          $DEF    @ @@@@          $LEVEL    0,1,0     TR
)@@G@@@[@@@@.     @C@@@@.  L C P R O C S  -  LOCATION COUNTER PROCS     @[@@@@TS
)@@G@@.     @^@@@@.         IBANK     <LC>@[@@@@.     @G@@@@.                 TT
)@@G@@  THIS PROC SETS THE CURRENT LOCATION COUNTER TO <LC>,@G@@@@.           TU
)@@G@@        WHICH  DEFAULTS TO 1 IF NOT GIVEN. ALSO, THE CURRENT@G@@@@.     TV
)@@G@@              LITERAL POOL IS  DEFINED  UNDER  THE  SAME  LOCATION@ @@@@TW
)@@G@@.                   COUNTER.  @[@@@@.     @^@@@@.         DBANK     <LC>TX
)@@G@@@[@@@@.     @G@@@@.                   THIS PROC SETS THE CURRENT LOCATIOTY
)@@G@@N COUNTER TO <LC>,@G@@@@.                   WHICH  DEFAULTS  TO  0  IF  TZ
)@@G@@NOT  GIVEN.  THE CURRENT@F@@@@.                   LITERAL POOL LOCATION UA
)@@G@@COUNTER IS NOT MODIFIED.@[@@@@.     @[@@@@.     @^@@@@P         $PROC   UB
)@@G@@  *1  @^@@@@IBANK*    $NAME     1   @^@@@@DBANK*    $NAME     0   @B@@@@UC
)@@G@@LC        $EQU      P(1)>0->P(1,1)!P(0,0) @A@@@@          $DO $LF(1)>0 ,UD
)@@G@@* EQU $(LC) @^@@@@$(LC)     P(0,0)->$LIT  @#@@@@          $END    @[@@@@UE
)@@G@@.     @^@@@@. <NAME>  SLJENTRY  <LC>@[@@@@.     @G@@@@.                 UF
)@@G@@  THIS  PROC  DEFINES <NAME>, IF GIVEN, TO THE CURRENT@G@@@@.           UG
)@@G@@        VALUE OF THE LOCATION COUNTER  <LC>,  DEFAULTING  TO@G@@@@.     UH
)@@G@@              ZERO  IF  NOT  GIVEN.  TWO  WORDS ARE THEN GENERATED@G@@@@UI
)@@G@@.                   UNDER THAT LOCATION COUNTER: A 'J $', FOLLOWED BY  AUJ
)@@G@@@G@@@@.                   'J  <CLC>',  WHERE  <CLC>  IS  THE  CURRENT LOUK
)@@G@@CATION@G@@@@.                   COUNTER AT THE TIME OF THE PROC CALL. THUL
)@@G@@IS  PROC  IS@G@@@@.                   HANDY FOR DEFINING ENTRY POINTS FOUM
)@@G@@R SLJ SUBROUTINES.@[@@@@.     @^@@@@P         $PROC     *1  @#@@@@SLJENTUN
)@@G@@RY* $NAME   @A@@@@LC        $EQU      P(1)=0->0!P(1,1)@I@@@@CLC       $EUO
)@@G@@QU      $LCN              . GET THE CURRENT LOCATION COUNTER NUMBER     UP
)@@G@@@G@@@@$(LC),*   J         $-$               . GENERATE RETURN INSTRUCTIOUQ
)@@G@@N     @I@@@@          $IF       CLC<>LC           . ONLY IF LOCATION COUUR
)@@G@@NTERS ARE DIFFERENT     @H@@@@          J         $(CLC)            . JUUS
)@@G@@MP BACK TO THE PREVIOUS LOC CNTR    @]@@@@$(CLC)    . @#@@@@          $EUT
)@@G@@NDF   @#@@@@          $END    @[@@@@.     @#@@@@.         CHECKLC @[@@@@UU
)@@G@@.     @G@@@@.                   CHECKLC  IS  USED TO HELP DETERMINE WHERUV
)@@G@@E A LOCATION@G@@@@.                   COUNTER VALUE DIFFERS FROM  FIRST UW
)@@G@@ PASS  TO  SECOND.@G@@@@.                   CALLED  WITH  NO  ARGUMENTS,UX
)@@G@@  IT DOES NOTHING IF THE@G@@@@.                   CURRENT LOCATION COUNTUY
)@@G@@ER VALUE IS THE SAME  ON  BOTH@G@@@@.                   PASSES;  OTHERWIUZ
)@@G@@SE,  IT  WILL  PRINT  THE  DIFFERENT@ @@@@.                   VALUES.   VA
)@@G@@@[@@@@.     @B@@@@. ALAN STEBBENS, UOMCSC YFNSS, 01/08/81   @[@@@@.     VB
)@@G@@@^@@@@CHECKLC*  $PROC     *0  @#@@@@          FUNCS   @C@@@@          $IVC
)@@G@@F       \$LP->NRI(CHKLC$$$)=1!0     @F@@@@CHKLC$$$  DELETE$,0           VD
)@@G@@        . DELETE EXTERNAL REFERENCE @D@@@@CHKLC$$$  EQU$      0         VE
)@@G@@        . INITIAL VALUE @#@@@@          $ENDF   @F@@@@          $IF     VF
)@@G@@  $LP=CHKLC$$$      . FIRST CALL ON THIS PASS?  @E@@@@CHKLC$$$  EQU$    VG
)@@G@@  \$LP              . YES, FLIP THE FLAG  @E@@@@CHKLC$$   EQU$      0   VH
)@@G@@              . RESET THE COUNTER   @F@@@@          DO        \$LP ,;   VI
)@@G@@        . ON THIS FIRST PASS...     @E@@@@CHKLC$    EQU$      $NODE     VJ
)@@G@@        . INITIALIZE THE TREE @#@@@@          $ENDF   @F@@@@CHKLC$$   EQVK
)@@G@@U$      CHKLC$$+1         . BUMP THE CALL COUNTER     @H@@@@CHKLC$(CHKLCVL
)@@G@@$$,$LP) EQU$ $            . CAPTURE THE CURRENT LOCATION COUNTER  @E@@@@VM
)@@G@@          \$LP->$END                  . QUIT IF FIRST PASS  @H@@@@      VN
)@@G@@    CHKLC$(CHKLC$$,0)=CHKLC$(CHKLC$$,1)->$END . QUIT IF VALUES THE SAME VO
)@@G@@@C@@@@          $DISPLAY,1 'LOCATION COUNTER CHECK',; @F@@@@            VP
)@@G@@        'PASS 1 VALUE: ':EDITV(CHKLC$(CHKLC$$,0)),;   @F@@@@            VQ
)@@G@@        'PASS 2 VALUE: ':EDITV(CHKLC$(CHKLC$$,1))     @#@@@@          $EVR
)@@G@@ND    @#@@@@          1->$END _@@@@@E OF THE LOC*[S@@@*SDFF*@#@@@@      VS
)@@G@@    $DEF    @ @@@@          $LEVEL    0,1,0     @[@@@@.     @E@@@@.  S AVT
)@@G@@ V E R P R O C S  -  REGISTER SAVE AND RESTORE PROCS  @[@@@@.     @B@@@@VU
)@@G@@. <LABEL> SAVER,<LC>  <R1> <R2>,<R3> ...  @[@@@@.     @G@@@@.           VV
)@@G@@        SAVER  IS  A  PROC  THAT  WILL SAVE REGISTERS WITH A@G@@@@.     VW
)@@G@@              MINIMUM OF FUSS. THE STORAGE FOR  THE  REGISTERS  IS@G@@@@VX
)@@G@@.                   AUTOMATICALLY  ALLOCATED  BY THE PROC AS WELL. THEREVY
)@@G@@@G@@@@.                   IS A  COMPANION  PROC,  'LOADR',  THAT  IS  USVZ
)@@G@@ED  TO@G@@@@.                   RESTORE THE PREVIOUSLY SAVED REGISTERS. WA
)@@G@@ALSO, A FUNC@G@@@@.                   EXISTS  TO  ADDRESS  THE  STORAGE WB
)@@G@@ OF  A GIVEN SAVED@ @@@@.                   REGISTER. @[@@@@.     @G@@@@WC
)@@G@@.                   THE  <LABEL>  IS  USED  TO  IDENTIFY THIS PARTICULARWD
)@@G@@@G@@@@.                   REGISTER SAVE FOR A SUBSEQUENT CALL TO  THE  'WE
)@@G@@LOADR'@ @@@@.                   PROC.     @[@@@@.     @G@@@@.           WF
)@@G@@        <LC>  IS  AN  OPTIONAL  LOCATION   COUNTER    NUMBER@G@@@@.     WG
)@@G@@              INDICATING  WHERE  TO  RESERVE  THE  STORAGE FOR THE@G@@@@WH
)@@G@@.                   REGISTER SPECIFIED ON THE CALL. ONLY AS MUCH STORAGEWI
)@@G@@@G@@@@.                   AS NEEDED  TO  HOLD  THE  GIVEN  REGISTERS  WIWJ
)@@G@@LL  BE@G@@@@.                   RESERVED.  IF <LC> IS NOT GIVEN, IT DEFAWK
)@@G@@ULTS TO ZERO@G@@@@.                   UNLESS THE PROC CALL IS MADE UNDERWL
)@@G@@ LOCATION  COUNTER@E@@@@.                   ZERO IN WHICH CASE IT DEFAULWM
)@@G@@TS TO TWO.  @[@@@@.     @G@@@@.                   THE  REGISTER  LIST  IWN
)@@G@@S  GIVEN  AS  SINGLE REGISTERS@G@@@@.                   SEPARATED BY BLAWO
)@@G@@NKS WITH A GROUP OF  REGISTERS  (SAY@G@@@@.                   A0  THRU  WP
)@@G@@A5)  INDICATED  BY  THE  FIRST  AND   LAST@F@@@@.                   REGIWQ
)@@G@@STERS OF THE GROUP SEPARATED BY A COMMA.  @[@@@@.     @[@@@@.     @E@@@@WR
)@@G@@.                   AN EXAMPLE (TO SAVE THE MINOR SET):     @[@@@@.     WS
)@@G@@@D@@@@. RSAVE   SAVER     X11 A0,A5 R1,R3   . THAT DOES IT  @[@@@@.     WT
)@@G@@@G@@@@.                   THE  LABEL  'RSAVE' MAY BE USED ON A CALL TO 'WU
)@@G@@LOADR'@C@@@@.                   TO RESTORE THE REGISTERS.   @[@@@@.     WV
)@@G@@@[@@@@.     @C@@@@.         LOADR     <LABEL> <R1> <R2>,<R3> ...  @[@@@@WW
)@@G@@.     @G@@@@.                   THE  'LOADR'  PROC  LOADS A PREVIOUSLY SWX
)@@G@@AVED LIST OF@G@@@@.                   REGISTERS. THE ENTIRE LIST OF REGIWY
)@@G@@STER AS  GIVEN  ON@G@@@@.                   THE  INDICATED  'SAVER' CALLWZ
)@@G@@ MAY BE RESTORED, OR, IF@D@@@@.                   DESIRED, ONLY SELECTEDXA
)@@G@@ REGISTERS. @[@@@@.     @G@@@@.                   <LABEL>  IS  A  LABEL XB
)@@G@@ USED  ON  A  PREVIOUS CALL TO@ @@@@.                   'SAVER'.  @[@@@@XC
)@@G@@.     @G@@@@.                   THE  REGISTER  LIST  IS  OPTIONAL, AND IXD
)@@G@@F NOT GIVEN,@G@@@@.                   DEFAULTS TO THE ENTIRE REGISTER LIXE
)@@G@@ST AS GIVEN ON THE@G@@@@.                   'SAVER' CALL. IF ANY REGISTEXF
)@@G@@RS ARE  SPECIFIED,  THEN@D@@@@.                   ONLY THOSE REGISTERS AXG
)@@G@@RE RESTORED.@[@@@@.     @G@@@@.                   TO  CONTINUE  THE  PREXH
)@@G@@VIOUS EXAMPLE AND RESTORE ONLY@B@@@@.                   THE SAVED A-REGIXI
)@@G@@STERS:@[@@@@.     @A@@@@.         LOADR     RSAVE A0,A5     @[@@@@.     XJ
)@@G@@@B@@@@. ALAN STEBBENS, UOMCSC YFNSS, 05/02/80   @[@@@@.     @^@@@@P     XK
)@@G@@    PROC      *80 @#@@@@SAVER*    NAME    @#@@@@          FUNC$   @H@@@@XL
)@@G@@CLCV      EQU       $AP($LCV)         . GET CURRENT LOCATION COUNTER VALXM
)@@G@@UE    @F@@@@SLCN      EQU       P(0)>1->P(0,1)!$LCN=0->2!0 . GET SAVE LCXN
)@@G@@N     @F@@@@I $DO P-1 ,R $DO P(I,1),P(I,+P(I)) ,RL(R) EQU 0 . MAKE A LISXO
)@@G@@T     @^@@@@SKIP      EQU       0   @E@@@@X         EQU       0         XP
)@@G@@        . AN ADDRESS COUNTER  @F@@@@I         $REPEAT   RL              XQ
)@@G@@  . SCAN THE REGISTER LIST    @F@@@@R         EQU       $NS(RL,I)       XR
)@@G@@  . GET THE NEXT REGISTER     @F@@@@RL(R)     EQU       $(SLCN)+X       XS
)@@G@@  . DEFINE THE REG'S ADDRESS  @E@@@@X         EQU       X+1             XT
)@@G@@  . BUMP THE ADDRESS    @ @@@@          $IF       \SKIP     @D@@@@      XU
)@@G@@    $IF       11<R<28->I<RL->R+1=$NS(RL,I+1)    @ @@@@          DS      XV
)@@G@@  R,RL(R)   @^@@@@SKIP      EQU       1   @#@@@@          $ELSE   @ @@@@XW
)@@G@@          S         R,RL(R)   @#@@@@          $ENDF   @#@@@@          $EXX
)@@G@@LSE   @^@@@@SKIP      EQU       0   @#@@@@          $ENDF   @#@@@@      XY
)@@G@@    $ENDR   @G@@@@$(SLCN)   RES       X                 . SAVE SPACE FORXZ
)@@G@@ THE REGISTERS    @F@@@@$($ILCN)                              . BACK TO YA
)@@G@@WHERE WE WERE     @D@@@@SV$$T($ILCN,CLCV) EQU$ RL             . SAVE THEYB
)@@G@@ LIST @#@@@@          $END    @^@@@@P         $PROC     *80 @#@@@@LOADR*YC
)@@G@@    NAME    @F@@@@LCV       EQU       P(1,1)            . GET THE SAVER YD
)@@G@@LOCATION    @G@@@@LCN       EQU       $BA(LCV)(1,3)     . GET THE LCN WHYE
)@@G@@ERE IT'S SAVED    @G@@@@RL        EQU       SV$$T(LCN,$AP(LCV)) . GET THYF
)@@G@@E REGISTER ADDR LIST    @H@@@@LL        EQU       RL                . DEYG
)@@G@@FAULT THE LOAD LIST TO THE SAVE LIST@E@@@@          $IF       P>2       YH
)@@G@@        . UH-OH, CAN'T DO IT  @^@@@@X         EQU       0   @ @@@@LL    YI
)@@G@@    EQU       $NODE     @G@@@@I $DO 2,P-1 ,R $DO P(I,1),P(I,+P(I)) ,LL(RYJ
)@@G@@) EQU 0 . MAKE THE LOAD LIST  @#@@@@          $ENDF   @^@@@@SKIP      EQYK
)@@G@@U       0   @F@@@@I         $REPEAT   LL                . GO THROUGH THEYL
)@@G@@ LOAD LIST  @ @@@@  $IF               \SKIP     @F@@@@R         EQU     YM
)@@G@@  $NS(LL,I)         . GET THE NEXT REG TO LOAD  @D@@@@    $IF           YN
)@@G@@  11<R<28->I<LL->R+1=$NS(LL,I+1)    @F@@@@      $IF           $SN(RL,R)-YO
)@@G@@>$SN(RL,R+1) . WERE THE REGS SAVED? @ @@@@          DL        R,RL(R)   YP
)@@G@@@^@@@@SKIP      EQU       1   @C@@@@      $ELSE                         YQ
)@@G@@  . ERROR   @E@@@@          $DISPLAY,1 'ERROR: ':EREG(R):' OR ':EREG(R+1YR
)@@G@@):;   @D@@@@                    ' WAS NOT SAVED AT ':EDITV(LCV)   @]@@@@YS
)@@G@@      $ENDF @]@@@@    $ELSE   @D@@@@      $IF           $SN(RL,R)       YT
)@@G@@  . DEFINED REG?  @ @@@@          L         R,RL(R)   @]@@@@      $ELSE YU
)@@G@@@G@@@@          $DISPLAY,1 'ERROR: ':EREG(R):' WAS NOT SAVED AT ':EDITV(YV
)@@G@@LCV)  @]@@@@      $ENDF @]@@@@    $ENDF   @]@@@@  $ELSE     @^@@@@SKIP  YW
)@@G@@    EQU       0   @]@@@@  $ENDF     @#@@@@          $ENDR   @#@@@@      YX
)@@G@@    $END    @#@@@@          1->$END _@@@@@    EQ*[S@@@*SDFF*@#@@@@      YY
)@@G@@    $DEF    @ @@@@          $LEVEL    0,1,0     @[@@@@.     @D@@@@. T S YZ
)@@G@@Q P R O C S  -   TEST AND SET QUEUEING PROCS    @[@@@@.     @ @@@@.     ZA
)@@G@@    LOCK      <TSCELL>  @ @@@@.         UNLOCK    <TSCELL>  @[@@@@.     ZB
)@@G@@@G@@@@.                   THESE  PROCS  MAY  BE  USED  TO  CONTROL  ACCEZC
)@@G@@SS  TO@G@@@@.                   CRITICAL  PORTIONS  OF  CODE;  'LOCK'  WZD
)@@G@@ILL  PREVENT@G@@@@.                   MULTIPLE  ACTIVITIES FROM ENTERINGZE
)@@G@@ THE CRITICAL CODE@G@@@@.                   UNTIL AN 'UNLOCK' IS EXECUTEZF
)@@G@@D. <TSCELL>  IS  A  TEST@G@@@@.                   AND  SET  CELL,  WHICHZG
)@@G@@  MAY  BE  EITHER  A NEW-STYLE@G@@@@.                   T$CELL, OR THE OZH
)@@G@@LD-STYLE TEST AND SET CELL. TEST AND@G@@@@.                   SET REGISTZI
)@@G@@RATION, WHILE MORE EFFICIENT, IS OPTIONAL.@[@@@@.     @ @@@@.         BLZJ
)@@G@@OCK     <TSCELL>  @ @@@@.         UNBLOCK   <TSCELL>  @[@@@@.     @G@@@@ZK
)@@G@@.                   'BLOCK'  IS  USED  TO  CAUSE  AN  ACTIVITY  WHICH ISZL
)@@G@@@G@@@@.                   WAITING FOR  AN  UNAVAILABLE  CRITICAL  RESOURZM
)@@G@@CE  TO@G@@@@.                   SUSPEND EXECUTION UNTIL A CORRESPONDING ZN
)@@G@@'UNBLOCK' IS@G@@@@.                   PERFORMED  UPON THE SAME <TSCELL>.ZO
)@@G@@ 'UNBLOCK' IS USED@G@@@@.                   TO    INDICATE  THAT  A  CRIZP
)@@G@@TICAL  RESOURCE  IS  NOW@G@@@@.                   AVAILABLE, POSSIBLY CAZQ
)@@G@@USING ANY SUSPENDED ACTIVITIES@G@@@@.                   TO REACTIVATE. HZR
)@@G@@OWEVER, IF 'UNBLOCK' IS CALLED PRIOR@G@@@@.                   TO A CALL ZS
)@@G@@TO  'BLOCK'  THE  REACTIVATION  EFFECT  OF@G@@@@.                   'UNBZT
)@@G@@LOCK'  IS  LOST;  I.E., AN ACTIVITY WILL ONLY BE@G@@@@.                 ZU
)@@G@@  REAWAKENED IF IT  IS  SUSPENDED  WHEN  THE  CALL  TO@B@@@@.           ZV
)@@G@@        'UNBLOCK' IS MADE.    @[@@@@.     @G@@@@.                   A  'ZW
)@@G@@BLOCK'  AND  'UNBLOCK' SHOULD ONLY BE DONE AFTER@D@@@@.                 ZX
)@@G@@  FIRST 'LOCK'ING THE <TSCELL>.     @[@@@@.     @A@@@@.         ACQUIRE ZY
)@@G@@  <SEMAPHORE>     @[@@@@.     @G@@@@.                   'ACQUIRE'  IS  UZZ
)@@G@@SED  TO  LOCK A SECTION OF CODE THAT@G@@@@.                   ACQUIRES AAA
)@@G@@ CRITICAL RESOURCE AND MAINTAIN A COUNTING@G@@@@.                   SEMAAB
)@@G@@PHORE; AN  'UNLOCK'  MUST  FOLLOW  THE  CRITICAL@G@@@@.                 AC
)@@G@@  CODE. <SEMAPHORE> IS A COUNTING SEMAPHORE DEFINED BY@G@@@@.           AD
)@@G@@        THE  'SEMAPHORE'  PROC (SEE BELOW), WHICH CONTAINS A@G@@@@.     AE
)@@G@@              TEST AND SET CELL, AND A RESOURCE COUNT. THE  EFFECT@G@@@@AF
)@@G@@.                   OF 'ACQUIRE' IS TO LOCK THE SEMAPHORE, ALLOWING ONLYAG
)@@G@@@G@@@@.                   ONE  ACTIVITY  AT  A  TIME TO EXECUTE THE SUBSAH
)@@G@@EQUENT@G@@@@.                   CODE, AND THEN TO  DECREMENT  THE  SEMAPAI
)@@G@@HORE  COUNT,@G@@@@.                   INDICATING A CONSUMED RESOURCE. IFAJ
)@@G@@ THE COUNT BECOMES@G@@@@.                   NEGATIVE,  THE  EXECUTION ISAK
)@@G@@ SUSPENDED, VIA 'BLOCK',@G@@@@.                   UNTIL THE SAME RESOURCAL
)@@G@@E IS PRODUCED  VIA  'RELEASE'.@G@@@@.                   THE  CODE  FOLLOAM
)@@G@@WING THE 'ACQUIRE' IS PROTECTED FROM@G@@@@.                   MULTIACTIVAN
)@@G@@ITY EXECUTION, ALLOWING  FURTHER  CRITICAL@G@@@@.                   RESOAO
)@@G@@URCE MANIPULATION, UNTIL AN 'UNLOCK' IS EXECUTED@G@@@@.                 AP
)@@G@@  ON  THE SAME SEMAPHORE. THIS IS USEFUL, FOR EXAMPLE,@F@@@@.           AQ
)@@G@@        IN MAINTAINING A MULTIACTIVITY BUFFER POOL:   @[@@@@.     @E@@@@AR
)@@G@@.         ACQUIRE   BPSEMA4           . LET'S GET A BUFFER  @#@@@@.     AS
)@@G@@    ...     @D@@@@.         ... CODE TO DETACH A BUFFER FROM THE CHAIN  AT
)@@G@@@#@@@@.         ...     @F@@@@.         UNLOCK    BPSEMA4           . CRAU
)@@G@@ITICAL CODE IS DONE     @[@@@@.     @G@@@@.                   WHERE  'BPAV
)@@G@@SEMA4'  IS A SEMAPHORE DEFINED BY THE PROC@G@@@@.                   'SEMAW
)@@G@@APHORE' (SEE BELOW). IT CONSISTS OF A  TEST  AND@G@@@@.                 AX
)@@G@@  SET  CELL  FOLLOWED BY A POSITIVE COUNT OF AVAILABLE@G@@@@.           AY
)@@G@@        BUFFERS OR A NEGATIVE COUNT OF  ACTIVITIES  AWAITING@E@@@@.     AZ
)@@G@@              BUFFERS, OR NUMBER OF BUFFERS DESIRED.  @[@@@@.     @D@@@@BA
)@@G@@.                   REGISTER A0 IS USED BY THIS PROC. @[@@@@.     @[@@@@BB
)@@G@@.     @A@@@@.         RELEASE   <SEMAPHORE>     @[@@@@.     @G@@@@.     BC
)@@G@@              'RELEASE'  IS  USED  TO  LOCK A SECTION OF CODE THAT@G@@@@BD
)@@G@@.                   RELEASES CONTROL OF A CRITICAL RESOURCE, SUCH  AS  ABE
)@@G@@@G@@@@.                   BUFFER,  AND  MAINTAIN  A COUNT OF THAT RESOURBF
)@@G@@CE; AN@G@@@@.                   'UNBLOCK' MUST FOLLOW THE CRITICAL CODE.BG
)@@G@@ <SEMAPHORE>@G@@@@.                   IS    A  COUNTING  SEMAPHORE  DEFIBH
)@@G@@NED  BY  THE  PROC@G@@@@.                   'SEMAPHORE' (SEE BELOW), WHIBI
)@@G@@CH CONSISTS  OF  A  TEST@G@@@@.                   AND  SET  CELL  FOLLOWBJ
)@@G@@ED  BY  THE  CRITICAL RESOURCE@G@@@@.                   COUNT. THE  EFFEBK
)@@G@@CT  OF  'RELEASE'  IS  TO  LOCK  THE@G@@@@.                   SEMAPHORE BL
)@@G@@ AND  INCREMENT  THE  COUNT;  THE CRITICAL@G@@@@.                   SECTBM
)@@G@@ION    OF   CODE  MUST  STILL  BE  UNLOCKED  VIA@A@@@@.                 BN
)@@G@@  'UNBLOCK'. EG:  @[@@@@.     @ @@@@.         RELEASE   BPSEMA4   @#@@@@BO
)@@G@@.         ...     @D@@@@.         ... CODE TO ATTACH THE NOW AVAILABLE BBP
)@@G@@UFFER @#@@@@.         ...     @ @@@@.         UNBLOCK   BPSEMA4   @[@@@@BQ
)@@G@@.     @[@@@@.     @A@@@@. <LABEL> SEMAPHORE <INITIAL VALUE> @[@@@@.     BR
)@@G@@@G@@@@.                   THIS  PROC DEFINES A COUNTING SEMAPHORE FOR USBS
)@@G@@E WITH@G@@@@.                   THE   'ACQUIRE'  AND  'RELEASE'  PROCS. BT
)@@G@@ A  COUNTING@G@@@@.                   SEMPAHORE IS ONE WHICH IS USED TO BU
)@@G@@CONTROL ACCESS  TO@G@@@@.                   AND MAINTAIN A COUNT OF A CRBV
)@@G@@ITICAL RESOURCE, SUCH AS@G@@@@.                   A  BUFFER  POOL, IN A BW
)@@G@@MULTIACTIVITY ENVIRONMENT. TWO@G@@@@.                   WORDS ARE GENERABX
)@@G@@TED BY THIS PROC: A T$CELL, WHICH IS@G@@@@.                   A TEST ANDBY
)@@G@@ SET CELL; AN INITIAL  COUNT  REPRESENTING@G@@@@.                   THE BZ
)@@G@@ NUMBER  OF UNITS OF THE CRITICAL RESOURCE WHICH@G@@@@.                 CA
)@@G@@  ARE INITIALLY  AVAILABLE. THE DEFAULT,  IF  <INITIAL@G@@@@.           CB
)@@G@@        VALUE>  IS  NOT  GIVEN,  IS  ZERO,  MEANING NONE ARE@G@@@@.     CC
)@@G@@              INITIALLY  AVAILABLE.  THE  USE  OF  'ACQUIRE'  WILL@G@@@@CD
)@@G@@.                   DECREMENT  THIS  COUNT  AND  CALLING  'RELEASE' WILLCE
)@@G@@@G@@@@.                   INCREMENT IT.  THE  <LABEL>  IS  USED  ON  CALCF
)@@G@@LS  TO@F@@@@.                   'ACQUIRE', 'RELEASE', 'UNLOCK', AND 'UNBCG
)@@G@@LOCK'.@[@@@@.     @^@@@@P         $PROC     *1  @^@@@@LOCK*     $NAME   CH
)@@G@@  'TS'@ @@@@UNLOCK*   $NAME     'C$TS'    @ @@@@BLOCK*    $NAME     'C$TCI
)@@G@@SQ'   @ @@@@UNBLOCK*  $NAME     'C$TSA'   @C@@@@          [P(0,0)]  P(1,CJ
)@@G@@1)[P(1)>1->',P(1,2)']   @#@@@@          END     @^@@@@P         $PROC   CK
)@@G@@  1   @#@@@@ACQUIRE*  $NAME   @A@@@@TSCELL    $EQUF     P(1,1),P(1,2)   CL
)@@G@@@ @@@@LOCK      LOCK      TSCELL    @A@@@@          DEC       A0,TSCELL+CM
)@@G@@1     @ @@@@          JP        A0,OUT    @ @@@@          BLOCK     TSCECN
)@@G@@LL    @^@@@@          J         LOCK@[@@@@OUT   @#@@@@          END     CO
)@@G@@@^@@@@P         $PROC     *1  @#@@@@RELEASE*  $NAME   @A@@@@TSCELL    $ECP
)@@G@@QUF     P(1,1),P(1,2)   @ @@@@          LOCK      TSCELL    @A@@@@      CQ
)@@G@@    INC       A0,TSCELL+1     @#@@@@          $END    @^@@@@P         $PCR
)@@G@@ROC     1,2 @#@@@@SEMAPHORE* $NAME  @#@@@@          T$CELL  @ @@@@      CS
)@@G@@    +         P(1,1)    @#@@@@          $END    @#@@@@          1->$END CT
)@@G@@_@@@@@' (SEE BELOW), WHICH CONSISTS  OF  A  TEST@G@@@@.                 CU
)@@G@@*[S@@@*SDFF*@[@@@@.     @[@@@@/.    @#@@@@.   S T A C K $   @[@@@@.     CV
)@@G@@@F@@@@.     PROCS TO AID IN THE USE OF A STACK, AND STACKING TECHNIQUES.CW
)@@G@@@[@@@@.     @G@@@@. A  STACK IS A DATA STRUCTURE DEFINED BY THE CONCEPT CX
)@@G@@OF 'FIRST IN- LAST@G@@@@. OUT'; THAT IS, DATA MAY ONLY BE ADDED OR REMOVCY
)@@G@@ED AT  ONE  END  OF  THE@G@@@@. DATA  STRUCTURE.  WHEN  DATA  IS  ADDED CZ
)@@G@@ TO  A STACK, IT IS SAID TO BE@G@@@@. 'PUSHED', OR 'STACKED'; WHEN  DATADA
)@@G@@  IS  REMOVED,  IT  IS  'POPPED'  OR@G@@@@. 'UNSTACKED'.  A  STACK  IS  DB
)@@G@@USEFUL IN MANY APPLICATIONS: SAVING RETURN@G@@@@. ADDRESSES;  SAVING  DADC
)@@G@@TA  FROM  REGISTERS;  EASING  IMPLEMENTATION  OF@ @@@@. RECURSIVE ROUTINDD
)@@G@@ES, ETC.    @[@@@@.     @G@@@@. THE TYPE OF STACK USED BY THESE PROCS ISDE
)@@G@@ A SEQUENTIALLY ALLOCATED ONE;@G@@@@. IT  IS  A PUSH-DOWN STACK, WHERE TDF
)@@G@@HE HIGHEST ADDRESS OF THE STACK AREA@A@@@@. IS THE 'BOTTOM' OF THE STACKDG
)@@G@@.     @[@@@@.     @G@@@@. DATA  IS  MAINTAINED ON THE STACK BY THE USE ODH
)@@G@@F AN INDEX REGISTER, THE@G@@@@. 'STACK POINTER' (REFERRED TO AS THE  'SPDI
)@@G@@'),  WHICH  INDEXES  INTO  THE@G@@@@. STACK AREA AT THE NEXT WORD TO RECDJ
)@@G@@IEVE INFORMATION, MOVING UP AND DOWN@G@@@@. AS  DATA  IS REMOVED AND ADDDK
)@@G@@ED TO THE STACK. THE LAST ITEM STACKED, OR@G@@@@. THE ITEM ON THE 'TOP ODL
)@@G@@F THE STACK', IS ADDRESSABLE BY 1+SP,  THE  NEXT@^@@@@. ITEM AT 2+SP, ETDM
)@@G@@C.    @[@@@@.     @G@@@@. THE PROCS DEFINED BELOW MAY BE USED TO PERFORMDN
)@@G@@ ONE OF MANY OPERATIONS:@[@@@@.     @H@@@@.  1) DEFINE THE STACK AREA, IDO
)@@G@@NCLUDING THE LENGTH, AND THE STACK POINTER.     @ @@@@.  2) STACK AND UNDP
)@@G@@STACK DATA  @C@@@@.  3) ADVANCE AND RETREAT THE STACK POINTER     @A@@@@DQ
)@@G@@.  4) INITIALIZE THE STACK POINTER  @B@@@@.  5) DETERMINE THE CURRENT STDR
)@@G@@ACK USAGE   @A@@@@.  6) REFERENCE ITEMS ON THE STACK  @F@@@@.  7) TEST TDS
)@@G@@HE VALIDITY OF THE STACK POINTER (FOR ERROR CHECKING) @C@@@@.  8) DUMP TDT
)@@G@@HE CURRENT STACK (FOR DEBUGGING)    @F@@@@.  9) DEFINE TRANSFER ADDRESSEDU
)@@G@@S IN CASE OF OVERFLOW/UNDERFLOW     @F@@@@. 10) IMPLEMENT RECURSIVE SUBRDV
)@@G@@OUTINES WITH AUTOMATIC STACK CONTROL@F@@@@. 11) DEFINE LOCAL VARIABLES ADW
)@@G@@S TEMPORARILY ALLOCATED STACK SPACE @G@@@@. 12) IMPLEMENT NON-RECURSIVE DX
)@@G@@ROUTINES WITH AUTOMATIC REGISTER SAVING   @[@@@@.     @C@@@@.     BELOW DY
)@@G@@IS A SUMMARY OF THE PROCS PROVIDED: @[@@@@.     @]@@@@. STACK$    @G@@@@DZ
)@@G@@.                   THIS  PROC  DEFINES  ALL  OF  THE  OTHER  PROCS  VIAEA
)@@G@@@G@@@@.                   'INCLUDE'. ALL SUPPORT FUNCS, AND PROCS ARE INEB
)@@G@@CLUDED@ @@@@.                   AS WELL.  @[@@@@.     @[@@@@.     @F@@@@EC
)@@G@@. STACKDEF,<CHECK>  <SP>,<STACKCWD> 'OFLO',<OFLO> 'UFLO',<UFLO>   @[@@@@ED
)@@G@@.     @G@@@@.                   THIS  PROC  DEFINES  THE CURRENT STACK TEE
)@@G@@O BE USED BY@G@@@@.                   THE PROCS. <CHECK> IS A FLAG INDICEF
)@@G@@ATING WHAT TYPE OF@G@@@@.                   CHECKING IS TO BE DONE ON THEG
)@@G@@E STACK  POINTER  BEFORE@F@@@@.                   STACKING AND UNSTACKINEH
)@@G@@G. ITS VALUES MAY BE:   @[@@@@.     @D@@@@.                     STNONE (EI
)@@G@@0) - DO NO CHECKING     @D@@@@.                     STOFLO (1) - CHECK FEJ
)@@G@@OR OVERFLOWS@E@@@@.                     STUFLO (2) - CHECK FOR UNDERFLOWEK
)@@G@@S     @G@@@@.                     STBOTH (3) - CHECK FOR BOTH OVER AND UEL
)@@G@@NDERFLOWS   @[@@@@.     @G@@@@.                   THE DEFAULT IS STNONE.EM
)@@G@@ OVERFLOW CHECKS ARE DONE WHEN@G@@@@.                   DATA  IS STACKEDEN
)@@G@@, AND UNDERFLOW CHECKS ARE DONE WHEN@G@@@@.                   DATA   IS EO
)@@G@@ UNSTACKED.  REPEATED  CALLS  TO  STACKDEF@G@@@@.                   SPECEP
)@@G@@IFYING    ONLY   THE  CHECK  FLAG  IS  PERFECTLY@G@@@@.                 EQ
)@@G@@  ACCEPTABLE,  AND  MERELY  RESETS  THE  FLAG  WITHOUT@G@@@@.           ER
)@@G@@        CHANGING  THE  OTHER  INFORMATION  MAINTAINED BY THE@ @@@@.     ES
)@@G@@              PROCS.    @[@@@@.     @G@@@@.                   <SP>  IS  ET
)@@G@@AN  INDEX REGISTER TO BE USED AS THE STACK@ @@@@.                   POINEU
)@@G@@TER.  @[@@@@.     @G@@@@.                   <STACKCWD>  IS  A  STACK CONEV
)@@G@@TROL WORD WHICH CONTAINS@G@@@@.                   THE ADDRESS LIMITS OF EW
)@@G@@THE STACK;  H1  OF  THIS  WORD@G@@@@.                   WILL HAVE THE HIEX
)@@G@@GHEST ADDRESS OF THE STACK PLUS ONE,@G@@@@.                   AND  H2  WEY
)@@G@@ILL  HAVE THE LOWEST ADDRESS OF THE STACK.@G@@@@.                   THE EZ
)@@G@@PROC  'STACKRES'  WILL  AUTOMATICALLY  CREATE  A@G@@@@.                 FA
)@@G@@  CONTROL  WORD  FOR  THE  STACK  DEFINED    BY    ITS@G@@@@.           FB
)@@G@@        INVOCATION. THE USAGE OF A STACK CONTROL WORD ALLOWS@G@@@@.     FC
)@@G@@              DYNAMIC  EXPANSION  AND CONTRACTION OF THE STACK, AS@G@@@@FD
)@@G@@.                   WELL AS STACK SWITCHING, BECAUSE THE  STACK  POINTERFE
)@@G@@@G@@@@.                   IS  INITIALIZED  FROM, AND CHECKED AGAINST FORFF
)@@G@@ UNDER@F@@@@.                   AND OVERFLOW TESTS, THE STACK CONTROL WOFG
)@@G@@RD.   @[@@@@.     @G@@@@.                   <OFLO>  IS  AN  'SLJ'  TRANSFH
)@@G@@FER ADDRESS FOR OVERFLOW@G@@@@.                   CONDITIONS. IF NOT GIVFI
)@@G@@EN THEN 0 IS USED, CAUSING  AN@C@@@@.                   IGDM ON OVERFLOWFJ
)@@G@@ CONDITIONS.@[@@@@.     @G@@@@.                   <UFLO>  IS  AN  'SLJ' FK
)@@G@@TRANSFER ADDRESS FOR UNDERFLOW@G@@@@.                   CONDITIONS. IF NFL
)@@G@@OT GIVEN THEN 0 IS USED, CAUSING  AN@D@@@@.                   IGDM ON UNFM
)@@G@@DERFLOW CONDITIONS.     @[@@@@.     @[@@@@.     @ @@@@.                 FN
)@@G@@  EXAMPLE:  @[@@@@.     @F@@@@.                   STACKDEF,STBOTH  X10,SFO
)@@G@@TACKCW  'OFLO',OFLOERR ;@D@@@@.                                    'UFLOFP
)@@G@@',UFLOERR . @[@@@@.     @[@@@@.     @[@@@@.     @[@@@@.     @^@@@@. STACFQ
)@@G@@KRES   <LENGTH>   @[@@@@.     @G@@@@.                   THIS  PROC  WILLFR
)@@G@@  RESERVE  SPACE  UNDER  THE CURRENT@G@@@@.                   LOCATION CFS
)@@G@@OUNTER FOR A STACK OF THE DEFINED  LENGTH.@G@@@@.                   THE FT
)@@G@@ FIRST  WORD  GENERATED  WILL BE A STACK CONTROL@G@@@@.                 FU
)@@G@@  WORD, AS DESCRIBED IN THE DESCRIPTION OF 'STACKDEF',@E@@@@.           FV
)@@G@@        WHICH MAY BE USED ON A CALL TO STACKDEF.@[@@@@.     @[@@@@.     FW
)@@G@@@A@@@@. STACKCW  <STACKADDRESS>,<LENGTH>  @[@@@@.     @G@@@@.           FX
)@@G@@        THIS  PROC  WILL BUILD A STACK CONTROL WORD SUITABLE@G@@@@.     FY
)@@G@@              FOR USE BY THE STACKDEF PROC. <STACKADDRESS> IS  THE@G@@@@FZ
)@@G@@.                   LOWEST  ADDRESS  OF  THE  STACK, AND <LENGTH> IS THEGA
)@@G@@@G@@@@.                   NUMBER  OF  WORDS  IN  THE  STACK.  THIS  PROCGB
)@@G@@  WILL@G@@@@.                   GENERATE  ONLY  ONE WORD; USE 'STACKRES'GC
)@@G@@ TO ACTUALLY@C@@@@.                   RESERVE SPACE FOR THE STACK.@[@@@@GD
)@@G@@.     @[@@@@.     @[@@@@. SP$ @[@@@@.     @G@@@@.                   THISGE
)@@G@@  VARIABLE  IS  EQUATED  TO THE STACK POINTER AS@F@@@@.                 GF
)@@G@@  DEFINED ON THE PREVIOUS CALL TO STACKDEF.     @[@@@@.     @[@@@@.     GG
)@@G@@@#@@@@. STK(<N>[,<PW>]) @[@@@@.     @G@@@@.                   THIS IS A GH
)@@G@@FUNC WHICH CREATES AN ADDRESS REFERENCE TO@G@@@@.                   ITEMGI
)@@G@@S  ON  THE  STACK.  <N>  IS  AN  ORDINAL  NUMBER@G@@@@.                 GJ
)@@G@@  SPECIFYING WHICH ITEM ON  THE  STACK  TO  REFERENCE.@G@@@@.           GK
)@@G@@        STK(1)  REFERS  TO  THE  MOST RECENTLY STACKED ITEM,@G@@@@.     GL
)@@G@@              STK(2)  REFERS  TO  THE  SECOND  ITEM  ON THE STACK,@G@@@@GM
)@@G@@.                   STK(6) WILL GET THE SIXTH, ETC. <PW> IS AN  OPTIONALGN
)@@G@@@G@@@@.                   PARTWORD  DESIGNATOR WHICH WILL BE INCLUDED INGO
)@@G@@TO THE@G@@@@.                   REFERENCE IF GIVEN. EG: STK(1,H2) WILL RGP
)@@G@@EFERENCE  H2@D@@@@.                   OF THE FIRST ITEM ON THE STACK.   GQ
)@@G@@@[@@@@.     @[@@@@.     @]@@@@. SPINIT    @[@@@@.     @G@@@@.           GR
)@@G@@        THIS  PROC  INITIALIZES  THE  STACK POINTER FROM THE@G@@@@.     GS
)@@G@@              STACK CONTROL WORD AS GIVEN ON THE MOST RECENT  CALL@G@@@@GT
)@@G@@.                   TO  'STACKDEF'.  THE  FIRST  WORD OF THE STACK TO BEGU
)@@G@@@G@@@@.                   USED WILL BE THE HIGHEST ADDRESS OF THE STACK,GV
)@@G@@ SINCE@G@@@@.                   IT IS A 'PUSH-DOWN' STACK. THE INCREMENTGW
)@@G@@ PORTION  OF@G@@@@.                   THE STACK POINTER WILL ALWAYS CONTGX
)@@G@@AIN A NEGATIVE ONE@ @@@@.                   (-1).     @[@@@@.     @[@@@@GY
)@@G@@.     @[@@@@.     @ @@@@. STACK  <REG1>,<REG2>,...    @[@@@@.     @G@@@@GZ
)@@G@@.                   THIS  PROCS  STACKS  THE  VALUES  OF  THE  SPECIFIEDHA
)@@G@@@G@@@@.                   REGISTERS ON  THE  STACK  IN  THE  GIVEN  ORDEHB
)@@G@@R.  IF@G@@@@.                   OVERFLOW  CHECKING  IS ENABLED, A STACK HC
)@@G@@POINTER TEST@G@@@@.                   IS DONE PRIOR TO THE STACKING TO EHD
)@@G@@NSURE ENOUGH SPACE@G@@@@.                   ON THE STACK. AFTER THE STACHE
)@@G@@KING, THE STACK  POINTER@E@@@@.                   WILL POINT TO THE NEXTHF
)@@G@@ AVAILABLE WORD.  @[@@@@.     @[@@@@.     @ @@@@. UNSTACK  <REG1>,<REG2>HG
)@@G@@,...  @[@@@@.     @G@@@@.                   THIS  PROC UNSTACKS VALUES OHH
)@@G@@FF OF THE STACK AND INTO@G@@@@.                   THE SPECIFIED REGISTERHI
)@@G@@S IN THE REVERSE OF THE  GIVEN@G@@@@.                   ORDER.  THIS  PRHJ
)@@G@@OC  ESSENTIALLY PERFORMS THE INVERSE@G@@@@.                   FUNCTION  HK
)@@G@@ OF  'STACK'.  IF  UNDERFLOW  CHECKING  IS@G@@@@.                   ENABHL
)@@G@@LED, A STACK POINTER TEST IS DONE PRIOR  TO  THE@G@@@@.                 HM
)@@G@@  UNSTACKING  TO  VERIFY THE ITEMS ON THE STACK. AFTER@G@@@@.           HN
)@@G@@        THE UNSTACKING, THE STACK  POINTER  IS  ADJUSTED  TO@D@@@@.     HO
)@@G@@              POINT AT THE LAST ITEM UNSTACKED. @[@@@@.     @[@@@@.     HP
)@@G@@@ @@@@. SPTEST  <POSN>  <ERROR ADDR>@[@@@@.     @G@@@@.                 HQ
)@@G@@  THIS  PROC IS USED TO TEST THE VALIDITY OF THE STACK@G@@@@.           HR
)@@G@@        POINTER RELATIVE TO THE CURRENT POSITION. <POSN>  IS@G@@@@.     HS
)@@G@@              A  NUMBER  SPECIFYING  A  POSITION  RELATIVE  TO THE@G@@@@HT
)@@G@@.                   CURRENT POSITION OF THE STACK POINTER WHICH IS TO BEHU
)@@G@@@G@@@@.                   TESTED  FOR VALIDITY (IE: WITHIN THE STACKING HV
)@@G@@AREA).@G@@@@.                   IF <POSN> IS NEGATIVE, THEN AN  UNDERFLOHW
)@@G@@W  CHECK  IS@G@@@@.                   MADE, OTHERWISE AN OVERFLOW CHECK HX
)@@G@@IS PERFORMED. WHEN@G@@@@.                   AN  INVALID POSITION IS DETEHY
)@@G@@CTED, A TRANSFER IS MADE@G@@@@.                   TO <ERROR ADDR> IF IT HZ
)@@G@@IS GIVEN, OTHERWISE THE  ERROR@G@@@@.                   ADDRESS  FROM THIA
)@@G@@E MOST RECENT STACKDEF IS USED. THIS@G@@@@.                   PROC ALWAYIB
)@@G@@S  GENERATES  CODE,  REGARDLESS  OF  WHICH@F@@@@.                   CHECIC
)@@G@@KS ARE ENABLED FOR STACK AND UNSTACK.     @[@@@@.     @[@@@@.     @#@@@@ID
)@@G@@. SPPOSN    <REG> @[@@@@.     @G@@@@.                   THIS PROC COMPUTIE
)@@G@@ES THE CURRENT POSITION OF THE STACK@G@@@@.                   POINTER  RIF
)@@G@@ELATIVE  TO  THE INITIAL STACKING ADDRESS.@G@@@@.                   IT, IG
)@@G@@EQUIVALENTLY, RETURNS THE NUMBER OF WORDS OF THE@F@@@@.                 IH
)@@G@@  STACK AREA CURRENTLY BEING USED IN <REG>.     @[@@@@.     @[@@@@.     II
)@@G@@@#@@@@. SPMOVE   <NUM>  @[@@@@.     @G@@@@.                   THIS  PROCIJ
)@@G@@ CAN BE USED TO RESERVE AREAS OF THE STACK@G@@@@.                   WITHIK
)@@G@@OUT INITIALIZING, OR CHANGING,  ANY  INFORMATION@G@@@@.                 IL
)@@G@@  IN  THE  AREA.  ESSENTIALLY,  <NUM>  IS ADDED TO THE@G@@@@.           IM
)@@G@@        STACK POINTER. POSITIVE NUMBERS ADVANCE THE POINTER,@G@@@@.     IN
)@@G@@              WHILE NEGATIVE ONES RETREAT. IF  STACK  CHECKING  IS@G@@@@IO
)@@G@@.                   ENABLED,  THE  RESULT  OF  THE  ADDITION  WILL    BEIP
)@@G@@@ @@@@.                   VALIDATED.@[@@@@.     @[@@@@.     @]@@@@. STACIQ
)@@G@@KDUMP @[@@@@.     @G@@@@.                   THIS  PROC  DUMPS THE STACKIIR
)@@G@@NG AREA FROM THE CURRENT@G@@@@.                   POSITION OF THE STACK IS
)@@G@@POINTER TO THE  INITIAL  STACK@G@@@@.                   ADDRESS,  INCLUSIT
)@@G@@IVE, VIA 'ER SNAP$', UNDER THE LABEL@G@@@@.                   'STACK'.  IU
)@@G@@  THE  PROC  GENERATES  THE  CODE  INLINE,@B@@@@.                   INCLIV
)@@G@@UDING THE PACKET. @[@@@@.     @[@@@@.     @G@@@@. THE  FOLLOWING  SET  OIW
)@@G@@F  PROCS  PROVIDE  FEATURES  FOR  RECURSIVE  AND@G@@@@. NON-RECURSIVE   IX
)@@G@@ SUBROUTINES.   LOCAL  AND  STATIC  VARIABLES  MAY  BE@G@@@@. AUTOMATICAIY
)@@G@@LLY ALLOCATED, AND ARGUMENTS MAY BE PASSED ON THE  STACK  AS@]@@@@. WELLIZ
)@@G@@.     @[@@@@.     @[@@@@.     @ @@@@. ROUTINE,<LINK> <REGLIST>    @[@@@@JA
)@@G@@.     @G@@@@.                   THIS  PROC  DEFINES  A  ROUTINE  WHICH HJB
)@@G@@AS ITS LOCAL@G@@@@.                   STORAGE BASED ON THE STACK. <LINK>JC
)@@G@@  IS  THE  ROUTINE@G@@@@.                   LINK  REGISTER,  DEFAULTING JD
)@@G@@TO X11 IF OMITTED, WHICH@G@@@@.                   IS SAVED ON  THE  STACJE
)@@G@@K.  <REGLIST>  IS  A  LIST  OF@G@@@@.                   REGISTERS  WHICHJF
)@@G@@  ARE ALSO TO BE SAVED ON THE STACK.@G@@@@.                   LOCAL VARIJG
)@@G@@ABLES TO THE ROUTINE MAY BE DECLARED,  AND@G@@@@.                   ARE JH
)@@G@@ ALLOCATED SPACE ON THE STACK. THE STACK POINTER@G@@@@.                 JI
)@@G@@  IS AUTOMATICALLY UPDATED TO ALLOW ROOM FOR THE SAVED@G@@@@.           JJ
)@@G@@        LINK REGISTER, ANY OTHER  SPECIFIED  REGISTERS,  AND@G@@@@.     JK
)@@G@@              ALL  LOCAL  STORAGE.  SINCE  ANY LOCAL VARIABLES ARE@G@@@@JL
)@@G@@.                   BASED ON AN OFFSET TO THE CURRENT VALUE OF THE STACKJM
)@@G@@@G@@@@.                   POINTER, IT MUST NOT BE CHANGED DURING THE EXEJN
)@@G@@CUTION@G@@@@.                   OF THE ROUTINE OR REFERENCES TO LOCAL VAJO
)@@G@@RIABLES WILL@G@@@@.                   BE INVALID. THIS WILL OCCUR IF ANYJP
)@@G@@ CALLS TO  'STACK'@G@@@@.                   OR  'UNSTACK'  ARE MADE IN TJQ
)@@G@@HE ROUTINE. TO ALLOW FOR@G@@@@.                   THIS POSSIBILITY, AN AJR
)@@G@@LTERNATE  LOCAL  STORAGE  BASE@G@@@@.                   INDEX  REGISTER JS
)@@G@@ MAY  BE  SPECIFIED  BY  FLAGGING  A@G@@@@.                   REGISTER IJT
)@@G@@N <REGLIST>. THE FLAGGED REGISTER WILL  BE@G@@@@.                   INITJU
)@@G@@IALIZED WITH THE CURRENT STACK POINTER AFTER THE@E@@@@.                 JV
)@@G@@  STACK FRAME INITIALIZATION (SEE BELOW). @[@@@@.     @G@@@@.           JW
)@@G@@        THE  'ROUTINE'  PROC  GENERATES  CODE  TO ALLOCATE A@G@@@@.     JX
)@@G@@              "STACK FRAME" WHICH CONSISTS OF: ZERO OR MORE  WORDS@G@@@@JY
)@@G@@.                   FOR  LOCALS,  ZERO  OR  MORE  WORDS  FOR   SPECIFIEDJZ
)@@G@@@G@@@@.                   REGISTERS, AND A WORD CONTAINING THE RETURN LIKA
)@@G@@NK AND@G@@@@.                   THE  STACK FRAME SIZE. THE ONLY RESTRICTKB
)@@G@@ION IN USING@G@@@@.                   THE 'ROUTINE' PROC IS THAT H1 OF TKC
)@@G@@HE  LINK  REGISTER@G@@@@.                   IS  NOT SAVED. IF ANY REGISTKD
)@@G@@ERS ARE TO BE SAVED, THE@G@@@@.                   PROC ALSO GENERATES ANKE
)@@G@@  OPTIMAL  SEQUENCE  OF  STORE@G@@@@.                   INSTRUCTIONS,  TKF
)@@G@@O  SAVE  THEM  ON  THE  STACK.    AN@G@@@@.                   INSTRUCTIOKG
)@@G@@N  TO  INITIALIZE  THE  ALTERNATE    LOCAL@G@@@@.                   STORKH
)@@G@@AGE  INDEX  REGISTER  IS  GENERATED  IF  ONE  IS@G@@@@.                 KI
)@@G@@  INDICATED. THE CODE GENERATED BY THE 'ROUTINE'  PROC@^@@@@.           KJ
)@@G@@        IS: @[@@@@.     @E@@@@.                   S$PREAMBLE    <LINK>,<KK
)@@G@@STACK-FRAME-SIZE> @D@@@@.                   <CODE TO SAVE ANY OTHER REGIKL
)@@G@@STERS>@D@@@@.                   <AND INITIALIZE A LOCAL BASE REG> @[@@@@KM
)@@G@@.     @G@@@@.                   'S$PREAMBLE'  IS  A  PROC  WHICH GENERATKN
)@@G@@ES THE STACK@G@@@@.                   FRAME INITIALIZATION CODE. THE STAKO
)@@G@@CK POINTER MUST BE@G@@@@.                   UPDATED TO ACCOUNT FOR REGISKP
)@@G@@TERS, LOCALS, AND RETURN@G@@@@.                   ADDRESS USAGE, AND  THKQ
)@@G@@E  RETURN  ADDRESS  AND  STACK@G@@@@.                   FRAME  SIZE MUSTKR
)@@G@@ BE SAVED ON THE STACK. THE USER MAY@G@@@@.                   DEFINE   HKS
)@@G@@IS  OWN  'S$PREAMBLE'  PROC  TO  OPTIMALLY@G@@@@.                   CONFKT
)@@G@@IGURE    THE    PREAMBLE  CODE  GENERATION  (SEE@B@@@@.                 KU
)@@G@@  'S$PREAMBLE' BELOW).  @[@@@@.     @[@@@@.     @[@@@@.     @ @@@@. SUBRKV
)@@G@@OUTINE,<LINK> <REGLIST> @[@@@@.     @G@@@@.                   THIS  PROCKW
)@@G@@  IS  USED  TO  DEFINE  A    NON-RECURSIVE@G@@@@.                   SUBRKX
)@@G@@OUTINE.  <LINK>  IS  THE  LINK  REGISTER,    AND@G@@@@.                 KY
)@@G@@  <REGLIST>  IS  A  LIST  OF REGISTERS WHICH ARE TO BE@G@@@@.           KZ
)@@G@@        SAVED. ALL  REGISTERS  (INCLUDING  THE  <LINK>)  ARE@G@@@@.     LA
)@@G@@              SAVED  INTO  DBANK  STORAGE GENERATED UNDER THE NEXT@G@@@@LB
)@@G@@.                   EVEN LOCATION COUNTER. ANY LOCALS DECLARED WITHIN  ALC
)@@G@@@G@@@@.                   'SUBROUTINE'  ARE GENERATED SIMILARLY UNDER THLD
)@@G@@E NEXT@B@@@@.                   EVEN LOCATION COUNTER.@[@@@@.     @[@@@@LE
)@@G@@.     @[@@@@.     @^@@@@. <V> LOCAL <# WORDS>   @[@@@@.     @G@@@@.     LF
)@@G@@              THIS  PROC DEFINES THE LABEL <V> AS A LOCAL VARIABLE@G@@@@LG
)@@G@@.                   TO THE PRECEDING 'ROUTINE' OR 'SUBROUTINE' PROC.  <#LH
)@@G@@@G@@@@.                   WORDS>  IS  THE  NUMBER OF WORDS TO ALLOCATE FLI
)@@G@@OR THE@G@@@@.                   LOCAL VARIABLE, AND DEFAULTS TO ONE IF  LJ
)@@G@@OMITTED.  IF@G@@@@.                   THE  VARIABLE  IS  LOCAL  TO A 'ROLK
)@@G@@UTINE', THEN IT IS@G@@@@.                   ALLOCATED  ON  THE  STACK.  LL
)@@G@@IF  IT  IS  LOCAL  TO  A@G@@@@.                   'SUBROUTINE', THEN IT LM
)@@G@@IS ALLOCATED STORAGE UNDER THE@G@@@@.                   NEXT  EVEN LOCATLN
)@@G@@ION COUNTER, AND NO STACK REFERENCES@A@@@@.                   ARE GENERALO
)@@G@@TED.  @[@@@@.     @[@@@@.     @C@@@@. <V> STATIC <# WORDS>  <VAL1> <VAL2LP
)@@G@@> <VAL3> ...@[@@@@.     @G@@@@.                   'STATIC'  DEFINES THE LQ
)@@G@@LABLE <V> AS A STATIC VARIABLE@H@@@@.                   BASED ON THE NEXLR
)@@G@@T EVEN LOCATION COUNTER. <# WORDS>  IS    @G@@@@.                   USEDLS
)@@G@@  TO  INDICATE  THE  TOTAL  AMOUNT  OF SPACE TO @G@@@@.                 LT
)@@G@@  RESERVE FOR THE VARIABLE. SUBSEQUENT FIELDS  CONTAIN@G@@@@.           LU
)@@G@@        INITIALIZATION VALUES, WHICH MAY OR MAY NOT ENTIRELY@G@@@@.     LV
)@@G@@              FILL  THE  RESERVED  AREA.  IF  A  VALUE  FIELD   IS@G@@@@LW
)@@G@@.                   PARTIONED  INTO  SUBFIELDS,  THEN  THE  DATA WILL BELX
)@@G@@@G@@@@.                   GENERATED WITH THOSE SUBFIELDS AS WELL (IE: 1,LY
)@@G@@2 WILL@C@@@@.                   GENERATE TWO HALFWORDS).    @[@@@@.     LZ
)@@G@@@[@@@@.     @A@@@@. ARG(<ARG NUMBER>[,<PARTWORD>])    @[@@@@.     @G@@@@MA
)@@G@@.                   THIS  FUNCTION  IS USED TO REFERENCE ITEMS THAT WEREMB
)@@G@@@G@@@@.                   STACKED PRIOR TO THE CALL OF THE CURRENT SUBROMC
)@@G@@UTINE.@G@@@@.                   ARG(N) WILL REFERENCE THE  NTH  ITEM  ONMD
)@@G@@  THE  STACK@G@@@@.                   IMMEDIATELY PRECEEDING THE CALL TOME
)@@G@@ THIS ROUTINE. EG:@E@@@@.                   ASSUME    THE    FOLLOWING  MF
)@@G@@  SEQUENCE: @[@@@@.     @G@@@@.                   STACK A0          . ARMG
)@@G@@GUMENTS ARE IN REVERSE ORDER  @F@@@@.                   STACK A1        MH
)@@G@@  . THIS IS THE FIRST ARGUMENT@E@@@@.                   CALL  SUBR      MI
)@@G@@  . CALL THE SUBROUTINE @[@@@@.     @E@@@@.                   THE ARGUMEMJ
)@@G@@NTS MAY BE RETRIEVED THUSLY:  @[@@@@.     @F@@@@.                   LA AMK
)@@G@@0,ARG(2)      . GET THE SECOND ARGUMENT   @F@@@@.                   LA AML
)@@G@@1,ARG(1)      . GET THE FIRST ARGUMENT    @[@@@@.     @G@@@@.           MM
)@@G@@        THIS  METHOD  OF  ACESSING  ARGUMENTS  ALLOWS    THE@G@@@@.     MN
)@@G@@              PROGRAMMER  TO  MAKE REFERENCES TO THE STACK POINTER@G@@@@MO
)@@G@@.                   REGARDLESS OF HOW MANY LOCALS HE HAS  ALLOCATED,  ASMP
)@@G@@@D@@@@.                   THE FUNC ADJUSTS ACCORDINGLY.     @[@@@@.     MQ
)@@G@@@[@@@@.     @#@@@@. RETURN <OFFSET> @[@@@@.     @G@@@@.                 MR
)@@G@@  THIS  PROC GENERATES CODE TO PERFORM A RETURN FROM A@G@@@@.           MS
)@@G@@        'ROUTINE' OR 'SUBROUTINE'. <OFFSET>,  DEFAULTING  TO@G@@@@.     MT
)@@G@@              ZERO  IF  OMITTED,  IS  THE  OFFSET  FROM THE RETURN@G@@@@MU
)@@G@@.                   ADDRESS. IF PRECEDED WITH A 'ROUTINE' PROC, 'RETURN'MV
)@@G@@@G@@@@.                   GENERATES CODE TO POP THE CURRENT STACK FRAME,MW
)@@G@@ AFTER@G@@@@.                   RESTORING ANY SAVED  REGISTERS  INCLUDINMX
)@@G@@G  THE  LINK@G@@@@.                   REGISTER.  FOLLOWING  A 'SUBROUTINMY
)@@G@@E' PROC, THIS PROC@G@@@@.                   GENERATES CODE TO RESTORE  TMZ
)@@G@@HE  REGISTERS  SAVED  TO@G@@@@.                   MEMORY.  IF  BOTH  CASNA
)@@G@@ES, A JUMP INSTRUCTION IS THEN@ @@@@.                   GENERATED.@[@@@@NB
)@@G@@.     @B@@@@. AN EXAMPLE USAGE OF THE ROUTINE PROCS:  @[@@@@.     @#@@@@NC
)@@G@@. FACT    ROUTINE @E@@@@. PROD    LOCAL                       . PARTIAL ND
)@@G@@PRODUCT     @E@@@@.         LA,U      A1,1              . DEFAULT FACTORNE
)@@G@@IAL   @D@@@@.         DSC       A0,36             . A0=1;A1=X     @D@@@@NF
)@@G@@.         JZ        A1,FACT900        . IF 0!, RETURN @D@@@@.         TNNG
)@@G@@E,U     A1,1              . IS IT 1!?     @D@@@@.         J         FACTNH
)@@G@@900           . YES, 1!=1     @E@@@@.         SA        A0,PROD         NI
)@@G@@  . FORM PARTIAL PRODUCT@D@@@@.         AN,U      A0,1              . CONJ
)@@G@@MPUTE (X-1)!@E@@@@.         CALL      FACT              . CALL RECURSIVENK
)@@G@@LY    @E@@@@.         MSI       A0,PROD           . FORM X*((X-1)!)     NL
)@@G@@@E@@@@. FACT900 RETURN                      . WITH RESULT IN A0   @[@@@@NM
)@@G@@.     @[@@@@/.    @B@@@@. S$PREAMBLE <LINK>,<STACK-FRAME-SIZE>    @[@@@@NN
)@@G@@.     @G@@@@.                   THIS  PROC  GENERATES THE STANDARD PREAMNO
)@@G@@BLE SEQUENCE@G@@@@.                   FOR THE 'ROUTINE' PROC, INITIALIZINP
)@@G@@NG A STACK  FRAME.@G@@@@.                   THE  PURPOSE OF PLACING THE NQ
)@@G@@CODE WITHIN A DOCUMENTED@G@@@@.                   PROC SUCH AS THIS, IS NR
)@@G@@TO ALLOW THE USER  THE  OPTION@G@@@@.                   OF  TAILORING  TNS
)@@G@@HE  PREAMBLE  GENERATION  TO HIS OWN@G@@@@.                   REQUIREMENNT
)@@G@@TS.    THE  STANDARD  SEQUENCE  SHOULD  BE@G@@@@.                   SUFFNU
)@@G@@ICIENT   FOR  MOST  APPLICATIONS;  IT  HAS  BEEN@G@@@@.                 NV
)@@G@@  BALANCED    BETWEEN    OPTIMAL   MEMORY   AND    CPU@G@@@@.           NW
)@@G@@        UTILIZATIONS.  IF  MEMORY  IS A CRITICAL FACTOR, AND@G@@@@.     NX
)@@G@@              MANY 'ROUTINES' ARE DEFINED, IT COULD  BE  REDEFINED@G@@@@NY
)@@G@@.                   AS A PROC WHICH GENERATES A SUBROUTINE CALL, THEREBYNZ
)@@G@@@G@@@@.                   REDUCING  THE  NUMBER  OF INSTRUCTIONS GENERATOA
)@@G@@ED FOR@G@@@@.                   EACH    ROUTINE.  HOWEVER,  IF  CPU  UTIOB
)@@G@@LIZATION  IS@G@@@@.                   CRITICAL AND MEMORY IS AVAILABLE, OC
)@@G@@PERHAPS  IT  MIGHT@G@@@@.                   BE  REDEFINED  TO  GENERATE OD
)@@G@@   THE    STACK    FRAME@G@@@@.                   INITIALIZATION  IN  ASOE
)@@G@@  FEW INSTRUCTIONS AS POSSIBLE@G@@@@.                   (THE AUTHOR WOULOF
)@@G@@D LIKE TO SEE THAT  ATTEMPTED!).  IT@G@@@@.                   COULD  EVEOG
)@@G@@N,  IF DESPERATE, OMIT THE OVERFLOW CHECK.@G@@@@.                   IN AOH
)@@G@@NY CASE, ALL ONE NEED DO TO REDEFINE  THE  PROC,@G@@@@.                 OI
)@@G@@  IS  TO LOCALLY DEFINE THE S$PREAMBLE AND S$POSTAMBLE@G@@@@.           OJ
)@@G@@        PROCS SO THAT THESE EXTERNAL PROC  DEFINITIONS  WILL@A@@@@.     OK
)@@G@@              NOT BE SOUGHT.  @[@@@@.     @G@@@@.                   THE OL
)@@G@@FUNCTION OF A PREAMBLE ROUTINE IS TO PREPARE THE@G@@@@.                 OM
)@@G@@  STACK  FOR  USAGE  DURING  A ROUTINE WHICH HAS LOCAL@G@@@@.           ON
)@@G@@        VARIABLES BASED UPON THE STACK, AND ALSO  ALLOW  FOR@G@@@@.     OO
)@@G@@              PROPER  DEALLOCATION OF STACK SPACE UPON RETURN FROM@G@@@@OP
)@@G@@.                   THE SUBROUTINE.  THE  MECHANISM  USED  HERE  IS  THEOQ
)@@G@@@G@@@@.                   SO-CALLED  'STACK FRAME', WHEREIN A PARTITION OR
)@@G@@OF THE@G@@@@.                   STACK IS ALLOCATED WITH CERTAIN FIELDS BOS
)@@G@@EING USED TO@G@@@@.                   CONTAIN THE INFORMATION NECESSARY OT
)@@G@@ FOR  DEALLOCATION@G@@@@.                   AND  PROPER  RETURN  FROM THOU
)@@G@@E ROUTINE. THE FORMAT OF@G@@@@.                   THE 'STACK FRAME' USEDOV
)@@G@@ BY THESE PROCS IS AS FOLLOWS:@[@@@@.     @C@@@@.                       OW
)@@G@@            STACK FRAME @G@@@@.          -------------------------------OX
)@@G@@------------------------------@G@@@@.          :                        OY
)@@G@@                                   :@G@@@@.          :                  OZ
)@@G@@      LOCALS AREA                        :@G@@@@.          :            PA
)@@G@@                                               :@G@@@@.          -------PB
)@@G@@------------------------------------------------------@G@@@@.          :PC
)@@G@@                                                           :@G@@@@.     PD
)@@G@@     :                   SAVED REGISTERS AREA                    :@G@@@@PE
)@@G@@.          :                                                           :PF
)@@G@@@G@@@@.          -------------------------------------------------------PG
)@@G@@------@G@@@@.          :      STACK-FRAME-SIZE       :      X11 - RETURNPH
)@@G@@ LINK      :@G@@@@.          -------------------------------------------PI
)@@G@@------------------@[@@@@.     @[@@@@.     @C@@@@. THE CURRENTLY DEFINED PJ
)@@G@@PREAMBLE SEQUENCE IS:   @[@@@@.     @B@@@@.         ANX,U     SP$,<STACKPK
)@@G@@-FRAME-SIZE>@ @@@@.         TLEM      SP$,S$$BOT@ @@@@.         SLJ     PL
)@@G@@  <OVERFLOW>@C@@@@.         LXI,U     <LINK>,<STACK-FRAME-SIZE>+1 @A@@@@PM
)@@G@@.         SX        <LINK>,1,SP$    @[@@@@.     @[@@@@.     @[@@@@.     PN
)@@G@@@ @@@@. S$POSTAMBLE <OFFSET>,<LINK> @[@@@@.     @G@@@@.                 PO
)@@G@@  THIS  PROC GENERATES THE STANDARD POSTAMBLE SEQUENCE@G@@@@.           PP
)@@G@@        USED BY THE 'RETURN' PROC TO  DEALLOCATE  THE  SPACE@G@@@@.     PQ
)@@G@@              USED  FOR  LOCALS, IF ANY, AND TRANSFER CONTROL BACK@C@@@@PR
)@@G@@.                   THE CALLER OF THE ROUTINE.  @[@@@@.     @[@@@@.     PS
)@@G@@@C@@@@. THE CURRENTLY DEFINED POSTAMBLE SEQUENCE IS:  @[@@@@.     @A@@@@PT
)@@G@@.         LX,H2     <LINK>,1,SP$    @ @@@@.         AX,H1     SP$,1,SP$ PU
)@@G@@@A@@@@.         J         <OFFSET>,<LINK> @[@@@@.     @[@@@@.     @B@@@@PV
)@@G@@. ALAN STEBBENS, YFNSS UOMCSC, 01/13/77   @^@@@@. LAST UPDATE 08/23/82  PW
)@@G@@@ @@@@/         LEVEL     0,1,0     @#@@@@          DEF     @[@@@@.     PX
)@@G@@@C@@@@. STK  -  FUNC TO ADDRESS ITEMS OFF OF STACK    @[@@@@.     @#@@@@PY
)@@G@@STK*      FUNC    @D@@@@          END       +(I$ ,STK>1->STK(2),,SP$,,STPZ
)@@G@@K(1)) @[@@@@.     @#@@@@. ARG(<N>[,<PW>]) @[@@@@.     @#@@@@F         FUQA
)@@G@@NC    @#@@@@ARG*      $NAME   @D@@@@          END       +(I$ ,F>2->F(2),QB
)@@G@@,S$$RT(S$$RC,2),,;@E@@@@                    F(1)+1+S$$RT(S$$RC,1)+S$$RT(QC
)@@G@@S$$RC,4))   @[@@@@.     @[@@@@.     @C@@@@.         DEFINE THE STACK CHEQD
)@@G@@CKING MNEMONICS   @[@@@@.     @D@@@@STNONE    EQU       0               QE
)@@G@@  . NO CHECKING   @E@@@@STOFLO    EQU       1                 . OVERFLOWQF
)@@G@@ CHECKING   @E@@@@STUFLO    EQU       2                 . UNDERFLOW CHECQG
)@@G@@KING  @G@@@@STBOTH    EQU       STOFLO++STUFLO    . BOTH OVER AND UNDERFQH
)@@G@@LOW CHECKING@[@@@@.     @[@@@@.     @E@@@@.   STACKDEF,<CHECK>  <SP>,<STQI
)@@G@@ACKCWD> <SIGNAL>,<ADDR> ...   @[@@@@.     @C@@@@.         ALLOWABLE SIGNQJ
)@@G@@ALS ARE: 'OFLO' 'UFLO'  @[@@@@.     @^@@@@S         PROC      *5  @#@@@@QK
)@@G@@STACKDEF* NAME    @#@@@@          FUNC$   @D@@@@. THE FOLLOWING VARIABLEQL
)@@G@@S ARE DEFINED BY THIS PROC:   @A@@@@.  S$$CF  - CHECKING FLAG (0-3)     QM
)@@G@@@C@@@@.  SP$    - STACK POINTER X REGISTER (1-15)     @F@@@@.  S$$CWA - QN
)@@G@@STACK CONTROL WORD ADDRESS (MAY BE BASED OR INDIRECT) @E@@@@.  S$$TOP - QO
)@@G@@ADDRESS OF THE TOP OF THE STACK (S$$CWA,,H1)    @E@@@@.  S$$BOT - ADDRESQP
)@@G@@S OF THE BOTTOM OF THE STACK (S$$CWA,,H2) @B@@@@.  S$$SA  - ARRAY OF SIGQQ
)@@G@@NAL ADDRESSES     @A@@@@.  S$$SA(1) - OVERFLOW ADDRESS (SLJ)@B@@@@.  S$$QR
)@@G@@SA(2) - UNDERFLOW ADDRESS (SLJ)     @[@@@@.     @ @@@@          $LEVEL  QS
)@@G@@  ,$LEV-1   @E@@@@S$$CF     $EQU      S(0,1)            . CHECK FLAG (0-QT
)@@G@@3)    @F@@@@          S<2->END                    . QUIT IF NO MORE SPECQU
)@@G@@S     @D@@@@SP$       $EQU      S(1,1)            . STACK POINTER @E@@@@QV
)@@G@@S$$CWA    $EQU      AF(S(1),2)        . CONTROL WORD ADDRESS@E@@@@S$$TOPQW
)@@G@@    $EQUF     S$$CWA,,2         . TOP OF THE STACK    @E@@@@S$$BOT    $EQX
)@@G@@QUF     S$$CWA,,1         . BOTTOM OF THE STACK @F@@@@          S<3->$ENQY
)@@G@@D                   . QUIT IF NO SIGNAL SPECS   @#@@@@          $LEVEL  QZ
)@@G@@@B@@@@L         $EQU      $L1('OFLO','UFLO')    @E@@@@I         $REPEAT RA
)@@G@@  2,S-1             . SCAN ALL SIGNALS    @E@@@@J         $REPEAT   L   RB
)@@G@@              . SCAN THE SIGNAL LIST@G@@@@          L(J)<>S(I,1)->$ENDR RC
)@@G@@        . LOOP AGAIN IF NOT THIS SIGNAL   @D@@@@          $LEVEL    ,$LERD
)@@G@@V-1           . GLOBALIZE TIME@F@@@@S$$SA(J)  $EQU      AF(S(I),2)      RE
)@@G@@  . CAPTURE THE SIGNAL ADDRESS@#@@@@          $LEVEL  @F@@@@          $ERF
)@@G@@NDI                       . STOP SCANNING SIGNAL LIST @F@@@@          $ERG
)@@G@@NDR                       . END OF INNER REPEAT BLOCK @F@@@@          $ERH
)@@G@@NDR                       . END OF OUTER REPEAT BLOCK @E@@@@          $ERI
)@@G@@ND                        . OF STACKDEF PROC    @[@@@@.     @A@@@@.   STRJ
)@@G@@ACKCW   <ADDRESS>,<LENGTH>    @[@@@@.     @A@@@@.         BUILD A STACK RK
)@@G@@CONTROL WORD@A@@@@.         H1: <ADDRESS>+<LENGTH>+1  @^@@@@.         H2RL
)@@G@@: <ADDRESS> @[@@@@.     @^@@@@S         PROC      1,1 @#@@@@STACKCW*  $NRM
)@@G@@AME   @B@@@@          *         S(1,1)+S(1,2)+1,S(1,1)@#@@@@          ENRN
)@@G@@D     @[@@@@.     @^@@@@.   STACKRES  <LENGTH>  @[@@@@.     @D@@@@.     RO
)@@G@@    RESERVE SPACE FOR THE STACK OF SIZE <LENGTH>@[@@@@.     @^@@@@S     RP
)@@G@@    PROC      *1  @#@@@@STACKRES* $NAME   @A@@@@          *         $+1+RQ
)@@G@@S(1,1),$+1  @ @@@@          $RES      S(1,1)    @#@@@@          $END    RR
)@@G@@@[@@@@.     @]@@@@.   SPINIT  @[@@@@.     @B@@@@.         INITIALIZE THERS
)@@G@@ STACK POINTER    @[@@@@.     @^@@@@S         PROC      *0  @#@@@@SPINITRT
)@@G@@*   NAME    @F@@@@          LX        SP$,S$$TOP        . GET ADDRESS OFRU
)@@G@@ STACK TOP  @G@@@@          ANX       SP$,(2,0)         . SETUP INCREMENRV
)@@G@@T, & STACK POINTER@D@@@@          $END                        . OF SPINIRW
)@@G@@T PROC@[@@@@.     @A@@@@.   SPTEST  <OFFSET> <ERROR ADDR>   @[@@@@.     RX
)@@G@@@^@@@@S         PROC      *2  @#@@@@SPTEST*   NAME    @D@@@@          $IRY
)@@G@@F       S>1               . EXPLICIT TEST?@F@@@@NEG       $EQU      \\$IRZ
)@@G@@BITS(S(1,1))**4 . SET IF NEGATIVE VALUE   @E@@@@          ANX,15    SP$,SA
)@@G@@S(1,1)        . BUMP STACK POINTER  @G@@@@          TLEM      SP$,NEG->SSB
)@@G@@$$TOP!S$$BOT . TEST THE STACK POINTER     @E@@@@ $DO NEG , J        $+2 SC
)@@G@@              . TEST FOR UNDERFLOW  @D@@@@          SLJ       S$$SA(1+NESD
)@@G@@G)      . TEST FAILED   @F@@@@          AX,15     SP$,S(1,1)+1      . FISE
)@@G@@X STACK POINTER BACK    @G@@@@          $ELSE                       . IMSF
)@@G@@PLICIT CHECK IS BOTH LIMITS   @E@@@@          LXI,14    SP$,0           SG
)@@G@@  . CLEAR INCREMENT     @E@@@@          TLEM      SP$,S$$TOP        . TESH
)@@G@@ST FOR UNDERFLOW  @G@@@@          $IF       S$$SA(1)<>S$$SA(2) . NEED SESI
)@@G@@PARATE ERROR RETURNS?   @G@@@@          J         $+2               . YESJ
)@@G@@S, FIX FOR UNDERFLOW TEST     @E@@@@          SLJ       S$$SA(2)        SK
)@@G@@  . UNDERFLOW OCCURRED  @#@@@@          $ENDF   @F@@@@          TLEM    SL
)@@G@@  SP$,S$$BOT        . TEST FOR OVERFLOW ERROR   @E@@@@          SLJ     SM
)@@G@@  S$$SA(1)          . OVERFLOW OCCURRED   @E@@@@          LXI,15    SP$,SN
)@@G@@-1            . RESTORE INCREMENT   @H@@@@          $ENDF               SO
)@@G@@        . TEST FOR EXPLICIT/IMPLICIT CHECKS     @E@@@@                  SP
)@@G@@  $END               . OF SPTEST PROC     @[@@@@.     @#@@@@.   SPPOSN  SQ
)@@G@@<AREG>@[@@@@.     @B@@@@.         PUT POSITION OF SP$ IN <AREG>   @[@@@@SR
)@@G@@.     @^@@@@S         PROC      1,2 @#@@@@SPPOSN*   NAME    @D@@@@      SS
)@@G@@    L         S(1,1),S$$TOP     . GET STACK STOP@E@@@@          AN,15   ST
)@@G@@  S(1,1),,SP$       . MINUS CURRENT SP    @#@@@@          END     @[@@@@SU
)@@G@@.     @ @@@@.   STACK  <REG>,<REG>,...    @[@@@@.     @^@@@@S         PRSV
)@@G@@OC      *1  @#@@@@STACK*    NAME    @B@@@@          DO S$$CF**1 , SPTESTSW
)@@G@@ S(1)-1     @E@@@@I         DO S(1) , S S(1,I),,*SP$      PUSH DATA ONTOSX
)@@G@@ STACK@#@@@@          END     @[@@@@.     @ @@@@.   UNSTACK <REG>,<REG>,SY
)@@G@@...   @[@@@@.     @^@@@@S         PROC      *1  @#@@@@UNSTACK* NAME     SZ
)@@G@@@B@@@@          DO S$$CF**2=2 , SPTEST -S(1)    @C@@@@I         DO      TA
)@@G@@  S(1) , L S(1,I),1+S(1)-I,SP$@E@@@@          AX,U      SP$,S(1)        TB
)@@G@@  BUMP STACK POINTER    @#@@@@          END     @[@@@@.     @#@@@@.   SPTC
)@@G@@MOVE <NUM>  @[@@@@.     @^@@@@S         PROC      *1  @#@@@@SPMOVE*   NATD
)@@G@@ME    @#@@@@          FUNC$   @F@@@@          ANX       SP$,AF(S(1),*1) TE
)@@G@@  . MOVE THE STACK POINTER    @ @@@@          DO S$$CF>0 , SPTEST @#@@@@TF
)@@G@@          END     @[@@@@/.    @E@@@@.   ROUTINE,<LINK> <REGLIST>  . *<RETG
)@@G@@G> = LOCAL STACK INDEX  @A@@@@.   SUBROUTINE,<LINK> <REGLIST>     @[@@@@TH
)@@G@@.     @#@@@@          DEF     @F@@@@S$$PF     $EQU      0               TI
)@@G@@  . MUST MATCH $LP FIRST TIME @E@@@@S$$RT     $EQU      $NODE           TJ
)@@G@@  . TREE OF ROUTINE INFO@[@@@@.     @^@@@@S         PROC      *1  @^@@@@TK
)@@G@@ROUTINE*  NAME      1   @^@@@@SUBROUTINE* NAME    0   @#@@@@          FUTL
)@@G@@NC$   @[@@@@.     @H@@@@. THE FOLLOWING VARIABLES ARE DEFINED AND MAINTATM
)@@G@@INED BY THE 'ROUTINE' PROC.   @[@@@@.     @ @@@@. S$$PF  - PASS FLAG (0 TN
)@@G@@OR 1) @ @@@@. S$$RC  - ROUTINE COUNTER    @ @@@@. S$$LC  - LOCAL WORDS CTO
)@@G@@OUNTER@A@@@@. S$$LI  - LOCAL WORDS INCREMENT    @A@@@@. S$$RT  - TREE OFTP
)@@G@@ ROUTINE INFO     @D@@@@.   S$$RT(S$$RC,0) - LINK X-REGISTER (DEFAULT=X1TQ
)@@G@@1)    @B@@@@.   S$$RT(S$$RC,1) - # WORDS FOR LOCALS   @H@@@@.   S$$RT(S$TR
)@@G@@$RC,2) - LOCAL VARIABLE XREG OR REGISTER SAVE AREA (SUBROUTINE)   @C@@@@TS
)@@G@@.   S$$RT(S$$RC,3) - ROUTINE FLAG (0=SUBROUTINE)@C@@@@.   S$$RT(S$$RC,4)TT
)@@G@@ - LIST OF SAVED REGISTERS    @[@@@@.     @D@@@@RF        EQU       S(0,TU
)@@G@@0)            . ROUTINE FLAG  @ @@@@          $LEVEL    ,$LEV-1   @D@@@@TV
)@@G@@          $IF       S$$PF=$LP         . FIRST TIME?   @D@@@@S$$PF     $ETW
)@@G@@QU      \S$$PF            . FLIP FLAG     @F@@@@S$$RC     $EQU      0   TX
)@@G@@              . INITIALIZE ROUTINE COUNTER@F@@@@          $ENDF         TY
)@@G@@              . END OF INITIALIZATION     @E@@@@S$$RC     $EQU      S$$RTZ
)@@G@@C+1           . BUMP ROUTINE COUNTER@D@@@@S$$LC     $EQU      0         UA
)@@G@@        . LOCAL COUNTER @E@@@@S$$LI     $EQU      0                 . INUB
)@@G@@ITIAL INCREMENT   @#@@@@          $LEVEL  @F@@@@LK        EQU       S(0)UC
)@@G@@>1->S(0,1)!X11 . CAPTURE LINK REGISTER    @E@@@@LX        EQU       SP$ UD
)@@G@@              . DEFAULT LOCAL XREG  @E@@@@          $IF       \$LP      UE
)@@G@@        . ONLY ON FIRST PASS  @F@@@@RL        EQU       $NODE           UF
)@@G@@  . DEFAULT REGISTER LIST     @F@@@@I         $REPEAT   S(1)            UG
)@@G@@  . SCAN ALL REGS IN REGLIST  @F@@@@ $DO S(1,*I) ,LX $EQU S(1,I)        UH
)@@G@@  . POST USER-DEFINED XREG    @G@@@@          LK=S(1,I)->$ENDR          UI
)@@G@@  . SKIP REG IF SAME AS LINK REG    @E@@@@R(S(1,I)) $EQU      0         UJ
)@@G@@        . SORT THE REGISTERS  @#@@@@          $ENDR   @H@@@@ $DO RF ,R(LUK
)@@G@@K) $EQU 0                 . IF 'SUBROUTINE' ALWAYS SAVE LINK REG  @F@@@@UL
)@@G@@I $DO S(1) ,RL(I) EQU $NS(R,I)        . COMPRESS THE REGISTER LIST@H@@@@UM
)@@G@@RSA       EQU       RF->0!$($LCN+2-($LCN**1)) . # LOCALS OR REG SAVE AREUN
)@@G@@A     @ @@@@          $LEVEL    ,$LEV-1   @G@@@@S$$RT(S$$RC) $EQU   $L0(UO
)@@G@@LK,RSA,LX,RF,RL) . DEFINE INFO FOR THIS ROUTINE @#@@@@          $LEVEL  UP
)@@G@@@D@@@@          $ELSE                       . SECOND PASS   @F@@@@RSA   UQ
)@@G@@    $EQU      S$$RT(S$$RC,2)    . RECOVER REGISTER SAVE AREA@F@@@@RL    UR
)@@G@@    $EQU      S$$RT(S$$RC,4)    . RECOVER REGISTER LIST     @B@@@@      US
)@@G@@    $ENDF                       .   @C@@@@          $IF       RF        UT
)@@G@@        . ROUTINE?@E@@@@          S$PREAMBLE LK,S$$RT(S$$RC,1)+RL . GEN UU
)@@G@@PREAMBLE    @F@@@@RSA       EQUF      1,SP$             . CORRECT REGISTUV
)@@G@@ER SAVE AREA@#@@@@          $ENDF   @F@@@@I         EQU       1         UW
)@@G@@        . NOW SCAN THE <REGLIST>    @#@@@@          $REPEAT @F@@@@      UX
)@@G@@    I>RL->$ENDI                 . QUIT IF PAST END OF LIST  @F@@@@F     UY
)@@G@@    EQU       A0<=RL(I)<=A15->I<RL->RL(I)+1=RL(I+1)!0!0     @F@@@@      UZ
)@@G@@    F->DS!S   RL(I),RSA+I-1     . SAVE A REGISTER (OR TWO)  @F@@@@I     VA
)@@G@@    EQU       I+1+F             . INCREMENT THE COUNTER     @#@@@@      VB
)@@G@@    $ENDR   @E@@@@ $DO LX<>SP$ , LX,U LX,,SP$           . CAPTURE CURRENVC
)@@G@@T BASE@E@@@@          RF->$END                    . QUIT IF 'ROUTINE'   VD
)@@G@@@F@@@@$($LCN+2-($LCN**1)) $RES RL           . RESERVE SPACE FOR REGS    VE
)@@G@@@E@@@@$($ILCN)                              . BACK TO REGULAR LC  @E@@@@VF
)@@G@@          $END                        . OF 'ROUTINE' PROC   @[@@@@.     VG
)@@G@@@[@@@@.     @ @@@@. <VAR>  LOCAL      <# WORDS> @[@@@@.     @^@@@@S     VH
)@@G@@    PROC      *1  @#@@@@LOCAL*    $NAME   @ @@@@          $LEVEL    ,$LEVI
)@@G@@V-1   @G@@@@S$$LC     $EQU      S$$LC+S$$LI       . BUMP PREVIOUS COUNTEVJ
)@@G@@R WITH INC  @F@@@@S$$LI     $EQU      S(1)>0->S(1,1)!1  . DEFINE THE NEXVK
)@@G@@T INCREMENT @C@@@@          $IF       S$$RT(S$$RC,3)    . ROUTINE?@F@@@@VL
)@@G@@S$$RT(S$$RC,1) $EQU S$$LC+S$$LI       . POST CURRENT ALLOCATION   @^@@@@VM
)@@G@@          $LF(1)=0->$END@#@@@@          $LEVEL  @I@@@@A         $EQUF   VN
)@@G@@  S$$LC+2+S$$RT(S$$RC,4),S$$RT(S$$RC,2) . DEFINE THE LOCAL OFF    @E@@@@VO
)@@G@@*         $EQUF     A                 . DEFINE THE LABEL    @A@@@@      VP
)@@G@@    $DO $LEV=2 , $DISPLAY A   @#@@@@          1->$END @#@@@@          $EVQ
)@@G@@NDF   @^@@@@$($LCN+2-($LCN**1))     @F@@@@*         $RES      S$$LI     VR
)@@G@@        . SAVE SPACE FOR THE LOCAL  @]@@@@$($ILCN)    @E@@@@          $EVS
)@@G@@ND                        . OF 'LOCAL' PROC     @[@@@@.     @E@@@@. <VARVT
)@@G@@>  STATIC    <# WORDS>   <VAL1> <VAL2> <VAL3> ...     @[@@@@.     @^@@@@VU
)@@G@@S         PROC      *80 @#@@@@STATIC*   $NAME   @^@@@@$($LCN+2-($LCN**1)VV
)@@G@@)     @E@@@@*         $EQUF     $                 . DEFINE ANY LABEL    VW
)@@G@@@A@@@@R         $EQU      S(1)>0->S(1,1)!1@^@@@@L         $EQU      $   VX
)@@G@@@ @@@@I         $REPEAT   2,S-1     @ @@@@V         $EQU      'S(I,1)'  VY
)@@G@@@D@@@@J         $DO 2,S(I) ,V $EQU V:',S(I,':$CD(J):')'     @^@@@@      VZ
)@@G@@    $GEN      [V] @#@@@@          $ENDR   @ @@@@          RES       R-($WA
)@@G@@-L)   @]@@@@$($ILCN)    @#@@@@          $END    @[@@@@.     @^@@@@.   REWB
)@@G@@TURN  <OFFSET>    @[@@@@.     @^@@@@S         PROC      *1  @#@@@@RETURNWC
)@@G@@*   NAME    @D@@@@RT        EQU       S$$RT(S$$RC)      . GET TREE NODE WD
)@@G@@@F@@@@RL        EQU       RT(4)             . LET'S RELOAD SAVED REGS   WE
)@@G@@@F@@@@LK        EQU       RT(0)             . GET THE LINK REGISTER     WF
)@@G@@@D@@@@RF        EQU       RT(3)             . 'ROUTINE' FLAG@F@@@@RSA   WG
)@@G@@    EQUF      [RF->'1,SP$'!'RT(2)'] . GET REG SAVE AREA     @^@@@@I     WH
)@@G@@    EQU       1   @#@@@@          $REPEAT @^@@@@          I>RL->$ENDI   WI
)@@G@@@F@@@@F         EQU       A0<=RL(I)<=A15->I<RL->RL(I)+1=RL(I+1)!0!0     WJ
)@@G@@@D@@@@          F->DL!L   RL(I),RSA+I-1     . LOAD A REG    @G@@@@I     WK
)@@G@@    EQU       I+1+F             . BUMP THE REG INDEX AND ADDRESS  @#@@@@WL
)@@G@@          $ENDR   @H@@@@          RF->S$POSTAMBLE!J S(1,1),LK . GENERATEWM
)@@G@@ EITHER POSTAMBLE OR JUMP     @E@@@@          $END                      WN
)@@G@@  . OF 'RETURN' PROC    @[@@@@/.    @B@@@@.   S$PREAMBLE <LINK>,<STACK-FWO
)@@G@@RAME-SIZE>  @[@@@@.     @^@@@@S         PROC      1,5 @#@@@@S$PREAMBLE* WP
)@@G@@NAME  @ @@@@LK        EQU       S(1,1)    @ @@@@SFS       EQU       S(1,WQ
)@@G@@2)    @E@@@@          ANX,U     SP$,SFS           . PUSH STACK FRAME    WR
)@@G@@@D@@@@          TLEM      SP$,S$$BOT        . TEST BOTTOM   @E@@@@      WS
)@@G@@    SLJ       S$$SA(1)          . CALL OVERFLOW CODE  @F@@@@          LXWT
)@@G@@I,U     LK,SFS+1          . GET REAL STACK FRAME SIZE @D@@@@          SXWU
)@@G@@        LK,1,SP$          . SAVE SIZE,LINK@E@@@@          $END          WV
)@@G@@              . OF PREAMBLE PROC    @[@@@@.     @A@@@@.   S$POSTAMBLE  <WW
)@@G@@OFFSET>,<LINK>    @[@@@@.     @^@@@@S         PROC      1,3 @#@@@@S$POSTWX
)@@G@@AMBLE* NAME @F@@@@          LX,H2     S(1,2),1,SP$      . RESTORE RETURNWY
)@@G@@ ADDRESS    @E@@@@          AX,H1     SP$,1,SP$         . POP STACK FRAMWZ
)@@G@@E     @D@@@@          J         S(1,1),LK         . RETURN TO USER@E@@@@XA
)@@G@@          $END                        . OF POSTAMBLE PROC   @[@@@@.     XB
)@@G@@@#@@@@.   STACKDUMP     @[@@@@.     @^@@@@STACKDUMP* PROC     *0  @ @@@@XC
)@@G@@L         EQU       $LCN+1    @E@@@@          SA        A0,$(L)+2       XD
)@@G@@  . SAVE A0 IN PACKET   @E@@@@          LA        A0,S$$TOP         . GEXE
)@@G@@T STACK ADDRESS   @F@@@@          AN,U      A0,,SP$           . SUBTRACTXF
)@@G@@ CURRENT POSITION @E@@@@          LSSL      A0,18             . MOVE IT XG
)@@G@@UPSTAIRS    @E@@@@          AA,U      A0,1,SP$          . GET STARTING AXH
)@@G@@DDRESS@E@@@@          SA        A0,$(L)+1         . PUT IN THE PACKET   XI
)@@G@@@E@@@@          LA,U      A0,$(L)           . GET PACKET ADDRESS  @C@@@@XJ
)@@G@@          ER        SNAP$             . DUMP IT @[@@@@$(L)  @#@@@@      XK
)@@G@@    'STACK' @^@@@@          RES       2   @[@@@@$(L-1)@#@@@@          ENXL
)@@G@@D     @[@@@@.     @D@@@@          1->END                      . OF DEFINXM
)@@G@@ITION _@@@@@@^@@@@.   RETURN  <OFFSET>    @[@@@@.     @^@@@@S         PRXN
)@@G@@*[S@@@*SDFF*@[@@@@.     @]@@@@.  F D I T $@[@@@@.     @H@@@@. UOM EDIT$ XO
)@@G@@PACKAGE PROCS FOR THE PACKETLESS, X1 THRU X3 NON-MONOPOLIZING     @#@@@@XP
)@@G@@. ENTRY POINTS.   @[@@@@.     @#@@@@. BEGIN USER PROCS@[@@@@.     @^@@@@XQ
)@@G@@P$        PROC      1,2 @^@@@@F$*       NAME      F$  @^@@@@FA0$*     NAXR
)@@G@@ME      FA0$@ @@@@          LXI,14    11,P$(1,1)@ @@@@          J       XS
)@@G@@  P$(0,0)   @#@@@@          END     @[@@@@.     @F@@@@.         F$LOCK  XT
)@@G@@                    . LOCK THE FDIT$ PACKAGE    @[@@@@.     @F@@@@.     XU
)@@G@@    F$UNLOCK                    . UNLOCK THE FDIT$ PACKAGE  @[@@@@.     XV
)@@G@@@^@@@@P$        PROC      0,1 @ @@@@F$LOCK*   NAME      FLOCK$    @ @@@@XW
)@@G@@F$UNLOCK* NAME      FUNLOCK$  @H@@@@          LMJ       11,P$(0,0)      XX
)@@G@@  . DO SOMETHING TO THE FDIT$ SEMAPHORE   @#@@@@          END     @[@@@@XY
)@@G@@.     @[@@@@.     @E@@@@.         F$PRT     <BUFFER CLEAR FLAG>,<LINE SKXZ
)@@G@@IP COUNT>   @[@@@@.     @B@@@@.         F$CSF     <BUFFER CLEAR FLAG>   YA
)@@G@@@[@@@@.     @B@@@@P$        PROC      *1                .   @^@@@@F$PRT*YB
)@@G@@    NAME      1   @H@@@@ DO P$(1)>1 , LA    12,+(E$AD 1,2 15) . LA[,XU] YC
)@@G@@ A0,P$(1,2),P$(1,3),P$(1,4)   @D@@@@F$CSF*    NAME      2               YD
)@@G@@  . CSF$ THINGIE  @E@@@@ DO P$(1)>0 , LA    13,+(E$AD0 1,1 15) . LA,U  AYE
)@@G@@1,P$(1,1)   @ @@@@J         EQU       P$(0,0)   @ @@@@ DO J=1 , LMJ     YF
)@@G@@  11,FPRT$  @ @@@@ DO J=2 , LMJ       11,FCSF$  @B@@@@          END     YG
)@@G@@                    .   @[@@@@.     @[@@@@.     @#@@@@.         F$COLN  YH
)@@G@@@#@@@@.         F$WRDN  @#@@@@.         F$MSGR  @#@@@@.         F$CLEAR YI
)@@G@@@[@@@@.     @B@@@@P$        PROC      *0,1              .   @F@@@@F$COLNYJ
)@@G@@*   NAME      1                 . RETURN WITH COL NUM IN A0 @F@@@@F$WRDNYK
)@@G@@*   NAME      2                 . RETURN WITH WORD NUM IN A0@F@@@@F$MSGRYL
)@@G@@*   NAME      3                 . REENTER MESSAGE EDITOR    @H@@@@F$CLEAYM
)@@G@@R*  NAME      4                 . CLEAR OUTPUT BUFFER, SET COL TO 0     YN
)@@G@@@E@@@@F$CLR*    NAME      4                 . SAME AS F$CLEAR     @D@@@@YO
)@@G@@J         EQU       P$(0,0)           . TARGET ADDRESS@B@@@@ DO J=1 , LMYP
)@@G@@J       11,FCOLN$         .   @B@@@@ DO J=2 , LMJ       11,FWRDN$       YQ
)@@G@@  .   @B@@@@ DO J=3 , LMJ       11,FMSGR$         .   @B@@@@ DO J=4 , LMYR
)@@G@@J       11,FCLEAR$        .   @B@@@@          END                       YS
)@@G@@  .   @[@@@@.     @[@@@@.     @A@@@@.         F$PAD     <COUNT> <CHAR>  YT
)@@G@@@[@@@@.     @B@@@@P$        PROC      *2                .   @E@@@@F$PAD*YU
)@@G@@    NAME      0                 . PAD OUT CHARACTERS  @H@@@@ DO P$(1)>0 YV
)@@G@@, LA    12,+(E$AD 1,1 15) . LA[,XU]  A0,P$(1,1),P$(1,2),P$(1,3)   @H@@@@YW
)@@G@@ DO P$(2)>0 , LA    13,+(E$AD 2,1 15) . LA[,XU]  A1,P$(2,1),P$(2,2),P$(2YX
)@@G@@,3)   @ @@@@          LMJ       11,FPAD$  @B@@@@          END           YY
)@@G@@              .   @[@@@@.     @[@@@@.     @F@@@@.         F$DTA     <LENYZ
)@@G@@GTH>,<ADDRESS> <OUTPUT MODE>,<INPUT MODE> @F@@@@.         F$DTAZ    <LENZA
)@@G@@GTH>,<ADDRESS> <OUTPUT MODE>,<INPUT MODE> @[@@@@.     @B@@@@P$        PRZB
)@@G@@OC      *2                .   @G@@@@F$DTA*    NAME      1               ZC
)@@G@@  . NEW ADDRESS, BLANK, ZERO COLUMN @F@@@@F$DTAZ*   NAME      2         ZD
)@@G@@        . NEW ADDRESS, ZERO COLUMN  @D@@@@ DO P$(2)>1 , F$ASCIN P$(2,2) ZE
)@@G@@        . SET INPUT MODE@F@@@@ DO P$(2)=1 , F$ASCIN P$(2,1)         . SEZF
)@@G@@T DEFAULT INPUT MODE    @F@@@@ DO P$(2)>0 , F$ASC P$(2,1)           . SEZG
)@@G@@T EXPLICIT OUTPUT MODE  @F@@@@ DO P$(1)>1 , LA    12,+(E$AD 1,2 15) . LAZH
)@@G@@[,U]  A0,P$(1,2),P$(1,3)@E@@@@ DO P$(1)>0 , LXI   12,+(E$AD0 1,1 15) . LZI
)@@G@@XI[,U] A0,P$(1,1) @ @@@@J         EQU       P$(0,0)   @ @@@@ DO J=1 , LMZJ
)@@G@@J       11,FDTA$  @ @@@@ DO J=2 , LMJ       11,FDTAZ$ @#@@@@          ENZK
)@@G@@D     @[@@@@.     @C@@@@.         F$DT      <OUTPUT MODE>,<INPUT MODE>  ZL
)@@G@@@C@@@@.         F$DTZ     <OUTPUT MODE>,<INPUT MODE>  @[@@@@.     @^@@@@ZM
)@@G@@P$        PROC      *1  @^@@@@F$DT*     NAME      1   @^@@@@F$DTZ*    NAZN
)@@G@@ME      2   @D@@@@ DO P$(1)>1 , F$ASCIN P$(1,2)         . SET INPUT MODEZO
)@@G@@@F@@@@ DO P$(1)=1 , F$ASCIN P$(1,1)         . SET DEFAULT INPUT MODE    ZP
)@@G@@@F@@@@ DO P$(1)>0 , F$ASC P$(1,1)           . SET EXPLICIT OUTPUT MODE  ZQ
)@@G@@@ @@@@J         EQU       P$(0,0)   @ @@@@ DO J=1 , LMJ       11,FDT$   ZR
)@@G@@@ @@@@ DO J=2 , LMJ       11,FDTZ$  @#@@@@          END     @[@@@@.     ZS
)@@G@@@[@@@@.     @ @@@@.         F$CHAR    <CHAR>    @ @@@@.         F$COL   ZT
)@@G@@  <COLUMN>  @ @@@@.         F$SKIP    <COUNT>   @A@@@@.         F$MSG   ZU
)@@G@@  <MSG ADDRESS>   @ @@@@.         F$MSKP    <COUNT>   @A@@@@.         F$ZV
)@@G@@MSGC    <EMSG$ CHAR>    @B@@@@.         F$MSGCA   <ASCII EMSG$ CHAR>    ZW
)@@G@@@A@@@@.         F$ASC     <ASCII/FD FLAG> @A@@@@.         F$ASCIN   <ASCZX
)@@G@@II/FD FLAG> @[@@@@.     @^@@@@P$        PROC      *1  @E@@@@F$CHAR*   NAZY
)@@G@@ME      3                 . INSERT 1 CHARACTER  @F@@@@F$COL*    NAME    ZZ
)@@G@@  4                 . MOVE TO SPECIFIED COL     @F@@@@F$SKIP*   NAME    AA
)@@G@@  5                 . SKIP SPECIFIED NUM OF COLS@E@@@@F$MSG*    NAME    AB
)@@G@@  6                 . ENTER MESSAGE EDITOR@E@@@@F$MSKP*   NAME      7   AC
)@@G@@              . SKIP MSG FIELDS     @F@@@@F$MSGC*   NAME      8         AD
)@@G@@        . SET NEW MESSAGE CHARACTER @G@@@@F$MSGCA*  NAME      9         AE
)@@G@@        . SET NEW ASCII MESSAGE CHARACTER @E@@@@F$ASC*    NAME      10  AF
)@@G@@              . SET OUTPUT MODE     @D@@@@F$ASCIN*  NAME      11        AG
)@@G@@        . SET INPUT MODE@B@@@@ DO P$(1)>0 , LA    12,+(E$AD 1,1 15) .   AH
)@@G@@@D@@@@J         EQU       P$(0,0)           . TARGET ADDRESS@B@@@@ DO J=AI
)@@G@@3 , LMJ       11,FCHAR$         .   @B@@@@ DO J=4 , LMJ       11,FCOL$  AJ
)@@G@@        .   @B@@@@ DO J=5 , LMJ       11,FSKIP$         .   @B@@@@ DO J=AK
)@@G@@6 , LMJ       11,FMSG$          .   @B@@@@ DO J=7 , LMJ       11,FMSKP$ AL
)@@G@@        .   @ @@@@ DO J=8 , LMJ       11,FMSGC$ @ @@@@ DO J=9 , LMJ     AM
)@@G@@  11,FMSGCA$@ @@@@ DO J=10 , LMJ      11,FASC$  @ @@@@ DO J=11 , LMJ    AN
)@@G@@  11,FASCIN$@B@@@@          END                         .   @[@@@@.     AO
)@@G@@@[@@@@.     @B@@@@.         F$RASE    <BUFFER CLEAR FLAG>   @[@@@@.     AP
)@@G@@@B@@@@P$        PROC      *1                .   @D@@@@F$RASE*   NAME    AQ
)@@G@@  0                 . CLEAR BUFFER  @H@@@@ DO P$(1)>0 , LA    13,+(E$AD AR
)@@G@@1,1 15) . LA[,XU]  A1,P$(1,1),P$(1,2),P$(1,3)   @B@@@@          LMJ     AS
)@@G@@  11,FRASE$         .   @B@@@@          END                         .   AT
)@@G@@@[@@@@/.    @[@@@@.     @ @@@@.         F$FD2     <ADDRESS> @ @@@@.     AU
)@@G@@    F$FD3     <ADDRESS> @[@@@@.     @B@@@@P$        PROC      *1        AV
)@@G@@        .   @D@@@@F$FD3*    NAME      0                 . INSERT 3 WORDSAW
)@@G@@@H@@@@ DO P$(1)>0 , LA  14,+(E$AD 1,1)+2    . LA       A2,P$(1,1)+2,P$(1AX
)@@G@@,2),P$(1,3) @E@@@@F$FD2*    NAME      1                 . INSERT TWO WORAY
)@@G@@DS    @G@@@@ DO P$(1)>0 , DL    12,+(E$AD 1,1)    . DL       A0,P$(1,1),AZ
)@@G@@P$(1,2)     @D@@@@J         EQU       P$(0,0)           . TARGET ADDRESSBA
)@@G@@@B@@@@ DO J=0 , LMJ       11,FFD3$          .   @B@@@@ DO J=1 , LMJ     BB
)@@G@@  11,FFD2$          .   @B@@@@          END                         .   BC
)@@G@@@[@@@@.     @[@@@@.     @C@@@@.         F$PACKC,<PW> <LENGTH>,<ADDRESS> BD
)@@G@@<CHAR>@[@@@@.     @B@@@@P$        PROC      *2                .   @C@@@@BE
)@@G@@F$PACKC*  NAME      0                 . PACK    @H@@@@ DO P$(1)>1 , LA  BF
)@@G@@  12,+(E$AD 1,2 15) . LA[,XU]  A0,P$(1,2),P$(1,3),P$(1,4)   @F@@@@ DO P$BG
)@@G@@(0)>1 , LXI   12,+(E$AD0 0,1 15) . LXI[,XU]  A0,P$(0,1)     @E@@@@ DO P$BH
)@@G@@(1)>0 , LA    13,+(E$AD0 1,1 15) . LA[,XU]  A1,P$(1,1)@H@@@@ DO P$(2)>0 BI
)@@G@@, LA    14,+(E$AD 2,1 15) . LA[,XU]  A2,P$(2,1),P$(2,2),P$(2,3)   @B@@@@BJ
)@@G@@          LMJ       11,FPACKC$        .   @B@@@@          END           BK
)@@G@@              .   @[@@@@.     @[@@@@.     @B@@@@.         F$COPY,<PW> <LBL
)@@G@@ENGTH>,<ADDRESS>  @B@@@@.         F$PACK,<PW> <LENGTH>,<ADDRESS>  @B@@@@BM
)@@G@@.         F$PACKS,<PW> <LENGTH>,<ADDRESS> @[@@@@.     @B@@@@P$        PRBN
)@@G@@OC      *1                .   @D@@@@F$COPY*   NAME      1               BO
)@@G@@  . STRING COPY   @F@@@@F$PACK*   NAME      2                 . STRING CBP
)@@G@@OPY WITH PACKING  @F@@@@F$COPYS*  NAME      3                 . STRING CBQ
)@@G@@OPY WITH SQUEEZING@F@@@@F$PACKS*  NAME      4                 . STRING PBR
)@@G@@ACK WITH SQUEEZING@H@@@@ DO P$(1)>1 , LA    12,+(E$AD 1,2 15) . LA[,XU] BS
)@@G@@ A0,P$(1,2),P$(1,3),P$(1,4)   @F@@@@ DO P$(0)>1 , LXI   12,+(E$AD0 0,1 1BT
)@@G@@5) . LXI[,XU]  A0,P$(0,1)     @E@@@@ DO P$(1)>0 , LA    13,+(E$AD0 1,1 1BU
)@@G@@5) . LA[,XU]  A1,P$(1,1)@D@@@@J         EQU       P$(0,0)           . TABV
)@@G@@RGET ADDRESS@B@@@@ DO J=1 , LMJ       11,FCOPY$         .   @B@@@@ DO J=BW
)@@G@@2 , LMJ       11,FPACK$         .   @ @@@@ DO J=3 , LMJ       11,FCOPYS$BX
)@@G@@@ @@@@ DO J=4 , LMJ       11,FPACKS$@B@@@@          END                 BY
)@@G@@        .   @[@@@@.     @[@@@@.     @B@@@@P$        PROC      *1,1      BZ
)@@G@@        .   @D@@@@F$FW*     NAME      0                 . EFORM$ WORD   CA
)@@G@@@F@@@@I         DO        P$(1) ,P$(0,0) EQU (P$(0,0)*/P$(1,I))++1 .    CB
)@@G@@@B@@@@          +         P$(0,0)           .   @B@@@@          END     CC
)@@G@@                    .   @[@@@@.     @[@@@@.     @ @@@@.         F$MSKPR CD
)@@G@@  <COUNT>   @[@@@@.     @B@@@@P$        PROC      *1                .   CE
)@@G@@@D@@@@F$MSKPR*  NAME      0                 . SKIP AND COPY @H@@@@ DO P$CF
)@@G@@(1)>0 , LA    12,+(E$AD 1,1 15) . LA[,XU]  A0,P$(1,1),P$(1,2),P$(1,3)   CG
)@@G@@@D@@@@          LMJ       11,FMSKP$         . SKIP MSG FIELD@C@@@@      CH
)@@G@@    LMJ       11,FMSGR$         . AND COPY@B@@@@          END           CI
)@@G@@              .   @[@@@@.     @[@@@@.     @C@@@@.         F$DECFL   <WIDCJ
)@@G@@TH>,<ADDRESS> <CHAR>    @[@@@@.     @B@@@@P$        PROC      *2        CK
)@@G@@        .   @G@@@@F$DECFL*  NAME      0                 . LEADING CHARS CL
)@@G@@- FIXED FORMAT    @H@@@@ DO P$(1)>1 , LA 12,+(E$AD 1,2)     . LA[,XU]  ACM
)@@G@@0,P$(1,1+I),P$(1,2+I),P$(1,3+I@E@@@@ DO P$(1)>0 , LA    13,+(E$AD0 1,1 1CN
)@@G@@5) . LA[,XU]  A1,P$(1,1)@H@@@@ DO P$(2)>0 , LA    14,+(E$AD 2,1 15) . LACO
)@@G@@[,XU]  A2,P$(2,1),P$(2,2),P$(2,3)   @B@@@@          LMJ       11,FDECFL$CP
)@@G@@        .   @B@@@@          END                         .   @[@@@@.     CQ
)@@G@@@[@@@@.     @B@@@@.         F$OCTF    <WIDTH>,<ADDRESS>     @B@@@@.     CR
)@@G@@    F$DECF    <WIDTH>,<ADDRESS>     @B@@@@.         F$HEXF    <WIDTH>,<ACS
)@@G@@DDRESS>     @B@@@@.         F$DECFZ   <WIDTH>,<ADDRESS>     @B@@@@.     CT
)@@G@@    F$DCFZ    <WIDTH>,<ADDRESS>     @[@@@@.     @B@@@@P$        PROC    CU
)@@G@@  *1                .   @E@@@@F$OCTF*   NAME      1                 . FICV
)@@G@@XED FORMAT OCTAL  @E@@@@F$DECF*   NAME      2                 . FIXED FOCW
)@@G@@RMAT DECIMAL@F@@@@F$HEXF*   NAME      3                 . FIXED FORMAT HCX
)@@G@@EXADECIMAL  @H@@@@F$DECFZ*  NAME      4                 . FIXED FORMAT DCY
)@@G@@ECIMAL-LEADING ZEROES   @H@@@@F$DCFZ*   NAME      4                 . FICZ
)@@G@@XED FORMAT DECIMAL-LEADING ZEROES   @H@@@@ DO P$(1)>1 , LA    12,+(E$AD DA
)@@G@@1,2)    . LA[,XU]  A0,P$(1,2),P$(1,3),P$(1,4)   @E@@@@ DO P$(1)>0 , LA  DB
)@@G@@  13,+(E$AD0 1,1 15) . LA[,XU]  A1,P$(1,1)@D@@@@J         EQU       P$(0DC
)@@G@@,0)           . TARGET ADDRESS@B@@@@ DO J=1 , LMJ       11,FOCTF$       DD
)@@G@@  .   @B@@@@ DO J=2 , LMJ       11,FDECF$         .   @B@@@@ DO J=3 , LMDE
)@@G@@J       11,FHEXF$         .   @B@@@@ DO J=4 , LMJ       11,FDECFZ$      DF
)@@G@@  .   @B@@@@          END                         .   @[@@@@/.    @[@@@@DG
)@@G@@.     @ @@@@.         F$DECV    <ADDRESS> @ @@@@.         F$OCTV    <ADDDH
)@@G@@RESS> @ @@@@.         F$HEXV    <ADDRESS> @ @@@@.         F$FD1     <ADDDI
)@@G@@RESS> @[@@@@.     @B@@@@P$        PROC      *1                .   @E@@@@DJ
)@@G@@F$DECV*   NAME      5                 . FREE FORMAT DECIMAL @E@@@@F$OCTVDK
)@@G@@*   NAME      6                 . FREE FORMAT OCTAL   @E@@@@F$HEXV*   NADL
)@@G@@ME      7                 . FREE FORMAT HEX     @F@@@@F$FD1*    NAME    DM
)@@G@@  8                 . INSERT 6 CHARS (1 WORD)   @H@@@@ DO P$(1)>0 , LA  DN
)@@G@@  12,+(E$AD 1,1)    . LA[,XU]  A0,P$(1,1),P$(1,2),P$(1,3)   @D@@@@J     DO
)@@G@@    EQU       P$(0,0)           . TARGET ADDRESS@B@@@@ DO J=5 , LMJ     DP
)@@G@@  11,FDECV$         .   @B@@@@ DO J=6 , LMJ       11,FOCTV$         .   DQ
)@@G@@@B@@@@ DO J=7 , LMJ       11,FHEXV$         .   @B@@@@ DO J=8 , LMJ     DR
)@@G@@  11,FFD1$          .   @B@@@@          END                         .   DS
)@@G@@@[@@@@.     @[@@@@.     @B@@@@.         F$FORM    <FORM WORD>,<ADDRESS> DT
)@@G@@@D@@@@.         F$FORMC   <FORM WORD>,<ADDRESS>  <CHAR>     @[@@@@.     DU
)@@G@@@B@@@@P$        PROC      *2                .   @G@@@@F$FORMC*  NAME    DV
)@@G@@  FFORMC$           . FORM EDITING - SPECIFY CHARACTER@H@@@@ DO P$(2)>0 DW
)@@G@@, LA    14,+(E$AD 2,1 15) . LA[,XU]  A2,P$(2,1),P$(2,2),P$(2,3)   @F@@@@DX
)@@G@@F$FORM*   NAME      FFORM$            . FORM EDITING - BLANKS USED@E@@@@DY
)@@G@@ DO P$(1)>0 , LA    13,+(E$AD0 1,1)    . LA[,XU]  A1,P$(1,1)@H@@@@ DO P$DZ
)@@G@@(1)>1 , LA    12,+(E$AD 1,2)    . LA[,XU]  A0,P$(1,2),P$(1,3),P$(1,4)   EA
)@@G@@@B@@@@          LMJ       11,P$(0,0)        .   @B@@@@          END     EB
)@@G@@                    .   @[@@@@.     @[@@@@.     @E@@@@.         F$FDECF EC
)@@G@@  <FIELD WIDTH>,<ADDRESS> <WIDTH>,<CHAR>  @E@@@@.         F$FDECFZ  <FIEED
)@@G@@LD WIDTH>,<ADDRESS> <WIDTH>,<CHAR>  @F@@@@.         F$FDECFL  <FIELD WIDEE
)@@G@@TH>,<ADDRESS> <WIDTH>,<CHAR> <CHAR> @[@@@@.     @^@@@@P$        PROC    EF
)@@G@@  *3  @D@@@@F$FDECFL* NAME      0                 . LEADING CHARS @H@@@@EG
)@@G@@ DO P$(3)>0 , LA    15,+(E$AD 3,1 15) . LA[,XU]  A3,P$(3,1),P$(3,2),P$(3EH
)@@G@@,3)   @F@@@@F$FDECF*  NAME      1                 . FIXED FORMAT DECIMALEI
)@@G@@ FORM @I@@@@F$FDECFZ* NAME      2                 . FIXED FORMAT DECIMALEJ
)@@G@@ FORM-LEADING ZEROES    @E@@@@ DO P$(1)>0 , LA    13,+(E$AD0 1,1 15) . LEK
)@@G@@A[,XU]  A1,P$(1,1)@D@@@@P$(9)     EQU       1                 . SUBFIELDEL
)@@G@@ FLAG @F@@@@F$FDECV*  NAME      3                 . FREE FORMAT DECIMAL EM
)@@G@@FORM  @B@@@@I         EQU       P$(9)             .   @I@@@@ DO P$(1)>I EN
)@@G@@, LA    12,+(E$AD 1,1+I)  . LA[,XU]  A0,P$(1,1+I),P$(1,2+I),P$(1,3+I    EO
)@@G@@@H@@@@ DO P$(2)>1 , LA    14,+(E$AD 2,2 15) . LA[,XU]  A2,P$(2,2),P$(2,3EP
)@@G@@),P$(2,4)   @F@@@@ DO P$(2)>0 , LXI   14,+(E$AD0 2,1 15) . LXI[,XU]  A2,EQ
)@@G@@P$(2,1)     @D@@@@J         EQU       P$(0,0)           . TARGET ADDRESSER
)@@G@@@B@@@@ DO J=0 , LMJ       11,FFDECFL$       .   @B@@@@ DO J=1 , LMJ     ES
)@@G@@  11,FFDECF$        .   @B@@@@ DO J=2 , LMJ       11,FFDECFZ$       .   ET
)@@G@@@B@@@@ DO J=3 , LMJ       11,FFDECV$        .   @B@@@@          END     EU
)@@G@@                    .   @[@@@@.     @[@@@@.     @^@@@@P$        PROC    EV
)@@G@@  *1  @H@@@@F$FLS1*   NAME      FFLS1$            . SINGLE PRECISION SCIEW
)@@G@@ENTIFIC FORMAT    @H@@@@F$FLG1*   NAME      FFLG1$            . SINGLE PEX
)@@G@@RECISION GENERALIZED FORMAT   @H@@@@F$FLF1*   NAME      FFLF1$          EY
)@@G@@  . SINGLE PRECISION FIXED POINT FORMAT   @E@@@@P$(9)     EQU       1   EZ
)@@G@@              . INSTRUCTION FLAG    @H@@@@F$FLS2*   NAME      FFLS2$    FA
)@@G@@        . DOUBLE PRECISION SCIENTIFIC FORMAT    @H@@@@F$FLG2*   NAME    FB
)@@G@@  FFLG2$            . DOUBLE PRECISION GENERALIZED FORMAT   @H@@@@F$FLF2FC
)@@G@@*   NAME      FFLF2$            . DOUBLE PRECISION FIXED POINT FORMAT   FD
)@@G@@@G@@@@ DO P$(9)=0 , DO P$(1)>1 , DL 13,+(E$AD 1,2) . DL    A1,P$(1,2),P$FE
)@@G@@(1,3) @I@@@@ DO P$(9)=1 , DO P$(1)>1 , LA 13,+(E$AD 1,2) . LA    A1,P$(1FF
)@@G@@,2),P$(1,3),P$(1,4)     @E@@@@ DO P$(1)>0 , LA    12,+(E$AD0 1,1 15) . LFG
)@@G@@A[,XU]  A0,P$(1,1)@B@@@@          LMJ       11,P$(0,0)        .   @#@@@@FH
)@@G@@          END     @[@@@@.     @[@@@@.     @^@@@@P$        PROC      *1  FI
)@@G@@@F@@@@F$TIME*   NAME      FTIME$            . EDIT A TIME (HH:MM:SS)    FJ
)@@G@@@F@@@@F$DAY1*   NAME      FDAY1$            . EDIT A DATE (MM/DD/YY)    FK
)@@G@@@F@@@@F$DAY2*   NAME      FDAY2$            . EDIT A DATE (DD MMM YY)   FL
)@@G@@@G@@@@F$DAY3*   NAME      FDAY3$            . EDIT A DATE (MONTH DD, YEAFM
)@@G@@R)    @F@@@@F$DAY4*   NAME      FDAY4$            . EDIT A DATE (YYYYMMDFN
)@@G@@D)    @E@@@@F$DAY5*   NAME      FDAY5$            . EDIT A DATE (YYMMDD)FO
)@@G@@@F@@@@F$WDAY1*  NAME      FWDAY1$           . EDIT A 3 CHAR WEEKDAY     FP
)@@G@@@F@@@@F$WDAY2*  NAME      FWDAY2$           . EDIT A FULL WEEKDAY NAME  FQ
)@@G@@@H@@@@ DO P$(1)>0 , LA    12,+(E$AD 1,1)    . LA[,XU]  A0,P$(1,1),P$(1,2FR
)@@G@@),P$(1,3)   @B@@@@          LMJ       11,P$(0,0)        .   @#@@@@      FS
)@@G@@    END     @[@@@@.     @[@@@@.     @^@@@@P$        PROC      *0,2@G@@@@FT
)@@G@@F$TD*     NAME      FTIME$            . EDIT CURRENT TIME (HH:MM:SS)    FU
)@@G@@@G@@@@F$DAT1*   NAME      FDAY1$            . EDIT CURRENT DATE (MM/DD/YFV
)@@G@@Y)    @G@@@@F$DAT2*   NAME      FDAY2$            . EDIT CURRENT DATE (DFW
)@@G@@D MMM YY)   @H@@@@F$DAT3*   NAME      FDAY3$            . EDIT CURRENT DFX
)@@G@@ATE (MONTH DD, YEAR)    @G@@@@F$DAT4*   NAME      FDAY4$            . EDFY
)@@G@@IT CURRENT DATE (YYYYMMDD)    @F@@@@F$DAT5*   NAME      FDAY5$          FZ
)@@G@@  . EDIT CURRENT DATE (YYMMDD)@F@@@@F$WDAT1*  NAME      FWDAY1$         GA
)@@G@@  . EDIT A 3 CHAR WEEKDAY NAME@F@@@@F$WDAT2*  NAME      FWDAY2$         GB
)@@G@@  . EDIT A FULL WEEKDAY NAME  @ @@@@          ER        TDATE$    @B@@@@GC
)@@G@@          LMJ       11,P$(0,0)        .   @#@@@@          END     ___   GD
)@@G@@*[S@@@*SDFF*@ @@@@          INCLUDE   'AVL$DEF' @#@@@@          FUNC$   GE
)@@G@@@[@@@@.     @B@@@@. AVL TREE MAINTENAINCE SUBROUTINE PACKAGE@[@@@@.     GF
)@@G@@@G@@@@. DESIGNED AND IMPLEMENTED BY  ALAN K. STEBBENS, UOMCSC SYSTEMS STGG
)@@G@@AFF.  @[@@@@.     @[@@@@.     @A@@@@. MASM PROCS TO CALL AVL$ ROUTINES  GH
)@@G@@@[@@@@.     @#@@@@          $DEF    @[@@@@.     @C@@@@. THIS PROC IS ONLGI
)@@G@@Y DEFINED FOR PROC TABLES.    @[@@@@.     @^@@@@P         PROC      *0  GJ
)@@G@@@#@@@@AVL$PROCS* NAME   @#@@@@AVL$P*    NAME    @A@@@@          $INCLUDEGK
)@@G@@  'AVL$PROCS'     @#@@@@          END     @[@@@@.     @[@@@@.     @^@@@@GL
)@@G@@          $LEVEL    ,1  @[@@@@.     @F@@@@.         <PROC>    <PACKET>  GM
)@@G@@<KEYLEN/RANK>,<KEYADDR/NODEADDR>    @[@@@@.     @^@@@@P         PROC    GN
)@@G@@  *2  @ @@@@AVLIK*    NAME      'AVLIK'   @ @@@@AVLIR*    NAME      'AVLGO
)@@G@@IR'   @ @@@@AVLSK*    NAME      'AVLSK'   @ @@@@AVLDK*    NAME      'AVLGP
)@@G@@DK'   @[@@@@.     @#@@@@          FUNC$   @B@@@@          DO P(2)>1 , LAGQ
)@@G@@   13,AF(P(2),*2) @B@@@@          DO P(2)>0 , LXI  13,AF(P(2),1,1)@B@@@@GR
)@@G@@          DO P(1)>0 , LA   12,AF(P(1),*1) @A@@@@          LMJ       11,[GS
)@@G@@P(0,0)]     @#@@@@          END     @[@@@@.     @C@@@@.         <PROC>  GT
)@@G@@  <PACKET>  <RANK/NODEADDR>   @[@@@@.     @^@@@@P         PROC      *2  GU
)@@G@@@ @@@@AVLSR*    NAME      'AVLSR'   @ @@@@AVLDR*    NAME      'AVLDR'   GV
)@@G@@@ @@@@AVLDN*    NAME      'AVLDN'   @ @@@@AVLCR*    NAME      'AVLCR'   GW
)@@G@@@#@@@@          FUNC$   @B@@@@          DO P(2)>0 , LA   13,AF(P(2),1)  GX
)@@G@@@B@@@@          DO P(1)>0 , LA   12,AF(P(1),*1) @A@@@@          LMJ     GY
)@@G@@  11,[P(0,0)]     @#@@@@          END     @[@@@@.     @ @@@@.         AVGZ
)@@G@@LDSP    <PACKET>  @[@@@@.     @^@@@@P         PROC      *1  @#@@@@AVLDSPHA
)@@G@@*   NAME    @#@@@@          FUNC$   @B@@@@          DO P(1)>0 , LA 12,AFHB
)@@G@@(P(1),*1)   @ @@@@          LMJ       11,AVLDSP @#@@@@          END     HC
)@@G@@@[@@@@.     @H@@@@.         AVLDSPKT  <INDENT>,<BRCOLN>,<LINES>  <ROOT> HD
)@@G@@  <EDITRTN>,<OUTRTN>    @[@@@@.     @^@@@@P         PROC      3,2 @#@@@@HE
)@@G@@AVLDSPKT* NAME    @E@@@@          $GFORM    6,P(1,1),6,P(1,2),6,P(1,3),1HF
)@@G@@8,P(2,1)    @A@@@@          *         P(3,1),P(3,2)   @#@@@@          ENHG
)@@G@@D     @^@@@@. DEFINE TRAVERSAL TYPES@[@@@@.     @#@@@@          DEF     HH
)@@G@@@ @@@@PREORDER     EQU    0*/12+0100@ @@@@INORDER      EQU    1*/12+0100HI
)@@G@@@ @@@@POSTORDER    EQU    2*/12+0100@ @@@@REVPREORDER  EQU    3*/12+0100HJ
)@@G@@@ @@@@REVINORDER   EQU    4*/12+0100@ @@@@REVPOSTORDER EQU    5*/12+0100HK
)@@G@@@[@@@@.     @E@@@@.         AVLTRA    <A0-PARAMETER> <END-OF-TRAVERSAL EHL
)@@G@@XIT>  @[@@@@.     @^@@@@P         PROC      *2  @#@@@@AVLTRA*   NAME    HM
)@@G@@@#@@@@          FUNC$   @B@@@@          DO P(1)>0 , LA 12,AF(P(1),1)    HN
)@@G@@@ @@@@          LMJ       11,AVLTRA @A@@@@          DO P(2)>0 , J AF(P(2HO
)@@G@@),1)  @#@@@@          END     @[@@@@.     @^@@@@.         AVL$STATCLR   HP
)@@G@@@[@@@@.     @ @@@@P         PROC      0,STATS   @A@@@@AVL$STATCLR* NAME HQ
)@@G@@  'AVL$STATCLR'   @A@@@@AVL$STATS* NAME     'AVL$STATS'     @ @@@@%1:   HR
)@@G@@    $IF       STATS     @A@@@@          LMJ       11,[P(0,0)]     @#@@@@HS
)@@G@@%1:       $ENDF   @#@@@@          END     @[@@@@.     @D@@@@.         AVHT
)@@G@@L$FIELDS                  <UFIELD>,<XREG> @[@@@@.     @^@@@@P         PRHU
)@@G@@OC      *1  @#@@@@AVL$FIELDS* NAME  @^@@@@          $LEVEL    ,1  @D@@@@HV
)@@G@@AVLPKT    EQUF      P(1,1),P(1,2)     . PACKET ADDRESS@F@@@@AVLRKF    EQHW
)@@G@@UF      AVLPKT,,S2        . RANK/KEY INSERTION FLAG   @D@@@@AVLKS     EQHX
)@@G@@UF      AVLPKT,,S3        . GLOBAL KEYSIZE@E@@@@AVLROOT   EQUF      AVLPHY
)@@G@@KT,,H2        . ROOT ADDRESS OF TREE@E@@@@AVLCEX    EQUF      AVLPKT+1  HZ
)@@G@@        . COMPARISON EXTENSION@E@@@@AVLNN     EQUF      AVLPKT+2,,H1    IA
)@@G@@  . NUMBER OF NODES     @G@@@@AVLKCR    EQUF      AVLPKT+2,,H2      . KEIB
)@@G@@Y COMPARISON ROUTINE ADDRESS  @E@@@@AVLPKL    EQU       3               IC
)@@G@@  . AVL PACKET LENGTH   @F@@@@          END                         . ENID
)@@G@@D OF AVLFIELDS PROC     @[@@@@.     @F@@@@.         AVL$PKT   <ROOT>[,<NIE
)@@G@@NODES>] <KEYSPEC>,<KEY COMPARATOR>  @[@@@@.     @C@@@@. <KEYSPEC> ::= <KIF
)@@G@@EY SIZE> ! <STRING EXTENSION> @[@@@@.     @^@@@@P         PROC      *2  IG
)@@G@@@#@@@@AVL$PKT*  NAME    @F@@@@RKI       EQU       P(2)>0            . =1IH
)@@G@@ FOR KEYS, 0 FOR RANKS  @D@@@@SIZ       EQU       RKI->$TSTR(P(2,1))->0!II
)@@G@@P(2,1)!0    @C@@@@CEX       EQU       $TSTR(P(2,1))->P(2,1)!0     @A@@@@IJ
)@@G@@NN        EQU       P(1)>1->P(1,2)!0@D@@@@          $GFORM    6,0,6,RKI,IK
)@@G@@6,SIZ,18,P(1,1),36,CEX  @H@@@@          $GFORM    18,NN,18,P(2)>1->P(2,2IL
)@@G@@)!AVL$KTEST[0<=SIZ<9->$CD(SIZ)]     @E@@@@          END                 IM
)@@G@@        . OF AVL$PKT PROC     @[@@@@.     @^@@@@P         PROC      *1  IN
)@@G@@@C@@@@. PROC TO DEFINE FIELDS IN AN AVL$ TREE NODE    @#@@@@AVL$NODES* NIO
)@@G@@AME   @^@@@@          $LEVEL    ,1  @D@@@@AVLNODE   EQUF      P(1,1),P(1IP
)@@G@@,2)     . NODE ADDRESS  @D@@@@AVLLFL    EQUF      AVLNODE,,H1       . LEIQ
)@@G@@FT LINK     @D@@@@AVLRTL    EQUF      AVLNODE,,H2       . RIGHT LINK    IR
)@@G@@@C@@@@AVLUPL    EQUF      AVLNODE+1,,H1     . UP LINK @C@@@@AVLKSZ    EQIS
)@@G@@UF      AVLNODE+1,,S4     . KEY SIZE@D@@@@AVLBAL    EQUF      AVLNODE+1,IT
)@@G@@,S5     . BALANCE FACTOR@E@@@@AVLFS     EQUF      AVLNODE+1,,S6     . FRIU
)@@G@@EE SIXTH WORD     @C@@@@AVLRNK    EQUF      AVLNODE+2,,H1     . RANK    IV
)@@G@@@D@@@@AVLFH     EQUF      AVLNODE+2,,H2     . FREE HALF WORD@D@@@@AVLKEYIW
)@@G@@    EQUF      AVLNODE+3         . KEY FIELD     @F@@@@AVLNHL    EQU     IX
)@@G@@  3                 . AVL NODE HEADER LENGTH    @D@@@@          END     IY
)@@G@@                    . OF AVLNODE DEF@[@@@@/.    @E@@@@. PROCS TO PROVIDEIZ
)@@G@@ FOR STATIC INITIALIZATION OF AVL$ TREES. @[@@@@.     @A@@@@. PROC TO BUJA
)@@G@@ILD THE AVL$ PACKET:    @[@@@@.     @C@@@@.         AVL$TREE  <KEYSPEC>,JB
)@@G@@<KEY COMPARATOR>  @[@@@@.     @I@@@@. THIS PROC ESTABLISHES THE PACKET NJC
)@@G@@ECESSARY TO CALL THE AVL$ ROUTINES. IT ALSO     @H@@@@. SETS UP ASSEMBLYJD
)@@G@@ PARAMETERS WHICH THE NODE INITIALIZATION ROUTINES USE.     @H@@@@. (THEJE
)@@G@@ PROC AVL$FIELDS MAY BE USED TO DEFINE THE FIELDS WITHIN THE PACKET).   JF
)@@G@@@[@@@@.     @E@@@@. <KEYSPEC> MAY TAKE TWO FORMATS: <FILLER WORD> OR <KEJG
)@@G@@YSIZE>@G@@@@. <FILLER WORD> IS THE WORD WITH WHICH SHORTER KEYS WILL BE JH
)@@G@@PADDED IN   @H@@@@. MAKING COMPARISONS, AND INDICATES VARIABLE LENGTH KEJI
)@@G@@YS. TO BE RECOGNIZED,   @A@@@@. <FILLER WORD> MUST BE TYPE STRING.@[@@@@JJ
)@@G@@.     @G@@@@. <KEY COMPARATOR>, OPTIONAL, IS THE ADDRESS OF A USER SUPPLJK
)@@G@@IED KEY     @G@@@@. COMPARISON ROUTINE. IF NOT GIVEN, A DEFAULT SUBROUTIJL
)@@G@@NE WILL BE USED   @C@@@@. WHICH WILL COMPARE THE KEYS ALPHABETICALLY.   JM
)@@G@@@[@@@@.     @G@@@@. <KEYSIZE>  INDICATES A FIXED SIZE KEY OF <KEYSIZE> NJN
)@@G@@UMBER OF WORDS.   @[@@@@.     @H@@@@. IF ANY SPECIFICATION APPEARS ON THJO
)@@G@@E PROC CALL, THEN THE TREE WILL BE BUILT  @H@@@@. USING STRING KEY INSERJP
)@@G@@TIONS AND NO POSITIONAL INSERTIONS WILL BE ALLOWED.   @I@@@@. SIMILARLY,JQ
)@@G@@ IF NO SPECIFICATION APPEARS, THEN THE TREE WILL BE BUILT USING RANK    JR
)@@G@@@E@@@@. INSERTIONS AND NO STRING KEY INSERTIONS WILL BE ALLOWED.  @[@@@@JS
)@@G@@.     @H@@@@. ANY NUMBER OF TREES MAY BE INITIALIZED WITHIN A GIVEN ASSEJT
)@@G@@MBLY, AS LONG AS  @H@@@@. THE NODE INITIALIZATIONS FOR A GIVEN TREE OCCUJU
)@@G@@R BEFORE THE NEXT CALL TO     @]@@@@. AVL$TREE. @[@@@@.     @[@@@@.     JV
)@@G@@@^@@@@. TO INITIALIZE NODES:  @[@@@@.     @D@@@@.         AVL$INIT   <INJW
)@@G@@SERTION SPEC>,<USER INFO>  ...@[@@@@.     @H@@@@. AVL$INIT BUILDS NODES JX
)@@G@@OF AT LEAST THREE WORDS, PROPERLY LINKED INTO THE     @G@@@@. BALANCED AJY
)@@G@@VL TREE ESTABLISHED BY THE MOST RECENT CALL TO AVL$TREE.    @[@@@@.     JZ
)@@G@@@I@@@@. <INSERTION PARAMETER> IS EITHER A STRING KEY OR A NUMERIC POSITIKA
)@@G@@ON, DEPENDING     @B@@@@. UPON WHICH TYPE OF TREE IS BEING BUILT. @[@@@@KB
)@@G@@.     @H@@@@. WHEN THE PARAMETER IS A STRING KEY, THEN THE KEY WILL ALSOKC
)@@G@@ BE GENERATED IN  @G@@@@. THE NODE AFTER THE THREE WORDS OF HEADER, AND KD
)@@G@@WILL BE MAX(<KEYSIZE>,  @F@@@@. $SL(<KEY>)//($IBITS(<KEY>)**0100->4!6)) KE
)@@G@@WORDS LONG, L.J.S.F.    @[@@@@.     @I@@@@. AVL$INIT IS DYNAMICALLY NESTKF
)@@G@@ABLE (CALLABLE FROM WITHIN OTHER PROCS) SO A USER     @H@@@@. MAY WRITE KG
)@@G@@HIS OWN PROCS TO PROVIDE DATA INITIALIZATION CAPABILITIES AFTER OR@B@@@@KH
)@@G@@. BEFORE THE NODE GENERATED BY AVL$NODE.  @[@@@@.     @H@@@@. <USER INFOKI
)@@G@@> IS ANY 18 BIT VALUE TO BE PLACED IN H2 OF THE THIRD WORD OF THE @I@@@@KJ
)@@G@@. NODE. FOR EXAMPLE, IT MAY BE A DESCRIPTOR ADDRESS FOR THE SYMBOL IN THKK
)@@G@@E NODE.     @[@@@@.     @G@@@@. EXAMPLE:   TO INITIALIZE AN AVL TREE WITKL
)@@G@@H 3 WORD KEYS, IN ASCII, WITH @G@@@@. THE FOLLOWING SYMBOLS: A, AN, THE,KM
)@@G@@ OR, BUT, AND, INCLUDING, WITH,     @G@@@@. ASSOCIATED WITH THE FOLLOWINKN
)@@G@@G VALUES, RESPECTIVELY: 1,2,3,4,5,6,7,8.  @[@@@@.     @#@@@@.         ASKO
)@@G@@CII   @^@@@@. AVLPKT  AVL$TREE 3    @E@@@@.         AVL$INIT  'A',1 'AN'KP
)@@G@@,2 'THE',3 'OR',4 'BUT',5 ;   @D@@@@.                   'AND',6 'INCLUDIKQ
)@@G@@NG',7 'WITH',8 .  @[@@@@/.    @[@@@@.     @B@@@@. AVL$TREE  [<FILLER CHAKR
)@@G@@R>!<KEYSIZE>]     @[@@@@.     @#@@@@          DEF     @H@@@@AVL$$PF   EQKS
)@@G@@U       0                 . CLEAR COUNTER WHEN PASS BECOMES THIS  @[@@@@KT
)@@G@@.     @^@@@@P         PROC      *1  @#@@@@AVL$TREE* NAME    @ @@@@      KU
)@@G@@    $LEVEL    ,$LEV-1   @F@@@@          DO $LP=AVL$$PF ,AVL$$K $EQU 0 . KV
)@@G@@START THE COUNTER OVER  @F@@@@          DO $LP=AVL$$PF ,AVL$$PF $EQU \$LKW
)@@G@@P . DON'T DO IT AGAIN   @E@@@@AVL$$K   $EQU       AVL$$K+1          . BUKX
)@@G@@MP TREE COUNTER   @#@@@@          $LEVEL  @D@@@@T         EQU       AVL$KY
)@@G@@$K            . TAKE SHORTHAND@D@@@@          IF        $LP             KZ
)@@G@@  . GEN TIME?     @E@@@@ROOT      EQU       AVL$$AD(T,AVL$$RT(T)) . GET LA
)@@G@@ROOT ADDR   @E@@@@NN        EQU       AVL$$AD(T)        . GET TOTAL # OFLB
)@@G@@ NODES@F@@@@          DO P(1)>0 , AVL$PKT ROOT,NN P(1,1)[P(1)>1->',P(1,2LC
)@@G@@)']   @B@@@@          DO P(1)=0 , AVL$PKT ROOT,NN     @C@@@@          1-LD
)@@G@@>END                      . QUIT    @F@@@@          ENDF                LE
)@@G@@        . ONLY PASS 1 GETS PAST HERE@ @@@@          $LEVEL    ,$LEV-1   LF
)@@G@@@D@@@@AVL$$KF(T) $EQU     P(1)>0            . SET KEYS-FLAG @D@@@@AVL$$KLG
)@@G@@S(T) $EQU     $TSTR(P(1,1))->0!P(1,1) . KEY SIZE@E@@@@AVL$$RT(T) $EQU   LH
)@@G@@  0                 . INITIALIZE ROOT NODE@F@@@@AVL$$GF(T) $EQU     $NODLI
)@@G@@E             . INITIALIZE GEN FLAG LIST  @G@@@@AVL$$AD(T) $EQU     $NODLJ
)@@G@@E             . INITIALIZE NODE ADDRESS LIST    @F@@@@AVL$$KEY(T) $EQU  LK
)@@G@@  $NODE             . INITIALIZE SYMBOL TREE    @F@@@@AVL$$LK(T) $EQU   LL
)@@G@@  $NODE             . INITIALIZE LINKS LIST     @E@@@@AVL$$RK(T) $EQU   LM
)@@G@@  $NODE             . INITIALIZE RANK LIST@G@@@@AVL$$BF(T) $EQU     $NODLN
)@@G@@E             . INITIALIZE BALANCE FACTOR LIST  @H@@@@AVL$$FW(T) $EQU   LO
)@@G@@  $TSTR(P(1,1))->P(1,1)!0 . SET FILLER WORD FOR THE TREE    @F@@@@      LP
)@@G@@    RES       3                 . SAVE THE SPACE IN PACKET  @E@@@@      LQ
)@@G@@    END                         . TREE IS READY TO GO @[@@@@/.    @C@@@@LR
)@@G@@. AVL$INIT   <INSERTION PARAMETER>,<USER INFO>  @[@@@@.     @^@@@@P$    LS
)@@G@@    PROC      *511@#@@@@AVL$INIT* NAME    @E@@@@T         EQU       AVL$LT
)@@G@@$K            . GET TREE COUNTER    @ @@@@I         $REPEAT   1,P$-1    LU
)@@G@@@ @@@@P         EQU       P$(I)     @D@@@@          $IF       AVL$$KF(T)LV
)@@G@@        . IS ARG A KEY? @D@@@@KEY       EQU       $CS(P(1)R)      . YES,LW
)@@G@@ GRAB IT    @E@@@@ASF       EQU       \\$IBITS(KEY)**0100 . ASCII STRINGLX
)@@G@@ FLAG @E@@@@CS        EQU       ASF->4!6          . # CHARS PER WORD    LY
)@@G@@@G@@@@RKS       EQU       $SL(KEY)//CS      . SET NUMBER OF WORDS IN STRLZ
)@@G@@ING   @H@@@@KEY       EQU $C[ASF->'A'!'F']S(KEY:$SR($SS(AVL$$FW(T),1,1),MA
)@@G@@CS*RKS-$SL(KEY))) @F@@@@KS        EQU       AVL$$KS(T)->AVL$$KS(T)!RKS .MB
)@@G@@ SET GEN KEY SIZE @D@@@@          $ELSE                       . ITS RANKMC
)@@G@@ TIME @D@@@@RNK       EQU       +P(1)           . GET THE RANK    @E@@@@MD
)@@G@@KS        EQU       0                 . FOR OUTPUT GENERATOR@#@@@@      ME
)@@G@@    $ENDF   @D@@@@          AVL$SRCH                    . FIND THE NODE MF
)@@G@@@G@@@@. A SEARCH HAS JUST BEEN MADE FOR A NODE, EITHER BY KEY OR BY RANKMG
)@@G@@.     @B@@@@. THE OUTPUT FROM THE SEARCH ROUTINE IS:  @D@@@@.   K = INDEMH
)@@G@@X TO NODE POSITION, OR ZERO IF NOT FOUND  @ @@@@.  FK = INDEX TO FATHER MI
)@@G@@OF K  @D@@@@.  SL = 1 IF K IS RIGHT LINK OF FK, 2 FOR LEFT LINK.  @^@@@@MJ
)@@G@@.  BN = BALANCE NDDE    @#@@@@.  RN = RANK NODE @[@@@@.     @H@@@@      MK
)@@G@@    $DO $LP->K<>0 , $GO PASS2   . IF LAST PASS AND ITEM IS IN, SKIP     ML
)@@G@@@H@@@@          K>0->$ENDR                   . IF ITEM IS ALREADY IN TREMM
)@@G@@E, QUIT     @G@@@@K         EQU       1+AVL$$AD(T)      . GET NEXT SLOT MN
)@@G@@IN SYMBOL TABLE   @ @@@@          $LEVEL    ,$LEV-1   @D@@@@AVL$$GF(T,K)MO
)@@G@@ $EQU   0                 . CLEAR GEN FLAG@F@@@@AVL$$AD(T,K) $EQU   $   MP
)@@G@@              . INITIALIZE NODE ENTRIES   @E@@@@          DO AVL$$KF(T) MQ
)@@G@@,AVL$$KEY(T,K) $EQU KEY . SAVE KEY  @F@@@@AVL$$LK(T,K,3) $EQU FK        MR
)@@G@@        . SET UP LINK TO FATHER     @D@@@@AVL$$RK(T,K) $EQU   1         MS
)@@G@@        . INITIAL RANK  @F@@@@AVL$$BF(T,K) $EQU   0                 . INMT
)@@G@@ITIAL BALANCE FACTOR    @^@@@@          $IF       FK  @G@@@@AVL$$LK(T,FKMU
)@@G@@,SL) $EQU K               . SET LINK FROM FATHER TO NEW SON @#@@@@      MV
)@@G@@    $ELSE   @F@@@@AVL$$RT(T) $EQU     K                 . NO FATHER, MUSMW
)@@G@@T BE ROOT   @#@@@@          $ENDF   @D@@@@AVL$$LK(T,K,1) $EQU 0         MX
)@@G@@        . RIGHT LINK    @D@@@@AVL$$LK(T,K,2) $EQU 0                 . LEMY
)@@G@@FT LINK     @#@@@@          $LEVEL  @[@@@@.     @G@@@@. NEW NODE IS INITMZ
)@@G@@IALIZED, NOW ADJUST BALANCE FACTORS FROM FATHER TO BN;@B@@@@. AND ADJUSTNA
)@@G@@ RANKS FROM FATHER TO RN.     @[@@@@.     @D@@@@BNSON     EQU       0   NB
)@@G@@              . BN'S    SON   @D@@@@RNKF      EQU       1               NC
)@@G@@  . RANK FLAG     @E@@@@BALF      EQU       1                 . BALANCE ND
)@@G@@FACTOR FLAG @D@@@@X         EQU       K                 . CURRENT NODE  NE
)@@G@@@#@@@@          $REPEAT @D@@@@Y         EQU       AVL$$LK(T,X,3)    . GENF
)@@G@@T UP LINK   @E@@@@          Y=0->$ENDI                  . QUIT IF NO FATNG
)@@G@@HER   @E@@@@          $IF       BALF**(BN=Y)      . ADJUST BALANCE?     NH
)@@G@@@E@@@@BALF      EQU       0                 . CLEAR BALANCE FLAG  @F@@@@NI
)@@G@@BNSON     EQU       X                 . SAVE BALANCE NODE'S SON   @#@@@@NJ
)@@G@@          $ENDF   @ @@@@          $LEVEL    ,$LEV-1   @E@@@@          $INK
)@@G@@F       X=AVL$$LK(T,Y,2)  . IS THIS A LEFT SON? @D@@@@          DO BALF NL
)@@G@@,AVL$$BF(T,Y) $EQU 2 . LEFT HEAVY   @D@@@@          $IF       RNKF      NM
)@@G@@        . ADJUST RANKS? @D@@@@AVL$$RK(T,Y) $EQU   AVL$$RK(T,Y)+1    . YENN
)@@G@@S, BUMP RANK@#@@@@          $LEVEL  @F@@@@          DO Y=RN ,RNKF EQU 0 NO
)@@G@@        . CHECK IF THIS IS RANK NODE@#@@@@          $ENDF   @E@@@@      NP
)@@G@@    $ELSF     BALF              . THIS IS A RIGHT SON @D@@@@AVL$$BF(T,Y)NQ
)@@G@@ $EQU   1                 . RIGHT HEAVY   @#@@@@          $ENDF   @#@@@@NR
)@@G@@          $LEVEL  @E@@@@          BALF=RNKF=0->$ENDI          . QUIT LOONS
)@@G@@P IF NO MORE@E@@@@X         EQU       Y                 . FATHER IS NOW NT
)@@G@@SON   @F@@@@          $ENDR                       . MAIN RANK/BALANCE LONU
)@@G@@OP    @E@@@@          $IF       BNSON             . SON OF BALANCE NODE?NV
)@@G@@@G@@@@A$        EQU       BNSON=AVL$$LK(T,BN,1)->1!2    . ALPHA PARAMETENW
)@@G@@R     @C@@@@NA$       EQU       A$--3             . -ALPHA  @ @@@@      NX
)@@G@@    $LEVEL    ,$LEV-1   @A@@@@          $IF       AVL$$BF(T,BN)=0 @H@@@@NY
)@@G@@AVL$$BF(T,BN)    $EQU A$              . TREE HAS GOTTEN HEAVIER ON ALPHANZ
)@@G@@ SIDE @B@@@@          $ELSF     AVL$$BF(T,BN)<>A$     @G@@@@AVL$$BF(T,BNOA
)@@G@@)    $EQU 0               . TREE HAS GOTTEN MORE BALANCED   @E@@@@      OB
)@@G@@    $ELSE                       . TREE NEEDS BALANCING@#@@@@          $LOC
)@@G@@EVEL  @D@@@@          AVL$BALN                    . FIX THE TREE  @#@@@@OD
)@@G@@          $ENDF   @#@@@@          $LEVEL  @ @@@@          $ENDF     BNSOOE
)@@G@@N     @F@@@@          RES       3                 . BUMP LC FOR LINK WOROF
)@@G@@DS    @F@@@@          DO AVL$$KF(T) , RES KS      . MAKE ROOM FOR THE KEOG
)@@G@@Y     @E@@@@          1->$ENDR                    . ALL DONE FOR PASS1  OH
)@@G@@@#@@@@PASS2     NAME    @F@@@@          AVL$$GF(T,K)->$ENDR         . QUOI
)@@G@@IT IF ALREADY GEN'ED    @F@@@@LL        EQU       AVL$$AD(T,AVL$$LK(T,K,OJ
)@@G@@2)) . SET LEFT LINK     @F@@@@RL        EQU       AVL$$AD(T,AVL$$LK(T,K,OK
)@@G@@1)) . SET RIGHT LINK    @E@@@@UL        EQU       AVL$$AD(T,AVL$$LK(T,K,OL
)@@G@@3)) . SET UP LINK @F@@@@          GFORM     18,LL,18,RL,18,UL,6,KS,6,AVLOM
)@@G@@$$BF(T,K),6,0     @B@@@@          *         AVL$$RK(T,K),P(2)     @ @@@@ON
)@@G@@          $IF       AVL$$KF(T)@D@@@@          *         KEY             OO
)@@G@@  . OUTPUT KEY    @E@@@@          DO KS-RKS , * AVL$$FW(T)    . OUTPUT TOP
)@@G@@RAILERS     @#@@@@          $ENDF   @ @@@@          $LEVEL    ,$LEV-1   OQ
)@@G@@@D@@@@AVL$$GF(T,K) $EQU   1                 . SET GEN FLAG  @#@@@@      OR
)@@G@@    $LEVEL  @#@@@@          $ENDR   @#@@@@          END     @[@@@@/.    OS
)@@G@@@B@@@@. AVL$BALN - PROC TO BALANCE THE TREE     @[@@@@.     @ @@@@. INPUOT
)@@G@@T: A$ - ALPHA PARAMETER @^@@@@.       NA$ - -ALPHA    @ @@@@.     BN    OU
)@@G@@- BALANCE NODE    @[@@@@.     @^@@@@AVL$BALN* PROC      *0  @E@@@@A     OV
)@@G@@    EQU       BN                . COPY BALANCE NODE   @F@@@@B         EQOW
)@@G@@U       AVL$$LK(T,A,AVL$$BF(T,A)) . GET HEAVY SON OF A@F@@@@SR        EQOX
)@@G@@U       \AVL$$BF(T,B)=A$  . SPECIAL ROTATION FLAG     @B@@@@          $IOY
)@@G@@F       AVL$$BF(T,B)->\SR!1   @[@@@@.     @#@@@@. SINGLE ROTATION @[@@@@OZ
)@@G@@.     @ @@@@          $LEVEL    ,$LEV-1   @E@@@@AVL$$LK(T,B,3) $EQU AVL$PA
)@@G@@$LK(T,A,3)    . ULINK(B) <- ULINK(A)@#@@@@          $LEVEL  @D@@@@X     PB
)@@G@@    EQU       AVL$$LK(T,B,NA$)  . LINK(-ALPHA,B)@ @@@@          $LEVEL  PC
)@@G@@  ,$LEV-1   @G@@@@AVL$$LK(T,A,A$) $EQU X                . LINK(ALPHA,A) PD
)@@G@@<- LINK(-ALPHA,B) @E@@@@          DO X>0 ,AVL$$LK(T,X,3) $EQU A . ULINK(PE
)@@G@@X) <- A     @D@@@@AVL$$LK(T,A,3) $EQU B                 . ULINK(A) <- B PF
)@@G@@@E@@@@AVL$$LK(T,B,NA$) $EQU A               . LINK(-ALPHA,B) <- A @E@@@@PG
)@@G@@          $IF       SR                . SPECIAL ROTATION    @E@@@@AVL$$BPH
)@@G@@F(T,A) $EQU   A$                . BALFAC(A) <- ALPHA  @E@@@@AVL$$BF(T,B)PI
)@@G@@ $EQU   NA$               . BALFAC(B) <- -ALPHA @#@@@@          $ELSE   PJ
)@@G@@@D@@@@AVL$$BF(T,A) $EQU   0                 . BALFAC(A) <- 0@D@@@@AVL$$BPK
)@@G@@F(T,B) $EQU   0                 . BALFAC(B) <- 0@#@@@@          $ENDF   PL
)@@G@@@^@@@@          $IF       A$=1@G@@@@AVL$$RK(T,B) $EQU AVL$$RK(T,B)+AVL$$PM
)@@G@@RK(T,A) . RANK(B)=RANK(B)+RANK(A)   @#@@@@          $ELSE   @G@@@@AVL$$RPN
)@@G@@K(T,A) $EQU AVL$$RK(T,A)-AVL$$RK(T,B) . RANK(A)=RANK(A)-RANK(B)   @#@@@@PO
)@@G@@          $ENDF   @E@@@@          $ELSE                       . DOUBLE RPP
)@@G@@OTATION     @[@@@@.     @#@@@@. DOUBLE ROTATION @[@@@@.     @E@@@@C     PQ
)@@G@@    EQU       AVL$$LK(T,B,NA$)  . C <- LINK(-ALPHA,B) @ @@@@          $LPR
)@@G@@EVEL    ,$LEV-1   @E@@@@AVL$$LK(T,C,3) $EQU AVL$$LK(T,A,3)    . ULINK(C)PS
)@@G@@ <- ULINK(A)@#@@@@          $LEVEL  @G@@@@X         EQU       AVL$$LK(T,PT
)@@G@@C,A$)   . LINK(-ALPHA,B) <- LINK(ALPHA,C) @ @@@@          $LEVEL    ,$LEPU
)@@G@@V-1   @^@@@@AVL$$LK(T,B,NA$) $EQU X @E@@@@          DO X>0 ,AVL$$LK(T,X,PV
)@@G@@3) $EQU B . ULINK(X) <- B     @E@@@@AVL$$LK(T,C,A$) $EQU B              PW
)@@G@@  . LINK(ALPHA,C) <- B  @D@@@@AVL$$LK(T,B,3) $EQU C                 . ULPX
)@@G@@INK(B) <- C @#@@@@          $LEVEL  @G@@@@X         EQU       AVL$$LK(T,PY
)@@G@@C,NA$)  . LINK(ALPHA,A) <- LINK(-ALPHA,C) @ @@@@          $LEVEL    ,$LEPZ
)@@G@@V-1   @^@@@@AVL$$LK(T,A,A$) $EQU X  @E@@@@          DO X>0 ,AVL$$LK(T,X,QA
)@@G@@3) $EQU A . ULINK(X) <- A     @E@@@@AVL$$LK(T,C,NA$) $EQU A             QB
)@@G@@  . LINK(-ALPHA,C) <- A @D@@@@AVL$$LK(T,A,3) $EQU C                 . ULQC
)@@G@@INK(A) <- C @#@@@@          $LEVEL  @D@@@@X         EQU       AVL$$BF(T,QD
)@@G@@C)      . BALFAC(C)     @ @@@@          $LEVEL    ,$LEV-1   @A@@@@AVL$$BQE
)@@G@@F(T,A) $EQU   X=A$->NA$!0     @A@@@@AVL$$BF(T,B) $EQU   X=NA$->A$!0     QF
)@@G@@@^@@@@AVL$$BF(T,C) $EQU   0   @^@@@@          $IF       A$=1@G@@@@AVL$$RQG
)@@G@@K(T,B) $EQU   AVL$$RK(T,B)-AVL$$RK(T,C) . RANK(B)=RANK(B)-RANK(C) @G@@@@QH
)@@G@@AVL$$RK(T,C) $EQU   AVL$$RK(T,C)+AVL$$RK(T,A) . RANK(C)=RANK(C)+RANK(A) QI
)@@G@@@#@@@@          $ELSE   @G@@@@AVL$$RK(T,C) $EQU   AVL$$RK(T,C)+AVL$$RK(TQJ
)@@G@@,B) . RANK(C)=RANK(C)+RANK(B) @G@@@@AVL$$RK(T,A) $EQU   AVL$$RK(T,A)-AVLQK
)@@G@@$$RK(T,C) . RANK(A)=RANK(A)-RANK(C) @#@@@@          $ENDF   @#@@@@      QL
)@@G@@    $LEVEL  @E@@@@B         EQU       C                 . FAKE OUT COMMOQM
)@@G@@N CODE@#@@@@          $ENDF   @#@@@@          $LEVEL  @F@@@@F         EQQN
)@@G@@U       AVL$$LK(T,B,3)    . GET FATHER OF BALANCE NODE@ @@@@          $LQO
)@@G@@EVEL    ,$LEV-1   @D@@@@          $IF       F=0               . NO FATHEQP
)@@G@@R?    @D@@@@AVL$$RT(T) $EQU     B                 . NEW ROOT NODE @#@@@@QQ
)@@G@@          $ELSE   @E@@@@AVL$$LK(T,F,A=AVL$$LK(T,F,1)->1!2) $EQU B . SET QR
)@@G@@LINK TO SON @#@@@@          $ENDF   @C@@@@          END                 QS
)@@G@@        . BALANCED@[@@@@/.    @ @@@@. AVL$SRCH - SEARCH FOR A NODE@[@@@@QT
)@@G@@.     @^@@@@AVL$SRCH* PROC      *0  @E@@@@. IF AVL$$KF(T) IS SET, KEY MUQU
)@@G@@ST HAVE STRING TO SEARCH ON;  @E@@@@. IF AVL$$RF(T) IS SET, RANK MUST HAQV
)@@G@@VE RANK TO SEARCH ON.   @]@@@@. OUTPUT:   @D@@@@. K = INDEX OF NODE IN TQW
)@@G@@REE, ELSE ZERO IF NOT FOUND   @#@@@@. FK = FATHER OF K@D@@@@. SL = 1 IF QX
)@@G@@K IS RIGHT LINK OF FK, 2 FOR LEFT LINK.   @^@@@@. BN    = BALANCE NODE  QY
)@@G@@@^@@@@. RN    = RANK NODE     @[@@@@.     @ @@@@K*        EQU       AVL$QZ
)@@G@@$RT(T)@^@@@@FK*       EQU       0   @E@@@@RTN       EQU       $L1('AVL$CRA
)@@G@@MPK','AVL$CMPR')(2-AVL$$KF(T))@^@@@@BN*       EQU       K   @^@@@@RN*   RB
)@@G@@    EQU       0   @^@@@@SL*       EQU       0   @#@@@@          $REPEAT RC
)@@G@@@^@@@@          K=0->$ENDI    @#@@@@          [RTN]   @C@@@@          $IRD
)@@G@@F       CMP=1             . EQUAL   @H@@@@          $LP++AVL$$KF(T)->$ENRE
)@@G@@DI      . LOOKING FOR KEYS OR LAST PASS, QUIT   @#@@@@          $ELSE   RF
)@@G@@@E@@@@          DO AVL$$BF(T,K)>0 ,BN* EQU K . SAVE BALANCE NODE  @E@@@@RG
)@@G@@FK*       EQU       K                 . SON IS NOW FATHER   @D@@@@      RH
)@@G@@    $IF       CMP=3             . GREATER THAN  @E@@@@K*        EQU     RI
)@@G@@  AVL$$LK(T,K,1)    . GO TO RIGHT SON     @F@@@@SL*       EQU       1   RJ
)@@G@@              . SON LINK IS 1 FOR RIGHT   @D@@@@          $ELSE         RK
)@@G@@              . LESS THAN     @E@@@@          DO RN=0 ,RN* EQU K        RL
)@@G@@  . THIS IS RANK NODE   @F@@@@SL*       EQU       2                 . SORM
)@@G@@N LINK IS 2 FOR LEFT    @E@@@@K*        EQU       AVL$$LK(T,K,2)    . GORN
)@@G@@ DOWN TO LEFT SON @#@@@@          $ENDF   @#@@@@          $ENDF   @#@@@@RO
)@@G@@          $ENDR   @#@@@@          END     @[@@@@.     @ @@@@. AVL$CMPR -RP
)@@G@@ COMPARE RANKS    @ @@@@. AVL$CMPK - COMPARE KEYS     @[@@@@.     @^@@@@RQ
)@@G@@AVL$CMPR* PROC      *0  @F@@@@CMP*      EQU       RNK=AVL$$RK(T,K)->1!RNRR
)@@G@@K<AVL$$RK(T,K)->2!3     @^@@@@          CMP<3->END    @A@@@@RNK*      EQRS
)@@G@@U       RNK-AVL$$RK(T,K)@#@@@@          END     @^@@@@AVL$CMPK* PROC    RT
)@@G@@  *0  @F@@@@CMP*      EQU       KEY=AVL$$KEY(T,K)->1!KEY<AVL$$KEY(T,K)->RU
)@@G@@2!3   @#@@@@          END     @[@@@@.     @D@@@@          1->END        RV
)@@G@@              . OF DEFINITION _@@@@@RANK(A)=RANK(A)-RANK(C) @#@@@@      RW
)@@G@@    $ENDF   @#@@@@          $LEVEL  @E@@@@B     )@@@+(@@-@]O)]K)[@@@@@@@RX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/K@@@@&'0@@@/K@@@@&'0@@@AA@@@@@@@@@@      RY
)@@G@@                                                                        RZ
)@@G@@@@^@@]@@A@@#@@G@@]@@O@@@@@E@@@@@@@@^EHEXV$      F$          EHEXF$      SA
)@@G@@FHEXF$      @@[@@@@@@@@]FHEXV$      @@[@@@@@@@@@                        SB
)@@G@@              FEDERALLY )@@[](@@-@]O)]K)[EK[*K@>C[^C@K/K@@@@&'0@@@/K@@@@SC
)@@G@@&'0@@@/K@@@@&'0@@@/K@@@@&'0@@@AA@@@@)@C@+(@E-@]O)AK)[@@@@@@@@@@@@@@@@@@@SD
)@@G@@@@@@@@@@@@@@@@@@@@/K@@@@&'0@@@/K@@@@&'0@@@AB@@@@@@^@@]@@A@@B@@O@@A@@?@@@SE
)@@G@@@@E@@@@@@@@GEFORMC$     F$          EFORM$      EFDECFZ$    EFDECFL$    SF
)@@G@@EFDECV$     EFDECF$     FFDECFL$    @@[@@@@@@@@AFFDECFZ$    @@[@@@@@@@@^SG
)@@G@@FFDECF$     @@[@@@@@@@@EFFDECV$     @@[@@@@@@@@CFFORMC$     @@[@@@@@@@@@SH
)@@G@@FFORM$      @@[@@@@@@@@]      @@?@@?022001003   50000000PART TIME       SI
)@@G@@        000000108774DEDI)@@@+(@@-@]O)]K)#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SJ
)@@G@@@@@@@@/K@@@@&'0@@@/K@@@@&'0@@@AA@@@@@@@@@@                              SK
)@@G@@                                                @@^@@]@@A@@^@@I@@]@@Q@@@SL
)@@G@@@@E@@@@@@@@^EPRTG$      F$          ECSF$       FA0$        FCSF$       SM
)@@G@@@@[@@@@@@@@]FPRT$       @@[@@@@@@@@@                                FEDESN
)@@G@@)@@[](@@-@]O)]K)[EK[*K@>C[^C@K/K@@@@&'0@@@/K@@@@&'0@@@/K@@@@&'0@@@/K@@@@SO
)@@G@@&'0@@@AA@@@@)@C@+(@E-@]O)AK)[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/K@@@@SP
)@@G@@&'0@@@/K@@@@&'0@@@AB@@@@@@^@@]@@A@@B@@O@@A@@?@@@@@E@@@@@@@@GEFLS1$      SQ
)@@G@@F$          EFLS2$      EFLG1$      EFLG2$      EFLF1$      EFLF2$      SR
)@@G@@FFLF1$      @@[@@@@@@@@CFFLF2$      @@[@@@@@@@@EFFLG1$      @@[@@@@@@@@^SS
)@@G@@FFLG2$      @@[@@@@@@@@AFFLS1$      @@[@@@@@@@@@FFLS2$      @@[@@@@@@@@]ST
)@@G@@ @F#0^@@@@@MHISTORY-OUT #@[ C]@@@@^4 @F S^@@@@@OREPORT-TAPE #@[A0]@@@@^2SU
)@@G@@)@@[](@@-@]O)]K)[EK[*K@>C[^C@K/K@@@@&'0@@@/K@@@@&'0@@@/K@@@@&'0@@@/K@@@@SV
)@@G@@&'0@@@AA@@@@)@C@+(@E-@]O)AK)[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/K@@@@SW
)@@G@@&'0@@@/K@@@@&'0@@@AB@@@@@@^@@]@@A@@B@@O@@C@@4@@@@@E@@@@@@@@GEOCTV$      SX
)@@G@@F$          EOCTF$      EDECV$      EDECF$      EDECFL$     EDECFZ$     SY
)@@G@@FDCFL$      @@[@@@@@@@@CFDCFZ$      @@[@@@@@@@@EFDECFL$     @@[@@@@@@@@CSZ
)@@G@@FDECFZ$     @@[@@@@@@@@EFDECF$      @@[@@@@@@@@AFDECV$      @@[@@@@@@@@^TA
)@@G@@FOCTF$      @@[@@@@@@@@]FOCTV$      @@[@@@@@@@@@HISTORY-OUT-COUNT )@@@@@TB
)@@G@@)@@@2(@@-@]O)]K)[EK[*K]@@@@@@@@@@@@@@@@@@@/K@@@@&'0@@@/K@@@@&'0@@@/K@@@@TC
)@@G@@&'0@@@AA@@@@@@@@@@@@@@@] @F#0^@@@@@MHISTORY-OUT #@[ C]@@@@^4 @F S^@@@@@OTD
)@@G@@REPORT-TAPE #@[A0]@@@@^2@@^@@]@@A@@ @@K@@#@@W@@@@@E@@@@@@@@AECOL$       TE
)@@G@@F$          ESKIP$      ECOLN$      FA0$        FCOLN$      @@[@@@@@@@@^TF
)@@G@@FCOL$       @@[@@@@@@@@@FSKIP$      @@[@@@@@@@@])@@[](@@-@]O)]K)[EK[*K@>TG
)@@G@@C[^C@K/K@@@@&'0@@@/K@@@@&'0@@@/K@@@@&'0@@@/K@@@@&'0@@@AA@@@@)@C[](@E-@]OTH
)@@G@@)AK)[EK#*K@>C]^C@K/K@@@@&'0@@@/K@@@@&'0@@@/K@@@@&'0@@@/K@@@@&'0@@@AB@@@@TI
)@@G@@@@^@@]@@A@@D@@S@@C@@8@@@@@E@@@@@@@@KETIME$      F$          EDAY1$      TJ
)@@G@@EDAY2$      EDAY3$      EDAY4$      EDAY5$      EWDAY1$     EWDAY2$     TK
)@@G@@FDAY1$      @@[@@@@@@@@]FDAY2$      @@[@@@@@@@@^FDAY3$      @@[@@@@@@@@ATL
)@@G@@FDAY4$      @@[@@@@@@@@CFDAY5$      @@[@@@@@@@@EFTIME$      @@[@@@@@@@@@TM
)@@G@@FWDAY1$     @@[@@@@@@@@GFWDAY2$     @@[@@@@@@@@I)@@[](@@-@]O)]K)[EK[*K] TN
)@@G@@C[OC@K/K@@@@&'0@@@/K@@@@&'0@@@/K@@@@&'0@@@/K@@@@&'0@@@AA@@@@@@@@@@:8KALLTO
)@@G@@/K@@J9%8K@@*:8K@@G/K@@J':8K@@N/K@@J7*4@^[U/K@@J2/,)@CW/,)@/=/K@@J/%8K@@*TP
)@@G@@@@^@@]@@A@@A@@M@@^@@+@@@@@E@@@@@@@@CEMSKP$      F$          EPAD$       TQ
)@@G@@EWRDN$      FA0$        ERASE$      FMSKP$      @@[@@@@@@@@@FPAD$       TR
)@@G@@@@[@@@@@@@@]FRASE$      @@[@@@@@@@@AFWRDN$      @@[@@@@@@@@^!^@^[*/K@@KRTS
)@@G@@AF@^[+/,)[*PRF@^[+RFK^[*&;K@@[R#)@Q.R#0@@I *@^[YC[@^@8H[@^@78^@@KZ/[@@L#TT
)@@G@@!^@^[*RB@^[*P#@@@K/G@@K9[C@^[+C]K^@6R@K@L_R@0@Q.)@@[##@@*C]A@[KK0@K0@K0@TU
)@@G@@@@@@@@9(@@@A9*)@@^9*@@@]Q'0@@NA]0@@[/K@@@ Q'0@@OA]0@@[AA@@@@)@C[##@[#@[#TV
)@@G@@@[#@[#@[]@[#@[#@@@CC0@@[R]0@@F/,0@@@C/@@@GA]0@@F^@0@@E^@)@@D^@K@@CAB@@@@TW
)@@G@@)@K[##@[#@@K0@K0@K)[K0@K0@@@@@9?)@@^9?@@@]/,0@@@[@@@@]C@@@@]/KJ@@@C@)@@^TX
)@@G@@9?@@@]AC@@@@)@S[##@[#@[#@[#@[#@@E]@@@@@@@@/K@@@#&'0@@&/KF@@@R]0@@[N@0@@ETY
)@@G@@N@)@@DN@K@@C9!@@@AAD@@@@)@)[E*C[KK]))CS@]@@@@@@@/K@@@:N8K@@[C@@@@'/K@@@#TZ
)@@G@@&'0@@%/K@@@#&'0@@$/K@@@#&'0@@(AE@@@@)@([N#@@@[]@D@EK[)&'0@@@/K@@@N/,0@@@UA
)@@G@@N?L@@@*@@@[[[?[@@@;C@@@M[^[@@@N8K@@@C@@@@'AF@@@@)@3[F@EK]C[KK[@E]@@@@@@@UB
)@@G@@/K@@@#&'0@@//K@@@N[0[@@@/K@@@#&'0@@8/K@@@#&'0@@@/K@@@#AG@@@@)@/[MK]))@C[UC
)@@G@@KK@@@@/K@@@#&'0@[A/K@@@N[*[@@]C8@@@[*8G@@@/K@@@#&'0@[@/K@@@N[O[@@AAH@@@@UD
)@@G@@)[A[E[@K0@^G@^G@^C[K@@@@'=@@@@*^@@@@ 4@@@@/KF@@@;/@@@@/K@@@N[=[@@]C8@@@[UE
)@@G@@*8G@@@AI@@@@)[J@E@)@@@C@)@G@8*@[+@S@@@@@@&@@@@@@@@@@@@@@@@@@[[@@@@@@@@@@UF
)@@G@@@&-@@T@\@@@@/KF@@@AJ@@@@)@N@0@\@IO)C@@@@@@)@'@C*@@@@@@@@@@@@@@-@@T@@@@@@UG
)@@G@@@@@@@@@@@___@@@@@@@@@@@@@@@@@@AK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@]@@A@@D@@S@@N@[=@@@UI
)@@G@@@@E@@;@@@@[KEDITR$      EDITX$      ECLR$$      ECHAR$      ECLEAR$     UJ
)@@G@@CTS$        E$ASC$      E$DTBL$     E$ASCII$    FASCIN$     @@[@@@@@@@[^UK
)@@G@@FASC$       @@[@@@@@@@@"FA0$        @@[@@@@@@@@@FCHAR$      @@[@@@@@@@@2UL
)@@G@@FCLEAR$     @@[@@@@@@@@4FCLR$       @@[@@@@@@@@4FDTA$       @@[@@@@@@@@+UM
)@@G@@FDTZA$      @@[@@@@@@@@=FDTZ$       @@[@@@@@@@@)FDT$        @@[@@@@@@@@YUN
)@@G@@FLL$        @C@@@@@@@@@-FLOCK$      @@[@@@@@@@[EFL$         @@@@@@@@@@@TUO
)@@G@@FMSGCA$     @@[@@@@@@@@'FMSGC$      @@[@@@@@@@@6FP$         @@@@@@@@@@@GUP
)@@G@@FUNLOCK$    @@[@@@@@@@[GF$          @@[@@@@@@@@#F$A0        @@@@@@@@@@@]UQ
)@@G@@@@@@@@@@@@@@L^W2U*@@@@@@L=KYZSLPO:?8@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UR
)@@G@@*MASM*[@^B'K#@@@@@A6    K @@@M[@^B/@#@@@@@A10   K @@@Q[@^B9/#@@B'KW     US
)@@G@@K @@@@[@^B;C#@@@@@A5    K @@@L[@^B9S#@@@@@R9    K @@[D[@^B;K#@@@@@X8    UT
)@@G@@K @@@C[@^B9@#@@@@@R11   K @@[F[@^B'C#@@@@@X2    K @@@][@^B'0#@@B9@A8    UU
)@@G@@K @@@O[@^B'W#@@B'CR3    K @@[#[@^B'/#@@@@@A13   K @@@T[@^B.P#@@@@@R6    UV
)@@G@@K @@[A[@^B;8#@@@@@X1    K @@@[[@^B8;#@@@@@J2    K @@[CC)D@@@[@]B8;@@@K@BUW
)@@G@@K@D@@@[@ B;GD@@@@@TYPE  @@]@^!@@6@^![@^B90#@@@@@R10   K @@[E[@^B/8#@@@@@UX
)@@G@@A2    K @@@I[@^B9C#@@B90S3    K @@@F[@^B'8#@@@@@X4    K @@@^[@^B;4#@@B9CUY
)@@G@@R5    K @@[ [@^B/K#@@@@@J1    K @@[B[@^B/S#@@B;4XH2   K @@@#[@^B'=#@@@@@UZ
)@@G@@T2    K @@@A[@^B.^#@@@@@A15   K @@@V[@^B9?#@@@@@S6    K @@@C[@^B'S#@@@@@VA
)@@G@@A1    K @@@H[@^B/O#@@@@@A12   K @@@S[@^B98#@@@@@T1    K @@@B[@^B.@#@@@@@VB
)@@G@@A4    K @@@K[@^B;^#@@B98S5    K @@@D[@^B;S#@@@@@R8    K @@[C[@^B;=#@@@@@VC
)@@G@@R13   K @@[H[@^B')#@@@@@SR1   K @@[#[@^B/*#@@@@@A14   K @@@U[@^B'?#@@B')VD
)@@G@@Q3    K @@@A[@^B.K#@@@@@R2    K @@[][@ B;)#)@B'?TYPE$REP    K @@[@[@^B'*VE
)@@G@@#@@@@@R15   K @@[J[@^B;O#@@@@@R1    K @@[[[@^B.G#@@@@@R12   K @@[G[@^B/4VF
)@@G@@#@@@@@XU    K @@@J[@^B'4#@@@@@S2    K @@@G[@^B9O#@@@@@R4    K @@[^[@^B;0VG
)@@G@@#@@@@@X7    K @@@B[@^B9*#@@@@@J0    K @@[A[@^B/0#@@@@@A0    K @@@G[@^B;WVH
)@@G@@#@@B9*S1    K @@@H[@^B/C#@@@@@R14   K @@[I[@^B//#@@B;WH2    K @@@[[@^B'^VI
)@@G@@#@@@@@S4    K @@@E[@^B;?#@@@@@A7    K @@@N[@^B.C#@@@@@SR3   K @@[ [@^B/^VJ
)@@G@@#@@B;?U     K @@@I[@^B85#@@@@@H1    K @@@]C)E@@@[@]B85@@@K@BK@D@@@[@AB9WVK
)@@G@@D@@@@@D$I   #@#@@#@@6@@#K @@@@[@^B/=#@@@@@X9    K @@@D[@^B9=#@@@@@Q2    VL
)@@G@@K @@@^[@^B/)#@@@@@X11   K @@@F[@^B'G#@@@@@Q1    K @@@B[@^B/G#@@@@@A9    VM
)@@G@@K @@@P[@^B9^#@@B'GXH1   K @@@^[@^B;*#@@@@@X3    K @@@#[@^B/?#@@B9^SR2   VN
)@@G@@K @@[^[@^B'O#@@@@@Q4    K @@@ [@^B9K#@@@@@A11   K @@@R[@^B;@#@@@@@X6    VO
)@@G@@K @@@A[@^B;/#@@B9KR7    K @@[B[@^B9)#@@@@@J3    K @@[D[@^B94#@@@@@X10   VP
)@@G@@K @@@E[@^B9G#@@@@@A3    K @@@J[@^B/W#@@@@@X5    K @@@ [@^@@@#@@@@@T3    VQ
)@@G@@K @@@ C),@@@]@@@@#@@@K@F#@:B7/@@#@@@@@@@@[[C:@@@M@@@@@@@[@@@[[ @]KP     VR
)@@G@@      L#)?I $DO 4 , $DO $TSTR(P(1,I))=0 ,P(1,I) EQU ''*HS $EQU P(1,1)*OCVS
)@@G@@ $EQU $L1(10,20,38)(@I $DO 3 ,S $EQU S:$SR(' ',C(I)-$SL(S)>0->C(I)-$SL(SVT
)@@G@@)!1):P(1,1+I)T])F $DISPLAY S*H $LEVEL 0,1,0*E $INSERT S*  $END@@@@C)L@@@VU
)@@G@@]@@@^!@@@K@F#@I@@@@^!@@@@@@@@[[CI@@@E@@@@@@@[@@@@@@@@@TYPE        L?)M $VV
)@@G@@INFO 1 TYPE(1,1)*^ END@'*MASM*C)E@@@[@]B8R@@@K@BK@D@@@[@AB80D@@@@@EQUF$ VW
)@@G@@#@#@@ @@6@@ K @@@@C)F@@@[@]B80@@@K@DK@F@@@[@BB9GD)@@@@DELETE$     #@#@@AVX
)@@G@@@@6@@AK @@@@C)E@@@[@]B9G@@@K@BK@D@@@[@A@@@D@@@@@EQU$  #@#@@^@@6@@^K @@@@VY
)@@G@@C)S@@@]@@@@^@@@K@F#@PB8X@@^@@@@@@@@[[CP@@@M@@@@@@@[@@@@@@@@@P           VZ
)@@G@@L:)/[$SR('*',$LEV-(P(0)=1->1!P(0,1)))] $EQU [P(1,*1)->'*']P(1,1)*  $END@WA
)@@G@@C)Q@@@]@@@@A@@@K@F#@NB7/@@A@@@@@@@@[[CN@@@M@@@@@@@@@@@@@@@@@P           WB
)@@G@@M[E)%[$SR('*',$LEV-(P(0)=1->1!P(0,1)))] $DELETE*  $END@'*']PC)Y@@@]@@@@ WC
)@@G@@@@@K@F#@V@@@@@ @@@@@@@@[[CV@@@M@@@@@@@[@@@@@@@@@P           L9-T[$SR('*'WD
)@@G@@,$LEV-(P(0)=1->1!P(0,1)))] $EQUF [P(1,*1)->'*']P(1,1),[P(1,*2)->'*']P(1,WE
)@@G@@2),P(1,3)T])  $END@@@@@@@@@___@@@___@@@___@@@___*MASM*C)E@@@[@]B;A@@@K@BWF
)@@G@@K@D@@@[@AB92D@@@@@DUMP  #@#@@^@@6@@^K @@@@C)C@@@[@[B92@@@C@D[@ @@@])@@@@WG
)@@G@@D$$PSCF     @@@B97C)B@@@[@]B97@@@C@#C@ @@@#)#B9"@@@B']@@ B92C)B@@@[@[B9"WH
)@@G@@@@@C@#]@^B9'<@SB971CA@@^ESTR ]C)B@@@[@[B9'@@@C@#]@^B9,<@OB9"1CA@@^EOCT ]WI
)@@G@@C)B@@@[@[B9,@@@C@#]@^B;G<@HB9'1CA@@^EHEX ]C)B@@@[@[B;G@@@C@#]@^B']<@DB9,WJ
)@@G@@1@A@@^EDEC ]C)B@@@[@[B']@@@C@#]@^@@@<@CB;G1CA@@^ESTR ]C-#@@@]@[@@^@@@K@BWK
)@@G@@]-@@@@@@^@@@@@@@@[[D@@@ M@@@@@@J$@@@@@@@@@P           L.)R $PAR(0)**OB('WL
)@@G@@N')->$END*W \$PAR(0)**OB('CDLOS')->$END*M \$TMODES**2->$END*YLEV $EQU P(WM
)@@G@@0)=1->$LEV-1!P(0,1)*JI $REPEAT 1,P-1*ISN $EQU P(I,1)*JSL $EQU $SL(SN)*PFWN
)@@G@@ EQU CIF(SN)->'/'!''*OSV $EQU VAL$(LEV,SN)*NT $EQU $TYPE([F]SV)*4S $EQU WO
)@@G@@'>> ':$SS(SN,1,MAX(12,SL)):' = ':EDITV([F]SV)*H $IF \3<=T<=4*R $DISPLAY WP
)@@G@@S[T=1->',SV']8C $ELSF TCC-#@@@]@[@@ @@@K@B]-@B8/@@ @@@@@@@@[@-@@@A)]=3*PWQ
)@@G@@ $DISPLAY $SS(S,1,80)*I $IF $SL(S)>80*OS $EQU $SSS(S,,1,80)*PJ $REPEAT 1WR
)@@G@@,$SL(S),61*- $DISPLAY $SR(' ',19):$SS(S,J,61)*A $ENDR*A $ENDF*E $ELSF T=WS
)@@G@@4*F $DISPLAY S*D $IF SV>0*V $DO P(I)=1 ,P(I,2) EQU 'D'T])OSCF EQU $CFS(PWT
)@@G@@(I,2))*Q $IF \$SN(D$$PSCF,SCF)(I $DISPLAY *'ILLEGAL SUBSCRIPT CONVERSIONWU
)@@G@@ FLAG: ")':SCF:'"), ':'")D") ASSUMED.'T])IP(I,2) EQU 'D'8BSCF EQUCC)5@@@WV
)@@G@@]@@@@A@@@@@@#@2@@@@@A@@@@@@@@[@)2@@@)E $CFS('D')*A $ENDF*OSCF EQU D$$PSCWW
)@@G@@F(SCF)*FSCL $EQU ''*!S $DO 3,P(I) ,SCL $EQU SCL:'P(I,':$CD(S):'),'T])PSCWX
)@@G@@L $EQU SCL:'P(I,2)'*0SN EQU ')'=$SS(SN,SL)->$SS(SN,1,SL-1):','!SN:'('*GJWY
)@@G@@ $REPEAT SV*$ DUMP,LEV SN:[SCF]($NS(SV,J)):')',[SCL]*A $ENDR*A $ENDF*A $WZ
)@@G@@ENDF*A $ENDR*  $END@L SU@@@___@@@___@@@___@@@___*MASM*C)E@@@[@]CBK@@@K@BXA
)@@G@@K@D@@@[@AC 8D@@@@@SNOOPY#@#@@4@@6@@4K @@@@C)F@@@[@]C 8@@@K@BK@D@@@[@BCB*XB
)@@G@@D@@@@@DEC   #@^@@1@@6@@11@A@@]AN @@@C)F@@@[@]CB*@@@K@BK@D@@@[@BB.UD@@@@@XC
)@@G@@CSF$  #@^@@V@@6@@V1@A@@^CSF$ @C)H@@@[@]B.U@@@K@DK@F@@@[@DB; D)@@@@APRTCAXD
)@@G@@$     #@ @@=@@6@@=1@A@@BAPRTCA$ RTCAC)E@@@[@]B; @@@K@BK@D@@@[@AC[CD@@@@@XE
)@@G@@PRNTA #@#@@-@@6@@-K @@@@C)G@@@[@]C[C@@@K@BK@D@@@[@CB'ND@@B; AREAD$#@ @@%XF
)@@G@@@@6@@%1@A@@AAREAD$ READ$C)E@@@[@]B'N@@@K@BK@D@@@[@AC]?D@@@@@APRINT#@#@@ZXG
)@@G@@@@6@@ZK @@@[C)G@@@[@]C]?@@@K@BK@D@@@[@CB/ZD@@@@@TREAD$#@ @@!@@6@@!1@A@@AXH
)@@G@@TREAD$ READ$C)E@@@[@]B/Z@@@K@BK@D@@@[@AC[-D@@@@@APRTCN#@#@@<@@6@@<K @@@[XI
)@@G@@C)G@@@[@]C[-@@@K@BK@D@@@[@CB9;D@@@@@READA #@ @@:@@6@@:1@A@@AREADA$ EADA$XJ
)@@G@@C)E@@@[@]B9;@@@K@BK@D@@@[@AC@*D@@@@@PRINT #@#@@Z@@6@@ZK @@@@C)F@@@[@]C@*XK
)@@G@@@@@K@BK@D@@@[@BC#ID@@@@@READ$ #@^@@%@@6@@%1@A@@ READ$ C)H@@@[@]C#I@@@K@DXL
)@@G@@K@F@@@[@DB./D)@@@@ATREAD$     #@ @@!@@6@@!1@A@@BATREAD$ READC)E@@@[@]B./XM
)@@G@@@@@K@BK@D@@@[@AB.6D@@@@@PCW   #@#@@&@@6@@&K @@@@C)E@@@[@]B.6@@@K@BK@D@@@XN
)@@G@@[@AB_@D@@@@@APRTCA#@#@@>@@6@@>K @@@[C)E@@@[@]B_@@@@K@BK@D@@@[@AB/BD@@@@@XO
)@@G@@APCW  #@#@@&@@6@@&K @@@[C)E@@@[@]B/B@@@K@BK@D@@@[@AB'TD@@@@@PRTCN #@#@@<XP
)@@G@@@@6@@<K @@@@C)G@@@[@]B'T@@@K@BK@D@@@[@CB89D@@@@@PRNTA$#@ @@)@@6@@)1@A@@AXQ
)@@G@@PRNTA$ RNTA$C)E@@@[@]B89@@@K@BK@D@@@[@AB9RD@@@@@ACSF  #@#@@W@@6@@WK @@@[XR
)@@G@@C)G@@@[@]B9R@@@K@BK@D@@@[@CC[KD@@@@@PRINT$#@ @@Y@@6@@Y1@A@@APRINT$ RINT$XS
)@@G@@C)G@@@[@]C[K@@@K@BK@D@@@[@CC]&D@@B9RREADA$#@ @@%@@6@@%9@A@@AREADA$ EADA$XT
)@@G@@C)E@@@[@]C]&@@@K@BK@D@@@[@AB_/D@@@@@ATREAD#@#@@?@@6@@?K @@@[C)F@@@[@]B_/XU
)@@G@@@@@K@DK@F@@@[@BB.<D)@@@@APRNTAP     #@#@@*@@6@@*K @@@[C)E@@@[@]B.<@@@K@BXV
)@@G@@K@D@@@[@AC#RD@@@@@PRTCA #@#@@>@@6@@>K @@@@C)E@@@[@]C#R@@@K@BK@D@@@[@AB;<XW
)@@G@@D@@@@@CALL  #@#@@,@@6@@,K @@@@C)G@@@[@]B;<@@@K@BK@D@@@[@CC^VD@@@@@PRTCN$XX
)@@G@@#@ @@+@@6@@+1@A@@APRTCN$ RTCN$C)E@@@[@]C^V@@@K@BK@D@@@[@AC[SD@@@@@XFA   XY
)@@G@@#@#@@0@@6@@0K @@@@C)H@@@[@]C[S@@@K@DK@F@@@[@DC#9D)@@@@AREADA$     #@ @@%XZ
)@@G@@@@6@@%9@A@@BAREADA$ EADAC)E@@@[@]C#9@@@K@BK@D@@@[@AC _D@@@@@XFU   #@#@@\YA
)@@G@@@@6@@\K @@@@C)E@@@[@]C _@@@K@BK@D@@@[@AB8ID@@@@@MOVE  #@#@@2@@6@@2K @@@@YB
)@@G@@C)F@@@[@]B8I@@@K@BK@D@@@[@BB/>D@@@@@ACSF$ #@^@@V@@6@@V1@A@@ ACSF$ C)G@@@YC
)@@G@@[@]B/>@@@K@BK@D@@@[@CB'/D@@@@@PRTCA$#@ @@=@@6@@=1@A@@APRTCA$ RTCA$C)H@@@YD
)@@G@@[@]B'/@@@K@DK@F@@@[@DCA0D)@@@@APRNTA$     #@ @@)@@6@@)1@A@@BAPRNTA$ RNTAYE
)@@G@@C)E@@@[@]CA0@@@K@BK@D@@@[@AB_AD@@B'/D$I   #@#@@3@@6@@3K @@@@C)E@@@[@]B_AYF
)@@G@@@@@K@BK@D@@@[@AC@)D@@@@@PCW$$ #@#@@$@@6@@$K @@@@C)G@@@[@]C@)@@@K@BK@D@@@YG
)@@G@@[@CC@#D@@@@@AREAD #@ @@(@@6@@(1@A@@AAREAD$ READ$C)F@@@[@]C@#@@@K@BK@D@@@YH
)@@G@@[@BC]GD@@@@@READ  #@^@@(@@6@@(1@A@@ READ$ C)E@@@[@]C]G@@@K@BK@D@@@[@AB_WYI
)@@G@@D@@C@#TREAD #@#@@?@@6@@?K @@@@C)E@@@[@]B_W@@@K@BK@D@@@[@AB8_D@@@@@PRNTAPYJ
)@@G@@#@#@@*@@6@@*K @@@@C)E@@@[@]B8_@@@K@BK@D@@@[@AB8PD@@@@@PCT$  #@#@@X@@6@@XYK
)@@G@@K @@@@C)E@@@[@]B8P@@@K@BK@D@@@[@AB92D@@@@@CSF   #@#@@W@@6@@WK @@@@C)H@@@YL
)@@G@@[@]B92@@@K@DK@F@@@[@DC]^D)@@@@APRINT$     #@ @@Y@@6@@Y1@A@@BAPRINT$ RINTYM
)@@G@@C)G@@@[@]C]^@@@K@BK@D@@@[@CB;"D@@B92AREADA#@ @@:@@6@@:1@A@@BAREADA$ EADAYN
)@@G@@C)H@@@[@]B;"@@@K@DK@F@@@[@DB;XD)@@@@APRTCN$     #@ @@+@@6@@+1@A@@BAPRTCNYO
)@@G@@$ RTCNC)E@@@[@]B;X@@@K@BK@D@@@[@AC^8D@@@@@APRNTA#@#@@-@@6@@-K @@@[C)F@@@YP
)@@G@@[@]C^8@@@K@BK@D@@@[@B@@@D@@B;XINC   #@^@@1@@6@@11@A@@[A @@@@C)-@@@]@@@@XYQ
)@@G@@@@@K@F#@YB_+@@X@@@@@@@@[[CY@@@M@@@@@@@[@@@@@@@@@P           L7)A FUNC$*\YR
)@@G@@ LA 12,UF(+(P(1)=3->0!P(1)=1->1!P(1,2),P(1,1)))*! $DO P(1)=3 , LA 13,(P(YS
)@@G@@1,2)->P(1,2)!1,P(1,3))*C ER PCT$*  $END@@@C)X@@@]@@@@(@@@K@F#@UB"]@@(@@@YT
)@@G@@@@@@@][CU@@@M@@@@@@@[@@@@@@@@@P           M#.)A FUNC$*+ DO P(1)=2 , LA 1YU
)@@G@@2,(P(1,1),P(1,2))*X DO P(1)=1 , LXI,14 12,P(1,1)*G ER [P(0,0)]*  $END@LAYV
)@@G@@C-[@@@]@@@@$@@@K@F#@"CA @@$@@@@@@@@[[C"@@@M@@@@@@@[@@@@@@@@@Q           YW
)@@G@@M#Q)HL $EQU Q(1,1)*GN $EQU +P(L)*Z $DO N=2 ,SF $EQU $TSTR(P(L,2))*&SKIP YX
)@@G@@$EQU (N=2->SF!N=3)->P(L,1)!Q(1,2)*" $DO N=2->SF!N=1 ,P(L,N)* $EQU [P(0,0YY
)@@G@@)->'$CAS'!'$CFS'](P(L,N))T])/LEN $EQU (N=2->\SF!N=3)->P(L,N-1)!$SL(P(L,NYZ
)@@G@@))//(P(0,0)->4!6)*(ADDR $EQU (N=2->SF!N=1)->(P(L,N)L)!P(L,N)*X $GFORM 12ZA
)@@G@@,SKIP,6,LEN,18,ADDR*  $END@QU C),@@@]@@@@3@@@K@F#@:C^_@@3@@@@@@@@[[C:@@@ZB
)@@G@@M@@@@@@@[@@@@@@@@@P           MB))?I $DO 4 , $DO $TSTR(P(1,I))=0 ,P(1,I)ZC
)@@G@@ EQU ''*HS $EQU P(1,1)*OC $EQU $L1(10,20,38)(@I $DO 3 ,S $EQU S:$SR(' ',ZD
)@@G@@C(I)-$SL(S)>0->C(I)-$SL(S)!1):P(1,1+I)T])F $DISPLAY S*H $LEVEL 0,1,0*E $ZE
)@@G@@INSERT S*  $END@DFC)/@@@]@@@@2@@@K@F#@9C#X@@2@@@@@@@@[[C9@@@M@@@@@@@^@@@ZF
)@@G@@@@@@@@P           MA/)A FUNC$*FI $REPEAT 2*EQ EQU P(I)*EX EQU Q(1)T )0 $ZG
)@@G@@IF Q>=2->$AP(Q(2))<1*/18->Q=5->Q(3)=Q(4)=0!Q=2*V LX X,OLR(Q=5->Q(5)!1,Q(ZH
)@@G@@2))*A $ELSE*R DO Q>1 , LXM X,AF(Q,2)*) DO \Q(*1) , LXI,U X,Q=5->Q(5)!1*AZI
)@@G@@ $ENDF*A $ENDR*V DO P>3 , LR R1,AF(P(3),*1)*< BT[P>4->',P(4,1)'] P(1,1),ZJ
)@@G@@,*P(2,1)*  $END@< C)Z@@@]@@@@\@@@K@F#@WC#_@@\@@@@@@@@[[CW@@@M@@@@@@@[@@@ZK
)@@G@@@@@@@@P           M S)A FUNC$*-F $EQU FLD(P(1)>1->P(1,2)!P(0,1))*N AND PZL
)@@G@@(1,1),FBML(F)*- $DO LB(F)>0 , SSL P(1,1)+1,LB(F)*  $END@    C)Z@@@]@@@@0ZM
)@@G@@@@@K@F#@WB;F@@0@@@@@@@@[[CW@@@M@@@@@@@[@@@@@@@@@P           M ))A FUNC$*ZN
)@@G@@-F $EQU FLD(P(1)>1->P(1,2)!P(0,1))*= $DO HB(F)<35 , LSSL P(1,1),35-HB(F)ZO
)@@G@@*O SSL P(1,1),36-FS(F)*  $END@C)P@@@]@@@@+@@@K@F#@MC]4@@+@@@@@@@@][CM@@@ZP
)@@G@@M@@@@@@@[@@@@@@@@@P           M]M)A FUNC$*L LA 12,AF(P(1),1)*G ER [P(0,0ZQ
)@@G@@)]*  $END@$LC)X@@@]@@@@,@@@K@F#@UB_G@@,@@@@@@@@[[CU@@@M@@@@@@@]@@@@@@@@@ZR
)@@G@@P           M ])A FUNC$*SX $EQU P(0)>1->P(0,1)!11*L LMJ X,AF(P(1),1)*<I ZS
)@@G@@$DO P(2) , J [P(2,*I)->'*']P(2,I)*  $END@#C)N@@@]@@@@*@@@K@F#@KC[(@@*@@@ZT
)@@G@@@@@@@][CK@@@M@@@@@@@]@@@@@@@@@P           M#:)E PCW$$ 2,1*L * $CFS(P(1,1ZU
)@@G@@))LD*  $END@C)Y@@@]@@@@?@@@K@F#@VB9 @@?@@@@@@@@][CV@@@M@@@@@@@]@@@@@@@@@ZV
)@@G@@P           M^!)D$($LCN+2)*HPKT PCW$$ 1,1*K + P(2,1),P(2,2)*D$($LCN-2)*HZW
)@@G@@ LA,14 12,PKT*R ER [P(0,0)->'A']TREAD$*  $END@  C)P@@@]@@@@Y@@@K@F#@MB7/ZX
)@@G@@@@Y@@@@@@@@][CM@@@M@@@@@@@[@@@@@@@@@P           M[Q)A FUNC$*L LA 12,AF(PZY
)@@G@@(1),1)*G ER [P(0,0)]*  $END@(1C)P@@@]@@@@W@@@K@F#@MB'[@@W@@@@@@@@][CM@@@ZZ
)@@G@@M@@@@@@@[@@@@@@@@@P           L&)M LA 12,(PCW$$ 1,0)*P ER [P(0,0)->'A']CAA
)@@G@@SF$*  $END@_C)P@@@]@@@@)@@@K@F#@MB/!@@)@@@@@@@@][CM@@@M@@@@@@@[@@@@@@@@@AB
)@@G@@P           M[1)A FUNC$*M LA 12,AF(P(1),*1)*G ER [P(0,0)]*  $END@NC)0@@@AC
)@@G@@]@@@@>@@@K@F#@!B.(@@>@@@@@@@@][C!@@@M@@@@@@@]@@@@@@@@@P           M]4)C AD
)@@G@@$IF P=2*M LA 12,(PCW$$ 1,1)*A $ELSE*D$($LCN+2)*$A $EQU [P(0,0)->'$CAS'!'AE
)@@G@@$CFS'](P(2,1)L)*OPKT * $CFS(P(1,1))DL*B * (A)L*JPKTL $EQU $-PKT*D$($LCN-AF
)@@G@@2)*L LA 12,(PKTL,PKT)*A $ENDF*R ER [P(0,0)->'A']PRTCA$*  $END@?@@=C)K@@@AG
)@@G@@]@@@@&@@@K@F#@HC@\@@&@@@@@@@@][CH@@@M@@@@@@@[@@@@@@@@@P           M#G)E AH
)@@G@@PCW$$ 1,1*  $END@PC)W@@@]@@@@:@@@K@F#@TB;:@@:@@@@@@@@][CT@@@M@@@@@@@]@@@AI
)@@G@@@@@@@@P           M^R)D$($LCN+2)*NPKT + P(2,1),P(2,2)*F + P(1,1)DL*D$($LAJ
)@@G@@CN-2)*H LA,14 12,PKT*G ER [P(0,0)]*  $END@C)Q@@@]@@@@<@@@K@F#@NC]M@@<@@@AK
)@@G@@@@@@@][CN@@@M@@@@@@@[@@@@@@@@@P           M]T)M LA 12,(PCW$$ 1,0)*R ER [AL
)@@G@@P(0,0)->'A']PRTCN$*  $END@A ENC)R@@@]@@@@!@@@K@F#@OB9Z@@!@@@@@@@@][CO@@@AM
)@@G@@M@@@@@@@[@@@@@@@@@P           M^7)A FUNC$*V DO P>1 , LA 12,AF(P(1),*1)*GAN
)@@G@@ ER [P(0,0)]*  $END@A,14C)Q@@@]@@@@Z@@@K@F#@NC@E@@Z@@@@@@@@][CN@@@M@@@@@AO
)@@G@@@@[@@@@@@@@@P           M[X)M LA 12,(PCW$$ 1,1)*R ER [P(0,0)->'A']PRINT$AP
)@@G@@*  $END@ML  C)T@@@]@@@@%@@@K@F#@QB'-@@%@@@@@@@@^[CQ@@@M@@@@@@@[@@@@@@@@@AQ
)@@G@@P           M^B)A FUNC$** DO P>1 , LA 12,AF(P(1),[P(0,*0)->'*']1)*G ER [AR
)@@G@@P(0,0)]*  $END@,1)C)Y@@@]@@@@-@@@K@F#@VB/H@@-@@@@@@@@][CV@@@M@@@@@@@]@@@AS
)@@G@@@@@@@@P           M[8)D$($LCN+2)*HPKT PCW$$ 2,1*L * $CFS(P(1,1))DL*D$($LAT
)@@G@@CN-2)*H LA,14 12,PKT*R ER [P(0,0)->'A']PRNTA$*  $END@FC)P@@@]@@@@=@@@K@FAU
)@@G@@#@MCBQ@@=@@@@@@@@][CM@@@M@@@@@@@[@@@@@@@@@P           M]!)A FUNC$*L LA 1AV
)@@G@@2,AF(P(1),1)*G ER [P(0,0)]*  $END@ENC)P@@@]@@@@V@@@K@F#@MC^-@@V@@@@@@@@]AW
)@@G@@[CM@@@M@@@@@@@[@@@@@@@@@P           LZ)A FUNC$*L LA 12,AF(P(1),1)*G ER [AX
)@@G@@P(0,0)]*  $END@36-C)U@@@]@@@@1@@@K@F#@RCA6@@1@@@@@@@@][CR@@@M@@@@@@@[@@@AY
)@@G@@@@@@@@P           M 9)A FUNC$*GR EQU P(1,1)*KA EQU AF(P(1),2)*A L R,A*K AZ
)@@G@@[P(0,0)] R,1,,U*A S R,A*^ END@C)X@@@]@@@@4@@@K@F#@U@@@@@4@@@@@@@@[[CU@@@BA
)@@G@@M@@@@@@@[@@@@@@@@@P           MB9)P $IF $PAR(4)='SNOOPY'*C $IF P>1*C ER BB
)@@G@@OPT$*N TEP A0,OBL(P(1,1))*A $ENDF*D SLJ TON$*A $ENDF*  $END@@@@___@@@___BC
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___BD
)@@G@@*MASM*C)E@@@[@]B_#@@@K@BK@D@@@[@AC[9D@@@@@XHALF #@#@@W@@6@@WS @@@MC)F@@@BE
)@@G@@[@]C[9@@@K@DK@F@@@[@BC^ZD)@B_#ENDBASE     #@#@@-@@6@@-K @@@@C)E@@@[@]C^ZBF
)@@G@@@@@K@BK@D@@@[@AB.:D@@@@@BASE  #@#@@N@@6@@NK @@@@C)E@@@[@]B.:@@@K@BK@D@@@BG
)@@G@@[@AB".D@@@@@SIXTH #@#@@W@@6@@WK @@@AC)E@@@[@]B".@@@K@BK@D@@@[@AB9&D@@B.:BH
)@@G@@HALF  #@#@@W@@6@@WK @@@MC)E@@@[@]B9&@@@K@BK@D@@@[@AB_DD@@@@@DWORD #@#@@PBI
)@@G@@@@6@@PK @@@]C)E@@@[@]B_D@@@K@BK@D@@@[@AC]DD@@@@@B$$NPW#@#@@)@@6@@)K @@@@BJ
)@@G@@C)B@@@[@[C]D@@@C@B[@^B"7]@@@@@B$$PW @@@B7_C)B@@@[@]B7_@@@C@#C@ @@@#)#C],BK
)@@G@@@@@C 1@@ C]DC)B@@@[@]C],@@@C@#C@ @@@]@#C]++@NB7_@@@C]*C)B@@@[@]C]*@@@C@#BL
)@@G@@C@ @@@#)#C]:@@@C]1@@]C],C)A@@@[@[C]:@@@C@#]@#C]1<@]C]*K @@@^C)A@@@[@[C]1BM
)@@G@@@@@C@#]@#C]+<@[C]:K @@@#C)B@@@[@]C]+@@@C@#C@ @@@]@#C]Q+@MC],@@@C]WC)B@@@BN
)@@G@@[@]C]W@@@C@#C@ @@@#)#C]Z@@@C]>@@]C]+C)A@@@[@[C]Z@@@C@#]@#C]><@]C]WK @@@]BO
)@@G@@C)A@@@[@[C]>@@@C@#]@#C]Q<@[C]ZK @@@[C)B@@@[@]C]Q@@@C@#C@ @@@]@#C]#+@GC]+BP
)@@G@@@@@C]HC)B@@@[@]C]H@@@C@#C@ @@@#)#C]N@@@C]T@@#C]QC)A@@@[@[C]N@@@C@#]@#C]KBQ
)@@G@@<@#C]HK @@@BC)A@@@[@[C]K@@@C@#]@#C]T<@]C]NK @@@AC)A@@@[@[C]T@@@C@#]@#C]#BR
)@@G@@<@[C]KK @@@ C)B@@@[@]C]#@@@C@#C@ @@@]@#C 1+@DC]Q@@@B7/C)B@@@[@]B7/@@@C@#BS
)@@G@@C@ @@@#)#C]@@@@C]A@@^C]#C)A@@@[@[C]@@@@C@#]@#B8]<@^B7/K @@@BC)A@@@[@[B8]BT
)@@G@@@@@C@#]@#B8 <@#C]@K @@@^C)A@@@[@[B8 @@@C@#]@#C]A<@]B8]K @@@AC)A@@@[@[C]ABU
)@@G@@@@@C@#]@#C 1<@[B8 K @@@ C)B@@@[@]C 1@@@C@#C@ @@@]@#B"7+@AC]#@@@C^QC)B@@@BV
)@@G@@[@]C^Q@@@C@#C@ @@@#)#C ,@@@C^W@@AC 1C)A@@@[@[C ,@@@C@#]@#C :<@AC^QK @@@HBW
)@@G@@C)A@@@[@[C :@@@C@#]@#C *<@ C ,K @@@GC)A@@@[@[C *@@@C@#]@#C ><@^C :K @@@FBX
)@@G@@C)A@@@[@[C >@@@C@#]@#C^T<@#C *K @@@EC)A@@@[@[C^T@@@C@#]@#C^W<@]C >K @@@DBY
)@@G@@C)A@@@[@[C^W@@@C@#]@#B"7<@[C^TK @@@CC)E@@@[@]B"7@@@K@BK@D@@@[@AB8CD@@@@@BZ
)@@G@@THIRD #@#@@W@@6@@WK @@@GC)E@@@[@]B8C@@@K@BK@D@@@[@AB;]D@@@@@WORD  #@#@@PCA
)@@G@@@@6@@PK @@@[C)E@@@[@]B;]@@@K@BK@D@@@[@AB9?D@@B8CAREA  #@#@@T@@6@@TK @@@@CB
)@@G@@C)E@@@[@]B9?@@@K@BK@D@@@[@AB"1D@@@@@FIELD #@#@@R@@6@@RK @@@@C)E@@@[@]B"1CC
)@@G@@@@@K@BK@D@@@[@AB/ID@@@@@QTR   #@#@@W@@6@@WK @@@DC)E@@@[@]B/I@@@K@BK@D@@@CD
)@@G@@[@A@@@D@@@@@LENGTH#@#@@V@@6@@VK @@@@C)U@@@]@@@@V@@@K@F#@RB92@@V@@@@@@@@[CE
)@@G@@[CR@@@M@@@@@@@@@@@@@@@@@P           M#")Z $DO $LF(1)>0 ,* $EQU B$$C+B$$ICF
)@@G@@T])) $DO $LEV=2 , $DISPLAY B$$C+B$$I*  $END@)A EC-#@@@]@[@@R@@@K@B]-@B;CCG
)@@G@@@@R@@@@@@@@[[D@@@SM@@@@@@@[@@@@@@@@@P           M#I)IPW $EQU P(1,1)*K $ICH
)@@G@@F \0<=PW<=017*' $DISPLAY *'ILLEGAL PARTWORD DEDESIGNATOR VALUE: ':$CB(PWCI
)@@G@@)*A $ENDF*H $IF $LF(1)>0*TB $EQUF B$$A+B$$C,B$$X,PW*C* $EQU B*S $DO $LEVCJ
)@@G@@=2 , $DISPLAY B*A $ENDF*F $IF P(1)>1*C $IF $LP*SPW $EQU [P(1,*2)->'*']PWCK
)@@G@@*3V $EQU +($GFORM 35-HB(PW),0,FS(PW),P(1,2),LB(PW),0)*A $ELSE*CV $EQU 0*CL
)@@G@@A $ENDF8C $LEVEL CC-#@@@]@[@@T@@@K@B]-@C@-@@T@@@@@@@@[[D@@@UM@@@@@@@]@@@CM
)@@G@@@@@@@@P           M#&)J $LEVEL ,$LEV-1*NB$$C $EQU B$$C+B$$I*KB$$I $EQU PCN
)@@G@@(1,1)*B $LEVEL*H $IF $LF(1)>0*QB $EQUF B$$A+B$$C,B$$X*C* $EQU B*S $DO $LCO
)@@G@@EV=2 , $DISPLAY B*A $ENDF*JI $REPEAT 2,P-1*IA EQU 'P(I,1)'**J $DO 2,P(I)CP
)@@G@@ ,A EQU A:',P(I,':$CD(J):')'T])X $DO P(I)>1 ,A EQU '+(':A:')'T])J $LEVELCQ
)@@G@@ ,$LEV-1*XB$$T(B$$,3,B$$C+I-2) $EQU [A]*B $LEVEL*A $ENDR8[ CC)V@@@]@@@@)CR
)@@G@@@@@K@F#@SB8Z@@)@@@@@@@@[[CS@@@M@@@@@@@[@@@@@@@@@P           M +)TF $EQU CS
)@@G@@FLD(P(1,2),P(1,3))*J $LEVEL ,$LEV-1*YB$$AVPW(FS(F),F,P(1,1)) $EQU 0*  $ECT
)@@G@@ND@)< C-#@@@]@[@@P@@@K@B]-@C^>@@P@@@@@@@@][D@@@QM@@@@@@@[@@@@@@@@@P     CU
)@@G@@      M]7)J $LEVEL ,$LEV-1*NB$$C $EQU B$$C+B$$I*KB$$I $EQU P(0,0)*B $LEVCV
)@@G@@EL*H $IF $LF(1)>0*QB $EQUF B$$A+B$$C,B$$X*C* $EQU B*S $DO $LEV=2 , $DISPCW
)@@G@@LAY B*A $ENDF*F $IF P(1)>0*KV $EQU '$GFORM '*)B $EQU $CD((B$$I=1->36!72)CX
)@@G@@/P(1))*4I $DO P(1) ,V $EQU V:(I>1->','):B:',P(1,':$CD(I):')'T])HV $EQU +CY
)@@G@@([V])*J $LEVEL ,$LEV-1*RB$$T(B$$,3,B$$C) $EQU VCC-#@@@]@[@@N@@@K@B]-@C@9CZ
)@@G@@@@N@@@@@@@@[[D@@@OM@@@@@@@[@@@@@@@@@P           M]Q)J $LEVEL ,$LEV-1*K $DA
)@@G@@IF NRI(B$$T)=1*HB$$T* $DELETE*JB$$T $EQU $NODE*A $ENDF*<B$$ $EQU B$$T=0-DB
)@@G@@>1!1+$NS(B$$T,B$$T)TB)LB$$IF $EQU P(1)=0*TB$$A $EQU B$$IF->$!P(1,1)*TB$$DC
)@@G@@X $EQU B$$IF->0!P(1,2)*PB$$T(B$$,1) $EQU B$$A*PB$$T(B$$,2) $EQU B$$X*QB$DD
)@@G@@$T(B$$,3) $EQU $NODE*FB$$C $EQU 0*FB$$I $EQU 0*MB$$AVPW $EQU $NODE*B $LEDE
)@@G@@VEL8G $IF $LF(1)>CC-#@@@]@[@@-@@@K@B]-@B/:@@-@@@@@@@@[[D@@@+M@@@@@@@@@@@DF
)@@G@@@@@@@@P           M 3)+ $DO B$$IF->$LF(1)>0 ,* $EQU /$NILT )Q $IF $LEV=2DG
)@@G@@->B$$AVPW>0*9 $DISPLAY 'THE FOLLOWING FIELDS HAVE NOT BEEN ALLOCATED:'*LDH
)@@G@@I $REPEAT B$$AVPW*RPWS $EQU $NS(B$$AVPW,I)*QJ $REPEAT B$$AVPW(PWS)*WPWD DI
)@@G@@$EQU $NS(B$$AVPW(PWS),J)*UK $REPEAT B$$AVPW(PWS,PWD)*-PWWX $EQU $NS(B$$ADJ
)@@G@@VPW(PWS,PWD),K)8% $DISPLAY '  ':$CD(PWS):' BITS (':$CD(HB(PCC-#@@@]@[@@WDK
)@@G@@@@@K@B]-@@@@@@W@@@@@@@@ [D@@@XM@@@@@@@[@@@@@@@@@P           M^M)HB $EQU DL
)@@G@@P(0,0)*GFOUND $EQU 0*LI $REPEAT B$$AVPW*RPWS $EQU $NS(B$$AVPW,I)*M 6>PWSDM
)@@G@@-B<>0->$ENDRT])QJ $REPEAT B$$AVPW(PWS)*WPWD $EQU $NS(B$$AVPW(PWS),J)*MPWDN
)@@G@@B $EQU HB(PWD)+1*U PWS/B<2->PWB///B>0->$ENDR*-PWWX $EQU $NS(B$$AVPW(PWS,DO
)@@G@@PWD),1)*GFOUND $EQU 1*A $ENDI*A $ENDR*H FOUND->$ENDI*A $ENDRTA)F $IF \FODP
)@@G@@UND*J $LEVEL ,$LEV-18BB$$C $ECC)O@@@]@@@@O@@@@@@#@LB9Z@@O@@@@@@@@[@)L@@@DQ
)@@G@@)[0*LB $EQUF B$$A,B$$X*C* $EQU B*S $DO $LEV=2 , $DISPLAY B*A $ENDF*  $ENDR
)@@G@@D@* $DC)E@@@]@@@@Q@@@@@@#@BB'2@@Q@@@@@@@@[@)B@@@*A $ENDF*  $END@@@C)N@@@DS
)@@G@@]@@@@S@@@@@@#@KB/C@@S@@@@@@@@[@)K@@@)B,$LEV-1**B$$T(B$$,3,B$$C) $EQU B$$DT
)@@G@@T(B$$,3,B$$C)+V*A $ENDF*  $END@*' $DC)D@@@]@@@@U@@@@@@#@AB.1@@U@@@@@@@@[DU
)@@G@@@)A@@@)^$END@@]@@@C-#@@@]@[@@X@@@K@B]-@B_J@@X@@@@@@@@[@-@@@Y)GQU B$$C+B$DV
)@@G@@$I*FB$$I $EQU 1*B $LEVEL*MPWD $EQU FLD(35,0)*FPWS $EQU 36*FPWB $EQU 36*IDW
)@@G@@PWWX $EQU B$$C*J $LEVEL ,$LEV-1*WB$$AVPW(PWS,PWD,PWWX) $EQU 0*B $LEVEL*ADX
)@@G@@ $ENDFTC)IPWI $EQU PWB/B*J $LEVEL ,$LEV-1*XB$$AVPW(PWS,PWD,PWWX) $DELETEDY
)@@G@@*1 $DO B$$AVPW(PWS,PWD)=0 ,B$$AVPW(PWS,PWD) $DELETET])( $DO B$$AVPW(PWS)DZ
)@@G@@=0 ,B$$AVPW(PWS) $DELETET])B $LEVEL*L $IF 6>PWS///B<>08#PWICC-#@@@]@[@@YEA
)@@G@@@@@K@B]-@C@J@@Y@@@@@@@@[@-@@@Z)F $EQU PWI-1*A $ENDF*LPWHB $EQU PWI*B-1*MEB
)@@G@@PWLB $EQU PWHB-B+1*E $IF PWS>B*, $DO HB(PWD)>PWHB , B$$NPW PWWX,HB(PWD),EC
)@@G@@PWHB+1T]), $DO PWLB>LB(PWD) , B$$NPW PWWX,PWLB-1,LB(PWD)T])A $ENDFT^)F $ED
)@@G@@IF P(1)>0*3V $EQU $LP=0->0!+($GFORM 35-PWHB,0,B,P(1,1),PWLB,0)*J $LEVEL EE
)@@G@@,$LEV-1**B$$T(B$$,3,PWWX) $EQU B$$T(B$$,3,PWWX)+V*B $LEVEL*A $ENDF*H $IFEF
)@@G@@ $LF(1)>08MA $EQUF PWWX+B$$A,CC)P@@@]@@@@Z@@@@@@#@MC]4@@Z@@@@@@@@[@)M@@@EG
)@@G@@)TB$$X,B$$PW(B+P(0,*0),PWI)*C* $EQU A*S $DO $LEV=2 , $DISPLAY A*A $ENDF*EH
)@@G@@  $END@HB(PWC-#@@@]@[@@+@@@K@B]-@C#4@@+@@@@@@@@[@-@@@<)0WD)):'-':$CD(LB(EI
)@@G@@PWD)):') WORD ':EDITV(B$$A+PWWX)T])A $ENDR*A $ENDR*A $ENDR*A $ENDFTB)Q $EJ
)@@G@@IF B$$IF=0->$LF(1)=0*J $LEVEL ,$LEV-1*LB$$T(B$$) $DELETE*C 1->$END*A $ENEK
)@@G@@DF*IPL EQU 'B$$P*'*IB$$P EQU /$NIL*T $DO $LF(1)>0 ,PL EQU '*'T )EP $PROCEL
)@@G@@ *0*H[%1:PL] $NAME*XB$$C $EQU [%1:$CD(B$$C+B$$I)]*QB$$ $EQU [%1:$CD(B$$)EM
)@@G@@]*ELCB $EQU $*PI $REPEAT B$$T(B$$,3)8JIX $EQU $NS(B$$CC)>@@@]@@@@<@@@@@@EN
)@@G@@#@+@@@@@<@@@@@@@@[@)+@@@)FT(B$$,3),I)*K $RES IX-($-LCB)*O $GEN B$$T(B$$,EO
)@@G@@3,IX)*A $ENDR*M $RES B$$C-($-LCB)*S%1: $IF \($LF(1)>0->$LP)*J $LEVEL ,$LEP
)@@G@@EV-1*LB$$T(B$$) $DELETE*D%1: $ENDF*  $ENDTB)  B$$P*  $END@*'@@@___@@@___EQ
)@@G@@*MASM*C)E@@@[@]B"=@@@K@BK@D@@@[@AB.UD@@@@@JGM   #@#@@Q@@6@@QK @@@@C)F@@@ER
)@@G@@[@]B.U@@@K@BK@D@@@[@BB;WD@@@@@JPOS  #@^@@O@@6@@O1@A@@]TN  @@C)F@@@[@]B;WES
)@@G@@@@@K@BK@D@@@[@BC 2D@@@@@MSLEJ #@^@@N@@6@@N1@A@@^MSLE @C)F@@@[@]C 2@@@K@BET
)@@G@@K@D@@@[@BC#;D@@@@@TMSG  #@^@@Z@@6@@Z9@A@@#MSG  @C)F@@@[@]C#;@@@K@BK@D@@@EU
)@@G@@[@BB.*D@@@@@JMNGI #@^@@Y@@6@@Y1@A@@^JMGI @C)F@@@[@]B.*@@@K@BK@D@@@[@BB.-EV
)@@G@@D@@@@@JNM   #@^@@O@@6@@O1@A@@]TP  @@C)F@@@[@]B.-@@@K@BK@D@@@[@BC@ID@@@@@EW
)@@G@@JNV   #@^@@O@@6@@O1@A@@]TP  @@C)E@@@[@]C@I@@@K@BK@D@@@[@ACAID@@B.-JL    EX
)@@G@@#@#@@T@@6@@TK @@@@C)F@@@[@]CAI@@@K@BK@D@@@[@BB"YD@@@@@TMASG #@^@@Z@@6@@ZEY
)@@G@@9@A@@^MASG @C)E@@@[@]B"Y@@@K@BK@D@@@[@AB_^D@@@@@JLEM  #@#@@P@@6@@PK @@@@EZ
)@@G@@C)E@@@[@]B_^@@@K@BK@D@@@[@AB.ND@@B"YTL    #@#@@R@@6@@RK @@@@C)F@@@[@]B.NFA
)@@G@@@@@K@BK@D@@@[@BC]SD@@@@@JPM   #@^@@O@@6@@O1@A@@]TN  @@C)E@@@[@]C]S@@@K@BFB
)@@G@@K@D@@@[@AC^KD@@B.NDJNE  #@#@@X@@6@@XK @@@@C)F@@@[@]C^K@@@K@BK@D@@@[@BCABFC
)@@G@@D@@@@@TSE   #@^@@Z@@6@@Z1@A@@]SE @@@C)F@@@[@]CAB@@@K@BK@D@@@[@BB.GD@@C^KFD
)@@G@@TMASL #@^@@Z@@6@@Z9@A@@^MASL @C)F@@@[@]B.G@@@K@BK@D@@@[@BB;1D@@@@@JPV   FE
)@@G@@#@^@@O@@6@@O1@A@@]TN  @@C)F@@@[@]B;1@@@K@BK@D@@@[@BB'#D@@@@@MSWJ  #@^@@NFF
)@@G@@@@6@@N1@A@@#MSW  @C)F@@@[@]B'#@@@K@BK@D@@@[@BB/AD@@@@@SNEJ  #@^@@M@@6@@MFG
)@@G@@1@A@@#SNE @@C)F@@@[@]B/A@@@K@BK@D@@@[@BB;8D@@@@@MASGJ #@^@@N@@6@@N1@A@@^FH
)@@G@@MASG @C)F@@@[@]B;8@@@K@BK@D@@@[@BB8,D@@@@@MSNWJ #@^@@N@@6@@N1@A@@^MSNW @FI
)@@G@@C)F@@@[@]B8,@@@K@BK@D@@@[@BB;PD@@@@@JLE   #@^@@L@@6@@L1@A@@]TG  @@C)F@@@FJ
)@@G@@[@]B;P@@@K@BK@D@@@[@BB/HD@@B8,MSNEJ #@^@@N@@6@@N1@A@@^MSNE @C)F@@@[@]B/HFK
)@@G@@@@@K@BK@D@@@[@BB9LD@@@@@JEZ   #@^@@O@@6@@O1@A@@#TNZ @@C)F@@@[@]B9L@@@K@BFL
)@@G@@K@D@@@[@BC [D@@@@@SEJ   #@^@@M@@6@@M1@A@@]SE @@@C)F@@@[@]C [@@@K@BK@D@@@FM
)@@G@@[@BB/7D@@@@@TSG   #@^@@Z@@6@@Z1@A@@]SG  @@C)F@@@[@]B/7@@@K@BK@D@@@[@BB9EFN
)@@G@@D@@@@@JZM   #@^@@O@@6@@O1@A@@#TNZ @@C)F@@@[@]B9E@@@K@BK@D@@@[@BB'LD@@@@@FO
)@@G@@JNW   #@^@@L@@6@@L1@A@@]TW  @@C)F@@@[@]B'L@@@K@BK@D@@@[@BCA@D@@B9ESNGJ  FP
)@@G@@#@^@@M@@6@@M1@A@@#SNG @@C)F@@@[@]CA@@@@K@BK@D@@@[@BC XD@@B'LTMSNW #@^@@ZFQ
)@@G@@@@6@@Z9@A@@^MSNW @C)F@@@[@]C X@@@K@BK@D@@@[@BB. D@@@@@TMSNE #@^@@Z@@6@@ZFR
)@@G@@9@A@@^MSNE @C)F@@@[@]B. @@@K@BK@D@@@[@BB'SD@@@@@JNZM  #@^@@O@@6@@O1@A@@]FS
)@@G@@TZ  @@C)F@@@[@]B'S@@@K@BK@D@@@[@BC^'D@@@@@SGJ   #@^@@M@@6@@M1@A@@]SG  @@FT
)@@G@@C)F@@@[@]C^'@@@K@BK@D@@@[@BB8/D@@B'STSLE  #@^@@Z@@6@@Z1@A@@#SLE @@C)F@@@FU
)@@G@@[@]B8/@@@K@BK@D@@@[@BC^DD@@@@@JOP   #@^@@L@@6@@L1@A@@#TEP @@C)F@@@[@]C^DFV
)@@G@@@@@K@BK@D@@@[@BB'ZD@@B8/DJNZ  #@^@@Y@@6@@Y1@A@@#DJZ  @C)F@@@[@]B'Z@@@K@BFW
)@@G@@K@D@@@[@BB;<D@@@@@SWJ   #@^@@M@@6@@M1@A@@]SW  @@C)F@@@[@]B;<@@@K@BK@D@@@FX
)@@G@@[@BCA7D@@B'ZMSNGJ #@^@@N@@6@@N1@A@@^MSNG @C)F@@@[@]CA7@@@K@BK@D@@@[@BC^]FY
)@@G@@D@@@@@JE    #@^@@L@@6@@L1@A@@#TNE @@C)F@@@[@]C^]@@@K@BK@D@@@[@BB;_D@@@@@FZ
)@@G@@JMLEI #@^@@Y@@6@@Y1@A@@^JMGI @C)F@@@[@]B;_@@@K@BK@D@@@[@BB.\D@@@@@MASLJ GA
)@@G@@#@^@@N@@6@@N1@A@@^MASL @C)F@@@[@]B.\@@@K@BK@D@@@[@BB8$D@@@@@JNEG  #@^@@OGB
)@@G@@@@6@@O1@A@@]TP  @@C)F@@@[@]B8$@@@K@BK@D@@@[@BB'ED@@@@@JG    #@^@@L@@6@@LGC
)@@G@@1@A@@#TLE @@C)F@@@[@]B'E@@@K@BK@D@@@[@BC]4D@@B8$SLEJ  #@^@@M@@6@@M1@A@@#GD
)@@G@@SLE @@C)F@@@[@]C]4@@@K@BK@D@@@[@BC[HD@@@@@JNGD  #@^@@Y@@6@@Y1@A@@#JGD @@GE
)@@G@@C)E@@@[@]C[H@@@K@BK@D@@@[@AC CD@@@@@JNL   #@#@@U@@6@@UK @@@@C)F@@@[@]C CGF
)@@G@@@@@K@BK@D@@@[@BC[6D@@@@@TSW   #@^@@Z@@6@@Z1@A@@]SW  @@C)E@@@[@]C[6@@@K@BGG
)@@G@@K@D@@@[@AB9#D@@@@@DJE   #@#@@W@@6@@WK @@@@C)F@@@[@]B9#@@@K@BK@D@@@[@BB/"GH
)@@G@@D@@@@@JW    #@^@@L@@6@@L1@A@@#TNW @@C)F@@@[@]B/"@@@K@BK@D@@@[@BC JD@@@@@GI
)@@G@@JNEZ  #@^@@O@@6@@O1@A@@]TZ  @@C)F@@@[@]C J@@@K@BK@D@@@[@BC^?D@@B/"TSNW  GJ
)@@G@@#@^@@Z@@6@@Z1@A@@#SNW @@C)F@@@[@]C^?@@@K@BK@D@@@[@BB'&D@@@@@TSNE  #@^@@ZGK
)@@G@@@@6@@Z1@A@@#SNE @@C)F@@@[@]B'&@@@K@BK@D@@@[@BC@CD@@@@@SNWJ  #@^@@M@@6@@MGL
)@@G@@1@A@@#SNW @@C)E@@@[@]C@C@@@K@BK@D@@@[@AB'!D@@B'&TNL   #@#@@S@@6@@SK @@@@GM
)@@G@@C)F@@@[@]B'!@@@K@BK@D@@@[@BC@1D@@@@@MSEJ  #@^@@N@@6@@N1@A@@#MSE @@C)E@@@GN
)@@G@@[@]C@1@@@K@BK@D@@@[@AC :D@@@@@JGE   #@#@@U@@6@@UK @@@@C)F@@@[@]C :@@@K@BGO
)@@G@@K@D@@@[@BC =D@@C@1TMSLE #@^@@Z@@6@@Z9@A@@^MSLE @C)F@@@[@]C =@@@K@BK@D@@@GP
)@@G@@[@BC 9D@@@@@TMSNG #@^@@Z@@6@@Z9@A@@^MSNG @C)F@@@[@]C 9@@@K@BK@D@@@[@BC QGQ
)@@G@@D@@@@@TMSW  #@^@@Z@@6@@Z9@A@@#MSW  @C)F@@@[@]C Q@@@K@BK@D@@@[@BB85D@@@@@GR
)@@G@@TMSE  #@^@@Z@@6@@Z9@A@@#MSE @@C)F@@@[@]B85@@@K@BK@D@@@[@BB_>D@@@@@JEP   GS
)@@G@@#@^@@L@@6@@L1@A@@#TOP @@C)E@@@[@]B_>@@@K@BK@D@@@[@AC[ND@@@@@TGE   #@#@@SGT
)@@G@@@@6@@SK @@@@C)E@@@[@]C[N@@@K@BK@D@@@[@AB;%D@@@@@DTNE  #@#@@V@@6@@VK @@@@GU
)@@G@@C)F@@@[@]B;%@@@K@BK@D@@@[@BC^3D@@@@@MSGJ  #@^@@N@@6@@N1@A@@#MSG  @C)F@@@GV
)@@G@@[@]C^3@@@K@BK@D@@@[@BB8)D@@B;%TSNG  #@^@@Z@@6@@Z1@A@@#SNG @@C)F@@@[@]B8)GW
)@@G@@@@@K@BK@D@@@[@BB.6D@@@@@JNE   #@^@@L@@6@@L1@A@@]TE  @@C)E@@@[@]B.6@@@K@BGX
)@@G@@K@D@@@[@A@@@D@@@@@JNGM  #@#@@P@@6@@PK @@@@C)T@@@]@@@@V@@@K@F#@QB_E@@V@@@GY
)@@G@@@@@@@[[CQ@@@E@@@@]@@[@@@@@@@@@P           M D)5 DTE P(1,1),[P(1,*2)->'*'GZ
)@@G@@]P(1,2),[P(1,*3)->'*']P(1,3)*A J $+2*^ END@2,*1)C)Y@@@]@@@@S@@@K@F#@VC[THA
)@@G@@@@S@@@@@@@@][CV@@@E@@@@#@@[@@@@@@@@@P           M^,)8A EQUF [P(1,*2)->'*HB
)@@G@@']P(1,2),P(1,3),P(0)>1->P(0,1)!P(1,4)*G TG P(1,1),A*H TNE P(1,1),A*A J $HC
)@@G@@+2*^ END@@@DC))@@@]@@@@W@@@K@F#@XC@O@@W@@@@@@@@[[CX@@@E@@@@#@@]@@@@@@@@@HD
)@@G@@P           M L)5 DTE P(1,1),[P(1,*2)->'*']P(1,2),[P(1,*3)->'*']P(1,3)*AHE
)@@G@@ J $+2*? J [P(2,*1)->'*']P(2,1),[P(2,*2)->'*']P(2,2)*^ END@@C))@@@]@@@@UHF
)@@G@@@@@K@F#@XCAP@@U@@@@@@@@][CX@@@E@@@@#@@]@@@@@@@@@P           M [)/ TL P(1HG
)@@G@@,1),[P(1,*2)->'*']P(1,2),P(1,3),P(0)>1->P(0,1)!P(1,4)*? J [P(2,*1)->'*']HH
)@@G@@P(2,1),[P(2,*2)->'*']P(2,2)*^ END@@@C)>@@@]@@@@L@@@K@F#@+B7/@@L@@@@@@@@CHI
)@@G@@[C+@@@E@@@@]@@]@@@@@@@@@P           M#L)WPW EQU P(0)>1->P(0,1)!P(1,4)*. HJ
)@@G@@[P(0,0)],PW P(1,1),[P(1,*2)->'*']P(1,2),[P(1,*3)->'*']P(1,3)*? J [P(2,*1HK
)@@G@@)->'*']P(2,1),[P(2,*2)->'*']P(2,2)*^ END@6C)$@@@]@@@@M@@@K@F#@=C[/@@M@@@HL
)@@G@@@@@@@B[C=@@@E@@@@#@@]@@@@@@@@@P           M#))WPW EQU P(0)>1->P(0,1)!P(1HM
)@@G@@,4)*. [P(0,0)],PW P(1,1),[P(1,*2)->'*']P(1,2),[P(1,*3)->'*']P(1,3)*A J $HN
)@@G@@+2*? J [P(2,*1)->'*']P(2,1),[P(2,*2)->'*']P(2,2)*^ END@@@@@'C)Z@@@]@@@@XHO
)@@G@@@@@K@F#@WB"%@@X@@@@@@@@[[CW@@@E@@@@]@@]@@@@@@@@@P           M U)5 DTE P(HP
)@@G@@1,1),[P(1,*2)->'*']P(1,2),[P(1,*3)->'*']P(1,3)*? J [P(2,*1)->'*']P(2,1),HQ
)@@G@@[P(2,*2)->'*']P(2,2)*^ END@)*^C)X@@@]@@@@R@@@K@F#@UB/O@@R@@@@@@@@[[CU@@@HR
)@@G@@E@@@@]@@[@@@@@@@@@P           M^=)8A EQUF [P(1,*2)->'*']P(1,2),P(1,3),P(HS
)@@G@@0)>1->P(0,1)!P(1,4)*G TG P(1,1),A*H TNE P(1,1),A*^ END@[P(2,C)&@@@]@@@@PHT
)@@G@@@@@K@F#@<B_:@@P@@@@@@@@][C<@@@E@@@@#@@]@@@@@@@@@P           M^L)WPW EQU HU
)@@G@@P(0)>1->P(0,1)!P(1,4)*9 TLEM,PW P(1,1),[P(1,*2)->'*']P(1,2),[P(1,*3)->'*HV
)@@G@@']P(1,3)*A J $+2*? J [P(2,*1)->'*']P(2,1),[P(2,*2)->'*']P(2,2)*^ END@CDOHW
)@@G@@C))@@@]@@@@T@@@K@F#@XC]Y@@T@@@@@@@@[[CX@@@E@@@@^@@]@@@@@@@@@P           HX
)@@G@@M^8). TGE P(1,1),[P(1,*2)->'*']P(1,2),P(1,3),P(0)>1->P(0,1)!P(1,4)*? J [HY
)@@G@@P(2,*1)->'*']P(2,1),[P(2,*2)->'*']P(2,2)*^ END@@C)T@@@]@@@@Y@@@K@F#@QC];HZ
)@@G@@@@Y@@@@@@@@^[CQ@@@E@@@@]@@[@@@@@@@@@P           M $)O [P(0,0)] P(1,1),$+IA
)@@G@@2*? J [P(1,*2)->'*']P(1,2),[P(1,*3)->'*']P(1,3)*^ END@C-#@@@]@[@@Z@@@K@BIB
)@@G@@]-@B9S@@Z@@@@@@@@K[D@@@)M@@@@@@@#@@@@@@@@@P           MA#)A FUNC$*HM EQUIC
)@@G@@ P(0,*0)*RF EQU P(0,0):(\M->',J')*-J EQU \M->P(0)>1->P(0,1)!P(1,4)!0*) DID
)@@G@@O M->P(3)>0 , LR R2,AF(P(3),1)T])GA EQU P(1,1)*HIO EQU P(1,2)*GX EQU P(1IE
)@@G@@,3)*HIS EQU P(2,1)(D DO NRI(IS)>0 , $DISPLAY 'ERROR - ITEM SIZE MUST BE IF
)@@G@@AN ABSOLUTE CONSTANT'T])ICWF EQU P(2)=2*C $IF CWF*K LR,H1 R1,P(2,2)*J LXIG
)@@G@@,H2 X,P(2,2)8D AX X,(ISCC),@@@]@@@@N@@@K@F#@:B'4@@N@@@@@@@@D[C:@@@M@@@@@IH
)@@G@@@@#@@@@@@@@@P           M#2)DQ EQU P-1(] DO Q=3 , LR 0101,[P(2,*1)->'*']II
)@@G@@P(2,1),[P(2,*2)->'*']P(2,2),P(2,3)T])' [P(0,0)] P(1,1),[P(1,*2)->'*']P(1IJ
)@@G@@,2),[P(1,*3)->'*']P(1,3)*A J $+2*: J [P(Q,*1->'*']P(Q,1),[P(Q,*2)->'*']PIK
)@@G@@(Q,2)*^ END@C)=@@@]@@@@O@@@K@F#@-B./@@O@@@@@@@@E[C-@@@E@@@@]@@]@@@@@@@@@IL
)@@G@@P           M^B)WPW EQU P(0)>1->P(0,1)!P(1,3)*6 [P(0,0)],PW [P(1,*1)->'*IM
)@@G@@']P(1,1),[P(1,*2)->'*']P(1,2)*? J [P(2,*1)->'*']P(2,1),[P(2,*2)->'*']P(2IN
)@@G@@,2)*^ END@3)C)>@@@]@@@@Q@@@K@F#@+@@@@@Q@@@@@@@@[[C+@@@E@@@@]@@]@@@@@@@@@IO
)@@G@@P           M^V)WPW EQU P(0)>1->P(0,1)!P(1,4)*9 TLEM,PW P(1,1),[P(1,*2)-IP
)@@G@@>'*']P(1,2),[P(1,*3)->'*']P(1,3)*? J [P(2,*1)->'*']P(2,1),[P(2,*2)->'*']IQ
)@@G@@P(2,2)*^ END@)*^ EC)S@@@]@@@@)@@@@@@#@P@@@@@)@@@@@@@@[@)P@@@)F-1,-(IS-1)IR
)@@G@@)*A $ELSE*O LR R1,AF(P(2),*2,1)*O LX X,(IS,P(2,3)-IS)*A $ENDF*K* [F] A,IIS
)@@G@@O+IS,*X*^ END@1->P@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___IT
)@@G@@@@@___@@@___@@@___@@@___*MASM*[@BB;?#@@@@@INLINKLB1@@ #@@[8@AVL$DATA    IU
)@@G@@C)D@@@[@]B;?@@@K@BK@D@@@[@ B/WD@@@@@STATD @@]@]R@@6@]R[@ B/6#)@B;?SROTATIV
)@@G@@E     KH@@@J[@BB_*#@@@@@BKWORDLB0@@]#@@[8@AVL$DATA    [@BC]@#@@@@@BNODE IW
)@@G@@LB2@@]#@@[8@AVL$DATA    [@BB;V#@@B_*DELINKLB1@@ #@@[8@AVL$DATA    C)C@@@IX
)@@G@@[@[B;V@@@@@D[@ C[8A)@@@@TIMEOFF     @@@@@>[@CB"K#)@@@@NODEADDR    LB1@@^IY
)@@G@@#@@[8@AVL$DATA    [@ B")#)@@@@KEYSIZE     LBF0@@[@^C@\#@@@@@NNODESLB]0@]IZ
)@@G@@[@^B/&#@@@@@B$$C  KH@@@A[@CB"T#@@@@@B$$A  K#@@@#@@@@@@#@@D@@AVL$DATA    JA
)@@G@@[@BB;=#@@@@@RKISDWLB0@@@#@@[8@AVL$DATA    [@^B.!#@@B"TTIME  K @@@[[@^B".JB
)@@G@@#@@@@@LLINK LB]@@@[@BB.B#@@@@@UPKT  LB1@@@#@@[8@AVL$DATA    [@^B"C#@@@@@JC
)@@G@@PKT   LB@0@@[@^B/E#@@B.BCMPEXTLB@0@[[@ B/.#)@@@@BALANCE     KH@@@D[@^B_FJD
)@@G@@#@@@@@B$$   K @@@[[@BB"P#@@@@@SKSIZELB2@@[#@@[8@AVL$DATA    [@^C[Q#@@@@@JE
)@@G@@ROOT  LB[0@@[@BB.1#@@B"PAVLINKLB1@@##@@[8@AVL$DATA    [@^C[D#@@@@@ULINK JF
)@@G@@LB]@@[[@BB;N#@@@@@AVLRTNLB2@@ #@@[8@AVL$DATA    C)B@@@[@[B;N@@@@@B[@^B.IJG
)@@G@@A@@C[DINCR  @@@@@>[@BC[K#@@@@@CMPRTNLB2@@^#@@[8@AVL$DATA    C)E@@@[@]C[KJH
)@@G@@@@@K@BK@D@@@[@AB_-D@@@@@CSET  #@#@]L@@6@]LK @@@[[@BB"6#@@@@@KNODE LB1@@]JI
)@@G@@#@@[8@AVL$DATA    [@BB.Y#@@@@@ISDFLGLB/@@@#@@[8@AVL$DATA    [@^B_^#@@@@@JJ
)@@G@@LINKS LB@@@@[@BB/J#@@@@@BALINKLB2@@A#@@[8@AVL$DATA    [@^B..#@@@@@B$$X  JK
)@@G@@KH@@@@[@^B_M#@@@@@RANK  LB]@@][@BC@;#@@@@@SKADDRLB1@@[#@@[8@AVL$DATA    JL
)@@G@@[@BC[]#@@@@@RNODE LB2@@##@@[8@AVL$DATA    [@^B/A#@@C@;B$$I  KH@@@[[@^B.9JM
)@@G@@#@@@@@KEY   LB@@@#[@^B.[#@@@@@BALFACLBD@@[C)E@@@[@]B.[@@@K@BK@D@@@[@AB"\JN
)@@G@@E@@B.9LINK  #@#@]O@@6@]OK @@@@[@BC]I#@@@@@RKFLG LB.@@@#@@[8@AVL$DATA    JO
)@@G@@[@ B/@#)@B"\DATALEN     KH@@@BC)E@@@[@]B/@@@@K@DK@F@@@[@AB"*D)@C]ISTATDEJP
)@@G@@F     @@]@]S@@6@]S[@BB.(#@@@@@SKWORDLB0@@[#@@[8@AVL$DATA    [@^C@7#@@@@@JQ
)@@G@@RLINK LB[@@@[@^B7_#@@B.(INSERTK @@@@C)B@@@[@[B7_@@@C@B[@^B"=]@@@@@B$$T  JR
)@@G@@@@@B7/C)B@@@[@]B7/@@@C@#C@ @@@#)#B"=@@@B7/@@@B7_[@^B.U#@@@@@KEYRTNLB[0@]JS
)@@G@@[@^B'?#@@@@@NODBASLB@@@@C)F@@@[@]B'?@@@K@DK@F@@@[@BB/,D)@@@@PERFORM     JT
)@@G@@#@#@]Q@@6@]QK @@@@[@^C@3#@@B'?STATS K @@@@[@^B"G#@@B/,DELETEKH@@@#[@^B.5JU
)@@G@@#@@@@@RKIFLGLBG0@@[@^B'=#@@@@@KEYSIZLBE@@[C)G@@@[@]B'=@@@K@DK@F@@@[@CB/-JV
)@@G@@D)@@@@SUBRANKS    #@^@]P@@6@]P1@A@@]AN @@@[@ B;R#)@@@@DROTATE     KH@@@MJW
)@@G@@C)B@@@[@[B;R@@@@@B[@^B/RA@@@@@TIMEON@@@@@>[@ B;)#)@@@@COMPARE     KH@@@GJX
)@@G@@[@^B/N#@@@@@COUNT K @@@@[@^B.P#@@B;)SEARCHKH@@@AC)C@@@[@[B.P@@@C@D[@ B_TJY
)@@G@@])@@@@B$$AVPW     @@@B.FC)B@@@[@]B.F@@@C@#C@ @@@#)#C[A@@@C[A@@[B.PC)B@@@JZ
)@@G@@[@]C[A@@@C@#C@ @@@]@#B_T+@MB.F@@@B8AC)B@@@[@]B8A@@@C@#C@ @@@#)#B/2@@@B/2KA
)@@G@@@@[C[AC)C@@@[@]B/2@@@C@#C@B@@@]@^B_T+B_B8A@@@@L@@@@B8#C)B@@@[@]B8#@@@C@#KB
)@@G@@C@ @@@#)#B" @@@B" @@[B/2C)A@@@[@[B" @@@C@#]@#B_T<@AB8#K @@@@C)G@@@[@]B_TKC
)@@G@@@@@K@DK@F@@@[@CC]BD)@B.PADDRANKS    #@^@]P@@6@]P1@A@@]AA @@@[@BB"[#@@@@@KD
)@@G@@LOLINKLB1@@ #@@[8@AVL$DATA    [@^B;*#@@C]BB$$IF K @@@@[@^C[X#@@@@@TIMER KE
)@@G@@K @@@]C)E@@@[@]C[X@@@K@BK@D@@@[@A@@@D@@@@@SET   #@#@]L@@6@]LK @@@@C)X@@@KF
)@@G@@]@@@]P@@@K@F#@UB9>@]P@@@@@@@@][CU@@@U@@@@#@@[@@@@@@@@@P           M]))M KG
)@@G@@LA A5,RANK,P(1,1)*2 [P(0,0)] A5,[P(1,*2)->'P(1,2),,XU'!'RANK,P(1,2)']*M KH
)@@G@@SA A5,RANK,P(1,1)*^ END@C-]@@@]@@@]Q@@@K@F#@_B;1@]Q@@@@@@@@[[C_@@@Q[@@@@KI
)@@G@@@@]@@@@@@@@@P           M]%)GA EQU P(1,1)*GB EQU P(2,1)*2B EQU B='INSERTKJ
)@@G@@'->0!B='SEARCH'->1!B='DELETE'->2!-1*ZA EQU A='RANK'->0!A='KEY'->1!-1*Z DKK
)@@G@@O $PAR(4)='SNOOPY' , SLJ TON$*O LXI,U A2,A*/12+B*/6*V DO A=0 , LA,U A4,AKL
)@@G@@VL$RTEST*Q DO A=1 , LA A4,KEYRTN*N LMJ A3,AVL$ROUTINE*T DO B<>1 , J AVL$KM
)@@G@@[P(2,1)]*) DO $PAR(4)='SNOOPY' , SLJ TOFF$*C J 0,X11*^ END@BC)M@@@]@@@]SKN
)@@G@@@@@K@F#@JC[<@]S@@@@@@@@[[CJ@@@M@@@@@@@@@@@@@@@@@STATDEF     M#7)D** EQU KO
)@@G@@S$*GS$* EQU S$+3*^ END@TC)S@@@]@@@]O@@@K@F#@PB_\@]O@@@@@@@@[[CP@@@M@@@@@KP
)@@G@@@@@@@@@@@@@@F           M]S). END $L1('AVL$':(F(1)<0->'N'!''):'A',F(2),FKQ
)@@G@@(1)<0->-F(1)!F(1))@PWS,PC-#@@@]@[@]L@@@K@B]-@B'3@]L@@@@@@@@][D@@]MM@@@@@KR
)@@G@@@@]@@@@@@@@@P           M[\)HT0 EQU P(0,0)*OT1 EQU $TYPE(P(1,1))*OT2 EQUKS
)@@G@@ $TYPE(P(2,1))*G $IF T1=T2=1*) P(1)=P(2)=1->P(1,1)=P(2,1)->END*Q $IF P(2KT
)@@G@@)=2->A3<P(2,2)*J LX XREG,P(2,2)*JP(2,2) EQU XREG*A $ENDF(# DO P(1)<=P(2)KU
)@@G@@ , L P(2)=P(1)=2->AREG!P(1,1),P(2,1),P(2)=2->P(2,2)!0*Q $IF P(1)=2->A3<PKV
)@@G@@(1,2)*J LX XREG,P(1,2)*JP(1,2) EQU XREG*A $ENDF8K DO T0=1<P(1) , CC)<@@@KW
)@@G@@]@@@]R@@@K@F#@)@@@@]R@@@@@@@@[[C)@@@M@@@@@@@@@@@@@@@@@STATD       M#!)CSKX
)@@G@@$ EQU 0*IINSERT STATDEF*IDELETE STATDEF*ISEARCH STATDEF*JBALANCE STATDEFKY
)@@G@@*JCOMPARE STATDEF*JSROTATE STATDEF*JDROTATE STATDEF*^ END@Y'C-#@@@]@[@]MKZ
)@@G@@@@@K@B]-@B9D@]M@@@@@@@@[@-@@]N)HTZ,U 0,P(1,2)*0 DO P(1)=2 , S P(2)=2->ARLA
)@@G@@EG!P(2,1),P(1,1),P(1,2)*F $ELSF T1=1*U $IF (A3>=P(2,1,2)>=X11)=0*L LX XRLB
)@@G@@EG,P(2,1,2)*LP(2,1,2) EQU XREG*A $ENDF*\ EX [P(2,1,1):'LOAD':$CD(P(2,1,2LC
)@@G@@)-10)],P(2,1,3)*< SET P(1,1)[P(1)=2->',P(1,2)'] AREG*F $ELSF T2=1*U $IF LD
)@@G@@(A3>=P(1,1,2)>=X11)=0*L LX XREG,P(1,1,2)*LP(1,1,2) EQU XREG*A $ENDF8) SELE
)@@G@@T AREG P(2,1)[P(2)=2->',P(2,2CC)Z@@@]@@@]N@@@@@@#@W@@@@]N@@@@@@@@[@)W@@@LF
)@@G@@)#)']*S DO T0 , TZ,U 0,P(1,1,2)*\ EX [P(1,1,1):'STOR':$CD(P(1,1,2)-10)],LG
)@@G@@P(1,1,3)*A $ELSE*K SET AREG P(2,1)*K SET P(1,1) AREG*A $ENDF*^ END@ XREGLH
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___LI
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___LJ
)@@G@@*MASM*C)F@@@[@]B9^@@@K@BK@D@@@[@BB;!D@@@@@AVLSK #@^@[L@@6@[L1@A@@ AVLSK LK
)@@G@@C)H@@@[@]B;!@@@K@DK@F@@@[@DB94D)@@@@AVL$STATCLR #@ @[Q@@6@[Q1@A@@FAVL$STLL
)@@G@@ATCLR C)F@@@[@]B94@@@K@BK@D@@@[@BB/+D@@@@@AVLDN #@^@[M@@6@[M1@A@@ AVLDN LM
)@@G@@C)H@@@[@]B/+@@@K@DK@F@@@[@DB'"D)@@@@AVL$STATS   #@ @[Q@@6@[Q1@A@@DAVL$STLN
)@@G@@ATS ST[@ B_0#)@@@@PREORDER    K @@[@C)F@@@[@]B_0@@@K@DK@F@@@[@BB;CD)@@@@LO
)@@G@@AVL$TREE    #@#@[U@@6@[UK @@@@[@ B;M#)@@@@POSTORDER   K @][@[@ B/:#)@@@@LP
)@@G@@REVINORDER  K @^[@C)F@@@[@]B/:@@@K@DK@F@@@[@BB8.D)@@@@AVL$FIELDS  #@#@[RLQ
)@@G@@@@6@[RK @@@@C)F@@@[@]B8.@@@K@BK@D@@@[@BB;HD@@@@@AVLIR #@^@[L@@6@[L1@A@@ LR
)@@G@@AVLIR [@ CB=#)@@@@REVPREORDER K @#[@C)E@@@[@]CB=@@@K@DK@F@@@[@AB_:D)@B;HLS
)@@G@@AVL$SRCH    @@]@[&@@6@[&[@ C],#)@@@@AVL$$PF     K @@@@C)E@@@[@]C],@@@K@DLT
)@@G@@K@F@@@[@AB"=D)@B_:AVL$BALN    @@]@[-@@6@[-C)F@@@[@]B"=@@@K@DK@F@@@[@BB;#LU
)@@G@@D)@@@@AVL$NODES   #@#@[T@@6@[TK @@@@[@ B.+#)@@@@INORDER     K @[[@C)F@@@LV
)@@G@@[@]B.+@@@K@DK@F@@@[@BB']D)@@@@AVL$PKT     #@#@[S@@6@[SK @@@@C)E@@@[@]B']LW
)@@G@@@@@K@BK@D@@@[@AB;WD@@@@@AVLDSP#@#@[N@@6@[NK @@@@C)E@@@[@]B;W@@@K@BK@D@@@LX
)@@G@@[@ACF4D@@@@@AVLTRA#@#@[P@@6@[PK @@@@C)E@@@[@]CF4@@@K@DK@F@@@[@AB8WD)@B;WLY
)@@G@@AVL$CMPK    @@]@[(@@6@[(C)F@@@[@]B8W@@@K@BK@D@@@[@BB9!D@@@@@AVLIK #@^@[LLZ
)@@G@@@@6@[L1@A@@ AVLIK C)F@@@[@]B9!@@@K@BK@D@@@[@BB9MD@@B8WAVLDR #@^@[M@@6@[MMA
)@@G@@1@A@@ AVLDR C)F@@@[@]B9M@@@K@BK@D@@@[@BCF@D@@@@@AVLSR #@^@[M@@6@[M1@A@@ MB
)@@G@@AVLSR C)E@@@[@]CF@@@@K@DK@F@@@[@AB9FD)@@@@AVL$CMPR    @@]@[*@@6@[*C)F@@@MC
)@@G@@[@]B9F@@@K@BK@D@@@[@BB9;D@@@@@AVLDK #@^@[L@@6@[L1@A@@ AVLDK C)F@@@[@]B9;MD
)@@G@@@@@K@BK@D@@@[@BB;RD@@@@@AVLCR #@^@[M@@6@[M1@A@@ AVLCR [@ B'Y#)@@@@REVPOSME
)@@G@@TORDERK @ [@C)F@@@[@]B'Y@@@K@DK@F@@@[@BC@$D)@@@@AVLDSPKT    #@#@[O@@6@[OMF
)@@G@@K @@@@C)F@@@[@]C@$@@@K@DK@F@@@[@B@@@D)@@@@AVL$INIT    #@#@[W@@6@[WK @@@@MG
)@@G@@C-#@@@]@[@[W@@@K@B]-@B'C@[W@@@@@@@@[[D@@[XM@@@@@@B_@@@@@@@@@P$          MH
)@@G@@M#4)GT EQU AVL$$K*KI $REPEAT 1,P$-1*FP EQU P$(I)*J $IF AVL$$KF(T)*MKEY EMI
)@@G@@QU $CS(P(1)R)*VASF EQU \\$IBITS(KEY)**0100*JCS EQU ASF->4!6*ORKS EQU $SLMJ
)@@G@@(KEY)//CS(BKEY EQU $C[ASF->'A'!'F']S(KEY:$SR($SS(AVL$$FW(T),1,1),CS*RKS-MK
)@@G@@$SL(KEY)))*-KS EQU AVL$$KS(T)->AVL$$KS(T)!RKS*A $ELSE*HRNK EQU +P(1)*CKSML
)@@G@@ EQU 0*A $ENDF*D AVL$SRCHTD0G $DO $LP->K<CC)T@@@]@@@[O@@@K@F#@QCFA@[O@@@MM
)@@G@@@@@@@[[CQ@@@E@@@@]@@#@@@@@@@@@P           M[[)? $GFORM 6,P(1,1),6,P(1,2)MN
)@@G@@,6,P(1,3),18,P(2,1)*K * P(3,1),P(3,2)*^ END@TDEFC)X@@@]@@@[*@@@K@F#@UCF)MO
)@@G@@@[*@@@@@@@@[[CU@@@M@@@@@@@@@@@@@@@@@AVL$CMPR    MBT)2CMP* EQU RNK=AVL$$RMP
)@@G@@K(T,K)->1!RNK<AVL$$RK(T,K)->2!3*F CMP<3->END*TRNK* EQU RNK-AVL$$RK(T,K)*MQ
)@@G@@^ END@C)R@@@]@@@[(@@@K@F#@OB'>@[(@@@@@@@@[[CO@@@M@@@@@@@@@@@@@@@@@AVL$CMMR
)@@G@@PK    MBY)4CMP* EQU KEY=AVL$$KEY(T,K)->1!KEY<AVL$$KEY(T,K)->2!3*^ END@>EMS
)@@G@@C)W@@@]@@@[P@@@K@F#@TB9T@[P@@@@@@@@[[CT@@@M@@@@@@@]@@@@@@@@@P           MT
)@@G@@M[M)A FUNC$*X DO P(1)>0 , LA 12,AF(P(1),1)*I LMJ 11,AVLTRA*T DO P(2)>0 ,MU
)@@G@@ J AF(P(2),1)*^ END@^EB&C)R@@@]@@@[N@@@K@F#@OB/2@[N@@@@@@@@[[CO@@@M@@@@@MV
)@@G@@@@[@@@@@@@@@P           L8)A FUNC$*Y DO P(1)>0 , LA 12,AF(P(1),*1)*I LMJMW
)@@G@@ 11,AVLDSP*^ END@PC)3@@@]@@@[S@@@K@F#@0B.(@[S@@@@@@@@[[C0@@@M@@@@@@@]@@@MX
)@@G@@@@@@@@P           M[7)IRKI EQU P(2)>0*&SIZ EQU RKI->$TSTR(P(2,1))->0!P(2MY
)@@G@@,1)!0*ZCEX EQU $TSTR(P(2,1))->P(2,1)!0*RNN EQU P(1)>1->P(1,2)!0** $GFORMMZ
)@@G@@ 6,0,6,RKI,6,SIZ,18,P(1,1),36,CEX*. $GFORM 18,NN,18,P(2)>1->P(2,2)!AVL$KNA
)@@G@@TEST[0<=SIZ<9->$CD(SIZ)]*^ END@@@@@@C)"@@@]@@@[T@@@K@F#@;C =@[T@@@@@@@@[NB
)@@G@@[C;@@@M@@@@@@@[@@@@@@@@@P           M]])E $LEVEL ,1*UAVLNODE EQUF P(1,1)NC
)@@G@@,P(1,2)*RAVLLFL EQUF AVLNODE,,H1*RAVLRTL EQUF AVLNODE,,H2*TAVLUPL EQUF AND
)@@G@@VLNODE+1,,H1*TAVLKSZ EQUF AVLNODE+1,,S4*TAVLBAL EQUF AVLNODE+1,,S5*SAVLFNE
)@@G@@S EQUF AVLNODE+1,,S6*TAVLRNK EQUF AVLNODE+2,,H1*SAVLFH EQUF AVLNODE+2,,HNF
)@@G@@2*PAVLKEY EQUF AVLNODE+3*GAVLNHL EQU 3*^ END@PW C-#@@@]@[@[-@@@K@B]-@CD4NG
)@@G@@@[-@@@@@@@@[[D@@[+M@@@@@@@@@@@@@@@@@AVL$BALN    M =)CA EQU BN*ZB EQU AVLNH
)@@G@@$$LK(T,A,AVL$$BF(T,A))*RSR EQU \AVL$$BF(T,B)=A$*S $IF AVL$$BF(T,B)->\SR!NI
)@@G@@1T^)J $LEVEL ,$LEV-1*+AVL$$LK(T,B,3) $EQU AVL$$LK(T,A,3)*B $LEVEL*QX EQUNJ
)@@G@@ AVL$$LK(T,B,NA$)*J $LEVEL ,$LEV-1*QAVL$$LK(T,A,A$) $EQU X*Y DO X>0 ,AVLNK
)@@G@@$$LK(T,X,3) $EQU A*PAVL$$LK(T,A,3) $EQU B*RAVL$$LK(T,B,NA$) $EQU A*B $IFNL
)@@G@@ SR8GAVL$$BF(T,A)CC-#@@@]@[@[&@@@K@B]-@B;6@[&@@@@@@@@[[D@@[$M@@@@@@@@@@@NM
)@@G@@@@@@@@AVL$SRCH    MA;)LK* EQU AVL$$RT(T)*DFK* EQU 0*0RTN EQU $L1('AVL$CMNN
)@@G@@PK','AVL$CMPR')(2-AVL$$KF(T))*DBN* EQU K*DRN* EQU 0*DSL* EQU 0*C $REPEATNO
)@@G@@*F K=0->$ENDI*A [RTN]*E $IF CMP=1*R $LP++AVL$$KF(T)->$ENDI*A $ELSE*X DO NP
)@@G@@AVL$$BF(T,K)>0 ,BN* EQU K*DFK* EQU K*E $IF CMP=3*PK* EQU AVL$$LK(T,K,1)*NQ
)@@G@@DSL* EQU 1*A $ELSE*N DO RN=0 ,RN* EQU K*DSL* EQU 28BK* EQU CC)\@@@]@@@[RNR
)@@G@@@@@K@F#@?B":@[R@@@@@@@@[[C?@@@M@@@@@@@[@@@@@@@@@P           M[&)E $LEVELNS
)@@G@@ ,1*TAVLPKT EQUF P(1,1),P(1,2)*QAVLRKF EQUF AVLPKT,,S2*PAVLKS EQUF AVLPKNT
)@@G@@T,,S3*RAVLROOT EQUF AVLPKT,,H2*OAVLCEX EQUF AVLPKT+1*RAVLNN EQUF AVLPKT+NU
)@@G@@2,,H1*SAVLKCR EQUF AVLPKT+2,,H2*GAVLPKL EQU 3*^ END@1JC-#@@@]@[@[U@@@K@BNV
)@@G@@]-@B8<@[U@@@@@@@@[[D@@[VM@@@@@@@[@@@@@@@@@P           M#P)J $LEVEL ,$LEVNW
)@@G@@-1*Y DO $LP=AVL$$PF ,AVL$$K $EQU 0*+ DO $LP=AVL$$PF ,AVL$$PF $EQU \$LP*ONX
)@@G@@AVL$$K $EQU AVL$$K+1*B $LEVEL*GT EQU AVL$$K*B IF $LP*YROOT EQU AVL$$AD(TNY
)@@G@@,AVL$$RT(T))*LNN EQU AVL$$AD(T)*6 DO P(1)>0 , AVL$PKT ROOT,NN P(1,1)[P(1NZ
)@@G@@)>1->',P(1,2)']*W DO P(1)=0 , AVL$PKT ROOT,NN*B 1->END*  ENDF*J $LEVEL ,OA
)@@G@@$LEV-18JAVL$$KF(T) $EQUCC)X@@@]@@@[M@@@K@F#@UB;+@[M@@@@@@@@^[CU@@@M@@@@@OB
)@@G@@@@]@@@@@@@@@P           L,)A FUNC$*X DO P(2)>0 , LA 13,AF(P(2),1)*Y DO POC
)@@G@@(1)>0 , LA 12,AF(P(1),*1)*K LMJ 11,[P(0,0)]*^ END@F(P(C)I@@@]@@@[Q@@@K@FOD
)@@G@@#@FB7/@[Q@@@@@@@@][CF@@@E@@@@@@@@@@@@@@@@@P           M[))^ END@$*C)<@@@OE
)@@G@@]@@@[L@@@K@F#@)@@@@[L@@@@@@@@^[C)@@@M@@@@@@@]@@@@@@@@@P           L))A FOF
)@@G@@UNC$*Y DO P(2)>1 , LA 13,AF(P(2),*2)*) DO P(2)>0 , LXI 13,AF(P(2),1,1)*YOG
)@@G@@ DO P(1)>0 , LA 12,AF(P(1),*1)*K LMJ 11,[P(0,0)]*^ END@)*L LC)3@@@]@@@[VOH
)@@G@@@@@@@@#@0C[,@[V@@@@@@@@[@)0@@@)B P(1)>0*$AVL$$KS(T) $EQU $TSTR(P(1,1))->OI
)@@G@@0!P(1,1)*LAVL$$RT(T) $EQU 0*PAVL$$GF(T) $EQU $NODE*PAVL$$AD(T) $EQU $NODOJ
)@@G@@E*QAVL$$KEY(T) $EQU $NODE*PAVL$$LK(T) $EQU $NODE*PAVL$$RK(T) $EQU $NODE*OK
)@@G@@PAVL$$BF(T) $EQU $NODE*$AVL$$FW(T) $EQU $TSTR(P(1,1))->P(1,1)!0*A RES 3*OL
)@@G@@^ END@C-#@@@]@[@[X@@@K@B]-@C]4@[X@@@@@@@@[@-@@[Y)I>0 , $GO PASS2*F K>0->OM
)@@G@@$ENDR*MK EQU 1+AVL$$AD(T)*J $LEVEL ,$LEV-1*NAVL$$GF(T,K) $EQU 0*NAVL$$ADON
)@@G@@(T,K) $EQU $*& DO AVL$$KF(T) ,AVL$$KEY(T,K) $EQU KEY*QAVL$$LK(T,K,3) $EQOO
)@@G@@U FK*NAVL$$RK(T,K) $EQU 1*NAVL$$BF(T,K) $EQU 0*B $IF FK*RAVL$$LK(T,FK,SLOP
)@@G@@) $EQU K*A $ELSE*LAVL$$RT(T) $EQU K*A $ENDF*PAVL$$LK(T,K,1) $EQU 0*PAVL$OQ
)@@G@@$LK(T,K,2) $EQU 0*B $LEVELT )FBNSON EQU 08^RNKFCC-#@@@]@[@[Y@@@K@B]-@C#4OR
)@@G@@@[Y@@@@@@@@[@-@@[Z)A EQU 1*EBALF EQU 1*BX EQU K*C $REPEAT*OY EQU AVL$$LKOS
)@@G@@(T,X,3)*F Y=0->$ENDI*L $IF BALF**(BN=Y)*EBALF EQU 0*FBNSON EQU X*A $ENDFOT
)@@G@@*J $LEVEL ,$LEV-1*P $IF X=AVL$$LK(T,Y,2)*X DO BALF ,AVL$$BF(T,Y) $EQU 2*OU
)@@G@@D $IF RNKF*)AVL$$RK(T,Y) $EQU AVL$$RK(T,Y)+1*B $LEVEL*O DO Y=RN ,RNKF EQOV
)@@G@@U 0*A $ENDF*F $ELSF BALF*NAVL$$BF(T,Y) $EQU 1*A $ENDF*B $LEVEL*N BALF=RNOW
)@@G@@KF=0->$ENDI8^X EQCC-#@@@]@[@[Z@@@K@B]-@C^4@[Z@@@@@@@@[@-@@[))#U Y*A $ENDOX
)@@G@@R*E $IF BNSON*-A$ EQU BNSON=AVL$$LK(T,BN,1)->1!2*HNA$ EQU A$--3*J $LEVELOY
)@@G@@ ,$LEV-1*O $IF AVL$$BF(T,BN)=0*PAVL$$BF(T,BN) $EQU A$*S $ELSF AVL$$BF(T,OZ
)@@G@@BN)<>A$*OAVL$$BF(T,BN) $EQU 0*A $ELSE*B $LEVEL*D AVL$BALN*A $ENDF*B $LEVPA
)@@G@@EL*G $ENDF BNSON*A RES 3*R DO AVL$$KF(T) , RES KS*D 1->$ENDR*EPASS2 NAMEPB
)@@G@@*O AVL$$GF(T,K)->$ENDR*)LL EQU AVL$$AD(T,AVL$$LK(T,K,2))8[RCC)3@@@]@@@[)PC
)@@G@@@@@@@@#@0CA=@[)@@@@@@@@[@)0@@@)ZL EQU AVL$$AD(T,AVL$$LK(T,K,1))*)UL EQU PD
)@@G@@AVL$$AD(T,AVL$$LK(T,K,3))*0 GFORM 18,LL,18,RL,18,UL,6,KS,6,AVL$$BF(T,K),PE
)@@G@@6,0*O * AVL$$RK(T,K),P(2)*J $IF AVL$$KF(T)*A * KEY*T DO KS-RKS , * AVL$$PF
)@@G@@FW(T)*A $ENDF*J $LEVEL ,$LEV-1*NAVL$$GF(T,K) $EQU 1*B $LEVEL*A $ENDR*^ EPG
)@@G@@ND@$$KC-#@@@]@[@[+@@@K@B]-@CB%@[+@@@@@@@@[@-@@[<)C $EQU A$*PAVL$$BF(T,B)PH
)@@G@@ $EQU NA$*A $ELSE*NAVL$$BF(T,A) $EQU 0*NAVL$$BF(T,B) $EQU 0*A $ENDF*D $IPI
)@@G@@F A$=1*:AVL$$RK(T,B) $EQU AVL$$RK(T,B)+AVL$$RK(T,A)*A $ELSE*:AVL$$RK(T,APJ
)@@G@@) $EQU AVL$$RK(T,A)-AVL$$RK(T,B)*A $ENDF*A $ELSET^)QC EQU AVL$$LK(T,B,NAPK
)@@G@@$)*J $LEVEL ,$LEV-1*+AVL$$LK(T,C,3) $EQU AVL$$LK(T,A,3)*B $LEVEL*PX EQU PL
)@@G@@AVL$$LK(T,C,A$)*J $LEVEL ,$LEV-18HAVL$$LK(T,B,NCC-#@@@]@[@[<@@@K@B]-@CC%PM
)@@G@@@[<@@@@@@@@[@-@@[=)EA$) $EQU X*Y DO X>0 ,AVL$$LK(T,X,3) $EQU B*QAVL$$LK(PN
)@@G@@T,C,A$) $EQU B*PAVL$$LK(T,B,3) $EQU C*B $LEVEL*QX EQU AVL$$LK(T,C,NA$)*JPO
)@@G@@ $LEVEL ,$LEV-1*QAVL$$LK(T,A,A$) $EQU X*Y DO X>0 ,AVL$$LK(T,X,3) $EQU A*PP
)@@G@@RAVL$$LK(T,C,NA$) $EQU A*PAVL$$LK(T,A,3) $EQU C*B $LEVEL*MX EQU AVL$$BF(PQ
)@@G@@T,C)*J $LEVEL ,$LEV-1*XAVL$$BF(T,A) $EQU X=A$->NA$!0*XAVL$$BF(T,B) $EQU PR
)@@G@@X=NA$->A$!08^AVL$CC-#@@@]@[@[=@@@K@B]-@CD%@[=@@@@@@@@[@-@@[>)J$BF(T,C) $PS
)@@G@@EQU 0*D $IF A$=1*:AVL$$RK(T,B) $EQU AVL$$RK(T,B)-AVL$$RK(T,C)*:AVL$$RK(TPT
)@@G@@,C) $EQU AVL$$RK(T,C)+AVL$$RK(T,A)*A $ELSE*:AVL$$RK(T,C) $EQU AVL$$RK(T,PU
)@@G@@C)+AVL$$RK(T,B)*:AVL$$RK(T,A) $EQU AVL$$RK(T,A)-AVL$$RK(T,C)*A $ENDF*B $PV
)@@G@@LEVEL*BB EQU C*A $ENDF*B $LEVEL*OF EQU AVL$$LK(T,B,3)*J $LEVEL ,$LEV-1*CPW
)@@G@@ $IF F=0*LAVL$$RT(T) $EQU B*A $ELSE8QAVL$$LK(T,F,A=AVL$$LK(CC)H@@@]@@@[>PX
)@@G@@@@@@@@#@ECE4@[>@@@@@@@@[@)E@@@)NT,F,1)->1!2) $EQU B*A $ENDF*^ END@C)J@@@PY
)@@G@@]@@@[$@@@@@@#@G@@@@[$@@@@@@@@[@)G@@@)IAVL$$LK(T,K,2)*A $ENDF*A $ENDF*A $PZ
)@@G@@ENDR*^ END@R@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___QA
)@@G@@@@@___@@@___@@@___@@@___*[S@@@*SDFF*@^@@@@LIB$*     PROC      *0  @#@@@@QB
)@@G@@LIBRARY*  NAME    @#@@@@MASMLIB*  NAME    @ @@@@          INCLUDE   'AXRQC
)@@G@@$'    @ @@@@          INCLUDE   'EQU$'    @ @@@@          INCLUDE   'FUNQD
)@@G@@CS'   @ @@@@          INCLUDE   'PROCS'   @ @@@@          INCLUDE   'JPRQE
)@@G@@OCS'  @ @@@@          INCLUDE   'BASE$'   @C@@@@          DISPLAY   '***QF
)@@G@@  MASM LIBRARY 2.0  ***'@#@@@@          BRIEF   @#@@@@          END     QG
)@@G@@_@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@QH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@*[S@@@*SDFF*@^@@@@DUMP$*    PROC      *0  @#@@@@QI
)@@G@@DUMP*     NAME    @#@@@@          FUNC$   @ @@@@          INCLUDE   'DUMQJ
)@@G@@P'    @ @@@@          INCLUDE   'SYMBOLS' @ @@@@DUMP$*    EQU       /$NIQK
)@@G@@L     @#@@@@          END     _@@@@@CS'   @ @@@@          INCLUDE   'JPRQL
)@@G@@OCS'  @ @@@@          INCLUDE   'BASE$'   @C@@@@          DISPLAY   '***QM
)@@G@@*[S@@@*SDFF*@^@@@@P         $PROC     *0  @#@@@@FUNCS*    $NAME   @#@@@@QN
)@@G@@FUNC$*    $NAME   @ @@@@          $INCLUDE  'FUNCS'   @ @@@@FUNCS*    $EQO
)@@G@@QU      /$NIL     @ @@@@FUNC$*    $EQU      /$NIL     @#@@@@          $EQP
)@@G@@ND    _@@@@@CS'   @ @@@@          INCLUDE   'JPROCS'  @ @@@@          INQQ
)@@G@@CLUDE   'BASE$'   @C@@@@          DISPLAY   '****[S@@@*SDFF*@^@@@@P     QR
)@@G@@    $PROC     *1  @#@@@@SYMBOLS*  $NAME   @#@@@@SYMBOL$*  $NAME   @#@@@@QS
)@@G@@DUMPSYMBOLS* $NAME@#@@@@          FUNC$   @#@@@@          DUMP$   @ @@@@QT
)@@G@@          $INCLUDE  'SYMBOLS' @#@@@@          $END    _@@@@@CS'   @ @@@@QU
)@@G@@          INCLUDE   'JPROCS'  @ @@@@          INCLUDE   'BASE$'   @C@@@@QV
)@@G@@          DISPLAY   '****MASM*C)F@@@[@]C@ @@@K@DK@F@@@[@BB'[D)@@@@ELT$PKQW
)@@G@@T     #@#@@W@@6@@WK @@@@C)B@@@[@[B'[@@@C@B[@^C]2]@@@@@ELT$$N@@@B' C)B@@@QX
)@@G@@[@]B' @@@C@#C@ @@@#)#C[=@@@B'C@@EB'[C)B@@@[@]C[=@@@C@#C@ @@@]@#C[H+@EB' QY
)@@G@@@@@B"?C)B@@@[@]B"?@@@C@#C@ @@@#)#C[-@@@C@S@@]C[=C)B@@@[@]C[-@@@C@#C@ @@@QZ
)@@G@@]@#C@S+@[B"?@@@C[[C)B@@@[@]C[[@@@C@#C@ @@@#)#C@S@@@C[[@@@C[-C)B@@@[@]C@SRA
)@@G@@@@@C@#C@ @@@]@#C[H+@@C[-@@@C@8C)B@@@[@]C@8@@@C@#C@ @@@#)#C[R@@@C@"@@^C@SRB
)@@G@@C)A@@@[@[C[R@@@C@#]@#C@M<@^C@8O @@@@C)A@@@[@[C@M@@@C@#]@#B_M<@#C[RK @@@@RC
)@@G@@C)A@@@[@[B_M@@@C@#]@#C@"<@]C@MK @@@@C)A@@@[@[C@"@@@C@#]@#C[H<@[B_MK @@@@RD
)@@G@@C)B@@@[@]C[H@@@C@#C@ @@@]@#C@2+@DC[=@@@C[KC)B@@@[@]C[K@@@C@#C@ @@@#)#C[ERE
)@@G@@@@@C@?@@]C[HC)B@@@[@]C[E@@@C@#C@ @@@]@#C@?+@[C[K@@@C[BC)B@@@[@]C[B@@@C@#RF
)@@G@@C@ @@@#)#C@G@@@C@G@@[C[EC)B@@@[@]C@G@@@C@#C@ @@@]@#C@?+@)C[B@@@B_'C)B@@@RG
)@@G@@[@]B_'@@@C@#C@ @@@#)#B_S@@@B;G@@]C@GC)C@@@[@[B_S@@@C@#]@ B;G<@]B_'1@A@@ARH
)@@G@@ARCCYC      C)A@@@[@[B;G@@@C@#]@#C@?<@[B_SKH@@@EC)B@@@[@]C@?@@@C@#C@ @@@RI
)@@G@@]@#C@2+@@C[E@@@B.3C)B@@@[@]B.3@@@C@#C@ @@@#)#C@$@@@B"2@@^C@?C)C@@@[@[C@$RJ
)@@G@@@@@C@#]@ C@=<@^B.3OD@@@@@@J_@@S@@@@@C)A@@@[@[C@=@@@C@#]@#C@-<@#C@$K @@@ARK
)@@G@@C)A@@@[@[C@-@@@C@#]@#B"2<@]C@=KH@@@DC)A@@@[@[B"2@@@C@#]@#C@2<@[C@-KH@@@CRL
)@@G@@C)B@@@[@]C@2@@@C@#C@ @@@]@#B_4+@CC[H@@@C@5C)B@@@[@]C@5@@@C@#C@ @@@#)#C@\RM
)@@G@@@@@B_,@@]C@2C)B@@@[@]C@\@@@C@#C@ @@@]@#B_,+@[C@5@@@C@YC)B@@@[@]C@Y@@@C@#RN
)@@G@@C@ @@@#)#B"\@@@B"\@@[C@\C)B@@@[@]B"\@@@C@#C@ @@@]@#B_,+@(C@Y@@@B/3C)B@@@RO
)@@G@@[@]B/3@@@C@#C@ @@@#)#B.6@@@B/N@@]B"\C)C@@@[@[B.6@@@C@#]@ B/N<@]B/31@A@@ARP
)@@G@@ARCSTO      C)A@@@[@[B/N@@@C@#]@#B_,<@[B.6KH@@@DC)B@@@[@]B_,@@@C@#C@ @@@RQ
)@@G@@]@#B_4+@@C@\@@@B.IC)B@@@[@]B.I@@@C@#C@ @@@#)#B_(@@@B"(@@^B_,C)C@@@[@[B_(RR
)@@G@@@@@C@#]@ B_&<@^B.IOD@@@@@@J_@CF____@C)A@@@[@[B_&@@@C@#]@#B_<<@#B_(K @@@GRS
)@@G@@C)A@@@[@[B_<@@@C@#]@#B"(<@]B_&KH@@@CC)A@@@[@[B"(@@@C@#]@#B_4<@[B_<KH@@@BRT
)@@G@@C)B@@@[@]B_4@@@C@#C@ @@@]@#B_D+@BC@2@@@B_7C)B@@@[@]B_7@@@C@#C@ @@@#)#B_1RU
)@@G@@@@@B_#@@]B_4C)B@@@[@]B_1@@@C@#C@ @@@]@#B_#+@[B_7@@@B_)C)B@@@[@]B_)@@@C@#RV
)@@G@@C@ @@@#)#B/Q@@@C@J@@]B_1C)B@@@[@]B/Q@@@C@#C@ @@@]@#C@J+@/B_)@@@B"PC)B@@@RW
)@@G@@[@]B"P@@@C@#C@ @@@#)#B7_@@@B'(@@]B/QC)C@@@[@[B7_@@@C@#]@ B'(<@]B"P1@A@@ARX
)@@G@@ARCSTO      C)A@@@[@[B'(@@@C@#]@#C@J<@[B7_KH@@@CC)B@@@[@]C@J@@@C@#C@ @@@RY
)@@G@@]@#B_#+@(B/Q@@@B.AC)B@@@[@]B.A@@@C@#C@ @@@#)#C@@@@@B"&@@]C@JC)C@@@[@[C@@RZ
)@@G@@@@@C@#]@ B"&<@]B.A1@A@@AARCSTO      C)A@@@[@[B"&@@@C@#]@#B_#<@[C@@KH@@@DSA
)@@G@@C)B@@@[@]B_#@@@C@#C@ @@@]@#B_D+@@B_1@@@B.!C)B@@@[@]B.!@@@C@#C@ @@@#)#B""SB
)@@G@@@@@B8^@@^B_#C)C@@@[@[B""@@@C@#]@ B";<@^B.!OD@@@@@@J_@CF____@C)A@@@[@[B";SC
)@@G@@@@@C@#]@#B"8<@#B""K @@@GC)A@@@[@[B"8@@@C@#]@#B8^<@]B";KH@@@BC)A@@@[@[B8^SD
)@@G@@@@@C@#]@#B_D<@[B"8KH@@@AC)B@@@[@]B_D@@@C@#C@ @@@]@#B"J+@AB_4@@@B_GC)B@@@SE
)@@G@@[@]B_G@@@C@#C@ @@@#)#B_A@@@B"D@@]B_DC)B@@@[@]B_A@@@C@#C@ @@@]@#B"D+@[B_GSF
)@@G@@@@@B"5C)B@@@[@]B"5@@@C@#C@ @@@#)#B"<@@@B"<@@[B_AC)B@@@[@]B"<@@@C@#C@ @@@SG
)@@G@@]@#B"D+@.B"5@@@C^UC)B@@@[@]C^U@@@C@#C@ @@@#)#B.D@@@B.W@@]B"<C)C@@@[@[B.DSH
)@@G@@@@@C@#]@ B.W<@]C^U1@A@@AARCSTO      C)A@@@[@[B.W@@@C@#]@#B"D<@[B.DKH@@@BSI
)@@G@@C)B@@@[@]B"D@@@C@#C@ @@@]@#B"J+@@B_A@@@B;AC)B@@@[@]B;A@@@C@#C@ @@@#)#B"^SJ
)@@G@@@@@B")@@^B"DC)C@@@[@[B"^@@@C@#]@ B"[<@^B;AOD@@@@@G__\______ZC)A@@@[@[B"[SK
)@@G@@@@@C@#]@#B."<@#B"^K @@@AC)A@@@[@[B."@@@C@#]@#B")<@]B"[KH@@@ C)A@@@[@[B")SL
)@@G@@@@@C@#]@#B"J<@[B."KH@@@ C)B@@@[@]B"J@@@C@#C@ @@@]@#B.#+@ B_D@@@B"MC)B@@@SM
)@@G@@[@]B"M@@@C@#C@ @@@#)#B"G@@@B/$@@]B"JC)B@@@[@]B"G@@@C@#C@ @@@]@#B/$+@[B"MSN
)@@G@@@@@B.;C)B@@@[@]B.;@@@C@#C@ @@@#)#B.0@@@B8B@@]B"GC)B@@@[@]B.0@@@C@#C@ @@@SO
)@@G@@]@#B8B+@.B.;@@@B;'C)B@@@[@]B;'@@@C@#C@ @@@#)#B"V@@@B/.@@]B.0C)C@@@[@[B"VSP
)@@G@@@@@C@#]@ B/.<@]B;'1@A@@AARCSTO      C)A@@@[@[B/.@@@C@#]@#B8B<@[B"VKH@@@BSQ
)@@G@@C)B@@@[@]B8B@@@C@#C@ @@@]@#B/$+@/B.0@@@B8PC)B@@@[@]B8P@@@C@#C@ @@@#)#B;.SR
)@@G@@@@@B_X@@]B8BC)C@@@[@[B;.@@@C@#]@ B_X<@]B8P1@A@@AARCSTO      C)A@@@[@[B_XSS
)@@G@@@@@C@#]@#B/$<@[B;.KH@@@AC)B@@@[@]B/$@@@C@#C@ @@@]@#B.#+@@B"G@@@B;@C)B@@@ST
)@@G@@[@]B;@@@@C@#C@ @@@#)#B/+@@@B9-@@^B/$C)C@@@[@[B/+@@@C@#]@ B/Z<@^B;@OD@@@@SU
)@@G@@@G__\______ZC)A@@@[@[B/Z@@@C@#]@#B/W<@#B/+K @@@AC)A@@@[@[B/W@@@C@#]@#B9-SV
)@@G@@<@]B/ZKH@@@^C)A@@@[@[B9-@@@C@#]@#B.#<@[B/WKH@@@^C)B@@@[@]B.#@@@C@#C@ @@@SW
)@@G@@]@#B/!+@^B"J@@@B9VC)B@@@[@]B9V@@@C@#C@ @@@#)#B.@@@@B/E@@]B.#C)B@@@[@]B.@SX
)@@G@@@@@C@#C@ @@@]@#B/E+@[B9V@@@B/KC)B@@@[@]B/K@@@C@#C@ @@@#)#B/H@@@B.T@@]B.@SY
)@@G@@C)B@@@[@]B/H@@@C@#C@ @@@]@#B.T+@.B/K@@@B.LC)B@@@[@]B.L@@@C@#C@ @@@#)#B.>SZ
)@@G@@@@@B.+@@]B/HC)C@@@[@[B.>@@@C@#]@ B.+<@]B.L1@A@@AARCSTO      C)A@@@[@[B.+TA
)@@G@@@@@C@#]@#B.T<@[B.>KH@@@BC)B@@@[@]B.T@@@C@#C@ @@@]@#B/E+@/B/H@@@B.ZC)B@@@TB
)@@G@@[@]B.Z@@@C@#C@ @@@#)#B.O@@@B.%@@]B.TC)C@@@[@[B.O@@@C@#]@ B.%<@]B.Z1@A@@ATC
)@@G@@ARCSTO      C)A@@@[@[B.%@@@C@#]@#B/E<@[B.OKH@@@ C)B@@@[@]B/E@@@C@#C@ @@@TD
)@@G@@]@#B/!+@@B.@@@@B9=C)B@@@[@]B9=@@@C@#C@ @@@#)#B/'@@@B;D@@^B/EC)A@@@[@[B/'TE
)@@G@@@@@C@#]@#B;4<@^B9=O @@@@C)A@@@[@[B;4@@@C@#]@#C@V<@#B/'K @@@@C)A@@@[@[C@VTF
)@@G@@@@@C@#]@#B;D<@]B;4K @@@@C)A@@@[@[B;D@@@C@#]@#B/!<@[C@VK @@@@C)B@@@[@]B/!TG
)@@G@@@@@C@#C@ @@@]@#B;<+@#B.#@@@B/0C)B@@@[@]B/0@@@C@#C@ @@@#)#B/%@@@B;X@@]B/!TH
)@@G@@C)B@@@[@]B/%@@@C@#C@ @@@]@#B;X+@[B/0@@@B/TC)B@@@[@]B/T@@@C@#C@ @@@#)#B9%TI
)@@G@@@@@B9%@@[B/%C)B@@@[@]B9%@@@C@#C@ @@@]@#B;X+@)B/T@@@B'&C)B@@@[@]B'&@@@C@#TJ
)@@G@@C@ @@@#)#C^)@@@B'7@@]B9%C)C@@@[@[C^)@@@C@#]@ B'7<@]B'&1@A@@AARCSTO      TK
)@@G@@C)A@@@[@[B'7@@@C@#]@#B;X<@[C^)KH@@@^C)B@@@[@]B;X@@@C@#C@ @@@]@#B;<+@@B/%TL
)@@G@@@@@B9YC)B@@@[@]B9Y@@@C@#C@ @@@#)#B;S@@@B/]@@^B;XC)C@@@[@[B;S@@@C@#]@ B;PTM
)@@G@@<@^B9YOD@@@@@@J_@@S@@@@@C)A@@@[@[B;P@@@C@#]@#B;M<@#B;SK @@@AC)A@@@[@[B;MTN
)@@G@@@@@C@#]@#B/]<@]B;PKH@@@#C)A@@@[@[B/]@@@C@#]@#B;<<@[B;MKH@@@#C)B@@@[@]B;<TO
)@@G@@@@@C@#C@ @@@]@#B'C+@]B/!@@@B;&C)B@@@[@]B;&@@@C@#C@ @@@#)#B;)@@@B9;@@]B;<TP
)@@G@@C)B@@@[@]B;)@@@C@#C@ @@@]@#B9;+@[B;&@@@B;JC)B@@@[@]B;J@@@C@#C@ @@@#)#B8JTQ
)@@G@@@@@B')@@#B;)C)B@@@[@]B8J@@@C@#C@ @@@]@#B;#+@.B;J@@@B;(C)B@@@[@]B;(@@@C@#TR
)@@G@@C@ @@@#)#B/ @@@B;7@@]B8JC)C@@@[@[B/ @@@C@#]@ B;7<@]B;(1@A@@AARCSTO      TS
)@@G@@C)A@@@[@[B;7@@@C@#]@#B;#<@[B/ KH@@@BC)B@@@[@]B;#@@@C@#C@ @@@]@#B')+@/B8JTT
)@@G@@@@@C^>C)B@@@[@]C^>@@@C@#C@ @@@#)#B;\@@@B'?@@]B;#C)C@@@[@[B;\@@@C@#]@ B'?TU
)@@G@@<@]C^>1@A@@AARCSTO      C)A@@@[@[B'?@@@C@#]@#B')<@[B;\KH@@@ C)B@@@[@]B')TV
)@@G@@@@@C@#C@ @@@]@#B9;+@(B;#@@@C^XC)B@@@[@]C^X@@@C@#C@ @@@#)#C^:@@@C^O@@]B')TW
)@@G@@C)C@@@[@[C^:@@@C@#]@ C^O<@]C^X1@A@@AARCSTO      C)A@@@[@[C^O@@@C@#]@#B9;TX
)@@G@@<@[C^:KH@@@#C)B@@@[@]B9;@@@C@#C@ @@@]@#B'C+@@B;)@@@B8SC)B@@@[@]B8S@@@C@#TY
)@@G@@C@ @@@#)#B96@@@B''@@^B9;C)C@@@[@[B96@@@C@#]@ B93<@^B8SOD@@@@@@J_@CF____@TZ
)@@G@@C)A@@@[@[B93@@@C@#]@#B90<@#B96K @@@GC)A@@@[@[B90@@@C@#]@#B''<@]B93KH@@@]UA
)@@G@@C)A@@@[@[B''@@@C@#]@#B'C<@[B90KH@@@]C)B@@@[@]B'C@@@C@#C@ @@@]@#C]2+@[B;<UB
)@@G@@@@@B'FC)B@@@[@]B'F@@@C@#C@ @@@#)#B9"@@@C [@@]B'CC)B@@@[@]B9"@@@C@#C@ @@@UC
)@@G@@]@#C [+@[B'F@@@B9!C)B@@@[@]B9!@@@C@#C@ @@@#)#B9$@@@C^R@@^B9"C)B@@@[@]B9$UD
)@@G@@@@@C@#C@ @@@]@#B'.+@.B9!@@@B'4C)B@@@[@]B'4@@@C@#C@ @@@#)#B8E@@@B7/@@]B9$UE
)@@G@@C)C@@@[@[B8E@@@C@#]@ B7/<@]B'41@A@@AARCFIL      C)A@@@[@[B7/@@@C@#]@#B'.UF
)@@G@@<@[B8EKH@@@]C)B@@@[@]B'.@@@C@#C@ @@@]@#B8M+@/B9$@@@B'IC)B@@@[@]B'I@@@C@#UG
)@@G@@C@ @@@#)#B'\@@@B'<@@]B'.C)C@@@[@[B'\@@@C@#]@ B'<<@]B'I1@A@@AARCNUL      UH
)@@G@@C)A@@@[@[B'<@@@C@#]@#B8M<@[B'\KH@@@]C)B@@@[@]B8M@@@C@#C@ @@@]@#C^R+@(B'.UI
)@@G@@@@@B_PC)B@@@[@]B_P@@@C@#C@ @@@#)#B'O@@@C^*@@]B8MC)C@@@[@[B'O@@@C@#]@ C^*UJ
)@@G@@<@]B_P1@A@@AARCNUL      C)A@@@[@[C^*@@@C@#]@#C^R<@[B'OKH@@@]C)B@@@[@]C^RUK
)@@G@@@@@C@#C@ @@@]@#C [+@*B8M@@@C@PC)B@@@[@]C@P@@@C@#C@ @@@#)#C^J@@@C[^@@]C^RUL
)@@G@@C)C@@@[@[C^J@@@C@#]@ C[^<@]C@P1@A@@AARCQUL      C)A@@@[@[C[^@@@C@#]@#C [UM
)@@G@@<@[C^JKH@@@]C)B@@@[@]C [@@@C@#C@ @@@]@#C]2+@@B9"@@@C^0C)B@@@[@]C^0@@@C@#UN
)@@G@@C@ @@@#)#C^/@@@C^3@@^C [C)C@@@[@[C^/@@@C@#]@ C^9<@^C^0OD@@@@@@J_@CF____@UO
)@@G@@C)A@@@[@[C^9@@@C@#]@#C^6<@#C^/K @@@GC)A@@@[@[C^6@@@C@#]@#C^3<@]C^9KH@@@[UP
)@@G@@C)A@@@[@[C^3@@@C@#]@#C]2<@[C^6KH@@@[C)E@@@[@]C]2@@@K@BK@D@@@[@AC[UD@@@@@UQ
)@@G@@FIPELT#@#@@+@@6@@+K @@@@C)F@@@[@]C[U@@@K@DK@F@@@[@BB'TD)@@@@ELT$$GEN    UR
)@@G@@#@#@@W@^N@@)K @@@@C)B@@@[@[B'T@@@C@B[@^@@@]@@@@@ELT$$X@@@B'XC)B@@@[@]B'XUS
)@@G@@@@@C@#C@ @@@#)#B/6@@@B_.@@CB'TC)B@@@[@[B/6@@@C@#]@^C[N<B_B'X@@@@FCKH@@@#UT
)@@G@@C)B@@@[@[C[N@@@C@#]@^B_J<B_B/6@@@@ECKH@@@DC)A@@@[@[B_J@@@C@#]@#C@;<@WC[NUU
)@@G@@KH@@@AC)A@@@[@[C@;@@@C@#]@#B"S<@VB_JKH@@@CC)A@@@[@[B"S@@@C@#]@#B'L<@RC@;UV
)@@G@@KH@@@ C)A@@@[@[B'L@@@C@#]@#B;?<@QB"SKH@@@[C)A@@@[@[B;?@@@C@#]@#B_.<@FB'LUW
)@@G@@KH@@@]C)A@@@[@[B_.@@@C@#]@#@@@<@EB;?KH@@@BC-#@@@]@[@@+@@@K@B]-@B8V@@+@@@UX
)@@G@@@@@@@[[D@@@<E@@@@I@@C@@@@@@@@@P           M $)QI DO 12 ,LEN(I) $EQU 0**IUY
)@@G@@ DO 8 ,NAM(I) $EQU (2<I<6)++(I=8)->0!0D*HI $REPEAT P-1*EERR $EQU 0*HC $EUZ
)@@G@@QU P(I,1)*M $IF $SN(ELT$$X,C)*LNX $EQU ELT$$X(C)*RNNX $EQU ELT$$N(NX,0,1VA
)@@G@@)*RNLX $EQU ELT$$N(NX,0,2)*RNML $EQU ELT$$N(NX,0,3)*PM $EQU ELT$$N(NX,0,VB
)@@G@@4)*YN $EQU $CFS(P(I)>1->P(I,2)!'')*INL $EQU $SL(N)*GJ $REPEAT NL8L $IF \VC
)@@G@@M**1D*/$SS(CC-^@@@]@]@@W@@@K@BK@F@@@]-@@@@@@W@@@@@@@@][D@@@XE@@@@I@@[@@YVD
)@@G@@@@@@@@P           M#4)QI DO 12 ,LEN(I) $EQU 0**I DO 8 ,NAM(I) $EQU (2<I<VE
)@@G@@6)++(I=8)->0!0D*QLEN(11) $EQU $CFS('-')T])NS $EQU $CFS(P(1,1))*ISL $EQU VF
)@@G@@$SL(S)*DNX $EQU 7TB)CJ $EQU 0*ECX $EQU -1*II $REPEAT 1,SL*JC $EQU $SS(S,VG
)@@G@@I)*Z DO CX<0->C<>' '!0 ,CX $EQU I-1T])KJ $EQU J+(C='/')*U $IF C='*'->1!CVH
)@@G@@='.'->1!J>1*DNX $EQU 1*A $ENDI*A $ENDF*A $ENDR8F $DO CX<0 ,CC)%@@@]@I@@YVI
)@@G@@@@@K@HK@JK@PK@RK@XK@ZK@>K@$K@!K@\K@5K@7K@.K@_@@@#@)@@@@@Y@@@@@@@@[@8)@@@VJ
)@@G@@SCAN        ]@#@@W@@&@@XARCNUL      ]@#@@W@^)@@XERRLEN      ]@#@@W@#D@@ZVK
)@@G@@ARCFIL      ]@#@@W@^N@@ZARCQUL      ]@#@@W@ I@@ZARCCYC      ]@#@@W@@+@@)VL
)@@G@@ARCSTO      ]@#@@W@]_@@)C-#@@@]@[@@X@@@K@B]-@CA=@@X@@@@@@@@[@-@@@Z)G GO VM
)@@G@@ELT$$GENM^M)PM $EQU ELT$$N(NX,0,4)*RMAX $EQU ELT$$N(NX,0,3)*JN $EQU $CFSVN
)@@G@@('')T )KC $EQU $CFS(' ')*MCX $REPEAT CX+1,SL*KC $EQU $SS(S,CX)*N (\M**1DVO
)@@G@@*/C)->$ENDI*EN $EQU N:C*KC $EQU $CFS(' ')*  ENDR*- $DO C=' '->1!C=',' ,CVP
)@@G@@X $EQU SL+1T])V $DO $SL(N)>MAX , GO ERRLENM^*)RNNX $EQU ELT$$N(NX,0,1)*RVQ
)@@G@@NLX $EQU ELT$$N(NX,0,2)*RNML $EQU ELT$$N(NX,0,3)8J $IF $SN(ELT$$NCC-#@@@VR
)@@G@@]@[@@Z@@@K@B]-@CB=@@Z@@@@@@@@[@-@@@))D(NX,1),C)*TARC $EQU ELT$$N(NX,1,C,VS
)@@G@@2)*SNX $EQU ELT$$N(NX,1,C,1)*D GO [ARC]*  ENDF*Q $DO CX>SL , GO ARCSTO*7VT
)@@G@@ DISPLAY *'CHARACTER ':$CD(CX):' IS ILLEGAL: ")':C:'")'*G GO ELT$$GENM^7VU
)@@G@@)7 DISPLAY *'LENGTH OF ")':N:'") EXCEEDS MAXIMUM ALLOWED'*G GO ELT$$GENMVV
)@@G@@^.)T $DO $SL(N)>0 , GO ARCNUL*JLEN(10) $EQU 63*E GO ARCNULM ^)T $DO $SL(VW
)@@G@@N)>0 , GO ARCSTO*HLEN(6) $EQU 18] GCC-#@@@]@[@@)@@@K@B]-@C[$@@)@@@@@@@@[VX
)@@G@@@-@@@-)CO ARCSTOM F)S DO $SL(N)=0 , GO ARCSTO*JX $EQU $SS(N,1)*=X $EQU $VY
)@@G@@CFS(X='-'->'-'!X='+'->'+'!0)*RY $EQU [(X=0->' '!X):N]*YLEN(11) $EQU Y>63VZ
)@@G@@->$CFS('E')!X*ILEN(12) $EQU YM P)<NAM(NNX) $EQU (N)[NML>6->'DL'!'SL']*OLWA
)@@G@@EN(NLX) $EQU $SL(N)*O DO CX<=SL , GO SCANM W)MF FORM 6,6,6,6,6,6*? F LENWB
)@@G@@(1),LEN(2),LEN(3),LEN(4),LEN(5),LEN(6)8> F LEN(7),LEN(8),LEN(9),LEN(10),WC
)@@G@@LEN(1CC)I@@@]@[@@-@@@K@B#@FC]8@@-@@@@@@@@[@)F@@Y)E1),LEN(12)*NI DO 1,8 ,WD
)@@G@@ + NAM(I)*  $END@2C-#@@@]@[@@<@@@K@B]-@C#8@@<@@@@@@@@[@-@@@=)^N,J)*/ERM WE
)@@G@@$EQU 'CHARACTER ':$CD(J):' IS ILLEGAL: ")':$SS(N,J):'")'*EERR $EQU 1*  EWF
)@@G@@NDI*  ENDF*  ENDR*P $IF (\ERR)**(NL>NML)*6ERM $EQU 'LENGTH OF ")':N:'") WG
)@@G@@EXCEEDS ALLOWED MAXIMUM'*EERR $EQU 1*E ELSF \ERR*<NAM(NNX) $EQU (N)[NML>WH
)@@G@@6->'DL'!'SL']*KLEN(NLX) $EQU NL*  ENDF*A $ELSE*&ERM $EQU 'ILLEGAL SENTINWI
)@@G@@AL: ")':C:'")'*EERR $EQU 1*  ENDF*C $IF ERR8IERR $EQU 'FIELCC)U@@@]@@@@=WJ
)@@G@@@@@@@@#@R@@@@@=@@@@@@@@[@)R@@@)TD ':$CD(I):' IN ERROR - '*\ DISPLAY *ERRWK
)@@G@@[$SL(ERR)+$SL(ERM)>80->','!':']ERM*  ENDF*  ENDR*G GO ELT$$GEN*  $END@R)WL
)@@G@@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___WM
)@@G@@@@@___@@@___@@@___@@@___*MASM*[@^B. #@@@@@PIOUBALB[0@C[@^B/R#@@B85PAHLENWN
)@@G@@KH@@@#[@^B;-#@@@@@PREPS K @@@^[@^B.7#@@@@@PAGEH LB@@@^[@^B'>#@@@@@PIOUAWWO
)@@G@@LB@0@C[@^B9T#@@@@@PAGULFLBF@@][@^B'!#@@@@@PIOSTLLB[0@G[@^B'5#@@B9TPALPL WP
)@@G@@LB]*@[[@^B;_#@@B'!PABEG LB@*@#[@^B'P#@@@@@STATC K @@@[[@^B8>#@@B;_PAGHL WQ
)@@G@@KH@@@#[@^B9(#@@@@@PIOSLWLB@0@G[@^B8E#@@@@@PAGNPLLB[@@@[@^B8(#@@@@@PIOCPLWR
)@@G@@LB]0@B[@^B'D#@@@@@PAGFLGLB]@@][@^B8A#@@@@@B$$C  KH@@@E[@^B91#@@@@@PIOMTAWS
)@@G@@LBC0@I[@^B/V#@@B8AB$$A  K @@@@C)F@@@[@]B/V@@@K@BK@D@@@[@BB.TD@@B91LOCK  WT
)@@G@@#@^@]<@@6@]<1@A@@]TS @@@[@^B'H#@@@@@PIOWC LB]0@^[@^B;@#@@@@@PAGE  LB@@@#WU
)@@G@@[@^B9[#@@B'HPAFPL LB[*@[[@^B.3#@@@@@PAPQH LB@*@[[@^B;P#@@@@@PIOWAFLBF0@AWV
)@@G@@[@^B'L#@@B.3B$$   K @@@[[@^B'9#@@@@@PAPSS LB[*@]C)F@@@[@]B'9@@@K@BK@D@@@WW
)@@G@@[@BB8-D@@@@@BLOCK #@^@]<@@6@]<1@A@@ C$TSQ [@^B9!#@@@@@PAGPPLLB]@@@[@^B/1WX
)@@G@@#@@B8-UMINWCLB@@@B[@^B;D#@@@@@TRACEIK @@@][@^B.X#@@B/1PIODA LB@0@ [@^B/#WY
)@@G@@#@@@@@PIOBA LB[0@^[@^B9-#@@@@@TRACE K @@@@[@^B"B#@@B/#PIOBAWLB@0@^[@^B'[WZ
)@@G@@#@@@@@PIOHWALB@0@J[@^B/9#@@@@@PAGFW LB@@@][@^B/B#@@@@@PIOPKTLB@0@@C)G@@@XA
)@@G@@[@]B/B@@@K@DK@F@@@[@CB99D)@@@@UNBLOCK     #@^@]<@@6@]<1@A@@ C$TSA [@^B' XB
)@@G@@#@@@@@PAGQLWLB@@@@[@^B9>#@@@@@PAPS  LB]*@][@^B/.#@@@@@PREAD LB@@@][@^B.LXC
)@@G@@#@@B9>B$$X  KH@@@@[@^B8I#@@@@@PIOFNCLBG0@#[@^B9P#@@B.LPIOCWCLB]0@E[@^B;(XD
)@@G@@#@@B8IPASEMALB@*@@[@^B"J#@@B9PPWRITELB@@@#[@^B/&#@@@@@PIOX11LB]0@HC)F@@@XE
)@@G@@[@]B/&@@@K@BK@D@@@[@BB/+D@@@@@UNLOCK#@^@]<@@6@]<1@A@@^C$TS @[@^B9X#@@@@@XF
)@@G@@PREPF K @@@^[@^B;H#@@@@@B$$I  KH@@@[[@^B9 #@@@@@UTOTWCLB@@@C[@^B.;#@@@@@XG
)@@G@@PIOBLKLBD0@I[@^B89#@@@@@PIOCDALB@0@F[@^B;X#@@@@@PIOCBALB[0@E[@^B/N#@@B89XH
)@@G@@PAGEF LB@@@ [@^B/5#@@@@@PREPW K @@[0[@^B'X#@@@@@PAGDA LB@@@[[@^B8M#@@B/5XI
)@@G@@PAGMODLBH@@][@^B7_#@@@@@PIOSALLB[0@AC)B@@@[@[B7_@@@C@B[@^B8.]@@@@@B$$T  XJ
)@@G@@@@@B7/C)B@@@[@]B7/@@@C@#C@ @@@#)#B8.@@@B7/@@@B7_[@^B;>#@@@@@PIOCAWLB@0@EXK
)@@G@@[@^B"F#@@@@@UREAD LB@@@@[@^B;;#@@@@@PIOTRALBG0@A[@^B/J#@@@@@PIOLOKLBE0@IXL
)@@G@@[@^B;!#@@B;;STATS K @@@@[@^B"##@@@@@UWRITELB@@@[[@^B8!#@@@@@PIOWTFLBH0@AXM
)@@G@@[@^B.D#@@@@@PIOPALLB[0@B[@^B;T#@@@@@PIOAIDLB[0@][@^B.P#@@@@@UMAXWCLB@@@AXN
)@@G@@[@^B'T#@@@@@PIOFWCLB[0@#[@^B.[#@@@@@STINFLLB]@@E[@^B9L#@@@@@PIOFN LB@0@@XO
)@@G@@[@^B81#@@@@@PIOTRLLB]0@G[@^B/!#@@B9LPAGX11LB]0@I[@^B._#@@@@@TRACESK @@@[XP
)@@G@@[@^B95#@@@@@PIOLENKH@@@K[@^B9D#@@B._STALENKH@@@F[@^B9H#@@@@@PIOUWCLB]0@CXQ
)@@G@@[@^B9.#@@B9DPIOX10LB[0@H[@^B'(#@@@@@STATI K @@@@[@^B;^#@@@@@PAGIOLLB[@@]XR
)@@G@@C)C@@@[@[B;^@@@C@D[@ B'1])@B'(B$$AVPW     @@@B8#C)B@@@[@]B8#@@@C@#C@ @@@XS
)@@G@@#)#B'1@@@B8#@@@B;^[@^B;5#@@@@@B$$IF K @@@@C)E@@@[@]B;5@@@K@BK@D@@@[@AB.HXT
)@@G@@D@@B'1INC   #@#@]=@@6@]=K @@@@[@^B;L#@@@@@PIOSTALBH0@#[@^B;1#@@B.HPRBW  XU
)@@G@@LB@@@D[@^B.\#@@B;LSTNIOPLB[@@E[@^B'-#@@@@@PIOUDALB@0@D[@^@@@#@@B.\PAGLOKXV
)@@G@@LBG@@]C)I@@@]@@@]=@@@K@F#@FB.-@]=@@@@@@@@[[CF@@@M@@@@@@@[@@@@@@@@@P     XW
)@@G@@      M#/)^ END@,0C)L@@@]@@@]<@@@K@F#@I@@@@]<@@@@@@@@^[CI@@@M@@@@@@@[@@@XX
)@@G@@@@@@@@P           M#?)K [P(0,0)] P(1,1)*^ END@DR)@@[EK)@K^C@O[@K^@()@@@@XY
)@@G@@C8@@@+/K@@@E>@@@CB/K@@@]=@@@CA'=@@@@C@@@C '=@@@@C8@)@[AA@@@@)@D[F]@CK^G@XZ
)@@G@@^[#@[@K^@@@@/,0@A'R[K@CER[@@CD[@W@@^C@K@CCC;/@@#/@@@@CC8G@@@'=@@@@AB@@@@YA
)@@G@@)@M[N@K0@K[@^@@@@@HC)^@)/KH@@@C^W@@[/K@@[O2[W)@]C@@@CFN8K@@8)[@@CCC[@@[VYB
)@@G@@/K@@[NAC@@@@)@W[M*[K]) @E@@@@@IS)^@)@@@@[!HD2G))@@@@[?HD2^@)@@@@[THD=^@)YC
)@@G@@@@@@[SHD:^@)@@@@[SAD@@@@)@&[M*[K]) @E@@@@@G->^@)@@@@]:IT2G))@@@@]%IT2^@)YD
)@@G@@@@@@]SIT=^@)@@@@]RIT:^@)@@@@]RAE@@@@)@0[M*[K]) @E@@@@@IL=^@)@@@@#5G-2G))YE
)@@G@@@@@@#4G-2^@)@@@@#<G-=^@)@@@@#+G-:^@)@@@@#+AF@@@@)@'[M*[K]) @E@@@@@G(4^@)YF
)@@G@@@@@@^%G-0^@)@@@@^QG-(^@)@@@@^QG-4^@)@@@@^QG))^@)@@@@^AAG@@@@)[^[M*[K]) @YG
)@@G@@E@@@@@G9>H0)@@@@ MI))^@)@@@@ MI-2^@)@@@@  G*)^@)@@@@  G(2^@)@@@@  AH@@@@YH
)@@G@@)[I[E*[K]))C]^@U@@@@@@@@/K@@@C'=@@@@C@@@CJ/G0@@C@@@@A@H9&G0)@@@@ _H9,^@)YI
)@@G@@@@@@].AI@@@@)[R[N]@K[@K[@@@@@@&#K@@OC8W@@@/,0@]^A]0@@R/K@@[&/,0@A' @@@@RYJ
)@@G@@C'?@@@C8@@@@'=@@@@AJ@@@@)[-[F#@[]@P@K^[@K^[@@@@@C@@@CN/A0@@C/A)@^Q/C0@[VYK
)@@G@@/K@@[V/,0@]J/@)@[V/,0@@@C/@@[MAK@@@@)[%[N]@H@@K^@K0@K@/,0@A'[@@@[UA]0@@RYL
)@@G@@/K@@["/,0@B+ @@@@RC'?@@@C8@@@@/K@@@C'=@@@@AL@@@@)[4[EK@K0@K0@K)AK^@@@@@@YM
)@@G@@/,0@]J/@)@[\/,0@@@C/@@[M&#K@[UC8W@@@[%G@@[/,0@]^C'@@@@AM@@@@)[.[F@K^[@K^YN
)@@G@@C@4[#@@@@@@@C@@@@OA]0@@@/K@@@C'=@@@@C@@@CR/A0@@C/A)@^Q/C0@[\/K@@[\AN@@@@YO
)@@G@@)]A[MK)B[@[#@@K0@@A]0@@[/KF@@@R]0@@@M]D)@@N@K@@OR]K@CS&'@@@[R'G@@#/,0@@@YP
)@@G@@G8@@@#AO@@@@)]K[M^C]]))CS@@@@@ @@@@RC'?@@@C8@@@@/KF@@@R]0@@[/,0@A[R'@@CTYQ
)@@G@@/,0@@@C8H@@@R'Y@@@AP@@@@)]U[F@K[#@@K0@K)D^@@@@@@/@)@]*R'Y@@@/,0@@@C/@@[MYR
)@@G@@&#K@@OC/K@[VA]0@@R/K@@]&/,0@A'AQ@@@@)]<[MK^[@K^[@@@@@@ @@@@RC'?@@@C8@@@@YS
)@@G@@/K@@]U/,0@AK/K@@[$/C0@]U/K@@]U/,0@A[R'@@@@AR@@@@)]![N@K@K0@K)E^@K@/,0@A[YT
)@@G@@R'@@@@/@)@]'R'Y@@@/,0@@@C/@@[MC@K@@GA]0@@R/K@@]8/,0@B+AS@@@@)]7[F@K^[@K)YU
)@@G@@#K^@@@@@@@@@C]0@@GC8@@@[/,0@B+/K@@]!'=@@@@C@@@C+/K@@[_/C0@]!/K@@]!AT@@@@YV
)@@G@@)#@[F]@!#@[@K^[@^@@@@@@@')A)@@/,0@#PN'@@@BR[)@C=R[0@C</K@@@C8 0@#^[@@@@#YW
)@@G@@'=@@@@AU@@@@)#D[N@^@[#@[]@P@@@C8H@@@/@)@#]/,0@@@C/@@[M&#K@@OC8W@@@[%G@@[YX
)@@G@@/,0@]^C'@@@]8M@@#BAV@@@@)#N[F]@-@K0@^@K0@^G@@@@@C@@@@#/KF@@@R]0@@]C8.@[[YY
)@@G@@/,0@#VC8)@@UA]0@@]/K@@#]/,0@@@AW@@@@)#W[N@K[#@@@^@@@@@/,0@A' @@@@RC'?@@@YZ
)@@G@@C8@@@@/KF@@@U@K@@I[@K@@#;CK@@[9)@@C&S@@@C>AX@@@@)#&[F@^G@[#@[]@1@^C]@@@@ZA
)@@G@@/,0@@@C8I@@@/@)@#2/,0@@@C/@@[M&#K@@OC/K@[VA]0@@R/K@@#0AY@@@@)#\[N@K^[@K@ZB
)@@G@@^[@@@@/K@@^[/,0@B+ @@@@RC'?@@@C8@@@@/K@@#>/,0@AK/K@@[$/C0@#>/K@@#>AZ@@@@ZC
)@@G@@)#9[E^G@^C#O@K)CK^@@@@@@/C0@#7/K@@#7/,0@@@C8I@@@/@)@^#/,0@@@C/@@[MC@K@@GZD
)@@G@@A]0@@RBA@@@@)^][F@K^C@4[@[@K@@@@@@@@/K@@@C8 0@^FC'/@@@C8@@@[/,0@B+/K@@#7ZE
)@@G@@'=@@@@C@@@C+/K@@[_BB@@@@)^F[F#@[@K[#@[]@4K)I@@@@C8I@@@'=@@@@(@@@@I/,0@@@ZF
)@@G@@C/@@[MC8X@@[/,0@#V/@)@@CCC)@[OBC@@@@)^O[F]@-@^[@K0@^G@^C]K@@/,0@@@C/@@[MZG
)@@G@@&#K@@OC/K@[V/K@@^>/,0@A' @@@@R/K@@^D/,0@@@BD@@@@)^X[F@K0@ES@CKB*]@)C]A@@ZH
)@@G@@C^)@[M/K@@^R/K@@@C/,0@A'/A0@@C/,0@@@C/@@[P[^)@[P/@)@^*BE@@@@)^&[MK^[@^[@ZI
)@@G@@K^@()@C8@@[ 8]@@^:')C@^_/K@@^//,0@B+R'@@@]/K@@^R/,0@AK/K@@^YC'0@@[BF@@@@ZJ
)@@G@@)^0[F][@*CKC+^]M@-@&)@@@C/@@@[8]@@^4/,0@@@')C@ ]/,0@@@R'@@@]/,0@@@C8@@C*ZK
)@@G@@/,0@@@BG@@@@)^9[EK)OK^[@K^G@^G@^G@@@[4@@[P[0@@[P[?@@[P/K@@^\8]@@^:/G0@^"ZL
)@@G@@/K@@@C/,0@@@C/K__"BH@@@@) ][##@[#@[#@[#@@K0@K0@K)P@@@@/,0@@@C@@@[T[@@@[TZM
)@@G@@&;@][@C^@@[MC4@@[PC0@@[PC?@@[PBI@@@@) E[F@K0@^C]^[#@[#@[@@@@ @@@@R/K@@@CZN
)@@G@@ C@@[O ^@@[M/K@@ C/,0@@@C8G@@@[@@@[T/K@@ JBJ@@@@) N[N@K@^@K^C )@@@C8H@@@ZO
)@@G@@'=@@@@C@G@ 9C@K@@G/K@@ ,?8@@@@?8@@@AC'0@@[/K@@ %/,0@B+BK@@@@) X[E[#@[#@[ZP
)@@G@@#@[][P@K0@@@[@@@[T/K@@ N/,0@@@C@@@[T[@@@[TQB@@[M;*@@@MG8@@[@;*@@@GBL@@@@ZQ
)@@G@@) &[E^[@K^[]@H@@@@@@@@@@[@@@@P/K@@@C'=@@@@C@@@C3/A0@@C/K@@ +/,0@A[R'@@@@ZR
)@@G@@R'W@@@BM@@@@) \[E()@-@)CKD>[][^^C @@/,0@@@C/K__"C/@@@[/,0@@@C8@@C4/,0@@@ZS
)@@G@@C@@@@P/,0@@@C8@@[ BN@@@@) 8[F@E[KE[KE[KK^@@@@@@@/K@@@C/K@@@C@]B@DP@]B@DIZT
)@@G@@@]B@DB@] @D]@] @C.@] @C8/K@@ NBO@@@@)A[[F#@@()@-@)]^]8)CKC)@/,0@@@/@@@AEZU
)@@G@@C8C@@@/,0@@@C8D@@#D*T@@[/,0@@@C8@@[ AE0@[RBP@@@@)AE[E^C ^CA^G@[#@@()@-@)ZV
)@@G@@/,0@@@C8@@[ AE0@[R/KF@@@RE0@[R/,0@@@/,0@@@C/K__"C/@@@[BQ@@@@)AN[EK0@K)REZW
)@@G@@]^]E@-)@CKG)/,0@@@[@@@@DAE0@[R/K@@AE/,0@@@C8@@DW/,0@@@C8@@[VD@K@@OBR@@@@ZX
)@@G@@)AW[M@K)UK)T@K)V@@/,0@@@C@@@@NG90@@O[@@@@P/,0@@@/,0@@@C8)@@)C8D@@#D*T@@[ZY
)@@G@@[@@@@NBS@@@@)A&[M@K)W^CBL][G@@C@@@@P/,0@@@CCD@@]/,0@@@C/@@@)/,0@@@C/K@@]ZZ
)@@G@@D8@@@[:8@@@]C=D@@[BT@@@@)A0[N][!#@@K)Q@^@@/KF@@[/K@@A5:80@@)/G;@@@')^)@@AA
)@@G@@/KF@@@'=@@@@/KF@@@RE0@[R/,0@@@BU@@@@)A'[F#@[@K^G@^[@[@@@@@@@8M@@B^C'@@@@AB
)@@G@@N'@@@*R[0@C<R[)@C= @@@[S/K@@BQ/,0@A5AE0@[RBV@@@@)B#[N@[@K0@@K@@@@@%80@@)AC
)@@G@@/G0@BI')^)@@G'@@@[')A)@@A]0@[S/K@@BS?80@[[?80@[V/K@@BIBW@@@@)BH[N@[@[@K0AD
)@@G@@@^G@@@RE0@[R/KF@@[RE0@[R/]@@BQ;E@@@]G'@@@#8M@@BJ')A)@@C80@@)/K@@B]BX@@@@AE
)@@G@@)BR[M[@K^G@^@^@@@@/K@@BI?80@@0?80@@'/K@@BQ(@@@[S/K@@BB/K@@BW?80@[-?80@[;AF
)@@G@@/KF@@@BY@@@@)B-[N@K0@K^@^@K@@@?80@@'/G0@B2')^)@@/K@@B(C8K@@@C8@@@@/K@@BQAG
)@@G@@/,0@A5AE0@[R/K@@BCBZ@@@@)B:[MK@[@K^@@@@@@@/!^@@@/K@@BO/@K@BQ/K@@B*G8J@@@AH
)@@G@@T8@@@EH80@@0C8K@@[/K@@B2?80@@0CA@@@@)B5[U[@[@@@@[O7@@@D80@@[/!^@@@R9^@@@AI
)@@G@@/K@@B4$[K@@VCO5@@@/!@@B9CS5@@@CK5@@@CW5@@@CB@@@@)C@@%@K@@@@@)@+@K()]S0[>AJ
)@@G@@@@@@@@@@@@@@@[R@@^@[[@DZ/!)@B_[S7@@@[K7@@@[W7)@[/!&@@@CC@@@@)[ [K*@[+[8@AK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@[[@[[@@@@@@@@&-@@=CD@@@@AL
)@@G@@)[J[@\@"O))@EKK-<@AO0[@@@@@@@@@AT@A3^]@@@@@@@@@@^@)^@)@[@@@@@@@@@@@@@@@@AM
)@@G@@@@@___CE@@@@)C [M0M&@@[KES@ @@AND   N COMMUNKNOW@@]@@T@@[@@^@@[@B5^@)^@)AN
)@@G@@]@@@@@[@@@@@@[R@@^CF@@@@)CJ[M*@ @@*CS@@@@@@@[@[V@[#@COIFIED K SPECNO RANAO
)@@G@@@[#@CKFIED   SPECINO KEY@[#@CGCG@@@@)CT[M@@@*@@@@@@@@@@[#@CZGE    OO LARAP
)@@G@@RANK T^0)^@)E(ND-TC(QDDJC))E[MC(ME- ^[DD1NCH@@@@)C<[N#@@*@@@@@@@@@D-IBK)AQ
)@@G@@CLMCTJ^@& ))C(IE)'^1DD1^H->+'V@@@@@@];KIS!@@[@C[@@[@[UCI@@@@)C![U@@*@@@@AR
)@@G@@C- F@&C))DDICC)CL[^[DES)@[#@C0CIFIEDEX SPENO INDBK)^0)DDIC(N^0?^[GCJ@@@@AS
)@@G@@)C8[U@@@@@@@E[JETOD))^@)C(MET[E-MCDQC- EK)DDID9MCDG^@)E1 ELN^[OEL[EL^C(MAT
)@@G@@E[MC(JCK@@@@)D#[U@@@@@@@CDG^@)E1 ELN^[OEL[EL^C(ME[MC(JELNC*)EL E1 ET[D))AU
)@@G@@CDQC(MEK)E-MD9MC- CL@@@@)DI[U@@@@@@@D9MC- E[JETOELNC*)EL E1 D))^@)C(MET[AV
)@@G@@E-MCDQC- EK)DDID9MELNC*)EL E1 CM@@@@)DT@'@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AW
)@@G@@ K^@)^D1^^@&^[AD9P^[ID9OET[D))CDQC(MEK)E-MCN@@@@0@@@]@@@@@@@@@@@@@@@@@@@AX
)@@G@@@@@@@@@@@@@@ K^@)^D1^^@&^[AD9P^[ID9OET[D))CDQC(MEK)E-MCO@@@@@@@@@@K0@^C]AY
)@@G@@^[#@[#@[@@@@ @@@@R/K@@@C C@@[O ^@@[M/K@@ C/,0@@@C8G@@@[@@@[T/K@@ JBJ@@@@AZ
)@@G@@@@^@@]@@A@@+@[E@@@@[E@@@@@E@[$@@@@D)PSR$        AREAD$      ATREAD$     BA
)@@G@@PRINT$      EXIT$       AVLIK       AVLIR       BGET        BREL        BB
)@@G@@AVLSK       AVLSR       TIME$       AVLDK       AVLDR       ERR$        BC
)@@G@@AVLDSP      EDIT$       EMSG$       EMSGR$      EDECV$      EAPRT$      BD
)@@G@@AVLTRA      APRINT$     ECOPY$      EDITX$      ECOLN$      EPACKC$     BE
)@@G@@ECOL$       EDECF$      ECHAR$      E$ASC$      E$DTBL$     E$ASCII$    BF
)@@G@@AVL$KTEST0  ;(K@@[/ K@2JC/@@@'/,0@LD/K@@2TC@@]I&/,0@LX/,0@L7C@C@@5/,0@N3BG
)@@G@@)@@[N]@@^@K@K)@@@@C@0@[]RE0@@A[=Y@@[ @@@@H/K@@@F:=Y@@[/K@@@B(=I@@[N8)@@@BH
)@@G@@AE0@@AAA@@@@)@E[M^C@K^@^@@@@@@/K@@[A:=Z@@[N8)@@[/K@@[A(=J@@[N8)@@#C@0@@LBI
)@@G@@')J@@@C="@@[/KF@@@AB@@@@)@O[M^C@)^C@4C[@@@*8F@@@R]0@@L')H@@@')H@@@[DW@@[BJ
)@@G@@CDY@@[C@@@@L')H@@@[@@@[[N8)@@]AC@@@@)@Y[M^C[L]@T]@W@@@C[K@@I[C:@@[*8F@@@BK
)@@G@@R]0@@L')H@@@')H@@@[CJ@@[')H@@@C[K@@J[C;@@[AD@@@@)@*[N]@)[@[@@@@@@@;DK@@MBL
)@@G@@[>Z@@[C[X@[?:[@@@HC[K@@H/[@@@0 @@@@LC>G@@[[CI@@[')H@@@AE@@@@)@2[U[@@@K@@BM
)@@G@@/K@@[#[DY@@]HDW@@]CDY@@][DW@@]GDZ@@]CDW@@]/K@@@.:8K@@[ =G@@[[>Y@@[AF@@@@BN
)@@G@@)@.[U@@^@@@@[DZ@@[CDY@@[/K@@[+C@@@[[[@@@@J[DW@@]GDY@@]CDW@@][DZ@@]HDW@@]BO
)@@G@@CDZ@@]AG@@@@)[C[N]@D]@W@^C[@@@:9K@@[C[K@[]')H@@@C[K@@I[C"@@[[C:@@[*8F@@@BP
)@@G@@R]0@@L')H@@@')H@@@AH@@@@)[M[N@^@K@^@@@@@@@CDY@@]/K@@[Z:8K@@[ =J@@[ =I@@[BQ
)@@G@@/K@@[T[>Z@@[CDX@[?[=Y@@[/K@@[RAI@@@@)[W[U^@@^@@@[C;@@@:C:@@@/K@@[%(8F@@@BR
)@@G@@RE_@@[[DZ@@]GDY@@]CDZ@@]/K@@[+[DY@@]HDZ@@]AJ@@@@)[$[]^@^@@@@@@@@@@@@@@@@BS
)@@G@@@@@@@@@@[@@@@@]@@@/K@@@CC@)@@J[^/@@@/K@@[:[^;@@@:^:@@@AK@@@@@@@@@@MAP WIBT
)@@G@@TH & OPTIONS PERFORMED & AT & USING RLIB$ LEVEL &.&   R3T@@]!8K@@K!8K@@XBU
)@@G@@@@^@@]@@A@@D@@S@@]@@)@@@@@E@@@@@@@[\AVL$DATA    AVL$ALOAD4  AVL$NALOAD5 BV
)@@G@@AVL$ALOAD2  AVL$NASTOR5 AVL$ASTOR2  AVL$NALOAD2 AVL$ASTOR4  AVL$NASTOR2 BW
)@@G@@AVL$BALANCE @@[@@@@@@@@@AVL$NALPHA  @@[@@@@@@@[?/,0@L'R;K@@[/!K[]TRA(@@]BX
)@@G@@&')@@[N8)@@^R;D@@J/!K[[;C/@@@A/,0@LMC@E)@@C8K@@G/,0@MYR;K@@[/!K[]T8K)@5%BY
)@@G@@/K@@V3R#D@@]R'?@@@&;@@@A/,0[[D/K@@8)/,0[[PR;D@@J)@@[#]@@K)@K)@K)@K)[K)@KBZ
)@@G@@)@@@@@CCK@@ RA0@@#/,0@@@[D@@@^[C0@@ [@)@@@Q;?@@@AA0@@#AA@@@@)@C[U@@@@@@@CA
)@@G@@C Z@@@CDZ@@@CDY@@@C Y@@@CDY@@@CDW@@@C W@@@CDW@@@C V@@@CDV@@@/KH@@@AB@@@@CB
)@@G@@)@N[M@@@@@@@@@@@@@[ Z@@@[DZ@@@[DY@@@[ Y@@@[DW@@@[ W@@@[DW@@@[ V@@@[DV@@@CC
)@@G@@CDZ@@@AC@@@@@@@@@@9?E@@A/,0@LZC8@@'G/,0@L'/!K[]]R;K@@[/!K[]T/K@@7NC8@@'KCD
)@@G@@/,0@L'R<D@@@P;@@@OC8GK'*@@^@@]@@A@@]@@E@@I@[]@@@@@E@@B@@@@@XAVL$DATA    CE
)@@G@@AVL$LOCATE  AVL$ALOAD2  @@[@@@@@@@@FAVL$ALOAD4  @@[@@@@@@@@IAVL$ALOAD5  CF
)@@G@@@@[@@@@@@@@LAVL$ASTOR2  @@[@@@@@@@@QAVL$ASTOR4  @@[@@@@@@@@SAVL$DATA    CG
)@@G@@@@@@@@@@@@@@AVL$NALOAD1 @@[@@@@@@@@CAVL$NALOAD2 @@[@@@@@@@@EAVL$NALOAD4 CH
)@@G@@@@[@@@@@@@@HAVL$NALOAD5 @@[@@@@@@@@KAVL$NASTOR1 @@[@@@@@@@@NAVL$NASTOR2 CI
)@@G@@@@[@@@@@@@@PAVL$NASTOR5 @@[@@@@@@@@UAVL$ROUTINE @@[@@@@@@@@@/,0@LMC@E@@^CJ
)@@G@@C8K@@G/,0@MYR;K@@[/!K[]TR;D@@J/!K[[;C/@@@A/,0@LMC@E@@ C8K@@G/,0@MYR;K@@[CK
)@@G@@/!K[]TR;D@@J/!K[[;C/@@@A)@@[MK[@^@K[@@@@@@/@)@@KCC!@@[/K@@@H%CY@@[/@)@@CCL
)@@G@@C^!@@@/K@@@H%CY@@[/@)@@^CC!@@@AA@@@@)@E[M^[@K)@K)[@@@@;^0@@=CDJ@@[CC!@@]CM
)@@G@@C8.@@@'=@@@@'=@@@@C@@@@)/K@@@K:^Y@@@%CY@@@AB@@@@)@O[U^@K@@@@ (AVLCNTEREDCN
)@@G@@ ENCOU FIELDD LINKINVALI/K@@@MGC\@@]/K@@@M:DJ@@@/@;@@@AC@@@@)@Z@ME@@@@@@CO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[B@@TR)    AD@@@@CP
)@@G@@@@^@@]@@A@@]@@E@@[@@I@@@@@E@@@@@@@@-PRINT$      ERR$        AVLCR       CQ
)@@G@@@@[@@@@@@@@@A PROGRAM FILE    TOO MANY ELEMENTS IN PROGRAM FILE   PACKETCR
)@@G@@ ADDRESS IN A0 ON PFI$ R)@@[N@K)@[@@K)[@@@R]0@@L')H@@@C8K@@[(@@@@HC=Y@@[CS
)@@G@@/K@@@7(CI@@@*^I@@@AA0@@ /@)@[(AA@@@@)@E[F]@D@@K[]@G@@@@@@@@@R]0@@K')H@@@CT
)@@G@@CDJ@@[/K@@@!:C"@@@%^"@@@C@0@@F/ K@@D')H@@@AB@@@@)@N[V]@K@@@@C>Y@@[[C;@@[CU
)@@G@@RA_@@@[C;@@[RE_@@@[[Z@@@C[Y@@@[DF@@[*8F@@@R]0@@L')H@@@AC@@@@)@Y[U@[@@@@@CV
)@@G@@[C;@@@:C:@@@[^;@@@:^:@@@/K@@@5(8F@@@AE_@@[RE"@@[[DZ@@]CDY@@][>Z@@[AD@@@@CW
)@@G@@)@([E^[@K) K)A@@@@@@@@@@[C;@@[*8F@@@R]0@@L')H@@@')H@@@/K@@[G/K@@[C:8K@@[CX
)@@G@@C@0@@KAE@@@@)@2[N]@WK[@@@@@@@@*8H@@@CCY@@@*CI@@@C^Y@@@CC"@@[/K@@@([^/@@@CY
)@@G@@/K@@@XC[@@@JCCX@@@AF@@@@)@/[MK[@^@^@@@@@@@C8K@@]/K@@[GC8K@@][^Z@@@/K@@[CCZ
)@@G@@[CZ@@@/K@@[]:^\@@@/@0@[%[C.@@[AG@@@@)[A[MK@[]@[]@@K)C@/,0@@@C@)@@J C@@@#DA
)@@G@@:C0@@#[DZ@@]H.K@@[CDZ@@]C8K@@[/K@@[G:^\@@@AH@@@@)[K[F@JA@#1)@/S@JA@[@^@@DB
)@@G@@/^0@[ CC"@@[/K@@[T*=I@@[@@@@[T@@@@[R@@@@[R@@@@[P/KJK[LAI@@@@)[T[M^@K@^C@DC
)@@G@@^@@@@@/K@@[=:C)@@#[DY@@]H.K@@[CDY@@]/K@@[T%C"@@@/@)@[=CC,@@[C@0@@IAJ@@@@DD
)@@G@@)[<[F@K)@@K)@[@@@@@@@@@@/K@@[=[^W@@@/KF@@@RA0@@ [C/@@]H80@@[CC/@@]C^)@@]DE
)@@G@@/K@@[TAK@@@@@@@@@@R;K@@ ABW@@#RFS@@%RB*@@%AB?@@^P;Y@@@O;K@@[AFW@@BO;K@B_DF
)@@G@@+8K_8@AF?@@ RFC@@,;*@@@O@@^@@]@@A@@D@@S@@[@@W@@@@@E@@@@@@@[?AVL$DATA    DG
)@@G@@AVL$ALOAD4  AVL$NALOAD1 AVL$ALOAD5  AVL$NASTOR1 AVL$NALOAD4 AVL$NASTOR5 DH
)@@G@@AVL$NALPHA  AVL$BALANCE AVL$DELETE  @@[@@@@@@@@@)@@@%^C@^C@K@@@@@@@@@@@@DI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@/KF@@@/K@@@@/\0@@@C G@@]&;)[]@AA@@@@@@@@@@RAM FIDJ
)@@G@@LE    TOO MANY ELEMENTS IN PROGRAM FILE   PACKET ADDRESS IN A0 ON PFI$ RDK
)@@G@@@@^@@]@@A@@]@@E@@[@@I@@@@@E@@@@@@@@ AVL$ROUTINE AVL$DELETE  AVLDK       DL
)@@G@@@@[@@@@@@@@@)@E[F]@D@@K[]@G@@@@@@@@@R]0@@K')H@@@CDJ@@[/K@@@!:C"@@@%^"@@@DM
)@@G@@C@0@@F/ K@@D')H@@@AB@@@@)@@@%K)@[]@^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DN
)@@G@@/K@@@@R]0@[#C@K@@I/,0@@@A]0@[#AA@@@@@@@@@@[@@@@@[C;@@@:C:@@@[^;@@@:^:@@@DO
)@@G@@/K@@@5(8F@@@AE_@@[RE"@@[[DZ@@]CDY@@][>Z@@[AD@@@@@@^@@]@@A@@]@@E@@[@@I@@@DP
)@@G@@@@E@@@@@@@@ AVLCR       AVLDR       AVLDN       @@[@@@@@@@@@)@2[N]@WK[@@DQ
)@@G@@@@@@@@*8H@@@CCY@@@*CI@@@C^Y@@@CC"@@[/K@@@([^/@@@/K@@@XC[@@@JCCX@@@AF@@@@DR
)@@G@@)@@@%EK@CK@*K[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/KF@@@/K@@@@/\0@@@C9@@@@DS
)@@G@@&;)@]@AA@@@@@@@@@@RAM FILE    TOO MANY ELEMENTS IN PROGRAM FILE   PACKETDT
)@@G@@ ADDRESS IN A0 ON PFI$ R@@^@@]@@A@@#@@G@@[@@K@@@@@E@@@@@@@@ AVL$RTEST   DU
)@@G@@AVL$ROUTINE AVL$DELETE  AVLDR       @@[@@@@@@@@@]@G@@@@@@@@@R]0@@K')H@@@DV
)@@G@@CDJ@@[/K@@@!:C"@@@%^"@@@C@0@@F/ K@@D')H@@@AB@@@@)@@[]K0@K0@K0@K0@K0@K0@@DW
)@@G@@@@@@@@H8)@@[H0)@@@C4)@@@ ?@@@# @@@@AAE0@@^9*@@@@9?G@@@AA@@@@)@C[F@^G@]&@DX
)@@G@@]^@]A@@)CS@@C@@@@]/K@@@L&;@^[@C^@@@@/,0@@@C8@@@B[0)@@#C8)@@@/C)@@EAB@@@@DY
)@@G@@)@L[F]@ @K0@^G@^[#@[@@@@C8K@@[/K@@]G*?@@@#/K@@@V%^@@@@C8G@@@[@@@@]/K@@]KDZ
)@@G@@/,0@@@AC@@@@)@U[N#@[#@@K[@^@K@/K@@@4(CJ@@[/,0@[!*^J@@@/,0@[$:^"@@@/@)@@)EA
)@@G@@CC\@@[C^0@@][?K@@#AD@@@@)@=[#@K0@K0@K0@K^G@^G@@@@@@@@@H8@@@[G0@@@@H4@@@@EB
)@@G@@/K@@[=(0@@@#T4@@@@C?@@@]/,0@[8AE@@@@)@?[F]@CK)#K0@^C[[]@H]@O/,0@@@/,0@@@EC
)@@G@@C/@@@)/,0@@@C8K@@!C0@@@#/,0@@@C/@@@)/,0@@@AF@@@@)@5[F#@[#@[#@@^C@4G@[@@@ED
)@@G@@/K@@[A(@G@@@C^@@@]/,0@@@C/@@@)/,;@@@RE0@@[C^@@@][^@@@#AG@@@@)@"[F]@P#@[#EE
)@@G@@@@K^@K)^K@@@C@@@]N/,0@@@C8K@@!/G@@[A/@@@[AH8H@@[C0@@@@L^@@@#/,0@@@AH@@@@EF
)@@G@@)[B[##@[]@T#@[#@@ES@CK@CS@@@@@C^0@@]/,0@@@C8@@@B/,;@@@RA0@@[C@@@@ /,0@@@EG
)@@G@@[@@@@ AI@@@@)[J[EK[@^[@K^G@@@@@@@@@@[@@@@ C@@@]N/,0@[8/,0@[**CJ@@@/,0@[?EH
)@@G@@:C"@@@/@)@[NCC\@@[AJ@@@@)[S[#]@T#@[@K0@K0@K0@^G@@@@@@@C4K@@#/,;@@@C@@@@ EI
)@@G@@RA0@@[[4K@@#/K@@[)C?K@@@/,0@@@AK@@@@)[)[F@ES@CK@C@-@^)C]@@@@/\)@[(/\)@[(EJ
)@@G@@/K@@@2/,0@@@H8@@@[/K@@@K/,0@@@C8@@@B8#K@[VAL@@@@)[([ME]@)C@O^G@@@@>8@@@[EK
)@@G@@;@I@@@G?)@@]H8)@[?D8@@@[/\)@[,/\)@[,/K@@[0H8)@[$C8@@@[AM@@@@)[3[F#@@K0@KEL
)@@G@@0@^G@[#@[#@@C0@@@@AA0@@^/[F@@@C[@@@A/KF@@@[@K@@A+@@@@A=8@@@[)@@@@AAN@@@@EM
)@@G@@)[/[EK)]K0@^@K)#^C@)@@@@/,0@@@C/@__"/,0@@@C/@@@''D@@] ;(@@@[C!K@@]/,0@@@EN
)@@G@@H8@@@[AO@@@@)] [F#@[]@D@^C[4G@[@K0@@RA0@@[C@@@]U/KF@@@RA0@@^/,0@@@C/@@@@EO
)@@G@@8^K@]@/,0@@@C4@@@@AP@@@@)]I@%K^C[=G@@@@@@@)@B@S*@@@@@@[[@[[@@@@@@@@&-@@OEP
)@@G@@/KF@@@RE0@@^/,0@@@/K@@]K/,;@@@AQ@@@@)@E[K#^[@@R)DEK @@@@@@@@@@@@@@@@@___EQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@AR@@@@)]N[]()@@@O@@@@@@@@@@@@@ER
)@@G@@@@@@@@@]A@]OD-DCS-^[#FD#C*)DDN^[OEL DDIC8'E9[ELI@[-@@OAS@@@@@@@@@@@[+[8@ES
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@[[@[[@@@@@@@@&-@@=CD@@@@ET
)@@G@@@@^@@]@@A@@F@@W@@[@@)@@@@@E@@5@@@@]VEDIT$       AVLTRA      ESKIP$      EU
)@@G@@ECHAR$      EPAD$       ECOLN$      EDITX$      ECOL$       E$ASC$      EV
)@@G@@E$DTBL$     E$ASCII$    AVLDSP      @@[@@@@@@@@@XH1 @^H1  @]H2  @[XH2 @#EW
)@@G@@S1  @HS2  @GS3  @FS4  @ES5  @DS6  @CU   @IXU  @JW   @@Q1  @BQ2  @^Q3  @AEX
)@@G@@Q4  @ X0    X1    X2    X3    X4    X5    X6    )@@[F]@@[]@@K^C@@@@@@@@@EY
)@@G@@/,;@@@RE0@@^/K@@@W(8I@@@ C@@@#&;,@@@C^?@@@C80@@@AA0@@ AA@@@@)@D[N@K^@@K[EZ
)@@G@@@@@@@@/K@@@ QB,@@@/K@@@N/KF@@ C8"@@@&;,@@@*=I@@[/,0@@G/,0@@G/K@@@SAB@@@@FA
)@@G@@)@N[EK)@K)@^[]@[@K)@K@@@/K@@@E(0@@@@/K@@@W*4@@@@/K@@@ QF,@@@[C)@@#(C@@@#FB
)@@G@@&;0)@@AC@@@@)@W[F]@@K)@^C@^[]@@K@@@@/K@@@$*8J@@@C^)@@^/^)@[QAA0@@ /KF@@@FC
)@@G@@RA0@@ C8,@@@[@)@@]AD@@@@)@>[UK^@K@@@[C"@@]C80@@[ =I@@[ @I@@@[C"@@[[C\@@@FD
)@@G@@/K@@@:[^\@@@/G0@@%/K@@@:[^?@@@AE@@@@)@0[M@^[@K)@K^@@@@G[@@[T/K@@@;%CK@@]FE
)@@G@@/H@@@;/@K@[FCCY@@[ @@@[#C9@@@@N8)@@]N8K@@[AF@@@@)@'[M^[@^[@^@@@@@@CDX@@]FF
)@@G@@/>@@[C^=!@@[/H@@[]/K@@[C^=X@@[/H@@[C/K@@[@%^!@@@[@)@[#AG@@@@)[^[M^C@@K^[FG
)@@G@@]@@K@@/@0@[MC@0@[#CC)@@]/D@@@4/-@@@4C8!@@@G9@@@[:CK@@#[DX@@]G.K@@[AH@@@@FH
)@@G@@)[I[M[]@^@K)@K)@@@RA0@@ C^K@@^[C/@@]G80@@[CC/@@] @@@@I/,0@@@C8K@@]%^"@@@FI
)@@G@@C8K@@[AI@@@@)[S@M@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FJ
)@@G@@@@@@@@)@@@@@/KF@@@AJ@@@@@@^@@]@@A@@]@@E@@]@@M@@@@@E@@@@@@@[UAVL$DATA    FK
)@@G@@AVL$BALANCE AVL$INSERT  @@[@@@@@@@@)AVL$LOCATE  @@[@@@@@@@@@AN  CPLXM CQFL
)@@G@@LX  CRMI  DSMSI DTMF  DU@@@[B0DI  DWDSF DXDF  DY)@@[M^C@@[]@^@@@@@&;)[@@FM
)@@G@@G8K@@#[^K@@^[*!@@[;C)@@MC@)@@H/KF@@@/\0@@@C G@@]&;)[[@AA@@@@)@E@+K)@K)]@FN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/KF@@@/K@@@@/\0@@@C G@@]AB@@@@FO
)@@G@@@@^@@]@@A@@#@@G@@]@@O@@@@@E@@@@@@@@IAVL$ROUTINE AVL$DATA    AVL$INSERT  FP
)@@G@@AVLIK       @@[@@@@@@@@^AVLSK       @@[@@@@@@@@@Q4  @ X0    X1    X2    FQ
)@@G@@X3    X4    X5    X6    )@@[EE]^@@-@][KK)@@@@@@@/\0@@@C9@@@F&;)@@@;CK@@MFR
)@@G@@[^K@@^/KF@@@/\0@@@C9@@@F&;)@[@AA@@@@)@D[#]@C@@@@@@@@@@@@@@@@@@@@@@/KF@@]FS
)@@G@@C@K@@K//F@@[/[F@@@HDI@@]C9H@@@/KF@@@/K@@@@AB@@@@@@^@@]@@A@@#@@G@@#@@S@@@FT
)@@G@@@@E@@@@@@@@LAVL$ROUTINE AVL$DATA    AVL$INSERT  AVLIR       @@[@@@@@@@@^FU
)@@G@@AVLSR       @@[@@@@@@@@@AVL$RTEST   @@[@@@@@@@@FRA0@@ C8,@@@[@)@@]AD@@@@FV
)@@G@@)@@[N]@@[@[@K^C@@@9?K@@[8KK@@ / K@@FH[X)@@C[Y)@#8KK@@ N?W@@@&;)@@[&;K@@[FW
)@@G@@9*K@@[AA@@@@)@E@%K@K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/K@@@DO'0@@[FX
)@@G@@O'0@@[/8@@@H/KF@@@AB@@@@@@^@@]@@A@@[@@C@@[@@G@@@@@E@@@@@@@@JAVL$DATA    FY
)@@G@@AVL$KTEST   @@[@@@@@@@@@AVLIK       @@[@@@@@@@@^AVLSK       @@[@@@@@@@@@FZ
)@@G@@Q4  @ X0    X1    X2    X3    X4    X5    X6    )@@[N]@@K)@[@^@@@@C8?@@[GA
)@@G@@N@)@[[/K@@@R:8,@@@8K)@@G&;)@@[&;K@@[NCK@@[N*,@@[9*K@@[AA@@@@)@E[MK^@K@[@GB
)@@G@@@@@@@@/[K@@ H[X)@@C[Y)@#C8W@@[N@K@[]/K@@@R:8X@@@8KK@@L/K@@@ H8)@@#AB@@@@GC
)@@G@@)@O@:@[]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/KF@@@9?K@@[O'0@@[O'0@@[GD
)@@G@@/8@@@QAC@@@@@@@@@@@@K)@^C@^[]@@K@@@@/K@@@$*8J@@@C^)@@^/^)@[QAA0@@ /KF@@@GE
)@@G@@RA0@@ C8,@@@[@)@@]AD@@@@@@^@@]@@A@@[@@C@@[@@G@@@@@E@@@@@@@@TAVL$DATA    GF
)@@G@@AVL$KTEST0  @@[@@@@@@@@@@@@@@DABORT$      @@@@@EFORK$       @@@@@FTFORK$GG
)@@G@@      @@@@@GREAD$       @@@@@HPRINT$      @@@@@I)@@@%@@@@@@@@@@@@@@@@@@@GH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@/KF@@]/8F@@[/[F@@@H[H@@@C[I@@#AA@@@@@@@@@@IOWI$ GI
)@@G@@      @@@@@OIOXI$       @@@@@PEABT$       @@@@@QII$         @@@@@RABSAD$GJ
)@@G@@@@^@@]@@A@@@@@A@@[@@E@@@@@E@@@@@@@@ AVL$KTEST1  @@[@@@@@@@@@@@@@@VIDENT$GK
)@@G@@      @@@@@WCRTN$       @@@@@XBBEOF$      @@@@@YWALL$       @@@@@ZERR$  GL
)@@G@@      @@@@@)MCT$        )@@@%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GM
)@@G@@/KF@@]/8F@@[99F@@@9>H@@@9!I@@#AA@@@@@@@@@@@@@@@&CMI$        @@@@@$CMO$  GN
)@@G@@      @@@@@*CMD$        @@@@@(CMH$        @@@@@%@@^@@]@@A@@@@@A@@[@@E@@@GO
)@@G@@@@E@@@@@@@@ AVL$KTEST2  @@[@@@@@@@@@      @@@@@,CADD$       @@@@@\TWAIT$GP
)@@G@@      @@@@@0RT$         @@@@@1NRT$        @@@@@2OPT$        @@@@@3PCT$  GQ
)@@G@@)@@[M^@@@@@@@@@@@@/KF@@]/8F@@[/[F@@@H[H@@]C[I@@ /KF@@]/8F@@[99@@@ 9>H@@@GR
)@@G@@9!I@@#AA@@@@@@@@@@$     @@@@@9APUNCH$     @@@@@'APNCHA$     @@@@@;APRTCNGS
)@@G@@$     @@@@@/APCHCN$     @@^@@]@@A@@@@@A@@[@@E@@@@@E@@@@@@@@EAVL$KTEST3  GT
)@@G@@@@[@@@@@@@@@IALL$       @@@@[[TREAD$      @@@@[]SWAIT$      @@@@[#PFI$  GU
)@@G@@      @@@@[^PFS$        @@@@[ PFD$        @@@@[A)@@[M^@@@@@@@@@@@@/KF@@]GV
)@@G@@/8F@@[99F@@@9>H@@]9!I@@ /KF@@]/8F@@[99@@@ 9>H@@@9!I@@#AA@@@@@@@@@@FACIL$GW
)@@G@@      @@@@[GBDSPT$      @@@@[HINFO$       @@@@[ICQUE$       @@@@[JTRMRG$GX
)@@G@@@@^@@]@@A@@@@@A@@[@@E@@@@@E@@@@@@@@EAVL$KTEST4  @@[@@@@@@@@@@@@@[NCTSA$ GY
)@@G@@      @@@@[OMSCON$      @@@@[PSNAP$       @@@@[QSWTCH$      @@@@[RPUNCH$GZ
)@@G@@      @@@@[SFFORK$      )@@[U^@@K@@@C[I@@B/KF@@]/8F@@[99@@@E9>H@@]9!I@@ HA
)@@G@@/KF@@]/8F@@[99@@@ 9>H@@@9!I@@#AA@@@@)@F@+@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HB
)@@G@@@@@@@@@@@@@@@@@@@@/KF@@]/8F@@[/[F@@@H[H@@^AB@@@@@@^@@]@@A@@@@@A@@[@@E@@@HC
)@@G@@@@E@@@@@@@@JAVL$KTEST5  @@[@@@@@@@@@      @@@@[&ACT$        @@@@[$DACT$ HD
)@@G@@      @@@@[*CJOIN$      @@@@[(CREL$       @@@@[%CLIST$      @@@@[:ADACT$HE
)@@G@@)@@[U^@@K@@@9!I@@B/KF@@]/8F@@[99@@@E9>H@@]9!I@@ /KF@@]/8F@@[99@@@ 9>H@@@HF
)@@G@@9!I@@#AA@@@@)@F@+@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/KF@@]HG
)@@G@@/8F@@[99F@@@9>H@@^AB@@@@@@^@@]@@A@@@@@A@@[@@E@@@@@E@@@@@@@@JAVL$KTEST6  HH
)@@G@@@@[@@@@@@@@@LINK$       @@@@[9RLINK$      @@@@['EXLNK$      @@@@[;UNLNK$HI
)@@G@@      @@@@[/RLIST$      @@@@[.SYSBAL$     @@@@[")@@[U^@@K@@@9!I@@B/KF@@]HJ
)@@G@@/8F@@[99@@@E9>H@@]9!I@@ /KF@@]/8F@@[99@@@ 9>H@@@9!I@@#AA@@@@)@F[EK@@@@@@HK
)@@G@@@@@@@@@@@@@@/KF@@]/8F@@[/[F@@@H[H@@AC[I@@D/KF@@]/8F@@[99@@@J9>H@@^AB@@@@HL
)@@G@@@@^@@]@@A@@@@@A@@[@@E@@@@@E@@@@@@@@OAVL$KTEST7  @@[@@@@@@@@@      CONTINHM
)@@G@@GENCY WRITE&SKIP/WRITE&       (UNDEFINED FUNC)& GATHER WRITE&     ACQUIRHN
)@@G@@E FASTRAND& ABS WRITE UN)@@[U^@@K@@@9!I@@B/KF@@]/8F@@[99@@@E9>H@@]9!I@@ HO
)@@G@@/KF@@]/8F@@[99@@@ 9>H@@@9!I@@#AA@@@@)@F[EK@@@@@@@@@@@@@@@@@@/KF@@]/8F@@[HP
)@@G@@99F@@@9>H@@A9!I@@D/KF@@]/8F@@[99@@@J9>H@@^AB@@@@@@^@@]@@A@@@@@A@@[@@E@@@HQ
)@@G@@@@E@@@@@@@@OAVL$KTEST8  @@[@@@@@@@@@ DRUM&      BLOCK SEARCH DRUM&SEARCHHR
)@@G@@ READ DRUM& BLK SRCH READ DRM&REWIND&           REWIND AND UNLOAD&SET MOHS
)@@G@@)@@@KK0[@@@@)@@@3#@[#@@@@@@@@@G8@@@[[@WK@@G8K@@[C@WK@@C@@@@@9*@@@]/K@@@@HT
)@@G@@/K@@@@AA@@@@)@A@V#@[#@[#@@@@@@)@^@KK0[@@@@)@D@F#@@@@@@9*@@@A/K@@@D/K@@@@HU
)@@G@@/K@K@@9?@@@][@@@@@AB@@@@)@E@;#@[]@@^G@^G@^G@@@@@)@C@C@/K@@@@/K@K@^9?@@@AHV
)@@G@@[@K@@^G8K@@[[@HK@@'=@@@@C@K@@^AC@@@@)@D@D#@^@@@@)@L@;#@[#@[#@@K)@@G@I@@@HW
)@@G@@H@I@@['=@@@@C@!@@@C@K@@C[@)@@G9*@@@E/K@@@LAD@@@@)@S[]^G@^G@^G@^G@#1)G@#1HX
)@@G@@)G@@@@@@@@@I@@@@@H/K@K@CC@)@@G9?@@@E[@K@@CG8K@@[[@I@@@AE@@@@)@)[]#1)G@#1HY
)@@G@@)G@@JA@0@JA@0@@@@@@@@@@O@@@@@N      DELETE@@@@@L@@@@@K      INSERTAF@@@@HZ
)@@G@@)@*[]#1)G@#1)G@@JA@0@JA@0@@@@@@@@@@U@@@@@TE     BALANC@@@@@R@@@@@Q      IA
)@@G@@SEARCHAG@@@@)@0[]#1)G@#1)G@@JA@0@JA@0@@@@@@@@@@)@@@@@ZE     SROTAT@@@@@XIB
)@@G@@@@@@@WE     COMPARAH@@@@)@8[E^G@^G@^G@^G@[]@^@@@C/@@@@/,0@@@C/@@@@9(@@@$IC
)@@G@@9*)@@>9*@@@<A]0@@+E     DROTATAI@@@@)[[[#]@D]@H@K)^K^C[OC[)@@@@@@@C/K@@AID
)@@G@@C^@@@@/,0@@@C/@@]Y'=@@@@C@@@]X/,0@@@/,0@@@AJ@@@@)[D[F]@X]@-@K)A^[]@>]@)@IE
)@@G@@*0J@@@/,0@@@/,0@@@C@@@]*(0J@@@C^0@@@C@@@]$/,0@@@/,0@@@AK@@@@)[M[F@^C]=[]IF
)@@G@@@)K[]@?@@@@@/,0@@@C?J@@@/K@@[W(?J@@@/,0@@@/K@@[Y/,0@@@C/@@@[/K@@[QAL@@@@IG
)@@G@@)[V[F@K^C]OC][]@!]@)@@@@C/K@@@C/@@@[/,0@@@/,0@@@CCJ@@]/,0@@@/,0@@@C@@@](IH
)@@G@@/K@@[YAM@@@@)[=[F]@1@K)^K^C[^@K)H@@@C/@@@J/,0@@@9?E@@]R])@]5'=@@@@C@@@]4II
)@@G@@'=@@@@C@@@]2/,0@@@AN@@@@)[![N]@8^C#1]@8@@@"OEK@[C@)@@H"OEK@@C8@@]V/,0@@@IJ
)@@G@@C/@@@T/,0@@@C/K@@^C@EK@@/,0@@@AO@@@@)[7[E^C^@K)GE]@)@@@@@@@@C/@@]6/K@@[%IK
)@@G@@$')@@6/,0@@@C/K@@@C/@@@[/,0@@@C/@@D#"GK@@IAP@@@@)]@[F]@OK0@^G@@K)K@@@@@@IL
)@@G@@C/@@@]/,0@@@C/@@D]"GK@@I"O@@@TC@)@@H"O@@@NC8@@]V/,0@@@AQ@@@@)]D[]K)GK0@KIM
)@@G@@0@K0@K0@^G@@@@@@@@9*@@@(/KF@@@9!@@@$9?)@@>9?@@@<R]0@@+/,0@@@C/K@@@AR@@@@IN
)@@G@@)]L[F#@@E]@CS@CS@@@@@@@@AVL TR/KF@@@N@K@@:9?@@@(M#W)@@C@K@]"C8@@].N8K@@PIO
)@@G@@^@K@@:AS@@@@)]U[U@*@@@@@ SIZE:&  KEYERTION & INSSS: &  ADDREPACKET@[^@]TIP
)@@G@@S     TISTICEE STAAT@@@@)]>[U@@@@@@@TIME ( AVG. ER      NUMBION   OPERATIQ
)@@G@@RANDOM@@RANK@@@KEYNODES& &  & AU@@@@)]0[U]) @*@@PER SEISONS COMPARO. OF IR
)@@G@@AVG. N@@^@@Y@[[@]3      @]C@]%)     MSECS.AV@@@@)];@+@()@@@@@@@@@@@@@@@@IS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@H@@@@@@&     ARCH: AW@@@@@@@@@@@CK)#KIT
)@@G@@0@^C[[]@H]@O/,0@@@/,0@@@C/@@@)/,0@@@C8K@@!C0@@@#/,0@@@C/@@@)/,0@@@AF@@@@IU
)@@G@@@@^@@]@@A@@L@@*@@A@[@@@@@@E@@?@@@@]_TIME$       FASCIN$     FASC$       IV
)@@G@@FDT$        PRINT$      FMSG$       AVL$DATA    FOCTF$      FMSGR$      IW
)@@G@@FFD1$       FMSKP$      FDECV$      FPRT$       FFD2$       FCOL$       IX
)@@G@@FDECF$      FFLF1$      AVL$INCR    @@@@@@@@@@@@AVL$STATAREA@@@@@@@@@@@HIY
)@@G@@AVL$STATCLR @@[@@@@@@@]KAVL$STATS   @@[@@@@@@@@'AVL$TIMEOFF @@@@@@@@@@@CIZ
)@@G@@AVL$TIMEON  @@@@@@@@@@@^RA0@@[[4K@@#/K@@[)C?K@@@/,0@@@AK@@@@)[)[F@ES@CK@JA
)@@G@@C@-@^)C]@@@@/\)@[(/\)@[(/K@@@2/,0@@@H8@@@[/K@@@K/,0@@@C8@@@B8#K@[VAL@@@@JB
)@@G@@)@@[M@^[@K^[@@@@@@C!GK@;/@)@@S')I@[@C4?K@;/@0@@XC[K@@I;C0@@M;G)@@Y;GK@@YJC
)@@G@@;G@@@YAA@@@@)@E[N@K[@^@K^[@@@@/K@@@V(*GK@;/K@@@OH9K@@]C-GK@;:^"@@@C>GK@;JD
)@@G@@:C"@@@/[K@@X/ @@@MAB@@@@)@O[M[@K^[@@@@@@@@C@)@@LO'0@@[C@K@@K/K@@@Q/[@@@XJE
)@@G@@C1GK@;/K@@@AC@K@@KG9K@@[C8"@@@AC@@@@)@Y[U@@@@@@@[@#@@@]][[@@^@@[#^#^[[@@JF
)@@G@@]#[[@@[@]@@@/KF@@@;?@@@Y;?K@@Y;?)@@Y;*0@@MAD@@@@)@([U@@@@@@@#][[@@^@@[^#JG
)@@G@@]^[[@@##[[@@[@]@@@^@@[]#[@^@@@##[[@@]][[@@^@@[]^#^[[@@AE@@@@)@4[M@@K^[@@JH
)@@G@@@@@@@@@@H@@%@@H@@&@@H@@+^@@[#][@^@@@]#[[@@#][[@@^@@[^]]^[[@@[@#@@@AF@@@@JI
)@@G@@)@"@;@K^@@@@@@@@@@@@@@@@@@@@@@@@@@@@CC\@@[C^\@@@CC\@@@C8\@@@@@H@@6@@H@@2JJ
)@@G@@@@H@@,AG@@@@@@@@@@) @*@@PER SEISONS COMPARO. OF AVG. N@@^@@Y@[[@]3      JK
)@@G@@@]C@]%)     MSECS.AV@@@@@@^@@]@@A@@@@@A@@[@@E@@@@@E@@@@@@@[ AVLTRA      JL
)@@G@@@@[@@@@@@@@@ IMAGE THAT WAS TOO BIG ERROR IN @ADD IMAGE.  THERE SHOULD BJM
)@@G@@E A SECONDARY MESSAGE.  READ$ CALLED TO READ INT)@@[K*[M@@0M)S@@0@@@:]@@JN
)@@G@@@@@@@@@@@@@@TZR@@@@@^@@@@@R]]@@@:@@W@@D@@@@@@@@@@[]@@RAA@@@@)@E[K@0M)S@@JO
)@@G@@0@@@@@@@H]@@@@@@@@@@@@@@XNR@@@@@]@@@@@R]@@@@-@@M@@@@@@TZA@@@@@[@@@AB@@@@JP
)@@G@@)@O[K@0M)@[)@@@@@@@@#]@@@@@@@@@@@@@@XNI@@@@@A@@@@@@]]@@@#@@H@@@@@@XOR@@@JQ
)@@G@@@@[@@@AC@@@@)@Y[S@G@@S@@@@[@@@@@:]@@@@@@@@@@@@@@XNM@@@@@[@@@@@H]@@@@@@@@JR
)@@G@@@@@@@@VALUE@@@[@@@AD@@@@)@([K#[E[)@E@O)@@@@@K@@@@@@@@@@[]@[L@@@@@@T@@@@@JS
)@@G@@@@]@@@@@#]@@@@&@@C@@@@@@STZ@@@AE@@@@)@3[K0M)S@@0@@@@@@@@@@@@STC@@@@@[@@@JT
)@@G@@@@.]@@@@@@@@@@@@@@R8@@@@@@]@@@@[Q]@@@[9@["AF@@@@)@.[K0M)S@@0@@@@@@@@@@@@JU
)@@G@@SHR@@@@@[@@@@@.]@@@@@@@@@@@@@@SRA@@@@@]@@@@[B]@@@[]@@8AG@@@@)[B[K0M)S@])JV
)@@G@@S@@@@@@@@@@@SDA@@@@@[@@@@[B][@@@@@[V@@@@@@SHL@@@@@#@@@@[L]@@@[G@@.AH@@@@JW
)@@G@@)[L[K0M)@A]O#@@@@@@@@@@@R6@@@@@@#@@@@[%]@@@[\@@3@@@@@@SCZ@@@@@E@@@@@@]]@JX
)@@G@@@[%@[BAI@@@@)[V[SG@@S@#@@[)@@@@@@@@@R1@@@@@@[@@@@[>]@@@@@@@@@@@@@@SDR@@@JY
)@@G@@@@[@@@@[G]@@@@@@@@AJ@@@@)[&[K0@A]O#@@O@@@@@@@@[4@@@@@@R3@@@@@@#@@@@[L][@JZ
)@@G@@@[>@[Q@@@@@@R2@@@@@@]@@@@[%]]@AK@@@@)[0[S0@[)@#@@@3]@@@@@@@@@@@@@@R5@@@@KA
)@@G@@@@[@@@@[\]@@@@@@@@@@@@@@R4@@@@@@[@@@@[Q][@AL@@@@)[;[K@G@[K@@@@@@@@@@@@@@KB
)@@G@@@@@@]V@@@@@@R9@@@@@@[@@@@@3]@@@@@@@@@@@@@@R7@@@@@@[@@@AM@@@@)] [K(@]A@G^KC
)@@G@@*A@#@@@@[__/@]D@@@@@@@@@@@]__.@]J@@@@]A@]G@@[__"@]D@@@@@@@@@@@J@@@AN@@@@KD
)@@G@@)]J[K0M)S@G@SDKG@@@@@@@@@@]__9@]J@@@@]M@]S@@[__'@]P@@@@@@@@@@@^__;@]V@@@KE
)@@G@@@]D@]PAO@@@@)]T[K0[)>@@0[)>@0@@]$@@@@]Y@]=@@[__6@]-@@@@@@@@@@@C__7@@@@@@KF
)@@G@@@]J@]$@@[__8@]P@@@AP@@@@)]<[K#@A]O#@[)@@@@@@[__2@]!@@@@@@@@@@@^__3@]V@@@KG
)@@G@@@]-@]!@@[__4@]-@@@@@@@@@@@]__5AQ@@@@)]!@00M)S@G@@@@@@@@@@@@@@@@@@@@@@@@@KH
)@@G@@@@@@@@@@[__0@]!@@@@@@@@@@@]__1@]$@@@@]%@]0AR@@@@@@^@@]@@A@@]@@E@@@@@E@@@KI
)@@G@@@@E@]3@@@@@@AVL$KTEST2  AVL$KTEST0  [@HK@@'=@@@@C@K@@^AC@@@@)@D@D#@^@@@@KJ
)@@G@@)@L@;#@[#@[#@@K)@@G@I@@@H@I@@['=@@@@C@!@@@C@K@@C[@)@@G9*@@@E/K@@@LAD@@@@KK
)@@G@@)@@[U@@@@@@@ @I@@] ^I@@@[CY@@@[^!@@@*@@@@H[^%@@[(@@@@HCCU@@[;/E@@@Q'!@@@KL
)@@G@@A])@@JAA@@@@)@F@2[]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/KF@@@R])@@J'=@@@@KM
)@@G@@*^E@@@ 4E@@@[C%@@[AB@@@@@@^@@]@@A@@[@@C@@[@@G@@@@@E@@@@@@@@LCTSA$       KN
)@@G@@PIONP$      @@[@@@@@@@@@F$    FILE NOT CATALOGED OR NOT MASS STORAGE FORKO
)@@G@@MAT   NRT$ REQUEST FROM NONREAL TIME ACTIVITY   )@@[M[@K^[@@@@@@@@G8)@[\KP
)@@G@@ @E@@[[[E@@@C[@@@!/K@@@%:[@@@!+@0@@,C@'@@@Q'!@@@A])@@LAA@@@@)@E[U@@@@@@@KQ
)@@G@@C@0@@H;CK@@MG8)@@#CC%@@][^%@@]W8)@@W;G)@@=[C%@@]T8)@[0W8)@[0;G)@@=AB@@@@KR
)@@G@@)@P[U^@@@@@@C8K@@@[^%@@[Q;%@@#;*)@@MK8'@@#T@0@@IW@0@@I;G0@@=/K@@@%?C'@@]KS
)@@G@@H80@@#AC@@@@)@)[U@K@K@@@C8U@@@[C'@@[ ^J@@@/K@@@)C@K@@J[^\@@@/K@@@*:9I@@@KT
)@@G@@C8")@@ @I@@][CY@@@AD@@@@)@:@+@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@KU
)@@G@@@@@@@@"__@@@@\@@@@/KF@@@Q])@@LAE@@@@@@@@@@T SENT TO CSF$    ADDRESS IN AKV
)@@G@@0 GIVEN TO CSF$ NOT IN PROGRAM LIMITS     MAXIMU@@^@@]@@A@@@@@A@@[@@E@@@KW
)@@G@@@@E@@@@@@@@\PIOPAI$     @@[@@@@@@@@@DER THIS RUNS ACCOUNT NUMBER  PCT TOKX
)@@G@@O SMALL TO LOAD$ A RELOCATABLE SEGMENT    INVALID INPUT PARAMETER TO LOAKY
)@@G@@)@@[F@K)@K^C@O[]@[@K)]K@/K@@[W/,0@@@C@@@#G'=@@@@C@@@#F'=@@@@C@@@#B'=@@@@KZ
)@@G@@C@@@##AA@@@@)@D[E^C@4[]@KK[@@@@@@@@@/K@@[Y2CH)@[R#K@#HN/K@@ CC@@@D/K@@@*LA
)@@G@@/,0@@@C@@@@MC9)@@[AB@@@@)@M[N]@K[@^@K@@@@@!80@@E/G0@[-H80@@0/K@@@):80@@ LB
)@@G@@/@0@@);=)@@AC80@@@C9K@@@C@)@@FAC@@@@)@W[N@[@^G@^G@^[@@[ X@@@/[K@[-/K@@@>LC
)@@G@@:8K@[ %8K@[[C8X@@@/K@@@OG[K@@JT9K@@E/K@@[-AD@@@@)@&[EK^G@#1)G@^G@@^G@@@@LD
)@@G@@[^@@[^T8@@[0W8@@[0;G@@@=C^@@[^[0@@[GC^@@[ /K@@@EG9)@@[AE@@@@)@\[F#@@K) KLE
)@@G@@0@K^G@[]@S@@C8?@@@/,0@@@G8@@@#C^@@[^8L@@@4N @@[#/,0@@@C8?@@@C@K@[-AF@@@@LF
)@@G@@)@8[F#@[]@X@K0@[#@[@@@@@C8@@@K8L@@[@;/@@@@C9)@@@C[0@[^N @@[]8L@@@4/,0@@@LG
)@@G@@C@K@[-AG@@@@)[[[N]@S^@[]@SK0@@*^@@[[[^E@@^/,0@@@C8@@@WM#H)@@N/K@@KR#K@#ILH
)@@G@@&;@@@[R'?@@@/,0@@@AH@@@@)[F[F@^C[-@K)C^@@@@@@@@@C/@@@@8L@@[@G9)@@['=@@@@LI
)@@G@@C@@@#J[^E@@A/,0@@@C8@@@F/K@@[JAI@@@@)[O[#]@=K)EK)FK0@K0@K)GK)H@@@@'=@@@@LJ
)@@G@@'=@@@@*^@@@@ 4@@@@/,0@@@/,0@@@C/@@@@/,0@@@AJ@@@@)[W[#]@ ]@5@K)[K)HK^C@OCLK
)@@G@@#K@@@@'=@@@@'=@@@@C@@@#R'=@@@@'=@@@@C@@@#N'=@@@@'=@@@@AK@@@@)[=[##@[#@[#LL
)@@G@@@[]@9#@[@K)JK@@@@@C/@@#S/,0@@@/K@@[_*^@@[['=@@@@*^@@@@ 4@@@@;/@@@@AL@@@@LM
)@@G@@)[?[F][@K)L^C^=[][@K)M@@/,0@@@C/K@@[/,0@@@C/@@#V/,0@@@C/K__"/,0@@@C@@@@MLN
)@@G@@/,0@@@AM@@@@)[5[E^C^4[][@K)LK)FK)O@@/,0@@@/,0@@@/,0@@@C@@@@M/,0@@@C/@@#XLO
)@@G@@/,0@@@&_@@@]C/E@@@AN@@@@)["[U@^C K@@C8K@@I&;@@@[C^E@@^N9@@[=[[%@@ /,0@@@LP
)@@G@@C/E@@@C8K@@@ )E@@I?90@@] )E@@IAO@@@@)]D[M@^C -][W@@@@@G@@@@NC@E@@ '=@@@@LQ
)@@G@@*4E@@#/,0@@@C/E@@@M#H)@@N8K@@W&#)@@MC@%@@ AP@@@@)]N[EK^C#4[][@^CA^CAK@@@LR
)@@G@@/,0@@@/,0@@@C/K@@AC8E@@@/,0@@@C/@@#Z/,0@@@8L@@]A[@E@@ AQ@@@@)]W[E^CA=C @LS
)@@G@@^CA0@@@@@@@@*4E@@#/,0@@@C/E@@@N9@@[=[[%@@ /,0@@@/,0@@@C/K@@@C/@@@[AR@@@@LT
)@@G@@)]>[N][W@[][X@@@@@C@E@@ 8KK@]:'=@@@@%@?)@@N8K@@V&#)@@MC@%@@ &;@@@[C^E@@^LU
)@@G@@'=@@@@AS@@@@)]\[E^[]@.@K)K[][)@@@@@@/,0@@@C/K@@AC8E@@@/,0@@@C/@@#+/,0@@@LV
)@@G@@8L@@]+[@E@@ G@@@@NAT@@@@)]8[#][=^CA=C [][1]@4@@@@@@@@@'=@@@@/,0@@@C/E@@@LW
)@@G@@/,0@@@/,0@@@C/K@@@C/@@@[/,0@@@AU@@@@)@@@C@)[[[C@@@@@@@@@@@@@@@@@@@T     LX
)@@G@@PIOTESTR @@[PS @[0PC @@[ACT@@[1F @@[@\@@@@AV@@@@)[E@)])O@@@@)[M@C1@.EKI)LY
)@@G@@)[O@C@@@@@@@@@@@@@@@@@@[@@@@@@@@@@[+@[@@[Q@@@@@@@@W@@@AW@@@@)[-@C*@@@@@@LZ
)@@G@@)#@[]@*@ @@@@[#@#^NED ON/O TURPAGE I@@#@#@T     PIOTES@FREE @@#@[+AX@@@@MA
)@@G@@)#C[E@* G@]&@[N@@*@@@@@@UNKNOW@@[@[=@@[@[A@@[@[@@[@@@[@@#@#CST,F   PIOTEMB
)@@G@@@ASG,TAY@@@@)#L[U])@O@@@@ASG,TST&    PIOTE@FREE @[#@#O VALUERAMTERBAD PAMC
)@@G@@@[#@#KMETER N PARAAZ@@@@)#W[]@@@@@@@@@@@@@@@@@@@@@@@@@READ& PKT & N&    MD
)@@G@@WRITTEPKT & T&    PIOTES&     BA@@@@0@@@]@@@@@@@@@@@@@@@@@@@@@@@@@READ& ME
)@@G@@PKT & N&    WRITTEPKT & T&    PIOTES&     BB@@@@@@^@@]@@A@@Z@[^@@@@[^@@@MF
)@@G@@@@E@[>@@@@#=CSF$        PRINT$      RINF$       SELT$       ELT$        MG
)@@G@@PIOPAI$     BGET        PIONP$      FORK$       FASCIN$     FASC$       MH
)@@G@@FDT$        CTSA$       EXIT$       CTS$        FLOCK$      FMSG$       MI
)@@G@@FDECV$      FCSF$       FDTA$       FUNLOCK$    PIOFO$      PIOW$       MJ
)@@G@@ERR$        FOCTF$      FMSGR$      FPRT$       PIOR$       PIOFC$      MK
)@@G@@PIO$STATS   PIO$TRACE    THE ALTERNATE ROUTE    A ROUTE$ REQUEST HAS BEEML
)@@G@@N MADE FOR INPUT, BUT INPUT IS NOT DEFINED FOR T)@@[U@@@@@@@(@@@@J[C\@@@MM
)@@G@@*@@@@J[^"@@@/@:@@@C^.@@@CC!@@@[CW@@B[C.@@])8))@@CC!@@]AA@@@@)@F[U@@@@@@@MN
)@@G@@+8)Z__CC!@@]CCW@@B;/E@@@/KF@@@[CY@@@ CH@@@[^U@@[[^!@@@C^%@@[[C%@@[AB@@@@MO
)@@G@@)@Q[M[]@@^@K)[@@@@C8K@@['=@@@@/SE@@@/K@@@+*=G@@I/KF@@@'=@@@@*^E@@@ 4E@@@MP
)@@G@@[C.@@]AC@@@@)@)[U@K)@@@@W9@@@W;H@@@=CDG@@EAE/@@I/KF@@@ =G@@I'=@@@@*^E@@@MQ
)@@G@@ 4E@@@/KF@@@[=W@@IAD@@@@)@:[U@^@K[@@9?,@@@/@)@@1C^!@@]/@K@[IC^X@@@/K@@@2MR
)@@G@@C^U@@[;/E@@@ =G@@IC[G@@FK[G@@FAE@@@@)@6[MK[@K[@@@@@@@@K^%@@]H8)@@[C@!@@[MS
)@@G@@/K@@@2C@K@@J/,0@@^/K@@@.,[H@@[/K@@@19/?@@@AF@@@@)[@[MK[@@^[@@@@@@@/,0@@VMT
)@@G@@/K@@[F(?H@@]%^?@@]C^,@@]C^!@@]/K@@[D0@H@@]/K@@@1,@)@@KAG@@@@)[E[N@K[@^@KMU
)@@G@@@@@@@@*?H@@]1@H@@]/@K@[DCCX@@@/K@@[LCCU@@[/K@@[:C8)@@[/,0@@@/K@@@,AH@@@@MV
)@@G@@)[O[N@^@^@K^@@@@@@C8)@@[/,0@@@/K@@[K*0H@@]/K@@[W:^/@@]C^"@@]/@)@[WC^!@@]MW
)@@G@@/K@@[KAI@@@@)[Y[U^@@@@@@C8))@@[@!@@[T^%@@]W^%@@];G)@@=C@?@@F[^H@@] *G@@IMX
)@@G@@/,0@[2=4!@@][*?@@IAJ@@@@)[([M@K)]@(@A) C[@C9@@@@/K@@[3C9@@@@/KF@@@RE/@@IMY
)@@G@@'=@@@@*^E@@@ 4E@@@C8)@@@[C!@@]AK@@@@)[3[U@@[]@O@9(G@@@'=@@@@9*?@@@9?\@@@MZ
)@@G@@C^.@@]9!G@@@[1G@@#9*?@@^&F%@@]C8!@@#C@.@@[AL@@@@)["[M[@[@[]@C@@@@@'=@@@@NA
)@@G@@*^E@@@ 4E@@@/K@@]D(*G@@I/KF@@@/K@@]#*4G@@#[C!@@]C8))@@AM@@@@)]C[MK@[]@[@NB
)@@G@@EK#C@@/K@@]PC9@@@@/K@@#7'=@@@@*^E@@@ 4E@@@ @H@@];/E@@@/@K@#7 *G@@IAN@@@@NC
)@@G@@)]M[M]=@8@CK])@@@@C4?@@#'=@@@@9*?@@^&F%@@][1G@@#C@.@@[C8!@@#C9@@@@[0.@@]ND
)@@G@@C80@@[AO@@@@)]W[U@@@@@@@ @@@[]G@)@[]T8)@@WC@)@@J[@?@@FG^%@@]T^%@@]W^%@@]NE
)@@G@@;G)@@=C@?@@F/KF@@@AP@@@@)]$[U@@@@@@@;^K@@=C^W@@EG8!@@#/@V@@@#C/@@EHC/@@ENF
)@@G@@N8Z@@@CC/@@E!C/@@EH@0@@ICC'@@]AQ@@@@)]2[U@@@K@@@/K@@#[(?G@@A @@@[]9*W@@ENG
)@@G@@9*W@@C9?W@@^/KF@@@&;)@@[&;K@@[[^/@@EK@)@[[AR@@@@)].[U@@[@K@@/,0@@$/\0@]7NH
)@@G@@/KJ@@@ *G@@IQA?@@BAA?@@HAE/@@H[@W@@F[@)@[]W8K@@W @@@@HAS@@@@)#C[N@[@^[@KNI
)@@G@@[@@@@@/K@@#B*CG@@E/,0@]X/,0@@M/,0@[0*0H@@]/,0@[2=8)@@[C4!@@]/@)@#NAT@@@@NJ
)@@G@@)#M[N@^[]@)K)D^@K@/\0@]7N80@@[/K@@#VN80@@@'=@@@@C@@@[#'=@@@@C@@@ <[@@@[#NK
)@@G@@/K@@#3AU@@@@)#W[N@[@[@K^@@@@@@(@@@[#/K@@#,/K@@#*/K@@#=*0H@@]*@@@[#/@)@#>NL
)@@G@@^?.@@](?H@@]/,0@@$AV@@@@)#&[N@^[@[@^@@@@@@M#!)@@/,0@]X 4G@@#/K@@]#%8)@@ NM
)@@G@@*^G@@#/@)@#,/,0@]M*@@@[#/,0@]KAW@@@@)#0[V@^@@@@@/KF@@@QA?@@HRE/@@HC4/@@#NN
)@@G@@[^?@@#;C)@@M9*?@@^9??@@C/K@@#W*CG@@E/,0@@MAX@@@@)#;[N@K^[@@K@@@@@@!C%@@]NO
)@@G@@CC?@@E/^0@^AW^%@@];G)@@=C@?@@F/K@@^H/@)@#_/,0@@$/\0@]7AY@@@@)^ [N@E@O@K@NP
)@@G@@@@@@@@[4!@@]C8)@@- 4G@@#/^)@]#%8)@@ /,;@@@R'0@]K()G@@IR'0@]M/K@@^HAZ@@@@NQ
)@@G@@)^J[N@@@K[@@@@@@@@/,0@[2*4G@@A/K@@^T*?H@@]CCW@@B[@?@@J!@?@@JC@?@@FM#Y)@@NR
)@@G@@/,0@]XBA@@@@)^T[N@^[@K@@@@@@@@W@K@@J;GK@@=CC'@@]*?G@@AC^'@@]/\0@#[/K@@#3NS
)@@G@@/K@@#/*CG@@E/,0@@MBB@@@@)^<[M@[]@>]@*@@@@@[^?@@]C@)@[%'=@@@@'=@@@@%8)@@\NT
)@@G@@C0%@@@[@W@@JT^U@@]G8K@@[*@@@@IBC@@@@)^![N@^@K@^@@@@@@@C^!@@]/@K@ KCCU@@[NU
)@@G@@;/E@@@ =G@@I/\0@]7N80@@[/K@@^1N80@@@/K@@#7BD@@@@)^7[MK[@K^@^[@@@@@/K@@ INV
)@@G@@/K@@ [*@@@[#(CH@@]/K@@^3/,0@@V/K@@^.1@H@@]/K@@ I%8?@@@BE@@@@) [[N@[]@C^@NW
)@@G@@K@@@@@*@@@[#/,0@[0*0H@@]/,0@[2=8)@@[C4!@@]'=@@@@*^E@@@ 4E@@@/,0@@@BF@@@@NX
)@@G@@) F[MK^@K@K)]@@@@@*?G@@AC@W@@J'=@@@@*^E@@@ 4E@@@/K@@^5CCX@@@/K@@^3/,0@@MNY
)@@G@@ ^H@@]BG@@@@) P[MK^[@K@@@@@@@@OR ARESTED F REQUEUNLOCKPIO$: /K@@#7/,0@@MNZ
)@@G@@/\0@#[/K@@#3T8K@@WBH@@@@) Z@%@E@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OA
)@@G@@@[D@ UOCKED.USLY LPREVIOA NOT BI@@@@@@@@@@K)@@@@W9@@@W;H@@@=CDG@@EAE/@@IOB
)@@G@@/KF@@@ =G@@I'=@@@@*^E@@@ 4E@@@/KF@@@[=W@@IAD@@@@@@^@@]@@A@@F@@W@@E@[^@@@OC
)@@G@@@@E@@@@@@@ =CTSA$       CTSQ$       CTS$        UNL$        W$          OD
)@@G@@IOW$        R$          RDL$        PRINT$      ERR$        TSQRG$      OE
)@@G@@PIOCBB$     @@[@@@@@@@ RPIOFC$      @@[@@@@@@@^0PIOFO$      @@[@@@@@@@^XOF
)@@G@@PIOPF$      @@[@@@@@@@^,PIORL$      @@[@@@@@@@#UPIOR$       @@[@@@@@@@#SOG
)@@G@@PIOUL$      @@[@@@@@@@#APIOW$       @@[@@@@@@@#;PIO$EXIT    @@[@@@@@@@#7OH
)@@G@@PIO$SETUP   @@[@@@@@@@#[ FOR THE OUTPUT COMPLETION USAGE CODE WITHIN THEOI
)@@G@@ REQUESTING PACKET FOR A CMO$ REQUEST     A CMO$)@@@C@)@]@KK0[@@@@)@@@<#OJ
)@@G@@@[#@[#@[#@@@9(@@@D9*)@@B9*@@@ A]0@@^/K@@@@/K@@@@@\@@@@AA@@@@)@^@3#@[#@[#OK
)@@G@@@@K0@K0@@@@@)@I@C@@@@@@@/K@@@@/K@K@]^@0@@[N^/@@A^@0@@H^@)@@G^@K@@FAB@@@@OL
)@@G@@)@J@D#@^@@@@)@E@3#@[#@[#@[#@[#@[#@@@N@)@@GN@K@@F9!@@@D9?)@@B9?@@@ R]0@@^OM
)@@G@@/K@@@EAC@@@@)@K[##@[#@[@K^G@^G@[#@@@@@@@@@C@0@@[C^:@@@'^@@@];/@@@@/K@@@6ON
)@@G@@/K@@@O/K@K@IN@0@@HAD@@@@)@S[N@@[@^G@@@@@@@*@J@@BC@0@@[CDG@@C/K@@@*!8)@@]OO
)@@G@@[[J@@@G9@@@[C[J@@@G8"@@@/@0@@*AE@@@@)@+[U@@@@@@@>1G@@A;(J@@@C9@@@[;C0@@[OP
)@@G@@K8)@@][[J@@CG[J@@C[[J@@A![J@@A[[J@@B?[J@@BAF@@@@)@![F@@K0@K0@K0@K)@@@@@@OQ
)@@G@@/KF@@['=@@@@*^@@@@ 4@@@@'^@@@I/,;@@@*8F@@@RE/@@G/K@@@1AG@@@@)@6[N#@[#@@KOR
)@@G@@@K@@@@&;K@@[ ^H@@E[C!@@E/K@@[ :C!@@EC8)L<5/@K@[CC^W@@A'^@@@];/@@@@AH@@@@OS
)@@G@@)[@[U@@[@@@@RE/@@G/K@@[H(0G@@A[^!@@EG8)@@[C^!@@EC^W@@AM#Z)@@N8K@@E;G)@@=OT
)@@G@@C8)@@IAI@@@@)[F@'^G@^G@^G@^C@@@@@@@@@@@@@@@@@@@@/KF@@@'=@@@@*^@@@@ 4@@@@OU
)@@G@@'^@@@I/,;@@]*8F@@@AJ@@@@@@^@@]@@A@@[@@C@@B@@=@@@@@E@@K@@@@[MCTS$        OV
)@@G@@PIO$A0      @@@@@@@@@@@ PIO$A1      @@@@@@@@@@@APIO$REST    @@@@@@@@@@@IOW
)@@G@@PIO$SAVE    @@@@@@@@@@@]PIO$STATQ   @@@@@@@@@@@@PIO$STATS   @@[@@@@@@@@MOX
)@@G@@PIO$STL     @@@@@@@@@@@[ THE PACKET SPECIFIED AS THE OUTPUT COMPLETION AOY
)@@G@@CTIVITY WAS NOT VALID FOR A CMS$ REQUEST  CMI$ OR CMO$ REQUEST REQUESTS OZ
)@@G@@)@@[F@K^[#@[]@@K)[^C@)@@/,0@@@C/@@@@/,0@@@C/@@@@/,0@@@A]0@@@/K@@#)/K@@[BPA
)@@G@@/K@@@#AA@@@@)@D[F]@H]@L@K) []@T]@X@@RE"@@O/,0@@@/,0@@@C/K@@AC8J@@@/,0@@@PB
)@@G@@C/@@^?C@0@@@/,0@@@AB@@@@)@M[#@#[E[)>@0M)SDKG^*A]O@@@@@@@!@^;@@!@^'@@!@^9PC
)@@G@@@@!@^8@@U@^4@@U@^\/KF@@@C^,@@OAC@@@@)@U[EK) ^C]^C[1]@>@@@@@@C/K@@^C/@@^/PD
)@@G@@/,0@@@9?J@@@/,0@@@/,0@@@CCJ@@C/,0@@@C/I@@@AD@@@@)@<[F]@(@^[]@?K)G^C]@@@@PE
)@@G@@/,0@@@C@J@@D/,0@@@C/@@@[/,0@@@C@@@^"(?J@@AC@@@^./,0@@@AE@@@@)@?[F@K^C[OCPF
)@@G@@#L]@T]@WK)F@/,0@@@C@I@@@/,0@@@/,0@@@C/K@@AC@@@@@/,0@@@C/@@^_/K@@[[AF@@@@PG
)@@G@@)@5[F]@4K^[]@P@K)B^C]K@@/,0@@@9?I@@@/,0@@@/K@@[[/,0@@@C/@@ ^/^)@@;C^\@@]PH
)@@G@@C@0@@@AG@@@@)@"[F]@WK)C[]@9]@.#@@@@@/KF@@@R]0@@@/,0@@@/,0@@@C/K@@@C/@@@[PI
)@@G@@/,0@@@C@J@@[/,0@@@AH@@@@)[B[#][[][ ]@@K)[^C@=C@0@@@@@@/,0@@@/,0@@@C/@@@@PJ
)@@G@@/,0@@@C/@@@@/,0@@@'^@@@@;/@@@@AI@@@@)[J[F@K0@K)JK)MK[@@@@@@@[^!@@EH8)@@[PK
)@@G@@/@)@[TC^!@@E/@K@#VC@K@@@/,0@@@'^@@@BC@)@ AAJ@@@@)[S[N@^C[[@[#@@@@@G@!@@#PL
)@@G@@C@!@@][@)@@[G@!@@[C@!@@@/))@#VC0\@@AC@0@@@ CH@@E/^)@#VAK@@@@)[+[N#@@@@K^PM
)@@G@@G@@@@@[@0@@#"C0@ B"G0@@K"O!@@^[@0@@K"O)@@KG[H@@ C[H@@^C8)@]V[@)@@]AL@@@@PN
)@@G@@)[?[F#@@^G@[@^[#@@@@@@@@[@0@@^"C0@ B"^0@@KC@0@ C"H@@@J"O)@@[[@0@@K"O)@@KPO
)@@G@@C[@@@]AM@@@@)[5[#]@@K)[^C@=C@4[]@O@@@@@@@@/,0@@@C/@@ D/,0@@@/,0@@@C/@@@@PP
)@@G@@/,0@@@C/@@@@/,0@@@AN@@@@)[.[F]@KK)D[]@9#@[@K) @@/,0@@@C/@@ J'^@@@D/,0@@@PQ
)@@G@@C/K@@@C/@@@]/,0@@@9?J@@@C@0@@@AO@@@@)]A[#][CK)CK)B^C]^C[4G@@@@@@@@C@@@@[PR
)@@G@@/,0@@@/,0@@@C@J@@[/,0@@@/,0@@@C@J@@@C@0@@@AP@@@@)]I[F]@)^C#=[]@OK)CK)B@@PS
)@@G@@/,0@@@/,0@@@C@J@@]/,0@@@C/@@ P/,0@@@C/K@@@C/@@@[/,0@@@AQ@@@@)]R[EK)CK)BKPT
)@@G@@0@K)C[]@9@@@C/@@ V/,0@@@C/K@@@C/@@@[/,0@@@C@@@@]/,0@@@/,0@@@C@J@@#AR@@@@PU
)@@G@@)])[F]@OK)CK)B^C]^C[4G@@C/@@@[C@K@@#/,0@@@/,0@@@C@J@@ /,0@@@/,0@@@C@J@@^PV
)@@G@@/,0@@@AS@@@@)]([F][H]@W^C#=[]@OK)C@@/,0@@@C@J@@D/,0@@@C/@@ +/,0@@@C/K@@@PW
)@@G@@C/@@@[/,0@@@/,0@@@AT@@@@)]2[E^C#=[]@P#@@K)NK)B@@/,0@@@/,0@@@C/@@@[C@K@@^PX
)@@G@@/,0@@@C/@@ $/,0@@@C/K@@@C/@@@[AU@@@@)];[E^C#)K^[]@P#@@@@@@@@'^@@@F/,0@@@PY
)@@G@@C/@@ %/K@@#C%[Z@@AC[Z@@B/,0@@@C/K@@@C/@@@[AV@@@@)#^[E^C#=[@K) K0@K)B@@@@PZ
)@@G@@C[Z@@A/,0@@@'^@@@F/,0@@@C/@@ ,/K@@#R/,0@@@C/K@@@C/@@@[AW@@@@)#H[F#@[]@W^QA
)@@G@@G@[#@@@@@@@@C/K@@@C/@@@['^@@@FC[K@@KW[@@@[;H@@@=C[J@@C/,0@@@'^@@@FAX@@@@QB
)@@G@@)#Q[#]@8^C#=C#4C ^C^^C^@@@@@@@*^@@@@ 4@@@@'^@@@@/,0@@@/,0@@@C/K@@@C/@@@[QC
)@@G@@/,0@@@AY@@@@)#Y[F][OK0@K)@^C@L]@D]@G/,0@@@/,0@@@C/@@@@/,0@@@C/@@@@/,0@@@QD
)@@G@@A]0@@@/KF@@@'=@@@@AZ@@@@)#$@:@K0@K)JK0@@@@)@B@KK0[@@@@@@@@@@/K@@#?/K@@@@QE
)@@G@@/KF@@@R]0@@@/,0@@@'^@@@BC@)@ 4BA@@@@)#?[F@K) K)^[]@T]@WK)F@@/,0@@@C@@@@IQF
)@@G@@/,0@@@/,0@@@C/K@@AC8J@@@C@0@@@/,0@@@C/@@ 5BB@@@@)#5@;]@WK)D[]@9#@@)@D@C@QG
)@@G@@@@@@@@/K@@@@/K@K@B/,0@@@C/K@@@C/@@@[/,0@@@9?J@@@/,0@@@BC@@@@)@E@D#@^@@@@QH
)@@G@@)#/@;]@K[@@@@@@@@@C^X@@@G8)@@[/@K@^^C^V@@[C8)@@@RA/@@BC@@@@@/K@@#/BD@@@@QI
)@@G@@)^#[#@K0@^G@^[]@P#@[]@)@@@@@@@/,0@@@C@@@@ /,0@@@C/@@ '[@K@@ACCV@@][@)@@ QJ
)@@G@@/K@@^@BE@@@@)^F[#]@X#@@K[][T]@X#@@@@@@@@@@C[K@@A/,0@@@/,0@@@C/@@@S/K@@^LQK
)@@G@@?8@@@]C@@@@ /,0@@@BF@@@@)^N@:#@@^C#=G@@@@@)@F@KK0[@@@@@@@@@@/K@@^S/K@@@@QL
)@@G@@/K@K@D/,0@@@C/K@@@C/@@@['^@@@FBG@@@@)^S[MK)CK[]@*@K0@@/K@@@F?9@@@]W9@@@WQM
)@@G@@C9@@@@G9K@@V/,0@@@C/K@@AC/@@ //,0@@@C@@@@LBH@@@@)^+[EK)G^C -]@-@^C])@@@@QN
)@@G@@/,0@@@C/K@@DC/@@ ./,0@@@C@@@@K/,0@@@C/@@@(/,0@@@C/@@@[BI@@@@)^:[V#@@@@@@QO
)@@G@@RITES USER W&      FROM  WORDSEADS &USER R& &   ACKET PIO$ P/K@@@FBJ@@@@QP
)@@G@@)^6[U@@@@@@@ &, FIPAGE &SECTORWORD   AT   @FAULT@@@HIT@WRITE@@READS TO &QQ
)@@G@@& WORDBK@@@@) [[U@@@@@@@ATISTII/O STPAGED KG@@@@K"K@@@CLOSEDILE&  , NO FQR
)@@G@@R: &   SECTOLE: & BL@@@@) G[U@@@@@@@EADS: PAGE RL: &    TOTATES: &&  WRIQS
)@@G@@EADS: USER R&      FILE CS FORBM@@@@) R[U@@@@@@@%&    ATE: & HIT RTS: & QT
)@@G@@  FAULITS: &PAGE HL: &    TOTATES: &&  WRIBN@@@@) +[U@@@@@@@QUEST I/O REQU
)@@G@@FIXED N: &%&DUCTIOI/O RE &    RITES:FORE WEAD BEPAGE RBO@@@@) ![U@@@@@@@QV
)@@G@@& & ONACKET PIO$ POPENEDAVG: &X: &   &  MA: MIN:LE I/OVARIABSIZE &BP@@@@QW
)@@G@@) 8@'@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@RS)    SECTO WORDS& OF && PAGE&     QX
)@@G@@ FILE BQ@@@@@@@@@@@@@@K^G@@@@@[@0@@#"C0@ B"G0@@K"O!@@^[@0@@K"O)@@KG[H@@ QY
)@@G@@C[H@@^C8)@]V[@)@@]AL@@@@@@^@@]@@A@@R@@4@@]@@/@@@@@E@@H@@@@ _FLOCK$      QZ
)@@G@@FASCIN$     FASC$       FDT$        PIO$A0      FMSG$       FOCTF$      RA
)@@G@@FMSGR$      FDECV$      FFD2$       FCOPY$      FFD1$       FSKIP$      RB
)@@G@@PIO$A1      FPRT$       FUNLOCK$    PIO$STATQ   PIO$SAVE    PIO$STL     RC
)@@G@@FFLF1$      PIO$REST    CTS$        FCHAR$      PIO$TRACE   @@[@@@@@@@@@RD
)@@G@@PIO$TRACES  @@[@@@@@@@[B@]D[Z=@]C[Z!@]@[Z5@]@[Z5@]@[Z5@]@[Z5@]@[Z5@]@[Z5RE
)@@G@@@]B[Z5@]D[Z/@]F[) @]^[)K@]P[)O@]@[)(@]@[)(@]B[)(@]B[)0@]C[)7@]B[)_@]D[-ARF
)@@G@@@]B[-J@]D[-Q@]C[-Z@]E[-$)@@[MK[@@^[@@@@@@@/,0@@Z/K@@@K:@?@@ C@?@@P%8K@@[RG
)@@G@@D8)@@[/\0@@OC8)@@@/K@@@#C8)@@[AA@@@@)@E[V@@^@@@@AA/@@O/KF@@@RA/@@OC80@@@RH
)@@G@@D8K@@[/K@@@^C4W@@K[@?@@ G@?@@ G8)@@[/K@@@LAB@@@@)@P[U@^@@@@@AE/@@S/KF@@@RI
)@@G@@C/0__"/KJ@@@]@W@@R/@K@@XC4W@@K ^G@@N[CW@@O[*?@@K[@W@@MAC@@@@)@)[M@^C@^@@RJ
)@@G@@@@@@@@CC\@@@C4Z@@@C^/@@^/^0@@M/,0@@@[@W@@^&;K@@[C8W@@L[=W@@KC*W@@KAD@@@@RK
)@@G@@)@%[M@K^@K@@@@@@@@:8K@@>%8K@@</K@@[D:8K@@(/>@@@./[@@@.C>G@@KC0\@@@0@J@@@RL
)@@G@@;C)@@AAE@@@@)@4[N@@K@^@@@@@@@@:8K@@_/K@@@>[@W@@ G8K@@[C@W@@ /K@@[YRE/@@SRM
)@@G@@C^W@@M =G@@K/K@@@9AF@@@@)@"[N@[@[@^@@@@@@@RE/@@S/[@@[D:8K@@(/K@@[D*0G@@KRN
)@@G@@%8K@@+/K@@[D:8K@@*0@J@@@/K@@@KAG@@@@)[C[U@@@@@@@[@W@@R0@G@@RC@W@@ [@W@@^RO
)@@G@@[^?@@NG^?@@N[C?@@N&;Y@@@?C?@@MC@W@@M/KF@@[AH@@@@)[N[M^C@^@@@@@@@@@GCW@@^RP
)@@G@@C^W@@M[@W@@ G@W@@ CCW@@NRE/@@S/^0@@M/,0@@@[@W@@ G8K@@[AI@@@@)[X[U@@@@@@@RQ
)@@G@@C8W@@T[C/@@MHC/@@^CC/@@M[=/@@KC80@@]/@;@@@C=/@@KC@?@@LHCW@@O[^W@@MAJ@@@@RR
)@@G@@)[*[N@@@@@@@@@@@@@ @G@@R[@W@@Q[@W@@ [4?@@KC8)@@[/^:@@@C/0__.C4?@@KAA/@@ORS
)@@G@@/K@@@<AK@@@@)[2[F]@ @EK[C[M@G@@@@@@@%8K@@[C/0__/C4W@@KAA/@@OC8)@@@/K@@[7RT
)@@G@@C8)@@@/K@@@L/,0@@@AL@@@@)[;@+[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@RU
)@@G@@@@@@@@/K@@@L/,"@@@ 4G@@K/KF@@@AM@@@@@@@@@@[CK)CK)B^C]^C[4G@@@@@@@@C@@@@[RV
)@@G@@/,0@@@/,0@@@C@J@@[/,0@@@/,0@@@C@J@@@C@0@@@AP@@@@@@^@@]@@A@@^@@I@@E@@6@@@RW
)@@G@@@@E@@@@@@@[_PIOR$       PIOFO$      PIOPF$      PIOFC$      PSDFR       RX
)@@G@@@@[@@@@@@@@@PSDFRC      @@[@@@@@@@[4PSDFRCE     @@[@@@@@@@[6PSDFREOF    RY
)@@G@@@@[@@@@@@@@KPSDFRERR    @@[@@@@@@@@MPSDFRFIN    @@[@@@@@@@@LPSDFRO      RZ
)@@G@@@@[@@@@@@@[(PSDFRS      @@[@@@@@@@@]PSDFR$I     @@[@@@@@@@@OPSDFR$R     SA
)@@G@@@@[@@@@@@@@Z/,0@@@AT@@@@)@@[MK[]@@^C@KK)]@/K@@@@:@W@@QC@W@@ /)K@@@(?G@@KSB
)@@G@@C/0__'/\0@@@C8)@@@/K@@@#C8)@@[AA@@@@)@E[M@^C@4C@K@@@@@%8K@@<C4W@@LC/0__'SC
)@@G@@/^0@@@/,0@@@[@W@@^&;K@@[C8W@@L[@W@@ H8K@@[AB@@@@)@O[M^C@K@^C[@@@@@/,0@@@SD
)@@G@@[@W@@ H8Y@@[C@W@@ C0/@@L:8K@@<C^?@@L/^0@@@C80@@@:8K@@>AC@@@@)@Y@:@K@K) @SE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/K@@@@[@/@@ C@/@@R/K@@@B/K@@@)AD@@@@SF
)@@G@@@@^@@]@@A@@A@@M@@]@@U@@@@@E@@@@@@@@<PSDFR$I     PSDFRERR    PSDFREOF    SG
)@@G@@PIOR$       PSDFR$R     PSDFRFIN    PSDFRB      @@[@@@@@@@@@PSDFRSB     SH
)@@G@@@@[@@@@@@@@]C@J@@#AR@@@@)@@[F@K)@]&@]^@E@)]@@@@@/K@@@IN'@@@CR]@@[1/^0@[LSI
)@@G@@/,0@@@C/@@@@C8K@@@'=@@@@C@@@[0AA@@@@)@D[E]&@]^@M@) G@^C@4@@@/^0@[R/,0@@@SJ
)@@G@@C/@@@@8M@@@D/^0@[O/,0@@@C/@@@@C@S)@[C@*@@@AB@@@@)@M[F@K)^]&@]^@%@)]@@@@@SK
)@@G@@/K@@@+N'@@@CR]@@[1/^0@[C/,0@@@C/@@@@C8K@@@'=@@@@C@@@[5AC@@@@)@V[F#@G()@-SL
)@@G@@@G)C]@-@I)C@C@@@[88M@@@V'=@@@@/,0@[)/GK@[U/^0@[F/,0@@@C/@@@@C@K@@KAD@@@@SM
)@@G@@)@=[#]@L#@G()@-@G)C]^@'@@@@@@@C@@@[/'=@@@@/GK@@:/^0@[F/,0@@@C/@@@@C@K@@KSN
)@@G@@'=@@@@AE@@@@)@?[F]@L@^[#@G()@-@K)C@@/GK@[X/^0@[F/,0@@@C/@@@@C@K@@K/K@@@7SO
)@@G@@N'@@@CR]@@[.'=@@@@AF@@@@)@5[#@K)BK^[]@L#@G()@-@K@@@@@@/,0@@@C/@@@@C@K@@KSP
)@@G@@'=@@@@C@@@]]8M@@@0'=@@@@/,0@[)AG@@@@)@.[F@K^C[4[]@K()@-@M)C@C@@@]G/^0@[ISQ
)@@G@@/,0@@@C/@@@@'=@@@@C@@@]C'=@@@@/GK@[@/^0@[FAH@@@@)[A[#]@L]@(@K)^K)BK^C[^CSR
)@@G@@[0@@@@'=@@@@'=@@@@C@@@]P'=@@@@'=@@@@C@@@]L'=@@@@'=@@@@AI@@@@)[I[#@K)^K)BSS
)@@G@@K^C[^C[4[]@K@@@@@@'=@@@@C@@@]>'=@@@@'=@@@@C@@@]-'=@@@@'=@@@@C@@@]VAJ@@@@ST
)@@G@@)[Q[#]@X@K)^K)BK^C[^C[4@@@@@@@C@@@];'=@@@@'=@@@@C@@@]2'=@@@@'=@@@@C@@@]:SU
)@@G@@'=@@@@AK@@@@)[Y[F]@L]@X#@@@K@@@@@@@@N8X@@@C@@@]/&;0@@[C^8)@[/KF@@@%C8@@[SV
)@@G@@C^0@@N'=@@@@'=@@@@AL@@@@)[$@3@@K@@@@)@@@S@@@@@@@@@@@@@ST    PSDFTE/KF@@[SW
)@@G@@8KK@[*/KF@@@%[J)@@C[G)@@/K@@[:AM@@@@)@#@*@E@@@@@)@G@C@)@I@C@)@K@C@@@[@@@SX
)@@G@@@@@@@@@@@@@@@@@@@U@@[@@@@@@@@@@@@@@@@@@@@@AN@@@@)@U@0G^*[K@@)]K@S0@@@@@@SY
)@@G@@@@@@@@@@@@@@@@X@@@@@@@@@@@@@@@@@@@]K@[0@@^@]K@@X@\@@@@AO@@@@)@@[Q@S*[K])SZ
)@@G@@ @E@@@@@@@@$@@@@@@@@H@@U@@@@@@@@^@@Q@@@@@@@@^@@M@@@@@@@@]@@L*S@@@[AP@@@@TA
)@@G@@)@E@"@S*[K])O0@@@@)[!@M@ PSDFT@ASG,T@@_@^#@@A@['@@@@@@@@B@[3@@@@@@@[F@@*TB
)@@G@@@@@@@@AQ@@@@)[\[ME[N@G@*@O@@@@@[]@[6^[JDS)EL>GD=@[#@[2D9F^@)I->H0)E92HD4TC
)@@G@@@@]@@@@@#@[!EST   AR@@@@)[9[M@* G@0@*@@@@@@[^@["G))D9FHT7GD2^[+GD<EL>GD=TD
)@@G@@__.@@I@[#@[9^[JDS)^[ D9AEL>GD=AS@@@@)]#[U@])@O@@EL>GD=@[#@]D 0)^@)G-\H1>TE
)@@G@@CD?H))@[ @]#C0)D9FG))C(JHT7GD2^[+GD<EL>GD=AT@@@@)]I[U@*@ @@@IT>^[>^[<H-\TF
)@@G@@EL>GD=@[#@]MH92^C)^[>IL2EL>GD=@[^@]HIL\IK-H0)G(2^[\I[>AU@@@@)]T[U])@[K@@TG
)@@G@@G*)G(2E92HD4@[ @]W^C)^@)IL2H92G(,^[>G*)H90E92HD4@[ @]Q^C)^@)IL2H92AV@@@@TH
)@@G@@)]=[UE@@ @@@G(=^[ I[>GT4E(,G(8@[ @]&IK-^@)G(2IL\H93G*)G*)GT?E92HD4@[#@]+TI
)@@G@@IL\IK-AW@@@@)]\[U@*@@@@@GT:I9-G))GL-^[2G(-C0)H9,G*)C(JI[>GT4E(,G(8@[A@]?TJ
)@@G@@GD=^C)H0)IL>D9A^[\AX@@@@)]'@UE[N@@@@)@L@6@S@@@@@E-*HD3^@1^@)H-(H1>^[(IS)TK
)@@G@@E-*HD3*SDFF*@@[@^#@[C@]3IL=^C)AY@@@@)@R[Y@S@@@@@^[4H[-H1$G(2^@*H-\H-(H1>TL
)@@G@@H[>IK)GD,H94^[(IS)E-*HD3^@2^@)H-(H1>^[(IS)AZ@@@@)@+[Y@S@@@@@^[4G(3I1>IL>TM
)@@G@@GC)IT>^[(IS)E-*HD3^@)^@)I9\ C)I(3^[4G(6HD\G*)I[2H0)I-*BA@@@@)@![Y@S@@@@@TN
)@@G@@^[+IL>H(>H14^[3G($IT>^[-^[<GD5I9(H-?HD,G*)HD3^[?G*)I-*GT-I(3I))GL>BB@@@@TO
)@@G@@)@8[Y@S@@@@@H8)I-7^[(H14H0)I(0IL\HT>GL>^[+HD?H))HD4^[7GD,IS)H@)H(>I9*HD<TP
)@@G@@GD: ))BC@@@@)[#[Y@S@@@@@^[&H9?IL3I)?G*)G1(HD!GD$H(-H))^[,H92IS'^[-H(-G9>TQ
)@@G@@I->^[(I[>IL-H8)IT>BD@@@@)[I[Y@S@@@@@H[>^[3HD3^[4H[(IS)G*,^[OHD!GD$HD\H0)TR
)@@G@@H15GD4H9,I-(^[-^[<G))GL9H-\I9>BE@@@@)[T[Y@S@@@@@G(<H92H(>^[2G*)IT-G0)I-*TS
)@@G@@IL4^[\H))I[-IT4HD?GT> ))H14G(,G))IT>G(<H9,BF@@@@)[=[Y@S@@@@@G-(GL?H1<IL>TT
)@@G@@GD,^[(H[(IS)HT>^[4H8)H(-G(=^[4H1>G(=^[(IS)H[(GT*G)?^[7BG@@@@)[\[Y@S@@@@@TU
)@@G@@HD,G*)H-9^[?G-(G-=H[>IK)GD,H94^[(IS)E-*HD3G),^@)G(<H92H1$^[2JC)H-\BH@@@@TV
)@@G@@)['@6@S@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@G*-^@)^[?HD,H--IT4I-*G*)^[(IS)TW
)@@G@@E-*HD3BI@@@@0@@@]@S@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@G*-^@)^[?HD,H--IT4TX
)@@G@@I-*G*)^[(IS)E-*HD3BJ@@@@@@^@@^@@C@@F@@Y@@@@@Y@@@@@E@ ]@@@@].)@@@@@@@@@]@TY
)@@G@@CSF$        PSDFWO      PSDFW       PSDFWC      APRINT$     PSDFRO      TZ
)@@G@@PSDFR       ERR$        PSDFRB      PSDFRC      EXIT$       ]@L#@G()@-@KUA
)@@G@@@@@@@@/,0@@@C/@@@@C@K@@K'=@@@@C@@@]]8M@@@0'=@@@@/,0@[)AG@@@@)@.[F@K^C[4[UB
)@@G@@]@K()@-@M)C@C@@@]G/^0@[I/,0@@@C/@@@@'=@@@@C@@@]C'=@@@@/GK@[@/^0@[FAH@@@@UC
)@@G@@)@@[MK@^@K^C@^C@@@2@I)@]N@K@@@C@)@[I;^@@@A8^K@@[:8K@@ *@@@@H;=@@@AC@K@[HUD
)@@G@@C9K@@ AA@@@@)@E[N@@^[@K^@@@@@@ @@@@H/K@@@Z9@I)@RN@)@[JC@)@[IN8K@@D/KF@@@UE
)@@G@@C8Y@@@C8@@@[/K@@@IAB@@@@)@O[V@@@@@@@FP   ^CP   #AP   ]OMN  BABS  AREL   UF
)@@G@@FORP ^COBP #ASMP ]/KF@@@C)I@@QAC@@@@)@Z[MK[@[@[@@@@@@@C@K@[HC9K@@7C80@@CUG
)@@G@@/^)@@*C80@@EL8K@@0/K@@@8,[@@@H9!@@@6;=@@@AAD@@@@)@([U^@[@[@@!8)@[@/K@@@9UH
)@@G@@%8K@@ C8K@@ /K@@@*G@)@@HT@)@@JH8K@@0/K@@@1,[@@@H;=@@@AAE@@@@)@4[N@K@K^[@UI
)@@G@@E@@@@@/KF@@@D@@@@GH8@@@8/\@@@;/\@@@;/\@@@;@@@@@9@@@@@\/K@@@F/K@@@'AF@@@@UJ
)@@G@@)@"[M^@^[@K@@@@@@@/KF@@@G8@@@ H)I@@OC@I@@O/K@@[C?8)@@]C8?@@@/K@@@8?8@@@[UK
)@@G@@?8@@@CAG@@@@)[C[]^[]@@@@@@@@@@@@@@@@@@@@@@_____@@@[__" @@@@@/KF@@@C@H@@[UL
)@@G@@/K@@@9?8@@@@?8K@[@AH@@@@@@^@@]@@A@@[@@C@@#@@O@@@@@E@@@@@@@[KSSTYP$      UM
)@@G@@NUMSST$     @@[@@@@@@@@"SSTNUM$     @@[@@@@@@@@@SSTYPE$     @@[@@@@@@@@@UN
)@@G@@.     @F@@@@. NOTE: THE ORDERING OF THIS TABLE I)@@[U@@@E@@@@FC@[H[#F^C@UO
)@@G@@[ IAG@[:M?@@[+P,[@[!S'@@[-W:B_@\Z,@_@/+.[]@@@@__@@@@@@AA@@@@)@F[M*@@@)@@UP
)@@G@@@@@@@@/K@@@ON?L@@@Q8W@@@A^/@@ A@?@@^A^W@@#^@)^@)      @@[@@@@B^@[AAB@@@@UQ
)@@G@@)@O[N@^@K[@@@@@@@@/KF@@@M#/)@@&;0@@[O@)@@GC@0@@#C8J@@HQ^1@@@R^\@@EC*1@@]UR
)@@G@@/\0@@2AC@@@@)@Y[]^[@K@K@)@>@M@R@?@@^9?K@@]/K@@@>Q^L@@#C8[@@@/\0@@:/K@@@>US
)@@G@@/\0@@2Q8W@@@A^W@@#AD@@@@)@$[U@@K)@@@/KJ@@@C@[@@[ )[@@]'=@@@@*)[@@]C8@@@[UT
)@@G@@[@[@@[/KF@@@[^?@@ [@W@@^Q^/@@ AE@@@@)@2[UK[@@[@@C@)@@G/K@@@ON?L@@@/KJ@@@UU
)@@G@@/\,@@][C-@@ C@-@@F/^)@@8CC-@@ /K@@@9(^[@@]AF@@@@)@.[U@@@@@@@[K<@@@[W<@@@UV
)@@G@@/?+@@@O80@@[[O<@@@/KF@@@')])@@E/,@@@/\_@@^*^[@@]C@1@@FAG@@@@)[C[UK@@@K@@UW
)@@G@@/?)@[E[=<@@@[*<@@@[?<@@@[0<@@@[4<@@@/?+@@@O80@@[[)<@@@/?)@[#[S<@@@AH@@@@UX
)@@G@@@@^@@]@@A@@[@@C@@B@@=@@@@@E@@@@@@@[NPSR$        ECHAR$      @@[@@@@@@@@/UY
)@@G@@ECLEAR$     @@[@@@@@@@@'ECLR$$      @@[@@@@@@@@OEDITR$      @@[@@@@@@@@YUZ
)@@G@@EDITX$      @@[@@@@@@@@+EDIT$       @@[@@@@@@@@JE$CHAR$     @@[@@@@@@@@@VA
)@@G@@                                      FEDERALLY SPONSORED PROJECTS      VB
)@@G@@                                                )@@[N@K@@K^@@@@@@@QE1@@[VC
)@@G@@/,0@[</\K@@2C8@@@@0@@@@GG?[@@B]*[@@AD4[@@]/\0@[6/\0@[1AA@@@@)@E[N@K^@[@@VD
)@@G@@@@@@@@[*[@@AC8@@@@?8@@@[/K@@@]?/@@@@??[@@BCG[@@B/\0@[6/\0@[1/K@@[BAB@@@@VE
)@@G@@)@O[MK^@^[@K@@@@@@?8@@@[CG[@@B/\0@[6/\0@[1/K@@[[CCL@@[C01@@B/,0@[</\K@@2VF
)@@G@@H?[@@BAC@@@@)@Y[U[@@K[@@C?[@@B/CK@@%K?[@@B/K@@[<!8@@@[CG[@@BQE1@@[/\K@@8VG
)@@G@@C8@@@@[*[@@AC4[@@]AD@@@@)@([M[]@[@@K)[@@@@#?[@@B/K@@@@RE1@@[NGL@@B9?[@@CVH
)@@G@@/,0@[="K@@@@[GL@@B#?[@@BC8K@@@AE@@@@)@3[U[@@@@@@[0[@@BK0-@@BH?-@@AH8?@@[VI
)@@G@@H?-@@BD*-@@AG8@@@[/\0@[TG8@@@[1@@@@FC8@@@#AF@@@@)@"[N@@K)@K[@^@@@@/\0@[TVJ
)@@G@@/KH@@@8#0@[^')])@@/K@@[ C),@@HC*-@@] 0[@@BC80@@@/C0@[[AG@@@@)[C[M@[]@@K)VK
)@@G@@@@@@@@')])@@C0!@@A1@@@@GC0!@@^C*L@@]C8@@@@*4[@@BH*[@@ACG[@@B')])@@AH@@@@VL
)@@G@@)[M[M^C@)^C@0@@@@@G8)@@]1@@@@FC*-@@]/K@@@@C8K@@#1@@@@FC8K@@]/K@@@@(0[@@BVM
)@@G@@E/G@@@AI@@@@)[W[N@@@[]@@@@@@@@C0,@@^C*-@@]9?[@@CCW-@@EC4-@@ACK-@@EC0-@@AVN
)@@G@@/KJ@@@/@\@@[')I@[ZAJ@@@@)[&[M@K)[[]@@@@@@@QI1@@[')])@@C*,@@]N?L@@BC*-@@]VO
)@@G@@/,0@@@N*L@@AAI1@@[')])@@*?[@@AAK@@@@)[0[N]@^@K@@@@@@@@;C@@@GAE1@@[[C[@@BVP
)@@G@@R';@@@/K@@[7G80@@["8K@@H?8@[@@&"0__"/K@@@@AL@@@@)['[UK@@@@@@ G[@@BC8@@@[VQ
)@@G@@ @[@@C"4@@@HG8@@K. 4[@@BD@@@@G;GK@@=0@@@@F/@@@]]Q'_@@@AM@@@@)] [U[@@^[@@VR
)@@G@@C/@_;G/K@@]L!@)@#EC8@@@@94)@@H[?[@@A0@@@@H98K@]6 ?[@@A")L@@C @[@@DAN@@@@VS
)@@G@@)]K[N@^[@^[@^[@@@@/G)@]O9=!@]89*-@@C/K@@]+4@!)]69?-@@C/K@@]PC@K@#HN8K@@DVT
)@@G@@"*)@#FAO@@@@)]U[M@[@K^[@@@@@@@/K@@]$?@)@#I/K@@]P"?!@]89?-@@CG8J@@@;*"@@@VU
)@@G@@C80@@[;C)@@[C8!@@@AP@@@@)]=[N@^@K[@K^[@@@@/K@@]0?@)@#I"))@#L"))@#J0@@@@FVV
)@@G@@/K@@]0(0[@@]/K@@]+G8@@@["?)@]8AQ@@@@)],[V@@@@@@@K^*@@@/KF@@@[4[@@B/KF@@@VW
)@@G@@9*L@@C;?W@@@H8@@J4"0@@@I[G[@@BG8@@@["?)@]8AR@@@@)]9[U@@@@@@@%]!0!TL:$WQ!VX
)@@G@@\0K@@@K6<-\D@@@@@@KV\:0)@@@@@@KI$^@@@@@@@@KB2@@@@@@@@@AS@@@@)#^[U@@@@@@@VY
)@@G@@K[@@@@__.@@M9QI-&IZ/8.<9J.3G3H"9797*XN%$;:2S#(<HQ%=;(BMZ_J(!NP0$)ZAT@@@@VZ
)@@G@@)#J@+@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\?LH8QJE9(QO5YP'K?WA
)@@G@@J*5:"OAU@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@]@@A@@^@@I@@A@@&@@@@@E@@@@@@@#NE$CHAR$     WC
)@@G@@E$DEC2$     EDECV$      EDECF$      EFLF1$      @@[@@@@@@@@UEFLF2$      WD
)@@G@@@@[@@@@@@@@VEFLG1$      @@[@@@@@@@@FEFLG2$      @@[@@@@@@@@GEFLS1$      WE
)@@G@@@@[@@@@@@@@@EFLS2$      @@[@@@@@@@@[OJECTS                              WF
)@@G@@                                                                        WG
)@@G@@)@@[M[@@K[@@@@@@@@/K@@@DN@K@@I/^@@@ G8)@@[;G@@@^C8)@@@/K@@@D;GH@@@;*K@@]WH
)@@G@@N8X@@@AA@@@@)@D[U^@@K[@@/KF@@@8KK@@G')])@@K@Z@@O!8K@@EK8K@@0;=@@@^C8K@@@WI
)@@G@@/K@@@MC*1@@]C@@@@HAB@@@@)@O@M@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@7_____;AC@@@@@@@@@@              G00@      @@?@@?WK
)@@G@@022001003   50000000PART TIME               0000@@^@@]@@A@@@@@A@@]@@I@@@WL
)@@G@@@@E@@@@@@@@QEHEXF$      @@[@@@@@@@@@EHEXV$      @@[@@@@@@@@^SPONSORED PRWM
)@@G@@OJECTS                                                                  WN
)@@G@@)@@[U[@[@[@@C8)@@0/^@@@BG80@@[;G@@@#/@@@@G;G@@@#C80@@[/K@@@G;GH@@@T8K@@#WO
)@@G@@C8.@@@AA@@@@)@F@MK@@@@@@)@G@;@@^@@@@/KF@@@8#0@@H')])@@G8)@@0;=K@@#C8)@@@WP
)@@G@@/K@@@L/K@@@G')])@@AB@@@@)@N[M@K@K@@@@@@@@@[C-@@[(C[@@[/\)@@_;*)@@MC8)@@0WQ
)@@G@@/K@@@TE/,@@@/\_@@^*^[@@]C@1@@FAC@@@@)@X[N]@@@K[@@@@@@@[C-@@[(C[@@[/\)@@_WR
)@@G@@C8K@@@/K@@@*R';@@@;C)@@M')])@@0@@@@FQ3:@@^AD@@@@)@$@N]@[@@@@)@*@3@^[]@@@WS
)@@G@@@@@@@@')])@@0@@@@FC0:@@^8#K@@(')])@@/K@@@%/K@@@*C):@@HAE@@@@)@,[#]@[]@[@WT
)@@G@@K)@@K@@@@@@@@@@@@@/K@@@5H8X@@@;?I@@@RE1@@[9)@@@@S@J@[RC?\@@]G4J@@@AF@@@@WU
)@@G@@)@5[V@@@^@@@AE1@@[/KF@@@8KK@@6H8X@@@')])@@K8K@@09)@@@I;=@@@]9?)@@G;=@@@[WV
)@@G@@/K@@@.AG@@@@)[@[U[@K@@@@N/Z@@[Q%1@@]H8K@@[0@@@@FH8Z@@[/SJ)@@5@J)[HC@0@[+WW
)@@G@@E@@@@GR]0@@GN8K@@EAH@@@@)[F[U@@@@@@@DO]"K@@;&?*@@ .Y^@@@&DU@@@#4D@@@@SU)WX
)@@G@@@@@]WK@@@@J*@@@@[=@@@@@E/KI@@@AI@@@@)[Q[U@@@@@@@VZH_T5LF)\*DPYS;+GU5_EU\WY
)@@G@@K1\Y)!O"FQC8UH,F:BKS=7M/OY, B:T&T&T&Z_____AJ@@@@)[-@M@@@@@@@@@@@@@@@@@@@WZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[__"P_R_-ZAK@@@@@@@@@@      XA
)@@G@@                                            G00@      @@?@@?022001003   XB
)@@G@@@@^@@]@@A@@[@@C@@F@@4@@@@@E@@@@@@@[<E$CHAR$     EDCFZ$      @@[@@@@@@@@SXC
)@@G@@EDECFL$     @@[@@@@@@@@NEDECFZ$     @@[@@@@@@@@SEDECF$      @@[@@@@@@@@=XD
)@@G@@EDECV$      @@[@@@@@@@@<EOCTF$      @@[@@@@@@@@@EOCTV$      @@[@@@@@@@@^XE
)@@G@@E$DECM$     @@[@@@@@@@@_E$DEC$      @@[@@@@@@@@>E$DEC0$     @@[@@@@@@@@VXF
)@@G@@E$DEC2$     @@[@@@@@@@@520DEDICATED FUNDS       )@@[]@K[]@[@@@@@@@)@B@E@XG
)@@G@@AE1@@[/K@@@BC),@@HC*-@@]/K@@@BE/,@@@/\_@@^*^[@@]C@1@@FAA@@@@)@C[U@K@@@@@XH
)@@G@@"KK@@IC@0@@HC@@@@J;?"@@]C80@@@;SK@@J/G0@@U[@@@@K[@)@@J)8K@@[[@)@@LAB@@@@XI
)@@G@@)@N[M[]@^^@@@@@@@@;(@@@[C@@@@K;*0@@[/K@@@);*0@@]C@0@[[/,0@@@N@K@@JC8X@@[XJ
)@@G@@W8K@@#AC@@@@)@X[U[@[@@@@[@)@@KC80@@0/KF@@@RE1@@[/K@@@G')])@@C@)@@L/@0@@=XK
)@@G@@')])@@C8?@@0;C@@@<AD@@@@)@*[M@@(@^)[M@G@@@N8)@@@C8K@@@/K@@@3N8)@@@&8,@@@XL
)@@G@@E/,@@@/\_@@^*^[@@]C@1@@FC@)@@JAE@@@@)@2@MK@@@@@@)@3@'@@@@@@@[@)@[#E/,@@@XM
)@@G@@/\_@@^*^[@@]C@1@@FC@)@@KAI1@@[/K@@@3[@)@@KAF@@@@)@'[N]@K@^@@@@@@@@H/Y@@@XN
)@@G@@C@0@@KH8)@@[/^0@[#W@)@@K;D@@@M"K)@@JC8_@@[C[K@@J/\)@@@AG@@@@)[^[U@@@@@@@XO
)@@G@@/\,@@@;@)@@M C[@@[&8)@@[Q#)@@L;DK@@MC[K@@]C@0@@LN@K@@JN8,@@@&#)@[]AH@@@@XP
)@@G@@)[J[#@@K) K@@@@@@@@@@@@@@@@@@@/KF@@@RI1@@[8K)@[K/,0@@@N@K@@K')])@@C@)@[#XQ
)@@G@@/K@@[OAI@@@@@@@@@@@@@@@@VZH_T5LF)\*DPYS;+GU5_EU\K1\Y)!O"FQC8UH,F:BKS=7M/XR
)@@G@@OY, B:T&T&T&Z_____AJ@@@@@@^@@]@@A@@A@@M@@A@@%@@@@@E@@@@@@@[RE$CHAR$     XS
)@@G@@EOCTF$      E$DEC0$     E$DEC$      E$DECM$     E$DEC2$     EFDECFL$    XT
)@@G@@@@[@@@@@@@@$EFDECFZ$    @@[@@@@@@@@&EFDECF$     @@[@@@@@@@@1EFDECV$     XU
)@@G@@@@[@@@@@@@@0EFORMC$     @@[@@@@@@@@@EFORM$      @@[@@@@@@@@             XV
)@@G@@              FEDERALLY SPONSORED PROJECTS                              XW
)@@G@@)@@[M@K)@^C@@@@@@@/KF@@@:@@@@HG@@@@HH^Z@@EG8M@@@T*Z@@CH^L@@@C*1@@]C8N@@@XX
)@@G@@C8@@@@AA@@@@)@E[N@@K)@[]@@@@@@/KF@@@Q8!@@@G^Z@@EQ8/@@@G^[@@@W*J@@CC*1@@]XY
)@@G@@"K@@@GC8@@@@/C@@@GAB@@@@@@^@@]@@A@@[@@C@@#@@O@@@@@E@@@@@@@@OE$CHAR$     XZ
)@@G@@ECOLN$      @@[@@@@@@@@@ECOL$       @@[@@@@@@@@EESKIP$      @@[@@@@@@@@[YA
)@@G@@                                                )@@[U@@@@@@@?@@@[ ?@@@[^YB
)@@G@@?@@@[#?@@@[]?@@@[[?@@@@)?@@@[Y?@@@@<?@@@[X?@@@[V?@@@[@AA@@@@)@F[U@@@@@@@YC
)@@G@@?@@@[K?@@@[J?@@@[I?@@@[H?@@@[G?@@@[F?@@@[E?@@@[D?@@@[C?@@@[B?@@@[AAB@@@@YD
)@@G@@)@Q[U@@@@@@@ @@@@(?@@@[U?@@@[T?@@@[S?@@@[R?@@@[Q?@@@[P?@@@[O?@@@[N?@@@[MYE
)@@G@@?@@@[LAC@@@@)@-[U@@@@@@@+@@@@'*@@@@>)@@@@*(@@@@%'@@@@=&@@@@&%@@@@"$@@@@.YF
)@@G@@#@@@@/"@@@@:!@@@@!AD@@@@)@?[U@@@@@@@6@@@@65@@@@54@@@@43@@@@32@@@@21@@@@1YG
)@@G@@0@@@@0/@@@[W.@@@@?-@@@@-,@@@@_AE@@@@)@7[U@@@@@@@A@@@@@@@@@@@?@@@[Z>@@@@+YH
)@@G@@=@@@@,<@@@@\;@@@@;:@@@@$9@@@@98@@@@87@@@@7AF@@@@)[][U@@@@@@@L@@@@@K@@@@@YI
)@@G@@J@@@@@I@@@@@H@@@@@G@@@@@F@@@@@E@@@@@D@@@@@C@@@@@B@@@@@AG@@@@)[H[U@@@@@@@YJ
)@@G@@W@@@@@V@@@@@U@@@@@T@@@@@S@@@@@R@@@@@Q@@@@@P@@@@@O@@@@@N@@@@@M@@@@@AH@@@@YK
)@@G@@)[S[U@@@@@@@B@@@@@A@@@@@@@@@@@_@@@@@^@@@@@]@@@@@\@@@@@[@@@@@Z@@@@@Y@@@@@YL
)@@G@@X@@@@@AI@@@@)[<[U@@@@@@@M@@@@@L@@@@@K@@@@@J@@@@@I@@@@@H@@@@@G@@@@@F@@@@@YM
)@@G@@E@@@@@D@@@@@C@@@@@AJ@@@@)[,[U@@@@@@@X@@@@@W@@@@@V@@@@@U@@@@@T@@@@@S@@@@@YN
)@@G@@R@@@@@Q@@@@@P@@@@@O@@@@@N@@@@@AK@@@@)[9@'@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@YO
)@@G@@_@@@@@^@@@@@]@@@@@\@@@@@[@@@@@Z@@@@@Y@@@@@AL@@@@@@^@@]@@A@@@@@A@@[@@E@@@YP
)@@G@@@@E@@@@@@@]@E$DTBL$     @@[@@@@@@@@@        FEDERALLY SPONSORED PROJECTSYQ
)@@G@@                                                                        YR
)@@G@@)@@[M@@K^C@@@@@@@@9?@@@]/,0@@@/C@@@EAE1@@[[G[@@[E/,@@@/\_@@^*^[@@]C@1@@FYS
)@@G@@C@)@@HAA@@@@)@E[U^@K[@@@/KF@@@RE1@@[Q@0@@H[@@@@]/K@@@N1G[@@[8KK@@H')])@@YT
)@@G@@/K@@@IN@K@@JEG1@@[AB@@@@)@P[M[]@^@K@@@@@@@N?L@@@/GK@@+N8K@@@/KF@@@H^[@@@YU
)@@G@@H8@@@[:^Z@@EC8M@@@C*1@@]C8#@@[AC@@@@)@Z[N@[]@C^@^C@0@@C8\@@@CCL@@##@@@[]YV
)@@G@@')J@[IC=1@@]^@-@@[/K@@@@N8N@@[P^1@@@/^K@@+AD@@@@)@([N@K@[@[@@@@@@@/K@@@0YW
)@@G@@%@)@[[')G)@@/K@@@3&FY@@@'KI@@@C?[@@]H8K@@[C8\@[K/C@@@?AE@@@@)@3[N@^@^[]@YX
)@@G@@H@K@@@[?[@@]'OJ@[K/CK@@/'OJ@@@/GK@@'[CL@@#G8K@@[/C@@@7N@-@@[8K)@@0AF@@@@YY
)@@G@@)@.[MK@@]))@@@@@@@/K@@@1Q;@@[#C=!@@[C*!@@[C?!@@[C0!@@[C4!@@[C)!@@@/:K@[^YZ
)@@G@@/KF@@@AG@@@@)[B[N@@]))@O@@@@@@__"@@"NOL@@AN0L@@@/K@@@1Q;@@[ECS!@@[CK!@@[ZA
)@@G@@CW!@@[CO!@@@/:K@[FAH@@@@)[L@E*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@__"@[BAI@@@@@@@@@@  000000018163DEDICATED FUNDS ZC
)@@G@@                                                @@^@@]@@A@@^@@I@@^@@Y@@@ZD
)@@G@@@@E@@@@@@@[MESKIP$      E$CHAR$     ECLR$$      E$PTRL$     EMSKP$      ZE
)@@G@@@@[@@@@@@@@<EPAD$       @@[@@@@@@@@@ERASE$      @@[@@@@@@@@WEWRDN$      ZF
)@@G@@@@[@@@@@@@@P              000000469990DEDICATED FUNDS                   ZG
)@@G@@                                FEDERALLY SPONSORED PROJECTS            ZH
)@@G@@                        )@@[M@@* @* @@@@@@@@@@@<)@@@@Y)@@@@Q@@@@@M#____RZI
)@@G@@@C@@)@@@@@@C@@K@H^@B___"]@@@#%AA@@@@)@E[U[@@K@@@C8)@@!:80@@CC8)@@?/KIK@AZJ
)@@G@@;C)@@+;*)@@X+8)@@Z/K@@[#**[@@]C8;@@@Q21@@FAB@@@@)@P[N]@[@@K[@K)@@@C8)@@%ZK
)@@G@@/K@@@@/K@@@.C80@@'/-@@@XC4\@@)IG1@@E;DJ@@@C[@@@@/K@@@@AC@@@@)@Z@2K)@K^[@ZL
)@@G@@K@@@@@)@=@U@C4\@[@IG1@@E;DJ@@@/K@@@=D[@@@[/K@@@=C[@@@[/K@@@@:80@@ZAD@@@@ZM
)@@G@@)@$[UK[@@K@@Q^-@@BC@0@@I9!@@@]/K@@@.AC1@@HC80@@&A^-@@B/K@@@\*^[@@B/-K@@;ZN
)@@G@@-[@@@FAE@@@@)@2[M[@^C@K@@@@@@@ ^[@@BC@)@@JQ@0@@L[[@@@]Q&;@@A')])@@8K)@@6ZO
)@@G@@AC1@@BC8)@@#QC1@@HAF@@@@)@/[F]@@^@^C@[@@@@@@@@@@/[@@[FC9@@@@/K@@@@C@)@@JZP
)@@G@@')])@@8K)@[@AC1@@B;^)@@=/K@@@@AG@@@@)[ [F]@ @K)[^@K[@@@@@@@@/>K@[L;HI@@@ZQ
)@@G@@9!@@@]C@0@@L/\)@[?C8;@@@Q&;@@A/-@@[DC=_@@AAH@@@@)[I[N@^@@^@@@@@@@@:8)@@'ZR
)@@G@@/ @@[^C9@@@[:8)@@#C9@@@]:8)@@&C9@@@@/K@@[<;HI@@@9!@@@^AI@@@@)[S[N@@@K)@KZS
)@@G@@@@@@@@C@0@@L/\)@[?/K@@@@C@)@@JC80@[Z:8)@@%C80@@B:8)@@?C80@@C/K@@[)AJ@@@@ZT
)@@G@@)[+[M[@@^[]@@@@@@@/K@@@@G4\@@AH80@@]!8)@[V%8)@[@C8_@@]/-K@[:CO,@@@IG-@@EZU
)@@G@@ @@@@LAK@@@@)[?[N@K)@[@^@K)[@@;^I@@@CO\@@]C=1@@]/K@@[7')G)@@/K@@[3*?[@@FZV
)@@G@@9*)@@K/K@@@@8KK@[,AL@@@@)[6@V]@^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZW
)@@G@@@@@@@@@@@@@@/KJ@@@C@0@@K+OZ@@#AM@@@@@@@@@@                              ZX
)@@G@@              G00@      @@?@@?022001003   500000@@^@@]@@A@@]@@E@@[@@I@@@ZY
)@@G@@@@E@@@@@@@[9E$ARTN$     E$CHAR$     E$XALF$     @@[@@@@@@@@E            ZZ
)@@G@@        FEDERALLY SPONSORED PROJECTS                                    AA
)@@G@@)@@@;@K)@K)@K)@[@@)@A@M@C=1@@][@1@@G/K@@@A/G\@@@C/,@@@/K@@@#/K@@@]/K@@@[AB
)@@G@@/K@@@QAA@@@@)@C[UK@K@^@@/KJ@@@C@1@@G')J@@NIG-@@EH8)@[@C80@@]/K@@@J0G[@@EAC
)@@G@@!8)@[@/K@@@L:*1@@]AB@@@@)@N[U@@@@@@@[?1@@FQ'0@@@;C0@@MC@0@@I @[@@BAE1@@DAD
)@@G@@[^1@@CN8)@@@C0,@@@C4,@@@CO,@@@AC@@@@)@Y[U@E@)@O@*4[@@FC80@@AQC-@@CA^-@@CAE
)@@G@@/?)@@>/?+@@@Q'0@@1Q^-@@CA21@@FC=1@@]AC-@@CAD@@@@)@([E[@K)[[@K@@@@@@@@@@@AF
)@@G@@/K@@@1/K@@@Y')])@@AC1@@B%)\@@H8K)@@!C*1@@]/\_@@@C@1@@HAE@@@@)@1@%@@@@@@@AG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/KF@@@CC[@@BQC-@@CD@K@[]QE1@@DAF@@@@AH
)@@G@@@@^@@]@@A@@]@@E@@]@@M@@@@@E@@@@@@@@6E$ASC$      E$CHAR$     E$ARTN$     AI
)@@G@@@@[@@@@@@@@:E$ASCII$    @@[@@@@@@@@@C80@@[C@)@@J')])@@0@@@@FC8)@[M8KK@@XAJ
)@@G@@')])@@/@)@@++8K@B_AD@@@@)@@@'@^C@^@@)@A@U@;?K@@V;?)@@V;*0@@V/K@@@AN*W@@^AK
)@@G@@W8K@@/W8)@@/;GK@[CC*[@@]C8/@@@AA@@@@)@D[M[@K[@^@@@@@@@/KF@@@8#@@@E')])@@AL
)@@G@@/@)@@LC@)@[[/@@@@M/\K@@N;=K@@DC8)@@@R;@@@]AB@@@@)@N[U@@@@@@@;GK@@GC*[@@]AM
)@@G@@;G@@@6/KH@@@C*1@@]')])@@C8\@@0')])@@G8)@@0W8)@@E;G)@@=AC@@@@)@Y[M[]@[@@KAN
)@@G@@^C@@@@C)\@@H/\K@@N;GK@@%+8@@_@;C@@@M/K@@@AN0W@@]G80@[@;C0@@Y;G)@@YAD@@@@AO
)@@G@@)@*[U[@[@@@@;G@@@0[G[@@[[C-@@[/KF@@@/\K@@NG8)@[@+8K@@_/\)@@0R';@@@N8K@@#AP
)@@G@@')])@@AE@@@@)@3[M^@K^[@[@@@@@@/@)@@_+8K@@_;=@@@A/K@@@"9?H@[V/K@@@_/\,@@[AQ
)@@G@@/@0@@8CC-@@ ;*K@@[AF@@@@)@.[MK^C@@@@@@@@@@N8K@@D&"0__"C*1@@]/KI@@@CGL@@[AR
)@@G@@CC-@@[')])@@C)\@@H8KK@@'')])@@AG@@@@)[B[UK@[@@K@C@/@[VC8\@@0')])@@G8)@@0AS
)@@G@@/@)@[KW8)@@E;G)@@%C@@@@J+8K@_@/\)@@0;C@@@MAH@@@@)[M[N]@@[@[@@@@@@@, 19  AT
)@@G@@/KF@@@/\K@@NG8)@[@+8K@@_8KK@[O;^?@@@')])@@N8K@@^COG@@]AI@@@@)[W[U@@@@@@@AU
)@@G@@      MAY@        APRIL@      MARCH@RY@   FEBRUAY@    JANUAR ))AC9AJ@@@@AV
)@@G@@)[$[U@@@@@@@NOVEMBR@    OCTOBEBER@  SEPTEM@     AUGUST      JULY@       AW
)@@G@@JUNE@ AK@@@@)[2@2@K^@@@@)[7@U@@@@@@@G8K@[@C?L@@[[@[@@[/K@@[7/\K@@NC8)@@NAX
)@@G@@ER@   DECEMBER@   AL@@@@)['[][@^@K@@)][@M@C?[@@[[@[@@[/K@@][N8K@@D/K@@][AY
)@@G@@N8K@@#/K@@@AN8K@@@C01@@[C4-@@[AM@@@@)]#[U[@@@@@@;C@@@]G8?@@@W8)@@ S8)@@HAZ
)@@G@@C8!@@[H8@@@[G8K@@G/K@@]D!8K@@#C4L@@[G8@@Y?AN@@@@)]I[U@@@@@@@(*[@@]CC[@@ BA
)@@G@@W8K@@B;GK@@=G0L@@[K@@@@I;C@@@]H8?@@[W8@@@T;G@@@=G8?@@@AO@@@@)]T[N@^@K^@^BB
)@@G@@@@@@@@')])@@/@)@]=+8K@@_;=@@@A/K@@]<9?I@]>;*)@@[/K@@]=/\/@@#/K@@]WAP@@@@BC
)@@G@@)]<[V@@@@@@@THURSDDAY@  WEDNESY@    TUESDA@     MONDAY@     SUNDAY/KF@@@BD
)@@G@@8KK@]ZAQ@@@@)],@%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AY@   SATURDBE
)@@G@@@     FRIDAYAY@   AR@@@@@@^@@]@@A@@[@@C@@C@@*@@@@@E@@@@@@@]3E$CHAR$     BF
)@@G@@EDAY1$      @@[@@@@@@@@VEDAY2$      @@[@@@@@@@@<EDAY3$      @@[@@@@@@@[^BG
)@@G@@EDAY4$      @@[@@@@@@@[5EDAY5$      @@[@@@@@@@[7ETIME$      @@[@@@@@@@@@BH
)@@G@@EWDAY1$     @@[@@@@@@@["EWDAY2$     @@[@@@@@@@]@/K@@P3FS@^@])P5[M^ @^@K^BI
)@@G@@@@@@@@?9@@@'')H)O!/K@@P"D9K@@@/K@@P8:[@@@L')H)O!C>K@@J/KF@@[/KF@@@FT@^@]BJ
)@@G@@)@@[](@@-@]O)]K)[EK[*K@>C[^C@K/K@@@@&'0@@@/K@@@@&'0@@@/K@@@@&'0@@@/K@@@@BK
)@@G@@&'0@@@AA@@@@)@C[](@E-@]O)AK)[EK#*K@>C]^C@K/K@@@@&'0@@@/K@@@@&'0@@@/K@@@@BL
)@@G@@&'0@@@/K@@@@&'0@@@AB@@@@)@K@+(@M-@]O)EK)[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BM
)@@G@@@@@@@@/K@@@@&'0@@@/K@@@@&'0@@@AC@@@@@@@@@@@M@[@[D1\I->BK)^[!G(!H92JC)I-(BN
)@@G@@H(>^@*IT>GS(^[4H8)I-2GD,IT&G(2^@5^[8^@1A@0 )0A@0@@^@@]@@A@@F@@W@@E@[^@@@BO
)@@G@@@@E@@@@@@@@OEFD1$       F$          EFD2$       EFD3$       ECOPY$      BP
)@@G@@ECOPYS$     EPACK$      EPACKC$     EPACKS$     EMSGR$      EMSG$       BQ
)@@G@@FCOPYS$     @@[@@@@@@@@CFCOPY$      @@[@@@@@@@@AFFD1$       @@[@@@@@@@@@BR
)@@G@@FFD2$       @@[@@@@@@@@]FFD3$       @@[@@@@@@@@^FMSGR$      @@[@@@@@@@@KBS
)@@G@@FMSG$       @@[@@@@@@@@MFPACKC$     @@[@@@@@@@@GFPACKS$     @@[@@@@@@@@IBT
)@@G@@FPACK$      @@[@@@@@@@@EIK?^[(H0)I-*HD3^[<GD3G*)C1OD0)HD3^[-I))GC)G-(IT-BU
)@@G@@G-6GD,I--G9>^[7HD4H@)IL>IT0G(<I))I-\^[AD9M@M@[@[)@@[MK^[]@[]@^K@@@C8)@@EBV
)@@G@@')])@@C8)@@H/K@@@F(*[@@]/K@@@@'=@@@@/\)@@W/K@@@F(*[@@]AA@@@@)@E[EK^C@=C@BW
)@@G@@L@^[]@G@@@@@'=@@@@/K@@@O(*[@@]/\)@@V&';@@@/K@@@@'=@@@@/\)@@W')])@@AB@@@@BX
)@@G@@)@N[N@K)^^C@K@@@@@;*@@@AC8@@@@/KH@@@;CK@@MC@K@@FC@[@@[/,0@@@[@[@@['=@@@@BY
)@@G@@/K@@@PAC@@@@)@X@+@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/KI@@@BZ
)@@G@@G^[@@@;*@@@MG?[@@@AD@@@@@@^@@]@@A@@ @@K@@C@@0@@@@@E@@@@@@@@-APRINT$     CA
)@@G@@ERASE$      PRINT$      ACSF$       CSF$        EAPRTI$     @@[@@@@@@@@#CB
)@@G@@EAPRT$      @@[@@@@@@@@]ECSF$       @@[@@@@@@@@IEPRTA$      @@[@@@@@@@@BCC
)@@G@@EPRTGA$     @@[@@@@@@@@ EPRTG$      @@[@@@@@@@@@EPRTI$      @@[@@@@@@@@GCD
)@@G@@EPRT$       @@[@@@@@@@@FT THE COUNT BACK  +@@@@[@J@@@]^@)^[GEK?E*)^@)^[MCE
)@@G@@)@@[MK^[@])@@@@@@@[=/@@][*/@@]C80@@[[C/@@ C80@@@@@@@@@/K@@[@/K@@@I/K@@@PCF
)@@G@@@@@@@@AA@@@@)@E[F]@@*]^@D80^@M@@@@@@B0H@@@G8K@@CB4@@@H/K@@@O(S@@@G/K@@@@CG
)@@G@@[C/@@ C80@@@/K@@@@AB@@@@)@N[U@K@^[@@;=@@@D/K@@@-9?H@@&R';@@@%8K@@MN8K@@CCH
)@@G@@/K@@@V1@@@@F[@)@@J/KI@@@[)L@@]AC@@@@)@Y[UK[@@@@@DL-H15/KI@@@C80@@[C@)@@JCI
)@@G@@')])@@0@@@@FC8)@[28KK@@X')])@@/@)@@++8K@B_AD@@@@)@([U@@@@@@@@@@@@@DL5H1>CJ
)@@G@@@@@@@@D(-JC@H)@@@@CD0IL(H@@@@@D(-IL<I(-IL9C1>GL2GD2JC@AE@@@@)@4[U@@@@@@@CK
)@@G@@C->GT>H(+G(2D1\I1>GL>IK@D9<I-\G(!GL>ET>I[4IT4@@@CD5G95@@@@@@DL5H-9AF@@@@CL
)@@G@@)@_[U@K@@K@@9?I@[O;*)@@[N8W@@@&'0__":8)@@#C8@@@C/K@@[B?8@@@^&'0@@@C@@@[[CM
)@@G@@H(+G(2AG@@@@)[E[V@[@^@@@ET5H1=/KJ@@@')])@@0@@@@FC8)@[98KK@[F')])@@/@)@[KCN
)@@G@@+8K@[_;=@@@D/K@@[JAH@@@@)[P[U@@@@@@@GD9@@@C12HD=IT=GD9E-*I(2G(3G--E9>G-,CO
)@@G@@G--JC@E-5G(3GD9@@@D(\H1=GD9@@@AI@@@@)[)@M@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IL=GD9ET-I-5AJ@@@@@@^@@]@@A@@#@@G@@#@@S@@@CQ
)@@G@@@@E@@@@@@@[+EDIT$       EDITR$      E$CHAR$     AEDITR$     @@[@@@@@@@@FCR
)@@G@@AEDIT$      @@[@@@@@@@@ E$ASC$      @@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CS
)@@G@@)@@[U@@@K@@@/K@@@@$ =@@#C)6@@@D80@@[/!P@@[C=6@@@C*6@@@C?6@@@C06@@@C46@@@CT
)@@G@@/!P@@@AA@@@@)@F[UK^@@@@@[0/@@@[4/@@@/\X@@@[)/)@@@@@@@@@@@@@@@@@@@@@@@@@@CU
)@@G@@/K@@@AP[K@@+P9)@@[AB@@@@)@Q[M[@])O])O#@@@@@@B@@A@@[@@?@@[@@[@@[@[R@@[@@OCV
)@@G@@@@[@@@/\K@@M[=/@@@[*/@@@[?/@@@AC@@@@)@)[U0@@@C@@/!0@@/D80@@[C)6@@@C=6@@@CW
)@@G@@C*6@@@C?6@@@C06@@@C46@@@@@[@@[@@@@@@@@0@@^AD@@@@)@:[MK^[@^@^@@@@@@P9)@@[CX
)@@G@@/K@@@%$ =@@#CO&@@@/!K@@8/!P@@[/!0@@;/!0@@;/!0@@;/!P@@@AE@@@@)@5[N@K^@^@@CY
)@@G@@@@@@@@+8)@@#C8)@@@!8)@]@') @@X/K@@@\P9K@@[D80@@[/K@@@\/!0@@/P[K@@+AF@@@@CZ
)@@G@@)@_[U[@@@@@@QR"@@@QV"@@@QN"@@@QZ"@@@/KB@@@;C)@@MC@)@@J')J@[AGC=@@#;C)@@]DA
)@@G@@&;"@@@AG@@@@)[E[M@K^[@K@@@@@@@') @@YD80@@[/!0@[N/!0@[N/!0@[N/!0@[NCO&@@@DB
)@@G@@CS&@@@CK&@@@CW&@@@AH@@@@)[O[V@@[@@@@A[/@@LA[W@@ A[?@@AA G@@^/\K@[P[S?@@@DC
)@@G@@[K?@@@[W?@@@/\X@@@[O?)@@/K@@@/AI@@@@)[Z[MK@@K^@@@@@@@@?^O@@@R[R@@XO[)@@UDD
)@@G@@[^O@@#R =@@@G^O@@@R(4@@IG?O@@@8#K@[+Q9G@@@AJ@@@@)[([V@@^@@@@R[W@@ 9?K@@ DE
)@@G@@Q G@@^R[/@@LC8^@@@/K@@[2Q9G@@@A[/@@LA G@@^/KF@@@RDR@@ZAK@@@@)[4[M@@@@@@@DF
)@@G@@@@@@@@/KF@@@/KB@@@*@B)@BQE4@@^P97@@@9!=@@EC8K@@@/KF@@@9*W@@ R[?@@AAL@@@@DG
)@@G@@@@^@@]@@A@@@@@A@@C@@&@@@@@E@@@@@@@["TCLR$       @@[@@@@@@@[)TIDER$      DH
)@@G@@@@[@@@@@@@[:TIDEX$      @@[@@@@@@@[\TIDE$       @@[@@@@@@@[VT$CHARNL$   DI
)@@G@@@C@@@@@@@@@+T$INDEX$    @@[@@@@@@@@UT$RETURN0$  @@[@@@@@@@[7T$RETURN1$  DJ
)@@G@@@@[@@@@@@@[8@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@[U^@@@@@@H8K@@[R'0@@@DL
)@@G@@C9@@@@AE4@@^9(=@@E9*=@@GD8K@@[9?=@@G/K@@@ 90)@@ID8K@@[AA@@@@)@F[M@[]@[]@DM
)@@G@@@K@@@@/K@@@W*@@@@FG@R@@[G@@@@@;C@@@MR>4@@I;=@@@MC90@@@C8K@@@N8X@@@AB@@@@DN
)@@G@@)@P[MK^C@@K@^@@@@@8KK@@PG9@@@[')H)@@*8G@@@/>)@@<;HZ@@@9!O@@GO]0@@@/G0@@)DO
)@@G@@') )@@AC@@@@)@Z[N@[@@K)@@@@@@@"KK@@N&#@@@HH@Y@@[C==@@IR[4@@KC90@@[/K@@@>DP
)@@G@@R[4@@JC90@@]/K@@@>AD@@@@)@(@F]@^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@/K@@@@AE@@@@@@@@@@@_#@"_EXECUTION TERMINATED BY DR
)@@G@@AN ATTEMPT TO READ PAST AN END-OF-FILE.   EXECUT@@^@@]@@A@@]@@E@@B@@&@@@DS
)@@G@@@@E@@@@@@@@%T$INDEX$    T$RETURN1$  TNBRKF$     @@[@@@@@@@@[TNBRKV$     DT
)@@G@@@@[@@@@@@@@@TSCANF$     @@[@@@@@@@@ TSCANV$     @@[@@@@@@@@^TSCNRF$     DU
)@@G@@@@[@@@@@@@@ATSCNRV$     @@[@@@@@@@@#T$TSCAN0$   @@[@@@@@@@@FRD IS ERRONEDV
)@@G@@OUS OR DOES NOT CORRESPOND TO FORMAT SPECIFICATIONS:  @_B@_YUNRECOGNIZABDW
)@@G@@LE CONTROL WORD ENCOUNTE)@@[UE@O@@K@[PI)@@/\K@@^CTG@@@CLG@@@CXG@@@/\X@@@DX
)@@G@@CPG)@@@@[@@G@@[@@@@@[@@A@@[@@@AA@@@@)@F[U@K@@@@@@@@@@^_____"[PI@@@[TI@@@DY
)@@G@@[LI@@@[XI@@@/\0@@E[TI@@@[LI@@@[XI@@@/\_@@@AB@@@@)@Q[MK)@K[]@^@@@@@/KF@@@DZ
)@@G@@%9@@@_ *H@@I;GK@[CC5I@@@'=@@@@C@)@@G/K@@@V'=@@@@C@?@@[AC@@@@)@)[M@K^C@)@EA
)@@G@@@@@@@@CW?@@[C^W@@@/KF@@@C@@@@J'=@@@@*S@@@@C8@)@[[*!@@IC@0@@GC8)@@[AD@@@@EB
)@@G@@)@%[U@@^[@@@T9K@@^9)@@@@9))@@]R90@@@C80@@@;GK@@=C[K@@ICCG@@[NO/@@[NS?@@[EC
)@@G@@NKW@@[AE@@@@)@5[N@[@[@@@@@@@@@:[@@[#/KF@@@:[@@[]/K@@[D:[@@[[')H)@@/K@@@3ED
)@@G@@C8K@@@C[K@@H/K@@[BAF@@@@)@_[N@[@^@^@@@@@@@/KF@@[8^K@@9O90@@[')J)@@/K@@[MEE
)@@G@@:9@@@N/K@@[M:9@@@J%9@@@H/K@@[PAG@@@@)[D[MK^[@@^@@@@@@@O90@@[/K@@[B')J@@^EF
)@@G@@C9@@@@P90@@[H80@@[9))@@O:@0@@#/K@@[B(@@@@BAH@@@@)[N[U^@@@@@@')J@@^C[@@@HEG
)@@G@@G@)@@G;C)@@]+8)@@#/KF@@]')H)@@/KF@@[8^K@[R/KF@@#')J)@@AI@@@@)[Y@E@@@@@@@EH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/KF@@@AJ@@@@EI
)@@G@@@@^@@]@@A@@#@@G@@B@@*@@@@@E@@@@@@@[ZTREAD$      READ$       PSR$        EJ
)@@G@@TBLIN$      @@[@@@@@@@[TTCLNESC$    @@[@@@@@@@[ TCLNFUL$    @@[@@@@@@@@6EK
)@@G@@TCLNPK$     @@[@@@@@@@@*TCLN$       @@[@@@@@@@@,TRD$        @@[@@@@@@@@TEL
)@@G@@TTRD$       @@[@@@@@@@@QINTEGRAL BLOCK WAS READ FROM MAGNETIC TAPEINAPPREM
)@@G@@OPRIATE UNITEXECUTION TERMINATED BY AN ATTEMPT T)@@[V@K@@@@@N7W5>@NX.Y^@EN
)@@G@@N^1FK@M$*M@@MIA*@@L48)@@LR4@@@K"K@@@K>@@@@"GY@@["CY@@[AA@@@@)@F[U@@@@@@@EO
)@@G@@SXU/XYS^P<=SR&/ !URH<LR-Q4WH9IQRA\5EP.:3^CP=<]W9PBL%O(O!4-6'OO%[ZCAB@@@@EP
)@@G@@)@Q[U@@@@@@@W_87\+W&N9TIWH#B)_V4]Z$GVQX>19U.E74,U=C?%FUA$-#YT!M4]2TOJ#J]EQ
)@@G@@S61:=6AC@@@@)@-[U@@@K)@@/\0@@@C8)@@@N8)@@BD8K@@[Z/?;NFZZ-Y8LZA[F94Y?4D-XER
)@@G@@YJ!]V;X6EV<DXW;+5!AD@@@@)@?[F]@ ]@C[@K[]@G@@@@@@/@0@@@D44@@I')J@@@/@)@@3ES
)@@G@@"O@@@HC8@@]V/KB@@@/,0@@@'+K@@@AE@@@@)@5[]@@K)#@@@@@@@@@@@@@@@@@@@@/K@@@@ET
)@@G@@;CZ@@@0@@@@G;*Z@@@1/G@@@E//@@@H8J@]W"K@@@HAF@@@@@@^@@]@@A@@^@@I@@^@@Y@@@EU
)@@G@@@@E@@@@@@@@.T$SETUP$    T$ERROR$    T$SCAN$     T$RETURN$   TFLOF$      EV
)@@G@@@@[@@@@@@@@(TFLOV$      @@[@@@@@@@@*TFLO10$     @@[@@@@@@@@]T$FLOGEN$   EW
)@@G@@@@[@@@@@@@@\9!@[B+C@0^XMN8K@@[(8J@@@/K@[AP9(@^W/C8Z@@@/,0[CE[@@^W_C@@[B$EX
)@@G@@'=@@@I9!@[B);@0@@M8KK[AHR]0^W;/KF@@@A]0^X^C^K^XM/,0[CN[@K^X CCK^XM/,0[CNEY
)@@G@@[@K^XDC^K^XW/,0[CN[@K^XG)@@[N@K^[@@@@@@@@@@@@@@@KE")@@@@@@@@KB2@@@@@@@@@EZ
)@@G@@K^*@@@"?I@@)"*I@@)"?J@@]"*J@@]AA@@@@)@E[U@@@@@@@KY;&?*@@@@@@KV\:0)@@@@@@FA
)@@G@@KS&DU@@@@@@@KO.]K@@@@@@@KL05@@@@@@@@KI$^@@AB@@@@)@P[U@@@@@@@.C@@@@K\!YS)FB
)@@G@@E)@@@@K?=SN$^@@@@@K*'HM>K@@@@@K>,=I7@@@@@@K+>KF9@@@@@@AC@@@@)@)[U@@@@@@@FC
)@@G@@OE5"X'MZ_J(!NP0$)Z[K9#>XM):2&H%]!0!UL:$WQ!\0K@@@K6<-\DGU@@@@K285"(AD@@@@FD
)@@G@@)@:[U@@@@@@@E7_& ;SO!-U-1U<N(,RZ(@E92S#(<IQ%=;(B0D=<G%P5-K"! ?QV EO_;;I:FE
)@@G@@<8ZU"@AE@@@@)@6[U@@@@@@@XN%$;:/.U_ 6WY&TA&_"G/2NV(+>EQHNY]SOU3"M8G<N=$PRFF
)@@G@@T"8B#7=SQV\9TD2+++AF@@@@)[[[U@@@K)@@/\0@@@C8)@@[N8)@@ND8K@@[C]L/-@Z2'P#ZFG
)@@G@@AP1%F9Y.4+V/M%YX\CYC\O$L"9797(AG@@@@)[G[N]@ ]@C@@K@@@@/@0@[Y9?@@@H"4^@@GFH
)@@G@@C@0@@IC8@@K/Q]0@@J9*^@@G/KB@@@/,0@@@'+K@@@AH@@@@)[Q[M^@K^@K[]@G@@@/@0@@@FI
)@@G@@D44@@I')F@@];*)@@[/@)@[Y')F@@@;C0@@Z/@0@[W;?)@@)"K)@@JAI@@@@)[)[E@@^C@0@FJ
)@@G@@@@@@@@@@@@@@/K@@@@9?@@@H;GZ@@@0@@@@G;?Z@@@1/G@@@E//@@@H8J@K."0@@@GAJ@@@@FK
)@@G@@@@^@@]@@A@@^@@I@@^@@Y@@@@@E@@@@@@@[(T$SETUP$    T$ERROR$    T$SCAN$     FL
)@@G@@T$RETURN$   TFLOFD$     @@[@@@@@@@[DTFLOVD$     @@[@@@@@@@[CTFLO10D$    FM
)@@G@@@@[@@@@@@@@^T$FLOGEND$  @@[@@@@@@@[JR]0^W9/KF@@@A]0^W'9(@^W/=8K@]@/K@[ 6FN
)@@G@@>8K@)@/K@[A@Q;_@@[>8K@)@/K@[ "C^K^X;/,0[CE[@@^W_C@@[B='=@@@IC@@[B>/K@[A FO
)@@G@@QB0^X;C?@^X;C8K[BF[^W^X,C@@[B&[@@^ZXC8@@@@R]0^W')@@[M^@@^C@^C@K@@@/K@@@@FP
)@@G@@/\0@@@[CO@@ON8)@@EC8)@@@R90@@[D8K@@[/K@@@ R90@@"D8K@@[AA@@@@)@E[E[]@D]@HFQ
)@@G@@@K^[@@@@@@@@/K@@@"/K@@@6/K@@@*/K@@@?/K@@@@/,0@@@A(4@@CA O@@OAD=@@NAB@@@@FR
)@@G@@)@N[N@K^[@[]@K^C[@/-0@@@;H\@@@9!=@@P/K@@@@*@^@@B*0^@@I/K@@[B/K@@[]/K@@@'FS
)@@G@@/K@@@1AC@@@@)@X[U@@@@@@@8#R@@@R[4@@N9(O@@GC0O@@I!0O@@I[>4@@CG8K@@[91O@@RFT
)@@G@@C@K@[[C90@@FC@^@@MAD@@@@)@*[E[]@OK)A^C[4C]@@@@@@/K@@@@/K@@@@(?^@@I/K@@@@FU
)@@G@@*0^@@C')0@@@/KB@@@(0^@@C**^@@BAE@@@@)@1[M@Y)D@K)E@@@@@C80@@^/K@@@@^?4@@IFV
)@@G@@/KB@@@*?^@@I/K@J_" C^@@C1G^@@C/KB@@@(?^@@IAF@@@@)@;[M^C]0^C]K@@@@@C?=@@DFW
)@@G@@*4^@@BC?=@@C/K@@@@[@)@[]^?4@@IG@)@[]/K@@@@[=4@@C^?4@@IAG@@@@)[ [M@^@@@@@FX
)@@G@@@@@@@@NCO@@OQD=@@NN8)@@NC8)@@[/K@@[H(?^@@IC8)@@@N8)@@E/@$@@@ C^@@CAH@@@@FY
)@@G@@)[J[#]@0^C#OC[KK)I@@@@@@@@@@@@/K@@@@[0=@@C[(=@@C'+@@@@/\0@@@O O@@OC(=@@CFZ
)@@G@@R[K@@@AI@@@@@@@@@@%@K[F!9*@^Z!/K@^Y_@@@@@@@@@@@@STOP:        @@@@JC@VK@[GA
)@@G@@;*K@@SC8@@@[;?@@@ [@@^-$@@^@@]@@A@@J@@=@@^@@4@@@@@E@@@@@@@[RT$SETUP$    GB
)@@G@@T$ALENTER$  T$INTGEN$0  T$ALPHINT$  T$SCAN1$    T$ERROR$    T$INTGEN$   GC
)@@G@@T$FLOGEN$   T$FLOGEND$  TREN$       T$RANGE1$   T$RETURN$   T$INDEX$    GD
)@@G@@T$SETUP1$   T$SCAN$     TGENF$      @@[@@@@@@@@^TGENV$      @@[@@@@@@@@#GE
)@@G@@TGNRF$      @@[@@@@@@@@[TGNRV$      @@[@@@@@@@@@C[H@@@N@)^>8'^@[G"[@K^>7GF
)@@G@@)@@[M@^@[]@@@@@@@@/\0@@@C8)@@@N8)@@ED8K@@[/K@@@DC8)@@[N8)@@OD8K@@[^@)^@)GG
)@@G@@      AA@@@@)@E[N@E@@-@])]^@K@/K@@@@*?^@@C/K@@@P/K@@@@[C=@@CC8)[]]*)^@@DGH
)@@G@@C8)[]@R'0@@L/K@@@YAB@@@@)@O[N]@H@[@[]@KK@@/K@@@)[@4@@G'+@@@@*@^@@B/KB@@@GI
)@@G@@/K@@@U:==@@D%*=@@D/-0@@U/K@@@@AC@@@@)@Y[U@@K) @@[=^@@C]@)@[]G8@@@BL^W@@@GJ
)@@G@@CCO@@MG8@@@]:90@@]C0^@@DR[0@@NC@4@@HC54@@DAD@@@@)@([M^[8@K)A@@@@@@C[=@@GGK
)@@G@@CC=@@HG@@@@@[@?@@[*0^@@D[@?@@@C@$J_"/^K@@0C^^@@MD9K@@@AE@@@@)@3[N]@SK[@KGL
)@@G@@)A^@@@G9@@@[')H)@@/K@@[F:@0@@MO]0@@@/G0@[M') )@@/K@@@;*4^@@DG@R@@@AF@@@@GM
)@@G@@)@.[N@^[]@S[@^@@@@/G0@[L') )@@/K@@[S%@0@@M[54@@D[@4@@HO]0@@@/G0@[M') )@@GN
)@@G@@8K)@@6AG@@@@)[B[F]@SK^@K^C[-@@@@@@@@/K@@[P%@0@@MO]0@@@/G0@[L') )@@/K@@[PGO
)@@G@@/K@@[S:@0@@MO]0@@@AH@@@@)[K[N@@K@[]@S@@@@@H@Y@@@C@)@@N 4^@@DH9K@@[R[4@@KGP
)@@G@@/K@@[QR[4@@JH9K@@[H9K@@[/K@@@;AI@@@@)[U@U^C[0@@@@@@@@@@@@@@@@@@@@@@@@@@@GQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@/K@@@@&#@@@HC@)@@LAJ@@@@@@^@@]@@A@@C@@Q@@C@@6@@@GR
)@@G@@@@E@@@@@@@[XT$SETUP$    T$SCAN$     T$OCTGEN$   T$DECGEN$   T$ERROR$    GS
)@@G@@T$ALCHAR$   T$INDEX$    T$RETURN0$  TINTFD$     @@[@@@@@@@@#TINTF$      GT
)@@G@@@@[@@@@@@@@BTINTVD$     @@[@@@@@@@@]TINTV$      @@[@@@@@@@@AT$ALENTER$  GU
)@@G@@@@[@@@@@@@@YT$ALPHINT$  @@[@@@@@@@@PT$INTGEN$   @@[@@@@@@@@MT$INTGEN$0  GV
)@@G@@@@[@@@@@@@@G"C)^&X"^)^&Y)@@[U@@@G^*@@^[@^[@@@@@B@@@@@#@@S@@F@@G@@ @@T@@@GW
)@@G@@@@H@@@@@P@@@@@G@@@@^5_;G@@$__UAA@@@@)@F@'0M)SDKG^*A]O#[E[)>@0M)@@@@@@@@@GX
)@@G@@@^[@^[@^[@^[@]:@^[@^[@^[@^[@^[@^[@^[@^[@^[AB@@@@)@M@'0M)SDKG^*A]O#[E[)>@GY
)@@G@@0M)@@@@@@@@@@^[@[N@^[@[N@^[@[N@^[@^[@]7@^[@]4@^[@^[@^[AC@@@@)@T@'0M)SDKGGZ
)@@G@@^*A]O#[E[)>@0M)@@@@@@@@@@^[@[N@^[@[N@^[@[N@^[@[N@^[@[N@];@[N@^[@[NAD@@@@HA
)@@G@@)@)@'0M)SDKG^*A]O#[E[)>@0M)@@@@@@@@@@^[@#S@^[@#I@^[@^[@^[@]=@^[@^[@^[@^[HB
)@@G@@@^[@^[AE@@@@)@$[]0M)SDKG^*A]O#[E[)>@0M)@@@[@^@@M@^[@^[@]F@^[@]F@^[@^[@#LHC
)@@G@@@^[@]2@^[@#O@^[@^[AF@@@@)@\[U[]@@@@@[?=@@I9*^@@BN80@@["K@@@K/KJ@@@*4^@@DHD
)@@G@@R';@@@"L@@@BN8X@@@AE4@@^9(=@@EAG@@@@)@'[U@@@@@@@9?)@@M9*I@@@*?^@@I[@Y@@@HE
)@@G@@C@=@@M90@@@G:8)@@-C)=@@B/KF@@@8KZ@@[C8)@]]AH@@@@)[ [N]@^K^C@@K@@@@C8\@@@HF
)@@G@@/KF@@D**^@@C/>0@#O;H\@@@9!=@@[O]0@@@/G0@#L') )@@/K@@@@AI@@@@)[J[N8^@@^[@HG
)@@G@@@@@@@@/^K@[$/K@@#S**^@@BH>^@@BH8)@@0G(^@@B/KB@@@RD_@@E?8)@@=R _J_>AJ@@@@HH
)@@G@@)[T[N@[@K^@K@@@@@@C9)[]]C?=@@I/K@@#S(4^@@C/G@@[$/^)@[&/K@@[$*4^@@B^04@@BHI
)@@G@@/^@@[$AK@@@@)[<[V@^@[@@@;?@@@]9-)@@G;?@@@["L)@@I/K@@["*?^@@CG!O@@B^?4@@BHJ
)@@G@@/K@@#S[D=@@CNC,@@AAL@@@@)[,[MK[@^@^[@@@@@@/CK@#S/^@@[8/!;@@ **^@@C/K@@['HK
)@@G@@(0^@@C/K@@^O*4^@@B8K)@#S9)@@@MAM@@@@)[8[MK@K^@K@@@@@@@)@K@@I;?@@@#/K@@]CHL
)@@G@@!8)@@C/K@@]^/K@@#R*?^@@I**^@@C/K@@] C8)@@EAN@@@@)]][MK@K@^@@@@@@@@*4^@@BHM
)@@G@@'))@^)/KF@@C**^@@C/KF@@^')0@^)(*^@@CC8)@@G8K)@#SC@K@@IAO@@@@)]G[N@^@K@*]HN
)@@G@@@)@@@@/K@@#O/K@@]V1G^@@CR90@]7[)4@@C/K@@#S[)4@@B/K@@]L*@^@@B/K@@]QAP@@@@HO
)@@G@@)]Q[U^@E@]@@/KB@@@%8)@@-/K@@#O0G^@@C/KB@@@(0^@@CR90@#S[)4@@C/K@@^#*0^@@BHP
)@@G@@()^@@CAQ@@@@)]-[MK@^@K[@@@@@@@/K@@#S^=4@@B/!0@]-*0^@@C/K@@^#*4^@@B(=^@@BHQ
)@@G@@/KF@@B/K@@^#(*^@@CAR@@@@)]:[M^@K^[@@@@@@@@**^@@C/KF@@@C90@@]/K@@[$/K@@#OHR
)@@G@@/K@@#S(@^@@B/KB@],C8)@@@R14@@@AS@@@@)]5[MK@K@K[@@@@@@@/K@@##*0^@@B/K@@^#HS
)@@G@@*4^@@B/!;@@B/K@@];(0^@@C**^@@C/K@@];^?4@@IAT@@@@)]_[UK@@@@@@[?=@@D9*^@@GHT
)@@G@@C?=@@C 4^@@C[@=@@BN8)@@#C)=@@BC9K@@[C8K@@[/K@@^#0G^@@CAU@@@@)#E[M^C@^@^@HU
)@@G@@^@@@@@/K@@#UR[4@@JC8)@@]/K@@#U& 4@@JC8)@@#/K@@#S"K@@@B[44@@B ?^@@CAV@@@@HV
)@@G@@)#O[U^@K@@K@/!0@#9*)^@@I/!;@@]0G^@@C9*)@@MC8)@@@8KK@[A^*4@@B/K@@#UR[4@@KHW
)@@G@@C8)@@[AW@@@@)#Z[U^@@@@@@9?^@@GC@0@@K[?^@@CG[@@@HC?^@@DD@K@@H:8)@@-C)=@@CHX
)@@G@@/K@@#:(4^@@BC@0@@KAX@@@@)#%[N@^@@[8@@@@@@@?DIJ_"[==@@CG?=@@IG8)@@[G?=@@CHY
)@@G@@C0=@@CG[@@@L/K@@#6(@^@@B/K@@#!AY@@@@)#4[V8K@@@@@*^^@@KCC4@@^G8)@@^/)7@@@HZ
)@@G@@;C"@@@C)4@@I/KF@@[;C0@@<E@)@@J/K@@^E?HIJ_"AZ@@@@)#_[U@@K@K@@/K@@^>C8K@@[IA
)@@G@@C@0@@N/!0@#9*)^@@IC[0@@JC8)@@^/!;@@@^@0@@N/KJ@@@C^4@@KBA@@@@)^E[U[@@K])@IB
)@@G@@C-^@@C/KF@@BQ90@#,/K@@^T0G^@@C*0^@@C/!;@@#/K@@^T(*^@@C;C)@@<C@)@@JBB@@@@IC
)@@G@@)^P[U[@[@@K@/K@@^>G8Y@@^;*K@@[C?O@@I')0@^)*0^@@CC@0@@N/K@@^UC8)@@[:9@@@-ID
)@@G@@C8)@@@BC@@@@)^)[#@@@K)]@@@@@@@@@@@@@@@@@@@/K@@@@& 4@@JC8)@@@;CK@@);*K@@EIE
)@@G@@C@X@@@H8K@@[/\K@^-BD@@@@@@^@@]@@A@@#@@G@@E@@4@@@@@E@@@@@@@^*T$INDEX$    IF
)@@G@@T$RETURN0$  T$RETURN1$  TREN$       @@[@@@@@@@#ST$ALCHAR$   @@[@@@@@@@@AIG
)@@G@@T$ERROR$    @@[@@@@@@@^)T$ERROVR$   @@[@@@@@@@^TT$RANGE1$   @@[@@@@@@@#,IH
)@@G@@T$RETURN$   @@[@@@@@@@@.T$SCAN$     @@[@@@@@@@[AT$SCAN1$    @@[@@@@@@@[III
)@@G@@T$SETUP$    @@[@@@@@@@@,T$SETUP1$   @@[@@@@@@@@2SSIGN FASTRAND FILE  $-$IJ
)@@G@@)@@[U@@@@@@@D8K@@[DO]"K@@;&?*@@ .Y^@@@&DU@@@#4D@@@@SU)@@@]WK@@@@J*@@@@[=IK
)@@G@@@@@@@EAA@@@@)@F[M^@[]@[]@^K)]@/,0@@@[C=@@C'+K@@@/\0@@@C8)@@@N8)@@GD8K@@[IL
)@@G@@/K@@@LC8)@@[N8)@@SAB@@@@)@P[M[]@G[@@@@@@@@N8)@@ED8K@@[/K@@@)C8)@@[N8)@@OIM
)@@G@@D8K@@[/K@@@@;?I@@@T8)@@#/KB@@@AC@@@@)@Z[EK)@K)[^C@-]@GK@@@@@8#)@@8!9K@@EIN
)@@G@@/@)@@@/KB@@@/,0@@@[0=@@C'+K@@@/\0@@@C8)@@@AD@@@@)@*[MK@B)B)@@@@@@@*?^@@IIO
)@@G@@S@IJ_"C@@@@HH@)@@JS@JJ_"H@0@@LC@@@@HC80@@E/K@@@\?8)@@FAE@@@@)@2[N]@H@K)#IP
)@@G@@^C[@@@9)^@@G;?@@@]9*^@@G;?@@@[/KF@@A/K@@@@(*^@@C/CK@@@/^@@@5/K@@@@AF@@@@IQ
)@@G@@)@/@N@K)#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/K@@@@IR
)@@G@@8#)@@8AG@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@@]@@A@@ @@K@@F@@/@@@@@E@@@@@@@@"T$SETUP$    IT
)@@G@@T$ERROR$    T$SCAN$     T$RETURN$   T$ERROVR$   TDECFD$     @@[@@@@@@@@UIU
)@@G@@TDECF$      @@[@@@@@@@@YTDECVD$     @@[@@@@@@@@TTDECV$      @@[@@@@@@@@XIV
)@@G@@TDEC10$     @@[@@@@@@@@@TOCTFD$     @@[@@@@@@@@FTOCTF$      @@[@@@@@@@@JIW
)@@G@@TOCTVD$     @@[@@@@@@@@ETOCTV$      @@[@@@@@@@@IT$DECGEN$   @@[@@@@@@@@>IX
)@@G@@T$OCTGEN$   @@[@@@@@@@@QO:"5-8MO:II&PH==5(FESV96UT(3<A\:?M4RZ>\2B=K@I?7NIY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/KI^Q3/K@@@@/K@@:_'^@^Z1IZ
)@@G@@/K@OZ;/K@@@@/K@@!@A#)@@@)@@[MK@[]@@K)@@@@@/@V@@@H^B@@#G8 @@@T^B@@ H^^@@@JA
)@@G@@C8A@@@R(4@@IC8K@@@/K@@@#C@K@@GAA@@@@)@E[M@^C@[]@@@@@@@O9X@@@O =@@@R[R@@#JB
)@@G@@Q9?@@@W^B@@ R(4@@I"K@@@GC8@@@@0@@@@GG@@@@HAB@@@@)@O[M[]@@@@@@@@@@@N8)@@@JC
)@@G@@N8K@@@O'0@@]9?FK@@/KF@@@Q =@@#RDR@@ /KF@@@!8A@@@C^^@@#AC@@@@)@Y[V@@@K@@@JD
)@@G@@@@@@@[/KF@@@9?@@[[/^K@@Y9(@@[[;G@@@A)@0@[[)[@@[];?"@@@+8K@@_"K0@@*AD@@@@JE
)@@G@@@@^@@]@@A@@[@@C@@ @@W@@@@@E@@@@@@@@(T$INDEX$    INMASK      @@[@@@@@@@@UJF
)@@G@@TCOLN$      @@[@@@@@@@@]TCOL$       @@[@@@@@@@@FTMASK$      @@[@@@@@@@@WJG
)@@G@@TSKIP$      @@[@@@@@@@@@)@@[N@^@K[@@@@@@@@/G;@@@') )@@:8I@@@/\K@@C%8I@@@JH
)@@G@@/\K@@C:8J@@@/\K@@C%8J@@@/\K@@CAA@@@@)@E[MK[@^@K[@@@@@@/\K@@P:8I@@@/\K@@PJI
)@@G@@%8J@@@/\K@@P:8J@@@/\K@@P/KF@@@/K@@@C')H@@@AB@@@@)@O@'K)@@^@@@@@@@@@@@@@@JJ
)@@G@@@@@@@@@@@@@@/K@@@P') )@@/KF@@@')H@@@/G;@@@') @@@%8I@@@AC@@@@@@@@@@@@@@@@JK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JL
)@@G@@@@^@@]@@A@@[@@C@@C@@*@@@@@E@@@@@@@@VT$CHARNL$   TFINDA$     @@[@@@@@@@@^JM
)@@G@@TFIND$      @@[@@@@@@@@@TNFINDA$    @@[@@@@@@@@ATNFIND$     @@[@@@@@@@@]JN
)@@G@@TNSEEKA$    @@[@@@@@@@@NTNSEEK$     @@[@@@@@@@@JTSEEKA$     @@[@@@@@@@@LJO
)@@G@@TSEEK$      @@[@@@@@@@@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@)@@@O@)@@[#@@^@@@@;(K@@YJQ
)@@G@@/KF@@@8KK@@[/\X@@@%9K@@ +9@@@_;=0@@A/K@@@ ------@ASG,-AA@@@@)@C[V@@@@@@@JR
)@@G@@/\X@@@[>W@@@/\X@@@[(W@@@/\X@@@[!W@@@/\X@@@[1W@@@/\X@@@[[W)@[G[K@@QAB@@@@JS
)@@G@@)@N@U^@@@@@@)@@@6@S@@@@@@@C@@@@@^@@@@@]@@@@@[@@@      TPF$  /K@@@B/\X@@@JT
)@@G@@[-W@@@AC@@@@)@A[I@SED80A@E])-80@)@@@C@0@#B>@)@@BC@)@@G9*K@@]A]0@@M@@@@@BJU
)@@G@@@@[@@ @@)@@@@@K@@@AD@@@@)@J[Q@W^JA@[[[@K@@9*I@@^9?@@@@/K@@@T*0I@@@9?I@@^JV
)@@G@@[)0@@@C80@@X=@)@@^C80@@ [@0@@[AE@@@@)@T[I@T@JA@^[@K^ @K)@@@@'=@@@@C@@@#CJW
)@@G@@9*@@@^/K@@@,/,0@[)/K@@@Z>@)@@]/K@@@X*?I@@@AF@@@@)@+[Q@T[K[@KKKO@@@/K@@@!JX
)@@G@@9/@@@C9?I@@];(K@@ZC(K@@E/,0@[G(4I@@@/K@@@,(@@@@AC9@@@@AG@@@@)@?[I@W[@KK/JY
)@@G@@S@K^^@@@@@@@C80@@@G9@@@^ 4@@@E/K@@@4>@)@@^>8K@@)C0K@@E/,0@[)/[K@@,AH@@@@JZ
)@@G@@)@5[I@W @JA@O@K^^/S@K@@@/K@@[@>@)@@ C0K@@E/G0@[ C9K@@@/,0@]C*@@@@[/K@@@9KA
)@@G@@*4@@@EAI@@@@)@"[Q@SJA@^@^@@@@@C9K@@^;!@@@=+9@@@[/K@@[CG9K@@]=8K@@^/K@@[^KB
)@@G@@>@)@@AG9K@@[=8K@@]AJ@@@@)[C[Q@T[KKK[@K)[K@/K@@[Z'=@@@@C@K@#DC8I@@]/K@@[MKC
)@@G@@()I@@@/KF@@@R]0@@M9?K@@^C@@@@IAK@@@@)[M[I@W [K[@K)[^[]@^@@@@'=@@@@'KK@#FKD
)@@G@@QFY@@]'=@@@@C@K@#EC8I@@]/K@@[W9/@@@A9?@@@^AL@@@@)[V[I@W@KKKO [JA@@@@@@@@KE
)@@G@@=@)@@#9*@@@^9?@@@]A]0@@N/KF@@@9*I@@]9?@@@CC9@@@C/K@@[ZAM@@@@)[=[I@W[@KOCKF
)@@G@@@= @K)@KO@@@/K@@[1(@@@@A'=@@@@C@@@#C[@K@@ '=@@@@[@@@@^C@@@#G/K@@[3AN@@@@KG
)@@G@@)[![I@W^JA@^[[K^[@@@@@@@N8K@@^C@0@#I9?@@@C/K@@[>*@@@@A/K@@[&%@@@#HG8@@@[KH
)@@G@@C@@@@^AO@@@@)[6[I@WG@KKL#@^^@@@@@@@@/,0@]Y/\X@@@C9K@@,/,0@@@N8K@@G9?0@@^KI
)@@G@@/\X@@@C9K@@ /,0@@@AP@@@@)[_[I@W@EE^@U@-@@CC@@@@@/KF@@@R]0@@NC9@@@['=@@@@KJ
)@@G@@C@@@#C'=@@@@Q;@@@A&;G@@@H^@@@CAQ@@@@)]C[Q@W^K^^K0[[@K@H@@@@C/,0@]Y/\X@@@KK
)@@G@@C9K@@ /,0@@@N8K@@G9?0@@@9?@@@C[[@@[]A]0@@OAR@@@@)]M[I@S**K[))B<@@)@@@@@@KL
)@@G@@C@@@#CG9@@@]>@0@#J/G0@]WC[@@[][@@@@J'=@@@@Q;@@@A&;G@@@AS@@@@)]V[Q@WC@^^KKM
)@@G@@L@[@@@(4I@@@/K@@]:/\X@@@C9K@@*/K@@]=()I@@@A]0@@P/KF@@@R]0@@O'=@@@@AT@@@@KN
)@@G@@)]>[Q@W@^G@K[#@^@@(?I@@@/,0@@@N8K@@G9?"@@^/\X@@@C9K@@*/,0@@@N8K@@G9?"@@]KO
)@@G@@/K@@]:AU@@@@)]\[Q@W@@K0[@@@@@@/\X@@@C9K@@//\X@@@C9K@@)/,0@@@N8K@@AC@"@@AKP
)@@G@@/\X@@@C9K@@(/K@@]7AV@@@@)]9[Q@T@[#@^[@@@@@C@"@@C/K@@# (=I@@@/\X@@@C9K@@/KQ
)@@G@@/,0@@@N8K@@AC@"@@B/K@@]"(*I@@@AW@@@@)##@&@T#@ [@)@@@&@%+YG[)]@@@@@R     KR
)@@G@@A     @@@@@B@@[@@#/KF@@@R]0@@P/,0@@@N8K@@AAX@@@@)@^[Q@*@KO[@K)#KK@R]0@@QKS
)@@G@@'=@@@@/@@@@H/,0@@JA]0@@QRA    R     XA    X     AR    AY@@@@)@I[Q@([KKK[KT
)@@G@@@^@@@@/K@@@2=8K@@C/=K@@2C8@@@^/@)@@8+8K@@B;G@@@=9*K@@^A]0@@R/KF@@@AZ@@@@KU
)@@G@@)@S[I@?[]@[@KL#@ [@@@@@@/\X@@@C9K@@*9?0@@A/,0@@@N8K@@G9?0@@C9?@@@@'=@@@@KV
)@@G@@C@@@@'BA@@@@)@-[Q@(#@^^^K@@@@@W80@@E;O0@@=C@0@@KC[K@@;+80@__C@0@@E/\X@@@KW
)@@G@@C9K@@(/,0@@@N8K@@GBB@@@@)@:[Q@*K@K0[EE@)*@C@Y@@[[@K@@]C@K@@/H8@@@[/,0@@@KX
)@@G@@C@0@@LN8K@@A/^0@@(;H@@@AG9@@@0BC@@@@)@5@,@?^EE]@)@Q@E@)#B@Q@S*)@@@Z__@@^KY
)@@G@@A     @     /KF@@@R]0@@RQ;@@@]&;G@@@[@K@@#BD@@@@)#D@"@S@@@@@)@'@Q@%+@@@@KZ
)@@G@@)     Z__@@^C@@@@@@USE  QINU$)QINU$A@@[@@[@@[@@ @@]@@LBE@@@@)@/@I@*@@@@@LA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FREE,BF@@@@LB
)@@G@@@@^@@A@@E@@^@@M@@ @@&@@]@@E@@@@@@@@R@@@@@S@@@@#K)@@@@@@@@@@.FITEM$      LC
)@@G@@PCT$        DATE$       CSF$        FIASG$      @@#@@@@@@@@EFIFOPT$     LD
)@@G@@@@ @@@@@@@@]FIFREE$     @@ @@@@@@@@DFIFRIM$     @@ @@@@@@@@JFIPKT$      LE
)@@G@@@@]@@@@@@@@^@@@@@@@@@@@@D@@@@@@[@@@@@@@@@@@@@@@@D@@@@@@#@@@@%9)@@#/K@^1QLF
)@@G@@RB@ BN&B@ #0R]0^\X/KF@@@/K@^1U@@@@@@A]0^1T/^K^1=)@@@'^@K[@@@)@A@M@@@@@@@LG
)@@G@@C8:@@@C=1@@]/K@@@A&'0@@[/K@@@AR';@@@/K@@@A[@-@@[&"0__"AA@@@@)@C[F]@@K)@KLH
)@@G@@)@K^[]@@K)@@+OZ@@#;^I@@@CO\@@]/K@@@O/\)@[\C@)@@GN*Z@@C:@)@@FN=Z@@CAB@@@@LI
)@@G@@)@L[N@K)@^@K[]@@@@R';@@@C@[@@[N*Y@@CC=-@@]/K@@@W1@@@@F8KK@@I')])@@%)\@@HLJ
)@@G@@/@)@@OAC@@@@)@V[V@@[@@K@/K@@@:&"0__" C[@@[AI1@@[/K@@@: G[@@[&"0__"[C-@@[LK
)@@G@@ @@@@I/KF@@@/K@@@HAD@@@@)@&@2^@^@@@@)@:@V@@@@@@@C=1@@]E@K@@H/CK@@\/K@@@:LL
)@@G@@AI1@@[R';@@@/K@@@: G[@@[R';@@@AE@@@@)@,[N]@@K^@^@K@@@@')])@@/K@@[A:C-@@[LM
)@@G@@/K@@@71@@@@F')G)@@/K@@[A/\)@[(N8X@@@T*Z@@CAF@@@@)@8[MK)@^@K[]@[@@@0@@@@FLN
)@@G@@/K@@[ :)\@@H')G)@@/K@@[ C=1@@]/K@@[A(G[@@[:)\@@HC*1@@]AG@@@@)[][N@^[@K@@LO
)@@G@@@@@@@@CK!@@@CW!@@@/\G@@@CO!)@@/KF@@@8KK@@28KK@@"/K@@[A')])@@/@)@[^AH@@@@LP
)@@G@@)[G[UK@@[@E@@@[@[K/\@@[IC=!@@@C*!@@@C?!@@@C0!@@@C4!@@@/\G@@@C)!)@@/\@@[CLQ
)@@G@@CS!@@@AI@@@@)[R[M*@)C@)@@@@@@@CCL@@#/KF@@@[?[@@]'OJ@[Q[CL@@#/K@@[S')J@[$LR
)@@G@@')G)@@')])@@@@[@[EAJ@@@@)[-[MK^[@^@@@@@@@@;C@@@MC8W@@@%O-@@A%0-@@@/K@@[TLS
)@@G@@N8K@J*/\)@[(/K@@[>/\)@[:C?[@@]AK@@@@)[:@F@@@@@@@)[:@%K[]@[@@)[\@E@@@@@@@LT
)@@G@@:*1@@]/K@@[\'KK@@GC8,@@@'KJ@[QC=1@@]/K@@[:AL@@@@)[0@<@@@@@@@@@@@@@@@@@@@LU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/KI@@@/\1K@F ?[@@F/K@@[3AM@@@@@@@@@@@@@@@@LV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LW
)@@G@@@@^@@]@@A@@[@@C@@F@@4@@@@@E@@@@@@@[4E$CHAR$     ECOPYS$     @@[@@@@@@@@(LX
)@@G@@ECOPY$      @@[@@@@@@@@&EFD1$       @@[@@@@@@@@#EFD2$       @@[@@@@@@@@ LY
)@@G@@EFD3$       @@[@@@@@@@@@EMSGR$      @@[@@@@@@@[)EMSG$       @@[@@@@@@@[=LZ
)@@G@@EPACKC$     @@[@@@@@@@@YEPACKS$     @@[@@@@@@@@+EPACK$      @@[@@@@@@@@XMA
)@@G@@E$PTRL$     @@[@@@@@@@[Q@@@@@@@@@@@@@@@@@@@@@@@@)@@[U@[@^[@@^@X@@@/@0@@NMB
)@@G@@')I@@Q @H@@@C@)@@$N80@@]N@)@@H&;K@@[N@K@@IG8)@@[;*)@@SAA@@@@)@F[U@K@[@@@MC
)@@G@@H@K@[]/K@@@B$;)@@C[[X)@@!80@@B[[H)@@9!IK@Y[?!)@@^).@@@!80@@B[=.@@@AB@@@@MD
)@@G@@)@Q[U@@@@@@@@@G@@^@@G@@]C?/@@[C0/@@[C4/@@[C=/@@@C*/@@@C?/@@@C0/@@@C4/@@@ME
)@@G@@/KF@@@AC@@@@)@-@'@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@[@@G@@H@@G@@F@@G@@DMF
)@@G@@@@G@@C@@G@@B@@G@@AAD@@@@@@^@@]@@A@@@@@A@@[@@E@@@@@E@@@@@@@@*ELT$INFOR   MG
)@@G@@@@[@@@@@@@@@C     DETERMINE THE PROBABLE UPDATE TIME  @^@@@X      DO 200MH
)@@G@@0 JL=1,NL   @#@@@X      NZIN=NZN(JL)@^@@@X      *[S@@@*SDFF*@#@@@@/     MI
)@@G@@    AXR$    @^@@@@ELT$      EQUF      0,A0@#@@@@          ELT$    @[@@@@MJ
)@@G@@.     @G@@@@. ELT$INFOR - ROUTINE TO PRODUCE INFOR FROM AN ELT$ FORMATTEMK
)@@G@@D TABLE.    @[@@@@.     @ @@@@.  A0 = ELT$ PACKET ADDRESS   @ @@@@.  A1 ML
)@@G@@= INFOR AREA ADDRESS    @E@@@@.  A2 = SPECIFICATION NUMBER OF ITEM IN ELMM
)@@G@@T$ (USUALLY 1)    @^@@@@.  LMJ  X11,ELT$INFOR   @#@@@@.  A0 UNCHANGED   MN
)@@G@@@D@@@@.  A1 = # WORDS OF INFOR PRODUCED (LAST WORD IS ZERO).@[@@@@.     MO
)@@G@@@^@@@@. USES X11,A0-A5,R1-R3  @[@@@@.     @^@@@@. DEFINE INFOR FIELDS   MP
)@@G@@@[@@@@.     @F@@@@FN        EQUF      0,,S1             . FIELD NUMBER (MQ
)@@G@@0 OR 1)     @F@@@@SFN       EQUF      0,,S2             . SUBFIELD NUMBEMR
)@@G@@R (SPEC #)  @F@@@@CN        EQUF      0,,S3             . COMPONENT NUMBMS
)@@G@@ER (1..8)   @F@@@@FCN       EQUF      0,,S4             . FILE CONTINUATMT
)@@G@@ION NUMBER  @F@@@@CC        EQUF      0,,S5             . CHARACTER COUNMU
)@@G@@T (0..12)   @E@@@@WC        EQUF      0,,S6             . WORD COUNT (0.MV
)@@G@@.2)   @[@@@@.     @#@@@@$(1)      $LIT    @]@@@@ELT$INFOR*  @H@]@@      MW
)@@G@@    AA,U      A2,0100           . ADD FIELD NUMBER TO SUBFIELD NUMBER   MX
)@@G@@@D@@@@          LSSL      A2,24             . LEFT JUSTIFY  @G@@@@      MY
)@@G@@    AA,U      A2,1              . ADD IN THE DEFAULT WORD LENGTH  @D@@@@MZ
)@@G@@          LR        R1,A2             . SAVE HERE     @D@@@@          LXNA
)@@G@@I,U     A1,1              . SET INCREMENT @F@@@@          LR        R2,ANB
)@@G@@1             . SAVE INFOR BASE ADDRESS   @F@@@@          LR,U      R3,2NC
)@@G@@              . GET ANOTHER WORD COUNT    @E@@@@          LA        A2,(ND
)@@G@@1,1)          . GET COMPONENT INDEX @G@@@@EINF010   SZ        0,A1      NE
)@@G@@        . INITIALIZE THE INFOR TERM WORD  @H@@@@          EX        LOADNF
)@@G@@LEN,A2        . GET THE LENGTH OF THE NEXT COMPONENT  @G@@@@          JZNG
)@@G@@        A3,EINF020        . IF NO COMPONENT, SKIP AHEAD     @H@@@@      NH
)@@G@@    SR        R1,0,A1           . POST FIELD, SUBFIELD NOS. & WORD COUNTNI
)@@G@@@H@@@@          SA        A3,CC,A1          . POST CHARACTER COUNT      NJ
)@@G@@            @G@@@@          TG,U      A3,7              . IS WORD LENGTHNK
)@@G@@ (1) CORRECT?     @G@@@@          SR        R3,WC,A1          . NO, POSTNL
)@@G@@ CORRECT WORD COUNT     @F@]@@          SA        A1,CN,*A1         . PONM
)@@G@@ST COMPONENT NUMBER     @F@@@]          SA        A2,CN,*A1         . PONN
)@@G@@ST COMPONENT NUMBER     @E@@@@          DL        A4,*COMPONENT,A2  . GENO
)@@G@@T A COMPONENT     @F@@@@          SA        A4,0,*A1          . POST THENP
)@@G@@ NEXT INFOR WORD  @F@@@@          TG,U      A3,7              . ONLY ONENQ
)@@G@@ WORD TO STORE?   @F@@@@          SA        A5,0,*A1          . NO, POSTNR
)@@G@@ THE SECOND WORD  @E@@@@EINF020   TLEM,U    A2,NUMCMP         . MORE COMNS
)@@G@@PONENTS?    @D@@@@          J         EINF010           . YES, GO DO IT NT
)@@G@@@F@[@@          AN        A1,R1             . COMPUTE # WORDS STORED    NU
)@@G@@@F@@@[          AN        A1,R2             . COMPUTE # WORDS STORED    NV
)@@G@@@C@@@@          J         0,X11             . ALL DONE@[@@@@.     @G@@@@NW
)@@G@@. THE FOLLOWING TABLE MUST BE AN 'EXECUTE' VECTOR BECAUSE PARTWORDS ARE NX
)@@G@@@#@@@@. BEING LOADED.   @[@@@@.     @H@@@@LOADLEN   EQU       $-1       NY
)@@G@@        . INDEX WITH COMPONENT NUMBER (1..8)    @E@@@@          LA      NZ
)@@G@@  A3,FQL            . 1 - QUALIFIER LENGTH@E@@@@          LA        A3,FOA
)@@G@@NL            . 2 - FILENAME LENGTH @F@@@@          LA        A3,FCL    OB
)@@G@@        . 3 - FILE CYCLE LENGTH     @E@@@@          LA        A3,RKL    OC
)@@G@@        . 4 - READ KEY LENGTH @E@@@@          LA        A3,WKL          OD
)@@G@@  . 5 - WRITE KEY LENGTH@F@@@@          LA        A3,ENL            . 6 OE
)@@G@@- ELEMENT NAME LENGTH   @F@@@@          LA        A3,EVL            . 7 OF
)@@G@@- VERSION NAME LENGTH   @F@@@@          LA        A3,ECL            . 8 OG
)@@G@@- ELEMENT CYCLE LENGTH  @[@@@@.     @C@@@@. THE FOLLOWING TABLE MAY BE LOH
)@@G@@OADED INDIRECT.   @[@@@@.     @H@@@@COMPONENT EQU       $-1             OI
)@@G@@  . INDEX WITH COMPONENT NUMBER (1..8)    @D@@@@          +         FQUAOJ
)@@G@@L             . 1 - QUALIFIER @D@@@@          +         FNAME           OK
)@@G@@  . 2 - FILENAME  @D@@@@          +         FCYC              . 3 - FILEOL
)@@G@@CYCLE @D@@@@          +         RKEY              . 4 - READ KEY  @D@@@@OM
)@@G@@          +         WKEY              . 5 - WRITE KEY @E@@@@          + ON
)@@G@@        ENAME             . 6 - ELEMENT NAME    @E@@@@          +       OO
)@@G@@  EVER              . 7 - ELEMENT VERSION @E@@@@          +         ECYCOP
)@@G@@              . 8 - ELEMENT CYCLE   @]@@@@          . @E@@@@NUMCMP    EQOQ
)@@G@@U       8                 . NUMBER OF COMPONENTS@]@@@@          . @#@@@@OR
)@@G@@          END     ___@@@ FILE OBTAINED, RECOVERY ENABLED    @[E^5UEDITOROS
)@@G@@ RECOVERY DISABLED, SCRATCH FILE COULD NOT BE AS*[S@@@*SDFF*@#@@@@      OT
)@@G@@    LIBRARY @#@@@@          RESUME  @[@@@@.     @D@@@@. LITTLE SUBROUTINOU
)@@G@@E FOR THOSE WHO ARE INTERESTED:     @[@@@@.     @^@@@@.         A0 = 'SSOV
)@@G@@S'    @G@@@@.         LMJ       X11,SSTYPE$       . COMPUTE THE SYMBOLICOW
)@@G@@ SUBTYPE    @[@@@@.     @G@@@@. WHERE SSS IS A SYMBOLIC SUBTYPE MNEMONICOX
)@@G@@ OR NUMBER, IN FIELDATA; WHERE@D@@@@. THE NUMBER MAY BE OCTAL (LEADING ZOY
)@@G@@ERO) OR DECIMAL.  @[@@@@.     @[@@@@.     @B@@@@. UPON RETURN, THESE REGOZ
)@@G@@ISTERS HAVE STUFF:@[@@@@.     @A@@@@.   A0  =  ELEMENT TYPE (USUALLY 1) PA
)@@G@@@B@@@@.   A1   =  ELEMENT SUBTYPE (0 THRU 63)   @[@@@@.     @G@@@@. IF APB
)@@G@@N ERROR OCCURS, A0 WILL BE NEGATIVE WITH THE FOLLOWING VALUES:    @[@@@@PC
)@@G@@.     @ @@@@.   -1 = UNKNOWN MNEMONIC     @G@@@@.   -2 = LEADING DIGIT(SPD
)@@G@@) FOLLOWED BY NON-BLANK NON-NUMERIC CHARACTER   @D@@@@.        OR LEADINPE
)@@G@@G ZERO FOLLOWED BY AN 8 OR 9 DIGIT. @D@@@@.   -3 = NUMBER SPECIFIED IS GPF
)@@G@@REATER THAN 63 (BASE 10)@[@@@@.     @G@@@@. THE MNEMONICS MAY CONSIST OFPG
)@@G@@ THE DEFINED ELEMENT SUBTYPE MNEMONICS,   @G@@@@. OR THE STANDARD ELEMENPH
)@@G@@T TYPE MNEMONICS; SUCH AS 'ASMP', 'REL', ETC.   @[@@@@.     @A@@@@. USESPI
)@@G@@ REGISTERS: X11,A0-A5,R1-R2   @[@@@@.     @[@@@@.     @A@@@@. THE RECIPRPJ
)@@G@@OCAL ROUTINE IS NUMSST$ @[@@@@.     @B@@@@.         A0   = ELEMENT TYPE PK
)@@G@@(1 THRU 7)  @C@@@@.         A1   = ELEMENT SUBTYPE (0 THRU 63)    @F@@@@PL
)@@G@@.         LMJ       X11,NUMSST$       . CONVERT NUMBER TO SYMBOLIC@[@@@@PM
)@@G@@.     @#@@@@. UPON RETURN:    @[@@@@.     @D@@@@.   A0 = 'XXXX  '   . 3-PN
)@@G@@4 CHARACTER MNEMONIC (LJSF)   @[@@@@.     @G@@@@. A0 WILL BE NEGATIVE IFPO
)@@G@@ ONE OF THE FOLLOWING POSSIBLE ERRORS OCCUR:    @[@@@@.     @C@@@@.  -1 PP
)@@G@@= ELEMENT TYPE OUT OF RANGE (A0<1 OR A0>7)@D@@@@.  -2 = ELEMENT SUBTYPE PQ
)@@G@@OUT OF RANGE (A1<0 OR A1>63)  @[@@@@.     @G@@@@. THE  STANDARD  MNEMONIPR
)@@G@@C  DEFINED  FOR  THE  ELEMENT  SUBTYPE  WILL  BE@G@@@@. RETURNED, IF IT PS
)@@G@@EXISTS; OTHERWISE, THE  OCTAL  REPRESENTATION  OF  THE@ @@@@. NUMBER WILPT
)@@G@@L BE RETURNED.    @[@@@@.     @[@@@@.     @[@@@@.     @ @@@@          $IPU
)@@G@@NFO     1 TYPE$REP@#@@@@$(1)      LIT     @]@@@@SSTYPE$*    @]@@@@SSTNUMPV
)@@G@@$*    @D@@@@          LA,U      A5,5              . GET A COUNTER @[@@@@PW
)@@G@@SST010@F@@@@          LA        A1,(' '*/30)      . BLANK FILL A0, ZERO PX
)@@G@@OUT A1@F@@@@          LDSC      A0,6              . PUT LEADING CHAR IN PY
)@@G@@A1    @H@@@@          TZ        A1                . WE WANT TO LEFT JUSTPZ
)@@G@@IFY THE MNEMONIC  @F@@@@          TNE,U     A1,' '            . EVEN IN QA
)@@G@@A FIELD OF BLANKS @F@@@@          JGD       A5,SST010         . LOOP TILQB
)@@G@@L WE GET SOMETHING@E@@@@          DSC       A0,6              . PUT THE QC
)@@G@@CHAR BACK   @D@@@@          LA        A2,(1,-1)         . GET AN INDEX  QD
)@@G@@@F@@@@          LR        R1,SSTYP$         . GET LENGTH OF THE TABLE   QE
)@@G@@@F@@@@          SE        A0,SSTYP$+2,*A2   . LOOK FOR THE MNEMONIC     QF
)@@G@@@E@@@@          J         SST030            . SKIP IF NOT FOUND   @[@@@@QG
)@@G@@SST020@E@@@@          LA,U      A0,1              . GET THE ELEMENT TYPEQH
)@@G@@@E@@@@          LA,U      A1,,A2            . GET THE SUBTYPE     @E@@@@QI
)@@G@@          J         0,X11             . RETURN TO CALLER    @[@@@@.     QJ
)@@G@@@C@@@@. NOT FOUND IN MNEMONIC TABLE, TRY ANOTHER TABLE@[@@@@.     @[@@@@QK
)@@G@@SST030@F@@@@          LR,U      R1,ETYPLEN        . LOOK FOR ELEMENT TYPQL
)@@G@@ES    @E@@@@          LA        A2,(1,-1)         . GET THE INDEX AGAIN QM
)@@G@@@E@@@@          LR        R2,(-077)         . DON'T LOOK AT S6    @D@@@@QN
)@@G@@          MSE       A0,ELTTAB+1,*A2   . TRY PROC TYPES@D@@@@          J QO
)@@G@@        SST040            . NO FIND STILL @D@@@@          SZ        A1  QP
)@@G@@              . CLEAR SUBTYPE @F@@@@          LA,S6     A0,ELTTAB,A2    QQ
)@@G@@  . GET THE ELEMENT TYPE VALUE@D@@@@          J         0,X11           QR
)@@G@@  . AND RETURN    @[@@@@.     @F@@@@. NOTE: THE ORDERING OF THIS TABLE IQS
)@@G@@S IMPORTANT. IT DETERMINES THE@B@@@@. ELEMENT TYPE CORRESPONDENCE TO THEQT
)@@G@@ NAME.@[@@@@.     @^@@@@P         PROC      *10 @#@@@@ELTYPE*   NAME    QU
)@@G@@@ @@@@I         DO        P-1 , ;   @C@@@@          $GFORM    30,$SS(P(IQV
)@@G@@,1),1,5),6,P(I,2) @#@@@@          END     @[@@@@.     @[@@@@ELTTAB@E@@@@QW
)@@G@@          ELTYPE    'ASMP',2          ; ASSEMBLER PROCEDURE @E@@@@      QX
)@@G@@              'COBP',3          ; COBOL PROCEDURE     @E@@@@            QY
)@@G@@        'FORP',4          ; FORTRAN PROCEDURE   @D@@@@                  QZ
)@@G@@  'REL',5           ; RELOCATABLE   @C@@@@                    'ABS',6   RA
)@@G@@        ; ABSOLUTE@C@@@@                    'OMN',7           ; OMNIBUS RB
)@@G@@@F@@@@                    'AP',2            ; ASM PROC (ALTERNATIVE)    RC
)@@G@@@D@@@@                    'CP',3            ; COBOL PROC    @D@@@@      RD
)@@G@@              'FP',4            . FORTRAN PROC  @G@@@@ETYPLEN   EQU     RE
)@@G@@  $-ELTTAB          . LENGTH OF ELEMENT TYPE TABLE    @[@@@@.     @G@@@@RF
)@@G@@. LOOKED FOR MNEMONICS BUT COULDN'T FIND IT. MAYBE IT WAS A NUMBER.     RG
)@@G@@@[@@@@.     @[@@@@SST040@G@@@@          LDSC      A0,6              . GERH
)@@G@@T LEADING CHAR BACK IN A1     @E@@@@          DL        A4,RANGE        RI
)@@G@@  . GET RANGE TESTER    @E@@@@          TW        A4,A1             . ISRJ
)@@G@@ IT A NUMBER?     @F@@@@          J         UNKNOWN           . NOPE, TARK
)@@G@@KE ERROR RETURN   @G@@@@          ANU,U     A1,'0'            . INITIALIRL
)@@G@@ZE THE NUMBER IN A2     @F@@@@          LA,U      A3,10             . ASRM
)@@G@@SUME DECIMAL NUMBER     @F@@@@          JNZ       A2,SST050         . SKRN
)@@G@@IP IF DECIMAL NUMBER    @G@@@@          LA,U      A3,8              . LERO
)@@G@@ADING ZERO = OCTAL NUMBER     @F@@@@          LA,U      A5,'8'-1        RP
)@@G@@  . MODIFY RANGE TEST VALUE   @[@@@@SST050@F@@@@          LA        A1,(RQ
)@@G@@' '*/30)      . BLANK FILL AS WE SHIFT    @F@@@@          LDSC      A0,6RR
)@@G@@              . GET THE NEXT CHAR IN A1   @E@@@@          TW        A4,ARS
)@@G@@1             . IS IT A NUMBER?     @D@@@@          J         SST060    RT
)@@G@@        . NO, SKIP AHEAD@F@@@@          AN,U      A1,'0'            . YERU
)@@G@@S, REMOVE NUMERIC ZONE  @F@@@@          MSI       A2,A3             . SHRV
)@@G@@IFT THE PREVIOUS VALUE  @F@@@@          AA        A2,A1             . INRW
)@@G@@CLUDE OUR NEW NUMBER    @F@@@@          J         SST050            . GORX
)@@G@@ FOR THE NEXT NUMBER    @H@@@@          LA,U      A1,' '            . ENRY
)@@G@@D OF WORD - KLUGE TERMINATOR CHAR   @[@@@@.     @A@@@@. NON NUMERIC - MURZ
)@@G@@ST BE A BLANK     @[@@@@.     @[@@@@SST060@F@@@@          TE,U      A1,'SA
)@@G@@ '            . WAS IT A GOOD TERMINATOR? @F@@@@          J         ILLESB
)@@G@@GALCHAR       . NOPE, TAKE ERROR EXIT     @E@@@@          TG,U      A2,0SC
)@@G@@100           . IS THE VALUE GOOD?  @F@@@@          J         BIGNUMBER SD
)@@G@@        . NOPE, TAKE ERROR EXIT     @E@@@@          J         SST020    SE
)@@G@@        . TAKE NORMAL RETURN  @[@@@@.     @^@@@@. HOME ON THE RANGE     SF
)@@G@@@[@@@@.     @D@@@@RANGE     $GFORM    36,'0'-1,36,'9'   . DECIMAL RANGE SG
)@@G@@@[@@@@.     @#@@@@. ERROR RETURNS   @[@@@@.     @[@@@@BIAS  @[@@@@ETOR  SH
)@@G@@@ @@@@UNKNOWN   LMJ       A0,ERROR  @[@@@@ESTOR @ @@@@ILLEGALCHAR LMJ   SI
)@@G@@  A0,ERROR  @ @@@@BIGNUMBER LMJ       A0,ERROR  @[@@@@ERROR @ @@@@      SJ
)@@G@@    AN,U      A0,BIAS   @C@@@@          LN        A0,A0             . SESK
)@@G@@T FLAG@D@@@@          J         0,X11             . RETURN TO HOME@[@@@@SL
)@@G@@.     @[@@@@.     @]@@@@. NUMSST$   @[@@@@.     @]@@@@NUMSST$*    @F@@@@SM
)@@G@@          TLE,U     A0,7+1            . VALIDATE THE ELEMENT TYPE @E@@@@SN
)@@G@@          TLE,U     A0,1              . SKIP IF IT'S OK     @F@@@@      SO
)@@G@@    J         ETOR              . ELEMENT TYPE OUT OF RANGE @D@@@@      SP
)@@G@@    LA,U      A2,,A0            . TRANSFER INDEX@I@@@@          TLE,U   SQ
)@@G@@  A2,2              . SKIP IF NONSYMBLIC ELEMENT (INCL. PROCS)    @F@@@@SR
)@@G@@          J         NUM010            . GO TAKE CARE OF SUBTYPES  @F@@@@SS
)@@G@@          LA        A0,ELTTAB-2,A2    . GET ELEMENT TYPE MNEMONIC @F@@@@ST
)@@G@@          AN,S6     A0,ELTTAB-2,A2    . REMOVE THE TYPE VALUE     @C@@@@SU
)@@G@@          AA,U      A0,' '            . BLANK IT@F@@@@          J       SV
)@@G@@  0,X11             . RETURN WITH ELEMENT TYPE  @[@@@@NUM010@G@@@@      SW
)@@G@@    TLE,U     A1,64             . VALIDATE THE ELEMENT SUBTYPE    @E@@@@SX
)@@G@@          TLE,U     A0,0              . SKIP IF IT'S OK     @G@@@@      SY
)@@G@@    J         ESTOR             . ELEMENT SUBTYPE OUT OF RANGE    @E@@@@SZ
)@@G@@          LA        A0,SSTYP$+1,A1    . GET THE MNEMONIC    @C@@@@      TA
)@@G@@    J         0,X11             . RETURN  @D@@@@          END           TB
)@@G@@              . OF SSTYPE$    ___@@@TURN  @D@@@@          END           TC
)@@G@@              . OF SSTYPE$    ___@@@UND   @[@@@@SST020@E@@@@          LATD
)@@G@@*[S@@[*SDFF*@#@D@CC[3GT2GD4GT* -2H9!@#@@@CC[!GD3H*)GD8IK=^@)@#@@@CC[!GD3TE
)@@G@@H*)G(1I*=^@)@#@@@CC[!GD3H*)G-5H(0^@)@^@@@CC[!GD3H*)IT9H(+H9?IS)^@)@#@@@CTF
)@@G@@C[!GD3H*)G15H1<IS)@^@@@CC[!GD3H*)IT9H(+H9?IS)^@)@#@@@CC[!GD3H*)G15H1<IS)TG
)@@G@@@#@@@CC[!GD3H*)I[2H9<IS)@#@@@CC[!GD3H*)GL-IT>^))@#@@@CC[!GD3H*)HL0IL\GT3TH
)@@G@@@^@@@CC[!GD3H*)GD6H)=G->G0)^@)@^@@@CC[!GD3H*)GD6H)=I[2H9<IS)@ @@@CC[0G-0TI
)@@G@@ -!^[?HD+^-0 -?HD+^-0^@)@ @@@CC[0G-0 -!^[=I(!I@=I@?G-5H(0^-0@ @@@CC[0G-0TJ
)@@G@@ -!^[&I(,GS=I@?G15H1<^-0@B@@@CC[0G-0 -!^[3JD!GL\H-3^-0 -3JD!GL\H-3^-0^@)TK
)@@G@@@ @@@GC[0G-0 -!^[+GD3G*=I@?GL-IT>^-0@#@E@CC[-G-=^[$G(4G1=HD4@#@D@CC[<H9!TL
)@@G@@I[(H-> --^@)@A@@@DC[HCDND*)C(GE)=E[FE)?C(GE)=E[FE))^@)@A@@@DC[HCDND*)E[DTM
)@@G@@D8=C- C0?E[DD8=C- C0)^@)@A@@@DC[HCDND*)CDQD-OC(NE)?CDQD-OC(NE))^@)@C@@@DTN
)@@G@@C[HCDND*)CDQD)=CL[D-[D1#C*?CDQD)=CL[D-[D1#C*)^@)@B@@@DC[HCDND*)CDQD)=CTJTO
)@@G@@D(HD9I -[E1G^-#D9HD(JD0)@C@@@DC[HCDND*)CDQD)=CTJD(KEL[D1F -[E1G^-#D9HE[MTP
)@@G@@CDIDS)@B@@@DC[HCDND*)CDQD)=C- D- E-  -[E1G^-^C(GC(OC*)@C@@@DC[HCDND*)CDQTQ
)@@G@@D)=C- D-FC(TES?CDQD)=C- D-FC(TES)^@)@C@@@DC[HCDND*)CDQD)=C- D-ID9^C(N -[TR
)@@G@@E1G^-^C(GD1JC- ES)@C@@@DC[HCDND*)CDQD)=C- D-MCDIDTN -[E1G^-^C(GEL[D1FES)TS
)@@G@@@C@@@DC[HCDND*)CDQD)=C-DETKD-[FC?CDQD)=C-DETKD-[FC)^@)@B@@@DC[HCDND*)CDQTT
)@@G@@D)=DDIET ELO -[E1G^-DD1NC(ME))@C@@@DC[HCDND*)CDQD)=DDIETFC(TES?CDQD)=DDITU
)@@G@@ETFC(TES)^@)@C@@@DC[HCDND*)CDQD)=DDIETMCDIDTN -[E1G^-DD1NEL[D1FES)@B@@@DTV
)@@G@@C[HCDND*)CDQD)=DTOC(NE)?CDQD)=DTOC(NE))^@)@B@@@DC[HCDND*)CDQD)=DTOC(NE)0TW
)@@G@@ -[E1G^-FE- ETOA@)@B@@@DC[HCDND*)CDQD)=DTOC(NE)1 -[E1G^-FE- ETOAC)@B@@@DTX
)@@G@@C[HCDND*)CDQD)=DTOC(NE)2 -[E1G^-FE- ETOAK)@B@@@DC[HCDND*)CDQD)=DTOC(NE)3TY
)@@G@@ -[E1G^-FE- ETOAS)@B@@@DC[HCDND*)CDQD)=DTOC(NE)4 -[E1G^-FE- ETOA))@B@@@DTZ
)@@G@@C[HCDND*)CDQD)=DTOC(NE)5 -[E1G^-FE- ETOA*)@B@@@DC[HCDND*)CDQD)=DTOC(NE)6UA
)@@G@@ -[E1G^-FE- ETOA0)@B@@@DC[HCDND*)CDQD)=DTOC(NE)7 -[E1G^-FE- ETOA8)@B@@@DUB
)@@G@@C[HCDND*)CDQD)=DTOC(NE)8 -[E1G^-FE- ETOB@)@B@@@DC[HCDND*)CDQD)=ETOCDOES?UC
)@@G@@CDQD)=ETOCDOES)^@)@C@@@DC[HCDND*)CDQD)=E-MCDQC(MET  -[E1G^-OEL[E1 ELNC*)UD
)@@G@@@D@@@DC[HCDND*)CDQD)=E-MC(  9OC(NE)?CDQD)=E-MC(  9OC(NE))^@)@B@@@FC[HCDNUE
)@@G@@D*)C(GE)=DDIC1JEK?C(GE)=DDIC1JEK)^@)@ @@@DC[HCDND*)E[DD9IE@= -KDDJD1K^))UF
)@@G@@@A@@@DC[HCDND*)E[DD9KCDD^)?E[DD9KCDD^))^@)@A@@@DC[HCDND*)E[DD9OC(NE)?E[DUG
)@@G@@D9OC(NE))^@)@^@@@DC[HCDND*)E[DD8= -KDDJ^))@B@@@DC[HCDND*)E[DD8=ETOCDOES?UH
)@@G@@E[DD8=ETOCDOES)^@)@B@@@DC[HCDND*)E[DD8=E-MCD#C*?E[DD8=E-MCD#C*)^@)@ @@@DUI
)@@G@@C[HCDND*)E[NC-AEK?E[NC-AEK)^@)@ @@@DC[HCDND*)E[NC-AEL] -KET^C1MCK)@A@@@DUJ
)@@G@@C[HCDND*)E[NC-AE- ETO -KET^C1OC(NE))@ @@@DC[HCDND*)E[NC-AE8?E[NC-AE8)^@)UK
)@@G@@@C@@@FC[HCDND*)ETNE-TE[ ^)\E(JD*?ETNE-TE[ ^)\E(JD*)^@)@[@@@DC[ D9A_@@@@@UL
)@@G@@A*6A@1AS7A08A8!A@1BC)^@)@I@I=@^@)AK2^@)A02^@)^@5A@9AS,A@7^@)BC,A*0^@1A@,UM
)@@G@@*[S@@@*SDFF*@^@@@@BASE$*    PROC      *0  @#@@@@          FUNC$   @ @@@@UN
)@@G@@          INCLUDE   'BASE$'   @ @@@@BASE$*    EQU       /$NIL     @#@@@@UO
)@@G@@          END     @^@@@@P         $PROC     *1  @#@@@@BASE*     $NAME   UP
)@@G@@@#@@@@BASE*     $DELETE @#@@@@          FUNC$   @ @@@@          $INCLUDEUQ
)@@G@@  'BASE$'   @#@@@@*         $NIL    @E@@@@*         BASE      [P(1)>0->'UR
)@@G@@P(1,1)'][P(1)>1->',P(1,2)']   @#@@@@          $END    ___@@@@@@@@@@@@@@@US
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UT
)@@G@@*MASM*C)C@@@[@[B'S@@@C@D[@ B'*])@@@@SY$$COMM    @@@B'XC)B@@@[@]B'X@@@C@#UU
)@@G@@C@ @@@#)#B.X@@@B;%@[ B'SC)B@@@[@[B.X@@@C@#]@^B.T<B_B'X@@@X11K @@@@C)B@@@UV
)@@G@@[@[B.T@@@C@#]@^B;&<B_B.X@@@X10K @@@@C)B@@@[@[B;&@@@C@#]@^B;+<B_B.T@@@XH2UW
)@@G@@K @@@@C)B@@@[@[B;+@@@C@#]@^B;F<B_B;&@@@XH1K @@@@C)B@@@[@[B;F@@@C@#]@^B;BUX
)@@G@@<B_B;+@@@SR3K @@@@C)B@@@[@[B;B@@@C@#]@^B;#<B_B;F@@@SR2K @@@@C)B@@@[@[B;#UY
)@@G@@@@@C@#]@^B_J<B_B;B@@@SR1K @@@@C)B@@@[@[B_J@@@C@#]@^B_F<B_B;#@@@R15K @@@@UZ
)@@G@@C)B@@@[@[B_F@@@C@#]@^B_B<B_B_J@@@R14K @@@@C)B@@@[@[B_B@@@C@#]@^B_#<B_B_FVA
)@@G@@@@@R13K @@@@C)B@@@[@[B_#@@@C@#]@^B"_<B_B_B@@@R12K @@@@C)B@@@[@[B"_@@@C@#VB
)@@G@@]@^B";<B_B_#@@@R11K @@@@C)B@@@[@[B";@@@C@#]@^B"N<B_B"_@@@R10K @@@@C)B@@@VC
)@@G@@[@[B"N@@@C@#]@^B"J<B_B";@@@A15K @@@@C)B@@@[@[B"J@@@C@#]@^B"F<B_B"N@@@A14VD
)@@G@@K @@@@C)B@@@[@[B"F@@@C@#]@^B"B<B_B"J@@@A13K @@@@C)B@@@[@[B"B@@@C@#]@^B"#VE
)@@G@@<B_B"F@@@A12K @@@@C)B@@@[@[B"#@@@C@#]@^B._<B_B"B@@@A11K @@@@C)B@@@[@[B._VF
)@@G@@@@@C@#]@^B.P<B_B"#@@@A10K @@@@C)B@@@[@[B.P@@@C@#]@^B.L<B_B._@@@@X9K @@@@VG
)@@G@@C)B@@@[@[B.L@@@C@#]@^B.H<B_B.P@@@@X8K @@@@C)B@@@[@[B.H@@@C@#]@^B.D<B_B.LVH
)@@G@@@@@@X7K @@@@C)B@@@[@[B.D@@@C@#]@^B. <B_B.H@@@@X6K @@@@C)B@@@[@[B. @@@C@#VI
)@@G@@]@^B.[<B_B.D@@@@X5K @@@@C)B@@@[@[B.[@@@C@#]@^B/.<B_B. @@@@X4K @@@@C)B@@@VJ
)@@G@@[@[B/.@@@C@#]@^B/9<B_B.[@@@@X3K @@@@C)B@@@[@[B/9@@@C@#]@^B/5<B_B/.@@@@X2VK
)@@G@@K @@@@C)B@@@[@[B/5@@@C@#]@^B;!<B_B/9@@@@X1K @@@@C)B@@@[@[B;!@@@C@#]@^B')VL
)@@G@@<B_B/5@@@@XUK @@@@C)B@@@[@[B')@@@C@#]@^B_\<B_B;!@@@@T3K @@@@C)B@@@[@[B_\VM
)@@G@@@@@C@#]@^B_:<B_B')@@@@T2K @@@@C)B@@@[@[B_:@@@C@#]@^B_$<B_B_\@@@@T1K @@@@VN
)@@G@@C)B@@@[@[B_$@@@C@#]@^B_<<B_B_:@@@@S6K @@@@C)B@@@[@[B_<@@@C@#]@^B_Z<B_B_$VO
)@@G@@@@@@S5K @@@@C)B@@@[@[B_Z@@@C@#]@^B_V<B_B_<@@@@S4K @@@@C)B@@@[@[B_V@@@C@#VP
)@@G@@]@^B_R<B_B_Z@@@@S3K @@@@C)B@@@[@[B_R@@@C@#]@^B_N<B_B_V@@@@S2K @@@@C)B@@@VQ
)@@G@@[@[B_N@@@C@#]@^B"7<B_B_R@@@@S1K @@@@C)B@@@[@[B"7@@@C@#]@^B"3<B_B_N@@@@R9VR
)@@G@@K @@@@C)B@@@[@[B"3@@@C@#]@^B"\<B_B"7@@@@R8K @@@@C)B@@@[@[B"\@@@C@#]@^B":VS
)@@G@@<B_B"3@@@@R7K @@@@C)B@@@[@[B":@@@C@#]@^B"$<B_B"\@@@@R6K @@@@C)B@@@[@[B"$VT
)@@G@@@@@C@#]@^B"<<B_B":@@@@R5K @@@@C)B@@@[@[B"<@@@C@#]@^B"Z<B_B"$@@@@R4K @@@@VU
)@@G@@C)B@@@[@[B"Z@@@C@#]@^B"V<B_B"<@@@@R3K @@@@C)B@@@[@[B"V@@@C@#]@^B"R<B_B"ZVV
)@@G@@@@@@R2K @@@@C)B@@@[@[B"R@@@C@#]@^B'7<B_B"V@@@@R1K @@@@C)B@@@[@[B'7@@@C@#VW
)@@G@@]@^B'3<B_B"R@@@@Q4K @@@@C)B@@@[@[B'3@@@C@#]@^B'\<B_B'7@@@@Q3K @@@@C)B@@@VX
)@@G@@[@[B'\@@@C@#]@^B'=<B_B'3@@@@Q2K @@@@C)B@@@[@[B'=@@@C@#]@^B;V<B_B'\@@@@Q1VY
)@@G@@K @@@@C)B@@@[@[B;V@@@C@#]@^B;R<B_B'=@@@@J3K @@@@C)B@@@[@[B;R@@@C@#]@^B;NVZ
)@@G@@<B_B;V@@@@J2K @@@@C)B@@@[@[B;N@@@C@#]@^B;J<B_B;R@@@@J1K @@@@C)B@@@[@[B;JWA
)@@G@@@@@C@#]@^B'_<B_B;N@@@@J0K @@@@C)B@@@[@[B'_@@@C@#]@^B';<B_B;J@@@@H2K @@@@WB
)@@G@@C)B@@@[@[B';@@@C@#]@^B./<B_B'_@@@@H1K @@@@C)A@@@[@[B./@@@C@#]@#B.9<A9B';WC
)@@G@@K @@@@C)A@@@[@[B.9@@@C@#]@#B.6<A8B./K @@@@C)A@@@[@[B.6@@@C@#]@#B.3<A7B.9WD
)@@G@@K @@@@C)A@@@[@[B.3@@@C@#]@#B.0<A6B.6K @@@@C)A@@@[@[B.0@@@C@#]@#B.!<A5B.3WE
)@@G@@K @@@@C)A@@@[@[B.!@@@C@#]@#B.%<A4B.0K @@@@C)A@@@[@[B.%@@@C@#]@#B.$<A3B.!WF
)@@G@@K @@@@C)A@@@[@[B.$@@@C@#]@#B.=<A2B.%K @@@@C)A@@@[@[B.=@@@C@#]@#B.-<A1B.$WG
)@@G@@K @@@@C)A@@@[@[B.-@@@C@#]@#B;Z<A0B.=K @@@@C)A@@@[@[B;Z@@@C@#]@#B;%<@WB.-WH
)@@G@@K @@@@C)A@@@[@[B;%@@@C@#]@#B'*<@UB;ZK @@@@C)F@@@[@]B'*@@@K@DK@F@@@[@BB;1WI
)@@G@@D)@@@@SYMBOLS     #@#@[ @@6@[ K @@@[C)F@@@[@]B;1@@@K@DK@F@@@[@BB;8D)@@@@WJ
)@@G@@SYMBOL$     #@#@[ @@6@[ K @@@@C)F@@@[@]B;8@@@K@DK@F@@@[@BB/0D)@@@@DUMPSYWK
)@@G@@MBOLS #@#@[ @@6@[ S @@@[C)C@@@[@[B/0@@@C@D[@ @@@])@@@@SYMBOLTYPE$$@@@B;_WL
)@@G@@C)B@@@[@]B;_@@@C@#C@ @@@#)#B/%@@@B/]@@DB/0C)D@@@[@[B/%@@@C@#]@AB/><@DB;_WM
)@@G@@1@A@@HMASM FUNCTION CTIOC)C@@@[@[B/>@@@C@#]@ B/)<@CB/%1@A@@DDIRECTIVE CTWN
)@@G@@C)C@@@[@[B/)@@@C@#]@ B/V<@BB/>1@A@@CFUNCTION CTIC)C@@@[@[B/V@@@C@#]@ B/QWO
)@@G@@<@AB/)1@A@@DPROCEDURE EDC)C@@@[@[B/Q@@@C@#]@ B/M<@ B/V1@A@@ENAME LABEL LWP
)@@G@@C)B@@@[@[B/M@@@C@#]@^B/H<@^B/Q1@A@@^NODE GC)C@@@[@[B/H@@@C@#]@ B/B<@#B/MWQ
)@@G@@1@A@@ASTRING TRINGC)D@@@[@[B/B@@@C@#]@AB/]<@]B/H1@A@@IFLOATING POINT POIWR
)@@G@@C)C@@@[@[B/]@@@C@#]@ @@@<@[B/B1@A@@ABINARY INARYC-#@@@]@[@[ @@@K@B]-@@@@WS
)@@G@@@[ @@@@@@@@#[D@@[AE@@@@@@@[@@@@@@@@@P           L9)A FUNC$*A DUMP$*F \$LWT
)@@G@@P->$END*R $PAR(0)**OB('N')->$END*W \$PAR(0)**OB('CDLOS')->$END*KMODE EQUWU
)@@G@@ $TMODES*J \MODE**2->$END*B $FDATA*G LEVEL 0,0,0*XLEV EQU P(0)=1->$LEV-1WV
)@@G@@!P(0,1)*STYP EQU P(1)=0->4!P(1,1)*NCLASS $REPEAT 0,127*MCL $EQU $IC(CLASWW
)@@G@@S)*G CL=0->$ENDR*IZ $EQU CL(0)>0*ZLEVEL $REPEAT 1-Z,MIN(CL-Z,LEV)*LSL $EWX
)@@G@@QU CL(LEVEL)8#SYMCC-#@@@]@[@[A@@@K@B]-@B8/@[A@@@@@@@@[@-@@[B)IBOL $REPEAWY
)@@G@@T SL*NSYM $EQU SL(SYMBOL)**TYPE $EQU $TYPE([SL(*SYMBOL)->'/'][SYM])*K TYWZ
)@@G@@PE>TYP->$ENDR*Q P(0,0)->TYPE>7->$ENDR*( P(0,0)->TYPE=1->$SN(SY$$COMM,SYMXA
)@@G@@)->$ENDR*+NAME $EQU SYM:$SR(' ',12-$SL(SYM))*XTABLE(NAME,LEVEL,TYPE) $EQXB
)@@G@@U 0*A $ENDR*A $ENDR*A $ENDR*B $EJECT*1 $DISPLAY '          >> MASM SYMBOXC
)@@G@@L TABLE <<',' '8% $DISPLAY '>> NAME           TYPE         CC-#@@@]@[@[BXD
)@@G@@@@@K@B]-@B9/@[B@@@@@@@@[@-@@[C)L     LEVEL<<',' '*KSI $REPEAT TABLE*TSYMXE
)@@G@@BOL $EQU $NS(TABLE,SI)*PLL $EQU TABLE(SYMBOL)*HLI $REPEAT LL*PLEVEL $EQUXF
)@@G@@ $NS(LL,LI)*LTL $EQU LL(LEVEL)*HTI $REPEAT TL*OTYPE $EQU $NS(TL,TI)(= $DXG
)@@G@@ISPLAY '>> ':SYMBOL:'   ':SYMBOLTYPE$$(TYPE):$SR(' ',18-$SL(SYMBOLTYPE$$XH
)@@G@@(TYPE))):$CD(LEVEL):' <<'T])O $IF P(0,*0)->TYPE<5*?I $DO $SL(SYMBOL) , $XI
)@@G@@SS(SYMBOL,I)=' '->$ENDDT]0] $CC)Z@@@]@@@[C@@@@@@#@W@@@@[C@@@@@@@@[@)W@@@XJ
)@@G@@)ZDO $SS(SYMBOL,I)=' ' ,I EQU I-1T])USYMBOL EQU $SS(SYMBOL,1,I)*M DUMP,LXK
)@@G@@EVEL SYMBOL*A $ENDF*A $ENDR*A $ENDR*A $ENDR*K MODE**1->$ASCII*  $END@EL)XL
)@@G@@*MASM*C)E@@@[@]C[9@@@K@BK@D@@@[@ACIKE@@@@@FLD   #@#@[3@@6@[3K @@@@C)F@@@XM
)@@G@@[@]CIK@@@K@BK@D@@@[@BC@?E@@C[9EDITBV#@^@]C@@6@]C9@A@@#$CB @#C)F@@@[@]C@?XN
)@@G@@@@@K@BK@D@@@[@BCACE@@@@@OLL   #@^@[0@@6@[01@A@@ UF(A) C)F@@@[@]CAC@@@K@BXO
)@@G@@K@D@@@[@BCK#E@@@@@FSL   #@^@['@@6@['1@A@@]FS @@#C)F@@@[@]CK#@@@K@BK@D@@@XP
)@@G@@[@BCA3E@@@@@EDEC  #@^@]F@[$@]F1@A@@#$CD  LC)F@@@[@]CA3@@@K@BK@D@@@[@BCJ/XQ
)@@G@@E@@@@@RRVL  #@^@[;@@6@[;1@A@@#RRV @#C)F@@@[@]CJ/@@@K@BK@D@@@[@BC@>E@@CA3XR
)@@G@@EHEX  #@^@]F@@6@]F1@A@@^$HEX LC)F@@@[@]C@>@@@K@BK@D@@@[@BC[_E@@@@@OL    XS
)@@G@@#@^@[0@@6@[01@A@@[A [@@#C)E@@@[@]C[_@@@K@BK@D@@@[@AC 2E@@@@@FS    #@#@[5XT
)@@G@@@@6@[5K @@@@C)E@@@[@]C 2@@@K@BK@D@@@[@ACH^E@@@@@RRV   #@#@[9@@6@[9K @@@@XU
)@@G@@C)D@@@[@]CH^@@@K@BK@D@@@[@ B;JE@@@@@EVAL  @@]@]B@@6@]BC)D@@@[@]B;J@@@K@BXV
)@@G@@K@D@@@[@ CB%E@@@@@UF    @@]@[%@@6@[%C)F@@@[@]CB%@@@K@BK@D@@@[@BCF+E@@@@@XW
)@@G@@MIN   #@^@[.@@6@[.1@A@@[> [@@#C)E@@@[@]CF+@@@K@BK@D@@@[@AB.(E@@@@@CIF   XX
)@@G@@#@#@]#@@6@]#K @@@@C)F@@@[@]B.(@@@K@BK@D@@@[@BB.+E@@@@@DBSL  #@^@[!@@6@[!XY
)@@G@@5@A@@#(B) ) C)F@@@[@]B.+@@@K@BK@D@@@[@BCAQE@@@@@DBS   #@^@[!@@6@[!5@A@@[XZ
)@@G@@B (B) C)F@@@[@]CAQ@@@K@BK@D@@@[@BCN=E@@B.+CFBML #@^@['@@6@['1@A@@^CFBM #YA
)@@G@@C)E@@@[@]CN=@@@K@BK@D@@@[@ACE8E@@@@@EWLF  #@#@]L@@6@]LK @@@@C)E@@@[@]CE8YB
)@@G@@@@@K@BK@D@@@[@AC]FE@@@@@ICF   #@#@]]@@6@]]K @@@@C)E@@@[@]C]F@@@K@BK@D@@@YC
)@@G@@[@AC^CE@@@@@LB    #@#@[4@@6@[4K @@@@C)F@@@[@]C^C@@@K@BK@D@@@[@BB;EE@@C]FYD
)@@G@@CFBM  #@^@[6@@6@[61@A@@#CBS @#C)D@@@[@]B;E@@@K@BK@D@@@[@ B/)E@@@@@AF    YE
)@@G@@@@]@[(@@6@[(C)E@@@[@]B/)@@@K@BK@D@@@[@AB'3E@@@@@SRA   #@#@[?@@6@[?K @@@@YF
)@@G@@C)D@@@[@]B'3@@@K@BK@D@@@[@ C@ E@@@@@UX    @@]@[$@@6@[$C)H@@@[@]C@ @@@K@BYG
)@@G@@K@D@@@[@DB_#E@@B'3OBL   #@A@[\@@6@[\1@A@@IUF(B**1*/26-1) 26-C)F@@@[@]B_#YH
)@@G@@@@@K@BK@D@@@[@BCF'E@@@@@DBML  #@^@[,@@6@[,5@A@@#(A) ) C)E@@@[@]CF'@@@K@BYI
)@@G@@K@D@@@[@AB"/E@@@@@CIN   #@#@]^@@6@]^K @@@@C)F@@@[@]B"/@@@K@BK@D@@@[@BCDVYJ
)@@G@@E@@@@@DBM   #@^@[,@@6@[,5@A@@[A (A) C)F@@@[@]CDV@@@K@BK@D@@@[@BB" E@@@@@YK
)@@G@@JREGL #@^@]@@@6@]@1@A@@#(A) @#C)F@@@[@]B" @@@K@BK@D@@@[@BCDOE@@@@@CDBSL YL
)@@G@@#@^@[!@@6@[!.@A@@#(B) ) C)F@@@[@]CDO@@@K@BK@D@@@[@BB;^E@@B" JREG  #@^@]@YM
)@@G@@@@6@]@1@A@@[A [@@#C)E@@@[@]B;^@@@K@BK@D@@@[@AB_.E@@@@@ACOL  #@#@[*@[N@[*YN
)@@G@@K @@@^C)G@@@[@]B_.@@@K@BK@D@@@[@CB."E@@B;^OB    #@ @[\@@6@[\1@A@@EB**1*/YO
)@@G@@26-1 /C)F@@@[@]B."@@@K@BK@D@@@[@BCCPE@@@@@CDBS  #@^@[!@@6@[!.@A@@[B (B) YP
)@@G@@C)D@@@[@]CCP@@@K@BK@D@@@[@ CL,E@@@@@DP    @@]@[_@@6@[_C)E@@@[@]CL,@@@K@BYQ
)@@G@@K@D@@@[@ACG\E@@@@@E$L1  #@#@]H@@6@]HK @@@[C)E@@@[@]CG\@@@K@BK@D@@@[@ACA?YR
)@@G@@E@@@@@VAL$  #@#@]A@@6@]AK @@@@C)F@@@[@]CA?@@@K@BK@D@@@[@BB.7E@@@@@RVL   YS
)@@G@@#@^@[;@@6@[;1@A@@]RV @@#C)F@@@[@]B.7@@@K@BK@D@@@[@BC[VE@@@@@CBSL  #@^@[!YT
)@@G@@@@6@[!9@A@@ UF(B) C)F@@@[@]C[V@@@K@BK@D@@@[@BC^+E@@B.7GBML  #@^@[2@@6@[2YU
)@@G@@1@A@@ UF(A) C)D@@@[@]C^+@@@K@BK@D@@@[@ CGKE@@C[VRF    @@]@[7@@6@[7C)D@@@YV
)@@G@@[@]CGK@@@K@BK@D@@@[@ B'"E@@C^+NRI   @@]@] @@6@] C)E@@@[@]B'"@@@K@BK@D@@@YW
)@@G@@[@AB.0E@@@@@FCOL  #@#@[*@[N@[*K @@@AC)F@@@[@]B.0@@@K@BK@D@@@[@BC[OE@@B'"YX
)@@G@@CBS   #@^@[!@@6@[!9@A@@[B ) ) C)F@@@[@]C[O@@@K@BK@D@@@[@BCEUE@@B.0GBM   YY
)@@G@@#@^@[2@@6@[21@A@@[A [@@#C)F@@@[@]CEU@@@K@BK@D@@@[@BC^;E@@@@@PCL   #@^@][YZ
)@@G@@@@6@][1@A@@ UF(W) C)D@@@[@]C^;@@@K@BK@D@@@[@ CMNE@@@@@RV    @@]@[8@@6@[8ZA
)@@G@@C)E@@@[@]CMN@@@K@BK@D@@@[@AB_ZE@@@@@ELIST #@#@]I@@6@]IK @@@@C)F@@@[@]B_ZZB
)@@G@@@@@K@BK@D@@@[@BCM1E@@@@@CDBML #@^@[,@@6@[,.@A@@#(A) ) C)E@@@[@]CM1@@@K@BZC
)@@G@@K@D@@@[@ACBEE@@B_ZEPPL  #@#@]J@@6@]JK @@@@C)D@@@[@]CBE@@@K@BK@D@@@[@ B_LZD
)@@G@@E@@@@@MOD   @@]@[/@@6@[/C)F@@@[@]B_L@@@K@BK@D@@@[@BCENE@@@@@CBML  #@^@[,ZE
)@@G@@@@6@[,9@A@@ UF(A) C)F@@@[@]CEN@@@K@BK@D@@@[@BB_SE@@B_LPC    #@^@][@@6@][ZF
)@@G@@1@A@@[W [@@#C)F@@@[@]B_S@@@K@BK@D@@@[@BB_EE@@@@@CDBM  #@^@[,@@6@[,.@A@@[ZG
)@@G@@A (A) C)F@@@[@]B_E@@@K@BK@D@@@[@BB.VE@@@@@CBM   #@^@[,@@6@[,9@A@@[A ) ) ZH
)@@G@@C)F@@@[@]B.V@@@K@BK@D@@@[@BCC[E@@@@@BSL   #@^@[!@@6@[!1@A@@ UF(B) C)D@@@ZI
)@@G@@[@]CC[@@@K@BK@D@@@[@ B;4E@@@@@ABS   @@]@["@@6@["C)E@@@[@]B;4@@@K@BK@D@@@ZJ
)@@G@@[@AB;'E@@@@@OLR   #@#@[:@@6@[:K @@@=C)E@@@[@]B;'@@@K@BK@D@@@[@AB.OE@@B;4ZK
)@@G@@DPLR  #@#@[:@@6@[:K @@[CC)F@@@[@]B.O@@@K@BK@D@@@[@BB"5E@@@@@BS    #@^@[!ZL
)@@G@@@@6@[!1@A@@[B [@@#C)F@@@[@]B"5@@@K@BK@D@@@[@BC[HE@@@@@BML   #@^@[,@@6@[,ZM
)@@G@@1@A@@ UF(A) C)F@@@[@]C[H@@@K@BK@D@@@[@BCL4E@@B"5OPL   #@^@[1@@6@[11@A@@ ZN
)@@G@@UF(A) C)E@@@[@]CL4@@@K@BK@D@@@[@AB7/E@@C[HE$L0  #@#@]H@@6@]HK @@@@C)B@@@ZO
)@@G@@[@[B7/@@@C@B[@^COK]@@@@@J$F$  @@@B8@C)B@@@[@]B8@@@@C@#C@ @@@#)#C]\@@@C]LZP
)@@G@@@@MB7/C)A@@@[@[C]\@@@C@#]@#C](<@$B8@K @@<VC)A@@@[@[C](@@@C@#]@#C]<<@&C]\ZQ
)@@G@@K @@LDC)A@@@[@[C]<@@@C@#]@#C]X<@>C](K @@C@C)A@@@[@[C]X@@@C@#]@#C#^<@=C]<ZR
)@@G@@K @@UMC)A@@@[@[C#^@@@C@#]@#C#[<@HC]XK @@<YC)A@@@[@[C#[@@@C@#]@#C]"<@GC#^ZS
)@@G@@K @@XSC)A@@@[@[C]"@@@C@#]@#C];<@FC#[K @@RMC)A@@@[@[C];@@@C@#]@#C]8<@EC]"ZT
)@@G@@K @@LGC)A@@@[@[C]8@@@C@#]@#C]5<@DC];K @@FAC)A@@@[@[C]5@@@C@#]@#C]2<@CC]8ZU
)@@G@@K @@ @C)A@@@[@[C]2@@@C@#]@#C]?<@BC]5K @@<SC)A@@@[@[C]?@@@C@#]@#C]&<@AC]2ZV
)@@G@@K @@RGC)A@@@[@[C]&@@@C@#]@#C])<@ C]?K @@G@C)A@@@[@[C])@@@C@#]@#C]U<@^C]&ZW
)@@G@@K @@<MC)A@@@[@[C]U@@@C@#]@#C]R<@#C])K @@L@C)A@@@[@[C]R@@@C@#]@#C]O<@]C]UZX
)@@G@@K @@<MC)A@@@[@[C]O@@@C@#]@#C]L<@[C]RK @@L@C)A@@@[@[C]L@@@C@#]@#COK<@@C]OZY
)@@G@@K @@<@C)E@@@[@]COK@@@K@BK@D@@@[@AB",E@@@@@EREG  #@#@]M@@6@]MK @@@@C)F@@@ZZ
)@@G@@[@]B",@@@K@BK@D@@@[@BC[AE@@@@@BM    #@^@[,@@6@[,1@A@@[A [@@#C)F@@@[@]C[AAA
)@@G@@@@@K@BK@D@@@[@BCJ4E@@@@@OP    #@^@[1@@6@[11@A@@[A [@@#C)G@@@[@]CJ4@@@K@BAB
)@@G@@K@D@@@[@CCK9E@@@@@EOCT  #@ @]F@@6@]F1@A@@A$OCTAL OCTALC)E@@@[@]CK9@@@K@BAC
)@@G@@K@D@@@[@AC] E@@CJ4ESTR  #@#@]G@@6@]GK @@@@C)E@@@[@]C] @@@K@BK@D@@@[@ACAJAD
)@@G@@E@@@@@HB    #@#@[4@@6@[4K @@@AC)F@@@[@]CAJ@@@K@BK@D@@@[@BCL'E@@@@@FBML  AE
)@@G@@#@^@['@@6@['1@A@@#FBM @#C)E@@@[@]CL'@@@K@BK@D@@@[@ACB<E@@CAJE$L   #@#@]HAF
)@@G@@@@6@]HS @@@@C)F@@@[@]CB<@@@K@BK@D@@@[@BC^[E@@@@@MAX   #@^@[.@@6@[.1@A@@[AG
)@@G@@< [@@#C)F@@@[@]C^[@@@K@BK@D@@@[@BCIDE@@@@@FBM   #@^@[6@@6@[61@A@@]BS @@#AH
)@@G@@C)F@@@[@]CID@@@K@BK@D@@@[@BB'8E@@@@@EDITV #@^@]C@@6@]C1@A@@#$CD @#C)E@@@AI
)@@G@@[@]B'8@@@K@BK@D@@@[@ACN^E@@@@@COL   #@#@[*@@6@[*K @@@@C)E@@@[@]CN^@@@K@BAJ
)@@G@@K@D@@@[@A@@@E@@@@@EFPL  #@#@]K@@6@]KK @@@@C)K@@@]@@@]K@@@K@F#@HCKE@]K@@@AK
)@@G@@@@@@@[[CH@@@M@@@@@@@@@@@@@@@@@F           MI-)K END ELIST(F(1))@@@C)2@@@AL
)@@G@@]@@@]G@@@K@F#@\CN%@]G@@@@@@@@[[C\@@@M@@@@@@@@@@@@@@@@@F           MHK)$SAM
)@@G@@ EQU $TMODES**1->$CAS(F(1))!$CFS(F(1))*9S EQU $TSTR(F(1))->F(1)!$TMODES*AN
)@@G@@*1->$CAS(F(1))!$CFS(F(1))*BI EQU 0*I REPEAT $SL(S)*DI EQU I+1*Q $SS(S,I)AO
)@@G@@<>'")'->$ENDR*QS EQU $SSS(S,'")")',I)*DI EQU I+1*A $ENDR*K END '")':S:'"AP
)@@G@@)'@-1)C)(@@@]@@@]M@@@K@F#@&C@3@]M@@@@@@@@[[C&@@@M@@@@@@@@@@@@@@@@@F     AQ
)@@G@@      MJ#)ER EQU F(1)%U $END 0<=R<12->'X':$CD(R)!11<R<28->'A':$CD(R-12)!AR
)@@G@@63<R<80->'R':$CD(R-64)!79<R<96->'ER':$CD(R-80)!95<R<108->'EX':$CD(R-96)!AS
)@@G@@107<R<124->'EA':$CD(R-108)!$CB(R)@_$C)Q@@@]@@@[1@@@K@F#@NB;O@[1@@@@@@@@]AT
)@@G@@[CN@@@M@@@@@@@@@@@@@@@@@F           M W)=A EQU [$TSTR(F(1))->'OB'!'OL'](AU
)@@G@@F(1))*F END [F(0)]@@@C@#C)<@@@]@@@[:@@@K@F#@)CB1@[:@@@@@@@@][C)@@@M@@@@@AV
)@@G@@@@@@@@@@@@@@F           M#T)KV EQU F(0)/(F-1)*SFF FORM V[$SR(',V',F-2)]*AW
)@@G@@GV EQU 'F(1)'*=I DO F-2 ,V EQU V:',F(':$CD(I+1):')'*= END F(0)=72->(FF [AX
)@@G@@V])!UF(+(FF [V]))@C)N@@@]@@@["@@@K@F#@KCA'@["@@@@@@@@[[CK@@@M@@@@@@@@@@@AY
)@@G@@@@@@@@ABS         MCP)< END [$IBITS(ABS(1))**4->'-']ABS(1)@1C)N@@@]@@@[/AZ
)@@G@@@@@K@F#@KCMT@[/@@@@@@@@[[CK@@@M@@@@@@@@@@@@@@@@@MOD         MC#)) END MOBA
)@@G@@D(1)-MOD(1)/MOD(2)*MOD(2)@YMBOC)V@@@]@@@]J@@@K@F#@SCM@@]J@@@@@@@@[[CS@@@BB
)@@G@@M@@@@@@@@@@@@@@@@@F           MIM)EP EQU F(1)*CS EQU ''*2I DO P-(P(0)>0)BC
)@@G@@ ,S EQU S:(I>1->' '!''):ELIST(P(I))T])A END S@  C)Q@@@]@@@]I@@@K@F#@NC^$BD
)@@G@@@]I@@@@@@@@[[CN@@@M@@@@@@@@@@@@@@@@@F           MI@)JS EQU E$L(F(1))*< EBE
)@@G@@ND $SSS($SS(S,1,$SL(S)-1),'',1,4)@HMC)R@@@]@@@[8@@@K@F#@OCD+@[8@@@@@@@@[BF
)@@G@@[CO@@@M@@@@@@@@@@@@@@@@@RV          MBQ)KV EQU $AP(RV(1))** END V*/-LB(RBG
)@@G@@V(2))**FBM(RF(RV(2),RV(2)))@@@C)4@@@]@@@][@@@K@F#@1CG@@][@@@@@@@@][C1@@@BH
)@@G@@M@@@@@@@@@@@@@@@@@F           MD<)DN EQU F-1*V DO N=2 ,SF EQU $TSTR(F(2)BI
)@@G@@)*YSKIP EQU (N=2->SF!N=3)->F(1)!1(#LEN EQU (N=2->\SF!N=3)->F(N-1)!$SL(F(BJ
)@@G@@N))//($IBITS(F(N))**0100->4!6)*=ADDR EQU (N=2->SF!N=1)->(F(N)L)!F(N)*>W BK
)@@G@@EQU +($GFORM 12,SKIP,6,LEN,18,ADDR)*F END [F(0)]@@)AS1C)N@@@]@@@] @@@K@FBL
)@@G@@#@KC^J@] @@@@@@@@[[CK@@@M@@@@@@@@@@@@@@@@@NRI         ME%)LA EQU $BA(NRIBM
)@@G@@(1))*J END A-(A(0)>0)@@)C)Q@@@]@@@[7@@@K@F#@NCOQ@[7@@@@@@@@[[CN@@@M@@@@@BN
)@@G@@@@@@@@@@@@@@RF          MBH)1 END FLD(HB(RF(1))-LB(RF(2)),LB(RF(1))-LB(RBO
)@@G@@F(2)))@@[B';C)T@@@]@@@[2@@@K@F#@QCGP@[2@@@@@@@@][CQ@@@M@@@@@@@@@@@@@@@@@BP
)@@G@@F           M *)BA EQU 0*1I DO F-1 ,A EQU A++[$TSTR(F(I))->'OB'!'BM'](F(BQ
)@@G@@I))*F END [F(0)]@#C)X@@@]@@@]A@@@K@F#@UCK_@]A@@@@@@@@[[CU@@@M@@@@@@@@@@@BR
)@@G@@@@@@@@F           MFC)ML $EQU F=3->F(1)!1*CG* $FUNC*W $LEVEL 0,0,$LEV-[%BS
)@@G@@1:$CD(L)]*S $END [%1:CIN(L,F(F-1))]*D $END G()@,C)2@@@]@@@]H@@@K@F#@\CCABT
)@@G@@@]H@@@@@@@@#[C\@@@M@@@@@@@@@@@@@@@@@F           MH%)EL EQU F(1)*FLL EQU BU
)@@G@@F(0)*JUL EQU $SN(L,0)*U $DO F(*0)->UL=0 ,LL EQU 1T])FUL EQU L-UL*QS EQU BV
)@@G@@'$L':$CD(LL):'('(YI $DO LL,UL ,S EQU S:(I>LL->','!''):((L(I)<>0)++(I=UL)BW
)@@G@@->$TNOD(L(I))->E$L(L(I))!EDITV(L(I))!'')T#)E END S:')'@)*HAVC)M@@@]@@@[_BX
)@@G@@@@@K@F#@JB89@[_@@@@@@@@[[CJ@@@M@@@@@@@@@@@@@@@@@DP          MCU)W END DPBY
)@@G@@(1)**(1*/36-1)*/36<>0@@1C)Z@@@]@@@[*@@@K@F#@WCCU@[*@@@@@@@@#[CW@@@M@@@@@BZ
)@@G@@@@@@@@@@@@@@F           M]R)SF(0) EQU $TMODES**1->4!6M]U)NW EQU (F(1)-1)CA
)@@G@@/F(0)*LC EQU F(1)-F(0)*W*$ END W+(I$ ,F(0)=4->7-C/2-2*(C=2)!14-C)@C).@@@CB
)@@G@@]@@@]@@@@K@F#@'CF*@]@@@@@@@@@][C'@@@M@@@@@@@@@@@@@@@@@F           MDH)HBCC
)@@G@@ EQU 36/F(1)*/ DO 1<B<7->B=5!1 , DISPLAY *'ILLEGAL BYTE VALUE: ':$CD(F(1CD
)@@G@@))*N DO F<4 ,F(3) EQU 1*NBL EQU (B**3)-(B=2)*HIW EQU F(3)/B*HOW EQU F(2)CE
)@@G@@/B*ZIB EQU (F(3)-IW*B)*/(F(1)//6-1)*ZOB EQU (F(2)-OW*B)*/(F(1)//6-1)*;A CF
)@@G@@EQU +(GFORM 1,1-F(*3),2,BL,1,F(*1),11,IW,3,IB,15,OW,3,OB)*F END [F(0)]@3CG
)@@G@@C)P@@@]@@@]^@@@K@F#@MB"G@]^@@@@@@@@[[CM@@@M@@@@@@@@@@@@@@@@@F           CH
)@@G@@ME<)! END (CIF(F(1)[F=3->',F(2)'])->'/'!''):F(F-1)@I=@C)>@@@]@@@[,@@@K@FCI
)@@G@@#@+B_&@[,@@@@@@@@C[C+@@@M@@@@@@@@@@@@@@@@@F           M^0)HA EQU 1*/F(1)CJ
)@@G@@*WI DO 2,F-1 ,A EQU A++1*/F(I)*YD EQU $IBITS(F(0))**2->1!DP(A)*4A EQU (ACK
)@@G@@)[F(*0)->D->'---0D'!'S--1*/36-1'!D->'D'!'S']*F END [F(0)]@$SC)U@@@]@@@[\CL
)@@G@@@@@K@F#@RB8V@[\@@@@@@@@][CR@@@M@@@@@@@@@@@@@@@@@F           M [)EA EQU FCM
)@@G@@(1)*BB EQU 0*$I DO $SL(A) ,B EQU B++1*/('Z'-$SS(A,I))*F END [F(0)]@@@XH1CN
)@@G@@C)-@@@]@@@[$@@@K@F#@YB/@@[$@@@@@@@@[[CY@@@M@@@@@@@@@@@@@@@@@UX          CO
)@@G@@M]C)SA EQU [UX(*1)->'*']UX(1)*+J EQU UX>2->UX(3)!RV(A,FLD(29,26))*2A EQUCP
)@@G@@F RRV(A,FLD(17,0)),UX>1->[UX(*2)->'*']UX(2),J*A END A@C)<@@@]@@@[?@@@K@FCQ
)@@G@@#@)B9P@[?@@@@@@@@[[C)@@@M@@@@@@@@@@@@@@@@@F           M#3):RA EQU SV$$T(CR
)@@G@@$BA(F(1))(1,3),$AP(F(1)),F(2))(E $DO RA=0 , $DISPLAY,1 'REGISTER ':EREG(CS
)@@G@@F(2)):' NOT SAVED AT ':EDITV(F(1))T])C $END RA@@C)4@@@]@@@[(@@@K@F#@1C#!CT
)@@G@@@[(@@@@@@@@[[C1@@@M@@@@@@@@@@@@@@@@@AF          M]0)FS EQU AF(2)*R DO S>CU
)@@G@@0 ,AF(1,0) DELETE*TM EQU S+(AF>2->AF(3)!3)-1*WV EQU [AF(1,*S)->'*']AF(1,CV
)@@G@@S)*HAV EQU $AP(V)(1A EQUF V,M>S<AF(1)->[AF(1,*S+1)->'*']AF(1,S+1),M>S+1<CW
)@@G@@AF(1)->AF(1,S+2)!AF(*2)->$BA(V)(0)->AV**017*/26=0->15!0!15!0T])A END A@ICX
)@@G@@C)R@@@]@@@[6@@@K@F#@OC#B@[6@@@@@@@@][CO@@@M@@@@@@@@@@@@@@@@@F           CY
)@@G@@MB#)XA EQU FLD(F(1)[F>2->',F(2)'])*S END [F(0)](HB(A),LB(A))@@@@R4C)Q@@@CZ
)@@G@@]@@@[4@@@K@F#@NCE-@[4@@@@@@@@][CN@@@M@@@@@@@@@@@@@@@@@F           MA%)XADA
)@@G@@ EQU FLD(F(1)[F>2->',F(2)'])*M END 077**A*/-F(0)@@@C@#C)U@@@]@@@]]@@@K@FDB
)@@G@@#@RCNE@]]@@@@@@@@[[CR@@@M@@@@@@@@@@@@@@@@@F           MD8)KS EQU $CFS(F(DC
)@@G@@1))*8 END 127**($CFS('RANDOM')*($SS(S,1,6)--$SS(S,7,6)))*/-29@)^@5C)X@@@DD
)@@G@@]@@@]L@@@K@F#@UB/&@]L@@@@@@@@[[CU@@@M@@@@@@@@@@@@@@@@@F           MI3)LADE
)@@G@@ EQU $LF(1+F(1))*L $DO A=0 , END ''*ES EQU A(0)*K $DO A=1 , END S*V END DF
)@@G@@S:$SSS(E$L1(A),'',1,3)@TC)1@@@]@@@[!@@@K@F#@,CE"@[!@@@@@@@@C[C,@@@M@@@@@DG
)@@G@@@@@@@@@@@@@@F           M^M)CB EQU 0D($I DO 1,F-1,2 ,B EQU B++(1*/(F(I)+DH
)@@G@@(F(I)>F(I+1)))-1--1*/(F(I+1)+(F(I+1)>F(I)))-1--(F(I)=71->1!F(I+1)=71))T]DI
)@@G@@)YD EQU $IBITS(F(0))**2->1!DP(B)*4B EQU (B)[F(*0)->D->'---0D'!'S--1*/36-DJ
)@@G@@1'!D->'D'!'S']*F END [F(0)]@8-C)$@@@]@@@]#@@@K@F#@=CBJ@]#@@@@@@@@[[C=@@@DK
)@@G@@M@@@@@@@@@@@@@@@@@F           MEB)MN EQU $CFS(F(F-1))*PALIST EQU $IC(ICFDL
)@@G@@(N))*+L EQU MIN(F=2->$LEV-1!F(1),+ALIST)([I $DO L,1,-1 ,J $DO ALIST(I) ,DM
)@@G@@ $DO ALIST(I,J)=N , END ALIST(I,*J)T^)A END 0@83C)R@@@]@@@[.@@@K@F#@OB'ADN
)@@G@@@[.@@@@@@@@][CO@@@M@@@@@@@@@@@@@@@@@F           MCI)EA EQU F(1)*$I DO 2,DO
)@@G@@F-1 , DO A[F(0)]F(I) ,A EQU F(I)*A END A@,C)0@@@]@@@[%@@@K@F#@!CG5@[%@@@DP
)@@G@@@@@@@[[C!@@@M@@@@@@@@@@@@@@@@@UF          M#^)SA EQU [UF(*1)->'*']UF(1)*DQ
)@@G@@GB EQU $BA(A)*FB(0) DELETE*9 DO B=1->B(1,2)->1!$TSTR(B(1,3))->\UF(*1)!0!DR
)@@G@@B>1 , END (A)*GB EQU $AP(A)*HM EQU 0777777*+ DO \(-1*/17<B<M->B<>-0) , EDS
)@@G@@ND (A)*PB $EQUF A,,B<0->15!14*A END B@$SL(C)M@@@]@@@]B@@@K@F#@JC @@]B@@@DT
)@@G@@@@@@@[[CJ@@@M@@@@@@@@@@@@@@@@@EVAL        MF&)T END VAL$($LEV-2,EVAL(1))DU
)@@G@@@I@I=@C)5@@@]@@@[9@@@K@F#@2C#U@[9@@@@@@@@[[C2@@@M@@@@@@@@@@@@@@@@@F     DV
)@@G@@      MB-)KFD EQU FLD(F(2))*LV EQU RV(F(1),FD)*GH EQU HB(FD)*GL EQU LB(FDW
)@@G@@D)*JB EQU $BA(F(1))%NI DO B-(B(0)>0) , DO (B(I,1)<=H)**(B(I,2)>=L) ,V EQDX
)@@G@@U V+($GFORM B(I,1)-B(I,2)+1,[B(I,*3)->'-'!'+'][$TBIN(B(I,3))->'$LCB'!'VADY
)@@G@@L$'](B(I,3)),B(I,2)-L,0)T^)A END V@BC)Q@@@]@@@[5@@@K@F#@NCAX@[5@@@@@@@@[DZ
)@@G@@[CN@@@M@@@@@@@@@@@@@@@@@F           MA3)XA EQU FLD(F(1)[F>2->',F(2)'])*MEA
)@@G@@ END HB(A)-LB(A)+1@@^B_VC)M@@@]@@@[;@@@K@F#@JCJ^@[;@@@@@@@@][CJ@@@M@@@@@EB
)@@G@@@@@@@@@@@@@@F           MB')U END UF([F(0)](F(1),F(2)))@<<',C)3@@@]@@@]FEC
)@@G@@@@@K@F#@0C 8@]F@@@@@@@@#[C0@@@M@@@@@@@@@@@@@@@@@F           MG;)LMODE $EED
)@@G@@QU $TMODES*B [F(0)]*KF(0) $EQU *'$CB'MG_)(S EQU [F(0)](F(F-1)[F(*0)->F=3EE
)@@G@@->',F(1)'])*W F(*0)->MODE**4->$OCTAL!$HEX*U $DO (F=2)++F(*0) , $END ST])EF
)@@G@@RFW EQU MAX($SL(S),F(1))*NS EQU $SR(' ',FW):S*U END $SS(S,$SL(S)+1-FW,FWEG
)@@G@@)@^E^SC)N@@@]@@@['@@@K@F#@KC@I@['@@@@@@@@#[CK@@@M@@@@@@@@@@@@@@@@@F     EH
)@@G@@      MB6)< END UF([F(0)](F(1)[F=3->',F(2)']))@OC)U@@@]@@@[0@@@K@F#@RCHDEI
)@@G@@@[0@@@@@@@@][CR@@@M@@@@@@@@@@@@@@@@@F           M I)EB EQU F(1)*CA EQU 'EJ
)@@G@@'*(I DO 25,0,-1 , DO B*/-I**1 ,A EQU A:'Z'-I*F END [F(0)]@@#C-^@@@]@]@]CEK
)@@G@@@@@K@BK@F@@@]-@C[+@]C@@@@@@@@][D@@]EM@@@@@@@@@]D@@@@@@F           MGI)LTEL
)@@G@@ EQU $TYPE(F(1))*S $DO T>4 , $GO TYPE56789*NS EQU F(*1)->'*'!''*HV EQU [EM
)@@G@@S]F(1)*JB EQU $IBITS(V)*K GO TYPE[$CD(T)]MGP)GA EQU $BA(V)*GV EQU $AP(V)EN
)@@G@@*MNRI EQU A-(A(0)>0)*: $DO NRI=0 , END S:[F(0)](V):(B**2->'D'!'')T]-)I DEO
)@@G@@O A-(A(0)>0) ,S EQU S:(A(I,*3)->'-'!I>1->'+'!''):($TSTR(A(I,3))->A(I,3)!EP
)@@G@@'$(':$CD(A(I,3)):')')T#0ES EQU S:((CC))@@@]@E@]D@@@K@HK@JK@PK@RK@XK@ZK@>EQ
)@@G@@K@$K@!K@\@@@#@S@@@@]D@@@@@@@@[@*S@@@TYPE1       ]@#@]C@]!@]CTYPE2       ER
)@@G@@]@#@]C@[I@]ETYPE3       ]@#@]C@[8@]ETYPE4       ]@#@]C@]?@]ETYPE56789   ES
)@@G@@]@#@]C@##@]EC)U@@@]@@@[3@@@K@F#@R@@@@[3@@@@@@@@[[CR@@@M@@@@@@@@@@@@@@@@@ET
)@@G@@F           M _-E END F=3->F(1)*/6+F(2)!F(1)<0100->J$F$(F(1)+(4<=F(1)<=7EU
)@@G@@->F(*1)*/5!0))!F(1)@':$CC)0@@@]@[@]E@@@K@B#@!@@@@]E@@@@@@@@[@)!@]D)(V<>0EV
)@@G@@)++F(*0)->(A(1)->'+'!''):$CB(V,6)!'')*D 1->END SMG))US EQU S:$CB(V,B**2-EW
)@@G@@>24!12)*D 1->END SMG<)\ 1->END S:ESTR(V):(B**2->'D'!''):(B**8->'L'!'')MGEX
)@@G@@>)M 1->$END S:$CD(+V)MG$-  END '">':$L1('NAME','PROC','FUNC','DIRECTIVE'EY
)@@G@@,'MASM FUNC')(T-4):'"&'@@@@___@@@___@@@___@@@___@@@___@@@___@@@___@@@___EZ
)@@G@@*[S@@@*SDFF*@[@@@@/.    @A@@@@.   TIDE$ PROCS TO HELP OUR FRIENDS.@[@@@@FA
)@@G@@.     @B@@@@.   TIDE$ DOCUMENTATION IN ELEMENT TIDE$  @[@@@@.     @B@@@@FB
)@@G@@P$        PROC      *2                .   @B@@@@T$IDE*    NAME      TIDEFC
)@@G@@$             .   @B@@@@          T$AD      A1,2              .   @D@@@@FD
)@@G@@T$IDER*   NAME      TIDER$            . REOPEN PACKET @B@@@@          T$FE
)@@G@@AD      A0,1              .   @D@@@@T$IDEX*   NAME      TIDEX$          FF
)@@G@@  . CLOSE PACKET  @B@@@@          LMJ       X11,P$(0,0)       .   @B@@@@FG
)@@G@@          END                         .   @[@@@@.     @B@@@@P$        PRFH
)@@G@@OC      *1                .   @E@@@@T$COL*    NAME      TCOL$           FI
)@@G@@  . SET COLUMN POINTER  @F@@@@T$COLN*   NAME      TCOLN$            . REFJ
)@@G@@TURN WITH COLUMNUMBER   @D@@@@T$SKIP*   NAME      TSKIP$            . SKFK
)@@G@@IP COLUMNS  @B@@@@          T$AD      A0,1              .   @B@@@@      FL
)@@G@@    LMJ       X11,P$(0,0)       .   @B@@@@          END                 FM
)@@G@@        .   @[@@@@.     @B@@@@P$        PROC      *2                .   FN
)@@G@@@E@@@@T$OCTV*   NAME      TOCTV$            . SP FREE FIELD OCTAL @E@@@@FO
)@@G@@T$OCTF*   NAME      TOCTF$            . SP FIXED FIELD OCTAL@E@@@@T$OCTVFP
)@@G@@D*  NAME      TOCTVD$           . DP FREE FIELD OCTAL @E@@@@T$OCTFD*  NAFQ
)@@G@@ME      TOCTFD$           . DP FIXED FIELD OCTAL@F@@@@T$DECV*   NAME    FR
)@@G@@  TDECV$            . SP FREE FIELD DECIMAL     @F@@@@T$DECF*   NAME    FS
)@@G@@  TDECF$            . SP FIXED FIELD DECIMAL    @F@@@@T$DECVD*  NAME    FT
)@@G@@  TDECVD$           . DP FREE FIELD DECIMAL     @F@@@@T$DECFD*  NAME    FU
)@@G@@  TDECFD$           . DP FIXED FIELD DECIMAL    @B@@@@          T$AD    FV
)@@G@@  A0,1              .   @B@@@@          T$AD      A1,2              .   FW
)@@G@@@B@@@@          LMJ       X11,P$(0,0)       .   @B@@@@          END     FX
)@@G@@                    .   @[@@@@.     @B@@@@P$        PROC      *2        FY
)@@G@@        .   @F@@@@T$INTV*   NAME      TINTV$            . SP FREE FIELD FZ
)@@G@@INTEGER     @F@@@@T$INTF*   NAME      TINTF$            . SP FIXED FIELDGA
)@@G@@ INTEGER    @F@@@@T$INTVD*  NAME      TINTVD$           . DP FREE FIELD GB
)@@G@@INTEGER     @F@@@@T$INTFD*  NAME      TINTFD$           . DP FIXED FIELDGC
)@@G@@ INTEGER    @B@@@@          T$AD      A0,1              .   @B@@@@      GD
)@@G@@    T$AH1     A0,0              .   @B@@@@          T$AD      A1,2      GE
)@@G@@        .   @B@@@@          LMJ       X11,P$(0,0)       .   @B@@@@      GF
)@@G@@    END                         .   @[@@@@.     @B@@@@P$        PROC    GG
)@@G@@  *2                .   @F@@@@T$FLOV*   NAME      TFLOV$            . SPGH
)@@G@@ FREE FIELD FLOATING    @F@@@@T$FLOF*   NAME      TFLOF$            . SPGI
)@@G@@ FIXED FIELD FLOATING   @F@@@@T$FLOVD*  NAME      TFLOVD$           . DPGJ
)@@G@@ FREE FIELD FLOATING    @F@@@@T$FLOFD*  NAME      TFLOFD$           . DPGK
)@@G@@ FIXED FIELD FLOATING   @B@@@@          T$AD      A0,1              .   GL
)@@G@@@B@@@@          T$AD      A1,2              .   @B@@@@          LMJ     GM
)@@G@@  X11,P$(0,0)       .   @B@@@@          END                         .   GN
)@@G@@@[@@@@/.    @]@@@@.   MORE    @[@@@@.     @B@@@@P$        PROC      *2  GO
)@@G@@              .   @F@@@@T$GENV*   NAME      TGENV$            . SP FREE GP
)@@G@@FIELD GENERAL     @F@@@@T$GENF*   NAME      TGENF$            . SP FIXEDGQ
)@@G@@ FIELD GENERAL    @H@@@@T$GNRV*   NAME      TGNRV$            . SP FREE GR
)@@G@@FIELD GENERAL (RESTRICTED)    @H@@@@T$GNRF*   NAME      TGNRF$          GS
)@@G@@  . SP FIXED FIELD GENERAL (RESTRICTED)   @B@@@@          T$AD      A0,1GT
)@@G@@              .   @B@@@@          T$AH1     A0,0              .   @B@@@@GU
)@@G@@          T$AD      A1,2              .   @B@@@@          LMJ       X11,GV
)@@G@@P$(0,0)       .   @B@@@@          END                         .   @[@@@@GW
)@@G@@.     @ @@@@.   REENTER ALPHA ROUTINES    @[@@@@.     @B@@@@P$        PRGX
)@@G@@OC      *1                .   @B@@@@T$SCNRF*  NAME      TSCNRF$         GY
)@@G@@  .   @B@@@@          T$AD      A1,1              .   @B@@@@T$SCNRV*  NAGZ
)@@G@@ME      TSCNRV$           .   @B@@@@          LMJ       X11,P$(0,0)     HA
)@@G@@  .   @B@@@@          END                         .   @[@@@@.     @ @@@@HB
)@@G@@.   REINITIALIZE POINTERS     @[@@@@.     @B@@@@P$        PROC      *1  HC
)@@G@@              .   @B@@@@T$CLR*    NAME                        .   @B@@@@HD
)@@G@@          T$AD      A1,1              .   @B@@@@          LMJ       X11,HE
)@@G@@TCLR$         .   @B@@@@          END                         .   @[@@@@HF
)@@G@@.     @#@@@@.   MASK ROUTINE  @[@@@@.     @B@@@@P$        PROC      *1  HG
)@@G@@              .   @E@@@@T$MASK*   NAME      TMASK$            . UP TO 12HH
)@@G@@ CHARS, RJZF@C@@@@          T$ADD     A0,1              . IF ANY  @B@@@@HI
)@@G@@          LMJ       X11,TMASK$        .   @B@@@@          END           HJ
)@@G@@              .   @B@@@@/         DEF                         .   @[@@@@HK
)@@G@@.     @A@@@@.   INTERNAL PACKET DEFINITIONS     @[@@@@.     @D@@@@XP    HL
)@@G@@    EQU       04                . PACKET POINTER@E@@@@XC        EQU     HM
)@@G@@  05                . CHARACTER POINTER   @D@@@@XW        EQU       06  HN
)@@G@@              . WORD POINTER  @E@@@@XA        EQU       07              HO
)@@G@@  . ASCII PACKET POINTER@[@@@@.     @E@@@@TPKT      EQUF      0,XP      HP
)@@G@@        . PACKET LOCATION     @E@@@@IC        EQUF      0,XC            HQ
)@@G@@  . CHARACTER INDEX     @D@@@@IW        EQUF      0,XW              . WOHR
)@@G@@RD INDEX    @[@@@@.     @G@@@@BLK       EQUF      TPKT,,S2          . USHS
)@@G@@ER DEFINED - HANDLE BLANKS    @D@@@@BUFLNG    EQUF      TPKT,,S3        HT
)@@G@@  . BUFFER LENGTH @D@@@@BUFADR    EQUF      TPKT,,H2          . BUFFER AHU
)@@G@@DDRESS@[@@@@.     @F@@@@MSK       EQU       TPKT+1            . 2 WORD BHV
)@@G@@REAK CHAR MASK    @[@@@@.     @G@@@@FDA       EQUF      TPKT+3,,H1      HW
)@@G@@  . ADDR OF ASCII TO FIELDATA TABLE @E@@@@BUFEND    EQUF      TPKT+3,,H2HX
)@@G@@        . LAST WORD OF BUFFER @[@@@@.     @E@@@@SAVEX11   EQUF      TPKTHY
)@@G@@+4,,H1        . SAVE AREA FOR X11   @E@@@@SXP       EQUF      TPKT+4,,H2HZ
)@@G@@        . SAVE AREA FOR XP    @[@@@@.     @E@@@@SXC       EQU       TPKTIA
)@@G@@+5            . SAVE AREA FOR XC    @E@@@@SXW       EQU       TPKT+6    IB
)@@G@@        . SAVE AREA FOR XW    @[@@@@.     @D@@@@FLAGS     EQU       TPKTIC
)@@G@@+7            . INITIAL CLEAR @E@@@@EXP       EQUF      FLAGS,,S1       ID
)@@G@@  . EXPONENT CHARACTER  @E@@@@DIGITS    EQUF      FLAGS,,S2         . SEIE
)@@G@@EN SOME DIGITS    @F@@@@SIGNIF    EQUF      FLAGS,,S3         . SIGNIFICIF
)@@G@@ANT DIGIT FLAG    @F@@@@XSIGNIF   EQUF      FLAGS,,S4         . EXCESSIGIG
)@@G@@NIFICANCE FLAG    @G@@@@NPL       EQUF      FLAGS,,S5         . DIGITS TIH
)@@G@@O RIGHT OF DECIMAL POINT@E@@@@SIGN      EQUF      FLAGS,,S6         . SIII
)@@G@@GN OF MANTISSA    @[@@@@/.    @ @@@@.   MORE PACKET DEFINITIONS   @[@@@@IJ
)@@G@@.     @D@@@@OCTINT    EQUF      TPKT+8,,H1        . INTEGER FLAGS @E@@@@IK
)@@G@@GENINT    EQUF      TPKT+8,,S1        . GENERAL INTEGER SCAN@D@@@@INTEGEIL
)@@G@@R   EQUF      TPKT+8,,S2        . INTEGER FLAG  @D@@@@OCTAL     EQUF    IM
)@@G@@  TPKT+8,,S3        . OCTAL FLAG    @F@@@@RGENERAL  EQUF      TPKT+8,,XHIN
)@@G@@2       . RESTRICTED GENERAL FLAG   @E@@@@GENERAL   EQUF      TPKT+8,,S4IO
)@@G@@        . GENERAL SCAN FLAG   @E@@@@MODE      EQUF      TPKT+8,,S5      IP
)@@G@@  . MODE OF VARIABLE    @E@@@@EXPSIGN   EQUF      TPKT+8,,S6        . SIIQ
)@@G@@GN OF EXPONENT    @[@@@@.     @E@@@@ALPHA     EQUF      TPKT+9,,S1      IR
)@@G@@  . CONTINUED ALPHA MODE@G@@@@DAL       EQUF      TPKT+9,,S2        . USIS
)@@G@@ER DEFINED - DOUBLE ALPHA MODE@E@@@@EXPOCTAL  EQUF      TPKT+9,,S3      IT
)@@G@@  . SAVED OCTAL MODE    @E@@@@DL1       EQUF      TPKT+9,,S4        . 1SIU
)@@G@@T USER DELIMITER  @E@@@@DL2       EQUF      TPKT+9,,S5        . 2ND USERIV
)@@G@@ DELIMITER  @F@@@@GOC       EQUF      TPKT+9,,S6        . GENERAL INTEGEIW
)@@G@@R OCTAL FLAG@[@@@@.     @E@@@@SAVEA6    EQU       TPKT+10           . SAIX
)@@G@@VE AREA FOR A6,A7 @[@@@@.     @D@@@@EXPSAVE   EQU       TPKT+12         IY
)@@G@@  . SAVE MANTISSA @D@@@@OURDLM    EQU       TPKT+12           . FD DELIMIZ
)@@G@@ITER  @F@@@@ALNEXT    EQU       TPKT+13           . NEXT CHARACTER TO STJA
)@@G@@ORE   @D@@@@ASCNEXT   EQUF      ALNEXT,,H1        . ASCII CHAR    @[@@@@JB
)@@G@@.     @D@@@@INTFRC    EQUF      TPKT+14,,S1       . FRACTION FLAG @E@@@@JC
)@@G@@NLG       EQUF      TPKT+14,,S2       . NAME CHAR COUNT     @F@@@@DOUBLEJD
)@@G@@    EQUF      TPKT+14,,S3       . DOUBLE PRECISION FLAG     @E@@@@ASC   JE
)@@G@@    EQUF      TPKT+14,,S4       . IF 1 - IN ASCII MODE@F@@@@ASO       EQJF
)@@G@@UF      TPKT+14,,S5       . IF 1 - ASCII OUTPUT MODE  @D@@@@REN       EQJG
)@@G@@UF      TPKT+14,,S6       . REENTRY MASK  @[@@@@.     @B@@@@TEXIT1    EQJH
)@@G@@U       TPKT+15           .   @E@@@@ENDXIT    EQUF      TEXIT1,,H1      JI
)@@G@@  . ENDOFCARD RETURN    @D@@@@ERRXIT    EQUF      TEXIT1,,H2        . ERJJ
)@@G@@RORETURN    @B@@@@TEXIT2    EQU       TPKT+16           .   @E@@@@BRKXITJK
)@@G@@    EQUF      TEXIT2,,H1        . BREAKARACTER RETURN @D@@@@RENXIT    EQJL
)@@G@@UF      TEXIT2,,H2        . REENTRY RETURN@[@@@@.     @E@@@@SXA       EQJM
)@@G@@UF      TPKT+17           . SAVE AREA FOR XA    @[@@@@.     @F@@@@SAVEA0JN
)@@G@@    EQU       TPKT+18           . SAVE AREA FOR A0 (ENTIRE) @D@@@@PTWD  JO
)@@G@@    EQUF      TPKT+18,,H1       . PARTWORD SAVE @E@@@@ADDR      EQUF    JP
)@@G@@  TPKT+18,,H2       . VARIABLE ADDRESS    @[@@@@.     @D@@@@SAVEXW    EQJQ
)@@G@@UF      TPKT+19,,H1       . POINTER SAVES @F@@@@GENAME    EQU       TPKTJR
)@@G@@+19,,H2       . LINK TO ALPHA ROUTINE     @C@@@@SAVER1    EQUF      TPKTJS
)@@G@@+20,,H1       . RESCANS @E@@@@SAVEXC    EQUF      TPKT+20,,H2       . FOJT
)@@G@@R DECIMAL RESCANS @[@@@@.     @E@@@@MK1       EQU       TPKT+21         JU
)@@G@@  . GOOD NAME CHAR MASK @E@@@@MK2       EQU       TPKT+23           . GOJV
)@@G@@OD NAME CHAR MASK @[@@@@.     @C@@@@T$DEF*    PROC      *0,0            JW
)@@G@@  . FOR US  @G@@@@.         TYPE      TYPE$REP          . OUR GUARANTEE:JX
)@@G@@ NO IBANK STORES  @C@@@@. **** TYPE$REP IS DEACTIVATED FOR DISTAPES ****JY
)@@G@@@B@@@@          END                         .   @[@@@@/.    @A@@@@.   EXJZ
)@@G@@TERNAL PACKET DEFINITIONS     @[@@@@.     @F@@@@P$        PROC      *1,0KA
)@@G@@              . GET ADDRESS OF PACKET     @B@@@@T$FIELDS* NAME          KB
)@@G@@              .   @[@@@@.     @H@@@@TPKT      EQUF      +(I$ 0,0,0,P$(1,KC
)@@G@@2),P$(1,*1),P$(1,1)) . DEFINE ADDRESS     @[@@@@.     @G@@@@BLK*      EQKD
)@@G@@UF      TPKT,,S2          . USER DEFINED - HANDLE BLANKS    @D@@@@BUFLNGKE
)@@G@@*   EQUF      TPKT,,S3          . BUFFER LENGTH @D@@@@BUFADR*   EQUF    KF
)@@G@@  TPKT,,H2          . BUFFER ADDRESS@F@@@@MSK*      EQU       TPKT+1    KG
)@@G@@        . 2 WORD BREAK CHAR MASK    @G@@@@FDA*      EQUF      TPKT+3,,H1KH
)@@G@@        . ADDR OF ASCII TO FIELDATA TABLE @G@@@@DAL*      EQUF      TPKTKI
)@@G@@+9,,S2        . USER DEFINED - DOUBLE ALPHA MODE@E@@@@DL1*      EQUF    KJ
)@@G@@  TPKT+9,,S4        . 1ST USER DELIMITER  @E@@@@DL2*      EQUF      TPKTKK
)@@G@@+9,,S5        . 2ND USER DELIMITER  @F@@@@GOC*      EQUF      TPKT+9,,S6KL
)@@G@@        . GENERAL INTEGER OCTAL FLAG@D@@@@INTFRC*   EQUF      TPKT+14,,SKM
)@@G@@1       . FRACTION FLAG @E@@@@NLG*      EQUF      TPKT+14,,S2       . NAKN
)@@G@@ME CHAR COUNT     @E@@@@ASC*      EQUF      TPKT+14,,S4       . IF 1 - IKO
)@@G@@N ASCII MODE@F@@@@ASO*      EQUF      TPKT+14,,S5       . IF 1 - ASCII OKP
)@@G@@UTPUT MODE  @D@@@@REN*      EQUF      TPKT+14,,S6       . REENTRY MASK  KQ
)@@G@@@B@@@@TEXIT1    EQU       TPKT+15           .   @E@@@@ENDXIT*   EQUF    KR
)@@G@@  TEXIT1,,H1        . ENDOFCARD RETURN    @D@@@@ERRXIT*   EQUF      TEXIKS
)@@G@@T1,,H2        . ERRORETURN    @B@@@@TEXIT2    EQU       TPKT+16         KT
)@@G@@  .   @E@@@@BRKXIT*   EQUF      TEXIT2,,H1        . BREAKARACTER RETURN KU
)@@G@@@D@@@@RENXIT*   EQUF      TEXIT2,,H2        . REENTRY RETURN@E@@@@MK1*  KV
)@@G@@    EQU       TPKT+21           . GOOD NAME CHAR MASK @E@@@@MK2*      EQKW
)@@G@@U       TPKT+23           . GOOD NAME CHAR MASK @ @@@@ DO P$(0,1)=0 , ENKX
)@@G@@D . ALL DONE@E@@@@MODE*     EQUF      TPKT+8,,S5        . MODE OF VARIABKY
)@@G@@LE    @E@@@@ALPHA*    EQUF      TPKT+9,,S1        . CONTINUED ALPHA MODEKZ
)@@G@@@B@@@@          END                         .   @B@@@@/         DEF     LA
)@@G@@                    .   @[@@@@.     @B@@@@.   PROCS AND EQU'S USED BY TILB
)@@G@@DE$ ELEMENTS@[@@@@.     @]@@@@.   MODES   @[@@@@.     @F@@@@SP        EQLC
)@@G@@U       1                 . SINGLE PRECISION FLOATING @F@@@@DP        EQLD
)@@G@@U       2                 . DOUBLE PRECISION FLOATING @E@@@@DEC       EQLE
)@@G@@U       3                 . SP DECIMAL INTEGER  @E@@@@DDEC      EQU     LF
)@@G@@  4                 . DP DECIMAL INTEGER  @E@@@@OCT       EQU       5   LG
)@@G@@              . SP OCTAL INTEGER    @E@@@@DOCT      EQU       6         LH
)@@G@@        . DP OCTAL INTEGER    @F@@@@ALPH      EQU       7               LI
)@@G@@  . SP INTEGER ALPHANUMERIC   @F@@@@DALPH     EQU       8               LJ
)@@G@@  . DP INTEGER ALPHANUMERIC   @G@@@@ASALPH    EQU       9               LK
)@@G@@  . SP INTEGER ALPHANUMERIC (ASCII) @G@@@@ASDALPH   EQU       10        LL
)@@G@@        . DP INTEGER ALPHANUMERIC (ASCII) @F@@@@NAME      EQU       11  LM
)@@G@@              . GENERAL MODE NAME-LABEL   @[@@@@.     @D@@@@.   ALLOWABLLN
)@@G@@E RANGES OF MAGNITUDE AND SIGNIFICANCE    @[@@@@.     @D@@@@LO(SP)    EQLO
)@@G@@U       -37               . 10**-38 + 1   @F@@@@DG(SP)    EQU       8   LP
)@@G@@              . 8 DIGITS OF SIGNIFICANCE  @D@@@@HI(SP)    EQU       38  LQ
)@@G@@              . 10**+37 + 1   @[@@@@.     @B@@@@LO(DP)    EQU       -307LR
)@@G@@              .   @B@@@@DG(DP)    EQU       20                .   @B@@@@LS
)@@G@@HI(DP)    EQU       308               .   @[@@@@.     @B@@@@LO(DEC)   EQLT
)@@G@@U       0                 .   @B@@@@DG(DEC)   EQU       11              LU
)@@G@@  .   @B@@@@HI(DEC)   EQU       11                .   @[@@@@.     @B@@@@LV
)@@G@@LO(DDEC)  EQU       0                 .   @B@@@@DG(DDEC)  EQU       20  LW
)@@G@@              .   @B@@@@HI(DDEC)  EQU       20                .   @[@@@@LX
)@@G@@.     @B@@@@LO(OCT)   EQU       0                 .   @B@@@@DG(OCT)   EQLY
)@@G@@U       12                .   @B@@@@HI(OCT)   EQU       12              LZ
)@@G@@  .   @[@@@@.     @B@@@@LO(DOCT)  EQU       0                 .   @B@@@@MA
)@@G@@DG(DOCT)  EQU       24                .   @B@@@@HI(DOCT)  EQU       24  MB
)@@G@@              .   @[@@@@/.    @ @@@@.   ERROR TYPES - FOUND IN A1 @[@@@@MC
)@@G@@.     @E@@@@ERRCHAR   EQU       1                 . ILLEGAL CHARACTER   MD
)@@G@@@E@@@@ERROCT    EQU       2                 . ILLEGAL OCTAL DIGIT @E@@@@ME
)@@G@@ERRINT    EQU       3                 . INTEGER OVERFLOW    @D@@@@ERRSPOMF
)@@G@@    EQU       4                 . S.P. OVERFLOW @D@@@@ERRSPU    EQU     MG
)@@G@@  5                 . S.P. UNDERFLOW@D@@@@ERRDPO    EQU       6         MH
)@@G@@        . D.P. OVERFLOW @D@@@@ERRDPU    EQU       7                 . D.MI
)@@G@@P. UNDERFLOW@G@@@@ERRALPH   EQU       8                 . ALPHANUMERICONMJ
)@@G@@FUSION (DELIMETER)@G@@@@ERRALCONT EQU       9                 . BAD MODEMK
)@@G@@ FOR CONTINUED ALPHA    @[@@@@.     @B@@@@INDEX     EQU       T$INDEX$  ML
)@@G@@        .   @C@@@@ONEZERO   EQU       INDEX             . (1,0)   @C@@@@MM
)@@G@@ONEPUT    EQU       INDEX+1           . (1,PUT) @C@@@@ONEGET    EQU     MN
)@@G@@  INDEX+3           . (1,GET) @D@@@@ZEROCNT   EQUF      INDEX+5,,H1     MO
)@@G@@  . POINTER STUFF @B@@@@ACOUNT    EQUF      INDEX+5,,H2       .   @B@@@@MP
)@@G@@ZERO      EQU       INDEX+7           .   @D@@@@T$PROC*   PROC          MQ
)@@G@@              . THE GOOD STUFF@[@@@@.     @[@@@@.     @^@@@@.   SOME PROMR
)@@G@@CS FOR US   @[@@@@.     @[@@@@.     @ @@@@.   R3 CONTAINS 1. STORE IT   MS
)@@G@@@[@@@@.     @B@@@@P$        PROC      *1,1              .   @C@@@@SNZ** MT
)@@G@@    NAME      0                 . ENTRY   @H@@@@          SR,P$(1,3)  R3MU
)@@G@@,+(I$ 0,0,0,P$(1,2),2*P$(1,*2)+P$(1,*1),P$(1,1))  .   @B@@@@          ENMV
)@@G@@D                         .   @[@@@@.     @C@@@@.   GRAB A MASK, SEE IF MW
)@@G@@A3 IS A BREAK CHARACTER.@[@@@@.     @B@@@@P$        PROC      *1,3      MX
)@@G@@        .   @C@@@@NBREAK**  NAME      010               . JNB     @B@@@@MY
)@@G@@BREAK**   NAME      011               . JB@C@@@@          DL        P$(1MZ
)@@G@@,1),P$(1,2)   . GET MASK@E@@@@          DSL       P$(1,1),0,A3      . GENA
)@@G@@T CHARACTER BIT   @F@@@@          I$        074,P$(0,0),P$(1,1)-11,P$(1,NB
)@@G@@4),0,P$(1,3) .    @B@@@@          END                         .   @[@@@@NC
)@@G@@.     @ @@@@.   GENERATE A JUMP TABLE     @[@@@@.     @B@@@@P$        PRND
)@@G@@OC      *72,36            .   @B@@@@GENTBL**  NAME      0               NE
)@@G@@  .   @D@@@@I DO 72 ,NYERP(I) EQU P$(0,1)         . INITIALIZE    @F@@@@NF
)@@G@@I DO P$-1 ,J DO P$(I)-1 ,NYERP(P$(I,J)+1) EQU P$(I,P$(I)) . FILL  @D@@@@NG
)@@G@@I DO 36 , + NYERP(I),NYERP(I+36)      . BUILD TABLE   @B@@@@          ENNH
)@@G@@D                         .   @[@@@@/.    @A@@@@.   GRAB A CHARACTER FRONI
)@@G@@M THE BUFFER@[@@@@.     @B@@@@P$        PROC      *1                .   NJ
)@@G@@@B@@@@GRAB**    NAME      0                 .   @D@@@@          EX      NK
)@@G@@  0,*XC             . GET CHARACTER @D@@@@  DO P$>1 , JN  A3,+(E$AD 1,1)NL
)@@G@@        . EOCARD RETURN @F@@@@          AX        X11,ONEZERO       . INNM
)@@G@@CREMENT CHAR COUNTER    @B@@@@          END                         .   NN
)@@G@@@[@@@@.     @B@@@@.   STORE A CHARACTER (ALPHANUMERICALLY)  @[@@@@.     NO
)@@G@@@B@@@@P$        PROC      *0,1              .   @B@@@@STUFF**   NAME    NP
)@@G@@  0                 .   @E@@@@          EX        0,*A1             . INNQ
)@@G@@SERT CHARACTER    @B@@@@          END                         .   @[@@@@NR
)@@G@@.     @A@@@@.   ERROR PROC. JUMP TO RIGHT STUFF @[@@@@.     @B@@@@P$    NS
)@@G@@    PROC      *1,1              .   @B@@@@ERR**     NAME      0         NT
)@@G@@        .   @G@@@@          I$        072,010,P$(1,1),0,0,T$ERROR$ . EX NU
)@@G@@(LMJ A1,ERROR)    @B@@@@          END                         .   @B@@@@NV
)@@G@@          END                         .   @[@@@@.     @D@@@@.   TIDE$N ENW
)@@G@@NTRY POINTS USED BY OTHER TIDE$ ELEMENTS  @[@@@@.     @B@@@@          DENX
)@@G@@F                         .   @B@@@@SETUP     EQU       T$SETUP$        NY
)@@G@@  .   @B@@@@SETUP1    EQU       T$SETUP1$         .   @B@@@@SCAN      EQNZ
)@@G@@U       T$SCAN$           .   @B@@@@SCAN1     EQU       T$SCAN1$        OA
)@@G@@  .   @B@@@@RETURN    EQU       T$RETURN$         .   @B@@@@RETURN0   EQOB
)@@G@@U       T$RETURN0$        .   @B@@@@RETURN1   EQU       T$RETURN1$      OC
)@@G@@  .   @[@@@@.     @B@@@@T$ENTRY*  PROC      *0,0              .   @B@@@@OD
)@@G@@          END                         .   @[@@@@.     @^@@@@.   PACKET GOE
)@@G@@ENERATION   @[@@@@.     @B@@@@P$        PROC      *18               .   OF
)@@G@@@F@@@@T$PKTGN*  NAME      2                 . GENERAL MODE WITH NAMES   OG
)@@G@@@D@@@@GENAME    EQU       T$TSCAN0$         . HOT STUFF!!!  @D@@@@T$PKTGOH
)@@G@@*   NAME      1                 . GENERAL MODE  @C@@@@T$PKT*    NAME    OI
)@@G@@  0                 . ALL ELSE@D@@@@ DO P$(0,0)<2 ,GENAME EQU 0         OJ
)@@G@@  . WHEEZE...     @[@@@@/.    @ @@@@.   MORE PACKET GENERATION    @[@@@@OK
)@@G@@.     @D@@@@A('BLK')  EQU       1                 . BLANK FLAG    @D@@@@OL
)@@G@@A('MSK')  EQU       1D*/','           . COMMA ONLY    @D@@@@A('DAL')  EQOM
)@@G@@U       0                 . DALPHA FLAG   @D@@@@A('DL1')  EQU       ''''ON
)@@G@@              . 1ST DELIM     @C@@@@A('DL2')  EQU       '$'             OO
)@@G@@  . 2ND     @E@@@@A('GOC')  EQU       0                 . GENINT OCTAL FOP
)@@G@@LAG   @D@@@@A('FRC')  EQU       0                 . FRACTION FLAG @D@@@@OQ
)@@G@@A('NLG')  EQU       12                . MAX LABELENGTH@E@@@@A('ASC')  EQOR
)@@G@@U       0                 . ASCII MODE FLAG     @E@@@@A('ASO')  EQU     OS
)@@G@@  0                 . ASCII OUTPUT FLAG   @E@@@@A('REN')  EQU       0   OT
)@@G@@              . ASCII REENTER FLAG  @C@@@@A('END')  EQU       0         OU
)@@G@@        . ENDXIT  @C@@@@A('ERR')  EQU       0                 . ERRXIT  OV
)@@G@@@C@@@@A('BRX')  EQU       0                 . BRKXIT  @C@@@@A('RNX')  EQOW
)@@G@@U       0                 . RENXIT  @D@@@@A('FDA')  EQU       0         OX
)@@G@@        . TABLE ADDR    @E@@@@A('MK1')  EQU       000000000037777777700DOY
)@@G@@ . 1ST NAME MASK  @E@@@@A('MK2')  EQU       017770010037777777700D . 2NDOZ
)@@G@@ NAME MASK  @D@@@@I DO P$-1 ,A(P$(I,1)) EQU P$(I,2)     . FILL FLAGS    PA
)@@G@@@B@@@@F4        FORM      6,6,6,18          .   @G@@@@          F4      PB
)@@G@@  0,A('BLK'),P$(1,1),P$(1,2) . TS,BLANKS,BUFLNG,BUFADR@D@@@@          + PC
)@@G@@        A('MSK')          . BREAKMASK     @E@@@@          +         A('FPD
)@@G@@DA'),0        . TABLE-ADDR,BUFEND   @D@@@@          +         0,0       PE
)@@G@@        . SAVX11,SXP    @C@@@@          +         0                 . SXPF
)@@G@@C     @C@@@@          +         0                 . SXW     @E@@@@      PG
)@@G@@    +         0,0,0,0,0,0       . EXP,EXPOCTAL,EXPSIGN@E@@@@            PH
)@@G@@                          . SIGN,DOUBLE,GENERAL @E@@@@          +       PI
)@@G@@  0,0,0,0,0,0       . GENINT,INTEGER,OCTAL@H@@@@          +         0,A(PJ
)@@G@@'DAL'),0,A('DL1'),A('DL2'),A('GOC') . ALPHA,DAL,MODE  @D@@@@            PK
)@@G@@                          . DL1,DL2,GOC   @E@@@@          +         0   PL
)@@G@@              . SAVE AREA FOR A6    @E@@@@          +         0         PM
)@@G@@        . SAVE AREA FOR A7    @E@@@@          +         0,0             PN
)@@G@@  . EXPSAVE (OURDLM)    @C@@@@          +         0,0               . ALPO
)@@G@@NEXT  @E@@@@NLG       EQU       A('NLG')*(P$(0,0)=2) . NLG NEEDS T$PKTGNPP
)@@G@@@F@@@@          +         A('FRC'),NLG,0,A('ASC'),A('ASO'),A('REN') .   PQ
)@@G@@@D@@@@          +         A('END'),A('ERR') . ENDXIT,ERRXIT @D@@@@      PR
)@@G@@    +         A('BRX'),A('RNX') . BRKXIT,RENXIT @C@@@@          +       PS
)@@G@@  0                 . SXA     @D@@@@          +         0,0             PT
)@@G@@  . PTWD,ADDR     @B@@@@ DO P$(0,0)=0 ,     END               .   @D@@@@PU
)@@G@@          +         0,GENAME          . SAVEXW,GENAME @E@@@@          + PV
)@@G@@        0,0               . GENERAL GOODIES     @B@@@@ DO P$(0,0)=1 ,   PW
)@@G@@  END               .   @C@@@@          +         A('MK1')          . MAPX
)@@G@@SK    @C@@@@          +         A('MK2')          . MASK    @B@@@@      PY
)@@G@@    END                         .   @[@@@@/.    @^@@@@.   SCANNING ROUTIPZ
)@@G@@NES   @[@@@@.     @B@@@@P$        PROC      *4                .   @D@@@@QA
)@@G@@T$SCANV*  NAME      TSCANV$           . FREE FIELD    @C@@@@T$SCANF*  NAQB
)@@G@@ME      TSCANF$           . FIXED   @C@@@@T$NBRKV*  NAME      TNBRKV$   QC
)@@G@@        . FREE    @C@@@@T$NBRKF*  NAME      TNBRKF$           . FIXED   QD
)@@G@@@[@@@@.     @E@@@@          T$AD      A0,1              . VARIABLE ADDREQE
)@@G@@SS    @C@@@@          T$AH1     A0,0              . PARTWD? @C@@@@      QF
)@@G@@    T$ADD     A2,2              . MASK    @C@@@@          T$AD      A1,3QG
)@@G@@              . LENGTH  @C@@@@          LMJ       X11,P$(0,0)       . GOQH
)@@G@@ DO IT@B@@@@          END                         .   @[@@@@.     @^@@@@QI
)@@G@@.   ADDRESSINGOODIES    @[@@@@.     @B@@@@J$        PROC      *1        QJ
)@@G@@        .   @E@@@@T$AD*     NAME      0                 . SINGLE PRECISIQK
)@@G@@ON    @E@@@@T$ADD*    NAME      1                 . DOUBLE PRECISION    QL
)@@G@@@D@@@@T$AH1*    NAME      2                 . XI PART OF A  @[@@@@.     QM
)@@G@@@A@@@@.   GENERALIZED ADDRESSING THING    @[@@@@.     @B@@@@J$AD*     PRQN
)@@G@@OC                        .   @G@@@@ DO P$(F)>1 , I$    0,0,0,P$(F,2),2*QO
)@@G@@P$(F,*2)+P$(F,*1),P$(F,1) . DO IT   @C@@@@ DO P$(F)=1 , + 0,P$(F,1)     QP
)@@G@@        . SHORT   @B@@@@          END                         .   @[@@@@QQ
)@@G@@.     @C@@@@F         EQU       J$(1,2)           . FIELD   @B@@@@ DO P$QR
)@@G@@<F+1 , END                      .   @D@@@@A         EQU       J$(1,1)   QS
)@@G@@        . A REGISTER    @D@@@@J         EQU       P$(F,3)           . J QT
)@@G@@DESIGNATOR  @E@@@@NOJAY     EQU       P$(F)<3           . IS THERE A J-FQU
)@@G@@IELD? @C@@@@ DO J$(0,0)=0 , L,XU*NOJAY+J  A,+(J$AD 1) .     @A@@@@ DO J$QV
)@@G@@(0,0)=1 , DL  A,+(J$AD 1)  .  @E@@@@ DO J$(0,0)=2 , DO P$(0)>1 , LXI,XU*QW
)@@G@@NOJAY+J  A,+(J$AD 1) .  @B@@@@          END                         .   QX
)@@G@@@[@@@@/.    @B@@@@.   EXTRA TIDE$ PROCS TO EASE THE PAIN    @[@@@@.     QY
)@@G@@@A@@@@.   TO GRAB THE NEXT CHARACTER:     @[@@@@.     @H@@@@.   T$CHAR  QZ
)@@G@@        EOC-RETURN        . MOVES THE POINTER TO NEXT CHARACTER   @[@@@@RA
)@@G@@.     @I@@@@.   T$CHARN         EOC-RETURN        . LEAVES POINTER AT CHRB
)@@G@@ARACTER JUST GRABBED    @[@@@@.     @A@@@@.         CHARACTER RETURNS INRC
)@@G@@ A3.  @E@@@@.         IF A3 IS NEGATIVE, END OF CARD WAS ENCOUNTERED    RD
)@@G@@@A@@@@.         EOC-RETURN IS OPTIONAL    @[@@@@.     @F@@@@.   ASCII CHRE
)@@G@@ARACTER (IF ANY) IN A2 AND INCREMENT PORTION OF A3.   @[@@@@.     @[@@@@RF
)@@G@@.     @B@@@@P$        PROC      *1                .   @E@@@@T$CHAR*   NARG
)@@G@@ME      2                 . INCREMENT POINTER   @C@@@@T$CHARN*  NAME    RH
)@@G@@  0                 . DON'T   @E@@@@XC        EQU       X5              RI
)@@G@@  . CHARACTER POINTER   @H@@@@          I$        072,010,0,XC,P$(0,0),0RJ
)@@G@@+((P$(0,0)=0)*T$CHARNL$) . GRAB IT  @B@@@@ DO P$>1 , JN       A3,+(E$AD RK
)@@G@@1,1)    .   @B@@@@          END                         .   @[@@@@.     RL
)@@G@@@A@@@@.   FIND THE NEXT (NON) CHARACTER   @[@@@@.     @F@@@@. THE OLD DERM
)@@G@@FINITION OF TFIND$, ETC. FOLLOWS FOR POSTERITY'S SAKE.@A@@@@. THE NEW DERN
)@@G@@FINITION IS BELOW THAT. @[@@@@.     @B@@@@. P$        PROC      *2      RO
)@@G@@          . @B@@@@. T$FINDA*  NAME      062               . @B@@@@. T$NFRP
)@@G@@INDA* NAME      063               . @B@@@@. T$FIND*   NAME      052     RQ
)@@G@@          . @B@@@@. T$NFIND*  NAME      053               . @B@@@@. A   RR
)@@G@@      EQU       P$(0,0)>055       . @B@@@@. F         EQU       P$(0,0)-RS
)@@G@@(010*A)   . @E@@@@. XC        EQU       X5                . CHARACTER PORT
)@@G@@INTER @E@@@@. TPKT      EQUF      0,X4              . PACKET LOCATION   RU
)@@G@@@E@@@@. ENDXIT    EQUF      TPKT+15,,H1       . ENDOF CARD RETURN @D@@@@RV
)@@G@@.  DO P$<3 , LX       X11,ENDXIT        . DEFAULT     @B@@@@. GLOM      RW
)@@G@@EX        0,*XC             . @D@@@@.           JN        A3,+(E$AD 2,1)RX
)@@G@@,(P$<3)*X11 .     @D@@@@.  DO A ,   LA,U      A3,,A3            . FD PARRY
)@@G@@T     @G@@@@.           I$        F,U*(P$(1)<3)+P$(1,3),A3-A0,0,0,0+(E$ARZ
)@@G@@D 1,1) .    @B@@@@.           J         GLOM              . @B@@@@.     SA
)@@G@@      END                         . @[@@@@.     @D@@@@. THIS IS THE NEW SB
)@@G@@DEFINITION OF THE TFIND$ GROUP.     @[@@@@.     @^@@@@P$        PROC    SC
)@@G@@  *2  @ @@@@T$FIND*   NAME      TFIND$    @ @@@@T$NFIND*  NAME      TNFISD
)@@G@@ND$   @ @@@@T$FINDA*  NAME      TFINDA$   @ @@@@T$NFINDA* NAME      TNFISE
)@@G@@NDA$  @ @@@@T$SEEK*   NAME      TSEEK$    @ @@@@T$NSEEK*  NAME      TNSESF
)@@G@@EK$   @ @@@@T$SEEKA*  NAME      TSEEKA$   @ @@@@T$NSEEKA* NAME      TNSESG
)@@G@@EKA$  @[@@@@.     @D@@@@ DO P$>1 , LA       A0,+(E$AD 1,1 U)  . GET THE SH
)@@G@@CHAR  @E@@@@          LMJ       X11,P$(0,0)       . CALL THE ROUTINE    SI
)@@G@@@D@@@@ DO P$>2 , JN       A3,+(E$AD 2,1)    . CHECK FOR EOC @#@@@@      SJ
)@@G@@    END     @[@@@@/.    @^@@@@.   MASK GENERATING PROC@E@@@@.   IDEA SORSK
)@@G@@T OF STOLEN FROM KERN SIBBALD AND BERT HYMAN.   @[@@@@.     @E@@@@.   THSL
)@@G@@IS PROC GENERATES A LEFT OR RIGHT JUSTIFIED BIT MASK  @B@@@@.   CORRESPOSM
)@@G@@NDING TO THE FIELDATA CODE.   @[@@@@.     @E@@@@.         T$MASKR   'THISN
)@@G@@NGS TO SET'   . (RIGHT JUSTIFIES)   @[@@@@.     @E@@@@.         T$MASKL SO
)@@G@@  'THINGS TO SET'   . (LEFT JUSTIFIES)    @[@@@@.     @E@@@@.   THINGS TSP
)@@G@@O SET ARE 'A' 'B' ETC. ONE MAY ALSO SPECIFY:    @[@@@@.     @A@@@@.     SQ
)@@G@@    'NUM' SETS ALL DIGITS     @A@@@@.         'LET' SETS ALL LETTERS    SR
)@@G@@@A@@@@.         'SP' SETS EVERYTHING ELSE @[@@@@.     @F@@@@.   IF A FIESS
)@@G@@LD IS PRECEEDED BY A * , THAT BIT IS CLEARED. THUSLY, @[@@@@.     @A@@@@ST
)@@G@@.         T$MASKR   'LET'  *'Q'     @[@@@@.     @ @@@@.   SETS ALL LETTESU
)@@G@@RS EXCEPT Q @[@@@@.     @F@@@@.   REMEMBER: TIDE$ PROCS USE T$MASKR TO JSV
)@@G@@USTIFY THEIR RESULTS.   @[@@@@.     @B@@@@P$        PROC      *80,2     SW
)@@G@@        .   @D@@@@T$MASKR*  NAME      1                 . RIGHT JUSTIFY SX
)@@G@@@D@@@@T$MASKL*  NAME      0                 . LEFT JUSTIFY  @F@@@@NUM(1)SY
)@@G@@    EQU       000017770000000000000000D . NUMBERS RIGHT     @E@@@@NUM(0)SZ
)@@G@@    EQU       000000000000000077740000D . NUMBERS LEFT@F@@@@LET(1)    EQTA
)@@G@@U       000000000000037777777700D . LETTERS RIGHT     @E@@@@LET(0)    EQTB
)@@G@@U       007777777760000000000000D . LETTERS LEFT@F@@@@SP(1)     EQU     TC
)@@G@@  -(NUM(1)++LET(1)) . SPECIAL CHARACTERS RIGHT  @F@@@@SP(0)     EQU     TD
)@@G@@  -(NUM(0)++LET(0)) . SPECIAL CHARACTERS LEFT   @E@@@@O(1)      EQU     TE
)@@G@@  1D                . A DOUBLE BIT RIGHT  @E@@@@O(0)      EQU       1D*/TF
)@@G@@71            . A DOUBLE BIT LEFT   @D@@@@SHIFT(1)  EQU       1         TG
)@@G@@        . LEFT SHIFT    @D@@@@SHIFT(0)  EQU       -1                . RITH
)@@G@@GHT SHIFT   @E@@@@P         EQU       P$(0,0)           . WHICH WAY TO STI
)@@G@@HIFT  @C@@@@ONE       EQU       O(P)              . OURS    @C@@@@F(1)  TJ
)@@G@@    EQU       0D                . ON FLAG @C@@@@G(1)      EQU       0D  TK
)@@G@@              . OFF FLAG@[@@@@/.    @[@@@@.     @C@@@@I DO P$-1 ,Q(P$(I,TL
)@@G@@1)) EQU 1           . TURN ON @C@@@@I DO P$-1 ,N(P$(I,1)) EQU P$(I,*1)  TM
)@@G@@  . TURN OFF@[@@@@.     @D@@@@ DO Q('NUM') ,F(1) EQU F(1)++NUM(P)   . NUTN
)@@G@@MBERS ON    @D@@@@ DO Q('LET') ,F(1) EQU F(1)++LET(P)   . LETTERS ON    TO
)@@G@@@D@@@@ DO Q('SP') ,F(1) EQU F(1)++SP(P)     . SPECIALS ON   @[@@@@.     TP
)@@G@@@D@@@@ DO N('NUM') ,G(1) EQU G(1)++NUM(P)   . NUMBERS OFF   @D@@@@ DO N(TQ
)@@G@@'LET') ,G(1) EQU G(1)++LET(P)   . LETTERS OFF   @D@@@@ DO N('SP') ,G(1) TR
)@@G@@EQU G(1)++SP(P)     . SPECIALS OFF  @[@@@@.     @G@@@@I DO 72 , DO Q(I-1TS
)@@G@@) ,F(1) EQU F(1)++(ONE*/(SHIFT(P)*(I-1))) . CHAR ON   @G@@@@I DO 72 , DOTT
)@@G@@ N(I-1) ,G(1) EQU G(1)++(ONE*/(SHIFT(P)*(I-1))) . CHAR OFF  @[@@@@.     TU
)@@G@@@B@@@@FF(1)     EQU       F(1)--G(1)        .   @C@@@@          +       TV
)@@G@@  FF(1)             . GENERATE@B@@@@          END                       TW
)@@G@@  .   @[@@@@/.    @G@@@@.   THIS PROC GENERATES AN ASCII TO FIELDATA CONTX
)@@G@@VERSION TABLE. EACH     @G@@@@.   ASCII CHAR IS MAPPED TO EITHER A FIELDTY
)@@G@@ATA CHAR (0-63), OR ONE OF    @B@@@@.   SEVERAL FIELDATA FUNNY CHARS (64TZ
)@@G@@-71). @F@@@@.   IN TIDE$ NUMERIC SCANS, THE FUNNY CHARS (SUPERCHARGED) AUA
)@@G@@RE:   @[@@@@.     @F@@@@.         64 - NULL. IGNORE THIS COMPLETELY (EXCUB
)@@G@@EPT IN ALPHA MODE)@C@@@@.         65 - ERROR CHARACTER (ERR ERCHAR)     UC
)@@G@@@C@@@@.         66 - BREAKARACTER. TERMINATE FIELD    @F@@@@.         67UD
)@@G@@ - ASCII ALPHA DELIMITER (TRANSFER ASCII CHARACTERS)  @E@@@@.         68UE
)@@G@@ - SUPER BREAKARACTER, TERMINATE FIELD AND LINE.@G@@@@.         69-71 - UF
)@@G@@ARE NORMALLY TREATED AS ERROR CHARACTERS, BUT CAN     @F@@@@.           UG
)@@G@@      BE TRANSFORMED INTO BREAKARACTERS BY SETTING THE@D@@@@.           UH
)@@G@@      APPROPRIATE BITS OF THE BREAK MASK. @[@@@@.     @D@@@@.         T$UI
)@@G@@ATBL    A(1),F(I)  A(2),F(2)    A(N),F(N) @[@@@@.     @E@@@@.   A(I) AREUJ
)@@G@@ ASCII, AND F(I) THEIR FIELDATA COUNTERPARTS    @[@@@@.     @F@@@@.   DEUK
)@@G@@FAULT CONDITIONS - ALL ASCII MAP TO POSSIBLE FD EQUIVALENTS @E@@@@.   (LUL
)@@G@@ETTERS TO LETTERS, NUMBERS TO NUMBERS, ETC), AND ALL  @F@@@@.   ASCII SPUM
)@@G@@ECIAL CHARS (0-037) MAP TO '?', WITH THE EXCEPTIONS   @G@@@@.   OF 015(CUN
)@@G@@R), 017(SI), AND 023(XOFF), WHICH GO TO 68 (SUPERBREAK).    @D@@@@.     UO
)@@G@@    016(SO) AND 000(NUL) ARE SET TO 64 (IGNORE).@[@@@@.     @B@@@@P$    UP
)@@G@@    PROC      *64,32            .   @B@@@@T$ATBL*   NAME                UQ
)@@G@@        .   @[@@@@.     @C@@@@A(0)      EQU       64                . NUUR
)@@G@@L     @B@@@@A(015)    EQU       68                . CR@B@@@@A(016)    EQUS
)@@G@@U       64                . SO@B@@@@A(017)    EQU       68              UT
)@@G@@  . SI@C@@@@A(023)    EQU       68                . XOFF    @C@@@@I DO 0UU
)@@G@@14 ,A(I) EQU  '?'               . SPECIAL @B@@@@I DO 3   ,A(I+017) EQU 'UV
)@@G@@?'            .   @B@@@@I DO 12  ,A(I+023) EQU '?'            .   @[@@@@UW
)@@G@@.     @B@@@@A(040)    EQU       ' '               .   @B@@@@A(041)    EQUX
)@@G@@U       '!'               .   @B@@@@A(042)    EQU       '"'             UY
)@@G@@  .   @B@@@@A(043)    EQU       '#'               .   @B@@@@A(044)    EQUZ
)@@G@@U       '$'               .   @B@@@@A(045)    EQU       '%'             VA
)@@G@@  .   @B@@@@A(046)    EQU       '&'               .   @B@@@@A(047)    EQVB
)@@G@@U       ''''              .   @B@@@@A(050)    EQU       '('             VC
)@@G@@  .   @B@@@@A(051)    EQU       ')'               .   @B@@@@A(052)    EQVD
)@@G@@U       '*'               .   @B@@@@A(053)    EQU       '+'             VE
)@@G@@  .   @B@@@@A(054)    EQU       ','               .   @B@@@@A(055)    EQVF
)@@G@@U       '-'               .   @B@@@@A(056)    EQU       '.'             VG
)@@G@@  .   @B@@@@A(057)    EQU       '/'               .   @[@@@@/.    @]@@@@VH
)@@G@@.   MORE    @[@@@@.     @C@@@@I DO 10 ,A(057+I) EQU 057+I           . DIVI
)@@G@@GITS  @B@@@@A(072)    EQU       ':'               .   @B@@@@A(073)    EQVJ
)@@G@@U       ';'               .   @B@@@@A(074)    EQU       '<'             VK
)@@G@@  .   @B@@@@A(075)    EQU       '='               .   @B@@@@A(076)    EQVL
)@@G@@U       '>'               .   @B@@@@A(077)    EQU       '?'             VM
)@@G@@  .   @B@@@@A(0100)   EQU       '@'               .   @C@@@@I DO 26 ,A(0VN
)@@G@@100+I) EQU 5+I            . LETTERS @B@@@@A(0133)   EQU       '['       VO
)@@G@@        .   @B@@@@A(0134)   EQU       '\'               .   @B@@@@A(0135VP
)@@G@@)   EQU       ']'               .   @B@@@@A(0136)   EQU       '^'       VQ
)@@G@@        .   @B@@@@A(0137)   EQU       077               .   @D@@@@I DO 0VR
)@@G@@40 ,A(0137+I) EQU A(077+I)      . FOLD OVER     @G@@@@I DO P$-1 ,J DO P$VS
)@@G@@(I)-1 ,A(P$(I,J)) EQU P$(I,P$(I)) . GET NEW STUFF     @E@@@@I DO 32 , + VT
)@@G@@A(4*I-4),A(4*I-3),A(4*I-2),A(4*I-1) . GENERATE  @B@@@@          END     VU
)@@G@@                    .   @[@@@@.     @^@@@@.   MORE ASCII PROCS    @[@@@@VV
)@@G@@.     @^@@@@.   READ CARD, SET FLAGS@[@@@@.     @B@@@@P$        PROC    VW
)@@G@@  *2                .   @C@@@@T$TRD*    NAME      1                 . TRVX
)@@G@@EAD$  @C@@@@T$RD*     NAME      0                 . READ$   @B@@@@Q(1)  VY
)@@G@@    EQU       TTRD$             .   @B@@@@Q(0)      EQU       TRD$      VZ
)@@G@@        .   @D@@@@J         EQU       P$(0,0)*U*(P$(1)<3)+P$(1,3) .     WA
)@@G@@@B@@@@ DO P$>1 , LA,J     A0,+(E$AD 1,1)    .   @D@@@@          T$AD    WB
)@@G@@  A1,2              . PACKET ADDRESS@B@@@@          LMJ       X11,Q(P$(0WC
)@@G@@,0))    .   @B@@@@          END                         .   @[@@@@.     WD
)@@G@@@E@@@@.   CLEAN UP ASCII IMAGES. DYNAMICALLY INSERT INTO TABLE.   @[@@@@WE
)@@G@@.     @B@@@@P$        PROC      *6                .   @B@@@@T$CLN*    NAWF
)@@G@@ME      1                 .   @B@@@@T$BLIN*   NAME      0               WG
)@@G@@  .   @B@@@@Q(1)      EQU       TCLN$             .   @B@@@@Q(0)      EQWH
)@@G@@U       TBLIN$            .   @B@@@@R0        EQU       0100            WI
)@@G@@  .   @B@@@@          T$AD      A2,3              .   @B@@@@          T$WJ
)@@G@@AD      A0,1              .   @B@@@@          T$AD      A1,2            WK
)@@G@@  .   @B@@@@ DO P$(0,0) ,I DO 3 , T$AD R0+I,I+3   .   @B@@@@          LMWL
)@@G@@J       X11,Q(P$(0,0))    .   @B@@@@          END                       WM
)@@G@@  .   @[@@@@/.    @A@@@@.   REENTER TCLN$ FROM ESCAPE RETURN@[@@@@.     WN
)@@G@@@B@@@@P$        PROC      *1                .   @B@@@@T$CLNESC* NAME    WO
)@@G@@                    .   @B@@@@          T$AD      A4,1              .   WP
)@@G@@@B@@@@          J         TCLNESC$          .   @B@@@@          END     WQ
)@@G@@                    .   @[@@@@.     @C@@@@.   INSERT CHARACTER IN A4 INTWR
)@@G@@O TCLN$ BUFFER    @[@@@@.     @B@@@@P$        PROC      *1              WS
)@@G@@  .   @B@@@@T$CLNADD* NAME                        .   @B@@@@          T$WT
)@@G@@AD      A4,1              .   @B@@@@          EX        0,*A3           WU
)@@G@@  .   @B@@@@          END                         .   @[@@@@.     @D@@@@WV
)@@G@@.   OPEN PACKET OR REENTER TCLN$ FROM FULL BUFFERETURN@[@@@@.     @B@@@@WW
)@@G@@P$        PROC      *2                .   @B@@@@T$CLNFUL* NAME      0   WX
)@@G@@              .   @B@@@@          T$AD      A1,2              .   @B@@@@WY
)@@G@@          T$AD      A0,1              .   @B@@@@          J         TCLNWZ
)@@G@@FUL$          .   @B@@@@          END                         .   @[@@@@XA
)@@G@@.     @^@@@@.   ALTERNATE PROC CALLS@[@@@@.     @B@@@@P$        PROC    XB
)@@G@@  *1                .   @B@@@@T$CLNPK*  NAME      0                 .   XC
)@@G@@@B@@@@          T$AD      A0,1              .   @B@@@@          LMJ     XD
)@@G@@  X11,TCLNPK$       .   @B@@@@          END                         .   XE
)@@G@@___   @E@@@@I DO 32 , + A(4*I-4),A(4*I-3),A(4*I-*[S@@@*SDFF*@[@@@@.     XF
)@@G@@@A@@@@. UNIVERSITY OF MARYLAND EDIT$ PROCS@F@@@@. MODIFIED BY JEFF JEWETXG
)@@G@@T FROM THE ORIGINAL CLASSIC BY D. ZAVE.   @[@@@@.     @ @@@@. REASONS FOXH
)@@G@@R MODIFICATIONS:  @[@@@@.     @A@@@@. 1) TO ALLOW 18 BIT UFIELDS. E.G.  XI
)@@G@@@[@@@@.     @D@@@@.         E$FD1     'RES',,U          . I$ OR BUST    XJ
)@@G@@@C@@@@.   GENERATES A 'T' FLAG WHEN USING STOCK EDIT$P@[@@@@.     @B@@@@XK
)@@G@@. 2) TO ALLOW EQUF'D J-DESIGNATOR. E.G.   @[@@@@.     @ @@@@.   A     EQXL
)@@G@@UF      BLIP,,S3  @B@@@@.         E$COL     BLIP              .   @[@@@@XM
)@@G@@.     @F@@@@.   STOCK EDIT$P GENERATES A 'T' FLAG. SOUND INCREDIBLE, BUTXN
)@@G@@ IT'S @G@@@@.   TRUE. WHAT PAIN EXISTS IS DUE ALMOST ENTIRELY TO THE ILLXO
)@@G@@-CONSIDERED @G@@@@.   (SORRY, DAREK) 'U' DEFAULT J-DESIGNATOR. IN THE ABXP
)@@G@@OVE EXAMPLE THE   @F@@@@.   STOCK EDIT$P 'SEES' NO EXPLICIT J-DESIG (E.GXQ
)@@G@@. BLIP,,J) AND SO @ @@@@.   TRIES TO FORCE A 'U' IN.  @[@@@@.     @G@@@@XR
)@@G@@. 3) EXTENSIONS TO HANDLE OUR ADDITIONAL ROUTINES AND PACKET FIELDS.    XS
)@@G@@@[@@@@.     @G@@@@. NOTE THAT MODIFICATIONS (1) AND (3) ARE REFLECTED INXT
)@@G@@ A SIGNIFICANTLY  @F@@@@. LARGER E$AD. IF THE STOCK ASSEMBLER ALLOWED ONXU
)@@G@@E TO 'OR' OFF     @H@@@@. NON-RELOCATABLE FIELDS (A PERFECTLY REASONABLEXV
)@@G@@ REQUEST, WE THINK), THEN     @B@@@@. THE PROC WOULD BE SUBSTANTIALLY SMXW
)@@G@@ALLER.@[@@@@.     @F@@@@. NOTE: WE BELIEVE THAT THIS PROC IS COMPATIBLE XX
)@@G@@WITH STOCK UNIVAC @F@@@@. ASM AND MASM. WE MIGHT BE WRONG. ANY COMPLAINTXY
)@@G@@S, SUGGESTIONS, OR@E@@@@. EFFUSIVE DEMOSTRATIONS OF PRAISE SHOULD BE FORXZ
)@@G@@WARDED TO:  @[@@@@.     @^@@@@.         JEFF JEWETT   @^@@@@.         SYYA
)@@G@@STEMS STAFF @A@@@@.         COMPUTER SCIENCE CENTER   @A@@@@.         UNYB
)@@G@@IVERSITY OF MARYLAND    @B@@@@.         COLLEGE PARK, MARYLAND   20742  YC
)@@G@@@[@@@@/.    @F@@@@.         INTERNAL PACKET DEFINITIONS FOR USE BY EDIT$YD
)@@G@@ ROUTINES   @[@@@@.     @#@@@@          DEF     @G@@@@E$VER$$   EQU     YE
)@@G@@  '010176'          . UOM VERSION (FIELDATA DATE)     @F@@@@A$EDIT$   EQYF
)@@G@@U       0                 . DON'T SIMULATE AEDIT$.    @D@@@@PX        EQYG
)@@G@@U        1                . PACKET POINTER@E@@@@CX        EQU        2  YH
)@@G@@              . CHARACTER POINTER   @D@@@@WX        EQU        3        YI
)@@G@@        . WORD POINTER  @]@@@@          . @E@@@@PKT       EQUF      0,PXYJ
)@@G@@                PACKET LOCATION     @E@@@@CI        EQUF      0,CX      YK
)@@G@@          CHARACTER INDEX     @D@@@@WI        EQUF      0,WX            YL
)@@G@@    WORD INDEX    @E@@@@QT        EQU       5                 . THIS IS YM
)@@G@@Q4 OR T3    @]@@@@          . @F@@@@EMSGC     EQUF      PKT,,S2         YN
)@@G@@    EMSG$ SIGNAL CHARACTER    @D@@@@IL        EQUF      PKT,,S3         YO
)@@G@@    IMAGE LENGTH  @D@@@@ILOC      EQUF      PKT,,H2             IMAGE LOYP
)@@G@@CATION@E@@@@SAV1W     EQU       PKT+1             . FULLWORD SAVE AREA  YQ
)@@G@@@F@@@@SAV1H1    EQUF      SAV1W,,H1           SAVE AREA FOR RETURN POINTYR
)@@G@@@F@@@@SAV1H2    EQUF      SAV1W,,XH2        . ANCILLARY RETURN SAVE     YS
)@@G@@@G@@@@FPS       EQUF      PKT+2,,S1           SCALE FOR FLOATING POINT EYT
)@@G@@DIT   @G@@@@FPR       EQUF      PKT+2,,S2           FLOATING POINT ROUNDYU
)@@G@@ING OPTION  @H@@@@CIM       EQUF      PKT+2,,S3           SAVE AREA FOR YV
)@@G@@EMSG$ CHARACTER INDEX   @G@@@@EASCII    EQUF      PKT+2,,H2         . SOYW
)@@G@@METHING ASCII:QWM,EASC,EASCIN @F@@@@EASC      EQUF      PKT+2,,S4       YX
)@@G@@  . ASCII (QUARTERWORD) FLAG  @E@@@@EASCIN    EQUF      PKT+2,,S5       YY
)@@G@@  . ASCII INPUT FLAG    @E@@@@QWM       EQUF      PKT+2,,S6         . QUYZ
)@@G@@ARTERWORD MODE    @G@@@@WIM       EQUF      PKT+3,,H1           SAVE AREZA
)@@G@@A FOR EMSG$ WORD INDEX  @E@@@@SAVE1     EQUF      PKT+3,,H2           SAZB
)@@G@@VE AREA FOR PX    @E@@@@SAVE2     EQU       PKT+4               SAVE AREZC
)@@G@@A FOR CX    @G@@@@ADRASC    EQUF      PKT+5,,H1         . NON-XLATING ASZD
)@@G@@CII ENTRY POINT   @H@@@@SAVE3     EQUF      PKT+5,,H2           SAVE AREZE
)@@G@@A FOR WX (RIGHT HALF ONLY)    @H@@@@DPC       EQUF      PKT+6,,S1       ZF
)@@G@@    CHARACTER FOR DOUBLE PRECISION SCALE  @H@@@@SPC       EQUF      PKT+ZG
)@@G@@6,,S2           CHARACTER FOR SINGLE PRECISION SCALE  @D@@@@SIGN      EQZH
)@@G@@UF      PKT+6,,S3           SIGN INDICATOR@G@@@@NDP       EQUF      PKT+ZI
)@@G@@6,,S4         . DIGITS BEFORE DECIMAL POINT     @G@@@@EMSGCA    EQUF    ZJ
)@@G@@  PKT+6,,QT         . EMSG$ ASCII SIGNAL CHARACTER    @G@@@@FZERO     EQZK
)@@G@@UF      PKT+7,,S1           FLOATING POINT ZERO INDICATOR   @E@@@@FCOL  ZL
)@@G@@    EQUF      PKT+7,,S2           FINAL COLUMN OR ZERO@G@@@@NDF       EQZM
)@@G@@UF      PKT+7,,S3           DIGITS FOLLOWING DECIMAL POINT  @D@@@@SCALE ZN
)@@G@@    EQUF      PKT+7,,XH2          POWER OF TEN  @G@@@@VALUE     EQU     ZO
)@@G@@  PKT+8             . DBLWRD SAVE AREA FOR DIGITS     @I@@@@DPCA      EQZP
)@@G@@UF      PKT+10,,Q1        . ASCII CHARACTER FOR DOUBLE PRECISION SCA    ZQ
)@@G@@@I@@@@SPCA      EQUF      PKT+10,,Q2        . ASCII CHARACTER FOR SINGLEZR
)@@G@@ PRECISION SCA    @E@@@@ETBL      EQUF      PKT+10,,XH2       . CONVERSIZS
)@@G@@ON TABLE    @G@@@@ADRASCX   EQU       PKT+11            . FD/ASCII XLATIZT
)@@G@@NG ENTRY POINT    @G@@@@XAF       EQUF      ADRASCX,,S1       . EXTENDEDZU
)@@G@@ ASCII-FD TRANSLATION   @F@@@@SAV12W    EQUF      PKT+12            . ASZV
)@@G@@CII ROUTINE SAVE AREA   @G@@@@ADRXALF   EQU       PKT+13            . CAZW
)@@G@@SE-PRESRVNG XLATING E. P.     @]@@@@          . @B@@@@E$DEF*    PROC    ZX
)@@G@@  *0,0              .   @G@@@@          TYPE      TYPE$REP          . OUZY
)@@G@@R GUARENTEE: NO IBANK STORES  @D@@@@STORE*    EQUF      0,*CX           ZZ
)@@G@@  . STORE CHAR    @B@@@@          END                         .   @[@@@@AA
)@@G@@/.    @^@@@@.   THE UOM EDIT$ PACKET@[@@@@.     @F@@@@.    THE SIX TO FOAB
)@@G@@URTEEN WORD EDIT$ PACKET CONTAINS USER-DEFINED  @F@@@@.    PARAMETERS, AAC
)@@G@@ND INTERNAL FLAGS USED BY THE EDIT$ ROUTINES.   @[@@@@.     @F@@@@.    EAD
)@@G@@DIT$ USES THE FOLLOWING PACKET. WORDS 6 THROUGH 9 ARE NEEDED@G@@@@.    BAE
)@@G@@Y THE FLOATING POINT ROUTINES. WORDS 6 THROUGH 12 ARE REQUIRED    @E@@@@AF
)@@G@@.    FOR ASCII CAPABILITIES. EXTENDED ASCII DEMANDS WORD 13.@[@@@@.     AG
)@@G@@@F@@@@.   ............................................................. AH
)@@G@@@F@@@@. 0 :         : *EMSGC  :   *IL   :            *ILOC            : AI
)@@G@@@F@@@@.   ............................................................. AJ
)@@G@@@F@@@@. 1 :            SAV1H1           :           SAV1H2            : AK
)@@G@@@F@@@@.   ............................................................. AL
)@@G@@@F@@@@. 2 :  *FPS   :  *FPR   :   CIM   :  *EASC  : *EASCIN :   QWM   : AM
)@@G@@@F@@@@.   ............................................................. AN
)@@G@@@F@@@@. 3 :             WIM             :            SAVE1            : AO
)@@G@@@F@@@@.   ............................................................. AP
)@@G@@@F@@@@. 4 :                           SAVE2                           : AQ
)@@G@@@F@@@@.   ............................................................. AR
)@@G@@@F@@@@. 5 :            ADRASC           :            SAVE3            : AS
)@@G@@@F@@@@.   ............................................................. AT
)@@G@@@F@@@@. 6 :  *DPC   :  *SPC   :  SIGN   :   NDP   :      *EMSGCA      : AU
)@@G@@@F@@@@.   ............................................................. AV
)@@G@@@F@@@@. 7 :  ZERO   :  FCOL   :   NDF   :            SCALE            : AW
)@@G@@@F@@@@.   ............................................................. AX
)@@G@@@F@@@@. 8 :                                                           : AY
)@@G@@@F@@@@.   .                           VALUE                           . AZ
)@@G@@@F@@@@. 9 :                                                           : BA
)@@G@@@F@@@@.   ............................................................. BB
)@@G@@@F@@@@. 10:    *DPCA     :    *SPCA     :            *ETBL            : BC
)@@G@@@F@@@@.   ............................................................. BD
)@@G@@@F@@@@. 11:  *XAF   : NOT USED:    0    :           ADRASCX           : BE
)@@G@@@F@@@@.   ............................................................. BF
)@@G@@@F@@@@. 12:                           SAV12W                          : BG
)@@G@@@F@@@@.   ............................................................. BH
)@@G@@@F@@@@. 13: NOT USED: NOT USED:    0    :           ADRXALF           : BI
)@@G@@@F@@@@.   ............................................................. BJ
)@@G@@@[@@@@.     @F@@@@.    THE STARRED PACKET FIELDS ARE SET BY THE USER; THBK
)@@G@@E OTHERS ARE@ @@@@.    USED INTERNALLY BY EDIT$.@[@@@@.     @[@@@@/.    BL
)@@G@@@G@@@@.   EXTERNAL DEFINITIONS  (FOR JOE USER). JOE SUPPLIES PACKET ADDRBM
)@@G@@ESS.  @[@@@@.     @F@@@@P$        PROC      *1                . FIELD ISBN
)@@G@@ ADDR OF PACKET   @B@@@@E$FIELDS* NAME                        .   @[@@@@BO
)@@G@@.     @D@@@@PKT       EQUF      P$(1,1),P$(1,2)   . DEFINE STUFF  @[@@@@BP
)@@G@@.     @C@@@@QT        EQU       05                . Q4 OR T3@F@@@@EMSGC*BQ
)@@G@@    EQUF      PKT,,12             EMSG$ SIGNAL CHARACTER    @D@@@@IL*   BR
)@@G@@    EQUF      PKT,,11             IMAGE LENGTH  @D@@@@ILOC*     EQUF    BS
)@@G@@  PKT,,01             IMAGE LOCATION@G@@@@FPS*      EQUF      PKT+2,,13 BT
)@@G@@          SCALE FOR FLOATING POINT EDIT   @G@@@@FPR*      EQUF      PKT+BU
)@@G@@2,,12           FLOATING POINT ROUNDING OPTION  @F@@@@EASC*     EQUF    BV
)@@G@@  PKT+2,,10         . ASCII (QUARTERWORD) FLAG  @E@@@@EASCIN*   EQUF    BW
)@@G@@  PKT+2,,9          . ASCII INPUT FLAG    @H@@@@DPC*      EQUF      PKT+BX
)@@G@@6,,13           CHARACTER FOR DOUBLE PRECISION SCALE  @H@@@@SPC*      EQBY
)@@G@@UF      PKT+6,,12           CHARACTER FOR SINGLE PRECISION SCALE  @G@@@@BZ
)@@G@@EMSGCA*   EQUF      PKT+6,,QT         . EMSG$ ASCII SIGNAL CHARACTER    CA
)@@G@@@I@@@@DPCA*     EQUF      PKT+10,,07        . ASCII CHARACTER FOR DOUBLECB
)@@G@@ PRECISION SC     @I@@@@SPCA*     EQUF      PKT+10,,04        . ASCII CHCC
)@@G@@ARACTER FOR SINGLE PRECISION SC     @E@@@@ETBL*     EQUF      PKT+10,,00CD
)@@G@@3       . CONVERSION TABLE    @G@@@@XAF*      EQUF      PKT+11,,13      CE
)@@G@@  . EXTENDED ASCII-FD TRANSLATION   @D@@@@          END                 CF
)@@G@@        . ALL FOR YOU   @[@@@@.     @B@@@@.   ASCII XLATION DEFS. CALL ACG
)@@G@@FTER E$DEF. @[@@@@.     @B@@@@          DEF                         .   CH
)@@G@@@D@@@@LAHEAD(WX) EQUF     PKT+13,,H1        . LOOKAHEAD     @C@@@@LAHEADCI
)@@G@@(CX) EQUF     PKT+7,,H2         . FOR XAF @E@@@@CHARPT    EQUF      VALUCJ
)@@G@@E,,H1         . CHARACTER POINTER   @D@@@@CXRET     EQUF      VALUE,,H2 CK
)@@G@@        . CX RETURN     @E@@@@FINRET    EQUF      VALUE+1,,H1       . FICL
)@@G@@NAL X11 RETURN    @G@@@@BLNKADR   EQUF      PKT+7,,H1         . ADDR OF CM
)@@G@@LAST NON-BLANK CHAR     @D@@@@IMGMD     EQUF      PKT+11,,S2        . IMCN
)@@G@@AGE MODE    @E@@@@EFDFG     EQUF      PKT+11,,S3        . EFD[1,2,3]$ FLCO
)@@G@@AG    @B@@@@E$APROC*  PROC      *0,0              .   @B@@@@          ENCP
)@@G@@D                         .   @[@@@@/.    @F@@@@. ORIGINAL GENERALIZED ACQ
)@@G@@DDRESSING PROC, INCLUDED FOR COMPLETENESS.@[@@@@.     @G@@@@.  +(E$AD S,CR
)@@G@@T U) SCANS P$(S,T) FOR UFIELD, P$(S,T+1) FOR EXPLICIT XREG, @G@@@@.     CS
)@@G@@    P$(S,T+2) FOR EXPLICIT J-DESIGNATOR. UFIELD MAY BE EQUFFED. IF@D@@@@CT
)@@G@@.         NO J-DESIG FOUND, THEN DEFAULT U IS USED.   @F@@@@.  +(E$AD0 SCU
)@@G@@,T U) PERFORMS AS ABOVE, BUT ONLY P$(S,T) IS SCANNED. @E@@@@.         THCV
)@@G@@ERE ARE NO EXPLICIT XREG OR J-DESIG FIELDS.     @[@@@@.     @F@@@@. DECOCW
)@@G@@DE A U-FIELD INTO ITS CONSTITUENT ELEMENTS. THIS PROC USES  @G@@@@. SUBTCX
)@@G@@RACTION TO AVOID SPURIOUS R-FLAGS WHICH MIGHT OTHERWISE ARISE.    @F@@@@CY
)@@G@@. IN ADDITION, IT DOES NOT ALTER THE FORM OF THE ORIGINAL U-FIELD,@F@@@@CZ
)@@G@@. SINCE IT IS UNKNOWN WHETHER THE U FIELD ALREADY HAS FORM OR NOT.@[@@@@DA
)@@G@@.     @E@@@@. I HAVE NO SCRUPLES, SO MUCH OF THIS PROC WAS SNARFED FROM DB
)@@G@@@^@@@@. PAT HAGERTY'S STRUC$. @[@@@@.     @]@@@@        DEF @E@@@@G$JBITDC
)@@G@@(1) EQU 1*/29                   . J-DESIGNATOR BITS   @^@@@@G$JBIT(2) EQDD
)@@G@@U 1*/28     @^@@@@G$JBIT(3) EQU 1*/27     @^@@@@G$JBIT(4) EQU 1*/26     DE
)@@G@@@D@@@@G$XBIT(1) EQU 1*/21                   . XREG BITS     @^@@@@G$XBITDF
)@@G@@(2) EQU 1*/20     @^@@@@G$XBIT(3) EQU 1*/19     @^@@@@G$XBIT(4) EQU 1*/1DG
)@@G@@8     @C@@@@G$HIBI(1) EQU 1*/17                   . HBIT    @C@@@@G$HIBIDH
)@@G@@(2) EQU 1*/16                   . IBIT    @[@@@@.     @[@@@@.     @B@@@@DI
)@@G@@Q         PROC      *2,0              .   @G@@@@E$AD*     NAME      1   DJ
)@@G@@              . COMPUTE GENERALIZED ADDRESS     @F@@@@E$AD0*    NAME    DK
)@@G@@  0                 . PROCESS ONE FIELD ONLY    @F@@@@MF   EQU  Q(0,0)  DL
)@@G@@                    . TRUE IF MANY-SUBFIELDS    @C@@@@S    EQU  Q(1,1)  DM
)@@G@@                    . FIELD   @C@@@@T    EQU  Q(1,2)                    DN
)@@G@@  . SUBFIELD@H@@@@HBIT EQU P$(S,*T+1)*MF                . ON IF UFIELD,*DO
)@@G@@XREG : ZERO IF E$AD0    @H@@@@IBIT EQU P$(S,*T)*MF                  . ONDP
)@@G@@ IF *UFIELD      : ZERO IF E$AD0    @G@@@@. NOTE THAT WE CAN'T PROCESS TDQ
)@@G@@HE NEXT 4 LINES AS P$(S,T+1)*(EXISTENCE=1)@G@@@@. BECAUSE OF PROPAGATIONDR
)@@G@@ OF FORMS. E.G. A*0 => ZERO WITH FORM OF C.     @#@@@@. UGLY BUT TRUE.  DS
)@@G@@@E@@@@ DO MF=0 ,XREG EQU  0                 . EXPLICIT XREG SET 0 @F@@@@DT
)@@G@@ DO MF=0 ,EXPJ EQU  0                 . EXPLICIT J-DESIG SET 0    @H@@@@DU
)@@G@@ DO MF ,XREG EQU  P$(S,T+1)           . IF NOT E$$A0 ,FETCH EXPLICIT XREDV
)@@G@@G     @H@@@@ DO MF ,EXPJ EQU  P$(S,T+2)           . IF NOT E$$A0 ,FETCH DW
)@@G@@EXPLICIT J-DESIG  @C@@@@. OBTAIN MANIPULATABLE UFIELD FROM ASM OR MASM. DX
)@@G@@@D@@@@     ON   1-(+3>2>1)                  . ON IF @ASM    @D@@@@IV(1) DY
)@@G@@EQU +(P$(S,T))                  . NO *'S, PLEASE@D@@@@     OFF          DZ
)@@G@@                    . END OF @ASM   @D@@@@     ON   +3>2>1              EA
)@@G@@        . ON IF @MASM   @F@@@@IV(1) EQU $AP(P$(S,T))                . ONEB
)@@G@@LY THE NON-REL PART     @D@@@@     OFF                              . ENEC
)@@G@@D OF @MASM  @[@@@@.     @F@@@@JAY(1)  EQU     0                     . ASED
)@@G@@SUME NO EQUF'D J-SPEC   @F@@@@ DO IV(1)>0377777777                  ; IFEE
)@@G@@ VALUE HAS EQUF'D J     @D@@@@  ,K DO 4                             ; FOEF
)@@G@@R ALL J-BITS@E@@@@    , DO (IV(1)-JAY(1))>(G$JBIT(K)-1) ; IF CURRENT BITEG
)@@G@@ ON   @E@@@@       ,JAY(1) EQU JAY(1)++G$JBIT(K)  . FOLD INTO RESULT    EH
)@@G@@@G@@@@IV(1)   EQU     IV(1)-JAY(1)          . STRIP EQUF'D J FROM OPERANEI
)@@G@@D     @E@@@@JAY(2)  EQU     EXPJ++JAY(1)*/-26     . GET COMPLETE J-SPEC EJ
)@@G@@@F@@@@XRG(1)  EQU     0                     . ASSUME NO EQUF'D X-SPEC   EK
)@@G@@@F@@@@ DO IV(1)>0777777                     ; IF VALUE HAS EQUF'D X     EL
)@@G@@@D@@@@  ,K DO 4                             ; FOR ALL X-BITS@E@@@@    , EM
)@@G@@DO (IV(1)-XRG(1))>(G$XBIT(K)-1) ; IF CURRENT BIT ON   @E@@@@       ,XRG(EN
)@@G@@1) EQU XRG(1)++G$XBIT(K)  . FOLD INTO RESULT    @G@@@@IV(1)   EQU     IVEO
)@@G@@(1)-XRG(1)          . STRIP EQUF'D X FROM OPERAND     @E@@@@XRG(2)  EQU EP
)@@G@@    XREG++XRG(1)*/-18     . GET COMPLETE X-SPEC @G@@@@ DO MF=1 , DO (JAYEQ
)@@G@@(2)=0)**(P$(S)<(T+2)) ,JAY(2) EQU Q(2,1) . SET DEFALT @G@@@@ DO MF=0 , DER
)@@G@@O JAY(2)=0                  ,JAY(2) EQU Q(2,1) . SET DEFALT @F@@@@HIB(1)ES
)@@G@@  EQU     0                     . ASSUME NO EQUF'D H/I BITS @F@@@@ DO  IET
)@@G@@V(1)>0177777                    ; IF VALUE HAS EQUF'D H OR I@G@@@@  ,K DEU
)@@G@@O 2                             ; FOR BOTH BITS (OF I$ FORM INSTR)@E@@@@EV
)@@G@@    , DO (IV(1)-HIB(1))>(G$HIBI(K)-1) ; IF CURRENT BIT ON   @E@@@@      EW
)@@G@@ ,HIB(1) EQU HIB(1)++G$HIBI(K)  . FOLD INTO RESULT    @F@@@@UF EQU +(P$(EX
)@@G@@S,T))-HIB(1)-XRG(1)-JAY(1) . STRIP OFF J,X,HI BITS    @F@@@@HIB(1) EQU (EY
)@@G@@HBIT*2)++IBIT++(HIB(1)*/-16) . ALIGN H AND I BITS     @G@@@@ DO IV(1)<0 EZ
)@@G@@,HIB(1) EQU 3             . IF UFIELD IS NEG, H,I ARE BOTH 1@[@@@@.     FA
)@@G@@@F@@@@  I$  0,JAY(2),0,XRG(2),HIB(1),UF . GENERATE THE EFFECTIVE UFIELD FB
)@@G@@@D@@@@          END                         . END OF E$AD   @[@@@@/.    FC
)@@G@@@#@@@@. BEGIN USER PROCS@[@@@@.     @B@@@@P$        PROC      *1        FD
)@@G@@        .   @C@@@@E$APRT*   NAME      EAPRT$            . APRINT$ @E@@@@FE
)@@G@@E$PRTG*   NAME      EPRTG$            . PRINT$ OR APRINT$   @F@@@@E$PRTGFF
)@@G@@A*  NAME      EPRTGA$           . ASCII OR FIELDATA PRINT$  @D@@@@E$PRTAFG
)@@G@@*   NAME      EPRTA$            . ASCII PRINT$  @G@@@@E$PRT*    NAME    FH
)@@G@@  EPRT$             . PRODUCE LITERAL, PRINT, CLEAR   @C@@@@E$PRTI*   NAFI
)@@G@@ME      EPRTI$            . PRINT   @D@@@@E$APRTI*  NAME      EAPRTI$   FJ
)@@G@@        . ASCII PRINT   @D@@@@E$CSF*    NAME      ECSF$             . CSFK
)@@G@@F$ THINGIE  @H@@@@ DO P$(1)>1 , LA    12,+(E$AD 1,2 15) . LA[,XU]  A0,P$FL
)@@G@@(1,2),P$(1,3),P$(1,4)   @E@@@@ DO P$(1)>0 , LA    13,+(E$AD0 1,1 15) . LFM
)@@G@@A,U  A1,P$(1,1)   @B@@@@          LMJ       11,P$(0,0)        .   @B@@@@FN
)@@G@@          END                         .   @[@@@@.     @[@@@@.     @B@@@@FO
)@@G@@P$        PROC      *0,1              .   @E@@@@E$DITX*   NAME      0   FP
)@@G@@              . CLOSE EDIT$ PACKET  @F@@@@E$COLN*   NAME      1         FQ
)@@G@@        . RETURN WITH COL NUM IN A0 @F@@@@E$WRDN*   NAME      2         FR
)@@G@@        . RETURN WITH WORD NUM IN A0@F@@@@E$MSGR*   NAME      3         FS
)@@G@@        . REENTER MESSAGE EDITOR    @H@@@@E$CLEAR*  NAME      4         FT
)@@G@@        . CLEAR OUTPUT BUFFER, SET COL TO 0     @D@@@@J         EQU     FU
)@@G@@  P$(0,0)           . TARGET ADDRESS@B@@@@ DO J=0 , LMJ       11,EDITX$ FV
)@@G@@        .   @B@@@@ DO J=1 , LMJ       11,ECOLN$         .   @B@@@@ DO J=FW
)@@G@@2 , LMJ       11,EWRDN$         .   @B@@@@ DO J=3 , LMJ       11,EMSGR$ FX
)@@G@@        .   @B@@@@ DO J=4 , LMJ       11,ECLEAR$        .   @B@@@@      FY
)@@G@@    END                         .   @[@@@@.     @[@@@@.     @B@@@@P$    FZ
)@@G@@    PROC      *2                .   @E@@@@E$PAD*    NAME      0         GA
)@@G@@        . PAD OUT CHARACTERS  @H@@@@ DO P$(1)>0 , LA    12,+(E$AD 1,1 15GB
)@@G@@) . LA[,XU]  A0,P$(1,1),P$(1,2),P$(1,3)   @H@@@@ DO P$(2)>0 , LA    13,+GC
)@@G@@(E$AD 2,1 15) . LA[,XU]  A1,P$(2,1),P$(2,2),P$(2,3)   @B@@@@          LMGD
)@@G@@J       11,EPAD$          .   @B@@@@          END                       GE
)@@G@@  .   @[@@@@.     @[@@@@.     @B@@@@P$        PROC      *1              GF
)@@G@@  .   @G@@@@E$DIT*    NAME      1                 . ENTER AND OPEN EDIT$GG
)@@G@@ PACKET     @H@@@@E$DITR*   NAME      2                 . REENTER EDIT$ GH
)@@G@@PACKET AFTER E$DITX     @E@@@@E$CHAR*   NAME      3                 . INGI
)@@G@@SERT 1 CHARACTER  @F@@@@E$COL*    NAME      4                 . MOVE TO GJ
)@@G@@SPECIFIED COL     @F@@@@E$SKIP*   NAME      5                 . SKIP SPEGK
)@@G@@CIFIED NUM OF COLS@E@@@@E$MSG*    NAME      6                 . ENTER MEGL
)@@G@@SSAGE EDITOR@E@@@@E$MSKP*   NAME      7                 . SKIP MSG FIELDGM
)@@G@@S     @B@@@@ DO P$(1)>0 , LA    12,+(E$AD 1,1 15) .   @D@@@@J         EQGN
)@@G@@U       P$(0,0)           . TARGET ADDRESS@B@@@@ DO J=1 , LMJ       11,EGO
)@@G@@DIT$          .   @B@@@@ DO J=2 , LMJ       11,EDITR$         .   @B@@@@GP
)@@G@@ DO J=3 , LMJ       11,ECHAR$         .   @B@@@@ DO J=4 , LMJ       11,EGQ
)@@G@@COL$          .   @B@@@@ DO J=5 , LMJ       11,ESKIP$         .   @B@@@@GR
)@@G@@ DO J=6 , LMJ       11,EMSG$          .   @B@@@@ DO J=7 , LMJ       11,EGS
)@@G@@MSKP$         .   @B@@@@          END                         .   @[@@@@GT
)@@G@@.     @[@@@@.     @B@@@@P$        PROC      *1                .   @D@@@@GU
)@@G@@E$RASE*   NAME      0                 . CLEAR BUFFER  @H@@@@ DO P$(1)>0 GV
)@@G@@, LA    13,+(E$AD 1,1 15) . LA[,XU]  A1,P$(1,1),P$(1,2),P$(1,3)   @B@@@@GW
)@@G@@          LMJ       11,ERASE$         .   @B@@@@          END           GX
)@@G@@              .   @[@@@@/.    @[@@@@.     @B@@@@P$        PROC      *1  GY
)@@G@@              .   @D@@@@E$FD3*    NAME      0                 . INSERT 3GZ
)@@G@@ WORDS@H@@@@ DO P$(1)>0 , LA  14,+(E$AD 1,1)+2    . LA       A2,P$(1,1)+HA
)@@G@@2,P$(1,2),P$(1,3) @E@@@@E$FD2*    NAME      1                 . INSERT THB
)@@G@@WO WORDS    @G@@@@ DO P$(1)>0 , DL    12,+(E$AD 1,1)    . DL       A0,P$HC
)@@G@@(1,1),P$(1,2)     @D@@@@J         EQU       P$(0,0)           . TARGET AHD
)@@G@@DDRESS@B@@@@ DO J=0 , LMJ       11,EFD3$          .   @B@@@@ DO J=1 , LMHE
)@@G@@J       11,EFD2$          .   @B@@@@          END                       HF
)@@G@@  .   @[@@@@.     @[@@@@.     @B@@@@P$        PROC      *2              HG
)@@G@@  .   @C@@@@E$PACKC*  NAME      0                 . PACK    @H@@@@ DO P$HH
)@@G@@(1)>1 , LA    12,+(E$AD 1,2 15) . LA[,XU]  A0,P$(1,2),P$(1,3),P$(1,4)   HI
)@@G@@@F@@@@ DO P$(0)>1 , LXI   12,+(E$AD0 0,1 15) . LXI[,XU]  A0,P$(0,1)     HJ
)@@G@@@E@@@@ DO P$(1)>0 , LA    13,+(E$AD0 1,1 15) . LA[,XU]  A1,P$(1,1)@H@@@@HK
)@@G@@ DO P$(2)>0 , LA    14,+(E$AD 2,1 15) . LA[,XU]  A2,P$(2,1),P$(2,2),P$(2HL
)@@G@@,3)   @B@@@@          LMJ       11,EPACKC$        .   @B@@@@          ENHM
)@@G@@D                         .   @[@@@@.     @[@@@@.     @B@@@@P$        PRHN
)@@G@@OC      *1                .   @D@@@@E$COPY*   NAME      1               HO
)@@G@@  . STRING COPY   @F@@@@E$PACK*   NAME      2                 . STRING CHP
)@@G@@OPY WITH PACKING  @G@@@@E$COPYS*  NAME      3                 . STRING CHQ
)@@G@@OPY WITH SQUEEZED BLANKS@G@@@@E$PACKS*  NAME      4                 . STHR
)@@G@@RING PACK WITH SQUEEZED BLANKS@H@@@@ DO P$(1)>1 , LA    12,+(E$AD 1,2 15HS
)@@G@@) . LA[,XU]  A0,P$(1,2),P$(1,3),P$(1,4)   @F@@@@ DO P$(0)>1 , LXI   12,+HT
)@@G@@(E$AD0 0,1 15) . LXI[,XU]  A0,P$(0,1)     @E@@@@ DO P$(1)>0 , LA    13,+HU
)@@G@@(E$AD0 1,1 15) . LA[,XU]  A1,P$(1,1)@D@@@@J         EQU       P$(0,0)   HV
)@@G@@        . TARGET ADDRESS@B@@@@ DO J=1 , LMJ       11,ECOPY$         .   HW
)@@G@@@B@@@@ DO J=2 , LMJ       11,EPACK$         .   @ @@@@ DO J=3 , LMJ     HX
)@@G@@  11,ECOPYS$@ @@@@ DO J=4 , LMJ       11,EPACKS$@B@@@@          END     HY
)@@G@@                    .   @[@@@@.     @[@@@@.     @B@@@@P$        PROC    HZ
)@@G@@  *1,1              .   @D@@@@E$FW*     NAME      0                 . EFIA
)@@G@@ORM$ WORD   @F@@@@I         DO        P$(1) ,P$(0,0) EQU (P$(0,0)*/P$(1,IB
)@@G@@I))++1 .    @B@@@@          +         P$(0,0)           .   @B@@@@      IC
)@@G@@    END                         .   @[@@@@.     @[@@@@.     @B@@@@P$    ID
)@@G@@    PROC      *1                .   @D@@@@E$MSKPR*  NAME      0         IE
)@@G@@        . SKIP AND COPY @H@@@@ DO P$(1)>0 , LA    12,+(E$AD 1,1 15) . LAIF
)@@G@@[,XU]  A0,P$(1,1),P$(1,2),P$(1,3)   @D@@@@          LMJ       11,EMSKP$ IG
)@@G@@        . SKIP MSG FIELD@C@@@@          LMJ       11,EMSGR$         . ANIH
)@@G@@D COPY@B@@@@          END                         .   @[@@@@.     @[@@@@II
)@@G@@.     @B@@@@P$        PROC      *2                .   @G@@@@E$DECFL*  NAIJ
)@@G@@ME      0                 . LEADING CHARS - FIXED FORMAT    @H@@@@ DO P$IK
)@@G@@(1)>1 , LA 12,+(E$AD 1,2)     . LA[,XU]  A0,P$(1,1+I),P$(1,2+I),P$(1,3+IIL
)@@G@@@E@@@@ DO P$(1)>0 , LA    13,+(E$AD0 1,1 15) . LA[,XU]  A1,P$(1,1)@H@@@@IM
)@@G@@ DO P$(2)>0 , LA    14,+(E$AD 2,1 15) . LA[,XU]  A2,P$(2,1),P$(2,2),P$(2IN
)@@G@@,3)   @B@@@@          LMJ       11,EDECFL$        .   @B@@@@          ENIO
)@@G@@D                         .   @[@@@@.     @[@@@@.     @B@@@@P$        PRIP
)@@G@@OC      *1                .   @E@@@@E$OCTF*   NAME      1               IQ
)@@G@@  . FIXED FORMAT OCTAL  @E@@@@E$DECF*   NAME      2                 . FIIR
)@@G@@XED FORMAT DECIMAL@F@@@@E$HEXF*   NAME      3                 . FIXED FOIS
)@@G@@RMAT HEXADECIMAL  @H@@@@E$DECFZ*  NAME      4                 . FIXED FOIT
)@@G@@RMAT DECIMAL-LEADING ZEROES   @H@@@@E$DCFZ*   NAME      4               IU
)@@G@@  . FIXED FORMAT DECIMAL-LEADING ZEROES   @H@@@@ DO P$(1)>1 , LA    12,+IV
)@@G@@(E$AD 1,2)    . LA[,XU]  A0,P$(1,2),P$(1,3),P$(1,4)   @E@@@@ DO P$(1)>0 IW
)@@G@@, LA    13,+(E$AD0 1,1 15) . LA[,XU]  A1,P$(1,1)@D@@@@J         EQU     IX
)@@G@@  P$(0,0)           . TARGET ADDRESS@B@@@@ DO J=1 , LMJ       11,EOCTF$ IY
)@@G@@        .   @B@@@@ DO J=2 , LMJ       11,EDECF$         .   @B@@@@ DO J=IZ
)@@G@@3 , LMJ       11,EHEXF$         .   @B@@@@ DO J=4 , LMJ       11,EDECFZ$JA
)@@G@@        .   @B@@@@          END                         .   @[@@@@/.    JB
)@@G@@@[@@@@.     @B@@@@P$        PROC      *1                .   @E@@@@E$DECVJC
)@@G@@*   NAME      5                 . FREE FORMAT DECIMAL @E@@@@E$OCTV*   NAJD
)@@G@@ME      6                 . FREE FORMAT OCTAL   @E@@@@E$HEXV*   NAME    JE
)@@G@@  7                 . FREE FORMAT HEX     @F@@@@E$FD1*    NAME      8   JF
)@@G@@              . INSERT 6 CHARS (1 WORD)   @H@@@@ DO P$(1)>0 , LA    12,+JG
)@@G@@(E$AD 1,1)    . LA[,XU]  A0,P$(1,1),P$(1,2),P$(1,3)   @D@@@@J         EQJH
)@@G@@U       P$(0,0)           . TARGET ADDRESS@B@@@@ DO J=5 , LMJ       11,EJI
)@@G@@DECV$         .   @B@@@@ DO J=6 , LMJ       11,EOCTV$         .   @B@@@@JJ
)@@G@@ DO J=7 , LMJ       11,EHEXV$         .   @B@@@@ DO J=8 , LMJ       11,EJK
)@@G@@FD1$          .   @B@@@@          END                         .   @[@@@@JL
)@@G@@.     @[@@@@.     @B@@@@P$        PROC      *2                .   @G@@@@JM
)@@G@@E$FORMC*  NAME      EFORMC$           . FORM EDITING - SPECIFY CHARACTERJN
)@@G@@@H@@@@ DO P$(2)>0 , LA    14,+(E$AD 2,1 15) . LA[,XU]  A2,P$(2,1),P$(2,2JO
)@@G@@),P$(2,3)   @F@@@@E$FORM*   NAME      EFORM$            . FORM EDITING -JP
)@@G@@ BLANKS USED@E@@@@ DO P$(1)>0 , LA    13,+(E$AD0 1,1)    . LA[,XU]  A1,PJQ
)@@G@@$(1,1)@H@@@@ DO P$(1)>1 , LA    12,+(E$AD 1,2)    . LA[,XU]  A0,P$(1,2),JR
)@@G@@P$(1,3),P$(1,4)   @B@@@@          LMJ       11,P$(0,0)        .   @B@@@@JS
)@@G@@          END                         .   @[@@@@.     @[@@@@.     @^@@@@JT
)@@G@@P$        PROC      *3  @D@@@@E$FDECFL* NAME      0                 . LEJU
)@@G@@ADING CHARS @H@@@@ DO P$(3)>0 , LA    15,+(E$AD 3,1 15) . LA[,XU]  A3,P$JV
)@@G@@(3,1),P$(3,2),P$(3,3)   @F@@@@E$FDECF*  NAME      1                 . FIJW
)@@G@@XED FORMAT DECIMAL FORM @I@@@@E$FDECFZ* NAME      2                 . FIJX
)@@G@@XED FORMAT DECIMAL FORM-LEADING ZEROES    @E@@@@ DO P$(1)>0 , LA    13,+JY
)@@G@@(E$AD0 1,1 15) . LA[,XU]  A1,P$(1,1)@D@@@@P$(9)     EQU       1         JZ
)@@G@@        . SUBFIELD FLAG @F@@@@E$FDECV*  NAME      3                 . FRKA
)@@G@@EE FORMAT DECIMAL FORM  @B@@@@I         EQU       P$(9)             .   KB
)@@G@@@I@@@@ DO P$(1)>I , LA    12,+(E$AD 1,1+I)  . LA[,XU]  A0,P$(1,1+I),P$(1KC
)@@G@@,2+I),P$(1,3+I    @H@@@@ DO P$(2)>1 , LA    14,+(E$AD 2,2 15) . LA[,XU] KD
)@@G@@ A2,P$(2,2),P$(2,3),P$(2,4)   @F@@@@ DO P$(2)>0 , LXI   14,+(E$AD0 2,1 1KE
)@@G@@5) . LXI[,XU]  A2,P$(2,1)     @D@@@@J         EQU       P$(0,0)         KF
)@@G@@  . TARGET ADDRESS@B@@@@ DO J=0 , LMJ       11,EFDECFL$       .   @B@@@@KG
)@@G@@ DO J=1 , LMJ       11,EFDECF$        .   @B@@@@ DO J=2 , LMJ       11,EKH
)@@G@@FDECFZ$       .   @B@@@@ DO J=3 , LMJ       11,EFDECV$        .   @B@@@@KI
)@@G@@          END                         .   @[@@@@.     @[@@@@.     @^@@@@KJ
)@@G@@P$        PROC      *1  @H@@@@E$FLS1*   NAME      EFLS1$            . SIKK
)@@G@@NGLE PRECISION SCIENTIFIC FORMAT    @H@@@@E$FLG1*   NAME      EFLG1$    KL
)@@G@@        . SINGLE PRECISION GENERALIZED FORMAT   @H@@@@E$FLF1*   NAME    KM
)@@G@@  EFLF1$            . SINGLE PRECISION FIXED POINT FORMAT   @E@@@@P$(9) KN
)@@G@@    EQU       1                 . INSTRUCTION FLAG    @H@@@@E$FLS2*   NAKO
)@@G@@ME      EFLS2$            . DOUBLE PRECISION SCIENTIFIC FORMAT    @H@@@@KP
)@@G@@E$FLG2*   NAME      EFLG2$            . DOUBLE PRECISION GENERALIZED FORKQ
)@@G@@MAT   @H@@@@E$FLF2*   NAME      EFLF2$            . DOUBLE PRECISION FIXKR
)@@G@@ED POINT FORMAT   @G@@@@ DO P$(9)=0 , DO P$(1)>1 , DL 13,+(E$AD 1,2) . DKS
)@@G@@L    A1,P$(1,2),P$(1,3) @I@@@@ DO P$(9)=1 , DO P$(1)>1 , LA 13,+(E$AD 1,KT
)@@G@@2) . LA    A1,P$(1,2),P$(1,3),P$(1,4)     @E@@@@ DO P$(1)>0 , LA    12,+KU
)@@G@@(E$AD0 1,1 15) . LA[,XU]  A0,P$(1,1)@B@@@@          LMJ       11,P$(0,0)KV
)@@G@@        .   @#@@@@          END     @[@@@@.     @[@@@@.     @^@@@@P$    KW
)@@G@@    PROC      *1  @F@@@@E$TIME*   NAME      ETIME$            . EDIT A TKX
)@@G@@IME (HH:MM:SS)    @F@@@@E$DAY1*   NAME      EDAY1$            . EDIT A DKY
)@@G@@ATE (MM/DD/YY)    @F@@@@E$DAY2*   NAME      EDAY2$            . EDIT A DKZ
)@@G@@ATE (DD MMM YY)   @G@@@@E$DAY3*   NAME      EDAY3$            . EDIT A DLA
)@@G@@ATE (MONTH DD, YEAR)    @F@@@@E$DAY4*   NAME      EDAY4$            . EDLB
)@@G@@IT A DATE (YYYYMMDD)    @E@@@@E$DAY5*   NAME      EDAY5$            . EDLC
)@@G@@IT A DATE (YYMMDD)@I@@@@E$WDAY1*  NAME      EWDAY1$           . EDIT AN LD
)@@G@@ABBRIEVIATED WEEKDAY (MON, TUE,.    @I@@@@E$WDAY2*  NAME      EWDAY2$   LE
)@@G@@        . EDIT A WEEKDAY (MONDAY, TUESDAY)N, TUE,.    @H@@@@ DO P$(1)>0 LF
)@@G@@, LA    12,+(E$AD 1,1)    . LA[,XU]  A0,P$(1,1),P$(1,2),P$(1,3)   @B@@@@LG
)@@G@@          LMJ       11,P$(0,0)        .   @#@@@@          END     @[@@@@LH
)@@G@@.     @[@@@@.     @^@@@@P$        PROC      *0,2@G@@@@E$TD*     NAME    LI
)@@G@@  ETIME$            . EDIT CURRENT TIME (HH:MM:SS)    @G@@@@E$DAT1*   NALJ
)@@G@@ME      EDAY1$            . EDIT CURRENT DATE (MM/DD/YY)    @G@@@@E$DAT2LK
)@@G@@*   NAME      EDAY2$            . EDIT CURRENT DATE (DD MMM YY)   @H@@@@LL
)@@G@@E$DAT3*   NAME      EDAY3$            . EDIT CURRENT DATE (MONTH DD, YEALM
)@@G@@R)    @G@@@@E$DAT4*   NAME      EDAY4$            . EDIT CURRENT DATE (YLN
)@@G@@YYYMMDD)    @F@@@@E$DAT5*   NAME      EDAY5$            . EDIT CURRENT DLO
)@@G@@ATE (YYMMDD)@H@@@@E$WDAT1*  NAME      EWDAY1$           . EDIT CURRENT WLP
)@@G@@EEKDAT (MON, TUE,...)   @G@@@@E$WDAT2*  NAME      EWDAY2$           . EDLQ
)@@G@@IT CURRENT WEEKDAT (MONDAY,..)@ @@@@          ER        TDATE$    @B@@@@LR
)@@G@@          LMJ       11,P$(0,0)        .   @#@@@@          END     @[@@@@LS
)@@G@@/.    @ @@@@.   PACKET GENERATING PROCS   @[@@@@.     @#@@@@P$        PRLT
)@@G@@OC    @E@@@@E$PKTXA*  NAME      3                 . EXTENDED ASCII ALPHALU
)@@G@@@D@@@@E$PKTA*   NAME      2                 . ASCII FLAG    @F@@@@E$PKT*LV
)@@G@@    NAME      1                 . GENERATE SMALL PACKET     @E@@@@E$PKTFLW
)@@G@@*   NAME      0                 . GENERATE BIG PACKET @^@@@@A('MSG')  EQLX
)@@G@@U       '&' @^@@@@A('FPS')  EQU       1   @^@@@@A('FPR')  EQU       1   LY
)@@G@@@^@@@@A('DPC')  EQU       0   @^@@@@A('SPC')  EQU       0   @^@@@@A('XAFLZ
)@@G@@')  EQU       0   @B@@@@A('ASC')  EQU       0                 .   @E@@@@MA
)@@G@@A('ASI')  EQU       0                 . INPUT ASCII FLAG    @B@@@@A('MGAMB
)@@G@@')  EQU       '&'               .   @B@@@@A('DPA')  EQU       0         MC
)@@G@@        .   @B@@@@A('SPA')  EQU       0                 .   @B@@@@A('TBLMD
)@@G@@')  EQU       1*/17             .   @C@@@@ DO P$>2 ,I DO P$-2 ,A(P$(I+1,ME
)@@G@@1)) EQU P$(I+1,2) @ @@@@Z         FORM      6,6,6,18  @ @@@@Z1        FOMF
)@@G@@RM      6,6,6,6,12@B@@@@Z2        FORM      9,9,18            .   @C@@@@MG
)@@G@@          Z         0,A('MSG'),P$(1,1),P$(1,2)  @^@@@@          +       MH
)@@G@@  0,0 @F@@@@          +         A('FPS'),A('FPR'),0,A('ASC'),A('ASI'),0 MI
)@@G@@.     @^@@@@          +         0,0 @^@@@@          +         0   @E@@@@MJ
)@@G@@ DO P$(0,0)>1 , + E$ASC$,0            . ASCII ENTRY POINT   @D@@@@ DO P$MK
)@@G@@(0,0)<2 , + 0,0                 . FIELDATA ONLY @^@@@@ DO P$(0,0)=1 , ENML
)@@G@@D     @D@@@@          Z1        A('DPC'),A('SPC'),0,0,A('MGA')    @B@@@@MM
)@@G@@          Z         0,0,0,0           .   @^@@@@          +         0   MN
)@@G@@@^@@@@          +         0   @ @@@@ DO P$(0,0)=0 , END          .@E@@@@MO
)@@G@@ DO +(P$(0,0)>1)**(A('TBL')=1*/17) ,A('TBL') EQU -E$DTBL$ . @D@@@@      MP
)@@G@@    Z2        A('DPA'),A('SPA'),A('TBL') ..     @D@@@@          Z       MQ
)@@G@@  A('XAF')*(P$(0,0)=3),0,0,E$ASCII$.@B@@@@          +         0         MR
)@@G@@        .   @^@@@@ DO P$(0,0)=2 , END .   @B@@@@          +         0,E$MS
)@@G@@XALF$         .   @B@@@@          END                         .   @[@@@@MT
)@@G@@/.    @D@@@@.   ASCII-FIELDATA CONVERSION TABLE GENERATING PROC   @[@@@@MU
)@@G@@.     @B@@@@P$        PROC                        .   @D@@@@E$TBL*    NAMV
)@@G@@ME      0                 . 64 WORD TABLE @D@@@@E$TBLX*   NAME      1   MW
)@@G@@              . 128 WORD TABLE@[@@@@.     @^@@@@.   FIELDATA TO ASCII   MX
)@@G@@@[@@@@.     @B@@@@F('@')    EQU       0100              .   @B@@@@F('[')MY
)@@G@@    EQU       0133              .   @B@@@@F(']')    EQU       0135      MZ
)@@G@@        .   @B@@@@F('#')    EQU       0043              .   @B@@@@F('^')NA
)@@G@@    EQU       0136              .   @B@@@@F(' ')    EQU       0040      NB
)@@G@@        .   @C@@@@I DO 26 ,F(5+I)  EQU  0100+I          . LETTERS @B@@@@NC
)@@G@@F(')')    EQU       0051              .   @B@@@@F('-')    EQU       0055ND
)@@G@@              .   @B@@@@F('+')    EQU       0053              .   @C@@@@NE
)@@G@@I DO 3 ,F(042+I)  EQU  073+I          . <=>     @B@@@@F('&')    EQU     NF
)@@G@@  0046              .   @B@@@@F('$')    EQU       0044              .   NG
)@@G@@@B@@@@F('*')    EQU       0052              .   @B@@@@F('(')    EQU     NH
)@@G@@  0050              .   @B@@@@F('%')    EQU       0045              .   NI
)@@G@@@B@@@@F(':')    EQU       0072              .   @B@@@@F('?')    EQU     NJ
)@@G@@  0077              .   @B@@@@F('!')    EQU       0041              .   NK
)@@G@@@B@@@@F(',')    EQU       0054              .   @B@@@@F('\')    EQU     NL
)@@G@@  0134              .   @C@@@@I DO 10 ,F(057+I) EQU 057+I           . DINM
)@@G@@GITS  @B@@@@F(072)    EQU       0047              .   @B@@@@F(';')    EQNN
)@@G@@U       0073              .   @B@@@@F('/')    EQU       0057            NO
)@@G@@  .   @B@@@@F('.')    EQU       0056              .   @B@@@@F('"')    EQNP
)@@G@@U       0042              .   @B@@@@F(077)    EQU       0137            NQ
)@@G@@  .   @B@@@@ DO P$(0,0) ,I DO 64 ,F(I+63) EQU 0   .   @[@@@@/.    @^@@@@NR
)@@G@@.   ASCII TO FIELDATA   @[@@@@.     @D@@@@I DO 040 ,A(I-1)  EQU  '?'    NS
)@@G@@        . CHARACTERS    @[@@@@.     @B@@@@A(040)    EQU       ' '       NT
)@@G@@        .   @B@@@@A(041)    EQU       '!'               .   @B@@@@A(042)NU
)@@G@@    EQU       '"'               .   @B@@@@A(043)    EQU       '#'       NV
)@@G@@        .   @B@@@@A(044)    EQU       '$'               .   @B@@@@A(045)NW
)@@G@@    EQU       '%'               .   @B@@@@A(046)    EQU       '&'       NX
)@@G@@        .   @B@@@@A(047)    EQU       ''''              .   @B@@@@A(050)NY
)@@G@@    EQU       '('               .   @B@@@@A(051)    EQU       ')'       NZ
)@@G@@        .   @B@@@@A(052)    EQU       '*'               .   @B@@@@A(053)OA
)@@G@@    EQU       '+'               .   @B@@@@A(054)    EQU       ','       OB
)@@G@@        .   @B@@@@A(055)    EQU       '-'               .   @B@@@@A(056)OC
)@@G@@    EQU       '.'               .   @B@@@@A(057)    EQU       '/'       OD
)@@G@@        .   @C@@@@I DO 10 ,A(057+I) EQU 057+I           . DIGITS  @B@@@@OE
)@@G@@A(072)    EQU       ':'               .   @B@@@@A(073)    EQU       ';' OF
)@@G@@              .   @B@@@@A(074)    EQU       '<'               .   @B@@@@OG
)@@G@@A(075)    EQU       '='               .   @B@@@@A(076)    EQU       '>' OH
)@@G@@              .   @B@@@@A(077)    EQU       '?'               .   @B@@@@OI
)@@G@@A(0100)   EQU       '@'               .   @C@@@@I DO 26 ,A(0100+I) EQU 5OJ
)@@G@@+I            . LETTERS @B@@@@A(0133)   EQU       '['               .   OK
)@@G@@@B@@@@A(0134)   EQU       '\'               .   @B@@@@A(0135)   EQU     OL
)@@G@@  ']'               .   @B@@@@A(0136)   EQU       '^'               .   OM
)@@G@@@B@@@@A(0137)   EQU       077               .   @D@@@@I DO 040 ,A(0137+ION
)@@G@@) EQU A(077+I)      . FOLD OVER     @[@@@@.     @B@@@@.   PROC TO INSERTOO
)@@G@@ NEW CONVERSION VALUES  @[@@@@.     @B@@@@Q$        PROC      *1,0      OP
)@@G@@        .   @B@@@@GETIT*    NAME                        .   @G@@@@ DO   OQ
)@@G@@     Q$(1,1)='FD' ,J DO P$(I)/2 ,F*(P$(I,J*2)) EQU P$(I,J*2+1) .  @G@@@@OR
)@@G@@ DO        Q$(1,1)='AS' ,J DO P$(I)/2 ,A*(P$(I,J*2)) EQU P$(I,J*2+1) .  OS
)@@G@@@B@@@@          END                         .   @[@@@@.     @#@@@@.   GEOT
)@@G@@NERATE TABLE@[@@@@.     @C@@@@I         DO        P$-1 ,  GETIT  P$(I,1)OU
)@@G@@ .    @B@@@@FR        FORM      6,6,6,9,9         .   @E@@@@ DO P$(0,0)=OV
)@@G@@0 ,I DO 64 , FR  A(I-1),A(I+63),0,0,F(I-1) .    @D@@@@ DO P$(0,0) ,I DO OW
)@@G@@  128 , FR A(I-1),0,0,0,F(I-1) .    @B@@@@          END                 OX
)@@G@@        .   @[@@@@/.    @ @@@@.   INTERNAL CHARACTER LINKS  @F@@@@.   THOY
)@@G@@ESE DEFINE THE CELLS SETUP BY THE GENCHARS PROC. WE KEEP    @C@@@@.   THOZ
)@@G@@EM TOGETHER FOR THE SAKE OF MANAGEABILITY.@[@@@@.     @B@@@@          DEPA
)@@G@@F                         .   @C@@@@QT        EQU       Q4              PB
)@@G@@  . ALSO T3 @D@@@@XTRA      EQUF      E$CHAR$+0,,S1     . INITIAL FUDGE PC
)@@G@@@C@@@@SLASH     EQUF      E$CHAR$+2,,S2     . '/'     @E@@@@FSHIFT    EQPD
)@@G@@UF      E$CHAR$+2,,S3     . DEC FRAC SHIFT COUNT@C@@@@PERIOD    EQUF    PE
)@@G@@  E$CHAR$+2,,S4     . '.'     @E@@@@SHFT      EQUF      E$CHAR$+2,,QT   PF
)@@G@@  . 72 - CHARS PER WORD @D@@@@MASK      EQUF      E$CHAR$+3,,QT     . 07PG
)@@G@@7 OR 0777   @C@@@@MINUS     EQUF      E$CHAR$+4,,S2     . '-'     @C@@@@PH
)@@G@@COLON     EQUF      E$CHAR$+4,,S4     . ':'     @C@@@@. ATSIGN  EQUF    PI
)@@G@@  E$CHAR$+5,,QT     . '@'     @C@@@@PLUS      EQUF      E$CHAR$+6,,S2   PJ
)@@G@@  . '+'     @C@@@@COMMA     EQUF      E$CHAR$+6,,S4     . ','     @D@@@@PK
)@@G@@MODINV    EQUF      E$CHAR$+6,,S5     . INVERSE MODE  @E@@@@SCNT1     EQPL
)@@G@@UF      E$CHAR$+8,,S2     . CHARS PER WORD -1   @D@@@@SCNT      EQUF    PM
)@@G@@  E$CHAR$+8,,S4     . CHARS PER WORD@F@@@@DCNT      EQUF      E$CHAR$+8,PN
)@@G@@,S5     . CHARS PER DOUBLE WORD     @F@@@@DCNT1     EQUF      E$CHAR$+10PO
)@@G@@,,S2    . CHARS PER DOUBLE WORD -1  @E@@@@E$PTRS$   EQUF      E$CHAR$+10PP
)@@G@@,,01    . XQT TABLE POINTERS  @C@@@@BLANKS    EQU       E$CHAR$+13      PQ
)@@G@@  . SPACES  @C@@@@BLANK     EQUF      BLANKS,,8         . ONLY ONE@C@@@@PR
)@@G@@EZERO     EQU       E$CHAR$           . ZERO    @D@@@@FUDGE     EQU     PS
)@@G@@  E$CHAR$           . FINAL FUDGE   @C@@@@ONEZERO   EQU       E$CHAR$+12PT
)@@G@@        . (1,0)   @[@@@@.     @A@@@@.     ADRASCX JUMP TABLE INDICES    PU
)@@G@@@[@@@@.     @G@@@@ECNVT     EQU       0                 . CONVERT - SET PV
)@@G@@UP ASCII XLATION  @E@@@@EADAY3    EQU       1                 . EDAY3$ APW
)@@G@@SCII CODE   @F@@@@EQWM      EQU       2                 . CHECK FOR QUARPX
)@@G@@TERWORD MODE@E@@@@EAWDAY    EQU       3                 . ASCII WEEKDAY PY
)@@G@@CODE  @F@@@@EXLATE    EQU       4                 . TRANSLATE 1 CHARACTEPZ
)@@G@@R     @[@@@@.     @C@@@@EDIT$PROC* PROC                       . LINKS   QA
)@@G@@@[@@@@.     @^@@@@.   TRANSLATE CHARACTER @[@@@@.     @B@@@@P$        PRQB
)@@G@@OC      *1                .   @B@@@@XLATE**   NAME      01              QC
)@@G@@  .   @F@@@@ DO P$(1)>0 , DO 1-(P$(1,1)=14) , LA 14,P$(1,1),P$(1,2),P$(1QD
)@@G@@,3) . @G@@@@          LA        15,ADRASCX        . 15 HAS ASCII CODE BAQE
)@@G@@SE ADDRESS  @B@@@@          UNLIST                      .   @D@@@@      QF
)@@G@@    TZ        EASCII            . ASCII ANYTHING@D@@@@          LMJ     QG
)@@G@@  15,EXLATE,15      . YES, PROCESS  @C@@@@          LM,15     14,,14    QH
)@@G@@        . BE SAFE @B@@@@          LIST                        .   @B@@@@QI
)@@G@@          END                         .   @[@@@@.     @D@@@@.   ASCII, FQJ
)@@G@@IELDATA CHARS, SHIFT COUNTS, MASKS, ETC.  @B@@@@.   DEFINED AND GENERATEQK
)@@G@@D BY EDIT$PROC.   @B@@@@P$        PROC                        .   @B@@@@QL
)@@G@@GENCHARS** NAME                       .   @B@@@@R         FORM      6,6,QM
)@@G@@6,6,12        .   @B@@@@RR        FORM      6,6,6,18          .   @D@@@@QN
)@@G@@          +         07777D            . ROUNDING UP   @E@@@@          R QO
)@@G@@        0,'/',34,'.',72-6 . SLASH,PERIOD,SHFT   @B@@@@          R       QP
)@@G@@  0,057,31,056,72-9 .   @D@@@@          R         1,'-',28,':',0777 . MIQQ
)@@G@@NUS,COLON   @C@@@@          R         1,055,24,072,'@'  . ATSIGN  @E@@@@QR
)@@G@@          +         1,'+',21,',',1,0  . PLUS,COMMA,MODINV   @B@@@@      QS
)@@G@@    +         1,053,18,054,0,0  .   @D@@@@          +         1,6-1,14,6QT
)@@G@@,12,0   . SCNT1,CNT,DCNT@B@@@@          +         1,4-1,11,4,8,0    .   QU
)@@G@@@D@@@@          RR        0,12-1,8,EDIT$T   . DCNT,E$PTRS$  @B@@@@      QV
)@@G@@    RR        0,8-1,4,EDIT$TA   .   @C@@@@          +         1,0       QW
)@@G@@        . ONEZERO @C@@@@          +         '      '          . BLANKS  QX
)@@G@@@D@@@@          +         040,040,040,040   . ASCII BLANKS  @B@@@@      QY
)@@G@@    END                         .   @B@@@@          END                 QZ
)@@G@@        .   @[@@@@/.    @G@@@@.   EXTERNAL DEFINITIONS  (FOR JOE USER). RA
)@@G@@JOE SUPPLIES PACKET ADDRESS.  @[@@@@.     @F@@@@P$        PROC      *1  RB
)@@G@@              . FIELD IS ADDR OF PACKET   @B@@@@A$EFIELDS* NAME         RC
)@@G@@              .   @[@@@@.     @D@@@@PKT       EQUF      P$(1,1),P$(1,2) RD
)@@G@@  . DEFINE STUFF  @[@@@@.     @C@@@@QT        EQU       05              RE
)@@G@@  . 05 OR T3@D@@@@IL*       EQUF      PKT,,11             IMAGE LENGTH  RF
)@@G@@@D@@@@ILOC*     EQUF      PKT,,01             IMAGE LOCATION@G@@@@FPS*  RG
)@@G@@    EQUF      PKT+2,,13           SCALE FOR FLOATING POINT EDIT   @G@@@@RH
)@@G@@FPR*      EQUF      PKT+2,,12           FLOATING POINT ROUNDING OPTION  RI
)@@G@@@G@@@@AEMSGC*   EQUF      PKT+6,,QT         . EMSG$ ASCII SIGNAL CHARACTRJ
)@@G@@ER    @I@@@@DPC*      EQUF      PKT+10,,Q1        . ASCII CHARACTER FOR RK
)@@G@@DOUBLE PRECISION SC     @I@@@@SPC*      EQUF      PKT+10,,Q2        . ASRL
)@@G@@CII CHARACTER FOR SINGLE PRECISION SC     @D@@@@          END           RM
)@@G@@              . ALL FOR YOU   @[@@@@/.    @G@@@@. PROCEDURES FOR AEDIT$ RN
)@@G@@- REWRITTEN BY JEFF JEWETT - 11/75 - UOM SYSTEMS@E@@@@. REFER TO DOCUMENRO
)@@G@@TATION ACCOMPANYING FIELDATA EDIT$ PROCS  @[@@@@.     @#@@@@. BEGIN USERRP
)@@G@@ PROCS@[@@@@.     @B@@@@P$        PROC      *0,1              .   @E@@@@RQ
)@@G@@A$EDITX*  NAME      0                 . CLOSE EDIT$ PACKET  @F@@@@A$ECOLRR
)@@G@@N*  NAME      1                 . RETURN WITH COL NUM IN A0 @F@@@@A$EMSGRS
)@@G@@R*  NAME      3                 . REENTER MESSAGE EDITOR    @H@@@@A$ECLERT
)@@G@@AR* NAME      4                 . CLEAR OUTPUT BUFFER, SET COL TO 0     RU
)@@G@@@D@@@@J         EQU       P$(0,0)           . TARGET ADDRESS@B@@@@ DO J=RV
)@@G@@0 , LMJ       11,AEDITX$        .   @B@@@@ DO J=1 , LMJ       11,AECOLN$RW
)@@G@@        .   @B@@@@ DO J=3 , LMJ       11,AEMSGR$        .   @B@@@@ DO J=RX
)@@G@@4 , LMJ       11,AECLEAR$       .   @B@@@@          END                 RY
)@@G@@        .   @[@@@@.     @[@@@@.     @B@@@@P$        PROC      *1        RZ
)@@G@@        .   @G@@@@A$EDIT*   NAME      1                 . ENTER AND OPENSA
)@@G@@ EDIT$ PACKET     @H@@@@A$EDITR*  NAME      2                 . REENTER SB
)@@G@@EDIT$ PACKET AFTER E$DITX     @E@@@@A$ECHAR*  NAME      3               SC
)@@G@@  . INSERT 1 CHARACTER  @F@@@@A$ECOL*   NAME      4                 . MOSD
)@@G@@VE TO SPECIFIED COL     @F@@@@A$ESKIP*  NAME      5                 . SKSE
)@@G@@IP SPECIFIED NUM OF COLS@E@@@@A$EMSG*   NAME      6                 . ENSF
)@@G@@TER MESSAGE EDITOR@H@@@@ DO P$(1)>0 , LA    12,+(E$AD 1,1 15) . LA[,XU] SG
)@@G@@ A0,P$(1,1),P$(1,2),P$(1,3)   @D@@@@J         EQU       P$(0,0)         SH
)@@G@@  . TARGET ADDRESS@B@@@@ DO J=1 , LMJ       11,AEDIT$         .   @B@@@@SI
)@@G@@ DO J=2 , LMJ       11,AEDITR$        .   @B@@@@ DO J=3 , LMJ       11,ASJ
)@@G@@ECHAR$        .   @B@@@@ DO J=4 , LMJ       11,AECOL$         .   @B@@@@SK
)@@G@@ DO J=5 , LMJ       11,AESKIP$        .   @B@@@@ DO J=6 , LMJ       11,ASL
)@@G@@EMSG$         .   @B@@@@          END                         .   @[@@@@SM
)@@G@@.     @[@@@@.     @B@@@@P$        PROC      *1                .   @E@@@@SN
)@@G@@A$EFD2*   NAME      1                 . INSERT TWO WORDS    @G@@@@ DO P$SO
)@@G@@(1)>0 , DL    12,+(E$AD 1,1)    . DL       A0,P$(1,1),P$(1,2)     @E@@@@SP
)@@G@@          I$        074,013,11,0,0,AEFD2$ . LMJ X11,AEFD2$  @B@@@@      SQ
)@@G@@    END                         .   @[@@@@.     @[@@@@.     @B@@@@P$    SR
)@@G@@    PROC      *1                .   @D@@@@A$ECOPY*  NAME      1         SS
)@@G@@        . STRING COPY   @F@@@@A$EPACK*  NAME      2                 . STST
)@@G@@RING COPY WITH PACKING  @E@@@@ DO P$(1)>0 , LA    13,+(E$AD0 1,1 15) . LSU
)@@G@@A[,XU]  A1,P$(1,1)@H@@@@ DO P$(1)>1 , LA    12,+(E$AD 1,2 15) . LA[,XU] SV
)@@G@@ A0,P$(1,2),P$(1,3),P$(1,4)   @F@@@@ DO P$(0)>1 , LXI   12,+(E$AD0 0,1 1SW
)@@G@@5) . LXI[,XU]  A0,P$(0,1)     @D@@@@J         EQU       P$(0,0)         SX
)@@G@@  . TARGET ADDRESS@B@@@@ DO J=1 , LMJ       11,AECOPY$        .   @B@@@@SY
)@@G@@ DO J=2 , LMJ       11,AEPACK$        .   @B@@@@          END           SZ
)@@G@@              .   @[@@@@.     @[@@@@.     @B@@@@P$        PROC      *1  TA
)@@G@@              .   @E@@@@A$EOCTF*  NAME      1                 . FIXED FOTB
)@@G@@RMAT OCTAL  @E@@@@A$EDECF*  NAME      2                 . FIXED FORMAT DTC
)@@G@@ECIMAL@H@@@@A$EDCFZ*  NAME      4                 . FIXED FORMAT DECIMALTD
)@@G@@-LEADING ZEROES   @E@@@@ DO P$(1)>0 , LA    13,+(E$AD0 1,1 15) . LA[,XU]TE
)@@G@@  A1,P$(1,1)@D@@@@P$(9)     EQU       1                 . SUBFIELD FLAG TF
)@@G@@@E@@@@A$EDECV*  NAME      5                 . FREE FORMAT DECIMAL @E@@@@TG
)@@G@@A$EOCTV*  NAME      6                 . FREE FORMAT OCTAL   @F@@@@A$EFD1TH
)@@G@@*   NAME      8                 . INSERT 6 CHARS (1 WORD)   @B@@@@I     TI
)@@G@@    EQU       P$(9)             .   @I@@@@ DO P$(1)>I , LA    12,+(E$AD TJ
)@@G@@1,1+I)  . LA[,XU]  A0,P$(1,1+I),P$(1,2+I),P$(1,3+I    @D@@@@J         EQTK
)@@G@@U       P$(0,0)           . TARGET ADDRESS@B@@@@ DO J=1 , LMJ       11,ATL
)@@G@@EOCTF$        .   @B@@@@ DO J=2 , LMJ       11,AEDECF$        .   @B@@@@TM
)@@G@@ DO J=4 , LMJ       11,AEDECFZ$       .   @B@@@@ DO J=5 , LMJ       11,ATN
)@@G@@EDECV$        .   @B@@@@ DO J=6 , LMJ       11,AEOCTV$        .   @B@@@@TO
)@@G@@ DO J=8 , LMJ       11,AEFD1$         .   @B@@@@          END           TP
)@@G@@              .   @[@@@@/.    @[@@@@.     @^@@@@P$        PROC      *1  TQ
)@@G@@@H@@@@A$EFLS1*  NAME      AEFLS1$           . SINGLE PRECISION SCIENTIFITR
)@@G@@C FORMAT    @H@@@@A$EFLG1*  NAME      AEFLG1$           . SINGLE PRECISITS
)@@G@@ON GENERALIZED FORMAT   @H@@@@A$EFLF1*  NAME      AEFLF1$           . SITT
)@@G@@NGLE PRECISION FIXED POINT FORMAT   @E@@@@P$(9)     EQU       1         TU
)@@G@@        . INSTRUCTION FLAG    @H@@@@A$EFLS2*  NAME      AEFLS2$         TV
)@@G@@  . DOUBLE PRECISION SCIENTIFIC FORMAT    @H@@@@A$EFLG2*  NAME      AEFLTW
)@@G@@G2$           . DOUBLE PRECISION GENERALIZED FORMAT   @H@@@@A$EFLF2*  NATX
)@@G@@ME      AEFLF2$           . DOUBLE PRECISION FIXED POINT FORMAT   @G@@@@TY
)@@G@@ DO P$(9)=0 , DO P$(1)>1 , DL 13,+(E$AD 1,2) . DL    A1,P$(1,2),P$(1,3) TZ
)@@G@@@I@@@@ DO P$(9)=1 , DO P$(1)>1 , LA 13,+(E$AD 1,2) . LA    A1,P$(1,2),P$UA
)@@G@@(1,3),P$(1,4)     @E@@@@ DO P$(1)>0 , LA    12,+(E$AD0 1,1 15) . LA[,XU]UB
)@@G@@  A0,P$(1,1)@E@@@@          I$        074,013,11,0,0,P$(0,0) . LMJ X11,AUC
)@@G@@ERTN$ @#@@@@          END     @[@@@@.     @[@@@@.     @^@@@@P$        PRUD
)@@G@@OC      *1  @F@@@@A$ETIME*  NAME      AETIME$           . EDIT A TIME (HUE
)@@G@@H:MM:SS)    @F@@@@A$EDAY1*  NAME      AEDAY1$           . EDIT A DATE (MUF
)@@G@@M/DD/YY)    @F@@@@A$EDAY2*  NAME      AEDAY2$           . EDIT A DATE (DUG
)@@G@@D MMM YY)   @G@@@@A$EDAY3*  NAME      AEDAY3$           . EDIT A DATE (MUH
)@@G@@ONTH DD, YEAR)    @F@@@@A$EDAY4*  NAME      AEDAY4$           . EDIT A DUI
)@@G@@ATE (YYYYMMDD)    @E@@@@A$EDAY5*  NAME      AEDAY5$           . EDIT A DUJ
)@@G@@ATE (YYMMDD)@H@@@@ DO P$(1)>0 , LA    12,+(E$AD 1,1)    . LA[,XU]  A0,P$UK
)@@G@@(1,1),P$(1,2),P$(1,3)   @E@@@@          I$        074,013,11,0,0,P$(0,0)UL
)@@G@@ . LMJ X11,AERTN$ @#@@@@          END     @[@@@@.     @[@@@@.     @^@@@@UM
)@@G@@P$        PROC      *0,2@G@@@@A$ETD*    NAME      AETIME$           . EDUN
)@@G@@IT CURRENT TIME (HH:MM:SS)    @G@@@@A$EDAT1*  NAME      AEDAY1$         UO
)@@G@@  . EDIT CURRENT DATE (MM/DD/YY)    @G@@@@A$EDAT2*  NAME      AEDAY2$   UP
)@@G@@        . EDIT CURRENT DATE (DD MMM YY)   @H@@@@A$EDAT3*  NAME      AEDAUQ
)@@G@@Y3$           . EDIT CURRENT DATE (MONTH DD, YEAR)    @G@@@@A$EDAT4*  NAUR
)@@G@@ME      AEDAY4$           . EDIT CURRENT DATE (YYYYMMDD)    @F@@@@A$EDATUS
)@@G@@5*  NAME      AEDAY5$           . EDIT CURRENT DATE (YYMMDD)@ @@@@      UT
)@@G@@    ER        TDATE$    @E@@@@          I$        074,013,11,0,0,P$(0,0)UU
)@@G@@ . LMJ X11,AERTN$ @#@@@@          END     @[@@@@/.    @ @@@@.   PACKET GUV
)@@G@@ENERATING PROCS   @[@@@@.     @#@@@@P$        PROC    @F@@@@A$EPKT*   NAUW
)@@G@@ME      1                 . GENERATE SMALL PACKET     @E@@@@A$EPKTF*  NAUX
)@@G@@ME      0                 . GENERATE BIG PACKET @C@@@@A(1)      EQU     UY
)@@G@@  '&'                 . MSG   @C@@@@A(2)      EQU       1               UZ
)@@G@@    . FPS   @C@@@@A(3)      EQU       1                   . FPR   @C@@@@VA
)@@G@@A(4)      EQU       0                   . DPC   @C@@@@A(5)      EQU     VB
)@@G@@  0                   . SPC   @B@@@@B(1)      EQU       'MSG'           VC
)@@G@@  .   @B@@@@B(2)      EQU       'FPS'             .   @B@@@@B(3)      EQVD
)@@G@@U       'FPR'             .   @B@@@@B(4)      EQU       'DPC'           VE
)@@G@@  .   @B@@@@B(5)      EQU       'SPC'             .   @D@@@@J DO 5 ,I DOVF
)@@G@@ P$-2 , DO P$(I+1,1)=B(J) ,Z(I) EQU J .   @D@@@@I DO P$-2 ,A(Z(I)) EQU PVG
)@@G@@$(I+1,2)      . NON-DEFAULT   @ @@@@Z         FORM      6,6,6,18  @ @@@@VH
)@@G@@Z1        FORM      6,6,6,6,12@B@@@@Z2        FORM      9,9,18          VI
)@@G@@  .   @B@@@@          Z         0,0,P$(1,1),P$(1,2) . @^@@@@          + VJ
)@@G@@        0,0 @B@@@@          +         A(2),A(3),0,1,1,0 .   @^@@@@      VK
)@@G@@    +         0,0 @^@@@@          +         0   @G@@@@          +       VL
)@@G@@  E$ASC$,0          . NON-XLATING ASCII ENTRY POINT   @A@@@@          Z1VM
)@@G@@        1,1,0,0,A(1)    @B@@@@          Z         0,0,0,0           .   VN
)@@G@@@^@@@@          +         0   @^@@@@          +         0   @A@@@@      VO
)@@G@@    Z2        A(4),A(5),0 .   @B@@@@          Z         0,0,0,E$ASCII$  VP
)@@G@@  .   @B@@@@          +         0                 .   @B@@@@          ENVQ
)@@G@@D                         .   ___   @F@@@@A$EDAY2*  NAME      AEDAY2$   VR
)@@G@@        . EDIT A DATE (DD MMM YY)   @G@@@@A$EDAY*[S@@@*SDFF*@^@@@@P     VS
)@@G@@    PROC      *1  @#@@@@ELT$PKT*  NAME    @^@@@@          RES       14  VT
)@@G@@@I@@@@          INCLUDE   'ELT$PKT'         . PASS TWO WILL PICK UP THE VU
)@@G@@REAL DEFNITION    @#@@@@          END     ___@@@@@@@@@@@@@@@@@@@@@@@@@@@VV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@VW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@*[S@@@*SDFF*@[@@@@.     @F@@@@. THIS PROC DEFINEVX
)@@G@@S THE FIELDS WITHIN AN I/O PACKET. TO CALL:     @[@@@@.     @ @@@@. <P> VY
)@@G@@    IOPKT$    <ADDR>,<X>@[@@@@.     @G@@@@. <P> SPECIFIES A PREFIX TO BEVZ
)@@G@@ USED IN DEFINING THE LABELS OF THE FIELDS@G@@@@. AND DEFAULTS TO 'IO$' WA
)@@G@@IF NOT SPECIFIED. <ADDR>,<X> SPECIFY AN OPTIONAL@G@@@@. ADDRESS ON WHICHWB
)@@G@@ THE DEFINITIONS ARE TO BE BASED, DEFAULTING TO ZERO. @[@@@@.     @C@@@@WC
)@@G@@. THE FORMAT OF AN I/O PACKET IS AS FOLLOWS:    @[@@@@.     @B@@@@.     WD
)@@G@@                        I/O PACKET  @F@@@@.    -------------------------WE
)@@G@@------------------------------------@F@@@@. +0 :                        WF
)@@G@@   IO$FN                           :@F@@@@. +1 :                        WG
)@@G@@                                   :@F@@@@.    -------------------------WH
)@@G@@------------------------------------@F@@@@. +2 :                   : IO$WI
)@@G@@IAI  :           IO$IAA            :@F@@@@.    -------------------------WJ
)@@G@@------------------------------------@F@@@@. +3 : IO$STA  : IO$FNC  : IO$WK
)@@G@@AFC  :           IO$FWC            :@F@@@@.    -------------------------WL
)@@G@@------------------------------------@F@@@@. +4 :            IO$WC       WM
)@@G@@     :            IO$BA            :@F@@@@.    -------------------------WN
)@@G@@------------------------------------@F@@@@. +5 :                        WO
)@@G@@   IO$DA                           :@F@@@@.    -------------------------WP
)@@G@@------------------------------------@F@@@@. +6 :                        WQ
)@@G@@   IO$SS                           :@F@@@@.    -------------------------WR
)@@G@@------------------------------------@F@@@@. +7 :                        WS
)@@G@@  IO$SDA                           :@F@@@@.    -------------------------WT
)@@G@@------------------------------------@[@@@@.     @A@@@@. THE MEANINGS OF WU
)@@G@@THE FIELDS ARE:   @[@@@@.     @A@@@@.   IO$PKT  THE PACKET BASE ADDRESS.WV
)@@G@@@ @@@@.   IO$FN   THE FILENAME.     @A@@@@.   IO$IAI  INTERRUPT ACTIVITYWW
)@@G@@ ID.  @B@@@@.   IO$IAA  INTERRUPT ACTIVITY ADDRESS.   @B@@@@.   IO$STF  WX
)@@G@@STATUS FIELD (H1 OF WORD 3).  @ @@@@.   IO$STA  RETURNED STATUS.  @ @@@@WY
)@@G@@.   IO$FNC  I/O FUNCTION.     @A@@@@.   IO$AFC  ABNORMAL FRAME COUNT.   WZ
)@@G@@@ @@@@.   IO$FWC  FINAL WORD COUNT. @C@@@@.   IO$BAW  BUFFER ACCESS WORDXA
)@@G@@ (IO$WC,IO$BA).   @^@@@@.   IO$WC   WORD COUNT. @ @@@@.   IO$BA   BUFFERXB
)@@G@@ ADDRESS.   @D@@@@.   IO$DA   DISC ADDRESS (SECTORS, WORDS FOR A WAD).  XC
)@@G@@@ @@@@.   IO$SS   SEARCH SENTINAL.  @A@@@@.   IO$SDA  SEARCH DRUM ADDRESXD
)@@G@@S.    @[@@@@.     @G@@@@. WHEN  <P>  IS  GIVEN ON THE PROC CALL, ALL OF XE
)@@G@@THE ABOVE MNEMONICS WILL@C@@@@. BEGIN WITH <P> INSTEAD OF 'IO$'. FOR EXAXF
)@@G@@MPLE, @[@@@@.     @F@@@@. INP     IOPKT$    INPKT             . DEFINE FXG
)@@G@@IELDS FOR INPKT   @F@@@@. OUP     IOPKT$    OUPKT             . DEFINE FXH
)@@G@@IELDS FOR OUPKT   @[@@@@.     @D@@@@. THE PROC CALLS WOULD GENERATE THESXI
)@@G@@E DEFINITIONS:    @[@@@@.     @ @@@@. INPPKT  EQUF      INPKT     @ @@@@XJ
)@@G@@. INPFN   EQUF      INPKT+0   @A@@@@. INPIAI  EQUF      INPKT+2,,S3     XK
)@@G@@@#@@@@.         ... ETC.@ @@@@. OUPPKT  EQUF      OUPKT     @ @@@@. OUPFXL
)@@G@@N   EQUF      OUPKT+0   @A@@@@. OUPIAI  EQUF      OUPKT+2,,S3     @#@@@@XM
)@@G@@.         ... ETC.@[@@@@.     @[@@@@.     @F@@@@. TO DEFINE THE FIELDS AXN
)@@G@@ND GENERATE THE PACKET AT THE SAME TIME,  @C@@@@. THE PROC 'IO$PKT' MAY XO
)@@G@@BE USED. ITS SYNTAX IS: @[@@@@.     @E@@@@. <P>     IO$PKT    '<FNAME>',XP
)@@G@@<FUNC> <WC>,<BA> <DA>,<SS>    @[@@@@.     @F@@@@. IF  <P>  IS  NOT  GIVEXQ
)@@G@@N,  THE  FIELD  MNEMONICS ARE NOT DEFINED;@F@@@@. HOWEVER, WHEN IT IS SUXR
)@@G@@PPLIED, THE MNEMONICS WILL BEGIN WITH  <P>@F@@@@. JUST  AS  THE USAGE OFXS
)@@G@@ IOPKT$ DEFINES. NOTE: OMITTED FIELDS WILL@F@@@@. NOT BE GENERATED; I.E.XT
)@@G@@, IF <DA> IS NOT GIVEN, THE FIFTH WORD  OF@F@@@@. THE PACKET WILL NOT BEXU
)@@G@@ GENERATED. SIMILARLY, IF <WC>,<BA> IS NOT@F@@@@. GIVEN, THE FOURTH WORDXV
)@@G@@ OF THE PACKET WILL NOT BE GENERATED.     @[@@@@.     @[@@@@.     @B@@@@XW
)@@G@@. ALAN STEBBENS, UOMCSC YFNSS, 01/08/81   @#@@@@          $DEF    @^@@@@XX
)@@G@@P         PROC      *1  @#@@@@IOPKT$*   NAME    @#@@@@          FUNC$   XY
)@@G@@@ @@@@          $DO $LF(1)>0 ,* $NIL@F@@@@L         EQU       $LF(1)->EWXZ
)@@G@@LF(1)!'IO$' . DEFINE THE PREFIX     @E@@@@PKT       EQUF      P(1)>0->P(YA
)@@G@@1,1)[P(1)>1->',P(1,2)']!0     @ @@@@          $LEVEL    0,1,0     @^@@@@YB
)@@G@@[L]PKT    EQUF      PKT @^@@@@[L]FN     EQUF      PKT @ @@@@[L]IAI    EQYC
)@@G@@UF      PKT+2,,S3 @ @@@@[L]IAA    EQUF      PKT+2,,H2 @ @@@@[L]STA    EQYD
)@@G@@UF      PKT+3,,S1 @ @@@@[L]FNC    EQUF      PKT+3,,S2 @ @@@@[L]AFC    EQYE
)@@G@@UF      PKT+3,,S3 @ @@@@[L]STF    EQUF      PKT+3,,H1 @ @@@@[L]FWC    EQYF
)@@G@@UF      PKT+3,,H2 @ @@@@[L]WC     EQUF      PKT+4,,H1 @ @@@@[L]BA     EQYG
)@@G@@UF      PKT+4,,H2 @ @@@@[L]BAW    EQUF      PKT+4     @ @@@@[L]DA     EQYH
)@@G@@UF      PKT+5     @ @@@@[L]SS     EQUF      PKT+6     @ @@@@[L]SDA    EQYI
)@@G@@UF      PKT+7     @#@@@@          END     @[@@@@.     @^@@@@P         PRYJ
)@@G@@OC      *3  @#@@@@IO$PKT*   NAME    @D@@@@          $IF       $LF(1)>0  YK
)@@G@@        . ANY LABEL?    @^@@@@          $LEVEL    ,1  @G@@@@*         IOYL
)@@G@@PKT$    $                 . DEFINE FIELDS FOR THIS PACKET   @#@@@@      YM
)@@G@@    $LEVEL  @#@@@@          $ENDF   @E@@@@          *         P(1,1)DL  YN
)@@G@@        . OUTPUT THE FILENAME @D@@@@          $GFORM    12,0,6,P(1,4),18YO
)@@G@@,P(1,3) . IAI,IAA @C@@@@          $GFORM    6,0,6,P(1,2),6,0,18,0 . FNC YP
)@@G@@@E@@@@ $DO P>2 , $GFORM   2,P(2,3),16,P(2,1),18,P(2,2) . G,WC,BA  @B@@@@YQ
)@@G@@ $DO P>3 , $GFORM   36,P(3,1)         . DA@B@@@@ $DO P(3)>1 , $GFORM 36,YR
)@@G@@P(3,2),36,0   . SS@#@@@@          END     @#@@@@          1->$END ___UPKYS
)@@G@@T             . DEFINE FIELDS FOR OUPKT   @[@@@@.     @D@@@@. THE PROC CYT
)@@G@@)@@[U@@@K@@@/K@@[]%8K@@]C/0__;C4W@@K[@/@@ C@/@@P]@W@@R[@W@@MC8K@@@(8H@@@YU
)@@G@@AA/@@OAA@@@@)@F[U@@@@@@@[0W@@L[CW@@NCCW@@M!CW@@MC8K@@_0@G@@LC8K@Z_[@W@@^YV
)@@G@@&;K@@[C8W@@L[@?@@LAB@@@@)@Q[M[]@[@@@@@@@@@[@W@@ G8K@@[[@W@@R0@G@@RC@W@@ YW
)@@G@@/^0@[]/,0@@@[4W@@L1@G@@L;CK@@AAC@@@@)@)[M^@@^C@^@@@@@@/^0@[]/,0@@@[^W@@MYX
)@@G@@G8Y@@@[@?@@^&;!@@@C^?@@M/@K@@,CCW@@N[@W@@PAD@@@@)@%[U@^@@@@@[@W@@^&;K@@]YY
)@@G@@C8W@@L[@W@@L&;K>@@/K@@@;(?G@@K[@?@@P[@?@@ K@W@@ CCW@@NAE@@@@)@5[N]@[@@@KYZ
)@@G@@@@@@@@[CW@@M/@K@[[HCW@@NCCW@@M[@W@@P[@W@@ G8K@@[C@W@@ /^0@[]/,0@@@AF@@@@ZA
)@@G@@)@_[V@K@@@@@[@W@@P[@W@@ /^:@@@C/0__.C4?@@KAA/@@O/KF@@@RA/@@OC80@@@/K@@@FZB
)@@G@@C@)@[(AG@@@@)[E[E@K)[K]=@M@O)#@@@@@@C80@@@/K@@[NC80@@@/K@@[[/,0@@@[4?@@KZC
)@@G@@C8)@@] @G@@R[@W@@QAH@@@@)[N[U@^@@K@@C@K@[%[@?@@PG8)@@[[@?@@ C@?@@P/K@@[]ZD
)@@G@@%8)@@]C/0__;C4?@@K[C/@@SAA/@@OAI@@@@)[Y[M@K)@K@^@@@@@@/^0@[]/,;@@@RE/@@SZE
)@@G@@ 4G@@K/^0@[]/,0@@@[@W@@^&;K@@[C8W@@L[@W@@LAJ@@@@)[*@V@@@@@@@@@@@@@@@@@@@ZF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@_@@@@@(@@@@@/K@@[[AK@@@@@@@@@@@@@@@@ZG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZH
)@@G@@@@^@@]@@A@@^@@I@@^@@Y@@@@@E@@@@@@@[:PIOW$       PIOFO$      PIOPF$      ZI
)@@G@@PIOFC$      PSDFW       @@[@@@@@@@@@PSDFWC      @@[@@@@@@@[KPSDFWCE     ZJ
)@@G@@@@[@@@@@@@[MPSDFWO      @@[@@@@@@@[^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@INPUT$FILE$ EDSUPPORT   ZM
)@@G@@DIST        Y)@)@@S^@@[^@@@@J$@]#@]#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@G9@/Q]@@@@@[@@@@]:CRSF( ZO
)@@G@@C GN@FCULL                    @@[@@@/*-L0.#EJOV6AVL$DELKEYS             ZP
)@@G@@@@[@@@)Q16^\#EJOWEAVL$DELRANKS            @@[@@@8(J.@H#EJOZZAVL$INSKEYS ZQ
)@@G@@            @@[@@@.-7V![#IJ#R$DUMP                    @@[@@@5UH%Y+COJK;-ZR
)@@G@@SSTYPE$     UOM         @@[@@@>@Z+0^COJK;&SSTYPE$     UOM         @C @@@ZS
)@@G@@S=70[?DIJ@MCEDIT$                   @C @@@O=/?W&DIJ@N-EDIT$F            ZT
)@@G@@      @C @@@RG/VY&DIJ@N>EDIT$HEX                @C @@@;T*S"NDIJ@N'EDIT$IZU
)@@G@@NT                @C @@@/UU;2KDIJ@OWEDIT$INTF               @C @@@\<=<F,ZV
)@@G@@DIJ@O3EDIT$S                  @C @@@]7/3((DIJ@P(EDIT$TBL                ZW
)@@G@@@C @@@.4= >>DIJ@P3EDIT$UOM                @C @@@)^X'!/DIJ@Q+EDIT$XALF   ZX
)@@G@@            @C @@@&66&<1DIJ@RZFDIT$H                  @C @@@@&222-DIJ@R+ZY
)@@G@@FDIT$INTF               @C @@@6])*5EDIJ@R<FDIT$PRT                @C @@@ZZ
)@@G@@4*-76#EKJJ\$FDIT$F                  @C @@@-.K/T^EKJJ\?FDIT$INT          AA
)@@G@@      @C @@@)5"XW?EKJJ\7FDIT$S                  @C @@@33N_V!ESJJ"SEDIT$AAB
)@@G@@SC                @C @@@&?,M37ESJJ_WFDIT$T                  @C @@@,?CGMIAC
)@@G@@FGJLY+FDIT$P      UOM         @@]@@@V!5BK#G^J]=:EDIT$T                  AD
)@@G@@@C @@@5I,&@<G^J^L%FDIT$UOM                @C @@@Z\YOG,[MK]J]FDIT$       AE
)@@G@@            @C @@@12LZ5M NKI6@SYMBOLS                 @@[@@@&';I@]AVKKEVAF
)@@G@@AVL$KTEST               @@[@@@1'KZCNAVKKHWAVL$KTEST1              @@[@@@AG
)@@G@@J"N[])AVKKHXAVL$KTEST2              @@[@@@^-P1AQAVKKHYAVL$KTEST3        AH
)@@G@@      @@[@@@91FB/%AVKKHZAVL$KTEST4              @@[@@@!<)W[,AVKKHZAVL$KTAI
)@@G@@EST5              @@[@@@)-)X]^AVKKH)AVL$KTEST6              @@[@@@Z>X4OKAJ
)@@G@@AVKKH-AVL$KTEST7              @@[@@@?]QJ%:AVKKH+AVL$KTEST8              AK
)@@G@@@@[@@@RJ LKOB[KI.@AVL$DISPLAY             @@[@@@56M2NTB]KHCBAVL$COMMON  AL
)@@G@@            @@[@@@, K;-HB]KI*UAVLMACS                 @@[@@@3FO?$>B#KHFBAM
)@@G@@AVL$TRAVERSE            @@[@@@R4C3\_B#KHLFAVL$INSRANKS            @@[@@@AN
)@@G@@5P$I]$BEKGVYAVL$DELETE              @@[@@@^_9$6 BEKGWJAVL$INSERT        AO
)@@G@@      @@[@@@"XQ4]*BFKF9[AVL$BALANCE             @@[@@@A^,N>@BFKH0BAVLTESAP
)@@G@@T                 @@[@@@>QD;PQBIKJ1:AVL$STATS               @@[@@@WZ7B_ZAQ
)@@G@@BMKI@.AVL$DEF                 @@[@@@!S9)7%BMKIN7AVL$DELNODES            AR
)@@G@@@@[@@@1-35L4BPKHCUAVL$COMPRANK            @@[@@@'.JF>[EDKF2-FDIT$ALF    AS
)@@G@@            @C @@@U8,=W7EDKKE$EDIT$PRT                @C @@@S37QLVEIKK5OAT
)@@G@@EDIT$AEDIT              @C @@@+^U!\5EPKI,*AVL$KTEST0              @@[@@@AU
)@@G@@$4F)YLEPKI3HDOC         AVL$        @K[@@@\Y>A+:EPKI4JAVLTEST           AV
)@@G@@      @@A@@@!WJO40FTKN$ETIDE$                   @@ @@@-LQE1PFTKN$PTIDE$AAW
)@@G@@                  @@ @@@#-S$,RFTKN$VTIDE$ASC                @@ @@@^9B@?EAX
)@@G@@FTKN$%TIDE$F                  @@ @@@AP#G;3FTKN$\TIDE$FD                 AY
)@@G@@@@ @@@=U.7/9FTKN*@TIDE$G                  @@ @@@$%7^Y/FTKN*BTIDE$I      AZ
)@@G@@            @@ @@@M$D2]<FTKN*KTIDE$N                  @@ @@@E7+<D:FTKN*VBA
)@@G@@TIDE$OD                 @@ @@@V1(E5/FTKN*>TIDE$S                  @@ @@@BB
)@@G@@TUX=)=G[KG5BTIDE$P      UOM         @@]@@@[M?5/ G[KG5CTIDE$C            BC
)@@G@@      @@ @@@%#U.+,[VLLCXBASE$                   @@[@@@-\L(1Z#SLI<0AXR$  BD
)@@G@@                  @@[@@@/+%,)P MLF&3PIONP$                  @@[@@@='7*)OBE
)@@G@@ALLLL"TEST                    @@[@@@XVB80QALLLO+PIO$        FLIST       BF
)@@G@@@@[@@@Y?ZNY&BILG&PAVL         FLIST       @@[@@@LY[/K5BILH-4UPDATE-RLIB BG
)@@G@@AVL$        @@[@@@[#NFR%BILH+?AVL$TREE    TEST        @@[@@@.)=W_SCULO$*BH
)@@G@@FUNCS                   @@[@@@6ER-^LEWLJX,FIASG$      UOM         @@ @@@BI
)@@G@@J)E1G@EXLKIXELT$INFOR               @@[@@@JU/0;O[NMF!)PIOPAI$           BJ
)@@G@@      @[A@@@^RG-7![NMO$XPIOPAI$                 @@[@@@+\;97>[PMF 6PIO$PRBK
)@@G@@OCS   MSD         @@[@@@4T@9E/[PMG5WPSDFPROCS   MSD         @@[@@@\E#)T@BL
)@@G@@[QMG3WPSDFIO      FLIST       @@[@@@E89&:F[WMF\$UPDATE-RLIB PSDFIO      BM
)@@G@@@@[@@@N!6BWC[WMF0AUPDATE-RLIB PIO$        @@[@@@]I9#RW[WMF3]ELT$INFOR   BN
)@@G@@            @@ @@@@.F71E[WMF9)ELTPKT$P                @@]@@@@O3A>3[WMGMWBO
)@@G@@BASE$P                  @@]@@@C6W,SG[WMGM=IOPKT$                  @@]@@@BP
)@@G@@_NF">L]KMDIEEDIT$ALF                @@ @@@ZE3.SG]KMDS1EDIT$P      UOM   BQ
)@@G@@      @@]@@@QX=QIY VMI!3PSDFTEST                @K[@@@ /=MC$A^MCYADOC   BR
)@@G@@      PSDFIO      @K[@@@P2_MGQ]#NGR1DOC         PIO$        @K[@@@P4*1JEBS
)@@G@@]#NHG_PIO$STATS               @@[@@@C0VK>I]#NHO:PIOTEST                 BT
)@@G@@@@[@@@F<T/0S]#NHZ+PIO$TRACE               @@[@@@W2(41W]#NJI]PSDFTEST    BU
)@@G@@            @@A@@@RW@_Q9#DNK"%ELT$PKT                 @@[@@@VC)\JT#VN@X(BV
)@@G@@PIOTEST                 @@A@@@!QSO^(AXOEH[PSDFRB                  @K[@@@BW
)@@G@@9>Y*(P]HPISUPIO$                    @@[@@@SZU3 VATPHS0PSDFR             BX
)@@G@@      @K[@@@9*'2X7ATPHT,PSDFW                   @K[@@@ 0EZ>1BDPH-)AA    BY
)@@G@@                  @K[@@@\#!<,9BDPI-%PIO$DEF                 @@[@@@S)_:0XBZ
)@@G@@BGPFUGASMPADD                 @K[@@@1^--*MBGPFU1PIO$PROCS               CA
)@@G@@@@]@@@*@_DBSBGPFU2EQU$                    @@]@@@Z:LQCLBGPFU2PSDFPROCS   CB
)@@G@@            @K]@@@=;SCBNBGPFU3JPROCS                  @@]@@@"#6/_+BGPFU3CC
)@@G@@PROCS                   @@]@@@W//&VOBGPFU4LCPROCS                 @@]@@@CD
)@@G@@V.)J%JBGPFU4SAVERPROCS              @@]@@@<;*\8)BGPFU4TSQPROCS          CE
)@@G@@      @@]@@@,(QLV*BGPFU5STACK$                  @@]@@@=PUDF9BGPF,^AVL$PRCF
)@@G@@OCS               @@]@@@8F.U78BGPI3PAXR$                    @@B@@@83#H<ZCG
)@@G@@BGPI3)EQU$                    @@B@@@SR3C8ZBGPI3-DUMP                    CH
)@@G@@@@B@@@H5L0JNBGPI3&PROCS                   @@B@@@BT2(4ZBGPI3$BASE$       CI
)@@G@@            @@B@@@U?,TE>BGPI3$JPROCS                  @@B@@@'#U!7 BGPI3*CJ
)@@G@@AVL$DEF                 @@B@@@+0VBE/BGPI3\AVL$PROCS               @@B@@@CK
)@@G@@GL+(X5BGPI30DUMP$P                  @@]@@@]!\?WRBGPI30FUNC$P            CL
)@@G@@      @@]@@@2 @L)5BGPI30LIB$P                   @@]@@@>-!958BGPI31ELT$PKCM
)@@G@@T                 @@B@@@[@%/2=BGPI31SYMBOLS$P               @@]@@@-%%6#5CN
)@@G@@BGPI32PIO$DEF                 @@B@@@/3.+%>BGPI3;AVLTEST                 CO
)@@G@@@@ @@@V9E"#EBGPI4BAVL$BALANCE             @@ @@@#A9RM#BGPI4DAVL$COMMON  CP
)@@G@@            @@ @@@&AX7*6BGPI4NAVL$COMPRANK            @@ @@@BLQY$*BGPI4PCQ
)@@G@@AVL$DELETE              @@ @@@N=0NYVBGPI4RAVL$DELKEYS             @@ @@@CR
)@@G@@I 0<BHBGPI4SAVL$DELNODES            @@ @@@@0S#$RBGPI4TAVL$DELRANKS      CS
)@@G@@      @@ @@@^:#-<WBGPI4VAVL$DISPLAY             @@ @@@R:_J%=BGPI4+AVL$INCT
)@@G@@SERT              @@ @@@9^&W-HBGPI4<AVL$INSKEYS             @@ @@@%)EV"+CU
)@@G@@BGPI4>AVL$INSRANKS            @@ @@@JX/^8ZBGPI4&AVL$KTEST               CV
)@@G@@@@ @@@N$^#.8BGPI4$AVL$KTEST0              @@ @@@DE?8YKBGPI4*AVL$KTEST1  CW
)@@G@@            @@ @@@2'Q!R_BGPI4(AVL$KTEST2              @@ @@@IQ;-/0BGPI4:CX
)@@G@@AVL$KTEST3              @@ @@@B9%9_WBGPI4!AVL$KTEST4              @@ @@@CY
)@@G@@5]B70%BGPI4,AVL$KTEST5              @@ @@@D G1)PBGPI4\AVL$KTEST6        CZ
)@@G@@      @@ @@@]$SN;VBGPI40AVL$KTEST7              @@ @@@I,P]FNBGPI42AVL$KTDA
)@@G@@EST8              @@ @@@/&+?*.BGPI43AVL$STATS               @@ @@@!9S;T8DB
)@@G@@BGPI4/AVL$TRAVERSE            @@ @@@6ZS-U2BGPI4"AVL$TREE    TEST        DC
)@@G@@@@ @@@.4WBH0BGPI5PPIONP$                  @@ @@@\J:S'6BGPI5QPIOPAI$     DD
)@@G@@            @@ @@@1=D0W.BGPI5UPIOTEST                 @@ @@@15-,,7BGPI5YDE
)@@G@@PIO$                    @@ @@@'@Y9>(BGPI5)PIO$STATS               @@ @@@DF
)@@G@@Z>RD4,BGPI5+PIO$TRACE               @@ @@@G8J7=[BGPI50PSDFR             DG
)@@G@@      @@ @@@R18P>\BGPI52PSDFRB                  @@ @@@7WZ^Q0BGPI54PSDFTEDH
)@@G@@ST                @@ @@@2=D"N^BGPJP7MAKE                    @K[@@@&L&JQ9DI
)@@G@@BKPGOZSYMBOLS                 @@B@@@<2TZDOBKPGP FUNCS                   DJ
)@@G@@@@B@@@_/-L<JEDPG@=PSDFW                   @@ @@@JLX@ D/[K@H$:9K@@#;(0@@VDK
)@@G@@;!)@@DC@)@@M @@@@F&]'@H/*@@@@F/K@@H1Q]'@H8/,;@@@/K@@H3Q]'@H8B,;@@@/KD@@@DL
)@@G@@ @@@@H @@@@H/S@@@@/S@@@@B,0@?>B,0@%4B,0@+]B,0@*1@@@@@^@@@@@^@@@@@^@@@@@^DM
)@@G@@ @@@[#/\0@E C8@@@@/,0].Z&'0@@^B,0@?>/\0@E=R]1@@X(C[@@X/KF@@@B,;@@@ @@@[#DN
)@@G@@/\0@E C8@@@[/,0].Z&'0@@^B,0@)>/\0@E=R]1@@X(C[@@X/KF@@@B,;@@@ @@@[#/\0@P9DO
)@@G@@C[K@@I;(K@@M;HK@@V;L)@@V/,0@ZZ:'K@@@/K@@I+C@G@@@&'0@@^B,0@?>/\0@Q\R]1@@XDP
)@@G@@(C[@@X/KF@@@B,;@@@ @@@[#/\0@E C8@@@]/,0].Z&'0@@^B,0@+]/\0@E=R]1@@X(C[@@XDQ
)@@G@@/KF@@@B,;@@@ @@@[#/\0@E C8@@@#/,0].Z&'0@@^B,0@)7/\0@E=R]1@@X(C[@@X/KF@@@DR
)@@G@@B,;@@@ @@@[#/\0@P9C@/@@@9!J@@@99@@J#/K@@J C'K@@@/K@@JD/,0@Z7C@G@@@&'0@@^DS
)@@G@@B,0@+]/\0@Q\R]1@@X(C[@@X/KF@@@B,;@@@ @@@[#/\0@E C8@@@@/,0].Z&'0@@^B,0@*1DT
)@@G@@/\0@E=R]1@@X*C[@@XB,;@@@/KF@@@A]1@@X9*[@@Y^@1@@)C8@@@+0@[@@9/K@@J-?C[@@9DU
)@@G@@/K@@J<&'0@@EB,0@GHC@[@@9[@@@@I&;@@@[R]0@KMN8K@@BM#F)@@Q'0@@MN8K@@EM#F)@@DV
)@@G@@Q'0@[^N8K@@GM#F)@@R]1@@X9?[@@YN[1@@)A]"@@X9*I@@Y[@)@[C @@@[G @@@[JC@W@@@DW
)@@G@@/,K@)PR[@@[CC@^@@Y:9K@@@/K@@K[C@)@@L&;)@OPC@G@@@/,)@!0R[O@@ZR[?@@@&'0@@NDX
)@@G@@B,0@MU/\)@!]R]1@@X(C[@@X/KF@@@B,;@@@/\0@E C@K@@G[@R@@G/\0@E=R]1@@X(C[@@XDY
)@@G@@/KF@@@B,;@@@@@[@@^ @@@[#/\0@P9C[K@@I;(K@@M;HK@@V;L)@@VC@G@@@9?/@@@980@K!DZ
)@@G@@C'K@@[C9@@@#![K@@M/D)@K&E[)@@M/[)@K&;H)@@=W9)@@EG9@@@[/K@@K-G[K@@KC@K@[CEA
)@@G@@G8K@@<[[X@@[&'0@@^B,0@*1/K@@K,C'K@@@/\0@Q\R]1@@X*C[@@XB,;@@@/KF@@@ @@@[#EB
)@@G@@/\0@E C8@@@]/,0].Z&'0@@^B,0@%4/\0@E=R]1@@X(C[@@X/KF@@@B,;@@@ @@@[#/\0@E EC
)@@G@@C8@@@#/,0].Z&'0@@^B,0@),/\0@E=R]1@@X(C[@@X/KF@@@B,;@@@ @@@[#/\0@P9C@/@@@ED
@EOF
@COPY,IO  TEMP.1067-019-061,1067-019-061.
@FREE     TEMP.
