@CAT,P    1067-036-061.,///10000
@ASG,T    TEMP.,///10000
@ELT,OI TEMP.1067-036-061,,,115670053641,000
)@@G@@**PF**@@@@W*@@@@@@@@@@@[@])@@@]FE@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@W@@@@GQC@@@@W&@B@@@@AB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@@@@@AD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@]@@@AF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@E@@]AN
)@@G@@NETIFTAB    @@@@@@@K[@@@            @ @@@[[@@@@I@@@@W@I%@D[SCHECK$$SUM$$AO
)@@G@@@@@@@@@@B@@@            @ @@@[@@@@@]@@@@W&D&:[QU@@@@@@@@@@@@@@@@@@@@@@@@AP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@^@)^@9A0)^@)B@9^@)^@8AS)AS
)@@G@@^@)A86^@)^@7AS)^@)A*9^@)^@4A8)^@)A)0^@)^@2B@)^@)AK4^@)^@1B@)^@)AC8^@)^@3AT
)@@G@@A@)^@)^@0^@)^@3BC)^@)AS7^@)^@)^@)^@!BC5^@)^@)^@) *1BC,AK9A0)^@) *5 00A@0AU
)@@G@@A@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)AV
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)AW
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)AX
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)[=[=@@^@)AK1BC4A)2A*)AC0AK5AC1A04^@1^@0^@0AY
)@@G@@^@)^@)AC8AS9^@)^@)AC9A*8^@)^@)AC7A@0^@)^@)AK0A@2^@)^@)AK0A@4^@)^@)AK3A)4AZ
)@@G@@^@)^@)AK6A)8^@)^@)AK4A@6^@)^@)AK6A*3^@)^@)AS0A)2^@)^@3A@)^@)AS3^@)^@3A*)BA
)@@G@@^@)AK9^@)^@3A))^@)AS3^@)^@3AS)^@)AK7^@)^@2A*)^@)AK5^@)^@2AK)^@)AK9^@)^@2BB
)@@G@@A*)^@)AS0^@)^@2BC)^@)AS1^@)^@3A@)^@)AS0^@)^@2AK)^@)AS0^@)^@)^@)^@!A86^@)BC
)@@G@@^@)^@) *3BC,A83A0)^@)^@) 00AK3AS)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BD
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BE
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BF
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)[=[=@@^@)AC5BG
)@@G@@AC4AK1AS)AC0AK5AC1A*8^@1^@0^@0^@)^@)AC2A@0^@)^@)^@9AC2^@)^@)^@7A)6^@)^@)BH
)@@G@@^@9A*9^@)^@)^@7A80^@)^@)AC5A@9^@)^@)AC1A@3^@)^@)^@9BC2^@)^@)AC1AK8^@)^@)BI
)@@G@@^@9AK0^@)^@2A*)^@)AK3^@)^@2AK)^@)AK5^@)^@2A@)^@)AC6^@)^@1A0)^@)AC6^@)^@1BJ
)@@G@@AS)^@)AC4^@)^@1AS)^@)AC5^@)^@1B@)^@)AC7^@)^@1A0)^@)AC8^@)^@1A0)^@)AC6^@)BK
)@@G@@^@1A0)^@)AC7^@)^@)^@)^@) *2^@)^@)^@)^@!AC,AK4AK)^@)^@) 00AS6A))^@)^@)^@)BL
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BM
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BN
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BO
)@@G@@^@)^@)^@)^@)^@)^@)[=[=@@^@)AC7A87AS0B@)AC0AK5AC1A00^@1B@1^@3^@)^@)^@7A@2BP
)@@G@@^@)^@)^@4B@5^@)^@)^@2BC1^@)^@)^@1AK5^@)^@)^@)^@0^@)^@)AC1AS0^@)^@)^@9AC0BQ
)@@G@@^@)^@)^@4A)7^@)^@)^@1AS0^@)^@)^@)^@0^@)^@1A8)^@)AC4^@)^@1A@)^@)AC3^@)^@1BR
)@@G@@AS)^@)AC0^@)^@)A))^@)^@4^@)^@)BC)^@)^@4^@)^@)AS)^@)^@2^@)^@)AS)^@)^@0^@)BS
)@@G@@^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)^@)^@!AC4^@)^@)^@)^@!B@,BT
)@@G@@AK2B@)^@) *5 00A@0A@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BU
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BV
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)BW
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)[=[=@@^@)AC7AS9BC3AK)AC0BX
)@@G@@AK5AC1A00^@1^@0^@0^@)^@)AC6AK0^@)^@)AC4A@8^@)^@)AC3A*0^@)^@)AC0BC2^@)^@)BY
)@@G@@AC0B@6^@)^@)AK2B@3^@)^@)AK2A*9^@)^@)AK2BC3^@)^@)AK1AS9^@)^@)AK1B@6^@)^@2BZ
)@@G@@A))^@)AK9^@)^@2B@)^@)AK2^@)^@2AC)^@)AK0^@)^@2A))^@)AK2^@)^@2AS)^@)AK3^@)CA
)@@G@@^@2A@)^@)AC9^@)^@2A@)^@)AC9^@)^@1A0)^@)AC5^@)^@1A0)^@)AC6^@)^@1A8)^@)AC5CB
)@@G@@^@)^@)^@)^@!AC3^@)^@)^@)^@!A8,BC5AS)^@)^@) 00AK8A0)^@)^@)^@)^@)^@)^@)^@)CC
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)CD
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)CE
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)CF
)@@G@@^@)^@)[=[=@@^@)A*6AS7AS0A0)AC0AK5AC1A86^@1^@0^@0^@)^@)^@9AC7^@)^@)AC0A86CG
)@@G@@^@)^@)^@9A)8^@)^@)AC0A@1^@)^@)^@9A)3^@)^@)AC0A09^@)^@)AC1B@1^@)^@)AC1AS5CH
)@@G@@^@)^@)AC3AK0^@)^@)AC2BC4^@)^@)BC)^@)AC3^@)^@2A@)^@)AK8^@)^@2AS)^@)AC8^@)CI
)@@G@@^@1A))^@)AC5^@)^@1A))^@)AC6^@)^@1A8)^@)AC5^@)^@1A))^@)AC3^@)^@1A8)^@)AC6CJ
)@@G@@^@)^@1A))^@)AC6^@)^@1A@)^@)AC5^@)^@)^@)^@)^@0^@)^@)^@)^@)^@,B@1A0)^@)^@)CK
)@@G@@ 00A87AC)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)CL
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)CM
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)CN
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)[=[=@@^@)A*4A87A88BC)AS0AK5AC1A85^@4CO
)@@G@@A88AC2^@)^@)AS7AK0^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)CP
)@@G@@A)4A*9^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)^@)^@0^@)^@5AS)^@)A03^@)CQ
)@@G@@^@7A))^@)A09^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0CR
)@@G@@^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)^@)^@!CS
)@@G@@AC8^@)^@)^@) *1AC,AC8A@)^@) *5 00A@0A@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)CT
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)CU
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)CV
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)[=[=@@CW
)@@G@@^@)A*8AS2A)1A))AC0AK5AC1A86^@8^@0^@0^@)^@)^@6B@3^@)^@)^@6A82^@)^@)^@6B@0CX
)@@G@@^@)^@)^@8A*1^@)^@)^@6AS9^@)^@)^@8A88^@)^@)AC0A89^@)^@)AC1BC6^@)^@)AC7A*8CY
)@@G@@^@)^@)^@9A82^@)^@1AK)^@)AC1^@)^@1AS)^@)AC9^@)^@1AC)^@)AC1^@)^@1AK)^@)AC0CZ
)@@G@@^@)^@1A@)^@)^@9^@)^@1AC)^@)AC4^@)^@1A0)^@)AC2^@)^@1AC)^@)AS0^@)^@)BC)^@)DA
)@@G@@^@7^@)^@)A*)^@)AC3^@)^@)^@)^@)AK0^@)^@)^@)^@2BC,AC8AS)^@)^@) 02AK1A8)^@)DB
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)DC
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)DD
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)DE
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)[=[=@@^@)A*3B@1AK5AC)AS0AK5AC1A85^@4A88AC2^@)^@)DF
)@@G@@^@2A@5^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)^@2AC6^@)^@)DG
)@@G@@^@)^@0^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)AS)^@)^@4^@)^@)A))^@)^@2DH
)@@G@@^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)DI
)@@G@@^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)^@)^@)^@0^@)^@)^@)DJ
)@@G@@^@)^@,A@0A@)^@) *5 00A@0A@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)DK
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)DL
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)DM
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)[=[=@@^@)A*5B@4AC1DN
)@@G@@BC)AK0AK5AC1A85^@3B@0^@3^@)^@)^@)BC1^@)^@)^@1B@6^@)^@)^@1A)8^@)^@)^@)^@0DO
)@@G@@^@)^@)^@)^@0^@)^@)^@)BC1^@)^@)^@2A)3^@)^@)^@1A)8^@)^@)^@)^@0^@)^@)^@)^@0DP
)@@G@@^@)^@)AC)^@)^@2^@)^@)AK)^@)^@2^@)^@)AK)^@)^@2^@)^@)AS)^@)^@3^@)^@)A*)^@)DQ
)@@G@@^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)DR
)@@G@@^@)^@0^@)^@)^@)^@)^@0^@)^@)^@)^@)^@,A@0A@)^@) *5 00A@0A@)^@)^@)^@)^@)^@)DS
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)DT
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)DU
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)DV
)@@G@@^@)^@)^@)^@)[=[=@@^@)A*3A)1A@3A@)AS0AK5AC1A87^@4^@0^@0^@)^@)^@3BC3^@)^@)DW
)@@G@@^@7AC3^@)^@)^@6A)2^@)^@)^@6A85^@)^@)^@4B@9^@)^@)^@3BC9^@)^@)^@7A*1^@)^@)DX
)@@G@@^@7AS9^@)^@)^@9AC3^@)^@)^@7BC8^@)^@)A*)^@)^@4^@)^@)A8)^@)^@7^@)^@)B@)^@)DY
)@@G@@^@9^@)^@1A@)^@)AC1^@)^@1A@)^@)^@8^@)^@)B@)^@)^@9^@)^@)BC)^@)AC0^@)^@)B@)DZ
)@@G@@^@)^@6^@)^@)A0)^@)^@7^@)^@)A8)^@)^@7^@)^@)^@)^@!AS3^@)^@)^@) *1AS,BC4B@)EA
)@@G@@^@)^@) 00AK4A))^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)EB
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)EC
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)ED
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)[=[=@@^@)A*4A)5AS4A@)AC0AK5AC1EE
)@@G@@A85^@6B@0^@3^@)^@)^@6B@8^@)^@)^@)A00^@)^@)^@)AK8^@)^@)^@)^@0^@)^@)^@)^@0EF
)@@G@@^@)^@)^@8A88^@)^@)^@2A*0^@)^@)^@)AK8^@)^@)^@)^@0^@)^@)^@)^@0^@)^@3AK)^@)EG
)@@G@@AC2^@)^@)AC)^@)^@1^@)^@)AC)^@)^@1^@)^@)AC)^@)^@1^@)^@)AC)^@)^@0^@)^@)A@)EH
)@@G@@^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)EI
)@@G@@^@)^@)A)1^@)^@)^@)^@4AC,A@0A@)^@) *5 00A@0A@)^@)^@)^@)^@)^@)^@)^@)^@)^@)EJ
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)EK
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)EL
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)EM
)@@G@@[=[=@@^@)B@3A@2AC4BC)AK0AK5AC1B@1^@9^@0^@0^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)EN
)@@G@@^@)^@0^@)^@)^@)A08^@)^@)^@1B@3^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)EO
)@@G@@^@)A08^@)^@)^@1B@3^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)EP
)@@G@@^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)AC)^@)^@2^@)^@)EQ
)@@G@@A))^@)^@3^@)^@)A*)^@)^@0^@)^@)^@)^@) *5^@)^@)^@)^@!AS,A@5A))^@) *5 00A@0ER
)@@G@@A@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)ES
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)ET
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)EU
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)[=[=@@^@)B@1BC5BC6AK)AS0AK5AC1B@1^@9B@1AC2EV
)@@G@@^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)^@)^@3^@)^@)^@)^@0^@)^@)^@)^@0EW
)@@G@@^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)^@)^@3^@)^@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)EX
)@@G@@^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)EY
)@@G@@A@)^@)^@0^@)^@)AC)^@)^@1^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)^@)^@)^@0^@)EZ
)@@G@@^@)^@)^@)^@,A@0A@)^@) *5 00A@0A@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)FA
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)FB
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)FC
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)[=[=@@^@)B@2FD
)@@G@@A@3A82B@)AC0AK5AC1B@1^@5^@0^@0^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)FE
)@@G@@^@5A*3^@)^@)^@4A)6^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)^@5A*3^@)^@)FF
)@@G@@^@4A03^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)FG
)@@G@@A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@3^@)^@1A8)^@)AK6^@)^@1A8)^@)AC1^@)FH
)@@G@@^@)A@)^@)^@8^@)^@)^@)^@!AC9^@)^@)^@) *1A@,A*0B@)^@) *5 00A@0A@)^@)^@)^@)FI
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)FJ
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)FK
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)FL
)@@G@@^@)^@)^@)^@)^@)^@)[=[=@@^@)B@3A00A@1A8)AS0AK5AC1B@2^@1^@0^@0^@)^@)^@)^@0FM
)@@G@@^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)^@7B@5^@)^@)^@)^@0^@)^@)^@)^@0FN
)@@G@@^@)^@)^@)^@0^@)^@)^@)^@0^@)^@)^@7B@5^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)FO
)@@G@@A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)^@)A@)^@)^@0^@)FP
)@@G@@^@)A@)^@)^@0^@)^@1BC)^@)AC4^@)^@1A*)^@)^@0^@)^@)^@)^@!AK1^@)^@)^@) *1AK,FQ
)@@G@@BC6AS)^@) *5 00A@0A@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)FR
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)FS
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)@[@@@C .    @#@@@CLMVC    PROC .    @#@@@CLMVC* FT
)@@G@@  NAME .    @D@@@C        DO    LMVC>1 , LA,U  A11,LMVC(1,1) .  A11=CHARFU
)@@G@@@ @@@C        EX    LMOVE,*X1 .     @]@@@C        END @[@@@C .    @F@@@CFV
)@@G@@LCVO*   PROC .    CONVERT TO OCTAL: NUMBER OF BITS, INPUT REGISTER@D@@@CFW
)@@G@@.  INPUT SHOULD BE LEFT JUSTIFIED IN INPUT REGISTER   @^@@@C        SZ  FX
)@@G@@  A11 .     @E@@@C        DO    LCVO(1,2)>0 , LA  A12,LCVO(1,2) .  A12=BFY
)@@G@@INARY @E@@@CLND     EQU   (LCVO(1,1)+2)/3 .         = # OCTAL DIGITS    FZ
)@@G@@@ @@@C        LA,U  A13,LND-1 .     @G@@@CLNB     EQU   3*LND-LCVO(1,1) GA
)@@G@@.         = # 0 BITS TO PAD 1ST DIGIT     @A@@@C        DO    LNB>0 , DSGB
)@@G@@C  A11,LNB .@ @@@C        LMJ   X11,LGETOC .    @#@@@C        END   .   GC
)@@G@@@[@@@C .    @#@@@CLTAB*   PROC .    @ @@@CLTABW   EQU   LTAB(1,1)/6 .   GD
)@@G@@@A@@@CLTABC   EQU   LTAB(1,1)-6*LTABW-1 . @^@@@C        LXM,U X2,LTABW .GE
)@@G@@@^@@@C        LXM,U X1,LTABC .@#@@@C        END .     @#@@@C . INITIALIZGF
)@@G@@E     @#@@@C         CLEAR .  @C@@@C         LXI,U X4,1 .         SET BLGG
)@@G@@ANK LINE    @^@@@C         LINK  LGOPRX . @#@@@CLAGAIN  SZ    A7 .@^@@@CGH
)@@G@@ . GET NEXT MACHINE WORD@D@@@C         LOAD  A8,LSTMT .       SEE IF NEWGI
)@@G@@ STATEMENT  @^@@@C         TE,H1 A8,0,X4 .@F@@@C         J     LNOSTN . GJ
)@@G@@        -> NOPE, OLD STATEMENT CURRENT    @D@@@C         LMJ   X11,LGOPRGK
)@@G@@X .            PRINT BLANK    @E@@@C         MOVE  DGOLIN,LSTATE,4 .    GL
)@@G@@   '*** ST NO XXX '     @D@@@C         SET   010,ON .                 DEGM
)@@G@@CIMAL NUMBER@^@@@C         LXM,U X1,0 .   @^@@@C         LXM,U X2,4 .   GN
)@@G@@@C@@@C         LA,H2 A11,0,X4 .              GET ST NO@ @@@C         LMJGO
)@@G@@   X11,LCVDEC .   @ @@@C         LMJ   X11,LGOPRWW .  @#@@@CLNOSTN   LABGP
)@@G@@EL .  @E@@@C         LOAD  A8,0,X4 .         SET STATEMENT INSTRUCTION  GQ
)@@G@@@^@@@C . LOCATION IN OCTAL    @^@@@C        LA    A12,X4 .  @^@@@C      GR
)@@G@@  LSSL  A12,18 .  @#@@@C        LCVO  18 .@#@@@C        LTAB  10 .@^@@@CGS
)@@G@@ . MACHINE WORD IN OCTAL@#@@@C . BY HALFWORDS   @^@@@C        LCVO  18,AGT
)@@G@@8 .   @^@@@C        LMVC  ' ' .     @#@@@C        LCVO  18 .@#@@@C      GU
)@@G@@  LTAB  26 .@]@@@C . BY FIELDS@B@@@C        LCVO  6,A8.                 GV
)@@G@@    F @^@@@C        LMVC  ' ' .     @C@@@C        LDSL  A7,6 .          GW
)@@G@@          A7=F    @C@@@C        TE,U  A7,070 .                  F=JGD?  GX
)@@G@@@^@@@C        J     LMWJ .    @B@@@C        LCVO  8 .                   GY
)@@G@@    JA@^@@@C        J     LKWABL .  @B@@@CLMWJ    LCVO  4 .             GZ
)@@G@@          J @^@@@C        LMVC  ' ' .     @B@@@C        LCVO  4 .       HA
)@@G@@                A @#@@@CLKWABL  LMVC ' ' .@B@@@CLMWX    LCVO  4 .       HB
)@@G@@                X @^@@@C        LMVC  ' ' .     @C@@@C        TG,U  A7,0HC
)@@G@@70 .                  F<070?  @^@@@C        J     LMWHI .   @D@@@C      HD
)@@G@@  AND   A8,(0701700000000) .      GET J,X FIELDS@D@@@C        TNE   A9,(HE
)@@G@@0700000000000) .      J>016? X=0?   @^@@@C        J     LMWU$ .   @B@@@CHF
)@@G@@LMWHI   LCVO  2 .                       HI@^@@@C        LMVC  ' ' .     HG
)@@G@@@^@@@C        SSL   A12,2 .   @^@@@C        J     LMWU .    @^@@@CLMWU$ HH
)@@G@@  SET   01,ON .   @B@@@CLMWU    .                               U @#@@@CHI
)@@G@@LTAB58  LTAB  58 .@#@@@C.  GET F MNEMONIC @C@@@C        TLE,U A7,071 .  HJ
)@@G@@                F>=071? @^@@@C        J     LGETF .   @C@@@C        LDSLHK
)@@G@@  A7,4 .                    A7=FJ   @E@@@C        ANA,U A7,01527 .      HL
)@@G@@          A7=(F-071)J+071     @E@@@CLGETF   LXM   A3,A7 .               HM
)@@G@@    USE A7 AS INDEX     @E@@@C        LA    A12,LFMNEM-1,A3 .         TOHN
)@@G@@ GET F MNEMONIC   @E@@@C        AND,U A12,077 .                 GET A FIHO
)@@G@@ELD REGISTER@^@@@C        LA    A10,A13 . @^@@@C        SZ    A13 .     HP
)@@G@@@G@@@C        LDSC  A12,6 .                   A13=# CHARS IN MNEM (IN OCHQ
)@@G@@TAL)  @F@@@C        ANA,U A13,061 .                 A13=#CHARS (IN BINARHR
)@@G@@Y) -1 @F@@@C         JN    A13,LJNOP .         ILLEGAL OPERATION, PRINT HS
)@@G@@OCTAL @^@@@CLFOUT   LDSL  A11,6 .   @E@@@C        LMVC .                HT
)@@G@@          PUT OUT F MNEMONIC  @ @@@C        JGD   A13,LFOUT .     @^@@@CHU
)@@G@@ . IF F<071 GET J FIELD @#@@@C        SZ    A9 .@C@@@C        TG,U  A7,0HV
)@@G@@71 .                  F<071?  @^@@@C        J     LTAB65 .  @C@@@C      HW
)@@G@@  LDSC  A8,4 .                    A9=J    @E@@@C         LA      A14,A9 HX
)@@G@@.          SAVE J FIELD FOR LATER   @C@@@C        JZ    A9,LTAB65 .     HY
)@@G@@          J=0?    @C@@@C        TG,U  A7,070 .                  F<070?  HZ
)@@G@@@^@@@C        J     LTAB65 .  @F@@@C        TG,U  A9,016 .              IA
)@@G@@    IFF F LE 067 & J GE 016   @D@@@C        SZ    A7 .                  IB
)@@G@@    THEN A7=0     @C@@@C        TNE,U A9,017 .                  J=017?  IC
)@@G@@@D@@@C        LNA,U A7,0 .                    THEN A7=-0    @^@@@C      ID
)@@G@@  LMVC  ',' .     @E@@@C        LXM   A3,A9 .                   USE J FIIE
)@@G@@ELD AS INDEX@E@@@C        LA    A12,LJMNEM-1,A3 .         TO GET J MNEMOIF
)@@G@@NIC   @^@@@C        LA,U  A13,2 .   @^@@@CLJOUT   LDSL  A11,6 .   @E@@@CIG
)@@G@@        LMVC .                          PUT OUT MNEMONIC    @ @@@C      IH
)@@G@@  JGD   A13,LJOUT .     @#@@@C        SZ    A9 .@^@@@C . TAB TO COLUMN 6II
)@@G@@5     @#@@@CLTAB65  LTAB  65 .@#@@@C . GET A FIELD    @F@@@CLGETA   LDSCIJ
)@@G@@  A8,4 .                    A9=A (IF F=070 A9=JA)     @F@D@C        LX,UIK
)@@G@@  X11,LSTOX-2 .              = RETURN POINT FROM LCREG@^@D@C        LA  IL
)@@G@@  A12,A9 .  @D@@@C        TNE,U A10,'0' .                  NO A FIELD?  IM
)@@G@@@^@@@C        J     LSTOX .   @E@D@C        TNE,U A10,'C' .             IN
)@@G@@     FOR JGD INSTRUCTION@F@@@D        TE,U  A10,'C' .                  TIO
)@@G@@EST FOR JGD INSTRUCTION @F@D@C        J     LCREG .                   GEIP
)@@G@@T CONTROL REG MNEMONIC  @C@@@D        J      LGETB .             -> NOT IQ
)@@G@@JGD   @D@@@D         LA      A12,A8 .          SAVE FOR LATER     @F@@@DIR
)@@G@@         LA      A8,A9 .           GET REG NUMBER INTO PROPER REG @F@@@DIS
)@@G@@         LMJ     X11,LCREGB .      GO PRINT OUT REGISTER NUMBER   @E@@@DIT
)@@G@@         LA      A8,A12 .          RECLAIM REGISTER CONTENTS@H@@@D      IU
)@@G@@   J       LSTOX-2 .         CONTINUE WITH H AND I AND X AND U FIELDS   IV
)@@G@@@E@D@C        TE,U  A10,'E' .                  ER INSTRUCTION     @E@@@DIW
)@@G@@LGETB   TE,U  A10,'E' .                  ER INSTRUCTION     @^@@@C      IX
)@@G@@  J     $+3 .     @F@@@C        SSL   A8,14 .                   RIGHT JUIY
)@@G@@STIFY U FIELD     @F@@@C        J     LEXREF .                  AND SEARIZ
)@@G@@CH FOR SYMBOLIC   @E@@@C        TNE,U A10,'N' .                  NOP INSJA
)@@G@@TRUCTION    @^@@@C        J     LEMPTY .  @E@@@C        TE,U  A10,'S' . JB
)@@G@@                IF SHIFT INSTRUCTION@F@@@C        J     LNSHFT .        JC
)@@G@@          SET F = -F AS FLAG FOR    @E@@@C        LNA   A7,A7 .         JD
)@@G@@          IMMEDIATE OPERAND   @^@@@C        LA,U  A10,'A' . @F@@@CLNSHFTJE
)@@G@@  TNE,U A10,' ' .                  IF NO MNEMONIC INDICATED @D@@@C      JF
)@@G@@  LA,U  A10,'A' .                  THEN IS A REG@^@@@C        LA    A11,JG
)@@G@@A10 . @F@@@C        LMVC .                          PUT OUT A FIELD MNEMJH
)@@G@@ONIC  @^@@@C        LA    A11,A9 .  @ @@@C        LMJ   X11,LCVDEC .    JI
)@@G@@@^@@@C        LMVC  ',' .     @#@@@C . STORE X FIELD  @#@@@CLSTOX   SZ  JJ
)@@G@@  A9 .@D@@@C        LDSC  A8,4 .                    A8=HIU, A9=X  @C@@@CJK
)@@G@@        JNZ   A9,LGETI .                X=0?    @D@@@C         IF    010JL
)@@G@@,ON THEN,LNWST .       -> NEW STMT  @G@@@C        JP    A7,LGETI .      JM
)@@G@@          A7 IS NEG IF SHIFT INSTRUCTION  @F@@@C        TG    A8,(020000JN
)@@G@@0000000) .      TEST FOR INDIRECT SHIFT   @^@@@C        J     LGETI .   JO
)@@G@@@#@@@C . GET U OPERAND  @C@@@CLIMOP   JP    A7,LPOSOP .               J=JP
)@@G@@017?  @D@@@C        JP    A8,LPOSOP .               HIU NEGATIVE? @^@@@CJQ
)@@G@@        LMVC  '-' .     @^@@@C        LMA   A8,A8 .   @^@@@CLPOSOP  SSL JR
)@@G@@  A8,18 .   @F@@@C        LX,U  X11,LEMPTY .               = RET POINT FJS
)@@G@@ROM LCVDEC  @^@@@C        LA    A11,A8 .  @^@@@C        J     LCVDEC .  JT
)@@G@@@F@@@CLNWST    SET   010,OFF .                 SET NEW STMT FLAG OFF    JU
)@@G@@@E@@@C         GOTO  LPOSOP .                   ->PRINT NUMBER    @#@@@CJV
)@@G@@ . STORE HI FIELDS@D@@@CLGETI   LDSL  A7,2 .                    A7=HI  AJW
)@@G@@8=U   @^@@@C        JNB   A7,LGETU .@^@@@C        LMVC  '*' .     @#@@@CJX
)@@G@@ . GET U ADDRESS  @C@@@CLGETU   SSL   A8,20 .                   A8=U    JY
)@@G@@@F@@@C         TE,U    A14,016 .         SEE IF J FIELD IS 'U' OR 'XU'  JZ
)@@G@@@F@@@C         TNE,U   A14,017 .         IF IT IS THEN LOOK IN LIST!    KA
)@@G@@@D@@@C         J       LEXREF .          GO LOOK IN LIST!   @C@@@C      KB
)@@G@@   LA,S1   A3,0,X4 .         GET OPCODE   @G@@@C         TE,U  A3,074 . KC
)@@G@@                OTHERWISE DO ONLY FOR JUMPS     @^@@@C         J     LUAKD
)@@G@@DR .  @ @@@CLEXREF  LR    R1,LSDSIZ .     @E@@@C        LX    A3,(2,0) .KE
)@@G@@                SEARCH LIST SD TABLE@E@@@C        SE,H2 A8,LSDBGN+1,*A3 KF
)@@G@@.              FOR SYMBOLIC   @^@D@C        J     LUADR .   @^@@@D      KG
)@@G@@  J     LUADRA .  @^@@@C        SZ    A11 .     @A@@@C        LA    A12,KH
)@@G@@LSDBGN-2,A3 .     @D@@@C         LOAD    X11,A3 .          SAVE FOR LATEKI
)@@G@@R     @^@@@CLSDOUT  LDSL  A11,6 .   @ @@@C        JZ    A11,LSDOUT .    KJ
)@@G@@@#@@@C        LMVC .    @ @@@C        JNZ   A12,LSDOUT .    @C@@@C      KK
)@@G@@   SZ      A11 .             CLEAR AGAIN  @E@@@C         LA,H1   A12,LSDKL
)@@G@@BGN-1,X11 . GET SECOND HALF OF NAME @C@@@C         LSSL    A12,18 .     KM
)@@G@@     LEFT JUSTIFY @C@@@CLSDOU1   LDSL    A11,6 .           GET NEXT CHARKN
)@@G@@@C@@@C         JZ      A11,LGETHX .      STOP WHEN OUT@D@@@C         LMVKO
)@@G@@C .                    PUT CHAR IN BUFFER @D@@@C         JNZ     A12,LSDKP
)@@G@@OU1 .      GO ON TILL FINSHED @^@@@C        J     LGETHX .  @D@@@CLUADR KQ
)@@G@@   TLE,U   A8,0200 .         IS IT A REGISTER?  @C@@@C         J       LKR
)@@G@@CREG .           YES-> SAY SO @^@D@C        LA    A11,A8 .  @^@@@DLUADRAKS
)@@G@@  LA    A11,A8 .  @^@@@C        SZ    A13 .     @C@@@C        JZ    A11,KT
)@@G@@LUMSD0 .               U=0?   @F@@@CLEFTJU  DSL   A11,3 .               KU
)@@G@@     SHIFT UNTIL MSD OF U = 0 @F@@@C        AA,U  A13,1 .               KV
)@@G@@    A13= # OF OCTAL DIGITS    @ @@@C        JNZ   A11,LEFTJU .    @D@@@CKW
)@@G@@LUMSD0  LMJ   X11,LGETOC+1 .             U MSD = 0    @#@@@C . GET HX FIKX
)@@G@@ELDS  @C@@@CLGETHX  JZ    A9,LEMPTY .               TEST X=0@^@@@C      KY
)@@G@@  LMVC  ',' .     @C@@@C        SSL   A7,1 .                    A7=H    KZ
)@@G@@@^@@@C        JNB   A7,LGETX .@^@@@C        LMVC  '*' .     @^@@@CLGETX LA
)@@G@@  LMVC  'X' .     @^@@@C        LA    A11,A9 .  @ @@@C        LMJ   X11,LB
)@@G@@LCVDEC .    @#@@@CLEMPTY   EQU   $ .@ @@@C         LMJ   X11,LGOPRX .   LC
)@@G@@@^@@@C        TLEM  X4,X5 .   @^@@@C        J     LAGAIN    @E@@@C      LD
)@@G@@   MOVE  DGOLIN,KBLANK,22 .    RESET TO ASCII BLANKS  @ @@@C         LOALE
)@@G@@D X1,DLTSTR .     @ @@@C         LOAD X2,DLTSTR+1 .   @ @@@C         LOALF
)@@G@@DD A8,DLTSTR+2 .  @ @@@C         LOADD A10,DLTSTR+4 . @ @@@C         LOALG
)@@G@@DD A12,DLTSTR+6 . @ @@@C         LOAD  F,DLTSTR+8 .   @D@@@C         JMPLH
)@@G@@ .                     RETURN TO CALLER   @C@@@C.        NOP OPERATION -LI
)@@G@@ PRINT OCTAL FIELDS     @#@@@CLJNOP    LTAB 64 .@^@@@C         LMVC   '+LJ
)@@G@@' .   @ @@@C         LOAD  A12,0,X4 .     @^@@@C         LCVO  36 .     LK
)@@G@@@^@@@C         J     LEMPTY . @C@@@CLGOPRX   LOCAL .                   PLL
)@@G@@RINT ROUTINE@E@@@C         LOADA X1,DGOLIN+1 .       SET PTR TO LINE IMALM
)@@G@@GE    @D@@@C         IF    0001,ON THEN,LGOPRY . ->PRINT HALFWORDS@^@@@CLN
)@@G@@         USING WORD,X1 .@E@@@C         MOVE  W1,W1+3,12 .        WIPE OULO
)@@G@@T OCTAL WORDS     @^@@@C         GOTO  LGOPRY1 .@F@@@CLGOPRY   ADD   X1,LP
)@@G@@3,I .            LEAVE SPACE FOR OCTAL WORDS    @D@@@CLGOPRY1  IF    000LQ
)@@G@@2,ON THEN,LGOPRZ . ->OCTAL INSTR    @ @@@C         MOVE  W1,W1+4,9 .    LR
)@@G@@@^@@@C         GOTO  LGOPRZ1 .@E@@@CLGOPRZ   ADD X1,4,I .              LLS
)@@G@@EAVE SPCE FOR OCTAL INST@F@@@CLGOPRZ1  IF    0004,ON             THEN,LGLT
)@@G@@OPRA . ->MNEUMONICS     @ @@@C         MOVE  W1,W1+5,5 .    @D@@@CLGOPRALU
)@@G@@   LOAD  X1,A0 .               SAVE STACK PTR   @ @@@C         LOADA A0,LV
)@@G@@DGOLIN .    @D@@@C         LOADXI A0,0126,I .          SET PRINT$ PACKETLW
)@@G@@@^@@@C         ER    PRINT$   @C@@@C         LOAD  A0,X1 .              LX
)@@G@@ RESET STACK@F@@@C         CLEAR .                     RESET TO FIELDATALY
)@@G@@ BLANKS     @^@@@C         LOADXI X1,1,I .@^@@@C         LOADXM X1,0,I .LZ
)@@G@@@^@@@C         LOAD  X2,X1 .  @#@@@C         JMP .    @#@@@CLGOPRWW  LOCMA
)@@G@@AL .  @^@@@C         GOTO LGOPRA    @C@@@CLMOVE   SA,S1 A11,DGOLIN-(IN 6MB
)@@G@@3,0,1,0),X2 .     @C@@@C        SA,S2 A11,DGOLIN-(IN 63,0,1,0),X2 .     MC
)@@G@@@C@@@C        SA,S3 A11,DGOLIN-(IN 63,0,1,0),X2 .     @C@@@C        SA,SMD
)@@G@@4 A11,DGOLIN-(IN 63,0,1,0),X2 .     @C@@@C        SA,S5 A11,DGOLIN-(IN 6ME
)@@G@@3,0,1,0),X2 .     @^@@@C        LMJ   A3,$+1 .  @C@@@C        SA,S6 A11,MF
)@@G@@DGOLIN-(IN 63,0,1,0),*X2 .    @^@@@C        LXM,U X1,0 .    @^@@@C      MG
)@@G@@  J     0,A3 .    @E@@@CLGETOC  LDSC  A11,3 .                    GET NEXMH
)@@G@@T DIGIT     @D@@@C        AA,U  A11,060 .                  ADD ZONE     MI
)@@G@@@#@@@C        LMVC  .   @^@@@C        SZ    A11 .     @ @@@C        JGD MJ
)@@G@@  A13,LGETOC .    @^@@@C        J     0,X11 .   @F@@@DLCREG    JNZ     AMK
)@@G@@9,LUADRA .       IF X REG THEN U FIELD NOT REG! @D@@@D         LX,U    XML
)@@G@@11,LGETHX .      SET RETURN ADDRESS @^@D@CLCREG   LA,U  A11,'X'   @^@@@DMM
)@@G@@LCREGB  LA,U  A11,'X'   @^@D@C        TLE,U A12,A0 .  @^@@@D        TLE,MN
)@@G@@U A8,A0 .   @^@@@C        J     LCROUT .  @^@D@C        TLE,U A12,R1 .  MO
)@@G@@@^@@@D        TLE,U A8,R1 .   @^@@@C        J     LCREGA .  @^@@@C      MP
)@@G@@  LA,U  A11,'R' . @^@D@C        ANA,U A12,64 .  @^@@@D        ANA,U A8,6MQ
)@@G@@4 .   @^@@@C        J     LCROUT .  @^@@@CLCREGA  LA,U  A11,'A' . @^@D@CMR
)@@G@@        ANA,U A12,12 .  @^@@@D        ANA,U A8,12 .   @#@@@CLCROUT  LMVCMS
)@@G@@ .    @^@D@C        LA    A11,A12 . @^@@@D        LA    A11,A8 .  @E@@@CMT
)@@G@@LCVDEC  SZ    A10 .                      A10,A11=BINARY IN  @^@@@C      MU
)@@G@@  SZ    A13 .     @G@@@CLDIV10  DI,U  A10,10 .                   A10=QUOMV
)@@G@@TIENT,A11=REMAINDER     @^@@@C        AA,U  A11,060 . @E@@@C        DSL MW
)@@G@@  A11,6 .                    A12=NEXT DIGIT     @ @@@C        JZ    A10,MX
)@@G@@LCVOUT .    @^@@@C        DSL   A10,36 .  @D@@@C        AA,U  A13,1 .   MY
)@@G@@                A13= # DIGITS @^@@@C        J     LDIV10 .  @^@@@CLCVOUTMZ
)@@G@@  LDSL  A11,6 .   @F@@@C        LMVC .                          PUT OUT NA
)@@G@@DECIMAL NUMBER    @ @@@C        JGD   A13,LCVOUT .    @^@@@C        J   NB
)@@G@@  0,X11 .   @#@@@CLSTMT   SFW   0 . @B@@@C        0237260 .             NC
)@@G@@    LR,U R11@#@@@C         CEND .   @D@D@CLASTMT   +0107060 .           ND
)@@G@@      OPCODE FOR LA,U A3@A@@@CLSTATE  '  **  STATEMENT NUMBER  ' .@#@@@CNE
)@@G@@BLANK   +'      ' @A@@@CBLANKIT +1,DGOLIN-(IN 63,0,1,0)     @#@@@C      NF
)@@G@@  +0,BLANK .@I@@@CLNAME*    PROC  *1,2 .             ADDRESS,'BCDNME' ORNG
)@@G@@ ADDRESS,'BCDNAM','E   ' .    @^@@@C         +LNAME(1,2) .  @D@@@C      NH
)@@G@@   DO LNAME(1)-2 , +LNAME(1,3),LNAME(1,1) .     @B@@@C         DO 3-LNAMNI
)@@G@@E(1) , +LNAME(1,1) .    @#@@@C         END .    @#@@@CLSDBGN   EQU   $ .NJ
)@@G@@@B@@@C         LNAME   '0','''0''   '          .@B@@@C         LNAME   'NK
)@@G@@1','''1''   '          .@C@@@C         LNAME   AREXFT-(IN 5,0,0,0),'FORMNL
)@@G@@AT' . @A@@@E         LNAME   BFADDR,'ADDR  ' .  @D@@@C         LNAME   BNM
)@@G@@FAFTR,'AFTER '         . AFTER(X,Y) @D@@@E         LNAME   BFALLC,'ALLOCNN
)@@G@@N' . ALLOCATION BIF     @D@@@C         LNAME   BFATAN,'ATAN  '         .NO
)@@G@@ ARC TAN    @E@@@C         LNAME   BFATND,'ATAND '         . ARC TAN DEGNP
)@@G@@REES  @D@@@C         LNAME   BFBFOR,'BEFORE'         . BEFORE     @B@@@CNQ
)@@G@@         LNAME   BFBINT,'BINARY'         .@B@@@C         LNAME   BFBITT,NR
)@@G@@'BIT   '         .@G@@@C         LNAME   BFBOOL,'BOOL  '         . BUILTNS
)@@G@@ IN FUNCTION BOOLEAN    @B@@@C         LNAME   BFCHAR,'CHAR  '         .NT
)@@G@@@D@@@C         LNAME   BFCLAT,'COLLAT','E  '   . COLLATE    @B@@@C      NU
)@@G@@   LNAME   BFCLCK,'CLOCK '         .@C@@@C         LNAME   BFCOPY,'COPY NV
)@@G@@ '         . COPY @D@@@C         LNAME   BFCOSD,'COSD  '         . COS DNW
)@@G@@EGREES@C@@@C         LNAME   BFCOST,'COS   '         . COS  @B@@@C      NX
)@@G@@   LNAME   BFCSF$,'CSF   '         .@B@@@C         LNAME   BFDATE,'DATE NY
)@@G@@ '         .@B@@@C         LNAME   BFDCAT,'DECAT '         .@B@@@C      NZ
)@@G@@   LNAME   BFDECT,'DECIMA','L  '   .@B@@@C         LNAME   BFDIMT,'DIM  OA
)@@G@@ '         .@B@@@C         LNAME   BFDOTT,'DOT   '         .@B@D@C      OB
)@@G@@   LNAME   BFENDT,'ENDFIL','E  '   .@D@@@C         LNAME   BFEXPT,'EXP  OC
)@@G@@ '         . E  **  X   @B@@@C         LNAME   BFFIXD,'FIXED '         .OD
)@@G@@@B@@@C         LNAME   BFFLTT,'FLOAT '         .@B@@@C         LNAME   BOE
)@@G@@FHBND,'HBOUND'         .@B@@@C         LNAME   BFHIGH,'HIGH  '         .OF
)@@G@@@B@@@C         LNAME   BFINDX,'INDEX '         .@B@@@C         LNAME   BOG
)@@G@@FLBND,'LBOUND'         .@B@@@C         LNAME   BFLINO,'LINENO'         .OH
)@@G@@@B@@@C         LNAME   BFLNTH,'LENGTH'         .@D@@@C         LNAME   BOI
)@@G@@FLOG1,'LOG10 '         . LOG BASE 10@D@@@C         LNAME   BFLOG2,'LOG2 OJ
)@@G@@ '         . LOG BASE 2 @D@@@C         LNAME   BFLOGT,'LOG   '         .OK
)@@G@@ LOG BASE E @B@@@C         LNAME   BFLOWT,'LOW   '         .@B@@@C      OL
)@@G@@   LNAME   BFPANO,'PAGENO'         .@B@@@C         LNAME   BFPREC,'PRECIOM
)@@G@@S','ION'   .@B@@@C         LNAME   BFRAND,'RAND  '         .@B@@@C      ON
)@@G@@   LNAME   BFRVSE,'REVERS','E  '   .@E@@@C         LNAME   BFSBPV,'SUBSTOO
)@@G@@R',' PV'   . PSEUDOVAR SUBSTR @B@@@C         LNAME   BFSBST,'SUBSTR'    OP
)@@G@@     .@E@@@C         LNAME   BFSIND,'SIND  '         . SIN(X) DEGREES   OQ
)@@G@@@C@@@C         LNAME   BFSINT,'SIN   '         . SIN  @B@@@C         LNAOR
)@@G@@ME   BFSQRT,'SQRT  '         .@B@@@C         LNAME   BFSTPV,'STRING',' POS
)@@G@@V'   .@B@@@C         LNAME   BFSTRT,'STRING'         .@D@@@C         LNAOT
)@@G@@ME   BFTAND,'TAND  '         . TAN DEGREES@C@@@C         LNAME   BFTANT,OU
)@@G@@'TAN   '         . TAN  @B@@@C         LNAME   BFTIME,'TIME  '         .OV
)@@G@@@B@@@C         LNAME   BFTRIM,'TRIM  '         .@B@@@C         LNAME   BOW
)@@G@@FTRNS,'TRANSL','ATE'   .@B@@@C         LNAME   BFUNPI,'UNSPEC',' PV'   .OX
)@@G@@@B@@@C         LNAME   BFUNPV,'UNSPEC',' PV'   .@B@@@C         LNAME   BOY
)@@G@@FUNSI,'UNSPEC'         .@B@@@C         LNAME   BFUNSP,'UNSPEC'         .OZ
)@@G@@@B@@@C         LNAME   BFVERY,'VERIFY'         .@C@@@C         LNAME   DPA
)@@G@@EXFMT-(IN 63,0,1,0),'FORMAT' .@B@@@C         LNAME   DOTEST,'DOTEST'    PB
)@@G@@     .@B@@@C         LNAME   EXA3DV,'A3TODV'         .@B@@@C         LNAPC
)@@G@@ME   EXADVE,'D.V. I','NIT'   .@B@@@D         LNAME   EXALLC,'ALLOCA','TEPD
)@@G@@ ' .  @E@@@C         LNAME   EXANDB,'AND   '         . BIT STRING AND   PE
)@@G@@@B@@@C         LNAME   EXAYIN,'ARRAYI','NIT'   .@F@@@C         LNAME   EPF
)@@G@@XBBA,'BTBTAS','IGN'    . BIT INTO BIT ASSIGN    @F@@@C         LNAME   EPG
)@@G@@XBCA,'BTCHAS','IGN'    . CHAR INTO BIT ASSIGN   @D@@@C         LNAME   EPH
)@@G@@XBTCM,'BITCOM','PAR'   . BIT COMPARE@B@G@C         LNAME   EXCASEAR,'ARIPI
)@@G@@THC','ASE' .@B@G@C         LNAME   EXCASESC,'CHARSC','ASE' .@B@G@C      PJ
)@@G@@   LNAME   EXCASEST,'STRNGC','ASE' .@G@@@C         LNAME   EXCCA,'CH ASSPK
)@@G@@','IGN'    . ANYTHING INTO CHAR ASSIGN    @C@D@C         LNAME   EXCHK,'PL
)@@G@@CHECK '          . CHECK@C@@@D         LNAME   ONCHK,'CHECK '          .PM
)@@G@@ CHECK@E@D@C         LNAME   EXCHKA,'CHECKA','RRY'   . CHECK ARRAY ELT  PN
)@@G@@@E@@@D         LNAME   ONCHKA,'CHECKA','RRY'   . CHECK ARRAY ELT  @E@@@CPO
)@@G@@         LNAME   EXCONC,'CONCAT','NAT'   . CONCATENATION    @B@@@C      PP
)@@G@@   LNAME   EXCRSC,'CROSS ','SEC'   .@B@@@C         LNAME   EXEXIT,'BLOCKPQ
)@@G@@E','XIT'   .@H@D@C         LNAME   EXFLOW,'DEBUG '         . FLOW,NOFLOWPR
)@@G@@ AND SIGNAL STATEMENT   @H@@@D         LNAME   EXFLOW,'FLOWTR','ACE'   .PS
)@@G@@ FLOW,NOFLOW AND SIGNAL STATEMENT   @C@D@C         LNAME   EXFLOW,'FLOW PT
)@@G@@ '         . FLOW @F@@@C         LNAME   EXFMAT,'FRMATI','TEM'   . ITEM PU
)@@G@@IN FORMAT STMT    @A@@@D         LNAME   EXFREE,'FREE  ' .  @B@@@C      PV
)@@G@@   LNAME   EXFTGO,'REMOTF','MAT'   .@B@@@C         LNAME   EXFTRT,'FMATRPW
)@@G@@E','TRN'   .@B@@@C         LNAME   EXGCLS,'GET CL','OSE'   .@B@D@C      PX
)@@G@@   LNAME   EXGDVA,'VARB M','ANG'   .@B@D@C         LNAME   EXGDVA,'FUNCNPY
)@@G@@R','TRN'   .@B@@@D         LNAME   EXGDVA,'STACKS','AVE'   .@B@@@C      PZ
)@@G@@   LNAME   EXGOTO,'GOTO  '         .@B@@@C         LNAME   EXGTCL,'GET CQA
)@@G@@L','OSE'   .@B@@@C         LNAME   EXGTDT,'GET DA','TA '   .@B@@@C      QB
)@@G@@   LNAME   EXGTED,'GET ED','IT '   .@B@@@C         LNAME   EXGTLT,'GET LQC
)@@G@@I','ST '   .@B@@@C         LNAME   EXGTOP,'GET OP','EN '   .@G@@@C      QD
)@@G@@   LNAME   EXHIST,'HISTOG','RAM'   . PROFILE OF EXECUTION LOCUS   @H@@@DQE
)@@G@@         LNAME   EXJGDE,'EXTENT','FIX'   . SUBROUTINE TO FIX HALFWORD OVQF
)@@G@@ERFLOW@E@@@C         LNAME   EXNOT,'NOT   '          . BIT STRING NOT   QG
)@@G@@@B@@@C         LNAME   EXNTRY,'CALL  '         .@D@@@D         LNAME   EQH
)@@G@@XOPEN,'OPEN F','ILE' . OPEN FILE    @E@@@C         LNAME   EXORB,'OR    QI
)@@G@@'          . BIT STRING OR    @B@@@C         LNAME   EXPMSL,'PREP S','UBQJ
)@@G@@S'   .@B@@@C         LNAME   EXPTCL,'PUT CL','OSE'   .@B@@@C         LNAQK
)@@G@@ME   EXPTDA,'PUTDAT','ARR'   .@B@@@C         LNAME   EXPTDT,'PUT DA','TAQL
)@@G@@ '   .@B@@@C         LNAME   EXPTED,'PUT ED','IT '   .@B@@@C         LNAQM
)@@G@@ME   EXPTLT,'PUT LI','ST '   .@B@@@C         LNAME   EXPTOP,'PUT OP','ENQN
)@@G@@ '   .@B@D@C         LNAME   EXRTRN,'RETURN'         .@B@G@D         LNAQO
)@@G@@ME   EXREAD,'READ  '         .@B@@@D         LNAME   EXRTRN,'RETURN'    QP
)@@G@@     .@B@@@C         LNAME   EXSCIE,'SCALRI','NIT'   .@E@@@C         LNAQQ
)@@G@@ME   EXSTCM,'STRCOM','PAR'   . STRING TEST EQUAL@E@@@C         LNAME   EQR
)@@G@@XSTMP,'ALCSTG'         . ALLOCATE STRING  @B@@@C         LNAME   EXSTOP,QS
)@@G@@'STOP  '         .@B@@@C         LNAME   EXSUB,'SUBCRI','PT '    .@B@@@CQT
)@@G@@         LNAME   EXTLYC,'BOUNDS','CHK'   .@B@@@C         LNAME   EXTMP1,QU
)@@G@@'TMP AL','LOC'   .@D@@@C         LNAME   EXTMPS,'PASSST','RNG'   . PASS QV
)@@G@@STRING@E@@@C         LNAME   EXTRAC,'FLOWTR','ACE'   . GENERATE TRACE   QW
)@@G@@@B@G@D         LNAME   EXWRIT,'WRITE '         .@E@@@C         LNAME   EQX
)@@G@@XXORB,'XOR   '         . BIT STRING XOR   @B@@@C         LNAME   IFTEST,QY
)@@G@@'IFTEST'         .@A@@@D         LNAME   ONMNGR,'ONMNGR' .  @A@@@D      QZ
)@@G@@   LNAME   ONSTMT,'ONSTMT' .  @B@@@D         LNAME   PTRASG,'PTR AS','SGRA
)@@G@@N' .  @B@@@D         LNAME   PTRUNL,'PTR UN','LNK' .  @B@@@D         LNARB
)@@G@@ME   PTRVER,'RESOLV','E  ' .  @A@@@D         LNAME   REVRT,'REVERT' .   RC
)@@G@@@B@@@C         LNAME   RCFLTD,'COMPLE','X /'   .@B@@@C         LNAME   RRD
)@@G@@CFLTM,'COMPLE','X *'   .@B@@@C         LNAME   RCFXBD,'COMPLE','X /'   .RE
)@@G@@@B@@@C         LNAME   RCFXBM,'COMPLE','X *'   .@B@@@C         LNAME   RRF
)@@G@@CFXDD,'COMPLE','X /'   .@B@@@C         LNAME   RCFXDM,'COMPLE','X *'   .RG
)@@G@@@B@@@F         LNAME   RTFOFB,'FXBINO','VFL' .  @B@@@C         LNAME   RRH
)@@G@@TFXFL,'FLOAT ','FIX'   .@B@F@C         LNAME   RTOVCH,'FXDECO','VFL'   .RI
)@@G@@@B@@@F         LNAME   RTOVCH,'SIZECH','ECK'   .@B@@@C         LNAME   RRJ
)@@G@@TOVFL,'FLOATO','VFL'   .@B@F@C         LNAME   RTSZCK,'FXBINO','VFL'   .RK
)@@G@@@B@@@F         LNAME   RTSZCK,'SIZECH','ECK'   .@B@@@F         LNAME   RRL
)@@G@@TZDIV,'ZDIVCH','ECK' .  @C@@@C         LNAME   TVEXST-(IN 63,0,1,0),'TIMRM
)@@G@@ER ' .@^@@@CLSDSIZ +($-LSDBGN)/2 .  @E@@@C.  F MNEMONICS = NO OF LETTERSRN
)@@G@@, MNEMONIC, A FIELD REGISTER  @^@@@C.    BLANK = A REGISTER @^@@@C.    XRO
)@@G@@ = X REGISTER     @^@@@C.    R = R REGISTER     @^@@@C.    0 = NO A FIELRP
)@@G@@D     @^@@@C.    N = NOP INSTRUCTION@^@@@C.    E = ER INSTRUCTION @ @@@CRQ
)@@G@@.    S = SHIFT INSTRUCTION    @C@@@C.    C = CONTROL REGISTER ( JGD INSTRR
)@@G@@RUCTION )   @C@@@C         '0     ' .                OP CODE 00   @#@@@CRS
)@@G@@LFMNEM  '2SA   '  @#@@@C        '3SNA  '  @#@@@C        '3SMA  '  @#@@@CRT
)@@G@@        '2SR  R'  @#@@@C        '2SZ  0'  @#@@@C        '2SX  X'  @B@@@CRU
)@@G@@         '0     ' .                ILLEGAL@#@@@C        '2LA   '  @#@@@CRV
)@@G@@        '3LNA  '  @#@@@C        '3LMA  '  @#@@@C        '4LNMA '  @#@@@CRW
)@@G@@        '2AA   '  @#@@@C        '3ANA  '  @#@@@C        '3AMA  '  @#@@@CRX
)@@G@@        '4ANMA '  @#@@@C        '2AU   '  @#@@@C        '3ANU  '  @#@@@CRY
)@@G@@        '2BT  X'  @#@@@C        '2LR  R'  @#@@@C        '2AX  X'  @#@@@CRZ
)@@G@@        '3ANX X'  @#@@@C        '3LXM X'  @#@@@C        '2LX  X'  @#@@@CSA
)@@G@@        '2MI   '  @#@@@C        '3MSI  '  @#@@@C        '2MF   '  @B@@@CSB
)@@G@@         '0     ' .                ILLEGAL@#@@@C        '2DI   '  @#@@@CSC
)@@G@@        '3DSF  '  @#@@@C        '2DF   '  @B@@@C         '0     ' .     SD
)@@G@@           ILLEGAL@#@@@C        '2OR   '  @#@@@C        '3XOR  '  @#@@@CSE
)@@G@@        '3AND  '  @#@@@C        '3MLU  '  @#@@@C        '3TEP  '  @#@@@CSF
)@@G@@        '3TOP  '  @#@@@C        '3LXI X'  @#@@@C        '4TLEMX'  @#@@@CSG
)@@G@@        '2TZ  0'  @#@@@C        '3TNZ 0'  @#@@@C        '2TE   '  @#@@@CSH
)@@G@@        '3TNE  '  @#@@@C        '3TLE  '  @#@@@C        '2TG   '  @#@@@CSI
)@@G@@        '2TW   '  @#@@@C        '3TNW  '  @#@@@C        '2TP  0'  @#@@@CSJ
)@@G@@        '2TN  0'  @#@@@C        '2SE   '  @#@@@C        '3SNE  '  @#@@@CSK
)@@G@@        '3SLE  '  @#@@@C        '2SG   '  @#@@@C        '2SW   '  @#@@@CSL
)@@G@@        '3SNW  '  @#@@@C        '3JGD C'  @#@@@C        '3MSE  '  @#@@@CSM
)@@G@@        '4MSNE '  @#@@@C        '4MSLE '  @#@@@C        '3MSG  '  @#@@@CSN
)@@G@@        '3MSW  '  @#@@@C        '4MSNW '  @#@@@C        '4MASL '  @#@@@CSO
)@@G@@        '4MASG '  @#@@@C        '2DA   '  @#@@@C        '3DAN  '  @#@@@CSP
)@@G@@        '2DS   '  @#@@@C        '2DL   '  @#@@@C        '3DLN  '  @#@@@CSQ
)@@G@@        '3DLM  '  @#@@@C        '3DJZ  '  @#@@@C        '3DTE  '  @B@@@CSR
)@@G@@         '0     ' .                ILLEGAL@#@@@C        '3SLJ 0'  @#@@@CSS
)@@G@@        '3JPS  '  @#@@@C        '3JNS  '  @#@@@C        '2AH   '  @#@@@CST
)@@G@@        '3ANH  '  @#@@@C        '2AT   '  @#@@@C        '3ANT  '  @#@@@CSU
)@@G@@        '2EX  0'  @#@@@C        '2ER  E'  @B@@@C         '0     ' .     SV
)@@G@@           ILLEGAL@#@@@C        '4PAIJ0'  @#@@@C        '3SCN  '  @#@@@CSW
)@@G@@        '3LPS 0'  @#@@@C        '3LSL 0'  @B@@@C         '0     ' .     SX
)@@G@@           ILLEGAL@#@@@C        '3SSC S'  @#@@@C        '3DSC S'  @#@@@CSY
)@@G@@        '3SSL S'  @#@@@C        '3DSL S'  @#@@@C        '3SSA S'  @#@@@CSZ
)@@G@@        '3DSA S'  @#@@@C        '3LSC  '  @#@@@C        '4DLSC '  @#@@@CTA
)@@G@@        '4LSSCS'  @#@@@C        '4LDSCS'  @#@@@C        '4LSSLS'  @#@@@CTB
)@@G@@        '4LDSLS'  @#@@@C        '4IAED '  @#@@@C        '3SIL  '  @#@@@CTC
)@@G@@        '3LCR  '  @#@@@C        '2TS  0'  @#@@@C        '2JZ   '  @#@@@CTD
)@@G@@        '3JNZ  '  @#@@@C        '2JP   '  @#@@@C        '2JN   '  @#@@@CTE
)@@G@@        '1J   0'  @#@@@C        '3HKJ  '  @#@@@C        '3NOP N'  @#@@@CTF
)@@G@@        '4AAIJ0'  @#@@@C        '3JNB  '  @#@@@C        '2JB   '  @#@@@CTG
)@@G@@        '4JMGIX'  @#@@@C        '3LMJ X'  @#@@@C        '2JO  0'  @#@@@CTH
)@@G@@        '3JNO 0'  @#@@@C        '2JC   '  @#@@@C        '3JNC  '  @#@@@CTI
)@@G@@        '3LIC  '  @#@@@C        '4LICM '  @#@@@C        '3JIC  '  @#@@@CTJ
)@@G@@        '3DIC  '  @#@@@C        '3LOC  '  @#@@@C        '4LOCM '  @#@@@CTK
)@@G@@        '3JOC  '  @#@@@C        '3DOC  '  @#@@@C        '3LFC  '  @#@@@CTL
)@@G@@        '4LFCM '  @#@@@C        '3JFC  '  @B@@@C         '0     ' .     TM
)@@G@@           ILLEGAL@#@@@C        '4AACI0'  @#@@@C        '4PACI0'  @B@@@CTN
)@@G@@         '0     ' .                ILLEGAL@B@@@C         '0     ' .     TO
)@@G@@           ILLEGAL@#@@@C        '2FA   '  @#@@@C        '3FAN  '  @#@@@CTP
)@@G@@        '2FM   '  @#@@@C        '2FD   '  @#@@@C        '3LUF  '  @#@@@CTQ
)@@G@@        '3LCF  '  @#@@@C        '4MCDU '  @#@@@C        '3CDU  '  @#@@@CTR
)@@G@@        '3DFA  '  @#@@@C        '4DFAN '  @#@@@C        '3DFM  '  @#@@@CTS
)@@G@@        '3DFD  '  @#@@@C        '3DFU  '  @#@@@C        '3DFP  '  @#@@@CTT
)@@G@@        '3FEL  '  @#@@@C        '3FCL  '  @B@@@C         '0     ' .     TU
)@@G@@           ILLEGAL@#@@@CLJMNEM  'H2    '  @#@@@C        'H1    '  @#@@@CTV
)@@G@@        'XH2   '  @#@@@C        'Q2    '  @#@@@C        'Q4    '  @#@@@CTW
)@@G@@        'Q3    '  @#@@@C        'Q1    '  @#@@@C        'S6    '  @#@@@CTX
)@@G@@        'S5    '  @#@@@C        'S4    '  @#@@@C        'S3    '  @#@@@CTY
)@@G@@        'S2    '  @#@@@C        'S1    '  @#@@@C        'U     '  @#@@@CTZ
)@@G@@        'XU    '  @#@@@C         END .    ___  RCFLTM,'COMPLE','X *'   .UA
)@@G@@@B@@@C         LNAME   RCFXBD,'COMPLE','X /'   .@B@@@C         LNAME   RUB
)@@G@@CFXBM,'COMPLE','X *'   .@B@@@C         LNAME   R*[S@@@*SDFF*@]@@@@      UC
)@@G@@AXR$  @[@@@@$(3)  @]@@@@UMDATA1*    @]@@@@UMDATA2*    @]@@@@UMDATA3*    UD
)@@G@@@#@@@@     J    0,X11   @]@@@@     END    ___@@@@@@@@@@@@@@@@@@@@@@@@@@@UE
)@@G@@*[S@@@*SDFF*@C@@@@.   COPYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@@@@UF
)@@G@@.     @D@@@@.   QUESTIONS CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@@UG
)@@G@@.     @ @@@@.        MARVIN V. ZELKOWITZ  @B@@@@.        DEPARTMENT OF CUH
)@@G@@OMPUTER SCIENCE   @A@@@@.        UNIVERSITY OF MARYLAND     @B@@@@.     UI
)@@G@@   COLLEGE PARK, MARYLAND 20742     @[@@@@.     @G@@@@.        PERMISSIOUJ
)@@G@@N TO USE THESE LISTINGS AND THE COMPUTER PROGRAMS THEY@E@@@@.   REPRESENUK
)@@G@@T IS GRANTED UNDER THE FOLLOWING CONDITIONS:    @[@@@@.     @G@@@@.     UL
)@@G@@   1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@@UM
)@@G@@.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OR UNIVERSITY OF MARYLANDUN
)@@G@@@E@@@@.   PL/1 COMPILER REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@@UO
)@@G@@.     @F@@@@.        2. MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDUP
)@@G@@ED:   @[@@@@.     @G@@@@.        (A) ANY RESULTING PROGRAM, OR REPORT, PUQ
)@@G@@APER OR DOCUMENTATION   @G@@@@.        DESCRIBING SUCH PROGRAM WILL CLEAUR
)@@G@@RLY INDICATE THAT THE PROGRAM @E@@@@.        IS A DIALECT OF PLUM OR IS US
)@@G@@DERIVED FROM PLUM, AND  @[@@@@.     @G@@@@.        (B) ALL SUCH MODIFICAUT
)@@G@@TIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@@.        OF ERRORS IN THUU
)@@G@@E SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@@.        A BRIEF DESCRIPUV
)@@G@@TION OF THE FEATURE ADDED SHALL BE SUBMITTED    @C@@@@.        TO THE UNUW
)@@G@@IVERSITY OF MARYLAND, AND     @[@@@@.     @F@@@@.        (C) NO PROGRAMSUX
)@@G@@ DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@@.        WITHOUT WRITTENUY
)@@G@@ APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  @[@@@@.     @F@@@@.     UZ
)@@G@@   (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@@.     VA
)@@G@@   LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@@VB
)@@G@@.        WHETHER THE PROGRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     VC
)@@G@@@E@@@@.        MARYLAND PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@@VD
)@@G@@.     @G@@@@.        3. THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILERVE
)@@G@@ ITSELF,    @F@@@@.   AND ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN VF
)@@G@@USING PLUM. @E@@@@.   THE PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USVG
)@@G@@ER TO @F@@@@.   EXPERIMENT WITH THE COMPILER AS LONG AS THE RESULTING PRVH
)@@G@@ODUCT @G@@@@.   IS NOT SOLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT VI
)@@G@@DEVELOPED   @#@@@@.   FROM PLUM.    @[@@@@.     @[@@@@.     @[@@@@.     VJ
)@@G@@@[@@@@.     @[@@@@.     @[@@@@/.    @#@@@@         AXR$ .   @#@@@@      VK
)@@G@@   DCLRG .  @G@@@@         REGS A7,A8,A9,A10,A11,A12,A13,A14,A15,A3 X1,XVL
)@@G@@2,X3,X4,X5,X6,X7,;@A@@@@               X8,X9,X10,A1,A2 .    @G@@@@      VM
)@@G@@   ALREG A7,A8,A9,A10,A11,A12,A13,A14,A15 X1,X2,X3,X4,X5,X6,X7,;  @ @@@@VN
)@@G@@               X8,X9,X10 .    @#@@@@         UNLIST . @]@@@@@ADD PLTVDS VO
)@@G@@@#@@@@         LIST .   @]@@@@@ADD PLSAW  @#@@@@         CEND .   @#@@@@VP
)@@G@@         PLWORD . @#@@@@         PLIOCB . @#@@@@CONT     CSECT 3 .@B@@@@VQ
)@@G@@/.       MAIN ENTRY POINT FOR CONTROL     @E@@@@.        ON ENTRY , SYSIVR
)@@G@@N ANS SYSPRINT HAVE BEEN OPENED     @A@@@@.         A7 = TIME LIMIT IN SVS
)@@G@@ECONDS@#@@@@PLSTRT*  LABEL .  @C@@@@         MOVE,TVEXST,GOBR5 .       SVT
)@@G@@ET TIME OUT @^@@@@         STORE A7,A9 .  @B@@@@         LOAD  A7,'SY',IVU
)@@G@@ .     LOAD PASS 1@^@@@@         LINK  ZCALL .  @^@@@@         LOAD  A7,VV
)@@G@@A9 .  @^@@@@         LINK  ZSTIMR . @D@@@@         STORE A7,DGOCMT .    VW
)@@G@@    SAVE START TIME     @ @@@@         STORE A7,DGOLIM .    @^@@@@      VX
)@@G@@   USING IOCB,X1 .@ @@@@         LOAD  A8,'SY',I .    @ @@@@         STOVY
)@@G@@RE A8,DGOERM .    @D@@@@         MOVE  DGOPHF,GOSYNA,I .   SET TO SCAN PVZ
)@@G@@HASE  @C@@@@         LINK  PLOPTN .            GET OPTIONS  @E@@@@      WA
)@@G@@   IF    0100,OFF,LIMALX THEN,GONMCX . -> NO M OPTION @ @@@@         LOAWB
)@@G@@D  A7,B$MSDS,I .  @ @@@@         LOAD  A8,B$MBCS,I .  @^@@@@         LINWC
)@@G@@K  ZMCORE . @#@@@@GONMCX   LABEL .  @E@@@@         IF    010,OFF,DGOPT4 WD
)@@G@@THEN,GONMCR . -> NO O OPTION  @ @@@@         LOAD  A7,B$OSDS,I .  @ @@@@WE
)@@G@@         LOAD  A8,B$OBCS,I    @^@@@@         LINK  ZMCORE . @#@@@@GONMCRWF
)@@G@@   LABEL .  @E@@@@         LINK  ZTIME .             PRINT DEMAND TIME AWG
)@@G@@ND HDR@^@@@@         USING WORD,X1 .@ @@@@         MOVE  DGOLIN+8,W1,5 .WH
)@@G@@@^@@@@         DL    A3,EDTN  @C@@@@         STORED A3,DGOLIN .        PWI
)@@G@@LUM 3:01X   @ @@@@         LA    A3,EDTN+2 .    @ @@@@         STORE A3,WJ
)@@G@@DGOLIN+2 .  @D@@@@         MOVE  DGOLIN+3,GOUNMD,5 . SET UN OF MD PL/1  WK
)@@G@@@A@@@@         MOVE  DGOLIN+13,KBLANK,20 .@ @@@@         LOADA X1,DGOLINWL
)@@G@@ .    @^@@@@         LOAD  X2,1,I . @^@@@@         LINK GOPUT .   @A@@@@WM
)@@G@@         MOVE  DGOLIN,KBLANK,13     @#@@@@GONOLN   LABEL .  @#@@@@PLABLDWN
)@@G@@*   LABEL . @#@@@@GOPLUM   LABEL .  @C@@@@         LINK  ZIO .          WO
)@@G@@       OPEN FILES @#@@@@GOPLUX   LABEL .  @D@@@@         LINK  GORDCD . WP
)@@G@@           READ NEXT CARD     @#@@@@GOREST   LABEL .  @D@@@@         MOVWQ
)@@G@@E  DCGSNO,0,I .        SET TO STATEMENT 0 @E@@@@         LOAD  A7,DGOCDFWR
)@@G@@ .         CHECK FLAG ON RETURN     @E@@@@         IF    A7,EQ,1,I THEN,WS
)@@G@@GOENDT . -> END OF FILE, QUIT @D@@@@         LOAD A7,DZZFP .           GWT
)@@G@@ET OTHER FLAG     @B@@@@         IF    A7,NE,1,I THEN,GOPLUX .    @E@@@@WU
)@@G@@         MOVE  DZZFP,2,I .         SET MISSING *PLUM CARD   @#@@@@GOSTOPWV
)@@G@@   LABEL .  @#@@@@GOPLST   LABEL .  @E@@@@         MOVE  DGOPCT,0,I .   WW
)@@G@@     SET PAGE NUMBER TO 0     @F@@@@         LOADA X1,IOBIN .          CWX
)@@G@@ARD PRESENT, GET NEXT CARD    @^@@@@         USING IOCB,X1 .@D@@@@      WY
)@@G@@   LOAD  X1,IOCBAD .         GET CARD IMAGE     @E@@@@         STORE X1,WZ
)@@G@@DLXCDD .         SAVE CARD IMAGE POINTER  @E@@@@         LOAD  A8,DGOCDFXA
)@@G@@ .         GET TYPE OF CARD FLAG    @D@@@@         IF    A8,EQ,0,I THEN,XB
)@@G@@GOPLS1 . -> OK CARD     @F@@@@         IF    A8,LT,2,I THEN,GOREST . *PLXC
)@@G@@UM OR *EOF, SO NEXT JOB @C@@@@         MOVE  DGOCDF,0,I .        SET IMAXD
)@@G@@GE=0  @#@@@@GOPLS1   LABEL .  @F@@@@         MOVE  DZZFP,0,I .         RXE
)@@G@@ESET FIRST PROGRAM SWITCH     @^@@@@         USING WORD,X1 .@C@@@@      XF
)@@G@@   LINK ZHDG .               SET HEADING  @D@@@@         MOVE  DGOLIN+11XG
)@@G@@,KBLANK,22 .  CLEAR PRINT LINE@A@@@@         MOVE DGOLIN,GOSUBS,11 .    XH
)@@G@@@C@@@@         LINK  GOPGHD .            PRINT HEADING@C@@@@         MOVXI
)@@G@@E DGOLIN,KBLANK,11 .   CLEAR LINE   @E@@@@         MOVE  DERCCR,0,I .   XJ
)@@G@@      SET MSG BUFFER EMPTY    @^@@@@         LOADD A3,KKD0 .@ @@@@      XK
)@@G@@   STORED A3,DERMCR .   @ @@@@         STORED A3,DERMSN .   @ @@@@      XL
)@@G@@   STORED A3,DERMIT .   @F@@@@         MOVE  DGOPHL,63,I .          SET XM
)@@G@@TO TOP OF NEXT PAGE     @E@@@@         LINK  PLSYNA .            SET TO XN
)@@G@@EXECUTE PASS 1    @[@@@@.     @ @@@@/.       RETURN FROM SCAN     @C@@@@XO
)@@G@@PLSYND*  LABEL .   CONTROL POINT AFTER PASS 1   @G@@@@         LOAD  A0,XP
)@@G@@SY$$TK .         RESET STACK POINTER           *******@E@@@@         IF XQ
)@@G@@   0001,OFF,DGODFL THEN,GOPH2A . -> NO SNAP     @C@@@@         LINK  GOSXR
)@@G@@NAP .            [SNAP PHASE] @#@@@@GOPH2A   LABEL .  @D@@@@         MOVXS
)@@G@@E  DERCSY,DERCCR .     SAVE SYNA MSGS     @A@@@@         MOVE  DERMSY,DEXT
)@@G@@RMCR,2 .    @ @@@@         MOVE  DERCCR,0,I .   @ @@@@         MOVE  DERXU
)@@G@@MCR,KKD0,2 .@F@@@@         LOAD  A8,DGOMXP .         SEE IF MAXIMUM PHASXV
)@@G@@E PASSED .  @E@@@@         IF    A8,EQ,1,I THEN,GOENDT . -> MAX PHASE =SXW
)@@G@@CAN=1 @D@@@@         LINK  TVEXST-(IN 63,0,1,0) .  SET TIME OUT   @E@@@@XX
)@@G@@         LOAD  A8,DSAMSE .         SCAN ERROR TOO SEVERE    @B@@@@      XY
)@@G@@   IF    A8,GE,4,I THEN,GOENDT .    @D@@@@         MOVE  DGOPHF,GOSEMN,IXZ
)@@G@@ .   SET SEMANTICS PHASE@ @@@@         LOAD  A8,'SM',I .    @ @@@@      YA
)@@G@@   STORE A8,DGOERM .    @E@@@@         LOAD  A7,'SM',I .         LOAD SEYB
)@@G@@MANTICS PHASE     @C@@@@         LINK  ZCALL .             LOAD [SEMA]  YC
)@@G@@@E@@@@         LINK  PLSEMA .            -> LINK TO SEMANTICS     @B@@@@YD
)@@G@@PLSMND*  LABEL .   CONTROL AFTER SEMANTICS@G@@@@         LOAD  A0,SY$$TKYE
)@@G@@ .         RESET STACK POINTER           *******@C@@@@         IF    000YF
)@@G@@2,OFF,DGODFL THEN,GOPH3A .    @E@@@@         LINK  GOSNAP .            SYG
)@@G@@NAP SEMANTICS PHASE     @#@@@@GOPH3A   LABEL .  @F@@@@         LOAD  A8,YH
)@@G@@DGOMXP .         HAS MAXIMUM PHASE BEEN EXECUTED@G@@@@         IF    A8,YI
)@@G@@EQ,2,I THEN,GOENDT . -> QUIT IF SEMA=2=MAXIMUM PHASE  @F@@@@         IF YJ
)@@G@@   02,OFF,LIMALX THEN,GOPH3B . -> NO XREF ASKED FOR   @ @@@@         MOVYK
)@@G@@E  DGOERM,'AT',I .@ @@@@         LOAD  A7,'AT',I .    @D@@@@         LINYL
)@@G@@K  ZCALL .            LOAD ATTR PHASE     @E@@@@         MOVE  DGOPHF,GOYM
)@@G@@XREF,I . SET XREF AND ATTR PHASE    @^@@@@         LINK  PLATTR . @#@@@@YN
)@@G@@PLATND*  LLOC .   @E@@@@         LOAD  A8,DGOMXP .        SEE IF MAX PHAYO
)@@G@@SE REACHED  @D@@@@         IF    A8,EQ,3,I THEN,GOENDT . -> YUP, QUIT   YP
)@@G@@@#@@@@GOPH3B   LABEL .  @ @@@@         LOAD  A8,DGOMXP .    @E@@@@      YQ
)@@G@@   IF    A8,EQ,3,I THEN,GOENDT .  -> ATTR LAST PHASE  @D@@@@         MOVYR
)@@G@@E  DERCSM,DERCCR .         SAVE SEMA MSGS @ @@@@         MOVE  DERMSM,DEYS
)@@G@@RMCR,2@ @@@@         MOVE  DERCCR,0,I .   @ @@@@         MOVE  DERMCR,KKYT
)@@G@@D0,2 .@F@@@@         MOVE  DGOPHF,GOGENE,I .   SET EXECUTING PHASE TO GNYU
)@@G@@ERATE @E@@@@         MOVE  DGOERM,'CG',I .    SET CG ERROR MESSAGES     YV
)@@G@@@F@@@@         LINK  TVEXST-(IN 63,0,1,0) .  SEE IF TIMEOUT OCCURRED .  YW
)@@G@@@B@@@@.        MOVE BETACODE TO END OF CORE     @D@@@@         LOAD  A9,YX
)@@G@@ADPCBE .         GET END OF BETACODE@E@@@@         SUB   A9,ADPCBC .    YY
)@@G@@     -START OF BETACODE=SIZE  @D@@@@         LOAD  A7,ADPCND .         GYZ
)@@G@@ET END OF CORE    @D@@@@         SUB   A7,ADPCBE .         GET SIZE TO MZA
)@@G@@OVE   @G@@@@         ADD     A7,1,I .          ADJUST FOR DIFF BET RELOCZB
)@@G@@ATABLES     @G@@@@         STORE   A7,ADPBCM .       SAVE DISTANCE MOVEDZC
)@@G@@ FOR LMCP PROC    @E@@@@         LOAD  X1,ADPCND .         SET ADDRESS TZD
)@@G@@O MOVE TO   @E@@@@         STORE X1,ADPCBE .         SET NEW END OF BETAZE
)@@G@@CODE  @E@@@@         LOAD  X3,ADPCBC .         GET START OF OLD BETACODEZF
)@@G@@@^@@@@         LOAD  X2,A7 .  @C@@@@         ADD   X2,X3 .             GZG
)@@G@@ET NEW START@E@@@@         STORE X2,ADPCBC .         SET START OF BETACOZH
)@@G@@DE    @C@@@@         LOAD  X2,X1 .             GET OLD END  @^@@@@      ZI
)@@G@@   SUB   X2,A7 .  @E@@@@         LOADXI    X2,-1,I .       SET TO MOVE BZJ
)@@G@@ETACODE     @F@@@@         LOADXI X1,-1,I .          WAS A1           **ZK
)@@G@@********    @G@@@@         LR    R1,A9 .             SET SIZE OF MOVE   ZL
)@@G@@           *******@D@@@@         STORE A9,ADBCSZ .         SAVE BETACODEZM
)@@G@@ SIZE @G@@@@         BT    X1,0,*X2 .          MOVE BETACODE            ZN
)@@G@@     *******@D@@@@         LOAD  A7,'CG',I .         SET TO LOAD CGDR   ZO
)@@G@@@C@@@@         LINK  ZCALL .             LOAD PHASE   @D@@@@         LINZP
)@@G@@K  PLCGDR .            -> GENERATE CODE   @E@@@@PLCGND*   LABEL .       ZQ
)@@G@@           END OF CODE GENERATION   @G@@@@         LOAD  A0,SY$$TK .    ZR
)@@G@@     RESET STACK POINTER           *******@E@@@@         LOAD  A7,DGOLIMZS
)@@G@@ .          GET LAST TIME INTERBAL  @D@@@@         LINK  ZTINT .        ZT
)@@G@@     GET ELAPSED TIME   @D@@@@         STORE X1,DGOLIM .         SAVE COZU
)@@G@@MPILE TIME  @D@@@@         STORE X1,DGOCTM .          SET CLOCK BIF .   ZV
)@@G@@@D@@@@         LOADA X1,GOMS1 .          PRINT COMPILE TIME @^@@@@      ZW
)@@G@@   LINK  GOPUTM . @E@@@@         IF    0004,OFF,DGODFL THEN,GOPH4A . ->NZX
)@@G@@O GENE DUMP @D@@@@         LINK  GOSNAP .            [DUMP GENERATE]    ZY
)@@G@@@#@@@@GOPH4A   LABEL .  @#@@@@GOPHGA   LABEL .  @ @@@@         ON    UNOZZ
)@@G@@FMDPLUM     @^@@@@         LINK  UMDATA1  @ @@@@         OFF   UNOFMDPLUAA
)@@G@@M     @F@@@@         LOAD  A8,DGOMXP .         SET MAXIMUM PHASE REACHEDAB
)@@G@@ YET  @D@@@@         IF    A8,EQ,4,I THEN,GOENDT . -> END JOB     @E@@@@AC
)@@G@@         LINK  TVEXST-(IN 63,0,1,0) .  HAS TIME OUT OCCURRED@#@@@@GOPHABAD
)@@G@@   LABEL .  @E@@@@         MOVE  DGOERM,'EX',I .    SET EX MESSAGES PREFAE
)@@G@@IX    @ @@@@         MOVE  DERCCR,0,I     @ @@@@         MOVE  DERMCR,KKAF
)@@G@@D0,2  @ @@@@         MOVE  DERCIT,0,I .   @#@@@@GOPH4B   LABEL .  @D@@@@AG
)@@G@@         MOVE  DGOPHF,GOEXEC,I .   SET TO EXEC PHASE  @E@@@@         LOAAH
)@@G@@DA X3,IOBIN .          READ FIRST DATA CARD     @^@@@@         USING IOCAI
)@@G@@B,X3 .@E@@@@         IF    IOCBEF,ON,IOCBF2 THEN,GOPH4C . ->HARD EOF    AJ
)@@G@@@D@@@@         SET   IOCBEF,OFF,IOCBF1 . TURN OFF EOF FLAG  @#@@@@GOPH4CAK
)@@G@@   LABEL .  @C@@@@         LOAD  X1,0,I .            CANCEL TITLE @^@@@@AL
)@@G@@         LINK  ZHDG .   @#@@@@GOPH4E   LABEL .  @F@@@@         LOADA X3,AM
)@@G@@IOBOUT .         GET ADDRESS OF 'SYSPRINT' IOCB @C@@@@         MOVE  IOCAN
)@@G@@BLZ,DZZLZ .      SET LINESIZE @D@@@@         MOVE  IOCBPZ,DZZPZ .      RAO
)@@G@@ESET PAGESIZE     @D@@@@         LOAD  A7,'EX',I .         LOAD EXEC PHSAP
)@@G@@AE    @C@@@@         LINK  ZCALL .             LOAD PHASE   @D@@@@      AQ
)@@G@@   LINK  PLEXGO .            EXECUTE PROGRAM .  @B@@@@PLEXND*  LABEL .  AR
)@@G@@ CONTROL AFTER EXECUTION@G@@@@         LOAD  A0,SY$$TK .         RESET SAS
)@@G@@TACK POINTER           *******@E@@@@         MOVE  DGOPHF,GOPMDP,I .   SAT
)@@G@@ET TO PMDUMP PHASE NEXT @E@@@@         IF    0010,OFF,DGODFL THEN,GOPH5AAU
)@@G@@ . -> NO EXEC DUMP@C@@@@         SET   0010,OFF,DGODFL .   SET DUMP OFF AV
)@@G@@@E@@@@         LINK  GOSNAP .            SNAP RUNTIME ACT RECS    @#@@@@AW
)@@G@@GOPH5A   LABEL .  @#@@@@PLPMND*  LABEL .  @G@@@@         IF    GOEXEC+GOAX
)@@G@@PMDP,OFF,DGOPHF THEN,PLCRASH . ->SYSTEM CRASH   @D@@@@         LINK  EXLAY
)@@G@@XCA .                CLOSE ALL FILES@F@@@@         LOAD  A8,DGOMXP .    AZ
)@@G@@     HAS MAX PHASE BEEN EXECUTED .  @B@@@@         IF    A8,EQ,5,I THEN,BA
)@@G@@GOENDT .    @G@@@@         IF    0200,OFF,DGOPT3 THEN,PLPMNX . -> NO PMDBB
)@@G@@UMP REQUESTED     @C@@@@         LINK  PLDUMP .            ->PMDUMP     BC
)@@G@@@#@@@@PLPMNX   LABEL .  @F@@@@         IF    DGOPT5,ZERO THEN,GOENDT .  BD
)@@G@@ -> NO WALKBACK WANTED  @^@@@@         LINK  PLPMDP . @G@@@@         LOABE
)@@G@@D  A0,SY$$TK .         RESET STACK POINTER           *******@#@@@@GOENDTBF
)@@G@@   LABEL .  @#@@@@GOPH5W   LABEL .  @F@@@@         IF    0010,OFF,DGODFLBG
)@@G@@ THEN,GOENDA . -> NO SNAP NEEDED    @C@@@@         LINK GOSNAP .        BH
)@@G@@     SNAP CORE    @#@@@@GOENDA   LABEL .  @#@@@@PLCRASH*  LABEL . @C@@@@BI
)@@G@@         LOAD  A7,DGOCMT .         PRINT TIMES  @E@@@@         LINK  ZTIBJ
)@@G@@NT .             GET ELAPSED TIME INTERVAL@D@@@@         STORE A7,DGOLIMBK
)@@G@@ .         SAVE EXEC TIME     @D@@@@         LOADA X1,GOMS2 .          SBL
)@@G@@ET EXECUTE TIME   @C@@@@         LINK  GOPUTM .            PRINT ,ESSAGEBM
)@@G@@@C@@@@         LINK  ZCANIT .            CANCEL TIMER @#@@@@GOENDAL  LABBN
)@@G@@EL .  @E@@@@         MOVE  DGOPHF,GOPMDP,I .     NO MORE EXEC PHASE     BO
)@@G@@@ @@@@         ON    UNOFMDPLUM     @^@@@@         LINK  UMDATA2  @ @@@@BP
)@@G@@         OFF   UNOFMDPLUM     @B@@@@         LINK  ZEOJ .              QBQ
)@@G@@UIT   @[@@@@.     @[@@@@.     @[@@@@.     @E@@@@GODBUG*  LLOC .         BR
)@@G@@          CALL INTERACTIVE DEBUGGER @ @@@@         STORE X1,DZZSV .     BS
)@@G@@@ @@@@         STORE A7,DZZSV+1     @ @@@@         LOAD  A7,'DB',I .    BT
)@@G@@@^@@@@         LINK ZCALL .   @ @@@@         LOAD  X1,DZZSV .     @ @@@@BU
)@@G@@         LOAD  A7,DZZSV+1     @^@@@@         LINK  EXDBUG   @#@@@@GODBGRBV
)@@G@@*   LABEL . @ @@@@         LOAD  A7,'EX',I .    @^@@@@         LINK  ZCABW
)@@G@@LL .  @^@@@@         GOTO DBENDB .  @F@@@@GOLDEX*  LABEL .              BX
)@@G@@      LOAD EX PHASE, AND GO TO IT   @ @@@@         LOAD  A7,'EX',I .    BY
)@@G@@@^@@@@         LINK  ZCALL    @G@@@@         LINK  0,A3 .               BZ
)@@G@@-> GOTO A3 ADDRESS. DON'T RETURN    @[@@@@.     @[@@@@.     @[@@@@.     CA
)@@G@@@E@@@@GOLDDB*  LOCAL .                    LOAD DEBUGGER (EXDB)    @^@@@@CB
)@@G@@         LOAD  A7,'DB',I@^@@@@         LINK  ZCALL    @#@@@@         JMPCC
)@@G@@ .    @[@@@@.     @[@@@@.     @D@@@@/.       GORDCD                    RCD
)@@G@@EAD CARD ROUTINE  @#@@@@GORDCD*  LOCAL .  @ @@@@         STORE X2,DGOCSVCE
)@@G@@+1 .  @D@@@@         LOADA X1,IOBIN .          POINT TO SYSIN IOCB@C@@@@CF
)@@G@@         LINK  IOREAD .            [READ CARD]  @C@@@@         GOTO  GORCG
)@@G@@DEF .            ->END OF FILE@#@@@@GORDST   LABEL .  @^@@@@         USICH
)@@G@@NG IOCB,X1 .@E@@@@         LOAD  X2,IOCBAD .         GET CARD IMAGE ADDRCI
)@@G@@ESS   @F@@@@         STORE X2,DGOCSV .         SET X1= CARD IMAGE  PTR OCJ
)@@G@@N RETN@E@@@@         MOVE  DLXPCK,0,I .        SET COL 1 NOT NEEDED     CK
)@@G@@@E@@@@         LOAD  A7,DGOCDF .         CHECK FLAG ON CARD TYPE  @E@@@@CL
)@@G@@         IF    A7,NE,4,I THEN,GORDRT . -> NOT * PROCESS     @D@@@@      CM
)@@G@@   LINK  IOREAD .            READ NEXT CARD     @C@@@@         GOTO  GORCN
)@@G@@DEF              . -> GOTO EOF@E@@@@         LOAD  X2,IOCBAD .         GCO
)@@G@@ET PTR TO CARD IMAGE    @D@@@@         STORE X2,DGOCSV .         SAVE PTCP
)@@G@@R ON RETURN @D@@@@         USING WORD,X2 .           SEE IF *PROCESS    CQ
)@@G@@@D@@@@         LOAD  X1,X2 .             PRINT NEW HEADING  @^@@@@      CR
)@@G@@   LINK  ZHDG .   @C@@@@         LINK  GOPGHD .            PRINT HEADINGCS
)@@G@@@E@@@@         MOVE  DGOCDF,4,I .        SET NORMAL CARD TYPE     @#@@@@CT
)@@G@@GORDRT   LABEL .  @ @@@@         LOAD  X1,DGOCSV .    @ @@@@         LOACU
)@@G@@D  X2,DGOCSV+1 .  @C@@@@         JMP .                     -> RETURN    CV
)@@G@@@ @@@@.        END OF FILE ROUTINE  @#@@@@GORDEF   LABEL .  @C@@@@      CW
)@@G@@   LOAD  A7,DGOCDF .         GET FLAG     @D@@@@         IF    A7,EQ,1,ICX
)@@G@@ THEN,GORDRT  ELSE,GORDST .   @^@@@@/.       PRINT ROUTINES @D@@@@.     CY
)@@G@@   GOPRNT ON ENTRY X2=CARRIAGE CONTROL, X1=IMAGE@B@@@@.        GOPRNTL XCZ
)@@G@@1=IMAGE , X2 SET TO 1   @#@@@@GOPRTL*  LABEL .  @D@@@@         LOAD  X2,DA
)@@G@@1,I .            SET TO SKIP 1 LINE @#@@@@GOPRNT*  LOCAL .  @C@@@@      DB
)@@G@@   STORE X3,DGOCSV .         SAVE REGS    @ @@@@         STORED A1,DGOCSDC
)@@G@@V+3 . @ @@@@         STORED A7,DGOCSV+1 . @E@@@@         LOAD  A7,DGOPHFDD
)@@G@@ .         SEE IF IN EXEC PHASE     @F@@@@         IF    A7,GE,GOEXEC,I DE
)@@G@@THEN,GOPRT2 .      -> EXEC PHASE    @H@@@@.        LA,XH2 A7,DGOLCT-(IN DF
)@@G@@63,H2,1,0) . GET CUTRENT LINE COUNT        *****@E@@@@.        LOADA X3,DG
)@@G@@IOBOUT .         POINT TO SYSPRINT IOCB   @^@@@@         USING IOCB,X3  DH
)@@G@@@F@@@@.        IF    A7,LT,IOCBPZ THEN,GOZC .          -> NO NEW PAGE   DI
)@@G@@@C@@@@.        LINK  GOPGHD .            NEW PAGE     @C@@@@.        LOADJ
)@@G@@D  A7,DGOLCT .         UP LINE COUNT@#@@@@GOZC     LABEL .  @D@@@@.     DK
)@@G@@   ADD   A7,1,I .            ADD 1 TO LINE COUNT@D@@@@.        STORE A7,DL
)@@G@@DGOLCT .         SAVE NEW LINE COUNT@#@@@@GOPRT2   LABEL .  @D@@@@      DM
)@@G@@   LINK  GOPUT .             PRINT LINE IMAGE   @^@@@@         USING WORDN
)@@G@@D,X1 .@C@@@@         MOVE  W1,KBLANK,33 .      CLEAR LINE   @ @@@@      DO
)@@G@@   LOAD  X3,DGOCSV .    @ @@@@         LOADD A7,DGOCSV+1 .  @ @@@@      DP
)@@G@@   LOADD A1,DGOCSV+3 .  @#@@@@         JMP .    @[@@@@.     @C@@@@.     DQ
)@@G@@   GOPGHD                    PAGE HEADING @#@@@@GOPGHD   LOCAL .  @E@@@@DR
)@@G@@         STORED                    A7,DGOPSV .   SAVE REGS  @ @@@@      DS
)@@G@@   STORE X1,DGOPSV+2 .  @G@@@@         IF    0040,OFF,DGOPT3 THEN,GOPG4 DT
)@@G@@. -> BACKGROUD JOB, LONG I/O  @E@@@@         MOVE DGOLCT,-9999,I .     MDU
)@@G@@AKE SURE NO PAGE EJECT  @C@@@@         GOTO  GOPG5 .             -> RETUDV
)@@G@@RN    @#@@@@GOPG4   LABEL .   @E@@@@         LOAD  A7,DGOPHF .         SDW
)@@G@@EE IF SUBHEADING NEEDED @D@@@@         IF    A7,NE,GOSYNA,I THEN,GOPG1 .DX
)@@G@@ ->NOT SCAN @D@@@@         LOADA X1,DGOLIN .         SCAN SUBHEADING    DY
)@@G@@@#@@@@GOPGO    LABEL .  @C@@@@         LOAD  X2,63,I .             SKIP DZ
)@@G@@LINE  @^@@@@         LINK  GOPUT .  @D@@@@         LOADA X1,KBLANK .    EA
)@@G@@     PRINT BLANK LINE   @C@@@@         LOAD  X2,1,I .            SKIP ONEB
)@@G@@E LINE@^@@@@         LINK  GOPUT .  @#@@@@GOPG3    LABEL .  @C@@@@      EC
)@@G@@   MOVE  DGOLCT,7,I .       SET TO LINE 10@#@@@@GOPG5   LABEL .   @B@@@@ED
)@@G@@         LOADD A7,DGOPSV .         RETURN @ @@@@         LOAD  X1,DGOPSVEE
)@@G@@+2 .  @C@@@@         LOAD  X2,1,I .            SET SKIP 1   @#@@@@      EF
)@@G@@   JMP .    @#@@@@GOPG1    LABEL .  @F@@@@         GOTO  GOPG3 .        EG
)@@G@@     -> ADD XREF LINE LATER ******* @[@@@@.     @B@@@@.        GOPUT SECEH
)@@G@@OND LEVEL PRINT ROUTINE @#@@@@GOPUT    LOCAL .  @C@@@@         STORE X1,EI
)@@G@@DGOWD .          SAVE REGS    @ @@@@         STORE X2,DGOWD+1 .   @ @@@@EJ
)@@G@@         STORED A1,DGOWD+2 .  @C@@@@         LOADA X1,IOBOUT .         GEK
)@@G@@ET IOCB     @^@@@@         USING IOCB,X1 .@E@@@@         LOAD  A1,DGOPHFEL
)@@G@@ .         SEE IF IN EXEC PHASE     @F@@@@         IF    A1,LT,GOEXEC,I EM
)@@G@@THEN,GOPUT1 .      ->NOT EXEC PHASE @D@@@@         LOAD  X2,IOCBAD .    EN
)@@G@@     POINT TO CARD IMAGE@^@@@@         USING WORD,X2 .@G@@@@         IF EO
)@@G@@   W1,EQ,KBLANK,33 THEN,GOPUT1 . DO NOT PRINT BLANK LINE    @C@@@@      EP
)@@G@@   LINK  IOWRIT .            PRINT LINE   @D@@@@         LINK  GOPUTP . EQ
)@@G@@           CHECK PAGE FAULT   @#@@@@GOPUT1   LABEL .  @D@@@@         LOAER
)@@G@@D  X2,IOCBAD .         POINT TO CARD IMAGE@C@@@@         LOAD  X1,DGOWD ES
)@@G@@.          FILL BUFFER  @ @@@@         LOADA A3,W1,X1 .     @ @@@@      ET
)@@G@@   LOADA A2,W1,X2 .     @^@@@@         LOAD  R1,33,I .@^@@@@         LINEU
)@@G@@K  MO$VE .  @C@@@@         LOADA X1,IOBOUT .         PRINT LINE   @E@@@@EV
)@@G@@         MOVE  IOCBSK,DGOWD+1 .    MOVE CARRIAGE CONTROL    @^@@@@      EW
)@@G@@   LINK  IOWRIT . @D@@@@.        LOAD  A1,DGOPHF .         IS IT EXEC PHEX
)@@G@@ASE   @E@@@@.        IF    A1,NE,GOEXEC,I THEN,GOPUT2 .      -> RETURN  EY
)@@G@@@ @@@@.        FIX BYTES FOR MESSAGE@#@@@@GOPUT2   LABEL .  @B@@@@      EZ
)@@G@@   LOAD  X1,DGOWD .          RETURN @ @@@@         LOADD A1,DGOWD+2 .   FA
)@@G@@@B@@@@         JMP .                     ->RETRN@^@@@@         USING IOCFB
)@@G@@B,X1  @#@@@@GOPUTP   LLOC .   @E@@@@         LOAD  A2,IOCBLN .         UFC
)@@G@@P PAGE COUNTER IF NEC   @^@@@@         ADD   A2,1,I . @F@@@@         IF FD
)@@G@@   A2,LT,IOCBPZ THEN,GOPTPC .        OK LINE NUMBER   @C@@@@         LOAFE
)@@G@@D  A2,IOCBPZ .         GET PAGESIZE @B@@@@         SUB   A2,1,I .       FF
)@@G@@     -1     @E@@@@GOPTPC   LABEL .                   LET RTIO SIGNAL PAGFG
)@@G@@E     @C@@@@         STORE A2,IOCBLN .         SET PAGESIZE @C@@@@      FH
)@@G@@   LJMP .                    -> RETURN    @[@@@@.     @F@@@@.        GOPFI
)@@G@@UTM                    PRINT COMPILE TIME MESSAGES    @#@@@@GOPUTM   LOCFJ
)@@G@@AL .  @^@@@@         USING WORD,X1 .@E@@@@         LOAD  X2,W1 .        FK
)@@G@@     GET NUMBER OF MESSAGE    @E@@@@         MOVE  DGOLIN,W1+1,R,X2 .  MFL
)@@G@@OVE MESSAGE INTO AREA   @E@@@@         ADD   X2,DGOLIN,I .       POINT AFM
)@@G@@FTER THE TEXT     @^@@@@         USING WORD,X2 .@B@@@@         CVE   A7,FN
)@@G@@W1 .          GET TIME  @D@@@@         MOVE  W1+2,GOMSGX,2 .     SET 'MIFO
)@@G@@KLISECONDS' @D@@@@         LOADA X1,DGOLIN .          POINT TO MESSAGE  FP
)@@G@@@C@@@@         LINK  GOPRTL .            PRINT LINE   @C@@@@         JMPFQ
)@@G@@ .                     -> RETURN    @G@@@@GOMS1    +3 .                 FR
)@@G@@                   ***********************@^@@@@         'COMPILE TIME' FS
)@@G@@@G@@@@GOMS2    +4 .                                             ********FT
)@@G@@******@ @@@@         'EXECUTION TIME  ' . @^@@@@GOMSGX   ' MSEC.  ' .   FU
)@@G@@@#@@@@FILL(1)   CSECT 3 @^@@@@GOSUBS    SFW   0 .     @E@@@@          'LFV
)@@G@@INE BLOCK DEPTH DO STMT    SOURCE STATEMENT'    @C@@@@.        GOSNAP   FW
)@@G@@                 DUMP PHASE   @#@@@@GOSNAP   LOCAL .  @D@@@@         LOAFX
)@@G@@DA X1,TVST .           DUMP WORKSPACE     @D@@@@         LOAD  X2,ADPCNDFY
)@@G@@ .         GET END OF CORE    @C@@@@         LINK  ZSNAP .             SFZ
)@@G@@NAL CORE    @C@@@@         JMP .                     -> RETURN    @ @@@@GA
)@@G@@/.       IOCB  PROCESSING     @#@@@@IOGET*   LOCAL .  @ @@@@         STOGB
)@@G@@RED A1,DGOWD+4 .  @^@@@@         USING WORD,X1 .@E@@@@         IF    W1,GC
)@@G@@EQ,KFDIN,2 THEN,IOGET1 .       -> SYSIN   @C@@@@         LOADA X1,IOBOUTGD
)@@G@@ .         SET SYSPRINT @#@@@@IOGETR   LABEL .  @ @@@@         LOADD A1,GE
)@@G@@DGOWD+4 .   @^@@@@         JMP . RETURN   @#@@@@IOGET1   LABEL .  @D@@@@GF
)@@G@@         LOADA X1,IOBIN .          SET SYSIN RETURN   @B@@@@         GOTGG
)@@G@@O  IOGETR .            RETURN @[@@@@.     @C@@@@.        IOOPEN AND IOCLGH
)@@G@@OS . NOT NE(EDED FOR SIR@#@@@@IOOPNR*  LABEL .  @#@@@@IOOPNW*  LABEL .  GI
)@@G@@@#@@@@IOCLOS*  LLOC .   @C@@@@         LJMP 2 .                  -> RETUGJ
)@@G@@RN    @[@@@@.     @F@@@@.        IOREAD                    READ RECORD XGK
)@@G@@1=IOCB POINTER    @#@@@@IOREAD*  LOCAL .  @C@@@@         STORE  A7,DGOISGL
)@@G@@V+2 .      SABE REGS    @ @@@@         STORE X1,DGOISV .    @ @@@@      GM
)@@G@@   STORE X2,DGOISV+1 .  @D@@@@         MOVE  EOFLAG,0,I .        RESET EGN
)@@G@@OF FLAG     @D@@@@         LINK  IOWRST .            CHECK FOR FILE OPENGO
)@@G@@@E@@@@         LINK ZGET .               READ RECORD X1=IMAGE     @F@@@@GP
)@@G@@         IF    A7,EQ,0,I THEN,IORD1 .            -> CARD READ IN  @C@@@@GQ
)@@G@@GOEDD    LABEL .                   END OF FILE  @^@@@@         USING IOCGR
)@@G@@B,X2 .@C@@@@         MOVE  EOFLAG,1,I .        SET EOF FLAG @E@@@@      GS
)@@G@@   SET   IOCBEF,ON,IOCBF1 .  SET EOF FLAG ON IN IOECB @C@@@@         IF GT
)@@G@@   A7,EQ,1,I THEN,IORD1 . -> @EOF   @B@@@@         SET   IOCBEF,ON,IOCBFGU
)@@G@@2 . HARD EOF@#@@@@IORD1    LABEL .  @E@@@@         STORE X1,IOCBAD .    GV
)@@G@@     SET POINTER TO CARD IMAGE@E@@@@         MOVE  DGOCDF,0,I .        RGW
)@@G@@ESET CARD TYPE FLAG     @E@@@@         IF    EOFLAG,ZERO THEN,IORDS1 .  GX
)@@G@@       -> NOT EOF @D@@@@         MOVE  DGOCDF,1,I .        SET EOF ON REGY
)@@G@@TURN  @E@@@@         GOTO  IORWRT              .             RETURN     GZ
)@@G@@@C@@@@IORERR   LABEL .                   FILE ERROR   @D@@@@         EXEHA
)@@G@@RR ERGMS9 LEVEL,3 .    [QUIT] I/O ERROR   @#@@@@IORDS1   LABEL .  @^@@@@HB
)@@G@@         USING WORD,X1 .@D@@@@         LOAD  A7,W1 .             GET KEYHC
)@@G@@WORD START  @E@@@@         IF    A7,NE,IOSPR THEN,IORD4 . -> NOT *PROCESHD
)@@G@@S     @C@@@@         MOVE  DGOCDF,4,I .        SET *PROCESS @B@@@@      HE
)@@G@@   GOTO  IORWRT .            RETURN @#@@@@IORD4    LABEL .  @C@@@@      HF
)@@G@@   LOAD  A7,DGOISV+2 .       RESTORE REGS @ @@@@         LOAD  X1,DGOISVHG
)@@G@@ .    @ @@@@         LOAD  X2,DGOISV+1 .  @C@@@@         JMP   1 .      HH
)@@G@@           NORMAL RETURN@#@@@@IOWRST   LLOC .   @^@@@@         USING IOCHI
)@@G@@B,X1  @F@@@@         IF    IOCBOP,OFF,IOCBF1 THEN,IORERR .     FILE CLOSHJ
)@@G@@ED    @D@@@@         IF    IOCBEF,ON,IOCBF1 THEN,GOEDD . -> EOF   @B@@@@HK
)@@G@@         LOAD  X2,X1 .             SET REG@C@@@@         LJMP .         HL
)@@G@@           -> RETURN    @C@@@@IORWRT   LABEL .                   ERROR RHM
)@@G@@ETURN @ @@@@         LOAD  X1,DGOISV .    @ @@@@         LOAD  X2,DGOISVHN
)@@G@@+1 .  @^@@@@         JMP . RETURN   @[@@@@.     @D@@@@.        IOWRIT   HO
)@@G@@                 X1=IOCB ADDRESS    @#@@@@IOWRIT*  LOCAL .  @ @@@@      HP
)@@G@@   STORE X1,DGOISV .    @ @@@@         STORE X2,DGOISV+1 .  @ @@@@      HQ
)@@G@@   STORE A7,DGOISV+2 .  @ @@@@         STORED A1,DGOISV+4 . @D@@@@      HR
)@@G@@   LINK  IOWRST .            CHECK FOR FILE OPEN@C@@@@         LINK ZPUTHS
)@@G@@ .               PRINT LINE   @E@@@@         IF    A7,NE,0,I THEN,IORERRHT
)@@G@@ .           -> ERROR   @^@@@@         USING IOCB,X2  @^@@@@         USIHU
)@@G@@NG WORD,X1 .@D@@@@         LOAD  A7,DGOPHF .         SEE IF EXEC PHASE  HV
)@@G@@@F@@@@         IF    A7,NE,GOEXEC,I THEN,IOWRS1 .      -> NOT EXEC PHASEHW
)@@G@@@D@@@@         LOAD  A7,DGOLCT .         GET LINE COUNT     @B@@@@      HX
)@@G@@   ADD   A7,1,I .            +1     @D@@@@         STORE A7,DGOLCT .    HY
)@@G@@     SAVE NEW LINE COUNT@#@@@@IOWRS1   LABEL .  @C@@@@         LOAD  X1,HZ
)@@G@@IOCBAD .         CLEAR LINE   @D@@@@         LOAD  A7,IOCBLR .         SIA
)@@G@@ET LINE LENGTH    @C@@@@         MOVE  W1,KBLANK,R,A7 .    CLEAR LINE   IB
)@@G@@@B@@@@         LOAD  A7,DGOISV+2 .       RETURN @ @@@@         LOADD A1,IC
)@@G@@DGOISV+4 .  @ @@@@         LOAD  X1,DGOISV .    @ @@@@         LOAD  X2,ID
)@@G@@DGOISV+1 .  @#@@@@         JMP .    @B@@@@/.       PLALC ALLOCATE CORE IIE
)@@G@@N SD AREA   @C@@@@.        ENTRY A7=NUMBER OF WORDS TO ALLOCATE   @ @@@@IF
)@@G@@.        EXIT X3= -> NEW SD   @C@@@@PLALC*   LOCAL .                   EIG
)@@G@@NTRY POINT  @E@@@@         LOAD  X3,ADPCSE .         GET NEXT SD LOCATIOIH
)@@G@@N     @D@@@@         ADD   A7,X3 .             SEE IF TOO MUCH    @D@@@@II
)@@G@@         IF    A7,GE,ADPCSN THEN,GOALCR . -> ERROR    @D@@@@         STOIJ
)@@G@@RE A7,ADPCSE .         SET NEW SD LIMIT   @^@@@@         USING WORD,X3 .IK
)@@G@@@F@@@@         SUB   A7,X3 .             GET NUMBER OF WORDS TO MOVE    IL
)@@G@@@G@@@@         LOAD  R1,A7 .             SET SIZE OF SD                *IM
)@@G@@******@G@@@@         LOADA X11,KKD0 .          SET FILL CHARACTER       IN
)@@G@@     *******@G@@@@         LOAD  A3,X3 .             SET MOVE REG       IO
)@@G@@           *******@G@@@@         LOADXI A3,1,I  .          SET INCREMENTIP
)@@G@@                 *******@G@@@@         BT    A3,0,*X11 .         CLEAR SIQ
)@@G@@D                      *******@^@@@@         JMP . RETURN   @#@@@@GOALCRIR
)@@G@@   LABEL .  @E@@@@         EXERR ERGMS8 LEVEL,3 . -> TOO MUCH CORE NEEDEIS
)@@G@@D,QUIT@D@@@@GOBR5    GOTO  0,X11 .             NOT TIME OUT INST  @#@@@@IT
)@@G@@PLEX     CSECT 3 .@#@@@@GOUNMD   SFW   0 .@#@@@@         '  <U'   @#@@@@IU
)@@G@@         '. OF'   @#@@@@         ' MD.'   @#@@@@         ' PL/'   @#@@@@IV
)@@G@@         '1>  '   @^@@@@IOSPR    SF    '*PRO' . @#@@@@         CEND .   IW
)@@G@@@F@@@@ERGMS6   EQU   2 .                 TOO MANY COMPILE TIME MESSAGES IX
)@@G@@@C@@@@ERGMS9   EQU   3 .                 I/O ERROR    @E@@@@ERGMS3   EQUIY
)@@G@@   4 .                 MAXIMUM LINES PRINTED    @D@@@@ERGMS8   EQU   5 .IZ
)@@G@@                 TABLE OVERFLOW - SD@#@@@@         END .    ___SYSPRINT JA
)@@G@@@#@@@@IOGETR   LABEL .  @ @@@@         LOADD A1,DGOWD+4 .   @^@@@@      JB
)@@G@@   JMP . RETURN   @#@@@@ENTRY IS UPDATED. IF SUBEXPRESSION  @D@@@@.     JC
)@@G@@  IS IN A TEMP LOCATION THE TEMP IS DEASSIGNED. @ @@@@DEAS*    L,M    AAJD
)@@G@@1,07777     @^@@@@        S       BB3,DS96@D@@@@        AND     AA1,*0,BJE
)@@G@@11              SUBEXP NO.    @^@@@@        L       BB2,AA2 @^@@@@      JF
)@@G@@  A,M     B11,1   @^@@@@        S,H2    B11,DS90@D@@@@        L,S3    BBJG
)@@G@@3,SUBEXD,BB2          SUBEXD,TLOC   @^@@@@        TLEM,M  BB3,12  @C@@@@JH
)@@G@@        J       DS92                    B-REG   @C@@@@        SZ,H1   ARJI
)@@G@@EGB1-12,BB3           AREG,EXP@D@@@@DS50    L,T1    BB1,SUBEXD,BB2      JJ
)@@G@@    SUBEXD,PLOC   @^@@@@        TZ      BB1     @D@@@@        LMJ     B1JK
)@@G@@1,DTEMP               DEASSIGN TEMP @^@@@@        L       BB3,DS96@H@@@@JL
)@@G@@       J      *DS90                                                     JM
)@@G@@REENT @^@@@@DS92    TNZ     BB3     @E@@@@        J       DS50          JN
)@@G@@          NO REG ASSIGNED     @ @@@@        L,S3    AA1,IRW2,BB3  @^@@@@JO
)@@G@@        TLE,S6  AA1,LEVC@E@@@@        J       DS94                    DOJP
)@@G@@ NOT DEASSIGN     @^@@@@        TE,M    AA1,075 @F@@@@        LMJ     B1JQ
)@@G@@1,DIR                 ADD INDEX TO DEASSIGN LIST@^@@@@        J       DSJR
)@@G@@50    @^@@@@DS94    L,M     AA1,1   @D@@@@        S,S2    AA1,IRW2,BB3  JS
)@@G@@          LAST OCCUR SET@^@@@@        J       DS50    @ @@@@. DEASSIGN TJT
)@@G@@RIAD IN A-REG     @E@@@@.       PARAMETER SPECIFIES TRIAD TO BE DEASSIGNJU
)@@G@@ED. IF THE  @F@@@@.       TRIAD IS IN A FILM REGISTER THE APPROPRIATE ARJV
)@@G@@EG TABLE    @E@@@@.       ENTRY IS UPDATED. IF TRIAD IS IN TEMP THE TEMPJW
)@@G@@ IS   @^@@@@.       DEASSIGNED.     @^@@@@DEAS2*  NOP     0,0     @ @@@@JX
)@@G@@        L       BB1,*0,B11    @^@@@@        TP,XH2  *0,B11  @^@@@@      JY
)@@G@@  ANX,M  BB1,0,*0 @^@@@@        A,M     B11,1   @ @@@@        S,H2    B1JZ
)@@G@@1,DSS90     @D@@@@        L,T3    B11,TT6,BB1             TT6, FILM LOC.KA
)@@G@@@^@@@@        TZ      B11     @D@@@@        SZ,H1   AREGB1-12,B11       KB
)@@G@@    AREG, EXP     @D@@@@        L,T1    BB1,TT6,BB1             TT6, TEMKC
)@@G@@P LOC.@^@@@@        TZ      BB1     @D@@@@        LMJ     B11,DTEMP     KD
)@@G@@          DEASSIGN TEMP @H@@@@        J      *DSS90                     KE
)@@G@@                              REENT @H@]@@COUNT*    PROC    .           KF
)@@G@@                                          REGIST@H@]@@        L      AA4KG
)@@G@@,LCTR                                                 REGIST@H@]@@      KH
)@@G@@  A,M    AA4,1                                                    REGISTKI
)@@G@@@H@]@@        S      AA4,LCTR                                           KJ
)@@G@@      REGIST@H@]@@        END                                           KK
)@@G@@                  REGIST@H@@@@.    THE  FOLLOWING CODE GENERATED THE INSKL
)@@G@@TRUCTIONS TO SAVE THE         REGIST@H@@@@.    REGISTERS USED IN A COMPIKM
)@@G@@LATION THAT ARE NOT VOLATILE              REGIST@H@@@@SAVER*   S,H2   B1KN
)@@G@@1,SR90                                                REGIST@H@#@@      KO
)@@G@@ L,M    AA5,020                                                   NDVAR KP
)@@G@@@H@#@@       TZ      CRUAL        FOR REENTERENT CODE REMOVE B1 BY      KQ
)@@G@@      NDVAR @H@#@@       S,S2   AA5,SR92       FORCING 18 BIT ADDRESSINGKR
)@@G@@                  NDVAR @H#@@@        L      AA5,LCNR                   KS
)@@G@@                              REGIST@H@@@@.      AT THIS POINT THE A REGKT
)@@G@@ISTERS ARE SAVED.    S4 OF N0RGTB         REGIST@H@@@@.     HAS A BIT IFKU
)@@G@@ REGISTER SHOULD BE SAVED AND N5RGTB HAS A BIT IN S1  REGIST@H@@@@.     KV
)@@G@@IF THE REGISTER HAS BEEN USED                                     REGISTKW
)@@G@@@H@@@@        L,M    AA1,16            NUMBER                           KX
)@@G@@      REGIST@H@@@@        L,H2   AA2,RRSA       COUNTS TEMP ASSIGNED/SETKY
)@@G@@ IN RESTORE CODE  REGIST@H@@@@        L,M    BB1,0         INDEXES THRU KZ
)@@G@@TABLE                         REGIST@H@@@@SV10    TNZ,S1  N5RGTB,BB1    LA
)@@G@@                                          REGIST@H@@@@        J      SV1LB
)@@G@@2           REGISTER NOT USED                         REGIST@H@@@@      LC
)@@G@@   TNZ,S3  N0RGTB+1,BB1                                           REGISTLD
)@@G@@@H@@@@        J      SV12          REGISTER NEED NOT BE SAVED           LE
)@@G@@      REGIST@H@@@@        TNZ,S1  N5RGTB+1,BB1                          LF
)@@G@@                  REGIST@H@@@@        J      SV15          USE SINGLE LOLG
)@@G@@AD SAVE                       REGIST@H@@@@         TNZ,S3  N0RGTB+2,BB1 LH
)@@G@@                                          REGIST@H@@@@        J      SV1LI
)@@G@@5          USE SINGLE LOAD SAVE                       REGIST@H@@@@      LJ
)@@G@@  L      AA3,(DS    A0,0)                                         REGISTLK
)@@G@@@H@@@@        L,M    AA4,0,BB1                                          LL
)@@G@@      REGIST@H@@@@        SSC    AA4,14         ALLIGN WITH A FIELD     LM
)@@G@@                  REGIST@H@@@@        A      AA3,AA4                    LN
)@@G@@                              REGIST@H@@@@        A      AA3,AA2       TLO
)@@G@@EMP NUMBER                                REGIST@H@@@@        S      AA3LP
)@@G@@,SR92+1                                               REGIST@H@@@@      LQ
)@@G@@   LMJ    B11,FILE61                                              REGISTLR
)@@G@@@H@@@@         +SR92                                                    LS
)@@G@@      REGIST@H@]@@        COUNT       .                                 LT
)@@G@@                  REGIST@H@@@@        A,M    BB1,2            INDEX FOR LU
)@@G@@A REG TABLE                   REGIST@H@@@@        AN,M   AA1,2          LV
)@@G@@  NUMBER TO LOOK AT                       REGIST@H@@@@        A,M    AA2LW
)@@G@@,2         TEMP NUMBER                                REGIST@H@@@@      LX
)@@G@@  JNZ     AA1,SV10                                                REGISTLY
)@@G@@@H@@@@        J      SV20                                               LZ
)@@G@@      REGIST@H@@@@SV12    A,M    BB1,1           CODE TO SKIP TO NEXT REMA
)@@G@@G                 REGIST@H@@@@        AN,M   AA1,1                      MB
)@@G@@                              REGIST@H@@@@        JNZ    AA1,SV10       MC
)@@G@@                                          REGIST@H@@@@        J      SV2MD
)@@G@@0                                                     REGIST@H@@@@SV15  ME
)@@G@@  L      AA3,(SA       A0,0)                                      REGISTMF
)@@G@@@H@@@@        L,M    AA4,0,BB1                                          MG
)@@G@@      REGIST@H@@@@        SSC    AA4,14        AAIGN WITH A FIELD       MH
)@@G@@                  REGIST@H@@@@        A      AA3,AA4                    MI
)@@G@@                              REGIST@H@@@@        A      AA3,AA2       TMJ
)@@G@@EMP NUMBER                                REGIST@H@@@@        S      AA3MK
)@@G@@,SR92+1                                               REGIST@H@@@@      ML
)@@G@@  LMJ    B11,FILE61                                               REGISTMM
)@@G@@@H@@@@        +SR92                                                     MN
)@@G@@      REGIST@H@]@@        COUNT       .                                 MO
)@@G@@                  REGIST@H@@@@        A,M    AA2,1           INCREMENT TMP
)@@G@@EMP NUMBER                    REGIST@H@@@@        J      SV12           MQ
)@@G@@                                          REGIST@H@@@@SV20  .   THIS SECMR
)@@G@@TION SAVES B REGISTERS.   S2 OF N0RGTB IS SET IS      REGIST@H@@@@.    IMS
)@@G@@NDEX SHOULD BE SAVED AND S1 OF N5RGTB IS SET IF REGSITER          REGISTMT
)@@G@@@H@@@@.   HAS BEEN USED                                                 MU
)@@G@@      REGIST@H@@@@        L,M    AA1,12            COUNTS INDEX REGISTERMV
)@@G@@S                 REGIST@H@@@@        L,M    BB1,0            INDEXES INMW
)@@G@@DEX REGISTERS                 REGIST@H@@@@SV31    TZ,S1  N0RGTB+1,BB1   MX
)@@G@@     REG NEED NOT BE SAVED                REGIST@H@@@@        TNZ,S2  N5MY
)@@G@@RGTB,BB1                                              REGIST@H@@@@      MZ
)@@G@@   J      SV30           INDEX REGISTER NOT ASSIGNED              REGISTNA
)@@G@@@H@@@@        L      AA3,(SX    B0,0)                                   NB
)@@G@@      REGIST@H@@@@         L,M   AA4,0,BB1                              NC
)@@G@@                  REGIST@H@@@@        SSC    AA4,14          ALLIGN WITHND
)@@G@@ A FIELD                      REGIST@H@@@@        A      AA3,AA4        NE
)@@G@@                                          REGIST@H@@@@        A      AA3NF
)@@G@@,AA2      TEMP NUMBER                                 REGIST@H@@@@      NG
)@@G@@  S      AA3,SR92+1                                               REGISTNH
)@@G@@@H@@@@        LMJ    B11,FILE61                                         NI
)@@G@@      REGIST@H@@@@        +SR92                                         NJ
)@@G@@                  REGIST@H@]@@        COUNT       .                     NK
)@@G@@                              REGIST@H@@@@        A,M    AA2,1         UNL
)@@G@@P TEMP STORAGE                            REGIST@H@@@@SV30    A,M    BB1NM
)@@G@@,1                                                    REGIST@H@@@@      NN
)@@G@@  AN,M   AA1,1                                                    REGISTNO
)@@G@@@H@@@@        JNZ    AA1,SV31                                           NP
)@@G@@      REGIST@H@@@@SV40  .    THIS SECTION SAVES R REGISTERS             NQ
)@@G@@                  REGIST@H@@@@.    S6 OF N0RGTB IS SET IF R REGISTER SHONR
)@@G@@ULD BE SAVED AND S3 OF N5RGTB REGIST@H@@@@.    IS SET IF REGISTER IS USENS
)@@G@@D                                         REGIST@C@@@@        L,M    AA1NT
)@@G@@,16    .   COUNTS R REGISTERS @H@@@@        L,M    BB1,0       INDEXES RNU
)@@G@@ REGSITERS                          REGIST@H@@@@SV41    TZ,S5  N0RGTB+1,NV
)@@G@@BB1       REG NEED NOT BE SAVED                 REGIST@H@@@@         TNZNW
)@@G@@,S3  N5RGTB,BB1                                             REGIST@H@@@@NX
)@@G@@        J      SV50       R REGSITERS NOT ASSIGNED                      NY
)@@G@@REGIST@H@@@@        L      AA3,(SR      R0,0)                           NZ
)@@G@@            REGIST@H@@@@        L,M    AA4,0,BB1                        OA
)@@G@@                        REGIST@H@@@@        SSC    AA4,14        ALLIGN OB
)@@G@@WITH A FIELD                        REGIST@H@@@@        A      AA3,AA4  OC
)@@G@@                                                REGIST@H@@@@        A   OD
)@@G@@   AA3,AA2       TEMP NUMBER                                REGIST@H@@@@OE
)@@G@@        S      AA3,SR92+(J@@[[^@)^@)^@)^@)^@)^@)^@)^@)^@)^[NE(]E-MCD#E))OF
)@@G@@AC)C1MD9H^[ND[^ (IE(H *1C-[FC!E- ETO (JEL^C(MC(^@L@[[[CTJE[T^@1AK5A03^@)OG
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^[DC0)ETCC)!D1PD*!AD^CDT (OC(NE)!D9MC- EL C))OH
)@@G@@B*)FL ELJC(N@I@[[[CTJE[T^@1AK5A04^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^[HOI
)@@G@@D9QC*)^81^8)E-J^[NC(IC)!ETR 0)@H@[[[CTJE[T^@1AK5A05^@)^@)^@)^@)^@)^@)^[DOJ
)@@G@@C0)ELNC)!E[MD9# (#D-[ETN^[ID9O^@.^@$CTT^8)@I@[[[CTJE[T^@1AK5A06^@)^@)^@)OK
)@@G@@^@)^@)^@)^@)^@)^[BD8)E-J^@4A00 (#D[ CTF (#CDGD)!E[CFDN 0)^@)@J@[[[CTJE[TOL
)@@G@@^@1AK5A07^@)^@)^@)^@)^@)^@)^[DC0)ELNC)!ELND-O^@.^@$DC)^@)^@)^8)D9M^@$DDDOM
)@@G@@^@)^@)^8)^@)@K@[[[CTJE[T^@1AK5A08^@)^@)^@)^@)^@)^@)^@)^@)^[JEK)^9IELH^@)ON
)@@G@@^@$^[JEK)^9[E-T^@)^@$^[JEK)^9CE[Q^@)^@$^@)@I@[[[CTJE[T^@1AK5A09^@)^@)^@)OO
)@@G@@^@)^@)^@)^@)^@)^[BD8)E-J^@4A00 (#D[ CTF (#CDGD)!E[CFDN 0)^@)@H@[[[CTJE[TOP
)@@G@@^@1AK5A80^@)^@)^@)^@)^@)^@)^[DC0)ELNC)!ELND-O (NE-[E-PES)D1JE))B*)^9M^8)OQ
)@@G@@@I@[[[CTJE[T^@1AK5A81^@)^@)^@)^@)^@)^@)^@)^@)^[BD8)E-J^@4A00 (#D[ CTF (#OR
)@@G@@CDGD)!E[CFDN 0)^@)@R@[[[CTJE[T^@1AK5A82^@)^@)^@)^@) K)^@)^[HD9QC*)ETKCD#OS
)@@G@@C(N^[OD8)E9N (ND-^ (MC(# ))ETGC)!D9RD1 EK!EL CS,^@)^@)^@)^@)^@)^@)^@)^@)OT
)@@G@@^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5A83^@)^@)^@)^@) K)^@)^[[CT#C(KE))E9NOU
)@@G@@ (ND-^ (^CDT^[AELJD*)C-[FC,^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)OV
)@@G@@^@)^@)A*2A@5A0)^@)@O@[[[CTJE[T^@1AK5A84^@)^@)^@)^@) K)^@)^[[CT#C(KE))E9NOW
)@@G@@ (ND-^ (ODDHC*)C1MD9H^[ODDHC*,^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)OX
)@@G@@(#@@[[^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5A85^@)^@)^@)^@) K)^@)^[HD9QC*)OY
)@@G@@ETCC)!D-[CK)^@)^@)^@)^@)^@)^@)^@)^[OD8)^[RES!ETGC)!D-[CK,^@)^@)^@)^@)^@)OZ
)@@G@@^@)^@)^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5A86^@)^@)^@)^@) K)^@)^[HD9QC*)PA
)@@G@@^9#FC$^@)^@)^@)^@)^@)^@)^@)^@)^@)^[OD8)^[RES!C1DD-G 0)^@)^@)^@)^@)^@)^@)PB
)@@G@@^@)^@)^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5A87^@)^@)^@)^@) K)^@)^[HD9QC*)PC
)@@G@@ETCC)!CD#CTO (IE(H^@)^@)^@)^@)^@)^[OD8)^[RES!ETGC)!CD#CTO (IE(H 0)^@)^@)PD
)@@G@@^@)^@)^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5A88^@)^@)^@)^@) K)^@)^[HD9QC*)PE
)@@G@@E9N (ND-^ (MC(#^@)^@)^@)^@)^@)^@)^[OD8)^[ND-^ (MC(# 0)^@)^@)^@)^@)^@)^@)PF
)@@G@@^@)^@)^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5A89^@)^@)^@)^@) K)^@)^[HD9QC*)PG
)@@G@@E9N (ND-^ (EE(G (^CDT^@)^@)^@)^@)^[OD8)^[ND-^ (^CDOC*,^@)^@)^@)^@)^@)^@)PH
)@@G@@^@)^@)^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5B@0^@)^@)^@)^@) K)^@)^[HD9QC*)PI
)@@G@@E9N (ND-^ (ODDHC*6^[OD8)ETGC)!E-DD(  0)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)PJ
)@@G@@^@)^@)^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5B@1^@)^@)^@)^@) K)^@)^[HD9QC*)PK
)@@G@@^9N^8)E-J^[ND-^ (OFDKC*,^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)PL
)@@G@@^@)^@)^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5B@2^@)^@)^@)^@) K)^@)^[HD9QC*)PM
)@@G@@^9N^8)E-J^[ND-^ (NE-[E-PES,^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)PN
)@@G@@^@)^@)^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5B@3^@)^@)^@)^@) K)^@)^[HD9QC*)PO
)@@G@@ETCC)!ETKC(# (IE(H^[OD8)ETGC)!ETKC(# (IE(H 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)PP
)@@G@@^@)^@)^@)^@)A*2A@5A0)^@)@#@[[[CTJE[T^@1AK5B@4^@)(O@@[[^@)^@)^@) K)^@)^[HPQ
)@@G@@D9QC*)ETGC)!DT FC)E-J^[ND-^ (JE9IC(M (FC(T 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)PR
)@@G@@^@)^@)^@)^@)^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5B@5^@)^@)^@)^@) K)^@)^[APS
)@@G@@DDIC))ETGC)!D9RD1 EK!EL CS)EL CTJEL^^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)PT
)@@G@@^@)^@)^@)^@)^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5B@6^@)^@)^@)^@) K)^@)^@)PU
)@@G@@^@)^[JD0)C(MELJEK)C9J^[OD8)A)6A[[ (#D[ CTF (JE9IC(M 0)^@)^@)^@)^@)^@)^@)PV
)@@G@@^@)^@)^@)^@)^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5B@7^@)^@)^@)^@) K)^@)^[BPW
)@@G@@D8)E-J^@4A00CC!E9ME)!ETGC),^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)PX
)@@G@@^@)^@)^@)^@)^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5B@8^@)^@)^@)^@) K4A00CC!PY
)@@G@@CTCC(#DS!D9RD1 EK,^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)PZ
)@@G@@^@)^@)^@)^@)^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5B@9^@)^@)^@)^@) K)^@)^[DQA
)@@G@@C0)C(MELJEK!CTJC- ^@.^@$A@7^8)D9M^@$AC3^8)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)QB
)@@G@@^@)^@)^@)^@)^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5BC0^@)^@)^@)^@) K)^@)^@)QC
)@@G@@^@)^[IC(SE))ET D1OC(ICT ^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)QD
)@@G@@^@)^@)^@)^@)^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5BC1^@)^@)^@)^@) K)^@)^[ QE
)@@G@@D-NC*)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)QF
)@@G@@^@)^@)^@)^@)^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5BC2^@)^@)^@)^@) K)^@)^@)QG
)@@G@@^@)^[BD8)E-J^@4BC9 (^D(N ( ELM 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)QH
)@@G@@^@)^@)^@)^@)^@)^@)A*2A@5A0)^@)@E@[[[CTJE[T^@1AK5BC3^@)^@)^@)^@) K)^@)^[NQI
)@@G@@E-JEL ^[ND-^ (JE9IC(M (M(H@@[[C(#^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)QJ
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5BC4^@)^@)^@)^@) K)QK
)@@G@@^@)^@)^@)^[JD0)C(MELJEK)C9J^[OD8)A)9BC!C-HES!C(MEK,^@)^@)^@)^@)^@)^@)^@)QL
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5BC5^@)^@)^@)^@) K4QM
)@@G@@A00CC!E9ME)!ETGC),^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)QN
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5BC6^@)^@)^@)^@) K)QO
)@@G@@^@)^[NE-JEL ^[ND-^ (MC(#^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)QP
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)A*2A@5A0)^@)@R@[[[CTJE[T^@1AK5BC7^@)^@)^@)^@) K)QQ
)@@G@@^@)^@)^@)^[JD0)C(MELJEK)C9J^[OD8)A)9BC!C-HES!C(MEK,^@)^@)^@)^@)^@)^@)^@)QR
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)A*2A@5A0)^@)@E@[[[CTJE[T^@1AK5BC8^@)^@)^@)^@)^@4QS
)@@G@@A00 (#D[ CTF (#CDGD)!E[CFDN 0)@I@[[[CTJE[T^@1AK5BC9^@)^@)^@)^@)^@)^@)^[DQT
)@@G@@C0)ETCC)!CT[D-G (KD[TES!D9KE))B*)^9I^8)D9M^@$CC$@R@[[[CTJE[T^@1AK6A@0^@)QU
)@@G@@^@)^@)^@) K)^@)^@)^@)^[HD9QC*)FL ELJC(N^@)^@)^@)^@)^@)^@)^[OD8)^[NE(] (JQV
)@@G@@EL^^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)AS0B@6AK)^@)@R@[[[CTJE[T^@1AK6A@1^@)QW
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[BD8)E-J^@4A00CK!D[ CDQFC!D( E-[D)!ETGC),^@)^@)^@)QX
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)AS0B@6AK)^@)@I@[[[CTJE[T^@1AK6A@2^@)QY
)@@G@@^@)^@)^@)^@)^@)^[DC0)ELNC)!AD^CDT (OC(NE)!D9KE))B*)^9T^8)CDIC))^@)@J@[[[QZ
)@@G@@CTJE[T^@1AK6A@3^@)^@)^@)^@)^@)^@)^@)^@)ETCC)!D1PD*!AD^CDT (OC(NE)!D9MC- RA
)@@G@@EL C))B0)FL ELJC(N@C@[[[CTJE[T^@1AK6A@4^@)^@)^@)^@) K)^@)^@)^@)^[HD9QC*)RB
)@@G@@(C@@[[FL ELJC(N^@)^@)^@)^@)^@)^@)^[OD8)^[NE(] (JEL^^@)@R@[[[CTJE[T^@1AK6RC
)@@G@@A@5^@)^@)^@)^@)^@)^@)^@)^@)^[BD8)E-J^@4A00CK!D[ CDQFC!D( E-[D)!ETGC),^@)RD
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)AS0B@6AK)^@)@K@[[[CTJE[T^@1AK6RE
)@@G@@A@6^@)^@)^@)^@)^@)^@)^[HD9QC*)ETKCD#C(N^[OD8)ETGC)!EL CS?^[ND-^ (JE9IC(MRF
)@@G@@ (MC(# 0)^@)@H@[[[CTJE[T^@1AK6A@7^@)^@)^@)^@)^@)^@)^[[CT#C(KE))E9N (ND-^RG
)@@G@@ (^CDT^[AELJD*)C-[FC,^@)@H@[[[CTJE[T^@1AK6A@8^@)^@)^@)^@)^@)^@)^[[CT#C(KRH
)@@G@@E))E9N (ND-^ (ODDHC*)C1MD9H^[ODDHC*,@K@[[[CTJE[T^@1AK6A@9^@)^@)^@)^@)^@)RI
)@@G@@^@)^[HD9QC*)E9N (ND-^ (EE(G (^CDT^@)^@)^@)^@)^[OD8)^[ND-^ (^CDOC*,@K@[[[RJ
)@@G@@CTJE[T^@1AK6AC0^@)^@)^@)^@)^@)^@)^[HD9QC*)E9N (ND-^ (ODDHC*6^@)^@)^@)^@)RK
)@@G@@^@)^[OD8)^[ND-^ (ODDHC*,@K@[[[CTJE[T^@1AK6AC1^@)^@)^@)^@)^@)^@)^[HD9QC*)RL
)@@G@@^9#^8)^@)^@)^@)^@)^@)^@)^@)^@)^@)^[OD8)^[ND-^ (OFDKC*,@L@[[[CTJE[T^@1AK6RM
)@@G@@AC2^@)^@)^@)^@)^@)^@)^[HD9QC*)ETCC)!ETKC(# (IE(H^@)^@)^@)^@)^@)^[OD8)^[NRN
)@@G@@D-^ (NE[ CS!D1PD*,@L@[[[CTJE[T^@1AK6AC3^@)^@)^@)^@)^@)^@)^[HD9QC*)ETCC)!RO
)@@G@@E-MCDIES!CTJC- ^@)^@)^@)^@)^[OD8)^[#D[ CTF (OEL[D1N 0)@D@[[[CTJE[T^@1AK6RP
)@@G@@AC4^@)^@)^@)^@)^@)^@)^[DC0)CTKE*!E-MCDIES)@M@[[[CTJE[T^@1AK6AC5^@)^@)^@)RQ
)@@G@@^@)^@)^@)^@)^@)^[HD9QC*)^9#E[P^8)^@)^@)^@)^@)^@)^@)^[OD8)^[ND-^ (ME[O (NRR
)@@G@@C(L (IE(H^@)@B@[[[CTJE[T^@1AK6AC6^@)^@)^@)^@)^@)^@)^[ D-NC*)@M@[[[CTJE[TRS
)@@G@@^@1AK6AC7^@)^@)^@)^@)^@)^@)^@)^@)^[HD9QC*)ETCC)!CLMD1#D@)^@)^@)^@)^@)^[ORT
)@@G@@D8)^[ND-^ (ME[O (NC(L (IE(H 0)@]@[[[CTJE[T^@1AK6(J@@[[AC8^@)^@)^@)^@)^@)RU
)@@G@@^@)^[HD9QC*)ETGC)!EL CS)^@)^@)^@)^@)^@)^@)^@)^[OD8)^[RES!ETGC)!EL CS,^@)RV
)@@G@@@K@[[[CTJE[T^@1AK6AC9^@)^@)^@)^@)^@)^@)^[HD9QC*)ETCC)!EL CS)^@)^@)^@)^@)RW
)@@G@@^@)^@)^@)^[OD8)^[CD9GC)!ETCC),@G@[[[CTJE[T^@1AK6AK0^@)^@)^@)^@)^@)^@)^[DRX
)@@G@@C0)D[JD-^ (ND[^ ([D))B0)ETKCD#C(N^@)@L@[[[CTJE[T^@1AK6AK1^@)^@)^@)^@)^@)RY
)@@G@@^@)^@)^@)^[HD9QC*)D[JD-^ (ND[^ ([D))^@)^@)^@)^[OD8)^[RES!ETGC)!D-[CK)^@)RZ
)@@G@@@B@[[[CTJE[T^@1AK6AK2^@)^@)^@)^@)^@)^@)^[ D-NC*)@L@[[[CTJE[T^@1AK6AK3^@)SA
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[HD9QC*)ETCC)!D-[CK)^@)^@)^@)^@)^@)^[OD8)^[RES!ETGSB
)@@G@@C)!D-[CK,^@)@K@[[[CTJE[T^@1AK6AK4^@)^@)^@)^@)^@)^@)^[HD9QC*)^8<^S$^@)^@)SC
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[OD8)^[RES!C1DD-G 0)@D@[[[CTJE[T^@1AK6AK5^@)^@)^@)SD
)@@G@@^@)^@)^@)^[DC0)CTKE*!E-MCDIES)@M@[[[CTJE[T^@1AK6AK6^@)^@)^@)^@)^@)^@)^@)SE
)@@G@@^@)^[HD9QC*)FL ELJC(N^@)^@)^@)^@)^@)^@)^[OD8)^[RES!ETGC)!CD#CTO (IE(H^@)SF
)@@G@@@B@[[[CTJE[T^@1AK6AK7^@)^@)^@)^@)^@)^@)^[ D-NC*)@M@[[[CTJE[T^@1AK6AK8^@)SG
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[HD9QC*)ETCC)!CD#CTO (IE(H^@)^@)^@)^[OD8)^[RES!ETGSH
)@@G@@C)!CD#CTO (IE(H 0)@K@[[[CTJE[T^@1AK6AK9^@)^@)^@)^@)^@)^@)^[HD9QC*)E9N (NSI
)@@G@@D-^ (MC(#^@)^@)^@)^@)^@)^@)^[OD8)^[ND-^ (MC(# 0)@M@[[[CTJE[T^@1AK6AS0^@)SJ
)@@G@@^@)^@)^@)^@)^@)^[HD9QC*)ETGC)!DT FC)^@)^@)^@)^@)^@)^@)^@)^[OD8)^[ND-^ (JSK
)@@G@@E9IC(M (FC(T 0)^@)@#@[[[^@)^@)^@1AK6AS1^@)@G@[[[CTJE[T^@1AK6AS2^@)^@)^@)SL
)@@G@@^@)^@)^@)^[ADDIC))ETGC)!D9RD1 EK!EL CS)EL CTJEL^@B@[[[CTJE[T^@1AK6AS3^@)SM
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[J(C@@[[D0)C(MELJEK)C9J^[OD8)A)6A@!CTCC(#DS!D9RD1 SN
)@@G@@EK,^@)@F@[[[CTJE[T^@1AK6AS4^@)^@)^@)^@)^@)^@)^[BD8)E-J^@4A00 (RELO (ND-^SO
)@@G@@ 0)^@)@D@[[[CTJE[T^@1AK6AS5^@)^@)^@)^@)^@4A00 (#D[ CTF (JE9IC(M 0)@H@[[[SP
)@@G@@CTJE[T^@1AK6AS6^@)^@)^@)^@)^@)^@)^[DC0)C(MELJEK!CTJC- ^@.^@$A@7^8)D9M^@$SQ
)@@G@@AC3^8)@E@[[[CTJE[T^@1AK6AS7^@)^@)^@)^@)^@)^@)^@)^@)^[IC(SE))ET D1OC(ICT SR
)@@G@@@B@[[[CTJE[T^@1AK6AS8^@)^@)^@)^@)^@)^@)^[ D-NC*)@G@[[[CTJE[T^@1AK6AS9^@)SS
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[BD8)E-J^@4BC9 (^D(N ( ELM 0)^@)@F@[[[CTJE[T^@1AK6ST
)@@G@@A)0^@)^@)^@)^@)^@)^@)^[NE-JEL ^[ND-^ (JE9IC(M (MC(#^@)@I@[[[CTJE[T^@1AK6SU
)@@G@@A)1^@)^@)^@)^@)^@)^@)^@)^@)^[JD0)C(MELJEK)C9J^[OD8)A)9BC!C-HES!C(MEK,^@)SV
)@@G@@@C@[[[CTJE[T^@1AK6A)2^@)^@)^@)^@)^@4A00 (RELO (ND-^ 0)@D@[[[CTJE[T^@1AK6SW
)@@G@@A)3^@)^@)^@)^@)^@)^@)^[NE-JEL ^[ND-^ (MC(#@I@[[[CTJE[T^@1AK6A)4^@)^@)^@)SX
)@@G@@^@)^@)^@)^@)^@)^[JD0)C(MELJEK)C9J^[OD8)A)9BC!C-HES!C(MEK,^@)@#@[[[^@)^@)SY
)@@G@@^@1AK6A)5^@)@O@[[[CTJE[T^@1AK6A)6^@)^@)^@)^@) K% K% K% K% K% K% K% K% K%SZ
)@@G@@ K% K% K% K% K% K% K% K% K% K% K% K% K% K% K% K% K% K% K% K% K% K%@O@[[[TA
)@@G@@CTJE[T^@1AK6A)7^@)^@)^@)^@) K)E-CC*)C1JD-GD9RDDIC8)CLPDDGC-N^[[^[NC(IC))TB
)@@G@@D-JC8)C1JEK)D[ CDQFC)D( E-[D))EL E[JELODDIC8,^@%@O@[[[CTJE[T^@1AK6A)8^@)TC
)@@G@@^@)^@)^@) K% K% K% K% K% K% K% K% K% K% K% K% K% K% K% K% K% K% K% K% K%TD
)@@G@@ K% K% K% K% K% K% K% K% K% K%@M@[[[CTJE[T^@1AK6A)9^@)^@)^@)^@)^@4A00CK!TE
)@@G@@D[ CDQFC!D( E-[D)!ETGC),^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)TF
)@@G@@( @@[[^@)^@)^@)^@)^@)^@)AS0B@6AK)^@)@R@[[[CTJE[T^@1AK6A*0^@)^@)^@)^@) K)TG
)@@G@@^@)^[DC0)ETCC)!EL EC!C1JELH (ID8)D1JE))B*)^85A[I^8)^@)^@)^@)^@)^@)^@)^@)TH
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)A)0A@9AS)^@)@R@[[[CTJE[T^@1AK6A*1^@)^@)^@)^@)^@)TI
)@@G@@^@)^[DC0) [MET^ (METGE)!E- ETO (IE(H^@.^@$A@0A86AK5^8)D9M^@$A81A80A@9^8(TJ
)@@G@@^[JEK)^@)^@)^@)^@)^@)^@)A)0A@9AS)^@)@S@[[[CTJE[T^@1AK6A*2^@)^@)^@)^@)^@)TK
)@@G@@^@)^@)^@) [ND[^ (MC(L (AD9MD*!D1J^@.^@$A*0D0$^[JEK)^87A[I^8(^@)^@)^@)^@)TL
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)A)0B@9AD^D@?A*0AK1@R@[[[CTJE[T^@1AK6A*3^@)^@)^@)TM
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[IC(SE))ET D1OC(ICT ^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)TN
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)A)0A@9AS)^@)@R@[[[CTJE[T^@1AK6A*4^@)^@)^@)TO
)@@G@@^@) K)^@)^@)^@)^@)^[ D-NC*)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)TP
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)A)0B@9AD^D@)@R@[[[CTJE[T^@1AK6A*5^@)^@)^@)TQ
)@@G@@^@) K)^@)^@)^@)^@)^@)^@)^@)^[HD9QC*)FL ELJC(N^[OD8)ETPCK!D9MC))^@)^@)^@)TR
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)A)0B@9AD^D@)@R@[[[CTJE[T^@1AK6A*6^@)^@)^@)TS
)@@G@@^@) K)^@)^@)^@)^@)^@)^@)^@)^[BD8)E-J^@4A00 (JEL^ (DE- D*!ETOCDOE(N^@)^@)TT
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)A)0B@9AD^D@)@R@[[[CTJE[T^@1AK6A*7^@)^@)^@)TU
)@@G@@^@)^@)^@)^[ D-NC*)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)TV
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)A)0A@9AS)^@)@R@[[[CTJE[T^@1AK6A*8^@)^@)^@)TW
)@@G@@^@)^@)^@)^@)^@)^[HD9QC*)FL ELJC(N^[OD8)ETPCK!D9MC))^@)^@)^@)^@)^@)^@)^@)TX
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)AS0B@6AK)^@)@@@[[[**PF**@@@@Z^@@@@@@@@@@@[TY
)@@G@@@#&@@@]FE@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@P@TZ
)@@G@@@]O@@@]F^ ;Q@@@@@@@@@@@D@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@]UF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@UL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@E@@DSORTF       @@^@@@@@[@@CUM
)@@G@@NEWS        @ @@@[@@@@@^@@@@W@JX*^#DKTCORE      @@@@@@@@[@@#            UN
)@@G@@@ @@@[]@@@@[@@@@W^J8N^#DKTCORE      @@@@@@@@ @@@            @@@@WA@@[@@[UO
)@@G@@@@@@W J8O^#DSORTF       @@B@@@@@[@@@DOC         @ @@@[B@@@@A@@@@WBJU4^#DUP
)@@G@@SORTF-DRIVER@@@@@@@@[@@A            @ @@@[]@@@@-@@@@WH^+RDDESORTF-DRIVERUQ
)@@G@@@@@@@@@@ @@@            @@@@W4@@[@@A@@@@W,^>)DDESORTF       @@@@@@@@[@@@UR
)@@G@@            @ @@@[]@@@[)@@@@W5HF3[QFSORTF       @@@@@@@@ @@D            US
)@@G@@@@@@Y(@@[@@O@@@@YPHG9[QFSORTF       @@@@@@@@A@@@            )@@]@@@@@@@UUT
)@@G@@@@@@Y%HH^[QFHDG         @@@@@@@@[@@;            @ @@@[]@@@@Q@@@@X5C;CFKCUU
)@@G@@NEWEDQ      @@@@@@@K[@@@            @ @@@["@@@@[@@@@YFK%_ CECALLR       UV
)@@G@@@@@@@@@@[@@.            @ @@@[]@@@@X@@@@YGC/XFKCEDDBF       @@@@@@@@[@[@UW
)@@G@@            @ @@@[]@@@@S@@@@Y(MV#D]BCOMMAND     @@@@@@@K[@@@SUMMARY     UX
)@@G@@@ @@@[[@@@[L@@@@Z[OV'CJBNEWCOPY     @@@@@@@K[@@@            @ @@@["@@@@[UY
)@@G@@@@@@)MK'^A]EPRINT       @@@@@@@@[@@5            @ @@@[]@@@@O@@@@)NC"8FKCUZ
)@@G@@DNG         @@@@@?@@[@@4            @ @@@[]@@@@Y@@@@)$C.=FKCCTABLE      VA
)@@G@@@@@@@@@K[@@@            @ @@@[[@@@[!@@@@- N6<CAEMQNLIST     @@@@@@@@[@@@VB
)@@G@@            @ @@@[.@@@@O@@@@+2O%MCHBEDQS        @@@@@@@]A@@@            VC
)@@G@@=@@#@@@@@@C?@@@@<AMY-D#EIRAS        @@@@@@@@[@@3            @ @@@[]@@@[OVD
)@@G@@@@@@:2C86FKCSDFI        @@@@@@@@[@@R            @ @[@]]@@@@4@@@@!A 76BTCVE
)@@G@@SDFI        @@@@@@@@ @@@            @@@@,[@@[@@B@@@@!'G#*EBETXD         VF
)@@G@@@@@@@@@K[@@9            @ @@@[]@@@[8@@@@,]E1UCZEIMM         @@@@@@@@[@@'VG
)@@G@@            @ @@@[]@@@@0@@@@\'C'#FKCTOPS        @@@@@@@@[@@6            VH
)@@G@@@ @@@[]@@@@T@@@@0%D]KFKCVARS        @@@@@Y@@[@@1            @ @@@[]@@@[!VI
)@@G@@@@@@1#I,#DYDMISC        @@@@@@@@[@@\            @ @@@[]@@@ G@@@@20BPOFEEVJ
)@@G@@MAIN        @@@@@@@@[@@@MAP         @ @@@[A@@@@#@@@@7/C ,CKBMSGS        VK
)@@G@@@@@@@@@K[@@"            @ @@@[]@@@@'@@@@7_C1&FKCFLC         @@@@@@@@[@@2VL
)@@G@@            @ @@@[]@@@#8@@@@89A5OFEEGP          @@@@@@@@[@@8            VM
)@@G@@@ @@@[]@@@# @@@@/1D#AFKCINSTALLATION@@@@@@@@[@@@            @ @@@[B@@@@$VN
)@@G@@@@@@_6O0UGYBMCCF        @@@@@@@@ @@@            @@@[@4@@I@@R@@@[@XMP8FFEVO
)@@G@@P1MAP       @@>@@@@@[@@@            @ @@@[A@@@@ @@@[[]C^>CKBEDQC$       VP
)@@G@@@@@@@@@@[@[EP1MAP       @ @@@[A@@@@ @@@[[BL5/FFEP1MAP       @@(@@@@@[@@@VQ
)@@G@@SNOOPY      @ @@@[A@@@@A@@@[[GC^>CKBCERU$       @@@@@@@@[@@$            VR
)@@G@@@ @@@[]@@@@K@@@[[MN@!BECCERU$       @@@@@@@@ @@@ATT         @@@[[+@@A@@@VS
)@@G@@@@@[[+L17EHESYSIO       @@@@@@@@[@@,            @ @@@[]@@@[/@@@[[*B?OFEEVT
)@@G@@P1MAP       @@@@@@@@[@@@FLAP        @ @@@[A@@@@ @@@[#=C^>CKBFILE        VU
)@@G@@@@@@[D@@[@@7            @ @@@[]@@@#P@@@[#(D[FFKCMACS        @@@@@@@@[@@0VV
)@@G@@            @ @@@[]@@@#K@@@[A"C3)FKCEDQT        @@@@@@@@[@@@P1MAP       VW
)@@G@@@ @@@[A@@@@ @@@[EIL*>FFEEDDBK       @@@@@@@@[@@_            @ @@@[]@@@[EVX
)@@G@@@@@[ENL^2 ]CSYSIO       @@@@@@@@ @@@            @@@[F\@@^@@M@@@[FXK<4G]EVY
)@@G@@MISC        @@@@@@@@ @@@            @@@[G=@@O@@1@@@[F3K=MG]EMACS        VZ
)@@G@@@@@@@@@@ @@@            @@@[HL@@^@@T@@@[G8K=!G]EVARS        @@@@@@@@ @@@WA
)@@G@@            @@@[H-@@#@@G@@@[HPK=/G]EFLC         @@@@@@@@ @@@            WB
)@@G@@@@@[I#@@^@@Z@@@[H=K>LG]EIRAS        @@@@@@@@ @@@            @@@[IN@@^@@GWC
)@@G@@@@@[IBK>)G]EDNG         @@@@@@@@ @@@            @@@[IW@@#@@ @@@[IRK>%G]EWD
)@@G@@PRINT       @@@@@@@@ @@@            @@@[I+@@]@@#@@@[IZK>2G]ETOPS        WE
)@@G@@@@@@@@@@ @@@            @@@[I*@@#@@^@@@[I=K>'G]EFILE        @@@@@@@@ @@@WF
)@@G@@            @@@[JE@@A@@Z@@@[I:K&IG]EGP          @@@@@@@@ @@@            WG
)@@G@@@@@[J%@@ @@U@@@[JKK&>G]ETXD         @@@@@@@@ @@@            @@@[J8@@]@@DWH
)@@G@@@@@[J\K&,G]EIMM         @@@@@@@@ @@@            @@@[K[@@#@@B@@@[J'K&'G]EWI
)@@G@@HDG         @@@@@@@@ @@@            @@@[KC@@]@@^@@@[K^K$^G]ESEQ         WJ
)@@G@@@@@@@@@@ @@@            @@@[KI@@]@@^@@@[KEK$GG]ECALLR       @@@@@@@@ @@@WK
)@@G@@            @@@[KP@@#@@ @@@[KKK$RG]EMSGS        @@@@@@@@ @@@            WL
)@@G@@@@@[K(@@J@@L@@@[KSK$=G]EEDDBK       @@@@@@@@ @@@            @@@[LQ@@G@@YWM
)@@G@@@@@[K8K(WG]EEDDBF       @@@@@@@@ @@@            @@@[L>@@]@@#@@@[L+K(*G]EWN
)@@G@@MANUAL      @@@@@@@K[@@@            @ @@@[[@@@NX@@@[L$N)'D#EMCC         WO
)@@G@@@@@@@@@@[@[#            @ @@@[]@@@]Z@@@[>^C1&FKCMCC         @@@@@@@@ @@@WP
)@@G@@            @@@[$'@@I@@R@@@[$<M97G#EEDBM        @@@@@@@@[@[             WQ
)@@G@@@ @@@[]@@@@^@@@[*CMV#D]BEDBM        @@@@@@@@ @@@            @@@[*H@@]@@[WR
)@@G@@@@@[*GM;GG#EEDPC        @@@@@@@@]@@@            @[@@@[@@@@]N@@@[*JHJIGFEWS
)@@G@@INIT        @@@@@@@@ @@@            @@@[:=@@ @[]@@@[%+HRXGFEEDQX        WT
)@@G@@@@@@@@@]A@@@            =@@#@@@@@@ <@@@[:(HTRGFEEDQ         @@@@@@@]A@[HWU
)@@G@@            =@@#@[@@@@ <@@@[1GHUPGFEEDQC$       @@@@@@@]A@@@            WV
)@@G@@=@@#@@@@@@ <@@@[6\HU7GFEINIT        @@@@@@@@]@@@            @[@@@[]@@@A1WW
)@@G@@@@@[/MH>ZGFEMACROS      @@@@@@@@[@@@NYU         @ @@@[@@@@@C@@@]##[2']]FWX
)@@G@@EDQ         @@@@@@@K[@@@NEWS        @ @@@[[@@@#K@@@]#F[2;]]FAAPCT       WY
)@@G@@@@@@@@@@[@@@            @ @@@[@@@@@K@@@@!4F]L[QFCKEY        @@@@@@@@[@@@WZ
)@@G@@            @ @@@[@@@@[D@@@@,^FAO[QFCNSLIT      @@@@@@@@[@@@            XA
)@@G@@@ @@@[@@@@@B@@@@\HFE:[QFCSN         @@@@@@@@[@@@            @ @@@[@@@@@^XB
)@@G@@@@@@\OJ"<GBECSTART      @@@@@@@@[@@@            @ @@@[@@@@@H@@@@\SK[/GBEXC
)@@G@@DA          @@@@@@@@[@@@            @ @@@[@@@@@[@@@@\>K]$GBEDRC         XD
)@@G@@@@@@@@@@[@@@            @ @@@[@@@@@^@@@@\&KA1GBEEX8LOD      @@@@@@@@[@@@XE
)@@G@@            @ @@@[@@@@@]@@@@\%KB[GBEEXITF0      @@@@@@@@[@@@            XF
)@@G@@@ @@@[@@@@@+@@@@\?KEXGBEFNCCNT      @@@@[)@@[@@@            @ @@@[@@@@@^XG
)@@G@@@@@@0IKFQGBEINIT1       @@@@[(@@[@@@            @ @@@[@@@@@^@@@@0MI(Q[]FXH
)@@G@@INIT2       @@@@@@@@[@@@            @ @@@[@@@@@^@@@@0QKG3GBEIO          XI
)@@G@@@@@@@@@@[@@@            @ @@@[@@@@@D@@@@0UAW9GMEKPOOL       @@@@@@@@[@@@XJ
)@@G@@            @ @@@[@@@@@[@@@@0<KQNGBELBYTES      @@@@@@@@[@@@            XK
)@@G@@@ @@@[@@@@@ @@@@0=[STGCERSSUBS      @@@@@@@@[@@@            @ @@@[@@@@@GXL
)@@G@@@@@@0(KSMGBESYMPRS      @@@@@@@@[@@@            @ @@@[@@@@@ @@@@05[X-GCEXM
)@@G@@UPREG       @@@@@@@@[@@@            @ @@@[@@@@@#@@@@0'H9[[PFDACCC       XN
)@@G@@@@@@@@@@[@@@            @ @@@[@@@@@B@@@@0.GCO[QFDALOAD      @@@@@@@@[@@@XO
)@@G@@            @ @@@[@@@@@^@@@@1^GH\[QFFISTUP      @@@@@@@@[@@@            XP
)@@G@@@ @@@[@@@@@[@@@@1CI!"[PFSMUPQ       @@@@@@@@[@@@            @ @@@[@@@@@]XQ
)@@G@@@@@@1DJ#SGFETM          @@@@@@@@[@@@            @ @@@[@@@@@[@@@@1F[X-GCEXR
)@@G@@TSWAP       @@@@@@@@[@@@            @ @@@[@@@@@]@@@@1G[X-GCEUPROAR      XS
)@@G@@@@@@@@@@[@@@            @ @@@[@@@@@#@@@@1IJW"[PFSMSAPR      @@@@@@@@[@@@XT
)@@G@@            @ @@@[@@@@@]@@@@1LN43[XFMSCON       @@@@@@@@[@@@            XU
)@@G@@@ @@@[@@@@@)@@@@1NIYYFJECSA         @@@@@@@@[@@@            @ @@@[@@@@@(XV
)@@G@@@@@@13 !RFREDISP        @@@@@@@@[@@@            @ @@@[[@@@[H@@@@4CM]WEKEXW
)@@G@@DMITRM      @@@@@@@@[@@@            @ @@@[@@@@@L@@@@5PN9?EKEGCCERA      XX
)@@G@@@@@@@@@@[@@@            @ @@@[@@@@@H@@@@5&OBHEKEEX8MAP      @@@@@@@@[@@@XY
)@@G@@            @ @@@[@@@@@]@@@@53[=)EMEBDSPOT      @@@@@@@@[@@@            XZ
)@@G@@@ @@@[@@@@@E@@@@55N.?EOEBOOT1       @@@@@@@@[@@@            @ @@@[@@@@@]YA
)@@G@@@@@@5_N"GEOEBOOT2       @@@@@@@@[@@@            @ @@@[@@@@@F@@@@6[N"+EOEYB
)@@G@@COMR        @@@@@@@@[@@@            @ @@@[@@@@@[@@@@6GN"_EOELBYTES      YC
)@@G@@@@@@@@@@[@@@            @ @@@[@@@@@ @@@@6HN_UEOEMSUP        @@@@@@@@[@@@YD
)@@G@@            @ @@@[@@@@@#@@@@6MO@IEOEPNTERR      @@@@@@@@[@@@            YE
)@@G@@@ @@@[@@@@@L@@@@6PO@-EOESMADCL      @@@@@@@@[@@@            @ @@@[@@@@@^YF
)@@G@@@@@@6&OKDEOEDALOAD      @@@@@@@@[@@@            @ @@@[@@@@@^@@@@6%OMUEOEYG
)@@G@@DLABEL      @@@@@@@@[@@@            @ @@@[@@@@@#@@@@6,OM1EOEFIFREE      YH
)@@G@@@@@@@@@@[@@@            @ @@@[@@@@@D@@@@61OM;EOEFICKAC      @@@@@@@@[@@@YI
)@@G@@            @ @@@[@@@@@ @@@@6'ON]EOEFICKAF      @@@@@@@@[@@@            YJ
)@@G@@@ @@@[@@@@@Q@@@@6_ONBEOEFIMAIN      @@@@@@@@[@@@            @ @@@[@@@@@KYK
)@@G@@@@@@7PONOEOELOGIT       @@@@@@@@[@@@            @ @@@[@@@@@3@@@@7>[L&EPEYL
)@@G@@IO-WITH-FIX @@@@@@@@[@@@            @ @@@[@@@@[[@@@@8SL3 EQEAASMTAGS    YM
)@@G@@@@@@@@@@[@@@            @ @@@[[@@@[N@@@@9TEN5EREFALL        @@@@@@@@[@@@YN
)@@G@@            @ @@@[[@@@@Q@@@@'?O/1EVESN$AP       @@@@@@@@[@@@            YO
)@@G@@@ @@@[@@@@[=@@@@;]@I]EWEIO          @@@@@@@@[@@@            @ @@@[@@@@@/YP
)@@G@@@@@@/&KZ%EYEIOMSA       @@@@@@@@[@@@            @ @@@[@@@@@ @@@@.+MQREYEYQ
)@@G@@SMSAPR      @@@@]A@@[@@@            @ @@@[@@@@@F@@@@.$MU<EYESYMPRS      YR
)@@G@@@@@@@@@@[@@@            @ @@@[@@@@@B@@@@.2I <FBECSN         @@@@@@@@[@@@YS
)@@G@@            @ @@@[@@@@@B@@@@.9[@^D[DDMIIFR      @@@@@@@@[@@@            YT
)@@G@@@ @@@[@@@@@C@@@@"@H ;FQEFICRIT      @@@@@@@@[@@@            @ @@@[@@@@@<YU
)@@G@@@@@@"CI>2GDESMUPQ       @@@@@@@@[@@@            @ @@@[@@@@@ @@@@":J#4GFEYV
)@@G@@K DISTRIBUTION   <<<<<<<<<',/,@G@@@@     *'  ACCOUNT',T16,'FILES',T26,'FYW
)@@G@@IXED',T37,'REMOV',T46,'SEC TAPES',  @F@@@@     *T58,'V-OPTION',T69,'G-OPYX
)@@G@@TION',T84,'F2',T95,'F4',T105,'F17', @E@@@@     *T116,'F14',T127,'F40',/,YY
)@@G@@' -----',21('------'),/,)     @[@@@@      @ @@@@ 1003 FORMAT (1X,2A6,I6,YZ
)@@G@@10I11)@[@@@@      @B@@@@ 1004 FORMAT (1X,2A6,I4,I7,I6,6I5,2I6)    @[@@@@ZA
)@@G@@      @D@@@@ 1005 FORMAT ('0FILES:',I6,',  FIXED TRACKS:',I6,     @E@@@@ZB
)@@G@@     *',  V-OPT TRACKS:',I6,',  SECURE BACKUP BLOCKS:',I6,/,@C@@@@     *ZC
)@@G@@16X,'REMOV TRACKS:',I6,',  G-OPT TRACKS:',@ @@@@     *I6,A1,'  UNLOADED:ZD
)@@G@@',I6) @[@@@@      @C@@@@ 1006 FORMAT(1H1,'SUMMARY BY BILLING AREA: ',   ZE
)@@G@@@E@@@@     *3X,'FILES    (F) TRACKS (R)   V/G-OPT   SEC TAPES'/)  @[@@@@ZF
)@@G@@      @A@@@@ 1007 FORMAT(1H0,4A6,4I9,3X,I9)     @[@@@@      @ @@@@ 1008 ZG
)@@G@@FORMAT ('0END GBILL')   @[@@@@      @ @@@@ 2000 FORMAT(4A6,I4,10I5,'GB')ZH
)@@G@@@[@@@@      @]@@@@      END   ___ F1RE BACKUP BL)@@@F]S@@@@@)@#@C@)@]@C@ZI
)@@G@@)[G@C@)@#@IS)@?@C@IN HOU@@@@@[@@@@@@@@@@@@@@@@@@/,0@@@AA@@@F)@![S@@@@@@@ZJ
)@@G@@      /AMC  ORNELLROCK/C      ER    L CENTMEDICA            SE    AB@@@FZK
)@@G@@)@8[S@@@@@@@,G) ACT (T,USTUDENCH    RESEARSORED UNSPON      SEARCHRED REZL
)@@G@@SPONSOAC@@@F)[#[C@@@@@@@)@[@E@@@@@@@                  OTHER             ZM
)@@G@@      EXEC  CTS   AD@@@F)@][F#L#L#L#L] #@K3@@@@@;)@@@PC@@@@]@[=@@@@@@@[HZN
)@@G@@/,0@@@ @@[X4 @@[X3 @@[X2 @@[X1AE@@@F)@F[M[@^G^G1#H#G@@C@@@@][^0@@]+8);__ZO
)@@G@@C^)@@][@@@@#C/@@@[/K@@@L*@@@@GG/@__";C@@@<AF@@@F)@P[M@K^C-#GK3@@@@[^0@@]ZP
)@@G@@+8)"__C^)@@]@[(@@@/,0@@@/K@@@W*@@@@GG/@__";C@@@<;)@@@RAG@@@F)@Z[N#H@K3^GZQ
)@@G@@0K3@@@ @@@@G*@@@@IH@)@@]C/)@@ C/@@@[[00@@])8)@@]C0)@@]/K@@@=*@@@@]AH@@@FZR
)@@G@@@C@@@@         OPTP  ALX,1,1 .           X /*DEBUG    @F@@@@         OPTZS
)@@G@@P OPT3,1,0220 .        Y STATIC LANGUAGE ANALYSIS     @F@@@@         OPTZT
)@@G@@P  OPT5,1,DPMSCL+DPMSTT . Z DUMP SCALARS AFTER EXEC.  @E@@@@EXEROP   EQUZU
)@@G@@   1 .                 INVALID OPTION STRX5.    @]@@@@         END___   ZV
)@@G@@     CHECK NEXT OPTION  @D@@@@         LSC   A7,*[S@@@*SDFF*@#@@@       ZW
)@@G@@   AXR$ .   @#@@@          DCLRG .  @#@@@          PLSD     @#@@@A      ZX
)@@G@@   PLAC     @#@@@          UNLIST   @]@@@ @ADD PLTVDS @#@@@          LISZY
)@@G@@T     @#@@@ RSET     CSECT 3 .@H@@@ PLRSET*  LOAD  X8,X11 .             ZZ
)@@G@@      RESET WORKSPACE TO INITIAL CONDITION@F@A@          MOVE  HTBLS,PLRAA
)@@G@@DTA,1024 .           RESET HASH TABLE     @F@@@A         MOVE  HTBLS,PLRAB
)@@G@@DTA,1023 .           RESET HASH TABLE     @E@@@          LOADA X5,SDBK0SAC
)@@G@@ .         CLEAR BLOCK 0 OF SD'S    @ @@@          USING SDSECT,X5 .    AD
)@@G@@@E@A@          LOADA A7,SDIN .           CLEAR ALL ADDED ENTRIES  @ @A@ AE
)@@G@@         STORE A7,SDNXDC .    @#@@@ PLRST2   LABEL .  @F@@@          MOVAF
)@@G@@E  SDBDLK,0,I .        CLEAR OTHER SD'S WITH SAME NAME@C@@@          LOAAG
)@@G@@D  X5,SDNXDC .         GO TO NEXT SD@B@@@          IF    X5,NZERO THEN,PAH
)@@G@@LRST2 .     @ @@@A         LOADA X5,SDBK0S .    @E@@@A         LOADA A7,AI
)@@G@@SDIN .   CLEAR OUT LEVEL 0 VARIABLEES     @ @@@A         STORE A7,SDNXDCAJ
)@@G@@ .    @C@@@          GOTO  0,X8 .              -> RETURN    @^@@@ / .   AK
)@@G@@   DATA STORAGE   @#@@@ PLRDTA   SFW   0 .@^@@@ ZZ*      PROC  *2,0 .   AL
)@@G@@@^@A@ ZSD*(ZZ(1,1)) EQU ZSQ(1)@ @@@AZSD*(ZZ(1,1)+1) EQU ZSQ(1)    @ @A@ AM
)@@G@@ZSQ*(1) EQU  (ZZ(1,4)+5)/6+2  @A@@@AZSQ*(1) EQU  (ZZ(1,4)+3)/4+2+ZSQ(1) AN
)@@G@@@#@@@          END .    @#@@@ ZSQ(1)   EQU   SDH@#@@@ @ADD COPYMAIN1    AO
)@@G@@@A@@@ KFIX     EQU   +(IN 63,0,1,0) .     @^@@@AY        FORM  18,9,9 . AP
)@@G@@@#@@@ Z*       PROC .   @A@A@          +Z(1,1)-PLMAIN+HTBLT-KFIX  @B@@@AAQ
)@@G@@         +Z(1,1)-PLMAIN+HTBLT-KFIX,Z(1,2) @#@@@A         END .    @#@@@ AR
)@@G@@@ADD COPYMAIN2    @D@@@A/ .      THE FOLLOWING NONSENSE IS ONLY TO SATISAS
)@@G@@FY THE@E@@@A .       1108 ASSEMBLER WHICH INSISTS THAT EVERY LABEL IS   AT
)@@G@@@#@@@A.       DEFINED   @[@@@A.     @]@@@ABFABS  EQU 0@]@@@ABFCPBF EQU 0AU
)@@G@@@]@@@ABFMAX EQU 0 @]@@@ABFMIN EQU 0 @]@@@ABFMOD EQU 0 @]@@@ABFSIGN EQU 0AV
)@@G@@@]@@@ABFFLR EQU 0 @]@@@ABFCEIL EQU 0@]@@@ABFROUN EQU 0@]@@@ABFTRUN EQU 0AW
)@@G@@@]@@@ABFCPLE EQU 0@]@@@ABFCONJ EQU 0@]@@@ABFIMAG EQU 0@]@@@ABFIMBF EQU 0AX
)@@G@@@]@@@ABFREAL EQU 0@]@@@ABFRLBF EQU 0@]@@@ABFEXP EQU 0 @]@@@ABFLOG EQU 0 AY
)@@G@@@]@@@ABFLOG1 EQU 0@]@@@ABFLOG2 EQU 0@]@@@ABFATND EQU 0@]@@@ABFATAN EQU 0AZ
)@@G@@@]@@@ABFTAN EQU 0 @]@@@ABFTAND EQU 0@]@@@ABFSIND EQU 0@]@@@ABFSIN EQU 0 BA
)@@G@@@]@@@ABFCOSD EQU 0@]@@@ABFCOS EQU 0 @]@@@ABFSQRT EQU 0@]@@@ABFSBST EQU 0BB
)@@G@@@]@@@ABFPVSB EQU 0@]@@@ABFINDX EQU 0@]@@@ABFLNTH EQU 0@]@@@ABFHIGH EQU 0BC
)@@G@@@]@@@ABFLOW EQU 0 @]@@@ABFLBND EQU 0@]@@@ABFHBND EQU 0@]@@@ABFDIM EQU 0 BD
)@@G@@@]@@@ABFDATE EQU 0@]@@@ABFTIME EQU 0@]@@@ABFCVBN EQU 0@]@@@ABFCVBT EQU 0BE
)@@G@@@]@@@ABFCVCH EQU 0@]@@@ABFCVDC EQU 0@]@@@ABFCVFX EQU 0@]@@@ABFCVFL EQU 0BF
)@@G@@@]@@@ABFCVPR EQU 0@]@@@ABFTRNS EQU 0@]@@@ABFVERY EQU 0@]@@@ABFSTRI EQU 0BG
)@@G@@@]@C@ABFSTBF EQU 0@]@@@CBFSMBF EQU 0@]@@@ABFADD EQU 0 @]@@@ABFAFTR EQU 0BH
)@@G@@@]@@@ABFBFOR EQU 0@]@@@ABFBOOL EQU 0@]@@@ABFCLAT EQU 0@]@@@ABFCPLE EQU 0BI
)@@G@@@]@@@ABFDCAT EQU 0@]@@@ABFDIVF EQU 0@]@@@ABFDOTF EQU 0@]@@@ABFEVRY EQU 0BJ
)@@G@@@]@@@ABFLINO EQU 0@]@@@ABFMPY EQU 0 @]@@@ABFPANO EQU 0@]@@@ABFPABF EQU 0BK
)@@G@@@]@@@ABFPROD EQU 0@]@@@ABFRVSE EQU 0@]@@@ABFSOME EQU 0@]@@@ABFSUBF EQU 0BL
)@@G@@@]@@@ABFSUM EQU 0 @]@@@ABFRAND EQU 0@]@@@ABFENDF EQU 0@]@@@ABFCLCK EQU 0BM
)@@G@@@]@@@ABFCLPV EQU 0@]@@@ABFCSF$ EQU 0@]@@@ABFTRIM EQU 0@]@@@ABFUNPV EQU 0BN
)@@G@@@]@@@ABFNULF EQU 0@]@@@ABFALCN EQU 0@]@@@ABFEMPT EQU 0@]@@@ABFADDR EQU 0BO
)@@G@@@]@@@ABFNAME EQU 0@]@@@ABFONCD EQU 0@]@@@BBFSTBF EQU 0@]@@@BBFOCBF EQU 0BP
)@@G@@@]@@@BBFOSBF EQU 0@#@@@DBFONFI   EQU 0 .  @#@@@DBFONFL   EQU 0 .  @#@@@DBQ
)@@G@@BFONLO   EQU  0 . @#@@@          END .    ___^Z(C@@^+?'=@@@I/K@[X5R;@@@@BR
)@@G@@A$@^[Y*4D^W:/K@^)T9(@^H] @@^FBR;@^H]'=@@@#R7G@@#:8@@@ %8K@@[/K@^Z6^#0^WWBS
)@@G@@R#@^FB:@@^W\/K@^)U%8K@@[/K@^)T 0@^FBRF@^FB:8@*@P*[S@@@*SDFF*@C@@@E.   COBT
)@@G@@PYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@@@E.     @D@@@E.   QUESTIONBU
)@@G@@S CONCERNING THIS SHOULD BE DIRECTED TO:  @[@@@E.     @ @@@E.        MARBV
)@@G@@VIN V. ZELKOWITZ  @B@@@E.        DEPARTMENT OF COMPUTER SCIENCE   @A@@@EBW
)@@G@@.        UNIVERSITY OF MARYLAND     @B@@@E.        COLLEGE PARK, MARYLANBX
)@@G@@D 20742     @[@@@E.     @G@@@E.        PERMISSION TO USE THESE LISTINGS BY
)@@G@@AND THE COMPUTER PROGRAMS THEY@E@@@E.   REPRESENT IS GRANTED UNDER THE FBZ
)@@G@@OLLOWING CONDITIONS:    @[@@@E.     @G@@@E.        1. UNLIMITED USE MAY CA
)@@G@@BE MADE OF THE PROGRAMS REPRESENTED BY    @G@@@E.   THESE LISTINGS PROVICB
)@@G@@DED THAT THE NAME PLUM OR UNIVERSITY OF MARYLAND@E@@@E.   PL/1 COMPILER CC
)@@G@@REMAINS ASSOCIATED WITH THESE PROGRAMS.   @[@@@E.     @F@@@E.        2. CD
)@@G@@MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDED:   @[@@@E.     @G@@@ECE
)@@G@@.        (A) ANY RESULTING PROGRAM, OR REPORT, PAPER OR DOCUMENTATION   CF
)@@G@@@G@@@E.        DESCRIBING SUCH PROGRAM WILL CLEARLY INDICATE THAT THE PRCG
)@@G@@OGRAM @E@@@E.        IS A DIALECT OF PLUM OR IS DERIVED FROM PLUM, AND  CH
)@@G@@@[@@@E.     @G@@@E.        (B) ALL SUCH MODIFICATIONS, OTHER THAN TRIVIACI
)@@G@@L CORRECTIONS     @F@@@E.        OF ERRORS IN THE SOURCE PROGRAMS, SHALLCJ
)@@G@@ BE REPORTED AND  @G@@@E.        A BRIEF DESCRIPTION OF THE FEATURE ADDECK
)@@G@@D SHALL BE SUBMITTED    @C@@@E.        TO THE UNIVERSITY OF MARYLAND, ANCL
)@@G@@D     @[@@@E.     @F@@@E.        (C) NO PROGRAMS DERIVED FROM THESE LISTCM
)@@G@@INGS SHALL BE SOLD@G@@@E.        WITHOUT WRITTEN APPROVAL FROM THE UNIVECN
)@@G@@RSITY OF MARYLAND, AND  @[@@@E.     @F@@@E.        (D) COPIES OF THESE PCO
)@@G@@ROGRAMS MAY BE TRANSMITTED TO OTHER @G@@@E.        LOCATIONS PROVIDED THCP
)@@G@@AT SUCH TRANSMITTALS CLEARLY INDICATE     @G@@@E.        WHETHER THE PROCQ
)@@G@@GRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     @E@@@E.        MARYLAND CR
)@@G@@PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@@@E.     @G@@@E.        3. CS
)@@G@@THESE CONDITIONS ONLY APPLY TO THE PLUM COMPILER ITSELF,    @F@@@E.   ANCT
)@@G@@D ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN USING PLUM. @E@@@E.   THCU
)@@G@@E PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USER TO @F@@@E.   EXPERIMECV
)@@G@@NT WITH THE COMPILER AS LONG AS THE RESULTING PRODUCT @G@@@E.   IS NOT SCW
)@@G@@OLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT DEVELOPED   @#@@@E.   FRCX
)@@G@@OM PLUM.    @[@@@E.     @[@@@E.     @[@@@E.     @[@@@E.     @[@@@E.     CY
)@@G@@@[@@@E/.    @ @@@D.        LEXICAL ANALYSIS     @^@@@D. DESTROYS X1-X5 ACZ
)@@G@@7-A11 @B@@@D. SETS   A14=DLXAC A15=DLXACN F=DLXCL     @#@@@D         AXRDA
)@@G@@$ .   @#@@@D         DCLRG .  @G@E@D         REGS A7,A8,A9,A10,A11,A12,ADB
)@@G@@13,A14,A15,A3 X1,X2,X3,X4,X5,X6,X7,;@A@E@D               X8,X9,X10,A1,A2DC
)@@G@@ .    @G@E@D         ALREG A7,A8,A9,A10,A11,A12,A13,A14,A15 X1,X2,X3,X4,DD
)@@G@@X5,X6,X7,;  @ @E@D               X8,X9,X10 .    @[@@@D.     @^@@@D.     DE
)@@G@@   SETUP DSECTS   @#@@@D         UNLIST . @]@@@D@ADD PLTVDS @#@@@D      DF
)@@G@@   LIST .   @]@@@D@ADD PLSAW  @E@@@D         PLWORD .                  WDG
)@@G@@ORD DESIGNATION DSECT   @E@@@D         PLSD .                    SYMBOL DH
)@@G@@TABLE DESCRIPTOR  @C@@@D         PLAC .                    ALPHA CODE   DI
)@@G@@@#@@@D         PLAR .   @F@@@DACCMT    EQU   0001 .              COMMENTDJ
)@@G@@ TOKEN , INTERNAL ONLY  @D@@@DACECMT   EQU   0002 .              END COMDK
)@@G@@MENT */     @D@H@DLXSTOP   EQU   128 .               STOP  CHARACTER    DL
)@@G@@@C@@@HLXSTOP   EQU   1 .               STOP  CHARACTER@B@@@D/.       LEXDM
)@@G@@ICAL ANALYZER - MAIN DRIVER   @E@@@DUPPERC*   PROC  *0,3 .    CHANGE LOWDN
)@@G@@ER CASE TO UPPER CASE   @A@@@D         LOAD  A3,DCVINT .  GET CHAR@D@@@DDO
)@@G@@         AND,U A3,0777-040 . TURN OFF LOWER CASE BIT  @ @@@D         STODP
)@@G@@RE A4,DCVINT .    @#@@@D         END .    @^@@@DLXERR*   PROC  *1 .     DQ
)@@G@@@A@@@D         LOAD  A3,LXERR(1,1),I .    @ @@@D         STORE A3,DLXERNDR
)@@G@@ .    @#@@@D         END .    @G@@@DLXT*     PROC  1 .                 SDS
)@@G@@PEC SYMBOL ENTRY,NUMBER CLASS,TOKEN @G@@@DXX       FORM  9,9,18 .       DT
)@@G@@     /////////////////////////////////////@D@@@D         DO    LXT(1,2)>DU
)@@G@@I ,Y(1) EQU LXT(1,2)-LXNQP .  @D@@@D         DO    LXT(1,2)=I ,Y(1) EQU DV
)@@G@@LXNLPN-LXNQP .    @B@@@D         XX    LXT(1,1),Y(1),LXT(1,3) .   @#@@@DDW
)@@G@@         END .    @G@@@DLXOP     FORM  18,9,9 .    *********************DX
)@@G@@************************@F@@@DTC*      PROC  *1 .                SET CHADY
)@@G@@RACTER READING REGS .   @E@@@D         ON    TC(1,1)=ON .        SET TOKDZ
)@@G@@N RADING REGS     @ @@@D         LOAD  X1,DLXX1 .     @G@@@D         LOAEA
)@@G@@D  A1,DLXX2 .                                        *******@^@@@D      EB
)@@G@@   DO    1 , END .@#@@@D         OFF .    @ @@@D         STORE  X1,DLXX1EC
)@@G@@ .    @G@@@D         STORE A1,DLXX2 .                                   ED
)@@G@@     *******@#@@@D         END .    @#@@@DLEXI     CSECT 3  @#@@@DLXCRTNEE
)@@G@@   LABEL .  @E@@@D         LOAD  A15,DLXACN .        SET A15 = NEXT TOKEEF
)@@G@@N     @H@@@D         IF    A14,NE,ACCMT,I THEN,LXCR1 . IF CURRENT TOKEN=EG
)@@G@@/* */, IGNORE     @G@@@D         MOVE  DLXSP,DLXSPN,2 .    MAKE NEXT TOKEH
)@@G@@EN BE CURRENT TOKEN     @F@@@D         LOAD  A14,DLXAC .         SET CUREI
)@@G@@RENT TOKEN INTO A14     @D@@@D         GOTO  LXCRAC .            GET NEXEJ
)@@G@@T TOKEN     @C@@@DLXCR1    LABEL .                   RETURN .     @G@@@DEK
)@@G@@         TC    OFF .               SAVE CHAR READING REGS FOR NEXT TOKENEL
)@@G@@@D@@@E         COUNT DERCTK .             UP TOKEN COUNT .  @D@@@D      EM
)@@G@@   LOAD  X2,DLXSV1 .         RESTORE X1 AND X2  @F@@@D         LOAD  A2,EN
)@@G@@DLXSV2 .         RESTORE PUTC REGS FROM SYNA    @E@@@D         LOAD  F,DEO
)@@G@@LXCL .           SET CLASS IN FLAG REG    @D@@@D         JMP .          EP
)@@G@@           RETURN TO CALLER   @F@@@DLXGET*   LOCAL .                   MEQ
)@@G@@AIN ENTRY POINT FROM SYNA .   @ @@@D         STORE X2,DLXSV1 .    @ @@@DER
)@@G@@         STORE A2,DLXSV2 .    @F@@@D         TC    ON .                SES
)@@G@@ET CHARACTER READING REGS     @G@@@D         MOVE  DLXSP,DLXSPN,2 .     ET
)@@G@@MAKE NEXT TOKEN BE CURRENT TOKEN    @ @@@D         LOAD  A14,DLXAC .    EU
)@@G@@@D@@@D         LOAD  A7,DLXERN .         PRINT ERROR MESSAGE@C@@@D      EV
)@@G@@   IF    A7,EQ,0,I THEN,LXGET1 . -> NO MSG@D@@@D         FLINK X10,SAESEEW
)@@G@@ .         [ERROR MESSAGE]    @ @@@D         MOVE  DLXERN,0,I .   @#@@@DEX
)@@G@@LXGET1   LABEL .  @G@@@D.        IF    DLXPCK,ZERO THEN,LXGT1A .  -> COLEY
)@@G@@ 1 NOT USED ILLEGALLY   @D@@@D.        LXERR LXER25 .            [ERROR EZ
)@@G@@MESSAGE]    @ @@@D.        MOVE  DLXPCK,0,I .   @#@@@DLXGT1A   LABEL .  FA
)@@G@@@F@@@D         IF    A14,EQ,ACEST,I THEN,LXCR1 . -> END OF SOURCE INPUT FB
)@@G@@@D@@@DLXCRAC   LABEL .                   MAIN CRACKING LOOP @ @@@D      FC
)@@G@@   MOVE DLXSPN,0,I .    @ @@@D         MOVE DLXSPN+1,0,I .  @F@@@D      FD
)@@G@@   LOAD  A8,DLXCHR .         WAS CHARACTER GOTTEN LAST TIME @ @@@D      FE
)@@G@@   MOVE  DLXCHR,0,I .   @F@@@D         IF    A8,NE,0,I THEN,LXCRI2 . -> FF
)@@G@@HAVE NEXT CHARACTER     @#@@@DLXCRIN   LABEL .  @D@@@D         GETC .   FG
)@@G@@                 GET NEXT CHARCTER  @#@@@DLXCRI2   LABEL .  @F@E@D      FH
)@@G@@   LOAD  X3,A8 .             PUT CHARACTER INTO INDEX REG   @G@E@D      FI
)@@G@@   LOAD  X3,LXTRTB,X3 .      GET ADDRESS OF ROUTINE FROM TABLE    @C@@@EFJ
)@@G@@         LOAD  A3,A8 .            XXX XXX XXX   @F@@@E         AND,U A3,FK
)@@G@@0177 .          00X XXX XXX - VALIDATE CHAR     @^@G@E         LOAD  X3,FL
)@@G@@A4 .  @^@@@G         LOAD  A3,A4 .  @C@@@E         LOAD  X3,LXTRTB,A3 . FM
)@@G@@     CHAR FCN ADDR@H@@@D         GOTO  0,X3 .              -> PROPER ROUFN
)@@G@@TINE FOR LEADING CHARACTER    @A@@@D. LXTRTB SQ    OPERATOR CLASS ENTRY FO
)@@G@@@A@@@D.        SQ    NUMBER CLASS ENTRY   @B@@@D.        SH    FIRST CHAFP
)@@G@@RACTER TOKEN CLASS@D@@@DLXTRTB  LABEL .                      BRANCH TABLFQ
)@@G@@E .   @C@@@H         LXT   2,I,LXILGL .           ASCII 0   @C@@@H      FR
)@@G@@   LXT   2,I,LXCDND .           STOP CHAR @G@H@D         DO    040 , LXTFS
)@@G@@ 2,I,LXILGL .                  ASCII 000 TO 037 @G@@@H         DO    036FT
)@@G@@ , LXT 2,I,LXILGL .                  ASCII 002 TO 037 @C@@@D         LXTFU
)@@G@@   2,I,LXCRIN .        040 BLANK    @B@@@D         LXT   22,I,LXSPEC .  FV
)@@G@@     041 !  @D@@@D         LXT   2,I,LXILGL .        042 DOUBLE QUOTE   FW
)@@G@@@B@@@D         LXT   2,I,LXILGL .        043 #  @B@@@D         LXT   2,IFX
)@@G@@,LXILGL .        044 $  @B@@@D         LXT   2,I,LXILGL .        045 %  FY
)@@G@@@B@@@D         LXT   4,I,LXSPEC .        046 &  @B@@@D         LXT   2,IFZ
)@@G@@,LXSCON .        047 '  @B@@@D         LXT   2,I,LXSPEC .        050 (  GA
)@@G@@@B@@@D         LXT   3,I,LXSPEC .        051 )  @B@@@D         LXT   19,GB
)@@G@@I,LXSPEC .       052 *  @B@@@D         LXT   5,I,LXSPEC .        053 +  GC
)@@G@@@B@@@D         LXT   26,I,LXSPEC .       054 ,  @B@@@D         LXT   8,IGD
)@@G@@,LXSPEC .        055 -  @B@@@D         LXT   2,LXNLPD,LXNDEC .   056 .  GE
)@@G@@@B@@@D         LXT   24,I,LXSPEC .       057 /  @B@@@D         LXT   1,LGF
)@@G@@XNLP1,LXNCON .   060 0  @B@@@D         LXT,1,LXNLP1,LXNCON .     061 1  GG
)@@G@@@F@@@D         DO 8 , LXT 1,LXNLP2,LXNCON .                  062-071 2-9GH
)@@G@@@B@@@D         LXT   7,I,LXSPEC .        072 :  @C@@@D         LXT   6,IGI
)@@G@@,LXSPEC .        073 SEMICOLON@B@@@D         LXT   12,I,LXSPEC .       0GJ
)@@G@@74 <  @B@@@D         LXT   18,I,LXSPEC .       075 =  @B@@@D         LXTGK
)@@G@@   10,I,LXSPEC .       076 >  @B@@@D         LXT   2,I,LXILGL .        0GL
)@@G@@77 ?  @B@@@D         LXT   2,I,LXILGL .        100 @  @B@@@D         LXTGM
)@@G@@   1,I,LXALFA .        101 A  @B@@@D         LXT   1,LXNBIN,LXALFA .   1GN
)@@G@@02 B  @B@@@D         LXT   1,I,LXALFA ,        103 C  @B@@@D         LXTGO
)@@G@@   1,I,LXALFA .        104 D  @B@@@D         LXT   1,LXNEXP,LXALFA .   1GP
)@@G@@05 E  @B@@@D         LXT   1,I,LXALFA .        106 F  @B@@@D         LXTGQ
)@@G@@   1,I,LXALFA .        107 G  @B@@@D         LXT   1,I,LXALFA .        1GR
)@@G@@10 H  @B@@@D         LXT   1,LXNCMP,LXALFA .    111 I @C@@@D         DO GS
)@@G@@17 , LXT 1,I,LXALFA .  112-132 J-Z  @B@@@D         LXT   2,I,LXILGL .   GT
)@@G@@     133 [  @B@@@D         LXT   27,I,LXSPEC .       134 \  @B@@@D      GU
)@@G@@   LXT   2,I,LXILGL .        135 ]  @B@@@D         LXT   14,I,LXSPEC .  GV
)@@G@@     136 ^  @C@@@D         LXT   1,I,LXALFA .        137 BREAK    @B@@@DGW
)@@G@@         LXT   2,I,LXILGL .        140    @C@@@D         LXT   0,I,LXALFGX
)@@G@@A .        141 LC A     @C@@@D         LXT   0,LXNBNF,LXALFA .   142 LC GY
)@@G@@B     @C@@@D         LXT   0,I,LXALFA .        143 LC C     @C@@@D      GZ
)@@G@@   LXT   0,I,LXALFA .        144 LC D     @C@@@D         LXT   0,LXNEXF,HA
)@@G@@LXALFA .   145 LC E     @D@@@D         DO 3 , LXT 0,I,LXALFA .   146-150HB
)@@G@@ LC F G H   @C@@@D         LXT   0,LXNCMQ,LXALFA .   151 LC I     @D@@@DHC
)@@G@@         DO 17 , LXT 0,I,LXALFA .  152-172_ LC J-Z    @C@@@D         DO HD
)@@G@@5 , LXT 2,I,LXILGL .   0173-177     @D@H@D         LXT   2,I,LXCDND .   HE
)@@G@@     0200 STOP CHAR     @C@@@DLXCTRT   LABEL .                   RETURN HF
)@@G@@POINT @F@@@D         +LXALF2 .                 LOWER CASE, CONVERT TO UPHG
)@@G@@PER   @E@@@D         +LXALF3 .                 UPPER CASE AND DIGITS .  HH
)@@G@@@A@@@D/ .         NAME CRACKING ROUTINE   @#@@@DLXALFA   LABEL .  @A@@@DHI
)@@G@@         MOVE DLXCON,KBLANK,16 .    @F@@@D         SETPC 4,DLXCON .     HJ
)@@G@@     MOVE NAME TO WORD BOUNDARY     @E@@@D         SETL  A9,63,I .      HK
)@@G@@     SET MAXIMUM NAME SIZE    @#@@@DLXALF2   LABEL .  @F@@@D         SETHL
)@@G@@   040,OFF,A8 .         TURN LOWER CASE TO UPPER CASE @#@@@DLXALF3   LABHM
)@@G@@EL .  @F@@@D         PUTC .                    PUT CHARACTER INTO OUTPUTHN
)@@G@@ AREA @D@@@D         GETC .                    GET NEXT INPUT     @D@@@DHO
)@@G@@         LOAD  X3,A8 .             PUT INTO X REG     @D@@@D         L,QHP
)@@G@@1  A3,LXTRTB,X3 .       GET PROPER CODE   @D@@@D         IF    A3,GE,2,IHQ
)@@G@@ THEN,LXALF4 . -> END OF NAME @E@@@D         LOAD  X3,LXCTRT,A3 .       HR
)@@G@@ GET PROPER LOOP ADDRESS@F@@@D         LOOP  A9,0,X3 .         -> LOOP UHS
)@@G@@P TO 63 CHARACTERS/NAME @F@@@D         LXERR  LXER02 .           [EROR MHT
)@@G@@ESSAGE, NAME TOO LONG]  @#@@@DLXALF4   LABEL .  @C@@@D         LOADA  X1HU
)@@G@@1,LXALF5 .       SAVE RETURN .@#@@@DLXNEXTC  LLOC .   @#@@@DLXALF6   LABHV
)@@G@@EL .  @G@@@D         STORE A8,DLXCHR .         SAVE NEXT CHARCTER FOR NEHW
)@@G@@XT TIME     @#@@@D         LJMP .   @#@@@DLXALF5   LABEL .  @D@@@D      HX
)@@G@@   LPCNT A9,63,I .           FIND SIZE OF WORD  @D@@@D         STORE A9,HY
)@@G@@DLXSZN .         SAVE SIZE OF TOKEN @D@@@D         LINK  LXSRCH .       HZ
)@@G@@     SEARCH FOR NAME .  @B@@@D.        RETURN WITH X2=BCD ENTRY ADDRESS IA
)@@G@@@ @@@D         USING SDBCD,X2 .     @E@@@D         MOVE  DLXACN,SDBAC . IB
)@@G@@     SETUP NEXT ALPHA CODE    @C@@@D         MOVE  DLXCLN,SDBCLS .     RIC
)@@G@@ETURN CLASS @E@@@D         STORE X2,DLXIDN .         SAVE PTR TO SD ENTRID
)@@G@@Y     @D@@@D         LOADA X2,SDBBCD .         SAVE PTR TO STRING @ @@@DIE
)@@G@@         STORE X2,DLXBCN .    @C@@@D         GOTO  LXCRTN .            -IF
)@@G@@> RETURN    @D@@@DLXILGL   LABEL .                   ILLEGAL SYMBOL .   IG
)@@G@@@^@@@D         LXERR LXER04 . @D@@@D         GOTO  LXCRAC .            -IH
)@@G@@> IGNORE SYMBOL . @ @@@D/.       SYMBOL TABLE SEARCH  @ @@@D.        ENTII
)@@G@@RY A9= L'STRING   @ @@@D.              DLXCON=STRING  @A@@@D.        EXIIJ
)@@G@@T  X2= -> BCD ENTRY     @#@@@DLXSRCH   LOCAL .  @F@@@D         LOAD  A10IK
)@@G@@,A9.             GET NUMBER OF WORDS IN STRING  @^@@@D         ADD   A10IL
)@@G@@,3,I. @C@@@D         SRB   A10,2 .             CHAR/WORD    @D@@@D      IM
)@@G@@   LOAD  A8,A10 .            SAVE SIZE OF STRING@G@@@D         LINK  LXHIN
)@@G@@ASH.             GET HASH A8= INCREMENT, A7=INITIAL   @F@@@D         LOAIO
)@@G@@D  X3,A7.              SET INITIAL ENTRY IN INDEX REG @ @@@D         LOAIP
)@@G@@DA X3,HTBLS,X3 .  @E@@@D         SETL  A11,1023,I .        SET MAX SEARCIQ
)@@G@@H LENGTH    @#@@@DLXSLOP   LABEL.   @^@@@D         USING WORD,X3. @D@@@DIR
)@@G@@         IF    W1H1,ZERO THEN,LXSNEW.    -> NEW WNTRY @D@@@D         LSDIS
)@@G@@P  X2,W1H1.            GET BCD POINTER    @^@@@D         USING SDBCD,X2.IT
)@@G@@@B@@@D         IF    A9,NE,SDBCNT THEN,LXSLP1.  @F@@@D         IF    SDBIU
)@@G@@BCD,EQ,DLXCON,R,A10 THEN,LXSFND . -> FOUND ENTRY@#@@@DLXSLP1   LABEL.   IV
)@@G@@@F@@@D         LOOP  A11,LXSLP2 .        -> LOOP TO NEXT TABLE ENTRY    IW
)@@G@@@B@@@D.        IF HERE, HASH TABLE IS FULL.     @D@@@D         EXERR LXEIX
)@@G@@R03 LEVEL,3 .      [ERROR] QUIT     @D@@@DLXSLP2   LABEL.               IY
)@@G@@     GET NEW ADDRESS    @C@@@D         ADD   X3,A8.              GET NEWIZ
)@@G@@ VALUE@^@@@D         LOAD  A7,X3    @G@@@D         IF    A7,LT,HTBLS+102JA
)@@G@@3,I THEN,LXSLOP . -> LOOP GOR NEXT ENTRY  @E@@@D         SUB   X3,1023,IJB
)@@G@@.          BACKUP TO START OF TABLE @E@@@D         GOTO  LXSLOP.        JC
)@@G@@     -> LOOP FOR NEW ENTRY    @F@@@DLXSNEW   LABEL.                    EJD
)@@G@@NTRY NOT FOUND IN SYMBOL TABLE@E@@@D         LOAD  X4,X3 .             SJE
)@@G@@AVE HTBL ENTRY ADDRES   @E@@@D         LOAD  A7,A10 .            GET SIZJF
)@@G@@E OF BCD STRING   @F@@@D         ADD   A7,2,I.             SET SIZE OF NJG
)@@G@@EEDED BCD SD ENTRY@E@@@D         LINK  PLALC.              ALLOCATE COREJH
)@@G@@ FOR SD     @^@@@D         LOAD  X2,X3.   @^@@@D         USING SDBCD,X2.JI
)@@G@@@D@@@D         STORE A9,SDBCNT.          SAVE LENGTH OF BCD @A@@@D      JJ
)@@G@@   MOVE  SDBBCD,DLXCON,R,A10 .@D@@@D         MOVE  SDBCLS,LXID,I.      SJK
)@@G@@ET CLASS OF BCD   @#@@@DLXSRTN   LABEL.   @^@@@D         USING WORD,X4  JL
)@@G@@@C@@@D         STORE X2,W1H1.            SET ENTRY    @B@@@D         JMPJM
)@@G@@.      -> RETURN TO CALLER    @E@@@DLXSFND   LABEL.                    FJN
)@@G@@OUND PREVIOUS SD FOR IT @C@@@D         LOADA A7,TVST .           SET PTRJO
)@@G@@ TO IT@E@@@D         IF    A7,LT,X2 THEN,JMP . -> SD IN HASH TBLE CARE  JP
)@@G@@@D@@@D         LOAD  A8,X3 .             SAVE HTBL ADDR     @C@@@D      JQ
)@@G@@   LOAD  X4,X2.              SAVE SD PTR  @E@@@D         LOAD  A7,A10 . JR
)@@G@@           ALLOCATE CORE FOR IT     @E@@@D         ADD   A7,2,I.        JS
)@@G@@     ADD ON FIXED INITIAL PART@C@@@D         LINK  PLALC.              AJT
)@@G@@LLOCATE CORE@^@@@D         USING WORD,X4. @^@@@D         LOAD  X2,X3 .  JU
)@@G@@@E@@@D         MOVE  SDBCL4-(IN 0,7,0,0),W1,R,A7.     MOVE SD'S   @D@@@DJV
)@@G@@         IF    SDBCLK,ZERO THEN,LXSNBF . -> NOT BIF   @E@@@D         LOAJW
)@@G@@D  A7,SDLNTH,I .       GET SPACE FOR BIF SD     @^@@@D         LINK  PLAJX
)@@G@@LC .  @C@@@D         LOAD  X4,SDBCLK .         PTR TO BIF SD@ @@@D      JY
)@@G@@   USING SDSECT,X3 .    @G@@@D         MOVE  SDCLS4-(IN 0,7,0,0),W1,SDBIJZ
)@@G@@FS . MOVE SD TO WORKSPACE     @B@@@D         STORE X3,SDBCLK,X2 .      BKA
)@@G@@CD->SD@B@@@D         STORE X2,SDBCHI,X3 .      SD->BCD@E@@@D         LOAKB
)@@G@@D  X4,ADBK0S .         ADD TO BLOCK 0 CHAIN     @#@@@DLXSNBF2  LABEL    KC
)@@G@@@D@@@D         LOAD A3,SDNXDC,X4 .       OLD 1ST IN CHAIN   @C@@@D      KD
)@@G@@   STORE X3,SDNXDC,X4 .      NEW FIRST    @E@@@D         STORE A3,SDNXDCKE
)@@G@@,X3 .      OLD FIRST NOW SECOND     @E@@@D         IF    SDBDLK,ZERO THEKF
)@@G@@N,LXSNBF . -> NO PSEUDO VAR SD@D@@@D         LOAD  X4,SDBDLK .         GKG
)@@G@@ET PSEUDO VAR SD  @D@@@D         LOAD  A7,SDLNTH,I .       GET SPACE FORKH
)@@G@@ IT   @^@@@D         LINK  PLALC .  @H@@@D         MOVE  SDCLS4-(IN 0,7,KI
)@@G@@0,0),W1,SDBIFS .         MOVE SD TO WORKSPACE   @C@@@D         STORE X2,KJ
)@@G@@SDBCHI,X3 .      SET SD->BCD  @C@@@D         LOAD  X4,SDBCLK,X2 .      GKK
)@@G@@ET BIF SD   @C@@@D         STORE X3,SDBDLK,X4 .      BIF SD->PV SD@E@@@DKL
)@@G@@         GOTO  LXSNBF2 .           ->ADD TO BLOCK 0 CHAIN   @#@@@DLXSNBFKM
)@@G@@   LABEL .  @C@@@D         LOAD  X4,A8 .             REST HTBL PTR@C@@@DKN
)@@G@@         GOTO  LXSRTN.             ->RETURN     @A@@@D/.       LXHASH   KO
)@@G@@ HASH FUNCTION    @C@@@D.        ENTRY A8= SIZE OF STRING  IN WORDS     KP
)@@G@@@ @@@D.              DLXCON=STRING  @A@@@D.        EXIT  A7=INITIAL VALUKQ
)@@G@@E     @C@@@D.              A8=INCREMENT USED IF COLLISION   @#@@@DLXHASHKR
)@@G@@   LLOC.    @C@@@D         LOAD  A7,0,I.          GET CONSTANT    @D@@@DKS
)@@G@@         LOADA X2,DLXCON .         SET TO READ STRING @E@@@D         LOAKT
)@@G@@DXI X2,1,I .           SET AUTO INCREMENT OF 1  @F@@@D         SETL  A8 KU
)@@G@@.                SET NUMBER OF WORDS TO LOOP ON @#@@@DLXHLOP   LABEL.   KV
)@@G@@@D@@@D         ADD   A7,0,*X2 .          ADD IN NEW WORD    @E@@@D      KW
)@@G@@   LOOP  A8,LXHLOP .         -> LOOP FOR ALL WORDS    @^@@@D         SRBKX
)@@G@@D  A7,36 .  @ @@@D         DIV   A7,1023,I .    @C@@@D         LOAD  A7,KY
)@@G@@A8 .             SET REMAINDER@E@@@D         LOAD  A8,31,I.            SKZ
)@@G@@ET INCREMENTAL VALUE    @ @@@D         LJMP.      -> RETURN @#@@@DLEXI  LA
)@@G@@   CSECT 3. @^@@@DDLXZER   SF    '000E' . @^@@@DFILL(1)  SF    '+000'   LB
)@@G@@@#@@@D         CEND     @G@@@D/.       OPERATOR CRACKER          A8=CHARLC
)@@G@@ACTER , X3=A(LXTRTB ENTRY)    @#@@@DLXSPEC   LABEL .  @^@@@D         LOALD
)@@G@@D  X3,A8 .  @F@@@D         LOADA X3,LXTRTB,X3 .      POINT TO OPERATOR TLE
)@@G@@ABLE CODE   @^@@@D         USING WORD,X3  @D@@@D         LOAD  X3,W1Q1 .LF
)@@G@@           GET OPTBL OFFSET   @F@@@D         LOADA X4,LXOPTB-2,X3 .  X4=LG
)@@G@@A(OPTBL ENTRY FOR OPERATOR)   @ @@@D         USING  WORD,X4 .     @C@@@DLH
)@@G@@         MOVE  DLXACN,W1H1 .       SETUP ACN    @C@@@D         MOVE  DLXLI
)@@G@@CLN,W1Q3 .       MOVE CLASS   @F@@@D         IF    W1Q4,ZERO THEN,LXCRTNLJ
)@@G@@ . -> ONE CHARACTER OPERATOR  @F@@@D         GETC .                    RLK
)@@G@@EAD POSSIBLE SPLIT OPERATOR   @H@@@D         SETL  A7,W1Q4 .           SLL
)@@G@@ET NUM. OF 2 CHAR ACTER OPS TO LOOK AT    @#@@@DLXSPC0   LABEL .  @E@@@DLM
)@@G@@         ADD   X4,1,I .            GO TO NEXT TABLE ENTRY   @E@@@D      LN
)@@G@@   IF    A8,EQ,W1Q4 THEN,LXSPC1 . -> FOUND OPERATOR   @E@@@D         LOOLO
)@@G@@P  A7,LXSPC0 .         -> TRY NEXT TABLE ENTRY  @E@@@D         LINK  LXNLP
)@@G@@EXTC .          NOT SPLIT, SSAVE CHAR     @C@@@D         GOTO  LXCRTN . LQ
)@@G@@           -> RETURN    @#@@@DLXSPC1   LABEL .  @E@@@D         MOVE  DLXLR
)@@G@@ACN,W1H1 .       SET 2 CHAR OPERATOR CLASS@ @@@D         MOVE  DLXCLN,W1LS
)@@G@@Q3 .  @D@@@D         LOAD  A15,DLXACN .        SEE IF COMMENT     @F@@@DLT
)@@G@@         IF    A15,GT,ACECMT,I THEN,LXCR1 . -> NOT COMMENT, RETURN@E@@@DLU
)@@G@@         IF    1,ON,DLXDOP THEN,LXSP56 . -> /*D OPTION ON   @G@@@D      LV
)@@G@@   IF    A15,EQ,ACCMT,I THEN,LXSP57 ELSE,LXCRAC . CMMT , IGNORE   @D@@@DLW
)@@G@@LXSP56   LABEL .                   DEBUG OPTION ON    @E@@@D         IF LX
)@@G@@   A15,EQ,ACCMT,I THEN,LXCRAC . -> IGNORE /*    @D@@@D         MOVE  DLXLY
)@@G@@DOP,0,I .        SET END OF DEBUG   @C@@@D         GOTO  LXCRAC .       LZ
)@@G@@     -> NEXT TOKEN@E@@@DLXSP57   LABEL .                   FOUND COMMENTMA
)@@G@@, IS IT /*D @#@@@D         GETC .   @E@E@D         SET   040,OFF,A8 .   MB
)@@G@@     TURN LOWER CASE TO UPPER @F@E@D         IF    A8,NE,'D',I THEN,LXSPMC
)@@G@@55 .               ->NOT /*D  @C@@@E         LOAD  A3,A8 .             SMD
)@@G@@EE IF LC 'D'@^@@@E         AND,U A3,0737 .@D@@@E         IF    A4,NE,'D'ME
)@@G@@,I THEN,LXSP55 . -> NOT 'D'   @G@@@D         IF    01,OFF,LIMALX THEN,LXMF
)@@G@@SP55 .            -> OPTION OFF     @D@@@D         MOVE  DLXDOP,1,I .   MG
)@@G@@     SET FLAG - IN /*D  @^@@@D         GOTO  LXCRAC . @#@@@DLXSP53   LABMH
)@@G@@EL .  @C@@@D         GETC .                    GET SYMBOL   @#@@@DLXSP55MI
)@@G@@   LABEL .  @E@@@D         IF    A8,EQ,'*',I THEN,LXSP52 . -> POSSIBLE *MJ
)@@G@@/     @#@@@DLXSP54   LABEL .  @D@@@D         IF    A8,NE,LXSTOP,I THEN,LMK
)@@G@@XSP53 . -> NOT EOF@H@@@D         LXERR LXER11 .            [ERROR MESSAGML
)@@G@@E ,COMMENT AT END OF CARD ]   @D@@@D         GOTO  LXCDND .            -MM
)@@G@@> READ NEXT CARD  @#@@@DLXSP52   LABEL .  @C@@@D         GETC .         MN
)@@G@@           READ '/'     @E@@@D         IF    A8,EQ,'*',I THEN,LXSP52 . -MO
)@@G@@> POSSIBLE * OF */@G@@@D         IF    A8,NE,'/',I THEN,LXSP54 .   ->NOTMP
)@@G@@ */, SEARCH FOR IT AGAIN@D@@@D         COUNT DSRCMT .           UP COMMEMQ
)@@G@@NT COUNT    @F@@@D         GOTO  LXCRAC .            -> FOUND COMMENT, IMR
)@@G@@GNORE IT    @B@@@D. LXOPTB SH    ALPHA CODE FOR OPERATOR    @ @@@D.     MS
)@@G@@   SQ    LEXICAL CLASS  @D@@@D.        SQ    NUMBER OF SPLIT OPERATORS (MT
)@@G@@ON FIRST)   @E@@@D.              SECOND OPERATOR CHARACTER (ON REMAININGMU
)@@G@@)     @A@@@DLXOPTB   LXOP  ACLPAR,LXLP,0 .     (@A@@@D         LXOP  ACRMV
)@@G@@PAR,LXRP,0 .     )@A@@@D         LXOP  ACAND,LXBN,0 .      &@A@@@D      MW
)@@G@@   LXOP  ACBPL,LXPS,0 .      +@A@@@D         LXOP  ACSEMI,LXRSWD,0 .   ;MX
)@@G@@@A@@@D         LXOP  ACCOLN,LXRSWD,0 .   :@A@@@D         LXOP  ACBMN,LXPMY
)@@G@@S,1 .      -@B@@@D         LXOP  ACPTQ,LXQN,'>' .    ->     @A@@@D      MZ
)@@G@@   LXOP  ACGT,LXBN,1 .       >@B@@@D         LXOP  ACGE,LXBN,'=' .     >NA
)@@G@@=     @A@@@D         LXOP  ACLT,LXBN,1 .       <@B@@@D         LXOP  ACLNB
)@@G@@E,LXBN,'=' .     <=     @A@@@D         LXOP  ACNOT,LXNT,3 .      ^@B@@@DNC
)@@G@@         LXOP  ACNE,LXBN,'=' .     ^=     @B@@@D         LXOP  ACNG,LXBNND
)@@G@@,'>' .     ^>     @B@@@D         LXOP  ACNL,LXBN,'<' .     ^< .   @A@@@DNE
)@@G@@         LXOP  ACEQ,LXBN,0 .       =@A@@@D         LXOP  ACML,LXMU,2 .  NF
)@@G@@     *@B@@@D         LXOP  ACEPON,LXBN,'*' .   **     @B@@@D         LXONG
)@@G@@P  ACECMT,LXRSWD,'/' . */     @A@@@D         LXOP  ACOR,LXBN,1 .       !NH
)@@G@@@B@@@D         LXOP  ACCAT,LXBN,'!' .    !!     @A@@@D         LXOP  ACDNI
)@@G@@V,LXBN,1 .       /@B@@@D         LXOP  ACCMT,LXRSWD,'*' .  /*     @A@@@DNJ
)@@G@@         LXOP  ACCOMA,LXCM,0 .     ,@A@@@D         LXOP  ACBSLH,LXRSWD,0NK
)@@G@@ .   \@A@@@D/.       PARSE NUMBER CONSTANTS     @^@@@D.        DLXFLG SENL
)@@G@@T TO: @ @@@D.        BIT 0 - E PRESENT    @ @@@D.        BIT 1 - I PRESENM
)@@G@@NT    @ @@@D.        BIT 2 - B PRESENT    @ @@@D.        BIT 3 - . PRESENN
)@@G@@NT    @G@@@DLXNDEC   LABEL .                   INITIAL . SEE IF QUALIFIENO
)@@G@@D NAME SEP. @^@@@D         LOAD  R1,X1    @^@@@D         LOAD  R2,A1    NP
)@@G@@@C@@@D         GETC .                    GET DIGIT    @D@E@D         IF NQ
)@@G@@   A8,GE,'0',I THEN,LXNDC2 . -> NUMBER    @D@@@E         IF    A8,LT,'9'NR
)@@G@@+1,I THEN,LXNDC2 . -> NUMBER  @#@@@ELXNDC3   LABEL .  @E@@@D         LOANS
)@@G@@D  A3,ACQNS,I .    SET QUALIFIED NAME SEPARATOR @ @@@D         STORE A3,NT
)@@G@@DLXACN .    @C@@@D         MOVE  DLXCLN,LXQN,I .     SET CLASS    @F@@@DNU
)@@G@@         STORE  A8,DLXCHR .        SAVE CHARACTER FOR NEXT TIME   @C@@@DNV
)@@G@@         GOTO  LXCRTN .             -> RETURN   @#@@@DLXNDC2   LABEL .  NW
)@@G@@@F@@@E         IF    A8,LT,'0',I THEN,LXNDC3 . ->NOT BETWWEEN 0 AND 9   NX
)@@G@@@F@@@E         LOAD  A8,'.',I .           RESET DECIMAL POINT AS CHAR   NY
)@@G@@@^@@@D         LOAD  X1,R1 .  @^@@@D         LOAD  A1,R2 .  @C@E@D      NZ
)@@G@@   LOAD  A8,'.',I .          SET . TO READ@C@@@DLXNCON   LABEL.    NUMBEOA
)@@G@@R CONSTANT ENTRY POINT  @E@@@D         LOAD  F,0010,I.           SET FLAOB
)@@G@@G REG TO LZ SWITCH@D@@@D         LOADA A3,KFZERO .         CLEAR TO '000OC
)@@G@@000'  @G@@@D         LOADA A2,DLXCON .                                  OD
)@@G@@     *******@G@@@D         LOAD  R1,18,I .                              OE
)@@G@@           *******@G@@@D         LINK MO$VEZ .             FILL WIRH ZEROF
)@@G@@OES              *******@C@@@D         MOVE  DLXCON+18,DLXZER,2 .  SET 0OG
)@@G@@E+000 @E@@@D         MOVE DCVINT,0,I .         SET PREVIOUS DIGIT TO 0  OH
)@@G@@@F@@@D         MOVE  DCVSV,KBLANK .      CLEAR WORD 1 OF DIGIT AREA     OI
)@@G@@@E@@@D         LOAD  A3,1,I .            INITIALIZE AT 1 WORD     @C@@@DOJ
)@@G@@         SETL  A4,4,I .            4 CHAR/WORD  @C@@@D         STORED A3OK
)@@G@@,DCVFFT .        SAVE VALUES  @G@@@D         SETPC 4,DLXCON.           SOL
)@@G@@TORE NUMBER INTO COLLEXTION AREA    @#@@@D         PUTC .   @D@@@D      OM
)@@G@@   MOVE  DLXCS,'+',I.        SET TO + NUMBER    @C@@@D         LOAD  A9,ON
)@@G@@0,I.             # DIGITS=0   @D@@@D         LOAD  A10,0,I.            #OO
)@@G@@ LEADING O'S =0   @G@@@D         STORE A8,DCVINT .         SAVE FIRST CHOP
)@@G@@AR FOR SYM TAB SRCH     @E@@@D         GOTO  LXNLQ1 .            -> HAVEOQ
)@@G@@ FIRST CHARACTER  @#@@@DLXNLOP   LABEL.   @D@@@D         GETC.          OR
)@@G@@           GET NEXT CHARACTER @#@@@DLXNLQ    LABEL.   @C@@@D         LINOS
)@@G@@K  LXPC .              SAVE CHAR    @#@@@DLXNLQ1   LABEL .  @^@@@D      OT
)@@G@@   USING WORD,X3. @G@@@D         LOADA X3,LXTRTB.          POINT TO MAINOU
)@@G@@ TOKEN CRACKING TABLE   @G@@@D         ADD   X3,A8.              POINT TOV
)@@G@@O ENTRY FOR THIS CHARACTER    @G@@@D         LOAD  X3,W1Q2.            HOW
)@@G@@EY OFFSET IN NUMBER CRACKING PART   @C@@@D         GOTO  LXNQP,X3.      OX
)@@G@@     GO TO ROUTINE@B@@@DLXNQP    LABEL.    START OF NUMBER CRACKER@F@@@DOY
)@@G@@         GOTO  LXNLPN.             SAVE CHARACTER AND ENT NUMBER  @#@@@DOZ
)@@G@@LXNLP2   LABEL.   @C@@@D         SET   0001,ON.            B IS ILLEGAL PA
)@@G@@@#@@@DLXNLP1   LABEL.   @D@@@D         SET   0010,OFF.           TURN OFPB
)@@G@@F LZ SWITCH @#@@@DLXNLP3   LABEL .  @F@@@D         PUTC  .              PC
)@@G@@     PUT DIGIT IN COLLEXTION AREA   @#@@@DLXNLP5   LABEL.   @F@@@D      PD
)@@G@@   ADD   A9,1,I.             ADD ONE TO NUMBER OF DIGITS    @C@@@D      PE
)@@G@@   GOTO  LXNLOP.             -> NEXT DIGIT@C@@@DLXNLPZ   LABEL.         PF
)@@G@@           ZERO FOUND   @A@@@D         IF    0010,OFF THEN,LXNLP3.@F@@@DPG
)@@G@@         ADD   A10,1,I.            ADD 1 IF SIGNIFICANT DIGIT     @C@@@DPH
)@@G@@         SET   0004,ON.            LZ SWITCH ON @A@@@D         IF    004PI
)@@G@@0,OFF THEN,LXNLOP.@E@@@D         SUB   A11,1,I.            ADJUST CURRENPJ
)@@G@@T MODIFIER  @C@@@D         GOTO  LXNLOP.             -> NEXT DIGIT@^@@@DPK
)@@G@@LXNLPD   LABEL.    DIGIT@E@@@D         IF 0040,ON THEN,LXNER1.   -> TWO PL
)@@G@@DECIMAL POINTS    @C@@@D         SET   0040,ON.            SET . FLAG   PM
)@@G@@@C@@@D         LOAD  A11,A9 .            SET MODIFIER @D@@@D         GOTPN
)@@G@@O  LXNLOP.             -> GET NEXT DIGIT  @#@@@DLXNEXF   LABEL .  @#@@@DPO
)@@G@@         UPPERC . @ @@@DLXNEXP   LABEL.    E FOUND    @C@@@D         STOPP
)@@G@@RE A11,DLXCMD.         SAVE MODIFIER@D@@@D         LOADA X4,DLXCON+19 . PQ
)@@G@@     POINT TO EXPONENT  @C@@@D         SET   0400,ON.            SET E FPR
)@@G@@OUND  @A@@@D.        LOOK FOR EXPONENT SIGN     @#@@@DLXNESG   LABEL.   PS
)@@G@@@A@@@D         GETC. READ NEXY SYMBOL     @C@@@D         LINK  LXPC .   PT
)@@G@@           SAVE CHAR    @C@@@D         IF    A8,EQ,'+',I THEN,LXNEPL. ->PU
)@@G@@+ SIGN@C@@@D         IF A8,EQ,'-',I THEN,LXNEMI . - FOUND   @B@@@D      PV
)@@G@@   IF    A8,LT,'0',I THEN,LXNER4.   @D@@@D         IF    A8,GE,'9'+1,I TPW
)@@G@@HEN,LXNER4 ELSE,LXNEDG .@^@@@D         USING WORD,X4  @A@@@DLXNEMI   LABPX
)@@G@@EL.    MINUS SIGN FOUND @ @@@D         MOVE  W1Q1,'-',I .   @#@@@DLXNEPLPY
)@@G@@   LABEL.   @C@@@D         GETC.                     READ EXPONENT@D@@@DPZ
)@@G@@         SET   0002,ON.            SET SIGN SWITCH    @C@@@D         LINQA
)@@G@@K  LXPC .              SAVE CHAR    @C@@@D         IF    A8,LT,'0',I THEQB
)@@G@@N,LXNER5. ->ERROR @B@@@D         IF    A8,GE,'9'+1,I THEN,LXNER5 .@#@@@DQC
)@@G@@LXNEDG   LABEL.   @F@@@D         LOAD    A3,W1Q2 .         GET FIRST DIGQD
)@@G@@IT OF EXPONENT    @G@@@D         IF    A3,NE,'0',I THEN,LXNER3. -> TOO MQE
)@@G@@ANY DIGITS IN EXPONENT  @#@@@DLXNDG1   LABEL.   @C@@@D         LOAD  A3,QF
)@@G@@W1Q1 .           GET EXP SIGN @B@@@D         LOAD  A4,W1 .             +QG
)@@G@@DDD   @B@@@D         SLB   A4,9 .             DDD0    @B@@@D         ADDQH
)@@G@@   A4,A8 .             DDDD   @D@@@D         STORE  A4,W1 .            RQI
)@@G@@ESET NEW DIGITS   @C@@@D         STORE  A3,W1Q1 .          RESET SIGN   QJ
)@@G@@@A@@@D         GETC. READ NEXT CHARACTER  @E@@@D         IF    A8,GE,'9'QK
)@@G@@+1,I THEN,LXNLPN . -> END OF NUMBER @C@@@D         LINK  LXPC .         QL
)@@G@@     SAVE CHAR    @C@@@D         IF    A8,GE,'0',I THEN,LXNEDG. -> DIGITQM
)@@G@@@E@@@D         IF    A8,EQ,'B',I THEN,LXNBNE . -> BINARY NUMBER   @E@@@DQN
)@@G@@         IF    A8,EQ,0142,I THEN,LXNBNF . -> LOWER CASE B   @#@@@DLXNED2QO
)@@G@@   LABEL.   @C@@@D         IF A8,EQ,'I',I THEN,LXNCMP. IMAGINARY  @D@@@DQP
)@@G@@         IF A8,EQ,0151,I THEN,LXNCMQ . -> LOWER CASE I@A@@@DLXNLPN   LABQQ
)@@G@@EL.    END OF NUMER LOOP@E@@@D         LINK  LXNEXTC .          SAVE CHAQR
)@@G@@R FOR NEXT TIME   @A@@@D         IF    0040,ON THEN,LXNLO.  @C@@@D      QS
)@@G@@   LOAD  A11,A9.             SAVE MODIFIER@#@@@DLXNLO    LABEL.   @C@@@DQT
)@@G@@         STORE A11,DLXCMD.         SAVE MODIFIER@B@@@D         ADD   A9,QU
)@@G@@A10.            ADD LZ  @D@@@D         STORE A9,DLXPRE .         SAVE PRQV
)@@G@@ECISION     @D@@@D         STORE F,DLXFLG.           SAVE FLAGS FOR SYNAQW
)@@G@@@^@@@D.        CONVERT NUMBER @E@@@D         MOVE  DCVSV+6,DLXCON,6 .  SQX
)@@G@@AVE COLLECTED DIGITS    @E@@@D         MOVE  DLXCON,DCVSV,6 .    MOVE INQY
)@@G@@ ORIGINAL STRING  @D@@@D         LOAD  A9,DCVFFT .         SET CALL TO LQZ
)@@G@@XSRCH @D@@@D         SLB   A9,2 .               SIZE IN CHARS     @D@@@DRA
)@@G@@         IF    0200,OFF THEN,LXN01 . -> NOT COMPLEX   @^@@@D         ADDRB
)@@G@@   A9,1,I . @#@@@DLXN01    LABEL .  @D@@@D         LINK  LXSRCH .       RC
)@@G@@     SEARCH HASH TABLE  @D@@@D         MOVE  DLXCON,DCVSV+6,6 .  RESTORERD
)@@G@@ DIGITS     @ @@@D         USING SDBCD,X2 .     @E@@@D         SET   000RE
)@@G@@1+SDBCON,ON,SDBCL4 .    SET SD ENTRY BIT  @C@@@D         STORE X2,DLXIDNRF
)@@G@@ .         SET PTR TO SD@D@@@D         LOADA X3,SDBBCD .         POINT TRG
)@@G@@O BCD STRING@ @@@D         STORE X3,DLXBCN .    @D@@@D         MOVE  DLXRH
)@@G@@SZN,SDBCNT .     SET SIZE OF STRING @C@@@D         LOAD  X3,SDBCLK .    RI
)@@G@@     SET BCLK PTR @F@@@D         IF    SDBCLK,NZERO THEN,LXND40 . -> ALRRJ
)@@G@@EADY CONVERTED    @ @@@D         USING SDSECT,X3 .    @G@@@D         USIRK
)@@G@@NG SDBCD,X2 .          CONVERT NUMBER (DCVFLG IN F REG)     @^@@@D      RL
)@@G@@   LINK  CVNUM .  @C@@@D         LOAD  F,DCVFLG .          SET FLAG REG RM
)@@G@@@D@@@D         MOVE  DLXCLN,LXIDDN,I .      SET NUMBER CLASS@E@@@D      RN
)@@G@@   IF    SDDCBN,ON THEN,LXND01 . -> BINARY NUMBER     @#@@@DLXND10   LABRO
)@@G@@EL .  @D@@@D         LINK  LXNSD1 .            -> ALLOCATE SD     @C@@@DRP
)@@G@@         MOVE  SD2SP,DCVDQP .      SET P AND Q  @E@@@D         IF    SDFRQ
)@@G@@XFL,ON THEN,LXNSDL . -> FLOATING NUMBER   @D@@@D         MOVE  SDFXPT,DCRR
)@@G@@VFFT,2 .   SET FUMNY FLOAT    @D@@@D         IF    SDSCAL,NZERO THEN,LXNRS
)@@G@@D20 . -> Q "= 0 . @D@@@D         MOVE  SDFXPT+1,DCVINT .   SET INTEGER VRT
)@@G@@ALUE  @D@@@D         MOVE  SDFXPT,0,I .        SET INTEGER VALUE  @C@@@DRU
)@@G@@         GOTO  LXND41 .            -> REUTRN    @D@@@DLXPC     LLOC .   RV
)@@G@@                 SAVE CHAR IN NUMBER@C@@@D         LOADD A3,DCVFFT .    RW
)@@G@@     SET REGS     @C@@@D         LOAD  A6,DCVSV-1,A3 .     GET WORD     RX
)@@G@@@E@@@D         SLB   A6,9 .              LEAVE SPACE FOR CHARACTER@D@@@DRY
)@@G@@         ADD   A6,DCVINT .         ADD LAST CHARACTER @E@@@D         STORZ
)@@G@@RE A8,DCVINT .         SAVE DIGIT FOR NECT TIME @ @@@D        STORE  A6,SA
)@@G@@DCVSV-1,A3 .@E@@@D         LOOP  A4,LXPC2 .          -> MORE CHARS IN WOSB
)@@G@@RD    @C@@@D         ADD   A3,1,I .            ADD 1 TO WORD@^@@@D      SC
)@@G@@   SETL  A4,4,I . @D@@@D         LOAD  A6,KBLANK .         CLEAR NEXT WOSD
)@@G@@RD    @ @@@D         STORE A6,DCVSV-1,A3 .@#@@@DLXPC2    LABEL .  @C@@@DSE
)@@G@@         STORED A3,DCVFFT .        RESET REGS   @C@@@D         LJMP .   SF
)@@G@@                 -> RETURN    @#@@@DLXND20   LABEL .  @E@@@D         MOVSG
)@@G@@E  DLXCLN,LXIDCN,I .   SET NON INTEGER NUMBER   @D@@@D         MOVE  SDFSH
)@@G@@LPT,DCVFLT,2 .   SET FLOATING VALUE @C@@@D         GOTO  LXND41 .       SI
)@@G@@     -> RETURN    @#@@@DLXND01   LABEL .  @D@@@D         LINK  LXNSD1 . SJ
)@@G@@           ALLOCATE SPACE     @D@@@D         SET   SDDCBN,ON,SDCLS1 .  SSK
)@@G@@ET BINARY FLAG    @E@@@D         MOVE  DLXCLN,LXIDCN,I .   SET NON INTEGSL
)@@G@@ER FLAG     @E@@@D         MOVE  SD2SP,DCVBQP .      SET SCALE AND PRECISM
)@@G@@SION  @D@@@D         IF SDFXFL,ON THEN,LXNSDL . -> FLOATING POINT @D@@@DSN
)@@G@@         MOVE SDFXPT+1,DCVINT .    SET INTEGER VALUE  @C@@@D         GOTSO
)@@G@@O  LXND41 .            -> RETURN    @#@@@DLXNSDL   LABEL .  @D@@@D      SP
)@@G@@   MOVE  DLXCLN,LXIDCN,I .   SET NON INTEGER    @E@@@D         SET   SDFSQ
)@@G@@XFL,ON,SDCLS1 .  SET FLOATING POINT BIT   @C@@@D         MOVE  SDSCAL,0,SR
)@@G@@I .        SET SCALE =0 @C@@@D         GOTO  LXND41 .            -> RETUSS
)@@G@@EN    @#@@@DLXND40   LABEL .  @D@@@D         MOVE  DLXCLN,SDBCLS .     SST
)@@G@@ET CLASS BYTE     @C@@@D         STSDP X2,DLXIDN .         SET TOKEN PTRSU
)@@G@@@C@@@D         GOTO  LXCRTN .            -> RETURN    @#@@@DLXND41   LABSV
)@@G@@EL .  @D@@@D         MOVE  SDBCLS,DLXCLN .     SET CLASS BYTE     @C@@@DSW
)@@G@@         STSDP X2,DLXIDN .         SET TOKEN PTR@E@@@D         STSDP X2,SX
)@@G@@SDBCHI .         SET LINKAGE TO BCD ENTRY @E@@@D         IF    0200,OFF,SY
)@@G@@DLXFLG THEN,LXND43 . -> IMAG NUMBER @C@@@D         SET   SDRLCX,ON,SDCLSSZ
)@@G@@1 .  COMPLEX FLAG @#@@@DLXND43   LABEL .  @C@@@D         LOADA A3,SDFLPTTA
)@@G@@ .       SET SD PTR     @ @@@D         STSDP A3,SDLCOF .    @C@@@D      TB
)@@G@@   GOTO LXCRTN .             -> RETURN    @#@@@DLXNSD1   LOCAL .  @F@@@DTC
)@@G@@         LOAD  A7,10,I .           ALLOCATE 10 WORD SD FOR NUMBER @^@@@DTD
)@@G@@         LINK  PLALC .  @C@@@D         STSDP X3,SDBCLK .         SABE PTTE
)@@G@@R     @C@@@D         MOVE  SDCLS4,SDBCSD,I .      SET SD BIT@I@@@D      TF
)@@G@@   MOVE  SDCLS0-(IN 0,Q1-H1,0,0),SD0ART*512+SDVRCN,I . SET ARITH CONST BTG
)@@G@@IT    @D@@@D         MOVE SDFLPT,DCVFLT,2 .    SET FLOATING VALUE @D@@@DTH
)@@G@@         LINK  LXBLK0 .            ADD TO BLOCK 0     @#@@@D         JMPTI
)@@G@@ .    @[@@@D.     @[@@@D.     @#@@@DLXBLK0   LLOC .   @C@@@D         LOATJ
)@@G@@D  A3,ADBK0S .          LINK SD     @ @@@D         STORE A3,SDBKLK .    TK
)@@G@@@ @@@D         USING SDSECT,A3 .    @ @@@D         LOAD  A4,SDNXDC .    TL
)@@G@@@ @@@D         STORE X3,SDNXDC .    @ @@@D         USING SDSECT,X3 .    TM
)@@G@@@ @@@D         STORE A4,SDNXDC .    @D@@@D         LJMP .               TN
)@@G@@      RETURN TO CALLER  @[@@@D/.    @^@@@D         USING WORD,X4 .@#@@@DTO
)@@G@@LXNBNF   LABEL .  @#@@@D         UPPERC . @C@@@DLXNBNE   LABEL .        TP
)@@G@@           FOUND 'B'    @#@@@DLXNBIN   LABEL .  @D@@@D         IF    000TQ
)@@G@@1,ON THEN,LXNER6 . -> ILLEGAL 'B'   @#@@@DLXNBN2   LABEL .  @C@@@D      TR
)@@G@@   SET   0100,ON .           SET B FOUND  @^@@@D         LINK  LXPC .   TS
)@@G@@@#@@@DLXNBN3   LABEL .  @D@@@D         GETC .                    GET NEXTT
)@@G@@T CHARACTER @D@@@D         IF    A8,EQ,0151,I THEN,LXNCMQ . LOWER CASE ITU
)@@G@@@D@@@D         IF    A8,NE,'I',I THEN,LXNLPN . -> END NUMBER@#@@@DLXNCMQTV
)@@G@@   LABEL .  @#@@@D         UPPERC . @#@@@DLXNCMP   LABEL .  @D@@@D      TW
)@@G@@   SET   0200,ON .           SET 'I' SWITCH     @D@@@D         LINK  LXPTX
)@@G@@C .               SAVE I IN STRING  @D@@@D         GETC .               TY
)@@G@@     READ NEXT CHARACTER@C@@@D         GOTO  LXNLPN .            -> END TZ
)@@G@@NUMBER@^@@@D.        ERROR MESSAGES @#@@@DLXNER1   LABEL .  @D@@@D      UA
)@@G@@   LXERR LXER20 .            2 DECIMAL POINTS   @C@@@D         GOTO  LXNUB
)@@G@@LPN .            -> END NUMBER@#@@@DLXNER2   LABEL .  @D@@@D         LXEUC
)@@G@@RR LXER21 .            E AT END OF CARD   @C@@@D         GOTO LXNLPN .  UD
)@@G@@           -> END NUMBER@#@@@DLXNER3   LABEL .  @G@@@D         LXERR LXEUE
)@@G@@R22 .            TOO MANY DIGITS USE LASE 3 (IN EXP)  @D@@@D         GOTUF
)@@G@@O  LXNDG1 .            -> FINISH EXPONENT @#@@@DLXNE3A   LABEL .  @D@@@DUG
)@@G@@         LXERR LXER22 .            TOO MANY DIGITS    @C@@@D         GOTUH
)@@G@@O  LXNED2 .            -> USE LAST 3@#@@@DLXNER5   LABEL .  @#@@@DLXNER4UI
)@@G@@   LABEL .  @D@@@D         LXERR LXER23 .            ILLEGAL EXPONENT   UJ
)@@G@@@C@@@D         GOTO  LXNLPN .            -> END NUMBER@#@@@DLXNER6   LABUK
)@@G@@EL .  @E@@@D         LXERR LXER24 .            ILLEGAL BUNARY NUMBER    UL
)@@G@@@E@@@D         GOTO  LXNBN3 .            -> TREAT AS NON BINARY   @^@@@DUM
)@@G@@/.       PARSE STRINGS  @#@@@DLXSCON   LABEL .  @E@@@D         MOVE  DLXUN
)@@G@@CON,KBLANK,20 .  CLEAR COLLECTION AREA    @F@@@D         SETPC 4,DLXCON UO
)@@G@@.          SETUP STRING COLLECTION AREA   @C@@@D         LOAD  A9,0,I . UP
)@@G@@           LENGTH=0     @D@@@D         LOAD  F,0,I .             CLEAR FUQ
)@@G@@LAG REG     @#@@@DLXSCLP   LABEL .  @D@@@D         GETC .               UR
)@@G@@     GET NEXT CGARACTER @B@@@D         IF    A8,EQ,'0',I THEN,LXSCD1 .  US
)@@G@@@F@@@D         IF    A8,EQ,'1',I THEN,LXSCD1 . -> POSSIBLE BINARY STRINGUT
)@@G@@@E@@@D         IF    A8,NE,'''',I THEN,LXSC2 . -> NOT BIT STRING  @B@@@DUU
)@@G@@LXSC1    LABEL .                   FOUND '@D@@@D         GETC  .        UV
)@@G@@           READ SECOND QUOTE  @F@@@D         IF    A8,NE,'''',I THEN,LXSUW
)@@G@@CND . -> NOT ' , END STRING   @#@@@DLXSCAD   LABEL .  @F@@@D         SETUX
)@@G@@   0001,ON .           SET NOT VALID BIT STRING DLAG  @#@@@DLXSCD1   LABUY
)@@G@@EL .  @D@@@D         ADD   A9,1,I .            ADD ONE TO LENGTH  @#@@@DUZ
)@@G@@LXSCD2   LABEL .  @G@@@D         PUTC .                    PUT CHARACTERVA
)@@G@@ INTO COLLECTION AREA   @D@@@D         GOTO  LXSCLP .            -> READVB
)@@G@@ NEXT INPUT @#@@@DLXSC2    LABEL .  @C@@@D         IF    A8,NE,LXSTOP,I VC
)@@G@@THEN,LXSCAD .     @C@@@D         LXERR LXER05 .            END OF CARD  VD
)@@G@@@I@@@D         LOAD  A8,LXSTOP,I .           SET TOKEN TYPE FOR NEXT TOKVE
)@@G@@EN (END CARD)     @ @@@D         STORE A8,DLXCHR .    @E@@@D         LOAVF
)@@G@@D  A8,'''',I .         SET TERMINAL CHARACTER   @#@@@D         PUTC .   VG
)@@G@@@F@@@D         GOTO  LXSCE1 .             LOOKUP STRING IN SYMBOL TBLE  VH
)@@G@@@#@@@DLXSCND   LABEL .  @B@@@D         LINK  LXNEXTC .         SAVE CHARVI
)@@G@@@D@@@D         LOAD  A8,'''',I .         SET DUMMY ' AT END @#@@@D      VJ
)@@G@@   PUTC .   @F@@@D         IF    0001,OFF THEN,LXSCBD .   -> SO FAR VALIVK
)@@G@@D BIT STRING@#@@@DLXSCE1   LABEL .  @E@@@D         MOVE  DLXCLN,LXIDCS,IVL
)@@G@@ .   SET CHARACTER STRING FLAG@F@@@D         ADD   A9,1,I .            AVM
)@@G@@DJUST LENGTH FOR ' AT ENDS    @D@@@D         STORE A9,DLXSZN .         SVN
)@@G@@ET SIZE OF STRING @D@@@D         LINK  LXSRCH .            SEARCH FOR STVO
)@@G@@RING  @ @@@D         USING SDBCD,X2 .     @ @@@D         STORE X2,DLXIDNVP
)@@G@@ .    @^@@@D         LOADA X3,2,X2 .@ @@@D         STORE X3,DLXBCN .    VQ
)@@G@@@B@@@D         SET   0001+SDBCON,ON,SDBCL4 .    @D@@@D         LSDP  X3,VR
)@@G@@SDBCLK .         SET SD POINTER     @D@@@D         IF    SDBCLK,NZERO THVS
)@@G@@EN,LXSC11 . -> SD EXISTZ@C@@@D         LOAD  A7,8,I .            GET 8 WVT
)@@G@@ORD SD@^@@@D         LINK  PLALC .  @C@@@D         STSDP X3,SDBCLK .    VU
)@@G@@     SAVE POINTER @C@@@D         MOVE  SDBCLS,LXIDCS,I .   SET STRING SDVV
)@@G@@@ @@@D         USING SDSECT,X3 .    @C@@@D         MOVE  SDCLS4,SDBCSD,IVW
)@@G@@ .   SET SD FLAG  @D@@@D         STSDP X2,SDBCHI .         -> PTR TO BCDVX
)@@G@@ FIELD@C@@@D         LOADA A7,SDSTDV .         POINT TO DV  @E@@@D      VY
)@@G@@   STSDP A7,SDLCOF .         SET SD POINTER TO BE NEG @G@@@D         MOVVZ
)@@G@@E  SDCLSS,SD0STR*512+SDARST+SDVRCN,I . SET STRING CONSTANT  @D@@@D      WA
)@@G@@   LSDP  X2,SDBCHI .        POINT TO BCD STRING @F@@@D         LOADA X2,WB
)@@G@@SDBBCD .      POINT TO ACTUAL STRING IN BCD BLK @D@@@D         LOAD  X4,WC
)@@G@@DLXSZN .         GET SIZE OF STRING @D@@@D         SUB   X4,1,I .       WD
)@@G@@     DELETE ' AT END    @E@@@D         IF    0002,OFF THEN,LXSDCO . -> NWE
)@@G@@OT BIT STRING     @ @@@D         SUB   X4,1,I . -1 BIT@D@@@D         SETWF
)@@G@@   SDCHBT,ON,SDCLS1 .  SET BIT STRING BIT @F@E@D         LOADXI X2,ARBTCWG
)@@G@@H*0100,I . SET BIT STRING CONSTANT IN DV  @F@@@E         LOADXI X2,ARCHBWH
)@@G@@T*0100,I . SET BIT STRING CONSTANT IN DV  @#@@@DLXSDCO   LABEL .  @ @@@DWI
)@@G@@         STORE X4,DLXSZN .    @C@@@D         STORE X4,SDSTML .         MWJ
)@@G@@AX LENGTH   @D@@@D         STORE X4,SDSTCL .         CURRENT LENGTH     WK
)@@G@@@C@@@D         STORE X2,SDSTDV .         SET -> TO DV @D@@@D         LINWL
)@@G@@K  LXBLK0 .             ADD TO BLOCK 0    @#@@@DLXSC11   LABEL .  @C@@@DWM
)@@G@@         GOTO  LXCRTN .            -> REUTRN    @#@@@DLXSCBD    LABEL . WN
)@@G@@@D@@@D         LOAD  A8,DLXCHR .         GET NEXT SYMBOL    @C@@@D      WO
)@@G@@   IF    A8,EQ,'B',I THEN,LXSCB1 . -> B   @F@@@D         IF    A8,NE,014WP
)@@G@@2,I THEN,LXSCE1 . -> NOT LOWER CASE B     @C@@@D         SET   040,OFF,AWQ
)@@G@@8 .  MAKE IT UPPER CASE @#@@@DLXSCB1   LABEL .  @D@@@D         ADD   A9,WR
)@@G@@1,I .            ADD B TO STRING    @#@@@D         PUTC .   @F@@@D      WS
)@@G@@   MOVE  DLXCHR,0,I .        CLEAR OUT NEXT SYMBOL BYTE     @ @@@D      WT
)@@G@@   LOAD  F,0002,I .     @C@@@D         GOTO  LXSCE1 .            -> RETUWU
)@@G@@RN    @ @@@D/.       END OF CARD RPUTINE  @ @@@D.        X1 AND X2 ARE UWV
)@@G@@PDATED@#@@@DLXCDND   LABEL .  @D@@@D         IF    DLXDOP,ZERO THEN,LXCNWW
)@@G@@D1 . -> NOT IN /*D@^@@@D         LXERR LXER11 . @C@@@D         MOVE  DLXWX
)@@G@@DOP,0,I .        CLOSE OUT /*D@#@@@DLXCND1   LABEL .  @E@@@D         TC WY
)@@G@@   OFF .               SAVE REGS FOR READING    @ @@@D.        FORMAT THWZ
)@@G@@E PRINT LINE@^@@@D         USING WORD,X3 .@I@@@D         LOAD  X3,DLXCDDXA
)@@G@@ .         -> CARD IMAGE          ... DONE BY EXEC 8 ...    @I@@@D      XB
)@@G@@   ADD   X3,DLXSMC .         GET LAST COLUMN         .. DONE BY EXEC 8 .XC
)@@G@@..    @I@@@D         MOVE  W1Q1,DLXCSV .       RESTORE STORE CHARACTER .XD
)@@G@@. DONE BY EXEC 8 ...    @C@@@D         LOAD  X3,DLXCDD .         POINT TXE
)@@G@@O CARD@E@@@D         IF    0020,OFF,LIMALX THEN,LXCD03 . -> NOSOURCE    XF
)@@G@@@E@@@D         LOAD  A7,DZZSIR .         GET FILE LINE NUMBER     @D@@@DXG
)@@G@@         CVE   A7,R .              CONVERT TO FIELDATA@ @@@D         STOXH
)@@G@@RE A4,DGOLIN .    @E@@@D         LOAD  A7,DLXSMC .         NOMBER OF WORXI
)@@G@@DS IN CARD  @E@@@D         IF    0040,OFF,DGOPT3 THEN,LXCD01 . -> BATCH XJ
)@@G@@JOB   @F@@@E         IF    0100,OFF,DGOPT4 THEN,LXCD10 . -> NO PARAGRAPHXK
)@@G@@ER    @^@@@E         LINK  LXPARA   @F@@@E         +20,DGOLIN+2-(IN 63,0XL
)@@G@@,1,0) .  16 WORDS BEGINNING A +2    @^@@@E         GOTO  LXCD11 . @#@@@EXM
)@@G@@LXCD10   LABEL .  @E@@@D         MOVE  DGOLIN+3,W1,R,A7 .  MOVE CARD TO XN
)@@G@@PRINT AREA  @#@@@ELXCD11   LABEL .  @E@@@D         LOAD  A7,DSALSN .    XO
)@@G@@     GET STATEMEET NUMBER     @ @@@D         STORE A7,DGOLIN+1 .  @C@@@DXP
)@@G@@         LOADA X1,DGOLIN .         PRINT SOURCE @^@@@D         GOTO  LXCXQ
)@@G@@D03 . @#@@@DLXCD01   LABEL .  @C@@@E         IF    0100,OFF,DGOPT4 THEN,XR
)@@G@@LXCD12 .    @^@@@E         LINK  LXPARA   @A@@@E         +27,DGOLIN+6-(IXS
)@@G@@N 63,0,1,0) @^@@@E         GOTO  LXCD13   @#@@@ELXCD12   LABEL .  @E@@@DXT
)@@G@@         MOVE  DGOLIN+7,W1,R,A7 .  MOVE IMAGE TO OUTPUT AREA@#@@@ELXCD13XU
)@@G@@   LABEL .  @^@@@D         USING WORD,X1 .@D@@@D         LOADA X1,DGOLINXV
)@@G@@ .         POINT TO PRINT LINE@E@@@D         IF    DLXPFG,ZERO THEN,LXCDXW
)@@G@@PR . PRINT CARD ONLY    @ @@@D         LOAD  A3,DSALCN .    @^@@@D      XX
)@@G@@   STORE A3,W1+1 .@ @@@D         LOADD A3,DSALBN .    @^@@@D         LDSXY
)@@G@@C  A3,9 .   @ @@@D         STORED A3,W1+3 .     @F@@@D         MOVE W1+5XZ
)@@G@@,DSALSN .        SETUP STMT, DEPTH, DO AND BLOCK@#@@@DLXCD03   LABEL .  YA
)@@G@@@D@@@D         MOVE  DLXPFG,0,I .        TURN OFF PRINT FLAG@#@@@DLXCDPRYB
)@@G@@   LABEL .  @F@@@D         IF    0020,OFF,LIMALX THEN,LXNWCD . -> NO PRIYC
)@@G@@NT WANTED   @C@@@D         LINK GOPRTL .             PRINT LINE   @#@@@DYD
)@@G@@LXNWCD   LABEL .  @C@@@D         LINK  GORDCD .            READ CARD    YE
)@@G@@@G@@@D         LOAD  F,DGOCDF .          SET FLAG REG WITH RETURN FROM RYF
)@@G@@EADCD @A@@@D         IF    0004,ON THEN,LXCDSC .@E@@@D         IF    DGOYG
)@@G@@CDF,NZERO THEN,LXPGND . -> END OF SOURCE  @#@@@DLXCDSC   LABEL .  @E@@@DYH
)@@G@@         STORE X1,DLXCDD .         SAVE CARD IMAGE POINTER  @#@@@DLXIN1 YI
)@@G@@   LABEL .  @^@@@D         USING WORD,X1 .@I@@@D         ADD   X1,DLXSMCYJ
)@@G@@ .         GET LAST COLUMN         .. DONE BY EXEC 8 ...    @I@@@D      YK
)@@G@@   MOVE  DLXCSV,W1Q1 .       SAVE STOP CHARACTER     .. DONE BY EXEC 8 .YL
)@@G@@..    @I@@@D         MOVE  W1Q1,LXSTOP,I .     SET EOF                 .YM
)@@G@@. DONE BY EXEC 8 ...    @I@@@D         LOAD  X1,DLXCDD .         GET STAYN
)@@G@@RT               .. DONE BY EXEC 8 ...    @C@@@D         SETGC 4,W1 .   YO
)@@G@@           START READING@G@@@D.        GETC .                     COL 1 YP
)@@G@@ IBM COMPATIBILITY - IGNORED  @E@@@D.        IF    A8,EQ,' ',I THEN,LXINYQ
)@@G@@2 . SET COL 1 BLANK     @C@@@D.        SUB A1,1,I .           REREAD COLYR
)@@G@@ 1    @D@@@D.        MOVE  DLXPCK,1,I .        SET COL 1 NOT BLANK@#@@@DYS
)@@G@@LXIN2    LABEL .  @ @@@D         MOVE  DLXCHR,0,I .   @D@@@D         IF YT
)@@G@@   0004,OFF THEN,LXCRIN . -> NO * RETURN  @C@@@D         LOAD  A3,ACSCS,YU
)@@G@@I .    SET * ON CARD    @ @@@D         STORE A3,DLXACN .    @E@@@D      YV
)@@G@@   MOVE  DLXCLN,LXRSWD,I .   SAET RESERVED WORD RETURN@C@@@D         MOVYW
)@@G@@E  DGOCDF,0,I .        NORAL CARD   @C@@@D         GOTO  LXCRTN .       YX
)@@G@@     -> REUTRN    @#@@@DLXPGND   LABEL .  @E@@@D         LOAD  A3,ACEST,YY
)@@G@@I .        SET END OF SOURCE TOKEN  @ @@@D         STORE A3,DLXACN .    YZ
)@@G@@@A@@@D         MOVE  DLXCLN,LXRSWD,I .    @^@@@D         GOTO  LXCRTN . ZA
)@@G@@@B@@@D.        ENTER HERE FOR EACH NEW PROGRAM  @E@@@DLXINIT*  LOCAL .  ZB
)@@G@@                 INITIAL ENTRY FROM SYNA  @C@@@E         MOVE  DERCTK,0,ZC
)@@G@@I .      TOKEN COUNT=0  @G@@@D         MOVE  DSALSN,KBLANK .     SET INIZD
)@@G@@TIAL STMT NUMBER TO BLANKS    @F@@@D         MOVE  DSDPNM,100,I    .   SZE
)@@G@@TART NEW LABELS AT $$L100     @ @@@D         STORE X2,DLXSV1 .    @ @@@DZF
)@@G@@         STORE A2,DLXSV2 .    @D@@@D         LOAD  X1,DLXCDD .         GZG
)@@G@@ET CARD ADDRESS   @E@@@D         MOVE  DLXEST,0,I .        ZERO ERR STACZH
)@@G@@K LEVEL     @D@@@D         MOVE  DLXERN,0,I .        CLEAR ERROR FLAG   ZI
)@@G@@@D@@@D         LOAD  A14,0,I .           SET TOPKEN = NULL  @F@@@D      ZJ
)@@G@@   LOAD  F,DGOCDF .          SET FLAG REG TO CARD CONTENTS  @D@@@D      ZK
)@@G@@   GOTO  LXIN1 .             -> NORMAL NEW CARD @B@@@E/ .      LXPARA - ZL
)@@G@@AUTOMATIC PARAGRAPHER   @[@@@E.     @[@@@E.     @^@@@E.        X3= INPUTZM
)@@G@@ IMAGE@A@@@E.        A7= NMBER OF WORDS OF INPUT@B@@@E.        X11->MAX ZN
)@@G@@SIZE OF FIELD,START LOC @[@@@E.     @B@@@E.        FIND NUMBER OF NON-BLZO
)@@G@@ANK WORDS   @[@@@E.     @#@@@ELXPARA   LLOC .   @^@@@E         USING WORZP
)@@G@@D,X3 .@^@@@E         SETGC 4,W1     @D@@@E         LOAD  X2,W1H2,X11 .  ZQ
)@@G@@     PTR TO OUTPUT FIELD@^@@@E         USING WORD,X2  @^@@@E         SETZR
)@@G@@PC 4,W1     @^@@@E         USING WORD,X1  @^@@@E         LOAD  A8,KBLANKZS
)@@G@@@#@@@ELXPAR2   LABEL .  @E@@@E         IF    A8,NE,W1 THEN,LXPAR1 . -. SZT
)@@G@@KIP BLANK WORDS   @^@@@E         ADD   X1,1,I . @D@@@E         LOOP  A7,ZU
)@@G@@LXPAR2 .         ->TRY NEXT WORD    @E@@@E         ADD  A7,1,I .        ZV
)@@G@@      SET 0 WORDS TO MOVE     @F@@@E         LJMP   2 .                 ZW
)@@G@@->BLANK WORD, DO NORMAL THING @#@@@ELXPAR1   LABEL .  @D@@@E         LOAZX
)@@G@@D  A8,DSADPA .         GET WORDS TO INDENT@^@@@E         LOAD  A3,A8 .  ZY
)@@G@@@E@@@E         ADD   A3,A7 .             GET RIGHTMOST MARGIN     @^@@@EZZ
)@@G@@         USING WORD,X11 @C@@@E         IF    A3,LT,W1H1 THEN,LXPAR3 . ->AA
)@@G@@ OK   @D@@@E         LOAD  A8,W1H1 .           TOO LONG, MOVE LEFT@E@@@EAB
)@@G@@         SUB   A8,A7 .             ADJUST FOR STRNG LENGTH  @#@@@ELXPAR3AC
)@@G@@   LABEL .  @C@@@E         ADD   X2,A8 .             SKIP BLANKS  @E@@@EAD
)@@G@@         SLB   A7,2 .              NUMBER OF CHARS TO MOVE  @^@@@E      AE
)@@G@@   SETL  A7 .     @#@@@ELXPAR5   LABEL .  @E@@@E         GETC .         AF
)@@G@@           GET FIRSST NON-BLANK     @B@@@E         IF    A8,NE,' ',I THEAG
)@@G@@N,LXPAR7 .  @ @@@E         LOOP A7,LXPAR5 .     @#@@@ELXPAR4   LABEL .  AH
)@@G@@@#@@@E         GETC .   @#@@@ELXPAR7   LABEL .  @#@@@E         PUTC .   AI
)@@G@@@ @@@E         LOOP A7,LXPAR4 .     @F@@@E         LJMP 1 .             AJ
)@@G@@                          ->RETURN  @B@@@D/.       LEXICAL STATEMENT STAAK
)@@G@@RT ROUTINE  @C@@@D.        CALLED AT THE START OF EACH STATEMENT  @#@@@DAL
)@@G@@LXPRND*  LABEL .  @D@@@D         MOVE  DLXPFG,0,I .        FORCE ERR  PRAM
)@@G@@INTING@#@@@DLXSTST*  LOCAL .  @G@@@D         IF    DLXPFG,NZERO THEN,LXSAN
)@@G@@TPH .   -> PUSH STACK IF ERRORS PRES@#@@@DLXSTP1   LABEL .  @E@@@D      AO
)@@G@@   LOAD  A7,DLXEST .         GET CURRENT ERROR STACK  @G@@@D         IF AP
)@@G@@   A7,EQ,0,I THEN,LXSTST3 .     -> EMPTY STACK, DON'T PRINT @E@@@D      AQ
)@@G@@   LOADA X4,DLXESE-2 .       POINT TO TOP OF STACK    @G@@@D         SETAR
)@@G@@L  A7 .                LOOP FOR NUMBER OF ENTRIES IN STACK  @#@@@DLXSTSTAS
)@@G@@1  LABEL .  @^@@@D         USING WORD,X4 .@F@E@D         MOVE  DLXRVP,W1AT
)@@G@@H1 .       SET REVERSE CALL WITH ST NUMBER@^@E@D         ADD   X4,1,I . AU
)@@G@@@F@@@D         STORE X4,DLXRVE .         POINT TO ERROR STACK ENTRY     AV
)@@G@@@D@@@D         LINK  PLRVSE .            REVERSE STATEMENT  @D@E@D      AW
)@@G@@   SUB   X4,3,I .            BACKUP ONE ENTRY   @D@@@E         SUB   X4,AX
)@@G@@2,I .            BACKUP ONE ENTRY   @E@@@D         LOOP  A7,LXSTST1 .   AY
)@@G@@     -> LOOP FOR NEXT ENTRY   @#@@@DLXSTST3  LABEL .  @C@@@D         MOVAZ
)@@G@@E  DLXEST,0,I .        RESET COUNTER@D@@@D         LOAD  A7,DLXPFG .    BA
)@@G@@     GET PRINT FLAG     @F@@@D         IF    A7,NE,2,I THEN,LXSTST4 .   BB
)@@G@@  -> STACK OVERFLOW     @ @@@D         MOVE  DLXPFG,1,I .   @C@@@D      BC
)@@G@@   GOTO  LXSTPH .            -> PUSH STACK@#@@@DLXSTST4  LABEL .  @E@E@DBD
)@@G@@         MOVE  DLXRVP,DSALSP .     SET CURRENT STMT START   @F@@@E      BE
)@@G@@   MOVE  DSAESK-1+FH1,DSALSP .     SET CURRENT STMT START   @A@@@E      BF
)@@G@@   MOVE  DSAESK-1+FH2,DSAECT .@D@E@D         MOVE  DLXRVE,DSAESK,I .   CBG
)@@G@@URRENT ERROR LIST @E@@@E         MOVE  DLXRVE,DSAESK-1,I .   CURRENT ERRBH
)@@G@@OR LIST     @B@@@D         LINK  PLRVSE .            REVERSE@G@@@D      BI
)@@G@@   LOAD  X4,DSALSP .         SEE IF SUPPLIED STATEMENT NUMBER     @^@@@DBJ
)@@G@@         USING WORD,X4 .@D@@@D         IF    0400,ON,W1Q2 THEN,JMP . -> BK
)@@G@@YES, QUIT   @E@@@D         MOVE  DLXPFG,1,I .        SET ST NUMBER SUPPLBL
)@@G@@IED   @G@@@D         LOAD A7,DSADCN .          CONVERT BLOCK NUMBER TO FBM
)@@G@@IELDATA     @^@@@D         CVE   A7,R .   @ @@@D         STORE A4,DSALCNBN
)@@G@@ .    @D@@@D         LOAD  A7,DSADBN .         CONVERT BLOCK DEPTH@^@@@DBO
)@@G@@         CVE   A7,R .   @ @@@D         STORE A4,DSALBN .    @D@@@D      BP
)@@G@@   LOAD  A4,KBLANK .       ASSUME NO DO LEVEL   @C@@@D         LOAD  A7,BQ
)@@G@@DSADDN .         DO NEST LEVEL@C@@@D         IF    A7,EQ,0,I THEN,LXSTX4BR
)@@G@@ . -> NO DO @^@@@D         CVE   A7,R .   @#@@@DLXSTX4   LABEL .  @ @@@DBS
)@@G@@         STORE A4,DSALDN .    @D@@@D         LOAD  A7,DSADSN .         SBT
)@@G@@TATEMENT NUMBER   @^@@@D         CVE   A7,R .   @ @@@D         STORE A4,BU
)@@G@@DSALSN .    @C@@@E         LOAD  A7,DSADBN .         BLOCK DEPTH  @E@@@EBV
)@@G@@         ADD   A7,DSADDN .         DO DEPTH (TOTAL DEPTH)   @E@@@E      BW
)@@G@@   STORE A7,DSADPA .         PARAGRAPHER INDENTATION  @D@@@DLXSTOT   LABBX
)@@G@@EL .                   RETURN TO SYNA     @#@@@D         JMP .    @F@@@DBY
)@@G@@LXSTPH   LABEL .                   PUSH THIS STATEMENT ON STATE   @D@@@DBZ
)@@G@@         LOAD  A7,DLXEST .         LEVEL OF ERROR     @B@@@D         ADDCA
)@@G@@   A7,1,I .            +1 .   @D@E@D         LOADA X4,DSAESK .         GCB
)@@G@@ET NEW STCK ENTRY @^@E@D         USING WORD,X4 .@E@E@D         IF    W1SCC
)@@G@@1,ZERO THEN,JMP . -> NO ERRORS, RETURN    @E@@@E         IF    DSAECN,ZECD
)@@G@@RO THEN,JMP . -> NO ERRORS, RETURN  @F@@@D         IF    A7,GE,4,I THEN,CE
)@@G@@LXSTPP . ->STACK OVERFLOW, POP FIRST@D@@@D         STORE A7,DLXEST .    CF
)@@G@@     SET NEW STACK LEVEL@C@@@D         SLB   A7,1 .              MPY BY CG
)@@G@@-2    @^@@@D         LOADN A7,A7 .  @D@@@D         ADD   A7,DLXESE,I .  CH
)@@G@@     POINT TO ENTRY     @^@@@D         LOAD  X3,A7 .  @^@@@D         USICI
)@@G@@NG WORD,X3 .@E@@@D         MOVE  W1H1,DSALSP .       SET STATEMENT POINTCJ
)@@G@@ER    @C@@@E         MOVE  W1H2,DSAECT .       ERROR COUNT  @ @@@E      CK
)@@G@@   MOVE  DSAECT,0,I .   @D@@@D         MOVE  W1+1,DSAESK .       MOVE ERCL
)@@G@@ROR STACK   @C@@@D         GOTO  LXSTOT              . -> RETURN  @#@@@DCM
)@@G@@LXSTPP   LABEL .  @E@@@D         MOVE  DLXPFG,2,I .        SET TO OVERFLCN
)@@G@@OW STATUS   @C@@@D         GOTO  LXSTP1 .            -> POP STACK @E@@@DCO
)@@G@@LXER25   EQU   23 .                COLUMN 1 USED ILLEGALLY  @E@@@DLXER02CP
)@@G@@   EQU   11 .                NAME > 31 CHARACTERS     @D@@@DLXER04   EQUCQ
)@@G@@   12 .                ILLEGAL SYMBOL     @E@@@DLXER11   EQU   13 .     CR
)@@G@@           COMMENT AT END OF CARD   @F@@@DLXER21   EQU   14 .           CS
)@@G@@     NUMBER ACROSS CARD BOUNDARY    @F@@@DLXER05   EQU   15 .           CT
)@@G@@     STRING ACROSS CARD BOUNDARY    @E@@@DLXER03   EQU   16 .           CU
)@@G@@     TABLE OVERFLOW - HASH    @F@@@DLXER20   EQU   17 .                2CV
)@@G@@ DECIMAL POINTS IN NUMBER     @F@@@DLXER22   EQU   18 .                TCW
)@@G@@OO MANY DIGITS IN EXPONENT    @D@@@DLXER23   EQU   19 .                ICX
)@@G@@LLEGAL EXPONENT   @E@@@DLXER24   EQU   20 .                ILLEGAL BINARCY
)@@G@@Y NUMBER    @E@@@DLXER26   EQU   21 .                ILLEGAL SYMBOL IN NCZ
)@@G@@UMBER @^@@@DERLXCT   EQU   22 .     @^@@@D/.       SD MANAGER     @D@@@DDA
)@@G@@SDNINT   EQU   ARSTLK+1 .          FIRST ACT REC PTR  @#@@@D.        ENTDB
)@@G@@RY    @A@@@D.        SDXVE - EXPLICIT VARIABLE  @A@@@D.        SDXVI - IDC
)@@G@@MPLICIT VARIABLE  @A@@@D.        SDXBE - EXPLICIT BLOCK     @[@@@D.     DD
)@@G@@@C@@@D.        ROUTINES USE REGS X2,X3,X4 AND A7, A8  @[@@@D.     @ @@@DDE
)@@G@@.        BLOCK SD ROUTINE     @[@@@D.     @G@@@D.        IMPLICIT CALL .DF
)@@G@@ IF THERE IS AN EXPLICIT SD FOR THIS VARIABLE   @G@@@D.        IN THIS BDG
)@@G@@LOCK, THEN NONE IS CREATED. IF NOT ONE IS CREATED IN  @E@@@D.        BLODH
)@@G@@CK LEVEL 1, UNLESS IT ALREADY EXISTS THERE.     @#@@@DSDVXI*   LABEL .  DI
)@@G@@@E@@@D         GOTO  SDVXIA .            CALL 0 IMPLICIT VARIABLE @F@@@DDJ
)@@G@@         GOTO  SDXVC .             CALL 1 CONTEXTUAL VARIABEL     @E@@@DDK
)@@G@@         GOTO  SDXVE .             CALL 2 EXPLICIT VARIABLE @C@@@D      DL
)@@G@@   GOTO  0,X11 .             CALL 3, NO OP@B@@@DSDVXIA   LOCAL .        DM
)@@G@@           ENTRY  @C@@@D         LINK  SDXSTT .            INITIALIZE   DN
)@@G@@@G@@@D         IF    A15,EQ,ACLPAR,I THEN,JMP . -> ARRAY, NO IMPLICIT CADO
)@@G@@LL    @ @@@D         USING SDBCD,X3 .     @E@@@D         IF    LXBIF,SAMDP
)@@G@@E,SDBCLS THEN,JMP . -> BIF, RETURN  @#@@@DSDXVO    LABEL .  @E@@@D      DQ
)@@G@@   LOAD  X5,DSBKSD .         GET CURRENT BLOCK SD     @D@@@D         LINDR
)@@G@@K  SDXTB .             IS SD IN THIS BLOCK@F@@@D         GOTO  SDXVI1 . DS
)@@G@@           -> NO, TRY BLOCK LEVEL 1 SD    @D@@@D         GOTO  SDXRTN . DT
)@@G@@           -> FOUND SD, RETURN@#@@@DSDXVI1   LABEL .  @E@@@D         LOADU
)@@G@@D  X5,DSAB1S .         GET BLOCK LEVEL 1 SD     @D@@@D         LINK  SDXDV
)@@G@@TB .             IS SD IN THIS BLOCK@D@@@D         GOTO  SDXVNW .       DW
)@@G@@     -> NEED NEW SD     @D@@@D         GOTO  SDXRTN .            -> RETUDX
)@@G@@RN, FOUND SD@#@@@DSDXBE*   LOCAL .  @F@@@D         LINK  SDXCNT .       DY
)@@G@@     UP SD COUNT OF SD'S VREATED    @C@@@D         LOAD  A7,SDLNTH,I .  DZ
)@@G@@     ALLOCATE SD  @^@@@D         LINK  PLALC .  @ @@@D         USING SDSEA
)@@G@@ECT,X3 .    @E@@@D         MOVE  SDNMPM,SDNINT,I .   INITIAL ADDR FOR ACEB
)@@G@@T REC @D@@@D         MOVE  SDCLS4,SDBCSD,I .   SET SD TYPE IN SD  @E@@@DEC
)@@G@@         LOAD  A6,DSBKSD .         GET CURRENT BLOCK SD     @D@@@D      ED
)@@G@@   STSDP A6,SDBKLK .         SET LINK TO IT     @C@@@D         GOTO  SDXEE
)@@G@@RTN .            -> RETURN    @[@@@E.     @[@@@E.     @B@@@E.         CREF
)@@G@@EATE SD (X3) IN CURRENT BLOCK)@#@@@ESDXB0*   LOCAL .  @ @@@E         MOVEG
)@@G@@E  DSASD1,0,I .   @ @@@E         LOAD  X5,DSBKSD .    @A@@@E         GOTEH
)@@G@@O  SDXVNW .    CREATE SD@[@@@D.     @B@@@D.        CREATE SD FOR EXPLICIEI
)@@G@@T DECLARE   @D@@@DSDXVE*   LOCAL .                   EXPLICIT VARIABEL  EJ
)@@G@@@^@@@D         LINK  SDXSTT . @E@@@D         MOVE  DSASD1,1,I .        SEK
)@@G@@ET EXPLICIT SD TYPE     @E@@@D         LOAD  X5,DSBKSD .         GET BLOEL
)@@G@@CK SD POINTER     @E@@@D         IF    DSAU4,NZERO THEN,SDXVNW .    -> FEM
)@@G@@ORCED CREATE@#@@@DSDXVE1   LABEL .  @D@@@D         LINK  SDXTB .        EN
)@@G@@     IS THERE SD ALREADY@D@@@D         GOTO  SDXVNW .            -> NEEDEO
)@@G@@ NEW ONE    @E@@@D         MOVE  DSASD0,1,I .        SET SD ALREADY EXISEP
)@@G@@TED   @#@@@DSDXRS2   LABEL .  @C@@@D         STSDP X4,DLXID .          SEQ
)@@G@@ET PTR TO SD@#@@@DSDXRTN   LABEL .  @#@@@D         JMP .    @#@@@DSDXVNWER
)@@G@@   LABEL .  @F@@@D         LINK  SDXNEW .            CREATE SD , KEEP CHES
)@@G@@AIN GOING   @E@@@D         LOAD  A7,DSADSN .         GET STATEMENT NUMBEET
)@@G@@R     @ @@@D         USING SDSECT,X4 .    @D@@@D         STORE A7,SDDCNMEU
)@@G@@ .         SET SD PTR IN DEC  @E@@@D         IF    DSASD1,ZERO THEN,JMP EV
)@@G@@ELSE,SDXRS2 . -> RETURN @E@@@DSDXVC    LOCAL .                   CONTEXTEW
)@@G@@UAL DECLARATION   @C@@@D         LINK  SDXSTT .            INITIALIZE   EX
)@@G@@@ @@@D         USING SDBCD,X3 .     @F@@@D         IF    LXBIF,NSAME,SDBEY
)@@G@@CLS THEN,SDXVO . -> NOT BUILTIN FCN @D@@@D         BAC   ACCLCK,SDXVC0  EZ
)@@G@@      . -> CLOCK BIF    @C@@@F         BAC  ACOCBF,SDXVC0 .         -> OFA
)@@G@@NCHAR @D@@@F         BAC  ACOSBF,SDXVC0 .         -> ONSOURCE     @E@@@DFB
)@@G@@         IF    A15,NE,ACLPAR,I THEN,SDXVC1 . -> CREATE SD   @#@@@DSDXVC0FC
)@@G@@   LABEL .  @D@@@D         GETPL X4 .                GET GARBAGE SD AREAFD
)@@G@@@^@@@D         ADD   X4,25,I .@^@@@D         USING WORD,X4 .@E@@@D      FE
)@@G@@   MOVE  W1,KKD0,2 .         CLEAR BEGINNING AREA     @C@@@D         LOAFF
)@@G@@D  A7,DLXID .          SET ID PTR   @ @@@D         STORE A7,SDBCHI,X4 . FG
)@@G@@@C@@@D         GOTO  SDXRTN .            -> RETURN    @#@@@DSDXVC1   LABFH
)@@G@@EL .  @^@@@D         USING WORD,X3 .@E@@@D         LOAD  A7,W1 .        FI
)@@G@@ ET FIRST 3 CHARS OF NAME     @^@@@D         SRB   A7,9 .   @^@@@D      FJ
)@@G@@   SLB   A7,9 .   @E@@@D         IF    A7,EQ,SDSYS THEN,SDXVC0 . -> SYSIFK
)@@G@@N OR PRINT  @F@@@D         LOAD  X5,DSBKSD .          SEE IF ANY DCL'S FFL
)@@G@@OR BIF NAME @#@@@DSDXVC3   LABEL .  @E@@@D         LINK  SDXTB .        FM
)@@G@@      ANY DCL AT THIS LEVEL   @B@@@D         GOTO  SDXVC2 .             FN
)@@G@@-> NO @D@@@D         GOTO  SDXRTN .             -> YUP RETURN     @#@@@DFO
)@@G@@SDXVC2   LABEL .  @D@@@D         LOAD  X5,SDBKLK,X5 .        GO BACK ONEFP
)@@G@@ LEVEL@ @@@D         USING SDSECT,X5 .    @G@@@D         IF    SDBKDP,NZFQ
)@@G@@ERO THEN,SDXVC3 . NOT BLOACK 1, TRY THIS BLOCK  @E@@@D         LOAD  X5,FR
)@@G@@DSAB1S .           DCL VARIABLE AT LEVEL 1@C@@@D         GOTO  SDXVNW . FS
)@@G@@             GET NEW DCL@[@@@D.     @E@@@D.        THIS ROUTINE MOVES SDFT
)@@G@@ FROM ONE BLOCK TO ANOTHER.   @D@@@D.        X5=SD FOR BLOCK TO GET SD XFU
)@@G@@3= SD TO BE MOCED @#@@@DSDRSN*   LOCAL .  @ @@@D         USING SDSECT,X3FV
)@@G@@ .    @D@@@D         LSDP  X4,SDBKLK .         GET BLOCK SD FOR SD@#@@@DFW
)@@G@@SDRXL1   LABEL .  @ @@@D         USING SDSECT,X4 .    @E@@@D         LSDFX
)@@G@@P  A7,SDNXDC .         GET NEXT DEC IN BLOCK    @G@@@D         IF    A7,FY
)@@G@@EQ,X3 THEN,SDRXL2 . -> FOUND SD LOOKING FOR IN BLOCK  @E@@@D         LOAFZ
)@@G@@D  X4,A7 .             TRY NEXT SD IN BLOCK     @^@@@D         GOTO  SDRGA
)@@G@@XL1 . @#@@@DSDRXL2   LABEL .  @ @@@D         USING SDSECT,X3 .    @E@@@DGB
)@@G@@         LOAD  A7,SDNXDC .         GET PTR AFTER WANTED SD  @ @@@D      GC
)@@G@@   USING SDSECT,X4 .    @E@@@D         STORE A7,SDNXDC .         UNHOOK GD
)@@G@@SD FROM BLOCK     @ @@@D         USING SDSECT,X3 .    @B@@@D         LOAGE
)@@G@@D  A8,X3 .             SAVE SD@D@@@D         LSDP  X3,SDBCHI .         PGF
)@@G@@OINT TO BCD STRING@G@@@D         LINK  SDXTB .             IS SD WITH THGG
)@@G@@IS BCD IN THIS VLOCK    @E@@@D         GOTO  SDRXL3 .            -> NOPEGH
)@@G@@, ADD ENTRY HERE  @E@@@D         GOTO  SDXRTN .            -> RETURN FOUGI
)@@G@@ND ENTRY    @#@@@DSDRXL3   LABEL .  @D@@@D         LOAD  X4,A8 .        GJ
)@@G@@     RESET SD POINTER   @D@@@D         LINK  SDXCHN .            LINK TOGK
)@@G@@ BLOCK SHAIN@B@@@D         JMP   1 .                 RETURN @[@@@D.     GL
)@@G@@@ @@@D.        SD SERVICE ROUTINES  @#@@@DSDXCNT   LLOC .   @C@@@D      GM
)@@G@@   LOAD  A7,DSDNOS .         UP SD COUNT  @^@@@D         ADD   A7,1,I . GN
)@@G@@@ @@@D         STORE A7,DSDNOS .    @C@@@D         LJMP .               GO
)@@G@@     -> RETURN    @A@@@D.        SET X3= A(BCD STRING ENTRY)@#@@@DSDXSTTGP
)@@G@@   LLOC .   @C@@@D         MOVE  DSASDF,0,I .        RESET FLAGS  @D@@@DGQ
)@@G@@         LSDP  X3,DLXID .          POINT TO SD ENTRY  @ @@@D         USIGR
)@@G@@NG SDBCD,X3 .     @D@@@D         IF    SDBCSD,ON,SDBCL4 THEN,JMP . SD, RGS
)@@G@@ETURN @D@@@D         LOAD  X5,SDBCUS .         UP USAGE COUNT     @^@@@DGT
)@@G@@         ADD   X5,1,I . @ @@@D         STORE X5,SDBCUS .    @D@@@D      GU
)@@G@@   IF    SDBCON,ON,SDBCL4 THEN,JMP . ->CONSTANT @C@@@D         LJMP .   GV
)@@G@@                 -> RETRN     @[@@@D.     @G@@@D.        SEE IF SD EXISTGW
)@@G@@S FOR BCD POINTED TO BY X3 IN BLOCK POINTED TO B@E@@@D.        BY X5. IFGX
)@@G@@ ONE, X4 POINTS TO IT AND EXIT IS 1,X11 . @#@@@DSDXTB    LLOC .   @C@@@DGY
)@@G@@         LOAD  A7,X5 .             SAVE PTR     @ @@@D         USING SDBGZ
)@@G@@CD,X3 .     @E@@@D         IF    SDBCLK,NZERO THEN,SDXTB2 .   -> DEC EXIHA
)@@G@@STS   @C@@@D         LJMP .                    -> RETURN    @#@@@DSDXTB2HB
)@@G@@   LABEL .  @C@@@D         LOAD  X4,X3 .             POINT TO BCD @ @@@DHC
)@@G@@         USING SDBCD,X4 .     @ @@@D         USING SDSECT,X4 .    @#@@@DHD
)@@G@@SDXTB3   LABEL .  @C@@@D         LOAD  X4,SDBCLK .         GET NEXT SD  HE
)@@G@@@D@@@D         IF    A7,EQ,SDBKLK THEN,LJMP1 . -> SAME BK SD@E@@@D      HF
)@@G@@   IF    SDBCLK,NZERO THEN,SDXTB3 .   CHECK NEXT SD   @D@@@D         LJMHG
)@@G@@P .                    -> RETURN, FAIL    @[@@@D.     @G@@@D.        CREHH
)@@G@@ATE AN SD FOR BCD POINTED TO BY X3, IN BLOCK X5. ADDR IN X4 @#@@@DSDXNEWHI
)@@G@@   LOCAL .  @D@@@D         LINK  SDXCNT .            UP SD COUNT BY 1   HJ
)@@G@@@C@@@D         LOAD  A8,X3 .             SAVE BCD PTR @F@@@D         LOAHK
)@@G@@D  A7,SDLNTH,I .       GET WORDS TO ALLOCATE S FOR SD @C@@@D         LINHL
)@@G@@K  PLALC .             ALLOCATE SD  @ @@@D         USING SDSECT,X4 .    HM
)@@G@@@ @@@D         USING SDBCD,X3 .     @D@@@D         LOAD  X4,X3 .        HN
)@@G@@     SET REGS FOR RETURN@^@@@D         LOAD  X3,A8 .  @C@@@D         SETHO
)@@G@@   SDBCSD,ON,SDCLS4 .  SET SD FLAG  @D@@@D         MOVE  SDBDLK,SDBCLK .HP
)@@G@@     MOVE DEC CHAIN     @E@@@D         STSDP X4,SDBCLK .         ADD NEWHQ
)@@G@@ HEAD OF CHAIN    @D@@@D         STSDP X3,SDBCHI .         SET BCD POINTHR
)@@G@@ER    @F@@@D         LINK  SDXCHN .            ADD TO CHAIN IN THIS BLOCHS
)@@G@@K     @D@@@D         LOADA X3,SDXFBM .         SET FIXED MODE     @F@@@DHT
)@@G@@         MOVE  SDRTC,1,I .         SET FIXED VARIABEL = 1 WORD    @#@@@DHU
)@@G@@SDXNED   LABEL .  @^@@@D         USING WORD,X3  @E@@@D         MOVE  SD2HV
)@@G@@SP,W1H1 .        SET SCALE AND PRECISIOUN @E@@@D         MOVE  SDCLSS,W1HW
)@@G@@H2 .       SET CLS0 AND CLS1 BYTES  @B@@@D         JMP   .              HX
)@@G@@     RETURN @F@@@D.        KEEPS KEXT DEC CHAIN GOING FOR SD IN X4 AND BHY
)@@G@@LOCK IN X2  @#@@@DSDXCHN   LLOC .   @ @@@D         USING SDSECT,X5 .    HZ
)@@G@@@E@@@D         LOAD  A7,SDNXDC .         MOVE NEXT DECLARATION    @ @@@DIA
)@@G@@         STSDP X4,SDNXDC .    @ @@@D         USING SDSECT,X4 .    @ @@@DIB
)@@G@@         STORE A7,SDNXDC .    @D@@@D         STORE X5,SDBKLK .         SIC
)@@G@@ET BLOCK LINK     @C@@@D         LJMP .                    -> RETURN    ID
)@@G@@@#@@@DSDSPLY*  LOCAL .  @C@@@D         STORE X2,DSPX2 .          SAVE REIE
)@@G@@GS    @ @@@D         STORE A2,DSPA2 .     @D@@@D         LOAD  A7,DSDPNMIF
)@@G@@ .         UP LABEL $ NUMBER  @^@@@D         ADD   A7,1,I . @ @@@D      IG
)@@G@@   STORE A7,DSDPNM .    @D@@@D         CVE   A7,R .              CREATE IH
)@@G@@LABEL NAME  @C@@@D         LSSC   A4,9 .              SET NNNB    @D@@@DII
)@@G@@         STORE A4,DLXCON+1 .         SETUP XXXNNN .   @B@@@D         LOAIJ
)@@G@@D  A7,'$$',I .         GET $$V@^@@@D         SLB   A7,9 .   @D@@@D      IK
)@@G@@   ADD   A7,DSAU3 .          GET $$V OR $$E     @D@@@D         SLB   A7,IL
)@@G@@9 .               SETUP $$VV OR $$EE@ @@@D         ADD   A7,DSAU3 .     IM
)@@G@@@ @@@D         STORE A7,DLXCON .    @D@@@D         LOAD  A9,7,I .       IN
)@@G@@     SET SIZE OF ENTRY  @C@@@D         LINK  LXSRCH .            SEARCH IO
)@@G@@FOR SD@C@@@D         MOVE  DSPID,DLXID .       SAVE DLXID   @D@@@D      IP
)@@G@@   STORE X2,DLXID .          SET NEW ID PTR     @C@@@D         LINK  SDXIQ
)@@G@@VE .             CREATE SD    @C@@@D         LSDP  X3,DLXID .          SIR
)@@G@@ET ORIG ID  @ @@@D         MOVE  DLXID,DSPID .  @ @@@D         LOAD  X2,IS
)@@G@@DSPX2 .     @ @@@D         LOAD  A2,DSPA2 .     @#@@@D         JMP .    IT
)@@G@@@#@@@DSDLEXI   CSECT 3  @#@@@DSDSYS    SFW   0 .@ @@@D         +'S','Y',IU
)@@G@@'S',0 .     @#@@@DSDXFBM   SFW   0 .@A@@@DFILL(1)  SQ    0 .            IV
)@@G@@     Q@A@@@DFILL(1)  SQ    35 .                P@C@@@DFILL(1)  SH    (SDIW
)@@G@@0AUT+SD0ART)*512+SDDCBN .     @#@@@D         CEND .   @#@@@D         ENDIX
)@@G@@ .    ___@@D         USING SDSECT,X3 .    @E@@@D         LOAD  A7,SDNXDCIY
)@@G@@*[S@@@*SDFF*@#@@@4         AXR$ .   @C@@@5.   COPYRIGHT 1976 BY THE UNIVIZ
)@@G@@ERSITY OF MARYLAND@[@@@5.     @D@@@5.   QUESTIONS CONCERNING THIS SHOULDJA
)@@G@@ BE DIRECTED TO:  @[@@@5.     @ @@@5.        MARVIN V. ZELKOWITZ  @B@@@5JB
)@@G@@.        DEPARTMENT OF COMPUTER SCIENCE   @A@@@5.        UNIVERSITY OF MJC
)@@G@@ARYLAND     @B@@@5.        COLLEGE PARK, MARYLAND 20742     @[@@@5.     JD
)@@G@@@G@@@5.        PERMISSION TO USE THESE LISTINGS AND THE COMPUTER PROGRAMJE
)@@G@@S THEY@E@@@5.   REPRESENT IS GRANTED UNDER THE FOLLOWING CONDITIONS:    JF
)@@G@@@[@@@5.     @G@@@5.        1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS JG
)@@G@@REPRESENTED BY    @G@@@5.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OJH
)@@G@@R UNIVERSITY OF MARYLAND@E@@@5.   PL/1 COMPILER REMAINS ASSOCIATED WITH JI
)@@G@@THESE PROGRAMS.   @[@@@5.     @F@@@5.        2. MODIFICATIONS MAY BE MADJJ
)@@G@@E TO THE LISTINGS PROVIDED:   @[@@@5.     @G@@@5.        (A) ANY RESULTIJK
)@@G@@NG PROGRAM, OR REPORT, PAPER OR DOCUMENTATION   @G@@@5.        DESCRIBINJL
)@@G@@G SUCH PROGRAM WILL CLEARLY INDICATE THAT THE PROGRAM @E@@@5.        IS JM
)@@G@@A DIALECT OF PLUM OR IS DERIVED FROM PLUM, AND  @[@@@5.     @G@@@5.     JN
)@@G@@   (B) ALL SUCH MODIFICATIONS, OTHER THAN TRIVIAL CORRECTIONS     @F@@@5JO
)@@G@@.        OF ERRORS IN THE SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@@@5JP
)@@G@@.        A BRIEF DESCRIPTION OF THE FEATURE ADDED SHALL BE SUBMITTED    JQ
)@@G@@@C@@@5.        TO THE UNIVERSITY OF MARYLAND, AND     @[@@@5.     @F@@@5JR
)@@G@@.        (C) NO PROGRAMS DERIVED FROM THESE LISTINGS SHALL BE SOLD@G@@@5JS
)@@G@@.        WITHOUT WRITTEN APPROVAL FROM THE UNIVERSITY OF MARYLAND, AND  JT
)@@G@@@[@@@5.     @F@@@5.        (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTJU
)@@G@@ED TO OTHER @G@@@5.        LOCATIONS PROVIDED THAT SUCH TRANSMITTALS CLEJV
)@@G@@ARLY INDICATE     @G@@@5.        WHETHER THE PROGRAMS ARE EXACT COPIES OJW
)@@G@@F THE UNIVERSITY OF     @E@@@5.        MARYLAND PLUM COMPILER OR ARE MODJX
)@@G@@IFICATIONS TO IT. @[@@@5.     @G@@@5.        3. THESE CONDITIONS ONLY APJY
)@@G@@PLY TO THE PLUM COMPILER ITSELF,    @F@@@5.   AND ARE NOT MEANT TO APPLYJZ
)@@G@@ TO ANY PROGRAM WRITTEN USING PLUM. @E@@@5.   THE PURPOSE OF THESE CONDIKA
)@@G@@TIONS IS TO ALLOW ANY USER TO @F@@@5.   EXPERIMENT WITH THE COMPILER AS KB
)@@G@@LONG AS THE RESULTING PRODUCT @G@@@5.   IS NOT SOLD AND AS LONG AS IT ISKC
)@@G@@ KNOWN THAT THE PRODUCT DEVELOPED   @#@@@5.   FROM PLUM.    @[@@@5.     KD
)@@G@@@[@@@5.     @[@@@5.     @[@@@5.     @[@@@5.     @[@@@5/.    @#@@@4      KE
)@@G@@   DCLRG .  @#@@@4         PLSD .   @#@@@4         PLAC .   @#@@@4      KF
)@@G@@   PLWORD . @#@@@4         PLSYDS . @#@@@4         UNLIST . @]@@@4@ADD PKG
)@@G@@LTVDS @#@@@4         LIST .   @]@@@4@ADD PLSAW  @#@@@4         CEND .   KH
)@@G@@@D@@@4DECL     CSECT 3 .                 DECLARE DRIVER     @D@5@4SDENTMKI
)@@G@@   SFW   0 .                 ENTRY SACK ENTRY   @D@@@5SDENTM   SFW   0 .KJ
)@@G@@                 ENTRY STACK ENTRY  @^@@@4         +010000017000 .@D@@@4KK
)@@G@@DECTBL   SFW   0 .                 ATTRIBUTE TABLE    @D@@@4DEBTBL   SFWKL
)@@G@@   0 .                 STRUCTURE TABLE    @E@@@4FILL(1)  SAC   DECINS,DAKM
)@@G@@PRNT .     NO STRUCTURE   PRINT     @E@@@4FILL(1)  SAC   DECIDD,DAAUTO .KN
)@@G@@     DAD            AUTOMATIC @E@@@4FILL(1)  SAC   DECISN,DABIN .      SKO
)@@G@@ON            BINARY    @D@@@4FILL(1)  SAC   DECIBR,DABIT .      BROTHERKP
)@@G@@        BIT @E@@@4FILL(1)  SAC   DECIFS,DABLTN.      FACT SON       BUILKQ
)@@G@@TIN   @D@@@4FILL(1)  SAC   DECIFI,DACHAR .     FACT BROT INT. CHAR@E@@@4KR
)@@G@@FILL(1)  SAC   DECIFB,DACPLX .     FACT BROT      COMPLEX   @E@@@4DAIBEGKS
)@@G@@   SFW   0 .                 STATE BEGIN FOR INITIAL  @A@@@4.        STAKT
)@@G@@TE TABLE FOR INITIAL    @[@@@4.     @F@@@4.        1=)    2=(    3=,   4KU
)@@G@@=*    5=CONST,ID   6=SIGN   7=OTHER @[@@@4.     @E@@@4FILL(1)  SAC      KV
)@@G@@  DAINSA,DADEC  .               DECIMAL   @E@5@4FILL(1)  SAC        DAINKW
)@@G@@PF,DANY   .               ENTRY     @E@@@5FILL(1)  SAC        DAINPF,DAEKX
)@@G@@NTR .               ENTRY     @F@5@4.                   CHANGE DANY TO DKY
)@@G@@AENTR WHEN ENTRY IS WORKING   @[@5@4.     @[@5@4.     @[@5@4.     @[@5@4KZ
)@@G@@.     @F@@@4FILL(1)  SAC        DAINSA,DANY   .               EXT   (LATLA
)@@G@@ER)   @E@@@4FILL(1)  SAC        DAINPA,DAFIX .                FIXED     LB
)@@G@@@E@@@4FILL(1)  SAC        DAINPN,DAFLT .                FLOAT     @E@@@4LC
)@@G@@FILL(1)  SAC        DAINPS,DAINTL  .               INITIAL  @E@@@4FILL(1LD
)@@G@@)  SAC        DAINSA,DAINPT .               INPUT     @D@@@4DAITRM   SFWLE
)@@G@@   0 .                 TERMINAL STATE     @F@@@4FILL(1)  SAC        DAINLF
)@@G@@RP,DANY .                 INTERNAL (LATER)@E@@@4FILL(1)  SAC        DAINLG
)@@G@@SC,DALBL .                LABEL     @F@@@4FILL(1)  SAC        DAINPC,DANLH
)@@G@@PL .                LIKE - NO -     @E@@@4FILL(1)  SAC        DAINSC,DAOLI
)@@G@@UTP .               OUTPUT    @D@@@4FILL(1)  SAC        DAINSC,DAREAL . LJ
)@@G@@              REAL@E@@@4FILL(1)  SAC        DAINSC,DARTNS .             LK
)@@G@@  RETURNS   @F@@@4FILL(1)  SAC        DAINEX,DANPL .                SEQ LL
)@@G@@ - NO -     @D@@@4DAIITR   SFW   0 .                 ITERATION STATE    LM
)@@G@@@E@@@4FILL(1)  SAC        DAINIX,DASTAT .               STATIC    @E@@@4LN
)@@G@@FILL(1)  SAC        DAINAP,DASTRM .               STREAM    @E@@@4FILL(1LO
)@@G@@)  SAC        DAINIY,DAVAR  .               VARYING   @E@@@4FILL(1)  SACLP
)@@G@@        DAINPA,DABSD  .               BASED     @D@@@4FILL(1)  SAC      LQ
)@@G@@  DAINPQ,DACTL  .               CTL @D@@@4FILL(1)  SAC        DAINPS,DAPLR
)@@G@@TR  .               PTR @D@@@4FILL(1)  SAC        DAINSA,DAFILE .       LS
)@@G@@        FILE@E@@@5DAILLS   LABEL .                    INITIAL - TYPE OF LT
)@@G@@LIST  @E@5@4FILL(1)  SAC        0,DANVAR .                    NONVARYINGLU
)@@G@@@E@@@5FILL(1)  SAC        DAILIL,DANVAR .        OOPS   NONVARYING@D@5@4LV
)@@G@@FILL(1)  SAC        0,DANPL .                     AREA@D@@@5FILL(1)  SACLW
)@@G@@        DAILLB,DAAREA.         LABEL  AREA@E@5@4FILL(1)  SAC        0,DALX
)@@G@@NPL .                     REFER     @E@@@5FILL(1)  SAC        DAILST,DANLY
)@@G@@PL .         STRING REFER     @E@@@5FILL(1)  SAC        DAILIL,DAKEYD . LZ
)@@G@@       OOPS   KEYED     @E@@@5FILL(1)  SAC        DAILAR,DARECD .       MA
)@@G@@ ARITH  RECORD    @F@@@5FILL(1)  SAC        DAILIL,DANPL .         OOPS MB
)@@G@@  ENVIRONMENT     @E@@@5FILL(1)  SAC       DAILIL,DAOFST .         OOPS MC
)@@G@@  OFFSET    @F@@@5FILL(1)  SAC       DAILIL,DADIMS .         OOPS      DMD
)@@G@@IMENSION    @#@@@4         CEND .   @^@@@4.        STATE FLAGS    @A@@@4ME
)@@G@@DECLLP   EQU   0001 .              (@A@@@4DECLRP   EQU   0002 .         MF
)@@G@@     )@A@@@4DECLCM   EQU   0004 .              ,@B@@@4DECLDN   EQU   001MG
)@@G@@0 .              DEC NUM@B@@@4DECLID   EQU   0020 .              ID     MH
)@@G@@@B@@@4DECLAT   EQU   0040 .              ATTR   @B@@@4DECLRT   EQU   010MI
)@@G@@0 .              ),ATTR @B@@@4DECLDC   EQU   0200 .              DCL    MJ
)@@G@@@B@@@4DECLAP   EQU   0162 .              ATTR OK@C@@@4.        INITIAL SMK
)@@G@@TATE FLAGS (INITIAL ATTR)     @B@@@4DAICLB   EQU   0001 .              LML
)@@G@@ABEL  @C@@@4DAICNL    EQU   0006 .              NO LABEL    @B@@@4DAICSTMM
)@@G@@   EQU   0002 .              STRING @C@@@4DAICNS   EQU   0005 .         MN
)@@G@@     NO STRING    @C@@@4DAICAR   EQU   0004 .              ARITHMETIC   MO
)@@G@@@C@@@4DAICNA   EQU   0003 .              NO ARITHMETIC@B@@@4DAICSA   EQUMP
)@@G@@   0020 .              STATIC @B@5@4DAICSC   EQU   0040 .              SMQ
)@@G@@CALAR @C@@@5DAICSC   EQU   0040 .              NO SCALAR    @C@@@4DAIXTMMR
)@@G@@   EQU   0400 .              ITEM FOUND   @ @@@4.        STRUCTURED STATMS
)@@G@@E     @C@@@4DDENON   EQU   0 .                 NO STRUCTURE @C@@@4DDEDADMT
)@@G@@   EQU   1 .                 DAD-MAJOR    @C@@@4DDESON   EQU   2 .      MU
)@@G@@           SON-MEMBER   @D@@@4DDEBR    EQU   3 .                 BROTHERMV
)@@G@@- MEMBER    @C@@@4DDEFSN   EQU   4 .                 FACTORED SON @D@@@4MW
)@@G@@DDEFBI   EQU   5 .                 FACTORED BROT INIT @C@@@4DDEFBR   EQUMX
)@@G@@   6 .                 FACTORED BROT@[@@@4.     @^@@@4.        ATTRIBUTEMY
)@@G@@ FLAGS@[@@@4.     @B@@@4ST1BIN   EQU   1    .              BIN    @B@@@4MZ
)@@G@@ST1DEC   EQU   1    .              DEC    @B@@@4ST1VAR   EQU   2    .   NA
)@@G@@           VARY   @B@@@4ST1FFL   EQU   4    .              FIX FLT@B@@@4NB
)@@G@@ST1INT   EQU   010  .              INIT   @C@@@4ST1RCX   EQU   020  .   NC
)@@G@@           REAL CMPLX   @B@@@4ST1DIM   EQU   040  .              DIM    ND
)@@G@@@B@@@4ST1STG   EQU   0100 .              STRING @B@@@4ST1PRC   EQU   020NE
)@@G@@0 .              PREC   @C@@@4ST1NVR   EQU   0400 .              NONVARYNF
)@@G@@ING   @^@@@4.        PREDECESSOR    @^@@@4SN1BIN   EQU   0103 .   @^@@@4NG
)@@G@@SN1DEC   EQU   0103 .   @^@@@4SN1INT   EQU   0010 .   @^@@@4SN1STG   EQUNH
)@@G@@   0325 .   @^@@@4SN1VAR   EQU   0627 .   @^@@@4SN1FFL   EQU   0104 .   NI
)@@G@@@^@@@4SN1RCX   EQU   0120 .   @^@@@4SN1LBL   EQU   0727 .   @^@@@4SN1DATNJ
)@@G@@   EQU   0377 .   @^@@@5SN1DIM   EQU   0040 .   @^@@@5SN1PTR   EQU   072NK
)@@G@@7 .   @^@@@4.        STORAGE CTL    @B@@@4ST2PRI   EQU   0010 .         NL
)@@G@@     PRINT  @B@@@4ST2FLE   EQU   0001 .              FILE   @B@@@4ST2INPNM
)@@G@@   EQU   0002 .              INPUT  @B@@@4ST2OUT   EQU   0004 .         NN
)@@G@@     OUTPUT @B@@@5ST2KEY   EQU   0400 .              KEYED  @B@@@5ST2RECNO
)@@G@@   EQU   0020 .              RECORD @B@@@4ST2BRC   EQU   0177 .         NP
)@@G@@     LABEL  @E@@@4ST2BRL   EQU   0200 .              BUILTIN ENTRY RETRNNQ
)@@G@@S LAB @B@@@4ST2STR   EQU   0040 .              STREAM @D@@@4SN2FLE   EQUNR
)@@G@@   0201 .              FILE NOT PERMITTED @D@@@4SN2INP   EQU   0216 .   NS
)@@G@@           INPUT NOT PERMITTED@E@@@4SN2OUT   EQU   0206 .              ONT
)@@G@@UTPUT NOT PERMITTED     @D@5@4SN2PRI   EQU   0212 .              PRINT NNU
)@@G@@OT PERMITTED@D@@@5SN2PRI   EQU   0632 .              PRINT NOT PERMITTEDNV
)@@G@@@B@5@4SN2STR   EQU   0140 .              STREAM @B@@@5SN2STR   EQU   056NW
)@@G@@0 .              STREAM @D@@@5SN2KEY   EQU   0450 .              KEY NOTNX
)@@G@@ PERMITTED  @E@@@5SN2REC   EQU   0170 .              RECORD NOT PERMITTENY
)@@G@@D     @^@5@4SN2FLA   EQU   0777 .   @^@@@5SN2FLA   EQU   0177 .   @^@@@5NZ
)@@G@@SN2DIM   EQU   0177 .   @B@@@4ST3AUT   EQU   1    .              AUTO   OA
)@@G@@@B@@@4ST3EXT   EQU   2    .              EXT    @B@@@4ST3INT   EQU   4  OB
)@@G@@  .              INT    @B@@@4ST3STT   EQU   010  .              STATIC OC
)@@G@@@B@@@4ST3BSD   EQU   0020 .              BASED  @C@@@4ST3CTL   EQU   040OD
)@@G@@0 .              CONTROLLED   @^@@@4SN3AUT   EQU   0777 .   @^@@@4SN3EXTOE
)@@G@@   EQU   0217 .   @^@@@4SN3INT   EQU   0217 .   @^@@@4SN3STT   EQU   077OF
)@@G@@7 .   @D@@@4SN3BER   EQU   0340 .              BLTIN,ENTRY,RTNS   @^@@@4OG
)@@G@@SN3FLE   EQU   0771 .   @^@@@4ST3BLT   EQU   0200 .   @^@@@4ST3ENT   EQUOH
)@@G@@   0040 .   @^@@@4ST3RTN   EQU   0100 .   @^@@@4SN3ENT   EQU   0477 .   OI
)@@G@@@^@@@4SN3RTN   EQU   0537 .   @^@@@4SN3BSD   EQU   0771     @^@@@4SN3CTLOJ
)@@G@@   EQU   0771     @C@@@4ST4PTR   EQU   0001 .              POINTER VAR  OK
)@@G@@@F@@@4ST4BPT   EQU   0002 .              BASED VARIABLE WITH IMPLIED PTROL
)@@G@@@B@@@5ST4ARE   EQU   0004 .              AREA   @C@@@5ST4OFA   EQU   001OM
)@@G@@0 .              OFFSET(AREA) @^@@@4SN4PTR   EQU   0774 .   @^@@@5SN4AREON
)@@G@@   EQU   0777 .   @D@@@4SADCL*   LABEL .                   DECLARE DRIVEOO
)@@G@@R     @E@@@8         IF    02,ON,DSAONB THEN,SAONIL . -> NO ON X DCL    OP
)@@G@@@D@@@4         LINK  SATENT .            'THEN' OR'ELSE'    @B@@@4      OQ
)@@G@@   LINK  SACDTS .            CHECK  @ @@@4         LOAD  A7,DSAPFX .    OR
)@@G@@@^@@@4         AND,U A7,040 . @D@@@4         IF    A8,EQ,0,I THEN,DECL12OS
)@@G@@ . -> NO LABEL    @F@@@4         LINK  SANLST .             SET NULL STMOT
)@@G@@T BEFORE DCL .    @ @@@4         LOAD  A7,DSAPFX .    @#@@@4DECL12   LABOU
)@@G@@EL .  @D@@@4         AND,U A7,020 .            -> LBL NOT REQ     @B@@@4OV
)@@G@@         IF    A8,EQ,0,I THEN,DECL14 .    @ @@@4         SUB   A7,020,I OW
)@@G@@.     @ @@@4         STORE A7,DSAPFX .    @C@@@4         SET   020,ON,DSOX
)@@G@@PFXN .    LBL REQ NEXT  @#@@@4DECL14   LABEL .  @D@@@4         SZ,H2 DSDOY
)@@G@@ESC-(IN 63,Q3,1,0) . CLEAR IND.S    @D@@@4         MOVE  DSADFSK,0,I .  OZ
)@@G@@      CLEAR FACTOR STACK@C@@@4         LOADA A7,DSADFSK .        FACTOR PA
)@@G@@STACK @ @@@4         STORE A7,DSDFTL  .   @C@@@4         LOADA A7,DSADSKPB
)@@G@@-SACDSW .  IDENT STACK  @ @@@4         STORE A7,DSDITL .    @D@@@4      PC
)@@G@@   USING STTMNT,X8 .         GET STMT NUMBER    @ @@@4         MOVE  DSDPD
)@@G@@SNM,STTNUM .@C@@@4         MOVE  DSDEST,DECLDC,I .   INITIAL STATE@C@@@4PE
)@@G@@         GOTO  DECL36 .            -> START     @#@@@4DECL35   LABEL .  PF
)@@G@@@C@@@4         LINK  SAPTAC .            PUT BCODE    @#@@@4DECL36   LABPG
)@@G@@EL .  @B@@@4         BCL   LXATTR,DEDCAT .     ->ATTR @B@@@4         BCLPH
)@@G@@   LXCM,DEDCCM   .     ->COMMA@B@@@4         BCL   LXLP,DEDCLP   .     -PI
)@@G@@>'('  @F@@@4         BAC   ACRELX,DEDCAT .     -> REAL , KLUDGE SINCE ALPJ
)@@G@@SO BIF@F@@@5         BAC   ACDIM,DEDATD .      -> DIM, KLUDGE SSNCE ALSOPK
)@@G@@ BIF  @B@@@4         BCLID DEDCID        .     ->ID   @B@@@4         BCLPL
)@@G@@   LXRP,DEDCRP   .     ->')'  @#@@@4DECL39   LABEL .  @C@@@4         BCLPM
)@@G@@   LXIDDN,DEDCDN .     -> DEC NO .  @C@@@4         BAC   ACENTY,DEDCAN .PN
)@@G@@     -> 'ENTRY'   @D@@@4DEDLTM   LABEL .                   TERMINATE DCLPO
)@@G@@ STMT @E@@@4         IF    01,OFF,DSALND THEN,DECTM1 . -> NOT STRUCTURE PP
)@@G@@@ @@@4         LOAD  X5,DSDITL .    @D@@@4         LINK  DESFIN .       PQ
)@@G@@     TERMINATE STRUCTURE@#@@@4DECTM1   LABEL .  @D@@@4         BINDZ DSDPR
)@@G@@EVD,SADLT .      ->NO DCL'S, DELETE @D@@@4         LINK  DEDLIM .       PS
)@@G@@     CLEAR ID STACK     @G@@@4         IF    DECLRP+DECLID+DECLAT+DECLRTPT
)@@G@@,ON,DSDEST THEN,DECTM7 . ->OK @ @@@4.        CLEAR UP END B-CODE  @E@@@4PU
)@@G@@         IF    DECLDN,OFF,DSDEST THEN,DECTM3 . -> NO NUM.   @E@@@4      PV
)@@G@@   LOAD  A7,SAEM85,I .       IMPROPER STRUCTURE LEVEL @C@@@4         FLIPW
)@@G@@NK X10,SAESB8  .       DELETE NO.   @#@@@4DECTM3   LABEL .  @D@@@4      PX
)@@G@@   LINK  EABK1 .             GET LAST B-CODE    @E@@@4         IF    A8,PY
)@@G@@NE,ACCOMA,I THEN,DECTM5 . ->LAST NOT COMMA@ @@@4         SAERR SAEM12,SAPZ
)@@G@@E .   @^@@@4         GOTO  DECTM3 . @#@@@4DECTM5   LABEL .  @D@@@4      QA
)@@G@@   IF    A8,NE,ACLPAR,I THEN,DECTM6 . ->NOT '(' @C@@@4         SAERR SAEQB
)@@G@@M26,SAE .        EXTRA '('    @D@@@4         LINK  SACNDN .            CQC
)@@G@@OUNT DOWN FACTOR  @^@@@4         GOTO  DECTM3 . @#@@@4DECTM6   LABEL .  QD
)@@G@@@C@@@4         PUTC  .                   REPLACE TOKEN@#@@@4DECTM7   LABQE
)@@G@@EL .  @D@@@4         BINDZ DSCNTI,SSTEND .     NO OPEN FACTORS    @^@@@4QF
)@@G@@         LINK  SACNDN . @B@@@4         LINK  SASPRPE .           ')'    QG
)@@G@@@C@@@4         GOTO  DECTM7 .            -> SEE IF END@ @@@4/.       UNIQH
)@@G@@MPLEMENTED FEATURE@#@@@4DECL25   LABEL .  @#@@@4XXXXXX   LABEL .  @F@@@4QI
)@@G@@         MOVE  DSALND,0,I .         CLEAR FLAGS FORCING RETURN    @A@@@4QJ
)@@G@@         LOADA A7,DSADSK-SACDSW,I . @ @@@4         STORE A7,DSDITL .    QK
)@@G@@@ @@@4         SAERR SAEM99,SAE     @C@@@4         GOTO  DEDLTM .       QL
)@@G@@     ->DELETE STMT@#@@@4/.       COMMA    @#@@@4DEDCCM   LABEL .  @G@@@4QM
)@@G@@         IF    DECLID+DECLAT+DECLRT+DECLRP,OFF,DSDEST THEN,DECCM2 . ->NOQN
)@@G@@@B@@@4         LINK  SAPTAC .            PUT ,  @#@@@4DECCM4   LABEL .  QO
)@@G@@@C@@@4        BNINDZ DSALND,DECCM5 .     -> STRUCTURE @D@@@4         BNIQP
)@@G@@NDZ DSCNTI,DECCM5 .    -> OPEN FACTOR     @D@@@4         LINK  DEDLIM . QQ
)@@G@@           CLEAR I/O STACK    @#@@@4DECCM5   LABEL .  @C@@@4         MOVQR
)@@G@@E  DSDEST,DECLCM,I .   COMMA STATE  @F@@@4         IF    020,ON,DSALND TQS
)@@G@@HEN,DECCM9 . ->STRUCTURE, FACTORED  @H@@@4         MOVE  DSDESC,DDENON,IQT
)@@G@@ .   SET TO TERMINATE STRUCTURE IF NO NUMBER    @#@@@4DECCM9   LABEL .  QU
)@@G@@@C@@@4         GOTO  DECL36 .            -> NEXT TOKEN@#@@@4DECCM8   LABQV
)@@G@@EL .  @C@@@4         LINK  SASPCM .            MISSING COMMA@^@@@4      QW
)@@G@@   GOTO  DECCM4 . @#@@@4DECCM2   LABEL .  @C@@@4         LINK  EABK1  . QX
)@@G@@           DISCARD COMMA@^@@@4         GOTO  DECL36 . @#@@@4/.       DIMQY
)@@G@@ENSION@#@@@4DEDCLP   LABEL    @G@@@4         IF    DECLDC+DECLLP+DECLCM+QZ
)@@G@@DECLDN,ON,DSDEST THEN,DEDC12 . ->FAC@G@@@4         IF    DECLRP+DECLID,ORA
)@@G@@FF,DSDEST THEN,DECCM8 . -> SUPPLY COMMA   @C@@@4         LINK  DACM02 . RB
)@@G@@           DIM B CODE   @C@@@4         GOTO  DECL36 .            -> ERRORC
)@@G@@R     @E@@@4         IF    DECLID,ON,DSDEST  THEN,DALP48 . ->NON FACT IDRD
)@@G@@@C@@@4         MOVE  DSDEST,DECLRT,I .   ') ATTR'     @D@@@4         LOARE
)@@G@@D  X3,DSDFFB .         FIRST FACTOR LEVEL @#@@@4DALP16   LABEL .  @^@@@4RF
)@@G@@         STORE X3,DSDIWL@^@@@4         USING STSBLK,X3@F@@@4         IF RG
)@@G@@   STDAT1-(IN 0,Q1,0,0),ZERO THEN,DALP14 . -> NO ATTR @C@@@4         FLIRH
)@@G@@NK X10,SAEB8X .        IMPROPER DIM @^@@@4         GOTO  DALP20 . @#@@@4RI
)@@G@@DALP14   LABEL .  @A@5@4         MOVE  STDAT1,ST1DIM,I .    @D@@@5      RJ
)@@G@@   SET   ST1DIM,ON,STDAT1 .   SET DIMENSION ATTR@B@@@4         LSDP  X5,RK
)@@G@@STDID .          SD     @^@@@4         LINK  DALP64 . @#@@@4DALP20   LABRL
)@@G@@EL    @^@@@4         LOAD  A3,DSDIWL@B@@@4         IF    A3,EQ,DSDITL THRM
)@@G@@EN,DECL36 . @ @@@4         ADD   A3,SACDSW,I .  @^@@@4         LOAD  X3,RN
)@@G@@A3    @C@@@4         GOTO  DALP16 .            ->NEXT ID    @#@@@4DALP48RO
)@@G@@   LABEL .  @C@@@4         MOVE  DSDEST,DECLAT,I .   ATTR STATE   @ @@@4RP
)@@G@@         LOAD  X3,DSDITL .    @^@@@4         GOTO  DALP16 . @^@@@4      RQ
)@@G@@   USING SDSECT,X5@#@@@4DALP64   LLOC  .  @B@@@4         SET   SDARRY,ONRR
)@@G@@,SDCLS2 .  'ARRAY'@^@@@4         LOAD  A7,DSDMCT@C@@@4         BNINDZ DSRS
)@@G@@ALND,DALP68 .    -> IN STR    @^@@@4         STORE A7,SDNDIM@#@@@4DALP66RT
)@@G@@   LOCAL .  @^@@@4         ADD   A7,A7    @C@@@4         ADD   A7,3,I  .RU
)@@G@@           DV= 2*DIMS+3 @ @@@4         STORE X5,DSSDPT .    @^@@@4      RV
)@@G@@   LINK  DADV     @^@@@4         USING WORD,X3 .@B@@@4         MOVE  W1HRW
)@@G@@2,DSATP4 .       B CODE @#@@@4         JMP .    @#@@@4DALP68   LABEL .  RX
)@@G@@@D@@@4         ADD   A7,SDNDIM .         INHERITED DIMS     @^@@@4      RY
)@@G@@   STORE A7,SDNDIM@ @@@4         MOVE  SDDVA,DSATP4 . @#@@@4         LJMRZ
)@@G@@P .   @[@@@4.     @ @@@4.        WRITE DIM B-CODE     @[@@@4.     @#@@@4SA
)@@G@@DADV     LOCAL .  @C@@@4         LOAD  A8,A7 .             DV SPACE     SB
)@@G@@@^@@@4         LINK  PLALC .  @^@@@4         USING WORD,X3 .@C@@@4      SC
)@@G@@   STORE A8,W1Q1 .           SAVE DV SIZE @D@@@4         LOAD  X5,DSSDPTSD
)@@G@@ .         SAVE DV PTR IN SD  @ @@@4         USING SDSECT,X5 .    @ @@@4SE
)@@G@@         STORE X3,SDDVA,X5 .  @#@@@4         JMP .    @[@@@4.     @^@@@4SF
)@@G@@.        DIM B-CODE     @[@@@4.     @#@@@4DACM02   LOCAL .  @B@@@4      SG
)@@G@@   MOVE  DSDDST,0,I .        CLR IND@C@@@4         MOVE  DSDMCT-(IN 0,Q3SH
)@@G@@-H2,0,0),0,I .    @C@@@4         LINK  SAGBC .             SAVE BCODE   SI
)@@G@@@ @@@4         STORE A3,DSATP4 .    @B@@@4         LINK  SAPTAC .       SJ
)@@G@@     '('    @#@@@4DACM06   LABEL .  @C@@@4         LINK  SAGBC .        SK
)@@G@@     SAVE BCODE   @ @@@4         STORE A3,DSATP2 .    @#@@@4DACM07   LABSL
)@@G@@EL .  @^@@@4         SUPSYM ACDMUB  @#@@@4DACM08   LABEL .  @B@@@4      SM
)@@G@@   BCL   LXMU,DACM13 .       ->*    @^@@@4         EXPR  ICDSYA   @C@@@4SN
)@@G@@         GOTO  DACM16 .            ->NO EXPR    @B@@@4         SET   1,OSO
)@@G@@N,DSDDST.        EXPR   @B@@@4         BAC   ACCOLN,DACM24 .     ->:    SP
)@@G@@@#@@@4DACM10   LABEL .  @C@@@4         COUNT DSDMCT .            DIM COUSQ
)@@G@@NT    @ @@@4         MOVE  DSDMBI,0,I .   @B@@@4         BAC   ACRPAR,DASR
)@@G@@CM36 .     ->)    @^@@@4         LINK  SAPTCM . @^@@@4         GOTO  DACSS
)@@G@@M06 . @#@@@4DACM13   LABEL .  @B@@@4         SUPSYM ACSTAR .           'ST
)@@G@@*'    @ @@@4         SET   2,ON,DSDDST.   @#@@@4DACM14   LABEL    @B@@@4SU
)@@G@@         LINK  LXGET .             NEXT   @^@@@4         GOTO  DACM10 . SV
)@@G@@@#@@@4DACM16   LABEL    @C@@@4         BNAC  ACCOMA,DACM18 .     -> NOT SW
)@@G@@,     @C@@@4         LINK  SADLCM.             DELETE COMMA @^@@@4      SX
)@@G@@   GOTO  DACM08 . @#@@@4DACM18   LABEL .  @B@@@4         BNAC  ACRPAR,DASY
)@@G@@CM20 .     ->NOT )@D@@@4         LINK  EABK1 .             BACKUP TO COMSZ
)@@G@@MA    @#@@@4DACM36   LABEL .  @B@@@4         LINK  SAPTAC .            'TA
)@@G@@)'    @#@@@4DACM38   LABEL .  @D@@@4         IF    DSDMCT,NZERO THEN,DACTB
)@@G@@M42 . SOME DIMS   @D@@@4         SAERR SAEM86,SAE .    IMPROPER DIMENSIOTC
)@@G@@N     @ @@@4         LOAD  A3,DSATP1 .    @^@@@4         LINK  SAGSBC   TD
)@@G@@@#@@@4         JMP   .  @#@@@4DACM20   LABEL    @C@@@4         FLINK X10TE
)@@G@@,SAEB86 .        IMPROPER DIM @ @@@4         LOAD  A3,DSATP2 .    @D@@@4TF
)@@G@@         LINK  SAGSBC .            DELETE LAST PHASE  @D@@@4         LINTG
)@@G@@K  EABK1 .             DELETE LAST COMMA  @^@@@4         LINK  SASPRPE .TH
)@@G@@@^@@@4         GOTO  DACM38   @#@@@4DACM24   LABEL .  @C@@@4         BINTI
)@@G@@D  DSDMBI,DACM28 .     -> COLON     @^@@@4         LINK  SAPTAC . @ @@@4TJ
)@@G@@         LOAD  A3,DSATP2 .    @D@@@4         FIXUP A3,ACDMLB,I .        TK
)@@G@@ CHANGE UB TO LB  @ @@@4         MOVE  DSDMBI,1,I .   @^@@@4         GOTTL
)@@G@@O  DACM07 . @#@@@4DACM28   LABEL    @ @@@4         FLINK X10,SAEB86 .   TM
)@@G@@@^@@@4         GOTO  DACM14 . @#@@@4DACM42   LABEL .  @C@@@4         LOATN
)@@G@@D  A3,DSDDST .         SEE IF *,EXPR@B@@@4         IF    A3,NE,3,I THEN,TO
)@@G@@JMP1 . -> OR@ @@@4         FLINK X10,SAEB8X .   @#@@@4         JMP    . TP
)@@G@@@#@@@4/.       FACTOR LP@#@@@4DEDC12   LABEL .  @^@@@4         LOAD  A7,TQ
)@@G@@DSDFTL@ @@@4         USING STSBLK,X5 .    @E@@@4         IF    A7,GE,DSATR
)@@G@@DFSKE,I THEN,DELP56.   ->OVERFLOW   @^@@@4         LOAD  X5,A7 .  @C@@@4TS
)@@G@@         LOAD  X3,X5 .             PUSH STK     @ @@@4         ADD   X5,TT
)@@G@@SACDFSK,I . @ @@@4         STORE X5,DSDFTL .    @E@@@4         LOAD  X11TU
)@@G@@,DSDITL          PTR TO 1ST ID OF FACT    @ @@@4         ADD   X11,SACDSTV
)@@G@@W,I . @ @@@4         STORE X11,STFFB,X5 . @C@@@4         MOVE  STFATR-(ITW
)@@G@@N 0,Q3-H2,0,0),0,I .    @E@@@4         IF    DECLDN,OFF,DSDEST THEN,DELPTX
)@@G@@24 . ->NO STR     @E@@@4         IF    DDEDAD,SAME,DSDESC THEN,DELP54 . TY
)@@G@@-> MAJOR STR@ @@@4         USING STSBLK,X3 .    @ @@@4         BIND  STFTZ
)@@G@@SLF,DELP54 .@ @@@4         USING STSBLK,X5 .    @C@@@4         MOVE  STFUA
)@@G@@SLF,1,I .        NEW LEVEL    @ @@@4         SET   022,ON,DSALND .@F@@@4UB
)@@G@@         IF    DDESON,NSAME,DSDESC THEN,DELP25 . ->NOT S@N STATE  @E@@@4UC
)@@G@@         MOVE  DSDESC,DDEFSN,I . SET FACTORED SON STATE     @#@@@4DELP25UD
)@@G@@   LABEL .  @C@@@4         IF    DDEBR,NSAME,DSDESC THEN,DELP24   @A@@@4UE
)@@G@@         MOVE  DSDESC,DDEFBI,I .    @#@@@4DELP24   LABEL .  @C@@@4      UF
)@@G@@   MOVE  DSDEST,DECLLP,I .   STATE '('    @^@@@4         LINK  SACNT .  UG
)@@G@@@^@@@4         GOTO  DECL35 . @#@@@4DELP54   LABEL .  @D@@@4         LOAUH
)@@G@@D  A7,SAEM36,I.        IMPROPER FACTOR    @#@@@4DELP55   LABEL .  @ @@@4UI
)@@G@@         FLINK X10,SAESE .    @^@@@4         GOTO  DELP57 . @#@@@4DELP56UJ
)@@G@@   LABEL    @D@@@4         FLINK X10,SAEB68 .        FACTOR TOO DEEP    UK
)@@G@@@#@@@4DELP57   LABEL .  @^@@@4         LINK  LXGET.   @^@@@4         GOTUL
)@@G@@O  DECL36 . @^@@@4/.       RIGHT PAREN    @#@@@4DEDCRP   LABEL .  @D@@@4UM
)@@G@@         BINDZ DSCNTI,DARP68 .     ->NO FACTORS OPEN  @F@@@4         IF UN
)@@G@@   DECLID+DECLAT+DECLRT+DECLRP,ON,DSDEST THEN,DARP12 .@C@@@4         IF UO
)@@G@@   DECLCM,OFF,DSDEST THEN,DARP68 .  @C@@@4         LINK  EABK1 .        UP
)@@G@@     DELETE COMMA @^@@@4.        CLOSE FACTOR   @#@@@4DARP12   LABEL .  UQ
)@@G@@@D@@@4         LOAD  X5,DSDFTL .         TOP FACTOR STACK   @^@@@4      UR
)@@G@@   USING STSBLK,X5@ @@@4         MOVE  DSDFFB,STFFB . @B@@@4         SUBUS
)@@G@@   X5,SACDFSK,I .      UNSTK .@ @@@4         STORE X5,DSDFTL .    @C@@@4UT
)@@G@@         LINK  SACNDN .            FACTORS-1    @ @@@4         BIND  STFUU
)@@G@@SLF,DARP24 .@D@@@4         SET   020,OFF,DSALND .   CLEAR FACTOR IND    UV
)@@G@@@ @@@4         MOVE  DSDESC,0,I .   @#@@@4DARP24   LABEL .  @ @@@4      UW
)@@G@@   MOVE  DSDEST,DECLRP,I@^@@@4         GOTO  DECL35 . @C@@@4DARP68   LABUX
)@@G@@EL .                   EXTRA ')'    @ @@@4         LOAD  A7,SAEM81,I .  UY
)@@G@@@^@@@4         GOTO  DELP55 . @A@@@4/.       DECIMAL NUMBER - STRUCTURE UZ
)@@G@@@#@@@4DEDCDN   LABEL .  @H@@@4         IF    DECLLP+DECLCM+DECLDC,OFF,DSVA
)@@G@@DEST THEN,DEDC62 . ->NOT ALLOWED    @E@@@4         LOAD  A7,DSDITL .    VB
)@@G@@     GET PTR TO CURRENT LEVEL @F@@@4         IF    A7,EQ,DSADSKE,I THEN,VC
)@@G@@DECI36 . ->OOPS, STACK FULL   @^@@@4         LOAD  X5,A7 .  @^@@@4      VD
)@@G@@   LOAD  X3,A7 .  @D@@@4         ADD   X3,SACDSW,I .       POINT TO NEXTVE
)@@G@@ LEVEL@D@@@4         LSDP  X4,DLXID .          GET NUMBER BCD PTR @D@@@4VF
)@@G@@         LSDP  X4,SDBCLK,X4 .      GET SD POINTER     @ @@@4         USIVG
)@@G@@NG SDSECT,X4 .    @E@@@4         IF    SDRLCX,OFF,SDCLS1 THEN,DEDC04 . -VH
)@@G@@>OK NUMBER  @G@@@4         SAERR SAEM85,SAE .        IMPROPER STRUCTURE VI
)@@G@@NUMBER (COMPLEX)  @#@@@4DEDC04   LABEL .  @ @@@4         USING STSBLK,X3VJ
)@@G@@ .    @D@@@4         LOAD  A7,SDFXPT+1 .       GET LEVEL NUMBER   @ @@@4VK
)@@G@@         STORE A7,STDSL .     @E@@@4         IF    A7,EQ,1,I THEN,DEDCNWVL
)@@G@@ . -> NEW STRUCTURE     @D@@@4         IF    A7,LT,256,I THEN,DEDX12 . -VM
)@@G@@> VALID     @ @@@4         SAERR SAEM85,SAE .   @C@@@4         LOAD  A7,VN
)@@G@@255,I .          SET MAX LEVEL@ @@@4         STORE A7,STDSL .     @#@@@4VO
)@@G@@DEDX12   LABEL .  @F@@@4         IF    01,OFF,DSALND THEN,DEDC64 . ->NOTVP
)@@G@@ IN STRUCTURE     @E@@@4         IF    020,ON,DSALND THEN,DEDC64 . ->FACVQ
)@@G@@TORED LEVEL @ @@@4         USING STSBLK,X5 .    @D@@@4         IF    A7,VR
)@@G@@EQ,STDSL THEN,DEDCBR . ->BROTHER    @C@@@4         IF    A7,GT,STDSL THEVS
)@@G@@N,DEDCSN  . ->SON @ @@@4.        SEARCH FOR BROTHER   @^@@@4         LOAVT
)@@G@@D  A3,X5 .  @ @@@4         LOAD  A8,STDSL .     @#@@@4DEDC15   LABEL .  VU
)@@G@@@C@@@4         SUB   A3,SACDSW,I .       LAST ENTRY   @ @@@4         USIVV
)@@G@@NG STSBLK,A3 .    @D@@@4         IF    A8,LE,STDSL THEN,DEDC15 . ->NOT OVW
)@@G@@NE    @B@@@4         IF    A7,NE,STDSL THEN,DEDC18 .  @C@@@4         LOAVX
)@@G@@D  X5,A3 .             FOUND BROTHER@A@@@4         GOTO  DEDCBR . ->MERGVY
)@@G@@E     @#@@@4DEDC18   LABEL .  @D@@@4         IF    A7,GT,STDSL THEN,DEDCVZ
)@@G@@BR . ->BROTHER    @^@@@4         LOAD  X5,A3 .  @B@@@4         GOTO  DEDWA
)@@G@@C15 . ->TRYNEXT ONE     @[@@@4.     @#@@@4DEDC62   LABEL .  @H@@@4      WB
)@@G@@   IF    DECLRP+DECLID+DECLAT+DECLDN,ON,DSDEST THEN,DECCM8 . ->PUT ,    WC
)@@G@@@#@@@4DEDC64   LABEL .  @E@@@4         LOAD  A7,SAEM85,I .      IMPROPERWD
)@@G@@ STRUCTURE NUMBER @C@@@4         GOTO  DELP55 .            ->MESSAGE    WE
)@@G@@@A@@@4/.       BROTHER STRUCTURE NUMBER   @#@@@4DEDCBR   LABEL .  @C@@@4WF
)@@G@@         LOAD  A3,DDEBR,I .        SET STATE    @#@@@4DEBR02   LABEL .  WG
)@@G@@@ @@@4         USING STSBLK,X5 .    @E@@@4         STORE A3,DSDESC .    WH
)@@G@@     SET STRUCTURE CONTROL    @ @@@4         MOVE  DSDREL,STDID . @#@@@4WI
)@@G@@DEBR05   LABEL .  @F@@@4         MOVE  DSDEST,DECLDN,I .   SET STRUCTUREWJ
)@@G@@ NUMBER STATE     @C@@@4         GOTO  DECI26 .            ->GET ID     WK
)@@G@@@[@@@4.     @]@@@4.        SON@[@@@4.     @#@@@4DEDCSN   LABEL .  @C@@@4WL
)@@G@@         LOAD  A3,DDESON,I .       SET SON STATE@F@@@4         GOTO  DEBWM
)@@G@@R02 . -          ->MERGE WITH BROTHER ROUTINE   @[@@@4.     @[@@@4.     WN
)@@G@@@[@@@4.     @^@@@4.        NEW STRUCTURE  @[@@@4.     @[@@@4.     @#@@@4WO
)@@G@@DEDCNW   LABEL .  @A@@@4         MOVE  DSDESC,DDEDAD,I .    @D@@@4      WP
)@@G@@   BINDZ DSALND,DESFN4 . ->NO CURRENT STRUCTURE @^@@@4         LINK  DESWQ
)@@G@@FIN . @#@@@4DESFN4   LABEL .  @E@@@4         STORE X3,DSSTTP .         SWR
)@@G@@AVE TOP OF STRUCTURE    @E@@@4         MOVE  DSALND,1,I .        CLEAR SWS
)@@G@@TRUCTURE CONTROL  @^@@@4         GOTO  DEBR05 . @[@@@4.     @[@@@4.     WT
)@@G@@@[@@@4.     @[@@@4.     @[@@@4.     @[@@@4.     @[@@@4.     @ @@@4.     WU
)@@G@@   TERMINATE STRUCTURE  @[@@@4.     @[@@@4.     @[@@@4.     @[@@@4.     WV
)@@G@@@[@@@4.     @#@@@4DESFIN   LOCAL .  @E@@@4         STORE X5,DSATP2 .    WW
)@@G@@     SAVE TOP OF STRUCTURE    @ @@@4         LOAD  X5,DSSTTP .    @D@@@4WX
)@@G@@         STORE X3,DSSTTP .         TEMPORARY FOR X3   @ @@@4         USIWY
)@@G@@NG STSBLK,X5 .    @D@@@4         LSDP  X4,STDID .          GET SD OF LASWZ
)@@G@@T SD  @ @@@4         USING SDSECT,X4 .    @ @@@5         STORE X4,DSATPZXA
)@@G@@ .    @G@@@4         LOAD  A3,SDCLS0 .         GET STORAGE CLASS OF MAJOXB
)@@G@@R MEMBER    @^@@@4         AND,U A3,0360 .@D@@@4         STORE A4,DSATP9XC
)@@G@@ .         SAVE STORAGE CLASS @D@@@4         IF    SDSTRU,OFF,SDCLS4 THEXD
)@@G@@N,DESF72 . ->DONE @C@@@4         LOAD  A3,STDAT .          GET ATTR WORDXE
)@@G@@@A@@@4         AND   A3,DESFF3 . MASKWORD @D@@@4         IF    A4,NE,0,IXF
)@@G@@ THEN,DESF16 . ->IMPROPER ATTR@E@@@4DESF12   LABEL .                   NXG
)@@G@@EXT DCL IN STRUCTURE    @D@@@4         ADD   X5,SACDSW,I .       NEXT STXH
)@@G@@ACK ENTRY   @^@@@4         LOAD  A3,X5 .  @C@@@4         IF    A3,GT,DSAXI
)@@G@@TP2 THEN,DESF72 . ->DONE@D@@@4         LSDP  X4,STDID .          SD OF DXJ
)@@G@@ECLARED SD  @B@@@4         STORE X4,DSSDPT .         SAVEIT @D@@@4      XK
)@@G@@   LOAD  A7,SDCLS0 .         SET STORAGE CLASS  @^@@@4         AND,U A7,XL
)@@G@@0017 .@ @@@4         ADD   A8,DSATP9 .    @ @@@4         STORE A8,SDCLS0XM
)@@G@@ .    @C@@@4         LOAD  A7,STDAT .          GET ATTR     @F@@@4      XN
)@@G@@   IF    SDSTRU,OFF,SDCLS4 THEN,DESF24 . ->NOT STRUCTURE    @ @@@4      XO
)@@G@@   AND   A7,DESFFM .    @F@@@4         IF    A8,EQ,0,I THEN,DESF12 . ->NXP
)@@G@@EXT DCL'D STRUCTURE ELT @#@@@4DESF16   LABEL .  @G@@@4         LOAD  A7,XQ
)@@G@@SAEM84,I .       IMPROPER ATTRIN DCL'D STRUCTURE ELT  @ @@@4         FLIXR
)@@G@@NK X10,DEBDCL .   @C@@@4         GOTO  DESF12 .            ->NEXT DCL   XS
)@@G@@@B@@@4DESFFM   +0337777777777 . DIMENSION MASK  @B@@@4DESFF3   +03377773XT
)@@G@@40774 . MAJOR STRUCTURE @A@@@4DESFF2   +0000177777003 . LEAF ATTR @[@@@4XU
)@@G@@.     @[@@@4.     @#@@@4DESF24   LABEL .  @C@@@4         AND,U A7,DESFF2XV
)@@G@@ .         CHECK ATTR   @C@@@4         IF    A8,EQ,0,I THEN,DESF26 . ->OXW
)@@G@@K ATTR@ @@@4         LOAD  A7,SAEM84,I .  @ @@@4         FLINK X10,DEBDCXX
)@@G@@L .   @#@@@4DESF26   LABEL .  @B@@@4         BINDZ SDNDIM,DESF32 . ->NO XY
)@@G@@DIMS  @A@@@4         SET   SDARRY,ON,SDCLS2 .   @C@@@4         MOVE  DSAXZ
)@@G@@TP1,SDDVA .  GET DV FOR ARRAY @ @@@4         LOAD  A7,SDNDIM .    @B@@@4YA
)@@G@@         ADD   A7,A7 .       2* NUM DIM.  @C@@@4         ADD   A7,3,I . YB
)@@G@@           SIZE OF DV   @D@@@4         LOAD  A9,X5 .             SAVE X5YC
)@@G@@ ACROSS CLL @^@@@4         LINK  DADV .   @^@@@4         USING WORD,X3 .YD
)@@G@@@E@@@4         MOVE  W1H2,DSATP1 .       SET BCODE PTR TO INFO    @F@@@4YE
)@@G@@         LOAD  A7,SDNDIM,X4 .      SET MAXIMUM DIMENSIONALITY     @^@@@4YF
)@@G@@         LOAD  A3,X4 .  @#@@@4DESF33   LABEL .  @E@@@4         IF    A3,YG
)@@G@@ZERO THEN,DESF34 . -> DONE WITH STRUCTURE @ @@@4         USING SDSECT,A3YH
)@@G@@ .    @F@@@4         IF    A7,LT,SDMXDM THEN,DESF37 . -> NOT MAX DIMENSIYI
)@@G@@ONS   @F@@@4         STORE A7,SDMXDM .         NEW MAX GREATER THAN OLD YJ
)@@G@@MAX   @#@@@4DESF37   LABEL .  @ @@@4         LOAD  A3,SDDAD,A3 .  @^@@@4YK
)@@G@@         GOTO  DESF33 . @ @@@4         USING SDSECT,X4 .    @#@@@4DESF32YL
)@@G@@   LABEL .  @D@@@4         IF    SDA1BS,ZERO THEN,DESF38 . ->NO LENGTH  YM
)@@G@@@B@@@4         LOAD  A7,3,I .            GET DV @^@@@4         LOAD  A9,YN
)@@G@@X5 .  @^@@@4         LINK  DADV .   @D@@@4DESF34   LABEL .           SETYO
)@@G@@ PTR TO LENGTH BCODE    @^@@@4         LOAD  X5,A9 .  @^@@@4         USIYP
)@@G@@NG WORD,X3 .@C@@@4         MOVE  W1H2+2,SDA1BS .     SET LENGTH   @C@@@4YQ
)@@G@@         GOTO  DESF12 .            ->NEXT SD    @#@@@4DESF38   LABEL .  YR
)@@G@@@C@@@4         LOAD  A9,X5 .     SAVE CURRENT STK PTR @D@@@4         LOAYS
)@@G@@D  A7,2,I .               GET 2 WORD D.V. @^@@@4         LINK  DADV .   YT
)@@G@@@B@@@4         LOAD  X5,A9 .     RESET STK PTR  @C@@@4         GOTO  DESYU
)@@G@@F12 .            ->NEXT SD    @[@@@4.     @[@@@4.     @[@@@4.     @ @@@4YV
)@@G@@.        END OF STRUCTURE     @[@@@4.     @[@@@4.     @#@@@4DESF72   LABYW
)@@G@@EL .  @ @@@4         MOVE  DSALND,0,I .   @[@@@5.     @E@@@5.        SETYX
)@@G@@ NUMBER OF STRING LEAVES INTO STRUCTURE SD'S    @B@@@5.        FOR CODE YY
)@@G@@GEN - MAX LENGTH MODE   @D@@@5         LOAD  X3,DSATPZ .         START OYZ
)@@G@@F STRUCTURE @E@@@5DESF79   LABEL .                   LOOP FOR SUBSTRUCTUZA
)@@G@@RE    @G@@@5         LOAD  A9,0,I .            NUMBER OF STRING LEAVES=0ZB
)@@G@@ SO FAR     @ @@@5         USING SDSECT,X3 .    @#@@@5DESF76   LABEL .  ZC
)@@G@@@E@@@5         IF    SDSTRU,OFF,SDCLS4 THEN,DESF75 . -> FOUND LEAF@D@@@5ZD
)@@G@@         LSDP  X3,SDSON .          GO DOWN ONE LEVEL  @E@@@5         GOTZE
)@@G@@O  DESF76 .            TRY THIS ONE FOR BOTTOM .@D@@@5DESF75   LABEL .  ZF
)@@G@@                 FOUND LEAF ELEMENT @E@@@5         ADD   A9,SDNSPS .    ZG
)@@G@@     1=STRING 0=ARITHMETIC    @#@@@5DESF80   LABEL .  @G@@@5         IF ZH
)@@G@@   SDBROT,ZERO THEN,DESF77 . ->NO BROTHER, GO UP ONE LEVEL  @ @@@5      ZI
)@@G@@   LSDP  X3,SDBROT .    @H@@@5         IF    SDSTRU,OFF,SDCLS4 THEN,DESFZJ
)@@G@@75 . ->BROTHER IS NOT A STRUCTURE   @G@@@5         STORE A9,SDNSPS .    ZK
)@@G@@     SAVE COUNT FROM RIGHT SUBSTRUCTURE   @E@@@5         GOTO  DESF79 . ZL
)@@G@@           PROCESS THIS SUBSTRUCTURE@#@@@5DESF77   LABEL .  @#@@@5DESF81ZM
)@@G@@   LABEL .  @F@@@5         IF    SDMEMS,OFF,SDCLS2 THEN,DESF74 . -> END ZN
)@@G@@OF STRUCTURE@D@@@5         LSDP  X3,SDDAD .          GO UP ONE LEVEL    ZO
)@@G@@@G@@@5         LOAD  A3,SDNSPS .         GET COUNT OF PREVIOUS SUBSTRUCTZP
)@@G@@URES  @F@@@5         STORE A9,SDNSPS .         SET COUNT OF THIS SUBSTRUZQ
)@@G@@CTURE @F@@@5         ADD   A9,A3 .             GET COUNT FOR NEXT LEVEL ZR
)@@G@@UP    @F@@@5         GOTO  DESF80 .            PROCESS BROTHER OF THIS LZS
)@@G@@NODE  @[@@@5.     @#@@@4DESF74   LABEL .  @D@@@4         LOAD  X3,DSSTTPZT
)@@G@@ .         RESET SAVED REGS.  @C@@@4         JMP .                     -ZU
)@@G@@>RETURN     @^@@@4/.       IDENTIFIER     @#@@@4DEDCID   LABEL .  @D@@@4ZV
)@@G@@         IF    0770,ON THEN,DECI08 .  ->NOT CONSTANT  @C@@@4         BNCZW
)@@G@@L  LXID,DECL39 .       ->CONSTANT   @#@@@4DECI08   LABEL .  @G@@@4      ZX
)@@G@@   IF    DECLLP+DECLCM+DECLDN+DECLDC,OFF,DSDEST THEN,DECCM8 .     @#@@@4ZY
)@@G@@DECI12   LABEL .  @D@@@4         LOAD  A7,DSDITL .         SEE IF ID STKZZ
)@@G@@ FULL @C@@@4         IF    A7,EQ,DSADSKE,I THEN,DECI36 .    @C@@@4      AA
)@@G@@   LINK  SDXVE .             CREATE SD    @^@@@4         LOAD  X3,X4 .  AB
)@@G@@@^@@@4         USING SDSECT,X3@E@@@4         IF    SD3ENT,ON,SDCLS3 THENAC
)@@G@@,DECI48 . ->PREVIOUS USE@#@@@4DECI13   LABEL .  @E@@@4         IF    040AD
)@@G@@,OFF,DSALND THEN,DECI16 .  -> NO STRUCTURE@A@@@4         SET   SDPARM,ONAE
)@@G@@,SDCLS2 .   @C@@@4         LOAD  X4,DSSTTP .         PARM OFFSET  @B@@@4AF
)@@G@@         LSDP  X4,STDID,X4 .       SD     @ @@@4         LOAD  A7,SDPROFAG
)@@G@@,X4 . @ @@@4         STORE A7,SDPROF,X3 . @#@@@4DECI16   LABEL .  @C@@@4AH
)@@G@@         MOVE  DSDEVD,1,I .        VALID ID     @C@@@4         MOVE  SDDAI
)@@G@@CNM,DSDSNM .     SET DCL NUM. @A@@@4         SET   SD3CLR,ON,SDCLS3 .   AJ
)@@G@@@B@@@4         SET   SD4DCR+SD4RFE,ON,SDCLS4 .  @C@@@4         STORE X3,AK
)@@G@@DSSDPT .         SAVE SD PTR  @C@@@4         LOAD  X5,DSDITL .         PAL
)@@G@@USH STK     @ @@@4         ADD   X5,SACDSW,I .  @ @@@4         STORE X5,AM
)@@G@@DSDITL .    @C@@@4         MOVE  STDAT,0,I .         CLEAR WORD   @D@@@4AN
)@@G@@         STSDP X3,STDID,X5 .       PUSH SD IN ID STK  @C@@@4         LSDAO
)@@G@@P  X4,DSDREL .          REL STRU.   @C@@@4         LOAD  X1,DSDESC .    AP
)@@G@@     STR. CTL.    @C@@@4         MOVE  DSDEST,0,I .        CLR. IND.    AQ
)@@G@@@C@@@4         LOAD  X1,DEBTBL+FH1,X1 .  STR ROUTINE  @^@@@4         GOTAR
)@@G@@O  0,X1 .   @[@@@4.     @A@@@4.        FACTORED STRUCTURE LEVEL   @ @@@4AS
)@@G@@         USING STSBLK,X5 .    @#@@@4DECIFB   LABEL .  @D@@@4         MOVAT
)@@G@@E  STDSL,DSDFSL .      SET STRUCTURE LEVEL@^@@@4         MOVE  X4,X5 .  AU
)@@G@@@B@@@4         SUB   X4,SACDSW,I .       LAST ID@ @@@4         LSDP  X4,AV
)@@G@@STDID,X4 .  @[@@@4.     @ @@@4.        BROTHER - INITIAL    @[@@@4.     AW
)@@G@@@#@@@4DECIFI   LABEL .  @F@@@4         MOVE  DSDESC,DDEFBR,I .   SET FACAX
)@@G@@TORED BROTHER STATE     @#@@@4DECIBR   LABEL .  @ @@@4         USING SDSAY
)@@G@@ECT,X4 .    @ @@@4         MOVE  SDBROT,STDID . @ @@@4         LOAD  A3,AZ
)@@G@@SDDAD .     @ @@@4         USING SDSECT,X3 .    @ @@@4         STORE A3,BA
)@@G@@SDDAD .     @E@@@4         LSDP  X4,SDDAD .          GO TO FATHER NODE SBB
)@@G@@D     @B@@@4         GOTO  DECIS4 .            ->MERGE@[@@@4.     @[@@@4BC
)@@G@@.     @C@@@4DECIFS   LABEL .                   SON INITIAL  @F@@@4      BD
)@@G@@   MOVE  DSDESC,DDEFBR,I .   SET FACTORED BROTHER STATE     @#@@@4DECISNBE
)@@G@@   LABEL .  @ @@@4         MOVE  SDDAD,DSDREL . @ @@@4         USING SDSBF
)@@G@@ECT,X4 .    @ @@@4         MOVE  SDSON,STDID .  @D@@@4         SET   SDSBG
)@@G@@TRU,ON,SDCLS4 .  SET STRUCTURE ATTR @D@@@4         LOAD  A3,SDCLS0 .    BH
)@@G@@     SET STRUCTURE FLAG @E@@@4         AND,U A3,0360 .           LEAVE SBI
)@@G@@TORAGE CLASS ONLY @ @@@4         ADD   A4,SD0STU,I .  @C@@@4         STOBJ
)@@G@@RE A4,SDCLS0 .         SET STRUCTURE@#@@@4DECIS4   LABEL .  @ @@@4      BK
)@@G@@   USING SDSECT,X4 .    @D@@@4         LOAD  A3,SDNDIM .         SET DIMBL
)@@G@@ENSIONALITY @ @@@4         USING SDSECT,X3 .    @ @@@4         STORE A3,BM
)@@G@@SDNDIM .    @F@@@4         SET   SDMEMS,ON,SDCLS2 .  SET STRUCTURE MEMBEBN
)@@G@@RSHIP FLAG  @D@@@4         IF    SDNDIM,ZERO THEN,DECI24 . -> NOT ARRAY BO
)@@G@@@F@@@4         SET    SDARRY,ON,SDCLS2 . -> POSSIBLY INHERITED DIMS     BP
)@@G@@@^@@@4         GOTO  DECI24 . @#@@@4DECINS   LABEL .  @D@@@4         BINBQ
)@@G@@DZ DSALND,DECI24 .     -> NO PREC. STR.   @D@@@4         SUB   X5,SACDSWBR
)@@G@@,I .       POP LAST MEMBER    @D@@@4         LINK  DESFIN .            FBS
)@@G@@INISH PREV. STR.  @#@@@4DECI24   LABEL .  @F@@@4DECIDD   LABEL .        BT
)@@G@@           DAD . MAJOR STRUCTURE LEVEL    @C@@@4         MOVE  DSDEST,DEBU
)@@G@@CLID,I .   'ID' STATE   @#@@@4DECI26   LABEL .  @C@@@4         LINK  SAPBV
)@@G@@TID .            ID TOKEN     @B@@@4         GOTO  DECL36 .            -BW
)@@G@@> NEXT@#@@@4DECI36   LABEL .  @D@@@4         SAERR SAEM83,SAS .        TBX
)@@G@@OO MANY ID'S .    @D@@@4         GOTO  DEDLTM .            -> TERMINATE BY
)@@G@@ DCL  @#@@@4DECI48   LABEL .  @E@@@4         IF    SDPARM,OFF,SDCLS2 THEBZ
)@@G@@N,DECI52 .    ->NOT PARM@E@@@4         IF    SD4DCR,ON,SDCLS4  THEN,DECICA
)@@G@@72 .    ->PREV DCL@C@@@4         BINDZ DSALND,DECI16 .     -> NOT IN STRCB
)@@G@@@C@@@4         SET   040,ON,DSALND .     SET STR PARM @^@@@4         GOTCC
)@@G@@O  DECI16 . @#@@@4DECI52   LABEL .  @B@@@4         LOAD  A6,DSDESC .    CD
)@@G@@     STR CTL@C@@@4         IF    A6,GE,2,I THEN,DECI62 .  ->STR   @B@@@4CE
)@@G@@         LOAD  A7,DSBKSD .         BLK SD @C@@@4         LOAD  X9,X3 .  CF
)@@G@@           SD OF ID     @#@@@4DECI54   LABEL .  @ @@@4         USING SDSCG
)@@G@@ECT,X9 .    @E@@@4         IF    SD4ENT,ON,SDCLS4 THEN,DECI72 . DUPL. ENCH
)@@G@@TRY   @E@@@4         IF    SDDAD,ZERO THEN,DECI72 .  -> NOT STR MEMBER  CI
)@@G@@@#@@@4DECI56   LABEL .  @E@@@4         IF    SDNXDC,ZERO THEN,DECI60 . -CJ
)@@G@@> END OF CHAIN    @^@@@4         LSDP  X9,SDNXDC@F@@@4         IF    A7,CK
)@@G@@NE,SDBKLK THEN,DECI56 . ->NOT IN SAME BLOCK     @^@@@4         GOTO  DECCL
)@@G@@I54 . @#@@@4DECI60   LABEL .  @ @@@4         USING SDSECT,X3 .    @B@@@4CM
)@@G@@         MOVE  DLXID,SDBCHI .      BCD PTR@ @@@4         MOVE  DSAU4,1,ICN
)@@G@@ .    @C@@@4         LINK  SDXVE.              FORCE SD     @C@@@4      CO
)@@G@@   LOAD  X3,X4 .             GET SD ADDR  @ @@@4         MOVE  DSAU4,0,ICP
)@@G@@ .    @^@@@4         GOTO  DECI13 . @C@@@4DECI62   LABEL .              CQ
)@@G@@     STRUCTURE    @F@@@4         IF    DDEBR,NSAME,DSDESC THEN,DECI63 . CR
)@@G@@-> NOT UNFACT.    @C@@@4         LSDP  X9,DSDREL .         PTR TO BROT. CS
)@@G@@@^@@@4         GOTO  DECI64 . @#@@@4DECI63   LABEL .  @F@@@4         IF CT
)@@G@@   DDEFBR,NSAME,DSDESC THEN,DECI60 . ->NOT FACT. BROT.@C@@@4         LSDCU
)@@G@@P  X9,STDID,X5 .       BROT PTR     @#@@@4DECI64   LABEL .  @B@@@4      CV
)@@G@@   LSDP  X9,SDDAD,X9 .       DAD    @C@@@4         LSDP  X9,SDSON,X9 .  CW
)@@G@@     LEFT SON     @#@@@4DECI65   LABEL .  @ @@@4         LOAD  A3,SDBCHICX
)@@G@@,X9 . @B@@@4         IF    A3,EQ,SDBCHI THEN,DECI72 . @^@@@4         USICY
)@@G@@NG SDSECT,X9@B@@@4         IF    SDBROT,ZERO THEN,DECI60 .  @ @@@4      CZ
)@@G@@   LSDP  X9,SDBROT .    @^@@@4         GOTO  DECI65 . @#@@@4DECI72   LABDA
)@@G@@EL .  @C@@@4         SAERR SAEM96,SAE .        MULT. DCL    @C@@@4      DB
)@@G@@   MOVE  DSAU3,'V',I .       $UND VAR     @^@@@4         LINK  SDSPLY . DC
)@@G@@@C@@@4         STSDP X3,DLXID .          CHANGE NAME  @^@@@4         GOTDD
)@@G@@O  DECI13 . @A@@@4/.       ELIMINATE SD FROM ID STK   @#@@@4DEDLIM   LOCDE
)@@G@@AL.   @C@@@4         MOVE  DSATPG,0,I .        CLEAR'EXT'CTL@C@@@4      DF
)@@G@@   LOADA X7,DSADSK-SACDSW .  BASE ID STK  @#@@@4DELM12   LABEL .  @^@@@4DG
)@@G@@         LOAD  A3,X7 .  @D@@@4         IF    A3,NE,DSDITL THEN,DELM21 . DH
)@@G@@->NOT AT TOP@C@@@4         LOADA X7,DSADSK-SACDSW .  RESET IDSTK  @ @@@4DI
)@@G@@         STORE X7,DSDITL .    @#@@@4         JMP   .  @#@@@4DELM21   LABDJ
)@@G@@EL .  @C@@@4         ADD   X7,SACDSW,I .       UP ONE LEVEL @B@@@4      DK
)@@G@@   LSDP  X3,STDID,X7 .       SD PTR @ @@@4         USING SDSECT,X3 .    DL
)@@G@@@ @@@4         USING STSBLK,X7 .    @ @@@4         MOVE  DSATPX,STDSL . DM
)@@G@@@D@@@4         IF    SDSTRU,ON,SDCLS4 THEN,DELM23 . ->STR   @F@@@4      DN
)@@G@@   LOAD  A7,STDSL .            SEE IF BASE OF STRUCTURE     @D@@@4      DO
)@@G@@   IF    A7,NE,1,I THEN,DELM22 . -> NOT BASE    @^@@@4         LOAD  X5,DP
)@@G@@X3.   @ @@@4         LOAD  A7,SAEM85,I .  @ @@@4         FLINK X10,DEBDCDQ
)@@G@@L .   @^@@@4         LOAD  X3,X5 .  @ @@@4         USING SDSECT,X3 .    DR
)@@G@@@C@@@4         BINDZ SDNDIM,DELM22 .     ->NO DIMS    @C@@@4         STODS
)@@G@@RE X7,DSATPH .         SAVE STK PTR @ @@@4         MOVE  DSATPY,SDDVA . DT
)@@G@@@ @@@4         MOVE  SDDVA,0,I .    @^@@@4         LOAD  X5,X3 .  @B@@@4DU
)@@G@@         LOAD  X3,SDNDIM,X5 .      # DIMS @B@@@4         LINK  DALP66 . DV
)@@G@@           GET DV @^@@@4         LOAD  X3,X5  . @ @@@4         LOAD  X7,DW
)@@G@@DSATPH .    @#@@@4DELM22   LABEL .  @E@@@4         LINK  SADRTC .       DX
)@@G@@     CHECK RUN TIME CLASS     @#@@@4DELM23   LABEL .  @D@@@4         MOVDY
)@@G@@E  DSATPH,DSBKSD .     SETUP FOR DV CHAIN @ @@@4         LOAD  A7,DSATPXDZ
)@@G@@ .    @C@@@4         IF    A7,LT,1,I THEN,DEL239 . -> NO STR@C@@@4      EA
)@@G@@   LINK  DEL231 .            -> IN STR    @#@@@4DEL239   LABEL .  @D@@@4EB
)@@G@@         MOVE  DSATPG,0,I .        CLEAR 'EXT' CTL    @E@@@4         IF EC
)@@G@@   SDEXTN,OFF,SDCLS2 THEN,DECL3 . -> NOT EXT    @D@@@4         GOTO  DECED
)@@G@@L24              'EXT'  ROUTINE     @#@@@4DECL3    LABEL .  @E@@@4      EE
)@@G@@   IF    SD0STA,OFF,SDCLS0 THEN,DECL6 . ->NOT STATIC  @#@@@4DECL4    LABEF
)@@G@@EL .  @B@@@4         LOAD  A3,SDCLS0 .    SEE IF FILE @D@@@4         ANDEG
)@@G@@,U A3,017 .       LEAVE CLASS BITS ONLY   @D@@@4         IF    A4,EQ,SD0EH
)@@G@@FLE,I THEN,DELM12 . -> FILE   @D@@@4         MOVE  DSATPH,ADBK0S .     SEI
)@@G@@ETUP DV CHAIN     @D@@@4         LINK  DEDLSH .            ADD TO STATICEJ
)@@G@@ CHAIN@#@@@4DECL6    LABEL .  @C@@@4         IF    SDDVA,ZERO THEN,DELM1EK
)@@G@@2 .  ->NO DV@D@@@4         IF    SDSTRU,ON,SDCLS4 THEN,DELM12 . ->STR   EL
)@@G@@@E@@@4. ? ? ? ? ?  IF    SDPARM,ON,SDCLS2 THEN,DECLB . ->PARM     @D@@@4EM
)@@G@@         LOAD  X5,DSATPH .         PTR TO BLOCK SD    @#@@@4DECL7    LABEN
)@@G@@EL .  @C@@@4         LINK  DEDLDV .            PUT ON CHAIN @^@@@4      EO
)@@G@@   GOTO  DELM12  .@#@@@4DECLB    LABEL .  @D@@@4         LOAD  X5,DSALSBEP
)@@G@@ .         CONTAINING BLK SD  @^@@@4         GOTO  DECL7 .  @[@@@4.     EQ
)@@G@@@[@@@4.     @A@@@4.        EXT TESTING SUBROUTINES    @[@@@4.     @[@@@4ER
)@@G@@.     @ @@@4         USING SDSECT,X3 .    @#@@@4DEC235   LABEL .  @E@@@4ES
)@@G@@         IF    SDEXDM,ON,SDCLS2 THEN,DECL3 . ->DUMMY EXT    @B@@@4      ET
)@@G@@   SET   SDEXDM+SDEXTN,ON,SDCLS2 .  @ @@@4         MOVE  SDEXPT,0,I .   EU
)@@G@@@A@@@4         GOTO  DECL3 . ->CONTINUE   @[@@@4.     @#@@@4DEL233   LABEV
)@@G@@EL .  @D@@@4         BINDZ DSATPG,DECL3 . ->NOT EXT STRUCTURE     @E@@@4EW
)@@G@@         IF    0340,NSAME,DSATPG THEN,DEC235 . ->DUMMY EXT  @A@@@4      EX
)@@G@@   SET   SDEXTN,ON,SDCLS2 .   @^@@@4         GOTO  DECL4 .  @#@@@4DEL231EY
)@@G@@   LABEL .  @F@@@4         IF    A7,NE,1,I THEN,DEL233 . ->NOT START OF EZ
)@@G@@STRUCTURE   @C@@@4         IF    SDEXTN,OFF,SDCLS2 THEN,DECL3 .   @C@@@4FA
)@@G@@         SET   0340,ON,DSATPG . SET EXT FLAG    @[@@@4.     @#@@@4DECL24FB
)@@G@@   LLOC .   @E@@@4         IF    SD0FLE,SAME,SDCLS0 THEN,DELM12 . ->EXT FC
)@@G@@FILE  @ @@@4         LSDP  X10,SDBCHI .   @ @@@4         USING SDBCD,X10FD
)@@G@@ .    @E@@@4         IF    BCDEPR,ON,SDBCL4 THEN,DECL25 . ->PREV DCL    FE
)@@G@@@A@@@4         SET   BCDEPR,ON,SDBCL4 .   @A@@@4         GOTO  DECL4 . -FF
)@@G@@>CONTINUE   @[@@@4.     @^@@@4.        ADD TO CHAIN   @[@@@4.     @^@@@4FG
)@@G@@         USING SDSECT,X5@#@@@4DEDLDV   LLOC  .  @E@@@4         IF    SDDFH
)@@G@@VC,ZERO THEN,DEDLD5 . ->CHAIN STARTED     @D@@@4         LSDP  A3,SDDOOFFI
)@@G@@ .         PTR TO LAST LINK   @ @@@4         STSDP X3,SDDVCH,A3 . @#@@@4FJ
)@@G@@DEDLD3   LABEL .  @ @@@4         STSDP X3,SDDOOF .    @#@@@4         LJMFK
)@@G@@P  .  @#@@@4DEDLD5   LABEL .  @B@@@4         STORE X3,SDDVC .    START CFL
)@@G@@HAIN  @^@@@4         GOTO  DEDLD3 . @[@@@4.     @^@@@4.        STATIC CHFM
)@@G@@AIN   @[@@@4.     @#@@@4DEDLSH   LLOC  .  @ @@@4         LOAD  A3,ADPCSSFN
)@@G@@ .    @ @@@4         STORE X3,ADPCSS .    @ @@@4         STSDP A3,SDSTCHFO
)@@G@@,X3 . @#@@@4         LJMP  .  @ @@@4         USING STSBLK,X7 .    @ @@@4FP
)@@G@@         USING SDSECT,X3 .    @[@@@4.     @ @@@4.        RUNTIME CLASS CFQ
)@@G@@HECK  @[@@@4.     @#@@@4SADRTC*  LLOC  .  @F@@@4         IF    SDINTL,OFFR
)@@G@@F,SDCLS3 THEN,DERTCO . -> NOT INITIAL     @D@@@4         LOAD  A3,SDCLS0FS
)@@G@@ .          SEE IF LABEL .    @D@@@4         AND,U A3,017 .             FT
)@@G@@ATTR BITS ONLY    @E@@@4         IF    A4,NE,SD0LAB,I THEN,DERTA2 . -> NFU
)@@G@@OT LABEL    @E@5@4         IF    SD0STA,OFF,SDCLS0 THEN,DERTA0 . -> NOT FV
)@@G@@STATIC@E@@@5         IF    SD0STA,OFF,SDCLS0 THEN,DERTA2 . -> NOT STATICFW
)@@G@@@D@5@4         FLINK X10,SAE92X .        -> IMPROPER INITIAL@C@@@5      FX
)@@G@@   SAERR SAEMNS,SAE .  STATIC NO GOOD     @D@@@4         LOAD  A3,SDCLS0FY
)@@G@@ .         SET TO AUTOMATIC   @A@@@4         XOR,U A3,SD0AUT+SD0STA .   FZ
)@@G@@@ @@@4         STORE A4,SDCLS0 .    @A@@@4         SET   SDEXTN,OFF,SDCLGA
)@@G@@S0 .  @#@5@4DERTA0   LABEL .  @ @5@4         LOAD  A3,STDAT4 .    @D@5@4GB
)@@G@@         AND,U A3,DAICNL .         CHECK NO LABEL     @#@5@4DERTA1   LABGC
)@@G@@EL .  @C@5@4         IF    A4,NE,0,I THEN,DERTAE . ->ERROR  @^@5@4      GD
)@@G@@   GOTO  DERTA6 . @#@@@4DERTA2   LABEL .  @G@7@5         IF    DAICSC,OFGE
)@@G@@F,SDXREF THEN,DERTA1 . ->NO LIST, ARRAY OR SC OK@G@@@7         IF    DAIGF
)@@G@@CSC,OFF,SDINCL THEN,DERTA1 . ->NO LIST, ARRAY OR SC OK@F@@@5         IF GG
)@@G@@   SDARRY,ON,SDCLS2 THEN,DERTA1 . ->ARRAY, LIST OK    @F@@@5         SAEGH
)@@G@@RR SAEMIT,SAE .        ERROR, NO LIST INIT ON SCALAR  @D@@@5         GOTGI
)@@G@@O  DERTAE .            IGNORE INITIAL     @#@@@5DERTA1  LABEL .   @D@@@5GJ
)@@G@@.       SEE IF INITIAL LIST MATCHES ATTRIBUTES OF SD  @[@@@5.     @D@7@5GK
)@@G@@         LOAD  A3,SDXREF .          GET TYPE OF LIST  @D@@@7         LOAGL
)@@G@@D  A3,SDINCL .          GET TYPE OF LIST  @B@@@5         AND,U A3,DAICLBGM
)@@G@@+DAICAR+DAICST .  @B@@@5.              1=LABEL, 2=STRING, 4=ARITH @^@@@5GN
)@@G@@         LOAD  A3,A4 .  @E@@@5         LX,H1 X5,DAILLS,A3 .          ROUGO
)@@G@@TINE TO GO TO     @D@@@5         LOAD  A3,SDCLS0 .          GET DATA TYPGP
)@@G@@E     @E@@@5         AND,U A3,017 .             LOW ORDER 4 BITS ONLY   GQ
)@@G@@@^@@@5         GOTO  0,X5 .   @#@@@5DAILLB  LABEL .   @D@@@5         IF GR
)@@G@@   A4,EQ,SD0LAB,I THEN,DERTA6 ELSE,DAILIL @#@@@5DAILST   LABEL    @D@@@5GS
)@@G@@         IF    A4,EQ,SD0STR,I THEN,DERTA6 ELSE,DAILIL @#@@@5DAILAR   LABGT
)@@G@@EL .  @D@@@5         IF    A4,EQ,SD0ART,I THEN,DERTA6 ELSE,DAILIL @#@@@5GU
)@@G@@DAILIL   LABEL .  @G@@@5         SAERR SAEMIA,SAE .         IMPROPER INIGV
)@@G@@TIAL - ATTR DO NOT MATCH@C@@@5         GOTO  DERTAE .          IGNORE INGW
)@@G@@ITIAL @E@5@4         IF    ST1STG,OFF,STDAT1 THEN,DERTA4 . ->NON STRING GX
)@@G@@@ @5@4         LOAD  A3,STDAT4 .    @ @5@4         AND,U A3,DAICNS .    GY
)@@G@@@^@5@4         GOTO  DERTA1 . @#@5@4DERTA4   LABEL .  @D@5@4         IF GZ
)@@G@@   DAICNA,ON,STDAT4 THEN,DERTAE . ->ERROR @#@@@4DERTA6   LABEL .  @E@@@4HA
)@@G@@         IF    SD0STA,OFF,SDCLS0 THEN,DERTA8 . ->NON STATIC @E@5@4      HB
)@@G@@   IF    DAICSA,OFF,STDAT4 THEN,DERTA8 . ->STATIC NO  @E@7@5         IF HC
)@@G@@   DAICSA,OFF,SDXREF THEN,DERTA8 . ->STATIC NO  @E@@@7         IF    DAIHD
)@@G@@CSA,OFF,SDINCL THEN,DERTA8 . ->STATIC NO  @ @5@4         FLINK X10,SAE92HE
)@@G@@X .   @C@@@5         SAERR SAEMNS,SAE .        STATIC NOT OK@#@@@4DERTA8HF
)@@G@@   LABEL .  @C@@@4         BNINDZ SDNDIM,DERTCO . -> NOT SCALAR   @E@5@4HG
)@@G@@         IF    DAICSC,OFF,STDAT4 THEN,DERTCO . ->SCALAR OK  @E@7@5      HH
)@@G@@   IF    DAICSC,OFF,SDXREF THEN,DERTCO . ->SCALAR OK  @E@@@7         IF HI
)@@G@@   DAICSC,OFF,SDINCL THEN,DERTCO . ->SCALAR OK  @C@@@4DERTAE   LABEL .  HJ
)@@G@@                 ERROR STATE  @D@@@4         FLINK X10,SAE92X .        IHK
)@@G@@MPROPER INITIAL   @D@@@4         SET   SDINTL,OFF,SDCLS3 . TURN OFF INITHL
)@@G@@IAL   @F@@@4         MOVE  SDINTM,0,I .        CLEAR OUT B CODE PTR TO IHM
)@@G@@NITIAL@C@@@4         GOTO  DERTCO .            CHECK CLASS  @D@@@4SAE92XHN
)@@G@@   LLOC .                    INITIAL ERROR STATE@D@@@4         LOAD  A7,HO
)@@G@@SAEM92,I .       IMPROPER INITIAL   @E@5@4         SET   040,ON,DSAECT .HP
)@@G@@    TURN OFF 'COTRECTED:'     @E@@@5         SET   01000,ON,DSAECT .    HQ
)@@G@@TURN OFF 'COTRECTED:'   @^@@@4         GOTO  SAESE .  @#@@@4DERTCO   LABHR
)@@G@@EL .  @E@@@4         LOAD  A3,STDAT1 .                   -> NO DATA TYPEHS
)@@G@@@^@@@4         AND,U A3,0527 .@B@@@4         IF    A4,EQ,0,I  THEN,LJMP HT
)@@G@@.     @^@@@4         LOAD  A3,A4 .  @G@@@4         IF    A3,EQ,ST1STG+STHU
)@@G@@1VAR,I THEN,DERTC8 . -> VARYING STRING    @F@@@4         IF    A3,EQ,ST1HV
)@@G@@STG,I THEN,DERTC8X . ->SIMPLE CHAR STRING @F@@@4         IF    A3,EQ,ST1HW
)@@G@@STG+ST1NVR,I THEN,DERTC8X . ->NONVARYING  @F@@@4         IF    ST1VAR+STHX
)@@G@@1NVR,OFF,A3 THEN,DERTC1 . -> NO VARYING   @ @@@4         LOAD  A7,SAEM97HY
)@@G@@,I .  @D@@@4         FLINK X10,DEBDCL .        IMPROPER VARYING   @#@@@4HZ
)@@G@@         LJMP .   @#@@@4DERTC1   LABEL .  @F@@@4         MOVE  DSATPY,2,IA
)@@G@@I .      SET WORD SIZE FOR FIX DEC AND FLT@E@@@4         IF    SDFXFL,OFIB
)@@G@@F,SDCLS1 THEN,DERTC5 . -> FIXED     @C@@@4         BINDZ SDSCAL,DERTC2 .IC
)@@G@@     -> NO SCALE  @D@@@4         LOAD  A7,SAEM37,I .       IMPROPER SCALID
)@@G@@E     @ @@@4         FLINK X10,DEBDCL  .  @ @@@4         MOVE  SDSCAL,0,IE
)@@G@@I  .  @#@@@4DERTC2   LABEL .  @E@@@4         IF    SDDCBN,OFF,SDCLS1 THEIF
)@@G@@N,DERTC4 . -> DECIMAL   @D@@@4         MOVE  DSATPH,074033,I .     BIN FIG
)@@G@@LT 60,24,2  @#@@@4DERTC3   LABEL    @D@@@4         LOAD  A6,DSATPY .    IH
)@@G@@     SET STORAGE SIZE   @D@@@4         IF    SDRLCX,OFF,SDCLS1 THEN,DERTII
)@@G@@32 . ->REAL @^@@@4         ADD   A6,A6    @#@@@4DERT32   LABEL .  @^@@@4IJ
)@@G@@         STORE A6,SDRTC @D@@@4         IF    ST1PRC,ON,STDAT1 THEN,DERT3IK
)@@G@@4 . ->PREC  @D@@@4         MOVE  SDPREC,DSATPH-FH2+FQ4 .     SET DEFAULTIL
)@@G@@@B@@@4         LJMP.                     RETURN @D@@@4DERT34   LABEL .  IM
)@@G@@                 SET DEFAULT PREC   @A@@@4         LOAD  A3,DSATPH-FH2+FIN
)@@G@@Q3 .  @D@@@4         IF    A3,GE,SDPREC THEN,LJMP . -> OK VALUE   @ @@@4IO
)@@G@@         LOAD  A7,SAEM43,I .  @ @@@4         STORE A3,SDPREC .    @C@@@4IP
)@@G@@         FLINK X10,DEBDCL .        IMPROPER PREC@#@@@4         LJMP  .  IQ
)@@G@@@#@@@4DERTC4   LABEL .  @D@@@4         MOVE  DSATPH,022010,I .   DEC FLTIR
)@@G@@ 18,8,2     @^@@@4         GOTO  DERTC3 . @#@@@4DERTC5   LABEL .  @D@@@4IS
)@@G@@         IF    SDDCBN,ON,SDCLS1 THEN,DERTC6 . ->BINARY@D@@@4         MOVIT
)@@G@@E  DSATPH,022012,I .   DEC FLT  18,10,2   @B@@@4         GOTO  DERTC3 . IU
)@@G@@           ->MERGE@#@@@4DERTC6   LABEL .  @D@@@4         MOVE  DSATPH,04IV
)@@G@@3043,I .   FIX BIN 35,35,1    @ @@@4         MOVE  DSATPY,1,I  .  @C@@@4IW
)@@G@@         GOTO  DERTC3 .            -> MERGE     @#@@@4DERTC8   LABEL .  IX
)@@G@@@C@@@4         SET   SDFXVR,ON,SDCLS1 .  SET VARYING  @#@@@4DERTC8X  LABIY
)@@G@@EL .  @#@@@4         LJMP  .  @[@@@4.     @[@@@4.     @D@5@4         USIIZ
)@@G@@NG STSBLK,X9 .         ID STACK ENTRY     @D@@@5         USING STSBLK,X7JA
)@@G@@ .         ID STACK ENTRY     @B@@@4         USING SDSECT,X3 .         PJB
)@@G@@ROC SD@E@@@4SACDFT*  LLOC .                    CHECK DCL VS DEFAULT ATTRJC
)@@G@@@E@6@5         IF    ST1DIM,OFF,STDAT1 THEN,LJMP . -> NO DIM ATTR @D@6@5JD
)@@G@@         SAERR SAEM86,SAE .       DIMENSION ILLEGAL   @E@6@5         SETJE
)@@G@@   SDARRY,OFF,SDCLS2 . TURN DIM ATTR OFF PROC   @F@@@4         LJMP .   JF
)@@G@@ TEMP TEMP TEMP TEMP TEMP TEMP TEMP TEMP TEMP   @ @@@4.          LOAD  AJG
)@@G@@7,SD2SP .   @E@@@4.          IF    SDFXFL,ON,STDAT2 THEN,DECDF3 .  -> FLJH
)@@G@@OAT   @F@@@4.          IF    A7,NE,17,I THEN,DECDF2 .    -> IMPROPER SCAJI
)@@G@@LE    @ @@@4.          LOAD  A7,SDCLS0 .  @D@@@4.          IF    A7,NE,SJJ
)@@G@@D0ENT+SD0AUT,I THEN,DECDF2 .  @ @@@4.          LOAD  A7,SDCLS1 .  @F@@@4JK
)@@G@@.          IF    A7,EQ,SDBLUS+SDDCBN,I THEN,LJMP . -> OK, RETURN  @D@@@4JL
)@@G@@. DECDF2   LABEL .                   ERROR MESSAGE    @E@@@4.          LJM
)@@G@@OADA A7,SAEM77,I .       IMPROPER CONVERSION    @ @@@4.          FLINK XJN
)@@G@@10,SAESW    @C@@@4.          LJMP .                     RETURN    @C@@@4JO
)@@G@@. DECDF3   LABEL .                   FLOAT PROC @E@@@4.          IF    AJP
)@@G@@7,NE,6,I THEN,DECDF2 .   -> IMPROPER SCALE@ @@@4.          LOAD  A7,SDCLJQ
)@@G@@S0 .  @D@@@4.          IF    A7,NE,SD0ENT+SD0AUT,I THEN,DECDF2 .  @ @@@4JR
)@@G@@.          LOAD  A7,SDCLS1  . @F@@@4.          IF    A7,NE,SDFXFL+SDBLUSJS
)@@G@@,I THEN,DECDF2 ELSE,LJMP .    @^@@@4/.       ATTRIBUTES     @B@@@4DEDCANJT
)@@G@@   LLOC  .                  'ENTRY' @F@@@4         IF    DECLAP,OFF,DSDEJU
)@@G@@ST THEN,DEDLTM . -> ATTR ILLEGAL    @C@@@4         LOAD  A14,ACENTR,I . JV
)@@G@@     SET'ENTRY'   @ @@@4         STORE A14,DLXAC  .   @^@@@4         GOTJW
)@@G@@O  DECT12   @[@@@5.     @[@@@5.     @[@@@5.     @#@@@5.        DIMENSIONJX
)@@G@@@[@@@5.     @#@@@5DEDATD   LABEL .  @D@@@5         LOAD  A14,ACDMAT,I . JY
)@@G@@      CHANGE A CODE     @ @@@5         STORE A14,DLXAC .    @[@@@5.     JZ
)@@G@@@[@@@4.     @ @@@4.        OTHER ATTRIBUTES     @[@@@4.     @#@@@4DEDCATKA
)@@G@@   LLOC  .  @E@@@4         IF    DECLAP,OFF,DSDEST THEN,DECI12 . -> ASSUKB
)@@G@@ME ID @#@@@4DECT12   LABEL .  @E@@@4         LINK  SADAT8 .            SKC
)@@G@@ETUP LINK TO ATTR RTE.  @C@@@4         MOVE  DSAU1,0,I .         CLR U1,KD
)@@G@@U2 CTL@F@@@4         IF    DECLRP+DECLRT,OFF,DSDEST THEN,DECT38 . ->NO FKE
)@@G@@ACTORS@E@@@4         LOAD  X4,DSDFFB .         APPLY ATTR TO ALL FACTORSKF
)@@G@@@#@@@4DECT24   LABEL .  @C@@@4         STORE X4,DSDIWL .         CURRENTKG
)@@G@@ LEVEL@C@@@4         LSDP  X3,STDID,X4 .       PTR TO SD    @ @@@4      KH
)@@G@@   STORE X3,DSSDPT .    @C@@@4         LOAD  X11,DSATP2 .        ATTR ADKI
)@@G@@DR .  @^@@@4         LINK  0,X11 .  @C@@@4         GOTO  $+2 .          KJ
)@@G@@     ->SUCCESS    @B@@@4         GOTO  DECL36 .            ->FAIL @D@@@4KK
)@@G@@         LOAD  A7,DSDIWL .         GO TO NEXT LEVEL   @C@@@4         IF KL
)@@G@@   A7,EQ,DSDITL THEN,DECT32 . -> TOP@ @@@4         ADD   A7,SACDSW,I .  KM
)@@G@@@^@@@4         LOAD  X4,A7 .  @E@@@4         GOTO  DECT24 .            -KN
)@@G@@> PROCESS NEW FACTOR    @#@@@4DECT32   LABEL .  @F@@@4         IF    DECKO
)@@G@@LRP+DECLRT,OFF,DSDEST THEN,DECT34 . ->NO FACTOR @B@@@4         MOVE  DSDKP
)@@G@@EST,DECLRT+DECLRP,I .   @B@@@4         GOTO  DECL36 .            -> NEXTKQ
)@@G@@@#@@@4DECT34   LABEL .  @A@@@4         MOVE  DSDEST,DECLAT,I .    @B@@@4KR
)@@G@@         GOTO  DECL36 .            -> NEXT@#@@@4DECT38   LABEL .  @B@@@4KS
)@@G@@         LOAD  X4,DSDITL  .        GET ID @C@@@4         GOTO  DECT24 . KT
)@@G@@           PROCESS ATTR @[@@@4.     @ @@@4.        SADAT8 - ATTR ADDRESSKU
)@@G@@@[@@@4.     @#@@@4SADAT8*  LOCAL .  @D@@@4         LOAD  A3,DLXIF .     KV
)@@G@@     ATTR BITS 201XXX   @C@@@4         LOAD  A7,DECTBL+FH2,A3 .  ATTR ROKW
)@@G@@UTINE @ @@@4         STORE A7,DSATP2 .    @ @@@4         MOVE  DSDATR,DLKX
)@@G@@XID   @^@@@4         LINK  SAPTAC . @B@@@4         LINK  SAGBC .        KY
)@@G@@     B-LODE @B@@@4         STORE A3,DSATPG .         SAVE IT@C@@@4      KZ
)@@G@@   MOVE  DSATP3,0,I  .       LNGTH  PREC  @ @@@4         MOVE  DSATP4,0,LA
)@@G@@I .   @C@@@4         MOVE  DSATP5,0,I  .       -> RETURN    @]@@@4      LB
)@@G@@   JMP@^@@@4.        ATTR ERROR     @[@@@4.     @#@@@4BATER*   PROC  *1 LC
)@@G@@@D@@@4         IF    BATER(1,2),ON,BATER(1,1) THEN,DEATER   @#@@@4      LD
)@@G@@   END   .  @[@@@4.     @^@@@4.        SD OF ID IN X3 @^@@@4.        STKLE
)@@G@@      IN X4 @#@8@4DEATER   LOCAL  . @#@@@8DEATER   LLOC  .  @F@@@4      LF
)@@G@@   IF    DECLRP+DECLRT,ON,DSDEST THEN,DEATR4 . ->FACTOR     @#@@@4DEATR2LG
)@@G@@   LABEL .  @C@@@4         LINK  EABK1 .             DELETE TOKEN @D@@@4LH
)@@G@@         SUB   A0,1,I .            CHANGE RETURN ADDR @^@@@4         LOALI
)@@G@@D  A3,1,A0 .@^@@@4         ADD   A3,1,I . @^@@@4         STACK  A3 .    LJ
)@@G@@@^@@@4         GOTO  DEATR5 . @#@@@4DEATR4   LABEL .  @E@5@4         SETLK
)@@G@@   040,ON,DSAECT .    TURN OFF 'CORRECTED:'     @E@@@5         SET   010LL
)@@G@@00,ON,DSAECT .    TURN OFF 'CORRECTED:'   @#@@@4DEATR5   LABEL .  @ @@@4LM
)@@G@@         SAERR SAEM99,SAE     @#@@@4         JMP .    @^@@@4/.       ATTLN
)@@G@@R  ROUTINES @[@@@4.     @^@@@4.        NOT IMPLEMENTED@[@@@4.     @^@@@4LO
)@@G@@         USING STSBLK,X4@^@@@4         USING SDSECT,X3@C@@@4DANPL    LLOLP
)@@G@@C .                    NOT IN PLUM  @ @@@4         LOAD  A7,SAEM101,I   LQ
)@@G@@@^@@@4         GOTO  DANY4 .  @F@@@4DANY     LLOC .                    'LR
)@@G@@UNIMPLEMENTED' (TEMPORARY)    @ @@@4         LOAD  A7,SAEM100,I   @#@@@4LS
)@@G@@DANY4    LABEL .  @ @@@4         FLINK X10,SAESB8     @#@@@4         LJMLT
)@@G@@P  1 .@[@@@4.     @[@@@5.     @[@@@5.     @#@@@5.        AREA     @[@@@5LU
)@@G@@.     @#@@@5DAAREA   LOCAL .  @E@@@5         IF    STDAT+FH1,NZERO THEN,LV
)@@G@@DEATER . ->AREA ILLEGAL @ @@@5         BATER STDAT4,SN4ARE .@A@@@5      LW
)@@G@@   SET   ST4ARE,ON,STDAT4 .   @D@@@5         LINK  DAARSZ .            SLX
)@@G@@ET AREA(SIZE)     @D@@@5         LINK  DASETA .            SET AREA TYPELY
)@@G@@ SD   @#@@@5         JMP .    @[@@@5.     @[@@@5.     @F@@@5DASETA   LLOLZ
)@@G@@C .                                        SET AREA SD@ @@@5         LOAMA
)@@G@@D  A3,SDCLS0 .    @D@@@5         AND,U A3,0760 .            SAVE STORAGEMB
)@@G@@ CLASS@ @@@5         ADD   A4,SD0ARE,I .  @ @@@5         STORE A4,SDCLS0MC
)@@G@@ .    @A@@@5         MOVE  SDRTC,SDRTAR,I .     @#@@@5         LJMP .   MD
)@@G@@@[@@@5.     @[@@@5.     @[@@@5.     @[@@@5.     @[@@@5.     @#@@@4.     ME
)@@G@@   AUTOMATIC@[@@@4.     @#@@@4DAAUTO   LOCAL .  @D@@@4         BATER STDMF
)@@G@@AT3,SN3AUT  .    ->AUTO ILLEGAL     @C@@@4         LINK  DEPARM .       MG
)@@G@@     PARAMETER    @A@@@4         SET   ST3AUT,ON,STDAT3 .   @A@@@4      MH
)@@G@@   SET   SD0AUT,ON,SDCLS0     @#@@@4         JMP .    @#@@@4DEPARM   LLOMI
)@@G@@C  .  @C@@@4         IF    SDPARM,ON,SDCLS2 THEN,DEATER     @#@@@4      MJ
)@@G@@   LJMP     @[@@@4.     @#@@@4.        BINARY   @[@@@4.     @#@@@4DABIN MK
)@@G@@   LOCAL .  @ @@@4         BATER STDAT1,SN1BIN  @A@@@4         SET   ST1ML
)@@G@@BIN,ON,STDAT1     @A@@@4         SET   SDDCBN,ON,SDCLS1     @#@@@4DABIN4MM
)@@G@@   LABEL .  @C@5@4         LINK  DAFLD .             FLOAT DEFAULT@^@@@4MN
)@@G@@         GOTO  DAPREC . @[@@@4.     @[@@@4.     @#@@@4.        BUILTIN  MO
)@@G@@@[@@@4.     @#@8@4DABLTN   LABEL .  @#@@@8DABLTN   LOCAL .  @G@@@4      MP
)@@G@@   IF    STDAT,NZERO THEN,DEATER . -> SOME ATTR, ILLEGAL BUILTIN  @C@@@4MQ
)@@G@@         LOAD  X5,X3 .             SD POINTER   @D@@@4         LOAD  A8,MR
)@@G@@ADBK0S .         GET SD FOR BLOCK 0 @#@@@4DABLT2   LABEL .  @E@@@4      MS
)@@G@@   LSDP  X5,SDBCLK,X5 .      LOOK FOR BLOCK 0 BIF SD  @D@@@4         IF MT
)@@G@@   X5,ZERO THEN,DEATER . -> NOT REALLY BIF@ @@@4         USING SDSECT,X5MU
)@@G@@ .    @E@@@4         IF    A8,NE,SDBKLK THEN,DABLT2 . ->NOT BLOCK 0 SD  MV
)@@G@@@ @@@4         USING SDSECT,X3 .    @E@@@4         STORE X5,SDEXPT .    MW
)@@G@@     SET PTR FROM SD TO BIF SD@C@@@4         SET   SDEXDM,ON,SDCLS2 .  SMX
)@@G@@ET DUMMY EXT@A@@@4         MOVE  STDAT2,ST2BRL,I .    @A@@@4         MOVMY
)@@G@@E  STDAT3,ST3BLT,I .    @A@@@4         MOVE  SDCLS0,SD0ENT,I .    @^@8@4MZ
)@@G@@         LJMP . ->RETURN@A@@@8         JMP .          ->RETURN    @[@@@4NA
)@@G@@.     @[@@@4.     @#@@@4.        BASED    @[@@@4.     @#@@@4DABSD    LOCNB
)@@G@@AL .  @ @@@4         BATER STDAT3,SN3BSD .@A@@@4         SET   ST3BSD,ONNC
)@@G@@,STDAT3 .   @E@@@4         SET   0760,OFF,SDCLS0 .   SET BASED STORAGE CND
)@@G@@LASS  @A@@@4         SET   SD0BSD,ON,SDCLS0 .   @E@@@5         LINK  DAPNE
)@@G@@RET .            SEE IF FIRST OR 2ND PASS @C@@@5         GOTO  DABSD2 . NF
)@@G@@           ->PASS 2     @D@@@4         BNAC  ACLPAR,JMP .        ->NO IMNG
)@@G@@PLIED PTR   @E@@@4         STORE X4,DSATP3 .         SAVE STACK ELT ADDRNH
)@@G@@.     @C@@@4         LINK  DABPTR .            GET (PTR)    @^@@@4      NI
)@@G@@   JMP . ->NO GOOD@ @@@4         LOAD  X4,DSATP3 .    @D@@@4         SETNJ
)@@G@@   ST4BPT,ON,STDAT4 .  SET (PTR) PRESENT  @#@@@4         JMP .    @[@@@4NK
)@@G@@.     @#@@@5DABSD2   LABEL .  @E@@@5         IF    ST4BPT,OFF,STDAT4 THENL
)@@G@@N,JMP . ->NO BASED(P)   @ @@@5         MOVE  SDBPTR,DSATPK .@A@@@5      NM
)@@G@@   SET   SD3BSD,ON,SDCLS3 .   @#@@@5         JMP .    @[@@@4.     @[@@@4NN
)@@G@@.     @^@@@4.        CONTROLLED     @[@@@4.     @#@@@4DACTL    LOCAL .  NO
)@@G@@@ @@@4         BATER STDAT3,SN3CTL .@A@@@4         SET   0760,OFF,SDCLS0NP
)@@G@@ .    @A@@@4         SET   ST3CTL,ON,STDAT3 .   @A@@@4         SET   SD0NQ
)@@G@@CNT,ON,SDCLS0 .   @E@@@5         LOAD  A7,3,I .           CREATE STATIC NR
)@@G@@PTR BASED ON@E@@@5         LINK  PLALC .            BCD SPCE (IN X3) FORNS
)@@G@@ PTR  @C@@@5         LINK  SDXB0 .            CREATE SD     @C@@@5      NT
)@@G@@   LOAD  A3,DSSDPT .        CTL VARIABLE  @ @@@5         USING SDSECT,A3NU
)@@G@@ .    @ @@@5         STORE X4,SDBPTR .    @ @@@5         USING SDSECT,X3NV
)@@G@@ .    @^@@@5         LOAD  X3,X4 .  @C@@@5         MOVE  SDCLS0,SD0STA,INW
)@@G@@ .  SET STATIC PTR@B@@@5         LINK  DASPTR .           SET PTR @D@@@5NX
)@@G@@         MOVE  DSATPH,DSBKSD .    SD OF  LOCK OF PTR  @C@@@5         LINNY
)@@G@@K  DEDLSH .           STATIC CHAIN  @#@@@4         JMP .    @[@@@4.     NZ
)@@G@@@[@@@4.     @[@@@4.     @[@@@4.     @#@5@4DAFLD    LLOC  .  @C@5@4      OA
)@@G@@   IF    ST1FFL,ON,STDAT1 THEN,LJMP .     @A@5@4         SET   SDFXFL,ONOB
)@@G@@,SDCLS1     @#@5@4         LJMP  .  @[@@@4.     @A@@@4.        BIT AND COC
)@@G@@HAR WITH LENGTH   @[@@@4.     @ @5@4.        BUILTIN- NOT YET     @[@@@4OD
)@@G@@.     @#@@@4.        COMPLEX  @[@@@4.     @#@@@4DACPLX   LOCAL .  @A@@@4OE
)@@G@@         SET   SDRLCX,ON,SDCLS1 .   @#@@@4DACPX4   LABEL .  @C@@@4      OF
)@@G@@   BATER STDAT1,SN1RCX .     ->NO REAL    @A@@@4         SET   ST1RCX,ONOG
)@@G@@,STDAT1     @B@5@4         LINK  DAFLD .             FLOAT  @B@@@4      OH
)@@G@@   GOTO  DAFL06 .            ->MERGE@[@@@4.     @#@@@4.        DECIMAL  OI
)@@G@@@[@@@4.     @#@@@4DADEC    LOCAL .  @ @@@4         BATER STDAT1,SN1DEC .OJ
)@@G@@@A@@@4         SET   ST1DEC,ON,STDAT1     @A@@@4         SET   SDDCBN,OFOK
)@@G@@F,SDCLS1    @^@@@4         GOTO  DABIN4   @[@@@5.     @[@@@5.     @#@@@5OL
)@@G@@.        DIMENSION@[@@@5.     @#@@@5DADIMS   LOCAL .  @D@@@5         BATOM
)@@G@@ER STDAT1,SN1DIM . -> (*) ALREADY THERE   @E@@@5         BATER STDAT2,SNON
)@@G@@2DIM . => LABEL, ENTRY, FILE, ETC.  @B@@@5         LINK  DAPRET .       OO
)@@G@@ FACTORED?  @E@@@5         GOTO  DADIP2 .        -> YUP, USE GOTTEN RESUOP
)@@G@@LTS   @C@@@5         LINK  DACM02 .        GET (*,*,*,...)  @B@@@5      OQ
)@@G@@   GOTO  DADIFL .        -> FAIL    @#@@@5DADIP2   LABEL .  @B@@@5      OR
)@@G@@   LSDP  X5,DSSDPT .      GET SD    @D@@@5         LINK  DALP64 .       OS
)@@G@@ CHANGE SSD TO ARRAY    @B@@@5         JMP .                 -> ALL DONEOT
)@@G@@@[@@@5.     @#@@@5DADIFL   LABEL .  @A@@@5         SAERR SAEM86,SAE .   OU
)@@G@@ OOPS @C@@@5         JMP   1 .             ->ERROR RETURN   @[@@@5.     OV
)@@G@@@[@@@5.     @[@@@4.     @#@@@4.        ENTRY    @[@@@4.     @G@@@4DAENTROW
)@@G@@   LOCAL .                   ENTRY(ATTR PARM1,ATTR PARM 2,...)    @C@@@5OX
)@@G@@         UNSTK X11.                NOT IN YET   @^@@@5         GOTO  DANOY
)@@G@@Y .   @G@@@5         ON    0 .                 SAVE CODE FOR POSSIBLE FUOZ
)@@G@@TURE USE    @D@@@4         LOAD  A3,STDAT .          SEE IF ENTRY IS OK_PA
)@@G@@@ @@@4         AND,U A3,SN3ENT .    @D@@@4         LINK  DENTS .        PB
)@@G@@     SEE IF ENTRY OK    @C@@@4         SET   ST3ENT,ON,STDAT3 .  SET ENTPC
)@@G@@RY    @D@@@4         LINK  DAEN96 .            PUT ON ENTRY CHAIN @E@@@4PD
)@@G@@         LINK  DAEN92 .            CHECK FOR FACTORED ATTR  @^@@@4      PE
)@@G@@   GOTO  DAEN72 . @C@@@4         BAC   ACLPAR,DAEN12 .     ATTR GIVEN   PF
)@@G@@@#@@@4DAEN09   LABEL .  @E@@@4         MOVE  DSDIWL,DSATPN .          REPG
)@@G@@SET STACK PTR     @#@@@4DAEN10   LABEL .  @D@@@4         MOVE  SDNARG,DSPH
)@@G@@AU2 .      MOVE ARGUMENT COUNT@C@@@4         GOTO  DAEN11 .            -PI
)@@G@@>RETURN     @D@@@4DAEN12   LABEL .                   FOUND ATTR LIST    PJ
)@@G@@@^@@@4         LINK  SAPTAC . @#@@@4DAEN18   LABEL .  @C@@@4         LOAPK
)@@G@@D  A9,DSAU2 .          UP ARG COUNT @^@@@4         ADD   A9,1,I . @ @@@4PL
)@@G@@         STORE A9,DSAU2 .     @E@@@4         LOAD  A7,13,I .           GPM
)@@G@@ET SD SPACE FOR ARGUMENT@^@@@4         LINK  PLALC .  @ @@@4         USIPN
)@@G@@NG SDSECT,X3 .    @C@@@4         MOVE  SDCLS4,SDBCSD,I .   SET SD BIT   PO
)@@G@@@C@@@4         MOVE  SDCLS3,SD3ENT,I .   SET ENTRY    @C@@@4         MOVPP
)@@G@@E  SDCLS2,SDPARM,I .   SET PARAMETER@E@@@4         MOVE  SDCLS1,SDFXFL,IPQ
)@@G@@ .   SET FLOATING ARGUMENT    @H@@@4         MOVE  SDCLS0,SD0ART+SD0AUT,PR
)@@G@@I .                SET AUTOMATIC AND ARITH@C@@@4         MOVE  SDPREC,6,PS
)@@G@@I .        PRECISION_   @D@@@4         MOVE  SDDCNM,DSDSNM .     SET DCLPT
)@@G@@ STMT NUMBER@C@@@4         STORE X3,DSSDPT .         SAVE SD PTR  @F@@@4PU
)@@G@@         LOADA X4,12,X3 .          POINT TO PARAMETER LIST ENTRY  @ @@@4PV
)@@G@@         STORE X3,W1H2,X4 .   @E@@@4         IF    A9,NE,1,I THEN,DAEN20PW
)@@G@@ . ->NOT FIRST PARAMETER@D@@@4         LOAD  X11,DSATPK .        POINT TPX
)@@G@@O ENTRY SD  @ @@@4         STORE X4,SDPLST,X11 .@B@@@4         GOTO  DAEPY
)@@G@@N22 .            ->MERGE@C@@@4DAEN20   LABEL .                   NOT FIRPZ
)@@G@@ST SD @D@@@4         LOAD  X11,DSATPL .        LAST PARM ENTRY    @ @@@4QA
)@@G@@         STORE X4,DSATPL .    @D@@@4         STORE X4,W1H1,X11 .       SQB
)@@G@@ET FORWARD LINK   @#@@@4DAEN22   LABEL .  @E@@@4         LOADA X4,DRVSV1QC
)@@G@@ .         SET DUMMY STACK ENTRY    @ @@@4         STORE X4,DSDIWL .    QD
)@@G@@@ @@@4         USING STSBLK,X4 .    @D@@@4         MOVE  STDAT,SDENTM . QE
)@@G@@     SET ENTRY TYPE     @D@@@4         BNAC  ACLPAR,DAEN24 .     ->NOT DQF
)@@G@@IMENSIONS   @D@@@4         LINK  DACM02 .            DIMENSION BCODE    QG
)@@G@@@B@@@4         LOAD  X5,DSSDPT .         SD PTR @^@@@4         LINK  DALQH
)@@G@@P64 . @#@@@4DAEN24   LABEL .  @B@@@4         BCL   LXATTR,DAEN48 .     -QI
)@@G@@>ATTR @#@@@4DAEN26   LABEL .  @^@@@4         LOAD  X3,DSSDPT@E@@@4      QJ
)@@G@@   IF    SDDVA,ZERO THEN,DAEN27 . ->NO DOPE VECTOR    @E@@@4         LOAQK
)@@G@@D  X5,DSBKSD .         SET CHAINED DOPE VECTOR  @D@@@4         LINK  DEDQL
)@@G@@LDV .            PUT NO DV CHAIN    @#@@@4DAEN27   LABEL .  @D@@@4      QM
)@@G@@   LOADA X7,DRVSV1 .         CHECK ENTRY ATTR   @^@@@4         LINK  SADQN
)@@G@@RTC . @D@@@4         BAC   ACCOMA,DAEN12 .      ->ANOTHER PARM    @#@@@4QO
)@@G@@DAEN30   LABEL .  @B@@@4         LINK  SASPRP .            PUT )  @C@@@4QP
)@@G@@         LOAD  X3,DSATPK .         SD OF ENTRY  @D@@@4         GOTO  DAEQQ
)@@G@@N09 .            ->END OF ENTRY ATTR@#@@@4DAEN48   LABEL .  @D@@@4      QR
)@@G@@   LINK  SADAT8 .            GET ATTR ADDRESS   @B@@@4         LOAD  X3,QS
)@@G@@DSSDPT .         SD PTR @C@@@4         LOAD  X4,DSDIWL .         STACK EQT
)@@G@@NTRY  @C@@@4         LOAD  X11,DSATP2 .        ROUTINE ADDR @B@@@4      QU
)@@G@@   LINK  0,X11 .             DO IT  @B@@@4         GOTO  DAEN24 .       QV
)@@G@@     OK     @C@@@4         GOTO  DAEN26 .            ->OOPS, ERROR@#@@@4QW
)@@G@@DAEN72   LABEL .  @C@@@4         LOAD  X11,DSATPK .      COPY PARM CHAINQX
)@@G@@@ @@@4         LOAD  A3,SDPLST,X11 .@ @@@4         STORE A3,SDPLST,X3 . QY
)@@G@@@D@@@4         GOTO  DAEN10 .            ->NEXT SD IN LIST  @#@@@5      QZ
)@@G@@    OFF .   @[@@@4.     @[@@@4.     @#@@@4.        FILE     @[@@@4.     RA
)@@G@@@#@@@4DAFILE   LOCAL .  @B@@@4         BATER STDAT2,SN2FLE . ->NO FILE  RB
)@@G@@@C@@@4         SET   ST2FLE,ON,STDAT2 .  SET FILE     @#@@@4DAFLE2   LABRC
)@@G@@EL .  @C@@@4         BATER STDAT1,SN1DAT . ->SOME DATA ATTR @B@@@4      RD
)@@G@@   BATER STDAT3,SN3FLE . ->FILE OK  @D@@@4         IF    SDMEMS,ON,SDCLSRE
)@@G@@2 THEN,DEATER . ->ERROR @^@@@4         LOAD  X4,X3 .  @ @@@4         FLIRF
)@@G@@NK X10,SAFDCL .   @#@@@4         JMP .    @#@@@4.        FIXED    @[@@@4RG
)@@G@@.     @#@@@4DAFIX    LOCAL    @ @@@4         BATER STDAT1,SN1FFL .@A@@@4RH
)@@G@@         SET   SDFXFL,OFF,SDCLS1 .  @^@@@4         GOTO  DAFL04 . @[@@@4RI
)@@G@@.     @ @@@4.        FLOAT - SEE PREC     @[@@@4.     @[@@@4.     @#@@@4RJ
)@@G@@.        LABEL    @[@@@4.     @#@@@4DALBL    LOCAL    @ @@@4         BATRK
)@@G@@ER STDAT1,SN1LBL .@^@@@4         LOAD  A3,STDAT2@^@@@4         LINK  DENRL
)@@G@@TS5   @A@@@4         SET   017,OFF,SDCLS0  .    @A@@@4         SET   SD0RM
)@@G@@LAB,ON,SDCLS0 .   @ @5@4         MOVE  SDCLS1,0100,I  @G@@@5         MOVRN
)@@G@@E  SDCLS1,SDRLCX,I     . FAKE OUT CODE GEN, SET SDVRCN OFF  @F@@@4SDR8BTRO
)@@G@@   EQU   2 .                 WORDSIZE OF LABEL VARIABLE     @A@@@4      RP
)@@G@@   MOVE  SDRTC,SDR8BT,I .     @ @5@4         MOVE  SDINTL,0,I     @C@5@4RQ
)@@G@@         BNAC  ACLPAR,JMP .        NOT SUBSCR   @C@5@4         UNSTK X11RR
)@@G@@ .               -> NOT YET   @^@5@4         GOTO  DANY .   @B@@@5      RS
)@@G@@   JMP .                    RETURN  @[@@@4.     @#@@@4DENTS    LLOC .   RT
)@@G@@@D@@@4         IF    A4,NE,0,I THEN,DEATER . ->NOT PERMITTED@A@@@4      RU
)@@G@@   SET   ST2BRC,OFF,STDAT2 .  @B@@@4         LOAD  A3,STDAT+(IN 0,H1,0,0RV
)@@G@@) .   @#@@@4DENTS5   LLOC .   @B@@@4         IF    A3,NE,0,I THEN,DEATERRW
)@@G@@ .    @A@@@4         MOVE  STDAT2,ST2BRL,I .    @#@@@4         LJMP  .  RX
)@@G@@@[@@@4.     @#@@@4.        INITIAL  @[@@@4.     @#@@@4DAINTL   LOCAL .  RY
)@@G@@@D@@@4         BATER STDAT1,SN1INT .     ->NO INITIAL YET   @D@@@4      RZ
)@@G@@   BATER STDAT2,SN2FLA .     ->NO FILE ATTR YET @D@@@4         BATER STDSA
)@@G@@AT3,SN3BER . ->BIF, ENTRY, RTNS     @E@@@4         IF    SDPARM,ON,SDCLSSB
)@@G@@2 THEN,DEATER . ->PARAMETER   @E@@@4         IF    SDSTRU,ON,SDCLS4 THENSC
)@@G@@,DEATER . ->STRYCTURE   @D@@@4         LINK  DAPRET .            PASS 1 SD
)@@G@@(FACTERED)  @B@@@4         GOTO  DAIN36 .            =>NO   @E@@@4      SE
)@@G@@   MOVE  DSATPL,0,I .        CLEAR CONSISTENCY CHECK  @D@@@4.        BNASF
)@@G@@C  ACCALL,DAINLT . ->NOT INITIAL CALL     @^@@@4         GOTO  DAINLT . SG
)@@G@@@[@@@4.     @^@@@4.        CALL INITIAL   @[@@@4.     @C@@@4.        LINSH
)@@G@@K  SAPTAC .            OUT 'CALL'   @C@@@4.        EXPR  ICDYNY .       SI
)@@G@@     PROC NAME    @A@@@4.        GOTO  DALNGR . -> NOPE     @D@@@4.     SJ
)@@G@@   SET   DAICSA,ON,DSATPL .  SET CALL. NO STATIC@#@@@4DAIN36   LABEL .  SK
)@@G@@@D@@@4         LOAD  X4,DSDIWL .         PTR TO CURRENT SD  @C@@@4      SL
)@@G@@   LOAD  X3,DSSDPT .         SET SD PTR   @ @@@4         USING STSBLK,X4SM
)@@G@@ .    @ @@@4         USING SDSECT,X3 .    @E@7@5         MOVE  SDXREF,DSSN
)@@G@@ATPL .   SAVE ATTR. OF INITIAL LIST @E@@@7         MOVE  SDINCL,DSATPL .SO
)@@G@@   SAVE ATTR. OF INITIAL LIST @D@@@4         SET   SDINTL,ON,SDCLS3 .  SSP
)@@G@@ET INITIAL ATTR   @D@@@4         MOVE  SDINTM,DSATPG .     MOVE B CODE PSQ
)@@G@@TR    @C@5@4         SET   ST1INT,ON,STDAT1 .  SETINITIAL   @C@@@5      SR
)@@G@@   SET   ST1INT,ON,STDAT1 .  SET INITIAL  @#@@@5DAIN38   LABEL .  @C@@@4SS
)@@G@@         JMP .                     ->RETURN     @[@@@4.     @C@@@4.     ST
)@@G@@   FIRST PASS IN INITIAL STATE MACHNE     @[@@@4.     @#@@@4. DAIFPT   LSU
)@@G@@OCAL .@E@@@4.          LINK  SAGBC .             GET CURRENT LOCATION   SV
)@@G@@@C@@@4.          STORE A3,DSATPF .         SAVE IT    @F@@@4.          LSW
)@@G@@OAD  A8,0,I .            CLEAR B CODE PTR IN B CODE   @#@@@4.          PSX
)@@G@@UTC . @C@@@4.          JMP .                     ->RETURN   @[@@@4.     SY
)@@G@@@ @@@4.        INITIAL WITH A LIST  @#@@@4DAINLT   LABEL .  @C@@@4      SZ
)@@G@@   BAC,ACLPAR,DAIN04 .       ->NEXT IS '('@C@@@4         SAERR SAEM05,SATA
)@@G@@E .        MISSING '('  @C@@@4         GOTO  DAIN06 .            PUT IN TB
)@@G@@'('   @#@@@4DAIN04   LABEL .  @C@@@4         LINK  LXGET .             ITC
)@@G@@GNRE '('    @#@@@4DAIN06   LABEL .  @B@@@4         SUPSYM ACLPAR .      TD
)@@G@@     PUT '('@C@@@4         MOVE   DSAITL,0,I .       NO PARENS YET@C@@@4TE
)@@G@@         GOTO   DAINCMS .         INITIAL STATE @[@@@4.     @E@@@4.     TF
)@@G@@   NEXT SYMBOL. 3 STATE, 7 SYMBOL FINITE STATE MACHINE@H@5@4DAINAZ   LABTG
)@@G@@EL .                   X9 = ROTUINE FOR PROPER SYMBOL (ARC OF FSA)@H@@@5TH
)@@G@@DAINAZ   LABEL .                   X9 = ROUTINE FOR PROPER SYMBOL (ARC OTI
)@@G@@F FSA)@C@5@4         BNAC  ACLPAR,DAINZ2 .     NEXT NOT '(' @C@@@5      TJ
)@@G@@   LOAD  A3,DLXAC .         GET TOKEN     @D@@@5         IF    A3,NE,ACLTK
)@@G@@PAR,I THEN,DAINZ2 .  -> NOT ( @E@@@4         LOAD  A14,ACLLST,I .      UTL
)@@G@@SE LIST ( INSTEAD OF (  @^@@@4         ADD   X9,1,I . @^@@@4         GOTTM
)@@G@@O  DAINBR . @#@@@4DAINZ2   LABEL .  @C@@@4         BAC   ACRPAR,DAINBR .TN
)@@G@@     FOUND '('    @B@@@4         BNAC  ACCOMA,DAINZ4 .     NOT ','@^@@@4TO
)@@G@@         ADD   X9,2,I . @^@@@4         GOTO  DAINBR . @#@@@4DAINZ4   LABTP
)@@G@@EL .  @B@@@4         BNCL  LXMU,DAINZ6 .       NOT '*'@C@@@4         ADDTQ
)@@G@@   X9,3,I .            SET STATE    @^@@@4         GOTO  DAINBR . @#@@@4TR
)@@G@@DAINZ6   LABEL .  @C@@@4         BNCL  LXPS,DAINZ8 .       NOT SIGN     TS
)@@G@@@^@@@4         ADD   X9,5,I . @^@@@4         GOTO  DAINBR . @#@@@4DAINZ8TT
)@@G@@   LABEL .  @G@@@4         IF    0760,ON THEN,DAINZ9 .                  TU
)@@G@@ ->NOT CONST OR ID@^@@@4         ADD   X9,4,I . @^@@@4         GOTO  DAITV
)@@G@@NBR . @#@@@4DAINZ9   LABEL .  @C@@@4         ADD   X9,6,I .            STW
)@@G@@ET OTHER    @#@@@4DAINBR   LABEL .  @ @@@4         LOAD  X9,W1H1,X9 .   TX
)@@G@@@^@@@4         GOTO  0,X9 .   @[@@@4.     @[@@@4.     @[@@@4.     @[@@@4TY
)@@G@@.     @#@@@4DAINPC   LABEL .  @F@@@4         LINK  SAPTAC .            PTZ
)@@G@@UT                  , IN BCODE@#@@@4DAIPC2   LABEL .  @C@@@4         SETUA
)@@G@@   DAICSC,ON,DSATPL .  SET SCALAR   @C@@@4DAINCMS  LABEL .              UB
)@@G@@     INITIAL STATE@C@@@4         LOADA X9,DAIBEG .         SET STATE    UC
)@@G@@@E@@@4         GOTO  DAINAZ .            ->NEXT TRANSFORMATION    @[@@@4UD
)@@G@@.     @#@@@4DAINSC   LABEL .  @C@@@4         LINK  SASPCM .            SUE
)@@G@@UPPLY COMMA @D@@@4         GOTO  DAIPC2              . ->NEXT STATE     UF
)@@G@@@#@@@4DAINPA   LABEL .  @^@@@4         LINK  LXGET .  @#@@@4DAIPAS   LABUG
)@@G@@EL .  @C@@@4         SUPSYM                    ACSTAR .     @#@@@4DAITPTUH
)@@G@@   LABEL .  @C@@@4         LOADA X9,DAITRM .        SET TERM STATE@E@@@4UI
)@@G@@         GOTO  DAINAZ .            ->NEXT TRANSFORMATION    @[@@@4.     UJ
)@@G@@@[@@@4.     @#@@@4DAINPN   LABEL .  @#@@@4DAINPQ   LABEL .  @C@@@4      UK
)@@G@@   BCL   LXIDCS,DAIPST .     ->STRING     @C@@@4         BCL   LXIDCN,DAUL
)@@G@@INPR .     ->ARTHMETC   @C@@@4         BCL   LXIDDN,DAINPR .     ->DEC CUM
)@@G@@ONST  @E@@@4         IF    DAICNL,OFF,DSATPL THEN,DAIPL4 . ->LABEL OK   UN
)@@G@@@#@@@4DAIPL2   LABEL .  @D@@@4         FLINK X10,SAEB92 .        IMPROPEUO
)@@G@@R INITIAL   @C@@@4         GOTO  DAINPA .            SUPPLY *     @#@@@4UP
)@@G@@DAIPL4   LABEL .  @C@@@4         SET   DAICLB,ON,DSATPL .  SET LABEL    UQ
)@@G@@@B@5@4         EXPR  ICDYHL . D=ANY,NHS,LAB     @B@@@5.        EXPR  ICDUR
)@@G@@YHL . D=ANY,NHS,LAB     @E@@@5         EXPR   ICDSYY . TEMP TEMP TEMP TEUS
)@@G@@MP TEMP TEMP TEMP @B@@@4         GOTO  DAIPL2 .            ->FAIL @H@@@4UT
)@@G@@               GOTO                DAITPT .            ->SUCCES, NEXT STUU
)@@G@@ATE   @#@@@4DAIPST   LABEL .. @F@@@4         IF    DAICNS,ON,DSATPL THENUV
)@@G@@,DAIPL2 . -> NO STRING ALLOWED@C@@@4         SET   DAICST,ON,DSATPL .  SUW
)@@G@@ET STRING   @C@@@4         SUPSYM ACSTEX .           PUT !- SD -! @^@@@4UX
)@@G@@         LINK  SAPTID . @^@@@4         SUPSYM ACENEX  @C@@@4         GOTUY
)@@G@@O  DAITPT .            ->NEXT STATE @[@@@4.     @[@@@4.     @[@@@4.     UZ
)@@G@@@#@@@4DAINPR   LABEL .  @E@@@4         IF    DAICNA,ON,DSATPL THEN,DAIPLVA
)@@G@@2 . ->NO ARITH    @B@@@4         SUPSYM ACSTEX .           SET !- @#@@@4VB
)@@G@@DAIPA2   LABEL .  @F@@@4         SET   DAICAR,ON,DSATPL .               VC
)@@G@@SET ARITHMETIC    @D@@@4         LINK  SAPTID .            PUT CONST IN VD
)@@G@@B CODE@D@@@4         BCL   LXPS,DAIPA7 .       IS IT COMPLEX CONST@#@@@4VE
)@@G@@DAIPA4   LABEL .  @B@@@4         SUPSYM ACENEX .           SET -! @C@@@4VF
)@@G@@         GOTO  DAITPT .            ->NEXT STATE @E@@@4DAIPA7   LABEL .  VG
)@@G@@                 POSSIBLY COMPLEX CONST   @C@@@4         LINK  SAPTAC . VH
)@@G@@           PUT SIGN     @F@@@4         IF    LXIDCN,OFF THEN,DAIPA9 . ->VI
)@@G@@NOPE, NOT IMAG PART     @#@@@4DAIPA8   LABEL .  @D@@@4         LSDP  X3,VJ
)@@G@@DLXID .          SEE IF COMPLEX     @B@@@4         LSDP X3,SDBCLK,X3 .  VK
)@@G@@     GET SD @ @@@4         USING SDSECT,X3 .    @G@@@4         IF    SDRVL
)@@G@@LCX,OFF,SDCLS1 THEN,DAIPA9 . ->ERROR, NOT COMPLEX     @D@@@4         LINVM
)@@G@@K  SAPTID .            PUT COMPLEX PART   @B@@@4         GOTO  DAIPA4 . VN
)@@G@@           SET -! @#@@@4DAIPA9   LABEL .  @C@@@4         FLINK X10,SAEB9VO
)@@G@@2 .        ERROR STATE  @C@@@4         LINK  EABK1 .             DELETE VP
)@@G@@SIGN  @E@@@4         GOTO  DAIPA4 .            SET ERROR MSG, PUT -!    VQ
)@@G@@@[@@@4.     @B@@@4DAINPS   LABEL .                   SIGN   @F@@@4      VR
)@@G@@   IF    DAICNA,ON,DSATPL THEN,DAIPL2 . ->NO ARITH ALLOWED  @D@@@4      VS
)@@G@@   STORE X9,DSATPK .         SAVE CURRENT STATE @E@@@4         LINK  SAGVT
)@@G@@BC .             GET CURRENT LOCATION     @B@@@4         LOAD  X9,A3 .  VU
)@@G@@           SAVE IT@B@@@4         SUPSYM ACSTEX .           SET !- @#@@@4VV
)@@G@@DAIPS4   LABEL .  @D@@@4         ADD   A14,ACUPL-ACBPL,I . UNARY OPERATIVW
)@@G@@ON    @D@@@4         LINK  SAPTAC .            PUT INTO B CODE    @B@@@4VX
)@@G@@         BCL   LXPS,DAIPS4 .       SIGN   @ @@@4         BCL   LXIDCN,DAVY
)@@G@@IPA2 .@ @@@4         BCL   LXIDDN,DAIPA2 .@B@@@4         FLINK X10,SAEB9VZ
)@@G@@2 .        ERROR  @C@@@4         LOAD  A3,X9 .             DELETE B CODEWA
)@@G@@@^@@@4         LINK  SAGSBC . @C@@@4         LOAD  X9,DSATPK .         RWB
)@@G@@ESTORE STATE@E@@@4         GOTO  DAINAZ .            ->NEXT TRANSFORMATIWC
)@@G@@ON    @#@@@4DAINBA   LABEL .  @D@@@4         LINK  EABK1 .             BWD
)@@G@@ACKUP- SUPPLY *   @#@@@4DAINSA   LABEL .  @D@@@4         FLINK X10,SAEB9WE
)@@G@@2 .        IMPROPER INITIAL   @ @@@4         GOTO  DAIPAS ...     @[@@@4WF
)@@G@@.     @ @@@4.        ITERATION FACTOR     @[@@@4.     @#@@@4DAINPF   LABWG
)@@G@@EL .  @F@@@4         LINK  SAGBC .            SAVE ADDR OF ( IN CASE NOTWH
)@@G@@ ITER @ @@@4         STORE  A3,DSATPF .   @D@@@4          SUPSYM  ACLPARWI
)@@G@@ .        ASSUME ITER FOR NOW @F@@@4         LINK  LXGET .             GWJ
)@@G@@ET INSIDE ITERATION START     @C@@@4         BCL,LXIDDN,DAIPF5 .       -WK
)@@G@@>DEC CONST  @H@@@4         SET   DAICSA,ON,DSATPL . .                   WL
)@@G@@ SET PROHIBIT STATIC    @#@@@4DAIPF5   LABEL .  @D@@@4         EXPR  ICDWM
)@@G@@SYA .            D=(SCL,ANY,ARI)    @B@@@4         GOTO  DAPRER .       WN
)@@G@@     =>FAIL @D@@@4         LINK  SAGBC .             SEE IF !- SD -!    WO
)@@G@@@C@@@4         SUB   A3,4,I .            POINT TO !-  @^@@@4         SLBWP
)@@G@@   A3,18    @^@@@4         SRB   A3,18    @D@@@4         IF    A3,NE,DSAWQ
)@@G@@TPF THEN,DAIPF7 . ->NO STATIC @A@@@4         SET   DAICSA,ON,DSATPL .   WR
)@@G@@@#@@@4DAIPF7   LABEL .  @D@@@4         LOADA X9,DAIITR .         SET ITEWS
)@@G@@RATION STATE@D@@@4         BNCL  LXRP,DAIPF8 . ->NOT ) SO NOT ITERATION WT
)@@G@@@D@@@4         LINK  SASPRP .            PUT ) OF ITERATION @A@5@4      WU
)@@G@@   SET   DAICSC,ON,DSATPL .   @D@@@4         GOTO  DAINAZ .            NWV
)@@G@@EXT TRANSFORMATION@E@@@4DAIPF8   LABEL .                   CHANGE ITERATWW
)@@G@@ION TO LIST @^@@@4         COUNT DSAITL . @E@@@4         FLINK X10,DAITPWX
)@@G@@R .        CHANGE ITER( TO LIST(    @^@@@4         GOTO  DAITPT . @#@@@4WY
)@@G@@DAINAP   LABEL .  @B@@@4         LINK  SAPTAC .          PUT (    @D@@@4WZ
)@@G@@         COUNT DSAITL .            UP PAREN COUNT     @H@@@4            XA
)@@G@@   GOTO                DAINCMS .           RESTART IN BEGIN STATE @[@@@4XB
)@@G@@.     @#@@@4DAINIX   LABEL .  @E@@@4         FLINK X10,DAITPR .         XC
)@@G@@CHANGE ITER( TO LIST(   @^@@@4         GOTO  DAINRP . @[@@@4.     @#@@@4XD
)@@G@@DAINIY   LABEL .  @ @@@4         FLINK  X10,DAITPR .  @^@@@4         GOTXE
)@@G@@O  DAINPC . @#@@@4DAINRP   LABEL .  @E@@@4         LINK  LXGET .        XF
)@@G@@     IGNORE CURRENT SYMBOL    @ @@@4         FLINK X9,DAIRPS .    @^@@@4XG
)@@G@@         GOTO  DAITPT . @#@@@4DAIRPS   LLOC .   @B@@@4         SUPSYM ACXH
)@@G@@RPAR .           SET ')'@B@@@4         BINDZ DSAITL,DAIN36 .      BASE  XI
)@@G@@@D@@@4         LOAD  A8,DSAITL .         DOWN COUNT BY 1    @^@@@4      XJ
)@@G@@   SUB   A8,1,I . @ @@@4         STORE A8,DSAITL .    @^@@@4         GOTXK
)@@G@@O  0,X9 .   @[@@@4.     @D@@@4DAINEX   LABEL .                   CLEAR PXL
)@@G@@AREN STACK  @C@@@4         SAERR SAEM08,SAE .        MISSING )    @ @@@4XM
)@@G@@         FLINK X9,DAIRPS .    @D@@@4         GOTO  DAINEX .            CXN
)@@G@@LEAR NEXT LEVEL   @[@@@4.     @F@@@4SAEB92   LLOC .                    IXO
)@@G@@MPROPER INITIAL ATTRIBUTE     @ @@@4         LOAD  A7,SAEM92,I .  @^@@@4XP
)@@G@@         GOTO  SAESE    @[@@@4.     @[@@@4.     @#@@@4DAITPR   LLOC  .  XQ
)@@G@@@E@@@5         SET   DAICAR,ON,DSATPL . SET ARITH AS FIRST IN LIST@D@@@4XR
)@@G@@         LOAD  A8,DSATPF .        GET PTR TO ITER(    @D@@@4         SSCXS
)@@G@@   A8,1 .             A8=ADDR,  SIGN=H2   @C@@@4         LOAD   X9,A8 . XT
)@@G@@          PUT IN X REG  @ @@@4         LOAD  A3,ACLLST,I .  @C@@@4      XU
)@@G@@   IF    A8,LT,0,I THEN,DASPR2 . ->H2     @^@@@4         USING WORD,X9  XV
)@@G@@@^@@@4         STORE A3,W1H1 .@^@@@4         GOTO  0,X10    @#@@@4DASPR2XW
)@@G@@   LABEL .  @^@@@4         STORE A3,W1H2  @^@@@4         GOTO  0,X10 .  XX
)@@G@@@[@@@4.     @[@@@4.     @#@@@4.        INPUT    @[@@@4.     @#@@@4DAINPTXY
)@@G@@   LOCAL .  @B@@@4         BATER STDAT2,SN2INP . ->NO INPUT @A@@@4      XZ
)@@G@@   SET   ST2INP,ON,STDAT2 .   @A@@@4         SET   SDIOIN,ON,SDIOAT .   YA
)@@G@@@B@@@4         GOTO  DAFLE2 . ->MERGE, FILE     @[@@@5.     @[@@@5.     YB
)@@G@@@#@@@5.        KEYED    @[@@@5.     @#@@@5DAKEYD   LOCAL .  @ @@@5      YC
)@@G@@   BATER STDAT2,SN2KEY  @D@@@5         SET   SDFLKY,ON,SDIOAT .    SET KYD
)@@G@@EYED FILE   @A@@@5         SET   ST2KEY,ON,STDAT2 .   @E@@@5         GOTYE
)@@G@@O  DAFLE2 .              -> MERGE WITH FILE ATTR@[@@@5.     @#@@@5.     YF
)@@G@@   OFFSET   @[@@@5.     @[@@@5.     @#@@@5DAOFST   LOCAL .  @D@@@5      YG
)@@G@@   UNSTK   X11 .      TEMP - NOT IMPLEMENTED    @^@@@5         GOTO    DYH
)@@G@@ANY   @[@@@5.     @[@@@5.     @#@@@5         ON    0  @E@@@5         IF YI
)@@G@@   STDAT+FH1,NZERO THEN,DEATER . ->SOME ATTR    @ @@@5         BATER STDYJ
)@@G@@AT4,ST4PTR  @C@@@5         LINK  DASPTR .        SET POINTER CLASS@A@@@5YK
)@@G@@         SET   ST4PTR,ON,STDAT4 .   @E@@@5         SET   SDPTOF,ON,SDCLSYL
)@@G@@1 .    OFFSET TYPE OF PTR     @F@@@5         LINK  DAPRET .            SYM
)@@G@@EE IF FIRST SCAN OF OFFSET    @B@@@5         GOTO  DAOFS1 .            NYN
)@@G@@OPE   @D@@@5         BNAC  ACLPAR,JMP .        NOT OFFSET(AREA)   @E@@@5YO
)@@G@@         LOADA A4,DAOFS2 .         SET EXPR RETURN POINT    @ @@@5      YP
)@@G@@   STORE A4,DSARET .    @ @@@5         MOVE  DSASDR,DSASRO,I@ @@@5      YQ
)@@G@@   MOVE  DSAXSD,ICDXC,I @C@@@5         STORE X4,DSATP3 .        SAVE STKYR
)@@G@@ PTR  @^@@@5         PEXPR ICDSLP   @C@@@5         JMP .                YS
)@@G@@     ->NO EXPR    @ @@@5         LOAD  X4,DSATP3 .    @D@@@5         SETYT
)@@G@@   ST4OFA,ON,STDAT4 .  SET OFFSET(AREA)   @C@@@5         JMP .          YU
)@@G@@           ->YUP- EXPR  @[@@@5.     @[@@@5.     @D@@@5DAOFS2   LABEL .  YV
)@@G@@                 SUBRUTINE OF EXPR  @C@@@5         LOAD  X3,DSSDPT .    YW
)@@G@@     OFFSET SD    @A@@@5         SET   SD5OFA,ON,SDCLS5 .   @ @@@5      YX
)@@G@@   STORE X4,SDOFPA .    @C@@@5         STORE X4,DSATPZ .          SAVE SYY
)@@G@@D     @D@@@5         LOAD  X3,X4 .             SET SD OF AREA     @D@@@5YZ
)@@G@@         LINK  DASETA .            TURN TO TYPE AREA  @D@@@5         GOTZA
)@@G@@O  EACNTD .            ->RETURN TO EXPR   @[@@@5.     @[@@@5.     @C@@@5ZB
)@@G@@DAOFS1   LABEL .                    NOT PASS 1  @B@@@5         IF    ST4ZC
)@@G@@OFA,OFF,STDAT4 THEN,JMP @A@@@5         SET   SD5OFA,ON,SDCLS5     @ @@@5ZD
)@@G@@         MOVE  SDOFPA,DSATPZ .@#@@@5         JMP .    @#@@@5         OFFZE
)@@G@@ .    @[@@@5.     @[@@@4.     @#@@@4.        OUTPUT   @[@@@4.     @#@@@4ZF
)@@G@@DAOUTP   LOCAL .  @B@@@4         BATER STDAT2,SN2OUT . ->NO OUTPUT@A@@@4ZG
)@@G@@         SET   ST2OUT,ON,STDAT2 .   @#@@@4DAOUT4   LABEL .  @A@@@4      ZH
)@@G@@   SET   SDIOOT,ON,SDIOAT .   @B@@@4         GOTO  DAFLE2 .            -ZI
)@@G@@>MERGE@[@@@4.     @[@@@4.     @[@@@4.     @#@@@4.        POINTER  @[@@@4ZJ
)@@G@@.     @#@@@4DAPTR    LOCAL .  @E@5@4         IF    STDAT+FH1,NZERO THEN,ZK
)@@G@@DEATER . -> PTR ILLEGAL @ @@@5         BATER STDAT1,SN1PTR .@E@@@5      ZL
)@@G@@   IF    STDAT2,NZERO THEN,DEATER . -> FILE ATTRS     @ @@@4         BATZM
)@@G@@ER STDAT4,ST4PTR .@D@@@4         LINK  DASPTR .            SET PTR ATTRIZN
)@@G@@BUTE  @A@@@4         SET   ST4PTR,ON,STDAT4 .   @#@@@4         JMP .    ZO
)@@G@@@[@@@4.     @[@@@4.     @#@@@4DASPTR*  LLOC .   @D@@@4         USING SDSZP
)@@G@@ECT,X3 .         SET PTR DATA TYPE  @ @@@4         LOAD  A3,SDCLS0 .    ZQ
)@@G@@@E@@@4         AND,U A3,0760 .           TURN OFF STORAGE TYPE    @^@5@4ZR
)@@G@@         LOAD  A3,A4 .  @C@5@4         OR,U  A3,SD0PTR .         SET POIZS
)@@G@@NTER  @C@@@5         ADD   A4,SD0PTR,I .         SET POINTER@ @@@4      ZT
)@@G@@   STORE A4,SDCLS0 .    @F@@@4         MOVE  SDRTC,SDRTPT,I .    SET PTRZU
)@@G@@ STORAGE CLASS SIZE     @C@@@4         LJMP .                    -> RETUZV
)@@G@@RN    @[@@@4.     @D@@@4DABPTR*  LOCAL .                   FIND (POINTERZW
)@@G@@)     @C@@@4         LOADA A3,DABPT1 .         SET PTR TEST @E@@@4      ZX
)@@G@@   STORE A3,DSARET . EXPR RETURNS HERE TO SET PTR TYPE@A@@@4         MOVZY
)@@G@@E  DSASDR,DSASRO,I .    @A@@@4         MOVE  DSAXSD,ICDXC,I .     @B@@@5ZZ
)@@G@@         LINK  SAGBC .      BCODE PTR TO (@D@@@5         ADD  A3,2,I .  AA
)@@G@@    SKIP ( !-. POINT TO SD    @B@@@5         STORE A3,DSATPK .  SAVE BCOAB
)@@G@@DE PTR@B@5@4         PEXPR ICDSYP.             (PTR)  @B@@@5         PEXAC
)@@G@@PR ICDSLP.             (PTR)  @^@@@4         JMP . ->NOPE   @A@@@5      AD
)@@G@@   LOAD  A3,DSSDPT .   GET SD @E@@@5         LOAD  A4,DSATPK .   PUT IN AE
)@@G@@SD OF BASED BCODE PTR   @ @@@5         STORE A4,SDBPTR,A3 . @B@@@4      AF
)@@G@@   JMP 1.                    -> YUP @[@@@4.     @#@@@4DABPT1   LABEL .  AG
)@@G@@@ @@@4         USING SDSECT,X3 .    @E@@@4         LOAD  X3,DSSDPT .    AH
)@@G@@     GET SD BEING DECLARED    @F@@@4         SET   SD3BSD,ON,SDCLS3 .  SAI
)@@G@@ET IMPLIED BASED VARIABLE     @F@5@4         STORE X4,SDBPTR .         SAJ
)@@G@@ET PTR FROM BASED SD TO PTR SD@^@@@4         LOAD  X3,X4 .  @F@@@4      AK
)@@G@@   LINK  DASPTR .            SET PTR DATA TYPE IN PTR SD    @E@@@4      AL
)@@G@@   GOTO  EACNTD .            RETURN TO EXPR ANALYZER  @[@@@4.     @[@@@4AM
)@@G@@.     @#@@@4.        PRINT    @[@@@4.     @#@@@4DAPRNT   LOCAL .  @D@@@4AN
)@@G@@         BATER STDAT2,SN2PRI . ->NO PRINT ALLOWED     @A@@@4         SETAO
)@@G@@   ST2PRI,ON,STDAT2 .   @A@@@4         SET   SDIOPR,ON,SDIOAT .   @D@@@4AP
)@@G@@         GOTO  DAOUT4 .            ->SET OUTPUT FILE  @[@@@4.     @[@@@5AQ
)@@G@@.     @[@@@5.     @#@@@4.        REAL     @[@@@4.     @#@@@4DAREAL   LOCAR
)@@G@@AL .  @^@@@4         GOTO  DACPX4 . @[@@@5.     @#@@@5.        RECORD   AS
)@@G@@@[@@@5.     @#@@@5DARECD   LOCAL .  @ @@@5         BATER STDAT2,SN2REC  AT
)@@G@@@A@@@5         SET   SDFLRC,ON,SDIOAT .   @A@@@5         SET   ST2REC,ONAU
)@@G@@,STDAT2 .   @G@@@5         GOTO  DAFLE2 .               -> MERGE WITH FIAV
)@@G@@LE PROCESSING     @[@@@4.     @#@@@4.        RETURNS  @[@@@4.     @D@@@4AW
)@@G@@DARTNS   LOCAL .                   RETURNS ATTRIBUTE  @ @@@4         LOAAX
)@@G@@D  A3,STDAT3 .    @E@@@4         AND,U A3,SN3RTN .         SEE IF RETURNAY
)@@G@@S ALLOWED   @E@@@4         LINK  DENTS .             CHECK FOR ALLOWABILAZ
)@@G@@ITY   @C@@@4         SET   ST3RTN,ON,STDAT3 .  SET RETURNS  @G@@@4      BA
)@@G@@   LINK  DAEN96 .            CHECK FOR ENTRY CHAIN (FACTORED)     @E@@@4BB
)@@G@@         LINK  DAEN92 .            CHECK FOR FIRST PASS     @F@@@4      BC
)@@G@@   GOTO  DART72 .            -> NOT FIRST PASS (FACTORED)   @D@@@4      BD
)@@G@@   LINK  SASPLP .            PUT ( IN B CODE    @D@@@4         MOVE  DSABE
)@@G@@TPL,0,I .        SET NO ATTR FOUND  @C@@@4         LOADA X4,DRVSV1 .    BF
)@@G@@     DUMMY ENTRY  @D@@@4         STORE X4,DSDIWL .         SET ENTRY ID BG
)@@G@@ENTRY @D@@@4         LA    A7,DAPRAM .         GET ATTRS FOR PROC @C@@@4BH
)@@G@@         STORE A7,STDAT .          SET ATTRS    @D@@@4         GOTO  DARBI
)@@G@@T20 .            ->GET ATTR LIST    @#@@@4DART21   LABEL .  @D@@@4      BJ
)@@G@@   MOVE  DSATPL,1,I .        SET VALID ATTR     @#@@@4DART20   LABEL .  BK
)@@G@@@D@@@4         BNCL  LXATTR,DART48 .     ->NOT ATTR, DONE   @D@@@4      BL
)@@G@@   BAC   ACVAR,DART36 .      ->VARYING ATTR     @#@@@4DART24   LABEL .  BM
)@@G@@@E@@@4         LINK  SADAT8 .            ADDR OF ATTR ROUTINE     @E@@@4BN
)@@G@@         LOAD  X4,DSDIWL .         RESET STK ENTRY ADDR     @C@@@4      BO
)@@G@@   LOAD  X3,DSSDPT .         RESET SD PTR @D@@@4         LOAD  X11,DSATPBP
)@@G@@2 .        GET ROUTINE ADDRESS@C@@@4         LINK  0,X11 .             PBQ
)@@G@@ROCESS ATTR @C@@@4         GOTO  DART21 .            ->NEXT ATTR  @D@@@4BR
)@@G@@         FLINK X10,SAEB76 .        OOPS! INVALID ATTR @C@@@4         GOTBS
)@@G@@O  DART20 .            ->NEXT ATTR  @[@@@4.     @C@@@4DART48   LABEL .  BT
)@@G@@                 END OF LIST  @D@@@4         LINK  SASPRP .            SBU
)@@G@@EE IF ) IN B CODE @E@@@4         IF    DSATPL,NZERO THEN,DART52 . ->SOMEBV
)@@G@@ ATTR FOUND @C@@@4         LINK  EABK1 .             DELETE )     @D@@@4BW
)@@G@@         SUB   X2,1,I .            DELETE 'RETURNS('  @E@@@4         FLIBX
)@@G@@NK X10,SAEB76 .        ILLEGAL RETURNS ATTR.    @#@@@4DART52   LABEL .  BY
)@@G@@@C@@@4         MOVE  DSDIWL,DSATPN .     RESET STACK  @E@@@4         GOTBZ
)@@G@@O  DAEN11 .            ->RETURN FROM DCL DRIVER @#@@@4DART36   LABEL .  CA
)@@G@@@G@@@4         IF    ST1STG,ON,STDAT1 THEN,DART24 . ->SAW CHAR OR BIT, VCB
)@@G@@AR OK @F@@@4         LINK  SADR38 .            SEE IF CHAR OR BIT IS NEXCC
)@@G@@T     @D@@@4         GOTO  DART20 .            ->NOPE. INVALID    @A@@@4CD
)@@G@@         GOTO  DART24 .         ->OK@C@@@4DART72   LABEL .              CE
)@@G@@     FACTORED ATTR@D@@@4         LOAD  X5,DSATPK .         GET PTR TO FICF
)@@G@@RST SD@ @@@4         USING SDSECT,X5 .    @F@@@4         LOAD  A3,SD2SP CG
)@@G@@.          MOVE SCALE, PREC, CLASS BYTES  @ @@@4         USING SDSECT,X3CH
)@@G@@ .    @ @@@4         STORE A3,SD2SP .     @ @@@4         USING SDSECT,X5CI
)@@G@@ .    @ @@@4         LOAD  A3,SDCLS .     @ @@@4         USING SDSECT,X3CJ
)@@G@@ .    @ @@@4         STORE A3,SDCLS .     @C@@@4         MOVE  STDAT,DRVCK
)@@G@@SV1+1 .    SET ATTR CTL @F@@@4         IF    SDDVA,ZERO THEN,DAEN11 .   CL
)@@G@@             ->NO D.V.  @C@@@4         LOAD  A7,3,I .            ALLOCATCM
)@@G@@E D.V.@^@@@4         LINK  DADV .   @ @@@4         LOAD  X5,DSATPK .    CN
)@@G@@@D@@@4         LOAD  X5,SDDVA,X5 .       POINT TO OLD D.V.  @F@@@4      CO
)@@G@@   LOAD  A3,W1H2+2,X5 .      MOVE B CODE PTR FROM OLD D.V.  @C@@@4      CP
)@@G@@   STORE A3,W1H2+2,X3 .      TO NEW D.V.  @#@@@4DAEN11   LABEL .  @C@@@4CQ
)@@G@@         MOVE  DSATP2,DSATPX .     RESET PTR    @C@@@4         JMP .    CR
)@@G@@                 ->RETURN     @[@@@4.     @[@@@4.     @^@@@4.        ENTCS
)@@G@@RY CONTROL  @F@@@4DAEN92   LLOC .                    CHECK FIRST PASS (FCT
)@@G@@ACTORED)    @B@@@4         BIND  DSAU1,LJMP . ->NOT PASS 1  @D@@@4      CU
)@@G@@   MOVE  DSAU1,1,I .         SET FIRSTTIME FLAG @ @@@4         STORE X4,CV
)@@G@@DSATPN .    @ @@@4         STORE X3,DSATPK .    @C@@@4         MOVE  DSACW
)@@G@@TPX,DSATP2 .     SAVE ATTR PTR@C@@@4         LJMP  1 .                 -CX
)@@G@@>RETURN     @[@@@4.     @[@@@4.     @#@@@4DAEN96   LLOC .   @C@@@4      CY
)@@G@@   LOAD  X5,DSATBK .         GET TOP BLOCK@#@@@4DAEN97   LABEL .  @ @@@4CZ
)@@G@@         USING STSBLK,X5 .    @E@@@4         IF    ICENPF,ON,STBTYP THENDA
)@@G@@,DAEN99 . ->PROC BLOCK  @E@@@4         IF    ICENBF,ON,STBTYP THEN,DAEN9DB
)@@G@@8 . ->BEGN BLOCK  @E@@@4         SUB   X5,SACBSW,I .       TRY NECT OUTEDC
)@@G@@R BLOCK     @^@@@4         GOTO  DAEN97 . @C@@@4DAEN98   LABEL .        DD
)@@G@@           BEGIN BLOCK  @^@@@4         UNSTK X11 .    @B@@@4         GOTDE
)@@G@@O  DEATER .            ->ERROR@#@@@4DAEN99   LABEL .  @E@@@4         SETDF
)@@G@@   SD4ENT,ON,SDCLS4 .  SET ENTRY TYPE IN SD     @E@@@4         SET   SDPDG
)@@G@@REN+SDBLUS,ON,SDCLS1 . ENTRY + USERFCN    @C@@@4         MOVE  SDCLS0,SDDH
)@@G@@0ENT,I .   ENTRY TYPE   @D@@@4         IF    SDFXFL,ON,SDCLS1 THEN,DAEN9DI
)@@G@@X . ->FLOAT @F@@@4         MOVE  SDRTC,1,I .         SET FIXED BINARY SIDJ
)@@G@@ZE (1 WORD) @#@@@4DAEN9X   LABEL .  @C@@@4         LOAD  A3,STDAT3 .    DK
)@@G@@     GET ATTR     @D@@@4         XOR,U A3,ST3ENT+ST3RTN .  SEE IF ATTR MDL
)@@G@@ATCH  @B@@@4         IF    A4,EQ,0,I THEN,LJMP . ->OK @E@@@4         IF DM
)@@G@@   SDPARM,ON,SDCLS2 THEN,LJMP . ->PARAMETER     @D@@@4         MOVE  SDADN
)@@G@@1DP,STBECH .     SET ENTRY CHAIN    @ @@@4         STORE X3,STBECH .    DO
)@@G@@@^@@@4         LJMP . ->RETURN@[@@@4.     @#@@@4.        STATIC   @[@@@4DP
)@@G@@.     @ @@@4         USING STSBLK,X4 .    @#@@@4DASTAT   LOCAL .  @ @@@4DQ
)@@G@@         BATER STDAT3,SN3STT  @E@@@4         LINK DEPARM .             NDR
)@@G@@O PARAMETER FOR STATIC  @A@@@4         SET   ST3STT,ON,STDAT3     @#@@@4DS
)@@G@@DASTT4   LABEL .  @ @@@4         SET   0760,OFF,SDCLS0@A@@@4         SETDT
)@@G@@   SD0STA,ON,SDCLS0     @#@@@4         JMP   .  @[@@@4.     @#@@@4.     DU
)@@G@@   STREAM   @[@@@4.     @#@@@4DASTRM   LOCAL .  @ @@@4         BATER STDDV
)@@G@@AT2,SN2STR  @A@@@4         SET   ST2STR,ON,STDAT2     @^@@@4         GOTDW
)@@G@@O  DAFLE2   @[@@@4.     @#@@@4.        VARYING  @[@@@4.     @#@@@4DAVAR DX
)@@G@@   LOCAL    @ @@@4         BATER STDAT1,SN1VAR  @A@@@4         SET   ST1DY
)@@G@@VAR,ON,STDAT1     @#@@@4         JMP .    @[@@@4.     @[@@@4.     @C@@@4DZ
)@@G@@DANVAR   LOCAL .                     NONVARYING @ @@@4         BATER STDEA
)@@G@@AT1,SN1VAR .@A@5@4         SET   ST1NVAR,ON,STDAT1 .  @A@@@5         SETEB
)@@G@@   ST1NVR,ON,STDAT1 .   @#@@@4         JMP .    @[@@@4.     @[@@@4.     EC
)@@G@@@#@@@4.        BIT-CHAR @[@@@4.     @#@@@4DABIT    LLOC  .  @C@@@4      ED
)@@G@@   MOVE  DSATP4,1,I .        BIT STRING   @#@@@4DACHAR   LOCAL .  @ @@@4EE
)@@G@@         BATER STDAT1,SN1STG .@ @@@4         BATER STDAT2,SN2FLA .@A@@@4EF
)@@G@@         SET   ST1STG,ON,STDAT1 .   @^@@@4.        STRING LENGTH  @#@@@5EG
)@@G@@DAARS2   LABEL .  @C@@@4         LINK  DAPRET .            CHECK PASS 1 EH
)@@G@@@C@@@4         GOTO  DALN36 .            ->NOT FIRST  @F@@@4         BNAEI
)@@G@@C  ACLPAR,DALN85 ^.      NO (EXPR), USE VALUE (1)     @B@@@4         LINEJ
)@@G@@K  SASPLP .            SET '('@B@@@4         BCL   LXMU,DALN12 .       -EK
)@@G@@>(*)  @C@@@4         MOVE  DSAD,ICDSYA,I .     SCL,ANY,ARI  @C@@@4      EL
)@@G@@   LINK  EAEXPR .            !- EXPR-!    @C@@@4         GOTO  DALN86 . EM
)@@G@@           -> ERROR     @B@@@4         GOTO  DALN16 .            -> OK  EN
)@@G@@@#@@@4DALN12   LABEL .  @D@@@4         LINK  SAGBC .               SET PEO
)@@G@@TR TO '*'   @C@@@4         STORE  A3,DSATPB .           SAVE IT   @G@@@4EP
)@@G@@         SUPSYM ACSTAR .            SET MISSING EXPR, USE '*' AS EXPR   EQ
)@@G@@@E@@@4         LINK   LXGET .             IGNORE *, POINT TO )    @#@@@4ER
)@@G@@DALN16   LABEL .  @B@@@4         LINK  SASPRP .            ')'    @#@@@4ES
)@@G@@DALN36   LABEL .  @ @@@4         LOAD  X5,DSSDPT .    @D@@@4         LOAET
)@@G@@D  A9,DSATPB .         POINT TO !-EXPR-!) @D@@@4         SUB   A9,1,I . EU
)@@G@@           POINT TO (!-EXPR-!)@C@@@4         BINDZ DSALND,DALN43 .     -EV
)@@G@@>NOT STR    @^@@@4         USING SDSECT,X5@D@@@4         STORE A9,SDA1BSEW
)@@G@@ .         BCODE OF LENGTH    @^@@@4         GOTO  DALN44 . @#@@@4DALN43EX
)@@G@@   LABEL  . @C@@@4         BINDZ SDNDIM,DALN48 .     ->NO DIM     @^@@@4EY
)@@G@@         LOAD  X3,SDDVA @^@@@4         GOTO  DALN50 . @#@@@4DALN48   LABEZ
)@@G@@EL .  @C@@@4         LOAD  A7,3,I .            3 DV WORDS   @^@@@4      FA
)@@G@@   LINK  DADV     @#@@@4DALN50   LABEL .  @^@@@4         USING WORD,X3  FB
)@@G@@@D@@@4         STORE A9,W1H2+2 .         SET BCODE OF LENGTH@#@@@4DALN44FC
)@@G@@   LABEL .  @^@@@4         LOAD  X3,DSSDPT@ @@@4         USING SDSECT,X3FD
)@@G@@ .    @E@@@4         IF    SD0ENT,OFF,SDCLS0 THEN,DALN62 . ->NOT ENTRY  FE
)@@G@@@D@@@4         LOAD  X5,DSALSB .         CONTAINING BLOCK . @D@@@4      FF
)@@G@@   LINK  DEDLDV    .         PUT ON DV CHAIN    @^@@@4         LOAD  X3,FG
)@@G@@DSSDPT@^@@@4         GOTO  DALN66 . @#@@@4DALN62   LABEL .  @ @@@4      FH
)@@G@@   USING SDSECT,X3 .    @ @@@4         SET   017,OFF,SDCLS0 @A@@@4      FI
)@@G@@   SET   SD0STR,ON,SDCLS0     @C@@@5         MOVE  SDNSPS,1,I .        SFJ
)@@G@@TRING LEAF  @#@@@4DALN66   LABEL .  @A@@@4         MOVE  SDRTC,SDRTST,I FK
)@@G@@.     @A@@@4         SET   SDARST,ON,SDCLS1 .   @ @@@4         MOVE  SD2FL
)@@G@@SP,0,I .    @B@@@4         BNIND DSATP4,DALN69 .     ->CHAR @A@@@4      FM
)@@G@@   SET   SDCHBT,ON,SDCLS1     @#@@@4DALN69   LABEL .  @#@@@4         JMPFN
)@@G@@ .    @[@@@5.     @[@@@5.     @F@@@5DAARSZ   LOCAL .                   EFO
)@@G@@NTRY POINT FOR AREA(SIZE)     @^@@@5         GOTO  DAARS2 . @[@@@5.     FP
)@@G@@@[@@@5.     @#@@@4DALNGR   LABEL .  @^@@@4         LOADA X5,DEATR2@#@@@4FQ
)@@G@@DALN64   LABEL    @^@@@4         LOAD  A3,DSATPE@^@@@4         LINK  SAGFR
)@@G@@SBC . @^@@@4         GOTO  0,X5     @#@@@4DALN85   LABEL .  @B@@@4      FS
)@@G@@   SUPSYM  ACLPAR .           '('   @#@@@4DALN86   LABEL .  @D@@@4      FT
)@@G@@   LINK  SAGBC .                SET PTR TO 1    @ @@@4         STORE A3,FU
)@@G@@DSATPB .    @B@@@4         LOAD  A8,ACSTEX+ICDSYA,I  !- 1 -!@#@@@4      FV
)@@G@@   PUTC     @^@@@4         LINK  SAPTON   @^@@@4         SUPSYM ACENEX  FW
)@@G@@@B@@@4         SUPSYM ACLPAR .             ')'  @^@@@4         GOTO  DALFX
)@@G@@N36   @[@@@4.     @#@@@4.        FLOAT    @[@@@4.     @#@@@4DAFLT    LOCFY
)@@G@@AL    @ @@@4         USING SDSECT,X3 .    @ @@@4         BATER STDAT1,SNFZ
)@@G@@1FFL  @A@@@4         SET   SDFXFL,ON,SDCLS1     @#@@@4DAFL04   LABEL .  GA
)@@G@@@A@@@4         SET   ST1FFL,ON,STDAT1     @#@@@4DAFL06   LABEL .  @C@5@4GB
)@@G@@         IF    ST1BIN,ON,STDAT1 THEN,DAPREC .   @A@5@4         SET   SDDGC
)@@G@@CBN,OFF,SDCLS1 .  @D@@@4.                                  PRECISION SUBGD
)@@G@@R.    @#@@@4DAPREC   LLOC  .  @B@@@4         BATER STDAT2,SN2FLA .     -GE
)@@G@@>FILE @B@@@4         LINK  DAPRET .            PASS1  @B@@@4         GOTGF
)@@G@@O  DAPR12 .            ->NO   @E@@@4         BAC   ACLPAR,DAPR33 .      GG
)@@G@@  ->NO SCALE OR PREC.   @D@@@4         MOVE  DSATP5,0,I .      CLEAR P IGH
)@@G@@NDICATOR    @B@@@4         GOTO  DAPR18 .            RETURN @#@@@4DAPR33GI
)@@G@@   LABEL .  @^@@@4         LINK  SAGBC .  @D@@@4         STORE A3,DSATPEGJ
)@@G@@ .         SAVE START OF (P,Q)@B@@@4         LINK  SAPTAC .            'GK
)@@G@@('    @C@@@4         BNCL  LXIDDN,DAPRER .     ->NOT CONST  @^@@@4      GL
)@@G@@   USING SDSECT,X4@ @@@4         LSDP  X4,DLXID .     @C@@@4         LOAGM
)@@G@@D  X4,SDBCLK,X4 .    SD POINTER     @C@@@4         MOVE  DSATP3,SDFXPT+1GN
)@@G@@+FQ4.  VALUE OF P @^@@@4         LINK  SAPTID   @B@@@4         BAC   ACRGO
)@@G@@PAR,DAPR10 .     ->')'  @B@@@4         LINK  SAPTCM              P,Q    GP
)@@G@@@B@@@4DAPR31   BNCL  LXIDDN,DAPR24 .     ->Q    @^@@@4         LSDP  X4,GQ
)@@G@@DLXID @ @@@4         LOAD  X4,SDBCLK,X4 . @ @@@4         LOAD  A8,SDFXPTGR
)@@G@@+1    @ @@@4         BINDZ DSATP4,DAPR32  @^@@@4         LOADN A8,A8    GS
)@@G@@@A@@@4DAPR32   STORE A8,DSATP4 .         Q@^@@@4         LINK  SAPTID   GT
)@@G@@@#@@@4DAPR10   LABEL .  @^@@@4         LINK  SASPRP . @#@@@4DAPR12   LABGU
)@@G@@EL .  @^@@@4         USING STSBLK,X4@C@@@4         LOAD  X4,DSDIWL .    GV
)@@G@@     CURRENT ID   @B@@@4         BINDZ DSATP3,DAPR18 .     ->NO P @C@@@4GW
)@@G@@         IF    ST1PRC,ON,STDAT1 THEN,DEATR4     @A@@@4         SET   ST1GX
)@@G@@PRC,ON,STDAT1     @^@@@4         LOAD  X3,DSSDPT@^@@@4         USING SDSGY
)@@G@@ECT,X3@ @@@4         MOVE  SDPREC,DSATP3  @B@@@4         BINDZ DSATP4,DAGZ
)@@G@@PR18  .    ->NO Q @ @@@4         MOVE  SDSCAL,DSATP4  @#@@@4DAPR18   LABHA
)@@G@@EL .  @#@@@4         JMP.     @D@@@4DAPR24   LABEL .                   EHB
)@@G@@XPR FOR P AND Q   @C@@@4         BNCL  LXPS,DAPRER .       ->NOT SIGN   HC
)@@G@@@B@@@4         BNAC  ACBPL,DAPR25 .      ->NOT +@#@@@4DAPR26   LABEL .  HD
)@@G@@@^@@@4         LINK  SAPTAC   @^@@@4         GOTO  DAPR31 . @#@@@4DAPR25HE
)@@G@@   LABEL .  @ @@@4         MOVE  DSATP4    .    @^@@@4         GOTO  DAPHF
)@@G@@R26   @#@@@4DAPRER   LABEL    @^@@@4         LOADA X5,DEATR4@^@@@4      HG
)@@G@@   GOTO  DALN64   @[@@@4.     @#@@@4DAPRET   LLOC .   @ @@@4         BNIHH
)@@G@@NDZ DSATP5,LJMP   @ @@@4         MOVE  DSATP5,1,I .   @#@@@4         LJMHI
)@@G@@P  1 .@#@@@4SAEB8X   LABEL .  @ @@@4         LOAD  A7,SAEM86,I .  @^@@@4HJ
)@@G@@         GOTO  DEBDCL . @#@@@4SAEB86   LABEL .  @ @@@4         LOAD  A7,HK
)@@G@@SAEM86,I .  @^@@@4         GOTO  SAESE .  @#@@@4DEBDCL   LABEL .  @D@5@4HL
)@@G@@         SET   040,ON,DSAECT  .   TURN OFF CORRECTED  @D@@@5         SETHM
)@@G@@   01000,ON,DSAECT  .   TURN OFF CORRECTED@^@@@4         GOTO  SAESE .  HN
)@@G@@@#@@@4SACNDN   LLOC .   @E@@@4         LOAD  A3,DSCNTI .         COUNT DHO
)@@G@@OWN ATTR LIST     @^@@@4         SUB   A3,1,I . @ @@@4         STORE A3,HP
)@@G@@DSCNTI .    @#@@@4         LJMP .   @^@@@4/.       ERROR MESSAGES @C@@@4HQ
)@@G@@SAEM08   EQU   30 .                MISSING )    @C@@@4SAEM05   EQU   33 HR
)@@G@@.                MISSING (    @C@@@4SAEM12   EQU   34 .                EHS
)@@G@@XTRA COMMA  @C@@@4SAEM26   EQU   29 .                EXTRA '('    @^@@@4HT
)@@G@@SAEM37   EQU   75 .     @^@@@4SAEM43   EQU   76 .     @C@@@4SAEM83   EQUHU
)@@G@@   77 .                TOO MANY ID'S@E@@@4SAEM85   EQU   78 .           HV
)@@G@@     IMPROPER STRUCTURE LEVEL @E@@@4SAEM96   EQU   62 .                MHW
)@@G@@ULTIPLE DECLARATION     @D@@@4SAEM97   EQU   66 .                IMPROPEHX
)@@G@@R VARYING   @D@@@4SAEM99   EQU   79 .               ATTRIBUTE ERROR     HY
)@@G@@@C@@@4SAEM100  EQU   60 .                NOT IN PLUM  @C@@@4SAEM101  EQUHZ
)@@G@@   73 .                UNIMPLEMENTED@D@@@4SAEM86   EQU   80 .           IA
)@@G@@     IMPROPER DIMENSION @D@@@4SAEM36   EQU   82 .                . IMPROIB
)@@G@@PER FACTOR  @E@@@4SAEM77   EQU   81 .                 IMPROPER CONVERSIOIC
)@@G@@N     @B@@@4SAEM81   EQU   84 .               EXTRA ) @F@@@4SAEM84   EQUID
)@@G@@   83 .               IMPROPER ATTRIBUTE IN STRUCTURE @F@@@4SAEM92   EQUIE
)@@G@@   85 .                IMPROPER INITIAL ATTRIBUTE     @F@@@5SAEMIT   EQUIF
)@@G@@   86 .                INITIAL ARRAY USED WITH SCALAR @H@@@5SAEMIA   EQUIG
)@@G@@   122 .               ITEMS IN INITIAL LIST NOT COM. WITH VAR    @E@@@5IH
)@@G@@SAEMNS   EQU   123 .               STATIC ATTR NOT PERMITTED@]@@@4      II
)@@G@@   END___DSATP4,DALN69 .     ->CHAR @A@@@4         SET   SDCHBT,ON,SDCLSIJ
)@@G@@*[S@@@*SDFF*@C@J@I.   COPYRIGHT 1975 BY UNIVERSITY OF MARYLAND    +@@@@[IK
)@@G@@@F@M@J 0)^@)CTJE[TELDC9CE))AC9A85^[]FC)E(IDDQC(METDE-T^[JC0)D([ELTD-[D1^IL
)@@G@@+@@@@@@C@@@M.   COPYRIGHT 1975 BY UNIVERSITY OF MARYLAND    @[@J@I.     IM
)@@G@@+@@@@[@[@M@J 0)^@)+@@@@@@[@@@M.     @D@J@I.   QUESTIONS CONCERNING THIS IN
)@@G@@SHOULD BE DIRECTED TO:  +@@@@[@H@M@J 0)^@)EDPC(NE-DD9IES)CTJD1#C(MD1DD1BIO
)@@G@@^[OD[DES)ETCD9PD-^^[]C*)C-DEL CTOC(^^[OD8'+@@@@@@D@@@M.   QUESTIONS CONCIP
)@@G@@ERNING THIS SHOULD BE DIRECTED TO:  @[@J@I.     +@@@@[@[@M@J 0)^@)+@@@@@IQ
)@@G@@@[@@@M.     @ @J@I.        MARVIN V. ZELKOWITZ  +@@@@[@B@M@J 0)^@)^@)^@)IR
)@@G@@^[HCDME1DD0)E0,^[UC(GDTJE9DE-U+@@@@@@ @@@M.        MARVIN V. ZELKOWITZ  IS
)@@G@@@B@J@I.        DEPARTMENT OF COMPUTER SCIENCE   +@@@@[@E@M@J 0)^@)^@)^@)IT
)@@G@@^[^C(KCDME-HC(IE))D9A^[#D9HE[PE- EK)ET#DD D1#C*)+@@@@@@B@@@M.        DEPIU
)@@G@@ARTMENT OF COMPUTER SCIENCE   @A@J@I.        UNIVERSITY OF MARYLAND     IV
)@@G@@+@@@@[@C@M@J 0)^@)^@)^@)^[PD1DE1 ELNDDOFC)D9A^[HCDMFDGCDIC))+@@@@@@A@@@MIW
)@@G@@.        UNIVERSITY OF MARYLAND     @B@J@I.        COLLEGE PARK, MARYLANIX
)@@G@@D 20742     +@@@@[@E@M@J 0)^@)^@)^@)^[#D9GD- C9 ^[KCDMDS?^[HCDMFDGCDIC))IY
)@@G@@AK0A84AK)^@)+@@@@@@B@@@M.        COLLEGE PARK, MARYLAND 20742     @[@J@IIZ
)@@G@@.     +@@@@[@[@M@J 0)^@)+@@@@@@[@@@M.     @G@J@I.        PERMISSION TO UJA
)@@G@@SE THESE LISTINGS AND THE COMPUTER PROGRAMS THEY+@@@@[@M@M@J 0)^@)^@)^@)JB
)@@G@@^[KC(MD(DETNDDJD0)E-J^[PET ^[OD[ ET ^[GDDNE-DD1BES)CDIC))E-CC*)CTJD(KE(OJC
)@@G@@C(M^[KELJC9MCDHES)E-CC(T+@@@@@@G@@@M.        PERMISSION TO USE THESE LISJD
)@@G@@TINGS AND THE COMPUTER PROGRAMS THEY@E@J@I.   REPRESENT IS GRANTED UNDERJE
)@@G@@ THE FOLLOWING CONDITIONS:    +@@@@[@I@M@J 0)^@)EL E[MC(NC(IE))DDN^[BEL[JF
)@@G@@D1OC(^^[PD1^C(M^[OD[ ^[AD9GD-JE9DD1B^[#D9IC-DE-DD9IES'+@@@@@@E@@@M.   REJG
)@@G@@PRESENT IS GRANTED UNDER THE FOLLOWING CONDITIONS:    @[@J@I.     +@@@@[JH
)@@G@@@[@M@J 0)^@)+@@@@@@[@@@M.     @G@J@I.        1. UNLIMITED USE MAY BE MADJI
)@@G@@E OF THE PROGRAMS REPRESENTED BY    +@@@@[@L@M@J 0)^@)^@)^@)^@1 0)E(ID-DJJ
)@@G@@D(DE- C))E(NC*)D([FC)CL ^[HCD^C*)D9A^[OD[ ^[KELJC9MCDHES)EL E[MC(NC(IE- JK
)@@G@@C))CLT+@@@@@@G@@@M.        1. UNLIMITED USE MAY BE MADE OF THE PROGRAMS JL
)@@G@@REPRESENTED BY    @G@J@I.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OJM
)@@G@@R UNIVERSITY OF MARYLAND+@@@@[@M@M@J 0)^@)E-CC(NC*)D-DETODDIC9N^[KELJE1DJN
)@@G@@C- C))E-CCDO^[OD[ ^[ICDHC*)E[GE(H^[JEK)E(IDDQC(METDE-T^[JC0)D([ELTD-[D1^JO
)@@G@@+@@@@@@G@@@M.   THESE LISTINGS PROVIDED THAT THE NAME PLUM OR UNIVERSITYJP
)@@G@@ OF MARYLAND@E@J@I.   PL/1 COMPILER REMAINS ASSOCIATED WITH THESE PROGRAJQ
)@@G@@MS.   +@@@@[@J@M@J 0)^@)E[G 81^[#D9HE[DD- EK)EL D([DDIES)CDNETJCTDCDOC(^JR
)@@G@@^[RDDOD@)E-CC(NC*)E[MD9BEL[D(N 0)^@)+@@@@@@E@@@M.   PL/1 COMPILER REMAINJS
)@@G@@S ASSOCIATED WITH THESE PROGRAMS.   @[@J@I.     +@@@@[@[@M@J 0)^@)+@@@@@JT
)@@G@@@[@@@M.     @F@J@I.        2. MODIFICATIONS MAY BE MADE TO THE LISTINGS JU
)@@G@@PROVIDED:   +@@@@[@K@M@J 0)^@)^@)^@)^@2 0)D(JC-DC1DCT[E-DD9IES)D([FC)CL JV
)@@G@@^[HCD^C*)E-J^[OD[ ^[GDDNE-DD1BES)E[MD9QDD^C(^BK)+@@@@@@F@@@M.        2. JW
)@@G@@MODIFICATIONS MAY BE MADE TO THE LISTINGS PROVIDED:   @[@J@I.     +@@@@[JX
)@@G@@@[@M@J 0)^@)+@@@@@@[@@@M.     @G@J@I.        (A) ANY RESULTING PROGRAM, JY
)@@G@@OR REPORT, PAPER OR DOCUMENTATION   +@@@@[@M@M@J 0)^@)^@)^@)^@*CC(^[[D1TJZ
)@@G@@^[MC(NE(GE-DD1B^[KELJC9MCDH ))D9M^[MC(KD9ME)?^[KCDKC(M^[JEK)C-JCTPD( D1OKA
)@@G@@CDODDJD0)^@)+@@@@@@G@@@M.        (A) ANY RESULTING PROGRAM, OR REPORT, PKB
)@@G@@APER OR DOCUMENTATION   @G@J@I.        DESCRIBING SUCH PROGRAM WILL CLEAKC
)@@G@@RLY INDICATE THAT THE PROGRAM +@@@@[@M@M@J 0)^@)^@)^@)^[^C(NCTMDD]DDIC8)KD
)@@G@@ETPCTC^[KELJC9MCDH^[RDDGD))CTGC([ELGFC)DDIC-DCT[E- ^[OD[[E))E-CC*)E[MD9BKE
)@@G@@EL[D*)+@@@@@@G@@@M.        DESCRIBING SUCH PROGRAM WILL CLEARLY INDICATEKF
)@@G@@ THAT THE PROGRAM @E@J@I.        IS A DIALECT OF PLUM OR IS DERIVED FROMKG
)@@G@@ PLUM, AND  +@@@@[@J@M@J 0)^@)^@)^@)^[DES)CC)C-DCDGC(#E))D9A^[KD-PD*)D9MKH
)@@G@@^[DES)C- ELDE1 C))C1MD9H^[KD-PD*?^[[D1^^@)+@@@@@@E@@@M.        IS A DIALKI
)@@G@@ECT OF PLUM OR IS DERIVED FROM PLUM, AND  @[@J@I.     +@@@@[@[@M@J 0)^@)KJ
)@@G@@+@@@@@@[@@@M.     @G@J@I.        (B) ALL SUCH MODIFICATIONS, OTHER THAN KK
)@@G@@TRIVIAL CORRECTIONS     +@@@@[@L@M@J 0)^@)^@)^@)^@*CK(^[[D-G^[NE(#D@)D(JKL
)@@G@@C-DC1DCT[E-DD9IES?^[JE-CC(M^[OD[[D0)E-MDDQDD[D))CTJELMC(#E-DD9IES)+@@@@@KM
)@@G@@@G@@@M.        (B) ALL SUCH MODIFICATIONS, OTHER THAN TRIVIAL CORRECTIONKN
)@@G@@S     @F@J@I.        OF ERRORS IN THE SOURCE PROGRAMS, SHALL BE REPORTEDKO
)@@G@@ AND  +@@@@[@K@M@J 0)^@)^@)^@)^[JC0)C(MELJELN^[DD0)E-CC*)ETJE(MCT ^[KELJKP
)@@G@@C9MCDHES?^[ND[[D-G^[]C*)EL E[JELOC(^^[[D1^+@@@@@@F@@@M.        OF ERRORSKQ
)@@G@@ IN THE SOURCE PROGRAMS, SHALL BE REPORTED AND  @G@J@I.        A BRIEF DKR
)@@G@@ESCRIPTION OF THE FEATURE ADDED SHALL BE SUBMITTED    +@@@@[@L@M@J 0)^@)KS
)@@G@@^@)^@)^[[^[]ELDC(A^[^C(NCTMDDKE-DD9I^[JC0)E-CC*)C1 CDOE(MC*)CD^C- C))ETCKT
)@@G@@CDGD))CL ^[NE(]D(DE-OC(^+@@@@@@G@@@M.        A BRIEF DESCRIPTION OF THE KU
)@@G@@FEATURE ADDED SHALL BE SUBMITTED    @C@J@I.        TO THE UNIVERSITY OF KV
)@@G@@MARYLAND, AND     +@@@@[@F@M@J 0)^@)^@)^@)^[OD8)E-CC*)E(IDDQC(METDE-T^[JKW
)@@G@@C0)D([ELTD-[D1^ ))CDIC))+@@@@@@C@@@M.        TO THE UNIVERSITY OF MARYLAKX
)@@G@@ND, AND     @[@J@I.     +@@@@[@[@M@J 0)^@)+@@@@@@[@@@M.     @F@J@I.     KY
)@@G@@   (C) NO PROGRAMS DERIVED FROM THESE LISTINGS SHALL BE SOLD+@@@@[@L@M@JKZ
)@@G@@ 0)^@)^@)^@)^@*CS(^[ID8)E[MD9BEL[D(N^[^C(MDDQC(^^[AELJD*)E-CC(NC*)D-DETOLA
)@@G@@DDIC9N^[ND[[D-G^[]C*)ETJD-^^@)+@@@@@@F@@@M.        (C) NO PROGRAMS DERIVLB
)@@G@@ED FROM THESE LISTINGS SHALL BE SOLD@G@J@I.        WITHOUT WRITTEN APPROLC
)@@G@@VAL FROM THE UNIVERSITY OF MARYLAND, AND  +@@@@[@M@M@J 0)^@)^@)^@)^[RDDOLD
)@@G@@D[JE(O^[RELDE-OC(I^[[E[KELJE1[D))C1MD9H^[OD[ ^[PD1DE1 ELNDDOFC)D9A^[HCDMLE
)@@G@@FDGCDIC)?^[[D1^^@)+@@@@@@G@@@M.        WITHOUT WRITTEN APPROVAL FROM THELF
)@@G@@ UNIVERSITY OF MARYLAND, AND  @[@J@I.     +@@@@[@[@M@J 0)^@)+@@@@@@[@@@MLG
)@@G@@.     @F@J@I.        (D) COPIES OF THESE PROGRAMS MAY BE TRANSMITTED TO LH
)@@G@@OTHER +@@@@[@L@M@J 0)^@)^@)^@)^@*C)(^[#D9KDD ES)D9A^[OD[ ET ^[KELJC9MCDHLI
)@@G@@ES)D([FC)CL ^[OEL[D1ND(DE-OC(^^[OD8)D9OD[ EK)^@)+@@@@@@F@@@M.        (D)LJ
)@@G@@ COPIES OF THESE PROGRAMS MAY BE TRANSMITTED TO OTHER @G@J@I.        LOCLK
)@@G@@ATIONS PROVIDED THAT SUCH TRANSMITTALS CLEARLY INDICATE     +@@@@[@L@M@JLL
)@@G@@ 0)^@)^@)^@)^[GD9#CDODDJD1N^[KELJE1DC- C))E-CCDO^[NE(#D@)E-MCDIETHDDOE-[LM
)@@G@@D-N^[#D- CDMD-T^[DD1^DD#CDOC*)+@@@@@@G@@@M.        LOCATIONS PROVIDED THLN
)@@G@@AT SUCH TRANSMITTALS CLEARLY INDICATE     @G@J@I.        WHETHER THE PROLO
)@@G@@GRAMS ARE EXACT COPIES OF THE UNIVERSITY OF     +@@@@[@L@M@J 0)^@)^@)^@)LP
)@@G@@^[RD[ E-CC(M^[OD[ ^[KELJC9MCDHES)CDMC*)C(SCD#E))CTJE[DC(N^[JC0)E-CC*)E(ILQ
)@@G@@DDQC(METDE-T^[JC0)+@@@@@@G@@@M.        WHETHER THE PROGRAMS ARE EXACT COLR
)@@G@@PIES OF THE UNIVERSITY OF     @E@J@I.        MARYLAND PLUM COMPILER OR ALS
)@@G@@RE MODIFICATIONS TO IT. +@@@@[@J@M@J 0)^@)^@)^@)^[HCDMFDGCDIC))E[GE(H^[#LT
)@@G@@D9HE[DD- EK)D9M^[[EL ^[HD9^DDADD#CDODDJD1N^[OD8)DDO 0)+@@@@@@E@@@M.     LU
)@@G@@   MARYLAND PLUM COMPILER OR ARE MODIFICATIONS TO IT. @[@J@I.     +@@@@[LV
)@@G@@@[@M@J 0)^@)+@@@@@@[@@@M.     @G@J@I.        3. THESE CONDITIONS ONLY APLW
)@@G@@PLY TO THE PLUM COMPILER ITSELF,    +@@@@[@L@M@J 0)^@)^@)^@)^@3 0)E-CC(NLX
)@@G@@C*)CTJD1^DDODDJD1N^[JD1GFC)CDKE[GFC)E-J^[OD[ ^[KD-PD*)CTJD(KDDGC(M^[DE-NLY
)@@G@@C(GC0?+@@@@@@G@@@M.        3. THESE CONDITIONS ONLY APPLY TO THE PLUM COLZ
)@@G@@MPILER ITSELF,    @F@J@I.   AND ARE NOT MEANT TO APPLY TO ANY PROGRAM WRMA
)@@G@@ITTEN USING PLUM. +@@@@[@L@M@J 0)^@)CDIC))CDMC*)D1JE))D( CDIE))E-J^[[E[KMB
)@@G@@D-T^[OD8)CDIFC)E[MD9BEL[D*)E9MDDOE- D0)E(NDDIC8)E[GE(H 0)^@)+@@@@@@F@@@MMC
)@@G@@.   AND ARE NOT MEANT TO APPLY TO ANY PROGRAM WRITTEN USING PLUM. @E@J@IMD
)@@G@@.   THE PURPOSE OF THESE CONDITIONS IS TO ALLOW ANY USER TO +@@@@[@J@M@JME
)@@G@@ 0)^@)E-CC*)E[PELKD9NC*)D9A^[OD[ ET ^[#D9IC-DE-DD9IES)DDN^[OD8)CDGD-JE8)MF
)@@G@@CDIFC)E(NC(M^[OD8)+@@@@@@E@@@M.   THE PURPOSE OF THESE CONDITIONS IS TO MG
)@@G@@ALLOW ANY USER TO @F@J@I.   EXPERIMENT WITH THE COMPILER AS LONG AS THE MH
)@@G@@RESULTING PRODUCT +@@@@[@L@M@J 0)^@)C(SE[ ELDD( D1O^[RDDOD@)E-CC*)CTJD(KMI
)@@G@@DDGC(M^[[ES)D-JD1B^[[ES)E-CC*)EL ETPD-ODDIC8)E[MD9^E(#E))^@)+@@@@@@F@@@MMJ
)@@G@@.   EXPERIMENT WITH THE COMPILER AS LONG AS THE RESULTING PRODUCT @G@J@IMK
)@@G@@.   IS NOT SOLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT DEVELOPED   ML
)@@G@@+@@@@[@M@M@J 0)^@)DDN^[ID9O^[ND9GC))CDIC))CDN^[GD9IC8)CDN^[DE))DDN^[FD1JMM
)@@G@@E9I^[OD[[E))E-CC*)E[MD9^E(#E))C- E1 D-JE[ C))^@)+@@@@@@G@@@M.   IS NOT SMN
)@@G@@OLD AND AS LONG AS IT IS KNOWN THAT THE PRODUCT DEVELOPED   @#@J@I.   FRMO
)@@G@@OM PLUM.    +@@@@[@^@M@J 0)^@)C1MD9H^[KD-PD*,^@)+@@@@@@#@@@M.   FROM PLUMP
)@@G@@M.    @[@J@I.     +@@@@[@[@M@J 0)^@)+@@@@@@[@@@M.     @[@J@I.     +@@@@[MQ
)@@G@@@[@M@J 0)^@)+@@@@@@[@@@M.     @[@J@I.     +@@@@[@[@M@J 0)^@)+@@@@@@[@@@MMR
)@@G@@.     @[@J@I.     +@@@@[@[@M@J 0)^@)+@@@@@@[@@@M.     @[@J@I.     +@@@@[MS
)@@G@@@[@M@J 0)^@)+@@@@@@[@@@M.     +@@@@[@^@M@J^@)^@)^@)^@)^[[F[M^))^@)+@@@@@MT
)@@G@@@#@@@M         AXR$     +@@@@[@^@M@J^@)^@)^@)^@)^[^CTGELB^@)+@@@@@@#@@@MMU
)@@G@@         DCLRG    @#@J@I         UNLIST   +@@@@[@^@M@J^@)^@)^@)^@)^[PD1GMV
)@@G@@DDNE))+@@@@@@#@@@M         UNLIST   @]@J@I@ADD PLTVDS +@@@@[@#@M@JC[[C-^MW
)@@G@@^[KD-OE1^ES)+@@@@@@]@@@M@ADD PLTVDS @]@J@I@ADD PLSAW  +@@@@[@#@M@JC[[C-^MX
)@@G@@^[KD-NCDR^@)+@@@@@@]@@@M@ADD PLSAW  @#@J@I         LIST     +@@@@[@^@M@JMY
)@@G@@^@)^@)^@)^@)^[GDDNE))^@)+@@@@@@#@@@M         LIST     @#@J@I         PLWMZ
)@@G@@ORD   +@@@@[@^@M@J^@)^@)^@)^@)^[KD-RD9MC))+@@@@@@#@@@M         PLWORD   NA
)@@G@@@#@J@I         PLAC     +@@@@[@^@M@J^@)^@)^@)^@)^[KD-[CS)^@)+@@@@@@#@@@MNB
)@@G@@         PLAC     @#@J@I         PLSD     +@@@@[@^@M@J^@)^@)^@)^@)^[KD-NNC
)@@G@@C))^@)+@@@@@@#@@@M         PLSD     @#@J@I         PLSYDS   +@@@@[@^@M@JND
)@@G@@^@)^@)^@)^@)^[KD-NFD^ES)+@@@@@@#@@@M         PLSYDS   @#@J@ISYON     CSENE
)@@G@@CT  3.+@@@@[@ @M@JETTD9I^@)^@)^[#ET CTO^@)AS,^@)+@@@@@@#@@@MSYON     CSENF
)@@G@@CT  3.@ @J@I/.       SIGNAL STATEMENT     +@@@@[@B@M@J 8,^@)^@)^@)^[NDDBNG
)@@G@@D1[D))ETOCDOC(HC(IE))^@)+@@@@@@ @@@M/.       SIGNAL STATEMENT     @#@J@INH
)@@G@@SASIGN*  LLOC .   +@@@@[@^@M@JET[ETDC9I K)^[GD-JCS) 0)+@@@@@@#@@@MSASIGNNI
)@@G@@*  LLOC .   @C@J@I         LINK  SYFCND .            GET CONDITION+@@@@[NJ
)@@G@@@G@M@J^@)^@)^@)^@)^[GDDIDS)^[NFDACTIC)) 0)^@)^@)^@)^@)^@)^[BC(O^[#D9IC-DNK
)@@G@@E-DD9I+@@@@@@C@@@M         LINK  SYFCND .            GET CONDITION@B@J@INL
)@@G@@         GOTO  SYSGN2 .            ->OOPS!+@@@@[@F@M@J^@)^@)^@)^@)^[BD9ONM
)@@G@@D8)^[NFDNC9IAK) 0)^@)^@)^@)^@)^@)^@!B1JD9KES-^@)+@@@@@@B@@@M         GOTNN
)@@G@@O  SYSGN2 .            ->OOPS!@E@J@I         GOTO  SSTEND .            -NO
)@@G@@>BACK TO DRIVER, DONE   +@@@@[@J@M@J^@)^@)^@)^@)^[BD9OD8)^[NETOC(IC)) 0)NP
)@@G@@^@)^@)^@)^@)^@)^@!B1]CD#DS)E-J^[^ELDE1 EK?^[^D9IC*)^@)+@@@@@@E@@@M      NQ
)@@G@@   GOTO  SSTEND .            ->BACK TO DRIVER, DONE   @[@J@I.     +@@@@[NR
)@@G@@@[@M@J 0)^@)+@@@@@@[@@@M.     @#@J@ISYSGN2   LABEL .  +@@@@[@^@M@JETTETBNS
)@@G@@D02^@)^[GCD]C(G^@,+@@@@@@#@@@MSYSGN2   LABEL .  @D@J@I         ADD   A13NT
)@@G@@,1,I .           SET 1 CONDITION    +@@@@[@H@M@J^@)^@)^@)^@)^[[C-^^@)^[[NU
)@@G@@AC3 )1 -D^@,^@)^@)^@)^@)^@)^[NC(O^@1^[#D9IC-DE-DD9I^@)+@@@@@@D@@@M      NV
)@@G@@   ADD   A13,1,I .           SET 1 CONDITION    @ @J@I         SAERR SAENW
)@@G@@MSG,SAE .   +@@@@[@B@M@J^@)^@)^@)^@)^[NCD ELM^[NCD D(NC8?ET[C*) 0)+@@@@@NX
)@@G@@@ @@@M         SAERR SAEMSG,SAE .   @E@J@I         SUPSYM ACCDER .      NY
)@@G@@     USE ERROR AS DEFAULT     +@@@@[@I@M@J^@)^@)^@)^@)^[NE(KETTD*)CD#CT^NZ
)@@G@@C(M^@,^@)^@)^@)^@)^@)^[PET ^[ ELMD9M^[[ES)C- C1[E(GE))+@@@@@@E@@@M      OA
)@@G@@   SUPSYM ACCDER .           USE ERROR AS DEFAULT     @C@J@I         GOTOB
)@@G@@O  SSTEND .            -> NEXT STMT +@@@@[@G@M@J^@)^@)^@)^@)^[BD9OD8)^[NOC
)@@G@@ETOC(IC)) 0)^@)^@)^@)^@)^@)^@!B0)D1 F[O^[NE-HE))+@@@@@@C@@@M         GOTOD
)@@G@@O  SSTEND .            -> NEXT STMT @[@J@I.     +@@@@[@[@M@J 0)^@)+@@@@@OE
)@@G@@@[@@@M.     @[@J@I.     +@@@@[@[@M@J 0)^@)+@@@@@@[@@@M.     @ @J@I/.    OF
)@@G@@   REVERT STATEMENT     +@@@@[@B@M@J 8,^@)^@)^@)^[MC(QC(ME))ETOCDOC(HC(IOG
)@@G@@E))^@)+@@@@@@ @@@M/.       REVERT STATEMENT     @#@J@ISARVRT*  LLOC .   OH
)@@G@@+@@@@[@^@M@JET[ELQELO K)^[GD-JCS) 0)+@@@@@@#@@@MSARVRT*  LLOC .   @#@J@IOI
)@@G@@SYRVR4   LABEL .  +@@@@[@^@M@JETTELQEK4^@)^[GCD]C(G^@,+@@@@@@#@@@MSYRVR4OJ
)@@G@@   LABEL .  @D@J@I         LINK  SYFCND .            GET FIRST CONDITIONOK
)@@G@@+@@@@[@I@M@J^@)^@)^@)^@)^[GDDIDS)^[NFDACTIC)) 0)^@)^@)^@)^@)^@)^[BC(O^[AOL
)@@G@@DDMETO^[#D9IC-DE-DD9I^@)+@@@@@@D@@@M         LINK  SYFCND .            GOM
)@@G@@ET FIRST CONDITION@I@J@I         GOTO  SYSGN2 .            ->OOPS . NO CON
)@@G@@ONDITION - USE ERROR AS DEFAULT     +@@@@[@O@M@J^@)^@)^@)^@)^[BD9OD8)^[NOO
)@@G@@FDNC9IAK) 0)^@)^@)^@)^@)^@)^@!B1JD9KES) 0)D1J^[#D9IC-DE-DD9I^@!^[PET ^[ OP
)@@G@@ELMD9M^[[ES)C- C1[E(GE))+@@@@@@I@@@M         GOTO  SYSGN2 .            -OQ
)@@G@@>OOPS . NO CONDITION - USE ERROR AS DEFAULT     @E@J@I         BNAC  ACCOR
)@@G@@OMA,SSTEND . -> NO COMMA, END OF STMT     +@@@@[@I@M@J^@)^@)^@)^@)^[]D1[OS
)@@G@@CS)^[[CT#D9HCC?ETNE- D1^^@,^@!B0)D1J^[#D9HD([ ))C(IC))D9A^[NE-HE))+@@@@@OT
)@@G@@@E@@@M         BNAC  ACCOMA,SSTEND . -> NO COMMA, END OF STMT     @C@J@IOU
)@@G@@         LINK  SASPCM .             PUT COMMA   +@@@@[@G@M@J^@)^@)^@)^@)OV
)@@G@@^[GDDIDS)^[NCDKE-#D*) 0)^@)^@)^@)^@)^@)^@)E[PE))CTJD(HCC)^@)+@@@@@@C@@@MOW
)@@G@@         LINK  SAPTCM .             PUT COMMA   @D@J@I         GOTO  SYROX
)@@G@@VR4 .             -> NEXT CONDITION +@@@@[@I@M@J^@)^@)^@)^@)^[BD9OD8)^[NOY
)@@G@@FDME1MA)) 0)^@)^@)^@)^@)^@)^@) *"^[IC(SE))CTJD1^DDODDJD0)^@)+@@@@@@D@@@MOZ
)@@G@@         GOTO  SYRVR4 .             -> NEXT CONDITION +@@@@[@A@M@J 8) 0)PA
)@@G@@^@)^@)^[JD0)ETOCDOC(HC(IE))^@)+@@@@@@^@@@M/ .      ON STATEMENT   +@@@@[PB
)@@G@@@^@M@JET[D9IETO K)^[GCD]C(G^@,+@@@@@@#@@@MSAONST*  LABEL .  +@@@@[@H@M@JPC
)@@G@@^@)^@)^@)^@)^[DC0)^@)^@2 -JD0?C-NCDJD1]^[OD[ D0?ET[C-GE)) 0)D1J^[JD0)F@)PD
)@@G@@D9I^@)+@@@@@@D@@@M         IF    2,ON,DSAONB THEN,SADLT . NO ON X ON    PE
)@@G@@+@@@@[@J@M@J^@)^@)^@)^@)^[GD9[C))^[[B@?A@?DC) 0)^@)^@)^@)^@)^@)^[NC(O^[KPF
)@@G@@D-[CT ^[AD9M^[]D-JCTF^[NC))^@)+@@@@@@E@@@M         LOAD  A8,0,I .       PG
)@@G@@     SET PLACE FOR BLOCK SD   +@@@@[@^@M@J^@)^@)^@)^@)^[KE(OCS) 0)+@@@@@PH
)@@G@@@#@@@M         PUTC .   +@@@@[@^@M@JETTD9IA@2^@)^[GCD]C(G^@,+@@@@@@#@@@MPI
)@@G@@SYON02   LABEL .  +@@@@[@G@M@J^@)^@)^@)^@)^[GDDIDS)^[NFDACTIC)) 0)^@)^@)PJ
)@@G@@^@)^@)^@)^[BC(O^[#D9IC-DE-DD9I+@@@@@@C@@@M         LINK  SYFCND .       PK
)@@G@@     GET CONDITION+@@@@[@H@M@J^@)^@)^@)^@)^[BD9OD8)^[NFDJD00AS) 0)^@)^@)PL
)@@G@@^@)^@)^@)^@!B1ID9IC*?^[PET ^[ ELMD9M+@@@@@@D@@@M         GOTO  SYON03 . PM
)@@G@@           ->NONE, USE ERROR  +@@@@[@G@M@J^@)^@)^@)^@)^[]D1[CS)^[[CT#D9HPN
)@@G@@CC?ETTD9IA@1^@,^@!B1 D1^ ))D1J^[#D(HCC)^@)+@@@@@@C@@@M         BNAC  ACCPO
)@@G@@OMA,SYON01 . ->END, NO CMMA   +@@@@[@A@M@J^@)^@)^@)^@)^[GDDIDS)^[NCDKE-#PP
)@@G@@D*) 0)+@@@@@@^@@@M         LINK  SAPTCM . +@@@@[@E@M@J^@)^@)^@)^@)^[BD9OPQ
)@@G@@D8)^[NFDJD00AK) 0) *"D1 F[O^[#D9IC-DE-DD9I+@@@@@@B@@@M         GOTO  SYOPR
)@@G@@N02 . ->NEXT CONDITION  +@@@@[@^@M@JETTD9IA@3^@)^[GCD]C(G^@,+@@@@@@#@@@MPS
)@@G@@SYON03   LABEL .  +@@@@[@I@M@J^@)^@)^@)^@)^[[C-^^@)^[[AC3 )1 -D^@,^@)^@)PT
)@@G@@^@)^@)^@)^[[C-^^@1^[HD9MC*)CTJD1^DDODDJD0)+@@@@@@E@@@M         ADD   A13PU
)@@G@@,1,I .           ADD 1 MORE CONDITION     +@@@@[@F@M@J^@)^@)^@)^@)^[NE(KPV
)@@G@@ETTD*)CD#CT^C(M^@,^@)^@)^@)^@)^@)^[NC(O^[ ELMD9M+@@@@@@C@@@M         SUPPW
)@@G@@SYM ACCDER .           SET ERROR    +@@@@[@B@M@J^@)^@)^@)^@)^[NCD ELM^[NPX
)@@G@@CD D(JAC?ET[C*)^@)+@@@@@@ @@@M         SAERR SAEMO1,SAE     +@@@@[@H@M@KPY
)@@G@@^@)^@)^@)^@)^[GDDIDS)^[GF[BC(O^@) 0)^@)^@)^@)^@)^@)^[BC(O^[IC(SE))E-JDT PZ
)@@G@@D0)^@)+@@@@@@D@@@M         LINK  LXGET  .            GET NEXT TOKEN     QA
)@@G@@+@@@@[@^@M@JETTD9IA@1^@)^[GCD]C(G^@,+@@@@@@#@@@MSYON01   LABEL .  +@@@@[QB
)@@G@@@F@M@J^@)^@)^@)^@)^[]D1[CS)^[[CTND1[E@?ETTD9IA@4^@,^@!B1ID9O^[ND1[E@)^@)QC
)@@G@@+@@@@@@B@@@M         BNAC  ACSNAP,SYON04 . ->NOT SNAP +@@@@[@H@M@J^@)^@)QD
)@@G@@^@)^@)^[[C-^^@)^[[AC3 )0A)0A@?DC) 0)^@)^@)^@)^[NC(O^[ND1[E@)E[MC(NC(IE))QE
)@@G@@+@@@@@@D@@@M         ADD   A13,0400,I .        SET SNAP PRESENT   +@@@@[QF
)@@G@@@A@M@J^@)^@)^@)^@)^[GDDIDS)^[NCDKE-[CS) 0)+@@@@@@^@@@M         LINK  SAPQG
)@@G@@TAC . +@@@@[@^@M@JETTD9IA@4^@)^[GCD]C(G^@,+@@@@@@#@@@MSYON04   LABEL .  QH
)@@G@@+@@@@[@G@M@J^@)^@)^@)^@)^[HD9QC*)^[^ET[D9ICK?AC?DC) 0)^@)^@)^@)^[NC(O^[JQI
)@@G@@D0)ETOD(O^@)+@@@@@@C@@@M         MOVE  DSAONB,1,I .        SET ON STMT  QJ
)@@G@@+@@@@[@J@M@J^@)^@)^@)^@)^[NE-JEL ^[SA8?C-NCDJCL#^@,^@)^@)^@)^@)^[NCDQC*)QK
)@@G@@E[OEK)E-J^[[CTJD0)CL#D9^C*)^@)+@@@@@@E@@@M         STORE X7,DSAOBC .    QL
)@@G@@     SAVE PTR TO ACON BCODE   +@@@@[@E@M@J 0)^@)^@)^@)^[]CD#^@)^[[CTNFDNQM
)@@G@@E)?ETNE- D02^@,^@!B0)ETTETOC(H+@@@@@@B@@@M.        BAC   ACSYST,SSTEN2 .QN
)@@G@@ -> SYSTEM  +@@@@[@H@M@J^@)^@)^@)^@)^[OD1  -P^[[AC4 -[CTNFDNE)!A@4A@0A@0QO
)@@G@@A@? LSA@) 0)C1PC-BC*)CD]D9QC*)+@@@@@@D@@@M         TNE,U A14,ACSYST-0400QP
)@@G@@000,*X0 . FUDGE ABOVE   +@@@@[@A@M@J^@)^@)^@)^@)^[E^@)^@)^[NETOC(IAK) 0)QQ
)@@G@@+@@@@@@^@@@M         J     SSTEN2 . +@@@@[@B@M@J 0)^@)^@)^@)^@)C(IC))D9AQR
)@@G@@^[[CLJE1 ^[AE(^C9 +@@@@@@ @@@M.         END OF ABOVE FUDGE  +@@@@[@E@M@JQS
)@@G@@^@)^@)^@)^@)^[]CD#^@)^[[CT]C9DD0?ETNE- D02^@,^@!B0)CLGD9#DS)+@@@@@@B@@@MQT
)@@G@@         BAC   ACBGIN,SSTEN2 . -> BLOCK   +@@@@[@L@M@J 0)^@)^@)^@)^@)^@)QU
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^[NDDHE(GCDOC*)CL C9DD0) *)C(IC))CDMD9PQV
)@@G@@D1^^[NE-HE))+@@@@@@G@@@M.                                  SIMULATE BEGIQW
)@@G@@N - END AROUND STMT     +@@@@[@H@M@J^@)^@)^@)^@)^[GDDIDS)^[NCDNE- D0) 0)QX
)@@G@@^@)^@)^@)^@)^@)^[ D1^^[#ELMC(IE))ETOD(O^@)+@@@@@@D@@@M         LINK  SASQY
)@@G@@TEN .            END CRRENT STMT    +@@@@[@F@M@J^@)^@)^@)^@)^[GDDIDS)^[NQZ
)@@G@@CDNE-NE*) 0)^@)^@)^@)^@)^@)^[IC(R^[NE-HE))+@@@@@@C@@@M         LINK  SASRA
)@@G@@TSU .            NEW STMT     +@@@@[@A@M@J^@)^@)^@)^@)^[GDDIDS)^[NCD[D-BRB
)@@G@@D0) 0)+@@@@@@^@@@M         LINK  SAALGN . +@@@@[@ @M@J^@)^@)^@)^@)^[BC(ORC
)@@G@@E[G^[SA8) 0)+@@@@@@^@@@M         GETPL X7 .     +@@@@[@B@M@J^@)^@)^@)^@)RD
)@@G@@^[NE(KETTD*)CD#CLBDDI 9DCS%DD#+@@@@@@ @@@M         SUPSYM ACBGIN/IC*IC  RE
)@@G@@+@@@@[@G@M@J^@)^@)^@)^@)^[GDDIDS)^[NCD]C9IAK) 0)^@)^@)^@)^@)^@)^[]C(BDDIRF
)@@G@@^[NE-HE))^@)+@@@@@@C@@@M         LINK  SABGN2 .            BEGIN STMT   RG
)@@G@@+@@@@[@B@M@J^@)^@)^@)^@)^[HD9QC*)^[^ET[D9ICK?A)?DC) 0)+@@@@@@ @@@M      RH
)@@G@@   MOVE  DSAONB,4,I .   +@@@@[@A@M@J^@)^@)^@)^@)^[BD9OD8)^[NETOC(IAK)^@)RI
)@@G@@+@@@@@@^@@@M         GOTO  SSTEN2   +@@@@[@^@M@J 8) 0)^@)^@)^[NFDNE- D*)RJ
)@@G@@+@@@@@@#@@@M/ .      SYSTEM   +@@@@[@^@M@JET[ETTETO K)^[GCD]C(G^@,+@@@@@RK
)@@G@@@#@@@MSASYST*  LABEL .  +@@@@[@J@M@J^@)^@)^@)^@)^[DC0)^@)^@1 -JC1A -^ET[RL
)@@G@@D9ICK)E-CC(I -NCD^D-O^@,^@!B1ID9O^[[C1OC(M^[JD0)ETOD(O+@@@@@@E@@@M      RM
)@@G@@   IF    1,OFF,DSAONB THEN,SADLT . ->NOT AFTER ON STMT+@@@@[@G@M@J^@)^@)RN
)@@G@@^@)^@)^[GD9[C))^[SAS?C-NCDJCL#^@,^@)^@)^@)^@)^[KE-M^[OD8)CD#D9I^@)+@@@@@RO
)@@G@@@C@@@M         LOAD  X3,DSAOBC .         PTR TO ACON  +@@@@[@A@M@J^@)^@)RP
)@@G@@^@)^@)^[PETDD1B^[RD9MC)?F@3^@)+@@@@@@^@@@M         USING WORD,X3  +@@@@[RQ
)@@G@@@C@M@J^@)^@)^@)^@)^[NC(O^@)^@0AK0A@?D9I -RADLAK) 0)^@)+@@@@@@ @@@M      RR
)@@G@@   SET   0200,ON,W1Q2 . +@@@@[@B@M@J^@)^@)^@)^@)^[HD9QC*)^[^ET[D9ICK?A@?RS
)@@G@@DC) 0)+@@@@@@ @@@M         MOVE  DSAONB,0,I .   +@@@@[@F@M@J^@)^@)^@)^@)RT
)@@G@@^[BD9OD8)^[NETOC(IC)) 0)^@)^@)^@)^@)^@)^@!B1IC(SE))^@)+@@@@@@B@@@M      RU
)@@G@@   GOTO  SSTEND .            ->NEXT @B@J@I/.       FIND CONDITION - PUT RV
)@@G@@IN BCODE    +@@@@[@E@M@J 8,^@)^@)^@)^[ADDIC))CTJD1^DDODDJD0) *)E[PE))DDIRW
)@@G@@^[]CTJC- ^@)+@@@@@@B@@@M/.       FIND CONDITION - PUT IN BCODE    @#@J@IRX
)@@G@@SYFCND   LOCAL .  +@@@@[@^@M@JETTC1#D1^^@)^[GD9#CDG^@,+@@@@@@#@@@MSYFCNDRY
)@@G@@   LOCAL .  @D@J@I         LOAD  A8,DLXIC .          GET ACODE TYPE     RZ
)@@G@@+@@@@[@H@M@J^@)^@)^@)^@)^[GD9[C))^[[B@?C-GF[DCS) 0)^@)^@)^@)^@)^[BC(O^[[SA
)@@G@@CTJC- ^[OFDKC*)^@)+@@@@@@D@@@M         LOAD  A8,DLXIC .          GET ACOSB
)@@G@@DE TYPE     @E@J@I         IF    A8,EQ,ACCDSI/IC,I THEN,SYFCN1 . ->ACODESC
)@@G@@ TYPE +@@@@[@J@M@J^@)^@)^@)^@)^[DC0)^@)^[[B@?C(L -[CT#C-NDC\DD# -D^[OD[ SD
)@@G@@D0?ETTC1#D01^@,^@!B1[CTJC- ^[OFDKC*)+@@@@@@E@@@M         IF    A8,EQ,ACCSE
)@@G@@DSI/IC,I THEN,SYFCN1 . ->ACODE TYPE @F@J@I         IF    A8,EQ,ACCNSI/ICSF
)@@G@@,I THEN,SYFCN2 . ->NO-ACODE TYPE    +@@@@[@K@M@J^@)^@)^@)^@)^[DC0)^@)^[[SG
)@@G@@B@?C(L -[CT#D1NDC\DD# -D^[OD[ D0?ETTC1#D02^@,^@!B1ID8!CD#D9^C*)E-TE[ ^@)SH
)@@G@@+@@@@@@F@@@M         IF    A8,EQ,ACCNSI/IC,I THEN,SYFCN2 . ->NO-ACODE TYSI
)@@G@@PE    @B@J@I         BAC   ACCHK,SYFCN3 . ->CHECK     +@@@@[@E@M@J^@)^@)SJ
)@@G@@^@)^@)^[]CD#^@)^[[CT#D[F -NFDACTIAS) 0) *"CTCC(#DS)^@)+@@@@@@B@@@M      SK
)@@G@@   BAC   ACCHK,SYFCN3 . ->CHECK     @B@J@I         BAC   ACNCHK,SYFCN5 .SL
)@@G@@ -> NOCHECK +@@@@[@F@M@J^@)^@)^@)^@)^[]CD#^@)^[[CTICTCDS?ETTC1#D05^@,^@!SM
)@@G@@B0)D1JCTCC(#DS)^@)+@@@@@@B@@@M         BAC   ACNCHK,SYFCN5 . -> NOCHECK SN
)@@G@@+@@@@[@E@M@J^@)^@)^@)^@)^[]CD#^@)^[[CTICDHC*?ETTC1#D06^@,^@!B0)D1[D( ^@)SO
)@@G@@+@@@@@@B@@@M         BAC   ACNAME,SYFCN6 . -> NAME    @^@J@I         JMPSP
)@@G@@ . ->OOPS   +@@@@[@A@M@J^@)^@)^@)^@)^[ED(K^@,^@!B1JD9KES)^@)+@@@@@@^@@@MSQ
)@@G@@         JMP . ->OOPS   @[@J@I.     +@@@@[@[@M@J 0)^@)+@@@@@@[@@@M.     SR
)@@G@@@[@J@I.     +@@@@[@[@M@J 0)^@)+@@@@@@[@@@M.     @D@J@ISYFCN2   LABEL .  SS
)@@G@@                 DISABLED CONDITION +@@@@[@I@M@JETTC1#D02^@)^[GCD]C(G^@,ST
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^[^DDNCD]D- C))CTJD1^DDODDJD0)^@)+@@@@@@D@@@MSU
)@@G@@SYFCN2   LABEL .                   DISABLED CONDITION @F@J@I         SUBSV
)@@G@@   A14,01000,I .       CHANGE NO-X TO X CONDITION     +@@@@[@K@M@J^@)^@)SW
)@@G@@^@)^@)^[NE(]^@)^[[AC4 )0AC0A@0 -D^@,^@)^@)^@)^[#D[[D1BC*)D1J (S^[OD8)F@)SX
)@@G@@CTJD1^DDODDJD0)^@)+@@@@@@F@@@M         SUB   A14,01000,I .       CHANGE SY
)@@G@@NO-X TO X CONDITION     @ @J@I         SAERR SAEMSI,SAE .   +@@@@[@B@M@JSZ
)@@G@@^@)^@)^@)^@)^[NCD ELM^[NCD D(NDC?ET[C*) 0)+@@@@@@ @@@M         SAERR SAETA
)@@G@@MSI,SAE .   +@@@@[@A@M@J^@)^@)^@)^@)^[BD9OD8)^[NFDACTIAC) 0)+@@@@@@^@@@MTB
)@@G@@         GOTO  SYFCN1 . +@@@@[@D@M@JETTC1#D06^@)^[GCD]C(G^@,^@)^@)^@)^@)TC
)@@G@@^@)^@)^@)^@)D1[D( +@@@@@@A@@@MSYFCN6   LABEL .                NAME+@@@@[TD
)@@G@@@C@M@J^@)^@)^@)^@)^[GD9[C))^[[AC4 -[CT#C-ICC?DC) 0)^@)+@@@@@@ @@@M      TE
)@@G@@   LOAD  A14,ACCDNA,I . +@@@@[@B@M@J^@)^@)^@)^@)^[NE-JEL ^[[AC4 -^D-SCD#TF
)@@G@@^@,^@)+@@@@@@ @@@M         STORE A14,DLXAC .    @#@J@ISYFCN1   LABEL .  TG
)@@G@@+@@@@[@^@M@JETTC1#D01^@)^[GCD]C(G^@,+@@@@@@#@@@MSYFCN1   LABEL .  @F@J@ITH
)@@G@@         LOAD  A9,DLXIF .          GET LOWER 9 BITS OF CONDITION  +@@@@[TI
)@@G@@@K@M@J^@)^@)^@)^@)^[GD9[C))^[[BC?C-GF[DC0) 0)^@)^@)^@)^@)^[BC(O^[GD9RC(MTJ
)@@G@@^@9^[]DDOES)D9A^[#D9IC-DE-DD9I+@@@@@@F@@@M         LOAD  A9,DLXIF .     TK
)@@G@@     GET LOWER 9 BITS OF CONDITION  @C@J@I         LINK  SAPTAC .       TL
)@@G@@     PUT IN B CODE@G@J@I         IF    A9,LT,(ACCDCD-ACCDSI),I THEN,SYFCTM
)@@G@@NX . -> NO PARM FOR COND+@@@@[@M@M@J^@)^@)^@)^@)^[DC0)^@)^[[BC?D-O -[CT#TN
)@@G@@C-#C)!CD#CT^ETD -D^[OD[ D0?ETTC1#D1T^@,^@!B0)D1J^[KCDMD*)C1JEK)CTJD1^^@)TO
)@@G@@+@@@@@@G@@@M         IF    A9,LT,ACCDCD-ACCDSI,I THEN,SYFCNY . -> NO PARTP
)@@G@@M FOR COND  +@@@@[@F@M@J^@)^@)^@)^@)^[GDDIDS)^[NCDKE-[CS) 0)^@)^@)^@)^@)TQ
)@@G@@^@)^[KE(O^[[CTJC- +@@@@@@C@@@M         LINK  SAPTAC .            PUT ACOTR
)@@G@@DE    @E@J@I         PEXPR ICDYYY .            TEMP TEMP TEMP TEMP TEMP TS
)@@G@@+@@@@[@J@M@J^@)^@)^@)^@)^[KC(SE[M^[DCT^FDTFC) 0)^@)^@)^@)^@)^@)^[OC(HE@)TT
)@@G@@E- D(K^[OC(HE@)E- D(K^[OC(HE@)+@@@@@@E@@@M         PEXPR ICDYYY .       TU
)@@G@@     TEMP TEMP TEMP TEMP TEMP @H@J@I.                                  FTV
)@@G@@IX ICDYYY ---------ICDYYY -----------     +@@@@[@N@M@J 0)^@)^@)^@)^@)^@)TW
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^[ADDS^[DCT^FDTFC) *! *! *! *! (DCT^FDTTX
)@@G@@FC) *! *! *! *! *! *)^@)+@@@@@@H@@@M.                                  FTY
)@@G@@IX ICDYYY ---------ICDYYY -----------     @B@J@I         GOTO  SYFCN4 . TZ
)@@G@@           OOPS   +@@@@[@E@L@J^@)^@)^@)^@)^[BD9OD8)^[NFDACTIA)) 0)^@)^@)UA
)@@G@@^@)^@)^@)^[JD9KES)@E@M@L^@)^@)^@)^@)^[BD9OD8)^[NFDACT^AC) 0)^@)^@)^@)^@)UB
)@@G@@^@)^[JD9KES)+@@@@@@B@@@M         GOTO  SYFCD1 .            OOPS   +@@@@[UC
)@@G@@@F@M@J^@)^@)^@)^@)^[BD9OD8)^[NFDACTIF@) 0)^@)^@)^@)^@)^@)^@)EL E-PELI^@)UD
)@@G@@+@@@@@@B@@@M         GOTO  SYFCNX .             RETURN+@@@@[@[@M@J 0)^@)UE
)@@G@@+@@@@@@[@@@M.     +@@@@[@^@M@JETTC1#D1T^@)^[GCD]C(G^@,+@@@@@@#@@@MSYFCNYUF
)@@G@@   LABEL .  +@@@@[@A@M@J^@)^@)^@)^@)^[GDDIDS)^[NCDKE-[CS) 0)+@@@@@@^@@@MUG
)@@G@@         LINK  SAPTAC . @G@J@ISYFCNX   LABEL .                          UH
)@@G@@             VALID RETURN     +@@@@[@L@M@JETTC1#D1S^@)^[GCD]C(G^@,^@)^@)UI
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^[QCDGDD^^[MC(OE(MD0)UJ
)@@G@@+@@@@@@G@@@MSYFCNX   LABEL .                                       VALIDUK
)@@G@@ RETURN     @D@J@I         ADD   A13,1,I .           ONE MORE PREFIX    UL
)@@G@@+@@@@[@H@M@J^@)^@)^@)^@)^[[C-^^@)^[[AC3 )1 -D^@,^@)^@)^@)^@)^@)^[JD1 ^[HUM
)@@G@@D9MC*)E[MC(ADDS^@)+@@@@@@D@@@M         ADD   A13,1,I .           ONE MORUN
)@@G@@E PREFIX    @#@J@I         JMP   1 .+@@@@[@ @M@J^@)^@)^@)^@)^[ED(K^@)^@1UO
)@@G@@^@,^@)+@@@@@@#@@@M         JMP   1 .@[@J@I.     +@@@@[@[@M@J 0)^@)+@@@@@UP
)@@G@@@[@@@M.     @[@J@I.     +@@@@[@[@M@J 0)^@)+@@@@@@[@@@M.     +@@@@[@H@M@LUQ
)@@G@@IT9G1<G)1^@)^[?GD+G(?^@,^@)^@)^@)^@)^@)^@)^@)^@)^@)^[(H(0IL\I[>IK) [>J[0UR
)@@G@@IK(^@)+@@@@@@D@@@MSYFCD1   LABEL .                   IMPROPER (EXPR)    US
)@@G@@+@@@@[@B@M@L^@)^@)^@)^@)^[3GD>IL2^@)IT-G(!GT= -3GD>^@)+@@@@@@ @@@M      UT
)@@G@@   SAERR  SAEMCD,SAE    @#@J@ISYFCN4   LABEL .  +@@@@[@^@M@JETTC1#D04^@)UU
)@@G@@^[GCD]C(G^@,+@@@@@@#@@@MSYFCN4   LABEL .  @G@J@I         LINK  EABK1 .  UV
)@@G@@           DELETE TYPE OF COND - NO EXPR FOUND  +@@@@[@M@M@J^@)^@)^@)^@)UW
)@@G@@^[GDDIDS)^[ CD]DS1^@,^@)^@)^@)^@)^@)^@)^[^C(GC(OC*)E-TE[ ^[JC0)CTJD1^^@!UX
)@@G@@^[ID8)C(SE[M^[AD9PD1^^@)+@@@@@@G@@@M         LINK  EABK1 .             DUY
)@@G@@ELETE TYPE OF COND - NO EXPR FOUND  @#@J@I         JMP .    +@@@@[@^@M@JUZ
)@@G@@^@)^@)^@)^@)^[ED(K^@,^@)+@@@@@@#@@@M         JMP .    @[@J@I.     +@@@@[VA
)@@G@@@[@M@J 0)^@)+@@@@@@[@@@M.     @#@J@ISYFCN5   LABEL .  +@@@@[@^@M@JETTC1#VB
)@@G@@D05^@)^[GCD]C(G^@,+@@@@@@#@@@MSYFCN5   LABEL .  @E@J@I         SUB   A14VC
)@@G@@,01000,I .       CHANGE NOCHECK TO CHECK  +@@@@[@J@M@J^@)^@)^@)^@)^[NE(]VD
)@@G@@^@)^[[AC4 )0AC0A@0 -D^@,^@)^@)^@)^[#D[[D1BC*)D1JCTCC(#DS)E-J^[#D[ CTF^@)VE
)@@G@@+@@@@@@E@@@M         SUB   A14,01000,I .       CHANGE NOCHECK TO CHECK  VF
)@@G@@@ @J@I         SAERR SAEMSI,SAE     +@@@@[@B@M@J^@)^@)^@)^@)^[NCD ELM^[NVG
)@@G@@CD D(NDC?ET[C*)^@)+@@@@@@ @@@M         SAERR SAEMSI,SAE     @#@J@ISYFCN3VH
)@@G@@   LABEL .  +@@@@[@^@M@JETTC1#D03^@)^[GCD]C(G^@,+@@@@@@#@@@MSYFCN3   LABVI
)@@G@@EL .  +@@@@[@G@M@J^@)^@)^@)^@)^[GDDIDS)^[NCDKE-[CS) 0)^@)^@)^@)E[PE))CTCVJ
)@@G@@C(#DS)DDI^[]CTJC- +@@@@@@C@@@M         LINK  SAPTAC .       PUT CHECK INVK
)@@G@@ BCODE@ @J@I         LOAD  A9,DLXIF .     @^@J@I         LINK  SAPTAC . VL
)@@G@@@C@J@I         LEXPR ICDYCY .            CHECK LIST   +@@@@[@G@M@J^@)^@)VM
)@@G@@^@)^@)^[GC(SE[M^[DCT^FD#FC) 0)^@)^@)^@)^@)^@)^[#D[ CTF^[GDDNE))^@)+@@@@@VN
)@@G@@@C@@@M         LEXPR ICDYCY .            CHECK LIST   @B@J@I         GOTVO
)@@G@@O  SYFCN4 .            OOPS   +@@@@[@E@M@J^@)^@)^@)^@)^[BD9OD8)^[NFDACTIVP
)@@G@@A)) 0)^@)^@)^@)^@)^@)^[JD9KES)+@@@@@@B@@@M         GOTO  SYFCN4 .       VQ
)@@G@@     OOPS   @C@J@I         GOTO  SYFCNX .            -> RETURN    +@@@@[VR
)@@G@@@F@M@J^@)^@)^@)^@)^[BD9OD8)^[NFDACTIF@) 0)^@)^@)^@)^@)^@)^@!B0)EL E-PELIVS
)@@G@@+@@@@@@C@@@M         GOTO  SYFCNX .            -> RETURN    +@@@@[@C@M@JVT
)@@G@@ 8,^@)^@)^@)^[#D9IC-DE-DD9I^[KEL C1DF@)C-MDDQC(M+@@@@@@A@@@M/.       CONVU
)@@G@@DITION PREFIX DRIVER    +@@@@[@^@M@JET[CTOD-K K)^[GCD]C(G^@,+@@@@@@#@@@MVV
)@@G@@SACTLP*  LABEL .  +@@@@[@K@M@J^@)^@)^@)^@)^[DC0)^@)^@0AC0A@?D9I -^ET[E[AVW
)@@G@@F@)E-CC(I -NCD#E-^ES,^@!B1ID9O^[[D-GD9RC(^^[DC0)F-IF))+@@@@@@F@@@M      VX
)@@G@@   IF    0100,ON,DSAPFX THEN,SACTDS. ->NOT ALLOWED IF \N\   +@@@@[@J@M@JVY
)@@G@@^@)^@)^@)^@)^[GD9[C))^[[AC4 -[CT#D-KEK?DC) 0)^@)^@)^[NC(O^[#D9IC-DE-DD9IVZ
)@@G@@^[GC(AE))E[[C(I^@)+@@@@@@E@@@M         LOAD  A14,ACCLPR,I .      SET CONWA
)@@G@@DITION LEFT PAEN  +@@@@[@H@M@J^@)^@)^@)^@)^[GDDIDS)^[NCDKE-[CS) 0)^@)^@)WB
)@@G@@^@)^@)^@)^[KE(O^[DD1OD8)CL#D9^C*)^@)+@@@@@@D@@@M         LINK  SAPTAC . WC
)@@G@@           PUT INTO BCODE     +@@@@[@I@M@J^@)^@)^@)^@)^[HD9QC*)^[^ET[CT^WD
)@@G@@D0?A@?DC) 0)^@)^@)^@)^[ID8)E[MC(ADDSC(N^[JD0)FD E))^@)+@@@@@@D@@@M      WE
)@@G@@   MOVE  DSACDN,0,I .        NO PREFIXES ON YET +@@@@[@H@M@J^@)^@)^@)^@)WF
)@@G@@^[HD9QC*)^[^ET[CT^C0?A@?DC) 0)^@)^@)^@)^[ID9IC*)D9AC0)C(DE-CC(M^@)+@@@@@WG
)@@G@@@D@@@M         MOVE  DSACDF,0,I .        NONE OFF EITHER    @D@@@M      WH
)@@G@@   MOVE  DSATPG+FQ3-FH2,0,I . NO PREFIXES YET   +@@@@[@J@M@J^@)^@)^@)^@)WI
)@@G@@^[GDDIDS)^[NCDBCL#^@,^@)^@)^@)^@)^@)^@)^[NCDQC*)E[OEK)E-J^[AD-[C8)CLTE- WJ
)@@G@@ES)^@)+@@@@@@E@@@M         LINK  SAGBC .             SAVE PTR TO FLAG BYWK
)@@G@@TES   +@@@@[@A@M@J^@)^@)^@)^@)^[NE-JEL ^[[AS?C-NCDOE@1+@@@@@@^@@@M      WL
)@@G@@   STORE A3,DSATP1+@@@@[@H@M@J^@)^@)^@)^@)^[GD9[C))^[[B@?A@?DC) 0)^@)^@)WM
)@@G@@^@)^@)^@)^[NC(O^[KD-[CT ^[CD9GC- ELN+@@@@@@D@@@M         LOAD  A8,0,I . WN
)@@G@@           SET PLACE HOLDERS  +@@@@[@^@M@J^@)^@)^@)^@)^[KE(OCS) 0)+@@@@@WO
)@@G@@@#@@@M         PUTC .   +@@@@[@^@M@J^@)^@)^@)^@)^[KE(OCS) 0)+@@@@@@#@@@MWP
)@@G@@         PUTC .   +@@@@[@^@M@JET[CTKF@6^@)^[GCD]C(G^@,+@@@@@@#@@@MSACPX6WQ
)@@G@@   LABEL .  +@@@@[@H@M@J^@)^@)^@)^@)^[GDDIDS)^[NCD#C)) 0)^@)^@)^@)^@)^@)WR
)@@G@@^@)^[BC(O^[#D9IC-DE-DD9IES)^@)+@@@@@@D@@@M         LINK  SACD .         WS
)@@G@@     GET CONDITIONS     +@@@@[@F@M@J^@)^@)^@)^@)^[BD9OD8)^[NCD#E@2A))^@)WT
)@@G@@^@)^@)^@)^@)^@)^@,^@!B0)C1[DDG+@@@@@@C@@@M         GOTO  SACP24         WU
)@@G@@     . -> FAIL    +@@@@[@H@M@J^@)^@)^@)^@)^[HD9QC*)^[^ET[E-KC8:C1LAS!C1CWV
)@@G@@AK?AC?DC) 0)^@)^[NE(#CT ETN^[DD1^ 0)+@@@@@@D@@@M         MOVE  DSATPG+FQWW
)@@G@@3-FH2,1,I .    SUCCESS IND.   +@@@@[@H@M@J^@)^@)^@)^@)^[]CD#^@)^[[CTME[[WX
)@@G@@EK?ET[CTKAC2^@,^@)^@)^@!B0)D1 F[O^[NFDH^@.^@$ C$+@@@@@@D@@@M         BACWY
)@@G@@   ACRPAR,SACP12 .     -> NEXT SYM = ')'  +@@@@[@H@M@J^@)^@)^@)^@)^[]CD#WZ
)@@G@@^@)^[[CT#D9GD0?ET[CTKAC2^@,^@)^@)^@!B0)D1 F[O^[NFDH^@.^@$BK$+@@@@@@D@@@MXA
)@@G@@         BAC   ACCOLN,SACP12 .     -> NEXT SYM = ':'  +@@@@[@H@M@J^@)^@)XB
)@@G@@^@)^@)^[GDDIDS)^[NCDBCL#^@,^@)^@)^@)^@)^@)^@)^[NCDQC*)CL#D9^C*)E[JES)^@)XC
)@@G@@+@@@@@@D@@@M         LINK  SAGBC .             SAVE BCODE POS     +@@@@[XD
)@@G@@@B@M@J^@)^@)^@)^@)^[NE-JEL ^[[AS?C-NCDOE@3^@,^@)+@@@@@@ @@@M         STOXE
)@@G@@RE A3,DSATP3 .    +@@@@[@F@M@J^@)^@)^@)^@)^[GDDIDS)^[NCDKE-#D*) 0)^@)^@)XF
)@@G@@^@)^@)^@)^[KE(O^[#D9HD([+@@@@@@C@@@M         LINK  SAPTCM .            PXG
)@@G@@UT COMMA    +@@@@[@G@M@J^@)^@)^@)^@)^[BD9OD8)^[NCD#E[SA0) 0)^@)^@)^@)^@)XH
)@@G@@^@)^@!B0)D1 F[O^[#D9HD([+@@@@@@C@@@M         GOTO  SACPX6 .            -XI
)@@G@@> NEXT COMMA+@@@@[@^@M@JET[CTKAC2^@)^[GCD]C(G^@,+@@@@@@#@@@MSACP12   LABXJ
)@@G@@EL .  +@@@@[@F@M@J^@)^@)^@)^@)^[GDDIDS)^[NCDNE[ME@) 0)^@)^@)^@)^@)^@)^[KXK
)@@G@@E(O^@$ C$^@)+@@@@@@B@@@M         LINK  SASPRP .            PUT ')'+@@@@[XL
)@@G@@@I@M@J^@)^@)^@)^@)^[GDDIDS)^[NCDBCL#^@,^@)^@)^@)^@)^@)^@)^[NCDQC*)CTPELMXM
)@@G@@C(IE))D-JCT[E-DD9I+@@@@@@E@@@M         LINK  SAGBC .             SAVE CUXN
)@@G@@RRENT LOCATION    +@@@@[@B@M@J^@)^@)^@)^@)^[NE-JEL ^[[AS?C-NCDOE@2^@,^@)XO
)@@G@@+@@@@@@ @@@M         STORE A3,DSATP2 .    +@@@@[@K@M@J^@)^@)^@)^@)^[GD9[XP
)@@G@@C))^[[AS?C-NCDOE@1^@,^@)^@)^@)^@)^[NC(O^[KE-M^[OD8)C1GCDBES)D9I^[[D1^^[JXQ
)@@G@@C1A^@)+@@@@@@F@@@M         LOAD  A3,DSATP1 .         SET PTR TO FLAGS ONXR
)@@G@@ AND OFF    +@@@@[@A@M@J^@)^@)^@)^@)^[GDDIDS)^[NCDBET]CS) 0)+@@@@@@^@@@MXS
)@@G@@         LINK  SAGSBC . +@@@@[@B@M@J^@)^@)^@)^@)^[GD9[C))^[[B@?C-NCD#C-IXT
)@@G@@^@,^@)+@@@@@@ @@@M         LOAD  A8,DSACDN .    +@@@@[@L@M@J^@)^@)^@)^@)XU
)@@G@@^[KE(OCS) 0)^@)^@)^@)^@)^@)^@)^@)^@)^@)^[ D1[CLGC(^^[KEL C1DF[ C))C1JD-GXV
)@@G@@D9RDDIC8)CD#CTGE[M+@@@@@@G@@@M         PUTC .                    ENABLEDXW
)@@G@@ PREFIXED FOLLOWING ACCLPR    +@@@@[@H@M@J^@)^@)^@)^@)^[GD9[C))^[[B@?C-NXX
)@@G@@CD#C-A^@,^@)^@)^@)^@)^[^DDNCD]D- C))E[MC(ADDSC(N+@@@@@@D@@@M         LOAXY
)@@G@@D  A8,DSACDF .         DISABLED PREFIXES  +@@@@[@^@M@J^@)^@)^@)^@)^[KE(OXZ
)@@G@@CS) 0)+@@@@@@#@@@M         PUTC .   +@@@@[@J@M@J^@)^@)^@)^@)^[GD9[C))^[[YA
)@@G@@AS?C-NCDOE@2^@,^@)^@)^@)^@)^[MC(NC(O^[#E(MEL D1O^[KE(OCS)E[OEK)^@)+@@@@@YB
)@@G@@@E@@@M         LOAD  A3,DSATP2 .         RESET CURRENT PUTC PTR   +@@@@[YC
)@@G@@@A@M@J^@)^@)^@)^@)^[GDDIDS)^[NCDBET]CS) 0)+@@@@@@^@@@M         LINK  SAGYD
)@@G@@SBC . +@@@@[@H@M@J^@)^@)^@)^@)^[DC0)^@)^@0A)0 -JD0?C-NCDKC1S^[OD[ D0?ET[YE
)@@G@@C(]A@2^@,^@!B0)C(MELJEK)+@@@@@@D@@@M         IF    040,ON,DSAPFX THEN,SAYF
)@@G@@EB02 . -> ERROR   +@@@@[@I@M@J^@)^@)^@)^@)^[BD9OD8)^[NCDGCK0A0) 0)^@)^@)YG
)@@G@@^@)^@)^@)^@!B0)E[PE))^8;^8)DDI^[]^[#D9^C*)+@@@@@@E@@@M         GOTO  SALYH
)@@G@@B06 .            -> PUT ';' IN B CODE     +@@@@[@^@M@JET[CTKAK4^@)^[GCD]YI
)@@G@@C(G^@,+@@@@@@#@@@MSACP24   LABEL .  +@@@@[@I@M@J^@)^@)^@)^@)^[]D1DD1^^[^YJ
)@@G@@ET[E-KC8:C1LAS!C1CAK?ET[CTICTK^@,^@!B0)C- D- E- ^[KEL C1DF@)+@@@@@@E@@@MYK
)@@G@@         BNIND DSATPG+FQ3-FH2,SACNCP . -> DELETE PREFIX     +@@@@[@B@M@JYL
)@@G@@^@)^@)^@)^@)^[GD9[C))^[[AS?C-NCDOE@3^@,^@)+@@@@@@ @@@M         LOAD  A3,YM
)@@G@@DSATP3 .    +@@@@[@A@M@J^@)^@)^@)^@)^[GDDIDS)^[NCDBET]CS) 0)+@@@@@@^@@@MYN
)@@G@@         LINK  SAGSBC . +@@@@[@A@M@J^@)^@)^@)^@)^[BD9OD8)^[NCD#E@1AK) 0)YO
)@@G@@+@@@@@@^@@@M         GOTO  SACP12 . +@@@@[@[@M@J 0)^@)+@@@@@@[@@@M.     YP
)@@G@@+@@@@[@F@M@J 0)^@)^@)^@)^[NCD#C))^[#D[ CTF^[JEK)D1J^[#D[ CTF^[KEL C1DF[ YQ
)@@G@@ES)^@)+@@@@@@B@@@M.        SACD  CHECK OR NO CHECK PREFIXES +@@@@[@^@M@JYR
)@@G@@ET[CT^^@)^@)^[GD9#CDG^@,+@@@@@@#@@@MSACD     LOCAL .  +@@@@[@J@M@J^@)^@)YS
)@@G@@^@)^@)^[GD9[C))^[[B@?C-GF[DCS) 0)^@)^@)^@)^@)^[NC( ^[DC0)CTJD1^DDODDJD0)YT
)@@G@@E[MC(ADDS^@)+@@@@@@E@@@M         LOAD  A8,DLXIC .          SEE IF CONDITYU
)@@G@@ION PREFIX  +@@@@[@J@M@J^@)^@)^@)^@)^[DC0)^@)^[[B@?C(L -[CT#C-NDC\DD# -DYV
)@@G@@^[OD[ D0?ETTCT^D9I^@,^@!B0)E[MC(ADDS^[JD0)+@@@@@@E@@@M         IF    A8,YW
)@@G@@EQ,ACCDSI/IC,I THEN,SYCDON . -> PREFIX ON +@@@@[@J@M@J^@)^@)^@)^@)^[DC0)YX
)@@G@@^@)^[[B@?C(L -[CT#D1NDC\DD# -D^[OD[ D0?ETTCT^D9A^@,^@!B0)E[MC(ADDS^[JC1AYY
)@@G@@+@@@@@@E@@@M         IF    A8,EQ,ACCNSI/IC,I THEN,SYCDOF . -> PREFIX OFFYZ
)@@G@@+@@@@[@F@M@J^@)^@)^@)^@)^[]CD#^@)^[[CT#D[F -NCD#C)0AC) 0)^@)^@)^@!B0)CTCZA
)@@G@@C(#DS)+@@@@@@C@@@M         BAC   ACCHK,SACD01 .      -> CHECK     +@@@@[ZB
)@@G@@@G@M@J^@)^@)^@)^@)^[]CD#^@)^[[CTICTCDS?ET[CT^A@1^@,^@)^@)^@!B0)D1JCTCC(#ZC
)@@G@@DS)^@)+@@@@@@C@@@M         BAC   ACNCHK,SACD01 .     -> NOCHECK   +@@@@[ZD
)@@G@@@^@M@JET[CT^A@2^@)^[GCD]C(G^@,+@@@@@@#@@@MSACD02   LABEL .  +@@@@[@K@M@JZE
)@@G@@^@)^@)^@)^@)^[AD-DD1F^[SAC0 -NCD CK0A0) 0)^@)^@)^@)^@!B0)DDHE[MD9KC(M^[#ZF
)@@G@@D[ CTF^[#D9IC-DE-DD9I^@)+@@@@@@F@@@M         FLINK X10,SAEB06 .        -ZG
)@@G@@> IMPROPER CHECK CONDITION    +@@@@[@G@M@K^@)^@)^@)^@)^[GDDIDS)^[GF[BC(OZH
)@@G@@^@,^@)^@)^@)^@)^@)^@)^[DC9ID9MC*)E-JDT D0)+@@@@@@C@@@M         LINK  LXGZI
)@@G@@ET .             IGNORE TOKEN +@@@@[@C@M@J^@)^@)^@)^@)^[ED(K^@,^@!B0)C1[ZJ
)@@G@@DDG^[MC(OE(MD0)^@)+@@@@@@ @@@M         JMP . -> FAIL RETURN +@@@@[@^@M@JZK
)@@G@@ET[CT^A@1^@)^[GCD]C(G^@,+@@@@@@#@@@MSACD01   LABEL .  +@@@@[@J@M@J^@)^@)ZL
)@@G@@^@)^@)^[GDDIDS)^[NCDKE-[CS) 0)^@)^@)^@)^@)^@)^[KE(O^[#D9IC-DE-DD9I^[DD1OZM
)@@G@@D8)CK)CTJC- +@@@@@@E@@@M         LINK  SAPTAC .            PUT CONDITIONZN
)@@G@@ INTO B CODE+@@@@[@G@M@J^@)^@)^@)^@)^[HD9QC*)^[^ET[C)?DD#C-TCTT -D^@,^@)ZO
)@@G@@^@)^@*CDIFC?CTCDS?CDIFC(+@@@@@@C@@@M         MOVE  DSAD,ICDYCY,I .     (ZP
)@@G@@ANY,CHK,ANY)+@@@@[@G@M@J^@)^@)^@)^@)^[GDDIDS)^[NCD]ET^CS) 0)^@)^@)^@)^@)ZQ
)@@G@@^@)^[BC(O^[]D-JCTF^[NC))+@@@@@@C@@@M         LINK  SABSDC .            GZR
)@@G@@ET BLOCK SD +@@@@[@I@M@J^@)^@)^@)^@)^[HD9QC*)^[^ET]DTNE)?C-NCLFET^^@,^@)ZS
)@@G@@^@)^[NCDQC*)D9TE- EK)CLGD9#DS)ET^^@)+@@@@@@D@@@M         MOVE  DSBKST,DSZT
)@@G@@BKSD .     SAVE OYTER BLOCK SD+@@@@[@B@M@J^@)^@)^@)^@)^[NE-JEL ^[SAS?C-NZU
)@@G@@CLFET^^@,^@)+@@@@@@ @@@M         STORE X3,DSBKSD .    +@@@@[@K@M@J^@)^@)ZV
)@@G@@^@)^@)^[DC0)^@)^[^ET[C-]D0?D1UC(MD8)E-CC(I -NCD#C)1AK) 0) *"^[NE-DD-G^[]ZW
)@@G@@D-JCTF^[UC(MD8)^@)+@@@@@@F@@@M         IF    DSADBN,NZERO THEN,SACD12 . ZX
)@@G@@-> STILL BLOCK ZERO     +@@@@[@I@M@J^@)^@)^@)^@)^[NE-JEL ^[SAS?C-NCD]ADNZY
)@@G@@^@,^@)^@)^@)^@)^[NC(O^[]D-JCTF^@1^[DD0)ETODS)^@)+@@@@@@D@@@M         STOZZ
)@@G@@RE X3,DSAB1S .         SET BLOCK 1 IN STK +@@@@[@^@M@JET[CT^AC2^@)^[GCD]AA
)@@G@@C(G^@,+@@@@@@#@@@MSACD12   LABEL .  +@@@@[@H@M@J^@)^@)^@)^@)^[GDDIDS)^[ AB
)@@G@@CDGC(SE@) 0)^@)^@)^@)^@)^@)^[BC(O^@*C(SE[M - F[KEK(^@)+@@@@@@D@@@M      AC
)@@G@@   LINK  EALEXP .            GET (EXPR,EXPR)    +@@@@[@F@M@J^@)^@)^@)^@)AD
)@@G@@^[BD9OD8)^[NCD#C)7AC) 0)^@)^@)^@)^@)^@)^@!B0)C1[DDG^@)+@@@@@@B@@@M      AE
)@@G@@   GOTO  SACD71 .            -> FAIL+@@@@[@A@M@J^@)^@)^@)^@)^[GDDIDS)^[NAF
)@@G@@CD#DS7A*) 0)+@@@@@@^@@@M         LINK  SACK75 . +@@@@[@^@M@JET[CT^AC3^@)AG
)@@G@@^[GCD]C(G^@,+@@@@@@#@@@MSACD13   LABEL .  +@@@@[@H@M@J^@)^@)^@)^@)^[NC(OAH
)@@G@@^@)^@0AK0A@?D9I -^ET[E[AF@) 0)^@)^[NC(O^[#D[ CTF^[KEL C1DF@)+@@@@@@D@@@MAI
)@@G@@         SET   0200,ON,DSAPFX .    SET CHECK PREFIX   +@@@@[@F@M@J^@)^@)AJ
)@@G@@^@)^@)^[ED(K^@)^@1^@,^@)^@)^@)^@)^@)^@)^@)^@)^[MC(OE(MD0)^@)+@@@@@@B@@@MAK
)@@G@@         JMP   1 .                 RETURN +@@@@[@^@M@JET[CT^A81^@)^[GCD]AL
)@@G@@C(G^@,+@@@@@@#@@@MSACD71   LABEL .  +@@@@[@A@M@J^@)^@)^@)^@)^[GDDIDS)^[NAM
)@@G@@CD#DS7A*) 0)+@@@@@@^@@@M         LINK  SACK75 . +@@@@[@H@M@J^@)^@)^@)^@)AN
)@@G@@^[NCD ELM^[NCD D*0A8?ET[C*) 0)^@)^@)^@)^[DD(KELJE[ EK)CTCC(#DS)^@)+@@@@@AO
)@@G@@@D@@@M         SAERR SAEM07,SAE .        IMPROPER CHECK     +@@@@[@H@M@JAP
)@@G@@^@)^@)^@)^@)^[GDDIDS)^[ CD]DS1^@,^@)^@)^@)^@)^@)^@)^[]CD#DTPE@)^9#D[ CTFAQ
)@@G@@^8)^@)+@@@@@@D@@@M         LINK  EABK1 .             BACKUP 'CHECK'     AR
)@@G@@+@@@@[@^@M@J^@)^@)^@)^@)^[ED(K^@,^@)+@@@@@@#@@@M         JMP .    +@@@@[AS
)@@G@@@^@M@JET[CTFA85 K)^[GD-JCS) 0)+@@@@@@#@@@MSACK75*  LLOC .   +@@@@[@J@M@JAT
)@@G@@^@)^@)^@)^@)^[GD9[C))^[[A8?C-NCLFET^^@,^@)^@)^@)^@)^[MC(NE-JEL ^[JE(OC(MAU
)@@G@@^[]D-JCTF^[NC))^@)+@@@@@@E@@@M         LOAD  A7,DSBKSD .         RESTOREAV
)@@G@@ OUTER BLOCK SD   +@@@@[@C@M@J^@)^@)^@)^@)^[HD9QC*)^[^ET]DTNC)?C-NCLFETOAW
)@@G@@^@,^@)+@@@@@@ @@@M         MOVE  DSBKSD,DSBKST .+@@@@[@B@M@J^@)^@)^@)^@)AX
)@@G@@^[NE-JEL ^[[A8?C-NCLFETO^@,^@)+@@@@@@ @@@M         STORE A7,DSBKST .    AY
)@@G@@+@@@@[@^@M@J^@)^@)^@)^@)^[GDLHE@) 0)+@@@@@@#@@@M         LJMP .   +@@@@[AZ
)@@G@@@[@M@J 0)^@)+@@@@@@[@@@M.     +@@@@[@[@M@J 0)^@)+@@@@@@[@@@M.     +@@@@[BA
)@@G@@@[@M@J 0)^@)+@@@@@@[@@@M.     +@@@@[@H@M@JETTCT^D9A^@)^[GCD]C(G^@,^@)^@)BB
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[OE(MD0)D9AC0)C1 CDOE(MC*)+@@@@@@D@@@MSYCDOF   LABBC
)@@G@@EL .                   TURN OFF FEATURE   +@@@@[@K@M@J^@)^@)^@)^@)^[GDDIBD
)@@G@@DS)^[NFD#C-OES) 0)^@)^@)^@)^@)^@)^[NC( ^[DC0)D9KE-DD9I^[[D-MC([C-T^[DD0)BE
)@@G@@ETOD(O+@@@@@@F@@@M         LINK  SYCDTS .            SEE IF OPTION ALREABF
)@@G@@DY IN STMT  +@@@@[@G@M@J^@)^@)^@)^@)^[BD9OD8)^[NFD#C- EK) 0)^@)^@)^@)^@)BG
)@@G@@^@)^@!B1TE(K^@!^[ ELMD9M+@@@@@@C@@@M         GOTO  SYCDER .            -BH
)@@G@@>YUP - ERROR+@@@@[@H@M@J^@)^@)^@)^@)^[GD9[C))^[[AS?C-NCD#C-A^@,^@)^@)^@)BI
)@@G@@^@)^[OE(MD0)D9KE-DD9I^[JC1A^@)+@@@@@@D@@@M         LOAD  A3,DSACDF .    BJ
)@@G@@     TURN OPTION OFF    +@@@@[@A@M@J^@)^@)^@)^@)^[JEK)^@)^[[AS?CC9^@,^@)BK
)@@G@@+@@@@@@^@@@M         OR    A3,A9 .  +@@@@[@B@M@J^@)^@)^@)^@)^[NE-JEL ^[[BL
)@@G@@A)?C-NCD#C-A^@,^@)+@@@@@@ @@@M         STORE A4,DSACDF .    +@@@@[@F@M@JBM
)@@G@@^@)^@)^@)^@)^[BD9OD8)^[NCD#C)1AS) 0)^@)^@)^@)^@)^@)^[MC(OE(MD0)^@)+@@@@@BN
)@@G@@@B@@@M         GOTO  SACD13 .            RETURN +@@@@[@[@M@J 0)^@)+@@@@@BO
)@@G@@@[@@@M.     +@@@@[@[@M@J 0)^@)+@@@@@@[@@@M.     +@@@@[@H@M@JETTCT^D9I^@)BP
)@@G@@^[GCD]C(G^@,^@)^@)^@)^@)^@)^@)^@)^@)^@)^[ D1[CLGC*)CTJD1^DDODDJD0)+@@@@@BQ
)@@G@@@D@@@MSYCDON   LABEL .                   ENABLE CONDITION   +@@@@[@M@M@JBR
)@@G@@^@)^@)^@)^@)^[GD9[C))^[[AS?C-GF[DC0) 0)^@)^@)^@)^@)^[NC( ^[DC0)D9IC*)D9ABS
)@@G@@^@9^[ D1[CLGDDIC8)CTJD1^DDODDJD1N^@)+@@@@@@G@@@M         LOAD  A3,DLXIF BT
)@@G@@.          SEE IF ONE OF 9 ENABLING CONDITIONS  +@@@@[@J@M@J^@)^@)^@)^@)BU
)@@G@@^[DC0)^@)^[[AS?C9O -[CT#C-UC)!CD#CT^ETD -D^[OD[ D0?ETTCT^C(M^@,^@!B1JD9KBV
)@@G@@ES)^@)+@@@@@@E@@@M         IF    A3,GT,ACCDZD-ACCDSI,I THEN,SYCDER . ->OBW
)@@G@@OPS   +@@@@[@I@M@J^@)^@)^@)^@)^[GDDIDS)^[NFD#C-OES) 0)^@)^@)^@)^@)^@)^[NBX
)@@G@@C( ^[DC0)CDKE[ CDMC(^^[TC(O^@)+@@@@@@D@@@M         LINK  SYCDTS .       BY
)@@G@@     SEE IF APPEARED YET+@@@@[@E@M@J^@)^@)^@)^@)^[BD9OD8)^[NFD#C- EK) 0)BZ
)@@G@@ *"FDPE@) *)C(MELJEK)^@)+@@@@@@B@@@M         GOTO  SYCDER . ->YUP - ERROCA
)@@G@@R     +@@@@[@B@M@J^@)^@)^@)^@)^[GD9[C))^[[AS?C-NCD#C-I^@,^@)+@@@@@@ @@@MCB
)@@G@@         LOAD  A3,DSACDN .    +@@@@[@A@M@J^@)^@)^@)^@)^[JEK)^@)^[[AS?CC9CC
)@@G@@^@,^@)+@@@@@@^@@@M         OR    A3,A9 .  +@@@@[@B@M@J^@)^@)^@)^@)^[NE-JCD
)@@G@@EL ^[[A)?C-NCD#C-I^@,^@)+@@@@@@ @@@M         STORE A4,DSACDN .    +@@@@[CE
)@@G@@@F@M@J^@)^@)^@)^@)^[BD9OD8)^[NCD#C)1AS) 0)^@)^@)^@)^@)^@)^@!B1MC(OE(MD0)CF
)@@G@@+@@@@@@C@@@M         GOTO  SACD13 .            ->RETURN     +@@@@[@[@M@JCG
)@@G@@ 0)^@)+@@@@@@[@@@M.     +@@@@[@^@M@JETTCT^C(M^@)^[GCD]C(G^@,+@@@@@@#@@@MCH
)@@G@@SYCDER   LABEL .  +@@@@[@G@M@J^@)^@)^@)^@)^[NCD ELM^[NCD D(KC*?ET[C*) 0)CI
)@@G@@^@)^@)^@)^[KEL C1DF@)C(MELJEK)+@@@@@@C@@@M         SAERR SAEMPE,SAE .   CJ
)@@G@@     PREFIX ERROR +@@@@[@H@M@J^@)^@)^@)^@)^[ED(K^@,^@)^@)^@)^@)^@)^@)^@)CK
)@@G@@^@)^@)^@)^@!B1 ELMD9M^[MC(OE(MD0)^@)+@@@@@@D@@@M         JMP .          CL
)@@G@@           ->ERROR RETURN     +@@@@[@[@M@J 0)^@)+@@@@@@[@@@M.     +@@@@[CM
)@@G@@@[@M@J 0)^@)+@@@@@@[@@@M.     +@@@@[@[@M@J 0)^@)+@@@@@@[@@@M.     +@@@@[CN
)@@G@@@[@M@J 0)^@)+@@@@@@[@@@M.     +@@@@[@K@M@JETTCT^E-N^@)^[GD-JCS) 0)^@)^@)CO
)@@G@@^@)^@)^@)^@)^@)^@)^@)^[NC( ^[DC0)E[MC(ADDS^[[E[MC([C-T^[DD0)ETOD(O+@@@@@CP
)@@G@@@F@@@MSYCDTS   LLOC .                    SEE IF PREFIX APREADY IN STMT  CQ
)@@G@@+@@@@[@J@M@J^@)^@)^@)^@)^[GD9[C))^[SA*?C-GF[DC0) 0)^@)^@)^@)^@)^[BC(O^[GCR
)@@G@@D9R^[JEL^C(M^[KEL C1DF@)E-TE[ +@@@@@@E@@@M         LOAD  X5,DLXIF .     CS
)@@G@@     GET LOW ORDER PREFIX TYPE+@@@@[@I@M@J^@)^@)^@)^@)^[GD9[C))^[[BC?AC?CT
)@@G@@DC) 0)^@)^@)^@)^@)^@)^[NC(O^[GD9R^[JEL^C(M^[JD1 ^[]DDO+@@@@@@E@@@M      CU
)@@G@@   LOAD  A9,1,I .            SET LOW ORDER ONE BIT    +@@@@[@J@M@J^@)^@)CV
)@@G@@^@)^@)^[ND-]^@)^[[BC?A@?F@5^@,^@)^@)^@)^@)^@)^[NCT[D- ^[OD8)E[MD9KC(M^[GCW
)@@G@@D9#CDODDJD0)+@@@@@@E@@@M         SLB   A9,0,X5 .           SCALE TO PROPCX
)@@G@@ER LOCATION +@@@@[@B@M@J^@)^@)^@)^@)^[GD9[C))^[[A8?C-NCD#C-I^@,^@)+@@@@@CY
)@@G@@@ @@@M         LOAD  A7,DSACDN .    +@@@@[@A@M@J^@)^@)^@)^@)^[[D1^^@)^[[CZ
)@@G@@A8?CC9^@,^@)+@@@@@@^@@@M         AND   A7,A9 .  +@@@@[@H@M@J^@)^@)^@)^@)DA
)@@G@@^[DC0)^@)^[[B@?D1  )0 -D^[OD[ D0?D-ED(K^@,^@!B1[D-MC([C-T^[JD0)^@)+@@@@@DB
)@@G@@@D@@@M         IF    A8,NE,0,I THEN,LJMP . ->ALREADY ON     +@@@@[@B@M@JDC
)@@G@@^@)^@)^@)^@)^[GD9[C))^[[A8?C-NCD#C-A^@,^@)+@@@@@@ @@@M         LOAD  A7,DD
)@@G@@DSACDF .    +@@@@[@ @M@J^@)^@)^@)^@)^[[D1^^@)^[[A8?CC9+@@@@@@^@@@M      DE
)@@G@@   AND   A7,A9    +@@@@[@H@M@J^@)^@)^@)^@)^[DC0)^@)^[[B@?D1  )0 -D^[OD[ DF
)@@G@@D0?D-ED(K^@,^@!B1[D-MC([C-T^[JC1A^@)+@@@@@@D@@@M         IF    A8,NE,0,IDG
)@@G@@ THEN,LJMP . ->ALREADY OFF    +@@@@[@^@M@J^@)^@)^@)^@)^[GD9#CDG^@,+@@@@@DH
)@@G@@@#@@@M         LOCAL .  +@@@@[@J@M@J^@)^@)^@)^@)^[GDDIDS)^[NCDKE-[CS) 0)DI
)@@G@@^@)^@)^@)^@)^@)^[KE(O^[QCDGDD^^[KEL C1DF@)DDI^[]CTJC- +@@@@@@E@@@M      DJ
)@@G@@   LINK  SAPTAC .            PUT VALID PREFIX IN BCODE+@@@@[@G@M@J^@)^@)DK
)@@G@@^@)^@)^[ED(K^@)^@1^@,^@)^@)^@)^@)^@)^@)^@)^@)^[QCDGDD^^[MC(OE(MD0)+@@@@@DL
)@@G@@@C@@@M         JMP   1 .                 VALID RETURN +@@@@[@[@M@J 0)^@)DM
)@@G@@+@@@@@@[@@@M.     +@@@@[@[@M@J 0)^@)+@@@@@@[@@@M.     +@@@@[@[@M@J 0)^@)DN
)@@G@@+@@@@@@[@@@M.     +@@@@[@[@M@J 0)^@)+@@@@@@[@@@M.     +@@@@[@[@M@J 0)^@)DO
)@@G@@+@@@@@@[@@@M.     +@@@@[@G@M@JET[C(HA@7^@)^[ EDP^@)^@3B@) 0)^@)^@)^@)^@)DP
)@@G@@^@)^@)^@)^[#D[ CTF^[ ELMD9M^@)+@@@@@@C@@@MSAEM07   EQU   38 .           DQ
)@@G@@     CHECK ERROR  +@@@@[@H@M@LIT-G(!GT=^@)^[>ID5^@)^@6^@,^@)^@)^@)^@)^@)DR
)@@G@@^@)^@)^@)^[!HD3IT(H1$^@*G(8I[2 C)^@)+@@@@@@D@@@MSAEMCD   EQU   6 .      DS
)@@G@@           MISSING (EXPR)     +@@@@[@J@M@JET[C(HE[ ^@)^[ EDP^@)^@1AC4^@,DT
)@@G@@^@)^@)^@)^@)^@)^@)^@)^@)^[KEL C1DF@)C(MELJEK) *)DDBD1JEL C))+@@@@@@E@@@MDU
)@@G@@SAEMPE   EQU   114 .                 PREFIX ERROR - IGNORED +@@@@[@J@M@JDV
)@@G@@ET[C(HAC0AK)^[ EDP^@)^@6A*) 0)^@)^@)^@)^@)^@)^@)^@)^[ID9#D[ CTF^[PET C))DW
)@@G@@C1JEK)CTCC(#DS)^@)+@@@@@@E@@@MSAEM102  EQU   65 .                NOCHECKDX
)@@G@@ USED FOR CHECK   @#@J@ISAEMSG   EQU   0  +@@@@[@ @M@JET[C(HETB^@)^[ EDPDY
)@@G@@^@)^@1AC2^@)+@@@@@@#@@@MSAEMSG   EQU   112+@@@@[@K@M@JET[C(HD81^@)^[ EDPDZ
)@@G@@^@)^@1AC2^@,^@)^@)^@)^@)^@)^@)^@)^@)^[#D9IC-DE-DD9I^[ ELMD9M ))C(MELJEK)EA
)@@G@@E(NC(^+@@@@@@F@@@MSAEMO1   EQU   112 .                 CONDITION ERROR, EB
)@@G@@ERROR USED  @#@J@ISAEMSI   EQU   0  +@@@@[@ @M@JET[C(HETD^@)^[ EDP^@)^@1EC
)@@G@@AC3^@)+@@@@@@#@@@MSAEMSI   EQU   113@]@J@I         END+@@@@[@#@M@J^@)^@)ED
)@@G@@^@)^@)^[ D1^+@@@@@@]@@@M         END___        ->YUP - ERROR+@@@@[@H@M@JEE
)@@G@@*[S@@@*SDFF*@ @@@P.        EXPRESSION ANALYZER  @A@@@P. DESTROYS REGISTEEF
)@@G@@RS X2-X6 A7-A8    @ @@@P. SETS         X6=PAREN STACK @#@@@P         AXREG
)@@G@@$ .   @#@@@P         DCLRG .  @#@@@P         REGS .   @#@@@P         ALREH
)@@G@@EG .  @#@@@P         UNLIST . @]@@@P@ADD PLTVDS @#@@@P         LIST .   EI
)@@G@@@]@@@P@ADD PLSAW  @#@@@P         CEND .   @C@@@PFJMP     EQUF  0,X10 .  EJ
)@@G@@           FAST RETURN  @#@@@P         PLWORD . @#@@@P         PLSD .   EK
)@@G@@@#@@@P         PLAC .   @[@@@P.     @[@@@P.     @#@@@PEXPR     CSECT 3 .EL
)@@G@@@E@@@PEANNN    EQU   0000000 .           PROH: * , OPER IN EXPR   @E@@@PEM
)@@G@@EAYYY    EQU   0010101 .           PERM: * , OPER IN EXPR   @E@@@PEANNY EN
)@@G@@   EQU   0000001 .           PROH: * , PERM: OPER     @ @@@P.        PAREO
)@@G@@ENTHESIS TYPES    @C@@@PSAPTEA   EQU   0 .                 ARITHMETIC   EP
)@@G@@@B@@@PSAPTEB   EQU   1 .                 LIST   @C@@@PSAPTEE   EQU   2 .EQ
)@@G@@                 EXPRESSION   @C@@@PSAPTEV   EQU   3 .                 VER
)@@G@@ARIABLE     @B@@@PSAPTED   EQU   4 .                 DO     @B@@@PSAPTEFES
)@@G@@   EQU   7 .                 ANY    @C@@@PSAPTEI   EQU   8 .            ET
)@@G@@     INACCESSABLE @[@@@P.     @^@@@P.        TABLES FOR SYNA@D@@@P.     EU
)@@G@@   +--------------------*[S@@[*SDFF*@[@@@@ *0^@)@[@@@@^@,^@)@G@@@@^@,^[IEV
)@@G@@G(4I9\IL:^[(H14G(2G1-GT>^[<H9,G1(G95IL-I-(H9,^[&H92^[*H93I))E(HC)2@[@@@@EW
)@@G@@^@,^@)@M@@@@^@,^[OH[>^[&HD2IT4^[0H92I-(H9,^[\G0)I-*HD3^[>H->H(>H14^[(IS)EX
)@@G@@G9>H1>IL-I->G))GL9^[4H[>^[<H9,G1(G95IL-I-(H9,^@)@K@@@@^@,^[3HT>H->I-\H0,EY
)@@G@@^@)DD4^[(IS)I-*G*)HD,I1\GT-I-(H9,^[\G0)I-*G*)HD,I->IL&GD<G*)G->G1(H1(I-(EZ
)@@G@@H9,IS,@[@@@@^@,^@)@E@@@@^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)FA
)@@G@@^@)^@)^@) 0)@E@@@@^@)^@)^@)^@)^@)^-DH1<H-5G->^@)^9HCDSEK=^8)^@)^@)^@)^@)FB
)@@G@@^@) 0)@L@@@@^@)^@)^@)^@)^@)^-DH1<H-5G->^@)^9#D9IC1DC8\D([ETH^8)^@)^@) 0)FC
)@@G@@C9>I))GT\H1&HD$I(2GD4HD\H0)GT\H13I--H14IS)@O@@@@^@)^@)^@)^@)^@)D1 E-DC1^FD
)@@G@@C(AES)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)DD,HD4HD-H-(JL>^[,G(4I9\IL:^[(H14G(2FE
)@@G@@G1-GT>^[=G(&HD,HD4HD\H13@E@@@@^)*A@(^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)FF
)@@G@@^@)^@)^@)^@)^@) 0)@[@@@@^@,^@)@H@@@@^@,^@)D1>I-7H92HS)HD,I->IL&GD<G*)I--FG
)@@G@@GL?G*)G9>H1>IL-I-(H9,^[&H92^[*H93I))E(HC)2@[@@@@^@,^@)@E@@@@D1 E-DC1OCD]FH
)@@G@@ K)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@)^@) 0)@E@@@@^@)^@)^@)^@)^@)D1 FI
)@@G@@E-DC1OCD]^@)^9 D01^8?AS?A@)^@$DS2A@0^8)^@)@E@@@@^@)^@)^@)^@)^@)D1 E-DC1OFJ
)@@G@@CD]^@)^9DD9#AC$ )2 )0^@)^9AC(K^8)^@)@E@@@@^@)^@)^@)^@)^@)D1 E-DC1OCD]^@)FK
)@@G@@^9GD9JE@1^8?A))^@$D-JD9K^8)^@)@E@@@@^@)^@)^@)^@)^@)D1 E-DC1OCD]^@)^9NFDIFL
)@@G@@CS1^8?A8?A@)^@$ETTD1#^8)@E@@@@^@)^@)^@)^@)^@)D1 E-DC1OCD]^@)^9NFDICS2^8?FM
)@@G@@A8?A@)^@$ETTD1#^8)@E@@@@^@)^@)^@)^@)^@)D1 E-DC1OCD]^@)^9NFDICS3^8?A8?A@)FN
)@@G@@^@$ETTD1#^8)@[@@@@ 0)^@)@C@@@@ 0)^[#IL>GD4G*)HD,I->IL&GD<G*)I-9I[>^[4GD+FO
)@@G@@H-> 0)@[@@@@ 0)^@)@#@@@@D1 E-DC1OFDK K)^@)@K@@@@^@)^@)^@)^@)^@)^-#C1N @$FP
)@@G@@CDNFDICS)^@)^@)^@)^8(^@)^@)^@)^@) 0)H1>I-7H92HS)HD,I->IL&GD<G*)I-9I[>^@1FQ
)@@G@@@K@@@@^@)^@)^@)^@)^@)^-#C1N @$C1 E@)^@)^@)^@)^@)^8(^@)^@)^@)^@) 0)H1>I-7FR
)@@G@@H92HS)HD,I->IL&GD<G*)I-9I[>^@2@K@@@@^@)^@)^@)^@)^@)^-#C1N @$DS2A@0^@)^@)FS
)@@G@@^@)^@)^8(^@)^@)^@)^@) 0)H1>I-7H92HS)HD,I->IL&GD<G*)I-9I[>^@3@K@@@@^@)^@)FT
)@@G@@^@)^@)^@)^-#C1N @$D-JD9K^@)^@)^@)^@)^8(^@)^@)^@)^@) 0)H1>I-7H92HS)HD,I->FU
)@@G@@IL&GD<G*)I-9I[>^@4@K@@@@^@)^@)^@)^@)^@)^-#C1N @$D1 E- F@)^@)^@)^@)^8(^@)FV
)@@G@@^@)^@)^@) 0)H1>I-7H92HS)HD,I->IL&GD<G*)I-9I[>^@5@K@@@@^@)^@)^@)^@)^@)^-#FW
)@@G@@C1N @$ETGDDK^@)^@)^@)^@)^8(^@)^@)^@)^@) 0)H1>I-7H92HS)HD,I->IL&GD<G*)I-9FX
)@@G@@I[>^@6@K@@@@^@)^@)^@)^@)^@)^-#C1N @$ETTD1#^@)^@)^@)^@)^8(^@)^@)^@)^@) 0)FY
)@@G@@H1>I-7H92HS)HD,I->IL&GD<G*)I-9I[>^@7@N@@@@D0=D1DC0=E-TE@%^@)^@:^@)^@)^@)FZ
)@@G@@A8)^@)^@)^@)^@)^@)^@)^@)^@) 0)H15H(+G(2^[\G0)HD,I->IL&GD<G*)I-9I[>IS)G->GA
)@@G@@G1(H1>G))^@)_@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GB
)@@G@@D9HC(KE)[DD^@@[K1<!NYI?@@@@GT*@@[@@@@@@@@@@@@@#)@@@@@@@@@@@@@@@@@@@@@@@@GC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GXC@@@@@@@@@@@@@@@@@@GU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HD
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HF
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HH
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HI
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HJ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HK
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HL
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HM
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HN
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HO
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HP
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HQ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HR
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HS
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HT
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HU
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HV
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HW
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HX
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HY
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HZ
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IA
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IB
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IC
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ID
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IE
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IF
)@@G@@INPUT$FILE$ TCFP        INET        Y)@)@@S@@@[^@@@@J$@@W@@W@@@@@@@@@@@@IG
)@@G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IH
)@@G@@GU\/$2@@@@@[@@@@@[[QUD&:D[SI%@NETIFTAB                @K[@@@]W9=2Y 07154II
)@@G@@6824   OPARA, NWANYINNA JOSEPHINE      202    0.                     0. IJ
)@@G@@@B@[@@ 219988993   PATCHAN, ROBERT MICHAEL      (A@@@@   202    0.      IK
)@@G@@               0. @H@[@@ 214561882   PERUSSE, PATRICK ROBERT         202IL
)@@G@@    0.                     0. @H@[@@ 578900705   TAKASHIMA, NARUHISA    IM
)@@G@@         202    0.                     0. @H@[@@ 215726504   TEIGEIRO, JIN
)@@G@@UAN JOSE             202    0.                     0. @H@[@@ 213881985  IO
)@@G@@ VANDERSALL, ERIC JOHN           202    0.                     0. @@@[@@IP
)@@G@@@H@[@@ 212562746   ANDERSON, RICHARD LEE           203    0.            IQ
)@@G@@         0. @H@[@@ 212021513   BASALO, LUIS MANUEL             203    0.IR
)@@G@@                     0. @H@[@@ 214829413   BASCH, JONATHAN DAVID        IS
)@@G@@   203    0.                     0. @H@[@@ 006006637   BUSS, DONNA MARIEIT
)@@G@@               203    0.                     0. @H@[@@ 213884088   COLLIIU
)@@G@@NS, SHIRLEY ANN            203    0.                     0. @H@[@@ 21986IV
)@@G@@9374   DEMERS, PATTON GRIER            203    0.                     0. IW
)@@G@@@H@[@@ 167423778   DOUGHERTY, MICHAEL PATRICK      203    0.            IX
)@@G@@         0. @H@[@@ 217921209   GAVLAK, ANGELIQUE MARIE         203    0.IY
)@@G@@                     0. @H@[@@ 218048006   HAREGOT, YONATHAN            IZ
)@@G@@   203  200.                   484. @H@[@@ 578047683   HARMON, PHILIP ANJA
)@@G@@THONY          203    0.                     0. @H@[@@ 220924986   HARPEJB
)@@G@@R, WILLIAM BRIAN           203    0.                     0. @ @[@@ 22090JC
)@@G@@3009   HERR, LYNDA GRACE(C@@@@               203    0.                  JD
)@@G@@   0. @H@[@@ 212040118   HODJATZADEH, MOHSEN             203    0.      JE
)@@G@@               0. @H@[@@ 220964860   HOUGHTON, BLAIR P.              203JF
)@@G@@    0.                     0. @H@[@@ 217883248   KIMBERLING, DAVID LEE  JG
)@@G@@         203    0.                     0. @H@[@@ 215946355   KIM, KI SEOJH
)@@G@@K                    203    0.                     0. @H@[@@ 214924722  JI
)@@G@@ KURTZ, STEPHEN CARL             203    0.                     0. @H@[@@JJ
)@@G@@ 266637903   LE, PHUONG OANH                 203    0.                  JK
)@@G@@   0. @H@[@@ 212888135   MALAK, JASON MATTHEW            203    0.      JL
)@@G@@               0. @H@[@@ 220766109   MAYER, WILLIAM PIERRE           203JM
)@@G@@    0.                     0. @H@[@@ 213020308   MC CALLUM, DAVID DOUGLAJN
)@@G@@S        203    0.                     0. @H@[@@ 218668336   MC GEE, KEVJO
)@@G@@IN DAVID             203    0.                     0. @H@[@@ 218587837  JP
)@@G@@ MOORE, JAMES FRANCIS            203    0.                     0. @H@[@@JQ
)@@G@@ 007000888   MURBACH, MICHAEL ERIC           203    0.                  JR
)@@G@@   0. @I__@@                 STUDENT                 SECTION  GRADE (MAXJS
)@@G@@   200.)    RAW GRADE   @@@[@@@H@[@@ 215902005   MURPHY, DAVID EUGENE   JT
)@@G@@         203    0.                     0. @H@[@@ 216967042   REYNOLDS, JJU
)@@G@@AMES THOMAS          203    0.                     0. @]@[@@ 212640094  JV
)@@G@@(F@@@@ ROCK, MELANIE LOUISE            203  200.                   968. JW
)@@G@@@H@[@@ 219983641   RUSSELL, ROBERT THOMAS          203    0.            JX
)@@G@@         0. @H@[@@ 215848000   SCOTT, MICHAEL DENNIS           203    0.JY
)@@G@@                     0. @H@[@@ 218963166   SHARMA, PARSHOTAM DASS       JZ
)@@G@@   203    0.                     0. @@@[@@@H@[@@ 579823589   BURRELL, CAKA
)@@G@@RLOS ANTONIO         204    0.                     0. @H@[@@ 579804325  KB
)@@G@@ CROOM, DAVID CHRISTOPHER        204    0.                     0. @H@[@@KC
)@@G@@ 127648535   FERMIN, MODESTO OCTAVIO         204    0.                  KD
)@@G@@   0. @H@[@@ 231867381   FORMAN, MATTHEW CALEB           204    0.      KE
)@@G@@               0. @H@[@@ 153425794   GILL, MARY KATHERINE            204KF
)@@G@@    0.                     0. @H@[@@ 212908306   KOWALSKI, MICHAEL PATRIKG
)@@G@@CK       204    0.                     0. @H@[@@ 217845814   MACKER, KARKH
)@@G@@AN                   204    0.                     0. @H@[@@ 217886285  KI
)@@G@@ RENICH, RICHARD ANDREW          204    0.                     0. @H@[@@KJ
)@@G@@ 220983811   RUBY, JOHN LAWRENCE             204    0.                  KK
)@@G@@   0. @H@[@@ 215988807   SHARP, MAUREEN MOLLOY           204    0.      KL
)@@G@@               0. @H@[@@ 214023710   SIDHU, SUKHWINDER SINGH         204KM
)@@G@@    0.                     0. @H@[@@ 214048106   SINGH, SUKHBIR         KN
)@@C@@         204    0.                     0. @@@[@@                        KO
@EOF
@COPY,IO  TEMP.1067-036-061,1067-036-061.
@FREE     TEMP.
